Consider three distinct points A,B,C on a plane. The sum of straight line distances from A to B and B to C is always greater than or equal to the straight line distance from A to C. Equality holds only when ABC is a degenerate triangle. This is the famous triangle inequality In this case, distance between points is measured by the Euclidean metric. ie, the distance between points (x1,y1) and (x2,y2) is given by sqrt((x1-x2)^2+(y1-y2)^2). However, this is not the only metric possible. Another common metric used is the Manhattan metric where the distance between the pair of points is given by |x1-x2|+|y1-y2|  You are given N distinct points on a plane where distances are measured using the Manhattan metric. Find the number of ordered triplets of distinct points (A,B,C) such that the sum of distances from A to B and B to C is equal to the distance from A to C.   Input The first line of input contains an integer T ( ≤ 10), the number of test cases to follow. Following this are the descriptions of T test cases. Each test case description begins with an integer N ( ≤ 50000), the number of points. Following this are N lines, each giving the x and y coordinates of a point (0 ≤ xi,yi ≤ 10^8) separated by a space.   Output Output T lines, each containing the number of ordered triplets of distinct points in every test case with the given property   Example  Input: 2 3 0 0 1 1 2 2 3 0 0 1 2 2 1  Output: 2 0  
ss[n]<=00 holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Dystopia consists of N cities. There are one-way roads connecting some pairs of cities. The dysfunctional state has recently seen a lot of protests to overthrow the tyrannical ruler and the government plans to use military patrol vehicles to make sure that the protests are suppressed. Every patrol vehicle is assigned a sequence of cities. If a patrol vehicle is assigned the cities c1,c2,...ck then it starts from the city c1 and takes the direct one-way road to c2, from there it takes the one-way road to c3 and so on. Finally the vehicle takes the one way road from ck to c1. This routine is repeated everyday to keep the protestors perpetually under fear.  Now note that:  Every city has to appear in exactly one vehicle's patrol sequence exactly once  Every patrol vehicle has to move - so it has to be assigned more than one city   The government does not have any limit on the number of patrol vehicles it can use. However, they want to make sure that the least possible amount of money is spent on the patrol mission and hence they want to minimise the total distance travelled by the patrol vehicles.  Given the road network of Dystopia, find the minimum total distance the patrol vehicles need to move so that all the cities can be patrolled. If it is impossible to organise a nationwide patrol with the given constraints, report the same.   Input First line of the contains T, the number of test cases (T ≤ 10) This is followed by the descriptions of the T testcases. The first line of the description contains two integers N and R, the number of cities and one way roads respectively (N ≤ 200,R ≤ 10000). The cities are numbered 1,2,3,...N This is followed by R lines, each representing a one way road by 3 integers N1, N2 and D : the start city, the end city and the length of the road respectively ( N1!=N2, 1 ≤ D ≤ 1000000). You are assured that there is no more than one one way road from any N1 to N2  Output For each test case output one line. If the patrol can be done, output the minimum total distance that the patrol vehicles have to travel. Otherwise output Impossible   Example  Input: 2 3 3 1 2 1 2 3 1 1 3 1 4 6 1 2 2 2 3 2 3 4 2 4 1 2 1 4 1 3 2 1  Output: Impossible 6  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl A[i][k] A[i][k] A[0] A[0] A[0] A[0] A[0] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 elem elem stderr stderr stderr stderr s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Phileas Fogg and Passepartout are now going on a road trip in their brand new car. They start at location A0 and need to go to AN. Their car has a capacity to hold only C units of fuel and can travel unit distance on unit amount of fuel. They start by filling some amount of fuel from the filling station at A0. On the way, there are several filling stations A1, A2,... AN-1. The cost of fuel is not the same at all filling stations. Find the minimum amount that they have to spend on fuel to make the journey.  Note that it is assured that the journey can be completed with the car of the given capacity.   Input The first line of input contains T (≤10), the number of test cases. Following this are the descriptions of the testcases The first line in the description of each test case contains two space integers N (≤50000) and C (≤10^8). This is followed by N lines, each containing an integer. The integer on the ith line is the distance from A0 to Ai and is ≤ 10^8. The distances are in increasing order. This is followed by N more lines, each containing an integer. The integer on the ith line is the cost of one unit of fuel at the filling station Ai-1 and is  ≤ 10^8.   Output Output one integer per test case, the minimum total amount that needs to be spent on fuel to complete the journey   Example  Input: 2 5 10 10 20 30 40 50 1 2 1 2 1 5 15 10 20 30 40 50 1 2 1 2 1  Output: 70 60 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Unlike Dystopia, the neighbouring nation of Utopia believes in economic development. To improve the economy of the nation, the Utopian government has decided to select some pairs of cities as sister cities and take steps to improve trade relations between each pair.  There are N cities in Utopia, numbered 1 to N. There are two-way roads  connecting some pairs of cities. The total number of roads in Utopia is R. Now the road network in Utopia has been created efficiently so that there is no road that is redundant. That is, there is exactly one way to travel between any pair of cities without using the same road twice. Now when a pair of cities is chosen as sister cities, the government wants to make sure that there is a direct road between them. Also, a given city cannot have more than one sister.  Given the road network of Utopia, find the number of ways of selecting K pairs of sister cities under these constraints. As the answer can be quite large, output it modulo 100000007.  For example, assume that there are 6 cities in Utopia. There are direct roads between the following pairs of cities : (1,2), (2,3), (2,4), (4,5), (4,6). Notice that  there is exactly one way to travel between any pair of cities. If the government wants to select two pairs of sister cities, it can do it in four ways : {(1,2),(4,5)}, {(3,2),(4,5)}, {(1,2),(4,6)}, {(3,2),(4,6)}   Input First line of the input contains T (≤10), the number of test cases. This is followed by the description of the test cases. The description of each test case begins with a line containing 3 space separated integers N (<400), R (<10000) and K (<400). Following these are R lines, each representing a road in Utopia. The line will contain two different space separated integers N1 and N2 implying that there is a two way road between N1 and N2. You are assured that the road network has the property as described in the problem statement.   Output For each test case, output modulo 100000007 the number of ways of selecting K pairs of sister cities satisfying the conditions in the problem statement.   Example  Input: 2 3 2 1 1 2 2 3 6 5 2 1 2 2 3 2 4 4 5 4 6  Output: 2 4 
{doThis {doThis {doThis {doThis {doThis ++ ++ ++ ++ ++ ++ ++ ++ ++ x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w _f _f _f _f _f _f _f _f _f _f _f practise practise practise a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00
A skier wants to ski down from the top of a mountain to its base. There are several possible routes, using different slopes enroute, and passing through some flat areas. The effort expended in skiing down a slope depends upon the length of the slope and the speed of skiing. For each slope, there is a maximum advisable speed. The skier wants to use a toute that minimizrs the average effort spent per unit distance traveled (i.e. the total effort expended divided by the total distance traveled).  The flat regions on the mountain are numbered 1 to N from top to bottom. The skier begins at level 1 and needs to reach level N. You are given the numbers of the flat regions each slope connects. Note that on a slope, one can only ski downwards. For each slope, you are also given the length of the slope and the maximum advisable speed for it. The effort expended in skiing down a particular slope is given by the following formula:  e = d*(70-s) if s ≤ 60, and e = d*(s-50) if s > 60  where e is the effort required, d is the distance traveled and s is the speed of travel.  You have to determine the minimum average effort per unit distance that the skier has to expend in order to reach the mountain base, while staying within the maximum advisable speed at every slope.   Input The first line of input gives the number of test cases T(≤20). This is followed by the descriptions of the test cases For each test case, the first line of input gives the number of flats, N (N ≤ 1000), and the number of slopes, R (R ≤ 20000), connecting them respectively. Each of the next R lines describes a slope by giving: the numbers of the flats at the top and the bottom of the slope, the maximum advisable speed for the slope (≤ 100), and the length of the slope (≤ 1000) respectively.   Output For each test case, output a single number (with four places after the decimal point, rounded up) that gives the minimum average effort per unit distance that needs to be expended to ski down from the mountain top to the base. The output for each test case should be on a separate line.   Example  Input: 2 4 5 1 4 30 60 1 2 50 40 1 3 60 20 2 4 60 50 3 4 50 50 3 3 1 2 50 40 1 3 40 20 2 3 20 30  Output: 14.4445 30.0000 
G[Query[i] dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Place-name game is a favourite pastime among the few children that go to school in Dystopia. The game is played as follows : One player says the name of a city and the next player has to say the name of a city that begins with the last letter of the said city. The game then goes on.  Dystopian cities recently went through a massive renaming. Now each city has a name that begins with a consonant and ends with a consonant.  Anaximander is a student with a very poor knowledge of geography. Hence he fares very poorly in the game. He has recently come up with a new idea. He would just remember the name of 21 Dystopian cities. He wants to choose the 21 cities such that there is exactly one city name starting with each consonant and exactly one city name ending with each. This would give him a good advantage in the game, whether he is playing first or second.  Given the names of the N cities in Dystopia, find out the number of ways Anaximander can select 21 city names out of the lot satisfying the properties. As this number can be very large, output it modulo 100000007.   Input The first line of the input contains N (≤1000), the number of cities. This is followed by N lines, each containing the name of a city in Dystopia. Each city name will begin and end with a consonant, and will contain at least 2 and at most 10 letters.   Output Output modulo 100000007 the number of ways Anaximander can choose 21 city names out of the N with the intended properties.   Example  Input: 23 BBBB CCCC DDDD FFFF GGGG HHHH JJJJ KKKK LLLL MMMM NNNN PPPP QQQQ RRRR SSSS TTTT VVVV WWWW XXXX YYYY ZZZZ BAAC CAAB  Output: 2 
fenwick fenwick {doThis L>R second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
It is after years that Dystopian Institute of Technology has got funds for upgrading their computers. However, the people in charge of the upgrade have decided to make this a chance to fill their own pockets rather. There are N computers in the DIT network, numbered 0 to N-1. Computer 0 is the main server which connects the network to the outer world. Some pairs of the computers are directly connected in the network. For other pair of computers to communicate with each other, they have to do it via some other computer. For example, if there are only 3 computers in the network and the only direct connections are 0-1 and 0-2, then 1 communicates with 2 using 0 as intermediate. There is no limit on the number of intermediate computers to be used for communication between a pair. Now, since the DIT network was built on the principle of minimum expenditure, the N computers have been made pairwise connected by using the minimum number of direct connections - ie, N-1. The upgrade contractor has decided to not do the work properly but pocket the entire funds instead. However, to show that he has done something, he will rearrange the computers. For example he could move the computer number 3 to where 2 was earlier, 2 to 1, 1 to 3, 4 to 5 and 5 to 4. The computer number 0 is special and cannot be moved. Direct connections between computers depend on the locations though. Hence if there was a direct connection earlier between 3 and 5, it will now be between 1 and 4 (since they have been placed at the locations 3 and 5 were at earlier). However, he has noticed something strange : the new direct connection between computers i and j works if and only if there was a direct connection between i and j earlier. Hence he wants to rearrange the computers in such a way that the pairs of computers which are connected directly now are the same pairs which were connected earlier. Given the computer network, count the number of ways the computers can be rearranged satisfying the conditions.  Input The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the test cases. Each description starts with a line containing the integer N, the number of computers in the network (1 ≤ N ≤ 10000). This is followed by N-1 lines, each containing a pair of integers i and j, denoting that computer i is directly connected to computer j. It is assured that these N-1 direct connections will make every pair of computers connected (via intermediates if needed).  Output For each test case, output the number of rearrangements of the computers. A rearrangement (p0,p1,p2...pN-1) of (0,1,2...N-1) is valid if the following conditions are satisfied:  p0 If there is a direct connection between i and j, there should also be a direct connection between pi and pj  Notice that (0,1,2...N-1) is considered a valid rearrangement of itself. Also, since the answer could be very big, output it modulo 1000000007  Example  Input: 1 6 0 1 0 2 0 3 3 4 3 5  Output: 4 
x*temp*temp%MOD x*temp*temp%MOD lft[i]=w steps<i+00 steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The Rubik's cube is perhaps the world's most popular intellectual toy. More than just the joy of solving, there is a lot of mathematics to it too. Consider a solved Rubik's cube. The six faces of the cube are named FRONT, BACK, UP, DOWN, LEFT and RIGHT respectively. An elementary move of the Rubik's cube is rotating a face by 90 degrees clockwise, 90 degrees anticlockwise or 180 degrees about an axis from the centre of the face to the centre of the cube. Any valid state of the Rubik's cube can be reached by applying these elementary operations one after the other. An elementary move is denoted in the following fashion. If a given face is rotated by 90 degrees clockwise about the axis passing from the centre of the face to the centre of the cube, the move is denoted by the first letter of the name of the face. If the rotation is anticlockwise by 90 degrees, the letter is followed by an apostrophe ('). If the rotation is by 180 degrees, the letter is followed by a 2. For example, a 90 degree clockwise rotation of the right face is denoted by R, a 90 degree anticlockwise rotation of the back face by B' and a 180 degree rotation of the top face by U2. The elementary moves are explained with the help of animations in the "Face turns" section of this page. The elementary moves can be combined to get a compound move of the cube. For example, URF2 denotes rotating the top face by 90 degrees clockwise, then the right face by 90 degrees clockwise followed by the front face by 180 degrees. In this problem you will be given a string describing a sequence of elementary moves on a solved Rubik's cube. Your task is to find out the number of times the sequence should be applied repeatedly to the cube to get back the original cube.  Input The first line of input gives T, the number of test cases (1≤T≤1000). Following this are T lines, each containing a string denoting a sequence of moves on the Rubik's cube. The string will contain only the characters U, D, L, R, F, B, ' and 2, and will be at most 1000 characters long. It is assured to be a valid sequence of elementary moves.  Output For each test case, output the minimum number of times (≥1) the move sequence must be applied to a solved Rubik's cube to get back the solved cube again.   Example  Input: 4 R RR2 RU R2R'R'  Output: 4 4 105 1 
vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given the coordinates of the vertices of a square in the 2-d plane. All vertex coordinates will be integers. Now consider all convex quadrilaterals which also have integer coordinates for their vertices such that the midpoints of their edges are the vertices of the original square. Find the sum of areas of all such quadrilaterals.  Input The first line of input gives T, the number of test cases (1≤T≤25000). Following this are the descriptions of the individual testcases. Each testcase consists of four lines, each line containing two space separated integers - the x and y coordinates of a distinct vertex of the square. The coordinate limits are -1000000000≤xi,yi≤1000000000. It is assured that the four vertices will correspond to a square.  Output For each testcase output the total area of quadrilaterals with the given property. Since the answer could be very large, give the answer modulo 100000007.   Example  Input: 2 0 0 1 1 1 0 0 1 0 1 1 0 0 -1 -1 0  Output: 0 4 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You must be familiar with the use of numeric keys to enter alphabets in mobile phones. A single numeric key when pressed gives a character. When pressed again, it changes to another and so on. Once the set of characters mapped to the key is exhausted, the key wraps around to the original character. The key mapping in this problem is the T9 mapping, restricted to lowercase english characters. The characters corresponding to the individual keys are:   2: a,b,c  3: d,e,f  4: g,h,i  5: j,k,l  6: m,n,o  7: p,q,r,s  8: t,u,v  9: w,x,y,z  For example, if you press the key 2 once, it prints the character 'a'. On pressing it again, it becomes 'b', then 'c', then back to 'a' and so on. Consider a string made of lowercase letters only. To enter this string into a mobile phone, a certain key sequence has to be entered with sufficient gaps in between. Suppose that the key sequence entered is correct but the gaps between keypresses are made arbitrarily. This can result in very different strings being printed. For example, let the string to be input be "mod". The key sequence corresponding to this is 6_6663 where '_' denotes a gap between the keypresses. Suppose the keys are pressed in the same order, but with gaps between keypresses arbitrary. This can result in 8 different strings: "mod", "nnd", "omd", "mmmmd", "mnmd", "mmnd", "nmmd" and "md". Given an input string, Find the number of possible strings printed by the key sequence corresponding to it.  Input The first line of the input consists of T, the number of testcases (1≤T≤10). Following this are T lines, each containing a string. The string will consist only of lowercase letters and will have a maximum length of 100000   Output For each string, output the number of strings corresponding to its key sequence. Since the answer can be very big, output it modulo 100000007   Example  Input: 2 mod iopc  Output: 8 64 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A function f is defined over natural numbers as: f(N) = ∑ di μ(di) Here the summation is over di, all positive integers which are factors of N. μ(n) is the Möbius function defined in the following way: If there exists a prime p such that p^2 is a factor of n, then μ(n)=0. Otherwise, if n has an odd number of prime factors, μ(n)=-1. If not, μ(n)=1. Thus the first few values for μ(n) (starting from 1) are 1, -1, -1, 0, -1, 1, -1, 0... Given an integer X (0 ≤ X ≤ 10^12), find the smallest natural number N such that |f(N)|>X.  Input The first line of the input contains T, the number of test cases (T ≤ 1000). Following this are T lines, each containing an integer X (0 ≤ X ≤ 10^12) corresponding to the test case.  Output For each test case in the input, output the smallest natural number N such that  |f(N)|>X.  Example  Input: 2 1 2  Output: 3 5 
print_bn ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The latest attraction for Techkriti 2112 is is a huge display of genetically modified plants. The arrangement consists of a cuboidal box of size Nx × Ny × Nz made of unit cubes. Each unit cube is identified using (x,y,z) coordinates - x ranges from 0 to Nx-1 and so on - and contains a plant genetically modified to show fluorescence. The natural colour of the plants is green. However, on exposing a plant to laser light, it changes colour to red. What is more interesting is that on exposing a red plant to laser light again, it changes back to green and this continues.  The organisers have realised that they can use the display to make many coloured patterns. They have with them a laser light sheet which they can place along an axis and move in one direction, exposing many plants to light at once. For example, if the plane of the light sheet is kept as the y axis and it is moved from a to b, every plant with the y coordinate between a and b inclusive will turn from green to red or red to green. Every time the laser is operated, it is only the plants with one specific coordinate in a certain range which are affected. You are told that initially all plants were green. Given the sequence of exposing plants to laser light, your task is to find the number of red coloured plants in certain cuboidal subregions of the display  Input The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the T test cases. The description of each test case starts with a line containing four space separated integers : Nx, Ny, Nz and Q (1 ≤ Nx,Ny,Nz ≤ 100000; Q ≤ 5000). The first three are the extents of the display in the three dimensions while Q is the number of queries which are to follow. Following this are Q lines, each describing a query. A query will be of one of the following forms :  0 i j : expose all plants with x coordinates i ≤ x ≤ j to laser light 1 i j : expose all plants with y coordinates i ≤ y ≤ j to laser light 2 i j : expose all plants with z coordinates i ≤ z ≤ j to laser light 3 x1 y1 z1 x2 y2 z2 : Report the number of red plants in the cuboidal region with (x1,y1,z1) and (x2,y2,z2) as diagonally opposite cells - ie, all red plants with x1 ≤ x ≤ x2, y1 ≤ y ≤ y2 and  z1 ≤ z ≤ z2 All individual coordinates will be valid - ie, every x coordinate will be such that 0 ≤ x ≤ Nx-1  and so on. Also, i ≤ j; x1 ≤ x2; y1 ≤ y2 and z1 ≤ z2  Output For every query of the form 3 x1 y1 z1 x2 y2 z2 in the input, output the number of red plants with coordinates constrained by x1 ≤ x ≤ x2, y1 ≤ y ≤ y2 and  z1 ≤ z ≤ z2  Example  Input: 1 3 4 5 5 0 1 2 1 2 3 3 0 0 0 1 2 3 2 3 4 3 1 1 1 2 2 2  Output: 12 4 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given natural numbers N and Q, an N-vector is defined as the ordered N-tuplet of integers (x0, x1, x2 ..... xN-1) such that 0 ≤ xi < Q for all i. The parent of coordinate xi is defined as x(i-1) mod N and the child of xi is defined as x(i+1)mod N. The IOPC transformation converts and N-vector x into an N-vector y with the coordinates given by :   If parent(xi) ≤ child(xi) then yi = (parent(xi) + child(xi))/2  If parent(xi) > child(xi) then yi = (parent(xi) + child(xi) + Q)/2 mod Q  Note that the division above is integer division - fractions are always rounded down. As an example, let N=4, Q=5. Let the N-vector x be (2,0,3,1). Then the transformed N-vector y is (3,2,0,5). An N-vector x is said to be invariant under the IOPC transformation if the yii for all values of i. Given N and Q, find the number of invariant N-vectors.  Input The first line of the input contains T, the number of test cases (T ≤ 10000). Following this are T lines, each consisting of two space separated integers N and Q (1 ≤ N,Q ≤ 10^9).  Output For each test case, output the number of invariant N-vectors. Since the answer could be very large, output it modulo 100000007.  Example  Input: 3 2 7 4 5 6 3  Output: 7 5 6 
holds Found que que que que que que que str[i+0] str[i+0] str[i+0] str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Terrorists from Dystopia had always been targeting Utopian civilians, but this is a new low that they have reached. A psychotic terrorist, disguised as a teacher, has taken some kindergarten students hostage. She first made every student write the names of the other students (s)he likes on a piece of paper and collected these "like lists". Now she plans to do the following: She will select a set of students at random from the lot. Then she will look at the "like lists" collected from the entire class. If a like list has the name of at least one selected student, it is considered a favourable like list. If the number of favourable like lists is greater than or equal to the number of students selected, she sends them back and picks another set of students. However, if the number of favourable like lists is less than the number of students selected, she plans to kill the selected students. You will be given the like lists of all the students. Your task is find out whether the class is safe or not. The class is said to be not safe if the terrorist can pick some set of students such that the total number of favourable like lists for them is less than the number of selected students, resulting in their execution.  Input The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the test cases. The description of each test case begins with a line containing the integer N, the number of students held hostage (N ≤ 500). The students are numbered from 0 to N-1. Following this are N lines describing the N like lists : The first line after N describes the like list of student 0, the second line the like list of student 1 and so on. Each like list contains some space separated integers. The first integer is K, the number of students the student likes (0 ≤ K ≤ min(50,N-1)). Following this are the identities of the students (s)he likes. The identities of the students will be between 0 and N-1. You are assured that no number will appear more than once in the list, and that no student will have his own number in the list.  Output For each test case, output "safe" if all the children are safe and "not safe" otherwise, according to the definition in the problem statement (quotes for clarity).  Example  Input: 2 3 2 1 2 2 2 0 2 0 1 3 2 1 2 1 0 1 0  Output: safe not safe 
vis[node] {doThis assigned +0] holds holds holds cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There is a new prodigy in town and he has challenged people to a game. They have to give him an integer N and he will immediately respond with a number which has more than N factors. What the prodigy really does is to do some complex calculations in his head to find out the smallest integer with more than N factors. However, he has a weakness - he knows to do those calculation only on numbers up to 10^19, so if the answer to be reported is more than 10^19, he will not be able to come up with his solution and will lose the game. Given the integer the people give to the prodigy, you need to report whether he wins the game or not. If he wins, also output his answer.  Input The first line of input contains T (T ≤ 25), the number of test cases. Following this are T lines, each containing an integer N (1 ≤ N ≤ 10^9) - the number which is given to the prodigy.  Output Output one line per test case. If the smallest integer X with more than N factors is bigger than 10^19 so that the prodigy does not win, print "lose". Otherwise print "win X" (quotes for clarity).  Example  Input: 3 3 5 12345678  Output: win 6 win 12 lose  
tw[j] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The terrorist strike on the kindergarten was universally condemned. The Utopians' patience had worn thin and they decided to wipe out the entire Dystopian terrorist base. Utopian military plans to do this with a coordinated strike. They have N military bases distributed all over the world. They also know the locations of the M terrorist camps. They will choose M out of their N military bases as attack bases and each will send a missile to one terrorist camp, all at the same time. By this they hope that they can eliminate Dystopian terrorism completely without giving them a chance to retaliate. You are given the locations of the military bases and the terrorist camps. Given that all missiles have the same maximum range, your task is to find out the minimum value of the missile range so that such a coordinated attack is possible. Of course, the minimum distance between any pair of points in this case is the geodesic distance on the spherical planet.  Input The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the T test cases. The description of each test case starts with a line containing 3 space separated integers N, M and R (1 ≤ M ≤ N ≤ 100; 1 ≤ R ≤ 10000). N and M are the number of military bases and terrorist camps respectively while R is the radius of the spherical planet. Following this are N lines containing the locations of the military bases - the locations are specified using two space separated numbers φ and λ, the latitude and longitude of the location on the planet in degrees. φ ranges from -90 to 90 while λ ranges from -180 to 180. Both numbers have 6 digits after the decimal point. Following these lines are M lines with the locations of the terrorist camps in the same fashion.  Output For each test case, output the minimum value of the missile range required so that the coordinated attack can be carried out. Format this number in the following fashion : #.######E*## - Here, # stands for a digit and * stands for a sign (+/-). The leading digit has to be non-zero.  Example  Input: 1 4 2 10 0.000000 0.000000 0.000000 90.000000 0.000000 180.000000 0.000000 -90.000000 90.000000 0.000000 -90.000000 0.000000  Output: 1.570796E+01 
interval interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In this problem you will be given a simple acyclic graph and asked to perform update or query operations on the graph. Update operations will involve adding an edge to the graph or removing one. You are assured that adding the given edges will not introduce cycles in the graph. Your task is to answer the queries which ask you to find the number of ways the graph can be coloured using K colours such that no two adjacent vertices have the same colour.  Input The first line of the input gives T, the number of test cases (T ≤ 100). Following this are the descriptions of the test cases. The description of each test case starts with a line containing three space separated integers N, M and Q (1 ≤ N ≤ 100, 0 ≤ M < N; Q ≤ 1000). N and M are the number of vertices and edges in the graph respectively (with numbering of vertices and edges starting from 0), while Q is the total number of update and query operations you will be asked to perform. Following this are M lines of the form i j, denoting that there is an edge between i and j. This is followed by Q lines, each of which will be in one of the three forms:   0 a b : Add an edge between the existing vertices a and b  1 a b : Remove the existing edge between the vertices a and b  K (K > 1) : Report the number of colourings of the graph with K colours such that no pair of adjacent vertices is coloured same  You are assured that the graph remains simple and acyclic at every stage.  Output For each query of type K (K > 1), output the number of ways the graph can be coloured validly using K colours. Since the answer could be very large, output it modulo 100000007.   Example  Input: 1 3 1 5 0 1 4 0 1 2 3 1 0 1 2  Output: 48 12 4 
mark[x][y]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The celebrities of Pretendia are just as snobbish as those anywhere else. If celebrity x admires celebrity y, Then y thinks too high of him/herself and does not admire x back. Also, if x admires y, x also admires everyone that y admires. All celebrities of Pretendia are going to be present at the premiere of Chapangg 2. True to their snobbish nature, the celebrities want to make sure that they do not wear dress made by the same designer who makes dress for someone who admires them. Given who admires whom in Pretendia, find out the minimum number of designers required to make dresses for all celebrities.  Input The first line of the input contains T, the number of test cases (T ≤ 10). Following this are the descriptions of the test cases. Each starts with two space separated integers N & M (1 ≤ N ≤ 1000;0 ≤ M ≤ 40000). N is the number of celebrities in Pretendia and celebrities are numbered from 0 to N-1. Following this are M lines of the form i j (0 ≤ i,j < N) and tells you that celebrity i admires celebrity j. Taken together, these M lines  will satisfy the conditions in the problem statement.  Output For each test case, output the minimum number of designers required so that every celebrity can wear a dress made by someone who does not design dresses for any of his admirers.  Example  Input: 1 5 6 0 2 1 2 2 3 0 3 1 4 2 4  Output: 3 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj Bhardwaj #\n pins pins pins holds holds holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Dystopians have realised that corruption is the root cause for all their problems. They have decided to launch their mass protest against corruption by blocking one of the highways in the Dystopian capital. To make sure that the government notices their agitation, they want to make sure that the Prime Minister is also affected by the blocking. Their aim is to force the Prime Minister to choose an alternate route from the parliament to his house, which makes his journey longer All roads in the capital are two-way. The road network is such that no more than one road connects a pair of junctions directly. Also, every junction in the capital is connected to every other junction by some sequence of roads. Given the road map of the capital, find out the minimum distance the Prime minister has to travel to reach home from the parliament if the anti-corruption movement blocks one of the roads.  Input The first line of the Input contains T, the number of test cases (T ≤ 10). Following are the descriptions of the T test cases. Each starts with a line containing three space separated integers N, M and Q (1 ≤ N ≤ 1000; 1 ≤ M ≤ 20000; Q ≤ 10000). N is the number of junctions in the capital and are numbered from 0 to N-1 (0 is the location of the Parliament and N-1 is the location of the Prime Minister's home). M is the number of roads in the capital (numbered from 0 to M-1) and Q, the number of queries you have to answer. Following this are M lines, each containing three space separated integers i, j and d (0 ≤ i,j < N; 1 ≤ d ≤ 10^5), denoting that there is a road between junctions i and j having distance d. Q lines follow this, describing the queries you need to answer. Each query will contain a single integer m, the index of the road that will be blocked (0 ≤ m < M).  Output For each query m in the input, output an integer - the minimum distance the Prime minister has to travel to reach home from the Parliament if the anti-corruption movement blocks only the road m. If blocking the road prevents the Prime Minister from reaching home, print "no route for corrupt ministers!!!" (quotes for clarity).   Example  Input: 1 4 4 2 0 1 2 1 2 2 0 2 3 2 3 4 2 3  Output: 8 no route for corrupt ministers!!!  
vis[node] vis[node] ans[0][0]*d holds holds holds byte[] byte[] byte[] byte[] check[0]= check[0]= check[0]= check[0]= lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem
After the first series of protests disrupted the road traffic in Dystopia, the government decided to take counter measures. It chose a few of the roads as high priority roads and sent military vehicles to patrol them. The roads were chosen in a way that it was possible to move from any junction to any other junction just using the patrolled roads. Also, the number of roads chosen was the minimum possible (N-1, where N is the number of junctions). After this, people were able to travel without hindrance from the protestors and the protest wasn't taken seriously anymore. Hence the leader of the protest decided to take things to the next level. He decided that he would personally lead the group which blocks one of the patrolled roads - The military would not dare to touch the group then. Blocking a patrolled road would divide the road network into two parts A and B such that it would be possible to travel between every pair of junctions in A (and every pair of junctions in B) using patrolled roads alone but it would not be possible to move from a junction in A to a junction in B using patrolled roads alone. People then have to take unpatrolled roads with one junction in A and the other in B. The leader terms the number of such inter-part roads as the inconvinence factor for the patrolled road being blocked. Given the road network, find out the maximum inconvenience factor achievable by choosing the patrolled road to block.  Input The first line of the input contains T, the number of test cases (T ≤ 5). Following this are the descriptions of the T test cases. The first line of each test case contains two space separated integers N and M - The number of junctions and unpatrolled roads in the network(1 ≤ N ≤ 10000; 0 ≤ M ≤ 30000). Following this are N-1 lines, describing the patrolled roads in the network. Each line will contain two space separated integers i and j, denoting that there is a patrolled road between i and j. This is followed by M lines describing the unpatrolled roads in a similar fashion. You are assured that there is not more than one direct road between any pair of junctions.  Output For each test case, print the maximum value of inconvenience factor achievable among all the possible choices of the patrolled road to be blocked.  Example  Input: 1 6 3 0 1 1 2 1 3 3 4 3 5 0 2 0 4 4 5  Output: 2 
Bhardwaj Bhardwaj lst[00] lst[00] lst[00] lst[00] lst[00] ans/0 ans/0 ans/0 ans/0 holds holds holds holds holds holds seen seen seen lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 You are a young spy in the army of the Jedi, posted on the outer rim of the Tatooine. You learn that Darth Vader’s army is on the way to attack the Planet. You want to save Tatooine and you need help of the Jedi Council to defeat the army of Darth Vader. To seek Jedi help you have to inform the Jedi Council sitting at the Jedi Temple which is very far from where you are. You have a pod with you which runs on electricity and you would like to use it to travel to the Jedi Temple. But the battery of your pod lasts for only a fixed amount of time, C. There are many service stations on your way from the outer rim to the Jedi Temple and luckily for you, some of these allow you to recharge your pod’s battery. You are in a hurry and want to reach the Jedi Temple in as little time as possible. If you are late, then it might be impossible to save the peaceful planet of Tatooine from the dark forces of Darth Vader’s army. Given the time needed to travel between the service stations, you are asked to output the minimum time in which you would be able to reach the Jedi Temple.  Input The first line of each input contains four space separated integers, N M P C where  N: The number of service stations including 0 for the starting point and N-1 as the location of the Jedi Temple. M: The number of 1-length paths existing between pairs of N service stations P: The number of service stations which allow you to recharge your battery C: The maximum time for which your battery runs, after you had charged it completely   The next line contains P space separated integers denoting the service stations which allow you to recharge. This is followed by M lines, each containing three space separated numbers X Y T where T is the time required to travel between X and Y Assume that the initial charge in the pod is 0 and it takes negligible time to recharge your battery at the service stations (After all, being in Jedi army has its perks ;) ).  Output Output a single integer t which is the time required to travel from your initial position to the Jedi Temple. If it is not possible for you to reach the Jedi temple, print -1.  Constraints  1 ≤ N ≤ 300 1 ≤ M ≤ min(n*(n-1)/2, 5*10^4) 1 ≤ P ≤ N 1 ≤ C ≤ 10^7 0 ≤ X ≤ N-1 0 ≤ Y ≤ N-1 0 ≤ T ≤ 10^4   Example Input: 6 5 2 250 0 4 0 1 200 1 2 30 2 3 10 3 4 10 2 5 230  Output: 500 
dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 ans/0 ans/0 ans/0 ans/0 holds holds holds s[i-0][j]== s[i-0][j]== seen seen seen lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Bob is extremely bored, so he thinks of a game to play in the meanwhile. The game is as follows. He takes two integers N and M and tries to find twice the sum of the quotients of the integer division of (i * N) by M varying i from 0 to M-1 both included. But as he started computing the sums for larger values of M and N, things started becoming very complex. So he has asked for your help. You need to output the sum that Bob needs.  Input  The first line of the input contains an integer T denoting the number of test cases. Each of the next T lines contains two space separated integers M and N.  Output For each test case, output a single line containing the answer.  Constraints  1 ≤ T ≤ 10^5 1 ≤ M,N ≤ 10^8   Example Input: 1 2 3  Output: 2  
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD pra pra pra index/i index/i index/i x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  In the present world, Operating System is one of the most important tool. Its a big business and a lot of profit is generated by the operating system developers depending on the features they have implemented in their OS, which are demanded/required by the users. In one such instance, an operating system developer IOPC (International Operating Product Creators) developed a special type of operating system for their users. Their operating system had the following structure: The user is initially given a root directory, and the user is allowed to create new directories. Every time he creates a new directory, he must create a link between the new one and exactly one of the existing directories making sure that the new directory is accessible from the root directory. This structure gave them special features like there is only one way to move from one directory to another directory through the links created. For ease of debugging, they named their directories with integer values. Their product created a new revolution in the market. However, in a short time, another operating system developer Copycat Operating Systems (CCOS) launched a very similar OS with exactly the same features. Although the OS manual of the new product in the market had different numbers assigned to their directories. But IOPC detected foul play and are convinced that CCOS have stolen their code and just made some minor changes in it and presented it as their own. Since, you are one of the top programmers in the world. They have asked for your help to resolve this issue. After sufficient study, you have reached the conclusion that if the internal structure of the file system of two operating systems match after performing a certain set of operations on both of them, then they are the same. So, to ease your work, you have designed a test suite for this verification purpose. Your test contains performing some operations on both the operating systems and see what links are formed in each of the file systems. However, due to shortage of time, you forgot to ensure that the test suite performs the tests on both the operating systems in the same order. However, you are able to get the generated links and the root directory of the operating systems. Given this information, you have to print whether the Copycat Operating Systems have actually copied from IOPC or they just got lucky in developing a similar system.  Input  The first line of the input contains an integer T denoting the number of test cases. The description for each of the test cases starts from a new line. The first line of input for each test case contains an integer N, the number of directories (including the root) generated in the file systems of both the OS by the test suite. Next, follow descriptions for the file system (root and links structure) for both the operating systems, one after the other, each beginning from a new line and each containing N lines. The first line for each of the OS, contains an integer  R, the integer corresponding to the root. The next N-1 lines describe the link structure with the i^th line containing two space separated integers Ai Bi meaning that there’s a link between the directories with integer names Ai and Bi.  Output  The output must contain as many lines as the number of test cases T. For each test case print 1 if both the operating systems generate structurally same file systems (root and link structure) of directories when operated upon by the test suite, otherwise print 0.  Constraints  T ≤ 3 1 ≤ N ≤ 10^5 0 ≤ Ai, Bi, R ≤ N-1 for 1 ≤ i ≤ N-1   Example Input: 1 2 0 0 1 0 1 0  Output: 1     Note:  This problem will be tested on Cube (Pentium G860 3GHz)  
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD vis[node] vis[node] vis[node] vis[node] vis[node] vis[node] index/i index/i x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Ted (the popular talking bear) has been given a job at the printing firm. Looking at his previous employment record, the firm is watching very strictly on his work product. Recently, he has been assigned a task to print on a square sheet of dimension NxN. You may think of the sheet containing N^2 cells of dimension 1x1 each. Since, Ted is a lazy bear, he somehow steals two stamps, a horizontal printing stamp which covers a 1*2 block and a vertical printing stamp which covers a 3*1 block. He may use these two stamps in any order and as many times as he wants. But the sheets are old, if the sheet is stamped twice at any cell, it will tear off. Now, there is a shipment of sheets coming with varying sizes. But he observes that in some of the cases it is not possible to completely fill the square sheet with no overlapping stamps. So, he asks for your help in deciding whether it is possible to fill the square sheet with the stamps without any overlapping.  Input  The first line of the input contains an integer T, denoting the number of sheets in the shipment. It is followed by T lines each containing a single integer N denoting the side of the square sheet.  Output  For each test case, output a single line containing “YES” (without quotes) if it is possible to fill the square sheet without overlapping the stamps and “NO” (without quotes) otherwise.  Constraints  1 ≤ T ≤ 5*10^5 1 ≤ N ≤ 10^6   Example Input: 1 2  Output: YES  
holds holds holds holds holds holds holds holds holds holds holds holds holds holds seen 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Ned is quite bored in class. As he is very interested in Mathematics, he decides to develop a new number system which he would name after himself. Unlike the other “traditional” number systems, his system does not have “low-level” relationships like successors, predecessors etc. Rather the system is modeled in such a way that it has entities represented by numbers which are related via very complex classes and a mathematical relation R. The relation R is symmetric i.e. if  a R b , then  b R a but is not transitive.  He then asks his arch-rival Ted to solve a problem in this number system. The problem is to find a subset of a given set of N entities which satisfies the following property.  For every element a in this subset, the number of distinct elements in the subset which are related to a with the relation R is at-least K.  Ted, being a phony, runs to you for help. Help him in finding such a subset.  Input  The first line of input contains three space separated integers, N, the number of distinct entities, M, the number of different class relations and K, the size of this subset. Each of the M lines that follow contains two integers a and b, meaning that a and b are related by relation R.  Output  For each test case, output a single line containing an integer S, the size of such a maximum subset. If such a subset is not possible, output 0.  Constraints  1 ≤ N ≤ 10^5 1 ≤ M ≤ min{n*(n-1)/2, 5*10^5} 1 ≤ K ≤ N 0 ≤ a,b ≤ N-1   Example Input: 3 3 2 0 1 0 2 1 2 Output: 3  
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD index/i index/i index/i ++ x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice has been recruited as a new Professor at IIT Kanpur. There are a total of n+1 students in her class each having a unique rank in the range 0 to n. Each student gives a choice of having nCr assignments (r is the unique rank of that student), where nCr is the coefficient of the r^th term in the expansion of (1+x)^n. Alice loves her students so much that she wants her students to learn and do as many assignments as possible. She has gone crazy and thus she wants to give the minimum number (K, the same for all students) of assignments to each of her student, where K is divisible by the number of assignments requested by each of her students. She asks you for help. Help her to find the number of assignments she needs to give. As the answer can be very large, output it modulo 10^9+7.  Input The first line of the input contains an integer T denoting the number of test cases. This is followed by T lines each containing an integer n.  Output One line for each test case, giving the number of assignments (K) Alice needs to give to her students.  Constraints  T ≤ 10^5 1 ≤ n ≤ 10^5   Example Input: 3 1 4 5  Output: 1 12 10  
cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Master Yoda is teaching a young Padawan learner, an IIT Kanpur student, the knowledge and powers of a Jedi. During his training, one of the tasks he has to accomplish is to fly a starship across a 3D maze created by Master Yoda for his training. The maze is filled with virtual droids of the Empire’s Army at certain cells. The student has to fly the starship across the maze such that at no time the starship is in the same cell with any of the droids, otherwise he will fail the test and will be kicked out of the Jedi Training Camp. Description of the maze: The Maze is a 3-D grid of size (N+2) x C x D. It is a vertical stack of D layers where each layer is a 2-D grid containing N+2 rows and C columns. The first (index 0) and the last (index N+1) rows of each layer are filled with ‘O’ (open positions in the Maze), except that one cell in the first row of some layer will be marked ‘S’, the starting position of the student and his starship, and one cell in the last row of some layer will be marked with ‘D’, his destination. Every other cell in this grid will either contain an enemy droid marked with ‘X’ or an empty space marked with ‘O’.  The starship has an intelligent R2D2 robot installed which guides the student in flying the starship and deciding his path. The configuration of the grid is stored in the memory of R2D2. It is well known that Master Yoda is a very strict teacher when it comes to Jedi training. He has already computed the minimum number of moves it will take the student  to fly from the starting point and reach the destination already feeded in R2D2. Master Yoda realised that if the drones in the maze are kept static, it is too easy for R2D2 to plan a path. Thus, Yoda decides to use his Jedi powers to set the Maze in motion, moving certain rows and columns of all the layers, to add some difficulty to the task. But he won’t move the first and the last rows of any layer (which keeps ‘S’ and ‘D’ positions static), since that will be too much for a young Padawan learner, only the masters practice in such a grid.   As soon as the Young Padawan Learner (IITK student) starts the flight, Yoda sets the maze in motion. In each layer, the rows with indices 0 and N+1 remain stationary. For the first layer (the bottom-most layer which is index 0), the row with index 1 is moved towards the right 1 cell at a time (i.e. one cell to the right in each move). The row with index 2 moves to the left, row with index 3 to the right and so on. For the rest of the layers, each row (except rows with indices 0 and N+1) move in the direction opposite to that of the row just below. All the rows move one cell at a time (i.e. one cell in each move). The row motion is modular i.e. whatever position (‘X’ or ‘O’) leaves the corner of the maze on any side, comes back in the same row, the same layer on the other side.  Description of the motion for the starship: At all times, the starship must remain in the 3-D Maze of dimensions (N+2) x C x D. In each move, the starship may stay in its current cell or may move to the cell just adjacent to it, i.e. the starship may move one cell either to its right, or to its left in the same row, or one cell up or down in its column, or one cell up to the layer stacked above it or one cell down to the layer underneath keeping the row and columns indices the same. The motion of the starship isn’t modular unlike that of the rows. Although, the starship can’t share a cell with any droid at all times, it may jump over an approaching droid in the same row. It means if a droid is in the neighbouring cell of the starship, in the next move, both of them can exchange their positions without the student failing.    Input  The first line of the input contains an integer M denoting the maximum number of moves allowed. The next line contains three space separated integers N C and D denoting the dimensions of the Maze. The next N+2 lines contain C characters denoting the layer 0 of the Maze The next N+2 lines contain C characters denoting the layer 1 of the Maze . The next N+2 lines contain C characters denoting the layer D-1 of the Maze  Output Output an integer denoting the minimum number of moves needed to reach the destination. If it is not possible to reach the destination in less than equal to M moves then output -1  Constraints  1 ≤ M ≤ 4000 1 ≤ N ≤ 100 1 ≤ C ≤ 100 1 ≤ D ≤ 10   Example Input: 20 2 3 1 OOS OOO XXO OOD Output: 5  
holds holds holds holds holds holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Alice is teaching a class of N+1 students and she is planning a picnic for her students. Each of her students is given a distinct rank between 0 and N for identification which makes sure they don’t get lost during the picnic. She has brought with her many bags each completely filled with N^2chocolates. She wants to distribute them among her students. But, like every other teacher, she is not going to give them without making them do some math problems first. So, she asks each of her students to choose a number k equal to his/her rank, and do the following :   Find out the number of ways of selecting k chocolates from a set of N distinct chocolates.  Add his/her rank to N to get N’ and again find out the number of ways of selecting k chocolates from a set of N’ distinct chocolates.   She will give each of her students x * y chocolates, where x is the number that the student computed in the first step and y is the number computed in the second step. Now after calculating how many chocolates she will give in total, she starts taking them out from her bags. She picks a completely filled bag at first and starts taking out chocolates out until the bag is empty. Then, she chooses another completely filled bag and follows the same procedure. She wonders how much chocolates she will have to remove from the last bag.  As a programmer, she asks for your help to find out the number of chocolates she will have to remove from the last bag.  Input  The first line of the input contains an integer T denoting the number of test cases. Next follow T lines each containing an integer N for the test case. Assume that N is guaranteed to be a prime number.  Output  For each test case, output one line containing the number of chocolates Alice needs to remove from the last bag.  Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 31113   Example Input: 1 2  Output: 1  
it=v0[j][y] ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n xx<=r-0 xx<=r-0 xx<=r-0 ans/0 ans/0 ans/0 ans/0 ans/0 j++ j++ j++ j++ interval interval interval interval cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Princess Leia is trapped in Alderaan. C3PO and R2D2 get in the country to save her. There are bombs kept at various locations which C3PO and R2D2 have been able to figure out. They don’t know where Princess Leia is, therefore they decide to dispose all the bombs off to ensure her safety. But as they have already used most of their strength in figuring out where the bombs are, they don’t have much strength left and want to dispose all the bombs by moving as less as possible. So they decide to split. They can start at any of the bombs’ locations, but unfortunately the bombs have been programmed such that if a bomb i is diffused after a bomb j with i < j then the i^th bomb and all the other remaining bombs get detonated; thereby killing the princess. Though R2D2 and C3PO have split, they can still communicate with each other. R2D2 uses his analytical skills to figure out a way in which they should proceed, but it is not optimal. You need to help them in saving the princess by minimizing the sum of the total manhattan distance R2D2 travels and the total manhattan distance C3PO travels. You need to output the minimum sum over all possible ways in which they can diffuse all the bombs.   Input  The first line of the input contains an integer T denoting the number of test cases. First line of each test case is the number of bombs N. Each of the next n lines contains three space separated integers, where the i^th line contains xi yi zi, the coordinates of the i^th bomb.  Output  For each test case output a single line containing the minimum sum of the total manhattan distance R2D2 travels and total manhattan distance C3PO travels in order to dispose all the bombs off.   Constraints  1 ≤ T ≤ 100 5 ≤ N ≤ 1000 0 ≤ x,y,z ≤ 5000   Example Input: 1 3 2 3 4 0 4 5 3 4 1  Output: 4   Explanation C3PO starts at (2,3,4) and R2D2 starts at (3,4,1). C3PO first diffuses the bomb 1, then it moves to (0,4,5) to defuse bomb 2 then C3PO diffuses bomb 3. So the total distance they need to move is 4. 
interval interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w ruofytriht cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  A group of students thought of creating a different VOIP network. The network, rather than being any general graph, was a tree. Every user was assigned a unique userid. This network was hierarchical, i.e there was an admin. The parent of a user is the user connected to it on the unique path when it calls the admin. All users had a parent user except the admin.  All was working fine, until a weird problem occurred in the network. It so happened that a user was only able to call his parent user. Every user (including admin) was unable to reach any of his children. Although we can see that some users can still send a message to other users. A user u can't call the parent g of his parent p (i.e. his grandparent g) but still he can send a message to his grandparent g. u can achieve this by calling p and asking p to call g and send u's message to g.  Your task is to tell, given the userid x and userid y, whether x will be able to send a message to y.   Input  The first line of the input contains two space separated integers N, the total number of users (including admin) in the VOIP network and Q, the number of queries. The next line contains the userid U of the admin. Each of the next N-1 lines contains two space separated integers x and y indicating that user x is the parent of user y. Next in the input are the queries you need to answer. There are Q lines each containing two space separated integers x and y.  Output  For each query output a single line containing 1 if x can send a message to y -1 if y can send a message to x 0 otherwise  Constraints  1 ≤ N ≤ 10^5 1 ≤ Q ≤ 10^5 0 ≤ U ≤ N-1 0 ≤ x,y ≤ N-1   Example Input: 3 2 1 1 2 1 0 0 1 0 2  Output: 1 0  
Bhardwaj Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Every programming contest has a problem on factorials. Continuing with this tradition, we decided to include one too. Given two integers, n and p, find x (mod p) where x is the number obtained after eliminating all powers of p from n!. Here n! denotes factorial of n.  Assume that p is prime.  Input The first line of the input contains an integer T denoting the number of test cases. This is followed by T lines each containing two space separated integers, n and p.  Output One line for each test case, giving the value of the required expression.  Constraints  T ≤ 10 1 ≤ n ≤ 10^18 1 ≤ p ≤ 10^7   Example Input: 1 5 3 Output: 1 
holds holds holds holds holds holds cin>>s>>w>>q>>p>>t cin>>s>>w>>q>>p>>t cin>>s>>w>>q>>p>>t cin>>s>>w>>q>>p>>t cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  It is a very bad time in the North. Lord Eddard Stark has been killed, the castle has been destroyed and Lady Catelyn is not in the kingdom. To add to the difficulties, “Winter is Coming”. The kingdom of North is composed of houses and roads connecting these houses.  Winters in the North are very harsh and it becomes almost impossible to leave your house. So, this time, the King in the North has devised an intelligent plan of converting some of the existing roads into tunnels, so that people can walk freely inside them and move from any place to another place i.e. for each house there is a path to every other house through the tunnels. For this he hires some builders to complete this task. All of them submit a plan. The king has to decide which builder to give the contract to.The King will choose the contractor which submits a plan with the minimum cost. Now you need to tell whether the King can decide and choose one of the contractors deterministically or not.  Input The first line contains two space separated integers N M where  N: The number of houses M: The number of roads  The next M lines contain three space separated integers A B R each, which denotes that cost of constructing a tunnel between houses A and B is R. Assume that the tunnels are bidirectional.  Output  One line containing “YES” (without quotes) if the King can choose deterministically otherwise "NO" (without quotes).  Constraints  1 ≤ N ≤ 10^5 1 ≤ M ≤ min(2*10^5, N*(N-1)/2) 0 ≤ A,B ≤ N-1 1 ≤ R ≤ 10^9   Example Input: 4 4 0 1 100 1 2 5 1 3 70 2 3 1000  Output: YES  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 x0-x0 algorithm algorithm algorithm algorithm algorithm pp que que que que que que que holds holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Students’ Gymkhana, IIT Kanpur has started horse-racing games as a refreshment activity in the campus where the students can take part in horse racing on evenings and weekends. But since everyone is very busy with their academics and upcoming Techkriti, they have decided to outsource the organisational responsibilities of the races to a company. But unfortunately, the company people are very corrupt. The take bribes from people to place their horses already ahead of the starting line before the start of the race. As a neutral observer, you are given the task to find out which of the N horses taking part in the race would be leading at a given time in the contest. The horses are indexed  from 0 to N-1.  Input The first of the input contains T, the number of test cases. The description of each test case begins on a new line and is as follows:  two space separated integers N, the number of horses and Q, the number of queries. N lines for the horses indexed from 0 to N-1 in order, each containing 2 space separated integers D and S; where, D is the initial distance of the horse from the starting line and S is its speed. All the horses run uniformly at their individual speeds. Q lines each containing an integer t, which is the query time.   Output For each query time t, output a line containing a single integer which is the index of the horse leading at that instant of time. If two horses are leading together at that time, print the index of the horse which will be ahead a split second later.  Constraints  T ≤ 5 1 ≤ N ≤ 10^5 1 ≤ Q ≤ 5*10^5 0 ≤ D ≤ 10^12 1 ≤ S ≤ 10^5 1 ≤ t ≤ 5*10^5   Example Input: 1 3 3 0 2 0 1 1 2 5 1 2  Output: 2 2 2  
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  A free subtree is defined as a connected subgraph with no cycles.  Given a graph G on N vertices, output the number of free subtrees on N vertices in G.  Input The first line contains a single integer T, which denotes the number of test cases. Each test case begins with a line containing two space separated integers N and M, where N and M are the number of vertices and the number of edges, respectively. The next M lines each contain two space separated integers X and Y, which denotes that there is an edge between vertices X and Y.  Output A single line per test case containing an integer which denotes the number of free subtrees in the corresponding graph. Since the answer can be very large, output it modulo 10^9+7.  Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 100 1 ≤ M ≤ N*(N-1)/2 0 ≤ X,Y ≤ N-1   Example Input: 1 5 6 0 1 1 4 3 4 2 3 1 3 0 2  Output: 11  
_f name _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In a class of B students, the teacher wishes to distribute N! [ Factorial(N) ] oranges, such that each one of them gets equal number of oranges. The teacher, being a lazy person, wants to give away oranges such that she has to take minimum number of them back with her. Your job is to help the teacher to determine, given N and B, whether the number of oranges received by each student is even or odd.  Input Format : First line contains T, the number of test cases. Next T lines follow, each line containing two space separated integers N and B.  Output Format : The output should contain T lines, one for each test case. If the output of a test case is even print "Even" (without quotes), otherwise print "Odd".  Constraints :  N ≤ 10^5 0 < B ≤ 10^18 0 < T ≤100  Sample Input : 2 3 6 2 1  Sample Output : Odd Even 
G[Query[i] cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n level[000000] level[000000] A[i][k] A[i][k] A[i][k] A[i][k] A[i][k] A[i][k] A[i][k] seen seen seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In the kingdom of Baratheons, there is a strict hierarchy in the army. The leader of the army is the king under whose command are a set of soldiers. Each soldier commands a certain section of army, that is there are certain soldiers under him who may be commanding some more soldiers, and the similar hierarchical structure is followed downwards, till the lowest rank of soldiers. Note that if soldier A commands soldier B and B commands C, then C also comes under the purview of A, however it will be said that B is under the direct command of A and C is under the direct command of B. Also note that each soldier has a unique hierarchical path to the king. The army commission, a different body, may decide to give certain units of power to a particular section of the army. To do this, the commission gives K units of power to the soldier commanding a section, which is cloned and each soldier under his command, including himself, receives K units of power. Remember, initially all soldiers have zero units of power. In times of war, a team of soldiers may be selected from across sections. The team is selected in the following way: given two soldiers A and B, all the soldiers in the path through the hierarchical structure from A to B, are included in the team. For such a team, you have to calculate the total power of the team.  Input Format First line contains three space separated integers N, K and R. N represents the number of soldiers R represents the id of the king. Next N-1 lines describes the hierarchical structure. Each line consists of two integers A and B, signifying that soldier B is under the direct command of soldier A. K following lines represent operations of the following types.For a query operation, the first character is Q, followed by two space separated integers X and Y.For an update operation, the first character is U, followed by two space separated integers S and T, such that the soldier S is given T units of power to be cloned and distributed to soldiers under his command.  Output Format For each query operation, output the total power of all soldiers in the path through the hierarchical structure from X to Y.  Constraints  1 ≤ N ≤ 1e5 1 ≤ K ≤ 1e5 1 ≤ X,Y,S ≤ 1e5 Absolute(T) ≤ 1000    Sample Input 5 3 1 1 2 1 3 3 4 3 5 U 3 5 Q 4 5 Q 4 1  Sample Output 15 10  Explanation Initially all soldiers have 0 power. When the update operation is executed, soldiers 3, 4 and 5 get 5 units of power. For the first query, all soldiers in the path from 4 to 5 are added up, i.e, power(4) + power(3) + power(5) = 15, is given as output. For second query, all soldiers in the path from 4 to 1 are added up, i.e., power(4) + power(3) + power(1) = 10, is given as output. 
vis[node] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds holds seen seen 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given n points in 2 D plane. Let us represent the n points by p[1],p[2],....p[n]. No two points have same coordinates and no three points are colinear. Consider the set of lines L = {L : L is a line segment made by connecting (p[i],p[j]) for all 1 ≤ i,j ≤ n and i!=j} Two line segments L1 and L2 are said to be related if they intersect at a point which is not an end point of either of segments. A set of lines L is said to be a ”super” set if it does not contain any two line segments which are related. Now you wonder what could be the maximum possible size of a "super set" which belongs to L  Input Format  The first line contains an integer T, representing the number of test cases.    For each test case, first line will contain a single integer N. Then the next N lines, will contain two space separated integer x[i] and y[i].    Output Format  The output consists of T lines, each line corresponding to a test case. For each test case, output the maximum possible size of a "super set".    Constraints  1 ≤ N ≤ 10^5 -10^9 ≤ x[i],y[i] ≤ 10^9 Sum of N over all test cases would be ≤ 2*(10^5)  Sample Input  2 3 0 0 1 0 0 1 4 0 0 0 1 1 0 1 1  Sample Output  3 5  
cout<<bnd<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Santa and Banta are buddies. Santa has a good sense of humour, but Banta is unable to or partially understands some jokes. Now Santa has with him N jokes he wishes to tell to Banta. Due to lack of time, he cannot tell all of them and has to choose R jokes for Banta. The total value of all the jokes he tells Banta is Fibonacci ( ^N C R ). Note that, Fibonacci(1)=Fibonacci(2)=1 and Fibonacci(n)=Fibonacci(n-1)+Fibonacci(n-2) for n > 2. However, Banta is unable to comprehend all the jokes. The value of jokes he understands is the total value of all jokes Santa tells Banta modulus some value M. Given N, R and M, your job is to compute the value of jokes Banta understands.  Input Format First line contains T ,number of test cases to follow. Next T lines follows, each line containing 3 space separated integers, N, R and M.  Output Format The output contains T lines, each having the value of jokes Banta understands.  Constraints  0 ≤ N,R ≤ 10^5 1 ≤ M ≤ 10^7 Sum of N over all test cases ≤ 10^5   Sample Input 3 2 2 100 2 1 100 3 1 100  Sample Output 1 1 2 
q[i] q[i] q[i] sub[node] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In an exam in IIT Kanpur, the question paper consists of infinite questions. Ram, being a studious guy, aims to attempt infinite questions. In the i-th question, Ram answers are worth R[i] marks. However, he does not know the answer to all, and instead of thinking about the questions, repeats his answer after every S questions, i.e., the answer given by Ram for the K-th question is same as the answer for (K - S)-th  question and so the marks obtained for question K and question K-S are also the same. Shyam, on the other hand, hardly studies and has made up his mind to attempt atmost N questions. He plans to copy the answer to these questions from Ram. If Shyam wishes to write answers to all between question X and question Y, he wants to know the corresponding answers by Ram for all questions between M and M+Y-X, where M is a parameter decided by Shyam. For each answer copied, he would earn same marks as Ram earned for the corresponding answer. If at the end of the exam, Shyam has not attempted any of the N questions, he receives zero marks for that question. Now while correcting Shyam's answer sheet, the teacher wishes to check answers for questions between A and B. She asks Ram as what would be the maximum marks he would obtain if she checks some continuous questions in between A and B. Help Ram in answering these questions and passing the exam.  Input Format First Line contains 3 space separated integers S N T. Next Line Contains S space separated integers, representing the marks worth of first S answers of Ram, i.e., i-th integer represents R[i]. T lines follows, containing T operations, one per line. Each operation is either of the two forms U X Y M - To copy Ram's answer from M to M+Y-X. Q A B - To report the maximum marks that can be obtained on correcting continuous questions between A and B.  Output Format For each of the query operation (ones starting with Q), output a single integer in a line, the result of that query.  Constraints  1 ≤ S ≤ 1000 1 ≤ N ≤ 10^5 1 ≤ M ≤ 10^9 1 ≤ T ≤ 10^5 abs(R[i]) ≤ 1000 1 ≤ A,B,X,Y ≤ N    Sample Input 5 10 4 10 -6 -7 11 12 U 1 5 3 Q 2 4 U 2 9 3 Q 3 9  Sample Output 33 43  Explanation Initially scores of N questions:: 0 0 0 0 0 0 0 0 0 0 Marks After Update :: -7 11 12 10 -6 0 0 0 0 0 Result of Query(Maximum Sum Subarray from 2 to 4)::  33 (11+12+10) Marks After Update:: -7 -7 11 12 10 -6 -7 11 12 0 Result of Query(Maximum Sum Subarray from 3 to 9)::  43 (11+12+10+(-6)+(-7)+11+12) 
cout<<temp+g<<endl cout<<temp+g<<endl +0] +0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The Fiendish Bombers, unleashed by Emporer Terrorin, have invaded Bungeling Empire in Bomber Nebula. You are Dr.Ein, the scientist assisting the Bomberman. Help him to save Planet Bomber! Consider the Empire as (N+2)x(N+2) maze free of any rocks and obstacles. The Fiendish Bombers have reached the borders of the Empire. They are present on all border cells of the maze except the corners (they don’t like to be cornered :P). Now consider the remaining NxN maze. Some cells are with counter-explosive devices and so bombs cannot be planted there. The bombs can be planted anywhere on the remaining maze. Because of one of the new invention, the Fire, ability of the Bomberman’s bomb is infinite. That is, if it explodes at (a,b) it will destroy enemies from all the cells on the horizontal line through (a,b) and on the vertical line passing through (a,b). Note that it would not affect any of the counter-explosive devices. You have an encrypted connection with the Bomberman and can message him (a,b), the coordinates where a bomb can be planted. The cost of each message is M. But the problem is, you forgot to agree upon the directions of the axis while deciding the origin.  So, when you message (a,b), Bomberman plants 2 bombs - on (a,b) and on (b,a) (provided they are distinguishable). Also, it is ensured that there is a counter-explosive device on (a,b) if and only if there is a counter-explosive device on (b,a). Your task is to minimize the cost of eliminating all enemies. Print a single integer, the cost of eliminating all the 4*N enemies. Print IMPOSSIBLE if it is impossible to do so. Input    There are several test cases.  Each test case begins with two integers:  N - denoting size of the grid and M - denoting cost of single message.  N lines follow. Each containing a string of N characters describing the cells of corresponding row. “#” denotes cell with counter-explosive device and “.” denotes free cell.  Input ends with N=0 and M=0. which should not be processed.   Output   For each testcase, output a single line, consisting of string "Case#" followed by the case number, a colon and the solution of the corresponding case.   Constraints  1 ≤ N ≤ 100  1 ≤ M ≤1000 Sum of N over all test cases ≤ 2000   Example Sample Input:  2 1 #. .# 2 1 ## ## 0 0   Sample Output: Case#1: 1 Case#2: IMPOSSIBLE 
interval interval interval interval interval byte[] byte[] byte[] byte[] byte[] byte[] byte[] byte[] byte[] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given a string S of length N, consisting of lowercase English alphabets from ‘a’ to ‘z’, you have to select three non overlapping substrings of S, such that number of a’s in the string made by concatenating the three substrings are greater than or equal to M.You have to find the number of ways of selecting three such substrings. Output your answer modulo (10^9 + 7)  Input Format First line contains T, the number of test cases. Each test case consists of 2 lines, first line contains the string S and the second line contains the integer M.  Output Format The output consists of T lines, such that i-th line represents the output of the i-th test case.  Constraints  Sum of length of strings over all test cases ≤ 5000 0 ≤ M ≤ 5000 Length(S) > 0    Sample Input 4 deva 1 deva 2 dev 0 dev 1  Sample Output 6 0 1 0 
Bhardwaj mark[x][y]=0 ++n ++n ++n ++n ++n ++n ++n ++n ++n xx<=r-0 level[000000] level[000000] level[000000] holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Sam visits the most famous sweet shop in his city. The shop has an assortment of sweets of different variety. It contains a1 sweets of 1st kind, a2 sweets of 2nd kind, and so on, upto N. Now Sam has been restricted by his mother, to select exactly S number of sweets from the shop to eat. You have to help him find out the number of ways in which he can select S sweets. Sam may have multiple queries for you and you are expected to answer them all.  Input Format First line contains integer N, such that there are N different kinds of sweets. The following N lines represent the amount of sweets of each kind, i.e., the integer on i-th line represents the number of sweets of i-th kind. Next line contains an integer Q, the number of queries to follow. The following Q lines contain an integer S each, such that you have to report the number of ways in which S sweets can be selected modulo (10^9 + 7).  Output Format The output consists of Q lines, such that each line consists of the output of the corresponding query, i.e., the number of ways in which S sweets can be selected.  Constraints  N ≤ 10^6 1 ≤ Amount of sweets of each kind ≤ 10^3 1 ≤ Q ≤ 10^4 1 ≤ S ≤ 2000    Sample Input 2 2 3 6 1 2 3 4 5 6  Sample Output 2 3 3 2 1 0 
holds holds cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem Description In the world of Mathematics, there are ordinary numbers and there are special numbers. The special numbers are Transformers. The transformers are of two types - Autobots and Decepticons. Autobots have the task of saving the number-kind from the evil intentions of Decepticons. A number C is said to be equivalent to another number D if C%k = D%k, where k is a given parameter. The Transformers are called so because of their special ability to transform to something else. Now, given a value Q, a transformer N wishes to transform to another value P such that P is equivalent to Q.However, like all mortal beings, they too have restrictions, they can only take some particular transformations. The following transformations are allowed N -> N + a N -> N - b N -> N * c N -> N % d You have to report minimum number of steps to transform to such a value P (which is equivalent to Q) using the above transformations, or print -1 if it is impossible to do so.  Input Format First line contains T, the number of test cases. T lines follow, each containing 7 space separated integers, N, a, b, c, d, k, q.  Output Format The output consists of T lines. Each line contains the output of the corresponding test case, i.e., the minimum number of transformations required or -1, if transformation is not possible. Sample Input 2 10 3 2 5 5 4 12 5 1 2 3 4 9 14 Sample Output 1 0 Constraints 1 <= T <= 1000 1 <= N,a,b,c,d,k,Q <= 1000 Explanation For test case 1: 1. Take 10 modulo 5 -> 0 which equals 12 modulo 4 For test case 2: No operations requires as 5 modulo 9 = 14 modulo 9 Note: modulo operation is defined here. It is commonly implemented as % operator in many programming languages. All test cases are generated randomly.  
steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 R<j -a que dp[a][b]=0 dp[a][b]=0 dp[a][b]=0 dp[a][b]=0 index/i a[00] a[00] a[00] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Rob likes to explore but is lazy. He has many cubes arranged before him in a line. Each cube has either the letter 'A' or 'B' inscribed on it. Now Rob wants to swap any two positions of cubes placed on the line, such that the there exists a sequence of continuous cubes with letter 'A' inscribed on them, whose number is greater than or equal to M. However, mechanically swapping cubes is a tedious task. Therefore he wishes to know the minimum number of swap operations he has to perform to get such an arrangement of cubes.  Input Format First line consists of T test cases. For each test case, first line consists of the string S, composed of A's and B's, representing the initial configuration of cubes, and second line an integer M.  Output Format The output consists of T lines corresponding to T test cases, such that it is the minimum number of operations required to create a consecutive segment of greater than M A’s from S.  Constraints  1 ≤ Sum of lengths of S over all test cases ≤ 10^6 1 ≤ Length(S) ≤ 10^5  It is ensured that number of A's are ≥ M.    Sample Input 1 ABA 2  Sample Output 1 
c[j%0] q[i] q[i] sub[node] _R _R _R _R _R pra x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Consider an infinite geometric sequence S={1, ^1⁄2, ^1⁄4, ^1⁄8 … }. For given fraction ^p⁄q, check whether one can select an infinite geometric sequence R, such that R ⊆ S and Summation of all elements in R is ^p/q.  Input Format First line contains an integer T, representing the number of test cases. The next T lines,each contain two space separated integers, p and q.  Output Format The output should contain T lines, one for each test case. If there exists such a sequence satisfying the given constraint, print "YES" (without quotes), else print "NO".  Constraints  T ≤ 50000 1 ≤ p,q ≤ 1e9    Sample Input : 2 3 1 1 3  Sample Output : NO YES  Explanation : For 1st test case, there cannot exist any series with sum as 3, since maximum sum possible is 2. For 2nd test case, the series beginning with ^1⁄4 and geometric factor as ^1⁄4, has sum ^1⁄3 
holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00
Mr. Devu Singh has a farm. The farm is represented as a matrix, divided into rows and columns, with each element being equal to 1, if the corresponding area in the farm contains a tree, and 0 otherwise. Every element in the farm can contain atmost one tree. Mr. Devu Singh loves his farm. However, Devu Singh has a short memory. He cannot remember which of the elements in the farm has a tree in them. What he does remember is the total number of trees in each row and each column, but is not sure about this information either. He wishes to know, that for such constraints, whether there exists a matrix satisfying these constraints. If there does exist such a matrix, output the lexicographically smallest one, otherwise output -1. For lexicographically comparing two matrices A and B, you write the matrix A and B as a string of 0/1 by writing in row major order (ie, first write first row, then second row and so on upto n-th row.). Now lexicographically compare the two strings generated in this way.  Input Format First line contains T : number of test cases. For each test case, first line has N and M. Next line contains N space separated integers where i-th one represents sum of the i-th row. Line after that contains M space separated integers where i-th one represents sum of i-th column.  Output Format For the i-th test case, the first line contains the string "TestCase #:i" (without quotes). From the next line, output matrix of size N x M, as N lines containing M integers each (without space), with Element[i,j] = 0 or 1, depending on whether there can be a tree in that area. Output ­-1, if no such matrix exists.  Constraints  1 ≤ T ≤ 20 1 ≤ N, M ≤ 50 0 ≤ Sum of elements in a row ≤ M 0 ≤ Sum of elements in a column ≤ N    Sample Input 3 4 4 3 2 3 1 4 3 1 1 4 4 1 3 0 2 1 1 2 2 1 1 1 0  Sample Output TestCase #:1 1101 1100 1110 1000 TestCase #:2 0001 0111 0000 1010 TestCase #:3 -1  Explanation For first test case, the given matrix is the lexicographically smallest one with sum of row1 =3,sum of row2 =2, sum of row3 =3, sum of row4 =1 and sum of column1 =4, sum of column2 =3, sum of column3 =1, sum of column4 =1. Similarly for the second test case, the given matrix is the lexicographically smallest one satisfying the given constraints. For the third test case, there cannot be any matrix of size 1x1 and sum of row1=1 and sum of column1=0. Hence output is -1. 
interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination i=destination i=destination i=destination Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector i=destination i=destination Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/
Devu is a freshman in the college. In the data structures course, he has recently learned about LCS (longest common subsequence) problem, He thought about this problem a lot and has finally come up with a challenge for you. You are given a string S of size N consisting only of lowercase English letters ('a' to 'z'). You have to find minimum length of string V also consisting of lowercase English letters('a' to 'z') such that length of LCS (S, V) ≥ L. The string V should not have more than K consecutive equal characters.Note that it is not necessary for string V to be composed of characters of S only.  Input  First line contains T : number of test cases.   For each test case, You are given two lines.  First line contains a string S.  Second line contains two space separated integers K and L.   Output  For each test case, output a single line containing integer corresponding to the answer of the problem.   Constraints  1 ≤ T ≤ 10^6 1 ≤ Size of string S ≤ 10^6 1 ≤  Sum of lengths of strings over all test cases ≤ 10^7 1 ≤ K, L ≤ Size of S   Example Input: 2aa1 1aba1 2 Output: 12 Explanation  For first test case, V is 'a'.   For second test case, V can be 'ab' or 'ba'.  
q[i] q[i] a>c //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  A circular cake of radius  r   is placed with center at (x,y)  on an infinite 2-D grid. Shubhv is standing at  (x0, y0)  and can move at  v  units/second. She can move in any direction and want to get out of the cake as soon as possible. What is the minimum time in which she can reach a point  outside  or  on the boundary of   the cake?   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.   Each test case consists of a single line containing 6 integers denoting  r, x, y, x0, y0, v  in order.   Output  For each test case output a single number  rounded to 6 decimal places  which denotes the minimum time in which Shubhv can walk out of the cake.   Output within an absolute or relative error of 10^-6 will be considered correct.   Constraints  1 ≤ T ≤  10 ^ 5  1  ≤ r  ≤  10^9 -10 ^9  ≤ x, y, x0, y0  ≤  10^9 1 ≤ v ≤  10 ^ 5   Example Input:  3 2 0 0 1 0 1 5 4 4 9 4 7 10 3 4 5 6 10  Output:  1.000000 0.000000 0.717157  
c[j%0] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 In this problem you are a given an un-directed graph containing N nodes numbered from 1 to N and M edges. Capacity of each edge will be given. For each (unordered) pair of nodes u and v, you need to find  the maximum flow value from node u to v. Sum the answers for each pair u and v and print the sum. Note that the edges are undirected which means that fluid is allowed to flow in either direction but in a single direction at any point of time. Also flow value through an edge should not exceed its maximum capacity.  Given Graph has the following properties   Graph contains exactly M = N-1 edges .  From any node u to any node v, one can reach using the edges given. That means the graph is connected.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of nodes in the graph.  Next M = N-1 lines follows. i^th line contains three space separated integers ui, vi and ci respectively. Which means there is an edge between node ui and node vi  having maximum capacity equal to ci.   Output  For each test case, output a single line containing the answer to the corresponding testcase. Answer to a testcase is sum of maximum flow value for each pair of nodes as described in the problem statement.     Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 2 * 10^5 sum of N over all the testcases will be  ≤ 2 * 10^6 0 ≤ ci ≤ 4 * 10^8 1 ≤ u, v ≤ N u != v     Example Input: 1 4 1 2 3 2 3 2 2 4 5  Output: 17 
macros Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Mr Sheikh and Miss S live in a country named Tree Land. Cities in Tree Land are  connected via bi-directional roads. All pair of cities have unique path between them. Mr Sheikh and Miss S are crazy about cakes. They love travelling to different cities to taste varieties of cakes. But the problem is they travel a lot for their respective jobs, so it is not necessary that they are in same cities all the time. So they come up with a plan to decide where to eat. Suppose some day  Mr Sheikh is in city A and Miss S is in city B they choose a city C where they will meet to eat cakes. They consider a city C to be a valid  city to meet if |dist(A,C)-dist(B,C)| ≤ t  . Where t is a parameter which depends on how busy they are on a particular day. If there exists a city C satisfying all the above condition they meet on that day to eat cakes otherwise they just cancel the plan to meet for that day. As Mr Sheikh and Miss S are very busy people they need your help to determine if they can meet on a particular day or not. For each day you need to output "YES" if they can meet, "NO" otherwise.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains a single integer N denoting the number of cities in Tree Land. Next  N-1 lines contain 3 space-separated integers u, v and c denoting there exists a road of length c between the cities  u and  v.   Next line contains an integer  Q denoting the number of days Mr Sheikh and Miss S wanted to meet.   Next Q lines contain 3 space separated integers A, B and t. Denoting the cities of Mr Sheikh and Miss S and the business parameter for that day.      Output  For each test case, output Q lines. Output "YES" if they can meet on ith day "NO" otherwise.      Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 2*10^5 Sum of N over all test cases will not exceed 10^6 1 ≤ Q ≤ 2*10^5 Sum of Q over all test cases will not exceed 7*10^5 1 ≤ u,v,A,B ≤ N 0 ≤ c, t ≤ 4*10^8     Example Input: 1 3 1 2 3 1 3 6 2 2 3 3 2 3 2  Output: YES NO 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 You are given two strings A  and B. Find the number of distinct strings which appear in both A  and  B . A string s is said to appear in S iff s is a substring (appears contiguously) of S.   Input   The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.   Each test case consists of two lines.   The first line contains two space separated integers  n1  and  n2  denoting the lengths of  A  and  B.   The second line contains two space separated strings A and B.    Output   For each test case output a single number denoting the number of distinct strings appearing in A and  B .    Constraints  1 ≤ T ≤  10^4  1  ≤ n1, n2  ≤  10^5  Sum  of n1 + n2  over  all test cases  ≤  10^5  A is a string consisting of n1 lowercase characters ('a'-'z').   B is a string consisting of n2 lowercase characters ('a'-'z').    Example Input: 2 3 5 aad zaacd 4 4 abcd lmno Output: 3 0  Explanation  Example case 1. The three strings are "a", "d", "aa".  Example case 2. There are no strings that appear in both A and B.  
&man_list[i][j] a>c a>c _R cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Chef's city contains a straight line of N regions numbered 1 to N in increasing order. Fibonazi have started bombing the city at different regions. Now their bombs are weird, when Fibonazi drop a bomb of intensity d at some position x, region x suffers a damage equal to Fd, where Fd is the d^th Fibonacci number (F0 = 0), regions x - 1 and x + 1 (if they exist) suffer a damage Fd - 1 and so on (regions at distance i from x suffer a damage Fd - i). If the damage by the bomb reaches 0 at some region, it remains 0 for all regions farther than it from x. Chef wants to know the total damage done from city x to city y as the bombs are being dropped.   Input  The first line of each test case contains a single integer N denoting the number of regions in the city and the number of queries Q. Q lines follow, each of the following 2 types : 1 x d bomb dropped at region x with intensity d 2 x y Find the total damage done from region x to region y (both included) by the bombs dropped.     Output  For each query of type 2, print the required total damage modulo 1000000009.     Constraints  1 ≤ N, Q ≤ 10^5 1 ≤ d ≤ 10^5 1 ≤ x ≤ y ≤ n     Example Input: 7 2 1 2 4 2 1 7  Output: 9    Explanation After the bombing, the damage becomes 2 3 2 1 1 0 0 
pra name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] check[0]= check[0]= check[0]= check[0]= 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
An ant is caught on one corner of a cuboidal cake with sides l, b, and h. It wants to reach the diagonally opposite corner, However, the ant can perform a cakewalk only along the faces of the cake. What is the least amount of distance that the ant needs to walk to reach the other corner?   Input  There are T test cases.   First line contains a single integer, T. T lines follow, each containing 3 space separated numbers : l, b and h     Output Output T lines, each containing a single floating point number, containing the least distance that the ant needs to travel. A rounding off error of 10^-6 will be tolerated.    Constraints   T  ≤  10^5  l, b, h  ≤  10^6     Example Input: 1 4 4 4  Output: 8.944271 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 One day Abhinav was teaching little Shark about data structures and algorithms related to trees. He told that given a rooted tree T containing N nodes, numbered from 1 to N, rooted at node 1. Pre-order array of the tree can be obtained by doing pre-order depth first search on the tree, starting from node 1 and recursively visiting the subtrees rooted at the children of the root. For example, given a tree containing 5 nodes and following pair of nodes are connected via direct edge -   1 2  1 3  2 4  2 5 then pre order array can be -  1 2 4 5 3. Clearly there are many possible pre-order array for a given tree. e.g, (1 3 2 5 4) is also a valid pre order array for the given tree. Then Abhinav told little Shark that all the nodes in the subtree rooted at a node, say nd appears consecutively in the pre-order array ! For example, nodes in the subtree rooted at nd = 2 in the given example are 2, 4 and 5. Clearly these numbers appears consecutively in the pre-order array starting at index 2 (1 based index). This is true for any pre-order array for the tree. You may verify that.  Little Shark got the point Abhinav was trying to make. But after pondering over the concept for some time he asked Abhinav can we recover the tree if pre-order array is given !    In this problem you will be given pre-order array of a tree and some clues about some of the subtrees of the tree. You need to find a tree satisfying the given clues and has at least one pre-order traversal as given in the input.   Clues will be given in the from three integers nd, l and r . Denoting that nodes of the subtree rooted at node nd lies consecutively in the given pre-order array from index l to r. Can you find the tree ?   Input  The first line of the input contains a single integer N denoting the size of the tree (size of the pre-order array). The second line contains N space-separated integers denoting the elements of the pre-order array. Next line contains an integer Q denoting the number of clues given. Next Q lines each contains three space separated integers denoting nd, l and r respectively as described in the problem statement.   Output  First line of the output should contain an integer f. If there is no such tree satisfying all the clues, then f should be equal to 0. Otherwise it should be equal to 1. If f = 1 then in next N-1 lines print the edges of the tree. Each line should contain two integers u and v denoting there is direct edge between node u and node v in the tree. Output must satisfy a valid tree structure.   Constraints  1 ≤ N ≤ 100000 1 ≤ Q ≤ 100000 1 ≤ nd ≤ N 1 ≤ l  ≤ r  ≤ N Elements of the preorder array will be between 1 and N (both inclusive).     Example Input: 4 1 2 3 4 4 1 1 4 2 2 4 3 3 4 4 4 4  Output: 1 1 2 2 3 3 4  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   N teams are playing in this cricket world cup, numbered from 1 .. N. Each team plays every other team exactly once in the World Cup. No match ever results in a draw. Team x is said to directly win over team y if in the match between x and y, x wins. Team x is said to indirectly win over y if there exists a sequence of teams a1, a2, ...., ak where a1 = x, ak = y, k ≥ 2 and for each 1 ≤ i ≤ k - 1, ai defeats ai + 1. Team x is said to completely win over team y if x indirectly defeats y and y does not indirectly defeat x.  The organisers of the world cup wants to make the world cup weird. World Cup will be weird if no team completely wins over another team. For making the cup weird he is ready to change the result of some matches so that the world cup becomes weird. Your task is to help him accomplish this by changing the result of minimum number of matches.   Input  First line contains N, the number of teams in the world cup. N * (N - 1) / 2 lines follow, each containing a pair i j meaning team i defeated team j in their match     Output  If it is not possible to make the world cup weird by changing some results, print -1. If it is possible, print the smallest number of matches changing whose result will make the world cup weird. Then print each match (represented by the pair of team number) in a new line. If there are multiple answers possible, print any one of them. Pair u v  and v u  are the same.     Constraints  4 ≤ N ≤ 10^3 Each pair i j appears exactly once in the input     Example Input: 4 1 2 1 3 4 1 2 3 4 2 4 3  Output: 1 3 4   
#include<cassert> _f _f val[u] vplld vplld i<=r i<=r str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] v=v* v=v* ++ x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 que que que que rev rev rev rev rev rev {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis fenwick name name name //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< name //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl max++ max++ max++ max++ cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 rev rev rev rev rev rev rev rev rev {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis fenwick name name name name name name //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 rev rev rev rev rev rev rev rev rev {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis name name name name name name name //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl
    Problem description. Lex Luthor is a genius, albeit evil. Vertex Cover is an NP-hard problem. Lex Luthor's father, Lionel, is abusive. But even he knows that Lex cannot solve such a hard problem. He gives Lex an easier problem. Given the fact that in the graph G given to Lex, the Vertex-Cover has size strictly less than k or strictly greater than 2k, for a given integer k. Help poor Lex to tell the answer.   Input The first line contains 3 integers, the number of vertices, n, the number of edges, m and the number, k.   m lines follow, with 2 integers, u and v denoting an edge between u and v.    Output For each test case, print "Case 1" is the Vertex Cover is lesser than k and "Case 2" if it is the other case.   Constraints  n<=1e5 m<=1e6 k is non zero 1<=u,v<=1e5   Example Input: 6 6 1 1 2 2 3 3 4 4 5 5 6 6 1 Output: Case 2    Explanation Example case 1.The minimum vertex cover is of size 3, hence Case 2 
vis[node] vis[node] vis[node] {doThis cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl temp[00] str[i+0] str[i+0] str[i+0] str[i+0] cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl practise practise practise practise practise P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] i<=int i<=int i<=int i<=int i<=int <<fixed<<f <<fixed<<f <<fixed<<f <<fixed<<f <<fixed<<f maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q <<fixed<<f <<fixed<<f <<fixed<<f maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb&
    Problem description. Wonder Woman's invisible plane has various advanced computers. In particular, it can perform various operations on an array. Wonder Woman is a strategic warrior. She can formulate Luthor's robotic army's power as an array of integers. She has some queries over the array to gauge the enemy's power. Each query consists of 3 integers, l, r and x. The answer to a query is the maximum sum subarray lying between l to r in which you cannot pick an element greater than x. If no such subarray exists, print "xx". Since Doomsday crashed her plane, she needs your skills to help her answer these queries and formulate the ideal strategy.   Input The first line contains the size to the array, n and the number of queries, q.   The next line contains n integers, the array.  The next q lines contain 3 integers each, l,r and x.    Output Print the answer for every query.   Constraints  1<=n,q<=2*10^5  -10^8<=Ai,x<=10^8  1<=l<=r<=n    Example Input: 3 1 1 2 3 1 3 3  Output: 6 
vis[node] lli lli task task task task task task task task cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl byte[] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description.  Batman is trapped by Lex Luthor and given a puzzle to solve in captivity. Since Frank Miller is not here to help him, he asks you to solve the problem for him. The problem Luthor stated was "Given an array of integers, find a pair of integers x,y such that the sum of the function f(ai)=min(abs(x-ai),abs(y-ai)) over all the elements in the array is as small as possible."   Input First line contains number of test cases Second line contains the size of the array n, and in the next line, n integers denoting the array.  Output The sum of the minimized function with the ideal pair x,y.   Constraints   n<=10^6  -10^9<=ai<=10^9  Summation of n over all test cases <= 10^6   Example Input: 1 5 1 2 3 4 5  Output: 3     Explanation Example case 1 : 2 and 4 are the ideal pair. 
ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description. Superman wakes up this morning and reads today's newspaper. Like, every normal people, he skips the first pages and gets to the Sudoku. But, before he starts solving it, he remembers that today's newspaper kid was not the usual one. Superman is very careful and he suspects that his arch-enemy Lex Luthor has messed up with his Sudoku. He's smart but not as much as you like to believe. He needs your help to know if his Sudoku is a proper sudoku or not.  Input First line of input contains number of test cases T .  Each test case contains a 9 x 9 matrix, representing a sudoku, with integers from 1 to 9, exactly 9 integers per line.     Output  Print "Its A Sudoku" if its a sudoku. Else print "Not A Sudoku" in a new line for every test case.     Constraints  1 <= T <= 1000 1<=Elements in the matrix<=9     Example Input: 1 8 2 7 1 5 4 3 9 6 9 6 5 3 2 7 1 4 8 3 4 1 6 8 9 7 5 2 5 9 3 4 6 8 2 7 1 4 7 2 5 1 3 6 8 9 6 1 8 9 7 2 4 3 5 7 8 6 2 3 5 9 1 4 1 5 4 7 9 6 8 2 3 2 3 9 8 4 1 5 6 7  Output: Its A Sudoku 
c[j%0] c[j%0] c[j%0] L>R L>R L>R second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] to_base0 to_base0 to_base0 to_base0 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem description. With the help of Harley Quinn, Batman has discovered a new place where he can get Kryptonite to defeat Superman. This new place has N site s(numbered from 0 to N-1).There is an entry site(numbered 0) from which every other site is accessible. Batman can get a block of Kryptonite of some specific weight at every site except the entry site. There are paths between sites which take some time to travel. Even though, Batman has trained very hard, he can still carry only one block of Kryptonite at a time. Robin is waiting at the entry gate with the Batmobile ready. What Batman does is, he takes a block of Kryptonite and takes it to his Batmobile and then goes for another block. But, Batman has some specific time before Superman comes and stops him. Batman wants to maximise the amount of Krytonite he can gather in the little time he has. Since, Batman does not have WB excutives to help him, he has asked you to solve this problem for him.   Input First line contains T ,the number of test cases.  Second line contains three space seperated integers N, M and D, Number of sites, Number of paths and time Batman has. Then follow m lines. Each line will contain three space seperated integers u v e denoting that there is a path from site u and v which take e seconds to travel. Last line contains N-1 space seperated integer W[i] denoting the weight of kryptonite at the ith site.(1<=i<=N-1)   Output For each test case  Output the maximum amount of Krytonite he can gather in the given time in a newline.     Constraints  1 <= T <= 20 2 <= N <= 10^4 N-1 <= M <= 10^5 1 <= W[i] <= 10^6 0 <= u < N 0 <= v < N 1 <= e <= 10 1 <= D <= 1000     Example Input: 1 7 6 20 0 1 3 0 2 2 2 3 3 0 4 6 4 5 1 5 6 1 1 1 7 1 19 100  Output: 101 
vis[node] vis[node] {doThis {doThis {doThis {doThis {doThis a[00] a[00] max=count holds s[i-0][j]== s[i-0][j]== byte[] byte[] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description. Wonder Woman is tensed seeing Batman and Superman fighting. She need to stop this fight as soon as possible. But, she can't do it alone. She has started recruiting new superhumans. She gets a list of N names as strings. Some superhumans have given their name more than once. She gives you M queries. In each query, she gives you two indices for that array. In each query, consider the list of strings between indices l and r in the original list. Make a new list with all the distinct strings in that sub-array and sort it lexicographically. You need to output the power of the team containing these people. The power of this team is given by summation i*size(s[i]) in this new list.   Input First line contains T ,the number of test cases.   Second line contains two space seperated integers N and M.  Then follow N strings denoting the names of superhumans.  Then follow M queries contain l and r as explained in the problem statement.    Output Print the power of the team for every query in a new line.   Constraints  Sum of N over all test cases <=10^4 Sum of Q over all test cases <=10^4 1<=l<=r<=N   Example Input: 1 2 3 cyborg flash 1 2 1 1 2 2 Output: 16 6 5    Explanation For first query New list is {cyborg,flash} and answer is 1*(size(cyborg))+2*(size(flash))=16 
holds holds holds holds holds second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Ilya lives in the beautiful city of Bytes lying in a hilly terrain. She loves to ride her bicycle on the hills whenever she gets a chance to do so.  There are check-posts located on the hill at a unit distance from each other. The height of the check posts is given in an array A. Ilya has to visit her aunt who lives N check-posts away. Being a hilly area, the terrain in between the check-posts is either monotonically increasing or decreasing. She is initially standing at checkpoint indexed 1. However, Ilya suffers from a rare sleeping disorder in which she goes to sleep while riding her bicycle if the terrain is uniform. She wakes up whenever there is a change in nature of terrain i.e from increasing to decreasing or from decreasing to increasing. You have been given an easy task of counting number of times Ilya wakes up during her sleep as she passes through these N check-posts falling on the way to her aunt's house.   Note  You can safely assume that the terrain between i^th and (i + 1)^th checkpoint will be uniform i.e it will have either increasing slope or decreasing slope.  It is guaranteed that no two adjacent check-posts have same heights.      Input  The first line of the input contains an integer T denoting the number of test cases. The first line of the test case consists of an integer N denoting the number of check-posts. The first line of each test case contains a single integer N denoting the number of check-posts. The second line contains N space-separated integers A1, A2, ..., AN denoting the heights of check-posts falling on the way.     Output  For each test case, output a single integer denoting number of times Ilya wakes up from her sleep in a separate line .     Constraints  1 ≤ T ≤  10 2 ≤  N ≤  10^5 -10^9 ≤  Ai  ≤ 10^9     Example Input: 2 3 1 3 2 5 1 2 3 4 5 Output: 1 0  Explanation Example case 1. She wakes up when the height  changes from 3 to 2 Example case 2. She never wakes up in between the sleep 
name Bhardwaj Found Found holds holds tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  !doctype>  Problem statement Henry, a graduate research assistant, is doing research on the properties of Fibonacci numbers. He is overloaded with work from his Professor and could make use of some automation. He requests you to write a program which would tell him whether or not each number from the sample data, which he provides, is a Fibonacci number of not. Write the program for him.  NOTE: Fibonacci numbers are numbers of the sequence which follows the recursive formula An = An-1+An-2 where A1 = 0 and A2 = 1 (initial conditions).   Input The first line contains T the number of test cases. The T lines follow with each line containing a single integer F.   Output For each test case, ie., for each number F, display whether or not the number is a Fibonacci number. Each test case output should occupy its own line. Print "YES" if it is a Fibonacci number else print "NO" (Both without quotes).   Constraints 1 ≤ T ≤ 100000 0 ≤ F < 2^64   Sample Input 2 34 1233   Sample Output YESNO   Explanation  34 is the 10^th Fibonacci number. 1233 is not a Fibonacci number.    
interval interval interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y]
On a Planet where people are obssessed with Numbers, they have human definitions for relation among Numbers. In one such case, they have designated a father number to be a number formed by the sum of the child number's digits along with the child number itself. For example, for number 481, (4+8+1+481=)494 is the father. It is of course evident, every son will have a father, but a person (number) may have any number of children, even zero. Your task is to write a program to find the smallest child of a given integer, should it exist.   Input Your first line of input consists of 'K' (1 ≤ K ≤ 50) test cases. The number of test cases 'K' is given in the first line of the input followed by a blank line. Each test case takes one line containing an integer N , (20 ≤ N ≤ 100,000).    Output The output of your program will print exactly one line for each test case. The line is to contain a child of N for each test case. If X has more than one child, print the smallest. If X, however, does not have any children, print "NONE". The following shows sample input and output for three test cases.  Example  Input:  3 216 121 2005  Output:  198 NONE 1979  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Hackers! Hackers! Everywhere! Some days back your email ID was hacked. Some one read the personal messages and Love Letters you sent to your girl friend. That's a terrible thing, well, you know how are the boys at ISM. So, you have decided that from now onwards you will write Love Letters to your girlfriend in a different way. Suppose you want to write "i love you sweet heart", then you will write "I evol uoy teews traeh".   Input First line will contain the number of test cases T, not more than 20. Each test case will contain a line of not more than 100 characters and all the characters will be small alphabets only ('a'-'z'). There will be exactly one space between two words.    Output For each test case output a single line in the new format.   Example  Input: 3 can you meet me outside ccd today a this year hard kaur is coming to entertain us   Output: nac uoy teem em edistuo dcc yadot a siht raey drah ruak si gnimoc ot niatretne su  
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
Chef's kid, Junior chef loves playing with different series. Chef, impressed by his son's curiosity, gifts him a special series S on his birthday  S=1,2,-2,3,-3,3,4,-4,4,-4,............. Now chef, eager to check the intelligence of his son, gives him q queries to solve. Each query consists of two positions a and b, and Junior_chef is required to calculate the sum of all integers from a to b.  Input  The first line of the input contains a single integer q, which denotes the number of queries. Next q lines consist of two integers, a and b.  Output Print the answer in single line.  Constraints 1<=q<=10 , 1<=a,b<=10^12  Sample Input 1 1 4  Sample Output 4 Explanation : As the series is 1,2,-2,3, therefore the sum will be 4. 
interval interval steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Junior_chef is very fond of cakes. But as they aren't good for his health, chef doesn't wants him to access the cakes easily. So he has devised a game for him. Chef has rectangular pieces of cakes and the length of each cake is L cm. The cake can only be cut at certain points. Junior_chef is needed to calculate the number of 'good' pieces. A 'good' piece is the one which, after cutting the cake at two distinct positions has a length greater than k cm.  Input  The first line of the input contains the number of test cases t (1<=t<=200). Each of the next t lines consists of two lines. The first line consists of three integers : L, length of the cake (3<=L<=5*10^4), N, total number of points where the cake can be cut (2<=N<=MIN(L-1,10^4)) and K (0<=K<=L-1). The second line of each test case contains N distinct integer array A, where each integer denotes the point where the cake can be cut(in cm) 1<=A[i]<=L-1.  Output Print the answer in single line.  Sample Input 2 10 2 6 1 3 10 3 5 1 3 9  Sample Output 1 3  Explanation For the 1st test case, if the cake is cut at 1cm and 3cm, three pieces will be generated of length 1cm,2cm,7cm.As the length of the third piece is greater than 6, it's a 'good' piece. For the 2nd test case,all three possible pairs will be 'good' pieces 
vis[node] pra pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Junior_chef got a task at school to collect S  pencils. Each day he can collect only one pencil. As S can be a very large number so it could take many days to complete the task, but then he remembers that his father,chef gave him the magic that can double anything (i.e if he has 2 pencils, the magic will make them to 4 pencils). Junior_chef can use this magic any number of time on the collected pencil on a particular day and add this to the previously collected pencils. Remember that he wants exactly S pencils and he can't throw any pencil. If he gets more than S pencils then he gets 0 marks. Help him to collect exactly S pencils in minimum number of days.  Input  :  The first line of the input contains the number of test cases t (1<=t<=10^5). Then next t lines contains a single number S (0 <= S <= 10^9), which is number of pencils Junior_chef has to collect. Output : For each test case, output the minimum number of days taken by Junior_chef  to complete the task. .  Sample Input 2 1 3  Sample Output 1 2  Explanation In the second case when s = 3, he will collect 1 stone on the first day and double it and collect the remaining one on the next day. 
ss[n]<=00 holds steps<i+00 steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Junior_chef  and his classmates love a girl named Alice and want her to sit with them. But Alice, being a lover of Mathematics will only sit with the boy who can calculate the correct impressions of a problem. The problem goes like this - each student is given an identical string of length L. The impressions of a string is the number of such sub-sequences (http://en.wikipedia.org/wiki/Subsequence) of a string which have an odd length n(n ≥ 3) and possess the unique property, the middle most character of the string is 'o' and all other characters are 'l'.So if length n=5,the string "lloll" has an impression 1.  Input  :  The first line of the input contains the number of test cases t (1<=t<=10). Each test case consists two inputs: The string S having length L(1<=L<=100000) and the length of the string 'n' to be searched in S,(1<=n<=S-1),n is odd. Output :Print the impressions of the string modulo  10^9+7(1000000007),as the output might overflow. .  Sample Input 2 lol 3 ollollo 5  Sample Output 1 1  Explanation In the first test case, the string 'lol' satisfies the condition so it has a impression 1. In the second test case the only string that satisfies the condition is 'lloll' so it has a impression 1. P.S. : Both the test cases are having Continuous good strings. 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Every one knows that Dhoni is not a superstitious player and believes in team  game play and always gives credit to his boys for winning. But as every Indian mother, Dhoni's mother is superstitious and is very upset as her son has retired from test cricket. She wants her son to win this world cup which could be last for him . She visits a fortune teller, the ORACLE. Oracle takes the Jercy number of all the players in Indian team and wants to do certain operation on it. She writes all the number on a piece of paper in binary format, arranges them in order of increasing number of  1's and then takes XOR operation between all the numbers. If the resulting number contains more than X number of  1's then India wins, otherwise India looses. Here X is the date on which the game is to be played.  Input First line contains the number of test cases. For each test case first line contains 15 space separated integers, which is the jercy number of each player. Next line of the test case contains the date X on which day the game is to be played.  Output Output YES if India will win, otherwise print NO  Constraints  1 ≤ T ≤ 10^6 1 ≤ Jercy No. ≤ 2^31 1 ≤ X ≤ 31   Example Input: 1 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 12  Output: NO 
c[j%0] c[j%0] c[j%0] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A certain business farm has introduced a loyalty program. At the time of registration to the loyalty program, a customer is given 1 point. The points will get upgraded after the first new purchase every week. After such purchase, the customer can select between the following two policies to upgrade points:  Get exactly 1 more point Double the points that he/she has  For example, if the customer had 43 points before a purchase, he/she can upgrade it to 44 or 86, depending upon points upgrade policy of their choosing. At the time of registration, each customer is also given a Jackpot target. Special facilities will be provided to the customer if the accumulated points of the customer become equal to this Jackpot. However, accumulating points more or less than the Jackpot does not earn them anything. For example, for a customer with Jackpot target 437, special facilities will be provided if and only if his/her points becomes exactly equal to 437 after some purchases. Of course the simplest plan that may be adopted by the customer is to increment his points by 1 after each purchase. However, an intelligent customer would like to achieve the Jackpot score in the minimum number of purchases. Even still, for a single customer, the number of weeks in which he gets the Jackpot will be equal to the number of purchases, since only the first purchase in a week qualifies towards upgrade of points. The most intelligent customer of all would partner with a friend and try to merge their points in the end. Of course this is better because this means that fewer weeks will be necessary to achieve the Jackpot. Alice and Bob are going to use this strategy. They will decide a sub-target score for themselves (which may be different for each of them) and try to reach that sub-target in the fewest number of weeks (at the rate of one purchase per week). Once both of them reach that sub-target, they will merge their points to achieve Alice's Jackpot target! See the Explanation Section for clarification. Write a program that takes as input Alice's Jackpot score and outputs the minimum number of weeks Alice and Bob take to achieve the Jackpot score. Note that Alice and Bob will never merge their scores in between. They will only merge their scores once they reach the respective sub-targets they decide for themselves.  Input The first line of input contains the number T, the number of test case. Each test case contains a single integer N, Alice's Jackpot target.  Output For each test case, output a single line containing the number W, the minimum number of weeks necessary for Alice and Bob to achieve Alice's Jackpot target.  Constraints  1 ≤ T ≤ 1000 2 ≤ N ≤ 1000000000   Sample Input  4 2 4 10 55   Sample Output  0 1 3 6   Explanation In the first example, Alice and Bob have already reached the target. In the second example, they both choose the sub-target 2 and achieve it in 1 week by making one purchase each. Their merged score then becomes equal to 4. In the last example, Alice chooses to reach 8 and Bob chooses to reach 2. Alice can reach 8 in 3 weeks and Bob reaches 2 in 1 week. Thus, they achieve their target 10, in 3 weeks (bottlenecked on Alice). There are more ways to split the target to still achieve it in 3 weeks, but there is no way to split the target among them to achieve it in 2 weeks. Hence, the answer is 3. In the last test case, Alice and Bob can split the target as 36 and 19. 36 can be achieved Alice in 6 purchases (or weeks). 19 can be achieved by Bob in 6 purchases (or weeks). Hence, the answer is 6. Of course there are other ways, but there is no way that can achieve this in fewer than 6 weeks. 
interval interval cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== maxVals[q maxVals[q maxVals[q maxVals[q cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  A cricket match is going on between India and South-Africa. Currently AB de Villiers is batting and team India is bowling. AB de Villiers hits a ball hard and goes high up in the air but is not able to cover the boundary. The spot where the ball is going to fall is the point P1 in the field which has the coordinates  (x1,y1) (where x1 and y1 are integers). When the batsman hit the ball, Sir Ravindra Jadeja was the one closest to the point P1  on the ground and was initially standing at the point P2 (x2,y2) (where x2 and y2 are integers). The secret behind the fast fielding of Sir Jadeja is that he moves towards his target by placing his steps at only those points that have integral coordinates. Now, Sir Jadeja starts moving towards the point P1 in order to take a catch. You are the cameraman shooting the entire trajectory of Sir Jadeja. You have to know the number of steps Sir Jadeja takes at locations (x,y) on the line segment between P1 and P2 (excluding P1 and P2) which satisfy the condition that both x and y are integers?     Input The first line contains a single integer T, the number of test cases. T lines follow. Each of the following T lines contains one test case each. Each test case contains 4 integers x1, y1, x2 and y2 separated by a single space.  Output A single line containing the number of steps.  Constraints 1 <= T <= 105 -10^9 <= x1, y1, x2, y2 <= 10^9  Example Input: 3 4 0 0 2 5 5 2 2 8 16 1 9  Output: 1 2 6    Explanation Between (4,0) and (0,2) there’s only 1 integral point (2,1) hence 1 step. 
se-0 steps<i+00 steps<i+00 steps<i+00 steps<i+00 steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n s[i-0][j]== +0] s[i-0][j]== fpow fpow fpow fpow fpow fpow seen x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Recently, Jack organized  a party where his N girlfriends came. Each of his girlfriend was wearing a colored dress and there are K different color dresses in total. For this party Jack hired a photographer who secretly took photos of his girlfriends. The next morning, Jack decided to upload some photos (as taken by photographer) on Facebook but he uploads only those photos which are "pretty" to gain more number of likes. A photo is said to be "pretty" if more than half of his girlfriends in it are wearing same colored dress. In other words, if there are G girlfriend in the photo, it is pretty if strictly more than G / 2 girlfriends have same colored dress. Write a program that will check for a set of M pictures if they are pretty, and which color is dominating if they are.  Input First line contains two integers N number of Girlfriends, K number of Colors. Second line contains N integers between 1 and K (inclusive) representing color of dresses, ordered the way girlfriends came into the party. Third line contains M, number of pictures. Next M lines contain two integers A and B. Each line describes one picture. On it there are all Girlfriend starting from A'th all the way to the B'th.   Output Output M lines. For each picture output “no” if Jack doesn't think the picture is pretty, and “yes X”, where X is the color dominating on the picture, if He does.  Constraints 3 ≤ N ≤ 300000 1 ≤ K ≤ 100000 1 ≤ M ≤ 100000 1 ≤ A ≤ B ≤ N  Example Input:  10 3 1 2 1 2 1 2 3 2 3 3 8 1 2 1 3 1 4 1 5 2 5 2 6 6 9 7 10  Output:  no yes 1 no yes 1 no yes 2 no yes 3 
name mark[x][y]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Tom being angry with Jerry, decided to catch him. Both are standing on x-axis with Tom's current position as (x1,y1) and Jerry is standing at (x2,y2). Jerry understood Tom's intention and prepared himself for the pursuit, he always runs away from tom. Tom knows Jerry is faster than him but this time Tom is determined and chases Jerry.  Input  The first line of the input contains an integer T denoting the number of test cases. Now each test case contains single line having four integral values x1,x2,v1, and v2.Where x1 & x2 are positions of Tom and Jerry respectively. and v1 & v2 are the speeds of Tom and Jerry respectively. The speed is defined as unit distance per unit time.     Output  A single line denoting whether it is possible for Tom to catch Jerry if possible then output the coordinates at which Tom catches Jerry in integral time and if not possible then output "not possible".     Constraints  1 ≤ T ≤ 100 -2*10^5 ≤ x1,x2 ≤ 2*10^5 0 ≤ v1,v2 ≤ 2*10^5 y1 = y2 = 0     Example Input: 3 0 2 2 0 0 4 2 2 0 2 2 1  Output: (2,0) not possible (4,0)   
print_bn steps<i+00 steps<i+00 steps<i+00 lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Today, as usual, Jerry comes up with a new puzzle for Tom. Jerry knows very well that Tom is well aware of the concepts of fibonacci series. So he intends to present the problem with a twist. By choosing any random integer Jerry asks Tom to tell whether the given number is a fibonacci number.    Input  The first line of the input contains an integer T denoting the number of test cases. Next T lines which contain a random number N chosen by Jerry.     Output  For each input random integer you need to tell if the integer is fibo number or not. If the integer is fibo number output "is fibo" otherwise output "not fibo".     Constraints  1 ≤ T ≤ 20 1 ≤ N ≤ 1*10^9     Example Input: 3 1 3 7  Output: is fibo is fibo not fibo 
c[j%0] c[j%0] #include<cassert> #include<cassert> x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Stepping Stones is a very famous game in Jamia Millia Islamia. Given N number of milestones where each number written on the milestone represents the maximum number of steps that can be made from it. Lebron James wants to reach the last milestone or beyond in minimum no of steps if he starts from the first milestone. Help lebron!!!!.    Input The first line contains T representing the number of test cases. Every test case contains the following: The first line is N the number of milestones. The next line conatins number written on each milestone A[1....N].   Output Give the minimum no of jumps required by lebron to reach the last milestone.  Constraints  1 ≤ T ≤ 50 1<= N <= 1000 1<= A[i] <= 10000     Example Input: 1 5 1 2 3 4 5  Output: 3    Explanation (1->2->(3,4)) 
cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Bob has been given a Summer Vacation project by his Math's Teacher. After spending almost the whole vacation sleeping,eating,playing and doing everything (except coding), Bob is now anxious about completing the project and that too before the school reopens. N number of Pipes of length L1 , L2 ,L3 , …... LN are kept in a store. Using these pipes,which can only be joined end to end (such that they can move freely in a 2-D plane only about the pivot/point of intersection) , construct any polygon having the maximum number of edges (pipes representing the edges). Now, Bob needs your help!     Input First line of input contains an integer T denoting the number of test cases. For each test case, the first line contains an integer N denoting the number of Pipes. The next line contains N space separated integers L1 , L2 ,L3 , ……, LN where Li represents the length of ith pipe.   Output For each test, print a single line containing the maximum number of pipes which can be used to construct the polygon. In Case, if it's impossible to construct a polygon using the pipes present in the store, then print “-1” (quotes of clarity).   Constraints  1 ≤ T ≤ 1000 1<=N <=10000 1<= Li <= 10^6     Example Input: 2 4 2 2 3 3 3 1 2 3  Output: 4 -1    Explanation  Example Case 1: one of the possible polygon is a 3 sided polygon(triangle) with edges 2,2,3. Another possible polygon is a 4 sided polygon(rectangle) with edges 2,2,3,3. Since 4 > 3 , hence, we get a polygon with maximum of 4 edges. Example Case 2: Not possible to get a polygon with edges 1,2,3. Hence the Output is -1. 
x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] task task task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  XOXO likes to play with numbers.So,given a number N help XOXO to find whether it is a fibonacci number or not.It won't be hard!    Input First line contains T denoting the number of test case. The next T line contains an integer N  Output For every test case print(without quotes) "Yes" if N is a fibonacci number else output "No"  Constraints  1 ≤ T ≤ 10000 1 ≤ N ≤ 100000     Example Input: 2 3 10  Output: Yes No 
name
  Problem description.             JNTU College is conducting an Warmup contest for students to bring out their approaches of solving a problem. A Challenged B that he could not solve the problem.So help B in solving the problem.      Given a series of numbers with only 3 and 4.Your task is very simple i.e.. find the nth number in the series. First few numbers in the number system are: 3, 4, 33, 34, 43, 44, 333, 334, 343, 344, 433, 434, 443, 444, 3333, 3334, 3343, 3344……..   Input Input contains only a single integer N.  Output Print the Nth number in the series  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ N ≤ 100     Example Input: 5  Output: 43    Explanation If N=5 then the 5th number in the series will be 43. Hence you need to print the output as 43 ... 
vis[node] vis[node] vis[node] {doThis task task task task task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
       Your task is very simple.Calculate the sum of two numbers given in the input.    Input contains two integers  Output You need to print the sum of two numbers in this format Result = ..   Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ N,M ≤ 10^100    Sample Input: 20 30 Output: Result = 50 
//cout<<v[i]<<
Problem Description.   Nithin proposed to his girl friend on valentines day. But she had kept a condition that if he answers her task then she will accept his proposal. As Nithin is new to programming, help him in solving the task. Your task is so simple.i.e...you need to find the factorial of a given number.    Input Input description. An Integer N    Output Output description. Print the required output  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ N ≤ 100     Example Input: 5  Output: 120   
Found a>c a>c _R _R _R _R _R _R c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description.  Write a C program that, given an array of n numbers and another number x, determines whether or not there exist two elements whose sum is exactly x.    Input Input description. Line1---Size of the array Line2---Array of Integers Line3---required sum  Output Output description. Print YES if such pair exist else print NO  Example Input: 5 3 4 5 6 7 7  Output: YES 
cout<<bnd<<
  Jovians, the citizens of Jupiter, have a very long life, and all the Jovians are a part of one family. Since they have a very long life, in order to control population, all the Jovians are allowed to have at most 2 children and not more. Jovians recently discovered life on earth. Since, they are very friendly, they want to send a group to interact with new species found on earth. They have fuel for only one round trip. They want to send as many as Jovians as possible but the technology they use restrict them to do so. The technology of their space ship does not allow a father and his child to travel. That is, if A is the father of B, then A and B cannot travel together in the space ship. Since they are not very smart, they need your help to find out the maximum number of Jovians they can send.   Input First line contains number of test cases. The first line of every test case is N, the total number of Jovians. The next N-1 lines contains two space separated integers A and B, where B is the father of A.  Tips: 0th Jovian is the supreme and all other are his descendants.    Output A single integer output for every test case denoting the maximum number of Jovians they can send.    Constraints  1 ≤ T ≤ 200 1 ≤ N ≤ 5000 0 < A < N 0 ≤ B < N     Example Input: 1 4 1 0 2 0 3 2  Output: 2    Explanation Example case 1 : Here 0 is the supreme Jovian, 1 and 2 are his child, and 3 is the child of 2, therefore they can send maximum 2 Jovians. They can send either 0 and 3, 1 and 2 or 1 and 3. 
v[a] holds holds holds task task task task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Sujatha, after becoming the CEO of a company, decided to grant some of his books to his company’s employees for free! On one fine day, he asked all his employees to form a line and he started distributing books. Sujatha will note down the ID of the employee, when he gives the book.  All his employees are die- hard fans of Sujatha, hence they started cheating by collecting more than one book. You have to find out the number of people who have cheated. Sujatha has agreed to give some of his books to you, if you solve this problem. (Come on! What are you waiting for :) )   Input First line contains the number of test cases  T. For each test case, first line would contain N which denotes the size of the ID list. Next line will contain the IDs of employees in the ID list.  Output For each test case, output the number of employees who cheated.  Constraints 1<=T<=100 1<=N<=1000 1<=ID<=1000  Example Input: 2 3 1  1  2 3 1  2  3  Output: 1 0  Explanation Example case 1. Employee whose Id is 1 has got book twice. Hence he has cheated.  Example case 2. All employees have got book only once. 
c[j%0] q[i] pra _R _R x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Kashyap is playing a message passing game with his friends. Kashyap always starts the game. At the beginning of the game, Kashyap will pass the message to some of the players. When a player receives a message, he may pass the message to some of the other players.A player will not pass the message to someone who has already received the message.A player may also choose not to spread the message.At the end of the game, everyone would have received the message. After the game, each player writes his Id and Sum of Ids of the players to whom he passed the message. Find out the ID of Kashyap.  Input First line will have an integer T which denotes the number of test cases. First line of each test case contains N which denotes the number of players. Next N lines contains two integers A and B A denotes the id of the person B denotes the sum of ids of the players to whom he passed the message. 1<=A<=N. IDs of the players are always unique.   Output For each test case, print the ID of Kashyap.  Constraints 1<=T<=100 1<=N<=100000 1<=A<=N 0<=B  Example Input: 2 3 1 5 2 0 3 0 3 1 2 2 3 3 0  Output: 1 1    Explanation Example case 1. there are 3 people in the game. Player 1 has passed the message to 2 and 3. Player 2 and Player 3 have not passed any message. 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Jayapradha and Jayasruthi are twin sisters. They love adventures and went to kids island as part of their adventure. Every city in that kids island is described by the one-dimensional co-ordinate system. They planned to go to the city located at 0th co-ordinate. Unfortunately, Jayapradha lost her way to reach the city and got trapped at some city located at the nth co-ordinate. But Jayasruthi reached the city at 0th co-ordinate safely. To reach her sister, Jayapradha moves towards 0th co-ordinate through a series of steps. At each step, she could only move to a length of "any prime factor of n". The factor chosen need not be same in each step(i.e it could be any of the prime factor of n). Your task is to help Jayapradha to reach her sister Jayasruthi in minimum number of steps.   NOTE: 1 IS NOT PRIME.   Input First Line of input has T, the number of test cases. Each test case has one line containing n, the position of Jayapradha.   Output One line for each test case, minimum number of steps needed for Jayapradha to reach Jayasruthi.   Constraints 1 <= T <= 10^3 1 < n <= 10^8  Example Input: 2 3 4  Output: 1 2 
a>c a>c a>c _R _R _R _R _R _R _R _R _R c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Ashvant is a cool guy with lot of girlfriends. Since valentines day is nearing he wishes to visit one of his girlfriends who is currently at a different city. So he decides to travel by bus and in meantime he was thinking about gifting her. He thought of gifting something unique. He had THREE types of very rare stones(type1, type2, type3). He had many stones in each type. These are very rare stones and his girlfriend really likes these kind of gifts :P So he decides to make RINGS with these stones placing them at the centre of the ring. He makes rings based on the following conditions 1) three stones of type1 makes the center of the ring 2) three stones of type2 makes the center of the ring 3) three stones of type3 makes the center of the ring 4) a stone from type1, a stone from type2 and a stone from type3 makes the center of the ring(i.e single stone from each type gives 3 stones in total which makes the center of the ring) No other combinations will be considered for making the center of the ring. Ashvant is very busy so he asks you to make the maximum number of rings from these three types of stones given to you.   Input  First line contains the number of testcases, T (1<=T<=10) Following T lines (ith line describes ith testcase) contains three numbers each(t1, t2, t3) each describing the number of stones in each type. (0 <= t1,t2,t3 <= 10^9)   Output  Print T lines (ith line corresponding to ith testcase)containing the maximum number of rings that can be made from given number of stones in each type.   Example Input: 2 6 9 12 4 4 4   Output: 9 4 
interval print_bn ss[n]<=00 ss[n]<=00 ss[n]<=00 add_edge add_edge temp[00] vplld str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] second]+M0[V[i] task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Dipu's hard disk crashed last week. He bought a new one and has already installed all necessary software. But he has lost his personal collection of media files. It is just unbearable! How can he avoid such a loss in future?   Dipu is planning to maintain a "fresh" second hard disk in his computer as a backup device. He wants to make sure that the backup hard disk is never too old, by replacing it with a new one every few months. This is what he will do: after a backup hard disk has been used for a few months, Dipu will buy a new hard disk, move all the data from the old backup disk to the new one and then sell the old one. He knows that he will have to sell an old backup disk at a price lower than its original price because of both depreciation and the drop in the market price of new hard disks. His goal is to keep the total cost of maintaining the backups as low as possible.   Given the prices of different models of hard disks in the next few months, your job is to determine the minimum cost of maintaining the backup disks in the same period of time. Assume:  Dipu will only buy a new backup hard disk and sell the old one on the first day of a month. He has no backup disk to sell on the first day of the first month. So he needs to buy a new backup disk on the first day of the first month, without selling. The amount he will get by selling a hard disk is exactly Tk 100 less than the current price of a new hard disk of the same model at the selling time. the price of same model hard disks never goes up versus months, and always remains expensive than Tk 100.   Input Input consists of several datasets. Each dataset consists of the followings: Tips:  A line containing the name of the set. A line containing 2 positive integers n and m, denoting respectively the number of different models of hard disks and the number of months to consider. Each of next n lines contains the description of one hard disk. The description of a hard disk consists of its model name followed by m integers denoting its price on the first day of the m months in order.   The end of input is marked with a line consisting of "TheEnd" (quotes for clarification). All data on a single line are separated by exactly one space.  Output For each set of input, the output should contain the name of the set on the first line first. On the second line, output the minimum possible cost. Then, list several lines of hard disks used in those m months, in the order of their use (maybe less than m disks are used). For each hard disk, its name should be followed by the number of month(s) it will be used. At the end of each set, print an empty line.  If there are multiple possibilities, any one of them is acceptable.  The end of output should be marked with a line consisting of "TheEnd" (quotes for clarification).  See the sample output for details.   Constraints 1 < n < 100, 1 < m < 200  The prices are below Tk 20,000 and non-increasing in the same line.  The name of sets and the name of a hard disk consist of 2 to 16 alphanumeric characters.  Example Input: FirstSet 2 4 Brand1 4000 3600 3500 3400 Brand2 3500 3500 3200 3000 SecondSet 4 8 Mintor 4500 4500 4400 4200 4000 3700 3500 3200 Rivergate 4500 4400 4300 4100 3900 3800 3600 3300 EasternDigital 5000 4900 4800 4700 4500 4100 3700 3500 WesternAnalog 7500 7200 7000 6800 6500 6200 6000 5500 TheEnd   Output: FirstSet Tk 3400 Brand2 for 1 month(s) Brand1 for 2 month(s) Brand2 for 1 month(s)  SecondSet Tk 4500 Mintor for 8 month(s)  TheEnd   Problem Setter : Dr. Mustaq Ahmed  
interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl practise practise practise practise practise practise practise vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& Programming Programming Programming Programming Programming Programming lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& vb& vb& vb& vb& vb& vb& vb& vb&
John lives in a hilly city. He wants to go from point A to point B and he is planning to walk today. Fortunately for him, the city is designed like a grid. Unfortunately, as the elevation of each point is different, finding the easiest path is not trivial. That’s why John needs your help.  John wants to find a path from A to B with minimum hardness. Hardness of going from point A with height h_1 to adjacent point B with height h_2 is    if h_1 > h_2, then 0.5 + 0.5 * sqrt(1 + (h_1 - h_2 )^2)  otherwise, -0.5 + 1.5 * sqrt(1 + (h_1 - h_2 )^2)   Distance between adjacent points is considered one unit. Slope of road segments between adjacent points is never more than 0.5.   Input The input file starts with a number T that represents the number of test cases. Then T test cases follow. Each test case starts with two number r, c, representing the size of the grid. Next r lines contain c numbers. j-th number from i-th line corresponds to the height of the intersection of i-th street with j-th avenue.   Next line contains an integer q, then q lines follow. Each of the following lines represents a query. A query contains four numbers: i_s, j_s, i_e, and j_e. This represents a request to find the path with minimum hardness from intersection between i_s-th street and j_s-th avenue to the intersection between i_e-th street and j_e-th avenue.   Output  Start each test case with case number as shown in sample output (e.g. “Case 1:” for the first case, quotes for clarification). Then output q lines, each for one query. For each query, output a line containing the hardness of optimal path with 6 digits after decimal point.   See sample input and output in the next page for details.   Constraints 1 <= T <= 10 5 <= r, c <= 100 1 <= q <= 100 1 <= i_s, i_e <= r 1 <= j_s, j_e <= c  Example Input: 2 6 5 0.0 0.1 0.2 0.3 0.4 0.1 0.0 0.3 0.3 0.5 0.2 0.2 0.2 0.2 0.2 0.3 0.4 0.5 0.5 0.3 0.3 0.5 0.5 0.5 0.6 0.6 0.4 0.4 0.2 0.2 5 1 1 4 4 1 1 6 5 1 1 1 5 3 1 1 3 6 5 2 3 6 5 0.0 0.1 0.2 0.3 0.4 0.1 0.0 0.3 0.3 0.5 0.2 0.2 0.2 0.2 0.2 0.3 0.4 0.5 0.5 0.3 0.3 0.5 0.5 0.5 0.6 0.6 0.4 0.4 0.2 0.2 3 1 5 6 1 6 1 1 1 6 3 2 5   Output: Case 1: 6.037407 9.049802 4.029925 4.009975 6.066684 Case 2: 9.074374 5.029497 6.066684    Problem Setter : Tanaeem Moosa  
i+=0 mark[x][y]=0 cout0 ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n #\n #\n ans/0 ans/0 second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] form form form x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name
In the land of Rhyme, the King and his people always speak in rhymes. They are so accustomed in conversing using rhymes that at one point it became monotonous. So what was once a source of happiness and amusement is now creating a strange emotion within the heart of the people. The productivity of the people has become less and more importantly, the happiness index of the land has plummeted. The experts have investigated the whole matter and reported that speaking in rhyme is not the problem; it is the monotony of the same thing that is affecting the people. In fact they suggested changing the definition of rhyme slightly. One of their recommendations is to introduce a new concept of "richness" in a sentence.  A sentence would be termed rich if it starts and ends with the same word! The King seems to like this definition. But he is finding it difficult to even say a simple meaningful sentence that is "rich".  The King became quite anxious. Your boss, King’s ICT adviser, suggested that a competition among the general people should be thrown where the participants would have to submit a piece (story/poem/essay etc.) full of rich sentences. Then the richest pieces would be judged and be awarded.  The King made a decree accordingly. Your boss was ordered to formulate a judging scheme for the pieces and write a program immediately to do the judgment. And as usual he formulated something and asked you to implement that. What he has asked you to do is as follows. You will take as input a piece as a character array. And output another array where each position will give the richness of the piece up to that position.  “What is richness?” You asked.  Your boss replied, “The richness is the size of the identical proper substring which is present at the beginning and at the end of the piece. But, the complete string cannot be considered as its substring.”  “But you said to calculate the richness at each position”! You inquired.  “Yes, of course! When you calculate up to a position, you will have to assume that the piece ends at that position.” Your boss smiled. He seemed to be quite happy in formulating this.  You asked again, "Don't I need to think about the word boundaries?"  “Not now, my son. We will think about it later. Do it without considering word boundaries for now. You will consider the input character by character”. He assured you. He seemed all the more content with his own formulation and probably was not seeing the possible pitfalls. He continued, "And one other point; richness of the first position would always be 0."  Meaningful, you thought. But you had to ask a final question. “How would you then finally compute the richness of the total piece using all these information? What will be the formula?”  Your boss seemed perplexed. He did not think this through, as it seemed. So, he said, “You need not worry about that. Do as I said. Just remember that the input size could be quite large.”  You knew that you have to stop asking and start coding now. “Yes, boss!” you said. You also realized the implication of the last direction of your boss. Few years back there was another competition on literary works. And the size of some pieces was 4 million characters!   Input Input consists of several lines. Each line contains a string of lowercase English letters. End of input is indicated by a line containing the string “End”. No output line should be produced for this line.   Output For each input line, you must output a line containing several integers, separated by space. The number of integers must be same as the length of the input string. The Integer at a specific position must represent the richness of the input string up to that position. There must not be any trailing space in any output line.   Constraints The total length of input is less than 4 * 10^6  Example Input: oebmgoca bdblhc jgojeqp atofpgrwk fdcdd ababbacdbacdbacd dacc cbda accb dcbb dacbbcbcbcbcdcbbbcbcbcbcbcbcdacbbcbcdcbbbcbcdcbbdcbb End   Output: 0 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 0 1 0 0 0 1 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 2 3 4 5 6 7 8 1 0 0 0 0 0 0 0 1 0 0 0 1 0 0 0   Problem Setter : Dr. M Sohel Rahman  
=a+b+c interval interval steps<i+00 steps<i+00 steps<i+00 elem elem elem ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 x0-x0 x0-x0 x0-x0 x0-x0 algorithm algorithm algorithm algorithm pp pp pp que que que que que que que que shopner vals[i] vals[i] vals[i] vals[i] max0+0 max0+0 max0+0 name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] name name name name name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
Suppose we have recurrences of the following form, characterized by three parameters m, sigma1..m and f0..m-1, where m > 0 and sigmai is a binary variable (1 <= i <= m).  A sequence of number s can be generated as followings:  if i < m, then si = fi otherwise, i.e. i ≥ m, si = fi - 1 * sigma1 + ... + fi - j * sigmaj + ... + fi - m * sigmam  Given m, n, sigma1..m and f0..m-1, compute sn modulo 10^9 + 7.  Input  First line of input contains a positive interger T, then T testcases follow.  For each testcase, first line contains positive integer m and non-negative integer n separated by a single space. Second line contains m integers of f0..m-1, separated by single space. Third line contains m numbers of sigma1..m, separated by single space.  Output For each testcase, output should contain a single number sn modulo 10^9 +7 followed by a newline.  Constraints 1 <= T <= 20 1 <= m <= 100 0 <= n <= 10^9 -10^9 <= fi <= 10^9 sigmai = 0 or 1  Example Input: 2 2 100 1 1 1 1 3 10 1 1 1 1 1 1  Output: 782204094 193   Problem Setter : Asif Haque  
Found holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Alice and Bob have got some chocolates as a gift. There are 2 types of chocolates. Some chocolates have the shape of a sphere and some chocolates have the shape of a stick. Each chocolate stick connects a pair of chocolate sphere. They want to divide these chocolates and they seek your help. They want all of the chocolate spheres for themselves. Alice loves chocolate sticks. For all of the chocolate spheres she gets, each pair of them should be connected by a stick. Bob dislikes chocolate sticks. For all of the chocolate spheres he gets, no pair of them should be connected by a stick. To be clear, if any two chocolate spheres are connected by a chocolate stick initially he will take at most one of them but not both. They do not care about the sticks that connect a sphere of Alice and a sphere of Bob. You can choose to eat them. Given the description of the chocolate spheres and chocolate sticks, determine if you can divide those chocolate spheres among Alice and Bob, satisfying both of their preferences.  Input  First line of the input contains T, the number of test cases. Each test case starts with 2 integers N and M. N is the number of chocolate spheres (The chocolate spheres are numbered from 1 to N) and M is the number of chocolate sticks connecting them. Each of the next M lines contains 2 integers, a and b, denoting that the chocolate sphere with number a is connected to a chocolate sphere with number b.   Output For each test case output "YES" if you can divide the chocolate spheres and "NO" otherwise.  Constraints 1 <= T <= 100 1 <= N <= 500 0 <= M <= n * (n - 1) / 2 For a pair of chocolate spheres, there will be at most one stick that is connecting them.  Example Input: 4 4 4 1 2 1 4 2 3 3 4 5 4 1 2 1 3 1 4 1 5 10 0 3 3 1 2 1 3 2 3  Output: NO YES YES YES   Problem Setter : Abdullah Al Mahmud  
adj[elem _f _f _f _f _f elem elem elem ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 x0-x0 x0-x0 x0-x0 algorithm algorithm algorithm algorithm algorithm pp pp que que que que que que que que que que que que que vals[i] vals[i] vals[i] max=count max=count max=count max=count name name name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
In olden days, when primary memory was not as available as it is now, files were stored in external storage devices like tapes, and then two files or their parts were loaded in memory for merging. In merging two sorted files, in the worst case, number of comparisons required equals sum of lengths of the two files. Assume in K-way merging the number of comparisons equals sum of lengths of files to be merged. Given length of a set of files you are required to find order in which these files will have to be merged in minimum number of comparisons.  Input The first line of input is an integer T, denoting the number of test cases. From the next line, test cases follow. For each case, the first line contains two integers, N and K, representing respectively number of files to be merged and maximum number of files that can be merged at the same time. Next line contains N positive integers representing the length of each file.   Output For each test case, you must print a single line with the test case number and the minimum number of comparisons incurred to merge the files. Please refer to the sample input and output for exact formatting.  Constraints 1 <= T <= 50 1 <= N <= 1000 2 <= K <= N The maximum length of a file can be 10^8.  Example Input: 2 11 2 3 1 4 5 2 7 6 8 3 9 4 11 3 3 1 4 5 2 7 6 8 3 9 4  Output: Case 1: 172 Case 2: 110    Problem Setter : Dr. M. Kaykobad  
Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Nikhil wants to repay his debts to Sita but would like to do so using only highest denominations possible. Once he has decided to use a denomination, he wants to use as many notes/coins of that denomination as possible. Amounts to be paid are given as numbers with two decimal places. Available denominations are given in an array.  Input The first line of the input will contain the number of test cases, T. The first line of each test case will contain 2 integers N and M denoting respectively the number of denomination values and the number of scenarios on that test case. Next line will contain the N denominations. Note that, a denomination can be either an integer x or a fractional number y, with exactly 2 digits after the decimal point and a zero (0) before the decimal point. It is guaranteed that there will always be a denomination of value 1 and 0.01. Then there will be M numbers in the next line. Each of these numbers z can either be an integer or a decimal number with exactly 2 digits after the decimal point (i.e. 100.50, 55.01). Each number represents the amount owed by Nikhil in the respective scenario.   Output For each case the first line of output will contain “Case :”. Then for each scenario the first line of output will be “Scenario :”. Then output how Nikhil should repay his debt – In each line output two integers representing respectively denomination and number of notes/coin of that denomination, in descending order of denomination. Please represent notes as integer values and coins as decimal values with exactly 2 digits after the decimal point a zero (0) before the decimal point. Please refer to the sample input and output for exact formatting.   Constraints 1 <= T, M <= 50 2 <= N <= 50 1 <= x <= 10000 0 < y < 1 0 < z <= 10000  Example Input: 2 17 2 1000 500 200 100 50 20 10 5 2 1 0.50 0.25 0.20 0.10 0.05 0.02 0.01 5878.83 1000 3 1 1000 1 0.01 1000  Output: Case 1: Scenario 1: 1000 5 500 1 200 1 100 1 50 1 20 1 5 1 2 1 1 1 0.50 1 0.25 1 0.05 1 0.02 1 0.01 1 Scenario 2: 1000 1 Case 2: Scenario 1: 1000 1   Problem Setter : Dr. M. Kaykobad  
sum0 que que que que que que index/i index/i index/i index/i a[00] x=k*j+0*j it-- x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Tower of Hanoi problem is a classical recurrence problem that is often used to teach recurrence relations to computer science students. In the classical 3-Peg Tower of Hanoi problem initially the peg A contains all disks top to bottom in a strictly small to big order. This tower of disks is to be moved to peg C using peg B as intermediate. The rule of the game is that in every move the top disk from one of the towers can be moved to the top of another tower. Never ever can we put a large disk on top of a smaller one. In this problem, in order to move a tower of n disks, we must shift the top sub-tower of n - 1 disks to the only intermediate peg, then shift the largest to peg C and then the sub-tower of size n - 1 from intermediate to destination peg. Whatever the value of n may be exactly n - 1 disks have to be shifted to the only intermediate peg. We have no choice of fewer or more disks, and no choice for the intermediate peg. In multi-Peg Tower of Hanoi problem we have p ≥ 3 pegs (P1, P2, ..., Pp) and n disks to move from P1 to Pp using minimum number of moves. We refer to this as (n, p) system. Now we have p - 2 intermediate pegs and not all of n - 1 disks need to be shifted to one intermediate peg. However, before the largest disk moves to the destination peg, all top n - 1 disks have to be distributed among all intermediate pegs. While the optimal strategy still baffles algorithm designers, many believe that in the optimal solution, certain optimal number n1 disks have to be shifted to an intermediate peg. Then the remaining n - n1 disks must reach destination, while the disks in the intermediate peg will remain untouched. Then the disks in the intermediate peg must reach destination. In transferring any sub-tower to any peg, this strategy will be followed recursively. Let M(n, p) be the minimum number of moves required to shift a tower of n disks in p peg system. This strategy satisfies the following recurrence relations: M(n,p) = min(2M(n1,p)+M(n-n1,p-1)) for all 0 < n1 < n.   Assume further that, if multiple strategies result in minimum number of moves, then the strategy for which n1 is the smallest is chosen. Your job is to find out the move number at which a particular disk D moves ultimately to the destination peg in an (n, p) system.   Input The first line of input will be an integer T, denoting the number of test cases. Each test case is represented by a triple of integers N, P and K in the same line separated by space. N denotes the number of disks. P denotes the number of pegs. K denotes the index (1-based from the top) of the disk, whose move number need to be found out.  Output For each test case, there should be a single line of output. The line should contain “Case : ”, followed by an integer representing the move number at which disk K moves ultimately to the destination peg. Refer to the sample input and output for exact formatting.  Constraints 1 <= T <= 10000 1 <= N <= 50 3 <= P <= 50 1 <= K <= N  Example Input: 3 3 3 2 50 3 1 50 50 1  Output: Case 1: 6 Case 2: 1125899906842623 Case 3: 101    Problem Setter : Dr. M. Kaykobad  
fenwick %s%d %s%d max++ cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The King of France has turned old. He would like one of his three sons to take up his place as the next King. But he doesn’t want them to fight over the throne after his death. Over so many years in the past, his sons have been fighting with each other over trifles. But he feels that deep inside their hearts, the three brothers love each other. The King believes that he can bring back the love and harmony among his sons which was present in their childhood. He has asked Leonardo to help him accomplish this task so that his sons cherish their relationship again. So, Leonardo has come up with a game that will force all three of them to play together. The factory, just on the boundary of the kingdom, produces special kind of gold chips. Each gold chip is inscribed with a lowercase letter of the English alphabet, called its nameLetter. There is also a unique integer called aurumNumber associated with each gold chip which is inscribed on the other side of the gold chip. These chips also have special grooves on their ends which can be used to attach gold chips one after the other and make a long solid linear chain out of them. On Leonardo’s advice the King has decided to call all his 3 sons for a small collective exer cise. Leonardo has made three chains A, B and C containing the same number of gold chips. The gold chips in each of these chains are arranged in the increasing order of their aurumNum bers. Leonardo gives a chain to each of the sons. The task given to the sons is that each of them has to create a chain, for which he may remove some of the gold chips from his chain. It is necessary that all the three new chains thus created must have the same nameLetters when read from left to right. All the removed gold chips will be donated for charity. Each new gold chain must also have the gold chips arranged in the increasing order of their aurumNumber. If the sons succeed in doing this, they get to keep the gold chain with themselves. They must donate the entire chain with all of the gold chips for charity if they fail to create such chains. All of the three sons are very greedy and therefore they want to remove the minimum number of gold chips from their respective gold chains. You have to find out that what is the minimum number of total gold chips that the three sons have to donate in order to complete this exercise successfully.  Input The first line of the input contains an integer T which is the number of test cases to follow. Starting from the next line, each test case consists of three strings A, B and C in separate lines. Each of these strings is the sequence of nameLetters in the order of the gold chips (which are arranged in the increasing order of their aurumNumber) in the gold chain.    Output For each of the test cases, print the minimum number of total gold chips which the three sons will have to donate for charity.    Constraints  1 ≤ T ≤ 13 1 ≤ |A|, |B|, |C| ≤ 450 |A| = |B| = |C| Here, |A| denotes the length of a string A. Similarly |B| for B and |C| for C.     Sample Input: 2 acmicpc acmicpd acdicpc aab aba abb  Output: 6 3    Explanation Case 1: The gold chips donated by the first son are ‘m’ and ‘c’. The second son donates ‘m’ and ‘d’ and the third son donates ‘d’ and ‘c’. This leaves “acicp” as the nameLetters on the gold chains they create Case 2: The gold chips donated by the sons are ‘a’, ‘a’ and ‘b’, respectively. This leaves each of them with “ab”. 
interval interval interval ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 elem elem stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr stderr elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The capital city of the kingdom of France has a lot of tribal clans living in the outskirts. Farming and hunting are the two major occupations of these people. These clans keep moving around the kingdom and make their homes using wood and leaves. Each clan has a different culture and in general people of one clan do not like people from the other clans. They live separately and have intra-clan weddings only. With the advent of the new season, there are floods coming in from the Seine River. As these people don’t have proper houses to live in, they have requested the King to provide shel- ter in the well protected capital city. The King has decided to construct temporary houses for these clans in the Great Royal Circle which is a circle in shape. As these clans do not like each other, they can’t live together and would need some kind of a boundary to separate their shelters. The King has come up with a plan to do so. He decided that a number of bamboo sticks will be placed on the boundary of the Great Royal Circle. Then for every pair of bamboo sticks a wired fence will be used to connect them and create partitions of the circle. The bamboo sticks will be placed such that no three fences cross at the same point within the circle. Proper joints are placed at locations where two fences cross each other. In this way, the Great Royal Circle is divided into a number of regions each of which will be given to a clan to live in temporarily. As there is a shortage of dry bamboo sticks, the King’s soldiers could only manage N bamboo sticks to be placed on the boundary of the Great Royal Circle. What is the maximum number of different clans the King can provide shelter to?    Input The first line of the input contains an integer T which is the number of test cases. Next follow T lines each containing an integer N, the number of bamboo sticks available.    Output For each test case, output in a separate line the maximum number of clans which can be provided shelter from the floods. Since this number can be very big, output it modulo 1000000007.    Constraints  1 ≤ T ≤ 30000 1 ≤ N ≤ 10^9     Example Input: 4 2 3 4 5  Output: 2 4 8 16 
Found Found que que que que que que second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Leonardo Da Vinci has entered a fort which has N catacombs numbered from 1 to N . A cat- acomb is an underground cemetery consisting of a subterranean gallery. His aim is to destroy each of the N catacombs, as quickly as possible. The catacombs have a special structure. The catacombs are built in layers, with exactly one catacomb (numbered 1) in the topmost layer (layer number 1). If a catacomb is in the i^th layer, it will have exactly one passage to one of the catacombs in the (i − 1)^th layer. Also, from each catacomb, there is exactly one way out, which is to keep going to the above layers till you reach the top layer. In graph theory terms, the catacombs structure is a tree rooted at vertex number 1. Just before he was going to destroy the catacombs, his apprentice sent him a few messages with the information of the catacombs that have kids in them. Each message contains the number of the catacomb that has a kid inside it. Leonardo must not destroy any catacomb that would lead to a kid being trapped inside the fort. Leonardo has to find out how many catacombs he can destroy without trapping a kid inside.    Input First line contains a single integer T , denoting the number of testcases. Each testcase starts with a single integer N , denoting the number of catacombs. Each of the next N − 1 lines contains 2 numbers A and B indicating that there is a passage between catacomb number A and B. Next line contains M , the number of messages Leonardo got from his apprentice, followed by M lines each containing an integer indicating the number of the catacomb that has a kid inside it.    Output For each message, print the number of catacombs that Leonardo can destroy without trapping any of the kids mentioned so far in the messages.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 10 1 ≤ N, M ≤ 50000 1 ≤ A, B ≤ N     Sample Input: 1 2 1 2 2 2 1  Output: 0 0    Explanation The above system of catacombs have catacomb number 1 in layer 1 and catacomb number 2 in layer 2. First message says that there is an kid in catacomb 2. Hence none of the catacombs can be destroyed (else the kid gets trapped). In the second message, another kid is reported in catacomb 1. Still, none of the catacombs can be destroyed. Hence answer after each message is 0. 
0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] task task task task task task task task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Da Vinci is about to retire from the post of Prime Minister of the French King in a month. It is going to be very difficult for the King to find his replacement. The King is worried about the junior ministers as to how they will work without a leader. To instill in some values of team work among them, the King has asked all the N junior ministers to paint M walls together. The King feels that such a hands-on activity is a very good way to make the junior ministers come together and work as a team. The ministers are allowed to divide a wall into parts such that each part is painted by a different minister. No two ministers are allowed to paint the same wall at the same time. It can be assumed that all the ministers paint the wall at the same rate. As this is just a training exercise, ministers may have other important jobs as well and they may not be free all the time to do the painting work. S is the start time and E is the end time between which a minister is free to paint the walls. Also, we know that for a minister, painting is a mundane job. It may happen that a minister gets bored while painting a wall, leaves it in between and starts painting another wall without wasting any time. The minister may later come back to finish the previous wall or he may ask one of the other ministers who he is friends with to finish painting the wall. The King is really worried about the future of the kingdom which is going to have these min- isters without a leader. He really wants these ministers to make smart decisions and perform well in any situation that they may face. Thus, he has decided to put some extra constraints on the wall painting exercise. The King knows the number of man hours H required for a wall to get painted completely. So, for each wall he has decided a duration with the start time A and the end time D during which the ministers should start and finish painting the wall. As anxious the King is about testing his ministers, he is also worried that a failure in com- pleting the task may harm their confidence. He wants to know whether his junior ministers would be able to finish the given task and meet the deadlines or not. You need to help the King to find this out.    Input The first line of the input contains an integer T which is the number of test cases to follow. The first line of each test case consists of two space separated integers N and M . Each of the next N lines contains two space separated integers S and E. Next M lines contain three space separated integers A, D and H each.    Output For each test case, output a separate line containing “YES” (quotes for clarity) if it is possible for the junior ministers to paint each of the walls during the designated time. Output “NO” (quotes for clarity) if it is not possible to do so.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 510 1 ≤ N,M ≤ 100 0 ≤ S,E,A,D,H ≤ 10^7     Example Input: 1 2 2 1 5 3 4 1 5 3 2 4 2  Output: YES    Explanation The first minister paints the first wall from time 1 − 2. Then he paints the second wall from time 2 − 3. Then he paints the first wall again from time 3 − 5. The second minister paints the second wall from time 3 − 4. Thus both the walls get painted fully. 
x*temp*temp%MOD fenwick vis[node] vis[node] {doThis index/i index/i index/i index/i index/i index/i x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The King of Florence is going to visit Da Vinci in his workshop to see his paintings. In preparation of that, Da Vinci has painted a total of N paintings that he would display to the King. Since, the King is very busy dealing with the after effects of war, he has asked Da Vinci to make sure that he can see all of his paintings in one standing. To solve that problem, Da Vinci has done the following: He has manufactured N tables, each one of a different height. He plans to keep tables in a row and display a painting at the top of each table. This way, the King will be able to see all the paintings when he is standing in front of this row of tables. All the paintings are of equal height. This plan of Da Vinci was perfect but he received the news of another rebellion in Florence. He knows that since King has promised to see Da Vinci’s work, he won’t back down. Da Vinci does not want to hold the King for too long and now has decided that he will only show K of his paintings to the King. For that, he will re-arrange the tables so that the King can only see K of his paintings when he is standing at the front of the row. King can see a painting if there is no painting in front of it in the row, which is blocking King’s view. Da Vinci will not remove any tables, because if King decides that he wants to look at more of Da Vinci’s work, he wants to be able to show it without adding anymore delay. All of Da Vinci’s paintings are the best in the world, so he knows he can choose any of his K paintings to display to the King. Help Da Vinci in finding in how many ways he can arrange the table so that only K of his paintings are visible to the King.  Input The first line of the input contains an integer T which is the number of test cases to follow. Then T lines follow, each containing two space separated integers N and K.    Output For each of the test cases, print the total number of ways Da Vinci can make them sit in a row. Since this number can be very large, output it modulo 1000000007.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 501501 1 ≤ N ≤ 1000 1 ≤ K ≤ 1000     Example Input: 3 2 1 2 2 4 2  Output: 1 1 11   
interval ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ans/0 ans/0 ans/0 ans/0 ans/0 holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   Da Vinci was once wandering on the roads of Florence when he found a child playing with a binary string L. He was delighted to see that a small child was showing interest in the beautiful world of binary strings. To further interest the child and to make sure that the child keeps on playing with binary strings, he gave the child a task: Each day the child has to now play with the binary string that comes lexicographically after the string that he was playing with on the previous day. He promised the child that whenever he visits back, he will ask him the string that he should be playing with. If the child gets the correct string, he will recieve a reward from Da Vinci, and may be Da Vinci will take him as his student. Help the child to find what string he should be playing with on the day Da Vinci visits him back.  Input  First line contains T, the number of testcases. It is followed by 2T lines, 2 lines per testcase. First line of each testcase starts with a binary string L. Second line contains a single integer K, number of days after which Da Vinci visits the child. The binary string has no leading zeroes, e.g., 0111 has a 0 in the leading (first) position, and such strings will not be there in the input.   Output  For each testcase, output one line containing the required answer. The output string should not have leading zeroes.   Constraints  1 ≤ T ≤ 1000 1 ≤ N ≤ 1000 1 ≤ K ≤ 10^18   Example Input: 2 1001 1 1000 3  Output: 1010 1011  
name name cout<<temp+g<<endl Found holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  War is inevitable now that the King has refused to fulfill the demands of the enemy neighbour. The King has sought Da Vinci's help in devising a strategy to not lose to the barbarous enemy neighbour. Leonardo assured him that he can produce chemical explosives (yes chemical explosives!! Leonardo has always been generations ahead of the people) which have the potential to destroy the enemy army within seconds. The chemical explosives need to be handled with care. Leonardo has developed K different types of explosives. He has a very large number of explosives of each type so that there is no shortage during war. Most of these explosives are kept far from the city in Leonardo's lab among the mountains near the Sienne river. The King suspects an attack in a few days and he wants some explosives to be stored near the palace. Leonardo knows that storing these explosives in the city can be quite dangerous. But due to the urgent requirements put up during this war, he has to bring some of the explosives in the city. Leonardo thinks that the dungeons is the safest place inside the city to store these explosives. There are two major pathways A and B inside the dungeons which run parallel to each other and are 1 metre apart. There are N cross pathways which intersect A and B perpendicularly. These N cross pathways are spread evenly over the lengths of A and B with the adjacent cross pathways being 1 metre apart from each other. Each cross pathway intersects with both the major pathways A and B. The point of intersection of a pathway and a cross pathway is called a junction point. In this way, there are J(= 2N) junction points inside the dungeons. See the figure below to have a clear picture of the structure of the dungeons.  The explosives made by Leonardo are made of a special infammable material. For safety puroses, explosives of the same type have to be placed at least √2 metres apart, otherwise they will explode. Whereas, the explosives of different types need to be placed only 1 metre apart to prevent their self explosion. Leonardo plans on putting these explosives at the junction points only. He doesn't want any of the explosives to explode on its own and thus wants to keep them at adequate distance from each other. It is not necessary to bring every type of explosive from the lab among the mountains. Leonardo will only bring those explosives which he can arrange safely. Your task is to figure out the number of ways in which it is safe to arrange 2N explosives on the junction points.  Input  Input contains a number of test cases. The first line of input contains an integer T. Next T lines follow, each containing two space separated integers N and K.   Output  For each test case, output in a separate line the total number of ways in which Leonardo can arrange the explosives. The answer can be very big so output it modulo 1000000007.   Constraints  1 ≤ T ≤ 60000 1 ≤ N ≤ 10^18 2 ≤ K ≤ 10^9   Example Input: 3 1 2 1 3 2 4  Output: 2 6 84  
q[i] q[i] q[i] q[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  The Second Italian War of 1499 has started and the French troops have attacked Milan. Leonardo Da Vinci is worried for the safety of his diary where he keeps the secrets of all his creations. He would never want that diary to get into the hands of the French King. For this, he creates a special box which can only be opened if you enter a special key K. K is an N - 1 length string containing only lowercase letters of the English alphabet. But when Leonardo was putting his diary into the box and was about to lock it with the key, the French soldiers walk in. They saw the key entered by Leonardo and have taken him captive and have possession of the box.  But when Leonardo was putting his diary into the box and was about to lock it with the key, the French soldiers walk in. They saw the key entered by Leonardo and have taken him captive and have possession of the box. But knowing the reputation of Leonardo, they are being cautious and have captured one of Leonardo's apprentices to gather more information on how to open the box. The apprentice (after torture) provided them with the following information:  Leonardo has made the box in such a way that you could lock it by entering any N length string L of lowercase letters such that removing exactly one letter from L gives K, the string that will unlock the box. The soldiers have seen Leonardo entering N in the box. If they enter a wrong key, the contents of the box will be destroyed by an acidic substance hidden inside the box. It may happen that the box is rigged to hurt the person trying to open the box, by possibly throwing some acidic substance over his hands.   The soldiers have now decided not to take the risk of getting acid burns and have forced the apprentice to open the box on the condition that his life will be spared only if he opens the box without damage. The apprentice fearing for his life, has entered a string K as the unlock pattern.   Given the two strings L and K, the one entered by Leonardo, and the one entered by the apprentice respectively, can you tell whether Leonardo's secrets will be uncovered or not?   Input  The first line contains an integer T which is the number of test cases to solve. It is followed by 2T lines containing the test cases. Each test case consists of 2 strings L and K, respectively in separate lines.   Output  For each test case print the output in a separate line. If Leonardo's secrets are now in hands of French soldier, print 1 otherwise 0.   Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 20000   Example Input: 5 acmicpc acicpc acmicpc acmicp acmicpc cmicpc acmicpc acmcpi acmicpc cmicpa  Output: 1 1 1 0 0  
EPS byte[] holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w A[0] A[0] elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
  Define function F on set of positive integers as  A positive integer n is called an "identity integer" if F(n) = {n}. Given multiple queries, each consisting of a single integer K, find the K^th "identity integer".  Input  First line contains a single integer Q, denoting the number of queries. Q lines follow, each containing a single integer K.   Output  For each query, print a single integer, the K^th "identity integer" modulo 1000000007.   Constraints  1 ≤ Q, K ≤ 200000   Example Input: 1 1  Output: 4  
cout<<temp+g<<endl
 Points:10 The Indian Heights School believes that learning with the aid of technology is the fastest way to do so. It is a pioneer in innovation and virtual classrooms in the country. Keeping in accordance with its practices, the school wants to integrate software and automate various functions at the classroom level. As college students, your team volunteered for this assignment and your proposal has been accepted by the school's director. Each day the class teacher picks a random number of students to delegate them duties for the day such as wiping the board, managing the class, maintaining the display boards and so on. But sometimes the students complain about being picked more frequently than the others.  Thus the teacher wants to know the number of ways to pick a certain number of students out of the total class. Your job is to help her do so...    Input:  The first line consists of total no of test cases. Each test case consists of one line containing two integers(space separated) a ≥ 1(i.e. total students) and 0 ≤ b ≤ a (i.e. number of students to be picked).   Output:  For each test case, print one line containing the required number. This number will always fit into an integer, i.e. it will be less than 2^31.    Example: Input:  2 5 3 10 5    Output:  10 252 
name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] L>R max=count max=count max=count x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Points:15 The Environmental Protection Agency is a billion dollar organisation that works to protect the environment from hazardous changes worldwide. It is funded by the national governments, charitable organisations, business donations as well as its own earnings. To evaluate the ground realities of the theory of global warming, the agency is developing a climate prediction prototype model that will simulate the climate given some parameters as well as predict climatic conditions worldwide. All data and parameters sent to this model in the form of Boolean matrices. Thus instead of processing single parameters one at a time, the model instead operates on multiple boolean matrices of similar parameters at the same time. This is a revolutionary new paradigm, but requires some testing and validation before it can be announced. Despite the exciting nature of this approach, it has a limitation. It can only process those Boolean matrices in which the sum of every row and every column evaluates to an even number. This is why you have been brought in. Given any Boolean matrix, you need to determine if it can be transformed into the required format by changing at most one value in the matrix, and if that is not possible then classify the matrix as corrupt for if we change more than one value, then the error will be too large to successfully predict the ever changing climate.    Input:  The first line consists of total no of test cases. The first line of each test case contains one integer n (n  Output:  For each matrix in the input file, print one line. If the matrix already has the sum of all rows and all columns evaluating to an even number, print 1. If it can be made to do so by changing one bit, print (i,j) where i is the row and j the column of the bit to be changed. Otherwise, print 0 to signify a corrupt matrix.    Example: Input:  3 4 1 0 1 0 0 0 0 0 1 0 1 0 0 0 0 0 4 1 0 1 0 0 0 1 0 1 1 1 1 0 1 0 1 4 1 0 1 0 0 1 1 0 1 1 1 1 0 1 0 1    Output:  1 (2,3) 0 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Points:15 Work's on at full flow at the Indian National Security Autonomous Force, known as INSAF in short. Few know that employees of this particular agency are amongst the highest paid in the country. In the digital age of today, information is power and everything must be done to secure it. This force does not entertain any job applications take out any ads in the public, instead it recruits its workforce by handpicking them from different professions in the country. That was exactly how you were recruited, and now you're a part of an elite team working on creating mutating encryption algorithms for secure transmission of sensitive data. You have been given the task of generating an algorithm for transmission of numerical values. For a given non negative integer number N, you must generate a code to find the minimal natural number Q such that the product of all digit s in Q is equal to N.   Input:  The first line will consist of the one number of test cases T. The next T lines will consist of one string of a non negative number N.   Output:  For each test case, output is a number Q,that will form the number by mutliplying each digits. Print '-10' if no such number exists.    Example: Input: 3 1 10 123456789    Output: 1 25 -10 
holds holds holds holds holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Points:10  Very long ago a group of scholars formed a secret society by the name of Brotherhood of Brom. They went underground so that they could  continue their scientific research away from the eyes of the church that demanded confinement of all scientific pursuits, for the church  saw them as acts of devilry brought upon by curiosity. Scientists were often rounded up in the name of being evil witches and wizards and  burnt at the stake...or sometimes killed by the church assassins. To maintain their secrecy, the Brotherhood of Brom used passwords.  However they did not sick to a single password, instead they used mirrored palindromes. The more the number of such words a member could  come up with, the more intelligent he seemed to be... A regular palindrome is a string of numbers or letters that is the same forward as backward. For example, the string "ABCDEDCBA" is a  palindrome because it is the same when the string is read from left to right as when the string is read from right to left. A mirrored string is a string for which when each of the elements of the string is changed to its reverse (if it has a reverse) and the  string is read backwards the result is the same as the original string. For example, the string "3AIAE" is a mirrored string because "A"  and "I" are their own reverses, and "3" and "E" are each others' reverses. A mirrored palindrome is a string that meets the criteria of a regular palindrome and the criteria of a mirrored string. The string  "ATOYOTA" is a mirrored palindrome because if the string is read backwards, the string is the same as the original and because if each of  the characters is replaced by its reverse and the result is read backwards, the result is the same as the original string. Of course, "A",  "T", "O", and "Y" are all their own reverses. A list of all valid characters and their reverses is as follows.  Char   Rev    Char     Rev    Char   Reverse A 		A 	M 		M 	Y 		Y B 			N	 		Z	 	5 C	 		O	 	O	1	 	1 D	 		P	 		2	 	S E 		3	Q		        3	 	E F	 		R	 		4 G	 		S	 	2 	5	 	Z H	 	H 	T	 	T	6 I	 	I	U	 	U	7 J	 	L	V	 	V	8	 	8 K 		W	W	 	        9 L	 	J 	X	 	X    *Note* that O (zero) and 0 (the letter) are considered the same characterand therefore *ONLY* the letter "0" is a valid character.It turns out that your great great great great grandfather was a member of this society. Wishing to emulate their genius, you want to use the same passwords for your lan gaming events in the modern day. You must design a program that checks whether a given string can act as password or not.   Input:  Input consists of strings (one per line) each of which will consist  valid characters(  Output:    Output will be a string: "notpalindrome" --if the string is not a palindrome and is not a mirrored string "regularpalindrome"-- if the string is a palindrome and is not a mirrored string "mirroredstring" --if the string is not a palindrome and is a mirrored string "mirroredpalindrome"-- if the string is a palindrome and is a mirrored string    Example:   Input:  NOTAPALINDROME ISAPALINILAPASI 2A3MEAS ATOYOTA #   Output:  notpalindrome regularpalindrome mirroredstring mirroredpalindrome   
//cout<<v[i]<< ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 tw[j] tw[j] L>R second]+M0[V[i] second]+M0[V[i] a[00] a[00] holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
Points:10 Your college teacher was highly impressed by your previous achievement. So now he has given you a new project to work on. If you can make this one into a success, you could be on your way to Rio de Janeiro in Brazil to participate in the global finale of this international technical extravaganza sponsored by Bromhood Brothers, a leading software developer( Now why does it look familiar ?!?). You are given  set of letters, and the challenge is to find how many different words can be made from these letters. This problem is designed to take all the fun out of it by automating the process.      Input: Input will be in two parts. The first part will be a dictionary of less than 1000 lines, containing words to be searched for. Each line will contain one word of up to 7 characters. Each word will be in lower case. The words will be in alphabetical order. The end of the dictionary will be indicated by a line consisting of a single `#' character.   After the dictionary there will be data for several word puzzles, each on a separate line. Each puzzle line will have from one to 7 lower case letters, separated by one or more spaces. Your task is to arrange some or all of these letters to form words in the dictionary. The list of puzzles will be terminated by a line consisting of a single `#'.     Output:     For each puzzle line in the input, a single line of output should be produced, containing the number of different words in the dictionary that can be formed using the letters in the puzzle line.  Note that each letter may be used only as many times as it appears in the puzzle line. For instance, the puzzle line `u l l' may produce the word `lul' but not the word `lull'.     Example: Input:  ant bee cat dog ewe fly gnu # b e w b b e e w w t a n c u g d #   Output:  0 2 3   
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl s[i-0][j]== seen seen seen seen seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Points:10  The greatest enemies of the Brotherhood of Brom in their days were the Templar Knights, a band of highly skilled assassins originally established in 1118 to protect pilgrims and the Holy Sepulcher. Like the Brotherhood’s game of testing each other’s wits, the Knights too had a game of their own. The game was played on a board with squares arranged on rows and columns. The pieces used in the game attacked  pieces that were  either (a) two rows and one column away from its position, or (b) one row and two columns away from its position. This is exactly the nature of the problem you have been presented with at the finals of the global race in Rio de Janeiro. I n order to develop an unbeatable algorithm for the game, you are to determine the largest number of game pieces  that can be placed on a board with M rows and N columns so that no piece is attacking any other. M and N will each be no larger than 500.   Input The first line of input consists of no of test cases T(<100).The next T lines consist of  pairs of integers giving values for M and N.(M,N<=500)   Output For each input pair, display  the number of pieces that can be appropriately placed.   Example  Input:  3 2 3 5 5 4 7   Output:  4 13 14 
pra pra pra pra //cout<<v[i]<< pra pra holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given N integers, denoted by A1, A2, … , AN Now you are given Q queries, each of whom is of following two types: Type 1: 1 L R: Print the no. of trailing zeros (zeros in the end) in the multiplication of no.s in range [L,R] of array ‘A’, i.e. no. of zeros in AL * AL+1 * … * AR Type 2: 2 L R V: Multiply the all the numbers in range [L,R] with V.   Input: First line contains a single integer T, number of test cases. Each test begins with a single line containing 2 space separated integers: N and Q, the no. of elements in the array and no. of queries. Next line contains N space-separated integers Ai Next Q lines describe one query each and can be one of the two types: 1) “1 L R”: Print no. of trailing zeros in multiplication of all no.s in range [L,R] of array ‘A’ 2) “2 L R V”: Multiply all no.s in range [L,R] with V   Output: For every test case, print the required answer for each query of type 2.   Constraints: 1<=T<=10 1<=N<=10^5 1<=Q<=10^5 1<=Ai,V<=2000 1<=L,R<=N   Example:   Input: 1 6 3 15 40 36 4 30 25 1 1 4 2 4 5 25 1 1 4    Output: 2 4    Explanation: In first query, Multiplication of no.s in range [1,4] = 15*40*36*4 = 86400. Trailing Zeros in 86400 = 2 In second query, Multiply all no.s in range [4,5] with 25. Array after multiplication: 15 40 36 100 750 25 In third query, Multiplication of no.s in range [1,4] = 15*40*36*100 = 2160000. Trailing Zeros in 2160000 = 4 
sum0 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cin>>st[i] cin>>st[i] cin>>st[i] cin>>st[i] cin>>st[i] cin>>st[i] cin>>st[i] cin>>st[i] que s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00
  Find the fastest way to type a word, given the word. You can skip total of T letters. Time needed to write a letter is given in an array with 26 integers depicting the time needed to type the alphabets. Index 0 will represent a, 1 will represent b, 2 will represent c till 25 representing z. Print the fastest time needed to write the word, after skipping T letters. Note: Each letter must be treated distinctly, example, if word is aaa and you can skip 1 letter, then you should type aa and not skip all the a's.  Input Input description. Input will start will an integer N on newline representing the count of test case. Each case will contain a number T on a newline, representing total count of letters you can skip. Next line of each test case will contain 26 integers representing the array of time needed to write letters a to z. Next line of each test case will contain the word that you need to type.    Output For each test case print the desired outputs, each on a newline.    Constraints  1 ≤ N ≤ 10 1 ≤ Time needed for each letter ≤ 300 1 ≤ Length of word ≤ 10 1 ≤ T ≤ length of given  word     Example Input: 1 1 100 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 abac Output: 105   Explanation Example case 1. one a can be skipped, requiring time 105 to write the word. 
Bhardwaj Bhardwaj Bhardwaj A[i][k] A[i][k] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  You need to shuffle a series of numbers from 1 To T, inclusive. The numbers are in ascending order, you have to shuffle them using bubble sort algorithm, that is swap every time a number is greater than another in the given list in the input. A number is greater than another in the list if the number appears later than the other in the list, check example for more clarity. Print the count of swaps done while you run the algorithm to shuffle them.  Following is the bubble sort algorithm procedure bubbleSort( A : list of items )      n = length(A)-1      for j=0 to n inclusive do         for i = 0 to n-1 inclusive do            /* if this pair is out of order */            if A[i] > A[i+1] then               /* swap them and remember something changed */               swap( A[i], A[i+1] )            end if         end for      end for     end procedure  Input Input description. Input will start will an integer N on newline representing the count of test case. Each case will contain a number T on a newline, representing total count of numbers. Next line of each test case will contain T integers representing the final shuffled series of numbers.    Output For each test case print the desired output, each on a newline.    Constraints  1 ≤ N ≤ 10 1 ≤ N ≤ 20     Example Input: 1 3 2 1 3 abac Output: 1   Explanation Example case 1. One swap between 1 and 2, because 1 appears later than 2, so 1 is greater than 2. 
//cout<<v[i]<< cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n system pair<LD pair<LD cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   You will be given a tree represented by a matrix. The jth character of ith row will be 1 if there is a path from node i to j. You will also be given two integers N and F. N is the number of nodes in the tree and F(0 based index) is the node to which you need to find the distance from the root node. Root node will always be 0. Print the distance of the node F from the root.     Input First line will contain an integer T, the count of test cases. Each test case will start with two space separated integers, N and F, in a newline. N lines will follow each of length N. Each character of these lines will be either 0 or 1.    Output Output must contain T lines, each having the distance of the node F from root node 0 for each tree.    Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10 0 ≤ F ≤ 9 , F is 0 based index.     Example Input: 2 1 0 0 9 6 011000000 000111000 000000111 000000000 000000000 000000000 000000000 000000000 000000000  Output: 0 2    Explanation Example case 1. Since there is only one node which is the root the distance is 0 Example case 2. Path to node 6 is 0->2->6, thus distance is 2. 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A district in a state has K villages (numbered from 1 to K). In order to provide better road connectivity in the district, the government has connected all the villages with two-lane paved roads, However, to reduce costs, the roads are constructed such that while it is possible to go from any village to any other village using the paved roads, there is exactly one route between any two villages. In addition, M of these villages are also connected to the district headquarter directly using two-lane roads. Elections are round the corner and a leader of a political party wishes to hold road shows in the villages. Since he does not have time to visit all the villages, he decides to go from the district headquarter to one of the villages that is connected to it, and then follow a path using the roads between the villages only, holding one road show at each village in the path as and when he reaches that village. Since he has to return to the district headquarter, he wishes to hold the last road show in a village that is again connected to the district headquarter. To save time, he also does not want to go through any village more than once. Obviously, he cannot go through all the villages. To ensure that people in other villages (not on the path) are not deterred from coming to his road shows, he asks his assistant to chalk a route such that the sum total of the distances of any village from its closest village in the path is  minimized. The road show being still a week off, he asks his assistant to take all the time he wants, but make sure that he finds the correct path. The assistant sets off to do this, trying to write a program to try out one-by-one all the different paths the leader can take and calculating the total distances people have to travel if a person in a village goes to the road show nearest to his village. Help him write this program.  Input The first line contains the number of test cases N. For each test case, the first line contains the number of villages K. This is followed by K lines, with the j-th line containing the information about village j. The information for each village consists of (in this order): an integer F (0 if the village is not connected to the district headquarter, 1 if it is), an integer D indicating the number of other villages this village is directly linked to by road, followed by D pairs of integers (total 2D integers), with each pair containing the id (from 1 to K) of a village it is connected to and the distance (positive integer) from that village.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the sum total of distance of all the villages from their closest village in the path chosen.  Constraints 0 < N ≤ 3 0 < K ≤ 50  Example Input: 2 5 0 3 2 10 3 8 4 15 1 1 1 10 1 1 1 8 1 2 1 15 5 12 0 1 4 12 7 0 2 2 5 6 20 0 3 1 5 4 10 5 5 1 1 6 3 1 1 2 10 0 1 2 5 1 3 1 20 7 10 3 3 1 1 6 10  Output: Case 1: 20 Case 2: 8  
ss[n]<=00 interval interval seen cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
It is almost Olympic time, but the organizers fear that the entire Olympic village will not be ready in time given the slow progress of construction. The games are going to have K events (numbered from 1 to K), and M countries (numbered from 1 to M) have already confirmed sending their sportspersons to participate in one or more of these events, with one person participating in exactly one event. Given the urgency of the situation, the organizers hold an emergency meeting to find the minimum number of total beds that they have to plan for counting all the rooms to accommodate all the people.  Given that there will be some moving in and moving out time, it was decided that two people will not be allotted the same bed if the days their events are held overlaps (including if one event starts on the same day the other ends). The organizers want to get that number and then want to speed up the work on a war-footing to at least get that many beds ready in time. You have to help them calculate this minimum.   Input The first line contains the number of test cases N. For each test case, the first line contains the values of K and M. This is followed by K lines, with the j-th line containing the start and end days of event j (both positive integers, with end day > start day). This is followed by M lines, with the j-th line containing the participation information for country j. The participation information for each country consists of (in this order): an integer D indicating the number of events the country is participating in, followed by D pairs of integers (total 2D integers), with each pair containing the id (from 1 to K) of an event and the number of participants (positive integer) the country is sending for that event.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the minimum total number of beds needed.  Constraints 0 < N ≤ 3 0 < K ≤ 30 0 < M ≤ 100 0 < D ≤ K  Example Input: 2 5 3 2 7 1 4 5 8 3 6 9 10 5 1 1 2 1 3 1 4 1 5 1 4 1 1 2 1 3 2 5 2 3 3 1 5 1 4 1 4 2 1 3 3 6 2 3 4 7 4 1 2 2 2 3 1 4 1 4 1 1 2 1 3 2 4 2  Output: Case 1: 8 Case 2: 9  
vb& holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 algorithm algorithm algorithm pp que que que que que que que orez holds holds holds holds holds holds holds holds name name name name name name name name name name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A real estate company undertakes to build a large township. The work is complex and requires the company to hire different categories of highly skilled laborers at different times for different parts of the work. An analysis of the whole project showed that K different groups of highly skilled laborers are needed for K subparts of the project, each of which takes a certain number of days.  The subparts are numbered from 1 to K. The whole work is supervised by a consultant of the company and he can supervise only one subpart at a time, so only one group of skilled laborers is actually utilized at one time. However, it is very difficult to find skilled labor just when you need them, so in order to avoid delays due to non-availability of required labor when it is needed, the company decides to hire all skilled laborers at the start of the project itself, paying them from the beginning of the project till their subpart is done, at which time, they are let go. Each such group costs the company a certain amount of money per day from the day they are hired till the day they finish their part. The situation is compounded by the fact that some of these subparts have to be done in order. However, it is seen that any subpart can be dependent on at most one other subpart and can cause at most one other subpart to be dependent on it. What is the minimum total amount the company has to pay to the laborers?  Input The first line contains the number of test cases N. For each test case, first line contains the number of subparts K. Second line contains a sequence of K integers indicating the number of days required to finish each subpart. Third line contains a sequence of K integers indicating the hiring cost per day for the labor group needed for each subpart. The fourth line contains an integer D indicating the number of pairs of subparts where one subpart is dependent on the other. This is followed by D lines, each of which contains two integers x and y (in that order), where subpart y depends on subpart x (i.e., y can start only after x has finished).  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the total labor cost paid by the company.  Constraints 0 < N ≤ 3 0 < K ≤ 200  Example Input: 2 5 21 27 12 33 5 100 200 50 25 75 3 1 2 3 5 5 4 4 10 10 10 10 40 30 20 10 0  Output: Case 1: 21125 Case 2: 2000  
lli Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n %d%lld xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 level[000000] level[000000] level[000000] j++ fpow s[i-0][j]== s[i-0][j]== s[i-0][j]== seen seen seen cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A city has a road network with all roads arranged in a K x K square grid, with intersections  (total (K+1) x (K+1)) numbered as shown below (for an example 4 x 4 grid).    There are no one-way roads in the city now. For ease of movement of cars, the traffic department plans to convert all roads to one-way, while ensuring that any intersection can be reached from any other intersection. However, the fire brigade is located beside intersection A, and a set of factories with high fire risks are located in a set of intersections J. It is known that no intersection in J can be reached from A without making a turn somewhere, irrespective of which roads are made one-way or the route followed. The fire brigade has requested the traffic department to convert the roads to one-way in such a manner such that fire trucks starting from A can reach all of the intersections in J passing through the minimum total number of intersections possible to avoid delay. How should the traffic department decide which road to set which way?  Input The first line contains the number of test cases N. For each test case, the first line contains K, the dimension of the grid. The second line contains the intersection number A (an integer indicating the intersection number in the numbering scheme shown). The third line contains the number of elements in J, followed by the intersection numbers of the elements in J.  Output For each test case, in the first line, print the case number, followed by a colon, followed by a single space, followed by the total number of intersections passed to reach all elements of J from A, not counting intersection A or the intersections in J. Then print 2K(K+1) line, one for each possible edge in the grid. Each of these lines should contain (in this order): an integer x, an integer y, and an integer d from the set {0,1} where x and y are valid intersection numbers, and dx to y or dy to x. The two nodes in an edge can be printed in any order as long as the correct d is printed. Similarly, the edges can be printed in any order.  Constraints 0 < N ≤ 3 1 < K ≤ 100 1 ≤ |J| ≤ K^2 (|J| integers indicating the intersection numbers in the numbering scheme shown)  Example Input: 1 2 4 2 6 2  Output: Case 1: 2 0 1 1 4 5 0 2 1 1 6 7 1 1 4 1 2 5 0 3 4 0 7 4 1 0 3 0 5 8 0 3 6 1 7 8 1  
ans[i]+=ans[edges[i][j] ans[i]+=ans[edges[i][j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In an ants' colony spread over a flat surface, the ants can reside at integral coordinates as close as unit distance apart from each other (but no closer). The colony has the shape of a quadrilateral ABCD where one ant must reside at each of A, B, C, and D, and all other ants can be on any integral coordinate on its perimeter and its interior. Given the integral positions of A, B, C, and D, print the maximum number of ants that can reside in the colony (including the ants that can reside on the four corners and the perimeter).  Input The first line contains the number of test cases, N. For each test case, a single line contains the x and y coordinates of the four corners of the quadrilateral in clockwise order starting with the left-most, bottom-most point.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the maximum number of ants.  Constraints 0 < N ≤ 3 |x|, |y| ≤ 10,000  Example Input: 2 1 1 3 4 5 3 6 1 1 3 5 6 6 3 3 1  Output: Case 1: 14 Case 2: 16  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You have a mini number pad which allows you a shortcut mode of typing messages using the digits 0 to 9. Each digit represents a subset of English letters (lowercase only). No letter is represented by more than one digit. An example keypad is given below along with the corresponding letters. Unfortunately there is no representation for blank or any other separator for words. 0: a  e  u         5:  f p z 1: b  l  v          6:  g q 2: c  m w         7:  h r 3: d  n x          8:  k s               4: i o y            9:  j t You have a complete dictionary of words (with lowercase letters only). You may use the keyboard to type a sequence of words. For example, the words “code competition final” is entered as “2 4 3 0 2 4 2 5 0 9 4 9 4 4 3 5 4 3 0 1”. This sequence may correspond to several different word sequences. Some digit sequences may not correspond fully to any word sequence.  You are required to print the minimum number of words in sequence from the dictionary that covers the given input. If the given digit sequence does not correspond to any complete word sequence in the dictionary, output -1.   Input The first line contains the number of test cases, N . For each test case, first line contains an integer K indicating the number of words in the dictionary. Second line contains K words, each with length less than 20. This is followed by 10 lines, with each line containing the following: a digit d, followed by an integer m, followed by m lowercase alphabets (with one space between two characters) indicating the English alphabets represented by the digit d. This is followed by a single line containing an integer n , followed by n integers (each within 0 and 9) denoting an n-digit input sequence to check.  Output For each test case, in the first line, print the case number, followed by a colon, followed by a single space, followed by a single integer representing the minimum number of words in the dictionary that can cover the given digit sequence (the integer should be -1 if the given digit sequence does not correspond to any complete word sequence).  Constraints 0 < N ≤ 3 0 < K ≤ 10000 0 ≤ d ≤ 9 0 < m ≤ 15 0 < n ≤ 1000  Example Input: 2 18 am axe exam boy colour dam dot donkey fox new prim prime primeval pry the this theory van 0 3 a b c 1 3 d e f 2 2 g h 3 3 i j y 4 3 l m n 5 3 o p q 6 2 r s 7 2 t u 8 3 v w x 9 2 k z 11 7 2 1 5 6 3 4 1 8 0 4 20 am ant axe boy colour dam dot donkey exam exact fox new prim prime primeval pry the this theory van 0 3 a b c 1 3 d e f 2 2 g h 3 3 i j y 4 3 l m n 5 3 o p q 6 2 r s 7 2 t u 8 3 v w x 9 2 k z 5 2 4 3 0 2  Output: Case 1: 2 Case 2: -1  
Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
During the pre-puja bonanza, the Khelnacompany has put K different types (numbered from 1 to K) of Disney figurines in their hot-selling RC cars. You can find the Disney figurine only after you have bought a RC car and opened the box. Sumana just loves Khelnacompany’s cars and the Disney characters, and wants to collect as many different Disney figurines as possible. So Sumana tries to trade some of the figurines she has with her M friends to get figurines that she does not have. Any of Sumana’s friends (say X) will trade a figurine with Sumana if  and only if X has a duplicate of that figurine, and Sumana gives X a figurine X does not have. Moreover, Sumana’s friends are not as crazy as Sumana about collecting figurines, so they don’t exchange any figurines among themselves; they just exchange with Sumana to make her happy. Sumana is clever and has realized that in some cases it might be good to exchange a Disney figurine she has for another figurine of a type she already possesses, or trade off a figurine even if she has only one copy of it. Given that Sumana knows exactly how many figurines of each type each of her friends has, can you help her find the maximum number of different Disney figurines that she can get by trading figurines with her friends?  Input The first line contains the number of tests cases N For each test case, the first line contains the value of K and M. The second line contains K integers, with the j-th integer indicating the number of figurines of type j that Sumana has. This is followed by M lines, one for each of Sumana’s M friends. Each of these lines contains K integers, with the j-th integer indicating the number of figurines of type j possessed by that friend. Note that Sumana or a friend may not possess any figurine of a particular type, in which case that number will be 0.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the maximum number of Disney figurines Sumana can collect.  Constraints 0 < N ≤ 3 0 < K ≤ 100 0 < M ≤ 100  Example Input: 2 3 1 3 0 0 1 3 3 4 2 3 3 0 0 0 0 3 0 1 1 0 2  Output: Case 1: 1 Case 2: 4  
0*n+0 holds a[00] a[00] x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Consider two sequences A and B comprising of digits 0 to 9, of length K and L respectively. The distance from A to B is the total minimum penalty incurred in converting A to B using the following operations, each of which incurs a penalty as described below.  Replacing a digit of A with another digit: incurs a penalty of 1 Inserting a digit in A: incurs a penalty of 1 for each digit inserted. In addition, there is also a fixed penalty of x for every sequence of digits inserted (one-time penalty for starting the sequence, not per-digit). However, the total penalty charged for a sequence of digits inserted never exceeds y (y > x). For example, if x = 2 and y = 5, then inserting a one digit sequence (say “5”) will incur a penalty of 3 (=x+1), a 2-digit sequence (say “24”) will incur a penalty of 4 (=x+2), and inserting any n-digit sequence (n > 2) (say “132”, 2543”, “57241” etc.) will all incur a penalty of 5 (=y). Deleting a digit from A: incurs a penalty of 1 for each digit deleted. In addition, there is also a fixed penalty of x for every sequence of digits deleted (one-time penalty for starting the sequence, not per-digit).  What is the minimum penalty with which A can be converted to B?  Input The first line contains the number of tests cases N For each test case, the first line contains the integers K and L. The second line contains the sequence A (K digits with no space in between). The third line contains the sequence B (L digits with no space in between). The fourth line contains the integers x and y .  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer representing the minimum penalty.  Constraints 0 < N ≤ 3 0 < K ≤ 100 0 < L ≤ 100 x > 0, y > x  Example Input: 3 9 1 123456789 1 10 15 1 9 1 123456789 10 15 11 4 12345678912 1212 10 15  Output: Case 1: 18 Case 2: 15 Case 3: 17  
ss[n]<=00 interval interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Liliputs are holding a drawing competition for K kids, but with K human-sized pencils stolen from humans. In order to make life easier for the kids, the organizers want to give a pencil to each kid in a way such that the sum of the absolute differences of the height of a kid and the length of the pencil assigned to him/her is minimized. What is the minimum sum of absolute differences that can be achieved?  Input The first line contains the number of test cases N (0 < N ≤ 3). For each test case, the first line contains the number of kids and pencils K (0 < K ≤ 100). The second line contains K positive integers, each containing the height in millimeter of a kid. The third line contains K positive integers, each containing the length in millimeter of a pencil.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the minimum sum of absolute differences achieved (in millimeter).  Sample Input  2 5 51 60 51 72 70 65 60 88 72 88 4 123 234 188 175 219 334 122 233  Sample Output  Case 1: 69 Case 2: 190 
ss[n]<=00 holds holds holds holds ruofytriht ruofytriht ruofytriht A[0] A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A DNA sequence can be represented by a string of letters T, A, C, and G representing four different amino acids. DNA sequences are often matched to infer structural or functional similarities between living beings. Given two DNA sequences X and Y, the sequence Y is said to be contained in X if Y can be obtained from X by deleting 0 or more letters (not necessarily consecutive) in X. Given two DNA sequences X and Y, what can be the minimum length of a third sequence Z such that both X and Y are contained in Z?  Input The first line contains the number of test cases N (0 < N ≤ 3). For each test case, the first line contains two integers P and Q (0 < P, Q ≤ 1000) denoting the number of letters in the two sequences X and Y respectively. The second line contains the sequence X and the third line contains the sequence Y.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the minimum length of sequence Z.  Sample Input  2 7 6 TAGCTAG ATCATG 10 9 GGATGCTACA TCTACCGTA  Sample Output  Case 1: 9 Case 2: 13 
//cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Professor Calculus wishes to hire graduate engineers for a few open positions in his funded projects. He has called K candidates for interview (numbered from 1 to K), and based on the profile of the candidates, has decided on an estimated time duration of interview for each candidate. A single interview board is going to conduct all the interviews. Assume that the interview board starts the interviews at time t = 0. Since candidates from outside the town may want to go back on the same day, Professor Calculus has asked each candidate for the departure time of the train that they wish to take to go back after the interview. Many candidates have indicated such times, while others who are local candidates or non-local candidates who do not wish to go back the same day have not. In order to cause any inconvenience to as few of the candidates as possible, Professor Calculus attempts to order the interviews such that the number of candidates who wish to go back the same day after the interview but will miss their trains is minimized. Assume that to catch a train, the interview of each candidate has to end at least 30 minutes before the departure time of the train the candidate wishes to take. You can also assume that all departure times specified are more than 30 minutes after the start of the first interview at t = 0. Can you help the Professor Calculus prepare a schedule of the interviews so that the number of candidates who miss their trains is minimized?  Input The first line contains the number of test cases N (0 < N ≤ 3). For each test case, the first line contains the number of candidates K (0 < K ≤ 100). The second line contains a sequence of K positive integers indicating the estimated interview duration in minutes of the K candidates. The third line contains a sequence of K positive integers indicating the time, in number of minutes from t = 0, of the departure time of a train that a candidate has to catch. If a candidate has not given any such time, the corresponding integer is set to -1.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the minimum number of candidates who will miss their trains.  Sample Input  2 5 10 15 20 15 25 60 70 50 90 80 4 15 25 20 30 -1 75 70 70  Sample Output  Case 1: 2 Case 2: 1 
interval interval holds j++ cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Consider a K×K square made of K^2 unit squares. The center of the lowermost, leftmost unit square has coordinates (0, 0) and the center of the rightmost, uppermost unit square has coordinates ((K-1), (K-1)). Consider a robot that can move only in a straight line and cannot change its direction once it starts moving. If the robot starts from the center (p,q) of a unit square to retrieve an object from the center (r,s) of another unit square, what is the number of unit squares it has to pass through? Note that touching any boundary point on a unit square also counts as passing through that unit square.  Input The first line contains the number of test cases N (0 < N ≤ 3). For each test case, the first line contains K (1 < K ≤ 10000), the dimension of the grid. The second line contains the x and y coordinates (in that order, separated by one or more spaces) of the starting point of the robot. The third line contains the x and y coordinates (in that order, separated by one or more spaces) of the destination point of the robot.  Output For each test case, in the first line, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating estimated minimum travel time.  Sample Input  3 8 0 7 3 0 8 1 0 7 1 8 3 3 7 7  Sample Output  Case 1: 12 Case 2: 8 Case 3: 13 
vis[node] cr-0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Academia University is hosting BitFest at GridLand, with participants from Academia (host) and other colleges (guest). The first event is a team coding event BlindDate, with each team containing one student from host and one from guest. H host participants and G guest participants have assembled in GridLand. All of them wish to participate in BlindDate. GridLand is shaped as a K×K grid, and each grid point in the grid is specified by a pair of coordinates. The lowermost, leftmost grid point has coordinates (0,0) and therefore the rightmost, uppermost grid point has coordinates (K, K). The grid points are connected by roads that run north-south and east-west along the edges of the grid, so that he distance between two grid points (p,q) and (r,s) is the Manhattan distance between them (= |p-r| + |q-s|). Each participant initially stands on a grid point (more than one participant can stand on the same grid point) and the game will finally be played in the Arena which is located at the grid point (K, K). Professor BitGuy is organizing BlindDate and he will decide the teams. Once the teams are formed, the host member moves to the guest member, picks him or her up, and they both move towards the Arena. A participant can be a member of only one team. Every host participant moves with a unit speed towards the designated guest member of her team along the roads, and both of them then move with unit speed to the arena along the roads. Prof. BitGuy has to form the teams at time t = 0 in a manner such that the competition can start at a given positive integer time C. Assume that the team formation takes no time. What is the maximum number of teams BitGuy can form?  Input The first line contains the number of test cases, N (0 < N ≤ 3). For each test case, the first line contains the integers H (0 < H ≤ 250), G (0 < G ≤ 250), K (0 < K ≤ 1000) and C. The next H lines contain the x and y coordinates (in that order, separated by one or more spaces) of the host participants. The next G lines contain the x and y coordinates (in that order, separated by one or more spaces) of the guest participants. All coordinates are integers.  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the maximum number of teams that can be formed  Sample Input  2 5 5 50 87 1 2 2 12 3 22 1 32 2 42 10 10 10 12 10 20 20 33 20 42 3 4 20 28 5 5 6 7 8 10 17 1 17 18 18 18 19 19  Sample Output  Case 1: 4 Case 2: 2 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Professor PariBrajika wishes to plan a tour from Kharagpur to Himalpur using Pushpak Travels. There are K tourist locations serviced by Pushpak Travels, numbered from 1 to K, including Kharagpur (numbered 1) and Himalpur (numbered K). It is only possible to travel directly from some locations to some other locations. For any pair of locations for which direct travel is possible, the travel from the originating city can start only at some specific time intervals of the day and the travel time depends on the starting time interval from the originating city because of different reasons such as vehicle type availability, traffic, and other environmental conditions. We will refer to each such 5-tuple <u,v,s,f,t> where u is the originating location, v is the destination location, s and f are the start and finish of a time interval within which travel can start at u, and t is the travel time in hours from u to v when starting within the closed interval [s,f], as a route. The elements s and f are specified as hours of the day, in 24-hour format (i.e. 0 to 23). For a particular origin-destination pair, you can assume that all intervals specified are non-overlapping. You can also assume that the routes are such that even with the above constraints, it is possible to reach Himalpur from Kharagpur passing through 0 or more of the other locations. Professor PariBrajika cannot travel continuously without rest. The number of hours she can travel continuously without rest is equal to the "energy credit" she has. She can earn an energy credit of 1 hour for every hour of rest she takes (rest can be taken in integer multiples of hours only). However, she can rest only at any of the tourist locations. She spends an energy credit of 1 hour for every hour she travels. She may decide to rest any time irrespective of the energy credit she has (for example if no route is available for the current time or if a future route will enable her to reach Himalpur earlier through some other path). In that case, she has unspent energy credit left and can accumulate further energy credit. Energy credits can be accumulated cumulatively during the journey, subject to a maximum of 6 hours worth of travel time. Therefore, she cannot travel for more than 6 hours continuously in any case after the last recharge. If Professor Paribrajika can leave Kharagpur anytime after midnight (t ≥ 0), find the earliest time, expressed as the total number of hours elapsed since t=0 (midnight), at which Professor PariBrajika can reach Himalpur. Assume that at the start of the journey she is fully rested and is good to go for 6 hours (i.e., has energy credits of 6 hours).  Input The first line contains the number of test cases, N (0 < N ≤ 3). For each test case, the first line contains the number of locations K (0 < K ≤ 500), and the total number of routes M (0 < M ≤ 10000). This is followed by M lines, with each line containing the information of a single route, specified by five integers u, v, s, f, t (in this order with one or more space between two successive integers). The integers correspond to the 5-tuple  as described earlier (1 ≤ u, v ≤ K, 0 ≤ s, f ≤ 23, s < f, t > 0).  Output For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating the earliest time in hours from the time t=0 to reach Himalpur.  Sample Input  2 3 3 1 2 0 2 3 2 3 3 6 6 2 3 7 12 6 5 10 1 2 0 2 5 1 2 3 23 6 2 3 0 4 3 2 3 5 8 1 2 3 9 23 2 3 4 0 10 5 3 4 11 14 6 3 4 15 23 5 4 5 0 2 2 4 5 3 23 6  Sample Output  Case 1: 12 Case 2: 26 
cs++ stderr fpow fpow fpow fpow fpow fpow name name name name name name _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ ans=ans/ Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f _f _f _f
Professor PariBrajika is in Himalpur and wishes to go to Gyankut to attend a workshop. There are K temples on the way to Gyankut. The temples are numbered from 1 to K, Himalpur is numbered 0 and Gyankut is numbered K+1. She wishes to visit some of the temples on her onward journey from Himalpur to Gyankut, and the rest on her return journey from Gyankut to Himalpur. In her onward journey she must visit the chosen temples in ascending order of their numbers, and in her return journey she is required to visit the temples in descending order of their numbers. Any violation of this will waylay her and she will get permanently lost. For example, if K = 7, and she selects to visit (2,4,5) on her onward journey, she must travel from Himalpur to 2, 2 to 4, 4 to 5, 5 to Gyankut and then Gyankut to 7, 7 to 6, 6 to 3, 3 to 1, and 1 to Himalpur. The estimated travel times between any pair of the locations (with no intermediate stops) are known. A trip from any location X to another location Y takes the same time as the trip from Y to X. Assume that Professor PariBrajika spends a fixed time R at each of the K temples and at Gyankut. If she starts from Himalpur at time t = 0, what is the minimum estimated time in which Professor PariBrajika can complete the tour from Himalpur to Gyankut and back?  Input The first line contains the number of test cases, N (0 < N ≤ 3). For each test case, the first line contains the two integers, K (0 < K ≤ 100) and R. This is followed by K+2 lines, with each line containing information about travel time from one location to all other locations. Each line starts with an integer id X of the location (0 < X < K+1), followed by K+1 pairs of integers (total 2K+2 integers), with each pair containing the id Y (0 < Y < K+1, X ≠ Y) of another location and the estimated travel time (positive integer) to location Y from location X.  Output For each test case, in the first line, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating estimated minimum travel time.  Sample Input  2 3 10 0 1 100 2 200 3 300 4 400 1 0 100 2 100 3 200 4 300 2 0 200 1 100 3 100 4 200 3 0 300 1 200 2 100 4 100 4 0 400 1 300 2 200 3 100 5 10 0 1 63 2 126 3 189 4 252 5 315 6 378 1 0 63 2 51 3 102 4 153 5 204 6 255 2 0 126 1 51 3 116 4 232 5 348 6 464 3 0 189 1 102 2 116 4 71 5 142 6 213 4 0 252 1 153 2 232 3 71 5 132 6 264 5 0 315 1 204 2 348 3 142 4 132 6 63 6 0 378 1 255 2 464 3 213 4 264 5 63  Sample Output  Case 1: 840 Case 2: 886 
_f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Professor Calculus gives the following problem to his students: given two integers X (≥ 2) and Y (≥ 2), find the smallest positive integral exponent E such that the decimal expansion of X^E begins with Y. For example, if X = 8 and Y = 51, then X^3 = 512 begins with Y = 51, so E = 3. It is easy to see that neither E = 1 nor E = 2 will satisfy this property, so 3 is the smallest possible value of E in this case. Professor Calculus has also announced that he is only interested in values of X such that X is not a power of 10. The professor has a proof that in this case, at least one value of E exists for any Y. The students set out to write a program for this, and run it on their department's server. However, they quickly find out that even though X, Y, and E will fit into a single integer, X^E may be too large to fit into any single data type of any language they can program in. Can you help the students to find the value of the exponent E?  Input The first line contains the number of test cases N (0 < N ≤ 3). For each test case, there is a single line containing the integers X and Y.  Output For each test case, in the first line, print the case number, followed by a colon, followed by a single space, followed by a single integer indicating estimated minimum travel time.  Constraints: 1 ≤ X, E ≤ 1000  Sample Input  2 5 156 16 4  Sample Output  Case 1: 6 Case 2: 3 
min++ {doThis {doThis idx-= holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<<
The stupendous current form and cricketing class that Virat Kohli possesses certainly makes him the "King of Cricket" at the moment. One evening he was dreaming of his present competitors in world cricket. He dreamt about the infinite Cartesian coordinates with N kings placed on it at different integer positions (x,y) initially. But suddenly his alarm rings and bang, it was time to gear up for the all important upcoming match India vs Australia. However on his way to stadium in the bus he ponders over the minimum total number of moves required to bring any K kings to the same position. A position can hold multiple kings at the same time. A single move consists of choosing exactly one king and moving it one unit in either of the four directions, up, down, right or left. Help him find a solution quickly to this problem so that he can concentrate on scoring runs, which he is best at.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case consists of N+1 lines. The first line of each test case contains two space separated integers N and K. Then follow N lines, each containing two space separated integers x and y, denoting the initial position of the 'i'th king (1 ≤ i ≤ N).     Output  For each test case, output a single line containing the minimum total number of moves required to bring any K kings to the same position.     Constraints  1 ≤ T ≤ 20 1 ≤ N ≤ 100 -10^9 ≤ x,y ≤ 10^9     Example Input: 1 3 2 2 4 1 2 3 5  Output: 2   Explanation:  In the given test case, we need to bring any 2 kings to the same position. The total number of moves can be minimized if we bring the 1st king and the 3rd king to position (3,5). The 1st king will need 2 moves to reach there and the 3rd king will need 0 moves. Therefore, the answer will be 2+0 = 2.   
name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl tw[j] tw[j] holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Kewal just returned from school where he learned that “if the last digit of a number is divisible by 2,then it is an even number.” However he forgot that this property holds only for integers.Anyways to keep him happy, we would consider his ideology for floating point numbers as well. Thus we would have   Thus we would have 12.6 as even(last digit even(6)) 12.7 as odd(last digit odd(7)) 12.70 as odd(last digit odd(7)) as 12.7 is same as 12.70 (discarded zeroes) Following his ideology, your task is to write a program to check whether the entered floating point  numbers are even or odd.  Input A single line containing the number of test cases T. T lines follow each containing a single floating point number F for each test case.  Output  T lines specifying even or odd in order of test cases.  Constraints  1 ≤ T ≤ 10 The total length of floating point number including the decimal point should be |F| ≤ 20   Example  Input 5 2.004 345.10 555.55 26.324 72.09  Output even odd odd even odd   
Found Found sum0 sum0 sum0 sum0 sum0 holds holds holds holds holds holds holds holds holds holds holds c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Sum and Color Chef is a mathematics student. His professor has given him a difficult task. Professor initially provides Chef with a list of numbers. For every number in the list, Chef has to calculate the sum 'S' of digits such that 0<=S<=9. Even if the sum of digits is coming as a 'n' digit number, Chef has to bring it down to 1 digit number by further calculating the sum of the n digits and so on. Each value of final one digit sum is assigned a color. The color starts from index 0 to 9 and the value for each is given as follows:-  0-red 1-blue 2-pink 3-white 4-black 5-violet 6-cyan 7-yellow 8-green 9-brown  For each number in the list, Chef will obtain a 1 digit sum at the end. From these sums, Chef needs to find the color relating to the maximum 1 digit sum from the list. Professor clarifies the problem through the following example: Consider a list of 2 numbers 52 and 181. The addition of digits of number 52 gives 52=5+2=7, and that of 181 gives 181=1+8+1=10=1+0=1. So the maximum value is 7. So look at the color present at index 7 i.e. 'yellow'. So the output is yellow. Help Chef write a program for this problem.  Input   The first line contains one integer ‘T’, which denotes Number of test cases. There are 2 lines for each of  ‘T’ test case   First line contains the total number of elements ’N’ in the list Second line ‘N’ numbers (each number can be considered as ‘Ai’)separated by whitespaces.    Output For each text case, You need to print one line containing the color obtained according to the maximum value of 'S' i.e. the color corresponding to maximum 1digit sum of number in the list  Constraints   1<=T<=100 1<=N<=250000 0<=Ai<=10^9  Example1 Input: 5 5 128 25 87 50 1558 4 11 22 33 44 3 36 14 1000 5 11112 95 96 256 2669 3 10 991 83   Output:  yellow green brown cyan pink    Explanation  Consider the 1st case:  Calculate sum of digits of every element  128=1+2+8=11=1+1=2  25=2+5=7  87=8+7=15=1+5=6  50=5+0=5  1558=1+5+5+8=19=1+9=10=1+0=1  So the maximum value is 7 and the output is the corresponding color to index 7 i.e.yellow.  
interval cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Chef loves palindromes. Chef initially has odd number of charachters. Chef wants to create a palindrome of maximum even length using these characters. For this Chef needs to discard one character. Help Chef find the character which needs to be discarded so that he can use the rest characters in any order to form a palindrome haivng maximum even length.   Input  An integer 'T' on first line denoting number of test cases For each of the 'T' testcases, there are two lines First line contains an integer 'N' denoting number of characters in list Second line contains 'N' lowercase aphabetic characters which are not seperated by spaces   Output  For each of the 'T' test cases, display in a new line the character to be discarded   Constraints  N <= 12353 T <= 25   Example Input: 2 7 abcbdca 3 abb Output: d a   Explanation  'a' is a charcter that is repeated at index 0,6 'b' is a charcter that is repeated at index 1,3 'c' is a charcter that is repeated at index 2,5 'd' is a charcter that is only present at index 4 So, we need to remove 'd' so that we can get a palindrome having maximum possible even length.   similarly for 2nd test case "a" is the charcter to be discarded 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Dipen is having a party on his birthday. For his party he has 3 types of chocolates: Kitkat, Lollipop and Fivestar for his friends to enjoy. To keep a check on the number of people, he gave them T-shirts, all having distinct numbers. All the people who wanted Kitkat stood in line A, those who wanted Lollipop stood in line B and those who wanted Fivestar stood in line C. A person can stand in more than one line but not in the same line again. Dipen wants to know the number of people who have Kitkat and Lollipop, Lollipop and Fivestar, Fivestar and Kitkat and people who have all the three chocolates.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains 3 space separated integers A, B and C denoting the number of people in each line. The second line contains people in line A. The third line contains people in line B. The fourth line contains people in line C.   Output  For each test case output a single line containing four space separated integers denoting number of people who had Kitkat and Lollipop, Lollipop and Fivestar, Fivestar and Kitkat and people who had all the three chocolates. If there is nothing in common output 0.   Constraints  1 ≤ T ≤ 10 1 ≤ A, B, C ≤ 100000 1 ≤ N[i] ≤ 10^9(value on the T-shirt)   Example Input: 2 3 4 5 1 2 4 1 4 3 2 1 5 4 3 6 6 7 2 1 2 3 9 6 12 3 4 1 2 8 7 5 34 45  Output: 3 3 2 2 3 0 0 0    Explanation Example case 1.The people in line A and B (1,2,4), the people in line B and C (1,4,3), the people common in A and C (1,4) and 2 people (1,4) ate all types of sweets. 
interval interval interval interval interval Programming matchR[000] matchR[000] longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest
Siyara is given an integer array N. Her friend Vatsal gives her 3 types of queries as follows:  Type 1: 1 M To add a number M in the array at any position Type 2: 2 M To delete all occurrences of M from the array. If it is not possible, then ignore the query. Type 3: 3 0 Display the sum of the greatest and second greatest number (other than the greatest) from the array. If not possible, print -1.  Since the numbers are huge, you have to help Siyara solve the problem as quickly as possible.  Input  The first line contains two space separated integers, T and N where T is the number of queries and N is the number of elements in the array. Next line contains N space separated array elements. T lines follow where each line has contains 2 integers. First denoting the type of query: 1, 2 or 3 and the second integer specifying the description provided above.   Output  Only Type 3 queries should be printed, each on a new line.   Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 1000 -10^9 ≤ N[i], M ≤ 10^9     Example Input: 6 6 1 2 2 2 3 4 1 2 2 3 3 0 2 2 2 4 3 0  Output: 6 -1  Explanation After executing the first query the array becomes {1,2,2,2,3,4,2}, after the second query {1,2,2,2,2,4}, after the third query {4+2}=6, after the fourth query {1,4}, after the fifth query {1}, thus after the sixth query -1.  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Jack and Jill got into a serious fight. Jack didn't not belive Jill when she said that her memory was far better than the others. He asked her to prove it as follows :-   Jack would dictate a long list of numbers to her. At any point after he has dictated  at least "k" numbers, he can ask her what is the k-th minimum number (the k-th number if the numbers are arranged in increasing order) in the list so far.  She succeeds in proving herself if she can tell the k-th minimum number every time he asks.  The number of queries (dictate a new number or ask her the k-th minimum of the numbers given till then) has to be pre-decided before he starts asking.  Jill succeeded in proving herself by convincing Jack quite a few times. Now, Jill remembered that Jack had claimed that he was good at programming. It's her turn to ask him to prove his skill. Jack doesn't want to lose to her and comes to you for help. He asks you to make the program for him.   Input Jill has agreed to let Jack decide the format of the input and here's what he has decided. First line of the input contains n, the number of queries. Next line contains k. Next n lines contain a query each, say q. If  q ≥ 0  then the number is being 'dictated' to the system and needs to be remembered. If q = -1, then your program should return the k-th minimum number presented so far . It is given that 'q' can be -1 only if at least k numbers have already been given.   Output  For every q = -1, you have to output the k-th minimum number given as input so far (not counting -1 as an input)   Example  Input1: 6 2 3 2 -1 -1 1 -1  Output1: 3 3 2   Input2: 10 5 3 6 1 4 2 9 3 1 0 -1  Output2: 3 
interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Little Boy Banku is mad at his teacher, who ate all the sweets in the flat and even went to the neighbours to eat their sweets too. Now Banku's parents brought home a chocolate bar, and, sure enough, School teacher is here already and wants to eat it. However, this time Banku has firmly decided that not a single piece of chocolate will go to this glutton. Banku wants to use his teacher's addiction to the games of chance and suggests playing the following game. A chocolate bar can be considered as a rectangle of square “units” arranged in m rows and n columns and separated by “lines”. Two players take alternate turns. At his turn, a player must take one piece of chocolate and split it into two along one of the lines. If a player can't make a legal move (which happens when all pieces of chocolate consist of a single unit square), he loses, and the winner takes all the chocolate. But the teacher is smart enough! He immediately understood who should make the first turn in order for teacher to win, assuming that players take optimal turns. Can you guess that?  Input  First line of input contains number of test cases. The second line of the input contains space-separated integers m and n (1 <= m, n <= 50).  Output  For each test case If teacher should start the game in order to win, output "[:=[first]" otherwise, output "[second]=:]".  Example  Input: 3 2 4 1 3 2 9   Output: [:=[first] [second]=:] [:=[first] 
interval holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Daenerys Targaryen has been suggested by her counselors to leave the Meereen and start conquering other parts of the world. But she knows giving up on the people of Meereen means victory of slavery. Her plan is to start conquering rest of the world while she remains in Meereen. She can only trust her bravest and most beloved Daario Naharis to undertake this risk. She asks him to conquer a few nations and promises him a help from her dragons. She also promises to marry him if he successfully conquers all the nations and not if he is defeated. Daario has to conquer 'N' number of nations each nation with army size A[i]. He attacks the nations serially. As promised, he gets help from Daenerys's Dragons. His first 'M' attacks are made with the help of Dragons.   For first 'M' attacks, he gains A[i] soldiers.  For the rest, he looses ceiling of A[i]/2 soldiers.  He is defeated if he is left with no army before he conquers all the 'N' nations. He has no army initially and only has Dragons.  Input First line has 'T' which is the number of test cases. For each test cases there are two space separated integers 'N' and 'M' denoting the number of nations and the number of nations he has Dragon's help for respectively. Follows N space separated integers denoting the size of army of each nation.  Output Print 'VICTORY' if Daario conquers all nations and 'DEFEAT' if he doesn't.    Constraints  1 ≤ T ≤ 500 1 ≤ M ≤N ≤ 100000 1 ≤ A[i] ≤ 100000     Example Input:  3 5 3 1 2 3 4 5 6 2 4 4 4 4 4 4 7 4 10 10 10 10 50 60 70  Output:  VICTORY VICTORY DEFEAT     Explanation Example case 1. First 3 attacks add 1,2,3 to his army making it 6. (1+2+3 = 6) Then he looses 2 and 3 making it 1. (6-2-3 = 1) He conquers all so VICTORY.  Example case 2. First 2 attacks add 4,4 to his army making it 8. (4+4 = 8) Then he looses 2,2,2,2 making it 0. (8-2-2-2-2 = 0) He conquers all so VICTORY.  Example case 3. First 4 attacks add 10,10,10,10 to his army making it 40. (10+10+10+10 = 40) Then he looses 25 and then all 15 out of possible 30 making it 0. (40-25-15 = 0) He is defeated on 6th attack so DEFEAT.  
x*temp*temp%MOD cout<<arr[i]<<endl task task task cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl cout<<arr[i]<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] vals[i] name name name name name name name name name name name name name name name name name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem Statement  	Chef has bought T strings to gift his friend Jay. Later he realized that Jay only likes those strings which are wonderful. A string is wonderful only if all the characters in that string are repeated the same number of times. Chef can change any letter of the string to any other letter, but it costs one coin for him to do so. Now he wants to know the minimum number of coins required to make each string wonderful.   Input  	The first line of input contains an integer T. T lines follow. Each containing a string S composed of only lower-case letters.   Output  	For each string, print minimum number of coins required in a new line.   Constraints  1 ≤ T ≤ 1500 1 ≤ |S| ≤ 2000   Example Input: 3 tathva jay codechef  Output: 1 0 2    Explanation  Case 3: One possible solution is codecdeo. 'h' is changed to 'd' and 'f' is changed to 'o', which makes the string wonderful. Number of coins required = 2. Case 2: Each of the characters ('j' , 'a' and 'y') are repeated exactly once. So it is already a wonderful string. NO coins are required. Case 1: Optimal way is to change 'h' to 'v' or 'v' to 'h'. Number of coins required =  1.   NOTE : Time limit for this problem is 0.3 seconds. 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given an alphanumeric string made up of digits and lower case Latin characters only, find the sum of all the digit characters in the string.  Input  The first line of the input contains an integer T denoting the number of test cases. Then T test cases follow. Each test case is described with a single line containing a string S, the alphanumeric string.   Output  For each test case, output a single line containing the sum of all the digit characters in that string.   Constraints  1 ≤ T ≤ 1000 1 ≤ |S| ≤ 1000, where |S| is the length of the string S.   Example Input: 1 ab1231da  Output: 7  Explanation The digits in this string are 1, 2, 3 and 1. Hence, the sum of all of them is 7. 
c[j%0] tw[j] fill_n q[i] q[i] q[i] q[i] a[00] a[00] a[00] a[00] holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Ramesh, Suresh, Mahesh, and Mukesh are moving to a new city and are looking for apartments to live.   Now this city is not like any other city. This city is a matrix of apartments and there are no roads. The only way to commute is to go through apartments.   If any of the friends go through an apartment even once, the group will have to pay its full rent. From an apartment, you can go to the apartments to its North, South, East, or West.   Since Ramesh, Suresh, Mahesh, and Mukesh are best friends, they want to meet each other at least once a month. Also, all four are highly superstitious, so Ramesh only goes West, Suresh only goes North, Mahesh only goes East, and Mukesh only goes South.   Any number of people can live in any of the apartments. Cost of all the apartments in the city is given, some of which may be negative. Negative cost means if any of the friend lives in or goes through this apartment, the group will get paid an amount equal to the negation of the cost. Now the aim of the four friends is to find the minimum cost for which all of them can live in the city and meet each other at least once a month. Note: The four friends can meet in an apartment where none of them actually lives as well.  Input First line contains T, the number of test cases to follow. First line of each test case contains two integers: N and M, where N denotes the number of rows in the matrix and M denotes number of columns in the matrix. Next N lines describe the rows of the matrix follow, one row per line. Each row contains M space-separated integers denoting the cost of the apartment.  Output For each test cases, output the minimum cost as asked in the problem.  Constraints  1 ≤ T ≤ 4*10^4 1 ≤ N ≤ 10^3 1 ≤ M ≤ 10^3 -10^4 ≤ Cost of any apartment ≤ 10^4 1 ≤ Sum of N*M over all test cases ≤ 10^6   Example Input: 4 3 3 1 2 3 4 -10 5 6 7 8 3 3 1 -10 3 -13 -12 -11 7 8 9 3 3 1 -2 3 -4 5 -6 7 -8 9 4 4 1 2 3 4 5 6 -7 8 -9 -10 -11 -12 13 14 -15 16  Output: -10 -46 -15 -64   Explanation Example case 1.All 4 friends stay at the apartment which has rent -10. Example case 2.Mukesh lives in the apartment with rent -10, Mahesh lives in the apartment with rent -13, Suresh lives in the apartment with rent -12, and Ramesh lives in the apartment with rent -11 Example case 3.Mukesh lives in the apartment with rent -2, Mahesh lives in the apartment with rent -4, Suresh lives in the apartment with rent -8, and Ramesh lives in apartment with rent -6. They all meet at the apartment with rent 5. So the total cost becomes (-2) + (-6) + (-4) + (-8) + (5) = -15 Example case 4.Mukesh lives in the apartment with rent -7, Mahesh lives in the apartment with rent -9, Suresh lives in the apartment with rent -15, and Ramesh lives in the apartment with rent -12. They all meet at the apartment with rent -11. So the total cost becomes -7-9-10-11-12-15 = -64 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 You are given a 1-indexed array of size N. Initially, all elements of the array are zeros. You need to perform U updates to the array.   Each Update asks you to add 1 to the elements of the array at the indices specified by 'ax+b' for all non-negative integers x, where a and b are positive integers which specify an update query.   After performing all the updates to the array, print the array with every entry separated by space.   Input First Line of the input contains 2 space separated integers N, U. Each of the next U lines contains 2 space-separated integers: a and b, specifying an update.  Output Output the array in a single line after all updates.  Constraints  1 ≤ N ≤ 10^5 1 ≤ a, b ≤ N 1 ≤ U ≤ 2*10^5   Example Input: 7 4 1 3 7 7 7 3 2 2  Output: 0 1 2 2 1 2 2  Explanation Array after first update : [0,0,1,1,1,1,1] Array after second update : [0,0,1,1,1,1,2] Array after third update : [0,0,2,1,1,1,2] Array after fourth update : [0,1,2,2,1,2,2] 
mark[x][y]=0 mark[x][y]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
WARNING: The Input files may be as large as 8 MB. Use faster I/O methods. There is a tree, consisting of N nodes. A path is a sequence of one or more nodes of this tree, where every two adjacent nodes are connected by an edge and no node is visited twice. Generally, there are N^2 paths. Note that we are counting paths from each node onto itself as well. One path is smaller than another if the sequence of nodes of the first path is lexicographically smaller than the sequence of nodes of the second path (by usual rules). Thus (1,3,2) will be smaller than (1,3,4,5). And (2,4) will be smaller than (3). Every day, Lucy writes out a path on a sheet of paper. On the first day, she writes the lexicographically smallest path. On the second day, she writes the lexicographically second smallest path, and so on. Generally, on the K^th day, Lucy writes out the lexicographically K^th smallest path. Nana likes to read Lucy's notes about the paths in the tree. She is curious about the path that will be written on the Q^th day. Could you please help her?  Input The first line of input consists of a single integer T, the number of the test cases. Then, there are T test cases, given in the following form: the first line of the test case consists of an integer N, the number of nodes and an integer Q, the number from the statement. Then, N-1 lines follow. Each such line will consist of two integers X and Y with the meaning that there's an edge, connecting nodes X and Y in the tree. You may assume that you are always given a valid tree.  Output For every test case, output the lexicographically Q^th smallest path in the given tree on a single line, without leading or trailing spaces. There should be exactly one space between successive nodes in the path. Output the answer to the t^th test case should be given on the t^th line.  Constraints  1 ≤ N ≤ 100000 1 ≤ Q ≤ N^2 1 ≤ Sum of N over all the test cases in the single file ≤ 1000000   Sample Input  3 6 21 1 2 2 3 2 4 2 5 2 6 7 35 1 2 1 3 3 4 4 5 4 6 4 7 6 16 1 2 1 3 1 4 2 5 1 6   Sample Output  4 2 1 5 4 7 3 1 2 5   Explanation In the first test case, there are 36 paths in total. The lexicographically smallest first 21 paths are  01: 1 02: 1 2 03: 1 2 3 04: 1 2 4 05: 1 2 5 06: 1 2 6 07: 2 08: 2 1 09: 2 3 10: 2 4 11: 2 5 12: 2 6 13: 3 14: 3 2 15: 3 2 1 16: 3 2 4 17: 3 2 5 18: 3 2 6 19: 4 20: 4 2 21: 4 2 1  
_f x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Byteline is currently the largest mobile phone operator in Byteland. They have N cellphone towers at different places in Byteland.  Byteland can be viewed as a two dimensional plane, with each tower or skyscraper described by a point in that plane. Of course, no two points have the same coordinates.  Two towers can only communicate with each other if there is no tower nor skyscraper lying on the straight line segment connecting them.   As the most skillful programmer in the company, Johnny's job is to write a program to help Byteland compute the number of pairs of towers which can communicate with each other.   And once again, Johnny has asked for your help!   Input The first line contains a number t (about 15) which is the number of test cases. Then t test cases follow. Each test case has the following form. The first line contains two numbers N and M (1 ≤ N, M ≤ 1000), the number of towers and skyscrapers in Byteland. Each line in the next N lines contains two integers representing the coordinates of the cellphone towers. Finally, each line in the next M lines contains two integers representing the coordinates of the skyscrapers. All coordinates have absolute values not larger than 10000.  Output For each test case, print a single number, describing the number of pairs of towers which can communicate with each other.  Example  Input 1 5 4 -1 -1 1 -1 0 -2 -2 -2 0 0 -1 -2 1 0 -1 1 0 -1  Output 6   Output details   In the above figure, the blue points represent the cell towers and the red points represent the skyscrapers as in the example input. The 6 segments AE, BE, BC, AC, AD and BD correspond to the 6 pairs of towers that can communicate with each other. 
interval interval interval interval interval interval A[0] A[0] A[0] check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Johnny is the author of the famous open source software ByteDict (Bytelandian electronic dictionary). Being a fan of the word game Scrabble, Johnny would like to make ByteDict useful for Scrabble training. Therefore, he has decided to implement the "Wildcard Matching" feature. Wildcard matching allows ByteDict's users to search for words matching a given wildcard pattern. A wildcard pattern may include the characters '*' or '?' in addition to the characters of the alphabet. A '*' matches any sequence of characters (including the empty sequence) and a '?' matches any single character. To be more precise, a wildcard pattern is matched with a word if we can replace each '?' with an alphabet character and each '*' with a sequence of alphabet characters so that after replacement, the pattern becomes identical to the word. Now, as usual, please help Johnny implement the feature!  Input The first line contains a number t (about 2) which is the number of test cases. Then t test cases follow. Each test case has the following form. The first line contains two integers N and Q (1 ≤ N ≤ 55000, 1 ≤ Q ≤ 300) which are the number of words in the dictionary and the number of wildcard queries. Each line in the next N lines contains a word from the dictionary. The alphabet consists of lower and uppercase characters as well as digits. Each line in the next Q lines contains a wildcard pattern. The length of each word does not exceed 25 and the length of each wildcard pattern does not exceed 5. Each test case is separated by a blank line.  Output For each wildcard query print a line containing the query itself and the number of words in the dictionary that match the query. Print a blank line after each test case's output.  Example  Input: 2 1 7 abc abc cba a?? ??a *?a *** **a  7 4 spoj codechef uva tju onlinejudge Acmicpc Worldcup2010 *a* sp?* *c* uvc  Output: abc 1 cba 0 a?? 1 ??a 0 *?a 0 *** 1 **a 0  *a* 1 sp?* 1 *c* 3 uvc 0 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The BSA (Bytelandian Security Agency) has intercepted several secret keys from the Trojan Kingdom. Each secret key is a prime number. But BSA was only able to retrieve some part of the digits, not all of them!  Johnny's job is to help BSA recover these lost primes, and he has delegated the task to you!  Input The first line contains a number t (about 15) which is the number of test cases. Then t test cases follow. Each test case is described in a single line containing the  patterns of the lost primes (the unknown digits are represented by '?'s. Each pattern's length is at most 12.  Output For each test case, print the recovered prime. If there are multiple solutions, print any of them. The recovered prime should have the same number of digits as the corresponding pattern and should contain no leading zeros. You can assume that there is at least one solution for each test case.  Example  Input: 3 ? ?3 1??  Output: 5 23 101  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== seen seen cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Two friends live in a small city. The city is built in the form of a circular road and skyscrapers surrounding the road. But one day the two friends quarreled with each other, and although they remained in the city, they decided to live in apartments located as far as possible from each other, or more precisely, so as to maximize the travel time between them. All the skyscrapers are arranged in a circle around the road (so you can travel in a cycle as follows: 1 <-> 2 <-> 3 <-> ... <-> n <-> 1), and the travel time between two neighbouring buildings is 1. The travel time between two adjacent floors of a skyscraper is also 1, and the friends can choose to live in any floor of the building, from the 0-th to the k-th, assuming that the skyscraper in question has k floors. Thus, the travel time from the j-th floor to ground level is j time units.  Input First, 1≤n≤10^6, the number of skyscrapers. The following numbers, 1≤h1≤10^9,...1≤hn≤10^9, are the heights of the buildings, given in clockwise order.  Output Output exactly one number, the maximal possible travel time.  Example Input: 4 1 2 3 4  Output: 8 Input: 10 1 7 4 3 2 9 2 3 4 5  Output: 20    Please note: the time limit for this problem is extremely strict!  
print_bn print_bn print_bn steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  You are given an array of M*N elements each with non-negative value. Now you will be given query denoted by 2 cordinates which will denote the top-left point of a sub-rectangle and bottom-right point of the sub-rectangle. Now you need to find the sum of all the elements in the given sub-rectangle.    Input The first line of the input contains two integers M and N indicating the number of rows and columns.The following M lines have N integers each which denotes the value at that particular cell.Line M+2 contains a single integer C indicating the number of sub-rectangles for which the total sum needs to be computed. Each of the following C lines (line M+2+1 ... M+2+C) each contain four integers x1, y1, x2 and y2 (with x1 ≤ x2 and y1 ≤ y2) and describes a rectangle. The rectangle has its top left corner at the tree in position (x1,y1) and its bottom right corner at the tree at position (x2,y2).  Output Your output must contain C lines with one integer on each line. Line i must contain the total sum n the rectangle described on line M+2+i in the input.  Example Input: 4   4 3   4   15  23 14  20  12  9 3   8   12  15 12  20  7   5 2 2   2   3   4 4   2   4   2  Output: 76 20   
v[a] v[a] v[a] holds holds holds holds holds holds ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
For a non-negative integer N, define S(N) as the sum of the odd digits of N plus twice the sum of the even digits of N. For example, S(5)=5, S(456)=2*4+5+2*6=25, and S(314159)=3+1+2*4+1+5+9=27. Define D(N) as the last digit of S(N). So D(5)=5, D(456)=5, and D(314159)=7. Given 2 non-negative integers A and B, compute the sum of D(N) over all N between A and B, inclusive.   Input Input will begin with an integer T, the number of test cases. T lines follow, each containing 2 integers A and B.  Output For each test case, output a single integer indicating the corresponding sum.  Sample Input 3 1 8 28 138 314159 314159   Sample Output 36 495 7   Constraints  T ≤ 1000 0 ≤ A ≤ B ≤ 400,000,000 
cr-0 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ll> ll> ++n ++n ++n ++n ++n ++n ++n ++n ++n sum0 sum0 sum0 sum0 sum0 cout<<ans*c<<endl cout<<ans*c<<endl holds holds A[i][k] interval interval interval interval interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Concerned with the fitness levels of the players in the National Team, the coach decides to carry out a running drill in the next training session. So, he sets up checkpoints in the training ground at different positions. After evaluating each player’s fitness, the coach asks each player to cover a certain minimum distance while completing all checkpoints (Suppose a players starts at checkpoint 2, then he must cover all checkpoints and finish at checkpoint 2). Players being lazy want to finish the drill in exact distance that the coach assigns them. Is it possible?  Input Input description.  First line with two space separated integers N and L , the number of checkpoints and the minimum distance that coach asks the player to cover, respectively Then N lines containing N space separated integers each. The jth integer on the ith line, dij, denotes the distance between checkpoint point i and j (dij for i != j, and dii = 0). For all 1 ≤ i, j, k ≤ N it is the case that dij = dji and dij ≤ dik + dkj.   Output For each test case, output a single line containing the answer i.e. POSSIBLE or IMPOSSIBLE.  Constraints  1 ≤ N ≤ 14 1 ≤ L ≤ 10^14^ 1 ≤ dij ≤ L   Example Input:  5 15 0 2 3 3 2 2 0 3 2 3 3 3 0 2 2 3 2 2 0 3 2 3 2 3 0  Output: POSSIBLE 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj Found holds holds holds holds holds holds cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given two strings S and T each consisting of n characters. Each character in both the strings is one of the first ten Latin lowercase alphabet letters ('a'-'j'). The characters are numbered 1 through n in both strings. Let's denote S[l..r] as a substring of S which begins at the l'th character of S and ends at the r'th character of S. Longest common prefix (LCP) of two strings is the longest prefix of the first string which is also a prefix of the second. You are asked to process q queries of the following kind: You are given two integers x and y (1 ≤ x, y ≤ n). Your task is to find the length of the LCP of S[x..n] and T[y..n]. You are allowed to apply some permutation to all of the distinct letters of S before finding the LCP. More formally, you should make a bijection from letters 'a'-'j' to the same set of letters, replace each letter of S with the corresponding value in the bijection and then find the LCP. You should pick the bijection so that the LCP is as large as possible. If there are several possible bijections, you should pick the one with the least possible letter assigned to 'a', then (if still ambiguous) to 'b' and so on. Please note that the changes in S doesn't propagate over queries, i.e. all the string transformations are only within a single query and should be rolled back before processing the next one.  Input The first line of the input contains one integer T denoting the number of test cases. The first line of the test case description contains two integers n and q. The next two lines contain two string S and T respectively. Each of the next q lines contains two integers x and y denoting a query to process.  Output For each of the queries, output the length of the LCP together with the optimal bijection in the format "{the letter assigned to 'a'}{the letter assigned to 'b'}...{the letter assigned to 'j'}".  Constraints  1 ≤ T ≤ 5 1 ≤ n ≤ 125000 1 ≤ q ≤ 50000   Example Input: 1 5 3 ababa babaa 1 1 1 3 5 4  Output: 4 bacdefghij 2 bacdefghij 1 abcdefghij 
G[Query[i] %s%d cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Bunny and Lucky are good friends. One day Bunny decided to play a game with Lucky. So he gave two numbers (a and b) and ask her to find the multiplication of a and b. She is good at mathematics, so she multiplied them and gave the answer within seconds. So he decided to add some more spicy to the problem. So he asked her to add all digits in the result until the resultant will be a single digit. Let’s consider a = 11 and b = 8, 11X8 = 88 from the result 8+8 = 16 then for 16, 1+6 = 7. So finally the answer is 7. But it is difficult her to find the vale for larger numbers. 	So help her in finding the single digit value.    Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows." The first line of each test case contains two integers a ans b     Output       For each test case, output a single line containing a single digit value.      Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 10^5 0 ≤ a, b ≤ 10^18     Example Input: 3 2 5 8 8 8 11  Output: 1 1 7    Explanation Example case 2: 8*8 = 64 from that 6+4 = 10 the 1+0 = 1, so the answer is 1. 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A Little Elephant and his friends from the Zoo of Lviv like candies very much.  There are N elephants in the Zoo. The elephant with number K (1 ≤ K ≤ N) will be happy if he receives at least AK candies. There are C candies in all in the Zoo.  The Zoo staff is interested in knowing whether it is possible to make all the N elephants happy by giving each elephant at least as many candies as he wants, that is, the K^th elephant should receive at least AK candies. Each candy can be given to only one elephant. Print Yes if it is possible and No otherwise.   Input The first line of the input file contains an integer T, the number of test cases. T test cases follow. Each test case consists of exactly 2 lines. The first line of each test case contains two space separated integers N and C, the total number of elephants and the total number of candies in the Zoo respectively. The second line contains N space separated integers A1, A2, ..., AN.   Output For each test case output exactly one line containing the string Yes if it possible to make all elephants happy and the string No otherwise. Output is case sensitive. So do not print YES or yes.   Constraints 1 ≤ T ≤ 1000 1 ≤ N ≤ 100 1 ≤ C ≤ 10^9 1 ≤ AK ≤ 10000, for K = 1, 2, ..., N  Example  Input: 2 2 3 1 1 3 7 4 2 2  Output: Yes No    Explanation Case 1. We can give one candy to the first elephant and two candies to the second elephant and make them both happy. Hence the answer is Yes. Alternatively we can give one candy to each elephant and left one candy for ourselves but they again will be happy.  Case 2. Even if we give four candies to the first elephant and two candies to the second elephant we will have only one candy left and can not make last elephant happy since he needs two candies for his happiness. Hence the answer is No. 
longest byte[] byte[] seen seen elem elem elem elem elem elem elem elem elem elem ++n ++n ++n ++n ++n ++n %d%lld %d%lld xx<=r-0 a[i-lose[j]] a[i-lose[j]] ans/0 ans/0 fpow fpow fpow fpow fpow byte[] byte[] byte[] byte[] byte[] byte[] Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem ++n ++n ++n ++n s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q
 Problem description. Finally Lelouch has reached “Kyoto”. There he found many odd looking sticks under a tree. When he looked more closely, he found a message engraved on the tree saying-“You can perform magic with a GOOD stick!! A stick of length ‘L’ is GOOD if there exists a right angled triangle whose length all the sides are positive integers and the length of the HYPOTENUSE = L !! “ Lelouch being a greedy person collected  “T” sticks. Now he wonders whether he can perform magic with a specific stick whose length is a positive integer “L”.  Input Input description. First line of the test file contains the number of sticks collected by Michael -> TT lines follow. The i’th line specifies the length L of the i’th stick.  Output Output T lines. On the ith line  print “YES” if he can perform magic with the i’th stick otherwise print “NO” (quotes only for clarity).  Constraints T<=300L<=100000 (=10^5)  Example Input: 3161718Output: NOYESNO   Explanation Since 8^2 + 15^12 = 17^2, 17 is a valid integer hypotenuse, and hence it is accepted 
0LL<<digits[i] name name name name x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD check[0]= x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem Statement: At Ashford academy, mathematics instructor comes up with an easy number problem for the test. Finding out the sum of squares of proper factors of a given number other than 1. Now you would think thats easy, but for Nunnally (She is Lelouch's sister if you were wondering) its not. You have to write a program for her to compute the sum of squares 'S' of proper factors of a number 'n'. Help Nunnally pass the test.  Input: First line contains the number of test  cases 'T' followed by T lines containing a test case each.  Ouput: In one line output S mod 1000000007 for every test case.  Constraint: 0 <= n <= 10^8 1 <= t <= 10^2 time = 1 sec  Example: Input: 5 3 8 9 6 10  Output: 0 20 9 13 29   
v[a] holds holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem description. Royal Britannian family has got a gift- 'N' toffees by the courtesy of area 11.Now everybody loves these toffees and they decide to have them at breakfast.All of them are kept in the refrigerator. The family has 'A' adults and 'B' babies(A ≥ B).Since the adults are cunning they want to ensure that they get a large share of toffees.After dinner, first adult goes to the refrigerator gives a toffee to each baby and divides the rest in 'A' parts takes his share and comes back.This is done by every adult in the night. When every body gets in the morning there are only 'K' toffees left. Given A and B, you have to tell the minimum 'N' which makes this distribution possible and 'K'. Obviously the number of toffees can't b fractional or negative.  Input One line containing no. of test cases 't' followed by 't' lines containing 'A' and 'B' each.  Output in a single line output the N and K for each test case.  Constraints:   3 <= A <= 10 B <= A test cases 't' < 100  Example: Input: 1 3 2  Output: 23 4  Explanation: 23 toffees in the refrigerator.First adult gives 2 to the babies and takes 7. remaining = 14. Second adult goes and gives 2 to the babies and takes 4. remaining = 8. Third adult goes and gives 2 to the babies and takes 2. remaining = 2. 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There were a little elephant and an ox in Byteland. They were best friends. Once they went to forest to get some fruits. The little elephants could get N fruits and the ox got M fruits. While returning home, they decided to equalize the number of fruits they have. So, they decided to play a game. In each turn, one will divide the fruits of the other into some groups such that each group has equal number of fruits and then he will keep one group apart and eat all fruits in the other groups (see explanation) . The game continues until the number of fruiits they have becomes equal.The little elephant starts the game. Now, you have to tell how many maximum number of fruits they can take home after this game.  Input First line of the input contains a single integer T, the number of test cases. Then T lines follow, each line having two space separated integers N and M, which denote the number of fruits they initially have.  Output For each test case output a single line containg an integer which is the maximum number of fruits they can take home.  Constraints  1 ≤ T ≤  10000 1 ≤ N, M ≤ 10000     Example Input: 2 4 6 5 3  Output: 2 1    Explanation Case 1:Initially the little elephant has 4 fruits and the ox has 6 fruits. In the first turn, elephant forms 3 groups of 2 fruits each. He leaves 2 fruits and eat other 4. So, the ox now has 2 fruits. In the second turn, ox can divide 4 fruits into 2 groups of 2 fruits each. He leaves 2 fruits and eat the rest. Now they both have same number of fruits i.e 2. You can check that they can't have more than 2 fruits after the game. 
sum0 sum0 stderr stderr ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n level[000000] level[000000] level[000000] level[000000] holds holds holds holds holds holds holds seen seen seen seen seen cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Far far away from here ,there is a world of peace ,Byteland .But this morning ,Laskar-e-trishul ,a terrorist Organisation has threatened the people of Byteland declaring that the peaceful land will be bombarded today.The Intelligence of Byteland has intercepted an encrypted key which is claimed as  the key of Bomb.  Programmers were called to Decrypt the key but they were stuck at a problem.    It is required to first evaluate f(A,B)  and then key is equal to the no. of pairs (L,M)  where 1<=M<=L<=P+f(A,B) such that gcd of L and M is C. Now Mayer of Byteland is looking for you as his last option. Note:A^B means A raise to the power B f(A,B)=K(A^B) where  K(x) {     s=0     while(x)     {        	s=s+x%10;        	x=x/10;     }     if(s>9)     s=K(s);     return s; }   Input:   First Line contains T=No. of test Cases For each test Case: Each Line consists of four integers A, B , C, P corresponding to each test case.  Output:  For each test case, output the number of desired pairs of (L,M).   Constraints: 1<=A,B<=10^9	1<=P,C<10^61<=t<=10  INPUT 1 2 2 2 6  OUTPUT 10 
c[j%0] c[j%0] c[j%0] first+0 vis[node] vis[node] index/i index/i index/i index/i index/i index/i index/i x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Rohan and Palli decided to play cricket. Well, as expected they dont have a coin to toss. Being the geek he is, Vishal suggested a new way to toss. He asks Palli to choose an integer between A and B (both inclusive) and Rohan to choose either odd or even. Palli already knows that Rohan is an "odd" person and he always chooses odd. Now to win this toss, Palli needs to choose an integer in whose prime factorization, the count of odd powers is strictly greater than the count of even powers. For example, If he chooses the number 13068 It's prime factorization is, 13068 = 2^2x3^3x11^2 Here, there are 2 even powers and 1 odd power. Thus, Palli would lose the toss if he chooses this number. Palli wants to know the total number of integers between A and B (both inclusive) for which he can win this toss.   Input The input contains 2 space-separated integers, A and B.  Output Output a single integer denoting the total number of integers for which Palli will win.  Constraints  2 ≤ A ≤ B ≤ 10^14 |A - B| ≤ 10^5     Example Input: 5 11  Output: 6 
c[j%0] x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Mr. Voldemort is a vicious criminal who intends to rob Azkaban. Azkaban is a country consisting of N cities which can be represented as a tree. But Dumbledore's Army (also known as the D.A.) were upto the task of stopping him. Azkaban had one highway which used to connect the cities lying at maximum distance from each other in the whole country i.e No other pair of cities were further apart from each other than these two. To maximise the safety of Azkaban, D.A. placed guards in each city lying on the highway. This highway was also called ‘The Line of Fire’.  There could possibly be many unordered pair of cities lying at maximum distance from each other, but there was only one ‘Line of Fire’ that lied between two cities. Which two cities does the line of fire lie between, Voldemort didn't know that but he did know that it lied between cities at maximum distance from each other. So to avoid risk, he decided to not rob any city that would surely lie on the ‘Line of Fire’ irrespective of which two cities the highway was laid between. Your task is to tell him how many such cities exist.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of cities in Azkaban. The second line contains N-1 space-separated integers A1, A2, ..., AN denoting that there is an connection between the i^th and the A[i]^th city. Also note that Ai will always be less than i.   Output  For each test case, output a single line containing the number of cities that Mr. Voldemort should avoid visiting.   Constraints  1 ≤ T ≤ 20 2 ≤ N ≤ 10^5 0 ≤ Ai < i   Example Input: 2 2 0 3 0 1  Output: 2 3  Explanation Example case 1: In the first test case, Azkaban has just 2 cities with a path between them. So there is just one way of picking two cities at maximum distance from each other. Hence the Line of Fire will always pass through both these cities. 
pra pra name name L>R //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Write a program that reads an NxN square matrix M that calculates the sum of the elements in individual rows, individual columns and the two main diagonals. Among these sums, print the largest. Consider the following matrix of order 3x3: 1 10 13 2 14 12 3 9 8 The row sum values are 1+10+13=24, 2+14+12=28 and 3+9+8=20. The column sum values are 1+2+3=6, 10+14+9=33 and 13+12+8=33. The diagonal sums are 1+14+8=23 and 13+14+3=30. The expected output is maximum among these sums, which is 33.    Input Input description. Tips:First line contains a value N representing the dimension of the input matrix  M, followed by N lines, each line representing a row of the matrix. Within each row, N values are given and are separated by whitespace.    Output Output description. Tips:A value which is the maximum among  N row sums, N column sums and the two main diagonal sums in M.    Constraints The entries in M are integers.  1 ≤ N ≤ 100 -100≤ Mij ≤ 100     Example   Input Output   3       1 2 3       5 -6 7       9 10 -3 16   2       16 4       -3 5 21   4       1 2 3 4       5 6 7 18       9 1 1 12       13 14 15 -60 36     
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The digital root (also called repeated digital sum) of a number is a single digit value obtained by an iterative process of summing digits. Digital sum of 65536 is 7, because 6+5+5+3+6=25 and  2+5 = 7. Write a program that takes an integer as input and prints its digital root.  Constraints  1 ≤ N ≤ 10^7     Example   Input Output   65536 7   1214 8   3 3   9199999 1  
interval
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 The Glittering Caves of Aglarond  'Strange are the ways of Men, Legolas! Here they have one of the marvels of the Northern World, and what do they say of it? Caves, they say!     Caves! Holes to fly to in time of war, to store fodder in! My good Legolas, do you know that the caverns of Helm's Deep are vast and beautiful?     There would be an endless pilgrimage of Dwarves, merely to gaze at them, if such things were known to be. Aye indeed, they would pay pure gold for a brief glance!     'And, Legolas, when the torches are kindled and men walk on the sandy floors under the echoing domes, ah! then, Legolas, gems and crystals and veins of     precious ore glint in the polished walls; and the light glows through folded marbles, shell-like, translucent as the living hands of Queen Galadriel.' - Gimli, describing to Legolas the Glittering Caves of Aglarond.  While these caves are by and large natural, there is one place where the Men of Rohan have chiseled into the rock to create a magnificent exhibit. You have a wall of the cave consisting of 'lighted diamonds' arranged in a N by M grid (basically, you have a light behind each diamond which can be turned on or off). Further, you have a switch corresponding to each row of this diamond-grid. When you operate a switch, it will toggle (flip) the lights corresponding to that row.  You are given the current configuration of the lighted diamonds. Gimli challenges Legolas to turn on as many diamonds as possible using EXACTLY K on/off operations of the switches. Since Legolas is an Elf of the Wood and doesn't care much for things that glitter, he instead asks for your help. Note that the same switch (i.e. row) can be chosen multiple times.  Input (STDIN):  The first line contains the number of test cases T. Each test case contains N, M and K on the first line followed by N lines containing M characters each. The ith line denotes the state of the diamonds in the ith row, where '*' denotes a diamond which is on and '.' denotes a diamond which is off.  Output (STDOUT):  Output T lines containing the answer for the corresponding case. Between successive test cases, there should not be any blank lines in the output.  Constraints:  1 <= T <= 100 1 <= N,M <= 50 1 <= K <= 100  Sample Input:   2 2 2 1 .. ** 2 2 2 .. **  Sample Output:   4 2  Notes/Explanation of Sample Input:  In the first test case, row 1 can be toggled hence leaving all 4 lights to be in the ON state. In the second test case, row 1 (or row 2) can be toggled twice, hence maintaining the state of the initial configuration. 
interval interval holds holds holds #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> name name 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  	On the eve of Republic Day, Teacher decided to distribute candies among  N  students.She brought the candies in a box and placed it in front of students. She allowed every student to take out some candies. But each one of them tried to take out as much candies as possible. That's why, Not all students were happy. She called all students and requested for their bags of candies. Now she wants to distribute candies equally among all bags. She'll be performing two operations.  Pick up a candy from a bag. Put a candy into another bag.  	Both operations require 1 unit of time. You are given with bags of N students with number of candies in it. You have to check whether candies can be distributed equally among all bags or not. If it can be distributed then calculate the time required for total distribution.  Input  First Line contains number of test cases T. Every test case consist of two lines, First line contains N i.e. Number of Bags and next line contains N space separated integers A1, A2, ..., AN , where i^th integer indicates number of candies in i^th bag.     Output  If candies can be distributed equally then output the time required for distribution in new line, else, output "-1" (without quotes) in new line.     Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 100 0 ≤ Number of Candies in each bag ≤ 1000     Example Input: 3 3 1 2 3 3 1 2 1 4 9 7 8 0  Output: 2 -1 12    Explanation Example case 1.Teacher picks up a candy from a bag with maximum candies i.e. 3^rd bag and put it in the bag with minimum candies i.e. 1^st bag. Now all bags have two candies each. Total time required for distribution is 2. 
vis[node] vis[node] x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Viral is playing marbles with his friends. While playing, he accidentally drops N marbles and the marbles are spread on the floor and stopped. Viral notes the position X,Y of the marbles as if the floor were coordinate system and marbles as points. Viral has to pick up the marbles, but Viral is lazy so he wants to decide a line connecting maximum number of marbles. Help Viral find the maximum number of marbles that lie in a line. If two lines have same number of marbles, print number of marbles on any one of them.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of points. The second line contains N space-separated integers X and Y denoting the co-ordinates of the points at which the marbles stop.   Output  For each test case, output a single line containing the maximum number of marbles in a line.   Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 5000 -100000 ≤ X,Y ≤ 100000   Example Input: 2 4 1 1 2 2 3 4 3 3 4 50 60 40 70 30 80 120 23  Output: 3 3  Explanation Example case 1. From the given points,the max points are (1,1),(2,2) and (3,3) which lie on line  x=y.  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A Sniper is standing at the point (x1, y1) on the 2D XY Plane. He shoots from his position towards the point (x2, y2). You may assume that all points are integers. Consider the 2D grid formed by integer points on the XY Plane. The position of the Sniper and the Target are lattice points in this grid. The bullet shot by the Sniper will follow a straight line trajectory from (x1, y1) to (x2, y2). The bullet goes no further than (x2, y2). Consider the trajectory of the bullet when the Sniper is standing at (1, 1) and the Target lies at (4, 3).  Notice how the trajectory of the bullet touches 4 cells. A cell is considered touched by the trajectory if and only if the bullet will enter the cell. How many cells are touched by the trajectory of the bullet? ￼  Input The first line contains a single integer T, the number of test cases. Each of the following T lines contain one test case each. Each test case contains 4 integers x1, y1, x2 and y2. The integers are separated by single space characters.  Output For each test case, output a single line, containing the number of cells touched by the trajectory of the bullet shot from (x1, y1) to (x2, y2). Remember that a cell is considered touched by the trejectory if and only if the bullet enters the cell - only touching a side is not enough.  Constraints  0 < T < 10100 0 ≤ x1, y1, x2, y2 ≤ 1000000000   Sample Input  3 0 0 3 2 0 0 2 2 0 0 1 0   Sample Output  4 2 0   Explanation In the second test case, the trajectory of the bullet touches the point (1, 1). The bullet does not enter the cells with bottom left corners at (0,1) and (1,0). It directly enters the cell with the bottom left corner at (1,1). Hence, we count only two cells as touched during its trajectory. 
ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Stuart is obsessed to numbers. He like all type of numbers in fact he is having a great collection of numbers in his room. His collection includes N different large numbers. But today he is searching for a number which is having maximum frequency of digit X. Numbers are large so he can’t do the task on his own. Help him to find a number having maximum frequency of digit X.    Input First Line contains number of test cases T. First Line of each test case contains N. Next line contains N space separated integers A1,A2,A3,....,AN. Where Ai integer indicates i^th number in Stuart's room. Next Line contains digit X.    Output Output the number which is having maximum frequency of digit X. If two or more numbers are having same maximum frequency then output the first occurred number among them in A1,A2,A3,....,AN    Constraints  1 ≤ T ≤ 30 1 ≤ N ≤ 100 1 ≤ Ai ≤ 10^200 0 ≤ X ≤ 9      Example Input: 2 5 345 1323 165 98 456 3 5 335 876 98 1323 349 3   Output: 1323 335    Explanation Example case 1. 1323 number is having maximum occurrence of digit 3. Example case 2. 335 & 1323 are having maximum occurrence of digit 3 so output must be first occurred number in the array i.e. 335. 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< tw[j] c[j%0] c[j%0] c[j%0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  This time minions are celebrating Diwali Festival. There are N minions in total. Each of them owns a house. On this Festival, Each of them wants to decorate their house. But none of them have enough money to do that. One of the minion, Kevin, requested Gru for money. Gru agreed for money distribution but he will be giving money to a minion if and only if demanded money is less than or equal to the money Gru have. Now Gru wonders if he can spend all the money or not.    Input First line have number of test cases T. Each test case consist of Two Lines. First line contains two space separated integers N and K i.e. Number of minions and Amount of Money Gru have. Next line contains N space separated integers A1,A2,A3,.....,AN representing amount of money demanded by i^th minion.    Output Output YES if Gru can spend his all of the money on minions i.e. after distribution Gru have zero amount of money else NO.    Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 10^2 1 ≤ K,Ai ≤ 10^9     Example Input: 2 4 9 5 2 2 4 4 9 5 2 18 3   Output: YES NO     Explanation Example case 1.At first Gru is having 9 Rs. If he gives 5 Rs. to first minion then remaining 4 Rs. can be given to 2nd and 3rd minion or to the 4th minion. Which will leave zero amount of money in the hands of Gru. Example case 2.At first Gru is having 9 Rs. If he gives 5 Rs. to the first minion then from remaining 4 Rs. either he can give 2 Rs. to the 2nd minion or 3 Rs. to the fourth minion. Which will leave either 2 Rs. or 1 Rs. in the hands of Gru. 
Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Shil has an array of  N  integers A1 , A2....AN.He can insert an element 1 ≤ X ≤ K between any two  adjacent numbers or at the start or at end of array.He wants to find out total number of ways to insert an element such that length of longest strictly increasing sub-sequence of the array increases by 1.Two ways are considered different if position of inserted element is different or value of the inserted element is different.  Input First line of input consists of integer T denoting total number of test cases.  First line of each test case consists of two integers N and K.Next line  consists of N integers A1, A2....AN.   Output  For each test case, print total number of ways to insert an element in the array.  Constraints   1 ≤ T ≤  20  1 ≤ N ≤  1000  1 ≤ K ≤  1000000  1 ≤ Ai ≤  1000000   Example Input: 1 3 6 2 4 3  Output: 7  Explanation All the possible ways will be [1 2 4 3] , [2 3 4 3] , [2 4 5 3], [2 4 6 3], [2 4 3 4], [2 4 3 5] and [2 4 3 6]. 
cout0 //cout<<v[i]<< a>c a>c a>c a>c a>c a>c pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Lizards are weird creatures. Not only are they afraid of bigger animals, they even get afraid when they see some other lizard staring at them.  N lizards are standing in a line, each of them is either facing left or right. A pair of indices (i,j) (i < j) is called an afraid pair if lizard at index i is facing right, and lizard at index j is facing left.  Q queries are given, each query represented by two integers l and r (0 ≤ l ≤ r < N). Query l r means flip direction of the lizards which have indices between l and r, inclusive. E.g., if the arrangement was LRRL then after query 1 3 it becomes LLLR.  After each query, print the number of afraid pairs in the arrangement.  Input Description First line contains single integer NNext line contains N characters, each being either L or R. L means lizard facing left, R means facing rightNext line has a single integer Q, the number of queriesNext Q lines each has 2 space separated integers l and r  Output Description For each query print the number of afraid pairs in the arrangement of lizards.  Constraints 1≤N≤80000, 1≤Q≤80000  Example Input: 4LRRL12 3 Output: 1 
name name name cout<<temp+g<<endl cout<<temp+g<<endl 0LL<<digits[i] 0LL<<digits[i] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   N lizards are standing in a line, each of them is either facing left or right with equal probability. A pair of indices (i,j) (iafraid pair if lizard at index i is facing right, and lizard at index j is facing left. What is the expected number of afraid pairs?     Input Input description. The first line of the input contains an integer T denoting the number of test cases. For each case there is a single line containing N, the number of lizards.    Output Output description. For each test case, output a single line containing the expected number of lizards as an irreducible fraction. See the sample output for the exact format.    Constraints   T  = 1000   1  <=  N  <=  10^9     Example Input: 2 2 3  Output: 1/4 3/4    Explanation Example case 1. There are four possible ways: LL, LR, RR, RL. Of these only 1 has an afraid pair. 
interval holds holds holds holds ruofytriht A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
This valentine day,a rose-shopkeeper prayed to god to give him some magical power such that he could earn a lot of money.God listened to him & agreed to give him LOVE-MAGIC.But God mentioned some conditions which the shop-keeper would have to follow to learn that MAGIC. CONDITIONS: 1.God will give him the ‘n’ roses to sell & the shop-keeper is’nt allow to sell any extra roses. 2.He has to provide each of his customer an id number.The 1st customer will have the id 1,2nd will have 2 & so on upto ‘n’ & he isn’t allowed to sell roses to a customer who doesn’t have any id.So he can only sell to ‘n’ customers. If the shop-keeper agreed to fulfilled these conditions then God will help him with the MAGIC.The functionalities of the MAGIC are: 1.The ith id customer will surely buy i number of roses. 2.after selling roses to kth id customer, the shop-keeper will be amazed to see that ‘k’ number of roses added to his stock. 3.The ith id customer will surely pay the amount equals to, the square of the number of ways he can choose those ‘i’ roses from the stock multiplied by that customer’s id number. 4.This magic will work for each ‘i’ & ‘k’ where 1 ≤ i,k ≤ n; NOTE: Each customer can buy only once & then his id will be invalid & at any instance of time in the stock the shop-keeper will have all the roses distinct from each other. CONSTRAINT: 1 ≤ T ≤ 1000; 1 ≤ n ≤ 10^6;  Input Suppose that day the shop-keeper fulfilled the conditions & the magic works & he able to sell to all the ‘n’ customers.Now,first line of the input an integer ‘T’ will be given indicating the number of test case.Then in following ‘T’ lines,each contains an integer which is the value of ‘n’.  Output For each test case You have to say how much amount the shop-keeper earns that day.Mind it the output will be a huge number so give your answer in modulo (10^9+7),Separate each answer corresponds to each test case with a new line character.  Example  Input: 3 1 2 3   Output: 1 6 30   
Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Given three integer  X ,  Y  and Z. Find maximum value of   p   such that Z ^ p   divides  factorial of (X*Y).   Input Input will begin with an integer T (at most 100), the number of test cases. T testcases follow, each having three space seprated integer  X, Y, Z  (2 ≤ Z ≤ 10^9 , 2 ≤ Y ≤ 10^9, 2 ≤ Z ≤ 10^12 ).   Output For each test case, output maximum value of   p.   Example  Input: 2 2 2 24 5 2 10  Output: 1 2 
cout<<temp+g<<endl
 You have N soldiers at your disposal , each having certain strength.Your senior commander is asking some questions.His questions are of the form , given strength S and a number K , do there exist K different soldiers such that sum of their strengths is S.   Input First line of input contains N and Q.Number of soldiers and the number of queries asked by head commander.Then N lines follow describing the strength of each soldier.After that Q more lines are given each containing S and K as described in the problem.  Output For each query output a line containing YES or NO accordingly the strength S can be obtained using K soldiers.   Constrains: 1 ≤ N ≤ 100 Strength of each soldier is between 1 and 1000 inclusive. 1 ≤ Q ≤ 1000 1 ≤ S ≤ total strength of all soldiers 1 ≤ K< N/2   Example:    Input: 5 6 3 2 4 5 2 4 2 4 1 5 3 5 2 8 2 8 4 Output: YES YES NO YES YES NO  
cs++ cs++ cs++ v[a] v[a] stderr stderr stderr stderr stderr stderr stderr stderr s[i-0][j]== s[i-0][j]== s[i-0][j]== cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   Problem description John studies in 10 standards. One day he forgets to do his Maths homework. So his maths teacher gave him a punishment. He gave him some big numbers (8 or 9 digits numbers) and asked john to prepare the list of their prime factors in ascending order. John needs to prepare a separate list for each number. John apologizes for his mistake and promises that this type of activity will never happen again. Now teacher decided to give some relaxation to John. Now he told that he just needs to find the last element/number of that long list of prime factors that he was preparing for each number. But John still doesn’t know how to find that last number. Could you help John?    Input The first line of the input contains an integer T denoting the number of test cases and then followed by t positive integers for which you need to find the last number of the list of its prime factors in ascending order.  Output For each test case output a single positive number that will be the last element of the list of its prime factors in ascending order.  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 10 2 ≤ n ≤ 1000000000000000     Example Input: 2 102 113   Output: 17 113     Explanation The list of prime factors of 102 in ascending order is: 2,3,17 , so last number is 17. The number 113 is prime in itself, so the list of prime factors of 113 in ascending order is: 113, so last number is 113.  
interval interval holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  PROBLEM STATEMENT Today Liya got a mathematics problem from her teacher , she wants to solve the question but she is unable to solve and so asks for your help. Can you help her !! The question is  given  n and k evaluate “ The sum of all binomial coefficients with n as superscript and i as subscript (  nCi  )  with i ranging from 0 (zero)  to minimum of (k,n-k)  . This sum divided by  2 raised to power n-1 ( 2^(n-1) ) ” . For details see the explanation section for clarification .    INPUT First line of input is the number of test cases t .  For each test case ,next line contains 2 integers n and k .  OUTPUT Only one line per test case, the ans to the question multiplied by 100 ( rounded off  to exactly one decimal place  ).  Constraints 1<=t<=10, 0<=k<=n<=1000000 , n>0 .  TEST CASES INPUT: 1 20 5 OUTPUT: 4.1  EXPLANATION Here n=20 and k=5 ,  so answer will be (20c0 + 20c1 + 20c2 + 20c3 +20c4 + 20c5)/(2^19) = 0.041389 100*ans (rounded off to ‘exactly’ first decimal place) = 4.1 
c[j%0] q[i] q[i] holds holds holds cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In this problem, the divisors of N do not include the number N itself. For example, if N=24, the divisors of N (excluding N) are 1, 2, 3, 4, 6 and 12. Thus, the product of divisors is 1x2x3x4x6x8x12=13824. Since the result may be very large, if the result has more than 4 digits, the program only needs to compute the last 4 digits of it. Input: The first line contains t, the number of test cases (about 300,000). Then t test cases follow. Each test case contains a single integer N (1 ≤ N ≤ 500,000) whose product of divisors needs to be computed. Output: For each test case, print a single line containing the corresponding result of that test case.  Example Sample Input: 6 3 4 12 25 957 10000  Sample Output: 1 2 144 5 7493 0000 
name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description.  There are 'n' cities in the country of ByteLand. These cities are categorized into three types of cities: C1, C2 and C3. Chef has a master lock that he needs to open. This lock is comprised of 'k' component locks. All the k locks can be opened in a sequential manner only. These component locks are of three types: L1, L2, and L3. Chef has a list of the  types of all the k locks ( LCK[1] , LCK[2] ..... LCK[k]. Chef is provided with nine different costs C[3][3]:             	Cij : Cost of buying a key for jth type of lock from the ith city. Chef also has a list of the types of all the n cities ( Cy[1],Cy[2]....Cy[n] ) . He can choose to start from any city 'x' and go upto city x+k-1. At each city 'x+i-1'( this will be the i^th city that he has visited, i<=k) , he buys key to the lock numbered 'i' ( LCK[i] ). Task: Chef knows that the amount of money required to buy keys depends on his starting index 'x'. Chef wants to spend as little money as possible. So he asks you to find the minimum possible cost for opening the master lock.   Input  First line contains the number of test cases T . The description of T test cases follows." The first line of each test case contains the numbers n and k. The next line contains n numbers (1 or 2 or 3) describing the type of each city. ( C1 or C2 or C3)  The next line contains k numbers (1 or 2 or 3) describing the type of each component lock in the master lock(L1 or L2 or L3). The next line contains 9 numbers denoting the various values of Cij (starting from C11, C12....C32, C33).     Output  For each test case, output a single line containing the minimum cost of opening the master lock.     Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 200000 1 ≤ k ≤ n 1 ≤ Cij ≤ 1000000000 Sum of n for all test cases  ≤ 200000     Example Input: 1 3 2 1 2 3 1 2 2 1 1 1 1 1 1 1 1  Output: 2    Explanation Example case 1.Total cost if Chef starts at city 1 = C11+ C22 = 3. Total cost if Chef starts at city 2 = C21+ C32 = 2. 
vis[node] vis[node] vis[node] task task task task task task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There is a N-story building and you are given two identical eggs. The eggs (and the building) have an interesting property that if you throw the egg from a floor number less than X, it will not break. And it will always break if the floor number is greater than or equal to X. Assuming that you can reuse the eggs which didn't break, you need to find X in a minimal number of throws. What is the worst case upper bound on the number of throws you must make to determine this X?  Input An integer T, denoting the number of test cases (1<= T <= 100000). Each test case contains one integer N, the number of floors in the building.  Output For each test case, print the minimum number of moves required to determine X on a new line.  Constraints 2 <= N <= 10^9 1 <= T <= 100000 1 <= X <= N  Example Sample Input224Sample Output23 
A[i][k] A[i][k] cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A and B are playing a game. They start with two piles of p and q chips, respectively. A and B take a move alternately(A starts the game). A move consists of removing any pile and splitting the other pile into two piles (of any sizes). The loser is the one who cannot make a move any more. Can you decide who will win the game, assuming both the players play optimally?  Input An integer T, denoting the number of test cases. Each test case contains two integers p and q, the size of the two piles.  Output For every test case print "A" if A wins or "B" if B wins in a new line(without quotes).  Constraints 1 <= T <= 100000 1 <= p <= 10^18 1 <= q <= 10^18  Example Sample Input31 35 66 7Sample OutputBAA 
c[j%0] //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Digo has a Biology exam. The paper has N questions. All the questions have integral marks. Digo has M friends who are sitting around him in a circle. Digo’s friends are numbered from 1 to M, in a clockwise order. Each friend solves exactly one question, not necessarily distinct. Digo can select any index i (1 <= i <= M) and a number j, and then copies the answers of his j friends starting from index i, (in the clockwise order). If Digo attempts the same question twice, he will get marks only once. Given i and j, your task is to determine what will be the marks scored by Digo.  Input First line contains N, the number of questions. Next line contains N space separated integers, where i^th integer denotes the marks of the i^th question. Each question will contain atmost 100 marks. Next line contains an integer M, the number of friends of Digo. Next line contains M space separated integers, where i^th integer denotes the question solved by i^th friend. The next line contains Q, which is the number of queries asked by Digo. The next Q lines contain one pair of integers (i, j) each, where i denotes the starting index, and j denotes the number of friends from which he copies the answers.  Output For every query print a single integer, the marks scored by Digo in that query.  Constraints 1 <= N <= 10000 1 <= M <= 100000 1 <= Q <= 10000 1 <= i, j <= N  Example Sample Input 31 2 35 1 1 2 1 331 52 35 2Sample Output634 
cout<<temp+g<<endl holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Little Toojee was a happy go lucky boy. He seemed to find most, if not all, things funny. One day he read a word and started laughing a lot. Turns out that the word consisted only of the letters L and O. Whenever he saw the subsequence ‘LOL’ in the word, he laughed for 1 second. Given t strings, find out for how long Toojee laughed on seeing each string.   Input The first line contains t queries. This is followed by t lines each containing one string S. String S consists only of capital letters.  Output Output for each string on a new line.  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ t ≤ 10 1 ≤ |S| ≤ 10^6     Example Input: 2 LOL LOLOL  Output: 1 4    Explanation Test 1: On observation, we can tell that there is only 1 occurrence of LOL. Test 2: Let the string be 0-indexed and let V = {a, b, c} denote the indices that make up the string “LOL”, where a is index of the 1st ‘L’, b is index of the ‘O’ and c is the index of the 2nd ‘L’. So, V can be {0, 1, 2}, {2, 3, 4}, {0, 1, 4} and {0, 3, 4}. We see that there are 4 occurrences of the string “LOL”.  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 holds holds holds holds holds holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
    Untitled Document !doctype>  Rachel is a girl who lives in LoveTown. She has now finally decided to get married and settle down with her better half. But in LoveTown, it is a rule that you can only marry a person if you have interests which are similar to the other person (or the maximum possible intersection of interests). For example, if the interests of Rachel are “aabbcc”, then the interests of her would be husband must contain all these interests (even the frequency of these interests should be same) and vice versa. Such a match is called the CupidMatch. The order of the interests does not matter. So, some of the possible cases which would be eligible are: abcabc    abcbca    ccbbaa    acacbb While some ineligible ones are:    abc    dabc    hkhj It is of course possible that the interests may not match (or maybe the interests match but the frequency does not). You need to help Rachel in her quest to find the right match by telling her the minimum no of changes required in total (in both the strings) so that that she can attain what is called a CupidMatch. If no changes are required, simply output 0. INPUT    The first line of the input contains a single integer T denoting the number of test cases. The description for T test cases follows. Each test case consists of a single line containing two strings, the interests of Emma and the interests of her could be husband separated by a single space. The strings consist of only lower case and upper case English alphabets. The upper case and lower case alphabets are considered to be the same, i.e. there is no case sensitivity. OUTPUT    For each test case, output the sum total of min no of changes required in both the strings to attain a CupidMatch. CONSTRAINTS    1 <= T <= 10^3    1 <= Length of string <= 10^3 EXAMPLE Input 2 hello world coding fun Output 6 7 Problem Set By: Ayush Jaggi, 2nd Year 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
 Problem Statement Given a 2D grid of integers, find the length of the longest path, starting at 0, of consecutive integers. Movement is permitted in all directions (horizontally, vertically, or diagonally).    Input First line of input contains T, the number of test cases. Each test case will start with a line containing two integers R & C, the number of rows and columns in the grid respectively. Then R lines follow, each having C integers.  Output For each test case print the answer.   Constraints    1 <= T <= 50  1 <= R, C <= 200  0 <= integers in the grid <= 5 * 10^4    Example Input: 1 4 3 0 1 4 2 5 6 1 3 7 0 1 2  Output: 4   Explanation Example case 1.  The following paths of length 4 are possible: 0–1  4    / 2  5  6    \ 1  3  7  0  1  2  OR  0  1  4  2  5  6  1  3  7       \ 0–1–2 (the slant edge is connecting 2 to 3) 
Bhardwaj Bhardwaj xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 +0] holds holds holds holds holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Lucky has found a problem in her book. A room has N (1 to N inclusive) bulbs and N switches. N people go in one by one. 1st person goes in and toggles none of the switches. 2nd person goes in and toggles all switches other than the multiples of 2(2, 4, 6...). 3rd person goes in and toggles all switches other than multiples of 3(3, 6, 9...), and so on (Till Nth person toggles all the switches except Nth switch). Once the process is finished, how many bulbs are in 'on' state. (Assume that all bulbs to be in 'off' state initially).  Help Here to solve the problem.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denotes number of bulbs and number of persons.   Output       For each test case, output a single line containing that how many bulbs are in on state.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 100000 1 ≤ N ≤ 10^9   Example Input: 4 2 3 6 7  Output: 1 2 2 5 
mark[x][y]=0 //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Chef is very quick at finding remainders of integer division. Thus,to increase the difficulty, he is given three numbers X,Y and N,and asked to calculate the remainder of X^Y/N.   Note: Please look at the list of languages allowed for this problem.  Input  The first line of the input contains an integer T denoting the number of test cases. The second line contains a single integer N denoting the divisor. Description of T cases follow. Each line of the test case contains 2 space-separated integers X and Y respectively.   Output  For each test case, output a single line containing the remainder of (X^Y)/N.   Constraints  1 ≤ T ≤ 10^6 1 ≤ X ≤ 10^6 1 ≤ Y,N ≤ 10     Example Input: 3 3 5 2 2 5 3 3  Output: 1 2 0   Explanation Example case 1. Here the value of N is 3, which remains constant for all test cases. The required output for the first test case would be the remainder of 5^2/3 i.e. 25%3i.e. 1. 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Lucky has an array of N elements [a1, a2, a3, ....,an]. Bunny decided to play a game with the array. So he gave another array which have N elements [b1, b2, b3, ...., bn] and ask her to find the minimum number of bits required to change ai to bi. Let's consider ai = 4 and bi = 3 binary values of 4 and 3 are 100 and 011, we need 3 bits to change 4 to 3.  She needs your help to solve this problem.    Input  The first line of the input contains an integer N denotes number of elements in the arrays. For next N lines, each line contains two integers(ai and bi) separated by space     Output  Output N lines, each line contains minimum number of bits require to change ai to bi.     Constraints  1 ≤ N ≤ 10^5 1 ≤ ai, bi ≤ 10^9     Example Input: 2 1 3 4 3  Output: 1 3    Explanation Example case: For 1 and 3 binary values are 01 and 11, so we need to change 1 bit for get 3 from 1 
tw[j] holds holds holds holds _R _R _R _R x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
As we all know RK loves his name very much especially the character 'R' so this time task for you is based on his awesome name. RK gives you a string S consisting of characters 'R' and 'K' only. Now you are allowed to do exactly one move that is you have to choose two indices i and j (1<=i<=j<=|S| where |S| is string length ) and flip all the characters at position X where i<=X<=j. Flipping the character means :  if S[X]='R' :  //If character at position X is 'R' then change it to 'K'       S[X]='K'  else :          //else if character at position X is 'K' then change it to 'R'       S[X]='R' Now your goal is that after exactly one move you have to obtain the maximum number of R's as RK loves this character very much. So help RK with maximum R's. Input : The first line contains the number of test cases T. Each test case contains a string S consisting of characters 'R' and 'K' only. Output : For each test case print the maximal number of R's that can be obtained after exactly one move. Constraints: 1<=T<=10 1<=|S| <=10^6  (length of string) Sample Input: 2 RKKRK RKKR Sample Output: 4 4 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Lucky has an array of N elements. The array consists of [1, 2, ……., N] (1 and N are inclusive). She decided to find the value by Xoring the contiguous sub arrays, follow by Xoring the values in the sub array. So help her to obtain the results.     Input Input description. Tips:  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Next T lines contains an integer N.      Output  For each test case, print the required answer in a single line.     Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 1000 1 ≤ N ≤ 10^6     Example Input: 1 5  Output: 7    Explanation Example case:  Elements in the array are [1, 2, 3, 4, and 5]. The result is 1⊕2⊕3⊕4⊕5⊕(1⊕2) ⊕(2⊕3) ⊕(3⊕4) ⊕(4⊕5) ⊕(1⊕2⊕3) ⊕(2⊕3⊕4) ⊕(3⊕4⊕5) ⊕(1⊕2⊕3⊕4) ⊕(2⊕3⊕4⊕5) ⊕(1⊕2⊕3⊕4⊕5) = 7 
cout<<temp+g<<endl holds holds holds holds _R _R _R _R lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
               "Nine is considered a good number in Chinese culture because it sounds the same as the word "long-lasting". Hence many             people want their car registration numbers to sum up to 9 on adding the digits recursively.      A car registration number can consist of 1,2,3 or 4 digits. Examples of some good car numbers are 63, 018, 9099, etc. whereas 12,129 are not            good.    Why is 9099 good?   9+0+9+9 = 27   2+7 = 9   Similarly it is not difficult to see why 63, 018, 6669, 9999… are good."           Given a string of digits, print how many subsequences of the string result in good car registration numbers.   Note:           The zeros at the starting of the number are to be accounted for, i.e. 018 and 18 are different numbers.   Input           First line of the input contains T (T <= 200) denoting the number of test cases. T lines follow each containing a non-empty single         string S. S contains only digits i.e. from [0-9]. Length of S <= 10000.   Output           For each case print how many subsequences of the string result in good car registration numbers. As the answer can be quite large print it modulo 1000000007.   Example   Input   2 10292 0189    Output   2 6  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> #include<cassert> 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Shubh loves death metal,he has an opportunity to get selected as lead singer in metallica,but he has to solve a question to qualify for the auditions.There is a list of N songs of metallica from song 1 to N, he has to the identify the year of each song strictly in the order as given in the problem set (1 to N).Question i(1<=i<=N) contains pi options, exactly one of them is correct.  The selection of every option takes 1 second. The aim is to answer all the N problems correctly. If he selects a wrong option for any problem then all the selected answers become unselected and test starts from the very beginning(from 1st question again).  He is too sharp, but his luck is not favoring him today. One good thing is that he remembers everything. The order of answers for each problem and the order of problems remain unchanged, as well as the problem and answers themselves.  How much time (in seconds) will he take to perform in worst case?     Input The first line contains a positive integer n. It is the number of questions in the test. The second line contains space-separated n positive integers pi, the number of answer variants to question i.   Output Print a single numeric value — the minimal time (in seconds) needed to pass the test it the worst-case scenario.  Constraints  1 ≤ N ≤ 1000 1 ≤ pi ≤ 10^9     Example Input: 3 1 2 3  Output: 11   
holds holds holds holds holds holds holds holds holds tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Given two ints A and B, find value of function G(A,B) which is defined as Sum(F(x)) where A<=x<=B.  F(x) is defined as the number of ways to reach xth staircase from ground given you take either 1 or 2 consecutive steps.    Input First line consists of t, the number of test cases.  t lines follow. Each test case consist of 2 integers A and B..  Output For each case, output the value of G(A,B) mod 10^9 + 7.    Constraints  t =  10000 1 <= A <= B <= 1000000000(10^9)     Example Input: 10000 1 1 2 3 . .  Output: 1 5 . .    Explanation G(1,1)=F(1)=1 G(2,3)=F(2)+F(3)=2+3=5 F(3)=Number of ways to reach staircase 3. Ways to reach staircase 3 are [1,1,1],[1,2],[2,1]. 
+0] +0] holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  An intergalactic tournament has been scheduled on Earth. So dexter have got an assignment to prepare landing sites for the guest’s spaceships. He have prepared n landing sites and the cost for landing on ith landing ai (1<=i<=n). As expected each guest will land on the site with minimum cost. But if guest spaceships arrives and there is no landing site available the they will go back, which is not good. So Dexter will have to pay a fine of f rupees. The number of guests visiting the tournament will be m. Your task is to calculate the total profit that Dexter will get in this tournament. No two spaceship can land on same site. You can assume that all guest come at the same time and all the landing site is available before any guest come.    Input First line contains t, the number of test cases. For each test case , first line contain n, number of landing sites and f, the fine. Second line contain integer n integers price of landing sites.Third line contain m, number of Spaceships.    Output t lines containing solution to the respective test case..    Constraints  1 ≤ t ≤ 10 1 ≤ n ≤ 1000 1 ≤ f,m,ai ≤ 10000000(10^7)     Example Input: 2 3 1 1 2 3 3 1 3 1 10  Output: 6 -26      
interval interval interval c[j%0] c[j%0] c[j%0] tw[j] tw[j] cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  This question is extremely easy. You just need to find the number of magical strings.  A string is called magical if it satisfies the following conditions. 1) Length of the string must be exactly N. 2) Each character of the string must be a lower case latin letter i.e. in ['a' - 'z']. 2) For each pair (L,R) in input, substring [L,R] of this string must be a palindrome.  Input First line contains T, the number of test cases. For each test case, first line contains two integers, N - length of string and M - number of pairs [L,R]. Next M lines, each contains two integers [L,R]. Note : L and R are 1 based indexing of string.  Output For each test case, print the number of magical strings. As the answer can be large, print it modulus 1000000007 (1e9 + 7).  Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 2000 0 ≤ M ≤ 200000 1 ≤ L ≤ R ≤ N     Sample Input: 1 3 2 1 2 2 3  Output: 26 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description. A array of size n is given ,you have to print major element if it exists otherwise print 'NO MAJOR' without quotes  Major Element: A major element in an array A[] of size n is an element that appears more than n/2 times  Input Input description.  First line of input contains an integer T denoting number of test cases First line of each test case contains an integer n denoting number of elements in array next line contains n space separated integers of array     Output Output description. for each test case,output an integer denoting major element of given array ifn exists otherwise print NO MAJOR (in capitals)  Constraints  1 ≤ T,n ≤ 10^5 1 ≤ array element ≤ 10^9     Example Input: 2 7 1 2 2 1 1 3 1 9 18 23 18 18 18 2 11 18 18 Output: 1 18 
cout<<temp+g<<endl holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Okay. Before we begin, a hint : This one's taken from somewhere. Word to word. Google comes to mind, doesn't it? Here goes: For the heck of it, we define a new sequence as the infinite sequence of all integers, in ascending order, that can represented as any positive integer power of 5 (i.e 5k where k is a positive integer) or as a sum of distinct positive integer powers of 5 (i.e 5a1 + 5a2 + 5a3 + ... , where a1, a2, a3, ... are distinct positive integers). All the numbers in the lucky sequence are called lucky numbers. The first few numbers are 5, 25, 30, 125, 130, 150, ... Given n your task is to find the nth number in the sequence.    Input  First line of input contains an integer t, t ≤ 200, representing the number of test- cases. Then t lines follow each containing one integer n, 1 ≤ n ≤ 8000.    Output  For each test case output the "Case#x" followed by nth number on a separate line. Answers will fit in a 32-bit signed integer.     Sample  Input 4 1 2 3 9  Output 5 25 30 630 
cr-0 cr-0 holds holds holds holds //cout<<v[i]<< tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Babloo wanted to make Babli a friendship band. He wanted it to read 'str' on her wrist. Once he'd done that and Babli had put it on, he realized that apart from str, a lot of other sentences could be read by changing the first word of the sequence. For example “Babli is the best: Babloo” could also be read “the best: BablooBabli“ on her wrist. So, we give you n different str strings followed by a weird sequence like the one in the example, all you have to do is tell us if it can be read off the string or not.    Input  First line of input contains an integer t, t ≤ 200, representing the number of test- cases. Then 2t lines follow each containing a string followed by the substring to be searched in the next line.    Output  For each test case output the nth answer (“YES” or “NO”) on a separate line    Limits Maximum length of the string will be 100 characters.    Sample  Input 2 Coding rocks the world worldCoding rocks Get ready to blow your brains off!  blow your brains off Techtatva.in in Techtatva  Output YES YES NO 
vis[node] interval interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD byte[] byte[] byte[] byte[] check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming elem elem elem elem elem eg eg eg eg eg eg eg s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== byte[] byte[] byte[] byte[] byte[] byte[] Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming eg eg eg eg eg eg eg eg eg eg eg s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== byte[] byte[] byte[] byte[] byte[] byte[] Programming Programming Programming
 Okay, now we're talking class 6 geometry. Remember that, don't you? Lines and points and aha! Triangles? We give you 3 points and you tell us what sort of a triangle it forms, if it forms a triangle that is. What? Yes! That's all!    Input  The first line of input gives the number of cases, N. N test cases follow. Each case is a line formatted as: x1 y1 x2 y2 x3 y3    Output  For each test case, output one line containing "Case #x: " followed by one of these strings (minus the bullet): - not a triangle - isosceles acute triangle - isosceles obtuse triangle - isosceles right triangle - scalene acute triangle - scalene obtuse triangle - scalene right triangle    Limits 1 ≤ N ≤ 100, x1, y1, x2, y2, x3, y3 will be integers. -1000 ≤ x1, y1, x2, y2, x3, y3 ≤ 1000    Sample  Input 8 0 0 0 4 1 2 1 1 1 4 3 2 2 2 2 4 4 3 3 3 3 4 5 3 4 4 4 5 5 6 5 5 5 6 6 5 6 6 6 7 6 8 7 7 7 7 7 7  Output Case #1: isosceles obtuse triangle Case #2: scalene acute triangle Case #3: isosceles acute triangle Case #4: scalene right triangle Case #5: scalene obtuse triangle Case #6: isosceles right triangle Case #7: not a triangle Case #8: not a triangle 
pra pra task task task second]+M0[V[i] second]+M0[V[i] to_base0 to_base0 to_base0 to_base0 to_base0 to_base0 to_base0 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Tanu was going through exam marks of his class when he observed that some marks values occur frequently, whereas some of them do not occur at all. He suspects that teachers might be giving grace marks to uplift grade of those near the grade-cutoff, or maybe skipping partial marking. There are 5 subjects in the school, labelled A to E. Each student gets marks out of 100 (i.e., integer marks in the inclusive range [0,100]). A mark is said to be over-given for a subject if that mark is obtained by strictly more than 10% of the class in that subject. For each of the subjects (A to E), list the marks that are over-given in that subject.  Input First line contains N, the number of marks in the list. Then N lines follow.Each of the next N lines contains one character from the set {A,B,C,D,E} followed by a space, then a number in inclusive range[0,100].  Output Print 5 lines, one for each subject A,B,C,D, and E respectively. In each line print in ascending order the marks that are over-given for that subject. If for a subject none of the marks are over-given then print "Nothing Unusual" (without quotes) in that line.  Constraints 1≤N≤100000  Example Input: 6 A 100 B 100 A 100 C 50 D 49 D 51  Output: 100 100 50 49 51 Nothing Unusual   Explanation Note that no student gave exam E, so nothing unusual in this case. 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl holds holds seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Mason is yet again in danger.  Consider an N digit number A. let the new number formed by reversing the digits of A be called B .  Mason has to tell that how many N digit numbers A exist such that A + B = 10^N - 1 ?  Note: A should not have any leading zeroes !  Quick. Help. over and out.   Input  	First line will contain the number of test cases T , then T lines follow each containing an integer N   Output  For each test case , Print how many N digit numbers exist that satisfy the above equation ,in a new line!   Constraints  1 <= T <= 100 0 <= N <= 10^5   Example Input: 2 5 2 Output: 0 9  Explanation  When N = 2, one possible number is 18.  A = 18 , Therefore B = 81 Since A + B = 99 .... 	(10^2 - 1 == 99) That is, 18+81 = 99, Therefore it is one possible number .. Can you find the other 8 ?    
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given an array of length n and an integer k, find the maximum for each and every contiguous subarray of size k.  Input The length of the array. The next line contains the elements of the array separated by space The next line contains the k .  Output Print the n-k+1 maximum values in an array separated by space.  Constraints  n ≤ 1000000 k ≤ 100000 0 ≤ a[i]  ≤ 100000   Example Input: 9 1 2 3 1 4 5 2 3 6 3  Output: 3 3 4 5 5 5 6   
ss[n]<=00
Sherlock has fallen in love with Irene Addler(The Woman), now he wants to impress her. Irene wants to see how clever he actually is. She asks Moriarty to give her some problem. Moriarty designs the problems as follows: Given two number N and M as input find numbers such as: 1. The number should contain all the digits from 0 to N-1 2. The length of number can be atmost M i.e. it can have atmost M digits. 3. The difference between each adjacent digits should be one. calculate the number of all such numbers. Sherlock had no idea to solve this problem help him and prove you are better than him!! For e.g. 1. if N=7 and M=8, you are supposed to use all the 0 to 6 digits and the length of the number can be atmost 8 digits. So, possible solutions are 6543210, 65432101, 56543210, 10123456. So, ans is 4. Note: The numbers starting with 0 will be treated as if 0 have been removed from starting, for the above solution 0123456 will be considered as 123456(the length is 6 not 7) only and as 0 is not appearing in the number, it is not a valid solution   Input  First line T : no. of test cases For each test case:  N M (space separated)   Output For each test case no. of such numbers that can be formed using all 0-(N-1) digits and which have atmost M digits in single line. Output should be in Modulo 1000000007   Constraints 0 ≤ t ≤ 100 2 ≤ N ≤ 10 0 ≤ M ≤ 500  Example Input: 4 2 4 5 5 3 6 7 14  Output: 3 1 18 1639  Explaination Test case 1: N=2 means 0 and 1 both has to be used only and M = 4 means at most 4 times these digits can be used. So, possible solutions are 10,101,1010 (3) //01 is not such a number Test Case 2:  N=5 (0-4), M=5 43210 is only possible solution by using all the digit.  
vis[node] vis[node] vis[node] fenwick index/i index/i index/i index/i index/i index/i index/i x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given an array A of length N, your task is to find the element which repeats in A maximum number of times as well as the corresponding count. In case of ties, choose the smaller element first.   Input First line of input contains an integer T, denoting the number of test cases. Then follows description of T cases. Each case begins with a single integer N, the length of A. Then follow N space separated integers in next line.  Assume that 1 <= T <= 100, 1 <= N <= 100 and for all i in [1..N] : 1 <= A[i] <= 10000   Output For each test case, output two space separated integers V & C. V is the value which occurs maximum number of times and C is its count.   Example  Input: 2 5 1 2 3 2 5 6 1 2 2 1 1 2  Output: 2 2 1 3  Description: In first case 2 occurs twice whereas all other elements occur only once. In second case, both 1 and 2 occur 3 times but 1 is smaller than 2. 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj xx<=r-0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 que que que que que que que que holds holds holds holds holds holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< name name name name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Chef has a set consisting of N integers. Chef calls a subset of this set to be good if the subset has two or more elements. He denotes all the good subsets as S1, S2, S3, ... , S2^N-N-1. Now he represents the GCD of the elements of each good subset Si as Gi. Chef wants to find the maximum Gi.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows." The first line of each test case contains a single integer N denoting the number of elements in the set. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the set.    Output  For each test case, output the maximum Gi    Constraints  1 ≤ T ≤ 10 2 ≤ N ≤ 100000 1 ≤ Ai ≤ 500000    Example Input: 2 5 1 2 3 4 5 6 2 9 99 12 36 48  Output: 2 12   Explanation Example case 1. Maximum gcd is 2 for the subset {2, 4} Example case 2. Maximum gcd is 12 for the subset {12, 36, 48} 
yellow acc+=a[i] _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& vb& name name name name name name name name name name name _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f maxVals[q maxVals[q practise practise practise practise maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q vb& vb& maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q
Given is an undirected weighted graph with n vertices and m edges. There may be self loops and/or multiple edges in the graph.  A u-v walk is defined as a sequence of vertices starting at u and ending at v, where consecutive vertices in the sequence are adjacent vertices in the graph i.e. consecutive vertices are connected by some edge.   An arbitary walk of length k+1 is, V1,E1,V2,E2,V3,...,Vk,Ek,V(k+1). where Vi and V(i+1) are connected by edge Ei with weigth Ci.   In simpler informal words, walk is a path in a graph with no restriction on the number of times you can visit a vertex or edge.  For such walk we define magic to be, magic(walk) = (C1 & C2) ^ (C2 & C3) ^ ... ^ (C(k-1) & C(k)) if k ≥ 2 magic(walk) = 0 if k < 2  Note: Here Ci (1 <= i <= k) are the corresponding edge weights.   We love magic, don't we? Hence we always want to maximize it. But for a given graph, there are infinite different walks possible. So, you need to think smart and write a program which prints the maximum magic which can be achieved for some walk in the given graph.   Here, ' & ' is Binary AND Operator, ' ^ ' is Binary XOR Operator.   Input First line contains two integers n and m. Next m lines, each contain three space separated integers u,v and c denoting an undirected edge in graph between vertices u and v with weight c.  Output Print the maximum magic that can be achieved for some walk in the graph.  Constraints  1 <= n <= 100 1 <= m <= 150 0 <= c <= 100 1 <= u,v <= n   Sample Input 1: 2 1 1 2 5 Sample Output 1: 5  Explanation: Let the walk be 1->2->1 For this walk, magic = (5 & 5) = 5  Sample Input 2: 4 4 1 2 1 2 4 3 3 1 4 4 3 2  Sample Output 2: 7  Explanation: Number the 4 vertices in input as 1,2,3,4. Number the 4 edges in input as a,b,c,d. Let weight of any edge x be |x|. For walk = {1,c,3,c,1,a,2,b,4,d,3} magic = (|c| & |c|) ^ (|c| & |a|) ^ (|a| ^ |b|) ^ (|b| ^ |d|)   It can be proven that 7 is maximum value magic can take for this input. 
macros ++n ++n ++n ++n ++n ++n %d%lld %d%lld %d%lld ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector max=count max=count max=count max=count max=count max=count name name name name name name name name name name name _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Ramanujan is a Mathematician. One day when he was looking for a book in library, he came across a book named Formule Di Matematica. He found it interesting and started reading it. While going through the book, he found a function D which was as following: D(< a1,a2,a3,..,an >) = |a1-a2| + |a2-a3| + ... +|an-1-an| where < a1,a2,a3,...,an > is a sequence of n distinct integers.Ramanujan quickly understood that the value of D would depend upon the order of integers, hence he was then interested in finding out what could possibly be the maximum value of D, given a set of Integers S. It's given that, S = set of all possible permutation you can make with n different integers and the range of integers would be [1...n]. Now help Ramanujan to find the maximum value of D which can be obtained, if he tries each and every permutation from the set S as an argument for D.  Input:  There will be T ≤ 10^5 test cases. For each case there is a single line. First line contains an integer 1 ≤ n ≤ 10^9 which specifies the number of distinct integers. The integers are in the range [1..n].   Output: For each test case you have to output the required answer in a single line.The output will fit in 64-bit signed integer.   Example:  Input: 2 1 2  Output: 0 1 
lp //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice and Bob are a paranoic couple who wants to hold a remote conversation using a chat client. However, they do not like the existent ones (e.g. gtalk, MSN, Facebook chat, etc.), as they think that there might be hidden backdoors in them that allows spies to read their conversations about their never ending love.  Last week, they decided to build their unique chat client, called ABmod, which will encode their messages using a symmetric approach. First, Alice and Bob will choose a public prime integer P and exchange a private key composed of two integers A and B, here 0 ≤ A,B < P. To encode a message X they will apply the following function: f(X) = (A x X + B) mod P  where C mod M is the remainder of dividing C between M. This operator satisfy the following properties (among others not mentioned here):  (A + B) mod M = ((A mod M) + (B mod M)) mod M (A x B) mod M = ((A mod M) x (B mod M)) mod M   Eve is in a crush for Bob and wants to spy and interfere his conversation with Alice. To do this, Eve managed to intercept N messages in their plain and encoded forms. Now, she wants to deduce the private key (A,B) to send fake encoded messages to Alice pretending she is Bob. However, she has no idea of how to do it, so she is asking for your help in this task.  Input  The first line contains an integer T, which specifies the number of test cases. Then, T test case descriptions will follow.  Each test case will start with a line with two positive integers, N and P, whose meanings were described previously. The next N lines will contain each 2 integers Xi and Yi, which represents an intercepted message whose plain form is Xi and encoded form is Yi.  Output  For each input case you must print the string "Case #i: ", where i is the test case number, starting from 1, followed by the number A and B that compose the private key. If there multiple valid keys, print "MULTIPLE SOLUTIONS" instead. If there are no valid keys, print "NO SOLUTIONS" instead.  Example  Input 4 2 5 3 0 1 4 1 13 0 12 2 2 0 0 0 1 4 97 0 13 1 46 2 79 3 15  Output Case #1: 3 1 Case #2: MULTIPLE SOLUTIONS Case #3: NO SOLUTIONS Case #4: 33 13   Constraints   T will be between 1 and 1000, inclusive. P will be a prime number. P will be between 2 and 10^6, inclusive. N will be between 1 and 100, inclusive. Xi and Yi will be between 0 and P-1, inclusive, for all i between 1 and N, inclusive.  
//cout<<v[i]<< steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Harish has decided to go to Arya's hotel this morning. We all know he is crazy for masala dosas. And as usual he is always hungry. He decided to order all the masala dosas at once. But then he realised that he did not have enough money to buy all of them. So he decided to share the amount with his friend Ozil. But both of them are fans of even numbers. Both of them says they want to eat even number of dosas. Ozil is ready to put the share if and only if , he is sure that he can get even number of dosas. So given N number of dosas can you please help Harish to decide, if he will be able to get all the dosas at once from the hotel.  Input The first line of input contains an integer T which denotes the number of test files. Next T lines contains an integer N where N is the total number of dosas.  Output Print "YES" if both can get even number of dosas. If it is not possible print "NO".  Constraints  1 ≤ T ≤ 10^6 1 ≤ N ≤ 10^18   Example Input: 2 16 27 Output: YES NO 
//cout<<v[i]<< //cout<<v[i]<< pra pra pra pra pra pra pra pra pra pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   Problem description One of the Engineer friends of John, Mr. Dev tried to develop an encryption algorithm which can send strings of words wirelessly between two devices connected through Wi-Fi. On completing the design of algorithm, John decides to test his algorithm on real devices. To test his algorithm on device, Dev sends some strings from one device to another. On matching the strings that were send and receive he found out some problems as mentioned below:- 1.In a word somehow some alphabets are changed from lowercase to uppercase and from uppercase to lowercase. 2. Before, after or in between the alphabets of a word, sometimes one or more number of consonants, vowels or numbers (1 to 9) were added. 3. Some vowels or consonants are changed to any other alphabet. But no two consecutive vowels or consonants are changed in a word. Now Dev wants to find out the efficiency of his algorithm. But before that he wanted to know the minimum number of edits needed to transform the received string into sent string. Dev decides to ignore 1st problem in calculating the number of edits. An edit is defined as either a deletion or substitution of a single alphabet.    Input First line of input will be s, no of test strings. For each test string, the next two lines contains two strings, first  string will be original string that was sent by the sender device(i.e. the correct string) and the second string is the received string that was received by the receiver device(i.e the test strings in which you need to find the minimum number of edits w.r.t. the first string).   Output For each test string output a single positive number that will be the number of edits calculated in that string.  Constraints  0 ≤ s ≤ 100 Length of any String <= 500     Example Input: 2 He is a good programmer hp is a pool Probgrammer Program prpgreamp  Output: 4 3    Explanation For first string received, 4 edits need to be done (substituting ‘p’ to ‘e’ in ‘hp’, substituting ‘p’ to ‘g’ in ‘pool’, substituting ‘l’ to ‘d’ in ‘pool’ and removing extra ‘b’ in ‘probgrammer’) to transform the received string into sent string. For second string received, 3 edits need to be done (removing ‘r’, substituting ‘p’ to ‘o’, removing ‘e’ and removing ‘p’ in ‘prpgreamp’) to transform the received string into sent string.  
vis[node] {doThis {doThis second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description  Delta is the Coding Club of NIT Trichy. Recently they planned to go for a trip.  Two girls Aarti and Bhavya got stuck while packing. Aarti had a bag of weight holding capacity w1 and bhavya had a bag of weight holding capacity of w2 .They had n1 objects with weight 1 unit each and n2 objects with weight 2 units each. Your task is simple. Help them find the maximum weight of objects that can fit in these 2 bags.   Input Input description.   The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains four integers w1, w2, n1, n2   Output Output description.   For each test case, output a single line containing the answer.   Constraints  1 ≤ T ≤ 10^5 1 ≤ w1, w2, n1, n2 ≤ 10^9   Example Input: 2 2 2 1 1 3 2 3 2  Output: 3 5  
name name {doThis x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem description  There are often situation at the college when people have to prove themselves to the teacher infront of the whole class. Once a boy named pankaj was the center of attack. The teacher gave him a string S consisting of alphabets ( a-z ) and dots ( . ) and asked him to enumerate the strings by filling the dots with alphabets from a-z, such that   abs(S[i] - S[i - 1]) ≤ d for i > 0 and for some given d   a   ≤ S[i]  ≤ z for i = 0  Attendance for 2 classes are on stake for him. Help him save his attendance by answering the question.   As the answer might be large, output the answer modulus 10^9 + 7.   Input Input description  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains the string S followed by second line containing the number d      Output Output description  For each test case, output a single line containing the answer.     Constraints  1 ≤ T ≤ 10 1 ≤ length(s) ≤ 10^5     Example Input 2 a. 1 .. 2  Output 2 124    Explanation Example case 1. The only way to fill the second place is with 'a' or 'b' 
cout<<temp+g<<endl Bhardwaj a>c _R holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem Description A DVD Store has just put up "Interstellar" DVD/Blu-Ray discs on their shelf for sale. N people are waiting outside the store in a queue to grab their copy.They are given tickets which has a number x printed on it. The number denotes the Serial Number of the DVD they should take and proceed to the checkout. The number printed on the tickets are in no particular order. The store has the checkout section at the beginning of the shelf.  There are N DVD's on the shelf at the store.Initially the serial number of the DVD's are in the order from 1 to N.The DVD with serial number x is at a distance of x units from the checkout section of the DVD store.When the store opens first person enters, moves to the DVD which has the serial number equal to his/her ticket number, takes it from the shelf and moves to the checkout section.After taking the DVD, all the DVD's which has serial numbers greater than the currently taken DVD and still present in the shelf, move 1 unit up the shelf to close the gap created by the removed DVD.All N people claim their DVD's from the store. Your task is to print the distance traveled by all N people to get his/her DVD copy. (Do not include the return distance to the checkout section).  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains a single integer N denoting the number of number of DVD's and the number of people waiting in the queue. The second line contains N space-separated integers A1, A2, ..., AN denoting the number printed on the tickets of the people waiting outside.     Output  For each test case, output N space separated integers, where each number denotes the distance each person has to travel to get his/her DVD(Do not include the return distance to checkout).     Constraints  1 ≤ T ≤ 5 1 ≤ N ≤ 100000 1 ≤ Ai ≤ N    Example Input: 1 5 2 3 1 4 5  Output: 2 2 1 1 1   
cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   Little Pratya loves collecting candies and she also likes playing games :). Today Pratya is travelling in bus and she has a bag full of N candies. She looks outside the window and notices milestones with numbers written on them. She decides to play a game. She wants to select some initial non-zero number of candies from the bag and call it her collection of candies. When she sees a milestone on the way, she will add or remove some candies from her collection as following.  Let the previous milestone number be a1 and the current milestone number be a2.         a2 > a1 :   Pratya adds ( a2 - a1 ) candies to her collection (thus, her bag of candies loses them). If the bag doesn't contain  at least ( a2 - a1 ) candies, she starts crying.  a2 < a1 :  Pratya removes ( a1 - a2 ) candies from her collection (thus, her bag of candies gains them). If her collection doesn't contain  more than ( a1 - a2 ) candies, she starts crying.  a1 = a2 :  Pratya is bored to see the same number again and so she eats one of the candies from her collection.  Moreover, Pratya always wants her candy collection to have at least one candy, otherwise she starts crying. Given the numbers written on all the milestones in order, find the minimum number of candies Pratya should select in the beginning so that she doesn't have to cry at all.  If it is not possible , print -1. Note that no change to the collection happens when she sees the first milestone.  Input The first line contain the number of test cases T. Each test case has two lines. The first line specifies N and M. N is the number of candies in the bag and M is the total number of milestones. Second line contains M integers, the numbers written on the milestones, in the order Pratya sees them. ^ is used for power. T <= 150 1 <= N <= 10^7 2 <= M <= 10^4 Each milestone number will be between [-10^6,10^6].  Output For each test case output the minimum number of candies that should be selected from the bag or -1 if its not possible  Example  Input: 3 10 5 1 5 1 -1 -2 2 5 1 5 1 -1 -2 100 3 1 2 3  Output: 4 -1 1   * There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. 
0LL<<digits[i] holds holds holds holds seen lft[i]=w lft[i]=w lft[i]=w A[0] A[0] A[0] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem  			Infinite army of minions are racing on an infinite 2-D plane.  			Here's how they race:  			Each minion chooses exactly one x coordinate and races along it in positive y direction, 			starting from (x, 0). There exists exactly one minion for each x coordinate on that plane and hence there are infinite minions!  			There are N horizontal barriers lying on this plane. The ith barrier is defined by (xi, yi) and di, which means that the barrier is blocking all minions which want to pass through points lying on line segment connecting (xi, yi) and (xi + di, yi). Once a minion encounters a barrier, it stops moving.  			Given all the barriers, your task is to find the total number of minions that will be blocked at some point in their race.  Input  			The first line contains an integer N which denotes the number of barriers. Next N lines follow, each contains 3 space separated integers, "xi yi di" as explained in problem statement above.  Note: The barriers in the input may overlap.   Output  			Output a single integer, the number of MINIONS that will be blocked at some point in their race.   Constraints   					1 ≤ N ≤ 10^5     					1 ≤ xi, yi, di ≤ 10^9    Sample Input  2 1 1 4 7 3 5   Sample Output 11  Explanation  			Here 5 Minions will be blocked on points (1, 1), (2, 1) , (3, 1), (4, 1) and (5, 1). 			6 Minions will be blocked on (7, 3), (8, 3), (9, 3), (10, 3), (11, 3), (12, 3). 			In total, 11 minions are blocked in their race.   p { text-align:justify } 
assigned assigned assigned +0] holds holds holds byte[] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD Programming Programming Programming Programming Programming Programming Programming lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n eg maxVals[q maxVals[q maxVals[q maxVals[q name name name name name name x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n eg s[i-0][j]== s[i-0][j]== s[i-0][j]== s[i-0][j]== maxVals[q x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n eg eg s[i-0][j]== s[i-0][j]== s[i-0][j]== maxVals[q name x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f _f _f
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 Wormtongue's Mind  Wormtongue looked from face to face. In his eyes was the hunted look of a beast seeking some gap in the ring of his enemies.     'Nay, Eomer, you do not fully understand the mind of Master Wormtongue,' said Gandalf, turning his piercing glance upon him. 'He is bold and cunning.     Even now he plays a game with peril and wins a throw.' - Gandalf, trying to figure out Wormtongue's mind.  In fact, Wormtongue's mind is a complicated system of evaluating various variables and parameters. In essence, each parameter is a uniform random floating point variable between 0 and 1 (inclusive). Further, his mind works on calculating best and worst-case values, which are equivalent to min/max of 2 expressions.  For example, right now Wormtongue is calculating : 'Chances of escaping' = max('Theoden letting me go', 'Me killing everyone') 'Theoden letting me go' = max('Theoden is forgiving by nature', 'Gandalf advises him to let me go'). 'Me killing everyone' = min('Me killing Gandalf', 'Me killing Theoden').  So, you are given an expression consisting of independent uniform [0, 1] random variables, on which you have an expression consisting of "min", and "max" alone. Help Gandalf figure out Wormtongue's mind by finding the expected value of this expression.  Input (STDIN):  The first line contains T, the number of test cases. Each test case consists of a single line describing the expression. The characters of the string are derived from the set {'M','m','x'}, where 'M' stands for max, 'm' stands for min, and 'x' is a random variable Formally, in the expression tree, each node which asks for max is labeled as 'M', each node which asks for min is labelled 'm', and all the leaves are labeled 'x'. The description of the expression is preorder traversal of this tree. For example, Mxmxx describes the expression max(x1, min(x2, x3)).  Output (STDOUT):  For each test case, output one line which contains the expected value of the expression. The results should be accurate within an error range of 10^-6.  Constraints: 1 <= T <= 1,000 1 <= input string length <= 100  Sample Input:   4 x mxx Mxx MmxxMxx  Sample Output:   0.500000 0.333333 0.666667 0.700000  Notes/Explanation of Sample Input:  For the first test case, it asks for the mean of a random number between 0 and 1, which is 0.5.  Note: It is recommended to use long long and long double data types in calculation to avoid precision errors. 
holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< c>a&&c<b c>a&&c<b c>a&&c<b c>a&&c<b #include<cassert> #include<cassert> #include<cassert> #include<cassert> name name name lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Narcissist likes to see his image in the mirror very much. So, you are given the image of the narcissist in a matrix of '.' and '#' and you have to show how the narcissist image looks in a mirror.  Input The first line of the input would contain the number of testcases t(1 <= t <= 10). First line of each test case contains n and m ( 1 <= n,m <= 1000). It is followed by n lines each containing m characters describing the image.  Output for each test case , you have to output how the input image would look like in the mirror  Example Input:    1 3 3.#..#..#.  Output:  .#..#..#. Input: 15 5######...#######....#.... Output ######...######....#....# 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj Bhardwaj Bhardwaj second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] Point Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Shweta loved marking numbers. One day she was idle and decided to mark numbers in the following way  She decided to pick up all the numbers starting from 2 till 10^9 and for each number, she marked all its mulitples, including itself. In the process, if she arrived at a number already marked, she would mark it again.    She then decided to make things more interesting. She threw away all the numbers that were marked exactly twice. Given queries of a range of numbers, your task is to tell the number of missing numbers in that range (inclusive).  Input The first line of the input contains an integer Q denoting the number of queries. The description of Q queries follows. Each query contains two integers L and R denoting the range of query.    Output For each query Q print in a new line the inclusive count of missing numbers in that range.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ Q ≤ 10^6 1 ≤ L ≤ R ≤ 10^9     Example Input: 1 100 200  Output: 2    Explanation In the sample test case there are two missing numbers in the range [100 , 200]. 
a>c //cout<<v[i]<< pra L>R second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Rahul and Neha are playing a simple game. In each turn, they give a list of first N natural numbers to each other in a random order. The challenge is that there is one number missing from the list, and the other person is required to find it. The person who solves the challenge given to him/her first wins that round. Rahul has become good with the game and has been able to win most of them. Neha is really frustrated and so she asks for your help to find the missing number. Write a program which will do the same so that Neha can outsmart Rahul.  INPUT The first line of the input contains a single integer T denoting the number of test cases. The description for T test cases follows. Each test case starts with a single line consisting of a single integer N denoting the list consists of first N natural numbers out of which one of them is missing. Then the next line consists of N-1 space separated integers in a random order representing the test case.  OUTPUT For each test case, output on a single line the missing number in the list.  CONSTRAINTS 1<=T<=10^3 2<=N<=10^3  EXAMPLE   Input   2 5 3 5 2 1 7 4 2 7 5 3 6  Output   4   1    Problem Set By: Ayush Jaggi, 2nd Year 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< _R _R c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Chef is array maniac.He use to play with arrays.Chef's friend given him an array of size n-1 integers and these integers are in the range of 1 to n. There are no duplicates in array. One of the integers is missing in the array.Now chef has to write efficient code to find the missing integer.Please help him to find the missing number.One more thing, he has to do it in minimum time.  Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of              T test cases follows. The first line of each test case contains a single integer n denoting the size of array  The second line contains n space-separated integers A1, A2, ..., AN denoting the elements of array.   Output Output description.  For each test case, output a single line containing the missing term.   Constraints  1 ≤ T ≤ 10^5 1 ≤ n ≤ 10^5   Example Input: 2 9 8 9 3 2 4 5 7 6 5 3 1 2 4  Output: 1 5  
name name name lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Mr. and Mrs. Ant are very hungry. So, they want to collect food as much as they can. They can search for foods simultaneously. To do so, they start from their house and collect all foods together and meet in some place (not necessarily their house). Finally, they eat together. The world of Mr. and Mrs. Ant is a two dimensional grid. Each cell is either the home, or free, or blocked, or contains a food. Two cells are adjacent if they share an edge. In each second, they can move from one cell to another cell simultaneously. One can decide to not to move in some step, while other may move. One cell can be visited many times. Both of them can move into the same cell also. In this problem, the grid is given by an R x C matrix represented by following characters:   #mmant-table td {    border: 1px solid #000;    padding:3px; }   Character Meaning Remarks   H Home of Mr. and Mrs. Ant Occurs exactly once   F A food item Occurs at least once, at most 8 times   . (dot) Free (passable) cell -   # (hash) Blocked Cell -    Given the grid information, give the minimum amount of time that must be needed for them to collect all the foods and then meet.  Input The first line of input will contain T (T <= 30) denoting the number of cases. Each case starts with two integers R and C (2 <= R, C <= 12). Then, R lines follow giving the grid.  Output For each case, print the case number, the minimum amount of time (in seconds) that must be needed for them to collect all the foods and meet. If it is impossible to collect all the food items, output -1 (negative one) instead.  Example  Input: 2 2 3 H#. .#F 2 6 F#F..# ..H#.F Output: Case 1: -1 Case 2: 8 
0LL<<digits[i] 0LL<<digits[i] Bhardwaj Bhardwaj Bhardwaj a[i]== a[i]== a[00] a[00] a[00] a[00] a[00] a[00] Array x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You have an array A of size N containing only positive numbers. You have to output the maximum possible value of A[i]%A[j] where 1<=i,j<=N.  Input The first line of each test case contains a single integer N denoting the size of the array. The next N lines contains integers A1, A2, ..., AN denoting the numbers    Output Output a single integer answering what is asked in the problem.    Example Input: 2 1 2  Output: 1    Explanation There will be four values, A[0]%A[0] = 0, A[0]%A[1]=1, A[1]%A[0]=0, A[1]%A[1]=0, and hence the output will be the maximum among them all, that is 1. 
cout<<temp+g<<endl a>c cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given an array A of N numbers and M queries of the form L R M and you need to output aL %M + aL+1 %M + .... + aR %M for each of these queries.  Input 1 st line contains no. of test cases T. For each test case 1st line contains an integer N Next line contains N integers representing the array A. 3rd line contains M the no. of queries Next M lines contain queries of the form L R MOD( find answer from L to R with modulo MOD)  Output For each query of each testcase print the answer in a new line.  Constraints  N <= 10000 For all queries, MOD <= 100000 M <= 10000 1 <= L <= R <= N T <= 20  A[i] <= 10^4     Example Input: 1 4 100 150 200 300 1 1 4 150 Output: 150    Explanation Example case 1. Answer for the query is 100 + 0 + 50+ 0 = 150 
*next Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Adam was a brilliant athlete and won loads of medals throughout his life. As luck would have it all his generations would have exactly K children each. In the final days of Adam's life, a thought struck to him to pass on his medals to his future generations. The condition that he put forward for his children was that they were to keep none of the medals with themselves and pass the entire fortune to their next generation before their death. The trend should continue in the similar manner. Another constraint put forward was that the medals were distributed equally among all the siblings and there should be no more medals left behind. The passing of the family fortune continues as long as such a division can be possible. Find out the maximum no. of generations N!(factorial N) medals can be passed on to.   Input First line will contain a single integer t , the number of testcase. Next t line will contain 2 integer N and K each separated by a space.   Output Ouput t lines each containing a single integer denoting the maximum no. of generation possible for corresponding test case   Constraints :  1 ≤ t ≤ 1000 1 ≤ N ≤ 10^7 2 ≤ K ≤ 10^7   Example  Input: 2 4 2 3 6  Output: 3 1  
c[j%0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Movie Festival   	This weekend Gopal is going for a movie festival and he wants to watch exactly 3 movies. Gopal should spend Rs. Ci to watch i th movie. Now he got only Rs. K and he wants to spend that optimally. Gopal want to know in how many ways he can select 3 movies such that they cost exactly Rs. K in total. Two ways are considered same if the same set of movies are chosen in different order.  Input   First line contains T, number of test cases.  First line each test case contains two space separated integers N and K, Total number of movies that will be screened in the  festival and amount of money that Gopal has. In next 2N lines, 2 * i - 1 th line contains name of the movie Si, and 2 * i  th line contains an integer Ci, money to be spent for watching i th movie.   Output For each test case output single line containing the solution as single integer. Note  Name of the movie contains only Upper-case and Lower-case English letter and spaces. You can consider that name of a movie will be unique.   Constrains  1 <= T <= 10 3 <= N <= 5*10^2 0 <= K <= 10^3 1 <= |Si| <= 50 0 <= Ci <= 100   Sample Input  1 3 90 Dhoom Three 30 Ra One 10 Nayak 50  Sample Output  1 
c[j%0] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice,the Nightingale of Musicland is going to represent her country in World Music Finals. The Rules for the World Music Finals are : 1. The Contestant will sing exactly 2 songs in the competition. 2. The original singers of both the songs selected by the contestant should be different. Alice has a large collection of N songs ( numbered from 1 to N ). However, She does not directly know the original singer of each song. Although, She knows M pairs of songs which was sung by the same singer. She wants to calculate the total number of ways of selecting 2 songs for the World Finals such that it does not violate the Rules of the competition. As Alice is not good at maths she asks you to help her. Note: * Alice knows enough pairs to identify the group of songs although she does not know the exact original singers of the songs. * If the songs 1,2,3,4 was sung by the same Original singer, then the pair (1,2),(2,3),(3,4) are sufficient to describe the same group without mentioning the groups (1,3),(2,4),(1,4) explicitly.   Input  The first line contains two space separated integers N and M.  Each of the following M lines contains a space seperated integer pair A B, where A and B are the songs sung by the same Original singer.   Output The total number of ways of selecting a pair of songs that satisfy the World Finals Rules.   Constraints  1 ≤ N ≤ 10^5  0 ≤ M ≤ 10^6  1 ≤ A,B ≤ N   Example  Input: 7 5 1 2 2 3 4 6 5 7 5 4  Output: 12  Explanation There will be only 2 groups: Group1 contains songs with number 1,2,3 Group2 contains songs with number 4,5,6,7 So,Total ways of selecting a pair is by choosing 1 from each group and it can be done in (3*4)=12 ways. 
x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f matchR[000] matchR[000] matchR[000] matchR[000] ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f _f _f _f _f _f _f _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise _f _f _f _f _f _f _f practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise practise
 Recommending systems are very popular now.Many commercial websites use it to recommend items to their users.Sometimes merging preferences is a difficult task because different users have different preferences. A user's preference is a linear order of items. For example there are 3 items, namely 1,2,3 and 3 users. The first user prefers item 1 to item 2 and prefers item 2 to item 3. So his/her preference is 1 2 3. The second user's preference is 2 1 3. And the third user's preference is 3 2 1. How can we merge the 3 preferences? If we merge them to get a preference P we can calculate the badness of it. It can be defined as the total number of pairs that Disobey in all the linear orders.  So the badness of 1 2 3 is 0 + 1 + 3 = 4 because  1 2 disobeys the second preference and all the 3 pairs  disobey the third preference. The badness of 1 3 2 is 1 + 2 + 2 = 5. The badness of 2 1 3 is 1 + 0 + 2 = 3. The badness of 2 3 1 is 2 + 1 + 1 = 4. The badness of 3 1 2 is 2 + 3 + 1 = 6. The badness of 3 2 1 is 3 + 2 + 0 = 5.  So if we let P = 2 1 3 , the minimal badness is 3.   Input  Given N users preferences of M items, calculate the minimal badness of merged preference. The first line of input is 2 integers, N  and M . Each of the next n lines is a permutation of integers from 1 to M.  Output  Just output the minimal badness of merged preference in a single line.  Example  Input: 3 3 1 2 3 2 1 3 3 2 1  Output: 3   Constraints   0 < N < 21  0 < M < 10001 
i<vertices i<vertices i<vertices i<vertices i<vertices i<vertices second<<endl str[i+0] str[i+0] str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] to_base0 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w Point _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name
You are given three integers A,B and C.  We choose two real numbers x and y such that 0 ≤ x ≤ A and 0 ≤ y ≤ B.  What is the probability that x+y≤C ?   Input The first line of input contains T denoting the number of test cases. Each of the following T lines contains three space separated Integers A,B and C  Output For each test case, output a single line containing the required probablity.  Constraints 1 ≤ T ≤ 10^5 0 ≤ A,B ≤ 10^9 0 ≤ C ≤ 10^18  Example Input:  2 4 10 3 4 10 11   Output:  0.1125 0.8875   NOTE: Your answer will be accepted if the absolute error is less than 10^-6. 
A[i][k] A[i][k] holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Mech Project  	A Team of Mech guys from UVCE are working on a Robot, which can cut the ripen coconut from the tree by controlling the release of enzymes in the tree. Team somehow manages to get the Size and ripeFactor of each coconut. If Size of the coconut is strictly greater than minSize or ripeFactor is strictly greater than minRipeFactor then enzymes will be controlled to cut that coconut, else it will not be cut.   	The team wants to analyse the efficiency of their Robot. In a tree if the Robot cuts RCut coconuts but actually it was required to cut ACut coconuts, then efficiency of the Robot will be RCut ÷ ACut. Write a program to calculate the efficiency of the Robot.  Input  First line contains T,number of test cases. In each test case First line contains 3 space separated integers N (number of coconuts in the tree), minSize and minRipeFactor. In next N lines i th line contains two space separated integers Size and ripeFactor of i th coconut. Next line contains single integer ACut.   Output  For each test case print the simplified fraction of RCut/ACut. For clarity refer to the Sample Inputs and Outputs.   Constrains 1 <= T <= 10 1 <= N <= 10^5 0 <= Size, ripeFactor, minSize, minRipeFactor <= 10^9 1 <= ACut <= N  Sample Input  1 5 5 150 1 120 7 133 3 153 5 100 2 150 4  Sample Output  1/2  Explanation Robot will cut RCut = 2 coconuts, it was actually required to cut ACut = 4 coconuts, so ACut/RCut is 2/4, and simplified ratio is 1/2 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
    Larry graduated this year and finally has a job.  Hes making a lot of money, but somehow never seems to have enough.  Larry has decided that he needs to grab hold of his financial portfolio and solve his financing problems. The first step is to figure out whats been going on with his money.  Larry has his bank account statements and wants to see how much money he has.  Help Larry by writing a program to take his closing balance from each of the past twelve months and calculate his average account  balance.     Input   The input will be twelve lines. Each line will contain the closing balance of his bank account for a particular month.  Each number will be positive and displayed to the penny. No dollar sign will be included.   Output   The output will be a single number, the average (mean) of the closing balances for the twelve months.  It will be rounded to the nearest penny, preceded immediately by a dollar sign, and followed by the end-of-line.  There will be no other spaces or characters in the output.     Example   Input:    100.00  489.12  12454.12  1234.10  823.05  109.20  5.27  1542.25  839.18  83.99  1295.01  1.75    Output:    $1581.42  
c[j%0] holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   The expression N!, read as "N factorial," denotes the product of the first N positive integers, where N is nonnegative. So, for example,     N       N!   0       1   1       1   2       2   3       6   4      24   5     120  10 3628800    For this problem, you are to write a program that can compute the last non-zero digit of any factorial for (0 ≤ N ≤ 10000). For example, if your program is asked to compute the last nonzero digit of 5!, your program should produce "2" because 5! = 120, and 2 is the last nonzero digit of 120.     Input   The input will consist of a sequence of integers. The sequence will be followed by Zero.   Output   For each integer input, the program should print exactly one line of output which must be the single last non-zero digit of N!.   Example   Input:    1  2  26  125  3125  9999    Output:    1  2  4  8  2  8     
interval interval steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Run, Run, Runaround Numbers  An N-digit runaround number is characterized as follows:        * It is an integer with exactly N digits, each of which is between 1 and 9, inclusively.      * The digits form a sequence with each digit telling where the next digit in the sequence occurs. This is done by giving the number of digits to the right of the digit where the next digit in the sequence occurs. If necessary, counting wraps around from the rightmost digit back to the leftmost.      * The leftmost digit in the number is the first digit in the sequence, and the sequence must return to this digit after all digits in the number have been used exactly once.      * No digit will appear more than once in the number. This rule was accidentally left out of the problem description at the competition.    For example, consider the number 81362. To verify that this is a runaround number, we use the steps shown below:        1. Start with the leftmost digit, 8        8 1 3 6 2       -     2. Count 8 digits to the right, ending on 6 (note the wraparound).        8 1 3 6 2       -     -     3. Count 6 digits to the right, ending on 2.        8 1 3 6 2       -     - -     4. Count 2 digits to the right, ending on 1.        8 1 3 6 2       - -   - -     5. Count 1 digit to the right, ending on 3.        8 1 3 6 2       - - - - -     6. Count 3 digits to the right, ending on 8, where we began.        8 1 3 6 2       = - - - -    In this problem you will be provided with one or more input lines, each with a single integer R having between 2 and 7 digits followed immediately by the end of line. For each such number, determine the smallest runaround number that is equal to or greater than R. There will always be such a number for each of the input numbers. Display the resulting number in the format illustrated below. The last line of the input will contain only the digit 0 in column 1.     Input   Input a single integer R having between 2 and 7 digits followed immediately by the end of line. Enter 0 to terminate.   Output   For each such number, determine the smallest runaround number that is equal to or greater than R. There will always be such a number for each of the input numbers.     Example   Input:    12  123  1234  81111  82222  0      Output:    Case 1: 13  Case 2: 147  Case 3: 1263  Case 4: 81236  Case 5: 83491     
vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD task task task task cout<<arr[i]<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n s[i-0][j]== s[i-0][j]== form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n maxVals[q maxVals[q maxVals[q form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  One day maths teacher gave the following task for the students, only upon completion students will be taken out for a school fun trip. First you are a given a list of n numbers and q queries. For each query you are given two indices x and y , you have to report the between the maximum number and minimum number whose indices lie within x and y (both inclusive)     Input First line of input has two integers n and q , denoting the size of list and number of queries Next line consists of n spaced integers denoting the elements of the array Next q lines consists of two integer x and y , denoting the leftmost and rightmost indices of the query  Note : List is 0-indexed   Output For each query , print the answer in a new line.  Constraints 0< n,q < 100000 0< element of list < 1000000000 0 < x,y < n  Example Input: 5 2 1 2 3 4 5 1 2 4 4   Output: 1 0   Explanation Example case .  First query maximum number in given range is 3 and minimum number is 2 so difference 1  Second Query maximum and mimimum both are 5 ,difference is 0 
Point acc+=a[i] steps<i+00 steps<i+00 steps<i+00 A[0] A[0] A[0] i<0*n i<0*n i<0*n i<0*n longest longest longest longest longest longest longest longest longest Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] Tens\n Tens\n Tens\n longest longest longest longest Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n Tens\n
  You must be aware of the sorting technique, called merge sort where we sort an input array by first dividing it into two halves, and then sorting the each half recursively before finally merging these sorted halves. A GEU student, Mohan want to understand this recursive algorithm more clearly and is interested to know how the recursive function calls are getting called during the merge sort program execution for the given input parameters - input array (A), begin index (s) and the end index (t).   When the function merge_sort(A,s,t) is called, the recursive functions calls would be executed as per the input parameters. Mohan is interested to take a snapshot of the function calling stack when merge_sort(A,i,i) is being executed, where s <= i <= t. Mohan also wants to know the recursive function depth at that point of time. Assume that, if the input array consists of odd number of elements then it is divide in such a way that the left half contains one element more than the right half.  Input The first line of input contains T, the number of test cases. T lines follow, each line containing three values corresponding to s, t and i.    Output For each test case, output in separate lines, the begin and end index input parameters of the merge_sort() that would have been called till it reaches sorting ith index element. Mention these in same sequence as the function calls were called, and also then include in the next line the recursive function depth at that time. Return -1 if it could not have been called.  weL and R (separated by a space) X times, where X is the number of calls made to the function mergeSort(). For each call print L and R in a new line. Post that print  the heightest height achieved by the stack after all calls to the function mergeSort() has has been made.    Constraints  1 ≤ T ≤ 1000 1 ≤ t ,i  ≤ 1000 0 ≤ s ≤ 1000     Example Input: 4 0 4 3 7 15 14 1 16 9 7 14 3   Output: 0 4 3 4 3 3 3 7 15 12 15 14 15 14 14 4 1 16 9 16 9 12 9 10 9 9 5 -1    Explanation for first test case If we take the snapshot of the function calling stack  when merge_sort(A,3,3) would have been called during the execution of merge_sort(A,0,4),  then there would be seen - the  function merge_sort(A,0,4) calling merge_sort(A,3,4), which would then be calling merge_sort(A,3,3). So, in this case, the recursive depth would be 3.    
stderr stderr stderr stderr elem elem elem elem elem elem elem elem elem ++n ++n ++n ++n ++n ++n i<=int i<=int i<=int i<=int i<=int i<=int fpow fpow fpow fpow Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q maxVals[q
 Problem description. Pooja would like to withdraw X $US from an ATM. The cash machine will only accept the transaction if X is a multiple of 5, and Pooja's account balance has enough cash to perform the withdrawal transaction (including bank charges). For each successful withdrawal the bank charges 0.50 $US. Calculate Pooja's account balance after an attempted transaction.  Input Input description. Positive integer 0 < X <= 2000 - the amount of cash which Pooja wishes to withdraw. Nonnegative number 0<= Y <= 2000 with two digits of precision - Pooja's initial account balance.   Output Output the account balance after the attempted transaction, given as a number with two digits of precision. If there is not enough money in the account to complete the transaction, output the current bank balance.  Example - Successful Transaction Input: 30 120.00  Output: 89.50   Example - Incorrect Withdrawal Amount (not multiple of 5) Input: 42 120.00  Output: 120.00   Example - Insufficient Funds Input: 300 120.00  Output: 120.00  
x*temp*temp%MOD x*temp*temp%MOD vis[node] {doThis {doThis index/i index/i ans*=ans ans*=ans ans*=ans ans*=ans ans*=ans ans*=ans ans*=ans x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl practise practise practise P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] rev rev rev rev rev rev rev rev rev rev rev rev rev {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis {doThis s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<<
 Problem description.  Code Crunch Heads use RD-CODE for sending messages. It consists of only dots and dashes in sequence. Below are the RD-CODE for the digits 0 to 9:  0 ----- 1 .---- 2 ..--- 3 ...-- 4 ....- 5 ..... 6 -.... 7 --... 8 ---.. 9 ----.   Using this code, help Code Crunch Members to find out the RD-CODE of their message. Users will enter 10 digit phone no. Convert these numbers to RD-CODE and also find no of dots used in the coded data.   Input First line T, will have a single integer having number of test cases followed by T lines of input.   Second line will have a 10-digit number N where N is a positive integer < 9999999999.   Output  First line will display the RD-Code for each digit together.  Second line will display the total number of dots in the RD-CODE.  Example Input: 2 9716733117 9716335949 .  Output: ----.--….-----….--……--…--.----.------… 23 ----.--….-----…….--…--…..----…..-----. 26   
Vector OK x<=0000000000 e==0 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] name name name name name name name name name name name G[Query[i] G[Query[i] G[Query[i] G[Query[i] G[Query[i] G[Query[i] cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 G[Query[i] dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
 Problem description. Alice and Bob are being held at Azkaban(Prison). They want to escape and join Dumbledore's Army. Alice wants to tell Bob about the details of the plan but wants to keep their escape plan from Dementors(the guards). So Alice encrypts the message before passing the chits to Bob's cell. However Bob was careless and he disposed the chits in his cell's waste paper bin. The clever Dementor found the chits but couldn't make out what they said. So he hired a computer programmer to decode the message for him. Please help the Dementor to decypher the message. The code key that Alice used for this simple coding is a one for one character substitution based upon a single arithmetic manipulation of the printable portion of the ASCII character set.   Input The Encrypted message in a single line. The maximum number of charaters in a message is 100. (DO NOT PRINT ANY PROMPT MESSAGE TO ENTER THE ENCRYPTED MESSAGE.)   Output The decrypted message in a single line. (Do not print any other message other than the decrypted message.)  Example SAMPLE INPUT 1 [YHUZMVYT'[V'HUPTHN\Z'MVYT3   SAMPLE OUTPUT 1 TRANSFORM TO ANIMAGUS FORM,    SAMPLE INPUT 2 HUK'LZJHWL'^OLU'[OL`'IYPUN'MVVK5    SAMPLE OUTPUT 2 AND ESCAPE WHEN THEY BRING FOOD.  
tw[j] holds holds holds holds holds holds holds holds holds holds holds holds holds holds holds holds c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem description.  Blackjack is a very well known gambling card game played against a dealer in a casino. In this card game, each player is trying to beat the dealer, by obtaining a sum of card values not more than 21 which is greater than the sum of dealer card values. Player is initially given 2 cards, but he could choose to HIT (ask for 3rd card) or STAND (no more cards). If he chooses to hit for 3rd card and total score crosses 21 he get busted (loses irrespective of the total score of dealer cards). Face cards (Jacks, Queens and Kings) are worth 10 points. Aces are worth 1 or 11, whichever is preferable. Other cards are represented by their number. Here, you have to implement a conservative player strategy of playing blackjack. This conservative player does not want to get busted and hit only when its safe to do so. He follows following strategy: HIT if (score<=11) or (an ACE is held) STAND otherwise. Write a program to implement the above strategy given the initial 2 cards of the player.   Input First line T, will have a single integer having number of test cases followed by T lines of input.  Second Line will have two space seperated inputs (value of first and second card).  and so on..  Output For each test case, output a single line containing the result.  Constraints  1) Color of the card does not affects the score of the card.  2) If the value of card is not valid then return INVALID.  3) Don't consider the card with value 10(print INVALID).  4) Input for Face cards must be capital letters('A','Q','J','K') else return INVALID.    Example Input 3 J 5 4 3 A F   Output: STAND HIT INVALID   Explanation 1. Here the value of J (JACK) is 10. so the sum of card values is 15, so he chooses to stand.  2. Here the sum of values of card 4 and 3 is 7. It is less than 11, so it makes sense for him to draw another card.  3. Here F is an invalid card name.  
interval ss[n]<=00 ss[n]<=00 ss[n]<=00 R<j que que que dp[a][b]=0 str[i+0] str[i+0] str[i+0] str[i+0] a[00] to_base0 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Smugglers are becoming very smart day by day. They use SMS to communicate with each other. Police can often intercept their messages and bust them. Now they have developed a new technique of sending their messages from one smuggler to another. In their new technology, they are sending their messages in a number format. This format represents the way that numbers and characters are padded on mobile’s keypad. One smuggler sends a text message to the second smuggler, using the numbers corresponding to the letters on the keypad. When the receiving smuggler gets the message, he simply opens the “create text message” function in his mobile and types the number string. This way the receiver finally reads the original message.   1 2ABC 3DEF   4GHI 5JKL 6MNO   7PQRS 8TUV 9WXYZ   * 0[SPACE] #    For Example: 6999066263304447777077766622337778 -----> message sent by the first smuggler. my name is robert---------> message decoded by the second smuggler. Where ‘0’ denotes the "space". But for word monkey 6#666#665533999 this string will be sent by the smuggler one Here ‘# ‘ denotes that if smuggler watches ‘#’ then it means character previous to # is on the same key to the character after the ‘#’ and smuggler has to wait for 2 seconds and then press the same key.  You have to make a program  that takes as input a numerically coded string as message and outputs decoded message.  Constraints  Smuggler can never send numbers in message text Output will always be in uppercase  Input First line T, will have a single integer having number of test cases followed by T lines of input each having CODED message send by smuggler 1.  Output For each test case, output a single line containing the message smuggler 2 will get after decoding.  Example  Input: 2 6999066263304447777077766622337778 6#666#665533999  Output: MY NAME IS ROBERT MONKEY  Explanation: By pressing ‘6’ (i.e. key’6’ one time) on the keypad, the mobile shows ‘m’ on display screen in write text message area. By pressing ‘999’ (i.e. key ‘9’ three times) on the keypad, the mobile shows ‘y’ on display screen in write text message area. By pressing ‘0’ (i.e. key ’0’ one time) on the keypad, the mobile shows ‘space’ on display screen in write text message area. By pressing ‘66’ (i.e. key’6’ two times) on the keypad, the mobile shows ‘n’ on display screen in write text message area. By pressing ‘2’ (i.e. key ’2’ one time) on the keypad, the mobile shows ‘a’ on display screen in write text message area. By pressing ‘6’ (i.e. key '6'one time) on the keypad, the mobile shows ‘m’ on display screen in write text message area. By pressing ‘33’ (i.e. key ‘3’ two times) on the keypad, the mobile shows ‘e’ on display screen in write text message area. By pressing ‘0’ (i.e. key ‘0’ one time) on the keypad, the mobile shows ‘space’ on display screen in write text message area. By pressing ‘444’ (i.e. key’4’ three times) on the keypad, the mobile shows ‘i’ on display screen in write text message area. By pressing ‘7777’ (i.e. key ’7’ four times) on the keypad, the mobile shows ‘s’ on display screen in write text message area. By pressing ‘0’ (i.e. key ‘0’ one time) on the keypad, the mobile shows ‘space’ on display screen in write text message area. By pressing ‘777’ (i.e. key ’7’ three times) on the keypad, the mobile shows ‘r’ on display screen in write text message area. By pressing ‘666’ (i.e. key ’6’ three times) on the keypad, the mobile shows ‘o’ on display screen in write text message area. By pressing ‘22’ (i.e. key ‘2’ two times) on the keypad, the mobile shows ‘b’ on display screen in write text message area. By pressing ‘33’ (i.e. key ‘3’ two times) on the keypad, the mobile shows ‘e’ on display screen in write text message area. By pressing ‘777’ (i.e. key ’7’ three times) on the keypad, the mobile shows ‘r’ on display screen in write text message area. By pressing '8' (i.e. key ’8’ one time) on the keypad, the mobile shows ‘t’ on display screen in write text message area.   But for word monkey 6#666#665533999 this string will be sent by the smuggler one By pressing ‘6’ i.e. key’6’ one time on the keypad, the mobile shows ‘m’ on display screen. For '#' wait for 2 seconds, and then press next. By pressing ‘666’ i.e. key’6’ three times on the keypad, the mobile shows ‘o’ on display screen. For ‘#’ wait for 2 seconds, and then press next. By pressing ‘66’ i.e. key’6’ two times on the keypad, the mobile shows ‘n’ on display screen. By pressing ‘55’ i.e. key’5’ two times on the keypad, the mobile shows ‘k’ on display screen. By pressing ‘33’ i.e. key’3’ two times on the keypad, the mobile shows ‘e’ on display screen. By pressing ‘999’ i.e. key’9’ three times on the keypad, the mobile shows ‘y’ on display screen. 
eg stderr seen seen ruofytriht steps<i+00 steps<i+00 elem ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 x0-x0 x0-x0 x0-x0 ++n algorithm pp pp pp pp pp pp pp pp a[i]== ans/0 ans/0 ans/0 ans/0 ans/0 ans/0 cuts*cutting_cost cuts*cutting_cost check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming A[0] A[0] A[0] A[0] A[0] A[0] elem elem elem elem elem elem ++n ++n Tens\n Tens\n Tens\n Tens\n form form form form form form form check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming A[0] A[0] A[0] A[0] A[0] A[0] A[0] elem elem elem elem elem elem ++n ++n Tens\n Tens\n Tens\n Tens\n form form form form form form form check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form form check[0]= check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form form check[0]= check[0]= check[0]= check[0]= form form
A circular prime is a prime number with the property that the number generated at each intermediate step when cyclically permuting its (base 10) digits will be prime.[1][2] For example 1193 is a circular prime, since 1931, 9311 and 3119 all are also prime  Input  First line contains an integer N, number of inputs. Second line has space separated N positive integers, none of them greater than 100000  Output Space separated  0 or 1 values. Where 0 denote that corresponding number is not circular prime where as 1 indicates it is prime  Example  Input: 10 88 11 2 5 6 9 100 121 233 79   Output: 0 1 1 1 0 0 0 0 0 1   Explanation  11,2,5,79 are circular primes others are not 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl //cout<<v[i]<< holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given an input sequence. You have to write a program to sort it in non decreasing order.  Input First line of input T has number of test cases followed by T test cases. Each test case has two lines. First line has a number N. The second line has N space separated elements as an input sequence  Output Output has T lines of output corresponding to each test case. Each line will have space separated integers in non decreasing order.  Example  Input: 3 2 3 4 5 1 4 5 8 2 1 7  Output: 3 4 1 2 4 5 8 7  
//cout<<v[i]<< //cout<<v[i]<< a>c a>c //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Company XYZ have been badly hit by recession and is taking a lot of cost cutting measures. Some of these measures include giving up office space, going open source, reducing incentives, cutting on luxuries and issuing pink slips. They have got three (3) employees working in the accounts department and are going to lay-off two (2) of them. After a series of meetings, they have decided to dislodge the person who gets the most salary and the one who gets the least. This is usually the general trend during crisis like this. You will be given the salaries of these 3 employees working in the accounts department. You have to find out the salary of the person who survives.  Input  The first line of the input contains an integer T denoting the number of testcases . Each case consists of a line with 3 distinct positive integers. These 3 integers represent the salaries of the three employees..  Output For each test case, output a single line containing salary of employee that survives.  Example Input: 3 1000 2000 3000 3000 2500 1500 1500 1200 1800   Output: 2000 2500 1500   
holds holds holds holds holds holds holds interval interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w elem elem cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Sheldon is a huge fan of Star Wars. He has spent a lot of money buying collectibles from star wars. He has over 50 light sabers One day his friend Penny decides to visit him. Sheldon doesn't want her to see his light sabers so he decides to hide them in big card board boxes. Help him   Input The first line of the input contains an integer T denoting the number of light sabers. Second line has space-separated dimension of cartons The third line contains T space-separated integers denoting the length of each lightsaber  Output Output a single integer which denotes number of ligh sabers that can be kept in carton. Light sabers can be rotated in any angle inside box. For the sake of problem you don't have to consider intersection of light sabers in box  Example Input: 4 1 2 3 2 16 10 3  Output: 3    Explanation Example case 1.You can't fit light saber of length 16 in cupoid of this dimension. 
x*temp*temp%MOD interval interval steps<i+00 ans[i]+=ans[edges[i][j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Write a program that will reverse the letters in each of a sequence of words while preserving the order of the words themselves.  Input The first line of the input contains an integer T denoting the number of test cases. Each test case will consist of a single line of text Words are contiguous stretches of printable characters delimited by white space.  Output For each test case, output a single line containing same words as the input. However, the letters within each word must be reversed  Example Input: 3 I love you. You love me. We're a happy family.  Output: I evol .uoy uoY evol .em er'eW a yppah .ylimaf 
c>a&&c<b //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description. A good friend of Monika asks her to sing a song. She always refuses to do so. One day she agrees to sing a song but on a condition. As she is a smart girl she wants to sing a song of very less time span. She gives her friend a chart having a matrix of n*m in which each element t is an Integer that represent the time span of each song. As she knows a lot of songs, n and m may be large. Now she asks her friend to choose a row from which she will select a song to sing. As her friend is aware of her trick, so he wants to make the selection so that she will give him pleasure of listening to the song for a large amount of time. Find the time span for which the boy will be able to listen her song if both of them make optimal move.   Input Input description. First line of each input consists of two space separated integers n and m. For each of next n lines, each line has m integers denoting the time span of each song.  Output Print a single integer as the answer to the corresponding input.  Constraints 1<=n, m<=100 1<=t<=1000000000   Example Input: 3 3 6 1 5 3 3 3 4 10 1  Output: 3    Explanation As selecting the first and third row will result in giving the time span as 1 so row 2 will be selected. 
&man_list[i][j] &man_list[i][j] a>c a>c L>R L>R L>R L>R L>R L>R pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  The Army Headquarters of the northern command had confidential message to be sent to the headquarters of the southern base. They devised an algorithm to encrypt the message. The message was encrypted using the following algorithm: After every word, there is a number X associated with it, which is less than the length of the word. First, the string before position X is reversed.  Then, the Z-transform (as explained below) is performed on every character of the remaining string. Definition of Z-transform: The Z-transform of character x is computed as follows. If the alphabet, x comes at position i in English Vocabulary, the Z-transform of x is (26-i+1)^th alphabet. For example, the Z-transform of A is Z, the Z-transform of B is Y, Z-transform of C is X, the Z-transform of Z is A, etc. Your task is to encrypt a given word of the message. It is also given that all the characters in the string are upper case English alphabets.    Input The first line of input contains T, the number of test cases. T lines follow, each consisting of a string space separated by the number X.  Output For each test case output the encrypted text.    Constraints  1 ≤ T ≤ 1000 1 ≤ length of input string ≤ 100 0 ≤ X ≤ length of input string     Example Input: 2 SEND 2 BACKUP 2  Output: ESMW ABXPFK   
Bhardwaj Bhardwaj a>c a>c cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Chef Ceil has some matchsticks in his kitchen. Detail of matchsticks: There are N matchsticks in total. They are numbered from to 0 to N-1 inclusive. All matchsticks have same length. But they may have different rates of burning. For i^th matchstick, we denote bi as the time required for that matchstick to completely burn-down if lighted at one end.  The matchsticks have uniform rate of burning. If lighted at both ends simultaneously, the matchstick will take only half of the original time to burn down. Arrangement: He ties rear end of the all the matchsticks together at one point and the front end is kept free. The matchstick numbered i is adjacent to matchstick numbered i+1 for all 0<= i <=N-2. Bodies of matchsticks do not touch each other, except at rear end. All matchsticks are kept on the floor. Task: There are Q queries, in each query we ask: If he lights the free end of all matchsticks numbered between  L and R both inclusive, what will be the time needed for all matchsticks to get completely burnt.  Input First line of input contains one integer N, total number of matchsticks. The next line contains N space separated integers bi, where bi is the time required for i^th matchstick to completely burn-down if lighted at one end. Next line contains one integer Q, total number of queries you need to answer. Then there are Q queries in next Q lines. Each line has two space separated integers L and R.  Output Print Q lines, one for each query, printing the answer for each query, that is, the time it will take for all the matchsticks  to get completely burn down. Every time you must print your answer with 1 decimal place.  Constraints: 1 <= N <= 10^5 1<= bi <= 10^8 1 <= Q <= 10^5 0 <= L <= R <= N-1   Example   Input 1 5 1 0 0 Output 5.0  Input 2 3 5 1 0 1 Output 4.0  Input 18 3 4 2 1 5 7 9 7 10 5 12 3 1 1 2 1 3 2 1 4 10 Output 9.0   Explanation  For the last input, in figure yellow colored matches are lighted by a lighter simultaneously. The numbers indicate the time required to burn that matchstick (if lighted at one end) Now the first lighted matchstick will completely burn in 5 seconds. Then it will light up all the rest matches from the rear end. Some matches will have fire at both ends and thus after 5 seconds, they will start burning with twice the original rate. Thus time taken for matches to burn completely will be : (from left to right):  8.0, 9.0, 7.0, 6.0, 5.0, 6.0, 7.0, 6.0, 7.5, 5.0, 8.5, 8.0, 6.0, 6.0, 7.0, 6.0, 8.0, 7.0. So, the answer will be 9.0 (the maximum among these). 
0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 The Mirror of Galadriel  With water from the stream Galadriel filled the basin to the brim, and breathed on it, and when the water was still again she spoke.     'Here is the Mirror of Galadriel,' she said. 'I have brought you here so that you may look in it, if you will. For this is what your folk would call magic,     I believe; though I do not understand clearly what they mean; and they seem also to use the same word of the deceits of the Enemy.     But this, if you will, is the magic of Galadriel. Did you not say that you wished to see Elf-magic?' - Galadriel to Frodo and Sam, describing her Mirror.  We call a string S magical if every substring of S appears in Galadriel's Mirror (under lateral inversion). In other words, a magical string is a string where every substring has its reverse in the string.  Given a string S, determine if it is magical or not.  Input (STDIN):  The first line contains T, the number of test cases. The next T lines contain a string each.  Output (STDOUT):  For each test case, output "YES" if the string is magical, and "NO" otherwise.  Constraints:  1 <= T <= 100 1 <= |S| <= 10 S contains only lower-case characters.  Sample Input:   2 aba ab  Sample Output:   YES NO  Notes/Explanation of Sample Input:   For the first test case, the list of substrings are : a, b, ab, ba, aba. The reverse of each of these strings is present as a substring of S too. For the second test case, the list of substring are : a, b, ab. The reverse of "ab", which is "ba" is not present as a substring of the string. 
interval holds cr-0 cr-0 cr-0 index/i lp lp lp lp lp lp #include<cassert> lft[i]=w lft[i]=w Point Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
You are given integers N,K and M and operation F. Operation F is defined for an integer as follows:  F:  for i from 1 to M inclusive, do 	if N is a multiple of K, 		divide N by K 	else, 		multiply N by K print N Perform the operation F on N.    Input The first line contains a single integer T the number of test cases. T lines follow each of them consists 3 space-separated integers N K M on a single line.    Output The output must consist of T lines the result obtained on performing operation F on N.    Constraints 1<=T<=40,000 1<=N<=10^9 1<=K<=10^4 1<=M<=10^10    Example Input: 2 42 3 2 6 7 1  Output: 42 42     Explanation Since 42 is divisible by 3, it is divided by 3 and 14 is obtained. Since 14 is not divisible by 3, it is multiplied by 3. Hence, 42 is obtained. 
ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n +0] +0] holds holds holds holds holds holds holds holds holds holds holds holds seen seen seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Rohit was travelling to NIT Warangal, to attend their annual technical fest - "Technozion". In the train, opposite to him, Rohit found quite a peculiar man playing with an array of numbers. When he enquired, the man told that he is trying to solve a puzzle for decades but unable to do so. Seeing Rohit's interest in the puzzle, the man decided to challenge him to solve it, in return of which he would pay Rohits return fare. Rohit got excited and decided to solve it but requires your help. Help him solve the puzzle which is as follows -     You are given an array of size N ( 1-based indexing ) , filled with positive integers not necessarily distinct. You are now asked to play a game on it. For the first step any number (except the first number) can be chosen. At each step of the game, you have to select a number whose index is the multiple of any one of the indices of previously selected numbers. You have to maximise the sum of all the numbers that you can choose using the rule mentioned. You can leave the game with current sum at any time or continue to play till it is possible to choose a number. Ofcourse, you have to choose optimised indices to get the maximum sum. You cant choose an index twice     Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the size of the array . The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.    Output For each test case, output a single line containing the maximum sum possible following the rules of the game.    Constraints  1 ≤ T ≤ 10 2 ≤ N ≤ 10^5 0 ≤ Ai≤ 10^9     Example Input: 1 8 1 2 3 4 5 6 7 8  Output: 20    Explanation Rohit found out that the maximum sum possible in the given test case is 20. 
vis[node] dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 stderr stderr stderr stderr stderr stderr j++ s[i-0][j]== seen seen seen cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Arif is very intelligent boy and also good at mathematics. One day his Mathematics Teacher asked him to find the product of two polynomial expressions. As the co-efficients of those polynomials are much larger, he decided to write a code to solve this problem. But, he is not aware of programming. Help him to find the product.   Input Input description. Line1--m n ---where m-1,n-1 is the degree of 1st and 2nd polynomial respectively Line2-- m integers representing co-efficients of 1st polynomial Line 3-- n integers representing co-efficients of 2nd polynomial   Output Output description. Print the final polynomial obtained after product  Clearly observe the example for input and output format  Constraints Should contain all the constraints on the input data that you may have. Format it like:  -100 ≤ m,n ≤ 100  Example Input: 4 3 5 0 -20 6        // 5-20x^2+6x^3 1 -2 4                // 1-2x^1+4x^2  Output: 5 + -10x^1 + 0x^2 + 46x^3 + -92x^4 + 24x^5 
interval interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem description. Jojo is so good at multiplying that she can multiply two 15-digits integers within 5 seconds. After practicing for years, she decided to approach the Limca Book of Records. As a jury member you are given the task to decide if she is eligible enough for holding the record. But before you test her, you should know the result of multiplication of numbers so that you can verify them with her answers.As an computer science literate, create a program that can calculate the multiplication of two numbers efficiently.  Input  Each sub-task contains just two integers A , B in two separate lines.  There will be a total of 10 sub-tasks.  Output  For each sub-task, output a single line containing the result of multiplication of both the integers.   Constraints All the subtask contains different numbers.  1 ≤  A , B  ≤ 10^15     Example Input: 111111 111111  Output: 12345654321     Explanation Self-explanatory. 
it=v0[j][y] form 0LL<<digits[i] 0LL<<digits[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Our new era superhero JAGGI is fighting to save the world, he has to find and kill mutants who live in random houses within a straight street. Since we live in a modern world, the mutants of this world are very smart and no one knows in which house they live. In fact, even they don’t know where the other mutants live but they do have some kind of pattern according to which they choose their respective house numbers. Fortunately, JAGGI is aware of this pattern which says that the address of the next mutant can be found by killing the previous three mutants and adding their respective house addresses. JAGGI has started working and has already found the address of the first three villains of the street: Address 0, Address 1 and Address 2. But JAGGI doesn’t want to hurt anyone except the mutants, so he has to be sure and wants to find the address of all the houses where the mutants live. He randomly decides to choose a house number and asks you whether a mutant lives there or not. Help him by answering his query in the form: YES or NO. INPUT The first line of the input contains a single integer T denoting the number of test cases. For each test case there will be a single integer which represents the house number.  OUTPUT   For each test case, output will be YES if the mutant lives in that house otherwise the output will be NO. CONSTRAINTS 1 <= T <= 10^5 1 <= K <= 10^18  Example Input   3 1 5 6 Output YES NO YES Problem Set By: Gaurav Dubey, 3rd Year 
interval interval interval ss[n]<=00 ss[n]<=00 ss[n]<=00 c[j%0] //cout<<v[i]<< holds holds a[00] a[00] a[00] a[00] a[00] holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 For Turbo C++ Users : Read the following document before attempting the question :   Problem Description First question is easy to set you up with the online judge. You are given a number 'N'. You need to find the sum of first N terms of the series: 1 - 2 + 3 - 4 + 5 - 6 ...   Input First line contains T, the number of test cases. Each test case contains the number N on a new line,which denotes the number of events  Output For each test case, print the total number of registrations on a new line for every test case.  Constraints Example Input: 3 3 1 2   Output: 2 1 -1 
c[j%0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Haku Kale now wants to loot in a global scale. For that he needs the help of some underground gang leaders. But the problem is, he does not know the name of any gang leader. After a deep research, he got the name of gang leaders in an encrypted form. After spending months in decrypting it, he found the way to decrypt the name of the leaders from the information he has gathered. But he doesn’t have time to decrypt it. So, he wants a programmer to write a program for him to decrypt those names within a second. According to Haku Kale, “Each character of name of gang leader is hidden in different words. Those characters can be extracted from middle of those given words after arranging their letters in alphabetical order.”    Input The first line of the input contains an integer T number of gang leaders. For each gang leader N is given which signifies the number of characters in gang leader name which are encrypted in N number of words of length W.    Output Each line contains the name of gang leader.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  0 ≤ T ≤ 100 0 ≤ N ≤ 20 0 ≤ W ≤ 500     Example Input: 2 3 ARCTV ACADAPALA ZHFGOSM 4 FJAOHVG AAAAA NUWRE IAT  Output: RAM HARI    Explanation Example Case 1. The name contains 3 characters as mentioned where first letter can be obtained from “ARCTV” after arranging them in alphabetical order, second letter can be obtained from “ACADAPALA” after arranging them in alphabetical order and so on. Example Case 2. Similar to Case 1 but this time the name contains 4 characters. 
vis[node] {doThis {doThis Bhardwaj second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl check[0]= check[0]= check[0]= check[0]= lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Naman has decided to go to a temple today. The path to this unique temple has exactly N steps with each step having a number A associated with it. The value of A-1 for a particular step denotes the maximum number of steps that one can skip and reach the A^th step from the current position. But in doing so, energy is reduced drastically. Suppose Naman goes from step J1 to step J2 and  the numbers associated with these 2 steps are A1 and A2 respectively, the amount by which Naman's energy decreases is  (A2-A1). Help Naman find the minimum starting energy so that he can reach the top of the temple.  Input : First line contains an integer T denoting the number of test cases. First line of every test case contains an integer N denoting the number of steps. The second line contains N space separated integers denoting the numbers associated with each step.  Output : For each test case, print the required result in a single line.  Constraints : 1 ≤ T*N ≤ 10^5 1 ≤ Ai ≤ 10^5  Example : Input: 1 2 1  6 Output: 5  Explanation : Naman's energy decreases by 5 when going from step 1 to 2. Therefore minimum energy required is 5.  
cr-0 c[j%0] c[j%0] c[j%0] pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem description: You are given an array of some distinct numbers . All you have to do is print an resulting 0-indexed array in which the Prime Numbers are placed at prime positions and composite at composite positions.But it creates a problem for 0th and 1th index so place “0”(without qoutes) there. And place “0”(without qoutes) in empty places.  Input:The first line will contain n the size of array and the next line will contain n integers seperated by space. Output:Print the resulting array on a single line. Constarints: 1 <= n <= 10^5 2 <= Ai <= 10^9 Sample test cases:   Input: 6 2 3 7 10 20 25 Output: 0 0 2 3 10 7 20 0 25  Input: 7 8 9 11 600 32 12 14 Ouput: 0 0 11 0 8 0 9 0 600 32 12 0 14  
++n ++n cout0 cout0 form form cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
To test a new cloud computing service, you decide to write a program that generates the Pascal Triangle in a distributed fashion. You wish to estimate the amount of network traffic that would be expected between nodes. Since the nodes exchange the computed values in base 10, you want to know the number of digits in the base-10 representation of nth row and rth column of Pascal's triangle. Since your program internally represents these in base-2, you also wish to know the number of digits in the base-2 representation to get an idea of the memory usage involved.  Input Format The first line contains a single integer t, followed by t lines each containing two numbers that indicate the row and column in Pascal's triangle respectively.  Output Format For each test case output a single line containing two numbers each, the number of digits in the base 10 representation followed by the number of digits in base 2.  Example Input:   20 5 2 3 3 5 4 2 2 4 1 5 5 2 1 4 4 3 1 3 0 1 1 2 0 3 2 5 3 4 2 4 0 5 1 4 3 1 0 5 0   Output:  2 4 1 1 1 3 1 1 1 3 1 1 1 2 1 1 1 2 1 1 1 1 1 1 1 2 2 4 1 3 1 1 1 3 1 3 1 1 1 1  
c[j%0] cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] holds holds c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Galileo's latest project involves determining the density of stars in certain regions of the sky. For this purpose he started looking for datasets online, and discovered a dataset on Newton's blog. Newton had decomposed the night sky into a Voronoi tessellation with the generators arranged in a grid. He has stored the number of stars in a Voronoi cell at a position in a matrix that corresponds to the position of the generator in the grid.  This dataset does not directly help Galileo, because he needs to be able to query the number of stars in a rectangular portion of the sky. Galileo tried to write a program that does this on his own, but it turned out to be too slow. Can you help him?  Input The first line contains two integers n and m that denote the height and width of the matrix respectively. This is followed by n lines each containing m integers each.  The line following this would contain a single integer t, the number of queries to be run. Each query line consists of 4 integers px, py, qx, qy. The first two integers denote the row and column numbers of the upper left corner of the rectangular region, and the second pair of numbers correspond to the lower right corner.  1<= n,m<=1000 1<=t<=100 1<=px,qx,py,qy<=1000  Output For each query output a single line containing the number of stars in that rectangular region.  Example  Input: 3 3 10 10 10 10 10 10 10 10 10 4 1 1 1 1 1 1 3 3 2 1 3 3 3 1 3 3  Output: 10 90 60 30  
name mark[x][y]=0 mark[x][y]=0 ++n ++n ++n ++n ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Code a thon  is programming a robot that is supposed to paint a horizontal line. Not being one to care much about efficiency, Codesmith programs the robot to move in an anti-clockwise spiral as shown below.     <-- 12 4 3 2 11 5 0 1 10 6 7 8 9  The robot starts at position zero, then moves to position 1, then position 2 and so on. Codesmith wants all of the tiles to the right of 0 to be painted black. (These tiles are represented as bold numbers in the figure above.)  Your task is to help Codesmith by telling him which is the nth tile that must be painted black, with the zeroth tile being zero.  Input The first line of the input contains a single integer n, this is the number of test cases. This is followed by n lines each containing a single integer A.  1<=n<=100 0<=A<=10000  Output For each test case output a single integer which is the number of the tile that corresponds to the nth tile that must be painted.  Example  Input: 3 0 1 2  Output: 0 1 10 
yellow acc+=a[i] acc+=a[i] acc+=a[i] cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n level[000000] holds holds holds holds holds holds holds holds holds seen seen lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Did you ever hear about 'Dragon Food' ? Its used to refer to the chocolates bought for your loved ones :). Po offers dragon food to master Shifu, who is a famous cook in the valley of food. In return, Shifu hands over the dragon scroll to Po, which is said to hold the ingredients of the secret recipe. To open the dragon scroll, one has to solve the following puzzle.   1. Consider a N-bit integer A. We call an integer A' as shuffle-A, if A' can be obtained by shuffling the bits of A in its binary representation. For eg. if N = 5 and A = 6 = (00110)2, A' can be any 5-bit integer having exactly two 1s in it i.e., any of (00011)2, (00101)2, (00110)2, (01010)2, ...., (11000)2.  2. Given two N-bit integers A and B, find the maximum possible value of (A' xor B') where A' is a shuffle-A, B' is a shuffle-B and xor is the bit-wise xor operator.  Given N, A and B, please help Po in opening the dragon scroll.  Notes 1. xor operator takes two bit strings of equal length and performs the logical XOR operation on each pair of corresponding bits. The result in each position is 1 if only the first bit is 1 OR only the second bit is 1, but will be 0 if both are 1 or both are 0. For eg: 5 (0101) xor 3(0011) = 6(0110). In most languages it is represented using ^ symbol. 5 ^ 3 = 6.  2. If the integer actually needs less than N bits to represent in binary, append sufficient number of leading 0 bits. For eg. as shown in the problem statement for N = 5, A = 6 = (00110)2  Input First line contains an integer T ( number of test cases, around 100 ). T cases follow, each having N A B in a single line, separated by a space. ( 1 <= N <= 30, 0 <= A,B < =1000 )  Output For each case, output the maximum possible value of (shuffle-A xor shuffle-B) in a separate line.  Example  Input: 3 3 5 4 5 0 1 4 3 7  Output: 7 16 14 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Reversed number is a number written in arabic numerals but the order of digits is reversed. The first digit becomes last and vice versa. For example, if the number is 1245,it will become 5421 .Note that all the leading zeros are omitted. That means if the number ends with a zero, the zero is lost by reversing (e.g. 1200 gives 21). Also note that the reversed number never has any trailing zeros. Your task is to add two reversed numbers and output their reversed sum. Of course, the result is not unique because any particular number is a reversed form of several numbers (e.g. 21 could be 12, 120 or 1200 before reversing). Thus we must assume that no zeros were lost by reversing (e.g. assume that the original number was 12).     Input The input consists of N cases (equal to about 10000). The first line of the input contains only positive integer N. Then follow the cases. Each case consists of exactly one line with two positive integers separated by space. These are the reversed numbers you are to add.   Output For each case, print exactly one line containing only one integer - the reversed sum of two reversed numbers. Omit any leading zeros in the output.   Example  Input: 1 24 1  Output: 34  
tw[j] holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of not more than 5 digits, write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   Input The first line contains integer t, the number of test cases. Integers K are given in the next t lines.   Output For each K, output the smallest palindrome larger than K.   Example  Input: 1 808  Output: 818 
acc+=a[i]
Working from left-to-right if no digit is exceeded by the digit to its left it is called an increasing number; for example, 22344. Similarly if no digit is exceeded by the digit to its right it is called a decreasing number; for example, 774410 we shall call a positive integer that is neither increasing nor decreasing a Invalid number; for example, 155349.WAP to check whether a number is valid or not.   Input The number of test cases have to be specified in the first input(between 1 to 1000).The input consists of one number given as input at a time,the program checks if the number is vaild or not.   Output The output displays whether the number is  vaild or not,i.e it displays valid when the number is Valid and invalid when its not.   Example  Input: 7 1 2 3 4 5 6 150  Output: valid valid valid valid valid valid invalid 
interval interval interval steps<i+00 steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 holds holds holds holds holds holds holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given a sequence w of integers. A mismatch is any such pair of neighbouring elements of sequence w[i] and w[i+1], that w[i]>w[i+1]+1. As long as there is any mismatch, you solve it by swapping the mismatching numbers. Given an input sequence, calculate one of the possible output mismatch-less sequences obtained by successively solving mistmatches by swapping.   Input  First - 1<=t<=10 - the number of tests. For each test: first - 1<=n<=100000. Then, n nonnegative integers.   Output For each test, you should output exactly n integers.   Example  Input: 2 4 4 3 2 1 4 4 3 1 2   Output: 4 3 2 1 1 4 3 2   
scnd mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 ++n ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem description You are participating in The Quick-Math Quiz 2015 and, fortunately enough, have managed to qualify for the final round. But the final round ain't a piece of cake. The quiz master has revealed the final problem which reads :  You are given an array of integers of size N and an integer K. Then you are asked Q number of questions. Each question has two integers S and X. You need to tell if the sum of any S consecutive subarrays of size K sum up to X or not.  The contestant who answers first, wins.  Input The first line of the input contains two integers N and K denoting the size of array and size of each subarray respectively.The next line contains N spaced integers representing the array.The next line contains an integer Q representing the number of questions.Q lines follow.Each question has two spaced integers S and X representing the number of consecutive subarrays and the sum of consecutive subarrays.  Output For each question, print "YES" or "NO" (without the quotations) accordingly to the question.  Constraints  1 ≤ S+K-1 ≤ N ≤ 10^5 1 ≤ Q ≤ 10^3 1 ≤ Value of an integer in array ≤ 100   Example Input: 5 2 1 2 3 4 5 41 52 123 143 21  Output: YES YESNOYES Explanation Example case 1. (2 + 3) = 5 by considering 1 subarray starting from 2^nd position.Example case 2. (2 + 3) + (3 + 4) = 12 by considering 2 subarrays with the first subarray starting from 2^nd position.Example case 3. The sum any three consectuive subarrays of size 2 is not equal to 14 as the only two possibilities are 15 and 21 Example case 4. (2 + 3) + (3 + 4) + (4 + 5) = 12 by considering 3 subarrays with the first subarray starting from 2^nd position. 
vis[node] vis[node] vis[node] vis[node] vis[node] {doThis {doThis index/i index/i index/i index/i index/i index/i a[00] a[00] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
NITMAS Fest is live. The members of the community are very busy. People from different colleges have come to compete. But, Naveen is very possessive about his girlfriend, Archana. He always remains close to his girlfriend. Couples (boys in a line and girls in another) have to stand in different rows in a line for a game. There are some mad people in college who think they alone form a couple. It is known that Naveen and Archana are closest of all couples. Find the distance between them.   Input Each test case consists of 2 lines. The first line represents the girls's line. The second line represents the boys's line. The first number N of each line represents the number of girls or boys in that line. The input numbers may not be in sorted order though. N ≤ 1000. The position of girls or boys is ≤ 1,000,000.   Output Distance between Naveen and Archana.   Example  Input: 4 2 4 6 8 5 1 3 5 7 9 Output: 1 
//cout<<v[i]<< cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n brr[00000] orez orez orez orez orez orez orez orez x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given a string of letters in the input, return a string in the output with each words written in reverse order. Spaces and punctuations must not change their position. Numbers may be present in a string. The end of the string will have a "." without the quotes.   Input Input string   Output Output String   Example  Input: Welcome to NITMASFEST.  Output: emocleW ot TSEFSAMTIN. 
cout<<temp+g<<endl
Arpit & Nikhil were bored from their usual routine of studying, so they decided to play a game. The game was as follows - Given a number N the player must subtract 1, 2 or 3 from N in order to make a number that is divisble by 4. The game will continue until any player is able to make such a number, the corresponding player to make the number wins. Nikhil allows Arpit to start the game but on one condition, he must subtract 1,2 or 3 from N in the first move. Both players play optimally. Vaibhav, their mutual friend , was observing them play. Can you help Vaibhav predict the outcome of the game? If Arpit wins print "First" without quotes and "Second" without quotes, if Nikhil wins.  Input First line contains number of testcases T. T lines follow each containing integer N.  Output Outcome of each game in a separate line  Constraints 1 <= T <= 100000 4 <= N <= 100000  Example Input: 1 6 Output: First  
fenwick <<p<< <<p<< i=00 que que que que str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There are n points with integer coordinates. We can form different quadrangles out of them by taking four different points and connecting them with lines. Let’s call a quadrangle ABCD nice if and only if:  Ax > 0 and Ay > 0; Bx > 0 and By < 0; Cx < 0 and Cy < 0; Dx < 0 and Dy > 0; ABCD has an integer area.  Your task is to count all different nice quadrangles that can be formed on the given points.  Input The first line of input file contains number t – the number of test cases. Then the description of each test case follows. The first line of each test case contains number n – the number of points. Then n lines follow each consisting of two integers x, y – the coordinates of a point. No two points in the same test case coincide.   Constraints 1 <= t <= 10 1 <= n <= 30000 -30000 <= x, y <= 30000   Output For each test case print the number of nice quadrangles that can be formed using given points.   Example  Input: 1 6 1 1 2 2 -1 -1 -2 2 2 -1 -3 -4  Output: 2  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 We call a permutation {p[1], p[2], ..., p[n]} of {1, 2, ..., n} nice if and only for all 1< i  ≤ n , there exists a  j < i  such that |p[i]-p[j]|=1. You have a permutation of {1, 2, ..., n}, which might or might not be nice. You have to find the smallest nice permutation which is not less than the given permutation. A permutation {p_1, p_2, ..., p_n} is said to be less than {q_1, q_2, ..., q_n} if p_i < q_i for the least i such that p_i ≠ q_i .  Input  The first line of input contains a single integer: n. The second line contains  n distinct space-separated integers each between 1 and n, denoting the permutation given to you.   Output  Output a single line containing n distinct integers: the least permutation which is not less than the given permutation.   Constraints  1 ≤ n  ≤ 100000   Example Input: 3 1 2 3  Output: 1 2 3  Input 3 3 1 2  Output: 3 2 1   Explanation Example case 1. The given permutation is good itself, so the answer in this case will be the given permutation.  Example case 2. This permutation is not good because there does not exist any j<2 such that |p[j]-p[2]|=1. The next good permutation is 3 2 1. 
c[j%0] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Chef has so many types of Dishes in his Restaurant. Chef got an Order to organize a party for some little children. The all little children want to eat different different types of dishes as many as possible so chef decides to provide them all different type of dishes for their party. But the chef finds that the cooks of his restaurant are not obedient so they made some mistakes while cooking some dishes.The mistake is that they made some dishes more than one times. So help Chef  to remove the mistake made by his workers. In the chef's restaurant the dishes are identified by numbers. So help the chef to identify how many dishes he has to add in the list to make all the dishes different.  Input The first line contain one Integer value N (1 ≤ N ≤ 100) the number of dishes the little children want by Restaurant. Second line contains N space-separated integers Di ( 1 ≤ i ≤ N )the dishes made by Restaurents workers.  1 ≤ N ≤ 100  1 ≤ Di ≤ 10^5;  Output Print a single integer - the minimum number of dishes Chef po needs to cook again.  Example  Input #1: 7 1 5 3 4 2 3 4 Output #1: 2 Input #2: 5 1 2 3 4 5 Output #2: 0 
c[j%0] c[j%0] //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< name name name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
At the function of Republic day at NIT Agartala the warden of hostel has to visit the ground and check the arrangement of the chairs for guests. In the ground of NIT Agartala all the chairs are arranged in N rows and M columns.  Warden has to check that in each row all the chairs must have same color and adjacent rows have different colors chair.  Input First line contains two integer N and M. Next N lines contains M values between 0 to 9 colors of chairs  Output Print YES if the arrangement is good else print NO.  Example  Input: 5 6 0 0 0 0 0 0 1 1 1 1 1 1 2 2 2 2 2 2 1 1 1 1 1 1 3 3 3 3 3 3 Output: YES Input: 5 6 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 1 2 2 2 2 2 2 3 3 3 3 3 3 Output: NO 
min++ max=count holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 +0] +0] +0] max=count max=count //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< name name name name name name name name name 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 You are given a string s, consisting of small Latin letters. Let's denote the length of the string as |s|. The characters in the string are numbered starting from 1.  Your task is to find out if it is possible to rearrange characters in string s so that for any prime number p ≤ |s| and for any integer i ranging from 1 to |s| / p (inclusive) the following condition was fulfilled sp = sp × i. If the answer is positive, find one way to rearrange the characters.     Input  The only line contains the initial string s, consisting of small Latin letters (1 ≤ |s| ≤ 1000).  Output  If it is possible to rearrange the characters in the string so that the above-mentioned conditions were fulfilled, then print in the first line "YES" (without the quotes) and print on the second line one of the possible resulting strings. If such permutation is impossible to perform, then print the single string "NO".  Example:   Input: abc Output: YES abc  Input: xxxyxxx Output: YES xxxxxxy Input: abcd Output: NO    Explanation Example case 1. In the first sample any of the six possible strings will do: "abc", "acb", "bac", "bca", "cab" or "cba". Example case 2. In the second sample no letter permutation will satisfy the condition at p = 2 (s2 = s4). Example case 3. In the third test any string where character "y" doesn't occupy positions 2, 3, 4, 6 will be valid. 
lp //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Class Square in the capital city of India has a rectangular shape with the size n × m meters. On the occasion of the city's anniversary, a decision was taken to pave the Square with square granite flagstones. Each flagstone is of the size a × a. What is the least number of flagstones needed to pave the Square? It's allowed to cover the surface larger than the Theatre Square, but the Square has to be covered. It's not allowed to break the flagstones. The sides of flagstones should be parallel to the sides of the Square.     Input The input contains three positive integer numbers in the first line: n,  m and a (1 ≤  n, m, a ≤ 10^9).  Output Write the needed number of flagstones.    Example Input: 6 6 4  Output: 4   
c[j%0] c[j%0] //cout<<v[i]<< L>R L>R a[00] a[00] x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Bob is a Cat who loves challenges. Once he went to  Agartala there was a net of paths. Tasks of Bob was to enter from one corner and come out from diagonally opposite corner. There were many confusing paths to complete this task, but Bob decided to pass this net  from the shortest path. Now your task is to help Bob by finding the shortest path from top left corner to right bottom corner of net.    Input  First line contains number of rows(N) in Net, after this line, each of next N lines describe a row of net. There will be no more than 100 columns and no more than 100 rows and shape of net must be rectangular (not necessarily a square). Each position of the row is one of two characters. A '0' means you may move onto that position. A '1' means that space is occupied by a wall. You are allowed to move in any direction (up, down, left, right, diagonal) provided that the square you move into isn't a '1'. You always start in the upper left hand corner of the net. The exit is always at the lower right hand corner of the net. There will always be at least one path from top left corner to bottom right corner.     Output The output is the shortest number of squares you must step in to pass through the net.    Example Input: 5 011100111 001111011 001111010 100000000 010111100  Output: 10 
a>c a>c a>c a>c second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 There are n stones on the table in a row, each of them can be red, green or blue. Count the minimum number of stones to take from the table so that any two neighboring stones had different colors. Stones in a row are considered neighboring if there are no other stones between them.  Input The first line contains integer n (1 ≤ n ≤ 50) — the number of stones on the table. The next line contains string s, which represents the colors of the stones. We'll consider the stones in the row numbered from 1 to n from left to right. Then the i-th character s equals "R", if the i-th stone is red, "G", if it's green and "B", if it's blue.   Output Print a single integer — the answer to the problem.  Example Input: 3 RRG  Output: 1  
ss[n]<=00 holds cnt[i]*sum[comp] steps<i+00 steps<i+00 cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 holds holds holds holds holds holds holds holds //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Alan threw a party and invited all her close friend to it. Let us suppose there were 2n people in the party and all of them were sitting across a round table. The host asked them to shake hands with the condition that no two hands should cross each other i.e if 4 people are sitting then 1st person cannot shake hands with 3rd as that will cross with the hands of 2nd and 4th person. The host wants to know the no of ways in which her friends can shake hands with each other. So your task is to help Alan in finding this.    Input First line of input will contain no of test cases t, followed by t lines each containing an integer N(<1000).  Output For each test case, output a single integer which is the no of ways in which persons can shake hands for that particular N. output the answer %100003.  Example Input: 2 2 4 Output: 2 14 
interval interval lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w A[0] A[0] A[0] A[0] A[0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Alice and Bob is playing a game with stones. There is a NxN grid in each cell there may be a stone or may be empty cell. If a cell contain '.' (without single quotes) it means its an empty cell and if it contains 'S' (it means it has a stone). Alice and Bob alternatively and optimally Play a game The game rules are as follows: 1) A player move some stones from the grid. He / She can remove stones are in connected cells (It means: if a cell at i, j has a stone and i+1,j and  i,j+1 and i-1,j and i,j-1 and so on in a connected manner and having a stone he / she can remove all  stones connected with this I, j cell). 2) Remove stones means He / She will make that cell empty it mean replace ‘S’ with ‘.’ 2) The player that have no stone to remove will lose the game. 3) They will play optimally It means Alice plays first than Bob, than Alice and so on. 4) They will try to remove more stones in a try it means a connected component of the grid that having more stones he / she will remove all stone from that connected set.  Input  First line contains T number of test cases. In each test case First line Contain N. Then NxN grid having  "." or "S"  (without quotes) .   Output  Print the name of Winner either Alice or Bob.   Constraints  1 ≤ T ≤ 20 1 ≤ N ≤ 100   Example Input: 2 2 .S SS 3 ..S S.S ..S Output: Alice Bob    Explanation Example case 1. In the first example Alice remove stones from (0,1) cell and (1,0) that is connected with (0,1) diagonally, and also she will remove (1,1) cells stone because it is also connected with (0,1). So Bob has no stones to remove that why he will lose the game and Alice is the Winner. 
steps<i+00 steps<i+00 steps<i+00 steps<i+00 steps<i+00 A[0] A[0] A[0] A[0] A[0] A[0] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice is a very brilliant student. He considers '4' and '7' as Magic numbers. The numbers containing only magic numbers are also magical. Given a magic number N ,he wants to know what could be the next magical number greater than the given number.   Input  First line of input contains number of test cases T. For each test case, there is exits only one line containing a magic number N.   Output  For each test case,  output a single line containing the next greater magical number.   Constraints  1 ≤ T ≤ 1000 4 ≤ N ≤ 10^100   Example  Input: 2 4 47  Output: 7 74  
c[j%0] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 //cout<<v[i]<< //cout<<v[i]<< holds holds holds holds holds holds holds tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Autobots are instructed by Optimus Prime to mobilize in the form of a rectangular shape with each Autobot on each vertex of the rectangle region on a -”deployment area” (which may consist of one or more regions). This is done so as to take care of the inner rectangular area called “region”. However the rule states-“no two regions may overlap”.  You have been asked to remove some regions from the “deployment area” so the remaining regions do not obscure each other. To keep the disturbance to the minimum level, you should remove the minimum number of regions to achieve this goal. You may not remove a region and place it in another position; all regions you leave in “deployment area” must be in their original position. When you examined the “deployment area”, you noticed something very nice. Every region was placed on the deployment area by placing each autobot in the four corners. This was done in a very courteous manner since each autobot is guarding only the region it is holding. The reason Optimus Prime wants your help because you are good at taking down a single region without disturbing the rest, even if that region is obscured by many others.    Input The first line consists of a single integer T indicating the number of test cases (about 25). Each test case consists begins with a single integer n indicating the number of regions. The next n lines consist of 4 integers x0, x1, y0, and y1 satisfying x0 < x1 and y0 < y1. This means the region covers all points (x,y) satisfying x0 ≤ x ≤ x1 and y0 ≤ y ≤ y1. As stated before hand, no corner of any region will intersect any other region anywhere. That is, if (x,y) is a corner point of one region and another region is described by x0, x1, y0, and y1, then we do not have x0 ≤ x ≤ x1 and y0 ≤ y ≤ y1. Bounds: 1 ≤ n ≤ 100 and each integer in a region description fits in a signed 32 bit integer.   Output The output for each test case is a single line containing a single integer that is the maximum number of regions that can be left on the wall such that no two regions share a common point in the deployment area.   Example  Input: 1 4 0 4 0 4 1 3 1 2 2 3 1 3 3 4 1 3 Output: 2 
cout<<ans*c<<endl cout<<ans*c<<endl holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 There is an unrooted tree, T, with L leaves and N nodes. (Leaves are nodes with degree = 1.)  For every node u, we define its rootScore. To calculate rootScore(u), first root the tree at u (which might be a leaf node).   We also define a coloring procedure for any rooted tree. First remove any existing color from all the nodes. Then select some nodes and apply the colorSubtree function on them. When colorSubtree is called on any node u, it colors the entire subtree of u, including u.  You need to color "exactly" floor(L / 2) of the leaves. So, for any root node u, you will get a set of nodes, S, such that applying colorSubtree on each of its elements will result in exactly floor(L / 2) the leaves to be colored.  Note that such a set always exist because one can always choose any of floor(L / 2) leaves that are not root and put them in S.  rootScore(u) is the minimum cardinality for such a set if u is the root of the tree. What is the minimum rootScore across all the nodes in T?   Input  First line contains N, the number of nodes in tree T. The next N-1 lines contain 2 space separated integers, u and v, each denoting that there is an edge between vertex u and vertex v.  Output Output a single integer, the answer to the problem.  Constraints  1 ≤ N ≤ 3000  1 ≤ u, v ≤ N   Example Input: 3 2 1 1 3  Output: 1 
ss[n]<=00 interval holds steps<i+00 steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
John wanted to buy gifts for some k children in his apartments on christmas. He goes to the shop and the shopkeeper shows him n gifts. How many ways John can choose k gifts from n total gifts ?. Since answer could be large print the answer mod 1000000007  NOTE : ordering of the gifts do not matter Different order of same set of gifts are considered same and should not be counted as different   Input The first line of the input contains an integer t, number of test cases next t lines follow with each line containing two integers (n and k) separated by space.  Output For each test case print the answer in a new line.  Constraints  0 < n <= 100000 1<  k <=  100000 1 < t <= 100  Example Input: 1 5 1 Output: 5  Explanation Example case .you can chose any one of the five gifts.so 5 ways 
interval interval steps<i+00 steps<i+00 steps<i+00 steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice is very fond of prime numbers. Given a number she wants to determine whether it is prime or not. If a number is prime she wants to know that which prime number is it. e.g. 2 is 1st prime number,3 is 2nd and so on.  Input First line of input contains number of test cases t. t lines follow. Each line contains a positive integer(<10^9).  Output For each test case output a single integer. If the number is not prime output -1 otherwise output a integer say n such that the number is nth prime number.  Example  Input: 3 2 3 4  Output: 1 2 -1 
mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
drawft.com/android  is hiring freshers. As they are giving opportunity to freshers, the number of applicants were too high and they don't have time to conduct personal interview for each candidate. Hence, they thought of conducting an elimination round. Help Bob to get Placed into the job. He can prove himself when he attends Personal Interview but the thing is how to cross the elimination round. In Elimination round, they divided entire people into different groups of varying sizes. Only one candidate from each groups will have a chance to attend interview. How they select that candidate is .. Consider there are N people in a group circularly (say person1 to personN), they give a sword to person1. now, showing the sword person1 asks person2 to go back home and passes it to person3 and the same process repeats until only one person left and that person will get a chance to attend interview. Help Bob to be that person in his group.    Input: Integer N  Output: Person who wins  Constraints 1<=N<=1000  Example 100   Output: 73 
{doThis {doThis {doThis que #\n second<<endl second<<endl str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 max++ max++ max++ max++ max++ max++ max++ max++ max++ cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 max++ max++ max++
Konahamaru and Naruto were on a mission to catch a fierce cat. After carrying out the mission successfully, both of them are feeling very hungry. Hence, they decided to go to the ramen shop to have some Ichiraku Ramen (A Japanese Dish). Good things do not come your way so easily, neither does Ichiraku Ramen. Chef at the ramen shop has given them a string of length L, consisting of only characters such as 'a', 'b' and 'c'. Naruto and Konahamaru have to calculate the number of non-empty valid substrings satisfying the following constraints in order to enjoy their meal.   The valid substring should contain atleast one occurrence of alphabet 'a' or 'b' They satisfy the following equation. Here,  f('x')  denotes the occurrences of character 'x' in the given input string  2 * f('a')  =   3 * f('b')..    Note: The valid substring may have any number of occurrences of 'c' but must have atleast one occurrence of 'a' or 'b'. or 'b'.     Input   First line of the input consists of T denoting  number of test cases.   Each test case consists of an integer L denoting the length of the string followed by a string of size L.    Output  For each test case, output the number of substrings satisfying the above criteria, in a separate line.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10^5     Example Input: 2 7 abbabab 7 aaabbbb  Output: 0 1    Explanation Example case 1. There is no string satisfying the second  condition Example case 2. The only string satisfying the above criteria is from index 0 to index 4 (assuming 0 based indexing) 
name name name name holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Majin has built certain brick towers. The N (1 ≤ N ≤ 25000) towers are conveniently numbered 1..N; tower i has height M_i (1 ≤ M_i ≤ 100000).  He wishes to modify the towers in the following fashion: He has a list of numbers B_1 through B_N (1 ≤ B_i ≤ 100000), and wants to change the tower heights to those heights B_1, ..., B_N in some order (not necessarily the order given or any other order derived from the data).  His strength is obviously, limited. It takes Majin a total X (1 ≤ X ≤ 100) effort per unit height added and Y (1 ≤ Y ≤ 100) effort per unit height reduced.  Majin would like to know the minimum possible total effort of modifying his towers if he picks the best permutation of heights. The answer is guaranteed to fit within a 32-bit signed integer.   Input  The first line has an integer 't' (1 ≤ t ≤ 10), the number of test cases. t cases follow.  Each test case begins with three space-separated integers on a single line: N, X, and Y. N lines follow, each with integers M_i and B_i.   Output  A single integer, the minimum total effort needed to rebuild the towers, for each test case, one per line.   Example  Input: 1 3 6 5 3 1 1 2 1 2  Output: 11  Explanation  Majin's towers have heights 3, 1, and 1. He would like to change them so that their heights are 1, 2, and 2, in some order. It takes 6 units of effort to add a unit of height and 5 to remove a unit of height.  Majin reduces the first tower's height by 1, for an effort of 5 (yielding towers of heights 2, 1, and 1). He then adds one unit of height to the second tower for an effort of 6 (yielding towers of heights 2, 2, and 1).   
vis[node] vis[node] x<=0000000000 x<=0000000000 x<=0000000000 byte[] byte[] Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n i<=int i<=int i<=int i<=int i<=int i<=int Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming ++n ++n ++n ++n ++n ++n ++n ++n longest longest longest longest longest longest longest longest longest longest longest longest longest longest Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest longest
 Given two integers 'A' and 'B', A MOD B is the remainder of the operation A / B.  For example, 7 MOD 3 = 1 14 MOD 3 = 2 27 MOD 3 = 0 38 MOD 3 = 2   Your program should accept 10 non-negative integers as input and output the number of distinct non-negative integers in the input, if they are considered MOD 42.   Input  The input has 10 test cases. Each Test Case contains 10 non-negative integers, each smaller than 1000, one per line.  Output  Output the number of distinct values when considered MOD 42, one per line for each test case.  Example   Input: 39 40 41 42 43 44 82 83 84 85 ... 9 more cases  Output: 6 ... 9 more answers 
cout<<temp+g<<endl holds holds holds holds a>c a>c #include<cassert> name name name name name lft[i]=w Point Point Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Given a positive integer 'N' , find the number of positive integers less than or equal to N, which are relatively prime to N.  Two positive integers 'a' and 'b' are called relatively prime if gcd(a,b) = 1 (Where gcd is Greatest Common Divisor).  Input  The first line consists of a number 't' which specifies the number of test cases. 1 ≤ t ≤ 10000. 't' lines follow with a number 'n' on each line. 1 ≤ n ≤ 10^6  Output  For each test case, output the number of positive integers less than or equal to N which are relatively prime to N.  Example  Input: 5 1 2 4 10 20  Output: 1 1 2 4 8 
Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Majin wants to label his N (1 ≤ N ≤ 1,000,000) towers. He has lost the labels with the digit L (0 ≤ L ≤ 9) written on them. Assume he has sufficient labels to complete the task.  If the towers are labeled with the smallest set of N positive integers that don't have the digit L, what is the largest number that Majin will label the tower as ?  Input  The first line has an integer 't' (1 ≤ t ≤ 10), the number of test cases. t cases follow.  Each test case containse two space-separated integers on a single line: N and L  Output  A single integer that is the largest number a tower can have.  Example  Input: 1 10 0  Output: 11  Explanation  The smallest 10 numbers he can use are: 1, 2, 3, 4, 5, 6, 7, 8, 9, and 11.   
vb& vb& vb& interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD Programming check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f _f _f elem ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n form form form form form form form form form form form form Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f elem elem elem ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n
Given an array A consisting of N integers with element at position i denoted by A[i]. Find the minimum number of disjoint contiguous subarrays into which original array can be split such that the sum of elements included over all the sub-arrays must be greater than or equal to M. Any element of the original array can be left out and may not be included in one of the disjoint sub-array obtained after splitting.  More formally, if S1, S2, S3.. ,SK are the K disjoint subarrays obtained, then following equation should hold true:-  Sum(S1) + Sum(S2) ... + Sum(SK) ≥ M  There will be multiple queries each containing different values of M. You have to answer such queries as fast as possible. If it is not possible to split in such a way, print "Not Possible" without quotes.  Input   First line of input contains N denoting number of elements in the array Next line contains N space separated integers denoting number of elements in the array.  Next line contains  Q  denoting number of queries.  Each query contains the sum required M   Output   For each query output the required number of disjoint sub-arrays or "Not Possible" (without quotes) if sum cannot be obtained.   Constraints   1 ≤  N  ≤ 100  1 ≤  M  ≤ 10^9  1 ≤ Q  ≤  50000 |Ai| ≤ 10^9   Example Input: 6 1 -1 -2 1 1 1 1 4  Output: 2  Explanation We can take two sub-arrays [1,1] and [4,6] and we can get the required sum 3.( assuming 1- based indexing) 
mark[x][y]=0 Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Alice and Bob play the following game. They choose a number N to play with. The rules are as follows :   1) Alice plays first, and the two players alternate.   2) In his/her turn, a player can subtract from N any proper divisor (not equal to N) of N. The number thus obtained is the new N.   3) The person who cannot make a move in his/her turn loses the game.   Assuming both play optimally, who wins the game ?   Input :   The first line contains the number of test cases T. Each of the next T lines contains an integer N.   Output :   Output T lines, one for each test case, containing "ALICE" if Alice wins the game, or "BOB" otherwise.   Sample Input : 2 1 2    Sample Output : BOB ALICE    Constraints : 1 ≤ T ≤ 10000 1 ≤ N ≤ 1000000000    Note : For the first test case, Alice cannot make any move and hence Bob wins the game. For the second test case, Alice subtracts 1 from N. Now, Bob cannot make a move and loses the game. 
x*temp*temp%MOD x*temp*temp%MOD steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n ++n factor*A[row][j] factor*A[row][j] factor*A[row][j] 0*h 0*h 0*h holds holds holds holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<<
  Problem description.  Input No input.  Output  First line of output is number of digits that are present in the maximum factorial that is formed using three digits Second line of output is the maximum factorial that is  formed by three digits  
_R
Little Alice likes to play with her collection of N integers. She knows her collection very well, and often likes to come up with different observations about the numbers. For example, Alice had recently learned that two numbers can be jealous of each other in case they have a non-trivial common divisor (i.e. greater than one divisor). For example, the numbers 8 and 12 are jealous of each other, because they have common divisor 4. But the numbers 8 and 9 aren't jealous of each other, because they don't have any common divisors other than 1. Alice wants to organize a tea-party, and to invite some of the numbers from her collection. She wants to invite as much numbers as possible, in such a way that no two number among the invited are jealous of each other. Please help her to find the maximal amount of numbers she can invite.  Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the amount of numbers in Alice's collection. The second line contains N space-separated integers A1, A2, ..., AN denoting the numbers from the collection.  Output For each test case, output a single line containing the maximal amount of numbers that can be invited to the tea-party.  Constraints  1 ≤ T ≤ 10^4 1 ≤ N ≤ 10^3 1 ≤ Sum of N over all the test cases in a single file ≤ 10^4 1 ≤ Ai ≤ 10^3   Example Input: 2 5 1 2 3 4 5 2 7 7  Output: 4 1  Explanation Example case 1. Alice can invite 1, 2, 3 and 5. This is the maximal set of numbers she can invite. Example case 2. One number will be jealous to the other one, so Alice can invite only one of those. Please note that the numbers are not necessarily different. 
ans[i]+=ans[edges[i][j] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n ++n ++n //to ans/0 ans/0 ans/0 ans/0 str[i+0] str[i+0] str[i+0] str[i+0] second]+M0[V[i] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Problem description. An array of n integers(0 to 9) is given printing array elements gives an number.You have to find a number that is formed with the elements that are in array which is next higher number than number formed in given order.if there is no such number just print 'NO NXTBIG' without quotes.  Input Input description.  First line of input contains an integer T denoting number of test cases First line of each test case contains an integer n denoting number of elements in array next line contains n space separated integers(0 to 9)    Output Output description. For each test case the output contains two lines in which first line contains the number formed by placing the digits in input order and the next line contains the next big number formed from the given digits  Constraints  1 ≤ T,n ≤ 10^5 0 ≤ array element ≤ 9     Example Input: 4 6 7 6 9 3 1 2 5 1 0 7 6 2 11 2 3 5 1 2 3 8 7 5 5 4 5 5 4 3 2 1 Output: 769312 769321 10762 12067 23512387554 23512435578 54321 NO NXTBIG    Explaination:   In the given example the output contains first line as the number we get from input 769312 and the next line contains the next big number we get from given digits ie 769321   In second test case the first number is 10762 and the second line is the next highest number ie 12067   In third test case the first number is 23512387554 and the second line is the next highest number ie 23512435578   
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl #\n #\n second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 A positive integer is called a palindrome if its representation in the decimal system is the same when read from left to right and from right to left. For a given positive integer K of value not more than 100000 , write the value of the smallest palindrome larger than K to output. Numbers are always displayed without leading zeros.   Input  There is a single positive integer T on the first line of input. It stands for the number of numbers to follow. Then there are T lines, each containing exactly one positive integer number N, 1 ≤ N ≤ 10000   Output  For every input number N, output a single line containing the  smallest integer value which is a palindrome and greater than N.   Example  Input: 3 14604 3902 153 Output: 14641 3993 161 
print_bn print_bn print_bn cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You have an N×N matrix of integers. You may perform four types of operations on the matrix:  Choose a row and increment every integer in this row by one. Choose a row and decrement every integer in this row by one. Choose a column and increment every integer in this column by one. Choose a column and decrement every integer in this column by one.   You may perform the above operations any number of times. Is it possible that all the integers in the given matrix become zeros in the end?  Input The input begins with the number of test cases T. Each test case has an integer N on the first line. Then N lines follow. Each line has N space separated integers giving one row of the matrix.  Output For each case, output "Yes" if you can turn all integers in the given matrix into zeros. Otherwise output "No".   Constraints  T ≤ 100 1 ≤ N ≤ 50 The absolute value of any integer in the matrix does not exceed 100   Example Input: 2 3 2 1 0 1 0 -1 2 1 0 2 1 0 0 0  Output: Yes No  Explanation Example 1: You may decrement the first and last row, decrement the first column and increment the last column. 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Bohan loves milk tea so much and he drinks one cup of milk tea every day. The local shop sells milk tea in two sizes: a Medium cup for $3 and a Large cup for $4. For every cup of milk tea purchased Bohan receives a promotional stamp. Bohan may redeem 6 stamps for a free drink of milk tea regardless of the size. No stamp will be given for a free drink.   Determine the amount of money Bohan have spent on milk tea, given a sequence of milk tea sizes he got in the past a few days. Assume Bohan had no stamps in the beginning and he always redeemed the stamps for the next drink once he had collected 6 stamps.  Input The input begins with the number of test cases T. Each test case has a single line of letters. The i-th letter is either 'M' or 'L' denoting a Medium cup or a Large cup of milk tea Bohan got on the i-th day.  Output For each case, output the amount of money in dollars Bohan have spent on milk tea.  Constraints  T ≤ 100 1 ≤  length of each sequence ≤ 100    Example  Input: 3 MLM MMLLMMLL MMMMMMML  Output: 10 24 22  Explanation Example 1: Bohan didn't redeem any stamps. Example 2: Bohan redeemed 6 stamps for the Large cup of milk tea on the 7th day. Example 3: Bohan redeemed 6 stamps for the Medium cup of milk tea on the 7th day. 
interval x*temp*temp%MOD holds x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
It is well known that at Progteam you may enjoy coding with pizza :) However ordering pizzas is not that easy for the Progteam coach. This is because each student may eat a different number of pizza slices, and pizzas of different sizes have different number of slices. When ordering, the coach must ensure that there are enough number of pizza slices so that nobody stay hungry, and also there will be as few leftover slices as possible so that we don't waste food. The coach has collected some information about the number of slices required:  There are SD students who do not like pizza, and each needs 0 slices. There are SH students who are hungry, and each needs 1 slice. There are SV students who are very hungry, and each needs 2 slices. There are SE students who are extremely hungry, and each needs 3 slices.   The nearby restaurant has three types of pizza available:  A small pizza with 4 slices. Each costs PS dollars. A medium pizza with 6 slices. Each costs PM dollars. A large pizza with 8 slices. Each costs PL dollars.   Your task is to help the coach find a best order of pizzas for given values of SD, SH, SV, SE, PS, PM, PL. The order shall minimize the number of pizza slices, while providing enough slices for all the students as required. If there are multiple such orders, you shall find the cheapest order. It there are still multiple possible orders, you may choose any of them.  Input The input begins with the number of test cases T. Each test case contains one line of 7 space separated integers for SD, SH, SV, SE, PS, PM, PL respectively.  Output For each case, output three space separated integers for the best order: the number of small, medium and large pizzas respectively.  Constraints  T ≤ 100  SD, SH, SV, SE ≥ 0  0 ≤ SD + SH + SV + SE ≤ 100  1 ≤ PS, PM, PL ≤ 1000   Example Input: 2 3 14 8 1 15 22 27 1 14 5 0 16 24 32  Output: 1 1 3 0 0 3  Explanation Example 1: We need 33 slices in total. It is not possible to order pizzas with exactly 33 slices. The smallest number larger than 33 we can do is 34. Example 2: We need 24 slices. It is possible to order exactly 24 slices (3 large pizzas will do). Other orders are also possible at the same price. 
mark[x][y]=0 mark[x][y]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 xx<=r-0 xx<=r-0 level[000000] j++ j++ j++ cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Alice and Bob are playing a game. On the desk there are N stones. Alice and Bob take the stones in turn. Alice goes first. In each Alice's turn, Alice has to take at least Amin stones but no more than Amax stones. In each Bob's turn, Bob has to take at least Bmin stones but no more than Bmax stones. The player loses if he/she cannot take a number of stones satisfying the requirement. Both Alice and Bob play optimally. Who will win in the end?  Input The input begins with the number of test cases T. Each case has five integers in a line: N, Amin, Amax, Bmin, Bmax.  Output For each case, output "Alice" if Alice wins and "Bob" otherwise.  Constraints  T ≤ 100 1 ≤ N ≤ 10^5 1 ≤ Amin ≤ Amax ≤ N 1 ≤ Bmin ≤ Bmax ≤ N   Example Input: 3 5 1 3 1 3 5 1 2 1 3 10 1 2 2 3  Output: Alice Bob Alice  Explanation Example 1: In the 1st turn Alice can take 1 stone. No matter how many stones Bob takes in the 2nd turn, Alice can always take the rest in the 3rd turn. Example 2: If Alice takes 1 stone in the 1st turn, Bob can take 1 stone in the 2nd turn and Alice will face 3 stones in the 3rd turn and she will lose. If Alice takes 2 stones in the first turn, Bob can take all the remaining 3 stones. 
x*temp*temp%MOD x*temp*temp%MOD _f ans[i]+=ans[edges[i][j] cout<<temp+g<<endl a[00000]={0} a[00000]={0} a[00000]={0} a[00000]={0} ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Ratnadeep is the president of the robotics club of his college. Recently, his club has organized an inter-college competition, which was a grand success. However, when the competition ended, Ratnadeep realized that he has to clean up all the mess created as a result of the event, and the rest of the members of the club have already left for home. The mess was mainly created because of empty cardboard boxes which once contained the equipments required for the event. The cardboard boxes are of cubical shape and are of various sizes. All he has to do is pack one cardboard box inside another, pack the resulting box into another empty box and so on. Also since there is a shortage of space in the club room, he has to pack the boxes in such a way that he finally ends up with the minimum number of packed cardboard boxes possible. Note that a cardboard box can be packed inside another cardboard box only if its size (ie. Length of an edge) is strictly smaller than the second one and only one box (empty or packed) can be packed inside another box. At the moment, he is feeling very exhausted, but being the president of the club he cannot run away from his responsibilities. So he needs your help. You will be provided with the sizes of the various cardboard boxes (which is nothing but an integer denoting the length of an edge of the cube). You have to calculate the minimum number of boxes into which Ratnadeep can pack all the boxes.  Input The first line consists of T denoting the number of test cases. T test cases follow. The first line of each test case consists of an integer N, denoting the number of cardboard boxes. The next line contains N integers – A1, A2, ... , An – denoting the sizes of the cardboard boxes.  Output For each test case output with a single line, the minimum number of cardboard boxes into which all the boxes can be packed.  Constraints 1<=T<=25 1<=N<=10^5 1<=A[i]<=10^9 Sum of N over all test cases <= 10^6  Example Input: 2 5 5 6 8 9 2 7 1 9 5 2 5 1 6 Output: 1 2  Explanation In example case 1, Ratnadeep can pack the boxes as follows: Box of size 2 is packed inside box of size 5. This box is then packed inside the box of size 6, which is then packed inside box of size 8 and then packed into the largest one(ie. of size 9) 
dep Bhardwaj holds holds holds holds holds holds cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Given a sequence of numbers, find the absolute difference between the number of odd numbers and number of even numbers in a given sequence.   Input  The first line will contain the number of numbers in the sequence. And the second line will contain the sequence itself i.e. a series of integers separated by a space   Output  Print a single integer , giving the absolute difference between the number of even and number of odd numbers.   Example  Input: 5  72 33 76 514 985 Output: 1 
&man_list[i][j]
 It's a rainy day and Vignesh and Aravind are stuck inside watching the rain. They decide to invent a game, the rules for which are described below. Given array A containing n integers, they take turns making a single move. Both players are moving optimally (playing to win and making no mistakes). During each move, the current player chooses one element from A, adds it to their own score, and deletes the element from A; because the size of A decreases by 1 after each move, A's size will be 0 after n moves and the game ends (as all elements were deleted from A). We refer to Vignesh's score as Sv and Aravind's score as Sa. Aravind wins the game if |Sa-Sv| is divisible by 7; otherwise Vignesh wins. Given A, determine the winner.   Input The first line contains an integer, T, denoting the number of test cases. Each test case is comprised of two lines; the first line has an integer n, and the second line has n space-separated integers a0,a1,…,an−2,an−1 describing array a.  Note:Sa+Sv=a0+a1+...+an−2+an−1.   Output For each test case, print the winner's name on a single line; if Vignesh wins print Vignesh, otherwise print Aravind.  Constraints  1 ≤ T ≤ 100 1 ≤ a[i] ≤ 2000 1 ≤ N ≤ 200     Example Input: 2 3 7 6 18 1 7  Output: Vignesh Aravind     Explanation (Assuming Vignesh plays first, without loss of generality)  Test Case 1 Array A={7,6,18}. The possible play scenarios are: Sv=13, Sa=18, |Sv−Sa|=5, and 5%7≠0. Sv=24, Sa=7, |Sv−Sa|=17, and 17%7≠0. Sv=25, Sa=6, |Sv-Sa|=19, and 19%7≠0. In this case, it doesn't matter what Vignesh chooses because the difference between their scores isn't divisible by 7. Thus, Vignesh wins.  Test Case 2 Array a={7}. Vignesh must choose that element, the first move ends the game. Sv=7, S=0, |Sa−Sv|=7, and 7%7=0. Thus, Aravind wins. 
lft[i]=w 0LL<<digits[i] 0LL<<digits[i] form form form cout<<ans*c<<endl second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Raavan abducted sita in the past, at that time when Ram went to save her wife , he was posed a question by Raavan in binomial theorem :  given N Ram has to find the number of odd coefficients in the expansion of (1+x)^n . As the number given by Raavan was huge, Ram was unable to calculate at that time , so he was forced to save sita through war which resulted in loss of  huge troop of monkeys and humans. Now you are given a time machine to travel back to that age. can you solve the question posed by Raavan and avoid the war and save many lives including Raavan.  Input one line consisting of a number N .  Output single line denoting your answer to Raavan.  Constraints  1 ≤ N ≤ 10000000   Example Input: 3 Output: 4  Explanation The coefficients for binomial expansion of (1+x)^3 are 1 3 3 1, out of which all are odd ,so answer is 4. 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Given a weighted, undirected graph G of n vertices and m edges, we say that there is a road from vertex A to vertex B if for a given value r, there exists at least one path from A to B such that the minimum weight edge on the path is at least r. You would be given q queries, each of them is a value of r. For each query, output a single integer, the number of distinct, un-ordered pair of vertices A, B such that there exists a road in between them.    Input First line contains 3 space-separated integers: n, m, q (in that order). The next m lines also contain 3 space-separated integers each. The i^{th} of these lines contain u_i, v_i, w_i. It means that there is an edge between vertices u_i and v_i of weight w_i. The next line contains q space-separated integers representing the q queries.    Output Output a single line containg q space separated integers, the responses of the q queries.    Constraints 1 <= n, q, m <= 100,000 0 <= Weight of each edge <= 1,000,000,000.    Example Input: 3 3 2 1 2 3 2 3 2 2 1 1 2 3  Output: 3 1 
//cout<<v[i]<< mark[x][y]=0 mark[x][y]=0 mark[x][y]=0 ++n ++n form check[0]= cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl rr x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
N cars are racing on a straight road. You are given their position and velocity at time t = 0. Each car is moving in the same direction with a constant positive velocity. Find the number of overtakes that take place in the race, if the race ends at time t = T0.  A car A is said to have overtaken a car B if there exists a time t0 such that car A was strictly behind car B for time 0 <= t < t0 but is strictly ahead of car B for time T0 ≥ t > t0  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two space separated integers: N denoting the number of cars and T0 denoting the race end time. In the next N lines, each contain two space separated integers: Xi and Vi, denoting the i^th car's starting position and velocity respectively.   Output  For each test case, output a single line containing the number of overtakes that take place.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10^5 1 ≤ T0, Xi, Vi ≤ 10^9   Example Input: 2 3 5 1 3 2 2 1 1 4 2 1 2 1 4 2 2 4 1  Output: 1 2  Explanation Example case 1. The first car will overtake the second car at time 1.  Example case 2. The second car will overtake the third car at time 0.5 and the second car will overtake the fourth car at time 1. We count these towards the answer. The first car overtakes the fourth car at time 3 and the third car overtakes the fourth car at time 2. We do not count these towards the answer. 
++n A[i][k] A[i][k] A[i][k] ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 level[000000] holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
In some Asian countries, 8 and 6 are considered lucky digits. Any number containing only 8s and 6s is considered lucky number, e.g. 6, 8, 66, 668, 88, 886 .... Nguyen is a student who likes mathematics very much. Nguyen likes lucky numbers but only of the form  S = 8...86...6  where S has at least one digit and the number of 8s or 6s can be zero. Examples of S are 8, 88, 6, 66, 86, 886, 8866 ...  Given a positive integer X (1 < X < 10 000), Nguyen wants to find the smallest lucky number S which has at most 200 digits and is divisible by X.  Your task is to write a program to find that number for Nguyen.   Input The input file consists of several data sets. The first line of the input file contains the number of data sets which is a positive integer and is not bigger than 20. The following lines describe the data sets.  For each data test, there is one single line containing the integer X.   Output Output description..For each data test, write in one line the smallest lucky number S which is divisible by X. In case there is no such a number which has at most 200 digits, write -1..   Example  Input: 4 6 8 43 5  Output: 6 8 86 -1  
ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
The problem which arises with the usual printing devices is that they print only in serial format. They start printing or displaying text from the left most character and proceed towards right to display a line. Due to this it is difficult to print different formats of data and the design patterns efficiently on screen. Your task is to print a matrix of order n*n with numbers from 1 to n2 in a spiral format. In this format the entry of numbers start from center of the matrix and the filling is proceeded in the anticlockwise direction. The ending cell for even values of n is the first cell (1, 1) and for the odd values of n is the last cell (n, n) of the matrix.  Input The input consists of a single number n such that 0 < n < 15.  Output The output consist of an n*n matrix filled in spirally anticlockwise direction.  Example 1  Input: 4  Output: 16	15	14	13 5	4	3	12 6	1	2	11 7	8	9	10   Example 2  Input: 5  Output: 17	16	15	14	13 18	5	4	3	12 19	6	1	2	11 20	7	8	9	10 21	22	23	24	25  
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A rat started his search of cheese from the (1,1) cell and has to reach (n,n) cell for it. He can move only in the 4 directions i.e. left, right, up or down. The obstructed cells for the rat are marked with 1 and allowed cells are marked with 0 in the maze. Your task is to find a path through which the rat move from the starting position (1,1) to the final position where cheese is (n,n). List the total no of possible paths which the rat can take to reach the cheese.  Input First line contains the size of the square maze. The next n lines contain n binary values separated by space. 0 denotes an open cell while 1 denotes a blocked cell. You have to find paths which contain only cells which are open, and finally print the total no of such unique paths. Retracing the 1 or more cells back and forth is not considered a new path. The set of all cells covered in a single path should be unique from other paths  Output The output should be the total no. of paths possible on the first line.  Example  Input:  7  0 0 1 0 0 1 0 1 0 1 1 0 0 0 0 0 0 0 1 0 1 1 0 1 0 0 0 0 1 0 1 1 0 1 0 1 0 0 0 0 1 0 1 1 1 1 0 0 0  Output:  4 
cr-0 cr-0 holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There are n bulbs in a row lighted during a marriage ceremony. A mischievous boy was passing from nearby when he had a naughty idea of breaking the bulbs. To make it interesting he does so in a pattern. He decides to smash every second lighted bulb on his first traversal, every third lighted bulb on his second traversal and so on. Getting exhausted at end he found that some of the bulbs remain lucky, not to be broken even during his indefinite process. Your aim is to design a program which takes the input n i.e. number of bulbs and finds the position number of the still lighted bulbs.  Input First line contains number of test cases t such that  0 < t < 15 The next t lines contain a single integer (n) each, such that  0 < n < 10000.  Output The output should consist of t lines. Each line containing a single space separated positions of the lighted bulbs after the process.  Example  Input: 3 10 20 50  Output: 1 3 7 1 3 7 13 19 1 3 7 13 19 27 39 49 
macros practise ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n pp pp pp pp a[i]== a[i]== a[i]== ans/0 ans/0 ans/0 ans/0 ans/0 fpow fpow byte[] byte[] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Rohit is very fond of mathematics. He wishes to create a sequence of numbers. The nth number in the series f (n) denotes the number of occurrences of the number n in the series. The series has first 2 elements as 1 and 2. The sequence goes as follows: _N_ : 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12... f(N) : 1, 2, 2, 3, 3, 4, 4, 4, 5, 5, 5,  6 ... Your aim is to provide the value of the function f (n) most efficiently.  Input The first line of input consists of a single integer t denoting number of test cases. Each of the next t lines will have an integer value n.  Output The output should consist of t lines, each line giving the value of function f (n) for the corresponding n.  Example  Input:  3 10 20 100   Output:  5 8 21  
geeks _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n pp pp brr[00000] brr[00000] brr[00000] ans/0 orez orez orez orez orez orez x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w _f _f _f _f _f _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n eg eg eg eg eg orez orez orez orez x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD interval interval interval interval _f _f _f _f _f _f _f _f _f _f eg eg eg eg eg eg eg eg eg eg eg eg orez orez
Children of New Bernsburg love to play creative games. Once upon a time they decided to play a game called, "KING OF THE RING". In this game they form a ring, a random child is selected and they start counting clockwise from that child until a fixed number (n, which is given at the starting of the game) is reached. When the count reaches n, the child on the nth spot is eliminated. The game continues again starting with the next child and the process continues until a single child remains. Your aim is to print the position of the child which remains till last and hold the title King of the Ring.  Input The first line of input contains number of children, m and the second line contains the fixed number, n, the factor by which children are eliminated.  Output The output must print the position of the last child staying in the game.  Example  Input:  10 6  Output:  3  
Bhardwaj Bhardwaj Bhardwaj Bhardwaj holds holds holds holds rr rr A[0] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Gas leakages at chemical plants might prove to be fatal and put the lives of the workers at risk. The aim is to detect the leakage of a gas and prevent its explosion. Our friend Ramesh has successfully obtained the tender to set up a chemical plant to supply fertilizers to the nearby villages. A magnanimous person by heart, he has always put the welfare of the workers above all. So, safety measures have to be taken. For that worst case possibility is considered here. The rooms of the plant can be modelled as axb matrix. The gas used in his plant has a queer property. In times of its leakage, it expands according to the following rules: If at time t, gas leaks from room (x ,y), then at time t+1 it can breaks the doors of atmost two more rooms out of (x+1,y), (x-1,y), (x,y+1), (x,y-1) and expands. For example if at t = 0 sec if the gas occupies (2, 3), then at time t = 1 sec, the rooms filled with gas can be any of the given 6 possibilities:  1. Rooms at (2,3), (3,3) and (2,4).  2. Rooms at (2,3), (3,3) and (1,3).  3. Rooms at (2,3), (3,3) and (2,2).  4. Rooms at (2,3), (2,4) and (1,3).  5. Rooms at (2,3), (2,4) and (2,2).  6. Rooms at (2,3), (2,2) and (1,3).  Note: At t= 2 sec, it can expand from all the rooms that are full of gas t= 1.  The gas explodes after gas fills all the rooms and there is no room for it to expand. Find the minimum time gas takes for the whole plant to explode and help Ramesh ensure the safety of his workers.  Input T - The number of test cases. a b - number of row and columns in the room matrix. x y- coordinate of the room where the gas leaked  first.  Output The minimum time in seconds the plant take to explode.  Constraints 1 <= T <= 50  1 <= a, b <= 10000  1 <= x <= n  1 <= y <= m   Example Input: 2 9 9 2 6 1 1 1 1   Output: 12 0  
assigned assigned byte[] byte[] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w A[0] elem elem elem elem elem elem ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n i<=int i<=int Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming _f _f _f _f _f _f _f ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Vector Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming Programming
  A large quantity of goods are being produced by the factory every day. Consider the carrier machine of the factory which is used to transport the finished products from the workshop to the dispatch centre. Finished products are kept on the carrier machine from one end, the machine takes the products to the dispatch centre, and the products are taken out at the dispatch center. The machine can take n products in t minutes and return in t minutes. m products arrive at the terminal by a given schedule. What is the earliest time that all the products can be transported to the center? What is the minimum number of trips that the operator must make to deliver all products by that time?     Input The first line of input contains c, the number of test cases. Each test case begins with n, t, m. m lines follow, each giving the arrival time for a product (in minutes since the beginning of the day). The operator can run the machine whenever he or she wishes, but can take only the products that have arrived up to that time.  Output For each test case, output a single line with two integers: the time, in minutes since the beginning of the day, when the last product is delivered to the other side of the river, and the minimum number of trips made by the machine to carry the products within that time. You may assume that 0 < n, t, m < 1440. The arrival times for each test case are in non-decreasing order.  Example Input: 2 2 10 10 0 10 20 30 40 50 60 70 80 90 2 10 3 10 30 40   Output: 100 5 50 2    
cout<<temp+g<<endl cout<<temp+g<<endl seen seen cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  ACP Pradyumn is on his way to catch the mastermind behind the Hyderabad bomb blasts. The mastermind, on the other hand, challenges the ACP by generating a sequence of numbers for him.  There is a sequence of n numbers, which can be both positive and negative. The task is to find the number of continuous sequence of numbers such that their sum is zero.  For example if the sequence is: 5, 2, -2, 5, -5, 9 There are 3 such sequences 2, -2 5, -5 2, -2, 5, -5 Since the ACP is having difficulty in solving the problem, he asks for your help. Your goal is to find number of such sequences to help the ACP in catching the terrorist.     Input First line contains T - number of test cases Second line contains n - the number of elements in a particular test case. Next line contain n elements, ai  (1<=i<= n) separated by spaces. Output The number of such sequences whose sum if zero.  Constraints 1<=t<=5 1<=n<=10^6 -10<= ai <= 10   Example Input: 2 4 0 1 -1 0 6 5 2 -2 5 -5 9   Output: 6 3    
sum0 holds holds holds holds holds holds holds holds holds holds c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  In a war of Wasseypur, Faizal Khan was desperate to kill Sultan. He already knew Sultan was going to attack him. Sultan has to meet an important person in Kabal Bagh. Since Faizal Khan somehow, is aware of Sultan's meeting, he has planted master-bombs in the park. Sultan, somehow, had the premonition of Faizal's plan. He took along with him bomb diffuser. But each Master bomb is surrounded by either wall or bombs on each side (north,east,west,south). As soon as Sultan reaches the garden he notes down the coordinates of the bombs that have been planted. Now he has to count the Master bombs that have been placed on the area. Given position of all the bombs help Sultan to count the number of Master Bombs so that he can diffuse them.     Input First line contains t, the number of test cases. The next line contains n, the number of bombs in the grid. Next n lines contain the coordinates of the bombs (xi,yi).  Output Output the number of Master bombs.  Constraints 1<=t<=10 1<=n<=500 0<= xi,yi<=200  Example Input: 2 5 1 1 0 1 1 0 6 1 1 9 8 1 1 4 2 3 1 1 2 0 2 0 1 1 0 1 3   Output: 1 2  
Found cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 sum0 sum0 sum0 cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl cout<<ans*c<<endl rr rr rr A[0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  The alphabet of Zorpia is quite peculiar. It consists of only two letters, A and B and that too in upper-case only. A visitor to Zorpia is amazed by the diversity of words formed by the combination of A and B. He notices one more peculiar thing about the words. All the words were of even length and the number of A’s in the word is equal to the number of B’s. One of the natives told him that it is the number of transitions in the word that guides the pronunciation of the words. The words having same number of transitions are pronounced almost similarly. Let us define what transition means here. A transition occurs in a word whenever there is a change from A to B. Eg: consider the word ABAB. It has three transitions. First when going from index 1 to 2, second when going from 2 to 3 and third when going from 3 to 4. Given the length of the word and the number of transitions, the visitor needs to find out how many such words are possible from the alphabet of Zorpia and following the rules for word as described above.     Input The input consists of several test cases(5000 atmost). Each test case consists of two integers n and k where n is the length of word and n(2<= n <=10000) is even. K is the number of transitions. The input is terminated by n=k=0.  Output For every test case output on a line an integer which is the number of words possible modulo 1,000,000,007.  Example Input: 6 2 6 3 0 0   Output: 4 8     Explanation For the first case the 4 words are AABBBA, ABBBAA, BAAABB, BBAAAB . 
0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Social networking has become an epidemic in the current century. Nowadays these sites are being used to expand our network. For some people, growing their social network has become an addictive hobby like stamp collecting. Your task is to observe the interactions on such a website and keep track of the size of each person’s network. Assume that every friendship is mutual. If Aniket is Pranjal’s friend, then Pranjal is also Aniket’s friend.     Input The first line of input contains one integer specifying the number of test cases to follow. Each test case begins with a line containing an integer F, the number of friendships formed, which is no more than 100,000. Each of the following F lines contains the names of two people who have just become friends, separated by a space. A name is a string of 1 to 20 letters (uppercase or lowercase).  Output Whenever a friendship is formed, print a line containing one integer, the number of people in the social network of the two people who have just become friends.  Constraints   0< T < 10  1< F < 99999  Example Input: 1 3 Ankit Suraj Suraj Birbal Birbal Ramesh  Output: 2 3 4    
pra pra pra pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Alice and Bob want to go on holiday. Each of them has drawn up a list of cities to be visited in turn. A list may contain a city more than once. As they want to travel together, they have to agree upon a common route. No one wants to change the order of the cities on his list or add other cities. Therefore they have no choice but to remove some cities from the list. Of course the common route is to involve as much sight-seeing in cities as possible. There are exactly 26 cities in the region. Therefore they are encoded on the lists as lower case letters from 'a' to 'z'.   Input The first line of input contains a number T ≤ 10 that indicates the number of test cases to follow. Each test case consists of two lines; the first line is the list of Alice, the second line is the list of Bob. Each list consists of 1 to 80 lower case letters.   Output The output for each test case should contain all different trips exactly once that meet the conditions described above. There is at least one such trip, but never more than 1000 different ones. You should order the trips in lexicographic order. Print one blank line between the output of different test cases.   Example  Input: 1 abcabcaa acbacba  Output: ababa abaca abcba acaba acaca acbaa acbca  
ss[n]<=00 holds holds ruofytriht ruofytriht A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Flavius Josephus and 40 fellow rebels were trapped by the Romans. His companions preferred suicide to surrender, so they decided to form a circle and to kill every third person and to proceed around the circle until no one was left. Josephus was not excited by the idea of killing himself, so he calculated the position to be the last man standing (and then he did not commit suicide since nobody could watch).  We will consider a variant of this "game" where every second person leaves. And of course there will be more than 41 persons, for we now have computers. You have to calculate the safe position. Be careful because we might apply your program to calculate the winner of this contest!   Input The input contains several test cases. Each specifies a number n, denoting the number of persons participating in the game. To make things more difficult, it always has the format "xyez" with the following semantics: when n is written down in decimal notation, its first digit is x, its second digit is y, and then follow z zeros. Whereas 0 ≤ x,y ≤ 9, the number of zeros is 0 ≤ z ≤ 6. You may assume that n>0. The last test case is followed by the string 00e0.   Output For each test case generate a line containing the position of the person who survives. Assume that the participants have serial numbers from 1 to n  and that the counting starts with person 1, i.e., the first person leaving is the one with number 2. For example, if there are 5 persons in the circle, counting proceeds as 2, 4, 1, 5 and person 3 is staying alive.   Example  Input: 05e0 01e1 42e0 66e6 00e0   Output: 3 5 21 64891137   
x*temp*temp%MOD holds holds holds holds holds second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Leonardo da Vinci is preparing the background for his new painting. Since this is the computer age, he is using an electronic paper which is initially white. Paper is a MxN rectangular gird having MxN square cells. With paint(i,j) operation, his computer fills the cell(i,j) of the paper with black color. However, at any point in time, he may want to know the size of biggest black segment. Black Segment is defined as the group of cells in which any two vertical or horizontal neighboring cells are black. He asks for your help to complete the above task.   Input  The first line contains two integers, M and N. Next line contains an integer Q,  where Q is total number of queries. The following Q lines each have a query Qi containing an integer B. B is either 0 or 1. If B is 1, two integers i and j follow which corresponds to the operation paint(i,j) (1-based index).   Output  For every query with B=0, output the size of biggest black segment.   Example  Input: 3 3 9 1 2 1 0 1 1 3 0 1 3 3 1 2 3 0 1 2 2 0  Output: 1 1 3 5        Figure from Example.   Constraints:   1   <=   M,N   <=   1000.  1   <=   Q   <=   10^6.  B will be either 0 or 1.  1   <=   i   <=   M  1   <=   j   <=   N 
holds interval interval interval tw[j] tw[j] tw[j] holds holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Alice and Bob are playing a game. Alice gives Bob a string S. Then, she asks him Q queries. The positions in the string are labelled as 1, 2, 3, ..., |S| (|S| denotes the length of S). Each query is of the form [l, r]. Bob has to form a palindromic string using some of the characters at positions that lie in the range [l, r]. More formally, he can pick characters at position i such that  l ≤ i ≤ r . He can rearrange them the way he wants. Now, for each query Alice wants to know what is the maximum length of the string Bob can form. Note: A string is said to be palindromic if it reads same forward or backward. For example, aa, bab are palindromic while ab, abc are not.  Input First line of the input contains the string S. Next line contains a single integer Q which denotes the number of queries. Each of the next Q lines have two space separated integers l and r.  Output For each test case, output a single integer which is the maximum length of a palindromic string that Bob can form in that case.  Constraints  1 ≤ |S| ≤ 2 × 10^5 1 ≤ Q ≤ 2 × 10^5 S contains only lower case English alphabets ('a'-'z')   Example Input: aabb 3 1 3 1 4 3 3  Output: 3 4 1    Explanation Example case 1. Bob can form aba Example case 2. Bob can form abba or baab Example case 3. Bob can form b 
interval steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Arora is a content person because, his name can be spelt the same, when seen from both left and right sides, ie. a palindrome. Seeing this, his friend, gagan, also wanted to have something unique about his name. So, he finds out, that by changing a single letter of his name(gaga'g'), his name also becomes a palindrome. Arora has many other friends and want to find out the same. They seek your help, to find out if the same can happen with their names. Remember, just a single digit can be changed.   Input Input description.  The first line of the input contains an integer T denoting the number of test cases. Next T lines contains a string S consisting of lowercase alphabets.   Output Print 'yes' (without quotes) if it is possible, else 'no'.   Constraints  1 ≤ T ≤ 100 1 ≤ S ≤ 1000   Example Input: 2 arora abcd  Output: yes no 
interval interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Palindrome is a string that reads the same backward as forward, e.g., madam. You are given a string whose length is even, and each character of the string is either 'a', 'b' or '/' Your task is to replace each occurrence of '/' in string with either 'a' or 'b' such that the string becomes a palindrome. You are also given two integers, aCost and bCost. Replacing '/' with 'a' costs aCost, and replacing '/' with 'b' costs bCost. Return the minimum cost of replacing '/' by 'a' and 'b' such that the string turns into a palindrome. If it is impossible to obtain a palindrome, return -1. Constraints  string will contain between 1 and 10000 characters, inclusive.  The length of string will be even.  Each character of the string will be either 'a' or 'b' or '/'.  aCost will be between 1 and 100, inclusive.  bCost will be between 1 and 100, inclusive. Input Format First line of input will contain the number of test cases. For each test case, there will be of three lines, the first line is the string whose palindrome is to be constructed, the second is the aCost and the third is the bCost Examples 1 aba/bab/ 4 6 Returns: 10 The only way to produce a palindrome is to replace 4th character of string with 'b' and 8th character with 'a'. The first replacement costs 4, the second costs 6, so the total cost is 4+6=10. aaaabbbb 12 34 Returns: -1 There is no '/' character, and string is not a palindrome. We have no way to change it into a palindrome.  Sample Input: 1 baba//aaa/ab// 72 23 Sample Output: 213 
name _f ++n ++n ++n ++n ++n ++n second<<endl second<<endl second<<endl str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
This TechNITi, Billi's intelligence is tested in a very different way by his girlfriend. His girlfriend has given him a binary string .  She asked Billi to remove palindromic subsequences from the given binary string of length N. Find minimum number of palindromic subsequences he needs to remove such that the string becomes empty.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. First line of every test case is integer N the length of string  Second line is the binary String  Output Output a single integer for each test case corresponding to the answer.  Constraints 1 ≤ T ≤ 1000 ,T is the number of test cases. 1 ≤ N ≤ 1000000 ,N is the length of the string. N*T will always be less than 1000000.  Example Input: 1 9 101001101  Output: 2  Explanation 1001 and 10101 are the two subsequences. 
lp c>a&&c<b //cout<<v[i]<< pra pra pra second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem Description Pappu G of the famous C Party recently faced an interview. But as expected of him, he had studied only few words like RTI, women empowerment, youth, open system etc. He used these words so often in the interview that the audience mocked at him after the interview. Pappu G got very upset with all these and decided to analyze his interview. Of course he knows nothing and has so asked you to write a program to calculate the frequency of each of his words. Given a sentence S, and Q words, you need to find out the count of each of those words in the interview. Input The first line of the input consists of the number of cases (T). T test cases follows. Each test case begins with line with the sentence (S). The sentence consists of upper case and lower case English alphabets only. Next line indicates the number of queries (Q). Next Q lines have a word each whose count you need to find in the sentence. Output For each test case, output Q lines, one for each query which is the count of the word. Constraints  T ≤ 50 1 ≤|S| ≤10000 Q ≤ 100 1 ≤ |word| ≤10000 Sample Cases  2 RTIWomenRTIYouthRTI 5 Country RTI Women Youth rti PPP 1 PP Output  0 3 1 1 0 2 Explanations  In the first case, we have 3 occurrences of "RTI" and 1 each for "Women" and "Youth". Note that words are case sensitive. After all Pappu G is a sensitive person. So "rti" has 0 frequency. In the second case, "PP" has 2 occurrence. Note that words may overlap.  
cout<<temp+g<<endl cout<<temp+g<<endl holds holds holds 0LL<<digits[i] 0LL<<digits[i] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
For sure, the love mobiles will roll again on this summer's street parade. Each year, the organisers decide on a fixed order for the decorated trucks. Experience taught them to keep free a side street to be able to bring the trucks into order.  The side street is so narrow that no two cars can pass each other. Thus, the love mobile that enters the side street last must necessarily leave the side street first. Because the trucks and the ravers move up closely, a truck cannot drive back and re-enter the side street or the approach street.  You are given the order in which the love mobiles arrive. Write a program that decides if the love mobiles can be brought into the order that the organisers want them to be.     Input The first line of the input contains a number T the number of test cases. The first line of each test case contains a single number n, the number of love mobiles. The second line contains the numbers 1 to n in an arbitrary order. All the numbers are separated by single spaces. These numbers indicate the order in which the trucks arrive in the approach street. No more than 1000 love mobiles participate in the street parade.     Output For each test case your program has to output a line containing a single word yes if the love mobiles can be re-ordered with the help of the side street, and a single word no in the opposite case.     Example  Input: 1 5 5 1 2 4 3     Output: yes    
rr v[a] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 There is a new mall in the city and customers have one floor of parking available in its basement. The parking lot consists of m rows of n parking slots each. When owners come back  where (s)he has parked his/her car they may have to examine mXn cars in the worst case to find the car. In order to attract customers, the mall has decided to ease this trouble by hiring a new parking lot attendant to park the cars. The diligent attendant has thought of the following scheme to park the cars. The license number of each vehicle is a positive number. License numbers are unique to a car - no two cars have the same number. The attendant has decided that for ease of locating a car, he will keep each row and each column sorted in ascending order of license numbers. Imagine the columns as being arranged from west to east and the rows being arranged north to south. Any unused slot in a row or column will be present only at the end - that is, once an empty slot is encountered on a row, there will be no car to the east of the slot on the same row, and once an empty slot is encountered on a column, there will be no car to the south of the slot on that column. Let's call such a lot as an "ordered lot". Once he has thought of this scheme, he has to design various operations to maintain the order once cars are removed. We wish him well with his grand scheme, but we will assist him only in the simplest operation - that of removing the car with the smallest license number. This operation is performed on an already ordered lot. If we remove any car creating an empty slot, we can fill that empty slot by moving the car immediately to its east, or immediately south, to the empty slot. The attendant has to do this until the parking lot becomes an "ordered lot", once again. You have to help him by computing the least number of cars that he has to move, after removing the smallest numbered car, such that the lot becomes ordered.  Input The input consists of several lines. The first line is a number saying how many distinct parking lots are present in the input. This is followed by a set of inputs, each representing an ordered parking lot. Each lot starts with a line containing two numbers m and n, separated by a blank space where the first number m is  the number of rows and the second one, n, is the number of columns in that lot. This is followed by m rows of n columns of numbers, each representing a license number. Empty slots will be represented by the number 2147483647.  Output The output should consist of several line, each containing a number. Each line i corresponds to a parking lot i in the input. The output number for a lot should be the minimum number of cars that the attendant should move once the car with the minimum license number is removed, to maintain an ordered lot.  Sample Input  2 3 3 1 2 3 4 5 6 7 8 9 4 2 1 2 3 2147483647 4 2147483647 2147483647 2147483647   Sample Output  4 1  
interval ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 holds holds holds holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Note: For Turbo C++, select "Text" as your language   Problem Description: In IIIT we use password system to unlock the lab doors and only Mtech students are given the password for these labs. Password system comprises of n*n keypad where n is odd. One day Ashish saw an Mtech student using the password. He figured out that the password is symmetric about the centre point ( centre point for n*n keypad will be point with co-ordinates (n/2, n/2) according to 0 based indexing or (n/2+1, n/2+1) according to 1 based indexing). Now he has to try all possible symmetric combinations to unlock the door. Since he has not enough time he asks you to tell if given password is symmetric or not. You will be given n*n binary grid containing elements as 0 if that key is not used and 1 if that key is used. You need to tell whether the given binary grid is symmetric according to the centre point.    Input First line contains an integer t denoting number of test cases. Each test case begin with an integer n denoting the size of the grid. Next n line contains n space separated integers. Each integer is 1 or 0 depending on if that button is pressed for that password or not.    Output For each test case output single line containing “Yes” or “No” depending on whether the given password is symmetric or not.    Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 100     Example Input: 3 3 1 1 0 0 0 0 0 1 1 3 1 1 0 0 0 0 1 1 0 3 1 0 1 1 0 0 0 0 0  Output: Yes No No    Explanation Example case 1. Since the given password is symmetric along centre point so ans is Yes. Example case 2. Since the given password is not symmetric along centre point so ans is No. 
x*temp*temp%MOD print_bn _f _f _f _f _f _f mark+00 mark+00 maxVals[q maxVals[q maxVals[q maxVals[q x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
I have been asked to set problems for this contest, what do I do now ? Lets see the standard stuff in most of the programming contests and make one problem out of it. Hmm... many problems are having Binary digits, Grids, Paths, Coins, Maximize or Minimize something, so let me mix them all now in to one problem, the one problem to rule them all ;) Lets have a grid of size N x M having N rows and M columns, and put gold coins in it. How many in each cell ? , lets involve binary here. I'll give you two binary strings A[1...N] and B[1...M]. Cell (i,j) (1-based indexing) Row-i and Column-j in the grid contains A[i] * B[j] gold coins. From a cell (i,j), you can move to any of the 4 adjacent cells (i-1,j), (i+1,j), (i,j-1), (i,j+1) in one step. I want a path of minimum length from top-left cell (1,1) to bottom-right cell (N,M), and the value of this path = number of gold coins it covers. Find the maximum value of such a path. Not every one wants to become a Raja, also find the minimum value of such a path.   Input First line contains T [ number of test cases, around 10 ]. T cases follow, each having 2 lines, "N A" and "M B" (quotes for clarity only). [ 1 ≤ N,M ≤ 3000, and each character in A, B is either 0 or 1 ]   Output For each test case, print the maximum value of a path followed by the minimum value of a path, in the same line, separated by a single space. Output of each case should be in a separate line.   Example  Input: 2 4 1001 3 110 5 01111 3 110  Output: 3 1 5 0  Explanation: Case 1 : A Maximum path in bold  110 000 000 110  Case 1 : A Minimum path in bold  110 000 000 110  
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 While learning simple DP problems, Ira came across this simple problem. Given a grid in two dimensions having N  rows and  M  columns, how many paths exist from top-left cell of the grid to bottom-right cell when allowed movements in one step are one cell from left to right or one cell top to bottom only?  Formally, a cell of the given grid G in the i^th  row and  j ^ th   column is represented as G(i, j) . In one step, Ira can go from G(i, j) to either G(i+1, j) or G(i, j+1). One way to count number of paths from G(1, 1) to G(N, M) is using Dynamic Programming. Let us denote this count as C(G) i.e., number of paths from G(1, 1) to G(N, M) in grid G.   After learning this DP problem, she thought about a similar problem. Given the value of X = C(G), find the corresponding Grid, G. There might be many grids G having same value of C(G). You need to find out all of them satisfying the output constraints given under constraints section.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Only line of each test case contains one integer denoting value of X   Output  For each test case, if there are no grids G having N rows and M columns, satisfying the constraints, such that C(G) = X then print in one line "The Grid is Too Big!". Otherwise, in first line print the number of grids such that C(G) = X and satisfying the output constrains. Following lines, each containing one possible grid, two space separated integers denoting N and M respectively. Output should be sorted according to increasing value of N.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 1000 1 ≤ M ≤ 1000 1 ≤ X ≤ 10^1000   Example Input: 3 2 6 2011  Output: 1 2 2 3 2 6 3 3 6 2 The Grid is Too Big!  
holds holds holds holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  There is a man standing in front of a market, 1 represent filled area and 0 represents road. In how many ways can he visit all roads (0s), you have to print that. He cannot move through 1s, but he can move through 0s. There won't be any loops in the paths of 0s. Two paths are different if at any of the point of intersection of two roads he takes a different direction. He can revisit a road (0 or 0s) as many times as needed only when it is needed to make the path complete, that is he can retrace a path if its needed to complete the path. Also, he cannot move diagonally. See example for more clarity.   His original position is on the first row of the matrix with a 0 in it and the first column of that row which is a 0. It will be possible for him to visit all 0s, roads in the market are like that, that is all the paths in the road would be traceable. Hint can be found in these gifs:       Input Test cases will start with an integer T the count of test cases. Each test case will have two space separated integers on a newline x and y, x denoting the number of rows in the array and y denoting the number of columns. Each test case will be followed by x rows of y integers, either 0 or 1.   Output   Output an integer for each input, each on a newline.   Constraints  1 ≤ T ≤ 10 1 ≤ x ≤ 20 1 ≤ y ≤ 20     Example Input: 1 5 13 0000000000000 1111111111110 0000000000000 1111111111101 0000000000000  Output: 4   Explanation Example case 1. he can go like this.. where 2 represents visited (these are incomplete paths, but shows the possibilities)  2222222222222 1111111111112 2222222222222 1111111111101 0000000000000 He has to come back to that point where he can go further down.    or like this  2222222222222 1111111111112 0000000000022 1111111111121 2222222222220  Again he has to come back from the left most 2 in the bottom row to visit the univisited 0s.  Remember he has to complete visiting all 0s. Visiting all 0s gives 4 possible path configurations in the above array. 
c[j%0] c[j%0] steps<i+00 steps<i+00 steps<i+00 steps<i+00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 tw[j] tw[j] tw[j] holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You have M identical eggs. You want to determine the maximum height that you can drop an egg from a building of N floors without breaking it (or determine if the egg does breaks even when dropped from the first floor). Let us call this maximum safe height the critical height. Our eggs have a unique property: they can withstand one fall from a height greater than the critical height. If the same egg falls from a height greater than the critical height for a second time, it breaks, and it can't be used again. You can use an egg any number of times as long as it is not broken. What is the minimum number of throws you need to determine the critical height in the worst case assuming you follow an optimal strategy? Input: The first line contains the number of test cases T. Each of the next T lines contains two integers N and M each. Output: Output T lines, containing the required answer for the corresponding case. Constraints: 1 <= T <= 1000 1 <= N,M <= 300 Sample Input: 3 2 1 3 2 5 2 Sample Output: 3 4 5 Explanation: For the first example, N = 2 and M = 1. One strategy is to throw the egg from the first floor twice (note that our special eggs cannot break the very first time you throw it). If the egg breaks, the critical height is 0. Otherwise, throw the egg from second floor twice to determine its critical height. This requires 4 throws in the worst case. However, there is a better strategy. First throw the egg from floor 2, then from floor 1. If the egg breaks on the second throw, the critical height is 0. If it does not, throw it once again from floor 2 and check if it breaks. This requires just 3 throws in the worst case. A character string is said to have period k if it can be formed by concatenating one or more repetitions of another string of length k. For example, the string "abcabcabcabc" has period 3, since it is formed by 4 repetitions of the string "abc". It also has periods 6 (two repetitions of "abcabc") and 12 (one repetition of "abcabcabcabc"). 
Bhardwaj Bhardwaj Bhardwaj Bhardwaj cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
There is an infinite integer grid at which N people have their houses on. They decide to unite at a common meeting place, which is someone's house.  From any given cell, all 8 adjacent cells are reachable in 1 unit of time.  eg: (x,y) can be reached from (x-1,y+1) in a single unit of time. Find a common meeting place which minimizes the sum of the travel times of all the persons.  Input Format: N The following N lines will contain two integers saying the x & y coordinate of the i-th person.  Output Format: M M = min sum of all travel times;   Constraints: N <= 10^5 The absolute value of each co-ordinate in the input will be atmost 10^9  HINT: Please use long long 64-bit integers; Input #00: 4 0 1 2 5 3 1 4 0   Output #00: 8   Explanation: Sums of travel times of the houses are 11, 13, 8 and 10. 8 is the minimum. Input #01: 6 12 -14 -3 3 -14 7 -14 -3 2 -12 -1 -6 Output #01: 54 
ss[n]<=00 orez interval ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n pp pp pp que que que que que que que que str[i+0] str[i+0] str[i+0] str[i+0] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD _f a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] a[0][i] s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 s+=temp%00 x*temp*temp%MOD
Write a C code which does the addition of two integers without using the '+' operator. (Level 1) Input: Two integers (N1 and N2) Output: Single positive integral value  Constraints : 1<=N1,N2<=10^3 Sample Input00: 1 1 Sample Output00: 2  Sample Input01: 12345 123 Sample Output02: 12468 
c[j%0]
You have an unbiased coin which you want to keep tossing until you get N consecutive heads. You've tossed the coin M times and surprisingly, all tosses resulted in heads. What is the expected number of additional tosses needed until you get N consecutive heads? Input: The first line contains the number of cases T. Each of the next T lines contains two numbers N and M. Output: Output T lines containing the answer for the corresponding test case. Print the answer rounded to exactly 2 decimal places. Sample Input: 4 2 0 2 1 3 3 3 2 Sample Output: 6.00 4.00 0.00 8.00 Sample Explanations: If N = 2 and M = 0, you need to keep tossing the coin until you get 2 consecutive heads. It is not hard to show that on average, 6 coin tosses are needed. If N = 2 and M = 1, you need 2 consecutive heads and have already have 1. You need to toss once more no matter what. In that first toss, if you get heads, you are done. Otherwise, you need to start over, as the consecutive counter resets, and you need to keep tossing the coin until you get N=2 consecutive heads. The expected number of coin tosses is thus 1 + (0.5 * 0 + 0.5 * 6) = 4.0  If N = 3 and M = 3, you already have got 3 heads, so you do not need any more tosses.   Constraints: 1 <= T <= 100 1 <= N <= 1000 0 <= M <= N 
&man_list[i][j] &man_list[i][j] mark[x][y]=0 mark[x][y]=0 cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Five of the faculty members of IIIT-Delhi Prof. A, Prof. B, Prof. C, Prof. D and Prof. E have their rooms on different floors of the Academic Building, which has five floors. A week student X has been called by these five professors to discuss his declining performance. But he, having weak memory, has forgotten on which floors are rooms of ALL the respective faculty members located. However, he remembers some information using which it can be figured out on which floors are their rooms located. Can you help him out with it? You are provided with specifications pertaining to each professor and you are supposed to find out the exact floor on which their room is.  Input The first lines contains a number “T” specifying the number of test cases. (1 ≤ T ≤ 20) Each test case will be of five lines, each line will provide certain specifications about where the person lives. The first line will contain data for Prof. A, second for Prof. B and so on. The following abbreviations are used for the input : A/B/C/D/E : Professor's room is on an ADJACENT floor to that of A/B/C/D/E NA/NB/NC/ND/NE : Professor's room is not on an adjacent floor to that of A/B/C/D/E. +A/+B/+C/+D/+E : Professor's room is on a  floor higher than of A/B/C/D/E. -A/-B/-C/-D/-E : Professor's room is on a floor lower than of A/B/C/D/E. 1/2/3/4/5 : Professor's room is on that specific floor. N1/N2/N3/N4/N5 : Professor's room is NOT on that specific floor. Each line would contain a combination of the above mentioned abbreviations, each separated by a space. Note: “Adjacent” means that they have rooms on consecutive floors, for example : 2,3 or 4,3 etc. “Higher” or “Lower” does not ONLY mean on a floor which is one more or one less than the one specified. “Higher” simply means that professor has a room on ANY floor which is higher than the one specified.  Output For each test case, the output must be the names of the Professors in the order of floors on which they are residing, starting from 1st floor. The alphabets must be printed in one line, without any space in between.  Example Input: 2 NC N5 N1 N1 N5 +C NA NC 1 +B -A NA E N2 N4 D  Output: CBADE BCEDA  
Bhardwaj Bhardwaj holds holds holds A[i][k] A[i][k] A[0] A[0] A[0] A[0] A[0] A[0] A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
IIIT-Delhi’s canteen has five workstations, one for Chinese, one for Mexican, one for Italian, one for South Indian and one for Punjabi food. Each workstation can work only on two dishes at a particular time and each station takes exactly 5 units of time to prepare one dish.   You have a list of people who come in at different times and order food at the canteen  according to the cuisine. At a particular time, only two items of a person’s order will be sent to the kitchen to be made at the workstations and then the person will be sent to the end of the line (waiting queue), while the order of the next customer will be taken. The customer who has been sent at the end of the line will then wait for his turn at the counter again. The two items which will be sent to the kitchen will be according to the order in which they have been taken as an input. No customer can leave the restaurant in between. There is ONLY ONE counter which entertains only ONE person at a time (i.e. at a time, only one person would be placing order).  You are required to calculate the total waiting time for which the customers will wait AT THE COUNTER on a particular day. Only at the counter and not at the queue.  Input First line of input contains the number of test cases T. The first line of each test case contains the number of customers N. Next N lines contain information about the orders placed. Each line has six space separated integers, specifying the arrival time (UNIQUE), number of items for Chinese, Mexican, Italian, South Indian and Punjabi respectively. The input will be provided in the order of the arrival time. NOTE : Number of items for each cuisine will always be an even number.   Output The output for each test case would be a single number which gives the total waiting time of the customers at the ordering counter ONLY.   Example Input: 1 2 1 2 4 0 0 0 2 2 4 0 0 0  Output: 16 
interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are provided with coordinates of four points as input and your task is to determine whether they form a Quadrilateral, Parallelogram, Square, Rhombus, Rectangle or None of These. It is safe to assume that the four points entered are in the order of A, B, C, D and you have to determine which quadrilateral (or none) is formed by ABCD.   Input The first line of the input is the number of test cases T. Every test case consists of four lines, each line containing two numbers X and Y separated by a space which refer to the (x,y) coordinates of a point. The first line contains the coordinates of point A, second of point B, third of point C and fourth of point D.   Output For each test case, the output shall be a single word answer (in capital letters) stating whether the coordinates of each test case forms a “RECTANGLE”, “SQUARE”, “RHOMBUS”, “QUADRILATERAL”, “PARALLELOGRAM” or “NONE” (without quotes; quotes only for clarity) . Note: We know that a square is also a rectangle which is also a parallelogram which in turn is also a quadrilateral, however if the input satisfies all the properties of a specific type of a quadrilateral, the answer shall be that specific type of a quadrilateral ONLY and not any other type or simply ‘QUADRILATERAL’.   Constraints  1 ≤ T ≤  100 -10000 ≤ X,Y ≤ 10000, where (X,Y) denote the coordinates of point A, B, C or D.     Example Input: 2 0 0 1 0 1 1 0 1 1 1 7 5 1 9 -5 5  Output: SQUARE RHOMBUS 
//cout<<v[i]<< mark[x][y]=0 ++n ++n i=00 que que que que que que str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Given a range of numbers (BOTH INCLUSIVE), print the number of numbers, sum of whose digits is a prime number.  Note: 1 is NOT considered to be a prime number.   Input First line contains the number of test cases T. Each test case consists of two lines, each line containing one integer. First integer L gives the beginning of the range of values and the second integer U gives the end of range.   Output One integer in a new line which gives the number of numbers that satisfy the given condition.   Constraints 1 ≤ T ≤ 100 1 ≤ L ≤ U ≤ 10,000   Example Input: 3 11 21 3 11 10 20  Output: 6 4 5 
tw[j] ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 //cout<<v[i]<< //cout<<v[i]<< holds holds holds holds holds holds holds holds holds c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Rohit loves to play poker. He has N piles of poker chips in a line. Number of chips in pile i is Ai. He wants to rearrange them such that  Ai+1 = Ai + 1 for 1 ≤ i ≤ N-1 . The final piles can contain 0 chips as well.  To achieve this,he can take one coin from a pile and place it in another pile.Find the minimum number of coins he has to displace to reach the above configuration.     Input The first line of input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the size of array. The second line contains N space-separated integers A1, A2, ..., AN denoting the elements of the array.  Output For each test case, output in a single line the required answer. If it is not possible to achieve the configuration output -1.    Constraints 1 ≤ T ≤ 50 1 ≤ N ≤ 50 1 ≤ Ai ≤ 50    Example Input: 3 5 2 3 4 5 1 3 10 10 10 4 3 3 3 3  Output: 4 1 -1    Explanation Example case 1.He can transfer one chip to the 5th pile from each of the other piles. Example case 2.He can transfer one chip from the 1st pile to the 3rd. 
//cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< steps<i+00 steps<i+00 steps<i+00 cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem Description: Javascript is a great language its the programming language of the web. This question requires you to learn a new programming language i.e Javascript. The solutions should be submitted in Javascript only. Codechef inputs javascript in node.js format. You don't have to google much about node.js. Just read about Javascript in general and try running your code here. Internet is nothing but a global connection of devices or interconnected computer networks. Information we send on the web passes through a series of network, this information can be read by the nodes on the network. If we send in plaintext information, a hacker sitting on the network can read our information and use it. That’s why we do things differently! We use something called Cryptography. Its the practice of techniques for secure communication in the presence of third parties. Dr. Jojo is a smart guy, he’s using a  MD5 encoding to make his files secure. Our intelligence department have told us to research on Brute Force attack. Try to not implement everything, we expect you to get the encoding/decoding code from online. Search smart you have 40 mins of internet access only.  Problem Statement: Dr. Jojo is targeting world domination, he’s training a bunch of hackers at ei ei ei tee dee. Schools all over India has hired you to decode the message, which they claim contains a very important message. The hackers are towards the end of their summer vacations and he just passed down this compressed file to them in a group email. Thanks to an inner mole we were able to extract that email.  This is the contents of the email:  The message is 0c049ca2ad590d34d1753419f64eff19  The last hacker we hired almost decoded the message, but we were too late to get it from him. His last words: “The world is 4_letter_word 7_letter_word this email was a 5_leter_word” Dr. J’s vocabulary is only limited to the wordlist we have attached.    doup frig ours skep smar spad rale plat viol esox culb amok oont coif coir aver keen vuln tsar apse onyx peen abalone abandon ability abolish abdomen abraham abyssal academy account achieve acidity acquire acrobat acronym acrylic actress adaptor address already adjourn admiral advance advisor aerator aerosol affable afflict affront african backlit backlog backrub badland baggage bailout balance ballboy balloon baloney bananas bandage bandaid pople carom ergot aglet cubeb nerpa taler qitra decoy swain oxter panic    We are in danger. The world will be theirs soon and we are fully aware of that already. I am sure that message contains their next move, we need to decode it and plan accordingly.   Note: You have to submit the javascript code on codechef, the code should show how you have decoded the message (using Bruteforce) and output *only* the decoded message i.e The world is 4_letter_word 7_letter_word this email was a 5_leter_word  Answer template    //some variables    var four_letter_words = ;    var five_letter_words =  ;    var seven_letter_words = ;    // a couple of nested loops         // condition to check if you have cracked         if (md5(possiblity) == "0c049ca2ad590d34d1753419f64eff19") {                   console.log(possiblity);                   break;         }   Notes: No file reading. Copy paste the words from the wordlist. Read about Md5, read about brute force attack and read about loops,variables,conditions in javascript online. 
vis[node] vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00
  George is getting tired of the decimal number system.  He intends to switch and use the septenary (base 7) number system for his future needs.  Write a program to help George start his transformation into the septenary number system by taking in a list of decimal numbers and print out the corresponding septenary number.    Input A list of numbers in decimal format ending with -1.  Output A list of numbers in septenary.    Example Input: 1 2 88 42 99 -1  Output: 1 2 154 60 201   
interval
  Phillip has become fascinated with sequences lately.  He looks for sequences all the time.  His favorite sequence is the Fibonacci sequence, where any element is equal to the sum of the two previous elements.  However, he isn't able to figure out the correct number for positions beyond 8 without writing it on paper.  Create a program that will take in the first two number of a Fibonacci sequence and a number of places to calculate, and print out the number that is at that place.    Input The first two numbers of a Fibonacci sequence, and the  to print out.  Note: you only need to handle 1 sequence per run.  Output The number at the position specified.  Example 1 Input: 1 1 5  Output: 5  Example 2 Input 1 5 7  Output 45    
pra pra pra pra pra x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Emily is in love with ASCII art.  She has become fascinated with creating pictures using nothing but the asterisk symbol (*).  Her favorite picture to make is an hourglass, with the top part full and the bottom part empty.  Surprise Emily with a program that will ask for how big an hourglass should be and will create an hourglass of that size using nothing but asterisks and dashes.    Input The number of rows.  Output The ascii art hourglass.  Example Input: 6  Output: ************ -**********- --********-- ---******--- ----****---- -----**----- -----**----- ----*--*---- ---*----*--- --*------*-- -*--------*- ************   
vis[node]
  Joel and Neha have been working to balance the CS Club's finances.  They have a stack of tickets, each containing the date and amount of money spent, and they need to process them.  However, they each prefer to process them in a different order.  Joel wishes to process them in order of the greatest expense to the smallest expense, while Neha wishes to process them starting with the oldest expense and ending with the most recent.  Create a program that will take in a list of dates and expenses and then print out both ways of ordering the tickets..    Input A list of tickets values and dates.  Each ticket will have a number and a date in MM/DD/YY format.  The list will terminate with -1.  Output Money: followed by each ticket in order stating with the greatest expense. After that, Date: followed by each ticket starting in order starting with the oldest.  Example Input: 10 01/01/01 5 01/03/01 15 03/02/02 -1  Output: Money: [15, 03/02/02] [10, 01/01/01] [5, 01/03/01] Date: [10, 01/01/01] [5, 01/03/01] [15, 03/02/02] 
vis[node] vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD byte[] byte[] byte[] byte[] byte[] byte[] byte[] byte[] byte[] Programming Programming Programming Programming lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w _f _f _f cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n <<fixed<<f <<fixed<<f <<fixed<<f <<fixed<<f <<fixed<<f <<fixed<<f maxVals[q cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl elem elem elem elem elem ++n ++n
  Yesterday, the CS Club hosted a massive party that put all the frat parties to shame.  Today, they have to clean up everything.  They also have to restock the strategic supply of Mountain Dew.  Phillip hates cleaning and wants to pick up the dew instead.  He knows that they intend to distribute the chores by having everyone get a number between 1 and the number of people who actually stayed to help clean up.  Once everyone has a number, they will start with the person who has number "1" and skip some number of people.  The person who they land on will be given a specific cleaning task.  The last person picked will not have to clean and will instead get the Dew.  Help Phillip avoid work by creating a program that will take in the number of people participating and the number skipped and output which number Phillip should get in order to the last to get a chore.    Input The number of people playing and the number being skipped.  Output The number that will be picked last. Tips:  Here  is a website that visualizes this problem   Example Input: 41 3  Output: 31    Explanation Example case 1. ... 
_R _R _R _R holds tw[j] tw[j] tw[j] tw[j] tw[j] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Doubleville, a small town in Texas, was attacked by the aliens. They have abducted some of the residents and taken them to the a spaceship orbiting around earth. After some (quite unpleasant) human experiments, the aliens cloned the victims, and released multiple copies of them back in Doubleville. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Cloning (FBUC) charged you with the task of determining how many copies were made from each person. To help you in your task, FBUC have collected a DNA sample from each person. All copies of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).    Input  The input contains several blocks of test cases. Each case begins with a line containing two integers: the number 1 ≤ n ≤ 20000 people, and the length 1 ≤ m ≤ 20 of the DNA sequences. The next n lines contain the DNA sequences: each line contains a sequence of m characters, where each character is either 'A', 'C', 'G' or 'T'.  The input is terminated by a block with n = m = 0 .   Output For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies. For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first and the tenth lines, and '0' in all the other lines.   Example  Input:  9 6 AAAAAA ACACAC GTTTTG ACACAC GTTTTG ACACAC ACACAC TCCCCC TCCCCC 0 0  Output:  1 2 0 1 0 0 0 0 0   
interval interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
You are given a simple map of an archipelago. Can you determine how many islands it shows?  The map consists of grid squares with characters, where '#' indicates land and '.' indicates water. Two land squares belong to the same island if they are neighbouring grid squares, which means their x coordinates and y coordinates differ by at most 1.   Input The first line of the input contains a number T ≤ 20 which indicates the number of test cases to follow.  Each test case starts with a line containing two numbers n and m (1 ≤ n,m ≤ 200), the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').   Output For each test case print in a line the number of islands shown on the corresponding map in the input.   Example  Input:  2 1 1 . 6 4 .... ..#. .#.. .... .##. ....  Output:  0 2   
mark[x][y]=0 Bhardwaj scnd scnd cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Given a natural number n (1 ≤ n ≤ 500000), please output the summation of all its proper divisors.  Definition: A proper divisor of a natural number is the divisor that is strictly less than the number.  e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.    Input  An integer stating the number of test cases (equal to about 200000), and that many lines follow, each containing one integer between 1 and 500000 inclusive.   Output  One integer each line: the divisor summation of the integer given respectively.   Example  Input:  3 2 10 20  Output:  1 8 22   
cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ++n ++n xx<=r-0 factor*A[row][j] factor*A[row][j] que que second<<endl second]+M0[V[i] holds holds holds holds holds holds holds holds holds x*temp*temp%MOD c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A printer – who still uses moveable type – is preparing to print a set of pages for a book. These pages are to be numbered, as usual. The printer needs to know how many instances of each decimal digit will be required to set up the page numbers in the section of the book to be printed.  For example, if pages 10, 11, 12, 13, 14 and 15 are to be printed, computing the number of digits is relatively simple: just look at the page numbers that will appear, and count the number of times each digit appears. The digit 0 appears only once, the digit 1 appears 7 times, the digits 2, 3, 4 and 5 each appear once, and 6, 7, 8 and 9 don’t appear at all.  Your task in this problem is to provide the printer with the appropriate counts of the digits. You will be given the numbers of the two pages that identify the section of the book to be printed. You may safely assume that all pages in that section are to be numbered, that no leading zeroes will be printed, that page numbers are positive, and that no page will have more than three digits in its page number.   Input  There will be multiple cases to consider. The input for each case has two integers, A and B, each of which is guaranteed to be positive. These identify the pages to be printed. That is, each integer P between A and B, including A and B, is to be printed. A single zero will follow the input for the last case.   Output  For each input case, display the case number (1, 2, …) and the number of occurrences of each decimal digit 0 through 9 in the specified range of page numbers. Display your results in the format shown in the examples below.   Example  Input:  10 15 912 912 900 999 0  Output:  Case 1: 0:1 1:7 2:1 3:1 4:1 5:1 6:0 7:0 8:0 9:0 Case 2: 0:0 1:1 2:1 3:0 4:0 5:0 6:0 7:0 8:0 9:1 Case 3: 0:20 1:20 2:20 3:20 4:20 5:20 6:20 7:20 8:20 9:120  
++n assigned +0] +0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n +0] orez orez orez max=count max=count max=count max=count name name name name name name name name name name name name name _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f _f name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name name
  Before ACM can do anything, a budget must be prepared and the necessary financial support obtained. The main income for this action comes from Irreversibly Bound Money (IBM). The idea behind is simple. Whenever some ACM member has any small money, he takes all the coins and throws them into a piggy-bank. You know that this process is irreversible, the coins cannot be removed without breaking the pig. After a sufficiently long time, there should be enough cash in the piggy-bank to pay everything that needs to be paid.  But there is a big problem with piggy-banks. It is not possible to determine how much money is inside. So we might break the pig into pieces only to find out that there is not enough money. Clearly, we want to avoid this unpleasant situation. The only possibility is to weigh the piggy-bank and try to guess how many coins are inside. Assume that we are able to determine the weight of the pig exactly and that we know the weights of all coins of a given currency. Then there is some minimum amount of money in the piggy-bank that we can guarantee. Your task is to find out this worst case and determine the minimum amount of cash inside the piggy-bank. We need your help. No more prematurely broken pigs!  Input  The input consists of T test cases. The number of them (T) is given on the first line of the input file. Each test case begins with a line containing two integers E and F. They indicate the weight of an empty pig and of the pig filled with coins. Both weights are given in grams. No pig will weigh more than 10 kg, that means 1 ≤ E ≤ F ≤ 10000. On the second line of each test case, there is an integer number N (1 ≤ N ≤ 500) that gives the number of various coins used in the given currency. Following this are exactly N lines, each specifying one coin type. These lines contain two integers each, Pand W (1 ≤ P ≤ 50000, 1 ≤ W ≤10000). P is the value of the coin in monetary units, W is it's weight in grams.   Output  Print exactly one line of output for each test case. The line must contain the sentence "The minimum amount of money in the piggy-bank is X." where X is the minimum amount of money that can be achieved using coins with the given total weight. If the weight cannot be reached exactly, print a line "This is impossible.".   Example  Input:  3 10 110 2 1 1 30 50 10 110 2 1 1 50 30 1 6 2 10 3 20 4  Output:  The minimum amount of money in the piggy-bank is 60. The minimum amount of money in the piggy-bank is 100. This is impossible.   
interval interval interval lft[i]=w lft[i]=w lft[i]=w acc+=a[i] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] P[i][x]==P[i][y] xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 xx<=r-0 orez orez orez orez orez orez orez orez orez orez orez name name name name name name name name name name name name name name name name name name name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Your task consists of evaluate a polynomial of degree n (0 <= n <= 999) represented by its n+1 coefficients of the form: pn(x) = cnxn + cn-1xn-1 + … + c2x2 + c1x + c0  in each one of the k (1 <= k <= 100) points x1, x2, …, xk. The coefficients of the polynomial and the values where they will be evaluated are integers in the interval [-100, 100] that guarantees that the polynomial's evaluation is at the most 263 – 1.  Input  There will be multiple test cases, each one with 4 lines that are described below  n: degree of polynomial.  cn cn-1 … c2 c1 c0: coefficients of the polynomial separated by a single space.  k: number of points to evaluate the polynomial.  x1 x2 … xk-1 xk: points to evaluate the polynomial separated by a single space.  The final test case is a single line where n = -1 and this case should not be processed.  Output  For each test case you should print k + 1 lines of output, the very first line containing the case number and the following k lines with the result of the polynomial's evaluation in each one of the k given points. See the sample.   Example  Input:  2 1 -2 -1 5 0 1 -1 2 -2 3 2 1 -2 -1 4 0 -1 2 -2 -1  Output:  Case 1: -1 -2 2 -1 7 Case 2: -1 0 15 -9  
//cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  You are given an unweighted, undirected graph. Write a program to check if it's a tree topology.   Input  The first line of the input file contains two integers N and M --- number of nodes and number of edges in the graph (0 < N ≤ 10000, 0 ≤ M ≤ 20000). Next M lines contain M edges of that graph --- Each line contains a pair (u, v) means there is an edge between node u and node v (1 ≤ u,v ≤ N).   Output  Print YES if the given graph is a tree, otherwise print NO.   Example  Input: 3 2 1 2 2 3   Output: YES   
//cout<<v[i]<< a>c a>c a>c //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Recall the definition of the Fibonacci numbers:       f1 := 1     f2 := 2     fn := fn-1 + fn-2 (n ≥ 3)  Given two numbers a and b, calculate how many Fibonacci numbers are in the range [a,b].    Input  The input contains several test cases. Each test case consists of two non-negative integer numbers a and b. Input is terminated by a=b=0. Otherwise, a ≤ b ≤ 10^100. The numbers a and b are given with no superfluous leading zeros.   Output  For each test case output on a single line the number of Fibonacci numbers fi with a ≤ fi ≤ b.  Example  Input:  10 100 1234567890 9876543210 0 0   Output:  5 4   
c[j%0] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Mo and Larry have devised a way of encrypting messages. They first decide secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is “There’s no place like home on a snowy night” and there are five columns, Mo would write down  t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x  Note that Mo includes only letters and writes them all in lower case. In this example, Mo used the character ‘x’ to pad the message out to make a rectangle, although he could have used any letter. Mo then sends the message to Larry by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as  toioynnkpheleaigshareconhtomesnlewx  Your job is to recover for Larry the original message (along with any extra padding letters) from the encrypted one.   Input  There will be multiple input sets. Input for each set will consist of two lines. The first line will contain an integer in the range 2...20 indicating the number of columns used. The next line is a string of up to 200 lower case letters. The last input set is followed by a line containing a single 0, indicating end of input.   Output  Each input set should generate one line of output, giving the original plaintext message, with no spaces.   Example  Input:  5 toioynnkpheleaigshareconhtomesnlewx 3 ttyohhieneesiaabss 0  Output:  theresnoplacelikehomeonasnowynightx thisistheeasyoneab  
interval holds holds holds holds holds lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Vicky (Mr. Perfect) goes for shopping in a shopping mall with N shops to buy an item X. The shops in the shopping malls are in a single row and numbered from 0 to N-1. Each shop has total stock of Ai of the item X. He already knows the available stocks of X in each shop. He can buy any number of X from a shop. Due to his habit for perfection in every task, he will shop according to the following conditions: 1. Vicky only buys either all the stock available in the shop or none of it. 2. Vicky will select the shops in a manner such that all the shops are consecutive. 3. Vicky will only shop if total number of X to be bought is multiple of N. 4. Number of shops to be visited by him should be minimum.  One such solution is always possible. Print the starting shop(l) and ending shop(r). If multiple solutions are possible, then consider the solution with leftmost starting shop.    Input First line of input contains a single integer T denoting the number of test cases. For each testcase : First line contains a single integer N denoting number of shops in the mall. Second line contains N space separated integers denoting array A, where Ai = number of item X available in i^th shop.    Output For each testcase, print two space separated integers l and r on each line.    Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10^5 1 ≤ Ai ≤ 10^9     Example Input: 3 4 1 2 3 3 6 1 1 2 2 4 2 5 2 2 2 2 2  Output: 1 3 3 4 0 4     Explanation For the 2nd testcase, we can get solution for l=3 (A[3]=2) and r=4 (A[4]=4) following all the condition. 
vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem statement  	An Adventure Club in UVCE usually goes for trekking. Some members thought that, simply climbing the hill is not very interesting. They came up with a new idea to find the perfectness of the hill. you are given the slant height of the hill, and your task is to help the UVCE Adventure Club to decide whether the hill is perfect or not.   	Adventure Club thinks that all the hills are typically in the shape of isosceles triangles and for given slant height, if the height of the hill can be integer and base-width can be an even integer then the hill is said to be PERFECT, otherwise it is IMPERFECT.   INPUT  First line of the input contains the T, number of test cases. Each test case contains a single line containing an integer S, the slant height of the hill.  OUTPUT  For each test case output PERFECT,if the hill is perfect otherwise output IMPERFECT.    CONSTRAINTS  1 ≤ T ≤ 10000 1 ≤ S ≤ 1000000   EXAMPLE Input  2 5 7  Output  PERFECT IMPERFECT   EXPLANATIONS  An isosceles triangle whose equal sides are 5 units can have 4 unit height and base width can be 6 units. For a isosceles triangle whose equal sides are 7 units, there is no possibility of having integral height and base width of even integer. 
pra //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< c[j%0] rr rr rr rr rr tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] tw[j] lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  There are N numbers which has to be arranged. You are given M constraints of the form (a, b) which means that a has to appear before b in the arrangement. Compute the number of arrangements possible modulo 1000000007.    Input Input description. The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains 2 integers N denoting the number of numbers to arrange and M denoting the number of constraints. Each of the next M lines has a pair of space separated integers a and b denoting a constraint.    Output Output description. For each test case, output the number of arrangements modulo 1000000007.    Constraints 1 ≤ T ≤ 5 1 ≤  N ≤ 20 1 ≤  M ≤ 1000 1 ≤  a,b ≤ N    Example Input: 1 3 1 1 3  Output: 3    Explanation Example case 1. There are 3 possible permutations in which 1 comes before 3: 1 2 3, 1 3 2, 2 1 3. 
macros Bhardwaj mark[x][y]=0 mark[x][y]=0 ++n ++n ++n ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Peter is an insanely crazy maths professor. One day while giving his lectures, he suddenly hit an absurd idea of having a new seating plan for his class. A class consists of N students. Each student can be represented by a unique identification number ID and his overall marks M. Assume all students have distinct id's in range 1 to  N.  The crazy professor defines a function P(X) as the sum of exponents of all primes in prime-factorization of X. Example P(12) = P(2^1*2^1*3^1) = 3.   Peter decided that all the students with same P(ID) have to sit together in the new seating plan as this will enhance their sincerity in the class.   For this new seating convention, he needs to rearrange the students of the class.The concentration of a permutation arrangement of N students is defined as summation of Marks[student_at_seat_no_i] * i^2 for i in 1 to N. Ivan, being his favorite student, has to devise a seating plan that maximizes the concentration by optimally arranging students in a particular permutation following the above constraint.   Note:  The seats in Peter's class are numbered from 1 to N. Since, the input data is heavy, it is recommended to use faster I/O for example scanf / printf in C++.      Input  The first line of the input contains the number of students N present in the class  Next N lines contains two space separated integers denoting student identification number ID and overall marks Mi of i^th student respectively.  Output  A single integer denoting the maximum possible concentration   Constraints  1  ≤  N ≤ 10^5  1 ≤  A[i] ≤ 10^3   Example Input: 5 1 4 2 5 3 12 4 6 5 15 Output: 640    Explanation : For the given sample case above, students can be arranged in the following way based on their id - 1,4,2,3,5 to maximize the concentration. The concentration is calculated as follows - 4*1^2 + 6*2^2 + 5*3^2 +  12*4^2 + 15*5^2 = 640. 
vis[node] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Pew and Pew are twins, who aspire to be great mathematicians. They decided to develop a program in their summer vacations (which,in their opinion, might get them a Fields Medal). Given the LCM of two numbers X & Y, they have to figure out how many ordered pairs (X,Y) exist. Since the task seems too tiring school students, they take help from some students at IIITD and can now easily factorize a number into its prime factors. The LCM has been given in prime factorization form. Only the powers of the primes have been given. The sequence is in correspondence with the first 10^5 primes {2,3,5,7,11 ...}. So, if the exponents are {2 3 4}, the number is 2^23^35^4. .  Input First line contains ‘T’, the number of test cases. Next line contains ‘N’, the number of prime factors LCM(X,Y) has. Next line contains ‘N’ integers. The ith number represents the power of the ith prime in LCM(X,Y).  Output For each test case, print the number of possible ordered pairs(x,y) MOD 2   Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 10^5 1 ≤ A[i] ≤ 100     Example Input: 1 3 2 4 2  Output: 1  Explanation Number of possible pairs is 225. So, 225%2 is 1 
0LL<<digits[i] max=count holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Problem Description The C Plus International (CPI) and C Plus International [Mathematicians] (CPI M) have always been against each other. CPI this time around wants to show the people that even they have high maths skills like CPI M. The people of the country try to test this new skill of the party with a simple problem. The problem is as follows : Given two numbers N and P the problem asks to find the last digit of N^P. Even this problem is too tough for CPI to handle. So they hire you to write a program to solve this problem.  Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows  each test case contains two space separated Integers N and P  Output  For each test case, output a single line containing a single Integer , the  last Digit of N^P  Constraints  1 <= T <= 10^5 0 <= N,P <=  10^18     Example Input: 4 2 3 2 4 3 3 3 4  Output: 8 6 7 1  Explanations In the first test case, 2^3 is 8, so the last digit is 8. In the second case 2^4 is 16. But we want only the last digit, so answer is 6. 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD pra pra pra pra pra c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Pinocchio is a very interesting fictional character. Each time he lies, his nose is extended by 1 cm . Pinocchio and Lampwick are best friends.   But Pinocchio's habit of lying has increased manyfold nowadays which has left Lampwick really upset. As a result, he has decided to maintain a diary recording the length of Pinocchio's nose each day. For this, he asks Pinocchio some questions each day and notes down the length of his nose in centimeters at the end of the day. For example, the diary containing entries for a week may look like: 1, 2, 2, 3, 4, 5, 5 After N days of carefully analysing Pinocchio's lying habit, Lampwick wants to confront Pinocchio. But for that he needs to find out the number of days when Pinocchio lied atleast once. Can you help him out? Being a trusting friend, Lampwick assumes Pinocchio was telling the truth on the first day.    Input First line of input contains T, the number of test cases. For each of the next T lines, two lines follow. The first line contains an integer N, denoting the number of days. The second line contains N space-separated integers L1, L2, ..., LN representing the length of Pinocchio's nose on different days.  Output For each test case, output the number of days when Pinocchio lied atleast once , in a new line  Constraints  1 <= T <= 100 1 <= N <= 10^5 1 <= Li <= 5*10^6    Example Input: 1 7 1 2 2 3 4 5 5 Output: 4  Explanation For the example given above, Pinocchio lied on days 2, 4, 5 and 6 .Hence, the number of days on which he lied = 4. 
cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ++n ++n pair<LD pair<LD A=a str[i+0] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 After confronting Pinocchio, Lampwick decided to further analyse his diary about Pinocchio. (You can find the details about the diary in Part 1 of this problem)  Now he needs to find out the maximum number of days that passed by in which Pinocchio surely didn't lie. Can you help him out?    Input First line of input contains T, the number of test cases. For each of the next T lines, two lines follow. The first line contains an integer N, denoting the number of days. The second line contains N space-separated integers L1, L2, ..., LN representing the length of Pinocchio's nose on different days.  Output For each test case, output contains an integer representing the maximum number of days that went by between which Pinocchio surely didn't lie.  Constraints  1 <= T <= 100 1 <= N <= 10^5 1 <= Li <= 5*10^6    Example Input: 1 7 1 2 2 3 4 5 5 Output: 1  Explanation For the example given above, Pinocchio did not lie on day 3rd and 7th, making the maximum number of days that passed by when Pinocchio did not lie in between as 1. 
holds holds holds holds holds holds holds holds holds holds _R _R _R _R x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
   Company 'A' produces a special type of rectangular plate used for interior designing. They got an order from Company 'B' to supply them with all possible different rectangular plates of Area equal to 1 to X (Both inclusive). Selling price of one rectangular plate of any Area is Rs. 2. Company 'B' asked Company 'A' manager to tell them the Total Cost. Company 'A' manager is not good at maths so he asked you for help. You have to help Company 'A' manager to find the total cost of all the different plates of Area equal to 1 to X (Both inclusive). (See Example). Note: Length of side of rectangular plate is always an Integer and rectangle with different dimensions are considered different for e.g 1*2 and 2*1 are two different plates   Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case consists of single integer X.  Output For each test case, output a single line containing the total cost of plates of Area 1 to X ( both inclusive).  Constraints 1 ≤ T ≤ 10^5 1 ≤ X ≤ 10^6  Sample Input  3 1 2 3  Sample Output  2 6 10  Explanation  In second test case total cost of all the different rectangular plates of Area 1 to 2 (Both inclusive) i.e. cost of plates with area equal to 1 + cost of plates with area equal to 2 No.of plates with area 1 = 1 (1*1) No.of plates with area 2 = 2 (2*1 & 1*2) Total cost = 1*(cost of one plate) + 2*(cost of one plate) = 1*2 + 2*2 = 6  
0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] 0LL<<digits[i] task task task task x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 In Casino Royal , there was a gambling machine which was quite innovative. It contains a row of numbers, 'MoneyRow. Each time a player plays, the machine generates some random pairs of integers a and b. All such pairs are shown to the player who then has one chance to reorder the numbers of the MoneyRow.  After he is done with the rearranging and presses start button, money equal to the sum of the numbers from ath cell to bth cell ( both inclusive ) of the MoneyRow is added in his account.This process is repeated for each pair (but with the same arrangement of the MoneyRow) generated by the machine and the money in the account keeps on increasing.  Given the row and all pairs, you have to predict the maximum money he can win.   Input The first line contains T, the number of test cases. The next line contains two space separated integers n and q : the count of Numbers in the row and the number of pairs,respectively.  The next line contains n space separated integers Ni, The numbers in the row.  Each of the following q lines contain two space separated integers a and b representing the pair.   Output In a single line print a single integer : Maximum amount of money he can win.   Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 10^6 1 ≤ a ≤ b ≤ n 1 ≤ Ni ≤ 10^6 1 ≤ q ≤ 10^6   Example Input: 1 5 3 1 2 3 4 5 3 4 3 4 1 5  Output: 33 
name name name //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 For Turbo C++ Users : Read the following document before attempting the question :  Problem Description  N-Boy is very eccentric when it comes to strings. These days, he spends most of his time studying palindromes and pangrams (for his IP assignment at IIITD). For those of you who don’t know, a palindrome is a word or a statement which can be read the same way, forward or backward, and a pangram is a word or a statement containing all letters of the English alphabet. Now, he is given a set of strings, and he wants to segregate them into palindromes, pangrams and palingrams, which are palindromic pangrams. Unfortunately, he is unable to do so, and has asked you for help.   Input The first line consists of a single integer T, denoting the number of test cases. Each test case consists of a string S of lowercase English characters.   Output For each test case, output a single line containing a string(without quotes) as follows:   If the string is only a palindrome, print ‘palindrome’.  If the string is only a pangram, print ‘pangram’.  If it is a palingram, print ‘palingram’.  Else, print ‘none’.   Constraints  1 ≤ T ≤ 1000 1 ≤ |S| ≤ 1000     Example Input: 3 abba abcdefghijklmnopqrstuvwxyz qwerty  Output: palindrome pangram none   
first+0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
A palindrome is a word that has the property of reading the same in either direction. Your task is to find out all palindromes in a given string 's', where the length of all palindromes is equal to k.  Input First line of input contains t, the number of test cases. Each test case contains two lines of input. The first line of input is the length of the required palindromes k. The second line contains the string 's'. The length of the string would be less than 20. 0<=t<=20  Output The output for each test case should be the number of different palindromes of length k, that can be formed from the above string. We say two palindromes are different when they start from different positions. Remember, the palindromes need not be unique i.e two similar palindromes are valid if they are different.  Example  Input: 2 3 abababa 4 rockkcor  Output: 5 1 
fenwick lp lp dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0
 Problem description. Masadla is very passionate about his business. He has been working on it for past many years and wants to make it  big. For this purpose he will be meeting an investor in the coming week. In the meeting he would have to show a graphical representation of the profit his business has been making .   He knows that to impress the investor,  he must have a good non-dropping profit graph for his company. But unfortunately this wasn’t the case,  so he decides to be clever and drop some numbers and make the graph non - dropping. But there is a catch -  he can’t drop a lot of numbers as investor would then get to know what he has done .Can you help him figure out, how many such numbers at best he can retain which would satisfy the criteria he needs for plotting the graph?  Input Description  The first line contains a single integer N denoting the number of profit data points for Masadla's business . The second line contains N space-separated integers A1, A2, ..., AN denoting the profit figures for his business in increasing order of time    Output Description For each test case, output one integer as solution for given input as per problem statement on new line.     Sample Input  54 1 5 5 7     Sample Output  4     Constraints  1 ≤ N ≤ 100000 -1000000 ≤  Ai ≤ 1000000  
c[j%0] c[j%0] c[j%0] c[j%0] L>R L>R L>R second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Prashant is a professor at NIT Jalandhar. His student, Pankaj recently gave a test for n subjects. He scores Ai marks in the i^th subject. Now, Prashant does very strict marking and gives negative marks too. Pankaj wants that his marks should be same in all the subjects. So, he goes to Prashant and asks for his help.  Prashant says that he can help Pankaj in the following way :   Pankaj can select any two subjects i and j (i≠j).Prashant will increment marks of i^th subject by 1 and decrement marks of the j^th subject by 1.  He can do the above step any number of times.  Now you have to help Pankaj find the maximum number of subjects in which he can achieve equal marks.  Input  The first line contains a single integer T, denoting the number of testcases. The descriptions of T test cases follow.  Each test case contains integer, n  the total number of subjects.The next line contains n space-separated integers the marks in n subjects.  Output For each Test case, Output the maximum number of subjects in which he can achieve equal marks.  Constraints  1 ≤ T ≤ 10. 1 ≤ n≤ 100000 -1000000000 ≤ Ai≤ 1000000000   Example Input: 1 3 1 6 2  Output: 3  Explanation Example case 1. Pankaj will 1st select subject 1 and 2 and now marks become : {2,5,2}. Pankaj will then select subject 2 and 3 and now marks become : {2,4,3}. Pankaj will then select subject 1 and 2 and now marks become : {3,3,3}.  
interval interval interval ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= check[0]= seen seen seen ruofytriht ruofytriht ruofytriht ruofytriht ruofytriht cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  Placement season is on its peak. Acknowledging the recent progress of Graphic Era University, Dehradun, top MNC Directi has eagerly come this time for recruiting some of the GEU candidates. There are N number of recruiters (from Directi) to visit the GEU campus on a given day for interviewing M candidates.  A candidate is interviewed only once and can be interviewed by any recruiter. Each recruiter can interview only one candidate at a time and it takes exactly 1 hour to interview any candidate. Interviews can be conducted in parallel. The interview process is such efficiently arranged that the Directi has to spend minimum possible hours in completing all the interviews.    Input First line contains T, the number of test cases. Next T lines contains N and M, where N is the number of recruiters and M is the number of candidates.    Output For every test case, output the minimum number of hours required to complete all the interviews    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 1000 1 ≤  M, N  ≤ 1000     Example Input: 5 4 14 2 5 5 15 6 20 6 6  Output: 4 3 3 4 1  Explanation for first test case 4 recruiters distribute the 14 candidates as follows 4,4,3,3 so that they can complete all the interviews in 4 hours.   
Found holds holds holds holds holds lft[i]=w lft[i]=w ruofytriht ruofytriht A[0] A[0] cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Alice had a bag where each number from 1 to N was present in it. After a magic trick she either removes all even numbers or all odd numbers from the bag. Given the kind of trick she has performed find the P^th smallest number in the bag after the trick. For example P = 1 denotes the smallest number present.  Input First line contains T, the number of test cases. Each test case consists of N, a string S and an integer P in single line. S will be either “odd” or “even”(quotes for clarity), denoting the kind of trick Alice has performed. Note: It is guaranteed that P will be less than or equal to remaining items in the bag.  Output For each test case, print the required answer in one line.   Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 100 1 ≤ N ≤ 10^3 P ≥ 1     Example Input: 2 4 odd 2 5 even 2  Output: 4 3    Explanation Example 1. After performing the “odd” trick the numbers 1 and 3 get removed from the bag. Numbers 2 and 4 are left in the bag. 2nd smallest number is 4 now. Example 2. After performing the “even” trick the numbers 2 and 4 get removed from the bag. Numbers 1, 3 and 5 are left in the bag. 2nd smallest number is 3 now.  
cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 holds holds holds holds holds holds holds holds holds holds holds holds cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Master Oogway has forseen that a panda named Po will be the dragon warrior, and the master of Chi. But he did not tell anyone about the spell that would make him the master of Chi, and has left Po confused. Now Po has to defeat Kai, who is the super villian, the strongest of them all. Po needs to master Chi, and he finds a spell which unlocks his powerful Chi. But the spell is rather strange. It asks Po to calculate the factorial of a number! Po is very good at mathematics, and thinks that this is very easy. So he leaves the spell, thinking it's a hoax. But little does he know that this can give him the ultimate power of Chi. Help Po by solving the spell and proving that it's not a hoax.    Input First line of input contains an integer T denoting the number of test cases.The next T lines contain an integer N.    Output For each test case, print a single line containing the solution to the spell which is equal to factorial of N, i.e. N!. Since the output could be large, output it modulo 1589540031(Grand Master Oogway's current age).    Constraints  1 ≤ T ≤ 100000 1 ≤ N ≤ 100000     Example Input: 4 1 2 3 4   Output: 1 2 6 24 
pra pra pra pra second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 In this problem, you will be given a polynomial, you have to print what it becomes after differentiation.   Following are the rules for differentiation:  For a polynomial f(x), its differentiation is defined as f'(x). If a is a constant, then differentiation of af(x) is af'(x). If f(x) = h(x) + g(x) , then f'(x) = h'(x) + g'(x) If f(x) = x ^n, then f'(x) = nx^n-1. This is true for all  n ≠ 0 . If f(x) = c, where c is a constant, f'(x) = 0.   If you are still uncomfortable with differentiation, please read the following:   Link to Wikihow page Link to Wikipedia entry.   Input  First line contains T, the number of test cases to follow. Each test case contains the follows, the first line contains N, the number of non zero terms in the polynomial. Then N lines follow, each line contains a pair of integer which denotes a term in the polynomial, where the first element denotes the coefficient (a) and the second denotes the exponent (p) of the term.   Output Print the polynomial after differentiation in the desired format as described below.   If the coefficient of a term in the output polynomial is 3, and the corresponding exponent is 2, print it as 3x^2 Print " + " (with single space on both side) between each output term.  Print the terms in decreasing value of exponent.  For the constant term (if any), you have to just print the coefficient. You should not print x^0.   Constraints  1 ≤ T ≤ 10   Example Input: 2 1 1 2 3 1 3 1 1 1 0  Output: 2x^1 3x^2 + 1 
cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl ++n ++n ++n cout<<temp+g<<endl +0] +0] +0] +0] +0] orez orez orez orez orez Hundreds\n Hundreds\n name name name name name name name cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Po, the dragon warrior, has met his Panda dad, and he is so excited! His daddy is exactly like him, no, he his like his daddy. Po is so so happy. He plays with his daddy, they eat, and have a lot of fun. Po takes daddy to the famous Chinese Museum which has a lot of artifacts. From ancient shields, to weapons, secret scrolls, the museum has everything. But again, everything can't be happy as always. Po and his daddy mess with the museum, throw the stuff here and there, and break some things as well. Suddenly he hears some noise, and he senses that Master Shifu is on his way to the Museum. If he doesn't find the museum clean, Po will be in great trouble, and he does not want to get a scolding in front of his daddy. So he thinks of a plan. Po decides to clean the museum before Master Shifu comes, but with a different strategy.The museum has N horizontal strips of carpet arranged adjacent to each other on the floor. Po can swap a strip with any other strip in the museum, any number of times. Each strip is made up of M blocks of carpet. A block of carpet is defined as a 1 × 1 unit square on the carpet strip. For every block of carpet in the museum, Po knows whether it is clean or dirty. We assume the blocks of carpet to form a matrix of size N × M. A submatrix of such matrix is defined by a group of four integers d, u, l, r (1 ≤ d ≤ u ≤ N; 1 ≤ l ≤ r ≤ M). The area of the submatrix is defined by the number of cells it contains.Since, there is not much time left, Po concludes that the museum may not be cleaned completely, therefore, he decides to swap strips of carpet in such a way that the area of a submatrix having all clean blocks of carpet is maximized. Help Po clean up the mess he and daddy made.    Input First line of the input will contain two integers N and M, the number of carpet strips and the length of each strip respectively. Next N lines contain a string of M characters. Each character is either 'C' or 'D'. 'C' denotes that the block is clean and 'D' denotes that the block is dirty.    Output You need to output a single integer, the maximum area of a submatrix in which all blocks are clean. Output 0 if there are no clean blocks.    Constraints  1 ≤ N,M ≤ 4500     Example Input: 1 1 C  Output: 1  Input: 2 2 CD CC  Output: 2  Input: 4 3 CDD DCC DDD CDC  Output: 2    Note:  Since input files are large, it is advised to use fast input/output methods. 
interval x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Polycarp gave you a N * N grid with each cell either comprising of a '#' or a '.'  character.   '#' denotes a blocked cell whereas '.' denotes an empty cell.  Recently, he got admission into a prestigious institute which specializes in Optics. He has a challenge to prepare for a local contest of institute. So, after days of thinking he came up with an idea. You are his good friend and have to help him solve the following problem based on his new idea.   A ray of light starts from the west direction and moves towards east. However, it cannot move through a blocked cell in the rectangular grid. You need to place reflectors(opaque on one side, shiny on the other) in the grid to reflect light towards south such that maximum number of rays emerge out from the south.   You have solved a lot of problems related to physics in your high school but now you remember less about the laws of Optics. Hence, you decide to bring your programming knowledge to rescue. Help your friend Polycarp to solve the problem.     Note :  A ray of light cannot be reflected multiple times by using multiple reflectors.  Input  The first line of the input contains an integer T denoting the number of test cases. First line of each test case contains N  denoting the dimension of the grid.. Next N line contains N characters each denoting type of characters in the grid.     Output  Output a single integer for each test case in a separate line, denoting the maximum number of rays that can emerge out from the south.     Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 500 Grid consists of two kinds of characters only i.e '#' and '.'      Example Input: 1 5 ..... #..#. ..... .#... ....# Output: 4   Explanation See the image provided above for the sample test case given. 
mark+00 practise practise practise ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n ++n cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
 Adele is doing research in the field of computational biology this summer. She has a DNA sequence D, which is made of a smaller sequence S concatenated K times, i.e, D = S + S + S + ... (K times). Now, she needs to generate the sequence D using a smaller sequence, T of length M, of which she will make N copies. Doing this she'll get F = T + T + ... (N times). Each DNA sequence can be represented as a string made up of lowercase latin characters. After she gets F, she can extract out each individual component from the sequence(i.e, characters) and join them together(in some order) to make a new sequence which is equal to D. Now, she wonders, given S, K and M what would be the minimum no. of copies N, of T, she will have to make in order to find T such that she can get D. She wants your help. For given DNA sequence S, the number of it's copies, K and the length of the sequnce T as M, print the minimum number of copies, N, of T which you will have to create and also print the lexicographic smallest such sequence T. Print -1, if not possible.   Input The input contains 2 lines:   The first line contains the string S, the DNA sequence.  The second line contains two space separated numbers integers K and M, denoting the number of copies of S in D and the length of the sequence T.   Output   First line containing an integer N and string T, denoting the minimum number of copies.  Second line containing the string T.  Print -1 in one line if it's not possible to find such N and T.    Subtask #1 (20 points)   1 ≤ |S| ≤ 100  1 ≤ K ≤ 10  1 ≤ M ≤ 1000    Subtask #2 (80 points)   1 ≤ |S| ≤ 10^4  1 ≤ K ≤ 10^14  1 ≤ M ≤ 10^5   Sample Input 1: mama 2 4  Output 1: 2 aamm  Input 2: aab 2 2  Output 2: 4 ab  Input 3: tomato 2 2  Output 3: -1  Explanation Sample 1:  S = mama, K = 2. D = mamamama. For T = aamm and N = 2, we can get F = aammaamm. The characters of F can be used to make a copy of T here. Sample 2:  S = aab, K = 2. D = aabaab. For T = ab and N = 4, we can get F = abababab. The characters of F can be used to make a copy of T here. 
name mark+00 mark+00 i+=0 i+=0 dp[a][b]=0 dp[a][b]=0 dp[a][b]=0 dp[a][b]=0 dp[a][b]=0 index/i index/i index/i x=k*j+0*j x=k*j+0*j x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w Point Point Point cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 dpmax[i][j]=0 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
Problem Description: Mr. Y’s favourite number is the number 2. Such is his passion that he begins to hate all other digits. Whenever faced with a number he tries to convert it to sum of powers of 2 where the power is non-zero positive integer. If he is successful he calls the number magical. You have to help Mr. Y in categorizing numbers into magical and non­magical.  Input­: The first line contains a number T, the number of test cases about to follow. The next T lines contain a non negative integer X each.  Output: Print ‘Yes’ if the number is magical. ‘No’ otherwise.  Constraints: 45 Points: 1<=T<=10 0<=X<=1000000  55 Points: 1<=t<=600000 0<=X<=10000000000  Example: Sample Input: 1 6 Sample Output: Yes 
c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] c[j%0] x*temp*temp%MOD x*temp*temp%MOD second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w steps<i+00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
  F(x)=Sum of powers of primes in prime factorization of x Given p and q, Calculate ∑f(x) for x in range(p,q).  For Ex : - F(18) =3 18 is written as 2^1 * 3^2, so powers are 1 and 2, Hence, F(18) = 1+2 = 3.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of   T test cases follows. The first line contains 2 space-separated integers p and q.     Output  For each test case, output a single line containing summation of F(x) for all x in range(p,q)     Constraints  p ≤ q 1 ≤ p,q ≤ 10^6 T ≤ 10^6     Example Input: 3 8 12 2 4 18 1476  Output: 11 4 4313 
L>R //cout<<v[i]<< //cout<<v[i]<< ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 sum0 sum0 holds second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] holds holds holds holds holds holds holds x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< //cout<<v[i]<< cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 ss[n]<=00 cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl ss[n]<=00
  Trambo needs a girlfriend badly. A girl who is trambo's facebook friend likes trambo and trambo likes her too. She will be his girlfriend only if trambo can answer her questions. Answer on behalf of trambo as he is busy studying for the DBMS exam :P.   Input The first line of input contains an integer T, denoting the number of test cases. Then T test cases follow.  Each test case contains two integers N and M and K separated by spaces.   Output  For each test case, output a single line containing the value N^M% K i.e  ((N^M)%K)   Constraints and Example Input:  3 9 8 11 5 2 13 2 6 16  Output:  3 12 0    Explanation Example case 1. (9^8)%11= (43046721%11)=3 Example case 2. (5^2)%13= (25%13)=12 Example case 3. (2^6)%16= (64%16)=0 
steps<i+00 lft[i]=w lft[i]=w 0LL<<digits[i] check[0]= check[0]= check[0]= cout<<ans*c<<endl task task second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] second]+M0[V[i] x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD x*temp*temp%MOD lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w lft[i]=w cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl cout<<temp+g<<endl
