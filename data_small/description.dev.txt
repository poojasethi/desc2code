  Venkatesh the coder has come up with an idea to rank his fellow coders. His idea is to use the first name of the coders and rank them according to his own ranking algorithm.  Suppose the first name of some coder is "duk"(Venkatesh does not like capital letters). Venkatesh then wrote all permutations of the letters of "duk" in descending order.  ukd, udk, kud, kdu, duk, dku.  Now he numbers each permutation serially from 1. The serial number alloted to "duk" is his rank. Here "duk" gets a number "5" according to this algorithm.  However, the job is not done. Venkatesh needs to enter the details of this coder in an excel sheet in the column corresponding to this number. Columns in an excel  sheet are numbered alphabetically (in upper-case) as A,B,C,D.....Z,AA,AB......and so on. For example, the row corresponding to this number would be 'E'.  Assume that an excel sheet can have a large number of columns i.e column numbers like AAA,GHTY,KIUGH are possible.  Kindly help Venkatesh to find out which column to store his fellow coder's name in.  Input  The first line of the input contains an integer T(1<=T<=10) denoting the number of test cases.  The next T lines will be a string of lower-case characters representing a coder's name, for which you need to find out the column id.  Length of string will not exceed 10 characters. Output  For each name, you need to print a string of upper-case alphabets corresponding to the column, where the name of the coder will be placed according to this algorithm. Example  Input: 2 duk abcde    Output: E DP   Explanation Example case 1. "duk" as shown above gets alloted a rank of 5. "abcde" will be the last element in the listing, so will be assigned a rank of 120; which when converted will fall into column DP. 
 With her new hair-style, Penny has to listen to all the comments of Sheldon Cooper. She (God knows why) challenged Sheldon Cooper for a match of Chess. Penny wants to defeat Dr. Sheldon Cooper in the game of chess. Although, she tried very hard, she is in a situation and wants your help. It is your duty to help Penny. The situation goes like this. Penny has only "King" left with her, while Sheldon has a King, a Queen, a Rook and a Bishop. You are given a situation of a chess board as input. Sheldon has given Penny a CHECK, you need to tell Penny, whether this is the end of the game or she still has a chance. In case, she still has a choice, ensure she is safe in the next step too.  P.S. All rules of chess apply here. The death of a King is considered as end of the game. You can also refer to  http://en.wikipedia.org/wiki/Chess for the rules. Input A description of the 8X8 chessboard grid is given. Empty boxes are shown as "_", Penny's King is shown by P, Sheldon's king is shown by S, and the queen, rook and bishop are shown by Q, R and B respectively. Output Print CHECKMATE! if its a checkmate, else print NOT YET!. Consider each and every possible ways, and remember ALL rules of Chess applies here. Example  Input: ____B___ ________ __Q_____ ________ ____P_S_ _R______ ________ ________  Output: NOT YET!  Input:  ________ ________ ___S____ ______B_ Q__P___ _R______ ________ ________  Output: CHECKMATE! Explanation Example case 1. Penny can still move her King to either one step Up or one step to left. So, this isn't a checkmate. 
  Ayan's favourite musical instrument is the keyboard. He practices regularly as well, you can hear him playing even at 3 or 4 in the night. Unfortunately, he got into a fight in his room and his keyboard was damaged beyond repair. However, being a rich fellow he quickly ordered another one. But this time he felt a bit adventurous. He decided to buy a circular keyboard i.e keys are arranged in a circle. This funky keyboard has only 12 keys though - C,C#,D,D#,E,F,F#,G,G#,A,B and S. Since the layout is quite different to what he is used to, he needs to relearn basics of music theory again. Firstly, a semitone is the distance between any two keys. So there are 3 semitones between D and F, and 2 semitones between S and C# (remember it is circular!) He knows a chord is an unordered set of three or more than three keys. However, Ayan wants to start slow and considers only triads - chords of size 3. Triads come in two varieties - major and minor. In a major triad the number of semitones between the first and second key is 4, and between the second and third - 3. Minor triads on the other hand have 3 semitones between the first and second keys, 4 semitones between the second and third one. For example, D F# A is a major triad, while D F A is minor. Ayan needs your help classifying some basic triads. Kindly help him.   Input  The first line of input is the number of test cases T (1<=T<=25).  The next T lines contain three characters corresponding to the musical keys on the circular keyboard.  Note that # keys will be given as small letters and normal keys as capital letters. So C# will be given as c, while D will remain D.  It is guaranteed that the triads will be either major or minor.  Output  For each test case, print "Major" or "Minor" in a separate line, depending on whether the given triad is major or minor. Example  Input:  2 E G S S d f    Output: Minor Major   Explanation Example case 1. E and G have a 3 semitone gap, while G and S have a 4 semitone gap. So Minor.  S and D# have a 4 semitone gap (remember circular) and D# and F# have a 3 semitone gap. So Major.  
  Aakash Chan the builder is given the task of constructing an expensive hotel in Bakerstreet. He is given N pillars to start with. To make the hotel look good all the N pillars should be of the same height. You can either decrease or increase the height of a pillar. To change the height of  the i th pillar, where 1<= i <= N, by 1 unit(you can either increase its height or decrease it) you must pay cost[i] golds. *see example cases for clarification* You must help Aakash by printing the height at which all the pillars must be set to, such that the overall construction cost is minimized. If there exist multiple answers, print the largest one.    Input The first line contains N denoting the number of pillars The next 2 lines will contain N inputs each, the first one denoting the height of each pillar and the second one denoting the cost of changing  one pillar’s height by 1 unit.  Output Print the height that the pillars must be set to, such that the overall construction cost is minimized. If there exist multiple answers, print the largest one  Constraints 1 <= N <= 100000 1 <= height of an individual pillar <= 1000000000 1 <= Cost of chaging a pillar’s height by one unit <= 100000  Example Input: 4 1 2 3 4 12 12 12 1    Output: 2     Explanation Example case 1. The cost of changing all the building to height 1 would be : (1-1)*12 + (2-1)*12 + (3-1)*12 + (4-1)*1  =  39 Changing all buildings to height 2 : (2-1)*12 + (2-2)*12 + (3-2)*12 + (4-2)*1 = 26 Changing all buildings to height 3 : (3-1)*12 + (3-2)*12 + (3-3)*12 + (4-3)*1 = 37 Changing all buildings to height 4 : (4-1)*12 + (4-2)*12 + (4-3)*12 + (4-4)*1 = 72 Since we need the cost to be minimum, we and make all the pillars of height 2.  ... 
  Two words rhyme if their last 3 letters are a match. Given N words, print the test case number (of the format Case : num) followed by the rhyming words in separate line adjacent to each other. The output can be in anyorder.     Input First line contains the number of test case T The next line contains the number of words N Next N words follow . They’ll contain only alphabets from ‘a’-‘z’.   Output Print case number (for each test case) of the format Case : num followed by the words that rhyme in a new line.  Constraints 1 <= T <= 5 1 <= N <= 1000 3 <= length of each word <= 1000   Example Input: 3 3 nope qwerty hope 5 brain drain request grain nest 4 these words dont rhyme     Output: Case : 1 hope nope qwerty Case : 2 brain drain grain nest request Case : 3 these dont words rhyme      Explanation Case : 2 brain drain grain nest request Case : 3 these dont words rhyme Explanation for case 1: since hope and nope rhyme (suffix “ope” matches), we print them in the same line and qwerty In a new line. Note that qwerty nope hope is also correct (the output can be in any order ) 
  Problem 1 Antidote. Two students from Amrita named Dos and Dex are trying to do a research on human ageing. Dos prepares an Antidote to stop skin from aging. Dex prepares an antidote for stopping hair fall. Dos and Dex combined their experiments and came out with a single antidote, which stops the human ageing. A Researcher now wants to preserve their antidote in Amrita Research Storage Refrigerators (ARSR). But ARSR can only store N liters in a container. Prepared antidote is with research lab assistant, when asked; she fills the beaker with the antidote and gives antidote. Now researcher wants exactly N liters of antidote and researcher is left with two unused faded beaker with capacity A and B litres. Researcher now needs your help to find whether they can exactly measure N liters from their unused beaker. Allowed Operation to any beaker 1. 1) Fill the beaker fully, by asking lab assistant. 2. 2) Empty it entirely. 3. 3) Transfer as much antidote from Beaker 1 to Beaker 2, till Beaker 1 gets empty or Beaker 2 is completely filled. *Beakers measuring marks are completely faded.     Input Test Case (T <= 20). A B N in a separate line (1<= A, B, N 1<= 10^7).   Output “YES”, If Researcher can fill one of beaker with n liters and give to the ARSR or else “NO”.   Example Input: 2  5 4 3  6 2 13   etc.  Output: YES  NO  etc.    Explanation Test­case 1 : Fill beaker 4 and pour it to beaker 5. Again fill beaker 4 and pour it to beaker 5. beaker 4 will contain 3 litres of antidote. Test­case 2: we cannot have 13 litres of antidote in any beaker  ... 
  Mind Bot is a robot which analysis the correctness of an expression. An expression which can contain '{' , '(' , '[' braces. As mind bot is on leave , you have to provide a solution to check if the given expression is balanced or not balanced . Note: Don't worry about the arithmetic operators.     Input First line contains the number of test cases T. Following T lines has strings S.   Output For each test case, output BALANCED or NOT BALANCED.  Constraints 1<=T<=100 1<=length of S <=1000 TIMELIMIT: 3s   Example Input: 3 {5(6+4[2*9/5]+5)-20} {3/5] {{5+1+1995(4*5*1994)}    Output: BALANCED NOT BALANCED NOT BALANCED   
  A network of towers is present in a city for effective communication. A tower 'X' can send data to tower 'Y' , if 'X' has a directed connection to 'Y' , while 'Y' can send data to 'X' , if 'Y' has a directed connection to 'X'. So given such a network with N number of towers & M number of directed connection , find all the possible intermediate towers used to send the data between given tower 'A' and 'B'. And also given a tower 'Z' , check if the tower is essential for the communication to exist between towers 'A' and 'B', if a path exists between the give towers. If essential , print "YES" and if not essential print "NO". If there is no way of connection between the given towers , Print "NO WAY" and don't check for the essential tower condition. Note: Tower  value ranges from 0 to N-1.     Input First line contains the number of test cases T. For each test case: Following line contains the number of towers N. Following line contains the value of tower 'A', tower 'B' and tower 'Z'. Following line contains the number of directed connection M. Following M lines , denote the directed connection between  tower 'T1' and tower 'T2'.   Output For each test case, output the required answer.  Constraints 1<=T<=100 1<=N<=200 TIMELIMIT: 3s   Example Input: 1 10 4 3 7 22 0 1 1 0 1 4 4 1 2 3 3 2 2 5 5 2 2 4 4 2 5 4 4 5 6 5 5 6 9 6 6 9 8 5 5 8 2 7 7 2 3 7 7 3    Output: 4 2 3 4 2 7 3 4 5 2 3 4 5 2 7 3 NO      Explanation: first 4 lines of the output , gives all possible way of communication , i.e:eg:  4->2->3 . And tower '7' is not essential for communication as towers 4->2->3 connection can be established which does not need tower '7'  
  You have a N x M matrix of cells. The cell (i, j) represents the cell at row i and column j. You can go from one cell (i, j) only down or right, that is to cells (i + 1, j) or (i, j + 1). But K cells are blocked in the matrix(you can’t visit a blocked cell). You are given coordinates of all these cells. You have to count number of ways to reach cell (N, M) if you begin at cell (1, 1). Two ways are same if and only if path taken is exactly same in both ways.   Input First line consists of T, denoting the number of test cases. Each test case consists of N, M and K in single line. Each of the next K lines contains two space separated integers (xi, yi), denoting the blocked cell’s coordinates.    Output For each test case print the required answer modulo 10^9+7 in one line.    Constraints  1 ≤ T ≤ 10 1 ≤ N, M ≤ 10^5 0 ≤ K ≤ 10^3 1 ≤ xi ≤ N 1 ≤ yi ≤ M     Example Input: 2 3 2 0 2 3 1 1 2   Output: 3 1    Explanation Example test case 1. No cell is blocked. 3 distinct paths are: (1,1) -> (1,2) -> (2,2) -> (3,2). (1,1) -> (2,1) -> (2,2) -> (3,2). (1,1) -> (2,1) -> (3,1) -> (3,2). Example test case 2. Only one valid path (1,1) -> (2,1) -> (2,2) -> (2,3). 
A cyclist, bored of congested roads, decides that she no longer wants to go the shortest route from her hostel to the college. She has decided that it is safer to follow routes with bicycle lanes. Roads have cycle lanes in both directions - however, they have gaps in their cycle-lane coverage. For this question, you are given a network of roads. With each road, there is a score, of the percentage of its length supporting a bicycle lane. You can assume that the percentages are unique floating-point values. The "safety-factor" of a path from hostel to college is the least score of a road on that path. You have to compute the path from hostel to college, with the largest safety-factor.  Input The input consists of several lines. The first line is a number saying how many networks are present in the input. This is followed by lines describing each network. The first line of each network has a single number (let’s call it v) -- the number of vertices in the network. This is followed by a number of lines, each describing a road. Each road is  given as three numbers separated by spaces - the first two being the nodes connected by the edge, and the third a floating-point number representing the percentage of cycle-lane coverage (between 0 and 100, inclusive). The end of the list of roads for a network is denoted by three "-1"s in a line. The college is always assumed to be node 1 and the hostel is always assumed to be the node with the highest index. There is at most one road between any pair of vertices. There is certainly at least one path that connects the hostel and the college.  Output The output should have several lines. The i-th line describes the safety factor of the i-th network in the input. The output should be within 10^-6 of the answer.  Sample Input  2 4 1 2 4.0 1 3 7.0 1 4 1.0 2 3 5.0 2 4 3.0 3 4 2.0 -1 -1 -1 4 1 2 40.0 1 3 8.0 1 4 11.0 2 3 21.0 3 4 30.0 -1 -1 -1   Sample Output  3 21  
  Since the finance department of MAKAUT has lots of bills to pass and funds to allocate for puja and freshers so there is a mess in Finance Officer's office. Although he has numbered all type of files from 0-9, all his files got jumbled up. Aaroti Di however arranged all of them to form a big integer n and presented it to Finance Office's office. But Finance officer wants to know how many files of a particular type q is there. Help Aaroti Di to find out the count of a particular type.   Input  First line contains an integer t denoting the number of test cases. Next 2t lines follow. Where first line shows the integer n of that test case and second line has the integer q, the file type queried for.   Output Print the total number of files of the queried type in a new line.  Constraints  1 ≤ t ≤ 10^3 1 ≤ q ≤ 9 1 ≤ n ≤ 10^10   Sub Task For 30 points  1 ≤ t ≤ 10^3 1 ≤ q ≤ 9 1 ≤ n ≤ 10^3  For 70 points  Orignal constraints    example input 1 12 1 output 1   
Keyboard typing is the main source of our input to the computer. We use keyboard for textual inputs. But to err is human. Suppose that in typing a document the user makes a mistake. He types a letter to the right of the actual character letter on the keyboard. Write a program to take the user string as input and display the actual correct string. Note: Apply the required constraint.   Example  Input: Sdfghj Output: Asdfgh  
Magic matrix is a square matrix of odd number of rows and columns. The noticeable thing in this is that the sum of all the numbers either row wise, column wise or diagonally equals to the same digit and each number can be used just once in this matrix. Write a program to develop a magic matrix of resultant sum 57.   Example   Output: 22  15  20 17  19  21 18  23  16   
GUI matters greatly to the user but another major concern is the security of the information. There are a lot of ways to implement security of data. Of these one method is the replacement cipher text generation method. In this each character is replaced by a particular other character and the text is modified. Write a program to display a text box on the screen and every input character given by the user should be displayed as ‘*’ mark. The program should meet the following constraint The working of enter, backspace should be as usual. After pressing enter, the password is encrypted using replacement cipher text generating and saved in the file named “pass.txt”. *********   Example  Input abcdefghi  Output: bcdefghij 
Tushar  is in a shop with an infinite amount of Ice-creams. He is allowed to select n Ice-creams. There are Ice-creams of k different flavors. From each flavor there are also infinitely many Ice-creams. Tushar wants to have at least one Ice-cream of each flavor, but still there are a lot of possibilities for his selection. Now help him to find how many possibilities are there for his selection. Assume that Ice-creams of each flavor can't be distinguished, and the order of the Ice-creams is irrelevant.   Input Input consists of one line containing n and k, where n is the number of Ice-creams Tushar selects and k is the number of different flavors of the Ice-creams. n and k are separated by single space   Output Print the number of possibilities that Tushar would have .   Example  Input: 30 7 Output: 475020 You can assume that this number fits into a signed 32 bit integer.  Input: 10 10 Output: 1 You can assume that this number fits into a signed 32 bit integer.  
 A tutorial for this problem is now available on our blog. Click here to read it. Being in love with number theory, Johnny decided to take a number theory course. On the first day, he was challenged by his teacher with the following problem: given a number N, compute the product of its positive divisors. Johnny is desperate to impress his new teacher so he asks you for help. In this problem, the divisors of N do not include the number N itself. For example, if N=12, the divisors of N (excluding N) are 1, 2, 3, 4, and 6. Thus, the product of divisors is 1x2x3x4x6=144. Since the result may be very large, if the result has more than 4 decimal digits, Johnny only needs to compute the last 4 digits of it.  Input The first line contains t, the number of test cases (about 300,000). Then t test cases follow. Each test case contains a single integer N (1 ≤ N ≤ 500,000) whose product of divisors needs to be computed.  Output For each test case, print a single line containing the corresponding result of that test case.  Example  Input 6 3 4 12 25 957 10000  Output 1 2 144 5 7493 0000 
  These days a lot of new coders are emerging at RJIT. One of the  many programmers in RJIT thought of making a program to find the weekday for any given date. He successfully builds it but there is one problem, his program prints the day of yesterday's date. Now he wonders whether he can find the next date given him the output date.    Input  The first line of the input contains an integer T denoting the number of test cases. Then T lines follow, each containing the present date in following format dd/mm/yyyy.   Output  You need to output a single line for each test case printing the next date in following format dd/mm/yyyy or d/m/yyyy according to the case if it exists or else print "Invalid Date"(without quotes).     Constraints  2 ≤ T ≤ 100 1 ≤ dd ≤ 35 1 ≤ mm ≤ 15 1000 ≤ yyyy ≤ 3000     Example Input: 3 16/09/2014 17/09/2014 5/02/2004  Output: 17/9/2014 18/9/2014 6/2/2004   
 Problem description.  up with a new method for the registration process. For this, an arena has been built in the form of an N x M matrix. A student starts the registration process at the cell in the top left corner, and the process completes at the cell in the bottom right corner. All other cells have an intermediate registration stage which take up some time t. A student can advance from the current cell to either the cell to the right, or to the cell to the bottom of the matrix. You want to minimise the time required for the registration process, since you prefer to have it completed before lunch time.   Input The first line will be an integer T, denoting the number of test cases. The first line of each test case will have two integers N and M, denoting the number of rows and columns of the matrix shaped arena. In the N lines that follow, for each line i from 1 to N, there will be M space separated integers tij (for j from 1 to M) denoting the time required at each cell of the matrix.  Output For each test case, print the minimum time required to complete the registration process on a single line by itself.   Constraints  1 <= T <= 10 1 <= N,M <= 10^3 1 <= tij <= 10^3    Example Input: 1 2 2 0 5 7 0   Output: 5    .ques{ text-align:justify;} 
  You are inside an NxM maze which you have to exit. Also, let us name this maze “IIIT D” and the exit “graduation”. You have to calculate, given a maze, the minimum number of steps you need to take from the starting point to reach the exit. If the exit is unreachable from the starting point, print ­1    Input First line contains 2 integers : N and M. Each of the next N lines contain M characters, “.” denoting blank space, “#” denoting wall, “S” denoting your starting position and “E” denoting exit. You are at S and have to move to E through a sequence of moves. Legal moves are defined below. If you are at some cell, you can move to any of the 4 adjacent cells that are not walls. e.g. .## S.. #.. In the above (incomplete) maze, you can only move upwards and rightwards as the cell directly below you is occupied by a wall.   Sample Input: 4 5 #.... ..#.# E#... #S.#.  Output On a single line, output the number of minimum steps to reach exit, or “­-1” if this is not possible.   Sample Output: 10  Constraints 1<=N<=10^3 1<=M<=10^3   Explanation One can reach from S to E by the moves : right, up, right, up, up, left, left, down, left, down 
  Given a connected and undirected graph, a spanning tree of that graph is a subgraph that is a tree (graph without cycle(s)) and connects all the vertices together. A single graph can have many different spanning trees. A minimum spanning tree (MST) or minimum weight spanning tree for a weighted, connected and undirected graph is a spanning tree with weight less than or equal to the weight of every other spanning tree.    Input  First Line of the input will contain T representing the number of test cases. First line of each test case will contain two space separated integers V and E representing Number of Vertices and Number of Edges respectively. Next E lines will contain 3 space separate integers A, B, W which represents an edge between vertex A and B of weight W. Vertices will be labeled starting from 1. For example if V=5, the set of vertices is {1,2,3,4,5}     Output   Output should consist of V-1 lines where each line would represent an edge that it part of the MST. Each of the output line should have 3 space-separated integers A, B and W representing an edge between A and B which is of weight W. The edges should be printed in increasing weights. Also, print such that A < B for each edge.      Constraints  1 ≤ T ≤ 100 2 ≤ V ≤ 1000 1 ≤ E ≤ V * (V - 1) / 2 1 ≤ A, B ≤ V 1 ≤ W ≤ 10^6     Example Input: 2 4 5 1 2 10 1 3 6 3 4 4 2 4 15 1 4 5 5 7 1 2 24 2 3 9 3 4 8 4 5 28 1 5 10 1 4 25 2 5 30 Output: 3 4 4 1 4 5 1 2 10 3 4 8 2 3 9 1 5 10 1 2 24   
 Problem description. Utkarsh found an array A of size N. He needs to report the number of pairs (i,j) where i < j such that LCM (A[i], A[j]) > min (A[i], A[j])  CONSTRAINTS  1 <= N <= 10^6 1 <= A[i] <= 10^6   INPUT First line contains N. Next line contains N integers of A.  OUTPUT output a single integer, the answer to the problem  EXAMPLE  INPUT 4 1 1 2 3  OUTPUT 5 
 Problem Description Utkarsh is on his way to Q shrines on the X axis. The ith Shrine is present at X=Li. For each shrine, Utkarsh will start at X=0 and move forward with the help of an array A of size N which will help him to reach the shrines. To move forward he must choose an index 1<=i<=N which allows him to jump A[i] units forward in the positive X axis. Utkarsh hates forgetting the past so he has an initially empty stack S to help him remember which indices of the array he chose. More specifically whenever he chooses index i of A, he pushes i at the top of the stack S. Utkarsh will only be able to enter the ith shrine if he is at X=Li and  |S|>0 . However, the converse is not true, i.e., Utkarsh may choose to not enter the shrine even if the above conditions are satisfied. Since Utkarsh is getting thinner nowadays, he would be able to carry stacks of size at most K. Utkarsh wonders how many different stacks can he have when he enters the ith shrine. (Two stacks are considered different iff they have different sizes or they contain different index value at some position) Output the answer modulo 10^9+7 for each shrine. Output 0 if he cannot enter the ith shrine.   INPUT First line contains N and K. Next line contains the array A. Next line contains Q. Next line contains all the Li.  OUTPUT For each shrine, output the number of possible stacks modulo 10^9+7.  CONSTRAINT  N <= 10^6 1 <= K <= 3*10^10 0 <= A[i] <= 400 Q <= 401 0 <= Li <= 400   Example  INPUT 5 3 0 0 1 1 2 3 0 1 3 OUTPUT 14 34 36 Explanation Valid stacks for first query are {1}, {2}, {1,2}, {2,1}, {1,1}, {2,2}, {2,1,1}, {1,2,1}, {1,1,2}, {2,2,1}, {2,1,2}, {1,2,2}, {1,1,1}, {2,2,2} 
 Problem Description Utkarsh has come to a new country having N cities(numbered from 1to N). There are M directed roads in the country each of length  1 unit . Utkarsh is very lazy so he cannot walk more thanK units. He has Q queries. Each query is of the form  a b . For each query he wants to know how many  different paths  (of  positive length ) are there from city  a to b  which Utkarsh can walk. Output the answer modulo  10^9+7 .   INPUT First line contains  N,M,K next line contains M  pairs a b denoting a directed road from a to b . Next line contains  Q . Then Q  pairs follow.  OUTPUT For each pair, print the answer to the problem modulo 10^9+7.  CONSTRAINTS   N<=30 K<=3*10^10 M<=3*10^5 1<=a,b<=N (may contains self loops or multiple edges) Q<=900   Example 1 Input 3 4 2 1 1 2 2 3 3 1 1 1 1 1  Output 6   Example 2 Input 3 5 3 1 1 1 2 2 2 2 3 3 3 2 1 3 2 3  Output 4 6 
 Problem description. Shil is the owner of a magical toy factory. His factory has K machines which can produce toys simultaneously. The ith machine takes Ti minutes to produce a toy. As the festive season is nearing, the demand for toys has increased. Shil has recently received an order for N toys. Shil wants to deliver the order as soon as possible. Help him determine the minimum amount of time that is required to produce N toys.  Input First line of input contains K and N. Second line contains K space separated integers. The ith integer represents time Ti.   Output Output contains a single integer, the minimum time required to produce the toys.  Constraints  1 ≤ K ≤ 1000 1 ≤ Ti ≤ 1000 1 ≤ N ≤ 10^9     Example Input: 2 4 1 3  Output: 3   
 Problem Desrcription Shil likes to play with trees a lot.He is playing with an undirected tree containing N nodes.He wants to find out total number of unordered triplets (A,B,C) such that A is not  connected to B, B is not connected to C and A is not connected to C by a direct edge (No two of A, B, C are mutually connected). Since  he doesn't like to play with this alone , he asks for your help.    Input The first line of each test case contains a single integer N denoting the number of nodes. Next N - 1 lines consists of two integers u and v describing  an edge from u to v  Output Output a single line containing total number of triplets.  Constraints  1 ≤ N ≤ 10^5  1 ≤  u,  v  ≤  N     Example Input: 5 1 2 1 3 3 4 2 5   Output: 1    Explanation The only possible triplet is (1,4,5) 
Naruto recently learnt a new technique Rasenshuriken. To enhance the power of the new technique, he created N shadow clones of himself. The i^th clone had power Ai. Now Naruto will choose any 2 of the clones. The power of Rasenshuriken thus produced will be the product of the powers of the clones chosen. But he is going to fight a very strange enemy named Pain. He will be able to defeat Pain if the power of the Rasenshuriken is an even number. Now Naruto wants to know in how many ways he can select 2 of his clones such that he is able to defeat Pain. Two ways of chosing clones are considered different if there is atleast one clone that is present in first way and absent in the other.  Input  First line contains an integer T denoting the number of test cases. First line of each test case contains the number of clones N. N integers follow on the next line denoting the array A.     Output  For each test case, output a single line integer on each line: the number of ways Naruto can defeat Pain.     Constraints  1 ≤ T ≤ 10 1 ≤ N, Ai ≤ 10^5     Example  Input: 1 5 1 2 3 4 5 Output: 7    Explanation The ways are : {1,2},{1,4},{2,3},{2,4},{2,5},{3,4},{4,5} 
Shil has an array of N integers A1, A2.....AN. He challenges to find the Special Xor Sum for this array.  Special XorSum can be defined as Σ(Rmq(i,j)^Ai^Aj) where 1 ≤ i < j ≤ N . 	  Rmq(i,j) is defined as max(Ai, Ai+1 .... Aj) . Here ^ denotes Bitwise Xor operation.   Input First line of input consists of integer N. Next line contains N integers A1, A2...AN  Output Print the Special Xor Sum for the given array  Constraints  1 ≤ N ≤ 100000 1 ≤ Ai ≤ 1000000     Example 1  Input: 3 1 3 2  Output: 3   Example 2  Input: 5 1 2 6 2 1  Output: 30      Explanation Answer for first case is 3^1^2 + 3^1^3 + 3^3^2 
  Shil has a number X.He challenges you to find minimum positive number K such that F(K) is equal to X.  F(x) is defined as 1^2^3^....x.  ^ denotes the bitwise Xor operation     Input   First line of input will consists of total number of test cases T.Next T lines contains a number X.   Output  For each test case , output minimum possible value of K such that F(K) is equal to X.If there is no such K , print -1.Note that K should be positive number.     Constraints  1 ≤ T ≤ 1000000  0 ≤ X ≤ 10^18     Example Input: 3 1 2 100  Output: 1 -1 100    Explanation F(1)=1 , F(100)=100 and there is no such K such that F(K)=2 
Under the moon light, over the smooth dark water surface, Titanic was sailing along. Quite beautifully, wih sparkling light, it seemed to be flying. But air does not have ice bergs. A sudden crashing sound and a piece of ice floating by. But the depth is far greater than what it looks on the surface. Our ship is hit and has taken serious damages. The iceberg has damaged one of the sectors in the lowermost level. ( Where were the Lookers looking from the Look Out?? !! )  The captain has assigned you the job of finding the total time in sinking of the ship. The ship is considered sunk only when all the sectors at all levels are drowned completely in water.  A ship is represented in sectors as below:  + + + + +  + + + +   + + +  n is the number of sectors in the topmost level, k is the number of levels.  The first(topmost) level contains n sectors, 2nd contains n-1 sectors, and the k-th(lowermost) sector contains n-k+1 sectors. Water starts getting into a sector only when one(or both) of the following conditions are met: * a neighbor of the sector is completely drowned. * both the sectors under a sector are completely drowned.     +  a  +      b  c   Here, "a" will drown when both "b" and "c" are completely drowned. OR either of the neighbors ( + ) are completely submerged into water.  Input The first line contains the number of test cases (about 10). t test cases follow. For each test case, the first line contains three integers n( ≤ 1000), k( The next k lines contain the integers denoting the time taken for the sectors in k-th level to drown completely.  Output Display t lines each having the single integer, the total time after which, the ship will be completely submerged in water.   Example  Input: 1 7 2 3 2 3 1 7 5 9 6 4 6 5 4 7 2   Output: 33   Explanation: The sinking time of all the sectors for this example are:  17  15  12 16 21  27  33   15  11   5   9  16  18  Hence the answer 33. 
The captain of TITANIC is a mathematics freak. He has recently been given a problem that he is unable to solve. And he has asked your help to solve it.  There are n numbers in a given expression.  X1 X2 X3 ....  Xn  What is the number of ways to put parenthesis in the expression.  For n=4, the different ways are  (((x1.x2).x3).x4) ((x1.x2).(x3.x4)) (x1.((x2.x3).x4)) (x1.(x2.(x3.x4))) ((x1.(x2.x3)).x4)   Hence the required answer would be 5.  Input The first line contains the number of test cases t ≤10. Each of the next t lines contain single integers ≤1000 denoting n.    Output Display t lines containg the number of ways to put parenthesis in the expression of length n modulo 10000.   Example  Input: 2 4 5   Output: 5 14  
The Titanic ship is sinking. The nearest ship has answered the SOS call, and come to rescue the people. Everyone is anxious to get to safety. Unfortunately, the new ship may not have enough room to take everyone to safe land. This adds to the anxiety of people.  To avoid stampede, there has to be some rescue plan. You are made incharge of this. You have to make sure that as many people are safe as possible. Given the capacity of the ship, that is, the number of people that can board the ship, you have to calculate how many men, women and children can be sent to safety.  The following rules apply:  * The foremost priority is safety for children, but there must be atleast one adult (a man or a woman) for every four  children sent to the rescue ship. For upto four children, one adult, for five to eight children, 2 adults, and so on.  * Next priority is for women, but there must be at least one man for every two women. For upto two women, one man, for three to four women, two men, and so on.  Input First line contains the number of test cases (t less than 10000) The next t lines contain four integers (each between 1 to 10000 inclusive) each separated by a single space. The integers represent the capacity of the rescue ship, number of men on TITANIC, number of women and number of children, in this order.  Output Display t lines, each line has three space separated integers denoting the number of men, women and children put to safety, in this order.  Example  Input: 3 17 5 10 19 18 2 6 10 20 5 2 23  Output: 2 2 13 2 4 10 2 2 16   Explanation: Explanation for case 2: Since only 2 men are present, the number of women can not be more than 4.  
The captain of the ship TITANIC is a little .... off the track. He needs to select the crew for the ship. But everyone seems to be eligible. So to test their intelligence, he plays a game.  The contestants have to stand in a line. They are given the numbers in the order in which they stand, starting from 1. The captain then removes all the contestants that are standing at an odd position.  Initially, standing people have numbers - 1,2,3,4,5... After first pass, people left are - 2,4,... After second pass - 4,.... And so on.  You want to board the ship as a crew member. Given the total number of applicants for a position, find the best place to stand in the line so that you are selected.  Input First line contains the number of test cases t (t ≤ 10^5). The next t lines contain integer n, the number of applicants for that case. (n ≤ 10^9)   Output Display t lines, each containg a single integer, the place where you would stand to win a place at TITANIC.  Example  Input: 2 5 12   Output: 4 8  
The chef has a friend who is a mathematician. His friend is having a garage sale. The person being a mathematician, created an interesting scheme for the sale.  The scheme as stated by chef’s friend is as follows:  There are different types of items available for the sale. A person can buy a number of these items. From the items that will be purchased, the type of item which has the most frequency was found out and that particular frequency was recorded. Now, if this recorded number is a prime number, then half of the items of the item type that has a prime number frequency will be given as free and if the recorded number is a composite number, then half of the items of the item type that has a composite frequency will be given as free. You need to help the chef’s friend in finding the final bill generated after all the deductions according to the scheme as stated above. You need to do this for a number of test cases. The cost of each item is $1. The items are depicted with use of characters (a-z, A-Z ), i.e., the items of same type are depicted with the same character. For an odd number, say n the value of n/2 is the value obtained after passing n/2 through the greatest integer function. For example:  11/2 will be 5.   Input The first line contains the number of test cases t, that is, the number of people who purchase from the garage sale. The first and the only line of each test case contains a string s, the items purchased (containing a-z, A-Z ) by a person. .   Output The output for each test case contains an integer in a separate line denoting the total amount paid by the person after the deductions being made according to the garage sale.   Constraints 1<= t<= 100 1<=|s|<=10000  Example Input: 3 abcdefghig aabbccddddef Aabcdef  Output: 9 10 7   Explanation Example case 1. The frequency of 'g' is maximum, i.e., 2. The frequency of only 'g' is prime so half of items of type 'g' will be free. So, 1 item will be free.  Example case 2. The frequency of 'd' is maximum, i.e., 4, which is a composite number. The frequency of only 'd' is composite so half of items of type 'd' will be free. So, 2 items will be free. 
A list of names is taken as input, in which a particular name can occur multiple times. You need to arrange these names as they will appear in the dictionary and also print the number of times the arranged names appear in the list taken as input.   Input The first line of input contains an integer, t, which denotes the number of names that will follow. Then, t lines follow, each containing a name, in the form of a character string S.  Output The output contains the names as they would appear in the dictionary, followed by the frequency of that name in the list.  Constraints 1<=t<=100000 1<=|S| <=30 S contains only lower case characters.  Sample Test cases Input: 3 mike vanessa mike Output: mike 2 vanessa 1 
We are all familiar with the Sheldon's spot. For all those, who don't know about it, Sheldon's Spot is a place in Sheldon and Leonard's apartment which Sheldon has claimed as his own. Sheldon defines his seat as "It is the singular location in space around which revolves my entire universe." Sheldon relates his spot to himself in mathematical terms in "The Cushion Saturation": "In an ever-changing world it is a single point of consistency. If my life were expressed as a function on a four-dimensional Cartesian coordinate system, that spot, at the moment I first sat on it, would be (0,0,0,0). We are only concerned with the first two dimensions in this cartesian coordinate system that represents the plane in which Sheldon and people around him are walking. Sheldon is intitally standing on his spot, this represents the point (0,0) in the plane. He is playing paint ball with his friends in this plane. He has a mission, in which, he needs to get to a coordinate (x1,y1) in the same plane. There are n other coordinates in this plane which he can use as intermediate points on his way to get to the point (x1,y1). If he is moving from point A to point B, then he has to walk along the line segment joining these points. To move S units in this coordinate system, sheldon has to spend S*S Cal of energy. He wants the energy used to be minimum. You task is to find a path such that the energy expenditure is minimum. After this print the minimum amount of energy needed.   Input The first line of input contains 3 integers, n, x1, y1. Here n is the number of coordiantes in the plane and (x1,y1) is the destination point. After this n lines follow, each containing 2 integers, x and y. All these (x,y) pairs are n coordinates in the plane as stated in the problem statement.  Output The output contains a single line, the minimum amount of energy needed to get to the destination to complete the mission.  Constraints -1000<=x,y,x1,y1<=1000 0<=n<=1000  Sample Test cases Input: 3 3 3 -10 -30 -1 -2 1 1 Output: 10 
Chef has a (n x m) matrix. Initially the matrix elements have some values. You can perform 2 types of queries on the matrix. The two query types are as follows: 1. Query one is of the type -   1 x1 y1 x2 y2 k   For this query you have to increment by k all the elements in the sub matrix that has its top left corner element row as x1 and column as y1 and the bottom right corner element row as x2 and column as y2. 2. Query two is of the type -   2 x1 y1 x2 y2   For this query you have to print the sum of all the elements in the sub matrix that has its top left corner element row as x1 and column as y1 and the bottom right corner element row as x2 and column as y2 Your task is print the answer for the 2 type queries, whenever they occur.   Input 1. The first line of input contains 2 space separated integers n and m. 2. Then n lines follow each containing m space separated integers. This is the (n x m) matrix as input. Let this matrix element be denoted by e. 3. The next line of input conatins a positive integer q, the number of queries. 4. Then q lines follow each containing a query of either type as described in the problem statement.  Output The number of lines in the output is equal to 2 type queries. Each line contains the answer for that particular 2 type query.  Constraints 1 <= N, M x1,y1,x2,y2<= 500 1 <= a[i][j], k <= 100, let a[][] be the matrix (n x m) 1 <= q <= 100000  Sample Test cases Input: 3 3 73 5 57 89 53 66 21 27 74 6 1 1 1 3 3 10 2 1 1 3 3 1 1 1 3 3 10 2 1 1 3 3 1 1 1 3 3 10 2 1 1 3 3 Output: 555 645 735 
Chef is standing at a point on a 2-D plane. He has m points around him. Let the j th point be at a distance k[ j ] (1<=j<=m) from the point at which Chef is standing. He also has n sticks with him. Let the length of the i th stick be L[ i ] (1<=i<=n). He has an infinite number of stick with L[ i ] length. Now, chef is assigned a task. The task is that he has to check if a line segment can be formed from his position to the other points around him using the sticks that he has. The only boundation is that, he can either use only one or at most 2 sticks. The 2 sticks can be of same length. In other words, he can either use one stick as one line segment or join any two sticks or even the same stick to form one single line segment. Your task is to count the total number of points that have its distance from chef equal to any of the line segments. NOTE: Line segments should be exactly equal to the distance of points from chef.  Input The first line of input contains a positive integer n, the number of sticks with chef. The next line contains n space separated integers, the values of the lengths of n sticks. The third line of input contains a poititive integer m, denoting the number of points around chef. The next line contains m space separated integers denoting the distance of the points around chef in the 2-D plane from the chef's position.  Output A single integer denoting the number of points that can have a line segment equal to its length.  Constraints 1<=n,m,k[j],L[i]<=200000  Sample Test cases Input: 2 1 2 5 3 4 3 2 1 Output 5 
 The technical fest is here and a number of students are involved in events from the college. A number of roles and responsibilities are assigned to a number of students. The students were selected through an interview process. There is a student who has very good technical knowledge but he got all flustered, that is, nervous and confused during the interview. He was very anxious about the selection of the students for the events. The list was being compiled and he was standing outside the interview hall, waiting for the result. He asked one of the people, inside the interview hall that, about the number of students that will be selected. He got a reply that any number of students can be selected. He knows that a total of n students appeared for the interview. He started considering all the possible cases. Your task is to help him calculate the total number of ways in which the students can be selected. The number of students that will be selected will not be 0.    Input The first line of input contains the number of test cases t. Then t lines follow, each contains a number n, the number of events.  Output Output contains t lines; each line contains the answer for that test case. As the answer can be large, print the answer modulo 10^9+7   Constraints 1<=n<=10^14 1<=t<=100000  Sample Test cases Input: 2 2 1 Output: 3 1 
 We all use facebook and have friends on facebook. Suppose there are a total of n people numbered from 1 to n. You are given all the friendships in the form a (x,y) pair. This means that x and y are friends of each other. The friendships are not transitive in nature. You have to form groups, such that, if x and y are friends of each other, then they have to be placed in the same group. No, member can be a member of more than one group. From all the groups formed you have to print the count of all the groups that have an even number of members.    Input The first line of input contains the number of test cases. Description of a test case is given below. 1.The first line of each test case contains two space separated integers n and k, the number of people and the number of friendships, respectively. 2.Then k lines follow, each containing 2 space separated integers x and y. This means that x and y are friends of each other.  Output The output contains t lines, each line contains the required count for that particular test case.   Constraints 1 ≤ t ≤ 5 1 ≤ n ≤100000 1 ≤ k ≤ 10000 1 ≤ x,y ≤ n  Sample Test cases Input: 1 6 4 1 2 2 3 4 5 2 6 Output: 2 
 Sheldon , a student , was attending his Computer Science class . His teacher asked him to compute pow(a,b) and he was able to solve the problem for a given number of test cases . Seeing that Sheldon was able to solve the problem easily his teacher decided to make the next question a little tricky she asked Sheldon to compute pow(a,pow(b,c)) modulo 10^9+7 for a given number of test cases. Since he tried a lot but still got Time Limit Exceeded (tle) for this problem. Sheldon asked you to help him solve this problem.    Input The input consists of several test cases . Each case is on a single line . In each case , we are given three space separated integers a , b and c . The input is terminated by a = b = c = -1 .  Output For each test case , print exactly one line containing the value modulus 10^9 + 7.   Constraints 0 <= a , b , c <= 2^31 - 1  Sample Test cases Input: 2 2 2 -1 -1 -1 Output: 16 Note : Assume 0^0 = 1 
         You are given a tree with N vertices rooted at 1. You consider all the N subtrees (rooted at 1,2..N such that subtree rooted at i consists of i and all nodes which contain i as an ancestor).       Each node in the graph also consists of a color. The colors can be between 1 to K.       For each subtree find the no. of distinct colours in that subtree.       Output the sum of all these N numbers.     Input      First line of input contains 2 integers N,K.     Next N-1 lines (from line 2 to line N) contain 1 integer each. (i + 1) ^th line contains the parent of i+2 and is guaranteed to be lesser than i+2. 1 is the root of the tree.     Next line contains N integers , each from 1 to K representing the colors of each node.   Output  Single integer corresponding to the required answer.  Constraints  1 <= N <= 10^5  1 <= K <= 10^5    Example Input: 3 4 1 1 1 2 3  Output: 5    Explanation  The 3 subtrees are [1,2,3] , [2], [3] , which have 3,1,1 distinct colours respectively. So the answer is 5.  
Po - the Panda, is the chosen dragon warrior who is destined to bring peace in the universe. He fights evil Kung Fu Masters. He is amazingly witty, but wittier is his master, Master Shifu, who taught him the strongest move he knows, THE WUXI FINGER HOLD. But little does his master know that his skills are not the secret to his power, but chocolates, which his daddy makes for him. But now, there is trouble in the paradise. Tai Lung has come to defeat the dragon warrior, and to prepare Po, his daddy needs chocolates. But unfortunately, the stock of ingredients to make the chocolates has finished. So daddy rushes to the market to buy the ingredients. In the market, there is only one shop, and taking benefit of this thing, the shopkeeper charges hefty! There are a total N ingredients in the shop, each with a cost Ci. There is an infinite supply of each ingredient in the shop. The battle will last D days, so each day, daddy buys a contiguous subset of the ingredients defined by index L and R(1 ≤ L ≤ R ≤ N). Daddy buys all ingredients, one each, from index L to R(inclusive).Now the problem is the calculation of the total cost of the ingredients. The shopkeeper's formula for deciding the total cost of the ingredients is as follows:Let there be K different ingredients with cost C, so the cost with the normal calculation for all these ingredients should be K*C, but according to the shopkeeper, the cost of these ingredients is K*K*C.You need to find out the total cost for each day.    Input First line of the input will contain two integers N and D, the number of ingredients and the number of days respectively. The second line will have N integers, Ci (1 ≤ i ≤ N), denoting the cost of element i. The next D lines contain two integers L and R, denoting the contiguous array of ingredients daddy needs to buy on this day.    Output For each day, output a single line containing the total cost of the ingredients for that day.    Constraints  1 ≤ N,D ≤ 200000 1 ≤ Ci ≤ 1000000 1 ≤ L ≤ R ≤ N     Example Input: 3 2 1 2 1 1 2 1 3  Output: 3 6  Input: 8 3 1 1 2 2 1 3 1 1 2 7 1 6 2 7  Output: 20 20 20    Explanation Example case 1.The ingredients selected in range [1,3], i.e. day 2. Total cost = 2*2*1 + 1*1*2 = 6 Example case 2.Consider the following array, and the ingredients selected in range [2,7], i.e. day 1. Total cost = 3*3*1 + 2*2*2 + 1*1*3 = 20 
  Problem description.  A person has to pay K amount of its debt. The amount he will get back on giving an amount of Rs. x to the bank will be as per the value of the quadratic equation a*x^2 + b* x+c for that value x. Now he wants to pay all his debts so he wants to know the least non-negative value x (i.e. x ≥ 0) that can help him getting amount ≥ K from the bank to pay his debts. Help him find that least value x. Print -1 if no such value exists.   Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases is as follows."  Next line contains the values  a, b, c and the value of Kwhich is the amount he has to pay     Output Output description.  For each test case, output a single line containing the least value of x     Constraints  1 ≤ T ≤ 5 * 10^5 1 ≤ a,b,c ≤ 10^5 1 ≤ K ≤ 10^10     Example Input: 3 3 4 5 6 3 4 5 5 3 4 5 150  Output: 1 0 7    Note : Use printf/scanf instead of cin/cout 
 Problem Description ISRO is working on its one of the most important projects. The project has many divisions. Each Division has a certain number of people working as a group leaded by a team leader. Each member of the team is identified by a unique ID depending on the ID of the Team Leader. The number of people working in a team depends on the unique ID of the team leader. The Id of the leader consists of lowecase alphabets and digits only. the IDs of the members are formed by shuffling the ID of the team leader such that the digits are not shuffled, only the alphabets are shuffled. There are no duplicates in the ID. The task is to find the number of employees working in a particular team.    Input The first line of the input contains an integer T denoting the number of test cases. Then follow T lines, each containing the ID of the leader of the team   Output For each test case output the total number of people that can work in a team.    Constraints  1 ≤ T ≤ 10^5 1 ≤ Length of ID ≤ 10     Example Input: 3 abc123 a1b1 1a45k Output: 6 2 2  Explanation case 1 :6 possible IDs - abc123, acb123, bac123,bca123, cab123, cba123 (digits are not shuffled) case 2: 2 possible IDs - a1b1, b1a1 case 3: 2 possible IDs - 1a45k, 1k45a 
 Problem Description Alex from mars is planning to attack the Earth. He has created his army with some divisions. Each division is headed by a leader. Each division has some soldiers. When the leaders went to Alex to show the army formation, he was unhappy with the number of soldiers in each division. He then decided to increase or decrease the count of soldiers in each division. "m" represents the initial count in the division, "n" represents the count decided by Alex. Only two operations are allowed: 1. A soldier can be removed from the division, i.e. if there are x soldiers than after operation there will be (x-1) soldiers . 2. The current number of soldiers can be doubled, i.e. if there are x soldiers than x more soldiers can be added to hav 2x soldiers. Each operation cost one.  You have to find the minimum number of operations needed to convert "m" soldiers to "n" soldiers. See the explaination for more clarification.  Input The first line of the input contains an integer T denoting the number of test cases.Each test case consists of one line containing two space separated integers: m and n   Output For each test case output the minimum number of operations needed.   Constraints  1 ≤ T ≤ 10^5 1 ≤ m,n ≤ 10^9     Example Input: 3 8 16 8 5 1 3 Output: 1 3 3  Explanation case 1 :8 can be doubled to 16. so only one operation. case 2: 3 operations needed : 	8->7->6->5. 3 operations. 
 Problem Description Alice and Bob are back. This time they are playing a very strange game. There is a stack consisting of even number of balls open at both the ends. Each ball has a number written on it. The balls can be taken out only from the ends. Alice and bob plays turn by turn. Alice plays strategicallyy but Bob always takes out the ball which has maximum points.Alice always plays first Your task is to find which player has scored maximum points and wins the game when all the balls are taken out. In each turn a player can take out only one ball form either of the ends. you will be given an sequence of integers a[1], a[2],...,a[n] where a[i] represents the points of the ith ball.    Input The first line of the input contains an integer T denoting the number of test cases. Each test case T consists of two lines: First line: Number of elements 'N'. 'N' is always even. Second Line: 'N' space separated Integers.   Output For each test case output contains two space separated Integers: First : The winner ('1' for Alice, and '2' for 'Bob'), Second: Difference between the points of the players.    Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 1000 1 ≤ a[i] ≤ 1000     Example Input: 3 2 4 5 4 3 2 10 4 6 5 6 4 7 8 9  Output: 1 1 1 7 1 5 
   You have a list of N numbers. You are deleting D numbers from the list. Print the minimum sum that can be obtained by adding the remaining numbers after deleting exactly D numbers from the list.   Input  The first line will contain an integer T representing the number of test cases. Each test case will begin with two space separated numbers, N and D, on a new line.  Next line of each test case of each test case will have N space separated integers, representing the list of numbers.  Output  Print T lines of numbers representing the minimum sum in each case.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 20 1 ≤ D ≤ N     Example Input: 2 5 3 1 1 1 1 1 2 1 3 4 Output: 2 3    Explanation Example case 1. After removing 3 numbers we will be left with sum of 2. Example case 2. After removing 1 numbers we will be left with sum of 3, the only number left 
 Consider a k x k matrix M with entries as the following:  M(i, i) = 1 (Diagonal is all 1s) M(i, i+1) = 1 (Diagonal just above the main diagonal is all 1s) M(i, i-1) = -1 (Diagonal just below the main diagonal is all -1s) All the other elements of M are 0    Example for k = 4 would be:  1 1 0 0 -1 1 1 0 0 -1 1 1 0 0 -1 1   We denote the determinant of such a k x k matrix as D(k). We have to now compute the following sum for a given N: S = Σ gcd(D(i), D(N))  ∀ i = 1 to N (both inclusive). As the answer can be quite large, print it modulo 10^9 + 7   Input      First line of the input consists of T, the number of test cases.     The next T lines contain an integer each, N, which corresponds to the N as explained in the problem statement.   Output      For each test case, output the value of the desired sum, modulo 10^9 + 7   Constraints  1 ≤ T ≤ 10^5 1 ≤ N ≤ 10^5   Example  Input: 5 1 2 3 4 5  Output: 1 3 5 8 13  Explanation  Knowing the values of D(i) for i = 1 to 5, we can easily verify that the produced output is the value of the sum of gcds of the determinants as required.  
Devu has an array A consisting of N positive integers. He would like to perform following operation on array.  Pick some two elements a, b in the array (a could be same as b, but their corresponding indices in the array should not be same). Remove both the elements a and b and instead add a number x such that x lies between min(a, b) and max(a, b), both inclusive, (i.e. min(a, b) ≤ x ≤ max(a, b)).   Now, as you know after applying the above operation N - 1 times, Devu will end up with a single number in the array. He is wondering whether it is possible to do the operations in such a way that he ends up a number t.   He asks your help in answering Q such queries, each of them will contain an integer t and you have to tell whether it is possible to end up t.   Input There is only one test case per test file. First line of the input contains two space separated integers N, Q denoting number of elements in A and number of queries for which Devu asks your help, respectively Second line contains N space separated integers denoting the content of array A. Each of the next Q lines, will contain a single integer t corresponding to the query.  Output Output Q lines, each containing "Yes" or "No" (both without quotes) corresponding to the answer of corresponding query.  Constraints  1 ≤ N, Q ≤ 10^5 0 ≤ t ≤ 10^9   Example Input 1: 1 2 1 1 2  Output: Yes No  Input 2: 2 4 1 3 1 2 3 4  Output: Yes Yes Yes No  Explanation In the first example, Devu can't apply any operation. So the final element in the array will be 1 itself.  In the second example, Devu can replace 1 and 3 with any of the numbers among 1, 2, 3. Hence final element of the array could be 1, 2 or 3.  
  With the increasing popularity of Chef Po, many other chefs started to dislike him. So one day they decided that they will make chef Po indulge in a question so that he could not complete the food service in time, which will result in his unpopularity. They went to Chef Po and asked him, given a number N find the greatest Devil number K such that K<=N.  A number is Devil if it contains only 1 and 3. But Chef Po is well aware of these cunning tricks of other chefs, so he called you, a programmer, for his help to find the required devil number.    Input First line of input contains a number T, the number of test cases. Each of the next T line contains a number N.  Output For each N, print its corresponding devil number in a new line.  Constraints T<=100N<=10^6   Example Input: 2 41 18467 Output: 33 13333  
 Problem Statement Two Friends Single and Double want to date the same girl named Triple, but as both are friends they decide that they will play a game to decide who will go on a date with Triple.  In this game there will be n piles of coins, both players will take turns and pick at least one coin from one particular pile only, Double starts the game first. A player loses when he cannot further remove coins from any pile. Double wants to date this girl so badly that he asks for your help because you are one of the best friends of Double. Help Double to find minimum number of coins he needs to take out from a particular pile initially such that he wins. Assume both play optimally. If he cannot win in anyway then tell him so.  Input  First line of the input will contain t, the number of test cases. Next 2*t lines follow, First line of each test case will contain an integer n, the number of piles of coins in the game.  Second line will contain n space separated integers.   Output There will t lines printing the output. Each line will print output "NO" if Double cannot win the game by any move. If Double can win the game by any move then print "YES j l", where "j" is the pile number from which Double has to pick up "l" number of coins.  Tips:  If you have multiple test cases in a file start this section as: "For each test case, output a single line containing...".   Constraints  0 <= t <= 10 0 <= n <= 100000 0 < Number of Coins in each pile < 10^18 ans < 10^18   Example Input: 2 2 1 1 2 1 2  Output: NO YES 2 1   Explanation Example case 1. ... 
  El Macho has set the bomb and tied Lucy with it. To save Lucy , Gru has to defuse the bomb. The bomb displays 2 numbers a & b, and its diffusal code is the count of numbers in range [a,b] (both inclusive) having the following properties : 1. The number should be prime. 2. It can be written as the sum of squares of 2 positive integers ( number = p^2 + q^2). Help Gru to save Lucy by telling him the diffusal code.    Input First line contains T : Number of test cases followed by T line containing 2 space separated integers a and b.   Output One line per test case containing the count of numbers in the [a,b] having the above properties.    Constraints  1 ≤ T ≤ 10 1 ≤ a ≤ b ≤ 10^9     Example Input: 1 1 5 Output: 2    Explanation 2 = 1^2 + 1^2 5 = 1^2 + 2^2 
You are given set of N vectors, each vector consists of K integers. Two vectors ex, ey are are equal iff there exist function bijection f and integer r, such that  ex[i] = f( ey[(i+r)%K] ), for each i in range [0, K> Eg. (1, 2, 2, 3) == (22, 3, 4, 22), with r=2 and f(22)=2, f(3)=3 and f(4)=1. But (22,3,22,4) is not equal to (1, 2, 2, 3).  How many different vectors are there in set of N given vectors ?   Constraints :  n ≤ 10000  k ≤ 100   Input First number contains T (T ≤ 10), number of test cases. Each test cases consists of following. First line consists of N and K. N lines follows, the i-th containing K integers describing i-th vector.   Output Output one number, number of different vectors.   Example  Input: 2 3 4 22 3 4 22 1 2 2 3 22 3 22 4 5 5 3 3 3 0 3 8 4 4 4 0 1 1 1 1 1 1 1 8 6 1 1 3 3 3 5  Output: 2 3 
  Rohan, a young scientist, has developed a new programming language. In his new language, he has developed a special type of operator which he has termed as digit-wise operator. The language is in its Beta phase, so as of now, there are only two digit-wise operator which are + and *. The digit-wise operator + performs digit wise addition, while * performs digit wise multiplication. They work almost the same as bitwise operator work, differing only in the aspect that instead of working on bits, they work on digits of integers, also it outputs only the last digit of the result and the digit is printed in words (where all character are in lower case English alphabets). Given an expression consisting of two operands A and B, and a digit-wise operator, output the result it would produce.     Input The first line of input contains T, the number of test cases.  Each line of test case contains two space separated integers followed by a space, and then, the operand i.e. one of the digit-wise operator (+ or *).  Output For each test case, output the result that has been asked for in the problem statement.    Constraints  1 ≤ T ≤ 1000 1 ≤ A ≤ 10^5 1 ≤ B ≤ 10^5     Example Input: 2 1324 3950 + 6139 3850 *  Output: four two seven four eight eight five zero   
For any positive integer, we define a digit rotation as either moving the first digit to the end of the number (left digit rotation), or the last digit to the front of the number (right digit rotation). For example, the number 12345 could be left digit rotated to 23451, or right digit rotated to 51234. If there are any leading zeros after digit rotation, they must be removed. So 10203 could be left digit rotated to 2031, then left digit rotated again to 312. Given an integer N, determine the largest integer that can result from performing a series of one or more digit rotations on N.  Input Input will begin with an integer T (at most 1000), the number of test cases. Each test case consists of a positive integer N<100000000 (10^8) on a line by itself.  Output For each test case, print the largest integer that can result from performing one or more digit rotations on N.  Sample Input 6 12345 54321 10901 211011 7 90   Sample Output 51234 54321 11090 211011 7 9 
  Brock likes competitive programming very much. Therefore he decided to take training from Ash, one of the best coaches in India. Ash used to give an assignment to his students every day. He was known for his difficult problems and only the best of his students could solve those problems. It was Brock's first day in the camp and he wanted to impress his Coach by solving the problem. But after spending 6 hours on the problem, Brock wants help from you. Help Brock solve the problem which goes as follows.  You have n dishes and m ingredients given. Dishes are numbered from 1 to n.Each ingeredient can be represented as an english lowercase alphabet(a to z).  Each dish can contain only one ingredient. Some of the dishes already contains an ingredient and some of them doesn't which is represented by a '?'. Now you have to add any of the m ingrediemts to this unknown dish(unknown dish will be represented by '?'. Multiple dishes may have the same ingredient. You are also given Q restrictions of the form (x y) where each restriction reperesents that dish x and dish y should have the same ingredient in it.(1-based index) You have to tell the number of ways to add ingredients to unknown dishes so that all the Q restrictions are followed. As number of ways can be very large answer it as modulo 1000000007. Two ways are considered different if there is at least one dish with different ingredient. If it is impossible to satisfy all Q conditions output -1.     Input First line will contain n and m (number of dishes and number of ingredients). All the dishes are numbered from 1 to n and ingredients from 1 to m where m<=26 Next line will follow a string representing n dishes where each character will be lowercase english alphabet or a question mark('?'). Next line will contain an integer Q, number of restrictions. Next Q lines will follow pairs of integers x y.The ingredient in dish x and y should be same.  Output Output a single line containing number of ways to fill ingredients in unknown dishes satisfying given Q restrictions. Output your answer by taking modulo with 1000000007. If it is impossible to get such configuration then output -1. For better understanding look at the explanation given below.    Constraints Example 1 Input: 5 3 ababc 1 1 3  Output: 1  Example 2 Input: 5 4 ab?b? 1 1 3  Output: 4  Example 3 Input: 5 3 a?cb? 2 1 3 2 5  Output: -1    Explanation Example case 1. The only valid final form is "ababc". So number of ways will be 1. Example case 2. The valid forms are: "ababa","ababb","ababc","ababd" Example case 3. No valid configuration can be formed as position 1 and 3 should be same but they are already given some different ingredients 
Papa Smurf is trying his hands on a new type of dish named IngrediMix. The process of preparation of this dish requires N ingredients (namely a0, a1, a2,... aN-1) to be mixed together in one bowl. Every ingredients has a nutritional value (v0, v1, ..., vN-1) associated with it. The process of creation of dish continues until we have all ingredients mixed in one single bowl. In each step, we follow any one of the following steps a) Select one of the unselected ingredient, ar, and put it in a new bowl. The nutritional value of this bowl will be vr. b) Select one of the unselected ingredient, ar, and put it in a bowl already containing ingredient ar-1 (or ar+1). If the ingredient ar and ar-1 (or ar+1) has additive binding, then the nutritional value of the bowl is increased by vr. If they have multiplicative binding, then the nutritional value of the bowl is increased by the factor of vr. c) Select any two bowls A and B, such that if Bowl A has ingredient ar, then Bowl B must have ingredient ar-1 (or ar+1). Merge Bowl B into Bowl A. If the ingredient ar and ar-1 (or ar+1) has additive binding, then the nutritional value of the bowl A is increased by the nutritional value of bowl B. If they have multiplicative binding relation, then the nutritional value of the bowl A is increased by the factor of nutritional value of bowl B. Papa Smurf wants to mix the ingredients in such a manner such that the final dish has maximum nutritional value. Help him.  Input The first line of input contains a single number, T, number of test cases. Then T test cases follow. The first line of each test case contains an integer N, total number of ingredients. Then in second line, we have N space separated integers (v0, v1,..., vN-1) representing the nutritional value of ingredients. In third line we have a string S containing N-1 characters, representing the binding relation between ingredients. If S[i] = 'a' then, there is an additive binding relation between ingredient ai and ai+1. If S[i] = 'm', then we have a multiplicative binding relation between ingredients ai and ai+1.  Output For each test case, find the maximum nutritional value Papa Smurf can get for his dish. As this number can be very large, print the answer modulo 1000000007 (10^9 + 7).  Constraints 1 ≤ T ≤ 10 2 ≤ N ≤ 10^5 1 ≤ ai ≤ 10^5  Example  Input: 1 5 1 2 3 4 5 amam  Output: 105   Explanation The following procedure describes the mixing process to be adopted by the Papa Smurf. 1. Ingredient a0 (v0 = 1) is taken in bowl A. Ingredient a1 (v1 = 2) is added to it to yield a mixture having nutritional value 3 since the binding is additive in nature. 2. Ingredient a2 (v2 = 3) is taken in bowl B. Ingredient a3 (v3 = 4) is added to it to yield a mixture having nutritional value 7 since the binding is additive in nature. 3. Now ingredient a4 (v4 = 5) is added to bowl B and the nutritional value of this bowl changes to 35 as a3 and a4 has multiplicative binding relation. 4. Now the mixture in bowl B is added to the mixture in bowl A to get a final mixture, having nutritional value of 105. As bowl B has ingredient a2 and bowl A has ingredient a1, and they have a multiplicative biding, the nutritional values of both bowls are multiplied. 5. Dish preparation process stops as bowl A has all ingredient and it can be easily verified that this is the highest nutritional value possible with the given order of ingredients. 
  Diwali is arriving and Rahul wants to give his girlfriend a gift. He decides the gift to be a list of numbers such that each of the numbers are special. A number is considered special if sum of its digit is divisible by 9. If a number is not special, then Rahul has to find the nearest special number and convert his number to that at the cost = abs( nearest special number - current number) Note that nearest special number may be smaller, greater or equal to current number.    Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case contains an integer  N which may or may not be special.     Output Output description.  For each test case, output a single line, the minimum cost to change current number into special number.     Constraints  1 ≤ T ≤ 10^3 -10^18 ≤ N ≤ 10^18     Example Input: 4 0 8 -8 -4 Output: 0 1 1 4 
Little Anand loves to play chess. But he hates to study. He particularly dislikes geometry. One day his geometry teacher challenged him with a problem in a different fashion. She framed the question, keeping in mind his interest in chess. She asked him ,   Given a N by N chess board. In how many ways, a valid chessboard can be        formed with given N. A Chess Board is valid if it has alternate colors on adjacent cells.    Anand needs your help . Write a program to get number of chess boards that can be formed with given N.   Input :   First Line contains T, number of test cases.   for next T lines, N is given for each test case Output:   Output Contains number of valid chess boards. sample input:   2   3   4 sample output:   14   30 
Sachin is in great form, and he is playing exceptionally well, given that this is his last world cup. But his fans, who always want the best for him, have suggested him to not to score 3 runs on any ball. Indian cricket and their superstitions. So, Tendulkar, being the gentlemen he always is, has agreed to score either 1, 2, 4 or 6 runs per ball. Assuming that he will score on each and every ball, write a program to find in how many ways he can score N runs.  Input: First line contains T : number of  test cases   following T lines contains total  Output:Output should contain T lines . No. of ways to score corresponding total N  Sample Input: 2   3   4  Sample output: 2   4  Constraints: N < 150Their is no constraint on the number of balls he would face to make the target of N runs 
As we all know, Dhoni loves drinking milk. Once he and Sir Jadeja were invited in the inauguration of a Dairy company in Ranchi.  The company had arranged  n   jars of milk from various breeds of cows , jar number  i  containing  a[i]  litres of milk. Since Dhoni loves driking milk more than Sir Jadeja, so Kohli suggested a plan for them. His plan was that each time Dhoni will choose a jar containing the maximum amount of milk. If this jar has less than  k   litres of milk or if Dhoni has already drunk more than  m  number of times from this jar, then the milk contained in the jar will be drunk by Sir Jadeja. Sir Jadeja will drink all the milk left in that jar. Otherwise Dhoni will drink exactly k  litres of milk from the jar and put it back at its position. Dhoni will do so until he has given all jars to Sir Jadeja.  You have to calculate how much milk Sir Jadega will get after Dhoni satisfies his hunger modulo 1,000,000,007.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains integer N , M, K denoting the number of milk jars, maximum number of time Dhoni will drink from any jar and maximum amount of milk Dhoni will drink at any time respectively. The second line contains N space-separated integers A1, A2, ..., AN denoting the amount of milk in each jar.     Output  For each test case, output a single line containing the amount of milk Sir Jadega will get modulo 1,000,000,007.     Constraints  1 ≤ T ≤  10 1 ≤ N ≤  10^5 0 ≤ M ≤  10^6 1 ≤ K ≤  10^6 0 ≤ Ai ≤  10^9     Example Input: 1 3 3 3 15 8 10  Output: 9    
  Given a 2xn rectangle/grid, you have to find the number of ways of tiling this rectangle/grid with 2x1 dominoes. Since the answer could be very large, you need to output it modulo 1000000007 (10^9 +7).    Input The first line of the input contains an integer T, the number of test cases. Then T test cases follow. Each test case consists of a line which contains a positive integer, n.    Output Output on a new line the answer corresponding to (n-1) except for n=1.  Constraints 1<=T<=1000 1<=n <=10^18  Example Input: 2 2 4  Output: 1 3   
Dilku and Bhopu live in Artland. Dilku loves Bhopu and he writes a message : “iloveyou” on paper and wishes to send it to Bhopu. As Dilku is busy making an artwork, he asks his friend Raj to send the message to Bhopu. However Raj has a condition that he may add/remove some  characters and jumble the letters of the message. As Bhopu understands Dilku, she can read “iloveyou” from the message if all the characters of the string “iloveyou” are in the message received by her. Bhopu is happy if she can read “iloveyou” from the message. Otherwise, she is sad. Tell whether Bhopu is happy or sad.  Input Input contains a string S, where S is the message received by Bhopu. String S consists of only lowercase letters.  Output Output “happy” if Bhopu is happy and “sad” if Bhopu is sad.  Constraints 1 ≤ |S| ≤ 100 Where |S| denotes length of message string S  Example Input 1: iloveyou  Output 1: happy  Input 2: ulrvysioqjifo  Output 2: sad  Input 3: abcvleouioydef  Output 3: happy 
 There are N doors of a palace, all of which are operated by a set of buttons. One day, Alice, who is just 8 years old, gets access to these buttons. Having recently learnt the multiplication tables, she decides to press buttons in a particular order. First, she presses all the buttons that are multiples of 1. Next, she presses all buttons that are multiples of 2, then 3 and so on until N; after which she leaves.  Each press of button toggles the state of the door, i.e. a door that is open will be closed by the button press and opened if closed initially.  Given that all doors were closed initially, give the number of doors that are open after she leaves.   Input  The input contains several lines. First line contains the number 't', which represents the number of test cases that follow. This is followed by 't' lines of numbers which represent 'N'.  0 < t < 1000000 0 < N < 100000000    Output  For each input, output the number of doors that are open at the end.   Example  Input: 4 4 10 16 27  Output: 2 3 4 5  
Not long after their country lifted the World Cup, the people of Nobitaville decided to organize a Victory Marathon for celebrations. While other preparations were in order, Mr.Doraemon, who happened to be a very moody person, made it clear by announcing that he would let the Marathon take place only if Jerseys were distributed among people in some sort of order. He added that the richest person should get the smallest Jersey Number and the next richest person, the second smallest jersey number, and so on and so forth. If this order would be taken care of, the mayor would happily let the people enjoy the Marathon, else everybody would be sent back home. The people are really looking forward to enjoy the Marathon but are quite worried about this wish of the mayor and hence, need your help. Jerseys have already been distributed among the people. You need to check whether the Marathon will take place or not, so that if not, the people can reshuffle the jerseys and fulfill the mayor's wish.  Input The first line of Input contains an integer T, denoting the number of test cases. Then T test cases follow. The first line of each test case contains an integer N, denoting the number of people participating in the Marathon. This is followed by two lines, each containing N number of entries. The first line contains N  distinct numbers, denoting the Jersey Number of the people( Ai ). The second line contains N numbers, denoting the wealth of the people( Bi ), with ith wealth corresponding to the ith person, mentioned in the previous line.  Output If the Jerseys have been distributed in the order the Mayor demands, print "YES" and if not, print "NO" (without quotes).  Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 10^5 1 ≤ Ai ≤ 10^9 1 ≤ Bi ≤ 10^9   Example Input: 2 5 2 3 5 1 4 600 400 100 2000 250 4 7 9 11 12 6000 7000 4000 102  Output: YES NO   NOTE: Jersey Numbers will not be provided in non-decreasing fashion. 
Problem Statement One of the most popular games played in bitotsav gaming events is DOTA. Ezalor, Keeper of the Light is a great dota hero, but playing this hero needs good codediction and he needs you to help him with this. Ezalor has a powerful spell called illuminate, which attacks all the hero dealing them a lot damage in a straight line. The guy playing this hero has decided to cast illuminate only in direction parallel to axes of the rectangular dota map. Think of dota map as a rectangular gird of rows and columns(1<=R<=40, 1<=C<=40).Each cell in the map consists either an ally or an enemy. The spell of ezalor is 1 unit wide and he can control the length of the spell. Each 'illuminate' spell can be cast only alligned parallel to one of the sides of the map. Ezalor doesnt want to affect the game of other ally heros so he would always make sure that his spell is not casted on the cell of any ally. Ezalor wishes to minimize the number of spells he has to cast, so that every enemy is hit atleast once, an enemy can be hit with the spell more than once. You have to compute the minimum no of spells required. Input Specification  t number of the test cases. Each test case begins with a line containing two space separated intergers R and C, then R lines follows. each line has a string of C characters with '*' recodesenting an enemy and '.' recodesenting an ally.   Output Specification  For each test case output a single line containing an integer recodesenting the number of spells Ezalor needs.   Sample Input  2 3 4 **** *.*. *.** 4 2 *. *. .* .*   Sample Output  4 2  
The palindrome is a string that can be read the same way from left to right and from right to left. For example, strings "aaaaa", "1221", "bbaabb" are palindromes, however the string "chef" is not a palindrome because if we read it from right to left, we will obtain "fehc" that is not the same as "chef".  We call a string a "double string" if it has an even length and the first half of this string is equal to the second half of this string, for example "abab" is a double string because the first half "ab" is equal to the second half "ab", however the string "abba" is not a double string because the first half "ab" is not equal to the second half "ba". The empty string "" is a double string, and its length is 0.  Chef doesn't like palindromes, however he likes "double strings". He often likes to change the order of letters in some palindrome and sometimes to remove some symbols from it. Now he wonders: if a palindrome of length N is given, what is the maximal possible number of characters in a "double string" that can be obtained by removing and changing the order of symbols in it?   Input Several test cases are given. The first line of the sample input contains an integer T - the number of test cases. Then, T lines follow. Each line consists of a single integer N - the length of a palindrome.  Output For each test case output a single integer - answer to the problem.   Constraints 1<=T<=10000 1<=N<=1000000000   Example  Input: 2 2 4  Output: 2 4 
     Children         are taught to add multi-digit numbers from right-to-left one digit at a time.         Many find the "carry" operation - in which 1 is carried from one digit position         to be added to the next - to be a significant challenge.  Your job is to         count the number of carry operations         for each of addition problem so that educators may assess their difficulty.       Input   Each line of input contains two unsigned         integers less than 10 digits.   The last line of input contains 0 0.       Output   For each line of input except the last         output the number of carry operations that would result from adding the two         numbers, in the format shown below.       Sample Input   123 456   555 555   123 594   0 0       Sample Output   No carry operation.   3 carry operations.   1 carry operation.     
 Ali knows how to count, but he is now learning how to             write numbers. As he is a very good student, he already learned 1, 2, 3 and 4.             But he did not realize yet that 4 is different from 1, so he thinks that 4 is             another way to write 1. Besides that, he is having fun with a little game he             created himself: he make numbers (with those four digits) and sum their values.             For instance:   132 = 1 + 3 + 2 = 6   112314 = 1 + 1 + 2 + 3 + 1 + 1 = 9   (Remember that Ali thinks that 4 = 1)       After making a lot of numbers in this way, Ali now             wants to know how much numbers he can create such that their sum is a number n.             For instance, for n=2 he noticed that he can make 5 numbers: 11, 14, 41, 44 and             2 (he knows how to count them up, but he does not know how to write five).             However, he cannot figure it out for n greater that 2. So, he asked you to help             him.       Input:   Input will consist on an arbitrary number of sets.             Each set will consist on an integer n such that 1 <= n <= 1000. You must read             until you reach the end of file.       Output:   For each number read, you must output another number             (on a line alone) stating how much numbers Ali can make such that the sum of             their digits is equal to the given number.       Sample Input   2    4      Sample Output   5    13 
 Have you ever played Minesweeper? It’s a cute little             game which comes within a certain Operating System which name we can’t really             remember. Well, the goal of the game is to find where are all the mines within a             MxN field. To help you, the game shows a number in a square which tells you how             many mines there are adjacent to that square. For instance, suppose the             following 4x4 field with 2 mines (which are represented by an * character):   *…   ….   .*..   ….       If we would represent the same field placing the hint             numbers described above, we would end up with:   *100   2210   1*10   1110       As you may have already notice, each square may have             at most 8 adjacent squares.       Input:   The input will consist of an arbitrary number of             fields. The first line of each field contains two integers n and m (0<n, m<=100)             which stands for the number of lines and columns of the field. Each safe square             is represented by an “.” Character (without the quotes) and each mine is             represented by an “*” character (without the quotes). The first field line where             n=m=0 represents the end of input and should not be processed.       Output:   For each field, you must print the following message             in a line alone:   Field #x:   Where x stands for the number of the field (starting             from 1). The next n lines should contain the field with the “.” Characters             replaced by the number of adjacent mines to that square. There must be an empty             line between field outputs.       Sample Input   4 4   *…   ….   .*..   ….   0 0       Sample Output   Field #1:   *100   2210   1*10   1110 
 A paper cube can be made up from six paper squares.             Given an projection (map) of the cube, you are to determine its correctness. A             projection is correct, if a cube can be made up from it.        Input:   First line contains the number of test cases. Each             test case contains a projection represented as 6*6 grid containing 6 ones and 30             zeros, separated by spaces. 1s represent the paper squares. All squares are             placed immediately to each other, so that each square is connected with at least             one other square. Each test case is separated by an empty line.       Output:   For each test case, your program should print             “correct” if cube can be made up from the given projection, or “incorrect”             otherwise.       Sample Input   1   0 0 0 0 0 0   0 0 0 1 0 0   0 0 0 1 0 0   0 0 1 1 1 0   0 0 0 1 0 0   0 0 0 0 0 0           Sample Output   correct     
 Given a M by N grid of letters, (1<=M,N<=50), and a             list of words, find the location in the grid at which the word can be found. A             word matches a straight, uninterrupted line of letters in the grid. A word can             match the letters in the grid in the grid regardless of case (i.e. upper and             lower case letters are to be treated as the same). The matching can be done in             any of the eight directions either horizontally, vertically or diagonally             through the grid.       Input   The input will contain one or more test cases. The             first line of each test case begins with a pair of integers, M followed by N,             1<=M,N<=50 on a single line. The next M lines contain N letters each; this is             the grid of letters in which the words of the list must be found. The letters in             the grid may be in upper or lower case. Following the grid of letters, another             integer K appears on a line by itself (1<=K<=20). The next K lines of input             contain the list of words to search for, one word per line. These words may             contain upper and lower case letters only (no spaces, hyphens or other             non-alphabetic characters).The input will end with two zeroes for M and N.        Output                             For each word in the word list, output a pair of integers representing the             location of the corresponding word in the grid must be output. The integers must             be separated by a single space. The first integer is the line in the grid where             the first letter of the given word can be found (1 represents the topmost line             in the grid, and m represents the bottommost line). The second integer is the             column in the grid where the first letter of the given word can be found (1             represents the leftmost column in the grid, and n represents the rightmost             column in the grid). If a word can be found more than once in the grid, then the             location which is the output should correspond to the uppermost occurrence of             the word (i.e. the occurrence which places the first letter of the word closest             to the top of the grid). If two or more words are uppermost, the output should             correspond to the leftmost of these occurrences. All words can be found at least             once in the grid. Separate the output of each test case with a blank line.       Sample Input   8 11   abcDEFGhigg   hEbkWalDork   FtyAwaldoRm   FtsimrLqsrc   byoArBeDeyv   Klcbqwikomk   strEBGadhrb   yUiqlxcnBjf   4   Waldorf   Bambi   Betty   Dagbert   4 4   xbcd   xbcd   xbcd   abce   1   dcba   0 0       Sample Output   2 5   2 3   1 2   7 8       1 4     
      When displaying a collection of rectangular windows, a             critical step is determining whether two windows overlap, and, if so, where on             the screen the overlapping region lies. Write a program to perform this             function. Your program will accept as input the coordinates of two rectangular             windows. If the windows do not overlap, your program should produce a message to             the effect. If they do overlap, you should compute the coordinates of the             overlapping region (which must itself be a rectangle).          All coordinates are expressed in "pixel numbers",             integer values ranging from 0 to 9999. A rectangle will be described by two             pairs of (X, Y) coordinates. The first pair gives the coordinates of the lower             left hand corner (XLL, YLL). The second pair gives the coordinates of the upper             right hand coordinates (XUR, YUR). You are guaranteed that XLL<XUR and YLL<YUR.       Input                                The             first line will have a number N (0<N<=100) with the number of test cases. Each             test case will consists of two lines each containing four numbers. The first             line contains the integer numbers XLL, YLL, XUR and YUR for the first window.             The second contains the same numbers for the second window.        Output   For each test case, if the two window do no overlap,             print the   Message "No Overlap". If the two windows do overlap, print 4             integer numbers giving the XLL, YLL, XUR and YUR for the region of overlap.              Note that two windows that share a common edge but have no other point in common             are considered to have "No Overlap".       Sample Input   2   0 20 100 120   80 0 500 60   10 10 20 20   30 30 40 40       Sample Output   80 20 100 60   No Overlap      
   Apple         Trees     Apple trees in a garden form a rectangular grid. A         group of monkeys lives on these  trees. Not more than one monkey lives in each tree. A         monkey feels happy to believe that it is  the lord of all apple trees it views from the top of         the tree it lives in. However, as the trees are  of different heights a monkey can view trees that are         not obstructed from its view by other  trees. A monkey that views the maximum number T of         trees is a lord of lords. The undisputed  monarch is the lord of lords that lives in the highest         tree. In case two or more lord of lords  have the claim to be the monarch then monarchy is         disputed.  Assume that the ground of the garden is plane;         vertical straight lines represent trees;  trees are at a distance of unity row-wise or         column-wise; and the height of each tree is an  integer in the unit of the distance. A tree of height         zero in a position indicates absence of a  tree on that position. Visibility of a tree R from the         top of a tree P depends on heights and  locations of P, R and other trees. A tree R is         invisible from the top of a tree P if and only if  there exists a visible tree Q that lies on the         vertical plane containing P and R and is located  between P and R so that the top of R is either on or         below, the line joining tops of P and Q.  Write a program to locate the undisputed monarch,         given heights of all trees.            Input  The input may contain multiple test cases.  For each test case, the first line gives two integers         m and n representing respectively  the total number of rows and columns of trees in the         garden. Each of the next m lines  contains n integers representing heights of trees in a         row. The jth integer in the ith row  represents the height of the tree in ith row and jth         column of the garden. Assume that the  garden contains no more than 200 trees.  The input terminates with an input 0 as the first         input for a test case.                 Output  For each test case output three integers r, c and T in         one line. Integers r and c  represent the location of the undisputed monarch,         where r is the row number and c is the  column number of the tree on which the monarch lives.         In case monarchy is disputed, both r  and c are zero. The integer T represents the total         number of trees visible to a lord of lords.            Sample Input  3 3  1 2 3  4 5 6  7 0 9  3 4  4 4 4 4  4 4 4 4  4 4 4 4  1 10  5 3 2 1 6 4 2 8 7 1  0            Sample Output  2 2 7  0 0 10  1 5 6 
  Bio-HRQ-Comparator     Bio-HRQ-Comparator is a fully automatic         computer based neurological scanning  system that scans brains of three persons         simultaneously and ranks them 1, 2, 3 with respect  to their HRQ (Human Resource Quotient) for         a given activity. Bio-HRQ-Comparator has three  specially designed chairs each fitted with         brain scanning devise. Exactly three persons are to  sit on the chairs and just think         independently and simultaneously on the best possible solution  of a given problem related to an activity         for which HRQ is tested. The thinking process  continues for a specified duration of time         that is dependent on the complexity of the given  problem. Bio-HRQ-Comparator captures the         thinking process and ranks them with respect to  their HRQ without any further scrutiny.         Through rigorous testing and analysis, ranking by Bio-  HRQ-comparator has been found to be so         precise that no two ranked persons are identified  to have different rank order or found to         have the same HRQ.  The system has the potential to replace         the traditional method of selection of  candidates through interview, where the         basic problem is to arrive at total ordering and  ranking of a given set of n (assume n≤ 20)         candidates with respect to their HRQ for a specific  job. It is proposed to select arbitrarily         k sets of three candidates each and rank candidates in  each set using Bio-HRQ-comparator hoping         that total ordering and ranking of candidates can  be done successfully. However it is not         always possible to arrive at total ordering and ranking  of all n candidates using arbitrarily         selected k sets of candidates.  You are required to write a program that         either ranks all n candidates, if possible,  using the k results obtained so far or         determines the minimum number m of additional Bio-  HRQ-comparator testing required for         determining the total ordering and ranking of all n  candidates. In case m additional testing         are required, the program should identify m sets of  three candidates each, for additional         Bio-HRQ-comparator testing. Assume for simplicity that  a candidate is not required to appear more         than twice for additional testing.   Input  Input may contain multiple test cases.         Each test case contains two lines.  The 1st line gives n and a string of n         letters. Each letter in the string identifies a  candidate and letters appear in an         arbitrary order.  The 2nd line gives k results of         Bio-HRQ-comparator testing. The first field is the integer  k and it is followed by k strings of three         letters each representing k results. The three letters in  a string appear in order of ranks 1, 2 and         3 of candidates represented by the letters.  Input terminates with a line that contains         0 (zero) as the first and the only character.   Output  For each test case, print output in one         line.  The first field in the line gives the         integer m. If m is equal to 0 then a string of n letters  follows it; the string represents the         total rank order of all n candidates.  Otherwise m strings each of length three         follow the integer m. Each string contains  either three letters or two letters         followed by an asterisk (*). Each letter identifies a specified  candidate while an asterisk represents an         option to have any candidate. Letters in a string  appear in alphabetic order and strings         appear in lexicographic order.   Sample Input  5 axdpf  3 adf xdp axp  5 xapfd  3 afd xdp axf  7 adgbnem  4 aem egn dgm emb  0         Sample Output  1 fp*  0 axfdp  2 ade bmn 
           Alphabets                       You are provided a set of characters forming an alphabet, arranged in increasing         order of their weight. Write a program to sort a set of strings in ascending         order using the provided alphabet. The sorted output is to be displayed on the         screen.               Input:           First line contains the number of test cases. Each test case is separated by an         empty line. Each test case contains the following inputs:   Size of alphabet  Characters in alphabet  Strings to be sorted                Output:           For each test case, display the input strings in ascending order. Output of each         test should be separated by an empty line.               Sample Input           2           26           ABCDEFGHIJKLMNOPQRSTUVWXYZ           ABCD           ABCFX           ABCE                       26           ZYXWVUTSRQPONMLKJIHGFEDCBA           ABCD           ABCFX           ABCE               Sample Output           ABCD           ABCE           ABCFX                       ABCFX           ABCE           ABCD 
           Fibonacci                       Recall the definition of the Fibonacci numbers:                       f1           f2           fnn-1+fn-2        (n>=3)                       Given two numbers a and b, calculate how many Fibonacci numbers are in the range         [a,b].               Input:           The input contains several test cases. Each test case consists of two         non-negative integer numbers a and b. Input is terminated by a=b=0. Otherwise,         a<=b<=10^100. The numbers a and b are given with no superfluous         leading zeros.               Output:           For each test case output on a single line the number of Fibonacci numbers fi         with a<=fi<=b.               Sample Input           10 100           1234567890 9876543210           0 0               Sample Output           5           4 
           Politics                       Leaders of N political parties agree to have a conference to resolve a political         issue through discussion. However due to animosity between parties and leaders,         some of the leaders may dislike sitting next to leaders specified by them. The         problem is to determine, if possible, sitting arrangements on the table, so that         a leader is not required to sit next to another leader disliked by him/her.         Leaders are identified by integers 1,2,..,N. It may be noted that if a leader         ‘i’ dislikes sitting next to another leader ‘j’, then the leader ‘j’ may not         necessarily dislike sitting next to leader ‘i’. However in such a case ‘i’ and         ‘j’ cannot sit next to each other because ‘i’ dislikes ‘j’.                       An arrangement is represented by a sequence of N integers 1,2,…,N indicating the         relative position of each leader. In case of more than one arrangement, the         arrangements are to be printed in lexicographic order.           Write a program to print all possible sitting arrangements for the conference.               Input:           The input may contain multiple test cases. The first line of each test case         contains the case number ‘c’ and the total number of leaders N where N will be         less than 100. Each of the next N lines contains N 0’s or 1’s. If the value in i^th         row and j^th column contains 1, then the i^th leader cannot         sit with j^th leader. This is true for all I,j=1,2,…,N. The input         terminates with a single 0 in the last line.               Output:           For each test case, print the case number ‘c’ and the total number of possible         arrangements ‘k’ in first line with a single space between them. Each of the         next k lines prints an arrangements in lexicographical order separated with a         single space.               Sample Input           1 5           11010           01001           00100           10010           01011           2 6           101100           010001           101000           100110           001011           010011           0   Sample Output           1 0           2 2           1 5 2 3 4 6           1 5 2 4 3 6 
           Palindrome                               A simple recursive method to generate a numeric palindrome from any         number is to reverse its digits and add it to the original. If the sum is not a         palindrome (which means, it is not the same number from left to right and right         to left), repeat this procedure. For example for 195:       195 + 951 = 786       786 + 687 = 1473       1473 + 3741 = 5214       5214 + 4125 = 9339         Resulting palindrome      In         this particular case the palindrome 9339 appeared after 4th addition. This         method leads to palindromes in a few step for almost all of the integers. But         there are interesting exceptions. 196 is the first number for which no         palindrome has been found. It is not proven though, that there is no such a         palindrome.               Your         task is to write a program that gives the resulting palindrome and the number of         iterations (additions) to compute it. All tests data in this problem will have         an answer, will be computable with less than 1000 iterations (additions), which         will yield a palindrome that is not greater than 4,294,967,295.       Input                                 The first line will have a number N (0<N<=100) with the number of test         cases, the next N lines will each have a number P to compute its palindrome.               Output                    For each of the N numbers you will have to write a line with the minimum         number of iterations (additions) to get to the palindrome and the resulting         palindrome separated by one space.     Sample Input  3  195  265  750     Sample Output  4 9339  5         45254  3 6666       
When         displaying a collection of rectangular windows, a critical step is determining         whether two windows overlap, and, if so, where on the screen the overlapping         region lies. Write a program to perform this function. Your program will accept         as input the coordinates of two rectangular windows. If the windows do not         overlap, your program should produce a message to the effect. If they do         overlap, you should compute the coordinates of the overlapping region (which         must itself be a rectangle).                       All coordinates are expressed in "pixel numbers", integer values ranging         from 0 to 9999. A rectangle will be described by two pairs of (X, Y)         coordinates. The first pair gives the coordinates of the lower left hand corner         (XLL, YLL). The second pair gives the coordinates of the upper right hand         coordinates (XUR, YUR). You are guaranteed that XLL<XUR and YLL<YUR.       Input                          The first line will have a         number N (0<N<=100) with the number of test cases. Each test case will consists         of two lines each containing four numbers. The first line contains the integer         numbers XLL, YLL, XUR and YUR for the first window. The second contains the same         numbers for the second window.               Output           For each test case, if the two window do no overlap, print the             Message "No Overlap". If the two windows do overlap, print 4 integer numbers         giving the XLL, YLL, XUR and YUR for the region of overlap.  Note that two windows that share a         common edge but have no other point in common are considered to have "No         Overlap".     Sample Input  2  0 20         100 120  80 0         500 60  10 10         20 20  30 30         40 40     Sample Output  80 20         100 60  No         Overlap          
                        A tourist came to Lahore to visit some cities but he         has short time to do so. He decided to go to Islamabad through a longest path so that he can visit         maximum area on his way to Islamabad.         Write such an algorithm which finds longest path between two cities.               Input                You will get the total number of cities         (0<city code<10).    You will be given two 2D arrays. First         row of the first array contains codes of those cities which are directly         connected to the first city. The second row of the first array contains codes of         those cities which are directly connected to the second city and so on.    In second array the distance between two         cities is placed at the            corresponding location as the destination city in the first array.           Single city should not be repeated in the longest path.   Output           The output will contain the path from source city to destination city           with maximum distance for each source         and destination city.   Sample Input           5 // number of cities           2 3 4                  // start of first 2D array           1 4 5           1 4 5           2 3 1           2 3           4 9 17                 // start of second 2D array           4 9 13           9 15 20           9 15 17           13 20           5 3                     // source and destination cities           1 4           4 3           0               Sample Output           5 2 1 4 3                 // path from city 5 to 3 with maximum distance           1 3 5 2 4           4 2 5 3 
           Array                       You are given a 2D array, initially equal to 0. The next input line contains an         integer with a Capital character H (Horizontal) or V (Vertical) or S (Square).                       You have to read a input line and follow the following criteria:  -                For every input, you have to start from the last row and first column of the         array. Start moving upward until you find an appropriate position to set the         input there. If you don’t find a position in that column, then move to next         column at the last row, and so on.  -                If the input line contains 2H, then at the position where you find two         horizontal elements containing 0, stop there and place 1 in those elements         positions.  -                If the input line contains 2V, then at the position where you find two vertical         elements containing 0, stop there and place 1 in those elements positions.  -                If the input line contains 2S, then at the position where you find two         horizontal and two vertical (a square of two elements) elements containing 0,         stop there and place 1 in those elements positions.  -                If you cannot find a position that fits the given input, simply ignore that         input.               Input                The first input line contains two         integers i.e. the size of the 2D array. The maximum size of the 2D array will be         25x25. The next lines contain input to be set in the 2D array. The input will         end on the line containing a single 0.                           Sample Input           8 8           2H           2V           3S           2S           2H           3H           0   Sample Output           11000000           11000000           11100000           11100000           11100000           11110000           11100000           11000000 
      Child’s Play     Anu is a little girl who has an extraordinary skill in playing with         numbers. You give her a set of nonzero  positive integers with or without repetitions and tell her to generate all         possible distinct nonzero positive integers  by retaining / adding / subtracting any combination of the given integers.         She can do so instantly.  For example if you give her the three integers 2, 8, 3 then in a moment she         will tell you that a total of 11  integers can be generated. In fact, the 11 integers are the following: 1,         2, 3, 5, 6, 7, 8, 9, 10, 11 and 13.  You are required to write a program that equals the skill of Anu.   Input  The input may contain multiple test cases.  The first line of each test case gives two integers: the case number c and         the total number k (< 15) of  integers given to Anu. The next line gives k integers in any order. A blank         character separates two consecutive  integers in input.  The input terminates with an input 0 for c.   Output  For each test case print output in one line, giving the case number c and         the total number of integers that  can be generated.   Sample Input  1 2  2 3  2 3  2 3 8  3 4  2 5 5 4  0   Sample Output  1 4  2 11  3 14 
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 Denethor's Decryption of Dequeue permutations  'Though the Stewards deemed that it was a secret kept only by themselves, long ago I guessed that here in the White Tower,     one at least of the Seven Seeing Stones was preserved. In the days of his wisdom Denethor did not presume to use it, nor to challenge Sauron,     knowing the limits of his own strength. But his wisdom failed; and I fear that as the peril of his realm grew he looked in the Stone and was deceived:     far too often, I guess, since Boromir departed. He was too great to be subdued to the will of the Dark Power, he saw nonetheless only those things which     that Power permitted him to see.' - Gandalf.  Sauron and Saruman have been communicating from large distances using the Seeing Stones. Denethor, with great difficulty has been able to break into their channel of communication using his strength of will. Despite this however, it seems that their communication has been encrypted. Gondor's spies in Isengard have found out the encryption algorithm they use and have reported back to Denethor.  The algorithm is as follows : We refer to a dequeue as a double-ended queue. We define a "dequeue permutation of N" as a permutation of 1 to N that can be got by starting from a dequeue having elements 1, 2, 3, ..., N (in that order with 1 at the front and N at the back) and performing any sequence of N pop_front() or pop_back() operations.   Note that not all permutations of 1 to N are dequeue permutations. For example, with N = 3, you have 3-1-2, 1-3-2 etc. as dequeue permutations whereas 2-1-3, 2-3-1 aren't (you can't have 2 right at the beginning since its not at any end of the dequeue).  If Sauron wants to encrypt the number K and send it to Saruman, he would instead send the K'th lexicographically smallest (0-based indexed) dequeue permutation of N. That is, if Sauron wanted to send '0' to Saruman, he would just send 1-2-3-...-N (since this is clearly the smallest lexicographic dequeue permutation of N).  Sauron is transmitting the size of his army to Saruman, so that they can coordinate an attack on the Men of Rohan and Gondor. Since Sauron's will is so powerful, Denethor is able to get only vague glimpses of the numbers, and he is able to remember only the first half (floor(N/2) elements) of the permutation. Further, since these images are so vague, his understanding of the numbers happens out of order. For example, Denethor may understand that the 5th number of the permutation is 4, and later on only understand that the 3rd number was 3.   Help him estimate the minimum and maximum possible size of Sauron's army (value of K), given the number N, and incremental understanding of the first half of the permutation, not necessarily in order.  NOTE 1: Since the values to be output can be rather large, output the values modulo 1,000,000,007.  NOTE 2: It may be the case that Denethor's understanding of the permutation is flawed. If it is not possible to have a dequeue permutation satisfying all the conditions seen so far, output -1.  NOTE 3: A permutation p1 is lexicographically smaller than p2 if at the first position where they differ, p1's value is smaller than p2's.  Input (STDIN):  The first line consists of the integer T, the number of test cases. Each test case begins with a single integer N. This is followed by exactly floor(N/2) lines containing 2 integers each: i and j, denoting that Denethor has understood that the i'th element (1-based) of the supposed permutation is j.  Output (STDOUT):  For each testcase, output exactly floor(N/2) lines, one for each (i,j) pair. If the recollections till now cannot all be feasible, output '-1' on a line. Else output two space-separated integers: the minimum and the maximum possible value of Sauron's army, K, that are consistent with all the observations seen so far. Between successive test cases, there should not be any blank lines in the output.  Constraints:  1 <= T < 3  2 <= N <= 100,000 1 <= i <= floor(N/2) 1 <= j <= N All (i, j) pairs are distinct. And for two pairs (i1, j1) and (i2, j2), you have that i1 != i2 and j1 != j2.  Sample Input:   2 3 1 3 32 1 1 3 2 2 32 4 4 5 5 6 6 7 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 3  Sample Output:   2 3 0 73741816 536870912 805306367 536870912 805306367 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1  Notes/Explanation of Sample Input:   For the first test case, for N = 3, there are 4 dequeue permutations, lexicographically ordered as 1-2-3, 1-3-2, 3-1-2, and 3-2-1. Denethor sees the first number of the dequeue permutation as 3, and concludes that the permutation can be either 3-1-2, or 3-2-1. In the second test case, we see that (a) the 1st number is 1. (b) the 3rd number is 2 ... this means that the 2nd number has to be 32. (c) the 2nd number is 32 ... this does not add any new information. (d) the 4th number is 4. But this is not possible, since the 4th number can now either be 3 or 31.  Hence it is inconsistent (and none of the further observations can make it consistent). Also notice that in the 2nd test-case, the values have been output modulo 1,000,000,007. 
 Problem description. Sumit is enjoying his vacations alone in a 2D world (yes, he knows magic), until his GPS tracker stopped working. The great thing about his GPS tracker is that it sends the direction of his traveled path from the starting of his adventure to his best friend. Being his best friend, find Sumit's direction with respect to his starting position. It is sure that Sumit's final position doesn't coincides with his initial position.  Input  First line of input will contain an integer T , implying the number of testcases in the subtask.  Following T lines will contain distinct string S containing only following letters 'N' , 'S' , 'E' and  'W' , implying the four directions.   one of the example of the input string S is "NEWNEWS", which means that Sumit first moved one unit north and after moving one unit north he moved one unit to the east and after moving one unit to the east he moved one unit to the west ....so on and so forth....       Note:The directions are according to the geographical North , means if he moves EAST by one unit and after that again moves EAST by one unit, his final direction will be EAST (2 units) and  not  SOUTHEAST.  Output  For each test case, output a single line containing the final direction of Sumit. Output directions can be : "NORTH" , "SOUTH" , "EAST" , "WEST" , "NORTHEAST" , "NORTHWEST" , "SOUTHEAST" and "SOUTHWEST" .  Note:Only these 8 directions should be printed(without " ") and all letters should be uppercase.  Constraints  1 ≤ T ≤ 100 1 ≤ length of S ≤ 50   Example Input: 3 NEW NNSSE NE  Output: NORTH EAST NORTHEAST   Explanation move       Direction after move Testcase 1: N               NORTH E               NORTHEAST W              WEST  Testcase 2: N               NORTH N               NORTH(2 unit) S               NORTH(1 unit) S               NORTH(0 unit) , or, same as initial position. E               EAST  Testcase 3: self-explanatory.   
 Problem Statement Bruce being very fond of Rachel, asks her out for 28th Feb, National Science Day. (Yeah! What a nerd :p) Not sure of her plan for the weekend, she asks him to do something extra-ordinary to prove his love. Rachel says "Bruce, today I want the Batman to be the Spiderman!".  Now given a vertical wall of NxM blocks, each block having some difficulty level. Batman has to climb the wall up from (0,0) to any block in the topmost layer. Not being as efficient as Spiderman, Bruce tries the greedy way out, from each block he can go up in any of the 3 available blocks (For any block the maximum possible blocks can be 3, diagonally left, just above and diagonally right), so he will always choose the block with the least difficulty. In case of two blocks with same difficulty, he always chooses the Leftmost one.   Batman can face a max difficulty of K units. Now your task is tell whether Bruce will get a date with Rachel or not.   Input   First line T, the number of test cases. Each test case consists of:  First line N M K, the dimensions of wall W and the Maximum difficulty Bruce can bear. Then a NxM matrix showing the difficulty levels of all the blocks. N lines each with M entries.  There will be a blank line after each test case   Output   For each test case print in a new line, "Yes" if he can climb the wall with given K tolerance.   print "No" otherwise.   Constraints    1 <= T <= 100  1 <= N, M <= 100  1 <= K  <= 10^18  0 <= W[i][j] <=10^9    Example Input: 2 4 3 9 2 2 1 2 3 2 3 1 5 3 2 1  4 3 7 2 2 1 2 3 2 3 1 1 3 2 1  Output: Yes No   Explanation Example case 1. from (0,0) difficulty=3, he will climb to (1,1) then to (2,0) then (3,0) incurring a total of 3+1+2+2=8 <9 so he will be able to impress her. :)   Case 2: But in the second case, it exceeds his limit. Note that He has to start frm the lower-leftmost block only.  
An old Gardner came to Little Vitaly's Garden and gave her a rooted tree T and an integer d. Each node of the rooted tree has a weight Ai. Each Ai belongs to a set of positive integers. Assume the tree is rooted an node indexed 1.  The old Gardner defines a path as a sequence of nodes  < v0, v1, v2, ..., vk >  where k ≥ 0. The weight of a path is the sum of node weights for all nodes in the path. Old gardner loves progressions and various kind of manipulations of mathematical series.   A path is said to be a geometric path if Depth(vi+1) = Depth(vi) + d^i .   A function f(u) is defined as sum of weight of all geometric paths starting from u. He asks little Vitaly to find sum of function f(u) modulo 10^9 + 7 for all nodes u where u belongs to [1, N].  The Depth of a node is the number of edges from the node to the tree's root node.    Note : Vi+1 has to be in subtree of node Vi.  Input  The first line of Input contains N and d denoting number of nodes and the ratio respectively. Next line contains N single space separated integers denoting the weights of the respective nodes.  Next N - 1 lines contain two integers  u and v denoting the edge between node u and node v.     Output  A single integer denoting sum of weight of all geometric paths.     Constraints  1 ≤ N ≤ 10^5 2 ≤ d  ≤  10 1 ≤ Ai ≤ 10^5  1 ≤  u , v ≤ N     Example Input: 6 2 2 4 8 16 32 64 1 2 2 3 3 4 4 5 5 6  Output: 466    Explanation Example case 1. The paths in the sample test case are - <1>, <2>, <3>, <4>, <5>, <6>, <1,2> ,<2,3>, <3,4>, <4,5>, <5,6>, <1,2,4>, <2,3,5> and <3,4,6>.   The sum of weights = 2 + 4 + 8 + 16 + 32 + 64 + (2 + 4) + (4 + 8) + (8 + 16) + (16 + 32) + (32 + 64)     +  (2 + 4 + 6) + (4 + 8 + 32) + (8 +16 + 64) = 466. 
 John is having tokens of all the number starting from 1 to a certain amount. He has to calculate total amount of these tokens. He will enter the highest amount of token , then you have to tell sum of all tokens starting from 1 to highest. Example if he enters 5 then you have to calculate 1+2+3+4+5.   Input Input will consist of single number showing  upper limit of token.   Output Output will consist of single number which will show sum of  total amount .   Example  Input: 10  Output: 55  
John has a square park whose perimeter is known (4*side). He has to Calculate its area(side * side).   Input Input consist of single number which will show the perimeter.   Output Output will consist of single number which will show the area.   Example  Input: 36  Output: 81  
In a game, if someone win then he gets 3 points.If he looses he gets 0 points. And if the game is a tie he gets 1 point.You have to calculate total score.    Input Input will consist of 3 numbers , first for number of games win , second for number of games lost and third for number of games tied.   Output  Output will consist of single number which will show total score.   Example  Input: 5 4 2  Output: 17  
Ram is in a business, where  he buys  old scooter, he spends some money on its repair,  then he sells it. You have to tell whether he was in   profit or loss.   Input Input will consist of 3 integers, i.e. Cost Price , Repairing overhead, Selling Price.   Output  If Ram had profit , the output will display PROFIT and if he had loss, the output will display LOSS.   Example  Input: 1000 500 2000  1500 300 1600  Output: PROFIT  LOSS  
In a code language A is coded as D , B is coded as E ,and so on. Now a word will be entered in normal English and you have to code it in that language.   Input Input will consist of a single word of English.   Output Ouput will consist of the coded word.   Example  Input: SMILE HELLO  Output: VPLOH KHOOR  
John knows perimeter and length  of his garden.Help him to calculate its area . [      Perimeter = 2*( l+b)      area =l*b  ]   Input Input will consist of two integers Perimeter and length.   Output Output will consist of Area of the garden.   Example  Input: 12 3  Output: 9.  
A number is entered by the user , you have to display sum of all the numbers that divide it excluding itself.   Input Input will consist of a single integer.   Output Output will consist of sum of all the factors.   Example  Input: 12 10  Output: 16 8  
A rectangular field is such that its sides are parallel to coordinate axes, John is standing near the field , you have to tell whether he is inside the field or outside.If he is on the boundary then he will be considered inside the field.   Input First line of input  will consist of four integers, and second line will consist of two integers.  First line:- the first 2 integers tell the lower left coordinate of rectangle , the second two integers consist of upper right coordinate of rectangle.  Second Line:-The two integers denote the position of John.   Output Output will consist of one word , if John is inside, then output will be INSIDE , otherwise OUTSIDE.   Example  Input: 2 2 4 4 3 3  1 2 3 4 4 1 Output: INSIDE  OUTSIDE 
   Background  During a plain crash every person died other than one. When he woke up he found himself in Bermuda triangle. No one was there to help him, but luckily he found a map of an archipelago in crashed plain’s garbage which consists of grid squares with characters, where '#' indicates land and '.' indicates water. Two land squares belong to the same island if they are neighboring grid squares, which means their x coordinates and y coordinates differ by at most 1. To escape from this island he have to find the near by island so that he can get back to his home. Help him to find the number of islands shown in the map.   Input:  The first line of the input contains a number which indicates the number of test cases to follow. Each test case starts with a line containing two numbers n and m, the number of rows and the number of columns of the grid, respectively. The following n lines contain m characters each and describe the map to be processed. You may assume that the map contains only characters '#' and '.', and that the border of the map consists only of water (character '.').   Output:  For each test case print in a line the number of islands shown on the corresponding map in the input.    Constraint>   1<=T<=20 (1<=n, m<=200)  Sample Input  2 1 1 . 6 4 .... ..#. .#.. .... .##. ....    Sample Output  0 2    
   Background  Given a natural number n, find the summation of all its proper divisors. Definition: A proper divisor of a natural number is the divisor that is strictly less than the number. e.g. number 20 has 5 proper divisors: 1, 2, 4, 5, 10, and the divisor summation is: 1 + 2 + 4 + 5 + 10 = 22.   Input:  An integer stating the number of test cases T and that many lines follow, each containing natural number n for which output will be summation of all its proper divisors.  Output:  One integer each line: the divisor summation of the integer given respectively.   Constraints  1<=T <=200000 1 <= n <= 500000   Sample Input  3 2 10 20   Sample Output  1 8 22    
  Energy Drinks  Chef has made an energy drink, where 1 bottle of drink gives a person energy to move a single step. He has organized a game in which at each step, a certain number of bottles are kept. The no. of bottles at each step represent the maximum no. of steps he can go forward from that position.You can’t carry bottles from one step to other i.e. if number of bottles at a step is 3 then you can drink 0, 1, 2 or 3 bottles, if you drink 3 you have to take a jump(move) of 3 steps, you can’t drink 2 bottles and carry 1 to the other step.If the no. of drinks at a step is 0, than he cannot go further. His motive is to reach his destination by optimizing his drinking in such a way that he has to make minimum no. of moves. The person knows the no. of bottles kept at each step. 1 move represents moving from 1 drinking position to the next.   Input:  The first line contains a positive integer T representing no. of test cases. Each test case begins with a single positive integer N representing the no. of steps from beginning to the final position including both. The second line of each test case consists of a group of non-negative integers separated by space, which represent the no. of bottles kept at each step.   Output:  For each test case, output a single line, containing the answer for the corresponding test case.    Constraint>   1&ltT&lt10 1&ltN&lt50   Sample Input  3 11 1 3 5 8 9 2 6 7 6 8 9 10 1 3 6 3 2 3 6 8 9 5 6 1 3 6 1 0 9   Output-  3 4 3   
Alice is bright student. She is preparing for IIT JEE. When she practices mathematics she come across many problems which require use of various algebric function especially finding divisors. So she decided to automate this process by writing a program which will solve this particular problem.  For two integers A and B, she needs to find number of positive integers N such that N*B has at least one devisior D that lies in N < D <=A.   Input The first line contains a single positive integer T, the number of test cases. T test cases follow. The only line of each test case contains two positive integers A and B.  Output For each test case, output a single line containing the answer for the corresponding test case.  Constraints  A<=1000; B<50  Sample Input: 3 10 1 100 11 998 47 Sample Output:  0 41 420 
 Background  Bob is a child who loves challenges. Once he went to a Labyrinth which was a net of paths. Tasks of labyrinth was to enter from one corner and come out from diagonally opposite corner. There were many confusing paths to complete this task, but Bob decided to pass labyrinth from the shortest path. Now your task is to help Bob by finding the shortest path from top left corner to right bottom corner of labyrinth.  Input:  First line contains number of rows(N) in Labyrinth, after this line, each of next N lines describe a row of labyrinth. There will be no more than 80 columns and no more than 80 rows and shape of labyrinth must be rectangular (not necessarily a square). Each position of the row is one of two characters. A '0' means you may move onto that position. A '1' means that space is occupied by a wall. You are allowed to move in any direction (up, down, left, right, diagonal) provided that the square you move into isn't a '1'. You always start in the upper left hand corner of the Labyrinth. The exit is always at the lower right hand corner of the labyrinth. There will always be at least one path from top left corner to bottom right corner.   Output:  The output is the shortest number of squares you must step in to pass through the labyrinth.  Sample Input  7 011100111 001111011 001111011 011111010 001111010 100000000 010111100   Sample Output  12  
 Problem You are living in 2050, People do not work any more. Only surrogates (clone having same features & DNA characteristics)  work for every individual. Government is substituting man labor by surrogates. Every person can control his own surrogate from his home and paid for his services one of the criminal master mind hacked into Government system and started producing multiple surrogates for a single person in Dolgeville, a small town in Texas. These multiple surrogates released in Dolgeville by that criminal. So now it might happen that there are 6 identical person named Hugh F. Bumblebee: the original person and its 5 copies. The Federal Bureau of Unauthorized Surrogates (FBUS) charged you with the task of determining how many copies were made from each person To help you in your task, FBUS have collected a DNA sample from each person. All surrogates of the same person have the same DNA sequence, and different people have different sequences (we know that there are no identical twins in the town, this is not an issue).  Sample Input The input contains several blocks of test cases. Each case begins with a line containing two integers: the number of people(n) and the length of the DNA sequences(m). The next n lines contain the DNA sequences: each line contains a sequence of m characters, where each character is either 'A', 'C', 'G' or 'T'. The input is terminated by a block with n = m = 0 .  Output For each test case, you have to output n lines, each line containing a single integer. The first line contains the number of different people that were not copied for surrogate. The second line contains the number of people that were copied only once (i.e., there are two identical copies for each such person.) The third line contains the number of people that are present in three identical copies, and so on: the i -th line contains the number of persons that are present in i identical copies. For example, if there are 11 samples, one of them is from John Smith, and all the others are from copies of Joe Foobar, then you have to print '1' in the first and the tenth lines, and '0' in all the other lines.  Constraints Number of people(n) in input must be 1 &lt n &lt 20000 Length of the DNA sequences(m) 1 &lt m &lt 20  Example Input:  9 6 AAAAAA ACACAC GTTTTG ACACAC GTTTTG ACACAC ACACAC TCCCCC TCCCCC 0 0 Output:  1 2 0 1 0 0 0 0 0  
   Background  During the  Electricity cutoff in United States  this winter (caused by low leves of  the hydro dams), a  scheme was developed to turn off the Electricity to areas of the country in a particular sequence, totally fair, manner. The country was divided into N regions (LA  was region number 1, and NYC number 13). A number ,k, would be picked `at random', and the Electricity would first be turned off in region 1 (clearly the fair at starting point) and then in every k'th region after that, wrapping around to 1 after N, and ignoring regions already turned off. The problem is that it is perfectly fair to turn off  electricity of NYC in  last (because, the Electricity headquarters are situated there), so for a given N, the `random' number k needs to be carefully chosen so that region 13 is the last region selected. Write a code that will take a input number of regions and then find out the smallest number k that will ensure that NYC (region 13) can have electricity  while the rest of the country is in electricity cutoff.   Input In each line input consists of a integer N (greater than or equal to 13) and input will be terminated by a line containing 0.   Output  Output may have a single line or a series of lines, one for each line of the input. Each line will consist of the number k according to the above scheme.  Constraints  Number of regions (13<=N<=100)   Sample Input  17 18 0 Sample Output 7 17   
 Problem Michal Scofield  and Lincon burrow are two brothers. By a murder allegation Lincon Burrow  was sentenced to  jail. Michal Scofield  some how came to know that his brother is not guilty and he don’t have time to file case against the allegations as his brother is going to sit on death chair soon enough. So he made a plan for Prison break before handing himself over to police in a robbery allegation he made tattoos on his whole body a way of encrypting messages. He decided secretly on the number of columns and write the message (letters only) down the columns, padding with extra random letters so as to make a rectangular array of letters. For example, if the message is “There’s no place like home on a snowy night” and there are five columns, Michal would write down  t o i o y h p k n n e l e a i r a h s g e c o n h s e m o t n l e w x  Note that Michal Scofield  includes only letters in between the tattoos and writes them all in lower case. In this example, Michael used the character ‘x’ to pad the message out to make a rectangle, although he could have used any letter. Michael then tattooed them by writing the letters in each row, alternating left-to-right and right-to-left. So, the above would be encrypted as  toioynnkpheleaigshareconhtomesnlewx  At the time of the break he forget  something about encryption .Your job is to recover for Michal the original message (along with any extra padding letters) from the encrypted one.  Input The first line have a integer T number of test cases. Input for each test case will consist of two lines. The first line will contain an integer c indicating the number of columns used. The next line is a string of up to 200 lower case letters.  Output Each input set should generate one line of output, giving the original plaintext message, with no spaces.  Constraints 1&ltT&lt20 2&ltC&lt20 Sample Input  2 5 toioynnkpheleaigshareconhtomesnlewx 3 ttyohhieneesiaabss  Output:  theresnoplacelikehomeonasnowynightx thisistheeasyoneab 
One of the most fundamental concepts learnt by a novice programmer is generation of Fibonacci Series. The Fibonacci Series is known to be of the form 0 1 1 2 3 5 8 13... etc. Usually a recursive approach to solve the problems is applied. The problem with the usual recursive approach is that multiple calls are made to calculate the same number, which makes it time in-efficient. This algorithm runs in time theta(n). However, if you use either a Dynamic Programming approach or Memoization Technique, we can develop an algorithm that computes the nth Fibonacci number using at most O(log n) arithmetic operations. Your task is to write a program, using Dynamic Programming or Memoization or otherwise that computes the nth Fibonacci Number in  O(log n). The series need not begin from 0 1. Problem Setter:  Input The input will contain the number of test cases 'T' an integer. The next 'T' line contain 3 unsigned integers A, B and N (in each line) where A and B are respectively the first and the second term of the Modified Fibonacci series and N is the Nth term to be calculated.  Limits are as follows - 0 < A, B, T     Output You have to print the Nth Fibonacci term for each test case in the new line.  Example  Input: 7 0 1 10 2 3 5 67 101 9 23 46 35 45 37 24 45 27 1 45 46 2   Output: 34 13 2992 343398096 1857304 45 46   
Internet Protocol version 4 (IPv4) is the fourth revision in the development of the Internet Protocol (IP) and it is the first version of the protocol to be widely deployed. Together with IPv6, it is at the core of standards-based internetworking methods of the Internet. IPv4 addresses may simply be written in any notation expressing a 32-bit integer value, but for human convenience, they are most often written in dot-decimal notation, which consists of the four octets of the address expressed separately in decimal and separated by periods.  IPv4 Addresses have been divided into 5 classes as follows: Class A : 1.0.0.0 - 126.255.255.255 Class B : 128.0.0.0 - 191.255.255.255 Class C : 192.0.0.0 - 223.255.255.255 Class D : 224.0.0.0 - 239.255.255.255 Class E : 240.0.0.0 - 255.255.255.254 You task is to write a  program which takes an IP address as input and prints the Class to which it belongs. Problem Setter:  Input The input will contain the number of Test Cases 'T' where 0< T   Output You have to print the class of the given IP address in new line. Print 'Invalid' incase where the IP Address does not belong to any class.  Example  Input: 192.168.102.11 10.87.78.0 189.09.89.98 225.78.98.89 25.98.268.09 0.0.0.0  Output: Class C Class A Class B Class D Invalid Invalid 
Ancient Indian Mathematicians like Bhaskaracharya, knew the Pythagoras Theorem even before Pythagoras was born! Though they called it with a different name. They identified the theorem and used them widely as a set of 3 numbers a, b,c such that a*a + b*b = c*c. We'll call this set as 'TriMurthy'. TriMurthy contains 3 numbers which can be integer, decimal , positive, or even negetive). Any TriMurthy of the form a,b,c represent a right angled triangle which Base = a; Height = b; Hypotenuse = C. We find that cosA = a/c. Hence any TriMurthy represents an angle A. A 'TriMuthy' is called a 'Vishesh TriMurthy' if its elements are whole numbers and have no common factor. For example 3,4,5 and 24,7,25 are Vishesh TriMurhty, however, 6,8,10 is not a Vishesh TriMurthy (though is is TriMurthy)  because 2 is a common Factor.  Your task is to determine whether a TriMurthy is a Vishesh TriMurthy or Not.  Problem Setter:  Input The input contains 3 integers a,b,c in each new line. The number of test cases is not specified. Input Ends with End of File.  Output You have to print YES if a given TriMurthy is a Vishesh TriMurthy otherwise print NO for each set of a,b,c in new line.  Example  Input: 3 4 5 4 3 5 24 7 25 6 8 10 9 12 15  Output: YES YES YES NO NO  
Double Near Palindromes C-3PO is an expert in pretty much every language. His conversation with R2-D2 are always fun to observe un that R2-D2 speaks in Droid, C-3PO speak in English, and they understand each other perfectly! Anyway, humans and droids both enjoy playing word games. A palindrome is a word or sequence of one or more letters that reads the same forwards and backwards. A near palindrome is a word or sequence that can be changed to or kept a palindrome by changing exactly one letter to a different letter. For example, BAT is a near palindrome, since changing the T to a B would make the word a palindrome: BAB. PEEP is not a near palindrome: although PEEP is palindrome, changing any letter would remove its palindrome status.A double near palindrome is a word or sequence that consists of two near palindromes concatenated together. For example, BATMAN is a double near palindrome, since BAT and MAN are both near palindromes. Given a list of words, you are to determine which words are double near palindromes and which are not. Input The input consists of one or more words. All words (except the last) will be inclusively between 1 and 25 letters long and will consist of entirely of capital letters. The last word will be *END* and is not be processed; it simply indicates the end of the input. There may be any number of spaces and characters before, after, and between words. Output The output cases are to appear in the same order in which they appear in the input. For each input case, you are to print either w is a double near palindrome. or w is not a double near palindrome. whichever is appropriate, where w is the input word. Exactly one should follow each output case (meaning there should be no blank lines in the output).  Sample Input: BATMAN CONSTANTINOPLE *END*  Sample Output: BATMAN is a double near palindrome. CONSTANTINOPLE is not a double near palindrome.  Time limit : 1s Source limit: 50000B 
PRIME TRIPLES The theorem of Pythagoras was known long before Pythagoras (who lived c540 B.C.), the earliest statement of it being in the Indian Sulbasutras dated c800 B.C. The dimensions of Altars in India were based on Triples. Triples are sets of three numbers(integer, decimal , positive, negetive). Any Triple of the form a,b,c represent a right angled triangle which Base = a; Height = b; Hypotenuse = C. We find that cosA = a/c. Hence any triple represents an angle A. A Prime Triple is Triple if its elements are whole number and have no common factor. Forexample 3,4,5 and 24,7,25 are Prime Triples, however, 6,8,10 is not because 2 is a common Factor. Your task is to determine whether a Triple is Prime or Not. ©Vishal Gupta Input: Input contains a number of test cases. Each test case contains of one line containing 3 Integers a,b,c   Output: Print YES for Prime Triple and NO if non-prime triple.   Sample Input: 3 4 54 3 524 7 256 8 10   Sample Output: YESYES YES NO   
Tree   A fraction tree is an infinite binary tree defined as follows:   1.      Every node of tree contains a fraction 2.      Root of tree contains the fraction 1/1 3.      Any node with fraction i/j has two children : left child with fraction i/(i+j) and right child with fraction (i+j)/j 3.   For example, for a fraction tree up to 3 levels, we number the nodes according to increasing levels ( root is at level 1) and at any same level , nodes are numbered from left to right. So first node holds the fraction 1/1 , second one holds 1/2 , third one holds 2/1 fourth one holds 1/3 and so on. Your task is simple. Given a number n , you are to find the fraction at the nth node.   Input: Every line of the input contains a single number n. You are to find the fraction at nth node of fraction tree. Input file terminates with a 0 which is not to be processed.  Output: For each input ,  print numerator and denominator of the lowest form of the fraction seperated by a / Output of each case to be done in seperate lines.   Sample Input: 1 2 3 7 0   Sample Output: 1/1 1/2 2/1 3/1   Constraints : 1<=T <=30000 1<=N<=10^10   
The IP Address Class defines the number of networks and IP addresses that are available to an organization for use. An IP Address is comprised of 32 bits (4 octets)  of information. The IP address is working with two pieces of information: the network ID and the host ID. Based on the number of network and hosts the IP Addresses  have been divided into different classes – A, B, C, D & E.  Currently the NetTech team is conducting its certification course at BIT Mesra. Ayush Kedia  is a first year student and has little knowledge of networking. However the test is coming up and he needs your  help to top the list. He has a list of IPs which has to be classified based on the IP Addresses. Your job is to write a program that will print the class of the given  IP Address. Problem Setter: Vishal Gupta  Input: The input contains a series of IP addresses, each beginning in a new line.   Output: For each IP Address print the class of the IP Address each in a single line. Print ‘Invalid’ for any invalid entry.   Input: 192.168.102.11 10.87.78.0 189.09.89.98 225.78.98.89 25.98.268.09 0.0.0.0  Output: Class C Class A Class B Class D Invalid Invalid  
 If a positional numeral system is used, a natural way of multiplying numbers is taught in schools as long multiplication, sometimes called grade-school  multiplication: multiply the multiplicand by each digit of the multiplier and then add up all the properly shifted results. It requires memorization of the  multiplication table for single digits.  This is the usual algorithm for multiplying by hand in base 10. Computers normally use a very similar shift and add algorithm in base 2. A person doing long  multiplication on paper will write down all the products and then add them together; an abacus-user will sum the products as soon as each one is computed.  Your task is to write a program that multiplies two arbitrary precision signed integers.  Note that for this particular problem the only allowed languages are C &  C++.  p> Problem Setter:  Input First line contains number of test cases, integer n < 20.Each test contains two signed integers on two lines of arbitrary length. Number of digits of the arbitrary  precision integers may extend upto 1000000.  Output: You need to print the sum of the two arbitrary precision signed numbers.   Sample Input: 3 -123456789987654 -9876543210 -7894561230123 1234567890 42134134710293471092734 812374198273491872435034  Sample Output: 1219326320880960097529340 -9746371800348756550470 34228683905221964318944087115419517161404442956   
Reference:: The Hobbit : Desolation of Smaug      'http://en.wikipedia.org/wiki/The_Hobbit:_The_Desolation_of_Smaug'>http://en.wikipedia.org/wiki/The_Hobbit:_The_Desolation_of_Smaug   J. R. R. Tolkien decided to make Thorin Oakenshield’s task more difficult.   This time he was given an infinite number of keys represented by a small   string. The hidden entrance has a lot of keyholes side by side represented by   one long string. The key fits only into a slit that matches it completely.   Oakenshield does not know how many keys he would require and which all   keyholes he will have to try out. So if there are n keyholes where the key   fits, he might need any number of keys between 1 to n (both inclusive).   Moreover he does not know which keyholes among the ones where the keys fit, he   will have to use. All he knows is that there is a unique way to open the door.   Trying out each configuration takes 1 second. The last light of Durin’s day   does not last long and will have to try out all possibilities before it goes.   He wants you to find out how long, in the worst case, it will take for him to   try out all possibilities.   Since the answers may be huge, output it modulo 1000000007.   If there are no keyholes where the key fits, output 0.   Input Format:    First line containing a string representing the key.   Second line containing a string representing the keyholes.   Output Format:    Single line containing an integer for the required answer.   Notes:    1. Key fits into a keyhole at index i if key is a substring of keyhole string   at index i.   2. If there are two overlapping keyholes where the key may fit, you cannot   insert a key in both simultaneously   Constraints:    1 ≤ key ≤ 10^4   1 ≤ keyholes ≤ 5*(10^5)   Sample Input:  c a Sample Output:  0 Sample Input:  aba abababa Sample Output:  4 Explanation: Explanation for Test Case #1:   The key fits into keyholes at positions {1, 3, 5}   If he requires only 1 key he may put them at {1} or {3} or {5} = 3 seconds.   If he required 2 keys, he may put them at {1,5} = 1 second.   Total = 1+3 = 4 seconds.   He cannot use 3 keys without overlapping them.   Explanation for Test Case #2:   There is no slit where the key fits hence 0 seconds.  Problem Setter: Vidit Gupta 
Utkarsh was recently setting a problem on trees. So he wanted to generate trees of N nodes by his program using the following procedure.  All the nodes are aded one by one to the tree. 1 is added first as the root of the tree. 2 is added and 1 is made the parent of 2. For every node i which is to be added next, one of i-1 or i-2 is seleclted randomly (eqiuprobably) and is made the parent of i.   He now wants to know the Expected Height of this tree. Height of a tree is the maximum number of edges on the path from root to any node of the tree.  Input  The first line conatins the number of test cases T. T lines follow. Each line contains the number of nodes in the tree N.   Output  For each test case print the Expected Height of the tree. Your output should have at most 10^-6 absolute error.   Constraints  1 ≤ T ≤ 10^6 1 ≤ N ≤ 10^6   Example Input: 2 2 3  Output: 1.000000 1.500000  Explanation There is only one tree possible {1-2} with height = 1 Two trees are possible: {1-2,1-3} with height = 1, {1-2,2-3} with height = 2. Therefore Expected height = 1.5 
You are given a rooted tree with N nodes rooted at node 1. Each node v is associated with two numbers Capacity Cv and Profit Pv. Your task is to select a subset S = {s1, s2,....sk} of nodes of this tree, such that the value Q = Ps1 + Ps2+.....+ Psk is maximized. Also, for any node v of the tree, there should not be more than Cv nodes from sub tree rooted at v in S.  Input The first line of input contains a number N, denoting the size of the tree. Next N lines contains 2 space separated integers each representing the value Ci and Pi.  Next N - 1 lines follow. Each of the next N - 1 lines contain 2 space separated integers x and y denoting the edge between node x and node y.  Output Output in one line a single integer denoting the maximum value of Q.  Constraints  1 ≤ N ≤ 10^5 1 ≤ Cv ≤ N 1 ≤ Pv ≤ 10^9     Example Input: 5 2 1 2 5 1 1 2 4 1 10 1 2 2 3 3 4 4 5  Output: 15  Explanation S = {2,5} 
You are given a matrix with N rows and M columns. Cell (x, y) indicates the cell at the intersection of x^th row and y^th column. Each cell of matrix contains some assigned value (say H). Visiting this cell, you will get H dollars (if H ≥ 0) else you have to pay |H| dollars. You start from cell (1, 1) and you have to reach cell (N, M). From a given cell, you can only move right or down. Formally, from cell (x, y), you can go to cell (x + 1, y) i.e down or cell (x, y + 1) i.e. right. In your way you have to collect maximum amount of money. However, there is a trick to mend the rule. You can pay P dollars and change the direction of at most 1 move i.e. instead of going down or right, you can pay P dollars and go to left or up. [cell (x - 1, y) or cell (x, y - 1) from cell (x, y).] After you use this trick once, you will again have to start moving from one cell to another cell in your old way (right or down). Visiting a cell previously visited will cause no more gain or loss in money since you already have collected or paid for this cell before. Given the amount present on each cell of matrix and the value of P, find the maximum money you can get while travelling from (1, 1) to (N, M). You cannot move out of grid during any of your moves.  Input The first line of each test file contains three space separated integers N, M and P denoting rows and columns of the matrix respectively. Next N lines follow, each contains M integers. The j^th integer on the i^th line indicates the amount of money in cell (i, j).  Output Output in a single line, an integer that represents the maximum amount of money you can collect. In case you are in loss (negative collection of money), print the minimum amount of loss (with negative sign to indicate loss).  Constraints  1 ≤ N, M ≤ 10^3 -10^6 ≤ Amount in each cell ≤ 10^6 1 ≤ P ≤ 10^5     Example Input: 3 3 1 1 3 1 5 3 5 2 1 1  Output: 18  Explanation Example case.We will choose the path (1, 1) -> (2, 1) -> (2, 2) -> (1, 2) -> (1, 3) -> (2, 3) -> (3, 3). Total money gained during the path is 1 + 5 + 3 + 3 + 1 + 5 + 1 = 19. Since you went up on cell (2, 2), you pay 1 dollar. So final total profit is 18 dollars. 
Utkarsh recently found an array A and a special function F(A). Function F takes input an array and gives the sum of Xor Sum of all the subsequences of the array. Utkarsh now wants to calculate the value of function F for some sub arrays of A. He also wants to change some values of array A. So Utkarsh has Q queries. Each query can be one of 2 following types.  1 L R : Tell the value of F( A[L..R] ). As the answer can be large, print it modulo 10^9+7. 2 V X: Make A[V] = X.  NOTE:  Xor Sum of a sequence {a1,a2,..an} is defined as a1^a2^...^an. ^ denotes bitwise Xor operation.  Sequence B is a subsequence of sequence of C if B can be created by deleting some elements of C.   A[L..R] denotes the subarray containing AL, AL+1 ,.., AR.  Array A is 1-indexed.    Input  The first line contains two integers N and Q. N is the number of elements in array A. Q is the number of queries. Next line contains N integers denoting the array A. Next Q lines contains the description of the queries. Line starting with 1 denotes query of first type. The line will contain 2 more integers L and R. Line starting with 2 denotes query of second type. The line will contain 2 more integers V and X.   Output  For each query of type 1 print the result F( A[L..R] ) mod 10^9+7   Constraints  1 ≤ N, Q ≤ 10^6 1 ≤ Ai , X ≤ 10^9 1 ≤ L ≤ R ≤ N 1 ≤ V ≤ N   Example  Input: 3 4 1 2 3 1 1 3 2 3 2 2 1 2 1 1 3  Output: 12 8  Explanation For first query answer = 1 + 2 + 3 + 1^2 + 1^3 + 2^3 + 1^2^3 = 1 + 2 + 3 + 3 + 2 + 1 + 0 = 12 For last query answer = 2 + 2 + 2 + 2^2 + 2^2 + 2^2 + 2^2^2 = 2 + 2 + 2 + 0 + 0 + 0 + 2 = 8 
At the ACME University, as part of the Graduate course work, each student is required to undergo project work. The authorities always make an effort to find a match among the students’ interests and the interests of the faculty members. First, they take a list of topics from the students' and a list of topics from the faculty. In order to avoid identifying students and faculties, all they preserve is simply, two consolidated lists of topics – one from the students and one from the faculties. No personal identification exists within these lists. The lists are sorted in ascending order of the indices of project topics in the repository. No topic appears twice in the same list. To make the process simple, ACME University maintains a repository of 100 project topics - numbered from 1 to 100, inclusive. The students and faculty members must choose among those topics only. Their lists may have different number of topics; since more than one student (or faculty) may choose to work work on the same topic or some may like to work on multiple topics etc. Once these two lists have been obtained, the university tries to make them identical. The student’s list is modified to match with the faculty’s list. The modification may be via  inserting a new topic in the list deleting a topic from the list substituting a topic by another one  The university wants to do this with minimal number of modifications to the list as each modification needs one full day to be communicated and accepted by the students. It is assumed that the students do not disagree to any such modification. Write a program that accepts the lists from students and faculties and computes the minimum number of modifications that will require to be made to make the student's list identical to the faculty's list.  Input The input contains several test cases. The first line of the input contains the number T, the number of test cases. The first line in each test case contains the number M, the number of topics in the students' list. The second line contains M integers A1, A2 .., AM separated by single space characters. The third line in each test case contains the number N, the number of topics in the faculty's list. The fourth line contains N integers B1, B2 .., BN separated by single space characters.  Output Output T numbers, each on a line by itself, without any leading spaces or zeros. The number should be the minimum number of modifications that can be made to the students' list to make it identical to the faculty's list, for each respective test case.  Constraints  1 ≤ T ≤ 100 1 ≤ M, N ≤ 100 1 ≤ Ai, Bi ≤ 100 The list { A1 .. AM } has no duplicates. The list { A1 .. AM } is sorted in ascending order. The list { B1 .. BN } has no duplicates. The list { B1 .. BN } is sorted in ascending order.  Sample Input  2 4 1 3 5 7 2 4 6 3 1 2 3 2 2 3   Sample Output  4 1   Explanation In the first test case 1, 3, 5 and 7 should be deleted from the list and 4 and 6 should be inserted. But this can take 6 modifications. Instead, we can delete either two of the 4 topics from the students' list and substitute the remaining two by 4 and 6 respectively. This takes 4 modifications. 4 modifications is optimal for this test case. 
Raju and Rada planned a trip to Egypt inspired by the movie ‘THE MUMMY’, not a pleasure trip. They went to Egypt by plane. On plane they met a curator who works at the British museum. He gave them a map containing some interesting places in Egypt. After lots of discussion they decided to go ‘HAMUNAPTRA-The city of the death ‘ which contained huge number of pyramids and sand arts. At the earliest they reached HAMUNAPRA. They entered a pyramid .there was a huge door. Raju and radha failed to open the door. So they decided to go back. Bt radha find some words written on the walls of the pyramid. They referred the map given by the curator. It says arrange them in such a way that every word begins with the same letter as the previous word ends and write on the sand door will open. For example, the word ``proti'' can be followed by the word ``imhotep''. The task given to you guys is to write a computer program that will read the list of words and determine whether it is possible to arrange all of them in a sequence (according to the given rule) and consequently to open the door.  Input The input consists of T test cases. The number of them (T, equal to about 500) is given on The first line of the input file. Each test case begins with a line containing a single integer number N that indicates the number of plates (1 <= N <= 100000). Then exactly N lines follow, each containing a single word. Each word contains at least two and at most 1000 lowercase characters. The same word may appear several times in the list.  Output Your program has to determine whether it is possible to arrange all the plates in a sequence such that the first letter of each word is equal to the last letter of the previous word. All the plates from the list must be used, each exactly once. The words mentioned several times must be used that number of times. If there exists such an ordering of plates, your program should print the sentence "The journey continues.”. Otherwise, output the sentence "Journey ends here.".  Example  Input: 3 2 anak sunamum 3 suyathuo lordevys orphanx 2 hmm hmm  Output: Journey ends here. The journey continues. Journey ends here. 
 A fraction a/b is called in its lowest form if gcd(a, b) = 1. It is possible to express a/b using the sum of a finite number of reciprocals of natural numbers. For example, 2/7 can be written as 1/4 + 1/28. Such a representation is called an Egyptian fraction representation of a/b. For each fraction, there could be multiple Egyptian fraction representations.  Let two sets of reciprocals be (p1, p2, ..., pn) and (q1, q2, ..., qk). We say, the first is lexicographically lesser than the second if there is some m, 1 ≤ m ≤ min(n,k) such that,  p1 = q1, p2 = q2, ..., pm-1 = qm-1 and pm ≤ qm.  Given a set of fractions in the lowest form, the problem is to generate the lexicographically least Egyptian fraction for each input fraction.  Input  The input consists of several lines, each line consisting of a pair of numbers separated by a blank space. The end of the input is signaled by a line containing the pair of numbers 1 and 1. Each pair on a single line will be positive numbers, co-prime to each other (except for the last line). The first number on any line is always less than or equal to the second number on the line.  Output  For each pair of numbers a and b on a line, output a sequence of numbers, representing the denominators of the lexicographically least Egyptian Fraction of a/b. The denominators should be sorted in ascending order. There should be a blank space separating one denominator from the next. You should NOT output the Egyptian Fraction representation of the last line, representing 1/1 = 1.  Sample Input  1 4 2 7 5 9 1 1   Sample Output  4 4 28 2 18  
Recently, Aparna and Surya were extremely excited by use of linear algebra in natural language processing. They realized that linear algebra was the key to many information retrieval algorithms as mentioned by their professor or otherwise. So one night, they went to the library to explore further.   Surya suddenly posed a seemingly random question. He asked Aparna, assume I have a graph of n vertices and m edges. Now if I construct a symmetric matrix; he flirtatiously adds (as he always does), I like symmetry cause knowing one half you can get the other, just like the two of us. He continues, "I will define the (i,j) entry as follows: M(i,j) = 1 if degree(i)!=0 and i=j M(i,j) = -1/sqrt(degree(i)*degree(j)) if i vertex i is adjacent to j in graph I give M(i,j) = 0 otherwise.  He then says, I will now calculate the eigenvalues of this matrix. Can you tell me if the difference between the largest eigenvalue and the second smallest eigenvalue is at-least 2.  Surya quickly realized he has to get out an eigenvalue decomposer. Both sit and started to code, while Siddhartha approaches them with his MATLAB code. Your task is to answer Surya's question before Siddhartha does so that you can score some brownie points ;)   Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two integers N, M denoting the number of vertices and edges. Then M lines follow. the ith line describes the ith edge. It contains two space separated integers u and v. Note the vertices are 0-indexed.     Output Output description.  For each test case, output a single line containing "YES" if the difference in largest eigenvalue and second smallest eigenvalue is at-least 2. "NO" otherwise. (Quotes for clarity. Do not print them)     Constraints  1 ≤ T ≤ 20 3 ≤ N ≤ 500 1 ≤ M ≤ N*(N+1)/2  For floating point calculations, ignore decimal point rounding upto 10^-6     Example Input: 1 3 3 0 1 0 2 1 2  Output: NO    Explanation Example case 1. The matrix as per the specifications is 1 -0.5 -0.5 -0.5 1 -0.5 -0.5 -0.5 1 The eigenvalues are 0,1.5,1.5 . Hence the difference between largest eigenvalue and second smallest eigenvalue is 1.5 - 1.5 = 0. which is strictly less than 2. Warning Input text files contains large I/O. Consider using faster I/O techniques. 
There are N cities in the country and some of them are connected by bidirectional roads. To handle any emergency situation, they need a emergency cell to be set up at some cities such that, in case of any emergency in a city, the fire engine, the ambulance etc., can reach that city. Setting up a emergency cell is expensive and as occurrence of a emergency situation is very rare, its just enough to have each city connected ( possibly through other cities, by a path ) to a city which has an emergency cell. Given the cost to setup emergency cell in each of the cities and the map of the country, find the minimum amount of money government needs to spend. In other words, the Government needs to select a set of cities S to set up emergency cells such that, every city in the country is connected to at least one city in S.  Input  The first line contains the number of test cases T. T cases follow. Each test case starts with a line containing N M, N is the number of cities numbered 1 to N and M is the number of bidirectional roads. Next line contains N integers, the ith integer is the cost of setting up emergency cell in the ith city. Each of the next M lines contains, x y , meaning x and y are directly connected by a bidirectional road. There can be multiple roads between a pair of cities and some roads may even connect a city with itself.  Output Output T lines, one for each case containing the required answer.  Constraints  1 <= T <= 5 1 <= N <= 100000 0 <= M <= 100000 0 <= cost_i <= 10000 0 <= x,y < N  Example  Input: 1 4 3 2 4 1 5 1 2 2 3 4 4  Output: 6   Explanation: Minimum cost is 6, by selecting city 3 and city 4 
On New Year's Eve, in a quiet air traffic monitor's tower, the poor controller realised that he was going to be working at midnight as well. Being a superstitious person, he believes that wishing at least k people at midnight will bring him good luck for the rest of the year. He decides to broadcast a happy new year message to the planes passing by, but wants to broadcast this message only once, and only for the minimum possible radius that will accomodate k planes. Please help this eccentric man. All planes travel at uniform speed in a straight line.  Input  The first line of the input contains two integers N and K separated by a space character.( 0 < N < 10000 , 0 < K < 10000) ) N is the total number of planes. K is the number of planes the controller wants to wish. Each of the next N lines contain four integers x1, y1, x2, y2 separated by a space character. ( -2000 < x,y < 2000) x1 and y1 represent the initial coordinates of a plane (at time zero), while x2 and y2 represent the co-ordinates of the plane after 1 second.   Output  On the first line, output the minimum radius required to reach k planes, accurate to two decimal places. On one line, output a single integer, which shows the number of seconds after which the message is to be broadcasted.  Example  Input: 5 3 0 1 2 3 1 0 0 1 1 2 2 0 1 2 3 2 1 3 4 2  Output: 2.24 0  
 Dexter is the manager of Miami Wildlife Sanctuary. During rains, many species find it difficult to survive, so he decided to erect a large shed in the Sanctuary (a rectangular field) to protect these species. However, there are a number of trees on this land and Dexter does not wish to cut any of them.  Here is a description of Sanctuary as a rectangular grid where "." indicates the absence of a tree and " T " indicates the presence of a tree.  . . . . . T . . . T . . T . . . . . . . . T . . T . . . . . . . . . . . . . . . . . . . . T . . . . T . . . . .  In this case, Dexter can build a 4 ×4 square shed, as indicated below:  . . . . . T . . . T . . T . . . . s s s s T . . T s s s s . . . . s s s s . . . . s s s s T . . . . T . . . . .  You may verify that this is the largest square shed he can put up without cutting any trees. Your task is to help Dexter determine the area of the largest shed he can put up without cutting any trees.  Input format The first line of input contains two integers M and N indicating the dimensions of the Sanctuary. This is followed by M lines of input, each containing N letters each of which is a "." or a "T".  Output format The output consists of a single line with a single integer indicating the area of the largest square shed that Dexter can put up in Sanctuary without cutting any trees. Also return -1 if not possible to erect the square shed.  Constraints You may assume that M ≤1000 and N ≤1000 in all inputs.  Example  We now illustrate the input and output formats using the above example.  Sample input  7 8 .....T.. .T..T... .....T.. T....... ........ .....T.. ..T.....  Sample output 16 
  The Restaurant was starting to fill up as Debra Morgan walked in. She scanned the crowd for her sister, brother-in-law, and nephew. Seeing her sister waving from the far end of the restaurant, she made her way back to their booth. “Hi, Debra”, her sister and brother-inlaw, Astor and Quinn Chapman, greeted her.  “Hi, guys”, she replied. “What are you doing, John?” she asked her nephew. He was busy working on one of the restaurant's activity sheets with a crayon.  “I'm doing a word search game,” John explained. “I have to find all of these words in this big mess of letters. This is really hard.” John looked intently at the paper in front of him.  “Can I help?” asked Debra, looking across the table at the activity sheet.  “Sure. These are the words we're looking for. They're the names of different kinds of Planes, Trains, and Automobiles.”  Input The first line of input will specify the length of the sides of the letter matrix (the matrix of letters will be square). The length, l, will be in the range 1 ≤ l ≤ 100. The next l lines of input will be the matrix itself, each line will contain l uppercase letters. A list of words will follow. Each word will be on a line by itself; there will be 100 or fewer words. Each word will be 100 or fewer characters long, and will only contain uppercase letters.  The final line of input will contain a single zero character.  Output Your program should attempt to find each word from the word list in the puzzle. A word is “found” if all the characters in the word can be traced in a single (unidirectional) horizontal, vertical, or diagonal line in the letter matrix. Words may not “wrap around” rows, columns or diagonals.  -Horizontal words may proceed from right to left (''backwards'') and vice versa.  -Vertical words may proceed upwards and downwards.  -Diagonal words may proceed from left to right (both upward and downward) but not in right to left direction.  For each word that is found, your program should print the coordinates of its first and last letters in the matrix on a single line, separated by a single space. Coordinates are pairs of comma-separated integers (indexed from 1), where the first integer specifies the row number and the second integer specifies the column number.  If a word is not found, the string “Not found” should be output instead of a pair of coordinates.  Each word from the input can be “found” at most once in the puzzle.  Sample Input 5 EDEEE DISKE ESEEE ECEEE EEEEE DISC DISK IEEE DISP 0  Sample Output 1,2 4,2 2,1 2,4 2,2 5,5 Not found  
 In the “Dancing Words” problem, we are concerned with words constructed using the lowercase letters  of the English alphabet - that is, a,b,c,...,z. These words need not necessarily be meaningful, any sequence  of letters forms a word. For example, abbcada is a word.  We say that we can "hop" from the word word1 to the word word2 if they are "sufficiently close". We define  word2 to be sufficiently close to word1 if one of the following holds:   - word2 is obtained from word1 by deleting one letter.  - word2 is obtained from word1 by replacing one of the letters in word1 by some letter that appears  to its right in word1 and which is also to its right in alphabetical order.  For example, we can hop from abbca to abca by deleting the second (or third letter). We can hop from aabca to abbca by replacing the a in the second position by the letter b that appears  to the right of the a in aabca and which is also to its right in alphabetical order.  On the other hand we cannot hop from abbca to aabca since we would need to replace the b  in the second position by a, but a is to the left of b in alphabetical order.  You will be given a collection of words W. Your task is to find the length of the longest sequence  w1,w2,w3…… of distinct words from W such that we may hop from w1 to w2, w2 to w3 and so on.  We call this the hopping number for this set.  For example, if W = {abacd, bcdada, dd, abcd,bcdd, adcd, addd, aa, ccd, add, ad}, then  the hopping number is 7 corresponding to the sequence abacd, abcd, adcd, addd, add, ad, dd  Input format The first line of the input contains one integer N indicating the number of words in the input.  This is followed by N lines of input, lines 2, 3,..., N+1, each containing one word over the letters {a,b,..., z}.  Output format The output should be a single integer, indicating the hopping number of the given set of words.  Test Data: You may assume N ≤ 100. You may assume that each word has at most 10 letters.  Example: Here is the sample input and output corresponding to the example discussed above.  Sample Input 11 abacd bcdada dd abcd bcdd adcd addd aa ccd add ad  Sample Output 7 
 Sam lives in a country "CoinLand" where there are n different types of coin. He wants to collect as many different types of coin as he can. Now if he wants to withdraw X amount of money from a Bank, the Bank will give him this money according to the following rule:  lets say sam needs to withdraw money 'x'.  1. if X=0 no money withdrawn. 2. Let Y be the highest valued coin that does not exceed X. Give the customer Y valued coin. Now he has to withdraw remaining X-Y amount. 3. go to step 1. this goes on until x becomes = 0.  Now Sam can withdraw any amount of money from the Bank. He should maximize the number of different coins that he can collect in a single withdrawal.    Input  Each of the test cases starts with n (1≤n≤1000), the number of different types of coin. Next line contains n integers C1, C2, ... , Cn the value of each coin type. C1 < C2 < C3 <  …  < Cn < 1000000000.  C1 equals to 1.Terminate the input with n=0.    Output For each test case output one line denoting the maximum number of coins that Sam can collect in a single withdrawal. He can withdraw infinite amount of money from the Bank.  Example  Input: 6 1 2 4 8 16 32 6 1 3 6 8 15 20 0  Output: 6 4 
factorizations of a positive integer n is a collection of at least two positive integers, each larger than one, whose product is n. Note that, 2*12 and 12*2 represent the same factorization of 24. In fact, 24 has precisely 6 valid factorizations: 2*2*2*3, 2*2*6, 2*3*4, 2*12, 3*8, and 4*6. so you have to write a program that, given an int n, returns the number of unique factorizations of n.   Input Input will have number of cases. each case having n. n will be between 2 and 2,000,000,000 inclusive. Terminate the input with n=0.   Output for each input, output the number of unique factorizations for that number.    Example  Input: 24 9973 9240 1916006400 0 Output: 6 0 295 7389115   
The Problem is simple. You will be given n integers .Find an arrangement of these n integers so that summation of the absolute differences between adjacent elements is maximized. Suppose n = 4 and the given integers are <4 2 1 5>. The re-arrangement <2 5 1 4> yields the maximum summation. For this arrangement, sum = abs(2-5) + abs(5-1) + abs(1-4) = 3+4+3 = 10. Of all the 24 different arrangements of the above list, you won’t get any summation whose value exceeds 10. We will call this value, 10, the "Interesting list sum".    Input The Input will consist of number of test cases. Each case consists of a line that starts with n. n will be greater than 1 and smaller than 51, followed by n non-negative integers separated by a single space. None of the elements of the given list will exceed 1000. Terminate the input with n=0.   Output For each case, output the "Interesting list sum".   Example  Input: 4 4 2 1 5 4 1 1 1 1 2 10 1 0 Output: 10 0 9 
We knows about base->2 (binary) integers and base->10 (decimal) integers, and various other positive bases. But what about negative bases. OK! lets talk about the "base-> -2". An integer n written in base -2 is a sequence of digits written right-to-left. Each of which is either 0 or 1 (no negative digits!), and the following equality must hold: n = b0 + b1(-2) + b2(-2)2 + b3(-2)3 + ... The cool thing is that every integer (including the negative ones) has a unique "base-> -2" representation, with no minus sign required. Your task is to find this representation.    Input The Input consists of the number of test cases. Each one is a line containing a decimal integer n, in the range from -1,000,000,000 to 1,000,000,000, excluding 0. Terminate the input with n=0.    Output For each test case, output one line containing base -2 representation of the input number.    Example  Input: 1 7 -2 0  Output: 1 11011 10  
You are Given a 2-dimensional array of positive and negative integers, find the sub-rectangle with the largest sum. The sum of a rectangle is the sum of all the elements in that rectangle. The sub-rectangle with the largest sum is referred to as the Best sub-rectangle. A sub-rectangle is any contiguous sub-array of size 1*1 or greater located within the whole array. As an example, the maximal sub-rectangle of the array:                              0  -2  -7  0 		 9   2  -6  2 		-4   1  -4  1 		-1   8   0 -2  is                              9  2 		-4  1 		-1  8   which is in the lower-left-hand corner, and has the sum of 15.    Input The input consists of several test cases. The input begins with a single positive integer N on a line by itself indicating the size of the square two dimensional array. This is followed by Integer values for the square. These integers make up the array in row-major order (i.e., all numbers on the first row, left-to-right, then all numbers on the second row, left-to-right, etc.). N may be as large as 100. The numbers in the array will be in the range [-127, 127]. Terminate the input with N=0.   Output The output is the sum of the maximal sub-rectangle.   Example  Input: 4 0 -2 -7  0 9  2 -6  2 -4  1 -4  1 -1  8  0 -2 0 Output: 15  
You are building a two way,triangular ladder. The ladder has N levels, numbered 1 through N from top to bottom. You have 3 types of marbles a,b,c, and you've decided to use them in the following manner: Within each row, you will select the types of the marbles such that there is an equal number of marbles of each type used in that level. For example, consider the following two- "two way ladders":         a                   a      c   b              c   b   a   a   a         a   c   a  The ladder on the left is correct. Each row contains an equal number of marbles for each type of marble. The ladder on the right, however, is not correct because the third level contains an unequal number of a and c marbles. It is obvious that at each level k, you will have a row of exactly k marbles.   Input Every input will have 4 values. You are given an int N, N>0 and N ≤ 10 the number of levels in the ladder, and 3 different integers a, b and c, all greater then or equal to 0 and less then or equal to 50, representing the number of available marbles of the given type. Terminate the input with N=0.   Output Return the number of distinct correct ways to form the ladder. Two ladders are different if there is at least one position at which the two ladders have a different marbles. If it is impossible to create any ladder with the given marbles, return 0.   Example  Input: 2 2 1 0 3 2 2 1 3 2 2 2 0 Output: 3 0 36  
Sam has pencils of different lengths, that follow an order. If he has n pencils than their lengths are in increasing order starting from 1, for example: if he has 4 pencils then they are of length 1,2,3,4. Thus if he has n pencils, then he has exactly one pencil of each the lengths from 1 through n.   Input Each test case will contain an integer n(3<=n<=1000000), the number of pencils in sam’s collection.Terminate the input with n=0.   Output For each test case, output on a line the number of different triangles you can make with sam's pencils. Triangles X and Y are different if there is at least one pencil in X that is not in Y. A triangle has area strictly greater than 0.   Example  Input: 3 4 10 0  Output: 0 1 50 
Patterns and sequences always interests humans. So we brings to you quite an unusual Pattern. This pattern has the following properties:                        1   1   1   1   1   1   .                        2   1   3   1   .   .   .                          1   2   2   1   .   .   .                            1   1   1   1   1   1   . 		    (example pattern)  1. Infinite set of numbers arranged in a triangular grid. 2. The pattern has k(k>=2) rows, each one consisting of an infinite set of numbers. The first and the last row are exclusively composed by ones. 3. Each set of four adjacent numbers,                                      A                                  B   C                                     D  satisfies the relationship B*C = A*D + 1 .The complete pattern can be determined by the values of the first column and this rule. The example above shows some of the first values of this pattern. You must have come to know your task, find the value of a position in the pattern, given the values of the first column. Input  The Input consists of several test cases. The first line of each test case is an integer value N given that N>2 and N≤1000, that specifies the number of rows of the pattern. The second line of each test case corresponds to a pair of integer numbers i, j, with i and j both being greater then 1 and also i is less than N and j is less than 100,000,000, i specify the row and j specifies the position in the row of the value to be reported. The last line contains N values, v1, v2,..., vN , with vi>0&vi≤1000, (for each row), that correspond to the values of the first element in each row. notice that v1 = vN = 1 . It is guaranteed that every described pattern contains only integer values. The end of the input is recognized by a number 0 in the place that should correspond to the number of rows of a pattern.   Output Each line of the output must give the unique integer value corresponding to the value in the position (i, j) of the pattern.   Example  Input: 4 2 3 1 2 1 1 6 5 9 1 1 1 1 2 1 0  Output: 3 4 
The Hostel LAN connection is to be laid down. Rooms in the Hostel lie all in a straight line. It is always desired to use minimum number of cable wires for this work and all the rooms receive the LAN service. A room can either get connected to main line or it can get connected to a room to its immediate let or right provided the latter room is already getting the LAN service. You are to write a program that determines the number of different combinations of the cable wires that is possible so that every room receives the service.  example for 3 rooms:    	M           M               M             / \         /                      \           1  2      1-2                1-2  M represent the Main center and 1 and 2 represents the rooms. In first, Main is connected to both. In second, Main is connected to 1 and 1 is connected to 2. In third, Main is connected to 2 and 2 is connected to 1.  Input Each line of input contains a positive integer N (N ≤ 40), the number of rooms.There is only one main supply. A value of 0 for N indicates the end of input which should not be processed.Terminate the input with a zero.    Output For each line of input you have to output, on a single line, the number of possible arrangements. Output will be less than 2^64 - 1.    Example  Input: 1 2 3 0   Output: 1 3 8  
A palindrome is a string of letters that is equal to itself when reversed. Given an input string, not necessarily a palindrome, compute the number of times you need to swap to transform the string into a palindrome. By swap we mean reversing the order of two adjacent symbols. For example, the string "mamad" may be transformed into the palindrome "madam" with 3 swaps: swap "ad" to get "mamda" swap "md" to get "madma" swap "ma" to get "madam"  Input The Input will have number of test cases. For each test case, one line of input containing a string of up to 100 lowercase letters will be there. Terminate the input with a 0(zero).     Output  Output consists of one line. This line will contain the number of swaps, or "Impossible" if it is not possible to transform the input string to a palindrome.  Example  Input: mamad asflkj aabb 0 Output: 3 Impossible 2  
Arunava has learnt to find the sum of first N natural numbers using the expression N(N+1)/2.But now Kartik Sir has asked him to find the sum of floor(N/2) for first N natural numbers where floor(X) is the greatest integer less than or equal to a given real number X.Arunava has not memorized any formula for this. So can you help him.   Input 1st line has an Integer T denoting the number of test cases Each test Case Contains: A single integer N on a new line denoting the number of natural number upto which it needs to be summed.    Output For each test case output a single line containing required sum as the output    Example  Input: 5 1 2 3 4 5   Output: 0 1 2 4 6    CONSTRAINTS: 1 ≤ T  ≤ 100000 1 ≤ N ≤ 10000 0 ≤ S ≤ 214783647   Explanation of the fifth test case N=5, The required sum is floor(1/2)+ floor(2/2)+ floor(3/2)+ floor(4/2)+ floor(5/2)=0+1+1+2+2=6 
Joy is very fond of ice-creams. The road from Joy's house to IEM is full of ice-cream parlors.So naturally on his way to college everyday he stops his bicycle by the road side to have the best ice cream and hence even though he starts early morning from his home he fails to reach college in time. It is campussing time now.Subhabrata sir has warned him of the severe actions that might be taken against him if he comes late there too.So he can't afford to be so careless anymore, but he can't give up his fascination for ice-cream either. So Joy has figured out that there is only a continuous part of the road that remains crowded and a huge rush occurs in the ice-parlors within that area only and hence choosing an ice-cream parlor within that area makes him loose time for college. Ice-parlors outside this area are pretty empty and there he can get his orders served very quicky and it won't hamper his time much. He already knows the the quality of ice-creams available at each of the ice-parlors from his experience of all these years. However it is difficult to know which particular part of the road will remain crowded the next day. But nothing much to worry, there is a new Radio station which gives traffic forecast. Every night he listens to that traffic forecast to know which one continuous part of the road will remain crowded the next day. So guys it's your turn to help Joy to have the best possible ice-cream and also reach college in time.  Input  1st line: an Integer N denoting the number of ice-parlors on the road. 2nd line: N integers from A1 to AN separated by a single space.Integer Ai denote the quality of ice-creams available at the ith ice-parlor on the road. Higher the value of Ai better is the quality of ice-cream. 3rd line: integer Q denoting number of days that joy checks the traffic forecast. Next Q lines:2 integers  Xi and Yi separated by a single space denoting the starting and ending of the region(both inclusive and staring from 1) that will remain crowded on the ith  day    Output Q integers one on each line: ith line contains an integer denoting the best possible ice-cream that Joy can eat on the ith day. If he can not buy any ice-cream print zero for that day.    Example  Input: 10 2 5 9 8 7 1 6 5 8 7 2 4 7 3 8   Output: 9 8    CONSTRAINTS: 1 ≤ N ≤ 200000 0 ≤ Ai ≤ 214783647 1 ≤ Q ≤ 100000 1 ≤ Xi ≤ Yi ≤ N    Explanation: N=10, On the first day if he selects an ice-cream parlor between 8,7,1,6 lying continuously at 4th,5th ,6th, 7th position respectively he will become late so he has to chose the best among the rest which is 9 lying at location 3. Similarly on 2nd day he can not chose between  9,8,7,1,6,5 lying from 3rd to 8th position. 
It is high time now, IT companies are hiring in huge numbers. Now that they have hired they need to form teams each containing exactly 2 members. No two members in the team have the same age. In any team, older is given the position of a Developer (D) and younger is given the position of a Tester (T). They have sorted all the members to form a list according to their ages (such that youngest in the list is the first). However even before forming teams they have assigned designations (D or T) to all the members in the list. Now it is your duty to tell whether it is still possible to form teams with the requirements stated above and also maintain the assigned designation of each of the persons.    Input 1st line: An Integer T denoting the number of test cases Each test Case Contains: A single line representing the list consists of only 'T '& / or  'D'    Output T lines each containing  'YES'  (if possible to form group) or  'NO'  (if not possible).   Example  Input: Input 2 TTDD DDDDDD   Output: YES NO  CONSTRAINTS  1 ≤ T  ≤ 20 1 ≤ length(list)  ≤ 1,00,000   
Samya and Utsav are good friends. Samya claims that no one can beat him in maths especially when it comes to dealing with numbers. So Samya throws a challenge at Utsav that he will be able to do any computation within a second however difficult it is. Utsav tells him a value of N and asks him to find the smallest number such that it is co-prime to all first N natural numbers,it is a composite number and it is a square free number.Surprisingly Samya really gives the answer within a fraction of a second for whatever N Utsav asks him to do. But Utsav is not so good at Maths.So he wants you to write a program for him so that ha can verify Samyas answer. Let's see if your program can do better than Samya's brain.  Input 1st line contain an integer T denoting the number of test cases.Each test case contains one line,an integer N   Output T lines each containing a single integer S as the answer   Input: Input 2 1 6   Output: 6 77   CONSTRAINTS:  1  ≤ T  ≤ 100000 1  ≤ N  ≤46000 1  ≤ S  ≤ 214783647   
The classical Mobius function µ(n) is an important multiplicative function in number theory and combinatorics. µ(n) is defined for all positive integers n and has its values in {-1, 0, 1} depending on the factorization of n into prime factors. It is defined as follows:  * µ(n) = 1 if n is a square-free positive integer with an even number of prime factors. * µ(n) = -1 if n is a square-free positive integer with an odd number of prime factors. * µ(n) = 0 if n is not square-free. Given N, find the number of tuples (a,b) with 1<=a<=N and 1<=b<=N, such that µ(a*b) = µ(a) * µ(b)  Input The first line of input contains a number T(1<=T<=10), the number of test cases. Then T lines follow, each containing a single number N(1<=N<=100000).   Output Output T lines, one line for each input, containing the number of tuples satisfying stated property.   Example  Input: 3 1 2 4   Output: 1 3 14  Explanation: In case of N=4, only the tuples (2,2) and (3,3) do not satisfy the required condition, the other 14 tuples do.  
IEM(International Energitic Medical Board) has received a sample of viruses. The sample contain exactly N types of virus. Each type is recognised by a unique value(So, N values are necessarily DISTINCT).IEM has also received some statistics forecasting the behaviours of the viruses.This provided mainly three ideas:- 1.The initial number of each type of viruses,I( in other words, initially all type of viruses have same count ie I ) 2.Information regarding Q days about the behaviour of viruses. For each day, they have given 3 integers X,Y and V which means ALL THE TYPES PRESENT in the sample whose values are in between X and Y(both inclusive) will have an increase in number by value V. 3.Information about the critical virus at the end of each of Q days. For each day, they provide one integer R which means if all the viruses (generated TILL THE END OF THAT DAY) are sorted, in ascending order of their values, then the virus at position R in the sorted list is termed as "CRITICAL VIRUS"(the starting position in the list is '1' ie the list has '1' based indexing) Scientists working at IEM need to know the TYPE-VALUE of the critical virus at the end of each day,but as they are too energitic, they cannot wait for Q long days to have the list of critical viruses.So, they are asking you to help them.     Input  1st line contains one integer N 2nd line contains N space separated integers which denote values associated with the types present in the sample(they are distinct) 3rd line contain I and Q separated by a spoace Each of the following Q lines will have exactly 4 integers X,Y,V and R separated by spaces. (the meanings of N,Q,X,Y,V and R are as described in the problem)    Output Output exactly Q lines corresponding to Q days.Each line should contain an integer denoting the type-value of the critical virus among the viruses generated till the end of that day. *NOTE:R has nothing to do with X,Y & V particularly on that day, rather it denotes the position in the whole sorted list of viruses generated upto that day. type-value of a virus is typically the value associated with its type. don't assume N values (defining N different types) initially given are some permutation of the numbers from 1 to N. the types which are not present in the sample, are need not to be considered during updating the sample...   Example  Input: 5 9 3 5 1 6 2 3 3 6 1 1 1 3 3 11 5 9 2 20   Output: 1 3 6   Constraints: 1 ≤ N ≤ 100000 1 ≤ type-value ≤ 2*10^9 1 ≤ Q ≤ 200000 1 ≤ I ≤ 10000 1 ≤ X ≤ Y ≤ 2*10^9 1 ≤ V ≤ 10000 1 ≤ R ≤ total_no_of_viruses_generated_at_that_time  
You're given an array 'a' of N distinct integers. Let's consider a triple ( i, j, k ), 0 ≤ i < j < k ≤ N-1. The sum of corresponding elements is equal to a[i]+a[j]+a[k]. For all the possible sums you can get by choosing such a triple output its value and the number of triples that result in such a sum.    Input The first line of input contains an integer N (3 ≤ N ≤ 20000). Each of the next N lines contain an integer a[i] (|a[i]| ≤ 10000).   Output Output each of the possible sums in increasing order with the number of triples that generate them. The format should be: s[i] : ways[i]  (s[i] = value of the i-th sum, ways[i] = number of triples that generate it)   Example  Input: 4 -1 2 3 4   Output: 4 : 1 5 : 1 6 : 1 9 : 1   Constraints: 3 ≤ N ≤ 20000 |a[i]| ≤ 10000 for all i.   
 This is the algorithmic version of a game that kids play in our part of the country. You will be provided with a few sticks. The length of the sticks will be in the order of powers of 2. (1,2,4,8,16,32....). You will also be given another test stick of any length. The task is to write a program that finds the minimum number of sticks required to make the required test stick.   Input  A positive integer in the range 1 to 10000   Output  A positive integer denoting the minimum number of sticks   Example  Input: 5  Output: 2  
Once upon a time, a king and a few of his soldiers were  caught by an enemy king in a war.  He puts them in a circle. The first man in the circle has to kill the second man, the third man has to kill the fourth, fifth man to kill the sixth and so on. When the circle is completed, the remaining people have to form a circle and the process has to repeat. The last man standing will be set free.  If the king has to be set free, which position must he take? For any given N number of people, write a program to find the position that the king has to take.   Input  Any positive integer in the range 1 to 10000.   Output  A positive integer indicating safest position   Example  Input: 9  Output: 3  
 You will be given a string of alphabets. You will also be given a single character. You have to find the number of times the alphabet repeats in the string.   Input  First input is a string less than 100 Characters.  Second Input is a single Character.   Output  A positive integer denoting the number of repetitions.   Example  Input: RRGVRDU R  Output: 3  
  Chella, a 5 year old kid, recently learnt the numbers from 0 to 9, and spends all his time trying to write larger numbers. One day he wrote a number on a paper, and turned it upside down i.e. inverted it. He was surprised and amazed  that the writing he did on the paper still made sense. So, now he has created a game for himself, where he writes numbers and looks at them upside down to see if it still is valid. Can you help Chella in this game..??    Input  t    (no. of  testcases)  n   (number which is to be found valid while being viewed upside down)  Constraints  1<= t  <= 1000  1<= n <= 10^50  Output yes If the number is valid , followed by the new number(after inverting) in the next line.  no. otherwise  Example Input:  2  1234567  1809610  Output:  no  yes  0196081   
IIIT Allahabad is celebrating its annual Techno-Cultural Fiesta from  1st  to 5th   October. The Chef has agreed to provide the supply candies for this fest. The Chef has N boxes of candies arranged linearly having some random number of candies in each box .  Chef wants to have same number of candies in each box but he can only transfer candies to the next (i+1) th box only. He can remove any number of candies from the last box and throw them out. He wants to put maximum number candies in each box. Since you are really good at mathematics, so he has asked you to find the maximum number of candies K that he can put in each box.   Input First line of input contains a single integer T, number of test cases. Description of each test contains 2 lines. First line contains single integer N, number of boxes. Next line contains N integers. i th number denoting C[i], the number of candies in each box .   Output For each test case output the maximum number of candies each box will contain after transferring candies, K.    Constraints:  1 ≤ T ≤ 100 1 ≤ N ≤ 10^4 1 ≤ C[i] ≤ 10^9   Example  Input: 3 3 3 2 1 4 1 2 3 4 3 3 1 2  Output: 2 1 2  Explanation:  For first test case, he can transfer 1 candy to next box that makes configuration as 2 3 1. Then he can transfer 1 candy from 2nd box to 3rd , thus K  
  Problem description. An array of n integers is given in which we should select an equilibrium number.the equilibrium number is the number for which the sum of numbers left to the equilibrium number in the array is equal to the sum of elements to the right.If equilibrium number does not exist print 'NO EQUILIBRIUM' without quotes  Input Input description.  First line of input contains an integer T denoting number of test cases First line of each test case contains an integer n denoting number of elements in array next line contains n space separated integers of array    Output Output description.  For the test case output k represents the equilibrium element of the given array If there exists no equilibrium element display a message saying  NO EQUILIBRIUM  Constraints  1 ≤ T,n ≤ 10^5 1 ≤ array element ≤ 10^9     Example Input: 2 6 7 2 4 5 1 3 4 23 32 12 4 Output: 4 NO EQUILIBRIUM    Explaination:   In the given example the sum of all the elements to the left of 4 is 7+2=9.And the sum of all the elements to the right of 4 is 5+1+3=9 these two are equal so the equilibrium element is 4   
  Given the values of A,D,N and X. Find the value of the following expression:  Since the answer can be very large,output the final answer % 274877906944.  Input First line will contain T,the no of test cases. The next T lines will contain the values of A,D,N,X.Note: For this problem submissions are allowed only in C/C++  Output For each test case output the required answer in a single line.  Constraints 1<=T<=100 0<=A,D,X<=10^5 0<=N<=10^6  Example Input:  2 1 1 1 1 2 2 2 2  Output: 3 22    
The palindrome is a string that can be read the same way from left to right and from right to left. For example, strings "level", "5665" are palindromes, however the string "coder" is not a palindrome.  We define "Lucky String" if it has an even length and the first half of this string is equal to the second half of this string. Like "papa" is an easy string because the first half "pa" is equal to the second half "pa", however the string "adda" is not an easy string because the first half "ad" is not equal to the second half "da".  If you are given N length of palindrome string, what is the maximal possible number of characters/symbols in an "easy string" that can be obtained by removing and changing the order of characters/symbols in the palindrome?  Input:    The first line of the sample input contains an integer T - the number of test cases. Then, T lines follow.   Each line consists of a single integer N - the length of a palindrome.   Output:   For each test case output a single integer - answer to the problem.    Constraints:   • 1<=T<=10000   • 1<=N<=1000000000   Sample Input: 2 5 4  Sample Output: 4 4 
FINDING PREFIXES Homer: Marge, I just ﬁgured out a way to discover some of the talents we weren’t aware we had. Marge: Yeah, what is it? Homer: Take me for example. I want to ﬁnd out if I have a talent in politics, OK? Marge: OK. Homer: So I take some politician’s name, say Clinton, and try to ﬁnd the length of the longest preﬁx in Clinton’s name that is a suﬃx in my name. That’s how close I am to being a politician like Clinton Marge: Why on earth choose the longest preﬁx that is a suﬃx??? Homer: Well, our talents are deeply hidden within ourselves, Marge. Marge: So how close are you? Homer: 0! Marge: I’m not surprised. Homer: But you know, you must have some real math talent hidden deep in you. Marge: How come? Homer: Riemann and Marjorie gives 3!!! Marge: Who the heck is Riemann? Homer: Never mind. Write a program that, when given strings s1 and s2, ﬁnds the longest preﬁx of s1 that is a suﬃx of s2.  Input Input consists of two lines. The ﬁrst line contains s1 and the second line contains s2. You may assume all letters are in lowercase.  Output Output consists of a single line that contains the longest string that is a preﬁx of s1 and a suﬃx of s2, followed by the length of that preﬁx. If the longest such string is the empty string, then the output should be 0.  Example  Input: clinton homer  Output: 0   Input: riemann marjorie  Output: rie 3 
Least Distance Mr. John has a habit of implementing new programming methods. This time he needs your help to solve a problem. He needs a method such that it accepts a series of numbers (all in single digits) and returns a typical answer. The answer must be the least distance between any two ADJACENT numbers.   For Example: If the series of numbers submitted is :4 8 6 1 2 9 4 The output must yield '1'  since the least difference between 2 neighbouring numbers is 1 i.e between 1 and 2.   Note that order of numbers do not matter. In above example, 2 may have appeared before 1. Neglect if the difference is a negative number.  Input First line of input must contain a series of numbers. All numbers must be between 0 and 9 i.e. single digits.  Output Second Line is the output of the given input.  Example  Input: 4 8 6 1 2 9 4  Output: 1   Input: 5 7 4 9 7 2  Output: 2 
Middle Strings  Miss Roma has got a new job in a computer agency. To test her skills the manager has appointed her with a small project. She will get a string of any length but of ODD length and what she has to do is finding a center string of length 3 in the original string.  For Example: She gets a string 'CANDY' then she needs to display the output 'AND'.  You have to help her. So, develop a code which accepts a string and displays the middle string of length 3.  Strings must be submitted in UPPER CASE only.  If String is of length less than 3 display output as 0.  Input First line consists of a string of  ODD length which is in uppercase.  Output Second Line displays the appropriate output of length 3  Example  Input: CANDY  Output: AND   Input: SOLVING  Output: LVI 
Common Integer  Andy wants to prove his practical programming knowledge to his old pal.  He will get two numbers both in the range 10 to 99.  if there exists a comon integer in both the numbers, he has to write TRUE or else FALSE.  For Example: if input numbers are 12 and 24, the output must be TRUE since the common integer is 2 in both numbers.  Help Andy by developing a code that does his job.  Input First line is two numbers separated by a space. The numbers must be in between 10 and 99.  Output Next line is the output TRUE or FALSE depending on the input.  Example  Input: 12 24  Output: TRUE   Input: 11 34  Output: FALSE 
Mirrored Strings Davy Jones needs to conquer a ship for his pirates. But the only rule he has to follow is to conquer only those ships whose names are partially mirrored at the end.  For Example: If a ship's name is 'abxyzba' then he can conquer the ship because the string has mirrored string at the beginning and at the end i.e 'ab'.  Now your job is to develop a programming code which helps Jones to identify the ships.  Input First line consists of input string of any length.  Output Second Line is the appropriate output displaying only the mirrored string.  Example  Input: abXYZba  Output: ab   Input: codechefdoc  Output: cod 
After reading the book Digital Fortress, one evil computer programmer was so inspired that he decided to steal information from the FBI servers themselves. He was able to create a virus, using polymorphic code mutations, just as it was written in the book, that even the FBI filters were unable to detect it. He knew about the FBI servers, that they were arranged in a X by Y grid. The virus was self-propagating, which means he have to release it to only 1 computer to affect the whole grid. The virus made complex hacks to break down firewall and other securities, and that too without raising any security alarm, so that it took almost 1 hour to break into a server. After it affects a server, it spreads to nearby servers adjacent to it and start hacking them, which takes another hour on their own:  Go fellow hackers! Given X and Y, It's our task to find the minimum time to shut down all the FBI servers.    Input The first line contains A, the number of test cases. Each of the next A lines contain two integers X and Y. A ≤ 1,000 0 ≤ X ≤ 10,00,000 0 ≤ Y ≤ 10,00,000    Output The minimum time in hours it takes to shut down all servers in the grid.   Example  Input: 2 3 1 3 3  Output: 2 3 
An exam consists of N questions. The marks of the N questions are m1, m2, m3, .. mN respectively. Jam is giving the exam and he wants to maximise his number of marks. However he takes some time to solve each question. The time taken by him to solve the questions are t1, t2, t3, .. tN respectively. The exams lasts for a total of time T. But Jam's teacher is very smart and she knows that Jam will find out a way to get maximum marks. So, to confuse Jam, she also puts up a bonus offer for him - The offer is that Jam can select a question for which he can double the marks awarded for that question. Now, Jam is indeed confused. Help him find out the maximum number of marks he can gain.  Input  The first line contains a single integer N, that represents the number of questions. Second line contains a single integer T, the total time for which the exam takes place. Third line contains N space-separated integers m1, m2, m3, ... mN, where mi represents marks assigned to the i^th question. Fourth line contains N space-separated integers t1, t2, t3, ... tN, where ti represents time taken to solve the i^th question.    Output Output a single integer, that is the maximum number of marks Jam can achieve.    Constraints 1<=N<=1000 1<=T<=10000 1<=mi<=100000 1<=ti<=10000    Example Input: 3 10 1 2 3 4 3 4  Output: 8    
A computer has a dual core processor. Its operating system has a set of jobs JS from an application that it has to execute. A job scheduled to a core runs on that core till its completion. The scheduler is optimized to schedule jobs to different cores such that at the end of execution of JS, the skew of the processing time between both the cores is minimum. For example if there are three jobs A, B and C requiring 2, 3 and 4 milliseconds each respectively, then the scheduler will assign the jobs A and B to Core 1 and job C to Core 2. In this case the skew is |(2+3) - 4| = 1. Yet another scheduling policy can be to assign job A to Core 1 and jobs B and C on Core 2 but in this case the skew will be |2 - (3+4)| = 5, which is not optimal because Core 1 will finish its job in 2 milliseconds and keep sitting idle for five extra milliseconds while Core 2 finishes its jobs in 7 milliseconds. Your task is to find the skew assuming that  the scheduler optimally schedules the jobs to different cores no other job gets allocated a time quantum while any job from JS is executing scheduling policy is non-preemptive   Input First line of the input is the number of test cases T, after which T test cases follow. Each test case begins with an integer n in a line, i.e. the number of jobs in JS; followed by burst times(in milliseconds) required for each of the n jobs in a single line with each value separated by single space.   Output For each test case output a single integer s, the skew for that test case; followed by a new line character.  Constraints  1<= t <= 10 1<= n <= 1000   Example  Input: 2 5 2 3 4 6 8 1 6  Output: 1 6 
You are given an array A1,A2...AN. You have to tell how many pairs (i, j) exist such that 1 ≤ i < j ≤ N and Ai XOR Aj is odd. Input and Output First line T, the number of testcases. Each testcase: first line N, followed by N integers in next line. For each testcase, print the required answer in one line. Constraints 1 ≤ T ≤ 10 1 ≤ N ≤ 10^5 0 ≤ Ai ≤ 10^9 Sample Input: 2 3 1 2 3 4 1 2 3 4 Sample Output: 2 4 
Simple Factorial You are asked to calculate factorials of some small positive integers. Input    Input Tips:  An integer T, denoting the number of testcases, followed by T lines, each containing a single integer N.     Output For each integer N given at input, output a single line the value of N!   If you have multiple test cases in a file start this section as: "For each test case, output a single line containing...".     Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 100 1 ≤ N ≤ 100      Input: 4 1 2 5 3 Output: 1 2 120 6 
  	Given a number n , find its factorial.   Input   	There is a single positive integer T on the first line of input. It stands for the number of numbers to follow. Then there are T lines, each containing exactly one positive integer number N, 1 ≤ N ≤ 10000    Output  For every input number N, output a single line containing the factorial of N.   Example  Input: 3 5 2 7 Output: 120 2 5040 
Two friends Alice and Bob have a task A,B,C.....Z.Each have a duration of one hour.One day their supervisor decides to do a check on their performance.He punishes by finding the duration of summing up how long Alice and Bob have done the same task in the same order of increasing time which may or may not be consecutive.Find the longest possible duration they will be punished? Input The first line contains Alice's task the second line contains Bob's task  Output The longest possible duration they  are going to be punished  Sample Input   ABCDGH  AEDFHR  Sample output   3   Explaination  The set of task they have done together is ADH.The total length is 3 
      Little Princess Rapunzel is blessed with long (really looong!) hair, which is golden colored and has healing power. After the end of a long happy story, she marries her lover Flynn. They decide to lead a normal life by getting rid of the mysterious hair, which when cut loses its power and turns brown. There are many colorful beads on her hair in order. Rapunzel has some K favorite colors B[1...K] To remember good old stories, she wants to keep a part of her hair after its cut. A favorite sub hair is that continuous part of the hair, which has each of her favorite color beads at least once.    For the purpose of this problem, we represent a color as an integer and Hair as an array A[1...N], which has exactly N colored beads in the given order. Could you please tell her the total number of ways she can cut her favorite sub hair (sub-array). Two sub-arrays are different, if their starting or ending index in A differ.  Input First line contains T [ number of test cases, around 10 ]. Each test case is preceded by a blank line, including the 1st case. [ -2,000,000 <= A[i], B[j] ( colors ) <= 2,000,000 ] Each test case has 4 lines, as described below. N [ 1 <= N <= 100,000 ] < Array A : N integers, separated by spaces > K [ 1 <= K <= 1,000 ] < Array B : K integers, separated by spaces, her favorite colors, without repetition >  Output For each test case, output the number of different sub-arrays, which has her favorite color appearing at least once, in a separate line.   Example  Input: 3  4 1 2 3 1 2 1 2  6 10 20 30 40 50 60 1 20  5 1 2 3 4 5 2 2 6  Output: 4 10 0  Explanation: Case 1 : Favorite sub-arrays in bold [ 1 2 3 1 ], [ 1 2 3 1 ] , [ 1 2 3 1 ], [ 1 2 3 1 ]   Note: Large input, prefer using scanf/printf to cin/cout There are multiple test sets, and the judge shows the sum of the time taken over all test sets of your submission, if Accepted. 
 Problem Description An online quiz is going to be held at NIT Hamirpur. Each student will be given a system which is connected to internet. Although all the systems are connected to same network, there is still varying data transfer speed among them. This can cause pages to load slower on one system than the other. The organizers do not want a participant to have an advantage over others due to this. The organizers can't increase transfer speed on a system but they can cap it. Also they want to provide maximum speed to each system. Suppose there are n systems and m participants and speed of each of the n systems is known. Your task is to tell them the maximum speed they should keep on each system, so that atleast m of n systems have the same speed.  Input First line containing two space separated inputs (n and m) - the number of computer and participants respectively. The next line contains a space separated sequence of n integers: a1, a2, ..., an - where ai denotes the speed of i^th computer in KB/s.  Output Print a single integer representing the maximum data transfer speed that should be kept.  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ n ≤ 200 1 ≤ m ≤ n   Example Input: 5 3 250 125 330 3000 1000  Output: 330  Input: 6 6 2000 2100 3000 1500 1250 3000  Output: 1250 
 Problem description In the climax of an upcoming Bollywood movie "BHAI HO!", Bhai is standing at the centre of a large battlefield. Bhai is sorrounded by the army of Bacchha Singh from all sides. Each soldier of Bacchha's army is at some distance from Bhai. They all are heading towards Bhai with swords in their hands. At the centre, Bhai has a gun with unlimited Bullets. And you know, Bhai never misses a shot!. But a hurdle to Bhai is that he has to reload the gun after he has fired 6 bullets.  Bhai is killing soldiers at one soldier per second. By this time, every other soldier moves a step towards Bhai. Also, the reloading of the gun takes one second.  Now, you have to tell whether Bhai will be able to survive or not. And if Bhai fails in killing them all, tell the Number of soldiers killed by Bhai before falling.   Input The first line of input contains an integer T, denoting the number of test cases. T test cases follow. In each test case, the first line contains an integer N, denoting the number of soldiers. In the next line, there are N integers representing the distance of each soldier from Bhai.   Output For each test case Print the result as: If Bhai survives: Bhai Ho! if Bhai fails: Killed M Here M is the number of soldiers Bhai killed before dying.   Constraints   1 <= T <=100 1 <= N <=50000 1 <= D[i] <= 50000  Example Input: 2 5 3 4 3 7 9 5 3 3 3 3 3  Output: Bhai Ho! Killed 3   
 Problem Description Swapanti was born on the 9th of October, '95. Coincidentally, her best friend was also born on the same day. As a result, she has started liking 9's and 5's a lot. She tries to include it in everything she does. Her email-id has those 2 numbers. Even all the digits of her mobile number are either 9 of 5. She gets her roll number changed if the digits are anything other than 9 and 5. Clearly, she is obsessed with 9's and 5's. Given any number N, she wants to find her next smallest favourite number M greater than N. She is also a bit lazy. Help her in finding M.   Input First line of the input will consist of T, the number of test cases. Each of the next T lines contains a single number N.   Output For each test case print Swapanti's next favourite number M, in a new line.  Constraints  1 ≤ T ≤ 1000 1 ≤ N ≤ 10^99   Example Input: 4 8 58 240 69  Output: 9 59 555 95 
  Problem description. Griet Coders has new challenge on factorials,There are N number of coders in Griet,every Grietian has a unique number on his tshirt X.They decided to fom clubs of coders in a way that their club number is number of digits in the factorial of his tshirt number.Director of Griet is busy in another works so he needed your help to form the clubs of coders.  Input  The first line of the input contains an integer    T denoting the number of test cases. The description of T test cases follows." The first line of each test case contains a single integer N denoting the number of Grietians The second line contains N space-separated integers denoting tshirt numbers of Griet Coders     Output Tips:  For each test case, output a single line containing N space separated numbers  each denoting the Coders club number respectively     Constraints  1 ≤ T,N ≤ 10^5 1 ≤ X ≤ 25000     Example Input: 2 3 4 6 8 4 1 5 10 12 Output: 2 3 5 1 3 7 9 
  You are asked to calculate factorials of some small positive integers.    Input An integer t, 1<=t<=100, denoting the number of testcases, followed by t lines, each containing a single integer n, 1<=n<=100.  Output For each integer n given at input, display a line with the value of n!  Example Input: 4 1 2 5 3  Output: 1 2 120 6 
  Indian Institute of Technology, Banaras Hindu University is organizing an annual cultural festival. An organizing committee has been formed to get all the preprations done for the fest. The convener of the fest has decided to invite the American Band, Linkin Park to the institute. which in turn gets disadvantageous as the cost incurred in organizing a show increases with each day.   On day 1, today, the committee has to pay ‘A’ dollars in order to organize the show. After each passing day, the cost in organizing the show becomes A times the price on the previous day. Any normal person would invite them on the 1st day itself as the price will be the lowest but the problem with the committee is that it needs some time to get all the approvals for inviting the band. Therefore it needs ‘B’ days to get the approvals before making the band an offer.   You, being a part of the financial team of the fest have the responsibility to calculate the cost of organizing the show. Your task is to ask the Linkin Park team on the Bth day. Since, the price can be a very large number, please tell them the price modulo (10^9 + 7).   Input The first line contains an integer T, the number of testcases. It’s followed by T lines. Each testcase will contain two integers A & B separated by a space.   Output Output T lines, each corresponding to the answer of the testcase.  Note: Both integers will have a maximum of 100000 digits.    Constraints 1 <= T <= 10   1 <= A,B <= 10^100000     Example Input: 5 3 2 4 5 7 4 34534985349875439875439875349875 93475349759384754395743975349573495 34543987529435983745230948023948 3498573497543987543985743989120393097595572309482304  Output: 9 1024 2401 735851262 985546465    Explanation As value of 32 = 9, So output for first case will be 9.   Similarly 45 modulo (10^9 + 7) = 1024.   Similarly 74 modulo (10^9 + 7) = 2401.   Similarly we can do for others.  
  Viru and Sumit(Graphics designer) are goodfriends.Viru is having Girlfriend.She ask Viru for a Starcrust burger.Viru is not having enough money.So he goes to Sumit for money.Sumit is having only 10 rupees notes.Viru asks for x rupee of money.So how much money should Sumit gave so that Viru get enogh money to buy Burger and make him happy.   Input  The first line contains T i.e. the number of test cases. . T lines follow, each line containing an integer,N   Output  For each testcase, print the round number of N in new line.     Constraints  1 ≤ T ≤ 10^9 1 ≤ N ≤ 10^15   Example Input: 1 128  Output: 130   Solution  #include<stdio.h> int main() {       long  int t; 	scanf(" % lld",&t);      for(i=n;i ≥ 0;i--) 	{ 	    long long int n; 	   scanf(" %lld",n); 	   while(n) 	   { 	   	  n++; 	   	  n/=10; 	   } 	   printf("%lld\t",n); 	} 	return 0; }   Steps to be followed     1. Read the given description carefully and understand the problem.     2. Analyze the code given in the problem and find bugs(errors) in these codes..     3. The given code can be copied and compiled in an online compiler (Eg. ideone.com).     4. Once the bugs are eliminated from the code, the clean code can be submitted as the solution to the problem..     5. The solution should be a debugged version of the code provided and must satisfy the test cases to be accepted.. All the best!! 
There us a story told by Richard Feynman in the book "Surely You're Joking Mr. Feynman" where he describes inspecting a manufacturing plant. The plant has  N  chambers and  M  valves, each valve connects two chambers. The valves are  bidirectional , i.e., substance can flow in either direction through the valve. Substance is manufactured in chamber 1 and flows to chamber N, where is exits the plant. Due to it's explosive nature, the substance should not be allowed to accumulate. Hence the plant has the property that failure of a single valve cannot prevent substance flow from chamber 1 to chamber N. (Failure of a valve means that substance cannot flow in either direction through that valve). Feynman "accidentally" found a valve that violated the condition mentioned above. Can you?  INPUT : First line contains an integer T, number of test cases Each testcase starts with a line containing two space-separated integers, N and M M lines follow, each containing two space-separated integers A and B, indicating that there is a valve from chamber A to chamber B. Assume that it is possible for substance to flow from any chamber to any other in the input.  OUTPUT : For each testcase, print the total number of valves which violate the mentioned condition.  SAMPLE INPUT : 1 4 3 1 2 2 3 3 4  SAMPLE OUTPUT : 3  CONSTRAINTS : 1 <= T <= 10 1 <= N <= 100000 1 <= M <= 200000 
  In the year 4242, the language Haskell has evolved so much that it has become an AI. It can solve very challenging problems, in very little time. Humanity is worried that Haskell will take over the world. All hopes remain tied to the Competitive Programming community as they are the expert in shaving milliseconds off code runtime. Haskell creators have found one particular task that if solved faster than Haskell itself, can be used to hack into Haskell's codebase and thus defeat it. The exact details of the task are as follows,  " Calculate the sum, S(N, K) = , for Q queries. Here Fi is i^th Fibonacci number defined as: Fi = i if i = 0 or 1 and Fi = Fi-1 + Fi-2 if i ≥ 2. "  You being a member of the Competitive Programming community are encouraged to make a submission to this task.   Input  The first line contains a single integer Q, the number of queries. Each of the next Q lines contain two integers each, Ni and Ki.   Output  Output Q lines with one integer each. The i^th line should contain the value S(Ni, Ki).   Constraints  1 <= Q <= 5*10^4 1 <= N <= 10^18 1 <= K <= 10^18   Example Input: 1 1 1 Output: 1  
 Problem Statement  A Fibonacci series is defined as f(0) = 0 , f(1) = 1 and f(i) = f(i-1) + f(i-2) for i>1 .  Gcd of 2 numbers is the greatest common divisor of the 2 numbers.  In this problem problem you will be given 2 numbers a and b and you are supposed to find f ( gcd(a,b) ) mudulo 10^9+7 .  Input Format The first line contains an integet T which denotes the number of test cases . Then T lines follow each having 2 integers A and B .  Output For each test case , output 1 integer in each line which is the value of f ( gcd(A,B) ) modulo 10^9 + 7.  Constraints  1 ≤ T ≤ 10000 1 ≤ A ≤ 1000000 1 ≤ B ≤ 1000000     Example Input: 4 1 1 2 5 3 6 4 8 Output: 1 1 2 3 
Laurel Creek  Laurel Creek is a perilous river that divides the campus into two halves and contains dangerous inhabitants such as geese and beavers. Your task in this problem is to find a way to cross the river without getting wet. To do so, you will take advantage of several tree stumps in the middle of the river. A tree stump provides a safe place for you to stand as you ponder your next move. To get from one stump to another, you walk along logs that connect the stumps. In cases where no log connects to the stump you wish to reach, all is not lost. You may pick up any log adjacent to the stump on which you are standing and put it down somewhere else so that it leads to the stump you wish to reach. In order for a log to be considered adjacent to a stump, it must be oriented in the appropriate direction; for example the log in S-S is adjacent to the two stumps, but the log in S|S is not considered adjacent to the two stumps. Each tree stump is located at a point on a square grid. Two stumps are designated as the beginning and end point of the crossing. Any two stumps lying in the same row or column of the grid may be connected by a log. At any point in time, you may perform one of the following legal moves: •	Traverse a log adjacent to the tree stump you are standing on to the tree stump at the opposite end of the log. •	Pick up a log adjacent to the tree stump you are standing on. You may not hold more than one log at a time. •	Put down the log that you are holding so that it connects the stump you are standing on to some other stump. The log must be of precisely the right length to reach the other stump. The log must rest in the water: you may not use a log to connect two stumps if there is a third stump directly between them, or if the log would cross some other log already in the water.  Input specification The first line of input contains one integer specifying the number of test cases to follow. Each test case begins with a line containing two integers 1 <= r <= 15 and 1 <= c <= 15 specifying the number of rows and columns in the grid. Each of the next r lines of input contains c characters with the following meaning. The character S denotes a stump. The characters B and E denote the beginning and end stumps of the crossing, respectively. A consecutive sequence of - or | characters in a line denotes a single log whose length is proportional to the number of symbols. The character . denotes an empty grid point containing only water. There will never be more than fifteen stumps in the river.  Output specification For each test case, output a line containing a single integer, the minimum number of moves in which the end stump can be reached from the initial configuration. If it is not possible to reach the end stump from the initial configuration, output a line containing the integer 0.  Example  Input: 1 7 11 . . . . S . . . . . . . . . . | . . . . . . B - - - S . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . S . S . . . E   Output: 10 
 Fire!  Joe works in a maze. Unfortunately, portions of the maze have caught on fire, and the owner of the maze neglected to create a fire escape plan. Help Joe escape the maze. Given Joe's location in the maze and which squares of the maze are on fire, you must determine whether Joe can exit the maze before the fire reaches him, and how fast he can do it. Joe and the fire each move one square per minute, vertically or horizontally (not diagonally). The fire spreads all four directions from each square that is on fire. Joe may exit the maze from any square that borders the edge of the maze. Neither Joe nor the fire may enter a square that is occupied by a wall.  Input specification The first line of input contains the two integers R and C, separated by spaces, with 1 <= R , C <= 1000. The following R lines of input each contain one row of the maze. Each of these lines contains exactly C characters, and each of these characters is one of: •	#, a wall •	., a passable square •	J, Joe's initial position in the maze, which is a   passable square •	F, a square that is on fire There will be exactly one J in the input.  Output specification  Output a single line containing IMPOSSIBLE if Joe cannot exit the maze before the fire reaches him, or an integer giving the earliest time Joe can safely exit the maze, in minutes.  Example1  Input: 4 4 #### #JF# #..# #..#   Output: 3  example2  Input: 3 3 ### #J. #.F    Output: IMPOSSIBLE 
 Abhijeet was new to programming. He was taking C++ classes in his school. One day his teacher introduced him to arrays. One day just to test Abhijeet's understanding of arrays and mathematics his teacher gave him an assignment. Where he was given 3 arrays A, B and C ( 0-based indexing ), not necessarily of same sizes. Now Abhijeet was asked to choose 4 indices from array A such that following conditions are satisfied.  Suppose the four indices are l1,l2,l3 and l4. l1 ≤ l2 and l3 ≤  l4. l1 ≤ l3. l2 - l1 + 1 is equal to the length of array C. l4 - l3 + 1 is equal to the length of array B. For l1 ≤ i ≤ l2, A[i] = C[i-l1]. For l3 ≤ i ≤ l4, A[i] = B[i-l3].  Now teacher was interested in knowing that how many different correct answers Abhijeet can come up with. But as this number can be very large he asked you to write a program for him.  Input Description  The first line contains three positive integers, N, K and L, size of the array A, B and C respectively. Next line contains N values, elements of array A. Next line contains K values, elements of array B. Next line contains L values, elements of array C. All the arrays are 0-indexed.   Output Description Output in a single line the number of different correct answers Abhijeet can give.  Constraints 1 ≤ N,K,L ≤ 10^5, 1 ≤ Ai, Bi, Ci ≤ 10^9  Example   Input 3 1 1 1 1 1 1 1  Output 6  Explanation: In the given case different correct answers are: (0,0,0,0),(0,0,1,1),(0,0,2,2),(1,1,2,2),(1,1,1,1),(2,2,2,2). 
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 The Black Riders  'Hush!' said Frodo. 'I think I hear hoofs again.'     They stopped suddenly and stood as silent as tree-shadows, listening. There was a sound of hoofs in the lane, some way behind, but coming slow and clear down the wind. Quickly and quietly they slipped off the path, and ran into the deeper shade under the oak-trees.     The hoofs drew nearer. They had no time to find any hiding-place better than the general darkness under the trees.  - Frodo, Sam and Pippin, when they encounter a Black Rider.  Indeed, the Black Riders are in the Shire, and they are looking for the One Ring. There are N hobbits out in their fields, but when they hear the Riders approaching, or feel the fear cast by their presence, they immediately wish to run and hide in M holes located nearby.  Now, each hole has space for just 1 hobbit; however, once a hobbit reaches a hole, he is able to make room for one more hobbit by digging away at the earth. The time required to make enough space for a second hobbit is C units. Also, each hole CANNOT hold more than 2 hobbits, even after digging. Also note that a hobbit can begin making space for the next hobbit only after he reaches the hole.  You are given the time required to travel from each hobbit's current location to each hole. Find the minimum amount of time it will take before at least K of the hobbits are hiding safely.  Input (STDIN):  The first line contains T, the number of test cases. The first line of each test case contains 4 integers - N (no of hobbits), M (no of holes), K (minimum number of hobbits to hide) and C (time taken to expand a hole). The next N lines contain M integers each, denoting the time taken for each hobbit to each hole.  Output (STDOUT):  Output one line per test case which contains the minimum time.  Constraints:  1 <= T <= 6 1 <= N, M <= 100 1 <= K <= min(N, 2 * M) 0 < C < 10,000,000 0 < Time taken by the hobbits to the holes < 10,000,000  Sample Input:   2 3 3 2 10 9 11 13 2 10 14 12 15 12 4 3 3 8 1 10 100 1 10 100 100 100 6 12 10 10  Sample Output:   10 9  Notes/Explanation of Sample Input:   For the first test case, there are 3 hobbits and 3 holes, and we need to get atleast 2 of them to safety. We can send the first hobbit to the first hole, and the second hobbit to the second hole, thereby taking 10 time units. For the second test case, we can make hobbit #1 reach hole 1 at time 1, hobbit #2 reach hole 1 at time 9 (by when hobbit #1 would have finished digging the hole), and hobbit #3 reach hole 3 at time 6. 
 You are given the easiest task. Given an array of positive numbers, you have to print the maximum number of non overlapping subarrays with sum equal to a given integer K. If there are no such subarray, print 0    Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two space separated integers N and K denoting the size of the array and required sum respectively. The second line contains N space-separated integers A1, A2, ..., AN denoting the array.     Output  For each test case, output a single line containing the maximum number of non-overlapping subarrays with sum = K.     Constraints  1 ≤ T ≤ 20 1 ≤ N ≤ 10^6 Sum of N over all test cases = 10^6 1 ≤ Ai , K ≤ 10^9     Example Input: 2 4 4 1 1 1 1 4 2 1 2 2 1  Output: 1 2   
Arunava has learnt to find the sum of first N natural numbers using the expression N(N+1)/2.But now Kartik Sir has asked him to find the sum of floor(N/2) for first N natural numbers where floor(X) is the greatest integer less than or equal to a given real number X.Arunava has not memorized any formula for this. So can you help him.   Input 1st line has an Integer T denoting the number of test cases Each test Case Contains: A single integer N on a new line denoting the number of natural number upto which it needs to be summed.   Output For each test case output a single line containing required sum as the output   Example  Input: 5 1 2 3 4 5   Output: 0 1 2 4 6    
  FreeKart Company is connected to n cities numbered from 1 to n. Currently the Headquarter of company is situated at index hq1. Each pair of connected cities are connected both ways. The connection is such that there is exactly one connection from the Headquarter to each city. The map of the connected cities is kept in the following way: for each city i, different from the Headquarter, there is kept number ci — index of the last city on the way from the Headquarter to i.  The company decided to move the Headquarter from city hq1 to city hq2. So, after this change the old representation of the map as described above became incorrect. Please, help the company to find out a new map in the way described above.    Input The first line contains the number of test cases(0 < T <= 10 ). The next line contains three space-separated integers n, hq1, hq2 (2 ≤ n ≤ 2*10^4, 1 ≤ hq1 ≠ hq2 ≤ n) — number of connected cities, index of the old Headquarter and index of the new Headquarter, respectively.  The following line contains n - 1 space-separated integers — the old representation of the map. For each city, other than hq1, there is given integer ci — index of the last city on the way from the Headquarter to city i. All the cities are described in order of increasing indexes.     Output Output n - 1 numbers — new representation of the map in the same format.   Example  Input 1 3 2 3 2 2  Output 2 3  Input 1 6 2 4 6 1 2 4 2  Output 6 4 1 4 2   
Albert and Davidson are two workers working in the production unit of a factory. The factory has a  total of 5 machines. But the problem is at any moment only two machines can be simultaneously used. The production manager has allocated Albert and Davidson with a set of jobs to be completed before they can return home. Albert and Davidson are very hardworking and devoted workers and would complete the jobs given to them before returning.  But the problem is both of them are die hard fans of Manchester United, who are playing in the Champions League finals tonight. So, they need to reach home as soon as possible. Also, they can leave the factory only after both of them have completed their respective jobs. Available 2 machines can be used by them in any way they want so to complete the jobs in minimum time.  What you need to do is to find the minimum time required to complete the work?  Input The input should include the following:-  1) First line should contain the number of jobs allocated to Albert,X. and Davidson,Y seperated by space.  2) Second line should contain the time required to complete each job allocated to Albert.  3) Third line should contain the time required to complete each job allocated to Davidson.  Constraints  0 < X <= 10 0 < Y <= 10   Output The output should be a single line showing the minimum time required to complete all the jobs given to them in minutes.  Example  Input 1: 5 4 50 25 60 35 20 24 26 27 99  Output 1: 183  Input 2: 4 2 25 50 75 20 50 30  Output 2: 125 
 Given a large positive number of atmost 1000 digits. You have to find out whether that number is divisible by 17 or not. Input First line of input contains a number t, number of test cases. Then t lines follows each containing a number. Output For each test case output "YES" if number is divisible by 17 otherwise "NO". Sample Input: 2 1717171717171717171717171717171717171717 19 Sample Output: YES NO  
Digits 4 and 7 are lucky, while all others are unlucky. An integer is lucky if it contains only lucky digitsin decimal notation. We would like to know the K-th lucky positive integer.  Input The first and only line of input contains a positive integer K (1 ≤ K ≤ 10^9).  Output The first and only line of output must contain the K-th lucky positive integer.  Example Input:1Output:4Input:3Output:44 
These days, you can do all sorts of things online. For example, you can use various websites to make virtual friends. For some people, growing their social network (their friends, their friends' friends, their friends' friends' friends, and so on), has become an addictive hobby. Just as some people collect stamps, other people collect virtual friends.  Your task is to observe the interactions on such a website and keep track of the size of each person's network.  Assume that every friendship is mutual. If Fred is Barney's friend, then Barney is also Fred's friend.  Input Specification The first line of input contains one integer specifying the number of test cases to follow. Each test case begins with a line containing an integer F, the number of friendships formed, which is no more than 100 000. Each of the following F lines contains the names of two people who have just become friends, separated by a space. A name is a string of 1 to 20 letters (uppercase or lowercase).   Output Specification Whenever a friendship is formed, print a line containing one integer, the number of people in the social network of the two people who have just become friends.    Sample Input 1 3 Fred Barney Barney Betty Betty Wilma   Sample Output 2 3 4 
 We will denote the initial empty Tic Tac Toe grid with nine dots. Whenever X or O plays we fill in an X or an O in the appropriate position.  The example below illustrates each grid configuration from the beginning to the end of a game in which X wins.  ...     X..    X.O     X.O      X.O     X.O      X.O      X.O ...     ...       ...        ...         .O.       .O.       OO.      OO. ...     ...       ...        ..X        ..X       X.X      X.X       XXX  Your job is to read a grid and to determine whether or not it could possibly be part of a valid Tic Tac Toe game.  That is, is there a series of plays that can yield this grid somewhere between the start and end of the game?   Input  The first line of input contains N, the number of test cases.  4N-1 lines follow, specifying N grid configurations separated by empty lines.  Output For each case print "yes" or "no" on a line by itself, indicating whether or not the configuration could be part of a Tic Tac Toe game.    Example  Sample Input 2 X.O OO. XXX  O.X XX. OOO   Output for Sample Input yes no 
An ideal string of length N is a string where the 1-based index of the first occurrence of each letter, is equal to the number of occurrences of that letter in the string. For example, the string "BAOOOA"(inverted commas for clarity purpose only) is an ideal string. The letter 'B' appears 1 time, and its index is 1. The letter 'A' occurs 2 times and its first index is 2. The letter 'O' occurs 3 times and its first index is 3. String A is lexicographically smaller than string B of the same length if it contains a smaller letter at the first position they differ. Letter X is smaller than letter Y if it comes earlier in the alphabet.  Input The first line of input will consist of the number of test cases 't' (1<= t <=20) followed by t test cases. Each test case will contain an integer N(1<=N<=100) corresponding to the length of the smallest ideal string .  Output Output contains the lexicographically smallest ideal string of the length N containing only uppercase letters ('A'-'Z'). If there are no such ideal strings of length N, return an empty String instead.  Examples   Input 5 1 3 2 6 7  OutPut: A ABB  ABCBCC ABBCCCC   For the third test case there's no way we can construct an ideal string of length 2 - if both its characters are equal, then the number of occurrences (2) and the position of its first occurrence (1) do not match; if they are distinct, then for the second character the number of occurrences (1) and the position of its first occurrence (2) do not match as well.  For the fourth test case we can permute the last 3 characters in any way, but this way gets us the lexicographically smallest answer. 
 Chef likes to travel a lot. Every day Chef tries to visit as much cities as possible. Recently he had a quite a few trips of great Chefland for learning various recipes. Chefland had N cities numbered from 1 to N. People in Chefland are very friendly, friendliness of i-th city is given by Fi.  Before starting of each trip, Chef's initial enjoyment is 1 unit. Whenever he visits a city with friendliness Fi, his enjoyment gets multiplied by Fi units.   City 1 is the home city of Chef. He starts each trip from his home city. Before starting a trip, he chooses a parameter R which denotes that he will start from city 1, and go to city 1 + R, then to 1 + 2 * R, then to 1 + 3 * R, till 1 + i * R such that i is largest integer satisfying 1 + i * R ≤ N.   Now, Chef wants you to help him recreate his visit of the cities. Specifically, he will ask you Q queries, each of which can be of following two types.  1 p f : friendliness of p-th city changes to f, i.e. Fp = f 2 R   : Find out the total enjoyment Chef will have during this trip. As Chef does not like big numbers, he just asks you to output two things, first digit of the enjoyment and value of enjoyment modulo 10^9 + 7.   Input There is a single test case. First line of input contains a single integer N, denoting number of cities in Chefland. Second line of the input contains N space separated integer - F1, F2, ..., FN, denoting the friendliness of the cities in order from 1 to N. Next line contains an integer Q, denoting number of queries. For each of the next Q queries, each line corresponds to one of the two types of the query. First there will be an integer denoting the type of the query, followed by the actual query. For query of type 1, there will be three space separated integers "1 p f" as defined above. For query of type 2, there will be two space separated integers "2 R ", as defined above.  Output For each query of type 2, output two space separated integers, first digit of Chef's enjoyment in this trip followed by the value of enjoyment modulo 10^9 + 7.  Constraints   1 ≤ N, Q ≤ 10^5  1 ≤ Fi ≤ 10^9  1 ≤ f ≤ 10^9  1 ≤ p ≤ N  1 ≤ R ≤ N   Example Input: 5 1 2 3 4 5 3 2 1 1 3 10 2 2  Output: 1 120 5 50  Explanation In the first query, Chef is going to visit cities 1, 2, 3, 4, 5 in order. At the end of the trip, his total enjoyment will be 1 * 2 * 3 * 4 * 5 = 120. First digit of enjoyment is 1 and 120 modulo 10^9 + 7 is 120. In the third query, Chef is going to visit cities 1, 3, 5 in order. At the end of the trip, his total enjoyment will be 1 * 10 * 5 = 50. 
Sufiyan is an engineering student. He loves data structures a lot, especially binary tree. Once he gifted his friend Irshad a rooted directed binary tree. As Irshad doesn't know much about trees, he wonders how to find the root of the tree. Irshad needs your help. You will be given a binary tree consisting of n nodes.  All the nodes are numbered from 0 to n-1. Your task is to print the number on the root of the tree.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  First line of each test contains an integer n denoting the number of nodes in the tree. Then n-1 lines follows each containing two space separated denoting the edge(directed) of the tree from the first node to second node.   Output  For each test case, output a single integer containing the number on the root of the tree.   Constraints  1 ≤ T ≤ 15 1 ≤ n ≤ 100000   Example Input: 1 6 1 0 2 4 2 3 4 1 5 2  Output: 5  Explanation Example case 1. In the above case the tree will be:   5    \     2   /   \ 3     4        /      1        \          0  hence the root is 5. So,the output is 5. 
 ACM International Collegiate     Programming Contest, Asia-Amritapuri Site, 2012 The Loyalty of the Orcs  'I think that the enemy brought his own enemy with him,' answered Aragorn. 'These are Northern Orcs from far away.     Among the slain are none of the great Orcs with the strange badges.     There was a quarrel, I guess: it is no uncommon thing with these foul folk. Maybe there was some dispute about the road.' - Aragorn describing the nature of Orcs.  Indeed, everyone knows that the Orcs are treacherous creatures who look for their own satisfaction and more often than not disregard the rules. The only way to keep them in line, is by maintaining the chain of command over a strict hierarchy among the ranks, wherein each Orc is responsible to his immediate superior all the way up to the army's head.  Further, the powers that be, have decided to have regular checks of their army's loyalties, just in case some Orc has been killed and all his juniors end up turning rogue!  There are N orcs, numbered 1 to N, wherein the lead orc is numbered 1. Step 1. Randomly choose a fixed order in which to test Orcs' loyalties. Step 2. Going in this order, you make a "roll-call" to check if the current Orc is alive or not. Step 3. If the current Orc is dead, then he is marked as "deleted".  With this information, it is possible to tell which all Orcs will be loyal, and which won't be. However, cunning Master Wormtongue suggests the following optimization: In step 2, if any of the considered Orc's superiors (not necessarily immediate superior) is marked as deleted, then the roll-call is not made.  Now, given this algorithm and the hierarchy of the army, along with which Orcs are dead, what is the expected number of roll-calls (taken over all possible orderings in Step 1) that you save by performing this optimization?  Input (STDIN):  The first line contains T, the number of test cases. The first line of each test case contains N, the number of orcs in the army. The next N-1 lines contain two space-separated integers u v, denoting that u is the immediate superior of v or vice-versa. The head of the army is the orc labelled 1. The next line contains m, the number of dead orcs. The next line contains m space separated integers, which are the labels of the dead orcs.  Output (STDOUT):  Output one real number for each test case containing the expected number of roll-calls that you save. The results should be accurate within an error range of 10^-6.  Constraints:  1 <= T <= 5 1 <= N <= 100,000 1 <= u, v <= N u != v The given set of u-v pairs form a valid chain of command. That means every Orc, except the Orc labeeled 1, has exactly one immediate superior.  Sample Input:   2 2 1 2 1 1 2 1 2 1 2  Sample Output:   0.5 0  Notes/Explanation of Sample Input:  For the first test case, the Orc labelled 1 is dead. The two possible orderings are [1, 2] and [2, 1]. With the optimization, for the order [1, 2], we save the roll-call to 2. So, the total number of roll-calls without the optimization is 4, and with the optimization is 3. Expected number of roll-calls is therefore, (4 - 3) / 2 = 0.5 . For the second test case, the Orc labeled 2 is dead. Since he does not have any sub-ordinates, the optimization does not have any effect. 
In today's digital era everyone is being hacked by someone, but there are a few who are untouchables/unhackable and are considered Master Hackers. Your task is to find these Master Hackers in the hacker community. A Master Hacker is the one who is hacking everyone else either directly or indirectly, i.e  1. A --> B, A hacks B 2. B --> C, B hacks C ==> A --> C, A is indirectly hacking C.  A hacker can hack the same person in more than 1 way.  Input The first Line contains T, the no. of test cases. Each Test case is as follow, first line contains two space seperated integers N and M, N specifying the no. of people in the community numbered 1...N, and M is the number of people who are being hacked by someone.  M lines follow each line consists of two space seperated integers H Q, where H-Hacker, Q-Target which is being hacked by H.  Output You need to print the index of the master hacker, if more than one exists you can output any one of them, if no such master hacker is present output -1.  Constraints 1 <= T <= 3 1 <= N <= 10^5 1 <= M <= min(2 * 10^5, N * (N - 1) / 2)  1 <= H, Q <= N  Sample Input  2 3 2 1 2 2 3 5 7 2 1 1 3 2 3 2 4 4 5 5 1 5 3  Sample Output  1 2 
Tired of solving all the problems given by his older brother Biswa, Debu has decided to challenge him with the following mathematical problem : A positive integer N can be written as product of powers of distinct prime numbers:  N = p1^r1 * p2^r2 .... * pk^rk  where p1, p1, ..., pk  are distinct prime factors of N  A function f is defined as: f(N, K) = Σ ri^K where ri is as described above.  Debu has asked Biswa to find the maximum value of f(N, K) for all integers 1 ≤ N ≤ C for a given value of K.  Biswa can easily solve this problem but he is too busy. So, your task is to solve this problem for Biswa.   As the answer can be very large, you just need to output answer modulo 10^9+7   Input The first line of the input contains an integer T denoting the number of test cases. Each of the next T lines contain two space separated integers C and K.  Output For each test case, output a single line containing the answer for that case.  Constraints  1 ≤ T ≤ 10^5 1 ≤ C ≤ 10^18 1 ≤ K ≤ 10^9   Example Input: 3 1 2 3 5 10 4  Output: 0 1 81  Explanation In the second test case f(3, 5) = 1. In the third test case f(8, 4) = 81. There may exist other values of N which give maximum value. 
  This is the year 4242 and competitive programming has become a skill essential for survival. Our protoganist HarryPotter needs to access a MuggleBook today. MuggleBooks are made by DoubleUnicornTechnolgies and are very peculiar computers. They are identical to 21st century computers even in 43^th century. No wonder they are called MuggleBooks. To access this particular MuggleBook, HarryPotter needs to solve the following competitive programming problem (remember how it's an essential skill in 4242).  " Asya has a fully connected undirected graph G with N nodes. The nodes are numbered from 1 to N. Each edge has an positive integer weight. Every time she picks a subset S of V(G) (the nodes of G), and the edges that connect them, she finds the sum of edges of the subgraph of G thus formed. She calls it the funk value, F(S) of the subset S of nodes picked.  Calculate the sum  where the summation is over all subsets S of V(G).  Here  is the floor operation and  is the set cardinality operation. "  Help HarryPotter access the MuggleBook by solving the problem.   Input  The first line contains a single positive integer N, the number of nodes in graph G. Then follow N lines, with N positive integers each. The j^th integer of i^th line is Wi,j, the weight of edge between i^th and j^th node.   Output Print one integer, the answer to the problem.  Constraints  1 <= N <= 23 1 <= Wi,j <= 10^6 Wi,j = Wj,i Wi,i = 0   Example Input: 2 0 1 1 0  Output: 1  
 Problem Duda is very funny guy in UVCE and recently he found a new kind of numbers. He calls those numbers as funny numbers. Duda says that funny number is numbers which has prime number of prime factors. For Example : prime factors of number 6 are 3 and 2, so 6 has 2 prime factors and 2 is a prime number, so 6 is a funny number. similarly prime factors of number 8 is 2, so 8 has only one prime number, hence 8 is not funny number. Now Duda wants to have some fun with his juniors and gives them a number N and asks them to identify whether the number is funny or not. Write program to determine whether the given number is funny or not and have fun with Duda.  Input First line of input contains T, number of testcases. Each testcase contains single line containing integer N, number of given by Duda.  Output For each testcase print "Funny"(without quotes) if the number given in that testcase is Funny, else print "Not Funny" in each line.  Constraints  1 <= T <= 1000 1 <= N <= 1000000  Sample Input  5 6 8 7 30 210  Sample Output  Funny Not Funny Not Funny Funny Not Funny 
Brady has recently learned addition. However, he only knows numbers with at most 6 digits! Specifically, he only knows the integers 0 to 999999.  This presents an issue when he adds two numbers: sometimes the sum has more than 6 digits. In these cases, he has a simple "solution": whenever he adds two integers whose sum exceeds 999999, he simply uniformly chooses a random integer from 0 to 999999 as the "sum" of those integers. Now, there is a sequence of integers V1, ..., VN, and Brady wants to add them one by one, starting from 0. In other words, he starts with S0 = 0, and sets Si = Si-1 + Vi (using his "addition" method) for 1 ≤ i ≤ N. For every i, what is the expected value of Si?  Input The first line of the input contains an integer N denoting the number of integers to add. The next N lines contain the integers, where the i^th line contains Vi.  Output Output N lines, where the i^th line contains the expected value of Si. Be careful about precision! Your answer will be considered correct if it is within an absolute or relative error of 10^-6 from the true answer.  Constraints  1 ≤ N ≤ 10^5 1 ≤ Vi < 10^6   Example Input: 7 99999 99999 800001 1 100 1000 5   Output: 99999 199998 999999 499999.5 500049.495 500548.94495 500551.44218723624875   Explanation #1-#3. The first three additions don't exceed 999999, so they will be performed correctly. #4. At this point, the cumulative total is 999999, and the number to be added is 1. Since this exceeds 999999, Brady just chooses a random number from 0 to 999999. The expected value is the average of all such numbers, or 499999.5 #5. At this point, the cumulative total can now have any value from 0 to 999999 with equal probability, and the number to be added is 100. If the total is less than 999900, then the addition will be performed correctly. Otherwise, the answer exceeds 999999 and a random number from 0 to 999999 is selected. The expected value among all possibilities is 500049.495. 
 Problem description. In a world full of numbers, you are given ‘N’ blocks of value 2. Your target is to merge these blocks in such a way that one bigger number is formed. The merging takes place as follows : Two blocks of value 2 will make one block of value 4, then two block of value 4 will make one block of value 8 and so on. At any step, after merging, if there is a block left, then that block is automatically upgraded to next higher value. You need to find out the numbers of block merges required to get largest number possible.  Input Description  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case contains a number ‘N’ i.e. number of blocks of value 2   Output Description The number of block merges required to get the largest number possible   Sample Input  1 5  Sample Output  4   Sample Input Explanation  5 blocks of 2s will make 2 blocks of 4 and one block of 2 will be upgraded to 4. Now 2 blocks of 4 will make one block 8 and one block of 4 will be upgraded to 8. Finally 2 blocks of 8 will make one block of 16 (which is the largest number possible). Hence number of merges required are: 2 + 1 + 1 = 4   Constraints  1 <= T <= 100000 1 ≤  Ni ≤ 10000000000  
   Note: For Turbo C++, select "Text" as your language Problem description: ProCon Junior gives you chance to earn points for admission in IIIT Delhi. So, it is not easy to get points. If you solve this problem you are one more step closer to earn points. Solve this problem and earn points. Problem: In IIIT Delhi we play lot of games and Balls is one of them. In this game the winner is one who scores maximum points at the end of game. Game has various levels. You will be given name of player who wins the round and his/her score after each round. Rest of the players are given 0 score for that round. After the end of all the rounds points of all players are calculated and the one with the maximum score wins the game. Now, you need to tell who wins the game. It is guaranteed that there is only 1 winner. Good luck !!!!!  Input First line contains T denoting number of test cases. First line of each contains N denoting number of rounds. Next N line contains space separated string and an integer denoting name of the winner of that round and his score in that round.  Output For each test case output a single line containing the name of the winner of the game and his/her final score.   Constraints  1 ≤ T ≤ 10 No of unique names = 15 1 ≤ N ≤ 100 1 ≤ score[i] ≤ 100    Example  Input: 3 2 Ashish 2 Ayush 3 3 Ashish 2 Ashish 4 Ayush 5 3 Ayush 2 Aneesh 5 Ashish 3  Output: Ayush 3 Ashish 6 Aneesh 5    Explanation  Test case 1: Since score of Ayush is more after the end of the game, winner is Ayush. Test case 2: Since score of Ashish is more after the end of the game so the winner is Ashish. Test case 3: Since score of Aneesh is more after the end of the game, winner is Aneesh. 
   Mr. M wants a partner for the FooBar's contest. He goes to Mr. H to ask him to be his partner. Mr. H being a clever person says, “if you can answer my problem correctly, I will surely be your partner.” The problem states - “Given an array of N numbers A1, A2, ... Ai, Ai+1, ... AN-1, AN, first find number of numbers such that gcd(Ai, i) = perfect square. Don’t consider 1 to be a perfect square. Let K be this number. Now give the product of largest K numbers in array A. Since youranswer can be large, print your answer modulo (10^9 + 7). If there is no such number, print 1.” Mr. M accepts his challenge. However he isn’t sure whether he will be able to solve the question. Can you help Mr. M solve the problem?   Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case consists of 2 lines. First line contains a single integer N denoting the size of the array A. Next line contains N space separated integers denoting the elements of the array.    Output For each test case, output a single line containing the product of largest K numbers in array A modulo 10^9 + 7    Constraints 1 ≤ T ≤ 10^2 1 ≤ N ≤ 10^6 1 ≤ Ai ≤ 10^6    Sample Input  2 4 1 2 3 4 10 1 2 3 4 5 6 7 8 9 10  Sample Output  4 90 
  Problem Statement  Given an array of  size  'N'  of integers with each element denoted as  array[i]  . In this problem we are given a parameter  'K'  and we are supposed to find the  size of the largest contiguous subarray whose GCD is atleast 'K' If there is no subarray whose GCD is atleast 'K' , print 0    Constraints    1  <=  N   <=  500000   1  <=  array[i]  ,  K  <=  1000000    Input Format  The first line contains 2 integers 'N' and 'K' the size of the array and the parameter as described in the problem statement The second line containts 'N' space separated integers denoting the array    Output Format  Print a single integer in a single line denoting the maximum contiguous subarray size whose GCD is atleast 'K'    Sample  Input 5 9 10 20 5 15 45 Output 2 Explaination GCD(1 , 2) is 10 and since its greater than 0 and there is no other subarray larger that this with GCD atleast 9 , so the answer is 2 . Alternatively the subarray (4 , 5) is also having GCD 15 but since it also has a size 2 the answer remains 2 only. Input 6 10 15 30 10 20 30 40 Output 5 
 You are given an array A of integers of size N. You will be given Q queries where each query is represented by two integers L, R. You have to find the gcd(Greatest Common Divisor) of the array after excluding the part from range L to R inclusive (1 Based indexing). You are guaranteed that after excluding the part of the array remaining array is non empty.  Input  First line of input contains an integer T denoting number of test cases. For each test case, first line will contain two space separated integers N, Q.  Next line contains N space separated integers denoting array A. For next Q lines, each line will contain a query denoted by two space separated integers L, R.   Output For each query, print a single integer representing the answer of that query.  Constraints  Example Input: 1 3 3 2 6 9 1 1 2 2 2 3  Output: 3 1 2   Explanation  For first query, the remaining part of array will be (6, 9), so answer is 3. For second query, the remaining part of array will be (2, 9), so answer is 1. For third query, the remaining part of array will be (2), so answer is 2.   Warning :  Large IO(input output), please use faster method for IO.  
Given a tree with N nodes and N-1 edges, where each edge has a weight associated with it.  Gcd(A,B) represents gcd of weights of all the edges in the path from A to B. Len(A,B) is number of edges in path from A to B.  You have to find maximum value of Gcd(A,B) * Len(A,B) over all possible pair of nodes A,B.  Input  The first line of the input contains an integer T denoting the number of test cases. The first line of each test case contains a single integer N denoting the number of nodes in the tree. Next N-1 lines contains 3 integers a,b,c denoting that there is an edge between node a and b having weight c.     Output  For each test case, output a single line containing the required answer.     Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 100000 1 ≤ a,b ≤ N 1 ≤ c ≤ 100000     Example Input: 1 3 1 2 10 2 3 4  Output: 10    Explanation  There are 3 possible paths: f(1,2) = 10*1 = 10 f(2,3) =  4*1 = 4 f(1,3) =  2*2 = 4 So the maximum value is 10 
  Problem Description : Alice and Bob play the following game.  Given two numbers  x  and  m . A grid is built in the following fashion:   x x + 1 x + 2 ..........  x + m - 1   x + 1 x + 2 x + 3 ..........  x + m   x + 2 x + 3 .... ........  x + m + 1   .... .... .... .......... ....   x + m -1 x + m x + m + 1 ........  x + 2m - 2     Each cell is a pile and the value in each cell is the number of stones in that pile. In each turn, a player removes any non-zero number of stones from any one pile. Game ends when all the piles become empty. The player who is unable to make a move looses the game. Both of them play optimally. Alice starts the game. You have to tell who the winner will be.  Input  The first line of the input contains an integer T denoting the number of test cases.  Each of the next T lines contains two integers x and m.  Output Output T lines, one for each test case, containing ALICE if Alice wins the game, or BOB otherwise.  Constraints   1 ≤ T ≤ 10^5   0 ≤ x ≤ 10^18   0 ≤ m ≤ 10^18  Example Input: 2 1 1 1 2 Output: ALICE ALICE    Explanation Example case 1.  Alice will take away the one coin in the first move and thus Bob will not be able to make a move. 
  All of us must have played the game of jumping monkeys in our childhood. It was a simple game where one had to put a monkey on a tree using a catapult. The catapult threw the monkey into a specific height in the air such that it may landed on an artificial tree. This summer one of your cousin visited you during your vacation, with a newer version of the game. This time instead of a single tree the monkey had to be taken up gradually along different levels. The height of these levels could be adjusted manually. The one to take the monkey up first would win the game. One day while playing your mischievous cousin set the height of one of the platform higher than the height to which the catapult could actually throw the monkey. You were unaware of this fact and started playing the game but could never complete it as you got stuck on that level. The next day your cousin left for his place. You were still embarrassed by you stupid defeat and thus you decided to make a program that would tell you in advance if there was even the possibility of you completing the game or not.     Input  The first line of input would contain the number of test cases.T The next line would contain the height to which the catapult could throw the monkey(H) and the number of platform present in that case(N). This would then be followed by the height of various platforms, all separated by single space. The height of all the platforms would be randomly arranged.  Assume that you are always at height zero (0) in the beginning.     Output For each of the test case you have to tell if it would be possible for you to complete the game or not. If possible give output as ‘Yes’ and otherwise give ‘No’.    Constraints  1 ≤ T ≤ 1000 1 ≤ H,N ≤ 10000     Example Input: 2 3 7 10 12 15 4 7 1 3 4 9 12 15 2 14 21 18 4 25 7  Output: Yes No   
  Childhood is indeed the most amazing part of one’s life. One of the various memorable things that we did were the games that we played. Everyone has played Tic-Tac-Toe in their childhood (And most of continue to do so in all the boring lectures!). One other game that all of us must have played was the game of completing a pattern by joining the various dots without lifting the pen or overwriting a previously drawn line between two dots. This was indeed difficult than Tic-Tac-Toe but guess what, we engineers never liked to do the easy things. So once again, this game is here to try out your wit but as we all have evolved from our childhood, this game has evolved too!! And, fortunately somewhere while we were growing up, computers came in our life and they now stand besides us (or in front of us!) to help us tackle this evolved game. You would be provided with a set of points numbered 1 to n, which make up a pattern. Also, the pair of points between whom a line exist would be given. Now you have to develop a program which tells if it would be possible to complete this pattern, without lifting the pen and drawing a line between the given pair of points only once.    Input  The first line of the input contains an integer N denoting the number of test cases. The next line would contain the number of points in the pattern followed by the no of pairs between which lines exist(H). The next H lines will contain the pairs of point between which the lines exist in separate lines.The pair of points would be separated by single white space.      Output The output of the program must show if it is possible to make the pattern in the given constraints or not for each test case (N). If possible the program must show ‘Possible’ or in other case show ‘Not Possible’.    Constraints  1 ≤ N ≤ 100     Example Input: 3 7 8 1 2 2 3 3 4 4 2 2 5 5 6 6 2 2 7 5 8 1 2 2 3 3 4 4 5 5 1 1 4 2 5 2 4 4 6 1 2 2 3 3 4 4 1 1 3 2 4  Output: Possible Possible Not Possible   
  Our country has one of the largest networks of roads in the world. Buses offer an amazing way of commuting between different cities. We students love to travel by bus as they are convenient (and cheap too!!). The government has provided us with a great bus service. There are a number of buses running each day across different cities. An engineering student now wants to attend the International Conference on Advancement in Computing and Communication Engineering (ICACCE), which is being held in another city. When he reaches the bus station he finds a map containing the buses available between different cities. From the map he comes to know that some cities have a direct bus service between them while some of them don't (And there might be no direct bus servce available to his destination city). Now he has to travel to his destination city by changing buses between various cities. But there are some cities that do not have bus service towards his destination city. Then the poor student has no option but to hire a taxi towards his destination.   For example buses are available between cities A-B, B-C, D-E, E-F where F is the final city. Now to go  from A to F he can use buses A->B, B->C, then hiring a taxi between C->D, then again using buses D->E, E->F. Now he can attend ICACCE.    The program must check whether the student can travel only through bus(es) or through bus(es) and taxi(s) between the provided cities.  # Note that buses can go in either direction between cities so he can also travel from F to A.     Input  The first line of input consists of the number of test cases(T). The first line of each test case will contain the total number of cities(C). The second line consists of number of bus services(B) available between different cities followed by the number of queries(Q) in the same line separated by a single whitespace. The next B lines will contain names of two different cities between which there is an available bus service both separated by a whitespace. After that, Q lines will contain the name of two cities between which the student has to travel also separated by a single whitespace.   # Note that city names will be integers ranging from 1 to C    Output The output of each test case must contain one of the two possibilities i.e. "only bus" or "bus and taxi".     Constraints:   1 ≤ C ≤ 100 1 ≤ B,Q ≤ 100      Example Input: 2 5 3 4 1 2 2 3 4 5 1 5 4 2 5 4 3 5 7 5 3 1 2 3 4 4 6 5 7 2 4 1 6 5 6 3 1  Output: bus and taxi bus and taxi only bus bus and taxi only bus bus and taxi only bus   
 Young Matt and Jeff loved playing with numbers. One fine day, when Matt's little brother Paul, was at his math lesson with plastic number toys i.e. plastic toys in shape of digits 0 to 9, Matt and Jeff decided to play a game. Paul had left the plastic numbers arranged to form a number N. The rules of the game were as follows:  The first player has to rearrange the digits to form a larger number than the current number, after that the game will be played turn-wise. After the first turn, each player has to rearrange the digits so that it is smaller than the current number in that turn and greater than the original number N.  The player loses if he cannot arrange a number.   What number should the first player form, so that he always wins?  Input An integer T (1 ≤ T ≤ 100) denoting number of test cases followed by T lines each containing an  integer N, the number Paul has formed. The number of digit in N is D(1 ≤ D ≤ 100000).  Output  For each test case, output a number which first player should form so that he wins, in a separate line.If there is no winning strategy for first player, then output -1.  Example  Input: 3 17 81 123  Output: 71 -1 132 
 In a school in 'The land of Nowhere', students love to be the goalkeeper while playing soccer. Coach Randy has designed a method to pick a goal keeper among a givenset of students. He asks them to first stand in a line and assigns them numbers. So, the first in line is given 1, the second is given 2 and so on. Now, he asks them to form a circle. Then, he starts eliminating 'alternate' students starting from 2 (remember, its a circle; so this elimination would occur over and over) . This process continues until only one student is left, who then becomes the goalkeeper. He thinks this is a fair method, but can you do the math to beat his idea ?   Input Input consists of several input lines. First line has the number of test cases that follow, represented by 't'. Each of the following 't' lines have the total number of students 'n'.  1 < t < 1000000 0 < n < 10000000    Output For each input, output where should you stand to be selected as the goalkeeper.   Example  Input: 4 1 5 8 12  Output: 1 3 1 9  
 Problem Description An online quiz is going to be held at NIT Hamirpur. Each student will be given a system which is connected to internet. Although all the systems are connected to same network, there is still varying data transfer speed among them. This can cause pages to load slower on one system than the other. The organizers do not want a participant to have an advantage over others due to this. The organizers can't increase transfer speed on a system but they can cap it. Also they want to provide maximum speed to each system. 
 Problem Description Swapanti was born on the 9th of October, '95. Coincidentally, her best friend was also born on the same day. As a result, she has started liking 9's and 5's a lot. She tries to include it in everything she does. Her email-id has those 2 numbers. Even all the digits of her mobile number are either 9 of 5. She gets her roll number changed if the digits are anything other than 9 and 5. Clearly, she is obsessed with 9's and 5's. Given any number N, she wants to find her next smallest favourite number M greater than N. She is also a bit lazy. Help her in finding M.   Input First line of the input will consist of T, the number of test cases. Each of the next T lines contains a single number N.   Output For each test case print Swapanti's next favourite number M, in a new line.  Constraints  1 ≤ T ≤ 1000 1 ≤ N ≤ 10^99   Example Input: 4 8 58 240 69  Output: 9 59 555 95 
 Problem description In the climax of an upcoming Bollywood movie "BHAI HO!", Bhai is standing at the centre of a large battlefield. Bhai is sorrounded by the army of Bacchha Singh from all sides. Each soldier of Bacchha's army is at some distance from Bhai. They all are heading towards Bhai with swords in their hands. At the centre, Bhai has a gun with unlimited Bullets. And you know, Bhai never misses a shot!. But a hurdle to Bhai is that he has to reload the gun after he has fired 6 bullets.  Bhai is killing soldiers at one soldier per second. By this time, every other soldier moves a step towards Bhai. Also, the reloading of the gun takes one second.  Now, you have to tell whether Bhai will be able to survive or not. And if Bhai fails in killing them all, tell the Number of soldiers killed by Bhai before falling.   Input The first line of input contains an integer T, denoting the number of test cases. T test cases follow. In each test case, the first line contains an integer N, denoting the number of soldiers. In the next line, there are N integers representing the distance of each soldier from Bhai.   Output For each test case Print the result as: If Bhai survives: Bhai Ho! if Bhai fails: Killed M Here M is the number of soldiers Bhai killed before dying.   Constraints   1 <= T <=100 1 <= N <=50000 1 <= D[i] <= 50000  Example Input: 2 5 3 4 3 7 9 5 3 3 3 3 3  Output: Bhai Ho! Killed 3    
 Problem description N number of Postage Stamps are available in a newly opened Shop. Different Stamps have different ID's (1,2,3, ...) to distinguish one from other. Collecting Stamps is Ashish's hobby. One day his friend, Devesh, told him about the collection in that Shop. They both went to the Shop to purchase stamps. A philately competition was going on. Being too much excited, Ashish wanted to take part in the competition. Pardyot, another Stamp lover, is his competitor. The competition is such that: The Shopkeeper will give them range [a,b] , they have to find out the cost of the Stamps from a to b. The one who answers it earliest will win. Now, the cost depends upon the ID's of the Stamps. Cost is the Summation of ID number multiplied by the square of the occurence of that ID number in a given range. Pardyot is too good at Mathematics. Ashish wants your help to calculate it.   Input First line contains Integer N- number of Postage Stamps. Next line contains N integers denoting ID's of the Stamps. Next line contains Q - number of queries. Next Q lines contains two Integes a and b – starting and ending index.   Constraints  1<=N,Q<=200000 1<=ID<=1000000 1<=a<=b<=N    Output In Q lines, output the cost of the Stamps for a given range.   Example Input: 8 1 1 2 2 1 3 1 1 2 2 7 1 6  Output: 20 20  Explanation: For query 1: 2 7 occurrence of 1- 3 occurrence of 2- 2 occurrence of 3- 1 cost=3*3*1 + 2*2*2 + 1*1*3= 20 
Aniket Verma aka Math Bond flaunts his mathematics skill whenever he gets the opportunity. But this time he gets into trouble when he meets Sakshi, another mathematician. Sakshi gave him a problem and asked him to solve. Help Aniket to solve the problem.  Given a number N, find the sum of all products x*y such that N/x = y (Integer Division).  Input The first line of input file contains an integer T, the number of test cases. Each of the next T lines contain an integer N.  Output Output T lines containing answer to corresponding test case. Since the sum can be very large, you have to output this modulo 1000000007.  Constraints 1 ≤ T ≤ 500  1 ≤ N ≤ 10^9  Example Input: 3 2 3 5  Output: 4 8 21  
Prof. R.K.Vats of NIT Hamirpur has given a problem to the whole class and has imposed a condition that he won't give attendance to those who don't solve it within time. He gave the equation , ax+by=c where a, b, c are three positive integers. The problem is to determine if there exists at least one solution for some integral value of x and y where x, y can be negative or non-negative integers.  Input Input starts with an integer T denoting the number of test cases. Each test case contains three integers a, b, and c.  Output For each test case of input print the case number and Yes if there exists at least one solution, print No otherwise.  Constraints 1<=T<=10^5  1<=a, b, c<=10^6  Example Input: 2 2 4 8 3 6 7  Output: Case 1: Yes Case 2: No  Explanation Example case 1.The equation is 2x+4y=8 and hence for xy 
Santosh does yoga every morning and that is the secret behind his concentration level. But one fine day his friend Kishore gave him a problem to solve. He gave Santosh a number N. This represented a table of N rows. The first row contains number from 1 to N. Then the next line contains N-1 numbers. In the second row, the first number is the summation of the first two numbers of the previous row, the second number is the summation of the second two numbers of the previous row and so on. Row 3 is having N-2 numbers with same procedures. Same procedure follows for row 4, row 5, ... , row N. On the last row, there is only a single number. Santosh has to tell the number in the Nth row. For example: If N = 3, then the table is: 1 2 3  3 5   8 So Santosh has to answer the last remaining number 8. He is very comfortable answering the problem when N is small but faces difficulty when N becomes large. Can you help him?  Input The first line contains the number of testcases T. Each of the test cases contain a number N .  Output You have to output the case number and the required answer. As the number can be very large, output the answer modulo 1000000007.  Constraints 1<=T<=100000  1<=N<=100000  Example Input: 2 1 2  Output: Case 1: 1 Case 2: 3 
Today is the Annual Sports meet in NIT Hamirpur and all the students have come to see the much awaited 4X400m race. The athletes are lined up in a row from 1 to N, and each one having a chest number, Ai equal to their height. Coach Jamalta is very keen about knowing the order in which the athletes are standing and he has the power to remove anyone he wants from that line. Before the race starts he will give Q commands to the best sportsperson Prakash Chaudhary and Prakash has to obey him. The commands can be either of the following:  1. Replace the ith athlete in the line with a new athlete of height X. This will be represented in the input as a line containing the number 1 followed by the space-separated numbers i and X.  2. Count how many athletes in the range [P, Q] have Ai height <=X. This will be represented in the input as a line containing the number 2 followed by the space-separated numbers P, Q  and X.  Of course, no one can beat Prakash in any sports, but he is not so good in studies and would definitely need your help.  Input The first line gives the integers N and Q, and the next N lines give the initial values of Ai. Finally the next Q lines each contain a query of the form  1 i X or 2 P Q X.  Output Print the answer to each 2 query, one per line.  Constraints 1 ≤ Ai ≤ 1,000,000,000  1 ≤ X ≤ 1,000,000,000  1 ≤ N ≤ 1,00,000  1 ≤ P ≤ Q ≤ N   Example Input: 4 6 3 4 1 7 2 2 4 4 1 4 1 2 2 4 4 2 1 4 5 1 2 10 2 1 3 9   Output: 2 3 4 2  Explanation There are 4 athletes, whose initial numbers are 3, 4, 1, and 7. Jamalta sir then gave Prakash 6 commands; the first asks him to count the how many of the last three athletes have height at most 4, the second asks him to replace the fourth athlete with the one having height 1 unit, etc. 
  Problem description.   Help!! Goku is facing a VERY HARD problem!! Goku is finally back after his long training schedule. To make his kids- Gohan and Goten happy, he brought a big chocolate, weighing ‘W’ kilos. On arrival he came to know that while he was away, Gohan and Goten developed a new love for even numbers. So Goku decides to divide the chocolate into two parts such that each of the parts weighs even number of Kgs. Since he is obviously weak at calculations, he comes to you for help. You need to tell if the chocolate can be divided in the way he wants.   Input  First line contains ‘T’- Number of test cases. T lines follow. Each line consists a single integer ‘W’- the weight of chocolate brought by Goku.   Output Print “YES”, if Goku can divide the Chocolate into two parts, each of them weighing even number of kilos; and “NO” in the opposite case.  Constraints  1 ≤ T ≤ 1000 2 ≤ W ≤ 10^6     Example Input: 5 8 10 9 29 11  Output: YES YES NO NO NO    
 Problem description.  Once, The CSE department of ISM Dhanbad organizes a workshop on Competitive Programming. Guess what who is the guest of honor, Petr Mitrichev himself. On that occasion he gives a nice glimpse of how he started coding and got into Google. After he is done with his presentation, he asks the students to solve an Arithmetico-Geometric Series to check their skills. The A.G.P is as follows:      Since, the answer could be very large. So, you need to print the actual  answer mod 215372682525.   Note: Submissions are only allowed in C, C++ and Java.  Input First line contains a single integer T denoting the number of Test Cases. Then T lines follow. Each of the next T lines contain 4 space separated integers a d n x  Output Output the desired result as stated in the problem statement. Result of each test case must be presented in a new line.  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 100 0 ≤ a ≤ 100000 0 ≤ d ≤ 100000 0 ≤ n ≤ 100000 0 ≤ x ≤ 100000     Example Input: 2 0 2 3 4 1 2 3 5  Output: 54 232   
Well ism to iit conversion was not at all an easy task and many college students had given huge amount of time and energy in it. Well once Shashank Sir and Varun Sir were going to Delhi for one of their regular meetings with the politicians. Since the journey was long and varun sir being a batman fanatic, always imagined a self made story for batman. So he told shashank sir (the amazon guy) the story and asked him to how bane will solve that problem in his imaginative story. The story is as follows. The city of gotham was constructed keeping in mind that all the colonies in it are well connected. However, over the time as the city administration changed, more and more corrupt officals came into the administration and road maintenance was neglected and  done only in a way such that all the colonies remain connected and the sum of all the maintenance costs of these roads is minimum (all roads are of equal length but maintenance costs are different). Eg ==> if the city has 4 colonies which are connected by the maintained paths and 1 ,2 , 3 and 4 are these colonies ; then there are in total 6 paths that exist. (1-2 , 1-3 , 1-4 , 2-3 , 2-4 , 3-4) , where 1-2 denotes the path between 1 and 2. Now Bane is planning to attack the city. But he has very less number of soldiers. Therefore, he needs to find out the decreasing order of busy-ness of all the colonies. Busy-ness of a node is defined as the number of paths in which it is an intermediate colony ( not a start or end node).  You can assume that only maintained paths exist. Now given the initial map of the city (when the city was constructed , that is , with all the roads present). Find the output as given in the statement. Since shashank sir got busy with his Amazon telephonic interview therefore he asked you to solve the problem. INPUT N = number of colonies of gotham. R = number of roads that were initially constructed. The first line of input consists of number N and R . Next line consists of R triplets each i , j , k denoting that a road exists (or rather existed) between colonies i and j, and k being the maintenance cost of the roads. OUTPUT Output the decreasing order of the busy-ness of the colonies , one in each line. if two colonies have same busy-ness than output the smaller number colony first. CONSTRAINTS 1 <= N <= 2*10^5 1 <= R <= 10^7 1 <= i , j <= N WARNING :- LARGE TEST DATA . USE FASTER INPUT / OUTPUT METHODS . EG - scanf() , printf() FOR C , C++ EXAMPLE INPUT 4 5 1 2 10 2 3 15 1 3 5 4 2 2 4 3 40 OUTPUT 1 2 3 4 
 Problem description.  It is the occasion of Annual Sports Day of ISM Dhanbad. Everybody has come to watch this spectacular event. The Event is going to start with a Marchpast. Since, the event has already been delayed by an hour, the students participating in the Marchpast line up randomly to save time.  Now, the instructor got confused on how to arrange them properly in a short period of time. Therefore, he comes up with an idea that: He will remove the minimum number of students from the line such that he will end up with a line that has the students standing in monotonically increasing order according to their height.  To solve this tedious task he asks you to come up with an optimal solution. Since there is no time for excuses.   Input  First line contains single integer N, number of students. Next N lines, contain single integer denoting the height of the i^th student.   Ouput  Single Integer Output as explained in the Problem Statement.   Constraints   1 ≤ N ≤ 1,000,000 0 ≤ A[i] ≤ 1,000,000,000    Sample Input:  6 1 0 3 5 2 7   Sample Output:  2   Explanation:  {1, 0, 3, 5, 2, 7} if we remove {0, 2} we will get the desired output i.e. {1, 3, 5, 7} in which the students are in monotonically increasing order.  
  The ism to iit team when visited the college for inspection were sort of in a haste because they had already planned not to give it the premier status. However the leader of the movement Varun Pandey Sir were already ready that such things might be there in their minds. So, to make the inspection procedure really fast and smooth he made a list of all the laboratories of the department. He had asked some of his juniors to compile this list department wise. But the juniors were really lazy (matiyao types) and thus they inturn distributed the work. Now in the end the final list that Varun Sir has is a lot of strings which consists of department names. Each string represents one laboratory. Refer to example for the output.    Input The first line of input contains the number of strings n the next n lines each contains a string of length 100 max and consists of only lower case alphabets. 1 <= n <= 500 7 cse mnc cse ele cse zzza physics  Output  cse 3 ele 1 mnc 1 physics 1 zzza 1  Explanation The output contains strings sorted lexicographically and the number in front of them indicates the number of times they occured in the input. 
   The theme of the problem statement should not be taken seriously.   The CSE Society(CSES) and ACM Student Chapter have done a commendable job in improving the Coding Culture among the students of ISM by organizing various programming contests. However, both of these societies compete to show that one of them is better than the other. Still there is no clear winner. This time CodeISM has been asked to break the tie and tell which Society is better. Since CodeISM consists students passionate about Competitive Coding, they provide an innovative solution to break the tie. They ask both of them to answer the following queries on an array of numbers  A x y - Replaces the element at position x with the value y  B x y - Inverts alternate numbers between x and y(including both), starting from x.  Here inverts means that the number is replaced by bitwise not of itself  C x - Prints the value of stored at position x  D x y - Prints the bitwise xor of all the elements between x and y(including both)  The winner ACM wants to win this one, the ACM chair has asked you to make a program to do so. Please help him win.  Input The first line input contains the number elements in the array N. the next line contain N elements A[1]....A[N]. Each of the array element will fit in the unsigned 64 bit integer. The next line gives the number of queries Q. Then Q lines follow, having any of the four queries mentioned above.  NOTE: All the indices will 1-based  Output Output the corresponding answer for the queries of type C and D . The answer will fit in unsigned 64 - bit integer.  Constraints  1 ≤ N ≤ 100000 1 ≤ Q ≤ 100000 1 ≤ x ≤ y ≤ N for all the queries involving indices of the array     Example Input: 5 1 2 3 4 5 5 A 1 2 C 1 B 3 4 D 1 5 D 3 5   Output: 2 18446744073709551613 18446744073709551613    Explanation Example case 1. A 1 2 replaces A[1] with value 2 hence now the array is 2 2 3 4 5. C 1 gives the value at position 1 i.e. A[1] which is 2. B 3 4 replaces 3 with ~3 (See that 4 is not inverted as only alternate elements need to be inverted). D 1 5 and D 3 5 gives the  required Xor. 
 Problem statement Gopal is standing at the bottom of a longest stair in UVCE. And surprisingly steps are numbered sequentially form 1 to infinity. The bottommost step has number 1, the next step has number 2, and so on. Gopal is now standing at bottom of the stairs, will now perform exactly N consecutive actions. When performing i^th action , Gopal chooses between two options: either he does nothing, or he jumps exactly i steps up the stairs. The steps are very old and Gopal know that the B^th step is broken, he cannot jump onto this step. You are given N, number of actions performed by Gopal and B, number or index of broken step. Your task is to find the number or index of the topmost step that can be reached by Gopal.  INPUT  First line contains T, number of test cases. Each test case contains two space separated integers N and B.   OUTPUT  For each test case output the maximum number or index of step, that can be reached by Gopal in N actions.   CONSTRAINTS  1 ≤ T ≤ 1000 0 ≤ N ≤ 2000 0 ≤ B ≤ 400000   EXAMPLE Input  4 2 2 2 1 3 3 1313 5858  Output  3 2 5 862641  
 Problem statement  	Gopal is running in the 400m track, which is oval in shape and first 100 (0-99)meter is straight, next 100(100-199) meter is curved in a semicircular form, next 100(200-299) meter is again a straight and next 100(300-399) meter is curved and reaches the start point. Now Gopal starts running from the start point with 1 meter/second speed at time T1.   	Now his coach comes to the track at time T2. You have to determine whether Gopal is running is a straight track or in curved track, when his coach visits the track.   INPUT  First line of the input contains the T, number of testcases. Each test case contains two lines. First line contains 3 space seperated integers HT1, MT1, ST1, representing hour, minute and second of T1 respectively. Second line contains same information as in previous line, HT2, MT2, ST2 about T2.   OUTPUT  For each testcase output "S" (without quotes) if Gopal is running in a straight line, otherwise output "C" (without quotes), when his coach visits.    CONSTRAINTS  1 ≤ T ≤ 10000 0 ≤ MT1,MT1,ST1,ST2 ≤ 59 0 ≤ HT1,HT2 ≤ 23   EXAMPLE Input  2 10 0 0 10 2 0 11 25 0 11 26 30  Output  C S  
  Arya Stark, daughter of Ned Stark has decided to take vengeance of her father's death. She considers Cersei Lannister as her prime enemy. Because of the large army serving under Cersei Lannister, Arya cannot challenge her directly in a war. So she has finally decided to challenge Cersei in a game of mathematics. Since Arya never got a chance during her stay in Winterfell to study Mathematics, she has also decided to rely on you to help her put in this part.   In a game a random number N is chosen. Arya and Cersei will play the game alternatively and each of them would subtract a number(n) [n is less than N] such that N modulo n gives zero. The game is repeated turn by turn until the one , who now cannot make a further move looses the game.   Your role is to tell Arya if she can win this case or not. If Arya wins that game then print "Valar Morghulis" otherwise print "Lannisters always pays their debts". The game begins with Arya playing first move. It is well understood that both of them will make moves in optimal way.     Input Input contains test cases t (< 10^5) and followed by t numbers (1 <= N <= 10^6 ).  Output If Arya wins that game then print "Valar Morghulis" otherwise print "Lannisters always pays their debts".  Example Input: 2 212 424  Output: Valar Morghulis Valar Morghulis   
 The survivors of the ranging beyond the Wall have decided to patrol castle Black every night. With death marching on the Wall as winter draws near each patrol group has agreed it will patrol particular passages of the castle. They will patrol all passages that will enable them to begin at a particular point of the castle and return to it after their patrol. Each patrol group will patrol each passage only once. The men of castle black will patrol all such possible patrol paths. The castle can be thought to be of made junctions and passages. Junctions are places where 2 or more passages meet. However there is one problem. The men want their patrol passages to be lit with weirwood - a very special kind of wood that keeps away the dead. The amount of weirwood required to light each passage depends on the passage. They have decided to light at least one passage of their patrol with weirwood, for the night is dark and full of terrors. You are Samwell Tarly, a steward of the Night's Watch and since weirwood is a rare thing Maester Aemon has asked you to calculate the least amount of weirwood required per night given the Castle Black's description.   Input  First line of the input contains T - the number of test cases. There is a blank line at the beginning of each test case. First line of each test case consists of 2 numbers N M  N - number of junctions. Each junction for simplicity is given a number between 1 and N inclusive. M - number of passages.  M lines follow each describing a passage. Each line consists of 3 numbers X Y Z X and Y are the junctions the passage connects and Z is the number of logs of weirwood required to light the passage for one night.  Output  The minimum logs of weirwood required per night to make sure the patrols feel safe. Answer to each test case must be on a line of its own.   Constraints 1 <= T <= 10 3 <= N <= 1000 3 <= M <= 400000 1 <= X, Y <= N 1 <= Z <= 10000  Warning Large I/O. Use fast I/O routines.  Example Input: 1  6 7 1 2 8 2 4 5 4 6 7 6 5 2 5 3 3 3 4 1 1 3 4  Output: 3  Explanation  Here there are 3 patrol paths: (1-2, 2-4, 4-3, 3-1) (3-4, 4-6, 6-5, 5-3) (1-3, 3-5, 5-6, 6-4, 4-2, 2-1) Passages (3 4) and (6 5) need to be light up so that the patrol units feel safe during their patrols of the castle.  
Tyrion Lannister has planned a suitable reward for Podrick Payne his squire for saving his life in the battle of Blackwater Bay. He intends for Pod to have a good time in one of Petyr Baelish's several establishments in Kings Landing.  The establishment has several pleasures each with a pleasure value Pi. Each pleasure also has a fee of Ci. At the end of the day Tyrion wants Pod to have experienced at least P amount of pleasure in the most cheapest way. You are Bronn a low born sell-sword of great skill and cunning, so Tyrion has asked you to figure out the minimum amount of money Pod should end up with and the maximum amount of pleasure he can have with it. It is guaranteed that Pod can enjoy at least P amount of pleasure in the establishment.  Input First line of the input contains T (1 <= T <= 25), the number of test cases First line of each test case consists of 2 numbers N, P.N is the number of pleasures in the establishment. N lines follow each with a description of a pleasure. The descriptions are of the form Ni Pi Ci Ni - Pleasure's name (a sequence of characters) Pi - Pleasure value of Ni Ci - Fee charged for Ni There is a blank line at the beginning of each test case.  Output For each test case you must output 2 numbers M and L. M - minimum amount of money that is needed to have a pleasure of at least P. L - Maximum pleasure Pod can have with the money M. (L ≥ P)  Constraints  1 <= T  <= 25 1 <= N  <= 100 1 <= Pi <= 50 0 <= Ci <= 50 1 <= P <= 5000 1 <= |Ni| <= 25 (Each Ni has at most 25 characters which can be either uppercase or lowercase). Each Ni is distinct.    Example Input 2  4 12 Alayaya 5 10 Chataya 7 20 Dancy 5 5 Petyr 50 50  2 15 Marei 15 15 Jayde 16 5  Output 25 12 5 16 
  Khefu is a highschool student from India. She adores maths. In maths, her favorite topic is number theory. Today, she is playing with the GCD function.  What she is doing is just randomly picking up a pair of integers (x,y) and computing their GCD. She noticed that many times the  GCD(x,y)  is 1. Khefu is quite intrigued by these pairs and wanted to count them.  Given a upper-bound N, help khefu to count the number of pair of integers  (x,y)  such that  0 ≤ x,y < N  and  GCD(x,y) = 1  .  Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.The first and the only line of each test case contains a single integer denoting the upper-bound N as described in the problem statement.    Output For each test case, output a single line containing the value of the required count.    Constraints  1 ≤ T ≤ 10000 1 ≤ N ≤ 10000000     Example Input: 1 3  Output: 5    Explanation For the upper bound N = 3. we have exactly 5 pairs for which the GCD is 1: (0,1),(1,0), (1,1),(1,2),(2,1) 
Problem Description: A pyramid has been constructed using bricks. All these bricks are made of gold. However the quality of gold varies from brick to brick. The value of the bricks has been marked equivalent to nCr. Where n is the nth row of the pyramid from the top, and r is the number of the brick in that row (Both n and r start from 0). One day an invader comes and takes away all the outermost bricks of the pyramid. This disrupts the outermost shield and now some weird things happen. 1. All the rows in which the outermost golden bricks(after the invasion) have value which is not a prime number, magically disappear. 2. The value of the outermost brick can neither be a prime number nor a composite number. So now, the value of the bricks in each row gets magically divided by the value of the outermost brick. Find out the total amount magically lost.  Input:  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of Bricks.    Output:  For each test case, print the net amount that gets magically lost.   Constraints: 30 Points : 1 ≤ T ≤ 30 1 ≤ N ≤ 125  70 Points : 1 ≤ T ≤ 50 1 ≤ N ≤ 500    Example: Sample Input: 2 10 21  Sample Output: 5 43  
Gray codes were invented to prevent spurious output from electromagnetic switches. Consider the number 3 in ordinary binary encoding: when incremented from 011 to 100 it is unlikely that all of the switches will change states at the same time, so there is a possibility of reading the state of the variable while it is in between a transition (i.e., when some of the bits have flipped to the correct value but others haven't). To solve this problem, Frank Gray introduced a new number system in which successive numbers differ by only a single bit. You are working on a legacy system that uses Gray codes, but are having difficulty fixing a bug related to multiplication of numbers. For the purpose of debugging, you wish to convert a number's Gray encoding into the corresponding decimal representation.  Input Format The first line of input contains a single integer t, the number of test cases. This is followed by t lines, each containing a single integer, which is the result of converting the gray encoding directly to decimal. (For example, the gray encoding 100 which corresponds to 7 will be displayed as 4.)  Output Format For each test case, output a single integer that is the decimal equivalent of the gray encoding.  Example Input: 8 0 1 2 3 4 5 6 7   Output: 0 1 3 2 7 6 4 5  
         You are given a grid of size M x N, where each square is colored with some random color among K colors with each having equal probability.       A Good Rectangle is defined as one where all squares lying on the inner border are of the same color.       What is the expected number of Good Rectangles in the given grid.     Input      First Line contains M, N, K   Output A single value rounded off to the nearest Integer corresponding to the required answer.   Constraints  1 <= N <= 10^5  1 <= M <= 10^5  1 <= K <= 10^5    Example Input: 1 3 1 Output: 6   
 The Government of Greedistan has just found out that there is a lot of gold beneath some land area in their country. They quickly surveyed the land area and found that some people are living there, and surprisingly the houses are organized in a M x N grid, each cell having exactly one house. To acquire all the gold beneath this area, the government has planned to make up a rumor ( a volcano is about to erupt near by ) and let the people vacate their houses themselves. They start the rumor at only one house on day 1. It takes exactly one day for the rumor to spread from a house to any of its neighbors ( top, left, bottom, right ). They all vacate their houses as soon as they know about the volcano.  The government wants to choose the starting house for the rumor in such a way that it takes minimum number of days for all the people to vacate their houses. Find this minimum time.  Input The first line contains T, the number of test cases. Each of the next T lines contain two integers M and N. If one of M or N is zero, other one will also be zero, and this means, there are no houses at all.  T ≤ 1,000 0 ≤ M ≤ 1,000,000 0 ≤ N ≤ 1,000,000   Output  The minimum number of days it takes to spread the rumor to all houses.   Example  Input: 2 1 5 3 4  Output: 3 4  Explanation: Case 1 : Starting cell (1,3) Case 2 : See the following table with a possible answer, each cell has the first day in which they hear the rumor.   3234  2123  3234  
Raina was practicing Matrices and Determinants before his exam. He came across a question which required him to find out the number of adjacent squares for each of the squares in a grid and then sum them up. Raina tried to solve the problem but couldn’t come up with a solution. He asked his friend Sir Jadeja, who is a mathematics wizard to help him out. But even Sir Jadeja couldn’t arrive at a solution. Now Raina has turned to you for a solution. Can you help him out?  Input The first line contains a single integer T , the number of test cases. T test cases follow. The only line of each test case contains 2 integers N and M where N and M denote the number of rows and columns respectively in the grid.  Output For each test case, output a single line containing the sum of the number of adjacent squares for each square.  Constraints  1 ≤ T ≤ 100000 1 ≤ N,M ≤ 10000   Example Input: 2 2 2 3 2   Output: 12 22  
Presti Digitator, the world-famous magician, is highly dissatisfied with his way of shuffling cards. Just yesterday, a perky guy in the audience demanded that he shuffle the cards once again, and he was aghast to see that the bottom card had not changed. Even though Mr. Digitator pacified the crowd with a few excellent tricks, the whole experience left him sad. He thinks that his shuffling leaves too many cards unchanged. He has decided to return to the drawing board, and retrain himself. He thinks that a "good" shuffle should leave no card in its old position. Assume that cards are numbered sequentially starting from 1. For example, if there are 4 cards initially arranged in the order 1,2,3,4, a shuffle of 2,3,4,1 would be considered good, while 3,2,1,4 would be bad since 2 and 4 are unchanged in the shuffled order. Digitator wonders whether good shuffles are rare - he would like to know, how many good shuffles of a given deck of cards there are.  Input For this question, you are given a series of numbers on distinct lines. The first line contains a number (let’s call it n) denotes how many decks there are to shuffle. This is followed by n lines, each containing a positive number less than or equal to 20. Each such number denotes the number of cards in that deck.  Output The output should have several lines. The i-th line is the number of good shuffles for the number of cards described in the i-th line. The output will fit inside a 64-bit integer.  Example  Input: 2 2 4  Output: 1 9  
 Tarun and Varun are learning game theory. Today they came up with a new game.  The rules are as follows:  Initially they have a string consisting of lowercase english alphabets only. Each of them take turn. In each turn, a player removes some alphabets from the string (at least one). But the condition is all the alphabets removed must be same (see explanation of the test cases). The player who is unable to make a move loses.   You are given the string and the player who makes the first move. You have to print the name of the winner.  Input  The first line of the input will contain a single integer T, the number of test cases. Each of next T lines will contain two strings separated by a space. First is the name of the player who starts the game (“Tarun” or “Varun” without quotes ), second is the input string with which the game is to be played.   Output  Print “Tarun”, if Tarun wins, else print “Varun” without the quotes.   Constraints 1 <= T <= 100  Input string will contain lower case alphabets only. Length of input string will not exceed 100.  Sample Cases Input 3 Tarun aaa Varun ababa Tarun abacd Output Tarun Varun Tarun  Explanation  Tarun can remove all three 'a' and win. Varun can remove a single 'a' in his turn. Tarun will be left with two 'b' and two 'a'. If he removes both 'b' Varun can remove both 'a' and win, else if he removes a single 'a', Varun will be left with 'a', 'b' and 'b'. Varun can remove a single 'b', then Tarun will be left with 'a' and 'b'. Whatever he removes, Varun will remove the last letter and win.  Note: Remember neither of them can remove letters like {'a','a','b'}, {'a','b','a','b'} etc as the condition says all the letters removed must be same. 
Once upon a time there was a King who was really paranoid about the safety of his grand palace. The map of the palace can be described by a matrix with N rows and M columns. Each cell of the matrix encodes either a wall, or free space, where trophies, jewellery and precious fur can be stored. During the last replanning of the palace, it was divided into a number of rooms, each of which has a rectangular shape on the palace map and is separated from other rooms via walls. There is also a big outer wall surrounding the whole palace which is not indicated on the map. The King is, however, still not satisfied with the safety of his palace. In order to make it even more safe, he plans to place guards at some of the free spaces in the palace. The palace guards' armour affords them a very peculiar field of vision. A guard can see only what happens at the cells that are reachable from his position via either one move of a chess knight, or one move of a chess queen. Moreover, a guard can't see what happens in other rooms. Even if a particular cell is reachable from a guard's position, but is placed in another room, the guard can't see it. The guards are instructed to attack anyone they see immediately; so if two guards see each other, they will collapse. That's why it is forbidden to place two guards in such a way that one can see the other. The King wants to place as much guards as possible to protect his assets. Please found this maximal number and find any correct placement of guards in the palace so that no guard sees another one.  Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains two integers N and M denoting the number of rows and the number of columns in the palace map. The following N lines contain M characters each, each of which will be either denoting a wall (character "#") or a free space (character ".").  Output For each test case output the maximal number of guards on the first line. On the following N lines, output the map of the palace in the same format as the input, but with the character G in the cells where the guards should be placed.  Constraints  1 ≤ T ≤ 100 1 ≤ N, M ≤ 100   Example Input: 2 4 2 .. .. .. .. 4 4 .... .... #### ....   Output: 2 G. .. .. .G 3 G... ...G #### ..G.   Note In the second example, the bottommost guard is reachable from the one that stands in the second row with one chess knight move. But since they are in different rooms, it is okay to place them this way. 
Alice and Bob, both have to drink water. But they both don't want to go, so they will play a game to decide who will fetch water for both of them. Alice will choose a number randomly between 1 and N (both inclusive) and Bob will choose a number randomly between 1 and M (both inclusive). Both will write their numbers on a slip of paper. If sum of numbers choosen by both is odd, then Alice will go, else Bob will go. What is probability that Alice will go?   Input First line contains, T, the number of testcases. Each testcase consists of N and M in one line, separated by a space.  Output For each test case, output a single line containing probability as an irreducible fraction.  Constraints  1 ≤ T ≤ 10^5 1 ≤ N,M ≤ 10^9   Example Input: 3 1 1 1 2 2 3 Output: 0/1 1/2 1/2  Explanation #test1: The only way is when Alice and Bob both choose 1. So, Alice won't have to go because sum is even. #test2: The different ways are (1,1) and (1,2), where first term denotes the number choosen by Alice. So of all possible cases (ie. 2) in only 1 case Alice has to go. Therefore, probability is 1/2. #test3: The different ways are (1,1), (1,2), (1,3), (2,1), (2,2), (2,3) where first term denotes the number choosen by Alice. So of all possible cases (ie. 6) in only 3 cases Alice has to go. Therefore, probability is 1/2. 
  WBUT has a unique grading style:   Grade    Marks O  ------  91-100 E  ------ 81-90 A  ------  71-80 B  ------  61-70 C  ------   51-60 D  ------  41-50 F  ------   0-40   Now in a class there are n students and the state of a class can be defined by the grades of its students. Like {G1, G2, G3, ……… Gn} where Gi can have values from the set {O,E,A,B,C,D,F} and 1<=i<=n . And then we write its as a string - > G1G2G3……Gn  Given the number of students in a class, give the number of possible state-strings of that class.  Input  First line of input contains an integer t denoting the number of test cases. The next t lines contain an integer n denoting the number of students in a class.     Output  For each test case, print the answer in mod (10^ 9 +7).     Constraints   1<=t<=10 ^ 5  1<=n<=10^ 6 ^    Example Input:  3 1 232 323 Output:  7 870252122 906132815   Explanation CASE 1: The possible state-strings can be : A , B , C , D , E , F , O  
Chef Polo has recently been observing the structure of Tower of Hanoi. So he decides to build his own tower and names it as Tower of HanoiCake. He decides to build it using circular pancakes. To build his tower he has to arrange them vertically, one upon another. He knows that if he places a pancake of radius r1 above pancake of radius r2 such that r1 ≥ r2, the whole tower will shake and pancake with radius r1 will fall on the floor and hence get wasted. Since Chef Polo is wise, he selects the pancakes in such a way that no pancake falls on the floor. His assistants have baked all the pancakes for him already,labelled them with their radius and have arranged them in a row. He starts his selection of pancakes in same order as they are placed in the row.He has only one chance to select each pancake. If he selects a pancake, he places it on the top of his tower else he moves on to the next one. You are required to find the maximum height of the tower which he can build.    Input The first line contains the number of test cases T. First line of each test case contains n (number of pancakes in the row) Next line contains array R of n integers denoting the radii of pancakes. .  Output For each test case, output a single line containing the maximum height of the tower he can build.  Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 10^5 1 ≤ R[1...n] ≤ 10^9   Sample Input: 2 5 8 7 2 3 4 8 2 9 4 6 5 2 2 1  Sample Output: 3 5 
  Problem description. Some people have the habit of replying hmmmmmm in chat which is very irritating. Panda's enemy Tai sent a message which consists only of lowercase English characters. Panda makes one jump from his seat when sees a substrings of type hm, hmm, hmmm, hmmmm etc.  Print the number of jumps Panda makes.  Input Input description.  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case contains a single string which is the input message   Output Output description.  For each test case, output a single line containing the number of jumps Panda will make.     Constraints  1 <= T <= 50 1 <= Length of String <= 50     Example Input: 2 hmmhm mmhhmhm  Output: 3 2    Explanation Example case 1 : The strings are hm,hmm,and hm again Example case 2 : The strings are hm and hm 
  The Agrawals have a habit of having repeated characters consecutively in their surnames. For example, you can find various people with surnames Aggrawal, Agrrawal, Agrawaal, etc. Mr. Abhishek Agrawal is given some strings. He tries to make the strings resemble his surname and likes it when strings have characters that repeat more than once consecutively.  More formally, given a string S of length N. He can choose a set T(possibly empty) containing indices of the string S. An index i can belong to the set T if character at the i^th index is not equal to all of its adjacent characters. Help Mr. Agrawal to find the total number of such distinct sets possible.   Input  First line of the input contains T denoting number of test cases. Each test case has exactly one line consisting of the input string S.   Output For each test case, output the answer in a separate line.  Constraints  1 ≤ T ≤ 1000 1 ≤ N ≤ 50 S consists of lowercase english alphabets     Example Input:  4 xy aaa xxyx a  Output:  4 1 4 2    Explanation  We will consider a 0-based indexed string here. Example case 1: He can choose various sets of indices including {0, 1} , {0}, {1}, {} since each position i in the set does not have they same neighboring character as itself. In total, we can form 4 distinct sets. Example case 2: He can not choose any set besides the {} (empty) set. Each index i has the same neighboring character as itself. Hence, it is not possible to include any of the index in any of the set. Hence, answer is 1.  
Three friends were going on a trip to Thailand. During their journey in flight, they were reading about a special type of function called Panda function. Panda function P(X) of a number X gives the count of positive integers less than than equal to X which divide it. Now, the air hostess saw what they were doing and decided to pose a problem to them.  She gives them two square free positive integers n and k, and she asks them to  compute  Since, the three friends are always greedy for speed, they sought out your help. You are required to give the answer to the question and help them impress the air hostess.   Input  The first line of the input contains an integer T denoting the number of test cases. The first line of each test case contains two space separated  integers n and  k    Output  For each test case, output a single line containing the answer modulo 10^9 + 7.     Constraints   1 ≤ T ≤ 130 1 ≤ n,k ≤ 10^17     Example Input: 1 2 2  Output: 3    Explanation P(2) = 2 (1,2 divide 2, therefore number of numbers which divide 2 is 2). so P(2^P(2)) is P(4) which is 3. (1,2,4 divide 4) 
 Pankaj, the right arm fast bowler bowls B regular balls and at most N free-hit balls due to his inconsistent line and length. Now, If a batsman scores 0 runs of a ball, then the ball is considered to be  a 'dot ball'. The batsman can either play a single ball bowled as a dot ball, or may score 1, 2, 4 or 6 runs from it. This scoring principle is same for both the regular balls as well as for the free-hit balls. The cricket match can end due to one of the following reasons.  Either there are no regular balls remaining (irrespective of the number of free-hit balls remaining). Or the batsman scores 100 or more runs(irrespective of the number of regular balls or 'no-balls' remaining).    The batting side wins the game if the batsman scores 100 or more runs. Also, since the batsman is a power hitter, he never plays three continuous regular balls as dot balls. Three regular balls are considered continuous even if there are free-hit balls bowled in between them. The free-hit balls although offer a good opportunity to the batsman to score runs but they are actually served as penalty on the part of bowler and hence, not taken into consideration of counting them as a regular ball. For example, if the bowler delivers the following sequence of balls i.e [regular ball][regular ball][free-hit ball][regular ball]. Then, it is not possible to score zero runs of all the three regular balls, irrespective of the runs scored from the free-hit balls between them. Find the number of ways in which the batting side wins the game. Since the answer can be too large, print it modulo 10^9 + 7.  Note  Do not confuse with actual rules of cricket like extra runs for no ball. Only the rules stated in the problem statement are valid.   Input  The first line of the input contains an integer T denoting the number of test cases. The first line of each test case contains two space separated integers i.e B and N denoting the number of regular balls and free-hit balls respectively.   Output  For each test case, print the number of ways in which he can win the game modulo 10^9 + 7     Constraints   1 ≤ T ≤ 30 1 ≤ B ≤ 200 0 ≤ N ≤ 100      Example Input: 1 17 0 Output: 18    Explanation For the test case, the possible ways of winning are either scoring 6 runs out of all the 17 balls, or scoring 4 runs of 1 of the balls, and 6 runs out of the rest of them. 
Panda loves strings a lot. He has a kind of strange affinity with strings. He has been trying to solve several problems of strings for quite a while, and got stuck at one of them. The problem requires Panda to input two strings A and B each of length N and he needs to make set-A for all substrings of string A, and similarly set-B for all substrings of string B His dilemma doesn’t end here. To add the twist to the problem, a value K is also provided to Panda such that he needs to find the answer to four types of queries:- Type 1: The number of substrings of length K which are both in set-A and in set-B Type 2: The number of substrings of length K which are in set-A but not in set-B Type 3: The number of substrings of length K which are in set-B but not in set-A Type 4: The number of substrings of length K which are in either set-A or set-B but not in both  Since, Panda is a weak coder and he needs to solve large number of such queries,   help him to solve this problem.  Note The set will always have distinct substrings.  Input The first and second lines of the input contain string A and string B respectively. The third line contains an integer Q denoting the number of queries. Thereafter, Q lines follow where each line is having two values as input in the form of query. Each query can be represented as X K Where X denotes the type of query and K denotes the length of the substrings.  Output For each of the Q queries, you need to output answer on a separate line.  Constraints 1 <= |A|,|B| <= 5 * 10^4 1 <= Q <= 10^5 1 <= X <= 4 1 <= K <= min(|A|,|B|)   Example Input:  abab baba 4 1  2 2  4 3  2 4  4  Output:  2 1 0 2    Explanation You are provided with strings abab and baba. All possible substrings of A in set 1 are  { a, b, ab,  ba , aba, bab , abab }. All possible substrings of B in set 2 are  { a, b , ab , ba , aba , bab , baba }. We have four queries.  First one requires to output the number of substrings of length 2 which are in both set-A and set-B.  We have {ab,ba} as required substrings . The answer is 2.  Second one requires to output the number of substrings of length 4 which are in set-A but not in set-B. We have {abab} as required substring. The answer is 1.  Third one requires to output the number of substrings of length 2 which are in set-B but not in set-A.  As, all of 2 length substrings in both the sets are same, the answer is 0.  Fourth one requires to output the number of substrings of length 4 which are in set-A or in set-B but not in both.  We have {abab, baba} as required substrings. The answer is 2.  
 Problem description. Sugam is very interested in participating in IIIT Delhi’s annual Tech Fest Esya. He wants to pair with his friend for Esya’s Techathalon events. But his friend is very choosy. He asks Sugam to solve a problem if he wants to team up with him.   Can you help Sugam in solving the problem?   Problem : Find the sum of all the prime numbers between K and N(K and N are inclusive), where K is the total number of events being held in Esya’14 and N is taken as input from the user.   Refer esya website if required. Or you can also decode the value of K from the sample input/output.   Input Description The first line of the input contains an integer T denoting the number of test cases. Each test case contains an integer N  Output Description A single integer value which is the sum of primes.   Sample Input  150  Sample Output 228  Constraints  1 ≤  T ≤ 100 k  ≤  N ≤ 1000  
  Problem description.  Luke Hobbs is a highly skilled bounty hunter and the lead DSS federal agent whose job is to fight against the crime. One day while going somewhere for the work he got a call from his assistant Elena Neves informing him about a meeting of gangsters. With the help of his team he was able to catch those N gansters. Now he needs to know minimum how many gangs are active in this town? While interrogating each one of those N gangsters Luke asked them that, How many number of gangsters work in his (i.e gangster's) gang except him? Given the number of Gangsters that were interrogated N and the answer of each gangster a1,a2....aN . Help Luke by telling him minimum number of  Gangsters in the town.  Input The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. For each test case, First line contains N denoting the number of Gangsters that were interrogated and second line contains N numbers a1,a2....aN seperated by spaces.  Output For each test case, output a single line containing minimum number of  gangsters in the town.   Constraints   1 ≤ T ≤ 150  1 ≤ N ≤ 5000  0 ≤ a1,a2....aN ≤ 10^7     Example Input: 3 5 2 1 1 2 3 2 6 7 6 10 10 5 10 10 5  Output: 9 15 17     Explanation Example case 1. 1st and 4th member are from same gang with one more member with him, 2nd and 3rd are from same gang with no more members, 5th has 3 more members with him in his gang. Summing upto 9.  ... 
 Chef wrote some text on a piece of paper and now he wants to know how many holes are in the text. What is a hole? If you think of the paper as the plane and a letter as a curve on the plane, then each letter divides the plane into regions. For example letters "A", "D", "O", "P", "R" divide the plane into two regions so we say these letters each have one hole. Similarly, letter "B" has two holes and letters such as "C", "E", "F", "K" have no holes. We say that the number of holes in the text is equal to the total number of holes in the letters of the text. Help Chef to determine how many holes are in the text.   Input  The first line contains a single integer T ≤ 40, the number of test cases. T test cases follow. The only line of each test case contains a non-empty text composed only of uppercase letters of English alphabet. The length of the text is less then 100. There are no any spaces in the input.   Output  For each test case, output a single line containing the number of holes in the corresponding text.   Example  Input: 2 CODECHEF DRINKEATCODE  Output: 2 5  
  Chef wrote some text on a piece of paper and now he wants to know how many holes are in the text. What is a hole? If you think of the paper as the plane and a letter as a curve on the plane, then each letter divides the plane into regions. For example letters "A", "D", "O", "P", "R" divide the plane into two regions so we say these letters each have one hole. Similarly, letter "B" has two holes and letters such as "C", "E", "F", "K" have no holes. We say that the number of holes in the text is equal to the total number of holes in the letters of the text. Help Chef to determine how many holes are in the text..    Input The first line contains a single integer T <= 40, the number of test cases. T test cases follow. The only line of each test case contains a non-empty text composed only of uppercase letters of English alphabet. The length of the text is less then 100. There are no any spaces in the input.  Output Output description.  Example Input: 2 CODECHEF DRINKEATCODE  Output: 2 5 
A holiday weekend is coming up, and Hotel Bytelandia needs to find out if it has enough rooms to accommodate all potential guests. A number of guests have made reservations. Each reservation consists of an arrival time, and a departure time. The hotel management has hired you to calculate the maximum number of guests that will be at the hotel simultaneously. Note that if one guest arrives at the same time another leaves, they are never considered to be at the hotel simultaneously (see the second example).   Input Input will begin with an integer T, the number of test cases. Each test case begins with an integer N, the number of guests. Two lines follow, each with exactly N positive integers. The i-th integer of the first line is the arrival time of the i-th guest, and the i-th integer of the second line is the departure time of the i-th guest (which will be strictly greater than the arrival time).   Output For each test case, print the maximum number of guests that are simultaneously at the hotel.  Sample Input 3 3 1 2 3 4 5 6 5 1 2 3 4 5 2 3 4 5 6 7 13 6 5 8 2 10 12 19 18 6 9 9 11 15   Sample Output 3 1 3   Constraints  T≤100 N≤100 All arrival/departure times will be between 1 and 1000, inclusive 
 Problem description.  Its Kazima's 13th birthday on this 13th and his father is very excited. To make this occasion memorable for him, he decides to decorate the venue of his birthday party with unique numbers having a special property-:  Sum of digits of each number is equal to the date of birth(only the date, not month or year!) of his lovely child.   The numbers are to be printed on posters of same size(one number on one poster). Size of the poster is the number of digits you want to write on the poster. On asking the decorator for this job, Kazima's father realized that he will have to pay the cost of decoration at the rate of maximum poster size length required. Now he is confused about how many digits he would at least need for making N numbers with this property as this would directly imply the poster sizes he would need. Can you help him realize answer for this problem ?   Input Description The first line of the input contains an integer T denoting the number of test cases. T lines follow each containing an integer N, numbers kazima wants to generate  Output Description One Integer answer for every test case which is the minimum digits needed for generating N numbers   Sample Input  227  Sample Output 23  Sample Input Explanation  Numbers whose digits sum to 13 :   49,58,67,76,85,94,139,148,157,166... for just 2 such numbers we can pick for example 49 and 67 which would require only 2 digits for 7 numbers we will need 3 digits as only six 2 digit numbers have this property, one 3 digit number would be required   Constraints  1 ≤  T ≤ 100 0  ≤  N ≤ 75000  
 Note: For Turbo C++, select "Text" as your language Problem Description: In every Esya we have a post celebration party. Now, you are hosting this year's post celebration party. There are n people coming to the party. You have numbered them from 1 to n. During the party you spotted a strange behaviour of people. The person numbered i shakes hands with all the people from i+1 to n. There was another strange thing, in between the party the person numbered k left the party as soon as person numbered k-1 was finished shaking hands. After the party was over, you tried to find out the number of total handshakes that might have happened during the party.     Input First line contains a single integer t denoting the number of test cases. Each test case consists of two space separated integers n and k denoting the total number of people and index of the person who left the party respectively. If k is 0 that means no-onet left the party.   Output For each test case output a single line containing the number of handshakes that might have happened.   Constraints  1 ≤ t ≤ 100000 1 ≤ n ≤ 1000000 0 ≤ k ≤ n     Example Input: 2 5 4 3 0  Output: 9 3    Note Use long long int rather than int to calculate the answer. 
  ﻿Chef wanted to spend some time alone, he decided to visit a nearby graveyard. What chef was not aware about was that it was a full moon night. The night was cloudy. At one moment, when he was at the graveyard, the clouds started clearing out and the moon had shown its face, what happened next might scare you. Zombies started come out of their graves and started approaching chef from all sides, he was surrounded. There were N zombies in the graveyard, the i^th zombie was di distance away. If any zombie is able to reach chef, the chef dies. The zombies took one second to move one unit. Chef was once a soldier, he keeps a pistol with him all the time, and suppose chef has infinite number of bullets with him. Chef can only kill one zombie at a time and it takes one second to shoot one zombie. They need to be shot on their head. Now, as soon as he kills one Zombie, rest of the Zombies move forward by one unit. Assuming, he shot them optimally, your task is to find whether chef would be able to survive. One more thing, chef's gun can fire 6 shots without a reload. It takes him one second to reload and during this time zombies move one unit forward.    Input The first line of input contains T, the number of test cases. The first line of each test case contains N, the number of zombies, and the next line contains N space separated integers, denoting the distance of each zombie from the chef.    Output For each test case print“YES” or “NO” (without the double quotes), whether or not chef will be able to survive.  Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 100 1 ≤ N ≤ 100 1 ≤ dii ≤ 100     Example Input: 2 5 2 4 2 5 6 4 2 3 2 2  Output: YES NO   
 Problem description.  With the arrival of monsoon season, beautiful city of Palama is observing a huge surge of tourists. As expected, the infamous hotel, Palama Palace - 5 Star Super Luxurious with 7 Swimming Pools, jacuzzi in rooms and what not, has become the main attraction for tourists to stay.   Palama Managers believe in providing quality service and will have to compromise on the number of touristers they can fit. Having a lot of pre-bookings, Palama managers have to again and again go through these bookings and see if they can give the room to tourists. Can you help the Palama managers quickly answer tourists if they can provide them a room or not?   Input Description The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows 	First line of each test case contains two spaced integers N and Q, where N is the number of time slots which are already booked and Q is the number of queries the managers have got N lines follow each of which contains two spaced integers representing interval start time  Ts and end time  Te Q lines follow each of which contains one integer, Qi,  representing the time of request  Output Description For every query either output "YES" or "NO" according to problem statement   Sample Input  13 31 45 108 123136   Sample Output  NOYESNO   Constraints  1 ≤  T ≤ 10 1 ≤  N ≤ 5000 1 ≤  Ts,Te ≤ 10000000000 1 ≤  Q ≤ 10000 1 ≤  Qi ≤ 10000000000  Note: Intervals are inclusive 
 It is well known that the enemy of my enemy is my friend... You are to find how many friends someone has following the above well known expression.  Input format: The first line of each test file contains n p, where n is the number of people and p is the number of enemy relationships The p following line each contain an enemy relationship name1 name2 implying that name1 is the enemy of name2 (and consequently name2 is the enemy of name1) The following contains the integer q, the number of queries. The following q lines each contains the name of a person for which we want to know how many friends he has.  Output format: For each of the q test cases, your program must print the number of friends of the respective person in a new line on standard output.  Sample Input: 6 7 firoz bobby bobby Amit bobby johnny johnny firoz lata bobby geeta lata geeta firoz 3 firoz lata bobby  Sample Output: 2 3 1  Explanation Firoz has 2 friends because: Firoz has 3 enemies: Bobby, Johnny, Geeta Bobby has 4 enemies: Firoz, Amit, Johnny, lata Johnny has 2 enemies: Bobby, Firoz geeta has 2 enemies: lata, Firoz Therefore the enemies of the enemies of Firoz are Amit, Johnny, lata, Bobby, Firoz To be Firoz's friends they must not be his enemies so Johnny and Bobby must be removed Firoz cannot be his own friend so we remove Firoz from his friends So the friends of Firoz are Amit, lata: 2 friends  Constraints: 0<n<10000 0<=p<=50000 1<=q<=10000 the names will be atmost of length 20 consider names of different cases as different.  Time limit: 1 s 
  You have n friends and you want to take m pictures of them. Exactly two of your friends should appear in each picture and no two pictures should contain the same pair of your friends. So if you have n = 3 friends you can take 3 different pictures, each containing a pair of your friends. Each of your friends has an attractiveness level which is specified by the integer number ai for the i-th friend. You know that the attractiveness of a picture containing the i-th and the j-th friends is equal to the exclusive-or (xor operation) of integers ai and aj. You want to take pictures in a way that the total sum of attractiveness of your pictures is maximized. You have to calculate this value. Since the result may not fit in a 32-bit integer number, print it modulo 1000000007 (10^9 + 7).    Input The first line of input contains two integers n and m — the number of friends and the number of pictures that you want to take. Next line contains n space-separated integers a1, a2, ..., an — the values of attractiveness of the friends.   Output The only line of output should contain an integer — the optimal total sum of attractiveness of your pictures    Constraints  1 <= n <= 5*10^4 0 <= m <= n*(n-1)/2 0 ≤ ai ≤ 10^9  Sample input 1: 3 1 1 2 3  Sample output 1: 3  Sample input 2: 3 3 1 2 3  Sample output 2: 6 
Two good friends M.H. and S.K.M. like to play with digits.... One fine morning another friend A.D. gave them a huge stream of digits and asked some rather 'simple' questions. The two good friends M.H. and S.K.M. scrathed their heads and could not come up with an efficient solution.Can you help them?  The digit stream presented was 0123456789101112131415161718.........  A.D.'s rather simple questions went like this: he gave q the number of questions he would ask and then asked those questions as what is the 100 th digit in the sequence? what is the 112322th digit in the sequence? and so on...    Formally speaking, You will be given q queries and each query will be a positive integer which denotes the position(starting with 0) who's digit you are required to find.  Input format:  Input starts with q the number of queries.Each query is presented in a new line. Output format:  The digit in the required position in the above stream in a new line. Constraints: 1<=q<=10^6 and each query will be a positive integer  Sample input:  4 0 3 10 11 Sample Output:  0 3 1 0 
  There is a fest arranged in Banasthali University by Wappers. Yasha has come to the arranged stalls to eat. There are numbers assigned to each stall. Yasha visits only the magical stalls. Description of Magical stalls: Calculate the sum of squares of each digit of stall number. Continue the process while checking if this sum is 1 at any iteration, then it is a magical stall. If the sum never turns up as 1 , it is unmagical stall.     INPUT The first line contains a single integer T, denoting the number of test cases. In each test case, first line have an integer M, denoting number of Stalls. Second line have space separated M integers such that each integer denotes the stall number.     Output For each test case output "YES" if the number is magical and "NO" if it is not in different lines.  Constraints 1<=T<=1800  1<=M<=50     Example Input:  1 3 1 2 7   Output:  YES NO YES     Explanation Example case 1. 1 is a magical number as 12=1.  2 is not a magical number as 22 =4. 7 is a magical number as 72=49  , so 42+92 =97 , so 92+72 =130  , so 12+32+02 =10 , so 12+02 =1.  
  There is an exam going on in the campus and our invigilator Nidhi  is very strict. Still students manage to cheat. If one copies an array of integers from some other student, any circular arrangement of the array is valid is an answer. The first number in the answer defines the circular arrangement chosen. But in hurry student copy the numbers at wrong places. You have to calculate the cheat number ie number of digits that have been displaced from their correct position.    INPUT The first line contains a single integer T, denoting the number of test cases. Next line have an integer N. The valid array can take the form 1 to N or any of its circular arrangement. Further there are T lines each with an instance of copied array.    Output Print number of digits displaced from their position for each instance in different line.  Constraints 1<=T<=100  1<=N<=100     Example Input:  2 4 1 2 3 4 2 1 3 4   Output:  0 3     Explanation In first line, 2 is number of instances of copied array. From second line we get to know the valid arrays are 1 2 3 4, 2 3 4 1, 3 4 1 2, 4 1 2 3.In first test case the array matches with valid array so the cheat number =0. In second case first digit is 2 ,so we have to match our given array with the valid array 2 3 4 1.The digit 1 had to be on position fourth,3 had to be on second, 4 had to be on third. Thus cheat number =3.  
Pankaj likes to eat Ice cream when he is working late into the night. Today has been yet another long day for Pankaj. So, he wants to eat ice cream now. He opens the fridge and sees that he has 2 types of containers holding the ice cream. The first container is a cone with radius r1 and height h1. There is also a hemisphere on the top of the cone which has the same radius. The other container is a cylindrical with radius r2 and height h2. Pankaj wants to know the amount (volume) of ice cream in both the containers. Since Pankaj is tired after coding all day, you have to help him with this task.    Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. Each test case consists of a single line having the r1, h1, r2 and h2. Each value is given upto 2 decimal places. See example for more information.     Output  For each test case, output a single line containing the volumes of the two containers separated by space. The answer is considered correct if it is correct upto 6 decimal places.     Constraints  1 ≤ T ≤ 100 0 <  r1, h1, r2, h2 ≤ 100     Example Input: 2 1.00 1.00 1.00 1.00 3.02 7.23 5.20 6.00  Output: 3.141592654 3.141592654 126.739919445 509.691992118    
 Little Johny is a polar bear which lives in arctic region.The bear can hardly tolerate any increase in atmospheric temperature. After an intra galactic explosion fragments of several meteorites are showered on the entire arctic region in the form of fire bodies. Little Johny is severely scared of this natural phenomenon as this has caused an considerable increase in temperature of arctic region. The fire bodies are now randomly distributed on the surface of the arctic region.Poor Johny is now in search of the coolest region for his own survival.Little Johny has got a unique power that once he found such a region and own it he can have access to all the ice units in that region. But the cons is that the bear cannot avoid the heat produced by the fire bodies present in that region.Johny has to find the coolest region as soon as possible. Your task is to find the area of the coolest region that Johny need for his survival.If there are more than one possible coolest regions, then print the one which has maximum area.                Consider the arctic region as a N X M map.Each cell of the map is either represented by "F" or "I" which represents fire and ice respectively. The magnitude of each "F" or "I" is computed by the following formula :              F=(m^(im+jm))%P I=(n^(in+jn))%P where m=  serial number of a particular fire starting from one and counted row wise im=  row number of mth fire starting from 0 jm=  column number of mth fire starting from 0  n=serial number of a particular ice starting from one and counted row wise in=row number of nth ice starting from 0 jn=column number of nth ice starting from 0  P Note : The region is defined as sub-matrix of the original matrix.  Input  The first line of the input contains the number of test cases T.Then follows T test cases.First line of each test case contains N and M ,the dimensions of the Arctic region.Then follow a N X M character matrix filled with character 'F' or 'I'. The last line of each test case contains an integer P which is basically a prime number.   Output  For each test case output the area of the coolest region required for Little Johny for his survival.If there are more than one possible coolest regions, then print the one which has maximum area.   Constraints  1 ≤ T ≤ 10 1 ≤ N,M ≤ 100 2 ≤ P ≤ 10^4 and P is a prime number   Example  Input: 2 2 2 FI FI 2 3 4 FIFI IIIF IIFF 23 Output: 2 6  
 Icarus is super enthusiastic in becoming the best GO player in the world, and right now he is aiming to surpass his rival Troy. That is why he is training hard in many creative ways.  He knows that a great ability for a good GO player is to count the number of groups and the degrees of freedom of each one just with a quick sight.  As you know, a group is a set of stones in which each stone of the group is adjacent to another stone of the group; and the freedom degree a group is equal to the number of empty intersections that are at least adjacent to one stone in the group. In GO, adjacency is only vertical or horizontal, not diagonal. As the diagram shows, in this reduced 6x6 board there are one big white group consisting of four stones and freedom degree five (5), one black group of two stones and freedom degree four (4) and two black groups of one stone with two freedom degree two (2) each.  A good friend of him made a quick random board generator. It creates a GO board with a certain number of stones placed on it and then Icarus estimates the groups and their degrees of freedom. After that, the computer checks if he was right counting them manually. The only problem is that the computer validation has not been implemented yet, so your task is to help Icarus by writing a program that generates the correct answer. This way, Icarus will be able to validate his answers and finally defeat Troy.     Input The first line contains an integer T, which species the number of test cases. Then, T test case descriptions will follow.    The first line contains a pair of integers N and S, which specify the length of the board (which is always square) and the number of stones in it. Then, S lines will follow, each one containing the following items separated by a single white space:  A character 'B' or 'W' if the stone is black or white respectively. An integer Ci represents the column where the stone i is placed. An integer Ri represents the row where the stone i is placed.   Remember that the bottom-left intersection in the board is (1,1) and the top-right intersection is (N,N).     Output  For each board you must print the string "Case #i:" in a line, where i is the board number, starting from 1. Then, you must print one line for each group in the board, printing a character 'B' if the group is black or 'W' if the group is white, the number of stones in the set and the freedom degrees of that group; those three elements should be separated by single a white space. The groups should be sorted by the following rules:  Put black groups before white groups. If two groups are of the same color, put bigger groups first. If two groups are of the same color and the same size, put groups with greater freedom degree first.    Example Input 3 6 8 B 5 2 W 4 2 B 5 4 W 4 4 B 5 5 W 5 3 B 6 3 W 4 3 9 6 W 5 5 B 9 5 B 9 1 W 1 1 B 1 2 B 2 1 6 5 B 1 1 B 1 2 W 3 1 W 2 2 W 3 2  Output Case #1: B 2 4 B 1 2 B 1 2 W 4 5 Case #2: B 1 3 B 1 2 B 1 2 B 1 2 W 1 4 W 1 0 Case #3: B 2 2 W 3 5   Constraints:   T will be between 1 and 200, inclusive. N will be between 1 and 10^6, inclusive. S will be between 1 and min(N^2,250), inclusive. Ci will be between 1 and N, inclusive, for all i between 1 and S. Ri will be between 1 and N, inclusive, for all i between 1 and S. There will not be more than one stone in the same intersection.  
Alice and Bob are siblings who are very good at calculating things. Both of them have set world records and are known as 'the human calculators'. Bob is faster at calculating things but Alice is better at mathematics. One day Bob challenged Alice to calculate f(n), where f(n) = 1^n × 2^n-1 × 3^n-2 × ... × (n-1)^2 × n Alice knew that Bob's math is weak, so she said, "This is too easy for me. I will not just find f(n), I will also divide it by 10^9+7 and tell you the remainder". Bob thought Alice was being overconfident, but if you are good at math you would know that she was just being smart to avoid too much calculation! Bob asked Alice to calculate f(n) modulo 10^9+7 for several values of n. Alice did so in a few seconds. Now Bob has to check if Alice's answers are correct or not. He is too lazy to do the calculation himself. You have to help Bob by writing a program that finds f(n) modulo 10^9+7 for different values of n. Input The first line will contain a single integer T, the number of test cases. Each of the next N lines contain a single integer N, for which you have to compute f(N). Output Print f(n) modulo 10^9+7 for each N. Constraints 1 ≤ T ≤ 1000 1 ≤ N ≤ 10000000 Sum of all N in an input file does not exceed 20000000 Sample input 4 1 2 3 4  Sample output 1 2 12 288  Explanation 1^1 = 1 1^2 × 2^1 = 1 × 2 = 2 1^3 × 2^2 × 3^1 = 1 × 4 × 3 = 12 1^4 × 2^3 × 3^2 × 4^1 = 1 × 8 × 9 × 4 = 288 
Bob loves playing computer games. He is playing a computer game called Pocket Tanks. He plays it all day, taking only tea breaks in between. He take T tea breaks on a particular day (He plays for T+1 sessions). Between any 2 tea breaks he has to pass N difficulty levels. Pocket Tanks is a game where the player has to move his/her tank to a specific place. The number of moves he can make in a game always lie between [1, K]. This K and N is given to him by her friend Alice during the tea break (They always have tea together ;). Given a number X at the start of day, he has to find the number of ways to get this number (X) as a sum of moves for N games he plays in one session. He then sums up this value for all the sessions he plays. If the final value Y % 1000000007 is correct, he wins.  Input The first line will contain two integers T and X. Each of the next T+1 lines contain a two integers N and K.  Output Print one integer corresponding to the answer (Y) modulo 1000000007.  Constraints 0 <= T <= 10 1 <= (N * K) <= 10000 1 <= X <= 1000  Sample input 0 8 3 6 Sample output 21 Explanation As per the testcase, Bob has 0 tea breaks, so he plays just one session. In that session he has to play 3 levels and with a maximum of 6 moves per level. He can either make 1, 2, 3, 4, 5 or 6 moves in each level. Finally he has to make such moves that he is able to make a total of 8 moves. Since he plays for only one session, he has to make a total of 8 moves after 3 levels to win. The number of ways in which he can make such moves is 21. 
   Problem description. One of my friend Abhinav loves coins and he is playing with them but unable to do one problem. The problem is that you have N coins, not all of different denominations and you have to put the coins of same denomination on top of each other to form pile of different lengths . You have to print the denomination and number of coins in the pile which have maximum number of coins. If 2 or more such denominations are possible then print the denomination having the smallest denomination.  Input  The first line of the input contains an integer N denoting the number of coins. The next lines contains N coins.     Output  Print the two numbers as asked in the problem. Print First number on first line and second on second line.     Constraints  1 < N < 100000 Denomination of each coin = x  where  1 <= x <= 1000     Example Input: 3 1 1 2  Output: 1 2     Explanation Example case 1. Coin with denomination 1 has a pile containing 2 coins. 
  Problem description. As a BITS - Pilani student and a football player, Bayne was delighted once he heard the news, BITS-Pilani is finally participating in the National Football League (NFL). A team is to be formed of "n" players, all of which are BITS students. However, the team might have players belonging to different departments. There are "m" departments in BITS, numbered from 1 to m. Bane's department has number "h". For each department "i", Bane knows number s[i] — how many students who play football belong to this department.  Bane was also able to guarantee a spot on the team, using his special powers. But since he hates floating-point numbers, he needs your help at finding the probability that he will have at least one teammate belonging to his department.  Note that every possible team containing Bane is equally probable. Consider all the students different from each other.  Input  The first line of the input contains three integers n, m and h denoting the number of players on the team, the number of departments in BITS and Bane's department, correspondingly. The second line contains a single-space-separated list of m integers si (1 ≤ s[i] ≤ 100), denoting the number of students in the i-th department. Note that s[h] includes Bane     Output  Print the probability that Bane will have at least one teammate from his department. If there is not enough football players in BITS to participate in NFL, print "-1"(without quotes).   NOTE :  The ans should be rounded off to 6 decimal places i.e. should contain maximum 6 digits after decimal point.  For eg. In C++ you can use setprecision(6), and in c : printf("%0.6lf") .     Constraints  1 ≤ n ≤100 1 ≤ m ≤1000 1 ≤ h ≤m     Example Input: 3 2 1 2 1  Output: 1 
   Problem description. "Pandas Don't Cry" is a semi professional band. Recently, they bought a new tour bus, which they will use to travel from one city to another for their concerts. Unfortunately they don't have much funds left now. The Band's lead guitarist is worried as to how they will pay the tolls when they move from one city to the other, as they travel a lot. He doesn't have to worry about the fuel since that is taken care of by the band's sponsors. So he decides to take a route that will cost them the least on the basis of the toll that they have to pay when they move from one city to another. Now he thinks that he only has to minimise the toll. So he decides to choose a path that will cost them the least(toll-wise). But the next concert starts in T minutes!!! He soon realises that taking the path which would cost them the least toll may not be such a good idea as the band has to reach the destination city in less than or equal to T minutes, and the path through which they will have to pay the least may not take them to their destination in that time. He has no idea how to solve this problem. He asks you for help.  Given a starting city and a destination city, tell the minimum toll that the band will have to pay to go from the starting city to the destination city.   Input  The first line of the input contains an integer t denoting the number of test cases. For each of the t test cases, the first line contains the number of cities N and available time T. The first city is the city at which the band starts, the last city is the their destination city. After this line there are N lines with N numbers each, specifying for each city the travel time to the i-th city. The table is terminated with an empty line. The table of the tolls follows in the same format. In other words, each entry in row i and column j denotes the time/toll incurred on moving from city i to city j.    Output  For each test case, output a single line containing the minimum toll that the band will have to pay followed by the total travelling time.     Constraints  1 ≤ t ≤ 30 3 ≤ N ≤ 50 0 ≤ T ≤ 1000     Example Input: 1  4 10 0 9 2 3 1 0 2 4 2 1 0 2 2 2 2 0  0 1 1 3 1 0 1 2 2 3 0 9 5 2 5 0   Output: 3 3   
 A rectangular garden is divided into square shaped cells where each cell consists of a plant. Some plants depending upon their nature need more water than others and some may not require water at all. Invisible water taps keep teleporting around the garden. Each water tap gives water to a plant for a constant time and then teleports to another( or reappears in the same cell ) to give water to another plant( or the same plant ). To simplify the structure, each water tap moves with respect to a base cell, Row offset set and a Column offset set and keeps repeating through the set. For example:   Consider a 6 X 6 size rectangle:   Therefore,   Total Rows = 6 Total Columns = 6 Total cells = Total plants = 36   Now consider a tap with following properties   1. Base cell:         0 2. Row Offset Set:       0 1 2 0 0 3. Column Offset Set: 1 0 0 1 2    The cell numbers for the garden in this case will be:     0       1      2       3     4      5   6       7      8       9    10   11 12   13   14   15   16   17 18   19   20   21   22   23 24   25   26   27   28   29 30   31   32   33   34   35   This means the tap starts with giving water to cell '1'( Row offset 0, column offset 1 with respect to cell '0' i.e. the base cell ) and then moves to cells 6 -> 12 -> 1 -> 2. The new cell position is with respect to the base cell, the current row and column offset and has got nothing to do with the previous cell positions where water tap was teleported. Also note that the tap would continuously move in the following order 1->6->12->1->2->1->6->12... and so on.   All the water taps are synchronised i.e. all of them change the cells at the same time, give water for the same amount of time and so on. Consequently, there may be such plants, which at some time instant get water from every tap in the garden. These plants are called Aqualoo plants.   Now given the taps and their respective base cell, row offset set and column offset set, you have to give out the total Aqualoo plants in the garden.    Notes  - Remember that for the plant to be Aqualoo, every tap in the garden should water this plant at same time instant. - Every tap may or may not have a different base cell, row offset and column offset.   Input  1. Number of test cases = 'T' ( 1 <= T <= 300 ) 2. For each test case, first line of input contains number of rows = 'R', followed by number of columns = 'C' and total number of water taps = 'N' ( 1 <= R <= 50, 1 <= C <= 50, 1 <= N <= 6 ). 3. For each tap, first line of input contains base cell number = 'B', followed by length of the row offset set and column offset set = 'L' ( 0 <= B < R * C, 1 <= L <= 25 ). 4. Next line contains row offset set, where each value lies in range ( -R, +R )( not inclusive ). 5. Next line contains column offset set, where each value lies in range ( -C, +C )( not inclusive ).   Output  1. Each line of output contains total Aqualoo plants   Example Input: 2  6 6 2 7 1 2 3 35 1 -2 -1  6 6 2 13 4 0 1 1 0 0 1 2 3 4 3 0 1 2 0 0 0  Output: 1 1 
 The success of IEEE code-quest depends on number of times the factor is present in a given string.Help core members to find them  Factor of string is defined as a substring.In this case it's '01'.  Input First line of input contains an integer T, denoting the number of test cases. Then follows description of T cases.Each line of input is a binary form.    Output Print the number of times the factor is present in a given string.    Constraints  1 <= S <= 100000 1 <= T <= 50     Example Input: 1 1001010100001  Output: 4      
  Prats is learning to count.But this is not a usual counting.He has been given the task to count number of trailing 0s in a binary representation of a number.    Input First line of input contains T, number of test cases. Each of the next T lines contains a number N.    Output Output the number of trailing 0s in binary representation of a number N.    Constraints  1 ≤ N ≤ 1000000 1 ≤ T ≤ 100     Example Input: 2 4 7  Output: 2 0    Explanation Example case 1. Binary form of 4 is 0100,hence number of trailing 0s is 2. 
  Sorting is considered to be one of the most important skills to be learned in computer science and has it's applications in real product building. The problem has arised to the team of PcCube.They need to sort the set of alphanumeric strings in such a way that the positions of alphabets and numbers remains unchanged.   Input First line of the input contains T , i.e. number of test cases.Then next T lines contains a string S.    Output Output description. Output the sorted form of S such that the positions of alphabets and numbers remains unchanged.    Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 1000000     Example Input: 1 951f5gd3  Output: 135d5fg9      
  It was exam time in pesce, mandya and Rubal was feeling hungry.However being late night and exam time he decided to look for snacks in every room.However because of his bad luck he missed the room which actually had snacks.Help him to find the room number which he missed. The rooms in the hostel are in the range 1 to N.  Input First line of input contains T , i.e. number of test cases.Each of next T lines Contains an integer N i.e. total no of rooms.Next line contains the room number he visited denoted by an array A.  Output Output the missing number in an array.    Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 50 1 ≤ N ≤ 500000     Example Input: 2 9 5 4 2 8 3 1 7 9 5 1 5 2 4 Output: 6 3    Explanation Example case 1. Since 6 is an integer which is missing in a sequence. 
  Valentine's Day is coming and our friend Mr.IDC has fallen in love with a girl. He just could not control his feelings and went to propose her. When he proposed her the girl gave him a challenge and asked him to solve it and the condition was if he will solve the challenge successfully then only she will accept his proposal. Since the girl likes mathematics very much so she asked him to calculate the sum of numbers from 1 to N as:  for ( i=1;i<=N;i++ ) 	sum += i % MOD; ( Since the girl is also in love with him so she does not want him to waste his time on large numbers, therefore she is gave him the MOD value also to reduce his calculations. ) Now she wants him to calculate the sum using the above definition. This sum will also prove how much he love her. ;)     Input First Line of input contains T, the number of testcases. The next T lines will contain two integers N and MOD.    Output For each testcase print the output in a new line.    Constraints:  1 <= T <= 1000 1 <= N <= 10^9 1 <= MOD <= 10^9     Example Input: 3 20 5 10 2 5 3  Output: 40 5 6    Explanation Testcase 1:  For N = 20 m = 5, Sum = 1%5 + 2%5 + 3%5 + 4%5 + 5%5 + 6%5 + 7%5 + 8%5 + 9%5 + 10%5 + 11%5 + 12%5 + 13%5 + 14%5 + 15%5 + 16%5 + 17%5 + 18%5 + 19%5 + 20%5 = 40 You can check yourself for testcase 2 and 3. 
  Finally Mr.IDC has a girlfriend now and he wants to send her love letters. Since he is afraid of being caught by her parents therefore he encrypts the message using Caesar Cipher. While writing the letter he has replaced each character with a new character (Ci - K) mod 26 where  ( i = [ 0,|message| ] ). After finishing writing the letter, he sends it to his girlfriend and messages her the key K to decrypt his message. She has received the letter but doesn't know how to decrypt. She wants to read what is written in the letter therefore she needs your help in decrypting the message.    Input First line of input contains T, number of testcases. Each testcase contains two lines. First line contains K and the next line contains the encrypted message {'a'-'z'}.  Output For each testcase, output the result after extracting the original message in a new line.  Constraints  1 ≤ T ≤ 100 1 ≤ K < 26 1 ≤ |encrypted message| ≤ 10^4     Example Input: 2 14 uxahqkag 7 fbgwlpxxixkl  Output: iloveyou mindsweepers   
A circular prime is a prime number with the property that the number generated at each intermediate step when cyclically permuting its (base 10) digits will be prime. Simply if all the rotational digits of a number are themselves prime It is called a prime number. For an example 1193 is a circular prime because 1931, 9311, 3119 are also prime. So according to above description first 10 circular primes will be 2, 3, 5, 7, 11, 13, 17, 37, 79, 113. In this problem you are supposed to fine the number of circular primes below a given limit.   Important: The combination of each circular is primes are neglected when counting. That means only the lowest number is counting.   Input  The first line will contain the number of cases and the next lines will give the limit.   Sample Input 4 10 20 50 200  Output The output must contain the number of circular primes below that each given limit   Sample Output  Number of circular primes below 10 is 4 Number of circular primes below 20 is 7 Number of circular primes below 50 is 8 Number of circular primes below 200 is 12 
                     Throughout history there have been many different interesting numbers or types of numbers. One of these types is amicable numbers. Amicable numbers are a pair of numbers with the following property: the sum of all of the proper divisors of the first number (not including itself) exactly equals the second number while the sum of all of the proper divisors of the second number (not including itself) likewise equals the first number.                       The set of 220 and 284 was the first known set of amicable numbers. Pythagoras discovered the relationship and coined the term amicable because he considered the numbers to be a symbol of friendship.  For example let's show that 220 & 284 are amicable numbers:  First we find the proper divisors of 220: 1, 2, 4, 5, 10, 11, 20, 22, 44, 55, 110 If you add up all of these numbers you will see that they sum to 284. Now find the proper divisors of 284: 1, 2, 4, 71, 142 These sum to 220, and therefore 220 & 284 are amicable numbers.                               You should be able to declare a number is a amicable or not.   Number of cases will be < 10 The Input number is < 100,000   Input The first line of the input file contains the number cases followed by set of numbers one in each new line.   Output If the number is not an amicable number it should print no, if it is an amicable number it should print yes and the amicable number of it.   Example  Input: 4 1184 2620 3550 5020  Output: Yes, amicable with 1210 Yes, amicable with 2924 No Yes, amicable with 5564  
 An Armstrong number is a number that is equal to the sum of each of the individual digits that make up the number raised to the power of the number of digits the number has. you need to insert starting number and last number of the region you need to find Armstrong numbers. For example:  For an example get the armstrong number,153: 1^3 + 5^3 + 3^3 = 153.    Output Output should be armstrong numbers inside the given range.  Constraints  100 <= N <= 999   Example Input: 100 1000  Output: 153 370 371 407   Explanation You need to find all the armstrong numbers within given range. 
  Problem description: Write the 'lcs' function that takes two sequences and finds the length of longest common subsequence present in both.. Function prototype:  "int lcs( char *X, char *Y, int m, int n )"   A subsequence is a sequence that appears in the same relative order, but not necessarily contiguous. For example, “abc”, “abg”, “bdf”, “aeg”, ”acefg”, .. etc are subsequences of “abcdefg”. So a string of length n has 2^n different possible subsequences.  Example: Input:  ABCDGH  AEDFHR Final Output: 3  Interpretation : 	common 'ADH' subsequence is of of length 3.  Sample main function C/C++:  int main()  {     string string_X;     string string_Y;   cin >> string_X;   cin >> string_Y;  int m = string_X.length(), n = string_Y.length();  char * X = new char[m + 1];   char * Y = new char[n + 1];   strcpy (X, string_X.c_str()); strcpy (Y, string_Y.c_str()); printf("%d\n", lcs( X, Y, m, n ) );     getchar();    return 0;  } 
This is a simple game you must have played around with during your school days, calculating FLAMES of you and your crush! Given the names of two people, cancel out the common letters (repeated occurrence of a letter is treated separately, so 2A's in one name and one A in the other would cancel one A in each name), count the total number of remaining letters (n) and repeatedly cut the letter in the word FLAMES which hits at the nth number when we count from F in cyclic manner. For example: NAME 1: SHILPA NAME 2: AAMIR After cutting the common letters: NAME 1: SHILPA NAME 2: AAMIR Total number of letters left=7 FLAMES, start counting from F : 1=F, 2=L, 3=A, 4=M, 5=E, 6=S,7=F...So cut F FLAMES: repeat this process with remaining letters of FLAMES for number 7 (start count from the letter after the last letter cut) . In the end, one letter remains. Print the result corresponding to the last letter: F=FRIENDS L=LOVE A=ADORE M=MARRIAGE E=ENEMIES S=SISTER   Input The no. of test cases ( Output FLAMES result (Friends/Love/...etc) for each test case   Example  Input: 2 SHILPA AAMIR MATT DENISE   Output: ENEMIES LOVE        By: Chintan, Asad, Ashayam, Akanksha 
 Please use N,S,E,W in place of U,D,R,L. Laziness is the biggest and the only trait that our friend Kadka has. He is so lazy that even turning around is a pain in the leg [;)] for him. A complete idiot that he is, he cannot use his own mind and just follows directions. He is stuck in a maze and needs to get out. At every step he just follows the direction to the next position and thinks of nothing else. He always enters through the first row. The maze is like a grid  U 	R 	R 	D2 	L1 	R L10  L9	 L 	R3 	D4 	D D 	U8  	L7 	L6 	L5  	L  Where the numbers indicate the positions that were explored by Kadka.  R= Right L=Left U=Up D=Down  In this case he gets out in 10 steps.  D1	R	D11	L10	R R2	R3	D4	U9	L8 U	R	R5	R6	U7 L	R	D	R	L  In this case, after step 11, he enters into a loop he cannot exit.   Input No. of Test Cases And for each case there will be: I=no. of rows j=no. of columns k=the column through which Kadka will enter  (I,j,k less than equal to10) and the The grid to solve    Output For each case Number of steps taken to exit followed by letter ‘E’	OR  The size of the loop followed by letter ‘L’    Example  Input: 2 3 6 5 URRDLR LLLRDD DULLLL 4 5 1 DRDLR RRDUL URRRU LRDRL   Output: 10E 8L      By: Chintan, Asad, Ashayam, Akanksha  
You are moving from cities to cities in search of a treasure. There are N cities numbered from 0 to N-1. Initially you are at city no. 0 and Treasure you are looking for is at city number N-1. Each city is connected to two cities directly except for city number 0 and city number N-1 wich are connected to only one city directly. 0-->1-->2-->3-->4........-->N-1 As the journey from a city to another city is tiring you can pass at maximum d-1 cities without stopping. For eg. if you are at city 0 and d is 3 then you can move from 0 to 3 without stopping at city 1 or city 2. If you stop at any city you have to pay a certain amount of money M[i] to that city which varies from city to city. Given money required to pay for stopping at each cityy our task is to reach city number N-1 from city number 0 by spending minimum amount of money possible. Remember You can only start from city 0 if you pay the amount that should be paid to city 0. As you have to reach city N-1, you have to stop there, so you will have to pay the respected amount.     Input :  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. On the first line of every test case is given two space separated integers N and d.The next n lines that follow have positive integers <= 1000, representing the money to be paid at each city. These lines are listed, in order, from start to end city.    Output :  For each test case, output a single line containing.   Constraints  1 ≤ T ≤ 50 1 ≤ N ≤ 10000 1 ≤ D ≤ 5000     Example Input: 2 2 1 1 1 12 3 1 4 2 6 5 1 1 8 7 3 1 2  Output: 2 10 
Problem Description  Given a string, find the number of palindromic substrings of the string whose length is a prime number.The string consists only of lowercase english alphabet. These palindromes need not be distinct.   Input  The first line of the input contains an integer T denoting the number of test cases. Then, T lines follow. Each line contains a string. Note: N is the string length.  Output For each test case, output a single integer containing the answer to the corresponding test case.  Constraints 1 ≤ T ≤ 200 1 ≤ N ≤ 100000 (10^5)  Example Sample Input: 2 abac ababac  Sample Output: 1 4  Explanation Example case 1. The palindromic substrings in the string are "a","b", "a",and "aba". But only palindrome "aba" is of prime length . So, output is 1. Example case 2. The palindromic substrings in the string are "a", "b", "a" , "b", "a", "c", "aba", "aba", "bab", "ababa".The prime length palindromes are "aba", "aba", "bab", and "ababa"  . So, output is 4. Here, we take both “aba” and “aba” as two different palindromes. 
 Problem Description Deoria is a great city with Big malls. The city is full of intelligent people. The head of them is a boy named KOOL. He is very fond of roaming. He has a girlfriend named KOOLER. One day KOOL and KOOLER decided to visit the biggest mall of city but the mall has very weird entry criteria. A person cannot enter the mall without solving the puzzle.  The puzzle is as follows:   You are given a balanced binary tree of height H and infinite number of stones. You have to tell the minimum number of stones needed to visit the whole tree. Move the stones on the tree such that   whole tree is traversed. No nodes of the tree can be visited twice. Stone can be moved only along the edges between the nodes. Only one stone can be used for one traversing.   Help KOOL and KOOLER.   Input  The first line of the input contains an integer T denoting the number of test cases. Then, T lines follow. Each line contains an integer H( Height of the tree).  Output For each test case, output a single integer indicating the minimum number of stones needed  As answer can be very large so output number of stones % 1000000007 .  Constraints 1 ≤ T ≤ 100000 1 ≤ N ≤ 100000000 (10^9)  Example Sample Input: 1 1  Sample Output: 1 Sample Input: 1 2  Sample Output: 1 
Problem Description KOOL is back.   Now KOOL's girlfriend KOOLER left him because of some runtime issues.  To be precise the issue with KOOL is the following :   Being human he can remember only few number of  friends( Say it is N).  He forgets the friend he interacted least recent.  He makes new friend and forgets the old.  You have to mimic the KOOL's brain. You have to answer the queries. The queries are of following types :  1 I :  He interacted with friend having ID number=I. 2 I : Answer "YES" if KOOL can remember the friend with ID number = I otherwise "NO".   Input  The first line of the input contains an integer T denoting the number of test cases. Then,for every test case, first line contains two space separated integers N(Capacity of KOOL brain) and Q(number of Queries ) . Then Q lines contains the queries.  Output For each test case , output the answer of the every query of type 2.  Constraints 1 ≤ T ≤ 10 2 ≤ N ≤ 1000 (10^3) 1 ≤ Q ≤ 10000 (10^4) 1 ≤ I ≤ 10000 (10^4)  Example Sample Input: 1 2 5 1 1 1 2 1 3 2 1 2 2  Sample Output: NO YES  Explanation: Here the capacity of KOOL brain is 2. He interacts with 1->2->3 ID number friends. He forgot friend with ID number 1 and remember only 2,3. So answer is NO and then YES . 
 Your friend little Timo went to Bosonian school. The teacher gave her a homework to do. But, Timo is not that much intelligent for solving the homework. So, she asked you to solve her homework.  Your are given two rectangles A and B each of dimension NXM. There are NXM cells in each rectangle. The rows are numbered from 1 to N ,and the columns are from 1 to M. Each cell contains a number from 0 to 100.  You are given some queries in the following form. Given the upper left corner (x1,y1) and lower right corner (x2,y2) of sub rectangles of A and B. That is, the two sub rectangles are present at the same position in both of the rectangles A and B. You have to count the number of numbers matched in the corresponding cells of the sub rectangles. That is, A[i][j]=B[i][j], such that x1<=i<=x2, and y1<=j<=y2.   Input On the first line of every test case is given three space separated numbers N ,M and Q. Then, 2*N lines follows. Each line contains M numbers. The first N line corresponds to the first rectangle, and from (N+1)th to 2*Nth line corresponds to the second rectangle. Then, Q queries follow.  Each query contains four integers x1,y1,x2,y2.   Output For each test case, output Q lines containing the number of corresponding cells matched in the sub rectangles.   Constraints  1 ≤ T ≤ 20 1 ≤ N,M ≤ 1000 1 ≤ Q ≤ 1000 1 ≤ x1,x2 ≤ N 1 ≤ y1,y2 ≤ M x1<=x2 y1<=y2   Example Input: 1 2 2 2 1 2 2 2 1 3 2 2 1 1 2 2 1 1 1 2 Output: 3 1 
 Problem Description   This time Ignus 15 is back with amazing pronites. There are two ways for attending the pronites: 1. Buy the tickets (Or arrange for a pass). 2. Crack the entrance door lock. As Timo is on a budget (after Valentines' Day celebration), she can't go for the first option. Help her out with the second way. The problem is simple. The entrance door lock generates four random strings s1, s2, s3 and s4 of the same length n. You must find out the maximum possible length m of any string s so that: For 1 <= i <= m, there exist integers a(i), b(i), c(i) and d(i) belonging to [1, n] such that: s[i] = s1[a(i)] where a(1) < a(2) < a(3) ... < a(m) s[i] = s2[b(i)] where b(1) < b(2) < b(3) ... < b(m) s[i] = s3[c(i)] where c(1) < c(2) < c(3) ... < c(m) s[i] = s4[d(i)] where d(1) < d(2) < d(3) ... < d(m)   Input First line contains T, the number of test cases. Each test cases has 5 lines of input, the first line has the number n, length of the generated strings. The other 4 lines of a test case contain strings s1, s2, s3 and s4 respectively.    Output For each test case, print the value of m in a single line.    Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 30 All characters in all strings are lowercase English alphabets.     Example Input: 3 10 abcdefghij abcdefijgh ababckjdge cdeabcjdeg 2 ab ab ab bb 3 abb aba bab bab  Output: 5 1 2    Explanation  Case 1: abcde or abcdg can be the required string s here. So maximum length is 5 Case 2: The only possible string is b, therefore maximum length is 1 Case 3: ab is the only possible string. Hence, maximum length is 2  
 Problem Description   You are an army personnel in the great army of the Zorin race, where you are a part of a team of n people. Unfortunately, your army has lost a war to an intergalactic species, genetically much advanced than yours. Their captain Bruno have kept all your men (including you) as hostages, and now they are trying to have some fun. He asks each of the n people to choose any integer from 1 to n that is not taken by someone else. i.e. no two persons can have the same chosen number. Then he arranges all the n people in a circle sequentially and starts with person number 1. He leaves 1, shoots 2, leaves 3, shoots 4 .... and goes on shooting people alternately until only one person remains. He then offers the lucky man to restart his own kingdom and grants him all his looted resources. It is you who is asked first to choose your number k. What will you choose as your lucky number?   Input  First line contains T, the number of test cases. Each test case has the number n in a single line, denoting the number of people captured by Captain Bruno.     Output For each test case, print the value of k in a single line.    Constraints  1 ≤ T ≤ 100000 1 ≤ n ≤ 1000000000000000000     Example Input: 6 6 125 32 46 98 156   Output: 5 123 1 29 69 57    Explanation  Case 1: n = 6. In the first round 2, 4, 6 are killed, 1, 3, 5 remain. In next round 3 is killed. Then 1 is killed, therefore leaving 5. So answer = 5.  
  Problem description. Its Ignus and Timo wants to take part in BreakThrough which is the city wide treasure hunt. As a part of a task in the hunt Timo has to visit some malls in the city.  N malls were situated in a row. Timo has to visit K malls. But as she is running out of time she does not want to visit two consecutive malls.   How many different combinations of malls should Timo consider?   Input The first line contains an integer T - the number of test cases. Next follow T lines, each containing two space separated integers, N and K.  Output For each test case, output a single integer representing the number of combinations of malls.  Output the answer modulo 100003.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10^16 1 ≤ K ≤ 10^16     Sample Input: Input: 2 5 2 5 3 Output: 6 1    Explanation For the first test case: vovoo  voovo  vooov  ovovo ovoov oovov For the second test case: vovov where v are the visited malls.  
  Problem description.  Tima wants to contest for Mr. Ignus. But there are many obstacles which Tima must cross to become Mr. Ignus. Tima has qualified and passed all the tests and there remains a last test for him to complete  successfully. The task is as follows :  There are n judges. The  ith  judge have A[i] coins with him. Now Tima has to collect maximum coins from all the judges by following rules :. He can collect all the coins from any judge. If he collects coins from ith judge then he shouldn't have collected coins from the judge just before the current one.  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains a single integer N denoting the number of judges. The second line contains N space-separated integers, number of coins each judge has     Output   For each test case, output a single line containing maximum number of coins Tima can collect.     Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ T ≤ 10 0 ≤ N ≤ 100000 0 ≤ A[i] ≤ 1000000000     Example Input: 2 5 1 2 3 4 5 1 10  Output: 9 10    Explanation Example Case 1.He can collect 1st, 3rd and 5th coin to receive total of (1+3+5) 9 coins 
 A number is called a special number if it doesn't contain 3 consecutive zeroes. You have to calculate the number of positive integers of exactly d digits that are special. Print your answer modulo 1000000007.  Input  First line contains integer T, the number of test cases. Next t lines contain an integer, value of d for that test case.    Constraints  0 < T ≤ 100, 0 < d ≤ 10000  Output  A single line for each test case, with the count of such numbers.  Example  Input: 3 4 3 31  Output: 8991 900 334647494 
 There are B balls, numbered 1 to B. The Chef is distributing all B balls among B children, giving one ball to every child. He does that iteratively. In the first pass, starting from the first ball he gives out every alternate ball, in the second pass, he gives out every third ball starting from the first remaining ball, in the kth pass, he gives out every (k+1)th ball. He does this until all the balls are distributed. You have to output the number of last ball to be distributed.  Input  First line contains integer T, the number of test cases. T test cases follow. Each test case consists of a single line with the integer B.  Constraints   0 < T ≤ 100, 0 < B ≤ 100  Output  A single line for each test case, with the number of the last ball to be distributed.  Example  Input: 3 9 12 43  Output: 6 12 42 
   Problem Statement: Given an array, arr[] of size N followed by Q queries. A query will include two values L and R. For each query, print the sum of the elements from L till R for the given array, i.e Sum of arr[i] for each i such that L<=i<=R .  Input First Line : T, denoting the number of test cases Second line : N and Q Third Line : N integers, ith integer denoting the value of arr[i] Q lines follow : Each line has an L and R     Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 100000 1 ≤ L ≤ R≤ N 0 ≤ arr[i] ≤ 10^9     Example Input: 2 5 4 1 3 5 7 9 2 3 3 4 1 4 2 5 3 1 1 6 9 2 2  Output: 8 12 16 24 6    Explanation Test Case 1: 	Query 1 : 2 3 : Sum of 3 and 5 = 8 	Query 2 : 3 4 : Sum of 5 and 7 = 12 	Query 3 : 1 4 : Sum of 1, 3, 5 and 7 = 16 	Query 4 : 2 5 : Sum of 3, 5, 7 and 9 = 24 Test Case 2: 	Query 1 : 2 2 : Sum of 6 = 6  
 BANKOO'S PROBLEM  PROBLEM STATEMENT:  Bankoo is a serial bunker and always trys to bunk classes whenever possible. But as luck would have it, his college announced a new rule that a minimum percentage of attendance in each subject is necessary to write the semester examination. Thus, Bankoo wants to compute the maximum number of classes he can bunk so that he can still appear for the exams. But having bunked all the maths and programming classes in the previous semesters, he doesn't know much of programming and is unable to do the task. So, Bankoo seeks your help. Can you help him? You are given N subjects. For each of the subject, you are the given the number of classes and the minimum percentage of attendance required to write the semester examination for that particular subject. You are supposed to find the maximum number of the classes he can bunk for each of the subject. NOTE : Putting proxy is not allowed! :p  INPUT FORMAT : first line contains no of test cases T , T< 10000 first line of each test case contains N, the number of subjects. This is followed by N lines each having two integers, the first integer is the total number of classes for that subject and the second integer is the minimum percentage required to write the exam for that particular subject.   OUTPUT FORMAT : For each test case: The output consists of N lines, each line having an integer. The integer on the ith line  is maximum number of classes he can bunk for the ith subject.  Example 1 : Input: 1 2 2 50 7 30 Output: 1 4 Example 2: Input: 1 3 9 100 6 76 5 15 Output: 0 1 4 
 In Ancient Greece, Athenians and Spartans are two well known warring Tribes. One the occasion on Carnea, the two warring tribes come and celebrate the festival together. For the festival, the two have to stand in a line of length n (the n people will consist of both Spartans and Athenians without any restriction on number of athenians and spartans) and honor the Greek gods. But Spartans, being jealous of Athenians,  decided that they will always stand in contiguous groups of length L smaller than their sacred no. k (except 1) and also being coprime to it. Note: There can be multiple such contiguous groups in a line. However Athenians have no such demand and they can stand in whatever way they like. One day our Athenian Hero Aditya the D A /\/ G E R O U $ :P heard of this plan of Spartans and decided to count the total no of ways in which the line can be formed and announce it publicly during the festival to show them the knowledge of Athenians. But as you know he is lazy and busy playing CS your task is to help him determine the number of ways the line can be formed.  Input: The input consist of t testcases. Each testcase consist of two integers n and k separated by space.  Output: Output the total no of ways to arrange the Spartans and Athenians int the line.  Constraints: 1 <= T  <=10, 1 <=  N  <= 50, 1 <=  K  <= 10    Sample Input :  1 3 5    Sample Output :  4  The possible ways are AAA SSA ASS SSS where A denotes Athenians and S denotes Spartans. 
  Given a set of n numbers. A group is subset of these numbers such that all elements contained inside the group have gcd/hcf 1. Find the maximum possible value of size of such group.    Input First line contains a single integer t, representing the no of test cases. 	For each test case:- 		First line contains a single integer n,size of input array 		Second line contains n numbers a[1],a[2],.....,a[n]  Output For each test case output a single integer representing the required answer.    Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 20 1 ≤ arr[i] ≤ 10^6     Example Input: 3 3 3 4 5 4 2 4 8 16 4 2 3 4 8  Output: 3 0 4   Explaination:  Sample 1: HCF of 3,4,5 is 1. Hence group size = 3. Sample 2: No group possible whose HCF is 1.Hence 0. 
 Problem Description: You are given n integers. You have to delete minimum number of elements so that the remaining elements satisfy the property a <= 2 * b where a is the maximum value in the remaining elements and b is the minimum value in the remaining elements.   Input:  First Line: contains number of integers n. Second Line: contains n space seprated integers ai.   Output:   Print one integer, the minimum number of elements that will have to removed.   Constraints:  1 <= n <= 10^5 1 <= a[i] <= 10^5   Example Input: 6 3 7 4 5 3 8  Output: 2 Input: 4 3 2 4 4  Output: 0   Explanation Test Case 1 : 	In the first test case, one possible solution is you can remove 7, 8. 	So that minimum is 3 and maximum is 5. 	5 <= 2 * 3. 
  You're playing a video game, in which you will get an achievement if you complete all of the levels consecutively without dying. You can play the levels in any order, and each time you play a level you'll either complete it or die. Each level has some probability that you'll complete it, and takes some amount of time. In what order should you play the levels so that the expected time it takes you to get the achievement is minimized? Assume that it takes equally long to beat a level or to die in it, and that you will start again from the first level in your ordering as soon as you die.  Note: If you fail to complete a level, you do not personally die—only your character in the game dies. If that were not the case, only a few people would try to earn this achievement.     Input The first line of the input gives the number of test cases, T. T test cases follow, each of which consists of three lines. The first line of each test case contains a single integer N, the number of levels. The second line contains N space-separated integers Li. Li is the number of seconds level i lasts, which is independent of whether you complete the level or die. The third line contains N space-separated integers Pi. Pi is the percent chance that you will die in any given attempt to complete level i.   Output For each test case, output one line containing "Case #x: ", where x is the case number (starting from 1), followed by N space-separated integers. The jth integer in the list should be the index of the jth level you should attempt to beat in order to minimize the amount of time you expect to spend earning the achievement.  Indices go from 0 to N-1. If there are multiple orderings that would give the same expected time, output the lexicographically least ordering. Out of two orderings, the lexicographically smaller one is the one with the smaller index at the first location where they differ; out of many orderings, the lexicographically least one is the one that is lexicographically smaller than every other ordering.   Limits  1 = T = 100. 0 = Pi < 100.   Small dataset  1 = N = 20. Li = 1.   Sample  Input 3 4 1 1 1 1 50 0 20 20 3 100 10 1 0 50 0 3 100 80 50 40 20 80  Output Case #1: 0 2 3 1 Case #2: 1 0 2 Case #3: 2 0 1   Note that the second and third samples do not satisfy the constraints for the small input. 
  You are given two vectors v1=(x1,x2,...,xn) and v2=(y1,y2,...,yn). The scalar product of these vectors is a single number, calculated as x1y1+x2y2+...+xnyn.  Suppose you are allowed to permute the coordinates of each vector as you wish. Choose two permutations such that the scalar product of your two new vectors is the smallest possible, and output that minimum scalar product.    Input The first line of the input file contains integer number T - the number of test cases. For each test case, the first line contains integer number n. The next two lines contain n integers each, giving the coordinates of v1 and v2 respectively.  Output For each test case, output a line Case #X: Y where X is the test case number, starting from 1, and Y is the minimum scalar product of all permutations of the two given vectors.   Small dataset  T = 1000 1 = n = 8 -1000 = xi, yi = 1000   Sample  Input 2 3 1 3 -5 -2 4 1 5 1 2 3 4 5 1 0 1 0 1 Output Case #1: -25 Case #2: 6  
  I want to make an online poker website. A very important component of such a system is the random number generator. It needs to be fast and random enough. Here is a compromise I came up with. I need a way to generate random numbers of length at most D. My plan is to select a prime number P = 10D. I am also going to pick non-negative integers A and B. Finally, I'm going to pick an integer seed S between 0 and P-1, inclusive.  To output my sequence of pseudo-random numbers, I'm going to first output S and then compute the new value of S like this: S := (A*S + B) mod P.  Then I will output the new value of S as the next number in the sequence and update S again by using the same formula. I can repeat this as many times as I want.  Do you think that this is a good random number generator? Can you write a program that takes K consecutive elements of a sequence that was generated by my random number generator, and prints the next element of the sequence?     Input The first line of the input gives the number of test cases, T. T test cases follow. Each one starts with a line containing D and K. The next line contains K consecutive elements generated by a random number generator of the kind described above.  Output For each test case, output one line containing "Case #x: y", where x is the case number (starting from 1) and y is either the next number in the sequence, or the string "I don't know." if the answer is ambiguous.   Limits  1 = T = 100. 1 = K = 10. The K integers will be consecutive elements of a sequence generated by a random number generator of the type described above.   Small dataset 1 = D = 4.  Sample  Input 3 2 10 0 1 2 3 4 5 6 7 8 9 3 1 13 1 5 6 6 6 6 6 Output Case #1: 10 Case #2: I don't know. Case #3: 6  
  You receive a credit C at a local store and would like to buy two items. You first walk through the store and create a list L of all available items. From this list you would like to buy two items that add up to the entire value of the credit. The solution you provide will consist of the two integers indicating the positions of the items in your list (smaller number first).    Input The first line of input gives the number of cases, N. N test cases follow. For each test case there will be:  One line containing the value C, the amount of credit you have at the store.  One line containing the value I, the number of items in the store.  One line containing a space separated list of I integers. Each integer P indicates the price of an item in the store. Each test case will have exactly one solution.   Output For each test case, output one line containing "Case #x: " followed by the indices of the two items whose price adds up to the store credit. The lower index should be output first.  Limits  5 = C = 1000 1 = P = 1000   Small dataset  N = 10 3 = I = 100   Sample  Input 3 100 3 5 75 25 200 7 150 24 79 50 88 345 3 8 8 2 1 9 4 4 56 90 3 Output Case #1: 2 3 Case #2: 1 4 Case #3: 4 5  
 You will be given a string of lowercase English alphabet letters. You have to find two palindrome which are non-overlapping subsequences such that the product of their lengths is maximised.  (Subsequence: It is a string derived from deleting some elements without altering order. AC is a subsequence of ABCD; BA is not.)  Let's say P and Q be two subsequences. Pi and Pj are the indices of first and last characters of P, in basic string (Similar definition for Qi and Qj).They are non-overlapping if Pj < Qi. In other words, the first character in subsequence Q should come only after complete appearance of subsequence P.  Basic string can have almost 3200 characters.  I/p format: Input contain one string only(Sequence of non-separated characters).  output The product value for each String.  Sample Input: aaapaaskmywbcaajjaacb  Sample Output: 50  Reason: P:- aaaaa (5) Q:- bcaajjaacb (10) 5*10 = 50 
 Freakin' news has recently claimed that they have discovered a civilization on mars and that they have established contact with the martians. Following is a summary of the dawn hour breakin' news on freakin' news :  Occassionally, the martian ministers feel the need to please their king. For this purpose, they give the king a trivial problem to solve and heap excessive praise upon him when he presents the correct solution.  This time they have given the king the following problem : Given two positive integers n,k and n numbers a[1],a[2],...a[n] find the maximum of (b[1]a[1]+b[2]a[2]+.....b[n]a[n]) subject to the restrictions : 1) b[i] is either 1 or (-1), for all i, 1 ≤ i ≤ n. 2) Exactly k b[i]'s are 1. The remaining (n-k) b[i]'s are (-1).  To make the task even easier for the king, the ministers have given the king the sequence a[1],a[2],...a[n] sorted in non-decreasing order.   The king, being lazy, has outsourced the task to freakin' news. Your job is to do this task for freakin' news.   Input Format :  The first line of input contains a single integer n. The next line consists of n space seperated integers a[1], a[2], ... a[n]. The sequence a is guaranteed to be sorted in non-decreasing order.   Output Format :  On the only line of output, output a single integer : the maximum of (b[1]a[1]+b[2]a[2]+.....b[n]a[n]) subject to restrictions 1 and 2.   Constraints :  2 ≤ n ≤ 100 0 ≤ k ≤ n |a[i]| ≤ 1000 The sequence a is sorted in non-decreasing order i.e. a[1] ≤ a[2] ≤ .... ≤ a[n]   Sample Input : 2 1 -4 -4   Sample Output : 0   Sample Input : 2 0 -2 5   Sample Output : -3   Explanation : 1 : There are two possibilities for the sequence b : (+1,-1) and (-1,+1). Both lead to sum 0. 2 : There is only one possibility for the sequence b : (-1,-1). This leads to the sum -3. 
Freakin' news has recently claimed that they have discovered a civilization on mars and that they have established contact with the martians. Following is a summary of the breakfast hour breakin' news on freakin' news : The king of the martians wants to conduct a martian football tournament.  There are n football teams participating in the tournament numbered form 1,2,...n. The martian sports analysts have rated the teams according to footballing ability and team i has been assigned integer rating a[i]. (a[i]'s might be negative.)  The tournament is conducted as follows : A permutation f of (1,2,...n) is taken as reference. All pairs of teams with team numbers adjacent in the permutation f play exactly one match in the tournament. More formally, (n-1) matches are played in the tournament and the ith match is played between teams f(i) and f(i+1).  The disparity of a match is the absolute difference in the ratings of the two teams playing the match. The disparity of the tournament is the sum of the disparities of all matches in the tournament.  The king of the martians likes to see routs more than close contests and is therefore interested in maximizing the disparity. The king wants to select a permutation f so as to maximize the total disparity of the tournament.  For this purpose he has asked freakin' news to find out the maximum possible disparity of the tournament given the number of teams and their ratings. Your job is to do this task for freakin' news. [In case you were wondering who wins the tournament, the winner is the team which the queen thinks is the most adorable. That however, is irrelevant to your task.]   Input The first line of input contains a single integer n. The next line consists of n space seperated integers a[1], a[2], ... a[n] : the team ratings.   Output On the only line of output, output a single integer : the maximum possible disparity of the tournament.   Constraints 2 ≤ n ≤ 1000 |a[i]| ≤ 100000  Sample Input 1: 2 6 -4   Sample Output 1: 10   Sample Input 2: 3 3 5 7   Sample Output 2: 6   Explanation: 1 : Absolute disparity of 10 can be obtained by the permutations (1,2) and (2,1). 2 : Absolute disparity of 6 can be obtained by the permutations (1,3,2), (2,1,3), (2,3,1) and (3,1,2). Consider the permutation (2,1,3) in the second sample test case. The absolute disparity in this test case is | a[2]-a[1] | + | a[1]-a[3] | = |5-3| + |3-7| = 6 
Freakin' news has recently claimed that they have discovered a civilization on mars and that they have established contact with the martians. Following is a summary of the tea hour breakin' news on freakin' news : Every morning, the martian king determines his lucky number(s) for the day using the following unusual algorithm : Select a positive integer n. Write out a permutation f of (1,2,...n) on a board from left to right. (f(1) is leftmost, f(n) is rightmost). While 3 or more numbers remain on the board 	Erase all numbers at position i from the left for which i is a power of 2. The number(s) which remains(remain) at the end is(are) the lucky number(s) for the day.  (Note : It is trivial to prove that either 1 or 2 numbers remain at the end.)  The king has asked freakin' news to write a program which determines the lucky numbers for the day given n and f. Your job is to do this task for freakin' news.  Input The first line of input contains a single integer T : the number of test cases. Lines 2,3,...2T+1 describe the test cases (Test case i is described by the lines 2i and 2i+1). The first line of each test case contains the single integer n. The next line consists of n space seperated integers f(1), f(2), ... f(n). It is guaranteed that (f(1),f(2),...f(n)) is a permutation of (1,2,...n).  Output For each test case output a single line as follows : If 1 number remains at the end : 	On the only line of output, output a single integer : the lucky number for the day. If 2 numbers remain at the end : 	On the only line of output, output two space seperated integers : the two lucky numbers for the day. The two numbers must appear from left ro right in the same order in which they appeared in the input.  Constraints  1 ≤ T ≤ 10 1 ≤ n ≤ 100000 (f(1),f(2),...f(n)) is a permutation of (1,2,...n).  Sample Input 2 4 4 1 2 3 9 8 6 9 3 4 7 1 2 5  Sample Output 2 7 5  Explanation 1 : Initial 4 1 2 3 After Round 1 2 2 : Initial 8 6 9 3 4 7 1 2 5 After Round 1 9 4 7 1 5 After Round 2 7 5 
Freakin' news has recently claimed that they have discovered a civilization on mars and that they have established contact with the martians. Following is a summary of the midnight hour breakin' news on freakin' news : Playful Configuration A configuration of n coins placed in a 2 × n grid (2 rows, n columns) such that every column contains exactly one coin is called a playful configuration. (Coins can only be placed inside a cell, and not on the boundary of two cells. Every coin is facing either heads-up or tails-up.) One can update a playful configuration in the following ways : 1)  switch(i, j) , where 1<=i<=j<=n : For all integers r such that i<=r<=j, do the following : If there is a coin at (1, r), remove it and place it, facing same side up at (2, r). Otherwise remove the coin at (2, r) and place it, facing same side up at (1, r). 2)  flip(i, j) , where 1<=i<=j<=n : For all integers r such that i<=r<=j, do the following : Flip the coin in column r without changing its position. (If the coin is initially facing heads-up then after flipping it will face tails-up and vice versa.) One can query a playful configuration in the following way : query(i, j) , where 1<=i<=j<=n : Let h1 be the number of integers r such that i<=r<=j and there is a coin facing heads-up at (1,r). Let h2 be the number of integers r such that i<=r<=j and there is a coin facing heads-up at (2,r). Let t1 be the number of integers r such that i<=r<=j and there is a coin facing tails-up at (1,r). Let t2 be the number of integers r such that i<=r<=j and there is a coin facing tails-up at (2,r). query(i, j) returns h1,h2,t1 and t2. The king of mars plays the following game every month : He arranges n coins in a playful configuration. Initially all coins are in the first row (facing either heads-up or tails-up). He periodically performs operations on the configurations. Each operation is either an update (flip or switch) or a query. Any player who responds correctly to each query wins a large prize. Unfortunately, the game is too difficult and no player has yet won the coveted prize.  This month however, one of the ministers has gained access to the initial configuration as well as a list of all the operations. The minister has asked freakin' news to help him answer all queries correctly. Your job is to do this task for freakin' news.  Input Format The first line contains a single integer n : The number of coins in the playful configuration.  The next line contains n space seperated integers f[1],f[2],...f[n] which describe the inital state of the coins. The coin in column i is initially at (1,i). If f[i] is 1, the coin at (1,i) is initially facing heads-up. Otherwise, the coin at (1,i) is initially facing tails-up.  The next line contains a single integer m : The number of operations.  The k'th of the next m lines contains 3 integers op,i,j which describe the k'th operation. Each operation is described as follows : If op is 0, the operation is query(i,j). If op is 1, the operation is flip(i,j). If op is 2, the operation is switch(i,j).  Output Format  For each query, the program must output a single line consisting of 4 space seperated integers h1, h2, t1 and t2.  Constraints  1<=n<=100000 Each f[i] is either 0 or 1. 1<=m<=100000 For each operation, op is either 0,1 or 2. For each operation, 1<=i<=j<=n.  Sample Input  10 1 1 1 1 1 0 0 0 0 0 5 0 1 7 2 3 5 0 1 7 1 1 10 0 1 7  Sample Output  5 0 2 0 2 3 2 0 2 0 2 3  Explanation At the time of the first query, the configuration is : H H H H H T T T T T E E E E E E E E E E  At the time of the second query the configuration is : H H E E E T T T T T E E H H H E E E E E At the time of the third query the configuration is : T T E E E H H H H H E E T T T E E E E E 
  Bertie Bott's Every Flavour Beans are available in f different flavours, numbered from 1 to f. (Contrary to intution, f is finite. In fact 2<=  f <=10^8.) One of the displays of Bertie Botts Every Flavour Beans at the Leaky Cauldron has N (1<= N <=10^8) slots numbered from 1 to N arranged in a sequence. Each slot can contain a jar full of beans of the same flavour. Currently, the display consists of alternating jars of flavours 1 and 2 starting with a jar of flavour 1. It is desired to transform it to one consisting of alternating jars of flavours 1 and 2 starting with a jar of flavour 2. For example if N In one operation, one can pick a slot s (1<= s <=N) and a flavour e (1<= e <=f) and replace the jar currently at slot s with a jar of beans of flavour e. Since, the primary selling point of the beans is the variety of flavours available, all states of the display in which two adjacent slots contain jars with beans of same flavour are undesirable. All other states are desirable. Your task is to find the minimum number of operations which convert the initial state to the target state such that all intermediate states of the display are desirable.  Input The first line of input contains a single integer T, the number of test cases. T lines of input follow, each containing two space-seperated integers, N and f.  Output Output should consist of T lines. Each line must contain a single integer, the answer to the ith test case.  Constraints 1<=T<=1000 1<=N<=10^8 2<=f<=10^8   Example Input: 2 4 5 5 2  Output: 6 -1   Explanation 1) One optimal sequence of operations is as follows: (1,2,1,2)->(1,3,1,2)->(1,3,4,2)->(2,3,4,2)->(2,3,4,1)->(2,1,4,1)->(2,1,2,1). 2) Since only 2 flavours are available, it is easy to see that the desired transformation from (1,2,1,2,1) to (2,1,2,1,2) cannot be realised. 
As a project for her arithmancy class, Hermoine has designed a magical plate which contains a sequence of N numbers which permutes according to a fixed permutation everyday. We denote the sequence of numbers on the ith day as A[i][1], A[i][2], ... A[i][N].f[1],f[2]...f[N] is a fixed permutation of (1,2,..N). The sequence A[i+1][1],A[i+1][2],...A[i+1][N] is the result of applying the permutation f[1],f[2],..f[N] to the sequence A[i][1],A[i][2],...A[i][N]. See the sample input for clarity. The arithmancy teacher has asked Hermoine to report the sequence of numbers that she started with. Hermoine has forgotten the original sequence. Ron wants to impress Hermoine because well, she's gorgeous! He knows the number of days K that have passed since the design of the magical plate, the current sequence of numbers and the fixed permutation f. He now wants to find out the original sequence of integers on the magical plate.  Input The first line of input contains a single integer T, the total number of test cases. 3*T lines follow, 3 corresponding to each test case. The first line of each test case contains 2 space-seperated integers N,K. The second line contains N space-seperated integers : A[K][1], A[K][2], ... A[K][N]. The third line also contains N space-seperated integers : f[1], f[2], ... f[N]. It is guaranteed that f[1],f[2],...f[N] is a permutation of (1,2,...N).   Output The output must consist of T lines, one corresponding to each test case. Corresponding to each test case output in a single line N space-seperated integers : A[0][1], A[0][2], .. A[0][N]. It is trivial to note that the solution exists and is unique.  Constraints 1 <= T <= 10 1 <= N <= 1000 0 <= K < N 1 <= A[K][i] <= 10^9 1 <= f[i] <= N f[i] != f[j] for all i,j st 1 <= i < j <= N.    Example Input: 1 5 2 200 100 500 300 400 3 4 5 1 2  Output: 100 500 300 400 200   Explanation (100,500,300,400,200) -> (300,400,200,100,500) -> (200,100,500,300,400)  
Recently, Hogwarts School of Witchcraft and Wizardry has introduced a course on coumputer programming! As a result, many programming duels now take place in Hogwarts. Lucius Malfoy has challenged Harry Potter to one such programming duel.  The rules of the duel are as follows: 1) Malfoy chooses two integers N(>0) and K( ≥ 0) and a sequence S of N positive integers. 2) Harry must find the number of distinct non-empty subsequences L of S such that no two integers in L have an absolute difference greater than K. Since this number may be very large, Harry must report this number modulo (10^9+7).  Input Input will begin with an integer T, the total number of test cases. Description of T test cases follows. Each test case is described by two lines of input. The first line of each test case will consist of two space-seperated integers : N,K. The second line will contain N space seperated integers : S[1],S[2], ... S[N].  Output For each test case output a single integer : The number that Harry must report to Malfoy.  Constraints 1 <= T <=5 1 <= N <= 10^5 0 <= K <= 10^9 1 <= S[i] <=10^9  Example Input:  2 3 1 10 11 12 5 6 12 27 1 13 14  Output:  5 9   Explanation CASE 1 : Possible subsequences : (10), (11), (12), (10,11), (11,12). CASE 2 : Possible subsequences : (12), (27), (1), (13), (14), (12,13), (12,14), (13,14), (12,13,14). 
Voldemort has now cast a new kind of spell named 'Illusio'. This spell creates the illusion that he is at multiple locations at the same time. Since Harry does not know the location of the real Voldemort, he must destroy all his illusions in order to win. Assume there is a 2-dimensional square grid with illusions spread across it. Outside the grid, on the boundary, stands Harry Potter. Harry can quickly reach the exterior of any row or column and cast a spell which will destroy all the illusions in that row or column. Realizing that he has very little strength left, he must cast as few spells as possible and destroy all the illusions. Your job is to help him determine the minimum number of spells he will need to destroy all the illusions in the grid and win the duel.  Input The first line of the input contains an integer N denoting the length of the square grid. The second line contains an integer T denoting the total number of illusions in the grid. Then follow T lines, the ith of which contains 2 space-separated integers R[i] and C[i] denoting the (1-based) row and column coordinates of the ith illusion.  Output A single integer denoting the minimum number of spells needed to destroy all of Voldemort's illusions as per the problem statement.  Constraints 1 <= N <= 100 1 <= T <= N*N 1 <= R[i], C[i] <= N For all 1 <= i < j <= T, either R[i]!=R[j] or C[i]!=C[j], that is to say that the locations of all the T illusions are distinct  Example Input: 4 3 1 3 2 1 4 3  Output: 2   Explanation Since the illusions at (1,3) and (4,3) are both located in column 3, they can be destroyed with a single spell if Harry casts it on column 3. The illusion at (2,1) can be destroyed with another spell either by casting it on row 2 or column 1. This makes a total of 2 spells. It is easy to see that 2 is the least possible number.  
  John Watson always knew that one of the favourite hobbies of Sherlock Holmes was to tinker with ciphers. Though Watson was not that good with ciphers, he learnt a few  things being with him. Right now, Watson is in trouble! He has been locked in a room and the only way to get out of the room is through deciphering a known string to get the password. With his knowledge, he finds out that a given string S can be deciphered with a given cipher array A (1-based index) of same length N as follows: Starting from first number in A (i.e. i=1) the 'i'th character in S, has to be swapped with A[i]th character in S. Help him to get out of the room.     Input  First line contains no of test cases T. The description of T test cases follows. Each test case consists of 3 lines: Length of string N in the first line, the known  string S in the second line, and N space-separated integers of array A in the third line.   Output  For each test case, output in a single line the deciphered text.     Constraints  1 ≤ T ≤ 100 1 ≤ N ≤ 10^5 1 ≤ A[i] ≤ N Sum of N across all the test cases in a test file will not exceed 10^6 String S contains only lower case English letters     Example Input:  3 5 abcde 1 2 3 4 5 6 fluxus 6 5 4 3 2 1 8 hrcksleo 5 5 7 5 6 8 7 8   Output:  abcde fluxus sherlock   
  Watson, from one of his programmer friends, finds out about the site codechef. Fascinated by the questions, he decides to make a question himself. He defines a pair of numbers (x,y) a perfect pair if at least one of the numbers is greater than a given number K. Now he wants to find out that given an array A (1-based index) of size N, and an operation (defined below) what should be the minimum number of operations required to make every possible pair in the array perfect. The only operation which can be done on the array is as follows: Select two distinct indices i, j (1 <= i <= N and 1 <= j <= N) and replace one of A[i] or A[j] with A[i]*A[j]. Now he challenged Sherlock to solve this problem. As Sherlock is busy with his cases, help him to find the answer.     Input  First line contains no of test cases T. Each test case has 2 lines. First line has two integers N and K seperated by space. Second line has N numbers seperated by space, where ith integer is A[i].    Output  For each test case, print in a single line, the minimum number of operations required for that case. If it is not possible to make every pair in an array perfect then output -1.     Constraints  1 ≤ T ≤ 100 2 ≤ N ≤ 10^5 0 ≤ A[i] ≤ 10^9 0 ≤ K ≤ 10^9 Sum of N across all the test cases in a test file does not exceed 10^6     Example Input:  2 5 25 4 3 2 1 5 5 25 0 0 3 4 5   Output:  5 -1  
   After a long series of jobless days, Sherlock and Watson frustated by the lack of new cases, decide to turn their minds toward something interesting like solving few logical problems. One of the problems they have to solve now is as follows: Given an array A of size N and a list of Q number of queries, where each query has two numbers L and R, find for each query the number of inversions in the subarray from Lth to Rth position (both inclusive) of the array A( array has 1-based index). For an array A two elements A[i] and A[j] form an inversion if A[i] > A[j] and i < j. Help them to solve this problem.     Input  First line contains a single integer, length N of the array. Second line has N space separated numbers, where ith element is A[i]. Third line has a single integer Q. Next Q lines have 2 space separated integers L and R of that query.   Output  Output Q lines, ith line having a single integer, the answer to the ith query     Constraints  1 ≤ N ≤ 20000 0 ≤ A[i] ≤ 10^9 1 ≤ Q ≤ 20000 1 ≤ L ≤ R ≤ N     Example Input:  7 7 9 3 5 1 6 4 4 1 4 3 5 1 2 1 7   Output:  4 2 0 14  
   Sherlock and Moriarity are again back in game. This time Moriarity transformed himself as an impersonator and made his own K number of clones, each of them hidden at K different locations in the City. Sherlock observed that City, having N number of locations, has the structure of a tree with N number of nodes and each node represents a distinct location in the city. Now Sherlock is interested in finding the total number of subtrees which contain all the K locations where Moriarity's clones are hidden. Help him find the answer. Since the answer can be very large, print the answer modulo 10^9 + 7.  Note : In this problem, the tree is unrooted, so a subtree simply means a connected subset of nodes.  Input  The first line of input contains the number of test cases T. T test cases follow: For each test case, first line contains N, the total number of locations. Next N-1 lines contains two numbers u and v, signifying there is a path between u and v. Next line contains K, followed by distinct K number of locations where Moriarity's clones are hidden.   Output  For each test case, output in a single line the total number of subtrees which contain all the K locations where Moriarity's clones are hidden.     Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 10^5 0 ≤ K ≤ N     Example Input:  1 4 1 2 2 3 3 4 2 2 4   Output:  2  
   Sherlock: "Why are you doing this?" Moriarty: "I like to watch you dance." Sherlock is now facing the biggest challenge of his life. Having placed bombs in various important checkpoints in London, Moriarty is planning to have more than his share of fun. Sherlock has deduced that the checkpoints form a network with the property that it is possible to reach any checkpoint from any other checkpoint, using a unique path. Moriarty has assigned an initial value to every checkpoint. Furthermore, he can choose any pair of checkpoints (A,B), and add a constant C to the value of every checkpoint on the path from A to B (both inclusive). This addition is done modulo 10. At any point of time, Moriarty can ask Sherlock to answer how many checkpoints on the path between a given pair of checkpoints (both inclusive), have a prime number value. Even a minor error in Sherlock’s answers, will lead to the bombs being triggered. Realizing the intensity and magnitude of the task, Sherlock decides to outsmart Moriarty by writing a computer program. It is your job to help Sherlock protect London from destruction.     Input  The first line of the input contains the number of checkpoints in the network: N The second line contains N space separated integers Vi denoting the initial value of every checkpoint The next N-1 lines contain space-separated integers u v, to signify an edge between checkpoints u and v The next line contains the number of operations: Q The next Q lines each contain one of two types of operations given below:  0 A B – This denotes a query operation to return the count of prime values on checkpoints in the unique path from checkpoint A to checkpoint B (both inclusive). 1 A B C – This denotes an update operation of adding C to the value on each of the vertices on the unique path from checkpoint A to checkpoint B (both inclusive). This addition is performed modulo 10.   Output  For each query of the form 0 A B, print on a separate line, the total number of primes on vertices in the unique path from A to B (both inclusive).     Constraints  2 ≤ N ≤ 100000 0 ≤ V[i] ≤ 9 1 ≤ u,v ≤ N 1 ≤ Q ≤ 100000 1 ≤ A,B ≤ N 1 ≤ C ≤ 10000 A is not equal to B     Example Input:  10 1 0 0 9 1 7 2 3 3 7 3 7 1 8 10 5 8 4 5 1 9 7 6 7 2 7 7 4 5 0 1 10 0 2 4 0 4 10 1 5 3 3714 0 1 8    Output:  1 1 2 2   
 A country has V cities. Certain pairs of cities are connected by undirected transport roads between them. There are E such transport roads. There exists a sequence of roads connecting every city in the the country to every other city. Among the V cities, K of the cities are good cities.   Initially all the cities are free. The country is ruled by two kings. The first king wants no friendship with the second king, while the other king wants friendship with the first king. They now play a game of conquering cities.   The first king selects a good city, then the second king selects a good city and so on; until all the good cities are over. Suppose at the end some good cities belong to kingdom A and others to B. Distance value between the two kingdoms is defined as the sum of shortest distances between each pair of good cities X and Y such that X belongs to A and Y belongs to B.   The first king wants to maximize the distance value and other king wants to minimize this. Assuming that both play optimally, find out the distance value after the end of the game.   Input  First line contain three space separated integers denoting V, E, and  K respectively.   For next E lines, each line contain 3 space separated integers, u v w, denoting that there is an edge from u to v of length w.   The following line contains K space separated integers denoting the indices of the good cities. Indices are given by using 1 based indexation.   Output  A single integer, the maximum possible distance that can be achieved if both kings play optimally.  Constraints  2 ≤ V ≤ 200 No constraint on E 2 ≤ K ≤ 12 0 ≤ w ≤ 100 1 ≤ u, v ≤ V No two u, v pairs repeat in input.   Example Input: 4 5 3 1 2 5 1 3 2 1 4 3 2 4 2 3 4 2 1 2 4   Output: 7 
   Awesomeness of a string is defined by a pair of a character C and an integer F,  satisfying the following conditions :   C must belong to the  given string S and there must be a substring subS of S having length equal to F such that all the characters in subS are equal to c.   F should be as large as possible.    	Your aim is to maximize the value of F. If there are more than one c whose maximum F value is same than you need to chose the character c 	with minimum ascii value.   	For example let’s take S = abbbaaabad. subS is written in bold.   Take c = ‘a’ : Maximum possible F value is 3 (abbbaaabad).   Take c = ‘b’: Maximum possible F value is 3 (abbbaaabad).   Take c = ‘d’: Maximum possible F value is 1 (abbbaaabad).    So that awesomeness of  abbbaaabad is defined by c = ‘a’ and F = 3. First priority is to maximize the value of F (we prefered 3 over 1). If there are more than one c whose maximum F value is same then we prefer the c with minimum ascii value (we prefered ‘a’ over ‘b’).   You will be given a string and you need to find its awesomeness.   Input  Only line of the input will contain a string S.   Output  Output two lines. First line should contain value of c, whereas second line should contain value of F.   Constraints  1 ≤ length of string S ≤ 10^5  S contains only lowercase alphabets of English Language (i.e. from 'a' to 'z').   Example Input: abbbaaabad  Output: a 3  Explanation Example case 1. Example taken from problem statement 
 A country has N cities with certain population in each city. These cities are internally connected by two-way power cables. Among them, K cities have powerhouses. If a powerhouse is in a city, or is connected to another city via cables, directly or indirectly, you can provide electricity to that city, if you own the powerhouse. Initially X (X≤K) of the powerhouses are owned by you. Each powerhouse costs something, and the cost is given to you. You can sell any power house that you own, at the cost of the powerhouse. You can buy a powerhouse which you don’t yet own, at it’s mentioned cost, if you have enough money. In your bank account you have some money, say M (apart from the powerhouses you own). You want to satisfy maximum number of people, by buying and selling appropriate powerhouses. Find the maximum number of people that can be satisfied.  Input   First line of the input contains three space separated integers N , E and K. N represents number of cities, E denotes the number of connections and K represents number of cities having powerhouses.    Next E lines each contains two integers u and v representing that there is a connection between city u and city v. There won’t be any duplicate connection. u won’t be equal to v.    Next line contains N space separated integers denoting the population of each city.    Next line contains K space separated integers. Each integers denote a city containing powerhouse. All K cities will be distinct and valid. Powerhouses are numbered from 1 to K (in the order in which they are provided).    Next line contains K space separated integers denoting the cost of the corresponding powerhouse (ith integer denotes the cost of the ith powerhouse).    Next line contains two integers X and M. X represents number of powerhouses that you own and M represents the amount of money that you have in your bank account.    Next line contains X space separated integers denoting which of the X powerhouses among the given K powerhouses you own. Integer X_i means you  own X_i th powerhouse.   Output  One integer in a single line denoting the maximum number of people that you can satisfy.   Constraints  1 ≤ N ≤ 100000 1 ≤ u, v ≤ N 1 ≤ E ≤ 200000 1 ≤ K ≤ 31  1≤ X ≤ K  1 ≤ X_i ≤ K Population of each city will be less than or equal to 1000000 Cost of a powerhouse will be less than or equal to 1000000000. 0 ≤ M ≤ 32000000000   Example Input: 6 6 2 1 2 1 3 1 4 2 4 3 4 5 6 5 3 11 7 2 18 4 5 115 100 1 14 2 Output: 20   Explanation   There are 6 cities numbered from 1 to 6 having population at the cities 5, 3, 11, 7, 2 and 18 respectively.  2 cities, city 4 and city 5 contains powerhouse. Cost of the powerhouse located at city 4 is 115 and cost of the powerhouse located at city 5 is 100.  Powerhouses are numbered. Meaning 1st powerhouse corresponds to powerhouse located at city 4 and 2nd powerhouse corresponds to the powerhouse located at city 5.  You own one of the powerhouses and have additional balance of 100 in your bank account.  2 in the next line means you own the 2nd powerhouse (i.e., powerhouse located at city 5 having cost 100).  Since you already own powerhouse 2 and you do not have suffcient balance to buy powerhouse 1 (because it costs 115 but you have only 14 in your account. You can not buy that powerhouse even if you sell the powerhouse that you own. Because that will fetch you only 100 more so you will have total of 114 which is not enough to buy the first poerhouse).  Since the 2nd poerhouse, that you own, is connected to city 5 and city 6 you can satisfy atmost 2 + 18 = 20 people.  
 Electric town has only N electricity powerhouses. All these powerhouses do is generate power and transmit it to other powerhouses.   Also there are unidirectional power cables between these powerhouses. These cables go in one direction from powerhouse X to powerhouse Y.   Each of these cables also have a maximum integral capacity, which is an upper limit on the amount of power they can transfer. These capacities will be given.   Now, say a powerhouse receives R amount of power from other powerhouses, and gives out a total of S amount of power out to other powerhouses. Further, suppose it generates G amount of power. Then the amount of power going out of the powerhouse should be the sum of the power it receives, and the power it generates. That is, S = R + G. Since electric town is a very advanced town, G could be anything (non negative).   You are Jaylal, a mafia in the town, and you have a special superconducting (again unidirectional) cable. This cable has infinite capacity, and can hence transfer any amount of electricity. You can connect this cable between from powerhouse A to powerhouse B, and since you control this cable, you will obtain the electricity that flows through this cable. You add this cable to the network, and the powerhouses continue to transmit power in the same fashion as before, without noticing that there is another cable.   Of course you want to be able to get the maximum electricity. What is the maximum electricity that could be travelling in this cable? You have to answer this question T times, for T different pairs of powerhouses A, B that you connect this cable in. All these answers have to be independently outputted. (see sample)  Input  First line of the input contains two space separated integers N and M denoting the number of powerhouses and number of cables respectively.   For next M lines, each line contains three sapce separated integers U V W, denoting that there is a cable directed from powerhouse U to powerhouse V with electric capacity W.   A single line containing an integer T :  the number of different layouts of the superconducting cable you are going to try out.  T  lines follow, each containing two integers A and B denoting that the cable is connected from  B to A .  Output  Output T lines each containing a single integer corresponding to the maximum electricity you can hijack in that case case.   Constraints  1 ≤ N ≤ 300 1 ≤ M ≤ N * (N - 1) / 2  1 ≤ W ≤ 10^6 1 ≤ U, V ≤ N 0 ≤ G, G is unbounded from above (not given in input) There won’t be any duplicate edge or self loop (apart from the extra edge you added of infinite capacity)  1 ≤ T ≤ 10  1 ≤ A, B ≤ N  A != B   Example Input: 3 2 1 2 5 2 3 3 2 1 3 1 2  Output: 3 5    
 You are given a sequence of N integers, a[1], a[2], , , , a[N]. Find out the maximum possible average value of sub-sequences of array a.   Input  First line of the input contains a single integer T denoting number of test cases   For each test case, first line contains a single integer denoting N, the number of elements of array a. Next line contains N space separated integers denoting the array a.   Output  Print T lines each line containing the maximum possible average value. Your answer will be considered correct if it's absolute or relative error is less than 10 ^-6.   Constraints  1 ≤ T ≤ 10 2 ≤ N ≤ 1000 1 ≤ A[i] ≤ 10^5   Example Input: 1 5 1 3 2 1 3 Output: 3  Explanation Example case 1. Average value of subsequence 3, 3 is 3. This is the maximum possible average value. 
 There are 6 piles of stones in a round configuration. In a single move, a player selects 3 consecutive piles, and removes some stones from 1 or more of these piles. (at least 1 stone must be removed from at least 1 pile).   A player loses if he can’t make any more moves in the current position. (equivalently, there do not exist any piles with non-zero amount of stones)   Given a starting position, output whether it is a winning or a losing position for the first player.   The game is a two players game and they play alternatively.   Note that even if a pile becomes empty, it still exists in the game as an empty pile. When selecting consecutive piles, one of them maybe an empty pile.   Input  6 space separated integers on a line containing the initial number of stones in each pile. The last pile rounds over to the first.   Output  “Winning“ (without quotes), if winning position   “Losing” (without quotes), if losing position  (take care of the Case)   Constraints  0 ≤ Number of stones in each pile ≤ 10^6   Example Input: 1 0 0 0 0 0 Output: Winning  Input: 1 0 0 1 0 0 Output: Losing  
  Given three integers x, m and n. Evaluate (1 + x + x^ 2 + .. + x^ m)  (mod n)   Input  First line of the input contains a single integer T representing number of test cases that follow.   For next T lines, each line contains three space separated integers x, m and n.   Output  Output exactly T lines each containing the answer to the corresponding test case.   Constraints  1 ≤ T ≤ 1000 1 ≤ x, n, m ≤ 10^16   Example Input: 1 3 2 5  Output: 3 
 You are a bird shooting enthusiast. You are standing on position 0 and a flock of birds (assume infinitely many birds) is flying away from you at 1m/s. The flock of birds is initially at 1m away from you.   Your rating is (P, N) and your time lag is (T, R). This means the following.   If P is your precision rating : At every turn, beginning when the birds are at 1m position, you take a shot at one of the birds in the flock. Suppose at this turn, if the flock of birds is Xm away from you, then probability that shot is successful is 1 ⁄ X^P.   N is your range : You can only shoot at the flock of birds if it is at a distance less than or equal to N.   T is your reload time : After every shot, you reload your gun, and that takes time T. The next time you shoot, thus the flock of birds is T more meters away than it initially was.   R is your rejoicing time :D : If you are successful in shooting a bird, you rejoice your success and spend an extra amount of time R in reloading (taking a total of T + R time before the next shot).    Assume that you have infinitely many bullets.   Given N, P, T, and R. Find the expected number of birds you will shoot down!   Input  A single line containing space separated 4 numbers N, P, T, and R, in that order. P is a real number while others are positive integers.  Output  A single line containing the expected number of birds you will shoot down. The output should be correct to within 10^(-6) of the actual answer.   Constraints   P is a real number, 1 < P < 100  1 ≤ N ≤ 10^18  1 ≤ T ≤ 10^5  1 ≤ R ≤ 10^5  Further, ln(N) < 14 (P - 1)   Example Input: 10 2 3 4  Output: 1.015625 
 You have a rectangular grid of dimension N x M. You need to paint the grid with black or white color such that there is no rectangle of size X x Y having same color in each cell. Find the number of ways to paint the grid, modulo 1000000007.   Input  A single line containing 4 space separated integers, N, M, X and Y.  Output  A single line containing the answer modulo 1000000007   Constraints  1 ≤ X ≤ 3 1 ≤ N ≤ 10^6 2 ≤ Y ≤ M If (X = 1), then M ≤ 10^3, no other constraint on N If (X = 2), then M ≤ 7, no other constraint on N If (X = 3), then N ≤ 8, M ≤ 5   Example Input: 2 2 1 2  Output: 4   
   You are given a rooted tree with N nodes. Tree is rooted at node 1. Each node of the tree contains some value. Initially value of each node will be given.   You are given Q queries. Queries can be of two types, type U and type Q.   Type U: This query is represented by U x v, which means that you 	have to add value v to node x.  Type Q: This query is represented by Q x, which means that you 	have to output number of nodes in the subtree rooted at node x having value equal to zero.   Input  First line of the input contains two space separated integers N and Q.   For next N - 1 lines, each line contains two space separated integers u, v denoting that there is an edge between u and v in the tree. It is guaranteed that 1 ≤ u, v ≤ N, u != v. It is also guaranteed that no edge is repeated in the input.   Next line contains N space separated integers denoting the initial weight of each node in order, 1 to N. Weights will be between -10^9 to 10^9 (both inclusive).   For next Q lines, each line contains a query of either type U or type Q.   Output  For each query of type Q, output a single line containing an integer corresponding to answer of the query.   Constraints  1 ≤ N, Q ≤ 10^5 For query of type U, -10^9 ≤ v ≤ 10^9 For query of type U and V, 1 ≤ x ≤ N   Example Input: 4 3 1 2 1 3 2 4 5 -2 0 3 Q 1 U 3 1 Q 1  Output: 1 0  
  Devu is a little boy. He does not know how to take carries while adding two numbers in decimal base. eg. He will struggle in adding numbers 83 and 19, because 3 + 9 = 12 and he needs to take a carry of 1.  You are given an integer n. Can you write it in terms of sum of two positive integers such that while adding them in base 10, Devu doesn't need to use any carries.   Input  First line of the input contains an integer T denoting number of test cases.   For each test case, there is a single line containing an integer n.   Output For each test case, print a single line YES or NO according to situation in the problem.  Constraints   1 ≤ T ≤ 1000  1 ≤ n ≤ 10^5   Example Input: 2 1 9 Output: NO YES   Explanation Example case 1. 1 can not written in desired way. Example case 2. 9 can be written as sum of 2 and 7. Devu doesn't need to use any carries here. 
  Nowadays out little Chef is traveling a lot. While traveling, on one unlucky day, he lost into a mysterious country. Nearby people handed little Chef to the King for investigations. After proper investigation they found little Chef innocent. Little Chef had no money with him to return to his country Byteland, so the King helped him by giving some money.   The monetary system of the country has coins of following values : K^0 , K^1 , K^2 , K^3 , K^4  ..... (till infinity) The King gave him K coins of each type.   The cost of the air ticket from that country to Byteland (his home) is  N . What is the minimum number of coins little chef has to spend to buy a ticket ? Little Chef want to spend minimum number of coins so that he can play with the remaining coins in his home !   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The only line of each test case contains two space separated integers N and  K  as described in the problem statement.   Output  For each test case, output a single line containing the answer to the corresponding test case.   Constraints  1 ≤ T ≤ 100,000 1 ≤ N ≤ 1,000,000,000,000,000,000 (10^18) 1 ≤ K ≤ 100,000   Example Input: 2 12 2 18 3  Output: 2 2  
 Sumo was travelling alone at night, suddenly he saw a spaceship and out of it came an alien named KK. Obviously, the alien had a different language and thus couldn't communicate readily. After some psycho-telepathic talk, Sumo realised that KK's language has M distinct characters. And a valid word in his language satisfies the following properties:   Each character in the word must be one of the M characters. There must be no  palindromic substring of size greater than 1.    For some reason Sumo wants to know the number of valid words of length N in KK's language. Since the answer can be large, print the answer modulo 1000000007 (10^9 + 7).    Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The first line of each test case contains two space separated integers N and  M  as described in the problem statement.   Output  For each test case, output a single line containing the answer to the corresponding test case. See example section for better understanding.   Constraints  1 ≤ T ≤ 100000 1 ≤ N ≤ 1000000000 1 ≤ M ≤ 1000000000   Example Input: 2 3 3 1 4  Output: 6 4 
 This is the story of Chaapu, who is off on a business trip to New York, and takes your advice on how to come up with algorithmic solutions for his day to day problems.  Well you know how it is customary to "bring" things from the US to India, as they are apparently cheaper. Our mature Chaapu has bought N gifts and parcels for every member of his family. His return flight to India  is in a few days, and as the luggage load will be huge, he has decided to send these gifts and parcels through a courier service. The courier service has M channels, each of which can be used to send only one parcel. However, each channel has different delivery time for each of the gifts/parcels. To make sure that most of the gifts have arrived by the time Chaapu gets home, he has decided that atleast K gifts should get delivered before he takes the return flight. You are given a matrix A with A[i][j] representing the delivery time for gift/parcel i through channel j. You have to output the minimum time T required so that at least K gifts/parcels are delivered in time T.  Input The first line of the input contains N, M, K respectively.Rest of the N lines contain M integers each denoting the time required as explained above.  Output Output the minimum time required T as mentioned.  Constraints   1 <= N,M <= 100 1 <= A[i][j] <= 10^12 1 <= K <=M,N    Example  Input: 2 3 1 1 2 3 3 2 1  Output: 1  Explanation  We can use the first channel to send the first gift.  
  Recently Abhilash came across a game called DOTS. It is a single player game. The rules of the game are as follows :    N  *  M  dots of various colours are arranged in a  N  x  M  grid. See  here  for example.   You can draw a  rectilinear  curve over dots of same colour by moving your finger over the dots. See  here for better understanding. As soon as you lift your finger from the screen of your phone, all the dots that you joined to form the curve vanishes. Let's say  X  dots vanished in this step. This means that you earned  X  points in this step. In the example,  X  = 6 dots vanishes in the current step.   The aim of the game is to maximize your score in certain number of moves (in his phone it is 30).   However, if you are able to draw a curve which forms a loop then all the dots of that colour vanish from the board. See  here  for example. In the example all the green dots will disappear. Let's say  X  dots vanished in this step (in the example X = 9). This means you have earned  X  points in this step.    Abhilash's claim is  that greedy strategy is the best strategy to get high scores as you don't know what dots will come up in next step of your game. Using his strategy, he recently broke my highest record !    To break his record, I am planning to write a program. Will you help me ?   In this problem, configuration of the grid will be given and you are required to print the maximum points that you can earn in the current move. There are  K  different available colours denoted by integers ranging from 1 to K .   Input First line of the input contains two space separated integers N and  M . N  lines follow, each containing  M  space separated integers. The integers represent the colour of the corresponding dot.  Output Print one Integer containing the answer to the problem. That is, maximum points that you can earn in the current step.  Constraints  1 ≤ N ≤ 1000 1 ≤ M ≤ 1000 1 ≤ K ≤ 1000000   Example Input: 5 6 1 6 3 6 6 6 5 4 3 6 1 6 7 6 2 6 6 6 4 2 2 1 4 6 6 6 6 2 6 1  Output: 15  Explanation  We can form a loop of colour 6. Which will result in vanish of all 15 dots of colour 6. And this is the maximum score that can be earned in the current step.  
 This problem is simple. You will be given an integer  N  and you need to factorize that number. To help you with factorization of  N , you will also be given  phi(N) .   phi(x)  is also known as Euler's Totient  function.  phi(x)  is defined as number of positive integers less than or equal to x which are relatively prime to  x  (i.e, greatest common divisor is 1).   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The only line of each test case contains two space separated integers representing N and  phi(N)  respectively. N  denotes the number to be factorized.   Output  For each test case, output a single line containing the prime factors of  N  in non decreasing order. See example for clarity.   Constraints  1 ≤ T ≤ 20 2 ≤ N ≤ 1,000,000,000,000,000,000 (10^18)   Example Input: 3 8 4 36 12 450 120  Output: 2 2 2 2 2 3 3 2 3 3 5 5  
  You are given e even and o odd numbers. In a single operation, you change an even to odd number or vice versa. Find out min number of operations needed to do such that ratio of even to odd numbers becomes 2 : 3. If it is impossible to do so, output -1.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. For each test case, there will be a single line of input containing two space separated integers e and o.   Output  For each test case, output a single line containing a single integer corresponding to the answer of the problem.   Constraints  1 ≤ T ≤ 10^5 1 ≤ e, o ≤ 10^9   Example Input: 3 2 3 3 2 3 3 Output: 0 1 -1  Explanation Example case 1. Ratio of even : odd numbers are already 2 : 3. So no need of any operation. Example case 2. Change one even to odd, you will have 2 even and 3 odd satisfying the ratio. So only 1 operation is needed. Example case 3. There is no way of doing operations which could make desired ratio. 
  As we know that nowadays little Chef is travelling a lot ! One day, Little chef went to a mysterious country. The structure of the country can be described by a 2-D grid. Where each cell of the grid represents a town. Therefore, we can represent any town by a pair of integers (x, y). Which means that the town is located at the x^th row (0  ≤ x) and  y^th column (0  ≤ y) of the grid.  Moreover, for transportation in the country, there are roads connecting the towns. Roads can be understood as a vertical and horizontal lines passing through each cell (towns) of the grid. See  here  for better understanding of the structure of the country.   In some of the towns there are petrol pumps for refuelling. To be precise, there are  N  towns where petrol pumps are available. Let us number those towns from 1 to  N .   Little chef is currently at town 1 with his car having no fuel. He has to go to town  N . Available petrol in each petrol pump will be given. Formally let's denote that the i^th petrol pump has pi units of petrol. Little chef has a lot of money so he can buy any amount of petrol, if available. Obviously he can't buy petrol if it is not available !   However, in this country you are only allowed to move in two directions ! Formally if you are at town (x, y) then you can go to town (x1, y1) only if :  x = x1 and y1 > y or y = y1 and x1 > x . This is not the only rule that Chef has to follow ! Others rules that need to be followed as well are :  He must travel in the roads. He can not make a turn in a town where there is no petrol pump ! He can not stop in a town where there is no petrol pump. To take a turn, you must first stop at the point of turning. If he want to refuel his car, he must stop at a petrol pump.   The most mysterious thing about the country is that consumption of fuel is not proportional to the distance travelled ! Rather, total of only K units of petrol is consumed between two stoppage! However, it is impossible to continuously ride the car for a distance more than  L  without taking a stop. Distance between two towns (x1, y1) and (x2, y2) is given by |x1 - x2| + |y1 - y2|.   Little Chef simply wants to plan his travel from town 1 to town N. He already has the map of the country and he is aware of the rules. But, he got confused with so many rules! So he asked you for help. Can you help him ? You need to find a valid path for the Chef from town 1 to town N.   Input  First line of the input contains three space separated N, K and L.  N denotes the number of towns with petrol pumps. K denotes the units of petrol that is needed between two consecutive stops as described in the problem. L denotes the maximum distance that can be travelled in a continuous ride.    Next N lines contains three space separated integers each. Let's say that i^th line contains xi, yi and pi respectively. These integers denote :  (xi, yi) denotes the location of the  i^th petrol pump. pi denotes the amount of petrol available at the i^th petrol pump.     Output  If it is not possible for the Chef to reach to town N then print in a single line "NO" without quotes. Otherwise in the first line print "YES\n". In the second line print the number of cities where the Chef stopped including town 1 and town N. Let's say you printed  M . Then print M lines each containing two space separated integers denoting the location of the stoppage. All the stoppage should be printed in the same order in which they were visited. In the last line print the amount of fuel left in Chef's car after he stopped at the town N. Assume that he will not use the petrol pump of town N. See example and explanation for better understanding.  Note that multiple answers are possible. Any of the correct solution will be accepted !  Constraints  1 ≤ N ≤ 300000 1 ≤ K ≤ 1000 1 ≤ pi ≤ 1000 1 ≤ L ≤ 1000000 0 ≤ xi, yi ≤ 100001     Example Input: 7 4 8 1 1 7 4 10 3 10 1 1 10 4 8 6 1 4 5 5 6 10 10 4  Output: YES 5 1 1 6 1 10 1 10 4 10 10 4  Input: 7 4 4 1 1 7 4 10 3 10 1 1 10 4 8 6 1 4 5 5 6 10 10 4  Output: NO     Explanation Example case 1. One of the possible solution can be like the following :-  Chef filled 7 unit of fuel at town 1. Since a continuous ride of 8 unit is allowed, it is valid to take a stop at town 5. Total fuel left at this point is 7 - 4 = 3 units. Then the Chef fills 4 units of fuel here. Now, total fuel in his tank = 7 units. Again he stops at town 3 for taking a turn. It is valid to stop here as there is a petrol pump here. Since, he has stopped here, he fills 1 unit of petrol here as well. Now, he has 7 - 4 + 1 = 4 units of fuel in his tank. Next stoppage he takes is town 4. This was possible because he had 4 units of fuel in his tank earlier. However, it was not possible for him to directly go to town 7 from 3 as it is a distance of 9 units which is greater than L = 8 . He fills his tank here as well. Now fuel he has = 4 - 4 + 8 = 8 units. Next, he directly stops at N = 7 with still 4 units of fuel in his tank. For this example, it is the only possible solution.  
 Devu found a 2-D matrix filled with Capital English Alphabets ('A' to 'Z') lying around in Churu's lab. He got very fascinated with the matrix and asked Churu to give the matrix to him so that he can play with it. Churu, although being a nice guy was not so nice to him, and asked him a puzzle and promised to give it to him only if Devu solves the puzzle correctly. Devu really wanted to have the matrix  so he asks you for help. Will you help him ?  The puzzle is to count the number of sub-matrices containing exactly K distinct letters.   Input  The first line of the input contains two space separated integers N and K. N denotes the size of the matrix i.e., the matrix is a square N x N matrix. K is as explained in the problem statement.   Output  Output the the number of such sub-matrices  in a single line.   Constraints  1 ≤ N ≤ 100 1 ≤ K ≤ 26   Example Input: 4 1 ABAB BABA ABBA BAAB  Output: 20  
 The country of Byteland has  N  cities. There are roads across certain pair of cities. There are exactly N-1 such roads. The roads are such that it is possible to go from any city to any other city using those N-1 roads.  One day Little chef and his brother Big chef decided to have a car race. Choosing the starting city and destination city was a big problem. Finally they settled with the following plan:  The starting point (source) of the race will be selected randomly and uniformly among the  N  cities. Destination point will be selected such that it is farthest from the source so as to have fair chance for both to show their talent !  Little chef is wondering about what will be the expected distance to be traveled during the race ? He is seeking your help. Can you help him out ?  Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains a single integer N denoting the number of cities in Byteland. Next N-1 lines each contains two space-separated integers u and v. Denoting that there is a road connecting city u and city v. The distance between them is 1.   Output  For each test case, output a single line containing the answer to the corresponding test case. That is the expected distance of the race. Your answer will be considered correct within absolute or relative error of 10^-6.   Constraints  1 ≤ T ≤ 10 1 ≤ N ≤ 200,000 Input will be such that it is possible to go from any city to any other city using the given roads.   Example Input: 1 6 1 2 2 3 3 4 3 6 2 5  Output: 2.66666666667   Explanation Since the source city is selected at uniform and randomly, probability of selection of each city is 1/6. Hence, the answer will be the sum of "distance of the farthest city" from each node multiplied by 1/6.  Warning : Large Input, be careful while reading Input !  
 Chef was feeling bored so he decided to create a pattern to play with. His pattern always has 1  as its first element. Then he chooses a number K as the second element. After selecting K as his second number he creates next element in the pattern by multiplying all previously existing elements of the pattern.  Now he asks for your help to find the  Nth  element in his pattern. As his number can be very large, so output modulo 10^9 + 7.   Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.  The only line of each test case contains two space separated integers K and  N  as described in the problem statement.   Output  For each test case, output a single line containing the answer to the corresponding test case.   Constraints  1 ≤ T ≤ 100,000 1 ≤ N ≤ 1,000,000,000(10^9) 1 ≤ K ≤ 100,000   Example Input: 2 2 2 3 4 Output: 2 9   
 Skynet was on a rise. In order to fight against the machines, the Resistance formed a team of heroes. However N heroes from the team were abducted by Skynet. Skynet then cloned some of those members and sent them against the Resistance along with some of the original members and other civilians. Now the Resistance is ready with a counter-atack but they do not know how many of the team members have been sent back by Skynet from those N abducted team members.  Help the Resistance to find out the number of members sent back by Skynet.  Input  Input description:  N  abducted members of the team are denoted by unique integers.  M  humans and the clones are denoted by integers.  The first line contains two space separated integers N and M denoting the number of elements in both the arrays respectively. The next  line contains N space-separated unique integers A1, A2, ..., AN denoting the elements of array1 . The next  line contains M space-separated  integers A1, A2, ..., AN denoting the elements of array2 ".   Output Output description. Tips:  Output a single line containing the number of team members sent back by Skynet.   Constraints  1 ≤ m ≤ n ≤ 1000000   Example Input: Case1: 5 5 1 2 3 4 5 1 2 4 5 3 Case2: 5 4 1 2 3 4 5 2 2 3 1  Output: Case1: 5 Case1: 3 
  The Indian team is in great form at the ICC cricket world cup. As bowlers have been performing really well and the Indian fielding has been exceptional, the opposition has come up with a strategy to take no risks.  As a result, the only way by which the batsmen gets out is by being bowled out. The opposition team has won the toss and have elected to bat first. You have been given the scorecard and need to print the runs scored by each player. The innings end when all the overs are bowled or all 10 wickets have fallen.  Input  The first line of the input contains an integer O denoting the number of overs played in the innings. The next O lines contain maximum 6 characters on each line i.e details of each delivery bowled.   Output  Output the runs scored  by the players who have entered the field in the following format: Player i r  where i goes from 1 to 11 (where i denotes the posititon of the player in batting order) and r denotes the runs scored by the ith player.  Example Input: 2 1 0 0 0 2 1 2 0 W 0 0 0  Output: Player 1 1 Player 2 5 Player 3 0 
INC Pradnya team wants to publicize their event so as to get maximum participants. Hence the official INC Pradnya'15 head decides to send messages to students in Pune. However he has very little balance left on his phone. He cannot invite everybody. He can send only K messages. A student receiving the message forwards it to all his friends. A person participates in the event only if he or she receives at least one message. Our Pradnya'15 head knows who is friends with whom. Using this knowledge he wants to reach out to maximum number of students. Output the maximum students he can reach out to, on a single line    Input  The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows. The first line of each test case contains three space separated integers N, M and K where N denotes the total number of students in Pune, M denotes the number of pairs of students who are friends and K denotes the number of messages that can be sent.  The  next  M lines contains 2 space-separated integers denoting a pair of friends.   Output  For each test case, output a single line containing the maximum students he can reach out to.     Constraints  1 ≤ T ≤ 1000 1 ≤ N ≤ 100000 1 ≤ M ≤ 100000 0 ≤ K ≤ 1000000     Example Input: 1 3 2 2 1 2 2 3  Output: 3   
   You are given n cities with m bi-directional roads connecting them and the   length of each road. There are two friends living in different cities who wish   to collect some ingredients available at different stores to make cake. There   are s such stores. They need not come back home after purchasing the   ingredients. Petrol is expensive and they would hence like to travel minimum   total distance (sum of distance distance traveled by both kids). Help them   find out what this distance is.   Input Format:  n m   (m lines of the form ai bi ci)   Here n is number of cities, m is number of roads, ai and bi are the cities(0   indexed) the roads connect and ci is the length of this road s where s is the number of stores   (1 line containing s space separated integers indicating the city number in   which the stores are located.)   (two space separated integers indicating the cities in which the two kids   live)   Output Format:    Single integer x where x is the minimum distance that the duo will travel that   is minimum sum of distance travelled by first kid and second kid.   Constraints:    2 ≤ n ≤ 100   1 ≤ m ≤ (n*(n-1))/2   0 ≤ a,b < n   0 ≤c≤ 1000   1 ≤ s ≤ 8   Sample Input:  5 6 0 1 5 1 4 1 0 4 10 0 2 2 1 2 3 2 3 4 2 2 4 0 1 Sample Output:  3 Problem Setter: Vidit Gupta 
Ravit and his friends are die hard fans of cricket. As india has reached the semifinal of ICC world cup 2015 they want to support India. So Ravit goes to the sports shop of the nearby market to buy some T-Shirts for his friends. When he gets to the cash counter, he puts all his T T-shirts on the counter and while waiting in the queue, he realizes that the sports shop recently started to round the total price of a purchase to the nearest multiple of 10 rupees (with 5 rupees being rounded upwards). For example, 73 rupees are rounded to 70 rupees, while 85 are rounded to 90. It is possible to divide his purchase into groups and to pay for each group separately. He managed to find  Z dividers to divide his purchase in up to z + 1 groups. He wondered where to place the dividers to minimize the total cost of his purchase.He doesn't want to rearrange the items on the belt because he is in a hurry.     Input The input consists of: • First line  contains  two integers  T  and Z , the number of shirts and the number of available dividers. • Next line with  T integers  k1,k2,k3 . . kn , the prices of the items in dollars. The prices are given in the same order as the items appear on the belt..  Output Output the minimum amount of money needed to buy all the items, using up to Zdividers.  Constraints  1 ≤ T ≤ 2000 1 ≤ Z ≤ 20 1 ≤ ki ≤ 10000     Example Input: 2 1 8 8 Output: 20 Input: 5 2 1 1 1 1 1 Output: 0 
  NASA is building a new super-computer. For this they are designing a new OS. All the processes that are running on the computer at a time are assigned an integer by the OS, which is called  ’ factor ’. Each process has its own factor assigned to it. G(k)  is a function which gives the factor of process k. The running processes can be represented by the nodes of a tree. If process B is a descendant of process A in the tree, then B is called the sub-process of process A and  A is called the super-process of B.At the root of the tree is Process ‘Top’. All the other processes are its sub-processes. F(x,y) is a function which determines the performance of the super-computer. Here (x,y) is that pair of processes (y is always a sub-process of process x) where the difference between the factors of process x and process y is maximum. You are required to find maximum value of  G(x)-G(Y) .     Input  Each test case contains (2*N+1) integers. The first integer  represents the number of running processes. The next N integers i.e A[i] give the factors(g(i)  ) of process 1…. N. The last N integers give the super-processes of process 1….N.  If the super-process of a process is denoted by -1, it means that the process is at the root of the tree i.e. it is process ‘Top’.  Output You are required to find G(x) - G(Y), where x and y is that pair of processes (y is always a sub-process of process of x) where the difference between the factors of x and y is maximum..      Constraints  -10^8 ≤ a[i] ≤ 10^8 2 ≤ N ≤ 10^5     Example Input: 4 5 10 6 12  2 -1 4 2  Output: 6 
 In an Unix like environment, an administrator wants do following task: There n programs and k users. Each user has permission to execute certain programs. Now, the administrator wants to divide programs into minimum number of groups, so that each program belongs to an unique group, and assign users to these groups, such that only users belonging to the group have permissions to execute programs in the group.   Input  First line gives t, the number of test cases (t ≤ 30). Then t test cases follow. For each test case: The first line gives 2 integers n and k.  (1 ≤ n ≤ 10^5  and 1≤ k ≤1000 ) Next k lines follow. Each line contains a set of integers. If an integer "i" exists in a line "k" then the k^th user has permission to execute program "i".   Output  For each test case output a single line. Each line should give the minimum number of groups possible.   Example  Input: 1 5 5 1 2 4 1 2 4 1 2 4 2 3 5 3 5  Output: 3 
  Alice and Bob are playing a game. They have 3 bags, each consisting a certain number of balls. Alice starts the game by picking a ball from any one of the bag.Then Bob picks a ball from one of the other 2 bags. That is, in their turn they have to pick a ball from any of the bags, except the bag from which the other player picked up in their last turn. The player who cannot make a move loses. Given that both Alice and Bob play optimally, you are supposed to tell who is going to win.     Input The first line contains a number T, the number of testcases. Next T lines contain 3 space separated integers A,B,C each of which depicts the number of balls in the three bags.  Output For each test case output a single line with the winner, "Alice" or "Bob" without the quotes.  Constraints  1 ≤ T ≤ 1000 1 ≤ A,B,C ≤ 1000     Example Input: 3 1 1 1 1 1 2 2 2 2  Output: Alice Bob Bob    Explanation case 1: 1. Alice picks up a ball from bag 1 2. Bob picks up a ball from bag 2 3. Alice picks up a ball from bag 3 Now Bob cannot make a move since there are no more balls left, hence Bob loses and Alice wins. case 3: 1. Alice picks from bag 1 2. Bob picks from bag 2 3. Alice picks from bag 1 4. Bob picks from bag 3 5. Alice picks from bag 2 6. Bob picks from bag 3 Bob wins 
  Wonderland Showroom is a a top neclace designer showroom in town . It's known for designing neclaces as customer wishes .A neclace is composed of a number of coloured beads. The colour of the beads is denoted by a lower case english alphabet for simplicity and design conventions. Alice is very fond of jewellery and wishes to purchase a "special" neclace on her birthday . Alice considers a neclace to be "special" if the following conditions are satisfied : 1. All the bead colours occurring odd number of times are placed first and then the bead colurs occurring even number of times. 2. The bead colors must also be in lexographically correct order. 3. All similar beads must occur together. The Wonderland showroom has already pre-designed neclace sets. But to ensure that Alice purchases the neclace from their showroom they need to redesign the neclaces to make it appear "special" . You are the chief designer in-charge. Can you redesign the beads to make it appear special ?  Note: String A is lexicographically smaller than string B if at the first position where A and B differ A contains a letter which is earlier in the alphabet than the corresponding letter in B.     Input The first line contains a single positive integer T . T test cases follow. Each line of the test cases contains a string s.  Output For each test case output one line containing the "special" neclace that suits the requirements of Alice.  Constraints  1<=T<=100 1<=Length of string<=1000     Example Input: 2 abaabccd aaaabbb  Output: aaadbbcc bbbaaaa    Explanation Example case 1. The frequency of each character is as follows 1. a occurs 3 times . 2. b occurs 2 times . 3. c occurs 2 times . 4. d occurs 1 times .  We need to place the beads occuring odd number of times at the beginning and in lexographical order. 'a' and 'd' are the only beads occuring odd number of times. 'a' occurs before 'd' in lexographical order. So, we have ---> aaad Now, we need to place the beads occuring even number of times and in lexographical order. 'b' and 'c' occur even number of times So, we have ---> aaad + bbcc = aaadbbcc  
  Its axis time and the event managers are busy conducting meetings or their events. Each event manager is  seating on a vertex of a table having shape of a regular polygon. The table has n vertices where n is the number of event managers in the meeting. Your task is to count the number of isosceles triangles formed such that each vertex of the triangle is a vertex of the table and all managers seating on these 3 vertices are of same gender.    Input The first line contains an integer T. T testcases follow. For each test case, there is only one line, which consists of a 01-string with length ≥ 2. Number of vertices n of the regular polygon equals length of the string.  The string represents gender of managers seating on the vertices in clockwise order. 0 represents girls and 1 represents boys.  Output For each test case, output one line in the format Case #t: ans, where t is the case number (starting from 1), and ans is the answer.  Constraints Sum of all n in the input <= 10^6    Example Input: 5 01 0001 10001 111010 1101010  Output: Case 1: 0 Case 2: 1 Case 3: 1 Case 4: 2 Case 5: 3    Explanation In case 5, indices of vertices of the three monochromatic isosceles triangles are (0,3,5), (1,3,5) and (2,4,6) (assuming indices start from 0) 
  Amogh decides to go to Delhi to meet someone, and starts off in a train from his city. Seeing this, Sameer decides to go too (for obvious reasons). But he doesn't like to travel by train. So he decides to do a bus-journey.  Sameer lives in Nashik. There are N cities between Nashik and Delhi (including Delhi but excluding Nashik), and in each city there are M buses numbered 1 to M. Sameer needs to travel to Delhi following these conditions:  1. At every city, he needs to change the bus. 2. At every city, he can switch to only those buses which have number either equal to, or 1 less than, or 1 greater than the previous.   Also, a bus takes him from the present city to the next city, not beyond that. You are given the time (T) required by Amogh to reach Delhi, and the time required by all buses to reach the next city from the current city.   Can Sameer reach Delhi before Amogh?     Input First line contains k, the number of testcases. k testcases follow. Each testcase is described as:  Line 1: T Line 2: N,M The next N lines contain time taken by M buses to go to the next city.    Output Output a single line saying "YES" or "NO" (without quotes), indicating whether Sameer can reach Delhi before Amogh or not.    Constraints  1 ≤ T ≤ 100 1 ≤ N,M ≤ 500     Example Input: 1 14 5 5 1 3 1 2 6 10 2 5 4 15 10 9 6 7 1 2 7 1 5 3 8 2 6 1 9 Output: YES   
  It's Tejasi's birthday and her mom has prepared hot dogs. There are N hot dogs and M people and her mom wants to divide the hotdogs equally. Tejasi wants to calulate the minimum number of cuts required to distribute the hot dogs equally. Help Tejasi in finding out the number of cuts required.   In order to divide the hot dogs, the number of cuts splitting individual hot dogs must be as small as possible.   Help her calculate the minimum total number of cuts needed to carry out the desired division.     Input The first line contains T the no of test cases. The next t lines contain two positive integers, N and M , the number of hot dogs and eaters, respectively.    Output The output consists of t lines which contains required minimum number of cuts.    Constraints  1 ≤ T ≤ 1000 1 ≤ N,M ≤ 100   Example Input: 3 2 6 3 4 6 2  Output: 4 3 0     Explanation If there are two hot dogs and six tasters, it is sufficient to split each hot dogs into three equal parts, making a total of four cuts. On the other hand, if there are three hot dogs and four tasters , one possibility is cutting off three quarters of each hot dogs. Those larger parts will each go to one of the tasters, while the fourth taster will get the three smaller pieces (quarters) left over. 
  Prakhar recently went into his first relationship, he is very excited to impress his girl on their first date. He already knows that his girlfriend has an special liking for 6 items :- 1.Purse. 2.Stuffed Toys. 3.Dresses. 4.Jewellery. 5.Make-Up Kit. 6.Watches.   There are N(6 < N < 101) items of these 6 types. Each item is characterized by its price p[i] (in rupees) and is quality q[i]. Prakhar has a total of T (0 < T < 1001) rupees and he wants to maximize the total quality of his items. The total quality is the quality of the item with the lowest quality.  Help our friend Prakhar to create an charismatic impression on his girfriend in his very first date.   Input On the first line there are two integers: number of items for sale (N) and total rupees Prakhar has (T). Subsequent lines contain 3 integers: type (t) (from 1 to 6) price (> 0) and quality.  Output Output the total quality.  Example Input: 7 53 5 8 2 2 4 8 6 8 13 1 13 12 4 5 1 3 2 7 3 13 5  Output: 1  Note : If there is no answer, output 0. There can be less than 6 items. Buying all the items is compulsory. 
  Ronak’s  class teacher gives him an NxN matrix.  Then, she gives him M numbers. Every number is an angle, the angle by which he has to rotate the matrix in clockwise direction.  (The angles are multiples of 90.)  Help him with the task.   Input First line consists of two numbers N and M.  The following N lines contain  N numbers each (representing the matrix).  The next M lines contain one number each, representing the angle by which the matrix is to be rotated.  Output For M problems, generate M appropriately rotated matrices, each seperated by a new line.  Constraints  1 ≤ N,M ≤ 100   Example Input: 4 2 1 2 3 4 4 5 6 7 6 8 4 3 8 1 4 7 90 180  Output: 8 6 4 1 1 8 5 2 4 4 6 3 7 3 7 4  7 4 1 8 3 4 8 6 7 6 5 4 4 3 2 1 
Despite indications to the contrary, India too has had its share of UFOs. There is enormous debate in UFO circles about the veracity of sightings of UFOs in the Aksai Chin area near Kashmir.  A naughty local wanted to play truant and decided to set up a fake UFO base. To generate interest, he decided to draw square number patterns on the ground. The general pattern of the square was as follows:     1   2   3   4   5    6   7  8 28 29 48 47 46 45 44  9 27 30 49 50 51 52 43 10 26 31 60 61 64 53 42 11 25 32 59 62 63 54 41 12 24 33 58 57 56 55 40 13 23 34 35 36 37 38 39 14 22 21 20 19 18 17 16 15   You need to write a program to generate such a square for a given input N.   Input N = the size of the side of a square you should generate  Output An NxN square according to the rules described above  Example  Input: 8  Output: 1 2 3 4 5 6 7 8 28 29 48 47 46 45 44 9 27 30 49 50 51 52 43 10 26 31 60 61 64 53 42 11 25 32 59 62 63 54 41 12 24 33 58 57 56 55 40 13 23 34 35 36 37 38 39 14 22 21 20 19 18 17 16 15  
Stepford Street was a dead end street. The houses on Stepford Street were bought by wealthy millionaires. They had them extensively altered so that as one progressed along the street, the height of the buildings increased rapidly. However, not all millionaires were created equal. Some refused to follow this trend and kept their houses at their original heights. The resulting progression of heights was thus disturbed.  A contest to locate the most ordered street was announced by the Beverly Hills Municipal Corporation. The criteria for the most ordered street was set as follows:  If there exists a house with a lower height later in the street than the house under consideration, then the pair (current house, later house) counts as 1 point towards the disorderliness index of the street. It is not necessary that the later house be adjacent to the current house.   Note: No two houses on a street will be of the same height   For example, for the input:   1 2 4 5 3 6   The pairs (4,3), (5,3) form disordered pairs. Thus the disorderliness index of this array is 2.   As the criteria for determining the disorderliness is complex, the BHMC has requested your help to automate the process. You need to write an efficient program that calculates the disorderliness index of a street.   Input Line 1: N – The size of the array. 1 <= N <= 10^5 Line 2: N integers denoting the heights of the various buildings in order of their locations on the street.   Output Line 1: The disorderliness index of the street.  Example  Input: 6 1 2 4 5 3 6   Output: 2 
In the hidden country of Lapatrecta, an age old custom was followed to ensure that no outsider ever entered their country undetected. The security measure, though simple, was an effective one. Every person born in Lapatrecta had the initials of all his forefathers included in front of his name. Every once in a while, certain families became very famous and the initials of their ancestors were dropped from the names of all their descendants. Thus, there existed a nice homogeneity in the names of the people of Lapatrecta.  Now, a royal ball was organized at the behest of the Queen of Lapatrecta and all citizens were cordially invited to the event. The ball was being held to chop off the initials of the ancestors of the  most distinguished family of the country. The Queen set the following 2 criteria for determining the most distinguished family from amongst the invitees:   1.	The family must have more than 1 member living. 2.	The length of the ancestor list of the family must be as long as possible.   For example:   For 3 people: APJQ Ravi APJRS Rahul PJQ Bharat   The following observations hold: APJQ Ravi was of the same family as APJ Rahul but PJQ Bharat was not of the same family.   The length of the ancestor list for Ravi and Rahul was 3 whereas Bharat has an ancestor length of 0 as there is no other member of his family living.  However, if there existed a person named PJ Varun, Bharat and Varun would both have an ancestor list length of 2.   As a member of the Royal Court of Lapatrecta, you have been entrusted the task of determining the length of the ancestor list that will be chopped off by the Queen. You will be provided data in the following format:   Input Line 1: N – The number of people coming to the ball Line 2-N+1: The initials list of all the people coming to the ball. No initials list is longer than 100 characters.   Output Line 1: The length of the longest ancestor list.  Example  Input: 3 APJQ APJRS PJQ  Output: 3  
The planet of XANDOR was famous in the intergalactic empire for being home to the Carden - a race of super-intelligent computer scientists that were held in high regard for their achievements in the Intergalactic Mind Game Olympiads. The Carden decided to build a huge computer to answer questions related to Life, the Universe and Everything. They decided to use only their best two-input, noise immune, Boolean gates for this device - AND, OR and XOR. After a lot of minimization, they arrived at a variable assignment for their gates. Just then, lightning struck and erased all the parentheses from their expression. Not willing to spend the trouble parenthesizing the huge expression again, they outsourced the work to Earth.  As a consultant to XANDOR, you need to create a computer program that parenthesizes the Boolean expression in such a manner that the expression results in a true value and report the number of ways possible to do it. In case it is not possible to do so, you need to return 0.   Input An unparenthesized Boolean expression containing literals T and F which are connected via gates represented as . (dot) for an AND gate, + (plus) for an OR gate and * (star) for an XOR gate. There will be at least one literal in input line. Maximum number of literals i.e. T or F will be 15.  Output Line 1: A single value C >= 0 representing the number of true parenthesizations possible.  Example  Input: T.F+T*F  Output: 5    Description The 5 values correspond to the parenthesizations (((T.F)+T)*F), ((T.F)+(T*F)), ((T.(F+T))*F, (T.((F+T)*F)), (T.(F+(T*F))) - all of which evaluate to true. 
Modern cryptosystems rely heavily on our inability to factor large integers quickly as the basis for their security. They need a quick and easy way to generate and test for primes. Very often, the primes generated are very large numbers. You need to implement ways to test the primality of very large numbers.  Input Line 1: A number (no more than 1000 digits long)  Output Line 1: PRIME or COMPOSITE  Example  Input: 2760727302517  Output: PRIME 
 Given a matrix of dimensions RxC composed of only two types of characters: '*' and '#'  find the number of I characters present in the matrix. The criteria for identifying an I is as follows:    All the characters forming the I are # only.   The figure is completely filled with #s.   The thickness and width of the top and bottom rectangles is identical.   The central column is formed by leaving out floor(width/3) positions on both sides.   The central column may be of any length ≥ 1   The I must be surrounded by "*" or the border (i.e. no additional attachments to the I)    Note: A given input figure is likely to contain multiple I's.   Input Format:  Line 1: R C - Two space separated natural numbers denoting the dimensions of the rows and columns in the matrix respectively. Both R and C will be less than or equal to 40.  Line 2 to R+1: Lines containing C space separated symbols. The symbols are chosen from the set {*, #}   Output Format:  Line 1: The number of I's in the given figure.   Sample Input:  10 10 # # # # # # # # # # # # # # # # # # # # * * * # # # # * * * * * * # # # # * * * * * * # # # # * * * * * * # * # # # * * * * * # # # # * * * * * * # # # # * * * # # # # # # # # # # # # # # # # # # # #   Sample Output:  0   Explanation: The given I is invalid because of 2 reasons:  It is not completely filled  It has an extra attachment of a # on the right side of the central column.   
A set of N dignitaries have arrived in close succession at Delhi and are awaiting transportation to Roorkee to participate in the inaugural ceremony of Cognizance. Being big sponsors of Cognizance, it has been deemed unsuitable by the organizing team to arrange for more than one dignitary to travel in a single vehicle. In addition, each dignitary has specified his preferred modes of transport to the organizing team well in advance. Consequently, the organizing team has drawn up a list specifying the set of acceptable transport mechanisms for each dignitary. Given such a list of preferences and the list of N available vehicles at Delhi, you need to specify if an allocation of vehicles can be so made that everyone’s preferences are satisfied. Each dignitary takes up atmost 1 transportation unit. Input Format: Line 1: N  - The number of dignitaries. 1 ≤ N ≤ 100 Line 2-N+1: The names of the dignitaries – 1 per line. Line N+2 to 2*N+1: The names of the vehicles, 1 per line Line N+2 onwards: K – The size of the preference list for each dignitary, followed by K space separated names of acceptable transport means. K ≤ N  Note: None of the names will have a length > 100.  Output Format:   Line 1: Yes/No.  Sample Input:  4 Divye Rohit Akshat Parth Scorpio BMW Ford Chevrolet 1 BMW 1 Ford 2 Scorpio Chevrolet 1 Ford   Sample Output:  No  
 Its time of Raksha Bandhan so its compulsory for every brother to give a gift to his sister. Brother Jon is planning to give a string S of length L to his sister Arya. After receiving the gift from her brother, Arya decided to share the string with her brother Jon. String S contains characters from index 0 to index L - 1. She will select a pivot called P ie any index P(1 ≤ P ≤ L - 1) and divides the original string into two parts. First part will contain characters from index 0 to index P - 1 and second part will contain characters from index P to L - 1. Jon will keep the first part and Arya will keep the second part. Arya is great fan of LCP (Longest Common Prefix) so she decided that she will select such an index as pivot such that LCP of the two part is high. Though she like LCP but she does not know how to calculate it. Help her to solve the problem. Arya will ask you Q questions. Each question is represented by a index P and you have to answer the LCP (Longest Common Prefix) of the two parts.  Input  First line of input contains a string S.  Second line of input contains a positive number Q representing the number of question Arya will ask you.  Q lines will follow each containing a positive number P  Output  Output Q numbers(the required answer). Each number on a separate line.  Constraints  1 ≤ Length of the string(or L)  ≤ 5 * 10^6  1 ≤ P ≤ L - 1  1 ≤ Q(number of queries) ≤ 10^6   All characters in the string will be small case english alphabets (a-z)    NOTE: C++ users, please do not use cin and cout as test cases are huge, prefer scanf and printf    Example Input: abababa 4 1 2 3 6   Output: 0 2 0 1   Explanation  For the first query, first part is a.and second part is bababa, hence LCP is 0. For the second query, first part is ab.and second part is ababa, hence LCP is 2. For the third query, first part is aba.and second part is baba, hence LCP is 0. For the fourth query, first part is ababab.and second part is a, hence LCP is 1. 
 Lanku lives in a mysterious country having N cities. In his country instead of one capital, any number of cities can be capital. There are many cities in his country, but only the capital cities have all the facilities like hospitals, markets etc. So in order to get anything you have to visit the capital city. In order to simplify it, every city has been assigned to exactly one capital city. Apart from this, every capital city has an entry fee which means that whenever a person from another city enters its assigned capital city, he has to pay some entry fee.  Consider one unit cost is used to travel one unit distance.  You will be given the location of  N cities as N integers   x1 , x2  , x3 .... , xN. You will also be provided with a positive integer K  Now your objective is to choose  exactly K cities as capital and assign every city to exactly one capital city such that following function F is minimized: C[1] = cost to travel from 1^st city to its assigned capital city + fee to enter its assigned capital. C[2] = cost to travel from 2^nd city to its assigned capital city + fee to enter its assigned capital. ..... ..... C[N] = cost to travel from N^th city to its assigned capital city + fee to enter its assigned capital. F = C[1] + C[2] + .... C[N] NOTE: If the i^th city is capital city then C[i] = 0.  Output the minimum possible value of the function F.    Input   First line of input will contain number of test cases T.   First line of each test case will contain 2 integers N and K   Second line of each test case will contain N integers which are the positions of cities in  1-Dimensional co-ordinate system.   Third line of each test case will contain N  integers which are the entry fee of the i^th city.      Output   Output will contain T lines, one for each test case.   Each line will contain one Integer which is the minimum possible value of the function F.      Constraints   1 ≤ T ≤ 10   1 ≤ N ≤ 200   1 ≤ K ≤ 35   K ≤ N   1 ≤ Entry fee, Position of cities ≤ 10^5      Example  Input 1 7 3 9 50 20 39 25 41 10 1 2 3 4 5 6 7  Output: 31    Explanation  In this scenario minimum possible value of F can be obtained by: We will make city 1, 3, 4 as the capitals. Capital at city 1 will be assigned to city 1 and 7. Capital at city 3 will be assigned to city 3 and 5. Capital at city 4 will be assigned to city 2, 4 and 6. C[1] = 0 C[2] = 11 + 4 = 15 C[3] = 0 C[4] = 0 C[5] = 5 + 3 = 8 C[6] = 2 + 4 = 6 C[7] = 1 + 1 = 2  
Mikahs is fond of mathematics and his favourite topic is Sets. He boasts of his knowledge in this topic and Ramu the mathematician is jealous of Mikahs. To take him down, Ramu prepares a tough challenge for Mikahs. He first describes a new quantity for numbers discovered by him. For a number X, the product of prime divisors of X is defined as the Niceness value of X by Ramu.  For Eg. X = 36, 36 = 2^2 * 3^2 therefore Niceness value of 36 is 2*3 = 6.  Now comes his question, an array of size N is given, and 3 integers K, A and B are given. Mikahs is asked to find the number of subsets of size atmost K whose Niceness value is in the range [A, B], where Niceness value of a subset is equal to the sum of Niceness values of its elements. NOTE: Two subsets are different when they contain at least one pair of elements A[i] (in first subset), A[j] (in second subset) where i != j. For eg. For array {2, 3, 2, 4}, subsets {A[0], A[1]} and {A[1], A[2]} are different.     Input First line of the input contains N, K, A, B which are length of array, maximum size of subset required, and the lower and upper bound of the range respectively. Second line contains N space separated integers, the array elements.  Output Print the number of subsets of size at most K whose Niceness value is in the range [A, B].  Constraints  1 ≤ N ≤ 32 1 ≤ K ≤ N 2 ≤ A < B ≤ 10^8 Array elements are in the range [2, 10^6]     Example Input: 4 2 3 6 5 2 3 4  Output: 5    Explanation The 5 subsets are : {5} - Niceness value 5 {3} - Niceness value 3 {2, 3} - Niceness value 2 + 3 = 5 {2, 4} - Niceness value 2 + 2 = 4 {3, 4} - Niceness value 3 + 2 = 5 Thus all subsets are of size atmost 2 and their niceness values are in the range [3, 6]. 
 Vishwas is suffering from sesquipedalophobia i.e. fear of long words. Vishwas cannot tolerate a string of length greater than K. So Dhruv gave him a long string (containing only characters a,b and c) of length N to annoy him. You being his friend, came to his rescue.You cannot change the length of the string. So you came up with a plan to change some of the characters of the string such that string repeats after every K characters. In other words, now he has to only memorize only first K characters and write them N / K times to form the whole string.   For example:- abcabcabc is  acceptable for K = 3.   As changing characters is a costly process, so you have to complete the process in minimum number of changes.Now you have to output the first K characters of these newly formed repetitive string. If there are multiple answer print the lexicographically smallest string.   Input   The first line of the input contains a pair of integers N, K. N is always divisible by K   The second line contains the string containing only characters a,b and c.    Output   Print the first K characters which can be formed in minimum number of changes.Also the output should be lexicographically smallest.    Constraints  1 ≤ K,N ≤ 10^6   Example Input: Input #1: 9 3 abccbcabc  Input #2: 4 2 bacb  Output: Output #1: abc  Ouput #2: ba     Explanation  In the first case,we can make the string repetitive after K characters by making 1 change. Change the 4th character to 'a'. Hence the output is abc. Other option is to output cbc but it requires 2 changes.  
 There are N teams who are solving a problem of Insomnia 2015 Qualifier. Every team has submitted a solution and got AC :) There are two things associated with each team, score S which they have got for successfully solving the problem, and a bonus M which is a score multiplier. You are given S and M for each team i. The net score of i^th team is Si * Mi for 1 ≤ i ≤ N . You have been asked Q queries. In each query you are given a number K and you have to tell which team is on the K^th position in the rank list. The rank list holds the net score and the team number i (1 based index) and is sorted in non increasing order. If the score of any two teams is the same then the team having lesser i value is kept above in the rank list.   Input  First line of the input contains an integer N denoting number of teams. Then follow N lines, each line contains two integers S denoting the score of team i and M denoting the multiplier value of team i separated by a space. Next line contains an integer Q denoting number of queries. Then follow Q lines, each line contains a single integer K which denotes the queried rank number.   Output  For each query output a single integer containing the team number which is on K^th rank.   Constraints  1 ≤ N ≤ 10^4 1 ≤ S ≤ 10^6 1 ≤ M ≤ 10^6 1 ≤ Q ≤ 10^4 1 ≤ K ≤ N i has 1 based indexing   Example Input 1: 5 4 6 1 2 3 4 8 10 4 3 5 1 2 3 4 5  Output 1: 4 1 3 5 2   Input 2: 4 6 6 12 3 3 12 4 9 3 1 2 3  Output 2: 1 2 3    Explanation Example case 1.The score of 5 teams are 24 (4 * 6), 2 (1 * 2), 12(3 * 4), 80 (8 * 10) and 12 (4 * 3) respectively. So the rank list will look like Score   Team 80          4 24          1 12          3 12          5 2            2 Although two teams having number 3 and 5 have the same net score, but team having number 3 is put above than team having number 5 in the rank list as per the sorting policy. Example case 1. As the score of all the teams are same, i.e. 36 so the rank list will contain the team number in order 1 -> 2 -> 3 -> 4 
Cars of future no longer need fuel to run, but they are fitted with special engines which can only operate in one of the two modes at a time ,either go up the road, or go down the road.  There are N towns in country. i^th town is at height H[i] (1 ≤ i ≤ N) above the sea level.  Changing mode of the car requires permissions from mayor of the town you are currently at. Mayor of i^th town charges amount C[i] (1 ≤ i ≤ n) for giving permission to change mode of the car.  These N towns are connected by R bidirectional roads. Initially no mode is set, so you need permissions to set a mode.  You have to travel from town 1 to N, in minimum amount of cost. Print minimum money required to make the travel. If it is impossible print -1.  Note:   Go up the road mode: when you are at town A and want to go to town B, where H[A] <= H[B] Go down the road mode: when you are at town A and want to go to town B, where H[A] ≥ H[B] If you continue with the same mode, you do not need to take permissions from mayor.     Input  First line contains two space separated integer N and R, number of towns and number of roads. Next line contains N space separated integer where i^th integer is H[i], height of i^th town. Next line contains N space separated integer where i^th integer is C[i], cost charged by mayor of i^th town to give permission for changing the mode. Next R lines contains two space separated integer u and v, specifying there is a bidirectional road between town u and v.     Output Print minimum cost required for travel. If it is impossible print -1.  Constraints  2 ≤ N ≤ 100000 1 ≤ R ≤ 500000 1 ≤ H[i] ≤ 10^9 1 ≤ C[i] ≤ 10^9     Example Input: 6 6 10 5 7 15 20 6 1 1 1 1 1 1 1 2 2 3 3 6 1 4 4 5 5 6  Output: 2    Explanation There are two paths from 1 - 6 P1: (1, 2, 3, 6) You need to pay $1 to mayor of town 1 to chose down mode. (H[1] ≥ H[2]) You need to pay $1 to mayor of town 2 to chose up mode. (H[2] <= H[3]) You need to pay $1 to mayor of town 3 to chose down mode. (H[3] ≥ H[6]) Total cost = $3 P2: (1, 4, 5, 6) You need to pay $1 to mayor of town 1 to chose up mode. (H[1] <= H[4]) You continue with the previous up mode. (H[4] <= H[5]) You need to pay $1 to mayor of town 5 to chose down mode. (H[5] ≥ H[6]) Total cost = $2 So minimum money required is $2. 
Mr. Napa, the terrorist, came to MNNIT and has attacked the Lecture Hall. He has a freeze gun and has frozen everyone there. Dassu, the super-human , came to their rescue. Dassu destroyed the freeze gun and ruined NAPA's plan. But Dassu is unable to revert people back to normal. There are 2 red buttons on the top-right block (1, M) . One is to convert all the people on that block back to normal, other is to kill all the people on that block. But the thing is only one button can be pressed and that too once. Dassu wants to save all the people and NAPA wants to kill all of them. Since no one can achieve their goal individually, so NAPA proposed an agreement. He said that both of them want everyone to be present in the top-right block. So they should begin by pushing people towards that block. The one who pushed the last person would press his/her desired button. Now the Lecture hall is rectangular and divided in blocks. There are N rows( 1 , 2 .. , N ) and M columns ( 1, 2 .. , M ). There are P people in the Hall. Now Dassu and Mr. NAPA would play turn  by turn and could select any block( with atleast one person )  and push some people(any positive number) from that block to the block up or right(but not both) of it. Now Dassu wants to know whether to play the game or not. Dassu will move first and will only play the game if Dassu can save everyone. Both Dassu and Mr. NAPA are nerds, so they will make the best possible moves.    NOTE: There may be multiple people on a single block at a time  Input The First line would contain 3 integers - N, M & P The next P lines would contain 2 integers each, the row and column number of each person.     Output "Yes" if DASSU can win the game, and "No" otherwise.     Constraints Should contain all the constraints on the input data that you may have. Format it like:  1 ≤ N * M ≤ 10^18 1 ≤ N,M 1 ≤ P ≤ 10^6 1 ≤ X ≤ N 1 ≤ Y ≤ M     Example Input: 3 3 1 2 2  Output: No    Explanation The person is at (2, 2).  Possible ways to reach (1, 3):- (2, 2) -> (2, 3) -> (1, 3) (2, 2) -> (1, 2) -> (1, 3) In both the case, NAPA is making the last move. ... 
There exist a 2-Dimensional rectangular field of  infinite length and breadth. N Iron Blocks are dropped onto this field from the sky at particular coordinates. However, it is made sure that only one block is dropped at a particular coordinate. You are standing at a particular location (X, Y) of the field. You have a magnet with a power M in your hand. A magnet of power M at coordinates (x1, y1) can attract an iron block at (x2, y2) to its own location if max(abs(x1 - x2), abs(y1 - y2)) ≤ M. (abs represents the absolute value function) Given queries containing your position (X,Y) and the value K. Your task is to find the minimum power of magnet you require to get at least K blocks to your own location. If it is not possible to get K blocks, output -1 for that case.   Input   First line of the input contains an integer N denoting number of blocks. Then follow N lines, i^th line contains two integers x and y denoting the x and y coordinate of i^th block   Next line contains an integer Q denoting number of queries.   Then follow Q lines, each line contains three integers X,Y and K, X and Y denoting your position and K denoting the number of blocks you need to bring to your position.      Output   Q lines containing answers to each of the queries in the input      Constraints   1 ≤ N ≤ 3000   1 ≤ Q  ≤ 100000   1 ≤ Any X or Y Co-ordinate  ≤ 10^9   0 ≤ K  ≤ 10^9      Example Input: 3 1 1 2 2 3 1 4 2 3 1 2 2 1 3 2 1 3 3 4  Output: 1 0 1 -1    Explanation  Query 1: Using a magnet of power 1, block at (2, 2) can be brought to (2, 3).  Query 2: Using a magnet of power 0, block at (2, 2) can be brought to (2, 2).  Query 3: Using a magnet of power 1, blocks at (2, 2) and (3, 1) can be brought to (3, 2).  
  Mo wants to get an internship at  an electronics plant, it's known from past experience that the probability is x  that a new intern who has attended the company's training program will meet  the qualification criteria, and that the corresponding probability is  y  for a new intern who has not attended the company's training program.  k  interns of all  n  new interns attend the training program. Mo is now sad that he did not qualify for the intern. What is the probability that he did not attend the company's training program?    Input The first line contains T the number of test cases. T lines follow. Each line describes a test case with 3 integers n,k,x,y.  Output Output a single floating point(4 digit precision) number which is the required probability.  Constraints  1 ≤ T ≤ 100 0 ≤ k ≤  ≤ n ≤ 10^6 0 ≤ x,y ≤ 1     Example Input: 1 10 8 0.5 0.5  Output: 0.2000  
The expected output of the following C program is to print the elements in the array. But when actually run, it doesn't do so. Code:   #include<stdio.h>   #define dummy (sizeof(temp) / sizeof(2[temp]))   int temp[]  {1,2,3,4};  int main()   { int d;  //Block 1 Starts here  for(d1;d <= (dummy-2);d++)  //Line 1  //Block 1 Ends here           printf("%d\n",temp[d+1]);  return 0;   }  Expected Output:1 2 3 4 Rules: 1)    U can make changes in Block 1 only. 2)    In final program no. of lines in Block 1 should not exceed 2. 
#include<stdio.h> int help(int help) { help=(help++)++; return help; } int main() { int test=10; int pleh=help(test); printf("%d\n",pleh); return 0; }   Expected Output : 12  Rules: 1)    Logic of program should not be changed 
Code given below is intended to find no. of  solutions to the equation : a + b + c ≤ N, such that 0 ≤ a ≤ A, 0 ≤ b ≤ B, 0 ≤ c ≤ C. 0 ≤ N,A,B,C ≤ 2500   long long int f(long long int n) { long long int r; r = (n+1)(n+2)(n+3); return (r/6) ; }   main() { long long int N,A,B,C; scanf("%lld%lld%lld%lld",N,A,B,C); printf("%lld\n",f(N)-f(N-A-1)-f(N-B-1)-f(N-C-1)+f(N-A-B-2)+f(N-A-C-2)+f(N-C-B-2)-f(N-A-B-C-3)); return 0; }   Correct the given program to perform desired function without Changing Logic of Program. 
#include <stdio.h> #include <string.h> main( ) {int size; scanf ("%d",&size); int arr[size],i; for(i=0;i<size;i++) { scanf("%d",arr[i]); printf("%d",arr[i]); } }  Sample Input 2 12 3 Output 2 12 3 
Correct the given program to find Prime Divisors of a given number    #include<stdio.h> int main(void) { int i, num=1; while(num<=10) { i=1; while(i<num) { if(num%i=0); break; i++; } if(i==num) printf("%3d, ", num); num++; } return 0; } 
 PROBLEM 2 #include<stdio.h> #include<string.h> int main()  { char *str1="Intechxication"; char *str2="2012"; char *str3; str3=strcat(str1,str2); printf("%s\n",str3); return 0; } Expected Output:  Intechxication2012  Rules:   U can add at most 3 lines in given code. Changing given  lines of code is not allowed.  
#include<stdio.h> int main() { int a[]={1,2,3,4,5,6}; int *j,k; j=a; j=j*2; k=a+4; k=k/2; printf("%d",1); return 0; }  Rules: 1)    Make the program bug-free by adding at most 3 preprocessor directives. 2)    Changing given lines of  code is not allowed. 
The given program was intended to check if a given number is odd or even. Make program error free without changing logic of program.  #include <stdio.h> int main() {             int number = 0, remainder = 0;             while(number == -1)             {                          printf("Enter an integer (-1 to stop): ");                         scanf("%d",number);              if(number == -1)             {                         remainder = numbre % 2;             }             if(remainder = 1)                         printf("%d is an even number.\n", num);             else                         printf("%f is an odd number.\n", number);             } }  printf("%d is an odd number.", number);  return 0; }  Sample  Input 53  Output 53 is an odd number. 
#include <stdio.h> #include <stdlib.h> const char *names [] = { "kisalaya", "kunal", "aaditya" "jp", "sambhav", "mayank" }; int main() { int i; int choice; for( i = 0; i < 1; i++ ) { choice = rand() % 6; printf( "%s", names[choice] ); } return 0; }  Expected Output : mayank  Rules :  Deleting even a single character from code is not allowed.        2.  U can add at most five characters in program to get desired output. 
#include<stdio.h> int main() {             int a[]={1,2,3,4,5};             int j;             //Block 1 starts here   for(j=5;j>0;- - j )             {                         printf("%d",*a);                         a++; }   //Block 1 ends here   }     Expected Output: 12345   Rules:   Changes can only be made in Block 1.           Using  at least one pointer variable is compulsory 
#include<stdio.h> int f(int); int main() {             int f(int);             int b;             b = f(20);             printf(“%d”,b);             return 0; }   int f(int a) {             a > 20 ?  return (10) : return (20); }   Expected output : 20   Rules: 1)  U can make changes in function f only 2)  Using tertiary operator at least once is compulsory 3)  No. of lines in function f should not exceed 2 
Something is logically wrong with this program. Program is generating output but is logically not correct completely. Correct it.  #include<stdio.h> #include<stdlib.h>  #include<stdio.h> #include<stdlib.h>  int main() {             struct ex             {                         int i;                         float j;                         char *s;             }; struct ex *p;  p=(struct ex*)malloc (sizeof(struct ex)); p->s=(char*)malloc(20); free(p);  printf("Executed");return 0; }  Expected output: Executed 
#include<stdio.h> #include<string.h> #include<malloc.h> const char * make_a_copy(const char *st) { char *copy_st; copy_st=malloc(strlen(st)); strcpy(copy_st,st); return copy_st; } int main() { const char *str1=’A'; const char *str2=make_a_copy(str1); printf("%s\n",str2); return 0; }   Expected Output : A   Rules:   1)    Changes can only be made in main() function 2)    U can delete at most four characters in given program and can add at most 4 characters. 
  Problem description. Chef is playing with 'n' set of planes. He notices that when two planes intersects a line is formed. Being that curious guy that chef already is, he wonders as to how many maximum possible line intersections can he obtain with his n set of planes.Given n set of planes find the maximum number of line intersections that can be seen via the intersections of n planes.  Input  The first line contains the number of test cases, t The t lines that follow contain a number n denoting the number of planes     Output For each of the t test cases print the result    Constraints  1 <= t <= 10^5 1 <= n <= 10^9     Example Input: 2 2 3  Output: 1 3   
As Leonard was driving Sheldon to a comic book store, Sheldon broke up and said, "today i have found the most optimal solution to the problem that you were trying to solve for many many days". he immediately takes out his ipad and show him this code  int main() { 	int testcases; 	long long int number, count; 	scanf("%d", &testcases); 	while(testcases--) { 		scanf("%lld%lld", &number, &count); 		long long int temporary = number; 		while(count--) { 			temporary = (temporary - 1) & number; 		} 		printf("%lld\n", temporary); 	} 	return 0; } Leonard who has been working on this problem said,"this is not an optimal code, yes this will give a correct output but it will takes lots of time to produce it". Sheldon replied, "ok then lets have a bet if you give me a better code than this i will buy you the latest edition of batman action figure, otherwise you will have to give me your collection of superhero figures". Leonard is sure that this code will take lots of time in generating the output, but doesn't know how to make an optimal code. so please help Leonard by making a better code.  Input First line contains the no of test cases 'T'. Then 'T' lines follow each containing two integer 'number' and 'count'.  Output 'T' lines corresponding to each test case which contain the output of the above code if the input were 'number' and 'count' respectively.  LImits T ≤ 1000000 1 ≤ number, count ≤ 10 ^ 18  Example  Input: 2 13 4 12 3  Output: 5 0   
Sruthi is looking at a spreadsheet containing N rows. Only K rows of the spreadsheet are visible at a time (If the top row is i, the bottom row will be i+K-1). In the beginning, rows 1..K are visible. Sruthi needs to read certain values from rows r1,r2...rM in that order. It is possible to scroll the spreadsheet so that the rows j..j+K-1 can be viewed instead of the current i..i+K-1. This operation counts as one scroll and its scroll length is defined as |j-i|  Find the minimum number of scrolls required so that Sruthi can read of all the M values in the given order. As there may be more than one way to do this, also find the minimum total scroll length required to do the reading in so many scrolls.   Input The first line of the input contains the integer T ( ≤ 20), the number of test cases to follow.  The description of each test case begins with a line containing 3 integers N( ≤ 10^8), K( ≤ 10^8) and M( ≤ 50000) as defined in the problem. Following this are M lines giving the row numbers from which values have to be read sequentially.   Output Output two space separated integers in a line per test case : The minimum number of scrolls required and the minimum scroll length required for the minimum number of scrolls.   Example  Input: 2 20 10 2 10 20 20 10 2 10 7  Output: 1 10 0 0  
In Dystopia, chocolates are being distributed to children waiting in a queue. The distribution proceeds as follows. Each chocolate bar is rectangular in shape with integer edge lengths. If the chocolate bar is a square, it is given away completely to the first child in the queue. Otherwise the largest possible square piece of chocolate is broken off from the chocolate bar and given to the first child. After a child receives his share of chocolate, he leaves the queue. The remaining portion of the chocolate bar is dealt with in the same fashion and the whole or a portion of it is given to the next child in the queue.  For example, if we start with a 5x3 chocolate bar, the first child in the queue receives a 3x3 chocolate bar, leaving a 2x3 bar. The second child gets a 2x2 bar while the third and fourth children get 1x1 bars. Thus four children have been fed using the 5x3 bar.  The Dystopian government has got a carton of chocolate bars to be distributed to children in the country. To make sure that maximum inequality is achieved while distributing chocolates, the chocolate bars in the carton are all of different sizes. For every i such that M ≤ i ≤ N and every j such that P ≤ j ≤ Q (where M,N,P,Q are integers) there is exactly one chocolate bar of length i and breadth j in the carton. Here a bar of length i and breadth j is considered to be different from a bar of length j and breadth i.  Given the values of M,N,P,Q find the number of children that can be fed with the chocolate in the carton.   Input The first line of the input contains the number of test cases, T ( ≤ 1000) Following this are T lines, each describing a test case with four integers M,N,P,Q separated by spaces (1 ≤ M ≤ N ≤ 100000000, 1 ≤ P ≤ Q ≤ 1000)   Output Output T lines, each containing an integer : The number of children that can be fed using the chocolate in the carton   Example  Input: 2 1 2 1 2 3 4 4 5  Output: 6 14  
