#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define pii pair <ll, ll>
#define mod 1000000007
#define INF 1e17
using namespace std;
typedef long long ll;
vector<pair<ll,ll> > g[2001];
ll d[2001][2001],chefd[2001][2001];
bool vis[2001];

void sssp(ll s) {
	set<pair<ll,ll> > q;
	q.insert(mp(0LL,s));
	d[s][s]=0;
	while (q.size()) {
		pair<ll,ll> p = *q.begin();
		q.erase(q.find(p));
		ll i,u = p.second;
		for (i=0 ; i < g[u].size(); i++) {
			ll w = g[u][i].second;
			ll v = g[u][i].first;
			if (d[s][v] > d[s][u] + w) {
				if (d[s][v] != INF)
					q.erase(q.find(mp(d[s][v],v)));
				d[s][v]=d[s][u]+w;
				q.insert(mp(d[s][v],v));
			}
		}
	}
}
void dfs(ll s, ll dis, ll start) {
	chefd[start][s] = min(chefd[start][s],dis);
	vis[s]=true;
	ll mindis = INF;
	for (ll i=0 ; i < g[s].size() ; i++) {
		if (!vis[g[s][i].first])
			mindis=min(mindis,(ll)g[s][i].second);
	}
	if (mindis == INF) {
		vis[s]=false;
		return;
	}
	for (ll i=0 ; i < g[s].size() ; i++) {
		pair<ll,ll> p = g[s][i];
		ll v = p.first;
		ll w = p.second;
		if (!vis[v] && w == mindis)
			dfs(v,dis+w,start);
	}
	vis[s]=false;
}
main() {
	ll n,m;
	scanf("%lld%lld",&n,&m);
	ll i,j,k,l;
	for (i=0 ; i < m ; i++)
	{
		ll u,v,w;
		scanf("%lld%lld%lld",&u,&v,&w);
		g[u].pb(mp(v,w));
	}
	for (i=1 ; i <= n ; i++) {
		for (j=1 ; j <= n ; j++)
			d[i][j]=chefd[i][j]=INF;
		sssp(i);
	}
	
	for (i=1 ; i <= n ; i++) {
		memset(vis,false,sizeof vis);
		dfs(i,0,i);
	}
	ll ans=0;
	for (i=1 ; i <= n ; i++)
		for (j=1 ; j <= n ; j++)
			if (chefd[i][j]==d[i][j])
				ans++;
	printf("%lld\n",ans);
	return 0;
}
