#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
#include<assert.h>
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

void unionInit(int d[],int s){int i;rep(i,s)d[i]=i;}
int unionGet(int d[],int n){int t=n,k;while(d[t]!=t)t=d[t];while(d[n]!=n)k=d[n],d[n]=t,n=k;return n;}
int unionConnect(int d[],int a,int b){a=unionGet(d,a);b=unionGet(d,b);if(a==b)return 0;d[a]=b;return 1;}

int is_valid(int N, int M, int ind[], int x[], int y[], int c[]){
  int i;
  rep(i,M) if(!c[i]) if(unionGet(ind, x[i]  ) == unionGet(ind, y[i]  )) return 0;
  return 1;
}

int main(){
  int T, N, M, W;
  int i, j, k;
  int x[202], y[202], c[202];
  int ind[101];

  assert( scanf("%d",&T)==1 );
  assert( 1<=T && T<=100 );
  while(T--){
    assert( scanf("%d%d",&N,&M)==2 );
    assert( 1<=N&&N<=50 && 1<=M&&M<=200 );
    rep(i,M){
      assert( scanf("%d%d",x+i,y+i)==2 );
      assert( 1<=x[i] && x[i]<=N && 1<=y[i] && y[i]<=N && x[i]!=y[i] );
      x[i]--; y[i]--;
      if(x[i] > y[i]) k=x[i], x[i]=y[i], y[i]=k;
      c[i] = 0;
    }
    rep(i,M) REP(j,i+1,M) assert(x[i]!=x[j] || y[i]!=y[j]);
    
    assert( scanf("%d",&W)==1 );
    assert( 1<=W && W<=M );
    while(W--){
      assert( scanf("%d",&i)==1 );
      assert( 1<=i && i<=M && c[i-1]==0 );
      c[i-1] = 1;
    }

    unionInit(ind, 2*N);
    rep(i,M) if(!c[i]){ /* this edge cannot be warped */
      unionConnect(ind, x[i], y[i]+N);
      unionConnect(ind, y[i], x[i]+N);
    }

    if(!is_valid(N, M, ind, x, y, c)){ puts("NO"); continue; }

    puts("YES");
  }

  return 0;
}
