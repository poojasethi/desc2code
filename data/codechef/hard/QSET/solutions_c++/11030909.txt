#include <bits/stdc++.h>
#define maxn 100001

using namespace std;
typedef long long ll;
struct node{
    ll ans;
    int total;
    int prefix[3], suffix[3];
};

int n, m;
node it[5*maxn];
node zero;

void nhap(node a,node b,node &c) {
    c.ans=a.ans+b.ans;
    for(int i=0;i<3;i++) {
        int j=(3-i) % 3;
        c.ans+=ll(a.suffix[i])*b.prefix[j];
    }
    for(int i=0;i<3;i++) {
        c.prefix[i]=a.prefix[i]+b.prefix[(3-a.total+i)%3];
        c.suffix[i]=b.suffix[i]+a.suffix[(3-b.total+i)%3];
    }
    c.total=(a.total+b.total) % 3;
}

void update(int r,int k,int l,int u,int val) {
    if (u<k || u>l) return;
    if (u<=k && l<=u) {
        it[r].total=val%3;
        for(int i=0;i<3;i++)
        it[r].suffix[i]=it[r].prefix[i]=((val%3)==i) ? 1 : 0;
        it[r].ans=((val%3)==0) ? 1 : 0;
        return;
    }
    int g=(k+l)/2;
    update(2*r,k,g,u,val);
    update(2*r+1,g+1,l,u,val);
    nhap(it[2*r],it[2*r+1],it[r]);
}

node get(int r,int k,int l,int u,int v) {
    if (v<k || u>l) return zero;
    if (u<=k && l<=v) return it[r];
    int g=(k+l)/2;
    node t1=get(2*r,k,g,u,v);
    node t2=get(2*r+1,g+1,l,u,v);
    node t;
    nhap(t1,t2,t);
    return t;
}


int main() {
    #ifndef ONLINE_JUDGE
    freopen("inp.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif // ONLINE_JUDGE
    zero.ans=zero.total=0;
    for(int i=0;i<3;i++) zero.prefix[i]=zero.suffix[i]=0;
    scanf("%d%d\n",&n,&m);
    for(int i=1;i<=n;i++) {
        char ch; scanf("%c",&ch);
        update(1,1,n,i,ch-48);
    }
    scanf("\n");
    while (m--) {
        int loai; scanf("%d",&loai);
        if (loai==1) {
            int X, Y; scanf("%d%d",&X,&Y);
            update(1,1,n,X,Y);
        } else {
            int u, v; scanf("%d%d",&u,&v);
            node res=get(1,1,n,u,v);
            printf("%lld\n",res.ans);
        }
    }
}
