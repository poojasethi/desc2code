//============================================================================
// Name        : NumberMaze.cpp
// Author      : 
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include<queue>
#include<cstring>
using namespace std;

const int LIMIT=101;
int status[LIMIT][LIMIT][LIMIT];
char graph[LIMIT][LIMIT];
int dir[]={-1,0,1,0,-1};
int bfsCalMin(int m,int n,int x,int y,int sum){
queue<int> Q;
int i,nx,ny,tsum;
memset(status, 0x33, sizeof(status));
status[x][y][sum]=0;
Q.push(x);
Q.push(y);
Q.push(sum);
while(!Q.empty()){
x=Q.front(),Q.pop();
y=Q.front(),Q.pop();
sum=Q.front(),Q.pop();
for(i=0;i<4;i++){
    nx=x+dir[i];
    ny=y+dir[i+1];
    if(nx>=0&&nx<m&&ny>=0&&ny<n){
        if(graph[nx][ny]!='#'){
                tsum=sum-(graph[nx][ny]-'0');
                if(tsum>0&&status[nx][ny][tsum]>status[x][y][sum]+1){
                    status[nx][ny][tsum]=status[x][y][sum]+1;
                    Q.push(nx);
                    Q.push(ny);
                    Q.push(tsum);
                }else if(tsum==0){
                    return status[x][y][sum]+1;
                }
        }
    }

}
}
return -1;

}


int main()
{
int t,m,n,i,j,x,y,sum;
cin>>t;
while(t--){
    cin>>m,
    cin>>n;
    m=m+1;
    n=n+1;
    for(i=0;i<m;i++){
        for(j=0;j<n;j++){
                cin>>graph[i][j];
                if(graph[i][j]=='.'){
    graph[i][j]='0';
                }else if(graph[i][j]=='*'){
                    graph[i][j]='0';
                    x=i;y=j;
                }
        }
    }
    cin>>sum;
cout<<bfsCalMin(m,n,x,y,sum)<<endl;

}
}

