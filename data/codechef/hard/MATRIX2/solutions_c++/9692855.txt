/***********************
 	
  	root8950

***********************/

#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ppii pair< pii,pii >
#define ppll pair< pll,pll >
#define vi vector<int>
#define MAT vector< vi >

#define ft first
#define sd second
#define mp make_pair
#define pb push_back

#define root 1
#define lft 2*idx
#define rgt 2*idx+1
#define cllft lft,st,mid
#define clrgt rgt,mid+1,ed

#define inf INT_MAX/2
#define linf LLONG_MAX/2

#define all(p) p.begin(),p.end()
#define set(p) memset(p, -1, sizeof(p))
#define clr(p) memset(p, 0, sizeof(p))
#define mem(p, v) memset(p, v, sizeof(p))
#define cpy(d, s) memcpy(d, s, sizeof(s))
#define asst(X,L,R) assert(X >= L && X <= R)

#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)

/*
#define gc getchar_unlocked
int rd_int(){ int num=0; char c=gc(); bool flag=0; while(!((c>='0' & c<='9') || c == '-')) c=gc(); if(c=='-'){ flag=1; c=gc(); } while(c>='0' && c<='9'){ num=(num<<1)+(num<<3)+c-'0'; c=gc(); } if(flag) return -num; return num; }
#define pc putchar_unlocked
void wr_int(int num){ if(num<0){pc('-');num=-num;} char snum[20];int i=0;do{snum[i++]=num%10+48;num/=10;}while(num);i--;while(i>=0){pc(snum[i--]);}pc('\n');}
*/

template <class T> T max(T a,T b,T c){return ( ( a > b ) ? ( ( a > c) ? a : c ) : ( ( b > c ) ? b : c ) );}
template <class T> T min(T a,T b,T c){return ( ( a < b ) ? ( ( a < c) ? a : c ) : ( ( b < c ) ? b : c ) );}
// compiling with gcc11 or above
// g++ -std=c++0x
// PIE is defined as M_PI

/////////////////////////////////////////////////////////////////////////MACRO ENDS//////////////////////////////////////////////////////////////////////////

const int MOD = 1000000000 + 7 ;
const int MAXN = 100000 + 9 ;

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t=1;
	//cin >> t;
	while(t--){
		int n,m;
		cin >> n >> m;
		MAT vec(n+2,vi(m+2));
		string str;
		for(int i=1;i<=n;i++){
			cin >> str;
			for(int j=1;j<=m;j++){
				vec[i][j]=str[j-1]-'0';
			}
		}
		MAT dp(n+2,vi(m+2));
		for(int i=1;i<=n;i++){
			for(int j=1;j<=m;j++){
				dp[i][j]=dp[i-1][j]+vec[i][j];
			}
		}
		ll ans=0;
		for(int j=m;j>=1;j--){
			pii a=mp(1,j);
			pii b=a;
			int cnt=1;
			while(b.sd != (m+2) && b.ft != (n+2)){
				int sm=dp[b.ft][b.sd] - dp[a.ft-1][b.sd];
				if(sm==cnt){
					cnt++;
					b.ft++;
					b.sd++;
				}
				else{
					//cout << a.ft << " " << a.sd << ": " << b.ft << " " << b.sd << "\n";
					ans+=b.ft-a.ft;
					a.ft++;
					a.sd++;
					if(a.ft > b.ft){
						b=a;
					}
					cnt=b.ft-a.ft+1;
				}
			}
		}
		for(int i=2;i<=n;i++){
			pii a=mp(i,1);
			pii b=a;
			int cnt=1;
			while(b.ft != (n+2) && b.sd != (m+2)){
				int sm=dp[b.ft][b.sd] - dp[a.ft-1][b.sd];
				//cout << a.ft << " " << a.sd << "\n" << b.ft << " "<< b.sd << "\n";
				if(sm==cnt){
					cnt++;
					b.ft++;
					b.sd++;
				}
				else{
					//cnt=1;
					ans+=b.ft-a.ft;
					a.ft++;
					a.sd++;
					if(a.ft > b.ft){
						b=a;
					}
					cnt=b.ft-a.ft+1;
				}
			}
		}
		cout << ans << "\n";
	}
	return 0;
}
