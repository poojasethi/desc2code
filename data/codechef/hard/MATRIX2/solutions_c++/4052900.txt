#include <bits/stdc++.h>
using namespace std;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef unsigned long long ull;
typedef long long int lli;
typedef unsigned int ui;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef long double ld;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0; (i) < (n); ++i)
#define rept(i,a,b) for(var(i,a); i < (b); ++i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
#define fill(a,val) memset(a,val,sizeof(a))
#define gi(n) scanf("%d",&n);
#define all(v) v.begin(),v.end()
#define iinp() input<int>()
#define linp() input<lli>()
#define uinp() input<ull>()
#include <string.h>

#define get getchar
vector<pii> v;
vector<int> color;
struct mysort{
bool operator()(const pii &a, const pii &b){
return(a.first<b.first);
}
};

//fast function to scan various integer data types
template <typename T>
inline T input() {
T n = 0;
int s = 1;
char p = get();

while((p < '0' || p > '9') && p != EOF && p != '-')
p = get();

if(p == '-'){ s = -1, p = get(); }

while(p >= '0' && p <= '9') {
n = (n << 3) + (n << 1) + (p - '0');
p = get();
}
return n*s;
}

int main(int argc, char** argv) {
#ifdef LOCAL
    freopen("in", "r", stdin);
#endif
short matrix[2000][2000];

ios_base::sync_with_stdio(false);

int n, m;
cin >>n >> m;


rep(i,n){
string s;
cin >> s;
rep(j,m){
matrix[i][j]=(int)(s[j]-'0');
}
}
//cout << "yo" << endl;


lli count=0;
rep(i,m){
if(matrix[0][i]==1)
count++;
}
for(int i=1;i<n;i++){
if(matrix[i][0]==1)
	count++;
}


for(int i=1;i<n;i++){
for(int j=1;j<m;j++){
	if(matrix[i][j]==1){
matrix[i][j]=min(matrix[i-1][j],matrix[i-1][j-1])+1;
count=count+matrix[i][j];}
}
}
/*
rep(i,n){
rep(j,m)
cout << matrix[i][j];
cout << endl;
}
*/
cout << count << endl;

return 0;
}