#include <stdio.h>
#include <iostream>
#include <stdlib.h>
#include <math.h>
#include <vector>
#include <string.h>
#define mod 19101995
using namespace std;
int a[100005][20],n;
vector <int> edge[100005],child[100005];
int visited[100005],val;
void dfs(int num)
{   	
visited[num]=1;
	int i=0;
	while(i<edge[num].size()){
		if(!visited[edge[num][i]])
		{ 
		dfs(edge[num][i]);
		child[num].push_back(edge[num][i]);}		
		i++;}
}
long long int rec(int num,int count)
{
	//printf("num= %d count= %d\n",num,count);
	if(count>val)return 0;
	if(a[num][count]!=-1)
		return a[num][count];
	int i,j;
	long long int g;
	int no=child[num].size(),left[no],right[no];	
	if(no==0)
	{a[num][count]=1;
	return 1;}
	a[num][count]=0;
		g=1;
		for(j=0;j<no;j++)
			g=g*rec(child[num][j],count+1),g%=mod,left[j]=g;
		g=1;
		for(j=no-1;j>=0;j--)
			g=g*rec(child[num][j],count+1),g%=mod,right[j]=g;
		a[num][count]=0;
		for(j=0;j<no;j++)
		{g=1;
			if(j)
				g=g*left[j-1],g%=mod;
			if(j<(no-1))
				g=g*right[j+1],g%=mod;
		g*=rec(child[num][j],count),g%=mod;	
		a[num][count]+=g,a[num][count]%=mod;
		}
return a[num][count];
}
int main(){
int p,q,i,j;
scanf("%d",&n);
for(i=0;i<n;i++)
visited[i]=0;
memset(a,-1,sizeof(a));
for(i=0;i<n-1;i++)
{
	scanf("%d%d",&p,&q),p--,q--;
	edge[p].push_back(q);
	edge[q].push_back(p);	
}
val=log(n)/log(2);
dfs(0);
printf("%lld\n",rec(0,0));
	return 0;}
