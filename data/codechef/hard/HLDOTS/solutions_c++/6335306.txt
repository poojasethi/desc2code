#include <cstdlib> 
#include <cctype> 
#include <cstring> 
#include <cstdio> 
#include <cmath> 
#include <algorithm> 
#include <vector> 
#include <string> 
#include <iostream> 
#include <sstream> 
#include <map> 
#include <set> 
#include <queue> 
#include <stack> 
#include <fstream> 
#include <numeric> 
#include <iomanip> 
#include <bitset> 
#include <list> 
#include <stdexcept> 
#include <functional> 
#include <utility> 
#include <ctime> 
#define pb push_back
#define mk make_pair
#define F first
#define S second
#define MOD 19101995
using namespace std;
int dp[100001][20];
vector<vector<int> > gr(100001);
vector<vector<int> > ch(100001);
void dfs(int p,int v)
{
    for(int i=0;i<gr[v].size();i++)
    { if(gr[v][i]!=p)
       ch[v].pb(gr[v][i]);
    }
    for(int i=0;i<ch[v].size();i++)
      dfs(v,ch[v][i]);
    
    return;
}
int light;
int count1(int v,int l)
{
    int c=ch[v].size();
    
    if(l>light)
     return 0;
    if(c==0)
     {//printf("dp[%d %d]=%d\n",v,l,1);
             return 1;
    }
    
    if(dp[v][l]!=-1)
     return dp[v][l];
     
     long long s=0;
     long long pr=1;
     vector<int> left,right;
     
     for(int i=0;i<ch[v].size();i++)
     {  
             pr*=count1(ch[v][i],l+1);
             pr%=MOD;
             left.pb(pr);
             right.pb(0);
     }
     pr=1;
     for(int i=ch[v].size()-1;i>=0;i--)
     {  pr*=count1(ch[v][i],l+1);
        pr%=MOD;
        right[i]=pr;
     }
    for(int i=0;i<ch[v].size();i++)
    {
        pr=1;
           
            pr=pr*(i-1<0?1:left[i-1]);
            pr=pr*count1(ch[v][i],l);
            pr%=MOD;
            pr*=(i+1<ch[v].size()?right[i+1]:1);
            pr%=MOD;
        s+=pr;
        s%=MOD;
   } 
   dp[v][l]=s;
  // printf("dp[%d %d]=%d\n",v,l,dp[v][l]);
   return s;
}   
         
int main(void)
{
    int n,a,b;
    scanf("%d",&n);
    memset(dp,0xff,sizeof dp);
    for(int i=0;i<n-1;i++)
    { scanf("%d %d",&a,&b);
      a--;b--;
      gr[a].pb(b);
      gr[b].pb(a);
    }
    int t=n,l=0;
    while(t!=1)
    { l++;
      t=t>>1;
    }
    light=l;
    dfs(-1,0);
    printf("%d\n",count1(0,0));
    //cin>>t;
    return 0;
}
