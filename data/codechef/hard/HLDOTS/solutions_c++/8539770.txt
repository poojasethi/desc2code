#include <bits/stdc++.h>
using namespace std;
#define MOD 19101995
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long
 
const int N = 1e5+5;
vi adj[N];
bool visited[N];
vi child[N];
int dp[N][20];
int n;
inline void dfs(int u) {
    visited[u]=true;
    F(i,0,adj[u].size()) {
	int v = adj[u][i];
	if(!visited[v]) {
	    dfs(v);
	    child[u].pb(v);
	}
    }
}
LL rec(int u,int cnt) {
    if( (1<<cnt) > n) {
	return 0;
    }
    if(dp[u][cnt]!=-1) {
	return dp[u][cnt];
    }
    int sz = child[u].size();
    if(sz==0) {
	return 1;
    }
    LL ret = 0;
    LL ans = 1;
    vector<int> left(sz+1);
    vector<int> right(sz+1);
    for(int i=0;i<sz;i++) {
	ans=ans*rec(child[u][i],cnt+1);
	ans%=MOD;
	left[i]=ans;
    }
    ans = 1;
    for(int i=sz-1;i>=0;i--) {
	ans=ans*rec(child[u][i],cnt+1);
	ans%=MOD;
	right[i]=ans;
    }
    for(int i=0;i<sz;i++) {
	LL temp =1;
	if(i) {
	    temp=temp*left[i-1];
	    temp%=MOD;
	}
	if(i<sz-1) {
	    temp=temp*right[i+1];
	    temp%=MOD;
	}
	temp=temp*rec(child[u][i],cnt);
	temp%=MOD;
	ret+=temp;
	ret%=MOD;
    }
    return dp[u][cnt]=ret;
}
int main() {
    sci(n);
    F(i,0,n-1) {
	int x,y;sci(x);sci(y);
	adj[x].pb(y);
	adj[y].pb(x);
    }
    dfs(1);
    M(dp,-1);
    cout<<rec(1,0)<<endl;
}
 