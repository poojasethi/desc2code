#pragma comment(linker, "/STACK:1024000000,1024000000") 
#include <iostream> 
#include <stdlib.h> 
#include <ctime> 
#include <cmath> 
#include <stdio.h> 
#include <vector> 
#include <algorithm> 
#include <queue> 
#include <string.h> 
#include <map> 
#include <set> 
#include <assert.h>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define inf 1000000007 
//#define mod 19101995
#define all(x) x.begin(),x.end() 
#define N 100010
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std; 
 
int lim,dp[N][20],mod=19101995,sz[N];ll f[N];
vi g[N];
int pow(int a,int b)
{
    if(a==0)return 0;
    int ans=1;
    while(b){
        if(b&1)ans=1LL*ans*a%mod;
        b>>=1;a=1LL*a*a%mod;
    }
    return ans;
}
void dfs(int u,int fa)
{
    for(int i=0;i<=lim;i++)dp[u][i]=0;
    dp[u][0]=1;sz[u]=1;
    vi v;
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        dfs(j,u);v.pb(j);sz[u]+=sz[j];
    }
    if(v.size()==0){
        for(int i=1;i<=lim;i++)dp[u][i]=1;
            return ;
    }
    if(v.size()==1){
        int j=v[0];
        for(int k=0;k<=lim;k++)dp[u][k]=dp[j][k];
        return;
    }
    dp[u][0]=0;
    
    for(int k=0;k<lim;k++){
        f[v.size()]=1;
        for(int i=v.size()-1;i>=0;i--){
            f[i]=f[i+1]*dp[v[i]][k]%mod;
        }
        ll res=1,tot=0;
        for(int i=0;i<v.size();i++){
            tot=(tot+res*f[i+1]%mod*dp[v[i]][k+1])%mod;
            res=res*dp[v[i]][k]%mod;
        }
        dp[u][k+1]=tot;
    }
    //for(int k=le+1;k<=lim;k++)dp[u][k]=dp[u][k-1];
}
int ex_gcd(int a,int b,int &x,int &y)
{
    if(b==0){x=1,y=0;return a;}
    int x1,y1,r=ex_gcd(b,a%b,x1,y1);
    x=y1;
    y=x1-a/b*x;
    return r;
}
int main() 
{ 
    int i,j,k,ca=0,m,n;
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    /*
    n=mod;vi v;
    for(i=2;i<=n/i;i++){
        if(n%i==0){v.pb(i);while(n%i==0)n/=i;}
    }
    if(n>1)v.pb(n);
    for(i=0;i<v.size();i++){
        j=v[i];mod=j;
        for(k=0;k<j;k++)inv[k][i]=pow(k,mod-2);
    }
    */
    scanf("%d",&n);
    for(i=1;i<n;i++){
        scanf("%d%d",&j,&k);
        j--,k--;
        g[j].pb(k);g[k].pb(j);
    }
    i=0;
    while(1LL<<i<=n)i++;
    i--;
    m=lim=i;
    dfs(0,-1);
    printf("%d\n",dp[0][m]);
    /*
    //DBG(lim)DBG(v.size())
    int a=-1,c,x,y;
    for(i=0;i<v.size();i++){
        t=i;
        mod=v[i];
        dfs(0,-1);
        //cerr<<mod<<" "<<dp[0][m]<<"\n";
        if(a==-1){a=v[i],c=dp[0][m];}
        else{
            ex_gcd(a,mod,x,y);
            int nc=dp[0][m]-c;
            int nm=a*mod;
            c=(1LL*a*x%nm*nc%nm+c)%nm;
            if(c<0)c+=nm;
            a=nm;
        }
    }
    printf("%d\n",c);
    */
} 