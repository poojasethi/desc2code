#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
#include <cstring>
using namespace std ;
 
#define FOREACH(it,c) for( __typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define FOR(i,a,b) for( int i=(a),_b=(b);i<=_b;i++) 
#define DOW(i,b,a) for( int i=(b),_a=(a);i>=_a;i--)
#define REP(i,n) FOR(i,0,(n)-1)
#define DEP(i,n) DOW(i,(n)-1,0)
#define all(a) (a).begin() , (a).end()
#define push(a,b) (a).push_back((b))
#define For(i,a,b) for(int i = a; i < b; i++)
 
typedef vector<int> VI ;
typedef vector<string> VS ;
typedef long long ll;
template<class T> inline int size(const T&c) { return c.size(); }  

const int maxN = 2014;

int test, n, k, c, sum, mex;
bool vis[maxN+20];
int G[maxN][maxN];

void PreProcess(){//Tinh ham grundy G[n][k]
	//G[0][j] = 0 : terminate position
	for(int i = 1; i < maxN; i++){
		mex = 0;
		memset(vis, false, sizeof(vis));
		//vis[0] = true;
		for(int j = 1; j <= i; j++){
			vis[G[i-j][j]] = true;
			//printf("%d %d ", i, j);
			while (vis[mex]) mex++;
			//printf("%d\n", mex);
			G[i][j] = mex;
			//vis[G[i][j]] = true;
		}
		for(int j = i+1; j <= maxN; j++) G[i][j] = G[i][i];
	}
}

int main(){
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	PreProcess();
	scanf("%d", &test);
	while (test--){
		scanf("%d %d", &n, &k);
		sum = 0;
		for(int i = 1; i <= n; i++){
			scanf("%d", &c);
			sum ^= G[c][min(c,k)];
		}
		printf("%s\n", sum == 0 ? "Zeta" : "Nancy");
	}

	return 0;
}