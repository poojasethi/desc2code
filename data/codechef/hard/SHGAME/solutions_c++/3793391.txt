/*
	Author: Zhouxing Shi
	Date: Apr23, 2014
	Description:
*/

#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <set>
#include <cstdlib>
#include <ctime>
#include <map>
#include <cmath>
#include <string>
#include <stack>
#include <iostream>
#include <complex>
#define rep(i, a, b) for (int i = (a); i <= (b); ++i)
#define drep(i, a, b) for (int i = (a); i >= (b); --i)
#define pb(x) push_back(x)
#define ins(x) insert(x)
#define ps(x) push(x)
#define clr() clear()
#define mp(x, y) (make_pair(x, y))
#define xx first
#define yy second
#define call puts("I'm here!")

using namespace std;

typedef long long llu;
typedef unsigned long long ull;
typedef long double ld;
typedef pair<int, int> pii;
typedef complex<double> cdb;
const int inf = ~0U >> 1;
const llu INF = (llu)1e18;
const double pi = acos(-1.0);
template <class T> inline T sqr(T a) { return a * a; }
template <class T> inline T min(T a, T b, T c) { return min(min(a, b), c); }
template <class T> inline T max(T a, T b, T c) { return max(max(a, b), c); }
template <class T> inline void read(T &n)
{
    char c;
	for (c = getchar(); !(c >= '0' && c <= '9'); c = getchar()); n = c - '0';
    for (c = getchar(); c >= '0' && c <= '9'; c = getchar()) n = n * 10 + c - '0';
}
int pw(int base, int n, int mo)
{
	if (n == 0) return 1;
	if (n == 1) return base;
	int tmp = pw(base, n >> 1, mo);
	tmp = (llu)tmp * tmp % mo;
	if (n & 1) tmp = (llu)tmp * base % mo;
	return tmp;
}

//***************************

int cases, N, M;
llu cnt[2000000];

int main()
{
	scanf("%d", &cases);
	while (cases--)
	{
		llu ans = 0;
		scanf("%d%d", &N, &M);
		memset(cnt, 0, sizeof(cnt));
		rep(i, 1, N) cnt[(i - 1) ^ (N - i)]++;
		rep(i, 1, M) ans += cnt[(i - 1) ^ (M - i)];
		printf("%lld\n", (llu)N * M - ans);
	}
 	return 0;
}
