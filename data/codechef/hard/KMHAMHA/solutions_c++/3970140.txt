#include<bits/stdc++.h>
#define ll long long
#define pn() printf("\n")
#define si(x) scanf("%d",&x)
#define sll(x) scanf("%lld",&x)
#define sc(x) scanf("%c",&x)
#define pc(x) printf("%c",x)
#define sf(x) scanf("%f",&x)
#define pf(x) printf("%f",x)
#define sd(x) scanf("%lf",&x)
#define pd(x) printf("%lf",x)
#define sld(x) scanf("%Lf",&x)
#define pld(x) printf("%.8Lf",x)
#define MOD 1000000007LL
using namespace std;
list<int> l[1000];
map<int,int> hashx,hashy;
int matched_to[1000];
bool ismatched[1000];
bool can_match(int u){
    for(list<int>::iterator it=l[u].begin();it!=l[u].end();it++){
        //printf("attempting to match %d with %d..\n",u,*it);
        if(matched_to[*it]==-1){
            //printf("%d is not matched...so matching now with %d!\n",*it,u);
            matched_to[*it]=u;
            ismatched[*it]=true;
            return true;
        }
        else if(!ismatched[*it]){
            //printf("%d is already matched with %d...testing if %d can be matched to something else..\n",*it,matched_to[*it],matched_to[*it]);
            int save=matched_to[*it];
            ismatched[*it]=true;
            if(can_match(save)){
                matched_to[*it]=u;
                //printf("another match for %d found...so %d is now matched to %d..",matched_to[*it],*it,u);
                return true;
            }
        }
    }
    //printf("cannot match %d to anything!!\n",u);
    return false;
}
int main(void){
    std::ios_base::sync_with_stdio(false);
    int t;
    cin>>t;
    while(t--){
        hashx.clear();
        hashy.clear();
        for(int i=0;i<1000;i++)
            l[i].clear();
        int n;
        cin>>n;
        for(int i=0;i<n;i++){
            int x,y;
            cin>>x>>y;
            if(hashx.count(x)==0){
                int temp=hashx.size();
                hashx[x]=temp;
            }
            x=hashx[x];
            if(hashy.count(y)==0){
                int temp=hashy.size();
                hashy[y]=temp;
            }
            y=hashy[y];
            l[x].push_back(y);
        }
        memset(matched_to,-1,sizeof(matched_to));
        int ans=0;
        for(int i=0;i<hashx.size();i++){
            memset(ismatched,false,sizeof(ismatched));
            //printf("Attempting to match:%d\n",i);
            if(can_match(i)){
                //printf("Matched!");
                ans++;
            }
        }
        //printf("Final answer:");
        cout<<ans<<endl;
    }
    return 0;
}
