/*
    subway
*/
#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define total 5000005
#define M 1000000000001
#define NIL 0
#define MAXN 200001
#define EPS 1e-5
#define INF (1<<28)
typedef unsigned long long int uint64;
typedef long long int int64;
map<int,int>hashx,hashy;
int stamp;
vector<int>grph[1111];
int l[1200],r[1200],mark[1200];
void seet(){
//	memset(last,-1,sizeof(last));
	//e=0;
	stamp=0;
	hashx.clear();
	hashy.clear();
}
void add_edge(int x,int y){
	grph[x].pb(y);
}
bool pairup(int idx){
	for(int i=0;i<grph[idx].size();i++){
		int v=grph[idx][i];
		if(mark[v]==stamp)
		continue;
		mark[v]=stamp;
		if((r[v]==-1)||(pairup(r[v]))){
			r[v]=idx;
			l[idx]=v;
			return true;
		}
	}
	return false;
}
int hopcrof(){
for(int i=0;i<1100;i++){
	l[i]=-1;
	r[i]=-1;
	mark[i]=-1;
}
bool chng=true;
while(chng){
	chng=false;
	stamp++;
	for(int i=0;i<hashx.size();i++){
		if(l[i]==-1)
		chng|=pairup(i);
	}
}
int ret=0;
for(int i=0;i<hashx.size();i++){
	ret+=(l[i]!=-1);
}
return ret;	
}
int main(){
	int t,n,x,y,i;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		seet();
		while(n--){
			scanf("%d%d",&x,&y);
			int id;
			if(hashx.count(x)==0){
				id=hashx.size();
				grph[id].clear();
				hashx[x]=id;
			}
			x=hashx[x];
			if(hashy.count(y)==0){
				id=hashy.size();
				hashy[y]=id;
			}
			y=hashy[y];
		//	cout<<x<<" "<<y<<endl;
			add_edge(x,y);
		}
		printf("%d\n",hopcrof());
	}
	return 0;
}