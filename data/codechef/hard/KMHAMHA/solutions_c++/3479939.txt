#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include <math.h>
#include <string>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <map>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <utility>
#include <iomanip>
using namespace std;




#define LL long long
#define rep(i,a,n) for(LL i = a;i<n;i++)
#define S(a) scanf("%d",&a)
#define P(a) printf("%d\n",a)
#define PS(s) printf(s)
#define SLL(a) scanf("%lld",&a)
#define PLL(a) printf("%lld\n",a)


#define II LL


#define MOD 1000000007      
#define mp make_pair
#define pb push_back

//, col_it;
map<LL,LL> placed;
map<LL,LL> seen;
set<pair<LL,LL> > good;


bool bpm(LL x)
{
	set<pair<LL,LL> > :: iterator good_it;
	good_it = good.find(mp(x,(LL)(-10)));
	++good_it;
	cerr<<"for "<<x-1<<" trying (";
	for(;(good_it->first)==x;++good_it)
	{
		cerr<<"good found "<<(good_it->first)<<" "<<(good_it->second)<<endl;
		LL k = good_it->second;
		cerr<<k-1<<",";
		if(seen[k]) continue;
		seen[k] = true;
		if(placed[k]==0 || bpm(placed[k]))
		{
			placed[k] = x;
			cerr<<"placed "<<k-1<<" "<<x-1<<")"<<endl;
			return true;
		}
	}
	cerr<<")"<<endl;
	return false;
}


int main()
{
    LL test;
    SLL(test);
    
    while(test--)
    {
    	LL n;SLL(n);
    	 placed.clear();
    	set<LL> rows;rows.clear();//cols.clear();
    	
    	good.clear();
    	LL x,y;
    	rep(i,0,n)
    	{
    		SLL(x);SLL(y);
    		x++;y++;
    		rows.insert(x);
    		//cols.insert(y);
    		//good[(mp(x,y))] = true;
    		cerr<<"good insert"<<x<<" "<<y<<endl;
    		cerr<<"good insert"<<x<<" "<<(-10)<<endl;
    		good.insert(mp(x,y));
    		good.insert(mp(x,(LL)(-10)));
    	}
    	
    	LL count = 0;
    	set<LL>::iterator row_it;
    	for(row_it = rows.begin(); row_it != rows.end();++row_it)
    	{
    		seen.clear();
    		if(bpm(*row_it)) count++;
    	}
    	printf("%lld\n",count );

    }
    
    
	return 0;
}



