#include<cstdio>
#include<vector>
#include<map>
#include<cstring>
#include<iostream>
using namespace std;
typedef vector< int > vi;
map< int,int > row,col;
int vis[1005],stamp;
int match[1005];
vi adj[1005];
bool dfs_augmnt_path_exists(int u)
{
	for(int i=0;i<adj[u].size();i++)
	{
		int v=adj[u][i];
		if(vis[v]==stamp)
			continue;
		vis[v]=stamp;
		if(match[v]==-1 || dfs_augmnt_path_exists(match[v]))
		{
			match[v]=u;
			return true;
		}
	}
	return false;
}
int return_max_match()
{
	memset(match,-1,sizeof(match));
	memset(vis,-1,sizeof(vis));
	int maxmatch=0,i;
	for(i=0;i<row.size();i++)
	{
		stamp++;
		if(dfs_augmnt_path_exists(i))
			maxmatch++;
	}
	return maxmatch;
}
int main()
{
	int t,x,y,n,id;
	scanf("%d",&t);
	while(t--)
	{
		stamp=0;
		row.clear();
		col.clear();
		scanf("%d",&n);
		while(n--)
		{
			scanf("%d%d",&x,&y);
			if(!row.count(x))
			{
				id=row.size();
				row[x]=id;
				adj[row[x]].clear();
			}
			if(!col.count(y))
			{
				id=col.size();
				col[y]=id;
			}
			//cout<<row[x]<<" "<<col[y]<<endl;
			adj[row[x]].push_back(col[y]);
		}
		printf("%d\n",return_max_match());
	}
	return 0;
} 