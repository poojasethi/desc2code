#include <iostream>
#include <cstdio>
#include <string.h>
#include <map>
using namespace std;
bool bpGraph[2001][2001];
int u;
bool seen[2001];
int matchR[2001];
int row,col;
map<int,int> mymap;
map<int,int>::iterator it;

bool bpm(int u)
{
    for (int v = 0; v < col; v++)
    {
        if (bpGraph[u][v] && !seen[v])
        {
            seen[v] = true;
            if (matchR[v] < 0 || bpm(matchR[v]))
            {
                matchR[v] = u;
                return true;
            }
        }
    }
    return false;
}

int maxBPM()
{

    int result = 0;
    memset(matchR, -1, sizeof(matchR));
    for (int u = 0; u < row; u++)
    {
			 memset(seen, 0, sizeof(seen));
			 if (bpm(u))
				result++;
    }
    return result;
}

void init()
{
  for(int i=0;i<row;i++)
  {
		for(int j=0;j<col;j++)
			bpGraph[i][j]=false;
	}
}
int main()
{
	//freopen("input.txt","r",stdin);
	int test,n,a,b,inc=0;
	cin >> test;
	while(test--)
	{
		init();
		cin >> n;
		inc=0;
		row=-1,col=-1;
		for(int i=0;i<n;i++)
		{
			cin >> a >> b;
			it = mymap.find(a);
			if(it==mymap.end())
			{
				mymap[a]=inc;
				inc++;
			}
			it = mymap.find(b);
			if(it==mymap.end())
			{
				mymap[b]=inc;
				inc++;
			}
			if(row<mymap[a])
					row = mymap[a];
			if(col < mymap[b])
					col = mymap[b];
			bpGraph[mymap[a]][mymap[b]]=true;
		}
		row++;
		col++;
		cout << maxBPM() << endl;
		mymap.clear();
	}

	return 0;
}
