#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <list>
#include <cstdlib>
#include <string.h>
#include <algorithm>
#include <cmath>
#define ll long long
#define ll long long


using namespace std;
multimap<int,int> x,y;
map<int,int> sizex,sizey;
int main()
{

    int n,cases,x1,y1,xmax,ymax,result;
    scanf("%d",&cases);
    while(cases--)
    {
        result=0;
        scanf("%d",&n);
        for(int i=1;i<=n;i++)
        {
            scanf("%d %d",&x1,&y1);
            x.insert(std::pair<int,int>(x1,y1));
            y.insert(std::pair<int,int>(y1,x1));
            sizex[x1]++;
            sizey[y1]++;

        }
        multimap<int,int>::iterator iter,it;
        while(!x.empty()&&!y.empty())
        {
           // cout<<"size of x "<<x.size()<<endl;
            map<int,int>::iterator it1=sizex.begin();

            xmax=it1->first;
            for(;it1!=sizex.end();it1++)
            {
                if(sizex[it1->first]>sizex[xmax])
                {
                    xmax=it1->first;
                }
            }
            it1=sizey.begin();
            ymax=it1->first;
            for(;it1!=sizey.end();it1++)
            {
                if(sizey[it1->first]>sizey[ymax])
                {
                    ymax=it1->first;
                }
            }
             multimap<int,int>::iterator low,high;
            low=x.lower_bound(xmax); high=x.upper_bound(xmax);
            int nul=0;
            for(;low!=high;low++)
            {
                if(sizey[low->second]-1==0)
                    nul++;
            }
            int prow=(sizex.size()-1)*(sizey.size()-nul);
            low=y.lower_bound(ymax); high=y.upper_bound(ymax);

            for(nul=0;low!=high;low++)
            {
                if(sizex[low->second]-1==0)
                    nul++;
            }
             int pcol=(sizey.size()-1)*(sizex.size()-nul);

           if(prow<=pcol)
            {

                result++;
                x.erase(xmax);
                sizex.erase(xmax);
                iter=y.begin();
                y.erase(iter,y.end());

                it1=sizey.begin();


                    sizey.erase(it1,sizey.end());


                if(!x.empty())
                {

                    for(it=x.begin();it!=x.end();it++)
                    {

                        int l=it->second,m=it->first;
                       // y.insert(l,m);
                       y.insert(std::pair<int,int>(l,m));
                       sizey[l]++;

                    }




                }

            }
            else
            {

                result++;
                y.erase(ymax);
                sizey.erase(ymax);
                it=x.begin();
                x.erase(it,x.end());
                it1=sizex.begin();

                sizex.erase(it1,sizex.end());

                if(!y.empty())
                {
                    for(it=y.begin();it!=y.end();it++)
                    {
                        int l=it->second,m=it->first;
                        x.insert(std::pair<int,int>(l,m));
                        sizex[l]++;
                    }



                }
            }

        }
        printf("%d\n",result);
    }
    return 0;
}
