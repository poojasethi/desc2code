#include <bits/stdc++.h>
#define ii pair<int, int>
#define X first
#define Y second
const int N = 33;
const int NN = N * N;
const int dx[] = {-2, -2, -1, 1, 2, 2, 1, -1};
const int dy[] = {-1, 1, 2, -2, 1, -1, 2, -2};

using namespace std;

bool obs[N][N];
ii matchX[N][N], matchY[N][N], T[N][N];
ii Q[NN];
int m, n;

ii FindPath() {
    int l = 1, r = 0, i, j, x, y; ii u;
    for(i = 1; i <= m; i++) for(j = 1; j <= n; j++)
        if (matchX[i][j].X == 0 && !obs[i][j] && (i + j) % 2) Q[++r] = ii(i, j);
    for(i = 1; i <= m; i++) for(j = 1; j <= n; j++) T[i][j] = ii(0, 0);
    while (l <= r) {
        u = Q[l++];
        for(i = 0; i < 8; i++) {
            x = u.X + dx[i]; y = u.Y + dy[i];
            if (x < 1 || y < 1 || x > m || y > n || obs[x][y]) continue;
            if (T[x][y].X == 0) {
                T[x][y] = u;
                if (matchY[x][y].X == 0) return ii(x, y);
                Q[++r] = matchY[x][y];
            }
        }
    }
    return ii(0, 0);
}

void Enlarge(ii y) {
    ii x, next;
    for (; y.X; y = next) {
        x = T[y.X][y.Y];
        next = matchX[x.X][x.Y];
        matchX[x.X][x.Y] = y;
        matchY[y.X][y.Y] = x;
    }
}

int main()
{
    int i, j, t, res; char ch; ii u;
    scanf("%d\n", &t);
    while (t-- ) {
        scanf("%d %d\n", &m, &n);
        res = 0;
        for(i = 1; i <= m; i++) {
            for(j = 1; j <= n; j++) {
                scanf("%c", &ch);
                if (ch == '#') obs[i][j] = true;
                else {obs[i][j] = false; res++;}
                matchX[i][j] = matchY[i][j] = ii(0, 0);
            }
            scanf("\n");
        }
        while (1) {
            u = FindPath();
            if (u.X == 0) break;
            Enlarge(u);
        }
        for(i = 1; i <= m; i++) for(j = 1; j <= n; j++)
            if (matchX[i][j].X != 0) res--;
        printf("%d\n", res);
    }
    return 0;
}
