#include<iostream>
#include<stdio.h>
#include<math.h>
#include<string.h>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<sstream>
using namespace std;
#define FOR(i,n) for(i=0;i<n;i++)
vector< vector< int > >adj;

#define M 1000
#define N 1000


bool seen[N];
int matchL[M], matchR[N];
int n, m;

bool bpm( int u )
{
    for( int i = 0; i < adj[u].size(); i++ )
    {
        int v=adj[u][i];
        if( seen[v] ) continue;
        seen[v] = true;

        if( matchR[v] < 0 || bpm( matchR[v] ) )
        {
            matchL[u] = v;
            matchR[v] = u;
            return true;
        }
    }
    return false;
}
int main()
{
    int t,i,j,k,c;
    int dr[]={-2,-2,-1,-1,1,1,2,2};
	int dc[]={1,-1,-2,2,-2,2,1,-1};
	string str[100];
	cin>>t;
	while(t--)
	{
	    c=0;
	    adj.clear();
        cin>>n>>m;
        FOR(i,n)cin>>str[i];
        vector<int>v;
        FOR(i,n*m)adj.push_back(v);
        vector<int>v_list;
        FOR(i,n)
        FOR(j,m)
        {
            if(str[i][j]=='#')c++;
            else if((i+j)%2==0&&str[i][j]=='.')
            {
               for(k=0;k<8;k++)
               {
                    if(i+dr[k]>=0&&i+dr[k]<n&&j+dc[k]>=0&&j+dc[k]<m&&str[i+dr[k]][j+dc[k]]=='.')
                    {
                        adj[i*m+j].push_back((i+dr[k])*m+j+dc[k]);
                        //adj[(i+dr[k])*n+j+dc[k]].push_back(i*n+j);

                    }
               }
               v_list.push_back(i*m+j);

            }
            else if((i+j)%2==1&&str[i][j]=='.')
            {
               for(k=0;k<8;k++)
               {
                    if(i+dr[k]>=0&&i+dr[k]<n&&j+dc[k]>=0&&j+dc[k]<m&&str[i+dr[k]][j+dc[k]]=='.')
                    {
                        adj[i*m+j].push_back((i+dr[k])*m+j+dc[k]);
                        //adj[(i+dr[k])*n+j+dc[k]].push_back(i*n+j);
                    }
               }
            }
        }
        //for(i= 0; i < v_list.size(); i++ )cout<<v_list[i]<<" "<<matchL[v_list[i]]<<endl;
        memset( matchL, -1, sizeof( matchL ) );
        memset( matchR, -1, sizeof( matchR ) );
        int cnt = 0;
        for( int i= 0; i < v_list.size(); i++ )
        {
            memset( seen, 0, sizeof( seen ) );
            if( bpm( v_list[i]) )
            {
             //   cout<<i<<endl;
                cnt++;
            }
        }

        //for(i= 0; i < v_list.size(); i++ )cout<<v_list[i]<<" "<<matchL[v_list[i]]<<endl;

        cout<<n*m-cnt-c<<endl;
	}
	return 0;
}
