#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d\n",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e5+5)
using namespace std;
vector<pii> v;
vector<pii> rel;
vector<pii>::iterator it;
bool comp(pii a,pii b){
    if(a.se<b.se)
        return 1;
    else if(a.se==b.se)
        return a.fi>b.fi;
    else
        return 0;
}
int pa[N][20];
void solve(){
    int n,q;
    cin>>n>>q;
    for(int i=1;i<=n;i++){
        int x,y;
        sd(x);
        sd(y);
        v.pb(mp(x,y));
    }
    sort(all(v),comp);
    int st=v[0].fi,ed=v[0].se;
    rel.pb(v[0]);
    for(int i=1;i<v.size();i++){
        int nst=v[i].fi,ned=v[i].se;
        if(st<nst&&ed<ned){
           rel.pb(v[i]);
           st=nst;
           ed=ned;
        }
    }
    for(int i=0;i<rel.size();i++){
        int y=rel[i].se;
        it=lower_bound(all(rel),mp(y+1,-1));
        if(it==rel.end()){
           continue;
        }
        else{
            int idx=it-rel.begin();
            pa[i+1][0]=idx+1;
        }
    }
    for(int j=1;j<20;j++){
        for(int i=1;i<=rel.size();i++){
            pa[i][j]=pa[pa[i][j-1]][j-1];
        }
    }
    while(q--){
        int x,y;
        cin>>x>>y;
        it=lower_bound(all(rel),mp(x,-1));
        if(it==rel.end()||(*it).se>y){
            printf("0\n");
            continue;
        }
        int idx=it-rel.begin();
        idx++;
        int ans=0;
        for(int i=19;i>=0;i--){
            if(pa[idx][i]==0){
                continue;
            }
            if(rel[pa[idx][i]-1].se<=y){
                ans+=(1<<i);
                idx=pa[idx][i];
            }
        }
        pd(ans+1);
    }
}
int main(){
   //freopen("input.IN","r",stdin);
   //freopen("out.txt","w",stdout);
   int t=1;
   //scanf("%d",&t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
