#include<iostream>
#include<vector>
#include<cstdio>
#include<algorithm>
using namespace std;

vector<pair<int,int> >v;
int pos[1000007];
#define inf 1000000000
int dp[22][1000007];

void gen()
{
fill(pos,pos+1000007,inf);
for(int i=0;i<v.size();i++)
pos[v[i].first]=min(pos[v[i].first],v[i].second);
for(int i=1000003;i>=1;i--)
{
pos[i]=min(pos[i],pos[i+1]);
dp[0][i]=pos[i];
}
for(int i=1;i<=21;i++)
for(int j=1;j<=1000003;j++)
if(dp[i-1][j]!=inf)
dp[i][j]=dp[i-1][dp[i-1][j]+1];
else
dp[i][j]=inf;
}

int func(int l,int r)
{
int ans=0;
int p=l,q=r;
for(int i=21;i>=0;i--)
if(dp[i][l]<=q)
{
ans+=(1<<i);
l=dp[i][l]+1;
}
return ans;
}

int main()
{
ios_base::sync_with_stdio(false);
int n,m;
cin>>n>>m;
while(n--)
{
int l,r;
cin>>l>>r;
v.push_back(make_pair(l,r));
}
gen();
while(m--)
{
int l,r;
cin>>l>>r;
cout<<func(l,r)<<endl;
}
return 0;
}
