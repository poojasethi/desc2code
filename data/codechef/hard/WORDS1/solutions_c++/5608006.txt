#include <bits/stdc++.h>
using namespace std;
#define N 26
#define M 1000
int mark[N],st[N],en[N],pres[N];
int adjmat[N][N];
char s[M + 12];
void dfs(int u)
{
    mark[u] = 1;
    //int sz = adj[u].size();
    for(int i = 0 ; i<N ; i++)
    {
        if(adjmat[u][i] == 1 && mark[i] == 0) dfs(i);
    }
    mark[u] = 2;
}
bool Chk()
{
    int save=-1;
    int cnt0=0,cnt1=0,cnt_1=0,cnt2=0;
    for(int i = 0 ; i<N ; i++)
    {
        if(pres[i] == 1) save = i;
        if(st[i] - en[i] == 0)
        {
            cnt0++;
        }
        else
        {
            if(st[i] - en[i] == 1)
            {
                cnt1++;
                //ch = i;
            }
            else
            {
                if(st[i] - en[i] == -1)
                {
                    cnt_1++;
                }
                else cnt2++;
            }
        }
    }
    //if(ch == -1) ch = save;
    if(cnt2 > 0) return false;
    if(cnt1 > 1 || cnt_1 > 1) return false;
    //cout<<'a'+ch<<endl;
    dfs(save);
    cnt2 = 0;
    for(int i = 0 ; i<N ; i++)
    {
        if(pres[i] == 0) continue;
        if(mark[i] == 0)
        {
            //cout<<i<<endl;
            cnt2++;
        }
    }
    if(cnt2 == 0) return true;
    else return false;
}
int main()
{
    int tc,t;
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        for(int i = 0 ; i<N ; i++)
        {
            for(int j = 0 ; j<N ; j++)
            adjmat[i][j] = 0;
            mark[i] = 0;
            st[i] = 0;
            en[i] = 0;
            pres[i] = 0;
        }
        int m;
        scanf("%d",&m);
        for(int i = 1 ; i<=m ; i++)
        {
            scanf("%s",s+1);
            int n = strlen(s+1);
            int u = s[1] - 'a';
            int v = s[n] - 'a';
            pres[u] = 1;
            pres[v] = 1;
            st[u] ++;
            en[v] ++;
            adjmat[u][v] = 1;
            adjmat[v][u] = 1;
        }
        bool ans = Chk();
        if(ans) printf("Ordering is possible.\n");
        else printf("The door cannot be opened.\n");
    }
    return 0;
}
