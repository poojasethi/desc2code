#include <bits/stdc++.h>

using namespace std;

int a[26];
int b[26];
int c[26];
int g[26][26];

void dfs(int n){
	c[n] = 1;
	for(int i=0;i<26;i++){
		if(g[n][i]==1 && c[i]==0){
			dfs(i);
		}
	}
}

int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		memset(a,0,sizeof a);
		memset(b,0,sizeof b);
		memset(c,0,sizeof c);
		memset(g,0,sizeof g);
		string s;
		int ta,tb;
		for(int i=0;i<n;i++){
			cin>>s;
			int k = s.size();
			ta = s[0]-'a';
			tb = s[k-1]-'a';
			if(ta!=tb){
				g[ta][tb] = 1;
				g[tb][ta] = 1;
			}
			a[ta]++;
			b[tb]++;
		}

		int cnt = 0;
		int t1 = 0;
		int t2 = 0;
		bool flag = false;
		for(int i=0;i<26;i++){
			if(a[i]==b[i])	continue;
			if(a[i]==b[i]+1)	t1++;
			else if(a[i]+1==b[i])	t2++;
			else{
				flag = true;
				break;
			}
		}
		if(flag || !(t1==t2 && t1<=1)){
			cout<<"The door cannot be opened."<<endl;
			continue;
		}

		for(int i=0;i<26;i++) {
			if((a[i]>0 || b[i]>0) && c[i]==0) {
				cnt++;
				if(cnt==2)
					break;
				dfs(i);
			}
		}

		if(cnt==2){
			printf("The door cannot be opened.\n");
		}
		else{
			printf("Ordering is possible.\n");
		}
		
	}
}