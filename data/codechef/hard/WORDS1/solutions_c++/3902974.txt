#include <bits/stdc++.h>
using namespace std;
int S1[26],S2[26];
string str[100010];
int N;
int G[26][26];
int mark[26];
int dfs(int idx)
{
	mark[idx] = true;
	for(int i = 0;i<26;i++)
	{
		if(mark[i])
			continue;
		if(G[idx][i])
			dfs(i);
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	int Testcases;
	cin>>Testcases;
	while(Testcases--)
	{	
		cin>>N;
		memset(S1,0,sizeof(S1));
		memset(G,0,sizeof(G));
		memset(mark,0,sizeof(mark));
		memset(S2,0,sizeof(S2));
		for(int i = 0;i<N;i++)
		{
			cin>>str[i];
			int m = str[i].length();
			if(str[i][0]!=str[i][m-1]){
				G[str[i][0]-'a'][str[i][m-1]-'a'] = 1;
				G[str[i][m-1]-'a'][str[i][0]-'a'] = 1;
			}
			S1[str[i][0]-'a']+=1;
			S2[str[i][m-1]-'a']+=1;
		}
		int F = 1,Cnt1 = 0,Cnt2 = 0,res1 = 0,res2 = 0;
		for(int i = 0;i<26;i++)
		{
			if(abs(S1[i]-S2[i])>=2)
				F = 0;
			if(S1[i] == 1 + S2[i])
			{
				res1+=1;
			}
			if(S1[i] + 1 == S2[i])
				res2+=1;

		}
		if(F==0||!(res1==res2&&res1<=1))
		{	
			cout<<"The door cannot be opened."<<endl;
			continue;
		}
		int cnt = 0;
		for(int i = 0;i<26;i++)
		{
			if(mark[i]==1)
				continue;
			if(S1[i]||S2[i])
			{
				cnt+=1;
				dfs(i);

			}
		}
		if(cnt>=2)
			cout<<"The door cannot be opened."<<endl;
		else
			cout<<"Ordering is possible."<<endl;
		
	}
	return 0;
}