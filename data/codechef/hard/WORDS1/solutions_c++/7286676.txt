//wrong ans on 1 3 kl bc cb
#include<bits/stdc++.h>
using namespace std;

int T,N,in[26],out[26];
vector<vector<int> > adj(26,vector<int>(0,0));
string str,temp;
int visited[26];

void dfs(int num)
{
    if(visited[num])return;
    visited[num]=1;
    for(int i=0;i<adj[num].size();i++)
        dfs(adj[num][i]);
}

int main()
{
    cin>>T;
    while(T--)
    {
        for(int i=0;i<26;i++){adj[i].resize(0,0);in[i]=0;out[i]=0;visited[i]=0;}
        cin>>N;
        for(int i=0;i<N;i++)
        {
            cin>>str;
            adj[str[0]-'a'].push_back(str[str.length()-1]-'a');
            out[str[0]-'a']++;
            in[str[str.length()-1]-'a']++;
        }



        int cnt=0,start=-1,iend=-1;
        for(int i=0;i<26;i++)
        {
            if(in[i]!=out[i])
            {
                cnt++;
                if(abs(in[i]-out[i])>1)
                {
                    cout<<"The door cannot be opened."<<endl;
                    goto done;
                }
                else if(in[i]<out[i])
                {
                    if(start!=-1)
                    {
                        cout<<"The door cannot be opened."<<endl;
                        goto done;
                    }
                    start=i;
                }
                else
                {
                    if(iend!=-1)
                    {
                        cout<<"The door cannot be opened."<<endl;
                        goto done;
                    }
                    iend=i;
                }
            }
        }

        if(cnt!=0&&cnt!=2)
        {
            cout<<"The door cannot be opened."<<endl;
            goto done;
        }

        //check connected
        if(start==-1)start=0;
        dfs(start);
        for(int i=0;i<26;i++)
        {
            if((in[i]!=0||out[i]!=0)&&visited[i]==0)
            {
                cout<<"The door cannot be opened."<<endl;
                goto done;
            }
        }

        cout<<"Ordering is possible."<<endl;
        done:;
    }

}
