#include <bits/stdc++.h>
using namespace std;

#define gc getchar_unlocked

void scanString(char str[]) {
	int x;
	register char c = gc();
	for(; (c<'a' || c>'z'); c=gc());

	str[0] = c-'a';

	for(; (c>='a' && c<='z'); c=gc()) { x = c; }

	str[1] = x-'a';
}

int g[26][26], Start[26], End[26], check[26], vis[26];

void init() {
	for(int i=0;i<26;++i){
		Start[i] = End[i] = check[i] = vis[i] = 0;
	}
	memset(g, 0, sizeof(g));
}

void dfs(int i) {
	vis[i] = 1;
	for(int j=0; j<26; ++j) 
		if(!vis[j] && g[i][j])
			dfs(j);
}

int checkEulerian() {
	int ret = 1, odd_degree = 0;
	for(int i=0;i<26;++i) {
		if(check[i]) {
			if(!vis[i]) { ret = 0; break; }

			int degree = Start[i] - End[i];

			if(odd_degree > 2) { ret = 0; break; }

			if(degree == 0) continue;
			else if(degree == 1 || degree == -1) { odd_degree++; continue; }
			else { ret = 0; break; }
		}
	}

	return ret;
}


int main() {
	int t, n;
	char s[2];
	cin>>t;
	while(t--) {

		init();

		cin>>n;
		for(int i=0;i<n;++i) {
			scanString(s);
			g[s[0]][s[1]] = 1;
			g[s[1]][s[0]] = 1;
			check[s[0]] = check[s[1]] = 1;
			Start[s[0]]++;
			End[s[1]]++;
		}

		dfs(s[1]);

		int res = checkEulerian();

		(res)? puts("Ordering is possible."): puts("The door cannot be opened.");
	}
}