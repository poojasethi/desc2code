#include<iostream>
#include<string>
#include<string.h>
#include<map>
#include<vector>
#define set0(a) memset(a,0,sizeof(a))
using namespace std;

int a[26],b[26],m[26],g[26][26];

void  Dfs(int j)
{
  m[j]=1;
  for(int i=0;i<26 ;i++)
         {
             if(g[j][i]==1 && m[i]==0)
                    Dfs(i);

         }
}
bool isChained(int n)
{
    int x=0,y=0,i;

    for(i=0; i<26;i++)
        {

            if(a[i]==b[i])
                continue;

            if(a[i]==b[i]+1)
                x++;
            else
                if(b[i]==a[i]+1)
                    y++;
               else
                break;
        }
        if(i<26 || !(x==y && x<=1))
                return 0;
        x=0;
         for(i=0;i<26 ;i++)
         {
            if((a[i]>0 || b[i]>0) && m[i]==0)
                {  x++;
                    Dfs(i);
                }


         }

if(x>=2) return 0;

return 1;

}
int main()
{
int t,n,l;
 string r;
 char aa,bb,c;
cin>>t;
while(t--)
{
    cin>>n;
    set0(a);
    set0(b);
    set0(m);
    set0(g);

    for(int i=0;i<n;i++)
        {
            cin>>r;
            l=r.size();
            
                aa=r[0]-'a';
                bb=r[l-1]-'a';
             if(aa!=bb)
                {
                    g[aa][bb]=1;
                    g[bb][aa]=1;

                }
                a[aa]++;
                b[bb]++;
            
            
        }

if(isChained(n)==true)
        cout<<"Ordering is possible.\n";
        else
           cout<<"The door cannot be opened.\n";

}
return 0;
    }
