#include <bits/stdc++.h>
using namespace std;
 
bool graph[26][26];
bool used[26];
int cnt[26];
char buffer[10000];
 
void rec(int pos)
{
	for(int i=0; i<26; i++)
	{
		if(graph[pos][i] && used[i])
		{
			used[i] = false;
			rec(i);
		}
	}
}
 
int main()
{
	int t;
	scanf("%d",&t);
 
	for(int casenum=1; casenum<=t; casenum++)
	{
		int n;
		scanf("%d",&n);
 
		for(int i=0; i<26; i++)
		{
			cnt[i] = 0;
			used[i] = false;
			for(int j=0; j<26; j++)
				graph[i][j] = false;
		}
 
		for(int i=0; i<n; i++)
		{
			scanf("%s",buffer);
 
			int a = buffer[0]-'a';
			int b = buffer[strlen(buffer)-1]-'a';
			cnt[a]++;
			cnt[b]--;
			graph[a][b] = graph[b][a] = true;
			used[a] = used[b] = true;
		}
 
		for(int i=0; i<26; i++)
		{
			if(used[i])
			{
				used[i] = false;
				rec(i);
				break;
			}
		}
 
		bool check = true;
		for(int i=0; i<26; i++)
		{
			if(used[i])
			{
				check = false;
				break;
			}
		}
 
		if(!check)
		{
			//puts("HURRAH");
			puts("The door cannot be opened.");
			continue;
		}
 
		bool start = false;
		bool end = false;
		for(int i=0; i<26; i++)
		{
			if(cnt[i]==0)
				continue;
			else if(cnt[i]==1 && !start)
				start = true;
			else if(cnt[i]==-1 && !end)
				end = true;
			else
			{
				check = false;
				break;
			}
		}
		if(check && (end==start))
			puts("Ordering is possible.");
		else
			puts("The door cannot be opened.");
	}
 
	return 0;
} 
