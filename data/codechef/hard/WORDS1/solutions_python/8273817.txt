def dfs(adj,source,visited,c):
    visited[source] = True
    c[0] += 1
    for nextvertex in adj[source]:
        if not visited[nextvertex]:
            dfs(adj,nextvertex,visited,c)
    


for _ in xrange(input()):
    N = input()
    adj = [[] for _ in xrange(26)]
    out = [0] * 26
    for _ in xrange(N):
        s = raw_input()
        source = ord(s[0]) - 97
        destination = ord(s[-1]) - 97
        adj[source].append(destination)
        out[destination] += 1
    
    oneC = 0 
    oneI = 0
    minusOneC = 0  
    totalNodes = 0
    found = False 
    for i in xrange(26):
        indegree = len(adj[i])
        diff = out[i] - indegree
        
        if indegree > 0 or out[i] > 0:
            totalNodes += 1
        
        if abs(diff) > 1:
            found = True
            break
        elif diff == 1:
            if oneC == 0:
                oneC += 1
            else:
                found = True
                break
        elif diff == -1:
            if minusOneC == 0:
                minusOneC += 1
                oneI = i
            else:
                found = True
                break

    if not found:
        visited = [False] * 26
        c = [0]
        dfs(adj,oneI,visited,c)
        if c[0] == totalNodes:
            print "Ordering is possible."
        else:
            print "The door cannot be opened."
    else:
        print "The door cannot be opened."
    
    
    