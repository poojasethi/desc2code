/*Abhishek*/
#include<stdio.h>
#include<math.h>
#define pi 3.1415926535897932385

double solve(double w, double h){
            double i,j,k,c,d,v1,v2,r,hh,height;
/*_______H_______
|               |
|               | W
|               |
-----------------
*/
 //roll along W
d=2.0*h/3.0;
if(d>double(w)/pi)d=double(w)/pi;
height=double(h)-d;
v1=pi*d*d*height*1.0/(4*1.0);

d=1.0*h/3.0;
if(d>double(w)/pi)d=double(w)/pi;
height=double(h)-2*d;
v2=pi*d*d*height*1.0/(4*1.0);
if(v2>v1)v1=v2;

//roll along h

d=double(h)*1.0/(pi+1);
if(2*d>w) d=double(w)/2.0;
height=double(w);
v2=pi*d*d*height*1.0/(4*1.0);
if(v2>v1)v1=v2;


d=double(h)*1.0/(pi+2);
if(d>w)d=double(w);
height=double(w);
v2=pi*d*d*height*1.0/(4*1.0);
if(v2>v1)v1=v2;
if(!(w*(pi+2)>h&&w*(pi+1)*0.5<h))return v1;

////IMP case.:::::::::::::::::::::(circle alignment not necessarily exact vertical/horizontal)
i=h*1.0/(pi+1);
j=w*1.0/((pi+1)*(pi+1));
k=j*(j+2*i-w);
d=i+j-sqrt(k);
height=double(w);
v2=pi*d*d*height*1.0/(4*1.0);
if(v2>v1)v1=v2;
return v1;
}

 int main(){
    int t,i,j;
    double k,w,h,v;
    scanf("%d",&t);
    while(t--){
        scanf("%lf%lf",&w,&h);
        v=solve(w,h);
        k=solve(h,w);
        if(v<k)v=k;
        printf("%.15lf\n",v);
    }
    return 0;
 }
