#include <string>
#include <sstream>
#include <bitset>
#include <algorithm>
#include <vector>
#include <iostream>
#include <numeric>
#include <map>
#include <set>
#include <cmath>
using namespace std;
typedef long long int64_t;

const double PI = 3.1415926535897932385;

double D(int W, int H) {
	if (H >= W * (PI + 2))
		return W;
	else if (H / (PI + 1) <= W / 2.0)
		return H / (PI + 1);
	else {
		double Hp = H / (PI + 1);
		double Wp = W / ((PI + 1) * (PI + 1));
		return Hp + Wp - sqrt(Wp * (Wp + 2 * Hp - W));
	}
}

double VW(int W, int H) {
	double X = min(W / PI, 2.0 / 3 * H);
	return PI / 4 * X * X * (H - X);
}

double VH(int W, int H) {
	double d = D(W, H);
	return PI / 4 * d * d * W;
}

double V(int W, int H) {
	return max(VW(W, H), VH(W, H));
}

void solve() {
	int T;
	scanf("%d", &T);
	for (int t = 0; t < T; ++t) {
		int W, H;
		scanf("%d%d", &W, &H);

		printf("%.12f\n", max(V(W, H), V(H, W)));
	}
}

int main() {
	solve();
	return 0;
}
