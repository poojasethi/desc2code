#include <iostream>
#include <sstream>
#include <cstdio>
#include <climits>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
#include <deque>
#include <bitset>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <vector>
#include <queue>
 
using namespace std;

#define PI 3.14159265358979323846
int main()
{
	int a,b,T;
	double W,H,X,ans,D1,Wp,Hp;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d",&a,&b);
		W=a;
		H=b;
		ans=0.0;
		X = min(H/PI, (2*W)/3);
		ans = max(ans,(W-X)*(X/2)*(X/2)*PI);
		if(H>=(2*W)/(PI+1))
			ans = max(ans, H*((W/(PI+1))/2)*((W/(PI+1))/2)*PI);
		if((W-2*H)>=(PI*H))
			ans=max(ans, H*((H*H)/4)*PI);
		if(W>(H*((PI+1)/2)) && W<(H*(2+PI)))
		{
			Wp = W/(PI+1);
			Hp = H/((PI+1)*(PI+1));
			D1 = ( Wp + Hp - sqrt(Hp * (Hp + 2 * Wp - H)));
			ans = max(ans, PI/4*D1*D1*H);
		}
		W=b;
		H=a;
		X = min(H/PI, (2*W)/3);
		ans = max(ans,(W-X)*(X/2)*(X/2)*PI);
		if(H>=(2*W)/(PI+1))
			ans = max(ans, H*((W/(PI+1))/2)*((W/(PI+1))/2)*PI);
		if((W-2*H)>=(PI*H))
			ans=max(ans, H*((H*H)/4)*PI);
		if(W>(H*((PI+1)/2)) && W<(H*(2+PI)))
		{
			Wp = W/(PI+1);
			Hp = H/((PI+1)*(PI+1));
			D1 = ( Wp + Hp - sqrt(Hp * (Hp + 2 * Wp - H)));
			ans = max(ans, PI/4*D1*D1*H);
		}
		printf("%.15lf\n",ans);
	}
	return 0;
}
