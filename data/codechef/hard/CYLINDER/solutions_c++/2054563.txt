#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#define MIN(X,Y) ((X) < (Y) ? (X) : (Y))
#define MAX(X,Y) ((X) > (Y) ? (X) : (Y))

const double pi = 3.141592653589793238462643383279502884197169399375105820974944592307816406286;
const double _2_pi_plus_2 = 8.283185307179586476925286766559;

int main(){
        int t;
        scanf("%d",&t);
        double w, h, max, A, R, temp, xc, xr, x, alfa;

        while (t > 0) {
            scanf("%lf %lf",&w ,&h);

			if (w < h) {
				temp = w;
				w = h;
				h = temp;
			}

			R = MIN(h / (2 * pi), w / 3);
			A = w - 2 * R;
			max = R * R * A;

			A = h;
			R = MIN(h / 4, w / _2_pi_plus_2);
			max = MAX(max, R * R * A);

			xc = w - h * (pi + 1);
			xr = sqrt(h * h + w * w);
			if (abs(xc) <= abs(xr)) {
				alfa = atan(w / h);
				x = alfa + asin(xc / xr);
				if (x >= 0 && x <= pi / 2) {
					R = h / 2 / (1 + cos(x));
					max = MAX(max, R * R * A);
				}
			}

			R = MIN(h / 2, w / (4 + 2 * pi));
			max = MAX(max, R * R * A);

			R = MIN(w / (2 * pi), h / 3);
			A = h - 2 * R;
			max = MAX(R * R * A, max);

			A = w;

			R = MIN(w / 4, h / _2_pi_plus_2);
			max = MAX(max, R * R * A);

			R = MIN(w / 2, h / (4 + 2 * pi));
			max = MAX(max, R * R * A);
/*
      		xc = h - w * (pi + 1);
			xr = sqrt(h * h + w * w);
			if (abs(xc) <= abs(xr)) {
			alfa = atan(h / w);
			x = alfa + asin(xc / xr);
				if (x >= 0 && x <= pi / 2) {
					R = w / 2 / (1 + cos(x));
					max = MAX(max, R * R * A);
				}
			}
			*/

            printf("%.15lf\n",pi * max);
            t--;
        }
        return 0;
    }
