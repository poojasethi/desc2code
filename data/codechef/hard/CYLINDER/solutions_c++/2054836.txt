// Program for the CYLINDER problem
// Simple Math

#include <cstdio>
#include <bitset>
#include <math.h>
#include <stdlib.h>

using namespace std;
const double PI = acos((double)-1);

inline double square(double x) { return x * x; }

double volume1(double w, double h) 
{
  double x = min(2 * w / 3, h / PI);
  double r = x / 2;
  return PI * r * r * (w - x);
}

double volume2(double w, double h) 
{
  double D = min(h, w / (PI + 1));
  double a = square(PI + 1);
  double b = -2 * ((PI + 1) * w + h);
  double c = w * w + h * h;
  double delta = b * b - 4 * a * c;

  if(delta > 0)
   D = min(D, (-b - sqrt(delta)) / (2 * a));
  double r = D / 2;

  return PI * r *  r * h;
}

double volume(double w, double h) 
{
  double result = volume1(w, h);
  result = max(result, volume2(w, h));
  return result;
}

int main() 
{
  int w, h, t;

  scanf("%d", &t);
  while(t--) 
  {
    scanf("%d %d", &w, &h);
    double result = max(volume(w, h), volume(h, w));
    printf("%.13g\n", result);
  }

  return 0;
}