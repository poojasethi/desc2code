#include<stdio.h>
#include<math.h>
#define ld double
const ld pi = 2.0*acos(0.0);
#define getcx getchar_unlocked
inline void inp( int &n )//fast input function
{
   n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   n=n*sign;
}
ld min(ld a,ld b)
{
	if ( a < b )
	return a;
	else
	return b;
}
ld max(ld a,ld b)
{
	if ( a > b )
	return a;
	else
	return b;
}
int main()
{
	int t;
	int ww,hh;
	ld w,h,i,temp;
	ld r,a,aa,v;
	inp(t);
	while(t--)
	{
	inp(ww);
	inp(hh);
	w= (ld)ww;
	h = (ld)hh;
	v=0;
	r = min( h/3.0 , w/(pi*2.0) );
	a = h - 2*r ;
	v = max( v , pi*r*r*a );
	int wCase,wcase2;	
	a=w;
	if(h>=w*(pi+2))
	{
		wCase = 1;
		r=w/2.0;
	}
	else if(h<=w*(pi+1)/2.0)
	{
		wCase = 2;
		r=h/(pi+1)/2.0;
	}
	else
	{
		wCase = 3;
		r = h*(pi+1);
		r += w;
		aa = ((2*h*w*(pi+1)) - (w*w*pi*(pi+2)));	
		if(aa>=0)
		{
			aa = sqrt(aa);
			r -= aa;
			r /= (2*(pi+1)*(pi+1));
		}
		else
			r = 0;
 
		if(w> 4*r || w< 2*r)
		{
			r = 0;
		}
	}
	v = max( v , pi*r*r*w );
	temp=w;
	w=h;
	h=temp;
	r = min( h/3.0 , w/(pi*2.0) );
	a = h - 2*r ;
	v = max( v , pi*r*r*a ); 
	a=w;
	if(h>=w*(pi+2))
	{
		wcase2 = 9;
		r=w/2.0;
	}
	else if(h<=w*(pi+1)/2.0)
	{
		wcase2 = 10;
		r=h/((pi+1)*2.0);
 	}
	else
	{
		wcase2 = 11;
		r = h*(pi+1);
		r += w;
		aa = ((2*h*w*(pi+1)) - (w*w*pi*(pi+2)));
	if(aa>=0)
	{
		aa = sqrt(aa);
		r -= aa;
		r /= (2*(pi+1)*(pi+1));
	}
	else
		r = 0;
		if(w> 4*r || w< 2*r)
		{
			r = 0;
		}
	}
	if(v < pi*r*r*a)
		wCase = wcase2;
	v = max( v , pi*r*r*a );
	printf("%.12lf\n",v);
	}
	return 0;
} 