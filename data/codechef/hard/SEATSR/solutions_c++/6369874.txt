#include<cstdio>
#include<cmath>
#include<algorithm>
#include<string.h>
#define MAX 100007
using namespace std;
int main()
{
    int t;
    scanf("%d",&t);
    while(t--){
    int l, k;
    char a[MAX],b[MAX];
    int dp[2][MAX];
    memset(dp,0,sizeof(dp));
    scanf("%s%s",a,b);
    int xx,yy,zz;scanf("%d%d%d",&xx,&yy,&zz);
    l=strlen(a);k=strlen(b);
    if(xx==0){
    		printf("0\n");continue;
    }
    
    if(yy==0){
	int diff=fabs(l-k);
	if((diff*xx)<=zz){
	printf("%d\n",diff*xx);continue;}
	else{ printf("-1\n");continue;}
   }
    
    
    for (int j = 1; j <= k; ++j)
    {
        dp[0][j] = j*xx;
    }
  //  int step=zz/min(xx,yy); if((step*min(xx,yy))!=zz) step++;
    int tmp_min=0;
    for (int i = 1; i <= l; ++i)
    {
        dp[1][0] = i*xx;
        int limit = min(k, i + 100);
        for (int j=max(i - 100, 1); j<=limit; ++j)
        {
            tmp_min = dp[0][j] + xx;
            
            if(tmp_min > dp[1][j-1] + xx)
                tmp_min = dp[1][j-1] + xx;
            
            if (a[i-1] == b[j-1]) 
            {
                if (tmp_min > dp[0][j-1])
                    tmp_min = dp[0][j-1];
            }
            if (a[i-1] != b[j-1])
            {
                if (tmp_min > dp[0][j-1] + yy)
                    tmp_min = dp[0][j-1] + yy;
            }          
            dp[1][j] = tmp_min;
        }
        for(int k=max(i-100,1)-1;k<=limit;++k) dp[0][k]=dp[1][k];
  
    }
    
    if(tmp_min<=zz)
    printf("%d\n",tmp_min);
    else printf("-1\n");
    }
    return 0;
}
