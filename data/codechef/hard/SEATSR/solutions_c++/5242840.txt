#include<bits/stdc++.h>
#define ll long long
#define N 100000
#define INF 1000000000000000LL
using namespace std;

char s1[ N+5 ], s2[ N+5 ];
ll dp[ N+10 ][ 305 ];
ll a, b;
int k;
int sz1, sz2;

/*int f( int p1 , int p2 ){
	int aux = p2 - p1+ k+1;
	if( aux < 1  || aux >2*k+1 ) return INF; 
	if( p1 == sz1 ) return ( sz2-p2) *a;
	if( p2 == sz2 ) return ( sz1-p1) *a;
	int &ret= memo[ p1 ][ aux ];
	if( ret!=-1 )return ret;
	ret = INF;
	if( s1[ p1 ] == s2[ p2 ] ){
		ret = min( ret , f( p1+1 , p2+1 ) ); 
	}
	else{
		ret = min( ret , a + f( p1, p2+1 ) );
		ret = min( ret , a + f( p1+1 , p2 ) );
		ret = min( ret , b + f( p1+1 , p2+1 ) );
	}
	return ret;
}*/

bool vale( int x ){
	return x>=0 && x<=2*k;
}

void doit(){
	scanf("%s%s" , s1 ,s2 );
	sz1 =strlen( s1 ), sz2 = strlen( s2);
	scanf("%lld%lld%d", &a, &b, &k);
	if( a==0 ){
		puts("0"); return;
	}
	// la 2 termina
	for( int i = 0; i<sz1 ; ++i ){
		int aux = sz2 - i +k;
		if( vale( aux ) ) dp[ i ][ aux ] = ( sz1-i ) *a;  
	}
	// la 1 termina
	for( int j= max( 0 , sz1-k ) ; j<=min( sz2 , sz1+k ) ; ++j ){
		int aux = j - sz1 +k;	
		dp[ sz1 ][ aux ] = ( sz2 - j ) *a;
	}
	for( int i=sz1-1 ; i>=0 ; i-- ){
		for( int j = min( sz2-1 , i+k );  j>= max( 0 , i-k ); j-- ){
			ll ret = INF;
			int aux;
			if( s1[ i ] == s2[ j ] ){
				aux = j+1- ( i+1 ) +k;
				if( vale( aux ) ) ret = min( ret , dp[ i+1 ][ aux ] ); 
			}
			else{
				aux =  j+1- ( i ) +k;
				if( vale( aux ) ) ret = min( ret , a + dp[ i ][ aux ] );
				aux =  j - ( i+1 ) +k;
				if( vale( aux ) ) ret = min( ret , a + dp[ i+1 ][ aux ] );
				aux =  j+1- ( i +1 ) +k;
				if( vale( aux ) ) ret = min( ret , b + dp[ i+1 ][ aux ] );	
			}
			aux = j-i+k;
			dp[ i ][ aux ] = ret;
		}
	}
	ll ans = dp[ 0 ][ k ];
	if( ans <= ( ll )k ) printf("%d\n" , ( int )ans );
	else puts("-1");
}

int main( ){
	int tc;
	scanf("%d", &tc );
	while( tc-- )doit();
}