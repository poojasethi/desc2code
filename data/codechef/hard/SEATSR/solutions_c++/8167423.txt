#include<algorithm>
#include<string.h>
#include<stdio.h>
char str1[100004];
char str2[100004];
int min(int a,int b) {
   return ((a < b) ? a : b);
}
int row_num = 0;
int cost[100004];
int prev[100004];
int edit_distance(int a, int b, int k) {
	int size1 = strlen(str1) + 1;
	int size2 = strlen(str2) + 1;
	if(a == 0) return 0;
	if(strcmp(str1,str2) == 0) return 0;
	if(abs((size1 - size2) * a) > k) return -1;
	if(b == 0) return (abs(size1 - size2) * a);
	if(size1 == 0) return (a * size2);
	if(size2 == 0) return (a * size1);
	int i,j;
	int lower = 0;
	int upper = min(k/a,size2-1);
	for(j=lower;j <=upper && j<size2;j++) {
		prev[j] = j*a;
	}
	for(i=1;i<size1;i++) {
		row_num++;
		if (upper < lower) return -1;
		cost[lower] = prev[lower] + a;
		for(j=lower+1;j<size2 && j<=upper;j++) {
			int x = prev[j] + a;
			int y = cost[j-1] + a;
			int z = prev[j-1] + (str1[i-1] != str2[j-1])*b;
			cost[j] = min(x, min(y,z));
		}
		if(upper + 1 < size2) {
			int y = cost[upper] + a;
			int z = prev[upper] + (str1[i-1] != str2[upper])*b;
			cost[upper + 1] = min(y,z);
		}
		int tt = upper + 1;
		while(cost[tt] > k && tt > 0) tt--;
		upper = tt;
		tt = lower;
		while(cost[tt] > k && tt < size2) tt++;
		lower = tt;
		int a;
		for(a = lower; a <= upper; a++) {
			prev[a] = cost[a];
		}
		if(upper > size2 - 1) upper = size2 - 1;
	}
	return cost[size2-1];
}
 
int main() {
	int tc;
	scanf("%d", &tc);
	while(tc--) {
		int a, b, k;
		scanf("%s", str1);
		scanf("%s", str2);
		scanf("%d %d %d", &a, &b, &k);
		int size1 = strlen(str1) + 1;
		int size2 = strlen(str2) + 1;
		if(a == 0) printf("0\n");
		else if(strcmp(str1,str2) == 0) printf("0\n");
		else if(abs((size1 - size2) * a) > k) printf("-1\n");
		else if(b == 0) printf("%d\n",abs(size1 - size2) * a);
		else if(size1 == 0) printf("%d\n", a * size2);
		else if(size2 == 0) printf("%d\n", a * size1);
		else {
			int x = edit_distance(a, b, k);
			if(x > k || x == 0)
				printf("-1\n");
			else
				printf("%d\n", x); 
		}
	}
	return 0;
} 