#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#include <cmath>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <queue>
#include <bitset>

using namespace std;

#define FOR(i,a,b) for (int i = int(a); i <= b; i++)
#define INF 1000000000
#define mod 1000000007
#define ll long long int
// #define inp(x) scanf("%d",&x)
#define inchar getchar_unlocked
 
inline void inp( int &n )
{
n=0;
int ch=inchar();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}

int dp[100010][210];
char s[100010],w[100010];

int main() {

    int test,a,b,k;
    inp(test);
    while(test--)
     {
       scanf("%s",s+1);
       scanf("%s",w+1);
       int slen = strlen(s+1);
       int wlen = strlen(w+1);
       
       inp(a);inp(b);inp(k);
       int nr = 2*k+3;
       int ans;
       if(a == 0 || (b == 0 && slen == wlen)) ans = 0;
       else if(k == 0 || abs(slen-wlen)>k) ans = -1;
       else
       {
       // initializations
       
        FOR(i,0,nr)
         FOR(j,0,slen)
           dp[i][j] = INF;
       
       for(int i=0;i<=k;i++)
        {
          dp[i+k+1][0] = i*a;       
        }
       
        {
         int i = k;     
         for(int j=1;j<=k;j++)
          {
            dp[i][j] = j*a;
            i--;       
          }
        }
        int ss = k+2;
        int finr = 2*k+1;
        for(int j=1;j<=slen;j++)
         {
           if(ss>1) ss--;
           for(int i=ss;i<=finr;i++)
            {
              int x = j+i-k-1;
              if(x<1 || x>wlen)
               continue;
              if(s[j] == w[x])
               dp[i][j] = dp[i][j-1];
              else
               {
                 dp[i][j] = min(dp[i][j-1]+b,dp[i+1][j-1]+a);
                 dp[i][j] = min(dp[i][j],dp[i-1][j]+a);         
               }         
            }
                    
            
         }
       /* for(int i=0;i<=nr;i++)
         {
           for(int j=0;j<=slen;j++)
             cout<<dp[i][j]<<" ";
          cout<<"\n";
         }
       */
         int lens = slen,lenw = wlen;
            int diff = abs(lens-lenw);
            if(lens == lenw)
             ans = dp[k+1][lens];
            else if(lens>lenw)
             ans = dp[k+1-diff][lens];
            else
             ans = dp[k+1+diff][lens];  
       
       } // end of else          
       if(ans>k)
        printf("%d\n",-1);
        else
         printf("%d\n",ans);
     
     }
   
    
    
    //getchar();
    //getchar();
	return 0;
} 
