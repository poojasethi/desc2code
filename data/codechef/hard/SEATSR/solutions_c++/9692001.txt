#include<bits/stdc++.h>
using namespace std;
#define SF(x)	scanf("%d", &x)
#define PF(x)	printf("%d", x)
#define psp     printf(" ")
#define pnl     printf("\n")
#define charint(c) ((c)-'0')
#define pii pair< int, int >
#define pb(x) push_back(x)
#define test int t; scanf("%d",&t);while(t--)
#define forall(a,b) for(long long i=a;i<=b;i++)
#define abs(a) ((a)>(0)?(a):(-a))
#define bit(x,i)          (x&(1<<i))  //select the bit of position i of x
#define lowbit(x)         ((x)&((x)^((x)-1))) 
#define higbit(x)         (1 << ( int) log2(x) )
#define countleadzero(x)  __builtin_ctz(x) //in its binary representation ex. when x=8 answer is 3
#define countsetbits(x)   ____builtin_popcount(x) //count no of setbits
#define gcd(a,b)   __gcd(a,b)
#define bss binary_search
#define esort(x)        (sort((x).begin(), (x).end()))
#define ersort(x)       (sort((x).rbegin(), (x).rend()))
#define MAX		100050
#define INF		1e9
#define MOD     1000000007
#define fi first
#define se second
typedef long long 		ll;
typedef unsigned long long	ull;
int main(){
test{
string s1,s2;
cin>>s1>>s2;
int a,b,k;
cin>>a>>b>>k;
int dp[2][s2.length()+1];
	if(!a){
		cout<<0<<endl;
		continue;
		}
for(int i=0;i<=s2.length();i++){
	dp[0][i]=i*a;
		dp[1][i]=MAX;
}
for(int i=1;i<=s1.length();i++){
	dp[0][0]=(i-1)*a;
	dp[1][0]=i*a;
	for(int j=max(1,i-k/a);j<=min((int)s2.length()+1,i+k/a);j++){
		if(s1[i-1]==s2[j-1])
		dp[1][j]=dp[0][j-1];
		else
		dp[1][j]=min(dp[0][j]+a,min(dp[0][j-1]+b,dp[1][j-1]+a));
	}
	for(int j=max(1,i-k/a);j<=min((int)s2.length()+1,i+k/a);j++){
	dp[0][j]=dp[1][j];
}
}
if(dp[1][s2.length()]<=k)
cout<<dp[1][s2.length()]<<endl;
else
cout<<"-1"<<endl;
}
}