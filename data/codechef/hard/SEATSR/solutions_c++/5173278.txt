#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<bitset>
#include<map>
#include<time.h>
#include<list>
#include<iostream>
#include<queue>
#include<iomanip>
#include<assert.h>
#define MAXN 100005
#define ll long long
 
 
#define in(i) scanf("%d",&i)
#define inl(i) scanf("%lld",&i)
#define out(i) printf("%d",i)
#define outl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define GETCHAR getchar
#define PUTCHAR putchar
using namespace std;
inline void writeInt(int x) { if(x==-1) { PUTCHAR('-'); PUTCHAR('1'); PUTCHAR('\n'); } else { int i = 10; char buf[11]; // buf[10] = 0;
buf[10] = ' '; do { buf[--i] = x % 10 + '0'; x/= 10; }while(x); do { PUTCHAR(buf[i]); } while (buf[i++] != ' '); } }
inline void fastInput(int &x) {
register int c = getchar();
x = 0;
int neg = 0;
 
for(; ((c<48 || c>57) && c != '-'); c = getchar());
if(c=='-') {
neg = 1;
c = getchar();
}
for(; c>47 && c<58 ; c = getchar()) {
x = (x<<1) + (x<<3) + c - 48;
}
if(neg)
x = -x;
}
int dp[2][MAXN];
vector<char>s,w;
int main(){
 int t;
 fastInput(t);
 while(t--){
char S[MAXN],W[MAXN];
int a,b,k,slen,wlen,i,j,t,x=0,y=0,X,Y,ans=0;
cin>>S>>W;
cin>>a>>b>>k;
slen=strlen(S),wlen=strlen(W);
    if(a==0){
        cout<<0<<endl;
        continue;
    }
    else if(b==0 && slen==wlen){
        cout<<0<<endl;
        continue;
    }
     else if(k==0)
    {
        cout<<-1<<endl;
        continue;
    }
    for(i=0;i<MAXN;i++)
        dp[0][i]=dp[1][i]=200;
    for(i=0;i<=min(wlen,k+1);i++)
        dp[0][i]=i*a;
    for(i=1;i<=slen;i++){
        int st=max(1,i-k),lt=min(i+k,wlen);
        dp[1][0]=i*a;
        for(j=st;j<=lt;j++){
                int cost=b;
            if(S[i-1]==W[j-1]){
                cost=0;
            }
 
                    int tr=min(dp[0][j-1]+cost,dp[0][j]+a);
                dp[1][j]=min(tr,dp[1][j-1]+a);
 
            dp[0][j-1]=dp[1][j-1];
            //cout<<dp[1][j-1]<<" ";
        }
        //cout<<endl;
        dp[0][j]=dp[1][j];
    }
    if(dp[1][wlen]<=k)
    cout<<dp[1][wlen]<<endl;
    else
        cout<<-1<<endl;
 }
return 0;
}