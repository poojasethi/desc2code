#include <bits/stdc++.h>
#include <assert.h>
 
using namespace std;
 
typedef long long ll;
typedef long double ld;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define rep(i,n) for(int i = 0; i < n; i++)
#define reps(i,a,n) for(int i = a; i < n; i++)
#define s(n) cin >> n
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define rsz(x,n) x.clear(); x.resize(n)
#define rrsz(x,a,n) x.clear(); x.resize(n,a)
#define wt while(true)
#define all(x) x.begin(),x.end()
#define pb push_back
#define ls(x) (((x) << 1) + 1)
#define rs(x) ((ls(x)) + 1)
#define md(a,b) (((a) + (b)) >> 1)
#define INF (1e9 + 7)
 
int t, u, v, n, k, m, c, d, f, e, l, r, q;
const int N = 1e5 + 100;
const ll mod = 1e9 + 7;
const int K = 120;
const int step_up = 120;
int DP[N][2 * K];
vll a;
string ss, s1, s2;
int main () {
    csl;
	cin >> t;
	while (t--) {
		cin >> s1 >> s2;
		cin >> u >> v >> k;
		if (u == 0) {
			cout << 0 << '\n';
			continue;
		}
		if (abs((int)s1.size() - (int)s2.size()) * u > k) {
			cout << -1 << '\n';
			continue;
		}
		rep (i, s1.size() + 1) {
			rep (j, 2 * K)
				DP[i][j] = INF;
		}
		rep (i, k + 1) {
			DP[i][step_up - i] = i * u;
			DP[0][step_up + i] = i * u;
		}
		reps (i, 1, s1.size() + 1) {
			reps(j, -k, k + 1) {
				if (i + j <= 0 || i + j - 1 >= s2.size()) continue;
				//cout << i << " " << i + j << '\n';
					if (s1[i - 1] == s2[i + j - 1])
					DP[i][step_up + j] = DP[i - 1][step_up + j];
					DP[i][step_up + j] = min(DP[i][step_up + j], (int)min(DP[i - 1][step_up + j + 1] + u, DP[i][step_up + j - 1] + u));
					//cout << DP[i][step_up + j] << "\n";
					DP[i][step_up + j] = min(DP[i][step_up + j], DP[i - 1][step_up + j] + (int)v);
				//cout << DP[i][step_up + j] << "\n";
			}
		}
		cout << (DP[s1.size()][step_up + (int)s2.size() - (int)s1.size()] <= k ? DP[s1.size()][step_up + s2.size() - s1.size()] : -1) << '\n';
	}
    return 0;
} 