/*
	problem: http://www.codechef.com/problems/SEATSR/
*/

#include <bits/stdc++.h>
using namespace std;

#define LOCAL 0
#define PB push_back
#define LB lower_bound
#define UB upper_bound
#define ALL(c) c.begin(), c.end()
#define FOR(i, s, e) for(int i = s; i < e; i++)
#define DBG(e) {if(LOCAL) cerr << setw(10) << #e << " = " << setw(5) << e << "\n";}
#define FOR_EACH(e, c) for(typeof(c.begin()) c##it = c.begin();(e = *c##it ,c##it != c.end()); c##it++)

typedef long long int LL;
typedef vector<int> VI;
typedef vector<LL> VL;
typedef pair<int, int> PII;

const int MOD = 1E9+9;
const int INF = 1E5+1;

#define id(a, b) ((a)-(b)+(x))

int solve(string& s, string& w, int a, int b, int k)
{
	int m = s.length(), n = w.length();
	if(a == 0){
		return a;
	}
	int x = k/a;
	if(abs(m-n) > x){
		return -1;
	}
	if(b == 0){
		return abs(m-n)*a;
	}

	vector<vector<int> > dp(m+1, vector<int>(2*x+1, INF));
	FOR(i, 0, min(x+1, m)){
		dp[i][id(0, i)] = i*a;
		dp[0][id(i, 0)] = i*a;
	}

	for(int i = 1; i <= m; i++){
		for(int j = max(i-x, 1); j <= min(i+x, n); j++){
			if(s[i-1] == w[j-1] && 0 <= id(j-1, i-1) && id(j-1, i-1) <= 2*x) 
				dp[i][id(j, i)] = dp[i-1][id(j-1, i-1)];
			else {
				if(0 <= id(j, i-1) && id(j, i-1) <= 2*x) dp[i][id(j, i)] = min(dp[i][id(j, i)], dp[i-1][id(j, i-1)]+a);
				if(0 <= id(j-1, i) && id(j-1, i) <= 2*x) dp[i][id(j, i)] = min(dp[i][id(j, i)], dp[i][id(j-1, i)]+a);
				if(0 <= id(j-1, i-1) && id(j-1, i-1) <= 2*x) dp[i][id(j, i)] = min(dp[i][id(j, i)], dp[i-1][id(j-1, i-1)]+b);
			}
		}
	}

	if(dp[m][id(n, m)] <= k)	return dp[m][id(n, m)];
	else return -1;
}
int main()
{
	ios_base::sync_with_stdio(false);
	// code starts here
    #if LOCAL
        ifstream fin;fin.open("in.txt");
        if(fin.fail())  exit(1);
        #define cin fin
        // ofstream fout("out.txt");
        // #define cout fout
    #endif

	int t;
	cin >> t;
	while(t--){
		int a, b, k;
		string s, w;
		cin >> s >> w;
		cin >> a >> b >> k;
		cout << solve(s, w, a, b, k) << "\n";
	}
}
