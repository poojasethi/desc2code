#include <bits/stdc++.h>
using namespace std;

#define forall(i,b)                 for(int i=0;i<b;i++)
#define sforall(i,s,b)              for(int i=s;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define pb                          push_back
#define mp                          make_pair
#define fill(a,v)                   memset(a, v, sizeof a)
#define sortall(a)                  sort(a.begin(), a.end())
#define sz                          size()

#define ll long long
#define ii pair<int,int>
#define vi vector<int>
#define mod 1000000009

#define x_gc getchar()
template<typename T>
inline void inp(T &n) {//fast input function
	n=0;
	int ch=x_gc,sign=1;
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=x_gc;}
	while( ch >= '0' && ch <= '9' )
		n=(n<<3)+(n<<1)+ ch-'0', ch=x_gc;
	n=n*sign;
}
#define in1(x) int x;inp(x);
#define in2(x,y) in1(x);in1(y);
#define in3(x,y,z) in1(x);in1(y);in1(z);
#define lin(x) ll x;inp(x);

#define INF 10000
#define maxn 100000000
int a,b,k;
int d[100004][205];

inline int g(int x,int y){
	// if (y>2*k+1 || y<0) return INF;
	// else 
	return d[x][y];
}
int main(){
#ifndef ONLINE_JUDGE
	freopen("in", "r", stdin);
#endif
	int tc;
	inp(tc);
	while(tc--){
		string s,w;
		cin >> s >> w;
		in3(a,b,k);
		if (a==0){
			cout << 0 << endl;
			continue;
		}
		int ss = s.sz,sw = w.sz;
		if (abs(ss-sw)>k) {
			cout << -1 << endl;
			continue;
		}
		int offset=k;
		forall(i,ss+1) forall(j,205) d[i][j] = INF;
		forall(i,k+1) d[i][offset-i] = i*a;
		forall(i,k+1) d[0][offset+i] = i*a;
		sforall(i,1,ss+1) {
			forall(j,2*k+1) {
				if (i+j<=k) continue;
				if (s[i-1] == w[i+j-k-1]) d[i][j] = d[i-1][j];
				else {
					// cout << i << " " << j << " "  << g(i-1,j+1) << " "  << g(i-1,j) << " "  << g(i,j-1) << " " ;
					d[i][j] = min(a+g(i-1,j+1),a+g(i,j-1));
					d[i][j] = min(d[i][j],b+g(i-1,j));
					// cout << d[i][j] << endl;
				}
			}
		}
		// forall(i,ss+1) {
		// 	forall(j,2*k+1) {
		// 		// printf("%d ", );
		// 		if (abs(d[i][j]-INF)<5)
		// 			cout << "a ";
		// 		else
		// 			cout << (d[i][j]) << " ";
		// 	}
		// 	cout << endl;
		// }
		int ans = d[s.sz][offset+w.sz-s.sz];
		printf("%d\n",ans<=k?ans:-1);
	}
	return 0;
}