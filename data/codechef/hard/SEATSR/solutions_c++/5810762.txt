#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cassert>

#define NMAX 100010
#define KMAX 210

using namespace std;

int dp[2][KMAX];

char str1[NMAX],str2[NMAX];
int a,b;

int N,M,K;


int main(){
	int t;
	int k,i,j;

	scanf("%d",&t);

	while(t--){

		memset(dp,0,sizeof(dp));
		scanf("%s%s",str1,str2);
		scanf("%d%d%d",&a,&b,&K);
		M = strlen(str1),  N= strlen(str2);

		b = min(b,a+a);

		if(!a){
			printf("%d\n",0);
			continue;
		}

		for(j = 0; j <= N; ++j){
			k = j-M;
			if(k < -K || k > K) continue;
			dp[M&1][k+K] = (N-j)*a;
		}

		for(i = M-1; i >= 0; --i){
			for(k = 2*K; k >= 0; --k){
				j = i+k-K;
				if(j > N || j < 0) continue;

				dp[i&1][k]= (1e9);
				if(k) dp[i&1][k] = dp[(i&1)^1][k-1]+a;
				if(j < N && k < 2*K) dp[i&1][k] = min(dp[i&1][k],dp[i&1][k+1]+a);
				if(j < N) dp[i&1][k] = min(dp[i&1][k], dp[(i&1)^1][k] + b*(str1[i]!=str2[j]));

			}
		}

		printf("%d\n",dp[0][K] <= K ? dp[0][K] : -1);
	}


	return 0;
}
