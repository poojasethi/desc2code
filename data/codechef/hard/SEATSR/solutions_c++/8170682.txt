#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<climits>

#define MAX 200000

typedef long int ll;

char str1[MAX];
char str2[MAX];
char str3[MAX];
ll c1, c2;
int a, b, k;

ll dp[3][MAX];
ll f, s;

void init() {
 ll i;
    for(i=0; i<MAX; i++) {
      dp[0][i] = LONG_MAX;
      dp[1][i] = LONG_MAX;
      dp[2][i] = LONG_MAX;
    }
}

void update(ll pos, ll idx, ll val) {
  // find correct pos
  if (pos) dp[s][idx] = val;
  else dp[f][idx] = val;
  return;
}

ll getval(ll pos, ll idx) {
  // find correct pos
  if (pos) return dp[s][idx];
  else return dp[f][idx];
}

ll gimme(ll pos, ll i, ll j) {

  if (j == 0) {
    update(pos, j, i*a);
    return i*a;
  }
  if (i == 0) {
    update(pos, j, j*a); 
    return j*a;
  }
  return getval(pos, j);
}

int main() {

  int T;
  ll i, j, temp;
  char ch;
  ll min;
  ll first, second, third;
  ll add;
  scanf("%d", &T);
  ll ans;

  while(T--) {
    c1 = c2 = 1;
    scanf("%s", str1);
    scanf("%s", str2);
    for(i=0; str1[i]!= '\0'; i++) {
      str3[i+1] = str1[i];
    }
    str3[i+1] = '\0';

    for(i=1; str3[i]!= '\0'; i++) {
      str1[i] = str3[i];
    }
    str1[i] = '\0';

    for(i=0; str2[i]!= '\0'; i++) {
      str3[i+1] = str2[i];
    }
    str3[i+1] = '\0';

    for(i=1; str3[i]!= '\0'; i++) {
      str2[i] = str3[i];
    }
    str2[i] = '\0';

    c1 = strlen(str1);
    c2 = strlen(str2);

    //a = b = 1;
    //k = 30000000;
    scanf("%d %d %d", &a, &b, &k);
    
    //getchar();
    
    init();
    
    if (a > 0 && b > 0 && k == 0) {
      printf("-1\n");
      continue;
    }

    if (a == 0) {
      printf("0\n");
      continue;
    }

    if (abs(c1 - c2) > k) printf("-1\n");
    else {
      f = 1, s = 0;
      // go till end of string c1
      for(i=1;i<=c1;i++) {
        std::swap(f, s);
        j = i - k;
        if (j <= 0) j = 1;
        while(1) {
          if (j > i + k || j > c2) break; 
          // delete case
          first = gimme(0, i-1, j);
          // insert casae
          second = gimme(1, i, j-1);
          // substitution
          third = gimme(0, i-1, j-1);
          min = LONG_MIN;
          add = 0;
          if (first <= second) min = first + a;
          else min = second + a;
          if (str1[i] != str2[j]) add = b;
          if (third + add <= min) min = third + add;
          update(1, j, min);
          j++;
        }
      } 
      ans = getval(1, c2);
      if (ans <= 0) printf("0\n");
      else if (ans > k) printf("-1\n");
      else printf("%ld\n", ans);
    }
  }
  return 0;
}
