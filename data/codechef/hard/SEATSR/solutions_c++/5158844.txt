//This is the painkiller...
#include <bits/stdc++.h>
using namespace std;
#define mem(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define mp make_pair
#define sz(x) int((x).size())
#define x first
#define y second
#define all(a) (a).begin(),(a).end()
#define rep(i,n) for(int i=0;i<int(n);i++)
#define repi(i,a,n) for(int i=int(a);i<int(n);i++)
#define repe(i,a) for(__typeof((a).begin()) i=(a).begin();i!=(a).end();i++)

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;

int dp[2][205];
char p[100005];
char q[100005];
int a,b,k,m,n;
//~ 
//~ int solve(int i,int j)
//~ {
	//~ if(i+j<0)return INT_MAX/3;
	//~ if(i==0)
	//~ {
		//~ return j*a;
	//~ }
	//~ int &ret=dp[i][j+100];
	//~ if(ret!=-1)return ret;
	//~ if(ret==-1)
	//~ {
		//~ ret=INT_MAX/3;
		//~ if(i+j==0)ret=i*a;
		//~ if(i+j<=n && i+j>0)
		//~ {
			//~ ret=min(ret,solve(i-1,j)+b*int(p[i]!=q[i+j]));
			//~ if(j<100)ret=min(ret,solve(i-1,j+1)+a);
			//~ if(j>-100)ret=min(ret,solve(i,j-1)+a);
		//~ }
	//~ }
	//~ cout<<i<<" "<<j<<" "<<ret<<endl;
	//~ return ret;
//~ }

int main()
{
	//~ freopen("in.txt","r",stdin);
	//~ freopen("out.txt","w",stdout);
	int tst;
	scanf("%d",&tst);
	while(tst--)
	{
		scanf("%s%s",p+1,q+1);
		m=strlen(p+1);
		n=strlen(q+1);
		scanf("%d%d%d",&a,&b,&k);
		if(a==0)
		{
			printf("0\n");
			continue;
		}
		if(b==0)
		{
			if(abs(m-n)*a<=k)printf("%d\n",abs(m-n)*a);
			else printf("-1\n");
			continue;
		}
		if(abs(n-m)*a>k)
		{
			printf("-1\n");
			continue;
		}
		int now=1,pre=0;
		//~ mem(dp,-1);
		for(int i=-100;i<=100;i++)dp[now][i+100]=(i<0?INT_MAX/3:i*a);
		//~ dp[now][100]=0;
		int low=-k/a,high=k/a;
		repi(i,1,m+1)
		{
			swap(now,pre);
			for(int j=low;j<=high;j++)
			{
				dp[now][100+j]=INT_MAX/3;
				int x=i+j;
				if(x==0)dp[now][100+j]=i*a;
				if(x>0 && x<=n)
				{
					dp[now][100+j]=min(dp[now][100+j],dp[pre][j+100]+((p[i]!=q[x])?b:0));
					if(j<high)dp[now][100+j]=min(dp[now][100+j],dp[pre][j+1+100]+a);
					if(j>low)dp[now][100+j]=min(dp[now][100+j],dp[now][j-1+100]+a);
				}
			}
		}
		int ans=dp[now][n-m+100];
		printf("%d\n",(ans>k?-1:ans));
	}
	//~ std::cerr<<endl<<(1.0*clock()/CLOCKS_PER_SEC)<<"s"<<endl;
	return 0;
}