#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;

const int mod=1e9+7,maxn=100005,ln=18;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
//#define getcx getchar_unlocked
#define getcx getchar
/*inline void S(int& n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}*/
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define Debug(x) cout << #x << "=" << x << endl
#define Debugarr(x,n) cout<<"array "<<#x<<":"<<endl; F(i,0,n) cout<<i<<". "<<x[i]<<endl; cout<<endl
#define Debugarr2(x,m,n) cout<<"array "<<#x<<":"<<endl; F(i,0,m) {F(j,0,n) cout<<x[i][j]<<" "; cout<<endl;} cout<<endl
#define pii pair<long long int,long long int>
#define chk(x,n) (x[n>>5]&(1<<(n&31))) //unsigned int
#define set(x,n) (x[n>>5]|=(1<<(n&31)))//32 bit
const int inf= int(1e9),shift=30,etf=mod-1;

char s1[maxn],s2[maxn];
int a,b,k,d,len1,len2;
int dp[2][maxn];


int _solve()
{
    F(i,0,maxn)
    {
        dp[0][i]=dp[1][i]=inf;
    }
    F(i,0,min(d+1,len2+1))
        dp[0][i]=i*a;
    int cur=1,prev=0;

    //Debugarr(dp[0],len2+1);

    F(i,1,len1+1)
    {
        dp[cur][0]=i*a;
        if(i>d)
            dp[cur][i-d-1]=inf;
        F(j,max(1,i-d),min(len2+1,i+d+1))
        {
            if(s1[i-1]==s2[j-1])
                dp[cur][j]=dp[prev][j-1];
            else
                dp[cur][j]=min(min(dp[prev][j]+a,dp[cur][j-1]+a),dp[prev][j-1]+b);
        }

        //Debugarr(dp[cur],len2+1);

        cur^=1;
        prev^=1;
    }

    if(dp[prev][len2]<=k)
        return dp[prev][len2];
    else
        return -1;

}

int main()
{
    int t;
    S(t);
    while(t--)
    {

        Ss(s1);
        Ss(s2);

        len1=strlen(s1),len2=strlen(s2);

        S(a);
        S(b);
        S(k);

        if(len1>len2)
        {
            char temp[maxn];
            strcpy(temp,s1);
            strcpy(s1,s2);
            strcpy(s2,temp);
            swap(len1,len2);
        }

        if(a)
            d=k/a;

        if(!a)
        {
            P(a);
        }
        else if(len2-len1>d)
        {
            cout<<"-1"<<endl;
        }
        else
        {
            P(_solve());
        }

    }
    return 0;
}
