#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
#define inf 1000000000
#define maxn 1000000

#define ll long long
#define pii pair<int, int>
#define pb push_back
#define sin scanint
#define bitcount(x) __builtin_popcount(x)
#define fill(s, p) memset(s, p, sizeof(s));
#define gc getchar

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

bool opposite(char c1, char c2)
{
	if(c1=='(' && c2==')')
		return true;
	if(c1=='{' && c2=='}')
		return true;
	if(c1=='<' && c2=='>')
		return true;
	if(c1=='[' && c2==']')
		return true;
	return false;
}

char str[maxn];
ll arr[maxn], dp[maxn], csum[maxn];;
int pos[maxn];

struct node{
	char bracket;
	int id;
};

stack<node> st;

int main()
{
	#ifndef ONLINE_JUDJE
		//freopen("input.txt", "r", stdin);
	#endif
	int t, n, i, j;
	ll y, ans;
	node x;
	sin(t);
	while(t--){
		while(!st.empty())
			st.pop();
		sin(n);
		scanf("%s", str);
		for(i=0; i<n; i++){
			pos[i] = -1;
			if(str[i]==')' || str[i]=='}' || str[i]==']' || str[i]=='>'){
				if(st.empty()){
					pos[i] = -1;
					continue;
				}
				x = st.top();
				if(opposite(x.bracket, str[i])){
					pos[i] = x.id;
					st.pop();
				}
				else{
					pos[i] = -1;
					st.push((node){str[i], i});
				}
			}
			else
				st.push((node){str[i], i});
		}
		ans = 0;
		for(i=0; i<n; i++){
			dp[i] = 0;
			scanf("%lld", &arr[i]);
			if(i==0)
				csum[i] = arr[i];
			else
				csum[i] = arr[i]+csum[i-1];
			if(pos[i]!=-1){
				if(pos[i]==0)
					dp[i] = max(dp[i], dp[pos[i]-1]+csum[i]);
				else
					dp[i] = max(dp[i], dp[pos[i]-1]+csum[i]-csum[pos[i]-1]);
			}
			//cout << pos[i] << " " << dp[i] << endl;
			ans = max(ans, dp[i]);
		}
		printf("%lld\n", ans);
	}
	return 0;
}