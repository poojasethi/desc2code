#include<iostream>
#include<cstdio>
#include<string.h>
#include<stack>
#include<algorithm>

#define in(a) scanf("%d",&a)
#define out(a) printf("%d\n",a)
#define ins(a) scanf("%s",a);
#define outll(a) printf("%lld\n",a)
#define inll(a) scanf("%lld",&a)
#define fo(i,n) for(i=0;i<n;i++)
#define lll long long 
#define stackk stack<int>
	
using namespace std;

char str[100001];
lll arr[100001],sum[100001],fun[100001],ans[100001];

char oppo(char x)
{
	if(x==')')    return '(';
	if(x=='>')	  return '<';
	if(x=='}')	  return '{';
	if(x==']')    return '[';
	
	return '.';
}

int main()
{
	int t,i,n,zzz;
	lll cnt;
	in(t);
	
	fo(zzz,t)
	{
		
		in(n);
		scanf("%s",str+1);
		
		sum[0]=0;
		
		for(i=1;i<=n;i++)
			{
				inll(arr[i]);
				sum[i]=arr[i]+sum[i-1];
			}
		
		for(i=0;i<=n;i++)
			fun[i]=0;
	
		stackk s;
		s.push(0);
		
		for(i=1;i<=n;i++)
		{
			if(str[s.top()]==oppo(str[i]))
			{
				fun[i]=s.top();
				s.pop();
			}
			else
				s.push(i);
		}
		
	//	for(i=1;i<=n;i++)  cout<<fun[i]<<"  ";
		
		cnt=0;
		for(i=1;i<=n;i++)
		{
			ans[i]=0;
			
			if(fun[i]!=0)
				ans[i]=max(ans[i],sum[i]-sum[fun[i]-1]+ans[fun[i]-1]);
			
			cnt=max(cnt,ans[i]);
		}
		
		outll(cnt);
	}
}