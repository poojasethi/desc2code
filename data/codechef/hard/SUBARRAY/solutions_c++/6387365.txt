/* 
    Template: 
    By Jugal :) 
*/ 
#include<bits/stdc++.h>
using namespace std; 

typedef long long ll; 
typedef vector <int> vi; 
typedef vector <vi> vii; 
typedef pair<int,int> pii; 

#define pb push_back 
#define mp make_pair 
#define ff first 
#define ss second 
#define sz size() 
#define len length() 
#define rep(i,n) for(int i=0;i<n;i++) 
#define ref(i,a,n) for(int i=a;i<=n;i++) 
#define reb(i,n,a) for(int i=n;i>=a;i--) 
#define all(a) a.begin(),a.end() 
#define gi(n) scanf("%d",&n) 
#define pi(n) printf("%d",n) 
#define ps printf(" ") 
#define pn printf("\n") 

struct node {
	char c;
	ll num;
} a[1000000];

int cheak(char ch1,char ch2) {
	if(ch1=='(' && ch2==')') return 1;
	if(ch1=='<' && ch2=='>') return 1;
	if(ch1=='{' && ch2=='}') return 1;
	if(ch1=='[' && ch2==']') return 1;
	return 0;
}

int main() 
{ 
	int t;
	gi(t);
	while(t--) {
		int n;
		gi(n);
		int track[n+9];
		memset(track,0,sizeof(track));
		ref(i,1,n) scanf(" %c",&(a[i].c));
		ref(i,1,n) scanf("%lld",&(a[i].num));

//		ref(i,1,n) printf("%c %lld   ",a[i].c,a[i].num);pn;
	
		ref(i,1,n) a[i].num+=a[i-1].num;
		stack<int> stk;
		stk.push(0);
		ref(i,1,n) {
			if(cheak(a[stk.top()].c,a[i].c)) {//cout << "yes";
				track[i]=stk.top();
				if(!stk.empty())
				stk.pop();
			} else stk.push(i);
		}
	
//		ref(i,1,n) cout << track[i] << " ";
//		pn;

		ll ans=0,dp[n+9];
		memset(dp,0,sizeof(dp));
		ref(i,1,n) {
			if(track[i]) dp[i]=max(a[i].num-a[track[i]-1].num+dp[track[i]-1],(ll)0);
			ans=max(ans,dp[i]);
		}
		printf("%lld\n",ans);
	}
	return 0; 
} 
