#include<bits/stdc++.h>
#define ll long long int
using namespace std;
int  a[1000000],id[1000000];
ll dp[1000000],sum[1000000];
char s[1000000];
ll maxm(ll a,ll b)
{
    return (a>b)?a:b;
}
bool closing(char ch)
{
    if(ch==')'||ch=='}'||ch==']'||ch=='>')
        return true;
    return false;
}
bool opp(char x,char y)
{
    if((x=='('&&y==')')||(x=='['&&y==']')||(x=='{'&&y=='}')||(x=='<'&&y=='>'))
        return true;
    return false;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
         scanf("%d",&n);
        scanf("%s",s);
        for(int i=0;i<n;i++)
        {
            sum[i]=0;
            dp[i]=0;
            id[i]=-1;
        }
        for(int i=0;i<n;i++){
             scanf("%d",&a[i]);
            if(i==0)
                sum[0]=a[0];
            else
            sum[i]=sum[i-1]+a[i];
        }
        stack<int> stk;
        for(int i=0;i<n;i++)
        {
            if(!stk.empty())
            {
                if(closing(s[i])&&opp(s[stk.top()],s[i]))
                {
                    id[i]=stk.top();
                    stk.pop();
                }
                else
                    stk.push(i);
            }
            else
                stk.push(i);
        }
         ll ans=0;
        for(int i=0;i<n;i++)
        {
            if(id[i]!=-1)
            dp[i]=maxm(dp[i],((id[i]==0)?0:dp[id[i]-1])+sum[i]-(id[i]==0?0:sum[id[i]-1]));
            ans=maxm(ans,dp[i]);
        }
       printf("%lld\n",ans);
    }
    return 0;
}
