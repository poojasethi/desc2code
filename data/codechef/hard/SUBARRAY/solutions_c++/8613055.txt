#include<string>
#include<stack>
#include<algorithm>
#include<iostream>
#include<cstdio>
using namespace std;

char cal(char c)
{
if(c==')')
return '(';
if(c=='}')
return '{';
if(c==']')
return '[';
if(c=='>')
return '<';
}

long long int func(long long int *a,string s,int n)
{
stack<pair<char,int> >st;
long long int dp[n+2];
fill(dp,dp+n+2,0);
long long int sum[n+2];
long long int ans=0;
sum[0]=a[0];
for(int i=1;i<n;i++)
sum[i]=sum[i-1]+a[i];
for(int i=0;i<n;i++)
if(s[i]=='('||s[i]=='['||s[i]=='{'||s[i]=='<')
st.push(make_pair(s[i],i));
else if(!st.empty())
{
pair<char,int>temp=st.top();
if(temp.first==cal(s[i]))
{
dp[i]=max(0LL,(temp.second-1>=0?dp[temp.second-1]:0)+sum[i]-(temp.second-1>=0?sum[temp.second-1]:0));
st.pop();
ans=max(ans,dp[i]);
}
else
{
while(!st.empty())
st.pop();
}
}
return ans;
}

int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
while(t--)
{
int n;
cin>>n;
string s;
cin>>s;
long long int a[n];
for(int i=0;i<n;i++)
cin>>a[i];
cout<<func(a,s,n)<<endl;
}
return 0;
}
