#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<string>
#include<stack>
#include<cstdlib>
using namespace std;
#define ll long long
#define mp make_pair
#define pc putchar_unlocked
#define gc getchar_unlocked
#define pb push_back
#define f first
#define s second
ll dp[100010];
int closing[100010];
ll prefixsum[100010];
inline void inp(int &n) {
	n = 0;
	int ch = gc();
	int sign = 1;
	while (ch < '0' || ch > '9') {
		if (ch == '-') sign = -1;
		ch = gc();
	}
	while (ch >= '0' && ch <= '9')
		n = (n << 3) + (n << 1) + ch - '0', ch = gc();
	n = n*sign;
}


inline void outp(ll a) {
	char c;
	char snum[20];
	int i = 0;
	do {
		snum[i++] = a % 10 + 48;
		a = a / 10;
	} while (a != 0);
	i = i - 1;
	while (i >= 0)
		pc(snum[i--]);
	pc('\n');
}
int main()
{
	int tc;scanf("%d",&tc);
	while(tc--)
	{
		int num;inp(num);
		char st[100010];
		scanf("%s",st);
		int a[num+1];
		for(int i=0;i<num;i++)
		{
			dp[i]=0;
			closing[i]=-1;
			inp(a[i]);
		}
		stack<pair<char,int> >par;
		for(int i=0;i<num;i++)
		{
			if(par.empty())
			{
				par.push(mp(st[i],i));
				continue;
			}
			pair<char,int> temp=par.top();
			if(st[i]=='}' && temp.f=='{')
			{
				closing[i]=temp.second;
				par.pop();
			}
			else if(st[i]==']' && temp.f=='[')
			{
				closing[i]=temp.second;
				par.pop();
			}
			else if(st[i]=='>' && temp.f=='<')
			{
				closing[i]=temp.second;
				par.pop();
			}
			else if(st[i]==')' && temp.f=='(')
			{
				closing[i]=temp.second;
				par.pop();
			}
			else
				par.push(mp(st[i],i));
		}
		prefixsum[0]=a[0];
		for(int i=1;i<num;i++)
			prefixsum[i]=prefixsum[i-1]+a[i];
		dp[0]=0;
		ll ans=0;
		for(int i=1;i<num;i++)
		{
			if(closing[i]!=-1 && closing[i]!=0)
				dp[i]=prefixsum[i]-prefixsum[closing[i]-1]+max((ll)0,dp[closing[i]-1]);
			else if(closing[i]==0)
				dp[i]=prefixsum[i];
		}
		for(int i=0;i<num;i++)
			ans=max(ans,dp[i]);
		printf("%lld\n",ans);
	}
	return 0;
}