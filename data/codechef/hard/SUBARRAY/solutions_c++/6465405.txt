#include<bits/stdc++.h>
using namespace std;

#define MaxN 100007

typedef long long int ll;
char ch[MaxN];
ll inp[MaxN],sum[MaxN],hsh[MaxN],maxsum[MaxN];

char opp(char c)
{
	if ( c==')')	return '(';
	if ( c=='>')	return '<';
	if ( c=='}')	return '{';
	if ( c==']')	return '[';
	return '.';
}

void solve()
{
	ll answer = 0;
	ch[0]  = '$';
	int N;
	scanf("%d",&N);
	for(int i=0;i<=N+1;i++)	hsh[i] = 0;
	scanf("%s",ch+1);
	for(int i=1;i<=N;i++)	scanf("%lld",&inp[i]);
	sum[0] = 0;
	for(int i=1;i<=N;i++)	sum[i] = inp[i] + sum[i-1];
	stack<int> S;
	S.push(0);
	for(int i=1;i<=N;i++){	//finding the last matched paranthesis in hsh[i]
		if ( ch[S.top()] == opp(ch[i]) ){
			hsh[i] = S.top();
			S.pop();
		}
		else{
			S.push(i);
		}
	}
	for(int i=1;i<=N;i++){
		maxsum[i] = 0;
		if ( hsh[i] ){
			maxsum[i] = max( sum[i] - sum[hsh[i]-1] + maxsum[hsh[i]-1] , maxsum[i]);
		}
		answer = max(answer,maxsum[i]);
	}
	printf("%lld\n",answer);
}
int main()
{
	int T;
	scanf("%d",&T);
	while(T--){
		solve();
	}
	return 0;
}