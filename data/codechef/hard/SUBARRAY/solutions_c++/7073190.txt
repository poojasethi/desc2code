#include<bits/stdc++.h>
using namespace std;
void clear1( std::stack<pair<int,char> > &q )
{
   std::stack<pair<int,char> > empty;
   std::swap( q, empty );
}
bool check(char x,char y)
{
	if(x=='(' && y==')' ){return true;}
	if(x=='{' && y=='}' ){return true;}
	if(x=='[' && y==']' ){return true;}
	if(x=='<' && y=='>' ){return true;}
	return false;
}
const int MAXN=1e5+7;
long long x[MAXN],dp1[MAXN];
int main()
{
	int T;
	scanf("%d",&T);
	while(T--){
	int n;
	scanf("%d",&n);
	string s;
	cin>>s;
	x[0]=0,dp1[0]=0;
	for(int i=1;i<=n;i++)
	{
		long long temp;
		scanf("%lld",&temp);
		x[i]=x[i-1]+temp;
		dp1[i]=0;
	}
	long long ans=0;
	stack<pair<int,char> > s1;
	if(s[0]=='(' || s[0]=='{' || s[0]=='[' || s[0]=='<')
	{
		s1.push(make_pair(0,s[0]));
	}
	for(int i=1;i<n;i++)
	{
			if(s[i]=='(' || s[i]=='{' || s[i]=='[' || s[i]=='<')
			{
				s1.push(make_pair(i,s[i]));dp1[i]=0;
			}
			else
			{
				if(s1.empty()==false)
				{
					pair<int,char> p=s1.top();
					if(!check(p.second,s[i]))
					{
						dp1[i]=0;
						clear1(s1);
					}
					else
					{
						int temp=p.first;s1.pop();
						long long lol=x[i+1]-x[temp];
						dp1[i]=lol;
						if(temp!=0)
						{
							dp1[i]=max((long long)lol,lol+dp1[temp-1]);
						}
					}
				}
				else
				{
					dp1[i]=0;
				}
			}
	}
	for(int i=0;i<n;i++)
	{
		if(ans<dp1[i]){ans=dp1[i];}	}
	printf("%lld\n",ans);
}}
