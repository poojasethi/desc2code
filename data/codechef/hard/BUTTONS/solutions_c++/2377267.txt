using namespace std;
#include <iostream>
#include <vector>
#define FOR(a,b,c) for(int a = b; a < c; a++)
#define REP(i,n) FOR(i,0,n)
#define GI ({int t; scanf("%d",&t);t;})
 
const int MAX = 1005, ROW = 0;
int n, runs, mp[MAX][MAX], triv;
vector <int> rows, cols, arows, acols;
 
void flip(int ch, int i) {
    #define tog(x) ((x) = 1-(x))
    REP(j,n) 
    if(ch == ROW) tog(mp[i][j]);
    else tog(mp[j][i]);
}
void print() {
//    REP(i,n) { REP(j,n) cout << mp[i][j] <<" "; cout << endl; }   cout << endl;
}
void solve() {
    int cmp[MAX][MAX];    
    REP(i,n) REP(j,n) cmp[i][j] = mp[i][j];
    print();
    REP(i,n) if(mp[0][i]) {
        flip(1-ROW, i);
        cols.push_back(i);
    }
    FOR(i,1,n) {
        FOR(j,1,n) if(mp[i][j] != mp[i][j-1]) { rows.clear(); cols.clear(); return; }
        if(mp[i][0]) rows.push_back(i);
    }    
    REP(i,n) REP(j,n) mp[i][j] = cmp[i][j];
}
int main() {
    runs = GI;
    while(runs--) {
        triv = 1;
        arows.clear(); acols.clear();
        n = GI;
        REP(i,n) REP(j,n) mp[i][j] = GI;
        REP(i,n) REP(j,n) {
            mp[i][j] ^= GI;
            if(mp[i][j]) triv = 0;
        }
        if(triv) puts("0");
        else {
            rows.clear(); cols.clear();
            solve();
            arows = rows, acols = cols;
 
            flip(ROW,0);
            rows.clear(); cols.clear(); rows.push_back(0);
            solve();             
            if(arows.size() + acols.size() > rows.size() + cols.size()) arows = rows, acols = cols;
            
            if(!arows.size() && !acols.size()) puts("-1");
            else {
                printf("%d ", arows.size());
                REP(i, arows.size()) {
                    printf("%d ", arows[i]);
                }
//                printf("\n");
                printf("%d ", acols.size());
                REP(i, acols.size()) {
                    printf("%d ", acols[i]);
                }
                printf("\n");
            }
        }            
    }
    return 0;
}