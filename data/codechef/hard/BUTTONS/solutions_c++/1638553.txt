#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<deque>
#include<iostream>
#include<string.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<algorithm>
#include<bitset>
#include<stack>
#include<queue>
#define MODM 1000000007
#define MAXM 2147483647
#define mp make_pair
#define ff first
#define ss second
#define Pi 3.14159265358979323846264
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define Sort(x) sort(x.begin(),x.end())
#define P pair<int,int>
#define S(x) scanf("%d",&x);
#define SL(x) scanf("%lld",&x);
using namespace std;
typedef long long int lli;
typedef unsigned long long int llu;

lli gcd(lli a,lli b){if(a==0)return(b);else return(gcd(b%a,a));}
lli fastpow(lli a,lli n,lli temp){if(n==1)return((a*temp)%MODM); if(n&1)temp=(temp*a)%MODM;return(fastpow((a*a)%MODM,n/2,temp));}
int scan()
{
 int t=0,m=1;char c;c=getchar();while((c<'0' || c>'9') and c!='-') c=getchar();if(c=='-'){c=getchar();m=-1;}
 while(c>='0' && c<='9'){t=(t<<3)+(t<<1)+c-'0';c=getchar();}
return(t*m);
}
int a[1002][1002],b[1002][1002],n,res,r[1002],c[1002],row,col;
int check1(int rd)
{
	for(int j=1;j<n;j++)
	if((a[rd][j]+c[j])%2!=b[rd][j])
	return(-1);
	return(1);
}
int check2(int rd)
{
	for(int j=1;j<n;j++)
	if((a[rd][j]+c[j]+1)%2!=b[rd][j])
	return(-1);
	
	return(1);
}
int main()
{
	int t;
	S(t);
	while(t--)
	{	
		row=col=0;
		memset(r,0,sizeof(r));
		memset(c,0,sizeof(c));
		S(n);
		for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
		S(a[i][j]);
		for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
		S(b[i][j]);
		
		for(int j=0;j<n;j++)
		{
			if(a[0][j]!=b[0][j])
			{
				c[j]=1;
				col++;
			}
		}
		for(int i=1;i<n;i++)
		{
			if(((a[i][0]+c[0])%2)==b[i][0])
			res=check1(i);
			else
			{
				res=check2(i);
				row++;
				r[i]=1;
			}
			if(res==-1)
			{	
				printf("-1\n");
				goto sis;
			}
		}
		if(row==0 and col==0)
		printf("0\n");
		else if(row==n and col==0)
		{	
			printf("0\n");
			printf("%d\n",n);
			for(int i=0;i<n;i++)
			printf("%d\n",i);
		}
		else if(row+col>n)
		{
			printf("%d\n",n-row);
			for(int i=0;i<n;i++)
			if(r[i]==0)
			printf("%d\n",i);
			printf("%d\n",n-col);
			for(int i=0;i<n;i++)
			if(c[i]==0)
			printf("%d\n",i);
		}
		else 
		{
			printf("%d\n",row);
			for(int i=0;i<n;i++)
			if(r[i]==1)
			printf("%d\n",i);
			printf("%d\n",col);
			for(int i=0;i<n;i++)
			if(c[i]==1)
			printf("%d\n",i);
		}
		sis: ;
	}
	return(0);
}