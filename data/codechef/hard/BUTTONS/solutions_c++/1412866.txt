#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <string>
#define SET(p) memset(p,-1,sizeof(p))
#define CLR(p) memset(p,0,sizeof(p))
#define LL long long int
#define ULL unsigned long long int
#define S(n)					scanf("%d",&n)
#define Sl(n)					scanf("%lld",&n)
#define Sf(n) 					scanf("%lf",&n)
#define Ss(n) 					scanf("%s",n)
using namespace std;
int init[1010][1010];
int final[1010][1010];
int arr[1010][1010];
int rows[1010];
int cols[1010];

int rows1[1010];
int cols1[1010];
int n;
void fliprow(int i)
{
	for(int j=0;j<n;j++)
	arr[i][j]^=1;
}
void flipcol(int j)
{
	for(int i=0;i<n;i++)
	arr[i][j]^=1;
}
void prep()
{
	CLR(rows);
	CLR(rows1);
	CLR(cols);
	CLR(cols1);
	}
int main()
{
	int i,j,k,l,m,t;
	#ifndef ONLINE_JUDGE
	freopen("example.txt","r",stdin);
	#endif
	S(t);
	while(t--)
	{
		prep();
		S(n);
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
				S(init[i][j]);
		bool flag=false;
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
			{
				S(final[i][j]);
				arr[i][j]=init[i][j]^final[i][j];
				if(arr[i][j])
					flag=true;
			}
			if(!flag)
			{
				printf("0\n");
				continue;
			}
			//row wise traverse
			bool flip0=false;
			for(j=0;j<n;j++)
			{
				if(arr[0][j])
				{
					flip0=true;
					break;
				}
			}
			int count=0;
			int r=0,c=0;
			if(flip0)
			{
				r++;
				count++;
				rows[0]=1;
				fliprow(0);
				for(i=0;i<n;i++)
					if(arr[0][i])
					{
						count++;
						c++;
						flipcol(i);
						cols[i]=1;
					}
			}
			bool breakall=false;
			for(i=1;i<n&&!breakall;i++)
			{
				bool iszero=false,isone=false;

				for(j=0;j<n;j++)
				{
					if(arr[i][j])
					{
						if(iszero)
						{
							breakall=true;
							break;
						}
						else
							isone=true;
					}
					else
					{
						if(isone)
						{
							breakall=true;
							break;
						}
						else
							iszero=true;
					}
				}
				if(isone)
				{
					r++;
					rows[i]=1;
					count++;
				}

			}

			if(breakall)
			{
				printf("-1\n");
				continue;
			}

			//col wise traverse
			int count1=0;
			for(i=0;i<n;i++)
				for(j=0;j<n;j++)
				{
					arr[i][j]=init[i][j]^final[i][j];
				}

				
				int r1=0,c1=0;
				if(flip0)
				{
					
					//flipcol(0);
					for(i=0;i<n;i++)
						if(arr[0][i])
						{
							c1++;
							count1++;
							flipcol(i);
							cols1[i]=1;
						}
				}
				breakall=false;
				for(i=1;i<n&&!breakall;i++)
				{
				bool iszero=false,isone=false;

				for(j=0;j<n;j++)
				{
					if(arr[i][j])
					{
						if(iszero)
						{
							breakall=true;
							break;
						}
						else
							isone=true;
					}
					else
					{
						if(isone)
						{
							breakall=true;
							break;
						}
						else
							iszero=true;
					}
				}
				if(isone)
				{
					r1++;
					rows1[i]=1;
					count1++;
				}

				}

				if(breakall)
				{
					printf("-1\n");
					continue;
				}
				if(count<count1)
				{
					printf("%d\n",r);
					for(i=0;i<n;i++)
						if(rows[i])
							printf("%d\n",i);

					printf("%d\n",c);
					for(i=0;i<n;i++)
						if(cols[i])
							printf("%d\n",i);
				}
				else
				{
					printf("%d\n",r1);
					for(i=0;i<n;i++)
						if(rows1[i])
							printf("%d\n",i);

					printf("%d\n",c1);
					for(i=0;i<n;i++)
						if(cols1[i])
							printf("%d\n",i);
				}



	}
	return 0;
}
