#include <stdio.h>
#define BUF 4096
char ibuf[BUF];
 
int ipt = BUF;
 
int readInt() {
 
    while (ipt < BUF && ibuf[ipt] < '0') ipt++;
 
    if (ipt == BUF) {
	fread(ibuf, 1, BUF, stdin);
 
	ipt = 0;
	while (ipt < BUF && ibuf[ipt] < '0') ipt++;
 
    }
    int n = 0;
    while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
 
    if (ipt == BUF) {
	fread(ibuf, 1, BUF, stdin);
 
	ipt = 0;
	while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
 
    }
    return n;
}
#define BBUF 2
char bibuf[BBUF];
 
int bipt = BBUF;
bool readBool() {
 

	fread(bibuf, 1, BBUF, stdin);
 	bool n;
	bipt = 0;
 
    
 
    n = bibuf[bipt++]-'0';

 
    
    return n;
}
int main()
{
	bool a[1001][1001],b[1001][1001],isrowflipped[1001],iscolflipped[1001];
	int t,n,i,j,rowcount,colcount;
	//scanf("%d",&t);
	t = readInt();
	while(t--)
	{
		//scanf("%d",&n);
		n = readInt();
		for(i = 0;i < n;i++)
		{
			for(j = 0;j < n;j++)
			{
				//scanf("%d",&a[i][j]);
				a[i][j] = readInt();
			}
		}
		for(i = 0;i < n;i++)
		{
			for(j = 0;j < n;j++)
			{
				//scanf("%d",&b[i][j]);
				b[i][j] = readInt();
			}
		}
		isrowflipped[0] = 0;
		for(i = 0;i < n;i++)
		{
			if(a[0][i] == b[0][i])
			{
				iscolflipped[i] = 0;
			}
			else
			{
				iscolflipped[i] = 1;
			}
		}
		for(i = 1;i < n;i++)
		{
			if(a[i][0] == b[i][0])
			{
				isrowflipped[i] = iscolflipped[0];
			}
			else
			{
				isrowflipped[i] = 1 - iscolflipped[0];
			}
		}
		for(i = 0;i < n;i++)
		{
			for(j = 0;j < n;j++)
			{
				if(a[i][j] == b[i][j])
				{
					if(isrowflipped[i] != iscolflipped[j])
						break;
				}
				else
				{
					if(isrowflipped[i] == iscolflipped[j])
						break;
				}
			}
		}
		if((i == n)&&(j == n))
		{
			rowcount = 0;
			colcount = 0;
			for(i = 0;i < n;i++)
			{
				if(isrowflipped[i] == 1)
					rowcount++;
				if(iscolflipped[i] == 1)
					colcount++;
			}
			if((rowcount+colcount) == 0)
			{	
				printf("0\n");
			}
			else if((rowcount+colcount) <= n)
			{
				printf("%d\n",rowcount);
				for(i = 0;i < n;i++)
				{
					if(isrowflipped[i] == 1)
						printf("%d\n",i);
				}
				printf("%d\n",colcount);
				for(i = 0;i < n;i++)
				{
					if(iscolflipped[i] == 1)
						printf("%d\n",i);
				}
			}
			else
			{
				printf("%d\n",n-rowcount);
				for(i = 0;i < n;i++)
				{
					if(isrowflipped[i] == 0)
						printf("%d\n",i);
				}
				printf("%d\n",n-colcount);
				for(i = 0;i < n;i++)
				{
					if(iscolflipped[i] == 0)
						printf("%d\n",i);
				}
			}
		}
		else
		{
			printf("-1\n");
		}
	}
	return 0;
}