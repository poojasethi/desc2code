#include<iostream>
#include<stdio.h>
#include<map>
using namespace std;
int t,n;
int ans,row,column;
map<int,int> r,c;
int a[1001][1001],b[1001][1001];
void normalize()
{
for(int i=0;i<n;i++)
{
r[i]=1-r[i];
c[i]=1-c[i];
}
ans=2*n-ans;
row=n-row;
column=n-column;
}
void toggle_row(int x)
{
ans++;
row++;
r[x]=1;
for(int i=0;i<n;i++)
{
a[x][i]=1-a[x][i];
}
}
void toggle_column(int x)
{
ans++;
column++;
c[x]=1;
for(int i=0;i<n;i++)
{
a[i][x]=1-a[i][x];
}
}
bool ck(int x)
{
map<int,int> k,l;
int bit=0;
for(int i=0;i<n;i++)
{
if(a[x][i]!=b[x][i])
{
bit=1;
k[i]=1;
}
}
if(bit==0)
return true;
bit=0;
for(int i=0;i<n;i++)
{
if(k[i]!=1)
{
bit=1;
break;
/*if(c[i]==1)
return false;
else
{toggle_column(i);}*/
}
}
if(bit==0)
{
toggle_row(x);
return true;
}
else
{
bit=0;
for(int i=0;i<n;i++)
{
if(k[i]!=1)
continue;
if(c[i]==1)
{bit=1;}
// else
l[i]=1;//toggle_column(i);
}
if(bit==1)
{
toggle_row(x);
for(int i=0;i<n;i++)
{
if(l[i]!=1)
{
if(c[i]==1)
return false;
toggle_column(i);
}
}
}
else
{
for(int i=0;i<n;i++)
{
if(l[i]==1)
{
if(c[i]==1)
return false;
toggle_column(i);
}
}
}
// toggle_row(x);
return true;
}
}
int main()
{
scanf("%d",&t);
for(int i=0;i<t;i++)
{
row=0;
column=0;
ans=0;
scanf("%d",&n);
int bt=0;
for(int i=0;i<n;i++)
{
for(int j=0;j<n;j++)
{
scanf("%d",&a[i][j]);
}
}
for(int i=0;i<n;i++)
{
for(int j=0;j<n;j++)
{
scanf("%d",&b[i][j]);
if(b[i][j]!=a[i][j])
bt=1;
}
}
if(bt==0)
{
         printf("0\n");
         continue;
}
if(n==1)
{
        printf("1\n");
        printf("0\n");
        printf("0\n");
         continue;
}
for(int i=0;i<n;i++)
{
// k[i]=0;
r[i]=0;
c[i]=0;
}
bool v;
int bit=1;
for(int i=0;i<n;i++)
{
v=ck(i);
if(v==false)
{bit=0;break;}
}
if(bit==0)
printf("-1\n");
else
{
if(ans>(2*n-ans))
normalize();
printf("%d\n",row);
for(int i=0;i<n;i++)
{
if(r[i]==1)
printf("%d\n",i);
}
printf("%d\n",column);
for(int i=0;i<n;i++)
{
if(c[i]==1)
printf("%d\n",i);
}
}
}
return 0;
}
