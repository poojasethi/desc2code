#include<stdio.h>

//if soln is found , return number of steps
//else return -1
int findSoln(int x[], int y[], int **a, int n, int& xb, int& yb)
{

	int x1[1000], y1[1000], x2[1000], y2[1000];
	bool found1 = true, found2 = true;
	int xb1 = 0, yb1 = 0;
	//let x0 = 0
	x1[0] = 0;
	for(int i = 0;i<n;i++){
		y1[i] = a[0][i];
		if(y1[i]) yb1++;
	}
	for(int i = 1;i<n;i++)
	{
		x1[i] = (a[i][0]^y1[0]);
		if(x1[i]) xb1++;
		int j;
		for(j = 1;j<n;j++)
		{
			if(x1[i]!=(a[i][j]^y1[j]))
				break;
		}
		if(j<n){ found1 = false; break;}
	}
	int w1 = xb1+yb1;
	
	int xb2 = 1, yb2 = 0;
	//let x0 = 1
	x2[0] = 1;
	for(int i = 0;i<n;i++){
		y2[i] = (a[0][i]^1);
		if(y2[i]) yb2++;
	}
	for(int i = 1;i<n;i++)
	{
		x2[i] = (a[i][0]^y2[0]);
		if(x2[i]) xb2++;
		int j;
		for(j = 1;j<n;j++)
		{
			if(x2[i]!=(a[i][j]^y2[j]))
				break;
		}
		if(j<n) {found2 = false; break;}
	}
	int w2 = xb2+yb2;
	if(found1 && found2)
	{
		if(w1 < w2)
			found2 = false;
		else if(w1 == w2)
		{
			if(!y1[0])
				found1 = false;
			else
				found2 = false;
		}
		else
		{
			found1 = false;
		}
	}
	if((!found1) && (!found2)) return -1;
	if(found1)
	{
		for(int i = 0;i<n;i++)
		{
			x[i] = x1[i];
			y[i] = y1[i];
		}
		xb = xb1;yb = yb1;
		return w1;
	}
	if(found2)
	{
		for(int i = 0;i<n;i++)
		{
			x[i] = x2[i];
			y[i] = y2[i];
		}
		xb = xb2;yb = yb2;
		return w2;
	}


			
}

int main()
{
	int t;
	scanf("%d", &t);
	
	int **a = new int*[1000];
	for(int i = 0;i<1000;i++){
		a[i] = new int[1000];
	}
	int x[1000], y[1000];
	
	while(t--)
	{
		bool all0 = true;
		int n;
		scanf("%d", &n);
		for(int i = 0;i<n;i++)
			for(int j = 0;j<n;j++)
				scanf("%d", &a[i][j]);
		for(int i = 0;i<n;i++)
			for(int j = 0;j<n;j++)
			{
				int val;
				scanf("%d", &val);
				a[i][j]^=val;
				if(a[i][j]) all0 = false;
			}
		if(all0)
		{
			printf("0\n"); continue;
		}
		int xb,yb;
		int res = findSoln(x,y,a,n, xb,yb);
		if(res == -1)
			printf("-1\n");
		else
		{
			printf("%d\n", xb);
			for(int i = 0;i<n;i++)
				if(x[i]) printf("%d\n", i);
			printf("%d\n", yb);
			for(int i = 0;i<n;i++)
				if(y[i]) printf("%d\n", i);
		}
	}
	for(int i= 0;i<1000;i++)
		delete []a[i];
	delete []a;
}
