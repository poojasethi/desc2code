#include<cstdio>
#define MAX  1024
int n;
int prac[MAX][MAX];
int trythisway(int flag,  int *r, int *c,int *r_count,int *c_count)
{
   //for(int i=0;i<n;++i)   for(int j=0;j<n;++j)      prac[i][j]=board[i][j];
   int rcnt=0,ccnt=0;

   if(flag)
      r[rcnt++]=0;
   for(int i=0;i<n;++i){//decide columns
      prac[0][i]^=flag;
      if(prac[0][i]){
         c[ccnt++]=i;
         for(int j=0;j<n;++j)
            prac[j][i]^=1;
      }//row 0 contains wrong values
   }
   for(int i=1;i<n;++i){//row no.
      int j;
      int *p=prac[i];
      for(j=1;j<n;++j)
         if(p[j]!=p[j-1]) break;
      if(j<n) return -1;//failure
      if(prac[i][0])  r[rcnt++]=i;
   }
   *r_count=rcnt;
   *c_count=ccnt;
   return (int)(rcnt+ccnt);
}
void printsol( int *r,int rcnt, int *c,int ccnt)
{
   printf("%d\n",rcnt);
   if(rcnt+ccnt==0) return;
   for(int i=0;i<rcnt;++i)
      printf("%d\n",r[i]);
   printf("%d\n",ccnt);
   for(int i=0;i<ccnt;++i)
      printf("%d\n",c[i]);
}
void printcomp( int *r,int rcnt, int *c,int ccnt)
{
   printf("%d\n",n-rcnt);
   if(n-rcnt+n-ccnt==0) return;
   int next=((rcnt?r[0]:-1));
   for(int j=0,i=1;j<n;++j)
      if(j==next){
         if(i<rcnt)
            next=r[i++];
      }
      else printf("%d\n",j);

   printf("%d\n",n-ccnt);
   next=((ccnt?c[0]:-1));
   for(int j=0,i=1;j<n;++j)
      if(j==next){
         if(i<ccnt)
            next=c[i++];
      }
      else printf("%d\n",j);
}
int rows1[MAX];
int cols1[MAX];
int main()
{
   int cases;
   int i,j;
   for(scanf("%d",&cases);cases;cases--){
      scanf("%d",&n);
      for(i=0;i<n;++i)
         for(j=0;j<n;++j)
            scanf("%d",&prac[i][j]);
      for(i=0;i<n;++i)
         for(j=0;j<n;++j){
            int x;
            scanf("%d",&x);
            prac[i][j]^=x;
         }
      int rcnt1,ccnt1;
      int cnt1=trythisway(0,rows1,cols1,&rcnt1,&ccnt1);
      if(cnt1==-1)
         printf("-1\n");
      else if(2*cnt1<2*n)
         printsol(rows1,rcnt1,cols1,ccnt1);
      else if(cnt1*2>2*n)
         printcomp(rows1,rcnt1,cols1,ccnt1);
      else if(ccnt1&&(cols1[0]==0))
         printsol(rows1,rcnt1,cols1,ccnt1);
      else
         printcomp(rows1,rcnt1,cols1,ccnt1);
   }
}
