#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
 
using namespace std;
 
#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
#define FOR(i,a,b)				for(int i=a;i<b;i++)
#define REP(i,n)				FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp						make_pair
#define FF						first
#define SS						second
#define tri(a,b,c)				mp(a,mp(b,c))
#define XX						first
#define YY						second.first
#define ZZ						second.second
#define pb						push_back
#define fill(a,v) 				memset(a,v,sizeof a)
#define all(x)					x.begin(),x.end()
#define SZ(v)					((int)(v.size()))
#define DREP(a)					sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)			(lower_bound(all(arr),ind)-arr.begin())
#define debug(args...)			{dbg,args; cerr<<endl;}
#define dline					cerr<<endl	
 

 
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
 
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<TRI> VT;
 
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VII> VVII;
typedef vector<VLL> VVLL;
typedef vector<VT> VVT;
 
 
/*Main code begins now */
 
int testnum;
VL nums;
 
int cnt,N,A[1001][1001];
int diva[1001],divb[1001];
int a[1001][1001],b[1001][1001];
int ac=0;
int bc=0; 

 
void preprocess()
{
	
}
int noof1(int x)
{
int i,cnt=0;
for(i=0;i<N;++i)
  {
  if(A[x][i]==1)
  cnt++;               
  }   
  return cnt; 
}

int checkrowsame(int x,int y)
{
    int i;
    for(i=0;i<N;++i)
    {
        if(A[x][i]!=A[y][i])
        return -1;
    }  
    return 1;  
}
int check2div()
{
    int i;
    ac=bc=0;
    diva[ac++]=0;
    for(i=1;i<N;++i)
    {
        if(checkrowsame(0,i)==1)
        diva[ac++]=i;
        else if(bc==0)
        divb[bc++]=i;
        else
        {
        if(checkrowsame(divb[0],i)==1)
        divb[bc++]=i;
        else
        return -1;    
        }            
    }
    return 1;
} 
void solve()
{
    int x,y,i;
	if(check2div()==-1)
	{
    printf("-1\n");
    return;                   
    }
    x=noof1(0);
	y=(bc>0)?noof1(divb[0]):x;
//	y=noof1(divb[0]);
//	printf("%d %d %d %d\n",x,ac,y,bc);
	if(bc==0)
    {
    printf("0\n");
    if(x==0)
      {
      printf("%d\n",N);
      for(i=0;i<N;++i)
      printf("%d\n",i);      
      }   
    else if(x==N)
      {
                 
      }
    else
      {
      printf("%d\n",x);
      for(i=0;i<N;++i)
      if(A[0][i]==1)
      printf("%d\n",i);    
      }  
    }
	else if((x+ac)<(y+bc))
	{
    printf("%d\n",ac);
    for(i=0;i<ac;++i)
    printf("%d\n",diva[i]);
    printf("%d\n",x);
    for(i=0;i<N;++i)
    if(A[0][i]==1)
    printf("%d\n",i);
    }
    else
    {
    printf("%d\n",bc);
    for(i=0;i<bc;++i)
    printf("%d\n",divb[i]);
    printf("%d\n",y);
    for(i=0;i<N;++i)
    if(A[divb[0]][i]==1)
    printf("%d\n",i);   
    }
}
 
 
 
bool input()
{
     s(N);
     
     int i,j;
     for(i=0;i<N;++i)
     for(j=0;j<N;++j)
     s(a[i][j]);
     
     for(i=0;i<N;++i)
     for(j=0;j<N;++j)
     s(b[i][j]);
     
     for(i=0;i<N;++i)
     for(j=0;j<N;++j)
     if(a[i][j]==b[i][j])
     A[i][j]=1;
     else
     A[i][j]=0;
     
	return true;
}
 
 
int main()
{
	preprocess();
	int T=1;
	s(T);
	for(testnum=1;testnum<=T;testnum++)
	{
		if(!input()) break;
		solve();
	}
return 0;
}
 
