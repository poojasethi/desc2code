#include <iostream> 
#include <sstream> 
#include <cstdio> 
#include <cstdlib> 
#include <cmath> 
#include <memory> 
#include <cctype> 
#include <string> 
#include <vector> 
#include <list> 
#include <queue> 
#include <deque> 
#include <stack> 
#include <map> 
#include <set> 
#include <algorithm> 
using namespace std;
 
#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define INF 1000000000
#define PB push_back
#define ALL(c) (c).begin(), (c).end()
#define pi 2*acos(0.0)
#define SQR(a) (a)*(a)
#define MP make_pair
#define MAX 2147483647
 
typedef long long Int;
 
int n, t;
int A[1000][1000], B[1000][1000];
int C[1000][1000], P[1000];
vector <int> Q;
vector <int> W;
vector <int> AA;
vector <int> BB;
 
int F()
{
		AA.clear();
		BB.clear();
		int res = 0;
		FOR (i,0,n)
				if (C[0][i] == 0)
				{
						BB.PB(i);
						res++;
				}
		FOR (i,1,n)
		{
				bool ok = true;
				int c = 0;
				FOR (j,0,n)
				{
						int t = C[i][j];
						int p = C[0][j];
						p = (p+1) % 2;
						t += p;
						t %= 2;
						P[c] = t;
						c++;
				}
				FOR (j,1,c)
						if (P[j] != P[j-1])
								ok = false;
				if (!ok)
						return INF;
				if (P[0] == 0)
				{
						AA.PB(i);
						res++;
				}
		}
		return res;
}
 
int main()
{
		cin >> t;
		FOR (tt,0,t)
		{
				cin >> n;
				FOR (i,0,n)
						FOR (j,0,n)
								scanf("%d", &A[i][j]);
				FOR (i,0,n)
						FOR (j,0,n)
								scanf("%d", &B[i][j]);
				FOR (i,0,n)
						FOR (j,0,n)
								C[i][j] = (A[i][j] == B[i][j]);
				int res = F();
				Q = AA;
				W = BB;
				FOR (i,0,n)
				{
						C[0][i] += 1;
						C[0][i] %= 2;
				}
				int w = 1+F();
				if (w < res)
				{
						res = w;
						Q = AA;
						W = BB;
						Q.PB(0);
						sort(ALL(Q));
				}
				if (res >= INF)
				{
						cout << -1 << endl;
						continue;
				}
				if (res == 0)
				{
						cout << 0 << endl;
				}else
				{
				cout << Q.size() << endl;
				FOR (i,0,Q.size())
						cout << Q[i] << endl;
				cout << W.size() << endl;
				FOR (i,0,W.size())
						cout << W[i] << endl;
				cout << endl;
				}
		}
		return 0;
} 