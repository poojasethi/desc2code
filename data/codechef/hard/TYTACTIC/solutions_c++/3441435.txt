// ROH.cpp : Defines the entry point for the console application.
//



#include<iostream>
#include<vector>
#include<stdio.h>
#include<cstdio>
#include<stdlib.h>
#include<algorithm>
#include<queue>
#include<bitset>
#include<fstream>
#include<stack>
#include<set>
#include<utility>
#include<string>
#include<cstring>
#include<math.h>
using namespace std;

#define scan scanf
#define sscan sscanf_s
#define get gets_s
#define print printf 
#define mod 1000000007
#define ll  long long
#define init int i,j,k,l,m,n,test
#define pause system("pause")
#define inf 1000000009
class BIT
{
	int a[100009];
	// 10^5
	int size;
public:

	BIT(int n)
	{
		int i;
		for(i=0;i<=n;i++)
		{
			a[i]=0;

		}
		size=n+1;

	}

	void assign(int index,int val)
	{
		while(index<size)
		{
			a[index]+=val;
			index+=(index&-index);

		}
		return;

		


	}
	int read(int index)
	{
		int temp=0;
		while(index>0)
		{
			temp+=a[index];
			index-=(index&-index);


		}
		return temp;

	}

	


};
vector<int> v[100009];
int x[100009];
bool g[100009]={0};
int post[100009];
int t=0;

int lower[100009],upper[100009];
void DFS(int n)
{
	int i,j,k;
	g[n]=1;
	lower[n]=t-1;
	for(i=0;i<v[n].size();i++)
	{
		if(!g[v[n][i]])
		{
			DFS(v[n][i]);

		}

	}
	post[t++]=n;
	upper[n]=t-1;
	
}
int main()
{
	init;
	scan("%d %d",&n,&m);
	BIT b(n);
	
	for(i=0;i<n;i++)
	{
		scan("%d",&x[i]);

	}
	t=0;
	for(i=0;i<n-1;i++)
	{
		scan("%d %d",&j,&k);
		v[j-1].push_back(k-1);
		v[k-1].push_back(j-1);

	}
	//start with 0
	DFS(0);
	/*for(i=0;i<n;i++)
		cout<<h[i]<<" ";
	cout<<endl;*/

	/*for(i=0;i<n;i++)
		cout<<lower[i]<<" "<<upper[i]<<endl;*/
	for(i=0;i<n;i++)
	{
		b.assign(upper[i]+1,x[i]);

	}
	
	for(i=0;i<m;i++)
	{
		char y[2];
		cin>>y;
		
		if(y[0]=='Q')
		{
			scan("%d",&j);
			j--;
			//see the upper of j - lower of j
			k=b.read(upper[j]+1)-b.read(lower[j]+1);
			printf("%d\n",k);
		}
		else
		{
			scan("%d %d",&j,&k);
			int diff=k-x[j-1];
			j--;
			x[j]=k;
			b.assign(upper[j]+1,diff);


		}

	}
	


	
	
	
	
}
