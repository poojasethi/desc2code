#include<bits/stdc++.h>
#define lli long long int
#define vi vector<int>


using namespace std;


vi vis;
int cont=1;
vector<vi> adj;

int n,q,a,b;
int values[100005],ini[100005],fin[100005];


void dfs(int u){
	ini[u]=cont++;
	
	for(int i=0;i<adj[u].size();i++){
		int v=adj[u][i];
		if(ini[v]==0) dfs(v);
	}

	fin[u]=cont-1;
}


struct BIT{
	int tam;
    vector<lli> ft;

    BIT(int n) : ft(n + 1),tam(n+1){}
    
    void adjust(int i, lli v) {
        while(i<tam){
            ft[i]+=v;
            i+=i&-i;
        }
    }
    lli rsq(int i){
        lli sum=0;
        while (i) {
            sum+=ft[i];
            i-=i&-i;
        }
        return sum;
    }

    lli rsq(int i,int j){
    	return rsq(j)-rsq(i-1);
    }
};


int main(){
	
	scanf("%d %d",&n,&q);


	adj.assign(n+1,vi());

	for(int i=1;i<=n;i++){
		scanf("%d",&values[i]);
	}

	for(int i=0;i<n-1;i++){
		scanf("%d %d",&a,&b);
		adj[a].push_back(b);
		adj[b].push_back(a);
	}

	dfs(1);

	BIT arbol(n);

	for(int i=1;i<=n;i++){
		arbol.adjust(ini[i],values[i]);
	}

	string op;
	for(int i=0;i<q;i++){
		cin>>op;
		if(op[0]=='U'){
			scanf("%d %d",&a,&b);
			lli x=arbol.rsq(ini[a],ini[a]);
			arbol.adjust(ini[a],-x);
			arbol.adjust(ini[a],b);
		}else{
			scanf("%d",&a);
			printf("%lld\n",arbol.rsq(ini[a],fin[a]));
		}
	}

	return 0;
}


/*


4 5
1 2 3 4
1 3
3 2 
4 3


*/