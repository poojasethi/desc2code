#include <bits/stdc++.h>
#define maxn 100000+3
using namespace std;

int n;
int arr[maxn];
int M;
int qType;
int l, r, p;
int  d;

long long fwk[3][maxn];
void update(int digit, int idx, int val) {
	while(idx<=n) {
		fwk[digit][idx] += val;
		idx += (idx&(-idx));
	}
}

long long getValue(int x, int idx) {
	long long sum = 0;
	while(idx) {
		sum += fwk[x][idx];
		idx = idx - (idx & (-idx));
	}
	return sum;
}

void solve() {
/*	if( n <= 100) {
		for(int i=l; i<=r; i++) {
			if(arr[i] % p == 0) {
				arr[i]/=p;
			}
		} 
	}  else {
		
*/	
	
	if( p == 2) {
		update(0, l, 1);
		update(0, r+1, -1);
	} else if( p == 3 ) {
		update(1, l, 1);
		update(1, r+1, -1);
	} else {
		update(2, l, 1); 
		update(2, r+1, -1);
	}
//	}
}
int main() {
	// your code goes here
	scanf("%d",&n);
	for(int i=1; i<=n; i++) {
		scanf("%d",&arr[i]);
	}
	scanf("%d",&M);
	
	while(M--) {
		cin>>qType;
		if(qType == 1) {
			scanf("%d %d %d ",&l, &r, &p);
			solve();
		} else {
			scanf("%d %d",&l, &d);
			arr[l] = d;
		
			for(int i=0; i< 3; i++) {
				int x = getValue(i, l);
				update(i, l, -x);
				update(i, l+1, x);
			}
		}
	}
	
	for(int i=1; i<= n; i++) {
		
		int x = getValue(0, i);
		while(x && arr[i]%2 == 0) {
			x--;
			arr[i] /= 2;
		}
		
		x = getValue(1, i);
		while(x && arr[i]%3 == 0) {
			x--;
			arr[i] /= 3;
		}
		
		x = getValue(2, i);
		while(x && arr[i] % 5 == 0) {
			x--;
			arr[i] /= 5;
		}
		printf("%d ",arr[i] );
	}
	return 0;
}