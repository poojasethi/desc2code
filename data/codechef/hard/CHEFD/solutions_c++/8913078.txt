#include <bits/stdc++.h>

using namespace std;
#define MOD 1000000007
#define ll long long
#define INF 0x3f3f3f3f
int lazy[500005][6],a[100005];
int get_mid(int u,int v)
{
    return u+(v-u)/2;
}
void update1(int ss,int se,int qs,int qe,int ci,int v,int p)
{
    if(ss!=se)
    {
        lazy[2*ci+1][p]+=lazy[ci][p];
        lazy[2*ci+2][p]+=lazy[ci][p];
        lazy[ci][p]=0;
    }
    if(ss>qe||se<qs)
        return;
    if(ss>=qs&&se<=qe)
    {
        lazy[ci][p]+=v;
        return;
    }
    int mid=get_mid(ss,se);
    update1(ss,mid,qs,qe,2*ci+1,v,p);
    update1(mid+1,se,qs,qe,2*ci+2,v,p);
}
void update2(int ss,int se,int pos,int ci)
{
    if(ss!=se)
    {
        lazy[2*ci+1][2]+=lazy[ci][2];
        lazy[2*ci+1][3]+=lazy[ci][3];
        lazy[2*ci+1][5]+=lazy[ci][5];

        lazy[2*ci+2][2]+=lazy[ci][2];
        lazy[2*ci+2][3]+=lazy[ci][3];
        lazy[2*ci+2][5]+=lazy[ci][5];

        lazy[ci][2]=0;
        lazy[ci][3]=0;
        lazy[ci][5]=0;
    }
    if(pos>se||pos<ss)
        return;
    if(ss==se)
    {
        lazy[ci][2]=0;
        lazy[ci][3]=0;
        lazy[ci][5]=0;
        return;
    }
    int mid=get_mid(ss,se);
    update2(ss,mid,pos,2*ci+1);
    update2(mid+1,se,pos,2*ci+2);
}
int query(int ss,int se,int pos,int ci,int p)
{
    if(ss!=se)
    {
        lazy[2*ci+1][p]+=lazy[ci][p];
        lazy[2*ci+2][p]+=lazy[ci][p];
        lazy[ci][p]=0;
    }
    if(pos>se||pos<ss)
        return 0;
    if(ss==se)
        return lazy[ci][p];
    int mid=get_mid(ss,se);
    return query(ss,mid,pos,2*ci+1,p)+query(mid+1,se,pos,2*ci+2,p);
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    int q;
    scanf("%d",&q);
    while(q--)
    {
        int type,l,r,p;
        scanf("%d%d%d",&type,&l,&r);
        if(type==1)
        {
            l--;r--;
            scanf("%d",&p);
            update1(0,n-1,l,r,0,1,p);
        }
        else
        {
            l--;
            a[l]=r;
            update2(0,n-1,l,0);
        }
    }
    for(int i=0;i<n;i++)
    {
        int x=a[i];
        int c=query(0,n-1,i,0,2);
        while(x%2==0&&c--)
            x/=2;
        c=query(0,n-1,i,0,3);
        while(x%3==0&&c--)
            x/=3;
        c=query(0,n-1,i,0,5);
        while(x%5==0&&c--)
            x/=5;
        printf("%d ",x);
    }
    return 0;
}
