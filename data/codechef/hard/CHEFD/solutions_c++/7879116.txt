#include<iostream>
using namespace std;

int tree[10][100008];
void update(int i,int p,int x)
{
while(i<=100008)
{
tree[p][i]=tree[p][i]+x;
i+=i&(-i);
}
}

int query(int i,int p)
{
int sum=0;
while(i>0)
{
sum=sum+tree[p][i];
i-=i&(-i);
}
return sum;
}

int main()
{
ios_base::sync_with_stdio(false);
int n;
cin>>n;
int a[n+1];
for(int i=1;i<=n;i++)
cin>>a[i];
int m;
cin>>m;
while(m--)
{
int x,u,v,p;
cin>>x;
if(x==1)
{
cin>>u>>v>>p;
update(u,p,1);
update(v+1,p,-1);
}
else if(x==2)
{
cin>>u>>v;
a[u]=v;
int temp=query(u,2);
update(u,2,-temp);
update(u+1,2,temp);
temp=query(u,3);
update(u,3,-temp);
update(u+1,3,temp);
temp=query(u,5);
update(u,5,-temp);
update(u+1,5,temp);
}
}
for(int i=1;i<=n;i++)
{
int temp2=query(i,2);
int temp3=query(i,3);
int temp5=query(i,5);
while(temp2&&a[i]%2==0)
{
temp2--;
a[i]=a[i]/2;
}
while(temp3&&a[i]%3==0)
{
temp3--;
a[i]=a[i]/3;
}
while(temp5&&a[i]%5==0)
{
temp5--;
a[i]=a[i]/5;
}
cout<<a[i]<<" ";
}
cout<<endl;
return 0;
}
