#include<stdio.h>
 
#define MAXN 100000
 
void set(int *bit, int index, int value, int MAXVAL)
{
    while(index<=MAXVAL)
    {
        bit[index]+=value;
        index+=(index&(-index));
    }
}
 
int get(int *bit, int index)
{
    int sum=0;
 
    while(index>0)
    {
        sum+=bit[index];
        index-=(index&(-index));
    }
 
    return sum;
}
 
int main()
{
    int arr[MAXN+1],bit3[MAXN+1],bit5[MAXN+1],bit2[MAXN+1],n,m,left,right,divide,i,query,pos,change;
 
    scanf("%d",&n);
 
    for(i=1;i<=n;i++)
        scanf("%d",&arr[i]);
 
    scanf("%d",&m);
 
    for(i=0;i<=n;i++)
    {
        bit2[i]=0;
        bit3[i]=0;
        bit5[i]=0;
    }
 
    while(m--)
    {
        scanf("%d",&query);
 
        if(query==1)
        {
            scanf("%d %d %d",&left,&right,&divide);
 
            switch(divide)
            {
 
            case 2:
                set(bit2,left,1,n);
                set(bit2,right+1,-1,n);
                break;
            case 3:
                set(bit3,left,1,n);
                set(bit3,right+1,-1,n);
                break;
            case 5:
                set(bit5,left,1,n);
                set(bit5,right+1,-1,n);
                break;
            }
        }
 
        else
        {
            scanf("%d %d",&pos,&change);
 
            arr[pos]=change;
 
            change=get(bit2,pos);
 
            set(bit2,pos,-change,n);
            set(bit2,pos+1,change,n);
 
            change=get(bit3,pos);
 
            set(bit3,pos,-change,n);
            set(bit3,pos+1,change,n);
 
            change=get(bit5,pos);
 
            set(bit5,pos,-change,n);
            set(bit5,pos+1,change,n);
        }
    }
 
    for(i=1;i<=n;i++)
    {
        divide=get(bit2,i);
 
        while(divide&&arr[i]%2==0)
        {
            divide--;
            arr[i]/=2;
        }
 
 
 
        divide=get(bit3,i);
 
        while(divide&&arr[i]%3==0)
        {
            divide--;
            arr[i]/=3;
        }
 
 
        divide=get(bit5,i);
 
        while(divide&&arr[i]%5==0)
        {
            divide--;
            arr[i]/=5;
        }
 
        printf("%d ",arr[i]);
    }
 
    printf("\n");
 
    return 0;
}
 