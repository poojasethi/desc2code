


        #include<bits/stdc++.h>
        #include<cstdio>
        #include<algorithm>
        #include<iostream>
        #include<cstring>
        #include<string>
        #include<stack>
        #include<queue>
        #include<cmath>
        #include<limits>
        #include<set>
        #include<vector>
        #include<map>
        #include<list>

        using namespace std;

        #define lli long long int
        #define F(i,a,b) for(int i=a ; i<b; i++)
        #define ll long long
        #define pii pair<int,int>
        #define pip pair<int,pii>
        #define pb push_back
        #define ff first
        #define ss second
        #define fill(a,b) memset(a,b,sizeof(a));
        #define MOD 1000000007


        int main()
        {
            int n;
            const int N=100000+7;
            scanf("%d",&n);
            int arr[N];
            set<int> myset[6];

            F(i,0,n)
            {
                scanf("%d",&arr[i]);
                if(arr[i]%2==0)myset[2].insert(i);
                if(arr[i]%3==0)myset[3].insert(i);
                if(arr[i]%5==0)myset[5].insert(i);
            }



            int m;
            int type,l,r,p,d;
            scanf("%d",&m);
            F(i,0,m)
            {
                scanf("%d",&type);
                if(type==1)
                {
                    scanf("%d%d%d",&l,&r,&p);
                    set<int> :: iterator a=lower_bound(myset[p].begin(),myset[p].end(),l-1);
                    vector <int> del;
                    for(set<int>::iterator it=a;it!=myset[p].end();++it)
                    {
                        if(*it>r-1) break;

                        arr[*it]/=p;
                        if(arr[*it]%p)//not divisible by p anymore this index has to be deleted from the p set
                            del.pb(*it);
                    }
                    for(vector<int>::iterator it=del.begin();it!=del.end();it++)
                        myset[p].erase(*it);
                }
                else//update query
                {
                    //change l th value to d. so delete l th value if present in any of the sets
                    scanf("%d%d",&l,&d);
                    l--;
                    if(arr[l]%2==0)myset[2].erase(l);
                    if(arr[l]%3==0)myset[3].erase(l);
                    if(arr[l]%5==0)myset[5].erase(l);

                    //include them in the sets
                    if(d%2==0)myset[2].insert(l);
                    if(d%3==0)myset[3].insert(l);
                    if(d%5==0)myset[5].insert(l);

                    arr[l]=d;
                }
            }

            F(i,0,n)
            cout<<arr[i]<<" ";

            return 0;
        }





