#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<map>
using namespace std;
const int MAX = 1 + 2*50000;
double probs[MAX];
double ft[MAX];
double ftGet(int idx){
    double sum = 0;
    for(;idx>0;idx-=idx&-idx){
        sum+=ft[idx];
    }
    return sum;
}
void ftAdd(double val, int idx, int n){
    for(;idx<=n;idx+=idx&-idx){
        ft[idx]+=val;
    }
}
int main(){
    int T,n,d,el;
    double prob;
    scanf("%d",&T);
    for(int i=0;i<T;i++){
        pair<int,int> pairs[MAX];
        scanf("%d %d",&n,&d);
        fill(ft,ft+2*n,0);
        for(int j=0;j<n;j++){
            scanf("%d",&el);
            pairs[2*j] = make_pair(el,2*j);
            pairs[2*j+1] = make_pair(el+d,2*j+1);
        }
        for(int j=0;j<n;j++){
            scanf("%lf",&prob);
            probs[j] = prob/100;
        }

        sort(pairs,pairs+2*n);
        double ans = 0;
        for(int j=2*n-1;j>=0;j--){
            int idx = pairs[j].second;
            int to = idx-1;
            double prob;
            if(idx%2==0) prob = 1-probs[idx/2];
            else prob = probs[idx/2],to = idx-2;
            double sum = ftGet(to+1);
            ans+=prob*sum;
            ftAdd(prob,idx+1,2*n);
        }
        printf("%.4lf\n",ans);
        //printf("%lf\n",ans);
    }
    return 0;
}
