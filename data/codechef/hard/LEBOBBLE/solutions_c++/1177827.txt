#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<ctype.h>
#include<math.h>



#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))

#define FO(i,s,n,p) for(int i=(s);i<int(n);i+=p)
#define FOD(i,s,n,p) for(int i=(s);i>int(n);i-=p)

#define FOE(i,s,n,p) for(int i=(s);i<=int(n);i+=p)
#define FODE(i,s,n,p) for(int i=(s);i>=int(n);i-=p)

#define FOR(i,s,n) FO(i,s,n,1)
#define FORE(i,s,n) FOE(i,s,n,1)
#define FORD(i,s,n) FOD(i,s,n,1)
#define FORDE(i,s,n) FODE(i,s,n,1)


#define GI(i) scanf("%d",&i)
#define GU(i) scanf("%u",&i)
#define GLL(i) scanf("%lld",&i)
#define GLLU(i) scanf("%llu",&i)
#define GW(s) scanf("%s",s)
#define GS(s) gets(s)


#define WI(i) printf("%d",i)
#define WU(i) printf("%u",i)
#define WLL(i) printf("%lld",i)
#define WLLU(i) printf("%llu",i)
#define WS(s) printf("%s",s)

#define S putchar(' ')
#define NL putchar('\n')

#define ML(type,size) (type *)malloc(sizeof(type)*size)
#define CL(type,size) (type *)calloc(sizeof(type)*size)
#define MEM(tab,val) memset(tab,val,sizeof(tab))

typedef long long ll ;
typedef unsigned long long llu;

#define cmptype int


#include<vector>
#include<utility>
#include<algorithm>
#include<list>
#include<queue>
#include<stack>
#include<set>
#include<string>
#include<iostream>
#include<map>

#define inf ((1<<30)-1)

#define pb push_back
#define mp make_pair

using namespace std;

#include<assert.h>

#define debug(a) cout<<#a<<" = "<<a<<endl;
#define SZ 51000
pair<ll,ll> in[SZ*3];
ll fn[SZ]; 
ll prob[SZ];

void ADD(ll val,int idx)
{
 idx++;    
 for(;idx<SZ;idx+=(idx&-idx)) 
 fn[idx]+=val;
}

ll GET(int idx)
{
 ll res=0;
 idx++;   
 for(;idx>0;idx-=(idx&-idx)) res+=fn[idx];
 
 return res;
}
void solve()
{
 MEM(fn,0);     
     
 int n,d;
 GI(n);GI(d);
 

 
 FOR(i,0,n){int tmp;GI(tmp);in[i*2]=mp(tmp,i*2);in[i*2+1]=mp(tmp+d,i*2+1); }
 FOR(i,0,n) GI(prob[i]);
 
 sort(in,in+2*n);
 reverse(in,in+2*n);
 
 ll res=0;
 
 FOR(i,0,2*n)
 {
  int ind=in[i].second,p;
  
  if(ind%2==1)
   p=prob[ind/2];
  else 
   p=100-prob[ind/2]; 
  
  
  res+=GET(ind/2-1)*p;

  
  ADD(p,ind/2);
  
 }
 
 printf("%.4f",double(res)/10000);
}



int main()
{
#define contest
//#undef contest


#ifndef contest
 freopen("C:\\a","r",stdin);
 freopen("C:\\w","w",stdout);
#else

#endif

int t;
GI(t);
while(t--)
{
 solve();
 NL;
}






  return 0;
}
