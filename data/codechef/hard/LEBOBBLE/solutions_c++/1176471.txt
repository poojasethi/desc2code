#include <cstdio>
#include <cstring>

using namespace std;

#define	MAXN	100010

int a[MAXN], b[MAXN], p[MAXN];
long long ans = 0;

void go(int lo, int hi)
{
	if (hi - lo < 2) return;
	int mi = (lo + hi) / 2;
	go(lo, mi);
	go(mi, hi);
	static int tmp[MAXN];
	int *pl = tmp, *pr = &a[mi];
	int nl = mi - lo, nr = hi - mi;
	memcpy(pl, &a[lo], sizeof(a[0]) * nl);
	static long long sum[MAXN];
	sum[nl] = 0;
	for (int i = nl - 1; i >= 0; i--) sum[i] = sum[i + 1] + p[pl[i]];
	int l = 0, r = 0, pos = lo;
	while (l < nl && r < nr) {
		if (b[pl[l]] > b[pr[r]]) {
			ans += p[pr[r]] * sum[l];
			a[pos++] = pr[r++];
		} else {
			a[pos++] = pl[l++];
		}
	}
	while (l < nl) a[pos++] = pl[l++];
}

int main(int argc, char *argv[])
{
	int T;
	scanf("%d\n", &T);
	while (T--) {
		int n, d;
		scanf("%d %d", &n, &d);
		for (int i = 0; i < n; i++) {
			scanf("%d", &b[i * 2]);
			b[i * 2 + 1] = b[i * 2] + d;
		}
		for (int i = 0; i < n; i++) {
			scanf("%d", &p[i * 2 + 1]);
			p[i * 2 ] = 100 - p[i * 2 + 1];
		}
		ans = 0;
		for (int i = 0; i < 2 * n; i++) a[i] = i;
		go(0, 2 * n);
		printf("%lld.%04lld\n", ans / 10000, ans % 10000);
	}
	return 0;
}
