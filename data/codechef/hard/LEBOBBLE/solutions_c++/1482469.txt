#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <bitset>
#include <vector>
#include <stack>
#include <list>
#include <utility>
#include <queue>
#include <set>
#include <map>
using namespace std;

typedef long long ll;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VP;
typedef vector<string> VS;

#define FOR(i,a,b) for(i=(a);i<(b);i++)
#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ALL(x) x.begin(),x.end()
#define CLR(x, v) memset((x),v,sizeof (x))
#define gcd(a, b) __gcd(a, b)
#define PB push_back 
#define MP make_pair
#define INF 2000000007

int toInt(string s){ istringstream sin(s); int t; sin>>t; return t; }
template<class T> string toString(T x){ ostringstream sout; sout<<x; return sout.str(); }
template<class T> void chmin(T &t, T f) { if (t > f) t = f; }
template<class T> void chmax(T &t, T f) { if (t < f) t = f; }

int B[50010], P[50010];
int tmp[100010];
map<int,int> mp;
struct BIT
{
	int N;
	double c[100010];
	BIT(int _n) : N(_n)
	{
		CLR(c,0);
	}
	double sum(int n)
	{
		double ret = 0;
		while(n) {
			ret += c[n];
			n -= (n & (-n));
		}
		return ret;
	}
	void update(int n, double d)
	{
		while(n <= N) {
			c[n] += d;
			n += (n & (-n));
		}
	}
};
int main()
{
	int T;
	scanf("%d", &T);
	while(T--) {
		int n, d;
		scanf("%d %d", &n,&d);
		int i, j;
		FOR(i,0,n) scanf("%d", B+i);
		FOR(i,0,n) scanf("%d", P+i);
		FOR(i,0,n) {
			tmp[i] = B[i];
			tmp[i+n] = B[i]+d;
		}
		sort(tmp,tmp+2*n);
		int cnt = 0;
		FOR(i,0,n*2) if(i==0||tmp[i]!=tmp[i-1])
			mp[tmp[i]] = ++cnt;
		double ans = 0;
		BIT b(2*n);
		for(i=n-1;i>=0;i--) {
			int p = mp[B[i]+d];
			ans += b.sum(p-1)*P[i]/100.0;
			int q = mp[B[i]];
			ans += b.sum(q-1)*(100-P[i])/100.0;
			b.update(p, P[i]/100.0);
			b.update(q, (100-P[i])/100.0);
		}
		printf("%.04lf\n", ans);
	}
	return 0;
}
