#include<iostream>
#include<map>
#include<algorithm>
#include<cstring>
using namespace std;
int bit[100005],pr[50004],b[50004],temp[100006],a[100006];
void add(int idx,int p,int n)
{
	while(idx<=n)
	{
		bit[idx]+=p;
		idx=idx+(idx&(-idx));
	}
}
int count(int idx)
{
	int sum=0;
	
	while(idx!=0)
	{
		sum+=bit[idx];
		idx=idx-(idx&(-idx));
	}
	return sum;
}
int main()
{
	int T,n,d,i,p,k,x;
	long long ans;
	int idx1,idx2;
	scanf("%d",&T);
	
	while(T--)
	{
		map<int,int> m;
		scanf("%d%d",&n,&d);
		k=0;
		
		for(i=1;i<=n;i++)
		{
			scanf("%d",&b[i]);
			temp[k++]=b[i];
			temp[k++]=b[i]+d;
		}
		
		sort(temp,temp+k,greater<int>());
		
		a[1]=temp[0];
		p=2;
		
		for(i=1;i<k;i++)
		{
			if(temp[i]!=temp[i-1])
			{
				a[p++]=temp[i];
			}
		}
		
		
		
		for(i=1;i<p;i++)
		{
			m[a[i]]=i;
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&pr[i]);
		}
		
		for(i=0;i<=p-1;i++)
		{
			bit[i]=0;
		}
		
		add(m[b[1]],100-pr[1],p-1);
		add(m[b[1]+d],pr[1],p-1);
		ans=0;
		
		for(i=2;i<=n;i++)
		{
			idx1=m[b[i]];
			idx2=m[b[i]+d];
			x=count(idx1-1);
			ans+=(1LL*x*(100-pr[i]));
			x=count(idx2-1);
			ans+=(1LL*x*(pr[i]));
			add(idx1,100-pr[i],p-1);
			add(idx2,pr[i],p-1);
		}
		double ANS=ans/10000.00;
		printf("%0.4lf\n",ANS);
	}
	return 0;
}