#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
using namespace std;
const int N = 100001;
#define ll long long
int t[N],c[N],q,a[N],s[N*3],s1[N*3],p[N],d,k;
void add(int x,int v,int p,int l,int r)
{
 if(l==r){s[p]+=v;return;}
 int m=(l+r)>>1;
 if(x<=m)add(x,v,2*p,l,m);
 else add(x,v,2*p+1,m+1,r);
 s[p]=s[2*p]+s[2*p+1];
}
void inc(int x,int p,int l,int r)
{
 if(l==r)
 {s1[p]+=1;return;}
 int m=(l+r)>>1;
 if(x<=m)inc(x,p*2,l,m);
 else inc(x,2*p+1,m+1,r);
 s1[p]=s1[2*p]+s1[2*p+1];
}
int sum(int x,int y,int p,int l,int r)
{
 if(x>y)return 0;
 if(x==l&&y==r)return s[p];
 int m=(l+r)>>1;
 if(y<=m)return sum(x,y,2*p,l,m);
 else if(x>m)return sum(x,y,2*p+1,m+1,r);
 return sum(x,m,2*p,l,m)+sum(m+1,y,2*p+1,m+1,r);
}
int number(int x,int y,int p,int l,int r)
{
 if(x>y)return 0;
 if(x==l&&y==r)return s1[p];
 int m=(l+r)>>1;
 if(y<=m)return number(x,y,2*p,l,m);
 else if(x>m)return number(x,y,2*p+1,m+1,r);
 return number(x,m,2*p,l,m)+number(m+1,y,2*p+1,m+1,r);
}
double count(int x)
{
 int mi=lower_bound(t,t+k,x-d)-t;
 int mx=lower_bound(t,t+k,x)-t-1;
 int ans=0;
 ans=number(0,mi-1,1,0,k-1)*100;
 ans+=sum(mi,mx,1,0,k-1);
 return ans;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,n,m;
	scanf("%d",&T);
	while(T--)
	{
	 scanf("%d%d",&n,&d);
	 q=0;
	 memset(s,0,sizeof(s));
	 memset(s1,0,sizeof(s1));
	 for(i=0;i<n;i++)
	 {
	  scanf("%d",&a[i]);
	  c[q++]=a[i];c[q++]=a[i]+d;
	 }
	 sort(c,c+q);k=0;t[k++]=c[0];
	 for(i=1;i<q;i++)
	 if(c[i]!=c[i-1])t[k++]=c[i];
	 for(i=0;i<n;i++)scanf("%d",&p[i]);
	 double ans=0.0;
	 for(i=n-1;i>=0;i--)
	 {
	  ans+=count(a[i])*(100-p[i]);
	  ans+=count(a[i]+d)*p[i];
	  int x=lower_bound(t,t+k,a[i])-t;
	  add(x,100-p[i],1,0,k-1);
	  inc(x,1,0,k-1);
	 }
	 printf("%.04f\n",ans/10000.0);
	}
	return 0;
}
