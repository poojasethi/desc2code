#include<iostream>
#include<limits.h>
#include<stdio.h>
#define ll long long int
using namespace std;
ll merge(int b,int mid,int e,int val[][2])
{
    int n1=mid-b+1;
    int n2=e-mid;
    int lft[n1+1][2];
    int ryt[n2+1][2];
    for(int i=0;i<n1;i++)
    {
        lft[i][0]=val[b+i][0];
        lft[i][1]=val[b+i][1];
    }
    lft[n1][0]=INT_MAX;
    for(int i=0;i<n2;i++)
    {
        ryt[i][0]=val[mid+1+i][0];
        ryt[i][1]=val[mid+1+i][1];
    }
    ryt[n2][0]=INT_MAX;

    int i=0,j=0,leftOut=0;
    ll ans=0;

    for(int i=0;i<n1;i++)
        leftOut+=lft[i][1];

    for(int k=b;k<=e;k++)
    {
        if(i<n1 && j<n2 && lft[i][0]<=ryt[j][0])
        {
            val[k][0]=lft[i][0];
            val[k][1]=lft[i][1];
            leftOut-=lft[i][1];
            i++;
        }
        else if(i<n1 && j<n2 && lft[i][0]>ryt[j][0])
        {
            val[k][0]=ryt[j][0];
            val[k][1]=ryt[j][1];
            ans+=(leftOut)*ryt[j][1];
            j++;
        }
        else if(i<n1)
        {
            val[k][0]=lft[i][0];
            val[k][1]=lft[i][1];
            i++;
        }
        else if(j<n2)
        {
            val[k][0]=ryt[j][0];
            val[k][1]=ryt[j][1];
            j++;
        }
    }
    return ans;
}
ll merge_sort(int b,int e,int val[][2])
{
    ll tmp=0;
    if(e>b)
    {
        int mid=(b+e)/2;
        tmp=merge_sort(b,mid,val);
        tmp+=merge_sort(mid+1,e,val);
        tmp+=merge(b,mid,e,val);
    }
    return tmp;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,d;
        scanf("%d %d",&n,&d);
        int inp[n][2];
        int val[2*n][2];
        for(int i=0;i<n;i++)scanf("%d",&inp[i][0]);
        for(int i=0;i<n;i++)scanf("%d",&inp[i][1]);
        int size=2*n;
        for(int i=0,j=0;i<size;i+=2,j++)
        {
            val[i][0]=inp[j][0];
            val[i][1]=100-inp[j][1];
            val[i+1][0]=inp[j][0]+d;
            val[i+1][1]=inp[j][1];
        }
        ll ans=merge_sort(0,size-1,val);
        printf("%.4lf\n",(ll)ans/10000.0000);

    }
}
