#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll bit[100000 + 10];
int b[100000 + 10];
ll p[100000 + 10];
ll query(int x)
{
    ll s = 0;
    while(x > 0)
    {
        s = s + bit[x];
        x -= (x & -x);
    }
    return s;
}
void update(int x,int n,ll v)
{
    while(x <= n)
    {
        bit[x] += v;
        x += (x & -x);
    }
}
int main()
{
    int tc;
    scanf("%d",&tc);
    for(int t = 1 ; t<= tc ; t++)
    {
        int n,d;
        map <int,int> mp;
        scanf("%d %d",&n,&d);
        int counter = 0;
        for(int i = 1 ;i<=n ; i++)
        {
            scanf("%d",&b[i]);
            mp[b[i]] = 1;
            mp[b[i] + d] = 1;
        }
        for(int i = 1; i <= n ; i++)
        {
            scanf("%lld",&p[i]);
        }
        map<int,int> :: iterator it;
        for(it = mp.begin() ; it != mp.end() ; it++)
        {
            counter++;
            mp[it->first] = counter;
        }
        //printf("counter = %d\n",counter);
        ll ans = 0;
        for(int i = n ; i>0 ; i--)
        {
            int p1 = mp[b[i]];
            int p2 = mp[b[i] + d];
            ll x = query(p1 - 1);
            ll y = query(p2 - 1);

            ll val;
            val = 100*x + p[i]*(y - x);
            ll temp = val;
            ans = ans + val;
            update(p1,counter,100 - p[i]);
            update(p2,counter,p[i]);
        }
        //printf("%d ",ans);
        double temp = ans;
        //printf("%lf ",temp);
        temp = temp/10000;
        printf("%0.4lf\n",temp);

        for(int i = 0 ; i<= counter ; i++)
        bit[i] = 0;
    }

    return 0;
}
