#include<iostream>
#include<cstring>
#include<stdio.h>
#include<assert.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<int,int>
#define SS system("pause")
#define INF 2000000000000000000ll
#define vec vector<ll>
using namespace std;
const int N=1000006;
ll T,n,i,j,Q,l,r;
ll ans,A[N],B[N],m,C[N];


ll xar(ll a,ll b){
   ll ans=1;
   while(b){
    if(b&1ll)ans=(ans*a)%m;
    a=(a*a)%m;
    b>>=1;
   }
   return ans;
}

int main()
{   // freopen("B.in","r",stdin);
   // freopen("B.out","w",stdout);
 scanf("%lld",&T);
 while(T--){


    scanf("%lld%lld%lld",&n,&m,&Q);
    A[1]=1;
    for(i=2;i<=n;i++)A[i]=(A[i-1]*xar(i,i-1))%m;
    B[n+1]=1;
    for(i=n;i>=1;i--)B[i]=(B[i+1]*xar(i,n-i+1))%m;
    for(i=0;i<=n+1;i++)C[i]=1;
    l=n/2+1;
    if(n&1)r=l+1,C[n/2]=(l*r)%m;else r=l,C[n/2]=l;

    for(i=n/2-1;i>=0;i--){
        l--;
        r++;
        C[i]=(C[i+1]*l%m*r)%m;
    }


    while(Q--){
        scanf("%lld",&r);
        if(r<=1 || r>=n)assert(0);
        r=MIN(r,n-r);
        if(r==0){
            printf("1\n");
            continue;
        }
        ans=(A[r]*B[n-r+2])%m;
        ans=(ans*xar(C[r],r))%m;
        printf("%lld\n",ans);
    }
 }

 return 0;
}
