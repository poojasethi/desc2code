/* Template V1.0 | Author: warlock_ankur */
#include <bits/stdc++.h>
using namespace std;

typedef	long long ll;
#define PUT(ST, x) (ST |= 1 << x)		// Put x into Set ST
#define DEL(ST, x) (ST &= ~(1 << x))	// Remove x from Set ST
#define rep(i,n) for(int i = 0; i < n; i++)
#define Rep(i,a,b) for(int i = a; i < b; i++)
#define all(a) a.begin(),a.end()
#define MAXN 1000010

int n, m, q, r;
ll firstpart[MAXN << 1], lastpart[MAXN], middle[MAXN << 1];

ll exp(ll a, ll b)
{
	ll x = 1, y = b;
	while (y) {
		if (y & 1)
			x = (x*a) % m;
		y = y >> 1;
		a = (a*a) % m;
	}

	return x;
}

void precompute()
{
	firstpart[0] = 1, lastpart[0] = 1;
	int N = n >> 1;
	for (int i = 1; i <= N; i++)
		firstpart[i] = (firstpart[i - 1] * exp(i, i - 1)) % m;
	for (int i = 1; i <= N; i++)
		lastpart[i] = (lastpart[i - 1] * exp(n - i + 1, i)) % m;

	if (n & 1)
		middle[N] = (N) +1;
	else
		middle[N] = 1;

	for (int i = N - 1; i > 0; i--)
		middle[i] = (((middle[i + 1] * (i + 1)) % m)*(n - i)) % m;
}

void solve()
{
	precompute();
	while (q--) {
		scanf("%d", &r);
		r = min(r, n - r);

		ll ans = (firstpart[r] * lastpart[r]) % m;
		ans = (ans*exp(middle[r], r)) % m;
		printf("%lld\n", ans);
	}
}

int main()
{
	int t;
	scanf("%d", &t);
	while (t--) {
		scanf("%d %d %d", &n, &m, &q);
		solve();
	}

	return 0;
}
