#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define mod 1000000007

using namespace std;
typedef long long LL;
typedef vector<int> VI;
typedef vector< vector<int> > VVI;
typedef pair< int, int > PII;

LL tree[10000000],P1[1000010],P2[1000010],M,n;
LL modpow(LL a, LL p){ LL ans = 1; while(p){ if(p%2) ans = (ans*a)%M; a = (a*a)%M; p /= 2; } return ans;}

void init(int idx, int l, int r)
{
	if(l==r)
	{
		tree[idx] = (l)%M;
		return;
	}
	int mid = (l+r)/2;
	init(2*idx,l,mid);
	init(2*idx+1,mid+1,r);
	tree[idx] = (tree[2*idx]*tree[2*idx+1])%M;
}
LL query(int idx, int L, int R, int l, int r)
{
	LL c1,c2;
	if(R<l || L>r || l>r) return 1;
	if(l<=L && R<=r) return tree[idx];
	int mid = (L+R)/2;
	if(mid >= r) return query(2*idx, L, mid, l, r);
	else if(mid < l) return query(2*idx+1,mid+1,R,l,r);
	c1 = query(2*idx,L,mid,l,mid);
	c2 = query(2*idx+1,mid+1,R,mid+1,r);
	return ((c1*c2)%M);
}
void precomp()
{
	P1[1] = 1;
	for(int i=2; i<=n; i++)	P1[i] = (P1[i-1]*modpow(i,i-1))%M;
	P2[n] = n;
	for(int i=n-1; i>=1; i--) P2[i] = (P2[i+1]*modpow(i,n-i+1))%M;
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t;
	cin>>t;
	while(t--)
	{
		LL q,r,ans;
		cin>>n>>M>>q;
		init(1,1,n);
		precomp();
		while(q--)
		{
			cin>>r; if(r > n-r) r = n-r;
			ans = query(1,1,n,r+1,n-r);
			ans = modpow(ans,r);
			ans = (ans*P1[r])%M;
			ans = (ans*P2[n-r+1])%M;
			cout<<ans<<endl;
		}
	}
	return 0;
}
