#include<vector>
#include<list>
#include<map>
#include<set>
#include<deque>
#include<queue>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<string>
#include<cstring>
#include<cstdio>
#include<ctime>
#include<climits>
#include<complex>
#include<cassert>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(x) (int)((x).size())
#define all(x) x.begin(),x.end()
#define clr(x) memset((x),0,sizeof(x))
#define cdp(x) memset((x),-1,sizeof(x))
#define rep(i,n) for (i=0;i<n;i++)
#define Rep(i,a,b) for (i=a;i<=b;i++)
#define ff(i,x) for (i=start[x];i!=-1;i=a[i].next)
#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)
using namespace std;
const double eps=1e-8;
const double pi=acos(-1.0);
int dblcmp(double d){if (fabs(d)<eps)return 0;return d>eps?1:-1;}
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vpi;
ll ans[1111111];
int main()
{
	int i,j,k,cas;
	scanf("%d",&cas);
	while (cas--)
	{
		int _n,_m,q;
		scanf("%d%d%d",&_n,&_m,&q);
		ll n=_n;
		ll m=_m;
		if (n%2==0)
		{
			ll fz=n/2+1;
			ll x=fz+1,y=fz-1;
			ans[fz]=fz;
			for (i=fz+1;i<=n;i++)
			{
				ans[i]=(((ans[i-1]*x)%m)*y)%m;
				x++;
				y--;
			}
			for (i=n-1;i>=fz;i--)
			{
				ans[i]*=ans[i+1];
				ans[i]%=m;
			}
			for (i=fz-1,j=fz+1;i>=2;i--,j++)
			{
				ans[i]=ans[j];
			}
		}
		else 
		{
			ll fz=n/2+1;
			ll x=fz+1,y=fz;
			ans[fz]=1;
			for (i=fz+1;i<=n;i++)
			{
				ans[i]=(((ans[i-1]*x)%m)*y)%m;
				x++;
				y--;
			}
			for (i=n-1;i>=fz;i--)
			{
				ans[i]*=ans[i+1];
				ans[i]%=m;
			}
			for (i=fz-1,j=fz+2;i>=2;i--,j++)
			{
				ans[i]=ans[j];
			}
		}
		while (q--)
		{
			int x;
			scanf("%d",&x);
			printf("%d\n",(int)ans[n+1-x]);
		}
	}
	return 0;
}