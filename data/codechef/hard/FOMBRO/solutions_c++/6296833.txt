#include<bits/stdc++.h>

using namespace std;

#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define countbit(x) __builtin_popcount(x)
#define all(a) a.begin(),a.end()
#define pb(a) push_back(a)

//----------01234567890123456789
#define MOD 1000000007
#define lmt 10000000
#define MX (lmt + 20 )
#define inf 1000000000000000000LL
#define eps 1e-9
#define ll long long
#define ull unsigned ll

template< class T,class X, class Y > inline T _bigmod(T n,X m,Y mod){ull ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template< class T, class Y > inline T _modinv(T n,Y mod) {return _bigmod(n,mod-2,mod);}

long long n , m , q ,r , bk[1234567] , fr[1234567] , bet[1234567];
void precal(){

    fr[1] = 1 % m;
    rep(i,2,n/2){
        fr[i] = (fr[i-1]* _bigmod( i , i - 1 ,   m ) ) % m ;
    }

    bk[0] = 1;
    rep(i,1,n/2){
        bk[i] = ( bk[i-1] * _bigmod(n-i+1 , i , m ) ) % m  ;
    }

    if(n&1)  bet[n/2] = n/2 + 1;
    else     bet[n/2] = 1;

    rev(i,n/2-1,0){
        bet[i] = (((bet[i+1]*(i+1))%m)*(ll) (n-i))%m;;
    }
}

int main()
{
    int ts; scanf("%d",&ts);
    while(ts--){
        scanf("%lld%lld%lld",&n,&m,&q);
        precal();
//        cout<<bk[2]<<endl;

        rep(i,1,q){
            scanf("%lld",&r);
            r = min(r,n-r);

            ll ans = (((ll)(fr[r]*_bigmod(bet[r],r,m))%m)*bk[r])%m;
            printf("%lld\n",ans);
        }
    }
    return 0;
}
