#include <bits/stdc++.h>
using namespace std;
#define ll  long long int
//#define MOD 13
#define MAXM    1001110

ll fordp[MAXM/2],backdp[MAXM/2],betdp[MAXM/2];
ll exponentiation(ll base,ll exp,ll mod)
{
    ll ans=1;
    while(exp>0)
    {
        if(exp%2)   ans=(ans*base)%mod;
        base=(base*base)%mod;
        exp/=2;
    }
    return ans%mod;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        ll i,n,r,m,q,ans=0,mid=0;
        cin>>n>>m>>q;
        mid=n/2;
        fordp[0]=1;
        for(i=1;i<=mid;i++)
            fordp[i]=((fordp[i-1]%m)*exponentiation(i,i-1,m))%m;
        backdp[0]=1;
        for(i=1;i<=mid;i++)
            backdp[i]=((backdp[i-1]%m)*exponentiation(n-i+1,i,m))%m;

        if(n%2==1)
            betdp[mid]=mid+1;
        else
            betdp[mid]=1;

        for(i=mid-1;i>=1;i--)
            betdp[i] = ((ll)((betdp[i+1]*(i+1))%m)*(ll)(n-i))%m;
          //  betdp[i]=((((betdp[i+1]%m)*(i+1))%m)*(n-i))%m;
        while(q--)
        {
            cin>>r;
            r=min(r,n-r);
            ans = ((ll)((fordp[r] * exponentiation(betdp[r],r,m))%m) * backdp[r])%m;
           // ans=((fordp[r])*(backdp[r])*exponentiation(betdp[r],r,m))%m;
            cout<<ans<<endl;
        }
    }
    return 0;
}
