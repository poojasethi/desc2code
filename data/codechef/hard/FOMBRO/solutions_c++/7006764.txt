 #include <bits/stdc++.h>
#define maxn 1000000+3
using namespace std;
typedef long long ll;

ll n, m, q;
ll r;

ll fowdp[maxn], bkwdp[maxn], btw[maxn];
ll powmod(ll a, ll b) {
	ll res = 1;
	
	if( b == 1 ) {
		return a;
	}
	
	while(b) {
		if(b & 1) {
			res = res * a;
		}
		if(res >= m) {
			res %=m;
		}
		
		b /= 2;
		a = a*a;
		
		if(a >= m) {
			a = a % m;
		}
		
	}
	
	return res ; 
}

void solve() {
	r = min(r, n-r);
	ll ans = (fowdp[r] * powmod(btw[r], r))%m ;
	ans  = (ans * bkwdp[r] ) %m;
	
	
	cout<<ans<<"\n";
}
void precompute() {
	fowdp[0] = 1;
	bkwdp[0] = 1;
	
	for(int i=1; i<=n/2; i++) {
		fowdp[i] = (fowdp[i-1] * powmod(i, i-1))%m;
	}
	
	for(int i=1; i<=n/2; i++) {
		bkwdp[i] = ( bkwdp[i-1] * powmod(n-i+1, i)) %m;
	}
	
	if( n&1 ) {
		btw[n/2] = n/2+1;
	} else {
		btw[n/2]  = 1;
	}
	
	for(int i = n/2-1; i>=1; i--) {
		btw[i] =  (( (btw[i+1] * (i+1))%m) * (n-i) )%m;
	}
}
int main() {
	// your code goes here
	int t;
	scanf("%d",&t);
	while(t--) {
		cin>>n>>m>>q;
		precompute();
		while(q--) {
			cin>>r;
			solve();
			
		}
	}
	return 0;
}