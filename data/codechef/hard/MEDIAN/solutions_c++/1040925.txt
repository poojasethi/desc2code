#include<iostream>
#include<algorithm>
#include<queue>
#include<map>
#define inf 100
using namespace std;
 
int n;
 
int numeq(int aa[],int sz)
{
    int i,ans=0;
    for(i=0;i<n;i++)
    ans=ans*2+aa[i];
    return ans;
}
 
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
          
          map<int,int> dist,visited;
          queue<int> q;
          
          scanf("%d",&n);
          int a[35],b[35];
          int i,last,j;
          for(i=0;i<n;i++)
          {scanf("%d",&a[i]); b[i]=a[i];}
          
          sort(b,b+n);
          last=b[n-1];
          
          for(i=0;i<n;i++)
          if(a[i]==last) a[i]=1;
          else a[i]=0;    
          
          int num=numeq(a,n);
          if(num==((1<<n)-1)) {printf("%d\n",0); continue;}
          
          dist[num]=0;
          q.push(num);
          visited[num]=1;
          
          while(!q.empty())
          {
              int f=q.front(),g;
               q.pop();
               
               g=f;
              
               int ar[35]={0},cur=0;
               
               while(g)
               {
                     ar[cur++]=g&1;
                     g>>=1;
               }
               
               for(i=n-1;i>0;i--)
               {
                       int d[35]={0},c=0;
                       
                       for(j=i;j>=0;j--)
                       {
                           d[c++]=ar[j];
                           if(j==i) continue;
                           int sz=j-i+1;
                           
                           sort(d,d+c);
                           int med=d[c/2];
                           if(med!=1) continue;
                           
                           int eq=numeq(d,c);
                           if(eq==(1<<sz)-1) continue; 
                            
                           
                           int br[35],k;
                           for( k=0;k<n;k++)
                           br[k]=ar[k];
                           
                           for(k=j;k<=i;k++)
                           br[k]=1;    
                           
                           int nums=0;
                           for(k=n-1;k>=0;k--)
                           nums=nums*2+br[k];
                           
                           
                           if(nums==((1<<n)-1)) {printf("%d\n",dist[f]+1); goto p;}
                           
                           if((!visited[nums]) || dist[nums]>dist[f]+1)
                           {
                                  //cout<<nums<<" "<<f<<endl;
                                  q.push(nums);
                                  visited[nums]=1;
                                  dist[nums]=dist[f]+1;
                           }
                           
                       }
                       
               }
               
          }
          p:;
    }
}              
                                  
               
      