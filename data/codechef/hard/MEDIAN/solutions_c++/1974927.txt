#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
#include <map>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define BUFSIZE (10000)
char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;
#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})
void init_input(){
	if (input_eof) return;
	int existing = BUFSIZE - (ioend - inputbuffer);
	memcpy(inputbuffer, ioend, existing);
	int wanted = ioend - inputbuffer;
	int count=fread(inputbuffer + existing, 1, wanted, stdin);
	if (count < wanted)input_eof = 1;
	ioend = inputbuffer + BUFSIZE - (wanted - count);
	while (*--ioend > ' ');
	ioend++;
	ioptr=inputbuffer;
}
inline void non_whitespace(){
	for(;;){
		if(ioptr>=ioend)init_input();
		if(*ioptr>' ')return;
		ioptr++;
	}
}
inline int getint(){
	non_whitespace();
	int neg=0;
	if(*ioptr=='-'){
		ioptr++;
		neg=1;
	}
	int n=0;
	while(*ioptr>' ')
		n=(n<<3)+(n<<1)+*ioptr++-'0';
	ioptr++;
	if(neg)
		n=-n;
	return n;
}
#define N 70
#define M 1000000007
int n;
int a[32],b[32];
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,l,k,x,y;ll m;
	T=getint();
	while(T--)
	{
	 n=getint();
	 int mx=-1;
	 for(i=0;i<n;i++)
	 {a[i]=getint();mx=max(mx,a[i]);}
	 for(i=0;i<n;i++)b[i]=a[n-1-i];
	 int cnt=0,cnt1=0;
	 while(1)
	 {
	  int c,l,h,mmx=-1;
	  for(i=0;i<n;i++)
	  if(a[i]!=mx)break;
	  if(i==n)break;
	  cnt++;
	  for(i=0;i<n;i++)
	  for(j=i+1;j<n;j++)
	  {
	   	c=0;
	   	for(k=i;k<=j;k++)
	   	if(a[k]==mx)c++;
	   	int num=j-i+1;
	   	if(c>=(num+1)/2&&num>mmx)
	   	{l=i,h=j,mmx=num;}
	  }
	  for(i=l;i<=h;i++)a[i]=mx;
	 }
	 while(1)
	 {
	  int c,l,h,mmx=-1;
	  for(i=0;i<n;i++)
	  if(b[i]!=mx)break;
	  if(i==n)break;
	  cnt1++;
	  for(i=0;i<n;i++)
	  for(j=i+1;j<n;j++)
	  {
	   	c=0;
	   	for(k=i;k<=j;k++)
	   	if(b[k]==mx)c++;
	   	int num=j-i+1;
	   	if(c>=(num+1)/2&&num>mmx)
	   	{l=i,h=j,mmx=num;}
	  }
	  for(i=l;i<=h;i++)b[i]=mx;
	 }
	 printf("%d\n",min(cnt,cnt1));
	}
	return 0;
}
