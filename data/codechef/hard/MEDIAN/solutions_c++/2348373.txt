#include <iostream>
#include <algorithm>

using namespace std;

const int maxN = 30 + 1;

int n, o[maxN], a[maxN], res;

void bt (int level) {
	int ones = 0;
	for (int i = 0; i < n; i++) if (a[i]) ones++;
	if (ones == n) {
		res = min (res, level); 
		return;
	}
	if (level >= res) return;
	for (int i = 0; i < n; i++) {
		int cnt = 0, best = -1;
		for (int j = i; j < n; j++) {
			cnt += bool (a[j]);
			if (cnt >= (j - i + 2) / 2) best = j;
		}
		if (best == -1) continue;
		for (int k = i; k <= best; k++) a[k]++;
		bt(level + 1);
		for (int k = i; k <= best; k++) a[k]--;
	}
}

int main() {
	int t; cin >> t;
	while (t --> 0) {
		cin >> n;
		for (int i = 0; i < n; i++) cin >> o[i];
		int mx = *max_element (o, o + n);
		for (int i = 0; i < n; i++) a[i] = (o[i] == mx);

		res = 1000;
		bt (0);
		cout << res << endl;
	}
	return 0;
}
