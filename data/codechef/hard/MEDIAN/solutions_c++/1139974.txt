#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <memory.h>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define INF 1000000000
#define PB push_back
#define ALL(c) (c).begin(), (c).end()
#define pi 2*acos(0.0)
#define SQR(a) (a)*(a)
#define MP make_pair

typedef unsigned long long Int;

int n, T;
int A[64];
map<int, int> R;
void F(int mask)
{
    queue<int> q;
    q.push(mask);
    q.push(0);
    R[mask]=1;
    int end = (1<<n)-1;
    while(!q.empty()){
        int stat = q.front();
        //cout<<stat<<endl;
        q.pop();
        int moves = q.front();
        q.pop();
        if(stat==end){
            cout<<moves<<endl;
            break;
        }
        for(int i = 0;i<n;i++){
            int a = 0;
            int b = 0;
            int c = stat;
            for(int j = i;j<n;j++){
                c|=1<<j;
                if((stat&(1<<j))>0)
                    a++;
                else b++;
                if(a>=b && R[c] < 1){
                    q.push(c);
                    q.push(moves+1);
                    R[c]=1;
                }

            }

        }
    }

}

int main()
{
	cin >> T;
	FOR (t,0,T)
	{
		R.clear();

		cin >> n;
		int MAX = 0;
		FOR (i,0,n)
		{
			cin >> A[i];
			//A[i] = rand() % 10 + 1;
			MAX = max(MAX, A[i]);
		}

		int mask = 0;
		FOR (i,0,n)
			if (A[i] == MAX)
				mask += (1 << i);

		F(mask);
	}

	return 0;
}
