#include <cstdio>
#include <map>
using namespace std;

int a[100];
int n;
int mx;
map<int,int> costs;

int getCost(int state) {
    if(costs.count(state) > 0) {
        return costs[state];
    }
    int i,j;
    int c0 = 0, c1 = 0;
    for(i=0; i<n; ++i) {
        if((state & (1<<i))) {
            c1++;
        } else {
            c0++;
        }
    }

    if(c0 == 0) {
        return 0;
    }
    if(c1 >= c0) {
        return 1;
    }

    int ans = 999999999;
    int check, temp;
    for(i=0; i<n; ++i) {
        check = state;
        c0 = 0;
        c1 = 0;
        temp = -1;
        for(j=i; j<n; ++j) {
            if((check & (1<<j))) {
                c1 ++;
            } else {
                check += (1<<j);        //keep puttings 1's, will be used to create the temp
                c0 ++;
            }
            if(c1 >= c0 && check != state) {
                temp = check;
            }


        }
        if(temp != -1) {
            ans = min(ans, getCost(temp) + 1);

        }
    }
    costs[state] = ans;
    return ans;
}

int main() {
    int t;
    int i;
    int state;
    scanf("%d", &t);
    while(t--) {
        costs.clear();
        scanf("%d", &n);
        mx = 0;
        for(i=0; i<n; ++i) {
            scanf("%d", &a[i]);
            if(mx < a[i]) 
                mx = a[i];
        }
        state = 0;
        for(i=0; i<n; ++i) {
            if(a[i] == mx) {
                state |= (1<<(n-i-1));
            }
        }
        printf("%d\n", getCost(state));


    }
    return 0;
}
