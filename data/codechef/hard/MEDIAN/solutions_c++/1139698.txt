#include<iostream>
#include<stdio.h>
#include<queue>
#include<climits>
#include<cstring>
#include<map>
#include<cmath>
using namespace std;
int num;
int arr[35];
map <int,int> mp;
int funct(int mask)
{
    //system("pause");
    int i,j,k;
    int c0=0,c1=0;
    for(i=0;i<num;i++)
    if(mask & (1<<i))
    c1++;
    else
    c0++;
    //printf("%d\n",mask);
    if(c0==0)
    return 0;
    if(c0<=c1)
    return 1;
    if(mp.find(mask)!=mp.end())
    return mp[mask];
    int res=INT_MAX;
    for(i=0;i<num-1;i++)
    {
                      int from=mask,to=-1;
                      c0=0,c1=0;
                      for(j=i;j<num;j++)
                      {
                                        if(mask&(1<<j))
                                        c1++;
                                        else
                                        {
                                            c0++;
                                            from|=(1<<j);
                                            }
                                        if(c0<=c1&&from!=mask)
                                        {
                                                  to=from;
                                        }
                      }
                      if(to!=-1)
                      res=min(res,funct(to)+1);
    }
    mp[mask]=res;
    return res;
    
    
}
int main()
{
    int tests;
    scanf("%d",&tests);
    
    while(tests--)
    {
                  mp.clear();
                  
                  scanf("%d",&num);
                  int i,j,k;
                  int mx=INT_MIN;
                  for(i=0;i<num;i++)
                  {
                       scanf("%d",&arr[i]); 
                       mx=max(mx,arr[i]);           
                  }
                  //printf("%d\n",mx);
                  int mask=0;
                  for(i=0;i<num;i++)
                  {
                                 if(arr[i]==mx)
                                      mask|=(1<<i);     
                  }
                  //printf("%d\n",mask);
                  printf("%d\n",funct(mask));
                  
    }
}
