#include<cstdio>
#include<iostream>
#include<map>
using namespace std;

#define DEBUG(x) cout << #x << "=" << x << endl;

const int INF=1<<10;
int N, A[35], mxm;
map<int, int> dp;

void display(int mask, int idx) {
    if(!idx) DEBUG(mask);
    printf((mask&(1<<idx))?"1":"0");
    if(idx==N-1) {
        puts("");
        return ;
    }
    display(mask, idx+1);
}

int solve(int mask) {
    int on=0, off=0;

    for(int i=0; i<N; i++)
    if(mask&(1<<i)) on++;
    else off++;

    if(on==N) return 0;
    else if(on>=off) return 1;

    if(dp.find(mask)!=dp.end())
    return dp[mask];

    int res=INF;

    for(int i=0; i<N; i++) {
        on=0, off=0;
        int temp=mask, pass=-1;
        for(int j=i; j<N; j++) {
            if(mask&(1<<j)) on++;
            else {
                off++;
                temp|=(1<<j);
            }
            if(on>=off && temp!=mask) {
                pass=temp;
            }
        }
        //DEBUG(i); DEBUG(on); DEBUG(off);
        if(pass!=-1)
        res=min(res, 1+solve(pass));
    }

    dp[mask]=res;
    return dp[mask];
}

int main() {
    int t;
    scanf("%d", &t);
    while(t--) {
        dp.clear();

        scanf("%d", &N);

        mxm=-1;
        for(int i=0; i<N; i++) {
            scanf("%d", &A[i]);
            if(A[i]>mxm) mxm=A[i];
        }

        for(int i=0; i<N; i++)
        A[i]=(A[i]==mxm)?1:0;

        int mask=0;
        for(int i=0; i<N; i++)
        mask|=(A[i]<<i);

        printf("%d\n", solve(mask));
    }
}
