#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define mp make_pair
#define f first
#define s second
#define N 35
#define NN 5000000
#define ln 1e10+1
#define BIT(i, j) ((j >> i) & 1)
#define ll long long
#define oo 1000000007
#define ln 1000000000000000005
#define pii pair < pair <int, int>, int >
#define pi pair < int, pair <int, int> >
#define Pa pair < int ,int >

using namespace std;

int n, a[N], b[N], Sum[N];
int que[NN];
map <int ,int> DP;

void Solve()
{
    DP.clear();
    int Ma = -1, B = 0, F = 1, top = 0;
    cin >> n;
    for(int i=1; i<=n; i++)
    {
        cin >> a[i];
        Ma = max(Ma, a[i]);
    }
    for(int i=1; i<=n; i++)
        if(a[i] == Ma)
            B |= 1 << (i-1);
    que[++top] = B;
    DP[B] = 1;
    while(F <= top)
    {
        int P = que[F++];
        if(P == ((1 << n)-1))
        {
            cout << DP[P] - 1 << endl;
            return;
        }
        for(int i=1; i<=n; i++)
        {
            b[i] = BIT(i-1, P);
            Sum[i] = Sum[i-1] + b[i];
        }
        int cur = 1;
        for(int i=1; i<=n; i++)
        {
            int r = -1;
            for(int j=max(cur, i)+1; j<=n; j++)
                if(Sum[j] - Sum[i-1] >= (j-i)/2+1)
                    r = j;
            if(r == -1) continue;
            cur = max(cur, r);
            int tt = P;
            for(int j=i; j<=r; j++)
                tt |= (1 << (j-1));
            if(DP[tt])  continue;
            DP[tt] = DP[P] + 1;
            que[++top] = tt;
        }
    }
}

int main()
{
   // filein("inp.txt");  fileout("out.txt");
    int T;
    cin >> T;
    while(T--)
        Solve();
}
