#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
using namespace std; 
#pragma comment(linker, "/STACK:256000000") 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 1103 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
const int N = 200000;

int64 mod = 1e9 + 7;
int64 n, m;
int64 d[20][1 << 20];
int64 l[20];
int64 was[20];
int64 kar[20];
int64 st, en;
int64 mask;

int fu(int x)
{
	if (x == n)
		return 1;
	if (was[x])
		return kar[x];
	was[x] = 1;
	int64 t = 0;
	for(int i = 0; x + i < n; ++i)
	{
		t += (fu(x + 1 + i) * l[i]) % mod;
		t %= mod;
	}
	return kar[x] = (t * 24) % mod;;
}

void fun()
{
	d[0][0] = 1;
	for(int i = 0; i < n; ++i)
	{
		for(int j = 0; j < (1 << m); ++j)
		{
			if (!d[i][j])
				continue;
			if (i >= m && j >= st && j <= en)
				continue;
			//cerr << d[i][j] << ' ' << i << ' ' << j << endl;
			d[i + 1][(j << 1) & mask] += d[i][j];
			d[i + 1][(j << 1) & mask] %= mod;
			d[i + 1][((j << 1) & mask) | 1] += d[i][j];
			d[i + 1][((j << 1) & mask) | 1] %= mod;
		}
	}
	for(int i = 0; i <= n; ++i)
	{
		for(int j = 0; j < (1 << m); ++j)
		{
			if (i >= m && j >= st && j <= en)
				continue;
			l[i] += d[i][j];
		}
	}
	int64 ans = 0;
	//cerr << l[n] << endl;
	//cerr << deg[n] << ' ' << l[n] << ' ' << ans;
	//cerr << l[1] << l[0];
	for(int i = 0; i <= n; ++i)
	{
		cerr << l[i] << ' ' << fu(i) << endl;
		ans += (l[i] *(int64) fu(i)) % mod;
		//cerr << ans << endl;
		ans %= mod;
	}
	ans %= mod;
	cout << ans << endl;
}

void solve()
{
	cin >> n >> m;
	string a, b;
	cin >> a >> b;
	memset(d, 0, sizeof d);
	memset(was, 0, sizeof was);
	memset(l, 0, sizeof l);
	memset(kar, 0, sizeof kar);
	//cerr << a << b << endl;
	int64 ans = 0, q = -1;
	st = 0, en = 0;
	for(int i = 0; i < m; ++i)
	{
		st <<= 1;
		en <<= 1;
		if (a[i] == 'B')
			st++;
		if (b[i] == 'B')
			en++;
	}
	mask = (1 << m) - 1;
	fun();
}
int main()
{
#ifdef WIN32
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif
	int t, k;
	cin >> t;
	for(int i = 0; i < t; ++i)
	{
		solve();
	}
}