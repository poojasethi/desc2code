#pragma comment(linker, "/STACK:1024000000,1024000000") 
#include <iostream> 
#include <stdlib.h> 
#include <ctime> 
#include <cmath> 
#include <stdio.h> 
#include <vector> 
#include <algorithm> 
#include <queue> 
#include <string.h> 
#include <map> 
#include <set> 
#include <assert.h>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define inf 1000000007 
#define mod 1000000007
#define all(x) x.begin(),x.end() 
#define N 1500010
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std; 

struct node{
    int ch[2],fail,v;
    void init(){
        ch[0]=ch[1]=0;
        fail=v=0;
    }
}t[N];
int sz,m,dp[20][N],n;
void add(int x)
{
    int p=0;//DBG(x)
    for(int i=m-1;i>=0;i--){
        int j=x>>i&1;
        //if(j)printf("B");else printf("A");
        if(!t[p].ch[j])++sz,t[sz].init(),t[p].ch[j]=sz;
        p=t[p].ch[j];
    }
    t[p].v=1;
   // puts("");
}
void run()
{
    queue<int>q;
    q.push(0);
    while(!q.empty()){
        int p=q.front();q.pop();
        int fa=t[p].fail;
        t[p].v|=t[fa].v;
        for(int i=0;i<2;i++){
            if(!t[p].ch[i]){
                if(p)t[p].ch[i]=t[fa].ch[i];
            }
            else{
                int j=t[p].ch[i];
                if(p==0)t[j].fail=0;
                else t[j].fail=t[fa].ch[i];
                q.push(j);
            }
        }
    }
}
char a[20],b[20];
int main()
{
    int T,i,j,k,ca=0,now=0;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d%s%s",&n,&m,a,b);
        int l=0,r=0;t[0].init();sz=0;
        for(i=0;i<m;i++)l=l*2+(a[i]=='B'),r=r*2+(b[i]=='B');
            //cerr<<l<<" "<<r<<"\n";
        for(i=l;i<=r;i++)add(i);
            run();
        for(i=0;i<=n;i++)
            for(j=0;j<=sz;j++)dp[i][j]=0;
        dp[0][0]=1;
        for(i=0;i<n;i++)
            for(j=0;j<=sz;j++)
                if(dp[i][j]&&!t[j].v){
                    for(k=0;k<2;k++){
                        int x=t[j].ch[k];
                        if(t[x].v)continue;
                        dp[i+1][x]+=dp[i][j];
                        if(dp[i+1][x]>=mod)dp[i+1][x]-=mod;
                    }
                    dp[i+1][0]+=1LL*dp[i][j]*24%mod;
                    if(dp[i+1][0]>=mod)dp[i+1][0]-=mod;
                }
        int ans=0;
        for(i=0;i<=sz;i++)if(dp[n][i]){
            ans+=dp[n][i];
            if(ans>=mod)ans-=mod;
        }
        printf("%d\t ",ans);
    }
} 