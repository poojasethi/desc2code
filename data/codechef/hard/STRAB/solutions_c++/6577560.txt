#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <sstream>

using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define SZ(x) ((int)(x).size())
#define FORV(i,x) FOR(i,0,SZ(x))
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define MP make_pair
#define PB push_back
#define ALL(x) x.begin(),x.end()
#define ULL unsigned long long
#define LL long long
#define mset(x,v) memset(x,v,sizeof x)
#define F first
#define S second
#define MOD 1000000007

char x[20],y[20];
LL dp[20],n,m;

bool wrong(char *s)
{
	char temp=s[m];
	s[m]='\0';
	if( strcmp(x,s) <=0 && strcmp(s,y) <=0 )
	{
		s[m]=temp;
		return true;
	}
	else
	{
		s[m]=temp;
		return false;
	}
}

LL fn(char *s,LL n , LL i )
{
	if(i==-1) return 1;
	LL ret=(dp[i]*24)%MOD;
	if(i>=n-m+2) {
		s[i] = 'A';
		ret = (ret + fn(s, n, i-1))%MOD;
		s[i] = 'B';
		ret = (ret + fn(s, n, i-1))%MOD;
	}
	else {
		s[i]='A';
		if(!wrong(s+i)) ret=(ret+fn(s,n,i-1))%MOD;
		s[i]='B';
		if(!wrong(s+i)) ret=(ret+fn(s,n,i-1))%MOD;
	}
	return ret;
}

int main()
{
	int t; 
	scanf("%d",&t);
	char s[20];
	while(t--)
	{
		mset(dp,0);
		scanf("%d%d%s%s",&n,&m,x,y);
		dp[0]=1;
		FOR(i,1,n+1)
			dp[i]=(i<m)? (dp[i-1]*26)%MOD : fn(s,i-1,i-1);
		printf("%lld\n",dp[n]);
	}
	return 0;
}
