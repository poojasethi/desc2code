#include<bits/stdc++.h>
#include<string.h>
using namespace std;
typedef long long ll ;
typedef unsigned long long ull;
long long INF = 1e9 ;
typedef pair < int , int > pii ;
typedef  vector < int > vi ;
typedef vector < pii > vpi ;
typedef vector < ll > vl ;
typedef pair < int , pii > tri ;
typedef vector < string > vs ;
typedef vector < vi > mat ;
#define all(a) a.begin(),a.end()
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d" , n) ;
#define fors( i , a , b ) for( int i = a ; i < b ; i++ )
#define sl(n) scanf("%lld" , &n) ;
#define pl(n) printf("%lld" , n) ;
#define pb push_back
#define ss second
#define ff first
#define mp make_pair
#define sz(a) a.size()
#define fill(a,v)  memset(a,v,sizeof(a))
#define index(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
char cad[30] ;
long long mo = 1000000007 ;
char x[21] , y[21] ;
int m , n  ;
long long dp[ 30 ] ;
long long recur ( char *s , int len , int ind )
{

    char temp[23] ;
     long long total = 0  ;
       if ( ind == -1 )
        return 1 ;

       //  does not have to check
       if ( ind >= ( ( len - 1 ) - m + 2 ) )
       {
          total = ( ( total % mo ) +  ( 24 * dp[ind] % mo ) ) % mo  ;
          //string s1 = s ;
          //s1 = "A" + s1 ;
          s[ind] = 'A' ;
          total = ( total % mo  +  recur(  s , len , ind - 1 ) % mo  ) % mo  ;
          s[ind] = 'B' ;
          total = ( total % mo  +  recur( s , len , ind - 1 ) % mo  ) % mo  ;
       }
       else
       {
         total = ( ( total % mo ) +   ( 24 * dp[ind] % mo ) ) % mo  ;


          /*for ( int i = 0 ; i < m - 1  ; i++)
          {
             temp1 += s[i] ;
             temp2 += s[i] ;
          } */


          //   cout << " temp is " << temp << endl ;
          s[ind] = 'A' ;
          strcpy ( temp , s + ind ) ;
           temp[m] = '\0' ;

          if ( !( (strcmp(x , temp )<=0 && strcmp(temp , y  )<=0) ) )//
          total = ( total % mo  +  recur( s  , len , ind - 1 ) % mo ) % mo  ;

           s[ind] = 'B' ;
          strcpy ( temp , s + ind ) ;
           temp[m] = '\0'  ;
          if ( !( ( strcmp(x , temp )<=0 && strcmp(temp  , y )<=0) ) )
          total = ( total % mo  +  recur( s , len , ind - 1 ) % mo  ) % mo  ;

       }
          return total % mo  ;
}


int main()
{
   int t  ;

   cin >> t ;
   long long ans  , ans1 , ans2  ;

   while(t--)
   {
      char s[21] ;
     cin >>  n >> m ;
//     cin >> x >> y ;
scanf("%s%s" , x , y ) ;
     for ( int i = 0 ; i < n + 1 ; i++)
      dp[i] = 0 ;

     dp[0] = 1 ;

     // length less than m
     for ( int i = 1 ; i < m ; i++)
     {
         dp[i] = ( 26 * dp[i-1] ) % mo ;
     }

    // length greater than m

      for ( int i = m ; i <= n ; i++)
      {

        dp[i] = recur(  s , i , i - 1 ) % mo  ;
      }

  cout << ( dp[n] % mo )  << endl ;
   }
return 0 ;
}
