using namespace std;
#include <cmath>
#include <cstdio>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <string>
#include <vector>
#include <iostream>
#include <sstream>
#include <algorithm>
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
typedef long long ll; 
typedef pair<int,int> pii; 
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define split(str) {vs.clear();istringstream ss(str);while(ss>>(str))vs.push_back(str);}
#define PI 3.141592653589793
pii qu[100008];	//sky, ground
int main()
{
	int t;
	sf(t);
	while(t--)
	{
		int n,m,q,p,k;
		sf(p);sf(q);sf(m);sf(n);sf(k);
		FOR(i,k+3)
		{
			qu[i].second = 0;
			qu[i].first = 0;
		}
		qu[0].first = p;
		qu[0].second = q;
		int landed = 0;
		int flew = 0;
		int temp = m;
		int buffer = 0;
		FOR(i,k+1)
		{
			//cout<<i<<endl;
			if(temp == 0)
			{
				qu[i].first++;
				temp = m;
			}
			temp--;
			//cout<<i<<" To land:"<<qu[i].first <<" To fly: "<<qu[i].second<<endl;
			if(qu[i].first > 0)
			{
				qu[i].first--;
				landed++;
				if(i+n > k+1)
					buffer++;
				if(i + n < k+5)
				{
					//cout<<"To fly added at :"<<i+1+n<<endl;
					qu[i+n].second++;
					
				}
			}
			else if(qu[i].second > 0)
			{
				qu[i].second--;
				flew++;
			}
			qu[i+1].second += qu[i].second;
			qu[i+1].first += qu[i].first;
		}
		if(temp == 0)
			{
				qu[k+1].first++;
				//temp = m;
			}
		printf("%d %d %d %d\n", landed, flew, qu[k+1].first, qu[k+1].second + buffer);
	}
}