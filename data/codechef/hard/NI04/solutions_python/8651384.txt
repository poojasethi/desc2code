#include<bits/stdc++.h>

#define PB push_back
#define MP make_pair
#define F first
#define S second

#define RI(a) scanf("%d",&a);
#define RIL(a) scanf("%lld",&a);
#define PI(a) printf("%d\n",a);
#define PIL(a) printf("%lld\n",a);

#define SZ(a) (int)(a.size())

#define SET(a,b) memset(a,b,sizeof(a))

#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)

#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)

#define ALL(a) a.begin(),a.end()

#define DRT()  int t; cin>>t; while(t--)

#define PRSNT(a,e) (a.find(e) != a.end())

#define MINH priority_queue<int, vector<int>, greater<int> >

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define N 100001
#define MOD 1000000007

typedef long long LL;

using namespace std;

int main()

{
        DRT() {
                queue <int> qu;
                int tf=0, p,q,m,n,k, cntoff=0, cntl=0;
                cin>>p>>q>>m>>n>>k;
                int tmp = q;
                while(tmp--) {
                        qu.push(-n);
                }
                q=0;
                REP(i,0,k) {
                        //cout<<"planes in air"<<p<<endl;
                        //cout<<"ready to take off"<<qu.size()<<endl;
                        if((i!=0) && i%m == 0) {
                          //      cout<<"New Plane"<<endl;
                                p++;
                        }
                        if(p) {
                         //       cout<<"Landed"<<endl;
                                cntl++;
                                qu.push(i);
                                p--;
                        }

                        else if(!qu.empty() && qu.front()+n<=i) {        
                         //       cout<<"Takeoff"<<endl;
                                qu.pop();
                                cntoff++;
                        }
                        //else 
                          //      cout<<"Wait"<<endl;
                        //trace3(i,cntl,cntoff);
                }
               
                if((k+1)%m==0)
                        p++;
                while(!qu.empty()) {
                        tf++;
                        qu.pop();
                }

                cout<<cntl<<" "<<cntoff<<" "<<p<<" "<<tf<<endl;
        }
        return 0;
}
