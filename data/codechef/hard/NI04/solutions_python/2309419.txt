#include <stdio.h>
#include <stdint.h>
#include <string.h>

#define SZ 100009

int takeOffs[SZ] = {0};



int_fast32_t imax = 0 , ioffset = 0,o_offset = 0;
char buffer[BUFSIZ], obuffer[BUFSIZ];

#if defined(_WIN32) || defined(WIN32)
#define getchar_unlocked read_char
#endif

char read_char()
{
    if( imax == ioffset )
    {
        imax = fread( buffer, sizeof(char), BUFSIZ, stdin );
        ioffset = 0;
    }
    return buffer[ioffset++];
}

int_fast32_t read_int()
{
    int_fast32_t N = 0;
    char ch = getchar_unlocked();
    while( ch == '\n' || ch == ' ' )
    {
        ch = read_char();
    }

    while( ch >= '0' && ch <= '9' )
    {
        N = (N*10) + ch - '0';
        ch = getchar_unlocked();
    }
    return N;
}



int main()
{
    int_fast32_t t, p, q, m, n, k;
#ifndef ONLINE_JUDGE
    freopen( "ni04.txt","r", stdin );
#endif
    t = read_int();
    while( t-- )
    {
        int_fast32_t landed = 0, takeOff = 0, time;
        int_fast32_t wtl = 0;
        int_fast32_t wto = 0;
        int_fast32_t isAnyLanding;
        memset( takeOffs, 0, sizeof( int) * SZ );
        p = read_int();
        q = read_int();
        m = read_int();
        n = read_int();
        k = read_int();
        wtl = p;
        wto = q;
        takeOffs[0] = q;

        for( time = 0; time <= k; ++time )
        {
            if( time && !(time % m ))
                wtl++;

            if( wtl )
            {
                landed++;
                takeOffs[time+n]++;
                takeOffs[time+1] += takeOffs[time];
                wtl--;
                wto++;
            }
            else
            {
                if( takeOffs[time] )
                {
                    takeOffs[time]--;
                    takeOffs[time+1] += takeOffs[time];
                    wto--;
                    takeOff++;
                }
            }
        }
        if( !( (k+1) % m ) ) 
            wtl++;
        printf("%d %d %d %d\n", landed, takeOff, wtl, wto );
    }
    return 0;
}
