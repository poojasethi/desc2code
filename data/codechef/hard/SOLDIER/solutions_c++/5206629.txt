#include<stdio.h>
#include<malloc.h>
#include<stdlib.h>
typedef struct obj{
	int pr;
	int q;
}obj;
int cmp(const void *a,const void *b)
{
	obj *x;
	obj *y;
	x=(obj *)a;
	y=(obj *)b;
	if (x->q > y->q)
		return 1;
	else
		return 0;
}
int getnext(int index,obj data[],int qu,int l,int in)
{
	in++;
	if (in<l)
	{
		int min=in;
		in++;
		while(in<l)
		{
			if (data[in].pr <= data[min].pr )
				min=in;
			in++;
		}
		return min;
	}
	else
		return (in-1);
}
int main()
{
	int i,j,k,n,sum,bud;
	scanf("%d%d",&n,&bud);
	int count[7]={0};
	int min[7][3]={0};
	int select;
	int counter[7]={0},index;
	obj ** data;
	data=(obj **)malloc(sizeof(obj *)*7);
	for (i=1;i<=6;i++)
		data[i]=(obj *)malloc(sizeof(obj)*n);
	for (i=1;i<=n;i++)
	{
		scanf("%d",&j);
		scanf("%d%d",&data[j][count[j]].pr,&data[j][count[j]].q);
		count[j]++;
	}
	for (i=1;i<=6;i++)
	{
		if (count[i]==0)
		{
			printf("0\n");
			return 0;
		}
	}
	sum=0;
	for (i=1;i<=6;i++)
	{
		qsort(data[i],count[i],sizeof(obj),cmp);
		min[i][0]=data[i][0].q;
		min[i][1]=data[i][0].pr;
		min[i][2]=0;
		for (j=0;j<count[i];j++)
		{
			if (min[i][1] >= data[i][j].pr)
			{
				min[i][1]=data[i][j].pr;
				min[i][0]=data[i][j].q;
				min[i][2]=j;
			}
		}
		sum = sum + min[i][1];
	}
	if (sum > bud)
	{
		printf("0\n");
		return 0;
	}
	while(1)
	{
		index=1;
		select=min[1][0];
		for (j=2;j<=6;j++)
		{
			if (select > min[j][0])
			{
				select=min[j][0];
				index=j;
			}
		}
		counter[index]=getnext(index,data[index],min[index][0],count[index],min[index][2]);
		if (counter[index]==min[index][2])
			break;
		if ((sum-data[index][min[index][2]].pr+data[index][counter[index]].pr)<=bud)
		{
			sum=sum-data[index][min[index][2]].pr + data[index][counter[index]].pr;
			min[index][2]=counter[index];
			min[index][0]=data[index][counter[index]].q;
			min[index][1]=data[index][counter[index]].pr;
		}
		else
			break;
	}
	printf("%d\n",select);
	return 0;
}
