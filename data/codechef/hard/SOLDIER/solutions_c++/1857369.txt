#include<stdio.h>
#include<assert.h>

inline int MinOf(int a, int b)
{
	return a<=b?a:b;
}

int main()
{
	int N,T,t,p,q,total,best,curr,MinSoFar0,MinSoFar1,MinSoFar2,MinSoFar3,MinSoFar4,MinSoFar5;
	int prices[105][6];
	int quality[105][6];
	int size[6];
	const int inf = 100000000;
	scanf("%d%d",&N,&T);
	for(int i=0; i<6; ++i) size[i] = 0;
	for(int i=0; i<N; ++i)
	{
		scanf("%d%d%d",&t,&p,&q);
		prices[size[t-1]][t-1] = p;
		quality[size[t-1]][t-1] = q;
		size[t-1]++;
	}
	best = 0;
	int i0=0,i1,i2,i3,i4,i5;
	if(size[0] == 0 || size[1] == 0 || size[2] == 0 || size[3] == 0 || size[4] == 0 || size[5] == 0)
	{
		printf("0\n");
		return 0;
	}
	do
	{
		curr = inf;
		if(size[0] != 0) curr = MinOf(curr,quality[i0][0]);
		i1 = 0;
		MinSoFar0 = curr;
		do
		{
			curr = MinSoFar0;
			curr = MinOf(curr,quality[i1][1]);
			i2 = 0;
			MinSoFar1 = curr;
			do
			{
				curr = MinSoFar1;
				curr = MinOf(curr,quality[i2][2]);
				i3 = 0;
				MinSoFar2 = curr;
				do
				{
					curr = MinSoFar2;
					curr = MinOf(curr,quality[i3][3]);
					i4 = 0;
					MinSoFar3 = curr;
					do
					{
						curr = MinSoFar3;
						curr = MinOf(curr,quality[i4][4]);
						i5 = 0;
						MinSoFar4 = curr;
						do
						{
							curr = MinSoFar4;
							curr = MinOf(curr,quality[i5][5]);
							if(curr > best)
							{
								total = 0;
								total += prices[i0][0];
								total += prices[i1][1];
								total += prices[i2][2];
								total += prices[i3][3];
								total += prices[i4][4];
								total += prices[i5][5];
								if(total <= T) best = curr;
							}
							i5++;
						}
						while(i5 < size[5]);
						i4++;
					}
					while(i4 < size[4]);
					i3++;
				}
				while(i3 < size[3]);
				i2++;
			}
			while(i2 < size[2]);
			i1++;
		}
		while(i1 < size[1]);
		i0++;
	}
	while(i0 < size[0]);
	printf("%d\n",best);
	return 0;
}
