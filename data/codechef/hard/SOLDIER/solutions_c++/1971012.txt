#include<cstdio>
#include<vector>
#include<algorithm>
#include<cstring>

using namespace std;

#define INT_MAX 1000000000
int dp[7][1001];
vector < pair<int ,int > > G[7];

int dynamic(int idx,int money)
{
	if(money<0)
		return 0;
	if(idx > 6 )
		return INT_MAX;
	if(dp[idx][money]!=-1)
		return dp[idx][money];
	int i;
	dp[idx][money]=0;
	for(i=0;i<G[idx].size();i++)
	{
		if(money>=G[idx][i].first)
			dp[idx][money]=max(dp[idx][money],min(G[idx][i].second,dynamic(idx+1,money-G[idx][i].first)));
	}
	return dp[idx][money];
}

int main()
{
	int n,money,i,j,k,t,p,q;
	scanf("%d%d",&n,&money);
	memset(dp,-1,sizeof(dp));
	for(i=0;i<n;i++)
	{
		scanf("%d%d%d",&t,&p,&q);
		G[t].push_back(make_pair(p,q));
	}
	printf("%d\n",dynamic(1,money));
	return 0;
}
