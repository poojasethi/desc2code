#include <iostream>
#include <vector>
using namespace std;
struct node
{
int p;
int q;
};
int main()
{
vector<struct node> v1,v2,v3,v4,v5,v6;
int n,m,x,y,z;
cin >> n >> m;
for(int i = 0; i < n; i++) {
cin >> x >> y >> z;
struct node f;
f.p = y;
f.q = z;
if(x == 1) {
v1.push_back(f);
}else if(x == 2) {
v2.push_back(f);
}else if(x == 3) {
v3.push_back(f);
}else if(x == 4) {
v4.push_back(f);
}else if(x == 5) {
v5.push_back(f);
}else if(x == 6) {
v6.push_back(f);
}
}
int over = 0;
for(int i = 0; i < v1.size(); i++) {
int pri = v1[i].p;
int min = v1[i].q;
if(pri <= m) {
for(int j = 0; j < v2.size(); j++) {
pri = pri + v2[j].p;
int tt = min;
if(min > v2[j].q) {
min = v2[j].q;
}
if(pri <= m) {
for(int k = 0; k < v3.size(); k++) {
pri = pri + v3[k].p;
int rr = min;
if(min > v3[k].q) {
min = v3[k].q;
}
if(pri <= m) {
for(int l = 0; l < v4.size(); l++) {
pri = pri + v4[l].p;
int u = min;
if(min > v4[l].q) {
min = v4[l].q;
}
if(pri <= m) {
for(int b = 0; b < v5.size(); b++) {
pri = pri + v5[b].p;
int h = min;
if(min > v5[b].q) {
min = v5[b].q;
}
if(pri <= m) {
for(int v = 0; v < v6.size(); v++) {
pri = pri + v6[v].p;
int r = min;
if(min > v6[v].q) {
min = v6[v].q;
}
if(pri <= m) {
if(min > over) {
over = min;
}
}
pri = pri - v6[v].p;
min = r;
}
}
pri = pri - v5[b].p;
min = h;
}
}
pri = pri - v4[l].p;
min = u;
}
}
pri = pri - v3[k].p;
min = rr;
}
}
pri = pri - v2[j].p;
min = tt;
}
}
}
cout << over << endl;
return 0;
}        
