#include <iostream>


using namespace std;
int price[100],quality[100],type[100];


int main()
{
int N,T;
cin>>N>>T;
bool bought[6] = {0,0,0,0,0,0};
int pricebought[6];
int qualitybought[6];
int currentprice = 0,bestquality = 0;

for(int i=0;i<N;i++)
{
cin>>type[i]>>price[i]>>quality[i];
type[i]--;
}
//infinite loop until you find the answer...
while(1){

if(N<6)
{cout<<bestquality<<endl;return 0;}


for(int i=0;i<N;i++){
	if(bought[type[i]] == 0)  //first time item i..
	{
		pricebought[type[i]] = price[i];
		bought[type[i]] = 1;
		qualitybought[type[i]] = quality[i];
		continue;
	}
	if(pricebought[type[i]] > price[i])
	{
		pricebought[type[i]] = price[i];
		qualitybought[type[i]] = quality[i];
	}
}


//conditions to get answer..
for(int i=0;i<6;i++)  //some object unavailable...
{
	if(bought[i] != 1)    {cout<<bestquality<<endl;return 0;}
	currentprice += pricebought[i];
}
if(currentprice > T)   // object too costly....
{cout<<bestquality<<endl;return 0;}

bestquality = qualitybought[0];
//-------------------------------------------------
//find new bestquality and reset bought array...
for(int i=0;i<6;i++)
{
if(bestquality > qualitybought[i])
bestquality = qualitybought[i];

bought[i] = 0;
}

//----------------------------------------
int j=0;
//removing all quality less than bestquality...
for(int i=0;i<N;i++)
{
if(quality[i] <= bestquality) continue;
quality[j] = quality[i];
price[j] = price[i];
type[j] = type[i];
j++;
}

//decrease N....
N=j;
//....reset price///
currentprice = 0;
//----------------------------------


}





return 0;
}
