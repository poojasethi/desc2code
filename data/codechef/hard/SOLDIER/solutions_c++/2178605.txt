#include<iostream>
#include<sstream>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<algorithm>
#include<deque>
#include<cmath>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>

using namespace std;

template<class T>void checkmin(T &a,T b){if(b<a) a=b;}
template<class T>void checkmax(T &a,T b){if(b>a) a=b;}

#define PB push_back
#define SZ(a) ((int)((a).size()))
#define LEN(a) ((int)(a).length())
#define RP(i,a,b)  for(i=(a);i<=(b);++(i))
#define RPD(i,a,b) for(i=(a);i>=(b);--i)
#define FORALL(it,a) for(it=a.begin();it!=a.end();++it)

	int dp[7][1005];
int main()
{
	int n,t;cin>>n>>t;
	int i,j,k;
	memset(dp,0,sizeof(dp));
	vector<pair<int,int> >vc[7];
	int tp,pr,ql;

	RP(i,1,n)
	{
		cin>>tp>>pr>>ql;
		vc[tp].push_back(make_pair(pr,ql));
	}
	int ret = 0;
	RP(i,0,vc[1].size()-1)
	{
		RP(j,1,t)
		{
			if(j>=vc[1][i].first)
			{
				checkmax(dp[1][j],vc[1][i].second);
			}
		}
	}
	RP(i,2,6)
	{
		RP(j,1,t)
		{
			int curmax = 0;
			int si = vc[i].size()-1;
			RP(k,0,si)
			{
				int lfp = j-vc[i][k].first;
				if(lfp<=0)
					continue;
				int curq = vc[i][k].second;
				checkmin(curq,dp[i-1][lfp]);
				checkmax(curmax,curq);
			}
			checkmax(dp[i][j],curmax);
		}
	}
	ret = 0;
	RP(i,1,t)
	{
		checkmax(ret,dp[6][i]);
	}
	cout<<ret<<endl;
	return 0;
}