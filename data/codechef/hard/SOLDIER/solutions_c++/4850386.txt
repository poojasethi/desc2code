#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define ll long long
const int mod=1000000007;

int type[101],price[101],quality[101];
bool haveType[7];

int main(void)
{
  int n,m;
  cin>>n>>m;
  vector<pii> items[7];
  for(int i=0;i<n;++i)
  {
    cin>>type[i]>>price[i]>>quality[i];
    items[ type[i] ].push_back(pii(price[i],quality[i]));
  }
  for(int i=1;i<=6;++i)
    sort(items[i].begin(),items[i].end());

  int best=0;
  for(int i=0;i<n;++i)
  {
    memset(haveType,false,sizeof(haveType));
    int moneyLeft=m-price[i];
    int minAllowedQuality=quality[i];
    haveType[type[i]]=true;
      
    for(int type=1;type<=6;++type)
    {
      if(haveType[type])
        continue;
      // cout<<"Trying type"<<type<<endl;
      for(int j=0;j<items[type].size();++j)
      {
        // cout<<items[type][j].first;
        int q=items[type][j].second;
        // cout<<" "<<q<<endl;
        if(q<minAllowedQuality)
          continue;
        // cout<<"Chosen "<<endl;
        moneyLeft-=items[type][j].first;
        haveType[type]=true;
        // cout<<type<<endl;
        break;
      }
    }

    bool isValid=true;
    for(int type=1;type<=6;++type)
      isValid&=haveType[type];
    isValid&=(moneyLeft>=0);

    if(isValid)
      best=max(best,minAllowedQuality);
  } 
  cout<<best;
}