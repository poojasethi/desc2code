#include <iostream>
#include <algorithm>
#include <list>
#include <stdio.h>
#include <limits.h>
using namespace std;
list<int>soldier[8];
int dp[7][1010];

int main()
{
//     freopen("C:\\Users\\jack\\Desktop\\in.txt","r",stdin);
  //  freopen("C:\\Users\\jack\\Desktop\\out.txt","w",stdout);
    int n,money,item,price,quality;
    scanf("%d",&n);
    scanf("%d",&money);
    for(int i=1;i<=6;i++)
    soldier[i].clear();
       int b[7]={INT_MAX};
    for(int i=1;i<=n;i++)
     {
         scanf("%d",&item);
         scanf("%d",&price);
         scanf("%d",&quality);
         
         soldier[item].push_back(price);
         soldier[item].push_back(quality);
         
         if(b[item]>price)
            b[item]=price;
          }
         
         int temp=0;
         
         for(int i=1;i<=6;i++)
         temp+=b[item];
       if(temp==INT_MAX)
      printf("0");
      else
      {
      for(int i=0;i<=6;i++)
      for(int j=0;j<=money;j++)
      dp[i][j]=INT_MAX;
        list<int>::iterator it;
      for(int i=1;i<=6;i++)
      {
           for(int j=0;j<=money;j++)
             {int y=INT_MIN;
                  for(it=soldier[i].begin();it!=soldier[i].end();it++)
               {
                   price=*it;it++;quality=*(it);
                   if(price>j)
                    continue;
                  if(i==1 || dp[i-1][j-price]!=INT_MAX )
                    { 
                        int x=min(dp[i-1][j-price],quality);
                        
                        if(dp[i][j-1]==INT_MAX)
                           y=max(x,y);
                       else
                           y=max(max(dp[i][j-1],x),y);
                    
                      }//if
                 }//for it
                 dp[i][j]=y;
              }//for
      }//for   
      
    
                
    if(dp[6][money]!=INT_MIN)  
    printf("%d",dp[6][money]);
    else
    printf("0");
   }               
}  

