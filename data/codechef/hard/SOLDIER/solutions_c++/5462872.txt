#include <cstring>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;

const int NX = 1001;
const int inf = 1000000;

typedef pair<int,int> intPair;

#define cost first;
#define quality second;

vector<intPair> item[7];
int dp[NX][7];
int N,M;

int solve(int vol_left,int pos)
{
    if(pos==6){return inf;}
    if(vol_left<=0){return 0;}

    int &reff=dp[vol_left][pos];
    if(reff!=-1){return reff;}
    reff=0;

    for(int i=0;i<item[pos].size();i++)
    {
        intPair itm=item[pos][i];
        if(itm.first > vol_left){continue;}
        reff=max(reff,min(itm.second,solve(vol_left-itm.first,pos+1)));
    }

    return reff;
}

int main()
{
    scanf("%d %d",&N,&M);
    for(int i=0;i<N;i++)
    {
        int t,v,q;
        scanf("%d %d %d",&t,&v,&q);
        item[t-1].push_back(make_pair(v,q));
    }

    memset(dp,-1,sizeof(dp));
    printf("%d\n",solve(M,0));

    return 0;
}
