#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
using namespace std;
int t;
typedef struct _equipment
{
  int t,p,q;
  bool operator<(const _equipment&a)const
  {return t<a.t||t==a.t&&q>a.q||t==a.t&&q==a.q&&p<a.p;}
}equipment;
equipment equip[100];
int start[7],end[7];
int solve(int k,int price,int quality)
{
  int i,x;
  if(k==7)
    {
      return quality;
    }
  if(start[k]==-1 && end[k]==-1)
    {
      return solve(k+1,price,quality);
    }
  int max=0;
  for(i=start[k];i<=end[k];i++)
    {
      if(price+equip[i].p<=t)
	{
	  if(equip[i].q<quality)
	    x=solve(k+1,price+equip[i].p,equip[i].q);
	  else
	    x=solve(k+1,price+equip[i].p,quality);
	  if(x>0)
	    {
	      max=x;
	      break;
	    }
	}
    }
  return max;
}
int main()
{
  int n,i;
  scanf("%d %d",&n,&t);
  if(n==0)
    {
      printf("0\n");
      return 0;
    }
  for(i=0;i<n;i++)
    scanf("%d %d %d",&equip[i].t,&equip[i].p,&equip[i].q);
  sort(equip,equip+n);
  for(i=0;i<=6;i++)
    {
      start[i]=-1;
      end[i]=-1;
    }
  start[equip[0].t]=0;
  for(i=1;i<n;i++)
    {
      if(equip[i].t!=equip[i-1].t)
	{
	  end[equip[i-1].t]=i-1;
	  start[equip[i].t]=i;
	}
    }
  end[equip[i-1].t]=i-1;
  //for(i=1;i<=6;i++)
  //printf("%d %d\n",start[i],end[i]);
  for(i=1;i<=6;i++)
    if(start[i]==-1 || end[i]==-1)
      break;
  if(i<=6)
    {
      printf("0\n");
      return 0;
    }
  printf("%d\n",solve(1,0,1e9));
  return 0;
}
