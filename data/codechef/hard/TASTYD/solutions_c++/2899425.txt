#include <iostream>
#include <queue>
#include <cstdio>
#include <cstring>
#include <map>
#include <vector>
#include <list>
#include <sstream>
#include <cmath>
#include <ctime>
#include <algorithm>
 
using namespace std;
 
#define sz(a) ((int)a.size())
#define cl clear()
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define sqr(a) ((a) * (a))
#define PI 3.1415926535897932384626433832795
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef pair <double, double> pdd;
#define inf 1000000007
#define N 200050
int s[N],a[N],k;
ll solve(int l,int r)
{
	if(l>=r)return 0;
	int i,j,id;ll ans=0;
	int mi=inf;
	for(i=l;i<=r;i++)
	if(mi>a[i])mi=a[i];
	int x=(l+r)>>1,y=r-l+1;
	for(i=0;i<=y;i++)
	if(x-i>=l&&a[x-i]==mi){id=x-i;break;}
	else if(x+i<=r&&a[x+i]==mi){id=x+i;break;}
	vector<int>q(1,0);
	int sum=0;
	for(i=l;i<id;i++)
	{
		sum=(sum+a[i])%k;
		q.pb(sum);	
	}
	sort(all(q));
	ans+=upper_bound(all(q),sum)-lower_bound(all(q),sum)-1;
	for(i=id+1;i<=r;i++)
	{
		sum=(sum+a[i])%k;
		ans+=upper_bound(all(q),sum)-lower_bound(all(q),sum);
	}
	ans+=solve(l,id-1)+solve(id+1,r);
	return ans;	
}
int main()
{
    int i,j,T,n;
	scanf("%d%d",&n,&k);
	for(i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
	}
	ll ans=solve(1,n);
	printf("%lld\n",ans);
    return 0;
}