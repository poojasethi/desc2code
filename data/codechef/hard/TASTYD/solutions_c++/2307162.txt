#include<iostream>
#include<cassert>
#include<algorithm>
#include<map>

using namespace std;

#define ll long long

int a[200001],n,k;


ll rec(int l,int r)
{
       if(r<=l)
       return 0;
       
       int m = (l+r)/2,i,id=l;
       
       for(i=l;i<=r;i++)
       {
            if(a[id] > a[i])
            id = i;
            else if(a[id] == a[i] && abs(id-m) > abs(i-m))
            {
              id = i;
            }
       }
       
       m = id;
       
       ll cnt = rec(l,m-1) + rec(m+1,r);
       int sum = 0;
       
       map <int,int> mp;
       
       for(i=m-1;i>=l;i--)
       {
           if(a[i]<a[m])
           break;
           
           sum = sum+a[i];
          
           if(sum>=k)
           sum %= k;          
           
           if(!sum)
           cnt++;
           
           mp[sum]++;
       }
       
       sum = 0;
       
       for(i=m+1;i<=r;i++)
       {
          if(a[i]<a[m])
          break;
          
          sum = sum+a[i];
          
          if(sum>=k)
          sum %= k;
          
          if(!sum)
          cnt++;
          
          int x = k-sum;
          
          if(x>=k)
          x-=k;
          
          cnt += mp[x];
       }
       
       return cnt;
}

int main()
{
    int i;
    
    scanf("%d%d",&n,&k);
    
    assert(n<=200000);
    
    for(i=0;i<n;i++)
    {
       scanf("%d",&a[i]);
    }
    
    printf("%lld\n",rec(0,n-1));
    return 0;
}
