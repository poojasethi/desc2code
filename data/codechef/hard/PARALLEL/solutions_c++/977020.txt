#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
 
using namespace std;
 
typedef long long int64;
typedef unsigned long long uint64;
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
 
vector<pair<ipair,int> > g[30];
 
int countbit(int n)
{
	return (n==0)?0:(1+countbit(n&(n-1)));
}
 
void display(vector<pair<ipair,int> > &a)
{
	printf("%d",SIZE(a));
	for (int i=0;i<SIZE(a);i++) printf(" %d+%d=%d",a[i].first.first,a[i].first.second,a[i].second);
	printf("\n");
}
 
int main()
{
	int n;
	scanf("%d",&n);
	int m=0;
	for (int d=2;d<=n;d*=2,m++) for (int k=d;k<=n;k+=d) g[m].push_back(MP(MP(k-d/2,k),k));
	for (int c=2;c<=15;c++,m++) for (int k=1;k<=n;k++) if (countbit(k)==c) g[m].push_back(MP(MP(k&(k-1),k),k));
	for (m=0;SIZE(g[m])>0;m++);
	printf("%d\n",m);
	for (int i=0;i<m;i++) display(g[i]);
	int total=0;
	for (int i=0;i<30;i++) total+=SIZE(g[i]);
	printf("total = %d\n",total);
	return 0;
}