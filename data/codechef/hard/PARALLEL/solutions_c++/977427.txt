#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>
using namespace std;

typedef pair<int, int> pii;

int nSteps;
pii res[20][500];
int nRes[20];

int main() {
    int n;
    cin >> n;
    nSteps = 0;
    memset(nRes, 0, sizeof nRes);
    int step = 0;
    int bucket = 1;
    while (bucket < n) {
        nRes[step] = 0;
        for (int i = 0; i < n; i += 2 * bucket) {
            if (i + 2 * bucket > n) break;
            res[step][nRes[step]] = pii(i + bucket - 1, i + 2 * bucket - 1);
            ++nRes[step];
        }
        if(nRes[step] > 0) ++step;
        bucket *= 2;
    }
    bucket /= 2;
    bucket /= 2;
    while (bucket >= 1) {
        nRes[step] = 0;
        for (int i = 0; i < n; i += 2 * bucket) {
            if (i > 0 && i + bucket - 1 < n) {
                res[step][nRes[step]] = pii(i - 1, i + bucket - 1);
                ++nRes[step];
            }
        }
        if (nRes[step] > 0) ++step;
        bucket /= 2;
    }
    nSteps = step;
    cout << nSteps << endl;
    for (int i = 0 ; i < nSteps; ++i) {
        cout << nRes[i];
        for (int j = 0; j < nRes[i]; ++j) {
            int a = res[i][j].first;
            int b = res[i][j].second;
            ++a; ++b;
            cout << " " << a << "+" << b << "=" << b;
        }
        cout << endl;
    }
    return 0;
}
