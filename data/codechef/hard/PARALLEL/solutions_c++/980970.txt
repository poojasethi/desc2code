/* CPP Tempelate
 * @author Devashish Tyagi
 */

#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>
#include <list>

#define s(a) scanf("%d",&a)
#define ss(a,b) scanf("%d %d",&a,&b)
#define p(a) printf("%d\n",a)
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define pi pair<int,int>
#define vi vector<int>

using namespace std;
typedef long long int LL;

string convertInt(int number)
{
   stringstream ss;//create a stringstream
   ss << number;//add number to the stream
   return ss.str();//return a string with the contents of the stream
}

int main(void){
    int n;
    s(n);
    string ans;
    int total_steps = 0;
    int step = 1;
    while(2*step <= n){
	  string temp = "";
	  int count=0;
	  for(int i=step; i<=n && (i+step) <=n ; i=i+2*step){
		temp.append(" "+convertInt(i)+"+"+convertInt(i+step)+"="+convertInt(i+step));
		count++;
	  }
	  if (count != 0){
		ans.append("\n"+convertInt(count)+temp);
		total_steps++;
	  }
	  step = 2*step;
    }
    step = step/2;
    while(step>=1){
	  string temp="";
	  int count=0;
	  for(int i=2*step; i<=n && (i+step)<=n ; i = i+2*step){
		temp.append(" "+convertInt(i)+"+"+convertInt(i+step)+"="+convertInt(i+step));
		count++;
	  }
	  step = step/2;
	  if (count != 0){
		total_steps++;
		ans.append("\n"+convertInt(count)+temp);
	  }
    }
    cout<<total_steps<<ans<<endl;
}

