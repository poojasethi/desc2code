#include <stdio.h>
#define MOD 1000000007
#include<iostream>
#include<bitset>
using namespace std;

long long max(long long a,long long b)
{
    if(a>b)
	return a;
    return b;
}
long long min(long long a,long long b)
{
    if(a>b)
	return b;
    return a;
}
long long  pow(int n, long long p)
{
    if(p==0)
	return 1;
    else if(p%2)
	return (n*pow(n, p-1))%MOD;
    else
    {
	long long ans=pow(n, p/2);
	return (ans*ans)%MOD;
    }
}

int a[100000],n;
bitset<100000> done;
long long solve(int s,int e)
{
    if(s>=e || s<0 || e>n-1)
	return 1;
    if(done[s] && done[e])
	return 1;
    if(s==e-1)
	return (max(a[s],a[e])-min(a[s],a[e]));
    long long ma,mi;
    ma=mi=s;
    for(int i=s;i<=e;i++)
    {
	if(a[mi]>a[i])
	    mi=i;
	if(a[ma]<a[i])
	    ma=i;
    }
    long long prod1=pow(a[ma]-a[mi],(e-max(mi,ma)+1)*(min(mi,ma)-s+1));
    long long prod2=solve(s,max(mi,ma)-1);
    long long prod3=solve(min(mi,ma)+1,e);
    for(int i=s;i<=e;i++)
	done[i]=1;
    return (((prod1*prod2)%MOD)*prod3)%MOD;
}
int main()
{
    done.reset();
    scanf("%d",&n);
    for(int i=0;i<n;i++)
	scanf("%d",&a[i]);
    printf("%lld",solve(0,n-1));
    return 0;
}