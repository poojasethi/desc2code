#include <stdio.h>
#include<map>
#include<utility>
using namespace std;
#define MOD 1000000007
map<pair<int,int>, long long> cor;
long long max(long long a,long long b)
{
    if(a>b)
	return a;
    return b;
}
long long min(long long a,long long b)
{
    if(a>b)
	return b;
    return a;
}
long long  pow(int n, long long p)
{
    if(p==0)
	return 1;
    if(p&1)
	return (n*pow(n, p-1))%MOD;
    long long ans=pow(n, p/2);
    return (ans*ans)%MOD;
}

int a[100001];
int n;
long long solve(int s,int e)
{
    if(cor.count(make_pair(s,e)))
        return cor[make_pair(s,e)];
    if(s>=e || s<0 || e>n-1)
	return 1;
    long long ma,mi;
    ma=mi=e;
    for(int i=s;i<e;i++)
    {
	if(a[mi]>a[i])
	    mi=i;
	if(a[ma]<a[i])
	    ma=i;
    }
    long long prod1=pow((a[ma]-a[mi]),(e-max(mi,ma)+1)*(min(mi,ma)-s+1));
    long long prod2=solve(s,max(mi,ma)-1);
    long long prod3=solve(min(mi,ma)+1,e);
    long long prod4=pow((solve(min(mi,ma)+1,max(mi,ma)-1)),MOD-2);
    cor[make_pair(s,e)]=(((((prod1*prod2)%MOD)*prod3)%MOD)*prod4)%MOD;
    return cor[make_pair(s,e)];
}
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
	scanf("%d",&a[i]);
    }
    printf("%d\n",(int)solve(0,n-1));
    return 0;
}