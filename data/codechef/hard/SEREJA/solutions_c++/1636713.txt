//program SEREJA

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

int Get()
{
  char c;
  while(c=getchar(),c<'0'||c>'9');
  int X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar();
    }
  return X;
}

const int Mod=1000000007;

int A[100000],Log[100001];
int DP[17][100000];
int X[100000],Y[100000];

int Better(int X,int Y)
{
  return (A[X]>A[Y])?X:Y;
}

int Pow(int X,long long P)
{
  if(!P)
    return 1;
  int T=Pow((long long)X*X%Mod,P/2);
  if(P&1)
    T=(long long)T*X%Mod;
  return T;
}

int Solve(int L,int R)
{
  if(L>=R)
    return 1;
  int P=Log[R-L+1],Mid=Better(DP[P][L],DP[P][R-(1<<P)+1]);
  int Ans=(long long)Solve(L,Mid-1)*Solve(Mid+1,R)%Mod;
  int M=0;
  for(int i=Mid-1,Min=Mod;i>=L;i--)
    if(A[i]<Min)
      Min=A[X[M++]=i];
  X[M]=L-1;
  int N=0;
  for(int i=Mid+1,Min=Mod;i<=R;i++)
    if(A[i]<Min)
      Min=A[Y[N++]=i];
  Y[N]=R+1;
  for(int i=0,j=0;i<M;i++)
    {
      while(j<N&&A[X[i]]<=A[Y[j]])
        j++;
      Ans=(long long)Ans*Pow(A[Mid]-A[X[i]],(long long)(Y[j]-Mid)*(X[i]-X[i+1]))%Mod;
    }
  for(int i=0,j=0;i<N;i++)
    {
      while(j<M&&A[Y[i]]<A[X[j]])
        j++;
      Ans=(long long)Ans*Pow(A[Mid]-A[Y[i]],(long long)(Mid-X[j])*(Y[i+1]-Y[i]))%Mod;
    }
  return Ans;
}

int main()
{
  int N=Get();
  for(int i=0;i<N;i++)
    A[i]=Get();
  for(int i=0;i<N;i++)
    DP[0][i]=i;
  for(int i=1;i<17;i++)
    for(int j=0,k=(1<<i);k<=N;j++,k++)
      DP[i][j]=Better(DP[i-1][j],DP[i-1][k-(1<<(i-1))]);
  for(int i=1,j=0;i<=N;i++)
    {
      if((1<<(j+1))<=i)
        j++;
      Log[i]=j;
    }
  printf("%d\n",Solve(0,N-1));
  return 0;
}
