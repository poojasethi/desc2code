#include<stdio.h>
typedef unsigned long long ULL;
typedef unsigned long UL;
typedef long long LL;

#define MAX 1000000007
#define MAXN 100000

ULL pow(ULL x, ULL n)
{

	//printf("%llu,%llu\n ", x, n);
	if(n == 0)
		return 1;
	ULL sq = x*x;
	if(sq>=MAX)
		sq%=MAX;
	ULL pro = 1, res;
	res = pow(sq, n/2);
	if(n%2)
		res = res* x;
	if(res >= MAX)
		res%= MAX;
	return res;
}


ULL getPro(ULL a[], LL s, LL e)
{

	if(s==e)
		return 1;
	LL pmin = s;
	for(LL k = s+1;k<=e;k++)
		if(a[k]<a[pmin])
			pmin = k;


	ULL pro1 = 1;
	if(pmin>s)
		pro1 = getPro(a, s, pmin-1);
	ULL pro2 = 1;
	if(pmin<e)
		pro2 = getPro(a, pmin+1, e); 
	ULL pro = 1;

	ULL* b = new ULL[e-s+1];

	//b is : max value from [pmin--> s]
	//and maxval from [pmin--> e]
	b[pmin-s] = a[pmin];
	ULL max = a[pmin];
	for(LL k = pmin-1;k>=s;k--)
	{
		if(a[k] > max)
			max = a[k];
		b[k-s] = max;
	}
	max = a[pmin];
	for(LL k  = pmin+1;k<=e;k++)
	{
		if(a[k]>max)
			max = a[k];
		b[k-s] = max;
	}
	//with k as start value and max value in first half i.e. b[k-s]
	LL j = pmin-s;
	LL minpos = j;
	for(LL k = pmin-1;k>=s;k--)
	{
		for(;(j<=(e-s)) && (b[j]<b[k-s]);j++);
		pro = pro* pow(b[k-s]-a[pmin],j-minpos);
		if(pro>=MAX)
			pro%=MAX;
	}
	//with k as end balue and max value in second lanf 
	j = pmin-s;
	minpos = j;
	for(LL k = pmin+1;k<=e;k++)
	{
		for(;j>=0 && b[j]<=b[k-s];j--);
		pro = pro*pow(b[k-s]-a[pmin], minpos-j);
		if(pro>=MAX)
			pro%=MAX;
	}
	pro*=pro1;
	if(pro>=MAX)
		pro%=MAX;
	pro*=pro2;
	if(pro>=MAX)
		pro%=MAX;
	delete []b;
	return pro;
	
}

int main()
{
	UL n;
	ULL a[MAXN];
	scanf("%lu", &n);
	for(UL i = 0;i<n;i++)
	{
		scanf("%llu", &a[i]);
	}
	printf("%llu\n", getPro(a,0,n-1));
}
