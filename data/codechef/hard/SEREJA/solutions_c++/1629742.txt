#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <stdint.h>
#include <iostream>
#include <vector>
#include <set>
#include <map>
#include <limits>
using namespace std;
int DEBUG = 0;
#define LL int64_t // 64-bit long long int, use %I64d for scan and printf
#define MOD 1000000007
double Min(double a, double b) {
  return (a < b ? a : b);
}
double Max(double a, double b) {
  return (a > b ? a : b);
}
double Abs(double a) {
  return (a >= 0 ? a : -a);
}

int A[100001];
int M[100001]; // M[i]: max(A[i]...A[j]);
int m[100001]; // m[i]: min(A[i]...A[j]);
LL  prod[100001];

int main(int argc, char **argv) {
  DEBUG = (argc>=2) ? atoi(argv[1]) : 0;
  int N;
  scanf("%d", &N);
  for(int i=1; i<=N; i++) {
    cin >> A[i];
  }
  LL ans=1;
  M[1]=m[1]=A[1];
  prod[0]=1;
  for(int j=2; j<=N; j++) {
    int k1=j, k2=j;
    M[j] = m[j] = A[j];
    for(int i=j-1; i>=1; i--) {
      if(M[i]<A[j]) {
        M[i] = A[j];
        k1 = i;
      } else {
	break;
      }
    }
    for(int i=j-1; i>=1; i--) {
      if(m[i]>A[j]) {
        m[i] = A[j];
        k2 = i;
      } else {
	break;
      }
    }
    int k = Min(j-1, Min(k1, k2));
    for(int i=k; i<=j-1; i++) {
      prod[i] = (prod[i-1]*LL(M[i]-m[i])) % MOD;
    }
    ans = (ans * prod[j-1]) % MOD;
    if(DEBUG) {
      printf("\nj= %d, k1= %d, k2= %d, k= %d, ans= %ld\n", j, k1, k2, k, ans);
      for(int i=1; i<=j; i++) {
        printf("i= %d, M= %d m= %d, prod= %ld\n", i, M[i], m[i], prod[i-1]);
      }
    }
  }
  cout << ans << endl;
  return 0;
}
// /bin/rm -fv a.out; g++ SEREJA.cpp -o a.out; cat SEREJA.in1 | ./a.out 1
     
