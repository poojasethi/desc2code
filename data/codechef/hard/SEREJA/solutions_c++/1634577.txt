#include <cstdio>
#include <algorithm>
using namespace std;

#define MAXN 100005
#define MOD  1000000007

const int INF = 1 << 30;

int n, a[MAXN];
int M[MAXN], m[MAXN];
long long proddiff[MAXN];

int main() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &a[i]);
    long long ans = 1;
    M[0] = INF;
    m[0] = -INF;
    proddiff[0] = 1;
    M[1] = m[1] = a[1];
    proddiff[1] = 0;
    for (int k = 2; k <= n; k++) {
        int j = k-1;;
        while (M[j] < a[k])
            M[j--] = a[k];
        while (m[j] > a[k])
            m[j--] = a[k];
        for (int i = j+1; i < k; i++)
            proddiff[i] = (proddiff[i-1] * (M[i] - m[i])) % MOD;
        ans = (ans * proddiff[k-1]) % MOD;
        M[k] = m[k] = a[k];
        proddiff[k] = 0;
    }
    printf("%lld\n", ans);
}
