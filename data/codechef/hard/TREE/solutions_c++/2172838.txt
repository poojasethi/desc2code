//program TREE

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

int Get()
{
  char c;
  while(c=getchar(),(c<'0'||c>'9')&&(c!='-'));
  bool Flag=(c=='-');
  if(Flag)
    c=getchar();
  int X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar();
    }
  return Flag?-X:X;
}

void Output(int X)
{
  if(X<0)
    {
      putchar('-');
      X=-X;
    }
  int Len=0,Data[10];
  while(X)
    {
      Data[Len++]=X%10;
      X/=10;
    }
  if(!Len)
    Data[Len++]=0;
  while(Len--)
    putchar(Data[Len]+48);
  putchar('\n');
}

const int Mod=1000000007;

long long Pow(long long A,long long B)
{
  if(!B)
    return 1;
  long long T=Pow(A*A%Mod,B/2);
  if(B&1)
    T=T*A%Mod;
  return T;
}

int main()
{
  int N=Get(),K=Get();
  if(K==1)
    Output(Pow(N,N-2));
  else if(K==2)
    Output(Pow(N,N-2)*Pow(N-1,N)%Mod*Pow(2,N*2-2)%Mod);
  else
    Output(Pow(N,N-2)*Pow(N-1,N*2)%Mod*Pow(3,N*3-2)%Mod);
  return 0;
}
