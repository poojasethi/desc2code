#include <string>
#include <sstream>
#include <fstream>
#include <bitset>
#include <algorithm>
#include <vector>
#include <iostream>
#include <numeric>
#include <map>
#include <set>
#include <cmath>
#include <climits>
using namespace std;

static const int MOD = 1e9 + 7;

int64_t modpow(int64_t n, int64_t k) {
	int64_t x = 1;
	for (; k > 0; k >>= 1) {
		if (k & 1)
			x = x * n % MOD;
		n = n * n % MOD;
	}
	return x;
}

int calc(int n, int k) {
	if (k == 1)
		return modpow(n, n - 2);
	if (k == 2)
		return modpow(2 * n, n - 2) * modpow(2 * n - 2, n) % MOD;
	return modpow(k * n, n - 2) * modpow(k * (n - 1), (k - 1) * n) % MOD;
}

void solve() {
	int n, k;
	scanf("%d%d", &n, &k);

	printf("%d\n", calc(n, k));
}

int main() {
	solve();
	return 0;
}
