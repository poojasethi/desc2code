#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <algorithm>

using namespace std;

typedef long long LL;

const int mod = 1000000007;
const int maxn = 1005;
const int maxk = 3;

LL mulmod(LL a, LL b, LL p)
{
	LL y = (LL)((double)a*(double)b/p+0.5);
	LL r = (a*b-y*p)%p;
	if(r<0)
	{
		r += p;
	}
	return r;
}
LL powmod(LL a, LL b)
{
	LL r=1;
	while(b)
	{
		if(b&1)
		{
			r=mulmod(r,a,mod);
		}
		if(b/=2)
		{
			a=mulmod(a,a,mod);
		}
	}
	return r;
}

inline LL inverse(LL a)
{
	return powmod(a, mod-2);
}

static LL n, k;

int main()
{
	scanf("%lld%lld", &n, &k);	
	long long target = powmod(n, n - 2) * powmod(n - 1, (k - 1) * n) % mod * powmod(k, k * n - 2) %mod;
	printf("%ld\n", target);
	return 0;
}
