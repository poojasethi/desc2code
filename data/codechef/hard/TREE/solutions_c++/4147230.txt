#include <bits/stdc++.h>
using namespace std;
//fast input
template<class T>
inline T scan_int() {int ip=getchar_unlocked(),flag=1;T ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=(ret<<3)+(ret<<1)+ip-'0';return flag*ret;}
#define scan_d scan_int<int>
#define scan_ld scan_int<long int>
#define scan_lld scan_int<long long int>
inline void scan_str(char *str){register char c = 0;register int i = 0;while (c < 33)c = getchar_unlocked();while (c != '\n'){str[i] = c;c = getchar_unlocked();i = i + 1;}str[i] = '\0';}
//end of fast input
//fast output
char output_buffer[21];
template <class T>
inline void print_int(T n) {if(n<0){n=-n;putchar_unlocked('-');}int i=21;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<21);}
#define print_d print_int<int>
#define print_ld print_int<long int>
#define print_lld print_int<long long int>
template <class T>
inline void println_int(T n) {print_int(n);putchar_unlocked('\n');}
#define println_d println_int<int>
#define println_ld println_int<long int>
#define println_lld println_int<long long int>
template <class T>
inline void printsp_int(T n,char ch) {print_int(n);putchar_unlocked(ch);}
#define printsp_d printsp_int<int>
#define printsp_ld printsp_int<long int>
#define printsp_lld printsp_int<long long int>
inline void print_str(char *str){char* temp=str;while((*temp)!='\0'){putchar_unlocked(*temp);temp++;}}
//end of fast output

long long mod;
inline long long multiply(long long a,long long b) // O(1) for (a*b)%m
{
	a %= mod;
	b %= mod;
	long double res = a;
	res *= b;
	long long c = (long long)(res / mod);
	a *= b;
	a -= c * mod;
	a %= mod;
	if (a < 0) a += mod;
		return a;
}
 
inline long long power(long long a,long long b)
{
	if(a==1 || b<=0)
		return 1;
	if(a==0)
		return 0;
	long long ans=1;
	while(b)
	{
		if(b&1)
		{
			ans=multiply(ans,a);
		}
		a=multiply(a,a);
		b>>=1;
	}
	return ans;
}

int main()
{
	int n,k;
	mod = 1000000007L;
	n = scan_d();
	k = scan_d();
	println_lld(multiply(power(k*n,(n-2)),power(k*(n-1),(k-1)*n)));
	return 0;
}