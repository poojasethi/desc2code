#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <algorithm>

using namespace std;

typedef long long LL;

const int mod = 1000000007;
const int maxn = 1005;
const int maxk = 3;

inline LL powmod(LL a, LL n)
{
	int p=1;
	for(; n;)
	{
		if(n%2)
		{
			p=LL(p)*a%mod;
		}
		if(n/=2)
		{
			a=LL(a)*a%mod;
		}
	}
	return p;
}

inline LL inverse(LL a)
{
	return powmod(a, mod-2);
}

static LL n, k;

int main()
{
	scanf("%lld%lld", &n, &k);	
	long long target = powmod(n, n - 2) * powmod(n - 1, (k - 1) * n) % mod * powmod(k, k * n - 2) %mod;
	printf("%ld\n", target);
	return 0;
}
