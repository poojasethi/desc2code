/* *****
 
 copyright  $
 
******     */
 
 
#include<stdio.h>
#include<string.h>
#include<list>
#include<queue>
#include<assert.h>
#include<set>
#include<stack>
#include<math.h>
#include<iostream>
using namespace std;
#define rd readInt()
#define MAXX(a,b) ((a)>(b)?(a):(b))
#define MINN(a,b) (a)<(b)?(a):(b)
#define FOR(a,b) for(a=0;a<b;a++)
#define sdd(a) scanf("%lld",&a);
#define PUTCHAR putchar_unlocked
inline void writeInt(long long x)
{
int i = 20;
char buf[21];
// buf[10] = 0;
buf[20] = '\n';
 
do
{
buf[--i] = x % 10 + '0';
x/= 10;
}while(x);
do
{
PUTCHAR(buf[i]);
} while (buf[i++] != '\n');
}
#define gc getchar_unlocked
inline long long readInt(){
long long n = 0, c = gc(), f = 1;
while(c != '-' && (c < '0' || c > '9')) c = gc();
if(c == '-') f = -1, c = gc();
while(c >= '0' && c <= '9')
n = (n<<3) + (n<<1) + c - '0', c = gc();
return n * f;
}
long int arr[502][502];
long int temp1[502][502];
long int temp3[510][510];
int main()
{
int t;
t = rd;
while(t--)
{
int n,i,j;
n = rd;
for(i=0;i<n;i++)
{
for(j=0;j<=i;j++)
{
arr[i][j] = rd;
temp1[i][j] = arr[i][j];
}
}
memset(temp3,0,sizeof(temp3));
temp3[0][0] = arr[0][0];
//cout<<"here"<<endl;
for(i=1;i<n;i++)
{
for(j=0;j<=i;j++)
{
if(j==0)
{
temp3[i][j] = MAXX(temp3[i-1][j],temp3[i-1][j+1]) + arr[i][j];
}
else
temp3[i][j] = MAXX(MAXX(temp3[i-1][j],temp3[i-1][j+1]),temp3[i-1][j-1])  + arr[i][j];
}
}
long long sum1 = temp3[n-1][0];
//cout<<"here"<<" "<<sum1<<endl;
j=0;
for(i=n-1;i>0;i--)
{
if(j==0)
{
long int tt = temp3[i][j] - arr[i][j];
arr[i][j] =0;
if(temp3[i-1][j+1] == tt)
{
j++;
}
 
}
else
{
long int tt = temp3[i][j] - arr[i][j];
arr[i][j] =0;
if(temp3[i-1][j+1] == tt)
{
j++;
}
else if(temp3[i-1][j-1] == tt)
{
j--;
}
}
//cout<<"df"<<i<<endl;
}
//cout<<"hhh"<<endl;
arr[i][j] = 0;
memset(temp3,0,sizeof(temp3));
temp3[n-1][n-1] = arr[n-1][n-1];
 
for(j=n-2;j>=0;j--)
{
for(i=j;i<n;i++)
{
if(i== 0)
{
temp3[i][j] = MAXX(temp3[i][j+1],temp3[i+1][j+1]) + arr[i][j];
}
else
{
temp3[i][j] = MAXX(MAXX(temp3[i][j+1],temp3[i-1][j+1]),temp3[i+1][j+1]) + arr[i][j];
}
 
}
}
sum1 = sum1 +  temp3[n-1][0];
long int sum2;
//cout<<sum1<<endl;
//**** second case*/
memset(temp3,0,sizeof(temp3));
temp3[n-1][n-1] = temp1[n-1][n-1];
 
for(j=n-2;j>=0;j--)
{
for(i=j;i<n;i++)
{
if(i== 0)
{
temp3[i][j] = MAXX(temp3[i][j+1],temp3[i+1][j+1]) + temp1[i][j];
}
else
{
temp3[i][j] = MAXX(MAXX(temp3[i][j+1],temp3[i-1][j+1]),temp3[i+1][j+1]) + temp1[i][j];
}
 
}
}
 
 
 
sum2 = temp3[n-1][0];
i = n-1;
for(j=0;j<n-1;j++)
{
if(i==n-1)
{
long int tt = temp3[i][j] - temp1[i][j];
temp1[i][j] = 0;
if(temp3[i-1][j+1] == tt)
{
i--;
}
 
}
else
{
long int tt = temp3[i][j] - temp1[i][j];
temp1[i][j] = 0;
if(temp3[i-1][j+1] == tt)
{
i--;
}
else if(temp3[i+1][j+1] == tt)
{
i++;
}
 
}
}
memset(temp3,0,sizeof(temp3));
temp3[0][0] = temp1[0][0];
//cout<<"here"<<endl;
for(i=1;i<n;i++)
{
for(j=0;j<=i;j++)
{
if(j==0)
{
temp3[i][j] = MAXX(temp3[i-1][j],temp3[i-1][j+1]) + temp1[i][j];
}
else
temp3[i][j] = MAXX(MAXX(temp3[i-1][j],temp3[i-1][j+1]),temp3[i-1][j-1])  + temp1[i][j];
}
}
//cout<<sum2<<" "<<temp3[0][0]<<endl;
sum2 = sum2 + temp3[n-1][0];
cout<<MAXX(sum1,sum2)<<endl;
}
return 0;
}
 
