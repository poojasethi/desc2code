#include <cstring>
#include <cstdio>
#include <algorithm>
using namespace std;
int t, n;
int a[600][600];
int po[555][555];
int ma[555][555];
int d[555];

int main() {
	//freopen("in.txt", "r", stdin);
	scanf("%d", &t);
	while (t--) {
		scanf("%d", &n);
		for (int i=1; i<=n; i++)
			for (int j=1; j<=i; j++)
				scanf("%d", &a[i][j]);
		d[0] = 0;
		for (int i=1; i<n; i++) {
			d[i] = d[i-1]+a[n-i+1][i];
		}
		memset(po, 0, sizeof po);
		memset(ma, 0, sizeof ma);
		po[1][1] = a[1][1];
		for (int i=2; i<=n; i++) {
			for (int j=1; j<=i; j++) {
				po[i][j] = max(max(po[i-1][j-1],po[i-1][j]), po[i-1][j+1]) + a[i][j];
			}
		}
		ma[n][n] = a[n][n];
		for (int j=n-1; j>0; j--) {
			for (int i=n; i>=j; i--) {
				ma[i][j] = max(max(ma[i][j+1], ma[i-1][j+1]), ma[i+1][j+1]) + a[i][j];
			}
		}
		int ans = 0;
		for (int i=1; i<n; i++)
			for (int j=1; j<n; j++) {
				ans = max(ans, d[max(i,j)] + max(po[n-i][i-1], po[n-i][i]) + max(ma[n-j+1][j+1], ma[n-j+2][j+1]));
				//printf("%d %d %d\n", d[max(i,j)] , max(po[n-i][i-1], po[n-i][i]) , max(ma[n-j+1][j+1], ma[n-j+2][j+1]));
			}
		printf("%d\n", ans);
	}
}