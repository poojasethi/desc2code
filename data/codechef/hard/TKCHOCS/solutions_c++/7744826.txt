#include <bits/stdc++.h>

#define rep(i,n) for(i=1;i<=n;i++)
#define Rep(i,n) for(i=0;i<n;i++)
#define For(i,a,b) for(i=a;i<=b;i++)

#define pb(x) push_back(x)
#define sz(x) x.size()

#define mem(ara,val) memset(ara,val,sizeof(ara))
#define eps 1e-9

#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define siii(x,y,z) scanf("%d %d %d",&x,&y,&z)
#define sl(x) scanf("%lld",&x)
#define sll(x,y) scanf("%lld %lld",&x,&y)
#define slll(x,y,z) scanf("%lld %lld %lld",&x,&y,&z)
#define ss(ch) scanf("%s",ch)
#define pi(x) printf("%d",x)
#define pii(x,y) printf("%d %d",x,y)
#define piii(x,y,z) printf("%d %d %d",x,y,z)
#define pl(x) printf("%lld",x)
#define pll(x,y) printf("%lld %lld",x,y)
#define plll(x,y,z) printf("%lld %lld %lld",x,y,z)
#define ps(ch) printf("%s",ch)
#define Afridi 0
#define NL printf("\n")
#define debug(x) printf("wow  %d !!\n",x)
#define Max 510
#define INF 1000000000

typedef long long LL;
typedef unsigned long long ULL;

using namespace std;

int n;
int visit[Max][Max],dp[Max][Max],CS,ara[Max][Max];

inline bool oka(int x,int y)
{
    if(x <= 0 || x > n)return 0;
    else
    {
        if(y <= 0)return 0;
        if(y > x)return 0;
        return 1;
    }
}

int fun1(int x,int y,int f)
{
    if(oka(x,y) == 0)return -INF;
    if(x == n && y == 1)return 0;
    if(f == 1 && x + y - 1 > n)return -INF;
    else if(f == 0 && x + y - 1 >= n)return -INF;

    if(visit[x][y] == CS)return dp[x][y];

    //if(f == 1)printf("at %lld %lld\n",x,y);

    int p1 = 0,p2 = 0,p3 = 0;
    p1 = ara[x][y] + fun1(x+1,y-1,f);
    p2 = ara[x][y] + fun1(x+1,y,f);
    p3 = ara[x][y] + fun1(x+1,y+1,f);

    visit[x][y] = CS;
    return dp[x][y] = max(max(p1,p2),p3);
}

int fun2(int x,int y,int f)
{
    if(oka(x,y) == 0)return 0;
    if(x == n && y == 1)return 0;
    if(f == 1 && x + y - 1 < n)return -INF;
    else if(f == 0 && x + y - 1 <= n)return -INF;

    if(visit[x][y] == CS)return dp[x][y];

    int p1 = 0,p2 = 0,p3 = 0;
    p1 = ara[x][y] + fun2(x-1,y-1,f);
    p2 = ara[x][y] + fun2(x,y-1,f);
    p3 = ara[x][y] + fun2(x+1,y-1,f);

    visit[x][y] = CS;
    return dp[x][y] = max(max(p1,p2),p3);
}

int main()
{
    int t,T,i,j;
    si(T);
    rep(t,T)
    {
        si(n);
        rep(i,n)
        {
            rep(j,i)si(ara[i][j]);
        }
        int p1,p2;
        int mx = 0;
        CS++;p1 = fun1(1,1,1);
        CS++;p2 = fun2(n,n,0);
        //printf("p1 %lld p2 %lld\n",p1,p2);
        mx = max(mx,p1 + p2);

        CS++;p1 = fun1(1,1,0);
        CS++;p2 = fun2(n,n,1);
        //printf("p1 %lld p2 %lld\n",p1,p2);
        mx = max(mx,p1 + p2);

        CS++;p1 = fun1(1,1,0);
        CS++;p2 = fun2(n,n,0);
        //printf("p1 %lld p2 %lld\n",p1,p2);
        mx = max(mx,p1 + p2);

        pi(mx + ara[n][1]);NL;
    }
    return 0;
}
