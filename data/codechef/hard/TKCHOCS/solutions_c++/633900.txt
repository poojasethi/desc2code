#include<cstdio>
#include<cstring>
#include<cmath>
#include<cctype>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<numeric>
#include<fstream>
using namespace std;
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define memo(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define all(a) a.begin(),a.end()
#define eps (1e-9)
#define inf (1<<29)
#define i64 long long
#define u64 unsigned i64
#define MAX 505

int dp[MAX][MAX],a[MAX][MAX];
int main(){
	int i,j,t,n;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		for(i = 0;i<n;i++){
			for(j = 0;j<=i;j++){
				scanf("%d",&a[i][j]);
			}
		}
		dp[0][0] = a[0][0];
		for(i = 1;i<n-1;i++){	
			for(j = 0;i+j<n-1;j++){
				dp[i][j] = 0;
				if(i-1>=j)
					dp[i][j] = dp[i-1][j];
				if(j)
					dp[i][j] = max(dp[i][j],dp[i-1][j-1]);
				if(j+i<n-1)
					dp[i][j] = max(dp[i][j],dp[i-1][j+1]);
				dp[i][j]+=a[i][j];
			}
		}
		dp[n-1][n-1] = a[n-1][n-1];
		for(i = n-2;i>0;i--){	
			for(j = n-1;i+j>=n;j--){
				dp[j][i] = 0;
				if(j>=i+1)
					dp[j][i] = dp[j][i+1];
				if(j<n-1)
					dp[j][i] = max(dp[j][i],dp[j+1][i+1]);
				if(j+i>=n)
					dp[j][i] = max(dp[j][i],dp[j-1][i+1]);
				dp[j][i]+=a[j][i];
			}
		}
		dp[n-1][0] = a[n-1][0];
		int ans = dp[n-2][0]+dp[n-1][1]+a[n-1][0],res;

		for(i = n-2,j = 1;i>=j;i--,j++){
			dp[i][j]=dp[i+1][j-1] + a[i][j];
			res = dp[i-1][j-1];
			if(i-1>=j)
				res = max(res,dp[i-1][j]);
			if(i-1>=j+1 && i+j<n-1)
				res = max(res,dp[i-1][j+1]);
			res+=dp[i][j]+dp[n-1][1];
			ans = max(ans,res);

			res = dp[i+1][j+1];
			if(i>=j+1)
				res = max(res,dp[i][j+1]);
			if(i-1>=j+1 && i+j>=n)
				res = max(res,dp[i-1][j+1]);
			res+=dp[i][j]+dp[n-2][0];
			ans = max(ans,res);
		}
		printf("%d\n",ans);
	}
	return 0;
}