#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;


/*
int max(int a,int b)
{
	return a>b?a:b;
}

*/

int dp[2][510][510];
int a[510][510];

int main()
{
    int i,T,n,j,x,y,now;
    vector< pair<int,int> > v;

    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	scanf("%d",&T);

	while(T--)
	{
        scanf("%d",&n);


        memset(a,-1,sizeof(a));
		memset(dp,0,sizeof(dp));







        for(i=1;i<=n;i++)
        for(j=1;j<=i;j++)
        scanf("%d",&a[i][j]);




        v.clear();
		i=n;
        j=1;
		int sum[510];
        sum[0]=0;
        while(a[i][j]!=-1)
        {
            v.push_back(make_pair(i,j));
            sum[v.size()]=sum[v.size()-1]+a[i][j];


			i--;
            j++;

         //   cout<<i<<" "<<j<<endl;
        }




        for(i=1;i<=n;i++)
        for(j=1;j<=i;j++)
		{
			dp[0][i][j]=a[i][j]+max(0,max( dp[0][i-1][j], max( dp[0][i-1][j-1],dp[0][i-1][j+1]  )  ));
		}


        for(j=n;j>=1;j--)
        for(i=j;i<=n;i++)
		{
			dp[1][i][j]=a[i][j]+max(0,max( dp[1][i][j+1], max( dp[1][i+1][j+1],dp[1][i-1][j+1]  )  ));
		}




        i=n;
        j=1;



        //while(1);


        int ans=0;
        for(i=0;i<v.size();i++)
        {
            x=v[i].first;
            y=v[i].second;

            now=(max(dp[0][x-1][y],dp[0][x-1][y-1])+max(dp[1][x+1][y+1],dp[1][x][y+1]));
            now+=sum[i+1];
            ans=max(ans,now);

			now=(dp[0][x][y]+max(dp[1][x+1][y+1],dp[1][x][y+1]));
            now+=sum[i];
			ans=max(ans,now);

			now=(max(dp[0][x-1][y],dp[0][x-1][y-1])+dp[1][x][y]);
            now+=sum[i];
            ans=max(ans,now);


        //    cout<<now<<endl;


        }

        printf("%d\n",ans);


	}
	return 0;
}

