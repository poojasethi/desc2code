#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<string>
#include<string.h>
#include<cstring>
#include<stack>
#include<queue>
#include<cassert>

using namespace std;

#define LL long long int 
#define PII pair<int,int> 
#define PB push_back
#define MP make_pair
#define INF 1000000000
LL a[600][600],dp1[600][600],dp2[600][600],sum[600];
int main(){
	LL t,i,n,j,ans;
	scanf("%lld",&t);
	while(t--){
		memset(dp1,0,sizeof(dp1));
		memset(dp2,0,sizeof(dp2));
		scanf("%lld",&n);
		for(i=1;i<=n;i++){
			for(j=1;j<=i;j++){
				scanf("%lld",&a[i][j]);
			}
		}
		dp1[1][1]=a[1][1];
		dp2[n][n]=a[n][n];
		for(i=2;i<=n;i++){
			for(j=1;j<=i;j++){
				if(j==n-i+1)
					break;
				  dp1[i][j]=a[i][j]+max(dp1[i-1][j-1],max(dp1[i-1][j],dp1[i-1][j+1]));
			}
		}
		for(j=n-1;j>=1;j--)
			for(i=n;i>=j;i--){
				if(i==n-j+1)
					break;
				dp2[i][j]=a[i][j]+max(dp2[i-1][j+1],max(dp2[i][j+1],dp2[i+1][j+1]));
			}
		
		for(i=1;i<=(n+1)/2;i++){
			sum[i]=sum[i-1]+a[n-i+1][i];
			dp1[n-i+1][i]=a[n-i+1][i]+max(dp1[n-i][i-1],dp1[n-i][i]);
			dp2[n-i+1][i]=a[n-i+1][i]+max(dp2[n-i+1][i+1],dp2[n-i+2][i+1]);
		}
		ans=0;
		for(i=1;i<=(n+1)/2;i++){
			for(j=1;j<=(n+1)/2;j++){
				ans=max(ans,dp1[n+1-i][i]+dp2[n-j+1][j]-a[n+1-i][i]-a[n-j+1][j]+sum[max(i,j)]);
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}

