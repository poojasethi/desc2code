#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<complex>
#include<string>
#include<utility>
#include<numeric>
#include<iterator>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cctype>
#include<climits>
#include<ctime>
#include<cstring>

#define ALL(c)  c.begin(), c.end()
#define TR(c, it)   for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define MAX(a, b)   ((a) > (b) ? (a) : (b))
#define gc  getchar_unlocked
#define ll long long int
#define ull unsigned long long int
#define inf INT_MAX
#define mininf INT_MIN
#define pb push_back
#define mp  make_pair
#define time   QueryPerformanceCounter
#define qp  QuadPart
#define LI LARGE_INTEGER
#define PI  3.14159265358979323846264338327950288

using namespace std;

//inline void ifast(int &x)
//{
//    register int c = gc();
//    x = 0;
//    int neg = 0;
//    for(; ((c<48 || c>57) && c != '-'); c = gc());
//    if(c=='-')
//    {
//        neg = 1;
//        c = gc();
//    }
//    for(; c>47 && c<58 ; c = gc())
//    {
//        x = (x<<1) + (x<<3) + c - 48;
//    }
//    if(neg)
//        x = -x;
//}

int main()
{
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int k;
        scanf("%d", &k);
        ll ans = 0;
        FOR(i, 0, k)
        {
            int n;
            scanf("%d", &n);
            vector<int> arr(n);
            FOR(i, 0, n)
                scanf("%d", &arr[i]);
            sort(ALL(arr));
            arr.erase(unique(ALL(arr)), arr.end());
            ll value = (1LL << 50);
            ll res = (arr[0] % 2 == 0) ? value : -value;
            int sz = arr.size();
            bool change = false;
            FOR(i, 1, sz)
            {
                if((arr[i] % 2) != (arr[i-1] % 2))
                    change = true;
                if(change)
                    value >>= 1;
                res += (arr[i] % 2 == 0) ? value : -value;
            }
            ans += res;
        }
        if(ans > 0)
            printf("EVEN\n");
        else if(ans < 0)
            printf("ODD\n");
        else
            printf("DON'T PLAY\n");
    }
    return 0;
}
