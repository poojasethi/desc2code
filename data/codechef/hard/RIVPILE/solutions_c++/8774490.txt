#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#define fi first
#define se second
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
const int N=255;
int T;
struct cir{int R,C;}a[N],b[N];
inline bool operator <(const cir &a,const cir &b){if(a.R==b.R)return a.C<b.C;return a.R<b.R;}
int x[N],y[N];
LL dis[N][N];
int fu[N][N][N];
int code[N][N];
LL d[N*N];
int cnt=0;
int n,m,w;

set<pair<LL,int> >gan;
bool vis[N*N];
void Main(){
	scanf("%d%d%d",&n,&m,&w);
	rep(i,1,n)scanf("%d%d",&x[i],&y[i]);
	rep(i,1,m)scanf("%d%d",&a[i].R,&a[i].C);
	sort(a+1,a+1+m);
	
	int tot=0;
	rep(i,1,m){
		while(tot&&b[tot].C>=a[i].C)tot--;
		b[++tot]=a[i];
	}
	m=tot;
	rep(i,1,m)a[i]=b[i];
	
	rep(i,1,n)rep(j,1,n)dis[i][j]=(x[i]-x[j])*1ll*(x[i]-x[j])+(y[i]-y[j])*1ll*(y[i]-y[j]);
	rep(i,1,n)rep(j,1,n){
		int b=m;
		rep(k,1,m){
			while((b>1)&&1ll*(a[b-1].R+a[k].R)*(a[b-1].R+a[k].R)>=dis[i][j])b--;
			if((a[b].R+a[k].R)*1ll*(a[b].R+a[k].R)<dis[i][j])fu[i][j][k]=-1;
			else fu[i][j][k]=b;
		}
	}
	cnt=0;
	gan.clear();
	rep(i,1,n)rep(j,1,m)code[i][j]=++cnt;
	rep(i,1,cnt)d[i]=(LL)(1e18);
	rep(i,1,n)rep(j,1,m)if(y[i]<=a[j].R){
		//printf("__%d %d\n",i,j);
		d[code[i][j]]=a[j].C;
		gan.insert(pair<LL,int>(d[code[i][j]],code[i][j]));
	}
	memset(vis,0,sizeof vis);
	while(gan.size()){
		set<pair<LL,int> >::iterator it=gan.begin();
		pair<LL,int>ri=*it;
		gan.erase(ri);
		if(vis[ri.se])continue;
		vis[ri.se]=1;
		
		int u,v;v=ri.se%m;
		if(v==0)v=m;
		u=(ri.se-1)/m+1;
		
		//printf("%d %d %lld\n",x[u],y[u],ri.fi);
		
		if(y[u]+a[v].R>=w){
			printf("%lld\n",ri.fi);
			return;
		}
		
		rep(i,1,n)if(fu[u][i][v]!=-1){
			int gg=code[i][fu[u][i][v]];
			if(d[gg]>ri.fi+a[fu[u][i][v]].C){
				d[gg]=ri.fi+a[fu[u][i][v]].C;
				gan.insert(pair<LL,int>(d[gg],gg));
			}
		}
		
		if(v!=m){
			int gg=code[u][v+1];
			if(d[gg]>ri.fi+a[v+1].C-a[v].C){
				d[gg]=ri.fi+a[v+1].C-a[v].C;
				gan.insert(pair<LL,int>(d[gg],gg));
			}
		}
	}
	printf("impossible\n");
}
int main(){
	scanf("%d",&T);
	while(T--)Main();
	return 0;
}





