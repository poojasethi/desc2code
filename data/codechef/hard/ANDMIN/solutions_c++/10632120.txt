#include<bits/stdc++.h>
using namespace std;
#define MAXN 100011
struct info
{
	int bits[32];
	int mini;
};
struct info st[4*MAXN];
int A[MAXN];
void constr(int in,int low,int high)
{
   int i;
	if(low==high)
	{		int num = A[low], i = 0;
		while(num) {
			
			st[in].bits[i] = (num&1);
			num >>= 1; i++;
		}

      st[in].mini=A[low];
      return ;
	}
	int mid=((low+high)>>1);
	constr(2*in+1,low,mid);
	constr(2*in+2,mid+1,high);
	for(i=0;i<32;i++)
	{
	st[in].bits[i]=st[2*in+1].bits[i] | st[2*in+2].bits[i] ;
	}
	st[in].mini=min(st[2*in+1].mini,st[2*in+2].mini);
}
int query(int in,int low,int high,int qs,int qe)
{
  if(qs<=low && qe>=high)
  {
  return st[in].mini;
  }	
  if(qe<low || qs>high || qs>qe)
  {
  return INT_MAX;
  }
  int mid=(low+high)>>1;
  return min(query(2*in+1,low,mid,qs,qe),query(2*in+2,mid+1,high,qs,qe));
}
void update(int in,int low,int high,int qs,int qe,int val)
{
	if(high<qs || low>qe || low>high)
	{
	return;
	}
	int i,flag=0;
	for(i=0;i<=31;i++)
	{
	 if(st[in].bits[i] && !((val>>i)&1))
	 {
	 flag=1;
	 break;
	 }
	}
	if(!flag)
	{
	return;
	}

	if(low==high)
	{
	for(i=0;i<32;i++)
	{
	st[in].bits[i] &= ((val>>i)&1);
	}
	st[in].mini &= val;
	return;
	}
	int mid=(low+high)>>1;
	update(2*in+1,low,mid,qs,qe,val);
	update(2*in+2,mid+1,high,qs,qe,val);

	for(i=0;i<32;i++)
	{
	st[in].bits[i]= (st[2*in+1].bits[i] | st[2*in+2].bits[i]);
	}
	st[in].mini = min(st[2*in+1].mini,st[2*in+2].mini);
}
int main()
{
	ios::sync_with_stdio(0);
    int n,m;
    int i,j,k,l;
    scanf("%d %d",&n,&m);
    for(i=0;i<n;i++)
    {
       scanf("%d",&A[i]);
    }
    constr(0,0,n-1);
	for(i=0;i<m;i++)
	{
	  int q,l,r;
	  scanf("%d %d %d",&q,&l,&r);
	  if(q==0)
	  {
	  printf("%d\n",query(0,0,n-1,l-1,r-1));
	  }
	  else
	  {
	  int x;
	  scanf("%d",&x);
	  update(0,0,n-1,l-1,r-1,x);
	  }
	}
	return 0;
}