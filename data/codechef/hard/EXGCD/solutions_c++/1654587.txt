#include <stdio.h>

#define MAX 200010
#define INF MAX
#define MOD 1000000007LL

long long A[5], B[5];
int phi[MAX];

long long Min(long long a, long long b)
{
	return a<b?a:b;
}

long long Gcd(long long a, long long b)
{
	return b==0?a:Gcd(b,a%b);
}

void PreProcess()
{
	int i, j;
	for (i=0; i<MAX; i++)
		phi[i] = i;
	
	for (i=2; i<MAX; i++)
	{
		if (phi[i] != i)
			continue;
		phi[i]--;
		for (j=i+i; j<MAX; j+=i)
		{
			phi[j] /= i;
			phi[j] *= (i-1);
		}
	}
}

long long modPow(long long a, long long b)
{
	long long res = 1, prod = a%MOD;
	while (b>0)
	{
		if (b%2 == 1)
			res = (res*prod)%MOD;
		b /= 2;
		prod = (prod*prod)%MOD;
	}
	return res;
}

int main()
{
	int T, K, i, j;
	long long minB, P, Q, N;
	long long tmp, g, invQ;
	
	PreProcess();
	scanf("%d", &T);
	while (T--)
	{
		minB = INF;
		scanf("%d", &K);
		for (i=0; i<K; i++)
		{
			scanf("%lld %lld", &A[i], &B[i]);
			minB = Min(minB, B[i]);
		}
		
		Q = 1;
		for (i=0; i<K; i++)
			Q = (Q* (B[i] - A[i] + 1))%MOD;
		P = 0;
		for (i=1; i<=minB; i++)
		{
			tmp = phi[i];
			for (j=0; j<K; j++)
				tmp = (tmp * (B[j]/i - (A[j]-1)/i) )%MOD;
			P = (P + tmp)%MOD;
		}
		/*
		if (P == Q)
		{
			printf("-1\n");
			continue;
		}
		*/
		
		g = Gcd(P,Q);
		P /= g, Q /= g;
		invQ = modPow(Q,MOD-2);
		N = ((MOD-P%MOD)*invQ)%MOD;
		printf("%lld\n", N);
	}
	
	return 0;
}
