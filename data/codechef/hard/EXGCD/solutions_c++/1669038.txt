#include <cstdio>
#include <algorithm>
#include <vector>
#include <iostream>
#include <string>
#include <string.h>
#include <cmath>
#include <iomanip>
#include <set>
#include <map>

#define X first
#define Y second

using namespace std;

int sieve[200100], f[200100];
long long base=1000000007;
int a[110], b[110];
void precalc()
{
     for (int i=2; i<=200000; i++)
     {
         if ( sieve[i]==0 )
         {
            int x=i;
            while (x<=200000)
            {
                  if ( sieve[x]==0 )
                     sieve[x]=i;
                  x+=i;      
            }     
         }    
     }     
     
     for (int i=2; i<=200000; i++)
     {
         int prev=-1;
         int z=i, wh=i;
         while (wh>1)
         {
               if ( prev!=sieve[wh] )
               {
                  z=z-z/sieve[wh];
                  prev=sieve[wh];
               }
               wh/=sieve[wh];      
         }
         f[i]=z;
     }
}
long long bin(long long x, long long y)
{
     if (y==0)
        return 1;
     long long u=bin(x, y/2);
     if (y%2==0)
        return u*u%base;
     else
         return u*u%base*x%base;     
}
void solve()
{
     int n;
     scanf("%d", &n);
     for (int i=1; i<=n; i++)
         scanf("%d%d", &a[i], &b[i]);
     long long q=1, p;
     for (int i=1; i<=n; i++)
         q=(long long)q*(b[i] - a[i] +1)%base;     
     p=q;
     for (int i=1; i<=n; i++)
         a[i]--;
     long long add;
     for (int i=2; i<=200000; i++)
     {
         add=1;
         for (int j=1; j<=n; j++)
             add=(long long)add*( b[j]/i - a[j]/i )%base;
         add=(long long)add*f[i]%base;
         p=(p+add)%base;
     }
     long long ans;
     ans=(long long)(base-p)*bin(q, base-2)%base;
     cout<<ans<<endl;
}
int main ()
{
    precalc();
    int test;
   
    scanf("%d", &test);
    for (int i=0; i<test; i++)
    {
        solve();    
    }
    return 0;
}
