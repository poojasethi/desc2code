#include <stdio.h>
#include <string.h>
#define MAXN 200005
#define MAXK 5
#define mul_val(n) ((n & 1) ? -1 : 1)
#define UPPER 100000000000000000LL
#define MOD 1000000007
int pf[MAXN];
int mu[MAXN];
int val[MAXN];
int pf_count[MAXN]; // reduced form of a number (removes all duplicate primes)
int A[MAXK],B[MAXK];
int cnt[MAXN];
int C[10][10];
int C_SUM[10];
int k;
inline long long inv(long long b){
	int e = MOD-2;
	long long ret = 1;
	while(e){
		if(e & 1)ret = (ret * b)%MOD;
		b = (b * b)%MOD;
		e >>= 1;
	}
	return ret;
}
inline int div_count(int d,int A,int B){
	return B/d - (A-1)/d;
}
inline long long value(int d){
	long long ret = 1;
	for(int i = 0;i<k;i++)ret=(ret*div_count(d,A[i],B[i]))%MOD;
	return ret;
}
int gcd(int a,int b)
{
	if(!b)return a;
	return gcd(b,a%b);
}
int main()
{

	for(int i = 2;i*i<MAXN;i++)
		for(int j = i*i;j<MAXN && !pf[i];j+=i)
				if(!pf[j])pf[j]=i;
	
	pf[0]=pf[1]=-1;
	for(int i = 2;i<MAXN;i++)
		if(!pf[i])
			pf[i]=i;
	
	mu[1] = 1;
	for(int i = 2;i<MAXN;i++)
		if(pf[i]!=pf[i/pf[i]])
			mu[i]=-1*mu[i/pf[i]];
	
	for(int i = 1;i<MAXN;i++)
		for(int j = i;j<MAXN;j+=i)
			val[j]+=i * mu[j/i];
	
	int tc;
	// freopen("EXGCD.in","r",stdin);
	scanf("%d",&tc);
	while(tc--){
		scanf("%d",&k);
		for(int i = 0;i<k;i++)scanf("%d %d",&A[i],&B[i]);
		memset(cnt,0,sizeof cnt);
		// long long ans = 0;
		long long other = 0;
		// puts("\n");
		for(int i = 1;i<=MAXN;i++)
			other=(other+val[i]*value(i))%MOD;
		
		// for(int i = 1;i<MAXN;i++){
		// 		curr = 0;
		// 		for(int j = i;j<MAXN;j+=i)
		// 			if(mu[j/i])
		// 				curr+=mu[j/i]*value(j);
		// 		ans+=i*curr;
		// 		if(ans>UPPER)ans%=MOD;
		// 	}
		// ans%=MOD;
		// printf("%lld %lld\n",ans,other);
		printf("%lld\n",(inv(MOD-value(1))*other)%MOD);
	}	
	
	return 0;
}