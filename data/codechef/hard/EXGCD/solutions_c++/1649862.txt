#include<iostream>
#include<cstdio>

using namespace std;
typedef long long LL;

const LL modref=1000000007;
const int max_k=10; //5
const int n=200000;

LL fexp(LL a, LL p)
{
	if(p==0)
		return (LL(1));
	else
	{
		LL t=fexp(a,p/2);
		t*=t; t%=modref;
		if(p%2==1) {t*=a; t%=modref;}
		return t;
	}
}

int T;
int k;
int A[max_k], B[max_k];
LL cnt[n+1], dp[n+1];
LL P,Q;
LL res;

int main()
{
	scanf("%d",&T);
	
	for(int z=0; z<T; ++z)
	{
		scanf("%d",&k);
		
		Q=1;
		for(int i=0; i<k; ++i)
		{
			scanf("%d%d",&A[i],&B[i]);
			Q*=(LL(B[i]-A[i]+1)); Q%=modref;
		}
		
		P=0;
		for(int i=n; i>=1; --i)
		{
			cnt[i]=1;
			for(int j=0; j<k; ++j)
			{ 	cnt[i]*=( LL ( ((B[j]/i)-((A[j]-1)/i)) ) ); cnt[i]%=modref; }
			
			dp[i]=cnt[i];
			for(int j=2*i; j<=n; j+=i)
			{ 	dp[i]+=(modref-dp[j]); dp[i]%=modref; }
			
			P+=(dp[i]*(LL(i))); P%=modref;
		}
		
		res=(modref-P)*fexp(Q,modref-2); res%=modref;
		cout<<res<<endl;
	}
	return 0;
}