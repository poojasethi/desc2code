#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int maxn = 2e5+5;
ll tot[maxn];
int factor[maxn];
const ll mod = 1e9+7;
ll powr(ll a,ll b)
{
    ll x = 1,y=a%mod;
    while(b)
    {
        if(b&1)
        {
            x=(x*y)%mod;
        }
        y=(y*y)%mod;
        b>>=1;
    }
    return x;
}
ll inv(ll a)
{
    return powr(a,mod-2);
}
void pre()
{
    memset(factor,0,sizeof factor);
    for(int i = 2;i*i<maxn;i++)
    {
        if(factor[i] == 0)
        {
            for(int j = i*i;j<maxn;j+=i)
            {
                factor[j] = i;
            }
        }
    }
    tot[1]=1;
    for(int i = 2;i<maxn;i++)
    {
        if(factor[i] == 0)
        {
            tot[i] = i-1;
        }
        else
        {
            int j = factor[i];
            int p = i,x=1;
            while(p%j==0)
            {
                p/=j;
                x*=j;
            }  
            if(p==1)
            {
            	tot[i]=(x/j)*(j-1);
            }
            else{
            
            	tot[i] = tot[p]*tot[x];
            }
        }
        
    }
}
#define pii pair<int,int>
#define F first
#define S second
#define ld long double
int numdiv(pii x,int k)
{
	return ((x.S)/k-(x.F-1)/k);
}
ll ans(pii A[],int k)
{	int maxv = maxn;
	for(int i = 0;i<k;i++)
	{
		maxv = min(A[i].S,maxv);
	}
	ll ret = 0;
	for(int i = 1;i<=maxv;i++)
	{
		ll prod = 1;
		for(int j = 0;j<k;j++)
		{
			prod=(prod*numdiv(A[j],i))%mod;
		}
		ret=(ret+tot[i]*prod)%mod;
	}
	ll prod2=1%mod;
	for(int i = 0;i<k;i++)
	{
		prod2=(prod2*(ll)(A[i].S-A[i].F+1))%mod;
	}
//	cout<<ret<<" "<<prod2<<" "<<tot[prod2]<<endl;
	return ((mod-ret)*inv(prod2))%mod;
}
int main()
{
	pre();
	
	int t;
	cin>>t;
	pii A[10];
	while(t--)
	{
		int k;
		cin>>k;
		for(int i=0;i<k;i++)
		{
			cin>>A[i].F>>A[i].S;
		}
		cout<<ans(A,k)<<endl;
	}
	return 0;

}	