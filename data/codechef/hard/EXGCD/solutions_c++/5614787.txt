#include <bits/stdc++.h>
using namespace std;
#define N 200000
typedef long long ll;
ll a[5],b[5],ways[N + 1];
ll FastPower(ll a,ll p,ll mod)
{
    ll y = 1;
    while(p > 0)
    {
        if(p%2 == 1) y = (y*a)%mod;
        p = p/2;
        a = (a*a)%mod;
    }
    return y;
}
int main()
{
    int tc,t;
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int k,i;
        scanf("%d",&k);
        ll Q = 1;
        ll mod = pow(10,9) + 7;
        ll pw = pow(10,9) + 5;
        ll MN = pw;
        //printf("%lld %lld\n",pw,mod);
        for(i = 0 ; i<k ; i++)
        {
            scanf("%lld %lld",&a[i],&b[i]);
            ll temp = b[i] - a[i] + 1;
            Q = Q*temp%mod;
            MN = min(MN,b[i]);
        }
        ll invQ = FastPower(Q,pw,mod);
        ll p = 0;
        int mn = (int)MN;
        for(int i = mn ; i>0 ; i--)
        {
            ll I = (ll) i;
            ll wa = 1;
            for(int j = 0 ; j<k ; j++)
            {
                ll u = (a[j] - 1)/I;
                ll v = (b[j])/I;
                //if(u < 0) u = 0;
                wa = wa*(v - u)%mod;
                //printf("%lld %lld\n",v,u);
            }
            if(wa == 0)
            {
                ways[i] = 0;
            }
            else
            {
                //printf("%lld ",wa);
                for(int j = 2*i ; j<=mn ; j+=i)
                {
                    wa = wa - ways[j];
                    if(wa < 0) wa = wa + mod;
                }
                //printf("%d %lld %lld\n",i,wa,I);
                ways[i] = wa;
                ll temp = I*wa%mod;
                p = p + temp;
                if(p >= mod) p = p - mod;
            }
        }
        ll ans = mod - p*invQ%mod;
        if(ans >= mod) ans = ans - mod;
        printf("%lld\n",ans);
        //printf("%lld %lld %lld %lld\n",invQ,Q,p,ans);
    }
    return 0;
}
