#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)2e5;
const LL mod = (LL)1e9 + 7;
LL gcd[maxn + 1];
int a[5],b[5];
LL binpow(LL x, LL y) {
	if (x == 0) return 0;
	LL res = 1;
	while(y > 0) {
		if (y & 1) {
			res = res * x % mod;
		}
		x = x * x % mod;
		y >>= 1;
	}
	return res;
}
int main()
{
	#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		int k; cin >> k;
		LL q = 1;
		for (int i = 0; i < k; i++) {
			cin >> a[i] >> b[i];
			q = q * (b[i] - a[i] + 1) % mod;
		}
		memset(gcd,0,sizeof(gcd));
		LL p = 0;
		for (int i = maxn; i > 0; i--) {
			LL cnt = 1;
			for (int j = 0; j < k; j++) {
				if (i > b[j]) {
					cnt = 0;
					break;
				}
				int start = i >= a[j] ? i : (a[j] + i - 1) / i * i;
				int last = b[j] / i * i;
				cnt = cnt * ((last - start) / i + 1) % mod;
			}
			for (int j = i + i; j <= maxn; j += i) {
				cnt += mod - gcd[j];
				cnt %= mod;
			}
			gcd[i] = cnt;
			p += gcd[i] * i % mod;
			p %= mod;
		}
		p = (mod - p) % mod;
		q = binpow(q,mod - 2);
		LL res = p * q % mod;
		cout << res << endl;
	}
	return 0;
}
