#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007LL
#define pb push_back
int phi[200011],lp[200011];
vector<int>pr;
void func(int n)
{
    phi[1]=1;
    for(int i=2; i<=n; i++)
    {
        if(lp[i]==0)
        {
            lp[i]=i;
            phi[i]=i-1;
            pr.pb(i);
        }
        if(lp[i]==lp[i/lp[i]])
            phi[i]=phi[i/lp[i]]*lp[i];
        else
            phi[i]=phi[i/lp[i]]*(lp[i]-1);
        for(int j=0; j<pr.size()&&i*pr[j]<=n&&pr[j]<=lp[i]; j++)
            lp[i*pr[j]]=pr[j];
    }
}
ll modulo(ll a,ll b,ll c)
{
    ll x=1LL,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0LL)
    {
        if(b%2LL == 1LL)
        {
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2LL;
    }
    return x%c;
}
int main()
{
    func(200000);
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int a[10],b[10];
        int mn=10000000,k,i,j;
        scanf("%d",&k);
        for(i=0; i<k; i++)
        {
            scanf("%d %d",&a[i],&b[i]);
            mn=min(mn,b[i]);
        }
        ll ans=0LL;
        for(i=1; i<=mn; i++)
        {
            ll an=phi[i];
            for(j=0; j<k; j++)
            {
                int p=((b[j]/i)-(a[j]/i));
                if(a[j]%i==0)
                    p++;
                an=(an*p)%mod;
            }
            ans=(ans+an)%mod;
        }
        ll ans1=1LL;
        for(i=0;i<k;i++)
            ans1=(ans1*(b[i]-a[i]+1))%mod;
        if(ans1==0&&ans!=0)
        {
            printf("-1\n");
            continue;
        }
        if(ans==0)
        {
            printf("0\n");
            continue;
        }
        ans=mod-ans;
        ans=(ans*modulo(ans1,mod-2,mod))%mod;
        printf("%lld\n",ans);
    }
    return 0;
}
