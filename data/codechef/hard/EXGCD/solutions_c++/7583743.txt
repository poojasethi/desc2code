#include <stdio.h>
#include <vector>
#include <iostream>
using namespace std;
typedef long long ll;
#define MAXN 200000
#define MOD 1000000007

ll ipow(ll a, ll b, ll c = MOD) {
    ll ans = 1LL;
    while(b) {
        if(b & 1) ans = ans * a % c;
        a = a * a % c;
        b >>= 1LL;
    }
    return ans;
}
ll small[MAXN + 1], primes[MAXN], phi[MAXN + 1], sum[MAXN + 1], total;
void pre() {
    small[1] = phi[1] = sum[1] = 1;
    for(int i = 2; i <= MAXN; i++) {
        if(!small[i]) {
            primes[total++] = i;
            phi[i] = i - 1;
            small[i] = i;
        }
        int upto = MAXN / i;
        for(int j = 0; j < total && primes[j] <= upto; j++) {
            small[i * primes[j]] = primes[j];
            if(small[i] == primes[j]) {
                phi[i * primes[j]] = phi[i] * primes[j];
                break;
            }
            else phi[i * primes[j]] = phi[i] * (primes[j] - 1);
        }
        sum[i] = sum[i -1] + phi[i];
    }
}
struct rng {
    int L, R;
};
void solve() {
    int K;
    scanf("%d", &K);
    vector<rng> A(K);
    int mini, upto = ((1LL << 31) - 1LL);
    for(int i = 0; i < K; i++) {
        scanf("%d %d", &A[i].L, &A[i].R);
        upto = min(upto, A[i].R);
    }
    ll ans = 0;
    for(int i = 1; i <= upto; i++) {
        mini = ((1LL << 31) - 1LL);
        /*for(int j = 0; j < K; j++) {
            int num1 = A[j].R / i;
            int num2 = (A[j].L - 1) / i;
            if(num2 != 0) num2 = (A[j].L - 1) / num2;
            else num2 = ((1LL << 31) - 1);
            mini = min(mini, min(A[j].R / num1 , num2));
        }*/
        mini = i;
        ll temp = phi[i]; //(sum[mini] - sum[i - 1]);
        for(int j = 0; j < K; j++) {
            temp = temp * ll((A[j].R / mini) - ((A[j].L - 1) / mini));
            if(temp >= MOD) temp = temp % MOD;
        }
        ans = ans + temp;
        if(ans >= MOD) ans = ans - MOD;
        i = mini;
    }
    ll num = ans, den = 1LL;
    //cout << num << " ";
    for(int j = 0; j < K; j++) {
        den = den * (A[j].R - A[j].L + 1LL);
        den = den % MOD;
    }
    //cout << den << endl;
    if(den == 0){
        if(num != 0) printf("-1\n");
        else printf("0\n");
    }
    else {
    den = ipow(den, MOD - 2);
    ans = (num * den) % MOD;
    ans = MOD - ans;
    if(ans >= MOD) ans = ans - MOD;
    printf("%lld\n", ans);}
}
int main() {
    int t;
    pre();
    scanf("%d", &t);
    while(t--) solve();
}
