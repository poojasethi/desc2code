#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int mod = (int)1e9 + 7;
int n,c4,c7;
int dp[5005][5005],c[5005][5005];
int dfs(int p, int f4) {
	if (p == n) return 0;	
	int &res = dp[p][f4];
	if (res != -1) return res;
	res = 0;
	int f7 = p - f4;
	if (f4 > c7 - f7) return res;
	if (f4 < c4) {
		if (f4 == c7 - f7) {
			res += c[n - p - 1][c7 - f7];
		} else {
			res += dfs(p + 1,f4 + 1);
		}
	}
	if (f7 < c7) {
		if (f4 == c7 - f7 - 1) {
			res += c[n - p - 1][c7 - f7 - 1];
		} else {
			res += dfs(p + 1,f4);
		}
	}
	res %= mod;
	return res;
}
void solve() {
	string s; cin >> s;
	n = sz(s);
	c4 = 0;
	c7 = 0;
	for (int i = 0; i < n; i++) {
		if (s[i] == '4') {
			c4++;
		} else {
			c7++;
		}
	}
	memset(dp,-1,sizeof(dp));
	cout << dfs(0,0) << endl;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	for (int i = 0; i < 5005; i++) {
		c[i][0] = 1;
	}
	for (int i = 1; i < 5005; i++) {
		for (int j = 1; j <= i; j++) {
			c[i][j] = c[i - 1][j] + c[i - 1][j - 1];
			c[i][j] %= mod;
		}
	}
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
}
