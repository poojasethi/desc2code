#include <algorithm>
#include <iostream>
#include <cstring>
#include <cassert>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <string>
#include <cmath>
#include <set>
#include <map>

using namespace std;

typedef long long LL;
typedef long double LD;

#define pb push_back
#define mp make_pair
#define sz(A) (int)(A).size()

const int MOD = int(1e9 + 7), N = 5005;

LL c[N][N];
int cnt[N];

void precalc() {	
	c[0][0] = 1;
	for (int i = 0; i < N - 1; i++)
		for (int j = 0; j <= i; j++) {
			c[i + 1][j] = (c[i + 1][j] + c[i][j]) % MOD;
			c[i + 1][j + 1] = (c[i + 1][j + 1] + c[i][j]) % MOD;
		}
}

int main() {
	precalc();

	int t;
	cin >> t;	

	for (int i = 0; i < t; i++) {
		string s;
		cin >> s;

		if (sz(s) == 1) {
			cout << 1 << endl;
			continue;
		}

		memset(cnt, 0, sizeof(cnt));
		for (int j = 0; j < sz(s); j++)	
			cnt[ s[j] ]++;
		LL res = c[sz(s)][cnt['7']] - c[sz(s) - 2][cnt['7'] - 1];
		if (res < 0)
			res += MOD;
		cout << res << endl;
	}

	return 0;
}
