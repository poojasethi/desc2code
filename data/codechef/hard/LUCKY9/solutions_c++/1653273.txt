#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

using namespace std;

const int kMod = 1000000007;
const int kMaxN = 5000;
int n, c[kMaxN + 1][kMaxN + 1];
char buf[kMaxN + 1];

#define UPT(x, y) { \
	(x) += (y); \
	if ((x) >= kMod) (x) -= kMod; \
}

int main() {
	int t;
	c[0][0] = 1;
	for (int i = 1; i <= kMaxN; ++ i) {
		c[i][0] = 1;
		for (int j = 1; j <= i; ++ j) {
			c[i][j] = c[i - 1][j - 1];
			UPT(c[i][j], c[i - 1][j]);
		}
	}
	for (scanf("%d", &t); t --; ) {
		scanf("%s", buf);
		n = strlen(buf);
		int a = 0, b = 0;
		for (int i = 0; i < n; ++ i) {
			a += (buf[i] == '4');
			b += (buf[i] == '7');
		}
		int res = 0;
		if (b - 1 >= 0 && b - 1 < n) {
			UPT(res, c[n - 1][a]);
		}
		if (b > 0 && b < n) {
			UPT(res, c[n - 2][a - 2]);
		}
		if (b == 0) {
			UPT(res, 1);
		}
		printf("%d\n", res);
	}
	return 0;
}