#include <stdio.h>
const int mask=1<<18;
int x,y,z,need,t,n,m,i,j,g[18],bc[mask],f[mask],r[mask],ra[mask],rb[mask],cur,res;
void rec(int l, int a, int b, int c, int d) {
  if (2*(c+d)>n || 2*(l-c-d)>n || c>z+1 || d>z+1) return;
  if (l==n) {
    if (f[a]<0 || f[b]<0) return;
    if (f[a]+f[b]>r[a|b]) { r[a|b]=f[a]+f[b]; ra[a|b]=a; rb[a|b]=b; }
    return;
  }
  rec(l+1,a,b,c,d);
  rec(l+1,a|(1<<l),b,c+1,d);
  if (c) rec(l+1,a,b|(1<<l),c,d+1);
}
int main() {
  for (i=1; i<mask; i++) bc[i]=bc[i>>1]+(i&1);
  scanf("%d",&t);
  while (t--) {
    scanf("%d%d",&n,&m);
    res=1000000000;
    for (i=0; i<n; i++) g[i]=0;
    for (i=0; i<m; i++) {
      scanf("%d%d",&x,&y);
      g[x-1]|=1<<(y-1);
      g[y-1]|=1<<(x-1);
    }
    z=n/4; need=(1<<n)-1;
    for (i=0; i<=need; i++) {
      r[i]=f[i]=-1;
      if (bc[i]==z || bc[i]==z+1) for (f[i]=j=0; j<n; j++) if (i&(1<<j)) f[i]+=bc[g[j]&i];
    }
    rec(0,0,0,0,0); 
    for (res=-1, i=0; i<(1<<n); i++) if (bc[i]*2==n && r[i]+r[need^i]>res) { res=r[i]+r[need^i]; cur=i; }
    printf("%d\n",m-res/2);
    for (i=0; i<n; i++) {
      x=i+1; y=i+1;
      if ((ra[cur]&(1<<i)) || (ra[need^cur]&(1<<i))) x=-x;
      if ((ra[cur]&(1<<i)) || (rb[cur]&(1<<i))) y=-y;
      printf("%d %d\n",x,y);
    }
  }
  return 0;
}
