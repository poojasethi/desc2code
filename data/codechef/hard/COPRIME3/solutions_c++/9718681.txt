#include<bits/stdc++.h>
using namespace std;
#define MAX 1000010
int buck[MAX],p[MAX],dp[MAX];
long long ret,kol;

inline int inp()
{
    register int r=0,c;
    for(c=getchar_unlocked(); c<=32; c=getchar_unlocked());
    if(c=='-')
        return -inp();
    for(; c>32; r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
    return r;
}

int main()
{
    int n,ai,i,j;
    n=inp();

    int maxai=0;

    for(i=1;i<=n;i++)
    {
       ai=inp();
       buck[ai]++;
       maxai= max(maxai,ai);
    }

    for(i=2;i<=maxai;i++)    // p[i] stores the smallest prime factor of i
    {
       if(!p[i])
       {
          j=i;
          while(j<=maxai)
          {
             if(!p[j])
               p[j]=i;
            j+=i;
          }
       }
  }



    for(i=1;i<=maxai;i++)
    {
        if(i==1)
           dp[i]=1;
        else
        {
           if(p[i/p[i]]==p[i])  //checking for non square-free
               dp[i]=0;
            else{
                dp[i]=-1*dp[i/p[i]];
            }
        }

        if(dp[i]==0)
           continue;

        j=i; kol=0;

        while(j<=maxai)
        {
           kol+=buck[j];
           j+=i;
        }

        ret+=(kol*(kol-1)*(kol-2)/6)*dp[i];  // Adding number of combinations

    }

      cout<<ret;




}
