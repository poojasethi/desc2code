//---------------------------JUGNU: LET YOUR LIGHT SHINE---------------------------//
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define mk make_pair
#define ln length
#define vt(a) vector <ll> a
#define st(a) set <ll> a
#define sti(a) set <ll>::iterator a
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define frr(i,a,b) for(i=a;i>=b;i--)
#define sc(a) scanf("%lld",&a)
#define sm(a,b) scanf("%lld%lld", &a, &b)
#define pr(a) printf("%lld\n", a)
#define pm(a,b) printf("%lld %lld\n", a, b)
#define cn(a) cin >> a
#define ct(a) cout << a << endl
#define isset(x,i) ((x>>i)&1)
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
#define MAXN 1000001
using namespace std;
int mobius[MAXN], prime_cnt[MAXN], prime[MAXN], present[MAXN], nums[MAXN], dp[MAXN];
void calc_mobius()
{
	ll i, j, temp;
	prime[1] = 1;
	mobius[1] = 1;
	fr(i, 2, MAXN)
	{
		if(prime[i]==0)
		{
			
			for(j = i*i; j<MAXN; j+=i)
				prime[j] = 1;
			temp = i*i;
			j = 1;
			while(temp<MAXN)
			{
				mobius[temp] = 0;
				j++;
				temp = j*i*i;
			}
			for(j = i; j<MAXN; j+=i)
				prime_cnt[j]++;
				
			mobius[i] = -1;
		}
		else
		{
			if(mobius[i]==MAXN)
			{
				if(prime_cnt[i]%2==0)
					mobius[i]=1;
				else
					mobius[i]=-1; 
			}
		}
		for(j = i; j<MAXN; j+=i)
			dp[i] += present[j];
	}
	return;
}
ll nc3 (ll x)
{
	return (x*(x-1)*(x-2))/6;
}
int main()
{
	int i, j, t, n, m, k, l, r, mini,cnt, maxi, temp, flag;
	ll result;
	fr(i, 1, MAXN)
	{
		mobius[i] = MAXN;
		prime[i] = 0;
		prime_cnt[i] = 0;
	}
	scanf("%d", &n);
	fr(i, 0, n)
	{
		scanf("%d", &nums[i]);
		present[nums[i]]++;
	}
	calc_mobius();
	dp[1] = n;
	result = 0LL;
	fr(i, 1, MAXN)
		result = result + (nc3((ll)dp[i]))*mobius[i];
	pr(result);
return 0;
}
