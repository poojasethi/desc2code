#include <bits/stdc++.h>
using namespace std;
#define MAXN 1000000
bool isPrime[1000010];
int u[1000010];
int h[1000010];
long long pre[1000010];
long long num[1000010];
long long arr[1000010];
long long has[1000010];
void sieve()
{
	u[1] = 1;
	//f[1] = 0;
	for(int i=2;i<=MAXN;i++)
	{
		//f[i] = 0;
		u[i] = 1;
		isPrime[i] = true;
	}
	for(int i=2;i<=1000000;i++)
	{
		if(isPrime[i])
		{
		    u[i] = -1;
			long long l1 = (long long)i*(long long)i;
			//cout<<l1<<endl;
			for(long long k=l1;k<=(long long)MAXN;k+=l1)
			{
                u[k] = 0;
			}
			for(int j=2;j*i<=MAXN;j++)
			{
				u[j*i]*=-1;
				isPrime[j*i] = false;
			}
		}
	}
}


int main()
{
	pre[0] = 0;
	for(int i=0;i<=MAXN;i++)
	{
		h[i] = i;
		has[i] =  0;
		
	}
	for(int i=1;i<=MAXN;i++)
	{
		pre[i]+=pre[i-1]+u[i];
	}
	sieve();
	int n;
	scanf("%d",&n);
	long long maxi = 0;
	for(int i=0;i<n;i++)
	{
		scanf("%d",&arr[i]);
		if(arr[i]>maxi)
		{
			maxi = arr[i];
		}
		has[arr[i]]++;
	}
	if(n<3)
	{
		printf("0\n");
	}
	else
	{
		for(int i=1;i<=MAXN;i++)
		{
			for(int j=i;j<=MAXN;j+=i)
			{
				num[i]+=has[j];
			}
		}
		for(int i=1;i<=MAXN;i++)
		{
			num[i] = (num[i]*(num[i]-1)*(num[i]-2))/6;
		}
		long long ans = 0;
		for(int i=1;i<=maxi;i++)
		{
			ans+= (u[i]*num[i]);
		}
		printf("%lld\n",ans);


	}
}
