#include<iostream>
using namespace std;

int mobius(int x){
	int count=0;
	for(int d=2;d*d<=x;d++){
		if(x%d==0){
			count++;
			x/=d;
			if(x%d==0)
				return 0;
		}
	}
	if(x>1)
		count++;
	return (count%2?+1:-1);
}

int D(int count[],int x){
	int ans=0;
	for(int i=x;i<=1000000;i+=x)
		ans+=count[i];
	return ans;
}

long long nc3(long long n){
	return n*(n-1)*(n-2)/6;
}

int main(){
	int n,a;
	int count[1000001]={0};
	cin>>n;
	for(int i=0;i<n;i++){
		cin>>a;
		count[a]++;
	}

	long long ans=0;

	for(int x=2;x<=1000000;x++)
		ans+=nc3(D(count,x))*mobius(x);

	ans=nc3(n)-ans;
	cout<<ans<<endl;
	return 0;
}
