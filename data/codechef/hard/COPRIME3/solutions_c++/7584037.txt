#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <vector>
using namespace std;
#define MAXN 1000000
typedef long long ll;
int small[MAXN + 1], primes[MAXN], M[MAXN + 1], total;
int H[MAXN + 1] = {0};
void pre() {
    small[1] = M[1] = 1;
    for(int i = 2; i <= MAXN; i++) {
        if(!small[i]) {
            small[i] = i;
            M[i] = - 1;
            primes[total++] = i;
        }
        int upto = MAXN / i;
        for(int j = 0; j < total && primes[j] <= upto; j++) {
            small[i * primes[j]] = primes[j];
            if(small[i] == primes[j]) {
                M[i * primes[j]] = 0;
                break;
            }
            else M[i * primes[j]] = -M[i];
        }
    }
}
void solve() {
    ll N;
    scanf("%lld", &N);
    vector<ll> A(N);
    ll maxi = -1;
    for(int i = 0; i < N; i++) {
        scanf("%lld", &A[i]);
        H[A[i]]++;
        maxi = max(maxi, A[i]);
    }
    ll ans = 0;
    //cout << mini << " " << maxi << endl;
    for(int i = 1; i <= maxi; i++) {
        if(M[i]) {
            int upto =  maxi / i;
            ll cnt = 0;
            for(int j = 1; j <= upto; j++) {
                cnt += H[i * j];
            }
            cnt = cnt*(cnt - 1LL)*(cnt - 2);
            cnt = cnt / 6LL;
            ans = ans + M[i] * cnt;
        }
    }
    printf("%lld\n", ans);
}
int main() {
    int t = 1;
    pre();
    //scanf("%d", &t);
    while(t--) solve();
}
