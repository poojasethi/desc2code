/* Author -> Meghraj Sharma */
/* Problem -> Coprime Triples */
/* Lang -> C++ */

#include<bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define pc putchar_unlocked
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define MAXN 100005
#define MOD 1000000007
#define mod MOD
#define ll long long
using namespace std;

inline void inp(ll *n )
{
*n=0; ll ch=gc(); int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}
while( ch >= '0' && ch <= '9' ) *n = (*n<<3)+(*n<<1) + ch-'0', ch=gc();
*n=*n*sign;
}

inline void fastp(ll a)
{
    register char c; char snum[20]; int i=0;
    do { snum[i++]=a%10+48; a=a/10; }while(a!=0);
    i=i-1; while(i>=0) pc(snum[i--]);
    pc('\n');
}

ll arr[1000010];
ll factor[1000010];
ll res[1000010];

void solve(ll n)
{
    memset(factor,0,sizeof(factor));
    memset(res,0,sizeof(res));
    for(ll i=0;i<n;i++)
    {
        for(ll d=1;d*d<=arr[i];d++)
        {
            if(arr[i]%d==0)
            {
                factor[d]++;
                if(d*d<arr[i]) factor[arr[i]/d]++;
            }
        }
    }

    for(ll i=1000000;i>=1;i--)
    {
        res[i]=(factor[i]*(factor[i]-1)*(factor[i]-2))/6;

        for(ll j=2*i;j<=1000000;j+=i) res[i]-=res[j];
    }
  fastp(res[1]);
}
int main()
{
    ll n,i;
    inp(&n);
    for(i=0;i<n;i++) inp(&arr[i]);
    solve(n);
  return 0;
}
