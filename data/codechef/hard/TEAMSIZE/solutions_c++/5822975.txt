
/* Author : Vamsi Kavala */
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)	
#define mod 1000000007
#define MAXN 1000010

typedef pair<int,int>   PI;
typedef vector<int> VI;
typedef long long int LL;

void ins(deque<int> &dq1, deque<int> &dq2, int x)
{
	//inserting for min deque
	while(dq1.size() && x<dq1.back())
		dq1.pop_back();
	dq1.PB(x);

	//inserting for max deque
	while(dq2.size() && x>dq2.back())
		dq2.pop_back();
	dq2.PB(x);

	return;
}

int a[500010],team[500010],n,c,q,A,B,D;

int main(){

	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n;
		scanf("%d%d%d%d%d%d",&n,&c,&q,&A,&B,&D);
		REP(i,min(10000,n))
			scanf("%d",&a[i]);
		FOR(i,10000,n)
		{
			a[i]=(int)(((LL)A*a[i-1]+(LL)B*a[i-2]+D)%(1<<30));
//			printf("%d\n",a[i]);
		}

		deque<int> minm,maxm;

		memset(team,0,sizeof(team));

		ins(minm,maxm,a[0]);
		
		int start=1;
		FOR(i,1,n+1)
		{
			//elements till i have been inserted in both deques
			while(start<=n && maxm.front()-minm.front()<=c)
			{
				team[start-i+1]++;
				start++;
				ins(minm,maxm,a[start-1]);
			}
			if(start>n)
				break;
			if(minm.front()==a[i-1])
				minm.pop_front();
			if(maxm.front()==a[i-1])
				maxm.pop_front();
		}

		FORD(i,n-1,1)
			team[i]+=team[i+1];

		int k,M;
		REP(queries,q)
		{
			scanf("%d",&M);
			int lo=1,hi=n,mid;

			while(lo<hi)
			{
				mid=(hi+lo)/2;
				if(team[mid]>M)
					lo=mid+1;
				else
					hi=mid;
			}
			mid=(lo+hi)/2;
			printf("%d %d\n",mid,team[mid]);
		}

	}
	return 0;
}
