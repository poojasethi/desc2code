#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)5e5 + 10;
int x[maxn],start[maxn],res[maxn];
int n,c,q,a,b,d,m;
int mod;
void solve()
{
	cin>>n>>c>>q>>a>>b>>d;
	for(int i = 0; i < min(n,10000); i++)
		scanf("%d",&x[i]);
	for(int i = 10000; i < n; i++)
		x[i] = ((LL)a * x[i - 1] + (LL)b * x[i - 2] + d) % mod;
	deque<int> ma,mi;
	int j = 0;
	for(int i = 1; i <= n; i++)
		start[i] = 0;
	for(int i = 0; i < n; i++)
	{
		while(!mi.empty() && mi.back() > x[i]) mi.pop_back(); mi.push_back(x[i]);
		while(!ma.empty() && ma.back() < x[i]) ma.pop_back(); ma.push_back(x[i]);
		while(ma.front() - mi.front() > c)
		{
			if (x[j] == mi.front()) mi.pop_front();
			if (x[j] == ma.front()) ma.pop_front();
			j++;
		}
		start[i - j + 1]++;
	}
	for(int i = n - 1; i >= 1; i--)
		start[i] += start[i + 1];
	j = n;
	for(int i = 1; i <= n; i++)
	{
		while(j > 1 && start[j - 1] <= i) j--;
		res[i] = j;
	}
	for(int qq = 0; qq < q; qq++)
	{
		scanf("%d",&m);
		printf("%d %d\n",res[m],start[res[m]]);
	}
}
int main()
{
	#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif
	mod = 1<<30;
	int T;
	cin>>T;
	while(T--) solve();
	return 0;
}
