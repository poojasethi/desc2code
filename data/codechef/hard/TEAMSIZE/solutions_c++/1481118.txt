#include <cstdio>
#include <deque>
#include <algorithm>

#define M 500500
#define INF 2000000000
#define f first
#define s second
#define mp make_pair

using namespace std;

const long mod=1<<30;

long n,t[M],c,q,a,d,b,l,r,m;
long f[M],ans[M];

deque<pair<long,long> > deq[2];

void push(pair<long,long> x,long c){
    while (!deq[c].empty() && x>deq[c].back())
    deq[c].pop_back();
    deq[c].push_back(x);
}


void read(void){
    long x=10000;
    scanf("%d%d%d%d%d%d",&n,&c,&q,&a,&b,&d);

    for (long i=0; i<=n+10; ++i){
        f[i]=0;
        ans[i]=0;
    }

    deq[0].clear();
    deq[1].clear();

    if (x>n)
    x=n;

    for (long i=1; i<=x; ++i)
    scanf("%d",&t[i]);

    //printf("%d\n",x);

    for (long i=x+1; i<=n; ++i){
        t[i]=(a*t[i-1]+b*t[i-2]+d)%mod;
        if (t[i]<0)
        t[i]+=mod;
    }
    //printf("I've read!\n");
}


void wind(void){
    l=1;
    r=1;

    push(mp(-t[1],1),1);
    push(mp( t[1],1),0);

    t[n+1]=2*mod+10000;
    while (l<=n){
        while (r<=n && deq[1].front().f+deq[0].front().f<=c){
            r++;
            push(mp(-t[r],r),1);
            push(mp( t[r],r),0);
        }

        f[r-l]++;
        while (deq[1].front().s<=l)
        deq[1].pop_front();
        while (deq[0].front().s<=l)
        deq[0].pop_front();

        l++;
    }

    for (long i=n-1; i>=0; --i)
    f[i]=f[i+1]+f[i];

    for (long i=n,j=1; i>=0 && j<=n; --i){
        while (j<n && f[j]>i)
        ++j;
        ans[i]=j;
    }

}



void que(void){
    long d;
    while(q--){
        scanf("%d",&m);
        if (m>n)
        m=n;
        printf("%d %d\n",ans[m],f[ans[m]]);
    }
}

int main()
{
    //freopen ("team.in","r",stdin);
    //freopen ("team.out","w",stdout);
    //printf("I'm in!\n");
    long t=1;
    scanf("%d",&t);
    while (t--){
        read();
        wind();
        que();
    }
    return 0;
}
