#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;

const int MOD=1<<30;

int Test,N,C,Q,A,B,D,T,X;
long long Sk[500000];
int L,R,M;
int Ha,Ta,Hi,Ti;
int Max[500000],Min[500000];
int G[500001];

int main()
{
    scanf("%d",&Test);
    while (Test)
    {
        --Test;
        scanf("%d%d%d%d%d%d",&N,&C,&Q,&A,&B,&D);
        for (int i=1;i<=N;G[i]=0,++i);
        X=10000;
        if (X>N) X=N;
        for (int i=0;i<X;scanf("%lld",Sk+i),++i);
        for (int i=X;i<N;Sk[i]=((Sk[i-1]*A)%MOD+(Sk[i-2]*B)%MOD+D)%MOD,++i);
        Sk[N]=Sk[N-1]+C+1;
        T=0;
        Ha=0;Ta=0;Max[0]=0;
        Hi=0;Ti=0;Min[0]=0;
        for (int i=0;i<N;++i)
        {
            if (Max[Ha]<i) ++Ha;
            if (Min[Hi]<i) ++Hi;
            while (Sk[Max[Ha]]-Sk[Min[Hi]]<=C)
            {
                ++T;
                while (Ta>=Ha&&Sk[Max[Ta]]<Sk[T]) --Ta;
                Max[++Ta]=T;
                while (Ti>=Hi&&Sk[Min[Ti]]>Sk[T]) --Ti;
                Min[++Ti]=T;
            }
            ++G[T-i];
        }
        for (int i=N-1;i;G[i]+=G[i+1],--i);
        for (int i=0;i<Q;++i)
        {
            scanf("%d",&T);
            L=1;R=N;
            while (L<R)
            {
                M=(L+R)>>1;
                if (G[M]<=T) R=M;
                else L=M+1;
            }
            printf("%d %d\n",L,G[L]);
        }
    }
    return 0;
}
