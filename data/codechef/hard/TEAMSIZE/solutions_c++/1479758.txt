#include<stdio.h>
#include<iostream>
#include<string.h>
#include<stdlib.h>
#include<algorithm>
#include<vector>
using namespace std;
int mq[500020],mb,mf;
int nq[500020],nb,nf;
int w[500020];
int z[500020];
int t,n,c,q,a,b,d,r;
int mp(int x)
{
	while(mb<mf&&w[x]>=w[mq[mf-1]])
		mf--;
	mq[mf++]=x;
}
int np(int x)
{
	while(nb<nf&&w[x]<=w[nq[nf-1]])
		nf--;
	nq[nf++]=x;
}
inline int mx()
{
	return w[mq[mb]];
}
inline int mn()
{
	return w[nq[nb]];
}
int main()
{
	for(scanf("%d",&t);t--;)
	{
		memset(z,0,sizeof z);
		mb=mf=nb=nf=r=0;
		scanf("%d %d %d %d %d %d",&n,&c,&q,&a,&b,&d);
		for(int i=0;i<min(n,10000);i++)
			scanf("%d",w+i);
		for(int i=10000;i<n;i++)
			w[i]=a*w[i-1]+b*w[i-2]+d&1073741823;
		for(int i=0;i<n;i++)
		{
			while(mb<mf&&mq[mb]<i)
				mb++;
			while(nb<nf&&nq[nb]<i)
				nb++;
			while(r<n&&(r==i||max(mx(),w[r])-min(mn(),w[r])<=c))
				mp(r),np(r),r++;
			z[r-i]++;
		}
		for(int i=n-1;i>=1;i--)
			z[i]+=z[i+1];
		for(int i=1;i<=n;i++)
			z[i]=-z[i];
		for(;q--;)
		{
			int x;
			scanf("%d",&x);
			int t=lower_bound(z+1,z+n+1,-x)-z;
			printf("%d %d\n",t,-z[t]);
		}
	}
	return 0;
}