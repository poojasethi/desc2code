#include<iostream>
#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<sstream>
#include<vector>
#include<queue>
#include<set>
#include<cmath>
using namespace std;
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define x first
#define y second
#define all(x) x.begin(),x.end()
#define ll long long
#define inf 2100000007
#define eps 1e-7
#define pi acos(-1)
#define N 500020
#define mod (1<<30)
ll s[10020];int n,m;
int cnt[N],can[N];
int main()
{
   // freopen("in.txt","r",stdin);
    int i,j,k,T;
    scanf("%d",&T);
    while(T--)
    {
        ll a,b,d,c,cur;int Q;
        scanf("%d%lld%d%lld%lld%lld",&n,&c,&Q,&a,&b,&d);
        for(i=0;i<min(n,10000);i++)scanf("%lld",&s[i]);
        queue<ll>q;
        deque<ll>f1,f2;
        q.push(s[0]);f1.push_back(s[0]);f2.push_back(s[0]);
        i=1;
        ll a1=s[0],a2=0;can[0]=0;
        while(i<n)
        {
            cur=(i<10000)?s[i]:(((a*a1%mod+b*a2%mod)%mod+d)%mod);
            a2=a1,a1=cur;
            q.push(cur);
            while(!f1.empty()&&f1.back()<cur)f1.pop_back();
            f1.push_back(cur);
            while(!f2.empty()&&f2.back()>cur)f2.pop_back();
            f2.push_back(cur);
            j=can[i-1];
            while(f1.front()-f2.front()>c)
            {
                ll res=q.front();q.pop();
                if(res==f1.front())f1.pop_front();
                if(res==f2.front())f2.pop_front();
                j++;
            }
            can[i]=j;
            i++;
        }
        memset(cnt,0,sizeof(cnt));
        for(i=0;i<n;i++)cnt[i-can[i]+1]++;
        can[n]=cnt[n];
        for(i=n-1;i>=1;i--)can[i]=cnt[i]+can[i+1];
        while(Q--)
        {
            scanf("%d",&m);
            int l=1,r=n,mid,ans;
            while(l<=r)
            {
                mid=(l+r)>>1;
                if(can[mid]<=m)r=mid-1,ans=mid;
                else l=mid+1;
            }
            printf("%d %d\n",ans,can[ans]);
        }
    }
}
