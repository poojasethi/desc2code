#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pair<int , int> >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<=k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

int dp[505][505];

int solve(int i , int j) {

	if (i < 0 || j < 0 || i > 500 || j > 500)
		return -1;

	if (dp[i][j] != -1)
		return dp[i][j];

	cout << i << ' ' << j << '\n';

	//i odd , j even
	if (solve(i - 1 , j + 1) == 1 || solve(i + 1 , j - 1) == 1 )
		return dp[i][j] = 0;

	return dp[i][j] = 1;
}

void pre() {

	rep(i , 501)
		rep(j , 501)
			dp[i][j] = -1;

	rep(i , 505) {
		dp[i][0] = (i % 2);
	}

	rep(i , 505) {
		dp[0][i] = 0;
	}

	frep(i , 1 , 20) {
		frep(j , 1 , 20) {
			dp[i][j] = solve(i , j);
		}
	}
}

int A[N] , C[N];

int main(int argc, char const *argv[])
{
	fast;

	// FILE;

	//pre();

	CASES {

		int n;
		cin >> n;

		ll x = 0;

		rep(i , n) {
			cin >> A[i];
			x ^= A[i];
			C[A[i]]++;
		}

		if (x == 0) {
			cout << "First\n";
			continue;
		}

		int odd = 0 , even = 0;
		frep(i , 1 , 500)
			if (C[i] % 2)
				odd++;
			else if (C[i] > 0)
				even++;

		if (n % 2)
			cout << "Second\n";
		else
			cout << "First\n";

		rep(i , n) {
			C[A[i]] = 0;
		}
	}

	return 0;
}