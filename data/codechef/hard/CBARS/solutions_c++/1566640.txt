#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<queue>
#include<deque>
#include<stack>
#include<iomanip>
#include<cstdlib>
#include<cstring>
#include<set>
#include<cmath>

using namespace std;

#define PI pair<int,int>
#define SD(x) scanf("%d",&x)
#define PD(x) printf("%d\n",x)
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define VI vector<int>
#define LL long long int
#define VLL vector<LL>
#define VVLL vector<VLL>
#define MOD 1000000007

LL tpa,a,b;

bool f(int p,int q){
    int i;
    for(i=0;i<a-1;i++){
        if((p%2==q%2)&&((p/2)%2==(q/2)%2)&&((p/2)%2==(p)%2))
        break;
        p/=2;
        q/=2;
    }
    if(i<a-1)
    return 0;
    else
    return 1;
}

VVLL get_matrix(){
    VVLL x;
    x.resize(tpa);
    int i,j;
    for(i=0;i<tpa;i++){
        x[i].resize(tpa);
        for(j=0;j<tpa;j++){
            if(f(i,j))
            x[i][j]=1;
            else
            x[i][j]=0;
        }
    }
    return x;
}

VVLL mul(VVLL p,VVLL q){
    VVLL r=p;
    int i,j,k;
    for(i=0;i<tpa;i++)
    for(j=0;j<tpa;j++)
    r[i][j]=0;
    for(k=0;k<tpa;k++)
    for(i=0;i<tpa;i++)
    for(j=0;j<tpa;j++){
        r[i][j]+=p[i][k]*q[k][j];
        if(r[i][j]>=MOD)
        r[i][j]%=MOD;
    }
    return r;
}

VVLL pow(VVLL m,LL n){
    if(n==1)
    return m;
    VVLL s=pow(m,n/2);
    s=mul(s,s);
    if(n%2==1)
    s=mul(s,m);
    return s;
}

int main()
{
    //freopen("input.txt","r",stdin);
    cin>>a>>b;
    tpa=1;
    int i,j,k;
    for(i=0;i<a;i++)
    tpa*=2;
    if(b==1){
        cout<<tpa<<endl;
    }
    else{
        VVLL v=get_matrix();
        v=pow(v,b-1);
        /*
        for(i=0;i<tpa;i++){
            for(j=0;j<tpa;j++)
            cout<<v[i][j]<<" ";
            cout<<endl;
        }
        */
        LL ans=0;
        for(i=0;i<tpa;i++)
        for(j=0;j<tpa;j++){
            ans+=v[i][j];
            if(ans>=MOD)
            ans%=MOD;
        }
        cout<<ans<<endl;
    }
	return 0;
}
