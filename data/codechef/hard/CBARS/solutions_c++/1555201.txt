#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<climits>
#include<sstream>

#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs; 
typedef pair<int,int> ii;
typedef long long int LLI;
typedef unsigned long long int ULLI;

#define sz(a)                        int((a).size()) 
#define pb                           push_back 
#define mp                           make_pair
#define F                            first
#define S                            second
#define present(c,x)                 ((c).find(x) != (c).end()) 
#define cpresent(c,x)                (find(all(c),x) != (c).end())
#define tr(c,i)                      for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define all(c)                       (c).begin(),(c).end()
#define si(n)                        scanf("%d",&n)
#define sl(n)                        scanf("%lld",&n)
#define sf(n)                        scanf("%f",&n)
#define sd(n)                        scanf("%lf",&n)
#define ss(n)                        scanf("%s",n)

#define abs(x)                       ((x)<0?-(x):(x))
#define fill(a,v)                    memset((a),(v),sizeof (a))
#define INF                          INT_MAX
#define LINF                         (long long)1e18
#define EPS                          1e-9
#define M 1000000007
#define MAX 64

ULLI a,b;
int sz,A[MAX][MAX],AN[MAX][MAX];

int check(int x,int y)
{
	bool bit1,bit2;
	int zand = x&y,zor = x|y;

	for(int i=1; i<a; i++)
	{
		bit1 = zand & (1<<i);
		bit2 = zand & (1<<(i-1));
		if(bit1 && bit2)
			return 0;
		
		bit1 = zor & (1<<i);
		bit2 = zor & (1<<(i-1));
		if(!bit1 && !bit2)
			return 0;
	}
	return 1;
}

void pp(int x[][MAX])
{
	for(int i=0; i<sz; i++)
	{
		for(int j=0; j<sz; j++)
			printf("%d ",x[i][j]);
		printf("\n");
	}
}

void make_A()
{
	for(int i=0; i<sz; i++)
		for(int j=0; j<sz; j++)
			A[i][j] = check(i,j);
	
	for(int i=0; i<sz; i++)
		AN[i][i] = 1;
}

void mulm(int z[][MAX],int x[][MAX],int y[][MAX])
{
	int temp[MAX][MAX];
	ULLI pro;
	for(int i=0; i<sz; i++)
	{
		for(int j=0; j<sz; j++)
		{
			temp[i][j] = 0;
			for(int k=0; k<sz; k++)
			{
				pro = 1ULL*x[i][k]*y[k][j];
				if(pro >= M)
					pro %= M;
				temp[i][j] += pro;
				if(temp[i][j] >= M)
					temp[i][j] %= M;
			}
		}
	}
	for(int i=0; i<sz; i++)
		for(int j=0; j<sz; j++)
			z[i][j] = temp[i][j];
}

void mat_pow(ULLI n)
{
	while(n > 0)
	{
		if(n&1)
			mulm(AN,AN,A);
		mulm(A,A,A);
		n >>= 1;
	}
}

int main()
{
	
	scanf("%llu%llu",&a,&b);
	if(a > b)
		b ^= a ^= b ^= a;

	sz = (1<<a);
	make_A();
	mat_pow(b-1);

	int ans = 0;
	for(int i=0; i<sz; i++)
	{
		for(int j=0; j<sz; j++)
		{
			ans += AN[i][j];
			if(ans >= M)
				ans %= M;
		}
	}
	printf("%d\n",ans);

	return 0;
}
