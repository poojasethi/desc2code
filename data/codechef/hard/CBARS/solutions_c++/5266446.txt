#include<bits/stdc++.h>
#define ll  long long
#define pb push_back
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)

#define p(n) printf("%lld\n",n)
#define rep(i,a,n) for(i=a;i<=n;i++)
#define vi vector<int>
#define vii vector< vector<int> >
#define vpii vector< pair<int,int> >
#define mii map<int,int>
#define pb push_back
#define inf 1000000000LL
#define mp make_pair
#define mod 1000000007LL
#define N 1000007
using namespace std;
void copymatrix(ll a[64][64],ll b[64][64],int row,int col)
{
 int i,j;
 for(i=0;i<row;++i)
 for(j=0;j<col;++j)
 a[i][j]=b[i][j];
}
void multiply(ll a[64][64],ll b[64][64],int row,int col)
{
    ll c[64][64];
    int i,j,k;
    for(i=0;i<row;i++)
       for(j=0;j<col;++j)
         c[i][j]=0;

    for(i=0;i<row;i++)
    {
        for(j=0;j<col;j++)
        {
            c[i][j]=0;
            for(k=0;k<col;k++)
            {
                c[i][j]=(c[i][j]+a[i][k]*1LL*b[k][j]%mod)%mod;
            }
        }
    }
    copymatrix(a,c,row,col);
}
void matpow(ll a[64][64],ll b,int row,int col)
{
     ll c[64][64];
    int i,j;
    for(i=0;i<row;i++)
        for(j=0;j<col;++j)
         c[i][j]=0;
    for(i=0;i<col;i++)
        c[i][i]=1;

    while(b)
    {
        if(b&1)
            multiply(c,a,row,col);
        multiply(a,a,row,col);
        b/=2;
    }
    copymatrix(a,c,row,col);
}
bool calc(int n1,int n2,int time)
{
//cout<<n1<<" "<<n2<<endl;
int i,p1,p2;
p1=n1%2;
p2=n2%2;
n1/=2;
n2/=2;
for(i=1;i<=time-1;++i)
{
 int p3=n1%2;
 int p4=n2%2;
 if((p3==p4) && (p1==p2) && (p2==p3))
 {
 //cout<<p1<<" "<<p2<<" "<<p3<<" "<<p4<<" "<<i<<endl;
 return 0;
 }
 n1/=2;
 n2/=2;
 p1=p3;
 p2=p4;
}
return 1;
}
int main()
{
  int t,m,i,j;
  ll n;
  ll a[64][64];

   s(m);sl(n);
   int r=pow(2,m);
   int c=r;
   for(i=0;i<r;++i)
   for(j=0;j<c;++j)
   {
    if(calc(i,j,m))
    a[i][j]=1;
    else
    a[i][j]=0;
   }
   /*for(i=0;i<r;++i)
   {
    for(j=0;j<c;++j)
    cout<<a[i][j]<<" ";
    cout<<endl;
   }*/
   matpow(a,n-1,r,c);
   ll ans=0;
   for(i=0;i<r;++i)
   for(j=0;j<c;++j)
   {
   ans+=a[i][j];
   ans%=mod;
   }
   printf("%lld\n",ans);

  return 0;
}
