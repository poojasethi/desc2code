#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
using namespace std;

#define LL long long
#define MOD 1000000007LL
#define VLL vector<LL>
#define VVLL vector<VLL>

int a;
LL b;
VVLL M;
bool c[100],d[100];

bool poss(int i,int j)
{
    for(int k=0;k<a;k++){
        c[k] = ((i & (1<<k)) != 0);
        d[k] = ((j & (1<<k)) != 0);
    }
    for(int k=0;k<a-1;k++){
        if(c[k]==c[k+1] && c[k]==d[k] && c[k]==d[k+1]) return false;
    }
    return true;
}

void preprocess()
{
    M.resize(1<<a);
    for(int i=0;i<M.size();i++) M[i].resize(1<<a, 0);
    for(int i=0;i<(1<<a);i++){
        for(int j=0;j<(1<<a);j++){
            M[i][j]=poss(j,i);
        }
    }
}

VVLL prod(VVLL& X, VVLL& Y)
{
    VVLL ret(1<<a, VLL(1<<a, 0LL));
    for(int i=0;i<(1<<a);i++){
        for(int j=0;j<(1<<a);j++){
            for(int k=0;k<(1<<a);k++){
                ret[i][j] += X[i][k] * Y[k][j];
                ret[i][j] %= MOD;
            }
        }
    }
    return ret;
}

VVLL power_mod()
{
    VVLL ret(1<<a, VLL(1<<a, 0));
    for(int i=0;i<(1<<a);i++) ret[i][i]=1LL;
    VVLL inter=M;
    LL e=b-1;
    while(e){
        if(e & 1){
            ret = prod(ret, inter);
        }
        inter = prod(inter, inter);
        e = e>>1;
    }
    return ret;
}

int main()
{
    cin>>a>>b;
    preprocess();
    VVLL temp=power_mod();
    LL ans=0;
    for(int i=0;i<(1<<a);i++){
        for(int j=0;j<(1<<a);j++){
            ans += temp[i][j];
            ans %= MOD;
        }
    }
    cout<<ans<<"\n";
    return 0;
}
