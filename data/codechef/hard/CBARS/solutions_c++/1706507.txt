#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cstdlib>
#define MOD 1000000007LL
using namespace std;
//long long Matri[65][65];
struct Matrix { long long mat[65][65]; };
Matrix matMul(Matrix a, Matrix b,int MAX_N) 
{
	Matrix ans;
	 int i, j, k;
	for (i = 0; i < MAX_N; i++)
	for (j = 0; j < MAX_N; j++)
		for (ans.mat[i][j]=0LL,k = 0; k < MAX_N; k++){
				ans.mat[i][j] += a.mat[i][k] * b.mat[k][j]; 
		
				ans.mat[i][j]%=MOD;
			}
	return ans; 
}
int XnY(int X,int Y,int a)
{
	int C,D,prev_o,prev_x;
	C=X&Y;
	D=X|Y;
	prev_o=C&(1<<0);
	prev_x=D&(1<<0);
	for(int i=1;i<a;i++)
		{
			if((C&(1<<i))&&prev_o)
				return 0;		
			if((!(D&(1<<i))&&!prev_x))	
				return 0;	
			prev_o=C&(1<<i);
			prev_x=(D&(1<<i));	
		}
	return 1;		
}
Matrix matPow(Matrix base, long long p,int MAX_N) 
{
Matrix ans; int i, j;
for (i = 0; i < MAX_N; i++) for (j = 0; j < MAX_N; j++)
	ans.mat[i][j] =0,ans.mat[i][i]=1;
while (p) 
{
if (p & 1) 
ans = matMul(ans,base,MAX_N);
base = matMul(base,base,MAX_N);
p >>= 1;
}
return ans; 
}
int main()
{
		int a;
		long long b;
		scanf("%d %lld",&a,&b);
		Matrix A;
		for(int i=0;i< 1<<a;i++)
				for(int j=i;j< 1<<a;j++)
				{
								A.mat[i][j]=XnY(i,j,a);
								A.mat[j][i]=A.mat[i][j];
				} 
	A=matPow(A,b-1,(1<<a));
	long long sum=0LL;
	for(int i=0;i<(1<<a);i++)
		for(int j=0;j<(1<<a);j++){
				sum+=A.mat[i][j]%MOD;
				sum%=MOD;
				}
	cout<<sum<<endl;
return 0;	
}
