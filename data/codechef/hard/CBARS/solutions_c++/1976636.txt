#include <cstring>
#include<stdio.h>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
//#define for(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define pb push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define mod 1000000007
#define MAXn 64
#define ll long long
#define get getchar//_unlocked
inline ll inp()
{
     ll n=0,s=1;
    char p=get();
    while((p<'0'||p>'9')&&p!=EOF)
    p=get();
    if(p=='-')
    s=-1;
    while(p>='0'&&p<='9')
    {
    n = (n<< 3) + (n<< 1) + (p - '0');
    p=get();
    };
    return n*s;
}
ll A[MAXn][MAXn],R[MAXn][MAXn],sz,a,b;
void mul(ll c[][MAXn],ll x[][MAXn],ll y[][MAXn])
{
    ll temp[MAXn][MAXn],u;
    for(ll i=0;i<sz;i++)
    {
        for(ll j=0;j<sz;j++)
        {
            temp[i][j]=0;
            for(ll k=0;k<sz;k++)
            {
             u=(1LL*x[i][k]*y[k][j]);
             u%=mod;
            temp[i][j]+=u;
            temp[i][j]%=mod;
            }
        }
    }
    for(ll i=0;i<sz;i++)
    {
        for(ll j=0;j<sz;j++)
        c[i][j]=temp[i][j];
    }
}
void matpow(ll n)
{
    while(n)
    {
        if(n&1)mul(R,R,A);
        mul(A,A,A);
        n=n>>1;
    }
}
int check(int n,int m)
{
    int x=n&m,y=n|m,i,j;
    bool u,v;
    for(i=1;i<a;i++)
    {
        u=x&(1<<i);
        v=x&(1<<(i-1));
        if(u&&v)
        return 0;
        u=y&(1<<i);
        v=y&(1<<(i-1));
        if(!u&&!v)return 0;
    }
    return 1;
}
void fun()
{
    int i,j;
    for(i=0;i<sz;i++)
    {
    for(j=0;j<sz;j++)
    A[i][j]=check(i,j);
    }
     for(i=0;i<sz;i++)
     R[i][i]=1;
}
int main()
{
     ll k,l,t,q,s=0;
     int i,j;
     a=inp();b=inp();
      sz=(1<<a);
     fun();
     /*for(i=0;i<sz;i++){
         for(j=0;j<sz;j++)
         printf("%lld ",A[i][j]);
         printf("\n");}*/
     matpow(b-1);
     for(i=0;i<sz;i++)
     {
         for(j=0;j<sz;j++)
         {
             s+=R[i][j];
             s%=mod;
         }
     }
     printf("%lld\n",s);
    return 0;
}
