#include<iostream>
#include<cstdio>
#include<cstdlib>
using namespace std;

typedef long long LL;
const int MOD = 1000000007;
const int maxS = 64;
const int maxA =6;
LL choc[maxS][maxS];

int a;
LL b;
int s;

class Matrix{
public:
    int n;//length and width of matrix. cause the matrix is quadratic it's the same
    LL A[maxS][maxS];
    Matrix operator * (Matrix b);
};

Matrix res;

Matrix Matrix::operator * (Matrix b)//operator of multiplying matrixes
{
    res.n = n;
    for (int i = 0; i < n; i++)
        for (int j = 0; j < n; j++){
            res.A[i][j] = 0;
            for (int k = 0; k < n; k++)
            {
               res.A[i][j] = (res.A[i][j] + (this->A[i][k] * b.A[k][j]) % MOD);
               if(res.A[i][j]>=MOD) res.A[i][j]%= MOD; //res[i][j] = sum(a[i][k]*b[k][j]), k = 0..n-1
            }

        }
    return res;
}
bool checkgood(int x, int y)
{
    int i1, i2;
    for(int i=1; i<a; i++)
    {

        i1 = 1<<(i-1);
        i2 = 1<<i;
        if(((x&i1) == (y&i1)) && ((x&i2) == (y&i2)) && ((x&i1) == ((x&i2)>>1)) )return 0;
    }
    return 1;
}

void precompute()
{
    for(int i=0; i<s; i++)
    {
        for(int j=0; j<s; j++)
        {
        choc[i][j] = 0;
        }
    }
    int u, v;
    for(int u=0; u<(1<<a); u++)
    {
        for(int v = 0; v<(1<<a); v++)
        {
            if(checkgood(u,v))choc[u][v] = 1;
        }
    }
    //print();

}
void print(Matrix A)
{
    for(int i=0; i<A.n; i++)
    {
        for(int j=0; j<A.n; j++)
            cout<<A.A[i][j]<<" ";
        cout<<endl;
    }
}

Matrix B, C;

void solve()
{
    B.n = s, C.n = s;
    for(int i=0; i<s; i++)
        for(int j=0; j<s; j++)
        B.A[i][j] = choc[i][j];
    //print(B);

     for(int i=0; i<s; i++)
        for(int j=0; j<s; j++)
            C.A[i][j] = 0;
    for (int i = 0; i < s; i++)
        C.A[i][i] = 1;

    b--;
    while (b){
        if (b& 1)
            C = C * B;
        B = B * B;
        b >>= 1;
    }

    LL ans=0;
    for(int i=0; i<s; i++)
    {
        for(int j=0; j<s; j++)
        {
            ans+= C.A[i][j];
            if(ans>=MOD)ans%= MOD;
        }
    }
    printf("%lld\n", ans);


}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output1.txt","w",stdout);
    #endif
    scanf("%d%lld", &a, &b);
    s = (1<<a);
    LL one = 1;

    precompute();
    solve();



}
