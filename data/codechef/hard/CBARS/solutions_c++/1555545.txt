#include<iostream>
#include<cstdio>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<bitset>
#include<map>
#include<set>
#include<climits>
#include<algorithm>
#include<utility>
#include<cstdlib>
#include<cctype>
#include<queue>
#include<sstream>
#define read(x) scanf("%d",&x)
#define write(x) printf("%d\n",x)
#define assign(x,n) x=(int*)calloc(n,4)
#define rep(i,n) for(i=1;i<=n;++i)
#define max(a,b) ((a)>(b))?(a):(b)
typedef   long long int ull;
using namespace std;
typedef  pair<int,int> pr;

struct mat
{
       ull arr[64][64];
       mat()
       {;}
};

ull m=1000000007,l;
ull  sqr(ull x){return (x*x)%m;}

ull bigmod(ull b,ull p)
       {
       if (p <= 0) return 1;
       else if (p%2 == 0)
       return sqr(bigmod(b,p/2));
       else return ((b % m) * bigmod(b,p-1)) % m;
       }  

mat mul(mat x,mat y)
{
    mat z;
    ull temp;
    ull i,j,k,len=1<<l;
    
    for(i=0;i<len;i++)
    for(j=0;j<len;j++)
    {temp=0;
                    for(k=0;k<len;k++)temp=(temp+ ((x.arr[i][k])*(y.arr[k][j]))%m)%m;
                    z.arr[i][j]=temp;
    }
    return z;
}


mat sqr(mat x)
{
    return mul(x,x); 
}



mat f(mat x,ull n)
{ 
    if(n==1)return x;
    if(n%2==0)return sqr(f(x,n/2));
    return mul(x,sqr(f(x,(n-1)/2)));
}


mat exp(mat a, ull e){
     mat res;
     int i,j,len=1<<l;
     for(i=0;i<len;i++)
     for(j=0;j<len;j++)
     res.arr[i][j]= ((i==j)? 1:0);
     
     while(e>0){
                if(e&1)
                      res=mul(res,a);
                e=e>>1;
                a=mul(a,a);
                }
     return res;
     }




ull bit(ull n,ull i)
{
    return !!(n&(1<<i));
}

ull fn(ull a,ull b)
{
    ull c=~(a^b),i;
    for(i=0;i< (l-1);i++)
    if(bit(a,i)==bit(a,i+1) &&  bit(b,i)==bit(b,i+1) && bit(a,i)==bit(b,i))return 0;
    return 1;
}
   
   
 
    
    





int main()
{

ull a,b,i,j,k,len,sum;

cin>>a>>b;
{
if(a==1)cout<<bigmod(2,b)<<endl;
else if(b==1)cout<<(1<<a)<<endl;
else
{

l=a;
len=1<<a;
mat ob;
for(i=0;i<len;i++)
{

for(j=0;j<len;j++)
{
                  ob.arr[i][j]=fn(i,j);
                 // cout<<ob.arr[i][j]<<" ";
}
//cout<<endl;
}
 

ob=exp(ob,b-1);
 
sum=0;
for(i=0;i<len;i++)
for(j=0;j<len;j++)
sum=(sum+ob.arr[i][j])%m;
cout<<sum<<endl;
}
}

 
 //freopen("in.txt","r",stdin);freopen("out.txt","w",stdout);
//system("pause");
return 0;
}
