#include<cstdio>
#include<algorithm>
using namespace std;
int dp[105][105],a[105];
double b[105][105];

int gcd(int a,int b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}


int func(int n,int p)
{ int i,x;
    if(dp[n][p]!=-1)
        return dp[n][p];
    int prob=0;
    for(i=0;i<n;i++)
    {
        x=gcd(a[i],p);
        if(x==1)
            continue;
        swap(a[i],a[n-1]);
            if(func(n-1,x)==0)
            {
                prob=1;
                swap(a[i],a[n-1]);
                break;
            }
        swap(a[i],a[n-1]);
    }
    dp[n][p]=prob;

return dp[n][p];
}

double func1(int n,int p)
{ int i,x;
    if(b[n][p]!=-1)
        return b[n][p];

        double ans=0.0;

    for(i=0;i<n;i++)
    {  x=gcd(a[i],p);
    if(x==1)
        continue;
     swap(a[i],a[n-1]);
        ans+=(1.0-func1(n-1,x))/n; //because func1(n-1,x) represents probaility of winning of second player
    swap(a[i],a[n-1]);
    }
    b[n][p]=ans;
return b[n][p];
}

int main()
{ int t,i,j,n;
    scanf("%d",&t);
    while(t--)
    {
        for(i=0;i<=100;i++)
            for(j=0;j<=100;j++)
            dp[i][j]=b[i][j]=-1;
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%d",&a[i]);
        }

        printf("%d %.4f\n",func(n,0),func1(n,0));
    }
return 0;
}
