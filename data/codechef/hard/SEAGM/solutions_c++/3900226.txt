#include <stdio.h>
#include <string.h>
#include <algorithm>
using namespace std;

#define clr(a) memset(a,0,sizeof(a))
#define rep(i,s,t) for(int i=s;i<t;i++)
#define N 110

inline int input(){
	int ret=0;
	char c=getchar();
	while(c<'0' || c>'9') c=getchar();
	while(c>='0' && c<='9'){
		ret=ret*10+c-'0';
		c=getchar();
	}
	return ret;
}
 
int t,n,a[N],map[N][N];
bool vis[N],tag;
int win[N][N];
double dp[N][N];

inline int gcd(int a,int b){
	if(!a) return b;
	if(!b) return a;
	return gcd(b,a%b);
}

inline bool dfs1(int cnt,int g){
	if(win[cnt][g]!=-1) return win[cnt][g];
	if(cnt==0) return win[cnt][g]=0;
	int ans=0;
	rep(i,0,n){
		if(!vis[i]){
			int x=map[a[i]][g];
			if(x!=1){	
				vis[i]=1;
				if(!dfs1(cnt-1,x)){
					ans=1;
				}
				vis[i]=0;
			}
		}
		if(ans) break;
	}
	return win[cnt][g]=ans;
}

inline double dfs2(int cnt,int g){
	if(dp[cnt][g]!=-1) return dp[cnt][g];
	if(cnt==0) return dp[cnt][g]=0;
	double ans=0;
	rep(i,0,n){
		if(!vis[i]){
			int x=map[a[i]][g];
			if(x!=1){
				vis[i]=1;
				ans+=(1-dfs2(cnt-1,x))/cnt;
				vis[i]=0;
			}
		}
	}
	return dp[cnt][g]=ans;
}

int main(){
//freopen("in","r",stdin);
//freopen("out","w",stdout);
	rep(i,0,101) rep(j,0,101) map[i][j]=gcd(i,j);
	t=input();
	while(t--){
		n=input();
		rep(i,0,n) a[i]=input();
		rep(i,0,N) rep(j,0,N){
			dp[i][j]=-1;win[i][j]=-1;
		}
		clr(vis);
		if(dfs1(n,0)==1) printf("1 ");
		else  printf("0 ");
		clr(vis);
		printf("%.4lf\n",dfs2(n,0));
	}
}