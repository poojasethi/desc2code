    #include <iostream>
    #include <bits/stdc++.h>
    #define sereja true
    #define oppponent false
    #define N 105
    using namespace std;
    int dpTable1[105][105];
    double dpTable2[105][105];
    bool vis[105][105];
    int n;
    int a[N];
    bool dp(int lastGCD,int taken)
    {
     
    if(lastGCD == 1)
    return true;
    if(taken == n)
    return false;
    if(vis[lastGCD][taken])
    return dpTable1[lastGCD][taken];
    vis[lastGCD][taken] = 1;
    int tot = 0;
    for(int i=0;i<n;++i) if(__gcd(a[i],lastGCD) == lastGCD) ++tot;
    bool res = false;
    if(tot>taken &&!dp(lastGCD,taken+1))
    res = true;
    if(!res)
    {
    for(int i=0;i<n;++i)
    {
    if(__gcd(a[i],lastGCD) != lastGCD)
    if(!dp(__gcd(a[i],lastGCD),taken+1))
    {
    res = 1;
    break;
    }
    }
    }
    return dpTable1[lastGCD][taken] = res;
     
     
    }
    double dp2(int lastGCD,int taken)
    {
    if(lastGCD == 1)
    return 1.0;
    if(taken == n)
    return 0.0;
    if(vis[lastGCD][taken])
    return dpTable2[lastGCD][taken];
    vis[lastGCD][taken] = 1;
    double res = 0.0;
    int tot = 0;
    for(int i=0;i<n;++i) if(__gcd(a[i],lastGCD) == lastGCD) ++tot;
    if(tot>taken)
    res+= ( (1-dp2(lastGCD,taken+1)) * 1.0 * (tot-taken))/(n-taken);
    for(int i=0;i<n;++i)
    {
    if(__gcd(a[i],lastGCD) != lastGCD)
    res+=((1-dp2(__gcd(a[i],lastGCD),taken+1)) * 1.0 / (n-taken));
    }
     
    return dpTable2[lastGCD][taken] = res;
     
     
    }
    int main() {
    int T;
    cin >> T;
     
    while (T--) {
    cin >> n;
    int g = 0;
    for (int i = 0; i < n; i++) {
    cin >> a[i];
    g = __gcd(g, a[i]);
    }
    if (g > 1) {
    // dont forget to print exactly 4 digits after the decimal.
    cout << n % 2 << " " << (n % 2) << ".0000" << endl;
    continue;
    }
    // intiliaze memo array with -1, denoting state is not been processed yet.
    memset(vis, 0, sizeof(vis));
    int ok = false;
    if (dp(0, 0)) ok = true;
    if (ok) cout << 1 << " ";
    else cout << 0 << " ";
     
    // intiliaze memo1 array with -1, denoting state is not been processed yet.
    for (int i = 0; i < N; i++)
    for (int j = 0; j < N; j++)
    vis[i][j] = 0;
     
    double res = dp2(0, 0);
     
    // dont forget to print exactly 4 digits after the decimal.
    printf("%.4f\n", res);
    }
     
    return 0;
    }
