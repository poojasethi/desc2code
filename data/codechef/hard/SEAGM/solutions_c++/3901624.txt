#include <iostream>
using namespace std;
int gcd(int a,int b)
{
if(b==0)
return a;
return gcd(b,a%b);
}
int main() {
	int factor[109][14]={0};
	for(int i=2;i<=100;i++)
	{
	int k=1;
	for(int j=1;j<=i;j++)
	{
	if(i%j==0)
	{factor[i][k]=j;k++;}
	}
	factor[i][0]=k;
	}
	int t,n;
	cin>>t;
	while(t--)
	{
	int a[109];
	int count[109][109]={0};
	int count2[109]={0};
	bool dp[109][109];
	long double dp2[109][109];
	int max=0;
	cin>>n;
	for(int i=0;i<n;i++)
	{cin>>a[i];if(a[i]>max)max=a[i];}
	for(int i=0;i<n;i++)
	{
	int j=a[i];
	for(int k=1;k<factor[j][0];k++)
	count2[factor[j][k]]++;
	}
	for(int i=0;i<=max;i++)
	{
	for(int j=0;j<n;j++)
	count[i][gcd(i,a[j])]++;
	}
	for(int i=0;i<=n;i++)
	{
	dp[1][i]=1;
	dp2[1][i]=1.0;
	}
	for(int i=2;i<=max;i++)
	{
	dp[i][count[i][i]+1]=1;
	int p=count[i][i];
	if(p==n)
	{dp[i][n]=0;p--;}
	for(int j=p;j>=1;j--)
	{
	int p=1;int temp,temp2=0;
	for(int k=1;k<factor[i][0];k++)
	{
	if(count[i][factor[i][k]]!=0)
	{
	if(dp[factor[i][k]][j+1]==1)
	temp=0;
	else
	temp=1;
	temp2=temp2|temp*(1-dp[factor[i][k]][j+1]);
	}
	}
	dp[i][j]=temp2;
	}
	dp2[i][count[i][i]+1]=0.0;
	int x=count[i][i];
	if(x==n)
	{dp2[i][n]=0.0;x--;}
	for(int j=x;j>=1;j--)
	{
	long double temp2=0;
	for(int k=1;k<factor[i][0];k++)
	{
	long double temp=0.0;int x;
	if(k!=factor[i][0]-1)
	{x=count[i][factor[i][k]];int y=n-j;temp=((long double)x/(long double)y);}
	else
	{x=count[i][factor[i][k]]-j;if(x<0)x=0;int y=n-j;temp=((long double)x/(long double)y);}
	temp2+=temp*dp2[factor[i][k]][j+1];
	}
	dp2[i][j]=1-temp2;
	}
	}
	long double res=0.0;
	int x=0;
	int temp3;
	bool visited[109]={false};
	for(int i=0;i<n;i++)
	{
	if(!visited[a[i]])
	{
	int p=count[0][a[i]];int y=n;visited[a[i]]=true;
	long double temp=(long double)p/(long double)y;
	if(dp[a[i]][1]==1)
	temp3=0;
	else
	temp3=1;
	res+=temp*dp2[a[i]][1];
	x=x|temp3*(1-dp[a[i]][1]);
	}
	}
	printf("%d %.4Lf\n",x,1-res);
	}
	return 0;
}