#include <algorithm>
#include <cstdio>
#include <cstdlib>

using namespace std;
#define MAXN 100010
#define MAXL 25

int P[MAXN][MAXL];
int h[MAXN];
int par[MAXN];
int t, n, diam;
int d1, d2;

void init()
{
    for (int i=0 ; i<=n ; i++)
    {
        h[i] = 0;
        for (int j=0 ; j<=24 ; j++)
            P[i][j] = 0;     
    }
    
    P[1][0] = 1;
}

int lca(int p, int q)
{
     int tmp, log, i;
     
     if (h[p] < h[q])
     {
         tmp = p;
         p = q;
         q = tmp;
     }
     
     for (log=1 ; (1<<log)<=h[p] ; log++);
     log--;
     
     for (i = log ; i>=0 ; i--)
         if (h[p]-(1<<i) >= h[q])
             p = P[p][i];
             
     if ( p == q)
         return p;
     
     for (i = log ; i >= 0; i--)
     {           
          if (P[p][i] != P[q][i])
          {
              p = P[p][i];
              q = P[q][i];
          }
     }
     
     return par[p];
}

bool update(int i, int u, int &v) 
{
    int temp =  lca(u, i);
    //printf("(u, i) : (%d, %d) : lca is %d\n", u, i, temp);
    int dia = h[u] -  h[temp] + h[i] - h[temp];
 
    if( dia > diam ) {
        v = i;
        diam = dia;
        return true;
    }
 
    return false;
}

int main()
{
     scanf("%d", &t);
     while (t--)
     {
          scanf("%d", &n);
          init();
     
     
          h[1] = 0;
          par[1] = 1;
          par[0] = 1;
          diam = 1;
          d1 = 1;
          d2 = 2;
          
          P[1][0] = 1;
          for (int i=2 ; i<=n ; i++)
          {
              scanf("%d", &par[i]);
              h[i] = h[par[i]] + 1;
              P[i][0] = par[i];
              
              for (int j=1 ; (1<<j)<=h[i] ; j++)
                  P[i][j] = P[P[i][j-1]][j-1];
                  
              if (!update(i, d1, d2))
                  update(i, d2, d1);
                  
              printf("%d\n", diam);      
          } 
     }
     
     return 0;    
}
