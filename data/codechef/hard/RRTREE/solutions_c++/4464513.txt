#include<cstdio>
using namespace std;
int par[100005];
int lev[100005];
int p[100005][17];
int maxm(int x,int y)
{
    if(x>y) return x; else return y;
}
int dist(int u, int v)
{
    int d1=0,d2=0,log;
    if(lev[u]<lev[v]) v=(u+v)-(u=v);
    for(log=1;1<<log<=lev[u];log++);
    log--;
    for(int i=log;i>=0;i--)
    {
        if(lev[u]-(1<<i)>=lev[v])
        {
            u=p[u][i];
            d1+=(1<<i);
        }
    }
    if(u==v) return d1;
    for (int i = log; i >= 0; i--)
          if (p[u][i] != -1 && p[u][i] != p[v][i])
            {
                u  = p[u][i], v = p[v][i];
                d2+=(1<<i);
            }
    d2++;
    return 2*d2+d1;
}
main()
{
    int t;
    scanf("%d",&t);
    for(;t;t--)
    {
        int n;
        scanf("%d",&n);
        par[1]=-1;
        lev[1]=1;
        for(int i=2;i<=n;i++)
        {
            int x;
            scanf("%d",&x);
            par[i]=x;
            lev[i]=lev[x]+1;
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=0;1<<j<=n;j++)
            {
                p[i][j]=-1;
            }
        }
        for(int i=1;i<=n;i++)
        {
            p[i][0]=par[i];
        }
        for (int j = 1; 1 << j <= n; j++)
         for (int i = 1; i <= n; i++)
             if (p[i][j - 1] != -1)
                 p[i][j] = p[p[i][j - 1]][j - 1];
        int v1=1,v2=1,diameter=0;
        for(int i=2;i<=n;i++)
        {
            int l =dist(v1,i);
            int m =dist(v2,i);
            if(maxm(l,m)>diameter)
            {
                if(l>m) v2=i; else v1=i;
                diameter++;
            }
         printf("%d\n",diameter);
        }
    }
    return 0;
}
