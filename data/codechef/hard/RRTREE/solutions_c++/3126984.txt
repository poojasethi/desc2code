#include <cstdio>
#include <algorithm>
#include <vector>
#include <list>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair

typedef pair<int,int> pint;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;


#define MAX_N 100005

int n,toroot[MAX_N],id[MAX_N],idx[MAX_N],rmq[20][MAX_N*2],apos[MAX_N];
list<int> adjl[MAX_N];

int _id,arrpos;
void f(int i, int p)
{
	toroot[i]=(p==-1?0:toroot[p]+1);
	id[i]=_id++;
	idx[id[i]]=i;
	apos[i]=arrpos;
	rmq[0][arrpos++]=id[i];
	for (list<int>::iterator it=adjl[i].begin(); it!=adjl[i].end(); it++)
		if ((*it)!=p)
		{
			f(*it,i);
			rmq[0][arrpos++]=id[i];
		}
}

int lca(int p, int q)
{
	if (p>q)
		swap(p,q);
	int lg = 31-__builtin_clz(q-p+1);
	return min(rmq[lg][p], rmq[lg][q+1-(1<<lg)]);
}
#define dist(a,b) (toroot[a]+toroot[b]-2*toroot[idx[lca(apos[a],apos[b])]])

int main()
{
	int a,b,c,e,tc;
	scanf("%d",&tc);
	while (tc--)
	{
		scanf("%d",&n);
		for (int i=1; i<n; i++)
			scanf("%d",&a),a--,
			adjl[a].pb(i),adjl[i].pb(a);
		_id=arrpos=1;
		f(0,-1);
		for (int d=1; (1<<d)<arrpos; d++)
			for (int i=1; i+(1<<d)<=arrpos; i++)
				rmq[d][i]=min(rmq[d-1][i],rmq[d-1][i+(1<<d>>1)]);
		a=b=0;
		for (int i=1; i<n; i++)
		{
			c=dist(a,i),e=dist(b,i);
			if (dist(a,b)<max(c,e))
			{
				if (c>e)
					b=i;
				else
					a=i;
			}
			printf("%d\n",dist(a,b));
		}
		for (int i=0; i<n; i++)
			adjl[i].clear();
	}
	return 0;
}
