#include <bits/stdc++.h>
#define ll long long
#define MOD 1000000007
#define INF 0x3f3f3f3f

using namespace std;
int dp1[1<<21],dp2[1<<21],connected[25];
int solve(int n)
{
    int y=1<<n;
    for(int mask=0;mask<y;mask++)
    {
        for(int i=0;i<n;i++)
        {
            if(!(mask&(1<<i)))
            {
                int next_state=mask|(1<<i);
                dp1[next_state]=dp1[mask];
                int sub=__builtin_popcount(connected[i]&mask);
                int add=__builtin_popcount(connected[i]);
                dp1[next_state]+=add-2*sub;
            }
        }
    }

    memset(dp2,0x3f,sizeof(dp2));
    dp2[0]=0;
    for(int mask=0;mask<y;mask++)
    {
        for(int i=0;i<n;i++)
        {
            if(!(mask&(1<<i)))
            {
                int next_state=mask|(1<<i);
                dp2[next_state]=min(dp2[next_state],dp2[mask]+dp1[mask]);
            }
        }
    }

    return dp2[(1<<n)-1];
}
int main()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i=0;i<m;i++)
    {
        int x,y;
        scanf("%d%d",&x,&y);
        x--;y--;
        connected[x]|=(1<<y);
        connected[y]|=(1<<x);
    }
    printf("%d",solve(n));
    return 0;
}
