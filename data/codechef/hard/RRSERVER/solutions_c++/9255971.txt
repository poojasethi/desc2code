#include<bits/stdc++.h>
using namespace std;
typedef pair < int  , int > ii;
typedef pair < ii , int > iii;
typedef long long li;
int mask[21];
int dp[1<<21] , cost[1<<21];

const int INF = (int)1e9;
void bin(int x , int n )
{
    string ret="";
    while(x)
    {
        ret+=char( ( x%2 )+'0');
        x/=2;
    }
    while(ret.length()<n)
        ret+='0';
    reverse(ret.begin(),ret.end());
    cout<<ret<<" ";
}
int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    int N , M , i , l , r , j  ;
    cin>>N>>M;

    for(i=0;i<M;++i)
    {
        cin>>l>>r;
        --l;--r;
        mask[l]|=1<<r;
        mask[r]|=1<<l;
    }

    for(i=1;i<(1<<N);++i)
    {
        cost[i] = 0 ;

        for(j=0;j<N;++j)
            if(  !((i>>j)&1)  )
                cost[i] += __builtin_popcount(mask[j] & i);
//        bin(i,N);
//        cout<<cost[i]<<"\n";
    }


    for(i=1;i<(1<<N);++i)
    {
        dp[i]=INF;
        for(j=0;j<N;++j)
            if((i>>j)&1)
                dp[i] = min(dp[i^(1<<j)]  + cost[i^(1<<j)], dp[i] );
    }
    cout<<dp[(1<<N)-1];
    return 0;
}
