#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define mp make_pair
#define f first
#define s second
#define N 1500005
#define NN 55
#define ln 1e10+1
#define ll long long
#define oo 1000000007
#define ln 1e9
#define BIT(i, j) ((j >> i) & 1)
#define pii pair < pair <int, int>, int >
#define pi pair < int, pair <int, int> >
#define Pa pair < int ,int >

using namespace std;

int DP[N], Sum[N];
int dd[NN][NN], n, m, u, v;

int main()
{
   // filein("inp.txt"); fileout("out.txt");
    cin >> n >> m;
    for(int i=1; i<=m; i++)
    {
        cin >> u >> v; u--, v--;
        if(u != v)
        {
            dd[u][v] = 1;
            dd[v][u] = 1;
        }
    }
    int X = (1 << n) - 1;
    for(int i=1; i<=X; i++)
    {
        for(int j=0; j<n; j++)
            if(BIT(j, i))
            {
                int B = i^(1<<j);
                DP[i] = DP[B];
                for(int k=0; k<n; k++)
                    if(dd[j][k])
                    {
                        if(BIT(k, B) == 1)  DP[i]--;
                        else    DP[i]++;
                    }
                break;
            }
    }
    for(int i=1; i<=X; i++)
    {
        Sum[i] = ln;
        for(int j=0; j<n; j++)
            if(BIT(j, i))
                Sum[i] = min(Sum[i], Sum[i^(1<<j)] + DP[i^(1<<j)]);
    }
    cout << Sum[X];
}
