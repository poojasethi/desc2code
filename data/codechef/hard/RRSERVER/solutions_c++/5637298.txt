/*pranjuldb*/
#include <bits/stdc++.h>
#define pri(a) printf("%d",a)
#define prl(a) printf("%lld",a)
#define prd(a) printf("%lf",a)
#define nl printf("\n")
#define sp printf(" ")
#define prs(str) printf("%s", str)
#define pb push_back
#define mem(a,b) memset(a, b, sizeof(a))
#define vi vector < int >
#define vl vector < long long int >
#define pll pair<long long, long long>
#define pii pair < int , int >
#define ll long long
#define rep(i,j,k) for(i = j; i < k; i++)
#define nrep(i,j,k) for(i = j; i >= k; i--)
#define scs(str) scanf("%s", str)
#define sci(a) scanf("%d",&a)
#define scl(a) scanf("%lld",&a)
#define scd(a) scanf("%lf", &a)
#define fr first
#define se second
#define mp make_pair

using namespace std;

int dp1[1<<21], dp2[1<<21], n, m;
int g[101][101];

int f2(int mask)
{
    if(dp2[mask] != -1) return dp2[mask];
    int sum = 0;
    int i, j;
    rep(i, 0, n) {
        if(mask&(1<<i)) {
            rep(j, 0, n) {
                if(mask&(1<<j)) continue;
                sum += g[i][j];
            }
        }
    }
    dp2[mask] = sum;
    return sum;
}

int f(int mask)
{
    if(mask == (1<<n) - 1) return 0;
    if(dp1[mask] != -1) return dp1[mask];
    int minn = INT_MAX;
    int i, j;
    rep(i, 0, n) {
        if((1<<i)&mask) continue;
        int xx = f2(mask);
        minn = min(minn, xx + f(mask|(1<<i)));
    }
    dp1[mask] = minn;
    return dp1[mask];
}

int main()
{
    mem(dp1,-1);
    mem(dp2,-1);
    //int n, m;
    sci(n); sci(m);
    int i, j;
    rep(i, 0, m) {
        int x, y;
        sci(x); sci(y);
        x--; y--;
        g[x][y] = g[y][x] = 1;
    }
    pri(f(0)); nl;

    return 0;
}
