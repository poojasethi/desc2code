#include<cstdio>
#include<iostream>
#include<algorithm>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<functional>
#include<limits>
#include<cassert>
#include<sstream>
#include<cmath>

using namespace std;
typedef long long ll;

const int max_n=100005;
const ll mod=1000000007;

int T,n;
char s[max_n];
int itr[max_n];
int prev[max_n];

const int max_bn=100010;
int BIT[max_bn+1];
int bn;

void BITinit()
{
	fill(BIT+1,BIT+bn+1,0);
}
void BITupd(int pos, int inc)
{
	for(int i=pos; i<=bn; i+=((i)&(-i)))
		BIT[i]+=inc;
}
int BITprs(int k)
{
	int ret=0;
	for(int i=k; i>0; i-=((i)&(-i)))
		ret+=BIT[i];
	return ret;
}
int BITqry(int l, int r)
{
	return BITprs(r)-BITprs(l-1);
}

int main()
{
    scanf("%d",&T);
	for(int z=0; z<T; z++)
	{
		scanf("%d%s",&n,s);
    	fill(itr,itr+n+1,0);
    	fill(prev,prev+n,0);
    	bn=n;
    	BITinit(); 

    	for(int i=1; i<n; i++)
    	{
            if(s[i]=='7')
            {
                int t=i-1;
                int m=0;
                while(t>=0)
                {
                    if(s[t]=='4')
                    {
                        prev[i]=t;
                        itr[t]=m+1;
                        itr[i]=m+1;
                        //cout<<t<<" "<<itr[t]<<endl;
                        break;
                    }
                    else if(itr[t]==0)
                        break;
                    else
                    {
                        m=max(m,itr[t]);
                        t=prev[t]-1;
                    }

                }
            }
    	}

    	ll res=0ll;
    	for(int i=0; i<n; i++)
    		if(s[i]=='4' and itr[i]>0)
    		{
    			//cout<<i<<" "<<itr[i]<<endl;
    			res+=(ll)(i+1-2*BITqry(0,itr[i]-1));
    			BITupd(itr[i],1);
    		}

    	cout<<res<<"\n";
    }

    return 0;
}
