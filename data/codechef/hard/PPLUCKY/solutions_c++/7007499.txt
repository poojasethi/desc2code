//prakharsharma
//http://www.codechef.com/problems/PPLUCKY see editorial

#include<bits/stdc++.h>

using namespace std;

#define MAXN 100000

int T,N,clean[MAXN+5],icount;
long long BIT[MAXN+5],totInv,sum;
string str;

int previ=-1,prevj=-1,tillmax,tempmax,M[5*(MAXN+5)];


int findMax(int node, int b, int e, int i, int j)
{
    if(b>j||e<i)return 0;
    if(i<=b&&j>=e)return M[node];

    return max(findMax(node*2,b,(b+e)/2,i,j),findMax(node*2+1,(b+e)/2 +1, e,i,j));
}

void setVal(int node, int b, int e, int pos, int val)
{
    if(b==e)
    {
        M[node]=val;
        return;
    }
    pos<=(b+e)/2?setVal(node*2,b,(b+e)/2,pos,val):setVal(node*2+1,(b+e)/2+1,e,pos,val);
    M[node]=max(M[2*node],M[2*node+1]);
}

void fillClean()
{
    stack<int> stk;
    for(int i=0;i<N;i++)
    {
        if(str[i]=='4')
        {
            stk.push(i);
        }
        else if (!stk.empty())//str[i]='7'
        {
            int idx=stk.top();stk.pop();
            if(idx+1==i)
            {
                setVal(1,0,N-1,idx,1);
                setVal(1,0,N-1,i,1);
                clean[idx]=clean[i]=1;
            }
            else
            {
                int temp=findMax(1,0,N-1,idx+1,i-1);
                if(temp==N+1)clean[idx]=clean[i]=N+1;
                else clean[idx]=clean[i]=temp+1;
                setVal(1,0,N-1,idx,clean[idx]);
                setVal(1,0,N-1,i,clean[idx]);
            }
//            if(idx+1!=i&&temp!=*max_element(clean+idx+1,clean+i))throw 2;


        }
    }

//    for(int i=0;i<N;i++)cout<<clean[i]<<"   ";

}

void update(int idx, int val)
{
    while(idx<=N)
    {
        BIT[idx]+=val;
        idx+=idx&(-idx);
    }
}

long long query(int idx)
{
    sum=0;
    while(idx)
    {
        sum+=BIT[idx];
        idx-=idx&(-idx);
    }
    return sum;
}

int main()
{
    scanf("%d",&T);
    while(T--)
    {
//        N=100000;
//        for(int i=0;i<N;i++)if(i<N/2)str.push_back('4');else str.push_back('7');
            scanf("%d",&N);
            previ=prevj=-1;
            tillmax=-1;

        for(int i=0;i<=N;i++)
        {
            clean[i]=N+1;BIT[i]=0;
        }

        cin>>str;
        fillClean();
        totInv=0;
        for(int i=0;i<N;i++)
        {
            if(str[i]=='4'&&clean[i]!=N+1)
            {
//                cout<<i+1-query(clean[i]-1)<<"    ";cout<<endl;
                totInv+=i+1-query(clean[i]-1);
            }

            update(clean[i],1);
        }


        printf("%lld",totInv);cout<<endl;

    }
    return 0;
}
