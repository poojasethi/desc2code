
#include<bits/stdc++.h>
using namespace std;
int query(int *removed, int idx)
{
	int sum = 0;
	while(idx > 0)
	{
		sum += removed[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
 
void update(int *removed, int n, int idx, int x)
{
	while(idx <= n)
	{
		removed[idx] += x;
		idx += (idx & -idx);
	}
}
 
int main()
{
	char s[100002];
	int t, n;
    scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		scanf("%s",s+1);
		stack<int> st;
		int removal_time[n+1], removed[n+1];
		memset(removal_time,0,sizeof(removal_time));
		memset(removed,0,sizeof(removed)); 
		for(int i=1; i<=n; ++i)
		{
			if(s[i] == '4')
				st.push(i);
			else if(st.size())
			{
				int j = st.top();
				st.pop();
				++removal_time[j];
				if(st.size())
					removal_time[st.top()] = max(removal_time[st.top()], removal_time[j]);
			}
		}
 
		while(st.size())
		{
			removal_time[st.top()] = 0;
			st.pop();
		}
 
		long long ans = 0;
		for(int i=1; i<=n; ++i)
		{
			if(removal_time[i] == 0)
				continue;
			ans += i - 2*query(removed, removal_time[i]-1);
			update(removed, n, removal_time[i], 1);
		}
		printf("%lld\n", ans);
	}
	return 0;
} 