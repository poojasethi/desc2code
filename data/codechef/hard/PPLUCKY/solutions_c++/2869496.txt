#include <cstring>
#include<cstdio>
#include<vector>
#include<stack>
#include<map>
#include<queue>
#include<set>
#include<list>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<climits>
#include<cstdlib>
#define snd(a) scanf("%d",&(a))
#define snlld(a) scanf("%lld",&(a))
#define rep(i,n) for((i)=0;(i)<(n);(i)+=1)
#define reps(i,s,n) for((i)=(s);(i)<(n);(i)+=1)
#define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define pb push_back
#define pf push_front
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define fill(a,v) memset((a),(v),sizeof(a))
#define sz size()
#define mp make_pair
#define N 100010
#define mod  1000000007
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
template<class T> inline T poww(T b,T p){ll a=1;while(p){if(p&1){a=(a*b);}p>>=1;b=(b*b);}return a;}
template<class T> inline T modpoww(T b,T p,T mmod){ll a=1;while(p){if(p&1){a=(a*b)%mmod;}p>>=1;b=(b*b)%mmod;}return a%mmod;}
template<class T>  inline T gcd(T a,T b){ if(b>a)return gcd(b,a);return ((b==0)?a:gcd(b,a%b));}
template<class T> inline void scan(vector<T>& a,int n){T b;int i; rep(i,n){cin>>b;a.pb(b);}}
#define modd  20071027
#define pii pair<int,int>
#define vpii vector<pii >
#define vi vector<int>
#define vvi vector<vi >
#define vl vector<long long>
#define fr first
#define sd second
#define mx 50

template<class T>
class BIT{
    public:
    T *tree,n;
    BIT(int n,int v=0){
        tree=(T*)malloc(sizeof(T)*(n+20));
        (*this).n=n;
    }
    void clear(int v=0){
         for(int i=0;i<n+20;i++)tree[i]=v;
    }
    void update(int idx ,T val){//##############send queries as per 1 based index
        while (idx <= n){
            tree[idx] += val;
            idx += (idx & -idx);
        }
    }
    T read_cum(int idx){//cummulative till idx
        T sum = 0;
        while (idx > 0){
            sum += tree[idx];
            idx -= (idx & -idx);
        }
        return sum;
    }
    T read(int idx,int idx2){//
        return read_cum(idx2)-read_cum(idx-1);
    }

};

int main(){
    int i,j,k,t,n,q,m; ll ans;
    snd(t);
    string a;
    BIT<int> bit(100010);
    while(t--){
        bit.clear();
        ans=0;
        snd(n);
        cin>>a;
        a=" "+a;
        set<int> s;
        set<int>::iterator it;
        reps(i,1,n+1)s.insert(i);
        vi loc;
        reps(i,1,n+1){
            bit.update(i,1);
            if(i<n)if(a[i]=='4'&&a[i+1]=='7')loc.pb(i);//pos of 4's st nxt is 7
        }
        while(loc.sz){
            //cout<<loc.sz<<":\n";
            vi tmp;//new pairs formed
            vi del;//pos of deleted 7
            rep(i,loc.sz){
              //  cout<<loc[i]<<" <--\n";
                ans+=bit.read_cum(loc[i]);
                s.erase(s.find(loc[i]));//del 4's pos
                it=s.upper_bound(loc[i]);
                del.pb(*it);//7's pos
                s.erase(it);//del 7's pos
                it=s.lower_bound(loc[i]);
                if(it!=s.end()&&it!=s.begin()&&a[*it]=='7'){//new pairs formed
                    if(a[*(--it)]=='4')tmp.pb(*it);
                }
            }
            rep(i,loc.sz){
                    bit.update(loc[i],-1);//deleted 4
                    bit.update(del[i],-1);//deleted 7
            }
            loc=tmp;
        }
        cout<<ans<<"\n";
    }
}








