#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<string>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<ctime>
using namespace std;
#define CLR(a,b) memset(a,(b),sizeof(a))
#define MP make_pair
#define pb push_back
#define N 100000
typedef long long  LL;
typedef pair<int,int> pi;
typedef vector<int> vi;
int T[N+2];
int getsm(int x){
	int sm = 0;while (x > 0) sm =(sm+T[x]), x -= (x & -x);return sm;
}
void upd(int x ,int v){
	while (x <= N) T[x]=(T[x]+v), x += (x & -x);
}
char str[N+2];
int main(){
	int i,j,k,t,n,totl=0;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);scanf("%s",str);
		int l=strlen(str);
		set<int> S;CLR(T,0);vi now;
		for(i=1;i<=n;i++)upd(i,+1),S.insert(i);
		for(i=0;i<n;i++)if(str[i]=='4' && str[i+1]=='7')now.pb(i+1);//pos to del,note 1 to n
		LL ans=0;
		while(!now.empty()){
			vi tmp; // The new positions for P
			vi del; // The indexes with '7' which get deleted
			for(i=0;i<now.size();i++){
				ans+=getsm(now[i]);
				S.erase(S.find(now[i]));//4 pos
				set<int>::iterator it=S.upper_bound(now[i]);del.pb(*it);//7pos
				S.erase(S.find(*it));
				if(S.empty()) continue;
				it=S.lower_bound(now[i]);//in fact must >
				if(it!=S.end() && it!=S.begin() && str[*it-1]=='7'){//note in str index-1
					--it;if(str[*it-1]=='4') tmp.pb(*it);//form new 
				}
			}
			for(i=0;i<now.size();i++)upd(now[i],-1),upd(del[i],-1);//4 and corr 7 position
			now=tmp;
		}
		printf("%lld\n",ans);
	}
	return 0;
}
