#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <ctime>
#include <cassert>
#include <climits>
#include <limits>
#include <string>
using namespace std;

//Macros
#define dbl double
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair< int, int >
#define psi pair< string, int >
#define vi vector<int>
#define vll vector<ll>

#define abs(x) ((x)<0?-(x):(x))
#define sqr(x) ((x)*(x))

#define MOD 1000000007ll
#define MAXN 1005
#define MAXBUF 5000000
#define EPS 1e-9
#define NIL 0
#define INF (INT_MAX/2)
#define LLINF (LONG_LONG_MAX/2LL)
#define NEWLINE '\n'

#define SET(A) memset(A, 1,sizeof(A));                     //NOTE: Works only for x = 0 and -1. Only for integers.
#define CLR(A) memset(A, 0,sizeof(A));
#define MEM(A,x) memset(A,x,sizeof(A));
#define CPY(A,B) memcpy(A,B,sizeof(A));

#define SIZE(A) ((int)(A.size()))
#define ALL(x)  x.begin(),x.end()
#define FILL(A,x) fill(ALL(A),x)
#define REP(i,N) for(int i=0;i<(int)(N); ++i)
#define FORab(i,a,b) for(int i=(int)(a);i<=(int)(b); ++i)
#define RFORab(i,a,b) for(int i=(int)(a);i>=(int)(b); --i)
#define FOR1(i,n) FORab(i,1,(n))
#define RFOR1(i,n) RFORab(i,(n),1)
#define FOR(i,n) FORab(i,0,(n)-1)
#define RFOR(i,n) RFORab(i,(n)-1,0)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define SORTV(x) sort(ALL(x))
#define REVV(x) reverse(ALL(x))

#define mp make_pair
#define pb push_back
#define ff first
#define ss second

#define nbits(n) __builtin_popcount(n)                  //NOTE: Works only for int. Write your own function for long long :-/
#define atbit(x,i) (((x)>>(i))&1)
#define FIXMOD(a) (((a)%MOD+MOD)%MOD)

#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)


int arr_q[100005];

vector <int> tree;
int MaxVal;

void update(int idx ,int val){
	while (idx <= MaxVal){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}

int read(int idx){
	int sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}

int main()
{
    int t;
    cin>>t;
    while( t-- )
    {
	int n;
	cin>>n;
	string s;
	cin>>s;
//	cout<<s<<endl;
	vector <int> prefix_step(n, 0);
	vector <int> step(n, 0);
	tree.resize(2*n+1);
	for( int i=0;i<2*n+1;i++)
	    tree[i] = 0;
	MaxVal = 2*n;

	vector <int> dummy(n, 1);

	int qcur = 0;
	int ulti = 1;
	for( int i=0;i<n;i++)
	{
	    if( s[i] == '7' )
	    {
		if( qcur == 0 )
		    continue;
		step[arr_q[qcur-1]] = dummy[qcur-1];
//		cout<<"STEP "<<arr_q[qcur-1]<<" "<<dummy[qcur-1]<<endl;

		qcur--;
		//ulti++;
		if( qcur > 0 )
		  dummy[qcur-1] = max(dummy[qcur-1], dummy[qcur]+1);

		dummy[qcur] = 1;
	    }
	    else
	    {
		arr_q[qcur] = i;
		qcur++;
		//ulti = 1;
	    }
	}
	long long ans = 0;
	for( int i=0;i<n;i++)
	{
	    if( step[i] == 0 )
		continue;
	    ans += i+1 - 2*read(step[i]-1);
//	    cout<<"i "<<i<<endl;
//	    cout<<step[i]<<" "<<endl;
	    update(step[i], 1);
//	    cout<<"i "<<i<<endl;
	}
	cout<<ans<<endl;
    }
    return 0;
}





	

