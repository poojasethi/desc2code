#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <complex>
using namespace std;
#define For(i,a,b) for(int i=a;i<=b;i++)
#define Ford(i,a,b) for(int i=a;i>=b;i--)
#define fi first
#define se second
#define sr(x) (int)x.size()
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; For(_,a,b) cout << x[_] << ' '; cout << endl;}
#define Bit(s,i) ((s&(1<<i))>0)
#define Two(x) (1<<x)
const int modul = 1000000007;
const int nmax = 100010;
const double e = 1e-8;
const double pi = acos(-1);
typedef long long ll;
typedef pair<int,int> pii;

int n,st[nmax],stest,bit[nmax],tree[nmax];
string s;
void update(int i,int x) {
    for (;i;i-=i&(-i)) tree[i]=max(tree[i],x);
}
int query(int i) {
    int x=0;
    for (;i<=n;i+=i&(-i)) x=max(x,tree[i]);
    return x;
}
void add(int i,int x) {
    for (;i<=n;i+=i&(-i)) bit[i]+=x;
}
int quest(int i) {
    int x=0;
    for (;i;i-=i&(-i)) x+=bit[i];
    return x;
}
int main()
{
   // freopen("input.txt","r",stdin);
    ios::sync_with_stdio(false);
    for (cin >> stest;stest;stest--) 
    {
        cin >> n >> s;
        s=' '+s;
        int top=0;
        ll res=0;
        For(i,1,n) bit[i]=0,tree[i]=0;
        For(i,1,n) if (s[i]=='4') st[++top]=i;
        else if (top>0) {
            int middle = i-st[top]-1;
            int del = query(st[top])+1;
            update(st[top],del);
            int cal = quest(del-1);
            int pos = st[top] - 2*(cal-middle/2);
            res+=pos;
            add(del,1);
          //  cout << st[top] << " " << i << " " << del << " " << pos << endl;
            top--;
        }
        cout << res << endl;
    }
    return 0;
}










