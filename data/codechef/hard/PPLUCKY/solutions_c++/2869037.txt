#include<iostream>
#include<stack>
#include<cstdio>
#define ll long long 
#define pp pair<char,ll int>
using namespace std;
ll MaxVal=100001;
ll int tree[100010];
ll int read(ll int idx){
	ll int sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
void update(ll int idx ,ll int val){
	while (idx <= MaxVal){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}
struct mystack{
       char dig;
       int in;
       };
int main()
{
    //freopen("C:\\Users\\Dell\\Desktop\\input.txt","r",stdin);
    //freopen("C:\\Users\\Dell\\Desktop\\output.txt","w",stdout);
    ll int t;
    scanf("%lld",&t);
    //cin>>t;
    //cin.ignore();
    while(t--)
    {
              ll i;
              
              ll int con=0;
              
              mystack val[100001]={0};
              char str[100001];char a;
              ll int n,sum=0,ind=0,k,pop_status=0,status=0,max_value=0;
              scanf("%lld",&n);
              //cin>>n;
              scanf("%s",str);
              //cin>>str;
              ll int cnt[100001]={0};
              for(i=0;i<=(n/2);i++)
              tree[i]=0;
              //cin.ignore();
              for(i=0;i<n;i++)
              {
                              a=str[i];
                              //cout<<a<<endl;
                              
                              if(a=='4')
                              {//mystack.push(pp(a,0));
                              con++;
                              val[con].dig=a;val[con].in=0;
                              pop_status=0;
                              if(1>max_value)
                              max_value=1;
                              //status=0;
                              }
                              else if(a=='7')
                              {
                                   if(con!=-1 && val[con].dig=='4')
                                   {
                                             //mystack.pop();
                                             if(pop_status==0)
                                             {
                                                       ind=con+(read(max_value)-read(0))*2;//cout<<ind<<endl;
                                                       sum+=ind;
                                                       pop_status=1;
                                                       
                                                       update(1,1);
                                                       //mystack.pop();
                                                       con--;
                                                       if(con!=-1 && val[con].dig=='4' && val[con].in<(2))
                                                        {
                                                      // mystack.pop();
                                                      
                                                       //mystack.push(pp('4',2));
                                                       
                                                       //val[con].dig='4';
                                                       val[con].in=2;
                                                       }
                                                       
                                                       
                                             }
                                             else if(pop_status==1)           
                                             {
                                                        status=val[con].in;
                                                        ind=con+2*(read(max_value)-read(status-1)); 
                                                        //cout<<con<<" "<<2*(read(max_value)-read(status-1))<<endl;
                                                        sum+=ind;
                                                        //mystack.pop();
                                                        con--;
                                                        if(con!=-1 && val[con].dig=='4' && val[con].in<(status+1))
                                                        {
                                                        //mystack.pop();
                                                        //mystack.push(pp('4',(status+1)));
                                                        val[con].in=status+1;
                                                        }
                                                        //cout<<mystack.size()<<" "<<mystack.top().second<<endl;}
                                                        pop_status=1;
                                                        if(status>max_value)
                                                        max_value=status;
                                                        update(status,1);
                                             }
                                             
                                   }else
                                   {//mystack.push(pp('7',0));
                                   con++;
                                   val[con].dig='7';
                                   val[con].in=0;
                                   pop_status=0;
                                   //status=0;
                                   }
                                   
                              }
              }
              //cout<<sum<<endl;
              printf("%lld\n",sum);
    }
    return 0;
}
              
                              
                              
                                   
                                             
                                                        
                                                        
                                                                  
                              