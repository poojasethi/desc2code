#include<iostream>
#include<map>
#include<cmath>
#include<bitset>
#include<new>
#include<utility>
#include<stdio.h>
#include<algorithm>
#include<stdlib.h>
#include<complex>
#include<valarray>
#include<queue>
#include<cstring>
using namespace std;

#define f first
#define s second
#define pb push_back
#define ll long long
#define ULL unsigned long long
#define mp make_pair
#define MOD 1000000007
#define mm map<int,map<int,bool> >
#define mv map<int,vector<int,bool> >
#define cp complex<double>
#define mpp map<pair<pair<int,int>,int > ,bool >

ll powmod(ll a,ll n,ll mod)
{
    if(n==1)
	return a;
    if(n==0)
	return 1;
    ll re = powmod(a,n/2,mod)%mod;
    re=(re*re)%mod;
    if(n&1)
	re=(re*a)%mod;
    return re;
}

ll dp[1001][1001]={0};
ll fact[1000001]={0};
void init()
{
    dp[1][1]=1;
    for(int i=1;i<=1000;i++)
    {
	for(int j=1;j<=1000;j++)
	{
	    dp[i][j]+=(dp[i-1][j-1]+(dp[i-1][j]*j))%MOD;
	    dp[i][j]%=MOD;
	}
    }
    fact[0]=fact[1]=1;
    for(int i=2;i<=1000000;i++)
	fact[i]=(fact[i-1]*i)%MOD;
}




int main()
{
    int t;
    init();
    cin>>t;
    while(t--)
    {
	int n,m,k;
	cin>>n>>m>>k;
	ll ans=0;
	for(int i=1;i<=min(m,k);i++)
	{
	    ans+=(((fact[m]*powmod(fact[m-i],MOD-2,MOD))%MOD)*dp[n][i])%MOD;
	    ans%=MOD;
	}
	cout<<ans<<endl;
    }
    return 0;
}

