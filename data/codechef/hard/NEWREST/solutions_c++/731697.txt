#include <iostream>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <queue>

#define MOD 1000000007

using namespace std;

long long dp[1<<10][1<<10], fact[1<<20];

long long modpow(long long x, long long n)
{
	long long P = 1;
			
	while(n)
	{
		if(n & 1) P = (P * x) % MOD;
		
		n >>= 1;
		x = (x * x) % MOD;
	}
	
	return P;
}

int main ()
{
	fact[0] = 1;
	for(int i=1; i<=1000000; i++)
		fact[i] = (i * fact[i-1]) % MOD;
	
	for(int i=0; i<=1000; i++)
	{
		for(int j=0; j<=i; j++)
		{
			if(i==0) dp[i][j] = (j==0);
			else dp[i][j] = (j*dp[i-1][j] + (j > 0 ? dp[i-1][j-1] : 0)) % MOD;
		}
	}
	
	int nCasos;
	scanf("%d", &nCasos);
	
	for(int caso=0; caso<nCasos; caso++)
	{
		int N, M, K;
		scanf("%d %d %d", &N, &M, &K);
		
		long long x = 0;
		
		for(int i=1; i<=min(N, min(M, K)); i++)
			x = (x + ((dp[N][i] * fact[M]) % MOD) * modpow(fact[M-i], MOD-2)) % MOD;
		
		printf("%d\n", (int)x);
	}
	
	return 0;
}