#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>

using namespace std;

#define pb push_back
#define INF 1000000001
#define SZ(s) (int)((s).size())
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define rep(i,n) FOR(i,0,n)
#define ford(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define CL(a,v) memset((a),(v),sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int,int> pii;

const ll mod = 1000000007;
ll dp[1001][1001];

int main()
{
	#ifndef ONLINE_JUDGE
        //freopen("input.txt","r",stdin);
        //freopen("output.txt","w",stdout);
	#endif

    CL(dp,0);
    dp[0][0] = 1;
    FOR(n,1,1001) FOR(k,1,1001) dp[n][k] = (k*dp[n-1][k] + dp[n-1][k-1]) % mod;

    ll T,N,M,K;
    cin >> T;

    while(T--)
    {
        cin >> N >> M >> K;
        K = min(K,min(N,M));

        ll ans = 0;
        ll F = 1;

        for (int k = 1; k <= K; k++)
        {
            F = (F*(M-k+1)) % mod;
			ans = (ans + F*dp[N][k]%mod) % mod;
        }

        cout << ans << endl;
    }

	return 0;
}
