#include<iostream>
#include<sstream>
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<bitset>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
using namespace std;

#define pb								push_back
#define s(n)								scanf("%d",&n)
#define sl(n) 								scanf("%lld",&n)
#define sf(n) 								scanf("%lf",&n)
#define fill(a,v) 							memset(a, v, sizeof a)
#define INF								(int)1e9
#define EPS								1e-9

typedef long long LL;
typedef pair<int, int > PII;

int testCases, testNum;
// here follow the sovle, input & main
int C,V;
struct clause
{
	int a, b, c;
	clause(int x = 0, int y = 0, int z = 0)
	{
		a = x; b = y, c = z;
	}
};

clause all[3005];
int adj [3005][10];
int matchR[3005], matchL[3005];
bool chosen[3005], seen[3005];

bool bpm(int v)
{
	if(seen[v] ) return false;
	seen[v] = true;
	for(int i = 0; i < 3; i++)
	{
		int u = adj[v][i];
		if( matchR[u] < 0 || bpm(matchR[u]) )
		{
			matchL[v] = u;
			matchR[u] = v;
			return true;
		}
	}
	return false;
}

void solve() 
{
	fill( matchL, -1);
	fill( matchR, -1);
	for(int i = 0; i < C; i++)
	{
		fill( seen, false);
		bpm(i) ;
	}
	fill( chosen, false);
	for(int i = 0; i < C; i++)
	{
		int x = matchL[i];
		if( all[i].a ==x || all[i].b == x || all[i].c == x )
			chosen[x] = true;
	}
	for(int i = 1; i <= V; i++)
		if( chosen[i] )
			printf("T");
		else
			printf("F");
	printf("\n");	
}
int main()
{
	int T; s(T);
	while(T--)
	{
		s(C); s(V);
		for(int i = 0; i < C; i++)
		{
			int a, b, c;
			s(a); s(b); s(c);
			all[i] = clause(a,b, c);
			adj[i][0] = abs(a), adj[i][1] = abs(b), adj[i][2] = abs(c);
		}
		solve();
	}
}