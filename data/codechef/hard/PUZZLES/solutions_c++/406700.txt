#include <string>
#include <vector>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)REP(i,0,(int)(v)-1)
#define FORD(i,v)REPD(i,(int)(v)-1,0)
#define pb push_back
#define sz size
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;
using namespace std;
///////////////////////////////////////
vector<vector<int> > v1;
int n1,n2;
vector<int> sk2;
vector<bool> odw1;

void czysc(int newn1, int newn2)
{n1=newn1;n2=newn2;
v1.clear();v1.resize(n1);}

inline void dod_kr(int a,int b)
{v1[a].pb(b);}

bool augment(int k1)
{
	if (k1==-1) return 1;
	if (odw1[k1]) return 0;
	odw1[k1]=1;
	FOR(i,v1[k1].sz())
	if (augment(sk2[v1[k1][i]]))
	{
		sk2[v1[k1][i]]=k1;
		return 1;
	}
	return 0;
}

int maxskoj()
{
	sk2.clear();sk2.resize(n2,-1);
	odw1.clear();odw1.resize(n1);
	int w=0;
	FOR(i,n1)
	{
		fill(odw1.begin(),odw1.end(),0);
		w+=augment(i);
	}
	return w;
}
//////////////////////////////////////

int C,V;
vector<int> cl[2000];

int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--)
    {
	   cin>>C>>V;
	   czysc(C,V+5);
	   FOR(i,C) cl[i].clear();
	   int a1,a2,a3;
	   FOR(i,C)
	   {
            cin>>a1>>a2>>a3;
            cl[i].pb(a1);
            cl[i].pb(a2);
            cl[i].pb(a3);
            dod_kr(i,abs(a1));
            dod_kr(i,abs(a2));
            dod_kr(i,abs(a3));
        }
        //cout<<maxskoj()<<endl;
        maxskoj();
        REP(i,1,V)
        {
            if (sk2[i]==-1)
            {
                cout<<"T";
            }
            else
            {
                int j=0;
                while (abs(cl[sk2[i]][j])!=i) j++;
                if (cl[sk2[i]][j]>0) cout<<"T";
                else cout<<"F";
            }
        }
        cout<<endl;
    }
    return 0;
}
