// Program for the WPLAY problem

#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string.h>
#define MAXM 500005
#define HASHSIZE  1000003
#define BASE 103
#define two(X) (1<<(X))
#define contain(S,X) (((S)&two(X))!=0)

using namespace std;
 
int m;
int length[MAXM];
char words[MAXM][16];
int hash[HASHSIZE], nextp[MAXM];
int n, sizeX, sizeY;
bool g[1<<16], f[1<<16];
 
int main()
{
  scanf("%d", &m);
  memset(hash, 255, sizeof(hash));
  for(int i = 0; i < m; i++)
  {
    char s[20];
    scanf("%s", s);
    int L = strlen(s);
    length[i] = L;
    sort(s, s + L);
    memcpy(words[i], s, L * sizeof(char));

    int c = 0;
    for(int j = 0; j < L; j++) 
     c = (c * BASE + s[j]) % HASHSIZE;
    c = (c * BASE + L) % HASHSIZE;
    nextp[i] = hash[c];
    hash[c] = i;
  }

  scanf("%d%d", &sizeX, &sizeY);
  n = sizeX * sizeY;
  int testcase;
  for(scanf("%d", &testcase); testcase > 0; testcase--)
  {
    char s[20];
    for(int i = 0; i < sizeX; i++) 
     scanf("%s",s + i * sizeY);
    sort(s, s + n);
    g[0] = false;
    for(int set = 1; set < two(n); set++)
    {
      int L = 0, c = 0;
      char h[20];
      for(int i = 0; i < n; i++) 
       if(contain(set, i)) 
        h[L++] = s[i], c = (c * BASE + s[i]) % HASHSIZE;
      c = (c * BASE + L) % HASHSIZE;

      f[set] = false;
      for(int p = hash[c]; p >= 0; p = nextp[p]) 
       if(length[p] == L && memcmp(h, words[p], L * sizeof(char)) == 0) 
       { 
         f[set] = true; break; 
       }

      g[set] = false;
      for(int subset = set; subset > 0; subset = (subset - 1) & set) 
       if(f[subset] && !g[set ^ subset]) 
       { 
         g[set] = true; break; 
       }
    }

    if(g[two(n)-1])
     printf("Alice\n");
    else
     printf("Bob\n");
  }

  return 0;
}