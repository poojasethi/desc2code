// Program for the WPLAY problem

#include <cstdio>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <algorithm>
#include <string>
#include <utility>

using namespace std;

/* Hash for string */
unsigned long long getHash(string str)
{
  int i;
  unsigned long long hs = 0;
  for(i = 0; i < str.size(); i++)
   hs = hs * 1007 + str[i];
  return hs;
}

int main()
{
  int D, T;
  set<unsigned long long> s;
  char buf[100]; 
  string tmp;

  int i, j, k;
  int dp[70000], ok[70000];
  unsigned long long hs;

  int x, y, n;
  int bit[100], bc, mask;
  char in[20];  

  scanf("%d", &D);
  for(i = 0; i < D; i++)
  {
    scanf("%s", buf);
    tmp = buf;
    sort(tmp.begin(), tmp.end());
    s.insert(getHash(tmp));          /* The set of hash of the dictionary */
  }

  scanf("%d%d", &x, &y);
  n = x * y;

  scanf("%d", &T);
  while(T--)
  {
    for(i = 0; i < x; i++) 
     scanf("%s", in + i * y);

    for(k = 0; k < 1<<n; k++)
    {
      tmp = "";
      for(i = 0; i < n; i++)
       if(k & 1<<i) 
        tmp += in[i];
      sort(tmp.begin(), tmp.end());
      ok[k] = s.count(getHash(tmp)); /* Mask k can be used (or not) */
    }

    for(k = 0; k < 1<<n; k++)        /* DP */
    {
      dp[k] = 0;
      for(i = k; i ; i = ((i - 1) & k)) 
       if(ok[i] && dp[k ^ i] == 0)
       { 
         dp[k] = 1; 
         break; 
       }
    }

    if(dp[(1<<n) - 1] == 1) 
     puts("Alice");
    else                
     puts("Bob");
  }

  return 0;
}
