/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define all(a)  a.begin(),a.end() 
string ms;
int que[1 << 16];
int dp[1 << 16];
 
#define gc getchar
void read(int &n) {
    n = 0;
    char ch = gc();
    while ( !isdigit(ch) ) ch=gc();
    while ( isdigit(ch) ) {
        n = n*10 + ch-48;
        ch=gc();
    }
}

struct node {
	bool flag;
	struct node *ptr[26];
};
node *head = NULL, *cur;
 
void insert(string s) 
{
	cur = head;
	int size = s.ln;
	rep(i, size) {
		s[i] -= 'A';
		if( cur -> ptr[ s[i] ] == NULL)
			cur -> ptr[ s[i] ] = new node();
		cur = cur -> ptr[ s[i] ];
	}
	cur -> flag = true;
}
 
bool find(int n, int r) 
{
	cur = head;
	rep(i,r) if(n & (1 << i)) {
		if( cur -> ptr[ ms[i] - 'A' ] == NULL ) return false;
		cur = cur -> ptr[ ms[i] - 'A' ];
	}
	return cur -> flag;
}
	
int main() 
{
	int d, c, t;
	char str[20]; string s;
	read(d);
	head = new node();
	while(d--) {
		scanf("%s",str);
		s = string(str);
		sort(all(s));
		insert(s);
	}
	int r;
	read(r); read(c); read(t);
	r *= c;
	while(t--) {
		ms = "";
		rep(i, r / c) {
			scanf("%s",str);
			ms += string(str);
		}
		sort(all(ms));
		
		int ptr = 0; 
		dp[0] = 0;
		for(int i = 1; i < (1 << r); dp[i] = 0, i++) 
			if(find(i, r)) 
				que[ptr++] = i;
		
		for(int i = 0; i < (1 << r); i++) 
			if(dp[i] == 0) {	//losing state
				for(int j = 0; j < ptr; j++) //check for all possible strings
					if((i & que[j]) == 0) {	//string is not availbale in state i
						dp[i | que[j]] = 1;	//winning state
						if((1 << r) - 1 == (i | que[j])) goto endd;
					}
			}
				
		endd:
		if(dp[(1 << r) - 1] == 1) 
			printf("Alice\n");
		else 
			printf("Bob\n");
	}
	
	return 0;
} 