// Program for the WPLAY problem

#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <string>
#define bit(n) (1<<(n))
#define N 16

using namespace std;

char buf[111];
string s[505050];
char good[1<<N];
char win[1<<N];
 
int main()
{
  int d;
  int r, c, t, n;

  scanf("%d", &d);
  for(int i = 0; i < d; i++)
  {
    scanf("%s", buf);
    sort(buf, buf + strlen(buf));
    s[i] = buf;
  }

  sort(s, s + d);
  d = unique(s, s + d) - s;
  scanf("%d%d%d", &r, &c, &t);
  n = r * c;
  while(t--)
  {
    for(int i = 0; i < n; i += c)
     scanf("%s", buf + i);

    sort(buf, buf + n);
    good[0] = win[0] = 0;
    for(int mask = 1; mask < bit(n); mask++) 
    {
      string w = "";
      for(int i = 0; i < n; i++)
       if(mask & bit(i))
        w += buf[i];

      int j = lower_bound(s, s + d, w) - s;
      good[mask] = j < d && s[j] == w;
      win[mask] = 0;
      for(int mask1 = mask; mask1 > 0; mask1 = (mask1 - 1) & mask)
       if(good[mask1] && !win[mask ^ mask1]) 
       {
         win[mask] = 1;
         break;
       }
    }

    puts(win[bit(n) - 1] ? "Alice" : "Bob");
  }

  return 0;
}