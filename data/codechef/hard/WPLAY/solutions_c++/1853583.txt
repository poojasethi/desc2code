/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//#pragma comment(linker,"/STACK:256000000")
#include <stdio.h>
#include <algorithm>
#include <vector>

#define EPS 0.000000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF 1000000000
#define mp make_pair
#define pb push_back
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < int,int >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt printf
#define big long long
#define VI vector <int>

using namespace std;

vector <int> Has[1000050];
int l,len,W,H,T,i,j,N,k,A,B,X;
char s[100];
int ok[1000500],XX[1000500],YY[1000500],ans[200500];
char C[1000];
bool flag;
int deg[25];

int getx(int X)
{
    A=0;
    for (k=0;k<W*H;k++)
    if (X&deg[k])
    A=(31*A+C[k]-'A'+1)%hash1;
    return A;
}

int gety(int X)
{
    B=0;
    for (k=0;k<W*H;k++)
    if (X&deg[k])
    B=(37*B+C[k]-'A'+1)%hash2;
    return B;
}

void add(int A,int B)
{
    for (j=0;j<Has[A].S;j++)
    if (Has[A][j]==B) return;
    Has[A].pb(B);
}

void read()
{
    scanf("%d\n",&N);
    for (i=1;i<=N;i++)
    {
        scanf("%s\n",&s);
        for (l=0;s[l];l++)
        {}
        sort(s,s+l);
        A=0;B=0;
        for (j=0;j<l;j++)
        {
            A=(31*A+s[j]-'A'+1)%hash1;
            B=(37*B+s[j]-'A'+1)%hash2;
        }
        add(A,B);
    }
    scanf("%d %d\n",&W,&H);
    scanf("%d\n",&T);
}

bool CHECK(int A,int B)
{
    for (k=0;k<Has[A].S;k++)
    if (Has[A][k]==B) return 1;
    return 0;
}

main()
{
 //   freopen("text.in","r",stdin);   freopen("text.out","w",stdout);

    deg[0]=1;
    for (i=1;i<=20;i++)
    deg[i]=deg[i-1]*2;

    read();
    while (T--)
    {
        //MASIVE NULL

        len=0;
        for (i=0;i<W*H;i++)
        ans[i]=0;

        for (i=0;i<W;i++)
        {
            for (j=0;j<H;j++)
            scanf("%c",&C[len++]);
            scanf("\n");
        }

        sort(C,C+len);

        for (i=0;i<deg[H*W];i++)
        {
            XX[i]=getx(i);
            YY[i]=gety(i);
            ok[i]=CHECK(XX[i],YY[i]);
        }

        for (i=1;i<deg[H*W];i++)
        {
            flag=0;
            X=i;
            while (X>0)
            {
                X=(X-1)&i;
                if (ans[X]==0 && ok[X^i]){
                flag=1;
                break;
                }
            }
            ans[i]=flag;
        }

        if (ans[ deg[W*H] - 1])
            printf("Alice\n"); else printf("Bob\n");

    }

}
