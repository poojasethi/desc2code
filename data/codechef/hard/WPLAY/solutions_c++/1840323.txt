#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
#include<vector>
#define N 16
using namespace std;
int dp[1<<N],pos[1<<N];
int d,k;
string dict[500000];
int solve(int x);
int main()
{
	scanf("%d",&d);
	int i,t,r,c,j;
	char s[20];
	string tmp,board;
	for(i=0;i<d;i++)
	{
		scanf("%s",s);
		tmp=s;
		sort(tmp.begin(),tmp.end());
		dict[i]=tmp;
	}
	sort(dict,dict+d);
	d=unique_copy(dict,dict+d,dict)-dict;
	//d=dict.size();
	scanf("%d%d%d",&r,&c,&t);
	k=r*c;
	while(t--)
	{
		for(i=0;i<r;i++)
		{
			scanf("%s",s+i*c);
		}
		board=s;
		sort(board.begin(),board.end());	
		memset(dp,-1,sizeof(dp));
		dp[0]=0;
		for(i=0;i<(1<<k);i++)
		{
			tmp="";
			pos[i]=0;
			for(j=0;j<k;j++)
			{
				if(i&(1<<j))
				tmp+=board[j];
			}
			if(binary_search(dict,dict+d,tmp))
				pos[i]=1;
		}
		(solve((1<<k)-1))?printf("Alice\n"):printf("Bob\n");
	}
	return 0;
}
int solve(int x)
{
	if(dp[x]!=-1)
		return dp[x];
	int ones=0,pos_one[17];
	for(int i=0;i<k;i++)
	{
		if((1<<i)&x)
			pos_one[ones++]=i;
	}
	for(int i=0;i<(1<<ones);i++)
	{
		int mask=0;
		for(int j=0;j<ones;j++)
		{
			if((1<<j)&i)
				mask|=1<<pos_one[j];
		}
		if(pos[mask])
		{
			if(solve(x^mask)==0)
				return dp[x]=1;
		}
	}
	return dp[x]=0;
}