#include <iostream>
#include <algorithm>
#include <vector>
#include <string.h>
#define MOD 1000000009
 
using namespace std;
 
int t, m, n, rows, columns, used[67000], now, e, maxe;
bool f[67000];
char s[35];
long long pw[35], a[500000], c;
 
bool ok(long long e) 
{
  int x = 0, y = m - 1, mid;
  while(x <= y) 
  {
    mid = (x + y) >> 1;
    if(a[mid] == e) 
     return 1;
    if(a[mid] < e) 
     x = mid + 1; 
    else 
     y = mid - 1;
  }
 
  return 0;
}
 
void sinh(int i) 
{
  if(i == n) 
  {
    if(ok(c)) 
     used[e] = now;
    return;
  }
  sinh(i + 1);
  e += (1<<i);
  c += pw[s[i] - 'A'];
  sinh(i + 1);
  e -= (1<<i);
  c -= pw[s[i] - 'A'];
}
 
int main() 
{
  pw[0] = 1;
  for(int i = 1; i <= 25; i++) 
   pw[i] = pw[i - 1] * MOD;
  scanf("%d\n", &m);
  for(int i = 0; i < m; i++) 
  {
    gets(s);
    for(int j = 0; j < strlen(s); j++) 
     a[i] += pw[s[j] - 'A'];
  }
  sort(a, a + m);
  scanf("%d%d%d\n", &rows, &columns, &t);
  n = rows * columns;
  maxe = 1<<n;
  while(t--) 
  {
    for(int i = 0; i < rows; i++) 
     gets(s + i * columns);
    c = e = 0;
    now++;
    sinh(0);
    for(e = 1; e < maxe; e++) 
    {
      f[e] = 0;
      for(int x = e; x > 0; x = e & (x - 1))
       if(used[x] == now && (f[e] |= !f[e ^ x])) 
        break;
    }
    if(f[maxe - 1]) 
     puts("Alice"); 
    else 
     puts("Bob");
  }
 
  return 0;
}