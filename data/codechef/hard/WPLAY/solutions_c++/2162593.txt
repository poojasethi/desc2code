#include<cstdio>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<string>
#include<utility>
using namespace std;

#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

#define ll long long
#define ull unsigned ll

/* hash for string */
ull get_hash(string str){
  int i;
  ull hs = 0;
  rep(i,str.size()) hs = hs*1007 + str[i];
  return hs;
}

int main(){
  int D, T;
  set<ull> s;
  char buf[100]; string tmp;

  int i,j,k;
  int dp[70000], ok[70000];
  ull hs;

  int x, y, n;
  char in[20];

  int bit[100], bc, mask;

  scanf("%d",&D);
  rep(i,D){
    scanf("%s",buf);
    tmp = buf;
    sort(tmp.begin(), tmp.end());
    s.insert(get_hash(tmp)); /* the set of hash of the dictionary */
  }

  scanf("%d%d",&x,&y);
  n = x*y;

  scanf("%d",&T);
  while(T--){
    rep(i,x) scanf("%s",in+i*y);

    rep(k,1<<n){
      tmp = "";
      rep(i,n) if(k&1<<i) tmp += in[i];
      sort(tmp.begin(), tmp.end());
      ok[k] = s.count(get_hash(tmp)); /* mask k can be used (or not) */
    }

    rep(k,1<<n){ /* DP */
      dp[k] = 0;
      for(i=k;i;i=((i-1)&k)) if(ok[i] && dp[k^i]==0){ dp[k] = 1; break; }
    }

    if(dp[(1<<n)-1]==1) puts("Alice");
    else                puts("Bob");
  }

  return 0;
}