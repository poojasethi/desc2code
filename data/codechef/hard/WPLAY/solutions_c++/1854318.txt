/*
 *      Author : Pallab
 *      Prog: WPLAY.cxx
 *
 *      Created on: 02:03:56 PM - 2013:2:19
 * "I have not failed, I have just found 10000 ways that won't work."
 */
#include <iostream>
#include <algorithm>
#include <vector>
#include <sstream>
#include <fstream>
#include <string>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <numeric>
#include <stack>
#include <functional>
#include <bitset>
#include <iomanip>
#include <tr1/unordered_set>

#include <ctime>
#include <cassert>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <climits>
#include <cstring>
#include <cstdlib>

using namespace std;
using namespace tr1;

#define foR(i,frm,upto) for( int i=(frm),_i=(upto);(i) < (_i) ; ++i )
#define foD(i,frm,upto) for( int i=(frm),_i=(upto);(i) >= (_i) ; --i )
#define foit(i, x) for (typeof((x).begin()) i = (x).begin(); i != (x).end(); i++)
#define Int long long
#define pb push_back
#define SZ(X) (int)(X).size()
#define LN(X) (int)(X).length()
#define mk make_pair
#define dbg(...)       printf(__VA_ARGS__)
#define SET( ARRAY , VALUE ) memset( ARRAY , VALUE , sizeof(ARRAY) )
#define line puts("")

inline void wait ( double seconds ) {
    double endtime = clock() + ( seconds * CLOCKS_PER_SEC );
    while ( clock() < endtime ) {
        ;
    }
}
template<class T>
    inline T fastIn() {
    register char c=0;
    register T a=0;
    bool neg=false;
    while ( c<33 ) c=getchar();
    while ( c>33 ) {
        if ( c=='-' ) {
            neg=true;
        } else {
            a= ( a*10 ) + ( c-'0' );
        }
        c=getchar();
    }
    return neg?-a:a;
}
string word;
int wordCount;
unordered_set<string> dict;
inline void read() {
    dict.clear();
    wordCount=fastIn<int>();
    while ( wordCount-- ) {
        cin>>word;
        sort ( word.begin(),word.end(),less<char>() );
        dict.insert ( word );
    }
}
int tot;
int marked[ ( 1<<16 ) +5];
int dp[ ( 1<<16 ) +5];
int ones[16+5];
int n,N;
inline int bc ( Int msk ) {
    int c=0;
    for ( c=0; msk ; ++c ) {
        msk&= ( msk-1 );
    }
    return c;
}

int go ( int msk ) {
    if ( bc ( msk ) ==n ) return false;
    int &bst=dp[msk];
    if ( bst!=-1 ) return bst;
    bst=0;
    foR ( i,0,tot ) {
        if ( ( msk&marked[i] ) ==0 ) {
            int nxt = msk|marked[i];
            if ( go ( nxt ) ==0 ) return bst=1;
        }
    }
    return bst;
}
inline void proc() {
    int r=fastIn<int>(),c=fastIn<int>();
    n = r*c;
    N = ( 1<<n );
    int q=fastIn<int>();
    while ( q-- ) {
        string tmp="";
        foR ( i,0,r ) {
            cin>>word;
            tmp+=word;
        }
        SET ( marked,false );
        SET ( dp,-1 );
        tot=0;
        foR ( i,1,N ) {
            word="";
            foR ( j,0,n ) {
                if ( i& ( 1<<j ) ) {
                    word+=tmp[j];
                }
            }
            sort ( word.begin(),word.end(),less<char>() );
            if ( dict.find ( word ) !=dict.end() ) {
                marked[tot++]=i;
            }
        }

        puts ( go ( 0 ) ==1 ?"Alice":"Bob" );
    }
}
int main() {
    int kase = 1;
#if defined( xerxes_pc )
    if ( !freopen ( "in1", "r", stdin ) )
        puts ( "error opening file in " ), assert ( 0 );
    kase = 1;
#endif

    foR ( i,0,kase ) {
        read();
        proc();
    }
    return 0;
}
// kate: indent-mode cstyle; indent-width 4; replace-tabs on; 
