#include <iostream>
#include <fstream>
#include <algorithm>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <stack>
#include <map>


#define FOR(i,n) for(int i=0,_n=n;i<_n;i++)
#define FORD(i,n) for(int i=n;i>=0;i--)
#define FORR(i,s,n) for(int i=s,_n=n;i<_n;i++)
#define FORRD(i,n,s) for(int i=n;i>=s;i--)
#define mp make_pair
#define pb push_back
#define pii pair<int,int>
#define pli pair<ll,int>
#define fs first
#define sec second

#define maxn 100000
using namespace std;
typedef long long ll;

map<string,bool> maa;
bool mem[1 << 16];

const int WIN=1;
const int LOOSE=2;

int d[1 << 16];
int n;
int f(int x){
	if(x == 0) return LOOSE;
	if(d[x] != -1) return d[x];
	bool allwin=true;
	bool ext=false;
	
	int zy=x;
	do{
		zy=(zy - 1) & x;
		if(mem[x ^ zy]){
			int res=f(zy);
			ext=true;
			if(res==LOOSE) allwin=false;
		}
	}while(zy);
	if(!ext) return d[x]=LOOSE;
	if(allwin==false) d[x]=WIN;
	else d[x]=LOOSE;
	return d[x];
}
int main(){
	ios::sync_with_stdio(false);
	int D,r,c,T; string line,tmp;
	cin>>D;
	FOR(i,D){ 
		cin>>line;
		sort(line.begin(),line.end());
		maa[line]=true; 
	}
		
	cin>>r>>c;
	getline(cin,line);
	n=r * c;
	cin>>T;
	while(T--){
		int mask=(1 << n) - 1;
		tmp="";
		line="";
		FOR(i,r){ cin>>line;  tmp+=line; }
				
		// create words
		memset(mem,0,sizeof mem);
		FOR(m,(1 << n)){
			string ttt="";
			FOR(j,n){
				if((m >> j) & 1) ttt+=tmp[j];
			}
			sort(ttt.begin(),ttt.end());
			if(maa.count(ttt)){ mem[m]=true; }
		}
		memset(d,-1,sizeof d);
		
		int res=f(mask);
		cout<<(res==LOOSE?"Bob":"Alice")<<"\n";
	}
	return 0;
}

