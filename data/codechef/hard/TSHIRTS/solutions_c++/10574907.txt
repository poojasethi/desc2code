#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define inf 0x7fffffff
#define SCD(t) scanf("%d",&t)
#define SCLD(t) scanf("%ld",&t)
#define SCLLD(t) scanf("%lld",&t)
#define SCC(t) scanf("%c",&t)
#define SCS(t) scanf("%s",t)
#define SCF(t) scanf("%f",&t)
#define SCLF(t) scanf("%lf",&t)
#define pr pair<int,int>
#define pric pair<int,char>
#define mp(a,b) make_pair(a,b)
#define pb push_back
#define fr first
#define sc second
#define mset(arr,val) memset(arr,val,sizeof(arr));

const int MAX = 12;
const int MOD = 1e9+7;

bool hast[MAX][105];

// std::vector< int > ts[MAX];

int n;
int dp[(1<<MAX)][105];

int get_ways(int bit,int tn)
{
	if(bit == ((1<<n) - 1) )
		return dp[bit][tn] = 1;

	if(tn == 101)
		return 0;

	if(dp[bit][tn] != -1)
		return dp[bit][tn];

	dp[bit][tn] = get_ways(bit,tn+1);

	for(int j = 0;j<n;j++){
		if( (!(bit&(1<<j))) && hast[j][tn] )		//jth person has not received
		{
			// cout<<"assign "<<tn<<" "<<j<<endl;
			dp[bit][tn] += get_ways( (bit|(1<<j)) , tn+1);
			dp[bit][tn] %= MOD;
		}
	}

	return dp[bit][tn];
}

int main(){
	// freopen("input.txt","r",stdin);
	int t;
	cin>>t;
	while(t--){
		cin>>n;
		char c;
		SCC(c);
		for(int i = 0;i<(1<<n);i++)
			for(int j = 0;j<=100;j++)
				dp[i][j] = -1;


		for(int i = 0;i<n;i++){
			for(int j = 0;j<=100;j++)
				hast[i][j] = false;

			int tn;
			std::string line;
			getline(std::cin, line);
			std::istringstream iss(line);
			while (iss >> tn)
			{
				hast[i][tn] = true;
				// cout<<i<<" "<<tn<<endl;
			}
		}

		int ways = get_ways(0,1);
		cout<<ways<<endl;
	}
}