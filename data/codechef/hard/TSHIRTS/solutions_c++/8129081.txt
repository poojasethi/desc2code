#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> ii;

/*
int min_st[300005][20], max_st[300005][20], arr[300005], gcd_st[300005][20];
int gcd(int a, int b){return (b==0)? a : gcd(b,a%b);}

void build_st(int n) {
	for (int j = 0; (1 << j) <= n; ++j)
		for (int i = 0; i + (1 << j) <= n; ++i) {
			min_st[i][j] = (j ? min(min_st[i][j - 1], min_st[i + (1 << (j - 1))][j - 1]) : arr[i]);
			max_st[i][j] = (j ? max(max_st[i][j - 1], max_st[i + (1 << (j - 1))][j - 1]) : arr[i]);
			gcd_st[i][j] = (j ? gcd(gcd_st[i][j-1], gcd_st[i + (1 << (j - 1) ) ][j - 1]) : arr[i]);
		}
}

int r_min_q(int l, int r) {
	int k = (log(r - l + 1) / log(2));
	return (min(min_st[l][k], min_st[r - (1 << k) + 1][k]));
}

int r_max_q(int l, int r) {
	int k = (log(r - l + 1) / log(2));
	return (max(max_st[l][k], max_st[r - (1 << k) + 1][k]));
}

int gcd_q(int l, int r){
	int k = log(r-l+1)/log(2);
	return (gcd(gcd_st[l][k], gcd_st[r - (1<<k) + 1][k]));
}
*/

/*
int z[3000010];

void z_algorithm(string s){

	int L = 0, R = 0, n = s.length();
	for (int i = 1; i < n; i++) {
	  if (i > R) {
	    L = R = i;
	    while (R < n && s[R-L] == s[R]) R++;
	    z[i] = R-L; R--;
	  } else {
	    int k = i-L;
	    if (z[k] < R-i+1) z[i] = z[k];
	    else {
	      L = i;
	      while (R < n && s[R-L] == s[R]) R++;
	      z[i] = R-L; R--;
	    }
	  }
	}
}
*/

int t,n, mod ;

bool adjmat[11][101];
int dp[1025];

int main (){
	mod = 1000000007;
	int t, max_tshirt, tshirt;
	scanf("%d\n",&t);
	string tmp;
	//getline(cin,tmp);

	while(t--){
		memset(dp,0,sizeof dp);
		memset(adjmat,0,sizeof adjmat);
		max_tshirt = 0;

		scanf("%d\n",&n);
		//getline(cin,tmp);

		for(int i=0;i<n;++i){
			getline(cin,tmp);
			istringstream iss(tmp);
			while(iss>>tshirt){
				adjmat[i][tshirt-1] = true;
				max_tshirt = max(max_tshirt,tshirt);
			}
		}

		dp[(1<<n) -1] = 1;

		for(int i=0; i<max_tshirt; ++i)
			for(int j=0; j<(1<<n); ++j)
				for(int k=0; k<n; ++k){
					if(adjmat[k][i] && (j&(1<<k)))
						dp[j^(1<<k)] = (dp[j^(1<<k)] % mod + dp[j] % mod) % mod;
				}

		printf("%d\n",dp[0]);
		//cout<<dp[0]<<endl;
	}

	return 0;
}
