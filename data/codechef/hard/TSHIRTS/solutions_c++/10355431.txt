#include <bits/stdc++.h>

using namespace std;

#define MOD 1000000007
vector<int>v[101];
long int dp[1025][101];
long int all;
long int ways(int mask,int i)
{
    long int x;
    int j;
    x=0;
    if(mask==all)
        return dp[mask][i]=1;
    if(i>100)
        return 0;
    if(dp[mask][i]!=-1)
        return dp[mask][i];
     x+=ways(mask,i+1);
     for(j=0;j<v[i].size();j++)
     {
         if(mask & (1<<v[i][j]))
            continue;
            else
        x+=ways((mask|(1<<v[i][j])),i+1);
        x=x%MOD;

     }
    return dp[mask][i]=x;

}

int main()
{
  int n,t,i,j,l;
  long int x;
  char ch;
  scanf("%d",&t);
  while(t--)
  {
    for(i=0;i<101;i++){
      v[i].clear();
      }
      scanf("%d",&n);
      for(i=0;i<n;i++)
      {
          ch=' ';
          while(ch==' ')
          {
              scanf("%d",&l);
              v[l].push_back(i);
            if(scanf("%c",&ch)==EOF)
					break;
          }
      }
           all=(1<<n)-1;
      memset(dp,-1,sizeof(dp));
     x=ways(0,1);
  cout<<x<<"\n";
  }
    return 0;
}
