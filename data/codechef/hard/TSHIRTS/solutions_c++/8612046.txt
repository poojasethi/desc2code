/*
Author :  ARVIND PANDEY
 */
#include <iostream>
#include <stdio.h>
#include <climits>
#include <cstring>
#include <algorithm>
#include <string.h>
#include <stdlib.h>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <sstream>
using namespace std;
// struct _ {
//     ios_base::Init i;

//     _() {
//         cin.sync_with_stdio(0);
//         cin.tie(0);
//     }
// } _;

#define FOR(i,a,b) for(i=a;i<b;i++)
#define pb(x) push_back(x)
#define ll long long
#define mp make_pair

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef vector<pii> vii;
typedef vector<vii> vvii;

ll power(ll a, ll n) //////             O(log n)
{
    ll ans = 1;
    while (n) {
        if (n % 2 == 1)
            ans *= a;
        a *= a;
        n /= 2;
    }
    return ans;
}

ll gcd(ll a, ll b) ////                 O(log(a+b))
{
    if (b==0)
        return a;
    return gcd(b,a%b);
}
////////////////////////////////////////////////////////////////////////////////////CODE BEGINS/////////////////////////////////////////////////////////
ll dp[1024][105];
vi shirts[105];
int n;
int allmask;
ll mod = 1e9 +7;
int cntways(int mask,int i)
{
    if(mask == allmask)
        return 1;
    if(i > 100)
        return 0;
    if(dp[mask][i] != -1)
        return dp[mask][i];
    ll ways = 0;
    ways += cntways(mask,i+1);
    int size = shirts[i].size();
    int j;
    FOR(j,0,size)
    {
        if(mask & (1 << shirts[i][j])) continue;
        else ways += cntways(mask | (1 << shirts[i][j]), i + 1);
        ways %= mod;
    }
    return dp[mask][i] = ways;
}
int main() 
{
	#ifndef ONLINE_JUDGE
    freopen("inp.txt","r",stdin);
    #endif

    int t;
    cin>>t;
    while(t--)
    {
        int i,j,x;
        cin>>n;
        getchar();
        allmask = (1 << n) - 1;
        string str,temp;
        FOR(i,0,n)
        {
            getline(cin, str);
            stringstream ss(str);
            while (ss >> temp)
            {
                stringstream s;
                s << temp;
                s >> x;
                shirts[x].push_back(i);
            }
        }
        memset(dp,-1,sizeof dp);
        cout<<cntways(0,1)<<"\n";
        FOR(i,0,102)
            shirts[i].clear();
    }
    return 0;
}