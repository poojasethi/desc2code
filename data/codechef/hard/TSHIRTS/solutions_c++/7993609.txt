#include <bits/stdc++.h>
using namespace std;
typedef long long int ll; 
vector <int> adj[10+ 5];
char s[10 + 1][10 + 1][500 + 10];
int p2[10+ 5];
int dp[100 + 10][1024 + 10];
void fill(int i,int tc)
{
    for(int j = 0 ; s[tc][i][j] != 0 ; j++)
    {
        int nu = 0;
        while(s[tc][i][j] != ' ' && s[tc][i][j] != 0)
        {
            int d = s[tc][i][j] - '0';
            nu = nu*10 + d;
            j++;
        }
        if(nu != 0)
        adj[nu].push_back(i - 1);
    }
}
int Compute(int n)
{
    int i,j,k,P2 = p2[n];
    int mod = 1000000007;
    dp[0][0] = 1;
    for(j = 1 ; j<=100 ; j++)
    {
        for(i = 0 ; i<P2 ; i++) dp[j][i] = dp[j-1][i];
        int sz = adj[j].size();
        for(k = 0 ; k<sz ; k++)
        {
            int u = adj[j][k];
            for(i = 0 ; i<P2 ; i++)
            {
                int x = p2[u];
                if(!(i&x))
                {
                    dp[j][i + x] += dp[j-1][i];
                    if(dp[j][i + x] >= mod)
                    dp[j][i + x] -= mod;
                }
            }
        }
    }
    return dp[100][P2 - 1];
} 
int main()
{
    int tc,t;
    p2[0] = 1;
    dp[0][0] = 1;
 
    for(int k = 1 ; k<=10 ; k++)
    {
        p2[k] = 2*p2[k-1];
    } 
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int n,i;
        scanf("%d",&n);
        char temp[100];
        gets(temp);
        for(i = 1 ; i<=n ; i++)
        {
            gets(s[t][i]);
            fill(i,t);
        }
        int ans = Compute(n);
        for(i = 1 ; i<=100 ; i++) adj[i].clear();
        printf("%d\n",ans);
    }
    return 0;
}