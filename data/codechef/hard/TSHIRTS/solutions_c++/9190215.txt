// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define MAXN 11
#define MAXC 102
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(int,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
int dp[1<<MAXN][MAXC];
bool a[MAXN][MAXC];
int main()
{
	int tc;scanf("%d",&tc);
	while(tc--)
	{
		int n;scanf("%d",&n);
		char ch;
		ch=getchar();
		for(int i=0;i<101;i++)
			for(int j=0;j<11;j++)
				a[j][i]=0;
		for(int i=0;i<n;i++)
		{
			int pre=0;
			while((ch=getchar())!='\n')
			{
				if(ch==' ')
				{
					a[i][pre]=1;
					pre=0;
				}
				else
					pre=(pre*10)+(ch-'0');
			}
			a[i][pre]=1;
		}
		for(int i=0;i<(1<<n);i++)
			for(int j=0;j<101;j++)
				dp[i][j]=0;
		for(int i=0;i<101;i++)	
			dp[0][i]=1;
		for(int i=1;i<(1<<n);i++)
		{
			for(int j=1;j<101;j++)
			{
				for(int k=0;k<n;k++)
					if(isone(i,k))
					{
						if(a[k][j])
							dp[i][j]=(dp[i][j]+dp[i^(1<<k)][j-1])%MOD;
					}
				if(j)
					dp[i][j]=(dp[i][j-1]+dp[i][j])%MOD;
			}
		}
		printf("%d\n",dp[(1<<n)-1][100]);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(int x,int pos)
{
	 return x&(1<<pos);
}



