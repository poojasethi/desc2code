#include<iostream>
#include<stdio.h>
#include<math.h>
#include<algorithm>

#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif // ONLINE_JUDGE

using namespace std;

long long int fast_input(){
    char c=gc();
    while(c<'0'||c>'9') c=gc();
    long long int ans=0;
    while(c>='0'&&c<='9'){
        ans=10*ans+c-'0';
        c=gc();
    }
    return ans;
}


using namespace std;

bool func(long long int a,long long int b){
    if(a>b) return true;
    else return false;
}

long long int weights_1[200000+10],weights_2[200000+10],ans[200000+10],pointer_1[200000+10],pointer_2[200000+10],size1=0,size2=0,m=0;

int main(){
    long long int n,i,w,c;
    long long int temp1,temp2;
    weights_1[0]=0;
    weights_2[0]=0;
    pointer_1[0]=0;
    pointer_2[0]=0;
    ans[0]=0;
    n=fast_input();
    for(i=1;i<=n;i++){
        w=fast_input();
        c=fast_input();
        if (w==1) weights_1[++size1]=c;
        else if (w==2) weights_2[++size2]=c;
    }
    /*cout<<"weights_1:\n";
    for(i=1;i<=size1;i++) cout<<weights_1[i]<<" ";
    cout<<"\n";
    cout<<"weights_2:\n";
    for(i=1;i<=size2;i++) cout<<weights_2[i]<<" ";
    cout<<"\n";*/
    sort(weights_1+1,weights_1+size1+1,func);
    sort(weights_2+1,weights_2+size2+1,func);
    /*cout<<"weights_1_sorted:\n";
    for(i=1;i<=size1;i++) cout<<weights_1[i]<<" ";
    cout<<"\n";
    cout<<"weights_2_sorted:\n";
    for(i=1;i<=size2;i++) cout<<weights_2[i]<<" ";
    cout<<"\n";*/
    m=size1+2*size2;
    ans[1]=(size1>=1)?(weights_1[1]):(0);
    pointer_1[1]=(size1>=1)?(1):(0);
    for(i=2;i<=m;i++){
        temp1=0;
        temp2=0;
        if(pointer_2[i-2]+1<=size2) temp2+=weights_2[pointer_2[i-2]+1];
        if(pointer_1[i-2]+2<=size1){
            temp1+=(weights_1[pointer_1[i-2]+1]+weights_1[pointer_1[i-2]+2]);
            if(temp1>temp2){
                ans[i]=ans[i-2]+temp1;
                pointer_1[i]=pointer_1[i-2]+2;
                pointer_2[i]=pointer_2[i-2];
            }
            else if(temp1<=temp2){
                ans[i]=ans[i-2]+temp2;
                pointer_1[i]=pointer_1[i-2];
                pointer_2[i]=pointer_2[i-2]+1;
            }
        }
        else if(pointer_1[i-2]+1<=size1){
            temp1+=(weights_1[pointer_1[i-2]+1]);
            if(temp1>temp2){
                ans[i]=ans[i-2]+temp1;
                pointer_1[i]=pointer_1[i-2]+1;
                pointer_2[i]=pointer_2[i-2];
            }
            else if(temp1<=temp2){
                ans[i]=ans[i-2]+temp2;
                pointer_1[i]=pointer_1[i-2];
                pointer_2[i]=pointer_2[i-2]+1;
            }
        }
        else{
            ans[i]=ans[i-2]+temp2;
            if(temp2>0){
                pointer_1[i]=pointer_1[i-2];
                pointer_2[i]=pointer_2[i-2]+1;
            }
            else{
                pointer_1[i]=pointer_1[i-2];
                pointer_2[i]=pointer_2[i-2];
            }
        }
    }
    for(i=1;i<=m;i++) printf("%lld ",ans[i]);
    printf("\n");
return 0;
}
