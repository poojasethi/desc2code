#include <bits/stdc++.h>
using namespace std;
long long int t[300001];
int main()
{
    vector<int > one,two;
    int n,w,c,i,s=0;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d %d",&w,&c);
        if(w==1)
            one.push_back(c);
        else
            two.push_back(c);
        s+=w;
    }
    sort(one.begin(),one.end());
    sort(two.begin(),two.end());
    vector<int > ONE=one,TWO=two;
    long long int ans=0;
    for(i=2;i<=s;i+=2)
    {
        int cost1=0,cost2=0;
        if(two.size()>=1)
            cost1=two.back();
        int f=1;
        if(one.size()>=2)
        {
            cost2=one.back();
            cost2+=one[one.size()-2];
        }
        else if(one.size()>=1)
        {
            f=2;
            cost2=one.back();
        }
        if(cost1>=cost2)
        {
            ans+=cost1;
            two.pop_back();
        }
        else
        {
            ans+=cost2;
            if(f==1)
            {
                one.pop_back();
                one.pop_back();
                //ans+=cost2
            }
            else
                one.pop_back();
        }
                t[i]=ans;
    }
    one=ONE,two=TWO;
    ans=0;
    if(one.size()>=1)
    {
        ans=one.back();
        one.pop_back();
    }
    t[1]=ans;
    for(i=3;i<=s;i+=2)
    {
        int cost1=0,cost2=0;
        if(two.size()>=1)
            cost1=two.back();
        int f=1;
        if(one.size()>=2)
        {
            cost2=one.back();
            cost2+=one[one.size()-2];
        }
        else if(one.size()>=1)
        {
            f=2;
            cost2=one.back();
        }
        if(cost1>=cost2)
        {
            ans+=cost1;
            two.pop_back();
        }
        else
        {
            ans+=cost2;
            if(f==1)
            {
                one.pop_back();
                one.pop_back();
                //ans+=cost2
            }
            else
                one.pop_back();
        }
                t[i]=ans;

    }
    for(i=1;i<=s;i++)
    {
        printf("%lld ",t[i]);
    }
    return 0;
}
