/*
	               _            .                                 .x+=:.
	              u            @88>                              z`    ^%    .uef^"
	             88Nu.   u.    %8P      u.    u.                    .   <k :d88E
	      u     '88888.o888c    .     x@88k u@88c.       u        .@8Ned8" `888E
	   us888u.   ^8888  8888  .@88u  ^"8888""8888"    us888u.   .@^%8888"   888E .z8k
	.@88 "8888"   8888  8888 ''888E`   8888  888R  .@88 "8888" x88:  `)8b.  888E~?888L
	9888  9888    8888  8888   888E    8888  888R  9888  9888  8888N=*8888  888E  888E
	9888  9888    8888  8888   888E    8888  888R  9888  9888   %8"    R88  888E  888E
	9888  9888   .8888b.888P   888E    8888  888R  9888  9888    @8Wou 9%   888E  888E
	9888  9888    ^Y8888*""    888&   "*88*" 8888" 9888  9888  .888888P`    888E  888E
	"888*""888"     `Y"        R888"    ""   'Y"   "888*""888" `   ^"F     m888N= 888>
	 ^Y"   ^Y'                  ""                  ^Y"   ^Y'               `Y"   888
	                                                                             J88"
	                                                                             @%
	                                                                           :"
*/
#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,b,a) for(int i=(b);i>=(a);--i)
#define all(o) (o).begin(),(o).end()
#define mset(a,o) memset((a),(o),sizeof(a))
#define caset int __T,case_n=1;cin>>__T;while(__T--)
#define BOOST ios_base::sync_with_stdio(0);cin.tie(0);cout.tie(0)
#define runtime printf("%.2f\n",(double)clock()/CLOCKS_PER_SEC);

#define debug(args...) {dbg,args; cerr<<endl;}
struct debugger{
    template<typename T>debugger& operator ,(const T& v) { cerr<<v<<" ";return *this; }
}dbg;

typedef long long int ll; typedef vector<int> vi;
typedef pair<int,int> pii; typedef vector<pii> vii;
typedef map<int,int> mii;

#define oo 0x3f3f3f3f
#define eps 1e-9
const int mod = 1000000007;
const int MAXN = 100000+9;

vector<int> W1, W2; 
int N, W, C, TW;

ll ans[2 * MAXN];

void solve_for_even_weight(int start, int val) {
	ll C1, C2, tmp = val;
	int flag;

	for(int i=start; i<=TW; i+=2) {
		C1 = C2 = flag = 0;

		if(W2.size() >= 1) C2 = W2.back();

		if(W1.size() >= 2) C1 = W1.back() + W1[W1.size()-2], flag = 1; 

		else if(W1.size() == 1) C1 = W1.back();

		if(C2 > C1) tmp += C2, W2.pop_back(); 
		else {
			tmp += C1;
			if(flag) W1.pop_back(), W1.pop_back(); 
			else W1.pop_back();
		}

		ans[i] = tmp;
	}
}

int main() {
	BOOST;
	cin>>N;

	rep(i,0,N) {
		cin>>W>>C;
		if(W == 1) W1.push_back(C);
		else W2.push_back(C);

		TW += W;
	}

	sort(all(W1));
	sort(all(W2));

	vector<int> W1_cpy, W2_cpy;
	W1_cpy = W1;
	W2_cpy = W2;

	// for even weights //
	
	solve_for_even_weight(2, 0);
	

	// for odd weights //

	W1 = W1_cpy; 
	W2 = W2_cpy;

	if(W1.size() >= 1) ans[1] = W1.back(), W1.pop_back();

	solve_for_even_weight(3, ans[1]);

	rep(i,1,TW+1) cout << ans[i] << " ";
	cout << "\n";
	return 0;
}
