#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;

long long one[1000000];
long long two[1000000];

int main()
{
    long long ev, od, sum=0,i,j,n, o=0, t=0, d1,d2,sum1,k;
    cin >> n;
    for (i = 0; i < n; i++) {
        cin >> d1 >> d2;
        if (d1 == 1)
           one[o++] = d2;
        else
            two[t++] = d2;
        sum = sum+d1;
    }
    long long a[sum+1];
        sort(one, one+o); 
        sort(two, two+t);
        
    /*    if (o != 0)
                  cout << one[o-1] << " ";
        else
            cout << 0 << " ";*/
     
     
            sum1 = 0;
            ev = t;
            od = o;
        for (i = 2; i <= sum; i = i+2) {
                     if (ev > 0 && od == 0) {
                        sum1 = sum1 + two[ev-1];
                        ev--;
                     }
                     else if (ev > 0 && od > 1) {
                          if ((one[od-1] + one[od-2]) > two[ev-1]) {
                             sum1 = sum1 + one[od-1] + one[od-2];
                             od = od - 2;
                          }
                          else {
                               sum1 = sum1 + two[ev-1];
                               ev--;
                          }
                     }
                     else if (ev > 0 && od == 1) {
                          if (one[od-1] > two[ev-1]) {
                             sum1 = sum1 + one[od-1];
                             od = od-1;
                          }
                          else {
                               sum1 = sum1 + two[ev-1];
                               ev--;
                          }
                     }
                     else if (ev == 0 && od > 1) {
                          sum1 = sum1 + one[od-1] + one[od-2];
                             od = od - 2;
                     }
                     else if (ev == 0 && od == 1) {
                          sum1 = sum1 + one[od-1];
                             od = od-1;
                     }
              // cout << sum1 << " ";   
               a[i] = sum1;
        }
        
    //    cout << endl;
                ev = t;
                od = o;
            if (od > 0) {
               sum1 = one[od-1];
               od--;
            }
            else
                sum1 = 0;
            a[1] = sum1;
    //        cout << sum1 << " ";
            for (i = 3; i <= sum; i = i+2) {
                         if (ev > 0 && od == 0) {
                            sum1 = sum1 + two[ev-1];
                            ev--;
                         }
                         else if (ev > 0 && od > 1) {
                              if ((one[od-1] + one[od-2]) > two[ev-1]) {
                                 sum1 = sum1 + one[od-1] + one[od-2];
                                 od = od - 2;
                              }
                              else {
                                   sum1 = sum1 + two[ev-1];
                                   ev--;
                              }
                         }
                         else if (ev > 0 && od == 1) {
                              if (one[od-1] > two[ev-1]) {
                                 sum1 = sum1 + one[od-1];
                                 od = od - 1;
                              }
                              else {
                                   sum1 = sum1 + two[ev-1];
                                   ev--;
                              }
                         }
                         else if (ev == 0 && od > 1) {
                              sum1 = sum1 + one[od-1] + one[od-2];
                                 od = od - 2;
                         } 
                         else if (ev == 0 && od == 1) {
                              sum1 = sum1 + one[od-1];
                                 od = od - 1;
                         }
      //      cout << sum1 << " ";
                   a[i] = sum1;
            }
        
        
        for (i = 1; i <= sum; i++)
            cout << a[i] << " ";
        cout << endl;

  //  system("pause");
    return 0; 
}
 
