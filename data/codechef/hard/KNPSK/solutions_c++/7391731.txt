#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <functional>
#include <math.h>

inline void fastreadu(unsigned int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}

inline void fastread(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}

int N;
unsigned int A1[100005]; // [1, 1000000000]
unsigned int A2[100005]; // [1, 1000000000]

int main()
{
  fastread(&N); // [3, 100000]

  int M = 0; // Weight of all the items together
  unsigned int *pa1end = A1;
  unsigned int *pa2end = A2;
  while(N--)
  {
    int W; // 1 or 2?
    fastread(&W);
    if(W == 1)
      fastreadu(pa1end++);
    else if(W == 2)
      fastreadu(pa2end++);
    else
    {
      int k = 0;
      ++k;
    }
    M += W;
  }
  pa1end[0] = pa1end[1] = 0;
  pa2end[0] = pa2end[1] = 0;

  std::sort(A1, pa1end, std::greater<int>());
  std::sort(A2, pa2end, std::greater<int>());

  // Next items to pick for case A and B
  unsigned int *pa1 = A1 + 1; 
  unsigned int *pa2 = A2;
  unsigned int *pb1 = A1;
  unsigned int *pb2 = A2;

  unsigned long long A = A1[0];
  unsigned long long B = A2[0];
  if(B < A1[0] + A1[1])
  {
    B = A1[0] + A1[1];
    pb1 += 2;
  }
  else
  {
    ++pb2;
  }

  printf("%lld", A);
  printf(" %lld", B);

  unsigned long long b1, a11, a2;
  unsigned int *temp;
  for(M -= 2; M > 0; --M)
  {
    b1 = B + pb1[0];
    a11 = A + pa1[0] + pa1[1];
    a2 = A + pa2[0];
    if((b1 >= a11) && (b1 >= a2)) // b1 is the largest
    {
      A = B;
      B = b1;
      pa1 = pb1;
      pa2 = pb2;
      ++pb1;
    }
    else if((a11 >= b1) && (a11 >= a2)) // a11 is the largest
    {
      A = B;
      B = a11;
      temp = pa1;
      pa1 = pb1;
      pb1 = temp + 2;
      temp = pa2;
      pa2 = pb2;
      pb2 = temp;
    }
    else // a2 is the largest
    {
      A = B;
      B = a2;
      temp = pa1;
      pa1 = pb1;
      pb1 = temp;
      temp = pa2;
      pa2 = pb2;
      pb2 = temp + 1;
    }
    printf(" %llu", B);
  }

  printf("\n");


  return 0;
}
