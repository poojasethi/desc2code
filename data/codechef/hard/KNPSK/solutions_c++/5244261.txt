#include <bits/stdc++.h>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef set<int> si;
#define lb lower_bound
#define ub upper_bound
#define pb push_back
#define pf push_front
#define mp make_pair
#define ull unsigned long long
#define ll long long
#define fileinput freopen("input.txt", "r", stdin)
#define fileoutput freopen("output.txt", "w", stdout)
#define iptr istream_iterator
#define optr ostream_iterator
#define OUTPUT(stl,type) copy(stl.begin(),stl.end(),optr<type> (cout," "))
// can't be used for map & multimap (can be used for set & multiset)

#define F(i,a,n) for(i=(a);i<(n);++i)
#define R(i,a,n) for(i=(a);i>=(n);--i)
#define tr(it,container) for(typeof(container.begin()) it = container.begin(); it != container.end(); ++it)
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
#define Su(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))      // useful to clear array of integer
#define debug(x) F(i,0,sz(x)/sz(int)){cout<<x[i]<<" ";}cout<<endl
#define de(x) cout<<#x<<" = "<<x<<endl
#define fr first
#define se second
#define Debug false
#define sz(a) ((int)a.size())
#define len(a) ((int)a.length())
#define FASTIO          1
#define INF 2147483647
#define MOD 1000000007
#define all(x)             x.begin(),x.end()
#define SORT(x)            sort(all(x))
#define v(x)               vector< x >
#define fastio	     ios::sync_with_stdio(false)
#define present(container,element) (container.find(element) != container.end())
#define cpresent(container,element) (find(all(container),element) != container.end())

int ABS(int a) { if ( a < 0 ) return (-a); return a; }
const double pi = acos(-1.0);
ll one[100005];
ll two[100005];
int main()
{
//	fileinput;
	vector< pair<ll,ll> > ans;
	vector< pair<ll,ll> >::iterator it1,it2;
	ll i,N,no = 0;
	ll a,b,m,n,psum,sum;
	bool flag;
		flag = 0;
		psum=0;
		stack<ll> on;
		stack<ll> tw;
		stack<ll> curone;
		stack<ll> curtwo;
		sum = 0;
		m = n = 0;
		Sl(N);
		F(i,0,N) {
			Sl(a);
			Sl(b);
			sum += a;
			if (a == 1) one[m++] = b;
			else two[n++] = b;
		}
		sort(one,one+m);
		sort(two,two+n);
		F(i,0,m) on.push(one[i]);
		F(i,0,n) tw.push(two[i]);
		if (!on.empty()) {
			no++;
			flag = 1;
			curone.push(on.top());
			psum = curone.top();
			ans.pb(mp(no,psum));
			on.pop();
		}
	//	de(sum);
		if (flag) {
			flag = 0;
			while(no < sum) {
			//	de(no);
			//	de(psum);
				if (!on.empty() && !tw.empty()) {
					if (!curone.empty()) {
						if (psum+on.top() > psum-curone.top()+tw.top()) {
							no++;
			//				cout<<"!!!!!!\n";
							psum += on.top();
							curone.push(on.top());
							on.pop();
							ans.pb(mp(no,psum));
						}
						else {
							no++;
			//				cout<<"@@@@@@\n";
							ll x = psum;
							psum = psum-curone.top()+tw.top();
							if (flag == 1) {
								psum = x+tw.top();
								curtwo.push(tw.top());
								tw.pop();
								flag = 0;
							}
							else if (psum >= x) {
								curtwo.push(tw.top());
								on.push(curone.top());
								tw.pop();
								curone.pop();
							}
							else {
								psum = x;
								flag = 1;
							}
							ans.pb(mp(no,psum));
						}
					}
					else {
						no++;
			//			cout<<"######\n";
						psum += on.top();
						curone.push(on.top());
						on.pop();
						ans.pb(mp(no,psum));
					}
				}
				else if (!on.empty()) {
					while(!on.empty()) {
						no++;
			//			cout<<"$$$$$$\n";
						psum = psum+on.top();
						curone.push(on.top());
						on.pop();
						ans.pb(mp(no,psum));
					}
				}
				else if (!tw.empty()) {
					if (!curone.empty()) {
						no++;
			//			cout<<"%%%%%%\n";
						ll x = psum;
						psum = psum-curone.top()+tw.top();
						if (flag == 1) {
				//			de(tw.top());
							psum = x+tw.top();
							curtwo.push(tw.top());
							tw.pop();
							flag = 0;
						}
						else if (psum >= x) {
							curtwo.push(tw.top());
							on.push(curone.top());
							tw.pop();
							curone.pop();
						}
						else {
							psum = x;
							flag = 1;
						}
						ans.pb(mp(no,psum));
					}
					else {
			//			cout<<"^^^^^^^\n";
						no+=2;
						psum = psum+tw.top();
						curtwo.push(tw.top());
						tw.pop();
						ans.pb(mp(no,psum));
					}
				}
				else {
					break;
				}
			}
		}
		else {
			while(!tw.empty()) {
				no+=2;
				psum += tw.top();
				tw.pop();
				ans.pb(mp(no,psum));
			}
		}
		int val = 0;
		psum = 0;
		it1 = ans.begin();
		for(i = 1; i <= sum; i++) {
			if (it1->fr == i) {
				printf("%lld ", it1->se);
				psum = it1->se;
				++it1;
			}
			else if (it1->fr == i+1) {
				printf("%lld ", psum);
			}
		}
		printf("\n");
	return 0;
}