#include<bits/stdc++.h>

using namespace std;

#define ll long long int
#define pb push_back
#define mp make_pair
#define maxN 200005
#define f first
#define s second

vector<int> W1,W2;
pair< ll , pair<int,int> > dp[maxN];

int main()
{
cin.sync_with_stdio(0);
cin.tie(0);

int N,i,x,y;
cin>>N;

W1.clear();
W2.clear();


ll weight=0;
for(i=0;i<N;i++) {
cin>>x>>y;
if(x==1)
W1.pb(y);
else
W2.pb(y);
weight+=x;
}

sort(W1.rbegin(),W1.rend());
sort(W2.rbegin(),W2.rend());

//for(i=0;i<W2.size();i++)
//cout<<W2[i]<<" ";
//cout<<"\n";


dp[0].f=0;
dp[0].s.f=-1;
dp[0].s.s=-1;

ll v1,v2,v3;

for(i=1;i<=weight;i++) 
if(i%2==1) {

v1=dp[i-1].f;
if(dp[i-1].s.f + 1< W1.size() ) //object of weight one is available
v1+=W1[dp[i-1].s.f + 1];

v2=-1;
if(i>=2) {
v2=dp[i-2].f;
if(dp[i-2].s.s + 1 < W2.size() )
v2+=W2[ dp[i-2].s.s + 1];
}

if(v1>=v2) {
dp[i].f = v1;
dp[i].s.f=dp[i-1].s.f +1;
dp[i].s.s=dp[i-1].s.s;	//same number of W2 items used
}
else {
dp[i].f=v2;
dp[i].s.f=dp[i-2].s.f;
dp[i].s.s=dp[i-2].s.s + 1;
}

}
else {

v1=dp[i-1].f;
if(dp[i-1].s.f+ 1<W1.size())
v1+= W1[dp[i-1].s.f + 1];

v2=dp[i-2].f;
if(dp[i-2].s.f + 2 < W1.size() )
v2+= W1[dp[i-2].s.f + 1] + W1[dp[i-2].s.f + 2];

v3=dp[i-2].f;
if(dp[i-2].s.s + 1< W2.size() )
v3+= W2[dp[i-2].s.s + 1];


if(v3>=v1 && v3>=v2) { //taking 1 object of weight 2 is optimal
dp[i].f = v3;
dp[i].s.f=dp[i-2].s.f;
dp[i].s.s=dp[i-2].s.s + 1;
}
else if(v2>=v1 && v2>=v3) {
dp[i].f= v2;
dp[i].s.f=dp[i-2].s.f + 2;
dp[i].s.s=dp[i-2].s.s;
}
else {
dp[i].f= v1;
dp[i].s.f = dp[i-1].s.f + 1;
dp[i].s.s = dp[i-2].s.s;
}


}

for(i=1;i<=weight;i++)
cout<<dp[i].f<<" ";


return 0;
}


