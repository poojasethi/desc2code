/*
Author : lifecodemohit
*/

#ifdef __APPLE__

    #include <cassert>
    #include <iostream>
    #include <iomanip>
    #include <ctime>
    #include <cstdio>
    #include <vector>
    #include <algorithm>
    #include <utility>
    #include <queue>
    #include <stack>
    #include <string>
    #include <cstring>
    #include <sstream>
    #include <map>
    #include <set>
    #include <unordered_map>
    #include <unordered_set>

#else

    #include <bits/stdc++.h>

#endif  

using namespace std;

int main()
{
	int n;
	cin >> n;
	vector < long long > v1, v2;
	int sum = 0;

	for (int i = 0; i < n; i++) {
		int w;
		long long c;
		cin >> w >> c;
		if (w == 1)
			v1.push_back(c);
		else
			v2.push_back(c);
		sum += w;	
	}
	
	sort(v1.begin(), v1.end());
	sort(v2.begin(), v2.end());
	
	long long dp[sum+5];
	memset(dp, 0, sizeof(dp));

	int mark1[sum+5], mark2[sum+5];
	mark1[0] = (int)v1.size() - 1;
	mark2[0] = (int)v2.size() - 1;
	for (int i = 1; i <= sum; i++) {
		long long n_val1 = 0, n_val2 = 0;
		dp[i] = dp[i-1];
		mark1[i] = mark1[i-1];
		mark2[i] = mark2[i-1];
		
		if (mark1[i-1] >= 0) {
			n_val1 = dp[i-1] + v1[mark1[i-1]];
		}
		if ((mark2[i-2] >= 0) && (i >= 2)) {
			n_val2 = dp[i-2] + v2[mark2[i-2]];
		}
		if (n_val1 != 0 ||  n_val2 != 0) {
			if (n_val1 > n_val2) {
				if (n_val1 > dp[i]) {
					dp[i] = n_val1;
					mark1[i] = mark1[i-1] - 1;
					mark2[i] = mark2[i-1];
				}
			}
			else {
				if (n_val2 > dp[i]) {
					dp[i] = n_val2;
					mark1[i] = mark1[i-2];
					mark2[i] = mark2[i-2] - 1;
				}
			}
		}
		printf("%lld ", dp[i]);
	}
	printf("\n");
	return 0;
}