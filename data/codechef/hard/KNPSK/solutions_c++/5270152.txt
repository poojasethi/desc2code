#include<iostream>
#include<algorithm>
#include<vector>
#include<utility>
using namespace std;

bool comp(long long  k , long long x)
{	return (k>x);
}

int main()
{	int n;
	cin>>n;
	vector<long long> one;
	vector<long long> two;
	long long sum=0;
	for(int i =0 ; i < n ; i++)
	{	int k;
		long c;
		cin>>k>>c;
		if(k==1){	
			one.push_back(c);
			sum+=1;
		}
		else if(k==2)
		{	two.push_back(c);
			sum+=2;
		}
		
	}
	
	sort(one.begin(),one.end(),comp);
	sort(two.begin(),two.end(),comp);

	long long  a[sum+1];

if(one.size()!=0){
	a[1]=one[0];	}
	else{
 a[1]=0;}
	cout<<a[1]<<" ";
	a[0]=0;
	vector<pair<long ,long> > st1(sum+1);	
	long long onebck;long long twobck;	//to store the position of ones and twos in the vector
	st1[0]=make_pair(-1,-1);
//	cout<<two[0]<<endl;
if(one.size()!=0){
st1[1]=make_pair(0,-1);}
else {	st1[1]=make_pair(-1,-1);
}
	int ch=0;int chi=0;
	for(long long i=2;i<sum+1;i++)	{	
		if(st1[i-1].first+1!=one.size())
		{onebck = a[i-1]+one[st1[i-1].first+1];}
		else {  onebck=a[i-1];ch=1;}
		if(st1[i-2].second+1!=two.size())
		{ twobck = a[i-2]+two[st1[i-2].second+1];}
		else { twobck=a[i-2];chi=1;}
		if(onebck>=twobck)
		{	if(ch!=1){
			st1[i]=make_pair(st1[i-1].first+1,st1[i-1].second);}
			else
			{	st1[i]=make_pair(st1[i-1].first,st1[i-1].second);
			}
			ch=0;
			chi=0;
			a[i]=onebck;
			cout<<onebck<<" ";
		}
		else 
		{	if(chi!=1){
			st1[i]=make_pair(st1[i-2].first,st1[i-2].second+1);}
			else{
				st1[i]=make_pair(st1[i-2].first,st1[i-2].second);
			}
			chi=0;
			ch=0;
			a[i]=twobck;
			cout<<twobck<<" ";
		}
		
	}
//	cout<<endl;
}