#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif
int max(int p,int q)
{
    return (p>q)?p:q;
}
int min(int p,int q)
{
    return (p<q)?p:q;
}

bool cmpfunc(ll i,ll j)
{
    return i>j;
}

ll ans[100005],count1[100005],count2[100005],w[100005],c[100005];
int main()
{
    vector<ll> c1,c2;
    ll n,i,total1,total2,j,m;
    sll(n);
    for(i=0;i<n;i++)
    {
        sll(w[i]);
        sll(c[i]);
    }
    for(i=0;i<n;i++)
    {

        if(w[i]==1)
        {
            c1.PB(c[i]);
        }
        else
        {
            c2.PB(c[i]);
        }
    }
    if(SZ(c1))
    {
        sort(ALL(c1),cmpfunc);
    }
    if(SZ(c2))
    {
        sort(ALL(c2),cmpfunc);
    }
    total1=SZ(c1);
    total2=SZ(c2);
    if(total1==0)
    {
        c1.PB(0);
        c1.PB(0);
    }
    else if(total1==1)
    {
        c1.PB(0);
    }
    if(total2==0)
    {
        c2.PB(0);
    }
 /*   for(i=0;i<SZ(c1);i++)
    {
        cout << c1[i] << " ";
    }
    cout << endl;
    for(i=0;i<SZ(c2);i++)
    {
        cout << c2[i] << " ";
    }
    cout << endl;*/
    i=0;
    j=0;
    ans[1]=c1[0];
    count1[1]=1;
    count2[1]=0;
    if(c1[0]+c1[1]>c2[0])
    {
        ans[2]=c1[0]+c1[1];
        count1[2]=2;
        count2[2]=0;
    }
    else
    {
        ans[2]=c2[0];
        count1[2]=0;
        count2[2]=1;
    }
    m=total1+2*total2;
    //printf("%lld %lld\n",total1,total2);
    for(i=3;i<=m;i++)
    {
      //  printf("%lld %lld %lld %lld %lld\n",i,total1,count1[i-1],total2,count2[i-2]);
        if(total1>count1[i-1] && total2>count2[i-2])
        {
            if(ans[i-2]+c2[count2[i-2]]>=ans[i-1]+c1[count1[i-1]])
            {
                ans[i]=ans[i-2]+c2[count2[i-2]];
                count2[i]=count2[i-2]+1;
                count1[i]=count1[i-2];
            }
            else
            {
                ans[i]=ans[i-1]+c1[count1[i-1]];
                count1[i]=count1[i-1]+1;
                count2[i]=count2[i-1];
            }
        }
        else if(total1>count1[i-1])
        {
            ans[i]=ans[i-1]+c1[count1[i-1]];
            count1[i]=count1[i-1]+1;
            count2[i]=count2[i-1];
        }
        else if(total2>count2[i-2])
        {
            if(ans[i-1]<ans[i-2]+c2[count2[i-2]])
            {
                ans[i]=ans[i-2]+c2[count2[i-2]];
                count2[i]=count2[i-2]+1;
                count1[i]=count1[i-2];
            }
            else
            {
                ans[i]=ans[i-1];
                count2[i]=count2[i-1];
                count1[i]=count1[i-1];
            }
        }
       /* if(i%2==1)
        {
            ans[i]=ans[i-1]+c1[count1[i-1]];
        }
        else
        {
            if(total1>count1[i-2]+1 && total2>count2[i-2])
            {
                if(ans[i-2]+c1[count1[i-2]]+c1[count1[i-2]+1] > ans[i-2]+c2[count2[i-2]])
                {
                    ans[i]=ans[i-2]+c1[count1[i-2]]+c1[count1[i-2]+1];
                    count1[i]=count1[i-2]+2;
                    count2[i]=count2[i-2];
                }
                else
                {
                    ans[i]=ans[i-2]+c2[count2[i-2]];
                    count1[i]=count1[i-2];
                    count2[i]=count2[i-2]+1;
                }
            }
            else if(total1>count1[i-2]+1)
            {
                ans[i]=ans[i-2]+c1[count1[i-2]]+c1[count1[i-2]+1];
                count1[i]=count1[i-2]+2;
                count2[i]=count2[i-2];
            }
            else if(total2>count2[i-2])
            {
                ans[i]=ans[i-2]+c2[count2[i-2]];
                count1[i]=count1[i-2];
                count2[i]=count2[i-2]+1;
            }
        }*/
    }
    for(i=1;i<=m;i++)
    {
        cout << ans[i] << " ";
    }
    cout << endl;
    return 0;
}

