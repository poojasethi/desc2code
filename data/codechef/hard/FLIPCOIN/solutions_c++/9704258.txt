#include <iostream>
#define ll long long int
#include<stdio.h>
using namespace std;
struct node
{
    int lazy;//=0;
    node*left;
    node*right;
    int index;
};
node* buildsum(ll a[],ll l,ll r)
{
    node*tnode= new node;
    if(l==r)
    {
        tnode->left=tnode->right=NULL;
        tnode->index=0;tnode->lazy=0;
        return tnode;
    }
    else{
            tnode->lazy=0;
        tnode->left=buildsum(a,l,(l+r)/2);
        tnode->right=buildsum(a,(l+r)/2+1,r);
        tnode->index=tnode->left->index+tnode->right->index;
        return tnode;
    }
}
node* updatesumlazy(ll a[],ll l,ll r,ll x,ll y,ll diff,node* root)
{
    if(root->lazy!=0)
    {
        root->index=r-l+1-root->index;
    if(l!=r)
        {
            root->left->lazy=(root->left->lazy+1)%2;
            root->right->lazy=(root->right->lazy+1)%2;
        }
        root->lazy=0;
    }
    if(l>r || x>r || y<l)
        return root;
    if(l>=x && r<=y)
    {
        root->index=(r-l+1)-root->index;
    if(l!=r)
        {
            root->left->lazy=(root->left->lazy+1)%2;
            root->right->lazy=(root->right->lazy+1)%2;
        }
        return root;
    }
    root->left=updatesumlazy(a,l,(l+r)/2,x,y,diff,root->left);
    root->right=updatesumlazy(a,(l+r)/2+1,r,x,y,diff,root->right);


    root->index=root->left->index+root->right->index;
    return root;
}

ll rmslazy(ll a[],ll l,ll r,ll x,ll y,node** root)
{
    if((*root)->lazy!=0)
    {
        (*root)->index=r-l+1-(*root)->index;
    if(l!=r)
        {
            (*root)->left->lazy=((*root)->left->lazy+1)%2;
            (*root)->right->lazy=((*root)->right->lazy+1)%2;
        }
        (*root)->lazy=0;
    }

    if(x>r || y<l||l>r)
        return 0;
    else if(l>=x && r<=y)
        return (*root)->index;
    else{
        return rmslazy(a,l,(l+r)/2,x,y,&((*root)->left))+rmslazy(a,(l+r)/2+1,r,x,y,&((*root)->right));
    }
}

int main()
{
   // freopen("input.txt","r",stdin);
    ll a[10],n,q,c,l,r;

    cin>>n>>q;
    node* root=buildsum(a,0,n-1);
    for(int i=0;i<q;i++){
        scanf("%lld%lld%lld",&c,&l,&r);
        if(!c)
            root=updatesumlazy(a,0,n-1,l,r,0,root);
        else{
            cout<<rmslazy(a,0,n-1,l,r,&root)<<endl;
        }
    }

/*
        node* root=buildsum(a,0,6);
   root=updatesumlazy(a,0,6,2,4,0,root);
    root=updatesumlazy(a,0,6,3,6,0,root);
     root=updatesumlazy(a,0,6,0,6,0,root);
   cout<<rmslazy(a,0,6,5,5,&root)<<endl;
   root=root->right->left;
 cout<<root->index<<" ";
 cout<<root->left->index<<" "<<root->right->index<<" ";
    cout<<root->right->lazy<<" "<<root->left->lazy<<" ";
    //cout << "Hello world!" << endl;
*/
    return 0;
}
