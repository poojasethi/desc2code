/*
	               _            .                                 .x+=:.
	              u            @88>                              z`    ^%    .uef^"
	             88Nu.   u.    %8P      u.    u.                    .   <k :d88E
	      u     '88888.o888c    .     x@88k u@88c.       u        .@8Ned8" `888E
	   us888u.   ^8888  8888  .@88u  ^"8888""8888"    us888u.   .@^%8888"   888E .z8k
	.@88 "8888"   8888  8888 ''888E`   8888  888R  .@88 "8888" x88:  `)8b.  888E~?888L
	9888  9888    8888  8888   888E    8888  888R  9888  9888  8888N=*8888  888E  888E
	9888  9888    8888  8888   888E    8888  888R  9888  9888   %8"    R88  888E  888E
	9888  9888   .8888b.888P   888E    8888  888R  9888  9888    @8Wou 9%   888E  888E
	9888  9888    ^Y8888*""    888&   "*88*" 8888" 9888  9888  .888888P`    888E  888E
	"888*""888"     `Y"        R888"    ""   'Y"   "888*""888" `   ^"F     m888N= 888>
	 ^Y"   ^Y'                  ""                  ^Y"   ^Y'               `Y"   888
	                                                                             J88"
	                                                                             @%
	                                                                           :"
*/
#include <bits/stdc++.h>
using namespace std;
#define rep(i,a,b) for(int i=(a);i<(b);++i)
#define per(i,b,a) for(int i=(b);i>=(a);--i)
#define all(o) (o).begin(),(o).end()
#define mset(a,o) memset((a),(o),sizeof(a))
#define caset int __T,case_n=1;scanf("%d",&(__T));while(__T--)
#define runtime printf("%.2f\n",(double)clock()/CLOCKS_PER_SEC);

#define debug(args...) {dbg,args; cerr<<endl;}
struct debugger{
    template<typename T>debugger& operator ,(const T& v) { cerr<<v<<" ";return *this; }
}dbg;

typedef long long int ll; typedef vector<int> vi;
typedef pair<int,int> pii; typedef vector<pii> vii;
typedef map<int,int> mii;

#define oo 0x3f3f3f3f
#define eps 1e-9
const int mod = 1000000007;

const int MAXN = 1<<18;

int flips[MAXN<<1], heads_up[MAXN<<1];

void update(int i, int l, int r, int a, int b){
	if(b<l || r<a) return;

	if(a<=l and r<=b) {
		flips[i] ^= 1;
		return;
	}
	int mid = (l+r)>>1;
	update(2*i, l, mid, a, b);
	update(2*i+1, mid+1, r, a, b);

	int sum = 0;
	if(flips[2*i] == 0) 
		sum += heads_up[2*i];
	else 
		sum += (r-l+1)/2 - heads_up[2*i];

	if(flips[2*i+1] == 0) 
		sum += heads_up[2*i+1];
	else 
		sum += (r-l+1)/2 - heads_up[2*i+1];

	heads_up[i] = sum;
}

int query(int i, int l, int r, int a, int b, int xsum) {
	if(b<l || r<a) return 0;

	if(a<=l && r<=b){
		if(xsum^flips[i] == 0) return heads_up[i];
		else return (r-l+1) - heads_up[i];
	}

	int mid = (l+r)>>1;
	int sum = 0;
	sum += query(2*i, l, mid, a, b, xsum^flips[i]);
	sum += query(2*i+1, mid+1, r, a, b, xsum^flips[i]);

	return sum;
}

int main() {
	#if 0
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n, q, t, a, b;
	cin>>n>>q;

	while(q--) {
		cin>>t>>a>>b;
		if(t==0) update(1, 0, MAXN-1, a, b);

		else if(t==1) cout<< query(1, 0, MAXN-1, a, b, 0) << "\n";
	}

	return 0;
}
