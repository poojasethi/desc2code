#include<bits/stdc++.h>
#define mid ((x+y)>>1)
using namespace std;

const int N = 100005;
int n, q, t, x, y, st[4*N];
bool lazy[4*N];

void update(int p, int x, int y, int i, int j) {
	if(lazy[p]){
		st[p] = (y-x+1) - st[p];
		if(x != y) {
			lazy[p<<1] ^= 1;
			lazy[(p<<1)|1] ^= 1;
		}
		lazy[p] = 0;
	}
	if(i > y || j < x) return ;
	if(i <= x && y <= j) {
		st[p] = (y-x+1) - st[p];
		if(x != y) {
			lazy[p<<1] ^= 1;
			lazy[(p<<1)|1] ^= 1;
		}
		return;
	}
	update(p<<1, x, mid, i, j);
	update((p<<1)|1, mid+1, y, i, j);
	st[p] = st[p<<1] + st[(p<<1)|1];
}

int get(int p, int x, int y, int i, int j){
	if(lazy[p]){
		st[p] = (y-x+1) - st[p];
		if(x != y) {
			lazy[p<<1] ^= 1;
			lazy[(p<<1)|1] ^= 1;
		}
		lazy[p] = 0;
	}
	if(i > y || j < x) return 0;
	if(i<=x && y<=j) return st[p];
	return get(p<<1, x, mid, i, j) + get((p<<1)|1, mid+1, y, i, j);
}

int main(int argc, char **argv) {
#ifndef ONLINE_JUDGE
	freopen("a.in", "r", stdin);
#endif
	scanf("%d%d", &n, &q);
	while(q--) {
		scanf("%d%d%d", &t, &x, &y);
		if(!t) update(1, 0, n-1, x, y);
		else printf("%d\n", get(1, 0, n-1, x, y));
	}
	return 0;
}
