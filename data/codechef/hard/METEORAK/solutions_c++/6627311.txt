///***  Patience is above Perfection ***///
/***I believe in ONE GOD ***/

#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<stack>
#include<bitset>
#include<map>
#include<time.h>
#include<list>
#include<iostream>
#include<queue>
#include<iomanip>
#include<assert.h>
#define MAXN 1000005
#define ll long long

#define sin(i) scanf("%d",&i)
#define sinl(i) scanf("%lld",&i)
#define sout(i) printf("%d",i)
#define soutl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(int i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define GETCHAR getchar
#define PUTCHAR putchar

/***MAH Templates MAH Rules **/

template <class T>T sabs(T x){ if(x<0) return x*-1; else return x;}
template<class T> T sgcd(T x ,T y){ if(y==0) return x; else return sgcd(y,x%y);}
template<class T> T smax(T x,T y){ if(x>y) return x; else return y;}
template<class T> T smin(T x,T y){ if(x>y) return y; else return x;}
template <class T> T smod(T a, T b ,T m){T res=1,x=b;while(b>0){if(x&1) res=((res%m)*(x%m))%m;x=(x*x)%m;b=(b>>1);}return res;}


using namespace std;
inline void writeInt(int x) { if(x==-1) { PUTCHAR('-'); PUTCHAR('1'); PUTCHAR('\n'); } else { int i = 10; char buf[11]; // buf[10] = 0;
buf[10] = ' '; do { buf[--i] = x % 10 + '0'; x/= 10; }while(x); do { PUTCHAR(buf[i]); } while (buf[i++] != ' '); } }
inline void fastInput(int &x) {
register int c = getchar();
x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = getchar());
if(c=='-') {
neg = 1;
c = getchar();
}
for(; c>47 && c<58 ; c = getchar()) {
x = (x<<1) + (x<<3) + c - 48;
}
if(neg)
x = -x;
}
int n,m,k,a[1002][1002],b[1002][1002];
int main(){
    //freopen("input.txt","r",stdin);
scanf("%d %d %d",&m,&n,&k);
REP(i,0,m) REP(j,0,n) a[i][j]=1;
REP(i,0,k){
    int x,y;
    fastInput(x); fastInput(y);
    a[--x][--y]=0;
}
 REP(i,0,m){
    REP(j,0,n){
        if(a[i][j]==1 && i>0)
            a[i][j]=a[i][j]+a[i-1][j];
    }
    a[i][n]=0;
 }

 REP(i,0,m){
    stack<pair<int,int> > p;
    p.push(mp(0,-1));
    vi v;
    v.resize(i+2);
    for(int j=0;j<i+2;j++)
        v[i]=0;
        REP(j,0,n+1){
            pair<int,int>pp=p.top();
            int x=pp.first,y=pp.second,yy=pp.second;
           // cout<<x<<"="<<y<<"    ";
            if(a[i][j]>x){
                p.push(mp(a[i][j],j));
            }
            else if(a[i][j]<x){
                        while(x>a[i][j]){
                        pp=p.top();
                        x=pp.first,y=pp.second;
                        yy=y;
                        int res=(j-y)*x;
                //cout<<" here"<<x<<" ="<<y<<" ="<<j<<  "  "<<i<<"    ";
                        //b[i-x+1][i]=max(b[i-x+1][i],res);
                        v[x]=max(v[x],j-y);
                       //cout<<"== "<<b[i-x+1][i]<<" "<<i-x+1<<"==";
                        p.pop();
                         pp=p.top();
                        x=pp.first,y=pp.second;
                    }
                    pp=p.top();
                    if(a[i][j]>pp.first){
                        p.push(mp(a[i][j],yy));

                    }
            }
        }
        int best=0;
        for(int j=v.size()-1;j>=0;j--){
            v[j]=max(v[j],best);
            best=max(best,v[j]);
        }
        /*for(int j=0;j<v.size();j++){
            cout<<v[j]<<" ";
        }
       cout<<endl;*/
       best=0;
       for(int j=i;j>=0;j--){
            b[j][i]=max(b[j][i],(i-j+1)*v[i-j+1]);
            b[j][i]=max(b[j][i],best);
            best=max(b[j][i],best);
            if(i>j)
                b[j][i]=max(b[j][i],b[j][i-1 ]);
       }
}
int q;
fastInput(q);
while(q--){
    int x,y;
    fastInput(x); fastInput(y);
    writeInt(b[x-1][y-1]);
    printf("\n");
}
return 0;
}
