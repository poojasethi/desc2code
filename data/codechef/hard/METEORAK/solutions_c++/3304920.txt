#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
#ifndef ONLINE_JUDGE
inline int getchar_unlocked(){return getchar();}
#endif
inline int scnf(){int n = 0, c = getchar_unlocked(),t=0;while(c < '0' || c > '9'){if(c==45)t=1;c = getchar_unlocked();}while(c >= '0' && c <= '9')n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();if(t==0)return n;else return -n;}

int dp[1005][1005],l[1005],r[1005],area[1005][1005];
int main()
{
	int n,m,k,q,x,y;
	m=scnf();n=scnf();k=scnf();
	while(k--)
	{
		x=scnf();y=scnf();
		dp[x][y]=1;
	}
	for(int i=1;i<=m;i++)for(int j=1;j<=n;j++)
	if(dp[i][j]==0)dp[i][j]=dp[i-1][j]+1;
	else dp[i][j]=0;
	
	for(int i=1;i<=m;i++)
	{
		for(int j=0;j<=n;j++)l[j]=r[j]=j;
		
		for(int j=n;j>0;j--)
		{
			while(r[j]+1<=n&&dp[i][r[j]+1]>=dp[i][j])r[j]=r[r[j]+1];
		}
		
		for(int j=1;j<=n;j++)
		{
			while(l[j]-1>0&&dp[i][l[j]-1]>=dp[i][j])l[j]=l[l[j]-1];
		}
		for(int j=1;j<=n;j++)
        {
        	if(dp[i][j]!=0)area[i-dp[i][j]+1][i]=max(area[i-dp[i][j]+1][i],r[j]-l[j]+1);
        }
		int width=0;
		for(int j=1;j<=i;j++)
		{
            width=max(width,area[j][i]);
			area[j][i]=width*(i-j+1);
		}
	}
	for(int j=1;j<m;j++)
	{
		for(int i=1;i+j<=m;i++)
		{
			area[i][i+j]=max(area[i][i+j],max(area[i][i+j-1],area[i+1][i+j]));
		}
	}
	q=scnf();
	while(q--)
	{
		x=scnf();y=scnf();
		printf("%d\n", area[x][y]);
	}
}