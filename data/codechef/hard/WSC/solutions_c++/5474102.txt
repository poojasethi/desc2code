#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <utility>
#include <set>
#include <map>
#include <iostream>
#include <queue>
#include <climits>

using namespace std;

typedef long long LL;

#define PB push_back
#define FRO freopen("in.txt","r",stdin);

#define CLR(arr) memset( (arr),0,sizeof(arr) );
#define NEG(arr) memset( (arr),-1,sizeof(arr) );

#define X first
#define Y second

#define MP make_pair

#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)


typedef pair<int,int> pint;
typedef map<int,int> mint;


char dp[1<<10][2];
int n,m;

pint eat[22];

char func( int state,int side ){

    char &ret = dp[state][side];
    if ( ret != -1 )return ret;

    for (int i=0;i<m;++i){
        if ( bool(state & (1<<eat[i].X)) == bool(state & (1<<eat[i].Y)) && bool(side) != bool(state & (1<<eat[i].Y)) ){
            return ret = 0;
        }
    }

    if ( state == (1<<n)-1 && side == 1 ){
        return ret = 1;
    }

    ret = 0;

    ret = func(state,side^1);

    for (int i=0;i<n && !ret ;++i){
        if ( bool( state & (1<<i) ) == side ){
            ret = func( state ^ (1<<i) , side^1 );
        }
    }

    return ret;
}

void print( int state,int side ){



    if ( state == (1<<n)-1 && side == 1 ){
        cout<<state<<endl;
        cout<<"sah "<<n<<endl;
        return ;
    }

    if ( func(state,side^1) ){
        printf("switch side\n");
        print( state,side^1 );
        return ;
    }

    for (int i=0;i<n  ;++i){
        if ( bool( state & (1<<i) ) == side ){
            if ( func( state ^ (1<<i) , side^1 ) ){
                printf("take %d\n",i);
                print( state ^ (1<<i) , side^1 );
                return ;
            }
        }
    }

    exit(5);
}

int main(){



    int kase;
    scanf("%d",&kase);

    while ( kase-- ){
        scanf("%d %d",&n,&m);
        for (int i=0;i<m;++i){
            scanf("%d %d",&eat[i].X,&eat[i].Y);
            eat[i].X--;
            eat[i].Y--;
        }

        for (int i=0;i<(1<<n);++i){
            dp[i][0]= dp[i][1] = -1;
        }
        if ( func(0,0) ){
            //print(0,0);
            printf("YES\n");
        }else{
            printf("NO\n");
        }
    }


    return 0;
}
