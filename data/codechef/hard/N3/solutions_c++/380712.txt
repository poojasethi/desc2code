#include<iostream>
#include<cstdio>
#include<cstring>
#include<cassert>
#include<cctype>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<numeric>
#include<utility>
#include<sstream>
using namespace std;
#define all(a) a.begin(),a.end()
#define pb push_back
#define eps (1e-9)
#define inf (1<<29)
#define SET(a) memset(a,-1,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))

int dp[155][505],pi[305],len,prev[155][505];
void prefix(char P[]){
  int q,k;
  pi[1] = k = 0;
  for(q = 2;q<=len;q++){
    while(k && P[k]!=P[q-1] ) k = pi[k];
    if(P[k] == P[q-1]) k ++;
    pi[q] = k;
  }
}
int kmp(char T[],char P[]){
  int q,i;
  q = 0;
  for(i = 0;i<len;i++){
    while(q && P[q]!=T[i] ) q = pi[q];
    if(P[q] == T[i] ) q ++;
    //q = pi[q];
  }
  return q;
}

int mat[155][155],n;
int solve(int i,int k){
  if(k == 0) return 0;
  int &ret = dp[i][k];
  if(ret!=-1) return ret;
  int r,j;
  ret = inf;
  for(j = 0;j<n;j++){
    r = solve(j,k - 1) + mat[i][j];
    if(ret> r){
      ret = r;
      prev[i][k] = j;
    }
  }
  return ret;
}
char s[155][305];
void print(int i,int k){
  if(k == 0){
    puts("");
    return;
  }
  int j = prev[i][k];
  printf("%s",s[j]+len - mat[i][j]);
  print(j,k-1);
}
void print2(int i,int k,int x){
  if(k == 0){
    return;
  }
  int j = prev[i][k];
  printf("%d %d\n",j,x+mat[i][j]);
  print2(j,k-1,x+mat[i][j]);
}
int main(){
  int t,i,j,ret,r,K;
  scanf("%d",&t);
  while(t--){
    scanf("%d %d %d",&n,&len,&K);
    for(i = 0;i<n;i++) scanf("%s",s[i]);
    for(i = 0;i<n;i++){
      prefix(s[i]);
   /*   for(j = 1;j<=len;j++)
	cout<<pi[j]<<" ";
     */ 
      mat[i][i] = len - pi[len];
      for(j = 0;j<n;j++){
	if(i == j) continue;
	mat[j][i] = len - kmp(s[j],s[i]);
      }
    }
  /*  for(i = 0;i<n;i++){
      for(j = 0;j<n;j++){
	cout<<mat[i][j]<<" ";
      }
      cout<<endl;
  }*/
    SET(dp);
    ret = inf;
    for(i = 0;i<n;i++){
      r = solve(i,K-1)+len;
      if(ret>r){
	ret = r;
	j = i;
      }
    }
    
    printf("%d\n%s",ret,s[j]);
    print(j,K-1);
    printf("%d %d\n",j,0);
    print2(j,K-1,0);
    puts("");
  }
  return 0;
}