#include <iostream>
#include <vector>
#include <algorithm>
#include <utility>
#include <climits>
#include <cstdio>
#define N 150
#define K 500

using namespace std;

char arr[N][310];
char res[N*310];
int lps[N][N];
int n,k,l;
int dp[K][N];
int ans[K][N];
int prev[K][N];
void calclps()
{
    for(int i=0;i<n;++i)
    {
        for(int j=0;j<n;++j)
        {
            int len=1;
            for(len=1;len<l;++len)
            {
                bool flag=true;
                for(int len1=0;len1<l-len;++len1)
                {
                    if(arr[i][len1]!=arr[j][len+len1])
                    {
                        flag=false;
                        break;
                    }
                }
                if(flag){ lps[i][j]=l-len;
                    break;
                }
            }
            if(len==l) lps[i][j]=0;
        }
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n>>l>>k;
        for(int i=0;i<n;++i)
        {
            cin>>arr[i];
        }
        calclps();
        /*for(int i=0;i<n;++i)
        {
            for(int j=0;j<n;++j)
            {
                cout<<lps[i][j]<<" ";
            }
            cout<<endl;
        }*/
        for(int i=0;i<n;++i)
        {
            dp[0][i]=l;
        }
        for(int z=1;z<k;++z)
        {
            for(int i=0;i<n;++i)
            {
                int ind=INT_MAX,p=-1;
                for(int j=0;j<n;++j)
                {
                    if(dp[z-1][j]+l-lps[i][j]<ind)
                    {
                        ind=dp[z-1][j]+l-lps[i][j];
                        p=j;
                    }
                }
                dp[z][i]=dp[z-1][p]+l-lps[i][p];
                ans[z][i]=dp[z][i]-l;
                prev[z][i]=p;
            }
        }
        int p=-1,anslen=INT_MAX;
        for(int i=0;i<n;++i)
        {
            if(dp[k-1][i]<anslen)
            {
                anslen=dp[k-1][i];
                p=i;
            }
        }
        cout<<anslen<<endl;
        int tp=p;
        for(int z=k-1;z>=0;--z)
        {
            for(int i=0;i<l;++i)
            {
                res[i+ans[z][tp]]=arr[tp][i];
            }
            tp=prev[z][tp];
        }
        res[ans[k-1][p]+l]='\0';
        printf("%s\n",res);
        for(int z=k-1;z>=0;--z)
        {
            cout<<p<<" "<<ans[z][p]<<endl;
            p=prev[z][p];
        }
        /*for(int z=0;z<k;++z)
        {
            for(int i=0;i<n;++i)
            {
                cout<<str[z][i]<<" ";
            }
            cout<<endl;
        }*/

    }
    return 0;
}
