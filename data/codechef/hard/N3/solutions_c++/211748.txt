#include <iostream>
#include <algorithm>

const int MAXN = 160;
const int MAXL = 310;
const int MAXK = 510;

char str[MAXN][MAXL+1];
int olap[MAXN][MAXN], bf[MAXK][MAXN], prev[MAXK][MAXN], final[MAXK];

using namespace std;

int overlap(char *a, char *b, int l) {
  for (int k = 1; k <= l; ++k) { 
    bool match = true;
    for (int i = k; i < l && match; ++i)
      match &= (a[i] == b[i-k]);
    if (match) return l-k;
  }
}

int main() {
  int t, n, l, k;
  cin >> t;

  while (t--) {
    cin >> n >> l >> k;
    for (int i = 0; i < n; ++i) cin >> str[i];
    for (int i = 0; i < n; ++i)
      for (int j = 0; j < n; ++j)
	olap[i][j] = overlap(str[i], str[j], l);
    
    for (int i = 0; i < n; ++i)
      bf[0][i] = l;

    for (int i = 1; i < k; ++i) {
      for (int j = 0; j < n; ++j) {
	bf[i][j] = 1000000000;
	for (int kk = 0; kk < n; ++kk) {
	  int nl = bf[i-1][kk] + l - olap[kk][j];
	  if (nl < bf[i][j]) {
	    bf[i][j] = nl;
	    prev[i][j] = kk;
	  }
	}
      }
    }

    int best = 0;
    for (int i = 1; i < n; ++i)
      if (bf[k-1][i] < bf[k-1][best])
	best = i;

    for (int i = k-1; i >= 0; --i) {
      final[i] = best;
      best = prev[i][best];
    }

    int length = k*l;
    for (int i = 0; i+1 < k; ++i)
      length -= olap[final[i]][final[i+1]];
    cout << length << endl;

    cout << str[final[0]];
    for (int i = 1; i < k; ++i)
      cout << (char*)(str[final[i]]+olap[final[i-1]][final[i]]);
    cout << endl;

    int at = 0;
    for (int i = 0; i+1 < k; ++i) {
      cout << final[i] << ' ' << at << endl;
      at += l-olap[final[i]][final[i+1]];
    }
    cout << final[k-1] << ' ' << at << endl << endl;
  }
}
