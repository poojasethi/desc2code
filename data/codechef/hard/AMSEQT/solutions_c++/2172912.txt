//program AMSEQT

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

int Get()
{
  char c;
  while(c=getchar(),(c<'0'||c>'9')&&(c!='-'));
  bool Flag=(c=='-');
  if(Flag)
    c=getchar();
  int X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar();
    }
  return Flag?-X:X;
}

void Output(int X)
{
  if(X<0)
    {
      putchar('-');
      X=-X;
    }
  int Len=0,Data[10];
  while(X)
    {
      Data[Len++]=X%10;
      X/=10;
    }
  if(!Len)
    Data[Len++]=0;
  while(Len--)
    putchar(Data[Len]+48);
  putchar('\n');
}

const int Mod=1000000009;

int Sum[262145];

void Add(int X,int Y,int N)
{
  X++;
  while(X<=N)
    {
      Sum[X]+=Y;
      if(Sum[X]>=Mod)
        Sum[X]-=Mod;
      X+=X&-X;
    }
}

int GetSum(int X)
{
  X++;
  int Ans=0;
  while(X)
    {
      Ans+=Sum[X];
      if(Ans>=Mod)
        Ans-=Mod;
      X^=X&-X;
    }
  return Ans;
}

int main()
{
  int Test=Get();
  while(Test--)
    {
      int N=Get(),M=Get(),Step=1<<(M-1),Full=(1<<M)-1;
      memset(Sum,0,sizeof(Sum));
      Add(0,1,1<<M);
      for(int i=0,S=0;i<N;i++)
        {
          S=(S+Get())&Full;
          int X;
          if(S>=Step)
            X=GetSum(S)-GetSum(S-Step);
          else
            X=GetSum(S)+GetSum(Full)-GetSum(S+Step);
          if(X>=Mod)
            X-=Mod;
          if(X<0)
            X+=Mod;
          Add(S,X,1<<M);
          if(i+1==N)
            Output(X);
        }
    }
  return 0;
}
