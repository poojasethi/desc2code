#include <iostream>
#include <fstream>
#include <sstream>
#include <stack>
#include <queue>
#include <map>
#include <vector>
#include <string.h>
#include <list>
#include <algorithm>
#include <cmath>
#include <set>
#include <assert.h>

#define for0(i,n) for (int i=0; i<n; i++)
#define forr(i,n) for (int i=n-1; i>=0; i--)
#define fori(i,a,b) for (int i=a; i<=b; i++)
#define iter(c,x) for(x::iterator it=c.begin(); it!=c.end(); it++)
#define vec(x) vector< x >
#define pb push_back
#define ms(a,z) memset(a,z,sizeof(a))
#define mp make_pair
#define gl(x) getline(cin,x,'\n')
#define nl cout<<"\n";
#define pr(x) cout<<(x)<<" ";
#define prl(x) cout<<#x " = "<<x<<endl;
#define prp(x) cout<<"("<<(x).first<<" "<<(x).second<<") ";
#define printv(v) {for(int _=0; _<v.size(); _++) cout<<v[_]<<" "; cout<<"\n";}
#define printa(a,s) {for (int _=0; _<s; _++) cout<<a[_]<<" "; cout<<"\n";}
#define print2D(a,m,n) {for (int _=0; _<m; _++) {for (int __=0; __<n; __++) cout<<a[_][__]<<" "; cout<<"\n";} cout<<"\n";}
#define debug cout<<"ok at line "<<__LINE__<<endl;
#define X first
#define Y second
#define sqr(x) 1LL*(x)*(x)
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define all(a) a.begin(),a.end()

using namespace std;
typedef long long ll;

const int INF = 999999999;
const double EPSILON = 0.00000001;
const long long MOD = 1000000009;

ll a[200005];
ll bit[262150];
int maxn, offset;

void update(int i,  ll x)
{
    i++;
    while (i <= maxn){
        bit[i] = (bit[i]+x) % MOD;
        i += i & -i;
    }
}

ll query(int i)
{
    i++;
    ll ret = 0;
    while (i > 0){
        ret = (ret+bit[i]) % MOD;
        i -= i & -i;
    }
    return ret;
}

void update_range(int l, int r, ll x)
{
    assert(l <= r);
    update(l,x);
    update(r+1,-x);
}

void print()
{
    for (int j=0; j<maxn; j++){
        cout<<query((j+offset)%maxn)<<" ";
    }
    cout<<endl;
}

int main()
{
    //freopen("P2.txt","r",stdin);
    //freopen("P2_out.txt","w",stdout);
    int cases;
    cin >> cases;
    for0(casen,cases){
        int n,m;
        cin >> n >> m;
        for0(i,n){
            scanf("%lld",&a[i]);
        }
        maxn = 1<<m;

        for (int i=1; i<maxn; i++){
            if (i - (i & -i) == 0)
                bit[i] = 1;
            else if (i - (i & -i) == (1<<(m-1)))
                bit[i] = -1;
            else
                bit[i] = 0;
        }
        bit[maxn] = 0;
        //printa(bit,maxn+1)
        //print();

        offset = 0;
        for (int i=n-1; i>=0; i--){
            //prl(i)
            //prl(offset)
            ll increment = query((a[i]+offset) % maxn);
            //prl(increment)
            int l = a[i] + offset, r = a[i] + offset + (maxn>>1) - 1;
            //pr(l) pr(r) nl
            if (r >= maxn and l >= maxn){
                r -= maxn;
                l -= maxn;
            }
            if (r >= maxn){
                update_range(0,r%maxn,increment);
                update_range(l,maxn-1,increment);
            }
            else{
                update_range(l,r,increment);
            }
            offset = (offset + a[i]) % maxn;

            //print();
            //nl
        }

        //prl(offset)
        ll ans = query(offset);
        ans = (ans * 500000005) % MOD;
        ans = (ans + MOD) % MOD;
        printf("%lld\n",ans);
    }
    return 0;
}
