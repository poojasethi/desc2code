#include <cstdio>
#include <algorithm>
using namespace std;

const int Maxm = 18;
const int mod = 1000000009;

int t;
int n, m;
int BIT[(1 << Maxm) + 1];
int cur;
int res;

void Insert(int x, int val)
{
	for (int i = x; i <= 1 << m; i += i & -i)
		BIT[i] = (BIT[i] + val) % mod;
}

int Get(int x)
{
	int res = 0;
	for (int i = x; i > 0; i -= i & -i)
		res = (res + BIT[i]) % mod;
	return res;
}

int Get(int a, int b)
{
	if (a <= b) return (Get(b) - Get(a) + mod) % mod;
	return ((Get(1 << m) - Get(a) + mod) % mod + Get(b)) % mod;
}

int main()
{
	scanf("%d", &t);
	while (t--) {
		scanf("%d %d", &n, &m);
		fill(BIT, BIT + (1 << m) + 1, 0); cur = 0; Insert(1, 1);
		for (int i = 0; i < n; i++) {
			int a; scanf("%d", &a);
			cur = (cur + a) % (1 << m);
			if (i == n - 1) res = Get((1 << m) - cur, ((1 << m) - cur + (1 << m - 1)) % (1 << m));
			else Insert(((1 << m) - cur) % (1 << m) + 1, Get((1 << m) - cur, ((1 << m) - cur + (1 << m - 1)) % (1 << m)));
		}
		printf("%d\n", res);
	}
	return 0;
}