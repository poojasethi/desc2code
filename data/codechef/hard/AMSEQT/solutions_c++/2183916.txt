#define ll long long
#define vi vector <int>
#define pii pair <int,int>
#define FOR(i, a, b) for (i = (a); i <= (b); i++)
#define REP(i, a) for (i = 0; i < (a); i++)
#define ALL(v) (v).begin(), (v).end()
#define SET(a, x) memset((a), (x), sizeof(a))
#define SZ(a) ((int)(a).size())
#define CL(a) ((a).clear())
#define SORT(x) sort(ALL(x))
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))

#define filer() freopen("in.txt","r",stdin)
#define filew() freopen("out.txt","w",stdout)

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <queue>
#include <cassert>


using namespace std;


ll mod=1000000009;

ll tree[ 262144 + 7 ],a[ 200005 ];

ll MaxVal=(1<<18)+3;

ll read(ll idx){
    idx++;
	ll sum = 0;
	while (idx > 0){
		sum += tree[idx];
		sum%=mod;
		idx -= (idx & -idx);
	}
	return sum;
}

void update(ll idx ,ll val){
    idx++;
	while (idx <= MaxVal){
		tree[idx] += val;
		tree[idx]%=mod;
		idx += (idx & -idx);
	}
}




int main()
{

	//filer();


    int T,i,j,k,ks,n,m,hi,lo;
    ll res;


    scanf("%d",&T);

    FOR(ks,1,T)
    {


        scanf("%d%d",&n,&m);

        FOR(i,1,n)scanf("%lld",&a[i]);

        SET(tree,0);


		a[n+1]=0;


        update( 0,1 );


        for( i=n;i>=1;i-- )
        {

            a[ i ]+=a[ i+1 ];
            a[ i ]%=(1<<m);

			hi=a[ i ];
			lo=a[ i ]-( (1<<( m-1 ))-1 );

            if( lo<0 )
            {

                lo+=( (1<<m) );
                res=read( hi )-read( lo-1 )+read( (1<<m)-1 );
            }

            else res=read( hi ) - read(lo-1);

            res=(res+mod)%mod;

            update( a[i],res );

        }

        printf("%lld\n",res%mod);

    }



    return 0;
}

