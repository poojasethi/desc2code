#include<iostream>
using namespace std;
#include<cstring>
#include<stack>
#include<vector>
#include<queue>
#include<set>
stack<int> S;
char s[1600];
int outDegree[1510]={0};
int arr[1510][1510],SS[1510][1510]={0},sol;
int used[1600]={0},n;
vector<int> Solution(0);
typedef pair<int,int> pi;
void TopologicalSort()
{
    for (int i = 0; i < n; i++) {

        int v = -1;
        for (int j = n - 1; j >= 0; j--) {
            if (!used[j] && outDegree[j] == 0) {
                v = j;
                break;
            }
        }
        used[v] = true;
        for (int j = 0; j < n; j++) {
            if (j != v && !arr[j][v] && !used[j]) {
                {sol++;SS[j][v] = true;}
            }
        }
        for (int j = 0; j < n; j++) {
            if (arr[j][v]) outDegree[j]--;
        }
    }


}
#include<cstdio>
int main()
{
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%s",s);
        int j=0,c=0;
        while(s[j]!='\0')
        {
            arr[i][j]=s[j]-'0';
            if(arr[i][j])
                c++;
            j++;
        }
        outDegree[i]+=c;
    }
        TopologicalSort();
    cout<<sol<<endl;
    for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        if(SS[i][j])
            cout<<i+1<<" "<<j+1<<"\n";
    }

    return 0;
}
