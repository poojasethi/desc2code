/*
 * Author:  Eyelids
 * Created Time:  2014/10/16 22:46:17
 * File Name: BB.cpp
 */
#include<iostream>
#include<sstream>
#include<fstream>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cctype>
#include<cmath>
#include<ctime>
using namespace std;
const double eps(1e-8);
typedef long long lint;
#define clr(x) memset( x , 0 , sizeof(x) )
#define sz(v) ((int)(v).size())
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repf(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i >= (b); --i)
#define clrs( x , y ) memset( x , y , sizeof(x) )
int n;
priority_queue <int> q;
int deg[1510], ban[1510];
char s[1510][1510];
int ans[1510][1510];

int main(){
    scanf( "%d", &n );
    for ( int i = 1; i <= n; i ++ )
        scanf( "%s", s[i] + 1 );

    memset( deg, 0, sizeof(deg) );
    int sum = 0;
    for ( int i = 1; i <= n; i ++ )
        for ( int j = 1; j <= n; j ++ )
            if ( s[i][j] == '1' ) {
                deg[i] ++;
                sum ++;
            }
    for ( int i = 1; i <= n; i ++ )
        if ( !deg[i] ) q.push( i );
 
    cout <<n * ( n - 1 ) / 2 - sum<<endl;
    memset( ban, 0, sizeof(ban) );
    while ( !q.empty() ) {
        int u = q.top();
        q.pop();
        ban[u] = true;

        for ( int i = 1; i <= n; i ++ ) 
            if ( !ban[i] && s[i][u] == '0' ) ans[i][u] = true;
        for ( int i = 1; i <= n; i ++ )
            if ( s[i][u] == '1' ) {
                deg[i] --;
                if ( !deg[i] ) q.push( i );
            }
    }
    for ( int i = 1; i <= n; i ++ )
        for ( int j = 1; j <= n; j ++ )
            if ( ans[i][j] )
                printf( "%d %d\n", i, j );
    
    return 0;
}











