#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
#define AB(a) ((a)<(0) ? (-a) : (a))
#define EQ(a,b) ( (fabs(a-b)<EPS) ? (1) : (0))





typedef long long LL;
//typedef __int64 LL;




char in[2010][2010];
vector<LL> adj[2010];

int m,n;

int vis[2010];

vector<int> order;

void dfs(int u)
{
    int i,v;
    vis[u]=1;
    for(v=0;v<n;v++)
    {
        if(!vis[v] && in[u][v]=='1' ) dfs(v);
    }
    order.push_back(u);
}


char ans[2010][2010];



LL tp[100];
void toggle(int u,int v)
{
    adj[u][v/62]|=tp[v%62];
}

int is(int u,int v)
{

	//printf("%I64d\n",adj[u][v/62]);
	//printf("%I64d\n",tp[v%62]);

	/*
	cout<<adj[u][v/62]<<endl;
	cout<<tp[v%62]endl;
    */

	if(adj[u][v/62]&tp[v%62]) return 1;
    else return 0;
}







void OR(vector<LL> &a,vector<LL> &b)
{
    int i;
    for(i=0;i<m;i++)
    {
        a[i]|=b[i];
    }
}



int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,u,v;

    tp[0]=1;
    for(i=1;i<=70;i++)
    {
        tp[i]=tp[i-1]+tp[i-1];
    }


    scanf("%d",&n);

    for(i=0;i<n;i++)
    {
        scanf("%s",in[i]);
        in[i][i]='1';
    }



    for(i=0;i<n;i++)
    for(j=0;j<n;j++)
    ans[i][j]='0';



    memset(vis,0,sizeof(vis));
    order.clear();
    for(i=0;i<n;i++)
    {
        if(!vis[i]) dfs(i);
    }





    m=((n-1)/62)+1;

    for(i=0;i<n;i++) adj[i].resize(m,0);


    for(i=0;i<n;i++)
    {
        u=order[i];
        for(j=0;j<n;j++)
        {
            if(in[u][j]=='1')
            {
                OR(adj[u],adj[j]);
                toggle(u,j);
            }
        }

        //cout<<u<<" "<<adj[u][0]<<endl;
    }

    //asdf
    int ans_sum=0;


    for(i=0;i<n;i++)
    {
        vector<int> v1,v2;
        for(j=0;j<n;j++)
        {
            if(!is(j,i) && in[i][j]=='0')
            {
                ans[i][j]='1';
                v2.push_back(j);
            }
            else if(is(j,i)) v1.push_back(j);
        }


        ans_sum+=v2.size();


        vector< LL  >  Temp(m,0);
        for(j=0;j<v2.size();j++)
        {
            ans[i][  v2[j] ]='1';


           // cout<<adj[ v2[j] ][0];
           // asdf

            OR(Temp, adj[ v2[j] ]  );
        }



        //cout<<Temp[0];
        //asdf


        for(j=0;j<v1.size();j++)
        {
            OR(adj[ v1[j]] ,Temp   );
        }
    }

    printf("%d\n",ans_sum);

    for(i=0;i<n;i++)
    for(j=0;j<n;j++)
    if(ans[i][j]=='1')
    printf("%d %d\n",i+1,j+1);







    return 0;
}
