#include <cstdio>
#include <queue>
#include <vector>
#include <algorithm>
#define REP(i,n) for (int i=1;i<=n;++i)
#define FOR(i,n) for (__typeof(n.begin())i=n.begin();i!=n.end();++i)
using namespace std;

const int MAXN=1515;
int n,ans;
int du[MAXN];
int a[MAXN];
bool b[MAXN][MAXN];
priority_queue<int> pq;
vector<int> v[MAXN];
vector< pair<int,int> > vv;

bool Get() {
	char c=getchar();
	while (c!='0' && c!='1') c=getchar();
	return c=='1';
}

int main() {
	scanf("%d",&n); getchar();
	REP(i,n) {
		REP(j,n) {
			b[i][j]=Get();
			if (b[i][j]) {
				v[j].push_back(i);
				++du[i];
				++ans;
			}
		}
		getchar();
	}
	REP(i,n) if (!du[i]) pq.push(i);
	a[0]=n+1;
	REP(i,n) {
		int tmp=a[--a[0]]=pq.top();
		pq.pop();
		FOR(p,v[tmp]) {
			--du[*p];
			if (!du[*p]) pq.push(*p);
		}
	}
	printf("%d\n",n*(n-1)/2-ans);
	REP(i,n)
		for (int j=i+1;j<=n;++j)
			if (!b[a[i]][a[j]])
				vv.push_back(make_pair(a[i],a[j]));
	sort(vv.begin(),vv.end());
	FOR(p,vv)
		printf("%d %d\n",p->first,p->second);
	return 0;
}
