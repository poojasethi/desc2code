#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <ctime> 
#include <cmath>
#include <string>
#include <cstring>
#include <queue>
using namespace std;

#define f first
#define s second
#define mp make_pair
#define pb push_back
#define pii pair<int, int>
#define vi vector<int>
#define all(v) (v).begin(), (v).end()
#define forit(it,v) for (__typeof(v.begin()) it = v.begin(); it != v.end(); ++it)
#define f0(a) memset(a, 0, sizeof(a))
#define ll long long
bool g[2111][2111];
int p[2111], pn;
int n;
int deg[2111];
int main() {
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) {
		scanf("\n");
		for (int j = 0; j < n; ++j) {
			char ch;
			scanf("%c", &ch);
			g[i][j] = ch - 48;
			if (g[i][j]) deg[i]++;
		}
	}

	for (int it = 0; it < n; ++it) {
		int v = -1;
		for (int i = 0; i < n; ++i)
			if (deg[i] == 0)
				v = i;

		p[it] = v;
		deg[v] = -1;

		for (int i = 0; i < n; ++i) 
			if (g[i][v]) 
				--deg[i];
	}
	reverse(p, p + n);
	vector<pii> ansv;
	for (int i = 0; i < n; ++i)
		for (int j = i + 1; j < n; ++j) if (!g[p[i]][p[j]]) {
			ansv.pb(mp(p[i], p[j]));
		}
	sort(all(ansv));
	printf("%d\n", (int)ansv.size());
	forit(it, ansv)
		printf("%d %d\n", it -> f + 1, it -> s + 1);	
	return 0;
}
