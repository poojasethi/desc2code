#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>

using namespace std;

#define PB push_back
#define MP make_pair
#define AA first
#define BB second
#define OP begin()
#define ED end()
#define SZ size()
#define SORT(x) sort(x.OP,x.ED)
#define SQ(x) ((x)*(x))
#define SSP system("pause")
#define cmin(x,y) x=min(x,y)
#define cmax(x,y) x=max(x,y)
typedef long long LL;
typedef pair<int, int> PII;
const double eps=1e-8;
const double PI=acos( -1. );
const LL MOD = 1000000007;

char s[1505][1505];
int in[1505];
int main() {
	//freopen("","r",stdin);
	//freopen("","w",stdout);
	int i,j,k,_T;
	int n;
	while(~scanf("%d",&n)){
		for(i=0;i<n;i++)scanf("%s",s[i]);
		priority_queue<int>Q;
		memset(in,0,sizeof in);
		for(i=0;i<n;i++)for(j=0;j<n;j++)
			if(s[i][j]=='1')in[i]++;
		for(i=0;i<n;i++)if(in[i]==0)Q.push(i);
		vector<int>G;
		while(!Q.empty()){
			int u=Q.top();
			Q.pop();
			G.PB(u);
			for(i=0;i<n;i++)if(s[i][u]=='1'){
				in[i]--;
				if(in[i]==0)Q.push(i);
			}
		}
		reverse(G.OP,G.ED);
		vector<PII>L;
		for(i=0;i<G.SZ;i++)
			for(j=i+1;j<G.SZ;j++)
				if(s[G[i]][G[j]]=='0')
					L.PB(MP(G[i]+1,G[j]+1));
		sort(L.OP,L.ED);
		printf("%d\n",L.SZ);
		for(i=0;i<L.SZ;i++)printf("%d %d\n",L[i].AA,L[i].BB);
	}
	return 0;
}

