#include <stdio.h>
#include <iostream>
#include <cstring>
 
#define MOD 1000000007
#define LL long long
#define ULL unsigned long long
 
 
using namespace std;
 
inline void fastRead_int(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;
 
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
 
    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }
 
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }
 
    if(neg)
    	x = -x;
}
 
 
 
 
inline void fastRead_string(char *str)
{
    register char c = 0;
    register int i = 0;
 
    while (c < 33)
        c = getchar_unlocked();
 
    while (c != '\n') {
        str[i] = c;
        c = getchar_unlocked();
        i = i + 1;
    }
 
    str[i] = '\0';
}
 
char nextEdge[1505][1505];
char newEdge[1505][1505];
int outdegree[1505]={0};
int used[1505]={0};
int main()
{
    int n;
    //cin>>n;
 
    fastRead_int(n);
 
        memset(nextEdge,'0',sizeof(nextEdge));
        memset(newEdge,'0',sizeof(newEdge));
 
        memset(outdegree,0,sizeof(outdegree));
        memset(used,0,sizeof(used));
 
    for(int i=0;i<n;++i)
    {
       // cin>>nextEdge[i];
       fastRead_string(nextEdge[i]);
 
        for(int j=0;j<n;++j)
        {
            if(nextEdge[i][j]=='1')
            {
                ++outdegree[i];
            }
        }
 
    }
 
/**
    cout<<"outdegree = ";
    for(int i=0;i<n;++i)
    {
        cout<<outdegree[i]<<" ";
    }
    cout<<endl;
 
    **/
 
    int c=0;
 
    for(int i=0;i<n;++i)
    {
 
        int v=-1;
 
        for(int j=n-1;j>=0;--j)
        {
            if(used[j]==0 && outdegree[j]==0)
            {
                 v=j;
                break;
            }
 
        }
 
       // cout<<"v = "<<v<<endl;
 
        used[v]=1;
 
        for(int j=0;j<n;++j)
        {
            if(j!=v && nextEdge[j][v]=='0' && used[j]==0)
            {
                newEdge[j][v]='1';
                ++c;
            }
 
        }
 
 
        for(int j=0;j<n;++j)
        {
            if(nextEdge[j][v]=='1')
            {
                --outdegree[j];
            }
        }
 
    }
 
   // cout<<"c = "<<c<<endl;
 
        printf("%d\n",c);
 
    for(int i=0;i<n;++i)
    {
        for(int j=0;j<n;++j)
        {
            if(newEdge[i][j]=='1')
            {
               // cout<<"i+1 = "<<i+1<<"  j+1 = "<<j+1<<endl;
 
               printf("%d %d\n",i+1,j+1);
            }
        }
    }
 
 
    return 0;
}