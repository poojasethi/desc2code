#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <cassert>
#include <cctype>
using namespace std;
typedef long long LL;

const int N = 1505;
int n , deg[N];
char g[N][N];
bool f[N];
bool res[N][N];
void work() {
    int i , j , x , y;
    scanf("%d",&n);
    for (i = 1 ; i <= n ; ++ i)
        scanf("%s" , g[i] + 1);
    int sum = 0;
    for (i = 1 ; i <= n ; ++ i)
        for (j = 1 ; j <= n ; ++ j)
            if (g[i][j] == '1')
                ++ deg[i] , ++ sum;
    priority_queue<int> S;
    for (i = 1 ; i <= n ; ++ i)
        if (!deg[i])
            S.push(i);
    printf("%d\n" , n * (n - 1) / 2 - sum);
    while (!S.empty()) {
        x = S.top() , S.pop() , f[x] = 1;
        for (y = 1 ; y <= n ; ++ y)
            if (!f[y] && g[y][x] == '0')
                res[y][x] = 1;
        for (y = 1 ; y <= n ; ++ y)
            if (g[y][x] == '1') {
                if (!-- deg[y])
                    S.push(y);
            }
    }
    for (i = 1 ; i <= n ; ++ i)
        for (j = 1 ; j <= n ; ++ j)
            if (res[i][j])
                printf("%d %d\n" , i , j);
}

int main() {
    work();
    return 0;
}

