//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n");
#define ll long long int
#define ull unsigned long long int
#define mod 1000000007
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

ll bit[32]={0};
int arr[100005];

void inline inp( int &n)
{
		int  sign=1;
		n=0;
		char ch=getchar_unlocked();
		while(ch<'0'||ch>'9'){
			if(ch=='-')
				sign=-1;
			ch=getchar_unlocked();

			}
		while(ch>='0'&&ch<='9')
		{
			n=(n<<3)+(n<<1)+(ch-'0');
			ch=getchar_unlocked();
		}
		n*=sign;
}
int main()
{
	int t,n,a;
	t=1;
	inp(t);
	while(t--)
	{
		inp(n);ll ans=0;
		for(int i=0;i<n;i++)
		{
			inp(a);
			if(i)
			arr[i]=arr[i-1]^a;
			else
			arr[i]=a;
			ans+=arr[i];
			
		}
		for(int i=0;i<n;i++)
		{

			for(int j=0;j<32;j++)
			{
					int d=arr[i]&(1<<j);
					if(i==0)
					{
						if(d)bit[j]++;
						continue;
					}
					if(d==0)
					{
						ans+=(1<<j)*bit[j];

					}
					else
					{
						ans+=(1<<j)*(i-bit[j]);
						bit[j]++;
					}
			}

		}
		pl(ans);nl;
		memset(bit,0,sizeof(bit));
	}
}