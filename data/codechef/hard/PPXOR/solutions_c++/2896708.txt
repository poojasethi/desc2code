/* Srinivas
BITS - PILANI , Hyderabad */
#include<iostream>
#include<stack>
#include<cmath>
#include<queue>
#include<cstdio>
#include<vector>
#include <cstdlib>
#include<string>
#include<algorithm>
#include<cstring>
 
using namespace std;
 
#define mod 1000000007
#define pi 3.14159265358979323846264338327950288419716939937510582
#define max 100000
#define inf 10000000000+100
 
#define loop(i,n) for(i=0;i<n;i++)
#define scan(x) scanf("%lld",&x);
#define print(x) printf("%lld\n",x);
#define SORT(a,n) sort(a,a+n);
#define revloop(i,n) for(i= n-1;i>=0;i--)
 
 
typedef long long int lli;
typedef unsigned long long int llu;
 
 
lli fastexp(lli a,lli b) {
lli result;
if(b==0) return 1;
if(b==1) return a;
result= fastexp(a,b/2)%mod;
if( b%2==0) return ( result*result ) %mod;
return (((result*result)%mod)*a)%mod ;
}  //fastexp
 
lli gcd(lli a,lli b) {
if (b == 0 )  return a;
if ( b > a)   swap ( b,a);
return gcd(b,a%b);
} //gcd
 
lli fact[max];
 
void generateFact(lli n ) {
	int i;	fact[0] = 1;
	for(i=1;i<n;i++)
		fact[i] = (fact[i-1]*i)%mod;
}//fact
 
lli ncr[100][100];
 
void generateNCR(lli n){
	int i,j;
	loop(i,n) ncr[i][0] = 1;
	for(i=1;i<n;i++)
		for(j=1;j<=i;j++)
			ncr[i][j] = ( ncr[i-1][j-1] + ncr[i-1][j] )%mod;
} //generateNCR
 
lli a[max+10],xors[max+10],twopow[40],c[max][32],temp;
 
 
int main( ) {
lli t,i,j,n,res;
cin>>t;
 
twopow[0] = 1;
 
for(i=1;i<40;i++)
	twopow[i] = 2* twopow[i-1];
 
while(t--){
	cin>>n;
	res = 0;
	loop(i,n)
		scan(a[i]);
	
	loop(i,n)
		loop(j,32)
			c[i][j] = 0;
 
	xors[0] = a[0];
	for(i=1;i<n;i++)
		xors[i] = a[i] ^ xors[i-1];
	
	loop(i,n)
		res += xors[i];	
 
 
/*for(i=0;i<n;i++)
	cout<<xors[i]<<" ";
	cout<<"end of xors"<<endl;
*/	
	temp = xors[0];
	for(i=0;i<32;i++) {
		c[0][i] = (temp&1)==1?1:0;
			temp /= 2;
	}
	
	
	for(i=1;i<n;i++)
		{
			temp = xors[i];
			for(j=0;j<32;j++)  {
			c[i][j] = (temp&1) == 1?1:0;
			c[i][j] += c[i-1][j];
			temp /=2;
		}
			
		}
	
	for(i=1;i<n;i++) { 
		temp  = xors[i]; 
		for(j=0;j<32;j++)  {
			c[i][j] = (temp&1) == 1?1:0;
			c[i][j] += c[i-1][j];
			temp /=2;
		}
	}
	
 
/*
for(i=0;i<n;i++)
	{
		for(j=0;j<32;j++)
			cout<<c[i][j]<<" ";
			cout<<endl;
	}
		cout<<"final"<<endl;
*/	
	for(i=1;i<n;i++){
		temp = xors[i];
		for(j=0;j<32;j++) { 
				if ((temp&1)==1)
					res += twopow[j]*( i - c[i-1][j]);
				else
					res += twopow[j]*c[i-1][j];
					temp /= 2;
		}
	}
 
/*	
for(i=0;i<n;i++)
	{
		for(j=0;j<32;j++)
			cout<<c[i][j]<<" ";
			cout<<endl;
	}
*/
 
cout<<res<<endl;
}
 
 
 return 0;
} 