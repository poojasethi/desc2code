/*  
    f1zz0_13
*/

#include <cstdio>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <cstdlib>
#include <cmath>
#include <ctype.h>
#include <stack>
#include <queue>
#include <limits.h>
#include <fstream>
#include <map>
#include <set>

#define rep(i, a) for(int i = 0; i < a; i++)
#define fo(i, a, b) for(int i = a; i < b; i++)
#define defo(i, a, b) for(int i = a; i >= b; i--)
#define ll long long
#define pb  push_back
#define mp  make_pair
#define sz(a)   ((int)(a.size()))
#define x first
#define y second
#define SET(x, a) memset(x, a, sizeof(x));

using namespace std;

typedef vector<int> vi;
typedef pair<int, int> pii;

const int MAX = 1e9;

inline int countbits(int n) {
	int c = 0;
	while (n) {
		c++;
		n = n >> 1;
	}
	return c;
}

int main() {
 	int t, n;
 	cin >> t;
 	while (t--) {
 		cin >> n;
 		vi a(n, 0);
 		vi cum(n+1, 0);
 		rep (i, n)
 			cin >> a[i];
 		cum[0] = 0;
 		fo (i, 1, n+1)
 			cum[i] = cum[i-1] ^ a[i-1];
 		int m = countbits(MAX);

 		vi c(m, 0);
 		
 		ll sum = 0, subsum;
 		int foo, pos;
 		
 		rep (i, n+1) {
 			foo = cum[i];
 			pos = 0;
 			subsum = 0;
 			int temp = m;
 			while (temp--) {
 				if (foo & 1) {
 					subsum += 1ll*(i - c[pos])*(1<<pos);
 					c[pos]++;
 				}
 				else
 					subsum += 1ll*c[pos]*(1<<pos);
 				foo = foo >> 1;
 				pos++;
 			}
 			// printf("subsum after iter %d = %lld\n", i, subsum);
 			sum += subsum;
 		}
 		printf("%lld\n", sum);
 	}
	return 0;
}