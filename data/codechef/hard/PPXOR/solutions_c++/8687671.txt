//---------------------------JUGNU: LET YOUR LIGHT SHINE---------------------------//
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define mk make_pair
#define ln length
#define vt(a) vector <ll> a
#define st(a) set <ll> a
#define sti(a) set <ll>::iterator a
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define frr(i,a,b) for(i=a;i>=b;i--)
#define sc(a) scanf("%d",&a)
#define sm(a,b) scanf("%d%d", &a, &b)
#define pr(a) printf("%lld\n", a)
#define pm(a,b) printf("%lld %lld\n", a, b)
#define cn(a) cin >> a
#define ct(a) cout << a << endl
#define isset(x,i) ((x>>i)&1)
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
using namespace std;
int nums[100005], cumulative[100005];
int main()
{
	int i, j, t, n, m, k, l, r, mini,cnt, maxi, temp, flag, cnt1, cnt0;
	ll result = 0LL;
	sc(t);
	while(t--)
	{
		result = 0;
		sc(n);
		fr(i, 0, n)
		{
			sc(nums[i]);
			if(i==0)
				cumulative[i] = nums[i];
			else
				cumulative[i] = cumulative[i-1]^nums[i];
		}
		fr(i, 0, 31)
		{
			cnt1 = 0;
			cnt0 = 0;
			fr(j, 0, n)
			{
				if(isset(cumulative[j], i))
					cnt1++;
				else
					cnt0++;
			}
			result = result + (ll)cnt1*(cnt0+1)*(1<<i);
		}
		pr(result);
	}
return 0;
}
