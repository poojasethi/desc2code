#include<iostream>
#include<cstdio>
#include<vector>
#include<queue>
using namespace std;

vector<int> kminimum(vector<int> &v, int k){
	deque<pair<int,int> > pre;
	vector<int> ret;
	for(int i=0;i<k-1;i++){
		while(!pre.empty() && pre.back().second >= v[i])
			pre.pop_back();
		pre.push_back(make_pair(i,v[i]));
	}
	for(int i=0;i+k-1<v.size();i++){
		pair<int, int> fr = pre.front();
		if(fr.first<i)pre.pop_front();
		while(!pre.empty() && pre.back().second >= v[i+k-1])
			pre.pop_back();
		pre.push_back(make_pair(i+k-1,v[i+k-1]));
		fr = pre.front();
		ret.push_back(fr.second);
	}
	return ret;
}

int n, k;
vector<vector<int > > mat, temp1, temp2;
int main(){
	cin>>n>>k;
	mat.resize(n);for(int i=0;i<n;i++)mat[i].resize(n);
	temp1.resize(n);
	temp2.resize(n-k+1);
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++)
			scanf("%d",&mat[i][j]);
	}
	for(int i=0;i<n;i++)
		temp1[i]=kminimum(mat[i],k);
//	for(int i=0;i<n;i++){
//		for(int j=0;j<n-k+1;j++)cout<<temp1[i][j]<<' ';cout<<endl;
//	}
	for(int i=0;i<n-k+1;i++){
		vector<int> temp;
		for(int j=0;j<n;j++)temp.push_back(temp1[j][i]);
		temp2[i] = kminimum(temp, k);
	}
	for(int i=0;i<n-k+1;i++){
		for(int j=0;j<n-k+1;j++)
			{
				if(j)printf(" ");
				printf("%d",temp2[j][i]);
			}printf("\n");
	}
}
