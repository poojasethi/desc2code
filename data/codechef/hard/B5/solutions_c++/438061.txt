#include <cstdio>
#include <deque>
#include <algorithm>
using namespace std;

const int Maxn = 1000;

int n, k, bugs[Maxn][Maxn], mr[Maxn][Maxn], mc[Maxn][Maxn];

int main()
{
    scanf("%d %d", &n, &k);
    
    for (int i = 0; i < n; i++)
       for (int j = 0; j < n; j++) scanf("%d", &bugs[i][j]);
       
    for (int i = 0; i < n; i++) {
        deque <pair <int, int> > D;
        D.push_back(make_pair(0, bugs[i][0]));
        for (int j = 1; j < n; j++) {
            int lst = j - k + 1;
            if (D.front().first < lst) D.pop_front();
            while (!D.empty() && D.back().second > bugs[i][j]) D.pop_back();
            D.push_back(make_pair(j, bugs[i][j]));
            if (lst >= 0) mr[i][lst] = D.front().second;
        }
    }
    
    int lst = n - k + 1;
    for (int j = 0; j < lst; j++) {
        deque <pair <int, int> > D;
        D.push_back(make_pair(0, mr[0][j]));
        for (int i = 1; i < n; i++) {
            int lst = i - k + 1;
            if (D.front().first < lst) D.pop_front();
            while (!D.empty() && D.back().second > mr[i][j]) D.pop_back();
            D.push_back(make_pair(i, mr[i][j]));
            if (lst >= 0) mc[lst][j] = D.front().second;
        }
    }
    
    for (int i = 0; i < lst; i++)
       for (int j = 0; j < lst; j++) {
           printf("%d", mc[i][j]);
           if (j == lst-1) printf("\n");
           else printf(" ");
       }
    
    return 0;
}
