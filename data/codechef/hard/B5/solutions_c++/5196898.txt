#include<cstdio>
 
using namespace std;
 
int n,k;
 
int a[1001][1001];
int min[1001][1001];
int supermin[1001][1001];
 
int stack[1001];
int index[1001];
 
int top = 0;
int base = 0;
 
void push(int a, int in)
{
  stack[top] = a;
  index[top] = in;
  top++;
}
 
int pop()
{
  top--;
  return stack[top];
}
 
int topVal()
{
  return stack[top-1];
}
 
int first()
{
  return stack[base];
}
 
int getIn()
{
  return index[base];
}
 
void rem()
{
  base++;
}
 
 
int main()
{
  scanf("%d %d",&n,&k);
  for(int i=0;i<n;i++)
  {
    for(int j=0;j<n;j++)
      scanf("%d",&a[i][j]);
  }
  for(int i=0;i<n;i++)
  {
    top = 0;
    base = 0;
    for(int j=0;j<n;j++)
    {
      if(j == 0)
      {
        push(a[i][j],j);
        continue;
      }
      int last = j-k+1;
      if(getIn() < last)
        rem();
      int val = a[i][j];
      while(base != top && topVal() > val)
      {
        pop();
      }
      push(val,j);
      if(last >= 0)
        min[i][last] = first();
    }
  }
  int limit = n-k+1;
  for(int i=0;i<limit;i++)
  {
    top = 0;
    base = 0;
    for(int j=0;j<n;j++)
    {
      if (j == 0)
      {
        push(min[j][i],j);
        continue;
      }
      int last = j-k+1;
      if (getIn() < last)
        rem();
      int val = min[j][i];
      while(base != top && topVal() > val)
        pop();
      push(val,j);
      if (last >= 0)
        supermin[last][i] = first();
    }
  }
  for (int i=0;i<limit;i++)
  {
    for(int j=0;j<limit;j++)
    {
      printf("%d",supermin[i][j]);
      if(j == limit-1)
        printf("\n");
      else
        printf(" ");
    }
  }
  return 0;
}