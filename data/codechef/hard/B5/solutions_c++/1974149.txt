#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
#include<unistd.h>
#include<stdint.h>
using namespace std;
const int N = 1000;
#define ll long long
#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
int a[N][N];
#define BUFSIZE (10000)
char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;

#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})

void init_input(){
	if (input_eof) return;
	int existing = BUFSIZE - (ioend - inputbuffer);
	memcpy(inputbuffer, ioend, existing);
	int wanted = ioend - inputbuffer;
	int count=fread(inputbuffer + existing, 1, wanted, stdin);
	if (count < wanted)
		input_eof = 1;
	ioend = inputbuffer + BUFSIZE - (wanted - count);
	while (*--ioend > ' ');
	ioend++;
	ioptr=inputbuffer;
}

inline void non_whitespace(){
	for(;;){
		if(ioptr>=ioend)
			init_input();
		if(*ioptr>' ')
			return;
		ioptr++;
	}
}

inline int getint(){
	non_whitespace();
	int neg=0;
	if(*ioptr=='-'){
		ioptr++;
		neg=1;
	}
	int n=0;
	while(*ioptr>' ')
		n=(n<<3)+(n<<1)+*ioptr++-'0';
	ioptr++;
	if(neg)
		n=-n;
	return n;
}

int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,m,l,k,x,y,n,len,space;
	while(~scanf("%d%d",&n,&l))
	{
	 //inp(j);
	 for(i=0;i<n;i++)for(j=0;j<n;j++)
	 a[i][j]=getint();
	 //scanf("%d",&a[i][j]);
	 int val=1;
	 for(x=0;x<l;x++)
	 {
	  val*=2;
	  if(val>l)break;
	 }
	 int rem=l-val/2;
	 for(k=0;k<n;k++)
	 {
	  len=n;
	  space=1;
	  for(i=1;i<=x;i++)
	  {
	   len-=space;
	   for(j=0;j<len;j++)
	   if(a[k][j]>a[k][j+space])a[k][j]=a[k][j+space];
	   space*=2;
	  }
	  if(rem>0)
	  {
	   len=n-l+1;
	   for(j=0;j<len;j++)
	   if(a[k][j]>a[k][j+rem])a[k][j]=a[k][j+rem];
	  }
	 }
	 for(k=0;k<n-l+1;k++)
	 {
	  len=n;
	  space=1;
	  for(i=1;i<=x;i++)
	  {
	   len-=space;
	   for(j=0;j<len;j++)
	   if(a[j][k]>a[j+space][k])a[j][k]=a[j+space][k];
	   space*=2;
	  }
	  if(rem>0)
	  {
	   len=n-l+1;
	   for(j=0;j<len;j++)
	   if(a[j][k]>a[j+rem][k])a[j][k]=a[j+rem][k];
	  }
	 }
	 for(i=0;i<n-l+1;i++)
	 {
	  for(j=0;j<n-l+1;j++)
	  printf("%d ",a[i][j]);
	  puts("");
	 }
	}
	return 0;
}
