#include<iostream>
#include<vector>
#define N 1000
using namespace std;

int n,k;
int arr[N][N],hor[N][N],ans[N][N];
bool sliding(int arr[],int res[])//asssuming arr and res are of appropriate sizes
{
    if(k<=0)
	return false;
    
    int i,j;
    if(k==1)
    {
	for(i=0;i<n;i++)
	    res[i]=arr[i];
	return true;
    }
    pair<int,int> A[1000];
    int head,tail;
    head=0;
    tail=1;
    A[0]=pair<int,int>(arr[0],k);
    
    for(i=1;i<n;i++)
    {
	if(A[head].second==i)//deleting element just going outside
	{
	    head++;
	}
	while(tail>head&&A[tail-1].first>arr[i])
	{
	    tail--;
	}
	A[tail].first=arr[i];
	A[tail].second=i+k;
	tail++;
	if(i>=k-1)
	    res[i-k+1]=A[head].first;
    }
    return true;
}

int main()
{
    scanf("%d%d",&n,&k);
    int i,j;
    for(i=0;i<n;i++)
    {
	for(j=0;j<n;j++)
	{
	    scanf("%d",&arr[i][j]);
	}
	sliding(arr[i],hor[i]);
    }
    int vert[N],resvert[N];
    for(i=0;i<n-k+1;i++)
    {
	for(j=0;j<n;j++)
	{
	    vert[j]=hor[j][i];
	}
	sliding(vert,resvert);
	for(j=0;j<n-k+1;j++)
	{
	    ans[j][i]=resvert[j];
	}    
    }
    for(i=0;i<n-k+1;i++)
    {
	for(j=0;j<n-k+1;j++)
	    printf("%d ",ans[i][j]);
	printf("\n");
    }
    return 0;
}