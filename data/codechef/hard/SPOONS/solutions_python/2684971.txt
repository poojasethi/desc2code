a=[(2, 2), (3, 3), (4, 6), (5, 10), (6, 20), (7, 35), (8, 70), (9, 126), (10, 252), (11, 462), (12, 924), (13, 1716), (14, 3432), (15, 6435), (16, 12870), (17, 24310), (18, 48620), (19, 92378), (20, 184756), (21, 352716), (22, 705432), (23, 1352078), (24, 2704156), (25, 5200300), (26, 10400600), (27, 20058300), (28, 40116600), (29, 77558760), (30, 155117520), (31, 300540195), (32, 601080390), (33, 1166803110), (34, 2333606220), (35, 4537567650), (36, 9075135300), (37, 17672631900), (38, 35345263800), (39, 68923264410), (40, 137846528820), (41, 269128937220), (42, 538257874440), (43, 1052049481860), (44, 2104098963720), (45, 4116715363800), (46, 8233430727600), (47, 16123801841550), (48, 32247603683100), (49, 63205303218876), (50, 126410606437752), (51, 247959266474052), (52, 495918532948104), (53, 973469712824056), (54, 1946939425648112), (55, 3824345300380220), (56, 7648690600760440), (57, 15033633249770520), (58, 30067266499541040), (59, 59132290782430712), (60, 118264581564861424), (61, 232714176627630544), (62, 465428353255261088), (63, 916312070471295267), (64, 1832624140942590534)]

def binSearch(key, high, low):
    if high==low:
        return high
    else:
        mid=(high+low)/2
        if a[mid][1]==key:
            return mid
        if a[mid][1]>key:
            if a[mid-1][1]==key:
                return mid-1
            elif a[mid-1][1]<key:
                return mid
            else:
                return binSearch( key,mid-1,low)
        elif a[mid][1]<key:
            if a[mid+1][1]==key:
                return mid+1
            elif a[mid+1][1]>key:
                return mid+1
            else:
                return binSearch(key,high,mid+1)

tc=int(raw_input())
while tc:
    tc-=1
    n=int(raw_input())
    if n==2:
        print "2"
    elif n==3:
        print "3"
    else:
        key=binSearch(n,len(a),0)
        print a[key][0]
        
    
