#include <cstdio>
#include <vector>
#include <algorithm>
#include <cassert>
using std::vector;
using std::sort;
#define LL long long int

int a[2005000];
int main() {
  int n,t;
  scanf("%d", &t);
  vector<LL> sum;
  //sum.reserve(11234567);
  while (t--) {
    sum.clear();
    scanf("%d", &n);
    for (int i = 0; i < n; i++) {
      scanf("%d", &a[i]);
    }
    sort(a, a + n);
    LL diffsum = 0;
    LL tsum = 0;
    for (int i = 0; i < n; i++) {
      for (int j = 0; j < n; j++) {
        if (i == j)
          continue;
        sum.push_back(a[i] + a[j]);
        tsum += a[i] + a[j];
        diffsum += abs(a[i] - a[j]);
      }
    }
    diffsum *= (n - 2) * 4;
    diffsum *= -1;
    sort(sum.begin(), sum.end());
    LL psum = 0;
    long totsz = sum.size();
    if (totsz > 11234567) {
      while(1){
        totsz++;
      }
    }
    for (long loopvar = 0; loopvar < totsz; loopvar++) {
      psum += sum[loopvar];
      diffsum += ((LL)(sum[loopvar]) * (loopvar + 1) - psum);
      diffsum += (tsum - psum - ((totsz - loopvar - 1) * (LL)(sum[loopvar])));
    }
    printf("%lld\n", diffsum/4);
  }
  return 0;
}
