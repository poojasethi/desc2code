#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<string.h>
#include<stack>
#include<queue>
#include<algorithm>
#include<cmath>
#define MAX 100001
#define pb push_back
#define mp make_pair
#define sz(c) c.size()
#define all(c) c.begin(),c.end()
 
using namespace std;
 
typedef vector<int> vi;
typedef vector<vi> vii;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
 


static inline int fastio()
{
    int x=0;
    char c=getchar_unlocked();
    while(c<'0'||c>'9')
        c=getchar_unlocked();
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return (x);
}











 
long long int PartialSolver(int a[],int n)
{
 
    long long int sum=0;
    for(int i=1;i<=n;i++)
    {
 
        long long int V=a[i-1];
        sum=sum+(long long int)(i-1)*V-(long long int)(n-i)*V;
    }
    return (sum*(long long int)2);
}
 
int main()
{
    int t,i,j,len,l,n;
    int a[1001];
    int temparray[499501];
    long long int ans;
    //scanf("%d",&t);
    t=fastio();
    while(t--)
    {
 
        //scanf("%d",&n);
        n=fastio();
        for(i=0;i<n;i++)
            a[i]=fastio();
            //scanf("%d",a+i);
           sort(a,a+n);
            len=0;
        for(i=0;i<n;i++)
        {
            for(j=i+1;j<n;j++)
            {
                temparray[len++]=a[i]+a[j];
            }
        }
        sort(temparray,temparray+len);
        ans=PartialSolver(temparray,len);
        long long int ans2=(PartialSolver(a,n));
        printf("%lld\n",ans-ans2*(long long int)(n-2));
        }
 
 
    return 0;
}