#include <vector>
#include <cstring>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <limits>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
using namespace std;
typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> PII;

template <typename T1, typename T2>
inline std::ostream& operator << (std::ostream& os, const std::pair<T1, T2>& p){
    return os << "(" << p.first << ", " << p.second << ")";
}

template<typename T1, typename T2>
ostream &operator << (std::ostream & os,const std::map<T1, T2>& v){
    os << "[";
    for (typename std::map<T1, T2>::const_iterator ii = v.begin(); ii != v.end(); ++ii)
        os << ii->first << ":" << ii->second << " ";
    return os << "]";
}
    
template <class Cntnr>
ostream& c_out(std::ostream& os, const Cntnr& v){
    os << "[";
    for (typename Cntnr::const_iterator ii = v.begin(); ii != v.end(); ++ii)
        os << *ii << " ";
    os << " ]";
    return os;
}
template<typename T>
ostream& operator<<(ostream& o, const vector<T> &c){return c_out(o, c);}
template<typename T>
ostream& operator<<(ostream& o, const list<T> &c){return c_out(o, c);}
template<typename T>
ostream& operator<<(ostream& o, const set<T> &c){return c_out(o, c);}

#define sz(a)                       ((int)(a.size()))
#define forall(i,a,b)               for(int i=(a);i<(long long)(b);i++)
#define forinv(i,h,l)               for(int i=(h);i>=(long long)(l);i--)
#define tr(it, c)                   for( __typeof__( (c).begin()) it = (c).begin();  it != (c).end(); ++it)
#define fill(a,v)                   memset(a, v, sizeof a)
#define all(a)                      a.begin(), a.end()
#define IND(A,v)                    (std::find(all(A),v)-A.begin())
#define in(A,v)                     (std::find(A.begin(), A.end(), v) != A.end())
#define bitcount                    __builtin_popcount
#define D(v)                        cout<< #v" : " << v << "\n";
#define DA(a,n)                     {cout<<#a": [";forall(i,0,n)cout<<a[i]<<" ";cout<<"]\n";}
#define oo                          (int)(1e9+10)
#define EPS                         (1e-9)
#define S(n)                        scanf("%d",&n)
#define INITFROMARR(arr)            (arr, arr + sizeof(arr)/sizeof(arr[0]))
#define GCD(a,b)                    (abs(__gcd(a,b))
#define MP                          make_pair
#define PB                          push_back

template <class T> string to_s(const T& a) {ostringstream os; os<<a; return os.str();}
template <class T> T to_T(const string& s) {istringstream is(s); T r; is>>r; return r;}

int A[100001], S[100005], ind[100005];
int main(){
    int t; S(t);
    while(t--){
        fill(ind, -1);
        S[0] = 0;
        ind[0] = 0;
        int n; S(n);
        forall(i, 0, n){
            S(A[i]);
            A[i] %= n;
        }
        forall(i, 0, n){
            if(A[i] == 0){
                cout << 1 << endl << i+1 << endl;
                break;
            }
            S[i+1] = (S[i] + A[i])%n;
            if(ind[S[i+1]] < 0){
                ind[S[i+1]] = i+1;
            }
            else{
                int s = ind[S[i+1]], e = i;
                cout << e-s+1 << endl;
                forall(j, s, e+1)
                    cout << j+1 << " ";
                cout << endl;
                break;
            }
        }
    }
    return 0;
}
