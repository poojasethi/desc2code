#include<iostream>
#include<sstream>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cmath>
#include<cctype>
#include<set>
#include<bitset>
#include<algorithm>
#include<list>
 
#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<ctype.h>
#define inf 1000010
using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
int L[1005][1005];
int dp[1005][1005];
int mod =  23102009;
string s1;
string s2;
char ss1[1005],ss2[1005];
int len1,len2,len;

void LCS()
{
	int i,j;
	len = max(len1,len2);
	for(i=0;i<=len;i++)
	L[i][0] = L[0][i] = 0;
	for(i=1;i<=len1;i++)
	{
		for(j=1;j<=len2;j++)
		{
			if(s1[i]==s2[j])
			L[i][j] = 1 + L[i-1][j-1];
			else
			L[i][j] = max(L[i][j-1],L[i-1][j]);
		}
	}
}
void cntLCS()
{
	 int i,j;
	len = max(len1,len2);
	for(i=0;i<=len;i++)
	dp[i][0] = dp[0][i] = 1;
	
	for(i=1;i<=len1;i++)
	{
		for(j=1;j<=len2;j++)
		{
			dp[i][j] = 0;
			if(s1[i]==s2[j])
			{
				dp[i][j] = dp[i-1][j-1];
			}
			else
			{
				 if(L[i][j] == L[i-1][j] )
				 dp[i][j]  = (dp[i][j] +  dp[i-1][j]);
				 
				 if(L[i][j] == L[i][j-1] )
				 dp[i][j]  = (dp[i][j] +  dp[i][j-1]);
				 
				 if(L[i][j] == L[i-1][j-1])
				 dp[i][j]   = ((dp[i][j] -  dp[i-1][j-1])+mod);
				 
				 dp[i][j] = dp[i][j]%mod;
			}
		}
	}
}

int main()
{
    int tcase,t;
    scanf("%d",&tcase);
    for(t=1;t<=tcase;t++)
    {
    	scanf("%s %s",ss1,ss2);
    	s1 = (string) ss1;
    	s2 = (string) ss2;
    	s1 = '#' + s1;
    	s2 = '#' + s2;
    	len1 = s1.size();
    	len2 = s2.size();
    	len1--;
    	len2--;
    	
		LCS();
    	cntLCS();
    	
    	printf("%d %d\n",L[len1][len2],dp[len1][len2]);
    	
	}
}