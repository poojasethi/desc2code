#include<bits/stdc++.h>

using namespace std;

#define ll long long int
#define ull unsigned long long int
#define maxN 16
#define maxK 500
#define maxW 1005
#define pb push_back
#define mp make_pair
#define INF (((ll)1000000000) * ((ll)1000000000))
#define e 2.7182818284590452353602874
#define maxT 1000000
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define MOD 23102009
#define rep(i,N) for(int i=0;i<N;i++)

int lcs[1003][1003];

int LCS(string a,string b) {
for(int i=0;i<=a.size();i++)
 for(int j=0;j<=b.size();j++) 
  if(i==0||j==0)
   lcs[i][j]=0;
  else if(a[i-1]==b[j-1])
   lcs[i][j]=1+lcs[i-1][j-1];
  else
   lcs[i][j]=max(lcs[i-1][j],lcs[i][j-1]);
return lcs[a.size()][b.size()];
}

int dp[1003][1003];
int LCS_Count(string a,string b) {
for(int i=0;i<=a.size();i++)
 for(int j=0;j<=b.size();j++) 
  if(i==0||j==0)
   dp[i][j]=1;
  else {
   dp[i][j]=0;
   if(a[i-1]==b[j-1])
    dp[i][j]=(dp[i-1][j-1]);
   else {
    if(lcs[i-1][j]==lcs[i][j])
     dp[i][j]=(dp[i][j]+dp[i-1][j])%MOD;
    if(lcs[i][j-1]==lcs[i][j])
     dp[i][j]=(dp[i][j]+dp[i][j-1])%MOD;
    if(lcs[i][j]==lcs[i-1][j-1])
     dp[i][j]=(MOD+dp[i][j]-dp[i-1][j-1])%MOD;
   }
 }
return dp[a.size()][b.size()];
}

int main() {

int T;
cin>>T;
char ch;
while(T--) {
string s1,s2;
cin>>s1>>s2;
//cout<<s1<<" "<<s2<<"\n";
if(LCS(s1,s2))
 cout<<lcs[s1.size()][s2.size()]<<" "<<LCS_Count(s1,s2)<<"\n";
else
 cout<<"0 0\n";
}


}
