#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;

const int MOD = 23102009;
int dp[1005][1005];
int ways[1005][1005];
int n, kases, m;
char s[1005];
char t[1005];

int main() {
	scanf("%d", &kases);
	while (kases--) {
		scanf("%s", s);
		scanf("%s", t);
		n = strlen(s);
		m = strlen(t);
		for (int i=0; i<=n; i++) { dp[i][0] = 0; ways[i][0] = 1; }
		for (int j=0; j<=m; j++) { dp[0][j] = 0; ways[0][j] = 1; }
		for (int i=1; i<=n; i++)
			for (int j = 1; j<=m; j++)
				ways[i][j] = 0;
		for (int i=1; i<=n; i++)
			for (int j=1; j<=m; j++) {
				if (s[i-1] == t[j-1]) {
					dp[i][j] = dp[i-1][j-1]+1;
					ways[i][j] = ways[i-1][j-1];
				} else {
					dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
					if (dp[i][j] == dp[i-1][j])
						ways[i][j] += ways[i-1][j];
					if (dp[i][j] == dp[i][j-1])
						ways[i][j] += ways[i][j-1];
					if (dp[i][j] == dp[i-1][j-1])
						ways[i][j] -= ways[i-1][j-1];
					ways[i][j] = (ways[i][j]+MOD)%MOD;
				}
			}
		printf("%d %d\n", dp[n][m], ways[n][m]);
	}
}