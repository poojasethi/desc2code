#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<vector>
#include<map>

using namespace std;

#define MAX 1000
#define ALPHA 256
#define MOD 23102009

char A[MAX+5], B[MAX+5];
int prev_A[MAX+5][ALPHA+5], prev_B[MAX+5][ALPHA+5];
int lcs_count[MAX+5][MAX+5], lcs[MAX+5][MAX+5];

void performtest(){
    int i, j;
    scanf( "%s %s", A, B );
    int M = strlen( A ), N = strlen( B );

    for( char c = 'a'; c <= 'z'; c++ ){
        prev_A[M][c] = -1;
        prev_B[N][c] = -1;
    }
    for( i=M-1; i>=0; i-- ){
        for( char c = 'a'; c <= 'z'; c++ )
            prev_A[i][c] = prev_A[i+1][c];
        prev_A[i][ A[i] ] = i;
        lcs[i][N] = 0;
    }
    for( i=N-1; i>=0; i-- ){
        for( char c = 'a'; c <= 'z'; c++ )
            prev_B[i][c] = prev_B[i+1][c];
        prev_B[i][ B[i] ] = i;
        lcs[M][i] = 0;
    }

    lcs[M][N] = 0;
    for( i=M-1; i>=0; i-- )
        for( j=N-1; j>=0; j-- ){
            lcs_count[i][j] = 0;
            lcs[i][j] = A[i] == B[j] ? lcs[i+1][j+1] + 1 : max( lcs[i+1][j], lcs[i][j+1] );
            if( A[i] == B[j] ){
                for( char c = 'a'; c <= 'z'; c++ ){
                    if( prev_A[i+1][c] != -1 && prev_B[j+1][c] != - 1 && lcs[ prev_A[i+1][c] ][ prev_B[j+1][c] ] == lcs[i][j] - 1  )
                        lcs_count[i][j] = ( lcs_count[i][j] + lcs_count[ prev_A[i+1][c] ][ prev_B[j+1][c] ] )%MOD;
                }
                if( lcs_count[i][j] == 0 )
                    lcs_count[i][j] = 1;
            }
        }

    int len_lcs = lcs[0][0];
    int result = 0;
    for( char c='a'; c<'z'; c++ ){
        if( lcs[ prev_A[0][c] ][ prev_B[0][c] ] == len_lcs )
            result = ( result + lcs_count[ prev_A[0][c] ][ prev_B[0][c] ] )%MOD;
    }
    printf( "%d %d\n", len_lcs, result );
}

int main(){
    int T;
    scanf( "%d", &T );
    while( T-- )
        performtest();
    return 0;
}
