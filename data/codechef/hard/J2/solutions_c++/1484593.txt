#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
 
using namespace std;
 
#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
#define FOR(i,a,b)				for(int i=a;i<b;i++)
#define REP(i,n)				FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp						make_pair
#define FF						first
#define SS						second
#define tri(a,b,c)				mp(a,mp(b,c))
#define XX						first
#define YY						second.first
#define ZZ						second.second
#define pb						push_back
#define fill(a,v) 				memset(a,v,sizeof a)
#define all(x)					x.begin(),x.end()
#define SZ(v)					((int)(v.size()))
#define DREP(a)					sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)			(lower_bound(all(arr),ind)-arr.begin())
#define debug(args...)			{dbg,args; cerr<<endl;}
#define dline					cerr<<endl	
#define MOD                     23102009 

 
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
 
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<TRI> VT;
 
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VII> VVII;
typedef vector<VLL> VVLL;
typedef vector<VT> VVT;
 
 
/*Main code begins now */
 
int testnum;
VL nums;
 
int cnt;
int la,lb,ans1,ans2,yy;
char a[1001],b[1001]; 

 
void preprocess()
{
	
}
int mymod(int x)
{
if(x<0)return MOD+x;
if(x<MOD)return x;
return x%MOD;
}
void myswap(int &x,int &y)
{
int t=x;
x=y;
y=t;     
}
void fillT()
{
     int i,j,T[2][1001],D[2][1001],cur=1,prev=0;
    
    for(i=0;i<=la;++i)
      {
      myswap(cur,prev);
      for(j=0;j<=lb;++j)
        {
         if(i==0||j==0)
           {
           D[cur][j]=1;
           T[cur][j]=0;
           continue;            
           }
        if(a[i-1]==b[j-1])
           {
            T[cur][j]=T[prev][j-1]+1;
            D[cur][j]=D[prev][j-1];              
           }
        else
           {
           T[cur][j]=max(T[prev][j],T[cur][j-1]); 
           D[cur][j]=0;
          if(T[cur][j]==T[prev][j])
          D[cur][j]=mymod(D[cur][j]+D[prev][j]);
          if(T[cur][j]==T[cur][j-1])
          D[cur][j]=mymod(D[cur][j]+D[cur][j-1]);
          if(T[cur][j]==T[prev][j-1])
          D[cur][j]=mymod(D[cur][j]-D[prev][j-1]);                                    
           }
        
                       
        }                
      } 
    ans1=T[cur][lb];
    
    ans2=D[cur][lb];  
}
void solve()
{
	fillT();
    printf("%d %d\n",ans1,ans2);	
}
 
 
 
bool input()
{
     ss(a);ss(b);
     la=strlen(a);
     lb=strlen(b);
    
	return true;
}
 
 
int main()
{
	preprocess();
	int T=1;s(T);
	for(testnum=1;testnum<=T;testnum++)
	{
		if(!input()) break;
		solve();
	}
return 0;
}
 
