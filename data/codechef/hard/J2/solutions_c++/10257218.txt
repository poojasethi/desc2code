#include<iostream>
#include<string>
using namespace std;
#define REP(i,b) for(int i=0;i<b;i++)
#define ll long long int
ll L[1005][1005];
ll D[1005][1005];
#define mod 23102009
int main()
{
string A,B;
int t;
char X[1005],Y[1005];
cin>>t;
while(t--)
{
cin>>A>>B;
//cin>>B;
int m=A.size();int n=B.size();
REP(i,m) X[i+1]=A[i];
REP(j,n) Y[j+1]=B[j];

REP(i,m+1) L[i][0]=0;
REP(j,n+1) L[0][j]=0;
for(int i=1;i<=m;i++) {
for(int j=1;j<=n;j++) {
if(X[i]==Y[j])
L[i][j]=L[i-1][j-1]+1;
else
L[i][j]=max(L[i-1][j],L[i][j-1]);

}
}

REP(j,n+1) {
REP(i,m+1) {
if(i==0 || j==0) D[i][j]=1;
else {
D[i][j]=0;
if(X[i]==Y[j]) 
D[i][j]=D[i-1][j-1]; // Number of distinct LCS of D[i][j] is same as the no of distinct LCS from [i-1,j-1]
else 
{
if(L[i-1][j]>=L[i][j-1]) 
D[i][j]=(D[i][j]+D[i-1][j])%mod;


if(L[i][j-1]>=L[i-1][j]) 
D[i][j]=(D[i][j]+D[i][j-1])%mod;


if(L[i-1][j-1]==L[i][j])
D[i][j]=(D[i][j]-D[i-1][j-1])%mod;
//if(D[i][j]<0)
//D[i][j]+=23102009;// We have added twice,so subtract once

}
}
}
}
cout<<L[m][n]<<" "<<(D[m][n]+mod)%mod<<endl;
}
}