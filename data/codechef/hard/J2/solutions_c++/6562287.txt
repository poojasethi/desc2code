#include<bits/stdc++.h>

#define mem(x,y) memset(x,y,sizeof(x))
#define max(a,b) ((a>b)?a:b)
#define min(a,b) ((a<b)?a:b)
#define diff(a,b) ((a<b)?b-a:a-b)
#define clrstr(a) memset(a,'\0',sizeof(a))
#define CLR(x) memset(x,0,sizeof(x))
#define SET(x) memset(x,-1,sizeof(x))
#define sz(a) a.size()
#define all(x) (x).begin(),(x).end()
#define pii pair<int,int>
#define pb(a) push_back(a)
#define pi 2*acos(0)
#define LL long long
#define rep(i,x) for(i=0;i<x;i++)
#define repv(i,v) for(i=0;i<v.size();i++)

#define EPS 1e-9
#define inf 10000000
#define MX 1005
#define MD 23102009

using namespace std;

string s,t;

int lcs[MX][MX];
int cnt[MX][MX];
bool vis[MX][MX];
int lasta[MX][27],lastb[MX][27];


int calcLCS(int idxa, int idxb, int ln)
{
    if(ln!=lcs[idxa][idxb]) return 0;
    if(vis[idxa][idxb]) return cnt[idxa][idxb];

    vis[idxa][idxb]=1;
    int res=0;

    if(!ln) return cnt[idxa][idxb]=1;

    else
    {
        res=0;
        for(int i=0;i<26;i++)
            res+=( (lasta[idxa][i] && lastb[idxb][i])?calcLCS(lasta[idxa][i]-1,lastb[idxb][i]-1,ln-1):0 );
        res%=MD;
    }

    return cnt[idxa][idxb]=res;
}

int main()
{
    int ks,i,j,ans;

    cin>>ks;
    while(ks--)
    {
        cin>>s>>t;
        s="9"+s;
        t="9"+t;

        int lns=sz(s),lnt=sz(t);

        for(i=1; i<lns; i++)
            for(j=0; j<26; j++)
                lasta[i][j]=( (s[i]==j+'a')?i:lasta[i-1][j] );

        for(i=1; i<lnt; i++)
            for(j=0; j<26; j++)
                lastb[i][j]=( (t[i]==j+'a')?i:lastb[i-1][j] );

        for(i=1; i<lns; i++)
            for(j=1; j<lnt; j++)
            {
                if(s[i]==t[j]) lcs[i][j]=lcs[i-1][j-1]+1;
                else lcs[i][j]=max(lcs[i-1][j],lcs[i][j-1]);
            }

        ans=calcLCS(lns-1, lnt-1, lcs[lns-1][lnt-1]);

        cout<<lcs[lns-1][lnt-1]<<" "<<ans<<endl;

        s.clear();
        t.clear();
        CLR(vis);
    }
}
