#include <cstring>
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define MAXN 1000010
#define ff first
#define ss second
#define pr(x) printf("%d",x);
#define get getchar//_unlocked
inline int inp()
{
    int n=0,s=1;
    char p=get();
    if(p=='-')
    s=-1;
    while((p<'0'||p>'9')&&p!=EOF)
    p=get();
    while(p>='0'&&p<='9')
    {
    n = (n<< 3) + (n<< 1) + (p - '0');
    p=get();
    };
    return n*s;
}
int a[25][25];
char s[25][25];
int dp[22][22][22][22];

int sol(int u,int v,int x,int y)
{
    if(u>x||v>y)return 0;
    if(dp[u][v][x][y]!=-1)return dp[u][v][x][y];
    set<int>st;
    for(int i=u;i<=x;i++)
    {
        for(int j=v;j<=y;j++)
        {
            if(a[i][j])
            {
                int sg=sol(u,v,i-1,j-1)^sol(u,j+1,i-1,y)^sol(i+1,v,x,j-1)^sol(i+1,j+1,x,y);
                st.insert(sg);
            }
        }
    }
    int i=0;
    while(1)
    {
        if(st.find(i)==st.end())
        {
            return dp[u][v][x][y]=i;
        }
        i++;
    }
}

int main()
{
    int i,n,j,k,l,m,t,c=0,ans;
    scanf("%d",&t);
    while(t--)
    {
      scanf("%d%d",&n,&m);
      memset(a,0,sizeof(a));
      memset(dp,-1,sizeof(dp));
      for(i=0;i<n;i++)
      scanf("%s",s[i]);
      for(i=2;i<n-2;i++)
      {
          for(j=2;j<m-2;j++)
          {
                   if(s[i][j]=='^')
                   if((s[i][j-1]=='^')&&(s[i][j-2]=='^'))
                   if((s[i][j+1]=='^')&&(s[i][j+2]=='^'))
                   if((s[i-1][j]=='^')&&(s[i-2][j]=='^'))
                   if((s[i+1][j]=='^')&&(s[i+2][j]=='^'))
                        {
                            a[i][j]=1;
                        }
          }
      }
      l=sol(0,0,n-1,m-1);
      if(l)
        puts("Asuna");
      else puts("Kirito");
    }
    return 0;
}
