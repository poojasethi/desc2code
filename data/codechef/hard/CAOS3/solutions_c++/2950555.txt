#include<iostream>
#include<set>
#include<string.h>
#include<algorithm>
#include<vector>

using namespace std;

int grundy_table[20][20][20][20];
int g[20][20];
int n,m;
string s[20];
int grundy(int sx,int sy,int ex,int ey)
{
    vector<int> vec;

    if(ex<sx || ey<sy)
    {
        return 0;
    }
    int ans=grundy_table[sx][sy][ex][ey];
    if(ans!=-1)
        return ans;
    for(int i=sx; i<=ex; i++)
    {
        for(int j=sy; j<=ey; j++)
        {
            if(g[i][j]==1)
            {
                vec.push_back(grundy(sx,sy,i-1,j-1)^grundy(sx,j+1,i-1,ey)^grundy(i+1,sy,ex,j-1)^grundy(i+1,j+1,ex,ey));

            }
        }
    }
    sort(vec.begin(),vec.end());
    ans=0;
    int i=0;
    while(i!=vec.size()&&vec.at(i)<0)
        i++;
    while(1)
    {
        if(i>=vec.size()||ans<vec.at(i))
        {
            grundy_table[sx][sy][ex][ey]=ans;
            return ans;
        }
        if(ans==vec.at(i))
        {
            while(vec.at(i)==ans)
            {
                i++;
                if(i==vec.size())
                {
                    ans++;
                    grundy_table[sx][sy][ex][ey]=ans;
                    return ans;
                }
            }
            ans++;
        }


    }

}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n>>m;
        for(int i=0; i<n; i++)
        {
            cin>>s[i];
        }
        memset(g,0,1600);
        memset(grundy_table,-1,640000);
        for(int i=2; i<n-2; i++)
        {
            for(int j=2; j<m-2; j++)
            {
                if(s[i][j]=='^'&&s[i][j+1]=='^' && s[i][j+2]=='^'&&s[i+1][j]=='^' && s[i+2][j]=='^'&&s[i][j-1]=='^' && s[i][j-2]=='^' &&s[i-1][j]=='^' && s[i-2][j]=='^')
                {
                    g[i][j]=1;

                }
            }
        }

        if(grundy(0,0,n-1,m-1)==0)
        {
            cout<<"Kirito"<<endl;
        }
        else
        {
            cout<<"Asuna"<<endl;
        }
    }
    return 0;
}
