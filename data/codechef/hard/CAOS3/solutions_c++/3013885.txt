#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<string>
#include<utility>
#include<numeric>
#include<iterator>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cctype>
#include<climits>
#include<ctime>
#include<cstring>

#define ALL(c)  c.begin(), c.end()
#define TR(c, it)   for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define MIN(a, b)   ((a) < (b) ? (a) : (b))
#define MIN3(a, b, c)   ((MIN((a), (b)) > (c)) ? (c) : (MIN((a), (b))))
#define gc  getchar_unlocked
#define lli long long int
#define inf INT_MAX
#define mininf INT_MIN
#define pb push_back
#define mp  make_pair

using namespace std;

int row, col;
bool monster[20][20];
int memo[20][20][20][20], mark[20][20][20][20], caseNum;

//inline void scanstr(string &str)
//{
//    register char c = 0;
//    while (c < 33)
//        c = gc();
//
//    while(c != '\n')
//    {
//        str += c;
//        c = gc();
//    }
//}

int grundy(int xl, int xr, int yl, int yr)
{
    if(xl > xr || yl > yr)
        return 0;
    if(mark[xl][xr][yl][yr] != caseNum)
        mark[xl][xr][yl][yr] = caseNum;
    else
        return memo[xl][xr][yl][yr];

    vector<int> s;
    for(int x = xl; x <= xr; x++)
        for(int y = yl; y <= yr; y++)
        {
            if(monster[x][y])
            {
                int num = grundy(xl, x-1, yl, y-1)^
                          grundy(x+1, xr, yl, y-1)^
                          grundy(xl, x-1, y+1, yr)^
                          grundy(x+1, xr, y+1, yr);
                s.pb(num);
            }
        }
    sort(ALL(s));
    s.erase(unique(ALL(s)), s.end());
    memo[xl][xr][yl][yr] = s.size();
    for(int i = 0; i < s.size(); i++)
    {
        if(s[i] != i)
        {
            return memo[xl][xr][yl][yr] = i;
        }
    }
    return memo[xl][xr][yl][yr];
}

int main()
{
    caseNum = 0;
    int t;
    memset(mark, -1, sizeof(mark));
    scanf("%d", &t);
    while(t--)
    {
        caseNum++;
        scanf("%d %d", &row, &col);
        vector<string> grid(row);
        FOR(i, 0, row)
        {
            string str;
//            scanstr(str);
            cin >> str;
            grid[i] = str;
        }

        FOR(i, 0, row)
        {
            FOR(j, 0, col)
            {
                monster[i][j] = false;
                if(grid[i][j] == '^')
                {
                    int l = 0, r = 0;
                    int b = 0, t = 0;
                    for(int i1 = i-1, i2 = i+1, j1 = j-1, j2 = j+1; i1 >= 0 && i2 < row && j1 >= 0 && j2 < col; i1--, i2++, j1--, j2++)
                    {
                        if(grid[i][j1] == '#' || grid[i][j2] == '#' || grid[i1][j] == '#' || grid[i2][j] == '#')
                            break;
                        else
                            l++, r++, t++, b++;
                        if(l == 2 || r == 2 || t == 2 || b == 2)
                        {
                            monster[i][j] = true;
                            break;
                        }
                    }
                }
            }
        }
//        FOR(i, 0, row)
//            FOR(j, 0, col)
//                if(monster[i][j])
//                    cout << i << " " << j << endl;

        if(grundy(0, row-1, 0, col-1) == 0)
            cout << "Kirito\n";
        else
            cout << "Asuna\n";
    }
    return 0;
}
