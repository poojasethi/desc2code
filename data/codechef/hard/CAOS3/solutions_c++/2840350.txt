/* shivamrana */
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <list>
#include <deque>
#include <stack>
#include <iterator>
#include <string>
#include <sstream>
#include <iostream>
#include <fstream>
#include <functional>
#include <numeric>
#include <algorithm>
#define f0r(i,n) for(int i=0;i<n;i++)
#define fOr(i,n) for(int i=1;i<=n;i++)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%I64d",&a)
#define pi(a) printf("%d",a)
#define pl(a) printf("%I64d",a)
#define n(l) cout<<endl
#define ll long long
#define mod 1000000007
#define vi vector<int>
#define pb(a) push_back(a)
using namespace std;
bool isp(int n){
     if(n==0||n==1)
     return false;
     for(int i=2;i*i<=n;i++)
     {
      if(n%i==0)
      return false;
      }
      return true;
}
int monst[22][22];
int r,c;
int memo[22][22][22][22];
int go(int r1,int c1,int r2,int c2){
    if(r2<r1||c2<c1)return 0;
    if(memo[r1][c1][r2][c2]!=-1)
        return memo[r1][c1][r2][c2];
    int gf[300]={0};
    for(int i=r1;i<=r2;i++)
    for(int j=c1;j<=c2;j++){
        if(monst[i][j]==1){
            int g=0;
                int res=go(r1,c1,i-1,j-1);
                g=g^res;
                res=go(r1,j+1,i-1,c2);
                g=g^res;
                res=go(i+1,c1,r2,j-1);
                g=g^res;
                res=go(i+1,j+1,r2,c2);
                g=g^res;
            gf[g]=1;
        }
    }
    int fun;
    for(int i=0;i<300;i++){
        if(gf[i]==0){
            fun=i;
            break;
        }
    }
    memo[r1][c1][r2][c2]=fun;
    return fun;
}
int main(){
    int t;
    si(t);
    while(t--)
    {
    si(r);si(c);
    char s[r+1][c+1];
    for(int i=0;i<r;i++)
    scanf("%s",s[i]);
    int ans=0;
    for(int i=0;i<r;i++)
        for(int j=0;j<c;j++)
        monst[i][j]=0;
    for(int i=0;i<21;i++)
    for(int j=0;j<21;j++)
    for(int k=0;k<21;k++)
    for(int l=0;l<21;l++)
    memo[i][j][k][l]=-1;
    for(int i=0;i<r;i++){
            for(int j=0;j<c;j++){
                    if(s[i][j]=='^')
                    {
                    int l=0,rr=0,tt=0,b=0;
                    int k=j-1;
                    if(k>=0)
                    while(s[i][k]=='^')
                    {
                    l++;
                    k--;
                    if(k<0)
                    break;
                    }
                    k=j+1;
                    if(k<c)
                    while(s[i][k]=='^')
                    {
                    rr++;
                    k++;
                    if(k==c)
                    break;
                    }
                    k=i-1;
                    if(k>=0)
                    while(s[k][j]=='^')
                    {
                    tt++;
                    k--;
                    if(k<0)
                    break;
                    }
                    k=i+1;
                    if(k<r)
                    while(s[k][j]=='^')
                    {
                    b++;
                    k++;
                    if(k==r)
                    break;
                    }
                    int mn=min(min(l,rr),min(tt,b));
                    for(k=2;k<=mn;k++)
                    {if(isp(k)){monst[i][j]=1;break;}}
            }
    }
}
int w=go(0,0,r-1,c-1);
if(w>0)
    printf("Asuna\n");
else printf("Kirito\n");
}
//system("pause");
return 0;
}
