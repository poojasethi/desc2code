#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <utility>
#include <numeric>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>

using namespace std;

#define F first
#define S second
#define PB push_back
#define MP make_pair

const double PI = acos(-1.0);
const double EPS = 1e-9;
const int INF = 2123123123;
const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;

#define ALL(c) (c).begin(), (c).end()
#define SZ(a) (int)(a).size()
#define RESET(a,x) memset(a,x,sizeof(a))
#define FORIT(it,v) for(__typeof(v.begin()) it = v.begin(); it != v.end(); ++it)


inline void OPEN(const string &s) {
	freopen((s + ".in").c_str(), "r", stdin);
	freopen((s + ".out").c_str(), "w", stdout);
}

#define MAXR 20
#define MAXC 20

int t,r,c;
int monster[MAXR+5][MAXC+5], vis[MAXR+5][MAXC+5][MAXR+5][MAXC+5], memo[MAXR+5][MAXC+5][MAXR+5][MAXC+5];
char a[MAXR+5][MAXC+5];

int grundy(int r1, int c1, int r2, int c2) {
    set<int> s;
    if (r1 < 0 || c1 < 0) return 0;
    if (r1 > r2 || c1 > c2) return 0;
    if (vis[r1][c1][r2][c2]) return memo[r1][c1][r2][c2];
    for (int rr = r1; rr <= r2; rr++) {
        for (int cc = c1; cc <= c2; cc++) {
            if (monster[rr][cc])
                s.insert(grundy(r1,c1,rr-1,cc-1) ^ grundy(rr+1,c1,r2,cc-1) ^ grundy(r1,cc+1,rr-1,c2) ^ grundy(rr+1,cc+1,r2,c2));
        }
    }
    int ret = 0;
    while (s.find(ret)!=s.end()) ++ret;
    vis[r1][c1][r2][c2] = 1;
    memo[r1][c1][r2][c2] = ret;
    return ret;
}


int main() {
    scanf("%d", &t);
    while (t--) {
        RESET(vis,0);
        RESET(monster,0);
        char s[MAXC+5];
        
        
        scanf("%d %d", &r, &c);
        for (int i = 0; i < r; i++) {
            scanf("%s", s);
            for (int j = 0; j < c; j++) a[i][j] = s[j];
        }
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (a[i][j] == '#') continue;
                int l,ri,t,b;
                int ii = i, jj = j;
                l = ri = t = b = 0;
                while (i-1 >= 0 && a[i-1][j] == '^' ) { --i; ++t; }
                i = ii;
                while (j-1 >= 0 && a[i][j-1] == '^') { --j; ++l; }
                j = jj;
                while (i+1 < r && a[i+1][j] == '^') { ++i; ++b; }
                i = ii;
                while (j+1 < c && a[i][j+1] == '^') { ++j; ++ri; }
                j = jj;
                if (min(l,min(ri,min(t,b))) >= 2) monster[i][j] = 1;
                else monster[i][j] = 0;
            }
        }
        if (grundy(0,0,r-1,c-1)) puts("Asuna");
        else puts("Kirito");
    }
    
    return 0;
}
