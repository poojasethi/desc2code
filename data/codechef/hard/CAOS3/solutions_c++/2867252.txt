#include <algorithm>
#include <assert.h>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
 
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <cstring>
 
using namespace std;
#define CLR(a) memset(a, 0, sizeof(a))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define SZ(V) (int )V.size()
#define ALL(V) V.begin(), V.end()
#define RALL(V) V.rbegin(), V.rend()
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define si(n) scanf("%d",&n)
#define ss(s) scanf("%s",s)
#define prin(n) printf("%d\n",n)
#define pll pair < long long int, long long int >
#define pii pair < int, int >
#define psi pair < string, int >
#define PB push_back  
#define MP make_pair
#define F first
#define S second
#define MOD 1000000007LL
 
typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef long long LL;
 
int R,C,a[50][50];
char A[50][50];
 
void mon(){
	int i,j,k,l,c,d,x,X[50]={0},row[50]={0},col[50]={0},rownum,colnum;
	for(i=0;i<R;i++){
		rownum=0;
		a[i][0]=0;
		if(A[i][0]=='^'){
			rownum++;
		}
		for(j=1;j<C;j++){
			if(A[i][j]=='^'){
				a[i][j]=rownum;
				rownum++;
			}
			else{
				a[i][j]=0;
				rownum=0;
			}
		}
	}
	for(i=0;i<R;i++){
		rownum=0;
		a[i][C-1]=0;
		if(A[i][C-1]=='^'){
			rownum++;
		}
		for(j=C-2;j>=0;j--){
			if(A[i][j]=='^'){
				a[i][j]=min(a[i][j],rownum);
				rownum++;
			}
			else{
				a[i][j]=min(a[i][j],rownum);
				rownum=0;
			}
		}
	}
	for(i=0;i<C;i++){
		colnum=0;
		a[0][i]=0;
		if(A[0][i]=='^'){
			colnum++;
		}
		for(j=1;j<R;j++){
			if(A[j][i]=='^'){
				a[j][i]=min(a[j][i],colnum);
				colnum++;
			}
			else{
				a[j][i]=min(a[j][i],colnum);
				colnum=0;
			}
		}
	}
	for(i=0;i<C;i++){
		colnum=0;
		a[R-1][i]=0;
		if(A[R-1][i]=='^'){
			colnum++;
		}
		for(j=R-2;j>=0;j--){
			if(A[j][i]=='^'){
				a[j][i]=min(a[j][i],colnum);
				colnum++;
			}
			else{
				a[j][i]=min(a[j][i],colnum);
				colnum=0;
			}
		}
	}
 
	for(i=0;i<R;i++){
		for(j=0;j<C;j++){
			if(A[i][j]=='^'){
				if(a[i][j]>=2){
					a[i][j]=1;
				}
				else{
					a[i][j]=0;
				}
			}
			else{
				a[i][j]=0;
			}
 
		}
	}
}
 
int B[30][30][30][30];
 
int get_num(int x1,int y1,int x2,int y2){
	int i,j,b,x,y;
	x=x2-x1;y=y2-y1;
	if(x<0 || y<0){
		return 0;
	}
	if(B[x1][y1][x2][y2]!=-1){
		return B[x1][y1][x2][y2];
	}
	bool myset[1000];
	memset(myset,false,sizeof(myset));
	for(i=x1;i<=x2;i++){
		for(j=y1;j<=y2;j++){
			if(a[i][j] != 1){
				continue;
			}
			b=get_num(x1,y1,i-1,j-1)^get_num(x1,j+1,i-1,y2)^get_num(i+1,y1,x2,j-1)^get_num(i+1,j+1,x2,y2);
			myset[b]=true;
		}
	}
	for(i=0;i<1000;i++){
		if(!myset[i]){
			B[x1][y1][x2][y2]=i;
			return i;
		}
	}
	B[x1][y1][x2][y2]=i;
	return i;
}
 
int main(){
	int T,i,j,x,k,l;
	scanf("%d",&T);
	while(T--){
		scanf("%d %d",&R,&C);
		for(i=0;i<R;i++){
			scanf("%s",A[i]);
		}
		mon();
		for(i=0;i<21;i++)
			for(j=0;j<21;j++)
				for(k=0;k<21;k++)
					for(l=0;l<21;l++)
						B[i][j][k][l]=-1;
		for(i=0;i<R;i++){
			for(j=0;j<C;j++){
				B[i][j][i][j]=a[i][j];
			}
		}
		x=get_num(0,0,R-1,C-1);
		if(x>0){
			cout << "Asuna" << endl;
		}
		else{
			cout << "Kirito" << endl;
		}
	}	
	return 0;
} 