#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <vector>

using namespace std;
/*========================================Templates=============================================*/
// datatypes
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef double db;
typedef float ft;
typedef unsigned int uint;
int gcd( int a, int b ) {  if( !b ) return a;  return gcd( b, a % b ); }


#define tests(tc) int tc;scanf("%d",&tc);while(tc--)
#define REP(i,n) for(int i=0;i<(n);++i)
#define FOR(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR1(i,a,b) for(int i=(a);i<(b);++i)
#define FORN(i,a,b,n) for(int i=(a);i<=(b);i+=n)
#define FORR(i,a,b) for(int i=(a);i>=(b);--i)
#define FORRN(i,a,b,n) for(int i=(a);i>=(b);i-=n)
#define CLEAR(arr,v)        memset(arr,v,sizeof(arr))
#define INF 1<<30


#define DEBUG
#ifdef DEBUG
#define DB(x) cerr<<#x<<" : "<<x<<endl<<flush;
#define DB2(x,y) cerr<<#x<<" : "<<x<<" "<<#y<<" : "<<y<<endl<<flush;
#define DB3(x,y,z) cerr<<#x<<" : "<<x<<" "<<#y<<" : "<<y<<" "<<#z<<" : "<<z<<endl<<flush;
#define DB4(w,x,y,z) cerr<<#w<<" : "<<w<<" "<<#x<<" : "<<x<<" "<<#y<<" : "<<y<<" "<<#z<<" : "<<z<<endl<<flush;
#define DB5(v,w,x,y,z) cerr<<#v<<" : "<<v<<" "<<#w<<" : "<<w<<" "<<#x<<" : "<<x<<" "<<#y<< \
	" : "<<y<<" "<<#z<<" : "<<z<<endl<<flush;
#define DB6(v,w,x,y,z,a) cerr<<#v<<" : "<<v<<" "<<#w<<" : "<<w<<" "<<#x<<" : "<<x<<" "<<#y<< \
	" : "<<y<<" "<<#z<<" : "<<z<< " "<<#a << " : " << a <<endl<<flush;
#define DBAR(arr,a,b) cerr<<#arr<<" : ";FOR(dbar,a,b) cerr<<arr[dbar]<<" ";cerr<<endl;
#define DBAR2(arr,a,b,x,y) cerr<<#arr<<endl;FOR(dbar,a,b){ FOR(dbar2,x,y)cerr<<arr[dbar][dbar2]<<" ";cerr<<endl;}

#else
#define DB(x)
#define DB2(x,y)
#define DB3(x,y,z)
#define DB4(w,x,y,z)
#define DB5(v,w,x,y,z)
#define DBAR(arr,a,b)
#define DBAR2(arr,a,b,x,y)
#endif

/*======================================Templates Ends========================*/
/* Main Code Starts from here */

inline void S( int &x ) {
	scanf("%d", &x);
 }

const int N = 25;
int r, c;

bool arr[N][N];
//cummulative sum in direction
int L[N][N], R[N][N], U[N][N], D[N][N];
int monster[N][N];
char str[N];


int dp[N][N][N][N];

int calc(int i, int ii,  int j, int jj , int dep) {
	//DB4(i,ii,j,jj)
	if(i>ii || j>jj)
		return dp[i][ii][j][jj] = 0;
	if(dp[i][ii][j][jj] != -1)
		return dp[i][ii][j][jj];

	if(i==ii && j==jj) {
        if(monster[i][j] > 0) {
            return dp[i][ii][j][jj] = 1;
           // cerr << "returning true for\n";
           // DB4(i,ii,j,jj)
        }
        else
            return dp[i][ii][j][jj] = 0;
	}
	int sg = 0;
	set<int> sg_values;
	FOR(p, i, ii) {
		FOR(q, j, jj) if(monster[p][q] > 0) {
			//DB2(p,q);
			int a = calc( i,  p-1, j,  q-1 , dep+1);
			int b = calc( i,  p-1, q+1, jj , dep+1);
			int c = calc( p+1, ii, j,  q-1 , dep+1);
			int d = calc( p+1, ii, q+1, jj , dep+1);
			//DB4(i, ii, p, q)
			//if(dep==1){DB6(p,q,a,b,c,d) }//DB2(p,q)}
			sg_values.insert(a^b^c^d);
			//ans = min(ans, tot);

		}
	}

	for (set<int>::iterator first = sg_values.begin();
		 first != sg_values.end() && sg == *first;
		 first++, sg++);

	dp[i][ii][j][jj] = sg;
	//cerr << "Return at last " << sg << endl;
	return sg;

}


int main (int argc, char const* argv[]) {

	tests(tc) {
		S(r);
		S(c);
		FOR(i, 1, r) {
			scanf("%s", str+1);
			FOR(j, 1, c) {
				arr[i][j] = (str[j]=='^')?1:0;
			}
		}

		//DBAR2(arr, 1,r,1,c)

		CLEAR(monster , 0);
		CLEAR(dp , -1);

		FOR(i, 1, r) L[i][c+1] = 0;
		FOR(i, 1, c) U[r+1][i] = 0;

		FOR(i, 1, r) {

			FOR(j, 1, c) {
				if(arr[i][j] == 1) 	R[i][j] = 1 + R[i][j-1];
				else				R[i][j] = 0;
			}
			FORR(j, c, 1) {
				if(arr[i][j] == 1) 	L[i][j] = 1 + L[i][j+1];
				else				L[i][j] = 0;
			}

		}

		FOR(i, 1, c) {

			FOR(j, 1, r) {
				if(arr[j][i] == 1) 	D[j][i] = 1 + D[j-1][i];
				else				D[j][i] = 0;
			}
			FORR(j, r, 1) {
				if(arr[j][i] == 1) 	U[j][i] = 1 + U[j+1][i];
				else				U[j][i] = 0;
			}

		}
		/*
		DBAR2(R, 0,r+1,0,c+1)
		DBAR2(L, 0,r+1,0,c+1)
		DBAR2(D, 0,r+1,0,c+1)
		DBAR2(U, 0,r+1,0,c+1)
		*/

		FOR(i, 1, r) {
			FOR(j, 1, c) if(arr[i][j] == 1){
				int minVal = min( min(L[i][j+1], R[i][j-1]), min(U[i+1][j], D[i-1][j]) );

				if(minVal > 1) {
					monster[i][j] = 1;
				}
			}
		}

//		DBAR2(monster, 1, r, 1, c)
		
		if( calc(1, r, 1, c, 1) ) {
			printf("Asuna\n");
		}
		else {
			printf("Kirito\n");
		}
	}

	return 0;
}