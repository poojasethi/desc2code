#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <vector>
#include <algorithm>
#include <cstring>
#define  vi vector<int>
#define vvi vector< vector<int> >
#define SN(n) scanf("%d",&n);
#define PN(n) printf("%d\n",n);
using namespace std;
int allzero(vi& rem)
{
	for(int i=0;i<rem.size();i++)
	{
		if(rem[i]!=0)
		{
			return 0;
		}
	}
	return 1;
}
int max(int a,int b)
{
	if(a>b)
	{
		return a;
	}
	else return b;
}
void makearray(int S[][10],vi& select,int R[][10])
{
	int look[10];
	int count=0;
	for(int i=0;i<10;i++)
	{
		if(select[i]==1)
		{
			look[i]=count;
			count++;
		}
		else
		{
			look[i]=-1;
		}
	}
	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
		{
			if(select[i]!=0 && select[j]!=0)
			{
				S[look[i]][look[j]]=R[i][j];
			}
		}
	}
}
void print2DArr(int A[][10],int size)
{
	printf("\nPRINTING ARRAY\n");
	for(int i=0;i<size;i++)
	{
		for(int j=0;j<size;j++)
		{
			printf(" %d ",A[i][j]);
		}
		printf("\n");
	}
	printf("\n");
}
void printArr(const vi& A,int size)
{
	printf("\nPRINTING ARRAY\n");
	for(int i=0;i<size;i++)
	{
		printf(" %d ",A[i]);
	}
	printf("\n");
}
int recretail(int arr[][10],vi& rem,int level,int size,int sum)
{
	if(level >= size)
	{
		return sum;
	}
	if(allzero(rem))
	{
		return sum;
	}
	int rsum=sum;
	for(int i=level;i<size;i++)
	{
		if(rem[level]==2 && level==i)
		{
			vi rem1(rem);
			rem1[i]-=2;
			rsum=max(rsum,recretail(arr,rem1,level+1,size,sum+arr[level][level]));
		}
		else if(rem[i]==2 && rem[level]==2 && level!=i)
		{
			vi rem1(rem);
			rem1[level]-=2;
			rem1[i]-=2;
			rsum=max(rsum,recretail(arr,rem1,level+1,size,sum+2*arr[level][i]));
		}
		else
		{
			vi rem1(rem);
			rsum=max(rsum,recretail(arr,rem1,level+1,size,sum));
		}
	}
	return rsum;
}
int maxretail(int arr[][10],int size)
{
	vi rem(size,2);
	return recretail(arr,rem,0,size,0);
}
int main()
{
	int T;
	int Ti;
	int R[10][10]={55, 60, 4, 25, 18, 10, 12, 8, 11, 50,
					60, 45, 75, 23, 27, 20, 24, 7, 33, 12,
					4, 75, 78, 32, 36, 30, 36, 6, 12, 65,
					25, 23, 32, 15, 45, 40, 48, 5, 14, 23,
					18, 27, 36, 45, 54, 50, 60, 4, 15, 12,
					10, 20, 30, 40, 50, 60, 72, 3, 32, 34,
					12, 24, 36, 48, 60, 72, 84, 2, 23, 34,
					8, 7, 6, 5, 4, 3, 2, 1, 34, 123,
					11, 33, 12, 14, 15, 32, 23, 34, 65, 48,
					50, 12, 65, 23, 12, 34, 34, 123, 48, 71};
	int S[10][10];
	scanf("%d",&T);
	vi count;
	vi select;
	int t;
	int size;
	for (Ti= 0;Ti<T;Ti++)
	{
		size=0;
		for(int i=0;i<10;i++)
		{
			SN(t);
			count.push_back(t);
		}
		for(int i=0;i<10;i++)
		{
			SN(t);
			if(t==1)
			{
				size++;
			}
			select.push_back(t);
		}
		makearray(S,select,R);
		// print2DArr(R,10);
		// print2DArr(S,size);
		PN(maxretail(S,size));
		count.clear();
		select.clear();
	}
	return 0;
}