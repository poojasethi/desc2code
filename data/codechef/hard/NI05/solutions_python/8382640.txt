#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int findMaxSum(int a[],int size, int column, vector<vector<int> > b)
{
	int sum=0;
	for(int i=0;i<size;i++)
	{
		sum+=a[i];
	}
	if(sum==0)
	{
		return 0;
	}
	else
	{
		int max=0;
		for(int i=0;i<size;i++)
		{
			if(a[i]==1)
			{
				a[i]=0;
				int x=b[i][column]+findMaxSum(a,size,column+1,b);
				if(x>max) max=x;
				a[i]=1;
			}
		}
		return max;
	}

}

int main()
{
	int points[10][10]={{55,60,4,25,18,10,12,8,11,50},
				{60,45,75,23,27,20,24,7,33,12},
				{4,75,78,32,36,30,36,6,12,65},
				{25,23,32,15,45,40,48,5,14,23},
				{18,27,36,45,54,50,60,4,15,12},
				{10,20,30,40,50,60,72,3,32,34},
				{12,24,36,48,60,72,84,2,23,34},
				{8,7,6,5,4,3,2,1,34,123},
				{11,33,12,14,15,32,23,34,65,48},
				{50,12,65,23,12,34,34,123,48,71}};
	int m;
	cin>>m;
	for(int i=0;i<m;i++)
	{
		int values[10];
		int selected[10];
		for(int j=0;j<10;j++)
		{
			cin>>values[j];
		}
		int sum=0;
		int b[10];
		for(int j=0;j<10;j++)
		{
			cin>>selected[j];
			if(selected[j]==1)
			{
				b[sum]=j;
				sum++;
			}
		}
		vector<vector<int> > actualPoints(sum, vector<int> (sum));
		int c[sum];
		for(int j=0;j<sum;j++)
		{
			c[j]=1;
		}
		for(int j=0;j<sum;j++)
		{
			for(int k=0;k<sum;k++)
			{
				actualPoints[j][k]=points[b[j]][b[k]];
			}
		}
		cout<<findMaxSum(c,sum,0,actualPoints)<<endl;
	}
}