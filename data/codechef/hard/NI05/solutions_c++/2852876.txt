#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
#include<map>
#include<limits>

#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sll(n) scanf("%lld",&n)
#define sull(n) scanf("%llu",&n)
#define ss(str) scanf("%s",str)
#define sf(n) scanf("%f",&n)
#define sd(n) scanf("%lf",&n)
#define I int 
#define ll long long int
#define ull unsigned long long int 
#define mod(a) (a<0?-a:a)
#define as_0 48
#define as_A 65
#define as_a 97
#define mem1(a) memset(a,0,sizeof(a))
#define mem2(a) memset(a,-1,sizeof a)

//#include<conio.h>

using namespace std;
int dp[1<<16];

int power(int* bitmask, int n)
{
    int x=0,i,j;
    for(i=0,j=1;i<n;i++,j*=2)
    {
                             if(bitmask[i])
               x=x+j;     
    }
    return x;
}

int func(int *bitmask,int cost[][11], vector<int> &v)
{
    
    int i,j;
    
    int n=power(bitmask,v.size());
    
    if(n==0)
    return 0;
    
    if(dp[n]!=-1)
    return dp[n];
    
    for(i=0;i<v.size();i++)
    {
                           if(bitmask[i]==1)
                           for(j=i+1;j<v.size();j++)
                           {
                                                    if(bitmask[j]==1)
                                                    {
                                                                      bitmask[i]--;bitmask[j]--;
                                                                      dp[n]=max(dp[n],func(bitmask, cost, v)+cost[v[i]][v[j]]);
                                                                      bitmask[i]++;bitmask[j]++;
                                                    }
                           }
    }
    return dp[n];
}


int main()
{  
   //freopen("input.txt","r",stdin);
   //freopen("output.txt","w",stdout);
   
   int cost[11][11]=
   {
       {0,0,0,0,0,0,0,0,0,0,0},
       {0,55,	60,	4	,25,	18,	10,	12,	8	,11,	50},
       {0,60,	45,	75,	23,	27,	20,	24,	7	,33,	12},
        {0,4	,75	,78	,32	,36	,30	,36	,6	,12	,65},
        {0,25	,23,	32,	15,	45,	40,	48,	5	,14,	23},
        {0,18,	27	,36,	45	,54	,50	,60,	4	,15	,12},
        {0,10	,20	,30	,40	,50,	60,	72,	3	,32,	34},
        {0,12	,24	,36	,48	,60	,72	,84	,2	,23	,34},
        {0,8	,7	,6	,5	,4	,3	,2	,1	,34,	123},
        {0,11,	33,	12,	14,	15	,32	,23	,34	,65	,48},
        {0,50,	12,	65,	23,	12,	34,	34,	123,	48,	71},

   };
   
   int t; si(t);
   while(t--)
   {
             int arr[11]; int present[11];
             int i,j,k;
             for(i=1;i<11;i++)
             si(arr[i]);
             for(i=1;i<11;i++)
             si(present[i]);
             
             vector<int> v;
             
             for(i=1;i<11;i++)
             {
                              if(present[i])
                              for(j=0;j<2;j++)
                              v.push_back(i);
             }
             
             //for(i=0;i<v.size();i++)
             //printf("%d ",v[i]);
             //printf("\n");
             
             int bitmask[100];
             for(i=0;i<100;i++)
             bitmask[i]=1;
             mem2(dp);
             printf("%d\n",func(bitmask,cost,v));
   }
 //getch();
 return 0; 
}
