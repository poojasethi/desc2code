#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<string.h>
using namespace std;
int dp[9*531441];
int cost[10][10]={
{55,	60,	4,	25,	18,	10,	12,	8,	11,	50},
{60,	45,	75,	23,	27,	20,	24,	7,  33,	12},
{4,	75,	78,	32,	36,	30,	36,	6,	12,	65},
{25,	23,	32,	15,	45,	40,	48,	5,	14,	23},
{18,	27,	36,	45,	54,	50,	60,	4,	15,	12},
{10,	20,	30,	40,	50,	60,	72,	3,	32,	34},
{12,	24,	36,	48,	60,	72,	84,	2,	23,	34},
{8,	7,	6,	5,	4,	3,	2,	1,	34,	123},
{11,	33,	12,	14,	15,	32,	23,	34,	65,	48},
{50,	12,	65,	23,	12,	34,	34,	123,48,	71}};
int hashing(int a[10])
{
	int ret=0;
	int mult=1;
	for(int i=0;i<10;i++)
	{
		ret+=(mult*a[i]);
		mult*=3;
	}
	return ret;
}
void solve(int a[10])
{
	int h=hashing(a);
	if(!h)
		return ;
	if(h && dp[h])
		return ;
	int maxi=0;
	int temp[10]={0};
	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
			temp[j]=a[j];
		if(temp[i]>0)
		{
			temp[i]--;
			for(int j=i;j<10;j++)
			{
				if(temp[j])
				{
					temp[j]--;
//					for(int k=0;k<10;k++)
//						cout<<temp[k]<<" -";
//					cout<<endl;
					solve(temp);
					maxi=max(maxi,cost[i][j]+dp[hashing(temp)]);
					temp[j]++;
				}
			}
		}
	}
	dp[h]=maxi;
	return ;
}
int main()
{
	int tc;cin>>tc;
	while(tc--)
	{
		memset(dp,0,sizeof(dp));
		int a[10],b[10];
		for(int i=0;i<10;i++)
			cin>>a[i];
		for(int j=0;j<10;j++)
			cin>>b[j];
		int temp[10]={0};
		for(int i=0;i<10;i++)
			if(b[i] && (a[i]>=2))
				temp[i]=2;
		solve(temp);
		int h=hashing(temp);
		cout<<dp[h]<<endl;
	}
	return 0;
}