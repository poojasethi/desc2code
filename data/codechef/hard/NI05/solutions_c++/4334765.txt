
#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

int RM[][10]={{55,60,4,25,18,10,12,8,11,50},
    {60,45,75,23,27,20,24,7,33,12},
    {4,75,78,32,36,30,36,6,12,65},
    {25,23,32,15,45,40,48,5,14,23},
    {18,27,36,45,54,50,60,4,15,12},
    {10,20,30,40,50,60,72,3,32,34},
    {12,24,36,48,60,72,84,2,23,34},
    {8,7,6,5,4,3,2,1,34,123},
    {11,33,12,14,15,32,23,34,65,48},
    {50,12,65,23,12,34,34,123,48,71}};


int main(int argc, const char * argv[])
{

    int m;
    cin>>m;
    
    int tmp;
    vector<int>perm,V;
    long long res=0,maxres=-1;
    
    for(int i=0;i<m;i++){
        for(int j=0;j<10;j++)
            cin>>tmp;
        for(int j=0;j<10;j++){
            cin>>tmp;
            if(tmp){
                perm.push_back(j);
            }
        }
        V=perm;
        maxres=-1;
        do{
            res=0;
            for(unsigned u=0;u<V.size();u++){
                res+=long (RM[V[u]][perm[u]]);
            }
            if(res>maxres){
                maxres=res;
            }
        }while(next_permutation(V.begin(),V.end()));
        cout<<maxres<<"\n";
        perm.clear();
    }
    
    return 0;
}
