#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;

int r_matrix[][11]={{55, 	60, 	4, 	    25, 	18,	    10, 	12,	    8, 	    11, 	50},
                  {60, 	45, 	75, 	23, 	27, 	20, 	24, 	7, 	    33, 	12},
                  {4, 	75, 	78, 	32, 	36, 	30, 	36, 	6, 	    12, 	65},
                  {25, 	23, 	32,	    15, 	45, 	40, 	48, 	5, 	    14, 	23},
                  {18, 	27, 	36, 	45, 	54, 	50, 	60, 	4, 	    15, 	12},
                  {10, 	20, 	30, 	40, 	50, 	60, 	72, 	3, 	    32, 	34},
                  {12, 	24, 	36, 	48, 	60, 	72, 	84, 	2, 	    23, 	34},
                  {8, 	7, 	    6, 	    5, 	    4, 	    3, 	    2, 	    1, 	    34, 	123},
                  {11, 	33, 	12, 	14, 	15, 	32, 	23, 	34, 	65, 	48},
                  {50, 	12, 	65, 	23, 	12, 	34,	    34, 	123, 	48, 	71}};



int solve(vector<int> p,vector<int> o)
{
    int ret=-1,i,temp;
    
    
    do
    {
       temp=0;
       
       for(i=0;i<p.size();i++)
       {
                              temp+=(r_matrix[o[i]][p[i]]);
       }
       
       ret=max(ret,temp);
       
    }while(next_permutation(p.begin(),p.end()));
    
    return ret;
}
                                           
    
    
int main()
{
    int i,j,min,t,hash[20],ans,x;
    vector<int> pres;
    
    scanf("%d",&t);
    
    while(t--)
    {
              pres.clear();
              for(i=0;i<10;i++)
              {
                               scanf("%d",&hash[i]);
              }
              
              for(i=0;i<10;i++)
              {
                               scanf("%d",&x);
                               if(x==1 && hash[i]>=2)
                                pres.push_back(i);
              }
              
              ans=solve(pres,pres);
              printf("%d\n",ans);
    }
    
    return 0;
}
    
    
