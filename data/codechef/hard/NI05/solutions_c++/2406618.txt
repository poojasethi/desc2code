/*Swarn Avinash Kumar ->
Keyword:
Bitch:
*/
#include <list>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cassert>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cstring>
#define sz size()
#define ll long long
#define f(i,a,b) for(int i = a;i < b;i++)
#define fr(i,a,b) for(int i = a;i >= b;i--)
#define fitr(i,c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 9999999
#define bc(a) __builtin_popcount(a)
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define re return
#define ini(a,b) memset(a,b,sizeof(a))
#define be begin()
#define ee end()
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define pb push_back
#define mp make_pair
#define rerr cout << "-" << endl
#define p(a) cout << a << endl
#define pr(a,n) f(i,0,n) cout << a[i] << " "

using namespace std;


int main() {
    int n;
    int mat[10][10] ={{55,60,4,	25	,18,	10,	12,	8	,11,	50},
{60,	45,	75,	23,	27	,20	,24,	7,	33,	12},
{4,	75,	78,	32,	36,	30,	36,	6,	12,	65},
{25,	23,	32,	15,	45,	40,	48,	5,	14,	23},
{18,	27,	36,	45,	54,	50,	60,	4,	15,	12},
{10,	20,	30,	40,	50,	60,	72,	3,	32,	34},
{12,	24,	36,	48,	60,	72,	84,	2	,23,	34},
{8,	7,	6	,5,	4,	3,	2,	1,	34,	123},
{11,	33,	12,	14,	15,	32,	23,	34,	65,	48},
{50,	12,	65,	23,	12,	34,	34,	123,	48,	71}};

    int types[12];
    int sel[12];
    cin >> n;
    while(n--) {
    vi per;
    int num;
    f(i,0,10) {
        cin >> types[i];
    }
    f(i,0,10) {
        cin >> sel[i];
        if(sel[i]) {
            per.pb(i+1);
        }
    }
    vi tt = per;
    int maxsum = 0;
    do {
            int sum = 0;
            f(i,0,tt.sz)
                sum += mat[tt[i]-1][per[i]-1];
            maxsum = max(maxsum,sum);
    } while(next_permutation(per.be,per.ee));
    p(maxsum);
    }
}
