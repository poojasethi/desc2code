#include<iostream>
#include<stdio.h>
using namespace std ;
#define mem(a,b) memset(a,b,sizeof(a))
int main()
{
	int Arry[10][10] = {55,60,4,25,	18,	10,	12,	8,	11,	50,
60,	45,	75,	23,	27,	20,	24,	7,	33,	12,
4,	75,	78,	32,	36,	30,	36,	6,	12,	65 ,
25	,23,	32,	15,	45,	40,	48,	5,	14,	23 ,
18	,27	,36	,45	,54	,50	,60	,4	,15	,12 ,
10	,20	,30	,40	,50	,60	,72	,3	,32	,34,
12	,24	,36	,48	,60	,72	,84	,2	,23	,34,
8	,7,	6,	5,	4,	3,	2,	1,	34,	123,
11	,33	,12	,14	,15	,32	,23	,34	,65	,48,
50	,12	,65	,23	,12	,34	,34	,123	,48	,71,
	};
 
	int j,k,l ,t , Item[10],S[10] , New[10] ;
	scanf("%d",&t) ;
	while(t--)
	{
		for(j=0;j<10;j++)
			scanf("%d",&Item[j]) ;
		for(j=0;j<10;j++)
			scanf("%d",&S[j]) ;

		for(j=0;j<10;j++)
			New[j]=10 ;

		j = 0 ;
		k = 0 ;
		while(j < 10)
		{
			if(	S[j]==1)
			{
				New[k] = j ;
				k++ ;
			}
			j++ ;
		}
		
		int count = k ;
		int sum = -1  , temp ;
		bool check ; 
		int  val[8] ;
	
		for(val[1]=1;val[1]<=7;val[1]++)
		{

			for(val[2]=1;val[2]<=7;val[2]++)
			{
					if(val[2]==val[1])
						continue ;


					for(val[3]=1;val[3]<=7;val[3]++)
					{
							if(val[3]==val[2] || val[3]==val[1])
							continue ;


							for(val[4]=1;val[4]<=7;val[4]++)
							{
								if(val[4]==val[3] || val[4]==val[2] || val[4]==val[1])
									continue ;
								

								for(val[5]=1;val[5]<=7;val[5]++)
								{
										if(val[5]==val[4]||val[5]==val[3] || val[5]==val[2] || val[5]==val[1])
											continue ;
										

										for(val[6]=1;val[6]<=7;val[6]++)
										{
												if(val[6]==val[5]||val[6]==val[4]||val[6]==val[3] || val[6]==val[2] || val[6]==val[1])
													continue ;
										


												for(val[7]=1;val[7]<=7;val[7]++)
												{
													if(val[7]==val[6]||val[7]==val[5]||val[7]==val[4]||val[7]==val[3] || val[7]==val[2] || val[7]==val[1])
														continue ;
													
												/*	check = false ;													
													for(j=count ; j <=7 ; j++)
													{
														if(val[j]!=7)
															check = true ;
													}*/

													temp = 0 ;												
													for(j=0;j<count;j++)
													{
														if(val[j+1]<=count)
														{
															
															temp += Arry[New[j]][New[val[j+1]-1]] ;
														}
														else
															temp = 0 ;
													}
													
													if(temp > sum )
														sum = temp ;
												}

										}

								}

							}
					}
			}
		
		
		}
		printf("%d\n",sum) ;
	}
	return 0 ;
}