#define _USE_MATH_DEFINES
#include <cstdio>
#include <math.h>
#include <algorithm>
#define MAX 50005

using namespace std;

struct point {
	double x, y, a;
	bool operator < (point comp) const {
		return x < comp.x;
	}
} po[MAX];

pair<double, double> range[MAX];
int n;
double el, r;

bool pos(double y) {
    int c = 0;
	for (int i = 0; i < n; i++) {
		double x = (po[i].y - y) * tan(M_PI / 180 * po[i].a);
		if (x >= 0) {
            range[c] = make_pair(po[i].x - x, po[i].x + x);
            c++;
		}
	}
	sort(range, range + c);
	bool on = false;
	double big = 0;
	for (int i = 0; i < c; i++) {
		if (on) {
			if (range[i].first > big)
				return false;
			if (range[i].second > r)
				return true;
            if (range[i].second > big)
                big = range[i].second;
		} else {
			if (el >= range[i].first && el <= range[i].second) {
				on = true;
				big = range[i].second;
				if (range[i].second >= r)
                    return true;
			}
		}
	}
	return false;
}

int main() {
	//freopen("data.in", "r", stdin);
	//freopen("data.out", "w", stdout);
	int i, j, c;
	double low = 0, high = 0, mid;
	scanf("%d %lf %lf\n", & n, & el, & r);
	for (i = 0; i < n; i++) {
		scanf("%lf %lf %lf\n", & po[i].x, & po[i].y, & po[i].a);
		high = po[i].y > high ? po[i].y : high;
	}
	while (high - low >= 1e-6) {
		mid = (low + high) / 2;
		if (pos(mid))
			low = mid;
		else high = mid;
	}
	printf("%.9lf\n", mid);
	return 0;
}
