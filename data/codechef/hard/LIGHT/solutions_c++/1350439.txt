#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>
#include <assert.h>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define rep(i,n) FOR(i,0,n)
#define ford(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define CL(a,v) memset((a),(v),sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int,int> pii;

const int maxn = 50010;
int N;
double L,R;
double X[maxn],Y[maxn],Z[maxn];

bool can(double y) {

  vector<pair<double,bool> > a;

  rep(i,N) if(y<Y[i]) {
    double x = tan(Z[i] / 180 * M_PI) * (Y[i] - y);
    a.pb(mp(X[i] - x, true));
    a.pb(mp(X[i] + x, false));
  }

  SORT(a);

  int cnt = 0;

  if(a.size()==0||L<a[0].first) return false;

  rep(i,a.size()) {
    if(a[i].Y)
      cnt++;
    else
      cnt--;
    if(cnt==0 && L<a[i].X && a[i].X < R) return false;
  }

  return true;
}

int main()
{
  #ifdef LOCAL_HOST
      freopen("../qt/input.txt","r",stdin);
      //freopen("../qt/output.txt","w",stdout);
  #endif

  scanf("%d%lf%lf", &N, &L, &R);
  rep(i, N) scanf("%lf%lf%lf", X + i, Y + i, Z + i);

  double low = 0, hi = *max_element(Y,Y+N);

  while(hi-low>1e-7) {
    double y = (low+hi)/2;
    if(can(y))
      low = y;
    else
      hi = y;
  }

  printf("%.7f", (low+hi)/2);


  #ifdef LOCAL_HOST
    printf("TIME: %.3lf\n",double(clock())/CLOCKS_PER_SEC);
  #endif

  return 0;
}
