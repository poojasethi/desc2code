
/*
 **	Author : Amit Bansal	**
 */

#include<stdio.h>
#include<iostream>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<stdlib.h>

#include<vector>
#include<algorithm>
#include<string>
#include<sstream>

#include<map>
#include<set>
#include<list>
#include<queue>
#include<stack>
#include<bitset>

#include<functional>
#include<numeric>
#include<utility>
#include<iomanip>
#include<ctime>

using namespace std;
typedef long long						LL;
typedef vector<int> 						VI;
typedef vector<LL> 						VLL;
typedef vector<double> 						VD;
typedef vector<string> 						VS;
typedef vector<VI>						VVI;
typedef vector<VLL>						VVLL;
typedef pair<int,int> 						II;
typedef vector<II> 						VII;
typedef vector<VII> 						VVII;
typedef stringstream 						ss;

#define all(v)							(v).begin(),(v).end()
#define fors(i,n)						for(int i=0;i<n;i++)
#define fori(i,x,n)						for(int i=x;i<n;i++)
#define ford(i,x,n)						for(int i=x;i>n;i--)
#define pb(x)							push_back(x)
#define SZ(v)							int(v.size())
#define SORT(v)							sort(all(v))
#define gcd                                                     __gcd
#define maxv(v)							*max_element(all(v))
#define minv(v)							*min_element(all(v))
#define sumv(v)							accumulate(all(v),0);
#define SI 							( {int x;scanf("%d",&x);x;} )
#define sqr(a) 							(a)*(a)
#define mp 							make_pair
#define reset(x,y)						memset(x,y,sizeof x);
#define seive(n) 					VI prime(n+1,1); prime[0]=prime[1]=0; fori(i,2,sqrt(n)+1) if(prime[i]) for(int j=i*i;j<=n;j+=i) prime[j]=0;
#define pi 2*acos(0.0)
#define mod 1000000007
#define inf 1000000000 
#define eps 1e-9

int hx[]={ -2, -2, -1, -1,  1, 1 , 2, 2 };			//moves of a knight(horse)
int hy[]={ -1,  1, -2,  2, -2, 2, -1, 1 };			//sorted: first on x ,then on y

int dx[]={ 1, -1, 0,  0 };					//E,W,N,S
int dy[]={ 0,  0, 1, -1 };

int nx[]={ 1, -1, 0,  0, -1,  1, 1, -1 };			//N-8 neighbourhood
int ny[]={ 0,  0, 1, -1,  1, -1, 1, -1 };			//E,W,N,S,N-W,S-E,N-E,S-W


class pt
{
    public:
	int x,y;
};

typedef vector<pt> 	VP;


/*
   bool comp(pt a1,pt a2)
   {
   if(a1.x<a2.x)
   return true;
   else if(a1.x>a2.x)
   return false;
   else
   {
   if(a1.y<a2.y)
   return true;
   return false;
   }
   }
 */
	
VD x(50010),y(50010),ang(50010);
int n;
double l,r;

bool check(double m)
{
    vector<pair<double,double> > ar;
    fors(i,n)
    {
	if(m<=y[i]-eps)
	    ar.pb(mp(x[i]-tan(ang[i])*(y[i]-m),x[i]+tan(ang[i])*(y[i]-m)));
    }
    SORT(ar);
    int sz=ar.size();
    if(sz==0)
	return false;

    double cur_l = ar[0].first,cur_r = ar[0].second;
    fori(i,1,sz)
    {
	if(ar[i].first+eps<=cur_r)
	    cur_r=max(cur_r,ar[i].second);
	else
	{
	    if(cur_l+eps<=l && cur_r-eps>=r)
		return true;
	    cur_l = ar[i].first,cur_r = ar[i].second;
	}
    }

    if(cur_l+eps<=l && cur_r-eps>=r)
	return true;
    return false;
}

int main()
{
    int t = 1;
    while(t--)
    {
	n=SI;
	cin>>l>>r;
	fors(i,n)
	{
	    cin>>x[i]>>y[i]>>ang[i];
	    ang[i]=(ang[i]*pi)/180.0;
	}
	double lo=0.0,hi=1000.0,mid;
	fors(i,100)
	{
	    mid=(lo+hi)/2.0;
	    if(check(mid))
		lo=mid;
	    else
		hi=mid;
	}
	printf("%.10lf\n",mid);

    }

    return 0;
}



