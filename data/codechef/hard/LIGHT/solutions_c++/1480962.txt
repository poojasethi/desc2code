#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<algorithm>
using namespace std;
const double EPS=1e-9;
const int MAX_N=100001;
int n,m;
double x[MAX_N],y[MAX_N],z[MAX_N];
double L,R;

struct Seg{
       double l,r;
       bool operator < (const Seg&y) const{
            return l<y.l;
       }
};

inline void getD(double &x){
    register double c = getchar();
    x = 0;
    double neg = 0,mul=10.0,div=1.0;
    bool flag=0;
    for(;((c<48 || c>57) && c != '-');c = getchar());
    if(c=='-') {neg=1;c=getchar();}
    for(;(c>47 && c<58) || c=='.';c = getchar()) {
        if(c == '.'){
            flag=1;
            mul=1.0;
            div=1.0;
            continue;
        }
        if(flag){
            mul=1.0;
            div*=10.0;
        }
        x = (x*mul) + (c - 48)/div;
    }
    if(neg) x=-x;
}
int  check(double h){
     static Seg s[MAX_N];
     m=0;
     for (int i=1;i<=n;i++){
         if (y[i]<=h) continue;
         double w=(y[i]-h)*z[i];
         double l=x[i]-w;double r=x[i]+w;
         l=max(l,L);r=min(r,R);
         if (l+EPS<=r){
            s[++m].l=l;s[m].r=r;
         }
     }
     sort(s+1,s+1+m);
     double r=L;
     for (int i=1;i<=m;i++){
         if (s[i].l<=r+EPS)
            r=max(r,s[i].r);
         else return 0;
     }
     return r+EPS>R;
}

int main(){
    scanf("%d",&n);
    getD(L);getD(R);
    for (int i=1;i<=n;i++){
        getD(x[i]);getD(y[i]);getD(z[i]);
        z[i]=tan(z[i]/180*M_PI);
    }
    double l=0;double r=1000;
    while (l+(1e-7)<r){
          double mid=(l+r)/2;
          if (check(mid)) l=mid;else r=mid;
    }
    printf("%.9f\n",l);
}
