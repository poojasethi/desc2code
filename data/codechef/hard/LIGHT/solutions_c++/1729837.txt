#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>
#include <vector>
#include <queue>

#define REP(a,b) for (int a = 0; a < b; a++)
#define FOR(a,b,c) for (int a = b; a <= c; a++)
#define RESET(a,b) memset(a,b,sizeof a)

#define EPS 1e-9
#define INF 2123123123
#define PII pair<int,int>
#define MP make_pair
#define LL long long
#define PB push_back
#define F first
#define S second

#define MAXN 50002
#define __ printf("\n")
using namespace std;

double PI = acos((double)-1);

int n;
double l,r;
double x[MAXN],y[MAXN],z[MAXN];
double ki,ka,tgh;

pair<double,double> ar[MAXN];

bool lesseq(double a, double b){
	if (fabs(a-b) <= EPS) return 1;
	return (a < b);
}

bool bisa(double t){
	int p = 0;
	REP(i,n){
		if (lesseq(t,y[i])){
			double d = abs((y[i] - t) * tan(z[i] * PI / 180));
			
			ar[p++] = MP(x[i] - d, x[i] + d);
		}
	}
	
	sort(ar, ar + p);
/*	
	printf("%.2lf\n", t);
	REP(i,p){
		printf("%.2lf %.2lf\n", ar[i].F, ar[i].S);
	}
*/	
	bool ret = 1;
	double naw = l;
	double maxl = l;
	int i = 0;
	while ((i < p) && lesseq(naw,r)){
		bool stuck = 1;
		while ((i < p) && lesseq(ar[i].F,naw)){
			maxl = max(maxl, ar[i].S);
			i++;
			stuck = 0;
		}
		
		if (stuck){
			ret = 0;
			break;	
		}
		naw = maxl;
	}
//	printf("%d\n", ret && !lesseq(naw,r));
	return ret && !lesseq(naw,r);
}

int main(){
	ki = 0;
	ka = 0;

	scanf("%d%lf%lf", &n, &l, &r);
	REP(i,n){
		scanf("%lf%lf%lf", &x[i], &y[i], &z[i]);
		
		ka = max(ka, y[i]);
	}
	
	REP(cob,70){
		tgh = (ki + ka)/2;
		
		if (bisa(tgh)){
			ki = tgh;
		}else{
			ka = tgh;
		}
	}
	
	printf("%.9lf\n", tgh);
	
	return 0;
}	
