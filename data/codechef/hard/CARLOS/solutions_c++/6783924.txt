#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;
const int maxn=200005;
const int mod=1e9+7;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define Bug(x) cout << #x << "=" << x << endl
#define pii pair<int,int>
#define chk(x,n) (x[n>>6]&(1<<((n>>1)&31)))
#define set(x,n) (x[n>>6]|=(1<<((n>>1)&31)))
vector<int> g[205],comp[205];
int dp[205],cal[205][205],vis[205];
const int inf=1000000;
int num;
void dfs(int node)
{
    vis[node]=1;
    comp[num].push_back(node);
    F(i,0,g[node].size())
    {
        if(!vis[g[node][i]])
            dfs(g[node][i]);
    }
}
int main()
{
    int i,j,k,m,n,t;
    S(t);
    while(t--)
    {
        int ans=inf;
        S(m);
        S(k);
        S(n);

        F(i,0,k)
        {
            int p,q;
            S(p);
            S(q);
            g[p].push_back(q);
            g[q].push_back(p);
        }

        F(i,1,m+1)
        {
            num=i;
            if(!vis[i])
                dfs(num);
        }

        F(i,0,205)
        {
            F(j,0,comp[i].size())
            {
                F(r,0,comp[i].size())
                {
                    cal[comp[i][j]][comp[i][r]]=1;
                }
            }
        }
        F(i,1,m+1)
        {
            F(j,1,m+1)
            {
                if(!cal[i][j])
                {
                    cal[i][j]=inf;
                }
            }
            cal[i][i]=0;
        }
        F(i,0,n)
        {
            int in;
            S(in);
            int mn=inf;
            F(j,1,m+1)
            {
                if(dp[j]<mn)
                    mn=dp[j];
                dp[j]=mn+cal[in][j];
                if(dp[j]>inf)
                    dp[j]=inf;
            }
        }
        F(i,1,m+1)
        {
            if(dp[i]<ans)
                ans=dp[i];
        }

        if(ans!=inf)
            P(ans);
        else
            printf("-1\n");

        F(i,0,m+1)
        {
            g[i].clear();
            comp[i].clear();
            vis[i]=0;
        }
        F(i,0,m+1)
            F(j,0,m+1)
                cal[i][j]=0;
        F(i,0,m+1)
            dp[i]=0;
    }
    return 0;
}
