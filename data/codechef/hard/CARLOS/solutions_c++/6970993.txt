#include <iostream>
#include <cstring>
using namespace std;

#define INF 20000000

int mat[201][201], a[200002];
int dp[2][201];

int min(int a, int b) {
    return (a < b ? a : b);
}

void transitiveClosure(int n) {
    int i, j, k;
    for(k = 0; k < n; k++)
        for(i = 0; i < n; i++)
            for(j = 0; j < n; j++)
                mat[i][j] = mat[i][j] || (mat[i][k] && mat[k][j]);
}

int main() {
	int t, i, j, m, k, n, x, y, curr;
	cin >> t;
	while(t--) {
	    cin >> m >> k >> n;
	    memset(mat, 0, sizeof(mat));
	    for(i = 0; i < k; i++) {
	        cin >> x >> y;
	        x--; y--;
	        mat[x][y] = mat[y][x] = 1;
	    }
	    for(i = 0; i < m; i++) mat[i][i] = 1;
	    for(i = 0; i < n; i++) {
	        cin >> a[i];
	        a[i]--;
	    }
	    transitiveClosure(m);
        for(j = 0; j < m; j++)
            dp[0][j] = dp[1][j] = INF;
	    for(j = 0; j < m; j++)
	        if(mat[a[0]][j] == 1)
	            dp[0][j] = 1;
	    dp[0][a[0]] = 0;
	    int flag = 0;
	    for(i = 1; i < n; i++) {
	        curr = INF;
	        flag ^= 1;
	        for(j = 0; j < m; j++) {
	            curr = min(curr, dp[flag ^ 1][j]);
	            if(curr == INF || mat[a[i]][j] == 0) {
	                dp[flag][j] = INF;
	                continue;
	            }
	            dp[flag][j] = curr + (j == a[i] ? 0 : 1);
	        }
	    }
	    curr = INF;
	    for(j = 0; j < m; j++) curr = min(curr, dp[flag][j]);
	    if(curr == INF) curr = -1;
	    cout << curr << "\n";
	}
	return 0;
}
