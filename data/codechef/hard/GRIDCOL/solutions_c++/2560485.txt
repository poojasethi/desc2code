/*===============*\
|  ID: TMANDZU    |
|    LANG: C++    |
\*===============*/
//Tornike Mandzulashvili
//#pragma comment(linker,"/STACK:256000000")
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <stack>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <iostream>
#include <set>
#include <cstring>

#define EPS 0.000000001
#define Pi 3.1415926535897932384626433832795028841971
#define hash1 1000003
#define hash2 1000033
#define md 1000000007
#define INF 1000000500
#define mp make_pair
#define pb push_back
#define S size()
#define MX(aa,bb) (aa>bb?aa:bb)
#define MN(aa,bb) (aa<bb?aa:bb)
#define fi first
#define se second
#define PI pair < long long ,long long  >
#define REP(i,a,n) for(i=a;i<n;i++)
#define sc scanf
#define pt prlong long f
#define big long long
#define VI vector <long long >
#define DID (long long)


using namespace std;

const long long  T=2005;

long long  x,sul,t,N,i,j;
long long  Fact[T],fix[T],A[T],B[T];
vector <long long > g[T],num;
long long  F[T],dp[T],L[T][T],C[T][T],CYC[T][T];

void read()
{
    scanf("%d",&N);
    for (i=0;i<N;i++)
    scanf("%d",&A[i]),g[i].pb(N+A[i]-1),g[N+A[i]-1].pb(i);
    for (i=0;i<N;i++)
    scanf("%d",&B[i]),g[i].pb(N+B[i]-1),g[N+B[i]-1].pb(i);
}

void go(long long  v)
{
    sul++;
    fix[v]=1;
    long long  to;
    to=g[v][0];
    if (!fix[to]) go(to);
    to=g[v][1];
    if (!fix[to]) go(to);
}

void renull()
{
    for (i=0;i<=2002;i++)
    g[i].clear(),fix[i]=0,F[i]=0,dp[i]=0,A[i]=0;
    num.clear();
}

void solve()
{
    read();

    for (j=0;j<=2002;j++)
    A[j]=0;
    num.clear();

    for (i=0;i<2*N;i++)
    if (!fix[i]) sul=0,go(i),num.pb(sul);

    dp[0]=1;
    for (i=0;i<num.S;i++)
    {
        for (j=0;j<=2002;j++)
        for (x=0;x<=num[i];x++)
        if (j>=x)
        A[j]+= (DID dp[j-x]*CYC[num[i]][x] %md),A[j]%=md;

        for (j=0;j<=2002;j++)
        dp[j]=(A[j])%md,A[j]=0;
    }

    for (i=N;i>=0;i--)
    {
        F[i]= DID dp[i]*Fact[N-i]%md;
        for (j=i+1;j<=N;j++)
        F[i]=(F[i]- DID F[j]*C[j][i]%md + md )%md;
    }

    printf("%d\n",(F[0]+md)%md);
}

main()
{
  //  freopen("text.in","r",stdin);   freopen("text.out","w",stdout);

    for (i=0;i<=2002;i++)
    L[i][0]=1,CYC[i][0]=1;

    Fact[0]=1;
    for (i=1;i<=2002;i++)
    Fact[i]=DID Fact[i-1]*i %md;

    C[0][0]=1;
    for (i=1;i<=2002;i++)
    {
        C[i][0]=1;
        for (j=1;j<=i;j++)
        C[i][j]=(C[i-1][j-1]+C[i-1][j])%md;
    }

    for (i=2;i<=2002;i++)
    for (j=1;j<=i;j++)
    {
         L[i][j]=(L[i-2][j-1]+L[i-1][j])%md;
         CYC[i][j]=(L[i-2][j-1]+L[i][j])%md;
    }

    scanf("%d",&t);
    while (t--)
    {
        renull();
        solve();
    }
}
