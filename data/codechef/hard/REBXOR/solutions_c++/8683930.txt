//#include<bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <set>
#include <assert.h>
using namespace std;
#define w(t) while(t--)
#define S(x) scanf("%d",&x)
#define SLL(x) scanf("%lld",&x)
#define P(x) printf("%d",x)
#define fl(i , a, b) for(i = (int)a; i<(int)b; i++)
#define mem(a , value) memset(a , value , sizeof(a))
#define tr(c, itr) for(itr = (c).begin(); itr != (c).end(); itr++)
#define MOD 1000000007
#define MAX 400001
#define ll long long
#define mp make_pair
#define pb push_back
typedef pair<int,int> pp;
int t[15000101][2];
int a[MAX];
int ans1[MAX] , ans2[MAX]; 
int size=1;
void insert(int n )
{
	int idx =0; int i ; 
	for(i = 31; i>=0; i--)
	{
		if((1<<i)&n)
		{
			if(t[idx][1]==-1)
			{
				t[idx][1] = size++;
			}
			idx = t[idx][1];
		}
		else
		{
			if(t[idx][0]==-1)
			{
				t[idx][0] = size++;
			}
			idx = t[idx][0]; 
		}
	}
}
int query(int n )
{
	int i , idx =0 , flag;
	int ans= 0;
	for(i = 31; i>=0; i--)
	{
		if( (1<<i) & n)
			flag=1;
		else
			flag=0;
		if(t[idx][1 - flag]!=-1)
		{
			ans = ans*2 + 1; 
			idx= t[idx][1-flag];
		}
		else 
		{
			ans = ans*2;
			idx = t[idx][flag];
		}
	}
	return ans;
}
int main()
{
	//std::ios_base::sync_with_stdio(false);
	int n , i  ; 
	cin>>n;
	fl(i , 0 , n )
	{
		cin>>a[i];
	}
	mem(t , -1);
	size=1;
	insert(0); 

	int x= 0 , ans , max1 =0 ;
	
	fl(i , 0 , n )
	{
		x = x^a[i];
		insert(x) ;
		ans = query(x);
		max1 = max(max1 , max(x , ans));
		ans1[i] = max1;
	}	

	x=0;  
	max1=0;
	mem(t , -1);
	size = 1;
	insert(0);

	for(i = n-1; i>=0; i--)
	{
		x = x^a[i];
		insert(x);
		ans = query(x);
		max1 = max(max1 , max(x , ans));
		ans2[i] = max1;
	}
	for(i =0 ;  i< (n-1); i++)
	{
		max1 = max(max1  ,ans1[i] + ans2[i+1]);
	}
	cout<<max1<<endl;
	return 0;
}