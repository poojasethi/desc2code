
import sys

def pow_mod(x, y, z):
   
    number = 1
    while y:
        if y & 1:
            number = number * x % z
        y >>= 1
        x = x * x % z
    return number
 
 
tokenizedInput = sys.stdin.read().split()
 
 
n = int(tokenizedInput[0])
t=1
for i in range(0,n):
  N = int(tokenizedInput[t])
  t=t+1
  the_list = list(map(int,tokenizedInput[t:t+N]))
  t=t+N
  A=int(tokenizedInput[t])
  t=t+1
  B=int(tokenizedInput[t])
  t=t+1
  C=int(tokenizedInput[t])
  t=t+1
 
  S = tokenizedInput[t]
  t=t+1
  idx=0
 
  r=1
  ansi=0
  pi=0
  stri=""
  
  for c in range(0,N):
    if S[c]== 'R':
      the_list[idx:N] = reversed(the_list[idx:N])
    idx=idx +1
  
    ansi=(ansi+int((the_list[c]-pi)*(r)))%C
   
    pi=the_list[c]
    if(S[c]=='A'):
      ansi=(ansi+A)%C
    if(S[c]=='M'):
      r=(B*r)%C
      ansi=(ansi*B)%C
   
    stri+=str(ansi)+" "
   
  sys.stdout.write(stri + '\n')