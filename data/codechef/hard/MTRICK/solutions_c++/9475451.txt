#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
using namespace std;
typedef long long int LL;
LL A , B , C , arr[1004] , mult , add , res[1004] , ans;
int test , N , st , en , temp , dir;
string ip;

long long int multiply_add(long long a,long long b)
{
    long long int q=(long long int)(((long double)a*(long double)b)/(long double)C);
    long long int r=a*b-q*C;
    if(r<0)
    r+=C;
        return r;
}
/*
LL multiply_add(LL a , LL b)
{
	a = (a%C);
	b = (b%C);
	if(b==1)
		return a;
	if(b==0)
		return 1;
	LL temp = multiply_add(a , (b/2));
	temp = ((temp%C) + (temp%C))%C;
	if(b%2==0)
		return temp;
	temp = (temp + a)%C;
	temp = (temp%C);
	return temp;
}
*/

int main()
{

scanf("%d",&test);
while(test--)
{
	add = 0;
	mult = 1;

	scanf("%d",&N);
	st = 1;
	en = N;
	dir  = 1;
	for(int i=1;i<=N;i++)
		scanf("%lld",&arr[i]);
	scanf("%lld %lld %lld",&A,&B,&C);

	cin >> ip;
	A = (A%C);
	B = (B%C);
	for(int i=1;i<=N;i++)
	{
		if(ip[i-1]=='R'){
			dir*=-1;
		}
		else if(ip[i-1]=='A')
		{
			add = add + A;
			add = (add%C);
		}
		else if(ip[i-1]=='M')	
		{
			add = multiply_add(add , B);
			mult = multiply_add(mult , B);
		}
		if(dir==1)
		{
			ans = multiply_add(arr[st]%C , mult%C);
			ans = ((ans%C) + (add%C))%C;
			st++;
		}
		else
		{
			ans = multiply_add(arr[en]%C , mult%C);
			ans = ((ans%C) + (add%C))%C;
			en--;
		}
		printf("%lld ", ans);
	}
	printf("\n");
}
return 0;
}



