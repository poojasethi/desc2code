#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <cctype>
#include <utility>
#include <queue>
#include <cmath>
using namespace std;

#define MX 1005

long long modmult(long long x, long long y, long long z) {
	if (!y) return 0;
	long long res(0);
	while (y) {
		if (y & 1) res = (res + x) % z;
		x = (x + x) % z, y >>= 1;
	}
	return res;
}

char str[MX];
long long x[MX];

int main() {
	#ifndef ONLINE_JUDGE
		freopen("in.txt", "r", stdin);
		freopen("out.txt", "w", stdout);
	#endif
	
	int n, cnt, i, T, Tc, pos, p;
	long long a, b, c, cur, t, ans;
	
	for (scanf("%d", &Tc), T = 1; T <= Tc; T++) {
		scanf("%d", &n);
		for (i = 1; i <= n; i++) scanf("%lld", &x[i]);
		scanf("%lld%lld%lld", &a, &b, &c);
		scanf("%s", str);
		cur = 1LL, t = 0LL, pos = 0;
		for (cnt = 0, i = 1; i <= n; i++) {
			if (i > 1) putchar(' ');
			if (str[i - 1] == 'R') {
				if (cnt & 1) pos = pos - i;
				else pos = pos + i;
				cnt++;
			} else if (str[i - 1] == 'A') {
				t = (t + a) % c;
			} else if (str[i - 1] == 'M') {
				cur = modmult(b, cur, c);
				t = modmult(t, b, c);
			}
			if (cnt & 1) p = pos - i;
			else p = pos + i;
			p = (p % n + n) % n;
			if (p == 0) p = n;
			ans = modmult(x[p], cur, c) + t;
			ans %= c;
			printf("%lld", ans);
		}
		puts("");
	}
	return 0;
}