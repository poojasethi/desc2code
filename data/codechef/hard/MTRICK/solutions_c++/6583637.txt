#include <bits/stdc++.h>
using namespace std;

long long int fastmultiply(long long int a, long long int b, long long int c)
{
    if (b == 0)
        return 0;
    long long int result;
    result = fastmultiply(a, b / 2, c);
    result = (2 * result) % c;
    if (b & 1)
        result = (result + a) % c;

    return result;
}

int main()
{
    int t,n,i,di;
    long long int a,b,c,x,y;
    string s;
    scanf("%d", &t);

    while (t--) {
        scanf("%d", &n);
        long long int l[n], k[n+1], d[n+1],ans[n];
        for (i = 0; i < n; i++)
            scanf("%lld", &l[i]);
        scanf("%lld %lld %lld", &a, &b, &c);
        cin >> s;
        x = 1;
        y = n;
        di = 1;
        k[0] = 1;
        d[0] = 0;
        for (i = 1; i <= n; i++) {
            if (s[i - 1] == 'A') {
                k[i] = k[i-1];
                d[i] = (d[i-1] + a) % c;
                ans[i - 1] = (fastmultiply(k[i], l[x - 1], c) + d[i]) % c;
            } else {
                if (s[i - 1] == 'M') {
                    k[i] = fastmultiply(k[i-1] , b, c);
                    d[i] = fastmultiply(d[i-1] , b, c);
                    ans[i - 1] = (fastmultiply(k[i], l[x - 1], c) + d[i]) % c;

                } else {
                   // swap(l[x - 1], l[y - 1]);
                    swap(x,y);
                    di = -di;
                    k[i] = k[i-1];
                    d[i] = d[i-1];
                    ans[i - 1] = (fastmultiply(k[i], l[x - 1], c) + d[i]) % c;
                }

            }
            x = x + di;
            if (i != n)
                printf("%lld ", (ans[i - 1] + c) %c);
            else
                printf("%lld\n", (ans[i-1] + c) % c);
        }

    }
    return 0;

}

