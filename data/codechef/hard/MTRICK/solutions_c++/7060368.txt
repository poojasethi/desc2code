#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
 
#ifndef ONLINE_JUDGE
inline int getchar_unlocked()
{
	return getchar();
}
#endif
inline long long scn()
{
	long long n = 0, c = getchar_unlocked(),t=0;
	while(c < '0' || c > '9')
	{
		if(c==45)t=1;
		c = getchar_unlocked();
	}
	while(c >= '0' && c <= '9')n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();
 
	if(t==0)return n;
	else return -n;
}

ll MultMod(ll a,ll b,ll mod){
    a %= mod;
    b %= mod;
    ll ret=0;
    while(b){
        if(b&1){
            ret += a;
            if(ret >= mod) ret -= mod;
        }
        a = a<<1;
        if(a >= mod) a -= mod;
        b = b>>1;
    }
    return ret;
}

int main()
{
	int t=scn();
	while(t--)
	{
	   ll n=scn(),A,B,C,add=0,mult=1;
	   ll a[n];
	   
	   for(int i=0;i<n;i++)
	   a[i]=scn();
	   
	   A=scn();B=scn();C=scn();
	   A=A%C;B=B%C;
	    
	   string task;
	   cin>>task;
	
	   int beg=0,end=n-1;bool turn=1;
	   for(int k=0;k<n;k++)
	   {
	   	  if(task[k]=='R')
	   	  { turn=!turn; 
	   	  }
	   	  else if(task[k]=='A')
	   	  {
	   	  	add=(add%C+A%C)%C;
	   	  }
	   	  else
	   	  {
	   	  	 mult=MultMod(mult,B,C);
	   	  	 add=MultMod(add,B,C);
	   	  }
	   	
	   	  if(turn)
	   	  {
	   	  	 a[beg]=MultMod(a[beg],mult,C);
	   	  	 a[beg]=(a[beg]+add)%C;
	   	  	 
	   	  	 cout<<a[beg];
				  beg++;
	   	  }
	   	  else
	   	  {
	   	  	
	   	  	 a[end]=MultMod(a[end],mult,C);
	   	  	 a[end]=(a[end]+add)%C;
	   	  	
	   	  	 cout<<a[end]; 
				  end--;
	   	  }
	   	  cout<<" ";
}
	   cout<<endl;
	   
	}
}