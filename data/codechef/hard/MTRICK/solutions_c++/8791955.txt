#include<iostream>
#include<stdio.h>
#include<cmath>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
using namespace std;
/*printing definitions*/
#define pi(x) printf("%d\n",(x))
#define pii(x,y) printf("%d %d\n",(x),(y))
#define pl(x) printf("%lld ",(x))
#define pll(x,y) printf("%lld %lld\n",(x),(y))
#define pil(x,y) printf("%d %lld\n",(x),(y))
#define pli(x,y) printf("%lld %d\n",(x),(y))
#define plf(x) printf("%lf\n",(x))
#define plflf(x,y) printf("%lf %lf\n",(x),(y))
/*fast i/p definitions*/
#define getcx getchar_unlocked
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif       
//  CREATED BY: ATUL SEHGAL
inline long long int in()
{
   long long int n=0;
   long long int ch=getcx();//long long int sign=1;
   while( ch < '0' || ch > '9' ){ ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n;//*sign;
}
long long int mulmod(long long int val, long long int n,long long int mod)
{
    long long int q=((double)val*(double)n/(double)mod);
    long long int res=val*n-mod*q;
    res=(res%mod+mod)%mod;
    return res;
}
/*long long int mulmod(long long int a,long long int b,long long int c){
    long long int x = 0,y=a%c;
    while(b > 0){
        if(b&1){
            x = (x+y)%c;
        }
        y = (y*2)%c;
        b /= 2;
    }
    return x%c;
}
*/
long long int arr[1001];
char s[1001];
int main()
{
	long long int a,b,c,t,i,j,n,ans,temp,rcnt,mcnt,p1,p2,extra;
	t=in();
	while(t--)
	{
	    mcnt=1;
	    rcnt=0;
	    j=0;
	    n=in();
		p1=-1,p2=n,extra=0;
		for(i=0;i<n;i++)
            arr[i]=in();
        a=in(); b=in(); c=in();
        scanf("%s",s);
        for(i=0;i<n;i++)
        {
            if(s[i]=='R')
                rcnt++;
            else if(s[i]=='A')
            {
                extra+=a;
                extra%=c;
            }
            else
            {
                extra=mulmod(extra,b,c);
                mcnt=mulmod(mcnt,b,c);
            }
            if(rcnt&1)
            {
                p2-=1;
                j=p2;
            }
            else
            {
                p1+=1;
                j=p1;
            }
            ans=(mulmod(arr[j],mcnt,c)+extra)%c;
            pl(ans);   
        }
        printf("\n");
	}
	return 0;
}