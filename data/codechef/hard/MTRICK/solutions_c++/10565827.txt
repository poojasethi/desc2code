#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_v) (int)(_v).size()
#define all(_v) (_v).begin(),(_v).end()
#define pii pair<int,int>
typedef long long ll;
const int INF = 1000000000;
const ll MOD = 1e9 + 7;

const int MAXN = 100010;
ll arr[1111];
ll A[1111],M[1111];

ll multiply(ll a,ll b,ll c) {
	if(b == 0) return 0;
	long long ret = multiply(a, b >> 1, c);
		ret = (ret + ret) % c;
		if (b & 1) {
			ret = (ret + a) % c;
		}
    return ret;
}

int main() {

    int t; cin >> t;
	while (t --) {
	    int n; cin >> n;
		for (int i = 0; i < n; i ++) cin >> arr[i];

		ll a,b,c;
		cin >> a >> b >> c;

		string s; cin >> s;

		int st = 0, end = n - 1;
		memset(A,0ll,sizeof A);
		for (int i = 0; i < n; i ++) M[i] = 1ll;

		int dir = 1;
		vector < ll > v;
		for (int i = 0; s[i]; i ++) {
			if(s[i] == 'R') {
				swap(st,end);
				dir *= -1;
			}
			else if(s[i] == 'A') A[i] = a;
			else M[i] = b;
			v.pb(arr[st]);
			st += dir;
		}

		// for (int i = 0; i < n; i ++) cout << v[i] << ' ';
		// cout << endl;
		// for (int i = 0; i < n; i ++) cout << A[i] << ' ';
		// cout << endl;
		// for (int i = 0; i < n; i ++) cout << M[i] << ' ';
		// cout << endl;
		
		ll sum = 0,mul = 1;
		for (int i = 0; i < sz(v); i ++) {
			sum += A[i];
			mul = multiply(mul,M[i],c);
			sum = multiply(sum,M[i],c);
			cout << (multiply(v[i],mul,c) + sum) % c << ' ';
		}
		cout << '\n';
	}
	return 0;
}
