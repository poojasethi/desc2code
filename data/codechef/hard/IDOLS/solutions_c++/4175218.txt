#include<stdio.h>
#include<iostream>
#include<string.h>
#include<vector>
#include<queue>
#include<algorithm>
//#include<time.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 2000000007
#define mod 1000000009
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

vi g[N];
int d[N],a[N],fa[N],s[N],sz[N];
void dfs(int u)
{
	s[u]=0,sz[u]=1;
	for(int i=0;i<g[u].size();i++)
	{
		int j=g[u][i];
		d[j]=d[u]+1;
		dfs(j);
		if(s[u]==0||sz[s[u]]<sz[j])s[u]=j;
		sz[u]+=sz[j];
	}
}
int cnt,w[N],id[N],st[N],p,b[N],t[N<<2],c[N<<2];
void go(int u)
{
	w[u]=++cnt;id[u]=p;b[cnt]=u;
	if(s[u])go(s[u]);
	for(int i=0;i<g[u].size();i++)
	{
		int j=g[u][i];
		if(j==s[u])continue;
		p++;st[p]=cnt+1;go(j);
	}
}
void up(int p)
{
	if(t[p<<1]>t[p<<1|1])t[p]=t[p<<1],c[p]=c[p<<1];
	else if(t[p<<1]<t[p<<1|1])t[p]=t[p<<1|1],c[p]=c[p<<1|1];
	else t[p]=t[p<<1],c[p]=c[p<<1]+c[p<<1|1];
}
#define lst p<<1,l,m
#define rst p<<1|1,m+1,r
void build(int p,int l,int r)
{
	if(l==r){int x=b[l];t[p]=a[x]-d[x];c[p]=1;return;}
	int m=(l+r)>>1;
	build(lst);build(rst);
	up(p);
}
void update(int p,int l,int r,int x,int v)
{
	if(l==r){t[p]=v;return;}
	int m=(l+r)>>1;
	if(x<=m)update(lst,x,v);
	else update(rst,x,v);
	up(p);
}
pii query(int p,int l,int r,int x,int y)
{
	if(l>=x&&r<=y)return mp(t[p],c[p]);
	int m=(l+r)>>1;
	pii a=mp(-inf,0),b=mp(-inf,0);
	if(x<=m)a=query(lst,x,y);
	if(y>m)b=query(rst,x,y);
	if(a.x>b.x)return a;
	if(a.x<b.x)return b;
	a.y+=b.y;
	return a;
}
int main()
{
	int i,j,k,T,n,m;
	while(~scanf("%d%d",&n,&m))
	{
		for(i=1;i<=n;i++)scanf("%d",&a[i]);
		for(i=2;i<=n;i++)
		{
			scanf("%d",&j);g[j].pb(i);fa[i]=j;
		}
		fa[1]=0;d[1]=0;p=0;cnt=0;st[0]=1;
		dfs(1);go(1);
		build(1,1,n);
		//DBG(m)
		while(m--)
		{
			scanf("%d%d",&k,&i);
			if(k==0)
			{
				scanf("%d",&j);
				update(1,1,n,w[i],j-d[i]);
			}
			else
			{
				int x=i,ans=-inf,res;
				while(x)
				{
					//DBG(x)
					int p=id[x];
					pii c=query(1,1,n,st[p],w[x]);
					//cerr<<c.x<<" "<<c.y<<"\n";
					if(c.x>ans)ans=c.x,res=c.y;
					else if(c.x==ans)res+=c.y;
					x=b[st[p]];
					x=fa[x];
				}
				printf("%d %d\n",ans+d[i],res);
			}
		}
	}
	return 0;
}