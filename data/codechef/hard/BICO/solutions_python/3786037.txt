def triangle(n):
    if n == 0:
        return []
    elif n == 1:
        return [[1]]
    else:
        new_row = [1]
        result = triangle(n-1)
        last_row = result[-1]
        for i in range(len(last_row)-1):
            new_row.append(last_row[i] + last_row[i+1])
        new_row += [1]
        result.append(new_row)
    return result

pas = triangle(100)

def main():

    for i in range(input()):
        R,C,G = map(int,raw_input().split())
        
        moves = 0
        L = []
        while(G > 0):
            X = R
            Y = R
            curr = pas[R][C]
            if(curr < G):
                
                while(pas[X][C] < G and G >= pas[X+1][C]):
                    X+=1
                    
                S = pas[X][C]
                
            elif(curr > G):
                
                while(pas[Y][C] > G):
                    Y-=1
                    
                S = pas[Y][C]
            else:
                
                S = pas[X][C]

            L.append(S)
            moves+=1
            G-=S
            C-=1

        print moves
        solution = ""
        for element in L:
            solution+=(str(element)+" ")

        print solution.strip()
    
main()
