
C = [[0 for x in xrange(100)] for x in xrange(100)]

def dp():
    for i in range(100):
        for j in range(min(99, i)):
            if j == 0 or j == i:
                C[i][j] = 1
            else:
                C[i][j] = C[i - 1][j - 1] + C[i - 1][j];

def work(r, c, g):
    maxUsed = -1
    ans = []
    x = r
    y =  c
    while C[x][y] < g:
        x = x + 1
        if x == 100:
            x = 99;
            break;
    while C[x][y] > g:
        x = x - 1;
        if x < 0:
            x = 0;
            break;
    if C[x][y] == g:
        print 1
        print g
        return;

    ans += [C[x][y]]
    g -= C[x][y]
    maxUsed = C[x][y]
    y = y - 1;
    while g > 0:
        while C[x][y] < g and C[x][y] <= maxUsed:
            x = x + 1;
            if x == 100:
                x = 99;
                break;
        while C[x][y] > g or C[x][y] >= maxUsed:
            x = x - 1;
            if x < 0:
                x = 0;
                break;
        ans += [C[x][y]]
        g -= C[x][y];
        y = y - 1;

    print len(ans);
    s = ""
    for q in ans:
        s += str(q) + " "
    print s


if __name__ == '__main__':
    dp()
    T = int(raw_input())
    while T > 0:
        T = T - 1;
        r, c, g = map(int, raw_input().split());
        work(r, c, g)
    exit(0)
