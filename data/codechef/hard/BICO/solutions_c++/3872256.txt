#include <iostream>
#include <vector>

#include <cstdio>
#include <cassert>

using namespace std;
typedef long long ll;
const int N =100;
const ll G =1e12;
ll M[N][N];

void Pascal(){int i,j;
for(i=0;i<N-1;i++)
    {

        M[i][0]=1;
        M[i][i+1]=0;
    }
    M[N-1][0]=1;
    for(i=1;i<N;i++)
        for(j=1;j<N;j++)
        M[i][j]=M[i-1][j-1]+M[i-1][j];
}

void solve(int c,ll g){
int r;
for(;r<N&& M[r][c]<g;r++);
assert(r<N);
if(M[r][c]>g)r--;
vector<ll> v;
v.push_back(M[r][c]);
g-=M[r][c];

while(g){
         c--;
         assert(c);
         for(;M[r][c]>g;r--);
    v.push_back(M[r][c]);
    g-=M[r][c];

}

cout<<v.size()<<endl;
for(int i=0;i<v.size();i++)


    cout<<v[i]<<' ';
    cout<<endl;

}
int main()
{
    int t, r, c;
    ll g;
    Pascal();

    cin >> t;
    while (t--)
    {
        cin >> r >> c >> g;
        solve(c, g);
    }

    return 0;
}
