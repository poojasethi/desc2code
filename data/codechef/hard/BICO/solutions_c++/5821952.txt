#include<iostream>
#include<string.h>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cmath>
#include<map>
#include<bitset>
using namespace std;
#define ll long long
#define MOD 1000000009
#define infi (int)1e9
#define FOR(i,a,b) for(i = a; i < b; i++)
#define FORD(i,a,b) for(i = a; i >= b; i--)
#define REP(i,a) for(i = 0;i <= a; i++)
#define REPD(i,a) for(i = a; i >= 0; i--)
#define s(n)  scanf("%d", &n)
#define sc(n)  scanf("%c", &n)
#define sl(n) scanf("%lld", &n)
#define sf(n) scanf("%f", &n)
#define ss(n) scanf("%s", n);
#define all(a) a.begin(), a.end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define fill(a, v) memset(a, v, sizeof(a))
#define PI 3.1415926535897932384626
#define MAX 1000000000000
ll board[105][105];
ll bino(int n, int r)
{
    if(board[n][r] != 0) return board[n][r];
    int i, j;
    int qq = n;
    ll ans = 1;
    for(j = 1; j <= r; j++,n--) {
        if(n % j == 0)
            ans *= (n / j);
        else if (ans % j == 0) {
            ans = (ans / j) * n;
        } else
            ans = (ans * n) / j;
    }
    board[qq][r] = ans;
    return ans;
}
int main()
{
    //cout << board[5][41]<<endl;
    board[0][0] = 1;
    int t, i, j;
   //cout << bino(150, 10) << endl;
    s(t);
    while(t--) {
        int c, r;
        ll g;
        s(r);
        s(c);
        sl(g);

        ll val;
        vector<ll> vec;

        while (g != 0) {
            int row = c;
            FOR(i, row, 100) {
                ll vv = bino(i, c);
                if(vv > g) {
                    break;
                } else val = vv;
            }
         //   cout << i <<"   , " << row << "    . "<< c<<"     /  " ;
          /*  if(i == row) {

                FORD(i, row, 0) {
                    if(i >= c) {
                 //       cout << " ( " << i << "  , " << c <<"  ) " ;
                        ll vv = bino(i, c);
                    //    cout <<vv << " . ";
                        if(vv <= g){
                            val = vv;
                            break;
                        }
                    }
                }
            }*/
            g -= val;
           // cout <<"   "<< val <<"    "<< g<< endl;
            vec.push_back(val);
            c--;
        }
        int len = vec.size();
        printf("%d\n", len);
        FOR(i, 0, len) printf("%lld ", vec[i]);
        cout << endl;
    }
}
