#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long ll;
vector<long long> mat[2001];
main()
{
      int tc,i,j;
      scanf("%d",&tc);
      for(i=0;i<=2000;i++)
      {
          for(j=0;j<=2000;j++)
          mat[i].push_back(0);
      }
      for(i=0;i<=2000;i++)
      mat[i][i]=1;
      for(i=0;i<=2000;i++)
      mat[i][0]=1;
      for(i=2;i<=2000;i++)
      {
         for(j=1;j<=i;j++)
         {
             mat[i][j]=mat[i-1][j]+mat[i-1][j-1];
         }
      }
      /*for(i=0;i<10;i++)
      {
          for(j=0;j<=20;j++)
          printf("%lld ",mat[i][j]);
          printf("\n");
      }*/
     // printf("%lld ",mat[1000][50]);
      while(tc--)
      {
           int r,c;
           ll g;
           scanf("%d %d %lld",&r,&c,&g);
           if(c<=1)
           {
                   printf("1\n");
                   printf("%lld\n",g);
           }
           else
           {
               vector<ll> v1;
               vector<ll> :: iterator it1;
               int row=2000,prevrow,prevcol;
               ll val;
               int visited=0;
               while(g>0 && c>=0)
               {
                         for(i=0;i<=row;i++)
                         {
                              if(mat[i][c]<=g)
                              {
                                 val = mat[i][c];
                                 prevcol = c;
                                 prevrow=i;
                              }
                              else 
                              break;
                         }
                         v1.push_back(val);
                         c--;
                         visited++;
                         row = prevrow-1;
                         g=g-val;
                         //printf("%lld\n",g);
               }
               printf("%d\n",visited);
               for(it1=v1.begin();it1!=v1.end();it1++)
               printf("%lld  ",*it1);
               printf("\n");
           }
      }
      return 0;
}
