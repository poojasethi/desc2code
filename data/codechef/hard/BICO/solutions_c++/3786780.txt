/*BiCo Gaming Grid*/
#include<iostream>
using namespace std;
long long a[2000005][50],limit[50];
int floor(long long a[2000005][50],long long g,int j)
{
    int low=0,high=limit[j],mid=(low+high)/2;
    //cout<<"high="<<high<<endl;
    while(low<=high)
    {   mid=(low+high)/2;
        //cout<<a[mid][j]<<endl;
        if(g>a[high][j])
            return high;
        if(g==a[mid][j])
            return mid;
        if(g>a[mid][j])
        {   if((mid==high||a[mid+1][j]>g))
                return mid;
            low=mid+1;
        }
        else
        {   if(mid==0||a[mid-1][j]<g)
                return mid-1;
            high=mid-1;
        }
    }
}
int main()
{
    int i,j;
    for(i=0;i<=2000004;i++)
    {   for(j=0;j<50;j++)
        {   if(j==0)
                a[i][j]=1;
        }
    }
    //int c;
    long long d=1000*1000;
    d*=1000000;
    d+=2;
    for(j=1;j<=50;j++)
    {   //c=1;
        for(i=1;i<2000004;i++)
        {   a[i][j]=a[i-1][j-1]+a[i-1][j];
            if(a[i][j]>d)
            {   limit[j]=i-1;
                break;
            }
        }
        //if(!c)
            //break;
    }
    //cout<<a[2000004][3]<<endl;
    //cout<<i<<" "<<j<<" "<<a[i][j];
    int t;
    cin>>t;
    while(t--)
    {   long long r,c,g;
        cin>>r>>c>>g;
        int ans=0;
        long long arr[60];
        for(j=c;g&&j>=0;j--)
        {   if(j==1)
            {   arr[ans++]=g;
                break;
            }
            if(!j)
            {   arr[ans++]=1;
                break;
            }
            i=floor(a,g,j);
            //cout<<i<<endl;
            arr[ans++]=a[i][j];
            g-=a[i][j];
        }
        cout<<ans<<endl;
        for(i=0;i<ans;i++)
            cout<<arr[i]<<" ";
        cout<<endl;
    }
    return 0;
}
