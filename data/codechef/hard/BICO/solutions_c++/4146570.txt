#include<bits/stdc++.h>

using namespace std;

vector<long long int> pre_com[50];

void m_ncr(int n)
{
    int r=2;
    long long int res=(long long)n*(long long )(n-1)/2;
    for(;r<min(n,50);r++)
    {
        res=(res*(long long)(n-r))/(long long)(r+1);
        if(res>0ll)
            pre_com[r+1].push_back(res);

    }
}

int findroot(int i,long long int find1)
{   int mid,root;

        int first=0;
        int last=pre_com[i].size()-1;
        //printf("\n last=%d",last);
        while(first<=last)
        {
            mid=first+(last-first)/2;
          //  printf("\n %d %lld",mid,pre_com[i][mid]);
            if(pre_com[i][mid]<=find1)
            {
                root=mid;
                first=mid+1;
            }
            else
            {
                last=mid-1;
            }
        }
        return root;
}






int main()
{
    for(int i=3;i<=20000;i++)
        m_ncr(i);


    int t;
    scanf("%d",&t);
    while(t--)
    {
        int r,c;
        long long int g;
        scanf("%d%d%lld",&r,&c,&g);
        if(c==0)
        {
         printf("%d\n%lld\n",1,g);
        }
        else{
        int c1=c,root;
        vector<long long int> ans;
        while(c>2 && g>0 )
        {
            int temp1=findroot(c,g);
            //printf("\n temp1=%d",temp1);
            g=g-pre_com[c][temp1];
            ans.push_back(pre_com[c][temp1]);
            c--;
        }

        if(c==2 && g>0)
        {
            int first=2,last=15000;
            while(first<=last)
            {
                int mid=first+(last-first)/2;
                if( ((long long )mid*(long long)(mid-1)) /2ll <=g)
                {
                    root=mid;
                    first=mid+1;
                }
                else
                    last=mid-1;

            }
            ans.push_back(((long long )root*(long long)(root-1)) /2ll);
            g=g-((long long )root*(long long)(root-1)) /2ll;
            c=c-1;
        }
        if(c==1 && g>0)
        {
            ans.push_back(g);
            c=c-1;
        }
        printf("%d\n",c1-c);
        for(vector<long long int>::iterator it=ans.begin();it!=ans.end();it++)
            printf("%lld ",*it);
        printf("\n");
        }

    }
    return 0;
}
