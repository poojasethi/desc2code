#include<bits/stdtr1c++.h>
using namespace std;


typedef long long LL;
LL MAX;
LL ncr[105][55];

LL solve(int n,int r)
{
    if(r>n)
        return 0;
    if(n==r || r==0)
        return 1;
    
    LL &ret=ncr[n][r];
    if(ret!=-1)
        return ret;
    ret=solve(n-1,r)+solve(n-1,r-1);
    return ret;
}

vector<LL> v[55];
vector<LL> ans;
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("2.in","r",stdin);
        
    #endif // ONLINE_JUDGE
    
    ios::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    
    MAX=1;
    for(int i=0;i<12;i++)
        MAX*=10;
    //cout<<MAX<<endl;
    memset(ncr,-1,sizeof ncr);
    
    for(int n=0;n<105;n++)
    {
        for(int c=0;c<55;c++)
        {
            ncr[n][c]=solve(n,c);
            if(ncr[n][c]>MAX)
                {
                    ncr[n][c]=MAX*2;
                     //break;
                }
            v[c].push_back(ncr[n][c]);
        }
    }
     for(int c=0;c<55;c++)
        sort(v[c].begin(),v[c].end());
     int t;
     cin>>t;
     while(t--)
     {
         ans.clear();
         int r,c;
         LL g,a;
         cin>>r>>c>>g;
         a=g;
         while(g && c>=0)
         {
             
             int ind=lower_bound(v[c].begin(),v[c].end(),a)-v[c].begin();
             LL b=v[c][ind];
             if(b>a)
                b=v[c][ind-1];
             //cout<<g<<" "<<b<<" "<<a<<endl;
             ans.push_back(b);
             g-=b;
             a=min(g,b);
             //cout<<b<<" ";
             c--;
         }
         cout<<ans.size()<<endl;
         for(int i=0;i<ans.size();i++)
         {
             if(i)
                cout<<" ";
             cout<<ans[i];
         }
         cout<<endl;
     }
    
    
    
   
 
    return 0;
    
}
