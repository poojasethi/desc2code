#include<iostream>
#include<cstdio>
#include<cstdlib>
using namespace std;
int cmp(const void *a,const void *b)
{
    return *(long long *)a - *(long long *)b;
}
main()
{
    int t;
    scanf("%d",&t);
    long long C[101][101]={{0},{0}};
    for(int i=0;i<100;i++)
    {
        C[i][0]=1;
        C[i][i]=1;
    }
    for(int i=1;i<100;i++)
    {
        for(int j=1;j<i;j++)
        {
         if(i==j) continue;
         if(C[i-1][j]+C[i-1][j-1]>1000000000000LL) C[i][j]=1000000000001LL;
         else
         C[i][j]=C[i-1][j-1]+C[i-1][j];
        }
    }
   /* for(int i=90;i<100;i++)
    {
        for(int j=90;j<100;j++)
        {
            cout<<C[i][j]<<" ";
        }
        cout<<"\n";
    }*/
   for(;t;t--)
   {
       long long r,c,g,cnt=0,arr[100],k=0;
       scanf("%lld %lld %lld",&r,&c,&g);
      if (c <= 1) {
      printf("%d\n", 1);
      printf("%lld\n", g);
      continue;
    }
       while((c>=0)&&(g>0))
       {
        int beg=0,en=99;
        while(beg<en)
        {
           int mid=(beg+en)/2;
           if(C[mid][c]<=g && C[mid+1][c]>g) { g-=C[mid][c]; arr[k++]=C[mid][c]; cnt++; c--; break; }
           else if(mid+1==en && C[mid+1][c]<=g)  { g-=C[mid+1][c]; arr[k++]=C[mid+1][c]; cnt++; c--; break; }
           else if(C[mid][c]>g) en=mid;
           else if(C[mid][c]<g) beg=mid;
        }
       }
       printf("%d\n",cnt);
       for(int i=0;i<k;i++)
        printf("%lld ",arr[i]);
       printf("\n");
   }

}
