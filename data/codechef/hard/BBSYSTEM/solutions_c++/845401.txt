#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<string>

using namespace std;


const int mod = 5000*100+9;
const int maxn = 233*10000;

char deg[maxn];
int d[maxn],min_div[maxn];
long long g[maxn];

int num[maxn];

void getMinDiv(){
	int i,j;
	min_div[1]=1;
	for(i=2;i*i<=maxn;i++){
		if(!min_div[i]){
			min_div[i]=i;
			for(j=i*i;j<=maxn;j+=i)if(!min_div[j]){
				min_div[j]=i;
			}
		}
	}
	for(;i<maxn;i++)
		if(!min_div[i])
			min_div[i]=i;
}





int main(){
	int n,i,t;
	getMinDiv();
	deg[1]=0;
	d[1]=1;
	// find number of divisors of n
	for(n=2;n<maxn;n++){
		i=n/min_div[n];
		if(min_div[n]==min_div[i]){
			deg[n]=deg[i]+1;
			d[n]=(d[i]*(deg[n]+1))/(deg[i]+1);
		}else{
			deg[n]=1;
			d[n]=2*d[i];
		}
	}
	g[3]=2;
	num[2]=2;
	for(n=4;n<maxn;n++){
		num[d[n]]++;
		g[n]=(g[n-1]*num[d[n]])%mod;
	}
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		if(n>=maxn || g[n]==0)
			printf("%d\n",mod-1);
		else
			printf("%lld\n",g[n]-1);
	}
	return 0;
}

