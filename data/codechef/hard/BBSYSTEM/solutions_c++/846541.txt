#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
using namespace std;

typedef long long ll;

const int N = 2229283, mod = 5e5+9;

int cntDiv[N+5], cnt[N+5], smallestDiv[N+5];
ll res[N+5];

void Sieve(){
	for(int i = 2; i*i <= N; i++)
		if (smallestDiv[i] == 0)
			for(int j = i*i; j <= N; j+=i)
				smallestDiv[j] = i;
}

int CountDivisors(int n){
	if (cntDiv[n]) return cntDiv[n];
	if (smallestDiv[n] == 0) return cntDiv[n] = 2;
	int pow = 0, tmp = n, x = smallestDiv[n];
	while (tmp % x == 0) tmp /= x, pow++;
	return cntDiv[n] = (pow+1) * CountDivisors(tmp);
}

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	Sieve();
	res[1] = cntDiv[1] = 1;
	int T, n, x;
	for(int i = 2; i < N; i++){
		x = CountDivisors(i);
		res[i] = (res[i-1] * (++cnt[x] % mod)) % mod;
	}
	
	scanf("%d", &T);
	while (T--){
		scanf("%d", &n);
		if (n >= N) printf("%d\n", mod-1);
		else printf("%lld\n", res[n]-1);
	}

	return 0;
}