#include<iostream>
#include<stdio.h>
#include<math.h>
#include<string.h>
#include<map>
#include<climits>
#include<algorithm>
#include<vector>
using namespace std;

#define MAXi 2230000
#define SQRT 1500
#define MOD 500009
vector <bool> isprime(MAXi);
int minprime[MAXi]={0};
int deg[MAXi],divi[MAXi];
int sieve()
{
    for(int i=2;i<SQRT;i++)
            for(int j=i;i*j<MAXi;j++)
                if(!minprime[j*i])
                    minprime[j*i]=i;
    minprime[2]=2;
    for(int i=0;i<MAXi;i++) if(!minprime[i]) minprime[i]=i;
    return 0;
}
int gen()
{
    deg[1]=1;
    divi[1]=1;
    for(int i=1;i<MAXi;i++)
    {
        int divisor=i/minprime[i];
        if(minprime[divisor]!=minprime[i])
        {
            deg[i]=1;
            divi[i]=2*divi[divisor];
        }
        else
        {
            deg[i]=deg[divisor]+1;
            divi[i]=divi[divisor]*(deg[i]+1)/(deg[divisor]+1);
        }
    }
    return 0;
}
int temp[1500]={0};
int ans[MAXi];
int res()
{
    ans[0]=1;
    for(int i=1;i<MAXi;i++)
    {
        temp[divi[i]]++;
        ans[i]=(long long)(temp[divi[i]])*ans[i-1]%MOD;
    }
    return 0;
}
int main()
{
    int t;
    long long n;
    sieve();
    gen();
    //for(int i=1;i<100;i++) printf("%d %d\n",i,divi[i]);
    res();
    scanf("%d",&t);
    while(t--)
    {
        scanf("%lld",&n);
        if(n<MAXi)
            printf("%d\n",(ans[n]+MOD-1)%MOD);
        else printf("%d\n",(ans[MAXi-1]+MOD-1)%MOD);
    }
    return 0;
}
