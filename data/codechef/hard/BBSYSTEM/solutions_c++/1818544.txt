#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sqr(x) (x) * (x)
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int MOD = (int)5e5 + 9;
const int maxn = 2229283;
int p[maxn],deg[maxn],cnt[maxn];
int cur[500];
LL res[maxn];
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	for (int i = 0; i < maxn; i++) {
		p[i] = i;
	}
	for (int i = 2; i * i < maxn; i++) {
		if (p[i] != i) continue;
		for (int j = i * i; j < maxn; j += i) {
			if (p[j] == j) {
				p[j] = i;
			}
		}
	}
	cnt[1] = 1;
	res[1] = 1;
	for (int i = 2; i < maxn; i++) {
		if (p[i / p[i]] == p[i]) {
			deg[i] = deg[i / p[i]] + 1;
			cnt[i] = cnt[i / p[i]] / (deg[i / p[i]] + 1) * (deg[i] + 1);
		} else {
			deg[i] = 1;
			cnt[i] = cnt[i / p[i]] * 2;
		}
		cur[cnt[i]]++;
		res[i] = res[i - 1] * cur[cnt[i]] % MOD;
	}
	int T; cin >> T;
	while(T--) {
		int x;
		scanf("%d",&x);
		if (x >= maxn) {
			printf("500008\n");
		} else {
			printf("%lld\n",res[x] - 1);
		}
	}
	return 0;
}
