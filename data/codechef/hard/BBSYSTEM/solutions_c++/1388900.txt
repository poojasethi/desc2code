#include<stdio.h>

#define max 2229283
#define mod 500009
#define np 164644
#define max_p 238

using namespace std;

int ar[max];
long long div[max];
bool primes[max];
int list[np];
int divisors[max];


int main()
{
	int i, j, p, t, k, m, n, tj;
	long long val;
	bool done;
	for(i=0;i<max;i++)
		div[i]=ar[i]=0;
	for(i=0;i<np;i++)
		primes[i]=false;
	primes[0]=primes[1]=true;
	list[0]=2;
	k=1;
	for(j=2;2*j<max;j++)
		primes[2*j]=true;
		
	for(i=3;i<max;i+=2)
		if(!primes[i])
		{
			list[k++] = i;
			for(j=2*i;j>0&&j<=max;j+=i)
				primes[j]=true;
		}
	for(i=1;i<max;i++)
		divisors[i]=1;
	div[0]=div[1]=1;
	divisors[1]=1;
	for(i=2;i<max;i++)
	{
		if(!primes[i])
		{
			ar[2]++;
			divisors[i]=2;
			//for(tj=i*i;tj<max&&tj>0;tj*=i)
				//divisors[tj] = divisors[tj/i]+1;
			div[i] = (div[i-1]*ar[2])%mod;
		}
		else
		{
			n=1;
			t = i;
			done = false;
			for(j=0;j<np-1&&t>1;j++)
			{
				p=0;
				while(t%list[j]==0)
				{
					p++;
					t /= list[j];
					done = true;
				}
				n *= (p+1);
				if(done&&t>1)
				{
					n *=divisors[t];
					break;
				}	
			}
		//	if(!done&&t>1)
			//	n = divisors[t];
			if(n==1)
				printf("HERE: %d\n", i);
			divisors[i]=n;
			ar[n]++;
			val = (div[i-1]*ar[n])%mod;
			div[i]=val;
		}
	/*	if(div[i]==0)
		{
			printf("Here;%d %d %lld %lld\n", i, ar[n], div[i-1], div[i]);
			break;
		}*/
	}
	scanf("%d", &t);
	while(t--)
	{
		scanf("%d", &n);
		if(n>=max)
			printf("500008\n");
		else
			printf("%lld\n", div[n]-1);
	}
	return 0;
}