#include<stdio.h>
#include<iostream>
#include<cmath>
using namespace std;

int x;
long long int k[2000];
long long int ans[2229284];
int div[2229284];
int n,t;
long long int rem=500009;
int prime;
int p[200000];
int tmp;
bool a[2229284];

inline void inp(int &u)
{
u=0;
x=getchar_unlocked();
while(x>='0' && x<='9')
{
u=(u<<3)+(u<<1)+(x-'0');
x=getchar_unlocked();
}
}

inline long long int M(long long int x)
{
return (x+rem)%rem;
}
int xtmp;
inline void g(int x,int &cnt,int prm)
{
if(a[x])
{
div[x]=2;
cnt=2;
k[2]++;
return ;
}
xtmp=x;
cnt=1;
while(x>1)
{
if(div[x]!=-1)
{cnt*=div[x];break;}
tmp=0;
while(1)
{
if(x%(p[prm])!=0)
{prm++;continue;}
while(x%(p[prm])==0)
{
x/=p[prm];
tmp++;
}
prm++;
break;
}
cnt=cnt*(tmp+1);
}
div[xtmp]=cnt;
k[cnt]++;
}
 
int main()
{
for(int i=1;i<=2229283;i++)
{
a[i]=true;
}
a[1]=false;
for(int i=2;i<=sqrt(2229283);i++)
{
if(!a[i])
continue;
for(int j=i;j*i<=2229283;j++)
{
a[j*i]=false;
}
}
int cnt=0;
//max_k=-1;
for(int i=1;i<=2229283;i++)
{
div[i]=-1;
if(a[i])
{p[prime]=i;prime++;}
}
int count,pr=0;
ans[1]=1;
for(int i=0;i<2000;i++)
{
k[i]=0;
}
ans[1]=1;
for(int i=2;i<=2229283;i++)
{
//cout<<i<<endl;
count=0;
g(i,count,pr);
ans[i]=(ans[i-1]*k[count])%rem;
}
//cout<<h<<endl;
//cout<<max_k<<endl;
inp(t);
for(int i=0;i<t;i++)
{
inp(n);
if(n<=2229283)
printf("%lld\n",M(ans[n]-1));
else
printf("%lld\n",M(-1));
}
return 0;
}