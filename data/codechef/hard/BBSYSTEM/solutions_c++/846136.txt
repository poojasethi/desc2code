#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <string>
#include <queue>
#include <cassert>
#define rep(i,a,n) for(int i=a;i<n;i++)
#define in(n) scanf("%d",&n)
#define inl(n) scanf("%lld",&n)
#define out(n) printf("%d ",n)
#define outln(n) printf("%d\n",n)
#define outl(n) printf("%lld ",n)
#define outlln(n) printf("%lld\n",n)
#define LL long long 
#define pb push_back
#define f first
#define s second
using namespace std;
#define maxn 2229283
#define mod 500009
int fdiv[maxn],divn[maxn];
int sum[maxn],res[maxn];
int main()
{
	for(int i=1;i<maxn;i++)fdiv[i] = i;
	for(int i=2;i*i<maxn;i++)
	{
		if(fdiv[i]==i)for(int j=i*i;j<maxn;j+=i)if(fdiv[j]==j)fdiv[j] = i;

	}
	divn[1] = 1;
	for(int i=2;i<maxn;i++)
	{
		int j = i/fdiv[i];
		if(fdiv[j]!=fdiv[i])divn[i] = divn[j]*2;
		else
		{
			int c=0,tt = j;
			while(tt%fdiv[i]==0)tt/=fdiv[i],c++;
			divn[i] = divn[j]*(c+2)/(c+1);
		}
	}
	res[0] = 1;
	for(int i=1;i<maxn;i++)
	{
		sum[divn[i]] += 1;
		res[i] = ((long long)res[i-1]*(long long)sum[divn[i]])%mod;
		//if(res[i]>=mod) res[i]%=mod;
	}
	int X;
	in(X);
	while(X--)
	{
		int n;
		in(n);
		printf("%d\n",(n>=maxn)?mod-1:(res[n]-1+mod)%mod);
	}
	return 0;
}
