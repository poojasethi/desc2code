#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>

using namespace std;


int const MAXN=2230000;
int const BSZ=1500;

int bucket[BSZ];
 int a[MAXN];
 int mindiv[MAXN];
char isprime[BSZ];



void preprocess() {
	long long i,d;
	long long j;
	for(int i=2;i<1500;i++) 
		isprime[i]=1;
	for(d=2;d<1500;d++) {
		if(isprime[d]) {
		for(j=d*d;j<1500;j+=d) {
			isprime[j]=0;
			mindiv[j]=d;
		}
		for(;j<MAXN;j+=d)
			mindiv[j]=d;
		}
	}
	mindiv[1]=1;
	for(j=2;j<MAXN;j++) {
		if(mindiv[j]==0)
			mindiv[j]=2;
		else {
			int p=mindiv[j];
			int k=j/p,e=2;
			while(k%p==0)
				k/=p,e++;
			mindiv[j]=mindiv[k]*e;
		}
	}
	a[1]=1;
	for(int i=2;i<MAXN;i++) {
		bucket[mindiv[i]]++;
		a[i]=((long long)a[i-1]*(long long)bucket[mindiv[i]])%500009;
	}
}

int main() {
	int tcs;
	scanf("%d",&tcs);
	preprocess();
	while(tcs--) {
		int n;
		scanf("%d",&n);
		if(n<MAXN) {
//			cout<<"he he";
			printf("%d\n",a[n]==0?500008:a[n]-1);
		}
		else {
			printf("%d\n",500008);
//			cout<<"ho ho";
		}
	}
	return 0;
}




 
