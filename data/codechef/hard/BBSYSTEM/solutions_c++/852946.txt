#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cmath>
#include <climits>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;

#define REP(i,n)      FOR(i,0,n)
#define FOR(i,a,b)    for(int i = a; i < b; i++)
#define ROF(i,a,b)    for(int i=a;i>b;i--)
#define GI 		      ({int t;scanf("%d",&t);t;})
#define GL 		      ({LL t;scanf("%lld",&t);t;})
#define GD 		      ({double t;scanf("%lf",&t);t;})
#define pb 	          push_back
#define mp 	          make_pair
#define MOD 	      500009
#define INF	          (int)1e9
#define EPS	          1e-9
#define TR(a,it)      for (typeof((a).begin()) it = (a).begin(); it != (a).end(); ++it)

#define NMAX 2229283
int prime_factor[NMAX], tau[NMAX];
LL res[NMAX] = {0};
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	int T, t = 0, n;

	for (int i = 1; i < NMAX; i++) {
        prime_factor[i] = i;
        tau[i] = 1;
    }

    for (int i = 2; i < NMAX; i++)
        if (prime_factor[i] == i)
            for(int j = i+i; j < NMAX; j+=i)
                prime_factor[j] = i;

    for (int i = 2; i < NMAX; i++) {
        int rem = i, exp = 0;
        for (; rem % prime_factor[i] == 0; exp++)
            rem /= prime_factor[i];
        tau[i] = tau[rem] * (exp + 1);
    }

    int cnt[100000] = {0};
    res[0] = 1;
    for (int i=1; i<NMAX; i++) {
        cnt[tau[i]]++;
        res[i] = res[i-1] * cnt[tau[i]] % MOD;
    }

	scanf("%d", &T);
	while (T--) {
        scanf("%d", &n);
        if (n >= NMAX)
            printf("%d\n", MOD - 1);
        else
            printf("%lld\n", (res[n] - 1 + MOD) % MOD);
	}
	return 0;
}
