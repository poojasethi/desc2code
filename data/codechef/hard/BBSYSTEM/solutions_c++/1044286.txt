#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
const int N = 2300010;
int pri[N],fac[N];
long long f[N];

void prime()
{
	memset(pri,-1,sizeof(pri));
	for(int i = 2; i < N; i ++) {
		if(pri[i] == -1) {
			pri[i] = i;
			if(i >= 4000) continue;
			for(int j = i * i; j < N; j += i)
				pri[j] = i;
		}
	}
}

int cal(int n)
{
	int ans = 1,tmp = n;
	while(pri[n] != -1) {
		int x = n,cnt = 1;
		while(n % pri[x] == 0) n /= pri[x],cnt ++;
		ans = fac[n] * cnt;
		break;
	}
	return fac[tmp] = ans;
}
int main()
{
	fac[1] = 1;
	fac[2] = 2;
	prime();
	long long mod = 500009;
	f[2] = 1;
	int d[2010];
	memset(d,0,sizeof(d));
	d[2] = 1;
	for(int i = 3; i < N; i ++) {
		int x= cal(i);
		d[x] ++;
		f[i] = f[i - 1] * d[x] % mod;
	}
	int n,t;
	scanf("%d",&t);
	while(t --) {
		scanf("%d",&n);
		if(n >= N || f[n] == 0) printf("%lld\n",mod - 1);
		else printf("%lld\n",f[n] - 1);
	}
	return 0;
}
	
