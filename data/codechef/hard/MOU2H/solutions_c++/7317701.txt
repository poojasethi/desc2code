/***  Patience is above Perfection ***/
	/***I believe in ONE GOD ***/

#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<stack>
#include<bitset>
#include<map>
#include<time.h>
#include<list>
#include<iostream>
#include<queue>
#include<iomanip>
#include<assert.h>
#define trace1(x)                    cerr << #x << ": " << x << endl;
#define trace2(x, y)                 cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)              cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)           cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)        cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f)     cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#define ll long long int
#define MAXN 100002
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%lld",&i)
#define sout(i) printf("%d",i)
#define soutl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(int i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define GETCHAR getchar
#define PUTCHAR putchar
	/***MAH Templates MAH Rules **/

template <class T>T sabs(T x){ if(x<0) return x*-1; else return x;}
template<class T> T sgcd(T x ,T y){ if(y==0) return x; else return sgcd(y,x%y);}
template<class T> T smax(T x,T y){ if(x>y) return x; else return y;}
template<class T> T smin(T x,T y){ if(x>y) return y; else return x;}
template <class T> T smod(T a, T b ,T m){T res=1,x=b;while(b>0){if(x&1) res=((res%m)*(x%m))%m;x=(x*x)%m;b=(b>>1);}return res;}


using namespace std;
inline void writeInt(int x) { if(x==-1) { PUTCHAR('-'); PUTCHAR('1'); PUTCHAR('\n'); } else { int i = 10; char buf[11]; // buf[10] = 0;
buf[10] = ' '; do { buf[--i] = x % 10 + '0'; x/= 10; }while(x); do { PUTCHAR(buf[i]); } while (buf[i++] != ' '); } }
inline void fastInput(ll &x) {
register int c = getchar();
x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = getchar());
if(c=='-') {
neg = 1;
c = getchar();
}
for(; c>47 && c<58 ; c = getchar()) {
	x = (x<<1) + (x<<3) + c - 48;
}
	if(neg)
	x = -x;
}
ll mod=1e9+9;
ll t,n;
ll b[1000005],a[1000005],dp[4000005],sum[1000005],dp1[4000001];
int main(){
#ifndef ONLINE_JUDGE
freopen("input.txt","r",stdin);
#endif // ONLINE_JUDGE
fastInput(t);
while(t--){
fastInput(n);
REP(i,0,n)
	{
		fastInput(b[i]);
		sum[i]=0;
	}
REP(i,0,n-1){
a[i]=b[i+1]-b[i];
	if(a[i]>=0)dp[a[i]]=0;
	else dp1[-a[i]]=0;
}
n--;
	sum[0]=2;
	if(a[0]>=0)
	dp[a[0]]=1;
	else dp1[-a[0]]=1;
	REP(i,1,n){
	ll m;
	if(a[i]>=0){
		 m=dp[a[i]];
		dp[a[i]]=dp[a[i]]%mod+(sum[i-1]-dp[a[i]]+2*mod)%mod;
		if(dp[a[i]]>mod) dp[a[i]]%=mod;
		sum[i]=(2*sum[i-1]-m+2*mod)%mod;
		}
		else{
			m=dp1[-a[i]];
		dp1[-a[i]]=dp1[-a[i]]%mod+(sum[i-1]-dp1[-a[i]]+2*mod)%mod;
		if(dp1[-a[i]]>mod) dp1[a[i]]%=mod;
		sum[i]=(2*sum[i-1]-m+2*mod)%mod;

		}
	}
	sum[n-1]-=1;
	sum[n-1]=(sum[n-1]+mod)%mod;
	writeInt((int)sum[n-1]);
	printf("\n");
}

return 0;
}
