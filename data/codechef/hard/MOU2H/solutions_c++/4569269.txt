#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>
#include <assert.h>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i, a, b) for (int _n(b), i(a); i < _n; i++)
#define rep(i, n) FOR(i, 0, n)
#define CL(a, v) memset((a), (v), sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int, int> pii;

/*** TEMPLATE CODE ENDS HERE */

const int maxY = 4000000;
const int Mi = 1000000009;
const int N = 1000005;

ll A[N];
ll S[N];
ll pr[2 * maxY + 10];

int main() {
#ifdef LOCAL_HOST
  freopen("input.txt", "r", stdin);
// freopen("output.txt","w",stdout);
#endif

  ios_base::sync_with_stdio(false);

  int T;
  scanf("%d", &T);
  memset(pr, -1, sizeof(pr));
  for (int t = 0; t < T; ++t) {
    int n;
    scanf("%d", &n);
    for (int i = 0; i < n; ++i) {
      scanf("%d", A + i);
      if (i) A[i - 1] = A[i] - A[i - 1] + maxY;
    }
    if (n == 1) {
      printf("1\n");
      continue;
    }
    for (int i = 0; i + 1 < n; ++i) {
      S[i] = (i > 0 ? S[i - 1] : 0) - (pr[A[i]] > 0 ? S[pr[A[i]] - 1] : 0) +
             (pr[A[i]] == -1);
      S[i] = ((S[i] + S[i - 1]) % Mi + Mi) % Mi;
      pr[A[i]] = i;
    }
    for (int i = 0; i + 1 < n; ++i) pr[A[i]] = -1;
    printf("%d\n", S[n - 2]);
  }

#ifdef LOCAL_HOST
  printf("TIME: %.3lf\n", double(clock()) / CLOCKS_PER_SEC);
#endif

  return 0;
}
