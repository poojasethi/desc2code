#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<climits>
#include<sstream>

#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs; 
typedef pair<int,int> pii;
typedef long long int lld;
typedef long double Lf;
typedef unsigned long long int llu;

#define sz(a)                        int((a).size()) 
#define pb                           push_back 
#define mp                           make_pair
#define F                            first
#define S                            second
#define present(c,x)                 ((c).find(x) != (c).end()) 
#define cpresent(c,x)                (find(all(c),x) != (c).end())
#define tr(c,i)                      for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define rtr(c,i)                      for(typeof((c).rbegin()) i = (c).rbegin(); i != (c).rend(); i++)
#define all(c)                       (c).begin(),(c).end()
#define si(n)                        inp(n)
#define sl(n)                        scanf("%lld",&n)
#define sf(n)                        scanf("%f",&n)
#define sd(n)                        scanf("%lf",&n)
#define ss(n)                        scanf("%s",n)
#define sii(n,m)		     inp(n);inp(m)
#define siii(n,m,r)		     inp(n);inp(m);inp(r)

#define abs(x)                       ((x)<0?-(x):(x))
#define fill(a,v)                    memset((a),(v),sizeof (a))
#define INF                          INT_MAX
#define LINF                         (long long)1e18
#define EPS                          1e-9
#define MODBY 1000000009
#define MAX     

#define getcx getchar_unlocked
 
inline void inp( int &n )
{
n=0;
int ch=getcx();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
n=n*sign;
}

const int mx = 1001000;

int base = 0;

int prev[8*mx];
long long int dp[mx];
int a[mx];
int b[mx];
int main()
{
	int t,n,xx;
	si(t);
	while(t--)
	{
		si(n);
		dp[base+0]=1;
		for(int i=0;i<n;i++)
			si(a[i]);
		for(int i=0;i<n-1;i++)
		{
			b[i] = a[i+1]-a[i] + 4000010;
			prev[b[i]]=-1;
		}
		prev[b[0]]=0;
		for(int i=1;i<n-1;i++)
		{
			if(prev[b[i]]==-1)
			{
				dp[base+i]=((dp[base+i-1]<<1)+1+MODBY)%MODBY;
				prev[b[i]]=i;
				continue;
			}
			if(prev[b[i]]==0)
				dp[base+i]=(dp[base+i-1]<<1);
			else
				dp[base+i]=(dp[base+i-1]<<1)-dp[prev[b[i]]+base-1];
			dp[base+i]=(dp[base+i]+MODBY)%MODBY;
			prev[b[i]]=i;
		}
		printf("%lld\n",dp[base+n-2]);
		base+=n;
	}
	return 0;
}      
