#include <stdio.h>
#include <algorithm>
#include <iostream>
#include <vector>
#include <set>
#include <time.h>
#include <map>
#include <math.h>
#include <string>
#include <sstream>
#include <assert.h>
#include <queue>
#include <string.h>
#include <deque>


using namespace std;
typedef long long ll;
template<typename T> int size(T&a) {return (int)a.size(); }
template<typename T> T sqr(T a) {return a * a; }


#define REP(i, a, b) for(int i = (a); i < (b); ++i)
#define REPD(i, a, b) for(int i = (b) - 1; i >= a; --i)
#define _(a, b) memset(a, b, sizeof(a))
#define vi vector<int> 
#define pii pair<int, int>
#define all(a) a.begin(), a.end()
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
typedef double ld;
const int MAXN = 1002;
ld cnk[MAXN][MAXN];
int a[MAXN];
int p[MAXN];
int main() {
#ifdef air
	freopen("input.txt", "w", stdout);
	printf("50\n");
	REP(t,0,50){
		prin
	}
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
#endif

	REP(i, 0, MAXN) REP(j, 0, MAXN) cnk[i][j] = 0;
	REP(i, 0, MAXN) {
		cnk[i][i] = cnk[i][0] = 1;
		for(int j = 1; j < i; ++j)
			cnk[i][j] = cnk[i - 1][j] + cnk[i - 1][j - 1];
	}
	int test;
	scanf("%d", &test);
	REP(t, 0, test) {
		int n,  k;
		scanf("%d%d", &n, &k);
		REP(i, 0, n) scanf("%d", &a[i]);
		REP(i, 0, k) scanf("%d", &p[i]);
		sort(a, a + n);
		sort(p, p + k);
		ld ex = 0;
		REP(i, 0, n) {
			ld sum = 0;
			REP(j, 0, k)  if (j <= i && k - j - 1 <= n - i - 1) sum += p[j] * cnk[i][j] * cnk[n - i - 1][k - j - 1];
			ex += sum * a[i];
		}
		ex /= cnk[n][k] * 100;
		printf("%.3lf\n", ex);
	}

	
#ifdef air
	printf("\n\n%.3lf", 1.0 * clock() / CLOCKS_PER_SEC);
#endif
}
