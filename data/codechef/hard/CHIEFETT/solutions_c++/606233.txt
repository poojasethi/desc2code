
#define _CRT_SECURE_NO_DEPRECATE

#pragma comment(linker, "/STACK:64000000")


#include <cstdio>

#include <cstdlib>

#include <ctime>

#include <cctype>

#include <cmath>

#include <algorithm>

#include <utility>

#include <set>

#include <map>

#include <vector>

#include <string>

#include <queue>

#include <iostream>

#include <sstream>

#include <stack>

#include <limits>

#include <time.h>

#include <assert.h>

#include <cstring>

#include <list>

#include <bitset>

using namespace std;

 

typedef long long lint;

typedef long long ll;


//template<typename T> inline T Abs(T a){ return a>0 ? a : -a }

template<typename T> inline T sqr(T a){ return a*a; }

template<typename T> inline void relaxMin(T &a,T b){ if (b<a); }

template<typename T> inline void relaxMax(T &a,T b){ if (b>a); }

 

#define _(a,val) memset(a,val,sizeof a);

#define REP(i, a, b) for(int i = (a); i < (b); ++i)

#define REPD(i, a, b) for(int i = (b) - 1; i >= a; --i)

//#define forn(i, n) for(int i = 0; i < (int)(n); i++)

#define forn(i, n) for(int i=0,_n(n); i < _n; i++)

#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)

#define fs first

#define sc second

#define pb push_back

#define mp make_pair

#define all(a) a.begin(), a.end()


const int INF = (int)1E9;

//const int INF = INT_MAX/2-1;

const long double EPS = 1E-12;

const long double PI = 3.1415926535897932384626433832795;

#define y1 usfogiudsogndiogbdouigfbsdlifgsdbg

typedef vector<int> vint;

typedef vector <pair<int,int> > vpint;

typedef vector<vint> vvint;

 

#undef assert

#define assert(expr){if (!(expr)) {char *a = 0; *a = 10;} }

 

double a[1000],b[1000];

double c[1010][1010];

 

void solve(){

int n,k; scanf("%d %d\n",&n,&k);

forn(i,n) scanf("%lf",&a[i]);

forn(i,k) scanf("%lf",&b[i]);

sort(a,a+n);

sort(b,b+k);
 

double ans = 0.0;

forn(i,n){

forn(j,k){
	
        if (j > i) continue;
        if (k - j > n - i) continue;
ans+=c[i][j]*c[n-i-1][k-j-1]*a[i]*b[j];

}
//printf("%.3lf\n",ans0);

}

ans/=c[n][k]*100.0;

printf("%.3lf\n",ans);

}

 

int main(){

#ifdef acm

freopen("input.txt", "rt", stdin);

freopen("output.txt", "wt", stdout);

freopen("error.txt", "wt", stderr);

#endif


c[0][0]=1;

c[1][0]=c[1][1]=1;

for(int i=2;i<=1000;i++){

c[i][0]=1;

for(int j=1;j<=1000;j++)

c[i][j]=c[i-1][j]+c[i-1][j-1];

}

 

 

int t; scanf("%d\n",&t); while(t--)

//while(!feof(stdin))

solve();

 

#ifdef acm

//printf("\n\n\n\n\n%.3lf", clock()*1e-3);

#endif

 

return 0;

}
