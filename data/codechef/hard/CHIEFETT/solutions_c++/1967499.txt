/*
#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
int item[1001],disc[1001];
double dp[1001][1001];
int N,K;
double multi(int x,int a,int b){
       int i,j;
       double ret=1.0;
       for (i=N-x,j=N-a;i>1 && j>1;--i,--j){
           ret*=(1.*i)/j;
       }
       if (i>1) for (;i>1;--i) ret*=i;
       if (j>1) for (;j>1;--j) ret*=(1./j);
       ret*=(K-b);
       for (i=N-K-a+b,j=N-K-x+b+1;i>1 && j>1;--i,--j){
           ret*=(1.*i)/j;
       }
       if (i>1) for (;i>1;--i) ret*=i;
       if (j>1) for (;j>1;--j) ret*=(1./j);
       return ret;
}
double recur(int a,int b,double m){
       if (dp[a][b]>-1.0) return dp[a][b];
       double ctr=(item[a]*disc[b]*m)/100.0;
       if (b==K){
          dp[a][b]=ctr;
       }
       else{
            double ret=0.0,tmp;
            for (int i=a+1;i<=(N-(K-(b+1)));++i){
                tmp=multi(i,a,b);
                //cout << i<< "," << a << "," << b << endl;
                //cout << "MULTI " << multi(i,a,b) << endl;
                ret+=recur(i,b+1,tmp*m);
            }
            dp[a][b]=ret+ctr;
       }
       //cout << dp[a][b] << " = " << a << "," << b << ", " << m << endl;
       return dp[a][b];
}
void solve(){
     scanf("%d %d",&N,&K);
     for (int i=0;i<=N;++i) for (int j=0;j<=K;++j) dp[i][j]=-1.0;
     for (int i=1;i<=N;++i) scanf("%d",&item[i]);
     for (int i=1;i<=K;++i) scanf("%d",&disc[i]);
     item[0]=0;
     disc[0]=0;
     sort(item,item+N+1);
     sort(disc,disc+K+1);
     printf("%.3lf\n",recur(0,0,1.0));
}
int main(){
    int ntest;
    scanf("%d",&ntest);
    while (ntest--){
          solve();
    }
    return 0;
}
*/
#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;
int item[1001],disc[1001];
double dp[1001][1001];
int N,K;
void solve(){
     scanf("%d %d",&N,&K);
     for (int i=1;i<=N;++i) scanf("%d",&item[i]);
     for (int i=1;i<=K;++i) scanf("%d",&disc[i]);
     item[0]=0;
     disc[0]=0;
     sort(item+1,item+N+1);
     sort(disc+1,disc+K+1);
     double p;
     dp[0][0]=0;
     dp[0][1]=0;
     for (int i=1;i<=N;++i){
         for (int j=1;j<=K && j<=i;++j){
             p=(1.*j/i);
             dp[i][j]=((item[i]*disc[j]+dp[i-1][j-1]))*p + (dp[i-1][j]*(1-p));
         }
     }
     printf("%.3lf\n",dp[N][K]/100.0);
}
int main(){
    int ntest;
    scanf("%d",&ntest);
    while (ntest--){
          solve();
    }
    return 0;
}
