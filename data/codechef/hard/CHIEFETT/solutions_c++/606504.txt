#pragma comment(linker, "/STACK:16777216")

#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cfloat>
#include <climits>
#include <cctype>
#include <cmath>
#include <cassert>
#include <ctime>

#include <iostream>
#include <iomanip>
#include <algorithm>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <bitset>
#include <complex>
#include <functional>
#include <numeric>

using namespace std;

template<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << (int)*i << " "; cout << endl; }

typedef long long ll;

const double eps = 1e-10;
const int inf  = 0x3f3f3f3f;
const ll INF = 0x3f3f3f3f3f3f3f3fLL;

#define fr(x,y,z) for(int(x)=(y);(x)<(z);(x)++)
#define rep(x,n) fr(x,0,n)
#define cast(x,t) *({stringstream ss;static t __ret;ss<<x,ss>>__ret;&__ret;})
#define dbg(x) cerr << #x << " == " << x << endl
#define print(x) cout << x << endl

const int maxn = 1 << 10;
double c[maxn][maxn];
int n, k;
int price[maxn];
int discount[maxn];

int read() {
	scanf("%d %d",&n,&k);
	rep(i,n) scanf("%d",price+i+1); sort(price+1,price+n+1);
	rep(i,k) scanf("%d",discount+i+1); sort(discount+1,discount+k+1);
	return 1;
}


void process() {
	double res = 0;
	for(int i = 1; i <= n; i++) {
		for(int x = 1; x <= k; x++) {
			if(x > i) continue;
			if(k-x > n-i) continue;
			res += c[i-1][x-1] * c[n-i][k-x] * price[i] * discount[x];
		}
	}
	printf("%.3lf\n",res / c[n][k] / 100);
}

int main() {
	rep(i,maxn) {
		c[i][0] = c[i][i] = 1.0;
		for(int j = 1; j < i; j++) c[i][j] = c[i-1][j-1] + c[i-1][j];
	}
	int T; cin >> T;
	while(T-- && read()) process();
	return 0;
}
