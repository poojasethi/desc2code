// JAI SAI RAM
#include<stdio.h>
#include<math.h>
#include<algorithm>
using namespace std;
#define gc getchar_unlocked
inline void inp(int &n) {
	n = 0;
	int ch = gc();
	int sign = 1;
	while (ch < '0' || ch > '9') {
		if (ch == '-') sign = -1;
		ch = gc();
	}
	while (ch >= '0' && ch <= '9')
		n = (n << 3) + (n << 1) + ch - '0', ch = gc();
	n = n*sign;
}

double nck[1002][1002];
double dp[1002][1002];

int main()
{
	for(int i=0;i<1002;i++)
		for(int j=0;j<=i;j++)
				nck[i][j]=0.0;
	for(int i=0;i<1002;i++)
	{
		nck[i][i]=nck[i][0]=1;
		for(int j=1;j<i;j++)
			nck[i][j]=nck[i-1][j]+nck[i-1][j-1];
	}
	int tc;inp(tc);
	while(tc--)
	{
		
		int n,k;inp(n);inp(k);
		int a[1002],b[1002];
		double c[1002];
		for(int i=0;i<n;i++)
			inp(a[i]);
		for(int j=0;j<k;j++)
			inp(b[j]);
		sort(a,a+n);
		sort(b,b+k);
		for(int i=0;i<k;i++)
			c[i]=b[i]/100.0;
		for(int j=1;j<=n;j++)
			dp[1][j]=dp[1][j-1]+c[0]*a[j-1];
		for(int i=2;i<=k;i++)
			for(int j=i;j<=n;j++)
			{
				if(i==j)
					dp[i][j]=dp[i-1][j-1]+nck[j-1][i-1]*c[i-1]*a[j-1];
				else
					dp[i][j]=dp[i][j-1]+dp[i-1][j-1]+nck[j-1][i-1]*c[i-1]*a[j-1];
			}
		printf("%.3lf\n",dp[k][n]/(nck[n][k]));
	}
	return 0;
}