#define _CRT_SECURE_NO_WARNINGS
#pragma comment (linker, "/STACK:16777216")
#include <iostream>
#include <algorithm>
#include <numeric>
#include <vector>
#include <queue>
#include <list>
#include <stack>
#include <string>
#include <fstream>
#include <math.h>
#include <limits>
#include <set>
#include <map>
#include <sstream>
#include <stdio.h>
#include <time.h>
#include <memory.h>
#include <cassert>
#include <complex>
using namespace std;

///////////////// macros and typedefs ///////////////////
#define rep(i, n) for (int i = 0, _n = (n); i < _n; ++i)
#define repd(i, n) for (int i = (n)-1; i >= 0; --i)
#define _fill(a, x) memset((a), (x), sizeof((a)))
#define DEB(k) cerr<<"debug: "#k<<"="<<k<<endl;
#define all(c) (c).begin(), (c).end()
#define mp(a, b) make_pair(a, b)
#define l(c) (int)((c).size())
#define sqr(a) ((a)*(a))
#define inf 0x7f7f7f7f
#define pb push_back
#define ppb pop_back
#define x first
#define y second
typedef long long ll;
typedef vector<int> vi;
typedef vector<double> vd;
typedef pair<int,int> pi;

int n, k;
int price[1000];
double discount[1000];
double dp[1001][1001];

void solveCase() {
   scanf("%d %d", &n, &k);
   for (int i = 0; i < n; i++)
      scanf("%d", price+i);
   for (int i = 0; i < k; i++)
      scanf("%lf", discount+i), discount[i] /= 100;
   sort(price, price+n);
   sort(discount, discount+k);
	double ret = 0;
	double kn = k*1./n;
   _fill(dp, -1);
	for (int i = 1; i <= n; i++)
      for (int j = max(1, i+k-n); j <= min(i, k); j++) {
			if (i == 1 && j == 1)
			   dp[i][j] = 1;
			else if (dp[i][j-1] >= 0)
			   dp[i][j] = ((i-j+1)*(k-j+1)) *dp[i][j-1]/ ((j-1)*(n-i-k+j));
			else if (dp[i-1][j] >= 0)
			   dp[i][j] = ((i-1)*(n-i-k+j+1)) *dp[i-1][j]/ ((n-i+1)*(i-j));
			else if (dp[i-1][j-1] >= 0)
			   dp[i][j] = ((i-1)*(k-j+1)) *dp[i-1][j-1]/ ((n-i+1)*(j-1));
			else
			   throw 1;
         ret += /*kn**/dp[i][j]*price[i-1]*discount[j-1];
		}
   ret *= kn;
   printf("%.3lf\n", ret);
}

void solution()
{
   int t;
   scanf("%d", &t);
   while (t--)
      solveCase();  
}

int main()
{
#ifndef ONLINE_JUDGE
   freopen("my.in", "rt", stdin);
   //freopen("my.out", "wt", stdout);
#endif
   solution();
#ifndef ONLINE_JUDGE
   double time = clock()*1./CLOCKS_PER_SEC;
   fprintf(stderr, "Time: %.2lf sec\n", time);
#endif
   return 0;
}