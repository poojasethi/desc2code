/* Divanshu Garg */

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
int ABS(int a) { if ( a < 0 ) return (-a); return a; }
#define fr first
#define se second

/* Relevant code begins here */

/* Input from file or online */

void input() {
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif
}

/* Input opener ends */

double C[1005][1005];

void pre() {
    M(C,0);
    F(i,0,1005) C[i][0] = 1;
    F(i,1,1005) {
        F(j,1,i+1) {
            C[i][j] = C[i-1][j]+C[i-1][j-1];
        }
    }
    // F(i,0,10) {
    //     F(j,0,i+1) cout << C[i][j] << " ";
    //     cout << endl;
    // }
}

int cost[1005];
double dis[1005];

int main(){
    input(); pre();
    int t; S(t);
    while ( t-- ) {
        int n,k;
        S(n); S(k);
        F(i,0,n) S(cost[i]);
        sort(cost,cost+n);
        F(i,0,k) {
            scanf("%lf",&dis[i]);
            dis[i] /= 100.0;
        }
        sort(dis,dis+k);
        double sum = 0.0;
        F(i,0,n) {
            F(j,0,k) {
                double val = cost[i]*dis[j];
                if ( i >= j && n-i-1 >= k-j-1 )
                    sum += (C[i][j]*C[n-i-1][k-j-1]*val);
            }
        }
        sum /= C[n][k];
        printf("%.3lf\n", sum);
    }
    return 0;
}