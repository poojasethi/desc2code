#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>
#include <assert.h>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i, a, b) for (int _n(b), i(a); i < _n; i++)
#define rep(i, n) FOR(i, 0, n)
#define CL(a, v) memset((a), (v), sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int, int> pii;

/*** TEMPLATE CODE ENDS HERE */

#define MOD 1000000007
#define MAXN 1111
int N, B[MAXN];
int dp[MAXN][MAXN];

int main() {
#ifdef LOCAL_HOST
  freopen("input.txt", "r", stdin);
// freopen("output.txt","w",stdout);
#endif

  ios_base::sync_with_stdio(false);

  int T;
  scanf("%d", &T);
  while (T--) {
    scanf("%d", &N);
    rep(i, N) scanf("%d", B + i);
    rep(i, N + 2) rep(j, N + 2) dp[i][j] = 0;
    dp[0][0] = 1;
    rep(i, N) {
      int sum = 0;
      for (int j = N; j >= 0; --j) {
        sum = (sum + dp[i][j]) % MOD;
        if (j + 1 <= B[i]) dp[i + 1][j + 1] = sum;
      }
    }
    int ans = 0;
    rep(i, N + 1) ans = (ans + dp[N][i]) % MOD;
    printf("%d\n", ans);
  }

#ifdef LOCAL_HOST
  printf("TIME: %.3lf\n", double(clock()) / CLOCKS_PER_SEC);
#endif

  return 0;
}
