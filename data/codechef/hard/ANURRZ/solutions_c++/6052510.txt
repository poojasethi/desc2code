#include <bits/stdc++.h>
using namespace std;

#define PB push_back
#define MP make_pair
#define SZ size()
#define all(v) v.begin(), v.end()
#define REP(i, n) for(int i = 0; i < (int)n; i++)
#define ITR(i, j, n) for(int i = j; i < (int)n; i++)
#define mem(array, val) memset(array, val, sizeof(array))
#define READ(filename) freopen(filename, "r", stdin)
#define WRITE(filename) freopen(filename, "w", stdout)
#define Pii pair <int, int>
#define Fr first
#define Sc second
#define Long long long
#define si(a) scanf("%d", &a)
#define sl(a) scanf("%lld", &a)
#define sd(a) scanf("%lf", &a)
#define sii(a, b) scanf("%d%d", &a, &b)
#define sll(a, b) scanf("%lld%lld", &a, &b)
#define sdd(a, b) scanf("%lf%lf", &a, &b)
#define siii(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define slll(a, b, c) scanf("%lld%lld%lld", &a, &b, &c)
#define sddd(a, b, c) scanf("%lf%lf%lf", &a, &b, &c)

#define MAX 1005
int dp[MAX][MAX], N, B[MAX];
const int mod = 1000000007;
int solve(int pos, int taken)
{
   if(pos >= N) return (taken > 1) ? 0:1;
   if(taken > B[pos]) return 0;
   int &res = dp[pos][taken];
   if(res != -1) return res;
   res = solve(pos+1, taken+1);
   if(taken) res = (res + solve(pos, taken-1)) % mod;
   //printf("dp[%d][%d]: %d\n", pos, taken, res);
   return res;
}

int main_(int caseno)
{
   cin >> N;
   REP(i, N) cin >> B[i];
   mem(dp, -1);
   cout << solve(0, 1) << '\n';
}

int main()
{
   ios_base::sync_with_stdio(0); cin.tie(0);
   int t = 1, caseno = 1;
   cin >> t;

   while(caseno <= t) main_(caseno++);

   return 0;
}