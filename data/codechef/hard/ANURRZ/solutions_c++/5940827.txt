#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define MOD 1000000007 // 2 billion

int b[1009];
int dp[1009][1009];
int dp1[1009];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    int t;
    s(t);
    while(t--)
    {
        memset(b,0,sizeof(b));
        memset(dp,0,sizeof(dp));
        memset(dp1,0,sizeof(dp1));
        int n;
        s(n);
        REP(i,1,n)
            s(b[i]);
        dp[0][0] = 1;
        for(int i = n;i > 0;i--)
        {
            dp1[i] = dp1[i+1] + dp[0][i];
            if(dp1[i] > MOD)
                dp1[i] -= MOD;
        }
        REP(i,1,n)
        {
            REP(j,1,min(b[i],i))
            {
                dp[i][j] = dp1[j] + dp[i-1][j-1];
                if(dp[i][j] > MOD)
                    dp[i][j] -= MOD;
            }
            for(int j = n;j > 0;j--)
            {
                dp1[j] = dp1[j+1] + dp[i][j];
                if(dp1[j] > MOD)
                    dp1[j] -= MOD;
            }
        }
        int ans = 0;
        REP(i,1,min(n,b[n]))
        {
            ans += dp[n][i];
            if( ans > MOD )
                ans -= MOD;
        }
        printf("%d\n",ans);
    }
    return 0;
}
