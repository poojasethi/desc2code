#include <stdio.h>

const int N=1001;
const int mod=1000000007;
int dp[2][N];

int main(int argc, char* argv[])
{
    int h, i, j, t, n, a;
    scanf("%d", &t);
    int prevn=0;
    for(h=0;h<t;h++)
    {
        for(i=0;i<2;i++)
        {
            for(j=1;j<=prevn;j++)
            {
                dp[i][j]=0;
            }
        }
        scanf("%d", &n);
        int idx=0;
        dp[idx][1]=1;
        scanf("%d", &a);
        int prevmax=1;
        for(i=1;i<n;i++)
        {
            scanf("%d", &a);
            idx=1-idx;
            for(j=0;j<N;j++)
            {
                dp[idx][j]=0;
            }
            int max=(i+1<a) ? i+1 : a;
            int end=(prevmax+1<max) ? prevmax+1 : max;
            for(j=1;j<=end;j++)
            {
                int pos=(j<2) ? 0 : j-2;
                dp[idx][j]+=dp[1-idx][prevmax]-dp[1-idx][pos];
                if(dp[idx][j]>=mod)
                {
                    dp[idx][j]-=mod;
                }
                if(dp[idx][j]<0)
                {
                    dp[idx][j]+=mod;
                }
            }
            for(j=1;j<=max;j++)
            {
                dp[idx][j]+=dp[idx][j-1];
                if(dp[idx][j]>=mod)
                {
                    dp[idx][j]-=mod;
                }
            }
            prevmax=max;
        }
        prevn=n;
        printf("%d\n", dp[idx][prevmax]);
    }
    return 0;
}

