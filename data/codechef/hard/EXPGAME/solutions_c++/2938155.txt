#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair

typedef pair<int,int> pint;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;


#define little printf("Little Chef\n")
#define head printf("Head Chef\n")


#define MAX_A 100005

int n,g[MAX_A],moves[10];

int grundy(int a)
{
	if (a==0) return 0;
	if (g[a]!=-1)
		return g[a];
	set<int> s;
	for (int i=1; i<=7; i++)
		if (a-moves[i]>=0)
			s.insert(grundy(a-moves[i]));
	int r=0;
	while (find(all(s),r)!=s.end())
		r++;
	return g[a]=r;
}

int main()
{
	for (int i=1; i<=7; i++)
	{
		moves[i]=1;
		for (int j=1; j<=i; j++)
			moves[i]*=i;
	}
	for (int i=0; i<100005; i++)
		g[i]=-1;
	int tc,gr,x;
	scanf("%d",&tc);
	while (tc--)
	{
		scanf("%d",&n);
		gr=0;
		for (int i=0; i<n; i++)
			scanf("%d",&x),gr^=grundy(x);
		gr?little:head;
	}
	return 0;
}
