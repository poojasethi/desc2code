// Nipun Poddar , CSE, MNNIT Allahabad

#include<iostream>
#include<cstdio>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<cstring>
#include<algorithm>

#define in(n) scanf("%d",&n)
#define in2(n,m) scanf("%d%d",&n,&m)
#define inll(n) scanf("%lld",&n)
#define inll2(n,m) scanf("%lld%lld",&n,&m)
#define out(n) printf("%d\n",n)
#define out2(n,m) printf("%d %d\n",n,m)
#define outll(n) printf("%lld\n",n)
#define outll2(n,m) printf("%lld %lld\n",n,m)
#define inc(n) scanf("%c",&n)
#define minm(a,b) (a<b?a:b)
#define maxm(a,b) (a<b?b:a)
#define loop(n) for(i=0;i<n;i++)
#define loop1(n) for(i=1;i<=n;i++)
#define fill0(x) memset(x,0,sizeof(x))
#define fill1(x) memset(x,-1,sizeof(x))
#define PB push_back
#define MP make_pair
#define F first
#define S second


#define MOD 1000000007
#define MOD_INV 1000000006
#define MAX 100009
#define INF 999999999

/*
long long gcd(long long a,long long b)
{
	while(b)
		b^=a^=b^=a%=b;
	return a;
}
long long int power(long long int b,long long int e)
{
	long long ans=1,temp;
	while(e>0)
	{
		if(e%2)
			ans=(ans*b)%MOD;
		b=(b*b)%MOD;
		e/=2;
	}
	return ans;
}*/

using namespace std;

int dp[MAX];
int vis[MAX];

void grundy_assign()
{
	int i,j;
	int moves[7]={1,4,27,256,3125,46656,823543};
	dp[0]=0;
	int mark=0;
	for(i=1;i<MAX;i++)
	{
		mark++;
		for(j=0;j<7 && moves[j]<=i;j++)
			vis[dp[i-moves[j]]]=mark;
		for(j=0;j<MAX;j++)
			if(vis[j]!=mark)
			{
				dp[i]=j;
				break;
			}
	}
}

int main()
{
	int t,i,j,n,ans;
	grundy_assign();
	in(t);
	while(t--)
	{
		ans=0;
		in(n);
		loop(n)
		{
			in(j);
			ans^=dp[j];
		}
		if(ans)
			printf("Little Chef\n");
		else
			printf("Head Chef\n");
	}
	return 0;
}
