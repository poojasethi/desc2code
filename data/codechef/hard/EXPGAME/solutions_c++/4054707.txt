#include <iostream>
#include <set>
using namespace std;
 
int moves[10000];
int cnt;
int arr[100005];
 
long long fast_pow(long long m, long long n)
{
          long long result = 1;
          while ( n > 0 ) {
                if ( n%2 != 0 ) {
                   result = result*m;
                }
                m = m*m;
                n = n/2;
          }
          return result;
}
 
int main()
{
    cnt = 0;
    for(int i = 1; i < 500; i++)
            moves[i] = fast_pow(i,i), ++cnt;
    //cout << "done\n";
    arr[0] = 0;
    for(int i = 1; i < 100005; i++){
            set<int>s;
            //cout << "checking for  " << i << endl; 
            for(int j = 1; j < cnt; j++){
                    if (moves[j] > i) break;
       //             cout << j << " " << moves[j] << endl;
                    int num = arr[i - moves[j]];
         //           cout << num << endl;
                    s.insert(num);        
            }
            //cout << "done\n";
            int tmp = 0;
            set<int> :: iterator it = s.begin();
            while(it != s.end() && (*it) == tmp) ++tmp, it++;
            arr[i] = tmp;        
           // cout << tmp << endl;
    }
                            
    int t,n,x,i;
    cin >> t;
    while ( t-- ) {
          cin >> n;
          int ans;
          for ( i = 0; i < n; i++ ){
               cin >> x;
               if (i == 0) ans = arr[x];
               else ans = (ans ^ arr[x]);
          }
          if (ans == 0) cout << "Head Chef\n";
          else cout << "Little Chef\n";
    }
    return 0;
}