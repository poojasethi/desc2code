#pragma comment(linker,"/STACK:100000000000,100000000000")

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <stack>
#include <set>
#include <iomanip>
#include <queue>
#include <map>
#include <functional>
#include <memory.h>
#include <list>
#include <sstream>
#include <ctime>
#include <climits>
#include <bitset>
#include <list>
#include <cassert>
#include <complex>

using namespace std;

/* Constants begin */
const long long inf = 1e18+7;
const long long mod = 1e9+7;
const double eps = 1e-12;
const double PI = 2*acos(0.0);
const double E = 2.71828;
/* Constants end */

/* Defines begin */
#define pb push_back
#define mp make_pair
#define ll long long
#define double long double
#define F first
#define S second
#define all(a) (a).begin(),(a).end()
#define forn(i,n) for (ll (i)=0;(i)<(ll)(n);(i)++)
#define random (rand()<<16|rand())
#define sqr(x) (x)*(x)
#define base complex<double>
/* Defines end */

int T;
int a[] = {1, 4, 27, 256, 3125, 46656};
int g[100005];
int mex[100005];

void Solve(){
  int n; scanf("%d", &n);
  int res = 0;
  forn(i, n){
    int x; scanf("%d", &x);
    res ^= g[x];
  }
  puts(res ? "Little Chef" : "Head Chef");
}

int main(void) {
  #ifndef ONLINE_JUDGE
      freopen("input.txt", "rt", stdin);
      freopen("output.txt", "wt", stdout);
  #endif
  for(int i = 1; i <= 100000; ++i){
    forn(j, 6){
      if(i - a[j] >= 0){
        mex[g[i - a[j]]] = i;
      } else {
        break;
      }
    }
    while(mex[g[i]] == i){
      ++g[i];
    }
  }
  cin >> T;
  forn(i, T){
    Solve();
  }
  return 0;
}
