/*
    Problem:
    Algorithm:
    Note:
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<string>
#include<iomanip>
#include<iostream>
#include<cmath>
#include<queue>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)

typedef long long ll;
typedef long double real;
void read(int&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

int T,n,i,j,k,l,p,ans,x;
int sg[100010];
int cnt[10100];

int d[10];


int main()
{
    //freopen(".in","r",stdin);
    //freopen("1.out","w",stdout);
 	rep(i,1,8)d[i]=int(pow(1.0*i,1.0*i)+1e-8);
	    
	sg[0]=0;
	rep(i,1,100000)
	{
		rep(p,1,8)if(i>=d[p])cnt[sg[i-d[p]]]=i;
		
		for(p=0;cnt[p]==i;p++);
		sg[i]=p;
	}
	
	for(read(T);T;T--)
	{
		read(n);
		ans=0;rep(i,1,n)read(x),ans^=sg[x];
		if(ans==0)printf("Head Chef\n");
		else printf("Little Chef\n");
	}
	
    scanf("\n");
    return 0;
}
