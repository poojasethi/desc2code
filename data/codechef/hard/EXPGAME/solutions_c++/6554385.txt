#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

int sq[10],dp[100009],a[10];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    REP(i,0,1000)
    {
        sq[i] = i;
        REP(j,1,i - 1)
            sq[i] *= i;
        if( sq[i] > 100000 )
            break;
        //cout << sq[i] << endl;
    }
    dp[0] = 0;
    REP(i,1,100000)
    {
        memset(a,-1,sizeof(a));
        REP(j,1,1000)
        {
            if( i - sq[j] < 0 )
                break;
            if( dp[i - sq[j]] < 350 )
                a[dp[i - sq[j]]] = 1;
        }
        int j = 0;
        while( a[j] == 1 )
            j++;
        dp[i] = j;
    }
    int t;s(t);
    while( t-- )
    {
        int n;s(n);
        int ans = 0;
        REP(i,0,n - 1)
        {
            int p;s(p);
            ans ^= dp[p];
        }
        if( ans )
            printf("Little Chef\n");
        else
            printf("Head Chef\n");
    }
    return 0;
}
