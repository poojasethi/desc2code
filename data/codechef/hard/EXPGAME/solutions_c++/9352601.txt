/**
* He who forgives and acknowledges himself... that is what it truly means to be strong!
*/
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <cstdio>
#include <cstring>
#include <cctype>
#include <queue>
#include <set>
#include <climits>
#include <iomanip>
#include <cassert>
#include <cmath>
#include <stack>
using namespace std;

#define trace(x) {cerr << #x << "=" << x <<endl;}
#define trace2(x, y) {cerr << #x << "=" << x << " " << #y << "=" << y <<endl;}
#define track(x) {cerr << #x << ":" << endl; for (int q = 0; q < x.size(); q++) {cerr << x[q] << " ";} cerr << endl;}
#define trackarr(x, n) {cerr << #x << ":" << endl; for (int q = 0; q < n; q++) {cerr << x[q] << " ";} cerr << endl;}
#define trackvv(x) {cerr << #x << ":" << endl; for (int i = 0; i < x.size(); i++) { cerr << "i:" << i << endl; for (int j = 0; j < x[i].size(); j++){cerr << x[i][j] << " ";} cerr << endl;} cerr << endl;}
#define trackcr(x) {cerr << #x << ":" << endl; for (auto i = x.begin(); i != x.end(); i++) {cerr << *i << " ";} cerr << endl;}
template <typename Tk, typename Tv> ostream& operator<<(ostream& os, const pair<Tk, Tv> &p){os << "{" << p.first << ',' << p.second << "}";return os;}

typedef unsigned int ll;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef vector<ll> vll;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;

const int MAX = 100005;
const int INF = 1e9;

vector<int> exps;
void init() {
    for (int i = 1;; i++) {
        int k = 1;
        for (int j = 0; j < i; j++) k *= i;
        if (k < 100005) {
            exps.push_back(k);
        } else {
            break;
        }
    }
}

int mex[MAX];
void process() {
    mex[0]=0;
    mex[1]=1;
    for (int i = 2; i < 100005; i++) {
        set<int> mexSuc;
        for (int j = 0; j < exps.size() && exps[j]<=i; j++) {
            mexSuc.insert(mex[i-exps[j]]);
        }
        for (int j = 0;; j++) {
            if (!mexSuc.count(j)) {
                mex[i]=j;
                break;
            }
        }
    }
}

int main() {
    init();

    process();

    /*for (int i = 0; i < 10; i++) {
        printf("%d ", mex[i]);
    }
    printf("\n");*/

    int t;
    scanf("%d", &t);
    while (t--) {
        int n;
        scanf("%d", &n);
        vector<int> a(n);
        int sg = 0;
        for (int i = 0; i < n; i++) {
            int v;
            scanf("%d", &v);
            sg ^= mex[v];
        }
        if (!sg) {
            printf("Head Chef\n");
        } else {
            printf("Little Chef\n");
        }
    }
}
