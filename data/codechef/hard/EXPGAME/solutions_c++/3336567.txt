// GOOD ONE :)
#include<iostream>
#include<string>
#include<vector>
#include<set>
#include<algorithm>
using namespace std;
vector<int> win(100010);
int powers[6]={1,4,27,256,3125,46656};//CALCULATED UPTO 6 AS 7^7 IS GREATER THAN 100000
void calculategrundynumber(){
		win[0]=0;//0 IS LOSSSING CONDITION
		for(int i=1;i<100009;i++) 
		{
			//CALCULATING FOR EACH I NUMBER OF STONES IN THE PILE
			vector<int> temp;
			//temp.clear();
			for(int j=0;j<6;j++) 
			{
				if(powers[j]<=i) //IT MEANS I CAN REMOVE SOME STONES FROM THAT PILE AND I CAN THROUGH THE OPPEONENT TO OTHER POSITION 
				//LIKE SUPPOSE I HAVE 35 STONES IN THE PILE THEN POWERS WHICH I CAN SUBTRACT ARE 1,4,27 AND THEN STONES LEFT ARE 34,31,8 AND THESE ARE EARLIER CALCULATED 
				//SO WE CAN CHECK THE EARLIEST NON WINNING CONDITION FOR OPPONENT
				{
					temp.push_back(win[i-powers[j]]);
				}
			}
			
			for(int j=0;j<7;j++) 
			{
				vector<int>::iterator it;
				it=find(temp.begin(),temp.end(),j);
				if(it==temp.end()) 
				{
					win[i]=j;
					break;
				}
			}
		}
		
}

int main(){
	calculategrundynumber();
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		int arr[n];
		int ans=0;
		for(int i=0;i<n;i++){
			cin>>arr[i];
		}
		for(int i=0;i<n;i++){
			ans^=win[arr[i]];
		}
		if(ans!=0)
		cout<<"Little Chef\n";
		else
		cout<<"Head Chef\n";
		
	}
}