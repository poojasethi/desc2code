
def make(tern, p, x, lis_size):

    if p == -1:
        return

    j = x+2
    for i in range(3):
        ans.append(j)
        j -= 1
        x += 1

    lis_size += 1
    
    if tern[p] > 0:
        y = 0
        if lis_size > 1:
            j = x + tern[p] + lis_size -2
            for i in range(lis_size - 1):
                ans.insert(0,j)
                j -= 1
                y += 1

        for i in range(tern[p]):
            ans.insert(0,x)
            x += 1

        x += y

    make(tern, p-1, x, lis_size)


def solve(n):

    ternary = []

    while n:
        rem = n%3
        ternary.append(rem)
        n /= 3

    c=1
    lis_size = 0

    if ternary[len(ternary)-1] == 2:        
        for i in range(2):
            ans.insert(0,c)
            c += 1
        lis_size = 1

    make(ternary, len(ternary)-2, c, lis_size)
    print len(ans)
    print ' '.join(map(str,ans))
    
    


t = input()
ans = []
while t:

    ans = []
    n = input()
    if n>1:
        solve(n)
    else:
        print '1'
        print '1'

    t-=1
