#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
#define llu unsigned long long int
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);
using namespace std;
typedef long long int LL;
double dp[3004][3004];
//dp[i][j] = the probability to have j different elements in the list, such as length of the list is i.
double ans = 0.0;
int main(){
int N , test;
si(test);
while(test--)
{
	si(N);
	ans = 0.0;
	for(int i=1;i<=N;i++)
		ans = ans + ((double)1.0)/(i);
	ans = ans * N * 1.0;
	printf("%.7lf\n", ans);
}
/*
cin >> N;
dp[0][0] = 1.0000;
for(int i=0;i<=N;i++){
	for(int j=0;j<=N;j++){
		dp[i+1][j] = dp[i][j]*((double)j/(double)N);
		dp[i+1][j+1] = dp[i][j]*((double)(N-j)/(double)N);
	}
}
ans = 0.0;
// for(int i=1;i<=N;i++)
	// ans = ans + (dp[i][N]*i*1.0);

for(int i=1;i<=N;i++){
	for(int j=1;j<=N;j++)
		printf("%.7lf ", dp[i][j]);
printf("\n");
}
*/


return 0;
}








