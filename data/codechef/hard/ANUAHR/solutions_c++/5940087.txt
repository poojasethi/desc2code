#include <cstdio>
#include <algorithm>
#include <utility>
#include <set>
#include <cassert>
using namespace std;
 
#define NLIMIT 100000
#define NSLIMIT 1000000
#define ALIMIT 1000000000
 
#define N NLIMIT + 100
 
pair <int, int> a[N];
int main() {
	int t, nsum = 0;
	scanf("%d", &t);
	assert(1 <= t && t <= NLIMIT);
 
	while(t--) {
		int n, m;
		scanf("%d%d", &n, &m);
		assert(1 <= n && n <= NLIMIT);
		assert(0 <= m && m <= n);
		nsum += n;
 
		multiset <int> S;
		for(int i=0; i<n; i++) {
			scanf("%d%d", &a[i].first, &a[i].second);
			assert(1 <= a[i].first && a[i].first <= ALIMIT);
			assert(1 <= a[i].second && a[i].second <= ALIMIT);
			S.insert(a[i].second);
		}
 
		sort(a, a+n);
		if(m == n) {
			m = n-1;
		}
 
		long long answer = 0;
		for(int i=0; i<m; i++) {
			S.erase(S.find(a[i].second));
		}
		for(int i=m-1;; i--) {
			answer = max(answer, (long long)a[i+1].first * (*(S.begin())));
			if(i == -1) break;
			S.erase(S.begin());
			S.insert(a[i].second);
			
		}
 
		printf("%lld\n", answer);
	}
	assert(nsum <= NSLIMIT);
}