#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>
#include <assert.h>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i, a, b) for (int _n(b), i(a); i < _n; i++)
#define rep(i, n) FOR(i, 0, n)
#define CL(a, v) memset((a), (v), sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int, int> pii;

/*** TEMPLATE CODE ENDS HERE */

#define NLIMIT 100000
#define NSLIMIT 1000000
#define ALIMIT 1000000000

#define N NLIMIT + 100

pair<int, int> a[N];

int main() {
#ifdef LOCAL_HOST
  freopen("input.txt", "r", stdin);
// freopen("output.txt","w",stdout);
#endif

  int t;
  scanf("%d", &t);

  while (t--) {
    int n, m;
    scanf("%d%d", &n, &m);

    multiset<int> S;
    for (int i = 0; i < n; i++) {
      scanf("%d%d", &a[i].first, &a[i].second);
      S.insert(a[i].second);
    }

    sort(a, a + n);
    if (m == n) {
      m = n - 1;
    }

    long long answer = 0;
    for (int i = 0; i < m; i++) {
      S.erase(S.find(a[i].second));
    }
    for (int i = m - 1;; i--) {
      answer = max(answer, (long long)a[i + 1].first * (*(S.begin())));
      if (i == -1) break;
      S.insert(a[i].second);
      S.erase(S.begin());
    }

    printf("%lld\n", answer);
  }

#ifdef LOCAL_HOST
  printf("TIME: %.3lf\n", double(clock()) / CLOCKS_PER_SEC);
#endif

  return 0;
}
