#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <memory>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;
#define FOR(i,a,b) for(int (i) = (a); (i) <= (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a); (i) >= (b); --(i))
#define INITIALIZE(a,b) memset((a),b,sizeof(a))
#define INF 1000000000
#define pi 2*acos(0.0)
#define SQR(a) (a)*(a)
#define MP make_pair
#define MAX 100001
#define MODV 1000000007
#define mod(a,mb) if(a >= mb) a = a - mb;
#define modx(a) mod(a,MODV)

typedef unsigned long long UInt;
typedef long long Int;

void compPrime(int *primeArr,int n){}
void compPhi(int *phiArr, int n){}
void compFact(int *factArr, int n){factArr[0]=1;int i; FOR(i,1,n)factArr[i] = factArr[i-1]*i; }
void compPow(int *powArr, int x, int n)
{   int i;
    powArr[0] = 1;
    FOR(i,1,n){powArr[i] = powArr[i-1]*x;mod(powArr[i],MODV);}
}



const int MAXN = 200000;
int Seq[MAXN];
int cnt[MAXN];
pair<int, int>Pairs[MAXN];

int main()
{
  int test, j, sum;

  scanf("%d", &test);
  int N,Wi,Hi,i;

  while(test--)
  {
        scanf("%d", &N);
        memset(cnt, 0, sizeof(cnt));
        FOR(i,0,N-1)
        {
            scanf("%d%d", &Wi, &Hi);
            Pairs[i].first = -Wi;
            Pairs[i].second = -Hi;
        }



        sort(Pairs, Pairs+N);
        int len = 0;

        for(i= 0; i<N; i++)
        {
            int p = upper_bound(Seq, Seq+len, Pairs[i].second)-Seq;
            cnt[p]++;
            Seq[p] = Pairs[i].second;
            len += len==p;

        }


        printf("%d\n",len);
        printf("%d", cnt[0]);
        FOR(i, 1, len-1)
            printf(" %d",cnt[i]);
         puts("");

	// your code goes here
  }


}
