#include <string>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <utility>
#include <iostream>
#include <fstream>
#include <sstream>
#include <cstring>
#include <queue>
#define INF ((1e9)+10)
using namespace std;
int cnt[100005];
bool cmp(int a, int b)
{
	return a>b;
}
int main()
{

    int testcases;
    scanf("%d", &testcases);
    for(int caseno=1; caseno<=testcases; caseno++)
    {
        int n;
        scanf("%d", &n);
        vector<pair<int, int> > v;
        for(int i=0; i<n; i++)
        {
            int x, y;
            scanf("%d%d",&x, &y);
            v.push_back(make_pair(x, y));
        }
        sort(v.begin(), v.end());
        int k=0;
        vector<int> list;

        list.push_back(INF);
        for(int i=n-1; i>=0; i--)
        {
            int num = v[i].second;
            if(k==0 || num<=list[k])
            {
                k++;
                list.push_back(num);
                cnt[k]=1;
            }
            else
            {
                vector<int>::iterator it = upper_bound(list.begin(), list.end(), num, cmp);
                (*it)=num;
				cnt[it-list.begin()]++;
            }
        }
        printf("%d\n", k);
        for(int i=1; i<=k; i++)
            printf("%d ", cnt[i]);
        printf("\n");
    }
    return 0;
}


