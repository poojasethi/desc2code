#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <memory>
#include <vector>
#include <string>
#include <bitset>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <climits>
#include <cstring>
#include <cstdio>
#include <cmath>
#define sz(a) ((int)(a).size())
#define foreach(i, v) for(__typeof((v).begin()) i=(v).begin(); i!=(v).end(); i++)
using namespace std;
typedef long long llong;
typedef pair<int, int> Item;

const int Maxn = 100010+10;
const int INF = 0x7f7f7f7f;
const double eps = 1e-10;
const double pi = acos(-1.0);
inline int realcmp(double a, double b){ return (a>b+eps) ? 1 : ((a+eps<b)?-1:0); }

int cnt[Maxn], xlim[Maxn];

int main()
{
    int cas, n, u, v;
    vector<Item> vt;
    ios::sync_with_stdio(0);

    cin>>cas;
    while( cas-- )
    {
        cin>>n;
        vt.clear();
        memset(cnt, 0, sizeof(cnt));
        for(int i=0; i<n; i++)
        {
            cin>>u>>v;
            vt.push_back(Item(u, v));
        }
        sort(vt.begin(), vt.end());

        int k = 0;
        xlim[1] = INF;
        for(int i=n-1; i>=0; i--)
        {
            int x = vt[i].second;
            if( k==0 || x<=xlim[k] )
            {
                xlim[++k] = x;
                cnt[k] = 1;
            }
            else
            {
                int l=0, r=k;
                while( l+1 < r )
                {
                    int m = (l+r)/2;
                    if( x > xlim[m] )
                        r = m;
                    else
                        l = m;
                }
                xlim[r] = x;  cnt[r]++;
            }
        }
        printf("%d\n", k);
        for(int i=1; i<=k; i++)
            printf("%d ", cnt[i]);
        printf("\n");
    }

    return 0;
}
