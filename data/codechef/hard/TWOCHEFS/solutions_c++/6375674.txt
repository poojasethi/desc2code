#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <bitset>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
 
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%lld",&x)
#define epsilon 0.000000000000001
#define pie acos (-1.0)
#define MAXNODES 100001
#define sz size()
#define MAX 100009
using namespace std;
 
int n1,n2;
int a[51];
int b[51];
int dp[59][59][65];
 
int f (int i1, int i2, int t)
{
    if (i1 == 0 && i2 == 0) {
        return t;
    }
 
    int &result = dp[i1][i2][t];
    if (result != -1) {
        return result;
    }
    result = 10000000;
 
    if (i1 != 0) {
       result = min (result, min (t, a[i1]) + f (i1-1, i2, abs(t-a[i1])));
    }
 
    if (i2 != 0) {
       result = min (result, min (t, b[i2]) + f (i1, i2-1, abs(t-b[i2])));
    }
    return result;
 
}
 
int main()
{
   // freopen ("input.txt", "r", stdin);
 
    S (n1);     S (n2);
    memset (dp, -1, sizeof(dp));
    int i;
    F (i, 1, n1+1) {
        S (a[i]);
    }
    F (i, 1, n2+1) {
        S (b[i]);
    }
 
    printf ("%d\n", f (n1, n2, 0));
 
    return 0;
}
 