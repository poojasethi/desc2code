//In the name of Allah
 
#include <iostream>
#include <vector>
#include <string>
#include <stack>
#include <algorithm>
#include <bitset>
#include <math.h>
#include <queue>
#include <map>
#include <set>
#include <limits.h>
#include <limits>
#include <string.h>
#include <stdio.h>
#include <stdlib.h>
#include <sstream>
#include <assert.h>
using namespace std;

const int MAXN = 100005;

int n, m, a[MAXN], ans[MAXN];
pair < pair <int, int>, int> q[MAXN];

int x[MAXN];
int find_left(int i){
    if(x[i] == i)return i;
    return x[i] = find_left(x[i]);
}


int main(){
    scanf("%d", &n);
    for(int i = 0; i < n; i++)
        scanf("%d", &a[i]);
    
    scanf("%d", &m);
    for(int i = 0; i < m; i++){
        q[i].second = i;
        scanf("%d %d", &q[i].first.second, &q[i].first.first);
    }
    sort(q, q + m);

    for(int i = 0; i < n; i++)x[i] = i;
    
    set < pair <int, int> > s;
    for(int i = 0; i < n - 1; i++)
        s.insert(make_pair(a[i + 1] - a[i], i));
    
    for(int i = 0; i < m; i++){
        while(!s.empty()){
            if((*s.begin()).first <= q[i].first.first){
                x[(*s.begin()).second + 1] = (*s.begin()).second;
                s.erase(s.begin());
            }else break;
        }
        
        int R = upper_bound(a, a + n, q[i].first.second) - a;
        R--;
        
        ans[q[i].second] = find_left(R);
    }

    for(int i = 0; i < m; i++)
        printf("%d\n", ans[i] + 1);
    
    return 0;
}