#include <cstdio>
#include <iostream>
#include <vector>
#include <list>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <functional>
#include <string>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<string> vs;

#define rep(i,n) for(int i=0;i<n;i++)
#define forup(i,a,b) for(int i=a;i<=b;i++)
#define fordn(i,a,b) for(int i=a;i>=b;i--)
#define drep(i,n) for(i=0;i<n;i++)
#define dforup(i,a,b) for(i=a;i<=b;i++)
#define dfordn(i,a,b) for(i=a;i>=b;i--)
#define all(x) x.begin(),x.end()
#define permute(x) next_permutation(all(x))
#define gi(x) scanf("%d",&x)
#define pb push_back
#define mp make_pair
#define fi first
#define sc second

const int max_n=100010;
int slr[4*max_n+10];
int srr[4*max_n+10];
int sqm[4*max_n+10];
int a[max_n];

void ST_init(int ix, int l, int r) {
	slr[ix]=l;
	srr[ix]=r;
	if(l+1<r) {
		int mid=(l+r)/2;
		ST_init(2*ix+1,l,mid);
		ST_init(2*ix+2,mid,r);
		sqm[ix]=max(sqm[2*ix+1],sqm[2*ix+2]);
	}
	else sqm[ix]=a[l];
}

int ST_query(int ix,int l,int r) {
	int lc=2*ix+1;
	int rc=2*ix+2;	
	if(l==slr[ix] and r==srr[ix])
		return sqm[ix];
	else if(r<=srr[lc])
		return ST_query(lc,l,r);
	else if(l>=slr[rc])
		return ST_query(rc,l,r);
	else
		return max(ST_query(lc,l,srr[lc]),ST_query(rc,slr[rc],r));
}

int n,m,t,d;
int b[max_n];

int main() {
	gi(n);
	rep(i,n) gi(b[i]);
	b[n]=int(1e9);
	a[0]=-1;
	forup(i,1,n)
		a[i]=b[i]-b[i-1];
	ST_init(0,0,n);
	gi(m);
	rep(i,m) {
		gi(t); gi(d);
		int p=int(upper_bound(b,b+n+1,t)-b);
		int l=0,r=p;
		while((l+1)<r) {
			int mid=(l+r)/2;
			if(ST_query(0,mid,p)>d) l=mid;
			else r=mid;
		}
		printf("%d\n",l+1);
	}
	return 0;
}
