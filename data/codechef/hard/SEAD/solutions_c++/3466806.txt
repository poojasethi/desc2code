#include <iostream>
#include <string.h>
#include <algorithm>
#include <fstream>
#include <map>
#include <vector>
#include <queue>
#include <stack>
#include <utility>
#include <string>
#include <iomanip>
#include <cstring>
#include <cmath>

#define vint vector<int>::iterator
#define vintp vector<pair<int,int> >::iterator
#define inf 1000000010
#define ll long long
#define maxn 501
#define mod  1000000007

using namespace std;

ifstream fin("C.in");
ofstream fout("C.out");

int n,k,m,t,d;
int a[100001];
int RMQ[20][100001];

int MAX (int i, int j)
{
    int l = log2 (j-i+1);

    return max (RMQ[l][i],RMQ[l][j-(1<<l)+1]);
}

int main()
{
    cin>>n;

    for (int i=1; i<=n; ++i)
    {
        cin>>a[i];
    }

    for (int i=1; i<n; ++i)
    {
        RMQ[0][i] = a[i+1] - a[i];
    }

    for (int j=1; (1<<j)<=n; ++j)
    {
        for (int i=1; i+(1<<j)-1 <= n; ++i)
        {
            RMQ[j][i] = max (RMQ[j-1][i],RMQ[j-1][i+(1<<(j-1))]);
        }
    }

    cin>>m;

    for (int i=1; i<=m; ++i)
    {
        cin>>t>>d;

        int lo = 0, hi = n+1;

        while (hi - lo > 1)
        {
            int mid = (lo + hi)/2;

            if (a[mid] <= t)
                lo = mid;
            else hi = mid;
        }

        int poz = lo;

        lo = 0, hi = poz;

        while (hi - lo > 1)
        {
            int mid = (lo + hi)/2;

            if (MAX(mid,poz-1) <= d)
                hi = mid;
            else lo = mid;
        }

        cout<<hi<<"\n";
    }
}
