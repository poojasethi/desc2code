#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 0x3f3f3f3f
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
//#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010
int dp[N][20],d[N],a[N],b[N];
int query(int x,int y)
{
	int ans=0,len=b[y-x+1];
	ans=max(dp[x][len],dp[y-(1<<len)+1][len]);
	//printf("%d ",ans);
	return ans;
}
int main()
{
	int m,n,i,j,k;
	b[1]=0;
	for(i=2;i<N;i++)b[i]=b[i>>1]+1;
	while(~scanf("%d",&n))
	{
		for(i=1;i<=n;i++)scanf("%d",&a[i]);
		for(i=1;i<n;i++)d[i]=a[i+1]-a[i];
		for(i=1;i<n;i++)dp[i][0]=d[i];
		for(i=1;i<=b[n];i++)
		for(j=1;j+(1<<i)-1<=n;j++)
		dp[j][i]=max(dp[j][i-1],dp[j+(1<<i-1)][i-1]);
		scanf("%d",&m);
		while(m--)
		{
			int k;
			scanf("%d%d",&k,&j);
			int pos=upper_bound(a+1,a+n+1,k)-a-1,ans;
			if(pos==1||a[pos]-a[pos-1]>j)ans=pos;
			else
			{
				//printf("%d\n",pos);
				int l=1,r=pos-1,x;
				while(l<=r)
				{
					x=(l+r)>>1;
					if(query(x,pos-1)<=j)r=x-1;
					else l=x+1;
				}
				ans=r+1;
			}
			printf("%d\n",ans);
		}
	}
}