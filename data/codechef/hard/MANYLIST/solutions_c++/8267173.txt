#include <bits/stdc++.h>
 
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define MOD 1000000007
#define ll long long int
#define MAXINT 100000000LL
#define CLEAR(a) memset((a),0,sizeof(a))

using namespace std;

set<pii> a[300005];
int tree[1<<21];

void update(int n,int nl,int nr,int ql,int qr,int q) {
	if(nl>qr || nr<ql)	return;
	if(nl>=ql && nr<=qr)	{tree[n]+=q;return;}
	int m=(nl+nr)>>1,left=(n<<1);
	update(left,nl,m,ql,qr,q);
	update(left+1,m+1,nr,ql,qr,q);
}

int query(int n,int nl,int nr,int q) {
	int ans;
	if(nl==nr)	
		return tree[n];
	ans=tree[n];
	int m=(nl+nr)>>1,left=n<<1;
	if(q<=m)
		ans+=query(left,nl,m,q);
	else
		ans+=query(left+1,m+1,nr,q);
	return ans;
}

void solve(void) {
	int n,m,x,t,i,l,r;
	cin>>n>>m;
	while(m--) {
		cin>>t;
		if(t==1) {
			cin>>x;
			cout<<query(1,1,n,x)<<endl;
		}
		else {
			cin>>l>>r>>x;
			if(a[x].empty()) {
				a[x].insert(mp(l,r));
				update(1,1,n,l,r,1);
				continue;
			}
			set<pii>:: iterator it=a[x].lower_bound(mp(l,0));
			if(it != a[x].begin()) {
				it--;
				if(it->se>= l) {
					l=it->fi;
				}
			}
			for( ; ; ) {
				it=a[x].lower_bound(mp(l,0));
				if(it==a[x].end())	break;
				if(it->fi<= r) {
					r=max(r,it->se);
					a[x].erase(it);
					update(1,1,n,it->fi,it->se,-1);
				}
				else
					break;
			}
			update(1,1,n,l,r,1);
			a[x].insert(mp(l,r));
		}
	}
}

int main() {
	int i,test;
	test=1;
	for(i=1;i<=test;i++) {
		solve();
	}
	return 0;
}