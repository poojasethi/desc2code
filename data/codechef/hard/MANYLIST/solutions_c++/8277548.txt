#include <bits/stdc++.h>
 
using namespace std;
 
const int maxn = 250100;
 
set<pair<int, int> > mset[maxn];
vector<pair<int, int> > v;
set<pair<int, int> > :: iterator it1, it2;
int ft[maxn], n;
 
int read(int x)
{
	int ret = 0;
	while(x>0){
		ret+=ft[x];
		x-=(x&(-x));
	}
	return ret;
}
 
void update(int x, int val)
{
	while(x<=n){
		ft[x]+=val;
		x+=(x&(-x));
	}
}
 
void range_update(int l, int r, int val)
{
	update(l, val);
	update(r+1, -val);
}
 
void add_range(int l, int r, int x)
{
	v.clear();
	it1 = mset[x].lower_bound(make_pair(l, 0));
	/*if(it1==mset[x].end())
		cout << "end\n";
	else
		cout << x << " " << it1->first << " " << it1->second << "\n";*/
	if(it1!=mset[x].begin()){
		it2 = it1;
		it2--;
		if(it2->second>=r)
			return;
		if(it2->second>=l-1){
			range_update(it2->first, it2->second, -1);
			l = it2->first;
			v.push_back(make_pair(it2->first, it2->second));
		}
	}	
	while(it1!=mset[x].end()){
		//cout << x << " " << it1->first << " " << it1->second << "\n";
		if(it1->second<=r){
			range_update(it1->first, it1->second, -1);
			v.push_back(make_pair(it1->first, it1->second));
		}
		else if(it1->second > r && it1->first <= r+1){
			r = it1->second;
			range_update(it1->first, it1->second, -1);
			v.push_back(make_pair(it1->first, it1->second));
		}
		else
			break;
		++it1;
	}
	int i;
	for(i=0; i<v.size(); i++)
		mset[x].erase(make_pair(v[i].first, v[i].second));
	mset[x].insert(make_pair(l, r));
	range_update(l, r, 1);
}
 
int main()
{
	//freopen("i.txt", "r", stdin);
	int q, l, r, x, i, t, j;
	scanf("%d%d", &n, &q);
	while(q--){
		scanf("%d", &t);
		if(!t){
			scanf("%d%d%d", &l, &r, &x);
			add_range(l, r, x);
			//cout << x << "\n";
			//for(it1=mset[x].begin(); it1!=mset[x].end(); ++it1)
			//	cout << it1->first << " " << it1->second << "\n";
		}
		else{
			scanf("%d", &j);
			printf("%d\n", read(j));
		}
	}
	return 0;
} 