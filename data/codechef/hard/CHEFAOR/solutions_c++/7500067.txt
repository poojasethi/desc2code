#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 5005

int a[N],w[N][N];
ll dp[N][N],f[N][N];
void Max(ll &a,ll b){if(a<b)a=b;}
int main()
{
    //freopen("1.txt","w",stdout);
    int t,i,j,k,ca=0,n=1,m,K;
    scanf("%d",&t);
    while(t--){
        scanf("%d%d",&n,&K);
        for(i=1;i<=n;i++){
            scanf("%d",&a[i]);
        }
        a[0]=0;
        for(i=0;i<=n;i++){
            for(w[i][i]=a[i],j=i+1;j<=n;j++){
                w[i][j]=w[i][j-1]|a[j];
            }
        }
        for(i=0;i<=n;i++)
            for(j=0;j<=K;j++)dp[i][j]=0,f[i][j]=0;
        for(i=1;i<=n;i++){
            int t=min(K,i);
            int x=i,q=a[i],y=0,ok=0;
            dp[i][1]=w[1][i];f[i][1]=w[1][i];
            for(k=2;k<=t;k++){
                dp[i][k]=dp[i-1][k]-f[i-1][k]+(a[i]|f[i-1][k]);
                f[i][k]=a[i]|f[i-1][k];
            }
            while(x>0){
                t=min(t,x);
                if(t==1)break;
                //assert(q==w[x][i]);
                for(k=2;k<=t;k++){
                    if(dp[i][k]<dp[x-1][k-1]+q){
                        dp[i][k]=dp[x-1][k-1]+q;f[i][k]=q;
                    }
                }
                if(q==w[1][i])break;
                if((a[x-1]&q)==q){
                    for(k=2;k<=t;k++){
                        if(dp[i][k]<dp[x-1][k]){
                            dp[i][k]=dp[x-1][k];f[i][k]=f[x-1][k];
                        }
                    }
                    break;
                }
                if((y&a[i])==a[i])break;
                int l=1,r=x-1;
                while(l<=r){
                    m=(l+r)>>1;
                    if(w[m][x-1]|q>q)l=m+1;
                    else r=m-1;
                }
                y|=w[l-1][x-1];
                q|=w[l-1][x-1];x=l-1;
            }
        }
        printf("%lld\n",dp[n][K]);
        /*
        static ll f[N],dp1[N];
        memset(f,0,sizeof(f));
        for(k=1;k<=K;k++){
            memset(dp1,0,sizeof(dp1));
            for(i=k;i<=n;i++){
                if(k>1)for(j=k-1;j<i;j++)dp1[i]=max(dp1[i],f[j]+w[j+1][i]);
                else dp1[i]=w[1][i];
                //cerr<<i<<" "<<dp[i]<<"\t";
            }
            for(i=k;i<=n;i++)f[i]=dp1[i];
            //DBG("..")
        }
        DBG(f[n])*/
    }
    return 0;
}