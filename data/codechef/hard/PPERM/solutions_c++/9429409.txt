#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
#define mod 1000000007
using namespace std;
typedef long long int LL;
vector<int > primes;
int is_prime[5000010] , primes_lesser[5000010];
void seive(){
for(int i=0;i<=5000005;i++)
	is_prime[i] = 1;
is_prime[1] = 0;
is_prime[0] = 0;
for(long long int j=2;j<=5000000;j++){
	if(is_prime[j]==1){
		primes.push_back(j);
		for(long long int k=(j*j);k<=5000000;k+=j)
			is_prime[k] = 0;
	}
}
}
LL dp[5000010];
int main(){
seive();
memset(primes_lesser , 0 , sizeof(primes_lesser));
memset(dp , 0 , sizeof(dp));
int np = 1;
for(int i=1;i<=5000000;i++)
{
	if(is_prime[i]==1)
		np++;
	primes_lesser[i] = np;
}
dp[1] = 1;
for(int i=2;i<=5000000;i++)
{
	dp[i] = (dp[i-1] * primes_lesser[i]);
	if(dp[i] >= mod)
		dp[i] = (dp[i]%mod);
}
int test , n;
scanf("%d",&test);
while(test--)
{
	scanf("%d",&n);
	// cout << dp[n] << endl;
	printf("%d\n", dp[n]);
}

return 0;
}