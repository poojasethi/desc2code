#include <cstdlib>
#include <cctype>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <iostream>
#include <sstream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <bitset>
#include <list>
#include <stdexcept>
#include <functional>
#include <utility>
#include <ctime>
#include <cassert>
#include <complex>
using namespace std;

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef long long ll;
typedef long double LD;
typedef pair<int,int> PII;
typedef pair<ll,ll> PLL;
typedef vector<ll> VL;
typedef vector<PII> VPII;
typedef complex<double> CD;
#define For(i,a,n) for (int i=a;i<=(int)(n);i++)
#define Des(i,a,n) for (int i=n;i>=(int)(a);i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
#define ACCU accumulate
#define TWO(x) (1<<(x))
#define TWOL(x) (1ll<<(x))
#define clr(a) memset(a,0,sizeof(a))
#define POSIN(x,y) (0<=(x)&&(x)<n&&0<=(y)&&(y)<m)
#define PRINTC(x) cout<<"Case #"<<++__<<": "<<x<<endl 
#define CC(x) std::cout << x << std::endl

//*************** BUILD-IN FUNCTION ***************************//
#define POP(x) (__builtin_popcount(x)) // Returns the number of 1-bits in x
#define POPL(x) (__builtin_popcountll(x))
#define gcd(a,b) (__gcd(a,b))
#define clz(x) (__builtin_clz(x)) // Returns the number of leading 0-bits in x, starting at the most significant bit position.
#define ctz(x) (__builtin_ctz(x)) // Returns the number of trailing 0-bits in x, starting at the least significant bit position.
//*************** BUILD-IN FUNCTION ***************************//

const int inf=0x20202020;
const ll mod=1000000007LL;
const double eps=1e-9;
const double pi=3.1415926535897932384626L;
const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
// head
#define getcx getchar_unlocked
#define putcx putchar_unlocked
 
inline void readInt( int &n ) {
	n=0;
	int ch=getcx();
	while( ch < '0' || ch > '9' ){ch=getcx();}
	while( ch >= '0' && ch <= '9' )
		n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
}
 
inline void writeInt(int n) {
	int i = 10;
	char buf[11];
	buf[10] = '\n';
	while (n) {
		buf[--i] = n % 10 + '0';
		n /= 10;
	}
	do {
		putcx(buf[i]);
	} while (buf[i++] != '\n');
}

const int Nmax = 5000000;
int mm[Nmax+1];
ll ls = 2, ans[Nmax+1] = {0, 1, 2};

int NTest, NN;

int main() {
	ios_base::sync_with_stdio(0);

	// ls[i] = #{prime(p) <= i}
	// ans[i] = ans[1..i]
	for(int i = 3;i <= (int)sqrt(Nmax); i+=2) {
		for (int j = i*i;j <= Nmax; j+=i) mm[j] = 1;
	}
	for (int i = 3;i <= Nmax; ++i) {
		ls = ls + (mm[i] == 0 && (i&1));
		ans[i] = (ans[i-1] * ls) % mod;
	}

	// std::cin >> NTest;
	readInt (NTest);
	For (iTest, 1, NTest) {
		readInt (NN);
		writeInt (ans[NN]);
		// std::cin >> NN;
		// std::cout << ans[NN] << std::endl;
	}
	return 0;
}
