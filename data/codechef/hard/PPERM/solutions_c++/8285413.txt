#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define sz(c) c.size()
#define rep(i,n) for(typeof(n) i = 0;i<n;i++)
#define range(i,a,b) for(typeof(b) i = a;i<=b;i++)
#define tr(it,c) for(typeof(c.begin()) it = c.begin();it!= c.end();++it)
#define x first
#define y second
#define author dipjal
#define gc() getchar_unlocked()
#define pc(x) putchar_unlocked(x)
using namespace std;
typedef long long int ll;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<pii> vpii;
typedef map<int,int> mii;
const int SIZE = 5e6+3;
const ll mod = 1e9+7;
const ll epf = -1e5+9;
int N,Q;
int composite[SIZE];
ll dp[SIZE];
void sieve(){
    composite[1]=false;
    composite[0]=true;
    for(int i = 2;i<SIZE;i++){
            if(!composite[i]){
                    for(int j = i<<1;j<SIZE;j+=i)
                    composite[j]=true;
            }
    }
}

void ConstructDp(){
dp[0]=0;
dp[1]=1;
int cnt = 1;
range(i,2,(int)SIZE){
    cnt+=!composite[i];
    dp[i]=((dp[i-1]%mod)*(cnt%mod))%mod;
  }
}



inline void scan(ll &n )//fast input function
{
   n=0;
   int ch=gc();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}

   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=gc();
   n=n*sign;
}

static inline void Write(ll ans){
    char res[25];
    int i = 0;
    do{
            res[i++]=ans%10+'0';
            ans/=10;
    }while(ans);
    --i;
    for(;i>=0;--i)
        pc(res[i]);
    pc('\n');
}




int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    sieve();
    ConstructDp();
    ll tt;
    ll N;
    scan(tt);
    while(tt--){
         scan(N);
         Write(dp[N]);
    }
    return 0;
}
