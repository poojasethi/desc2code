//Author: Aman Choudhary
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
#define mod  1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%llu",&x)
#define MAX 100001
#define NIL 0
#define INF (1<<28)

#define MAXNODES 2005
using namespace std;

ill ans[5000009];
vector <int> p;
bool prime[5000009];

void sieve()
{
    memset (prime, true, sizeof(prime));
    int i,j;

    for (i = 2; i <= 5000000; i++) {
        if (!prime[i]) continue;
        p.pb (i);
        for (j = 2; i*j <= 5000000; j++) {
            prime[i*j] = false;
        }
    }

    i = j = 0;
    ill last = 1LL;
    p.pb (50000000);

    for (i = 2; i <= 5000000; i++) {
        if (i == p[j]) {
            ans[i] = ans[i-1]*(1LL + (ill)(j+1));
            if (ans[i] >= mod)
                ans[i] = ans[i]%mod;
            last = ans[i];
            j++;
            continue;
        }
        ans[i] = ans[i-1]*(1LL + (ill)j);
        if (ans[i] >= mod)
        ans[i] = ans[i]%mod;
    }

}

int main()
{
  //  freopen ("input.txt", "r", stdin);

    int t;
    S (t);

    ans[1] = 1LL;
    sieve();

    while (t--) {
            int  n;
        S (n);
        printf ("%lld\n", ans[n]);
    }

	return 0;
}
