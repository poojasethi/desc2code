#define _USE_MATH_DEFINES 
#define _CRT_SECURE_NO_DEPRECATE 
#include <iostream> 
#include <cstdio> 
#include <cstdlib> 
#include <vector> 
#include <sstream> 
#include <string> 
#include <map> 
#include <set> 
#include <algorithm> 
#include <cmath> 
#include <cstring> 
#include <queue>
#include <time.h>
using namespace std; 
#define mp make_pair 
#define pb push_back 
#define all(C) (C).begin(), (C).end() 
#define sz(C) (int)(C).size() 
#define PRIME 123 
#define PRIME1 31415 
typedef long long int64; 
typedef unsigned long long uint64; 
typedef pair<int, int> pii; 
typedef vector<int> vi; 
typedef vector<vector<int> > vvi; 
//------------------------------------------------------------ 
#define y1 asdf
#define y2 asdqwer
const int N = 2010; 
int n, m, s, t;
int ans[N];
pii card[N];
int was[N];
int cir[N];
vector < pii >  nod;
void solve()
{
	memset(was, 0, sizeof was);
	cin >> n;
	for(int i = 0; i < n; ++i)
		cin >> card[i].first;
	memset(cir, 0, sizeof cir);
	for(int i = 0; i < n; ++i)
		cin >> card[i].second;
	sort(card, card + n);
	int ans = 0;
	for(int i = 0; i < n; ++i)
	{
		if (was[i])
			continue;
		int co = 0, u = i;
		while(!was[u])
		{
			was[u] = 1;
			co++;
			u = card[u].second - 1;
		}
		if(co == 1)
		{
			ans++;
			continue;
		}
		cir[co]++;
	}
	
	for(int i = 2; i <= n; ++i)
		if(cir[i])
			nod.push_back(pii(i, cir[i]));

	for(int i = 2; i <= n; ++i)
	{
		int tans = 0;
		for(int j = 0; j < nod.size(); ++j)
		{
			int t = 0;
			for(int k = 0; k * i <= nod[j].first; k++)
			{
				int r = k * i;
				t = max(t, r - k + (nod[j].first - r) / (i + 1) * i);
			}
			tans += t * nod[j].second;

		}
		ans = max(ans, tans);
	}
	cout << ans << endl;
	nod.clear();
}

int main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);
	srand(time(0));
    #ifdef WIN32
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif
	int t;
	cin >> t;
	while(t--)
		solve();
		
} 