#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9






int dp1[63][37610];
int dp2[63][37610];
int nextl[37610];
int nextr[37610];
//int sum1[63];
//int sum2[63];
int a[63];


int main()
{
    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	int i,j,k,l,r,lk,rk,T,lob,hor,bestlob,besthor,m,x,y,n,g,rhs,sum,rseg,lseg;
	scanf("%d",&T);
	while(T--)
	{
	   // memset(dp1,0,sizeof(dp1));
	   // memset(dp2,0,sizeof(dp2));


        scanf("%d %d",&n,&k);

        sum=0;

        for(i=1;i<=n;i++)
        {
            scanf("%d",&a[i]);
        }
        sort(a+1,a+n+1);



       // sum1[0]=0;
      //  for(i=1;i<=n;i++) sum1[i]=sum1[i-1]+a[i];


        reverse(a+1,a+n+1);
//        sum2[0]=0;
        sum=0;
        for(i=1;i<=n;i++)
        {
           // sum2[i]=sum2[i-1]+a[i];
            if(i<=(k/2)) sum+=a[i];
        }
        reverse(a+1,a+n+1);







        dp1[0][0]=1;
        for(i=1;i<=n;i++)
        {
            for(j=0;j<a[i];j++) dp1[i][j]=dp1[i-1][j];
            for(j=a[i];j<=sum;j++) dp1[i][j]=dp1[i-1][j]|(dp1[i-1][j-a[i]]<<1);
        }




        reverse(a+1,a+n+1);
        dp2[0][0]=1;
        for(i=1;i<=n;i++)
        {
            for(j=0;j<a[i];j++) dp2[i][j]=dp2[i-1][j];
            for(j=a[i];j<=sum;j++) dp2[i][j]=dp2[i-1][j]| (dp2[i-1][ j-a[i] ]<<1);
        }
        reverse(a+1,a+n+1);



        rseg=k/2;
        if(k%2) lseg=k/2;
        else lseg=(k/2)-1;


        lk=1<<lseg;
        rk=1<<rseg;


        bestlob=-1;


        for(i=lseg+1;i<=(n-rseg);i++)
        {
            l=i-1;
            r=n-l-1;


            //cout<<lseg+1<<" "<<n-rseg;
            //while(1);

            g=-1;
            for(j=0;j<=sum;j++)
            {
                if(dp2[r][j]&rk) g=j;
                nextl[j]=g;
            }
            g=-1;
            for(j=sum;j>=0;j--)
            {
                if(dp2[r][j]&rk) g=j;
                nextr[j]=g;
            }









            for(j=0;j<=sum;j++)
            {
                if(dp1[l][j]&lk)
                {
                    rhs=a[i]*(k-1)-j;


                    x=-1;
                    if(rhs>sum) rhs=sum;
                    if(rhs<0) rhs=0;


                    x=nextr[rhs];
                    y=nextl[rhs];
                    if(x==-1) x=y;
                    else if(x!=-1 && y!=-1)
                    {
                        if((x-rhs)>(rhs-y))
                                x=y;
                    }



                    if(x!=-1)
                    {
                        lob=j+a[i]+x-k*a[i];if(lob<0) lob*=-1;
                        hor=k;

                        g=__gcd(lob,hor);
                        lob/=g; hor/=g;


                        if(bestlob==-1)
                        {
                            bestlob=lob;
                            besthor=hor;
                        }
                        else if((bestlob*hor)>(besthor*lob))
                        {
                            bestlob=lob;
                            besthor=hor;
                        }
                    }


                }
            }




        }




        double xx=bestlob;
        double yy=besthor;
        printf("%.3lf\n",xx/yy);




	}
	return 0;
}

