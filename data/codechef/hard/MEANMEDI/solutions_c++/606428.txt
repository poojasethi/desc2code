#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)for(int i=0;i<v;i++)
#define FORE(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REMIN(x,y) (x)=min((x),(y))
#define REMAX(x,y) (x)=max((x),(y))
#define pb push_back
#define sz size()
#define mp make_pair
#define fi first
#define se second
#define ll unsigned long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define LOLDBG1
#ifdef LOLDBG
#define DBG(vari) cerr<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cerr<<(v1)<<" - "<<(v2)<<endl;
#else
#define DBG(vari)
#define DBG2(v1,v2)
#endif
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define CZ3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z));
#define ALL(x) (x).begin(),(x).end()
#define tests int dsdsf;cin>>dsdsf;while(dsdsf--)
#define testss int dsdsf;CZ(dsdsf);while(dsdsf--)
#define UN(v) sort(ALL(v));v.erase(unique(ALL(v)),v.end())
#define M 1200*30+1
using namespace std;
typedef pair<int,int> pii;
typedef vector<int> vi;
template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t){s<<"{";FOR(i,t.size())s<<t[i]<<(i==t.size()-1?"":",");return s<<"}"<<endl; }

int n,k;
int t[65];
unsigned int dp[M+2];
bool lewo[61][M+2],prawo[61][M+2];


int min_diff(vi a, vi b)
{
    vector<pii> v;
    FOR(i,a.sz) v.pb(mp(a[i],0));
    FOR(i,b.sz) v.pb(mp(b[i],1));
    sort(ALL(v));
    int mn=1000000;
    REP(i,1,int(v.sz)-1) if (v[i].se!=v[i-1].se) REMIN(mn,v[i].fi-v[i-1].fi);
    return mn;
}


int main()
{
    ios_base::sync_with_stdio(0);
    cout<<setprecision(3);
    tests
    {
        cin>>n>>k;
        //FOR(i,n+1) FOR(j,M) prawo[i][j]=lewo[i][j]=0;
        FOR(i,n) cin>>t[i];
        sort(t,t+n);
        FOR(i,M) dp[i]=0;
        dp[0]=1;
        int k1=(k-1)/2,k2=k-1-k1;
        int s=1;
        FOR(j,M) lewo[0][j]=(dp[j]&(1<<k1));
        REP(i,1,n)
        {
            s+=t[i];
            s=min(s,M);
            int d=t[i-1];
            for(int j=s-d;j>=0;j--)
                dp[j+d]|=(dp[j]<<1);
            FOR(j,M) lewo[i][j]=(dp[j]&(1<<k1));
        }
        FOR(i,M) dp[i]=0;
        dp[0]=1;
        s=1;
        FOR(j,M) prawo[n][j]=(dp[j]&(1<<k2));
        REPD(i,n-1,0)
        {
            s+=t[i];
            s=min(s,M);
            int d=t[i];
            for(int j=s-d;j>=0;j--)
                dp[j+d]|=(dp[j]<<1);
            FOR(j,M) prawo[i][j]=(dp[j]&(1<<k2));
        }
  
        
        DBG(k1);
        DBG(k2);
        int best=1000000;
        FOR(i,n)
        {
            if (i>=k1 && (n-1-i)>=k2)
            {
                DBG(i);
                vi a,b;
                FOR(j,M) if (lewo[i][j]) a.pb(-j+(k-1)*t[i]);


                FOR(j,M) if ((prawo[i+1][j])) b.pb(j);

                //DBG(a);
                //DBG(b);
                REMIN(best,min_diff(a,b));

            }
        }
        cout<<fixed<<best/double(k)<<endl;
    }

    return 0;
}
