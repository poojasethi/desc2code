#include <iostream>
#include <string>
#include <ctime>
#include <cstring>
#include <deque>
#include <cstdio>
#include <fstream>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <set>
#define ll long long
#define fname ""
#define F first
#define S second
#define mod 1000000
#define INF 1000000000
#define mp make_pair
#define pb push_back 

using namespace std;

const int N = 1e7;

const int M = 1e9 + 7;
                                               
int n, m, t, l, r, a[N + 123], b[N + 123];

int bp (int a, int n)
{
	int res = 1;
	while (n)
	{
		if (n & 1)
			res = (1ll * res * a) % M;
		a = (1ll * a * a) % M;
		n >>= 1;
	}
	return res;
}

void solve ()
{
	int res = 0;
	int calc;
	int last = -1;
	memset (a, 0, sizeof a);
	memset (b, 0, sizeof b);
	scanf ("%d%d%d%d", &n, &m, &l, &r);
	for (int d = m;d >= 1;d --)
	{
		int cur = m / d;
		if (cur != last)
		{
			last = cur;
			calc = bp (cur, n);
		}
		a[d] = calc;
		int k = d + d, sum = 0;
		while (k <= m)
		{
			sum += b[k];
			if (sum >= M)
				sum %= M;
			k += d;						
		}
		b[d] = a[d] - sum;
		if (b[d] < 0)
			b[d] += M;
		if (b[d] >= M)
			b[d] %= M;
		if (d <= r && d >= l)
		{
			res += b[d];
			if (res > M)	
				res %= M;
		}	
	}
	printf ("%d\n", res);
}
 
int main ()
{
//	freopen (fname".in", "r", stdin);
//	freopen (fname".out", "w", stdout);

	scanf ("%d", &t);
	while (t --)
		solve ();
	return 0;
}                        