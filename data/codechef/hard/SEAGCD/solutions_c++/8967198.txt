//---------------------------JUGNU: LET YOUR LIGHT SHINE---------------------------//
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define mk make_pair
#define ln length
#define vt(a) vector <ll> a
#define st(a) set <ll> a
#define sti(a) set <ll>::iterator a
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define frr(i,a,b) for(i=a;i>=b;i--)
#define sc(a) scanf("%d",&a)
#define sm(a,b) scanf("%d%d", &a, &b)
#define pr(a) printf("%d\n", a)
#define pm(a,b) printf("%d %d\n", a, b)
#define cn(a) cin >> a
#define ct(a) cout << a << endl
#define isset(x,i) ((x>>i)&1)
#define MAXN 10000005
#define MODL 1000000007LL
#define MOD 1000000007
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
using namespace std;
int A[MAXN], B[MAXN];
ll Power(int x, int y)
{
	if(y==0LL)
		return 1LL;
	ll temp = Power(x, y/2);
	temp = temp * temp;
	if(temp>=MODL)
		temp = temp % MOD;
	if(y%2)
		return (temp * x)%MOD;
	return temp;
}
int main()
{
	int i, j, t, n, m, k, l, r, mini,cnt, maxi, temp, flag, result, last, cur, sum;
	sc(t);
	while(t--)
	{
		result = 0;
		sm(n, m);
		sm(l, r);
		fr(i, 0, MAXN)
			A[i] = B[i] = 0;
		last = -1;
		frr(i, m, 1)
		{
			cur = m/i;
			if(cur != last)
			{
				temp = (int)Power(cur, n);
				last = cur;
			}
			A[i] = temp;
			maxi = 2*i;
			sum = 0;
			while(maxi<=m)
			{
				sum = sum + B[maxi];
				if(sum>=MOD)
					sum -= MOD;
				maxi = maxi + i;
			}
			B[i] = A[i] - sum;
			if(B[i]<0LL)
				B[i] += MOD;
			else if(B[i]>=MOD)
				B[i] -= MOD;
			if(l<=i && i<=r)
				result = result + B[i];
			if(result>=MOD)
				result -= MOD;
		}
		pr(result);
	}
return 0;
}
