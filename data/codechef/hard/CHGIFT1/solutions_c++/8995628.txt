#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
using namespace std;
long long max2(long long a, long long b)
{
    if(a>b) return a;
    return b;
}
long long min2(long long a, long long b)
{
    if(a<b) return a;
    return b;
}
long long minm(long long a,long long b,long long c)
{
    if(a>b) a=b;
    if(a<c) return a;
    return c;
}
long long maxm(long long a, long long b, long long c)
{
    if(a<b) a=b;
    if(a>c) return a;
    return c;
}
int main()
{
    int t,n,i,j;
    long long ma[11],a[11],dp[11];
    scanf("%d",&t);
    while(t--)
    {  // bool ne[11];
        int nco=0;
        j=0;
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%lld",&a[i]);
            if(a[i]<-1) nco++;
        /*    if(a[i]==-1)
            {
                nmo[j++]=i;
                ne[i]=1;
            }*/
        }
        dp[0]=a[0];
        ma[0]=a[0];
//        mi[0]=a[0];
      //  int ncou=0;
        for(i=1;i<n;i++)
        {
            if(a[i]>-1)
            {
                ma[i]=maxm(ma[i-1]*a[i],ma[i-1]+a[i],ma[i-1]-a[i]);
                dp[i]=minm(dp[i-1]*a[i],dp[i-1]+a[i],dp[i-1]-a[i]);
            }
           else if(a[i]==-1)
            {
                /*if(abs(ma[i-1])>abs(dp[i-1]))
                {
                    dp[i]=-ma[i-1];
                    ma[i]=ma[i-1]+1;
                }
                else
                {
                    dp[i]=dp[i-1]-1;
                    ma[i]=-dp[i-1];
                }*/
                dp[i]=min2(-ma[i-1],dp[i-1]-1);
                ma[i]=max2(-dp[i-1],ma[i-1]+1);
            }
            else
            {
                dp[i]=min2(ma[i-1]*a[i],dp[i-1]+a[i]);
                ma[i]=max2(dp[i-1]*a[i],ma[i-1]-a[i]);
            }
        }
      /*  for(i=0;i<n;i++)
        {
            printf("%lld  %d\n",dp[i],ma[i]);
        }*/
        printf("%lld\n",dp[n-1]);
    }
    return 0;
}
