#ifndef _CRT_SECURE_NO_DEPRECATE
#define _CRT_SECURE_NO_DEPRECATE

/*
PROG: milk
LANG: C++
*/

#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define p(x,y) make_pair(x,y)
#define BB begin()
#define EE end()
#define fill(ar, val) memset(ar, val, sizeof(ar))
#define debug(x) cout<<#x<<": "<<x<<endl

#define all(ar) ar.begin(), ar.end()
#define pb push_back

#define BIT(n) (1<<(n))
#define AND(a,b) ((a) & (b))
#define OR(a,b) ((a) | (b))
#define XOR(a,b) ((a) ^ (b))
#define sqr(x) ((x) * (x))

#define PI 3.1415926535897932385
#define INF INT_MAX
#define EPS 1e-7
#define MAXN 20000
#define MOD 1000000007

#define INP "test.inp"
#define OUT "test.out"

typedef pair<int, int> ii;
typedef pair<int, ii> iii;
typedef vector<ii> vii;
typedef vector<ll> vi;
typedef vector<string> vs;

template<typename T>inline T gcd(T a, T b){ if (b == 0)return a; else return gcd(b, a % b); }
template<typename T>inline T lcm(T a, T b){ return (a * b) / gcd(a, b); }
typedef long long ll;
using namespace std;
int main()
{
	
	
	int t; cin >> t;
	while (t--)
	{
		int n; cin >> n;
		vector<int>vec(n), ans;
		for (int i = 0; i < n; i++)cin >> vec[i];
		for (int i = 0; i < n; i++)vec.push_back(vec[i]);
		// 3 2 1
		int ANS = 0;
		for (int i = 0; i < n; i++)
		{
			ans.clear();
			ans.push_back(vec[i]);
			for (int j = i+1; j < i + n; j++)
			{
				if (ans.empty() || ans.back() < vec[j]){
					ans.push_back(vec[j]);
				}
				else *lower_bound(all(ans), vec[j]) = vec[j];
			}
			ANS = max(ANS, (int)ans.size());
		}
		cout << ANS << endl;
	}

	
	return 0;
}



#endif
