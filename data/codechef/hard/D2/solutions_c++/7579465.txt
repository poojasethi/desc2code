#include<bits/stdc++.h>
#include<algorithm>
#include<cmath>
#include<cstdlib>
#include<cstdio>
using namespace std;
#define rep(i,n) for(__typeof(n) i=0;i<(n);i++)
#define REP(i,b) for(__typeof(b) i=1;i<=(b);i++)
#define INF (1<<29)
#define pb push_back
#define Sort(v) sort(v.begin(),v.end())
#define sz size()
#define sc scanf
#define pf printf
#define NL printf("\n")
#define mp make_pair
#define ff first
#define ss second
#define ri(N) scanf("%d",&N)
#define rs(S) scanf("%s",&S)
#define wi(N) printf("%d\n",N)
#define ll long long
#define vi vector<int>
#define pii pair<int,int>
#define piii pair<int,pair<int,int> >
#define vii vector<ii>
#define si set<int>
#define msi map<string,int>
#define fin freopen("input.txt","r",stdin)
#define fout freopen("out.txt","w",stdout)
#define pi acos(-1)
#define MAX 10009
///////////////////////********************////////////////////////

/***Nazim Gazi****
****gazinazim1@gmail.com****/

/*Code start from here*/
int maxi;
int t,n;

int num[MAX],mem[MAX],prev[MAX],arr[MAX],res[MAX],maxlen,A[MAX],a[MAX];

void CLR()
{
   memset(mem,0,sizeof(mem));
   memset(prev,0,sizeof(prev));
   memset(arr,0,sizeof(arr));
  // memset(res,0,sizeof(res));



}

void LIS( int s )
{

    CLR();


    int i,k;
    maxlen=1;
    arr[0]=-INF;
    for(int i=1;i<s+1;i++)
        arr[i]=INF;
    prev[0]=-1;
    mem[0]=num[0];
    for(int i=0;i<s;i++)
    {
        k=lower_bound(arr,arr+maxlen+1,num[i])-arr;
        if(k==1 ) arr[k]=num[i],mem[k]=i,prev[i]=-1;
        else
            arr[k]=num[i],mem[k]=i,prev[i]=mem[k-1];
        if(k>maxlen) maxlen=k;
    }
    if(maxlen>maxi)
        maxi=maxlen;


}

int main()
{
    //fin;


      ri(t);
    while(t--)
    {
        maxi=0;
        ri(n);
        for(int i=0;i<n;i++)
        {
            ri(A[i]);
        }
        for(int i=0;i<n;i++)
            num[i]=A[i];
        LIS(n);
        for(int i=1;i<=n;i++)
        {
            int j=0;
           for(int l=i;l<n;l++,j++)
            num[j]=A[l];
           for(int l=0;l<i;l++,j++)
            num[j]=A[l];
            LIS(n);


        }

        wi(maxi);


    }




    return 0;
}
