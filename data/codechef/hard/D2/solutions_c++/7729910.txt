#include<bits/stdc++.h>
#define MOD 1000000009
#define LL long long int
#define gc getchar_unlocked
#define pc putchar_unlocked
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define rall(c) c.rbegin(),c.rend()
#define tr(container, it) \
for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define present(container, element) (container.find(element) != container.end())
using namespace std;
int a[20005];
int table[20005];
int compare(const void *a,const void *b)
{
	return (*(int *)a-*(int *)b);


}
inline LL myscanf()
{
LL n=0;
int ch=gc();
while( ch < '0' || ch > '9' )
{
ch=gc();
}
while( ch >= '0' && ch <= '9' )
{
n = (n<<3)+(n<<1) + ch-'0';
ch=gc();
}
return n;
}
inline void myprintf(LL n)
{
	LL a[20];
	LL i=19,j,k;
	for(;;)
	{
		k=n%10;
		n=(n-k)/10;
		a[i--]=k;
		if(n==0)
		break;
	}
	for(j=i+1;j<=19;j++)
	pc(a[j]+'0');

	pc('\n');
}

void binary(int start,int end,int key)
{
	while(start<=end)
	{
		int mid=(start+end)/2;
		if(table[mid]==key)return;
		else if(table[mid]>key)
		end=mid-1;
		else
		start=mid+1;
		
	}
	
//	start++;
	table[start]=key;
	
	
}
 LL cal(int i,int n)
 {
 int	curr=1;
 	table[0]=a[i];
 	for(int j=i+1;j<n;j++)
 	{
 				if(a[j]>table[curr-1])
 				{
 					table[curr++]=a[j];
 					
				}
				 else if(a[j]<table[curr-1])
				 
				 binary(0,curr-1,a[j]);
	}
 	
 	
 	return curr;
 	
 }

int main()
{
int t,i,n,ans;
for(t=myscanf();t--;)
{
	n=myscanf();
	
	for(i=0;i<n;i++)
	{
			a[i]=myscanf();
			if(i!=n-1)
			a[i+n]=a[i];
		
	}
    ans=-1;
	for(i=0;i<n;i++)
	{
		int temp=cal(i,i+n);
		ans=max(ans,temp);
		
	}

	myprintf(ans);
	
}

return 0;
}
