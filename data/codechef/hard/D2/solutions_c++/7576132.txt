#include<iostream>
#include<vector>
#include<map>
#include<queue>
#include<sstream>
#include<math.h>
#include<set>
#include<fstream>
#include<algorithm>
#include<cstring>
#include<cassert>
#define oo (int)13e7
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define fill(a,v) memset(a, v, sizeof a)
#define For(i,s,e) for(int i=s; i < e; i++)
#define ull unsigned long long
#define ll long long
#define bitcount __builtin_popcount
#define all(x) x.begin(), x.end()
#define pb( z ) push_back( z )
#define inf (1<<29)
using namespace std;


const int mxn = 20007;
int a[mxn];
int p[mxn];
int b[mxn];
int I[mxn];

int find_lis(int lo,int len)
{
    I[0] = -inf;

    for(int i=1; i<=len; i++)
        I[i] = inf;

    int LisLength=0;

    for(int i=lo; i<lo+len; i++)
    {
        int low = 0,high = LisLength,mid;

        while(low<=high)
        {
            mid = (low+high)/2;

            if(I[mid]<a[i])
                low = mid+1;
            else
                high = mid-1;
        }

        I[low] = a[i];

        //L[i] = low;

        if(LisLength<low)
            LisLength = low;
    }

    return LisLength;;

}



int main()
{
    int runs;
    s( runs );
    while( runs -- )
    {
        int n;
        s( n );
        for(int i=0; i  < n; i++)
        {
            s( a[i] );
            a[i+n] = a[i];
        }

        vector< pair<int, int> > jin;
        for(int i=0; i < n; ++i)
            jin.pb( make_pair( a[i], i ) );
        sort( jin.begin(), jin.end() );

        int best = 1;
        // 1e7 / ( 1e4 log ( 1e4 ) )
        for(int i=0; i < min( 37, (int)jin.size() ); i++)
            best = max( best, find_lis( jin[i].second, n ) );

        printf("%d\n", best );
    }
    return 0;
}
