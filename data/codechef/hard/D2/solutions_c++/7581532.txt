
/*
         +-+ +-+ +-+
         |R| |.| |S|
         +-+ +-+ +-+
*/


#include <bits/stdc++.h>

#define pii             pair <int,int>
#define sc              scanf
#define pf              printf
#define Pi              2*acos(0.0)
#define ms(a,b)         memset(a, b, sizeof(a))
#define pb(a)           push_back(a)
#define MP              make_pair
#define db              double
#define ll              long long
#define EPS             10E-10
#define ff              first
#define ss              second
#define sqr(x)          (x)*(x)
#define D(x)            cout<<#x " = "<<(x)<<endl
#define VI              vector <int>
#define DBG             pf("Hi\n")
#define MOD             100007
#define MAX             10000
#define CIN             ios_base::sync_with_stdio(0); cin.tie(0)
#define SZ(a)           (int)a.size()
#define sf(a)           scanf("%d",&a)
#define sfl(a)          scanf("%lld",&a)
#define sff(a,b)        scanf("%d %d",&a,&b)
#define sffl(a,b)       scanf("%lld %lld",&a,&b)
#define sfff(a,b,c)     scanf("%d %d %d",&a,&b,&c)
#define sfffl(a,b,c)    scanf("%lld %lld %lld",&a,&b,&c)
#define loop(i,n)       for(int i=0;i<n;i++)
#define REP(i,a,b)      for(int i=a;i<=b;i++)
#define TEST_CASE(t)    for(int z=1;z<=t;z++)
#define PRINT_CASE      printf("Case %d: ",z)
#define all(a)          a.begin(),a.end()
#define intlim          2147483648
#define inf             1000000
#define ull             unsigned long long

using namespace std;


/*----------------------Graph Moves----------------*/
//const int fx[]={+1,-1,+0,+0};
//const int fy[]={+0,+0,+1,-1};
//const int fx[]={+0,+0,+1,-1,-1,+1,-1,+1};   // Kings Move
//const int fy[]={-1,+1,+0,+0,+1,+1,-1,-1};  // Kings Move
//const int fx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knights Move
//const int fy[]={-1,  1, -2,  2, -2,  2, -1,  1}; // Knights Move
/*------------------------------------------------*/

/*-----------------------Bitmask------------------*/
//int Set(int N,int pos){return N=N | (1<<pos);}
//int reset(int N,int pos){return N= N & ~(1<<pos);}
//bool check(int N,int pos){return (bool)(N & (1<<pos));}
/*------------------------------------------------*/

int n;
int ara[300000];
int L[10105];
int Sequence[100000];

int LIS(int start, int stop)
{
    ll I[n+10];
    int L[n+10];
    loop(i,n+10) I[i]=INT_MAX;
    I[0]*=-1;
    int ans=0;
    for(int i=start;i<stop;i++)
    {
        int lo=0,hi=stop,mid;
        while(lo<=hi)
        {
            mid=lo+(hi-lo)/2;
            if(ara[i]>I[mid])
                lo=mid+1;
            else
                hi=mid-1;
        }
        I[lo]=ara[i];
        ans=max(ans,lo);

    }
    return ans;
}


int main()
{
    int t;
    sf(t);
    TEST_CASE(t)
    {
        ll mini=INT_MAX;
        int idx=0;
        sf(n);
        REP(i,1,n)
        {
            sf(ara[i]);
            {
                if(ara[i]<mini)
                {
                    mini=ara[i];
                    idx=i;
                }
            }
        }

        int last=idx+n;

        REP(i,1,n-1)
        {
            ara[n+i]=ara[i];
        }

int ans=0;
vector<pii>v;
REP(i,1,n) v.pb(MP(ara[i],i));

sort(all(v));

int till=min(n,100);

till--;

REP(i,0,till)
{
    ans=max(ans,LIS(v[i].ss,v[i].ss+n));
}

        pf("%d\n",ans);

    }
    return 0;
}
