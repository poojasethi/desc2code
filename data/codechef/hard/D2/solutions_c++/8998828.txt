#include<bits/stdc++.h>
#define ll long long
#define si(x) scanf("%lld",&x)
using namespace std;
ll tailTable[10001];
ll CeilIndex( ll l, ll r, ll key)
{
    while (r - l > 1)
    {
        ll m = l + (r - l)/2;
        if (tailTable[m]>=key)
            r = m;
        else
            l = m;
    }
    return r;
}

ll LongestIncreasingSubsequenceLength(ll A[], ll size)
{

    ll len;
    memset(tailTable, 0, sizeof(tailTable[0])*size);

    tailTable[0] = A[0];
    len = 1;
    for (ll i = 1; i < size; i++)
    {
        if (A[i] < tailTable[0])
            tailTable[0] = A[i];

        else if (A[i] > tailTable[len-1])
            tailTable[len++] = A[i];

        else
            tailTable[CeilIndex( -1, len-1, A[i])] = A[i];
    }

    return len;
}
int main()
{
    ll maxAns=0;
    ll t,n,i;
    ll arr[20002];
    si(t);
    while(t--)
    {
        maxAns=0;
        si(n);
        for(i=0;i<n;i++)
        {
            si(arr[i]);
            arr[i+n]=arr[i];
        }
        for(i=0;i<n;i++)
        {
            ll ans=LongestIncreasingSubsequenceLength(arr+i,n);
            if(ans>=maxAns)
            {
                maxAns=ans;

            }
        }
        printf("%lld\n",maxAns);
    }
    return 0;
}
