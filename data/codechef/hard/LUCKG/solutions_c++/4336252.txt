#include<bits/stdc++.h>
using namespace std;
int a[1005],visited[1005];
vector < int > v;
void dfs(int source,int target)
{
	visited[source]=1;
	v.push_back(source);
	if(source!=target)
	dfs(a[source],target);
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int flag=1,n,m,i,j,len,idx,k;
		scanf("%d %d",&n,&m);
		vector < int > vec[1005];
		for(i=0;i<n;i++)
		{
		scanf("%d",&a[i]);
		visited[i]=0;
		}
		long int count=1;
		for(i=0;i<n;i++)
		{
			if(visited[i]==0)
			{
				v.clear();
				visited[i]=1;
				dfs(a[i],i);
				len=v.size();
				if(m==4&&len==3)
				{
					// 1 7  8  9 
					// 4 5  6 12
					// 2 3 10 11
					//special case;
					vec[v[0]].push_back(count++);
					vec[v[2]].push_back(count++);
					vec[v[2]].push_back(count++);
					vec[v[1]].push_back(count++);
					
					vec[v[1]].push_back(count++);
					vec[v[1]].push_back(count++);
					vec[v[0]].push_back(count++);
					vec[v[0]].push_back(count++);
					
					vec[v[0]].push_back(count++);
					vec[v[2]].push_back(count++);
					vec[v[2]].push_back(count++);
					vec[v[1]].push_back(count++);
				}
				else if(m>2&&len>2)
				{
					j=0;
					for(k=1;k<=m;k++)
					{
							int temp=len;
							idx=j;
							while(temp--)
							{
								vec[v[idx]].push_back(count++);
								idx--;
								if(idx==-1)
								idx=len-1;
							}
							j++;
							if(j==len)
							j=0;							
					}				
				}
				else
				flag=0;
			}
		}
		if(flag)
		{
			for(i=0;i<n;i++)
			{
				len=vec[i].size();
				printf("%d",vec[i][0]);
				for(j=1;j<len;j++)
				printf(" %d",vec[i][j]);
				printf("\n");
			}
		}
		else
		printf("No Solution\n");
	}
	return 0;
}