#include<stdio.h>
#include<iostream>
#include<cmath>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<utility>
#define PB push_back
#define MP make_pair
#define LL long long int
#define sc(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
using namespace std;

vector<int> s,ans[1001],v[1001];
int vis[1001], p[1001];

void DFS(int i)
{
	vis[i] = 1;
	int j;
	for(j=0;j<v[i].size();j++)
	{
		if(vis[v[i][j]] == -1)
		{
			DFS(v[i][j]);
			s.PB(v[i][j]);
		}
	}
	return;
}

int main()
{
	int t,i,j,n,m,temp,iter,g;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		
		for(i=0;i<n;i++)
		{
			v[i].clear();
			ans[i].clear();	
		}
		
		for(i=0;i<n;i++)
		{
			cin>>p[i];
			v[i].PB(p[i]);
		}
		/*
		if(n == 3 && m == 4)
		{
			int arr[12] = {1, 7, 8, 9, 4, 5, 6, 12, 2, 3, 10, 11};
			for(i=0;i<12;i++)
			{
				cout<<arr[i]<<endl;
			}
			continue;
		}
		*/
		for(i=0;i<n;i++)
		vis[i] = -1;
		
		if(m <= 2)
		{
			printf("No Solution\n");
			continue;
		}
		
		iter = 1;
		int k;
		g = 0;
		for(i=0;i<n;i++)
		{
			if(vis[i] == -1)
			{
				s.clear();
				DFS(i);
				s.PB(i);
				if(s.size() <= 2 )
				{
					//cout<<"here";
					g = 1;
					break;
				}
				
				if(s.size() == 3 && m == 4){
					int a[12] = {1, 3, 10, 11, 2, 7, 8, 9, 4, 5, 6, 12};
					for(int r = 0; r < 3; r++){
						for(int e = 0; e < 4; e++){
							ans[s[2 - r]].PB(a[r * 4 + e] + iter - 1);
						}
					}
					iter += 12;
					continue;
				}
				
				temp = 0;
				for(j=1;j<=m;j++)
				{
					for(k=0;k<s.size();k++)
					{
						ans[s[temp]].PB(iter);	
						iter++;
						temp++;
						if(temp == s.size())
						temp = 0;
					}
					temp--;
					if(temp < 0)
					temp = s.size() - 1;	
					if(temp == s.size())
					temp = 0;
					
				}
				
			}
		}
		
		if(g == 0)
		{
			for(i=0;i<n;i++)
			{
				sort(ans[i].begin(), ans[i].end());
				for(j=0;j<ans[i].size();j++)
				{
					if(j == ans[i].size() - 1)
					printf("%d",ans[i][j]);
					else
					printf("%d ",ans[i][j]);
				}
				printf("\n");
			}
		}
		else
		{
			printf("No Solution\n");
		}
		
	}
	
	return 0;
}
