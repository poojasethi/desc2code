#include<iostream>
using namespace std;
int final[1001][1001];

int  a[4][5] = {{0,0,0,0,0},{0,1,7,8,11},{0,4,5,6,10},{0,2,3,9,12}};
//int ifgt(int x,int y,int p,int q)
//{
//    int i, j, cn=0;
//    for (i = x; i < y; i++)
//        for(j = p; j < q; j++)
//        {
//            if (a[i]>a[j])
//                cn++;
//        }
//    return cn;
//}
//bool ifvalid()
//{
//    if(ifgt(1,5,5,9) > 8)
//    {
//        if(ifgt(5,9,9,13) > 8)
//        {
//            if(ifgt(9,13,1,5) > 8)
//                return true;
//        }
//    }
//    return false;
//}
//void fun(int idx)
//{
//    if(idx==13)
//    {
//        if (ifvalid())
//        {
//        for(int i=1;i<=12;i++)
//            cout<<a[i]<<" ";
//        cout<<endl;
//        }
//    }
//    for(int i=1;i<=12;i++)
//    {
//        if(check[i])
//            continue;
//        check[i]=1;
//        a[idx]=i;
//        fun(idx+1);
//        check[i]=0;
//    }
//}

int main()
{
    int t,n,m,p[1001],i,j,k,l,cycle[1001],tc=-1,ne,sig,val;
    bool f[1001];
    cin>>t;
    while(t--)
    {
        sig = 0;
        cin>>n>>m;
        val = n*m;
        f[0] = false;
        for (i = 1; i <= n ; i++) {
            cin>>p[i];
            p[i]++;
            f[i] = false;
        }
        if (m < 3) {
            cout<<"No Solution\n";
            sig = 1;
            continue;
        }
        for (i = 1; i <= n; i++) {
            if (f[i] == false) {
                ne = i;
                do{
                    cycle[++tc] = ne;
                    f[ne] = true;
                    ne = p[ne];
                    
                }while (f[ne] == false);
                if (tc < 2) {
                    cout<<"No Solution\n";
                    tc = -1;
                    sig = 1;
                    break;
                }
                else if (m == 4 && tc == 2)
                {
                    val-=12;
                    for (j = 0; j <= tc; j++) {
                        for (k = 1; k <= m; k++) {
                            final[cycle[j]][k] = val+a[j+1][k];
                        }
                    }
                    tc = -1;
                }
                else
                {
                    for (j = m; j > 0; j--) {
                        for (k = 0; k <= tc; k++) {
                            final[cycle[k]][j] = val--;
                        }
                    }
                    for (l = 1; l < (m+1)/2; l++) {
                        k = final[cycle[0]][m+1-l];
                        for (j = 0; j < tc; j++) {
                            final[cycle[j]][m+1-l] = final[cycle[j+1]][m+1-l];
                        }
                        final[cycle[tc]][m+1-l] = k;
                        k = final[cycle[tc]][l];
                        for (j = tc; j > 0; j--) {
                            final[cycle[j]][l] = final[cycle[j-1]][l];
                        }
                        final[cycle[0]][l] = k;
                    }
                    if (m == 4) {
                        l = 2;
                        k = final[cycle[tc]][l];
                        for (j = tc; j > 0; j--) {
                            final[cycle[j]][l] = final[cycle[j-1]][l];
                        }
                        final[cycle[0]][l] = k;
                        k = final[cycle[tc]][l];
                        for (j = tc; j > 0; j--) {
                            final[cycle[j]][l] = final[cycle[j-1]][l];
                        }
                        final[cycle[0]][l] = k;
                    }
                    tc = -1;
                }
            }
        }
        if (sig == 0) {
            for (i = 1; i <= n; i++) {
                for (j = 1; j < m; j++) {
                    cout<<final[i][j]<<" ";
                }
                cout<<final[i][j]<<endl;
            }
        }
    }
    return 0;
}