#include <iostream>
#include<math.h>
 
using namespace std;
 
inline void scanint(int* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	for(; (c<48)||(c>57);c = getchar_unlocked());
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (int)((((*x)<<1) + ((*x)<<3)) + c - 48);
}
 
int cards[1005][1005];
 
int order[1005];
 
bool marked[1005]={false};
 
int main() {
	int t,i,j,k,val,n,m,lol,ct,st,vis;
	
	scanint(&t);
	
	while(t--)
	{
		scanint(&n);scanint(&m);
 
		lol=0;
		
		
		for(i=0;i<n;i++)
		{
			scanint(&order[i]);
			
			marked[i]=false;
			
			if(order[i]==i)lol=1;
		}
		
		
		if(lol==1 || m<3 || n<3)
		{printf("No Solution");if(t>0)printf("\n");}
		
		
		else
		{
		val=(n*m);
		vis=0;
		
		for(j=0;j<n && vis<n;j++)
		{
		if(lol==1)break;
		
		if(marked[j]==false)
		{
			
		k=j;
		st=j;
		for(i=0;i<m;i++)
		{
		ct=0;
		
	
		k=st;
		
			do
			{
			
				if(i==0){marked[k]=true;vis++;ct++;}
				
				cards[k][i]=val--;
				
			
				
				k=order[k];
			}
			while(k!=st);
			
			st=order[st];
			
			if(i==0 && ct<3){lol=1;break;}
		
		
		
		if(i==0 && ct==3 && m==4)
		{
			k=j;
			val+=3;
			cards[k][0]=val-3;cards[k][1]=val-4;cards[k][2]=val-5;cards[k][3]=val-11;
			k=order[k];
			cards[k][0]=val;cards[k][1]=val-6;cards[k][2]=val-7;cards[k][3]=val-8;
			k=order[k];
			cards[k][0]=val-1;cards[k][1]=val-2;cards[k][2]=val-9;cards[k][3]=val-10;
		val-=12;
		break;
		}
			
			
			
			//if(i==0 && (ct<3 || (ct==3 && m==4)))lol=1;
		}
		}
	  }
	
	/*
	for(i=0;i<n;i++)
	{
		ct=0;
		for(j=0;j<m;j++)
		{
			
			if(cards[order[i]][j] < cards[i][j])ct+=m-j;
			else ct+=m-j-1;
			
		}
		
		if(ct<=(int)floor((m*m)/2))lol=1;
	}
	*/
	
	if(lol==1){printf("No Solution");if(t>0)printf("\n");}
	
	
	else
	 {
	  for(i=0;i<n;i++)
		{
			for(j=m-1;j>=0;j--){printf("%d",cards[i][j]);if(j>0)printf(" ");}
			
			if(i<n-1)printf("\n");
		}
		if(t>0)printf("\n");
	 }	
	
	}
	
		
	
	}
	
	
	return 0;
}    