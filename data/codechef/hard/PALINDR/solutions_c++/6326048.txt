#include<iostream>
#include<cstring>
#include<stdio.h>
#include<assert.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<ll,int>
#define SS system("pause")
#define INF 2000000000
#define P 1000000007ll
using namespace std;
const int N=100005;
int n,m,i,j,k;
double A,B=sqrt(2)-1.;
char s[N];
ll fac[N],ans;

ll xar(ll a,int b){
   ll ans=1;
   while(b){
     if(b&1)ans=(ans*a)%P;
     a=(a*a)%P;
     b>>=1;
   }
   return ans;;
}

struct Tri{
    Tri *L,*R;
    int a[10],rev,h,s,x;
}*ST;

int ran(){
    A+=B;
    if(A>1)A-=1;
    return (int)(A*1000000000);
}

Tri *new_tri(int x){
    Tri *T=(Tri *)malloc(sizeof(Tri));
    T->L=T->R=NULL;
    for(int i=0;i<10;i++)T->a[i]=0;
    T->a[x]=T->s=1;
    T->x=x;
    T->rev=0;
    T->h=ran();
    return T;
}


void work(Tri *&T){
    if(!T)return;
    if(T->rev){
        if(T->L)T->L->rev^=1;
        if(T->R)T->R->rev^=1;
        swap(T->L,T->R);
        T->rev=0;
    }
}
void update(Tri *&T){
    if(!T)return;

    for(int i=0;i<10;i++)T->a[i]=0;
    T->a[T->x]++;
    T->s=(T->L?T->L->s:0)+(T->R?T->R->s:0)+1;
    if(T->L)
        for(int i=0;i<10;i++)T->a[i]+=T->L->a[i];
    if(T->R)
        for(int i=0;i<10;i++)T->a[i]+=T->R->a[i];
}


void merg(Tri *&T,Tri *A,Tri *B){
    if(!A){T=B;return;}
    if(!B){T=A;return;}


    work(A);
    work(B);

    if(A->h>B->h){
        T=A;
        merg(T->R,A->R,B);
    }else{
        T=B;
        merg(T->L,A,B->L);
    }
    update(T);
   // cout<<"T->s "<<T->s<<endl;
    //cout<<T->s<<endl;SS;
}


void split(Tri *T,Tri *&L,Tri *&R,int x){
    if(!T){L=R=NULL;return;}
    work(T);

    int s=(T->L?T->L->s:0)+1;
    if(x<s){
       R=T;
       split(T->L,L,R->L,x);
       update(R);
    }else{
       L=T;
       split(T->R,L->R,R,x-s);
       update(L);
    }
}

int main()
{//freopen("test.in","r",stdin);
 //freopen("B.out","w",stdout);
 scanf("%d%d",&n,&m);
 fac[0]=1;
 for(i=1;i<=n;i++)fac[i]=(fac[i-1]*i)%P;
 scanf("%s",&s);

 ST=NULL;
 for(i=0;i<n;i++){
    merg(ST,ST,new_tri((int)s[i]-'a'));
 }


 while(m--){
    int k,l,r;

    scanf("%d%d%d",&k,&l,&r);
    Tri *A,*B,*C;


    split(ST,B,C,r);
    split(B,A,B,l-1);


    if(k==1)B->rev^=1;else{
        int e=0;
      //  for(int i=0;i<10;i++)cout<<B->a[i]<<' ';cout<<endl;
        for(int i=0;i<10;i++)
            if(B->a[i]&1)e++;
        if(e>1)ans=0;else{
              ans=fac[(r-l+1)/2];
              for(int i=0;i<10;i++)
                ans=(ans*xar(fac[B->a[i]/2],P-2))%P;
        }
        printf("%lld\n",ans);
    }
    merg(B,A,B);
    merg(ST,B,C);
   //for(int i=0;i<10;i++)cout<<ST->a[i]<<' ';cout<<endl;
 }

 return 0;
}
