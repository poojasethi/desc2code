#include <iostream>
#include <string>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
#define pb push_back
#define mp make_pair
#define ss second
#define ff first
using namespace std;
const int inf = (int)1e7;

char s[100002];
int cnt44[100002], cnt47[100002], cnt77[100002];
int prf44[100002], prf47[100002], prf77[100002];
int n;
int usd;


void solve()
{
	cnt44[n] = 0;
	cnt47[n] = 0;
	cnt77[n] = 0;
	for (int i = n - 1; i >= 0; i--)
	{
		cnt47[i] = 0;
		if (s[i] == '4')
		{
			cnt44[i] = cnt44[i + 1] + 1;
			if (cnt77[i + 1])
				cnt47[i] = max(cnt77[i + 1] + 1, cnt47[i]);
			if (cnt47[i + 1])
				cnt47[i] = max(cnt47[i + 1] + 1, cnt47[i]);
			cnt77[i] = cnt77[i + 1];
		}
		else 
		{
			cnt77[i] = cnt77[i + 1] + 1;
			if (cnt47[i + 1])
				cnt47[i] = max(cnt47[i], cnt47[i + 1]);
			cnt44[i] = cnt44[i + 1];
		}
	}
	int result = max(cnt44[0], max(cnt47[0], cnt77[0]));
	for (int i = 0; i < n; i++)
	{
		prf47[i] = 0;
		prf77[i] = 0;
		prf44[i] = 0;
		if (s[i] == '4')
		{
			prf44[i] = (i ? prf44[i - 1] : 0) + 1;
			if (i && prf47[i - 1])
				prf47[i] = max(prf47[i - 1], prf47[i]);
			prf77[i] = prf77[i - 1];
		}
		else 
		{
			prf77[i] = (i ? prf77[i - 1] : 0) + 1;
			prf44[i] = (i ? prf44[i - 1] : 0);
			if (i && prf47[i - 1])
				prf47[i] = max(prf47[i], prf47[i - 1] + 1);
			if (i && prf44[i - 1])
				prf47[i] = max(prf47[i], prf44[i - 1] + 1);
		}
		if (i)
		{
			// 1 3 2
			result = max(result, prf44[i - 1] + cnt44[i]);
			result = max(result, prf47[i - 1] + cnt44[i]);
			result = max(result, prf77[i - 1] + cnt44[i]);
			if (prf47[i - 1] && cnt47[i])
				result = max(result, prf47[i - 1] + cnt47[i]);
			result = max(result, prf44[i - 1] + cnt77[i]);
			result = max(result, prf47[i - 1] + cnt77[i]);
			result = max(result, prf77[i - 1] + cnt77[i]);
			// 2 3 1
			result = max(result, prf77[i - 1] + cnt47[i]);
			

		}
		if (i < n - 1)
		{
			// 2 1 3
			result = max(result, cnt44[i + 1] + prf44[i]);
			result = max(result, cnt47[i + 1] + prf44[i]);
			result = max(result, cnt77[i + 1] + prf44[i]);
			if (cnt47[i + 1] && prf47[i])
				result = max(result, cnt47[i + 1] + prf47[i]);
			result = max(result, cnt44[i + 1] + prf77[i]);
			result = max(result, cnt47[i + 1] + prf77[i]);
			result = max(result, cnt77[i + 1] + prf77[i]);
			// 3 1 2
			if (prf47[i])
				result = max(result, cnt44[i + 1] + prf47[i]);
		}
	}
	cout << result << "\n";
}

int main()
{
//	freopen("b.in", "rt", stdin);
//	freopen("b.out", "wt", stdout);
	int T;
	cin >> T;
	gets(s);
	for (int i = 0; i < T; i++)
	{
		gets(s);
		n = strlen(s);
		solve();
	}
	return 0;
}