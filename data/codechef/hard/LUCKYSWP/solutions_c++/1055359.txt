#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <iostream>
#include <vector>
#include <map>
#include <utility>
#include <algorithm>
#include <queue>
#include <set>
#include <stack>
#include <list>

using namespace std;

//GyS Loves Algorithm
#define X first
#define Y second
#define all(x) x.begin(), x.end()
#define mk(x, y) make_pair(x, y)
#define pb(x) push_back(x)
#define rep(x, n) for (int x = 0; x < n; x++)
#define range(x, a, b)for (int x = a; x <= b; x++)
#define sz(x) x.size()
#define setv(x, y) memset(x, y, sizeof(x))
#define repi(it, x) for (typeof(x.begin()) it = x.begin(); it != x.end(); ++it)
#define pl() printf("\n")

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
const int inf = 1 << 30;

char ss[100100];
int c4[100100], c7[100100];

int get(int n)
{
	c4[0] = c7[0] = 0;
	for (int i = 1; i <= n; i++) {
		c4[i] = c4[i - 1] + (ss[i] == '4');
		c7[i] = c7[i - 1] + (ss[i] == '7');
	}

	if (c4[n] == 0) {
		return n;
	}

	int ret = 0;
	int sum = 0;
	int maxv = 0;
	int minv = 0;
	for (int i = 1; i <= n; i++) {
		sum = c7[i] - c4[i];
		maxv = max(maxv, sum - minv);
		minv = min(minv, sum);
		if (ss[i] == '4') {
			ret = max(ret, c4[i] + c7[n] - c7[i] + maxv);
		}
	}
	return ret;
}

int main()
{
	int T;


	scanf("%d", &T);
	while (T--) {
		scanf("%s", ss + 1);
		int len = strlen(ss + 1);
		int ret1 = get(len);
		//printf("%d %s %d\n", len, ss + 1, ret1);
		for (int i = 1; i <= len; i++) {
			ss[i] = ss[i] == '7' ? '4' : '7';
		}
		reverse(ss + 1, ss + len + 1);
		int ret2 = get(len);
		//printf("%d %s %d\n", len, ss + 1, ret2);
		printf("%d\n", ret1);

	}
	return 0;
}
