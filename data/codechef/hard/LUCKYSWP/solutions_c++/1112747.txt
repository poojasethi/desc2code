#include<iostream>
#include<stdio.h>
#include<string.h>
#include<queue>
#include<math.h>
#include<algorithm>
using namespace std;
int f_max(int x,int y){return x>y?x:y;}
char str[100005];
int dp[100005][2][2];
void run(){
	int i,l=strlen(str);
	for(i=0;str[i];i++)str[i]=(str[i]=='4')?'0':'1';
	memset(dp,-1,sizeof(dp));
	dp[0][str[0]-'0'][0]=1;dp[0][str[0]-'0'][1]=0;
	dp[0][(str[0]-'0')^1][0]=0;dp[0][(str[0]-'0')^1][1]=0;
	for(i=0;i<l-1;i++){
		//0 0
		if(dp[i][0][0]!=-1){
			dp[i+1][0][0]=f_max(dp[i+1][0][0],dp[i][0][0]);
			if(str[i+1]=='0')dp[i+1][0][0]=f_max(dp[i+1][0][0],dp[i][0][0]+1);
			else dp[i+1][1][0]=f_max(dp[i+1][1][0],dp[i][0][0]+1);
		}
		//0 1
		if(dp[i][0][1]!=-1){
			dp[i+1][0][1]=f_max(dp[i+1][0][1],dp[i][0][1]);
			if(str[i+1]=='0')dp[i+1][0][1]=f_max(dp[i+1][0][1],dp[i][0][1]+1);
			else dp[i+1][1][1]=f_max(dp[i+1][1][1],dp[i][0][1]+1);
		}
		//1 0
		if(dp[i][1][0]!=-1){
			dp[i+1][1][0]=f_max(dp[i+1][1][0],dp[i][1][0]);
			if(str[i+1]=='0')dp[i+1][0][1]=f_max(dp[i+1][0][1],dp[i][1][0]+1);
			else dp[i+1][1][0]=f_max(dp[i+1][1][0],dp[i][1][0]+1);
		}
		//1 1
		if(dp[i][1][1]!=-1){
			dp[i+1][1][1]=f_max(dp[i+1][1][1],dp[i][1][1]);
			if(str[i+1]=='0');
			else dp[i+1][1][1]=f_max(dp[i+1][1][1],dp[i][1][1]+1);
		}
	}
	printf("%d\n",f_max(f_max(dp[l-1][0][0],dp[l-1][0][1]),f_max(dp[l-1][1][0],dp[l-1][1][1])));
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		scanf("%s",str);
		run();
	}
	return 0;
}
