#include <cstdio>
#include <string>
#include <vector>
#include <ctime>
#include <cstdlib>
#include <cstring>
#include <utility>
#include <cmath>
#include <stack>
#include <queue>
#include <map>
#include <bitset>
#include <list>
#include <set>
#include <cassert>
#include <iostream>
#include <sstream>
#include <algorithm>

using namespace std;

#define fill(a,val) memset(a,val,sizeof(a))
#ifdef LOCAL
#define debug(format,args...) {cerr << #args << " -> "; fprintf(stderr,format,args); cerr << endl;}
#else
#define debug(args...);
#endif

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;

const int mod = 1000000007;

int Mat[4][4] = {{1,1,5,3},{1,0,0,0},{0,0,1,1},{0,0,1,0}};
int Unity[4][4] = {{1,0,0,0},{0,1,0,0},{0,0,1,0},{0,0,0,1}};
int Power[52][4][4];

inline void copy(int A[][4],int B[][4]){
	//for(int i=0;i<4;i++) for(int j=0;j<4;j++) A[i][j] = B[i][j];
	memcpy(A,B,16*sizeof(int));
}

void print(int A[][4]){
	for(int i=0;i<4;i++){
		for(int j=0;j<4;j++) cout << A[i][j] << " ";
		cout << endl;
	}
	cout << endl;
}

void mult(int A[][4],int B[][4]){
	int C[4][4];
	ll temp=0;
	for(int i=0;i<4;i++){
		for(int k=0;k<4;k++){
			temp = 0;
			for(int j=0;j<4;j++){
				temp += ((ll)A[i][j] * B[j][k]);
				assert(temp >= 0);
				if(temp >= mod) temp = temp % mod;
			}
			C[i][k] = temp;
			if(C[i][k] >= mod) C[i][k] %= mod;
		}
	}
	copy(A,C);
}

void preCal(){
	int A[4][4];
	copy(Power[0],Unity);
	copy(Power[1],Mat);
	copy(A,Mat);
	for(int i=2;i<52;i++){
		mult(A,A);
		copy(Power[i],A);
	}
}


ll solve(ll n){
	int A[4][4],B[4][4];
	copy(A,Mat);
	copy(B,Unity);
	int count = 0;
	while(n){
		count++;
		if(n & 1){
			mult(B,Power[count]);
		}
		n = (n>>1);
	}
	ll ans = ((ll)B[0][0] * 5 + (ll)B[0][2] * 2 + B[0][3]) % mod;
	return ans;
}

const int bufsize=1<<18;
int nowL=0,bufL=0;
char buf[bufsize];
int nowL2=0;
char buf2[bufsize];

char readchar()
{
	if (nowL==bufL)
	{
		bufL=fread(buf,sizeof(char),bufsize,stdin);
		if (bufL==0) return 0;
		nowL=0;
	}
	return buf[nowL++];
}

int readint()
{
	char c;
	do{ c=readchar(); } while (c<'0' || c>'9');
	int n=0;
	for (;c>='0' && c<='9';c=readchar()) n=n*10+(c-'0');
	return n;
}

ll readll()
{
	char c;
	do{ c=readchar(); } while (c<'0' || c>'9');
	ll n=0;
	for (;c>='0' && c<='9';c=readchar()) n=n*10+(c-'0');
	return n;
}
void flushwrite()
{
	if (nowL2==0) return;
	fwrite(buf2,sizeof(char),nowL2,stdout);
	nowL2=0;
}
void writechar(char c)
{
	buf2[nowL2++]=c;
	if (nowL2==bufsize) flushwrite();
}
void writell(ll n)
{
	if (n>=10) writell(n/10);
	writechar((char)('0'+(n%10)));
}

int main(){
	#ifdef LOCAL
	freopen("in.txt","r",stdin);
	//freopen("out1.txt","w",stdout);
	#endif
	preCal();
	int tt=0;
	tt = readint();
	while(tt--){
		ll n;
		n = readll();
		ll ans = 0;
		if(n == 1) ans = 0;
		else if(n == 2) ans = 5;
		else ans = solve(n-2);
		writell(ans);
		writechar('\n');
	}
	flushwrite();
	return 0;
}