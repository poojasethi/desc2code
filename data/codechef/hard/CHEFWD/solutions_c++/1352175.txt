#include<stdio.h>

#define MAX 1000000007 

typedef unsigned long ULL;

void mult(ULL a[4][4], ULL b[4][4], ULL c[4][4])
{
	for(int i = 0;i<4;i++)
	{
		for(int j = 0;j<4;j++)
		{
			c[i][j] = 0;
			unsigned long long pro = 0;
			for(int k = 0;k<4;k++)
			{
			        unsigned long long pro1 = a[i][k];
				pro1 = pro1*b[k][j];
				//if(pro>=MAX) pro = pro%MAX;	
				//c[i][j] += pro; 
				//if(c[i][j]>=MAX)
				//	c[i][j]-=MAX;
				pro+= pro1;
			}
			if(pro>= MAX) pro%=MAX;
			c[i][j] = pro;
		}
	}
}
void matpow(ULL a[4][4], ULL res[4][4], unsigned long long k)
{
	if(k == 0)
	{
		for(int i = 0;i<4;i++)
		{
			for(int j = 0;j<4;j++)
			{
				if(i == j)
					res[i][j] = 1;
				else
					res[i][j] = 0;
			}
		}
		return;
	}
	ULL sq[4][4];
	mult(a,a,sq);
	if(k%2)
	{
		ULL tmpres[4][4];
		matpow(sq, tmpres, k/2);
		mult(a, tmpres, res);
	}
	else
	{
		matpow(sq, res, k/2);
	}
}




int main()
{
	int t;
	unsigned long long n;
	scanf("%d", &t);
	ULL a[4][4] = {{1,1,1,1}, {1, 0,0,0}, {0,0,1,1}, {0,0,1,0}};
	for(int i = 0;i<t;i++)
	{
		scanf("%llu", &n);
		if(n < 2)
		{
			printf("0\n");
			continue;
		}
		if(n == 2){
			printf("5\n");
			continue;
		}
		ULL res[4][4];
		matpow(a,res, n-2);
		ULL sn = 0;
		unsigned long long z = (((unsigned long long)res[0][0])*5);
		z = z + (((unsigned long long)res[0][2])*8);
		z = z + (((unsigned long long)res[0][3])*5);
		sn = z%MAX;
		printf("%lu\n", sn%MAX);
	}
}
