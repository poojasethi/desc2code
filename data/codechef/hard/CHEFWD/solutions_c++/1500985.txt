//Tornike Mandzulashvili

#include <stdio.h>

#include <algorithm>

#define md 1000000007 

 

using namespace std;

struct node

{

       long long d[4][4];

       };

struct point

{

       long long d[2][2];

       };       

int k,l,t,i,MAXN,MAXN2,j;   

point check2[100];

node dp[100][100];

node check[100];

int x[4],h[100];

long long y,big,a,u,v,num,n;

node p,q,tt;

point pp,qq,ttt;

 

node unite(node a,node b)

{

     node t;

     for (int i=0;i<4;i++)

     for (int j=0;j<4;j++)

     {

     t.d[i][j]=0;

     for (int k=0;k<4;k++)

     t.d[i][j]=(t.d[i][j]+a.d[i][k]*b.d[k][j]+(long long)md*md)%md;

     }

     return t;

 }

point unite2(point a,point b)

{

     point t;

     for (int i=0;i<2;i++)

     for (int j=0;j<2;j++)

     {

     t.d[i][j]=0;

     for (int k=0;k<2;k++)

     t.d[i][j]=(t.d[i][j]+a.d[i][k]*b.d[k][j]+(long long)md*md)%md;

     }

     return t;

 }

 

pair <long long,long long> go(long long x)

{

     x-=2;
     

     point k=pp;

     long long y=x;

     l=0;

     while (y>0)

     {

           l++;

           if (y%2)k=unite2(k,check2[l]);

           y/=2;

           }
     

    long long hh =(k.d[0][1]+k.d[1][1]+(long long)4*md)%md;

    k=unite2(k,check2[1]);

    long long hh2=(k.d[0][1]+k.d[1][1]+(long long)4*md)%md;

    return make_pair(hh,hh2);

 }
 
 

main()

{

  //    freopen("text.in","r",stdin);freopen("text.out","w",stdout);srand(time(NULL));int xx=clock();
      

      for (i=0;i<4;i++)

      for (j=0;j<4;j++)

      p.d[i][j]=0;
      

      p.d[0][0]=1;

      p.d[1][1]=1;

      p.d[2][2]=1;

      p.d[3][3]=1;
      

 

      for (i=0;i<4;i++)

      for (j=0;j<4;j++)

      q.d[i][j]=0;

      q.d[0][3]=-1;

      q.d[1][0]=1;

      q.d[1][3]=-2;

      q.d[2][1]=1;

      q.d[2][3]=1;

      q.d[3][2]=1;

      q.d[3][3]=2;
      

      big=1000000000;

      big=(long long) big*1000000;

 

      for (i=0;i<2;i++)

      for (j=0;j<2;j++)

      pp.d[i][j]=0;

 

      pp.d[0][0]=1;

      pp.d[1][1]=1;

 

      for (i=0;i<2;i++)

      for (j=0;j<2;j++)

      qq.d[i][j]=0;

 

      qq.d[0][1]=1;

      qq.d[1][0]=1;

      qq.d[1][1]=1;
      

      num=0;

      num++;

      check[num]=q;

      for (a=2;a<=big;a=(long long)a*2)

      {

          num++;

          check[num]=unite(check[num-1],check[num-1]);

      }
      

      for (i=1;i<=num;i++)

      for (j=i;j<=num;j++)

      {

          dp[i][j]=check[i];

          for (k=i+1;k<=j;k++)

          dp[i][j]=unite(dp[i][j],check[k]);

      }
      
      

      num=0;

      num++;

      check2[num]=qq;

      for (a=2;a<=big;a=(long long)a*2)

      {

          num++;

          check2[num]=unite2(check2[num-1],check2[num-1]);

      }
      
      
      

      scanf("%d",&t);

      while (t--)

      {

            scanf("%lld",&n);

            n+=3;

            pair <long long,long long> uu=go(n-2);

            u=uu.second;v=uu.first;
            

            l=0;

            y=n-4;

            node k=p;

             for (i=1;i<=60;i++)

             h[i]=0;

            while (y>0)

            {

                  l++;

                  h[l]=y%2;

                  y/=2;

                  }
            
             

             for (i=1;i<=l;i++)

             {

                 if (h[i]==1)

                 {

                             a=i;

                             while (h[i+1]==1) i++;

                             k=unite(k,dp[a][i]);

                             }

             }     
            

            x[0]=2;x[1]=5;x[2]=10;x[3]=20;

            num=0;
            

            for (i=0;i<4;i++)

            num=(num+k.d[i][3]*x[i]+(long long)md*md)%md;
            

            num+=(long long)md*md;

 

            num-=(2*(u+v+u))%md;

            num-=(u+v)%md;

            num-=(2*u)%md;

            num-=(3*v)%md;

            num%=md;

            printf("%lld\n",num);

            }

 

 //     printf("%d\n",clock()-xx);

 

}