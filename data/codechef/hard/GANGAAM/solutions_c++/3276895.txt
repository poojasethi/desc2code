#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
using namespace std;
struct node {
    int s, e;
};
node inp[300];
bool cmp(node a, node b) {
    if (a.s != b.s)
        return a.s < b.s;
    return a.e < b.e;
}
bool is_friend(int x, int y) {
    return inp[x].s <= inp[y].e;
}
int main() {
    int tc, n, x;
    scanf("%d",&tc);
    while (tc--) {
        scanf("%d %d",&n,&x);
        for (int i=0; i<n; i++) {
            scanf("%d %d",&inp[i].s,&inp[i].e);
        }
        sort(inp, inp+n, cmp);
        int incl[n], ans = 0, idx;
        if (x == 1) {
            printf("%d\n",n);
            continue;
        }
        memset(incl, 0, sizeof(incl));
        for (int i=0; i<n; i++) {
            int no_frnd = 1;
            for (int j=0; j<i; j++) {
                if ((is_friend(i, j))  && (!incl[j])) {
                    no_frnd += 1;
                }
            }
            if (no_frnd == x) {
                idx = i;
                for (int j=0; j<i; j++) {
                    if ((!incl[j]) && (is_friend(i, j))) {
                        if (inp[j].e > inp[idx].e) {
                            idx = j;
                        }
                    }
                }
                ans += 1;
                incl[idx] = 1;
            }
        }
        printf("%d\n",ans);
    }
    return 0;
}
