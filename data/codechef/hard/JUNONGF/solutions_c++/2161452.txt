#include<iostream>
#include<cstdio>
using namespace std;
#define mod  1000000007
typedef long long int UL;

typedef long long int UL;

inline void fastRead(long long int *a)
{
  register char c=0;
  while (c<33) c=getchar_unlocked();
  *a=0;
  while (c>33)
    {
      *a=*a*10+c-'0';
      c=getchar_unlocked();
    }
}
UL mulmod(UL a,UL b,UL modulus)  {
//  return by (a*b)%modulus
//  good for |a|,|b|,|m| < 2^63
    UL result=0,res,M;

    int sign=0;

    if(modulus<0)  modulus=-modulus;
    M=(UL) modulus;
    if(a<0)  a=-a,sign++;
    if(b<0)  b=-b,sign++;

    a%=M;
    b%=M;
    res=b;
    while(a)  {
       if(a&1)  {
          result+=res;
          if(result>=M)  result-=M;
       }
       res<<=1;
       if(res>=M)  res-=M;
       a>>=1;
    }
    if(sign&1)  result=M-result;
    if(result==M)  result=0;
    return result;
}


UL modulo(UL a, UL b, UL c= mod){
      UL x=1,y=a;
       while(b > 0){
         if(b%2 == 1){
            x = mulmod(x,y,c);;
         }
         y = mulmod(y,y,c);
         b /= 2;
       }
    return x%c;
}



int main(){

   #ifdef _FOOLS_SYS_
     freopen("input.txt","r",stdin);
   #endif

           int t;
        scanf("%d",&t);
        while(t-->0)
        {
                long long int v;
                long long int n;
                fastRead(&v);fastRead(&n);
            long long  int p[n],q[n],a0,b0,c0,m0,a1,b1,c1,m1;
            long long  int l[n];

                fastRead(&p[0]);fastRead(&p[1]);fastRead(&a0);fastRead(&b0);fastRead(&c0);fastRead(&m0);
                fastRead(&q[0]);fastRead(&q[1]);fastRead(&a1);fastRead(&b1);fastRead(&c1);fastRead(&m1);
                a0=(a0*a0)%m0;
                a1=(a1*a1)%m1;
                for(int i=2;i<n;i++)
                {
                        p[i] = ((a0*p[i-1])%m0 +(b0*p[i-2])%m0+c0)%m0;

                        q[i] = ((a1*q[i-1])%m1 +(b1*q[i-2])%m1+c1)%m1;
                }
                long long int ans = 1, flag = 0;
                for(int i = 0; i < n; i++) {
                    if(flag) break;
                    unsigned long long int L = (unsigned long long)((p[i])*m1+q[i]+1);
                    if(L == 1) {
                        flag = 1;
                    }
                    else {
                        ans = (L-1)%(mod-1)*(ans)%(mod-1);
                    }
                }
                if(flag) {
                    printf("1\n");
                    continue;
                }
                else if(v % mod == 0) {
                    printf("0\n");
                    continue;
                }
                else {
                    printf("%lld\n", modulo(v%mod, ans));
                }

        }
   return 0;


}
