#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <cstring>
#include <cassert>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <cassert>
#include <ctime>

#define iter(c) __typeof((c).begin())
#define Tr(a,b) for(iter(b) a = (b).begin(); a != (b).end(); ++a)
#define Fr(a,b,c) for(int a = b; a < c; ++a)
#define Rp(a,c) Fr(a,0,c)
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define oo 0x3F3F3F3F

#define dbg if(0)

using namespace std;

typedef pair<int,int> pii;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned long long rash;

#define MAXN 110

const ll MOD = 1000000007LL;
const ll MOD2 = 1000000006LL;

#define gc getchar
void getLL(ll &a) {
	char c = gc();
	while(!('0' <= c && c <= '9')) c = gc();
	a = 0;
	while('0' <= c && c <= '9')
		a = (a << 3) + (a << 1) + c - '0', c = gc();
}

void getInt(int &a) {
	char c = gc();
	while(!('0' <= c && c <= '9')) c = gc();
	a = 0;
	while('0' <= c && c <= '9')
		a = (a << 3) + (a << 1) + c - '0', c = gc();
}

int n;
ll v;

ll P[MAXN], Q[MAXN];
ll A0, B0, C0, M0, A1, B1, C1, M1;

ll go(ll a, ll b) {
	ll r = 1;
	while(b) {
		if(b & 1) r = (r * a) % MOD;
		a = (a * a) % MOD;
		b >>= 1;
	}
	return r;
}

int main() {
	int t; getInt(t); //scanf("%d", &t);
	while(t--) {
		/*
		scanf("%lld%d", &v, &n);
		scanf("%lld%lld%lld%lld%lld%lld", &P[0], &Q[0], &A0, &B0, &C0, &M0);
		scanf("%lld%lld%lld%lld%lld%lld", &P[1], &Q[1], &A1, &B1, &C1, &M1);
		//*/
		getLL(v), getInt(n);
		getLL(P[0]), getLL(P[1]), getLL(A0), getLL(B0), getLL(C0), getLL(M0);
		getLL(Q[0]), getLL(Q[1]), getLL(A1), getLL(B1), getLL(C1), getLL(M1);
		
		A0 = (A0 * A0) % M0;
		A1 = (A1 * A1) % M1;
		Fr(i,2,n) P[i] = ((A0 * P[i - 1]) % M0 + (B0 * P[i - 2]) % M0 + C0) % M0;
		Fr(i,2,n) Q[i] = ((A1 * Q[i - 1]) % M1 + (B1 * Q[i - 2]) % M1 + C1) % M1;
		
		ll e = 1;
		bool zero = false;
		Rp(i,n) {
			ll l = P[i] * M1 + Q[i];
			zero |= l == 0;
			e = (e * (l % MOD2)) % MOD2;
		}
		
		if(zero) puts("1");
		else if(v % MOD) printf("%lld\n", go(v % MOD, e));
		else puts("0");
	}
	
	return 0;
}
