#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <fstream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <iterator>
#include <numeric>
#include <utility>
using namespace std;

#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define fore(i, a, n) for(int i = (int)(a); i < (int)(n); i++)
#define DEBUG if(0)
#define PAUSE system("pause")
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)
#define ALL(c) c.begin(), c.end()
#define PB(x) push_back(x)
#define UB(s, e, x) upper_bound(s, e, x)
#define LB(s, e, x) lower_bound(s, e, x)
#define REV(s, e) reverse(s, e);
#define SZ(c) c.size()
#define SET(p) memset(p, -1, sizeof(p))
#define CLR(p) memset(p, 0, sizeof(p))
#define MEM(p, v) memset(p, v, sizeof(p))
#define LAST(a) (int(a.size()) - 1)
#define PN(n)   printf("%d",n)
#define PDN(n)  printf("%lf",n)
#define PLN(n)  printf("%lld",n)
#define PS(n)   printf("%s",n)
#define PL()    printf("\n")
#define SN(n)   scanf("%d",&n)
#define SDN(n)  scanf("%lf",&n)
#define SLN(n)  scanf("%lld",&n)
#define SS(n)   scanf("%s",n)
#define i64 long long
#define ff first
#define ss second


template< class T > T sq(T &x) { return x * x; }
template< class T > T abs(T &n) { return (n < 0 ? -n : n); }
template< class T > T max(T &a, T &b) { return (!(a < b) ? a : b); }
template< class T > T min(T &a, T &b) { return (a < b ? a : b); }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > T mod(T &a, T &b) { return (a < b ? a : a % b); }
template< class T > bool inside(T &a, T &b, T &c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

const double EPS = 1E-9;
const int MOD = 1000000007;
const int INF = 0x3f3f3f3f;
const double PI = 3.1415926535897932384626433832795;
const int MAX = 150;
int dx[]={ 0, 0, -1, 1, -1, 1,-1, 1};
int dy[]={-1, 1,  0, 0, -1,-1, 1, 1};

long long p[MAX], q[MAX], l[MAX];

int power( long long x,long long y )
{
	long long ans = 1LL;
    while ( y ) {
		if ( y & 1 ) {
			ans = (ans*x);
			if ( ans >= MOD ) ans %= MOD;
		}
		x = (x*x);
		if ( x >= MOD ) x %= MOD;
		y >>= 1;
	}
	return (int)ans;
}

int main()
{
    int t;
    long long n,v,a0,b0,c0,a1,b1,c1,m0,m1;
    SN(t);
    while(t--){
        SLN(v); SLN(n);
        scanf("%lld%lld%lld%lld%lld%lld",&p[0],&p[1],&a0,&b0,&c0,&m0);
        scanf("%lld%lld%lld%lld%lld%lld",&q[0],&q[1],&a1,&b1,&c1,&m1);

        a0=(a0*a0)%m0;
        a1=(a1*a1)%m1;
        for(int i=2;i<n;i++){
            p[i]=(a0*p[i-1]) + (b0*p[i-2])+ c0;
            q[i]=(a1*q[i-1]) + (b1*q[i-2])+ c1;
            if(p[i]>=m0) p[i]%=m0;
            if(q[i]>=m1) q[i]%=m1;
        }
        bool fl=false;
        for(int i=0;i<n;i++){
            l[i]=(p[i]*m1)+q[i];
            if(!l[i]){
                fl=true;
                break;
            }
            if(l[i]>=(MOD-1)) l[i]%=(MOD-1);
        }
        if(fl){
            printf("1\n");
            continue;
        }
        long long dim=1LL;
        for(int i=0;i<n;i++){
            dim*=l[i];
            if(dim>=MOD-1)dim%=MOD-1;
        }

        if(v>=MOD) v%=MOD;
        int res;
        if(v==0) res=0;
        else res=power(v,dim);
        printf("%d\n",res);
    }
    return 0;
}
