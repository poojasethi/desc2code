#include<cstdio>
#include<cassert>
typedef unsigned u32;
typedef unsigned long long u64;
u32 a[2],b[2],c[2],m[2],p[2][100];
const u32 mod= 1000000007,mod1=mod-1;
u32 pm(u64 x,u32 n){
	u32 r=1;
	for(;n;n>>=1,x=x*x%mod)if(n&1)r=x*r%mod;
	return r;
}
int main(){
	u64 v;int T,n;
	for(scanf("%d",&T);T--;){
		scanf("%llu%d",&v,&n);
		for(size_t i=0;i<2;++i){
			scanf("%u%u%u%u%u%u",p[i],p[i]+1,a+i,b+i,c+i,m+i);
			a[i]= (u64)a[i]*a[i]%m[i];
		}
		for(size_t j=2;j<n;++j)
			for(size_t i=0;i<2;++i)
			p[i][j]=(p[i][j-1]*(u64)a[i]+p[i][j-2]*(u64)b[i]+c[i])%m[i];
		u64 tot=1;
		bool xx =false;
		for(size_t i=0;i<n;++i){
			u64 tmp = p[0][i]*(u64)m[1]+p[1][i];
			if(tmp)xx=true;
			tot=tmp%mod1*(u64)tot%mod1;
		}
		if(v%mod==0 && xx)puts("0");else
		printf("%u\n",pm(v%mod,tot));
	}
}
