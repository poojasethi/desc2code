#include<algorithm>
#include<cmath>
#include<cstdio>
#include<cstring>
#include<deque>
#include<iostream>
#include<list>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<string>
#include<vector>
using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ITER(i,a) for(typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define MOD 1000000007

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef long long int ll;

#define N 111
#define MOD2 1000000006

int fastPower(int a,int n){
	int p=1;
	for(;n;){
		if(n%2) p=ll(p)*a%MOD;
		if(n/=2) a=ll(a)*a%MOD;
	}
	return p;
}

int main(){
	int test;
	for(scanf("%d",&test);test>0;test--){
		ll v;
		int n;
		scanf("%lld%d",&v,&n);
		int P[N],Q[N];
		int a0,b0,c0,m0,a1,b1,c1,m1;
		scanf("%d%d%d%d%d%d",P,P+1,&a0,&b0,&c0,&m0);
		scanf("%d%d%d%d%d%d",Q,Q+1,&a1,&b1,&c1,&m1);
		a0=ll(a0)*a0%m0;
		a1=ll(a1)*a1%m1;
		for(int i=2;i<n;i++){
			P[i]=(ll(a0)*P[i-1]+ll(b0)*P[i-2]+c0)%m0;
			Q[i]=(ll(a1)*Q[i-1]+ll(b1)*Q[i-2]+c1)%m1;
		}
		int ans;
		if(v%=MOD){
			int deg=1;
			for(int i=0;i<n;i++) deg=(ll(P[i])*m1+Q[i])%MOD2*deg%MOD2;
			ans=fastPower(v,deg);
		}
		else{
			ans=1;
			for(int i=0;i<n && ans;i++) if(P[i] || Q[i]) ans=0;
		}
		printf("%d\n",ans);
	}
	return 0;
}