#include<iostream>
#define MOD 1000000007
#define PHI 1000000006
using namespace std;
typedef long long int int64;


/*fast power*/
/* This function calculates (a^b)%c for int64 c also*/
int64  powmod(int64 a,int64 b,int64 c)
{
    int64 x=1,y=a%c;// long long is taken to avoid overflow of intermediate results
    if(y==0) return 0;
	while(b>0)
    {
        if(b&1) x = x*y%c;//mulmod(x,y,c);
         y = y*y%c;//mulmod(y,y,c); // squaring the base
        b>>=1;
    }
    return x;
}

int main()
{
	int64 t,v,n;
	int64 P[100], A0, B0, C0, M0;
	int64 Q[100], A1, B1, C1, M1;
	int64 L[100];
	
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld%lld",&v,&n);
		scanf("%lld %lld %lld %lld %lld %lld",&P[0],&P[1],&A0,&B0,&C0,&M0);
		scanf("%lld%lld%lld%lld%lld%lld",&Q[0],&Q[1],&A1,&B1,&C1,&M1);
		
		int64 xx=1ll;
		for(int i=0;i<n;i++)
		{
			if(i>=2)
			{
			P[i] = (A0 * A0 %M0* P[i-1]%M0 + B0 * P[i-2]%M0+ C0)% (M0);
			Q[i] = (A1 * A1 %M1* Q[i-1] %M1+ B1 * Q[i-2]%M1+ C1)% (M1);
			}
		L[i] = P[i]*(M1)+Q[i];
		if(L[i]==0) {printf("1\n");goto A;} 
		xx=L[i]%PHI*xx%PHI;
		}
		//v^Pi(l[i]-1)%MOD
		
		printf("%lld\n",powmod(v,xx,MOD));
		A:;
	}
}