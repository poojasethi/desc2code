#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

unsigned long long p[105], q[105], l[105];
unsigned long long mod = 1000000007;

unsigned long long binpow(unsigned long long a, unsigned long long n)
{
	unsigned long long ans = 1;
	while(n > 0)
	{
		if(n % 2)
			ans = (ans * a) % mod;
		a = (a * a) % mod;
		n /= 2;
	}
	return ans;
}

int main()
{
	int t;
	scanf("%d", &t);

	for(int tt = 0; tt < t; tt ++)
	{
		unsigned long long v, n;
		scanf("%llu%llu", &v, &n);
		unsigned long long a0, b0, c0, m0, a1, b1, c1, m1;
		scanf("%llu%llu%llu%llu%llu%llu", &p[0], &p[1], &a0, &b0, &c0, &m0);
		scanf("%llu%llu%llu%llu%llu%llu", &q[0], &q[1], &a1, &b1, &c1, &m1);

		for(int i = 2; i < n; i++)
		{
			p[i] = (((((a0 * a0) % m0) * p[i-1]) % m0) + ((b0 * p[i-2]) % m0) + c0) % m0;
			q[i] = (((((a1 * a1) % m1) * q[i-1]) % m1) + ((b1 * q[i-2]) % m1) + c1) % m1;
		}

		v %= mod;
		bool hasZ = 0;
		unsigned long long sum = 1;
		for(int i = 0; i < n; i++) {
			l[i] = (((p[i] * m1) % (mod - 1)) + q[i]) % (mod - 1);
			if(((p[i] * m1) % (mod - 1)) + q[i] == 0)
				hasZ = 1;
			sum = (sum * l[i]) % (mod - 1);
		}
		unsigned long long ans = binpow(v, sum);
		if(hasZ == 0 && sum == 0)
			ans = 0;
		
		printf("%llu\n", ans);
	}
	
	return 0;
}

/*
3
1 2
1 1 1 1 1 1
1 1 1 1 1 1
3 2
1 1 1 1 1 2
2 1 1 1 1 1
3 3
1 1 1 1 1 2
1 1 0 0 0 2
*/