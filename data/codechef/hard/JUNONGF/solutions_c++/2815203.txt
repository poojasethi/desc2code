#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include<list>

#define si(n)                       scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define pi(n)                       printf("%d\n",n)
#define pc(n)                       printf("%c\n",n)
#define pl(n)                       printf("%lld\n",n)
#define pf(n)                       printf("%lf\n",n)
#define ps(n)                       printf("%s\n",n)

// Useful constants

#define INF                         (int)1e9
#define EPS                         1e-9

// Useful container manipulation / traversal macros

#define loop(i,a,b)                 for(int i=a;i<b;i++)
#define foreach(v,c)                for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                   memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair

// Some common useful functions

#define MAX(a,b)                     ( (a) > (b) ? (a) : (b))
#define MIN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define SORT(a)                      ( sort(all(a))
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())
#define MOD 1000000007
typedef long long ll;
using namespace std;

ll mod_pow(ll a, ll p)
{
  if(a==0)
    return 0;
  if(p==1)
    return a%MOD;
  if(p==0)
    return 1;
  if(a==1)
    return 1;

  ll tmp = mod_pow(a,p/2);
  tmp = ((tmp%MOD)*(tmp%MOD))%MOD;
  if(p%2)
    tmp = (tmp* (a%MOD))%MOD;
return tmp%MOD;
}

int main()
{
    int t;
    scanf("%d",&t);
  
    while(t--)
    {
      ll v,n;
      sl(v);
      sl(n);

      ll p[n],a0,b0,c0,m0;
      ll q[n],a1,b1,c1,m1;
      
      sl(p[0]);
      sl(p[1]);
      sl(a0);
      sl(b0);
      sl(c0);
      sl(m0);
      sl(q[0]);
      sl(q[1]);
      sl(a1);
      sl(b1);
      sl(c1);
      sl(m1);
      
      ll l[n];

      loop(i,2,n)
        p[i] = ((((a0%m0)*(a0%m0))%m0*(p[i-1]%m0))%m0 + ((b0%m0)*(p[i-2]%m0) + c0%m0)%m0)%m0;
      loop(i,2,n)
        q[i] = ((((a1%m1)*(a1%m1))%m1*(q[i-1]%m1))%m1 + ((b1%m1)*(q[i-2]%m1) + c1%m1)%m1)%m1;
      loop(i,0,n)
        l[i] = p[i]*m1 + q[i] + 1;
      
      ll ans;
//      loop(i,0,n)
//        pl(l[i]);
      ll tmp = 1;
      
      loop(i,0,n)
      {
        if(v%MOD)
        {
          l[i]--;
          l[i] %= (MOD-1);
          tmp = (tmp*l[i])%(MOD-1);
        }
        else if(l[i]==1)
        {
          tmp = 0;
          break;
        }
      }
      
      if(tmp==0)
        printf("1\n");
      else if(v%MOD==0)
        printf("0\n");
      else
      {
        ans = mod_pow(v%MOD,tmp);
        pl(ans);
      }
    }
return 0;
}
