#include <iostream>
#include <string>
#include <vector>
#include <cstring>
using namespace std;

const int Maxl = 26;

int t;
bool is[Maxl], ans;
vector <int> cons;
string s;

bool Get(int &pos)
{
     char op = s[pos++];
     if (islower(op)) return is[op-'a'];
     bool tr1, tr2;
     tr1 = Get(pos);
     if (op != 'N') tr2 = Get(pos);
     switch (op) {
            case 'C': return tr1 && tr2;
            case 'D': return tr1 || tr2;
            case 'I': return !tr1 || tr2;
            case 'E': return !(tr1 ^ tr2);
            case 'N': return !tr1;
     }
}

void Search(int lvl)
{
     if (!ans) return;
     if (lvl == cons.size()) {
             int dum = 0;
             if (!Get(dum)) ans = false;
     } else {
            Search(lvl+1);
            is[cons[lvl]] = false;
            Search(lvl+1);
            is[cons[lvl]] = true;
     }
}

int main()
{
    cin >> t;
    while (t--) {
          cin >> s;
          fill(is, is+Maxl, false); cons.clear(); ans = true;
          for (int i = 0; i < s.length(); i++)
             if (islower(s[i])) is[s[i]-'a'] = true;
          for (int i = 0; i < Maxl; i++)
             if (is[i]) cons.push_back(i);
          Search(0);
          if (ans) cout << "YES\n";
          else cout << "NO\n";
    }
    return 0;
}
