#include <iostream>
#include <stack>
#include <cstring>
using namespace std;
stack <char> s;


bool check_unary(){
	bool ret=false;
	char temp;
	if(s.size()>=2 && (s.top()=='T' || s.top()=='F') )
	{
		temp=s.top();
		s.pop();
		if(s.top()=='N') {
			ret=true;
			s.pop();
			temp= temp=='T'? 'F':'T';
			s.push(temp);
		}
		else s.push(temp);
	} 
	return ret;
}

bool check_binary(){
	bool ret=false;
	char ans;
	char t1,t2,t0;
	if(s.size()>=3 && (s.top()=='T' || s.top()=='F') )
	{
		t1=s.top();
		s.pop();
		if(s.top()=='T' || s.top()=='F') 
		{
			t2=s.top();
			s.pop();
			if(!(s.top()=='T' || s.top()=='F' || s.top()=='N'))
			{
				ret=true;
				t0=s.top();
				s.pop();

				switch(t0){

				  case 'C':
				    ans= t1=='T' && t2=='T' ? 'T':'F';
				    break;
				  case 'D':
				   ans= t1=='T' || t2=='T' ? 'T':'F';
				    break;
				   case 'I':
				   ans= t2=='F' || t1=='T' ? 'T':'F';
				    break;
				   case 'E':
				   ans= (t1=='T' && t2=='T') || (t1=='F' && t2=='F') ? 'T':'F';
				    break;
				}
				s.push(ans);
			}
			else s.push(t2);
		}
		else s.push(t1);

	} 
	return ret;
}

int main(){
	int t,i,j,k,cnt;
	bool taut;	
	int ind[26];
	string p;
	cin>>t;

	while(t--)
	{
		cin>>p;
		cnt=0;
		taut=true;
		if(p.length()==1) {cout<<"NO\n";continue;}
		
		for(i=0;i<26;i++) ind[i]=-1;
		for(i=0;i<p.length();i++)
			if(p[i]>='a' && p[i] <='z' && ind[p[i]-'a']==-1)   ind[p[i]-'a']=cnt++;

		for(j=0;j< 1<<cnt ;j++)
		{
			for(i=0;i<p.length();i++)
			{
				if(!(p[i]>='a' && p[i] <='z' ) )
					s.push(p[i]);
				else
				{
					s.push(j& (1<<ind[p[i]-'a']) ? 'T' : 'F');

					while(check_unary() || check_binary());
				}
			}
			taut = taut && (s.top()=='T'? true:false);
			while(!s.empty()) s.pop();
			if(!taut) break; 
			//cout<< s.size()<<"\n";
			
		}
		if(taut) cout<<"YES\n";
		else cout<<"NO\n";
		
	}

	return 0;
}