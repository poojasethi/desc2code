#include <iostream>
#include <set>
#include <stack>
#include <vector>
#include <string>

using namespace std;

#define C(a,b) (a&b)
#define D(a,b) (a|b)
#define I(a,b) ((!a)|b)
#define E(a,b) (!(a^b))
#define N(a) (!a)

vector <char> va;
int ma [256];
string str;
void form_ast ()
{
	vector <char> v;
	va = v;
	int si = str.size();
	set <char> var;
	for (int i=si-1; i>=0; --i)
	{
		if (str [i] >= 'a' && str [i] <= 'z')
			var.insert (str [i]);
	}
	for (set<char>::iterator it = var.begin(); it != var.end(); ++it)
	{
		va.push_back (*it);
	}
}

int check (int i)
{
	int si = va.size();
	//cout << si << endl;
	while (i > 0)
	{
		ma [va [--si]] = (i%2);
		i /= 2;
	}
	while (si > 0)
		ma [va [--si]] = 0;
	//cout << ma ['p'] << " " << ma ['q'] << endl;
	si = str.size();
	stack <int> st;
	for (int i=si-1; i>=0; --i)
	{
		if (str [i] >= 'a' && str [i] <= 'z')
		{
			st.push (ma [str [i]]);
			//cout << "Pushing in " << ma [str [i]]<< endl;
		}
		else if (str [i] == 'N')
		{
			int res = N (st.top());
			st.pop();
			st.push (res);
		}
		else
		{
			int v1 = st.top();
			st.pop();
			int v2 = st.top();
			st.pop();
			switch (str [i]) {
				case 'C' :
					st.push (C(v1,v2));
					break;
				case 'D' :
					st.push (D(v1,v2));
					break;
				case 'I' :
					st.push (I(v1,v2));
					break;
				case 'E' :
					st.push (E(v1,v2));
					break;
			}
		}
	}
	return st.top();
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		cin >> str;
		form_ast ();
		int fl = 1;
		int var = va.size();
		for (int i=0; i<(1<<var); ++i)
		{
			if (check (i) == 0)
			{
				fl = 0;
				break;
			}
		}
		fl == 1 ? (cout << "YES") : (cout << "NO");
		cout << endl;
	}
	return 0;
}
