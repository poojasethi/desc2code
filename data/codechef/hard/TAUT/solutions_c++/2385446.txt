#include <cstdio>
#include <algorithm>
#include <set>
#include <map>
#include <iostream>
#include <vector>
#include <utility>
#include <string>
#include <memory.h>
#include <ctime>
#include <cstdlib>
using namespace std;
 
#define forn( i,n ) for ( int i=0; i<(int)(n); i++ )
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
 
char s[128];
int id[256], n, k, it;
bool val[20];
 
bool token()
{
  char cur = s[it++];
  if ( cur >= 'a' && cur <= 'z' ) return val[ id[cur] ];
 
  if ( cur == 'N' ) return !token();
 
  int a = token();
  int b = token();
 
  if ( cur == 'E' ) return a == b;
  if ( cur == 'I' ) return a != 1 || b != 0;
  if ( cur == 'C' ) return a && b;
  if ( cur == 'D' ) return a || b;
 
  return -8;
}
 
bool test()
{
  it = 0;
//  printf( "test %d %d\n", val[1], val[2] );
  int z = token();
//  printf( "returns %d\n", z );
  return z;
}
 
bool gen( int i )
{
  if ( i > k )
  {
    if ( !test() ) return 1;
  }
  else
  {
    val[i] = 0;
    if ( gen( i+1 ) ) return 1;
    val[i] = 1;
    if ( gen( i+1 ) ) return 1;
  }
 
  return 0;
}
 
bool check()
{
  memset( id, 0, sizeof(id) );
  n = strlen( s );
  k = 0;
  forn( i,n )
    if ( s[i] >= 'a' && s[i] <= 'z' )
      if ( id[ s[i] ] == 0 )
        id[ s[i] ] = ++k;
 
  return !gen( 1 );
}
 
int main()
{
  int n;
  scanf( "%d", &n ); gets( s );
  forn( q,n )
  {
    gets( s );                                                  
    if ( check() ) printf( "YES\n" );
    else printf( "NO\n" );
  }
  return 0;
} 