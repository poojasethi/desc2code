#include <iostream>
#include <cstring>
#include <cstdio>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <utility>
#include <algorithm>
#define ll long long
#define pb push_back
#define cl clear
using namespace std;

struct seg
{
    vector<int>fm;
    vector<int>sm;
    vector<int>in;
    int c;
};


seg s[4*100005];
int ar[100005];
int A,B,C,D;
int M;
int de[5];

void build(int lo,int hi,int at)
{
    if(lo==hi)
    {
        s[at].in.pb(0);
        s[at].fm.pb(ar[lo]);
        s[at].sm.pb(-1);

        s[at].c=0;

        return;
    }

    s[at].in.pb(0);

    int mid=(lo+hi)/2;
    build(lo,mid,2*at);
    build(mid+1,hi,2*at+1);

    /*de[0]=s[2*at].fm[0];
    de[1]=s[2*at].sm[0];
    de[2]=s[2*at+1].fm[0];
    de[3]=s[2*at+1].sm[0];
    sort(de,de+4);*/
    s[at].fm.pb(max(s[2*at].fm[0],s[2*at+1].fm[0]));
    s[at].sm.pb(max( min(s[2*at].fm[0],s[2*at+1].fm[0]), max(s[2*at].sm[0],s[2*at+1].sm[0]) ) );
    s[at].c=0;
    return;
}

pair<ll,ll> q(int lo,int hi,int at,int from,int to,int ver)
{
    //cout<<"at "<<lo<<" "<<hi<<" "<<from<<" "<<to<<endl;
    if(lo==from && hi==to)
    {
        int a,b;
        pair<ll,ll>i;
        b=lower_bound(s[at].in.begin(),s[at].in.end(),ver)-s[at].in.begin();
        if(b==s[at].in.size()) b--;
        if(s[at].in[b]>ver) b--;
        i.first=s[at].fm[b];
        i.second=s[at].sm[b];
        return i;
    }
    int mid=(lo+hi)/2;
    pair<ll,ll>i,j,k;
    i.first=-1LL;
    i.second=-1LL;
    j.first=-1LL;
    j.second=-1LL;

    if(mid>=to)
    {
        i=q(lo,mid,2*at,from,to,ver);
    }
    else
    {
        if(mid<from)
        {
            j=q(mid+1,hi,2*at+1,from,to,ver);
        }
        else
        {
            i=q(lo,mid,2*at,from,mid,ver);
            j=q(mid+1,hi,2*at+1,mid+1,to,ver);
        }
    }
    //de[0]=i.first; de[1]=i.second; de[2]=j.first; de[3]=j.second;
    //sort(de,de+4);
    k.first=max(i.first,j.first);
    k.second=max( min(i.first,j.first), max(i.second,j.second) );
    return k;
}

void update(int lo,int hi,int at,int wh,int ver,ll val)
{
    if(lo==hi)
    {
        s[at].in.pb(ver);
        s[at].fm.pb(val);
        s[at].sm.pb(-1);
        s[at].c++;
        return;
    }
    int mid=(lo+hi)/2;
    if(wh<=mid)
    {
        update(lo,mid,2*at,wh,ver,val);
    }
    else
    {
        update(mid+1,hi,2*at+1,wh,ver,val);
    }
    s[at].in.pb(ver);
    /*de[0]=s[2*at].fm[ s[2*at].c ];
    de[1]=s[2*at].sm[ s[2*at].c ];
    de[2]=s[2*at+1].fm[ s[2*at+1].c ];
    de[3]=s[2*at+1].sm[ s[2*at+1].c ];
    sort(de,de+4);*/
    s[at].fm.pb(max(s[2*at].fm[s[2*at].c],s[2*at+1].fm[ s[2*at+1].c ]));
    s[at].sm.pb(max( min(s[2*at].fm[s[2*at].c],s[2*at+1].fm[ s[2*at+1].c ]),max(s[2*at].sm[ s[2*at].c ],s[2*at+1].sm[ s[2*at+1].c ]) ) );
    s[at].c++;
    return;
}

int eat()
{
    char c;
    int s;
    while(!isdigit(c=getchar()));
    s=c-'0';
    while(isdigit(c=getchar()))
    {
        s=s*10+c-'0';
    }
    return s;
}

int main()
{
    //freopen("0.in","r",stdin);

    int a,d,e,x,y,z,n,m;
    ll b,c;
    scanf("%d %d %d %d %d %d",&n,&M,&A,&B,&C,&D);

    for(a=1;a<=n;a++)
    {
        //scanf("%d",&ar[a]);
        ar[a]=eat();
    }

    build(1,n,1);

    //for(a=1;a<=6;a++) cout<<s[a].fm[0]<<" "<<s[a].sm[0]<<endl;

    ll R1,R2;

    R1=R2=0;

    scanf("%d",&m);

    C=C%M;

    for(a=1;a<=m;a++)
    {
        //scanf("%d %d",&x,&y);
        x=eat(); y=eat();

        x++;
        y++;

        b=((A%a)*(R1%a)+D%a)%a;

        //cout<<"Query no "<<a<<" on version "<<b<<endl;

        pair<ll,ll>k;

        k=q(1,n,1,x,y,b);

        R1=k.first;
        R2=k.second;

        printf("%lld %lld\n",R1,R2);
        //cout<<1<<" "<<n<<" "<<x<<" "<<y<<endl;
//        Specifically, the rating of player number ( B * R1 + D ) % N is changed to ( C * R2 + D ) % M.

        b=((B%n)*(R1%n)+D)%n +1 ;

        c=(C*(R2%M)+D)%M;

        update(1,n,1,b,a,c);

        //break;
    }

    return 0;
}
