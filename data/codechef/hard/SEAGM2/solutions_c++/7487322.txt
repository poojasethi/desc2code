#include<bits/stdc++.h>
using namespace std;
long double arr[15];
int powers[15];
int main()
{
	int t,n,m;
	cin>>t;
	while(t--)
	{
    cin >> n >> m;
    for(int i = 0; i < n; i++){
            long double pIWin = 1;     //probability i'th player wins a turn
            int powTen = 0;     //store in the form pIWin*10^(-powTen)
            for(int j = 0; j < m; j++){
                    long double pIJ;
                    cin >> pIJ;

                    //makes pIJ >= 0     
                    pIJ *= 1e4;
                    //increasing negative power of ten by 4
                    powTen += 4;

                    //multiplying with pIWin
                    //now since we are multiplying pIWin with numbers > 1
                    //it might exceed 10^10000 soon
                    //so we store only 4 most significant digits
                    pIWin *= pIJ;

                    if(pIWin>1e4){
                            pIWin /= 1e4;
                            powTen -= 4;
                    }
            }

            //store both values in an array
            //which we use later to calculate denominator and numerator
            arr[i] = pIWin;
            powers[i] = powTen;
    }

    //numerator and denominator
    long double num=arr[0],den=0;

    for(int i = 0; i < n; i++){
            //pIWin is arr[i]*10^(-powers[i])
            //whereas our numerator is at index 0
            //so, we bring power of numberator down to the denominator
            //actual value of pIWin can be written as  arr[i]*10^(powers[0]-powers[i])
            //if numerator's value is arr[0]
            den += arr[i]*pow(10,((powers[0]-powers[i])));

    }

    if(abs(num)<1e-9)printf("%.9Lf\n",(long double)0);
    else printf("%.9Lf\n",(num/den));
	}
}