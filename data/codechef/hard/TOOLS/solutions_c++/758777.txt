#include <iostream>
#include <cstdio>
#include <string.h>
#include <vector>

#define INF (int)1e9
#define REP(i,n) for(int _n=n,i=0; i<_n; i++)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)

using namespace std;

inline int abs(int a){
       return a>=0 ? (a):(-a);
       }
       
struct point{
       int x,y;
       };

vector<struct point>v(30);

int dist(struct point p1, struct point p2){
    return abs(p1.x-p2.x)+abs(p1.y-p2.y);
}
int N;
int dp[18][1<<16];

int calc(int pos, int mask)
{
    int & ret=dp[pos][mask];
    if(ret!=-1)return ret;
    if(mask==0){
                ret=dist(v[2*N],v[pos]); 
                return ret;
                }
    int tools=0;
    REP(i,N){
             if(!(mask & (1<<(2*i))) && (mask & (1<<(2*i +1)))) ++tools;
             }
    if(tools>2){
                ret=INF; 
                return ret;
                }
    ret=INF;
    
    REP(i,2*N) if(mask & (1<<i)){
            if((i&1) && (mask & (1<<(i-1))))continue;
            ret=min(ret,dist(v[pos],v[i])+calc(i,mask^(1<<i)));
            }
    return ret;
}
    
    
int main()
{
    int tc;
    scanf("%d",&tc);
    while(tc--){
                
                scanf("%d",&N);
                REP(i,N){
                         scanf("%d %d",&v[2*i+1].x,&v[2*i+1].y);
                         scanf("%d %d",&v[2*i].x,&v[2*i].y);
                         }
                v[2*N].x=0;
                v[2*N].y=0;
                memset(dp,-1,sizeof dp);
                cout<<calc(2*N,(1<<(2*N))-1)<<endl;                        
                       
                }
    
    
    
  //  system("pause");
    return 0;
}
