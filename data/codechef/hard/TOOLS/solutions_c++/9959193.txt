# include <bits/stdc++.h>
# define mp make_pair
# define pb push_back
using namespace std;
typedef long long ll;

struct point {
	int x,y;
	point() {}
	point(int _x,int _y) {
		x=_x;
		y=_y;
	}
}c[10],t[10];
int n;
int dp[1<<10][10][10][10];

int dist(point a,point b) {
	return abs(a.x-b.x)+abs(a.y-b.y);
}

int solve(int mask, int cur, int fir, int sec) {
	int &ans = dp[mask][cur][fir][sec];
	if (ans != -1)
		return dp[mask][cur][fir][sec];
	ans = 1e8;
	int x,y,i,j;
	if (cur>=11 && cur<=18) {
		x = t[cur-10].x;
		y = t[cur-10].y;
	} else {
		x = c[cur].x;
		y = c[cur].y;
	}
	if (mask == (1<<n)-1) 
		return ans=dist(point(0,0),point(x,y));
	point p = point(x,y);
	if (sec && fir) {
		ans = min (dist(p,c[fir])+solve(mask | (1<<(fir-1)), fir, 0 , sec), dist(p,c[sec]) + solve(mask | (1<<(sec-1)), sec, fir, 0));
	} else if (fir) {
		ans = min (ans, dist(p,c[fir])+solve(mask | (1<<(fir-1)), fir, 0 ,0));		
		for (i=0 ; i < n ; i++)
			if (! (mask & (1<<i)) && fir != i+1)
				ans = min(ans, dist(p,t[i+1]) + solve(mask,i+11,fir,i+1));
	} else if (sec) {
		ans = min (ans, dist(p,c[sec]) + solve(mask | (1<<(sec-1)), sec, 0, 0));
		for (i=0 ; i < n ; i++)
			if (! (mask & (1<<i)) && sec != i+1)
				ans = min(ans, dist(p,t[i+1]) + solve(mask,i+11,i+1,sec));
	} else {
		for (i=0 ; i < n ; i++)
			if (! (mask & (1<<i)))
				ans = min(ans, dist(p,t[i+1]) + solve(mask,i+11,i+1,0));
	}
	return ans;
}

main () {
	int T,i,j,k;
	scanf("%d",&T);
	while (T--) {
		scanf("%d",&n);
		for (i=1 ; i <= n ; i++) {
			int p,q,r,s;
			scanf("%d%d%d%d",&p,&q,&r,&s);
			c[i] = point(p,q);
			t[i] = point(r,s);
		}
		memset(dp,-1,sizeof dp);
		printf("%d\n",solve(0,0,0,0));
	}
	return 0;
}