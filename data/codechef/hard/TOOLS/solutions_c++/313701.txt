#include<iostream>
#include<cmath>
#include<memory.h>
using namespace std;
int m;
int d[17][17];
int mx[17],my[17];
int ds[17][255][9][9];
const int INT_MAX=1000*1000*1000;
struct el
{
	short p, mask,l,r;
};
int resmask;
int rec(el p)
{
	
	if (p.mask==resmask)
	{
		if (p.p==0)
			return 0;
		else
			return ds[p.p][p.mask][p.l][p.r]=d[p.p][0];
	}
	if (ds[p.p][p.mask][p.l][p.r]!=-1)
	{
		return ds[p.p][p.mask][p.l][p.r];
	}
	
	int Min=INT_MAX;
	
	
		if (p.l!=0)
		{
			int numb=p.l*2-1;
			int h=d[p.p][numb];
			el temp=p;
			temp.p=numb;
			temp.l=0;
				temp.mask|=(1<<(p.l-1));
			int s=rec(temp);
			if (s+h<Min)
				Min=s+h;
		}
		else
		{
			for (int j=1,l=1;j<=resmask;j<<=1,l++)
			{
					if ((j&p.mask)==0&&l!=p.r)
				{
					int numb=l*2;
					int h=d[p.p][numb];
					el temp=p;
					temp.p=numb;
					temp.l=l;
					int s=rec(temp);
					if (h+s<Min)
						Min=s+h;
				}
			}
		}
		if (p.r!=0)
		{
			int numb=p.r*2-1;
			int h=d[p.p][numb];
			el temp=p;
			temp.p=numb;
			temp.r=0;
			temp.mask|=(1<<(p.r-1));	
			int s=rec(temp);
			if (s+h<Min)
				Min=s+h;
		}
		else
		{
			for (int j=1,l=1;j<=resmask;j<<=1,l++)
			{
				if ((j&p.mask)==0&&l!=p.l)
				{
					int numb=l*2;
					int h=d[p.p][numb];
					el temp=p;
					temp.p=numb;
					temp.r=l;
					int s=rec(temp);
					if (h+s<Min)
						Min=s+h;
				}
			}
		}
	return ds[p.p][p.mask][p.l][p.r]=Min;
}
int main()
{
//	freopen("in.in","r",stdin);
	
	int N;
	scanf("%d",&N);
	char tc;
	while (N--)
	{
		memset(ds,-1,sizeof(ds));
		scanf("%c%d",&tc,&m);
		for (int i=0,j=1;i<m;i++)
		{
			scanf("%c%d %d",&tc,&mx[j],&my[j]);
			j++;
			scanf("%c%d %d",&tc,&mx[j],&my[j]);
			j++;
		}
		resmask=(1<<m)-1;
		m*=2;
		mx[0]=my[0]=0;
		for (int i=0;i<=m;i++)
		{
			for (int j=i;j<=m;j++)
				d[i][j]=d[j][i]=(int)abs(mx[i]-mx[j]+.0)+(int)abs(my[i]-my[j]+.0);
		}
		el temp;
		temp.l=temp.r=temp.mask=temp.p=0;
		printf("%d\n",rec(temp));
	}


}