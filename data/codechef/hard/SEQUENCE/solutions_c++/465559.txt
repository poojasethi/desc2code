#include <cstdio>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <set>
#include <cmath>
using namespace std;

typedef long long int li;

#define REP(a, b) for(int a = 0;a < b;++a)
#define FOR(a, b, c) for(int a = b;a <= c;++a)
#define FORD(a, b, c) for(int a = b;a >= c;--a)

int main()
{
	int t;
	scanf("%i", &t);
	REP(z, t)
	{
		int n, a, b;
		scanf("%i %i %i", &n, &a, &b);
		bool koniec = false;
		int r = (1 << n);
		int *tab = new int[r];
		int *plus = new int[r];
		int *wyn = new int[r + 1];
		for(int pr = 0;pr < n && !koniec;++pr)
		{
			for(int rev = 0;rev <= 1 && !koniec;++rev)
			{
				tab[0] = 0;
				plus[0] = 0;
				for(int i = n - 1;i >= 0;--i)
				{
					int k = (i + pr) % n;
					if(rev == 1) k = n - k - 1;
					int w = (1 << k);
					int s = (1 << (n - i - 1));
					int d = (1 << (n - i));
					int p = 0;
					for(int j = s;j < r;j += d)
					{
						tab[j] = w;
						plus[j] = p;
						if(p == 1) p = 0;
						else p = 1;
					}
				}
				wyn[0] = 0;
				for(int i = 1;i < r;++i)
				{
					wyn[i] = wyn[i - 1] + tab[i] - (plus[i] * 2 * tab[i]);
					//printf("%i ", wyn[i]);
				}
				//printf("\n\n");
				wyn[r] = wyn[0];
				bool ok = true;
				for(int i = 0;i < r;++i) if((wyn[i] == a && wyn[i + 1] == b) || (wyn[i] == b && wyn[i + 1] == a)) ok = false;
				if(ok == true) koniec = true;
			}
		}
		if(!koniec) printf("-1\n");
		else
		{
			for(int i = 0;i < r;++i)
			{
				printf("%i ", wyn[i]);
			}
			printf("\n");
		}
	}
	return 0;
}
