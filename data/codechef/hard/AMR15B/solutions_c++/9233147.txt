#include <bits/stdc++.h>
using namespace std;

#define ll long long
int b[100000];
int c[18];
ll d[100001];
int e[65]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313};
ll mod=1000000007LL;

ll binpow(ll a,ll ex)
{
    if(ex==0)
    {
        return 1LL;
    }
    ll ans=binpow(a,ex/2);
    ans=(ans*ans)%mod;
    if(ex%2==1)
    {
        ans=(ans*a)%mod;
    }
    return ans;
}

int main()
{
    d[0]=1LL;
    for(int i=1;i<=100000;i++)
    {
        d[i]=(d[i-1]*2)%(mod-1);
    }
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        for(int i=0;i<n;i++)
        {
            scanf("%d",&b[i]);
        }
        ll ans=1LL;
        for(int i=0;i<65;i++)
        {
            for(int j=0;j<18;j++)
            {
                c[j]=0;
            }
            for(int j=0;j<n;j++)
            {
                if(b[j]%e[i]==0)
                {
                    int num=0;
                    while(b[j]%e[i]==0)
                    {
                        b[j]=b[j]/e[i];
                        num=num+1;
                    }
                    c[num]=c[num]+1;
                }
            }
            int sum=0;
            for(int j=1;j<18;j++)
            {
                sum=sum+c[j];
            }
            for(int j=1;j<18;j++)
            {
                ll exp=d[sum]-d[sum-c[j]];
                if(exp<0)
                {
                    exp=exp+mod-1;
                }
                exp=(exp*j)%(mod-1);
                ans=(ans*binpow((ll)e[i],exp))%mod;
                sum=sum-c[j];
            }
        }
        map<int,int> mymap;
        for(int i=0;i<n;i++)
        {
            if(b[i]!=1)
            {
                mymap[b[i]]=mymap[b[i]]+1;
            }
        }
        for(map<int,int>::iterator it=mymap.begin(); it!=mymap.end(); ++it)
        {
            ans=(ans*binpow((ll)it->first,d[it->second]-1))%mod;
        }
        printf("%lld\n",ans);
    }
}
