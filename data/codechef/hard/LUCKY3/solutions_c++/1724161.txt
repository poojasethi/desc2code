#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <bitset>
#include <map>
#include <vector>

#define REP(a,b) for (int a = 0; a < b; a++)
#define FOR(a,b,c) for (int a = b; a <= c; a++)
#define FORD(a,b,c) for (int a = b; a >= c; a--)
#define RESET(a,b) memset(a,b,sizeof a)

#define INF 2123123123
#define PII pair<int,int>
#define MP make_pair
#define LL long long
#define PB push_back
#define F first
#define S second

using namespace std;

int FULL,le,tgt;
int nkasus,nl;
int ar[51][10];
int n,a,p,bil[51];
LL ans,dp[51][1<<9];
int lnum[1024][10],luck[1025];

LL rek(int x, int mas){
	if (x == n){
		if (mas == FULL){
			return 1;
		}
		return 0;
	}else if (dp[x][mas] != -1){
		return dp[x][mas];
	}else{
		dp[x][mas] = 0;
		
		//gak ambil
		dp[x][mas] += rek(x+1, mas);
		
		//ambil
		if (bil[x] <= luck[tgt]){
			int U = 0;
			bool ya = 1;
			REP(i,le){
				if (ar[x][i] > lnum[tgt][i]){
					ya = 0;
					break;
				}else if (ar[x][i] == lnum[tgt][i]){
					U |= (1 << i);
				}
			}
			if (ya){	
				dp[x][mas] += rek(x+1, mas | U);
			}
		}
		
		return dp[x][mas];
	}
}

int main(){
	RESET(lnum,0);
	FOR(i,2,(1<<10)-1){
		bool st = 0;
		for (int j = 9; j >= 0; j--){
			if (!st){
				if (i & (1 << j)){
					st = 1;
				}
			}else{
				if (i & (1 << j)){
					lnum[nl][j] = 7;
				}else{
					lnum[nl][j] = 4;
				}
			}
		}
		
		int sep = 1;
		luck[nl] = 0;
		REP(j,10){
			luck[nl] += lnum[nl][j] * sep;
			sep *= 10;
		}	
		nl++;
	}	
	
	scanf("%d", &nkasus);
	REP(jt,nkasus){
		scanf("%d", &n);
		RESET(ar,0);
		int maxd = 0;
		REP(i,n){
			scanf("%d", &a);
			bil[i] = a;
			REP(j,9){
				ar[i][j] = a % 10;
				a /= 10;
			}
		}
		
		ans = 0;
		REP(i,nl){
			tgt = i;
			le = 0;
			while (lnum[i][le] != 0) le++;
		
			FULL = (1 << le) - 1;
			
		//	printf("%d = %d %lld\n", i, luck[i], rek(0,0));
			
			RESET(dp,-1);
			ans += rek(0,0);
		}
		
		printf("%lld\n", ans);
	}
	
	return 0;
}	
