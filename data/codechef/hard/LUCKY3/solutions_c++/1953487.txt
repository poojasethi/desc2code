//Template
// Template copied from Anudeep2011, Thanks
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vs;
typedef pair< int ,int > pii;
typedef vector <ll> vll;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)

#define S 6*100000*2*10
char IN[S],*iptr;

struct fastIO
{
    fastIO()
    {
		fread(IN,1,S,stdin);
		iptr=IN;
	}
	void check()
	{
		int size=IN+S-iptr;
		if(size<200)
		{
			memcpy(IN,iptr,size);
			fread(IN+size,1,S-size,stdin);
			iptr=IN;
		}
	}
	
	int sc()
	{
		check();
		while(*iptr<=32) iptr++;
		int x=0,sign;
		if(*iptr=='-') {
			sign=1; iptr++;
		} else sign = 0;
		while(*iptr>32) x= x*10 + *iptr++ -'0';
		return sign?-x:x;
	}
	void ssc(char *s) {
		check();
		while(*iptr<=32) iptr++;
		int i=0;
		while(*iptr>32) *(s+i) = *iptr++, i++;
		*(s+i) = '\0';
	}
};
fastIO io;
#define N 55

string in[N];
char str[20];
ll dp[N][1<<9];
vector <string> LN;

void call(string s) {
	if(s.ln && s.ln<=9) {
		string t = s;
		while(t.sz<9) t = '0'+t;
		LN.pb(t);
	}
	if(s.ln==9) return;
	call(s+'4');
	call(s+'7');
}

string s1,s2;
int save[1024][55];
int valid(int k, int i) {
	int &ret = save[k][i];
	if(ret != -2) return ret;
	s1 = LN[k];
	s2 = in[i];
	ret = 0;
	rep(i,s1.ln) {
		if(s2[i]>s1[i]) return ret = -1;
		if(s2[i]==s1[i]) ret |= (1<<i);
	}
	return ret;
}

void testcase() {
	rep(i,1024) rep(j,55) save[i][j] = -2;
	int n = io.sc(),t;
	ll ans=0;
	rep(i,n) {
		io.ssc(str);
		in[i] = string(str);
		while(in[i].ln < 9) in[i] = '0' + in[i];
	}
	rep(k,LN.sz) {
		memset(dp,0,sizeof(dp));
		dp[0][0]=1;
		rep(i,n)
			rep(j,1<<9) if(dp[i][j]) {
				dp[i+1][j] += dp[i][j];
				t = valid(k,i);
				if(t != -1) {
					dp[i+1][j|t] += dp[i][j];
					// printf("SS %d %d %d\n",t,i,j);
				}
			}
		ans += dp[n][(1<<9)-1];
	}
	printf("%lld\n",ans);
	return;
}
	
int main() {
	call("");
	int t = io.sc();
	while(t--) testcase();
	return 0;
}