#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

long long dp[51][1<<9];

int main ()
{
	int T, n, temp, curr, r, t;
	int W[50];
	long long ret;
	scanf ("%d",&T);
	while (T--)
	{
		scanf ("%d",&n);
		for (int i = 0; i < n; i++)
			scanf ("%d", &W[i]);
		ret = 0;
		for (int len = 1; len <= 9; len++)
		{
			int d = 1 << len;
			for (int mask = 0; mask < d; mask++)
			{
				memset (dp, 0, sizeof (dp));
				dp[0][0] = 1;
				for (int i = 0; i < n; i++)
					for (int j = 0; j < d; j++)
						if (dp[i][j])
						{
							dp[i+1][j] += dp[i][j];
							temp = j;
							curr = W[i];
							for (int k = 0; k < len; k++)
							{
								if (curr == 0)
									break;
								r = curr % 10;
								t = (mask & (1 << k)) ? 7:4;
								if (r > t)
								{
									temp = -1;
									break;
								}
								else if (r == t)
									temp |= (1 << k);
								curr /= 10;
							}
							if (curr == 0 && temp >= 0)
								dp[i+1][temp] += dp[i][j];
						}
				ret += dp[n][d - 1];
			}
		}
		printf ("%lld\n", ret);
	}
	return 0;
}