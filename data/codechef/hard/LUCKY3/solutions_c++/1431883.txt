#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<ctime>
#include<cctype>
#include<cassert>
#include<limits.h>
#include<cerrno>
#include<cfloat>
#include<ciso646>
#include<clocale>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
#include<cstddef>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cwchar>
#include<cwctype>

//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<complex>
#include<string>
#include<stack>
#include<bitset>
#include<istream>
#include<valarray>

//IOs
#include<iostream>
#include<sstream>
#include<iomanip>
#include<fstream>
#include<exception>
#include<ios>
#include<iosfwd>
#include<ostream>
#include<iterator>
#include<stdexcept>
#include<streambuf>


//algorithm & miscellaneous
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<limits>
#include<locale>
#include<memory>
#include<new>
#define ll long long
#define ull unsigned long long
#define max2 (int)1e6
using namespace std;
ll n;
vector<ll> v(100,0);
map< pair<ll,ll> , ll> f;

int less8(int x)
{
              while(x)
              {
                      if(x%10>7)return 0;
                      x/=10;        
              }    
              return 1;
}
ll val(ll x, ll y)
{
           vector<int> v1;
           while(x or y)  
           {
                   v1.push_back(max(x%10,y%10));
                   x/=10,y/=10;        
           }        
           
           reverse(v1.begin(),v1.end());
           ll sum=0;
           for(int i=0;i<(int)v1.size();i++)
           {
                   //cout<<v1[i]<<" ";
                   sum=sum*10+v1[i];
           }
           //cout<<"\n";
           return sum;
}
ll solve(ll pos,ll mask)
{
            if(pos==n)
            {
                        while(mask)
                        {
                                   if(mask%10!=4 and mask%10!=7)return 0;
                                   mask/=10;           
                        }          
                        return 1;
            }            
            
            pair<ll,ll> p=make_pair(pos,mask);
            
            if(f.find(p)!=f.end())return f[p];
            
            ll ret=solve(pos+1,mask);
            
            ret+=solve(pos+1, val(mask,v[pos]));
            
            return f[p]=ret;
}
int main()
{
          int t;
          scanf("%d",&t);
          
          while(t--)
          {
                    scanf("%lld",&n);
                    f.clear();
                    v.clear();
                    
                    for(ll i=0;i<n;i++)
                    {
                           ll x;
                           scanf("%lld",&x);
                           if(less8(x))
                                       v.push_back(x);       
                    }         
                    
                    n=v.size();
                    printf("%lld\n",solve(0,0)-1);
          }
          return 0;
}
