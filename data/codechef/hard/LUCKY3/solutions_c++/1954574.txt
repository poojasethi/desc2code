#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <bitset>
#define SET(p)	 		memset(p,-1,sizeof(p))
#define CLR(p) 			memset(p,0,sizeof(p))
#define LL 				long long int
#define ULL		 		unsigned long long int
#define S(n)			scanf("%d",&n)
#define Sl(n)			scanf("%lld",&n)
#define Sf(n)			scanf("%lf",&n)
#define Ss(n)			scanf("%s",n)
#define INF				(int)1e9
#define LINF			(long long)1e18
#define EPS				1e-9
#define FOR(i,a,b)		for(int i=a;i<b;i++)
#define REP(i,n)		FOR(i,0,n)
using namespace std;
vector<int> v;
int len(int n)
{
	int cnt=0;
	while(n>0)
	{
		cnt++;
		n/=10;
	}
	return cnt;
}
long long int dp[55][520];
int mask,length;
long long int solve(int pos,int msk)
{
	if(dp[pos][msk]!=-1)
		return dp[pos][msk];
	if(pos==v.size())
	{
		if(msk==(1<<length)-1)
			return dp[pos][msk]=1;
		else
			return dp[pos][msk]=0;
	}
	int n=v[pos];
	long long int ans=solve(pos+1,msk);
	int nmsk=0;
	int ln=len(n);
	if(ln>length)
		return dp[pos][msk]=ans;
	for(int i=0;i<length;i++,n/=10)
	{
		int k=n%10;
		int x=(mask&(1<<i));
		nmsk<<=1;
		if(x==0)
		{
			if(k==4)
				nmsk|=1;
			else if(k>4)
				return ans;
		}
		else
		{
			if(k==7)
				nmsk|=1;
			else if(k>7)
				return ans;
		}
	}
	ans+=solve(pos+1,nmsk|msk);
	//cout<<":p "<<pos<<" "<<msk<<" "<<ans<<endl;
	return dp[pos][msk]=ans;
}
int main()
{
	int t,i,j,k,n,m;
	#ifndef ONLINE_JUDGE
	freopen("example.txt","r",stdin);
	#endif
	S(t);
	while(t--)
	{
		S(n);
		v.clear();
		int l=0;
		for(i=0;i<n;i++)
		{
			int x;
			S(x);
			v.push_back(x);
			l=max(l,len(x));
		}
		long long int ans=0;
		for(i=1;i<=l;i++)
		{
			int tmp=(1<<i);
			length=i;
			//cout<<"length "<<i<<endl;
			for(j=0;j<tmp;j++)
			{
				SET(dp);
				mask=j;
				ans+=solve(0,0);
				//cout<<mask<<" "<<ans<<endl;
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}