/*
author :  R Anirudh 
*/

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <cassert>
#include <climits>
#include <limits>
using namespace std;
#define SIZE(A) ((int)(A.size()))
#define MSET(A,x) memset(A,x,sizeof(A));
#define FILL(A,x) fill(A.begin(),A.end(),x)
#define REP(i,N) for(int i=0;i<(int)(N);i++)
#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)
#define REV(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define ALL(x) x.begin(),x.end()
#define INF (INT_MAX/2)
#define LLINF (LONG_LONG_MAX/2LL)
#define EPS 1e-12
#define GI ({int t;scanf("%d",&t);t;})
#define GL ({long long t;scanf("%lld",&t);t;})
#define GF ({double t;scanf("%lf",&t);t;})
#define bitCount(n) __builtin_popcount(n)
#define MOD 10000009
#define MAXN 1000005
#define FIX(a) (((a)%MOD+MOD)%MOD)
typedef long long LL;
typedef unsigned long long ULL;
#define pb push_back

/*

int n;
int bit[1025][1025];

void update(int x, int y, int v)
{
int y1;
while(x <= n)
{
y1 = y;
while(y1 <= n)
{
bit[x][y1] += v;
y1 += (y1 & -y1);
}
x += (x & -x);
}
}

int readsum(int n,int x, int y)
{
int v = 0, y1;
while(x > 0)
{
y1 = y;
while(y1 > 0)
{
v += bit[x][y1];
y1 -= (y1 & -y1);
}
x -= (x & -x);
}
return v;
}

*/


LL gcd(LL a, LL b)
{
	if(b==0) return a;
	else return gcd(b,a%b);
}

struct frac
{
LL num;
LL deno;	
}f[1<<18];

int main(){  
int t;
scanf("%d",&t);
while(t--){
LL n;
scanf("%lld",&n);
LL pos[n];
for(int i=0;i<n;i++)
{
	scanf("%lld/%lld",&f[i].num,&f[i].deno);
	pos[i]=i;
}

for(int i=n-2;i>=0;i--)
{
	for(int j=i+1;j<n;)
	{
			float y=(float)f[i].num/f[i].deno;
			float x=(float)f[j].num/f[j].deno;
			if(x>y)
			{
				f[i].num+=f[j].num;
				f[i].deno+=f[j].deno;
				j=pos[j]+1;
				pos[i]=j-1;
			}

			else
			break;	
	}
}
for(int i=0;i<n;i++)
{
LL k=gcd(f[i].num,f[i].deno);
printf("%lld/%lld\n",f[i].num/k,f[i].deno/k);
}
printf("\n");


	}

return 0;
}



