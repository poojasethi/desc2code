#include<iostream>
#include<cstdio>

using namespace std;

int gcd(int a,int b)
{
  if(b==0)
      return a;
  else
        return gcd(b,a%b);
}
/*
int sign;
int ch;
inline void S( int &x )
{
			x=0;
			while((ch<'0' || ch>'9') && ch!='-' && ch!=EOF)	ch=getchar_unlocked();
			if (ch=='-')
				sign=-1 , ch=getchar_unlocked();
			else
				sign=1;
			
			do
				x=(x<<3)+(x<<1)+ch-'0';
			while((ch=getchar_unlocked())>='0' && ch<='9');
			x*=sign;
}*/
int main()
{
 int t;
 scanf("%d",&t);
 int a[100001],b[100001],i,a1[100001],b1[100001],posof[100001];
 while(t--)
 {
  int n;
  int max;
  scanf("%d",&n);
 
  //a[0]=0,b[0]=0,a1[0]=0,b1[0]=0,posof[0]=0;
  int cn[n+1],cd[n+1];
  //cn[0],cd[0]=0;
  for(i=1;i<n+1;i++)
  {
  scanf("%d/%d",&a[i],&b[i]);                
  }
  printf("\n");
  int j;
           for(i=n;i>=1;i--)
               {
               a1[i]=a[i];
               b1[i]=b[i]; 
               posof[i]=i;
               j=i+1;     
                              while(b1[i]!=0&&b1[j]!=0&&((float)a1[i]/b1[i])<((float)a1[j]/b1[j])&&j<=n)
                              {
                              a1[i]=a1[i]+a1[j];
                              b1[i]=b1[i]+b1[j];
                              posof[i]=posof[j];
                              j=posof[i]+1; 
                              }
               }
               int u,v,g;
               for(i=1;i<n+1;i++)
               {
               u=a1[i];
               v=b1[i];
               g=gcd(u,v);
               if(g>0)
               printf("%d/%d\n",u/g,v/g);
               }
               printf("\n");
/*  
for(j=1;j<n+1;j++)
{
  max=a[j]/b[j];
  int maxn=a[j],maxd=b[j]; 
   float k;
  for(i=j;i<n+1;i++)
  { 
     int g,x,y;
     x=cn[i-1],y=cd[i-1];
     if(i>j){
     cn[i]=cn[i-1]+a[i];
     cd[i]=cd[i-1]+b[i];
     }
     else
     {
     cn[i]=a[i];
     cd[i]=b[i];    
     }
     x=cn[i],y=cd[i];
     g=gcd(cn[i],cd[i]);
     k=(float(cn[i])/float(g))/(float(cd[i])/float(g));
     int m;
     m=cd[i]*maxd/g;
     k=k*m,max=max*m;
     if(k>max){maxn=cn[i]/g,maxd=cd[i]/g;}
     k=k/m;max=maxn/maxd;                
  } 
  printf("%d/%d\n",maxn,maxd);
}*/
 }      
 return 0;    
}
