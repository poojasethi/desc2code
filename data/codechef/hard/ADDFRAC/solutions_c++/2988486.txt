#include <iostream>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <stdio.h>
#include <vector>
#include <algorithm>

using namespace std;

int ansA[100000];
int ansB[100000];
int pos[100000];
int a[100000];
int b[100000];

int gcd(int a, int b)
{
  if( b == 0) return a;
  else return gcd(b, a%b);
}

void Solve(int a[], int b[], int N)
{
  ansA[N-1] = a[N-1];
  ansB[N-1] = b[N-1];
  pos[N-1] = N-1;

  for(int i=N-2; i>=0; i--)
  {
    ansA[i] = a[i];
    ansB[i] = b[i];
    pos[i] = i;
    int j=i+1;

    while(j<N && (((double) ansA[i]/ansB[i]) < ((double) ansA[j]/ansB[j])))
    {
      ansA[i] += ansA[j];
      ansB[i] += ansB[j];
      pos[i] = pos[j];
      j = pos[i]+1;
    }
  }

  for(int i=0; i<N; i++)
  {
    int GCD = gcd(ansA[i], ansB[i]);
    printf("%d/%d\n", ansA[i]/GCD, ansB[i]/GCD);
  }
  printf("\n");
}

int main( int argc, char** argv)
{
  int T,N;

  scanf("%d", &T);

  while(T--)
  {
    scanf("%d", &N);

    char c;

    for(int i=0; i<N; i++)
      scanf("%d%c%d", &a[i], &c, &b[i]);

    Solve(a, b, N);
  }
  return 0;
}
