#include<iostream>
#include<cstdio>
using namespace std;

namespace IO {
		const int SIZE = 1 << 15;
		char buff[SIZE], *p = buff + SIZE;

		char read_char() {
				if( p == buff + SIZE ) {
						fread( buff, 1, SIZE, stdin );
						p = buff;
				}
				return *(p++);
		}

		inline int read_int() {
				char c;

				while( !isdigit( c = read_char() ) );

				int r = c-'0';
				while( isdigit( c = read_char() ) ) r = 10*r + c - '0';

				return r;
		}
}

using namespace IO;

int gcd(int a, int b) {
	int t;
	while(b!=0) {
		t=b;
		b=a%b;
		a=t;
	}
	return a;
}

int numerator[100001];
int denominator[100001];

int upto[100001];

void calc_maximum_fraction(int n) {
	upto[n]=n;
	int next_num;
	int next_den;
	for(int index=n-1; index>0; index--) {
		int j=index+1;
		while(j<=n) {
			next_num=numerator[j];
			next_den=denominator[j];
			if((1.0*numerator[index])/denominator[index]
						<(1.0*(numerator[index]+next_num))
						/(denominator[index]+next_den)) {
				numerator[index]=numerator[index]+next_num;
				denominator[index]=denominator[index]+next_den;
				j=upto[j]+1;
				//printf("%d/%d ", numerator[index], denominator[index]);
			} else {
				upto[index]=j-1;
				break;
			}
		}
		if(j>n) {
			upto[index]=n;
		}
	}
}

int main() {
	int T=read_int();
	while(T) {
		int n=read_int();
		int i=1;
		while(i<=n) {
			numerator[i]=read_int();
			denominator[i]=read_int();
			i++;
		}
		calc_maximum_fraction(n);
		for(int index=1; index<=n; index++) {
			int gcd_num_den=gcd(numerator[index], denominator[index]);
			printf("%d/%d\n", numerator[index]/gcd_num_den, denominator[index]/gcd_num_den);
		}
		T--;
		if(T) {
			printf("\n");	
		}
	}
	return 0;
}
