# include <iostream>
# include <cstdio>
using namespace std;
int gcdEff(int a, int b)
{

if (b==0)
return a;
else
return gcdEff(b,a%b);

}
int gcd(int a, int b)
{
    if(a>b)
        return gcdEff(b, a);
    else
        return gcdEff(a,b);
}


int n, t, ip[100001][2], op[100001][2], pos[1000001];
double ans[100001];
char ch;
int gc;
int main()
{
    int j;
    cin>>t;
    while(t--)
    {
        cin>>n;
        for(int i=0; i<n; i++)
        {
            //cin>>ip[i][0]>>ch>>ip[i][1];
            //cout<<ch;
            scanf("%d%c%d", &ip[i][0], &ch, &ip[i][1]);
        }
        op[n-1][0]=ip[n-1][0];
        op[n-1][1]=ip[n-1][1];
        pos[n-1] = n-1;

        for(int i=n-2; i>=0; i--)
        {
            op[i][0]=ip[i][0];
            op[i][1]=ip[i][1];
            pos[i]=i;
            j = pos[i]+1;
            double x = (op[i][0]+op[j][0])*1.0/(op[i][1]+op[j][1]);
            double y = (op[i][0]*1.0/op[i][1]);
            while(x>y && j<n)
            {


                    op[i][0]= op[i][0]+op[j][0];
                    op[i][1]= op[i][1]+op[j][1];

                    ans[i]=x;
                    pos[i]=pos[j];
                    j = pos[i]+1;
             x = (op[i][0]+op[j][0])*1.0/(op[i][1]+op[j][1]);
             y = (op[i][0]*1.0/op[i][1]);

            }
        }
        for(int i=0; i<n; i++)
        {
              gc = gcd(op[i][0], op[i][1]);
                op[i][0]/=gc;
                op[i][1]/=gc;
            //cout<<op[i][0]<<"/"<<op[i][1]<<endl;
            printf("%d/%d\n",op[i][0], op[i][1]);
        }
        printf("\n");
    }
    return 0;
}
