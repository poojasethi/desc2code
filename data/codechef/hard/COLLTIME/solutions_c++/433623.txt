#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <map>
using namespace std;

#define division 5342931457063200LL

long long gcd( long long a, long long b ){
	if ( a > b )
		return gcd( b, a );
	if ( a == 0 )
		return b;
	return gcd( b % a, a );
}

pair< int, int > ball[51000];

main(){
	int n, v, p;
	int t, i, j;
	int cnt[41];
	long long u[41];
	long long value[41];
	long long Q, G, ret;
	
	scanf ( "%d", &t );
	while( t -- ){
		scanf ( "%d", &n );
		memset ( u, 0, sizeof ( u ) );
		memset ( cnt, 0, sizeof ( cnt ) );
		memset ( value, 0, sizeof ( value ) );
		for ( i = 0; i < n; i ++ ){
			scanf ( "%d %d", &p, &v );
			ball[i] = make_pair( p + 1000000, v + 20 );
		}
		sort ( ball, ball + n );
		
		for ( i = 0; i < n; i ++ ){
			for ( j = ball[i].second + 1; j < 41; j ++ )
				u[ j - ball[i].second ] += 1LL * ball[i].first * cnt[j] - value[j];
			value[ ball[i].second ] = value[ ball[i].second ] + ball[i].first;
			cnt[ ball[i].second ] ++;
		}
		
		ret = 0;
		Q = 0;
		for ( i = 1; i <= 40; i ++ ){
			ret += u[i] / i;
			u[i] %= i;
			Q += u[i] * ( division / i );
			if ( Q >= division ){
				Q -= division;
				ret ++;
			}
		}
		if ( ret )
			if ( ret && Q ){
				G = gcd( Q, division );
				cout << ret << " " << Q / G << "/" << division / G << endl;
			}
			else
				cout << ret << endl;
		else
			if ( Q ){
				G = gcd( Q, division );
				cout << Q / G << "/" << division / G << endl;
			}
			else
				cout << 0 << endl;
	}
	
	return 0;
}
