//solution after reading editorial
//idea is to calculate the summation of diff(x)/diff(v) since the balls change there speeds
//but to avoid n^2 complexity, we deal in terms of diff(v) which can vary from 1 to 40.
//x(j)-x(i) / v(i)-v(j), now if for x(j) i find out all those i(<j) for which v(i)-v(j)=d(1 to 40), and find the sum of all such x(i)s then i can solve
//the q in N.V
#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>


#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define PB(x) push_back(x)
#define MP(x,y) make_pair(x,y)
#define F first
#define S second
typedef long long LL;
using namespace std;
const LL LCM=5342931457063200LL;

LL gcd(LL a,LL b)
{
    if(b==0)
        return a;
    else
        return gcd(b,a%b);
}

int main()
{
    //freopen("input.txt","r",stdin);
    int t;
    scanf("%d",&t);
    while(t--) {
        int n;
        scanf("%d",&n);
        vector<pair<int,int> > pts;
        for(int i=0; i<n; i++) {
            int x,v;
            scanf("%d",&x);scanf("%d",&v);
            pts.PB(MP(x,v+20));
        }
        sort(pts.begin(),pts.end());
        LL I=0,N=0,D=LCM;
        LL num[41]={};
        LL sum[41]={};
        LL ans[41]={};
        for(int i=0;i<n;i++){
            int x,v;
            x=pts[i].F;v=pts[i].S;
            for(int d=1;v+d<=40;d++){
                ans[d]+=(LL)x*num[d+v]-sum[d+v];    //I add x as many times as it forms diff(v)=d with pts<i then subtract the sum of
            }                                       //all x(j)<x(i) with which the diff(v) = d;
            num[v]++;
            sum[v]+=x;
        }
        for(int d=1;d<=40;d++){
            I+=ans[d]/d;
            N+=(ans[d]%d)*(LCM/d);
        }
        I+=N/D;
        N=N%D;
        if(!N) {
            cout<<I<<endl;
        } else {
            LL g=gcd(N,D);
            N/=g;
            D/=g;
            if(I)
                cout<<I<<" "<<N<<"/"<<D<<endl;
            else
                cout<<N<<"/"<<D<<endl;
        }
    }
}
