#include<bits/stdc++.h>
using namespace std;

/*-----Fast I/O-----*/
inline void inp( int &n ){n=0;int ch=getchar();int sign=1;while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}while( ch >= '0' && ch <= '9' )n = (n<<3)+(n<<1) + ch-'0', ch=getchar();n=n*sign;}
/*-----End of Fast I/O-----*/

typedef vector<int> vi; 
typedef pair<int,int> pii;
typedef long long int lld;

#define sz(a)                        int((a).size()) 
#define pb                           push_back 
#define mp                           make_pair
#define F                            first
#define S                            second
#define present(c,x)                 ((c).find(x) != (c).end()) 
#define si(n)                        inp(n)
#define sl(n)                        scanf("%lld",&n)
#define ss(n)                        scanf("%s",n)
#define sii(n,m)		     inp(n);inp(m)
#define siii(n,m,r)		     inp(n);inp(m);inp(r)
#define abs(x)                       ((x)<0?-(x):(x))
#define fill(a,v)                    memset((a),(v),sizeof (a))
#define INF                          INT_MAX
#define mod 747474747

struct node
{
	int a[5];
};

int d,n;
node point[6676];
lld m[6676][6676],key[6676];
bool mySet[6676];

lld getVal(int x,int y)
{
	lld ans = 0;
	for(int i=0;i<d;i++)
	{
		lld tmp = point[x].a[i] - point[y].a[i];
		ans += 1LL*tmp*tmp;
	}
	return ans;
}

lld findMax(int u)
{
	int v;
	lld mx = 0;
	for(int i=0;i<n;i++)
	{
		if(mySet[i]==false)
		{
			key[i] = max(key[i],m[u][i]);
			if(key[i]>=mx)
			{
				mx = key[i];
				v = i;
			}
		}
	}
	return v;
}

lld prims()
{
	lld ans = 1;
	key[0] = 1;
	mySet[0] = true;
	int u = 0;
	for(int i=0;i<n-1;i++)
	{
		u = findMax(u);
		mySet[u] = true;
		if(key[u]==0)
			break;
		ans=(ans*(key[u] % mod) % mod);
	}
	return ans % mod;
}

int main()
{
	int t;
	si(t);
	while(t--)
	{
		int xx;
		sii(n,d);
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<d;j++)
			{
				si(xx);
				point[i].a[j]=xx;		
			}
			mySet[i] = false;
			key[i] = 0;
		}
		for(int i=0;i<n;i++)
			for(int j=0;j<n;j++)
			{
				m[i][j] = getVal(i,j);
			}
		//for(int i=0;i<n;i++)
		//	for(int j=i+1;j<n;j++)
		//		cout<<i<<" "<<j<<" "<<m[i][j]<<endl;
		printf("%lld\n",prims());
	}
	return 0;
}      
