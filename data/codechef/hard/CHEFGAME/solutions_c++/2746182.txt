#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>

#define mod 747474747

using namespace std;

int N,D,i,j;
int coo[6667][6];
 bool visited[6667];
long long dist[6667];

    long long ans,dis,maxx;

    long long distan(int one,int two)
    {
        long long dis=0,diff;

        for(int i=1;i<=D;i++)
        {
            diff=coo[one][i]-coo[two][i];
            dis+=diff*diff;
        }

        return dis;
    }

int main( )
{
    int T,curr,pos;

    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&N,&D);    ans=1;
        for(i=1;i<=N;i++)
            {   visited[i]=false; dist[i]=-1;
                for(j=1;j<=D;j++)
                {scanf("%d",&coo[i][j]);}
             }

         // memset(visited,false,sizeof(visited));

         // memset(dist,0,sizeof(dist));

           // count=1;
            curr=1; dist[1]=0; visited[1]=true;
            //cout<<"Starting From: "<<curr<<endl;
            for(j=1;j<=N;j++)
            {
                 maxx=-1; pos=-1;

                    //cout<<"Curr::"<<curr<<"Maxx::"<<maxx<<endl;
                for(i=1;i<=N;i++)
                {
                   if(visited[i]==false)
                    {

                     //dis=distan(curr,i);

                     //if(dis>dist[i])
                        //dist[i]=dis;

                            dist[i]=max(dist[i],distan(curr,i));

                        if(dist[i]>maxx)
                        {
                            maxx=dist[i];
                            pos=i;
                        }
                    }
                }
                //cout<<"Maxx="<<maxx<<endl;

                    if(maxx==-1)
                      {  //cout<<"enough"<<endl;
                       break;
                      }
                        curr=pos;
                    visited[curr]=true;

                 //cout<<"Reached: "<<curr<<" With Dist: "<<dist[curr]<<endl;
                if(dist[curr]!=0)
                {ans=((ans%mod)* ((dist[curr]) %mod))%mod; //ans%=mod;
                }

            }


            printf("%lld\n",ans);
    }

      return 0;
}
