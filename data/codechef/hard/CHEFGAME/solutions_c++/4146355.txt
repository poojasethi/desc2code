#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <ctime>
using namespace std;

int main()
{
    long long int maxi,curdist,t,N,D,node,ans;
    cin>>t;
  //  t = 50;
     long long int a[6666][5];
     bool inMST[6666];
     long long int dist[6666];

    while(t--)
    {
        ans = 1;
       // N = rand()%100+1;
      //  D =2;
        scanf("%lld%lld",&N,&D);
        for(int i = 0 ; i<N;i++)
        {
            inMST[i] = false;
            dist[i] = 0;
            for(int j = 0 ; j<D ; j++)
            {
               scanf("%lld",&a[i][j]);
             // a[i][j] = rand()%100000000;
            }
//            for(int b = 0 ; b<i ;b++)
//            {
//                for(int di = 0 ; di<D ;di++)
//                {
//                    if(a[b][di]!=a[i][di])
//                    {
//                        break;
//                    }
//                    inMST[i] = true;
//                }
//            }
        }

        dist[0] = 1;
        for(int edge = 0 ; edge<=N-1; edge++)
        {
            //get max dist
            maxi = 0;
            for( int i = 0 ; i<N ;i++)
            {
                if(!inMST[i])
                {
                    if(maxi<dist[i])
                    {
                        maxi = dist[i];
                        node = i;
                    }
                }
            }
            if(maxi == 0)
                break;
           // cout<<"uffo";
            ans = (ans*(dist[node]%747474747))%747474747;
            inMST[node] = true;
            for( int i = 0 ; i<N ;i++) //update
            {
                if(!inMST[i])
                {
                    curdist = 0;
                    for(int dim = 0 ; dim<D; dim++)
                    {
                        curdist = curdist + (a[node][dim] - a[i][dim])*(a[node][dim] - a[i][dim]) ;
                    }
                    if(dist[i]<curdist)
                    {
                        dist[i] = curdist;
           // cout<<"asdf"<<endl;
                    }
                }
            }
        }
        printf("%lld\n",ans);
    }
    return 0;
}
