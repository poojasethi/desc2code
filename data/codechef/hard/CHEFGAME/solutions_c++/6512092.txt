#include<stdio.h>
 
#define mod 747474747
 
 
int d;
 
long long int distance(int input[][5],int p1,int p2)
{
int i;
long long int dis=0,diff;
 
for(i=0;i<d;i++)
{
diff=input[p1][i]-input[p2][i];
dis=dis+diff*diff;
}
if(dis)
return dis;
else
return 1;
}
 
 
long long int prims(int input[][5],int n)
{
long long int dis,sol,out[6667]={0},max;
int is_visit[6667]={0},i,j,node,len;
len=1;
i=0; // start node
sol=1;
while(is_visit[i]==0)
{	
is_visit[i]=1;
max=0;
if(i)
sol = (sol*( out[i] % mod)) % mod;
for(j=0;j<n;j++)
{
if(!is_visit[j])
{
dis=distance(input,i,j);
if(dis > out[j])
out[j]=dis;
if(out[j]>max)
{
max=out[j];
node=j; //next node having max distace
}
}
}
i=node;
}
return sol;
}
 
 
 
int main()
{
int i,j,n,t,input[6667][5];
scanf("%d",&t);
while(t--)
{
scanf("%d%d",&n,&d);
for(i=0;i<n;i++)
for(j=0;j<d;j++)
scanf("%d",&input[i][j]);
printf("%lld\n",prims(input,n));
}
return 0;
}