#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <set>
#include <cstring>
#include <iomanip>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <list>
#include <string>
#include <vector>
#include <new>
#include <bitset>
#include <ctime>
#include <cassert>
#include <stdint.h>
#include <unistd.h>
 
 using namespace std;
 
#define ll long long int
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
 
template < typename X > X gcd( X a, X b ) { if( !b ) return a ; else return gcd(b, a%b) ; }
 
typedef vector<int> vi;
typedef pair<int, int> ii;

const int MOD = 1e9 + 9 ;
const int MN = 1e5 + 10 ;
int T, N, n, H[MN], i, sa[MN], tsa[MN], ra[MN], tra[MN], lcp[MN], plcp[MN], phi[MN], r, p, sum, L, k, c[MN] ;
ll ans ;


void csort(int k) {
	memset( c, 0, sizeof c) ;
	for( i = 0; i < n; ++i ) 
		c[ i + k < n ? ra[i + k] : 0 ]++ ;
	sum = 0 ;
	for( i = 0; i < max( 300, n ) ; ++i ) {
		p = c[i] ;
		c[i] = sum ;
		sum += p ;
	}
	for( i = 0; i < n; ++i ) 
		tsa[ c[ sa[i] + k < n ? ra[ sa[i] + k ] : 0 ]++ ] = sa[i] ;
	for( i = 0; i < n; ++i ) 
		sa[i] = tsa[i] ;
}

void SuffixArray() {
	for( i = 0; i < n; ++i ) {
		sa[i] = i ;
		ra[i] = H[i] ; 
	}
	for( k = 1; k < n; k <<= 1 ) {
		csort( k ) ;
		csort( 0 ) ;
		tra[ sa[0] ] = r = 0 ;
		for( i = 1; i < n; ++i ) {
			if( ra[ sa[i] ] == ra[ sa[i - 1] ] && ra[ sa[i] + k ] == ra[ sa[i - 1] + k] ) 
				tra[ sa[i] ] = r ;
			else
				tra[ sa[i] ] = ++r ;
		}
		for( i = 0; i < n; ++i )
			ra[i] = tra[i] ;
	}
}

void LCP() {
	phi[ sa[0] ] = -1 ;
	for( i = 1; i < n; ++i ) 
		phi[ sa[i] ] = sa[i - 1] ;
	L = 0 ;
	for( i = 0; i < n; ++i ) {
		if( phi[i] == -1 ) {
			plcp[i] = 0 ;
			continue ; 
		}
		while( H[i + L ] == H[ phi[i] + L ])
			++L;
		plcp[i] = L ;
		L = max( L - 1, 0 );
	}
	for( i = 1; i < n; ++i ) 
		lcp[i] = plcp[ sa[i] ] ;
}

ll solve() {

	SuffixArray() ;
	LCP() ;

	ans = 0;
	for( i = 1; i < n; ++i ) {
		ans += (ll) ( n - 1 - sa[i] - lcp[i] ) ;
		ans %= MOD ;
	}
	return ans ;
}

int main() {
	scanf("%d", &T) ;
	while( T-- ) {
		scanf("%d", &N) ;
		for( i = 0; i < N; ++i ) 
			scanf("%d", &H[i]) ;
		n = N ;
		for( i = 0; i < N - 1; ++i ) {
			H[i] = H[i + 1] - H[i] + 1; 
			H[i] += 101 ;
		}
		H[N - 1] = 0 ;
		printf("%lld\n", solve());
	}
	return 0 ;
}