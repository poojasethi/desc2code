# include <bits/stdc++.h>
# define INF 0x7f7f7f7f
# define MOD 1000000009
using namespace std;
const int N=1e6+3;
static int A[N];
static int B[N];
static int LCP[N];
static int suffix[N];
struct node
       {
       int id,f,s;
       };
static node J[N];
static int P[20][N];

int n,r;
bool comp(node a,node b)
     {
     return a.f==b.f?a.s<b.s:a.f<b.f;
     }
void cal_suffix()
     {
     int i,j,k;
     for (i=0; i<n; i++)
         P[0][i]=A[i];
     for (k=1; (1<<k)<=2*n; k++)
         {
         for (i=0; i<n; i++)
             J[i].id=i,J[i].f=P[k-1][i],J[i].s=(i+(1<<k)/2)<n?P[k-1][i+(1<<k)/2]:-INF;
         sort(J,J+n,comp);
         for (i=0; i<n; i++)
             P[k][J[i].id]=i and J[i].f==J[i-1].f and J[i].s==J[i-1].s?P[k][J[i-1].id]:i;
         }
     r=k-1;
     for (i=0; i<n; i++)
         suffix[P[k-1][i]]=i;
     }

int cal(int x,int y)
    {
    int ans=0;
    if (x>y) swap(x,y);
    if (x==y) return n-x;
    //cout<<x<<" "<<y<<"\n";
    for (int k=r;k>-1 and x<y and x<n and y<n;)
        {
        if (P[k][x]==P[k][y]) 
           {
           ans=ans+(1<<k);
           x+=(1<<k); y+=(1<<k);
           }
        else k--;
        }
    //cout<<ans<<"\n";
    return ans;
    }

void cal_LCP()
     {
     LCP[0]=0;
     for (int i=1; i<n; i++)
         LCP[i]=cal(suffix[i-1],suffix[i]);
     }

int main()
    {
    ios_base::sync_with_stdio(0);
    int T,i,j,k;
    cin>>T;
    while (T--)
          {
          cin>>n;
          for(i=0; i<n; i++) cin>>B[i];
          for (i=1; i<n; i++) A[i-1]=B[i]-B[i-1];
          n--;
          cal_suffix();
          cal_LCP();
          /*
          for (i=0; i<n; i++)
              cout<<"i :"<<" "<<i<<" "<<"suffix : "<<suffix[i]<<"\n";
          for (i=0; i<n; i++)
              cout<<"i :"<<" "<<i<<" "<<"LCP : "<<LCP[i]<<"\n";
          */
      
          long long int ans=0;
          for (i=0; i<n; i++)
              {
              //cout<<prev[i]<<" ";
              ans=(LCP[i]+ans)%MOD;
              }
          //cout<<ans<<"\n";
          ans=(((long long int)(n)*(n+1)/2)-ans)%MOD;
          if (ans<0) ans+=MOD;
          cout<<ans<<"\n";
          }
    return 0;
    }