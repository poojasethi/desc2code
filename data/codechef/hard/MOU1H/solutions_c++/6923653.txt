#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#define mod 1000000009ll
using namespace std;
#ifndef ONLINE_JUDGE
inline int getchar_unlocked(){return getchar();}
#endif 
inline int in(){int n = 0, c = getchar_unlocked(),t=0;while(c < '0' || c > '9'){if(c==45)t=1;c = getchar_unlocked();}while(c >= '0' && c <= '9')n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();if(t==0)return n;else return -n;}

int n,A[100003],SA[100003],RA[100003],temp[100003],C[510];
int B[100003];
inline void counting_sort(int k)
{
	int mx=0;
	for(int i=0;i<n;i++)if(mx<RA[i])mx=RA[i];
	mx++;
	for(int i=0;i<mx;i++)C[i]=0;
	for(int i=0;i<n;i++)//counting frequency 
	{
		C[i+k<n?RA[i+k]:0]++;
	}
	
	for(int sum=0,i=0;i<mx;i++)
	{
		int tmp=C[i];C[i]=sum;sum+=tmp;
	}
	
	for(int i=0;i<n;i++)//shuffle SA
	{
		temp[C[SA[i]+k<n?RA[SA[i]+k]:0]++]=SA[i];
	}
	for(int i=0;i<n;i++)SA[i]=temp[i];
}

inline void SAconstruct()
{
	for(int i=0;i<n;i++)
	{
		SA[i]=i;
		RA[i]=A[i];
	}
	
	for(int k=1;k<n;k<<=1)
	{
		counting_sort(k);
		counting_sort(0);
		
		int rank=0;
		temp[SA[0]]=0;
		for(int i=1;i<n;i++)
		{
			temp[SA[i]]=((SA[i]+k<n&&SA[i-1]+k<n)&&(RA[SA[i]]==RA[SA[i-1]]&&RA[SA[i]+k]==RA[SA[i-1]+k]))?rank:++rank;
		}
		for(int i=0;i<n;i++)RA[i]=temp[i];
	}
}

inline void LCPconstruct()
{
	C[SA[0]]=n;
	for(int i=1;i<n;i++)
	{
		C[SA[i]]=SA[i-1];
	}
	
	for(int l=0,i=0;i<n;i++)
	{
		if(C[i]==n)
		{
			temp[i]=0;
			continue;
		}
		
		while(i+l<n&&C[i]+l<n&&A[i+l]==A[C[i]+l])l++;
		temp[i]=l;
		l=max(l-1,0);
	}
	//for(int i=0;i<n;i++)LCP[i]=temp[SA[i]];
}

int main()
{
	int T,x,y;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d %d",&n,&x);
		for(int i=1;i<n;i++)
		{
			scanf("%d",&y);
			A[i-1]=115+y-x;
			x=y;
		}
		if(n==1)
		{
			printf("0\n");
			continue;
		}
		else if(n==2)
		{
			printf("1\n");
			continue;
		}
		A[n-1]=5;
		
		SAconstruct();
		LCPconstruct();
		
		long long res=0;
		for(int i=0;i<n;i++)
		{
			res+=SA[i]-temp[SA[i]];
			if(res>=mod)res-=mod;
			if(res<0)res+=mod;
		}
		
		//if(res<0)res+=mod;
		printf("%lld\n",res);
	}
	return 0;
}