#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
#define MOD 1000000009
#define MAXN 200020
#define MAXLG 20
long long int A[MAXN]; 
long long int LCP[MAXN];
struct entry
{
    long long int nr[2];
    long long int p;
} L[MAXN];
 
long long int P[MAXLG][MAXN];
long long int N,i;
int stp, cnt;
 
long long int cmp(struct entry a, struct entry b)
{
    return a.nr[0]==b.nr[0] ?(a.nr[1]<b.nr[1] ?1: 0): (a.nr[0]<b.nr[0] ?1: 0);
}
long long int lcp(long long int x, long long int y)
{
 long long int k, ret = 0; if (x == y) return N - x;
 for (k = stp - 1; k >= 0 && x < N && y < N; k --)
 if (P[k][x] == P[k][y])
 x += 1 << k, y += 1 << k, ret += 1 << k; return ret;
}
int main()
{
    
    int t;
    scanf("%d",&t);
    while(t--){
    scanf("%lld",&N);
    long long int D[N];
    for(i=0;i<N;i++)
    scanf("%lld",&D[i]);
    for(i=0;i<N-1;i++)
    A[i]=D[i+1]-D[i]+101;
    N--;
    for( i = 0; i < N; i++)
        P[0][i] = A[i];
 
    for(stp=1, cnt = 1; cnt < N; stp++, cnt *= 2)
    {
        for(i=0; i < N; i++)
        {
            L[i].nr[0]=P[stp- 1][i];
            L[i].nr[1]=i +cnt <N? P[stp -1][i+ cnt]:-1;
            L[i].p= i;
        }
       /* for(i=0;i<N;i++)
        printf("%d %d %d\n",L[i].nr[0],L[i].nr[1],L[i].p);
        printf("\n");*/
        sort(L, L+N, cmp);
        /*for(i=0;i<N;i++)
        printf("%d %d %d\n",L[i].nr[0],L[i].nr[1],L[i].p);
        printf("\n");*/
        for(i=0; i < N; i++)
            P[stp][L[i].p] =i> 0 && L[i].nr[0]==L[i-1].nr[0] && L[i].nr[1] == L[i- 1].nr[1] ? P[stp][L[i-1].p] : i;
    }
    int j;
    /*for(i=0;i<=stp-1;i++)
    {
    	for(j=0;j<N;j++)
    	printf("%d ",P[i][j]);
    	printf("\n");
	}*/
	long long int ans=0;
	
	LCP[0]=0;
	for(i=1;i<N;i++)
	LCP[i]=lcp(L[i].p,L[i-1].p);
	//for(i=0;i<N;i++)
	//printf("%d ",LCP[i]);
	for(i=0;i<N;i++)
	{
		ans+=(N-L[i].p-LCP[i]);
		ans=ans%MOD;
		if(ans<0)
		ans+=MOD;
	}
	printf("%lld\n",ans);
	}
    return 0;
} 