You are given an array A, which consists of N integers. Also, you have an integer K.

Let's call a subarray A[L..R] perfect, if the average of the numbers AL, AL + 1, ..., AR - 1, AR is greater than or equal to K.


I.e. the average of the numbers {2, 5, 9, -3} equals to 3.25.


So, your task is quite simple: you are to count the number of perfect subarrays of A.

Input

The first line contains two integers N and K.
The second line contains N integers, i'th integer denotes Ai. The array A is 1-indexed.


Output
The first line should contain an integer, denoting the number of perfect subarrays of A.

Example
Input:
4 2
1 2 3 -1
Output:
4


Explanation

In the test case N equals to 4, K equals to 2, A equals to {1, 2, 3, -1}. The following subarrays are perfect: [2..2], [3..3], [2..3], [1..3].


Scoring

-10^9 ≤ K ≤ 10^9 for each test case;
-10^9 ≤ Ai ≤ 10^9 for each test case;


Subtask 1 (10 points): 1 ≤ N ≤ 100;
Subtask 2 (39 points): 1 ≤ N ≤ 6000;
Subtask 3 (11 points): 1 ≤ N ≤ 150 000, K = 0;
Subtask 4 (20 points): 1 ≤ N ≤ 150 000;
Subtask 5 (20 points): 1 ≤ N ≤ 1 000 000;

