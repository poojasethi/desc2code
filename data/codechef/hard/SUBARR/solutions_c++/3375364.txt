#include<bits/stdc++.h>

#define mod 1000000007
#define f(i,a,b) for(i=a;i<b;i++)
#define ff(i,a)  for(i=0;i<a;i++)
#define sc scanf
#define pr printf
#define clr(a) memset(a,0,sizeof(a))
#define ll long long 
#define vi vector<int>
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld\n",n)
#define sin(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define pins(n) printf("%d ",n)
#define plls(n) printf("%lld ",n)
#define ss(n) scanf("%s",n)
#define nl pr("\n")

using namespace std;

inline void sins(int &x)
{
	register int c = getchar_unlocked();
	x = 0;
	int neg = 0;
	for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
	if(c=='-') {
		neg = 1;
		c = getchar_unlocked();
	}
	for(; c>47 && c<58 ; c = getchar_unlocked()) {
		x = (x<<1) + (x<<3) + c - 48;
	}
	if(neg)
		x = -x;
}


ll int b[1000004];
int tree[1000004];

int comp(int i,int j)
{
	return (make_pair(b[i],i)<make_pair(b[j],j));
}

int calc(int id)
{
	int ans=0;
	while(id>0)
	{
	//	pr("*\n");
		ans=(tree[id]+ans);
		id-=(id & -id);
	}
	return ans;
}

void up(int id)
{
	while(id<1000002)
	{
	//	pr("#\n");
		tree[id]+=1;
		id+=(id & -id);	
	}
}

int main()
{
	int n,k,a[1000004];
	sins(n);sins(k);
	int i,j,l,m,p;
	ll int count=0;
	f(i,1,n+1)
	{
		sins(m);
		m-=k;
		if(!i)
			b[i]=m;
		else
			b[i]=(ll)(m+b[i-1]);
		a[i]=i;
	}
	sort(a,a+n+1,comp);

	ff(i,n+1)
	{
		count=(ll)(calc(a[i]+1)+count);
		up(a[i]+1);
	}
	pll(count);
/*	ff(i,n+1)
	{
		plls(a[i]);
	}
	nl; */


	return 0;
}

