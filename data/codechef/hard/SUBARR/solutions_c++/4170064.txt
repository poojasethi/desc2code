#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>

using namespace std;

int N,K;
#define MAXN 1000009
typedef long long ll;
int bit[MAXN],A[MAXN];
struct st {
	ll s;
	int id;
}cur[MAXN],sum[MAXN];

inline void add(int pos,int val) {
	while (pos<MAXN) {
		bit[pos]+=val;
		pos+=(pos & -pos);
	}
}

inline int que(int pos) {
	int ret=0;
	while (pos>0) {
		ret+=bit[pos];
		pos-=(pos & -pos);
	}
	return ret;
}

inline bool cmp(st a,st b) {
	return a.s<b.s;
}

void Read() {
	scanf("%d %d",&N,&K);
	for (int i=1;i<=N;i++) {
		scanf("%d",&A[i]);
		A[i]-=K;
	}
	sum[0].s=0; // keno synolo
	for (int i=1;i<=N;i++) {
		sum[i].s=(ll)sum[i-1].s+A[i];
		cur[i].s=(ll)sum[i].s;
		cur[i].id=i;
	}
	cur[0].s=0;
	cur[0].id=0;
	sort(cur,cur+N+1,cmp);
	int upd=1;
	sum[cur[0].id].id=upd;
	for (int i=1;i<=N;i++) {
		if (cur[i].s!=cur[i-1].s) {
			upd++;
			sum[cur[i].id].id=upd;
		}
		else {
			sum[cur[i].id].id=upd;
		}
	}
}

void Solve() {
	ll ans=0;
	for (int i=0;i<=N;i++) {
		ans+=(ll)que(sum[i].id);
		add(sum[i].id,1);
	}
	printf("%lld\n",ans);
}

int main () {
	Read();
	Solve();
	return 0;
}
