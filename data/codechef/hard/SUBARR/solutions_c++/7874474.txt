#include<iostream>
#include<algorithm>
using namespace std;
long long int n,k;
long long int sum[1000007],a,tree[1000007];
int pos[1000007];
int N=1000006;
void update(int i)
{
while(i<=N)
{
tree[i]++;
i+=i&(-i);
}
}

long long int query(int i)
{
long long int temp=0;
while(i>0)
{
temp=temp+tree[i];
i-=i&(-i);
}
return temp;
}

bool cmp(int a,int b)
{
return make_pair(sum[a],a)<make_pair(sum[b],b);
}

int main()
{
ios_base::sync_with_stdio(false);
cin>>n>>k;
for(int i=1;i<=n;i++)
{
cin>>a;
a-=k;
sum[i]=sum[i-1]+a;
pos[i]=i;
}
sort(pos,pos+n+1,cmp);
long long int ans=0;
for(int i=0;i<=n;i++)
{
ans=ans+query(pos[i]+1);
update(pos[i]+1);
}
cout<<ans<<endl;
return 0;
}
