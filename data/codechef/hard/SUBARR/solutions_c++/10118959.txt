#include <vector>
#include <iostream>
using namespace std;
long long int t[1000000];
int pl,pr;
long long int ans=0,count=0;
void merge(int l ,  int r,vector<long long int> &a)
{	
	pl=l;
	pr=(l+r)/2+1;
	count=0;
	for(int i = l;i<=r;i++)
	{
		if(pl>(l+r)/2){
			t[i]=a[pr];
			pr++;
			ans+=count;
		}
		else if(pr>r){
			t[i]=a[pl];
			pl++;
			count++;
		}
		else if(a[pl]<=a[pr]){
			t[i]=a[pl];
			pl++;
			count++;
		}
		else {
			t[i]=a[pr];
			pr++;
			ans+=count;
		}

	}
	for(int i =l;i<=r;i++)
	{
		a[i]=t[i];
	}
}

void merge_sort(int l,int r,vector<long long int> &a)
{
	if(l==r){
		if(a[l]>=0)ans++;
		return ;
	}
	merge_sort(l,(l+r)/2,a);
	merge_sort((l+r)/2 + 1 , r,a);
	merge(l,r,a);
}

int main()
{
	int n,temp;
	ios::sync_with_stdio(false);
	cin>>n;
	long long int k,temp2;
	vector<long long int> a(n);
	cin>>k;
	temp=n;
	while(temp--){
		cin>>temp2;
		a[n-temp-1]=temp2-k;
	}
	long long int sumtem=0;
	for(int i = 0;i<n;i++){
		sumtem+=a[i];
		a[i]=sumtem;
	}
	merge_sort(0,n-1,a);
	cout<<ans;

}