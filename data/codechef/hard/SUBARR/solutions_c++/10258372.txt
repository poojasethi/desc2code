#include "bits/stdc++.h"
using namespace std;
inline int scan(){
	int x = 0;
	char c = getchar_unlocked();
	bool b = 0;
	while(c < '0' || c > '9'){
		if(c == '-'){
			b = 1;
		}
		c = getchar_unlocked();
	}
	while(c >= '0' && c <= '9'){
		x = (x << 3) + (x << 1) + c - '0';
		c = getchar_unlocked();
	}
	if(b){
		return -x;
	}
	return x;
}
const int N = 1e6 + 6;
int n;
int k;
long long sum[N];
int bit[N];
pair < long long , int > arr[N];
int newarr[N];
long long ans = 0;
int cur = 0;
void update(int idx){
	while(idx <= cur){
		++bit[idx];
		idx += idx & -idx;
	}
}
int query(int idx){
	int res = 0;
	while(idx){
		res += bit[idx];
		idx -= idx & -idx;
	}
	return res;
}
int main(){
	sum[0] = 0;
	n = scan() , k = scan();
	for(int i = 1 ; i <= n ; ++i){
		sum[i] = sum[i - 1] + scan() - k;
		arr[i] = make_pair(sum[i] , i);
		ans += (sum[i] >= 0);
	}
	sort(arr + 1 , arr + 1 + n);
	arr[0].first = LLONG_MIN;
	for(int i = 1 ; i <= n ; ++i){
		cur += (arr[i].first != arr[i - 1].first);
		newarr[arr[i].second] = cur;
	}
	for(int i = 1 ; i <= n ; ++i){
		ans += query(newarr[i]);
		update(newarr[i]);
	}
	printf("%lld\n" , ans);
} 