#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,m,n) for(i=m;i<=n;i++)
#define MAX 1000000

using namespace std;

long int i,n,k,a,cur_pos;

long long int bit[MAX+10],ans=0;

struct pref_info
{
    long long int pref;long int pos;
};

bool cmp(pref_info a,pref_info b)
{
    if(a.pref==b.pref) return a.pos < b.pos;
    return a.pref < b.pref;
}

long int get(int pos)
{
    long int ans=0;
    while(pos > 0)
    {
       ans = ans + bit[pos];
       pos = pos & (pos-1);
    }
    return ans;
}

void update_bit(int pos)
{
    while(pos < MAX +10)
    {
        bit[pos]++;
        pos  = (pos << 1) - (pos & (pos-1));
    }
}

pref_info A[MAX+10];

int main()
{
    memset(bit,0,sizeof(bit));
    scanf("%ld%ld",&n,&k);

    A[0].pos=1; A[0].pref=0;

    FOR(i,1,n)
    {
        scanf("%ld",&a); a-=k;
        A[i].pref = A[i-1].pref + a;
        A[i].pos = i + 1;
    }

    sort(A,A+n+1,cmp);

    update_bit(A[0].pos);

    FOR(i,1,n)
    {
        cur_pos=A[i].pos;
        ans = ans + get(cur_pos);
        update_bit(cur_pos);
    }

    printf("%lld",ans);

    return 0;
}
