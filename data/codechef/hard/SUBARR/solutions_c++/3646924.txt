#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<algorithm>
#include<set>
#include<map>
#include<utility>
#include<vector>
#include<string>
#include<stack>
#include<queue>
using namespace std;
#define MAXN 1000006
long long cum[MAXN];
int BIT[MAXN];
map < long long , int > Mp;
void update(int N, int idx)
{
    while (idx <= N)
    {
        ++BIT[idx];
        idx += idx & -idx;
    }
}
int query(int idx)
{
    int ret = 0;
    while (idx > 0)
    {
        ret += BIT[idx];
        idx -= idx & -idx;
    }
    return ret;
}
int main()
{
    int N,NN,i,idx;
    long long K, ans;
    map < long long , int > :: iterator im;
    while (scanf("%d %lld", &N, &K) != EOF)
    {
        Mp.clear();
        for (i=1; i<=N; ++i)
        {
            scanf("%lld", &cum[i]);
            cum[i] -= K;
            cum[i] += cum[i-1];
            Mp[cum[i]] = -1;
        }
        for (i=1, im = Mp.begin(); im != Mp.end(); ++i, ++im)
        {
            im->second = i;
            //printf("%lld to %d\n", im->first, im->second);
        }
        NN = i-1;
        memset(BIT, 0, sizeof(BIT));
        ans = 0;
        for (i=1; i<=N; ++i)
        {
            idx = Mp[cum[i]];
            update(NN,idx);
            ans += query(idx);
            if (cum[i] < 0) --ans;
            //if (cum[i] - cum[i-1] >= 0) ++ans;
            //printf("\t\t%d : %lld\n", i, ans);
        }
        printf("%lld\n", ans);
    }
    return 0;
}
