#include<bits/stdc++.h>
using namespace std;
#define N_MAX 1000000
typedef long long ll;
typedef std::vector<int> vi;
typedef pair<int,int> ii;

ll A[N_MAX];
ll sum[N_MAX+1];

ll no_inversions(int b,int e){
    if(b==e)return (ll)0;
    int mid=(b+e)/2;
    ll left=no_inversions(b,mid);
    ll right=no_inversions(mid+1,e);
    ll ans=left+right;
    int i,j;
    i=b;
    j=mid+1;
    while(i<=mid&&j<=e){
        if(sum[i]>sum[j]){
            ans+=mid-i+1;
            j++;
        }
        else{
            i++;
        }
    }
    vector<ll> temp;
    i=b,j=mid+1;
    while(i<=mid&&j<=e){
        if(sum[i]<sum[j]){
            temp.push_back(sum[i]);
            i++;
        }
        else{
            temp.push_back(sum[j]);
            j++;
        }
    }
    while(i<=mid){
        temp.push_back(sum[i]);
        i++;
    }
    while(j<=e){
        temp.push_back(sum[j]);
        j++;
    }
    for(i=0;i<temp.size();i++)
        sum[b+i]=temp[i];
    return ans;
}

int main(){
    ll n,k,i;
    scanf("%lld %lld",&n,&k);
    for(i=0;i<n;i++)
        scanf("%lld",&A[i]);
    for(i=0;i<n;i++)
        A[i]-=k;
    sum[0]=0;
    for(i=1;i<=n;i++)
        sum[i]=sum[i-1]+A[i-1];
    ll ans=n*(n+1)/2;
    ans-=no_inversions(0,n);
    cout<<ans<<endl;
}