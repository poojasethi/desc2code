#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <queue>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> VI;
typedef pair<int,int> PI;
typedef vector<pair<int,int> > VPI;
typedef vector<string> VS;
 
 
#define ST first
#define ND second
#define ALL(x) x.begin(), x.end()
#define FOR(i,n) for(i=0;i<(n);++i)
#define FORV(i,x) for(i=0;i<x.size();++i)
#define FORS(i,x) for(i=0;i<x.length();++i)
#define PB push_back
#define MP make_pair
 
char m[300][300];
int cur[300],cnt[300],n;
 
char ispossible(int t)
{
int max=cur[t]+cnt[t],i,j;
int prob[150],pc=0;
for(i=0;i<n;i++)
{
if(max<cur[i]) return '0';
if(max==cur[i] && cnt[i])
{
prob[pc]=i;
++pc;
}
}
 
if(pc<=1) return '1';
for(i=0;i<pc;++i)
for(j=i+1;j<pc;++j)
if(m[prob[i]][2*prob[j]]=='2') return '0';
 
return '1';
}
 
int main()
{
int i,t,j,k;
char dummy[10000];
 
scanf("%d",&t);
string ans;
 
while(t--)
{
scanf("%d",&n);
gets(dummy);
/*
for(i=0;i<n;++i)
{
for(j=0;j<n;++j)
scanf("%d",&m[i][j]);
cur[i]=cnt[i]=0;
}
*/
for(i=0;i<n;++i) cnt[i]=cur[i]=0;
for(i=0;i<n;++i)
{
//scanf("%s",m[i]);
gets(m[i]);
 
//printf("%s\n",m[i]);
//gets(dummy);
}
for(i=0;i<n;++i)
{
for(j=2*(i+1);j<2*n;j+=2)
{
if(m[i][j]=='1')
{
++cur[i];
} else if(m[i][j]=='0')
{
++cur[j/2];
} else if(m[i][j]=='2')
{
++cnt[i];
++cnt[j/2];
}
}
}
 
//for(i=0;i<n;++i) cout << cur[i] << "," << cnt[i] << " ";
//cout << endl;
//for(i=0;i<n;++i) cur[i]=count(&m[i][0],&m[i][2*n],'1'),cnt[i]=count(&m[i][0],&m[i][2*n],'2');
//for(i=0;i<n;++i) cout << cur[i] << "," << cnt[i] << " ";
//cout << endl;
//ans="";
for(k=0;k<n;++k)
{
putchar(ispossible(k));
//ans+=ispossible(k);
}
putchar('\n');
}
return 0;
} 