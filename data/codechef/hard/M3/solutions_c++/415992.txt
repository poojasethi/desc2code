#include<iostream>
#include<fstream>
#include<stack>
#include<queue>
#include<vector>
#include<string>
#include<stdio.h>
#include<math.h>
using namespace std;

#define DEBUG 0
#define FOR(i,a,b) for(int i=(int)(a) ; i < (int)(b);++i)
#define REP(i,n) FOR(i,0,n)

int n;
int mat[142][142];
int pnt[142][2]; // col1 -> current points col2-> remaining matches
int max_pnt=-1;
int main(){

	int t; cin >> t;
	REP(i,t){
		max_pnt=-1;
		cin >> n;
		REP(u,n){
			pnt[u][0]=pnt[u][1]=0;
			REP(v,n){
				cin >> mat[u][v];			
				if(mat[u][v]==1) pnt[u][0]++;
				if(mat[u][v]==2) pnt[u][1]++;
			}		
			if(pnt[u][0]>max_pnt) max_pnt=pnt[u][0];
		}
		int new_max=max_pnt;
		// Aim is to keep the # of max. wins constant over all teams.
		// check for 2 teams having max wins and also a match between them
		// In case of a match b/w 2 winners, both of them can win so increment for both.
		// These are fixed wins i.e. new_max_wins shall always be there !!
		// Others can fight with other teams and may have a chance to win ...		
		REP(u,n)
			if(pnt[u][0]==max_pnt){
				REP(v,n)
					if(mat[u][v]==2 && pnt[v][0]==max_pnt){
						pnt[u][0]++;
						pnt[v][0]++;
						new_max++;
					}
			}

		REP(j,n){
			if((pnt[j][0]+pnt[j][1])>=new_max){
				printf("1");
			}
			else{
				printf("0");
			}
		}
		printf("\n");
	}	
}