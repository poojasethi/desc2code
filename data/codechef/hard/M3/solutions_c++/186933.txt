#include<iostream>
#include<fstream>
#include<stack>
#include<queue>
#include<vector>
#include<string>
#include<stdio.h>
#include<math.h>
using namespace std;

#define DEBUG 0
#define FOR(i,a,b) for(int i=(int)(a) ; i < (int)(b);++i)
#define REP(i,n) FOR(i,0,n)

inline int getint(FILE *f){
	int n=0;
	char buffer;
	do{
		buffer=fgetc(f);
	}while(buffer==' ' || buffer=='\n');
	n=n*10+buffer-48;

	do{
		buffer=fgetc(f);
		if(buffer==' ' || buffer=='\n' || buffer==EOF)
			break;
		n=n*10+buffer-48;
	}while(1);
	return n;
}

int n;
int mat[142][142];
int pnt[142][2]; // col1 -> current points col2-> remaining matches
int max_pnt=-1;
int main(){

	FILE *f; 
	if(DEBUG) f=fopen("a.txt","r+");
	else f=stdin;
	int t; fscanf(f,"%d",&t);
	REP(i,t){
		max_pnt=-1;
		fscanf(f,"%d",&n);		
		REP(u,n){
			pnt[u][0]=pnt[u][1]=0;
			REP(v,n){
				fscanf(f,"%d",&mat[u][v]);			
				if(mat[u][v]==1) pnt[u][0]++;
				if(mat[u][v]==2) pnt[u][1]++;
			}		
			if(pnt[u][0]>max_pnt) max_pnt=pnt[u][0];
		}
		int new_max=max_pnt;
		// check for 2 teams having max wins and also a match between them
		REP(u,n)
			if(pnt[u][0]==max_pnt){
				REP(v,n)
					if(u!=v && mat[u][v]==2 && pnt[v][0]==max_pnt){
						mat[u][v]=0;
						pnt[u][0]++;
						pnt[v][0]++;
						new_max++;
					}
			}
			
	
		REP(j,n){
			if((pnt[j][0]+pnt[j][1])>=new_max){
				//pnt[j][0]=-1; 
				printf("1");
			}
			else{
				printf("0");
			}
		}printf("\n");
		//REP(j,n) printf("%d ",pnt[j]); printf("%d \n",max_pnt);

	}	
}