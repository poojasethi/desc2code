#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
#define fi "input.inp"
#define fa "output.out"
#define foru(i,l,r) for(int i=l;i<r;i++)
#define ford(i,l,r) for(int i=l;i>r;i--)
#define re return
#define ll long long

const int maxN=200;
int a[maxN],b[maxN],sl[maxN],tr[maxN],mt[maxN][maxN],ok[maxN][maxN],fr[maxN],res[maxN];
int n;

void setmem() {
    memset(tr,0,sizeof(tr));
    memset(sl,0,sizeof(sl));
    memset(mt,0,sizeof(mt));
}

void init() {
    cin>>n;
    foru(i,1,n+1) foru(j,1,n+1) {
        scanf("%i",&mt[i][j]);
        if (mt[i][j]==1) ++sl[i];
        if (mt[i][j]!=2) ++tr[i];
    }
    foru(i,1,n+1) --tr[i];
}

void thang(int i,int j) {
    ok[i][j]=1;
    ok[j][i]=0;
    ++a[i];
    ++b[i];
    ++b[j];
}

void khoitao(int win) {
    bool con;
    do {
        con=false;
        int u=0;
        foru(i,1,n+1) if (a[i]>a[u] && i!=win && b[i]<n-1) u=i;
        foru(i,1,n+1) if (ok[u][i]==2) {
            if (a[u]>a[i] && a[u]<a[win]) {
                thang(u,i);
                con=true;
            } else if (a[i]<a[win]) {
                thang(i,u);
                con=true;
            }
        }
    } while (con);
}

bool tim(int u,int d,int win) {
    if (fr[u]==d) re false;
    fr[u]=d;
    foru(i,1,n+1)
        if (i!=win && ok[u][i]==1 && a[i]<a[win]) {
            ok[u][i]=0;
            ok[i][u]=1;
            --a[u];
            ++a[i];
            re true;
        }
    foru(i,1,n+1) if (i!=win && ok[u][i]==1) {
        if (tim(i,d,win)) {
            ok[u][i]=0;
            ok[i][u]=1;
            --a[u];
            ++a[i];
            re true;
        }
    }
    re false;
}

bool capghep(int win) {
    memset(fr,0,sizeof(fr));
    foru(i,1,n+1) if (i!=win)
        foru(j,1,n+1) if (ok[i][j]==2) {
            if (a[i]<a[win]) thang(i,j); else
            if (a[j]<a[win]) thang(i,j); else
            if (tim(i,i*n+j,win)) thang(i,j); else
            if (tim(j,-i*n-j,win)) thang(j,i); else
            re false;
        }
    re true;
}

void xuly() {
    memset(res,255,sizeof(res));
    foru(win,1,n+1) {
        foru(i,1,n+1) a[i]=sl[i];
        foru(i,1,n+1) b[i]=tr[i];
        a[win]+=(n-1-b[win]);
        b[win]=n-1;
        foru(i,1,n+1) foru(j,1,n+1) {
            ok[i][j]=mt[i][j];
            if (mt[i][j]==1 || mt[i][j]==0) mt[i][j]=3;
        }
        foru(i,1,n+1) if (ok[win][i]==2) {
            ok[win][i]=1;
            ok[i][win]=0;
            ++b[i];
        }
        res[win]=1;
        foru(i,1,n+1) if (a[i]>a[win]) {
            res[win]=0;
            break;
        }
        if (res[win]==1) {
            khoitao(win);
            if (!capghep(win)) res[win]=0;
        }
    }
    foru(i,1,n+1) printf("%i",res[i]);
    printf("\n");
}

int main() {
//    freopen(fi,"r",stdin);
    //freopen(fa,"w",stdout);
    int t;
    cin>>t;
    while (t>0) {
        setmem();
        init();
        xuly();
        --t;
    }
    fclose(stdin);
    fclose(stdout);
    re 0;
}

