#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <queue>

using namespace std;

#define rep(i,a,b) for(typeof(a) i=(a);i<(b);i++)
#define ll long long int
#define ii pair<int,int>
#define CLEAR(x,val) memset(x,val,sizeof(x))
#define SZ(v) (v).size()
#define INF 255551
#define mp make_pair

bool f[511][511];
int w[511][511];

int n  , m , d ;

int f1( int a , int b ) {
	
	priority_queue< pair<int,ii > , vector<pair<int , ii> > , greater<pair<int , ii> >  > Q;
	Q.push(mp(w[a][b] , mp(a,b)));
	int mx = a+d , my = b+d;f[a][b] = true;
	

	while(!Q.empty()) {
	
		pair<int, ii > p = Q.top();Q.pop();
		int r = p.second.first  , c = p.second.second , tmp = p.first;
		
		if( r <= d && c <= d ) { 
			return tmp; 
		}
		else {
		int lr = max(  0 , r-d ) , lc = max( 0 , c - d ) , mr = min( n , (r+d+1) )  , mc = min(m,c+d+1) ; 

		rep( i , lr , r+1 ) rep( j , lc , c+1 ) {
			if( (!f[i][j]) ){ 
				Q.push(mp(tmp+w[i][j] , mp( i , j )));
				f[i][j] = true;
			}
			else break;
		}
		rep( i , r   , mr ) for( int  j = lc ; j <= c ;j++) {
			  if(  ((i)*(i)+(j)*(j)) < (r*r+c*c) && !f[i][j]  ){ 
			 	  Q.push(mp(tmp+w[i][j] , mp( i , j )));
			 	  f[i][j] = true;
			   }
			  else break;
		}
		rep( j , c , mc  ) for( int i = lr ; i <= r ;i++ ) {
			if(  ((i)*(i)+(j)*(j)) < (r*r+c*c)  && !f[i][j]){
			 	Q.push(mp(tmp+w[i][j] , mp( i , j )));
				 f[i][j] = true;
			 }
			else break;
		}
	
		}
	}	
	return -1;
}
int main()
{
	
	int t ,  r , c;
	scanf("%d",&t);
	
	while( t-- ) {
		scanf("%d%d",&n,&m);
		scanf("%d%d%d",&d,&r,&c);

		rep( i , 0 , n ) rep( j , 0 , m ) scanf("%d",&w[i][j]);
		rep( i , 0 , n ) rep( j , 0 , m ) f[i][j] = false;

		printf("%d\n",f1( r , c ));

	}
	return 0;
}