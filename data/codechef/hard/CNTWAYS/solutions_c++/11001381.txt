#include <iostream>
using namespace std;
typedef long long ll;
const long long mod = 1000000007;

int fact[800001], invfact[800001];
 
int powmod(int base, int expo){
	if(expo==0)
		return 1;
	else if(expo&1)
		return (long long)base*powmod(base, expo-1)%mod;
	else{
		int root=powmod(base, expo>>1);
		return (long long)root*root%mod;
	}
}
 
int inverse(int x){
	return powmod(x, mod-2);
}

void init(){
	fact[0]=1;
	for(int i=1; i<=800000; i++)
		fact[i]=(long long)i*fact[i-1]%mod;
	invfact[800000]=inverse(fact[800000]);
	for(int i=800000; i>0; i--)
		invfact[i-1]=(long long)i*invfact[i]%mod;
}

ll ncr(ll n,ll r){
	if(r>n || r<0)
		return 0;
	return (long long)((long long)fact[n]*invfact[r]%mod)*invfact[n-r]%mod;
 
}

int main(){
	int r;
	scanf("%d",&r);
	ll n,m,a,b;
	init();
	while(r--){
	scanf("%lld %lld %lld %lld",&n,&m,&a,&b);
	ll p,q;
	
	p=n-a;
	
	ll ans = 0;
	
	for(int i=0;;i++){
	ll x=p-i,y=b+i;
	
	ll a1 = ncr(x+y,x);
	ll a2 = ncr(n-x+m-y,n-x);
	
	ans += a1*a2;

	ans %= mod;
	if(x<1)break;
	if(y>m-1)break;
	}
	
	printf("%lld\n",ans);
	}
	return 0;
}