#include <iostream>
#include <cstdio>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
#include <list>
#include <queue>
#include <deque>
#include <map>
#include <set>
#include <stack>
#include <sstream>
#include <utility>

using namespace std;
//using namespace __gnu_cxx;

typedef long long LL;
typedef double DB;
typedef unsigned int uint;
typedef vector<int> VI;
typedef vector<vector<int> > VVI;
typedef vector<string> VS;
typedef pair<int, int> PII;
typedef istringstream IS;
typedef ostringstream OS;

#define INF (1<<30)
#define INFLL (1LL<<61LL)
#define EPS (1e-9)
#define PB push_back
#define MP make_pair
#define FI first
#define SE second
#define ALL(v) (v).begin(),(v).end()
#define REP(i,n) for(int (i)=0;(i)<(n);++(i))
#define FUP(i,a,b) for(int (i)=(a);(i)<=(b);++(i))
#define FDN(i,a,b) for(int (i)=(a);(i)>=(b);--(i))
#define FORS(i,a) for(int (i)=0;(i)<(int)(a).size();++(i))
#define FORE(i,a) for(__typeof((a).begin()) i=(a).begin();i!=(a).end();++i)
#define PRINT(v) for(int (i)=0;(i)<(int)(v).size();(i)++) cerr<<v[i]<<" "; cerr<<endl;

const int mod = 1000000007;

LL revs[800002];

LL ExtGCD(LL a, LL b, LL &k, LL &l){
	if(!b){ k=1; l=0; return a; }
	LL k1,l1,d = ExtGCD(b, a%b, k1, l1);
	k = l1; l = k1 - (a/b)*l1;
	return d;
}

LL binom(LL n, LL k){
    LL res = 1;
    FUP(i,n-k+1,n){
        res *= i;
        res %= mod;
    }
    FUP(i,1,k){
        res *= revs[i];
        res %= mod;
    }
    return (res + mod) % mod;
}

LL next(LL p, LL n, LL k){
    p *= n+1;
    p %= mod;
    p *= revs[k+1];
    p %= mod;
    return (p + mod) % mod;
}

LL prev(LL p, LL n, LL k){
    //cout << "prev " << p << " " << n << " " << k << endl;
    p *= revs[n];
    p %= mod;
    p *= k;
    p %= mod;
    return (p + mod) % mod;
}

void run(){
    int n,m,a,b;
    cin >> n >> m >> a >> b;
    LL res = 0;
    LL p1 = 1;
    LL p2 = binom(n+m-b,m-b);
    FUP(i,0,n-a){
        //cout << "adding " << p1 << " x " << p2 << endl;
        //if (p2 != binom(n-i+m-b, m-b)) cout << "ERR " << p2 << "  " << binom(n-i+m-b, m-b) << "\n";
        res += p1 * p2;
        res %= mod;
        p1 = next(p1, b-1+i, i);
        p2 = prev(p2, n-i+m-b, n-i);
    }
    cout << res << "\n";
}

int main(){
    ios::sync_with_stdio(0);
    FUP(i,1,800001) {
        LL l,k;
        ExtGCD((LL)mod, (LL)i, k, l);
        revs[i] = l;
    }
    int C;
    cin >> C;
    REP(i,C) run();
    return 0;
}

