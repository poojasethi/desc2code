/* Author : Mayank Natani
   Email-id : mayanknatani6@gmail.com, mayank.natani@students.iiit.ac.in 
   Blog : mayanknatani.wordpress.com */
 
/* Data Structure Includes */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <bitset>
#include <stack>
 
/*other Includes */
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
 
/* C Includes */
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
 
using namespace std;
typedef vector<int > vi;
typedef vector<long long int > vl;
typedef vector<bool > vb;
typedef vector<char > vc;
typedef vector<float > vf;
typedef vector<double > vd;
typedef vector<vi > vvi;
 
#define pb push_back
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sf(n) scanf("%f",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define all(a) a.begin(),a.end()
#define tr(container,it) for(typeof(container.begin()) it = container.begin() ; it != container.end() ; it++) //to traverse any container
#define present(container,element) (container.find(element)!=container.end()) //should be used for set,map etc.
#define vpresent(container,element) (find(all(container),element)!=container.end()) //should be used for vectors.
#define PI 3.14159265359
#define DegToRad(a) PI/180*all
#define RadToDeg(a) 180/PI*a
#define LL long long int 
#define MOD 1000000007
#define INF (1<<30)
int gcd(int a, int b) { while(b) b^=a^=b^=a%=b; return a; }
#define MAXN 800005

LL fact[MAXN], invfact[MAXN];

LL powmod(LL base,LL expo){
	if(expo==0)
		return 1;
	if(expo&1)
		return base*powmod(base, expo-1)%MOD;
	LL root=powmod(base, expo>>1);
		return (root*root)%MOD;
}

LL inverse(LL x){
	return powmod(x, MOD-2);
}

void init(){
	fact[0]=1;
	for(int i=1; i<MAXN; i++)
		fact[i]=(i*fact[i-1])%MOD;
	invfact[MAXN-1]=inverse(fact[MAXN-1]);
	for(int i=MAXN-1; i>0; i--)
		invfact[i-1]=(i*invfact[i])%MOD;
}

LL C(int n, int r){
	if(r>n || r<0)
		return 0;
	return (((fact[n]*invfact[r])%MOD)*invfact[n-r])%MOD;
}

int main(){
	init();
	int n,m;
	int a,b,i;
	int test;
	scanf("%d",&test);
	while(test--){
		scanf("%d%d%d%d",&n,&m,&a,&b);
		long long int count1,count2;
		long long int ans=0;
		for(i=0;i<=n-a;i++){
			count1 = C(i+b,b);
			if(i!=n-a)
				count2=C(n+m-b-i-1,n-i);
			else
				count2=C(n+m-b-i,n-i);
			ans=(ans+(count1*count2)%MOD)%MOD;
		}
		printf("%lld\n",ans);
	}
	return 0;
}