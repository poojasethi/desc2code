#include<iostream>
#include<cstdio>
#include<algorithm>
#define ll long long int
#define mod 1000000007
using namespace std;
ll invMod(ll a , ll b)				// Multiplictive Inverse
{
	ll b0 = b, t, q;
	ll x0 = 0, x1 = 1;
	if (b == 1)
	{
		return 1;
	}
	while (a > 1)
	{
		q = a / b;
		t = b;
		b = a % b;
		a = t;
		t = x0;
		x0 = x1 - q * x0;
		x1 = t;
	}
	if (x1 < 0)
	{
		x1 += b0;
	}
	return x1;
}
ll A[800010],I[800010];
ll ways(int a,int b)
{
    return (((A[a]*I[b])%mod)*((I[a-b])))%mod;
}
 int main()
 {
     ll ans,sum,bysum,next,prev;
     int i,j,a,b,c,d,t;
     A[1]=1;
     A[0]=1;
     I[0]=1;
     I[1]=1;
     //cout<<powmod(1,mod-2);
     for(i=2;i<=800004;i++)
     {
         A[i]=(A[i-1]*i);
         if(A[i]>mod)
            A[i]=A[i]%mod;
         I[i]=invMod(A[i],mod);
     }
     scanf("%d",&t);
     while(t>0)
        {
            t--;
            scanf("%d %d %d %d",&a,&b,&c,&d);
            ans=0;
            prev=0;
            for(i=d;i<=b;i++)
            {
                next=ways(a-c+i,i);
                if(next>prev)
                    sum=next-prev;
                else
                    sum=(next-prev+mod)%mod;
                ans+=sum*ways(c+b-i,c);
                if(ans>mod)
                    ans=ans%mod;
                prev=next;
            }
            printf("%lld\n",ans);
        }
 }
