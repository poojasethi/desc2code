#include<iostream>
#include<math.h>
#include<stdio.h>
#include<bitset>
#include<algorithm>

#define x getchar_unlocked()
#define y putchar_unlocked()

using namespace std;

//fast input function
	
inline void inp( int &n ) 
{
	n=0;
	int ch=x,sign=1;
	while( ch < '0' || ch > '9' )
	{
		if(ch=='-')
			sign=-1; 
		ch=x;
	}
	while( ch >= '0' && ch <= '9' )
 		n=(n<<3)+(n<<1)+ ch-'0', ch=x;
	n=n*sign;
}

#define MAX 800004
#define MOD 1000000007

long long int fact[MAX],ifact[MAX];



long long power(long long n,int m)
{

    if(m==0) 
		return 1;
	long long int z=power(n,m/2);
    if(m%2==0) 
		return (z*z)%MOD;
    else
        return (((z*z)%MOD)*n)%MOD;
}

 
void solve()
{
	fact[0]=1;
	ifact[0]=1;
	int i;
	for(i=1;i<MAX;i++)
	{
		fact[i]=fact[i-1]*i;
		fact[i]%=MOD;
	}
	ifact[800000] = power(fact[800000],MOD-2);
	for(i=800000;i>1;i--)
		ifact[i-1] = ifact[i]*i%MOD;
}

long long int comb(int a,int b)
{
	return (((fact[a]*ifact[b])%MOD)*ifact[a-b])%MOD;
}
	
 
int main()
{
	solve();
	int t, m, n, a, b, i, j, k;
	long long int ans;
	inp(t);
	while(t--)
	{
		inp(n);
		inp(m);
		inp(a);
		inp(b);
		long long int ans=0;
		for(i=0;i<=n-a;i++)
		{
			ans+=((comb(b-1+i,b-1)*comb(m+n-b-i,m-b))%MOD);
			ans%=MOD;
		}
		printf("%lld\n",ans);
	}
	return 0;
}
