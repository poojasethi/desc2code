#include <bits/stdc++.h>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define _(x) memset(x,0,sizeof(x))
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)


inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
#ifdef WIN32
    freopen("in.in","r",stdin);
    //freopen("out.txt","w",stdout);
#endif // WINDOWS
}

#define MOD 1000000007

int fct[800005];
int inv[800005];

int C(int n,int r){
    ll res = 1;
    res *= fct[n];
    res %= MOD;
    res *= inv[n-r];
    res %= MOD;
    res *= inv[r];
    res %= MOD;
    return res;
}

int ways(int x, int y){
    return C(x+y,y);
}

ll fast_exp(int base, int exp) {
    ll res=1;
    while(exp>0) {
       if(exp%2==1) res=(res*base)%MOD;
       base=((ll)base*base)%MOD;
       exp/=2;
    }
    return res%MOD;
}

int main()
{
    int t = fi();

    fct[0] = inv[0] = 1;

    forall(i,1,800005){
        fct[i] = ((ll)fct[i-1]*i) % MOD;
        inv[i] = fast_exp(fct[i], MOD-2);
    }

    forall(cx,1,t+1){
        int n=fi(),m=fi(),
            a=fi(),b=fi();
        ll ans=0;
        forall(i,0,n-a+1){
            ans += (ways(i, b-1) *1ll* ways(n-i, m-b)) % MOD;
            ans %= MOD;
        }

        printf("%lld\n", ans);
    }

    return 0;
}
