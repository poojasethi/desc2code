#include <stdio.h>
#include <time.h>
#include <algorithm>

using namespace std;

#define MAXN 400001
#define MOD 1000000007
typedef long long LL;

LL fact[2*MAXN];
LL inv[2*MAXN];

LL modpow(LL x,LL n){
    LL ret=1;
    while(n){
             if(n & 1)
                  ret = (ret*x) % MOD;
             x = (x*x)% MOD;
             n /= 2;
    }
    return ret;
}

void gen(){
	fact[0] = 1;
	inv[0] = 1;
	for(int i=1;i< 2*MAXN;i++){
		fact[i] = (fact[i-1]*i);
		if(fact[i] >= MOD)
		           fact[i] = fact[i]% MOD;
		inv[i] = modpow(fact[i],MOD - 2);
	}
}

LL nCr(int n,int r){
	LL t = (fact[n]*inv[r]);
	if(t >= MOD)
	     t = t% MOD;
	t = (t*inv[n-r]);
	if(t >= MOD)
	     t = t% MOD;
	return t;
}

LL calc(int N,int M,int A,int B){
	LL ways = 0,temp1=0;
	for(int x=N-A;x>=0;x--){
            if(x != N-A)
                ways = (ways + nCr(x+B,B)*( nCr(N-x+M-B,M-B) +MOD- nCr(N-x+M-B-1,M-B)))% MOD;
            else
                ways = (nCr(N-A+B,B)*nCr(A+M-B,M-B))% MOD;
    	}
	return ways;
}

int main(){
    	gen();
	int R=0;
	scanf("%d",&R);
	while(R--){
		int N,M,A,B;
		scanf("%d %d %d %d",&N,&M,&A,&B);
		printf("%lld\n",calc(N,M,A,B));
	}
	return 0;
}