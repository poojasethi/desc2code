#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
using namespace std;

#define ll long long
#define MOD 1000000007

ll inv[800010];
ll fact[800010],fact_inv[800010];

ll comb(int a,int b)
{
    return (((fact[a]*fact_inv[b])%MOD)*fact_inv[a-b])%MOD;
}

ll ways(int a,int b)
{
    return comb(a+b,a);
}

void extended_euclid(ll x,ll y,ll *c,ll *a,ll *b)
{
    ll a0,a1,a2,b0,b1,b2,r0,r1,r2,q;
    r0=x; r1=y; a0=1; a1=0; b0=0; b1=1;
    while(r1>0)
    {
        q=r0/r1; r2=r0%r1; a2=a0-q*a1; b2=b0-q*b1;
        r0=r1; r1=r2; a0=a1; a1=a2; b0=b1; b1=b2;
    }

    *c=r0;*a=a0;*b=b0;
}

ll get_inv(ll n,ll p)
{
    ll a,b,c;
    extended_euclid(n,p,&c,&a,&b);
    if(a<p)a+=p;
    return a%p;
}

ll pw(ll a,ll b,ll md)
{
    ll r;
    if(!b)return 1;
    r=pw(a,b/2,md);
    r=(r*r)%md;
    if(b&1)r=(r*a)%md;
    return r;
}

int main()
{
    int T,N,M,A,B;
    int i;
    ll res;

    inv[1]=1;
    for(int i=2;i<800010;i++)
    {
        inv[i]=MOD-((MOD/i)*inv[MOD%i]%MOD);
    }

    fact[0]=fact_inv[0]=1;

    for(int i=1;i<800010;i++)
    {
        fact[i]=(fact[i-1]*i)%MOD;
    }

    for(int i=1;i<800010;i++)
    {
        fact_inv[i]=(fact_inv[i-1]*inv[i])%MOD;
    }

    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d%d%d",&N,&M,&A,&B);
        if(A==0||B==0)
        {
            res=ways(N,M);
            printf("%d\n",(int)res);
            continue;
        }

        res=0;
        for(int i=A;i<N+1;i++)
        {
            res+=ways(i,M-B)*ways(N-i,B-1);
            res%=MOD;
        }

        printf("%d\n",(int)res);
    }

    return 0;
}
