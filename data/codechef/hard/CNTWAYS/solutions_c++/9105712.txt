#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <functional>
#include <math.h>
#include <map>
 
inline bool fastreadIsEndOfLine(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
    if(c == '\r' || c == '\n')
      return true;
  }
 
  return false;
}
inline void fastread(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}
inline void fastreadll(long long* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}
inline void fastreadNeg(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  bool neg = false;
  if(c == '-')
  {
	  c = getchar();
	  neg = true;
  }
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
 
  if(neg)
	  *a = -*a;
}
inline void readString(char *s)
{
  *s = getchar();
  while(*s == '\r' || *s == '\n' || *s == -1)
    *s = getchar();
 
  while(*s != '\r' && *s != '\n' && *s != -1)
  {
    ++s;
    *s = getchar();
  }
  *s = '\0';
}
 
int R, N, K, M, A, B;
int T = 1;
 
long long F[400000 + 400000 + 1];
long long RF[400000 + 400000 + 1];
 
long long power(long long a, long long b)
{
  long long temp = a, ans = 1;
  while(b > 0)
  {
    if(b % 2 == 0)
    {
      temp=(temp*temp) % 1000000007;
      b /= 2;
    }
    else
    {
      ans = (ans * temp) % 1000000007;
      b--;
    }
  }
  return ans;
} 


int main()
{
#ifdef USE_DATA_TXT
  freopen_s(&stream, "C:\\Projects\\TaskTemplate\\data.txt", "r", stdin);
#endif
#ifdef PRINT_PERF
  auto start = std::chrono::high_resolution_clock::now();
#endif

  // Precompute factorials
  F[0] = F[1] = 1;
  for(long long i = 2; i <= (400000 + 400000 + 1); ++i)
  {
    F[i] = (i * F[i - 1]) % 1000000007;
  }
  RF[800000] = power(F[800000], 1000000007 - 2);
  for(int i = 800000; i != 0; i--)
  {
    RF[i - 1] = (RF[i] * i) % 1000000007;
  }

  fastread(&T);

  while(T--)
  {
    fastread(&N);
    fastread(&M);
    fastread(&A);
    fastread(&B);

    const int y = B - 1;
    const int maxX = N - A;
    long long result = 0;
    for(int x = 0; x <= maxX; ++x)
    {
      long long result1 = (((F[x + B - 1] * RF[x]) % 1000000007) * RF[B - 1]) % 1000000007;
      long long result2 = (((F[N - x + M - B] * RF[N - x]) % 1000000007) * RF[M - B]) % 1000000007;
      result = (result + (result1 * result2) % 1000000007) % 1000000007;
    }

    if(result < 0)
      result += 1000000007;
    printf("%d\n", (int)result);
  }
 
#ifdef PRINT_PERF
  PrintResultPerf(start);
#endif
#ifdef USE_DATA_TXT
  if(stream)
  {
    fclose(stream);
    stream = NULL;
  }
#endif
 
  return 0;
}