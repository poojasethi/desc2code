#include <bits/stdc++.h>
#define ll long long int
#define MAX 1000001
#define EPS 1e-9
#define MOD 1000000007
#define INF 1e9
#define pn() printf("\n")
#define vint vector <int>
#define vpint vector <pair<int,int> >
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
#define gc() getchar_unlocked()
#define ms(x,v) memset(x,v,sizeof x)
#define pr_arr(i,x,size) for(i=0;i<size;i++) cout<<x[i]<<" "
#define ff(i,a,b) for(i=a;i<=b;i++)
#define fb(i,a,b) for(i=a;i>=b;i--)
#define gprint(i) cout<<"Case #"<<i<<": "
using namespace std;

template<class T>
void scanint(T &x)
{
    register T c = gc();
    x = 0;
    T neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

template<class T>
T modulus(T x,int m=MOD)
{
    return (((x%m)+m)%m);
}

inline bool lt(double a, double b)
{
    return a + EPS < b;
}
inline bool gt(double a, double b)
{
    return a > b + EPS;
}
inline bool eq(double a, double b)
{
    return fabs(a - b) < EPS;
}

ll power(ll base,ll p)
{
    if(p==0)
        return 1;
    ll temp=1;
    while(p>1)
    {
        if(p%2!=0)
            temp=(1LL*(base*temp)%MOD);
        base=(1LL*(base*base)%MOD);
        p/=2;
    }
    ll ans=(1LL*(base*temp)%MOD);
    return ans;
}

map <int,int> m;
int sieve_arr[MAX+1];

void sieve(int n)
{
	int i,j;
	ff(i,2,n)
	{
		if(sieve_arr[i]==0)
		{
			for(j=2;j*i<=n;j++)
			{
				if(sieve_arr[i*j]==0)
					sieve_arr[i*j]=i;
			}
		}
	}
}

void calc(int n)
{
	if(n==1)
		return;
	if(!sieve_arr[n])
		m[n]+=1;
	else
	{
		m[sieve_arr[n]]+=1;
		calc(n/sieve_arr[n]);
	}
}

int main()
{
    ios::sync_with_stdio(false);
    int t;
    sieve(MAX);
    cin>>t;
    while(t--)
    {
    	m.clear();
    	int n,i;
    	cin>>n;
    	vint v;
    	ff(i,0,n-1)
    	{
    		int temp;
    		cin>>temp;
    		v.pb(temp);
    		calc(temp);
    	}
    	ll ans=1;
    	map <int,int> ::iterator it;
    	for(it=m.begin();it!=m.end();it++)
    	{
    		ans*=(1LL*(it->sd+1));
    	}
    	cout<<ans<<endl;
    }
    return 0;
}