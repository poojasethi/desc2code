#include<bits/stdc++.h>
using namespace std;
bool a[1000001];
long  prime_count[1000005]={0};
vector<long long >prime;
void sieve(long long n)
{
    long long i,j,m;
    m=sqrt(1000000);
    a[1]=1;
    a[0]=1;
    for(i=3;i<=m;i+=2)
    {
        if(a[i]==0)
        for(j=i*i;j<=1000000;j+=i+i)
        a[j]=1;
    }
    prime.push_back(2);
    for(i=3;i<=1000000;i+=2)
    {
        if(a[i]==false)
            prime.push_back(i);
    }
}
int main()
{
    sieve(1000005);
    long cs,tst;
    scanf("%ld",&cs);
    for(tst=1;tst<=cs;tst++)
    {
        long long n,x;
        cin>>n;
        set<long long>st;
        set<long long> :: iterator it;
        memset(prime_count,0,sizeof(prime_count));
        for(int i=1;i<=n;i++)
        {
            cin>>x;
            for(int j=0;j<prime.size();j++)
            {
                if(prime[j]>x) break;
                while(x%prime[j]==0)
                {
                    st.insert(prime[j]);
                    prime_count[prime[j]]++;
                    x/=prime[j];
                }
            }

        }
        //cout<<prime_count[2]<<endl;
            long long res=1;
            for(it=st.begin();it!=st.end();it++)
            {
                res*=(prime_count[*it]+1);
            }
            cout<<res<<endl;
    }
    return 0;
}
