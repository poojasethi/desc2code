#include <bits/stdc++.h>
using namespace std;
bool A[1000000];
vector <int> v;
void sieve()
{
    memset(A,true,1000000);
    for(int i=2;i*i<=1000000;i++)
    {
        if(A[i]==true)
        {
            v.push_back(i);
            for(int j=2*i;j<1000000;j=j+i)
            {
                A[j]=false;
            }
        }
    }
}
int main()
{
    sieve();
    int tc,n;
    cin>>tc;
    while(tc--)
    {
        cin>>n;
        long long ans=1;
        int B[10];
        for(int i=0;i<n;i++)
        {
            cin>>B[i];
        }
        int l=v.size();
        map <int,int>m;
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<l;j++)
            {
                if(B[i]<v[j])
                {
                    break;
                }
                if(B[i]%v[j]==0)
                {
                    int count=1;
                    //int a=B[i];
                    while(B[i]>1 && B[i]%v[j]==0)
                    {
                        B[i]=B[i]/v[j];
                        if(m.find(v[j])!=m.end())
                        {
                            m[v[j]]++;
                        }
                        else
                        {
                            m[v[j]]=1;
                        }
                    }
                    //m[v[j]]=m[v[j]]+count-1;
                    //cout<<v[j]<<"\t"<<m[v[j]]<<endl;
                }
            }
            if(B[i]!=1)
            {
                if(m.find(B[i])!=m.end())
                {
                    m[B[i]]++;
                }
                else
                {
                    m[B[i]]=1;
                }
            }
        }
        map<int,int>::iterator it;
        for(it=m.begin();it!=m.end();it++)
        {
            long int value=it->second;
            //cout<<it->first<<"\t"<<it->second<<"\t";
            ans=ans*(value+1);
        }
        cout<<ans<<endl;
    }
    return 0;
}
