#include <bits/stdc++.h>
using namespace std;

void findFactors(map<int, int> &mp, int x)
{
    int i,j;

    while(x%2==0)
    {
        if(mp.find(2)!=mp.end())
        {
            mp[2]++;
        }

        else
        {
            mp[2]=1;
        }

        x/=2;
    }

    for(i=3;i<=sqrt(x);i+=2)
    {
        
    }
}

int main()
{
    int i,j,k;
    int n,x,y;
    int l,r;
    int gcd;
   
    int t;

    vector<bool> isPrime(1000002,true);
    isPrime[0]=isPrime[1]=false;

    vector<int> primes;
    primes.push_back(2);

    for(i=2;2*i<=1000000;i++)
    {
        isPrime[2*i]=false;
    }

    for(i=3;i<=sqrt(1000000);i++)
    {
        if(isPrime[i])
        {
            primes.push_back(i);

            for(j=i;i*j<=1000000;j++)
            {
                isPrime[i*j]=false;
            }
        }
    }

    //generate primes upto 10^6
    cin>>t;

    while(t--)
    {
        cin>>n;

        map<int,int> mp;

        for(i=0;i<n;i++)
        {
            cin>>x;

            //find all prime factors of x and store to map
            for(j=0;j<primes.size() && primes[j]<=x;j++)
            {
                if(isPrime[x])
                {
                    if(mp.find(x)!=mp.end())
                    {
                        mp[x]++;
                    }

                    else
                    {
                        mp[x]=1;
                    }

                    x=1;
                }

                else
                {
                    y=primes[j];

                    while(x%y==0)
                    {
                        if(mp.find(y)!=mp.end())
                        {
                            mp[y]++;
                        }

                        else
                        {
                            mp[y]=1;
                        }

                        x/=y;
                    }
                }

                //end of for loop
            }

            //input over
        }

        //now, we have all the factors in the map with their frequency
        map<int, int> ::iterator it;

        long long int result=1;
        for(it=mp.begin();it!=mp.end();it++)
        {
           result*=(it->second+1); 
        }

        cout<<result<<endl;
        
        //test cases
    }

    return 0;
}
