 #include <iostream>
#include <stdio.h>
using namespace std;
long long scache[200][200];
long long mod;
long long strl(int n, int k)
{
if (scache[n][k]!=-1)
return scache[n][k];
if (n==0 && k==0)
return 1;
if (n==0 || k==0)
return 0;
scache[n][k]=strl(n - 1, k - 1)+k* strl(n - 1, k);
scache[n][k]%=mod;
return scache[n][k];
}
void init()
{
for (int i = 0; i < 120; ++i)
{
for (int j = 0; j < 120; ++j)
{
scache[i][j]=-1;
}
}
}
long long gcd(long long x, long long y)
{
if (y==0)
return x;
return gcd(y, x%y);
}
long long sumfalling(long long n, int k)
{
n++;
k++;
long long ans=1;
long long div=k;
for (int i = 0; i < k; ++i)
{
long long x=n-i;
long long y=gcd(x, div);
x/=y;
div/=y;
ans*=x;
ans%=mod;
}
//if(div!=1)
//printf("\n\n>>>>>>>>>>>%lld>>>>>>>>\n",div);
return ans;
}
long long sum(long long n, int k)
{
long long ans=0;
for (int i = 0; i <= k; ++i)
{
ans+=strl(k, i)*sumfalling(n, i);
ans%=mod;
}
return ans;
}
int main()
{
/*init();
mod=10000000;
for (int i = 0; i < 5; ++i)
{
for (int j = 0; j < 5; ++j)
{
printf("%d %d %lld\n",i,j,strl(i,j));
}
}*/
int t;
scanf("%d", &t);
while (t--)
{
long long n;
int k;
scanf("%lld%d%lld", &n, &k, &mod);
init();
long long ans=sum(n, k);
printf("%lld\n", ans);
}
}