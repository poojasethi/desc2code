#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>

using namespace std;

struct person { int p, w; };

bool good(double s, const vector<person> &a)
{
	static double dist[100005];
	double t = sqrt(1 + s * s);
	for (int i = 0; i < a.size(); i++)
		dist[i] = a[i].p - a[i].w * s;
	sort(dist, dist + a.size());
	for (int i = 0, j = a.size() - 1; i < j; i++, j--)
		if (dist[i] + dist[j] < 0)
			return false;
	return true;
}

int main(int argc, char *argv[])
{
	int n;
	scanf("%d", &n);
	vector<person> a(n);
	for (int i = 0; i < n; i++) {
		scanf("%d %d", &a[i].w, &a[i].p);
		a[i].w += 10;
	}

	double lo = 50.0 / 110.0, hi = 100.0 / 60;
	while (hi - lo > 1e-9) {
		double mi = (hi + lo) / 2;
		if (good(mi, a)) lo = mi;
		else hi = mi;
	}

	printf("%.6f\n", (lo + hi) / 2);

	return 0;
}
