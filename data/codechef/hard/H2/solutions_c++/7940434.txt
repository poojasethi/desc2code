#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
#include <map>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define BUFSIZE (10000)
char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;
#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})
void init_input(){
	if (input_eof) return;
	int existing = BUFSIZE - (ioend - inputbuffer);
	memcpy(inputbuffer, ioend, existing);
	int wanted = ioend - inputbuffer;
	int count=fread(inputbuffer + existing, 1, wanted, stdin);
	if (count < wanted)input_eof = 1;
	ioend = inputbuffer + BUFSIZE - (wanted - count);
	while (*--ioend > ' ');
	ioend++;
	ioptr=inputbuffer;
}
inline void non_whitespace(){
	for(;;){
		if(ioptr>=ioend)init_input();
		if(*ioptr>' ')return;
		ioptr++;
	}
}
inline int getint(){
	non_whitespace();
	int neg=0;
	if(*ioptr=='-'){
		ioptr++;
		neg=1;
	}
	int n=0;
	while(*ioptr>' ')
		n=(n<<3)+(n<<1)+*ioptr++-'0';
	ioptr++;
	if(neg)
		n=-n;
	return n;
}
#define N 200005
#define M 1000000007
#define pii pair<int,int>
pair<int,int>p[N],s[2605];
int k,v[101][101];double speed;
int cmp(pii a,pii b)
{
 return b.se-a.se>speed*(b.fi-a.fi);
}
bool work(double a)
{
 int n=0,i,j;speed=a;
 sort(s,s+k,cmp);
 for(i=0;i<k;i++)
 for(j=0;j<v[s[i].fi][s[i].se];j++)
 p[n++]=s[i];
 for(i=0,j=n-1;i<j;i++,j--)
 if(p[i].se+p[j].se<speed*(p[i].fi+p[j].fi+20))return 0;
 return 1;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,l,x,y,n,ok;ll m;
	while(~scanf("%d",&n))
	{
	 memset(v,0,sizeof(v));
	 for(i=0;i<n;i++)
	 {
	  p[i].fi=getint(),p[i].se=getint();
	  v[p[i].fi][p[i].se]++;
	 }
	 k=0;
	 for(i=50;i<=100;i++)
	 for(j=50;j<=100;j++)
	 if(v[i][j]>0)s[k++]=mp(i,j);
	 double lo=0,hi=5/3.0,mid;
	 for(i=0;i<25;i++)
	 {
	  	mid=(lo+hi)/2;
	  	if(work(mid))lo=mid;
	  	else hi=mid;
	 }
	 printf("%.6lf\n",lo);
	}
	return 0;
}