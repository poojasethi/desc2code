#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include <iostream>
#include <cmath>
#include <algorithm>

#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>

using namespace std;

typedef long long ll;

int K, N;
int P[40];
double Q[40];

void solve_greedy(){
  vector<int> ans(0);
  vector< pair<int, int> > tbl(0);
  for(int i = 0; i < N; i++)
    tbl.push_back(make_pair(P[i], i));
  sort(tbl.begin(), tbl.end());
  //reverse(tbl.begin(), tbl.end());
  //for(int i = 0; i < N; i++)printf("tbl[%d].first=%d tbl[%d].second=%d\n",i, tbl[i].first, i, tbl[i].second);

  double mx = -1;
  for(int left = 0; left <= K; left++){
    int right = K - left;
    vector<int> cand;
    for(int i = 0; i < left; i++)
      cand.push_back(tbl[i].second);
    for(int i = N-right; i < N; i++)
      cand.push_back(tbl[i].second);
    double sum = 0;
    for(int i = 0; i < K; i++){
      double p = 1;
      for(int j = 0; j < K; j++){
        if(i==j)p *= (1.0-Q[cand[j]]);
        else p *= Q[cand[j]];
      }
      sum += p;
    }
    if(sum > mx){
      mx = sum;
      ans.clear();
      for(int i = 0; i < K; i++)
        ans.push_back(cand[i]);
    }
  }
  sort(ans.begin(), ans.end());
  //printAns();
  for(int i = 0; i < K; i++){
    if(i>0)printf(" ");
    printf("%d", ans[i]+1);
  }
  printf("\n");
}

int main(){
  //cin.tie(0);
  //ios_base::sync_with_stdio(false);

  int T;
  scanf("%d", &T);
  for(;T;T--){
    scanf("%d%d", &N, &K);
    for(int i = 0; i < N; i++){
      scanf("%d", P+i);
      Q[i] = P[i] / 100.0;
    }
    solve_greedy();
  }
  return 0;
}
