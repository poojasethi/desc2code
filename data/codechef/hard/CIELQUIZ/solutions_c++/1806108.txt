#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
int p[36],order[36];
bool cmp(int i, int j) {
	return p[i] < p[j];
}
void solve() {
	int n,k; cin >> n >> k;
	for (int i = 0; i < n; i++) {
		cin >> p[i];
		order[i] = i;
	}
	sort(order,order + n,cmp);
	vector<int> bestWho;
	double best = -1.0;
	for (int i = 0; i <= k; i++) {
		vector<int> who;
		for (int j = 0; j < i; j++) {
			who.pb(order[j]);
		}
		for (int j = n - k + i; j < n; j++) {
			who.pb(order[j]);
		}
		double mAll = 1.0,mOne = 0.0;
		for (int j = 0; j < k; j++) {
			double nAll = mAll * p[who[j]] / 100.0;
			double nOne = mAll * (100 - p[who[j]]) / 100.0 + mOne * p[who[j]] / 100.0;
			mAll = nAll;
			mOne = nOne;
		}
		if (best < mOne) {
			best = mOne;
			bestWho = who;
		}
	}
	for (int i = 0; i < k; i++) {
		cout << bestWho[i] + 1 << " ";
	}
	cout << endl;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
}
