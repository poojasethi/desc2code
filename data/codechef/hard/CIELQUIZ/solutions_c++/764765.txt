#include <iomanip>
#include <ctime>
#include <numeric>
#include <functional>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>
#include <cstring>
#include <climits>
#include <cmath>
#include <cctype>
#include <sstream>
#include <map>
#include <set>
#include <cstdio>
#include <queue>
#define f(i,x,y) for(int i=x;i<y;i++)
#define fd(i,y,x) for(int i=y;i>=x;i--)
#define FOR(it,A) for( typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define impr(A) for( typeof A.begin() chen = A.begin(); chen !=A.end(); chen++ ) cout<<*chen<<" "; cout<<endl
#define ll long long
#define vint vector<int>
#define clr(A,x) memset(A,x,sizeof(A))
#define CLR(v) f(i,0,n) v[i].clear()
#define oo (1<<30)
#define ones(x) __builtin_popcount(x)
#define all(v) (v).begin(),(v).end()
#define rall(v) (v).rbegin(),(v).rend()
#define pb push_back
#define eps (1e-9)
#define cua(x) (x)*(x)
using namespace std;

int T;
int n,k;
double p[40], q[40];
int r[40];
bool comp (int i, int j){ return p[i] > p[j]; }

int main()
{
	cin >> T;
	while(T--){
		cin >> n >> k;
		f(i,0,n) scanf ("%lf", p+i), r[i] = i;
		sort (r, r+n, comp);
		if (k==1) cout << r[n-1]+1 << endl;
		else{
			{
				f(i,0,n){
					q[i] = p[r[i]]==0? 1000 : (100 - p[r[i]]) / p[r[i]];
				}
//				f(i,0,n) cout << q[i] << " "; cout << "." << endl;
				double s = 0;
				f(i,0,k-1) s += q[i];
				int le = k-2, ri = n-1;
				int cnt = k;
				while(1){
					if (s>1+eps) break;
					cnt--;
					if (le<=-1) break;
					s += q[ri] - q[le];
					ri--; le--;
				}
//				cout << cnt << endl;
				bool prim = 1;
				f(i,0,cnt){
					if(prim) prim = 0;
					else putchar(32);
					cout << r[i]+1;
				}
				f(i,0,k-cnt){
					if(prim) prim = 0;
					else putchar(32);
					cout << r[n-1-i]+1;
				} putchar(10);
			}
		}
	}
}
