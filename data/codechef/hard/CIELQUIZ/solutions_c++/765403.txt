#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <fstream>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define inf 1000000000
#define MP make_pair
using namespace std;
typedef long long i64;
typedef unsigned long long u64;
int T,N,K;
int I[100],B[100];
double P[100],O[100];

bool eq(double a,double b){
    return abs(a-b)<(1e-9);
}

int main()
{

    cin>>T;
    while(T--){

        cin>>N>>K;
        for(int i=1;i<=N;i++){cin>>P[i];P[i]/=100.0;O[i]=P[i];}

        sort(P+1,P+(N+1));

        memset(B,0,sizeof(B));

        for(int i=1;i<=N;i++)
            for(int j=1;j<=N;j++)
                if(eq(P[i],O[j])&&(!B[j])){
                    B[j]=1; I[i]=j; break;
                }

        int idx,f=0;
        double res=-inf;

        for(int i=0;i<=K;i++){
            double tc=1.0,cur=0.0;
            int z=0;

            for(int j=1;j<=i;j++){tc*=P[j];if(eq(P[j],0.0))z++;}
            for(int j=N-K+i+1;j<=N;j++){tc*=P[j];if(eq(P[j],0.0))z++;}

            if(z>1){}
            else if(z==1){
                cur=1.0;
                for(int j=1;j<=i;j++){if(!eq(P[j],0.0))cur*=P[j];}
                for(int j=N-K+i+1;j<=N;j++){if(!eq(P[j],0.0))cur*=P[j];}
            }
            else{
                for(int j=1;j<=i;j++)if(P[j]>0.0)cur+=(tc*(1.0-P[j])/P[j]);
                for(int j=N-K+i+1;j<=N;j++)if(P[j]>0.0)cur+=(tc*(1.0-P[j])/P[j]);
            }

            if(cur>res){res=cur;idx=i;}
        }

        for(int i=1;i<=idx;i++){
            if(!f){cout<<I[i];f=1;}
            else cout<<" "<<I[i];
        }

        for(int i=N-K+idx+1;i<=N;i++){
            if(!f){cout<<I[i];f=1;}
            else cout<<" "<<I[i];
        }
        cout<<endl;

    }

    return 0;
}
