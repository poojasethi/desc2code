#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<queue>
#include<map>
#include<cmath>
#include<set>
#include<stack>
 
using namespace std;
 
#define gc getchar_unlocked
typedef  long long LL;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef pair<string,int> psi;
typedef pair<string,string> pss;
 
// some constants
#define INF ((int)(1e9+7))
 
// container modification/traversal 
#define sz(v) ((int)v.size())
#define len(v) ((int)v.length())
#define pb push_back
#define all(v) v.begin(),v.end()
#define mp make_pair
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define foreach(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
 
// input
#define icin(x) scanf("%d",&x);
#define lcin(x) scanf("%lld",&x);
 
#define gcd __gcd
#define bitcount __builtin_popcount
template<class T> inline T abS(T a){return ((a>=0)?a:-a); }
template<class T> inline T maX(T a,T b){return ((a>b)?a:b);}
template<class T> inline T miN(T a,T b){return ((a<b)?a:b);}
template<class T> inline void updmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void updmax(T &a,T b){if(b>a) a=b;}
 
int main(){
	//freopen("in.txt","r",stdin);
	int t;
	icin(t);
	while(t--){
		int n, f;
		
		icin(n);
		icin(f);
		vi h(n);
		set<int> s;
		map<int,int> cnt;
		for(int i=0;i<n;i++){
			cin>>h[i];
			if(!s.count(h[i])){
				cnt[h[i]]=1;
				s.insert(h[i]);
			}
			else
				cnt[h[i]]++;
		}
		LL ans=0;
		foreach(s,it){
			int h = *it;
 
			LL prod = f;
			int d = cnt[h];
			//cout<<h<<" "<<d<<endl;
			ans+= (d*(d-1))/2;
			while(prod<=h){
				if(h%prod==0){
					int k = h/prod;
					if(s.count(k)){
						//cout<<h<<" "<<k<<" "<<cnt[k]<<endl;
						ans+=cnt[k]*d;
					}
				}
					prod*=f;
			}
		}
		cout<<ans<<endl;
	}
 
 
 
	
		return 0;
}
 