#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

typedef long long int ll;

pair<vector<ll>::iterator,vector<ll>::iterator> bounds;

int main()
{
	ll test;
	cin>>test;
	while(test--)
	{
    ll n,f,i,a;
    cin>>n>>f;
    vector<ll> height;
    
    double j;
    
    for(i=0;i<n;i++)
     {
     	cin>>a;
     	height.push_back(a);
     }
     
     sort(height.begin(),height.end());
    
    ll ans=0;
    
    for(i=0;i<n;i++)
    {
        j=(double)height[i];
        //cout<<height[i]<<" : ";
        
        while(j==(int)j)
        {
            // find occurences of j in the interval [0,i)
            bounds=equal_range(height.begin(),height.begin()+i,j);
            ll cnt = (bounds.second-height.begin()) - (bounds.first-height.begin());
           // cout<<endl<<bounds.first-height.begin()<<" "<<bounds.second-height.begin()<<endl;
            ans+=cnt;
             j= j/(double)f;
        }
       // cout<<ans<<endl;
        //cout<<endl;
    }
    
    cout<<ans<<endl;
	}
    return 0;
}