#include <bits/stdc++.h>

using namespace std;

# define g getchar
# define print(x) printf("%d",x)

int inline scan(){

	int N = 0;
	char C;
	C=g();
	while (C < '0' || C>'9') C=g();
	while (C >= '0' && C <= '9')
	{
		N = (N<<3) + (N<<1) + C - '0';
		C=g();
	}
	return N;
}


    
        int search(unsigned int*A,int a,int b,unsigned int c){
	if(a>b){
		return -1;
	}
	if(a==b&&A[a]!=c){
		return -1;
	}
	int mid=(a+b)/2;
	if(A[mid]==c){
		return mid;
	}
	if(A[mid]<c){
		return search(A,mid+1,b,c);
	}
	return search(A,a,mid-1,c);
}
    
    
    
    
    unsigned int f;
    bool z(unsigned int a, unsigned int b){
    if(a==b){
    return true;
    }
    if(a<b||a%f!=0){
    return false;
    }
    return z(a/f,b);
    }
    unsigned int ii(unsigned int a){
    if(a%f!=0||a==0){
    return a;
    }
    return ii(a/f);
    }
    int main(){
    int t,n,c,i,k;
    unsigned int A[10001],B[10001],C[10001],p,m,j;
    long a;
    t=scan();
    while(t--!=0){
    n=scan();
    f=scan();
    c=0;
    while(c!=n){
    A[c]=scan();
    c++;
    }
    A[n]=1000000001;
    sort(A,A+n);
    c=0,k=0;
    while(c<n){
    i=0;
    while(A[c+i]==A[c]){
    i++;
    }
    B[k]=i;
    A[k]=A[c];
    k++;
    c=c+i;
    }
    //k is size
    i=0;
    a=0;
    while(i!=k){
    if(B[i]!=1){
    a+=(B[i]*(B[i]-1))/2;
    }
    i++;
    }
    i=1;
    C[0]=B[0];
    while(i!=k){
    c=i-1;
    if(A[i]%f!=0){
    c=-1;
    }else{

    m=A[i]/f;

    while(m!=0){
    	c=search(A,0,i-1,m);
    	if(c!=-1||m%f!=0){
    		break;
    	}
    	m/=f;
    
    }
    
}
    if(c>-1){
    a+=B[i]*C[c];
    C[i]=B[i]+C[c];
    }else{
    C[i]=B[i];
    }
    i++;
    }
    cout<<a<<"\n";
    }
    }