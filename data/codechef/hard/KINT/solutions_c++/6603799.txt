#include <bits/stdc++.h>

#define st first
#define nd second
#define mp make_pair
#define pb push_back
#define lli long long int
#define all( gg )   gg.begin(),gg.end()
#define foreach( gg,itit )  for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define debug(ccc)  cout << #ccc << " = " << ccc << endl;

#define f( aa,bb )  ( ((aa)&(1<<(bb)))>>(bb) )

#define mod 1000000007LL

using namespace std;

lli dp[1<<8][32][32];

lli n,k,b;

lli bul( int state,int bit,int b ){
	if( b<0 )	return	0;
    if( bit==-1 ){
        if( state!=(1<<k-1)-1 and state!=(1<<k)-1 or b )    return  0;
        return  1;
    }
    lli &ret = dp[state][bit][b];
    if( ret!=-1 )   return  ret;
    ret = 0;
    FP( mask,0,(1<<k)-1 ){
        int ok = 1;
        FP( i,0,k-2 )
            if( f( state,i )==0 and f( mask,i )>f( mask,i+1 ) ){
                ok = 0;
                break;
            }
        if( !ok or (f( state,k-1 )==0 and f( mask,k-1 )>f( n,bit )) )   continue;
        int newmask=0;
        FP( i,0,k-2 )
            if( f( state,i )==1 or f( mask,i )<f( mask,i+1 ) )
                newmask |= (1<<i);
        if( f( state,k-1 )==1 or f( mask,k-1 )<f( n,bit ) )
            newmask |= (1<<k-1);
        ret += bul( newmask,bit-1,b-(__builtin_popcount(mask)&1) );
    }
    ret %= mod;
    return  ret;
}

int main(){
    int t;
    cin >> t;
    while( t-- ){
		cin >> n >> k >> b;
		memset( dp,-1,sizeof dp );
		cout << bul( 0,29,b ) << endl;
	}
}
