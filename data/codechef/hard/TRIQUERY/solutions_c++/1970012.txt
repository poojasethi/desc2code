#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<map>
#include<vector>
#include<list>
#include<set>
#include<queue>
#include<numeric>
#include<sstream>
#include<string>
#include<cmath>
#include<algorithm>
#include<stack>
using namespace std;

//#define inf 1001001010010010100ll
#define pb		push_back
#define mp 		make_pair
#define EPS		1e-9
#define ll long long
#define vi vector<int>
#define pii pair<int,int>
#define fi first
#define se second
#define inf 1000000000
//#define mod 1000000007
#define N 300001
#define M 420
struct pt{int x,y;}p[N];
struct qt{int x,y,id,d;}q[200001];
struct q1t{int x,y,id,d;}q1[200001];
int bx[N],by[N],ans[200001];
void upx(int x)
{
 while(x<N)
 {
  bx[x]++;x+=x&-x;
 }
}
void upy(int x)
{
 while(x<N)
 {
  by[x]++;x+=x&-x;
 }
}
int qx(int x)
{
 int ans=0;
 while(x>0)
 {
  ans+=bx[x];x-=x&-x;
 }
 return ans;
}
int qy(int x)
{
 int ans=0;
 while(x>0)
 {
  ans+=by[x];x-=x&-x;
 }
 return ans;
}
int p_sort(pt a,pt b)
{
 return a.x+a.y<b.x+b.y;
}
int q_sort(qt a,qt b)
{
 return a.x+a.y+a.d<b.x+b.y+b.d;
}
int q1_sort(q1t a,q1t b)
{
 return a.x+a.y<b.x+b.y;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,k,m,n,num;
	//scanf("%d",&T);
	//while(T--)
	while(~scanf("%d%d",&n,&m))
	{
	 memset(bx,0,sizeof(bx));
	 memset(by,0,sizeof(by));
	 memset(ans,0,sizeof(ans));
	 for(i=1;i<=n;i++)
	 {
	  scanf("%d%d",&p[i].x,&p[i].y);
	 }
	 sort(p+1,p+n+1,p_sort);
	 for(i=1;i<=m;i++)
	 {
	  scanf("%d%d%d",&q[i].x,&q[i].y,&q[i].d);
	  q[i].id=i;
	  q1[i].x=q[i].x,q1[i].y=q[i].y,q1[i].d=q[i].d;
	  q1[i].id=i;
	 }
	 sort(q+1,q+m+1,q_sort);
	 sort(q1+1,q1+m+1,q1_sort);
	 int co=1,co1=1;
	 for(i=1;i<=n;i++)
	 {
	  if(co<=m)
	  {
	   while(q[co].x+q[co].y+q[co].d<p[i].x+p[i].y)
	   {
	    ans[q[co].id]+=i-1;
	    ans[q[co].id]-=qy(q[co].y-1);
	    ans[q[co].id]-=qx(q[co].x-1);
	    co++;
	    if(co>m)break;
	   }
	  }
	  if(co1<=m)
	  {
	   while(q1[co1].x+q1[co1].y-1<p[i].x+p[i].y)
	   {
	    ans[q1[co1].id]+=qx(q1[co1].x-1)+qy(q1[co1].y-1)-(i-1);
	    co1++;
	    if(co1>m)break;
	   }
	  }
	  upx(p[i].x);upy(p[i].y);
	 }
	 while(co<=m)
	 {
	  	ans[q[co].id]+=n;
	  	ans[q[co].id]-=(qx(q[co].x-1)+qy(q[co].y-1));
	  	co++;
	 }
	 while(co1<=m)
	 {
	  	ans[q1[co1].id]+=qx(q1[co1].x-1)+qy(q1[co1].y-1)-n;
	  	co1++;
	 }
	 for(i=1;i<=m;i++)
	 printf("%d\n",ans[i]);
	 puts("");
	}

	return 0;
}
