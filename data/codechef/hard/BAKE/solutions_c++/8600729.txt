#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

int F[11][4][11][21][6][2][91];

char get(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
	return c;
}
int main(){
	int n;
	scanf("%d",&n);
	while(n--){
		int a,b,c,d,e,f,g,g2;
		char ch;
		while((ch=getchar())!='I' && ch!='Q');
		char re;
		re=get(a);
		if(re=='.'){
			get(b);
		}else b=-1;
		re=get(c);
		if(re=='.'){
			re=get(d);
			if(re=='.'){
				re=get(e);
			}else e=-1;
		}else d=e=-1;
		while((re=getchar())!='M' && re!='F');
		f=re=='M';
		re=get(g);
		if(re=='-')get(g2);
		else g2=g;
		
		int del;
		a++,b++,c++,d++,e++;
		if(ch=='I'){
			get(del);
				F[a][b][c][d][e][f][g]+=del;
			if(b)	F[a][0][c][d][e][f][g]+=del;
			if(a)	F[0][0][c][d][e][f][g]+=del;
			if(e){
					F[a][b][c][d][0][f][g]+=del;
				if(b)	F[a][0][c][d][0][f][g]+=del;
				if(a)	F[0][0][c][d][0][f][g]+=del;
			}
			if(d){
					F[a][b][c][0][0][f][g]+=del;
				if(b)	F[a][0][c][0][0][f][g]+=del;
				if(a)	F[0][0][c][0][0][f][g]+=del;
			}
			if(c){
					F[a][b][0][0][0][f][g]+=del;
				if(b)	F[a][0][0][0][0][f][g]+=del;
				if(a)	F[0][0][0][0][0][f][g]+=del;
			}

		}else{
			int ans=0;
			for (int i=g;i<=g2;i++)
				ans+=F[a][b][c][d][e][f][i];
			printf("%d\n",ans);
		}
	}
	return 0;
}
