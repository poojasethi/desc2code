import math
# def isWinning(position, memo = None):
# 	if memo == None:
# 		#Initialize memo on first call.
# 		memo = {}
# 	if position in memo:
# 		return memo[position]
# 	if position == 0:
# 		memo[position] = 0
# 		return 0
# 	moves = []
# 	if position >=0:
# 		moves.append(position//6)
# 	if position >=0:
# 		moves.append(position//5)
# 	if position >=0:
# 		moves.append(position//4)
# 	if position >=0:
# 		moves.append(position//3)
# 	if position >=0:
# 		moves.append(position//2)
# 	for x in moves:
# 		if not isWinning(x, memo) == 1:
# 			memo[position] = 1
# 			return 1
# 	memo[position] = 0
# 	return 0
def grundyNumbers(position, memo = None):
	if memo == None:
		memo = {}
	if position in memo:
		return memo[position]
	if position == 0:
		return 0
	moves = []
	moves.append(grundyNumbers(position//6, memo))
	moves.append(grundyNumbers(position//5, memo))
	moves.append(grundyNumbers(position//4, memo))
	moves.append(grundyNumbers(position//3, memo))
	moves.append(grundyNumbers(position//2, memo))
	moves.sort()
	answer = 0
	for x in moves:
		if answer == x:
			answer += 1
	memo[position] = answer
	return answer


def isWinning2(position):
	if position == 0:
		return 0
	if position == 1:
		return 1
	if position == 2 or position == 3:
		return 2
	if position == 4 or position == 5:
		return 3
	p = int(math.log(2*position, 12))
	if math.log(2*position + 1) < math.log(12)*p + math.log(2):
		return 0
	elif math.log(2*position + 1) < math.log(12)*p + math.log(4):
		return 1
	elif math.log(2*position + 1) < math.log(12)*p + math.log(8):
		return 2
	else:
		return 3

grunds = [0, 1, 2, 2, 3, 3, 0, 0, 0, 0, 0, 0]
def grundy2(n):
	return grunds[n] if n < 12 else grundy2(n / 12)
	

test_case = int(raw_input())
for t in xrange(test_case):
	n = int(raw_input())
	array = map(int, raw_input().split())
	result = 0
	for a in xrange(len(array)):
		if a == 0:
			result = grundy2(array[a])
		else:
			result = result^grundy2(array[a])
	#print result
	if result == 0:
		print 'Derek'
	else:
		print 'Henry'
# import random
# for i in xrange(100000):
# 	value = random.randint(1,10*18)
# 	if not isWinning2(value) == grundy2(value):
# 		print 'F'
# for i in range(100000):
	# isWinning2(i)
# print grundyNumbers(10**18)
# print grundyNumbers(1)^grundyNumbers(2)