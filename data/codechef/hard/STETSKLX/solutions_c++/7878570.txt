#include <iostream>
#include <stdio.h>
#include <vector>
#include <utility>
#include <string.h>

using namespace std;

const int maxn = 1e5 + 7;

vector<pair<int,int> > v[maxn];

int n,t,foo,bar,wt,L,R,mid;
int X[55];
int Y[55];

void dfs2(int node,int par,int dep,int cnt)
{
	Y[dep]=max(Y[dep],cnt);
	if(dep==R) return;
	for(int i=0;i<v[node].size();i++)
	{
		int tp = v[node][i].first;
		int tw = v[node][i].second;
		if(tp == par) continue;
		dfs2(tp,node,dep+1,cnt+(tw<=mid?1:0));
	}
}

bool dfs(int node,int par=-1)
{
	for(size_t i=0;i<v[node].size();i++)
	{
		int tp = v[node][i].first;
		if(tp==par) continue;
		if(dfs(tp,node)) return true;
	}
	memset(X,255,sizeof(X));
	for(size_t i=0;i<v[node].size();i++)
	{
		int tp = v[node][i].first;
		int tw = v[node][i].second;
		if(par == tp) continue;
		memset(Y,255,sizeof(Y));
		dfs2(tp,node,1,(tw<=mid)?1:0);
		for(int i=L;i<=R;i++) if(2*Y[i]>i) return true;
		for(int i=1;i<R;i++)
		{
			if(X[i]==-1) continue;
			for(int j=max(1,L-i);j<=R-i;j++)
				if(Y[j]!=-1 and 2*(X[i]+Y[j])>(i+j))
					return true;
		}
		for(int i=1;i<R;i++) X[i]=max(X[i],Y[i]);
	}
	return false;
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("I.in","r",stdin);
	#endif
	
	cin>>t;
	while(t--)
	{
		scanf("%d%d%d",&n,&L,&R);
		for(int i=0;i<	n;i++) v[i].clear();
		for(int i=1;i<n;i++)
		{
			scanf("%d%d%d",&foo,&bar,&wt);
			foo--,bar--;
			v[foo].push_back(make_pair(bar,wt));
			v[bar].push_back(make_pair(foo,wt));
		}
		int low=0,high=1e9+1;
		while((high-low)>1)
		{
			mid = (high+low)>>1;
			if(dfs(0)) high=mid;
			else low = mid;
		}
		if(high==(1e9+1)) puts("-1");
		else printf("%d\n",high);
	}
	return 0;
}