//---------------------------JUGNU: LET YOUR LIGHT SHINE---------------------------//
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define mk make_pair
#define ln length
#define vt(a) vector <ll> a
#define st(a) set <ll> a
#define sti(a) set <ll>::iterator a
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define frr(i,a,b) for(i=a;i>=b;i--)
#define sc(a) scanf("%d",&a)
#define sm(a,b) scanf("%d%d", &a, &b)
#define pr(a) printf("%lld\n", a)
#define pm(a,b) printf("%d %d\n", a, b)
#define cn(a) cin >> a
#define ct(a) cout << a << endl
#define isset(x,i) ((x>>i)&1)
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
using namespace std;
char s[1000005];
int cumulative_A[1000005], cumulative_B[1000005], cumulative_C[1000005];
map<pair<int, int>, int> m1;
int main()
{
	int i, j, t, n, m, k, l, r, mini,cnt, maxi, temp, flag;
	ll result = 0LL;
	scanf("%s", s);
	if(s[0]=='A')
		cumulative_A[0] = 1;
	else if(s[0]=='B')
		cumulative_B[0] = 1;
	else
		cumulative_C[0] = 1;
	for(i = 1; s[i]; i++)
	{
		cumulative_A[i] = cumulative_A[i-1];
		cumulative_B[i] = cumulative_B[i-1];
		cumulative_C[i] = cumulative_C[i-1];
		if(s[i]=='A')
			cumulative_A[i]++;
		else if(s[i]=='B')
			cumulative_B[i]++;
		else
			cumulative_C[i]++;
	}
	m1[mk(0, 0)] = 1;
	for(i = 0; s[i]; i++)
	{
		result = result + m1[mk(cumulative_A[i] - cumulative_B[i], cumulative_A[i] - cumulative_C[i])];
		m1[mk(cumulative_A[i] - cumulative_B[i], cumulative_A[i] - cumulative_C[i])]++;
	}
	pr(result);
return 0;
}
