#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <math.h>
 
char s[1000001];
struct node
{
  int amb;
  int amc;
};
node nodes[1000001];
 
int main()
{
  gets(s);
  char *p = s;
 
  nodes->amb = nodes->amc = 0;
  node *pn = nodes + 1;
 
  int a = 0, b = 0, c = 0;
  long long res = 0;
  for(; *p != '\0'; ++p, ++pn)
  {
    a += (*p == 'A');
    b += (*p == 'B');
    c += (*p == 'C');
    pn->amb = a - b;
    pn->amc = a - c;
  }
 
  const int N = p - s;
  std::sort((long long *)nodes, (long long *)(nodes + N + 1));
 
  node last = { 1000002, 1000002 };
  node *pnend = nodes + N + 1;
  int sum = 0;
  for(pn = nodes; pn < pnend; ++pn)
  {
    if((pn->amb != last.amb) || (pn->amc != last.amc))
    {
      last = *pn;
      sum = 0;
    }
    else
    {
      ++sum;
      res += sum;
    }
  }
 
  printf("%lld\n", res);
 
  return 0;
}