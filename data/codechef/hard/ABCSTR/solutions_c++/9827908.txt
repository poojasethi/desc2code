#include <iostream>
#include <cstdio>
#include <map>
#include <string>
#include <algorithm>



using namespace std;

map < pair < int, int>, int > mpp;

int a[1000005], b[1000005], c[1000005];

int main(void)
{

//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    long long int count = 0;


    string st;
    cin>>st;

    a[0] = 0;
    b[0] = 0;
    c[0] = 0;

    for (int i = 0; i < st.size(); ++i)
    {
        if(i>0)
        {
            a[i] = a[i-1];
            b[i] = b[i-1];
            c[i] = c[i-1];
        }

        if(st[i] == 'A') a[i]++;
        if(st[i] == 'B') b[i]++;
        if(st[i] == 'C') c[i]++;
    }


    for (int i = 0; i <= st.size(); ++i)
    {
        //printf("%d %d %d\n", a[i], b[i], c[i]);
        count += mpp[make_pair(a[i] - b[i], a[i] - c[i])];
        mpp[make_pair(a[i] - b[i], a[i] - c[i])]++;
    }

    //for (map<pair<int,int>, int>::iterator it = mpp.begin(); it != mpp.end(); ++it)
    //{
    //    //printf("%d, %d:: %d\n", it->first.first, it->first.second, it->second);
    //    count += (it->second-1);
    //}

    
    printf("%lld\n", count);

    return 0;
}