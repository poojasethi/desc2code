#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#define ABS(a) ((a>0)?a:-(a))
#define MIN(a,b) ((a<b)?(a):(b))
#define MAX(a,b) ((a<b)?(b):(a))
#define FOR(i,a,n) for (int i=(a);i<(n);++i)
#define FI(i,n) for (int i=0; i<(n); ++i)
#define pnt pair <int,int>
#define mp make_pair
#define PI 3.14159265358979
#define MEMS(a,b) memset(a,b,sizeof(a))
#define LL long long
#define U unsigned
using namespace std;
double way[110][110];
vector<int> a;
double c[110][110];
int main()
{
	int t;
	scanf("%d",&t);
	c[0][0]=1;
	FOR(i,1,110)
	{
		c[i][0]=c[i][i]=1;
		FOR(j,1,i)
			c[i][j]=c[i-1][j]+c[i-1][j-1];
	}
	while (t--)
	{
		a.clear();
		FOR(i,0,110)
			FOR(j,0,110)
				way[i][j]=0;
		int sum=0;
		int n,k;
		scanf("%d",&n);
		FOR(i,0,n)
		{
			scanf("%d",&k);
			sum+=k;
			a.push_back(k);
		}
		way[0][0]=1;
		FOR(i,0,a.size())
			for (int j=sum; j>=0; --j)
				if (j>=a[i])
					FOR(k,1,n+1)
						way[j][k]+=way[j-a[i]][k-1];
		double res=0;
		FOR(i,1,sum)
			FOR(j,1,n)
				res+=((way[i][j]/c[n][j])/(n-1))*ABS(sum-i-i);
		printf("%.6lf\n",res);
	}
	return 0;
}