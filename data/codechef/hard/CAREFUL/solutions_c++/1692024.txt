#include<iostream>
#include<algorithm>
using namespace std;

long long p[100000],k[100000];

long long pow2[100000];
long long m[100000],deg[100000];

/*
void pre(){

	pow2[1]=0;
	pow2[2]=1;
	long long i,curr,temp;
	for(i=3;i<100000;i++)
	{
		curr=0;
		temp=i;
		while(temp&1 ==0)
		{
			temp/=2;curr++;
		}
		pow2[i]= pow2[temp] + curr;
	}
}
*/

void pre(){
	pow2[1]=0;
	pow2[2]=1;
	long long i,j;
	for(i=1;i<100000;i++)
		m[i]=i;
	for(i=2;i*i<=100000;i++)
	{
		if(m[i]==i)
			for(j=2*i;j<100000;j+=i)
				m[j]=min(m[j],i);
	}
	
	//for(i=1;i<100;i++)
	//	cout<<m[i]<<"\n";

	for(i=3;i<100000;i++)
	{
		if(m[i]==i)
			pow2[i]=pow2[i-1];
		else
			pow2[i]=pow2[i/m[i]] + pow2[m[i]];
		/*if(m[i/m[i]]==m[i])
		{	

			//pow2[i]=pow2[i/m[i]] - deg[i/m[i]]*pow2[m[i]-1] + (deg[i/m[i]] +1) *pow2[i/m[i]];
			pow2[i]=pow2[i/m[i]] + pow2[m[i]];
			//deg[i]=deg[i/m[i]]+1;
		}

		else
		{	
			if(m[i]==i)
				pow2[i]=pow2[i-1];
			else
				pow2[i]=pow2[i/m[i]] +pow2[m[i]];     // as they r coprime
			//deg[i]=1;
		}
		*/
	}
}



int main(){
int t,m;
long long ans;
bool allodd;

pre();

//for(int i=1;i<100;i++)
//		cout<<pow2[i]<<"\n";


cin>>t;
while(t--)
{
	ans=0;
	allodd=true;
	cin>>m;
	for(int i=0;i<m;i++)
		cin>>p[i]>>k[i];

	for(int i=0;i<m;i++)
	{	
		ans=ans+pow2[p[i]] * k[i];
		if((p[i]&1) ==0) allodd=false;
	}
	if(allodd) ans++;
	cout<<ans<<"\n";

}


return 0;

}