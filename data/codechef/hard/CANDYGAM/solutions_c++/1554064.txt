#include<iostream>
#include<cstring>
#include<string>
#include<cstdio>
#include<fstream>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<stack>
#include<set>
#include<map>
#include<math.h>
#include<ctime>
#define LL long long
#define ULL unsigned long long
#define L long
#define VCTP vector<pair<LL,LL> >
#define PII pair<LL,LL>
#define PDD pair<double,double>
#define F first
#define S second
#define FOR(i,lb,ub) for(i=lb;i<=ub;i++)
#define RFOR(i,ub,lb) for(i=ub;i>=lb;i--)
#define FORS(it,v) for(it=v.begin();it!=v.end();it++)
#define st_clk double st=clock();
#define end_clk double en=clock();
#define show_time cout<<"\tTIME="<<(en-st)/CLOCKS_PER_SEC<<endl;
#define sc8(n) scanf("%c",&n)
#define sc16(n) scanf("%d",&n)
#define sc32(n) scanf("%ld",&n)
#define sc64(n) scanf("%lld",&n)
#define scst(n) scanf("%s",n)
#define f_in(st) freopen(st,"r",stdin);
#define f_out(st) freopen(st,"w",stdout);
LL gcd(LL a, LL b) { return b?gcd(b,a%b):a; }
using namespace std;

template <class T>
inline void r_f(T &p)
{
         char c;
         while ((c=getchar_unlocked()) < 48 || c > 57);
         p=c-48;
         while ((c=getchar_unlocked()) >= 48 && c <= 57) p=p*10+c-48;
}


class htree
{
      public:
             LL a[55];
             int maxv;
      htree(){memset(a,0,sizeof(a));}
      void update(LL id,LL val)
      {
       while (id<=maxv)
       {
           a[id]+=val;
           id+=(id & -id);
       }
      }
      LL read(LL id)
      {
         LL sum=0;
         while (id>0)
         {
               sum+=a[id];
               id-=(id & -id);
         }
         return sum;
      }
};
class vtree
{
      public:
             LL a[55];
             int maxv;
      vtree(){memset(a,0,sizeof(a));}
      void update(LL id,LL val)
      {
       while (id<=maxv)
       {
           a[id]+=val;
           id+=(id & -id);
       }
      }
      LL read(LL id)
      {
         LL sum=0;
         while (id>0)
         {
               sum+=a[id];
               id-=(id & -id);
         }
         return sum;
      }
};
             
LL tab[50][50][50][50],taba[50][50][50][50];
LL mat[55][55],Rsum[55][55],Csum[55][55];
LL aalice,aa,bb;
int n,m;
LL bob(int,int,int,int);
LL alice(int sr,int er,int sc,int ec)
{aa++;
             LL s1=0,s2=0,s3=0,s4=0,i;
            /* FOR(i,sc,ec)//top row
           {
                         s1+=mat[sr][i];//top
                         s2+=mat[er][i];//bottom
           }
           FOR(i,sr,er)
           {
                         s3+=mat[i][sc];//left
                         s4+=mat[i][ec];//right
           }*/
           /*s1=h[sr+1].read(ec+1)-h[sr+1].read(sc);
           s2=h[er+1].read(ec+1)-h[er+1].read(sc);
           s3=v[sc+1].read(er+1)-v[sc+1].read(sr);
           s4=v[ec+1].read(er+1)-v[ec+1].read(sr);*/
           s1=Rsum[sr+1][ec+1]-Rsum[sr+1][sc];
           s2=Rsum[er+1][ec+1]-Rsum[er+1][sc];
           s3=Csum[sc+1][er+1]-Csum[sc+1][sr];
           s4=Csum[ec+1][er+1]-Csum[ec+1][sr];
             LL ar[4];ar[0]=s1;ar[1]=s2;ar[2]=s3;ar[3]=s4;
             sort(ar,ar+4);
            // aalice+=ar[0];
             if (ar[0]==s1)
             {
                if (sr+1<=n && sr+1<=er)
                   return bob(sr+1,er,sc,ec);
                else return 0;
             }
             else if (ar[0]==s2)
             {
                  if (er-1>=0 && er-1>=sr)
                   return bob(sr,er-1,sc,ec);
                  else return 0;
             }
             else if (ar[0]==s3)
             {
                if (sc+1<=m && sc+1<=ec)
                   return bob(sr,er,sc+1,ec);
                else return 0;
             }
             else
             {
                 if (ec-1>=0 && ec-1>=sc)
                   return bob(sr,er,sc,ec-1);
                  else return 0;
             }
}
LL bob(int sr,int er,int sc,int ec)
{bb++;
           int i;
           if (tab[sr][er][sc][ec]!=-1)
              return tab[sr][er][sc][ec];
              
           LL s1=0,s2=0,s3=0,s4=0,f1,f2,f3,f4,sum;
           /*FOR(i,sc,ec)//top row
           {
                         s1+=mat[sr][i];//top
                         s2+=mat[er][i];//bottom
           }
           FOR(i,sr,er)
           {
                         s3+=mat[i][sc];//left
                         s4+=mat[i][ec];//right
           }*/
           /*s1=h[sr+1].read(ec+1)-h[sr+1].read(sc);
           s2=h[er+1].read(ec+1)-h[er+1].read(sc);
           s3=v[sc+1].read(er+1)-v[sc+1].read(sr);
           s4=v[ec+1].read(er+1)-v[ec+1].read(sr);*/
           s1=Rsum[sr+1][ec+1]-Rsum[sr+1][sc];
           s2=Rsum[er+1][ec+1]-Rsum[er+1][sc];
           s3=Csum[sc+1][er+1]-Csum[sc+1][sr];
           s4=Csum[ec+1][er+1]-Csum[ec+1][sr];
           f1=s1;f2=s2;f3=s3;f4=s4;
           if (sr==er)
           {
              tab[sr][er][sc][ec]=s1;
           }
           else if (sc==ec)
           {
                tab[sr][er][sc][ec]=s3;
           }
           else
           {
              if (sr+1<=n && sr+1<=er)
              {
                 if (taba[sr+1][er][sc][ec]==-1)
                    taba[sr+1][er][sc][ec]=alice(sr+1,er,sc,ec);
                 f1+=taba[sr+1][er][sc][ec];//+h[sr+1].read(ec+1)-h[sr+1].read(sc);
              }
              if (er-1>=0 && er-1>=sr)
              {
                 if (taba[sr][er-1][sc][ec]==-1)
                    taba[sr][er-1][sc][ec]=alice(sr,er-1,sc,ec);
                 f2+=taba[sr][er-1][sc][ec];//+h[er+1].read(ec+1)-h[er+1].read(sc);
              }
              if (sc+1<=m && sc+1<=ec)
              {
                 if (taba[sr][er][sc+1][ec]==-1)
                    taba[sr][er][sc+1][ec]=alice(sr,er,sc+1,ec);
                 f3+=taba[sr][er][sc+1][ec];//+v[sc+1].read(er+1)-v[sc+1].read(sr);
              }
              if (ec-1>=0 && ec-1>=sc)
              {
                 if (taba[sr][er][sc][ec-1]==-1)
                    taba[sr][er][sc][ec-1]=alice(sr,er,sc,ec-1);
                 f4+=taba[sr][er][sc][ec-1];//+v[ec+1].read(er+1)-v[ec+1].read(sr);
              }
              LL mx=max(max(max(f1,f2),f3),f4);
              tab[sr][er][sc][ec]=mx;
          }
          //cout<<"\t"<<mx<<"\t"<<sr<<" "<<er<<" "<<sc<<" "<<ec<<endl;
          return tab[sr][er][sc][ec];
}
int main()
{
     #ifndef ONLINE_JUDGE
     f_in("in.txt");
     f_out("out2.txt");
     #endif
     LL t,i,k,j;
     //cout<<sizeof(tab)/(1024*1024)<<endl;
     //cin>>t;//st_clk
     r_f(t);
     while (t--)
     {aa=bb=0;st_clk
           memset(tab,-1,sizeof(tab));
           memset(taba,-1,sizeof(taba));
           memset(Rsum,0,sizeof(Rsum));
           memset(Csum,0,sizeof(Csum));
           //cout<<tab[1][2][3][4]<<endl;
           aalice=0;
           cin>>n>>m;
           //htree h[55];
           //vtree v[55];
           LL x;
           FOR(i,1,n)
           FOR(j,1,m){ //cin>>mat[i][j];
           r_f(mat[i][j]);
           aalice+=mat[i][j];
          /* h[i].maxv=m;
           h[i].update(j,x);
           v[j].maxv=n;
           v[j].update(i,x);*/
           }
           FOR(i,1,n)
			FOR(j,1,m)
			Rsum[i][j]=Rsum[i][j-1]+mat[i][j];

		FOR(i,1,m)
			FOR(j,1,n)
			Csum[i][j]=Csum[i][j-1]+mat[j][i];
           //FOR(i,1,n) cout<<Csum[i][3]<<endl;
           LL ans=alice(0,n-1,0,m-1);
           if (2*ans==aalice)
              cout<<2*ans<<endl;
           else
               cout<<max(ans,aalice-ans)<<endl;
           //cout<<"\t"<<aa<<" "<<bb<<endl;
           //end_clk
           //show_time
     }

//system("pause");
return 0;
}
