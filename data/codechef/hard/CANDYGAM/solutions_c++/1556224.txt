#include<iostream>
#include<cstdio>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<bitset>
#include<map>
#include<set>
#include<climits>
#include<algorithm>
#include<utility>
#include<cstdlib>
#include<cctype>
#include<queue>
#include<sstream>
#define read(x) scanf("%d",&x)
#define write(x) printf("%lld\n",x)
#define assign(x,n) x=(int*)calloc(n,4)
#define rep(i,n) for(i=1;i<=n;++i)
#define max(a,b) ((a)>(b))?(a):(b)
typedef  long long int ull;
using namespace std;
typedef  pair<int,int> pr;
 
 
/*
0 9 9
0 6 6
0 9 6
 
50 +50+50
ans[i][j]=
 
           r1
 
c1                    c2
 
 
           r2
 
 
*/
 
 
ull row[50][50]={{0}},col[50][50]={{0}};
ull dp[50][50][50][50];
int n,m;

ull rs(int r,int c1,int c2)
{
  ull temp=row[r][c2];
  if(c1)temp-=row[r][c1-1];
  return temp;
}

ull cs(int c,int r1,int r2)
{
  ull temp=col[c][r2];
  if(r1)temp-=col[c][r1-1];
  return temp;
}
 
 
 
ull fn(int r1,int r2,int c1,int c2)
{
    if(r1>r2 || c1>c2 )return 0;
    ull minm,a,b,c,d,temp;
    int R1=r1,R2=r2,C1=c1,C2=c2;
    if(dp[r1][r2][c1][c2]!=-1)return dp[r1][r2][c1][c2];
    

   
    minm =(a =rs(r1,c1,c2));
	minm = min(b =rs(r2,c1,c2),minm);
	minm = min(c =cs(c1,r1,r2),minm);
	minm = min(d =cs(c2,r1,r2),minm);
   
    
    if(a==minm)r1+=1;
    else if(b==minm)r2-=1;
    else if(c==minm)c1+=1;
    else if(d==minm)c2-=1;
 
  if(r1>r2 || c1>c2 )return 0;
 ull sum=0;
 temp=rs(r1,c1,c2)+fn(r1+1,r2,c1,c2);
 if(temp>sum)sum=temp;
 
temp=rs(r2,c1,c2)+fn(r1,r2-1,c1,c2);
if(temp>sum)sum=temp;
 
temp=cs(c1,r1,r2)+fn(r1,r2,c1+1,c2);
if(temp>sum)sum=temp;
 
temp=cs(c2,r1,r2)+fn(r1,r2,c1,c2-1);
if(temp>sum)sum=temp;
return dp[R1][R2][C1][C2]=sum;
}
            
 
 
 
int main()
{
    int i,j,k,ele,t;
    ull sum,ans;
    read(t);
    while(t--)
    {
    read(n);read(m);
    memset(dp,-1,sizeof(dp));
    
    sum=0;
    
    
    for(i=0;i<n;i++)
    for(j=0;j<m;j++)
    {
                    read(ele);
                    sum+=ele;
                    if(j==0)row[i][j]=ele;
                    else row[i][j]=row[i][j-1]+ele;
                    
                    
                    if(i==0)col[j][i]=ele;
                    else col[j][i]=col[j][i-1]+ele;
    }
    
    ans=fn(0,n-1,0,m-1);
    if(sum-ans> ans)ans=sum-ans;
    if(ans*2==sum)ans=sum;
    write(ans); 
   }              
    
    
    
 //freopen("in.txt","r",stdin);freopen("out.txt","w",stdout);
//system("pause");
return 0;
}
