#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
int n,m;
int a[55][55];
LL hor[55][55],ver[55][55];
LL dp[55][55][55][55];
LL get(int up, int down, int left, int right) {
	if (up + down == n || left + right == m) return 0;
	LL &res = dp[up][down][left][right];
	if (res != -1) return res;
	if ((up + down + left + right) % 2 == 0) {
		LL UP = hor[up + 1][m - right] - hor[up + 1][left];
		LL DOWN = hor[n - down][m - right] - hor[n - down][left];
		LL LEFT = ver[n - down][left + 1] - ver[up][left + 1];
		LL RIGHT = ver[n - down][m - right] - ver[up][m - right];
		LL ma = min(min(UP,DOWN),min(LEFT,RIGHT));
		if (ma == UP) {
			return res = get(up + 1,down,left,right);
		} else if (ma == DOWN) {
			return res = get(up,down + 1,left,right);
		} else if (ma == LEFT) {
			return res = get(up,down,left + 1,right);
		} else {
			return res = get(up,down,left,right + 1);
		}
	}
	res = 0;
	LL UP = hor[up + 1][m - right] - hor[up + 1][left];
	res = max(res,UP + get(up + 1,down,left,right));
	LL DOWN = hor[n - down][m - right] - hor[n - down][left];
	res = max(res,DOWN + get(up,down + 1,left,right));
	LL LEFT = ver[n - down][left + 1] - ver[up][left + 1];
	res = max(res,LEFT + get(up,down,left + 1,right));
	LL RIGHT = ver[n - down][m - right] - ver[up][m - right];
	res = max(res,RIGHT + get(up,down,left,right + 1));
	return res;
}
void solve() {
	cin >> n >> m;
	LL total = 0;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			cin >> a[i][j];
			total = total + a[i][j];
		}
	}
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++) {
			hor[i][j] = hor[i][j - 1] + a[i][j];
		}
	}
	for (int j = 1; j <= m; j++) {
		for (int i = 1; i <= n; i++) {
			ver[i][j] = ver[i - 1][j] + a[i][j];
		}
	}
	memset(dp,-1,sizeof(dp));
	LL w = get(0,0,0,0);
	if (w == total - w) cout << total << endl; else 
	cout << max(w,total - w) << endl;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
}
