#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define MP make_pair
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)	
#define mod 1000000007
#define MAXN 1000010

typedef pair<int,int>   PI;
typedef vector<int> VI;
typedef long long int LL;

LL dp[52][52][52][52];
LL rSum[52][52];
LL cSum[52][52];
LL n,m;

LL collect(int a,int b,int x, int y)
{

	if(a<=0||b<=0||x<a||y<b||a>x||b>y||x>n||y>m)
		return 0LL;

	if(dp[a][b][x][y]!=-1)
		return dp[a][b][x][y];


	// Alice makes the first move
	int A=a,B=b,C=x,D=y;

	LL r1=0, r2=0, c1=0, c2=0;
	LL minm = (r1 = rSum[a][y]-rSum[a][b-1]);
	minm = min(r2=rSum[x][y]-rSum[x][b-1],minm);
	minm = min(c1=cSum[b][x]-cSum[b][a-1],minm);
	minm = min(c2=cSum[y][x]-cSum[y][a-1],minm);

	if(r1==minm) a++;
	else if(r2==minm) x--;
	else if(c1==minm) b++;
	else if(c2==minm) y--;
	

	if(a<=0||b<=0||x<a||y<b||a>x||b>y||x>n||y>m)
		return 0LL;

	LL ans=-1,temp=0,val=0;

	temp=collect(a+1,b,x,y);		//if bob picks first row of the reduced matrix
	val=rSum[a][y]-rSum[a][b-1];
	if(ans<temp+val)
		ans=temp+val;

	temp=collect(a,b,x-1,y);		//if bob picks last row
	val=rSum[x][y]-rSum[x][b-1];
	if(ans<temp+val)
		ans=temp+val;
	
	temp=collect(a,b+1,x,y);		//if bob picks first col
	val=cSum[b][x]-cSum[b][a-1];
	if(ans<temp+val)
		ans=temp+val;

	temp=collect(a,b,x,y-1);		//if bob picks the last col
	val=cSum[y][x]-cSum[y][a-1];
	if(ans<temp+val)
		ans=temp+val;

	return dp[A][B][C][D]=ans;
}

LL a[52][52],total;
int main(){

	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%lld%lld",&n,&m);

		memset(dp,-1,sizeof(dp));
		memset(rSum,0,sizeof(rSum));
		memset(cSum,0,sizeof(cSum));
		memset(a,0,sizeof(a));
		total=0;
		
		FOR(i,1,n+1)
			FOR(j,1,m+1)
			{
				scanf("%lld",&a[i][j]);
				total+=a[i][j];
			}

		FOR(i,1,n+1)
			FOR(j,1,m+1)
			rSum[i][j]=rSum[i][j-1]+a[i][j];

		FOR(i,1,m+1)
			FOR(j,1,n+1)
			cSum[i][j]=cSum[i][j-1]+a[j][i];

		LL ans=collect(1,1,n,m);
	//	printf("%lld\n",total);
		if(ans==total-ans)
			printf("%lld\n",total);
		else
			printf("%lld\n",max(total-ans,ans));
	}
	return 0;
}
