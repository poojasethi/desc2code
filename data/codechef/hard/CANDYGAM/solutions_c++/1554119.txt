#include<stdio.h>
int arr[51][51],m,n;
long long int d[51][51][51][51],a[4];
long long int row_sum[51][51],col_sum[51][51];
long long int alice_candy;
int min(int i,int j)
{
    if(a[i]<a[j])
    {
        return i;
    }
    else if(a[j]<a[i])
    {
        return j;
    }
    else
    {
        return i;
    }
}
void calc_sum()
{
    int i,j,k;
    /*for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            row_sum[i][j][j]=arr[i][j];
        }
    }
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            for(k=j+1;k<n;k++)
            {
                row_sum[i][j][k]=row_sum[i][j][k-1]+arr[i][k];
            }
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            row_col[i][j][j]=arr[j][i];
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            for(k=j+1;k<m;k++)
            {
                row_col[i][j][k]=row_col[i][j][k-1]+arr[k][i];
            }
        }
    }*/
    for(i=0;i<m;i++)
    {
        row_sum[i][0]=arr[i][0];
    }
    for(i=0;i<m;i++)
    {
        for(j=1;j<n;j++)
        {
            row_sum[i][j]=row_sum[i][j-1]+arr[i][j];
        }
    }
    for(i=0;i<n;i++)
    {
        col_sum[0][i]=arr[0][i];
    }
    for(i=0;i<n;i++)
    {
        for(j=1;j<m;j++)
        {
            col_sum[j][i]=col_sum[j-1][i]+arr[j][i];
        }
    }

}
long long int func(int turn,int li,int ui,int lj,int uj)
{
    int i,j;
    //printf("%d %d %d %d %d\n",li,ui,lj,uj,turn);
    if(d[li][ui][lj][uj]>=0 && turn==1)
    {
        //printf("%d %d %d %d %djbkjbv\n",li,ui,lj,uj,turn);
        return d[li][ui][lj][uj];
    }
    if((li==ui || lj==uj ) && turn==1)
    {
        //printf("here1\n");
        if(li==ui)
        {
            long long int sum=0;
            /*for(i=lj;i<=uj;i++)
            {
                sum+=arr[li][i];
            }*/
            //printf("%lld\n",sum);
            if(lj==0)
            {
                return row_sum[li][uj];
            }
            return row_sum[li][uj]-row_sum[li][lj-1];
        }
        else
        {
            //printf("here\n");
            long long int sum=0;
            /*for(i=li;i<=ui;i++)
            {
                sum+=arr[i][lj];
            }*/
        //printf("%lld\n",sum);
             if(li==0)
             {
                 return col_sum[ui][lj];
             }
             //printf("%lld\n",col_sum[ui][lj]-col_sum[li-1][lj]);
            return col_sum[ui][lj]-col_sum[li-1][lj];
        }
    }
    if(li>ui || lj>uj)
    {


        //printf("%d %d %d %d %d\n",turn,li,ui,lj,uj);
        return 0;
    }
    if(turn==0)
    {
        /*for(i=li;i<=ui;i++)
        {
            for(j=lj;j<=uj;j++)
            {
                printf("%d ",arr[i][j]);
            }
            printf("\n");
        }*/
        //printf("here\n");
        a[0]=0;
        /*for(i=lj;i<=uj;i++)
        {
            a[0]+=arr[li][i];
        }*/
        if(lj==0)
        {
            a[0]=row_sum[li][uj];
        }
        else
            a[0]=row_sum[li][uj]-row_sum[li][lj-1];
        a[1]=0;
        /*for(i=lj;i<=uj;i++)
        {
            a[1]+=arr[ui][i];
        }*/
        if(lj==0)
        {
            a[1]=row_sum[ui][uj];
        }
        else
            a[1]=row_sum[ui][uj]-row_sum[ui][lj-1];
        a[2]=0;
        /*for(i=li;i<=ui;i++)
        {
            a[2]+=arr[i][lj];
        }*/
        if(li==0)
        {
            a[2]=col_sum[ui][lj];
        }
        else
        a[2]=col_sum[ui][lj]-col_sum[li-1][lj];
        a[3]=0;
        /*for(i=li;i<=ui;i++)
        {
            a[3]+=arr[i][uj];
        }*/
        if(li==0)
        {
            a[3]=col_sum[ui][uj];
        }
        else
        a[3]=col_sum[ui][uj]-col_sum[li-1][uj];
        int ind=min(0,min(1,min(2,3)));
        //al+=a[ind];
        //printf("%lld\n",al);
        //printf("%d\n",ind);
        if(ind==0)
        {
            li++;
        }
        else if(ind==1)
        {
            ui--;
        }
        else if(ind==2)
        {
            lj++;
        }
        else
        {
            uj--;
        }
        turn=1;
        if(ind==0)
        {

            //printf("%d %d %d %d\n",li,ui,lj,uj);
            return d[li-1][ui][lj][uj]=func(turn,li,ui,lj,uj);
        }
       else if(ind==1)
       {
           return d[li][ui+1][lj][uj]=func(turn,li,ui,lj,uj);
       }
       else if(ind==2)
       {
           return d[li][ui][lj-1][uj]=func(turn,li,ui,lj,uj);
       }
       else if(ind==3)
       {
           return d[li][ui][lj][uj+1]=func(turn,li,ui,lj,uj);
       }

    }
    else if(turn == 1)
    {

        /*for(i=li;i<=ui;i++)
        {
            for(j=lj;j<=uj;j++)
            {
                printf("%d ",arr[i][j]);
            }
            printf("\n");
        }*/
        long long int res=0,temp;
        a[0]=0;
        for(i=lj;i<=uj;i++)
        {
            a[0]+=arr[li][i];
        }

        temp=a[0]+func(0,li+1,ui,lj,uj);
        //printf("%lld\n",temp);
        if(temp>res)
        {

            //alice_candy=al;
            //printf("here\n");
            //printf("%lld %lld\n",al,alice_candy);
            res=temp;
        }
        a[1]=0;
        for(i=lj;i<=uj;i++)
        {
            a[1]+=arr[ui][i];
        }
        temp=a[1]+func(0,li,ui-1,lj,uj);
        if(temp>res)
        {

            //alice_candy=al;
            //printf("%lld %lld\n",al,alice_candy);
            res=temp;
        }
        a[2]=0;
        for(i=li;i<=ui;i++)
        {
            a[2]+=arr[i][lj];
        }
        temp=a[2]+func(0,li,ui,lj+1,uj);
        //printf("%lld\n",al);
        if(temp>res)
        {
           // alice_candy=al;
            //printf("%lld %lld\n",al,alice_candy);
            res=temp;
        }
        a[3]=0;
        for(i=li;i<=ui;i++)
        {
            a[3]+=arr[i][uj];
        }
        temp=a[3]+func(0,li,ui,lj,uj-1);
        if(temp>res)
        {
           // alice_candy=al;
            //printf("%lld %lld\n",al,alice_candy);
            res=temp;
        }

        //printf("%lld\n",res);
        d[li][ui][lj][uj]=res;
        return res;
    }
}
int main()
{
    int t,i,j,k,l;
    scanf("%d",&t);
    while(t--)
    {
        for(i=0;i<51;i++)
        {
            for(j=i;j<51;j++)
            {
                for(k=0;k<51;k++)
                {
                    for(l=k;l<51;l++)
                    {
                        d[i][j][k][l]=-1;
                    }
                }
            }
        }
       long long int alice=0,sum=0;
        for(i=0;i<4;i++)
        {
            a[i]=0;
        }
        scanf("%d %d",&m,&n);
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                scanf("%d",&arr[i][j]);
                sum+=arr[i][j];
            }
        }
        calc_sum();
        int li,ui,lj,uj;
        li=lj=0;
        ui=m-1;
        uj=n-1;
        long long int ans=func(0,li,ui,lj,uj);
        alice_candy=sum-ans;
        //printf("%lld\n",alice_candy);
        if(ans==alice_candy)
        {
            //printf("%lld\n",alice_candy);
            printf("%lld\n",ans+alice_candy);
        }
        else if(ans>alice_candy)
            printf("%lld\n",ans);
        else
            printf("%lld\n",alice_candy);
    }
    return 0;
}
