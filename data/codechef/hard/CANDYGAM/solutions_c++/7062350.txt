#include <cstdio>
#include <iostream>
#include <string.h>
using namespace std;
#define pb push_back
//#define mp make_pair
#define line() printf("\n")
#define space() printf(" ")
typedef long long int lli;
void sc(int& a){scanf("%d",&a);}
void sc(lli& a){scanf("%lld",&a);}
void sc(int& a, int& b){sc(a);sc(b);}
void sc(int& a,int& b,int& c){sc(a);sc(b);sc(c);}
void sc(lli& a,lli& b){sc(a);sc(b);}
void sc(lli& a,lli& b,lli& c){sc(a,b);sc(c);}
void write(int a){printf("%d",a);}
void write(lli a){printf("%lld",a);}
lli mod =1000000007;
lli modpow(lli a, lli b, lli mod){lli res=1;while(b>0){if(b&1)res=(res*a)%mod;a=(a*a)%mod;b=b/2;}return res%mod;} 
int a[60][60];
lli dp[60][60][60][60],sum[60][60];

lli getsum(int l, int r, int up, int down)
{
    //if(l<0 or r<0 or up<0 or down<0) return 0;
    return sum[down][r]-sum[down][l-1]-sum[up-1][r]+sum[up-1][l-1];
}
lli func(int,int,int,int);
lli aliceturn(int l, int r, int up, int down)
{
    if(l==r and up==down) return 0;
    lli a=getsum(l,r,up,up);
    lli b=getsum(l,r,down,down);
    lli c=getsum(l,l,up,down);
    lli d=getsum(r,r,up,down);
    lli e=min(a,min(b,min(c,d)));
    //cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<endl;
    lli ans=0;
    if(e==a) ans=func(l,r,up+1,down);
    else if(e==b) ans=func(l,r,up,down-1);
    else if(e==c) ans=func(l+1,r,up,down);
    else ans=func(l,r-1,up,down);
    return ans;
}

lli func(int l, int r, int up, int down)
{
    if(l>r or up>down) return 0;
    if(l==r and up==down) return a[l][up];
    if(l==r) return dp[l][r][up][down]=getsum(l,r,up,down);
    if(up==down) return dp[l][r][up][down]=getsum(l,r,up,down);
    if(dp[l][r][up][down]!=-1) return dp[l][r][up][down];
    lli a=getsum(l,r,up,up);
    lli b=getsum(l,r,down,down);
    lli c=getsum(l,l,up,down);
    lli d=getsum(r,r,up,down);
    lli ans1=a+aliceturn(l,r,up+1,down);
    lli ans2=b+aliceturn(l,r,up,down-1);
    lli ans3=c+aliceturn(l+1,r,up,down);
    lli ans4=d+aliceturn(l,r-1,up,down);
    return dp[l][r][up][down]=max(ans1,max(ans2,max(ans3,ans4)));
}

int main()
{  
    int t,n,m,i,j;
    sc(t);
    while(t--)
    {
        sc(n,m);
        memset(dp,-1,sizeof dp);
        memset(sum,0,sizeof sum);
        for(i=1;i<=n;i++)
            for(j=1;j<=m;j++)
            {
                sc(a[i][j]);
                sum[i][j]=sum[i][j-1]+sum[i-1][j]-sum[i-1][j-1]+a[i][j];
            }
        lli bob=aliceturn(1,m,1,n);
        lli alice=sum[n][m]-bob;
        if(bob>alice) printf("%lld\n",bob);
        else if(alice>bob) printf("%lld\n",alice);
        else printf("%lld\n",2*bob);
    }
}