#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
LL dp[55][55][55][55];
LL rsum[55][55];
LL csum[55][55];
int a[55][55];
int n,m;
LL func(int a,int b,int x,int y)
{
if(a<=0||b<=0||x<a||y<b||a>x||b>y||x>n||y>m)
return 0LL;
if(dp[a][b][x][y]!=-1)
return dp[a][b][x][y];
int A=a,B=b,C=x,D=y;
LL r1=0,r2=0,c1=0,c2=0;
r1=rsum[a][y]-rsum[a][b-1];
r2=rsum[x][y]-rsum[x][b-1];
c1=csum[b][x]-csum[b][a-1];
c2=csum[y][x]-csum[y][a-1];
LL mini=min(r1,min(r2,min(c1,c2)));
if(r1==mini)
a++;
else if(r2==mini)
x--;
else if(c1==mini)
b++;
else
y--;
if(a<=0||b<=0||x<a||y<b||a>x||b>y||x>n||y>m)
return 0LL;
LL temp,val;
LL ans=-1;
temp=func(a+1,b,x,y);
val=temp+rsum[a][y]-rsum[a][b-1];
if(ans<val)
ans=val;
temp=func(a,b,x-1,y);
val=temp+rsum[x][y]-rsum[x][b-1];
if(ans<val)
ans=val;
temp=func(a,b+1,x,y);
val=temp+csum[b][x]-csum[b][a-1];
if(ans<val)
ans=val;
temp=func(a,b,x,y-1);
val=temp+csum[y][x]-csum[y][a-1];
if(ans<val)
ans=val;
dp[A][B][C][D]=ans;
return dp[A][B][C][D];
}

int main()
{
int t;
scanf("%d",&t);
while(t--)
{
memset(dp,-1,sizeof dp);
memset(rsum,0,sizeof rsum);
memset(csum,0,sizeof csum);
scanf("%d%d",&n,&m);
LL total=0;
for(int i=1;i<=n;i++)
{
for(int j=1;j<=m;j++)
{
scanf("%d",&a[i][j]);
total+=a[i][j];
}
}
for(int i=1;i<=n;i++)
{
for(int j=1;j<=m;j++)
{
rsum[i][j]=rsum[i][j-1]+a[i][j];
}
}
for(int i=1;i<=m;i++)
{
for(int j=1;j<=n;j++)
{
csum[i][j]=csum[i][j-1]+a[j][i];
}
}
LL ans=func(1,1,n,m);
LL temp=total-ans;
if(temp==ans)
printf("%lld\n",total);
else
printf("%lld\n",max(temp,ans));
}
return 0;
}