#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
#include <cstring>
#define maxn 100005
#define maxK 550005
using namespace std;

int n,K;
int a[maxn],ret[maxK],num = 0;

int main() {
  scanf("%d %d", &n, &K);
  for (int i = 0; i < n; i++) scanf("%d", &a[i]);
  sort(a,a + n);

  int low = 0,high = 31;
  while (low < high) {
    int mid = (low + high)/2;
    int mask = (1 << 31) - (1 << mid);
    int cnt = 1;
    long long total = 0;

    for (int i = 1; i < n; i++)
      if ((a[i] & mask) == (a[i - 1] & mask)) cnt++; else {
        total += 1LL * cnt * (cnt - 1)/2;
	cnt = 1;
      }

    total += 1LL * cnt * (cnt - 1)/2;
    if (total >= K) high = mid; else low = mid + 1;
  }
  if (high <= 0) {
    for (int i = 0; i < K; i++) printf("0 ");
    return 0;
  }

  int mask = (1 << 31) - (1 << high);
  for (int start = 0; start < n; ) {
    int end = start + 1;
    while (end < n && (a[end] & mask) == (a[start] & mask)) end++;
    for (int i = start; i < end; i++)
      for (int j = i + 1; j < end; j++) ret[num++] = a[i] ^ a[j];
    start = end;
  }
  sort(ret,ret + num);
  for (int i = 0; i < K; i++) printf("%d ", ret[i]);
}