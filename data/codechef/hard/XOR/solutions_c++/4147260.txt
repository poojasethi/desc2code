#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

int A[100005], ctos, quiere;
int L[3200000][2], E[3200000], T[3200000], hay=1, va, tiene, mtiene, cual, estan=0;
int UU[250005], DD[250005], R[500005], *U=UU, *D=DD, emp, ter;
long long son;

int main()
{
    scanf("%d%d",&ctos,&quiere);
    for(int i=1; i<=ctos; i++)
        scanf("%d",&A[i]);
    sort(A+1, A+ctos+1);
    E[1]=1;
    T[1]=ctos;
    for(int i=1; i<=ctos; i++){
        va=1;
        for(int e=30; e>=0; e--){
            if(A[i]&(1<<e)){
                if(L[va][1]==0){
                    ++hay;
                    L[va][1]=hay;
                    va=hay;
                    E[va]=i;
                    T[va]=i;
                }
                else {
                    va=L[va][1];
                    T[va]=i;
                }
            }
            else {
                if(L[va][0]==0){
                    ++hay;
                    L[va][0]=hay;
                    va=hay;
                    E[va]=i;
                    T[va]=i;
                }
                else {
                    va=L[va][0];
                    T[va]=i;
                }
            }
        }
    }
    son=1LL*ctos*ctos;
    tiene=1;
    U[1]=1;
    for(int v=1; v<32 and son>quiere*2; v++){
        mtiene=tiene;
        tiene=0;
        son=0;
        for(int i=1; i<=mtiene; i++){
            cual=L[U[i]][0];
            if(cual>0 and T[cual]!=E[cual]){
                ++tiene;
                D[tiene]=cual;
                son=son+1LL*(T[cual]-E[cual])*(T[cual]-E[cual]+1)/2;
            }

            cual=L[U[i]][1];
            if(cual>0 and T[cual]!=E[cual]){
                ++tiene;
                D[tiene]=cual;
                son=son+1LL*(T[cual]-E[cual])*(T[cual]-E[cual]+1)/2;
            }
        }
        swap(U, D);
    }
    if(son>quiere*2){
        for(int i=1; i<=quiere; i++)
            printf("0 ");
        printf("\n");
        return 0;
    }
    for(int i=1; i<=tiene; i++){
        emp=E[U[i]];
        ter=T[U[i]];
        for(int a=emp; a<ter; a++){
            for(int b=a+1; b<=ter; b++){
                ++estan;
                R[estan]=A[a]^A[b];
            }
        }
    }
    sort(R+1, R+estan+1);
    for(int i=1; i<=quiere; i++)
        printf("%d ",R[i]);
    printf("\n");
    return 0;
}
