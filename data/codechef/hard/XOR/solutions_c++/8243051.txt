# include <bits/stdc++.h>

# define INF 0xffffffff
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned long long int 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked
# define tri pair < LL,PL >
# define TRI(a,b,c) mp(a,mp(b,c))
# define ms(A,val) memset(A,val,sizeof(A))

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

using namespace std;

int debug=1;
const int N=2e5+3;

/* MAIN PROGRAM STARTS HERE */

static int A[N];

int main()
	{
	//freopen("TC1.txt","r",stdin);
	//freopen("outpaut1","w",stdout);
	//ios_base::sync_with_stdio(0);
	//cin.tie(0);
	int T;
	int i,j,x,y,z,p,q,n,a,b,k;
	
	cin>>n>>k;

    REP (i,n) scanf("%d",A+i);
    sort(A,A+n);

	int l=0,r=31;
    
    while (l<r)
          {
          int mid=(l+r)>>1;
          LL sum=0LL;
          for (i=1,j=1; i<n; i++)
              {
              if ((A[i]^A[i-1])<(1<<mid)) j++;
              else 
                   {
                   sum+=(LL)(j*(j-1))/2;
                   j=1;
                   }
              }
          sum+=(LL)(j*(j-1))/2;
          //trace2(sum,j);
          if (sum>=k) r=mid;
          else l=mid+1;
          }
    if (r==0)
       {
       REP (i,k) printf("0 ");   
       }
    else
        {
        vector <int> V;
        //trace1(r);
        for (i=1,j=0; i<n; i++)
            {
            if ((A[i]^A[i-1])<(1<<r))
               for (p=j; p<i; p++)
                   V.pb(A[i]^A[p]);  
            else j=i;
            }
    
        partial_sort(V.begin(),V.begin()+k,V.end());
    
        REP (i,k) printf("%d ",V[i]);    
        }

    return 0;
	}