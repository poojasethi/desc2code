#include<stdio.h>
#include<algorithm>
using namespace std;
#define maxn 888888
int n,k,i,j,l[2][maxn],r[2][maxn],R[2][maxn],L[2][maxn],a[maxn],j1,j2,m,cl,cc,sn,bit,sn2,mid[2][maxn],Mid[2][maxn],ans[maxn],an,rn,wn,ou[62];
pair<int,int>rep[maxn];
long long xx,yy,k0;
inline int read(){
	int fla=0,ch,ret=0;while(1){
		ch=getchar_unlocked();if(ch<33)if(fla)return ret;else continue;
		ret=10*ret+ch-'0';fla=1;
	}
}
inline void write(int x){
	if(!x)putchar_unlocked('0');else{
		wn=0;while(x){ou[++wn]=x%10;x/=10;}
		for(j=1;j<=wn;j++)putchar_unlocked('0'+ou[wn-j+1]);
	}
}
inline int getm(int le,int ri,int bit){for(int i=le;i<=ri;i++)if(a[i]&(1<<bit))return i;return ri+1;}
int main(){
//	freopen("in.txt","r",stdin);
//	freopen("out.txt","w",stdout);
	scanf("%d%d",&n,&k);m=k;
	while(n<2||n>100000||k<1||k>250000);
	for(i=1;i<=n;i++){a[i]=read();while(a[i]<0);}
	sort(a+1,a+n+1);cl=0;l[0][1]=1;r[0][1]=n;cc=0;sn=1;
	for(bit=30;bit+1;bit--){
		if(!cc){
			k0=0;sn2=0;
			for(i=1;i<=sn;i++){
				mid[cl][i]=getm(l[cl][i],r[cl][i],bit);
				xx=mid[cl][i]-l[cl][i];k0+=(xx*(xx-1))>>1;
				xx=r[cl][i]-mid[cl][i]+1;k0+=(xx*(xx-1))>>1;
			}
			for(i=1;i<=sn;i++){				
				if(k0>=k){
					if(l[cl][i]<mid[cl][i]){l[cl^1][++sn2]=l[cl][i];r[cl^1][sn2]=mid[cl][i]-1;}
					if(mid[cl][i]<=r[cl][i]){l[cl^1][++sn2]=mid[cl][i];r[cl^1][sn2]=r[cl][i];}
				}else{
					for(j1=l[cl][i];j1<mid[cl][i];j1++)for(j2=l[cl][i];j2<j1;j2++)ans[++an]=a[j1]^a[j2];
					for(j1=mid[cl][i];j1<=r[cl][i];j1++)for(j2=mid[cl][i];j2<j1;j2++)ans[++an]=a[j1]^a[j2];
					if(l[cl][i]<mid[cl][i]&&mid[cl][i]<=r[cl][i]){
						l[cl^1][++sn2]=l[cl][i];r[cl^1][sn2]=mid[cl][i]-1;
						L[cl^1][sn2]=mid[cl][i];R[cl^1][sn2]=r[cl][i];
					}
				}
			}
			if(k0<k){cc=1;k-=k0;}cl^=1;sn=sn2;
		}else{
			k0=0;sn2=0;
			for(i=1;i<=sn;i++){
				mid[cl][i]=getm(l[cl][i],r[cl][i],bit);Mid[cl][i]=getm(L[cl][i],R[cl][i],bit);
				xx=mid[cl][i]-l[cl][i];yy=Mid[cl][i]-L[cl][i];k0+=xx*yy;
				xx=r[cl][i]-mid[cl][i]+1;yy=R[cl][i]-Mid[cl][i]+1;k0+=xx*yy;
			}
			for(i=1;i<=sn;i++){
				if(k0>=k){
					if(l[cl][i]<mid[cl][i]&&L[cl][i]<Mid[cl][i]){
						l[cl^1][++sn2]=l[cl][i];r[cl^1][sn2]=mid[cl][i]-1;
						L[cl^1][sn2]=L[cl][i];R[cl^1][sn2]=Mid[cl][i]-1;
					}
					if(mid[cl][i]<=r[cl][i]&&Mid[cl][i]<=R[cl][i]){
						l[cl^1][++sn2]=mid[cl][i];r[cl^1][sn2]=r[cl][i];
						L[cl^1][sn2]=Mid[cl][i];R[cl^1][sn2]=R[cl][i];
					}
				}else{
					for(j1=l[cl][i];j1<mid[cl][i];j1++)for(j2=L[cl][i];j2<Mid[cl][i];j2++)ans[++an]=a[j1]^a[j2];
					for(j1=mid[cl][i];j1<=r[cl][i];j1++)for(j2=Mid[cl][i];j2<=R[cl][i];j2++)ans[++an]=a[j1]^a[j2];
					if(l[cl][i]<mid[cl][i]&&Mid[cl][i]<=R[cl][i]){
						l[cl^1][++sn2]=l[cl][i];r[cl^1][sn2]=mid[cl][i]-1;
						L[cl^1][sn2]=Mid[cl][i];R[cl^1][sn2]=R[cl][i];
					}
					if(mid[cl][i]<=r[cl][i]&&L[cl][i]<Mid[cl][i]){
						l[cl^1][++sn2]=mid[cl][i];r[cl^1][sn2]=r[cl][i];
						L[cl^1][sn2]=L[cl][i];R[cl^1][sn2]=Mid[cl][i]-1;
					}
				}
			}
			if(k0<k)k-=k0;cl^=1;sn=sn2;
		}
	}
	if(!cc)an=k;else{
		for(i=1;i<=sn;i++)rep[i].first=a[l[cl][i]]^a[L[cl][i]],rep[i].second=(r[cl][i]-l[cl][i]+1ll)*(R[cl][i]-L[cl][i]+1LL);
		sort(rep+1,rep+sn+1);
		for(i=1;i<=sn;i++)while(rep[i].second&&an<m){ans[++an]=rep[i].first;--rep[i].second;}
	}
	sort(ans+1,ans+an+1);
	for(i=1;i<m;i++){write(ans[i]);putchar_unlocked(' ');}
	printf("%d\n",ans[m]);
	return 0;
}