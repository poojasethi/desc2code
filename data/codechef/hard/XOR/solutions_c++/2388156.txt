#include <stdio.h>
#include <algorithm>

int main(){
  int n, k, A[100000], xors[600000], i, lo = 0, hi = 31;
  scanf("%d %d", &n, &k);
  for (i = 0; i < n; i++) scanf("%d", &A[i]);
  std::sort(A, A + n);
  while(lo < hi){
    long long tot = 0, cnt = 1;
    int mid = (hi + lo)/2;
    int mask = (1<<31)-(1<<mid);
    for (i = 1; i < n; i++){
      if ((A[i-1]&mask) == (A[i]&mask)) cnt++;
      else{
        tot += (cnt*(cnt-1))>>1;
        cnt = 1;
      }
    }
    tot += (cnt*(cnt-1))>>1;
    if (tot >= k) hi = mid; else lo = mid + 1;
  }
  if (hi == 0){
    for (int j = 0; j < k; j++) printf("0 ");
    return 0;
  }
  int start = 0, end = 1, mask = (1<<31)-(1<<hi), cnt = 0, j;
  while(start < n){
    while(end < n && (A[start]&mask) == (A[end]&mask)) end++; 
    for (i = start; i < end; i++) for (j = i+1; j < end; j++) xors[cnt++] = A[i]^A[j];
    start = end++;
  }
  std::sort(xors, xors + cnt);
  for (i = 0; i < k; i++) printf("%d ",xors[i]);
  return 0;
}