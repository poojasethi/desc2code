#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);
typedef long long LL;


LL com[100010];
LL inv[100010];
LL mod=1000000007;
int mp[100010];
int K;


void ini()
{
    LL i,p=mod;
    inv[1] = 1;
    for (i=2; i<=100003; ++i)
    {
        inv[i] = (p - (p/i) * inv[p%i] % p) % p;
    }
}





void ini1()
{
    LL i,p=mod;


    memset(com,0,sizeof(com));
    com[1]=K;
    LL j;



    j=K-1;
    for (i=2; i<=K;i++)
    {
        com[i]=(com[i-1]* j)%mod;
        com[i]=(com[i]* inv[i] )%mod;
        j--;
    }
}






queue<pair<int,int> > q;
int pre[100010];
int post[100010];





int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);


    int T,cs,i,j,n;
    ini();


	LL ans;

    scanf("%d",&T);


    for(cs=1;cs<=T;cs++)
    {
        scanf("%d %d",&n,&K);

        ini1();


        for(i=0;i<n;i++)
        {
            scanf("%d",&pre[i]);
        }


        for(i=0;i<n;i++)
        {
            scanf("%d",&post[i]);
            mp[post[i]]=i;
        }



		if(pre[0] !=post[n-1])
		{
			ans=0;
			goto last;
		}




        q.push(make_pair(1,n-1));
		q.push(make_pair(0,n-2));




		int prei,prej;


        ans=1;





        while(!q.empty())
        {
            pair<int,int> f1=q.front();q.pop();
			pair<int,int> f2=q.front();q.pop();

			if(f1.first>f1.second) continue;




			prei=f1.first;
			prej=f2.first;



            int cnt=0;

			for(;; )
            {
                j=mp[ pre[ prei ] ];


				if(j>=prej && j<=f2.second)
				{
					;
				}
				else
				{
					ans=0;
					goto last;
				}

				i=prei+(j-prej);


				cnt++;








                q.push( make_pair(prei+1,i) );
                q.push( make_pair(prej,j-1) );

				prei=i+1;
				prej=j+1;

				if(prei>f1.second) break;
            }



            ans=(ans*com[cnt])%mod;


        }



		last:


        printf("%lld\n",ans);





    }

    return 0;
}
