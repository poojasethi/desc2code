//Template

// By Anudeep :)
//Includes
#include <vector> 
#include <queue>
#include <map> 
#include <set>
#include <utility> //Pair
#include <algorithm>
#include <sstream> // istringstream>> ostring stream<<
#include <iostream> 
#include <iomanip> 
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;

//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vs;
typedef pair< int ,int > pii;
typedef vector <ll> vll;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end() 
#define ESP (1e-9)
#define N 222222
#define M 1000000007

int preorder[N],postorder[N],n,wer[N];
int f[N],inf[N],I[N],ans,sk;
int C(int n,int r) {
	if(r>n) return 0;
	return ((1LL*f[n]*inf[n-r])%M)*inf[r]%M;
}
void construct(int i1,int j1,int i2,int j2) {
    int root = preorder[i1];
    if(postorder[j2]!=root) { ans=0; return; }
    if(i1==j1) return;
    int cnt=0;
    for(int i=i1+1,j=i2;i<=j1;) {
    	int cur = preorder[i];
    	int w = wer[cur];
    	if(w<j || w>=j2) { ans=0; return; }
    	construct(i,i+w-j,j,w);
    	i = i+w-j+1;
    	j = w+1;
    	cnt++;
    }
    ans = ans*ll(C(sk,cnt))%M;
}

void solve() {
	ans = 1;
	scanf("%d%d",&n,&sk);
	rep(i,n) scanf("%d",&preorder[i+1]);
	rep(i,n) scanf("%d",&postorder[i+1]),wer[postorder[i+1]]=i+1;
	construct(1,n,1,n);
	printf("%d\n",(int)ans);
}

int main() {
	f[0] = I[0] = inf[0] = 1;
	f[1] = I[1] = inf[1] = 1;
	for(int i=2;i<N;i++) {
		f[i] = ll(i)*f[i-1]%M;
		I[i] = ll(I[M%i]) * (M-M/i)%M;
		inf[i] = (ll(inf[i-1]) * I[i]) % M;
	}
	int t; scanf("%d",&t); while(t--) solve();
	return 0;
}