#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<string>
#include<iterator>
#include<string>
#include<sstream>
#include<cassert>
#include<ctime>
#include<cmath>

#define MP make_pair
#define PB push_back
#define X first
#define Y second
#define oo 2000000000
#define MOD 1000000007
#define LL long long int
#define PII pair<int,int>
#define DEBUG 0

#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

using namespace std;

int fact[100005] = {1,1} , mfact[100005] = {1,1} ,mi[100005] = {0,1};
int ar[100005],br[100005],fa[100005],fb[100005];
int K;
int binom(int n,int r){
    if(r>n) return 0;
    if(r == 0 || r == n) return 1;
    return ( ((LL)fact[n]*mfact[r])%MOD * (LL)mfact[n-r])%MOD;
}
int idx=0;
int dfs(int i1,int j1,int i2,int j2){
    if(i1>j1 or i2>j2) return 0;
    if(i1==j1 and i2==j2) return ar[i1]==br[i2];
    if(ar[i1] != br[j2]) return 0;
    int ways = 1;
    int i = i1 + 1,ch, p = i2,c=0;
    while(i <= j1){
        if(fb[ar[i]]<i2 or fb[ar[i]]>j2) return 0;
        ch = fb[ar[i]] - p;++c;
        if(c > K) return 0;
        ways = (ways*1LL*dfs(i,i+ch,fb[ar[i]]-ch,fb[ar[i]]))%MOD;
        if(ways == 0) return 0;
        p = fb[ar[i]]+1;
        i = i+ch+1;
    }
    if(i <= j1 or p != j2) return 0;
    return (binom(K,c)*1LL*ways)%MOD;
}
int main(){
    for(int i=2;i<100005;i++){
        fact[i] = ((long long) fact[i-1]*i)%MOD;
        mi[i] = ((long long)mi[MOD%i]*(MOD - MOD/i))%MOD;
        mfact[i] = ((long long)mfact[i-1]*mi[i])%MOD;
    }
    int T,N;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d",&N,&K);
        for(int i=0;i<N;i++) fa[i]=fb[i]=-1;
        for(int i=0;i<N;i++) scanf("%d",&ar[i]), fa[ar[i]]=i;
        for(int i=0;i<N;i++) scanf("%d",&br[i]), fb[br[i]]=i;
        idx=0;
        printf("%d\n", dfs(0,N-1,0,N-1));
    }
    return 0;
}
