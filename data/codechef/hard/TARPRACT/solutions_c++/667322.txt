#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <cmath>
#include <algorithm>
#include <sstream>
#include <stack>
#include <cstring>
#include <iomanip>
using namespace std;
#define pb push_back
#define INF 1000000000
#define FOR(i,n) for(int (i)=0;(i)<(n);++(i))
#define FORI(i,n) for(int (i)=1;(i)<=(n);++(i))
#define mp make_pair
#define pii pair<int,int>
#define ll long long
#define vi vector<int>
#define SZ(x) ((int)(x.size()))
#define fi first
#define se second
#define wez(n) int (n); scanf("%d",&(n));
#define wez2(n,m) int (n),(m); scanf("%d %d",&(n),&(m));
#define wez3(n,m,k) int (n),(m),(k); scanf("%d %d %d",&(n),&(m),&(k));
inline void pisz(int n) { printf("%d\n",n); }
template<typename T,typename TT> ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream& operator<<(ostream &s,vector<T> t){FOR(i,SZ(t))s<<t[i]<<" ";return s; }
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<(vari)<<endl;
#define ALL(t) t.begin(),t.end()
#define FOREACH(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define TESTS wez(testow)while(testow--)
#define REP(i,a,b) for(int (i)=(a);(i)<=(b);++i)
#define REPD(i,a,b) for(int (i)=(a); (i)>=(b);--i)
#define REMAX(a,b) (a)=max((a),(b));
#define REMIN(a,b) (a)=min((a),(b));

#define ld double
ld l,s,r, cache[1<<18];
int n;

/*inline int remove (int mask, int bit) {
   return mask & (~(1 << bit));
}*/

ld opt (int mask) {
   if (cache[mask] != -1) return cache[mask];
   ld mi = INF;

   vector<bool> setbits(n,0);
   int b = 1;
   FOR(i,n) {
      if (b & mask) setbits[i] = 1;
      //else setbits[i] = 0;
      b <<= 1;
   }

   bool byla1 = 0;
   int ind = -1;
   FOR(i,n) {
      if (i != 0 && setbits[i-1] == 0 && setbits[i] == 0 && i != n-1 && setbits[i+1] == 1 && byla1) {
         ind = i;
         break;
      }
      if (setbits[i]) byla1 = 1;
   }
   if (ind != -1) {
      int mask1 = ((1<<(ind-1)) - 1) & mask,
      mask2 = ((1<<n) - (1<<ind)) & mask;
            //DBG(mask)    DBG(ind)      DBG(mask1)      DBG(mask2)
      return cache[mask] = opt(mask1) + opt(mask2);
   }

   vector<bool> go(n,0);
   if (setbits[0]) go[0] = go[1] = 1;
   REP(i,1,n-2) if (setbits[i]) go[i-1]=go[i]=go[i+1]=1;
   if (setbits[n-1]) go[n-2]=go[n-1]=1;

   FOR(i,n) if (go[i]) {
      // strzelamy w i-ty cel
      ld pudlo = 0, expe = 1;
      if (i == 0 || !setbits[i-1]) {
         pudlo += l;
      } else {
         expe += l * opt(mask & (~(1 << (i-1))));
      }
      if (i == n-1 || !setbits[i+1]) {
         pudlo += r;
      } else {
         expe += r * opt(mask & (~(1 << (i+1))));
      }
      if (!setbits[i]) {
         pudlo += s;
      } else {
         expe += s * opt(mask & (~(1 << i)));
      }
      mi = min(mi, expe/(1-pudlo));
   }
   return cache[mask] = mi;
}


int main () {
   TESTS {
      scanf("%d",&n);
      wez3(_l,_s,_r)
      l = _l/100.0, r = _r/100.0, s = _s/100.0;
      FOR(i,(1<<n)) cache[i] = -1;
      cache[0] = 0;
      ld ans = ((n==1) ? 1/s : opt((1<<n)-1));
      //ld ans = opt((1<<n) - 1);
      printf("%.6lf\n",ans);
   }
}
