#include<iostream>
#include<cstdio>
#include<memory.h>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<string>
#include<map>
#include<cstring>
#include<vector>
#include<queue>
#include<stack>
#include<assert.h>
#include<set>
#include<deque>
#include<climits>
#include<utility>

using namespace std;

#define lc(i) (i<<1)
#define rc(i) ((i<<1)+1)
#define iscan(n) scanf("%d",&n)
#define llscan(n) scanf("%lld",&n)
#define lfscan(n) scanf("%lf",&n)
#define cscan(n) scanf("%c",&n)
#define sscan(n) scanf("%s",n)
#define FOR(i,a,b) for(i=a;i<b;++i)
#define MP(a,b) make_pair(a,b)
#define PB(a) push_back(a)
#define LL long long
#define _MAX 10000
#define FILL(a,x) memset(a,x,sizeof a)
#define REP(i,n) for(i=0;i<n;++i)
#define EPS (1e-7)


double pl,pc,pr;
double dp[1<<20];

double expected(int n, int msk)
{
//	cout<<n<<" "<<msk<<endl;
	int i;
	if(msk == (1<<n)-1)	//all bits set ..
		return 0;
	if(dp[msk] > -0.1)
		return dp[msk];
	for(i=0;(msk&(1<<i));++i);
	int l;
	for(l=n-1;(msk&(1<<l));--l);
	for(;i<l-1;++i)
		if((1<<i)&msk && (1<<(i+1))&msk)
			return dp[msk] = expected(n,msk | ((1<<n) - (1<<(i+1)))) + expected(n,msk | ((1<<i)-1));

	double pf; // prob that the shot is useless
	double tmp,ret = 100000.00;
	for(i=0;i<n;++i)
	{
		pf = 0;
		tmp = 1.0;
		if(msk & (1<<i))
			pf += pc;
		else
			tmp += pc*expected(n,msk|(1<<i));
		if(!i)
			pf += pr;
		else if(msk & (1<<(i-1)))
			pf += pr;
		else	tmp += pr*expected(n,msk|(1<<(i-1)));
		if(i == n-1)
			pf += pl;
		else if(msk & (1<<(i+1)))
			pf += pl;
		else	tmp += pl*expected(n,msk|(1<<(i+1)));

		if(pf<=1-EPS)
		{
			tmp/=(1.0-pf);
			if(tmp < ret)
				ret = tmp;
		}
	//	cout<<ret<<endl;
	}
	return dp[msk] = ret;
}

int main()
{
	int T,i,j,k;
	int n;
	iscan(T);
	while(T--)
	{
		iscan(n);
		//REP(j,n+1) 
		REP(i,(1<<n)) dp[i]=-1.0;
		lfscan(pl);
		lfscan(pc);
		lfscan(pr);
		pl/=100.0;
		pc/=100.0;
		pr/=100.0;
	//	char bit[n];
	//	memset(bit,0,n);
		printf("%.6lf\n",expected(n,0));
	}
	return 0;
}
