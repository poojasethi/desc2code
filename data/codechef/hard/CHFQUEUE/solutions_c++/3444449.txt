#include <bits/stdc++.h>
#define dosya(s) freopen(s".gir","r",stdin); freopen(s".cik","w",stdout); 
#define FP( ii,aa,bb ) for( ll ii = aa; ii <= bb; ii++ )
#define FM( ii,aa,bb ) for( ll ii = aa; ii >= bb; ii-- )
#define st first
#define nd second
#define MAXN 1000005
#define MAXK 100005
#define mod 1000000007
#define sol pos*2
#define sag pos*2+1

using namespace std;

typedef pair<int,int> pii;
typedef long long ll; 

ll N,K,res(1),temp;
ll A[MAXN],D[MAXN],C[MAXN];
ll seg[4*MAXN];

void init( ll pos,ll bas,ll son )
{
	if( bas == son ) { seg[pos] = N+1; return; }

	ll orta = ( bas+son ) / 2;

	init( sol,bas,orta );
	init( sag,orta+1,son );

	seg[pos] = seg[sol];
}

inline void update( ll pos,ll bas,ll son,ll yer,ll val )
{
	if( bas > yer || son < yer ) return;
	if( bas == son ) { seg[pos] = val; return; }

	ll orta = ( bas+son ) / 2;

	update( sol,bas,orta,yer,val );
	update( sag,orta+1,son,yer,val );

	seg[pos] = min( seg[sol],seg[sag] );
}

inline ll find( ll pos,ll bas,ll son,ll s,ll e )
{
	if( bas > e || son < s ) return N+1;
	if( s <= bas && e >= son ) return seg[pos];

	ll orta = ( bas+son ) / 2;

	return min( find( sol,bas,orta,s,e ) , find( sag,orta+1,son,s,e ) );
}

int main()
{
	cin >> N >> K;

	FP( i,1,N )
		scanf("%lld",&A[i]);

	FP( i,1,N )
		C[ A[i] ]++;

	FP( i,1,1000000 )
		if( C[i] )
			D[i] = ++temp;

	FP( i,1,N )
		A[i] = D[ A[i] ];

	init( 1,1,K );

	FM( i,N,1 )
	{
		update( 1,1,K,A[i],i );
		if( A[i] == 1 ) continue;

		temp = find( 1,1,K,1,A[i]-1 );
		if( temp != N+1 )
		{
			res *= ( temp-i+1 );
			res %= mod;
		}
	}

	cout << res << endl;
}
