#include <bits/stdc++.h>
using namespace std;

//#pragma comment (linker, "/STACK:256000000")
#define MOD 1000000000
#define MEMSET_INF 127 // about 2B
#define NUM 1000000
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define fileout freopen("out.txt","w",stdout);
#define boost  ios_base::sync_with_stdio(false);
#define set0(a) memset(a,0,sizeof(a))
#define setminus1(a) memset(a,-1,sizeof(a))
#define setinf(a) memset(a,MEMSET_INF,sizeof(a))
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define pdn(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%d",&n)
#define pn printf("\n")
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef set<int> si;
typedef map<string, int> msi;
typedef map<int, int> mii;
typedef set<int> si;
typedef set< pair<int,int> > spii;
typedef queue < pair<int,int> > qpii;
typedef queue < int > qi;
typedef long long int ll;
const int MOD7 = 1e9+7;
const int MOD9 = 1e9+9;

ll gcd(ll a , ll b){return b==0?a:gcd(b,a%b);}
int toint(const string &s) { stringstream ss; ss << s; int x; ss >> x; return x; }
ll mpow(ll a, ll n,int mod) 
{
	ll ret=1;
	ll b=a;
	while(n) 
	{
		if(n&1) 
    		ret=(ret*b)%mod;
    	b=(b*b)%mod;
    	n>>=1;
    }
	return (ll)ret;
}

//#define localtest 
//#define morethanonetestcase 

struct cmp
{
    bool operator()(pair < pair<int,int> , int> a,pair < pair<int,int> , int> b)
	{
		if( a.first.first < b.first.first)
	    	return true;
		else if ( a.first.first == b.first.first)
			return a.first.second < b.first.second;
		return false;
	}
};

/* Aag ka dariya hai , doob ke jana hai :P */
// vabs

set<ll> end;
set<ll> :: iterator it;
map< pair<ll,ll> , ll> hashm;
map < ll,ll> tot;
vector < pair < pair<ll,ll>,pair<ll,ll> > >v;
int main()
{
	int tc;
	#ifdef localtest
		freopen("inp.txt","r",stdin);
	#endif

	#ifdef morethanonetestcase
		scanf("%d",&tc);
	#else
		tc = 1;
	#endif
	
	ll i,m,k,v1,v2;
	ll layer,val,n,l,l1,l2;
	while(tc--)
	{
		scanf("%lld%lld%lld",&n,&m,&k);
		rep(i,k)
		{
			scanf("%lld%lld%lld%lld",&l1,&v1,&l2,&v2);
			v.pb(mp(mp(l1,v1),mp(l2,v2)));
		}
		hashm[mp(n+1,0)] = 1;
		tot[n+1] = 1;
		end.insert(n+1);
		sort(v.begin(),v.end());
		rep(i,k)
		{
			l1 = v[k-1-i].F.F;
			v1 = v[k-1-i].F.S;
			l2 = v[k-1-i].S.F;
			v2 = v[k-1-i].S.S;
			
			if( !tot.count(l1))
			{
				it = end.upper_bound(l1);
				layer = *(it);
				if(l1>0)
					val = ( tot[layer] * mpow(m, layer - l1 ,MOD7) )%MOD7; 
				else
					val = ( tot[layer] * mpow(m, layer - l1 -1 ,MOD7) )%MOD7; 
				tot[l1] = val;
				end.insert(l1);
				//trace1(tot[l1]);
			}
			
			if(!hashm.count(mp(l1,v1)))
			{
				it = end.upper_bound(l1);
				layer = *(it);
				val = ( tot[layer] * mpow(m, layer - l1 -1 ,MOD7) )%MOD7;
				hashm[mp(l1,v1)] = val; 
				//trace2(l1,val);
			}

			if(!hashm.count(mp(l2,v2)))
			{
				it = end.upper_bound(l2);
				layer = *(it);
				val = ( tot[layer] * mpow(m, layer - l2 -1 ,MOD7) )%MOD7; 
				hashm[mp(l2,v2)] = val;
				//trace2(l2,val);

			}
			hashm[mp(l1,v1)] = (hashm[mp(l1,v1)] + hashm[mp(l2,v2)])%MOD7;
			tot[l1] = (tot[l1] + hashm[mp(l2,v2)])%MOD7;
			//trace3(hashm[mp(l1,v1)],tot[l1],l1);
		}
		if(!tot.count(0))
		{
			it = end.upper_bound(0);
			layer = *(it);
			val = (tot[layer] * mpow(m,layer-1,MOD7) )%MOD7; 
		}
		else
			val = tot[0];

		pln(val);
		hashm.clear();
		tot.clear();
		end.clear();
		v.clear();

	}
	return 0;
}
