#include<cstdio>
#include<cstring>
#define ll unsigned long long
#define N 10005
const ll oo=100000000000007ll;
int t,n,x,y,son[N],next[N],data[N],K[N];
ll C[N],M[N],g[N],ans[N];
inline int min(int a,int b){return a<b?a:b;}
int main()
{
scanf("%d",&t);
for (int i=1;i<=t;i++){
scanf("%d%d",&x,&y); n=n>x?n:x; ans[i]=1;
if (y) data[i]=y,next[i]=son[x],son[x]=i;
}
C[0]=M[0]=1;
for (int i=0;i<=n;i++){
for (int p=son[i];p;p=next[p]) if (data[p]>1) ans[p]=C[0]%oo;
int lim=min(i+3,n-i+3);
for (int j=0;j<=lim;j++) g[j]=C[j];
for (int j=0;j<=lim;j++) C[j]+=(j?g[j-1]+g[j]:0)+g[j+1];
if (i%8==0) for (int j=0;j<=lim;j++) C[j]%=oo;
}
memset(g,0,sizeof(g));
for (int i=0;i<=n;i++){	
for (int p=son[i];p;p=next[p]) if (data[p]<2) ans[p]=M[0]%oo;
int lim=min(i+3,n-i+3);
for (int j=0;j<=lim;j++) g[j]=M[j];
for (int j=0;j<=lim;j++) M[j]+=(j?g[j-1]:0)+g[j+1];
if (i%11==0) for (int j=0;j<=lim;j++) M[j]%=oo;
}
for (int i=1;i<=t;i++) printf("%lld\n",(ans[i]-1+oo)%oo);
return 0;
}