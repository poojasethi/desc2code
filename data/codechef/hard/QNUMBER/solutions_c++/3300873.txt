#include <cstdlib>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
using namespace std;
 
long long gcd(long long x, long long y){
    if(y==0)
        return x;
    return gcd(y,x%y);
    }
 
long long n,k,n1,gcd1,prime[10000];
int t,q,cur,z,sayi,vv,main1=1,say[10000];
 
int main(int argc, char *argv[])
{
    cin>>n1>>q;
    n=n1;
    if(n%2==0)
                {
                    sayi=0;
                    cur++;
                    prime[cur]=2;
                    while(n%2==0)
                        {
                            n=n/2;
                            sayi++;
                        }
                    main1=main1*(sayi+1);
                    say[cur]=sayi;
                }
    for(long long i=3;i*i<=n;i=i+2)
        {
            if(n%i==0)
                {
                    sayi=0;
                    cur++;
                    prime[cur]=i;
                    while(n%i==0)
                        {
                            n=n/i;
                            sayi++;
                        }
                    main1=main1*(sayi+1);
                    say[cur]=sayi;
                }
        }
    if(n!=1)
        {
            cur++;
            prime[cur]=n;
            say[cur]=1;
            main1=main1*2;
        }
    for(int i=1;i<=q;i++)
        {
            scanf("%d%lld",&t,&k);
            if(t==1)
                {
                    k=gcd(n1,k);
                    vv=1;
                    for(int j=1;j<=cur && prime[j]<=k;j++)
                        {
                            if(k%prime[j]==0)
                                {
                                    sayi=0;
                                    while(k%prime[j]==0)
                                        {
                                            k=k/prime[j];
                                            sayi++;
                                        }
                                vv=vv*(sayi+1);
                                }
                        }
                    printf("%d\n",vv);
                }
            if(t==2)
                {
                    gcd1=gcd(n1,k);
                    if(gcd1!=k)
                        printf("0\n");
                    else
                        {
                            vv=1;
                            k=n1/k;
                            for(int j=1;j<=cur && prime[j]<=k;j++)
                                {
                                    if(k%prime[j]==0)
                                        {
 
                                            sayi=0;
                                            while(k%prime[j]==0)
                                                {
                                                    k=k/prime[j];
                                                    sayi++;
                                                }
                                            vv=vv*(sayi+1);
                                        }
                                }
                            printf("%d\n",vv);
                        }
                }
            if(t==3)
                {
                        if(gcd(n1,k)<k)
                            {
                                printf("%d\n",main1);
                            }
                        else{
                            vv=1;
                            k=n1/k;
                            for(int j=1;j<=cur && prime[j]<=k;j++)
                                {
                                    if(k%prime[j]==0)
                                        {
                                            sayi=0;
                                            while(k%prime[j]==0)
                                                {
                                                    k=k/prime[j];
                                                    sayi++;
                                                }
                                            vv=vv*(sayi+1);
                                        }
                                }
                            printf("%d\n",main1-vv);
                }
                }
        }
    return 0;
}