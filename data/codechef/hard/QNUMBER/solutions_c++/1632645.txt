#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<cctype>
#include<algorithm>
using namespace std;
#define pb push_back
#define mp make_pair
#define cin(n) scanf("%d",&n)
#define gc getchar_unlocked
typedef vector<long long> VI;
void fcin(long long &x){register long long c = gc();x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}}
long long n,N,k,t,q; 
VI primes,EXP;
long long gcd(long long a,long long b){if (a==0)return b;return gcd(b%a,a);}
long long numOfDivisors(long long x ){
  long long temp,ans=1;
  for(long long i=0;i<primes.size()&&primes[i]<=x;i++){
    temp=0;while(x%primes[i]==0){x/=primes[i];temp++;}
    ans*=(temp+1);
  }
  return ans;
}

int main()
{
  fcin(n);
  long long temp=n;
  N=1;
  for(long long i=2;i*i<=temp;i++){
    if(temp % i == 0){
      primes.pb(i);EXP.pb(1);temp/=i;
      while(temp%i==0)temp/=i,EXP[EXP.size()-1]++;
      N*=(EXP[EXP.size()-1]+1);
    }
  }
  if(temp>1)primes.pb(temp),(EXP.pb(1),N*=2);
  fcin(q);
  while(q--){
    fcin(t);fcin(k);
    if(t==1)printf("%lld\n",numOfDivisors(gcd(k,n)));
    else if(t==2)printf("%lld\n",((n%k==0)?numOfDivisors(n/k):0));
    else printf("%lld\n",(N-((n%k==0)?numOfDivisors(n/k):0)));
  }
}