#include<iostream>
#include<vector>
#include<cmath>
#include<cstdio>
#include<algorithm>
using namespace std;

int main(){
    long long n;
    int Q;
    scanf("%lld%d",&n,&Q);
    int tam=sqrt(n)+1;
    bool primos[tam+1];
    primos[0]=primos[1]=0;
    for(int i=2;i<=tam;i++) primos[i]=1;
    for(int i=2;i*i<=tam;i++){
        if(primos[i])for(int j=i*i;j<=tam;j+=i) primos[j]=0;
    }
    vector <long long> prm;
    vector <int> exps;
    long long tmp=n;
    for(long long i=2;i*i<=tmp;i++){
        if(primos[i] and n%i==0){
            int cnt=0;
            while(n%i==0){
                n=n/i;
                cnt++;
            }
            prm.push_back(i);
            exps.push_back(cnt);
        }
    }
    if(n!=1){
        prm.push_back(n);
        exps.push_back(1);
    }
    n=tmp;
    while(Q--){
        int t;
        long long k;
        scanf("%d%lld",&t,&k);
        if(t==1){
            long long ans=1;
            for(int i=0;i<prm.size();i++){
                if(k%prm[i]==0){
                    int cnt=0;
                    while(k%prm[i]==0){
                        k=k/prm[i];
                        cnt++;
                    }
                    ans*=(min(cnt,exps[i])+1);
                }
            }
            printf("%d\n",ans);
        }
        else if(t==2){
            if(n%k==0){
                long long d=n/k;
                long long ans=1;
                for(int i=0;i<prm.size();i++){
                    if(d%prm[i]==0){
                        int cnt=0;
                        while(d%prm[i]==0){
                            d=d/prm[i];
                            cnt++;
                        }
                        ans*=(min(cnt,exps[i])+1);
                    }
                }
                printf("%d\n",ans);
            }
            else {
                int cero=0;
                printf("%d\n",cero);
            }
        }
        else if(t==3){
            if(n%k==0){
                long long d=n/k;
                long long ans=1;
                long long ans2=1;
                for(int i=0;i<prm.size();i++){
                    ans2*=(exps[i]+1);
                    if(d%prm[i]==0){
                        int cnt=0;
                        while(d%prm[i]==0){
                            d=d/prm[i];
                            cnt++;
                        }
                        ans*=(min(cnt,exps[i])+1);
                    }
                }
                long long ansf=ans2-ans;
                printf("%d\n",ansf);
            }
            else{
                long long ans=1;
                for(int i=0;i<exps.size();i++){
                    ans*=(exps[i]+1);
                }
                printf("%d\n",ans);
            }
        }
    }
    return 0;
}