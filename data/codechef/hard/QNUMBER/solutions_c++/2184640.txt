#include<stdio.h>
#include<stdlib.h>
#include<utility>
#define fr(i,n) for(i=0;i<n;i++)
#define Fr(i,m,n) for(i=m;i<n;i++)
#define mod 1000000007
#define pm(i) fc[i].first
#define pno(i) fc[i].second
using namespace std;
typedef long long int ll;
ll fctr=1,xtraFc;
int fac[1000006],fsize;
pair<ll,int> fc[300];
void findfactors(ll n)
{
    int k=0,m=0;
    ll i;
    for(i=2;i*i<=n;i++)
    {       k=0;
            while(n%i==0){
                          k++;
                          n/=i;
                        }
            if(k!=0){ fc[m++] = make_pair(i,k);
                      fctr*=(k+1); }
    }
    if(n>1)  {xtraFc=n; fctr*=2; }
    fsize = m;
}
//ll nooffactors(ll n)
//{
//    int k=0;
//    ll m=1,i;
//    for(i=2;i*i<=n;i++)
//    {       k=0;
//            while(n%i==0){
//                          k++;
//                          n/=i;
//                        }
//            m*=(k+1);
//    }
//    if(n>1)  m*=2;
//    return m;
//}
ll factors1(ll n)
{
    int i,k=0;
    ll m=1;
    for(i=0;i<fsize;i++)
    {       k=0;
            while(n%pm(i)==0){
                          k++;
                          n/=pm(i);
                        }
            if(k>pno(i)) k=pno(i);
            m*=(k+1);
    }
    if(xtraFc!=0 && n%xtraFc==0)  m*=2;
    return m;
}
ll factors2(ll n)
{
    int i,k=0;
    ll m=1;
    for(i=0;i<fsize;i++)
    {       k=pno(i);
            while(n%pm(i)==0){
                          k--;
                          n/=pm(i);
                        }
            m*=(k+1);
    }
    if(xtraFc!=0 && n%xtraFc!=0)  m*=2;
    return m;
}
int main()
{
    int t,i,j,q;
    ll n,k,x,ans;
    scanf("%lld%d",&n,&q);
    findfactors(n);
//    fr(i,fsize)
//        printf("%d %d\t",pm(i),pno(i));
//    printf("%d\n",xtraFc);
    while(q--)
    {
        scanf("%d%lld",&t,&k);
        if(t==1)
        {
            ans=factors1(k);
        }
        else if(t==2)
        {
            if(n%k!=0)
                ans=0;
            else
                ans = factors2(k);
        }
        else
        {
            if(n%k!=0)
                ans=0;
            else
                ans = factors2(k);
            ans = fctr - ans;
        }
        printf("%lld\n",ans);
    }
    return 0;
}
