#include<iostream>
#include<map>
#include<stdio.h>
 
using namespace std;
typedef long long int L;
int vec[80000]={0};
int mp[1000009]={0};
map<L,L> dv;
L ct=0;
inline L inp()
{
    L noRead=0;
    char p=getchar_unlocked();
    for(;p<33;)
    {
     p=getchar_unlocked();
    };
    while(p>32)
    {
     noRead = (noRead << 3) + (noRead << 1) + (p - '0');
     p=getchar_unlocked();
    }
    return noRead;
};
void sieve()
{
for(int i=2;i<=1000000;i++)
{
    if(mp[i]==0)
    {   vec[ct++]=i;
        for(int j=2*i;j<=1000000;j=j+i)
        mp[j]=1;
    }
}
}
 
L gcd(L a,L b)
{
    if(b%a==0)
    return a;
 
    else
    return gcd(b%a,a);
}
L divisors(L n)
{
    L nn=n;
    if(dv[n])
    {
    return dv[n];
    }
 
    else
    { L r=1,cnt=0;
        int i;
        for(i=0;i<ct;i++)
        {
            if(n==1)
            break;
            else
            {
                while(n%vec[i]==0)
                {
                    cnt++;
                    n/=vec[i];
                }
                r*=(cnt+1);
                cnt=0;
            }
        }
        if(n!=1)
        r*=2;
        dv[nn]=r;
        return r;
    }
}
int main()
{
    sieve();
    L n=inp();
    L q=inp();
    L dn=divisors(n);
    while(q--)
    {
        L t,k;
       
       t=inp();
       k=inp();
 
        if(t==1)
        {
            printf("%lld\n",divisors(gcd(n,k)));
        }
        else
        {
            if(n%k==0)
            {    L temp=n/k;
                 temp=divisors(temp);
                 if(t==2)
                 printf("%lld\n",temp);
 
                else
                printf("%lld\n",dn-temp);
 
            }
            else
            {
                if(t==2)
                printf("0\n");
                else
                printf("%lld\n",dn);
            }
        }
    }
    return 0;
}