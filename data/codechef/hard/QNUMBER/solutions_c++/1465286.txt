#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
using namespace std;

long long  factor[10000];
long long prime[5000];
int r[5000],s[5000];

void func1(int);
int func2(int,long long,long long);

int main()
{
 long long  n,b,x,k;
  int  i,j,a,total,w,t,c,q;
 
 scanf("%lld %d",&n,&q);

  b=(long long)sqrt(n);

 k=0;
  for(i=1;i<=b;i++)
 {
  if(n%i==0)
  {
   factor[k++]=i;
   factor[k++]=n/i;
  }
 }

if((factor[k-1]*factor[k-1])==n)
 k--;

 sort(factor+0,factor+k);
 
j=0;
 for(i=1;i<k;i++)
 {
  for(a=0;(a<j)&&((factor[i]%prime[a])!=0);a++)
  ;
  if(a==j)
  {
   prime[j++]=factor[i]; 
  }
 }



 x=n;

 for(i=0;i<j;i++)
 {
  while((x%prime[i])==0)
  {
    r[i]++;
    x=x/prime[i];
  }
 } 
 

 total=1;
  for(i=0;i<j;i++)
   total=total*(r[i]+1);

 for(i=0;i<q;i++)
{
  scanf("%d %lld",&t,&k);
  x=k;

  for(c=0;c<j;c++)
   {
     s[c]=0;
    while((x%prime[c])==0)
    {
      s[c]++;
      x=x/prime[c];
    }
  }
 
   if(t==1)
     func1(j);
     
  else
   {
    w=func2(j,k,n); 
    if(t==2)
     printf("%d\n",w);
    else
     printf("%d\n",total-w);
   }
 }
 
return 0;
}

void func1(int j)
{
 int y=1,min1,i;

 for(i=0;i<j;i++)
 {
  if(r[i]>s[i])
    min1=s[i];
  else
   min1=r[i];

  y=(min1+1)*y;
}
 printf("%d\n",y);
}
 

int func2(int j,long long k,long long n)
{
 int y=1,z,t,ans,i;

 z=1;

 if(n%k!=0)
  ans=0;

  else
 {
    for(i=0;i<j;i++)
  {
    t=r[i]-s[i]; 
    z=z*(t+1);
  }
 ans=z;
}
return ans;
}

