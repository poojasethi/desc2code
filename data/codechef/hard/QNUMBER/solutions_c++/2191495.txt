#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <ctype.h>
#include <time.h>
#include <math.h>
#include <string>
#include <algorithm>
#include <sstream>
#include <fstream>
#include <map>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <utility>
#include <iomanip>



//#define DEBUG
//#define CODECHEF_DEFAULT

#define LL long long
#define rep(i,a,n) for(LL i = a;i<n;i++)
#define S(a) scanf("%d",&a)
#define P(a) printf("%d\n",a)
#define PS(s) printf(s)
#define SLL(a) scanf("%lld",&a)
#define PLL(a) printf("%lld\n",a)


#define II LL

#ifdef CODECHEF_DEFAULT
	  #define MOD 1000000007      
#endif
using namespace std;
int bprimes[]={ 2,3,5,7, 11, 13, 17, 19, 23, 29
, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71
, 73, 79, 83, 89, 97,101,103,107,109,113
,127,131,137,139,149,151,157,163,167,173
,179,181,191,193,197,199,211,223,227,229
,233,239,241,251,257,263,269,271,277,281
,283,293,307,311,313,317,331,337,347,349
,353,359,367,373,379,383,389,397,401,409
,419,421,431,433,439,443,449,457,461,463
,467,479,487,491,499,503,509,521,523,541
,547,557,563,569,571,577,587,593,599,601
,607,613,617,619,631,641,643,647,653,659
,661,673,677,683,691,701,709,719,727,733
,739,743,751,757,761,769,773,787,797,809
,811,821,823,827,829,839,853,857,859,863
,877,881,883,887,907,911,919,929,937,941
,947,953,967,971,977,983,991,997, 1009,-1};

LL table[1000005];

vector <LL> primes;
LL gcd(LL a,LL b)
{
	//cout << "GCD of " << a << " " << b << " ";
    LL c = a % b;
    while(c != 0)
    {
    	a = b;
    	b = c;
    	c = a % b;
    }
    return b;
}

inline LL inp()
{
LL n = 0;
char c = getchar_unlocked();
while(c <'0' || c > '9') c = getchar_unlocked();
while(c >= '0' && c <= '9') n = (n<<3) + (n<<1) + c - '0',c = getchar_unlocked();
return n;
}

map<LL,LL> calc;
LL nf(LL a)
{
	II ac = a;
	if(calc.count(a))
		return calc[a];
	if (a==1)
		return 1;
	II sizep = primes.size();
	II ret=1;
	// II aprime = 1;
	//II sqrta = sqrt(a);
	  rep(i,0,sizep)
	  {
	  	II cur_prime=primes[i];
	  	if(a==1 || cur_prime*cur_prime > ac) break;
	  	II fc=0;//initialise with 0
	  	
	  	while(a%cur_prime==0)//while this can divide a
	  	{
	  		fc++;//we add 1 to the count;	  		
	  		a /= cur_prime;
	  		// aprime = 0;
	  	}
	  	ret*=(fc+1);
	  }
	  if(a!=1)
	  	ret*=2;
	  // if(aprime) 
	  // 	{
	  // 		calc[ac] = 2;
	  // 		return 2;
	  // 	}
	  calc[ac]=ret;
	  return ret;
}
void build()
{
	rep(i,1,1000005) table[i]=1;
	table[0]=0;


	rep(i,0,169)
	{
		//PS("checker");
		//PLL(i);

		II checker = bprimes[i];
		for(II j = 2*checker;j<1000005;j+=checker)
			table[j]=0;
	}

	rep(i,2,1000005)
	{
		if(table[i])
		{
			primes.push_back(i);
			//PLL(i);
		}
	}
}

int main()
{

	  //build primes upto 10^6
	build();
	// first lets take n and q
// 	while(1)
// 	{
// 		II a;
// 		SLL(a);
// 		PLL(nf(a));
// 	}
// return 0;

	
	  II n,q;
	  SLL(n);SLL(q); 
	II noof_fac_n = nf(n);

	  while(q--)
	  {
	  	II t,k;
	  	// t = inp();
	  	// k = inp();
	  	SLL(t);SLL(k);
	  	
	  	switch(t)
	  	{
	  		case 1:
	  		{
	  			PLL(nf(gcd(n,k)));
	  			break;
	  		}

	  		case 2:
	  		{
	  			if(n%k==0)
		  			PLL(nf(n/k));
		  		else
		  			PLL((LL)0);
		  		break;
		  	}

	  		case 3:
	  		{
		  		if(n%k==0)
		  			PLL(noof_fac_n-nf(n/k));
		  		else
		  			PLL(noof_fac_n-0);
		  		break;
		  	}

	  	}
	  }

	  




	return 0;
}

/*
1016 20
1 5
1 17
1 8
2 15
3 100
2 25
2 17
3 39
1 119
2 103
3 103
2 419
2 78
3 91
1 997
1 1033
2 33
3 79
2 97
1 89

*/
