#include<iostream>
#include<map>
using namespace std;
typedef long long int ll;
map<ll,ll> m;
int a[1000000]={0},k2=0;
int p[78499];
inline ll scanInt()
{
ll noRead=0;
char p=getchar_unlocked();
for(;p<33;){p=getchar_unlocked();};
while(p>32)
{
noRead = (noRead << 3) + (noRead << 1) + (p - '0');
p=getchar_unlocked();
}
return noRead;
};
ll gcd(ll a,ll b)
{
if(b%a==0)
return a;
else
gcd(b%a,a);
}
void seive()
{
int n=1000000,i,j;
for(i=2;i<=n;i++)
{
if(a[i]==0)
{
p[k2++]=i;
j=2;
while((j*i)<=n)
{
a[j*i]=-1;j++;
}
}
}
}
ll divisors(ll d)
{
int i=0,c=0,s1=1;
while(d!=1&&i<k2)
{
c=0;
while(d%p[i]==0)
{
d=d/p[i];
c++;
}
s1*=c+1;
i++;
}
if(d!=1)
s1*=2;
return s1;
}
int main()
{
ll n,q,t,k,s,s1,temp;
seive();
n=scanInt();
q=scanInt();
s1=divisors(n);
while(q--)
{
t=scanInt();
k=scanInt();
if(t==1)
{
if (m[gcd(n,k)])
printf("%lld\n",m[gcd(n,k)]);
else
{
s=(divisors(gcd(n,k)));
printf("%lld\n",s);
m[gcd(n,k)]=s;
}
}
else
{
if(n%k==0)
{
temp=n/k;
if(m[temp])
s=m[temp];
else{
s=divisors(temp);
m[temp]=s;
}
 
if(t==2)
printf("%lld\n",s);
else
printf("%lld\n",s1-s);
}
else
{
if(t==2)
printf("0\n");
else
printf("%lld\n",s1);
}
}
}
return 0;
}