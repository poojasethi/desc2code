/***  Patience is above Perfection ***/
/***I believe in ONE GOD ***/
 
 /*** CHEFSTR Codechef **/
#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<stack>
#include<bitset>
#include<map>
#include<time.h>
#include<list>
#include<iostream>
#include<queue>
#include<iomanip>
#include<assert.h>
#define ll long long int 
 
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%lld",&i)
#define sout(i) printf("%d",i)
#define soutl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(int i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define GETCHAR getchar
#define PUTCHAR putchar
#define MAXN 400002
#define MAXLG 100
/***MAH Templates MAH Rules **/
 
template <class T>T sabs(T x){ if(x<0) return x*-1; else return x;}
template<class T> T sgcd(T x ,T y){ if(y==0) return x; else return sgcd(y,x%y);}
template<class T> T smax(T x,T y){ if(x>y) return x; else return y;}
template<class T> T smin(T x,T y){ if(x>y) return y; else return x;}
template <class T> T smod(T a, T b ,T m){T res=1,x=b;while(b>0){if(x&1) res=((res%m)*(x%m))%m;x=(x*x)%m;b=(b>>1);}return res;}
 
 
using namespace std;
inline void writeInt(int x) { if(x==-1) { PUTCHAR('-'); PUTCHAR('1'); PUTCHAR('\n'); } else { int i = 10; char buf[11]; // buf[10] = 0;
buf[10] = ' '; do { buf[--i] = x % 10 + '0'; x/= 10; }while(x); do { PUTCHAR(buf[i]); } while (buf[i++] != ' '); } }
inline void fastInput(int &x) {
register int c = getchar();
x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = getchar());
if(c=='-') {
neg = 1;
c = getchar();
}
for(; c>47 && c<58 ; c = getchar()) {
x = (x<<1) + (x<<3) + c - 48;
}
if(neg)
x = -x;
}
struct stu{

int nr[2],pos;
}L[MAXN];
ll n; int P[MAXLG][MAXN],stp,cnt;

int fn(struct stu a, struct stu b)
{
return a.nr[0] == b.nr[0] ? (a.nr[1] < b.nr[1] ? 1 : 0) : (a.nr[0] < b.nr[0] ? 1 : 0);
}

ll LCP(int x,int y){
    if(x==y) return n-x;
    ll res=0; int k;
    for(k=stp-1;k>=0 && x<n && y<n;k--){
        if(P[k][x]==P[k][y]){
            res+=1<<k; x+=1<<k; y+=1<<k;
        }
    }
    return res;
}
ll sa_create(string s){
n=s.length();
for(int i=0;i<n;i++){
    P[0][i]=s[i]-'a';
}
    for(cnt=1,stp=1;cnt<n;cnt=cnt<<1,stp++){
        for(int i=0;i<n;i++){
            L[i].nr[0]=P[stp-1][i];
            L[i].nr[1]=i+cnt<n?P[stp-1][i+cnt]:-1;
            L[i].pos=i;
        }
        sort(L,L+n,fn);
        for(int i=0;i<n;i++){
            P[stp][L[i].pos]=i>0 && L[i].nr[0]==L[i-1].nr[0] && L[i].nr[1]==L[i-1].nr[1]?P[stp][L[i-1].pos]:i;
        }
    }
    ll ans=0;
    for(int i=1;i<n;i++){
        ans+=LCP(L[i].pos,L[i-1].pos);
    }
    ans=((n*(n+1))/2)-ans;
    return ans;
}

int main(){
    ll rk,tk;
    string A,B,C;
    cin>>A>>B;
    C=A;
    C+='$';
    C+=B;
    tk=sa_create(A);
    tk+=sa_create(B);
    rk=sa_create(C);
    rk-=(ll)(A.length()+1)*(ll)(B.length()+1);
    rk=2*rk-tk;
    cout<<rk<<endl;
return 0;
}
