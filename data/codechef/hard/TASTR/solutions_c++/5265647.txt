#include <cstring>
#include <map>
#include <numeric>
#include <sstream>
#include <cmath>
#include <stack>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <iostream>
#include <set>
#include <queue>
#include <string>
#include <cctype>

using namespace std;

#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define pb(x) push_back((x))
#define REP(i,x,y) for(int i = x; i < int(y); i++)
#define FOR(it,A) for(typeof (A.begin()) it = A.begin(); it!= A.end(); it++)
#define CUA(x) (x) * (x)
#define mp(x,y) make_pair((x),(y))
#define clr(x, y) memset(x, y, sizeof x)
#define fst first
#define snd second
#define I (1LL << 40)
#define sz size()
#define oo (1<<30)
#define EPS (1e-9)

#define forn(i,n) for(int i=0;i<(int)(n);i++)
#define si(c) ((int)(c).size())
#define forsn(i,s,n) for(int i = (int)(s); i<((int)n); i++)
#define dforsn(i,s,n) for(int i = (int)(n)-1; i>=((int)s); i--)
#define decl(v, c) typeof(c) v = c
#define forall(i, c) for(decl(i, c.begin()); i!=c.end(); ++i)
#define dforall(i, c) for(decl(i, c.rbegin()); i!=c.rend(); ++i)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()

typedef pair<int, int> pii;
typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<pii> vii;
typedef vector<string> vs;
typedef vector<int> vi;

string T,T1,T2;

const int MAXN = 200009;

int n;

int RA[MAXN], tempRA[MAXN];
int SA[MAXN], tempSA[MAXN];
int rdx[MAXN], Phi[MAXN], LCP[MAXN], PLCP[MAXN];

void countingSort(int k){
	int sum = 0, mx = max(300, n);
	clr(rdx, 0);
	REP(i,0,n) rdx[ i+k < n ? RA[i+k] : 0 ]++;
	REP(i,0,mx){
		int t = rdx[i]; rdx[i] = sum; sum += t;
	}
	REP(i,0,n)
		tempSA[ rdx[ SA[i] + k < n ? RA[SA[i]+k] : 0 ]++ ] = SA[i];
	REP(i,0,n)
		SA[i] = tempSA[i];
}

void buildSA(){
	REP(i,0,n) RA[i] = T[i];
	REP(i,0,n) SA[i] = i;
	int rk = 0;
	for(int stp=1; stp < n; stp <<= 1){
		countingSort(stp);
		countingSort(0);
		tempRA[SA[0]] = rk = 0; ////// rk
		REP(i,1,n)
			tempRA[SA[i]] = ( RA[SA[i]] == RA[SA[i-1]] && RA[SA[i]+stp] == RA[SA[i-1]+stp] ) ? rk : ++rk;
		REP(i,0,n)
			RA[i] = tempRA[i];
		//REP(i,0,n) cout << "rank: " << RA[SA[i]] << endl;
		//cout << "-----" << endl;
		if (RA[SA[n-1]] == n) break;
	}
}

void computeLCP(){
	Phi[SA[0]] = -1;
	int L = 0;
	REP(i,1,n)
		Phi[SA[i]] = SA[i-1];
	REP(i,0,n){
		if( Phi[i] == -1 ){ PLCP[i] = 0; continue; }
		while( T[i+L] == T[Phi[i]+L] ) L++;
		PLCP[i] = L;
		L = max(L-1,0);
	}
	REP(i,0,n)
		LCP[i] = PLCP[SA[i]];
}

int main(){
	#ifndef ONLINE_JUDGE
		freopen("input.txt","r",stdin);
		//freopen("output.txt","w",stdout);
	#endif	
	cin >> T1;
	cin >> T2;
	ll A=0,B=0,AB=0;

	T = T1 + "$" + T2 + "#";
	clr(RA,0); clr(tempRA,0); clr(SA,0); clr(tempSA,0); clr(LCP,0); clr(PLCP,0);
	n = T.size();
	buildSA();
	computeLCP();
	REP(i,0,n) AB+= n - SA[i] -1 - LCP[i];
	AB -= (T1.size()+1LL)*(T2.size()+1);

	T = T1 + "$";
	clr(RA,0); clr(tempRA,0); clr(SA,0); clr(tempSA,0); clr(LCP,0); clr(PLCP,0);
	n = T.size();
	buildSA();
	computeLCP();
	REP(i,0,n) A += n - SA[i] -1 - LCP[i];
	//REP(i,0,n) printf("%2d \t %s\n",SA[i],T.substr(SA[i]).c_str());

	T = T2 + "$";
	clr(RA,0); clr(tempRA,0); clr(SA,0); clr(tempSA,0); clr(LCP,0); clr(PLCP,0);
	n = T.size();
	buildSA();
	computeLCP();
	REP(i,0,n) B += n - SA[i] -1 - LCP[i];

	cout << 2*AB - A - B << endl;
	//cout << A << " " << B <<" " << AB <<endl;
	
	return 0;
}





