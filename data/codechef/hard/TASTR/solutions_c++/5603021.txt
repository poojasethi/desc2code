#include <bits/stdc++.h>

using namespace std;
#define MAXN 200010
#define MAXLG 20

struct node
{
    int nr[2], p;
}L[MAXN];

int P[MAXLG][MAXN], N, i, stp, cnt;

inline int lcp(int x, int y)
{
    int k, ret = 0;
    if (x == y) return N - x;
    for (k = stp - 1; k >= 0 && x < N && y < N; k --)
        if (P[k][x] == P[k][y])
            x += 1 << k, y += 1 << k, ret += 1 << k;
    return ret;
}

int cmp(struct node a, struct node b)
{
return a.nr[0] == b.nr[0] ? (a.nr[1] < b.nr[1] ? 1 : 0) : (a.nr[0] < b.nr[0] ? 1 : 0);
}

struct nod
{
    int a,i;
};

int cmp2(nod* a, nod* b)
{
    return a->a < b->a;
}

long long suffix(char* s)
{
    N = strlen(s);
    for(int i=0;i<N;i++)
    {
        P[0][i] = s[i]-'0'+1;
    }
    for (stp = 1, cnt = 1; cnt >> 1 < N; stp ++, cnt <<= 1)
    {
        for (i = 0; i < N; i ++)
        {
            L[i].nr[0] = P[stp - 1][i];
            L[i].nr[1] = i + cnt < N ? P[stp - 1][i + cnt] : -1;
            L[i].p = i;
        }
        sort(L, L + N, cmp);
        for (i = 0; i < N; i ++)
            P[stp][L[i].p] = i > 0 && L[i].nr[0] == L[i - 1].nr[0] && L[i].nr[1] == L[i - 1].nr[1] ? P[stp][L[i - 1].p] : i;
    }
    nod* q[N];
    for(int j=0;j<N;j++)
    {
        nod* h = new nod();
        h->a=P[stp-1][j];
        h->i=j;
        q[j]=h;
    }
    sort(q,q+N,cmp2);
    long long ans = (N*(long long)(N+1))/2;
    for(int j=0;j<N-1;j++)
    {
        ans = ans - lcp(q[j]->i,q[j+1]->i);
    }
    return ans;
}

int main()
{
    char *a = new char[100001];
    char *b = new char[100001];
    scanf("%s %s",a,b);
    long long ans  = suffix(a) + suffix(b);
    //cout<<ans<<endl;
    int n = strlen(a);
    int m = strlen(b);
    char* s = new char[200010];
    for(int i=0;i<n;i++)
        s[i]=a[i];
    s[n]='$';
    for(int i=0;i<=m;i++)
        s[i+n+1]=b[i];
    long long an = suffix(s);
    an = an-(long long)(n+1)*(long long)(m+1);
    //cout<<an<<endl;
    long long h = 2*an - ans;
    cout<<h<<endl;
    return 0;
}
