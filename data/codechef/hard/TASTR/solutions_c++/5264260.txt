#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <set>
#include <cstring>
#include <iomanip>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <list>
#include <string>
#include <vector>
#include <new>
#include <bitset>
#include <ctime>
#include <cassert>
#include <stdint.h>
#include <unistd.h>
 
 using namespace std;
 
#define ll long long int
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
 
template < typename X > X gcd( X a, X b ) { if( !b ) return a ; else return gcd(b, a%b) ; }
 
typedef vector<int> vi;
typedef pair<int, int> ii;

const int N = 2e5 + 10 ;
int la, lb, n, sa[N], tsa[N], ra[N], tra[N], lcp[N], plcp[N], phi[N], L, sum, r, p, i, k, c[N], l ;
char a[N], b[N] ;
ll x, y, z, s, ans;


void csort(int k) {
	memset( c, 0, sizeof c) ;
	for( i = 0; i < n; ++i ) 
		c[ i + k < n ? ra[i + k] : 0 ]++ ;
	sum = 0 ;
	for( i = 0; i < max( 300, n ) ; ++i ) {
		p = c[i] ;
		c[i] = sum ;
		sum += p ;
	}
	for( i = 0 ; i < n; ++i ) 
		tsa[ c[ sa[i] + k < n ? ra [ sa[i] + k] : 0 ]++ ] = sa[i] ;
	for( i = 0; i < n; ++i ) 
		sa[i] = tsa[i] ;
}
void Suffix_Array() {
	for( i = 0; i < n; ++i ) {
		sa[i] = i ;
		ra[i] = a[i] - '.' ;
	}
	for( k = 1; k < n; k <<= 1 ) {
		csort( k ) ;
		csort( 0 ) ;
		tra[sa[0]] = r = 0 ;
		for( i = 1; i < n; ++i ) {
			if( ra[ sa[i] ] == ra[ sa[i - 1] ] && ra[ sa[i] + k ] == ra[ sa[i - 1] + k] )
				tra[sa[i]] = r; 
			else
				tra[ sa[i] ] = ++r;
		}
		for( i = 0 ; i < n; ++i ) 
			ra[i] = tra[i] ;
	}
}
void LCP() {
	phi[ sa[0] ] = -1 ;
	L = 0 ;
	for( i = 1; i < n; ++i ) 
		phi[ sa[i] ] = sa[i - 1];
	for( i = 0; i < n; ++i ) {
		if( phi[i] == -1 ) {
			plcp[i] = 0 ;
			continue ;
		}
		while( a[i + L] == a[ phi[i] + L ] )
			++L ;
		plcp[i] = L ;
		L = max( L - 1, 0 ) ;
	}
	for( i = 1; i < n; ++i ) 
		lcp[i] = plcp[sa[i]] ;
}
ll Distinct() {

	Suffix_Array() ;
	LCP() ;
	ans = 0 ;

	for( i = 1; i < n; ++i ) {
		ans += (ll) ( n - 1 - lcp[i] - sa[i] ) ;
	}
	return ans ;
}
int main() {
	scanf("%s", a ) ;
	la = (int) strlen( a ) ;
	n = la ; 
	s = la + 1;
	a[n++] = '.' ;
	x = Distinct() ;

	for( i = 0; i < n; ++i ) 
		b[i] = a[i] ;
	b[n - 1] = '/';
	l = n ; 

	scanf("%s", a ) ;
	la = (int) strlen( a ) ;
	n = la ;
	s = s * (ll) ( la + 1 ) ;
	a[n++] = '.' ;
	y = Distinct() ;

	for( i = 0 ; i < n; ++i ) 
		b[l++] = a[i] ;
	--l ;
	for( i = 0; i < l; ++i ) 
		a[i] = b[i] ;
	a[l++] = '.';
	n = l ;

	z = Distinct() ;
	z = z - s ;
	printf("%lld\n", 2 * z - x - y );
	return 0 ;
}