//      go_on
#include <bits/stdc++.h>
using namespace std;


//      LOOPS AND MEM
#define mz(a) memset(a,0,sizeof(a))
#define md(a,m,n) memset(a,0,sizeof(a[0][0])*m*n);
#define mmin1(a) memset(a,-1,sizeof(a))
#define minf(a) memset(a,MEMSET_INF,sizeof(a));
#define f(i,a,n) for(i=a;i<=n;++i)
#define fs(i,a,n) for(i=a;i<n;++i)
#define fl(i,n,a) for(i=n;i>=a;--i)


//       I/O
#define i(n) cin>>n
#define is(n) scanf("%s",n)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define o(n) cout<<n
#define p(n) printf("%d",n)
#define pl(n) printf("%lld",n)
#define os printf(" ")
#define on printf("\n")


//       CONTAINERS
typedef vector <int> vi;
typedef pair<int, int> pii;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a)  a.begin(),a.end()
//#define fv(i,v) for(auto i = v.begin();i !=v.end(); ++i)


//        DEF AND INIT
#define ll long long int
#define M 1000000007
#define eps 1e-15
#define N 200010
//vector<pair<int, pii> >v;

int len,pos[N],ind[N],tmp[N],gap;//,lcp[N];
char s1[N],s2[N],*s;


bool cmp(int i,int j)
{
    if(pos[i]!=pos[j])     return (pos[i]<pos[j]);
    i+=gap;
    j+=gap;
    return ((i<len) && (j<len))?(pos[i]<pos[j]):(i>j);
}


void sa()
{
    int i;
    f(i,0,len-1)    ind[i]=i,pos[i]=s[i];
    for(gap=1;;gap<<=1)
    {
        sort(ind,ind+len,cmp);
        fs(i,0,len-1)           tmp[i+1]=tmp[i]+cmp(ind[i],ind[i+1]);
        f(i,0,len-1)            pos[ind[i]]=tmp[i];
        if(tmp[len-1]==len-1)   break;
    }
}

ll lcp_()
{
    ll ans=0;
    for(int i=0,k=0;i<len;++i) if(pos[i]!=len-1)
    {
        for(int j=ind[pos[i]+1];s[i+k]==s[j+k];)      ++k;
        ans+=k;
        if(k)   --k;
    }
    return ans;
}

/*
int dissub(char *s)
{
    int i,len=strlen(s);
    int ans=len-ind[0];
    fs(i,1,len)      ans+=len-ind[i]-lcp[i-1];
    return ans;
}*/

ll dissub()
{
    return (ll)len*(len + 1) / 2 - lcp_();
}

int main()
{
    ll i,dis1,dis2,dis3,ans,len1,len2;
    is(s1);
    s=s1;
    len=len1=strlen(s1);
    sa();
    lcp_();
    dis1=dissub();
    mz(ind),mz(pos);
    is(s2);
    s=s2;
    len=len2=strlen(s2);
    sa();
    lcp_();
    dis2=dissub();
    s[len2]='$';
    s[len2+1]='\0';
    strcat(s,s1);
    len=len1+len2+1;
    mz(ind),mz(pos);
    sa();
    lcp_();
    dis3=2*dissub();
    dis3-=(2*(len1+1)*(len2+1));
    ans=(dis3)-dis2-dis1;
    o(ans);
    return 0;
}
