#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<iostream>
using namespace std;
#define MAXN 300006
#define MAXLG 20
char X[MAXN];
struct entry
{
	int nr[2],p;
}L[MAXN];
int P[MAXLG][MAXN],N,i,stp,cnt;
int cmp(struct entry a,struct entry b)
{
return a.nr[0]==b.nr[0]?(a.nr[1]<b.nr[1]?1:0):(a.nr[0]<b.nr[0]?1:0);
}
int lcp(int x,int y)
{
	int k,ret=0;
	if(x==y) return N-x;
	for(k=stp-1;k>=0&&x<N&&y<N;k--)
		if(P[k][x]==P[k][y])
			x+=1<<k,y+=1<<k,ret+=1<<k;
	return ret;
}
long long sum;
long long  suffix(char *A,int l)
{
//	printf("%s \n",A);
	sum=0;
	N=l;
//	printf("loop :%d %d\n",stp,cnt);
	for(i=0;i<N;i++)
		P[0][i]=A[i]-'a';
	for(stp=1,cnt=1;cnt>>1 <N;stp++,cnt<<=1)
	{
		
//		printf("stp %d\n",stp-1);
		for(i=0;i<N;i++)
		{
//			printf("%d ",P[stp-1][i]);
			L[i].nr[0]=P[stp-1][i];
			L[i].nr[1]=i+cnt<N?P[stp-1][i+cnt]:-1;
			L[i].p=i;
		}
//		printf("\n");
		sort(L,L+N,cmp);
		for(i=0;i<N;i++)
		 	P[stp][L[i].p]=i>0 &&L[i].nr[0]==L[i-1].nr[0]&&L[i].nr[1]==L[i-1].nr[1]?P[stp][L[i-1].p]:i;
	}
//	for(i=0;i<N;i++)
//		printf("%d ",L[i].p+1);
 
//	printf("\n");
	sum=N-L[0].p;
	for(i=1;i<N;i++)
		sum+=N-L[i].p-lcp(L[i].p,L[i-1].p);
	return sum;
}
int main()
{
 
	long long ans=0,l1,l2,a,b,c;
	scanf("%s",X);
	l1=strlen(X);
 
	scanf("%s",X+l1+1);
	X[l1]=0;
//	printf("%s %s\n",X+l1+1,X);
	l2=strlen(X+l1+1);
	a=suffix(X,l1);
	b=suffix(X+l1+1,l2);
	X[l1]='#';
	c=suffix(X,l1+l2+1);
	c=c-(l1+1)*(l2+1);
	c=a+b-c;
	ans=a+b-2*c;
//	cout<<a<<" "<<b<<" "<<c<<"\n";
	cout<<ans<<endl;
 
 
}