#include <iostream>
using namespace std;

int Graph[26], All, Ans, N;

void go(int i,int mask,int cost) {
     
     if(cost >= Ans || i >= 26 ) return;
     if(All == mask) { Ans = cost;return; }	// enters this only when all the nodes have been covered by the mask
     if(!(All & (1 << i))) go(i+1,mask,cost); // Node is not present;
     else {
		go(i+1,mask,cost);
		if((mask|Graph[i]) != mask) 
			go(i+1,mask|Graph[i],cost+1);
     }
}

int main() {
    
    int kases, N, t1, t2,i; scanf("%d",&kases);
    char c1, c2;
    while ( kases-- ) {
          
          scanf("%d",&N); All = 0;
          for(i=0;i<26;++i) {Graph[i] = 1 << i; }
          for(i=0;i<N;++i) {
                    scanf(" %c %c",&c1,&c2);
                    t1 = c1 - 'A'; t2 = c2 - 'A';
                    Graph[t1] |= (1 << t2);Graph[t2] |= (1 << t1); // adding the neighbours.
                    All |= (1 << t1); All |= (1 << t2);
                  }
          Ans = 100;go(0,0,0);
          printf("%d\n",100*Ans);
    }
}
