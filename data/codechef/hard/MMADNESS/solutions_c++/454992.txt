//	Filename:  mmadness.cpp 
//	Author:  pankaj kumar, pankaj4u4m@gmail.com
#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <functional>
#include <iostream>
#include <iterator>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

/* Only for Debugging */
#define out(__debug) cout << #__debug<< "=" <<__debug << endl;
#define outC(A) cout<<#A<<"={"; FE(__it,A)cout << *__it << " " ;cout<<"}"<<endl;
template<class T>inline void outA(T A[], int n) {cout<<"{"; for(int i=0;i<n;i++)cout<<A[i]<<" "; cout<<"}"<<endl;}
/* Input Output Function */
#define BUFSIZE (1<<26)
char DIP[20];
//#define GET
#ifdef GET
char IBUF[BUFSIZE+1], *inputptr=IBUF;
#define INPUT fread(IBUF, 1, BUFSIZE, stdin);
#define DIG(a) (((a)>='0')&&((a)<='9'))
#define getChar(t) {t=*inputptr++;}
template<class T>inline bool getInt(T &j){j=0;int _t;getChar(_t);if(_t==0)return false;char sign;while(!DIG(_t)&&_t!=0){sign=_t;getChar(_t);}while(DIG(_t)){j=10*j+(_t-'0');getChar(_t);}if(sign == '-') j = -j;*inputptr--;return j==0&&_t==0?false:true;}//::getInt(
inline bool getString(char *s, char n = 32){char _c;getChar(_c);if(_c==0)return false;while(_c==10||_c==n)getChar(_c);while(_c != 10&&_c != n&&_c!=0){*s++=_c;getChar(_c)}*s=0;inputptr--;return s[0]==0&&_c==0?false:true;}
inline bool getLine(char *s){return getString(s, 10);}
#endif
/**************** Main program *******************/
int n;
int G[27];
bool conn[27];
int ans;
int All;
void go(int i,  int mask,  int cost){
	if(cost>=ans||i>26)return;
	if(All == mask){ans = cost; return;}
	if(!(All&(1<<i)))go(i+1, mask, cost);
	else{
		go(i+1, mask, cost);
		if(mask|G[i] != mask)go(i+1, mask|G[i], cost+1);
	}
}
int main(){
	//freopen("mmadness.cppin","r",stdin);
	int t;scanf("%d", &t);while(t--){
		memset(G, 0, sizeof G);
		memset(conn, 0, sizeof conn);
		scanf("%d", &n);
		char a[2], b[2];
		All=0;
		for(int i =0 ; i<26; i++)G[i]|=1<<i;
		for(int i = 0; i< n; i++){
			scanf("%s%s", a, b);
			G[a[0]-'A'] |= 1<<(b[0]-'A');
			G[b[0]-'A'] |= 1<<(a[0]-'A');
			All|=1<<(a[0]-'A');
			All|=1<<(b[0]-'A');
		}
		ans =100 ;
		go(0, 0, 0);
		printf("%d\n", ans*100);
	}
	return 0;
}


