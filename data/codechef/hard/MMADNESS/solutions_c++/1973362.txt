#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define N 100010
#define M 1000000007
#define ll long long
#define uint unsigned
#define ull unsigned long long
int n,masks[30],v[30],g[30][30],e[33];
void dfs(int u)
{
 n++;e[n-1]=u;v[u]=0;
 for(int i=1;i<=g[u][0];i++)
 if(v[g[u][i]])dfs(g[u][i]);
}
int best,end;
void res(int mask,int cur,int k)
{
 if(cur>=best)return;
 if(mask==end){best=cur;return;}
 if(cur+1>=best)return;
 if(k>=n)return;
 res(mask|masks[k],cur+1,k+1);
 res(mask,cur,k+1);
}
int solve()
{
 if(n<=3)return 1;
 end=(1<<n)-1;int inv[30];
 for(int i=0;i<n;i++)inv[e[i]]=i;
 best=(n+1)/2;
 for(int i=0;i<n;i++)
 {
  masks[i]=1<<i;
  for(int j=1;j<=g[e[i]][0];j++)
  masks[i]|=1<<inv[g[e[i]][j]];
 }
  res(0,0,0);
  return best;
}
int main()
{
   // freopen("in.txt","r",stdin);
	int T,i,j,k,c,m;
	scanf("%d",&T);
	while(T--)
	{
	 scanf("%d",&m);
	 memset(v,0,sizeof(v));
	 memset(g,0,sizeof(g));
	 for(i=0;i<m;i++)
	 {
	  char a,b;
	  cin>>a>>b;a-='A',b-='A';
	  v[a]=1,v[b]=1;
	  g[a][++g[a][0]]=b;
	  g[b][++g[b][0]]=a;
	 }
	 int tot=0;
	 for(i=0;i<30;i++)
	 {
	  if(v[i])
	  {
	  	n=0;
	  	dfs(i);
	  	tot+=solve();
	  }
	 }
	 printf("%d\n",tot*100);
	}
	return 0;
}
