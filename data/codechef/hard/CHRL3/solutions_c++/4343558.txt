// ...............................$$.....................................//
 
//BIG OH
//prob-

/* Finding logest decreasing subsequence---
  Chef plays with the sequence of N numbers. During a single move Chef is able to choose a non-decreasing subsequence of  
   the sequence and to remove it from the sequence. Help him to remove all the numbers in the minimal number of moves.
 */
 
#include<cstdio>
#include<iostream>
#include<cstring>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<functional>
#include<bitset>
#include<numeric>
#include<cassert>
#include<limits>

using namespace std;
typedef long long ll;
#define mx 100001
int dp[mx];
int main()
{
  int n;
  cin>>n;
  int temp;
  dp[0] = -1000000000;
  for(int i=1;i<=n;i++)
   dp[i]=1000000000;
  for(int i=0;i<n;i++)
  {
     cin>>temp;
     temp*=-1;
     int index=upper_bound(dp,dp+n+1,temp)-dp; // finding upper bound of elemnt
     if(dp[index-1]<temp && temp< dp[index]) dp[index]=temp;
   }
   int ans;
   for(int i=1;i<=n;i++)
    if(dp[i]!=1000000000) ans=i;// finding an answer as the last i such that DP[i] was changed
   cout<<ans<<endl;
}