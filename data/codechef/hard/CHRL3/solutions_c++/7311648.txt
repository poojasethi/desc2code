#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;
vector <int> v;
vector <int> c;
int n,t;

int lower_bs(int low, int high, int val) {
    while(low<high) {
        int mid=low+(high-low)/2;
        if(val<v[mid]) {
            low=mid+1;
        } else {
            high=mid;
        }
    }
    return (val<v[low])?(low+1):low;
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	cin >> n;
	c.resize(n+1);
	for(int i = 0; i < n; i++){
		cin >> c[i];
	}
	v.push_back(c[0]);
	for(int i = 1; i < n; ++i){
		t = lower_bs(0, v.size()-1, c[i]);
		if(t == v.size())
			v.push_back(c[i]);
		else v[t] = c[i];
	}
	cout << v.size() << "\n";
	return 0;
}

