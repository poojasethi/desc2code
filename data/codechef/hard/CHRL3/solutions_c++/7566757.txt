#include <iostream>
#include <stdio.h>
#define maxn 100000+50
#define gc getchar_unlocked

typedef long long ll;
using namespace std;

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
void scanint(ll &x)
{
    register ll c = gc();
    x = 0;
    ll neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
ll longestDecreasingSubsequenceLength(ll n);
ll binarySearch(ll left,ll right,ll key);

ll arr[maxn];
ll auxillary_arr[maxn];

int main(){

	ll n,i;
	scanint(n);
	
	for(i = 0;i<n;++i) scanint(arr[i]);
	printf("%lld\n",longestDecreasingSubsequenceLength(n));
return 0;
}

ll binarySearch(ll left,ll right,ll key){
	ll mid;
	while((right-left)>1){
		mid = left + (right-left)/2;
		(auxillary_arr[mid]<=key?right:left) = mid;
	}
return right;
}
ll longestDecreasingSubsequenceLength(ll n){
	ll length;
	auxillary_arr[0] = arr[0];
	length = 1;
	
	for(ll i=1;i<n;++i){
		if(arr[i]>auxillary_arr[0]) auxillary_arr[0] = arr[i];
		else if(arr[i]<auxillary_arr[length-1]) auxillary_arr[length++] = arr[i];
		else auxillary_arr[binarySearch(-1,length-1,arr[i])] = arr[i];
	}
return length;
}