/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
//assert 

typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;

#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))

#define TRACE
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
const int MAX = 100005;
int BIT[MAX+2];

int query(int x)
{int ans = 0 ; 
	while(x>0)
	{
		ans = max(BIT[x],ans);
		x-= x&(-x);
	}
return ans ; 
}
int update(int x,int val)
{
	while(x<=MAX)
	{
		BIT[x] = max(BIT[x],val);
		x+=x&(-x);
	}
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */
    #ifdef _WIN32 
    freopen("input.txt", "r", stdin);
  #endif // LOCAL_USER
 geti(n);
 stack<int> A ;
 int elm ; 
 rep(i,n)
 scanf("%d",&elm),A.push(elm);
 int ans = 0 ;
 while(!A.empty())
 {
 	int a = A.top();
 	A.pop();
 	int val = query(a-1) + 1 ;   //len upto a
  	ans = max(val,ans);
 	update(a,val);
 }
cout<<ans<<endl;
    return 0;
}
