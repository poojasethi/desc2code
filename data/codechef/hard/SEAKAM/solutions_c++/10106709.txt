#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
#define ll long long
 
ll fact[100002],xpow[10];
pair<int,int> bad[7];
ll ans;
int n,m;
map<int,int>::iterator it;
 
void calc()
{
    fact[0]=1;
    for(int i=1;i<=100001;i++)
    {
        fact[i]=fact[i-1]*i;
        if(fact[i]>=mod) fact[i]%=mod;
    }
    xpow[0]=1;
    for(int i=1;i<=10;i++) xpow[i]=xpow[i-1]*2;
}
 
class dsu
{
public:
    map<int,int> parent;
    void add(int i) {parent[i]=i;}
    int find(int a) {return a==parent[a]?a:parent[a]=find(parent[a]);}
    void join(int i,int j) {parent[find(j)]=find(i);}
    bool check(int i,int j) {return find(i)==find(j);}
    int size() {return parent.size();}
};
 
void reduce(vector<int> a,int index)
{
    //actual reduction
    dsu d;
    for(int i=0;i<a.size();i++)
    {
        d.add(bad[a[i]].first);
        d.add(bad[a[i]].second);
    }
    int p = d.size(),q = d.size();
    bool cycle=false;
    for(int i=0;i<a.size();i++)
    {
        int x=bad[a[i]].first,y=bad[a[i]].second;
        if(d.check(x,y))
        {
            cycle=true;
            break;
        }
        d.join(x,y);
        q--;
    }
    map<int,int> M;
    for(int i=0;i<a.size();i++)
    {
        int x=a[i];
        M[bad[x].first]++;
        M[bad[x].second]++;
        if(M[bad[x].first]>2 || M[bad[x].second]>2)
        {
            cycle=true;
            break;
        }
    }
    ll N;
    if(!cycle)
    {
        N=(fact[n-p+q]*xpow[q]);
        if(N>=mod) N%=mod;
        if(a.size()%2==0)
        {
            ans+=N;
            if(ans>=mod) ans%=mod;
        }
        else
        {
            ans=(ans+mod-N);
            if(ans>=mod) ans%=mod;
        }
    }
    //ends
   // for(int i=0;i<a.size();i++) cout<<a[i]<<" ";
   // cout<<endl<<"ans="<<ans<<" p="<<p<<" q="<<q<<endl;
    for(int i=index+1;i<m;i++)
    {
        vector<int> b=a;
        b.push_back(i);
        reduce(b,i);
    }
}
 
void solve()
{
    cin>>n>>m;
    ans=fact[n];
    for(int i=0;i<m;i++) cin>>bad[i].first>>bad[i].second;
   // cout<<ans<<endl;
    for(int i=0;i<m;i++)
    {
        vector<int> a;
        a.push_back(i);
        reduce(a,i);
    }
    cout<<ans<<endl;
}
 
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
   // freopen("input.c","r",stdin);
    calc();
    int t;
    cin>>t;
    while(t--) solve();
    return 0;
}