#include <iostream>
#include <cmath>

using namespace std;

long dfs(long,long,long);

long r,c;
long maze[60005];
double count[50000];

int main()
{
    cout.precision(17);
    int t;
    char pos;
    long i,j;
    long sum,color;
    long double total,ans,p;
    cin>>t;
    while(t--)
    {
        cin>>r>>c;
        total=0;
        color=1;
        for(i=0;i<r;i++)
            for(j=0;j<c;j++)
            {
                cin>>pos;
                if(pos=='o')
                {
                    maze[i*c+j]=1;
                    total++;
                }
                else
                    maze[i*c+j]=0;
            }
        for(i=0;i<r;i++)
            for(j=0;j<c;j++)
            {
                if(maze[i*c+j]==1)
                {
                    color++;
                    count[color]=dfs(i,j,color);
                }
            }
        ans=1;
        for(i=3;i<=color;i++)
        {
            ans=ans+count[i]/(count[i]+count[2]);
        }
        cout<<ans<<endl;
    }
    return 0;
}

long dfs(long i,long j,long rcolor)
{
    if(i<0 || i>=r)
        return 0;
    if(j<0 || j>=c)
        return 0;
    if(maze[i*c+j]!=1)
        return 0;
    maze[i*c+j]=rcolor;
    return(1+dfs(i+1,j,rcolor)+\
           dfs(i-1,j,rcolor)+\
           dfs(i,j+1,rcolor)+\
           dfs(i,j-1,rcolor));
}




