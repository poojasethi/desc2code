#include<bits/stdc++.h>
using namespace std;
bool *vis[50001];
int x[]={-1,0,0,1};
int y[]={0,1,-1,0};
int n , m ;

int DFS(int i , int j )
{
    vis[i][j]=1;
    int k;
    int ans = 0 ;

    for(k=0;k<4;++k)
        if(i+x[k]>=0 && i+x[k]<n &&  j+y[k]>=0 && j+y[k]<m && !vis[i+x[k]][j+y[k]])
            ans+=1+DFS(i+x[k],j+y[k]);
    return ans;
}
int main()
{
    #ifdef debug
        freopen("in.txt","r",stdin);
        freopen("output.txt","w+",stdout);
    #endif

    ios::sync_with_stdio(0);
    cin.tie(0);
    int t;
    cin>>t;
    for(;t;--t)
    {
        int  i , j , k ;
        string s;
        cin>>n>>m;
        for(i=0;i<n;++i)
            {
                vis[i]=new bool[m];
                memset(vis[i],0,sizeof(vis[i]));
                cin>>s;
                for(j=0;j<s.length();++j)
                    vis[i][j]=s[j]=='#';
            }
        int a = 1 + DFS(0,0);


        long double ans = 1;

        for(i=0;i<n;++i)
            for(j=0;j<m;++j)
                if(!vis[i][j])
                {
                    double tee = DFS(i,j) + 1;
                    ans+= tee*1.00/(tee+a);
                }
        cout.setf(ios::fixed);
        cout.precision(11);
        cout<<ans<<'\n';
    }
    return 0;
}
