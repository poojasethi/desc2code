#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e6 + 10;
LL A,B,G,pw[13],value[13][13];
int n,m,c[13];
map<LL, int> d;
LL mul(LL a, LL b) {
	LL res = 0;
	while(b > 0) {
		if (b & 1) {
			res += a;
			res %= B;
		}
		a += a;
		a %= B;
		b >>= 1;
	}
	return res;
}
LL binpow(LL a, LL b) {
	LL res = 1;
	while(b > 0) {
		if (b & 1) {
			res = mul(res,a);
		}
		a = mul(a,a);
		b >>= 1;
	}
	return res;
}
void dfs(int p, LL mod) {
	if (p == n) {
		if (mod == G) {
			for (int i = 0; i < n; i++) {
				cout << c[i];
			}
			cout << endl;
			exit(0);
		}
		return;
	}
	for (int i = 0; i < 10; i++) {
		c[p] = i;
		dfs(p + 1,(mod + value[i][n - p - 1]) % B);
	}
}
void go(int p, LL mod) {
	if (p == m) {
		if (d.count(mod) == 0) {
			int val = 0;
			for (int i = m - 1; i >= 0; i--) {
				val = val * 10 + c[i];
			}
			d[mod] = val;
		}
		return;
	}
	for (int i = 0; i < 10; i++) {
		c[p] = i;
		go(p + 1,(mod + value[i][m - p - 1]) % B);
	}
}
void doit(int p, LL mod) {
	if (p == 6) {
		mod = G - mod + B;
		mod %= B;
		if (d.count(mod) != 0) {
			for (int i = 0; i < 6; i++) {
				cout << c[i];
			}
			int val = d[mod];
			for (int i = 0; i < m; i++) {
				cout << val % 10;
				val /= 10;
			}
			cout << endl;
			exit(0);
		}
		return;
	}
	for (int i = 0; i < 10; i++) {
		c[p] = i;
		doit(p + 1,(mod + value[i][5 - p + m]) % B);
	}
}
int main()
{
	//#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	//#endif	
     cin >> n;
     cin >> A >> B >> G;
     pw[0] = 1;
	for (int i = 1; i <= 12; i++) {
		pw[i] = mul(pw[i - 1],A);
	}
	for (int i = 0; i < 10; i++) {
		for (int j = 0; j <= 12; j++) {
			value[i][j] = pw[j] * i % B;
		}		
	}
     if (n <= 6) {
     	dfs(0,0);
     } else {
     	m = n - 6;
     	go(0,0);
     	doit(0,0);
     }
	return 0;
}
 