#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define pb push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif
/*
int maxarr(int p,int q)
{
    if(p>q)
        return p;
    else
        return q;
}

int minarr(int p,int q)
{
    if(p<q)
        return p;
    else
        return q;
}
*/
int n,m,minarr[45],maxarr[45];
void precompute()
{
  //  printf("****\n");
    int i;
    minarr[1]=2;
    maxarr[2]=2;
    minarr[2]=5;
    maxarr[2]=5;
    for(i=3;i<=30;i++)
    {
        if(i%2==0)
        {
            minarr[i]=i+1+minarr[i/2-1]+minarr[i/2];
            maxarr[i]=maxarr[i-1]+i+1;
        }
        else if(i%2==1)
        {
            minarr[i]=i+1+2*minarr[(i-1)/2];
            maxarr[i]=maxarr[i-1]+i+1;
        }
      //  printf("%d %d\n",minarr[i],maxarr[i]);
    }
}

int main()
{
    int t;
    si(t);
    precompute();
    while(t--)
    {
        si(n);
        si(m);
        if(minarr[n]>m)
        {
            dout(-1);
        }
        else if(minarr[n]<=m && maxarr[n]>=m)
        {
            dout(0);
        }
        else
        {
            dout(m-maxarr[n]);
        }
    }
    return 0;
}

