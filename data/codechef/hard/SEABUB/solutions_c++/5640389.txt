#include <bits/stdc++.h>
using namespace std;
#define N 100
typedef long long int ll;
int a[N + 1];
double prob[N + 1][N*N],sprob[N+1][N*N];
double stprob[N+1][N*N],f[N+1][N*N];
void PreCompute()
{
    prob[0][0] = 1.00000000;
    sprob[0][0] = 1.000000000;
    stprob[0][0] = 0.000000000;
    for(int i = 1 ; i<=N ; i++)
    {
        double I = (double) i;
        prob[i][0] = prob[i-1][0]/I;
        sprob[i][0] = sprob[i-1][0]/I;
        stprob[i][0] = 0.000000000;
        for(int k = 1 ; k<=i*(i-1)/2 ; k++)
        {
            double sum = 0;
            double K = (double)k;
            for(int j = 0 ; j<i ; j++)
            {
                if(k-j >=0) sum = sum + prob[i-1][k-j];
                else break;
            }
            prob[i][k] = sum/I;
            sprob[i][k] = sprob[i][k-1] + prob[i][k];
            stprob[i][k] = stprob[i][k-1] + K*prob[i][k];
        }
        for(int k = i*(i-1)/2+1 ; k<=i*(i+1)/2 ; k++)
        {
            prob[i][k] = 0.000000000;
            sprob[i][k] = sprob[i][k-1];
            stprob[i][k] = stprob[i][k-1];
        }
    }
    for(int i = 1 ; i<=N ; i++)
    {
        int inv = i*(i-1)/2;
        f[i][0] = stprob[i][inv];
        //printf("%lf ",f[i][0]);
        for(int k = 1 ; k<=inv ; k++)
        {
            int w = (int) f[i][k-1];
            int mn = min(k+w,inv);
            double K = (double) k;
            f[i][k] = (stprob[i][mn] - stprob[i][k]) - K*(sprob[i][mn] - sprob[i][k]) + f[i][k-1]*(sprob[i][inv] - sprob[i][mn]);
            //printf("%lf ",f[i][k]);
        }
        //printf("\n");
    }
}
int GetInv(int n)
{
    int cnt = 0;
    for(int i = 1 ; i<=n ; i++)
    {
        for(int j = 1 ; j<i ; j++)
        {
            if(a[j] > a[i]) cnt++;
        }
    }
    return cnt;
}
int main()
{
    PreCompute();
    int tc,t;
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int n,i;
        ll k;
        scanf("%d %lld",&n,&k);
        for(i = 1 ; i<=n ; i++) scanf("%d",&a[i]);

        int inv = GetInv(n);
        if(inv <= k) printf("0.000000000\n");
        else
        {
            if(k == 0) printf("%d.0000000\n",inv);
            else
            {
                int left = inv - (int) k;
                double ans = min((double) left , f[n][k-1]);
                printf("%0.7lf\n",ans);
            }
        }
    }
    return 0;
}
