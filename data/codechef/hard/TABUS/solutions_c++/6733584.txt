/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}

set<int>s[50005];
struct bus {
	int u, v, s, e;
	bool operator<(const bus &a) const{
		return s < a.s;
	}	
}b[100005];

void solve()
{
	int n, t, m;
	s(n); s(t); s(m);
	for(int i = 0; i < m; i++) {
		s(b[i].u); s(b[i].v); s(b[i].s); s(b[i].e);
		b[i].u--; b[i].v--;
	}
	sort(b, b + m);
	int l = 0, h = t - 1;
	set<int> :: iterator it;
	while(l <= h) {
		int mid = (l + h) / 2;
		rep(i, n) s[i].clear();
		s[0].insert(0);
		for(int i = 0; i < m; i++) {
			if(b[i].e > t) continue;
			it = s[b[i].u].lower_bound(b[i].s - mid);
			if(it != s[b[i].u].end() && *it <= b[i].s) {
				s[b[i].v].insert(b[i].e);
			}
		}
		if(!s[n - 1].empty()) h = mid - 1;
		else l = mid + 1;
	}
	++h;
	if(h == t) puts("-1");
	else printf("%d\n", h);
}

int main()
{
	int t = 1;
	//scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
