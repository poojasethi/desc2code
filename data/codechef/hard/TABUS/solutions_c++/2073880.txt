#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)1e5 + 10;
int u[maxn],v[maxn],s[maxn],e[maxn],p[maxn];
vector<int> T[maxn];
bool cmp(int i, int j) {
	return e[i] < e[j];
}
int main()
{
	#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif
	int n,t,m; cin >> n >> t >> m;
	for (int i = 0; i < m; i++) {
		scanf("%d%d%d%d",&u[i],&v[i],&s[i],&e[i]);
		--u[i];
		--v[i];
		p[i] = i;
	}
	sort(p,p + m,cmp);
	int l = -1;
	int r = t + 1;
	while(l < r - 1) {
		int mm = (l + r) >> 1;
		for (int i = 0; i < n; i++) {
			T[i].clear();
		}
		T[0].pb(0);
		for (int i = 0; i < m; i++) {
			int id = p[i];
			int U = u[id];
			int V = v[id];
			int S = s[id];
			int E = e[id];
			int j = upper_bound(all(T[U]),S) - T[U].begin() - 1;
			if (j < 0 || T[U][j] + mm < S) continue;
			T[V].pb(E);
		}
		if (T[n - 1].empty() || T[n - 1][0] > t) {
			l = mm;
		} else {
			r = mm;
		}
	}
	if (r > t) r = -1;
	printf("%d\n",r);
	return 0;
}
