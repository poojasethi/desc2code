#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<vector>
#define pb push_back
using namespace std;
#define N 100010
struct EDGE {
	int u,v,s,e;
	EDGE(){}
	EDGE(int _u,int _v,int _s,int _e):u(_u),v(_v),s(_s),e(_e){}
	bool operator < (const EDGE&o) const {
		return e < o.e;
	}
};
vector<EDGE> g;
vector<int> arr[N];
int n,t,m,u,v,s,e,l,r,mid,ans;
 
bool check(int pos)
{
	for (int i=0;i<n;i++) arr[i].clear();
	arr[0].pb(0);
	for (int i=0;i<m;i++) 
	{
		vector<int>::iterator it=lower_bound(arr[g[i].u].begin(),arr[g[i].u].end(),g[i].s-pos);
		if (it==arr[g[i].u].end()||*it>g[i].s) continue;
		if (g[i].v==n-1&&g[i].e<=t) return 1;
		arr[g[i].v].pb(g[i].e);
	}
	return 0;
}
 
int main()
{
	scanf("%d%d%d",&n,&t,&m);
	for (int i=0;i<m;i++)
	{
		scanf("%d%d%d%d",&u,&v,&s,&e);
		g.pb(EDGE(u-1,v-1,s,e));
		r=max(r,e);
	}
	sort(g.begin(),g.end());
	ans=-1;
	while (l<=r)
	{
		mid=(l+r)>>1;
		if (check(mid)) ans=mid,r=mid-1;
		else l=mid+1;
	}
	printf("%d\n",ans);
} 