#include <iostream>
#include <cmath>
#include <algorithm>
#include <limits>
#include <vector>
#include <bitset>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <time.h>
#include <map>
#include <stack>
#include <string>
#include <climits>
#include <ctime>
#include <fstream>
#include <sstream>
using namespace std;
#define LL long long
#define ULL unsigned long long
#define LD long double
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define ABS(x) ((x)<0?-(x):(x))
#define si(n) scanf("%d",&n)
#define sf(n) scanf("%f",&n)
#define ss(n) scanf("%s",n)
#define pnl printf("\n")
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define FORR(i,n) for(int i=(n);i>=0;i--)
#define DB(x) cout<<"\n"<<#x<<" = "<<(x)<<"\n";
#define CL(a,b) memset(a,b,sizeof(a))
#define GOLD ((1+sqrt(5))/2)
const double PI=3.14159265358979323846264338327950288419716939937510582097494459230;
void swaps (char *x,char *y){char temp;temp=*x;*x=*y;*y=temp;}
void swapi(int *a,int *b){int temp;temp=*a;*a=*b;*b=temp;}
ULL gcd(ULL a,ULL b){if(a==0)return b;if(b==0)return a;if(a==1||b==1)return 1;
if(a==b)return a;if(a>b)return gcd(b,a%b);else return gcd(a,b%a);}
#define LIM 1000000000
#define X first
#define Y second
#define MAXN 100010
typedef struct elem
{
	int U,V,s,e;
}elem;
int N,M,T;
elem E[MAXN];
vector< vector<int> > Event(MAXN);
bool calc(int Mi)
{
	FOR(i,1,N+1)
		Event[i].clear();
	Event[1].push_back(0);
	int e,v,s,u,z;
	FOR(i,0,M)
	{
		u = E[i].U;
		v = E[i].V;
		s = E[i].s;
		e = E[i].e;
		if(Event[u].empty())
			continue;
		if(Event[u][0]>s)
			continue;
		int z = int(Event[u].size())-1;
		if(Event[u][z]>s)
		{
			z = (lower_bound(Event[u].begin(),Event[u].end(),s) - Event[u].begin());
			if(Event[u][z]>=s)
				z-=1;
		}
		if((s-Event[u][z])<=Mi)
			Event[v].push_back(e);
	}
	return ((!Event[N].empty())&&(Event[N][0]<=T));
}
bool cmp(const elem a,const elem b)
{
	return a.e<b.e;
}
int main()
{
    si(N),si(T),si(M);
    FOR(i,0,M)
    {
	    cin>>E[i].U>>E[i].V>>E[i].s>>E[i].e;
    }
    int L = 0;
    int R = LIM;
    int Mi;
    int res=-1;
    sort(E,E+M,cmp);
    while(L<=R)
    {
    	Mi = (L+R)/2;
    	if(calc(Mi)){
    		res = Mi;
    		R = Mi-1;
	}
    	else
    		L = Mi+1;
    }
    cout<<res<<endl;
    return 0;
}

