#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cstring>
#include<algorithm>
#include<vector>

#define f first
#define s second
#define pb push_back

using namespace std;


typedef long long int ll;
typedef pair<int,int> pr;
typedef pair<pr,int> pp;

vector<int> adj[50002];
vector<pr> arr;
vector<pp> qu;


int n,t,m;

int func(int waitingtime)
{
	int i,sz,ans,s,e,pos,u,v,a,val;
	
	ans = 0;
	std::vector<int>::iterator low;
	adj[1].pb(0);
	sz = qu.size();
	for(i = 0;i < sz;i++)
	{
		e = qu[i].f.f;
		s = qu[i].f.s;
		pos = qu[i].s;
		u = arr[pos].f;
		v = arr[pos].s;

		a = s - waitingtime;
		if(a < 0)
			a = 0;
		low = lower_bound(adj[u].begin(),adj[u].end(),a);
		if(low != adj[u].end())
		{
			val = *low;
			if(val <= s)
			{
				adj[v].pb(e);						
			}
		}


	}

	if(adj[n].size() > 0)
		ans = 1;
	
	for(i = 1;i <= n;i++)
	{
		adj[i].clear();
	} 


	return ans;
}



int main()
{
	int u,v,s,e,cnt,l,r,mid,ans,i,sz;

	scanf("%d %d %d",&n,&t,&m);
	
	cnt = 0;
	for(i = 1;i <= m;i++)
	{
		scanf("%d %d %d %d",&u,&v,&s,&e);
		if(e <= t)
		{
			qu.pb(pp(pr(e,s),cnt));
			arr.pb(pr(u,v));
			cnt++;
		}
	}

	sort(qu.begin(),qu.end());	

	/*sz = qu.size();
	for(i = 0;i < sz;i++)
	{
		printf("%d %d %d\n",qu[i].f.f,qu[i].f.s,qu[i].s);		
	}*/
	

	l = 0;
	r = t;

	while((l+1) < r)
	{
		mid = (l+r)/2;

		if(func(mid))
		{
			r = mid;
		}		
		else
		{
			l  = mid + 1;
		}			
	}

	if(func(r-1))
	{
		ans = (r-1);
	}
	else if(func(r))
	{
		ans = r;
	}
	else
	{		
		ans = -1;
	}
	

	printf("%d\n",ans);

	return 0;

}
	
	
