#include <iostream>
#include <string>

using namespace std;

long long int power(long long int a,long long int b, long long int mod)
{
    long long int result = 1;
    string expo;
    while (b>0)
    {
        expo += (b & 1) ? "1" : "0";
        b >>= 1;
    }
    for (long long int i=expo.length();i>=0;i--)
    {
        result = (result * result)%mod;
        result *= (expo[i] == '1') ? a : 1;
        result %= mod;
    }

    return result;
}

int main()
{
    long long int T,upper,d,m,N;
    cin >> T;
    for (long long int t=0;t<T;t++)
    {
        cin >> upper >> d >> m >> N;

        long long int numSols = 0;

        long long int limit = (N-1 < upper) ? N-1 : upper;

        for (long long int x=0;x<=limit;x++)
            for (long long int y=0;y<=limit;y++)
                for (long long int z=0;z<=limit;z++)
                {
                    if ((power(x,d,N)+power(y,d,N)+power(z,d,N))%N == m%N)
                    {
                        //cout << x << " " << y << " " << z << endl;
                        long long int x1,y1,z1;
                        x1 = y1 = z1 = upper / N;
                        x1 += (x1 * N + x <= upper) ? 1 : 0;
                        y1 += (y1 * N + y <= upper) ? 1 : 0;
                        z1 += (z1 * N + z <= upper) ? 1 : 0;
                        numSols += (((x1%1000000007) * (y1%1000000007))%1000000007 * (z1%1000000007)) % 1000000007;
                        numSols %= 1000000007;
                    }
                }
        cout << numSols << endl;

        /*
        numSols = 0;
        for (long long int x=0;x<=upper;x++)
            for (long long int y=0;y<=upper;y++)
                for (long long int z=0;z<=upper;z++)
                {
                    if ((power(x,d,N)+power(y,d,N)+power(z,d,N))%N == m%N)
                    {
                        numSols++;
                        numSols %= 1000000007;
                    }
                }
        cout << numSols << endl;*/
    }

}
