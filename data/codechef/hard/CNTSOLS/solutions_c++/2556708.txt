#include <cmath>
#include <cstdio>
#include <iostream>


#define mod 1000000007
using namespace std;
/*
long long int power(long long int x, long long int y)
{
    long long int temp;
    if( y == 0)
        return 1;
    temp = power(x, y/2);
    if (y%2 == 0)
        return temp*temp;
    else
        return x*temp*temp;
}*/
long long int power(long long int n1, long long int n, long long int p)
{
    if(p == 0) return 1;
    if(p == 1) return n1%n;
    long long ans;
    if(!(p&1)) {
        ans = power(n1, n, p/2);
        ans = (ans * ans)%n;
        return ans;
    }
    else {
            long long val = (n1*power(n1, n, p-1))%n;
            return val;
    }
}
int main() {
int t, n, m, lim;
long long int upper, d, cnt, p;

scanf("%d", &t);

while (t--) {
scanf("%lld%lld%d%d", &upper, &d, &m, &n);
cnt = 0;

if(n == 1) {
        long long temp = upper+1;
        temp = (temp*(upper+1))%mod;
        temp = (temp*(upper+1))%mod;
        cout << temp << endl;
        continue;
   }

if (upper < n) {
lim = upper;
} else {
lim = n-1;
}

for (int i = 0; i <= lim; i++) {
for (int j = 0; j <= lim; j++) {
for (int k = 0; k <= lim; k++) {
p = (((power(i % n, n, d) + power(j % n, n, d)) % n) + power(k % n, n, d)) % n;

if (p == m) {
p = (((((upper - i)/n + 1) * ((upper - j)/n + 1)) % mod) * ((upper - k)/n + 1)) % mod;
cnt = cnt + p;
}
cnt = cnt % mod;
}
}
}
printf("%lld\n", cnt);
}

return 0;
}
