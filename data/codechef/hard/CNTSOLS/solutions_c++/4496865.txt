#include<cstdio>
#include<iostream>
using namespace std;
typedef long long int ll;
int fcal(int ,int ,int ,long int ,int );
ll FastPower(ll x,ll po,ll mod)
{
    ll y = 1%mod;
    x = x%mod;
    while(po > 0)
    {
        if(po%2 == 1) y = (y*x)%mod;
        po = po/2;
        x = (x*x)%mod;
    }
    return y;
}
int poweri[50];

int main()
{
int u,i,j,k,n,m,t,val,max;
long int d,high;
long long int ans,mod,t1,t2,t3,temp;
scanf("%d",&t);
mod=1000000007;
for(u=1;u<=t;u++)
{
  scanf("%li %li %d %d",&high,&d,&m,&n);
  max=(high>n-1)?n-1:high;
  ans=0;
  for(i=0;i<=max;i++)
  {
      ll I = i;
      ll D = d;
      ll N = n;
      ll TEMP = FastPower(I,D,N);
      int temp = (int) TEMP;
      poweri[i]= temp;
  }
  for(i=0;i<=max;i++)
  {
     for(j=0;j<=max;j++)
     {
         for(k=0;k<=max;k++)
         {
             val=fcal(i,j,k,d,n);

             if(val==m)
             {

                 t1=(high-i)/n+1;
                 t2=(high-j)/n+1;
                 t3=(high-k)/n+1;
                 temp=(t1*t2)%mod;
                 temp=(temp*t3)%mod;
                 ans=ans+temp;
                 if(ans>=mod)
                 {
                     ans=ans-mod;
                 }
             }
         }
     }
  }
  printf("%lld\n",ans);
}
return 0;
}

int fcal(int i,int j,int k,long int p,int n)
{
    int v1,v2,v3,tot;
    v1=poweri[i];
    v2=poweri[j];
    v3=poweri[k];
    tot=(v1+v2+v3)%n;
    return tot;
}
