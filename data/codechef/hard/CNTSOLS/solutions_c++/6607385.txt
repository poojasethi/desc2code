
/*
    Little Chief loves math. Most of all, he loves equations.
    He can solve any equation in the whole world. Recently he found one interesting and easy equation
    x1d+x2d+x3d = m (mod N)
    Where x1, x2 and x3 are non negative integer numbers.
    But, as always, this was easy enough for him and he solved it in just a few seconds.
    Now he wants you to do the same.
    Of course he understands that nobody is as good as he is,
    so he wants only the number of solutions of such equation which satisfies 0 = x1, x2, x3 = upper for given upper,
    d,m and N. As the answer might be very large, he asks you to find the answer modulo 1000000007.
*/
//   help this is learn modular operation
#include<stdio.h>
#include<iostream>
#define ULL unsigned long long
#define max1 1000000007
int array[41];
int POWER(int a,int b,ULL N)
{
    ULL ans=1,temp=a;
    if(b==0)
        return 1;
    if(a==0)
        return 0;
    while(b)
    {
        if(b&1)
            ans=(ans*temp)%N;
            temp=(temp*temp)%N;
        b>>=1;
    }
    return ans;
}
int main(void)
{
    ULL T,upper,N,d,m,ans,a,b,c;
    int x1,x2,x3,i,count;
    scanf("%llu",&T);
    while(T--)
    {
        scanf("%llu%llu%llu%llu",&upper,&d,&m,&N);
        ans=0;
        for(i=0;i<N;i++)
            array[i]=POWER(i,d,N);
        for(x1=0;x1<N;x1++)
        for(x2=0;x2<N;x2++)
        for(x3=0;x3<N;x3++)
            if((array[x1]+array[x2]+array[x3])%N==m)
                {
                        if( x1<=upper%N) a=(upper/N)+1;
						else a=upper/N;
						if( x2<=upper%N) b=(upper/N)+1;
						else b=upper/N;
						if( x3<=upper%N) c=(upper/N)+1;
						else c=upper/N;
						ans+=(((a*b)%max1)*c)%max1;
                }
        printf("%llu\n",(ans%max1));
    }
    return 0;
}
