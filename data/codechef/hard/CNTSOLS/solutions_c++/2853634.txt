#include <iostream>

using namespace std;
typedef long long ll;

ll up,d,n,m;
ll modulo = 1000000007;
ll cant[50];

ll exp(ll a, ll b, ll mod)
{
if(a == 0 && b == 0)return 1%mod;
if(a == 0)return 0;

if(b == 1)return a;
if(b == 0)return 1%mod;

ll res = exp(a,b/2,mod);

res = (res*res)%mod;

if(b&1)
res = (res*a);
res %= mod;

return res;
}

ll mul(ll a, ll b)
{
return (a*b)%modulo;
}

ll solve()
{
ll res = 0;

for(int i = 0; i < n; i++)
for(int j = 0; j < n ; j++)
for(int k = 0; k < n; k++)
if((i + j + k)%n == m%n)
{
ll total = (((cant[i]*cant[j])%modulo)*cant[k])%modulo;
res = (res + total)%modulo;
}

return res%modulo;
}

int main()
{
int t;
cin >> t;
//t = 1;
while(t--)
{
cin >> up >> d >> m >> n;
for(int i = 0; i < n; i++)
{
ll resto = exp(i,d,n);
if(i <= up)
cant[resto] += ((up- i)/n + 1);
}
cout << solve() << endl;
fill(cant, cant + n,0);

}
return 0;
}
