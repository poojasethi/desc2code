#include <iostream>
#include <vector>

using namespace std;
#define sizeN 111
#define MOD 1000000007

long long calculate_power(int a,int b,int mod)
{
    long long x=1;
    long long y=a;
    while(b!=0)
    {
        if(b%2==1)
        {
            x=(x*y)%mod;
        }
        y=(y*y)%mod;
        b/=2;
    }
    x%=mod;
    return x;
}

int main()
{
    //freopen("inp.txt","r",stdin);
    int t;
    scanf("%d\n",&t);
    int upper,d,m,N;
    int x_raised_d[sizeN];
    while(t--)
    {
        scanf("%d %d %d %d",&upper,&d,&m,&N);
        //printf("%d %d %d %d\n",upper,d,m,N);
        int solutions[sizeN];
        for(int i=0;i<N;i++)
        {
            solutions[i]=(upper/N)+(upper%N>=i);
        }
    long long ans=0;
    //find triplets whose sum mod N is m
    //count the number of x,y,z s satisfying equation and less than or equal to upper

    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
            for(int k=0;k<N;k++)
            {
                long long int sum=0;
                sum+=calculate_power(i,d,N);
                sum+=calculate_power(j,d,N);
                sum+=calculate_power(k,d,N);
                if(sum%N==m)
                {
                    long long tmp=solutions[i];
                    tmp=(tmp*solutions[j])%MOD;
                    tmp=(tmp*solutions[k])%MOD;
                    ans=(ans+tmp)%MOD;

                }
            }
        }
    }

    printf("%lld\n",ans);
    }
    return 0;
}
