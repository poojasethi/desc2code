#include <stdio.h>
#include <stdint.h>

unsigned long long int expRapideMod(unsigned long long int x, int d, int N)
{
	if(x > 1000000000)
	{
		x = x % N;
	}

	if (d == 0)
	{
		return 1;
	}
	else if(d == 1)
	{
		return x;
	}
	else if (d & 1)
	{
		return (x * expRapideMod(x*x, (d-1) >> 1, N)) % N;
	}
	else
	{
		return expRapideMod(x*x, d >> 1, N);
	}
}

int main()
{
	int T;
	scanf("%d",&T);

	for(int i=0;i<T;i++)
	{
		unsigned long long int upper;
		int d;
		int m;
		int N;
		scanf("%lld",&upper);
		scanf("%d",&d);
		scanf("%d",&m);
		scanf("%d",&N);

		if(N == 1)
		{
			printf("%lld\n",expRapideMod(upper+1,3,1000000007));
		}
		else if(d == 0)
		{
			if(3%N == m)
			{
				printf("%lld\n",expRapideMod(upper+1,3,1000000007));
			}
			else
			{
				printf("0\n");
			}
		}
		else
		{
			unsigned long long int nbSol = 0;

			int MAX = N;
			if(upper < N)
			{
				MAX = upper + 1;
			}
			for(int j=0;j<MAX;j++)
			{
				unsigned long long int x1;
				x1 = expRapideMod(j,d,N);

				for(int k=j;k<MAX;k++)
				{
					unsigned long long int x2;
					x2 = expRapideMod(k,d,N);

					for(int l=k;l<MAX;l++)
					{
						unsigned long long int x3;
						x3 = expRapideMod(l,d,N);

						if((x1+x2+x3)%N == m)
						{
							unsigned long long int nouvNb = 1;
							if(nbSol > 1000000007)
							{
								nbSol = nbSol % 1000000007;
							}

							if(j==k)
							{
								if(k==l)
								{
									nouvNb = ((upper-j+N)/N)*((upper-k+N)/N);
									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}
									nouvNb = nouvNb * ((upper-l+N)/N);

									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}

									nbSol += nouvNb;
								}
								else
								{
									nouvNb = ((upper-j+N)/N)*((upper-k+N)/N);
									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}
									nouvNb = nouvNb * 3 * ((upper-l+N)/N);

									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}

									nbSol += nouvNb;
								}
							}
							else
							{
								if(k==l)
								{
									nouvNb = ((upper-j+N)/N)*((upper-k+N)/N);
									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}
									nouvNb = nouvNb * 3 * ((upper-l+N)/N);

									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}

									nbSol += nouvNb;
								}
								else
								{
									nouvNb = ((upper-j+N)/N)*((upper-k+N)/N);
									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}
									nouvNb = nouvNb * 6 * ((upper-l+N)/N);

									if(nouvNb > 1000000007)
									{
										nouvNb = nouvNb % 1000000007;
									}

									nbSol += nouvNb;
								}
							}
						}
					}
				}
			}
			if(nbSol >= 1000000007)
			{
				nbSol = nbSol % 1000000007;
			}

			printf("%lld\n",nbSol);
		}
	}

	return 0;
}