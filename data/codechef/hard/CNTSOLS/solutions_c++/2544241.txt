
//by ks_dharanish
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <cassert>

using namespace std;

#define _CRT_SECURE_NO_DEPRECATE // suppress some compilation warning messages (for VC++ users)
// Shortcuts for "common" data types in contests
typedef long long ll;
typedef vector<int> vi;
typedef vector<double> di;
typedef list<int> li;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define REP(i, a, b) \
for (int i = int(a); i <int(b); i++) // a to b, and variable i is local!
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
//#define INF 2000000000 // 2 billion
// If you need to recall how to use memset:
#define MEMSET_INF 127 // about 2B
#define MEMSET_HALF_INF 63 // about 1B
#define pb push_back
#define square(x) x*x
#define IN(A,B,C) assert(B<=A && A<=C)
#define CLR(a) memset (a,0,sizeof(a))

ll bigmod(ll a, ll b, ll m)
{
    if(b==0) return 1%m;
    ll x = bigmod(a,b/2,m);
    x=(x*x)%m;
    if(b&1) x=(x*a)%m;
    return x;
}

ll MOD = 1000000007;

int main()
{
   // clock_t t;
   // t = clock();
   // freopen("input.txt","r",stdin);
   // freopen("output.txt","w",stdout);
    int T,  N,  m;
    int upper , d,temp,ans;
    scanf("%d",&T);
    ll cnt[50];
    IN(T,1,10);
    while(T--)
    {
        scanf("%d %d %d %d",&upper,&d,&m,&N);
        IN(upper,1,1000000000);
        IN(d,0,1000000000);
        IN(m,0,N-1);
        IN(N,1,40);

        CLR(cnt);

        //count how many i are there so that, i^d%
        REP(i,0,N)
        {
            temp = bigmod(i,d,N);
            if(i<=upper)
                cnt[temp]+=(upper-i)/N+1;
        }
        ans=0;
        REP(X,0,N)
            REP(Y,0,N)
                REP(Z,0,N)
                {
                    if((X+Y+Z)%N==m%N)
                    {
                        ans+=(cnt[X]*((cnt[Y]*cnt[Z])%MOD))%MOD;
                        ans%=MOD;
                    }
                }
        printf("%d\n",ans);
    }


   // cout<<endl;
   // t = clock() - t;
   // printf ("It took me %d clicks (%f seconds).\n",t,((float)t)/CLOCKS_PER_SEC);
return 0;
}

