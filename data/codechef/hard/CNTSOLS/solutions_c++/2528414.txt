#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);

#define P printf
#define PN printf("\n");
#define PR(a) printf("%d",a);
#define PRN(a) printf("%d\n",a);

using namespace std;

#define ll long long
#define X first
#define Y second
#define mp make_pair
#define pb push_back
#define sqr(a) ((a)*(a))
#define FR(i,n) for (ll i = 0; i < (n); i++)
#define DN(i,a) for(ll i = (a)-1; i >= 0; i--)
#define FOR(i,a,b) for (ll i = (a); i <= (b); i++)
#define DOWN(i,a,b) for(ll i = (a); i >= (b); i--)
#define FORV(i,a) for(typeof(a.begin()) i = a.begin(); i != a.end(); i++)
#define Set(a,c) memset(a, c, sizeof(a))
#define INF 1000000000
#define MAXN 100005
#define S(a) scanf("%d",&a);
#define SN(a) printf("%d\n",a);
#define SORT(a) sort(a.begin(),a.end());
#define RSORT(a) sort(a.rbegin(),a.rend());
#define print_array(a,i,n) for(i=0;i<n;i++)cout<<a[i]<<" "; cout<<"\n";
#define print_matrix(a,i,j,row,col)FOR(i,0,row-1){FOR(j,0,col-1)cout<<a[i][j];cout<<"\n";}
#define sz(a) a.size()
#define mem(a,val) memset(a,val,sizeof(a));typedef pair<ll, ll> PII;
#define MOD 1000000007
ll modulo(ll a,ll b,ll c){
    long long x=1,y=a; // long long is taken to avoid overflow of llermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}

int main ()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "rt", stdin);
	freopen("output.txt", "wt", stdout);
#endif
ll t,i,j,k,n,m,val,row,col,upper,N,d;

scanf("%lld",&t);
while(t--)
{
  scanf("%lld%lld%lld%lld",&upper,&d,&m,&N);
ll ans=0;
ll limit = min(upper,N-1);

   FOR(i,0,limit)
	 FOR(j,0,limit)
	    FOR(k,0,limit)
	    {
	    	//cout<<i<<" "<<j<<" "<<k<<"\n";
	    	//cout << "mod  ";
	    	//cout<<modulo(i,d,N)<<" "<<modulo(j,d,N)<<" "<<modulo(k,d,N)<<"\n";
	    	ll a=modulo(i,d,N);
	    	ll b=modulo(j,d,N);
	    	ll c=modulo(k,d,N);

	    	if(  ((a+b)%N+c)%N == m )
			{
				ll d=(((upper-i)/N)+1)%MOD;
				ll e=(((upper-j)/N)+1)%MOD;
				ll f=(((upper-k)/N)+1)%MOD;

	    	    ans += (  ( d*e )%MOD * f)%MOD;
			}

	    	ans=(ans)%MOD;
	    }
cout<<ans<<endl;
}
 return 0;
}
