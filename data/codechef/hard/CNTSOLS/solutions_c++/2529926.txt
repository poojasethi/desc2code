#include <iostream>
#define MOD 1000000007
//#include<stdio.h>
// property used -- a^b mod m=(a%m)^b mod m
using namespace std;

long long pow[45];
void solve();
int n,mod;

long long upper,power;

long long ans=0;

long long expo(int a,long long b,int mod){
  long long r;
  if(b==0) return 1;
  r = expo(a,b/2,mod);
  r = (r*r)%mod;
  if(b%2) r = (r*a)%mod;
  return r;
}

long long no_of_sol(int x)
{
    long long sol=upper/mod+ (x <= (upper % mod));

    return sol;
}

void process(int i,int j,int k)
{
    ans=ans%MOD + (((no_of_sol(i)%MOD)*(no_of_sol(j)%MOD)%MOD)*(no_of_sol(k)%MOD))%MOD;
    ans=ans%MOD;
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    solve();

    return 0;
}

void solve()
{
    ans=0;

    scanf("%lld%lld%d%d",&upper,&power,&n,&mod);

    if(power==0)
    {
        for(int i=0;i<mod;i++)
        pow[i]=1;
    }

    else
    {
        for(int i=0;i<mod;i++)
        {
            pow[i]=expo(i,power,mod);
        }
    }

  /* for(int i=0;i<mod;i++)
    printf("%d ",pow[i]);*/

    for(int i=0;i<mod;i++)
    {
        for(int j=0;j<mod;j++)
        {
            for(int k=0;k<mod;k++)
            {
                if((pow[i]+pow[j]+pow[k])%mod==n)

                process(i,j,k);
            }
        }
    }

    printf("%lld\n",ans);

}
