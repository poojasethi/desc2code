
/*
AUTHOR : VUAcoder
LANGUAGE : C++
PROBLEM :
*/
#include<iostream>
#include<stdio.h>
#include<math.h>
#include<string.h>
#include<algorithm>
#include<string>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<sstream>
#include<set>
#include<fstream>
#include<cfloat>
using namespace std;
#define PI (2.*acos(0.))
#define EPS 1e-9
#define ZERO(x)     (fabs(x) < EPS)
#define EQ(a,b)     (ZERO((a)-(b)))
#define LESSER(a,b) (!EQ(a,b) && (a)<(b))
#define GREATER(a,b)(!EQ(a,b) && (a)>(b))
#define GETBIT(x,i) (x&(1<<i))
#define SETBIT(x,i) (x|(1<<i))
#define FORab(i,a,b) for(typeof(b) i=(a);i<=(b);i++)
#define FOR(i,n) FORab(i,0,(n)-1)
#define FOR1(i,n) FORab(i,1,n)
#define FORit(it,a) for( typeof((a).begin()) it=(a).begin();it!=(a).end();it++)
#define all(a) (a).begin(),(a).end()
#define ms(a,b) memset((a),(b),sizeof(a))
#define pb push_back
#define sz(a) (int)a.size()
#define in(a,b,c) ((a) <= (b) && (b) <= (c))
#define px first
#define py second
//#define __eXYZ__
#ifdef __eXYZ__
//USE THESE FOR DEBUG
#define RFILE(a)    freopen(a, "r", stdin)
#define WFILE(a)    freopen(a, "w", stdout)
#define _r(arg) {dbg,arg; dbg.start(); }
#define _n(arg...) {_r(#arg " ==> ");dbg,arg; }
#define _(arg...) { _n(arg); dbg.nl(); }
#else
#define RFILE(a)
#define WFILE(a)
#define _n(arg) {}
#define _n(arg...) {}
#define _(arg...) {}
#endif


typedef long long  LL;
typedef vector<int>   vi;
typedef pair<LL,LL>  pii;

template<class A, class B> ostream &operator<<(ostream& o, pair<A,B>& p) { //pair print
	return o << "("<<p.first<<", "<<p.second<<")";
}

template<class T> ostream& operator<<(ostream& o, const vector<T>& v) { //vector print
	o << "{";FORit(it, v) o << *it << ", "; return o << "}";
}

struct debugger
{
	ostream &out; bool first;
	void start() { first = true; }
	debugger(ostream& out):out(out) {start();}
	void nl() { out << '\n'; start(); }
	// Taken from rudradevbasak
	template<class T> debugger& operator,(T& v) {
		if(first) first = false; else out << ", ";
		out << v; return *this;
	}
	template<class T> debugger& operator,(pair<T*,int> arr) { //array print
		out << "{";
			FOR(i, arr.second) { out << arr.first[i] << ", "; }
		out << "}";
		return *this;
	}
} dbg(cerr);
struct wall
{
	LL x1,y1,x2,y2;
}wl[1010];
vector<pii>rows;
vector<pii>cols;
int vis[2010][2010],w;
void colBuild()
{
	cols.clear();
	set<pii>Xs;
	FOR(i,w)
	{
		Xs.insert(pii(wl[i].x1,1));
		Xs.insert(pii(wl[i].x2,2));
	}
	Xs.insert(pii(1000000000000000LL,1));
	pii last(-1000000000000000LL,2);
	FORit(it,Xs)
	{
		if(it->second==1&&last.second==1)
		{
			cols.pb(pii(last.first,it->first-1));
		}
		if(it->second==2&&last.second==1)
		{
			cols.pb(pii(last.first,it->first));
		}
		if(it->second==1&&last.second==2)
		{
			if(last.first+1<=it->first-1)cols.pb(pii(last.first+1,it->first-1));
		}
		if(it->second==2&&last.second==2)
		{
			cols.pb(pii(last.first+1,it->first));
		}
		last=*it;
	}
}
void rowBuild()
{
	rows.clear();
	set<pii>Ys;
	FOR(i,w)
	{
		Ys.insert(pii(wl[i].y1,1));
		Ys.insert(pii(wl[i].y2,2));
	}
	Ys.insert(pii(1000000000000000LL,1));
	pii last(-1000000000000000LL,2);
	FORit(it,Ys)
	{
		if(it->second==1&&last.second==1)
		{
			rows.pb(pii(last.first,it->first-1));
		}
		if(it->second==2&&last.second==1)
		{
			rows.pb(pii(last.first,it->first));
		}
		if(it->second==1&&last.second==2)
		{
			if(last.first+1<=it->first-1)rows.pb(pii(last.first+1,it->first-1));
		}
		if(it->second==2&&last.second==2)
		{
			rows.pb(pii(last.first+1,it->first));
		}
		last=*it;
	}
}

string ins[1010];
LL dis[1010];
int main()
{
	ios_base::sync_with_stdio(0);
	RFILE("input.txt");
	int cn=1,t;
	LL n,m;
	cin>>n;


		LL x=0,y=0;
		wl[0]=(wall){0,0,0,0};
		w=1;
		FOR1(i,n)
		{
			_(x,y);
			cin>>ins[i]>>dis[i];
			if(ins[i][0]=='L')
			{
				wl[i]=(wall){x-dis[i],y,x-1,y};
				x-=dis[i];
			}
			else if(ins[i][0]=='R')
			{
				wl[i]=(wall){x+1,y,x+dis[i],y};
				x+=dis[i];
			}
			else if(ins[i][0]=='U')
			{
				wl[i]=(wall){x,y+1,x,y+dis[i]};
				y+=dis[i];
			}
			else if(ins[i][0]=='D')
			{
				wl[i]=(wall){x,y-dis[i],x,y-1};
				y-=dis[i];
			}
			w++;
		}
		rowBuild();
		colBuild();
		_("here");
		int stx,sty;
		FOR(i,sz(rows))
			FOR(j,sz(cols))
			{
				_(rows[i],cols[j]);
				if(rows[i].first==0&&cols[j].first==0)
				{
					stx=i;
					sty=j;
				}
			}

		vis[stx][sty]=1;
		FOR1(i,n)
		{
			LL ghor=0;
			_(stx,sty);
			_(wl[i].x1,wl[i].y1,wl[i].x2,wl[i].y2);
			_(rows[stx]);
			_(cols[sty]);
			if(ins[i][0]=='D')
			{
				while(wl[i].y1<rows[stx].first)
				{
					if(vis[stx][sty]==0)
					{
						vis[stx][sty]=1;
						ghor+=rows[stx].second-rows[stx].first+1;
					}
					stx--;
				}
				if(vis[stx][sty]==0)
				{
					vis[stx][sty]=1;
					ghor+=rows[stx].second-rows[stx].first+1;
				}
				cout<<ghor<<endl;
			}
			else if(ins[i][0]=='U')
			{

				while(wl[i].y2>rows[stx].second)
				{
					if(vis[stx][sty]==0)
					{
						vis[stx][sty]=1;
						ghor+=rows[stx].second-rows[stx].first+1;
					}
					stx++;
				}
				if(vis[stx][sty]==0)
				{
					vis[stx][sty]=1;
					ghor+=rows[stx].second-rows[stx].first+1;
				}
				cout<<ghor<<endl;
			}
			else if(ins[i][0]=='L')
			{
				while(wl[i].x1<cols[sty].first)
				{
					if(vis[stx][sty]==0)
					{
						vis[stx][sty]=1;
						ghor+=cols[sty].second-cols[sty].first+1;
					}
					sty--;
				}
				if(vis[stx][sty]==0)
				{
					vis[stx][sty]=1;
					ghor+=cols[sty].second-cols[sty].first+1;
				}
				cout<<ghor<<endl;
			}
			else if(ins[i][0]=='R')
			{
				while(wl[i].x2>cols[sty].second)
				{
					if(vis[stx][sty]==0)
					{
						vis[stx][sty]=1;
						ghor+=cols[sty].second-cols[sty].first+1;
					}
					sty++;
				}
				if(vis[stx][sty]==0)
				{
					vis[stx][sty]=1;
					ghor+=cols[sty].second-cols[sty].first+1;
				}
				cout<<ghor<<endl;
			}
		}


	return 0;
}









//--This portion is kept intentionally blank :p









//end of code

