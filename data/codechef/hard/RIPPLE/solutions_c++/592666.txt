#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#define inf 1000000000
using namespace std;
typedef long long L;
typedef unsigned long long UL;
const int size=100005;
int t,n;
char A[size+1],B[size+5];
int rA[size+5],rB[size+5];

void find(int R[],char A[]){

    int k=0,car,say=0;
    for(int i=0;i<n;i++)say+=(A[i]=='1');
    k=say;
    for(int i=n-1,j=0;i>=0;i--,j++){
        R[j]=k%2;
        car=k/2;
        say-=(A[i]=='1');
        k=(say+car);
    }
    //cout<<endl<<k<<endl;
    for(int j=n;k;j++){
        R[j]=k%2;
        k/=2;
    }

}

int main()
{

    cin>>t;
    for(int i=1;i<=t;i++){
        cin>>n;
        cin.getline(A,size,'\n');
        cin.getline(A,size,'\n');

        cin.getline(B,size,'\n');

        memset(rB,0,sizeof(rB));
        memset(rA,0,sizeof(rA));

        find(rA,A);
        find(rB,B);

        /*for(int j=0;j<=n+5;j++)cout<<rB[j];
        cout<<endl;
        for(int j=0;j<=n+5;j++)cout<<rA[j];
        cout<<endl;*/

        int car=0;
        for(int j=0;j<=n+5;j++){
            if(rB[j]-car>=rA[j]){
                rB[j]=rB[j]-car-rA[j];
                car=0;
            }
            else{
                rB[j]=rB[j]+2-car-rA[j];
                car=1;
            }
        }
        int j=n+5;
        while(!rB[j])j--;
        for(;j>=0;j--)cout<<rB[j];
        cout<<endl;

    }


    return 0;
}
