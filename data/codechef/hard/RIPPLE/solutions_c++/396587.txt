#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <map>
#include <queue>
#include <sstream>
#include <numeric>
#include <functional>
#include <set>
#include <cmath>
#include <stack>
#ifdef HOME_PC
#include <ctime>
#endif
using namespace std;

#pragma comment(linker,"/stack:16000000")
#pragma warning (disable : 4996)

#define ALL(v) v.begin(),v.end()
#define SZ(v) (int)v.size()
#define mset(A,x) memset((A),(x),sizeof(A))
#define FOR(i,start,N) for(int i=(start);i<(N);++i)
#define FORSZ(i,start,v) FOR(i,start,SZ(v))
#define REPSZ(i,v) FORSZ(i,0,v)
#define FORE(i,start,N) FOR(i,start,N+1)
#define make_unique(v) v.resize(unique(ALL(v))-v.begin())
#define debug(x) cout<<#x<<" = "<<x<<endl;
#define adebug(A,N) FOR(i,0,N) cout<<#A<<"["<<i<<"] = "<<A[i]<<endl;
#define adebug2d(a,n,m) FOR(i,0,n) { FOR(j,0,m) { cout<<a[i][j]<<" ";} cout<<endl;}
#define vdebug(v) REPSZ(i,v) cout<<#v<<"["<<i<<"] = "<<v[i]<<endl;
#define selfx(x,f,a) x = f(x,a)
#define sqr(x) ((x)*(x))


typedef pair<int,int> pii;
typedef long long i64;
typedef vector<int> VI; typedef vector< vector<int> > VVI;
typedef vector<string> VS;

const int inf = 1<<25;
const double eps = 1e-9;

const int MAXN = 102000;
char a[MAXN],b[MAXN];
char c[MAXN];
int n;

struct BigInt
{
	int a[MAXN];
	int size;
	BigInt() { mset(a,0); size = 1; a[0] = 0;}
	
	BigInt(char x[],int n) { mset(a,0); size = n; FOR(i,0,size) a[i] = x[n-i-1]-'0';}

	BigInt(int b) {
		mset(a,0);
		size = 0;
		do 
		{
			a[size++] = b&1;
			b>>=1;
		} while (b>0);
	}

	BigInt operator+(const BigInt& B)
	{
		BigInt ret;
		int n = max(B.size,size);
		int carry = 0;
		for(int i = 0; i < n; ++i)
		{
			ret.a[i] = a[i]+B.a[i]+carry;
			carry = ret.a[i]>1;
			if(ret.a[i]>1)
				ret.a[i]&=1;
		}
		ret.size = n;
		if(carry)
		{
			ret.size++;
			ret.a[n] = 1;
		}
		return ret;
	}
	BigInt operator-(const BigInt& B)
	{
		BigInt ret;
		int n = max(B.size,size);
		int carry = 0;
		for(int i = 0; i < n; ++i)
		{
			ret.a[i] = a[i]-B.a[i]-carry;
			if(ret.a[i]< 0)
			{
				carry = 1;
				ret.a[i]+=2;
			}
			else
				carry = 0;
		}
		ret.size = n;
		for(;ret.size>1 && ret.a[ret.size-1] == 0; --ret.size);
		return ret;
	}
	BigInt mul2()
	{
		BigInt ret;
		ret.size = size+1;
		ret.a[0] = 0;
		memcpy(&ret.a[1],a,size*sizeof(int));
		return ret;
	}
	void print()
	{
		for(int i = size-1;i>=0;--i)
			printf("%d",a[i]);
		printf("\n");
	}
};


/**
16 -> 32	 =  (2^5-2^4)*2
 = (24-11)*2 + (32-24)*2 - (16-11)*2

11 -> 24
 = (16 -> 32) + (11->16) - (24->32)
 = (24-11)*2 + [ (11->16) - (16-11)*2 ] - [ (24->32) - (32-24)*2 ]
 
 */

int main()
{
	int tt;
	scanf("%d",&tt);
	for(int cas = 1;cas<=tt;++cas)
	{
		scanf("%d %s %s",&n,&a,&b);

		BigInt A(a,n), B(b,n);
		BigInt C = (B-A).mul2();

		
		int oa = count(a,a+n,'1');
		int ob = count(b,b+n,'1');
		C = C + BigInt(oa) - BigInt(ob);
		C.print();
	}
	return 0;
}

