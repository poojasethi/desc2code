#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

#define MAXN 200010

char A[MAXN],B[MAXN];
int ra[MAXN],rb[MAXN],ans[MAXN];

int main() {
	int nt,n,lastA,lastB,carry,borrow;
	scanf("%d",&nt);
	while (nt--) {
		scanf("%d %s %s",&n,A,B);

		memset(ans,0,sizeof(ans));
		memset(ra,0,sizeof(ra));
		memset(rb,0,sizeof(rb));		

		lastA = lastB = 0;		

		for (int i=0; i<n; i++) {
			if (A[i] == '1') ra[i] = ++lastA;
			else ra[i] = lastA;

			if (B[i] == '1') rb[i] = ++lastB;
			else rb[i] = lastB;
		}

		for (int i=0; i<n/2; i++) {
			int aux;
			aux = ra[i];	ra[i] = ra[n-1-i];	ra[n-1-i] = aux;
			aux = rb[i];	rb[i] = rb[n-1-i];	rb[n-1-i] = aux;
		}	
		
		carry = 0;
		for (int i=0; i<MAXN; i++) {
			rb[i] += carry;
			carry = rb[i] / 2;
			rb[i] %= 2;
		} 

		carry = 0;
		for (int i=0; i<MAXN; i++) {
			ra[i] += carry;
			carry = ra[i] / 2;
			ra[i] %= 2;
		}		

		borrow = 0;
		for (int i=0; i<MAXN; i++) {
			if (borrow) {
				if (rb[i]) { rb[i] = 0; borrow = 0; }
				else rb[i] = 1;
			}

			if (rb[i] >= ra[i])
				ans[i] = rb[i] - ra[i];
			else {
				ans[i] = 1; borrow = 1;
			}
		}

		int k = MAXN-1;
		while (ans[k] == 0) k--;
		for (; k>=0; k--)
			printf("%d",ans[k]);
		printf("\n");		

	}

	return 0;
}
