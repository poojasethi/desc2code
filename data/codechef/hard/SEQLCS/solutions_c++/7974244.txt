/*
Farsid
BUET
*/

#include <bits/stdc++.h>
using namespace std;

#define filer() freopen("far.in","r",stdin)
#define filew() freopen("out.txt","w",stdout)

#define SET(a, x) memset((a), (x), sizeof(a))
#define ll long long
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define i64 ll
#define IN(A, B, C)  ((B) <= (A) && (A) <= (C))
#define MAX
#define xx first
#define yy second

typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef vector<ll> VL;
typedef pair<int,int> PII;
typedef pair<ll,ll> PLL;
const int inf=0x20202020;
const ll mod=1000000007;
const double eps=1e-9;
const double pi=3.1415926535897932384626;

const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll powmod(ll a,ll b,ll mod) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}


template<class X>void debug(vector<X>&v){for(int i=0;i<v.size();i++)cout<<v[i]<<" ";cout<<endl;}

int A[22],trans[(1<<17)+10][22];
i64 DP[22][(1<<17)+10];
int N,K,L;

i64 f(int left,int bit)
{
	if(DP[left][bit]!=-1)return DP[left][bit];
	int mask;
	if(left==0){
		int cnt=0;
		for(int i=0;i<N;i++){
			mask=(1<<i);
			if(mask & bit){
				cnt++;
			}
		}
		if(cnt==L)return 1;
		return 0;
	}
	i64 ans=0,a;
	for(int val=1;val<=K;val++){
		a=f(left-1,trans[bit][val]);
		ans+=a;
		ans%=mod;
	}
	return DP[left][bit]=ans;

}


int main()
{
    //filer();
	//freopen("far.in","r",stdin);
	//freopen("gadha.out","w",stdout);
    int i,j,k ,T,cas=0;
    scanf("%d",&T);
	while(T--){
		SET(trans,0);
		SET(DP,-1);
		scanf("%d%d%d",&N,&K,&L);
		for(i=0;i<N;i++)scanf("%d",&A[i]);
		int mask,lcsdp[20],curdp[20];
		for(int cur=0;cur<(1<<N);cur++){
			for(int i=0;i<N;i++){
				mask=(1<<i);
				if(i==0){
					if(mask & cur)lcsdp[i]=1;
					else lcsdp[i]=0;
				}
				else{
					lcsdp[i]=lcsdp[i-1];
					if(mask & cur)lcsdp[i]++;
				}
			}
			for(int val=1;val<=K;val++){
				int state=0;
				SET(curdp,0);
				for(i=0;i<N;i++){
					if(A[i]==val){
						if(i==0)curdp[i]=1;
						else curdp[i]=lcsdp[i-1]+1;
					}
					else {
						if(i==0)curdp[i]=lcsdp[i];
						else curdp[i]=max(curdp[i-1],lcsdp[i]);
					}
					mask=(1<<i);
					if(i==0){
						if(curdp[i])state|=mask;
					}
					else {
						if(curdp[i]>curdp[i-1])state|=mask;
					}
				}
				trans[cur][val]=state;

			}
		}

		i64 ans=f(N,0);
		printf("%lld\n",ans);
	}
    return 0;
}
/*Test Cases


*/
