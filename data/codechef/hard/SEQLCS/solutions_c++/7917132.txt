/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

int next[17][1<<16],a[20],n,k,l;
LLD dp[17][1<<16];
int lcs(int no,int curlcs)
{
	int lc[2][20]={0},i;
	lc[0][0]=0;
	for(i=1;i<=n;i++)
	{
		if(curlcs&(1<<(i-1)))
			lc[0][i]=lc[0][i-1]+1;
		else
			lc[0][i]=lc[0][i-1];
	}
	int ret=0;
	for(i=1;i<=n;i++)
	{
		if(no==a[i-1])
			lc[1][i]=lc[0][i-1]+1;
		else
			lc[1][i]=max(lc[1][i-1],lc[0][i]);
		if(lc[1][i]>lc[1][i-1])
			ret|=(1<<(i-1));
	}
	return ret;
}
LLD solve(int pos,int curlcs)
{
	if(pos==n)
	{
		int curl=0;
		while(curlcs)
		{
			if(curlcs&1)
				curl++;
			curlcs/=2;
		}
		return curl==l;
	}
	LLD &ret=dp[pos][curlcs];
	if(ret!=-1)
		return ret;
	ret=0;
	for(int i=1;i<=k;i++)
		ret+=solve(pos+1,next[i][curlcs]);
	ret%=MOD;
	return ret;
}
int main()
{
	int t;
	si(t);
	while(t--)
	{
		memset(dp,-1,sizeof(dp));
		memset(next,0,sizeof(next));
		int i,j;
		si2(n,k);
		si(l);
		REP(i,n)
			si(a[i]);
		for(i=1;i<=k;i++)
			for(j=0;j<(1<<n);j++)
				next[i][j]=lcs(i,j);
		cout<<solve(0,0)<<endl;
	}
	return 0;
}
