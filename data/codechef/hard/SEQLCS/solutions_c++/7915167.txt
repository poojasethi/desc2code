#include<iostream>
#include<cmath>
#include<algorithm>
#include<string>
#include<string.h>
#include<vector>
#include<set>
#include<map>
#include<cstdio>
#include<queue>
#include<sstream>
#include<list>
#include<bitset>
#include<ctime>
//#incude<map>
using namespace std;
 
typedef long long Int;
#define FOR(i,a,b) for(int i=(a); i<=(b);++i)
#define mp make_pair
#define pb push_back
#define sz(s) (int)((s).size())
const int inf = 1000000000;
const int MOD = 1000000007;
//const Int M = (1LL<<60);
 
inline void add(int &x, int y) {
    x+=y;if(x>=MOD)x-=MOD;
}
 
 
int n,k,l;
 
int h(vector<int>&a) {
    Int ans=1;
    FOR(i,0,sz(a)-1) if(i==sz(a)-1 || a[i]!=a[i+1])ans=101*ans+a[i]+47;else
        ans*=105;
    return ans;
}
map<int, int> mem[17];
int nx[18][18];
 
int get(int pos, vector<int> &a) {
    //FOR(i,0,sz(a)-1) cerr<<a[i]<<" ";cerr<<"   "<<pos<<endl;
    if(a[l+1]<=n) return 0;
    int inx = l - (n-pos+1);
    if(inx>=0 && a[inx]+(n-pos+1)>n) return 0;
    if(pos==n+1) {
        return a[l]<=n;
    }
 
    Int aupd = h(a);
    if(mem[pos].count(aupd)) return mem[pos][aupd];
 
    int ans=0;
    vector<int> aa;
    FOR(val,1,k) {
        aa = a;
        FOR(len,0,l) if(a[len]<=n) {
            int good = nx[a[len]+1][val];
            aa[len+1]=min(aa[len+1], good);
        }
        add(ans, get(pos+1, aa));
    }
 
    //for(int i=1; i<sz(a); ++i) if(a[i]==a[i-1]) a[i-1]=n+1;
    return mem[pos][aupd]=ans;
}
 
int a[22];
int main() {
    //freopen("input.txt", "r", stdin);//freopen("output.txt", "w", stdout);
 
    int t;cin>>t;
    while(t--) {
        cin>>n>>k>>l;
        FOR(i,1,n) cin>>a[i];
        FOR(i,1,16) nx[n+1][i]=n+1;
        for(int i=n; i>=1; --i){
            FOR(j,1,16) nx[i][j]=nx[i+1][j];
            nx[i][a[i]]=i;
        }
        FOR(i,0,16) mem[i].clear();
        vector<int> noww(l+2, n+1);
        noww[0]=0;
        cout<<get(1, noww)<<endl;
    }
}