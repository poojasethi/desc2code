#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100005

template <class T> inline void Min(T &a,T b){if(a>b)a=b;}
template <class T> inline void Max(T &a,T b){if(a<b)a=b;}

int a[17],dp[17][1<<16],bit[1<<16],L,K,n;
vi pos[17];
int solve(int x,int s){
    if(x==n){
        return bit[s]==L?1:0;
    }
    if(bit[s]+n-x<L)return 0;
    int &ret=dp[x][s];
    if(ret+1)return ret;
    ret=0;
    for(int i=1;i<=K;i++){
        int ns=s;
        for(int j=pos[i].size()-1;j>=0;j--){
            for(int k=pos[i][j];k<n;k++){
                if(ns>>k&1){
                    ns^=(1<<k);
                    break;
                }
            }
            ns|=(1<<pos[i][j]);
        }
        ret+=solve(x+1,ns);
        if(ret>=mod)ret-=mod;
    }
    return ret;
}
int main()
{
    int T,i,j,k,ca=0,m;
    for(i=1;i<1<<16;i++)bit[i]=bit[i>>1]+(i&1);
    scanf("%d",&T);
    while(T--){
        scanf("%d%d%d",&n,&K,&L);
        for(i=1;i<=K;i++)pos[i].clear();
        for(i=0;i<n;i++)scanf("%d",&j),pos[j].pb(i);
        memset(dp,-1,sizeof(dp));
        int ans=solve(0,0);
        printf("%d\n",ans);
    }
    return 0;
}