#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<cstring>
using namespace std;
#define mod 1000000007

int lcs,k,n;
int dp1[20][(1<<18)];
long long int dp3[20][(1<<18)];
int a[20];
long long int func2(int l,int n,int mask)
{
if(l<=0)
{
int temp=0;
for(int i=0;i<n;i++)
if(mask&(1<<i))
temp++;
return max(0,(int)(temp==lcs));
}
if(dp3[l][mask]!=-1)
return dp3[l][mask];
long long int temp=0;
for(int i=1;i<=k;i++)
temp=(temp+func2(l-1,n,dp1[i][mask]))%mod;
return dp3[l][mask]=temp;
}

long long int func1(int *a,int n)
{
for(int i=1;i<=k;i++)
for(int j=0;j<(1<<n);j++)
{
int temp=0;
int dp2[n+2];
int dp4[n+2];
fill(dp2,dp2+n+2,0);
fill(dp4,dp4+n+2,0);
for(int l=0;l<n;l++)
{
if(j&(1<<l))
temp++;
dp2[l+1]=temp;
}
temp=0;
for(int l=1;l<=n;l++)
{
if(i==a[l-1])
dp4[l]=1+dp2[l-1];
else
dp4[l]=max(dp4[l-1],dp2[l]);
if(dp4[l]>dp4[l-1])
temp=temp|(1<<(l-1));
}
dp1[i][j]=temp;
}
memset(dp3,-1,sizeof(dp3));
return func2(n,n,0);
}

int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
while(t--)
{
cin>>n>>k>>lcs;
for(int i=0;i<n;i++)
cin>>a[i];
cout<<func1(a,n)<<endl;
}
return 0;
}
