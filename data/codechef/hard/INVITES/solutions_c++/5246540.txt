#include<iostream>
#include<cstdio>
#include<vector>
#include<cassert>
using namespace std;
int maxn=100002;
long long mod=1000000007;
vector<long long> a(maxn),b(maxn),c(maxn),d(maxn),mark;
vector<bool> vis1,vis2;
vector<vector<int> > adjlst;
int k=0;
void dfs1(int x,int p=0)
{
	vis1[x]=1;
	bool leaf=1;
	for(int i=0;i<(int)adjlst[x].size();++i)
	{
		int nxt=adjlst[x][i];
		if(nxt!=p)
		{
			if(vis1[nxt])
			{
				if(mark[x]==0)
				{
					k++;
					mark[x]=1;
					mark[nxt]=-1;
				}
			}
			else
			{
				leaf=0;
				dfs1(nxt,x);
			}	
		}
	}
}
void dfs2(int x,int p=0)
{
	vis2[x]=1;
	bool leaf=1;
	a[x]=1;
	b[x]=1;
	c[x]=1;
	d[x]=1;
	for(int i=0;i<(int)adjlst[x].size();++i)
	{
		int nxt=adjlst[x][i];
		if(nxt!=p)
		{
			if(!vis2[nxt])
			{
				dfs2(nxt,x);
				leaf=0;
				a[x]*=b[nxt];
				a[x]%=mod;
				b[x]*=(a[nxt]+b[nxt])%mod;
				b[x]%=mod;
				c[x]*=d[nxt];
				c[x]%=mod;
				d[x]*=(c[nxt]+d[nxt])%mod;
				d[x]%=mod;
			}
		}
	}
	if(leaf)
	{
		a[x]=1;
		b[x]=1;
		c[x]=1;
		d[x]=1;	
	}
	if(mark[x]>0)
	{
		d[x]=0;
	}
	if(mark[x]<0)
	{
		a[x]+=mod;
		a[x]-=c[x];
		a[x]%=mod;
	}
	//cerr<<x<<" "<<a[x]<<" "<<b[x]<<" "<<c[x]<<" "<<d[x]<<endl;
}
long long doit()
{
	int n;
	long long ans=1;
	scanf("%d",&n);
	adjlst.clear();
	adjlst.resize(n+1);
	vector<int> arr(n+1);
	for(int i=0;i<=n;++i)arr[i]=0;
	for(int i=1;i<=n;++i)
	{
		int p;
		scanf("%d",&p);
		arr[i]=p;
 		if(arr[p]!=i)
		{
		adjlst[i].push_back(p);
		adjlst[p].push_back(i);
		}
	}
	vis1.resize(n+1);
	vis2.resize(n+1);
	mark.resize(n+1);
	for(int i=1;i<=n;++i)
	{
		vis1[i]=0;
		vis2[i]=0;
		mark[i]=0;
	}
	for(int i=1;i<=n;++i)
	if(!vis2[i])
	{
		k=0;
		dfs1(i);
		assert(k<=1);
		dfs2(i);
		ans*=((a[i]+b[i])%mod);
		ans%=mod;
	}
	return ans;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		printf("%lld\n",doit());
	}
	return 0;
}
