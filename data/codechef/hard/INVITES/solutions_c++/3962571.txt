#include <bits/stdc++.h>
using namespace std;
#define ms(a) memset(a, 0, sizeof a)
#define ll long long
const ll mod=1e9+7;
const int mx=1e5+10;

vector<int> g[mx], a, tmp;
int t, n, vi, vis[mx], vd[mx], c[mx];
ll ans, num[mx][2];

void dfs(int u)
{
	vis[u]=vi; num[u][1]=num[u][0]=1;
	if(c[u]==1) a.push_back(u);

	for(int i=0; i<g[u].size(); ++i)
		if(!vis[g[u][i]]) dfs(g[u][i]);
}

ll process(int s)
{
	dfs(s);
	for(int q=0; q<a.size(); ++q)
	{
		int u=a[q]; vd[u]=1; 
		for(int i=0; i<g[u].size(); ++i)
		{
			int v=g[u][i];
			if(vd[v])continue;
			num[v][0] = (num[v][0] *(num[u][0]+num[u][1]))%mod;
			num[v][1] = (num[v][1]*num[u][0])%mod;
			c[v]--; if(c[v]==1)a.push_back(v);
		}
	}

	int r=-1, u;
	for(int i=1; i<=n; ++i)
		if(vis[i]==vi && !vd[i]){r=u=i; break;}
	if(r==-1)
		return (num[a[a.size()-1]][0]+num[a[a.size()-1]][1])%mod;

	while(vd[u]<1)
	{
		vd[u]=1; tmp.push_back(u);
		for(int i=0; i<g[u].size(); ++i)
		{
			int v=g[u][i];
			if(vd[v])continue;
			u=v; break;
		}
	}

	int sz=tmp.size(); ll a1, a2;
	ll ch=num[tmp[0]][1], nch=0, tch, tnch;
	for(int i=1; i<sz-1; ++i)
	{
		int u=tmp[i];
		tnch = (num[u][0]*(ch+nch))%mod;
		tch = (num[u][1]*nch)%mod;
		ch=tch, nch=tnch;
	}
	a1=(num[tmp[sz-1]][0]*(ch+nch))%mod;

	nch=num[tmp[0]][0], ch=0;
	for(int i=1; i<sz; ++i)
	{   
		int u=tmp[i];
		tnch = (num[u][0]*(ch+nch))%mod;
		tch = (nch*num[u][1])%mod;
		ch=tch, nch=tnch;
	}
	a2=(ch+nch)%mod;

	return (a1+a2)%mod;
}

int main()
{
	cin >> t;
	while(t--)
	{
		ms(num); ms(vd); ms(vis); ms(c); vi=0; ans=1;
		for(int i=0; i<mx; ++i) g[i].clear();

		cin >> n;
		for(int i=1, u, v; i<=n; ++i)
		{
			u=i; cin >> v;
			g[v].push_back(u);
			g[u].push_back(v);
			c[u]++; c[v]++;
		}

		for(int i=1; i<=n; ++i)
		{
			if(vis[i])continue;
			a.clear(); tmp.clear(); vi++;
			ans = (ans*process(i))%mod;
		}

		cout << ans << '\n';
	}
	return 0;
}
