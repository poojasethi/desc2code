#include<iostream>
#include<stdio.h>
#include<string.h>
#include<vector>
#include<algorithm>
#define ll long long 
#define pb push_back
#define mp make_pair
#define sz(v) (int)v.size()
using namespace std;
const ll mod = (ll)1e9 + 7;
ll ch[100010], nch[100010]; 
vector<int> adj[100010];
int n, enemy[100010], vis[100010], incycle[100010];
vector< vector<int> > cycles;

void doit(int cur, int par)
{
	ch[cur] = 1, nch[cur] = 1;

	for(int i=0;i<sz(adj[cur]);i++)
	{
		int v = adj[cur][i];

		if(v == par or incycle[v])continue;
		doit(v, cur);
		ch[cur] = (ch[cur] * nch[v])%mod;
		nch[cur] = (nch[cur] * (ch[v] + nch[v]))%mod;
	}

	return ;
}	
int cycle_dfs(int cur, vector<int>& v)
{
	if(vis[cur] == 2)return -1;
	if(vis[cur] == 1)return cur;
	vis[cur]++;
	int ans = cycle_dfs(enemy[cur], v);
	if(ans != -1)
	{
		incycle[cur] = 1;
		v.pb(cur);
	}
	else incycle[cur] = 0;
	vis[cur]++;
	if(ans == cur)return -1;
	else return ans;
}
ll f(vector<int> cyc)
{
	ll val1 = 0, val2 = 0;

	ll ans1 = 0, ans2 = 0;

	val1 = ch[cyc[0]];

	for(int i=1;i<sz(cyc);i++)
	{
		ll nval1, nval2;

		if(i == sz(cyc) - 1)
		{
			nval1 = 0;
			nval2 = (nch[cyc[i]] * (val1 + val2))%mod;
		}
		else 
		{
			nval1 = (ch[cyc[i]] * val2)%mod;
			nval2 = (nch[cyc[i]] * (val1 + val2))%mod;
		}
	
		val1 = nval1;
		val2 = nval2;
	}

	ans1 = (val1 + val2)%mod;

	val1 = 0, val2 = nch[cyc[0]];

	for(int i=1;i<sz(cyc);i++)
	{
		ll nval1, nval2;
		nval1 = (ch[cyc[i]] * val2)%mod;
		nval2 = (nch[cyc[i]] * (val1 + val2))%mod;
		val1 = nval1;
		val2 = nval2;
	}
	
	ans2 = (val1 + val2)%mod;

	return (ans1 + ans2)%mod;
}
int main()
{
	int t;
	cin>>t;
	
	while(t--)
	{
		cin>>n;

		memset(ch, 0, sizeof ch);
		memset(nch, 0, sizeof nch);
		memset(incycle, 0, sizeof incycle);
		memset(vis, 0, sizeof vis);
		
		cycles.clear();

		for(int i=0;i<n;i++)
			adj[i].clear();

		for(int i=0;i<n;i++)	
		{
			cin>>enemy[i], enemy[i]--;
		
			adj[i].pb(enemy[i]);
			adj[enemy[i]].pb(i);
		}

		for(int i=0;i<n;i++)
		{
			vector<int> tmp;
			cycle_dfs(i, tmp);
			if(sz(tmp) > 0)
				cycles.pb(tmp);	
		}

		ll ans = 1;
		for(int i=0;i<n;i++)
			if(incycle[i])
				doit(i, i);

		//cout<<"done\n";		
		for(int i=0;i<sz(cycles);i++)
			ans = (ans * f(cycles[i]))%mod;

		cout<<ans%mod<<"\n";
	}
	return 0;
}
