#include<bits/stdc++.h>
#define MOD 1000000007
using namespace std;
typedef long long int LL;
typedef vector < vector < LL > > matrix;

matrix A;

matrix multiply(matrix A, matrix B)
{
    int K=(int)A.size();
    matrix C(K,vector<LL>(K));
    for(int i=0;i<K;i++)
    {
        for(int j=0;j<K;j++)
        {
            for(int k=0;k<K;k++)
            {
               C[i][j]=(C[i][j]+(A[i][k]*B[k][j])%MOD)%MOD;
            }
        }
    }
    return C;
}



matrix mpow(matrix T, LL N)
{
    if(N==0)return A;
    if(N==1)return T;
    matrix ret=mpow(T,N/2);
    matrix ret1=multiply(ret,ret);
    if(N%2==0)
        return ret1;
    else
        return (multiply(ret1,T));

}


int main()
{
    //freopen("input.txt","r",stdin);
    int t;
    cin>>t;
    while(t--)
    {
        LL n,m;
        cin>>n>>m;
        matrix even(m,vector<LL>(m));
        matrix odd(m,vector<LL>(m));
        A.resize(m);
        for(int i=0;i<m;i++)
        {
            A[i].resize(m);
            A[i][i]=1;
        }
        for(int i=0;i<m;i++)
        {
            odd[i][i]=1;
            if(i-1>=0)
                even[i][i-1]=odd[i][i-1]=1;
            if(i+1<m)
                even[i][i+1]=odd[i][i+1]=1;
        }
        n--;
        matrix T=multiply(even,odd);
        matrix ans=mpow(T,n/2);
        LL res=0;
        if(n%2)
            ans=multiply(ans,even);
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<m;j++)
            {
                res=(res+ans[i][j])%MOD;
            }
        }
        cout<<res<<endl;
    }

    return 0;
}
