#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>

using namespace std;

/*typedef long long int64;
typedef unsigned long long uint64;*/
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
/*template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}*/
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define ll long long int
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define pi(x) printf("%d",x)
#define nl printf("\n")
#define pl(x) printf("%lld",x)
#define maxn 35
#define mod 1000000007

int m;
void mult(ll F[maxn][maxn], ll M[maxn][maxn])
{
	ll loc[m+5][m+5];
	for(int i=0;i<m;i++) {
		for(int j=0;j<m;j++) {
			loc[i][j]=0;
			for(int k=0;k<m;k++) {
				loc[i][j]=(loc[i][j]+F[i][k]*M[k][j])%mod;
			}
		}
	}
	for(int i=0;i<m;i++) {
		for(int j=0;j<m;j++) {
			F[i][j]=loc[i][j];
		}
	}
}

void repeat(int b,ll y[maxn][maxn],ll x[maxn][maxn])
{
    while(b > 0)
    {
        if(b%2 == 1)
        { 
            mult(x,y);
        } 
        mult(y,y);
        b /= 2;
    }
}
int main()
{
	int T,n;
	si(T);
	while(T--) {
		si(n);
		si(m);
		ll tempodd[maxn][maxn],matodd[maxn][maxn],mateven[maxn][maxn],X[maxn][maxn];
		for(int i=0;i<m;i++) {
			for(int j=0;j<m;j++) {
				matodd[i][j]=0;
				tempodd[i][j]=0;
				mateven[i][j]=0;
			}
			if(i-1>=0) {
				tempodd[i][i-1]=1;
				matodd[i][i-1]=1;
				mateven[i][i-1]=1;
			}
			if(i+1<m) {
				tempodd[i][i+1]=1;
				matodd[i][i+1]=1;
				mateven[i][i+1]=1;
			}
			mateven[i][i]=1;
		}
		for(int i=0;i<m;i++) {
			for(int j=0;j<m;j++) {
				X[i][j]=0;
			}
			X[i][i]=1;
		}
		n--;
		if(n%2==0) {
			mult(matodd,mateven);
			repeat(n/2,matodd,X);
		}
		else {
			mult(matodd,mateven);
			repeat(n/2,matodd,X);
			mult(X,tempodd);
		}
		ll sum=0;
		for(int i=0;i<m;i++) {
			for(int j=0;j<m;j++) {
				sum=(sum+X[i][j])%mod;
			} 
		}
		cout<<sum<<endl;
	}
}