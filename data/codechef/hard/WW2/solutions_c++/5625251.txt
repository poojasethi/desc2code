#include <iostream>
#include <sstream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <cmath>

using namespace std;

const int mod = 1e9 + 7;
const int N = 50;

void mul(int a[N][N], int b[N][N], int n) {
  int c[N][N];
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      c[i][j] = 0;
      for (int k = 0; k < n; ++k) {
        c[i][j] += 1LL * a[i][k] * b[k][j] % mod;
        if (c[i][j] >= mod) {
          c[i][j] -= mod;
        }
      }
    }
  }
  for (int i = 0; i < n; ++i) {
    for (int j = 0; j < n; ++j) {
      a[i][j] = c[i][j];
    }
  }
}

int a[N][N];
int b[N][N];
int c[N][N];
int res[N][N];

int main() {
  // freopen("in", "r", stdin); freopen("out", "w", stdout);
  int tt;
  scanf("%d", &tt);
  while (tt--) {
    int n, m;
    scanf("%d %d", &n, &m);
    memset(a, 0, sizeof a);
    memset(b, 0, sizeof b);
    for (int i = 0; i < m; ++i) {
      if (i - 1 >= 0) {
        a[i - 1][i] = 1;
        b[i - 1][i] = 1;
      }
      if (i + 1 < m) {
        a[i + 1][i] = 1;
        b[i + 1][i] = 1;
      }
      if (n % 2 == 0) {
        b[i][i] = 1;
      } else {
        a[i][i] = 1;
      }
    }
    for (int i = 0; i < m; ++i) {
      for (int j = 0; j < m; ++j) {
        c[i][j] = int(i == j);
        res[i][j] = int(i == j);
      }
    }
    mul(c, a, m);
    mul(c, b, m);
    for (int bit = 0; bit <= 30; ++bit) {
      if ((((n - 1) / 2) >> bit) & 1) {
        mul(res, c, m);
      }
      mul(c, c, m);
    }
    if ((n - 1) % 2 == 1) {
      mul(res, a, m);
    }
    int ans = 0;
    for (int i = 0; i < m; ++i) {
      for (int j = 0; j < m; ++j) {
        ans += res[i][j];
        if (ans >= mod) {
          ans -= mod;
        }
      }
    }
    printf("%d\n", ans);
  }
  return 0;
}