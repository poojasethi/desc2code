#include <bits/stdc++.h>
#define lli long long int
#define s(x) scanf("%lld", &x)
#define MOD 1000000007

using namespace std;

lli odd[35][35], even[35][35], combn[35][35], a[35][35], b[35][35], c[35][35];

void getmtrxs(lli m)
{
    lli i,j,k,ans,temp,pos;

    for (i = 1; i <= m; ++i) {
        for (j = 1; j <= m; ++j) {
            if ((j+1 == i) || ((j-1) == i)) {
                odd[i][j] = 1;
            } else {
                odd[i][j] = 0;
            }

            if ((j == i) || (j+1 == i) || ((j-1) == i)) {
                even[i][j] = 1;
            } else {
                even[i][j] = 0;
            }
        }
    }


    for (i = 1; i <= m; ++i) {
        for (j = 1; j <= m; ++j) {
            combn[i][j] = 0;

            for (k = 1; k <= m; ++k) {
                combn[i][j] += (even[i][k] * odd[k][j]);
            }
        }
    }
}

void prdct(lli a[][35], lli b[][35], lli c[][35], lli m)
{
    lli i,j,k;

    for (i = 1; i <= m; ++i) {
        for (j = 1; j <= m; ++j) {
            a[i][j] = 0;

            for (k = 1; k <= m; ++k) {
                a[i][j] = a[i][j] + ((b[i][k]*c[k][j])%MOD);

                if (a[i][j] >= MOD)
                    a[i][j] -= MOD;
            }
        }
    }
}

void cpy(lli a[][35], lli b[][35], lli m)
{
    lli i,j;

    for (i = 1; i <= m; ++i) {
        for (j = 1; j <= m; ++j) {
            a[i][j] = b[i][j];
        }
    }
}

void expn(lli tme, lli m)
{
    lli i,j,k;

    if (tme == 0) {
        for (i = 1; i <= m; ++i) {
            for (j = 1; j <= m; ++j) {
                if (i == j)
                    a[i][j] = 1;
                else
                    a[i][j] = 0;
            }
        }
    } else if (tme&1){
        expn(tme-1, m);
        prdct(b,combn,a,m);
        cpy(a,b,m);
    } else {
        expn(tme/2, m);
        prdct(b,a,a,m);
        cpy(a,b,m);
    }
}

void pwr(lli time, lli m)
{
    lli i,j,k;

    expn(time/2, m);

    if (time&1) {
        prdct(b,odd,a,m);
        cpy(a,b,m);
    }
}

int main()
{
    lli n,m,i,j,k,ans,temp,p,q,r,tcase;

    s(tcase);

    while (tcase--) {
        s(n);
        s(m);

        getmtrxs(m);

        pwr(n-1, m);

        ans = 0;

        for (i = 1; i <= m; ++i) {
            for (j = 1; j <= m; ++j) {
                ans = (ans + a[i][j]);

                if (ans >= MOD)
                    ans -= MOD;
            }
        }

        printf("%lld\n", ans);
    }
    return 0;
}
