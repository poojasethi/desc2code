#include<iostream>
#include<cstdio>
#include<algorithm>
#define ll long long int
#define mod 1000000007
using namespace std;
ll odd[35][35],even[35][35];
ll res[35][35],T[35][35];
int m;
int mat_prod(ll A[35][35],ll B[35][35],ll D[35][35])
{
    ll C[35][35];
    for (int i=0;i<m;i++)
    {
        for (int j=0;j<m;j++)
        {
            C[i][j]=0;
            for (int k=0;k<m;k++)
            {
                C[i][j]+=(A[i][k]*B[k][j]);
                if((C[i][j])>=mod)
                    C[i][j]=(C[i][j])%mod;
            }
        }
    }
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<m;j++)
            D[i][j]=C[i][j];
    }
}
void pow_mod(ll A[35][35],int b)
{
    ll B[35][35];
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<m;j++)
            if(i==j)
            B[i][j]=1;
            else
                B[i][j]=0;
    }
    while(b>0)
    {
        if(b%2==1)
            mat_prod(B,A,B);
        mat_prod(A,A,A);
        b=b/2;
    }
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<m;j++)
            res[i][j]=B[i][j];
    }
}
/*void print(int A[35][35])
{
    int i,j;
    for(i=0;i<m;i++)
    {
        for(j=0;j<m;j++)
            cout<<A[i][j]<<" ";
        cout<<endl;
    }
    cout<<endl;
}*/
ll count(ll A[35][35])
{
    ll count1=0;
    for(int i=0;i<m;i++)
    {
        for(int j=0;j<m;j++)
        {
            count1+=A[i][j];
            if(count1>=mod)
                count1=count1%mod;
        }
    }
    return count1;
}
 int main()
 {
     ll n,ans;
     int t,i,j;
     scanf("%d",&t);
 //t=10;
     while(t>0)
     {
         t--;
        scanf("%lld %d",&n,&m);
      //n=mod-7;m=30;
        if(n==1)
        {
            printf("%d\n",m);
            continue;
        }
        for(j=0;j<m;j++)
        {
            for(i=0;i<m;i++)
            {
                if(abs(j-i)<=1)
                {
                    even[i][j]=1;
                    if(j==i)
                    odd[i][j]=0;
                    else
                        odd[i][j]=1;
                }
            }
        }
        //print(even);
       // print(odd);
        if((n-1)==1)
        {
            ans=count(odd);
        }
        else
        {
            mat_prod(odd,even,T);
         //   print(T);
            pow_mod(T,(n-1)/2);
           // print(res);
            if((n-1)%2==1)
                mat_prod(res,odd,res);
            ans=count(res);
        }
        printf("%lld\n",ans);
     }
 }
