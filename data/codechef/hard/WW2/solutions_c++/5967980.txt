#include <bits/stdc++.h>
#define lli long long int
#define mod 1000000007
using namespace std;

class m{
public:
	lli a[33][33];
	m()
	{
		memset(a, 0, sizeof(a));
	}
	void multiply(m b, int x) {
		lli c[33][33], sum;
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++) {
				sum = 0;
				for (int k=0; k<x; k++) {
					sum = (sum + this->a[i][k] * b.a[k][j]) % mod;
				}
				c[i][j] = sum;
			}
		}	
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++) {
				this->a[i][j] = c[i][j];
			}
		}
	}
	
	void display(int x) {
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++)
				cout << a[i][j] << " " ;
			cout << endl;
		}
	}
	
};

m iden;

m power(int p, m init, int n)
{
	if( p == 0)
	return iden;
	m result;

	result = power(p/2, init, n);
	result.multiply(result, n);

	if( p%2 !=0)
		result.multiply(init, n);

	return result;
}

int main()
{
	int tc, n, q;
	for (int i=0; i<32; i++)
	iden.a[i][i] = 1;
	scanf("%d",&tc);
	while(tc--)
	{
		scanf("%d%d", &n, &q);
		m even, odd, trans = iden, result;
		for (int i=0; i<q; i++)
		{
			even.a[i][i] = 1;
			if (i >= 1) {
				even.a[i][i-1] = 1;
				odd.a[i][i-1] = 1;
			}
			if ( i < q-1) {
				even.a[i][i+1] = 1;
				odd.a[i][i+1] = 1;
			}
		}
		trans.multiply(odd, q);
		trans.multiply(even, q);
		
		result = power((n-1)/2, trans, q);
		
		if ( (n-1) %2 )
		result.multiply(odd, q);

		lli sum = 0;
		for (int i=0; i<q; i++) 
			for (int j=0; j<q; j++) 
				sum = (sum + result.a[i][j])% mod;
		
		printf("%lld\n", sum);
		
	}
	return 0;
}