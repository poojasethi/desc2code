#pragma comment(linker,"/STACK:64000000")
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <sstream>
#include <cmath>
#include <ctime>
#include <memory.h>

#define WR printf
#define RE scanf
#define PB push_back
#define SE second
#define FI first
#define MP make_pair

#define FOR(i,Be,En) for(int (i)=(Be);(i)<=(En);++(i))
#define DFOR(i,Be,En) for(int (i)=(Be);(i)>=(En);--(i))
#define SZ(a) (int)((a).size())
#define FA(i,v) FOR(i,0,SZ(v)-1)
#define RFA(i,v) DFOR(i,SZ(v)-1,0)
#define CLR(a) memset(a,0,sizeof(a))

#define LL  long long
#define VI  vector<int>
#define PAR pair<int ,int> 

using namespace std;
void __never(int a){printf("\nOPS %d", a);}
void __die(int a){printf("%d",(a*a)/(a+a));}
#define ass(s) {if (!(s)) {__never(__LINE__);cout.flush();cerr.flush();__die(0);}}



map<int,int> m;
set<int> maxx;
set<PAR> co;
void init()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
}
void sol2(int n, int k){
	maxx.clear();
	co.clear();
	for (map<int,int>::iterator IT = m.begin();IT!=m.end();IT++) {
		if (IT->SE > n/k) {
			cout << "-1\n";
			return ;
		}
		co.insert(MP(IT->SE, IT->FI));
	}
	vector<vector<int> > ans;
	DFOR(I,n/k,1) {
		for (set<PAR>::reverse_iterator IT = co.rbegin();IT!=co.rend();IT++) {
			if (IT->FI != I) break;
			maxx.insert(IT->SE);
		}
		
		
		VI v(maxx.begin(), maxx.end());
		int rest = k - SZ(maxx);
		ass(rest >= 0);
		for (map<int,int>::iterator IT = m.begin();IT!=m.end() && rest > 0;IT++) {
			if (maxx.count(IT->FI) == 0) {
				v.PB(IT->FI);
				rest--;
			}
		}
		ass(SZ(v) == k);
		FA(i, v) {
			co.erase(MP(m[v[i]], v[i]));
			m[v[i]]--;
			if (m[v[i]] == 0) {
				m.erase(v[i]);
			} else {
				co.insert(MP(m[v[i]], v[i]));
			}
		}
		sort(v.begin(), v.end());
		ans.PB(v);
	}
	//sort(ans.begin(), ans.end());
	FA(i, ans) {
		//WR("|");
		FA(j, ans[i]) WR(" %d",ans[i][j]);
	}
	WR("\n");
}
void sol(){	
	int n, k, h;
	cin >> n >> k;
	m.clear();
	FOR(i,0,n-1) {
		RE("%d",&h);
		m[h]++;
	}
	sol2(n,k);
}
void stress(){
	FOR(I,1,100) {
		int mm = rand() % 7 + 1;
		int k = rand() % 7 + 1;
		int n = k*mm;
		maxx.clear();
		WR("Test n=%d k=%d:\n",n,k);
		FOR(i,1,n) {
			int h = rand() % (mm + mm);
			WR(" %d",h);
			m[h]++;
		}
		WR("\nAns:\n");
		sol2(n, k);
	}
}
int main()
{
	//init();
	//stress();
	int T;
	cin >> T;
	FOR(t, 1, T) sol();
	return 0;
}