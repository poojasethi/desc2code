#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<algorithm>
using namespace std;
const int MAXN=50005;
set<int>v[MAXN],w,tmp;
map<int,int>c;
vector<int>ans;
int main(){    
    int T;    
    cin>>T;    
    while(T--){          
          int N,K,M;          
          cin>>N>>K;          
          M=N/K;          
          w.clear();          
          c.clear();          
          for(int i=1;i<=M;i++)v[i].clear();                              
          for(int i=0;i<N;i++){              
              int x;
              cin>>x;              
              w.insert(x);              
              c[x]++;                  
              }          
          bool flag=true;          
          for(map<int,int>::iterator it=c.begin();it!=c.end()&&flag;++it){              
              if(it->second>M)flag=false;                                     
              }          
          if(!flag){puts("-1");continue;}                 
          for(map<int,int>::iterator it=c.begin();it!=c.end();++it){
              v[it->second].insert(it->first);                       
              }
          int sum=0;
          for(int i=M;i>=1;i--){
              int cnt=K;
              ans.clear();
              tmp.clear();
              while(cnt>0&&v[i].size()>0){
                    int x=*v[i].begin();
                    int y=c[x];
                    cnt--;
                    c[x]--;
                    w.erase(x);
                    v[y].erase(x);
                    ans.push_back(x);
                    
                    if(c[x]>0){
                       tmp.insert(x);
                       v[c[x]].insert(x);        
                       }                    
                    }
              while(cnt>0){
                    int x=*w.begin();
                    int y=c[x];
                    cnt--;
                    c[x]--;
                    w.erase(x);
                    v[y].erase(x);
                    ans.push_back(x);
                    
                    if(c[x]>0){
                       tmp.insert(x);
                       v[c[x]].insert(x);        
                       }      
                    }
              sort(ans.begin(),ans.end());
              for(set<int>::iterator it=tmp.begin();it!=tmp.end();++it){
                  w.insert(*it);                   
                  }
              for(vector<int>::iterator it=ans.begin();it!=ans.end();++it){
                  sum++;
                  cout<<*it;
                  if(sum!=N)cout<<" ";                      
                  }          
              }    
          cout<<endl;    
          }
    return 0;
    }
    
