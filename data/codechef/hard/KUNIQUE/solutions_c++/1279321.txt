#include<stdio.h>
#include<iostream>
#include<vector>
#include<set>
#include<algorithm>
#include<queue>
using namespace std;

int x,n,t,a[50000],k,count1[50000][2],cnt,d,var1,var2,tmp,store[50000][2],st;
bool ck,ch;
pair<int,int> pr;

inline void inp(int &u)
{
u=0;
x=getchar_unlocked();
while(x>='0' && x<='9')
{
u=(u<<3)+(u<<1)+(x-'0');
x=getchar_unlocked();
}
} 

int main()
{
inp(t);
for(int i=0;i<t;i++)
{
inp(n);
inp(k);
d=n/k;
set<pair<int,int> > pq,s;
int ans[d][k];
for(int i=0;i<n;i++)
{
inp(a[i]);
}
sort(a,a+n);
cnt=0;
count1[0][0]=a[0];
count1[0][1]=1;
ck=false;
for(int i=1;i<n;i++)
{
if(a[i]==a[i-1])
{count1[cnt][1]++;}
else
{if(count1[cnt][1]>d){ck=true;break;}cnt++;count1[cnt][0]=a[i];count1[cnt][1]=1;}
}
if(count1[cnt][1]>d){ck=true;}
if(ck)
{printf("-1\n");continue;}
set<pair<int,int> >::const_iterator itr;
for(int i=0;i<=cnt;i++)
{
pq.insert(make_pair(count1[i][1],count1[i][0]));
}

tmp=0;
for(int i=0;i<n;i++)
{
if(a[i]!=count1[tmp][0])
tmp++;
s.insert(make_pair(a[i],count1[tmp][1]));
}

for(int i=d;i>0;i--)
{
st=0;
var1=0;
itr=pq.end();
itr--;
while((*itr).first==i && var1<k)
{
pr=*itr;
ans[i-1][var1]=pr.second;
store[st][0]=pr.second;
store[st][1]=pr.first-1;
st++;
var1++;
pq.erase(pr);
pq.insert(make_pair(i-1,pr.second));
s.erase(make_pair(pr.second,pr.first));
itr=pq.end();
itr--;
//s.insert(make_pair(pr.second,pr.first-1));
}
//itr=s.begin();
//ch=false;
while(var1<k)
{
//if(ch)
//itr++;
//else
itr=s.begin();
pr=*itr;
var2=pr.first;
ans[i-1][var1]=var2;;
var1++;
s.erase(pr);
pq.erase(make_pair(pr.second,pr.first));
//ch=false;
if(pr.second-1>0)
{
pq.insert(make_pair(pr.second-1,pr.first));
store[st][0]=pr.first;
store[st][1]=pr.second-1;
st++;
//s.insert(make_pair(pr.first,pr.second-1));
//ch=true;
}
}
for(int i1=0;i1<st;i1++)
{
s.insert(make_pair(store[i1][0],store[i1][1]));
}
sort(ans[i-1],ans[i-1]+k);
}

for(int i=d-1;i>=0;i--)
{
for(int j=0;j<k;j++)
{
printf("%d",ans[i][j]);
if(!(i==0 && j==k-1))
printf(" ");
}
}
printf("\n");
}
return 0;
}