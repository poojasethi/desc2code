/*
    Problem:
    Algorithm:
    Note:
*/
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<string>
#include<iomanip>
#include<iostream>
#include<cmath>
#include<queue>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)

typedef long long ll;
typedef long double real;
void read(int&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int D=4000010;
char str[1000010];
const int mod=1000000007;
int Q,n,i,j,k,l,r,p;bool have;

bool en[D];int sum[D],s[D],z[D],g[D],two[1000010];

void prev(int i){en[i]=!en[i];s[i]=(sum[i]-s[i])%mod;z[i]=g[i]-z[i];}
void pdown(int i){if(en[i]){prev(i*2);prev(i*2+1);en[i]=0;}}
void upd(int i){s[i]=(s[i*2]+s[i*2+1])%mod;z[i]=z[i*2]+z[i*2+1];}
void find(int i,int x,int y,int l,int r)
{
    if(y<l||x>r)return;
    if(x>=l&&y<=r){prev(i);return;}
    pdown(i);
    find(i*2,x,(x+y)/2,l,r);
    find(i*2+1,(x+y)/2+1,y,l,r);
    upd(i);
}
void build(int i,int x,int y)
{
    if(x!=y)
    {
        build(i*2,x,(x+y)/2);
        build(i*2+1,(x+y)/2+1,y);
        sum[i]=(sum[i*2]+sum[i*2+1])%mod;s[i]=(s[i*2]+s[i*2+1])%mod;
        g[i]=g[i*2]+g[i*2+1];z[i]=z[i*2]+z[i*2+1];
    }
    else
    {
        sum[i]=(x==n)?1:two[n-x-1];g[i]=1;
        if(str[x]=='1')s[i]=sum[i],z[i]=1;
    }
}
int main()
{
    //freopen(".in","r",stdin);
    //freopen(".out","w",stdout);
    scanf("%s",str+1);n=strlen(str+1);have=(str[n]=='1');
    two[0]=1;rep(i,1,n)two[i]=two[i-1]*2%mod;
    
    build(1,1,n);
    printf("%d\n",(((!have)&&(z[1]%2==0))+s[1]%mod+mod)%mod);
    for(read(Q);Q;Q--)
    {
        read(l);read(r);if(r==n)have=!have;
        find(1,1,n,l,r);
        printf("%d\n",(((!have)&&(z[1]%2==0))+s[1]%mod+mod)%mod);
    }
        
    scanf("\n");
    return 0;
}
