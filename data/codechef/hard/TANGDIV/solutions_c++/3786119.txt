#include <iostream>
#include <deque>
#include <algorithm>
using namespace std;

int T,n,k,p;
int lb,ub;
deque<int> bc, bb;
bool sol;

int main(int argc, char const *argv[]) {
    ios_base::sync_with_stdio (false);

    cin >> T;
    while (T--) {
        cin >> n >> k >> p;
        bc.clear(); bb.clear();

        while (k--) {
            cin >> lb >> ub;
            bc.push_back(lb-1);
            if (ub==n) ub = 0;
            bc.push_back(ub);
        }

        while (p--) {
            cin >> lb >> ub;
            bb.push_back(lb-1);
            if (ub==n) ub = 0;
            bb.push_back(ub);
        }

        sort(bc.begin(), bc.end());
        sort(bb.begin(), bb.end());

        sol = true;

        while (!bb.empty() && sol) {
            int bbch = bb.front();
            while (!bb.empty() && bbch == bb.front())
                bb.pop_front();
            
            while (!bc.empty() && bbch > bc.front())
                bc.pop_front();
            
            int bcch = -1;
            if(!bc.empty()) bcch = bc.front();
            while (!bc.empty() && bcch == bc.front())
                bc.pop_front();

            sol = (bcch == bbch);
        }

        cout << (sol ? "Yes" : "No") << endl;
    }
    return 0;
}
