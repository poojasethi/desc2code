#include<iostream>
#include<algorithm>
#include <stdio.h>
#include <stdlib.h>

using namespace std;
//set<int> hashe;
int bag[2006];

bool binsearch(int q, int sz)
{
    int begin,end,mid;
    begin = 0;end = sz-1;

    while(end > begin)
    {
        mid = (begin + end)/2;
        if (q > bag[mid])
        begin = mid +1;
        else if (q < bag[mid])
        end = mid -1;
        else
        {
            return true;
        }
    }
    return false;
}


/*inline void fastRead(int *a)
{
	register char c=0;
	while (c<33) c=getchar();
	*a=0;
	while (c>33)
	{
		*a=*a*10+c-'0';
		c=getchar();
	}
}
inline void fastWrite(long long a)
{
	char snum[20];
	int i=0;
	do
	{
		snum[i++]=a%10+48;
		a=a/10;
	}while(a!=0);
	i=i-1;
	while(i>=0)
	putchar(snum[i--]);
	putchar('\n');
}
*/
int main()
{
    int t,n,k,p,l,r,t1,t2,sz;
   // fastRead(&t);
   cin>>t;
    while (t--)
    {
        //fastRead(&n);
        //fastRead(&k);
        //fastRead(&p);
        cin>>n>>k>>p;
//        hashe.clear();
        sz = 0;
        for (int i=1;i<=k;i++)
        {
            //fastRead(&l);
            //fastRead(&r);
            cin>>l>>r;
            t1 = l-1;
            if (r!=n) t2 = r;
            else t2 = 0;

            bag[sz++] = t1;
            bag[sz++] = t2;
        }
       // for (int i=0;i<=sz;i++)
       // cout<<bag[i]<<endl;
        sort(bag,bag + sz);
       // for (int i=0;i<=sz;i++)
       // cout<<bag[i]<<endl;
        bool b = false;
        for (int i=1;i<=p;i++)
        {
            //fastRead(&l);
            //fastRead(&r);
            cin>>l>>r;
            t1 = l-1;
            if (r!=n) t2 = r;
            else t2 = 0;

            if ((!binsearch(t1,sz)) || (!binsearch(t1,sz)))
            {
                b = true;
            }
        }

        if (b)
        cout<<"No"<<endl;
        else
        cout<<"Yes"<<endl;
    }

    return 0;
}

