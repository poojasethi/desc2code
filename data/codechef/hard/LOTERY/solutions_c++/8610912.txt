#include<cstdio>
#include<iostream>
#include<cstring>
#include<string>
#include<vector>
#include<algorithm>
#include<cmath>
#include<map>
#include<sstream>
#include<set>
#include<climits>
#define gc getchar
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define D(x) ll x = scan()
#define TEST ll T = scan(); while(T--)
#define rep(i, n) for(ll i=0; i<n; i++)
using namespace std;
typedef long long ll;
ll scan()
{
	bool minus = false;
	ll result = 0;
	char ch;
	ch = getchar();
	while (true) {
		if (ch == '-') break;
		if (ch >= '0' && ch <= '9') break;
		ch = getchar();
	}
	if (ch == '-') minus = true; else result = ch-'0';
	while (true) {
		ch = getchar();
		if (ch < '0' || ch > '9') break;
		result = result*10 + (ch - '0');
	}
	if (minus)
		return -result;
	else
		return result;
}
long long Mul[100002],IMul[100002];
int pr[100002], pm[1000002];
vector<int> v;
vector<int> p;
int mid=380;
ll power(ll base, ll exponent, ll modulus)
{
    ll result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
void Fuck()
{
	pr[1]=1;
	for(int i=2;i<100002;i++) if(!pr[i]) for(int j=2;i*j<100002;j++) pr[i*j]=1; 
	for(int i=2;i<mid;i++)
	{  
		v.push_back(i);
		if(pr[i]) continue;
		p.push_back(i);
	}	
	long long mul=1;
	for(int i=0;i<mid;i++) Mul[i]=1,IMul[i]=1;
	for(int i=mid;i<100002;i++)
	{
		if(pr[i]==1) 
		{ 
			Mul[i]=Mul[i-1]; 
			IMul[i]=IMul[i-1];  
		}
		else
		{
			mul=(mul*i)%mod; 
			Mul[i]=mul; 
			IMul[i]=power(mul,mod-2,mod);
		}
	}
}
int fuck_lcm(int a, int b)
{ 
	return (Mul[b]*IMul[a-1])%mod;  
}
ll fuck_with(int x, int y)
{
	ll ret=1;
	rep(i, p.size())
	{
		if(p[i]>y) break;
		int t=1, tmp=(x-1)/t; tmp=(tmp+1)*t;
		while(tmp<=y) 
		{  
			t=t*p[i];
			tmp=(x-1)/t; tmp=(tmp+1)*t;
		}
		t=t/p[i];
		ret=(ret*t)%mod;	
	}
	if(y<=mid) return ret;
	if(x*2<=y) 
	{
		ret=(ret*fuck_lcm(1,y)); 
		return ret%mod;
	}
	ret=(ret*fuck_lcm(x,y))%mod;
	int bar=x-1, len=y-x+1;
	rep(i, mid) pm[i] = 0;
	if(len>mid)
	{
		int p=len; 
		if(p>=x) p=x-1;
		ret=(ret*fuck_lcm(1,p))%mod; p++;
	}
	else len=mid;
	rep(i, v.size())
	{
		int lo=(x-1)/v[i]; 
		lo=lo+1; 
		if(lo<=len) 
			lo=len+1;
		int up=y/v[i]; 
		if(up>bar) 
			up=bar;
		if(lo>bar || lo>up ) continue;
		ret=(ret*((Mul[up]*IMul[lo-1])%mod))%mod;
		bar=lo-1;
		if(bar<=len) 
			break;	
	}
	return ret;	
}
int c[1000010], d[1000010];
int main()
{
	//freopen("in.txt", "r", stdin);
	Fuck();
	int t, n, k, a, b, m;
	t = scan(); n = scan(); k = scan(); a = scan(); b = scan(); m = scan();
	ll ans = fuck_with(n-k+1, n);
	printf("%lld\n", ans); t--;
	rep(i, t) c[i] = scan();
	rep(i, t) d[i] = scan();
	rep(i, t)
	{ 
		n = 1 + (a * ans + c[i]) % m;
		k = 1 + (b * ans + d[i]) % n;
		ans = fuck_with(n-k+1, n);
		printf("%lld\n", ans);
	}
	return 0;
} 