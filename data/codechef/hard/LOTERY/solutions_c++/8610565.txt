#include<bits/stdc++.h>
#include<iostream>
#define ll int
#define ll1 long long
#define maxn 100009
#define mod 1000000007
#define inf 1000000009
bool mark[maxn+6];
ll primepro[maxn+7],primeinv[maxn+9],primes[maxn+5],c[1000009],d[1000009];
using namespace std;
//inline int getchar_unlocked() { return getchar(); }
ll scan()
{
    register int n = 0, ch = getchar_unlocked();
    while (ch < '0' || ch > '9')
        ch = getchar_unlocked();
    while (ch >= '0' && ch <= '9') {
        n = (n << 3) + (n << 1) + ch - '0';
        ch = getchar_unlocked();
    }
    return n;
}
ll x,y;
void make(ll a, ll b)
{
	x=a;
	y=b;
}
void inverse(ll a, ll m)
{
	if(m==0)
	{
         make(1, 0);
         return;
     }
    inverse(m,a%m);
    make(y,(x-(y*(a/m))));
    return;
}
ll power(ll base,ll exp)
{
	ll res=1;
	while(exp>0)
	{
		if(exp&1)
		{
			res=(ll1)res*base%mod;
		}
		exp/=2;
		base=(ll1)base*base%mod;
	}
	return res;
}
void pre()
{
	ll i,j,num,k;
	k=0;
	primepro[0]=primepro[1]=primeinv[0]=primeinv[1]=1;
	for(i=2; i<maxn; i++)  //making prime array
	{
		j=2;
		if(mark[i]==0)
		{
			while((num=i*j)<maxn)
			{
				mark[num]=1;
				++j;
			}
			primepro[i]=(primepro[i-1]*(ll1)i)%mod;
			primes[k++]=i;
				inverse(i,mod);
			if(x<0)
			x+=mod;
			primeinv[i]=((ll1)primeinv[i-1]*x)%mod;
		}
		else
		{
			primepro[i]=primepro[i-1];
			primeinv[i]=primeinv[i-1];
		}
	}
//cout<<primeinv[2]<<endl;
}
ll get(ll n,ll k)
{
	if(n==k)
	return k;
	ll tmp,high,low,i,j,l,ct,ct1,temp,ans,a,b;
	i=0;
	ans=1;
	ll lowchk;
	while(primes[i]*primes[i]<=k)
	{
		ll num=primes[i];
		temp=1;
		//lowchk=num;
		while(num<=k)
		{
			a=(n-1)/num;
			++a;
			b=k/num;
			if(a<=b)
			{
				temp=num;
				num=num*primes[i];
			}
			else
			break;
		}
		//cout<<temp<<endl;
		if(temp!=1)
		ans=(ans*(ll1)temp)%mod;
		++i;
	}
	//printf("%d\n",ans);
	 ll highchk;
	 highchk=inf;
	ll div=1;
	lowchk=sqrt(k);
	while(lowchk+1<highchk)
	{
		low=(n-1)/div;
		++low;
		high=k/div;
		if(high>=highchk)
		{
			high=highchk-1;
		}
		if(low<=lowchk)
		{
			low=lowchk+1;
			highchk=-199;
		}
		if(low<=high)
		{
			temp=((ll1)primepro[high]*(ll1)primeinv[low-1])%mod;
			ans=(ans*(ll1)temp)%mod;
		}
		highchk=min(highchk,low);
		div=max(div+1,k/highchk);
		//cout<<ans<<endl;
	}
	return ans;
}
int main()
{
	pre();
	ll i,j,t,n,ans,prev,tmp,temp,a,b,m,k;
	/*for(i=1; i<16; i++)
	{
		printf("%d\n",get(i,15));
	}*/
	t=scan();
	n=scan();
	k=scan();
	a=scan();
	b=scan();
	m=scan();
	ans=get(n-k+1,n);    // getting the answer
	for(i=0; i<t-1; i++)
	{
		c[i]=scan();
	}
	for(i=0; i<t-1; i++)
	{
		d[i]=scan();
	}
	ll thl;
	for(i=0; i<t-1; i++)
	{
		printf("%d\n",ans);
		thl=(a*(ll1)ans)%m;
		n=1+(thl+(ll1)c[i])%m;
		thl=(b*(ll1)ans)%n;
		k=1+(thl+(ll1)d[i])%n; 
		ans=get(n-k+1,n);
	}
		printf("%d\n",ans);
	return 0;
} 