#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<vector>
#include<cassert>
using namespace std;
#define lim 100001
int cs,n,i,x,y,t,q,m,d,s,rd,ll,p;
vector<int> V[lim];
int S[lim],E[lim],A[lim],B[lim],D[lim],P[lim][17];
void dfs(int x)
{
  int i,y;
  S[x]=++t;
  d++;
  //assert(d<=100);
  D[x]=d;
  for(i=0;i<V[x].size();i++)
  {
    y=V[x][i];
    if(!S[y])
    {
      dfs(y);
      P[y][0]=x;
    }
  }
  E[x]=++t;
  d--;
}
int main()
{
  scanf("%d",&cs);
  while(cs--)
  {
    scanf("%d",&n);
    for(i=0;i<n;i++)
      V[i].clear();
    for(i=0;i+1<n;i++)
    {
      scanf("%d%d",&x,&y);
      x--;
      y--;
      V[x].push_back(y);
      V[y].push_back(x);
    }
    t=0;
    memset(S,0,sizeof S);
    dfs(0);
    P[0][0]=0;
    for(i=1;i<17;i++)
      for(x=0;x<n;x++)
        P[x][i]=P[P[x][i-1]][i-1];
    scanf("%d",&q);
    while(q--)
    {
      scanf("%d",&m);
      d=0;
      s=0;
      for(i=0;i<m;i++)
      {
        scanf("%d",&A[i]);
        A[i]--;
        if(D[A[i]]>D[A[d]])
          d=i;
        if(D[A[i]]<D[A[s]])
          s=i;
        B[i]=0;
      }
      rd=-1;
      for(i=0;i<m;i++)
        if(S[A[i]]<=S[A[d]] && E[A[i]]>=E[A[d]])
          B[i]=1;
        else if(rd==-1 || D[A[i]]>D[A[rd]])
          rd=i;
      if(rd==-1)
        printf("Yes\n");
      else
      {
        for(i=0;i<m;i++)
          if(!B[i])
            if(S[A[i]]<=S[A[rd]] && E[A[i]]>=E[A[rd]])
              B[i]=2;
            else
              break;
        if(i<m)
          printf("No\n");
        else
        {
          if(D[d]<D[rd])
            swap(d,rd);
          for(i=16,x=A[d];i>=0;i--)
          {
            p=P[x][i];
            if(S[p]>S[A[rd]] || E[p]<E[A[rd]])
              x=p;
          }
          ll=P[x][0];
          if(S[ll]<=S[A[s]] && E[ll]>=E[A[s]])
            printf("Yes\n");
          else
            printf("No\n");
        }
      }
    }
  }
  return 0;
}
