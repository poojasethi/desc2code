#include <bits/stdc++.h>
#define fo(i,n) for(i=0;i<n;i++)
#define Fo(i,k,n) for(i=k;i<n;i++)
#define pb push_back
using namespace std;
const int maxn = 100003;
int s[maxn],e[maxn],d[maxn],vis[maxn],p[maxn],lg[maxn],dp[18][maxn],n,ti;
vector<int> a[maxn];
void dfs(int x)
{
	int i;
	vis[x]=1;
	ti++;
	fo(i,a[x].size())
	{
		int v = a[x][i];
		if(!vis[v])
		{
			s[v]=ti;
			d[v]=d[x]+1;
			p[v]=x;
			dfs(v);
		}
	}
	e[x]=ti;
}
void initLca()
{
	int i,j;
	fo(i,18)fo(j,n)dp[i][j]=-1;
	fo(i,n)dp[0][i]=p[i];
	for(i=1;1<<i < n;i++)
	for(j=0;j<n;j++)
	{
		if(dp[i-1][j]!=-1)
			dp[i][j]=dp[i-1][dp[i-1][j]];
	}
}
void pre()
{
	int i;
	lg[1]=0,lg[2]=1;
	int x=4;
	Fo(i,3,n+1){
		if(i<x)lg[i]=lg[i-1];
		else{
			x<<=1;
			lg[i]=lg[i-1]+1;
		}
	}
	p[0]=-1;
	d[0]=0;
	ti=0;
	dfs(0);
	initLca();
}
int lca(int u,int v)
{
	int i;
	if(d[u]<d[v])swap(u,v);
	for(i=lg[d[u]];i>=0;i--)
	{
		if( d[u]-(1<<i) >= d[v] )
			u=dp[i][u];
	}
	if(u==v)return v;
	for(i=lg[d[u]];i>=0;i--)
		if(dp[i][u]!=-1 && dp[i][u]!=dp[i][v])
			u=dp[i][u],v=dp[i][v];
	return p[u];
}
int main() {
	int t,i,j,x,y,q,k;
	cin>>t;
	while(t--)
	{
		cin>>n;
		fo(i,n)
		{
			a[i].clear();
			vis[i]=0;
		}
		fo(i,n-1)
		{
			cin>>x>>y; x--; y--;
			a[x].pb(y);
			a[y].pb(x);
		}
		pre();
		vector<int> node;
		cin>>q;
		while(q--)
		{
			cin>>k;
			int far=0,close=n,F,C;
			node.clear();
			fo(i,k)
			{
				cin>>x;x--;
				node.pb(x);
				if(far<d[x])far=d[x],F=x;
				if(close>d[x])close=d[x],C=x;
			}
			int flag=0,secFar=0,SF;
			fo(i,k)
			{
				if(s[node[i]]<=s[F] && e[node[i]]>=e[F])continue;
				else
				{
					flag=1;
					if(secFar<d[node[i]])secFar=d[node[i]],SF=node[i];
				}
			}
			//cout<<F<<" "<<SF<<endl;
			if(!flag){cout<<"Yes\n";continue;}
			flag=0;
			fo(i,k)
			{
				if(s[node[i]]<=s[F] && e[node[i]]>=e[F])continue;
				else 
				{
					if(s[node[i]]<=s[SF] && e[node[i]]>=e[SF])continue;
					else flag=1;
				}
			}
			if(flag){cout<<"No\n";continue;}
			int LCA = lca(F,SF);
		//	cout<<LCA<<endl;
			//cout<<F<<" "<<SF<<" "<<LCA<<endl;
			if(s[LCA]<=s[C] && e[LCA]>=e[C]){cout<<"Yes\n";continue;}
			else {cout<<"No\n";continue;}
		}
	}
	return 0;
}