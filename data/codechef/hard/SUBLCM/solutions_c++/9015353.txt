#include <iostream>
#include <vector>
#include <cmath>
#include <cstdio>
#include <cstring>
using namespace std;

#define MAX 1000006

int a[MAX], P[MAX], dp[MAX];
bool prime[MAX];
vector<int> factors[MAX];

inline int cal(int index) {
	int r = 0;
	vector<int> f = factors[a[index]];
	for(int i = 0; i < f.size(); i++) {
		r = max(r, P[f[i]]);
		P[f[i]] = index;
	}
	return r;
}

int main(int argc, char const *argv[])
{
	for(int i = 2; i < MAX; i++) {
		if(!prime[i]) {
			for(int j = i << 1; j < MAX; j += i) {
				prime[j] = true;
				factors[j].push_back(i);
			}
			factors[i].push_back(i);
		}
	}

	int t, n, ans, maxi;
	vector<int>::iterator it;
	scanf("%d", &t);
	while(t--) {
		memset(dp, -1, sizeof(dp));
		memset(P, -1, sizeof(P));
		
		scanf("%d", &n);
		for(int i = 1; i <= n; i++) {
			scanf("%d", &a[i]);
		}

		dp[1] = 1;
		for(it = factors[a[1]].begin(); it != factors[a[1]].end(); it++) {
			P[*it] = 1;
		}

		for(int i = 2; i <= n; i++) {
			maxi = dp[i - 1];
			for(it = factors[a[i]].begin(); it != factors[a[i]].end(); it++) {
				maxi = max(maxi, P[*it] + 1);
				P[*it] = i;
			}
			dp[i] = maxi;
		}

		ans = -1;
		for(int i = 1; i <= n; i++) {
			ans = max(ans, i - dp[i] + 1);
		}

		if(ans != 1) printf("%d\n", ans);
		else printf("-1\n");
	}
	return 0;
}