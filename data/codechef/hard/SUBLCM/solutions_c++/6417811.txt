#include <stdio.h>
#include <vector>
#include <string.h>

#define maxn 100000+3
#define maxd 1000000+3


using namespace std;

vector<int> vec[maxd];
int arr[maxn];
int dp[maxn];
int last[maxd];

int min(int a, int b) {
    return (a<b)?a:b;
}
int max(int a, int b) {
    return (a>b)?a:b;
}
void precompute() {
    for(int i=2;i<=maxd;i++) if(vec[i].size()==0)
      for(int j=i;j<=maxd;j+=i) vec[j].push_back(i);
  
}
int cal(int i) {
    int len = vec[arr[i]].size();
    int idx = 0;
    for(int j=0;j<len; j++) {
        int x = vec[arr[i]][j];
        if(last[x] != -1) {
            idx = max(idx, last[x]);
        }
        
        last[x] = i;
    }
    return idx;
}
 
int main() {
	// your code goes here
	precompute();
	
	int tc;
	int n;
	scanf("%d",&tc);
	 while(tc--){
	    memset(dp,0,sizeof(dp));
	    memset(last, -1, sizeof(last));
	    
	    scanf("%d",&n);
	    for(int i=1;i<=n;i++) {
	        scanf("%d",&arr[i]);
	    }
	    
	    int ans = 1;
	    
	    for(int i=1;i<=n;i++) {
	       int idx = i-cal(i);
	       dp[i] = min(1+dp[i-1], idx);
	       ans = max(ans, dp[i]);
	    }
	    
	    if(ans == 1) {
	        ans  = -1;
	    }
	    
	    printf("%d\n",ans);
	}
	return 0;
}