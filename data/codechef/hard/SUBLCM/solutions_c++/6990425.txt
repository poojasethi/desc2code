#include<bits/stdc++.h>
using namespace std;
int prime[1001],k,sprime[200],v[1000001];
vector<int>f[1000001];
void sieve() {
    prime[0]=1;
    prime[1]=1;
    for(int i=2;i<=1000;i++)
    {
        if(prime[i]==1)
            continue;
        for(int j=2;j*i<=1000;j++)
        {
            prime[i*j]=1;
        }
    }
    for(int i=2;i<=1000;i++)
    if(prime[i]==0)
        sprime[k++]=i;
}
void fact() {
    for(int i=2;i<=1000000;i++)
    {
        int num=i;
        for(int j=0;sprime[j]*sprime[j]<=i;j++)
        {
            if(j>=k)
                break;
            if(num%sprime[j]==0)
            {
                f[i].push_back(sprime[j]);
                    while(num%sprime[j]==0)
                        num=num/sprime[j];
            }
        }
        if(num>1)
            f[i].push_back(num);
    }
}
int F(int x,int n,int val)
{
    int ans=0;
    for(int i=0;i<n;i++) {
        ans=max(ans,v[f[x][i]]);
        v[f[x][i]]=val;
    }
    return ans;
}
int main() {
    sieve();
    fact();
    int t;scanf("%d",&t);
    while(t--) {
        fill(v,v+1000001,-1);
        int n;scanf("%d",&n);
        int a[n+6];
        for(int i=1;i<=n;i++) {
           scanf("%d",&a[i]);
        }
        int pos=0;
        int dp[n+2];
        dp[0]=1;
        int ans=0;
        for(int i=1;i<=n;i++)
        {
            int p=f[a[i]].size();
            dp[i]=min(dp[i-1]+1,i-F(a[i],p,i));
            ans=max(ans,dp[i]);
        }
        if(ans<=1)
            printf("-1\n");
        else
            printf("%d\n",ans);
    }
}
