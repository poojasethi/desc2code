// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define MAX 1000010
#define MAXN 100010
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
vector<int> factors[MAX];
bool is[MAX];
int a[MAXN];
int last[MAX];
inline void sieve()
{
	for(int i=2;i<MAX;i++)
	{
		if(is[i])
			continue;
		factors[i].pb(i);
		for(int j=2*i;j<MAX;j+=i)
		{
			factors[j].pb(i);
			is[j]=1;
		}
	}
	return ;
}
int main()
{
	sieve();
	int tc;scanf("%d",&tc);
	while(tc--)
	{
		int n;scanf("%d",&n);
		for(int i=0;i<n;i++)
			scanf("%d",&a[i]);
		int ans=1;
		int i=1,j=0;
		for(int i=0;i<MAX;i++)
			last[i]=-1;
		for(int k=0;k<factors[a[0]].size();k++)
			last[factors[a[0]][k]]=0;
		for(;(i<n) && (j<n);i++)
		{
			for(int k=0;k<factors[a[i]].size();k++)
			{
				j=max(j,last[factors[a[i]][k]]+1);
				last[factors[a[i]][k]]=i;
			}
			ans=max(ans,i-j+1);
		}
		printf("%d\n",(ans==1)?-1:ans);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



