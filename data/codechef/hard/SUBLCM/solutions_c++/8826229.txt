#include<bits/stdc++.h>
#define ll long long
using namespace std;

int lmt=1000001;
int sq=sqrt(lmt+0.0);
int arr[1000005];
vector <ll> fact[1000005];
int pos[1000005];
int dp[1000005];

int gcd(int a, int b){
	if(a==0) return b;
	else return gcd(b%a, a);
}

void seive(){
	int i;
	for(i=2;i<=sq;i++){
		if(fact[i].size()==0){
			for(int j=1;j*i<lmt;j++){
				fact[i*j].push_back(i);
			}
		}
	}
}

int gst=-1;

int last(int idx){
	int curr=-1;
	int num=arr[idx];
	
	if(num==1) {
		gst=idx;
		return idx-1;
	}
	if(num>sq && fact[num].size()==0){
		
		curr= (curr>pos[num] ? curr: pos[num]);
		pos[num]=idx;
	
	}
	else{
		for(int i=0; i<fact[num].size(); i++){
			
			int x=fact[num][i];
			curr= (curr>pos[x] ? curr: pos[x]);
			
			pos[x]=idx;
		}
	}
	return (curr>gst ? curr : gst);
}

int main(){
	std::ios_base::sync_with_stdio(false);
	int t;
	scanf("%d",&t);
	ll n;
	
	seive();
//	cout<<"factors\n";
//	for(int i=2;i<100;i++){
//		cout<<"factors of "<<i<<" -> ";
//		for(int j=0;j<fact[i].size();j++){
//			cout<<fact[i][j]<<" ";
//		}cout<<"\n";
//	}
	
	while(t--){
		gst=-1;
		scanf("%lld",&n);
		scanf("%lld",&arr[0]);
		int g=arr[0];
		for(int i=1; i<n; i++){
			scanf("%lld", &arr[i]);
			g=gcd(g, arr[i]);
		}
		if(g!=1) {
			printf("-1\n");
			continue;
		}
		for(int i=0;i<lmt;i++) pos[i]=-1;
		
		int maxx=0;
		dp[0]=0;
		
		for(int i=0;i<n;i++){
			int lidx=last(i);
			if(i!=0) dp[i]=( (dp[i-1]+1)<(i-lidx) ?(dp[i-1]+1): (i-lidx));
			else dp[i]=1;
			if(dp[i]>maxx) maxx=dp[i];

		}
		printf("%d\n", maxx);
	}
}