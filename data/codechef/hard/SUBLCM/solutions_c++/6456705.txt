#include <iostream>
#include <stdio.h>
#include <vector>
#include <string.h>
using namespace std;

int t;
int n;
int nums[100001];
vector<int> Primes[1000001];

int Counter[1000001];
int MoreThanOneCounter=0;

bool IsPrime[1000001];

void Add(int x)
{
    int i;

    for (i=0;i<Primes[x].size();i++)
    {
        Counter[ Primes[x][i] ]++;
        if (Counter[ Primes[x][i] ]>1)
        {
            MoreThanOneCounter++;
        }
    }

    return;
}

void Remove(int x)
{
    int i;

    for (i=0;i<Primes[x].size();i++)
    {
        Counter[ Primes[x][i] ]--;
        if (Counter[ Primes[x][i] ]==1)
        {
            MoreThanOneCounter--;
        }
    }

    return;
}

int main()
{
    //freopen("sample.txt","r",stdin);

    int test;
    int i,j;
    int cp;
    int l,r;
    int ans=-1;

    for (i=1;i<=1000000;i++)
    {
        IsPrime[i]=true;
    }
    IsPrime[1]=false;

    for (i=2;i<=1000000;i++)
    {
        if (IsPrime[i])
        {
            Primes[i].push_back(i);

            for (j=i+i;j<=1000000;j+=i)
            {
                Primes[j].push_back(i);
                IsPrime[j]=false;
            }
        }
    }

    scanf("%d",&t);

    for (test=1;test<=t;test++)
    {
        memset(Counter,0,sizeof(Counter));

        scanf("%d",&n);

        for (i=1;i<=n;i++)
        {
            scanf("%d",&nums[i]);
        }

        l=1;
        r=1;
        Add(nums[1]);

        ans=-1;
        while(l<=n)
        {
            while(MoreThanOneCounter>0)
            {
                Remove(nums[l]);
                l++;
            }

            if (r-l+1>ans && r-l+1>1)
            ans=r-l+1;

            if (r==n)
            break;

            r++;
            Add(nums[r]);
        }

        printf("%d\n",ans);
    }

    return 0;
}
