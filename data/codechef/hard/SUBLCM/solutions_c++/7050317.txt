#include <bits/stdc++.h> //CLS to clear cmd screen
using namespace std;
#define pb push_back
//#define mp make_pair
#define line() printf("\n")
#define space() printf(" ")
#define mem(a,b) memset(a,b,sizeof a)
typedef long long int lli;
void sc(int& a){scanf("%d",&a);}
void sc(int& a, int& b){sc(a);sc(b);}
void sc(int& a,int& b,int& c){sc(a);sc(b);sc(c);}
void sc(lli& a){scanf("%I64d",&a);}
void sc(lli& a,lli& b){sc(a);sc(b);}
void sc(lli& a,lli& b,lli& c){sc(a,b);sc(c);}
void write(int a){printf("%d",a);}
void write(lli a){printf("%I64d",a);}
int mod = 1000000007;
lli modpow(lli a, lli b, lli mod){lli res=1;while(b>0){if(b&1)res=(res*a)%mod;a=(a*a)%mod;b=b/2;}return res%mod;} 
bool prime[1000001];
vector<int> vec;
vector<int> factor[1000001];
int a[100005],calc[100005],p[1000005];
int main()
{
    int i;
    lli j;
    memset(prime,true,sizeof prime);
    for(i=2;i<=1000000;i++)
    {
        if(prime[i]==true)
        {
            vec.pb(i);
            for(j=(lli)i*i;j<=1000000;j+=i)
                prime[j]=false;
        }
    }
    int n1=vec.size();
    for(i=2;i<=1000000;i++)
    {
        if(prime[i]==true) continue;
        int temp=sqrt(i);
        for(j=0;j<n1;j++)
        {
            if(i%vec[j]==0)
            {
                factor[i].pb(vec[j]); break;
            }
        }
    }
    int t,n;
    sc(t);
    while(t--)
    {
        sc(n);
        for(i=1;i<=n;i++)
            sc(a[i]);
        for(i=0;i<=1000000;i++)
            if(i<=100000) calc[i]=0,p[i]=0;
            else p[i]=0;
        calc[1]=0;
        j=a[1];
        while(1)
        {
            //cout<<j<<" "<<prime[j]<<endl;
            if(prime[j]==true)
            {
                p[j]=1; break;//printf("p[%d]=%d\n",j,p[j]); break;
            }
            //p[j/factor[j][0]]=1;
            p[factor[j][0]]=1;
            j=j/factor[j][0];
        }
        //cout<<factor[9][0]<<endl;
        for(i=2;i<=n;i++)
        {
            j=a[i];            
            int temp=0;
            if (j!=1)
            while(1)
            {
                if(prime[j])
                {
                    temp=max(temp,p[j]); p[j]=i;  break;
                }
                //temp=max(temp,p[j/factor[j][0]]);
                temp=max(temp,p[factor[j][0]]);
                j=j/factor[j][0];
            }
            j=a[i];
            if(j>1)
            while(1)
            {
                if(prime[j]){ p[j]=i; break; }
                //p[j/factor[j][0]]=i;
                p[factor[j][0]]=i;
                j/=factor[j][0];
            }
            calc[i]=temp;
        }
        int l,r,ans=0;
        /*for(i=1;i<=10;i++)
            cout<<p[i]<<" ";
        line();
        for(i=1;i<=n;i++)
            cout<<calc[i]<<" ";
        line();*/
        for(l=1,r=2;r<=n;)
        {
            if(calc[r]<l) r++;
            else
            {
                ans=max(ans,r-l);
                while(calc[r]>=l)
                {
                    l++;
                }
            }
        }
        ans=max(ans,r-l);
        if(ans==1) ans=-1;
        printf("%d\n",ans);
    }
}