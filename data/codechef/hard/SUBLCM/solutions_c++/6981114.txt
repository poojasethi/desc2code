#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <limits.h>
using namespace std;
vector<int> primes[1000005];
int p[1000005],a[100005],dp[100005];
int cofactor_pos(int x)
{
    int pos=0,i;
    for(i=0;i<primes[a[x]].size();i++)
    {
        pos=max(p[primes[a[x]][i]],pos);
        p[primes[a[x]][i]]=x;
    }
    return pos;
}
int main()
{
    int i,j,t,maxi,n;
    //cout<<primes[2].max_size()<<"\n";
    //freopen( "output.txt", "w", stdout );
    for(i=2;i*i<=1000000;i++)
    {
        if(primes[i].size()==0)
        {
            for(j=2*i;j<=1000000;j+=i)
                primes[j].push_back(i);
        }
    }
    for(i=2;i<=1000000;i++)
    {
        if(primes[i].size()==0)
            primes[i].push_back(i);
    }
    /*for(i=1;i<=1000000;i++)
    {
        for(j=0;j<primes[i].size();j++)
            printf("%d ",primes[i][j]);
        printf("\n");
    }*/
    scanf("%d",&t);
    while(t--)
    {
        for(i=0;i<=1000000;i++)
        {
            p[i]=0;
        }
        maxi=INT_MIN;
        scanf("%d",&n);
        for(i=1;i<=n;i++)
            scanf("%d",&a[i]);
        dp[1]=1;
        cofactor_pos(1);
        for(i=2;i<=n;i++)
        {
            dp[i]=min(dp[i-1]+1,i-cofactor_pos(i));
            if(dp[i]>maxi)
                maxi=dp[i];
        }
        if(maxi>1)
            printf("%d\n",maxi);
        else
            printf("-1\n");
    }
    return 0;
}
