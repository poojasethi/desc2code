#include <stdio.h>
#include <vector>
#include <string.h>

#define maxn 100000+3
#define maxd 1000000+3


using namespace std;

vector<int> vec[maxd];
int arr[maxn];
int dp[maxn];
int last[maxd];

int min(int a, int b) {
    return (a<b)?a:b;
}
int max(int a, int b) {
    return (a>b)?a:b;
}
void precompute() {
    for(int i=2;i<=maxd;i++) if(vec[i].size()==0)
      for(int j=i;j<=maxd;j+=i) vec[j].push_back(i);
  
}

int main() {
	// your code goes here
	precompute();
	
	int tc;
	int n;
	scanf("%d",&tc);
	 while(tc--){
	    memset(last, -1, sizeof(last));
	    
	    int ans = -1;
	    
	    scanf("%d",&n);
	    for(int i=0;i<n;i++) {
	        scanf("%d",&arr[i]);
	        
	        int v = arr[i];
	        int x = -1;
	        for(int j=0;j<vec[v].size(); j++) {
	            int p = vec[v][j];
	            if(last[p] != -1) {
	                x = max(x, last[p]);
	            }
	            
	            last[p] = i;
	        }
	        if(i) {
	            dp[i] = max(dp[i-1], x);
	            ans = max(ans, i-dp[i]);
	        } else {
	            dp[i] = -1;
	        }
	    }
	    
	    if(ans == 1) {
	        ans  = -1;
	    }
	    
	    printf("%d\n",ans);
	}
	return 0;
}
