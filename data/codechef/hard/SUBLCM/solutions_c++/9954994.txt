using namespace std;
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <string>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <climits>
#include <cstring>
#include <cstdlib>
#include <fstream>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#define ll long long
#define input freopen("input.in","r",stdin);
#define output freopen("output.out","w",stdout);
#define e printf("\n");
#define all(it,v) for(it=(v).begin();it!=(v).end();it++)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define pii pair<int,int>
typedef vector<vector<ll> > mat;
const ll mx=1000000;
const ll mod=1000000007;
const ll inf=0x3f3f3f3f;
int pos[mx+1];
int dp[mx+1];
vector<int> v[mx+1];
void pre()
{
  int i,j;
  for(i=2;i<=mx;i++)
  {
     if(!v[i].size())
     {
       for(j=i;j<=mx;j+=i)
        v[j].push_back(i);
     }
  }
}
void solve()
{
  memset(pos,-1,sizeof pos);
  dp[0]=-1;
  int x,i,j,k,l,m,n,ans=-1;
  scanf("%d",&n);
  for(i=0;i<n;i++)
  {
    scanf("%d",&x);
    m=v[x].size();
    l=-1;
    for(j=0;j<m;j++)
    {
      k=v[x][j];
      if(pos[k]!=-1)
        l=max(l,pos[k]);
      pos[k]=i;
    }
    if(i)
    {
      dp[i]=max(dp[i-1],l);
      ans=max(i-dp[i],ans);
    }
  }
  if(ans==1)
    ans=-1;
  printf("%d",ans);
  e
}
int main()
{
  pre();
  int t;
  scanf("%d",&t);
  while(t--)
    solve();
  return 0;
}