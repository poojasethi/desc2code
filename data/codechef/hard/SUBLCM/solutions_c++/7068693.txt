/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))
#define TRACE
using namespace std;
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
const int MAX = 1000006;
vector<int> factors[MAX+1];
int ind,last[MAX],Dp[MAX],a[MAX] ;
int pre()
{
   for(int i =2 ; i<=MAX;i++)
   {
    if(factors[i].size()==0)
    {
       for(int j = i ;j<=MAX;j+=i)
          {
              factors[j].pb(i);
          }
    }
   }
}
int cal(int elm){
  int s = -1 ; 
  for(int i=0;i<factors[elm].size();i++)
  { //trace1("hel");
     s = max(last[factors[elm][i]],s);
     last[factors[elm][i]] = ind ; 
  }
  return s ; 
}
int main()
{ 
         #ifdef _WIN32 
           freopen("input.txt", "r", stdin);
           //freopen("output.txt","w",stdout);
          #endif // LOCAL_USER  
geti(t);
pre();
while(t--)
{ 
  mem(last,-1);
  geti(n);
  rep(i,n)
     scanf("%d",&a[i]);
  Dp[0] = 1 ;
  ind = 0 ;
  cal(a[0]); 
  for(int i = 1;i<n;i++)
  {  ind = i  ;
     int tmp = cal(a[i]);
     //trace2(i,tmp); 
     Dp[i] = min(Dp[i-1]+1,i-tmp);
  }
  int ans = 0  ;    
rep(i,n)
 ans = max(ans,Dp[i]);

if(ans<=1) 
  ans = -1 ;

cout<<ans<<endl;
}
return 0 ; 
}