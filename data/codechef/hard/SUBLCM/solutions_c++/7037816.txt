#include "bits/stdc++.h"
#define pb push_back
#define mp make_pair
using namespace std;
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c < '0' || c > '9'){
        c = getchar_unlocked();
    }
    while(c >= '0' && c <= '9'){
        x = (x << 1) + (x << 3) + c - '0';
        c = getchar_unlocked();
    }
    return x;
}
static const int N = 1e5 + 1;
static const int M = 1e6 + 1;
static const int SZ = 7;
static int primes[SZ][M];
static int sizes[M] = {0};
static int last[N];
static int cur = 0;
void pre(){
    for(int i = 2 ; i < M ; ++i){
        if(!sizes[i]){
            for(int j = i ; j < M ; j += i){
                primes[sizes[j]++][j] = cur;
            }
            ++cur;
        }
    }
}
int t , n;
int main(){
    pre();
    t = scan();
    while(t--){
        n = scan();
        for(int i = 0 ; i < cur ; ++i){
            last[i] = 0;
        }
        int ans = 0;
        int dp = 0;
        for(int i = 1 ; i <= n ; ++i){
            int cur = scan();
            int rt = 0;
            for(int j = 0 ; j < sizes[cur] ; ++j){
                rt = max(rt , last[primes[j][cur]]);
                last[primes[j][cur]] = i;
            }
            dp = min(dp + 1 , i - rt);
            ans = max(ans , dp);
        }
        if(ans <= 1){
            ans = -1;
        }
        printf("%d\n",ans);
    }
}