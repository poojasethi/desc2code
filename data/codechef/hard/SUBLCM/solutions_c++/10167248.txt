#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif

int max(int p,int q)
{
    if(p>q)
        return p;
    else
        return q;
}

int min(int p,int q)
{
    if(p<q)
        return p;
    else
        return q;
}

int last[1000005],a[100005],n,cal[100005];
VI b[1000005];

void sieve()
{
    int i,j;
    SET(last,0);
    for(i=2;i<=1000003;i++)
    {
        if(last[i]==0)
        {
            b[i].PB(i);
            j=2*i;
            while(j<=1000002)
            {
                last[j]=1;
                b[j].PB(i);
                j+=i;
            }
        }
    }
}

void calculate()
{
    int tmp,j,i;
    //cout << "*** " ;
    //cout << "*** " ;
   // cout << "*** " ;
   // cout << "*** " ;
    for(i=0;i<b[a[0]].size();i++)
    {
     //   cout << "*** " ;
        last[b[a[0]][i]]=1;
    }
    for(j=1;j<n;j++)
    {
        tmp=-1;
        for(i=0;i<b[a[j]].size();i++)
        {
            //cout << tmp << " " << b[a[j]][i] << " " << last[b[a[j]][i]]   << endl;
            tmp=max(tmp,last[b[a[j]][i]]);
            last[b[a[j]][i]]=j+1;
        }
        cal[j]=tmp;
    }
}

int main()
{
    int i,j,k,max1,temp1,t,sqt,dp[100005];
    si(t);
    sieve();
    while(t--)
    {
        SET(last,0);
        si(n);
        for(i=0;i<n;i++)
        {
            si(a[i]);
        }
        calculate();
      /* for(i=0;i<n;i++)
       {
           cout << cal[i] << " ";
       }*/
        dp[0]=1;
        for(i=1;i<n;i++)
        {
            dp[i]=min(dp[i-1]+1,i-cal[i]+1);
        }
        max1=-1;
        for(i=0;i<n;i++)
        {
            if(max1<dp[i])
            {
                max1=dp[i];
            }
        }
        if(max1==1)
        {
            max1=-1;
        }
        dout(max1);
    }
    return 0;
}
