#include <bits/stdc++.h>
#define maxP 1000000
#define maxn 100005

using namespace std;

int nP, P[1000005], E[1000005];
int n, a[maxn];
int pos[1000005], dp[maxn];

void sangNT() {
    for(int i=1;i<=maxP;i++) E[i]=0;
    nP=0;
    for(int i=2;i<=maxP;i++) if (E[i]==0) {
        P[++nP]=i;
        for(int j=1;j<=maxP/i;j++) E[i*j]=nP;
    }
}

void inp() {
    cin >> n;
    for(int i=1;i<=n;i++) cin >> a[i];
}

void solve() {
    for(int i=1;i<=nP;i++) pos[i]=0;
    dp[0]=0;
    for(int i=1;i<=n;i++) {
        int x=a[i], imax=0;
        while (x>1) {
            int u=E[x];
            imax=max(imax,pos[u]);
            while (x%P[u]==0) x/=P[u];
            pos[u]=i;
        }
        dp[i]=min(dp[i-1]+1,i-imax);
    }
    int ans=dp[1];
    for(int i=2;i<=n;i++) ans=max(ans,dp[i]);
    if (ans>1) cout << ans << "\n"; else cout <<"-1\n";
}

int main() {
    #ifndef ONLINE_JUDGE
    freopen("inp.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif // ONLINE_JUDGE
    ios::sync_with_stdio(false);
    sangNT();
    int T; cin >> T;
    while (T--) {
        inp();
        solve();
    }
}
