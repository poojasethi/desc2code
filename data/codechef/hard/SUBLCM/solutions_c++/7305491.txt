#include<bits/stdc++.h>
using namespace std;

inline void inp( int &n )
{
n=0;
int ch=getchar();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}

while(  ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=getchar();
n=n*sign;
}
int T,N,A[100005];
vector<int> prime[1000006];
int lidx[1000006];


void init()
{
    for(int i=2;i<=1000000;i++)if(prime[i].size()==0)
        for(int j=i;j<=1000000;j+=i)prime[j].push_back(i);
}
int findidx(int k)
{
    int idx=-1;
    for(int i=0;i<prime[A[k]].size();i++)
    {
        idx=max(idx,lidx[prime[A[k]][i]]);
        lidx[prime[A[k]][i]]=k;
    }
    return idx;
}
int main()
{
    init();
    inp(T);
    int len=0;
    while(T--)
    {
        memset(lidx,-1,sizeof(lidx));
        inp(N);for(int i=0;i<N;i++)inp(A[i]);
        int blen=0;
        findidx(0);
        int i=0,j=1;
        len=1;
        while(j<N)
        {
            int idx=findidx(j);
//            cout<<"idx  "<<idx<<endl;
            if((j-len-1)<idx)i=idx+1;
            len=j-i+1;
            blen=max(blen,len);
            j++;
        }
        if(blen==1)
            cout<<-1<<endl;
        else cout<<blen<<endl;
    }


}
