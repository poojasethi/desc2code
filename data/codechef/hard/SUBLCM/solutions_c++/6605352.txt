/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pn printf("\n")
#define pb push_back
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}

vector<int>factors[limit];
int dp[limit];
int last[limit];
int arr[limit];
void sieve()
{
	for(int i = 2; i < limit; i++) {
		if(factors[i].size() == 0) {
			for(int j = i; j < limit; j += i) {
				factors[j].pb(i);
			}
		}		
	}	
}

void solve()
{
	memset(dp, 0, sizeof(dp));
	memset(last, -1, sizeof(last));
	int n;
	s(n);
	for(int i = 1; i <= n; i++) {
		s(arr[i]);
	}
	for(int i = 1; i <= n; i++) {
		int val = 999999;
		for(int j = 0; j < factors[arr[i]].size(); j++) {
			int fac = factors[arr[i]][j];
			if(last[fac] != 999999) {
				val = min(val, i - last[fac]);
			}
			last[fac] = i;
		}
		if(val != 999999)
			dp[i] = min(dp[i - 1] + 1, val);
		else 
			dp[i] = dp[i - 1] + 1;
	}
	int ans = 0;
	for(int i = 1; i <= n; i++) {
		ans = max(ans, dp[i]);
	}
	if(ans < 2) {
		puts("-1");
	}
	else {
		pi(ans); pn;
	}
}

int main()
{
	sieve();
	int t;
	scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
