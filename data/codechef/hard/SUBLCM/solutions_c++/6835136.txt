#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#define in(a) scanf("%d",&a)
#define fo(i,n) for(i=0;i<n;i++)
#define lll long long
#define p_b(a) push_back(a) 
using namespace std;

vector<int> factors[1000001];
int arr[1000001],found[1000001];

lll gcd(lll a,lll b)
{
	if(a==0)	return b;
	else		return gcd(b%a,a);
}

int main()
{	
	int i,j,t,n,best,curans,te;

	
	//precomputing all divisors of the numbers
	
	for(i=2;i<=1000001;i++)
		if(!factors[i].size())
			for(j=i;j<=1000001;j+=i)
				factors[j].p_b(i);
	
	in(t);
	while(t--)
	{
		in(n);
		
		memset(found,-1,sizeof(found));
		
		fo(i,n)		
			in(arr[i]);
			
		best=0;		curans=0;			
		
		for(i=0;i<n;i++)
		{	
			int val=arr[i];
			
			te=-1;
			fo(j,factors[val].size())
			{
				int z=factors[val][j];
				if(found[z]!=-1)   te=max(te,found[z]);
				found[z]=i;
			}
			
			//cout<<te<<endl;
			
			if(te<(i-curans))		te=-1;
			
			if(te==-1)
				curans++;
			
			else 
				curans=i-te;
			
			best=max(best,curans);
		}
		
		if(best==1)	printf("-1\n");
		else		printf("%d\n",best);
	}
	
	return 0;
}