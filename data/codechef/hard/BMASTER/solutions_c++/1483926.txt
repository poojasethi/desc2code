#include <iostream>
#include <cstdio>
#include <map>
#include <cassert>
#define MAX 1000000
using namespace std;

typedef long long ll;
int p[6][2];
ll t[101];
ll save[34][34][6]={0};
const ll one=1;
ll scnt[MAX];
map<ll,ll> mp;
//map<ll,ll>::iterator it;
ll rmask[34]={0},cmask[34]={0};

int inline popcount(ll x)
{
	int a=0;
	while(x>0)
	{
		x-= x&-x;
		a++;
	}
	return a;
}

void setrowmask(int n,int m)
{
	ll i;
	ll res=0;
	for(i=0;i<m;i++)
	{
		res= res<< 1;
		res |=1;
	}
	for(i=0;i<n;i++)
	{
		rmask[i]=res << (i*m);
		//cout<<rmask[i]<<endl;
	}
}

void setcolmask(int n,int m)
{
	ll i,mask=0;
	for(i=0;i<n*m;i++)
	{
		if(i%m==0)
			mask|=one<<i;
	}
	for(i=0;i<m;i++)
	{
		cmask[i]=mask << i;	 
		//cout<<cmask[i]<<endl;
	}
}

void pre(int n,int m)
{
	int x,i,j,r;
	setrowmask(n,m);
	setcolmask(n,m);
	for(x=0;x<6;x++)
	{
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				switch(x)
				{
					case 0:
						//U
						for(r=i-p[0][0];r>=0;r-=p[0][0])
							save[i][j][x]=save[i][j][x] ^ (one<<(r*m+j));
						//D
						for(r=i+p[0][1];r<n;r+=p[0][1])
							save[i][j][x]=save[i][j][x] ^ (one<<(r*m+j));
						break;
					case 1:
						//L
						//cout<<"case 1 "<<i<<" "<<j<<" "<<m<<" "<<n<<endl;
						for(r=j-p[1][0];r>=0;r-=p[1][0])
						{
							//cout<<r<<"\n";
							//getchar();getchar();
							save[i][j][x]=save[i][j][x]^(one<<(i*m+r));
						}
							//R
						for(r=j+p[1][1];r<m;r+=p[1][1])
							save[i][j][x]=save[i][j][x]^ (one<<(i*m+r));
						break;
					case 2:
						//U
						for(r=i-p[2][0];r>=0;r-=p[2][0])
							save[i][j][x]=save[i][j][x]^(one<<(r*m+j));
						//R
						for(r=j+p[2][1];r<m;r+=p[2][1])
							save[i][j][x]=save[i][j][x] ^ (one<<(i*m+r));
						break;
					case 3:
							//R
						for(r=j+p[3][0];r<m;r+=p[3][0])
							save[i][j][x]=save[i][j][x]^(one<<(i*m+r));
						//D
						for(r=i+p[3][1];r<n;r+=p[3][1])
						{
							//cout<<"val= : "<<r*m+j<<endl;
							save[i][j][x]=save[i][j][x]^(one<<(r*m+j));
						}
						break;
					case 4:
						//D
						for(r=i+p[4][0];r<n;r+=p[4][0])
							save[i][j][x]=save[i][j][x]^(one<<(r*m+j));
						//L
						for(r=j-p[4][1];r>=0;r-=p[4][1])
							save[i][j][x]=save[i][j][x]^(one<<(i*m+r));
						break;
					case 5:
						//L
						for(r=j-p[5][0];r>=0;r-=p[5][0])
							save[i][j][x]=save[i][j][x]^(one<<(i*m+r));
						//U
						for(r=i-p[5][1];r>=0;r-=p[5][1])
							save[i][j][x]=save[i][j][x]^(one<<(r*m+j));
				}
			}
		}
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
#endif
	int n,m,q,x;
	ll i,j,k,hash=0,tmp=0;
	scanf("%d %d %d",&n,&m,&q);
	
	int sx,sy;
	scanf("%d %d",&sx,&sy);
	sx--;sy--;
	
	for(i=0;i<6;i++)
		scanf("%d %d",&p[i][0],&p[i][1]);
	
	for(i=0;i<q;i++)
		scanf("%lld",&t[i]);
	
	//input done
	pre(n,m);
	hash= one << (sx*m+sy);
	tmp=hash;
	mp[hash]=0;
	scnt[0]=1;
	for(k=1;k<MAX;k++)
	{
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(hash & (one<<(i*m+j)) )
				{
					x=popcount(hash & rmask[i]) + popcount(hash & cmask[j])-1;
					x=x%6;
					tmp=tmp ^ save[i][j][x];
				}
			}
		}
		if(mp.find(tmp)!=mp.end())
			break;
		mp[tmp]=k;
		hash=tmp;
		scnt[k]=scnt[k-1]+popcount(hash);
		/*for(i=0;i<n;i++)
		{
		    for(j=0;j<m;j++)
		    {
		    	if((hash&(one<<(int)(i*m+j))))
                		cout<<"1 ";
		    	else
		    		cout<<"0 ";	
		    }
		    cout<<endl;
		}
		cout<<endl;*/
	}
	assert(k!=MAX);
	ll psi=mp[tmp],pei=k-1,psize=pei-psi+1,psum=scnt[pei]-scnt[psi-1],res,div;
	//cout<<psi<<" "<<pei<<" "<<psize<<" "<<psum<<endl;
	
	for(i=0;i<q;i++)
	{
		if(t[i]<=pei)
			printf("%lld\n",scnt[t[i]]);
		else
		{
			res=0;
			res+=scnt[psi-1];
			t[i]-=(psi-1);
			div=t[i]/psize;
			res+=div * psum;
			t[i]=t[i] % psize;
			if(t[i] > 0)
				res+=scnt[psi-1 + t[i]]- scnt[psi-1];
			printf("%lld\n",res);
		}
	}
	return 0;
}
