#include<iostream>
#include<cstdio>
#include<cstring>
#include<map>
using namespace std;
 
long long cnt;
map<long long,long long>hash;
long long c[1000000];
void ins(long long x,long long y)
{
 hash[x]=cnt;
 c[cnt]=y;
 cnt++;
}
  
int main()
{
    bool a[50][50],b[50][50];
    int i,j,k,p1[6],p2[6],n,m,sx,sy,q,cross,x,f,row[50],col[50];
    long long t,ans,temp,ab,cd,pre,ii,period,start;
    char d1[]="ULURDL",d2[]="DRRDLU";
    scanf("%d %d %d",&n,&m,&q);
    scanf("%d %d",&sx,&sy);
    for(i=0;i<6;i++)
    scanf("%d %d",p1+i,p2+i);
    
    cnt=0;
    
    memset(a,0,sizeof a);
    a[sx][sy]=1;
    
    ans=0LL;f=1;
    for(i=1;i<=n;i++)
    for(j=1;j<=m;j++)
    {ans=(ans<<1)|a[i][j];}
    ins(ans,1LL);
    
    while(1)
    {
              memset(row,0,sizeof row);
              memset(col,0,sizeof col); 
                    
              for(i=1;i<=n;i++)
              for(j=1;j<=m;j++)
              {b[i][j]=a[i][j];row[i]+=b[i][j];col[j]+=b[i][j];}
              
              for(i=1;i<=n;i++)
              for(j=1;j<=m;j++)
              if(a[i][j])
              {
                         /*for(k=cross=0;k<=n;k++)
                         cross+=a[k][j];
                         
                         for(k=0;k<=m;k++)
                         cross+=a[i][k];
                         */
                         cross=row[i]+col[j]-1;
                         //cross-=1;
                         
                         x=cross%6;
                         
                         switch(d1[x])
                         {
                                      case 'U':for(k=i-p1[x];k>=0;k-=p1[x])
                                               b[k][j]=!b[k][j];
                                               break;
                                      case 'D':for(k=i+p1[x];k<=n;k+=p1[x])
                                               b[k][j]=!b[k][j];
                                               break;
                                      case 'L':for(k=j-p1[x];k>=0;k-=p1[x])
                                               b[i][k]=!b[i][k];
                                               break;
                                      case 'R':for(k=j+p1[x];k<=m;k+=p1[x])
                                               b[i][k]=!b[i][k];
                                               break;
                         }
                         
                         
                         switch(d2[x])
                         {
                                      case 'U':for(k=i-p2[x];k>=0;k-=p2[x])
                                               b[k][j]=!b[k][j];
                                               break;
                                      case 'D':for(k=i+p2[x];k<=n;k+=p2[x])
                                               b[k][j]=!b[k][j];
                                               break;
                                      case 'L':for(k=j-p2[x];k>=0;k-=p2[x])
                                               b[i][k]=!b[i][k];
                                               break;
                                      case 'R':for(k=j+p2[x];k<=m;k+=p2[x])
                                               b[i][k]=!b[i][k];
                                               break;
                         }
              }
    
    ans=0LL;f=0;
    for(i=1;i<=n;i++)
    for(j=1;j<=m;j++)
    {a[i][j]=b[i][j];ans=(ans<<1)|a[i][j];f+=a[i][j];}
    
    if(hash[ans]==0LL)
    {ins(ans,(long long)f);}
    else {break;}
    }
    
    ab=hash[ans];
    period=cnt-ab;
    start=ab;
    temp=0LL;
    for(ii=start;ii<cnt;ii++)
    {temp+=c[ii];c[ii]=temp;}
    
    pre=0LL;
    for(ii=0;ii<start;ii++)
    {
    pre+=c[ii];
    c[ii]=pre;
    }
//printf("%lld %lld\n",start,period);
    while(q--)
    {
              scanf("%lld",&t);
              ans=0LL;
              if(t<start)
              {ans=c[t];}
              
              else
              {
                 ab=(t-start+1LL)/period;
                 cd=temp*ab;
                 ans=cd+pre;
                 
                 ab=start-1LL+(t-start+1LL)%period;
                 if(ab>=start)
                 ans+=c[ab];
              }
              printf("%lld\n",ans);
              }
    
//    system("pause");
    return 0;
}
