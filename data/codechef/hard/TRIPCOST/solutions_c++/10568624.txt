//Amit Gupta              
//i
#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
typedef pair<int,int> II;
#define REP(i,i1,n) for(int i=i1;i<n;i++)
#define REPB(i,i1,n) for(int i=i1;i>=n;i--)
#define PB push_back
#define MP make_pair
#define ALL(c) (c).begin(),(c).end()
#define F first
#define S second
#define SZ(a) (LL)a.size()
#define EPS 1e-12
#define MOD 1000000007
#define TR1(x) cerr<<#x<<" : "<<x<<endl
#define TR2(x,y) cerr<<#x<<" : "<<x<<" | "<<#y<<" : "<<y<<endl
#define FAST_IO ios_base::sync_with_stdio(false);cin.tie(NULL)
#define SI(c) scanf("%d",&c)
#define SII(c,d) scanf("%d%d",&c,&d)
#define SLL(c) scanf("%lld",&c)
#define PIN(c) printf("%d\n",c)
#define PLLN(c) printf("%lld\n",c)
#define N 200010
#define endl '\n'
#define FILL(ar,vl) for(int i=0;i<N;i++)ar[i]=vl
#define FILL2(ar,vl) for(int i=0;i<N;i++)for(j=0;j<N;j++)ar[i][j]=vl
//--------------------------MAIN CODE STARTS HERE----------------
int D,n;
bool check(int m,int a[],int b[],int L) {
    int d=0;int cost=a[0];int pos=-1;int f=0;int cnt=0;
    while(d<n) {
        cnt++;
        while(D>=cost) {
            if(b[d]<=m) {
                pos=d;
            }
            d++;
            if(d==n)
                break;
            cost+=a[d];
        }
        if(d==n)
            break;
        if(pos==-1) {
            f=1;
            break;
        }
        d=pos+1;
        pos=-1;
        cost=a[d];
    }
  //  TR2(m,cnt);
  //  TR1(f);
    if(f==1||cnt>L)
        return false;
    else
        return true;
}

int main()
{	
    int t;
    SI(t);
    while(t--) {
        SII(n,D);
        int a[n],b[n];
        REP(i,0,n)
            SII(a[i],b[i]);
        int d=0;int cnt=0;int vl=a[0];
        while(d<n) {
            vl=a[d];
            while(D>=vl)
                d++,vl+=a[d];
            cnt++;
        }
        int L=cnt;
        int l=0,h=n;
        while(l<h) {
            int m=l+(h-l)/2;
            bool f=check(m,a,b,L);
            if(!f)
                l=m+1;
            else
                h=m;
           // TR2(l,h);
        }
        if(L==1)
            printf("%d %d\n",L,0);
        else
            printf("%d %d\n",L,l);
    }
    return 0;
}
