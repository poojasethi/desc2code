#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <set>
#include <queue>
#include <map>
#include <string>
#include <cstring>
#include <ctime>
using namespace std;
#define For(i,a,b) for(int i=a;i<=b;i++)
#define Ford(i,a,b) for(int i=a;i>=b;i--)
#define Rep(i,c) for((type of c.begin()) i;i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sr(x) (int)x.size()
#define modul 1000000007
#define nmax 111111
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; For(_,a,b) cout << x[_] << ' '; cout << endl;}
#define fillchar(x,a,b,delta) For(_,a,b) x[_]=delta;
#define Bit(s,i) (s&(1<<i))
#define Two(x) (1<<x)
#define pii pair<int,int>
#define ll long long
#define e 1e-6
#define pi acos(-1)
int n,F[nmax],G[nmax],c[nmax],st[nmax],D,stest;
ll d[nmax];
int main()
{
   // freopen("codechef.inp","r",stdin);
    scanf("%d",&stest);
    while (stest) {
        stest--;
        scanf("%d%d",&n,&D);
        For(i,1,n) scanf("%lld %d",&d[i],&c[i]);
        For(i,1,n) d[i]=d[i-1]+d[i];
        int j=0,top=0,dau=1,t=0;
        top++;st[1]=0;
        For(i,1,n) {
            while (d[i]-d[j]>D) j++;
           // BUG(i);BUG(j);
            if (j>t) while (t+1<i) {
                t++;
                while (top>=dau && G[t]<G[st[top]]) top--;
                st[++top]=t;
            }
            while (dau<=top && st[dau]<j) dau++;
           // BUG(st[dau]);BUG(t);
            F[i]=F[st[dau]]+1;if (i<n) G[i]=max(G[st[dau]],c[i]); else G[i]=G[st[dau]];
       //     BUG(F[i]);BUG(G[i]);
        }
        printf("%d %d\n",F[n],G[n]);
    }
    return 0;
}








