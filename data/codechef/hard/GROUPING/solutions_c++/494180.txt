#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <map>
#include <queue>
#include <sstream>
#include <numeric>
#include <functional>
#include <set>
#include <cmath>
#include <stack>
#include <fstream>
#include <cassert>
#ifdef HOME_PC
#include <ctime>
#endif
using namespace std;

#pragma comment(linker,"/stack:16000000")
#pragma warning (disable : 4996)

#define ALL(v) v.begin(),v.end()
#define SZ(v) (int)v.size()
#define mset(A,x) memset((A),(x),sizeof(A))
#define FOR(i,start,N) for(int i=(start);i<(N);++i)
#define FORSZ(i,start,v) FOR(i,start,SZ(v))
#define REPSZ(i,v) FORSZ(i,0,v)
#define FORE(i,start,N) FOR(i,start,N+1)
#define make_unique(v) v.resize(unique(ALL(v))-v.begin())
#define debug(x) cout<<#x<<" = "<<x<<endl;
#define adebug(A,N) FOR(i,0,N) cout<<#A<<"["<<i<<"] = "<<A[i]<<endl;
#define adebug2d(a,n,m) FOR(i,0,n) { FOR(j,0,m) { cout<<a[i][j]<<" ";} cout<<endl;}
#define vdebug(v) REPSZ(i,v) cout<<#v<<"["<<i<<"] = "<<v[i]<<endl;
#define selfx(x,f,a) x = f(x,a)
#define sqr(x) ((x)*(x))


typedef pair<int,int> pii;
typedef long long i64;
typedef vector<int> VI; typedef vector< vector<int> > VVI;
typedef vector<string> VS;

const int inf = 1<<25;
const double eps = 1e-9;


const int MAXN = 1<<15;

VI adj[MAXN];
int c[MAXN];

int N,M,K;


VVI ans;

VI cur;

bool inSet[MAXN];


int cmp(int i,int j)
{
	return c[i] > c[j];
}


void go(int u)
{
	if(ans.size()>=K)
		return;
	inSet[u] = true;
	cur.push_back(u);

	REPSZ(i,adj[u])
	{
		int v = adj[u][i];
		if(c[v] < c[u])
		{
			int cnt = cur.size();
			REPSZ(j,adj[v])
			{
				int v1 = adj[v][j];
				if(inSet[v1])
					--cnt;
			}
			if(cnt == 0)
				go(v);
		}
	}
	ans.push_back(cur);


	cur.pop_back();
	inSet[u] = false;
}


int main(int argc, char* argv[])
{
#ifdef HOME_PC
	//freopen ("input.txt","r",stdin);
	freopen ("in.txt","r",stdin);
	//freopen ("output.txt","w",stdout);
#endif

	int tt;
	mset(inSet,false);
	scanf("%d",&tt);
	for(int cas = 1;cas<=tt;++cas)
	{
		scanf("%d %d %d",&N,&M,&K);
		FOR(i,0,N)
			adj[i].clear();
		FOR(i,0,N)
			scanf("%d",c+i);
		FOR(i,0,M)
		{
			int u,v;
			scanf("%d %d",&u,&v);
			adj[u].push_back(v);
			adj[v].push_back(u);
		}
		
		VI order(N);
		FOR(i,0,N)
			order[i] = i;

		sort(ALL(order),cmp);
		FOR(i,0,N)
			sort(ALL(adj[i]),cmp);

		ans.clear();

		FOR(i,0,N)
			if(ans.size() < K)
				go(order[i]);

		FOR(i,0,K)
		{
			sort(ALL(ans[i]));
			REPSZ(j,ans[i])
			{
				if(j) printf(" ");
				printf("%d",ans[i][j]);
			}
			printf("\n");
		}
		printf("\n");
	}
#ifdef HOME_PC
	cerr<<endl<<"Execution time = "<<clock()<<" ms"<<endl;
#endif
	return 0;
}

