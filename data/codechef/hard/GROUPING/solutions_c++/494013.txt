# include <algorithm>
# include <cctype>
# include <cmath>
# include <cstdio>
# include <cstring>
# include <iostream>
# include <set>
# include <vector>
# include <queue>

using namespace std;

struct two
{
	int x,y;
	bool operator<(const two t)const
	{
		return x>t.x;
	}
}twoarray[10000];

unsigned int adjmat[10000][313];

int donetillnow,todototal;
char beenused[10000];
int dfsarray[10000];

int N,M;
void work(int start,int used)
{
	if(donetillnow==todototal)return;
	int v=twoarray[start].y;
	for(int i=0;i<used;i++)
		if((adjmat[dfsarray[i]][v>>5]&(1u<<(v&31)))==0)goto bpp;
	dfsarray[used]=v;
	beenused[v]=1;
	if(start<N-1)work(start+1,used+1);
	if(donetillnow==todototal)return;
	for(int i=0;i<N;i++)
		if(beenused[i])printf("%d ",i);
	printf("\n");
	if(++donetillnow==todototal)return;
	beenused[v]=0;
	bpp:
	if(start<N-1)work(start+1,used);
}

int main()
{
	int T;
	scanf("%d",&T);
	
	for(int t=1;t<=T;t++)
	{
		scanf("%d%d%d",&N,&M,&todototal);
		
		memset(beenused,0,N);
		for(int i=0;i<N;i++)
		{
			twoarray[i].y=i;
			scanf("%d",&twoarray[i].x);
			memset(adjmat[i],0,313<<2);
		}
		sort(twoarray,twoarray+N);
		
		for(int i=0;i<M;i++)
		{
			int a,b;
			scanf("%d%d",&a,&b);
			adjmat[a][b>>5]|=(1u<<(b&31));
			adjmat[b][a>>5]|=(1u<<(a&31));
		}
		
		donetillnow=0;
		work(0,0);
		printf("\n");
	}
	
	return 0;
}
