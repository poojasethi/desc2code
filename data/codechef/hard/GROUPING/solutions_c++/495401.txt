#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>

using namespace std;

#define f(i, a, b) for(int i = a; i < b; i++)
#define rep(i, n) f(i, 0, n)

const int N = 10000;
typedef pair<int, int> pii;

int T;
int n, m, k, K;
int x[N];
pii pr[N];
vector<pii> adj[N];
map<int, int> con[N];

int v[N], w[N], p;

void go(int cur) {

    rep(i, adj[cur].size()) {

        if(k == K) break;

        int next = adj[cur][i].second;
        int ok = 1;

        rep(j, p - 1) if(!con[v[j]][next]) {
            ok = 0;
            break;
        }

        if(ok) {
            v[p++] = next;
            go(next);
            p--;
        }

    }

    if(k < K) {

        rep(i, p) w[i] = v[i];
        sort(w, w + p);
        rep(i, p) printf("%d ", w[i]);
        printf("\n");
        k++;

    }

}

int main(){

    scanf("%d", &T); while(T--) {

        scanf("%d %d %d", &n, &m, &K);
        rep(i, n) {
            scanf("%d", &x[i]);
            pr[i] = pii(x[i], i);
            adj[i].clear();
            con[i].clear();
        }

        sort(pr, pr + n, greater<pii>());

        rep(i, m) {
            int a, b; scanf("%d %d", &a, &b);
            if(x[a] < x[b]) swap(a, b);
            adj[a].push_back(pii(x[b], b));
            con[a][b] = 1;
        }

        rep(i, n) sort(adj[i].begin(), adj[i].end(), greater<pii>());

        k = 0;
        p = 1;
        rep(i, n) {
            if(k == K) break;
            v[0] = pr[i].second;
            go(pr[i].second);
        }

        printf("\n");

    }
}
