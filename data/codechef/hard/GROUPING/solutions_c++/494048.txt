#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9






vector<int> adj[200010];
int vis[200010];
vector<int> ans[100];
vector<int> temp;
int n,ai,k;

struct pt
{
    int idx,val;
}p[200010];




void ini()
{
    int i;
    temp.clear();
    for(i=0;i<100;i++) ans[i].clear();
    for(i=0;i<200010;i++) adj[i].clear();
}



int cmp(pt a,pt b)
{
    return a.val>b.val;
}



void bttk(int idx,int taken)
{

    int cnt=0,i,v;
    if(ai==k) return;

    //cout<<n;

    //while(1);
    if(idx==n )
    {
        if(!taken) return;

        ans[ai++]=temp;
        return;
    }



    for(i=0;i<adj[ p[idx].idx ].size();i++)
    {
        v=adj[p[idx].idx][i];
        if(vis[v]) cnt++;
        if(cnt==taken) break;
    }


    if(cnt==taken)
    {

     //   cout<<p[idx].idx<<" ";
        temp.push_back(p[idx].idx);
        vis[p[idx].idx]=1;

       // cout<<"v"<<p[idx].idx<<" ";
        bttk(idx+1,taken+1);

        vis[p[idx].idx]=0;
     //   cout<<"u"<<p[idx].idx<<" ";
        temp.pop_back();

    }



    bttk(idx+1,taken);


}




int main()
{
    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);

    int b,c,mx,T,turn,i,m,x,y,L,cnt,j;

    scanf("%d",&T);

    while(T--)
    {

        ini();
        ai=0;
        scanf("%d %d %d",&n,&m,&k);


        for(i=0;i<n;i++)
        {
            p[i].idx=i;
            scanf("%d",&p[i].val);
        }
        sort(p,p+n,cmp);



        for(i=0;i<m;i++)
        {
            scanf("%d %d",&x,&y);
            adj[x].push_back(y);
            adj[y].push_back(x);
        }



        bttk(0,0);

        for(i=0;i<ai;i++)
        {
            sort(ans[i].begin(),ans[i].end());
            for(j=0;j<ans[i].size();j++)
            {
                if(j)printf(" ");
                printf("%d",ans[i][j]);
            }
            printf("\n");
        }
        printf("\n");


    }



    return 0;
}
