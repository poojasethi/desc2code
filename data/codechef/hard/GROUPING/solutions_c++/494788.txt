#include <iostream>
#include<cstdio>
#include<vector>
#include<string>
#include<algorithm>
#include<cstring>
#include<bitset>
using namespace std;

#define SIZE 10009

typedef pair<int,int> pii;

int K, N;
bitset<SIZE> ret, temp;
bitset<SIZE> edges[SIZE];
pii arr[SIZE];
int mp[SIZE], res[SIZE], res1[SIZE];
int idx;

bool cmp(const pii &a, const pii &b){
	return a.first > b.first;
}

void print(){
	int cnt = 0, i;
	for( i = 0; i<N; ++i){
		if( ret.test(i) ){
			res1[cnt++] = arr[i].second;					
		}
	}
	
	sort(res1, res1 + cnt);
	for( i = 0; i<cnt; ++i){
		if(i) putchar(' ');
//				else ok = true;
							
		printf("%d", res1[i]);
	}
	puts("");
	K--;
}

void bktk(int pos){
	int i;
	if(pos >= N){					
			
		print();
		
		
		return ;
	}
	
	int j;
	bool ok;
	
	for( i = pos; i<N; ++i){
		ok = true;
		
//		temp = ret;
//		temp = (temp & edges[i]);
//		if( temp != ret) continue;
		for( j = 0; j<idx; ++j){
			if( !edges[i].test(res[j])){
				ok = false;
				break;
			}
		}
		
		if(ok == false) continue;
		
		ret.set(i);
		res[idx] = i;
		++idx;
		bktk(i+1);
		ret.reset(i);
		--idx;
		if( K == 0) return;
	}
	
	if(K == 0) return;
	print();
}
int main() {
	int T, M, i, a, b;
	
	scanf("%d", &T);
	
	while(T--){
		scanf("%d%d%d", &N, &M, &K);
//		++cs;
		
		for( i = 0; i<N; ++i){
			scanf("%d", &arr[i].first);
			arr[i].second = i;
		}
		
		sort( arr, arr+N, cmp);
		
		for( i = 0; i<N; ++i){
			mp[arr[i].second] = i;
			edges[i].reset();
		}
		
		for( i = 0; i<M; ++i){
			scanf("%d%d", &a, &b);
			//gr[ mp[a] ][ mp[b] ] = cs;
			a = mp[a]; b = mp[b];
			edges[a].set(b);
			edges[b].set(a);			
		}
		
//		for( i = 0; i<N; ++i){
//			for( int j = 0; j<N; ++j){
//				cout << edges[i].test(j);
//			}
//			cout<<endl;
//		}
		
		
		i = 0;
		while(i<N && K){
			
			ret.reset();
			res[0] = i;
			idx = 1;
			ret.set(i);
			bktk(i+1);
			++i;
		}
		puts("");
	}
	
	return 0;
}
