#include <iostream>
#include <cstdio>
#include <algorithm>
 
using namespace std;
 
const int MOD = 1000000007;
const int MAXN = 2222222;
 
int fac[MAXN], inv[MAXN], Tn;
 
int power (int x, int y) {
	if (y == 1)
		return x;
	int q = power(x, y / 2);
	q = (q * 1LL * q) % MOD;
	if (y & 1)
		q = (q * 1LL * x) % MOD;
	return q;
}
 
int C (int n, int k) {
	inv[k] = power(fac[k], MOD - 2);
	inv[n - k] = power(fac[n - k], MOD - 2);
	return (((fac[n] * 1LL * inv[k]) % MOD) * 1LL * inv[n - k]) % MOD;
}
 
int main (int argc, char * const argv[]) {
	scanf("%d", &Tn);
	fac[0] = inv[0] = 1;
	for(int i = 1; i <= 2000000; i++) {
		fac[i] = (fac[i - 1] * 1LL * i) % MOD;
	}
	while (Tn--) {
		int n, k, ret = 0;
		
		scanf("%d %d", &n, &k);
		
		long long alpha;
		
		alpha = (((k + n + 1) * 1LL * C(k + n, k) + MOD - (1LL * k * k) % MOD + MOD - 3LL * k + MOD - 2 + MOD) % MOD) % MOD;
		alpha = (alpha * 2LL * n) % MOD;
		alpha %= MOD;
		alpha = (alpha * 1LL * power(k + 1, MOD - 2)) % MOD;
		alpha = (alpha * 1LL * power(k + 2, MOD - 2)) % MOD;
		
		ret = (n + alpha) % MOD;
		printf("%d\n", ret);
	}
    return 0;
}