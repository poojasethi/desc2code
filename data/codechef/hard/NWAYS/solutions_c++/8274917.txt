#include <iostream>
#define MOD 1000000007
#define total 2000000
#define lli long long int

using namespace std;

lli fact[total+1]={0};

void pre_processing()
{
    lli i;
    fact[0] = 1%MOD;
    for(i=1; i<=total; i++)
        fact[i] = (i*fact[i-1])%MOD;
}
lli fast_exponentiation(lli a, lli b)
{
    lli x;
    if(b == 0)
        return 1%MOD;
    else if(b%2 == 0)
    {
       x =  fast_exponentiation(a, b/2);
       return (x*x)%MOD;
    }
    else
    {
        x = fast_exponentiation(a, b/2);
        x = (x*x)%MOD;
        x = (x*a)%MOD;
        return x;
    }
}
lli fft(lli x)
{
    return fast_exponentiation(fact[x], MOD-2);
}
int main()
{
    lli t,n,k,ans,ans1,t1;
    cin >> t;
    pre_processing();
    while(t--)
    {
        cin >> n >> k;
        ans = (2*n)%MOD;
        ans = (ans*fact[k+n])%MOD;
        t1 = (fft(k+1)*fft(n-1))%MOD;
        ans = (ans*t1)%MOD;
        ans = (ans - n)%MOD;
        ans1 = (2*(k+1))%MOD;
        ans1 = (ans1*fact[k+n])%MOD;
        t1 = (fft(k+2)*fft(n-2))%MOD;
        ans1 = (ans1*t1)%MOD;
        ans = (ans - ans1)%MOD;
        cout << (ans+MOD)%MOD << "\n";
    }
    return 0;
}
