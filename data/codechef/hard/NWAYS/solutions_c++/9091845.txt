#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <functional>
#include <math.h>
#include <map>
 
inline bool fastreadIsEndOfLine(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
    if(c == '\r' || c == '\n')
      return true;
  }
 
  return false;
}
inline void fastread(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}
inline void fastreadll(long long* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
}
inline void fastreadNeg(int* a)
{
  register char c = 0;
  while (c < 33)
    c = getchar();
  *a = 0;
  bool neg = false;
  if(c == '-')
  {
	  c = getchar();
	  neg = true;
  }
  while (c > 33)
  {
    *a = (*a <<1)+(*a<<3) + c - '0';
    c = getchar();
  }
 
  if(neg)
	  *a = -*a;
}
inline void readString(char *s)
{
  *s = getchar();
  while(*s == '\r' || *s == '\n' || *s == -1)
    *s = getchar();
 
  while(*s != '\r' && *s != '\n' && *s != -1)
  {
    ++s;
    *s = getchar();
  }
  *s = '\0';
}
 
int N, K, M;
int T = 1;
 
long long F[1000000 + 1000000 + 10];
 
long long power(long long a, long long b)
{
  long long temp=a,ans=1;
  while(b>0)
  {
    if(b%2==0)
    {
      temp=(temp*temp)%1000000007;
      b/=2;
    }
    else
    {
      ans=(ans*temp)%1000000007;
      b--;
    }
  }
  return ans;
} 

long long power2(long long a, long long n)
{
	int res = 1;
	while ( n ) {
		if ( n&1 ) res=(1LL*res*a)%1000000007;
		a = (1LL*a*a)%1000000007;
		n >>= 1;
	}
	return res;
} 

 
int main()
{
#ifdef USE_DATA_TXT
  freopen_s(&stream, "C:\\Projects\\TaskTemplate\\data.txt", "r", stdin);
#endif
#ifdef PRINT_PERF
  auto start = std::chrono::high_resolution_clock::now();
#endif
 
  fastread(&T);
 
  // Precompute factorials
  F[0] = F[1] = 1;
  for(long long i = 2; i < 1000000 + 1000000 + 10; ++i)
  {
    F[i] = (i * F[i - 1]) % 1000000007;
  }
 
  while(T--)
  {
    fastread(&N);
    fastread(&K);

    //long long denom = (F[K+2] * F[N-1]) % 1000000007;
    //denom = (long long)(std::pow<long long, int>(denom, 1000000007 - 2)) % 1000000007;
    //int result2 = (((2LL * F[K+N+1]) / denom)%1000000007 - N + 1000000007)%1000000007;

    int result2 = (((2LL*F[K+N+1]*power((1LL*F[K+2]*F[N-1])%1000000007, 1000000007-2))%1000000007 - N + 1000000007)%1000000007);
    printf("%d\n", result2);
  }
 
#ifdef PRINT_PERF
  PrintResultPerf(start);
#endif
#ifdef USE_DATA_TXT
  if(stream)
  {
    fclose(stream);
    stream = NULL;
  }
#endif
 
  return 0;
}