// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007LL
#define MAXN 2000010 
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll);
ll GCD(ll,ll);
ll fact[MAXN];
ll inv[MAXN];
ll a[MAXN];
int main()
{
	int tc;scanf("%d",&tc);
	fact[0]=fact[1]=1LL;
	for(ll i=2;i<MAXN;i++)
		fact[i]=(fact[i-1]*i)%MOD;
	inv[MAXN-3]=exp(fact[MAXN-3],MOD-2);
	for(ll i=MAXN-4;i>=0LL;i--)
		inv[i]=((i+1LL)*inv[i+1])%MOD;
	while(tc--)
	{
		ll n,k;scanf("%lld%lld",&n,&k);
		ll s=0;
		ll ans=0;
		ans = (fact[n+k+1]*((inv[n-1]*inv[k+2])%MOD)) % MOD;
		ans = (2*ans%MOD - n+MOD)%MOD;
		printf("%lld\n",((ans%MOD)+MOD)%MOD);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%MOD;
		mult=(mult*mult)%MOD;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



