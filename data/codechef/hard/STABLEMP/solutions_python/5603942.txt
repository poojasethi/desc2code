class Stack :
  def __init__(self) :
    self.items = []

  def push(self, item) :
    self.items.append(item)

  def pop(self) :
    return self.items.pop()

  def isEmpty(self) :
    return (self.items == [])

def marryThem(men,women):
    cuples = {}
    free = Stack()
    for m in men.keys():
        free.push(m)

    while not free.isEmpty():
        m = free.pop()
        w = men[m][0]
        men[m].remove(w)
        if not w in cuples:
            cuples[w] = m 
        else:
            for pw in women[w]:
                if pw == cuples[w]:
                    free.push(m)
                    break
                elif pw == m :
                    free.push(cuples[w])
                    cuples[w] = m
                    break
  
    return cuples


def main():
    testcases = int(raw_input())
    
    for i in range(testcases):       
        n = int(raw_input())

        men = {}
        women = {}

        for j in range(2*n):
            line = raw_input().split()
            if j < n:
                women[line[0]] = line[1:]
            else:
                men[line[0]] = line[1:]

        cuples = marryThem(men, women)
        cuples = sorted(cuples.items(), key=lambda x:x[1])
        for x,y in cuples:
            print y, x




if __name__ == "__main__":
    main()  