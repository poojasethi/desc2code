def stablemp():
    from sys import stdin
    from cStringIO import StringIO
    readln = iter(StringIO(stdin.read())).next
    #matches = StringIO()
    t = int(readln(), 10)
    for _ in xrange(t):
        n = int(readln(), 10)
        xrn = range(n)
        rankf = [[-1 for _ in xrn] for _ in xrn]
        for i in xrn:
            lnsplit = [int(num, 10) - 1 for num in readln().split()]
            ranks = [-1 for _ in xrn]
            for idx, p in enumerate(lnsplit[1:]):
                ranks[p] = idx
            rankf[i] = ranks
        prefm = [[-1 for _ in xrn] for _ in xrn]
        for i in xrn:
            lnsplit = [int(num, 10) - 1 for num in readln().split()]
            prefm[i] = lnsplit[1:]
        c = [0 for _ in xrn]
        p = [-1 for _ in xrn]
        s = range(n)
        while s:
            i = s.pop()
            k = prefm[i][c[i]]
            pk = p[k]
            if pk == -1 or rankf[k][i] < rankf[k][pk]:
                if pk >= 0:
                    s.append(pk)
                    c[pk] += 1
                p[k] = i
            else:
                s.append(i)
                c[i] += 1
        for w, m in enumerate(p):
            print m + 1, w + 1
            #matches.write("{0} {1}\n".format(m + 1, w + 1))
    #print matches.getvalue()

stablemp()
#if __name__ == "__main__":
#    stablemp()