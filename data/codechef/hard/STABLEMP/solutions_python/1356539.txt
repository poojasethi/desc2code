import sys
import operator
from collections import defaultdict

def stablemp(gprefs, bprefs, guh, buh):
    final = {}
    freeb = set(gprefs)
    freeg = set(gprefs)
    while freeb:
        m = freeb.pop()
        w = buh[m].pop()
        if w in freeg:
            final[w] = m
            freeg.remove(w)
        elif w in final:
            if gprefs[w][m] < gprefs[w][final[w]]:
                freeb.add(m)
            else:
                t = final[w]
                final[w] = m
                freeb.add(t)
    ret = {}
    for key, value in final.items(): ret[value] = key
    return ret


def main():
    s = sys.stdin.readline
    t = int(s())
    for i in range(t):
        gprefs = {}
        bprefs = {}
        guh = {}
        buh = {}
        n = int(s())
        l = range(n)[::-1]
        for j in range(1, n+1):
            a = map(int, s().split())[1:]
            b = l
            gprefs[j] = dict(zip(a, b))
            a.reverse()
            guh[j] = a
        for j in range(1, n+1):
            a = map(int, s().split())[1:]
            b = l
            bprefs[j] = dict(zip(a, b))
            a.reverse()
            buh[j] = a
        ans = stablemp(gprefs, bprefs, guh, buh)
        for i in sorted(ans):
            print i, ans[i]
if __name__ == '__main__':
    main()









