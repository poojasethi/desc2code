#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define ll long long
const int mod=1000000007;
long long pwr(long long a,long long b,long long mod)
{
  if(b==0)
    return 1;
  long long temp=pwr(a,b/2,mod);
  temp=(temp*temp)%mod;
  if(b&1)
    temp=(temp*a)%mod;
  return temp;
}
long long pwr(long long a,long long b)
{
  if(b==0)
    return 1;
  long long temp=pwr(a,b/2);
  temp=(temp*temp);
  if(b&1)
    temp=(temp*a);
  return temp;
}
long long gcd(long long a,long long b)
{
  return b==0?a:gcd(b,a%b);
}
long long lcm(long long a,long long b)
{  
  return (a/gcd(a,b))*b;
}
long long modularInverse(long long a,long long m)
{
      return pwr(a,m-2,m);
}
int priorityListWomen[501][501];
int priorityListMen[501][501];
 
int isEngagedTo[501];
int isHusbandOf[501];
int main(void)
{
  int t;
  cin>>t;
  int womanIndex;
  int manIndex;
 
  while(t--)
  {
    int n;
    cin>>n;
    memset(isEngagedTo,-1,sizeof(isEngagedTo));
    for(int i=0;i<n;++i)
    {
        scanf("%d",&womanIndex);
        for(int j=n-1;j>=0;--j)
        {
          scanf("%d",&manIndex);
 
          priorityListWomen[womanIndex][manIndex]=j+1;
        }
    }
 
    for(int i=0;i<n;++i)
    {
        scanf("%d",&manIndex);
        for(int j=0;j<n;++j)
        { 
          scanf("%d",&priorityListMen[manIndex][j]);
          // scanf("%d",&womanIndex);
          // priorityListMen[manIndex][womanIndex]=j+1;
        }
    }
 
    queue<int> freeMen;
    for(int i=0;i<n;++i)
      freeMen.push(i+1);
 
    while(!freeMen.empty())
      {
 
        manIndex=freeMen.front();
        // cout<<freeMen.size()<<endl;
        // cout<<"Man :"<<manIndex<<endl;
        /* start asking all women in his list */
        for(int i=0;i<n;++i)
        {
          int womanIndex=priorityListMen[manIndex][i] ;
          // cout<<"Tries on"<<womanIndex<<endl;
          if(isEngagedTo[womanIndex]==-1)
          {
            isEngagedTo[womanIndex]=manIndex;
            isHusbandOf[manIndex]=womanIndex;
            freeMen.pop();
            // cout<<"Free and accepted \n";
            break;
          } 
 
          else 
          {
            int prevSuitor=isEngagedTo[womanIndex];
            int currentSuitor= manIndex;
            // cout<<"Was engaged to"<<prevSuitor<<endl;
            if(priorityListWomen[womanIndex][prevSuitor]>priorityListWomen[womanIndex][currentSuitor])
              {
                continue;
              }
            else
            {
              freeMen.pop();
              freeMen.push(prevSuitor);
              isEngagedTo[womanIndex]=currentSuitor;
              isHusbandOf[currentSuitor]=womanIndex;
              break;
            }
          }
 
 
        }
 
 
      }
 
      for (int i = 1; i <=n; ++i)
      {
        printf("%d %d\n",i,isHusbandOf[i]);
      }
  }
} 