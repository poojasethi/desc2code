#include<iostream>
#include<queue>
#include<stack>
#include<list>
#include<iomanip>
#include<string>
#include<map>
#include<set>
#include<vector>
#include<algorithm>
#include<math.h>
#include<stdio.h>
#include<cstring>
#include<fstream>
#include<stdlib.h>
#include<sstream>

#define PI (double (2.0 * acos(0.0)) )
#define EPS (double (1.0e-8))
#define INF (1 << 30)
#define INF_LONG (1LL << 62)

using namespace std;

template<class number>
bool Faster_Input_For_Positive_Integers(number *N)
{
    char c;
    while((c=getchar())&&(!isdigit(c)))
    {
        if(c==EOF)
        {
            return false;
        }
    }

    for(*N=c-'0';(c=getchar())&&isdigit(c);)
    {
        *N = (*N)*10+c-'0';
    }

    return true;
}

struct Person
{
    vector<int> preferences;
    int couple;

    int Prefer(int a,int b)
    {
        for(int i=0;preferences.size();i++)
        {
            if(preferences[i]==a)
            {
                return a;
            }
            else if(preferences[i]==b)
            {
                return b;
            }
        }
    }

    Person():couple(-1){}
};

void stable_marriage(vector<Person> men,vector<Person> women)
{
    int N = men.size();
    int fre=N;

    while(fre)
    {
        for(int i=0;i<N;i++)
        {
            while(men[i].couple==-1)
            {
                if(women[men[i].preferences[0]].couple==-1)
                {
                    men[i].couple=men[i].preferences[0],
                    women[men[i].preferences[0]].couple=i;
                    fre--;
                }
                else
                {
                    if(women[men[i].preferences[0]].Prefer(i,women[men[i].preferences[0]].couple)==i)
                    {
                        men[women[men[i].preferences[0]].couple].couple=-1;
                        men[women[men[i].preferences[0]].couple].preferences.erase(men[women[men[i].preferences[0]].couple].preferences.begin());
                        women[men[i].preferences[0]].couple=i;
                        men[i].couple=men[i].preferences[0];
                    }
                    else
                    {
                        men[i].preferences.erase(men[i].preferences.begin());
                    }
                }
            }
        }
    }

    for(int i=0;i<N;i++)
    {
        printf("%d %d\n",i+1,men[i].couple+1);
    }
}

int main()
{
    int T,n,x,id,t;
    Faster_Input_For_Positive_Integers(&T);

    for(t=1;t<=T;t++)
    {
        Faster_Input_For_Positive_Integers(&n);
        vector<Person> men(n),women(n);

        for(int i=0;i<n;i++)
        {
            Faster_Input_For_Positive_Integers(&id);
            for(int j=0;j<n;j++)
            {
                Faster_Input_For_Positive_Integers(&x);
                women[id-1].preferences.push_back(x-1);
            }
        }

        for(int i=0;i<n;i++)
        {
            Faster_Input_For_Positive_Integers(&id);
            for(int j=0;j<n;j++)
            {
                Faster_Input_For_Positive_Integers(&x);
                men[id-1].preferences.push_back(x-1);
            }
        }

        stable_marriage(men,women);
    }
    return 0;
}
