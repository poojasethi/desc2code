#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define foreach(u, o) \
    for (typeof((o).begin()) u = (o).begin(); u != (o).end(); ++u)
const int INF = 2147483647;
const double EPS = 1e-9;
const double pi = acos(-1);
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef vector<int> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;
template <class T> T mod(T a, T b) { return (a % b + b) % b; }
template <class T> int size(const T &x) { return x.size(); }

int N;

vi gale_shapley(vvi& mpref, vvi& wpref){
    list<int> free;
    vi next(N, 0);
    vi current(N, -1);
    vvi ranking(N);
    for(int i = 0; i < N; ++i){
        free.push_back(i);
        //printf("Free: ");
        //for(list<int>::iterator it = free.begin(); it != free.end(); ++it){
            //printf("%d ", *it);
        //}
        //printf("\n");
        ranking[i] = vi(N);
        for(int j = 0; j < N; ++j){
            ranking[i][wpref[i][j]] = j;
        }
    }

    while(!free.empty()){
        int man = *free.begin(); free.pop_front();
        int next_w = mpref[man][next[man]++];
        assert(next_w >= 0 && next_w < N);
        assert(man >= 0 && man < N);
        while(current[next_w] >= 0 && ranking[next_w][current[next_w]] < ranking[next_w][man]){
            next_w = mpref[man][next[man]++];
            assert(next[man] <= N);
        }
        if(current[next_w] < 0){
            current[next_w] = man;
        //} else if(ranking[next_w][man] < ranking[next_w][current[next_w]]){
        } else {
            free.push_back(current[next_w]);
            current[next_w] = man;
        } 
            //free.push_front(man);
        //}
    }
    vi match(N);
    for(int i = 0; i < N; ++i){
        match[current[i]] = i;
    }
    return match;
}

int main(){
    int T;
    scanf("%d\n", &T);
    int p;
    for(int t = 0; t < T; ++t){
        scanf("%d\n", &N);
        vvi mpref(N, vi(N)), wpref(N, vi(N));
        for(int i = 0; i < N; ++i){
            scanf("%d", &p);
            for(int j = 0; j < N; ++j){
                scanf("%d", &wpref[i][j]);
                wpref[i][j]--;
            }
        }
        for(int i = 0; i < N; ++i){
            scanf("%d", &p);
            for(int j = 0; j < N; ++j){
                scanf("%d", &mpref[i][j]);
                //cin >> wpref[i][j];
                mpref[i][j]--;
            }
        }
        vi match = gale_shapley(mpref, wpref);
        for(int i = 0; i < N; ++i){
            printf("%d %d\n", i+1, match[i]+1);
        }
    }
}

//int main(){
    //scanf("%d", &N);
    ////cin >> N;

    //vvi mpref(N, vi(N)), wpref(N, vi(N));

    //int p;
    //for(int i = 0; i < N; ++i){
        //scanf("%d", &p);
        //for(int j = 0; j < N; ++j){
            //scanf("%d", &mpref[i][j]);
            //mpref[i][j]--;
        //}
    //}
    //for(int i = 0; i < N; ++i){
        //scanf("%d", &p);
        //for(int j = 0; j < N; ++j){
            //scanf("%d", &wpref[i][j]);
            ////cin >> wpref[i][j];
            //wpref[i][j]--;
        //}
    //}
    //vi match = gale_shapley(mpref, wpref);
    //for(int i = 0; i < N; ++i){
        //printf("%d %d\n", i+1, match[i]+1);
    //}
//}
