#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
#define pb push_back
#define mp make_pair
#define gc getchar_unlocked
#define MAX 505
int PrefWoman[MAX][MAX],PrefMan[MAX][MAX];
int read_int(){
    register int x = 0, c = gc();
    int sign = 1;
    while(c!='-' && (c<48 || c>57) ) c = gc();
    if(c=='-')
        sign = -1, c = gc();
    while(c>=48 && c<=57)
        x = (x<<1) + (x<<3) + c - 48, c = gc();
    return sign*x;
}

bool doesWomanPreferNewOverOld(int N,int NewM, int oldM,int w)
{
    F(i,0,N-1)
    {
        if(PrefWoman[w][i] == oldM) return 0;
        if(PrefWoman[w][i] == NewM) return 1;
    }

}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,N,w,m;
    T = read_int();
    while(T--)
    {
        N = read_int();
        int isManFree[N],freeCount,womenPartner[N];
        F(i,0,N-1)
        {
            w = read_int();
            F(j,0,N-1)
            {
                m = read_int();
                PrefWoman[w-1][j] = m-1;
            }
        }
        F(i,0,N-1)
        {
            m = read_int();
            F(j,0,N-1)
            {
                w = read_int();
                PrefMan[m-1][j] = w-1;
            }
        }
        F(i,0,N-1) isManFree[i] = 1;
        F(i,0,N-1) womenPartner[i] = -1;
        freeCount = N;
        while(freeCount > 0)
        {
            F(i,0,N-1)
            {
                if(isManFree[i])
                {
                    m = i;
                    break;
                }
            }
            for(int i = 0; i <= N-1 && isManFree[m] == 1; i++)
            {
                w = PrefMan[m][i];
                if(womenPartner[w] == -1)
                {
                    womenPartner[w] = m;
                    isManFree[m] = 0;
                    freeCount--;
                }
                else
                {
                    if(doesWomanPreferNewOverOld(N,m,womenPartner[w],w))
                    {
                        isManFree[womenPartner[w]] = 1;
                        isManFree[m] = 0;
                        womenPartner[w] = m;
                    }
                }
            }
        }
        F(i,0,N-1) isManFree[womenPartner[i]] = i;
        F(i,0,N-1) printf("%d %d\n",i+1,isManFree[i]+1);
        //printf("\n");
    }
    return 0;
}

