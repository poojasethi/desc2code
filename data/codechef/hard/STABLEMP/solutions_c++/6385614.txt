#include <iostream>
#include <string.h>
#include<cstdio>
#include<algorithm>
using namespace std;
int A[1000][500];
bool mfree[500];
int wpartner[500];
int n;
bool wprefers(int w,int m1,int m)
{
    int i;

    for(i=0;i<n;i++)
    {

        if( A[w+n][i]==(m+1))
            return false;
        if(A[w+n][i]==(m1))
            return true;


    }





}

void stable()
{

    int i;
    int freecount=n;
    while(freecount>0)
    {



    for(i=0;i<n;i++)
    {
        if(mfree[i]==false)
            break;
    }
    int m=i;
    for(i=0;(i<n)&&(mfree[m]==false);i++)
    {
        int w=A[m][i];
        if(wpartner[w-1]==(-1))
        {
            wpartner[w-1]= (m+1)*1000+w;
            mfree[m]=true;
            freecount--;

         }
    else
    {
         int m1=wpartner[w-1]/1000;
         if(!wprefers(w-1,m1,m))
         {
             wpartner[w-1]=(m+1)*1000+w;
             mfree[m]=true;
             mfree[m1-1]=false;


         }



    }




    }


}
}
int main()
{

int t;
scanf("%d",&t);
while(t--)
{
   memset(wpartner,-1,sizeof wpartner);
     memset(mfree,false,sizeof mfree);
   scanf("%d",&n);
   int i=0,j=0;
   int y=n<<1;
   int m;
   for(i=n;i<y;i++)
   {
       scanf("%d",&m);
       for(j=0;j<n;j++)
       {
           scanf("%d",&A[i][j]);
       }
   }
     for(i=0;i<n;i++)
   {
       scanf("%d",&m);
       for(j=0;j<n;j++)
       {
           scanf("%d",&A[i][j]);
       }
   }
   stable();
sort(wpartner,wpartner+n);

for(i=0;i<n;i++)
{

    printf("%d %d \n",(i+1),wpartner[i]%1000);

}



}





}

