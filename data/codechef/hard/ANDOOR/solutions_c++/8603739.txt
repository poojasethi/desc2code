#include <cstdio>
#include <cmath>
#include <memory.h>
#include <algorithm>
#include <iostream>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
#define eps 1e-12
#define pi 3.14159265358979323846
double x[1001],y[1001],r[1001],dist[1001][1001],ag[4000100],ag2,ag1;
int ags;
int cmp(const void *a,const void *b)  
{  
return abs(*(double*)a)>abs(*(double*)b)?1:-1;  
}  
void doit()
{
	while(ag2<0)ag2+=2.0*pi;
  while(ag2>2.0*pi)ag2-=2.0*pi;
	while(ag1<0)ag1+=2.0*pi;
  while(ag1>2.0*pi)ag1-=2.0*pi;
	if(ag2<ag1)
	{
		ag[++ags]=ag2;
		ag[++ags]=-ag1;
	}
	else
	{
		ag[++ags]=ag2;
		ag[++ags]=-2.0*pi-eps;
		ag[++ags]=eps;
		ag[++ags]=-ag1;
	}				
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		double w,h;
		int n;
		cin>>w>>h>>n;
		rep(i,1,n)
			cin>>x[i]>>y[i]>>r[i];
		rep(i,1,n)
			rep(j,1,n)
				dist[i][j]=sqrt((x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
		double ans=0.0;
		rep(i,1,n)
		{
			bool tf=0;
			if(x[i]-r[i]+eps>=w)continue;
			if(y[i]-r[i]+eps>=h)continue;
			rep(j,1,n)
				if(i!=j&&dist[i][j]<=r[j]-r[i]+eps)
				{
					tf=1;
					break;
				}
			if(tf)continue;
			ags=0;
			rep(j,1,n)
				if(j!=i&&dist[i][j]<=r[i]+r[j]-eps&&dist[i][j]>=r[i]-r[j]+eps)
				{
					double alp=atan2(y[j]-y[i],x[j]-x[i]),bet=acos((r[i]*r[i]+dist[i][j]*dist[i][j]-r[j]*r[j])/(2.0*dist[i][j]*r[i]));
					while(alp<0)alp+=2.0*pi;
					ag1=alp+bet,ag2=alp-bet;
					doit();
				}
			if(x[i]+r[i]-eps>=w)
			{
			  ag2=2.0*pi-acos((w-x[i])/r[i]),ag1=acos((w-x[i])/r[i]);
			  doit();
			}
			if(x[i]-r[i]+eps<=0)
			{
				ag2=pi-acos(x[i]/r[i]),ag1=pi+acos(x[i]/r[i]);
				doit();
			}	
			if(y[i]+r[i]-eps>=h)
			{
				ag2=pi/2.0-acos((h-y[i])/r[i]),ag1=pi/2.0+acos((h-y[i])/r[i]);
				doit();
			}
			if(y[i]-r[i]+eps<=0)
			{
				ag2=1.5*pi-acos(y[i]/r[i]),ag1=1.5*pi+acos(y[i]/r[i]);
				doit();
			}	
			ag[0]=0.0;
			qsort(ag,ags+1,sizeof(ag[0]),cmp);
			double sum=0.0;
			int s=0;
			rep(i,1,ags)
			{
			//	printf("%.9lf\n",ag[i]);
				if(ag[i]>=0)
				{
					if(s++==0)sum+=ag[i]+ag[i-1];
				}
				else s--;
			}
			//printf("\n");
			sum+=2*pi+ag[ags];
		//	printf("%d %.9lf\n",i,sum);
			ans+=sum*r[i];
		//	printf("%.5lf\n",ans);
		}
		printf("%.9lf\n",ans+eps);
	}
	return 0;
}