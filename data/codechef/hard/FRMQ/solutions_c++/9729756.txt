#include<bits/stdc++.h>
#define LL long long int
#define MAX 100005
using namespace std;

int pw[20], lg[MAX];
int lookup[17][MAX];

int query(int arr[], int L,int R)
{	
	int y = lg[R-L+1];
	int x = R-pw[y]+1;		
	return max(lookup[y][L],lookup[y][x]);
}
 
void preprocess(int arr[],int n)
{
	for(int i=0; i<20; i++)
		pw[i] = pow(2,i);
		
	int k = log(n)/log(2);
	for(int i=0; i<n; i++)
	{
		for(int j=0; j<=k; j++)
			lookup[j][i] = 0;
	}
	for(int i=0; i<n; i++)
	{
		lookup[0][i] = arr[i];
		
		if(i==0)
			lg[i] = 0;
		else
			lg[i] = log(i)/log(2);
	}
	lg[n] = log(n)/log(2);
	for(int j=1; j<=k; j++)
	{
		for(int i=0; (i+(1<<j)-1)<n; i++)
		{
			lookup[j][i] = max(lookup[j-1][i],lookup[j-1][i+(1<<(j-1))]); 	
		}	
	}
		
		/*
		for(int i=0; i<n; i++)
			{
				for(int j=0; (i+(1<<j)-1)<n; j++)
					{
						cout<<lookup[i][j]<<" ";
					}
				cout<<endl;
			}
		*/
	} 
 
int main()
{
	std::ios::sync_with_stdio(false);
    int mint, maxt, n, x1, y1, i;
    int arr[MAX];
	LL m, sum=0;
	cin>>n;
	   
	for(int i=0; i<n; i++)
	   	cin>>arr[i];
	    
	preprocess(arr,n);
	cin>>m>>x1>>y1;
	    
	    
	while(m-->0)
	{
		mint=(x1<y1)?x1:y1;
		maxt=(x1<y1)?y1:x1;
		
		sum+=query(arr,mint,maxt);
				
		x1=(x1+7);
		if(x1>=n-1)
			x1%=(n-1);
		y1=(y1+11);
		if(y1>=n)
			y1%=(n);
	}
	cout<<sum;
} 