#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;

int T,n,m,K,i,j,k;
int x[10005],y[10005],z[5],len[45];
long long Bit[45],B[45][20005],b[20005],S,u,N;

int main()
{
	scanf("%d",&T);
	for(;T;--T)
	{
		scanf("%d%d",&n,&m);
		scanf("%d",&K);
		for(i=1;i<=K;++i)scanf("%d%d",&x[i],&y[i]);
		if(n>m)
		{
			for(i=1;i<=K;++i)swap(x[i],y[i]);
			swap(n,m);
		}
		if(n==1)
		{
			for(i=0;i<=2;++i)z[i]=0;
			for(i=1;i<=K;++i)z[(m-y[i])%3]^=1;
			if(!(m&1))z[0]^=1,z[1]^=1;
			z[m%3]=0;
			if(z[0]||z[1])printf("NO\n");
			else printf("YES\n");
			continue;
		}
		N=(1ll<<n)-1;
		for(i=0;i<n;++i)
		{
			b[0]=1ll<<i;
			b[1]=(b[0]^(b[0]>>1)^(b[0]<<1))&N;
			for(j=2;;++j)
			{
				b[j]=(b[j-2]^b[j-1]^(b[j-1]>>1)^(b[j-1]<<1))&N;
				if(b[j]==b[0]&&b[j-1]==0)
				{
					len[i]=j;
					for(k=0;k<j;++k)B[i][k]=b[k];
					break;
				}
			}
		}
		S=0;
		for(i=1;i<=K;++i)S^=B[x[i]-1][(m-y[i])%len[x[i]-1]];
		for(i=0;i<n;++i)Bit[i]=0;
		for(i=0;i<n;++i)
		{
			u=B[i][m%len[i]];
			for(j=n-1;j>=0;--j)
			if(u&(1ll<<j))
			{
				if(!Bit[j]){Bit[j]=u;break;}
				u^=Bit[j];
			}
		}
		for(i=n-1;i>=0;--i)if(S&(1ll<<i))S^=Bit[i];
		if(S)printf("NO\n");
		else printf("YES\n");
	}
}