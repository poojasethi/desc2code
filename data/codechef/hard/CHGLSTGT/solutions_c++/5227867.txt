#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
 
#define LL long long
#define vi vector<int>
#define pb push_back
#define sz size
#define all(x) (x).begin(),(x).end()
#define it iterator
#define REP(i,a,b) for(int i=(a);i<(b);i++)
#define REPX(i,a,b,c) for(int i=(a);i<(b);i+=(c))
#define DEP(i,a,b) for(int i=(a)-1;i>=(b);i--)
#define REX(i,x) for(__typeof((x).begin()) i=(x).begin(); i!=(x).end();i++)
#define pii pair<int,int>
#define pdd pair<double, double>
#define mp make_pair
#define fi first
#define se second
#define st string
#define ffo find_first_of
#define su substr
#define vs vector<st>
#define ub upper_bound
#define lb lower_bound
#define ni next_int
#define gu getchar_unlocked
#define bs binary_search
#define ord(c) (c-'0')
#define MAX 5010
#define MOD 1000000007
using namespace std;
char x[MAX]; int y[MAX][MAX],a[MAX],b[MAX];
inline int ni()
{
	int n=0,s=1; char c=gu();
	while(!(c>='0' && c<='9')) 
	{
		if(c=='-') s=-1;
		c=gu();
	}
	while(c>='0' && c<='9')
	{
		n=(n<<3)+(n<<1)+c-'0';
		c=gu();
	}
	return n*s;
}
int main()
{
	int tc=ni();
	REP(t,0,tc)
	{
		int n=ni();
		scanf("%s",x+1);
		REP(i,1,n+1) y[i][i]=1;
		DEP(i,n+1,1) REP(j,i+1,n+1)
		{
			if(x[j]!=x[i]) y[i][j]=0;
			else if(j==i+1) y[i][j]=1;
			else y[i][j]=y[i+1][j-1];
		}
		a[n+1]=0; b[0]=0;
		REP(i,1,n+1) { a[i]=n-i+1; b[i]=i; } 
		DEP(i,n+1,1) REP(j,i,n+1) 
		{
			int k=(y[i][j]) ? 1:j-i+1;
			a[i]=min(a[i],k+a[j+1]);
		}
		REP(i,1,n+1) DEP(j,i+1,1)
		{
			int k=(y[j][i]) ? 1:i-j+1;
			b[i]=min(b[i],k+b[j-1]);
		}
		int k=n;
		REP(i,0,n+1) k=min(k,b[i]+a[i+1]);
		printf("%d\n",k);
	}
	return 0;
}