//CodeChef--CHEFWORD
#include<bits/stdc++.h>
#define MAX 30

using namespace std;

class Matrix{
	
	private :
	
	int r,c;	
	double mat[MAX][MAX];	
	
	public :
		
	Matrix(int r,int c){
		
		this->r=r;
		this->c=c;
		
		for(int i=0;i<this->r;i++)
		 for(int j=0;j<this->c;j++) mat[i][j]=0.0;
		
	}	
		
	Matrix(double mat[MAX][MAX],int r,int c){
		
		this->r=r;
		this->c=c;
		
		for(int i=0;i<this->r;i++)
		 for(int j=0;j<this->c;j++) this->mat[i][j]=mat[i][j];
			
	}
	
	Matrix mult(Matrix A,Matrix B){
		
		Matrix ans(A.r,B.c);
		
		for(int i=0;i<A.r;i++)
		  for(int j=0;j<B.c;j++)
		    for(int k=0;k<A.c;k++)
		      ans.mat[i][j]+=A.mat[i][k]*B.mat[k][j];
		
		return ans;
		
	}
	
	Matrix fast_expo(Matrix M,int expo){
		
		if(expo==1) return M;
		
		Matrix ans=fast_expo(M,expo>>1);
		
		ans=mult(ans,ans);
		
		if(expo%2==0) return ans;
		
		else{
			
			ans=mult(ans,M);
			return ans;
			
		}
			
	}
	
	double get(int x,int y){
		
		return mat[x][y];
		
	}
	
};

set<string> Unique;
string str[1000000],baseString; 

int main(void){
	
	int testCases,claps,words,i,j;
	double transformationMatrix[MAX][MAX];
	
	scanf("%d",&testCases);
	
	while(testCases--){
		
		cin>>words>>claps;
		cin>>baseString;
		
		for(i=0;i<26;i++)
		 for(j=0;j<26;j++) cin>>transformationMatrix[i][j];
		
		Matrix ans(transformationMatrix,26,26);
		
		ans=ans.fast_expo(ans,claps);
		
		for(i=0;i<words;i++)
		   cin>>str[i];
		
		double finalAnswer=0.0;
		for(i=0;i<words;i++){
			
			if(str[i].size()==baseString.size()&&(Unique.find(str[i])==Unique.end())){
				
				double temp=1.0;
				Unique.insert(str[i]);
				for(j=0;j<baseString.size();j++)
				  temp*=ans.get(baseString[j]-'a',str[i][j]-'a');
				
				finalAnswer+=temp;
				
			}
			
		}
		
		printf("%.6lf\n",finalAnswer);
		
		Unique.clear();
		
	}
		
	return 0;
	
}