#include<bits/stdc++.h>
#include<stdio.h>
#include<string.h>
#include<string.h>
using namespace std;
void matrixMul(double a[][26],double b[][26]);
int main()
{
	int t,n,k,i,j,length,lengthWord,index,mul,m,rem;
	int isPresent[20000];
	char word[10],currentWord[10];
	double clapOne[26][26],clapTwo[26][26],totalProbability,currentProbability;
	scanf("%d",&t);
	while(t--)
	{
		for(i = 0;i < 20000;i++)
		{
			isPresent[i] = 0;
		}
		scanf("%d %d",&n,&k);
		scanf("%s",word);
		lengthWord = strlen(word);
		for(i = 0;i < 26;i++)
		{
			for(j = 0;j < 26;j++)
			{
				scanf("%lf",&clapOne[i][j]);
				if(i == j)
				{
					clapTwo[i][j] = 1;
				}
				else
				{
					clapTwo[i][j] = 0;
				}
			}
		}
		totalProbability = 0;
		m = k;
		while(m > 0)
		{
			rem = m % 2;
			if(rem == 1)
			{
				matrixMul(clapTwo,clapOne);
			}
			m = m / 2;
			matrixMul(clapOne,clapOne);
		}
		
		set<string> ss;
		for(i = 0;i < n;i++)
		{
			scanf("%s",currentWord);
			//string xx=(string)currentWord;
			length = strlen(currentWord);
			string xx;
			for(j=0;j<length;j++){
				xx+=currentWord[j];
			}
			//cout<<xx<<endl;
			if(ss.find(xx)==ss.end()){
				ss.insert(xx);
				//cout<<"inside\n";
				if(length == lengthWord)
				{
					index = 0;
					mul = 1;
					/*for(j = 0;j < length;j++)
					  {
					  index = index + (currentWord[j] - 96) * mul;
					  mul = mul * 26;
					  }
					  if(isPresent[index] == 0)
					  {*/
					currentProbability = clapTwo[word[0] - 'a'][currentWord[0] - 'a'];
					for(j = 1;j < length && (currentProbability != 0);j++)
					{
						currentProbability *= clapTwo[word[j] - 'a'][currentWord[j] - 'a'];
					}
					totalProbability += currentProbability;
					//	isPresent[index] = 1;
					//}
				}
			}
		}
		//set<string>::iterator it;
		//for(it=ss.begin();it!=ss.end();it++)
		//	cout<<*it<<endl;
		printf("%lf\n",totalProbability);
	}
	return 0;
}

void matrixMul(double a[][26],double b[][26])
{
	int i,j,k;
	double c[26][26];
	for(i = 0;i < 26;i++)
	{
		for(j = 0;j < 26;j++)
		{
			c[i][j] = 0;
			for(k = 0;k < 26;k++)
			{
				c[i][j] += a[i][k] * b[k][j];
			}
		}
	}
	for(i = 0;i < 26;i++)
	{
		for(j = 0;j < 26;j++)
		{
			a[i][j] = c[i][j];
		}
	}
}
