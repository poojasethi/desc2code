#include <bits/stdc++.h>

using namespace std;

long double A[26][26];
long double res[26][26];
long double B[26][26];

void mul(long double A1[][26], long double A2[][26])
{
    for ( int i = 0; i < 26; i++ ) {
        for ( int j = 0; j < 26; j++ ) {
            B[i][j] = 0.0;
            for ( int k = 0; k < 26; k++ ) {
                B[i][j] = B[i][j] + (long double)A1[i][k]*A2[k][j]*1.0;
            }
        }
    }
    for ( int i = 0; i < 26; i++ ) {
        for ( int j = 0; j < 26; j++ ) A1[i][j] = B[i][j];
    }
    return;
}

void fast_pow(int x)
{
    while ( x > 0 ) {
        if ( x&1 ) mul(res,A);
        mul(A,A);
        x >>= 1;
    }
    return;
}
int main()
{
	int t,n,k;
	string s,p;
	long double ans;

	cin >> t;
	while ( t-- ) {
        cin >> n >> k;
		cin >> s;
		map <string, bool> mp;
		for ( int i = 0; i < 26; i++ ) {
            for ( int j = 0; j < 26; j++ ) cin >> A[i][j], res[i][j] = 1.0*(i == j);
		}
		fast_pow(k);
		ans = 0.0;
		for ( int i = 0; i < n; i++ ) {
            cin >> p;
            if ( mp.count(p) ) continue;
            mp[p] = true;
            if ( (int)s.size() != (int)p.size() ) continue;
            long double val = 1.0;
            for ( int j = 0; j < s.size(); j++ ) val = val*1.0*res[s[j]-'a'][p[j]-'a'];
            ans += val;
		}
		cout << setprecision(9) << fixed << ans << endl;
	}
	return 0;
}
