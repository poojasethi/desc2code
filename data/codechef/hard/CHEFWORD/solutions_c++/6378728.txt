#include <iostream>
#include <vector>
#include <stdio.h>
#include <string.h>
#include <set>
#include <string>

using namespace std;

typedef vector<double> vd;
typedef vector<vd> vdd;
set<string> list;
set<string>::iterator it;

vdd multiplymat(vdd a,vdd b)
 {
     vdd c;
     vd tmp;
     tmp.assign(26,0.0);
     for(int i=0;i<26;i++)
      {
        c.push_back(tmp);    
      }
      
     for(int i=0;i<26;i++)
      {
          for(int j=0;j<26;j++)
           {
               for(int k=0;k<26;k++)
                 c[i][j] += a[i][k]*b[k][j];
           }
      }
     return c; 
 }

vdd fastexpo(vdd a,int n)
 {
     if(n == 1) return a;
     
     if(n & 1)
      {
          return multiplymat(a,fastexpo(a,n-1));
      }
     else
      {
          vdd a1;
          a1 = fastexpo(a,n>>1);
          return multiplymat(a1,a1);
      }
     
 }

char word[4];

int main() {
	// your code goes here
	
	int t,n,k;
	cin>>t;
	while(t--)
	 {
	     cin>>n>>k;
	     scanf("%s",word);
	     list.clear();
	     // create a and fill it
	     vdd a,c;
         vd tmp;
         tmp.resize(26);
         for(int i=0;i<26;i++)
          {
            a.push_back(tmp);    
          }
         for(int i=0;i<26;i++)
          for(int j=0;j<26;j++)
           scanf("%lf",&a[i][j]);
         
         // fill the list
         for(int i=0;i<n;i++)
          {
              string x;
              cin>>x;
              list.insert(x);
          }
          
         c = fastexpo(a,k);
       
         double ans = 0.0;
         
         
         // calculate probability
         int len = strlen(word);
         for(it=list.begin();it!=list.end();it++)
          {
            string str = *it;  
            if(str.size() != len) continue;
             
            double x = 1.0; 
            for(int j=0;j<len;j++)
             {
                 x *= c[word[j]-'a'][str[j]-'a'];
             }
            ans += x; 
            
          }
	     printf("%.9lf\n",ans);
	 }
	
	return 0;
}
