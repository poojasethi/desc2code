#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define fr first
#define se second

/* Relevant code begins here */

#define MOD 1000000007

int n, k;
double arr[30][30], ans[30][30], mat[30][30];
map <string, int> mp;

void mat_mul(double a[30][30], double b[30][30])
{
	int i, j, k;
	double ret[30][30];
	F(i, 0, 26) {
		F(j, 0, 26) {
			ret[i][j] = 0.0;
			F(k, 0, 26) {
				ret[i][j] = (ret[i][j] + (a[i][k]*b[k][j]));
			}
		}
	}
	F(i, 0, 26) F(j, 0, 26) a[i][j] = ret[i][j];
}

void mat_exp(double mat[30][30], int pw)
{
	double id[30][30];
	int i, j;
	F(i, 0, 26) {
		F(j, 0, 26) {
			if (i == j) id[i][j] = 1.0;
			else id[i][j] = 0.0;
		}
	}
	while (pw > 0) {
		if (pw & 1) {
			mat_mul(id, mat);
		}
		pw = pw/2;
		mat_mul(mat, mat);
	}
	F(i, 0, 26) F(j, 0, 26) mat[i][j] = id[i][j];
}

int main()
{
	int t, i, j, l;
	double fin;
	char str[5];
	string wrd;

	S(t);
	while (t--) {
		mp.clear();
		fin = 0.0;
		S(n), S(k);
		scanf("%s", str);
		F(i, 0, 26) {
			F(j, 0, 26) {
				scanf("%lf", &arr[i][j]);
				mat[i][j] = arr[i][j];
				ans[i][j] = 0.0;
			}
		}
		mat_exp(mat, k-1);
		F(l, 0, 26) {			
			F(i, 0, 26) {
				F(j, 0, 26) {
					ans[i][l] += mat[i][j]*arr[j][l];
				}
			}
		}
		/*F(i, 0, 26) {
			F(j, 0, 26) {
				printf("%lf ", ans[i][j]);
			}
			printf("\n");
		}*/
		while (n--) {
			cin >> wrd;
			double tmp = 1.0;
			if (strlen(str) == (int)wrd.length()) {
				if (mp.find(wrd) == mp.end()) {
					F(i, 0, strlen(str)) {
						//printf("%c -> %c = %lf\n", str[i], wrd[i], ans[str[i]-'a'][wrd[i]-'a']);
						tmp *= ans[str[i]-'a'][wrd[i]-'a'];
					}
					fin += tmp;
					mp[wrd] = 1;
				}
			}
		}
		printf("%0.9lf\n", fin);
	}
	return 0;
}