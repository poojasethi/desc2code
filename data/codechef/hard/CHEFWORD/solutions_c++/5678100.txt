#include<bits/stdc++.h>
using namespace std;
typedef long long int LL;
#define sd(x) scanf("%d", &x)
#define mp make_pair
#define pb push_back
#define vi vector<int>
#define ft first
#define sc second
#define INF 1000000000
#define MOD 10000007
set<string> S;
string s, temp;
class matrix {
	public:
	double arr[30][30];
	
};

matrix init;
matrix mul(matrix a, matrix b)
{
	matrix c;
	for (int i = 1; i <= 26; i++) {
		for(int j = 1; j <= 26; j++) {
			c.arr[i][j] = 0;
			for(int k = 1; k <= 26; k++) {
				c.arr[i][j] += a.arr[i][k]*b.arr[k][j];
			}
		}
	}
	return c;
}
matrix power(matrix a, int exp)
{
	matrix ret;
	for (int i = 1; i <= 26; i++) 
		for (int j = 1; j <= 26; j++) 
			ret.arr[i][j] = (i==j);
	while (exp) {
		if (exp&1) {
			ret = mul(ret, a);
			exp--;
		} else {
			a = mul(a, a);
			exp >>= 1;
		}
	}
	return ret;
}
int main()
{
	int t;
	scanf("%d", &t);
	while (t--) {
		int n, k;
		scanf("%d %d", &n, &k);	
		cin>>s;
		for (int i = 1; i <= 26; i++) 
			for (int j = 1; j <= 26; j++)
				cin>>init.arr[i][j];
		matrix m = power(init, k);
		double ans = 0;
		for (int i = 0; i < n; i++) {
			cin>>temp;
			if (temp.length() != s.length() || S.find(temp) != S.end()) continue;
			S.insert(temp);
			double cur = 1;
			for (int j = 0; j < s.length(); j++) {
				cur *= m.arr[s[j]-'a'+1][temp[j]-'a'+1];
			}
			ans += cur;
		}
		printf("%.7lf\n", ans);
		S.clear();
	}
	return 0;
}