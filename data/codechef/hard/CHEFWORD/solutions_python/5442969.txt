# matrix multiplication function
def matmul(a,b,l,m,n):
	c = []
	for i in range(l):
		dummy = []
		for j in range(n):
			ans = 0
			for k in range(m):
				ans = ans + a[i][k] * b[k][j]
			dummy.append(ans)
		c.append(dummy)
	return c

#function to create identity matrix in case matrix is raised to power 0
def identity_matrix(n):
	c = []
	for i in range(n):
		k = []
		for j in range(n):
			if i == j:
				k.append(1.0)
			else:
				k.append(0.0)
		c.append(k)
	return c

#function to raise a matrix A to power n
def power_matrix(a,n):
	if n == 0:
		return identity_matrix(26)
	elif n == 1:
		return a
	elif n%2 == 0:
		return power_matrix(matmul(a,a,26,26,26),n/2)
	elif n%2 == 1:
		return matmul(a,power_matrix(matmul(a,a,26,26,26),(n-1)/2),26,26,26)
     

dup3 = []
for i in range(17576):
	dup3.append(0)
dup2 = []
for i in range(676):
	dup2.append(0)
dup1 = []
for i in range(26):
	dup1.append(0)

def initialize():
	for i in range(17576):
		dup3[i] = 0
	for i in range(676):
		dup2[i] = 0
	for i in range(26):
		dup1[i] = 0

def duplicate(s):
	l = len(s)
	ans = 1
	if l == 1:
		ans = ord(s[0])-97
		if dup1[ans] == 1:
			return 1
		else:
			dup1[ans] = 1
			return 0
	elif l == 2:
		ans = 26*(ord(s[0])-97) + (ord(s[1])-97)
		if dup2[ans] == 1:
			return 1
		else:
			dup2[ans] = 1
			return 0
	elif l == 3:
		ans = 676*(ord(s[0])-97) + 26*(ord(s[1])-97) + (ord(s[2])-97)
		if dup3[ans] == 1:
			return 1
		else:
			dup3[ans] = 1
			return 0



a = []
for i in range(26):
	k = []
	for j in range(26):
		k.append(0.0)
	a.append(k)
t = input()
for dummy in range(t):
	initialize()
	n, k = raw_input().split()
	n = int(n)
	k = int(k)
	word = raw_input()
	length = len(word)
	word = list(word)
	for i in range(length):
		word[i] = ord(word[i]) - 97
	for i in range(26):
		num = raw_input().split()
		for j in range(26):
			a[i][j] = float(num[j])
	a = power_matrix(a,k)
	prob = 0
	for j in range(n):
		p1 = 1
		str1 = raw_input()
		if(len(str1) != length):
			continue
		elif duplicate(str1) == 1:
			continue
		else:
			s = list(str1)
			for i in range(len(s)):
				s[i] = ord(s[i])-97
			for i in range(length):
				p1 = p1*a[word[i]][s[i]]
				if p1 == 0:
					break
			prob = prob + p1
	print prob 