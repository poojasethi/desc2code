#include<cstdio>
#include<algorithm>
#include<set>
#include<iostream>
#include<vector>
#include<cstring>
using namespace std;

#define si(i) scanf("%d",&i);
#define sl(i) scanf("%lld",&i);
#define pi(i) printf("%d\n",i);
#define pl(i) printf("%lld\n",i);
typedef long long int ll;

typedef struct T
{
   char a;int co;
}var;

var A[1111111];
long long int cnt[2111111];
int P[1111111];
int N;
bool eq(var one,var two){return one.a==two.a&&one.co==two.co;}
int man()
{
         int c=0,r=0;P[0]=P[N-1]=0;

           for(int i=1;i<N-1;i++){
                     int  i1=c-(i-c);
                      
                    P[i]=r>i?min(r-i,P[i1]):0;

               while(eq(A[i+1+P[i]],A[i-1-P[i]]))P[i]++;

                 if(i+P[i]>r){c=i;r=i+P[i];}

}
           
}
int testcase()
{
     man();
        cnt[0]=0;for(int i=1;i<N-1;i++)cnt[i]=cnt[i-1]+A[i].co;
          
   long long int ans=0;

     for(int i=1;i<N-1;i++){
          
int k=P[i]; int a=i-k,b=i+k;
ans+=b+1<N-1?(A[b+1].a==A[a-1].a?min(A[a-1].co,A[b+1].co):0):0;
ans+=cnt[i]-cnt[a-1];          
ans+=(A[i].co*(long long int)(A[i].co-1))/2;

//cout<<"    "<<P[i]<<"    ";

}
   printf("%lld\n",ans);
}

int input()
{
int k=0;A[k++].a='@';A[0].co=-3;
int tmp;si(tmp);
for(int i=0;i<tmp;i++,k+=2){scanf("\n%c %d",&(A[k].a),&(A[k].co));A[k+1].a='#';A[k+1].co=0;}
k--;A[k].a='$';A[k].co=-2;N=k+1;
}

int main()
{
   int t;si(t);while(t--){
           input();
           //preprocess();
           testcase();
}
 return 0;
}
