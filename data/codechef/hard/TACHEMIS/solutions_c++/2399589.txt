#include <iostream>
#include <cstdio>
using namespace std;

#define inc(i,a,b)              for(int i=a;i<b;++i)

void solve();

int main() {
    int t; scanf("%d",&t);
    while(t--) {
        solve();
    }
}

void solve() {
    int n; scanf("%d",&n);
    long long len[n+1], best[n+1], prefix[n+1]; char ch[n+1];
    // best[i] -> 2*best[i]+1 is the length of the group of the longest palindrome centred at i
    
    prefix[0] = 0;
    inc(i,1,n+1) {
        scanf(" %c",&ch[i]);
        scanf("%lld",&len[i]);
        prefix[i] = len[i] + prefix[i-1];
    }
    
    int l=0, r=0, c=0;
    best[0] = n;
    
    inc(i,1,n+1) {
        int i2 = c-(i-c);
        if(i2<0) i2 = 0;
        
        if(i+best[i2]<r && i<r) best[i] = best[i2];
        else {
            c = i, l = c-(r-c);
            best[i] = r-c;
            
            while(l>1 && r<n) {
                if(ch[l-1]==ch[r+1] && len[l-1]==len[r+1]) {
                    l--, r++;
                    best[i]++;
                }
                else break;
            }
        }
    }
    
    long long ans = 0;
    inc(i,1,n+1) {
        ans += (len[i]*(len[i]-1))/2;
        ans += len[i];
        ans += prefix[i-1]-prefix[i-best[i]-1];
        if(i-best[i]!=1 && i+best[i]!=n) {
            if(ch[i-best[i]-1] == ch[i+best[i]+1]) {
                ans += min(len[i-best[i]-1],len[i+best[i]+1]);
            }
        }
    }
    
    printf("%lld\n",ans);
}