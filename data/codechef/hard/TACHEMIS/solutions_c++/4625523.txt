#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <algorithm>
#include <bitset>
#include <deque>
#include <iostream>
#include <iomanip>
#include <limits>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef pair <int, int> pii;
typedef pair <ll, ll> pll;
typedef vector <int> vi;
typedef vector <string> vs;


#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define FORD(i, a, b) for (int i = (a); i >= (b); i--)
#define REP(i, a) for (int i = 0; i < (a); i++)
#define REPD(i, a) for (int i = ((a) - 1); i >= 0; i--)
#define FIT(it, v) for (typeof((v).begin())it = (v).begin(); it != (v).end(); ++it)
#define FITD(it, v) for (typeof((v).rbegin())it = (v).rbegin(); it != (v).rend(); ++it)
#define fe(i,a) for(__typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define VAR(a, b) typeof(b) a(b)
#define ALL(v) (v).begin(), (v).end()
#define SET(a, x) memset((a), (x), sizeof(a))
#define SIZE(a) ((int)(a).size())

#define EXIST(a, b) (find(ALL(a), (b)) != (a).end())
#define SORT(x) sort(ALL(x))
#define GSORT(x) sort(ALL(x), greater<typeof(*((x).begin()))>())
#define UNIQUE(v) SORT(v); (v).resize(unique(ALL(v)) - (v).begin())
#define ENUM(v) FIT(it, (v)) cout << *it << " "; cout << endl

#define PF push_front
#define PB push_back
#define MP make_pair
#define F first
#define S second

// bit operater
int BIT(ll x,int i) { return(x&(1<<i));}
ll ONBIT(int i,ll x){ return(x|(1<<i));}
ll OFFBIT(int i,ll x){return (x& ~(1<<i));}
ll FLIPBIT(int i,ll x){return (x^(1<<i));}

const char IN[] = "_.in";
const char OUT[] = "_.out";
const int maxn=122222;

pair<char, int> a[maxn];
int P[maxn];
ll sum[maxn];
int test,n;
void Manacher()
{
		SET(P,0);
	  int C = 1, R = 1;
	  a[0]=MP('#',0);
	  a[n+1]=MP('@',0);	  
	  
  	  for (int i = 1; i <=n ; i++) {
    		int i_mirror = 2*C-i;    
    		P[i] = (R > i) ? min(R-i, P[i_mirror]) : 0;        
    		while (a[i + 1 + P[i]] == a[i - 1 - P[i]]) P[i]++;
    		if (i + P[i] > R) {
      			C = i;
      			R = i + P[i];
    		}
  		}     
  		sum[0]=0;
  		FOR(i,1,n) sum[i]=sum[i-1]+a[i].S;
  	  ll res=0;
	  FOR(i,1,n) res=res+(ll)(a[i].S+1)*(ll)(a[i].S)/2;	
	  FOR(i,1,n)
	  {
	  		if (P[i]>0)
	  		{
	  			res-=(a[i].S+1)/2;
	  			int u=i-P[i];
	  			int v=i+P[i];
	  			res+=(sum[v]-sum[u-1]+1)/2;
	  			if (a[u-1].F==a[v+1].F) res+=min(a[u-1].S,a[v+1].S);
	  		}
	  		else
	  		if (a[i-1].F==a[i+1].F) res+=min(a[i-1].S,a[i+1].S);
	  }
	  cout<<res<<endl;
}
int main() {
   //freopen(IN, "r", stdin);
  //freopen(OUT, "w", stdout);  	
	cin>>test;
	FOR(I,1,test)
	{
		cin>>n;
		FOR(i,1,n) cin>>a[i].F>>a[i].S;
		Manacher();
	}	
}
