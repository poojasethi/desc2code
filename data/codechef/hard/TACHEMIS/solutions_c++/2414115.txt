#include<stdio.h>
#include<iostream>

using namespace std;
char comp[100005];
int rep[100005];
int p[100005];
int pref[100005];

void longestPalin(char * seq, int * num,int k){
	int c=0,r=0;
	p[0]=0;
	for(int i=1;i<=k;i++){
		//printf(" index i = %d and char = %c \n",i,seq[i]);
		int i_mirror = 2*c-i;
		p[i]=r>i?min(p[i_mirror],r-i):1;
		while((seq[i+p[i]]==seq[i-p[i]]) && (num[i+p[i]]==num[i-p[i]])){
			//printf(" checking for %c and %c \n",seq[i+p[i]],seq[i-p[i]]);

			p[i]++;
		}
		if(i+p[i]>r){
			r=i+p[i];c=i;
		}
	}

		/*int index;
		if(r>i){
			int mx = 0;
			for(int x=r;x>i;x--)
				mx+=num[x];
			p[i]=min(p[i_mirror],mx);
			if(mx>p[i_mirror])
				continue;
			index = r-i;
		}
		else{
			p[i]=0;
			index=0;
		}
		while(seq[i+index+1]==seq[i-index-1]){
			//printf(" checking for %c and %c \n",seq[i+index+1],seq[i-index-1]);
			if(num[i+index+1]==num[i-index-1])
				p[i]+=num[i+index+1];
			else{
				p[i]+=min(num[i+index+1],num[i-index-1]);
				break;
			}
			index++;
		}
		if(i+index>r)
			c = i; r = index+i;
	}*/
	/*for(int i=1;i<=k;i++)
		printf("%d ",p[i]);
	printf("\n")*/;
}
long long int incrementP(int k){
	long long int ans =0;
	for(int i=1;i<=k;i++){
		int tot = 0;
		if(comp[i+p[i]]==comp[i-p[i]])
			tot=min(rep[i+p[i]],rep[i-p[i]]);
		tot+=(pref[i+p[i]-1]-pref[i]);
		ans+=1LL*tot + 1LL* rep[i]*(rep[i]+1)/2;
	}
	return ans;
}
void cal_pref(int k){
	pref[0]=0;
	for(int i=1;i<=k;i++)
		pref[i]=pref[i-1]+rep[i];
}
int main(){
	int t,k;
	comp[0]='^';
	rep[0]=0;
	scanf("%d",&t);
	while(t--){
		scanf("%d%*c",&k);
		int i;
		for(i=1;i<=k;i++)
			scanf("%c %d%*c",comp+i,rep+i);
		comp[i++]='$';
		comp[i]='\0';
		rep[i]=0;
		cal_pref(k);
		longestPalin(comp,rep,k);
		printf("%Ld\n",incrementP(k));
		
	}
	return 0;
}
