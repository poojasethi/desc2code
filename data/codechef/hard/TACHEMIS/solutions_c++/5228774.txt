#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
 
#define LL long long
#define vi vector<int>
#define pb push_back
#define sz size
#define all(x) (x).begin(),(x).end()
#define it iterator
#define REP(i,a,b) for(int i=(a);i<(b);i++)
#define REPX(i,a,b,c) for(int i=(a);i<(b);i+=(c))
#define DEP(i,a,b) for(int i=(a)-1;i>=(b);i--)
#define REX(i,x) for(__typeof((x).begin()) i=(x).begin(); i!=(x).end();i++)
#define pii pair<int,int>
#define pdd pair<double, double>
#define mp make_pair
#define fi first
#define se second
#define st string
#define ffo find_first_of
#define su substr
#define vs vector<st>
#define ub upper_bound
#define lb lower_bound
#define ni next_int
#define gu getchar_unlocked
#define bs binary_search
#define ord(c) (c-'0')
#define MAX 100010
#define MOD 1000000007
#define pci pair<char,int>
using namespace std;
pci x[MAX]; int p[MAX],y[MAX];
inline int ni()
{
	int n=0,s=1; char c=gu();
	while(!(c>='0' && c<='9')) 
	{
		if(c=='-') s=-1;
		c=gu();
	}
	while(c>='0' && c<='9')
	{
		n=(n<<3)+(n<<1)+c-'0';
		c=gu();
	}
	return n*s;
}
int main()
{
	int tc=ni();
	REP(t,0,tc)
	{
		int n=ni(); LL v=0;
		x[0]=mp('^',1);
		REP(i,1,n+1)
		{
			x[i].fi=gu();
			x[i].se=ni();
			int k=x[i].se;
			v+=((LL)k*(k+1))>>1;
		}
		x[n+1]=mp('$',1);
		y[0]=x[0].se;
		REP(i,1,n+2) y[i]=y[i-1]+x[i].se; 
		int c=0,r=0;
		REP(i,1,n+1)
		{
			int j=(c<<1)-i;
			p[i]=(i<=r)?min(r-i,p[j]):0;
			while(x[i+1+p[i]].fi==x[i-1-p[i]].fi && x[i+p[i]].se==x[i-p[i]].se) p[i]++;
			if(i+p[i]>r)
			{
				c=i;
				r=i+p[i];
			}
		}
		REP(i,1,n+1) if(p[i]>=1) 
		{
			v+=min(x[i+p[i]].se,x[i-p[i]].se);
			v+=y[i-1]-y[i-p[i]]; 
		}
		printf("%lld\n",v);
	}
	return 0;
}