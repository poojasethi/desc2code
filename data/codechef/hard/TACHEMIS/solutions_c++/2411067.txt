#include <iostream>
#include <cstdio>
using namespace std;

#define ll                      long long
#define inc(i,a,b)              for(int i=a;i<=b;++i)
#define dec(i,a,b)              for(int i=a;i>=b;--i)

const int maxV = 2e6 + 6;
const unsigned ll p = 1e9+7;
unsigned ll hleft[maxV], hright[maxV], hpower[maxV];

int main() {
    int t;
    scanf("%d",&t);
    
    hpower[0] = 1;
    inc(i,1,maxV-1) 
        hpower[i] = hpower[i-1]*p;
    
    int k;
    inc(i,1,t) {
        scanf("%d",&k);
        
        char ch[k];
        ll cnt[k], prefix[k];
        
        ll ans = 0;
        
        inc(j,0,k-1) {
            scanf(" %c %lld",&ch[j],&cnt[j]);
            ans += (cnt[j]*(cnt[j]-1))/2;
            ans += cnt[j];
            prefix[j] = cnt[j];
            if(j) prefix[j] += prefix[j-1];
        }
        
        hleft[0] = ch[0]*p + cnt[0];
        inc(j,1,k-1) {
            hleft[j] = hleft[j-1]*p + ch[j];
            hleft[j] = hleft[j]*p + cnt[j];
        }
        
        hright[k-1] = ch[k-1]*p + cnt[k-1];
        dec(j,k-1,0) {
            hright[j] = hright[j+1]*p + ch[j];
            hright[j] = hright[j]*p + cnt[j];
        }
        
        inc(j,0,k-1) {
            int l = 0, u = min(j+1,k-j), d;
            unsigned ll lval, rval;
            while(u-l>1) {
                d = (l+u)/2;
                // Checking (j-d,j+d)
                
                lval = hleft[j+d];
                if(j-d != 0) lval -= hleft[j-d-1]*hpower[2*(d+d+1)];
                rval = hright[j-d];
                if(j+d != k-1) rval -= hright[j+d+1]*hpower[2*(d+d+1)];
                
                if(lval == rval)
                    l = d;
                else
                    u = d;
            }
            
            if(j-l!=0 && j+l!=k-1) if(ch[j-l-1] == ch[j+l+1]) ans += min(cnt[j-l-1],cnt[j+l+1]);
            if(j) ans += prefix[j-1];
            if(j-l) ans -= prefix[j-l-1];
        }
        printf("%lld\n",ans);
    }
    
    return 0;
}