#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <memory.h>
#include <sstream>
#include <complex>
#include <cassert>
using namespace std;

#define mp make_pair

pair <char,int> arr[100110];
int range[100110];
int sum[100110];
int n;


long long foo()
{
	long long int res=0;
	int cen=1;
	range[1]=1;
	arr[0]=mp('#',0);
	arr[n+1]=mp('@',0);
	for(int i=2;i<=n;i++)
	{
		range[i]=1;
		if(range[cen]+cen-1>=i)
		{
			range[i] = range[cen * 2 - i];
			if (i + range[i] < cen + range[cen]) continue;
            else range[i] = cen + range[cen] - i;
        }

        while (arr[i - range[i]] == arr[i + range[i]]) range[i]++;
        cen = i;
    }
    sum[0]=0;
    for(int i=1;i<=n;i++)
    {
    	res+=(long long int)(arr[i].second+1)*(arr[i].second)/2;
    }
    
    for(int i=1;i<=n;i++)
    {
    	sum[i]=sum[i-1]+arr[i].second;
    }
    
    for(int i=1;i<=n;i++)
    {
    	if(range[i]>1)
    	{
    		res-=(arr[i].second+1)/2;
    		int x,y;
    		x=i-range[i]+1;
    		y=i+range[i]-1;
    		res+=(sum[y]-sum[x-1]+1)/2;
    		if (arr[x - 1].first == arr[y + 1].first) res += min(arr[x - 1].second, arr[y + 1].second);
    	}
    	else if(arr[i-1].first==arr[i+1].first)
    	{
    		res+=min(arr[i-1].second,arr[i+1].second);
    	}
    }
    return res;
}


int main()
{
	int tc;
	scanf("%d",&tc);
	while(tc--)
	{
		scanf("%d",&n);
		for(int i=1;i<=n;i++)
		{
			cin>>arr[i].first>>arr[i].second;
		}
		printf("%lld\n",foo());
	}
	return 0;
}