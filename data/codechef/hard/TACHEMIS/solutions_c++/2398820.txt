#define ll long long
#define vi vector <ll>
#define pii pair <ll,ll>
#define FOR(i, a, b) for (i = (a); i <= (b); i++)
#define REP(i, a) for (i = 0; i < (a); i++)
#define ALL(v) (v).begin(), (v).end()
#define SET(a, x) memset((a), (x), sizeof(a))
#define SZ(a) ((ll)(a).size())
#define CL(a) ((a).clear())
#define SORT(x) sort(ALL(x))
#define mp make_pair
#define pb push_back
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))

#define filer() freopen("in.txt","r",stdin)
#define filew() freopen("out.txt","w",stdout)

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <queue>


using namespace std;


#define asd exit(0);

char s[100005];
int v[100005];

int d1[100005];
ll c[100005];

int brute( string s )
{



    cout<<s<<endl;

    int i,j,l=SZ(s);

    int ret=0;

    for(i=0;i<l;i++)
    {
        for(j=0;i-j>=0 && i+j<l ;j++)
        {
            if( s[i+j]==s[i-j] )ret++;
            else break;
        }
    }

    for(i=0;i<l;i++)
    {
        for(j=0;i-j-1>=0 && i+j<l ;j++)
        {
            if( s[i+j]==s[i-j-1] )ret++;
            else break;
        }
    }


    return ret;





}

int main()
{



    //filer();


    int T,n,i,j,k;

    scanf("%d",&T);

    while(T--)
    {


        ll ans=0;

        scanf("%d",&n);

       // string ss="";

        for(i=0;i<n;i++)
        {
            scanf("%s%lld",s+i,&v[i]);
            c[i+1]=v[i]+c[i];
            ans+=((ll)v[i]*(v[i]+1))/2;


            //for(j=0;j<v[i];j++)ss+=s[i];

        }

      //  cout<<brute(ss)<<endl;

      //  cout<<ans<<endl;asd

        //cout<<s<<endl;

        ///





        int l=0, r=-1;
        for (i=0; i<n; ++i) {

            k = (i>r ? 0 : min (d1[l+r-i], r-i))+1;
            while ( i+k < n && i-k >= 0 && s[i+k] == s[i-k] && v[i+k]==v[i-k]  )k++;

           // res[i]=0;

            if( i+k < n && i-k >= 0 && s[i+k]==s[i-k])
            {
               // res[i]+=min( v[i+k],v[i-k] );
                ans+=min( v[i+k],v[i-k] );
            }


            d1[i] = --k;

            if(k)
			{
			//	res[i]+=c[  i + k + 1 ]-c[ i+1  ];
				ans+=c[  i + k + 1 ]-c[ i+1  ];
			}

            if (i+k > r)
                l = i-k,  r = i+k;
        }

        ///

        printf("%lld\n",ans);
    }

    return 0;
}

