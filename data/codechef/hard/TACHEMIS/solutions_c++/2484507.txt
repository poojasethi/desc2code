#include<cstdio>
#include<iostream>
#include<algorithm>
using namespace std;
#define ll long long

ll ans;
int n; string s;
const int N = 100007;
int num[N], p[N]; ll pref[N];

void addrem();
ll finish();

int main()
{
    int norton; scanf("%d", &norton);
    while(norton--)
    {
        scanf("%d", &n);
        ans = 0; s = "";
        for(int i= 0 ;i<n; ++i)
        {
            char ch; cin>>ch;
            int nu; scanf("%d", &nu);

            s += ch;
            num[i] = nu;

            ans += ( (ll)nu * (nu + 1) ) / 2;
        }

        addrem();
        ans += finish();
        printf("%lld\n", ans);
    }
}

void addrem()
{
    p[0] = 1;
    int er = 0, cc = 0;
    for(int i = 1; i<n; ++i)
    {
        int rev = 2 * cc - i;
        
        if(er > i)
        {
            if(p[rev] < er - i + 1) p[i] = p[rev];
            else p[i] = er - i + 1;
        }
        else p[i] = 1;
        
        while( i - p[i] >= 0 and i + p[i] < n and s[i + p[i]] == s[ i- p[i]])
        {
            if(num[i + p[i]] != num[i - p[i]]) break;
            ++p[i];
        }
        
        if(i + p[i] > er)
        {
            er = i + p[i] - 1;
            cc = i;
        }
    }
}

ll finish()
{
    pref[0] = num[0];
    for(int i = 1 ;i<n ;++i) pref[i] = num[i] + pref[i-1];

    ll ans = 0;
    for(int i = 0; i < n; ++i)
    {
        ans += pref[i + p[i] - 1] - pref[i];
        if(i+p[i]<n and i-p[i]>=0)
            if(s[i + p[i]] == s[i - p[i]]) ans += min( num[i + p[i]], num[i- p[i]] );
    }

    return ans;
}