// vs11.cpp : Defines the entry point for the console application.
//


#include <iostream>
#include<string>
#include <vector>
#include <algorithm>
using namespace std;
int CountSimilarity(const string &strInput, const string &key)
{
	int iCount = 0;
	size_t found = strInput.find(key);
	while(std::string::npos != found)
	{
		iCount++;
		found = strInput.find(key,found+1);
	}
	return iCount;
}
int countMinMax(const string &strS1, const string &strS2, int &min, int &max)
{
	int i=0;int j=0;
	min=0;
	max=0;
	while((i < strS1.length() )&&(j < strS2.length() ))
	{
		if((strS1[i] == strS2[j])&& (strS1[i] == '?'))
		{
			max++;
		}
		else if((strS1[i] == strS2[j])&& (strS1[i] != '?'))
		{
			int i =0;
		}
		else if((strS1[i] != strS2[j])&& (strS1[i] != '?') && (strS2[j] == '?'))
		{
			max++;
		}
		else if((strS1[i] != strS2[j])&& (strS2[j] != '?') && (strS1[i] == '?'))
		{
			max++;
		}
		else if((strS1[i] != strS2[j])&& (strS2[j] != '?') && (strS1[i] != '?'))
		{
			max++;
			min++;
		}
		i++;
		j++;
	}
	return 0;
}
int isPalint(const string sInput,int n)
{
	for(auto i =0;i < n; i++)
	{
		if(sInput.at(i)- sInput.at(n-i-1)) return 0;
	}
	return 1;
}
int main(int argc, char* argv[])
{
	auto T =0;
	scanf("%d",&T);
	 
	while(T--)	
	{
		char s[52];
		scanf("%s",s);
		string strS(s);
		char t[52];
		scanf("%s",t);
		string strT(t);
		if(strS ==strT)
		{
			printf("Yes\n");
			continue;
		}
		string sUniq(strS.begin(),unique(strS.begin(),strS.end()));
		string tUniq(strT.begin(),unique(strT.begin(),strT.end()));
		if(sUniq ==tUniq)
			printf("Yes\n");
		else 
			printf("No\n");

		//bool bRes = false;
		//for(int i=0,j=0; i < strS.length() || j < strT.length(); /*++i,++j*/)
		//{
		//	if((i < strS.length() )&& ( j < strT.length()) && (strS.at(i) == strT.at(j)))
		//	{
		//		if(i < strS.length())
		//			i++;
		//		if( j < strT.length())
		//			j++;
		//		continue;
		//	}
		//	else if((i > 0) && (j > 0) && (strS.at(i-1) == strT.at(j-1)) && (strS.at(i) != strT.at(j)))
		//	{
		//		if((strS.at(i-1) == strS.at(i)) && (i+1 < strS.length()))
		//			i++;
		//		else if((strT.at(j-1) == strT.at(j)) && (j+1 < strT.length()))
		//			j++;
		//		else
		//		{
		//			bRes = false;
		//			break;
		//		}
		//	}
		//}
		//if(strS ==strT)
		//	printf("Yes\n");
		//else 
		//	printf("No\n");
	}
	return 0;
}
