#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
using namespace std;

long long int n,d;
long long int dp[1000000];
#define inf 1000000000000000000LL
long long int cal(long long int *a)
{
long long int diff=0;
for(int i=0;i<n;i++)
diff=diff*d+a[i];
return diff;
}

long long int penalty(long long int *a)
{
long long int temp1=0,temp2=0;
for(int i=0;i<n;i++)
{
temp1^=a[i];
temp2+=a[i];
}
return temp1*temp2;
}

long long int func(long long int *a)
{
long long int val=cal(a);
if(dp[val]!=-1)
return dp[val];
if(val==0)
return dp[val]=0;
dp[val]=inf;
long long int temp[30];
for(int i=0;i<n;i++)
temp[i]=a[i];
long long int temp1=inf;
long long int temp2=penalty(a);
for(int i=0;i<n;i++)
if(a[i]>0)
{
temp[i]--;
temp1=min(temp1,func(temp));
temp[i]++;
}
return dp[val]=temp1+temp2;
}

int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
while(t--)
{
cin>>n>>d;
if(n==1)
{
long long int sum=0;
for(long long int i=0;i<=d-1;i++)
{
sum=sum+i*i;
}
cout<<sum<<endl;
continue;
}
memset(dp,-1,sizeof(dp));
long long int a[30];
for(int i=0;i<n;i++)
a[i]=d-1;
cout<<func(a)<<endl;
}
return 0;
}
