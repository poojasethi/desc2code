#include<bits/stdc++.h>
#define gc getchar//_unlocked
#define pc putchar//_unlocked
#define sz(a) int((a).size())
#define pb push_back
#define pob pop_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define f_in(st) freopen(st,"r",stdin);
#define f_out(st) freopen(st,"w",stdout);
#define SWAP(x,y) x^=y^=x^=y
#define MOD 1000000009
using namespace std;
inline long long readInt(){
long long n = 0, c = gc(), f = 1;
while(c != '-' && (c < '0' || c > '9')) c = gc();
if(c == '-') f = -1, c = gc();
while(c >= '0' && c <= '9')
n = (n<<3) + (n<<1) + c - '0', c = gc();
return n * f;
}

inline void writeInt(long long a)
{
    char snum[20];
    int i=0;
    do  {
        snum[i++]=a%10+48;
        a=a/10;
    }while(a!=0);
    i=i-1;
    while(i>=0)
    pc(snum[i--]);
    pc('\n');
}

long long dp[(1<<16)];
const long long inf = 1E18;
int n , d;

long long baseD(vector<int> pos){
	int z = 0;
	for(int i=0;i<pos.size();i++)
		z = z * d + pos[i];
	return z;
}

long long cost(vector<int> pos){
	long long a=0 , b=0;
	for(int i=0;i<pos.size();i++){
		a = a^pos[i] , b += pos[i];
	}
	return a*b;
}


long long rec(vector<int> &pos){
	long long idx = baseD(pos);
	if(dp[idx]!=-1)
		return dp[idx];
	if( idx == 0 ){
		dp[idx] = 0;
		return 0;
	}
	
	vector<int> came = pos;
	dp[idx] = inf;
	long long minu = inf;
	for(int i=0;i<came.size();i++){
		if(came[i]>0){
			came[i]--;
			minu = min(minu , rec(came) );
			came[i]++;
		}
	}
	
	long long pen = cost(pos);
	dp[idx] = pen + minu;
	return dp[idx];
}


void solve(){
	memset(dp,-1,sizeof(dp));
	cin>>n>>d;
	vector<int>pos;
	for(int i=0;i<n;i++) pos.pb(d-1);
	cout<<rec(pos)<<endl;
}

int main()
{
	int t = readInt();
	while(t--){
		solve();
	}
	return 0;
}
