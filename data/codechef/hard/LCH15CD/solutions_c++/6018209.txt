#include<bits/stdc++.h>

using namespace std;

long long int memo[1000007],weight[1000007];
long long int gennum(long long int n,long long int d)
{
    long long int sum=0,i;
    for(i=0;i<n;i++)
    {
        sum+=((d-1)*(pow(d,i)));
    }
    return sum;
}

long long int asswei(long long int num,long long int n,long long int d)
{
    long long int res,res1,temp,dig;
    if(weight[num]!=-1)
        return weight[num];
    res=0;res1=0;
    temp=num;
    while(temp>0)
    {
        dig=temp%d;
        temp=temp/d;
        res=res^(dig);
        res1=res1+dig;
    }
    weight[num]=res*res1;
    return weight[num];
}

long long int steps(long long int num,long long int n,long long int d)
{
    long long int mini,i,x,y,a,b;
    if(memo[num]!=-1)
        return memo[num];
    mini=INT_MAX;
    for(i=1;i<=n;i++)
    {
        a=pow(d,i);
        b=pow(d,i-1);
        x=(num%a)/b;
        if(x!=0)
        {
            y=steps(num-pow(d,i-1),n,d);
            if(y<mini)
                mini=y;
        }
    }
    memo[num]=asswei(num,n,d)+mini;
    /*cout<<memo[num]<<"\n";*/
    return memo[num];
}
int main()
{
    long long int n,d,num,t;
    cin>>t;
    while(t--)
    {
    memset(memo,-1,sizeof(memo));
    memset(weight,-1,sizeof(weight));
    memo[0]=0;
    cin>>n>>d;
    if(n!=1)
    {
    num=gennum(n,d);
    cout<<steps(num,n,d)<<"\n";
    }
    else
    {
        d--;
        num=(d*(d+1)*(2*d+1))/6;
        cout<<num<<"\n";
    }
    }
    return 0;
}
