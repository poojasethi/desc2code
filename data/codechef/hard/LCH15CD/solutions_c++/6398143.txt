/* 
    Template: 
    By Jugal :) 
*/ 
#include<bits/stdc++.h> 
using namespace std; 

typedef long long ll; 
typedef vector <int> vi; 
typedef vector <vi> vii; 
typedef pair<int,int> pii; 
typedef int ft; 

#define get getchar_unlocked 
#define put putchar_unlocked 
#define pb push_back 
#define mp make_pair 
#define ff first 
#define ss second 
#define sz size() 
#define len length() 
#define rep(i,n) for(int i=0;i<n;i++) 
#define ref(i,a,n) for(int i=a;i<=n;i++) 
#define reb(i,n,a) for(int i=n;i>=a;i--) 
#define all(a) a.begin(),a.end() 
#define gi(n) scanf("%d",&n) 
#define gii(n) scanf("%lld",&n) 
#define gc(c) scanf(" %c",&c) 
#define pi(n) printf("%d",n) 
#define pii(n) printf("%lld",n) 
#define pc(c) printf("%c",c) 
#define ps printf(" ") 
#define pn printf("\n") 

void gl(char *str) { char c; int i=0; if((c=get())!='\n') str[i++]=c; while((c=get())!='\n') str[i++]=c;str[i]='\0'; } 
void pl(char *str) { rep(i,strlen(str)) put(str[i]); } 
void gfi(ft &n) { 
	char c; 
	ft sign=1; n=0; 
	while(((c=get())<'0' || c>'9') && c!='-'); 
	if(c=='-') sign=-1; if(c>='0' && c<='9') n=(n<<3)+(n<<1)+(c-'0'); 
	while((c=get())!='\n' && c!=' ') n=(n<<1)+(n<<3)+(c-'0'); 
	n*=sign; 
}

const ll inf = 1E18;
ll dp[1<<17],d,dim;

ll based(vi vec) {
	ll temp=0;
	rep(i,vec.sz) temp=temp*d+vec[i];
	return temp;
}

ll cost(vi vec) {
	ll cost1=0,cost2=0;
	rep(i,vec.sz) cost1^=vec[i],cost2+=vec[i];
	return cost1*cost2;
}

ll solve(vi vec) {
	ll id=based(vec);
	if(id==0) return 0;
	if(dp[id]!=-1) return dp[id];
	
	ll mini=inf;
	rep(i,vec.sz) {
		if(vec[i]>0) {
			vec[i]--;
			mini=min(mini,solve(vec));
			vec[i]++;
		}
	}
	return dp[id]=mini+cost(vec);
}

int main() 
{
	int t;
	gi(t);
	while(t--) {
		gii(dim);gii(d);
		vi vec;
		rep(i,dim) vec.pb(d-1);
		memset(dp,-1,sizeof(dp));
		pii(solve(vec));pn; 
	}
	return 0; 
} 
