#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <cmath>
#include <fstream>
#include <cstdlib>
#define MAX(a,b,c) (a)>(b)?((a)>(c)?(a):(c)):((b)>(c)?(b):(c))
using namespace std;

long int *arr,*seg,lim[1000000][6];
long int ctrct(long int sb,long int se,long int si)
{
 if(sb == se)
 {
  seg[si] =  1;
  lim[si][0] = lim[si][1] = lim[si][2] = lim[si][3] = lim[si][4] = lim[si][5] = sb;
 }
 else
 {
  long int mid = (se+sb)/2;
  long int l = ctrct(sb,mid,2*si+1);
  long int r = ctrct(mid+1,se,2*si+2);
  if(arr[mid+1] - arr[mid] == 1)
  {
   seg[si] = MAX(l,r,(lim[2*si+2][1]-lim[2*si+1][4]+1));
   if(seg[si] == l || seg[si] == r)
   {
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = lim[2*si+1][4];
   lim[si][3] = lim[2*si+2][1];
   }
   else
   {
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = lim[2*si+1][4];
   lim[si][3] = lim[2*si+2][1];
   if(lim[si][3] == lim[2*si+2][5])
   {
    lim[si][4] = lim[si][2];
   }
   if(lim[si][2] == lim[2*si+1][0])
   {
    lim[si][1] = lim[si][3];
   }
   }
  }
  else
  {
   seg[si] = max(l,r);
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = 0;
   lim[si][3] = 0;
  }
 }
 return seg[si];
}

void update(long int ss,long int se,long int x,long int val,long int si)
{
 if(ss > x || se < x)
    return;
 if(ss != se)
 {
  long int mid = (ss+se)/2;
  update(ss,mid,x,val,2*si+1);
  update(mid+1,se,x,val,2*si+2);
  long int l = seg[2*si+1],r = seg[2*si+2];
  if(arr[mid+1] - arr[mid] == 1)
  {
   seg[si] = MAX(l,r,(lim[2*si+2][1]-lim[2*si+1][4]+1));
   if(seg[si] == l || seg[si] == r)
   {
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = lim[2*si+1][4];
   lim[si][3] = lim[2*si+2][1];
   }
   else
   {
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = lim[2*si+1][4];
   lim[si][3] = lim[2*si+2][1];
   if(lim[si][3] == lim[2*si+2][5])
   {
    lim[si][4] = lim[si][2];
   }
   if(lim[si][2] == lim[2*si+1][0])
   {
    lim[si][1] = lim[si][3];
   }
   }
  }
  else
  {
   seg[si] = max(l,r);
   lim[si][0] = lim[2*si+1][0];
   lim[si][1] = lim[2*si+1][1];
   lim[si][4] = lim[2*si+2][4];
   lim[si][5] = lim[2*si+2][5];
   lim[si][2] = 0;
   lim[si][3] = 0;
  }
 }
 else
 {
  seg[si] =  1;
  lim[si][0] = lim[si][1] = lim[si][2] = lim[si][3] = lim[si][4] = lim[si][5] = ss;
 }
}

int main()
{
    long int n,m,i,x,y,ans,segsize;
    scanf("%ld %ld",&n,&m);
    segsize = 20*(pow(2,(ceil(log2(n)))));
    arr = new long int[n];
    seg = new long int[segsize];
    memset(seg,0,segsize*sizeof(long int));
    for(i=0;i<n;i++)
     scanf("%ld",&arr[i]);
    ctrct(0,n-1,0);
    printf("%ld\n",seg[0]);
    for(i=0;i<m;i++)
    {
     scanf("%ld %ld",&x,&y);
     arr[x-1] = y;
     update(0,n-1,x-1,y,0);
     printf("%ld\n",seg[0]);
    }
    return 0;
}
