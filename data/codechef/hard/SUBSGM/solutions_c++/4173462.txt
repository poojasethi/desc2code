#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>

using namespace std;

#define MAXN 100009
int N,Q,A[MAXN];

struct st {
	int r,l,rval,lval,b;
}T[4*MAXN];

inline st Unit(st lf,st rt,int s,int e,int node) {
	st ret;
	int mid=(s+e)/2;
	ret.rval=rt.rval;
	ret.lval=lf.lval;
	
	ret.r=rt.r;
	ret.l=lf.l;
	
	if (mid-s+1==lf.b && lf.rval+1==rt.lval)
		ret.l=lf.b+rt.l;
	if (e-mid==rt.b && rt.lval==lf.rval+1)
		ret.r=rt.b+lf.r;
	int u=0;
	if (lf.rval+1==rt.lval) u=lf.r+rt.l;
	ret.b=max(max(u,max(rt.b,lf.b)),max(ret.l,ret.r));
	
	return ret;
}

inline void Update(int node,int s,int e,int id,int val) {
	int mid=(s+e)/2;
	
	if (s==e) {
		T[node].r=1;
		T[node].l=1;
		T[node].b=1;
		T[node].rval=val;
		T[node].lval=val;
		return;
	}
	if (id<=mid)
		Update(2*node,s,mid,id,val);
	else
		Update(2*node+1,mid+1,e,id,val);
	
	T[node]=Unit(T[2*node],T[2*node+1],s,e,node);
}

void Read() {
	scanf("%d %d",&N,&Q);
	for (int i=1;i<=N;i++) {
		scanf("%d",&A[i]);
		Update(1,1,N,i,A[i]);
	}
}

void Solve() {
	printf("%d\n",T[1].b);
	for (int i=1;i<=Q;i++) {
		int x,y;
		scanf("%d %d",&x,&y);
		Update(1,1,N,x,y);
		printf("%d\n",T[1].b);
	}
}

int main () {
	Read();
	Solve();
	return 0;
}
