#include <cstdio>
#include <algorithm>

#define MAX (1<<15)

using namespace std;

int *hPath(int n);
void printIndex(int idx, int n);

int main()
{
	int t,n,d,i,index,temp,*path = new int[MAX],j;
	scanf("%d",&t);
	while(t--) {
		index = 0;
		scanf("%d%d",&n,&d);
		for(i=0;i<n;i++) {
			scanf("%d",&temp);
			if(temp==1) index ^= (1<<i);
		}
		if(d < 4) {printf("-2\n"); continue; }
		path = hPath(n);
		for(i=0;i<(1<<n);i++) if(path[i] == index) break;
		j = i;
		for(i=j;i<(1<<n);i++) printIndex(path[i], n);
		for(i=0;i<j;i++) printIndex(path[i], n);
	}
	return 0;
}

int *hPath(int n)
{
	int i,*path = new int[MAX], *temp;
	if(n==2) {
		path[0] = 0, path[1] = 1, path[2] = 3, path[3] = 2;
		return path;
	}
	temp = hPath(n-1);
	for(i=0;i<(1<<(n-1));i++) path[i] = temp[i];
	for(i=0;i<(1<<(n-1));i++) path[i+(1<<(n-1))] = temp[(1<<(n-1)) - i - 1] + (1<<(n-1));
	delete temp;
	return path;
}

void printIndex(int idx, int n)
{
	int i;
	for(i=0;i<n;i++) {
		if(idx & (1<<i)) printf("1 ");
		else printf("-1 ");
	}
	printf("\n");
}