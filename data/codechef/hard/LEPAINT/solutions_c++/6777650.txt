#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

ii a[59];
int n,k,c,q;
double dp[59][109];

double memoize( int i,int j )
{
    if( i == k )
        return double(j);
    if( dp[i][j] != -1.00 )
        return dp[i][j];
    double ans = 0.00;
    REP(l,0,c - 1)
    {
        if( q >= a[i].first && q <= a[i].second )
            ans += memoize(i + 1,j) * 0.5 + memoize(i + 1,(j * l) % c) * 0.5;
        else
            ans += memoize(i + 1,j);
    }
    ans /= double(c);
    return dp[i][j] = ans;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    int t;s(t);
    while( t-- )
    {
        s(n);s(c);s(k);
        REP(i,0,k - 1)
        {
            scanf("%d",&a[i].first);
            scanf("%d",&a[i].second);
        }
        double ans = 0;
        REP(i,1,n)
        {
            REP(p,0,k)
            {
                REP(q,0,c)
                {
                    dp[p][q] = -1.00;
                }
            }
            q = i;
            ans += memoize(0,1);
        }
        printf("%0.9lf\n",ans);
    }
    return 0;
}
