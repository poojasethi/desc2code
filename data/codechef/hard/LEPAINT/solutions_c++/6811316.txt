// AUTHOR: ARVIND NAIR

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;

#define as(z,x,y) assert(x <=z  && z<= y);
#define s(x)   scanf("%d",&x)
#define rep(a,c)   for ( long int (a)=0; (a)<(c); (a)++)
#define repn(a,b,c)  for ( long int (a)=(b); (a)<=(c); (a)++)
#define repd(a,b,c)  for (  long int (a)=(b); (a)>=(c); (a)--)
#define all(v) (v).begin(),(v).end()
#define fi  first
#define se  second
#define pb  push_back
#define mp  make_pair
#define INF (int)1e9
#define EPS (double)(1e-9)
#define M(x,i) memset(x,i,sizeof(x))
#define trace(x)    cout<<#x<<" is "<<x<<"\n"

int t;
double dp[55][55][105];

void solve()  {    double ans=0;
int n,c,k,l,r;
s(n); s(c); s(k);
memset(dp,0,55*55*105*sizeof(double));
repn(j,1,n)
  dp[0][j][1]=1.0;
repn(i,1,k)  {
  s(l);  s(r);
  repn(j,1,n)  {
      rep(x,c)  {
         if(j>=l && j<=r) 
          { rep(a,c)
              dp[i][j][(a*x)%c]+=dp[i-1][j][x]/(2*c);
              
                    dp[i][j][x]+=dp[i-1][j][x]*0.50;
  }
    else
       dp[i][j][x]+=dp[i-1][j][x];              
}
}
}
  rep(x,c) { 
    repn(j,1,n) {
       ans+=dp[k][j][x]*x;
    }
}
 printf("%.10lf\n",ans);
 }

int main()
{ //ios_base::sync_with_stdio(false);  cin.tie(0); 
//freopen("/home/arvind/Downloads/     .txt","r",stdin);
//freopen("   .txt","w",stdout);
s(t);
while(t--) {
solve();
}
return 0;
}