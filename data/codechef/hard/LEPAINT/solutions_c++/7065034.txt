//!!!!!!!!!	NEVER GIVE UP !!!!! NEVER !!!!!!!! 
/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <algorithm>
#include <utility>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <queue>
#include <sstream>
#include <iomanip>
#include <limits>
using namespace std;
//cout << fixed << setprecision(4);
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define TRACE
using namespace std;
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
double Dp[51][51][101];
typedef struct{
	int start ; 
	int end ;
}p1 ;
p1 turns[55] ; 
int main()
{ 
   #ifdef _WIN32 
    freopen("input.txt", "r", stdin);
   #endif // LOCAL_USER
   
geti(t);
int n,c,k; 
while(t--)
{
	scanf("%d %d %d",&n,&c,&k);
	for(int i = 1 ;i<=k;i++)
       {
       	 scanf("%d %d",&turns[i].start,&turns[i].end);
       }
mem(Dp,0);             
for(int i=0;i<=n;i++)
	Dp[0][i][1] = 1 ; 

for(int j = 1;j<=n;j++)
{
	for(int i = 1 ;i<=k;i++)
	{
	  	for(int p = 0 ;p<c;p++)
		{
			//if (Dp[i][j][p] < 1e-12) 
			//			continue;
			//cout<<"fd"<<endl;
			if(j >= turns[i].start && j<=turns[i].end)
				 { double ratio = 1.0 / c / 2;
				 	//trace1(ratio);
                	 for(int m =0;m<c;m++)
                		   	Dp[i][j][(m*p)%c]+= (Dp[i-1][j][p])*ratio ;
              	 	Dp[i][j][p]+= 0.5*Dp[i-1][j][p];       
			 	 }
			else 
			      Dp[i][j][p]+=Dp[i-1][j][p];
			//trace1(Dp[i][j][p]);       	 
	   }
	}
}  
double ans = 0 ;
for(int j = 1;j<=n;j++)
{
	for(int m =0;m<c;m++)
		ans = ans + m*Dp[k][j][m];
         //trace1(ans);}
}
//cout<<ans;
printf("%.9lf\n",ans);
}
return 0;
}