#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<vector>
#include<ctime>
#include<string>
#include<algorithm>
#define rep(i,j,k) for (i=j;i<=k;i++)
#define reps(i,j,k) for (i=j;i>=k;i--)
#define pb push_back
#define mp make_pair
#define mem(a,b) memset(a,b,sizeof(a))
#define inf 0x7fffffff
#define maxn 110
#define fi first
#define se second
#define mod 1000000007
using namespace std;
typedef long long LL;
struct node
{
	int x,y,d;
}edge[maxn*maxn];
int T,n,len=0,a[maxn][maxn],fa[maxn];
void ins(int x,int y,int d){edge[++len].x=x;edge[len].y=y;edge[len].d=d;}
bool cmp(const node &A,const node &B){return A.d<B.d;}
int find(int x)
{
	if (fa[x]==x)return x;
	else return fa[x]=find(fa[x]);
}
int main()
{
	int i,j,k;
	//freopen("in.txt","r",stdin);freopen("out.txt","w",stdout);
	scanf("%d",&T);
	while(T--)
	{
		len=0;
		scanf("%d",&n);
		rep(i,1,n)
			rep(j,1,n)
			scanf("%d",&a[i][j]);
		if (n==1)
		{
			if (a[1][1])printf("%d\n",a[1][1]);
			else printf("-1\n");
			continue;
		}
		rep(i,1,n)
			rep(j,i+1,n)
			if (a[i][j]) ins(i,j,a[i][j]);
		sort(edge+1,edge+len+1,cmp);
		rep(i,1,n)fa[i]=i;
		int tot=0;
		LL ans=0;
		rep(i,1,len)
		{
			int x=edge[i].x,y=edge[i].y;
			int fx=find(x),fy=find(y);
			if (fx!=fy)
			{
				fa[fx]=fy;tot++;ans+=edge[i].d*2;
			}
		}
		if (tot!=n-1)printf("-1\n");
		else printf("%lld\n",ans);
	}
	return 0;
}
