#include <cstdio>
#include <algorithm>
using namespace std;

const int MAXN = 112, INFTY = 0x3f3f3f3f;
int grafo[MAXN][MAXN], dist[MAXN];
bool mrk[MAXN];

long long prim(int N) {
    if (N == 1) {
        if (grafo[1][1] != 0) return grafo[1][1];
        return -1;
    }
    for (int i=1; i<=N; i++) {
        dist[i] = INFTY;
        mrk[i] = false;
    }
    dist[1] = 0;
    long long resp = 0LL;
    for (int n=1; n<=N; n++) {
        int v = -1;
        for (int i=1; i<=N; i++) {
            if (!mrk[i] && (v == -1 || dist[i] < dist[v])) v = i;
        }
        if (dist[v] == INFTY) return -1;
        mrk[v] = true;
        resp += dist[v];
        for (int i=1; i<=N; i++) {
            if (!mrk[i] && grafo[v][i] != 0) dist[i] = min(dist[i],grafo[v][i]);
        }
    }
    return (resp*2);
}

int main() {
    int T, N;
    scanf("%d",&T);
    while (T--) {
        scanf("%d",&N);
        for (int i=1; i<=N; i++) {
            for (int k=1; k<=N; k++) scanf("%d",&grafo[i][k]);
        }
        printf("%lld\n",prim(N));
    }
    return 0;
}
