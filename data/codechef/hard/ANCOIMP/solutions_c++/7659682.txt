#include<iostream>
#include<cstdio>
#include<queue>
#include<vector>
#define inf 100000
using namespace std;
int SE[1009];
int calc[1009];
int size[1009];
int pred[1009][2009]={0};
int a[1009][1009];
int ADJL[1009][1009];
bool visited[1009];
int k;
bool DFS(int v)
{
    visited[v]=true;
    calc[v]=k;
    bool res=true;
    for(int i=0;i<size[v];i++)
    {
        int j=ADJL[v][i];
        if(!visited[j])
        {
        SE[j]=1-SE[v];
        res=res&DFS(j);
        }
        else if(SE[v]==SE[j])
            return false;
    }
    return res;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++)
        for(int j=0;j<n;j++)
            scanf("%d",&a[i][j]);
	for(int i=0;i<n;i++)
	{
        size[i]=0;
        visited[i]=false;
        for(int j=0;j<n;j++)
	{
	if(a[i][j])
	{
	    ADJL[i][size[i]]=j;size[i]++;}
	}
	}
	bool res=true;
	k=0;
	for(int i=0;i<n;i++)
	{
        if(!visited[i])
        {      SE[i]=0;res=res&DFS(i);k++;}
	}
	if(res)
	{
        vector<int> co[1009][2];
        for(int i=0;i<n;i++)
        co[calc[i]][SE[i]].push_back(i);
        for(int i=0;i<k;i++)
        {
        for(int j=1;j<=2*n+1;j++)
        pred[i][j]=0;
        int x=co[i][0].size()-co[i][1].size();
        if(i==0)
        {
            pred[0][x+n+1]=5;
            pred[0][-x+n+1]=-5;
            continue;
        }
        for(int j=max(1-x,1+x);j<=min(2*n+1+x,2*n+1-x);j++)
        {
        if(pred[i-1][j])
        {
            pred[i][j+x]=j;pred[i][j-x]=-j;
        }
        }
        }
        int y[1009];
        int m=inf;
        int res;
        for(int i=1;i<=2*n+1;i++)
        {
        int p=max(n+1-i,i-n-1);
        if(m>p && pred[k-1][i])
        {   m=p;res=i;}
        }
        m=res;
        for(int i=k-1;i>=0;i--)
        {
        for(int j=0;j<co[i][0].size();j++)
            y[co[i][0][j]]=1-(pred[i][m]>0);
        for(int j=0;j<co[i][1].size();j++)
            y[co[i][1][j]]=1-(pred[i][m]<0);
        m=pred[i][m];
        if(m<0)
        m=-m;
        }
        for(int i=0;i<n;i++)
        printf("%d ",y[i]);
        printf("\n");
        }
        else
        printf("%d\n",-1);
        }
	return 0;
}
