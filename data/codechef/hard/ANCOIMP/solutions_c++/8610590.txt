#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<queue>
#include<cstdio>
#include<cstdlib>
#include<ctime>
#include<cstring>
#include<cmath>
#include<cassert>
 
using namespace std;
 
#define mod 33330
#define X first
#define Y second
#define pb push_back
#define tr(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define all(c) c.begin(),c.end()
#define MAXN 100010
#define INF 1000000000
 
typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef vector<int> vi;
typedef pair<int,int> pii;
 
int N,p;
int A[1010][1010],visit[1010];
int dp[1010][1010];
vi adj[1010],W;
vector<pii> P;
vi q[2010];
int y[1010];
 
int is_valid(int src){
	queue<int> Q;
	Q.push(src);
	visit[src]=++p;
	while(!Q.empty()){
		int nd = Q.front();
		Q.pop();
		for(int i=0;i<adj[nd].size();i++){
			int ch = adj[nd][i];
			if(visit[ch]==visit[nd]) return 0;
			if(visit[ch]==0){
				visit[ch]=-visit[nd];
				Q.push(ch);
			}
			//else if(visit[ch]!=-visit[nd]) return 0;
		}
	}
	return 1;
}
 
int main(){
    //freopen("input.txt","r",stdin);
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int t;
	cin>>t;
	while(t--){
		cin>>N;
		int fg = 1;
		for(int i=1;i<=N;i++)
		for(int j=1;j<=N;j++)
			cin>>A[i][j];
		for(int i=1;i<=N;i++)
			if(A[i][i]==1) 
				fg =0;
 
		if(!fg){
			printf("-1\n");
			continue;
		}
		
		for(int i=1;i<=N;i++)
		for(int j=1;j<=N;j++){
			if(A[i][j]==1)
				adj[i].pb(j);
		}
 
		p=0;
		for(int i=1;i<=N;i++){
			if(adj[i].size()>0 && visit[i]==0){
				fg = is_valid(i);
				if(!fg) break;
			}
		}
 
		if(!fg){
			printf("-1\n");
			for(int i=0;i<=N;i++) adj[i].resize(0);
			memset(visit,0,sizeof(visit));
			continue;
		}
        
		for(int i=1;i<=N;i++){
			q[N+1+visit[i]].pb(i);
		}
        //for(int i=1;i<=N;i++)cout<<visit[i]<<endl;
		for(int i=1;i<=N;i++) y[i]=-1;
 
		for(int i=1;i<=p;i++){
			P.pb(pii(q[N+1+i].size(),q[N+1-i].size()));
			W.pb(0);
		}
		for(int i=0;i<q[N+1].size();i++) P.pb(pii(1,0)), W.pb(0);
 
		for(int i=0;i<=N;i++) 
		for(int j=0;j<=N;j++)
			dp[i][j]=0;
 
		dp[0][P[0].X]=dp[0][P[0].Y]=1;
 
		for(int i=1;i<P.size();i++){
			int v1,v2;
			v1 = P[i].X;
			v2 = P[i].Y;
			for(int j=0;j<=N;j++){
				if(dp[i-1][j]==1){
					if(j+v1<=N) dp[i][j+v1]=1;
					if(j+v2<=N) dp[i][j+v2]=1;
				}
			}
		} 
    for(int i=0;i<P.size();i++){
        
        /*for(int j=0;j<=N;j++)
            cout<<dp[i][j]<<" ";
        cout<<endl;*/
    }
		int mx = 0, n=P.size()-1,m=0;
		for(int i=0;i<=N;i++){
			if(dp[n][i]==1 && mx<i*(N-i)){
				mx = i*(N-i);
				m=i;
			}
		}
		//cout<<m<<endl;
		while(n>=0){
			int v1 = P[n].X;
			int v2 = P[n].Y;
			if(n==0){
				if(m==v1) W[n]=1;
				break;
			}
			if(m-v1>=0 && dp[n-1][m-v1]==1){ 
				W[n]=1;
				m=m-v1;
			}
			else m=m-v2;
			n--;
		}
 
		for(int i=1;i<=p;i++){
			for(int j=0;j<q[N+1+i].size();j++)
				y[q[N+1+i][j]]=W[i-1];
			for(int j=0;j<q[N+1-i].size();j++)
				y[q[N+1-i][j]]=1-W[i-1];
		}
		for(int i=p+1;i<=W.size();i++) y[q[N+1][i-p-1]]=W[i-1];
		for(int i=1;i<=N;i++) printf("%d ",y[i]);
		printf("\n");
 
		for(int i=0;i<=N;i++) adj[i].resize(0);
		for(int i=0;i<=2*N+5;i++) q[i].resize(0);
		P.resize(0);
		W.resize(0);
		memset(visit,0,sizeof(visit));
	}
 
	return 0;
}