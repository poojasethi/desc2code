// Headers
#include<bits/stdc++.h>
using namespace std;
// Global declarations
typedef long long int ll;
typedef vector<int> vi;
typedef vector<char> vc;
typedef pair<int, int> pi;
const int mod = 1e9 + 7;
const int INF = 1 << 29;
// Macros
#define mp make_pair
#define el putchar('\n')
#define sp putchar(' ')
#define Fill(a,val) memset(a,val,sizeof a)
#define all(a) a.begin(),a.end()
#ifndef ONLINE_JUDGE
	#define tr(a, it) for (decltype(a.begin()) it = a.begin(); it != a.end(); ++it)
#else 
	#define tr(a, it) for (typeof(a.begin()) it = a.begin(); it != a.end(); ++it)
#endif
#define REP(i,lo,hi) for(int i=lo;i<hi;++i)
#define present(c,x) ((c).find(x) != (c).end())
#define in(n) scanf("%d",&n)
#define inl(n) scanf("%lld",&n)
#define out(n) printf("%d",n);
#define outl(n) printf("%lld",n);

int const NN = 2e5 + 5;
vi g[NN];
int h[NN];
int p[NN][20];

void BFS(int src){
	queue<int>Q;
	Q.push(1);
	while (!Q.empty()){
		int x = Q.front(); Q.pop(); 
		tr(g[x],it){
			int xx = *it;
			if (h[xx] > h[x] + 1){
				h[xx] = h[x] + 1;
				Q.push(xx);
				p[xx][0] = x;
			}
		}
	}
}

int lca(int u, int v){
	if (h[u] > h[v]){
		swap(u, v);
	}
	int d = h[v] - h[u];
	for (int i = 0; d > 0; d >>= 1, ++i){
		if (d & 1){
			v = p[v][i];
		}
	}
	if (u == v)
		return u;
	if (p[u][0] == p[v][0])
		return p[u][0];
	int i = 0;
	while (p[u][i] != p[v][i]) ++i;
	u = p[u][i - 1]; v = p[v][i - 1];
	for (int j = i - 2; j >= 0; --j){
		if (p[u][j] != p[v][j])
			u = p[u][j], v = p[v][j];
	}
	return p[u][0];
}

int main(){
	int n;
	in(n);
	REP (i, 1, n){
		int u, v; in(u); in(v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	REP (i, 0, NN)
		h[i] = INF;
	h[1] = 0;
	BFS(1);
	for (int i = 1; i < 20; ++i){
		for (int j = 1; j <= n; ++j){
			p[j][i] = p[p[j][i - 1]][i - 1];
		}
	}
	int q; in(q);
	while (q--){
		int r, u, v;
		in(r), in(u), in(v);
		int ans = lca(u, v);
		int ans2 = lca(r, u);
		if (h[ans2] > h[ans]) ans = ans2;
		ans2 = lca(r, v);
		if (h[ans2] > h[ans]) ans = ans2;
		out(ans); el;
	}
	return 0;
}	