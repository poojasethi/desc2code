#include <bits/stdc++.h>

using namespace std;

#define lld long long
#define mod 1000000007
#define INF (int)1e9
#define s(n) scanf("%d", &n)
#define sc(n) scanf("%c", &n)
#define sl(n) scanf("%lld", &n)
#define sf(n) scanf("%f", &n)
#define ss(n) scanf("%s", n);
#define all(a) a.begin(), a.end()
#define pii pair<int, int>
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define sq(x) ((x)*(x))
#define mset(x,v) memset(x,v,sizeof(x))
#define PI 3.1415926535897932384626
#define MAX 100005
#define pb push_back
#define MAX 100005
#define MAX 200005

int tin[MAX], tout[MAX], l[MAX], pr[MAX], tim, p[MAX][20];
vector<int> adj[200005];

void dfs(int u, int lvl)
{
    tin[u] = tim++;
    l[u] = lvl;

    for (int i = 0; i < adj[u].size(); i++) {
        if (!pr[adj[u][i]]) {
            pr[adj[u][i]] = u;
            dfs(adj[u][i], lvl+1);
        }
    }
    tout[u] = tim++;
}

int anc(int x, int y)
{
    if (tin[x] <= tin[y] && tout[y] <= tout[x])
        return 1;
    return 0;
}

int lca(int x, int y)
{
    if (anc(x, y))
        return x;

    for (int i = 19; i >= 0; i--) {
        if (!anc(p[x][i], y))
            x = p[x][i];
    }

    return p[x][0];
}

int dist(int x, int y)
{
    int tmp = lca(x, y);
    return (l[x] + l[y] - 2*l[tmp]);
}

int main()
{
    int n, x, y, i, j;
    s(n);

    for (i = 0; i < n-1; i++) {
        s(x), s(y);
        adj[x].pb(y);
        adj[y].pb(x);
    }
    mset(pr, 0);

    tim = 0;
    pr[1] = 1;
    dfs(1, 0);

    for (i = 1; i <= n; i++)
        p[i][0] = pr[i];

    for (j = 1; j < 20; j++) {
        for (i = 1; i <= n; i++)
            p[i][j] = p[p[i][j-1]][j-1];
    }

    int q;
    s(q);

    vector<int> v;
    while (q--) {
        int r;
        s(r), s(x), s(y);

        v.pb(r);
        v.pb(x);
        v.pb(y);
        v.pb(lca(r, x));
        v.pb(lca(r, y));
        v.pb(lca(x, y));

        int lcaa = 0, curr = INT_MAX;

        for (i = 0; i < v.size(); i++) {
            int dis = dist(r, v[i]) + dist(x, v[i]) + dist(y, v[i]);
            if (dis < curr) {
                curr = dis;
                lcaa = v[i];
            }
        }

        cout << lcaa << endl;
        v.clear();
    }

    return 0;
}
