#include<bits/stdc++.h>
using namespace std;
int L[200010],SZ[200010],P[200010],chainHead[200010],chainNo[200010],num;
vector<int> g[200010];
void dfs(int cur,int par)
{
	int i;
	SZ[cur]=1;P[cur]=par;
	for(i=0;i<g[cur].size();i++)
	if(par!=g[cur][i]){
	L[g[cur][i]]=L[cur]+1;
	dfs(g[cur][i],cur);
	SZ[cur]+=SZ[g[cur][i]];
	}
}
void HLD(int cur)
{
	int i;
	if(chainHead[num]==0)
	{
		chainHead[num]=cur;
	}
	chainNo[cur]=num;
	int larg=-1,largi=-1;
	for(i=0;i<g[cur].size();i++)
	{
		if(g[cur][i]!=P[cur] && SZ[g[cur][i]]>larg)
		larg=SZ[g[cur][i]],largi=i;
	}
	if(largi!=-1)
	HLD(g[cur][largi]);
	for(i=0;i<g[cur].size();i++)
	{
		if(g[cur][i]!=P[cur] && largi!=i)
		{
			num++;HLD(g[cur][i]);
		}
	}
}
int LCA(int u,int v)
{
	while(chainNo[u]!=chainNo[v])
	{
		if(L[chainHead[chainNo[u]]]>=L[chainHead[chainNo[v]]])
		u=P[chainHead[chainNo[u]]];
		else
		v=P[chainHead[chainNo[v]]];
	}
	if(L[u]>L[v])return v;
	else return u;
}
main()
{
	int q,n,i,u,v,r,r1;
	scanf("%d",&n);
	for(i=0;i<n-1;i++)
	{
		scanf("%d %d",&u,&v);
		g[u].push_back(v);
		g[v].push_back(u);
	}
	dfs(1,-1);//printf("dfs done\n");num=1;
	HLD(1);
	scanf("%d",&q);
	/*printf("chainno\n");
	for(i=1;i<=n;i++)printf("%d  ",chainNo[i]);
	printf("\nchainhead\n");
	for(i=1;i<=num;i++)
	printf("%d  ",chainHead[i]);printf("\n");*/
	while(q--)
	{
		scanf("%d %d %d",&r,&u,&v);
				int lc=LCA(u,v);
		int ans=lc;
		if(LCA(lc,r)==lc)
		{
			int x=LCA(r,u);
			int y=LCA(r,v);
			if(lc!=u&&lc!=v)
			{
				if(x==lc&&y==lc)ans=lc;
				else if(x==lc)ans=y;
				else if(y==lc)ans=x;
			}
			else if(lc==u)
			{
				ans=y;
			}
			else if(lc==v)
			{
				ans=x;
			}
		}
		printf("%d\n",ans);
	}
}