#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define mp make_pair
#define f first
#define s second
#define N 500005
#define NN 10000000
#define ln 1e10+1
#define BIT(i, j) ((j >> i) & 1)
#define ll long long
#define oo 1000000007
#define ln 1e13

using namespace std;

vector <int> a[N];
int n, T[N], P[20][N], Q;

void DFS(int u, int pre)
{
    for(int i=0; i<a[u].size(); i++)
    {
        int v = a[u][i];
        if(v == pre)    continue;
        T[v] = T[u] + 1;
        P[0][v] = u;
        DFS(v, u);
    }
}

int LCA(int u, int v)
{
    if(T[u] < T[v]) swap(u, v);
    int hi = T[u] - T[v];
    for(int j=0; j<20; j++)
        if(BIT(j, hi))
            u = P[j][u];
    if(u == v)  return u;
    for(int j=19; j>=0; j--)
        if(P[j][u] != P[j][v])
        {
            u = P[j][u];
            v = P[j][v];
        }
    return P[0][u];
}

int main()
{
   // filein("inp.txt");  fileout("out.txt");
    cin >> n;
    int u, v, r;
    for(int i=1; i<n; i++)
    {
        cin >> u >> v;
        a[u].push_back(v);
        a[v].push_back(u);
    }
    DFS(1, 0);
    for(int j=1; j<20; j++)
        for(int i=1; i<=n; i++)
            P[j][i] = P[j-1][P[j-1][i]];
    cin >> Q;
    while(Q--)
    {
        cin >> r >> u >> v;
        if(T[u] > T[v]) swap(u, v);
        int paruv = LCA(u, v);
        int parru = LCA(u, r);
        int parrv = LCA(v, r);
        if(paruv == u)
        {
            if(parru == u)
                cout << parrv << endl;
            else
                cout << u << endl;
            continue;
        }
        if(parru != paruv)
        {
            if(parru != parrv)
                cout << parru << endl;
            else
                cout << paruv << endl;
        }
        else
            cout << parrv << endl;
    }
}
