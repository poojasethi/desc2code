#include <bits/stdc++.h>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)

inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
    freopen("in.txt","r",stdin);
    freopen("out2.txt","w",stdout);
}

int main()
{
    int t = fi();
    char str[1000006];
    forall(cx,1,t+1){
        scanf("%s", str);
        int len = strlen(str);
        int lef = len/2 - 1;
        bool flag = false;
        bool allNines = true;

        forall(i, 0, len) {
            if (str[i] != '9') {
                allNines = false;
                break;
            }
        }

        if(allNines) {
            printf("1");
            forall(i, 0, len-1)
                printf("0");
            printf("1\n");
            continue;
        }

        forb(i, lef, 0) {
            int rig = len - 1 - i;

            if(str[i] < str[rig]) {
                flag = true;
                break;
            }
            if (str[i] > str[rig]) {
                flag = false;
                break;
            }
            if(i == 0){
                flag = true;
            }
        }

        if(len==1){
            flag = true;
        }

        if(flag){
            int carry = 1;
            if(len%2 == 1) {
                int mid = len/2;
                if(str[mid] == '9'){
                    str[mid] = '0';
                    carry = 1;
                } else {
                    str[mid]++;
                    carry = 0;
                }
            }
            forb(i, lef, 0){
                if(!carry){
                    break;
                }
                if(str[i] == '9'){
                    str[i] = '0';
                    carry = 1;
                } else {
                    str[i]++;
                    carry = 0;
                }
            }
        }

        forb(i, lef, 0) {
            int rig = len - 1 - i;
            str[rig] = str[i];
        }

        printf("%s\n", str);
    }

    return 0;
}
