    #include <iostream>
    #include<stdio.h>
            #include <string.h>
            using namespace std;
            void incr(int mid, int len, int num[]) {
            	int i=0;
            	while(num[mid-i]==9)
            	{
                		num[mid-i] = 0;
                		num[len-1-mid+i] = 0;
               		 i++;
            	}
            	num[mid-i]++;
            	num[len-1-mid+i] = num[mid-i];
            }
     
            bool palind(int len, int num[]) {
            for (int i=0;i<len;i++) {
            if (num[i]!=num[len-i-1]) {
            return false;
            }
            }
            return true;
            }
     
            int main() {
            // your code goes here
     
            int T;
            int i,test,flag,mid,flagp;
            scanf("%d",&T);
            int num[1000005];
            char a[1000005];
            for (int tt=0; tt<T; tt++) {
            scanf("%s", a);
            int len = strlen(a);
            for (int t1 = 0; t1 < len; t1++) {
            num[t1] = a[t1]-48;
            }
        flag=1;
       flagp=0;
         //for 999999......
         for(i=0;i<len;i++)
         {
         if(a[i]!='9')
                      {
                      flag=0;
                      break;
                      }
         } 
         if(flag==1)
         {
          a[0]='1';
          for(i=1;i<len;i++)
          a[i]='0';
          a[len]='1';
          a[len+1]='\0';
          flagp=1;
         }
         //end of check of 99999....
         flag=0;
         if(flagp!=1)
                    {
     for(i=0;i<len/2;i++)
      {    
        if(a[i]<a[len-i-1])
        flag=-1;
        else if(a[i]>a[len-i-1])
        flag=1;
        a[len-i-1]=a[i];
      }
     if(len%2==0)
     mid=len/2-1;
     else
     mid=len/2;
                 if(flag==-1 || flag==0)
                 {
                  i=0;
                 while(a[mid-i]=='9')
                                 {
                                 a[mid-i] = '0';
                                 a[len-1-mid+i] = '0';
                                 i++;
                                 }
                 a[mid-i]++;
                 a[len-1-mid+i] = a[mid-i];
                 }
                 
                  }
     
    		for (int t = 0; t < len; t++) {
            	num[t] = a[t]-48;
            }
     
            for (int t = 0; t < len; t++) {
            	//printf("%d",num[t]);
            }
    printf("%s\n",a);
            //printf("\n");
            }
     
     
     
     
     
            return 0;
       } 