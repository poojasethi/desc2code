#include<iostream>
#include<string>
#include<stdio.h>
#include<algorithm>
using namespace std;
int isAllNines(string s)
{
    for(int i=0;i<s.length();i++)
        if(s[i]!='9')return 0;
    return 1;
}
void increment(string &fp)
{
    int i=fp.length()-1;
    while(fp[i]=='9')
    {
        fp[i]='0';
        i--;
    }
    fp[i]++;
}
int alreadyPalindrome(string s)
{
    int i=0,j=s.length()-1;
    while(i<j)
    {
        if(s[i]!=s[j])return 0;
        i++;j--;
    }
    return 1;
}
int main()
{
    string s;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        cin>>s;
        int len=s.length();
        if(isAllNines(s))
        {
            string nine(s.length()-1,'0');
            nine='1'+nine+'1';
            cout<<nine<<endl;
            continue;
        }
//         else if(alreadyPalindrome(s))
//         {
//             if(len%2==0)
//                 
//         }
      //  int len=s.length();
        if(len%2==0)
        {
            string tempfp(s,0,(len/2));
            string fp(s,0,(len/2));
            string sp(s,(len/2),len);
            reverse(fp.begin(),fp.end());
            if(fp<=sp)
                increment(tempfp);
            cout<< tempfp;
            reverse(tempfp.begin(),tempfp.end());
            cout<< tempfp<<endl;
        }
        else
        {
            string tempfp(s,0,(len/2)+1);
            string fp(s,0,(len/2));
            string sp(s,(len/2)+1,len);
            reverse(fp.begin(),fp.end());
            if(fp<=sp)
                increment(tempfp);             
             cout<< tempfp;
             reverse(tempfp.begin(),tempfp.end());
             string finalsp(tempfp,1,tempfp.length());
             cout<<finalsp<<endl;
        }
    }
    return 0;
}