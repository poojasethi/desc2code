#include <iostream>
#include <cstring>
 
char *s = NULL;
size_t count = 0;
 
inline int GetDigitAtIndex(int index)
{
    return (s[index] - '0');
}
 
inline void AddNumberToString( int index, int digit )
{
    bool needCarry = false;
    s[index] += digit;
    if( s[index] > '9' )
    {
        needCarry = true;
        s[index] -= 10;
    }
    
    for( int i = index - 1; i >= 0 && needCarry; --i )
    {
        if( s[i] == '9' )
        {
            s[i] = '0';
            needCarry = true;
        }
        else if( s[i] == '\0' )
        {
            s[i] = '1';
        }
        else
        {
            s[i] += 1;
            break;
        }
    }
}
 
void NextPalindrome( int startIndex, int endIndex )
{
    AddNumberToString( endIndex, 1 );
    
    int i = s[0] ? 0 : startIndex, j = endIndex;
    for( ; i < j - 1; )
    {
        int digitAtI = GetDigitAtIndex( i );
        int digitAtJ = GetDigitAtIndex( j );
        if( digitAtI != digitAtJ )
        {
            if( digitAtI > digitAtJ )
            {
                s[j] = s[i];
                ++i;
                --j;
            }
            else
            {
                AddNumberToString( j, (10 - (digitAtJ - digitAtI)) );
            }
        }
        else
        {
            ++i;
            --j;
        }
    }
    
    int digitAtI = GetDigitAtIndex( i );
    int digitAtJ = GetDigitAtIndex( j );
    if( digitAtI > digitAtJ )
    {
        s[j] = s[i];
    }
    else if( digitAtJ > digitAtI )
    {
        s[i] = s[j] = s[i] + 1;
    }
}
 
int main(int argc, const char * argv[])
{
    int n = 0;
    scanf( "%d\n", &n );
    s = new char[1000002];
    for( int i = 0; i < n; ++i )
    {
        s[0] = '\0';
        fgets( s + 1, 1000001, stdin );
        count = strlen( s + 1 );
        s[count--] = '\0';
        
        NextPalindrome( 1, static_cast<int>( count ) );
        s[0] ? printf("%s\n", s) : printf("%s\n", s + 1);
    }
    
    delete[] s;
    return 0;
} 