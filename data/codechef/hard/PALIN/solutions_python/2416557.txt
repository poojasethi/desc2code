def palindrome_center(x, N):
    g=(N-1)/2
    d=(N)/2
    while True:
        if x[g]!=x[d]:
            return g,d            
        g-=1
        d+=1
        if g<0:return g,d
        
        
D=dict([(str(i),str(i+1)) for i in range(9)])
D['9']='0'

def plus1(x, N):
    for i in range(N-1,-1,-1):
        if x[i]!='9':
            break
    else:
        return '1%s' %('0'*N)
    return "%s%s%s" %(x[:i], D[x[i]],'0'*(N-i-1))

def next_palindrome(x,N):
    g, d=palindrome_center(x,N)
    if g>=0 and x[g]>x[d]:
        return '%s%s' %(x[:d],x[g::-1])
    if set(x)==set(['9']):
        return '1%s1' %('0'*(N-1))
    M=(N-1)/2
    s=plus1(x[:M+1],M+1)
    if N%2==0:
        return '%s%s' %(s,s[::-1])
    else:
        return '%s%s' %(s,s[::-1][1:])

for _ in range(int(raw_input())):
    x=raw_input()
    print next_palindrome(x, len(x)) 


