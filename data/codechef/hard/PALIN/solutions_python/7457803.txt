def nextPalindrome(number):
	length = len(number)
	left = number[:length/2]
	if length % 2 == 1: middle = number[length/2]
	else : middle = ""
	right = left[::-1]
	palindrome = left + middle + right
	
	if palindrome > number:
		return palindrome
	
	if middle and middle != '9':
		middle = str(int(middle) + 1)
		return left + middle + right
	
	if middle == '9':
		middle = '0'
	
	if left == '9' * (length/2):
		return '1' + '0' * (length - 1) + '1'
	
	i = length/2 - 1
	lefter = list(left)
	while lefter[i] == '9':
		lefter[i] = '0'
		i -= 1
	lefter[i] = str(int(lefter[i]) + 1)
	left = ""
	for digit in lefter:
		left += digit
	right = left[::-1]
	return left + middle + right

def driver():
	for t in xrange(int(raw_input().strip())):
		#blank = raw_input()
		num = raw_input().strip()
		print nextPalindrome(num)
		
driver()	
	
	