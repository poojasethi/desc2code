#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;

int n,x[10],y[10],vx[10],vy[10],X=0;
double s;
double getDis(double xa, double ya, double xb, double yb)
{
    return sqrt((xa-xb)*(xa-xb) + (ya-yb)*(ya-yb));
}

double gettime(double xx,double yy,double fx,double fy,double vxx,double vyy)
{
    double dx=xx-fx;
    double dy=yy-fy;
    double a,b,c,D,tym;
    a=((s*s)-(vxx*vxx)-(vyy*vyy));
    b=2*(vxx*dx + vyy*dy);
    c=-(dx*dx + dy*dy);
    D=(b*b)-4*a*c;
    D=sqrt(D);
    tym=(-b+D)/(2*a);
    if(tym>0.0)
        return tym;
    else tym=(-b-D)/(2*a);
    return tym;
}

void func()
{ double val=10000000000000000000LL,tym,intx,inty,finx,finy,rr;
int type[10],i;
    for(i=0;i<n;i++)
        type[i]=i+1;
    do
    {
    tym=0;
    intx=x[0];
    inty=y[0];
    for(i=0;i<n;i++)
    {
      finx=(x[type[i]]+tym*vx[type[i]]);
      finy=(y[type[i]]+tym*vy[type[i]]);
      rr=(double)1 + gettime(intx,inty,finx,finy,vx[type[i]],vy[type[i]]);
      tym+=rr;
      intx=(x[type[i]]+tym*vx[type[i]]);
      inty=(y[type[i]]+tym*vy[type[i]]);
    }
    tym+=getDis(intx, inty, x[0], y[0])/s;
    val=min(val,tym);
    }while(next_permutation(type,type+n));

    val=val*3600;
   long long int scnd,hrs,mins;
   scnd=ceil(val);
   hrs=scnd/3600;
   scnd=scnd-hrs*3600;
   mins=scnd/60;
   scnd=scnd-mins*60;
    X++;
   printf("%d %lld %lld %lld\n",X,hrs,mins,scnd);
}

int main()
{int i,S;
  while(scanf("%d",&n) && n!=0)
  {
    for(i=1;i<=n;i++)
    scanf("%d %d %d %d",&x[i],&y[i],&vx[i],&vy[i]);

      scanf("%d %d %d",&x[0],&y[0],&S);
    s=S;
   func();
    }
return 0;
}
