#include <string>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cstring>
#include <queue>
#include <deque>
#include <cassert>
#include <cctype>
#define MP make_pair
using namespace std;
typedef pair<int, int> PII;
typedef unsigned long long ULL;
typedef long long LL;

#define MOD
#define INF
#define MAXN

int N, x[9], y[9], vx[9], vy[9];
double avx[9], avy[9], S;

double getDis(double xa, double ya, double xb, double yb)
{
    return sqrt((xa-xb)*(xa-xb) + (ya-yb)*(ya-yb));
}

double getTime(double xa, double ya, double xb, double yb, double vxx, double vyy)
{
    double dx = xa-xb, dy = ya-yb;
    double tym;

    double a = S*S-vxx*vxx - vyy*vyy;
    double b = 2*(vxx*dx + vyy*dy);
    double c = -(dx*dx + dy*dy);

    double D = b*b - 4*a*c;
    D = sqrt(D);
    double ta = -b+D, tb = -b-D;
    if(ta > 0.0)tym = ta/(2*a);
    else tym = tb/(2*a);
    return tym;
}

void solveit()
{
    vector<int> v(N);
    for(int i=0; i<N; ++i)v[i]=i+1;
    double rs = 1000000000000000000LL;

    do
    {
        double xx=x[0], yy=y[0];
        double rr = 0;

        for(int i=0; i<v.size(); ++i)
        {
            double txa = x[v[i]] + vx[v[i]]*rr, tya = y[v[i]] + vy[v[i]]*rr;

            double tym = (double)1 + getTime(xx, yy, txa, tya, vx[v[i]], vy[v[i]]);
            rr += tym;
            xx = x[v[i]] + vx[v[i]]*rr, yy = y[v[i]] + vy[v[i]]*rr;

        }
        rr += getDis(xx, yy, x[0], y[0])/S;
        rs = min(rs, rr);

    }while(next_permutation(v.begin(), v.end()));
    rs *= 3600;

    LL scnd = ceil(rs);
    LL hr = scnd/3600;
    scnd = scnd - hr*3600;
    LL minute = scnd/60;
    scnd = scnd - minute*60;
    printf("%lld %lld %lld\n", hr, minute, scnd);
}

bool readInput()
{
    scanf("%d", &N);
    if(!N)return false;
    for(int i=1; i<=N; ++i)
    {
        scanf("%d%d%d%d", &x[i], &y[i], &vx[i], &vy[i]);

    }
    int ss;
    scanf("%d%d%d", &x[0], &y[0], &ss);
    S = ss;
    return true;
}

int main()
{
    //freopen("input.txt", "r", stdin);
    //freopen("", "w", stdout);
    int caseno = 1;
    while(true)
    {
        if(!readInput())break;
        printf("%d ", caseno);
        solveit();
        caseno++;
    }
    return 0;
}


