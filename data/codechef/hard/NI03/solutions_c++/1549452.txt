#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <string>
#include <queue>
#include <cassert>
#define rep(i,a,n) for(int i=a;i<n;i++)
#define in(n) scanf("%d",&n)
#define inl(n) scanf("%lld",&n)
#define out(n) printf("%d ",n)
#define outln(n) printf("%d\n",n)
#define outl(n) printf("%lld ",n)
#define outlln(n) printf("%lld\n",n)
#define LL long long 
#define pb push_back
#define f first
#define s second
 
using namespace std;
 
int a[10];
long long int n;
double x,y,s;
double g[10][4];
 
 
void ne(double tmp[], double& xx, double& yy, double tt) {
    xx = tmp[0] + tmp[2]*tt;
    yy = tmp[1] + tmp[3]*tt;
}
 
double re(double tmp[], double xx, double yy, double tt) {
    double py = tmp[1], px = tmp[0], vx = tmp[2], vy = tmp[3];
    px = px + vx * tt, py = py + vy * tt;
    double aa = s*s - vy*vy - vx*vx;
    double bb = -2*((py - yy)*vy + (px-xx)*vx);
    double cc = -1*(py-yy)*(py-yy) + -1LL*(px-xx)*(px-xx);
    double aax;
    double sol1 = -bb + (aax = sqrt(bb*bb - 4 * aa * cc));
    double sol2 = -bb - aax;
    if(sol2 > 0.0)
        return sol2/(2*aa);
    return sol1/(2*aa);
}
 
int main()
{
    int nt, kase = 1;
    while(1) {
        double ix, iy;
        rep(i,0,10)a[i] = i;
        double mint = 1000000000000000000LL;
        if(inl(n)==EOF)break;
        if(n==0LL)break;
        rep(i,0,n) {
            rep(tt,0,4)scanf("%lf",&g[i][tt]);
        }
        scanf("%lf%lf%lf",&x,&y,&s);
        ix = x, iy = y;
        do {
            x = ix, y = iy;
            double cur = 0;
            for(int i=0;i<n;i++) {
                double xx = re(g[a[i]], x, y, cur/3600LL);
                double tt = xx*3600LL + 3600LL;
                cur += tt;
                ne(g[a[i]], x, y, cur/3600LL);
            }
            double back = (x - ix)*(x-ix) + (y-iy)*(y-iy);
            back = sqrt(back);
            back /= s;
            back = back * 3600LL;
            mint = min(mint, cur + back);
        }
        while(next_permutation(a,a+n));
        long long miint = ceil(mint);
        long long hrs = miint / 3600LL;
        miint = miint % 3600LL;
        long long mins = miint / 60LL;
        miint = miint % 60LL;
        printf("%d %lld %lld %lld\n",kase++, hrs, mins, miint);
    }
    return 0;
} 