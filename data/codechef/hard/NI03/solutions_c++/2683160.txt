#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>
using namespace std;

typedef long long ll;

int n, s, startx, starty;
int xp[10], yp[10];
double x[10], y[10];
int vx[10], vy[10];

inline double sq(double a) { return a*a; }

double go(const vector<int>& a)
{
    double curx = startx;
    double cury = starty;
    
    double time = 0;
    for (int j=0; j<a.size(); j++)
    {
        int i = a[j];
        double A = sq(s) - sq(vx[i]) - sq(vy[i]);
        double B = vx[i]*(x[i]-curx) + vy[i]*(y[i]-cury);
        double C = sq(x[i]-curx) + sq(y[i]-cury);
        double dt = (B + sqrt(B*B + C*A))/(A);
        dt += 1;
        curx = x[i]+vx[i]*dt;
        cury = y[i]+vy[i]*dt;
        time+=dt;
        for (int k=0; k<a.size(); k++)
        {
            x[k] += vx[k]*dt;
            y[k] += vy[k]*dt;
        }
    }
    time += sqrt(sq(curx - startx) + sq(cury - starty)) / s;
    //printf("%lf\n", time);
    return time;
}

int main()
{
    //freopen("in.txt", "r", stdin);
    scanf("%d", &n);
    int t = 0;
    while (n)
    {
        t++;
        vector<int> a;
        a.clear();
        for (int i=0; i<n; i++) 
        {
            scanf("%d%d%d%d", &xp[i], &yp[i], &vx[i], &vy[i]);
            a.push_back(i);
        }
        scanf("%d%d%d", &startx, &starty, &s);
        double ans = -1;
        do
        {
            for (int i=0; i<n; i++)
            {
                x[i] = xp[i];
                y[i] = yp[i];
            }
            if (ans < 0) ans = go(a);
            else ans = min(ans, go(a));

        } while (next_permutation(a.begin(), a.end()));
        ll h = (int)ans;
        ans -= h;
        ans *= 60;
        int m = (int)ans;
        ans -= m;
        ans *= 60;
        int s = ceil(ans);
        if (s==60)
        {
            s = 0;
            m++;
        }
        if (m==60)
        {
            m=0;
            h++;
        }
        printf("%d %lld %d %d\n", t, h, m, s);
        scanf("%d", &n);
    }
}