#include<cstdio>
#include<cmath>
#include<algorithm>
using namespace std;
#define sq(x) ((x)*(x))
int s;
double calc_time(double x0,double y0,double x1,double y1,int vx,int vy) {
       double a,b,c,x,y,t;
       x = x1-x0;
       y = y1-y0;
       b = x*vx+y*vy;
       c = sq(x)+sq(y);
       a = sq(s)-sq(vx)-sq(vy);
       t = (b+sqrt(sq(b)+a*c))/a;
       t = t+1;
       return t;
}

int main() {
    int n,vx[9],vy[9],ox[9],oy[9],p[9],i,c=0;
    long long ans,h;
    double x[9],y[9],t,tmp,mn;
    while(1) {
             scanf("%d",&n);
             if(!n) break;
             for(i=1;i<=n;i++)
                              scanf("%d%d%d%d",&ox[i],&oy[i],&vx[i],&vy[i]);
             scanf("%d%d%d",&ox[0],&oy[0],&s);
             vx[0]=vy[0]=0;
             for(i=0;i<=n;i++) p[i]=i;
             mn = 1e20;
             do {
                 for(i=0;i<=n;i++) {
                                   x[i] = (double)ox[i];
                                   y[i] = (double)oy[i];
                 }
                 t=0;
                 for(i=0;i<n;i++) {
                                  x[p[i+1]] += t*vx[p[i+1]];
                                  y[p[i+1]] += t*vy[p[i+1]];
                                  tmp = calc_time(x[p[i]],y[p[i]],x[p[i+1]],y[p[i+1]],vx[p[i+1]],vy[p[i+1]]);
                                  x[p[i+1]] += tmp*vx[p[i+1]];
                                  y[p[i+1]] += tmp*vy[p[i+1]];
                                  t += tmp;
                 }
                 t += sqrt(sq(x[p[n]]-x[0])+sq(y[p[n]]-y[0]))/s;
                 if(t<mn) mn=t;
             }while(next_permutation(p+1,p+n+1));
             ans = (long long)ceil(mn*3600);
             h = ans/3600;
             ans = ans%3600;
             printf("%d %lld %lld %lld\n",++c,h,ans/60,ans%60);
    }
    return 0;
}
