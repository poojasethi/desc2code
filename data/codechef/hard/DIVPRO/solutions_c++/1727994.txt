//program DIVPRO

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<vector>

using namespace std;

int Get()
{
  char c;
  while(c=getchar(),c<'0'||c>'9');
  int X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar();
    }
  return X;
}

long long GetBig()
{
  char c;
  while(c=getchar(),c<'0'||c>'9');
  long long X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar();
    }
  return X;
}

const unsigned int Unvisited=19961021;

vector<unsigned int> F[37];

void Init()
{
  for(int i=1;i<=36;i++)
    {
      int Max=(i+1)/2;
      int Total=(Max*6+1)*(Max*4+1)*(Max*2+1)*(Max*2+1);
      F[i].resize(Total);
      for(int j=0;j<Total;j++)
        F[i][j]=Unvisited;
    }
}

int GetNumber(int p2,int p3,int p5,int p7,int Len)
{
  int Max=(Len+1)/2,A=p2+Max*3,B=p3+Max*2,C=p5+Max,D=p7+Max;
  return ((A*(Max*4+1)+B)*(Max*2+1)+C)*(Max*2+1)+D;
}

unsigned int Solve_Zero(int Len)
{
  unsigned int Good=9,Bad=9;
  for(int i=0;i<(Len-1)/2;i++)
    {
      Good*=10;
      Bad*=9;
    }
  for(int i=0;i<Len/2;i++)
    {
      Good*=9;
      Bad*=9;
    }
  return Good-Bad;
}

unsigned int DP(int p2,int p3,int p5,int p7,int Len)
{
  int Max=(Len+1)/2;
  if(abs(p2)>Max*3||abs(p3)>Max*2||abs(p5)>Max||abs(p7)>Max)
    return 0;
  if(abs(p2)/3+abs(p3)/2+abs(p5)+abs(p7)>Len)
    return 0;
  if(!Len)
    return 1;
  int T=GetNumber(p2,p3,p5,p7,Len);
  if(F[Len][T]!=Unvisited)
    return F[Len][T];
  unsigned int Ans=0;
  Ans+=DP(-p2,-p3,-p5,-p7,Len-1);
  Ans+=DP(1-p2,-p3,-p5,-p7,Len-1);
  Ans+=DP(-p2,1-p3,-p5,-p7,Len-1);
  Ans+=DP(2-p2,-p3,-p5,-p7,Len-1);
  Ans+=DP(-p2,-p3,1-p5,-p7,Len-1);
  Ans+=DP(1-p2,1-p3,-p5,-p7,Len-1);
  Ans+=DP(-p2,-p3,-p5,1-p7,Len-1);
  Ans+=DP(3-p2,-p3,-p5,-p7,Len-1);
  Ans+=DP(-p2,2-p3,-p5,-p7,Len-1);
  return F[Len][T]=Ans;
}

int main()
{
  Init();
  int Test=Get();
  while(Test--)
    {
      int Len=Get();
      long long V=GetBig();
      if(!V)
        printf("%u\n",Solve_Zero(Len));
      else
        {
          int p2=0,p3=0,p5=0,p7=0;
          while(!(V%2)){V/=2;p2++;}
          while(!(V%3)){V/=3;p3++;}
          while(!(V%5)){V/=5;p5++;}
          while(!(V%7)){V/=7;p7++;}
          if(V>1)
            printf("0\n");
          else
            printf("%u\n",DP(p2,p3,p5,p7,Len));
        }
    }
  return 0;
}
