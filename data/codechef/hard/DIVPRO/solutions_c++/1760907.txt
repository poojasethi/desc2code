#include <stdio.h>
#include <string.h>
#include <set>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;
typedef long long LL;
typedef unsigned int uint;
vector < pair<LL,uint> > g[40];
vector < pair<LL,uint> > :: iterator res;
uint dp[2][110][75][40][40];
LL exp2[100],exp3[100],exp5[100],exp7[100];
uint exp9[100],exp10[100];
int in2[10],in3[10],in5[10],in7[10];
int main()
{
    for (int i=1;i<=9;i++)
    {
        int num=i;
        while (num%2==0){num/=2; in2[i]++;}
        while (num%3==0){num/=3; in3[i]++;}
        while (num%5==0){num/=5; in5[i]++;}
        while (num%7==0){num/=7; in7[i]++;}
    }
    exp2[0]=exp3[0]=exp5[0]=exp7[0]=exp9[0]=exp10[0]=1;
    for (int i=1;i<=54;i++) exp2[i]=exp2[i-1]*2;
    for (int i=1;i<=36;i++) exp3[i]=exp3[i-1]*3;
    for (int i=1;i<=18;i++) exp5[i]=exp5[i-1]*5;
    for (int i=1;i<=18;i++) exp7[i]=exp7[i-1]*7;
    for (int i=1;i<=36;i++) exp9[i]=exp9[i-1]*9;
    for (int i=1;i<=36;i++) exp10[i]=exp10[i-1]*10;
    dp[0][54][36][18][18]=1;
    int now=0;
    for (int i=0;i<=36;i++)
    {
        now=1-now;
        memset(dp[now],0,sizeof(dp[now]));
        int L;
        L=(i+1)/2;
        for (int j=-3*L;j<=3*L;j++)
            for (int k=-2*L;k<=2*L;k++)
                for (int l=-L;l<=L;l++)
                    for (int m=-L;m<=L;m++)
                    {
                        if (dp[1-now][j+54][k+36][l+18][m+18]==0) continue;
                        uint ans=dp[1-now][j+54][k+36][l+18][m+18];
                        if (j>=0&&k>=0&&l>=0&&m>=0)
                        {
                            LL val=exp2[j]*exp3[k]*exp5[l]*exp7[m];
                            g[i].push_back(make_pair(val,ans));
                        }
                        if (i==36) continue;
                        for (int num=1;num<=9;num++)
                            dp[now][in2[num]-j+54][in3[num]-k+36][in5[num]-l+18][in7[num]-m+18]+=ans;
                    }
    }
    for (int i=1;i<=36;i++)
        sort(g[i].begin(),g[i].end());
    int T;
    scanf("%d",&T);
    while (T--)
    {
        int u;
        LL v;
        scanf("%d%lld",&u,&v);
        if (v==0)
        {
            printf("%u\n",(exp10[(u-1)/2]-exp9[(u-1)/2])*exp9[u/2+1]);
        }
        else
        {
            res=lower_bound(g[u].begin(),g[u].end(),make_pair(v,0U));
            if (res==g[u].end()||res->first!=v) puts("0");
            else printf("%u\n",res->second);
        }
    }
    return 0;
}
