#include<cstdio>
using namespace std;
#define ui unsigned int




//FastIO begin
#define BUFFERSIZE 20000000
char *ipos, *opos, InpFile[BUFFERSIZE], OutFile[BUFFERSIZE], DIP[20];
inline int ni(int flag=0) {
 
while(*ipos <= 32) ++ipos;
if ( flag ) return (*ipos++ - '0'); /* For getting Boolean Characters */
int x=0, neg = 0;char c;
while( true ) {
c=*ipos++; if(c == '-') neg = 1;
else {
if (c<=32) return neg?-x:x;
x=(x<<1)+(x<<3)+c-'0';
}
}
}

inline long long nll(int flag=0) {
 
while(*ipos <= 32) ++ipos;
if ( flag ) return (*ipos++ - '0'); /* For getting Boolean Characters */
long long x=0, neg = 0;char c;
while( true ) {
c=*ipos++; if(c == '-') neg = 1;
else {
if (c<=32) return neg?-x:x;
x=(x<<1)+(x<<3)+c-'0';
}
}
}




inline void pi(ui x,int flag = 1) {
ui y,dig=0;
while (x||!dig) { y=x/10;DIP[dig++]=x-((y << 3) + (y << 1))+'0';x=y;}
while (dig--) *opos++=DIP[dig];
*opos++= flag ? '\n' : ' ';
}
inline void InitFASTIO() {
ipos = InpFile; opos = OutFile;
fread(InpFile,20000000,1,stdin);
}
inline void FlushFASTIO() {
fwrite(OutFile,opos-OutFile,1,stdout);
}
//FastIO end




ui m[37][85][60][30][30]={0};
// Two :Max=54 
// Three: Max= 36 
// Five: Max=18
ui C[4]={30,20,10,10};
ui lst[2][10000000];
ui lstC[2];
//map<pii,ui> m[37];
//map<pii,ui> :: iterator it;



int main()
{
int i,j,k,n,t,f,n2,n3,n5,n7;
ui cost,c;
long long v,cost2;
ui a0[37]={0};//,0, 0, 81, 729, 13851, 124659, 1778031, 16002279, 203069511, 1827625599, 288203911, 2593835199, 3425210455, 762123023, 827932103, 3156421631, 998110839, 393062959, 1977248935, 615371231, 2548701911, 1463480719, 1846182635, 3730741827, 1378280684, 3814591564, 400342508, 3603082572, 2491173390, 945724030, 1862995089, 3882053913, 1839447925, 3670129437, 2015018228, 955294868};
int chg[10][4]={0,0,0,0,
				0,0,0,0,
				1,0,0,0,
				0,1,0,0,
				2,0,0,0,
				0,0,1,0,
				1,1,0,0,
				0,0,0,1,
				3,0,0,0,
				0,2,0,0};

lst[0][0]=C[0]*1000000+C[1]*10000+C[2]*100+C[3];
lstC[0]=1;
f=0;
m[0][C[0]][C[1]][C[2]][C[3]]=1;
a0[0]=0;
c=1;
for(i=0;i<36;i++)
    {
//    printf("DONE %d =>%d,%u \n",i,lstC[f],a0[i]);

    if(i%2)// Denominator
        	a0[i+1]=(a0[i]*9);
    else	{
            a0[i+1]=a0[i]*10+ (i?c:0);
            }
    c*=9;	
         
    lstC[!f]=0;
    for(k=0;k<lstC[f];k++)
    	{
    	n=lst[f][k];
		n7=n%100;	n/=100;
		n5=n%100;	n/=100;
		n3=n%100;	n/=100;
		n2=n;
		cost=m[i][n2][n3][n5][n7];

     /*   if(i%2==0 && i>0)	// Numerator
        	{
        	a0[i+1]=(a0[i+1]+cost);
        	}
       */ 	
        for(j=1;j<10;j++)
            {
            int nc2=chg[j][0]*(i%2?-1:1);
            int nc3=chg[j][1]*(i%2?-1:1);
            int nc5=chg[j][2]*(i%2?-1:1);
            int nc7=chg[j][3]*(i%2?-1:1);
            
            if(!(n2+nc2<0 || n3+nc3<0 || n5+nc5<0 || n7+nc7<0))
				{
				if(m[i+1][n2+nc2][n3+nc3][n5+nc5][n7+nc7]==0 )				    	
					{
					lst[!f][lstC[!f]]=(n2+nc2)*1000000 + (n3+nc3)*10000 + (n5+nc5)*100 + (n7+nc7);
					lstC[!f]++;
					}
				m[i+1][n2+nc2][n3+nc3][n5+nc5][n7+nc7]+=cost;
            	}
            }       
    	}

//	printf("%u, ",a0[i+1]);

	f=!f;

    }

InitFASTIO();
t=ni();    
//scanf("%d",&t);
//printf("%d\n",t);
while(t--)
    {
 	//printf("%d %lld\n",n,v);
 	n=ni();
 	v=nll();
//     scanf("%d%lld",&n,&v);       
    n2=C[0];n3=C[1];n5=C[2];n7=C[3];
    cost2=v;
    if(v)
    	{
	    while(cost2%2==0) {n2++;cost2/=2;}	
	    while(cost2%3==0) {n3++;cost2/=3;}
	    while(cost2%5==0) {n5++;cost2/=5;}
	    while(cost2%7==0) {n7++;cost2/=7;}
	    }
//	printf("n2 %d n3 %d n5 %d n7 %d\n",n2,n3,n5,n7);
	
    pi((v?( cost2>1||n2>84 ||n3>59||n5>29||n7>29 ?0:m[n][n2][n3][n5][n7]):a0[n]));	
   
//    printf("%u\n",(v?( cost2>1||n2>84 ||n3>59||n5>29||n7>29 ?0:m[n][n2][n3][n5][n7]):a0[n]));	
  //  printf("%u\n",(v?m[n][n2][n3][n5][n7]:a0[n]));	    
    }   
FlushFASTIO();     
return 0;    
}	

