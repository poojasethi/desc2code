#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <list>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <utility>
#include <climits>
#include <cfloat>
#include <cassert>
using namespace std;

#define readint(n)  scanf("%d",&n)
#define readull(n)  scanf("%llu",&n)
#define readll(n)   scanf("%lld",&n)
#define readf(n)    scanf("%f",&n)
#define readlf(n)   scanf("%lf",&n)
#define init(mem)   memset(mem,0,sizeof(mem))
#define ull         unsigned long long int
#define ll          long long int
#define uint        unsigned int
#define setmax(a,b) a=max(a,b)
#define setmin(a,b) a=min(a,b)

#define maxtop 19
#define maxbot 19
#define max2 170
#define max3 111

#define sw2 54
#define sw3 36

uint**** mem;
uint** ncr;
uint *p1,*p2;

void initncr(){
    #define lim 37
    ncr=new uint*[lim];
    for(int i=0;i<lim;i++){
        ncr[i]=new uint[lim];
    }
    
    for(int i=0;i<lim;i++){
        ncr[0][i]=0;
        ncr[i][0]=1;
    }
    ncr[0][0]=1;
    for(int i=1;i<lim;i++){
        for(int j=1;j<lim;j++){
            ncr[i][j]=ncr[i-1][j]+ncr[i-1][j-1];
        }
    }
}

void pinit(){
    p1=new uint[maxtop+1];
    p2=new uint[maxtop+1];
    p1[0]=p2[0]=1;
    for(int i=1;i<=maxtop;i++){
        p1[i]=p1[i-1]*9;
    }
    for(int i=1;i<=maxtop;i++){
        p2[i]=p2[i-1]*10;
    }
}

bool process(int& i2,int& i3,int& i5,int& i7,ll val){
    i2=i3=i5=i7=0;
    while(val%2==0){val/=2;i2++;}
    while(val%3==0){val/=3;i3++;}
    while(val%5==0){val/=5;i5++;}
    while(val%7==0){val/=7;i7++;}
    return val==1;
}

int main(){
    initncr();
    pinit();
    mem=new uint***[maxtop];
    for(int i=0;i<maxtop;i++){
        mem[i]=new uint**[maxbot];
        for(int j=0;j<maxbot;j++){
            mem[i][j]=new uint*[max2];
            for(int i2=0;i2<max2;i2++){
                mem[i][j][i2]=new uint[max3];
            }
        }
    }

    for(int i2=-sw2;i2<max2-sw2;i2++){
        for(int i3=-sw3;i3<max3-sw3;i3++){
            mem[0][0][sw2+i2][sw3+i3]=0;
        }
    }
    for(int i=0;i<maxbot;i++){
        mem[0][i][sw2][sw3]=1;
    }

    mem[0][1][sw2+0][sw3+0]=1;

    mem[1][0][sw2+0][sw3+0]=1;
    mem[1][0][sw2+1][sw3+0]=1;
    mem[1][0][sw2+0][sw3+1]=1;
    mem[1][0][sw2+2][sw3+0]=1;
    mem[1][0][sw2+1][sw3+1]=1;
    mem[1][0][sw2+3][sw3+0]=1;
    mem[1][0][sw2+0][sw3+2]=1;

    for(int tl=1;tl<maxtop;tl++){
        for(int bl=0;bl<maxbot;bl++){
            if(tl==1 and bl==0) continue;
            for(int i2=-sw2;i2<max2-sw2;i2++){
                for(int i3=-sw3;i3<max3-sw3;i3++){
                    if(bl>0){
                        uint res=0;
                        res=mem[tl][bl-1][sw2+i2][sw3+i3];  // 1
                        if(i2<=max2-sw2-2)res+=mem[tl][bl-1][sw2+i2+1][sw3+i3];   // 2
                        if(i3<=max3-sw3-2)res+=mem[tl][bl-1][sw2+i2][sw3+i3+1];   // 3
                        if(i2<=max2-sw2-3)res+=mem[tl][bl-1][sw2+i2+2][sw3+i3];   // 4
                        if(i2<=max2-sw2-2 and i3<=max3-sw3-2)res+=mem[tl][bl-1][sw2+i2+1][sw3+i3+1];   // 6
                        if(i2<=max2-sw2-4)res+=mem[tl][bl-1][sw2+i2+3][sw3+i3];   // 8
                        if(i3<=max3-sw3-3)res+=mem[tl][bl-1][sw2+i2][sw3+i3+2];   // 9
                        mem[tl][bl][sw2+i2][sw3+i3]=res;
                    }
                    else{
                        uint res=0;
                        res=mem[tl-1][bl][sw2+i2][sw3+i3];  // 1
                        if(sw2+i2>0)res+=mem[tl-1][bl][sw2+i2-1][sw3+i3];   // 2
                        if(sw3+i3>0)res+=mem[tl-1][bl][sw2+i2][sw3+i3-1];   // 3
                        if(sw2+i2>1)res+=mem[tl-1][bl][sw2+i2-2][sw3+i3];   // 4
                        if(sw2+i2>0 and sw3+i3>0)res+=mem[tl-1][bl][sw2+i2-1][sw3+i3-1];   // 6
                        if(sw2+i2>2)res+=mem[tl-1][bl][sw2+i2-3][sw3+i3];   // 8
                        if(sw3+i3>1)res+=mem[tl-1][bl][sw2+i2][sw3+i3-2];   // 9
                        mem[tl][bl][sw2+i2][sw3+i3]=res;
                    }
                }
            }
        }
    }

    int t,l,tl,bl;
    ll val;
    readint(t);
    while(t--){
        scanf("%d%lld",&l,&val);
        tl=(l+1)/2;
        bl=l/2;
        if(val==0){
            printf("%u\n",p1[bl+1]*(p2[tl-1]-p1[tl-1]));
            continue;
        }

        int i2,i3,i5,i7;
        if(!process(i2,i3,i5,i7,val)){
            printf("0\n");
        }
        else{
            uint res=0;
            for(int i=i5;i<=tl;i++){
                for(int j=i7;j<=tl;j++){
                    if(i+j>tl or i+j-i5-i7>bl) break;
                    uint res1=ncr[tl][i]*ncr[tl-i][j]*ncr[bl][i-i5]*ncr[bl-i+i5][j-i7];
                    res1*=mem[tl-i-j][bl-i-j+i5+i7][sw2+i2][sw3+i3];
                    res+=res1;
                }
            }
            printf("%u\n",res);
        }
    }
    return 0;
}