/* bit_cracker007 :) */

#include<cstdio>
#include<vector>
#include<map>
#include<iterator>
using namespace std;
#define get getchar_unlocked

inline long long scan()
{
  long long int n=0,s=1;
  char p=get();
  if(p=='-') s=-1;
  while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
  if(p=='-') s=-1,p=get();
  while(p>='0'&&p<='9')
  {
  n = (n<< 3) + (n<< 1) + (p - '0');
  p=get();
  }
 return n*s;
}

int i,ii,j,k;
long long t,l,v;
map <long long, unsigned int> ans[40];
     
void solve()
{
   map <long long,unsigned int>::iterator it;    
   vector < pair<long long, unsigned int> > a[20];
   for (i=1;i<10;i++) ans[1][i]=1;
   for (i=1;i<10;i++) a[1].push_back(make_pair(i,1));
   for (i=0;i<a[1].size();i++)
   {
     for (k=1;k<10;k++)
     {
       if (a[1][i].first%k==0) ans[2][a[1][i].first/k]+=a[1][i].second;
     }
   }
   
   for (i=2;i<=18;i++)
   {
     map <long long,unsigned int> tmp;
     for (j=0;j<a[i-1].size();j++)
     {
       for (k=0;k<10;k++) tmp[a[i-1][j].first*k]+=a[i-1][j].second;
     }
     
     for (it = tmp.begin();it!=tmp.end();it++)  a[i].push_back(*it);
     vector <pair<long long, unsigned int> > b[20];
     for (j=0;j<a[i].size();j++) b[0].push_back(a[i][j]);
   
     for (ii=1;ii<=i;ii++)
     {
      map <long long,unsigned int> tmp;
      for (j=0;j<b[ii-1].size();j++)
      {
       for (k=1;k<10;k++)
       {
         if (b[ii-1][j].first%k==0) tmp[b[ii-1][j].first/k]+=b[ii-1][j].second;
       }
      }
    
      for (it = tmp.begin();it!=tmp.end();it++)  b[ii].push_back(*it);
   
      if (ii==i-1 || ii==i) ans[i+ii]=tmp;
     }
   }
}
     
int main()
{
   solve();
   
   t = scan();
   for (int i=0;i<t;i++)
   {
     l = scan(); v = scan();
     printf("%lld\n",(long long)ans[l][v]);
   }
  return 0;
}