#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)REP(i,0,(int)(v)-1)
#define FORD(i,v)REPD(i,(int)(v)-1,0)
#define pb push_back
#define sz size
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cout<<(v1)<<" - "<<(v2)<<endl;
#define CZ(x) scanf("%d",&(x))
using namespace std;

template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t){s<<"{";FOR(i,t.size())s<<t[i]<<(i==t.size()-1?"":",");return s<<"}"<<endl; }
using namespace std;
///////////////////////////////////////
vector<vector<int> > v1;
vector<vector<int> > v2;
int n1,n2;
vector<int> sk2,sk1;
vector<bool> odw1;
vector<bool> odw2;


int akt1[300],akt2[300];

int st[300],kon[300];
int st2[300],kon2[300];
int lubi[300][300];

void czysc(int newn1, int newn2)
{n1=newn1;n2=newn2;
v1.clear();v1.resize(n1);
v2.clear();v2.resize(n2);
sk2.clear();sk2.resize(n2,-1);
sk1.clear();sk1.resize(n1,-1);
odw1.clear();odw1.resize(n1);
odw2.clear();odw2.resize(n2);}

inline void dod_kr(int a,int b)
{v1[a].pb(b);v2[b].pb(a);}


bool dfs1(int u)
{
	if (u==-1) return 1;
	if (odw1[u]) return 0;
	odw1[u]=1;
	FOR(i,v1[u].sz())
	{
        int u1=v1[u][i];
        if (!akt2[u1]) continue;
    	if ((sk2[u1]==-1 || akt1[sk2[u1]]) && dfs1(sk2[u1]))
    	{
    		sk2[u1]=u;
    		sk1[u]=u1;
    		return 1;
    	}
    }
	return 0;
}

bool dfs2(int u)
{
	if (u==-1) return 1;
	if (odw2[u]) return 0;
	odw2[u]=1;
	FOR(i,v2[u].sz())
	{
        int u1=v2[u][i];
        if (!akt1[u1]) continue;
    	if ((sk1[u1]==-1 || akt2[sk1[u1]]) && dfs2(sk1[u1]))
    	{
    		sk1[u1]=u;
    		sk2[u]=u1;
    		return 1;
    	}
    }
	return 0;
}

void rub1()
{
    fill(odw1.begin(),odw1.end(),0);
    FOR(i,n1) if (akt1[i] && sk1[i]==-1) dfs1(i);
}

void rub2()
{
    fill(odw2.begin(),odw2.end(),0);
    FOR(i,n2) if (akt2[i] && sk2[i]==-1) dfs2(i);
}

int main()
{
	ios_base::sync_with_stdio(0);
    int t;cin>>t;
    while(t--)
    {
        int B,G,L;
        cin>>B>>G>>L;
        FOR(i,B) FOR(j,G) lubi[i][j]=0;
        czysc(B,G);
        vector<int> v;
        FOR(i,B)
        {
            int S,T,N;
            cin>>S>>T>>N;
            st[i]=S;
            kon[i]=T;
            v.pb(S);v.pb(T);
            int a;
            FOR(j,N)
            {
                cin>>a;
                lubi[i][a]++;
            }
        }
        FOR(i,G)
        {
            int S,T,N;
            cin>>S>>T>>N;
            st2[i]=S;
            kon2[i]=T;
            v.pb(S);v.pb(T);
            int a;
            FOR(j,N)
            {
                cin>>a;
                lubi[a][i]++;
            }
        }
        FOR(i,B) FOR(j,G) if (lubi[i][j]==2) dod_kr(i,j);
        v.pb(0);v.pb(L);
        sort(v.begin(),v.end());
        v=vector<int>(v.begin(),unique(v.begin(),v.end()));
        //DBG(v);
        vector<int> wyn(min(B,G)+1);
        FOR(i,B) akt1[i]=0;
        FOR(i,G) akt2[i]=0;
        FOR(i,v.sz()-1)
        {
            int po=v[i],ko=v[i+1];
            //DBG(sk2);
            FOR(i,B) 
            {
                if (st[i]<=po && ko<=kon[i]) 
                {
                    if (akt1[i]==0)
                    {
                        akt1[i]=1;
                        rub1();rub2();
                    }
                }
                else
                {
                    if (akt1[i]==1)
                    {
                        akt1[i]=0;
                        if (sk1[i]!=-1)
                        {
                            sk2[sk1[i]]=-1;
                            sk1[i]=-1;
                        }
                        rub1();rub2();
                    }
                }
            }
            FOR(i,G) 
            {
                if (st2[i]<=po && ko<=kon2[i]) 
                {
                    if (akt2[i]==0)
                    {
                        akt2[i]=1;
                        rub1();rub2();
                    }
                }
                else
                {
                    if (akt2[i]==1)
                    {
                        akt2[i]=0;
                        if (sk2[i]!=-1)
                        {
                            sk1[sk2[i]]=-1;
                            sk2[i]=-1;
                            rub1();rub2();
                        }
                    }
                }
            }
            //DBG(sk1);
            //DBG(sk2);
            int msk=0;
            FOR(i,G) if (sk2[i]!=-1) msk++;
            wyn[msk]+=ko-po;
        }
        FOR(i,wyn.sz())
            cout<<wyn[i]<<" ";
        cout<<endl;
    }
    return 0;
}
