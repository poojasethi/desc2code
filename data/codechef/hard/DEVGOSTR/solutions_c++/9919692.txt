#include<bits/stdc++.h>
 
#define MOD 1000000007
#define MAX 300005
#define ll long long
#define slld(t) scanf("%lld",&t)
#define sd(t) scanf("%d",&t)
#define pd(t) printf("%d\n",t)
#define plld(t) printf("%lld\n",t)
#define pcc pair<char,char>
#define pii pair<int,int>
#define pll pair<ll,ll>
#define tr(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define mp(a,b) make_pair(a,b)
#define FF first
#define SS second
#define pb(x) push_back(x)
#define vi vector<int>
 
using namespace std;
 
char s[55];
pii arr[MAX];
vi fucku[51];
int curr=0;
 
vi local;
 
bool valid(int x,const int &type,const int &l){
	local.clear();
	local.pb(type);
	
	while(x!=-1){
		local.pb(arr[x].FF);
		x=arr[x].SS;
	}
	
	for(int d=1;d<=(l-1)/2;d++){
		if(type==local[d]){
			if(type==local[2*d]){
				return 0;
			}
		}
	}
	return 1;
}
 
void pre(){
	for(int i=1;i<=1;i++) arr[i].FF=i,arr[i].SS=-1,fucku[1].pb(i); curr=4;
	
	for(int i=2;i<27;i++){
		for(int j=0;j<fucku[i-1].size();j++){
			for(int p=1;p<4;p++){
				if(valid(fucku[i-1][j],p,i)) {
					fucku[i].pb(curr);
					arr[curr].FF=p;
					arr[curr++].SS=fucku[i-1][j];
				}
			}
		}
	}
}
 
char m[4];
 
ll solve1(ll k,ll l){
	if(l>=9) return 0;
	
	ll ans=0;
	
	for(int i=0;i<fucku[l].size();i++){
		int p=fucku[l][i],cnt=l-1,d=0;
		
		while(p!=-1){
			if(arr[p].FF==3){
				d=k+1;
				break;
			}
			if(arr[p].FF==2){
				d=k+1;
				break;
			}
			if(m[arr[p].FF]!=s[cnt]){
				d++;
			}
			if(d>k) break;
			cnt--;
			p=arr[p].SS;
		}
		
		if(d<=k) ans++;
	}
	
	return ans;
}
 
ll solve2(ll k,ll l){
	if(l>=9) return 0;
	
	ll ans=0;
	
	for(int i=0;i<fucku[l].size();i++){
		int p=fucku[l][i],cnt=l-1,d=0;
		
		while(p!=-1){
			if(arr[p].FF==3){
				d=k+1;
				break;
			}
			if(m[arr[p].FF]!=s[cnt]){
				d++;
			}
			if(d>k) break;
			cnt--;
			p=arr[p].SS;
		}
		
		if(d<=k) ans++;
	}
	
	return ans;
}
 
ll solve3(ll k,ll l){
	if(l>=27) return 0;
	
	ll ans=0;
	
	for(int i=0;i<fucku[l].size();i++){
		int p=fucku[l][i],cnt=l-1,d=0;
		
		while(p!=-1){
			if(m[arr[p].FF]!=s[cnt]){
				d++;
			}
			if(d>k) break;
			cnt--;
			p=arr[p].SS;
		}
		
		if(d<=k) ans++;
	}
	
	return ans;
}
 
int main(){
	pre();
	
	int t;
	sd(t);
	while(t--){
		int a,k;
		sd(a);sd(k);
		scanf("%s",s);
		
		int l=strlen(s);
		
		if(a==1){
			ll ans=0;
			m[1]='a';
			ans=solve1(k,l);
			plld(ans);
		}
		else{
			ll ans=0;
			
			if(a==2){
				m[1]='a';m[2]='b'; ans=solve2(k,l);
				m[1]='b';m[2]='a'; ans+=solve2(k,l);
			} 
			else{
				m[1]='a';m[2]='b';m[3]='c'; ans=solve3(k,l);
				m[1]='b';m[2]='c';m[3]='a'; ans+=solve3(k,l);
				m[1]='c';m[2]='a';m[3]='b'; ans+=solve3(k,l);
			}
			
			plld(ans%MOD);
		}
	}
} 