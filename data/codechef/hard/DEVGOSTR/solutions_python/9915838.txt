import sys
scan = lambda:sys.stdin.readline().rstrip()

def hammingDist(a,b):
	return sum(a[i]!=b[i] for i in range(len(a)))

goodStr2 = [[],[],[],[],[],[],[],[],[]]
goodStr3 = [[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]

def isGood(s):
    l = len(s)
    if l<3:
        return True
    else:
       # for i in range(l-2):
       #     for j in range(1,l/2+1):
       #         if i+2*j > l-1:
       #             break
       #         if s[i] == s[i+j] and s[i+j] == s[i+ 2*j]:
       #             return False
        i = l-1
        for j in range(1,15):
            if i < 2*j:
                break
            if s[i] == s[i-j] and s[i-j] == s[i-2*j]:
                return False
    return True

def genGoodStr2(string):
    if len(string)>=9:
        return
    if isGood(string):
        goodStr2[len(string)].append(string)
        genGoodStr2(string+"a")
        genGoodStr2(string+"b")

def genGoodStr3(string):
    if len(string)>=27:
        return
    if isGood(string):
        goodStr3[len(string)].append(string)
        genGoodStr3(string+"a")
        genGoodStr3(string+"b")
        genGoodStr3(string+"c")


genGoodStr2("a")
genGoodStr2("b")
genGoodStr3("a")
genGoodStr3("b")
genGoodStr3("c")

#print len(goodStr2)
#print len(goodStr3)

for t in range(int(scan())):
    #a_k = raw_input().split(' ')
    A,K = map(int,scan().split())
    #A = int(a_k[0])
    #K = int(a_k[1])
    s = scan()
    l = len(s)
    if A==1:
        if l < 3:
            print 1
        else:
            print 0
    elif A==2:
        if l<9:
            count = 0
            lim = len(goodStr2[l])
            for i in range(lim):
                if hammingDist(goodStr2[l][i],s) <= K:
                    count+=1
            print count
        else:
            print 0
    else: # A==3
        if l<27:
            count = 0
            lim = len(goodStr3[l])
            for i in range(lim):
                if hammingDist(goodStr3[l][i],s) <= K:
                    count+=1
            print count
        else:
            print 0
