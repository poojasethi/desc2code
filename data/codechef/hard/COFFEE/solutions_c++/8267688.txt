# include <bits/stdc++.h>

# define INF 0x7f7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned long long int 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked
# define tri pair < LL,PL >
# define TRI(a,b,c) mp(a,mp(b,c))
# define ms(A,val) memset(A,val,sizeof(A))

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

using namespace std;

int debug=1;
const int N=5000+3;

/* MAIN PROGRAM STARTS HERE */

static LL A[N+N];
static LL pre[N+N];

static LL f[N][N];

int main()
	{
	//freopen("TC1.txt","r",stdin);
	//freopen("outpaut1","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	int T;
	LL i,j,x,y,z,p,q,r,n,a,b,k,d,m;
	
	cin>>T;
    
    while (T--)
          {
          cin>>n>>k>>d>>m;         
          for (i=1; i<=n; i++) cin>>A[i];
          for (i=n+1; i<=2*n; i++) A[i]=0;    
          pre[0]=0;
          for (i=1; i<=2*n; i++) pre[i]=pre[i-1]+A[i];
          
          for (i=0; i<=n; i++)
              for (j=0; j<=n; j++)
                  f[i][j]=-INF;

          for (i=1; i<=n; i++)
              {
              f[i][1]=pre[i-1]+(pre[i+d]-pre[i])*m;
              }      
          for (j=2; j<=k; j++)
              {
              LL maxV=-INF;
              for (i=1; i<=n; i++)
                  {
                  if (i-d-1>=0) maxV=max(maxV,f[i-d-1][j-1]-pre[i-1]);
                  f[i][j]=max(f[i][j],maxV+pre[i-1]+(pre[i+d]-pre[i])*m);
                  }
              
              deque <PL> Q;
              Q.pb(mp(0,f[0][j-1]-pre[d]*m));
              for (i=1; i<=n; i++)
                  {
                  if (Q.front().ff<i-d) Q.pop_front();
                  f[i][j]=max(f[i][j],Q.front().ss+(pre[i+d]-pre[i])*m+pre[i-1]*m);                  
                  LL val=f[i][j-1]-pre[i+d]*m;
                  while (!Q.empty() and val>=Q.back().ss) Q.pop_back();
                  Q.push_back(mp(i,val));
                  }

              }
          LL ans=0;
          for (i=1; i<=n; i++)
              ans=max(ans,f[i][k]+pre[n]-pre[i+d]);
          cout<<ans<<"\n";
          }
            
	return 0;
	}