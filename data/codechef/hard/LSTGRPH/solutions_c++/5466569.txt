#include <iostream>
#include <vector>
#include <cstdlib>
using namespace std;
const int nmax = 200010;
int n,m,k;
vector<pair<int,int> > adj[nmax];
int master[nmax],val[nmax],minimal[nmax];
int getmaster(int t){
	if(master[master[t]]==master[t])
		return master[t];
	master[t]=getmaster(master[t]);
	return master[t];
}
void unite(int a, int b){
	int ma=getmaster(a);
	int mb=getmaster(b);
	if(ma!=mb){
		master[ma]=mb;
	}
}
void define_all(int a){
	if(val[a]==-1)
		return;
	for(int i = 0; i < adj[a].size(); ++i){
		pair<int,int> nxt = adj[a][i];
		int nval=val[a]^nxt.second;
		if(val[nxt.first]==-1){
			val[nxt.first]=nval;
			define_all(nxt.first);
		}
	}
}
int main(){
	for(int i = 0; i < nmax; ++i){
		val[i]=-1;
		master[i]=i;
	}
	cin >> n >> m >> k;
	for(int i = 0; i < m; ++i){
		int a,b,val;
		cin >> a >> b >> val;
		adj[a].push_back(make_pair(b,val));
		adj[b].push_back(make_pair(a,val));
		unite(a,b);
	}

	for(int i = n; i >= 1; --i){
		minimal[getmaster(i)]=i;
	}
	int best = 1;
	for(int i = 1; i <= n; ++i)
		if(minimal[i]>minimal[best])
			best=i;
	val[minimal[best]]=k-1;
	define_all(minimal[best]);

	for(int i = 1; i <= n; ++i){
		if(val[i]==-1){
			val[i]=0;
			define_all(i);
		}
	}

	for(int i = 1; i <= n; ++i){
		for(int j = 0; j < adj[i].size(); ++j){
			if((val[i]^val[adj[i][j].first])!=adj[i][j].second){
				cout << "-1\n";
				exit(0);
			}
		}
	}
	cout << val[1];
	for(int i = 2; i <= n; ++i){
		cout << ' ' << val[i];
	}
	cout << '\n';
}

