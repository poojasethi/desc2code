#include<bits/stdc++.h>
using namespace std;
inline int read()
{
    int n=0;
	char c=getchar_unlocked();
	while(c<'0' || c>'9')
	c=getchar_unlocked();
	while(c<='9' && c>='0')
	{
		n=(n<<1)+(n<<3)+c-'0';
		c=getchar_unlocked();
	}
	return n;
}
inline void write(int a)
{
	char snum[35];
	int i=0;
	do
	{
		snum[i++]=a%10+48;
		a=a/10;
	}while(a!=0);
	--i;
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked(' ');
}
vector <int> adj[200005];
map <pair<int,int>,int> y;
int x[200005];
 
int main(void)
{
    int i,n,m,k,u,v,visited[200005],visit[200005],j,s,max;
    n=read(); m=read(); k=read();
    for(i=1;i<=m;i++)
    {
        u=read(); v=read(); j=read(); 
        adj[u].push_back(v); 
        adj[v].push_back(u);
        y[make_pair(u,v)]=j; 
        y[make_pair(v,u)]=j;
    }
     memset(visit,0,(n+5)*sizeof(int));
    for(j=1;j<=n;j++)
    {
        if(visit[j]==1)
    	continue;
    	max=j;
    	visit[j]=1;
    	s=j;
    	queue <int> q;
    	q.push(s);
    	while(!q.empty())
    	{
    	u=q.front();
        q.pop();
        for(i=0;i<adj[u].size();i++)
        {
            if(visit[adj[u][i]]==0)
            {
                
                visit[adj[u][i]]=1; 
                q.push(adj[u][i]); 
                
            }
           
        }	
    	}
    } 
    memset(visited,0,(n+5)*sizeof(int)); //cout<<visited[7]<<endl;
    for(j=1;j<=n;j++)
    {
    	if(visited[j]==1)
    	continue;
    	if(j==max)
    {x[j]=k-1;
    }
    else
    x[j]=0;
    s=j; //cout<<s<<endl;
    queue <int> q;
    q.push(s);
    visited[s]=1; 
    while(!q.empty())
    {
        u=q.front();
        q.pop();
        for(i=0;i<adj[u].size();i++)
        {
            v=x[u]^y[make_pair(u,adj[u][i])];
            if(visited[adj[u][i]]==0)
            {
                
                visited[adj[u][i]]=1; //cout<<u<<endl;
                q.push(adj[u][i]); 
                x[adj[u][i]]=v;
                
                //cout<<v<<endl;
            }
            else
                {
                	if(v!=x[adj[u][i]])
                	{puts("-1"); return 0;}
                }
        }
    }
    
    }
   
    for(i=1;i<=n;i++)
    write(x[i]);
    printf("\n");
    return 0;
}  