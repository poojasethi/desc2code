// Author : Muhammad Rifayat Samee
// Problem : lost graph
// Algorithm:
#pragma warning (disable : 4786)
#pragma comment(linker, "/STACK:16777216")

#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<cstring>
#include<algorithm>
#include<string>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#define MAX(a,b) (a>b)?a:b
#define MIN(a,b) (a<b)?a:b
#define INF 987654321
#define pi (2*acos(0.0))
#define eps 1e-7

#ifdef ONLINE_JUDGE
#define i64 long long
#else
#define i64 __int64
#endif

using namespace std;
struct edge{
    int u;
    int v;
    int w;

};
vector<edge>graph[200005];
int n,m,k,c;
int X[200005];
int C[200005];
int comp[200005];
int color[200005];
int vertex,flag;
void dfs(int u){
    //printf("--%d %d\n",u,X[u]);
    color[u] = 1;
    comp[u] = c;
    int i,v,w,res;
    edge t;
    res = 0;
    for(i=0;i<graph[u].size();i++){
        t = graph[u][i];
        v = t.v;
        w = t.w;
        if(color[v]==0){
            X[v] = X[u]^w;
            dfs(v);
        }
        else{
            if(X[v] != (X[u]^w)){
                //printf("u=%d -->%d v=%d -->%d %d\n",u,v,X[u],X[v],w);
                flag = 1;
                return;
            }
        }
    }

}

int main(){

	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
    int i,j,u,v,w;
    while(scanf("%d %d %d",&n,&m,&k)!=EOF){
        for(i=0;i<=n;i++){
            graph[i].clear();
            X[i] = -1;
            color[i] = 0;
        }
        for(i=0;i<m;i++){
            scanf("%d %d %d",&u,&v,&w);
            edge t;
            t.u = u;
            t.v = v;
            t.w = w;
            graph[u].push_back(t);
            t.u = v;
            t.v = u;
            t.w = w;
            graph[v].push_back(t);
        }
        flag = 0;
        c = 0;
        for(i=1;i<=n;i++){
            if(color[i] == 0){
                X[i] = 0;
                C[c] = i;
                dfs(i);
                if(flag == 1){
                    break;
                }
                c++;
            }
        }
        if(flag == 1){
            printf("-1\n");
        }
        else{
            for(i=1;i<=n;i++){
                if(comp[i] == c-1){
                    X[i] = X[i]^(k-1);
                }
                if(i==1){
                    printf("%d",X[i]);
                }
                else{
                    printf(" %d",X[i]);
                }

            }
            printf("\n");

        }


    }


	return 0;
}
