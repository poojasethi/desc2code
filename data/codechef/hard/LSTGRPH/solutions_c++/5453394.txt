#include <bits/stdc++.h>

using namespace std;

#define INF 1000000007
#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define MOD 1000000007

int vis[2001000], ans[2001000];
vector<pair<int, int> > adj[2001000];

int dfs(int x, int va){
    queue<int> q;
    q.push(x);
    vis[x] = 1;
    ans[x] = va;
    int j, ch;
    while(!q.empty()){

        x = q.front();
        for(j = 0; j < adj[x].size(); j++){
            ch = adj[x][j].F;
            if(vis[ch] == 0){
                q.push(ch);
                vis[ch] = 1;
                ans[ch] = adj[x][j].S ^ ans[x];
            }
            else{
                if(ans[ch] != (adj[x][j].S ^ ans[x]) ){
                    return 0;
                }
            }
        }
        q.pop();
    }
    return 1;
}

int solve(){
    int n, m, k, i, x, y, c;
    cin>>n>>m>>k;
    for(i = 1; i <= m; i++){
        sd(x);
        sd(y);
        sd(c);
        adj[x].PB(MP(y, c));
        adj[y].PB(MP(x, c));
    }
    int last;
    for(i = 1; i <= n; i++) vis[i] = 0;

    for(i = 1; i <= n; i++){
        if(vis[i] == 0){
            if(dfs(i, 0) == 0){
                    cout<<-1<<endl;
                    return 0;
            }
            last = i;
        }
    }
    for(i = 1; i <= n; i++) vis[i] = 0;

    for(i = 1; i <= n; i++){
        if(vis[i] == 0 && i != last){
            dfs(i, 0);
        }
        if(vis[i] == 0 && i == last){
            dfs(i, k - 1);
        }
    }

    for(i = 1; i <= n; i++){
        if(i != n) printf("%d ", ans[i]);
        else printf("%d", ans[i]);
    }
    cout<<endl;
    return 0;
}

int main(){
    //freopen("in.txt", "r", stdin);
    int t = 1;
    //cin>>t;
    while(t--){
        solve();
    }
}
