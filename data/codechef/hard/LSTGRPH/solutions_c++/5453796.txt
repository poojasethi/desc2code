#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <locale>
#include <vector>
#include <cassert>
#include <climits>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <sstream>
#include <utility>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <valarray>
#include <algorithm>
#include <functional>

#define xx first
#define yy second
#define LL long long
#define inf 100000000
#define pb push_back
#define all(v) v.begin(),v.end()
#define pi acos(-1)
#define clr(a,b) memset(a,b,sizeof a)
#define bclr(a) memset(a,false,sizeof a)
#define pii pair<int,int>
#define MOD 1000000007
#define EPS 1e-16
#define MP make_pair
#define MX 200005

using namespace std;
LL cost[MX];
vector<pair<int,LL> >G[MX];
bool chk[MX];
LL ans[MX];
int ar[MX];
queue<int>Q;

int bfs(int x,LL val){
    while(!Q.empty()) Q.pop();
    cost[x]=val;
    chk[x]=true;
    Q.push(x);
    while(!Q.empty()){
        x=Q.front();
        Q.pop();
        for(int i=0;i<G[x].size();i++){
            pair<int,LL>adj=G[x][i];
            //cout<<"here "<<x<<" "<<adj.xx<<" "<<adj.yy<<endl;
            if(chk[adj.xx]){
                //cout<<cost[x]<<" "<<cost[adj.xx]<<" "<<(cost[x]^cost[adj.xx])<<" "<<adj.yy<<endl;
                if((cost[x]^cost[adj.xx])!=adj.yy) return 0;
            }
            else{
                cost[adj.xx]=cost[x]^adj.yy;
                chk[adj.xx]=true;
                Q.push(adj.xx);
            }
        }
    }
    return 1;
}
void bfs1(int x,LL val){
    while(!Q.empty()) Q.pop();
    ans[x]=val;
    chk[x]=true;
    Q.push(x);
    while(!Q.empty()){
        x=Q.front();
        Q.pop();
        for(int i=0;i<G[x].size();i++){
            pair<int,LL>adj=G[x][i];
            if(chk[adj.xx]);
            else{
                ans[adj.xx]=ans[x]^adj.yy;
                chk[adj.xx]=true;
                Q.push(adj.xx);
            }
        }
    }
}
int main(){
    int n,m;
    LL k;
    scanf("%d%d%lld",&n,&m,&k);
    for(int i=0;i<m;i++){
        int u,v;
        LL w;
        scanf("%d%d%lld",&u,&v,&w);
        G[u].pb(MP(v,w));
        G[v].pb(MP(u,w));
    }
    int id=0;
    for(int i=1;i<=n;i++){
        if(!chk[i]){
            if(bfs(i,0)==0){
                puts("-1");
                return 0;
            }
            ar[id++]=i;
        }
    }
    memset(chk,false,sizeof chk);
    for(int i=0;i<id-1;i++) bfs1(ar[i],0);
    bfs1(ar[id-1],k-1);
    for(int i=1;i<n;i++) printf("%lld ",ans[i]);
    printf("%lld\n",ans[n]);
    return 0;
}
