#include <cstdio>
#include <iostream>
#include <queue>
#include <stack>
#define ll long long
#define vi vector<int>
#define pi pair<int,int>
#define vpi vector< pi >
#define vvi vector< vi >
#define pb push_back
#define mp make_pair

using namespace std;



int solve(vector< vector<pair<int,int> > > &e,int ans[],int n)
{
    stack<int> q;
    int v,w,i,l,cur,last;
    for(v=0;v<n;v++)
    {
        if(ans[v]!=-1)
            continue;
        ans[v]=0;
        last=v;
        q.push(v);
        while(!q.empty())
        {
            cur=q.top();
            q.pop();
            l=e[cur].size();
            for(i=0;i<l;i++)
            {
                w=e[cur][i].first;
                if(ans[w]==-1)
                {
                    ans[w]=ans[cur]^e[cur][i].second;
                    q.push(w);
                }
                else if(ans[w]!=(ans[cur]^e[cur][i].second))
                    return -1;
            }
        }
    }
    return last;
}

void update(vector< vector<pair<int,int> > > &e,int ans[],int n,int last,int k)
{
   queue<int> qu;
   qu.push(last);
   ans[last] ^= (k-1);
   
   vector<bool> vis(n, false);
   vis[last] = true;
   
   	while (!qu.empty()) {
  		int s = qu.front();
  		qu.pop();
  		
   		for (int i = 0; i < e[s].size(); i++) {
			int other = e[s][i].first;
			if (!vis[other]) {
				ans[other] ^= (k-1);
				vis[other] = true;
				qu.push(other);	
			}
					   	
	   }
   }
}
int main()
{
    int n,m,k;
    int i,a,b,c,last;
    scanf("%d%d%d", &n, &m, &k);
    vector< vector<pair<int,int> > > e(n);
   
    for(i=0;i<m;i++)
    {
        scanf("%d%d%d", &a, &b, &c);
        
		e[a-1].pb(pi(b-1,c));
        e[b-1].pb(pi(a-1,c));
    }
    int ans[n];
    for(i=0;i<n;i++)
        ans[i]=-1;

    last=solve(e,ans,n);
    if(last==-1)
    {
        puts("-1");
        return 0;
    }
    update(e,ans,n,last,k);
    for(i=0;i<n;i++)
        printf("%d ",ans[i]);
    return 0;
}