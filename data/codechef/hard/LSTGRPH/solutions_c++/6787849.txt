#include <bits/stdc++.h>
using namespace std;
#define ll long long
vector< pair< int, int > >graph[200001];
int xval[200001];
int data[300001][3];
int vis[200001];
void dfs(int from,int val){
	//cout<<from<<" ";
	xval[from] = val;
	//cout<<from<<" "<<val<<endl;
	vis[from] = 1;
	for(int i = 0;i<graph[from].size();i++){
		pair<int,int> temp = graph[from][i];
		if(vis[ temp.first ]) continue;
		//cout<<from<<" "<<temp.first<<endl;
		dfs( temp.first, val^temp.second);
	}
	return;
}
int main()
{
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	for(int i = 1;i<=m;i++){
		scanf("%d%d%d",&data[i][0],&data[i][1],&data[i][2]);
		graph[data[i][0]].push_back(make_pair(data[i][1],data[i][2]));
		graph[data[i][1]].push_back(make_pair(data[i][0],data[i][2]));
	}
	memset(vis,0,sizeof vis);
	int id = 0;
	for(int i = 1;i<=n;i++){
		if(!vis[i]){
			dfs(i,0);
			id = i;
			//cout<<endl;
		}
	}
	for(int i = 1;i<=m;i++){
		//cout<<(xval[data[i][0]]^xval[data[i][1]])<<" "<<data[i][2]<<endl;
		if((xval[data[i][0]]^xval[data[i][1]])!=data[i][2]){
			printf("-1");
			return 0;
		}
	}
	memset(vis,0,sizeof vis);
	dfs(id,k-1);
	for(int i = 1;i<=n;i++){
		printf("%d ",xval[i]);
	}
	printf("\n");
	return 0;
}