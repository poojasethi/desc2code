#include<stdio.h>
#include<cstring>
#include<stack>
#include<queue>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<stack>
#include<queue>
#include<cassert>
#define N 311111
#define M 655555
#define LL long long
#define FOE(i,a,b) for(int i=(a);i<=(b);++i)
#define CLR(a,b) memset(a,b,sizeof(a))
using namespace std;
int t,n,m,q,k,cs=0;
struct edg{
	int v,w,nxt;
}E[M];
int hd[N],eid,vis[N],wt[N];
void init(){
	eid=0;
	CLR(hd,-1);
	CLR(vis,0);
}
void adde(int u,int v,int w){
	E[eid].v=v;E[eid].w=w;E[eid].nxt=hd[u];hd[u]=eid++;
}
bool chk(int u){
	vis[u]=1;
	for(int i=hd[u];i!=-1;i=E[i].nxt){
		int v=E[i].v;
		if(!vis[v]){
			wt[v]=wt[u]^E[i].w;
			if(!chk(v))return 0;
		}else if (wt[v]!=(wt[u]^E[i].w))return 0;
	}
	return 1;
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	init();
	int u,v,w;
	while(m--)scanf("%d%d%d",&u,&v,&w),adde(u,v,w),adde(v,u,w);
	int lst=1;
	FOE(i,1,n){
		if(!vis[i]){
			wt[i]=0;
			if(!chk(i)){
				puts("-1");
				return 0;
			}
			lst=i;
		}
	}
	CLR(vis,0);
	wt[lst]=k-1;
	chk(lst);
	FOE(i,1,n-1)printf("%d ",wt[i]);printf("%d\n",wt[n]);
	return 0;
}
