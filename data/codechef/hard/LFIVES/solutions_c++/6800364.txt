#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define gc getchar_unlocked
void inline print(unsigned int *res)
{
    register unsigned int chu = * res , rev, count = 0;
    rev = chu;
    //putchar_unlocked(' ');
    if (chu == 0)
    {
        putchar_unlocked('0');
        putchar_unlocked('\n');
        return ;
    }
    while ((rev % 10) == 0)
    {
        count++;
        rev /= 10;
    }
    rev = 0;
    while (chu != 0)
    {
        rev = (rev<<3) + (rev<<1) + chu % 10;
        chu /= 10;
    }
    while (rev != 0)
    {
        putchar_unlocked(rev%10 + '0');
        rev /= 10;
    }
    while (count--)
        putchar_unlocked('0');
    putchar_unlocked('\n');
    return ;
}
unsigned int inline scan()
{
    register unsigned int chu = 0;
    char C;
    while ((C = getchar_unlocked()) < '0');
    do
    {
        chu = (chu<<3) + (chu<<1) + C - '0';
    }
    while ((C = getchar_unlocked()) >= '0');
 
    return chu;
}
int a[2011];
int dp[2011][2011],dp1[2011][2011];
int main()
{
    int l,r,i,j,n,q;
    n=scan();
    q=scan();
    for(i=0; i<n; i++)
        a[i]=scan();
    for(i=0; i<n; i++)
    {
        dp1[i][i]=0;
        for(j=i-1; j>=0; j--)
            if(a[j]<a[i])
                dp1[i][j]=dp1[i][j+1]+1;
            else
                dp1[i][j]=dp1[i][j+1];
        for(j=i+1; j<n; j++)
            if(a[j]<a[i])
                dp1[i][j]=dp1[i][j-1]+1;
            else
                dp1[i][j]=dp1[i][j-1];
 
    }
    for(i=0; i<n; i++)
    {
        for(j=i+1; j<n; j++)
        {
            dp[i][j]=((a[i]<a[j])?dp1[i][j-1]:dp1[j][i+1]);
dp[j][i]=dp[i][j];
        }
    }
    while(q--)
    {
        l=scan();
        r=scan();
        l--;
        r--;
        unsigned int ans=0;
        for(j=l+2; j<r-1; j++)
            ans=ans+(dp[l][j]*dp[r][j]);
        print(&ans);
    }
    return 0;
} 