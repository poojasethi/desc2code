#include <iostream> 
#include <stdlib.h> 
#include <ctime> 
#include <cmath> 
#include <stdio.h> 
#include <vector> 
#include <algorithm> 
#include <queue> 
#include <string.h> 
#include <map> 
#include <set> 
#include <assert.h>
#define x first 
#define y second 
#define pb push_back 
#define mp make_pair 
#define vi vector<int> 
#define pii pair<int,int> 
#define ll long long 
#define inf 1000000007 
#define mod 1000000007
#define all(x) x.begin(),x.end() 
#define N 2000001
#define pi acos(-1.)
#define DBG(x) cerr<<#x<<"="<<x<<"\n"; 
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++) 
using namespace std; 

int a[2010],f[2010],sz,dp[2010][2010],dp1[2010][2010];
void upd(int x,int v){
    while(x<=sz)f[x]+=v,x+=x&-x;
}
int query(int x){
    int ans=0;
    while(x)ans+=f[x],x-=x&-x;
    return ans;
}
int main()
{
    int T,i,j,k,m,n,ca=0;
    scanf("%d%d",&n,&m);
    vi v;
    for(i=0;i<n;i++)scanf("%d",&a[i]),v.pb(a[i]);
    sort(all(v));
    v.erase(unique(all(v)),v.end());
    for(i=0;i<n;i++)a[i]=lower_bound(all(v),a[i])-v.begin()+1;
    sz=v.size();
    for(i=0;i<n-1;i++){
        for(j=0;j<=sz;j++)f[j]=0;
        for(j=i+1;j<n;j++){
            if(i+1<j)dp[i][j]=query(a[j]-1);
            if(a[j]<a[i])upd(a[j],1);
        }
    }
    for(i=0;i<n-2;i++){
        for(j=0;j<=sz;j++)f[j]=0;
        int tot=0;
        for(j=i+2;j<n;j++){
            if(i+2<j)dp1[i][j]=tot-query(a[j]);
            if(dp[i][j])upd(a[j],dp[i][j]),tot+=dp[i][j];
        }
    }
    memset(dp,0,sizeof(dp));
    for(i=0;i<n-3;i++){
        for(j=0;j<=sz;j++)f[j]=0;
        for(j=i+3;j<n;j++){
            if(i+3<j)dp[i][j]=query(a[j]-1);
            if(dp1[i][j])upd(a[j],dp1[i][j]);
        }
    }
    while(m--){
        scanf("%d%d",&i,&j);i--,j--;
        printf("%d\n",dp[i][j]);
    }
    return 0;
}