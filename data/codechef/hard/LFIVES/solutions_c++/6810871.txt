#include <bits/stdc++.h>
using namespace std;
 
typedef long long LL;
 
#define mp make_pair
#define pb push_back
 
const int MOD = 1e9 + 7,
		  MAXN = 2e3 + 9,
		  MAXVAL = MAXN - 3;
 
int tc,N;
int ans[MAXN][MAXN];
int bit[MAXN][5];
int A[MAXN];
int B[MAXN];
int Q,l,r;
 
inline void update(int idx,int type,int val){
	for(;idx <= MAXVAL;idx += (idx & (-idx))) bit[idx][type] += val;
}
 
inline int query(int idx,int type){
	int ret = 0;
	for(;idx > 0;idx -= (idx & (-idx))) ret += bit[idx][type];
	return ret;
}
 
inline int rquery(int L,int R,int type){
	return query(R,type) - query(L - 1,type);
}
 
int main (){
	scanf("%d %d",&N,&Q);
	
	for(int i = 1;i <= N;++i){
		scanf("%d",A + i);
		B[i] = A[i];
	}
 
	sort(B + 1,B + N + 1);
	for(int i = 1;i <= N;++i){
		A[i] = lower_bound(B + 1,B + N + 1,A[i]) - (B + 1) + 1;
	}
 
	for(int i = 1;i <= N;++i){
		memset(bit,0,sizeof(bit));
		update(A[i],1,1);
 
		for(int j = i + 1;j <= N;++j){
			int more = rquery(A[j] + 1,MAXVAL,1);
			update(A[j],2,more);
 
			int less = query(A[j] - 1,2);
			update(A[j],3,less);
 
			more = rquery(A[j] + 1,MAXVAL,3);
			update(A[j],4,more);
 
			less = query(A[j] - 1,4);
			ans[i][j] = less;
		}
	}
	
	while(Q--){
		scanf("%d %d",&l,&r);
		printf("%d\n",ans[l][r]);
	}
 
	return 0;
}
 