#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
#define MOD (long long)1000000007
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define irr acos(-1.0)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
using namespace std;
#define N 1000000+5
string words[N];
unsigned ll base[N];
unsigned ll B=0xabcdef;
struct node
{
    ll up;
    ll down;
};
ll next[N][26];
node val[N];
int sz=0,n;
ll ans=0;
unsigned ll forw[N],backw[N];
ll markf[N],markb[N];
unsigned ll getH(unsigned ll a[],int l,int r){
    return a[r+1]-a[l]*base[r-l+1];
}
void comp(string s,ll mark[]){
    int k=s.size(),i,j;
    forw[0]=0;
    backw[0]=0;
    for(i=0;i<k;i++){
        forw[i+1]=forw[i]*B+s[i];
        backw[i+1]=backw[i]*B+s[k-1-i];
    }
    for(j=k-1;j>0;j--){
        if(getH(forw,0,j-1)==getH(backw,k-j,k-1)){
            mark[k-j]=1;
        }
    }
    mark[k]=1;
}
void get(string s){
    comp(s,markf);
    reverse(s.begin(),s.end());
    comp(s,markb);
    int u=0,i,j;
    for(i=0;i<s.size();i++){
        if(next[u][s[i]-'a']==0)
            break;
        u=next[u][s[i]-'a'];
        ans+=val[u].up*markf[i+1];
        if(i==s.size()-1){
            ans+=val[u].down;
            break;
        }
    }
    for(i=0;i<=s.size();i++)
        markf[i]=0;
}
void ins(string s){
    int u=0,i,j;
    for(i=0;i<s.size();i++){
        int x=s[i]-'a';
        if(next[u][x]==0){
            next[u][x]=++sz;
        }
        u=next[u][x];
        if(i==s.size()-1){
            val[u].up++;
            break;
        }
        val[u].down+=markb[i+1];
    }
    for(i=0;i<=s.size();i++)
        markb[i]=0;
}
void solve(){
    int i,j;
    sz=0;
    mem(next,0);
    mem(val,0);
    for(i=0;i<n;i++){
            get(words[i]);
            ins(words[i]);
    }
    sz=0;
    mem(next,0);
    mem(val,0);
    for(i=n-1;i>=0;i--){
        get(words[i]);
        ins(words[i]);
    }
}
int main()
{
    int t,i,j;
    base[0]=1;
    for(i=1;i<N;i++)
        base[i]=base[i-1]*B;
    scanf("%d",&t);
    while(t--){
        scanf("%d",&n);
        for(i=0;i<n;i++)
            cin>>words[i];
        ans=0;
        solve();
        printf("%lld\n",ans);
    }
    return 0;
}
