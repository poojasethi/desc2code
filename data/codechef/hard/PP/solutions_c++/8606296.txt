/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 225898512559LL
#define MOD1 100000000019LL
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
#define MAXN 1000002

vector<LLD> hsh[MAXN],rhsh[MAXN],hsh1[MAXN],rhsh1[MAXN];
vector<LLD> revh[MAXN],revh1[MAXN];
LLD p[MAXN],p1[MAXN];
map<pair<LLD,LLD>,int> cnt;
string s[MAXN];
void init(int n)
{
	int i;
	REP(i,n)
	{
		int l=s[i].size();
		hsh[i].resize(l);
		rhsh[i].resize(l);
		hsh1[i].resize(l);
		rhsh1[i].resize(l);
		revh[i].resize(l);
		revh1[i].resize(l);
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	//cin.tie(NULL);
	int t;
	p[0]=p1[0]=1;
	for(t=1;t<=1000001;t++)
	{
		p[t]=(p[t-1]*27)%MOD;
		p1[t]=(p1[t-1]*27)%MOD1;
	}
	cin>>t;
	while(t--)
	{
		LLD ans=0;
		int n,i,j;
		cin>>n;
		int it=0;
		for(it=0;it<2;it++)
		{
			cnt.clear();
			if(it==0)
			{
				REP(i,n)
					cin>>s[i];
				init(n);
			}
			else
				REP(i,n)
					reverse(s[i].begin(),s[i].end());
			REP(i,n)
			{
				int l=s[i].size(),ch;
				LLD h1=0,h2=0,rh1=0,rh2=0;
				for(j=0;j<l;j++)
				{
					ch=s[i][j]-'a'+1;
					h1=(h1*27+ch)%MOD;
					h2=(h2*27+ch)%MOD1;
					rh1=(rh1+p[j]*ch)%MOD;
					rh2=(rh2+p1[j]*ch)%MOD1;
					hsh[i][j]=h1;
					hsh1[i][j]=h2;
					rhsh[i][j]=rh1;
					rhsh1[i][j]=rh2;
					//			trace4(i,j,rh1,rh2);
				}
				cnt[(mp(h1,h2))]++;
				h1=0,h2=0;
				for(j=l-1;j>-1;j--)
				{
					ch=s[i][j]-'a'+1;
					h1=(h1*27+ch)%MOD;
					h2=(h2*27+ch)%MOD1;
					revh[i][j]=h1;
					revh1[i][j]=h2;
				}
			}
			//trace1(ans);
			for(i=0;i<n;i++)
			{
				int l=s[i].size();
				if(cnt.find(mp(revh[i][0],revh1[i][0]))!=cnt.end() && it==0)
				{
					if(hsh[i][l-1]==rhsh[i][l-1] && hsh1[i][l-1]==rhsh1[i][l-1])
						ans+=cnt[mp(revh[i][0],revh1[i][0])]-1;
					else
						ans+=cnt[mp(revh[i][0],revh1[i][0])];
				}
				for(j=0;j<l-1;j++)
				{
					if(!(hsh[i][j]==rhsh[i][j] && hsh1[i][j]==rhsh1[i][j]))
						continue;
					if(cnt.find(mp(revh[i][j+1],revh1[i][j+1]))!=cnt.end())
						ans+=cnt[mp(revh[i][j+1],revh1[i][j+1])];
				}
			}
		}
		cout<<ans<<endl;
	}
	return 0;
}

