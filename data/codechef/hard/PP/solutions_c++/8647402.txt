#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define ll long long
#define mp make_pair
#define f first
#define s second
#define N 1000007
#define cs 1373
#define BIT(i, n) ( (n >> i) & 1 )
#define ln 1e12+1
#define oo 300003

using namespace std;

ll L[N], R[N], Pow[N], ans;
map <ll, int> cnt1, cnt2;
int Test, n;
string S[N];
vector <string> T[N];

ll Get_L(int d, int c)
{
    return L[c] - L[d-1] * Pow[c-d+1];
}

ll Get_R(int d, int c)
{
    return R[d] - R[c+1] * Pow[c-d+1];
}

bool Check(int d, int c)
{
    int Si = (c - d + 1) / 2;
    return Get_L(d, d+Si-1) == Get_R(c-Si+1, c);
}

void Solve(string &P, int Si)
{
    for(int i=1; i<=Si; i++)
        L[i] = L[i-1] * cs + (P[i] - 'a' + 1);
    R[Si+1] = 0;
    for(int i=Si; i>=1; i--)
        R[i] = R[i+1] * cs + (P[i] - 'a' + 1);
    for(int i=1; i<=Si; i++)
    {
        if(Check(i+1, Si))
            ans += cnt2[L[i]];
        if(Check(1, i-1))
            ans += cnt1[R[i]];
    }
    cnt1[L[Si]]++;
    cnt2[R[1]]++;
}

int main()
{
    ios_base::sync_with_stdio(0);
    //filein("inp.txt");  fileout("out.txt");
    cin >> Test;
    Pow[0] = 1;
    for(int i=1; i<N; i++)
        Pow[i] = Pow[i-1] * cs;
    while(Test--)
    {
        ans = 0;
        for(int i=1; i<N; i++)
            T[i].clear();
        cnt1.clear();   cnt2.clear();
        cin >> n;
        for(int i=1; i<=n; i++)
        {
            cin >> S[i];
            T[S[i].size()].push_back(' ' + S[i]);
        }
        for(int i=1; i<N; i++)
            for(int j=0; j<T[i].size(); j++)
            {
                string p = T[i][j];
                Solve(p, i);
            }
        cout << ans << endl;
    }
}
