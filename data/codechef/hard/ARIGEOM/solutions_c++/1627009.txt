#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<vector>
#include<cmath>
using namespace std;
vector<int> ap;
vector<int> gp;
vector<int> a;
vector<int> temp;

int process(double num){
	if(ceil(num)*1.0-num==0 && ceil(num)<=a[a.size()-1])
		return ceil(num);
	else
		return -1;
}

void printing(){
	int i;
	int l=ap.size();
	for(i=0;i<l;i++)
		printf("%d ",ap[i]);
	printf("\n");
	l=gp.size();
	for(i=0;i<l;i++)
		printf("%d ",gp[i]);
	printf("\n");
	ap.clear();
	gp.clear();
	temp.clear();
}

bool checkForGP(int n){
//	printf("checked for gp()\n");
	int next,first,second,l,temp_count,i;
	int sp,sq;
	bool done=false;
	l=temp.size();
	if(temp.size()==0){
		gp.push_back(ap[0]);
		gp.push_back(ap[1]);
		printing();
		done=true;
	}

	else if (temp.size()==1){
		if(a[temp[0]]>ap[0]){
			gp.push_back(ap[0]);
			gp.push_back(a[temp[0]]);
		}
		else{
			gp.push_back(a[temp[0]]);
			gp.push_back(ap[0]);
		}
		printing();
		done=true;
	}

	else if(temp.size()==2){
		gp.push_back(a[temp[0]]);
		gp.push_back(a[temp[1]]);
		printing();
		done=true;
	}
	else{
		first=temp[0];
		l=temp.size();
		second=first+1;
		while(!done && second<=temp[1]){
			gp.push_back(a[first]);
			gp.push_back(a[second]);
			sp=a[second];
			sq=a[first];
			next=process((double)(a[second]*1.0*sp/sq));
			if(second==temp[1]) temp_count=2;
			else temp_count=1;

			for(i=second+1;i<n;i++){
				if(next==-1)
					break;
				if(temp_count==l)
					break;
				if(i==temp[temp_count] && a[i]==next){
					gp.push_back(next);
					next=process((double)(next*1.0*sp/sq));
					temp_count++;
				}
				else if(i==temp[temp_count] && next!=a[i])
					break;
				else if(a[i]==next){
					gp.push_back(next);
					next=process((double)(next*1.0*sp/sq));
				}
			}
			if(temp_count==l){
				printing();
				done=true;
			}
			gp.clear();
			second++;
		}
	}
	temp.clear();
	ap.clear();
	gp.clear();
	return done;
}

bool checkForAP(int n){
//	printf("checked for ap()\n");
	int next,first,i,second,l,d,temp_count;
	bool done=false;
	l=temp.size();
	if(temp.size()==0){
		ap.push_back(gp[0]);
		ap.push_back(gp[1]);
		printing();
		done=true;
	}

	else if(temp.size()==1){
		if(a[temp[0]]>gp[0]){
			ap.push_back(gp[0]);
			ap.push_back(a[temp[0]]);
		}
		else{
			ap.push_back(a[temp[0]]);
			ap.push_back(gp[0]);
		}
		printing();
		done=true;
	}

	else if(temp.size()==2){
		ap.push_back(a[temp[0]]);
		ap.push_back(a[temp[1]]);
		printing();
		done=true;
	}

	else{
		first=temp[0];
		second=first+1;
		while(!done && second<=temp[1]){
	//		printf("yes first=%d second = %d \n",first,second);
			ap.push_back(a[first]);
			ap.push_back(a[second]);
			d= a[second]-a[first];
			next=a[second]+d;
			if(second==temp[1]) temp_count=2;
			else temp_count=1;
			for(i=second+1;i<n;i++){
	//			printf(" i = %d\n",i);
				if(next>a[a.size()-1])
					break;
				if(temp_count==l)
					break;
				else if(next==a[i] && i==temp[temp_count]){
					temp_count++;
					ap.push_back(next);
					next+=d;
				}
				else if(i==temp[temp_count] && next!=a[i])
					break;
				else if (a[i]==next){
					ap.push_back(next);
					next+=d;
				}
			}
			if(temp_count==l){
				done=true;
				printing();
			}
			ap.clear();
			second++;
		}
	}
	ap.clear();
	gp.clear();
	temp.clear();
	return done;
}



int main(){
	int test;
	int n,i,num,d,next,sp,sq;
	scanf("%d",&test);
	while(test--){
		a.clear();
		ap.clear();
		gp.clear();
		temp.clear();
		scanf("%d",&n);
		for(i=0;i<n;i++){
			scanf("%d",&num);
			a.push_back(num);
		}
		/******************let first two terms make an AP************/

		ap.push_back(a[0]);
		ap.push_back(a[1]);
		d=a[1]-a[0];
		next=a[1]+d;
		for(i=2;i<n;i++){
			if(next==a[i]){
				ap.push_back(next);
				next+=d;
			}
			else
				temp.push_back(i);
		}

		if(checkForGP(n))continue;

		/***************let first and third term be in an AP**********/
		ap.push_back(a[0]);
		ap.push_back(a[2]);
		d=a[2]-a[0];
		next=a[2]+d;
		temp.push_back(1);
		for(i=3;i<n;i++){
			if(next==a[i]){
				ap.push_back(next);
				next+=d;
			}
			else
				temp.push_back(i);
		}
		if(checkForGP(n))continue;
		/*********let second and third term form an AP******************/


		ap.push_back(a[1]);
		ap.push_back(a[2]);
		d=a[2]-a[1];
		next=a[2]+d;
		temp.push_back(0);
		for(i=3;i<n;i++){
			if(next==a[i]){
				ap.push_back(next);
				next+=d;
			}
			else
				temp.push_back(i);
		}
		
		if(checkForGP(n))continue;

		/**********let first two term be in GP ***************/
		gp.push_back(a[0]);
		gp.push_back(a[1]);
		sp=a[1];
		sq=a[0];
		next=process((double)(a[1]*1.0*sp/sq));

		for(i=2;i<n;i++){
			if(next==a[i]){
				gp.push_back(next);
				next=process((double)(next*1.0*sp/sq));
			}
			else
				temp.push_back(i);
		}

		if(checkForAP(n))continue;
		
		/*********let second and third term be in GP**********/
		gp.push_back(a[1]);
		gp.push_back(a[2]);
		temp.push_back(0);

		sp=a[2];
		sq=a[1];
		next=process((double)(a[2]*1.0*sp/sq));
		for(i=3;i<n;i++){
			if(next==a[i]){
				gp.push_back(next);
				next=process((double)(next*1.0*sp/sq));
			}
			else
				temp.push_back(i);
		}
		
		if(checkForAP(n))continue;

		/********let first and third be in GP*************/
		gp.push_back(a[0]);
		gp.push_back(a[2]);
		temp.push_back(1);

		sp=a[2];
		sq=a[0];
		next=process((double)(a[2]*1.0*sp/sq));
		for(i=3;i<n;i++){
			if(next==a[i]){
				gp.push_back(next);
				next=process((double)(next*1.0*sp/sq));
			}
			else
				temp.push_back(i);
		}
		if(checkForAP(n))continue;
	}
	return 0;
}
