#include <bits/stdc++.h>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	kokn 300

#define	mod	1000000007LL

using namespace std;

lli	n,m,d[200000],goal[200000],sum1[200000],sum2[200000],result[200000];
set<lli>	S,P;
vector< pair< pair<lli,lli>,pair<lli,lli> > >	v;

int main(){
	cin >> n;
	FP( i,1,n )	scanf("%lld",d+i);
	FP( i,1,n )	scanf("%lld",goal+i);
	lli	s=0;
	memset( result,-1,sizeof result );
	cin >> m;
	FP( i,1,n ){
		if( d[i]>=goal[i] )	result[i] = 0;
		else	S.insert( i );
	}
	FP( i,1,m ){
		lli	l,r,x,y;
        scanf("%lld %lld %lld %lld",&l,&r,&x,&y);
        v.pb( mp( mp(l,r),mp(x,y) ) );
        if( i%kokn==0 or i==m ){
			foreach( v,it ){
				sum1[it->st.nd+1] -= it->nd.st;
				sum1[it->st.st] +=	it->nd.st;
				sum1[it->st.nd+1] -= (-it->st.st)*it->nd.nd;
				sum1[it->st.st+1] +=	(-it->st.st)*it->nd.nd;

				sum2[it->st.nd+1] -= it->nd.nd;
				sum2[it->st.st+1] +=	it->nd.nd;
			}
			FP( i,1,n ) sum1[i] += sum1[i-1];

			FP( i,1,n ) sum2[i] += sum2[i-1];

			foreach( S,it )
				if( d[*it]+sum1[*it]+sum2[*it]*(*it)>=goal[*it] )
					P.insert( *it );
			foreach( P,it )	S.erase( *it );
			foreach( P,i ){
                foreach( v,j ){
					if( j->st.st<=*i and *i<=j->st.nd ){
						d[*i] += j->nd.st+j->nd.nd*(*i-j->st.st);
						if( d[*i]>=goal[*i] ){
							result[*i] = j-v.begin()+1+s;
							break;
						}
					}
                }
			}
			FP( i,1,n )	d[i] += sum1[i]+sum2[i]*i;
			s += kokn;
			memset( sum1,0,sizeof sum1 );
			memset( sum2,0,sizeof sum2 );
			v.clear();
			P.clear();

        }
	}
	FP( i,1,n )
		printf("%lld ",result[i]);
	cout << endl;
}
