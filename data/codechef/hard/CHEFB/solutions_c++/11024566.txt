#include <bits/stdc++.h>
#define maxA 1000000
#define maxn 100001

using namespace std;

int E[maxA+1], P[maxA+1], nP;
int n, a[maxn];
int cnt[maxA+1];

void Ankin() {
    for(int i=1;i<=maxA;i++) E[i]=0;
    nP=0;
    for(int i=2;i<=maxA;i++) {
        if (E[i]==0) P[++nP]=i, E[i]=nP;
        for(int j=1;j<=nP && P[j]<=P[E[i]] && P[j]<=maxA/i;j++) E[P[j]*i]=j;
    }
}

void read_in() {
    scanf("%d",&n);
    for(int i=1;i<=n;i++) scanf("%d",a+i);
}

void phantich(int x) {
    while (x>1) {
        int y=P[E[x]], u=E[x];
        int t=0;
        while (x%y==0) t++, x/=y;
        cnt[u]=max(cnt[u],t);
    }
}

void solve() {
    for(int i=1;i<=nP;i++) cnt[i]=0;
    for(int i=1;i<=n;i++) phantich(a[i]);
    int ans=0;
    for(int i=1;i<=nP;i++) ans+=cnt[i];
    printf("%d\n",ans);
}

int main() {
    #ifndef ONLINE_JUDGE
    freopen("inp.txt","r",stdin);
    freopen("out.txt","w",stdout);
    #endif // ONLINE_JUDGE
    Ankin();
    int T; scanf("%d",&T);
    while (T--) {
        read_in();
        solve();
    }
}
