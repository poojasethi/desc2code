#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 0x3f3f3f3f
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
int sa[N],lcp[N],rank[N],n,g[N],b[N],h;
inline bool comp(int i,int j)
{
	if(i==j||g[i]!=g[j])return g[i]<g[j];
	return g[i+h]<g[j+h];
}
void init(char *t)
{
	n=strlen(t);int i,k;
	for(i=0;i<=n;i++)sa[i]=i,g[i]=t[i];g[n]=-1;
	h=b[0]=b[n]=0;
	sort(sa,sa+n+1,comp);
	for(h=1;b[n]!=n;h<<=1)
	{
		sort(sa,sa+n+1,comp);
		for(i=0;i<n;i++)b[i+1]=b[i]+comp(sa[i],sa[i+1]);
		for(i=0;i<=n;i++)g[sa[i]]=b[i];
	}
	for(i=0;i<n;i++)sa[i]=sa[i+1];
	for(i=0;i<n;i++)rank[sa[i]]=i;
	for(i=0,k=0;i<n;i++)
	{
		if(k>0)k--;
		if(rank[i]==n-1){lcp[n-1]=-1;k=0;continue;}
		int j=sa[rank[i]+1];
		while(t[i+k]==t[j+k])k++;
		lcp[rank[i]]=k;
	}
}
vector<pii>ins[N],del[N];
pii res[N];char t[N];
int main()
{
	int T,m,i,j,k;
	while(~scanf("%s",t))
	{
		init(t);
		if(n==1){printf("1 1\n");continue;}
		for(int r=0;r<n;r++)
		{
			int l=max(r==0?0:lcp[r-1],r==n-1?0:lcp[r]);
			int s=sa[r];
			if(s+l<n)
			{
				pii p(l+1,r);
				ins[s].pb(p);del[s+l+1].pb(p);
			}
		}
		set<pii>cur;
		for(i=0;i<n;i++)
		{
			for(j=0;j<del[i].size();j++)cur.erase(del[i][j]);
			for(j=0;j<ins[i].size();j++)cur.insert(ins[i][j]);
			res[i]=cur.empty()?mp(inf,inf):*cur.begin();
			if(i)res[i]=min(res[i],mp(res[i-1].x+1,res[i-1].y));
		}
		for(i=0;i<n;i++)
		{
			j=sa[res[i].y]+1;
			printf("%d %d\n",j,res[i].x);
		}
	}
}