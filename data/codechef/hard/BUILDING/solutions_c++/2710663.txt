#include<iostream>
#include<cstdio>
#include<vector>
#include<map>
#include<math.h>
#include<queue>
#include<list>
#include<algorithm>
#include<string>
#include<cstdlib>
#include<cstring>
#include<climits>
#include<stack>
#include<cfloat>

using namespace std;

#define inf 1005
#define iter(v,i,j) for(v=i;v!=j;v++)
#define rec(i,n) for(int i=0;i<n;i++)
#define vs vector<string>
#define vi vector<int>
#define vvi vector<vector<int> >
#define ll long long int
#define llu unsigned long long int
#define get1(i) scanf("%d",&i)
#define get2(i,j) scanf("%d %d",&i,&j)
#define get3(i,j,k) scanf("%d %d %d",&i,&j,&k)
#define getll(i) scanf("%lld",&i)
#define getllu(i) scanf("%llu",&i)
#define show(i) printf("%d\n",i)
#define show2(i,j) printf("%d %d\n",i,j)
#define init(m) memset(m,0,sizeof(m))
#define showvec(v) for(int i=0;i<v.size();i++)cout<<v[i]<<" ";cout<<endl;
int C[inf][inf];
llu up[inf][inf],down[inf][inf];//,up2[inf][inf],down2[inf][inf];
llu final[inf][inf];
llu upper(int i,int j,int d){
	llu temp=(up[i-d][j]-up[i][j-d]+C[i][j-d]+down[i][j+d]-down[i-d][j]);//cout<<"upper "<<i<<" "<<j<<" "<<temp<<endl;
	return temp;
}
llu lower(int i,int j,int d){
	llu temp=(down[i+d][j]-down[i][j-d]+C[i][j-d]+up[i][j+d]-up[i+d][j]);//cout<<"lower "<<i<<" "<<j<<" "<<temp<<endl;
	return temp;
}
llu left(int i,int j,int d){
	llu temp=(up[i-d][j]-up[i][j-d]+down[i+d][j]-down[i][j-d]+C[i][j-d]);//cout<<"left "<<i<<" "<<j<<" "<<temp<<endl;
	return temp;
}
llu right(int i,int j,int d){
	llu temp=(down[i][j+d]-down[i-d][j]+C[i-d][j]+up[i][j+d]-up[i+d][j]-C[i][j+d]+C[i+d][j]);//cout<<"right "<<i<<" "<<j<<" "<<temp<<endl;
	return temp;
}
int main(){
	rec(i,inf)rec(j,inf)C[i][j]=0;
	int w,h,d,n,x,y,c;
	rec(i,inf)rec(j,inf)final[i][j]=0;
	scanf("%d %d %d %d",&w,&h,&d,&n);
	while(n--){
		scanf("%d %d %d",&x,&y,&c);
		C[x][y]=c;
	}
	for(int l=w+h;l>=0;l--){
		if(l>w)x=w;
		else x=l;
		y=l-x;
		up[x][y]=C[x][y];
		x--;y++;
		while(x>=0 && y<=h){
			up[x][y]=up[x+1][y-1]+C[x][y];
			x--;y++;
		}
	}
	
	for(int l=w;l>=-1*h;l--){
		if(l>=0)x=l;
		else x=0;
		y=x-l;
		down[x][y]=C[x][y];
		x++;y++;
		while(x<=w && y<=h){
			down[x][y]=down[x-1][y-1]+C[x][y];
			x++;y++;
		}
	}
	/*rec(i,w+2)rec(j,h+2)up2[i][j]=down2[i][j]=0;
	rec(i,w+1)rec(j,h+1)up2[i][j+1]=up[i][j];
	for(int i=1;i<=(w+1);i++)for(int j=1;j<=(h+1);j++)down2[i][j]=down[i-1][j-1];*/
	
	
	/*llu minim,temp;
	minim=(down[d][2*d]+down[2*d][d]-down[d][0]-down[0][d])+(up[0][d]+up[d][2*d]-up[d][0]-up[2*d][d]);
	for(x=d;x<=w-d;x++){
		for(y=d;y<=h-d;y++){
			temp=(down[x][y+d]+down[x+d][y]-down[x][y-d]-down[x-d][y])+
					(up[x-d][y]+up[x][y+d]-up[x][y-d]-up[x+d][y]) +C[x][y-d]-C[x][y+d];
			minim=min(minim,temp);cout<<"cost "<<x<<" "<<y<<" "<<temp<<endl;
		}
	}
	rec(i,w+2){rec(j,h+2)cout<<up2[i][j]<<" ";cout<<endl;}cout<<endl;
	rec(i,w+2){rec(j,h+2)cout<<down2[i][j]<<" ";cout<<endl;}*/
	
	int j=d,i=d;
	//Cumpute final[d][d]g Â» Successful Submission
	for(i=0;i<=d;i++){
		for(j=d-i;j<=d+i;j++){
			final[d][d]+=C[i][j];
			if(i!=d)final[d][d]+=C[2*d-i][j];
		}
	}
	//cout<<"f "<<d<<" "<<final[d][d]<<endl;
	llu minim=final[d][d];
	j=d;
	//Compute first column using previous
	for(i=d+1;i<=w-d;i++){
		final[i][j]=final[i-1][j]-upper(i-1,j,d)+lower(i,j,d);//cout<<"cost "<<i<<" "<<j<<" "<<final[i][j]<<endl;
		minim=min(minim,final[i][j]);
	}
	for(i=d;i<=w-d;i++){
		for(j=d+1;j<=h-d;j++){
			final[i][j]=final[i][j-1]-left(i,j-1,d)+right(i,j,d);//cout<<"cost "<<i<<" "<<j<<" "<<final[i][j]<<endl;
			minim=min(minim,final[i][j]);
		}
	}
	
	printf("%llu\n",minim);
	return 0;
}

