#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <cassert>
#include <algorithm>
#include <limits>
#include <vector>
#include <queue>
using namespace std;
typedef long long ll;
const int INF = numeric_limits<int>::max();
typedef pair<int,int> pii;

const int m = 1005;
int a[m][m], pp[m][m], pn[m][m];

inline int drs(int p[m][m], int x1, int y1, int x2, int y2)
{
    return p[x2][y2] - p[x1][y1] + a[x1][y1];
}

int main(int argc,char* argv[])
{
    int w,h,d,n;
    scanf("%d%d%d%d",&w,&h,&d,&n);
    w++;
    h++;

    for (int i=0;i<n;i++)
    {
        int x,y,c;
        scanf("%d%d%d",&x,&y,&c);
        a[x][y] = c;
    }

    for (int y=0;y<h;y++)
        pp[0][y] = pn[0][y] = a[0][y];

    for (int x=1;x<w;x++)
    {
        pp[x][0] = a[x][0];
        pn[x][0] = pn[x-1][1] + a[x][0];
        for (int y=1;y<h;y++)
        {
            pp[x][y] = pp[x-1][y-1] + a[x][y];
            pn[x][y] = pn[x-1][y+1] + a[x][y];
        }
    }

    /*
    for(int y=h-1;y>=0;y--)
    {
    for(int x=0;x<w;x++)
        printf("%3d",pp[x][y]);
    printf("\n");
    }
    printf("\n");

    for(int y=h-1;y>=0;y--)
    {
    for(int x=0;x<w;x++)
        printf("%3d",pn[x][y]);
    printf("\n");
    }
    */

    int cmin = INF;
    for (int xc=d;xc<w-d;xc++)
    {
        int c = 0;
        for (int x=xc,y=0;y<=d;x++,y++)
            c += drs(pn, x-d, y+d, x, y);
        for (int x=xc,y=1;y<=d;x++,y++)
            c += drs(pn, x-d+1, y+d-1, x, y);

        int yc = d;
        while (true)
        {
            //printf("%d %d %d\n",xc,yc,c);
            cmin = min(cmin, c);
            c -= drs(pn, xc-d, yc, xc, yc-d) + drs(pp, xc, yc-d, xc+d, yc) - a[xc][yc-d];
            if (++yc==h-d)
                break;
            c += drs(pp, xc-d, yc, xc, yc+d) + drs(pn, xc, yc+d, xc+d, yc) - a[xc][yc+d];
        }
    }
    printf("%d\n",cmin);
    return 0;
}
