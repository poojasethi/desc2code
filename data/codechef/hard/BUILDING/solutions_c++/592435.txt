#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#define inf 1000000000
using namespace std;
typedef long long L;
typedef unsigned long long UL;
const int size=1000;
int w,h,C[size+1][size+1],n,d,dp1[size+1][size+1];
int dp2[size+1][size+1],dpr[size+1][size+1];

int f1(int x,int y){
    if(x>=0&&x<=w&&y>=0&&y<=h)return dp1[x][y];
    return 0;
}

int f2(int x,int y){
    if(x>=0&&x<=w&&y>=0&&y<=h)return C[x][y];
    return 0;
}

int f3(int x,int y){
    if(x>=0&&x<=w&&y>=0&&y<=h)return dp2[x][y];
    return 0;
}

int main()
{
    scanf("%d%d%d%d",&w,&h,&d,&n);

    int x,y,c;
    for(int i=1;i<=n;i++){
        scanf("%d%d",&x,&y);
        scanf("%d",&C[x][y]);
    }


    for(y=0;y<=h;y++)
        for(x=0;x<=w;x++){
            dp1[x][y]=f1(x-1,y-1)-f2(x-d-1,y-d-1)+C[x][y];
            dp2[x][y]=f3(x+1,y-1)-f2(x+d+1,y-d-1)+C[x][y];
            //cout<<x<<" "<<y<<" "<<dp1[x][y]<<" "<<dp2[x][y]<<endl;
        }

    for(y=d;y>=0;y--)
        for(x=y-d;x<=d-y;x++)
            dpr[d][d]+=C[d+x][d+y];
    for(y=-1;y>=-d;y--)
        for(x=(-y-d);x<=(d+y);x++)
            dpr[d][d]+=C[d+x][d+y];

    //cout<<dpr[d][d]<<endl;
    int res=dpr[d][d];

    for(x=d+1;x+d<=w;x++){
        dpr[x][d]=dpr[x-1][d];
        dpr[x][d]-=(dp1[x-1][2*d]+dp2[x-d-1][d]-C[x-d-1][d]);
        dpr[x][d]+=(dp2[x][2*d]+dp1[x+d][d]-C[x+d][d]);
        res=min(res,dpr[x][d]);
        //cout<<dpr[x][d]<<endl;
    }


    for(y=d+1;y+d<=h;y++){

        for(x=d;x+d<=w;x++){
            dpr[x][y]=dpr[x][y-1];
            dpr[x][y]-=(dp2[x-d][y-1]+dp1[x+d][y-1]-C[x][y-d-1]);
            dpr[x][y]+=(dp1[x][y+d]+dp2[x][y+d]-C[x][y+d]);
            res=min(res,dpr[x][y]);
            //cout<<x<<" "<<y<<" "<<dpr[x][y]<<endl;
        }
    }
    printf("%d",res);

    return 0;
}
