#include <cstdio>
#include <tr1/unordered_map>

int findFoldSet(int total);
std::tr1::unordered_map<int, int> foldSets;

int main(int argc, char **argv)
{
    int numTestCases, curTotal;

    scanf("%d", &numTestCases);
    while (scanf("%d", &curTotal) == 1)
    {
        printf("%d\n", findFoldSet(curTotal));
    }

    return 0;
}

int findFoldSet(int total)
{
    if (foldSets.find(total) != foldSets.end())
    {
        return foldSets[total];
    }

    int curMarkPos = total / 2;
    int iter = 2;
    int retVal = 1;
    bool bLogarithmicReduction = true;

    while (curMarkPos > 0)
    {
        int curTotal = total - curMarkPos;

        if (curTotal % (curMarkPos + 1) == 0)
        {
            retVal += findFoldSet(curTotal / (curMarkPos + 1)); //foldSets[numRightOfMark];
        }

        if (bLogarithmicReduction)
        {
            int nextMarkPos = total / ++iter;
            if (curMarkPos != nextMarkPos)
            {
                curMarkPos = nextMarkPos;
                continue;
            }

            bLogarithmicReduction = false;
        }

        curMarkPos--;
    }

    foldSets[total] = retVal;

    return retVal;
}
