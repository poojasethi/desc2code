#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

ll dp[1009];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int t;s(t);
    while( t-- )
    {
        vector <ll> p;
        ll n;
        cin >> n;
        n++;
        ll j = 1;
        while( j * j <= n )
        {
            if( n % j == 0 )
            {
                p.push_back(j);
                if( n / j != j )
                    p.push_back(n / j);

            }
            j++;
        }
        sort(p.begin(),p.end());
        REP(i,0,p.size())
            dp[i] = 0;
        dp[0] = 1;
        REP(i,1,p.size() - 1)
        {
            REP(j,0,i - 1)
            {
                if( p[i] % p[j] == 0 )
                    dp[i] += dp[j];
            }
        }
        cout << dp[p.size() - 1] << endl;
    }
    return 0;
}
