#pragma comment(linker,"/STACK:64000000")
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <sstream>
#include <cmath>
#include <ctime>
#include <memory.h>

#define WR printf
#define RE scanf
#define PB push_back
#define SE second
#define FI first
#define MP make_pair

#define FOR(i,Be,En) for(int (i)=(Be);(i)<=(En);++(i))
#define DFOR(i,Be,En) for(int (i)=(Be);(i)>=(En);--(i))
#define SZ(a) (int)((a).size())
#define FA(i,v) FOR(i,0,SZ(v)-1)
#define RFA(i,v) DFOR(i,SZ(v)-1,0)
#define CLR(a) memset(a,0,sizeof(a))

#define LL  long long
#define VI  vector<int>
#define PAR pair<int ,int> 

using namespace std;
void __never(int a){printf("\nOPS %d", a);}
void __die(int a){printf("%d",(a*a)/(a+a));}
#define ass(s) {if (!(s)) {__never(__LINE__);cout.flush();cerr.flush();__die(0);}}


map<VI, LL> ans;

int prs[100000];
int pcc = 0;
bool pr(int a){
	for (int i = 0;prs[i]*prs[i]<=a;i++) {
		ass(i < pcc);
		if (a % prs[i] == 0) return false;
	}
	return true;
}

void pre(){
	prs[pcc++] = 2;
	prs[pcc++] = 3;
	prs[pcc++] = 5;
	prs[pcc++] = 7;
	FOR(i,9,100000) {
		if (pr(i)) {
			prs[pcc++] = i;
			//WR("%d\n",i);
		}
	}
}

LL solr(VI r) {
	if (ans.find(r) != ans.end()) return ans[r];
	int all = 1;
	FA(i, r) all *= (r[i] + 1);
	LL res = 0;
	
	FOR(I,0,all-2) {
		int ii = I;
		VI v;
		FA(j,r) {
			int h = ii % (r[j] + 1);
			ii /= (r[j] + 1);
			if (h > 0) v.PB(h);
		}
		sort(v.begin(),v.end());
		res += solr(v);
	}
	return ans[r] = res;
} 

VI razl(LL a){
	VI res;
	for (int i = 0;(LL)prs[i]*prs[i]<=a;i++) {
		ass(i < pcc);
		int h = 0;
		while (a % prs[i] == 0) {
			a /= prs[i];
			h++;
		}
		if (h > 0) res.PB(h);
	}
	if (a > 1) res.PB(1);
	return res;
}
LL soln(LL n){
	//ass(n<=2147483647);
	if (n == 0) return 1;
	if (n<0) return 0;
	VI r = razl(n + 1);
	sort(r.begin(), r.end());
	return solr(r);
}
void init()
{
	freopen("input.txt","r",stdin);
	freopen("output6.txt","w",stdout);
}
void sol(){	
	ans[VI()] = 1;
	int T;
	cin >> T;
	LL n;
	FOR(t,1,T) {
		cin >> n;
		cout << soln(n) << endl;
	}
}
void sol2(){
	ans[VI()] = 1;
	//FOR(i,223091870,223093870) {
	DFOR(i,3000,1) soln(i);
	FOR(i,1,3000) {
		cout << i << " " << soln(i) << endl;
	}
}
int main()
{
	//init();
	pre();
	sol();
	return 0;
}