#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<vector>
#include<math.h>

using namespace std; 

vector <int> factors;
 
long long int D[600000];
long long int n;
void solve()
{
	long long int i;
	n=n+1;
	int sqrtn=(int)sqrt(n);
	for(i=1;i<=sqrtn;i++)
	{
		if(n%i==0)
		{
			factors.push_back((int)(i));
			long long int j = n/i;
			if( i!=1 && i!=j) 
			{
				factors.push_back((int)(j));
			}
		}
	}
	sort(factors.begin(),factors.end());
}
 
int main()
{
	int i,t;
	scanf("%d",&t);
 	while(t-- >0)
	{	
		scanf("%lld",&n);
		factors.clear();
		solve();
		int f = factors.size();
  		for( i=0;i<f;i++){
			D[i] = 1;
		}
 
		int m = factors[f-1];
 
		for( i=1;i<f;i++)
		{
			int x = factors[i];
			for(int j=i+1;j<f;j++)
			{		
				int y = factors[j];
				if(y%x==0)
				{
					D[j]+=D[i];
				}
			}
		}
		long long int ans = 0;
		for( i=0;i<f;i++)ans+=D[i];
		printf("%lld\n",ans);
	}
	return 0;
}