#include <iostream>
#include <algorithm>
#include <string>
#include <vector>
using namespace std;

int n,k,D[55],d[55][55];
string s;
vector < pair<int,long long> > ans[55];

int found(long long C,int z)
{
	for (int i=1;i<=D[z];i++)
		if (d[z][i]==C) return 1;
	return 0;
}

vector < pair<int,long long> > setStr(int i,vector <long long> c)
{
	vector < pair<int,long long> > res;
	for (int j=1;j<=i+1;j++)
		if (!found(c[j],j)) res.push_back(make_pair(j,c[j]));
	return res;
}

vector <long long> add(int i,char ch,vector <long long> c)
{
	vector <long long> res(i+2,0);
	int x=(ch=='7');
	res[i+1]=c[i]+(1LL<<i)*x;
	for (int j=0;j<i;j++) res[j+1]=c[j+1]/2+(1LL<<j)*x;
	return res;
}

void att(int i,int k,vector <long long> c)
{
	if (i>=n)
	{
		ans[n].push_back(make_pair(50-k,c[n]));
		return;
	}
	
	if (s[i]!='?') 
	{
		vector <long long> cc = add(i,s[i],c);
		vector < pair<int,long long> > b = setStr(i,cc);
		if (b.size()<=k)
		{
			for (int j=0;j<b.size();j++) d[b[j].first][++D[b[j].first]]=b[j].second;
			att(i+1,k-b.size(),cc);
			for (int j=0;j<b.size();j++) D[b[j].first]--;
		}
	}
	else
	{
		s[i]='4';
		vector <long long> cc = add(i,s[i],c);
		vector < pair<int,long long> > b = setStr(i,cc);
		if (b.size()<=k)
		{
			for (int j=0;j<b.size();j++) d[b[j].first][++D[b[j].first]]=b[j].second;
			att(i+1,k-b.size(),cc);
			for (int j=0;j<b.size();j++) D[b[j].first]--;
		}
		
		s[i]='7';
		cc = add(i,s[i],c);
		b = setStr(i,cc);
		if (b.size()<=k)
		{
			for (int j=0;j<b.size();j++) d[b[j].first][++D[b[j].first]]=b[j].second;
			att(i+1,k-b.size(),cc);
			for (int j=0;j<b.size();j++) D[b[j].first]--;
		}
		
		s[i]='?';
	}
}

void init()
{
	s="";
	for (int i=0;i<50;i++) s+='?';
	for (n=1;n<=25;n++)
	{
		for (int i=1;i<=n;i++) D[i]=0;
		vector <long long> c(2,0);
		att(0,50,c);
	}
	for (n=26;n<=50;n++) 
		for (long long i=0;i<2;i++)
			ans[n].push_back(make_pair(n,(i<<n)-i));
}

int calc()
{
	int res=0;
	long long mask1=0,mask2=0;
	for (int i=0;i<n;i++) 
	{
		mask1=mask1*2+(s[i]!='?');
		mask2=mask2*2+(s[i]=='7');
	}
	
	for (int i=0;i<int(ans[n].size());i++)
		if (ans[n][i].first<=k)
			res+=((ans[n][i].second^mask2)&mask1)==0;
	return res;
}

int main()
{
	init();
	int test;
	cin >> test;
	while (test--)
	{
		cin >> n >> k;
		cin >> s;
		cout << calc() << endl;
	}
}
