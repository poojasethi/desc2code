#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define forup(i,a,b) for(int i=a; i<b; ++i)
#define fordn(i,a,b) for(int i=a; i>b; --i)
#define rep(i,a) for(int i=0; i<a; ++i)

#define dforup(i,a,b) for(i=a; i<b; ++i)
#define dfordn(i,a,b) for(i=a; i>b; --i)
#define drep(i,a) for(i=0; i<a; ++i)

#define slenn(s,n) for(n=0; s[n]!='\0'; ++n)

#define gi(x) scanf("%d",&x)
#define gl(x) cin>>x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf("%s",x)

#define pis(x) printf("%d ",x)
#define pin(x) printf("%d\n",x)
#define pls(x) cout<<x<<" "
#define pln(x) cout<<x<<"\n"
#define pds(x) printf("%.12f ",x)
#define pdn(x) printf("%.12f\n",x)
#define pnl() printf("\n")

#define fs first
#define sc second

#define pb push_back

const int inv=numeric_limits<int>::max();
const int minv=numeric_limits<int>::min();

const int max_n=100010;
const int t9=1000000000;

int T;
char S[max_n+5];
int n;

bool check1(int x, int y)
{
	if(S[y]=='0') return false;
	
	string t="";
	for(int i=y; i<=y+x-1; ++i) t+=S[i];
	
	stringstream ss; ss<<t;
	int p; ss>>p;
	int q=p-1;
	
	int ctr=y;
	string s="", ds="";
	while(s.length()<n-y)
	{
		//cerr<<"** "<<s<<"\n";
		
		ss.str(string()); ss.clear();
		
		//cerr<<"** "<<s<<"\n";
		
		if(p>t9) return false;
		ss<<p;
		ss>>ds; s+=ds;
		
		rep(i,ds.size())
			if(ctr<n and ds[i]!=S[ctr++])
				return false;
		//cerr<<"** "<<s<<"\n";
		
		++p;
	}
	
	ds="";
	if(y>0)
	{
		ss.str(string()); ss.clear();
		
		ss<<q;
		ss>>ds; s=ds+s;
	}
	q=ds.length();
	
	for(int i=0; i<n; ++i)
		if(S[i]!=s[q-y+i])
			return false;
	return true;
}

bool check2(int x)
{
	//cerr<<x<<"\n";
	
	if(S[x+1]=='0') return false;
	
	string s="";
	for(int i=0; i<=x; ++i)
		s+=S[i];
	
	for(int i=x; i>=0; --i)
		if(s[i]=='9')
			s[i]='0';
		else
		{
			++s[i];
			break;
		}
	
	//cerr<<"s: "<<s<<"\n";
	
	string pr[10];
	pr[1]=s[0];
	for(int i=2; i<=x+1; ++i)
		pr[i]=pr[i-1]+s[i-1];
	
	int nsf=1;
	string sf[10];
	sf[1]=S[n-1];
	for(int i=2; i<=x+1 and n-i>=x+1; ++i)
	{
		sf[i]=S[n-i]+sf[i-1];
		nsf=i;
	}
	
	int k=0;
	for(int i=1; i<=nsf; ++i)
		if(pr[i]==sf[i])
			k=i;
	
	return ((n-k)<=9);
}

int main()
{
	gi(T);
	
	rep(z,T)
	{
		gs(S); slenn(S,n);
		
		if(n<=9) { printf("YES\n"); continue; }
		
		bool broken=false;
		for(int i=1; i<=9; ++i)
		{
			for(int j=0; j<i and j+i-1<n; ++j)
			{
				//cerr<<i<<" "<<j<<"\n";
				if(check1(i,j))
				{
					//cout<<i<<" "<<j<<"\n";
					printf("YES\n");
					broken=true;
					break;
				}
			}
			
			if(broken)
				break;
		}
		
		if(broken) continue;
		
		//cerr<<"Here\n";
		
		if(n<=17)
		{
			bool special=true;
			int c9; for(c9=0; c9<n and S[c9]=='9'; ++c9);
			special=special and (S[c9]=='1');
			int c0;	for(c0=0; c9+1+c0<n and S[c9+1+c0]=='0'; ++c0);
			special= special and (c9+1+c0==n);
			//cerr<<c0<<" "<<c9<<" "<<special<<"\n";
			if(special)
			{
				if(c9<=9 and c0<=9) printf("YES\n");
				else printf("NO\n");
				continue;
			}
			
			for(int i=0; i<=min(8,n-2); ++i)
				if(check2(i))
				{
					//cerr<<i<<"\n";
					printf("YES\n");
					broken=true;
					break;
				}
		}
		
		if(broken) continue;
		
		printf("NO\n");
	}
	
	return 0;
}