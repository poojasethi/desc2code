#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);








char in[200000];
int n;


int ok(int id1,int id2)
{
    int i,j,k,ln;
    if(in[id1]=='0') return 0;
    if( (id2-id1+1)==10 && in[id1]!='1' ) return 0;
    if( (id2-id1+1)==10 && in[id1]=='1' )
    {
        for(i=id1+1;i<=id2;i++) if(in[i]!='0') return 0;
    }




    int val=0;
    for(i=id1;i<=id2;i++)
    {
        val*=10;
        val+=in[i]-'0';
    }


	int VAL=val;

    char s[12];
    id2++;
    while(val<1000000000 && id2<n)
    {
        val++;
        sprintf(s,"%d",val);

        ln=strlen(s);

        for(i=0;i<ln && id2<n ;i++)
        {
            if(in[id2++]!=s[i]) return 0;
        }
    }
    if(id2!=n) return 0;



	val=VAL;
    id1--;
    while(val>1 && id1>=0 )
    {
        val--;
        sprintf(s,"%d",val);

        ln=strlen(s);

        for(i=ln-1;i>=0 && id1>=0 ;i--)
        {
            if(in[id1--]!=s[i]) return 0;
        }
    }
    if(id1!=-1) return 0;



    return 1;

}

int all_9(string &s)
{
    int i,x=0;
    for(i=0;i<s.length();i++)
    {
        if(s[i]!='x' && s[i]!='9') return 0;
        if(s[i]=='x') x=1;
    }
    if(x==1) return -1;
    else return 1;
}


int ok2(string s1,string s2,int val)
{

    if(s1.length()<s2.length()) return 0;
    if((s1.length()-s2.length())>1   ) return 0;


    int i,j,v;


    if(s1.length()>s2.length())
    {
        if(s1[0]!='1') return 0;
        for(i=1;i<s1.length();i++)
        {
            if(s1[i]=='x') s1[i]='0';
            if(s1[i]!='0') return 0;
        }
        for(i=0;i<s2.length();i++)
        {

            if(s2[i]=='x') s2[i]='9';
            if(s2[i]!='9') return 0;
        }
        return 1;
    }

    int nin=all_9(s2);
    if(nin==1) return 0;








    j=1;
    for(i=s2.length()-1;i>=0;i--)
    {
        if(s2[i]=='x') break;
        v=s2[i]-'0';
        v+=j;
        j=v/10;
        v%=10;
        s2[i]='0'+v;
    }



    for(i=0;i<s1.length();i++)
    {
        if(s1[i]=='x' || s2[i]=='x') {}
        else
        {
            if(s1[i]!=s2[i]) return 0;
        }
    }
    return 1;



}



int ok1(int id)
{

    int i;
    if(in[id]=='0') return 0;
    if( (n-id)==10 && in[id]!='1' ) return 0;




    string s1,s2;

    for(i=id;i<n;i++) s1+=in[i];
    for(i=0;i<id;i++) s2+=in[i];

    int v;
    sscanf(s2.c_str(),"%d",&v);

    while(s1.length()<=10)
    {
        string S2=s2;
        while(S2.length()<=9)
        {
            if(  ok2(s1,S2,v) ) return 1;
            S2='x'+S2;
        }
        s1+='x';
    }
    return 0;
}



int onepass()
{
    int i;
    if(n<=8) return 1;
    if(n==9  && in[0]!='0') return 1;
    if(n==9)
    {
        sscanf(in,"%d",&i);
        if(i==0) return 1;
    }


    if(n==10 && in[0]=='1')
    {
        for(i=1;i<n;i++) if(in[i]!='0') return 0;
        return 1;
    }
    return 0;
}





int main()
{
    //freopen("in1.txt","r",stdin);
    //freopen("out.txt","w",stdout);




    int i,j,k,T;
    scanf("%d",&T);
    while(T--)
    //while(scanf("%s",in)==1)
    {
        scanf("%s",in);
        n=strlen(in);


        if(onepass())
        {
            printf("YES\n");
            goto lst;
        }

        for(i=0; i<10; i++)
            for(j=i; j<MIN(n,i+10); j++)
            {
                if(ok(i,j))
                {
                    printf("YES\n");
                    goto lst;
                }
            }


        if(n>=20)
        {
            printf("NO\n");
            goto lst;
        }








        for(i=0;i<n;i++)
        {
            if( (n-i)>10 || i>9) continue;
            if(ok1(i))
            {
             //   cout<<i<<endl;
            //    asdf
                printf("YES\n");
                goto lst;
            }
        }





        //cout<<in<<endl;
        //asdf


        printf("NO\n");


        lst:
        ;
    }




    return 0;
}
