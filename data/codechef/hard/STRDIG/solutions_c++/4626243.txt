#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long ll;

const int lim = 1000000000;
const int Maxl = 100005;
const int Maxp = 10;

int t;
char s[Maxl];
int slen;
int pw[Maxp];
ll num;
int dig;

bool Inc() 
{
	num++;
	if (num > lim) { num--; return false; }
	if (num / pw[dig]) dig++;
	return true;
}

void incMod()
{
	int ndig = dig;
	Inc();
	dig = ndig; num %= pw[dig];
}

bool Dec()
{
	num--;
	if (num <= 0) { num++; return false; }
	if (num / pw[dig - 1] == 0) dig--;
	return true;
}

int getDigit(int id)
{
	return num / pw[dig - id - 1] % 10;
}

bool checkFull(int pos)
{
	if (!Dec()) return false;
	if (pos > dig) return false;
	int pnt = 0;
	for (int i = dig - pos; i < dig; i++, pnt++)
		if (getDigit(i) != s[pnt] - '0') return false;
	while (pnt < slen) {
		if (!Inc()) return false;
		for (int i = 0; i < dig && pnt < slen; i++, pnt++)
			if (getDigit(i) != s[pnt] - '0') return false;
	}
	return true;
}

bool Check1()
{
	if (slen > 10) return false;
	num = s[0] == '0'? 1: 0;
	for (int i = 0; i < slen; i++)
		num = 10ll * num + s[i] - '0';
	return num <= lim;
}

bool Check2()
{
	for (int i = 1; i <= 9 && i < slen; i++) if (s[i] - '0') {
		num = 0; dig = 0;
		for (int j = 0; j < i; j++) {
			num = 10ll * num + s[j] - '0';
			dig++;
		}
		int ndig = dig;
		if (!Inc()) return false;
		dig = ndig; num %= pw[dig];
		for (int j = max(slen - i, dig); j <= 10; j++) {
			bool ok = true;
			ll res = 0;
			for (int k = 0; k < j && ok; k++)
				if (k < slen - i && k >= j - dig) {
					ok = s[i + k] - '0' == getDigit(k - j + dig);
					res = 10ll * res + s[i + k] - '0';
				} else if (k < slen - i) res = 10ll * res + s[i + k] - '0';
				  else if (k >= j - dig) res = 10ll * res + getDigit(k - j + dig);
				       else res = 10ll * res;
			if (ok && res <= lim) return true;
		}
	}
	return false;
}

int main()
{
	scanf("%d", &t);
	pw[0] = 1;
	for (int i = 1; i < Maxp; i++)
		pw[i] = 10 * pw[i - 1];
	while (t--) {
		scanf("%s", s); slen = strlen(s);
		bool ok = false;
		for (int i = 0; i <= 9 && i < slen && !ok; i++) if (s[i] - '0')
			for (int j = 1; j <= 10 && i + j <= slen && !ok; j++) {
				num = 0; dig = 0;
				for (int k = 0; k < j; k++) {
					num = 10ll * num + s[i + k] - '0';
					dig++;
				}
				ok = num <= lim && checkFull(i);
			}
		printf("%s\n", ok || Check1() || Check2()? "YES": "NO");
	}
	return 0;
}