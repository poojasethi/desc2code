#include <cstdio>
#include <cstdlib>
#include <cassert>
#include <iostream>
#include <set>
#include <vector>
#include <cstring>
#include <string>
#include <algorithm>
#include <cmath>
#include <map>
using namespace std;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vl> vvl;
typedef vector<vi> vvi;
typedef vector<double> vd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
const int mod = 1000000009;

ll mpow (ll x, ll n) {
    ll res = 1;
    while(n) {
        if (n & 1)
            res = res * x % mod;
        x = x * x % mod;
        n /= 2;
    }
    return res;
}

int main() {
    vl inv(110000, 1);
    for (int i = 1; i < inv.size(); ++i)
        inv[i] = mpow(i, mod - 2);
    int T;
    cin >> T;
    for (int test = 1; test <= T; ++test) {
        int n;
        scanf("%d", &n);
//        cerr << test << ' ' << n << endl;
        vi a(n);
        ll res = 1;
        for (int i = 0; i < n; ++i)
            scanf("%d", &a[i]);
//        sort(a.begin(), a.end());
        for (int b = 30; b >= 0; --b) {
            ll mul = 1;
            ll B = 1<<b;
            ll d0 = 1, d1 = 0, all = 1;
            for (int i = 0; i < a.size(); ++i) {
                if (a[i] < B) {
                    mul = mul * (1 + a[i]) % mod;
                } else {
                    a[i] -= B;
                    ll prev = d0;
                    d0 = (d0 * (1 + a[i]) + d1 * B) % mod;
                    d1 = (d1 * (1 + a[i]) + prev * B) % mod;
                    all = all * (1 + a[i]) % mod;
                }
            }
//            cerr << d0 << ' ' << all << endl;
            res = (res + mul * (d0 - all) % mod * mpow(B, mod-2)) % mod;
        }
        cout << (res+mod) % mod << endl;
    }
    return 0;
}
