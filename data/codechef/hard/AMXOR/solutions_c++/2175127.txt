#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);


typedef long long LL;



int a[100010];
LL dp[2][100010];
LL tp;
int n;
LL mod;





int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int T,i,j;


    scanf("%d",&T);
    mod=1000000009;



    while(T--)
    {
        scanf("%d",&n);

        for(i=0;i<n;i++)
        {
            scanf("%d",&a[i]);
        }





        LL ans1=1;
        for(i=30;i>=0;i--)
        {
          //  cout<<i<<endl;


            tp=(LL) (1<<i);

            LL left=1;


            dp[0][n]=1;
            dp[1][n]=0;

            int tp1=tp-1;

            for(j=n-1;j>=0;j--)
            {
                LL v=a[j] & tp1;


                for(int t=0;t<=1;t++)
                {
                    if(a[j ] & tp )
                    {
                        dp[t][j]=( tp*dp[t^1][j+1])%mod;
                        dp[t][j]+=( (v+1)*dp[t][j+1] )%mod;
                    }
                    else
                    {
                        dp[t][j]=( (v+1)*dp[t][j+1] )%mod;
                    }
                    dp[t][j]%=mod;
                }
            }






            LL ans2=0;

            for(j=0;j<n;j++)
            {
                if(a[j] & tp)
                {
                    ans2+= (left*dp[1][j+1])%mod  ;
                }
                LL v=a[j] & tp1;
                left=(left*(v+1))%mod;
            }

            ans1=(ans1+ans2)%mod;



        }




        printf("%lld\n",ans1);





    }
    return 0;
}
