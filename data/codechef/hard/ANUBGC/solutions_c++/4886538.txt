#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <bitset>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%lld",&x)
#define epsilon 0.000000000000001
#define pie acos (-1.0)
#define MAXNODES 100001
#define sz size()
#define MAX 100009
using namespace std;

ill val;
int sec;
ill dp[21][2][2];
string s;
int n;

ill f (int index, int x, int y)
{
    if (index == n) {
        if (y == 1) return 1;
        return 0;
    }
    ill &result = dp[index][x][y];
    if (result != -1) return result;

    result = 0;
    if (y == 1) {
        if (x == 1) {
            result=10*f(index+1,1,1);
            return result;
        }
        int till = (s[index]-'0')+1;
        if (till != 0) result+=(till-1)*f(index+1,1,1);
        result+=f(index+1,0,1);
        return result;
    }

    if (x == 1) {
        result=9*f(index+1,1,0);
        result+=f(index+1,1,1);
        return result;
    }


    int i;
    for (i = 0; i <= (s[index]-'0'); i++) {
        if (index == 0 && i == 0) continue;
        int xx,yy;
        xx = yy = 0;
        xx = 1;

        if (i == (s[index]-'0')) xx = 0;
        if (i == sec) yy = 1;
        result+=f(index+1,xx,yy);
    }
    return result;
}

ill dd[22][15];

ill ff (int n, int x)
{
    ill &result = dd[n][x];
    if (result != -1) return result;

    s = "";
    int i;
    for (i = 0; i < n; i++) s+="9";
    ::n = n;
    memset (dp, -1, sizeof(dp));
    result = f(0, 0, 0);
    return result;
}

ill fff (ill n, ill x)
{
    ill i,sum=0;
    for (i = n; i >= 1; i--) sum+=ff(i,x);
    return sum;
}

ill fun()
{
    memset (dp, -1, sizeof(dp));
    return f(0, 0, 0)+fff(n-1, sec);
}

ill gcd (ill a, ill b)
{
    if (b == 0) return a;
    return gcd(b,a%b);
}

void nor (ill a, ill b)
{
    ill s = gcd (a,b);
    printf ("%lld/%lld\n",a/s,b/s);
}

int main()
{
   // freopen ("input.txt", "r", stdin);

    int t;
    S (t);

    memset (dd, -1, sizeof(dd));
    for (int i = 0; i <= 17; i++) {
        for (int j = 0; j <= 9; j++) {
            sec = j;
            if (i == 0) {
                dd[i][j] = 0;
                continue;
            }
            dd[i][j] = ff(i,j);
        }
    }

    while (t--) {
        S1 (val);
    //    val = 10000000000000000LL;
        stringstream is;
        is<<val;
        s = is.str();
        n = s.size();

        ill res=0;

        for (sec = 0; sec <= 9; sec++) {
         //  cout << sec << " --> " << fun() << endl;
            res+= fun();
        }
        nor (res, val*10);
        //cout << res << endl;
        //printf ("%.9f\n", res);
    }


    return 0;
}
