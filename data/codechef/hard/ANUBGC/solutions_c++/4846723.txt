#include<bits/stdc++.h>
using namespace std;

#define i64 long long
i64 dp[20][2][2][2];          //i tight found started
char globaldigit;
string s;
     
// property function check digit is present or not   				
i64 func(i64 i,bool lt,bool st,bool found)
{
	if(i==s.length())
	return found;	
	
	if(dp[i][lt][st][found]!=-1)
	return dp[i][lt][st][found];
	
	i64 ret=0;
		
	bool nst, nlt, nfound;
	for(char cdigit='0'; cdigit<='9'; cdigit++) {
		//cout<<"* "<<s[i]<<endl;
		if(!lt && cdigit > s[i]) break;
		nst = st || cdigit != '0';
		nlt = lt || cdigit < s[i];
		nfound = nst && (found || cdigit == globaldigit);
		ret += func(i+1, nlt, nst, nfound);
	}
	dp[i][lt][st][found]=ret;
	//cout<<globaldigit<<" "<<i<<" "<<lt<<" "<<st<<" "<<found<<" "<<dp[i][lt][st][found]<<endl;
	return ret;
}

int main()
{
	ios_base::sync_with_stdio(false);
	i64 t,a,ans=0,digit;
	cin>>t;
	while(t--)
	{
		cin>>a;
		{ ostringstream ss; ss << a; s = ss.str(); }
		ans=0;
		for(digit=0;digit<10;digit++){
			globaldigit=digit+'0';
			memset(dp,-1,sizeof dp);
			ans+=func(0,0,0,0);
			//cout<<endl;
		}
		i64 g=__gcd(ans,10*a);
		cout<<ans/g<<"/"<<10*a/g<<endl;
	}
	return 0;
}	

