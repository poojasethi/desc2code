/*-----digit DP-----*/
#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;

const int mod=(int)1e9+7,maxn=100005,ln=17;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
//#define getcx getchar_unlocked
#define getcx getchar
/*inline void S(int& n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}*/
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define modulo(x,y,z) (x+y)<0?x+y+z:((x+y>=z)?x+y-z:x+y)
#define Debug(x) cout << #x << "=" << x << endl
#define Debugarr(x,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,n) cout<<ij<<". "<<x[ij]<<endl; cout<<endl
#define Debugarr2(x,m,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,m) {F(jk,0,n) cout<<x[ij][jk]<<" "; cout<<endl;} cout<<endl
#define pii pair<LL,int>
#define Fi first
#define Se second
#define chk(x,n) (x[n>>5]&(1<<(n&31))) //unsigned int
#define set(x,n) (x[n>>5]|=(1<<(n&31)))//32 bit
const int shift=50,etf=mod-1;

const LL inf=(LL)1e18+1;

const double PI=(double)3.141592653589793238,EPSILON=1e-10;

bool memo[2][2][20];
LL dp[2][2][20];

int decimal[20];

void _clear()
{
    memset(memo,0,sizeof memo);
}

int convert(LL num)
{
    int pos=0;
    while(num)
    {
        int r=num%10;
        decimal[pos++]=r;
        num/=10;
    }
    /*F(i,0,pos)
    {
        cout<<decimal[i]<<" ";
    }
    cout<<endl;
    Debug(pos);*/
    return pos;
}

LL func(int start,int flag,int dig,int pos)
{
    /*if(dig==1)
    printf("start=%d flag=%d dig=%d pos=%d\n",start,flag,dig,pos);*/
    if(pos==0)
    {
        return flag;
    }
    if(memo[start][flag][pos])
        return dp[start][flag][pos];
    memo[start][flag][pos]=1;
    LL ret=0;
    F(i,0,10)
    {
        if(start==0&&i==0)
        {
            ret+=func(0,0,dig,pos-1);
        }
        else
        {
            ret+=func(1,flag||(i==dig?1:0),dig,pos-1);
        }
    }
    dp[start][flag][pos]=ret;
    return ret;
}

LL solve(LL num,int dig)
{

     _clear();
    int len=convert(num);
    LL ret=0,flag=0;
    I(i,len,1)
    {
        int d=decimal[i-1];
        F(j,0,d)
        {
            if(i==len&&j==0)
            {
                ret+=func(0,0,dig,i-1);
            }
            else
            {
                ret+=func(1,flag||(j==dig?1:0),dig,i-1);
            }
        }
        if(d==dig)
        flag=1;
    }
    return ret;
}

int main()
{
    /*#ifndef ONLINE_JUDGE
    freopen("inp0.txt","r",stdin);
    freopen("out0.txt","w",stdout);
    #endif*/
    int t;
    S(t);

    while(t--)
    {
        LL n;
        cin>>n;

        LL ans=0;

        F(i,0,10)
        {
            LL temp=solve(n+1,i);
            ans+=temp;
            //Debug(temp);
        }
        n*=10;
        LL g=__gcd(ans,n);
        printf("%lld/%lld\n",ans/g,n/g);
    }
    return 0;
}
