/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))
#define TRACE
using namespace std;
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif
ll Dp[20][2][2][2];
string s ;
int d ;  
ll rec(int i, bool lt,bool st,bool founded)        // if lt -> 0 then equal else lessthan .. 
{
	if(i==s.length())
		 return founded;
	ll &ret = Dp[i][lt][st][founded];
	if(ret != -1) return ret ; 
    ret =0 ; 
    bool nlt,nst,nfounded;
	for(int j=0;j<=9;j++)
	{
		if(!lt && s[i]-'0' < j ) break ;
      
      nst = ((j!=0) || st );
      nlt = ((s[i]-'0') > j) || lt ;

      nfounded = ((j == d || founded) && nst) ; 
    ret+=rec(i+1,nlt,nst,nfounded); 
	}
return ret ; 
}
int main()
{ 
         #ifdef _WIN32 
           freopen("input.txt", "r", stdin);
           //freopen("output.txt","w",stdout);
          #endif // LOCAL_USER  
geti(t);
while(t--)
{  ll n,a=0 ;  
	cin>>n;
	stringstream ss ;
	ss<<n;
	ss>>s;
	//cout<<s;
	for(int i=0;i<=9;i++)
	{   mem(Dp,-1);
		d = i ; 
		a+=rec(0,0,0,0);
	    //trace2(i,a);
	}
//trace1(a);
//continue ;	
ll k = __gcd(a,(10*n));
ll x = a/k,y=(10*n)/k ;
cout<<x<<"/"<<y<<endl;
}
return 0 ; 
}