/* Created by Anmol Varshney */

#include <stdio.h>
#include <string.h>
#include <string>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define ARRAY_SIZE(arr) sizeof(arr)/sizeof(arr[0])
#define INF_LL 9223372036854775807LL
#define PI acos(-1.0)
#define llu long long unsigned
#define ll long long int
#define ld long int
#define iter(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define REP(p,a,b) for(int p=a;p<b;p++)
#define mod 1000000007
#define getchar_unlocked getchar
#define pb(f) push_back(f)
#define pob(f) pop_back(f)
#define pf(f) push_front(f)
#define pof(f) pop_front(f)
#define mkp(a,b) make_pair(a,b)
#define fst first
#define snd second
#define pii pair<int,int>
#define ins(a) insert(a)

ll gcd(ll a,ll b)
{
    if(b>a) return gcd(b,a);
    else if(b!=0) return gcd(b,a%b);
    else return a;
}

string to_string(ll num)
{
    stringstream ss;
    ss << num;
    return ss.str();
}

ll dp[18][2][2][2];
int n;
string y;

ll f(int pos,bool smaller_or_not,bool contains,bool nozero,int d)
{
    if(pos==n)
        return contains;

    if(dp[pos][smaller_or_not][contains][nozero]!=-1)
        return dp[pos][smaller_or_not][contains][nozero];

    ll res=0;
    bool newnozero;

    REP(i,0,10)
    {
        if(smaller_or_not||(i<=(int)(y[pos]-'0')))
        {
            newnozero=(nozero||(i!=0));
            res+=f(pos+1,(smaller_or_not||(i<(int)(y[pos]-'0'))),(newnozero && (contains || (i==d))),newnozero,d);
        }
    }
    dp[pos][smaller_or_not][contains][nozero]=res;
    return res;
}

int main() {
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t;
    ll ans,N,g;
    cin>>t;
    while(t--)
    {
        cin>>N;
        y=to_string(N);
        n=y.size();
        ans=0;
        REP(i,0,10)
        {
            REP(q,0,18)
                REP(w,0,2)
                    REP(e,0,2)
                        REP(r,0,2)
                            dp[q][w][e][r]=-1;
            ans+=f(0,false,false,false,i);
        }
        N*=10;
        g=__gcd(ans,N);
        cout<<(ans/g)<<"/"<<(N/g)<<endl;
    }
    return 0;
}
