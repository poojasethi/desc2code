// Author: thecodekaiser
#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
#define MXN 20
#define MOD 1000000007

ll mem[MXN][2][2][2];			// mem[digit][lo][flag][hS]
int len, C;
char str[MXN];


ll gcd(ll A, ll B)
{
	if(A % B == 0)
		return B;
	else
		return gcd(B, A%B);
}

ll dp(int id, int tight, int flag, int hs)
{
	ll ret = mem[id][tight][flag][hs];

	if(ret != -1)
		return ret;

	
	if(id == len)
	{
		if(flag > 0 and hs > 0)
			return 1;
		else
			return 0;
	}
	else
	{
		ret = 0;
	
		for(int dig = 0; dig < 10; dig++)
		{
			if(tight > 0 and dig > (str[id]-'0'))
				continue;

			int ntight = 0;
			if(tight > 0)
			{
				if(dig == (str[id]-'0'))
					ntight = 1;
			}
	
			int nhs = 0;
			if(hs > 0)
				nhs = 1;
			else
			{
				if(dig != 0)
					nhs = 1;
			}

			int nflag = 0;
			if(flag > 0)
				nflag = 1;
			else
			{
				if(nhs > 0 and dig == C)
					nflag = 1;
			}

			ret += dp(id+1, ntight, nflag, nhs);
		}
	}
	
	mem[id][tight][flag][hs] = ret;
	return ret;
}

ll calc(ll X)
{
	sprintf(str, "%lld", X);
	
	len = strlen(str);
	ll ans = 0;
	for(int i = 0; i <= 9; i++)
	{
		memset(mem, -1, sizeof(mem));
		C = i;
		ll val = dp(0, 1, 0, 0);
		//cout << "For i: " << i << " ans: " << val << endl;
		ans += val;
	}

	return ans;
}

void solve()
{
	ll N;
	scanf("%lld",&N);

	ll num = calc(N);
	ll den = 10 * N;
	
	ll g = gcd(num, den);
	num /= g;
	den /= g;

	printf("%lld/%lld\n",num,den);
	return;
}

int main()
{
	int t;
	cin >> t;
	while(t--)
		solve();

	return 0;
}

	