#include <iostream>
#include<stack>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
using namespace std;

#define gc getchar
#define p 1000000007
#define MOD 1000000007
#define pc(x) putchar(x)
#define pi(n) printf("%d",n)
#define pis(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define ull unsigned long long
#define EPS 1e-9
#define infi 2000000000
#define linfi 2000000000000000000

inline int sn()
{
	int n=0;
	int ch=gc();
	while( ch <48 )ch=gc();
	while( ch >47 )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	    return n;
}

inline void wi(int n)
{
	int N = n, rev, count = 0;
	rev = N;
	if (N == 0) { pc('0');  return ;}
	while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
	rev = 0;
	while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
	while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
	while (count--) pc('0');
}
	
	
ll d,n;	
ll x[20][2][2][2];

ll f(ll i,ll done,ll lo,ll check);
ll pow(ll n);
ll dig(ll n);
ll gcd(ll a,ll b);

ll f(ll i,ll done,ll lo,ll check,ll some)
{
	/*pll(i);ps;
	pll(done);ps;
	pll(lo);ps;
	pll(check);ps;
	pll(some);pn;*/
	
	if(x[i][done][lo][some]!=-1) 
	{	
		//printf("	%lld %lld %lld %lld\n",i,done,lo,x[i][done][lo][some]);	
		return x[i][done][lo][some];
	}
	if(i==d+1) 
	{
		if(done==1 && lo==1)
		{ 
			x[i][done][lo][some]=1;
			//printf("	%lld %lld %lld %lld\n",i,done,lo,x[i][done][lo][some]);
			return 1;		
		}
		else 
		{ 
			x[i][done][lo][some]=0;
			//printf("	%lld %lld %lld %lld\n",i,done,lo,x[i][done][lo][some]);
			return 0;		
		}		
	}
	ll h,j,res=0,l;
	h=n/pow(d-i);
	h=h%10;	
	
	if(lo==1) l=9;
	else
	{	
		l=h;
	}
	fu(j,0,l)
	{
		if(j!=0)
			res+=f(i+1,done||(j==check),lo||(j<h),check,1);
		else
		{
			if(some==1)
				res+=f(i+1,done||(j==check),lo||(j<h),check,1);
			else
				res+=f(i+1,done,lo||(j<h),check,some);
		}
	}
	x[i][done][lo][some]=res;
	//printf("	%lld %lld %lld %lld\n",i,done,lo,x[i][done][lo][some]);
	return res;
}

ll pow(ll n)
{
	ll t=1;
	while(n)
	{
		t*=10;
		n--;
	}
	return t;
}

ll dig(ll n)
{
	ll t=0;
	while(n)
	{
		t++;
		n/=10;
	}
	return t;
}
 
ll gcd(ll a,ll b)
{
	if(b==0) return a;
	else return gcd(b,a%b);
} 
 
int main()
{
	ll t,i,ans,m,g;
	scanf("%lld",&t);	
	while(t--)
	{
		ans=0;
		scanf("%lld",&n);
		m=10*n;
		n+=1;
		d=dig(n);
		rep(i,10)
		{
			memset(x,-1,sizeof(x));
			ans+=f(1,0,0,i,0);		
		}
		g=gcd(ans,m);
		//pll(ans/g);ps;
		//pll(m/g);pn;
		printf("%lld/%lld\n",ans/g,m/g);
	}    
    return 0;
}















