#include <bits/stdc++.h>
using namespace std;
#define ll long long
ll _pow10[19],pow9[19];
void pre()
{
	_pow10[0] = 1;
	pow9[0] = 1;
	for(int i = 1;i<=18;i++)
	{
		_pow10[i] = 10*_pow10[i-1];
		pow9[i] = 9*pow9[i-1];
	}
}
ll count1(int i,int j,int k)
{	
	if(i>k)
	{
		i--;
	}
	return (i*pow9[j]);
}
ll count2(int i,int j,int k)
{	
	if(j==0)
		return i*pow9[j];

	return ((pow9[j+1]-1)/8 -1) + (i-1)*pow9[j] ;
	
}
ll c1(int k,ll n)
{
	stringstream ss;
	ss << n;
	string s;
	ss >> s;
	ll num=0;
	int len=s.length();

	/*if(k!=0)
	{		
		for(int i = 0;i<s.length();i++)
		{
			int x = s[i]-'0';
			num+=count1(x,len-i-1,k);
			if(x == k)
			{
				return num;
			}
		}
		num++;		
		return num;
	}
	
	num += count2(s[0]-'0',len-1,k);
	// cout << "ve " << k << " " << num << endl;
	for(int i = 1;i<len;i++)
	{
		int x = s[i]-'0';
		num+=count1(x,len-i-1,k);
		// cout << "vf " << k << " " << num << endl;
		if(x == k)
		{
			return num;
		}
	}
	if(len > 1) num++;
	return num;
*/
	for(int i = 0;i<s.length();i++)
		{
			int x = s[i]-'0';
			num+=count1(x,len-i-1,k);
			if(x == k)
			{
				return num;
			}
		}
		return num;
}
ll count(int k, ll n)
{
	vector<int> A;
	stringstream ss;
	ss << n;
	string s;
	ss >> s;
	ll num=0;
	int len=s.length();

	if(k!=0)
	{		
		for(int i = 0;i<s.length();i++)
		{
			int x = s[i]-'0';
			num+=count1(x,len-i-1,k);
			if(x == k)
			{
				return num;
			}
		}
		num++;		
		return num;
	}
	
	num += count2(s[0]-'0',len-1,k);
	// cout << "ve " << k << " " << num << endl;
	for(int i = 1;i<len;i++)
	{
		int x = s[i]-'0';
		num+=count1(x,len-i-1,k);
		// cout << "vf " << k << " " << num << endl;
		if(x == k)
		{
			return num;
		}
	}
	if(len > 1) num++;
	return num;

	// ll x1 = n-c1(k,n);
	// n%=_pow10[len-1];
	// ll x2 = n-c1(k,n);
	// return x1-x2;

}
ll bruteforceans(ll n)
{
	int A[10]={0};
	for(int i = 1;i<=n;i++)
	{
		ll k = i;
		bool came[10]={0};
		while(k)
		{	int j = k%10;
			if(!came[j])
			{
				A[j]++;
				came[j] = 1;
			}
			k/=10;
		}
	}
	ll sum=0;
	for(int i = 0;i<=9;i++)
	{
		sum+=A[i];
	}
	return sum;
}
int main()
{
	pre();

	int t;
	ll n;
	cin>>t;
	// t = 1000;
	while(t--)
	{
		cin>>n;
		// n = 1000-t;

		ll num = 0;

		for(int i = 0;i<=9;i++)
		{
			// cout << i << " " <<  ((i==0) ? n-count(i,n) : n-count(i,n)+1) << endl;
			num += ((i==0) ? n-count(i,n) : n-count(i,n)+1);
			//num+=n-count(i,n);	                                    
		}
		// ll num1 = bruteforceans(n);

		// if(num1 != num) {
		// 	cerr << n << " " << num1 << " " << num << endl;
		// 	return 0;
		// }
		// int A[10] = {0};

		// stringstream ss;
		// ss << n;
		// string s;
		// ss >> s;

		// for(int i=0; i<s.length(); i++) {
		// 	if(s[i]-'0'>0 && A[s[i]-'0']==0)
		// 		num++, A[s[i]-'0']=1; 
		// }

		ll den = 10*n;
		ll x = __gcd(num,den);
		num/=x;
		den/=x;
		cout<<num<<"/"<<den<<endl;
	}
	return 0;
}
