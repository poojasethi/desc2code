#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
lli dp[20][2][2][2];// index, flag, statues , used_nonzero,
// flag is bascically the tight bound 
int n;
string s;
lli solve(int idx,bool flag,bool status,bool nz,int num)
 {
 	if(idx==n)
 	  { 
 	      return status;
	  }
	  else if(dp[idx][flag][status][nz]!=-1)
	   {
	   	 return dp[idx][flag][status][nz];
	   }
	  
	  else if(flag==0)
	     {
	   	   lli ret=0;
	   	  for(int i=0;i<=9;i++)
	   	   {
	   	   	     bool nzz= nz || i;
	   	   	     bool stat =(status   || (num == i)) && (nzz!=0);
				ret+=solve(idx+1,0,stat,nzz,num);
	       }
	       dp[idx][flag][status][nz]=ret;
	       return ret;
		 }
	   else
	   {
	   	  lli ret=0;
	   	  for(int i=0;i<=s[idx]-'0';i++)
	   	   {
	   	   	    bool nzz= nz || i;
	   	   	     bool stat =(status   || (num == i)) && (nzz!=0);
	   	   	   if(s[idx]-'0'==i)
	   	   	    {
	   	   	    	  ret+=solve(idx+1,1,stat,nzz,num);
				}
				else 
				ret+=solve(idx+1,0,stat,nzz,num);
	       }
	       dp[idx][flag][status][nz]=ret;
	       return ret;
     }
}
int main()
 {
 	int t;
 	 cin>>t;
 	 while(t--)
 	   {
 	  	 memset(dp,-1,sizeof dp);
 	  	     cin>>s;
 	  	  	lli ans=0;
 	  	  n=s.length();
 	  	  lli num=0;
 	  	      for(int i=0;i<n;i++)
 	  	      {
 	  	   	    num=num*10+(s[i]-'0');
			  }
 	  	     for(int i=0;i<=9;i++)
 	  	     {
 	  	     	memset(dp,-1,sizeof dp);
 	  	   	    ans+=solve(0,1,0,0,i);
 	  	   	  //    cout<<i<<" "<<ans<<endl;
			 }
 	  	 
 
 	  	   num=num*10;
 	  	    //cout<<ans<<" "<<num<<endl;
 	  	   lli gc=__gcd(num,ans);
 	  	    cout<<ans/gc<<"/"<<num/gc<<endl;
 	  	 
	   }
	   return 0;
 }