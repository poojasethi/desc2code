#include<bits/stdc++.h>
using namespace std;
string s;
char dig;
long long dp[20][2][2][2];
long long solve(int i,bool lt,bool st,bool f)
{
	if(i==s.length())return f;
	long long& ret=dp[i][lt][st][f];
	if(ret!=-1)return  ret;
	ret=0;
	bool nlt,nst,nf;
	for(char d='0';d<='9';d++)
	{
		if(lt==0 && d>s[i])break;
		nlt=lt|| d<s[i];
		nst=st || (d!='0');
		nf=(f || (d==dig)) && nst;
		ret+=solve(i+1,nlt,nst,nf);
	}
	return ret;
}
long long gcd(long long a,long long b)
{
	if(b==0)
	return a;
	else
	return gcd(b,a%b);
}
int main()
{
	long long t,n;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld",&n);
		ostringstream ss;
		ss<<n;
		s=ss.str();
		long long num=0,den=10*n;
		for(dig='0';dig<='9';dig++)
		{
			memset(dp,-1,sizeof(dp));
			num+=solve(0,0,0,0);
		}
		long long k=gcd(num,den);
		long long n=num/k,d=den/k;
		printf("%lld/%lld\n",n,d);
	}
	return 0;
}