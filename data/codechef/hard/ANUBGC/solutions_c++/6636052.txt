#include<bits/stdc++.h>

#define ll long long int
#define s(a) scanf("%lld",&a)

using namespace std;
ll dp[20][4][4];
ll mem[20][4][4];
ll k,len;
ll gcd(ll a,ll b)
{
   if(a==0)
   return b;
   
   return gcd(b%a,a);
}
string itos(ll n){
    stringstream st;
    st << n;
    return st.str();
}
ll fun(ll pos,ll started, ll found)
{ 
   //cout<<pos<<" "<<started<<" "<<found<<endl;
   if(pos==len)
   {
       if(started && found)
       return 1;
       
       return 0;
   }
   ll ans=0,i,start,fou;
   
   if(mem[pos][started][found])
   return dp[pos][started][found];
   
   for(i=0;i<=9;i++)
   {
      if(started || i!=0)
      start=1;
      else
      start=0;
      if(i==k && k==0)
      {
        if(start || found)
        fou=1;
        else
        fou=0;
      }
      else if(found || i==k)
      fou=1;
      else
      fou=0;
      
      ans+=fun(pos+1,start,fou);
   }
   mem[pos][started][found]=true;
   return (dp[pos][started][found]=ans);
   
}

int main()
{
   ll t;
   s(t);
 while(t--)
 {
   ll n;
   memset(mem,0,sizeof(mem));
   s(n);
   string s = itos(n);
   len = s.size();
   //cout<<s<<" "<<len;
  ll ans[11],found,started,i,j,start,fou,fans;
   //cout<<k;
   fans=0;
   memset(ans,0,sizeof(ans));
   
   for(k=0;k<=9;k++)
   {
      found=started=0;
  
               for(i=0;i<len;i++)
               {
                               ll temp=s[i]-'0';   
                     for(j=0;j<temp;j++)
                     {
                         if(j!=0 || started)
                         start=1;
                         else
                         start=0;
                         
                         if(j==k && k==0)
                         {
                            if(start || found)
                            fou=1;
                            else
                            fou=0;
                         }
                         else if(j==k || found)
                         fou=1;
                         else
                         fou=0;
                         
                         ans[k]+=fun(i+1,start,fou);                 
                       
                     }
                     started=1;
                     
                     if(temp==k)
                     found=1;
                     //cout<<x<<k<<found;
                     
               }
               //cout<<found;
               
               if(found)
               ans[k]++;
               //cout<<k<<" "<<ans[k]<<endl;
               memset(mem,0,sizeof(mem));
      fans+=ans[k];
   }         
   //cout<<fans;
   ll get_gcd = gcd(fans,10*n);
   ll num = fans/get_gcd;
   ll den = 10*n/get_gcd;
   
   printf("%lld/%lld\n",num,den);
   
  }
  
  
  return 0;
   
   
}
