#include <iostream>
#include <cstdio>
#include <sstream>
#include <cstring>
using namespace std;

long long dp[20][2][2][2];

string s;
char globalDigit;

long long solve(int i,bool lt,bool st, bool found)
{
    if(i==s.length())return found;
    long long &ret=dp[i][lt][st][found];
    if(ret!=-1)return ret;
    ret=0;
    bool nst,nlt,nfound;
    for(char cdigit='0';cdigit<='9';cdigit++)
    {
        if(!lt && cdigit>s[i])break;
        nst=st||cdigit!='0';
        nlt=lt||cdigit<s[i];
        nfound=nst&&(found||cdigit==globalDigit);
        ret+=solve(i+1,nlt,nst,nfound);
    }
    return ret;
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        long long n,num=0,den;
        scanf("%lld",&n);
        den=n*10;
        {
            ostringstream ss;ss<<n;s=ss.str();
        }

        int len=s.length();
        for(char digit='0';digit<='9';digit++)
        {
            memset(dp,-1,sizeof(dp));
            globalDigit=digit;
            num+=solve(0,0,0,0);
        }
        long long a=num,b=den,c;
        while(b){c=a%b;a=b;b=c;}
        num/=a;
        den/=a;
        printf("%lld/%lld\n",num,den);
    }
    return 0;
}
