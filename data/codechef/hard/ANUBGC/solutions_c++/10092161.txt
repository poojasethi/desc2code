#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll dp[20][2][2][2];
int whichDigit;
vector<int> v;
int sz=0;
ll fun(int idx, int tight, int hasCome, int actualDigitStarted) {
        ll res = dp[idx][tight][hasCome][actualDigitStarted];
        if (res != -1)
            return res;

        if (idx == sz) {
            if (actualDigitStarted > 0 && hasCome > 0)
                res = 1;
            else
                res = 0;
        } else {
            res = 0;
            for (int i = 0; i < 10; i++) {
                if (tight > 0 && i > v[idx])
                    continue;

                int newId = idx + 1;
                int newTight = 0;
                if (tight == 1) {
                    if (i == v[idx])
                        newTight = 1;
                }
                int newActualDigitStarted = 0;
                if (actualDigitStarted > 0) {
                    newActualDigitStarted = 1;
                } else {
                    if (i != 0)
                        newActualDigitStarted = 1;
                }
                int newHasCome = 0;
                if (newActualDigitStarted > 0 && i==whichDigit) {
                    newHasCome = 1;
                }
                if (hasCome > 0) {
                    newHasCome = 1;
                }

                res += fun(newId, newTight, newHasCome, newActualDigitStarted);
            }
        }

        dp[idx][tight][hasCome][actualDigitStarted]=res;
        return res;
    }
int main()
{
    ll t,n,temp;
	cin>>t;
	while(t--)
	{
		cin>>n;
		temp=n;
		v.clear();
		while(temp)
		{
			v.push_back(temp%10);
			temp/=10;
		}
	 reverse(v.begin(),v.end());
	 sz=v.size();
	
     ll den = n*10;
     ll num=0 ;
    //for(int i=0;i<sz;i++)
    //cout<<v[i]<<" ";
    
	 for(int i=0;i<10;i++)
	 {
	 	 for (int i = 0; i < 20; i++)
                for (int j = 0; j < 2; j++)
                    for (int k = 0; k < 2; k++)
                        for (int l = 0; l < 2; l++)
                            dp[i][j][k][l] = -1;
 		whichDigit=i;
 		
 		num+=fun(0,1,0,0);
 		//cout<<"hii  "<<num<<endl;;
 		
 	}
 	//cout<<"x=="<<num<<"y=="<<den<<endl;
	long long x = num, y = den;
    while (x > 0 && y > 0)
      if (x > y) x %= y;
      else y %= x;
    num /= x + y;
    den /= x + y;
    printf("%lld/%lld\n", num, den);
	}
	
}