#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz(x) (int)(x.size())
#define all(a) a.begin(), a.end()
#define INF numeric_limits<long long>::max()
#define oo  numeric_limits<int> :: max()
#define CLR(s) memset(s, false, sizeof(s))
//#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define DBG(s) cerr << #s << "  == > " << s << endl
typedef long long lld;
typedef vector <int> vi;
typedef pair< int, int > pii;
typedef vector <pii> vpii;
#define MAX 20
lld dp[MAX][2][2][2];
int n;
vi a;
lld b[10];
int D;
lld solve(int index, int tight, int start,int found)
{
	if(index == n)
	{
		if(start) return found;
		else return 0;
	}
	  
	
	lld &ret = dp[index][tight][start][found];
	if(ret != -1) return ret;
	ret = 0;
	int nstart,nfound;
	if(tight == 1)
	{
		for(int i = 0; i <= a[index]; i++)
		{
			nstart = start | (i != 0);
			nfound = (found | (i == D)) & nstart  ;// DBG(nfound);
			if(i == a[index])
			{
				ret += solve(index+1, 1,nstart,nfound);
			}
			else
			{
				ret += solve(index+1, 0,nstart,nfound);
			}
				
		}
	}
	else if(tight == 0)
	{
		for(int i = 0; i < 10; i++)
		{
			nstart = start | (i != 0);
			nfound = (found | (i == D))  & nstart;
			ret += solve(index+1, 0,nstart,nfound);
		}
	}
	return ret;
}

void convert(lld m)
{
	a.clear();
	while( m != 0)
	{
		int g = m % 10;
		a.pb(g);
		m = m / 10;
	}
	reverse(all(a));
	n = sz(a);
}

lld gcd(lld m, lld n)  
{
	if ( m == 0)
	 return n;
	 return gcd(n % m, m);
 }

int main()
{
	
	int t; cin >> t;
	while(t--)
	{
		memset(b,0,sizeof b);
		lld num;
		cin >> num;
		convert(num);
		
		for(int i = 0; i < 10; i++)
		{
			memset(dp,-1,sizeof dp);
			D = i;
			b[i] = solve(0,1,0,0);
			//cout << b[i] << " ";
		}
		//cout << endl;
		
		lld numerator = 0;
		for(int i = 0; i < 10; i++)
		{
			numerator += b[i];
		}
		lld den = 10*num; //DBG(den);
		lld g = gcd(numerator, den); //DBG(g);
		lld x = numerator / g;
		lld y = den / g;
		cout << x << "/" << y  << endl;
		
		
	}
  return 0;	
}
