#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long

LL dp[25][2][2][2];
int n;
char num[25];
int cur;
LL solve(int pos,int tight,int found,int started) {
    if(pos==n) {
        if(found)
            return 1;
        return 0;
    }
    if(dp[pos][tight][found][started]!=-1) {
        return dp[pos][tight][found][started];
    }
    LL ans=0;
    int tgt;
    for(int i=0;i<=9;i++) {
        if(!tight && i>(num[pos]-'0')) {
            break;
        }
/*      if(i>=(num[pos]-'0')) {
            tgt=tight;
        }
        else
            tgt=0;*/
        ans+=solve(pos+1,tight|(i<(num[pos]-'0')), (started | (i>0)) && (found|(i==cur)),started|(i>0));
    }
    return dp[pos][tight][found][started]=ans;
}
int main() {
    int t;sci(t);
    while(t--) {
        scanf("%s",num);
        n=strlen(num);
        LL N=0;
        for(int i=0;i<n;i++) {
            N=N*10;
            N+=(num[i]-'0');
        }
        LL temp=0;
        for(int i=0;i<10;i++) {
            M(dp,-1);
            cur=i;
            temp+=solve(0,0,0,0);
        }
        LL pp=__gcd(temp,N*10);
        cout<<temp/pp<<"/"<<(N*10)/pp<<endl;
    }
}
