#include <bits/stdc++.h>

using namespace std;

#define ll long long

ll mem[20][10][2][2];

ll gcd(ll a, ll b)
{
	if (b==0)
		return a;
	else
		return gcd(b,a%b);
}

ll digit_dp(int len, int dig, bool seen, bool all0)
{
    //cout << len << " " << dig << " " << seen << " " << endl;
    if(len==0){
        if(all0)
            return 0;
        else{
            if(seen)
                return 1ll;
            else
                return 0ll;
        }
    }
    if(mem[len][dig][seen][all0]!=-1)
        return mem[len][dig][seen][all0];
    int j;
    ll ret=0ll;
    for(j=0; j<=9; j++){
        if(j==dig){
            if(dig==0){
                if(all0)
                    ret+=digit_dp(len-1, dig, false, true);
                else
                    ret+=digit_dp(len-1, dig, true, false);
            }
            else
                ret+=digit_dp(len-1, dig, true, false);
        }
        else
            ret+=digit_dp(len-1, dig, seen, false);
    }
    mem[len][dig][seen][all0]=ret;
    //cout << "ans " <<  ret << " " << len << " " << dig << " " << seen << " " << endl;
    return ret;
}

ll solve(ll num, int dig)
{
    char s[100];
    sprintf(s, "%lld", num);
    int i, len, j, d, x, cur;
    ll ret=0ll;
    len=strlen(s);
    cur=len;
    bool seen;
    for(i=0; i<len; i++){
        seen=false;
        cur--;
        for(j=0; j<i; j++){
            if(s[j]-'0'==dig){
                seen=true;
                break;
            }
        }
        d=s[i]-'0';
        for(j=0; j<d; j++){
            if(j==dig){
                if(dig==0 && i==0)
                    ret+=digit_dp(cur, dig, false, true);
                else
                    ret+=digit_dp(cur, dig, true, false);
            }
            else
                ret+=digit_dp(cur, dig, seen, false);
            //cout << "here " << i << " " << j << " " << dig << " " << ret << endl;
        }
        //cout << ret << "\n";
    }
    return ret;
}

int main()
{
    memset(mem, -1, sizeof(mem));
    int t, i;
    ll n, x, y, g;
    scanf("%d", &t);
    while(t--){
        scanf("%lld", &n);
        ll ans=0ll;
        for(i=0; i<=9; i++){
            ans+=solve(n+1, i);
            //cout << "boom " << solve(n+1, i) << endl;
        }
        x=10*n;
        g=gcd(ans, x);
        ans/=g;
        x/=g;
        printf("%lld/%lld\n", ans, x);
    }
    return 0;
}
