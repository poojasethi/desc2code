#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;

const int mod=1e9+7,maxn=10005,ln=18;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
//#define getcx getchar_unlocked
#define getcx getchar
/*inline void S(int& n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}*/
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define Debug(x) cout << #x << "=" << x << endl
#define Debugarr(x,n) cout<<"array "<<#x<<":"<<endl; F(i,0,n) cout<<i<<". "<<x[i]<<endl; cout<<endl
#define Debugarr2(x,m,n) cout<<"array "<<#x<<":"<<endl; F(i,0,m) {F(j,0,n) cout<<x[i][j]<<" "; cout<<endl;} cout<<endl
#define pii pair<unsigned long long int,unsigned long long int>
#define chk(x,n) (x[n>>5]&(1<<(n&31))) //unsigned int
#define set(x,n) (x[n>>5]|=(1<<(n&31)))//32 bit
const int shift=30,etf=mod-1;
 LL inf= ((LL)1e9*(1e9));

LL a[maxn];

LL cal[62][maxn];
LL sum[maxn];


void pre()
{
    F(i,1,maxn)
    {
        cal[0][i]=1;
    }

    F(i,1,62)
    {
        F(j,1,maxn)
        {
            if(inf/j>=cal[i-1][j])
            {
                cal[i][j]=cal[i-1][j]*j;
            }
            else
                cal[i][j]=inf+1;
        }
    }



    //F(i,0,62)
    //Debug(cal[i][maxn-1]);
}

LL mul(LL num,int k)
{
    LL m=1;
    F(i,0,k)
    {
        if(m<=inf/num)
            m*=num;
        else
            m=inf+1;
    }
    return m;
}

LL kroot(LL x,int y)
{
    LL p=1,q=1e9;
    while(p!=q)
    {
        LL m=(p+q)>>1;
        LL res=mul(m,y);
        if(x>res)
            p=m+1;
        else
            q=m;
    }
    if(mul(p,y)>x)
        p--;

    LL ret=p;

    //Debug(ret);

    return p;
}

LL bs(LL x,int k)
{
    LL *ptr;
    ptr=upper_bound(cal[k],cal[k]+maxn,x);
    ptr--;

    LL ret=(LL)(ptr-cal[k]);

    //Debug(ret);

    return ret;
}

int main()
{
    //inf+=1;
    //Debug(inf);
    pre();
    int t;
    S(t);
    while(t--)
    {
        int n,q;
        S(n);
        S(q);
        F(i,1,n+1)
        cin>>a[i];

        F(i,1,n+1)
        sum[i]=sum[i-1]+a[i];

        while(q--)
        {

            LL num,ans=0;
            cin>>num;

            F(i,1,min(62,n+1))
            {
                //printf("%d. ",i);
                if(i==1)
                {
                    ans+=a[i]*(num%mod);
                    //printf("ret=%lld\n",num);
                    ans%=mod;
                }
                else if(i<5)
                {
                    ans+=a[i]*kroot(num,i);
                    ans%=mod;
                }
                else
                {
                    ans+=a[i]*bs(num,i);
                    ans%=mod;
                }
            }

            if(n>=62)
            {
                ans+=sum[n]-sum[61];
            }

            ans%=mod;

            ans=(ans+mod)%mod;

            cout<<ans<<" ";
        }
        printf("\n");
    }
    return 0;
}
