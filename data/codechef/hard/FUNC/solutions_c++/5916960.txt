#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
#include<cmath>
using namespace std;
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define pb push_back
#define LL long long
#define MOD 1000000007
#define N 10000
#define MM 1000000000010000000LL
int sum[N+5],a[N+5];
vector<LL> pw[111],org[111];
void precal(){
	LL i,j;int p;
	for(i = 3;i<100;i++)pw[i].pb(1),org[i].pb(1);
	for(i = 1;i<=1000000;i++){
		for(j = i*i*i,p = 3;p<100;j*=i,p++){//for each power,pb  1^3..2^3,3^3..i^3 and corresponding i
			pw[p].pb(j),org[p].pb(i);
			if(j>=MM/i) break;//overflow
		}
	}
}
LL calc(int i,LL x){
	if(i == 1) return x;if(i == 2) return (LL)sqrt(x);//binary search the one that 
	if(i>60 || !pw[i].size()) return 1;//****
	int lo = 0, hi = pw[i].size() - 1;
	int mid, ret = 0;
	while(lo<=hi){
		mid = (lo + hi) / 2;
		LL a = pw[i][mid]; //power(mid,i);
		if(a>x)hi = mid - 1;
		else lo = mid + 1,ret = mid;
	}
	return org[i][ret];
}
int main(){
	int t,i,n,Q,ans;
	LL x,r;
	scanf("%d",&t);
	precal();
	while(t--){
		scanf("%d %d",&n,&Q);
		for(i = 1;i<=n;i++){
			scanf("%d",&a[i]);
			if(a[i]<0) a[i] += MOD;
		}
		sum[n+1] = 0;for(i = n;i;i--)sum[i] = sum[i+1] + a[i],sum[i]%=MOD;
		while(Q--){//2^60>1e18
			scanf("%lld",&x);
			ans = 0;
			for(i = 1;i<=n;i++){
				r = calc(i,x);
				if(r == 1) break;
				r%=MOD;
				ans = (ans + (r*(LL)a[i])%MOD) % MOD;
			}
			ans = (ans + sum[i]) % MOD;//suffix sum start from me
			printf("%d",ans);
			if(Q) printf(" ");else puts("");
		}
	}
	return 0;
}
