#include <iostream>
#include <stdio.h>
#include <cmath>

#define MOD 1000000007
#define LL long long
using namespace std;
int getchar_unlocked( void );
//inline int getchar_unlocked() { return getchar(); }
inline void fastRead_int(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }

    if(neg)
    	x = -x;
}


inline void fastRead_ll(long long &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }

    if(neg)
    	x = -x;
}




int main()
{

int test;
fastRead_int(test);

while(test--)
{
int n,q;
fastRead_int(n);
fastRead_int(q);

long long a[n+5],cumsum[n+5],x;
long long ans[q+5];

cumsum[0]=0;

for(int i=1;i<=n;++i)
{
    fastRead_ll(a[i]);
    a[i]=(LL)((LL)a[i]+(LL)MOD)%MOD;

    cumsum[i]=(LL)((LL)cumsum[i-1]+(LL)a[i]+(LL)MOD)%MOD;

   cumsum[i] =(LL)((LL)cumsum[i]+(LL)MOD)%MOD;

}

for(int i=0;i<q;++i)
{

    fastRead_ll(x);
    int c=1,flag=0;
    long long tempans=0;
    long long m;
    long long x2=fmodl((LL)x,(LL)MOD);

    m=(LL)((LL)((LL)x2%(LL)MOD)*(LL)(a[1]%MOD) + (LL)MOD)%MOD;
       tempans = (LL)((LL)tempans + (LL)m +(LL)MOD+(LL)MOD)%MOD;

    while(1)
    {

        if(c>=n)
        {
            flag=1;
            break;
        }

         if(c==1 && x==1)
        {
            flag=1;
            break;
        }
        c++;

            LL pow2= trunc(pow((double)x,1.0/(double)c));


       if (pow(pow2+ 1, c) <= x) {
        pow2= pow2 + 1;
     }

           if(pow2==1)
        {
        break;
        }

          m=(LL)((LL)(pow2%MOD)*(LL)(a[c]%MOD))%MOD;
          tempans = (LL)((LL)tempans +(LL)m+(LL)MOD)%MOD;

    }

   if(flag==1)
    {
        c++;
           }
    tempans = (LL)tempans + (LL)((LL)cumsum[n]-(LL)cumsum[c-1] +(LL)MOD)%MOD;
       ans[i] = ((LL)tempans+(LL)MOD+(LL)MOD)%MOD;

 if(i==q-1){
        printf("%lld",ans[i]);
     }
     else{
         printf("%lld ",ans[i]);

     }
}
if(test!=0)
printf("\n");

}
return 0;
}