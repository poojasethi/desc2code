#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
ll root(ll degree,ll value){
	double y = pow(value,(double)1/degree); 
	ll l = y;
	ll r = y+0.5;
	if(r == l){
		return l;
	}
	if(pow(r,degree) <= value){
		return r;
	}
	else{
		return l;
	}
}
double Nroot(double value,double index,double guess , double pc){
	double result = guess;
	double res_next;
	do{
		res_next = (1.0/index)*((index-1.0)*result+(value)/(pow(result,(index-1.0))));
		result = res_next;
		pc--;
	}
	while(pc>1);
	return result;
}
long long int Mod( long long int a){ 
	return (((a%1000000007)+(1000000007))%1000000007);
}
ll val(ll x,ll A[],int N,ll prefix_sum[]){
	int i,j;
	ll sum = 0,y;
	sum = Mod(Mod(x) * A[1]);
	for(i=2;i<=N;i++){
		y = Mod(root(i,x));
		if(y == 1){
			sum = Mod(sum+prefix_sum[i]);
			break;
		}
		else{
			sum = Mod( sum + Mod(y*A[i]));	
		}
	}
	return sum;
}
int main(){
	ll N,Q;
	int t,i;
	cin >> t;
	while(t--){
		cin >> N >> Q;
		ll A[N+2],prefix_sum[N+2];
		ll x;
		for(i=1;i<=N;i++){
			cin >> A[i];
			A[i] = Mod(A[i]);
		}
		prefix_sum[N] = A[N];
		for(i=N-1;i >= 1;i--){
			prefix_sum[i] = Mod(prefix_sum[i+1] + A[i]);
		}
		if(Q == 0){
			printf("0\n");
		}
		else{
	while(Q--){
		scanf("%lld",&x);
		ll ans = 0;
				ans = val( x , A , N ,prefix_sum);
					printf("%lld ",ans);
				}
		}
	}
	return 0;
}
