#include<stdio.h>
#include<math.h>
#define eps 1e-8
#define LL long long
#define min(a,b) (a<b?a:b)
#define maxn 10010
const LL mod=1e9+7;
LL num[maxn];
LL sum[maxn];
LL qpow(LL n,LL m)
{
    LL res=1,k=n;
    while(m>0)
    {
        if(m&1) res=res*k;
        m>>=1;
        k=k*k;
    }
    return res;
}
LL poww(LL n,LL p)
{
    if(n>(LL)1e15&&p==1)
        return n;
    LL t = (LL)(pow(n,1.0/p)+eps);
    if(n<=(LL)1e15)
        return t;
    else
    {
        if(qpow(t,p)<=n)
            return t;
        else
            return t-1;
    }
}
int main()
{
    int T,N,Q;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&N,&Q);
        sum[0]=0;
        for(int i=1; i<=N; i++)
        {
            scanf("%lld",num+i);
            num[i]%=mod;
            sum[i]=sum[i-1]+num[i];
        }
        for(int i=0; i<Q; i++)
        {
            LL ans=0,x;
            scanf("%lld",&x);
            for(int j=1; j<=N; j++)
            {
                LL a = poww(x,j);
                if(a==1)
                {
                    ans=(ans+(sum[N]-sum[j-1]))%mod;
                    break;
                }
                ans=(ans+((a%mod)*num[j])%mod)%mod;
            }
            printf("%lld",(ans+mod)%mod);
            if(i!=Q-1)  putchar(' ');
            else        putchar('\n');
        }
    }
    return 0;
}