#include <stdio.h>
#include <math.h>

typedef long long INT64;

const int N=10000;
int a[N+1];
INT64 s[N+1];
INT64 x[15000];
const int mod=1000000007;

int main(int argc, char* argv[])
{
	int i, j, k, n, t, q;
	scanf("%d", &t);
	for(i=0;i<t;i++)
	{
		scanf("%d %d", &n, &q);
		for(j=0;j<n;j++)
		{
			scanf("%d", &a[j]);
		}
		for(j=0;j<q;j++)
		{
			scanf("%lld", &x[j]);
		}
		s[0]=a[0];
		for(j=1;j<n;j++)
		{
			s[j]=s[j-1]+a[j];
			s[j]%=mod;
		}
		for(j=0;j<q;j++)
		{
			INT64 max=log(x[j])/log(2)+1e-6;
			INT64 tx=x[j];
			INT64 sum=(a[0]*(tx%mod))%mod;
			int end=(n<max) ? n : max;
			if(end>=2)
			{
				INT64 y=sqrt(tx);
				if(y*y>tx) y--;
				sum+=y*a[1]%mod;
			}
			for(k=3;k<=end;k++)
			{
				double d=exp(log(tx+0.5)/k);
				INT64 y=d+1e-7;
				INT64 z=pow(y,k);
				if(z>tx) y--;
				sum+=a[k-1]*y%mod;
			}
			if(n>=end)
			{
				sum+=s[n-1]-s[end-1];
			}
			sum%=mod;
			if(sum<0) sum+=mod;
			printf("%lld ", sum);
		}
		printf("\n");
	}
	return 0;
}
