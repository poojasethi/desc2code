#include <iostream>
#include <algorithm>
#include <climits>
#include <cstring>
#include <cstdio>
#include <string>
#include <sstream>
#include <vector>
#include <stack>
#include <queue>
#include <cmath>
#include <map>
#include <set>
using namespace std;
#define ll long long
 
ll s[10004];
ll a[10004];
ll mod = 1e9+7;
ll v[100];
 
ll f(ll x, ll n) {
	double y = pow(x,(double)1/n);
	ll lo = y;
	ll hi = y+0.5;
	
	if(hi == lo) return lo;
	
	if(pow(hi,n) <= x) return hi;
	else return lo;
}
 
int main() {
	int t;
	scanf("%d",&t);
	while(t--) {
		int n,q;
		scanf("%d%d",&n,&q);
		for(int i=0;i<n;i++) scanf("%lld",&a[i]);
		
		s[n-1] = a[n-1];
		for(int i=n-2; i>=0; i--) {
			s[i] = s[i+1] + a[i];
			if(s[i] < 0)
				s[i] = (s[i]%mod + mod)%mod;
			else if(s[i] >= mod) s[i] = s[i]%mod;
		}
		
		
		for(int i=0;i<q;i++) {
			ll x;
			scanf("%lld",&x);
			ll j = 2;
			int v_i=0;
			v[v_i++] = x;
			while(1) {
				ll r = f(x,j);
				v[v_i++] = r;
				if(r <= 1) break;
				j++;
			}
			ll ans = 0;
			int limit = min(v_i,n);
			for(j=0;j<limit;j++) {
				v[j] = v[j]%mod;
				ll temp = (a[j]*v[j]);
				ans = (ans + temp);
				if(ans < 0)
					ans = (ans%mod + mod)%mod;
				else if(ans >= mod) ans = ans%mod;
			}
			
			if(j < n) {
				ans = (ans + s[j]);
				if(ans < 0)
					ans = (ans%mod + mod)%mod;
				else if(ans >= mod) ans = ans%mod;
			}
			printf("%lld ",ans);
			
		}
		printf("\n");
	}
	return 0;
} 
