#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)for(int i=0;i<v;i++)
#define FORE(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REMIN(x,y) (x)=min((x),(y))
#define REMAX(x,y) (x)=max((x),(y))
#define pb push_back
#define sz size()
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define LOLDBG
#ifdef LOLDBG
#define DBG(vari) cerr<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cerr<<(v1)<<" - "<<(v2)<<endl;
#else
#define DBG(vari)
#define DBG2(v1,v2)
#endif
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define CZ3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z));
#define ALL(x) (x).begin(),(x).end()
#define tests int dsdsf;cin>>dsdsf;while(dsdsf--)
#define testss int dsdsf;CZ(dsdsf);while(dsdsf--)
using namespace std;
typedef pair<int,int> pii;
typedef vector<int> vi;
template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t1) {return s<<"("<<t1.first<<","<<t1.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t1){s<<"{";FOR(i,t1.size())s<<t1[i]<<(i==t1.size()-1?"":",");return s<<"}"<<endl; }

int bit[1000008];
int maxval;
// BIT obsluguje przedzial [1..maxval-1]

void czysc(int mxv)
{
    maxval=mxv;
    FOR(i,mxv+1) bit[i]=0;
}

void dodaj(int ind, int war)
{
    ind++;
    while(ind<maxval)
    {
        bit[ind]+=war;
        ind+=(ind & -ind);
    }
}

int suma(int ind)//[1..ind]
{
    ind++;
    int sm=0;
    while(ind>0)
    {
        sm+=bit[ind];
        ind-=(ind & -ind);
    }
    return sm;
}

int suma(int ind1,int ind2)
{
    return suma(ind2)-suma(ind1-1);
}


int t[100002];
vi g[100000];
int kol[100002];
int odp[100002];
vector<pair<pii,int> > pr;

int main()
{
        int n,k;CZ2(n,k);
        k++;
        FOR(i,n) CZ(t[i]);
        vi v;
        FOR(i,n) v.pb(t[i]);
        sort(ALL(v));
        v.erase(unique(ALL(v)),v.end());
        FOR(i,n) t[i]=(lower_bound(ALL(v),t[i]))-v.begin();
        FOR(i,n) g[i].clear();
        FOR(i,n) {kol[i]=g[t[i]].sz;g[t[i]].pb(i);}
        czysc(n+4);
        int q;CZ(q);
        pr.resize(q);
        FOR(i,q)
        {
            CZ2(pr[i].fi.se,pr[i].fi.fi);
            pr[i].se=i;
        }
        sort(ALL(pr));
        int akt=0;
        FOR(i,q)
        {
            pii para=pr[i].fi;
            //para.fi--;
            //para.se--;
            //DBG(para);
            while(para.fi>=akt)
            {
                if (kol[akt]>=k-1)
                {
                    //DBG(g[t[akt]][kol[akt]-(k-1)]);
                    dodaj(g[t[akt]][kol[akt]-(k-1)],1);
                    if (kol[akt]>k-1)
                        dodaj(g[t[akt]][kol[akt]-(k-1)-1],-1);
                }
                akt++;
            }
            odp[pr[i].se]=suma(para.se,para.fi);
        }
        FOR(i,q) printf("%d\n",odp[i]);
    return 0;
}
