#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE

#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#pragma comment(linker, "/STACK:64000000")

template<class T> inline T sqr (T x) {return x * x;}

typedef long long int64;
typedef unsigned long long uint64;
typedef pair<int, int> pii;
typedef pair<int, pii> pip;
typedef pair<pii, int> ppi;
typedef pair<int64, int> pii64;
typedef pair<double, double> pdd;
typedef pair<string, int> psi;
typedef pair<int, string> pis;
#define FAIL ++*(int*)0
#define eps  1e-9
#define inf  0x7f7f7f7f
#define MP make_pair
#define sz(C) (int)((C).size())
#define all(C) (C).begin(), (C).end()
#define TASK "test"
#define RR 151

struct RSQ {
    int n;
    int a[1 << 17];

    RSQ () {
        clear();
    }
    void clear () {
        n = 0;
        memset(a, 0, sizeof a);
    }
    void update (int i, int dx) {
        for (; i < n; i |= i + 1)
            a[i] += dx;
    }
    int get (int i) {
        int res = 0;
        for (; i >= 0; i = (i & (i + 1)) - 1)
            res += a[i];
        return res;
    }
    int sum (int l, int r) {
        if (r < l) return 0;
        return get(r) - get(l - 1);
    }
};

int n, k;
int a[1 << 17];
int x[1 << 17], xn = 0;
int T;
int ans[1 << 17];
RSQ rsq;
ppi q[1 << 17];
deque<int> last[1 << 17];

int main() {                                 
#ifndef ONLINE_JUDGE
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    scanf("%d%d", &n, &k);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &a[i]);
        x[xn++] = a[i];
    }
    sort(x, x + xn);
    xn = unique(x, x + xn) - x;
    for (int i = 0; i < n; ++i)
        a[i] = lower_bound(x, x + xn, a[i]) - x;

    scanf("%d", &T);
    for (int i = 0; i < T; ++i) {
        int l, r;
        scanf("%d%d", &l, &r);
        q[i] = MP(MP(r, l), i);
    }    
    sort(q, q + T);
    rsq.n = n;
    for (int i = 0, j = 0; i < n && j < T; ++i) {
        int x = a[i];
        last[x].push_back(i);
        if (sz(last[x]) > k) {
            if (sz(last[x]) == k + 2) {
                rsq.update(last[x].front(), -1);
                last[x].pop_front();
            }
            rsq.update(last[x].front(), 1);
        }
        for (; j < T && q[j].first.first == i; ++j)    {
            int l = q[j].first.second;
            int id = q[j].second;
            ans[id] = rsq.sum(l, n - 1);
        } 
    }
    for (int i = 0; i < T; ++i)
        printf("%d\n", ans[i]);


    return 0;
}
