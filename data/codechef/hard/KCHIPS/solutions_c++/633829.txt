#include <stdio.h>
#include <sstream>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <memory.h>
#include <queue>
#include <string>
#include <string.h>
#include <cmath>
#include <utility>
#include <time.h>

#define PI 3.1415926535897932384626433832795
#define sqr(x) ((x)*(x))
#define OUT_RT cerr << (float(clock()) / CLOCKS_PER_SEC) << endl

typedef long long LL;
typedef unsigned long long ULL;

using namespace std;

#define N 111111
int n, k, h[N], a[N], hn, sq, r, ans[N], c[N], cnt = 0;
struct Tp{
	int l, r, x, i;

	bool operator<(const Tp& B)const{
		return x < B.x;
	}
} q[N];

int main(){
//	freopen("input.txt","r",stdin);
//	freopen("output.txt","w",stdout);
	scanf("%d%d",&n, &k);
	for(int i=0;i<n;i++){
		scanf("%d",&a[i]);
		h[i] = a[i];
	}
	sort(h, h + n);
	hn = unique(h, h + n) - h;
	for(int i=0;i<n;i++) a[i] = lower_bound(h, h + hn, a[i]) - h;

	sq = (int)sqrt(n) + 1;
	scanf("%d", &r);
	for(int i=0;i<r;i++){
		scanf("%d%d",&q[i].l, &q[i].r);
		q[i].x = (q[i].l / sq) * sq + (q[i].r / sq);
		q[i].i = i;
	}
	sort(q, q + r);
	for(int i=0,x=0,y=0;i<r;i++){
		int xx = q[i].l, yy = q[i].r + 1;
		while(x < xx)
			if(--c[ a[x++] ] == k)
				cnt--;
		while(x > xx)
			if(++c[ a[--x] ] == k+1)
				cnt++;
		while(y < yy)
			if(++c[ a[y++] ] == k+1)
				cnt++;
		while(y > yy)
			if(--c[ a[--y] ] == k)
				cnt--;
		ans[q[i].i] = cnt;
	}
	for(int i=0;i<r;i++) printf("%d\n", ans[i]);
	return 0;
}
