#include<cstdio>
#include<cstring>
#include<cmath>
#include<cctype>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<numeric>
#include<fstream>
using namespace std;
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define memo(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define all(a) a.begin(),a.end()
#define eps (1e-9)
#define inf (1<<29)
#define i64 long long
#define u64 unsigned i64
#define MAX 100005
typedef pair<int,int> pii;

pii tmp[MAX];
int BIT[MAX],cnt[MAX],ans[MAX],a[MAX];
pair<pii,int> query[MAX];
vector<int> vill[MAX];

int n;
void update(int idx,int val){
	while(idx<=n){
		BIT[idx]+=val;
		idx+= (idx & -idx);
	}
}
int getval(int idx){
	int ret = 0;
	while(idx){
		ret+=BIT[idx];
		idx -= (idx & -idx);
	}
	return ret;
}
int main(){
	int k,i,now,q,j,K,tot,x;
	scanf("%d %d",&n,&K);
	for(i = 0;i<n;i++){
		scanf("%d",&tmp[i].first);
		tmp[i].second = i+1;
		cnt[i] = 0;
		vill[i].clear();
	}
	sort(tmp,tmp+n);

	for(i = 0,k = 1;i<n;i++,k++){
		j = i;
		while(j<n && tmp[i].first == tmp[j].first){
			a[tmp[j].second] = k;
			j++;
		}
		i = j-1;
	}
	scanf("%d",&q);
	for(i = 0;i<q;i++){
		scanf("%d %d",&query[i].first.second,&query[i].first.first);
		query[i].first.first++;
		query[i].first.second++;
		query[i].second = i;
	}
	sort(query,query+q);
	now = 1; tot = 0;
	for(i = 0;i<q;i++){
		while(now<=query[i].first.first){
			x = cnt[a[now]];
			if(x>K)
				update(vill[a[now]][x-K-1],-1),tot--;
			cnt[a[now]]++;
			x++;
			vill[a[now]].pb(now);
			if(x>K){	
				update(vill[a[now]][x-K-1],1),tot++;
			}
			now++;
		}
		ans[query[i].second] = tot - getval(query[i].first.second - 1);
	}
	for(i = 0;i<q;i++){
		printf("%d\n",ans[i]);
	}
	return 0;
}