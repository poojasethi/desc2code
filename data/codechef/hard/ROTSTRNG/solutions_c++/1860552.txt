/*
Algorithm: Knuth Morris Pratt (KMP)
*/


#include<iostream>
#include<cstring>
#include<map>
#include<vector>
#include<stack>
#include<cstdio>
#include<algorithm>
using namespace std;

char ip[500004];
int m,p,cs;

int main()
{
  scanf("%d",&cs);
    while(cs--)
    {
      scanf("%s",ip);
      scanf("%d %d",&m,&p);

      int n=strlen(ip);

      // KMP
      int F[n+1];
      int i=0, j=(-1);
	  F[i] = j;
	   while(i<n)
	   {
	    while(j>=0 && ip[j]!=ip[i])
	    j=F[j];
	    i++; j++;
	    F[i]=j;
	   }
/*
	  for(i=0;i<=n;i++)
	  cout<<F[i]<<" ";
	  cout<<endl;
*/

      int lsp=(n-F[n]);

      if(n%lsp)
	  lsp=n;

      int res=0;
      int cnt=0;

      while(true)
	  {
	  cnt+=m;
	  res++;
	  if(cnt>=lsp)
	    cnt%=lsp;
	  if(!cnt)
	    break;

	  cnt+=p;
	  res++;
	  if(cnt>=lsp)
	    cnt%=lsp;
	  if(!cnt)
	    break;
	  }
      printf("%d\n",res);
    }
  return 0;
}
