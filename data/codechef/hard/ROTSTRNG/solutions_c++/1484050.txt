#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
 
using namespace std;
 
#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-9
#define maX(a,b)				((a)>(b)?(a):(b))
#define miN(a,b)				((a)<(b)?(a):(b))
#define abS(x)					((x)<0?-(x):(x))
#define FOR(i,a,b)				for(int i=a;i<b;i++)
#define REP(i,n)				FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp						make_pair
#define FF						first
#define SS						second
#define tri(a,b,c)				mp(a,mp(b,c))
#define XX						first
#define YY						second.first
#define ZZ						second.second
#define pb						push_back
#define fill(a,v) 				memset(a,v,sizeof a)
#define all(x)					x.begin(),x.end()
#define SZ(v)					((int)(v.size()))
#define DREP(a)					sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)			(lower_bound(all(arr),ind)-arr.begin())
#define debug(args...)			{dbg,args; cerr<<endl;}
#define dline					cerr<<endl	
 

 
typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;
 
typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<TRI> VT;
 
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VII> VVII;
typedef vector<VLL> VVLL;
typedef vector<VT> VVT;
 
 
/*Main code begins now */
 
int testnum;
VL nums;
 
int cnt;
int n,m,p;
char a[500002]; 

 
void preprocess()
{
	
}
int start(int n,int s,int m)
{
if(s-m<0)
return s-m+n;
else
return s-m;    
} 

int comp(int s)
{
    int i,e;
    if(s==0)
    e=n-1;
    else
    e=s-1;
    for(i=0;i<=(n/2);++i)
    {
      if((a[i]==a[s++])&&(a[n-i-1]==a[e--]))
      {
      if(s==n)
      s=0;
      if(e==-1)
      e=n-1;                                  
      }     
      else
      return 0;          
    }
    return 1;
}

void solve()
{
	s(m);s(p);
	int r=0,s=0;
	while(1)
	{
    s=start(n,s,m);
    r++;
    if(comp(s)==1)
    break;
    s=start(n,s,p);
    r++;
    if(comp(s)==1)
    break;        
    }
	printf("%d\n",r);	
}
 
 
 
bool input()
{
     ss(a);
     n=strlen(a);
	return true;
}
 
 
int main()
{
	preprocess();
	int T=1;s(T);
	for(testnum=1;testnum<=T;testnum++)
	{
		if(!input()) break;
		solve();
	}
return 0;
}
 
