#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#include <cmath>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <queue>
#include <bitset>
#include <stdlib.h>

using namespace std;

#define FOR(i,a,b) for (int i = int(a); i <= b; i++)
#define INF 1000000000
#define mod 1000000007
#define ll long long int
// #define inp(x) scanf("%d",&x)
#define inchar getchar_unlocked
 
inline void inp( ll &n )
{
n=0;
ll ch=inchar();ll sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}

char a[500010];
ll prefix[500010];
bitset<500010> tmp,mark;

void computeprefix()
{
  ll m,k,q;
  m = strlen(a+1);
  prefix[1] = 0;
  k = 0;
  for(q=2;q<=m;q++)
  {
      while(k>0 && a[k+1]!= a[q])
       k = prefix[k];
      if(a[k+1]==a[q])
       k++;
      prefix[q] = k;      
  }  
}


int main() {

    ll test,n,p,b;
    inp(test);
    while(test--)
     {
        
        scanf("%s",a+1);
        n = strlen(a+1);
        inp(p);inp(b);
        computeprefix();
       
        ll k = prefix[n];
        tmp.reset();mark.reset();
        while(k>0)
         {
          tmp[k] = 1;
          k = prefix[k];         
         }
       
       
        mark[0] = 1;        
         for(ll k= 1;k<n;k++)
          {
          
           if(tmp[k] && tmp[n-k])
            mark[k] = 1;      
          }
        
        ll  val = 0,ans = 0;
        
        while(true)
         {
          ans++;
          val = (val+p)%n;
          
          if(mark[val]) break;
          ans++;
          val = (val+b)%n;
          if(mark[val]) break;
                    
         }
        
        printf("%lld\n",ans);
                 
     }
    
    
    //getchar();
    //getchar();
	return 0;
} 
