#include<cstdio>
#include<cstring>
#include<cmath>
#include<cctype>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<numeric>
#include<fstream>
using namespace std;
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define memo(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define all(a) a.begin(),a.end()
#define eps (1e-9)
#define inf (1<<29)
#define i64 long long
#define u64 unsigned i64
#define MAX 500005
 
char tmp[MAX],a[2*MAX];
int pi[2*MAX];
void failureFun(int m){
	int k,q;
	pi[0] = k = 0;
	for(q = 2;q<=m;q++){
		while(k>0 && a[k]!=a[q-1])
			k = pi[k-1];
		if(a[k]==a[q-1]) k++;
		pi[q-1] = k;
		if(k == m/2) k = pi[k-1];
	}
}
int main(){
	int t,x,y,i,j,k,ans;
	scanf("%d",&t);
	while(t--){
		scanf("%s %d %d",tmp,&x,&y);
		int n = strlen(tmp);
		strcpy(a,tmp);
		strcat(a,tmp);
		failureFun(2*n);
		ans=0;
		k = n-1;
		while(1){
			k-=x;
			if(k<0) k+=n;
			ans++;
			if(pi[k+n]==n) break;
			k-=y;
			if(k<0) k+=n;
			ans++;
			if(pi[k+n]==n) break;
		}
	/*	for(i = n;i<2*n;i++){
			if(pi[i]!=n) continue;
			j = i - n + 1;
			if(j % (x+y) == 0){
				k = j / (x+y);
				k*=2;
				ans = min(ans,k);
			}
			else if(j % (x+y) == x){
				k = j / (x+y);
				k*=2;
				ans = min(ans,k+1);
			}
		}*/
		printf("%d\n",ans);
	}
	return 0;
} 