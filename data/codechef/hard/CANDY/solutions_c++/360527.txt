#include <iostream>
#include <sstream>
#include <utility>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <cmath>
#include <functional>
#include <algorithm>
#include <numeric>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <set>
#include <stdio.h>
#include <string.h>
#include <time.h>
using namespace std;

#define FOR(i,a,b)  for(int i=(a);i<(b);++i)
#define F(i,a)      FOR(i,0,a)
#define ALL(x)      x.begin(),x.end()
#define PB          push_back
#define S           size()

const int MAXN = 20;
const int MAXV = 500000;
const int INF = 1000000000;
int bs[MAXN], cs[MAXN];
int qq[1000000];
vector<int> dist(1000001, INF);

int solve(int n){
	int size = dist[MAXV] = 0;
	qq[size++] = MAXV;
	for (int z=0; z < size; z++) {
		int v = qq[z];
		for (int i = 0; i < n; i++) {
			int next = v + cs[i];
			if (next < 0 || next >= MAXV*2) continue;
			if (next == MAXV) return dist[v] + 1;
			if (dist[next] > dist[v] + 1) {
				dist[next] = dist[v] + 1;
				qq[size++] = next;
			}
		}
	}
	return -1;
}

int main() {
	//freopen("f.in", "r", stdin);
	int n, p, q;
	scanf("%d", &n);
	for (int i=0; i < n; i++)
		scanf("%d %d", &cs[i], &bs[i]);
	scanf("%d %d", &p, &q);
	for (int i=0; i < n; i++)
		cs[i] = cs[i]*q - bs[i]*p;
	printf("%d\n", solve(n));
	return 0;
}

