import java.util.*;
import java.lang.*;
import java.io.*;

class JALEBI
{
	static int min;
	static char best[];
	public static void main (String[] args) throws java.lang.Exception
	{
		Reader re = new Reader(System.in);
		int T = re.nextInt();
		while(T-->0){
			int K = re.nextInt();
			String A[] = new String[K];
			for(int i=0; i<K; i++)
				A[i] = re.next();
			char s[] = new char[16];
			min = 17;
			best = new char[16];
			work(s, A, 0);
			String out = new String(best);
			System.out.println(out);
		}
	}
	
	static void work(char s[], String A[], int i){
		if(hasAll(s, A, i)){
			if(i<min){
				System.arraycopy(s, 0, best, 0, 16);
				min = i;
			}
			return;
		}
		if(i>15)
			return;
		s[i] = 'B';
		work(s, A, i+1);
		s[i] = 'G';
		work(s, A, i+1);
		s[i] = 0;
	}
	
	static boolean hasAll(char s[], String A[], int max){
		for(String s1 : A){
			if(s1.length()>max)
				return false;
			int j = 0;
			for(int i=0; i<max; i++)
				if(s[i]==s1.charAt(j)){
					j++;
					if(j>=s1.length())
						break;
				}
			if(j<s1.length())
				return false;
		}
		return true;
	}
}

class Reader{
    BufferedReader br;
    StringTokenizer st;
    Reader(InputStream in) throws Exception{
        br = new BufferedReader(new InputStreamReader(in));
        st = new StringTokenizer("");
    }
 
    String next() throws Exception{
        while(!st.hasMoreTokens())
            st = new StringTokenizer(br.readLine());
        return st.nextToken();
    }
 
    int nextInt() throws Exception{
        return Integer.parseInt(next());
    }
}