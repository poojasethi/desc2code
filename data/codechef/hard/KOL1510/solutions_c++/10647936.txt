#include<bits/stdc++.h>
using namespace std;
int n;
bool check(string s[],string super)
{
	for(int i=0;i<n;i++)
	{
		int l = super.length(),lsi=s[i].length();
		int top=0;
		for(int j=0;j<l;j++)
		{
			if(super[j]==s[i][top])
			{
				top++;
				if(top==lsi)
				{
					break;
				}
			}
		}
		if(top!=lsi)
		{
			return false;
		}
	}
	return true;
}
bool gen(string mstr,string s[])
{
	sort(mstr.begin(),mstr.end());
	string cpy=mstr;
	if(check(s,mstr))
	{
		cout<<mstr<<endl;
		return true;
	}
	while(next_permutation(mstr.begin(),mstr.end()))
	{
		if(check(s,mstr))
		{
			cout<<mstr<<endl;
			return true;
		}
	}
	return false;
}
int main()
{
	int t;scanf("%d",&t);
	while(t--)
	{
		string s[20];
		scanf("%d",&n);
		int mxg=0,mxb=0;
		for(int i=0;i<n;i++)
		{
			cin>>s[i];
			int tg=0,tb=0;
			for(int j=0;j<s[i].length();j++)
			{
				if(s[i][j]=='G')
				tg++;
				else
				tb++;
			}
			if(tg>mxg)
			mxg=tg;
			if(tb>mxb)
			mxb=tb;
		}
		string super;
		for(int i=0;i<mxb;i++)
		{
			super.push_back('B');
		}
		for(int i=0;i<mxg;i++)
		{
			super.push_back('G');
		}
		bool printed=false;
		string superb,superg;
		superb = super;
		superg = super;
		if(gen(super,s))
		printed=true;
		for(int i=1;i<=20;i++)
		{
			string temp1,temp2;
			if(printed)
			{
				break;
			}
			for(int j=0;j<i;j++)
			{
				temp1.clear();
				int x;
				for(x=0;x<j;x++)
				temp1.push_back('B');
				for(int y=0;y<i-x;y++)
				{
					temp1.push_back('G');
				}
				temp1 = temp1 + super;
				if(gen(temp1,s))
				{
					printed=true;
					break;
				}
				if(printed)
				{
					break;
				}
//				cout<<"temp1 = "<<temp1<<endl;
			}
			if(printed)
			break;
			for(int j=0;j<i;j++)
			{
				int x;
				temp2.clear();
				for(x=0;x<j;x++)
				temp2.push_back('G');
				for(int y=0;y<abs(x-i);y++)
				{
					temp2.push_back('B');
				}
				temp2 = temp2 + super;
				if(gen(temp2,s))
				{
					printed=true;
					break;
				}
				//cout<<"temp2 = "<<temp2<<endl;
			}
			if(printed)
			{
				break;
			}
		}
	}
}