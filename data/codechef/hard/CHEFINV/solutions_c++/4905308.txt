#include <bits/stdc++.h>
 
using namespace std;
 
 
#define mod 1000000007
//#define DEBUG
#define inf 2147483647
#define ninf -2147483648
#define FOR(i,a,b) for(i=a;i<b;i++)
#define s(a) scanf("%d",&a)
#define lls(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define p(a) printf("%d",a)
#define llp(a) printf("%lld",a)
#define sp(a) printf("%s",a)
#define cp(a) printf("%c",a)
#define nline printf("\n")
#define space printf(" ")
#define fs(a) fscanf(fp,"%d",&a)
#define flls(a) fscanf(fp,"%lld",&a)
#define fss(a) fscanf(fp,"%s",a)
#define fp(a) fprintf(fo,"%d",a)
#define fllp(a) fprintf(fo,"%lld",a)
#define fsp(a) fprintf(fo,"%s",a)
#define fcp(a) fprintf(fo,"%c",a)
#define fnline fprintf(fo,"\n")
#define fspace fprintf(fo," ")
#define ll long long
#define maxn 200003
 
ll ans1[200005]={0},ans2[200005]={0},ans3[200005]={0},ans4[200005]={0},ansn[200005]={0};
vector<pair<pair<ll int,ll int>,ll int> > v;
vector<pair<ll int,ll int> > sortbyval;
vector<pair<ll int,ll int> > va[200005],vb[200005];
ll int tree[200005]={0};
 
void update(ll int idx,ll int val)
{
    while (idx <= maxn)
    {
        tree[idx] += val;
        idx += (idx & -idx);
    }
}
 
ll int read(ll int idx)
{
    ll int sum=0;
    while (idx>0)
    {
        sum += tree[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
 
bool comp(pair<pair<ll int,ll int>,ll int> a,pair<pair<ll int,ll int>,ll int> b)
{
    if(a.first.first!=b.first.first)
        return a.first.first<b.first.first;
    if(a.first.second!=b.first.second)
        return a.first.second<b.first.second;
    if(a.second!=b.second)
        return a.second<b.second;
}
 
bool compi(pair<ll int,ll int> a,pair<ll int,ll int> b)
{
    if(a.first!=b.first)
        return a.first<b.first;
    return a.second<b.second;
}
 
long long int merge(long long int a[],long long int beg,long long int mid,long long int end)
{
    long long int b[200005],c[200005],k,i,j,count=0;
    for(i=1;i<=(mid-beg+1);i++)
    b[i]=a[beg+i-1];
    for(i=1;i<=(end-mid);i++)
    c[i]=a[i+mid];
    i=1,j=1,k=1;
    c[end-mid+1]=10000000000000LL;
    b[mid-beg+2]=10000000000000LL;
    for(i=beg;i<=end;i++)
    {
        if(b[j]<=c[k])
        {
            a[i]=b[j];
            j++;
        }
        else
        {
            a[i]=c[k];
            k++;
	    count=count+(mid-beg+2-j);
        }
    }
return count;
}
 
long long int mergesort(long long int a[],long long int beg,long long int end)
{
    long long int mid,i,count=0;
    if(beg<end)
    {
        mid=(beg+end)/2;
        count=count+mergesort(a,beg,mid);
        count=count+mergesort(a,mid+1,end);
        count=count+merge(a,beg,mid,end);
    }
    return count;
}
 
 
 
 
int main()
{
#ifdef DEBUG
    cout<<"Debugging\n";
#endif
ios::sync_with_stdio(false);
FILE *fp,*fo;
 //freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
 
 
ll int n,k,i,j,m,x,y,s,z,h,d,ans=0;
ll int a[200005]={0};
 
cin>>n>>m;
 
for(i=1;i<=n;i++)
{
    cin>>a[i];
    sortbyval.push_back(make_pair(a[i],i));
}
 
for(i=1;i<=m;i++)
{
    cin>>x>>y;
    v.push_back(make_pair(make_pair(x,y),i));
}
 
//sort(v.begin(),v.end(),comp);
pair<pair<ll int,ll int>,ll int> p;
for(i=0;i<v.size();i++)
{
    p=v[i];
    va[p.first.first].push_back(make_pair(p.first.second,p.second));
    vb[p.first.second].push_back(make_pair(p.first.first,p.second));
    if(a[p.first.first]>a[p.first.second])
    ansn[p.second]=-1;
    else if(a[p.first.first]<a[p.first.second])
    ansn[p.second]=1;
}
 
sort(sortbyval.begin(),sortbyval.end(),compi);
s=1;
for(i=0;i<sortbyval.size();s++)
{
    x=sortbyval[i].first;
    while(i<sortbyval.size() && x==sortbyval[i].first){
        a[sortbyval[i].second]=s;
        i++;
    }
}
 
pair<ll int,ll int> f;
 
for(i=1;i<=n;i++)
{
    z=read(n+1)-read(a[i]);
    y=read(a[i]-1);
    if(va[i].size())
    {
        for(j=0;j<va[i].size();j++)
        {
            f=va[i][j];
            h=read(n+1)-read(a[f.first]);
            d=read(a[f.first]-1);
            ans1[f.second]-=z;
            ans2[f.second]-=y;
            ans3[f.second]-=h;
            //cout<<d<<" uuu\n";
            ans4[f.second]-=d;
        }
    }
    if(vb[i].size())
    {
        for(j=0;j<vb[i].size();j++)
        {
            f=vb[i][j];
            h=read(n+1)-read(a[f.first]);
            d=read(a[f.first]-1);
            ans1[f.second]+=h;
            ans2[f.second]+=d;
            ans3[f.second]+=z;
            //cout<<y<<" pppp\n";
            ans4[f.second]+=y;
            if(a[i]>a[f.first])
            ans4[f.second]--;
            if(a[i]<a[f.first])
            ans3[f.second]--;
        }
    }
    update(a[i],1);
}
 
/*for(i=1;i<=n;i++)
{
    cout<<a[i]<<" ";
}*/
//cout<<"\n";
//cout<<n<<"\n";
ans=mergesort(a,1,n);
 
//cout<<ans<<"\n";
/*
for(i=1;i<=m;i++)
{
    cout<<ans1[i]<<" ";
}
 
cout<<"\n";
 
for(i=1;i<=m;i++)
{
    cout<<ans2[i]<<" ";
}
cout<<"\n";
for(i=1;i<=m;i++)
{
    cout<<ans3[i]<<" ";
}
cout<<"\n";
for(i=1;i<=m;i++)
{
    cout<<ans4[i]<<" ";
}
cout<<"\n";
for(i=1;i<=m;i++)
{
    cout<<ansn[i]<<" ";
}
cout<<"\n";*/
for(i=1;i<=m;i++)
{
    cout<<ans+ans4[i]-ans3[i]+ans1[i]-ans2[i]+ansn[i]<<"\n";
}
 
 
 
return 0;
}