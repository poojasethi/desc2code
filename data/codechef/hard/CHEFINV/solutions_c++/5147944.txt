#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<cmath>
#include<algorithm>
#define ll long long
#define MAXN 200002
using namespace std;
int n,m,a[MAXN],ha[MAXN],hs[MAXN],maxs,zz;
struct qus{int l,r;} b[MAXN];
int lastl[MAXN],prel[MAXN],lastr[MAXN],prer[MAXN];
ll v[MAXN],cgl[MAXN],cgr[MAXN],tot,tr[MAXN];
void init()
{
	scanf("%d%d",&n,&m);
	int i;
	for(i=1;i<=n;i++)
	   {scanf("%d",&a[i]);
	    ha[i]=a[i];
	   }
	sort(ha+1,ha+n+1);
	for(i=1;i<=n;i++)
	   {if(ha[i]!=ha[i-1])
	       hs[++zz]=ha[i];
	   }
	for(i=1;i<=m;i++)
	   {scanf("%d%d",&b[i].l,&b[i].r);
	    prel[i]=lastl[b[i].l]; lastl[b[i].l]=i;
	    prer[i]=lastr[b[i].r]; lastr[b[i].r]=i;
	   }
}
int getw(int x)
{
	int s=1,t=zz,mid;
	while(s<=t)
	   {mid=(s+t)>>1;
		if(hs[mid]<x) s=mid+1;
		else t=mid-1;
	   }
	return s;
}
int lowbit(int x) {return x&(-x);}
ll find(int x)
{
	ll sum=0;
	for(;x>0;x-=lowbit(x)) sum+=tr[x];
	return sum;
}
void insert(int x)
{for(;x<=zz;x+=lowbit(x)) tr[x]++;}
void work()
{
	int i,j,k,x,y;
	maxs=zz;
	for(i=1;i<=n;i++)
	   {j=lastl[i]; k=lastr[i];
	    x=getw(a[i]);
	    v[i]+=find(maxs)-find(x);
	    tot+=v[i];
	    while(j)
	       {y=getw(a[b[j].r]);
		    cgl[j]+=find(maxs)-find(y);
		    j=prel[j];
		   }
		while(k)
	       {y=getw(a[b[k].l]);
		    cgr[k]+=find(maxs)-find(y);
		    k=prer[k];
		   }
		insert(x);
	   }
	//---------------------------------
	//for(i=1;i<=n;i++) printf("%I64d ",v[i]);
	//printf("\n");
	memset(tr,0,sizeof(tr));
	for(i=n;i>0;i--)
	   {j=lastl[i]; k=lastr[i];
	    x=getw(a[i]);
	    v[i]+=find(x-1);
	    while(k)
	       {y=getw(a[b[k].l]);
		    cgr[k]+=find(y-1);
		    k=prer[k];
		   }
	    while(j)
	       {y=getw(a[b[j].r]);
		    cgl[j]+=find(y-1);
		    j=prel[j];
		   }
		insert(x);
	   }
	//----------------------------------
	//for(i=1;i<=n;i++) printf("%I64d ",v[i]);
	//printf("\n%lld\n",tot);
	//for(i=1;i<=m;i++) printf("%I64d %I64d\n",cgl[i],cgr[i]);
	ll da;
	for(i=1;i<=m;i++)
	   {x=b[i].l; y=b[i].r;
	    if(a[x]==a[y]) da=0;
	    else da=1;
	    //printf("%I64d %I64d %I64d %I64d %I64d\n",v[x],v[y],cgl[i],cgr[i],da);
	    da=tot-v[x]-v[y]+cgl[i]+cgr[i]+da;
	    printf("%lld\n",da);
	   }
}
int main()
{
	init(); work();
	return 0;
}