#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;
 
#define M 1000000007;
#define SET result[0][0] = result[1][1] = mat[0][0] = mat[0][1] = mat[1][0] = 1; result[1][0] = result [0][1] = mat[1][1] = 0
 
static long long mat[2][2], mat1[2][2], mat2[2][2], result[2][2];
 
void matexp(long times)
{
    for (int t = 0; t < 2; t++)
    {
        for (int s = 0; s < 2; s++)
            mat1[t][s] = mat2[t][s] = mat[t][s];
    }
 
    long temp2 = 0;
    for (int i = 1; i < times; i++)
    {
        for (int j = 0; j < 2; j++)
        {
            for (int p = 0; p < 2; p++)
            {
                for (int l = 0; l < 2; l++)
                    temp2 = (temp2 + (mat[j][l]*mat1[l][p]))%M;
 
                mat2[j][p] = temp2%M;
                temp2 = 0;
            }
        }
 
        for (int t = 0; t < 2; t++)
        {
            for (int s = 0; s < 2; s++)
                mat1[t][s] = mat2[t][s];
        }
    }
}
 
void matmultiply ()
{
    long temp = 0;
    for (int j = 0; j < 2; j++)
    {
        for (int p = 0; p < 2; p++)
        {
            for (int l = 0; l < 2; l++)
                temp = (temp + (result[j][l]*mat1[l][p]))%M;
 
            mat2[j][p] = temp%M;
            temp = 0;
        }
    }
 
    for (int t = 0; t < 2; t++)
    {
        for (int s = 0; s < 2; s++)
            result[t][s] = mat2[t][s];
    }
}
 
int main()
{
    int T;
    scanf("%d", &T);
    
    for (int i = 1; i <= T; i++)
    {
        long long power, r, temp1, index = 0, temp;
        scanf("%lld", &power); temp1 = power;
        SET;
        
        for (int i = 1; i <= 10; i++)
        {
            int w = temp1/pow(10, i);
            if (w == 0)
                {index = i-1; break;}
        }
 
        r = pow(10, 1); temp = power%r; temp = (temp/pow(10, 0));
        if (temp != 0)
        {
            matexp(temp);
            matmultiply();
        }
 
        for (int k = 1; k <= index; k++)
        {
            r = pow(10, k+1);
            temp = power%r;
            temp = (temp/pow(10, k));
 
            matexp(10);
            for (int t = 0; t < 2; t++)
            {
                for (int s = 0; s < 2; s++)
                    mat[t][s] = mat1[t][s];
            }
 
            if (temp != 0)
            {
                matexp(temp);
                matmultiply();
            }
        }
        if (temp1==1 || temp1==2)
            printf("%d\n", 1);
        else if (temp1==3)
            printf("%d\n", 3);
        else if (temp1 > 3)
            printf("%lld\n", result[1][0]);
    }
       
    return 0;
}