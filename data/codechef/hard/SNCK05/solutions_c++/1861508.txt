#include<stdio.h>
#include<map>
using namespace std;
inline void readInt(long long *a)
{
	 register char c=0;
	 while (c<33) c=getchar_unlocked();
	 *a=0;
	 while (c>33)
	 {
	     *a=*a*10+c-'0';
	     c=getchar_unlocked();
	 }
}
void multiply(long long  F[2][2], long long  M[2][2],long long m);
 
void power(long long  F[2][2], long long  n,long long m);
 
void power(long long F[2][2], long long  n,long long m)
{
  if( n == 0 || n == 1)
      return;
  long long M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2,m);
  multiply(F, F,m);
 
  if( n%2 != 0 )
     multiply(F, M,m);
}
 
void multiply(long long F[2][2], long long M[2][2],long long m)
{
  long long  x =  ((((F[0][0])%(m))*(M[0][0]%m))%(m) + (((F[0][1])%(m))*(M[1][0]%m))%(m))%m;
  long long  y =  ((((F[0][0])%(m))*(M[0][1]%m))%(m) + (((F[0][1])%(m))*(M[1][1]%m))%(m))%m;
  long long  z =  ((((F[1][0])%(m))*(M[0][0]%m))%(m) + (((F[1][1])%(m))*(M[1][0]%m))%(m))%m;
  long long  w =  ((((F[1][0])%(m))*(M[0][1]%m))%(m) + (((F[1][1])%(m))*(M[1][1]%m))%(m))%m;
 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
long long rec(long long n,long long m)
{
	long long F[2][2]={{1,1},{1,0}};
	if(n==0)
	return 0;
	power(F,n-1,m);
	return F[0][0];
}
int main()
{
	int t;
	long long ans,n,m=1000000007;
	scanf("%d",&t);
	while(t--)
	{
		readInt(&n);
		long long r=rec(n,m);
		printf("%lld\n",r);
	}
	return 0;
}
