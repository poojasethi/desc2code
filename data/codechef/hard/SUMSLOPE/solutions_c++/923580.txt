#include<stdio.h>

using namespace std;

typedef long long ll;

ll n,m;
ll pow10[120];
int a[1001];
int c[1001];

void pre()
{
    int x,y,z;
    a[0] = c[0] =0;
    for(int i=1;i<1000;i++)
    {
        x = i;
        x = x/10;y = x%10;
        x = x/10;z = x;
        x = i%10;

        if(y>z && y>x) a[i] = 1;
        if(y<z && y<x) a[i] = 1;
        c[i] = c[i-1]+a[i];
        //if(i<100) printf("%d - %d\n",i,c[i]);
    }
    //printf("%d\n",c[999]);
}

ll solve(ll an)
{
    if(an<100)
    {
        return 0;
    }
    else if(an<1000)
    {
        return c[an]-c[100];
    }

    int dig[19],ptr=0;
    ll suf[19];
    suf[0] =0;
    while(an)
    {
        dig[ptr] = an%10;
        an=an/10;
        ptr++;
        suf[ptr] = suf[ptr-1] + (ll)dig[ptr-1]*pow10[ptr-1];
    }
    ll sol=0;
    ll till=0;
    //printf("ptr-%d\n",ptr);
    for(int i=ptr-1;i>=2;i--)
    {
        int v,k = i;
        v = dig[k]*100 + dig[k-1]*10 + dig[k-2];
        if(true)
        {
            if(till)
            {
                sol+= (ll)(till-1)*570*pow10[k-2];
                sol+= (ll)(570 - c[100])*pow10[k-2];
            }

            if(v)
            {
                if(till) sol+= c[v - 1]*pow10[k-2];
                else sol+=(c[v-1]-c[100])>0?(c[v-1]-c[100])*pow10[k-2]:0;
            }

            sol += a[v]*(suf[i-2]+1);
        }
        till = till*10 + dig[i];
    }
    return sol;
}

ll count()
{
    ll sol1,sol2;
    sol1 = solve(m);
    sol2 = solve(n-1);
    //printf("two sols %lld %lld\n",sol2,sol1);
    sol1 = sol1- sol2;
    return sol1;
}

int main()
{
    int cases;
    pow10[0]=1;
    for(int i=1;i<16;i++)
    {
        pow10[i]=10*pow10[i-1];
    }
    pre();
    scanf("%d",&cases);
    while(cases--)
    {
        scanf("%lld%lld",&n,&m);
        ll res = count();
        printf("%lld\n",res);
    }
}
