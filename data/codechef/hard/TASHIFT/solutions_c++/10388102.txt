#include<iostream>
#include<stdio.h>
#include<string>
#include<stdlib.h>
using namespace std;
void LPSArray(long int lps[],string pat)
{
    lps[0] = 0;
    long int i=1,len=0;
    while(i<pat.length())
    {
        if(pat[i]==pat[len])
        {
            len++;
            lps[i] = len;
            i++;
        }
        else
        {
            if(len!=0)
                len = lps[len-1];
            else
            {
                lps[i]=0;
                i++;
            }
        }
    }
}
void KMP(string txt,string pat)
{
    long int lt = txt.length();
    long int lp = pat.length();
    long int *lps = (long int*)malloc(sizeof(long int)*lp);
    LPSArray(lps,pat);
    long int i=0,j=0,jval=0,index = -1;
    int  k = 1;
    while(i<lt)
    {
        if(pat[j]==txt[i])
        {
            i++;
            j++;
        }
        if(j>jval)
        {
            jval = j;
            index = i-j;
        }
        if(j==lp)
        {
            j = lps[j-1];
        }
        else if(i<lt && pat[j]!=txt[i])
        {
            if(j!=0)
                j = lps[j-1];
            else
                i++;
        }
    }
    if(jval<j)
    {
        jval = j;
        index = i-j;
    }
    printf("%ld\n",index);
    //return k;
}
int main()
{
    long int N,i;
    scanf("%ld",&N);
    char A[N+1],B[N+1];
    scanf("%s",A);
    scanf("%s",B);
    string pat,txt,p;
    pat = A;
    txt = B;
    /*int k;
    for(i=N-1;i>0;i--)
    {
        p = pat.substr(0,i);
        k = KMP(txt,p);
        if(k==0)
            break;
    }*/
    KMP(txt,pat);
    return 0;
}
