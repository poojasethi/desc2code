#include <iostream>
#include <cstdlib>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <map>
#include <queue>

using namespace std;
const int M = 1e9 + 7, B = 37;
const int MAXN = 1e6 + 2;
typedef unsigned long long ULL;

int N;
char a[MAXN], b[MAXN];
ULL Ahash[MAXN], Bpow[MAXN];

int trymatch(int len)
{
	ULL bh = 0;
	for (int i = 0; i < len; i++)
		bh = bh * B + (b[i]-'a');
	if (bh == Ahash[len]) return 0;
	//cout << bh << " ";
	for (int i = 1; i < N; i++)
	{
		bh = bh - (b[i - 1]-'a') * Bpow[len - 1];
		bh = bh * B;
		bh = bh + (b[(i + len - 1) % N]-'a');
		if (bh == Ahash[len]) return i;
		//cout << bh << " ";
	}
	return -1;
}

int sol = 0;

void bs(int l, int r)
{
	while (l <= r)
	{
		int mid = (l + r) / 2;
		int a = trymatch(mid);
		if (a != -1)
		{
			sol = a;
			l = mid + 1;
		}
		else
			r = mid - 1;
	}
}

int main()
{
	scanf("%d", &N);
	scanf("%s%s", a, b);
	Bpow[0] = 1;
	for (int i = 1; i <= N; i++)
		Bpow[i] = Bpow[i - 1] * B;
	Ahash[0] = 0;
	for (int i = 1; i <= N; i++)
		Ahash[i] = Ahash[i - 1] * B + (a[i - 1]-'a');
	//trymatch(2);
	bs(1, N);
	printf("%d\n", sol);
	return 0;
}