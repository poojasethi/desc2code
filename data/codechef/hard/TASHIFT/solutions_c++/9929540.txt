#include<bits/stdc++.h>
using namespace std;

int n;
string A,B;
int lcp[1000001];

void precomputation(string P){
	int m=P.length();
	lcp[0]=-1;
	int k=-1;
	for(int i=1;i<m;i++){
		while(k>=0 && P[k+1]!=P[i])
			k=lcp[k];
		if(P[k+1]==P[i])
			k++;
		lcp[i]=k;
	}
}

void kmp(string T,string P){
	int ans=0;
	int shifts=0;;
	int j=-1,n=T.length(),m=P.length();
	for(int i=0;i<n;i++){
		while(j>=0 && T[i]!=P[j+1])
			j=lcp[j];
		if(T[i]==P[j+1])
			j++;
		if(j+1>ans){
			ans=j+1;
			shifts=i-j;
		}
		if(j==m-1)
			j=lcp[j];
		//cout<<j<<endl;
	}
	cout<<shifts;
}

int main(){
	cin>>n>>A>>B;
	string str=B+B;
	precomputation(A);
	/*
	cout<<str<<endl;
	cout<<A<<endl;
	for(int i=0;i<A.length();i++)
		cout<<lcp[i]<<" ";
	cout<<endl;
	*/
	kmp(str,A);
}