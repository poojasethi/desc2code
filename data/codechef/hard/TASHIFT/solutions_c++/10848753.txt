#include <iostream>
#include <cstdlib>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <map>
#include <queue>

#define MAXN 1000005

using namespace std;
int N;
char A[MAXN], B[2*MAXN];
int overlap[MAXN];

void calcoverlap()
{
	overlap[0] = -1;
	for (int i = 1; i < N; i++)
	{
		overlap[i + 1] = overlap[i] + 1;
		while (overlap[i + 1] > 0 && A[i] != A[overlap[i + 1] - 1])
			overlap[i + 1] = overlap[overlap[i + 1] - 1] + 1;
	}
}

int sol = 0;
int len = 0;

void searchpattern()
{
	int j = 0;
	bool b = 1;
	for (int i = 0; i < 2 * N && b; i++)
		for (;;)
		{
			if (B[i] == A[j])
			{
				j++;
				if (j == N)
				{
					sol = i - (j - 1);
					b = 0;
					j = overlap[j];
				}
				break;
			}
			else if (j == 0) break;
			else
			{
				if (j > len)
				{
					len = j;
					sol = i - j;
				}
				j = overlap[j];
			}
		}
}

int main()
{
	scanf("%d", &N);
	scanf("%s%s", A, B);
	for (int i = 0; i < N; i++)
		B[i + N] = B[i];
	B[2 * N] = '\0';
	calcoverlap();
	searchpattern();
	printf("%d\n", sol);
	return 0;
}