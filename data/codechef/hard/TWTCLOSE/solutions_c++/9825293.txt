#include <algorithm>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <vector>
#include <iostream>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <cctype>
#include <sstream>
#include <cassert>
#include <bitset>
#include <memory.h>

using namespace std;

#pragma comment(linker, "/STACK:200000000")

typedef long long int64;

#define fori(n) for(int i = 0; i < (int)(n); i++)
#define forj(n) for(int j = 0; j < (int)(n); j++)
#define ford(i, n) for(int i = (int)(n) - 1; i >= 0; i--)
#define fore(i, a, n) for(int i = (int)(a); i < (int)(n); i++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();++itr)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define last(a) (int(a.size()) - 1)
#define all(a) a.begin(), a.end()



int main() {
	//freopen("in.txt", "r", stdin) ;
	int n = 0, k = 0;
	scanf("%d %d", &n, &k);
	//std::vector<bool> tw(n, false);
	std::set<int> opened;
	fori(k) {
		char ch[50];
		scanf("%s", ch);
		if (strcmp(ch, "CLOSEALL") == 0) {
			opened.clear();
			printf("0\n");
		} else if (strcmp(ch, "CLICK") == 0) {
			int idx;
			scanf("%d", &idx);
			if (opened.find(idx) == opened.end()) opened.insert(idx);
			else opened.erase(idx);
			printf("%d\n", opened.size());
		}
	}
	return 0;
}
