#include <iostream>
#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <queue>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <string>

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ll> vll;
typedef vector<vll> vvll;
typedef vector<bool> vb;
typedef vector<vb> vvb;
typedef double ld;
typedef vector<ld> vld;

#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define rep(i, n) for(int i = 0; i < (int)(n); i++) //int ascending
#define repc(i, a, n) for(int i = (int)(a); i < (int)(n); i++) //customized
#define repd(i, n) for(int i = (int)(n) - 1; i >= 0; i--) //int descending
#define repl(i,n)   for(ll i=0;i<n;i++)

#define mp make_pair
#define fs first
#define sc second
#define last(a) int(a.size() - 1)

#define MEM(a,b)      memset(a,(b),sizeof(a))  //memset(arr,0,sizeof(arr))
#define MOD           1000000007



int main()
{

    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);

    ios_base::sync_with_stdio(false) ; cin.tie(0);

   int n,k;
   cin>>n>>k;
   int arr[n+1];

   for(int i=1;i<=n;i++)
    arr[i]=0;

   rep(i,k)
   {

    string s;
    cin>>s;

    if(s=="CLICK")
    {
        int temp;
        cin>>temp;
        if(arr[temp]==0)
            arr[temp]=1;
        else
            arr[temp]=0;

        int count = 0 ;

        for(int j=1;j<=n;j++)
           { 
            if(arr[j]==1)
                count++;
           }

            cout<<count<<endl;
    }
    else 
    {
        for(int j=0;j<=n;j++)
        arr[j]=0;

        cout<<"0"<<endl;
    }

   }    

    return 0;
}