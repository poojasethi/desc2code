def gcd(a,b):
    while b:
        a,b = b,a%b
    return a

def Pour(a,b,c):
    steps = 1
    x,y=a,0
    while True:
        temp = min(x,b-y)
        y = y+temp
        x = x-temp
        steps += 1
        #print str(x)+"\t"+str(y)
        if(x==c or y==c): break
        if(x==0):
            x=a
            steps += 1
        if(y==b):
            y=0
            steps += 1
    return steps

def Solve(a,b,c):
    if c==0: return 0
    elif c>a and c>b or (c%gcd(a,b))!=0: return -1
    elif a==c or b==c: return 1
    elif abs(b-a)==c: return 2
    else:
        return min(Pour(a,b,c), Pour(b,a,c))

def main():
    t = int(raw_input())
    for _ in range(t):
        a=int(raw_input())
        b=int(raw_input())
        c=int(raw_input())
        print Solve(a,b,c)

if __name__ == '__main__':
    main()