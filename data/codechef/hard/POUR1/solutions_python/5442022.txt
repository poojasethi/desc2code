def gcd(a,b):
    while b:
        a, b = b, a % b
    return a

def _steps(a,b,c):
    if b == 1:
        return 2*(a-c)

    k1,k2,r1,r2 = c,0,a,b
    while r1:
        k1,k2,r1,r2=(k2-r2/r1*k1)%b,k1,(r2%r1),r1
    # k2*a = c (mod b)
    k1 = (k2 * a - c)/b
    return 2*(k1+k2-(0 if c > a else 1))

def steps(a,b,c):
    d = gcd(a,b)

    if (c > a) and (c > b):
        return -1
    elif (c==a) or (c==b):
        return 1
    elif c % d:
        return -1
    else:
        a = a/d
        b = b/d
        c = c/d
        return min(_steps(a,b,c),_steps(b,a,c))

def readint():
    return int(raw_input())

t = readint()

for i in xrange(t):
    a = readint()
    b = readint()
    c = readint()
    print steps(a,b,c)
