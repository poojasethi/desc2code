#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define pair<int,int> PII;
using namespace std;
int go(int a,int b,int c)
{
    int awater=0,bwater=0,steps=0;
    while(awater!=c && bwater!=c)
    {
        if(awater==0){awater=a; steps++;}
        else if(bwater==b) {bwater=0; steps++;}
        else
        {
            //int sum=(awater+bwater);
            //bwater= (sum) < b ? (sum) : b ;
            //awater= (sum) - bwater;
            int x=min(awater,b-bwater);
            bwater+=x; awater-=x;
            steps++;
        }
    }
    return steps;
}
int main()
{
    int t; si(t);
    while(t--)
    {
        int a,b,c;
        si(a); si(b); si(c);
        if(c>a && c>b)
        {
            printf("%d\n",-1);continue;
        }
        if(c%__gcd(a,b)!=0)
        {
            printf("%d\n",-1); continue;
        }
        if(a>b) swap(a,b);
        printf("%d\n",min(go(b,a,c),go(a,b,c)));
    }
	return 0;
}
