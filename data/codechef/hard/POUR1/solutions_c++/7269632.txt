#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <math.h>

int GCD(int a, int b)
{
  int t;
  while(b != 0)
  {
    t = a % b;
    a = b;
    b = t;
  }

  return a;
}


int Brute(int a, int b, int c)
{
  int steps = 1;
  int l = a;
  int r = 0;
  while(l != 0 || r != 0)
  {
    if(r == b) // empty r
    {
      r = 0; 
    }
    else if(l != 0) // pour l to r
    {
      const int rEmpty = b - r;
      if(l > rEmpty) // l will have something left, r will be full
      {
        r = b;
        l -= rEmpty;
      }
      else // l will be empty
      {
        r += l;
        l = 0;
      }
    }
    else // fill l
    {
      l = a;
    }

    ++steps;

    if(l == c || r == c)
      return steps;
  }

  return -1;
}

int main()
{
  int T;
  scanf("%d\n", &T);

  while(T--)
  {
    int a, b, c; // [1, 40000]
    scanf("%d\n%d\n%d\n", &a, &b, &c);

    int steps0 = -1;
    if(c <= a || c <= b)
    {
      if(a == c || b == c)
        steps0 = 1;
      else if(a == b && a != c)
        steps0 = -1;
      else
      {
        int gcd = GCD(a, b);
        if((c % gcd) == 0)
        {
          int steps = Brute(a, b, c);
          int steps2 = Brute(b, a, c);
          steps0 = (steps < steps2) ? steps : steps2;
        }
      }
    }

    printf("%d\n", steps0);
  }

  return 0;
}
