#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif

int max(int p,int q)
{
    if(p>q)
        return p;
    else
        return q;
}

int min(int p,int q)
{
    if(p<q)
        return p;
    else
        return q;
}

char a[2007][2007];
int temp,ans,count1,vis[2007],n;
void dfs(int temp1,int flag)
{
    vis[temp1]=1;
    int i,count2;
    count2=0;
    for(i=0;i<n;i++)
    {
        if(a[temp1][i]=='1' && vis[i]==0)
        {
            printf("**%d %d\n",i,temp1);
            count2+=1;
            dfs(i,flag+1);
        }
    }
    if(count2>1)
    {
        ans+=count2*(count2-1);
    }
    if(flag>1)
    {
        ans+=2;
    }
    printf("%d %d\n",temp1,ans);
}

bitset<2002> adj[2002];
int main()
{
    int i,count,j,k;
    si(n);
    for(i=0;i<n;i++)
    {
        vis[i]=0;
        cin >> a[i];
        for(j=0;j<n;j++)
        {
            if(a[i][j]=='1')
            {
       //         temp.PB(j);
                adj[i].set(j);
            }
            else
            {
                adj[i].reset(j);
            }
        }
     //   link.PB(temp);
    }
    count=0;
    for(i=0;i<n;i++)
    {
        for(j=i+1;j<n;j++)
        {
            if(a[i][j]=='0' && (adj[i]&adj[j]).any())
            {
                count+=2;
            }
        }
    }
    dout(count);
    return 0;
}

