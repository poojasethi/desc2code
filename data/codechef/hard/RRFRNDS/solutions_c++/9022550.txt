#include<bits/stdc++.h>
using namespace std;
class graph
{
	int v;
	vector<int> *adj;
	public:
	graph(int v)
	{
		this->v=v;
		adj=new vector<int>[v];
	}
	void add_edge(int u,int v)
	{
		adj[u].push_back(v);
	}
	int search(int v,int n,int u)
	{
		int ans=0,j;
		for(j=0;j<adj[v].size();j++)
		{
			if(binary_search(adj[u].begin(),adj[u].end(),adj[v][j]))
			{
				return 1;
			}
		}
		return 0;
	}	
};
int main()
{
	int i,n,j,flag;
	char ch;
	int ans=0;
	scanf("%d",&n);
	graph g(n);
	char st[n][n];
	for(i=0;i<n;i++)
	{
		scanf("%c",&ch);
		for(j=0;j<n;j++)
		{
			scanf("%c",&(st[i][j]));
			if(st[i][j]=='1')
			{
				g.add_edge(i,j);
			}
		}
	}
	for(i=0;i<n;i++)
	{
		for(j=i+1;j<n;j++)
		{
			if((st[i][j]=='0'))
			{
				flag=g.search(i,n,j);
				if(flag)
					ans++;
			}
		}
	}
	printf("%d",ans*2);
	return 0;
}