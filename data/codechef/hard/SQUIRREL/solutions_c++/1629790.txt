#include<cstdio>
#include<iostream>
#include<vector>
#include<cstring>
#include<algorithm>
#include<set>
#include<cmath>
#include<bitset>
#include<map>
#include<queue>
#include<stack>
#define test(t) while(t--)
#define cin(n) scanf("%d",&n)
#define cout(n) printf("%d\n",n)
#define rep(i,a,n) for(i=a;i<=n;i++)
#define rrep(i,a,n) for(i=a;i>=n;i--)
#define vi vector<int>
#define vii vector< vector<int> >
#define vpii vector< pair<int,int> >
#define mii map<int,int>
#define pb push_back
#define mp make_pair
#define imax (int) 1000000007
#define ill long long
#define gc getchar_unlocked
void fcin(int &x){register int c = gc();x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}}
using namespace std;
struct tree{int p,t;};
int t,m,n,k,l,u,tim;ill s;

int main()
{
	int i;vector<tree> a;vector<int> nuts;
	fcin(t);
	test(t)
	{
		a.clear();nuts.clear();
		fcin(m);fcin(n);fcin(k);
		a.resize(m);nuts.resize(m);
		if(n>m) n=m;
		rep(i,0,m-1)
		{
			fcin(a[i].t);
		}
		rep(i,0,m-1)
		{
			fcin(a[i].p);
		}
		u=a[0].t+(a[0].p)*k;
		rep(i,1,m-1) u=min(u,a[i].t+(a[i].p)*k);
		l=0;
		while(l<u)
		{
			tim=(l+u)>>1;
			for(int i=0;i<m;i++)
				{
					if(a[i].t<=tim)	
					{
						nuts[i]=(tim-a[i].t)/a[i].p+1;//cout(nuts[i]);
					}
					else
						nuts[i]=0;
				}
			//nth_element(nuts.begin(),nuts.begin()+m-n,nuts.end());
			sort(nuts.begin(),nuts.end());
			s=0;
			rep(i,m-n,m-1)
			{
				s+= nuts[i];
			}
			if (s>=k) u=tim;
			else l=tim+1;
		}
		cout(l);
	}
	return 0;
}