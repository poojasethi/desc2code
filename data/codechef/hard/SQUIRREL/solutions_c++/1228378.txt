#include<iostream>
#include<algorithm>
using namespace std;
int m,n,k,T[10001],P[10001],nuts[10001];
bool f(int t)
{
    int i;
    for(i=0;i<m;i++)
    {
       if(t>=T[i])
         nuts[i]=(t-T[i])/P[i]+1;
       else
         nuts[i]=0;
    }
    nth_element(nuts,nuts+m-n,nuts+m);
    long long int total=0;
    for(i=m-n;i<m;i++)
       total+=nuts[i];
    return total>=k;
}
int main()
{
    int tc;
    scanf("%d",&tc);
    while(tc--)
    {
        int i,j,t=1,u,l=0,mid,x;
        scanf("%d%d%d",&m,&n,&k);
        n=n<m?n:m;
        for(i=0;i<m;i++)
          scanf("%d",&T[i]);
        for(i=0;i<m;i++)
          scanf("%d",&P[i]);
        u=T[0]+P[0]*k;
        for(i=1;i<m;i++)
           u=u>T[i]+P[i]*k?T[i]+P[i]*k:u;
    //    printf("%lld\n",u);
        while(l<u)
        {
           mid=(u+l)>>1;
      //     printf("checking for mid=%lld ",mid);
        //   printf("low=%lld high=%lld k=%lld x=%lld\n",l,u,k,x);
           if(f(mid))
           u=mid;
           else
           l=mid+1;
        }
        printf("%d\n",u);
    }
  //  getch();
    return 0;
}
            
        
        
