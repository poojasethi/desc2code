#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
using namespace std;
 
int main ()
{	
	int t;
	scanf("%d",&t);
	while(t--) {
		int m,n,k;
		scanf("%d %d %d",&m,&n,&k);
		int T[m],P[m];
		for ( int i=0;i<m;++i)
			scanf("%d",&T[i]);
		for(int i=0;i<m;++i)
			scanf("%d",&P[i]);
		
		int min=T[0]+(k-1)*P[0];
		for ( int i=1;i<m;++i)
			if ( min > T[i]+(k-1)*P[i])
				min=T[i]+(k-1)*P[i];
		int time,collected=0,start=0,end=min,time_min=min;
	//	printf("here\n");
		while ( start<=end) {
		//	printf("%d %d\n",start,end);
			time=start+(end-start)/2;
		//	printf("time is= %d\n",time);
			vector < int > collec(m);
			for ( int i=0;i<m;++i) {
			     	if ( time>=T[i])
					collec[i]=(time-T[i])/P[i]+1;
				else
					collec[i]=0;
			}		 
			if ( n<m)
				sort(collec.begin(),collec.end());
		//	for ( int i=0;i<collec.size();++i)
		//		printf("%d ",collec[i]);
		
			long long total=0ll;
			for ( int i=0;i<n && i<m; ++i)
				total+= collec[m-1-i];
			if ( total < k )
				start=time+1;
			else {
				end=time-1;
				time_min=time;
			}
			
		}
		printf("%d\n",time_min);
	}
return 0;
} 