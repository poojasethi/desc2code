// Squirrel and Chestnut
#include<iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
using namespace std;
void sort(int a[],int n)
{
    int x;
    for(int i=1;i<n;i++)
    {
        x = a[i];
        int j;
        for(j=i-1;j>=0 && x< a[j]; j--)
        {
            a[j+1] = a[j];
        }
        a[j+1] =x;
    }
}
int num(int tt,int *T,int *P,int m,int n)
{
    int chestnut[m];
    for(int i=0;i<m;i++)
    {
        chestnut[i] = tt<T[i]?0: (tt-T[i])/P[i] +1;
    }
    sort(chestnut,m);
    int total=0;
    for(int i=0;i<n && i<m;i++)
    {
        total += chestnut[m-1-i];
    }
    return total;
}
int main()
{
    int m,n,k,t;
    cin>>t;
    while(t--)
    {
        cin>>m>>n>>k;
        int T[m],P[m];
        for(int i=0;i<m;i++) cin>>T[i];
        for(int i=0;i<m;i++) cin>>P[i];
        int min=T[0]+(k-1)*P[0];
		for ( int i=1;i<m;++i)
			if ( min > T[i]+(k-1)*P[i])
				min=T[i]+(k-1)*P[i];
		int time,start=0,end=min,time_min=min;
        //	printf("here\n");
		while ( start<=end) {
		//	printf("%d %d\n",start,end);
			time=start+(end-start)/2;
		//	printf("time is= %d\n",time);
			vector < int > collec(m);
			for ( int i=0;i<m;++i) {
			     	if ( time>=T[i])
					collec[i]=(time-T[i])/P[i]+1;
				else
					collec[i]=0;
			}
			if ( n<m)
				sort(collec.begin(),collec.end());
		//	for ( int i=0;i<collec.size();++i)
		//		printf("%d ",collec[i]);
		//	printf("\n");
			long long total=0ll;
			for ( int i=0;i<n && i<m; ++i)
				total+= collec[m-1-i];
			if ( total < k )
				start=time+1;
			else {
				end=time-1;
				time_min=time;
			}

		}
		printf("%d\n",time_min);
    }
}
