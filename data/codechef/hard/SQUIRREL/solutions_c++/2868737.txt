#include <iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
int T[10000],P[10000];
long long v[10000];
long long getcount(long long t,long long x)
{
    long long count=0;
    if(t<T[x])return 0;
    count++;
    t-=T[x];
    count+=t/P[x];
    return count;
}
bool check(long long m,long long n,long long k,long long t)
{
    long long count=0,size;
    for(long long i=0;i<m;i++)
    {
        v[i]=getcount(t,i);
    }
    size=m-1;
    sort(v,v+m);
    for(long long i=0;i<n;i++)
        count+=v[size-i];
    if(count>=k)return true;
    return false;
}

int main()
{
    int t;
    long long m,n,k,low,high,i,mid;
    scanf("%d",&t);
    while(t--)
    {
       scanf("%lld%lld%lld",&m,&n,&k);
        for(i=0;i<m;i++)
            scanf("%d",&T[i]);
        for(i=0;i<m;i++)
            scanf("%d",&P[i]);
        low=0;high=1e9;
        if(n>m)n=m;
        while(low<high)
        {
            mid=low+(high-low)/2;
            if(check(m,n,k,mid))
                {high=mid;
                //cout<<"mid="<<mid<<endl;
                }
            else
                low=mid+1;
        }
        printf("%lld\n",low);
    }
    return 0;
}
