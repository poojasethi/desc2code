#include<stdio.h>
#define N 10000
unsigned long long int k;
int m,n,test,t[N],p[N];

void merge(long int a[],int l,int r,int h)
{
     int b[N];
     int i=l,j=r+1,q=0;
     while(i<=r&&j<=h&&q<n)
     {
      if(a[i]>a[j])
      {
       b[q]=a[i];
       i++;
      }
      else
      {
       b[q]=a[j];
       j++;   
      }
      q++;
     }
     if(q<n){
     while(i<=r)
     {
      b[q]=a[i];
      q++;
      i++;
     }
     while(j<=h)
     {
      b[q]=a[j];
      q++;
      j++;
     }}
     for(i=l,q=0;i<=h;i++,q++)
     {
      a[i]=b[q];
     }
}
void mergesort(long int a[],int l,int h)
{
     if(l<h)
     {
     int r=(l+h)/2;
     mergesort(a,l,r);
     mergesort(a,r+1,h);
     merge(a,l,r,h);
     }
}

int compute(unsigned long long t1) 
{
    long kt[N],sum=0;int i;
    for(i=0;i<m;i++)
    {
       if(t1>=t[i])
       kt[i]=(t1-t[i])/p[i]+1;
       else kt[i]=0;
    }
    mergesort(kt,0,m-1);
    for(i=0;(i<n);i++)
     sum=sum+kt[i];
     if(sum<k)
    return 1;
    else return 0;
}
int main()
{

     int i;
     unsigned long long h,l,mid;
     scanf("%d",&test);
     while(test--)
      {
             scanf("%d %d %llu",&m,&n,&k);
             if(m<n) n=m;
             for(i=0;i<m;i++)
               scanf("%d",&t[i]);
             for(i=0;i<m;i++)
               scanf("%d",&p[i]);
             l=0;
             h=(unsigned long long)t[0]+(k-1)*p[0];
             for(i=1;i<m;i++)
             if(h>(t[i]+(k-1)*p[i]))h=t[i]+(k-1)*p[i];
             while(l<h)
             {
                 mid=(l+h)/2;
                 if(compute(mid))
                   l=mid+1;
                 else  
                   h=mid;
             }
             printf("%llu\n",l);
      }
     return 0;
}
