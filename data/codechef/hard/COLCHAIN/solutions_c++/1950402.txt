#include <cstdio>
using namespace std;

#define mod 1000000007
typedef long long int64;
inline int mul(int x, int y) {
	return (int64) x * y % mod;
}
inline int sum(int x, int y) {
	int answer = x + y;
	if (answer >= mod) answer -= mod;
	return answer;
}

inline void ADD(int & x, int y) { x = sum(x, y); }

int diffs[100000];
int main() {
	int tc;
	scanf("%d", &tc);
	for (; tc > 0; tc --) {
		int n, ncols;
		scanf("%d%d", &n, &ncols);
		for (int i = 0; i < ncols; i ++) {
			diffs[i] = 1;
		}
		int S = ncols;
		int ptr = 0;
		for (n -= ncols + 1; n > 0; n --) {
			int tmp = S;
			ADD(S, mod - diffs[ptr]);
			diffs[ptr] = tmp;
			ADD(S, tmp);
			
			ptr ++; if (ptr == ncols) ptr = 0;
		}
		int subanswer = 0;
		for (int i = 0; i < ncols; i ++) {
			ADD(subanswer, diffs[i]);
		}
		int answer = 0;
		for (int i = 0; i < ncols; i ++) {
			answer = sum(answer, subanswer);
			ADD(subanswer, mod - diffs[ptr]);
			
			ptr ++; if (ptr == ncols) ptr = 0;
		}
		for (int i = 1; i <= ncols; i ++) {
			answer = mul(answer, i);
		}
		printf("%d\n", answer);
	}
}