#include <iostream>
#include <cstring>

using namespace std;

const long long modulo = 1e9 + 7;
int N, M;

long long dp[1 << 17];
long long sum[1 << 17];

void scan(){
  cin >> N >> M;
}

void solve(){
  if ( M == 1 ) { cout << 1 << endl; return; }
  
  memset ( dp, 0, sizeof ( dp ) );
  memset ( sum, 0, sizeof ( sum ) );
  
  sum[0] = dp[0] = 1;
  
  for ( int i = 1; i <= M; ++i ){
    dp[i] = 1;
    sum[i] = sum[i - 1] + 1;
  }
  
  for ( int i = M + 1; i < N; ++i ){
    dp[i] = ( sum[i - 1] - sum[i - M - 1] + modulo ) % modulo;
    sum[i] = ( sum[i - 1] + dp[i] ) % modulo;
  }
  /*
  for ( int i = 0; i < N; ++i )
    cout << dp[i] << " ";
  cout << endl;*/
  long long res = 0;
  
  for ( int i = N - M - 1; i < N; ++i )
    res = ( res + ( sum[N - 1] - sum[i] + modulo ) % modulo ) % modulo;
  
  for ( int i = 1; i <= M; ++i )
    res = ( res * i ) % modulo;
  
  cout << res << endl;
}

int main(){
  int tests;
  
  cin >> tests;
  
  while ( tests -- ){
    scan();
    solve();
  }
}