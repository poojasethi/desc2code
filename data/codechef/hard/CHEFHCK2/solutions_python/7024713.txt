#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <vector>
#include <algorithm>
#define INF 1E9
using namespace std;
int n;
long long Max=305731144433251701LL;
inline int sqr(long long a)
{
    int x=sqrt(a);
    return x;
}
inline bool issqr(long long a)
{
    int x=sqr(a);
    if((long long)x*x==a)return 1;
    else return 0;
}
vector<long long> pws;
void pre()
{
    long long i;
    vector<long long> pw3,pw5;
    pw3.reserve(700000);
    pw5.reserve(30000);
    long long t,a,b;
    bool f=0;
    for(i=2;;i++)
    {
        if(issqr(i))continue;
        a=(long long)i*i;

        b=a*i;
        if(b>Max)break;
        pw3.push_back(b);
        if(f)continue;
        if(i>=3141)f=1;
        t=Max/a;
        b*=a;
        while(b<=t)
        {
            pw5.push_back(b);
            b*=a;
        }
        if(b<=Max)pw5.push_back(b);
    }
    sort(pw5.begin(),pw5.end());
    pws.resize(pw3.size()+pw5.size());
    merge(pw3.begin(),pw3.end(),pw5.begin(),pw5.end(),pws.begin())-pws.begin();
    pws.erase(unique(pws.begin(),pws.end()),pws.end());
}
inline int l2(long long a)
{
    return ceil(log2(a));
}
int bin_search(long long x)
{
    long long t=x&-x;
    if(t==x)
    {
        return l2(x);
    }
    return 2*l2(x)-l2(t)-1;
}
int solve(long long x)
{
    if(x<=1)return 2-x;
    int y=sqr(x);
    int is_sqr=issqr(x);
    int j=(lower_bound(pws.begin(),pws.end(),x)-pws.begin());
    if(is_sqr||pws[j]==x)
    {
        return j-is_sqr+y;
    }
    else return bin_search(x+1-j-(y-1));
}
int main()
{
   
    pre();
    int T;
    long long x;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%lld",&x);
        printf("%d%c",solve(x),T?' ':'\n');
    }
}
 