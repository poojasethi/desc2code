/* author : Mukesh Kumar Yadav
   Problem:  
   Love U Idiot , Take Care !
   */
#include<algorithm>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<climits>
#include<fstream>
#include<cctype>
#include <bitset>
#include<cstdio>
#include<string>
#include<vector>
#include<queue>
#include<stack>
#include<cmath>
#include<map>
#include<set>
using namespace std;

#define df(i,a,b) for(typeof(b) i=a;i>=b;i--)
#define f(i,a,b) for(typeof(b) i=a;i<=b;i++)
#define fill(x,a) memset(x,a,sizeof(x))
#define Clear(x) memset(x,0,sizeof(x))
#define inf 2147000000
#define pb push_back
#define mp make_pair
#define Y second
#define X first

const double pi     =   acos(-1.0);
const double eps    =   1e-8;
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)
#define rep(i,a) for(i=0;i<a;i++)
typedef unsigned long long int ull;
typedef vector<string> VS;
typedef pair<int,int> ii;
typedef vector<int> VI;

typedef long long LL;
using namespace std;
int main() {
	
	LL MX,i,tmp,j,a,x;
	int N,sz; MX=(LL)pow(3141,5);
	vector<LL> SQR_FREE;
	for(i=2;i<(MX/(i*i));i++) {
		tmp=i*i*i;
		for(j=0;;j++) {
			
			x=sqrt(tmp);
			if(x*x!=tmp) SQR_FREE.pb(tmp);
			if(tmp>MX/i) break;
			tmp*=i;
		}
	}
	sort(SQR_FREE.begin(),SQR_FREE.end());
	
	SQR_FREE.erase( unique( SQR_FREE.begin(), SQR_FREE.end() ), SQR_FREE.end() );
	
	sz=SQR_FREE.size();
	S(N);
	LL ans;
	LL lo,mi,hi,rnk;
	while(N--) {
		
		scanf("%lld",&a);
		x=(LL)sqrt(a);
		lo=0;hi=sz-1;
		if(SQR_FREE[0]>a) mi=0;
		else {
			while(1) {
				
				mi=(lo+hi)>>1;
				if(SQR_FREE[mi]>=a && (!mi||SQR_FREE[mi-1]<a)) break;
				if(SQR_FREE[mi]>a) hi=mi-1;
				else lo=mi+1;
			}
		}
		if(a>1 && (SQR_FREE[mi]==a || (x*x)==a)) {
			
			ans=0;
			ans+=mi;
			if(x*x==a) ans+=x-2;
			else ans+=x-1;
			printf("%lld ",ans+1);
		} else {
			
			rnk=a-mi-(x-1)+1;
			if(a==0) rnk=1;
			ans=1;
			for(i=2;;) {
				ans++;
				if((i*2)>=rnk) break;
				i*=2;
			}
			while(i>rnk) i/=2;
			if(!a || (i*2)!=rnk) {
				
				lo=i;hi=2*i;
				while(1) {
					mi=(lo+hi)>>1;
					ans++;
					if(mi==rnk) break;
					if(mi<rnk) lo=mi;
					else hi=mi;
				}
			}
			if(a==0) ans=2;
			if(a==1) ans=1;
			printf("%lld ",ans);
		}
	}
	
	return 0;
}