#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
 
pair< long long, int > R[32769];
long long result, a[20], x;
int r[65], sign;
 
unsigned long long func( unsigned long long x ){
	x = (x & 0x5555555555555555ULL) + ((x >> 1) & 0x5555555555555555ULL);
	x = (x & 0x3333333333333333ULL) + ((x >> 2) & 0x3333333333333333ULL);
	x = (x & 0x0f0f0f0f0f0f0f0fULL) + ((x >> 4) & 0x0f0f0f0f0f0f0f0fULL);
	x = (x & 0x00ff00ff00ff00ffULL) + ((x >> 8) & 0x00ff00ff00ff00ffULL);
	x = (x & 0x0000ffff0000ffffULL) + ((x >> 16) & 0x0000ffff0000ffffULL);
	x = (x & 0x00000000ffffffffULL) + ((x >> 32) & 0x00000000ffffffffULL);
	return x;
}
 
main(){
	int i, j, t;
	int n, m;
	scanf ( "%d", &t );
	while( t -- ){
		scanf ( "%d", &n );
		result = 0;
		for ( i = 0; i < n; i ++ )
			scanf ( "%lld", a + i );
		memset ( r, 0, sizeof ( r ) );
		R[0] = make_pair( ( 1LL << 60 ) - 1, -1 );
		for ( i = 0; i < n; i ++ ){
			m = ( 1 << i );
			for ( j = 0; j < m; j ++ ){
				R[ m + j ].first = ( R[j].first & a[i] );
				R[ m + j ].second = - R[j].second * 2;
				r[ func( R[ m + j ].first ) ] += - R[j].second;
			}
		}
		result = 0;
		for ( i = 0; i <= 60; i ++ ){
			r[ i + 1 ] += r[i] / 2;
			r[i] %= 2;
			if ( r[i] == -1 ){
				r[i] = 1;
				r[ i + 1 ] --;
			}
			if ( r[i] )
			result |= 1LL << i;
		}
		printf( "%lld\n", result );
	}
	
	return 0;
}
