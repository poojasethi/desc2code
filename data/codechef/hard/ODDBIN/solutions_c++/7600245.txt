//Data Structure includes
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
 
 
//Other Includes
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
//#include<bitset>
 
using namespace std;
 
 
#define FOR(i,a,b)							for(int i=a;i<b;i++)
#define REP(i,n)							FOR(i,0,n)
#define pb								push_back
#define s(n)								scanf("%d",&n)
#define sl(n) 								scanf("%lld",&n)
#define sf(n) 								scanf("%lf",&n)
#define fill(a,v) 							memset(a, v, sizeof a)
#define sz								size()
#define INF								(int)1e9
#define EPS								1e-9
#define bitcount							__builtin_popcount
#define all(x)								x.begin(), x.end()
#define gcd								__gcd
 
 
typedef vector<int> VI;
typedef vector<vector<int> > VVI;
typedef long long LL;
typedef pair<int, int > PII;
 
 
 
 
 
/*Main code begins now */
int n,cnt1,cnt2;
LL sum;
LL a[20];
int bit[1<<20];
 
void solve(unsigned long long base,int k,int cnt1)
{
	if(k==n)
	{
		cnt2=bit[(base<<44)>>44] + bit[(base<<24)>>44] + bit[(base<<4)>>44] +cnt1;
			
		if(cnt1&1)
			sum-=(1LL<<cnt2);
		else
			sum+=(1LL<<cnt2);
	}
	else
	{
		solve(base,k+1,cnt1);
		solve((base&(a[k])),k+1,cnt1+1);
	}
}
 
void solve()
{
	sum=0;
	int i,bm;
	unsigned long long base=(1LL<<60)-1;
 
	solve(base,0,-1);
	printf("%lld\n",sum+(1LL<<59));
}
 
void input()
{
	s(n);
	for(int i=0;i<n;i++)
	{
		sl(a[i]);
	}
		
}
 
 
int main()
{
	for(int i=0;i<(1<<20);i++)
		bit[i]=bit[i>>1]+(i&1);
 
	int T; s(T);
	while(T--)
	{
		input();
		solve();
	}
}