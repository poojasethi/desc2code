import heapq
def func(pq,sum,res,n,flag):
    if n==0:
        if flag:
            heapq.heappush(pq, sum)
        return
    func(pq, sum+res[n-1], res, n-1, True)
    func(pq, sum, res, n-1, flag)
    


t=int(raw_input())
for i in range(t):
    res=[]
    pq=[]
    
    n=int(raw_input())
    x=raw_input()
    ss=map(int,x.split())#ss-->subset sum list
    ss.sort()
    if n==1:
        res.append(ss[1])
    elif n==2:
        res.append(ss[1])
        res.append(ss[2])
    else:
        res.append(ss[1])
        res.append(ss[2])
        heapq.heappush(pq,ss[1]+ss[2])
        for x in range(3,len(ss)):
            if len(pq)>0 and ss[x]==pq[0]:
                heapq.heappop(pq)
            else:
                func(pq, ss[x], res, len(res), False)
                res.append(ss[x])
                   
                
                
            if len(res)==n:
                break
    for j in range(n):
               print res[j],
    print ''    
    
                
            
        
        
        
        
    