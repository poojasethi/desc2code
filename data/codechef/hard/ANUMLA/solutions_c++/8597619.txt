#include <bits/stdc++.h>

using namespace std;

typedef long long LL;
typedef pair <int, int> PII;
typedef pair <int, LL>  PIL;
typedef pair <LL, int>  PLI;
typedef pair <LL, LL>   PLL;
typedef vector <int> VI;
typedef vector <LL> VL;
typedef vector <VI> VVI;
typedef vector <VL> VVL;

// Container Manipulation / Traversal Macros
#define forall(i,a,b)       for(int i=a; i<b; i++)
#define foreach(itr, c)     for( typeof((c).begin()) itr = (c).begin();  itr != (c).end(); ++itr)
#define whole(a)            a.begin(), a.end()
#define in(a, b)            ((b).find(a) != (b).end())
#define pb                  push_back
#define pf                  push_front
#define fill(a, value)      memset(a, value, sizeof a)
#define mp                  make_pair

// Useful Functions
#define maX(a,b)            ((a) > (b) ? (a) : (b))
#define miN(a,b)            ((a) < (b) ? (a) : (b))

// Constants
#define MOD                 1000000007
#define INF                 (int) 1e9
#define EPS                 1e-9
#define MAX                 25001

int main()
{
	//freopen("in.txt", "r", stdin);
	int T;
	cin >> T;
	while(T--)
	{
		int N;
		cin >> N;
		int in[1<<N];
		multiset <int> m;
		vector <int> ans;
		vector <int> sum(1<<N, 0);

		for(int i = 0; i < (1<<N); i++)
		{			
			cin >> in[i];
		}
		
		sort(in, in + (1<<N));
		
		int cur = 0;
		for(int i = 1; i < (1<<N); i++)
		{
			int ex = -1;
			if(m.size())
			{
				ex = *m.begin();
			}
			if(in[i] == ex)
			{
				m.erase(m.begin());
			}	
			else
			{
				ans.pb(in[i]);
				int sz = cur;
				for(int j = 0; j < sz; j++)
				{
					sum[cur++] = (sum[j] + in[i]);
					m.insert(sum[j] + in[i]); 
				}
				sum[cur++] = in[i];
			}
		}
		for(int i = 0; i < ans.size(); i++)
		{
			cout << ans[i] << " ";
		}
		cout << endl;
	}
	return 0;
}