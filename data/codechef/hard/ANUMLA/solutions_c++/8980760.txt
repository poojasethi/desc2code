#include <cstdio>
#include <cstring>
#include <algorithm>
#define MAX 15
 
using namespace std;
 
inline int readInt(){
	int number = 0;
	char c = getchar_unlocked();
	while(c<'0')
		c = getchar_unlocked();
	while(c>='0' && c<='9'){
		number = (number<<3)+(number<<1)+c-'0';
		c = getchar_unlocked();
	}
	return number;
}
 
int s[1<<MAX+1],d[1<<MAX+1],c[1<<MAX+1];
 
int binary_search(int beg,int end,int item){
	int mid;
 
	while(beg<=end){
		mid = (beg+end)/2;
 
		if(s[mid] > item)
			end = mid - 1;
		else if(s[mid] == item && d[mid])
			beg = mid + 1;
		else if(s[mid] == item && (mid == beg || s[mid-1] < item || d[mid-1]))
			return mid;
		else if(s[mid] == item && !d[mid-1])
			end = mid -1;
		else
			beg = mid + 1;
 
		// if(s[mid] == item && (mid == beg || s[mid-1] < item))
		// 	return mid;
		// else if(s[mid] >= item)	
		// 	end = mid-1;
		// else
		// 	beg = mid+1;
	}
 
	return -1;
}
 
int main(){
	int t,n,m,i,k,j,g,h;
	int a[MAX+2];
 
	t = readInt();
 
	while(t--){
		n = readInt();
		memset(d,0,sizeof d);
		memset(c,0,sizeof c);
 
		m = (1<<n);
		k = 0,j=0;
 
		for(i = 0;i<m;i++)
			s[i] = readInt();
 
		sort(s,s+m);
 
		for(i = 1;i<m;i++){
			if(!d[i]){
				d[i] = 1;
				a[j++] = s[i];
				int temp = k;
				for(g = 0;g<temp;g++){
					int item = c[g] + s[i];
					int pos = binary_search(i+1,m-1,item);
					if(pos >= 0)
						d[pos] = 1;
 
					c[k++] = item;
				}
				c[k++] = s[i];
			}
		}
 
		for(i = 0;i<n;i++)
			printf("%d ",a[i]);
		printf("\n");
	}
	return 0;
} 