#include<bits/stdc++.h>
using namespace std;


int T,N,A[33000],temp;
multiset<int> iset;
vector<int> ans,subsets;
multiset<int> :: iterator sit;

void iclear()
{
    int n=subsets.size();
    int idx=ans.size()-1;
    for(int i=0;i<n;i++)
    {
        temp=subsets[i]+ans[idx];
        subsets.push_back(temp);
        if((sit=iset.find(temp))!=iset.end())iset.erase(sit);
    }
}

int main()
{
    cin>>T;
    while(T--)
    {
        ans.resize(0,0);
        subsets.resize(0,0);
        iset.clear();
        cin>>N;for(int i=0;i<(1<<N);i++){cin>>A[i];iset.insert(A[i]);}
        if(N==1){cout<<*(--iset.end())<<endl;continue;}
        subsets.push_back(0);
        iset.erase(iset.begin());

//        temp=*iset.begin();
//        ans.push_back(*iset.begin());
//        subsets.push_back(*iset.begin());
//        iset.erase(iset.begin());

//        ans.push_back(*iset.begin());
//        subsets.push_back(*iset.begin());
//        subsets.push_back(*iset.begin()+temp);

        while(!iset.empty())
        {
            ans.push_back(*iset.begin());
            iclear();
//            temp=*iset.begin();
//            while((sit=iset.find(temp))!=iset.end())iset.erase(sit));
        }

        for(int i=0;i<ans.size();i++)
            cout<<ans[i]<<" ";
        cout<<endl;

    }
    return 0;
}
