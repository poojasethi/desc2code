//---------------------------JUGNU: LET YOUR LIGHT SHINE---------------------------//
#include <bits/stdc++.h>
#define ll long long int
#define pb push_back
#define pf push_front
#define sz size
#define mk make_pair
#define ln length
#define vt(a) vector <ll> a
#define st(a) set <ll> a
#define sti(a) set <ll>::iterator a
#define fr(i,a,b) for(i=a;i<b;i++)
#define fre(i,a,b) for(i=a;i<=b;i++)
#define frr(i,a,b) for(i=a;i>=b;i--)
#define sc(a) scanf("%lld",&a)
#define sm(a,b) scanf("%lld%lld", &a, &b)
#define pr(a) printf("%lld\n", a)
#define pm(a,b) printf("%lld %lld\n", a, b)
#define cn(a) cin >> a
#define ct(a) cout << a << endl
#define isset(x,i) ((x>>i)&1)
#define fastScan ios_base::sync_with_stdio(0); cin.tie(NULL);
using namespace std;
multiset<ll> subset;
multiset<ll>:: iterator it;
vector<ll> result, partial, temp;
int main()
{
	ll i, j, t, n, m, k, l, r, mini,cnt, maxi, flag, loop;
	sc(t);
	while(t--)
	{
		result.clear();
		subset.clear();
		partial.clear();
		sc(n);
		loop = 1LL<<n;
		fr(i, 0, loop)
		{
			sc(k);
			subset.insert(k);
		}
		subset.erase(0);
		while(result.sz()!=n)
		{
			temp.clear();
			it = subset.begin();
			result.pb(*it);
			fr(i, 0, partial.sz())
				temp.pb(partial[i] + *it);
			temp.pb(*it);
			fr(i, 0, temp.sz())
			{
				it = subset.find(temp[i]);
				subset.erase(it);	
				partial.pb(temp[i]);
			}
		}
		fr(i, 0, result.sz())
			printf("%lld ", result[i]);
		printf("\n");
	}
return 0;
}
