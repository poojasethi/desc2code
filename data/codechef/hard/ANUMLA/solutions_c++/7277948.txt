#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <math.h>

int A[32768];
int R[15];
int S[32768];

int main()
{
  int T; // [1, 50]
  scanf("%d\n", &T);

  while(T--)
  {
    int N; // [1, 15]
    scanf("%d\n", &N);

    int count = 1 << N; // [2, 32768]

    for(int i = 0; i < count; ++i)
      scanf("%d\n", A + i);

    std::sort(A, A + count);

    int *r = R - 1;
    int *rlast = R + N - 1;

    int *a = A;
    int *aend = A + count;
    int *s = S;
    *s = 0;
    ++s;
    int scount = 1;

    for(; a < aend; ++a)
    {
      if(*a == 0)
        continue; // skip all zeros

      // New number encountered
      ++r;
      *r = *a;
      if(r == rlast)
        break;

      // Create new sums for it
      for(int i = 0; i < scount; ++i)
        s[i] = S[i] + *a;

      int *ss = s; // Unprocessed new sums
      int *aa = a;

      // Shift s and scount
      s += scount;
      scount = scount << 1;

      std::sort(ss, s);

      // Now run through s and a zeroing the sums
      while(ss < s)
      {
        if(*aa == *ss) // Equal to the sum, disable it by setting to zero
        {
          *aa = 0;
          ++ss;
        }
        ++aa;
      }
    }

    printf("%d", R[0]);
    for(int i = 1; i < N; ++i)
      printf(" %d", R[i]);

    printf("\n");
  }

  return 0;
}
