#include <bits/stdc++.h>
using namespace std;
 
#define ll long long int
#define setv(arr,v) memset(arr,v,sizeof(arr))
#define rep(i,s,l) for(int i = s; i < l; ++i)
#define scan(arr,n) rep(i,0,n) scanf("%lld", &n)

int main(){
	int T;
	cin>>T;
	while(T--){
		ll n, num; 
		cin>>n;
		n = (1<<n);
		multiset<ll>tt;
		rep(i,0,n){
			cin>>num;
			tt.insert(num);
		}
		multiset<ll>::iterator it;
		it = tt.begin();
		tt.erase(it);
		vector<ll>elems, arr;
		it = tt.begin();
		ll e1 = *it;
		elems.push_back(*it);
		arr.push_back(*it);
		tt.erase(it);

		if(tt.size() != 0){
			it = tt.begin();
			ll e2 = *it;
			elems.push_back(e2);
			arr.push_back(e2);
			tt.erase(it);
			elems.push_back(e1+e2);
			it = tt.find(e1+e2);
			tt.erase(it);
			it = tt.begin();
			ll e3 = *it;
			while(true){
				if(tt.size() == 0)
					break;
				ll size = elems.size();
				rep(i,0,size){
					ll temp = e3+elems[i];
					elems.push_back(temp);
					it = tt.find(temp);
					tt.erase(it);
				}
				it = tt.find(e3);
				tt.erase(it);
				it = tt.begin();
				elems.push_back(e3);
				arr.push_back(e3);
				e3 = *it;
				if(arr.size() == n)
					break;
				if(tt.size() == 0)
					break;
			}
			
		}

		ll size = arr.size();
		rep(i,0,size){
			cout<<arr[i]<<" ";
		}
		printf("\n");
	}
}