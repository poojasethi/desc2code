#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif

int max(int p,int q)
{
    if(p>q)
        return p;
    else
        return q;
}

int min(int p,int q)
{
    if(p<q)
        return p;
    else
        return q;
}

struct comparator {
 bool operator()(int i, int j) {
 return i > j;
 }
};

int main()
{
    VI c;
    int i,j,k,t,n,b[100005],temp,sum,k1;
    priority_queue<int,VI,comparator> a;
    si(t);
    while(t--)
    {
        while(a.size()!=0)
        {
            a.pop();
        }
        si(n);
        c.clear();
        for(i=0;i<pow(2,n);i++)
        {
            si(temp);
            c.PB(temp);
        }
        sort(c.begin(),c.end());
        temp=c[0];
        temp=c[1];
        b[0]=temp;
        j=1;
        if(n>1)
        {
            temp=c[2];
            b[1]=temp;
            a.push(b[0]+b[1]);
            j++;
        }
        for(i=3;i<pow(2,n);i++)
        {
            temp=c[i];
           //  cout << i << endl;
          //  printf("***\n");
            if(a.size()!=0)
            {
                if(temp!=a.top())
                {
                   // cout << temp << endl;
                    b[j++]=temp;
                    if(j==n)
                    {
                        break;
                    }
                    for(k1=1;k1<pow(2,j-1);k1++)
                    {
                        temp=k1;
                        sum=0;
                        k=0;
                        while(temp>0)
                        {
                            if(temp & 1)
                            {
                                sum+=b[k];
                            }
                            temp=temp>>1;
                            k++;
                        }
                     //   cout << sum+b[j-1] << " ";
                        a.push(sum+b[j-1]);
                    }
              //      cout << endl;
                }
                else
                {
                    a.pop();
                }
            }
            else
            {
                b[j++]=temp;
                if(j==n)
                    {
                        break;
                    }
             //   cout << temp << endl;
                for(k1=1;k1<pow(2,j-1);k1++)
                {
                    temp=k1;
                    sum=0;
                    k=0;
                    while(temp>0)
                    {
                        if(temp & 1)
                        {
                            sum+=b[k];
                        }
                        temp=temp>>1;
                        k++;
                    }
               //     cout << sum+b[j-1] << " ";
                    a.push(sum+b[j-1]);
                }
             //   cout << endl;
            }
        }
        for(i=0;i<j;i++)
        {
            cout << b[i] << " ";
        }
        cout << endl;
    }
    return 0;
}

