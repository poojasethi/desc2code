#include <bits/stdc++.h>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
#define ll long long
#define D long double
#define maxn 1000000
#define mod 1000000007
#define sz(v) int((v).size())
#define all(v) (v).begin(), (v).end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sd(x) scanf("%I64d", &x)
#define present(c,x) ((c).find(x) != (c).end())
#define INF 2000000000
#define N 3000000
VI num;
VI sum;
int val[N];

void pre()
{

}
bool found(VI& s, int n)
{
	int b = 0;
	int e = s.size();
	int mid;
	while(b<e)
	{
		mid = (b+e)>>1;
		if(s[mid]==n)
		{
			return true;
		}
		else if(s[mid]>n)
		{
			e = mid;
		}
		else
		{
			b = mid+1;
		}
	}
	return false;
}
void solve()
{
	ll n,i,j,l,m,k,ans,a,b,s;
	scanf("%lld",&n);
	sum.clear();
	num.clear();
	ll p = (1<<n);
	for(i=0;i<p;++i)
	{
		scanf("%d",&val[i]);
	}
	sort(val,val+p);
	sum.pb(0);
	for(i=1;i<p;++i)
	{
		if(!found(sum,val[i]) || found(num,val[i]))
		{
			num.pb(val[i]);
			int sz= sum.size();
			for(j=0;j<sz;++j)
			{
				sum.pb(sum[j]+val[i]);
			}
			sort(sum.begin(),sum.end());
		}
		if(num.size()==n-1)
		{
			int s = 0;
			for(j=0;j<num.size();++j)s+=num[j];
			num.pb(val[p-1]-s);
			break;
		}
	}
	for(i=0;i<num.size();++i)
	{
		printf("%d ",num[i]);
	}
	printf("\n");
}
int main()
{
	//pre();
	int t = 1;
	scanf("%d",&t);
	while(t--)		solve();
	return 0;
}