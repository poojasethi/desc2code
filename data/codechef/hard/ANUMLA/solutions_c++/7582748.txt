#include <iostream>
#include <stdio.h>
#include <math.h>
#include <map>



#include <algorithm>

typedef long long ll;

using namespace std;

bool comp(int a, int b){
    
    return a<b;
}



void cumsum(int* allsum, int size, int newval){
    
    int range = pow(2,size);
    int b[range];
    
    
    for(int i=0;i<range;i++){
        b[i] = allsum[i] + newval;
    }
    
    
    for(int i=0;i<range;i++){
        allsum[range+i] = b[i];
    }
    
    
    
}



int main() {
    
    int tc;
    scanf("%d",&tc);
    
    while(tc--){
    int n;
    scanf("%d", &n);
        
    int num = pow(2, n);
        
    map<int, int>mymp;
    
    
    
    for(int i=1;i<=num;i++){
        
        int tmp;
        scanf("%d",&tmp);
        if(mymp.find(tmp)!=mymp.end())mymp[tmp]++;
        else mymp[tmp] = 1;
        
    }
    
    if(mymp[0]>=2)mymp[0]--;
    else mymp.erase(0);
    
    
    int ans[n+1];
    
    map<int, int>::iterator it;
    
    it = mymp.begin();
    
    ans[0] = it->first;
    int size = 1;
    
    int allsum[1000000];
    allsum[0] = 0;
    allsum[1] = ans[0];
    
    mymp[ans[0]]--;
        
    for(it = mymp.begin();it!=mymp.end();++it){
        
        
        while(it->second>0){
        
        int nxtans = it->first;

            cumsum(allsum, size, nxtans);
            ans[size] = nxtans;
            size++;
            int range = pow(2,size);
            
            for(int i=range/2;i<range;i++){
                int tmp = allsum[i];
                mymp[tmp]--;
            }
            
            if(size==n)break;
            
            
        }
        
        if(size==n)break;
        
    }
    
    
    
    for(int i=0;i<n;i++)cout<<ans[i]<<" ";
    
        cout<<endl;
    
    }
    
    
}

/*
 
 
 
 1
 3
 0 0 0 0 0 0 0 0

1
 5
 0 0 1 1 2 2 3 3 4 4 4 4 5 5 5 5 6 6 6 6 7 7 7 7 8 8 9 9 10 10 11 11
 
1
6
0 1 1 1 1 1 1 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 5 5 5 5 5 5 6
 */








