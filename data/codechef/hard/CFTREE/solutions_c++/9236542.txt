#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
#define pb push_back
#define F first
#define S second
#define MAX 300200
#define N1 123456
vector<int>V[N1];
int arr[N1],dep[N1],lev[N1],vis[N1];
int t=1;
ll B1[N1],B2[N1];
ll Fib[4*N1];
int N;
void update(int a,ll val,ll val2)
{
    for(;a<=N;a+=a&(-a))
        {
            B1[a]=(B1[a]+val+mod)%mod;
            B2[a]=(B2[a]+val2+mod)%mod;
        }
}
pair<ll,ll> query(int a)
{
    pair<ll,ll>sum;
    sum.F=0;
    sum.S=0;
    for(;a>0;a-=a&(-a))
        {
            sum.F=(sum.F+B1[a])%mod;
            sum.S=(sum.S+B2[a])%mod;
        }
    return sum;
}
int dfs(int a,int level)
{
    arr[a]=t;
    lev[a]=level;
    int v,i;
    vis[a]=1;
    for(i=0;i<V[a].size();i++)
    {
        v=V[a][i];
        if(vis[v]==0)
            dfs(v,level+1);
    }
   //  cout<<a<<endl;
    dep[a]=t;
    t++;
}
int main()
{
    int n,m,i,a,k;
    char ch[3];
    int offset=100020;
    Fib[offset+1]=1;
    Fib[offset]=0;
    int j=0;
    for(i=offset-1;i>=0;i--){
        Fib[i]=(Fib[i+2]-Fib[i+1]+mod)%mod;
    }
    for(i=offset+2;i<=3*N1;i++)
        Fib[i]=(Fib[i-1]+Fib[i-2])%mod;
    scanf("%d %d",&n,&m);
    for(i=2;i<=n;i++)
    {
        scanf("%d",&a);
        V[a].pb(i);
        V[i].pb(a);
    }
    memset(B1,0,sizeof(B1));
    memset(B2,0,sizeof(B2));
    memset(vis,0,sizeof(vis));
    dfs(1,1);
    N=t;
    pair<ll,ll>ans;
    ll ans1;
    for(i=0;i<m;i++)
    {
        scanf("%s",&ch);
        if(ch[0]=='U')
        {
            scanf("%d %d",&a,&k);
          // cout<<"@@@@@@@@"<<Fib[offset-lev[a]+k+1]<<" "<<Fib[offset-lev[a]+k]<<endl;
            update(arr[a],Fib[offset+k-lev[a]],Fib[offset+k-lev[a]-1]);
            update(dep[a]+1,-Fib[offset+k-lev[a]],-Fib[offset+k-lev[a]-1]);
        }
        else
        {
            scanf("%d",&a);
            ans=query(dep[a]);
          // cout<<ans.F<<" "<<ans.S<<" ";
         //  cout<<"*****"<<Fib[offset+lev[a]]<<" "<<Fib[offset+lev[a]-1]<<endl;
            ans1=((Fib[offset+lev[a]+1]*ans.F)%mod+(Fib[offset+lev[a]]*ans.S))%mod;
            printf("%lld\n",ans1);
        }
    }

}
