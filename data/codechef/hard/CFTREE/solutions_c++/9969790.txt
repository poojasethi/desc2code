#include<bits/stdc++.h>

using namespace std;

#define mod 1000000007
#define LL long long

vector<int> mp[100001];
int fib[200001];
int l[100001],r[100001];
int dep[100001];
vector<pair<int,int> > qs;
int val[100001];
vector<int> upd[100001];

void pre()
{
    fib[0] = 0;
    fib[1] = 1;
    for(int i=2;i<200001;i++)
        fib[i] = (fib[i-1]+fib[i-2])%mod;
}

int build(int u, int p, int d, int &s)
{
    s++;
    l[u] = s;
    dep[u] = d;
    for(int i=0;i<mp[u].size();i++)
    {
        int v = mp[u][i];
        if(v==p)    continue;
        build(v,u,d+1,s);
    }
    s++;
    r[u] = s;
}

void query(int i)
{
    int ans = val[i];
    for(int j=0;j<qs.size();j++)
    {
        int a = qs[j].first;
        int k = qs[j].second;
        if(l[a]<=l[i] && r[i]<=r[a])
        {
            int d = dep[i] - dep[a];
            ans += fib[k+d];
            ans %= mod;
        }
    }
    printf("%d\n",ans);
}

void proc(int u, int p, int a, int b)
{
    int c = 0;

    for(int i=0;i<upd[u].size();i++)
    {
        a += fib[upd[u][i]];
        c += fib[upd[u][i]-1];
        a %= mod;
        c %= mod;
    }

    val[u] += a;
    val[u] %= mod;
    for(int i=0;i<mp[u].size();i++)
    {
        int v = mp[u][i];
        if(p==v)    continue;

        proc(v,u,(1LL*a+c+b)%mod,a);
    }
    upd[u].clear();
}

void solve()
{
    int n,m,x;
    pre();
    scanf("%d%d",&n,&m);
    for(int i=2;i<=n;i++)
    {
        scanf("%d",&x);
        mp[i].push_back(x);
        mp[x].push_back(i);
    }
    int t = 0;
    build(1,0,0,t);

//    for(int i=1;i<=n;i++)
//        cout<<l[i]<<' '<<r[i]<<endl;
    int lim = sqrt(n);
    while(m--)
    {
        char o;
        int x,k;
        scanf(" %c",&o);
        if(o=='U')
        {
            scanf("%d%d",&x,&k);
            qs.push_back(make_pair(x,k));
            upd[x].push_back(k);

            if(qs.size()==lim)
            {
                proc(1,0,0,0);
                qs.clear();
            }
        }
        else
        {
            scanf("%d",&x);
            query(x);
        }
    }
}

int main()
{
    solve();
}
