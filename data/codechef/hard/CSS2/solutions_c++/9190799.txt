// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define MAXN 100010
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
map< pii , pii > a;
int main()
{
	int n,m;scanf("%d%d",&n,&m);
	while(n--)
	{
		int n1,n2,n3,n4;scanf("%d%d%d%d",&n1,&n2,&n3,&n4);
		if(a.find(mp(n1,n2))!=a.end())
		{
			if(n4>=a[mp(n1,n2)].s)
				a[mp(n1,n2)]=mp(n3,n4);
		}
		else
			a[mp(n1,n2)]=mp(n3,n4);
	}
	while(m--)
	{
		int n1,n2;scanf("%d%d",&n1,&n2);
		printf("%d\n",a[mp(n1,n2)].f);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



