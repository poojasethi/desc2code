#include <cstdio>
using namespace std;

typedef long long llint;

const int MAXN=100010;
const int MAXM=3000010;

const llint MOD=3046201;

int n,q;
int arr[MAXN];
llint fact[MAXM];

int f[MAXN+10];

inline llint pow(llint base,int exp) {
    llint ret=1;
	for (;exp;exp>>=1) {
        if (exp&1) ret=(ret*base)%MOD;
		base=(base*base)%MOD;
	}
	return ret;
} 

inline void update(int x,int val) {
	for (;x<=MAXN;x+=x&-x)
		f[x]+=val;
}

inline int get(int x) {
	int ret=0;
	for (;x;x-=x&-x) 
		ret+=f[x];
	return ret;
}

inline void init() {
    fact[0]=1;
	for (int i=1;i<MAXM;i++) 
		fact[i]=(fact[i-1]*(llint)i)%MOD;
}

int main() {
    init();
	scanf("%d",&n);
	for (int i=1;i<=n;i++) {
		scanf("%d",&arr[i]);
		update(i,arr[i]);		
	}
	scanf("%d",&q);
	while (q--) {
		char s[10];
		int l,r;
		scanf("%s%d%d",s,&l,&r);
		if (s[0]=='c') {
			update(l,r-arr[l]);
			arr[l]=r;
		}
		else {
			int num=get(r)-get(l-1);
			int k=r-l+1;
			int x=num/k;
			int y=x+1;
			int b=num%k;
			int a=k-b;   
			llint N=(fact[num]*fact[k])%MOD; 
			llint D=(pow(fact[x],a)*pow(fact[y],b))%MOD;
			D=(D*((fact[a]*fact[b])%MOD))%MOD;	
			printf("%lld\n",(N*pow(D,(int)MOD-2))%MOD);	
		}
	}
	return 0;
}

 
	
