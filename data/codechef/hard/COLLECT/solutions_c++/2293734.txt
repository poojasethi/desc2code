#include<stdio.h>
#include<string>
#include<iostream>
using namespace std ;


#define maxVal 100001
#define mod 3046201

int tree[maxVal] ;
int bushes[maxVal] ;

int fact[3000001] ;
int invFact[3000001] ;
typedef long long ll ;
int getS(int idx){

	int sum = 0 ;

	while(idx){
	
		sum += tree[idx] ;
		idx -= (idx & -idx) ;
	}
	return sum ;
}

void update(int idx , int val , int n){

	while(idx <= n){
	
		tree[idx] += val ;

		idx += (idx & -idx) ;
	} 
}

inline int read(){

	char c = getchar() ;
	int n = 0 ;

	while( c<48 || c>57 ) c = getchar() ;

	while( c>=48 && c<=57 ){
	
		n = (n<<3) + (n<<1) + (c-48) ;

		c = getchar() ;
	}
	return n ;
}

int powMod(int base , int exp){

	if(! exp)
		return 1 ;
	else{
	
		int temp = powMod(base,exp/2) ;

		temp = ((ll)temp*temp)%mod ;

		if(exp & 1)
			temp = ((ll)temp*base)%mod ;
		
		return temp ;
	}
}

void init(){
	int i ;


	fact[0] = 1 ;
	
	for(i=1 ; i<=3000000 ; i++)
		fact[i] = ((ll)i*fact[i-1])%mod ;
	
	invFact[3000000] = powMod(fact[3000000] , mod-2) ;

	for(i=2999999 ; i>=0 ; i--)
		invFact[i] = ((ll)(i+1)*invFact[i+1])%mod ;
}

int final( int sum , int x , int a , int b ){

	int ans = ((ll)fact[sum]*fact[a+b])%mod ;
	
	ans = ((ll)ans*invFact[a])%mod ;
	ans = ((ll)ans*invFact[b])%mod ;

	int d1 = powMod(fact[x],a) ;
	int d2 = powMod(fact[x+1],b) ;

	d1 = powMod(d1,mod-2) ;
	d2 = powMod(d2,mod-2) ;

	d1 = ((ll)d1*d2)%mod ;

	ans = ((ll)ans*d1)%mod ;

	return ans ;

}

int main(){

	int n , temp , i , a , b , sum , k , x;
	char c ;
	n = read() ;
	init() ;

	for(i=1;i<=n;i++){
	
		bushes[i] = read() ;
		update(i,bushes[i],n) ;
	}
	int q = read() ;

	while(q--){
	
		c = getchar() ;

		if(c == 'q'){
		
			a = read() ;
			b = read() ;

			sum = getS(b) - getS(a-1) ;
			k = b-a+1 ;

			x = sum/k ;

			a = k*x + k - sum ;
			b = k-a ;
			
			printf("%d\n",final(sum,x,a,b)) ;

		}else{
		
			a = read() ;
			b = read() ;

			update(a,b-bushes[a],n) ;
			bushes[a] = b ;

		}

	}
	return 0 ;
}
