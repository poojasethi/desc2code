#include<cstdio>
#include<cstring>
using namespace std;

#define mod 3046201
#define max 100100
int n,q,f[max],a[max];
long long int fact[mod];

long long int pow(long long int x,int y)
{
  if(y==0) 
    return 1;
  else if(y==1) 
    return x;
  else{
    long long temp=pow(x,y/2);
    temp=(temp*temp)%mod;
    if(y&1)
      return (temp*x)%mod;
    else
      return temp;
  }
}

long long int divide(long long int x,long long int y)
{
  return (x*pow(y,mod-2))%mod;
}

void update(int at,int val)
{
  for(int i=at;i<=n;i=i+(i&-i)){
    //printf("%d %d\n",i,j);    
    f[i]+=val;
  }
}

int query(int at)
{
  int i=at,sum=0;
  while(i>0){
    //printf("%d %d\n",i,j);
    sum+=f[i];
    i-=i&-i;
  }
  return sum;
}

int main()
{
  scanf("%d",&n);
  memset(f,0,sizeof(f));
  for(int i=1;i<=n;i++){
    scanf("%d",&a[i]);
    update(i,a[i]);
  }
  scanf("%d",&q);
  fact[0]=1;
  for(int i=1;i<mod;i++)
    fact[i]=(fact[i-1]*(long long int)i)%mod;
  while(q--){
    char t[10];
    int x,y;
    scanf("%s %d %d",t,&x,&y);
    //printf("%s %d %d,t,x,y);
    if(t[0]=='c'){
      update(x,y-a[x]);
      a[x]=y;
    }
    else if(t[0]=='q'){
      int s=0,l,u,v,w;
      s=query(y)-query(x-1);
      l=y-x+1;
      u=s/l;v=s%l;
      // printf("%d %d %d %d\n",s,l,u,v);
      long long int tmp1=divide(fact[s],(pow(u+1,v)*pow(fact[u],l))%mod);
      long long int tmp2=divide(fact[l],(fact[v]*fact[l-v])%mod);
      long long int ans=(tmp1%mod*tmp2%mod)%mod;
      printf("%d\n",(int)ans);
    }
  }
  return 0;
}
