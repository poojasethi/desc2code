/***********Template Starts Here***********/
#pragma comment (linker,"/STACK:16777216")
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <deque>
#include <functional>
#include <string>
#include <iostream>
#include <cctype>

#define pb push_back
#define nl puts ("")
#define sp printf ( " " )
#define phl printf ( "hello\n" )
#define all(c) (c).begin(),(c).end()
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define sz(a) int((a).size())

using namespace std;

typedef long long vlong;
typedef unsigned long long uvlong;
typedef vector < int > vi;
typedef pair < int, int > ii;
typedef vector < ii > vii;


const vlong inf = 2147383647;
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
const vlong maxint = 2147483647;
const vlong minint = -2147483648;

/***********Template Ends Here***********/
#define MAXS 100000
const vlong mod = 3046201;

int arr[MAXS + 10], n;
int bit[MAXS + 10];

void update ( int idx, int val ) {
    while ( idx <= n ) {
        bit[idx] += val;
        idx += idx & ( -idx );
    }
}
int find_bit ( int idx ) {
    int sum = 0;
    while ( idx > 0 ) {
        sum += bit[idx];
        idx -= idx & ( -idx );
    }
    return sum;
}

vlong fact[30*MAXS + 10];

void init () {
    fact[0] = 1;
    int i;
    for ( i = 1; i <= 30 * MAXS; i++ ) {
        fact[i] = ( fact[i-1] * i ) % mod;
    }
}

vlong bigmod ( vlong a, vlong p ) {
    vlong res = 1, x = a;
    while ( p ) {
        if ( p & 1 ) res = ( res * x ) % mod;
        x = ( x * x ) % mod;
        p >>= 1;
    }
    return res;
}

vlong distribute ( int berry, int people ) {

    int r = berry % people;
    int blank = people - r;
    int q = ( berry + blank ) / people;

    vlong numerator = ( fact[berry] * fact[people] ) % mod;

    vlong denominator = ( ( ( bigmod ( fact[q], r ) * bigmod ( fact[q-1], blank ) ) % mod ) * ( ( fact[r] * fact[blank] ) % mod ) ) % mod;
    denominator = bigmod( denominator, mod - 2 );
    return ( numerator * denominator ) % mod;
}

int main () {
    init();
    //freopen ( "input.txt", "r", stdin );
    //freopen ( "output.txt", "w", stdout );

    scanf ( "%d", &n );

    int i;
    for ( i = 1; i <= n; i++ ) {
        scanf ( "%d", &arr[i] );
        update ( i, arr[i] );
    }

    int q;
    scanf ( "%d", &q );

    while ( q-- ) {
        char buf[100];
        int a, b;
        scanf ( "%s %d %d", buf, &a, &b );

        if ( buf[0] == 'c' ) {
            update( a, -arr[a] );
            arr[a] = b;
            update( a, arr[a] );
        }
        else {
            int berry = find_bit ( b ) - find_bit ( a - 1 );
            int people = b - a + 1;
            vlong res = distribute ( berry, people );
            printf ( "%lld\n", res );
        }
    }

    return 0;
}
