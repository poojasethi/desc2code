#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <cstring>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
#include <numeric>
using namespace std;

typedef long long Int;
typedef pair<Int,Int> PII;
typedef vector<int> VInt;

#define FOR(i, a, b) for(i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define SIZE(a) int((a).size())
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair

#define MOD 10007
Int A[MOD];

Int Pow(Int a, Int b)
{
	Int i;
	Int res = 1;
	for(i = 1; i <= b; i <<= 1)
	{
		if(b & i)
			res = res * a % MOD;

		a = a * a % MOD;
	}

	return res;
}

PII number(Int a)
{
	Int cnt = 0;
	while(a % MOD == 0)
	{
		a /= MOD;
		++cnt;
	}

	return PII(cnt, a % MOD);
}

PII fact(Int n)
{
	if(n == 0)
		return PII(0, 1);

	Int a = Pow(A[MOD - 1], n / MOD)*A[n % MOD] % MOD;

	PII r = fact(n / MOD);
	r.first += n / MOD;
	r.second = r.second * a % MOD;
	return r;
}

PII mul(PII a, PII b)
{
	return PII(a.first + b.first, a.second*b.second % MOD);
}

PII div(PII a, PII b)
{
	return PII(a.first - b.first, a.second*Pow(b.second, MOD - 2) % MOD);
}

PII comb(Int n, Int k)
{
	return div(fact(n), mul(fact(k), fact(n - k)));
}

Int f(Int r, Int n)
{
	PII res = comb(r + n - 1, n);
	return res.first == 0 ? res.second : 0;
}

Int g(Int r, Int n)
{
	if(r < n)
		return 0;

	PII res = div(mul(comb(r + n, n), number(r - n + 1)), number(r + 1)); 
	return res.first == 0 ? res.second : 0;
}

int main()
{
//	freopen("input.txt", "r", stdin);
//	freopen("output.txt", "w", stdout);

	int i;
	A[0] = 1;
	FOR(i, 1, MOD)
		A[i] = A[i - 1] * i % MOD;

	int T, t;
	scanf("%d", &T);
	FOR(t, 0, T)
	{
		Int r, c, n;
		scanf("%lld%lld%lld", &r, &c, &n);

		Int res = f(r, n)*f(c, n) - g(r, n)*g(c, n) + MOD*MOD;
		printf("%d\n", int(res % MOD));
	}

	return 0;
};
