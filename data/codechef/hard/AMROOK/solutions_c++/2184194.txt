#include"iostream"
#include"vector"
#include"string"
#include"cstdio"
#include"cstdlib"
#include"cmath"
#include"algorithm"
#include"queue"
#include"cstring"
#include"map"
#include"set"
#include"fstream"
#include"sstream"
#include"numeric"
#include"stack"
#include"iomanip"
#include"bitset"
#include"list"
#include"functional"
#include"utility"
#include"ctime"
#include"cctype"

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vpi;
const double eps=1e-7;
const int inf=0x3f3f3f3f;
const int hinf=0x3f3f3f3f;
const ll mod=10007;

#define out(x) cout<<x<<'\n';
#define fio freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#define fino freopen("input.txt","r",stdin);
#define sz(a) sizeof(a)
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define ms(a,i) memset((a),(i),sz(a))
#define clr(x) memset(x,0,sz(x))
#define cdp(x) memset((x),-1,sizeof(x))
#define infi(x) memset(x,0x3f,sz(x))
#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)

int t; ll r , c , n;
ll fac[11111] , inverse[11111];

ll pow(ll a , ll b)
{
    if(b == 0) return 1;
    ll ans = pow(a , b / 2ll);
    ans = ans * ans % mod;
    if(b & 1ll) ans = ans * a % mod;
    return ans;
}

ll mul(ll a , ll b)
{
    return a * b % mod;
}

void gcd(ll a , ll b , ll & d , ll & x , ll & y)
{
    if(!b) {d = a ; x = 1 ; y = 0;}
    else {gcd(b , a % b , d , y , x); y -= x * (a / b);}
}

ll inv(ll a)
{
    ll d , x , y;
    gcd(a , mod , d , x , y);
    return d == 1 ? (x + mod) % mod : -1;
}

ll C(ll a , ll b)
{
    if(a == 0 || b == 0) return 1ll;
    if(a % mod < b % mod) return 0;
    return (((C(a / mod , b / mod) * fac[a % mod]) % mod * inverse[fac[b % mod]]) % mod * inverse[fac[a % mod - b % mod]]) % mod;
}

ll count_ok(ll n , ll r)
{
    if(r < n) return 0;
    ll p = n , N = r - n;
    return C(N + 2 * p , p) * (N + 1) % mod * inv(N + p + 1) % mod;
}

void init()
{
    clr(fac); fac[0] = 1ll;
    for(int i = 1 ; i < mod ; i ++ ) fac[i] = (fac[i - 1] * i) % mod;
    for(int i = 1 ; i < mod ; i ++ ) inverse[i] = inv(i);
}

int main()
{
    //fino;
    scanf("%d",&t);
    init();
    while(t--)
    {
        cin>>r>>c>>n;
        ll a1 , a2;
        a1 = C(r + n - 1ll , n) * C(c + n - 1ll , n);
        a2 = count_ok(n,r) * count_ok(n,c);
        ll ans = ( (a1 - a2) % mod + mod ) % mod;
        cout<<ans<<'\n';
    }
}
