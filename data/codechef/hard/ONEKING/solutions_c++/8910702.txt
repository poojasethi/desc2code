#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
using namespace std;

int main(){
	int t;
	cin >> t;
	while(t--){
		int n;
		cin >> n;
		set<pair<int, char> > kingdoms[3000];
		int count = 0;
		for (int i = 0; i < n; ++i){
			int a, b;
			scanf("%d %d", &a, &b);
			// cout << a << " " << b << endl;
			kingdoms[a].insert(make_pair(i, 's'));
			kingdoms[b].insert(make_pair(i, 'e'));
		}

		bool destroyed[n];
		for (int i = 0; i < n; ++i)
		{
			destroyed[i] = false;
		}

		stack<int> not_destroyed;
		set<pair<int, char> >:: iterator it;
		for (int i = 0; i < 3000; ++i){
			it = kingdoms[i].begin();
			bool to_destroy = false;
			if(it != kingdoms[i].end()){
				// cout << "hello1" << endl;
				while(it != kingdoms[i].end()){
					int kingdom_number = it->first;
					char status = it->second;
					// cout << kingdom_number << " " << status << endl;
					if(destroyed[kingdom_number] == false){
						if(status == 'e'){
							// cout << "hello" << endl;
							to_destroy = true;
						}
						if(status == 's'){
							not_destroyed.push(kingdom_number);
						}
					}
					it++;
				}				
			}
			if(to_destroy){
				count++;
				while(!not_destroyed.empty()){
					int temp = not_destroyed.top();
					destroyed[temp] = true;
					not_destroyed.pop();
				}
			}
		}
		printf("%d\n", count);
	}
}