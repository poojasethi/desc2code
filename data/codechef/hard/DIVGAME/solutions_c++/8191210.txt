#include<stdio.h>
#include<algorithm>
#include<string.h>
 
using namespace std;
 
#include <stdio.h>
#include <stdlib.h>
 
 
inline long long multiply(long long a,long long b,long long c){
 
    if(a<=1000000000 && b<=1000000000)
        return (a*b)%c;
    long long x = 0,y=a%c;
 
    while(b > 0){
        if(b%2 == 1){
            x = (x+y)%c;
        }
        y = (y*2)%c;
        b /= 2;
    }
    return x%c;
}
 
long long int power(long long int a,long long int b,long long int c){
    long long int x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=multiply(x,y,c);
        }
        y = multiply(y,y,c); // squaring the base
        b /= 2;
    }
    return x%c;
}
 
int fermat(long long int n)
{
    if(n==1)
        return 0;
 
    int i;
    long long int a;
 
    for(i=0;i<2;i++)
    {
      a=rand()%(n-1)+1;
 
      if(power(a,n-1,n)%n!=1)
        return 0;
    }
    return 1;
}
 
int primes[100001];
 
void sieve()
{
    for(int i=2;i<=100000;i++)
        primes[i]=1;
 
    for(int i=2;i*i<=100000;i++)
    {
        if(primes[i])
        {
            for(int j=i*i;j<=100000;j+=i)
                primes[j]=0;
        }
    }
}
 
int main()
{
    sieve();
 
    int t;
    scanf("%d",&t);
 
    while(t--)
    {
        long long int n;
        scanf("%lld",&n);
 
        if(n==1)
        {
            printf("Tom\n");
            continue;
        }
 
        if(n==2 || n==17)
        {
            printf("Mike\n");
            continue;
        }
 
        if(n==16||n==34||n==289)
        {
            printf("Tom\n");
            continue;
        }
 
        else if(n<=100000)
        {
            if(primes[n]==1)
                printf("Tom\n");
 
            else
                printf("Mike\n");
        }
 
        else
        {
            int ans=fermat(n);
 
            if(ans==1)
                printf("Tom\n");
 
            else
                printf("Mike\n");
        }
    }
 
    return 0;
} 