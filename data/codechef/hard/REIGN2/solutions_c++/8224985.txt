#include<bits/stdc++.h>
using namespace  std;

int n;

int position_search(long long arr[], int size,int targ)
{
	int low = 0; int high = size-1;
	while (low != high) 
	{
    	int mid = (low + high) / 2;
   		 if (arr[mid] <= targ) {
      
       		 low = mid + 1;
   		 }
   		 else {
    	 
    	    high = mid;
    	 }
	}
	return high;
}

long long actual[6000]={0};
long long sumtot[6000]={0};
int marked[6000]={0};
pair<int,int> sortsec[6000];


long long sum_change(pair<int,int> obj,int size,int index)
{	
	long long sum=0,add=0;
	int ind=index;
	//int ind = position_search(actual,size,obj.second);
	add = (long long)((size-ind)*obj.second);
	ind--;
	if(ind!=-1)sum=sumtot[ind];
	else sum=0;
	sum+=add;
	return sum+obj.first;
}


long long iterate_array(pair<int,int> arr[],int k)
{
	long long big=-INT_MAX,imm=0,pos=-1;
	int j=0;
	for(int i=0;i<n;i++)
	{	
		if(marked[sortsec[i].second]==0)
		{
			while(j<k&&actual[j]<=sortsec[i].first)
			{	j++;
			}
			pair<int,int> obj=make_pair(arr[sortsec[i].second].first,sortsec[i].first);
			imm=sum_change(obj,k,j);
			if(big<imm)
			{	big=imm;pos=sortsec[i].second;
			}
		}
	}
	marked[pos]=1;
	int ind = position_search(actual,k,arr[pos].second);

	if(ind==k-1)actual[k]=arr[pos].second;
	else{
	for(int i=n-1;i>=0;i--)
	{	if(i<ind) continue;
		else if(i==ind)actual[ind]=arr[pos].second;
		else if(i>ind)
		{	actual[i]=actual[i-1];
		}
	}
	}	

	sumtot[0]=actual[0];
	for(int i=1;i<n;i++)
	{	sumtot[i]=0;
		sumtot[i]=sumtot[i-1]+actual[i];
	}
	long long ans=0;
	for(int i=0;i<=k;i++)
	{
		if(actual[i]>0)ans+=(long long)(k-i)*actual[i];
	}

	for(int i=0;i<n;i++)
	{	if(marked[i]==1)ans+=arr[i].first;
	}

	printf("%llu ",ans);
	
}

long long min(long long a,long long  b)
{
	return (a>b) ? b:a;
}

long long maxi(long long a,long long b)
{
	return (a>b) ? a:b;
}

int second_k(pair<int,int> arr[])
{
	int pos1=-1,pos2=-1;
	long long imm=0,max=0;
	for(int i=0;i<n;i++)
	{
		for(int j=i+1;j<n;j++)
		{
			imm= arr[i].first+arr[j].first+min(arr[i].second,arr[j].second);
			if(max<imm)
			{
				max=imm;pos1=i;pos2=j;
			}
		}
	}
	printf("%llu ",max);
	marked[pos1]=1;
	marked[pos2]=1;
	actual[0]=min(arr[pos2].second,arr[pos1].second);
	actual[1]=maxi(arr[pos2].second,arr[pos1].second);
	sumtot[0]=actual[0];
	sumtot[1]=sumtot[0]+actual[1];
}

long long dp[6002][6002]={0};

bool myfunc(pair<int,int> a,pair<int,int> b)
{
	if(a.first>b.first)return 1;else return 0;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t-->0)
	{	
		scanf("%d",&n);
		pair<int,int> arr[n];
		for(int i=0;i<=n;i++)
		{	for(int j=0;j<=n;j++)dp[i][j]=0;
		}
		for(int i=0;i<n;i++)
		{	scanf("%d",&arr[i].first);
		}
		for(int i=0;i<n;i++)
		{	scanf("%d",&arr[i].second);
			sortsec[i]=make_pair(arr[i].second,i);
		}
	
		sort(sortsec,sortsec+n,myfunc);		
	
		for(int i=1;i<=n;i++)
		{	for(int j=1;j<=i;j++)
			{	dp[i][j]=max(dp[i-1][j],dp[i-1][j-1]+arr[sortsec[i-1].second].first+(long long)(j-1)*sortsec[i-1].first);
			}
		}
		for(int i=1;i<=n;i++)
		{	printf("%llu ",dp[n][i]);
		}
		printf("\n");
	}
}










