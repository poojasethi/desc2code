#include <iostream>
#include <stdio.h>
#include <vector>
#include <utility>
#include <algorithm>
using namespace std;
#define MAXN 5001
#define INF (1LL << 60)
typedef long long ll;
ll dp[MAXN][MAXN], A[MAXN], B[MAXN];
pair<ll, ll> M[MAXN];
void solve() {
    ll N;
    cin >> N;
    for(int i = 0; i < N; i++) cin >> A[i];
    for(int i = 0; i < N; i++) cin >> B[i];
    for(int i = 0; i < N; i++) M[i].first = B[i], M[i].second = A[i];
    sort(M, M + N);
    for(int i = 0; i < N; i++) A[N - i - 1] = M[i].second, B[N - i - 1] = M[i].first;
    for(int i = 0; i < N; i++) for(int j = 0; j < N; j++) dp[i][j] = 0LL;
    dp[0][0] = A[0];
    for(int i = 1; i < N; i++) {
        for(int j = 0; j <= i; j++) {
            if(j == 0) {
                dp[i][j] = max(dp[i - 1][j], A[i]);
            } else {
                ll pre = dp[i - 1][j];
                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - 1] + A[i] + (ll)j * B[i]);
            }
        }
    }
    for(int i = 0; i < N; i++) cout << dp[N - 1][i] << " "; cout << endl;
}
int main() {
    int t;
    cin >> t;
    while(t--) solve();
}
