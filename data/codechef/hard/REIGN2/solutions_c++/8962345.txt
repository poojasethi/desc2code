
#include <bits/stdc++.h>
#include <iostream>
#include <cstdio>
using namespace std;
 
long long int old_row[5000];
long long int new_row[5000];
long long int a_values[5000];
 
class compare{
public:
	bool operator()(pair<long long int, int> a, pair<long long int, int> b){
		return a.first < b.first;
	}
};
 
int main(){
	int t;
	cin >> t;
	while(t--){
		int n;
		scanf("%d", &n);
		vector<pair<long long int, int> > b_values;
		for (int i = 0; i < n; ++i){
			long long int a;
			scanf("%lld", &a);
			a_values[i] = a;
		}
 
		for (int i = 0; i < n; ++i){
			long long int b;
			scanf("%lld", &b);
			b_values.push_back(make_pair(b, i));
		}		
 
		sort(b_values.begin(), b_values.end(), compare());
 
		for (int j = 1; j <= n; ++j){
			pair<long long int, int> curr;
			for (int i = n - j; i >= 0; --i){
				curr = b_values[i];
				if(j == 1){
					if(i == n - j)
						old_row[i] = a_values[curr.second];
					else
						old_row[i] = max(a_values[curr.second], old_row[i+1]);  
				}
				else{
					if(i == n - j)
						new_row[i] = old_row[i+1] + a_values[curr.second] + (j-1)*curr.first;
					else
						new_row[i] = max(old_row[i+1] + a_values[curr.second] + (j-1)*curr.first, new_row[i+1]);		
				}
			}
			
			if(j != 1){
				for (int i = 0; i < n; ++i){
					old_row[i] = new_row[i];
				}
			}
			printf("%lld ", old_row[0]);
		}
		printf("\n");
	}
}