#include <bits/stdc++.h>
#include <string>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define _(x) memset(x,0,sizeof(x))
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)

inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
}

ll dp[5003][5003];
pair<int,int> x[5003];
int main()
{
    int t = fi();

    forall(cx,1,t+1){
        int n = fi();
        forall(i,1,n+1)
            x[i].se = fi();
        forall(i,1,n+1)
            x[i].fi = fi();

        sort(x+1,x+n+1,greater<pair<int,int> >());

        _(dp);

        forall(i,1,n+1){
            forall(j,1,i+1){
                ll cost = x[i].se + ((ll)(j-1))*x[i].fi;
                ll a = dp[i-1][j-1] + cost;
                ll b = dp[i-1][j];

                if(a>b){
                    dp[i][j] = a;
                } else {
                    dp[i][j] = b;
                }
            }
        }

        forall(i,1,n+1)
            printf("%lld ", dp[n][i]);
        printf("\n");
    }

    return 0;
}

