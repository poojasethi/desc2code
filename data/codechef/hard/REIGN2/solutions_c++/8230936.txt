#include <bits/stdc++.h>
// reign
using namespace std;

class compare{
public:
	bool operator()(const pair<long long, long long> &a, const pair<long long, long long> &b){
		return a.first > b.first;
	}
};
long long dp[5002][5002];
void bottom_up(vector< pair<long long, long long> > &knight, long long n){
	for(long long i = 0; i <= n; i++) for(long long j = 0; j <= n; j++) dp[i][j] = 0;
	//long long maxi = 0;
	//for (long long i = 0; i < n; i++) if(knight[i].second > maxi) maxi = knight[i].second;
	//for(long long i = 0; i < n; i++) dp[i][0] = maxi;
	for(long long i = 1; i <= n; i++){
		for(long long j = 1; j <= i; j++){
			dp[i][j] = max(dp[i-1][j], dp[i-1][j-1] + (j-1)*knight[i-1].first + knight[i-1].second);
			//cout << i << " " << j << " " << (j-1)*knight[i-1].first + knight[i-1].second <<endl;
		}
	}
}
int main(){
	long long t; cin >> t;
	while(t--){
		long long n; cin >> n;
		vector< pair<long long, long long> > knight(n);
		for(long long i = 0; i < n; i++){
			long long x; cin >> x;
			knight[i].second = x;
		}
		for(long long i = 0; i < n; i++){
			long long x; cin >> x;
			knight[i].first = x;
		}
		sort(knight.begin(), knight.end());
		reverse(knight.begin(), knight.end());
		//for(long long i = 0; i < n; i++) cout << knight[i].first << " " << knight[i].second << endl;
		bottom_up(knight, n) ;
		//for(long long i = 1; i <= n; i++) { for(long long j = 1; j <= i; j++) cout << dp[i][j]  << " "; cout << endl;}
		for(long long i = 1; i <= n; i++)
			cout<< dp[n][i] << " "; 
		cout << endl;
	}
	return 0;
}
