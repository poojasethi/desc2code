#include<bits/stdc++.h>
#define sz(x) (int)(x.size())
#define MIN(x, y) x<y?x:y
using namespace std;
typedef long long lld;
lld dp[5000+10][5000+10];

int comp(pair<lld, lld> A , pair<lld, lld> B)
{
	if((A.first > B.first) || (A.first == B.first && A.second > B.second) ) return 1;
	return 0;
}

void sol()
{
	memset(dp, 0, sizeof dp);
	int n; cin >> n;
	vector<pair<lld, lld> > vec;
	vec.clear();
	vector<lld> a,b;
	a.clear();
	b.clear();
	for(int i = 0; i < n; i++)
	{
		int g;
		cin >> g;
		a.push_back(g);
	}
	for(int i = 0; i < n; i++)
	{
		int g; 
		cin >> g;
		b.push_back(g);
	
	}
	for(int i = 0; i < n; i++)
	{
		vec.push_back(make_pair(b[i],a[i]));
	}
	
	sort(vec.begin(), vec.end(), comp);
	//reverse(vec.begin(), vec.end());
	/**for(int i = 0; i < n; i++)
	{
		cout << vec[i].first << " " << vec[i].second << endl;
	}**/
	memset(dp, 0, sizeof dp);
	for(int castle = 1; castle <= n; castle++)
	{
		for(int day = 1; day <= castle; day++)
		{
			
			 dp[castle][day] = max(dp[castle - 1][day ], dp[castle - 1][day - 1]+ vec[castle-1].second + vec[castle-1].first * (day -1 ));  
		}
	}
	//cout << " ---- \n";
	for(int i = 1; i <= n; i++)
	{
		cout << dp[n][i] << " "; 
	}
	cout << endl;
	
}
int main()
{
	int t; cin >> t;
	while(t--)
	{
		sol();
	}
	return 0;
}

