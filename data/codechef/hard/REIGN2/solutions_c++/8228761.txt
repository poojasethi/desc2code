#include<list>
#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cstring>
#include<string>
#include<cstdlib>
#include<math.h>
#include<cctype>
#include<iomanip>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<cassert>
#include<sstream>


using namespace std;

#define L long
#define LL long long
#define ULL unsigned long long
//#define D double
//#define LD long double
#define G getchar_unlocked
//#define P putchar_unlocked
#define MOD 1000000007
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define pll pair <LL,LL>
#define INF ((1<<30)+(1<<29))

LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}
LL lcm(LL a,LL b){return a*b/gcd(a,b);}
LL modpow(LL n ,LL k,LL mod)
{LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}
LL max(LL a,LL b){return (a>b)?a:b;}
LL min(LL a,LL b){return (a<b)?a:b;}
LL ab(LL a){return (a>0)?a:-a;}
LL poww(LL n,LL k){LL ans=1;while(k>0){if(k&1)ans*=n;k>>=1;n*=n;}return ans;}
//D max(LD a,LD b){return (a>b)?a:b;}
//D min(LD a,LD b){return (a<b)?a:b;}
//D ab(D a){return (a>0.0)?a:-a;}

inline int max(int a,int b){return (a>b)?a:b;}
inline int min(int a,int b){return (a<b)?a:b;}


bool cmp(pair<LL,LL>a,pair<LL,LL>b)
{
    if(a.s<b.s)return 0;
    if(a.s==b.s && a.f>b.f)return 0;
    return 1;
}

LL DP[5005][5005]={};
pair<LL,LL> A[5005]={};

int main()
{
    ios::sync_with_stdio(false);
    LL T,n,i,j;
    cin>>T;
    while(T--)
    {
        cin>>n;
        for(i=1;i<=n;i++)
        {
            cin>>A[i].f;
        }
        for(j=1;j<=n;j++)
        {
            cin>>A[j].s;
        }
        sort(A+1,A+n+1,cmp);
        for(i=0;i<=n;i++)
            DP[i][0]=DP[0][i]=0;
        for(i=1;i<=n;i++)
        {
            for(j=1;j<=i;j++)
            {
                DP[i][j]=max(DP[i-1][j],DP[i-1][j-1]+A[i].f+A[i].s*(j-1));
                //cout<<DP[i][j]<<" ";
            }//cout<<endl;
        }
        for(i=1;i<=n;i++)
            cout<<DP[n][i]<<" ";
        cout<<endl;
    }
    return 0;
}