#include<iostream>
#include<vector>
#include<utility>
#include<algorithm>
using namespace std;
long long arr[5009][5009];
long long a[5009];
vector<pair<long long ,long long> >v;
pair<long long ,long long>p;
long long n,tmp;
bool cmp(pair<long long ,long long> a,pair<long long ,long long> b)
{

       if(a.second>b.second)
       return true;
	else if(a.second==b.second && a.first>a.second)
	return true;
	else
	return false;  

}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
               vector<pair<long long ,long long> >v;
               pair<long long ,long long>p;
		cin>>n;
		for(int i=1;i<=n;i++)
		{
			cin>>a[i];									
                }
		for(int i=1;i<=n;i++)
		{
                       cin>>tmp;
			p=make_pair(a[i],tmp);
			v.push_back(p);;									
                }
		
		int j=1;
               
		vector<pair<long long,long long> >::iterator it=v.begin();;
		sort(v.begin(),v.end(),cmp);
               /* for(it=v.begin();it!=v.end();it++)
		{
			p=*it;
			cout<<p.first<<" "<<p.second<<"\n";
		}*/	
		for(int i=0;i<=n;i++)
		{
			for(j=0;j<=n;j++)
			{
				arr[i][j]=0;
			}
		}
                p=*it;
	      //cout<<p.first<<" "<<p.second<<"
	     	arr[1][1]=p.first;
             int l=v.size();
	   //  cout<<l<<"\n";
             for(int i=2;i<=n;i++)
		{
                        p=v[i-1];
			arr[i][1]=max(arr[i-1][1],p.first);
		}
		for(int i=2;i<=n;i++)
		{      
                       p=v[i-1];
			for(j=2;j<=i;j++)
			{
                                
				arr[i][j]=max(arr[i-1][j],arr[i-1][j-1]+p.first+(j-1)*p.second);
			}	
		
		}
             for(int i=1;i<=n;i++)
		cout<<arr[n][i]<<" ";
		cout<<"\n";	
	}


	 return 0;
}
