// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
#define MAXN 100010
int s[MAXN];
int p[MAXN];
int find(int x)
{
	if(p[x]==x)
		return x;
	p[x]=find(p[x]);
	return p[x];
}
int main()
{
/*	IOS;[
	#ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
	#endif
*/	int ans=1;
	int n,m;scanf("%d%d",&n,&m);
	for(int i=1;i<=(n+1);i++)
	{
		s[i]=1;
		p[i]=i;
	}
	for(int i=0;i<m;i++)
	{
		int n1,n2;scanf("%d%d",&n1,&n2);n2++;
		int p1=find(n1);
		int p2=find(n2);
		if(p1!=p2)
		{
			ans=(ans*2)%MOD;
			if(s[p1]<s[p2])
			{
				p[p1]=p2;
				s[p2]+=s[p1];
				s[p1]=0;
			}
			else
			{
				p[p2]=p1;
				s[p1]+=s[p2];
				s[p2]=0;
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



