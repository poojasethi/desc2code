#include<iostream>
#include<cstdio>
using namespace std;
#include<list>
#define mod 1000000007
list<int> graph[100000+1];
bool visited[100001]={false};
int count=0;
int DFS(int i)
{
    count++;
    visited[i]=true;
    for(list<int>::iterator it=graph[i].begin();it!=graph[i].end();it++)
    {
        if(visited[*it]==false)
        DFS(*it);
    }
    return count;
}
int main()
{
    long long power[100001];

    power[0]=1;
    for(int i=1;i<100001;i++)
    {
        power[i]=(power[i-1]*2)%mod;
    }
   // cout<<power[5]<<endl;
    int n,m;
    cin>>n>>m;

    int temp1,temp2;
    for(int i=0;i<m;i++)
    {
        scanf("%d%d",&temp1,&temp2);
        graph[temp2+1].push_back(temp1);
        graph[temp1].push_back(temp2+1);
    }
    int res=0;

    for(int i=1;i<=n;i++)
    {
        if(!visited[i])res+=(DFS(i)-1);
        count=0;
    }
    //cout<<res<<endl;
    printf("%lld\n",power[res]);


}
