// AUTHOR: ARVIND NAIR

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;

#define s(x) long int x; scanf("%ld", &x)
#define ss(x,y) long int x,y; scanf("%ld%ld", &x, &y)
#define sss(x,y,z) long int x,y,z; scanf("%ld%ld%ld", &x, &y, &z)
#define repit(a,b)   for (__typeof((b).begin()) (a)=(b).begin(); (a)!=(b).end(); (a)++)
#define rep(a,b,c)   for (long int (a)=(b); (a)<(c); (a)++)
#define repn(a,b,c)  for ( long int (a)=(b); (a)<=(c); (a)++)
#define repd(a,b,c)  for ( long int (a)=(b); (a)>=(c); (a)--)
#define all(v) (v).begin(),(v).end()
#define fi  first
#define se  second
#define pb  push_back
#define mp  make_pair
#define INF (int)1e9
#define EPS (double)(1e-9)
#define PI (double)(3.141592653589793)
#define M(x,i) memset(x,i,sizeof(x))

vector<pair<ll,ll> >  dish;
vector<pair<ll,pair<ll,ll> > >  clan;

bool check(ll val) {
ll i,j;
i=j=0;
while(i<dish.size() && j<clan.size())  {
   if(dish[i].fi<clan[j].fi)  {
         val-=dish[i].se;
         ++i;
         if(val<=0)  return false;
}
  else {
   if(val>=clan[j].se.fi)
    val+=clan[j].se.se;
   ++j;
  }
}
while(i<dish.size()) {
val-=dish[i].se;
++i;
if(val<=0) return false;
}
return  true;
}

int main()
{ ios_base::sync_with_stdio(0);  cin.tie(0);
//freopen("/home/arvind/Downloads/inp.txt","r",stdin);
//freopen("out.txt","w",stdout);
int T;  cin>>T;
while(T--)  {  dish.clear();  clan.clear();
ll dist;  cin>>dist;

ll b,x,y,cnt=1;   cin>>b;
rep(i,0,b){
cin>>x>>y;
cnt+=y;
dish.pb(mp(x,y));
}

ll c,p,q,r;   cin>>c;
rep(i,0,c){
cin>>p>>q>>r;
clan.pb(mp(p,mp(q,r)));
}

sort(all(clan));
sort(all(dish));

ll hi=cnt,lo=0,ans=cnt;
while(lo<=hi)  {  ll mid=lo+(hi-lo)/2;
 if(check(mid))
 { hi=mid-1;
    ans=min(ans,mid);
    }
 else lo=mid+1;
}
printf("%lld\n",ans);
}
return 0;
}