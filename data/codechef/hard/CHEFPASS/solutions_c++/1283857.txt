#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

#define MAXN 60

int id[MAXN],high[MAXN],dgr[MAXN],cont[MAXN];

int find(int x) {
	if (id[x] == x) return x;
	return id[x] = find(id[x]);
}

void join(int a, int b) {
	a = find(a);
	b = find(b);

	if (a == b) return;

	if (high[a]>=high[b])
		id[b] = a;
	else id[a] = b;

	if (high[a] == high[b])
		high[a]++;

	return;
}

int main() {
	int nt,n,m;
	int u,v;
	char str[4];
	scanf("%d",&nt);

	while (nt--) {
		scanf("%d",&n);

		memset(dgr,0,sizeof(dgr));
		memset(cont,0,sizeof(cont));
		for (int i=0; i<MAXN; i++)
			{	id[i] = i;	high[i] = 1;	}

		for (int i=0; i<n; i++) {
			scanf(" %s",str);
			if (str[0]>='a') u = str[0]-'a';	else u = str[0]-'A'+26;
			if (str[1]>='a') v = str[1]-'a';	else v = str[1]-'A'+26;
			dgr[u]++;	dgr[v]++;
		}

		scanf("%d",&m);
		for (int i=0; i<m; i++) {
			scanf(" %s",str);
			if (str[0]>='a') u = str[0]-'a';	else u = str[0]-'A'+26;
			if (str[1]>='a') v = str[1]-'a';	else v = str[1]-'A'+26;
			join(u,v);
		}

		for (int i=0; i<MAXN; i++)
			if (dgr[i]%2) cont[find(i)]++;		

		int flag = 1;
		for (int i=0; i<MAXN; i++)		
			if (cont[i]%2) { flag=0;	break;	}

		flag ? printf("YES\n") : printf("NO\n");
	}

	return 0;
}
