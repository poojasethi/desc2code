#include <iostream>
#include <stdio.h>
#include <map>
#include <vector>
#include <string.h>
#include <algorithm>
#include <queue>
#include <limits.h>
#include <stdlib.h>
#include <set>
using namespace std;
 
#define MAXV 52
 
int deg[MAXV];
int ovc[MAXV];
int parent[MAXV];
 
int dec(char c) {
    if(c >= 'A' && c <= 'Z')
         return c - 'A';
    else
         return c - 'a' + 26;
}
 
void make_set(){
     for(int i = 0; i < MAXV; i++)
             parent[i] = i;
}
 
int find_set(int i){
	if(i == parent[i])
         return parent[i];
         
	else{
         parent[i] = find_set(parent[i]);
         return parent[i];
    }
}
 
void union_set(int i, int j){
    int x = find_set(i);
    int y = find_set(j);
	parent[x] = y;
}
 
void Reset() {
     memset(deg, 0, sizeof(deg));
     memset(ovc, 0, sizeof(ovc));
     make_set();
}
 
int main(){
    int T, N, M;
    char str[5];
    bool possible;
    
    scanf("%d", &T);
    while(T--) {
               Reset();
               possible = true;
               
               scanf("%d", &N);
               for (int i = 0; i < N; i++) {
                   scanf("%s", str);
                   
                   int u = dec(str[0]);
                   int v = dec(str[1]);
                   
                   deg[u]++;
                   deg[v]++;
               }
               
               scanf("%d", &M);
               for (int i = 0; i < M; i++) {
                   scanf("%s", str);
                   
                   int u = dec(str[0]);
                   int v = dec(str[1]);
                   
                   union_set(u, v);
               }
               
               for (int u = 0; u < MAXV; u++) {
                   if(deg[u] % 2) {
                             ovc[find_set(u)]++;
                   }
               }
               
               for (int u = 0; u < MAXV; u++) {
                   if(ovc[u] % 2) {
                             possible = false;
                             break;
                   }
               }
               
               if(possible)
                           printf("YES\n");
               else
                   printf("NO\n");
                   
    }
    return 0;
}
 