#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <queue>
using namespace std;
#define trololoy y1
#define pb push_back
#define mp make_pair
#define f first
#define s second
typedef long long ll;
typedef unsigned long long ull;
typedef pair <int, int> pii;
typedef vector <int> vi;
typedef double db;
const int N = 55;

int nextInt()
{
  int ret = 0, len = 0, sign = 1;
  while (true)
  {
    char c = getchar();
    if (c == ' ' || c == '\n')
    {
      if (len) break;
      continue;
    } else if (c == '-')
    {
      ++len;
      sign = -1;
      continue;
    }
    ret = ret * 10 + c - '0';
    len++;
  }
  return ret * sign;
}

int get(char c)
{
  if (c >= 'a' && c <= 'z') return c - 'a';
  return c - 'A' + 26;
}

int dig[N], n, m, a[N][N], size = 52, cnt;
bool use[N];
void dfs(int v)
{
  cnt += dig[v] % 2;
  use[v] = true;
  for (int i = 0; i < size; ++i)
    if (a[v][i] && !use[i]) dfs(i);
}

void solve()
{
  memset(dig, 0, sizeof(dig));
  memset(use, 0, sizeof(use));
  for (int i = 0; i < size; i++)
    for (int j = 0; j < size; j++)
      a[i][j] = 0;
  cin >> n;
  string s;
  for (int i = 0; i < n; ++i)
  {
    cin >> s;
    int u = get(s[0]);
    int v = get(s[1]);
    dig[u]++, dig[v]++;
  }
  cin >> m;
  for (int i = 0; i < m; ++i)
  {
    cin >> s;
    int u = get(s[0]);
    int v = get(s[1]);
    a[v][u]++, a[u][v]++;
  }
  for (int i = 0; i < size; i++)
    if (!use[i])
    {
      cnt = 0;
      dfs(i);
      if (cnt % 2)
      {
        cout << "NO\n";
        return;
      }
    }
  cout << "YES\n";
}
int main()
{
  int t;
  cin >> t;
  for (int i = 0; i < t; i++)
    solve();

/*
1
2 ab ca
3 ab bc cd

1
4 aB aB Ca Bc
3 Ba aC bc


1
3 Aa aA Ba
4
aC Cd db eB ae
YES

Process returned 0 (0x0)   execution time : 49.926 s
Press any key to continue.

*/
  return 0;
}
