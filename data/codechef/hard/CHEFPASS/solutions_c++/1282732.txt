#include<map>
#include<ctime>
#include<cmath>
#include<queue>
#include<bitset>
#include<vector>
#include<cstdio>
#include<string>
#include<cassert>
#include<cstring>
#include<numeric>
#include<sstream>
#include<iterator>
#include<iostream>
#include<algorithm>
using namespace std;
typedef long long LL;
#define MM(a, x) memset(a, x, sizeof(a))
#define P(x) cout << #x << " = " << x << endl;

int A[52][52], B[52][52];

int getInt(char a) {
	if(a >= 'a') return a - 'a' + 26;
	return a - 'A';
}

int n, m;
bool deg[52];
int v[52];
int u[52];
void dfs(int x, int t) {
	if(v[x]) return;
	v[x] = t;
	for(int i = 0; i < 52; i++) if(B[x][i]) dfs(i, t);
}

int main() {
	int T;
	cin >> T;
	string s;
	while(T--) {
		cin >> n;
		MM(A, 0);
		MM(B, 0);
		MM(deg, 0);
		MM(u, 0);
		for(int i = 0; i < n; i++) {
			cin >> s;
			int a = getInt(s[0]);
			int b = getInt(s[1]);
			A[a][b] = A[b][a] = 1;
			deg[a] ^= 1;
			deg[b] ^= 1;
		}
		cin >> m;
		for(int i = 0; i < m; i++) {
			cin >> s;
			int a = getInt(s[0]);
			int b = getInt(s[1]);
			B[a][b] = B[b][a] = 1;
			u[a] = u[b] = 1;
		}
		LL mask = 0;
		for(int i = 0; i < 52; i++) {
			if(deg[i]) mask |= 1LL << i;
		}
		bool OK = 1;
		MM(v, 0);
		for(int i = 0; i < 52; i++) {
			if(!u[i]) continue;
			dfs(i, i + 1);
			LL mk = 0;
			for(int j = 0; j < 52; j++) {
				if(v[j] == i + 1) mk |= 1LL << j;
			}
			LL t = mask & mk;
			LL tp = t;
			int ct = 0;
			while(t) {
				if(t & 1)ct ^= 1;
				t >>= 1;
			}
			if(ct == 1) {
				OK = 0;
				break;
			}
			mask ^= tp;
		}
		if(mask) OK = 0;
		puts(OK ? "YES" : "NO");
	}
#ifdef WANBO_LOCAL
	system("pause");
#endif
	return 0;
}