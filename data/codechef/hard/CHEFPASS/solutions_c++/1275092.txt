#include <iostream>
#include <iterator>
#include <fstream>
#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <cctype>
#include <cstring>

using namespace std;

int val(int c) {
    if (c <= 'Z') {
        return c - 'A';
    } else {
        return c - 'a' + 26;
    }
}
bool G[52][52];
int deg[52];
bool used[52];
int dfs(int u, bool first=true) {
    used[u] = true;
    if (!first && (deg[u]&1)) {
        return u;
    }
    for (int v=0; v<52; ++v) {
        if (!used[v] && G[u][v]) {
            int w = dfs(v, false);
            if (w != -1) {
                return w;
            }
        }
    }

    return -1;
}
int main() {
    int T;
    scanf("%d", &T);
    while (T--) {
        int n;
        scanf("%d", &n);
        memset(deg, 0, sizeof deg);
        for (int i=0; i<n; ++i) {
            int c = getchar(); // the space
            int a = val(getchar());
            int b = val(getchar());
            ++deg[a];
            ++deg[b];
        }

        scanf("%d", &n);
        memset(G, 0, sizeof G);
        for (int i=0; i<n; ++i) {
            int c = getchar(); // the space
            int a = val(getchar());
            int b = val(getchar());
            G[a][b] = 1;
            G[b][a] = 1;
        }

        bool ok = true;
        for (int i=0; i<52; ++i) {
            if (deg[i] & 1) {
                memset(used, 0, sizeof used);
                int j = dfs(i);
                if (j == -1) {
                    ok = false;
                    break;
                }
                --deg[i];
                --deg[j];
            }
        }

        puts(ok ? "YES" : "NO");
    }
	return 0;
}
