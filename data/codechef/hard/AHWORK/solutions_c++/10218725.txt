#include<iostream>
#include<cstring>
#include<cstdio>
#define inf 1000000
using namespace std;

int dp[1005][1005][3][3];
string s[1005];

bool ispalin(int i,int c1,int c2)
{
c2=s[i].size()-c2-1;
while(c1<c2)
{
if(s[i][c1]!=s[i][c2])
return false;
c1++;
c2--;
}
return true;
}

int func(int i,int j,int c1,int c2)
{
if(i>j)
return ((c1==0&&c2==0)?0:inf);
if(i==j)
{
if(c1>s[j].size()-c2-1)
return inf;
if(ispalin(i,c1,c2))
return 0;
return (c1==0&&c2==0?1:inf);
}
if(dp[i][j][c1][c2]!=-1)
return dp[i][j][c1][c2];
int ans=inf;
if(s[i][c1]==s[j][s[j].size()-c2-1])
{
if(c1+1<s[i].size()&&c2+1<s[j].size())
ans=min(ans,func(i,j,c1+1,c2+1));
else if(c1+1<s[i].size())
ans=min(ans,func(i,j-1,c1+1,0));
else if(c2+1<s[j].size())
ans=min(ans,func(i+1,j,0,c2+1));
else
ans=min(ans,func(i+1,j-1,0,0));
}
if(c1==0)
ans=min(ans,1+func(i+1,j,0,c2));
if(c2==0)
ans=min(ans,1+func(i,j-1,c1,0));
return (dp[i][j][c1][c2]=ans);
}

int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
while(t--)
{
memset(dp,-1,sizeof(dp));
int n;
cin>>n;
for(int i=0;i<n;i++)
cin>>s[i];
cout<<func(0,n-1,0,0)<<endl;
}
return 0;
}
