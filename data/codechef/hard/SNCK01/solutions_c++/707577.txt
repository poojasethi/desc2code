
#include<iostream>
#include<sstream>
#include<cstdio>
#include<memory.h>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<string>
#include<map>
#include<cstring>
#include<vector>
#include<queue>
#include<stack>
#include<assert.h>
#include<set>
#include<deque>
#include<climits>
#include<utility>

using namespace std;

#define lc(i) (i<<1)
#define rc(i) ((i<<1)+1)
#define SI ({int _x; scanf("%d",&_x); _x;})
#define SL ({long long _x; scanf("%lld",&_x); _x;})
#define SC ({char _x; scanf("%c",&_x); _x;})
#define sscan(n) scanf("%s",n)
#define MP make_pair
#define PB push_back
#define LL long long
#define _MAX 10000
#define FILL(a,x) memset(a,x,sizeof a)
#define REP(i,n) for(int i=0;i<n;++i)
#define FOR(i,a,b) for(int i=a;i<b;++i)
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a

typedef vector<int> VI; 
typedef vector<VI> VVI; 
typedef pair<int,int> PI; 
typedef pair <LL, PI> PLPI;
#define SZ(a) int((a).size()) 
#define ALL(c) (c).begin(),(c).end() 
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())

int main()
{
	int T = SI;
	int a[100];
	while(T--)
	{
		int n = SI, m = SI;
		int ans = 0;
		REP(i, n)
		{
			REP(j,m)
				a[j] = SI;
			int grundy = a[m-1];
			int j = m-2;
			while(j>=0) { 
				if(a[j] <= grundy) grundy = a[j] - 1;
				else grundy = a[j];
				--j;
			}
			ans ^= grundy;
		}
		printf("%s\n",ans?"FIRST":"SECOND");
	}
	return 0;
}
