//Data Structure includes
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>


//Other Includes
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>

#define PB push_back
#define MP make_pair
#define MAXIMUM 18446744073709551615ULL
#define MAX 1010

using namespace std;

typedef long long int LL;
typedef unsigned long long int ULL;
typedef unsigned int UI;
typedef pair<int,int> PII;

/*int mex(int p, int k)
{
    bool check[100];
    for (int i=0; i<=100; i++)
    check[i] = false;
        check[p] = true;
        for (int i=1,l=i; i<k; i++)
        {
            while (check[l]) ++l;
            check[l] = true;
        }
    for (int i=0; i<=100; i++)
    if (!check[i]) return i;
}*/

vector<int> row;

int main()
{
    int t,n,m,num,ans,grundy;
    scanf("%d",&t);
    while (t--)
    {
          ans = 0;
          scanf("%d%d",&n,&m);
          for (int i=0; i<n; i++)
          {
              row.clear();
               for (int j=0; j<m; j++)
              {
                  scanf ("%d",&num);
                  row.PB(num);
              }    
              
              grundy = row[m-1];
              
              for (int j=m-2; j>=0; j--)
              {
                  if (row[j] > grundy) grundy = row[j];
                  else grundy = row[j]-1;
              }
          ans ^= grundy;
          }
          if (ans)
          printf("FIRST\n");
          else
          printf("SECOND\n");
     }
    return 0;    
}
