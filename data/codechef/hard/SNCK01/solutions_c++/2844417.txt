						/*////////////////////////////////////////////////*/
						/* 				 code by d@rk$(@!e   			  */
						/*////////////////////////////////////////////////*/
#include <algorithm>
#include <assert.h>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <cctype>
#include <climits>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <cstring>

using namespace std;
#define CLR(a) memset(a, 0, sizeof(a))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define SZ(V) (int )V.size()
#define ALL(V) V.begin(), V.end()
#define RALL(V) V.rbegin(), V.rend()
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define si(n) scanf("%d",&n)
#define ss(s) scanf("%s",s)
#define prin(n) printf("%d\n",n)
#define pll pair < long long int, long long int >
#define pii pair < int, int >
#define psi pair < string, int >
#define PB push_back  
#define MP make_pair
#define F first
#define S second
#define MOD 1000000007LL

typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef long long LL;

LL a[50][50],n,m;
int main()
{
	LL i,j,k,test;
	cin >> test;
	while(test--){
		cin >> n >> m;
		FORN(i,n)
			FORN(j,m)
				cin >> a[i][j];
		LL grundy=0;
		FORN(i,n){
			LL grundy_row=a[i][m-1];
			for(j=m-2;j>=0;j--){
				if(a[i][j]>grundy_row) grundy_row=a[i][j];
				else grundy_row=a[i][j]-1;
			}
			grundy^=grundy_row;
		}
		cout << (grundy ? "FIRST":"SECOND") << endl;
	}
	return 0;
}