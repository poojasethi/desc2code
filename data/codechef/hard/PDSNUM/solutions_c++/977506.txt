#include <iostream>
#include <map>
using namespace std;

map <int,int> f[11][99][2];
int ans,n;

int calc(int prefix,int digit,int sum,int pro)
{
	if (digit<0)
	{
		if (prefix && pro%sum==0)
		{
			if (!--n) ans=prefix;
			return 1;
		}
		return 0;
	}
	
	while (pro && pro%128==0) pro/=2;
	while (pro && pro%243==0) pro/=3;
	while (pro && pro%125==0) pro/=5;
	while (pro && pro%343==0) pro/=7;
	
	if (f[digit][sum][prefix>0].count(pro))
		if (f[digit][sum][prefix>0][pro]<n)
		{
			n-=f[digit][sum][prefix>0][pro];
			return f[digit][sum][prefix>0][pro];
		}
		
	int res=0;
	for (int x=0;x<10;x++)
	{
		res+=calc(prefix*10+x,digit-1,sum+x,(prefix || x?pro*x:1));
		if (n<=0) return res;
	}
	
	return f[digit][sum][prefix>0][pro]=res;
}

int main()
{
	while (cin >> n)
	{
		if (!n) break; 
		calc(0,9,0,1);
		cout << ans << endl;
	}
}
