#include <cstdio>
#include <cstring>
 
using namespace std;
 
const int MAXL = 10, MAXP = 7*5*3*3;
const int good[] = { 2, 3, 5, 7 };
const int maxpow[] = { 7, 5, 3, 3 };
 
int N, tab[MAXP+1][10];
long long res[MAXL][MAXP+1][MAXL*9+1];
 
void solve()
{
  int curl;
 
  for (curl = 1; curl <= MAXL; ++curl) {
    long long z = 0;
    for (int d = 1; d <= 9; ++d) z += res[curl-1][tab[0][d]][d];
    if (z >= N) break; else N -= z;
  }
 
  int curd;
  for (curd = 1; curd <= 9; ++curd)
    if (res[curl-1][tab[0][curd]][curd] >= N) break; else N -= res[curl-1][tab[0][curd]][curd];
 
  printf("%d", curd); --curl;
 
  int curs = curd, curp = tab[0][curd];
  while (curl > 0) {
    for (curd = 0; curd <= 9; ++curd)
      if (res[curl-1][tab[curp][curd]][curs+curd] >= N) break; else N -= res[curl-1][tab[curp][curd]][curs+curd];
 
    printf("%d", curd); curs += curd; curp = tab[curp][curd]; --curl;
  }
 
  printf("\n");
}
 
int main()
{
  for (int prod = 0; prod <= MAXP; ++prod)
    for (int d = 0; d <= 9; ++d) {
      int cur[4], tprod = prod;
 
      if (d == 0 || prod == MAXP) { tab[prod][d] = MAXP; continue; };
 
      int tmp = d;
      for (int i = 0; i < 4; ++i) {
        cur[i] = tprod % maxpow[i]; tprod /= maxpow[i];
 
        for (int j = 0; j < cur[i]; ++j) tmp *= good[i];
      }
 
      tprod = d;
      for (int i = 0; i < 4; ++i)
        while (tprod%good[i] == 0 && cur[i]+1 < maxpow[i])
          { ++cur[i]; tprod /= good[i]; }
 
      tab[prod][d] = ((cur[3]*maxpow[2] + cur[2])*maxpow[1] + cur[1])*maxpow[0] + cur[0];
    }
 
  for (int prod = 0; prod <= MAXP; ++prod)
    for (int sum = 1; sum <= 9*MAXL; ++sum) {
      int cur[4], tsum = sum, tprod = prod;
 
      if (prod == MAXP) { res[0][prod][sum] = 1; continue; }
 
      for (int i = 0; i < 4; ++i) {
        cur[i] = tprod % maxpow[i]; tprod /= maxpow[i];
      }
 
      for (int i = 0; i < 4; ++i)
        while (tsum%good[i] == 0 && cur[i] > 0)
          { --cur[i]; tsum /= good[i]; }
 
      if (tsum == 1) res[0][prod][sum] = 1;
    }
 
 
  for (int l = 1; l < MAXL; ++l)
    for (int d = 0; d <= 9; ++d)
      for (int prod = 0; prod <= MAXP; ++prod)
        for (int sum = 1; sum <= 9*(MAXL-l); ++sum)
          res[l][prod][sum] += res[l-1][tab[prod][d]][sum+d];
 
  while (true) {
    scanf("%d", &N);
    if (N != 0) solve(); else break;
  }
 
  return 0;
}