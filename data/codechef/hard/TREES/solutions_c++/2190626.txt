/*************************************************************
 ********                    Vikash Gupta             ********
 ********                     IIT2009088              ********
 ********                   IIIT Allahabad            ********
 ***************************************************************/


/************Header Files****************/
#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<cstdlib>
#include<climits>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<cstring>
#include<string>
#include<algorithm>
#include<numeric>

using namespace std;

/*************** Prototypes ****************/
#define MAX 1e9
#define MIN 1e-9
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define REP(i,n) FOR(i,0,n)
#define FORR(i,a,b) for(int i=b-1;i>=a;i--) 
#define REPR(i,n) FORR(i,0,n)
#define sz size()
#define all(c) c.begin(),c.end()
#define mp make_pair
#define fill(ar,val) memset(ar,val,sizeof ar)
#define FORE(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define S(n) scanf("%d",&n)
#define SL(n) scanf("%ld",&n)
#define SC(c) scanf("%c",c)
#define SCS(s) scanf("%s",s)
#define SS(s) scanf("%s",s.c_str())
#define SD(d) scanf("%lf",&d)
#define acc(s,n) accumulate(s,s+n,0)
#define pb push_back

typedef long long ll;
typedef vector<int> VI;
typedef vector<string> VS;
typedef map<int,int> MII;
typedef map<int,string> MIS;
typedef map<string,int> MSI;
typedef pair<int,int> PII;
typedef pair<string,string> PSS;
typedef pair<int,string> PIS;
typedef pair<string,int> PSI;

/**************** execution function main is being begin *********************/

const int MAXN = 61;
vector<int> v[MAXN];
long long dp[MAXN][MAXN];
long long tmp[MAXN];
long long sol[MAXN];
int k;

void dfs(int nod, int par)
{
	memset(dp[nod],0,sizeof(dp[nod]));
	dp[nod][0] = 1;
	sol[nod] = 0;

	for(int i=0;i<v[nod].size();i++) {
		int w = v[nod][i];
		if(w==par) continue;
		dfs(w,nod);

		for(int j=0;j<=k;j++) tmp[j] = dp[nod][j];

		for(int lc=0;lc<=k;lc++) for(int rc=1;rc+lc<=k;rc++) tmp[max(lc,rc)] += dp[nod][lc]*dp[w][rc-1];

		for(int j=0;j<=k;j++) dp[nod][j] = tmp[j];
		
		sol[nod] += sol[w];
	}

	for(int i=0;i<=k;i++) sol[nod] += dp[nod][i];

}

int main()
{
	int t;
	S(t);

	while(t--) {
	int n;
	S(n),S(k);

	for(int i=0;i<MAXN;i++) v[i].clear();

	for(int i=0;i<n-1;i++) {
		int a,b;
		S(a),S(b);
		//a--;
		//b--;
		v[a].push_back(b);
		v[b].push_back(a);
	}

	dfs(0,-1);

	cout << sol[0] << endl << endl;
	}
}
