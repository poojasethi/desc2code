#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
int n,k;
long long dp[61][61];
vector<int> v[61],a[61];
void dfs(int x,int p=-1){
	for (int i=0;i<v[x].size();i++)
		if (v[x][i]!=p) { a[x].push_back(v[x][i]); dfs(v[x][i],x); }
}
long long go(int x,int y){
	if (y==-1) return 1;
	long long &ret=dp[x][y];
	if (ret!=-1) return ret;
	if (y==0) return ret=2;
	ret=go(x,y-1);
	long long cur,sum;
	int	high=min(y-1,(k-2)-(y-1));
	if (high<y-1){
		long long all=1;
		for (int i=0;i<a[x].size();i++) all*=go(a[x][i],high);
		for (int i=0;i<a[x].size();i++)	ret+=all/go(a[x][i],high)*(go(a[x][i],y-1)-go(a[x][i],y-2));
	}
	else{
		cur=1;
		for (int i=0;i<a[x].size();i++) cur*=go(a[x][i],high);
		ret+=cur;
		cur=1;
		for (int i=0;i<a[x].size();i++) cur*=go(a[x][i],high-1);
		ret-=cur;
	}
	return ret;
}
int main(){
	int T;
	scanf("%d",&T);
	while(T--){
		scanf("%d%d",&n,&k);
		memset(dp,-1,sizeof(dp));
		for (int i=0;i<n;i++)
			v[i].clear(),a[i].clear();
		for (int i=0;i<n-1;i++){
			int x,y;
			scanf("%d%d",&x,&y);
			v[x].push_back(y);
			v[y].push_back(x);
		}
		dfs(0);
		long long ret=0;
		for (int i=0;i<n;i++)
			ret+=go(i,k)-1;
		printf("%lld\n",ret);
	}
	return 0;
}
