#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <vector>
#include <algorithm>
#include <map>
#include <cmath>
#include <sstream>
#include <set>
#include <utility>
#include <queue>
#include <cassert>
#include <ctime>
using namespace std;

#define PB push_back
#define SZ size()
#define all(v) v.begin(), v.end()
#define REP(i, n) for(int i = 0; i < (int)n; i++)
#define ITR(i, j, n) for(int i = j; i < (int)n; i++)
#define mem(array, val) memset(array, val, sizeof(array))
#define READ(filename) freopen(filename, "r", stdin)
#define WRITE(filename) freopen(filename, "w", stdout)
#define Pii pair <int, int>
#define Fr first
#define Sc second
#define Long long long

int nmbr(char ch)
{
  if(ch >= '0' && ch <= '9')
    return (int)(ch - '0');

  return (int)(ch - 'a' + 10);
}

char nmbr(int a)
{
  if(a <= 9)
    return (char)('0' + a);

  return (char)('a' + a - 10);
}

string a, b, c;
bool check(int base)
{
  REP(i, a.SZ)
    if(nmbr(a[i]) >= base)
      return false;
  REP(i, b.SZ)
    if(nmbr(b[i]) >= base)
      return false;

  int i = 0, j = 0, carry = 0;
  string tmp = "";
  while(i < a.SZ || j < b.SZ) {
    int aa = 0, bb = 0;
    if(i < a.SZ)
      aa = nmbr(a[i]);
    if(j < b.SZ)
      bb = nmbr(b[i]);

    carry += (aa + bb);
    tmp += nmbr(carry % base);
    carry /= base;
    i++;
    j++;
  }
  while(carry > 0) {
    tmp += nmbr(carry % base);
    carry /= base;
  }

  return (tmp == c);
}

int main()
{
  char s[50];
  int t, res = 0, l;
  scanf("%d%*c", &t);

  while(t--) {
    scanf("%s", s);
    string abc[3] = {"", "", ""};

    l = strlen(s);
    int j = 0;
    for(int i = 0; i < l; i++) {
      if(s[i] == '+' || s[i] == '=') {
        j++;
        continue;
      }
      abc[j] += s[i];
    }
    a = abc[0];
    b = abc[1];
    c = abc[2];
    reverse(all(a));
    reverse(all(b));
    reverse(all(c));
    ITR(i, 2, 17)
      if(check(i)) {
        res++;
        break;
      }
  }

  printf("%d\n", res);
  return 0;
}
