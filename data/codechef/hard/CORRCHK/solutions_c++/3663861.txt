/*
 	C++ Template
	Gaurav Babbar
*/

#include<bits/stdc++.h>
#define MOD 1000000007
#define MAX 100005
#define mp make_pair
#define pb push_back
#define gc getchar
#define pc putchar
#define ll long long
#define llu unsigned long long
#define fill(a, val) memset(a, val, sizeof(a))
#define all(x) x.begin(), x.end()

ll ABS(ll a){if(a>0) return a; else return (-1*a);}
int gcd(int a,int b){if (b==0) return a;else return gcd(b,a%b);}
llu power(llu b,llu exp,llu m) {llu ans=1; b%=m; while(exp){if(exp&1) ans=(ans*b)%m; exp>>=1; b=(b*b)%m; } return ans; }
using namespace std;

#define debug(args...) {dbg,args; cerr<<endl;}
struct debugger
{template<typename T> debugger& operator,(const T& v)
 {cerr<< v <<" ";
  return *this;
 }
}dbg;

inline void inp(llu &n)
{
  n = 0;
  int ch = gc();
  int sign = 1;
  while(ch < '0' || ch > '9') {
    if (ch == '-') sign = -1;
    ch = gc();
  }
  while(ch >= '0' && ch <= '9')
    n = (n<<3) + (n<<1) + ch - '0', ch = gc();
  n = n*sign;
}

inline void outp(llu a)
{
  char snum[25];
  int i=0;
  do
  {
    snum[i++]=a%10+48;
    a=a/10;
  } while(a!=0);
  i=i-1;
  while(i>=0)
    pc(snum[i--]);
  pc('\n');
}

/* Main Code sarts here */

string str;
llu ans;

void reset()
{
}

void input()
{
    cin>>str;
}

void preprocess()
{
}

int getDigit(char ch)
{
    if(ch >= '0' && ch <= '9')
        return ch - '0';
    else if(ch>='a'&&ch<='f')
        return ch - 'a' + 10;
}

llu convert(int base,string temp)
{
    llu n=0;
    for(int i=0;temp[i];++i)
    {
        n = n*base + getDigit(temp[i]);
    }
    return n;
}

void solve()
{
    string a,b,c;
    int max_base = 0,i;
    for(i=0;str[i];++i)
        if(str[i]!='+')
            a+=str[i];
        else break;
    for(i=i+1;str[i];++i)
         if(str[i]!='=')
            b+=str[i];
        else break;
    for(i=i+1;str[i];++i)
        c+=str[i];
    for(i=0;str[i];++i)
        if(str[i]!='+' && str[i]!='=')
            max_base = max(max_base,1+getDigit(str[i]));
    //debug(a,b,c,max_base);
    for(int i = max_base;i<=16;++i)
        if(convert(i,a)+convert(i,b)==convert(i,c))
        {
            ans++;
            //debug(convert(i,a),convert(i,b),convert(i,c),i);
            break;
        }
}

int main()
{
   llu t;
   inp(t);
   while(t--)
   {
	   reset();
	   input();
	   preprocess();
	   solve();
   }
   cout<<ans<<endl;
   return 0;
}
