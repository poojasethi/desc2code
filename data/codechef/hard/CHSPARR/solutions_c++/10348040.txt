#include<bits/stdc++.h>

using namespace std;

#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define pb push_back

#define AND(a,b) ((a) & (b))
#define OR(a,b) ((a)|(b))
#define XOR(a,b) ((a) ^ (b))
#define xx first
#define yy second
#define mp make_pair
#define sqr(x) ((x)*(x))
#define sqrt(x) sqrt(1.0*(x))

#define LB(a,x) (lower_bound(all(a),x)-a.begin()) //  first element in the range [first,last) which does not compare less than val.
#define UB(a,x) (upper_bound(all(a),x)-a.begin()) //  first element in the range [first,last) which compares greater than val.
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define left nokol_left
#define right nokol_right
#define countbit(x) __builtin_popcountll((ll)x)3
#define PQ priority_queue
#define FAST ios_base::sync_with_stdio(0);cin.tie(0);
#define Unique(store) store.resize(unique(store.begin(),store.end())-store.begin())
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

typedef long long ll;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<long long,long long> pll;
typedef vector<int> vi;
typedef vector<long long> vll;

template<class T>T __sqr(const T x){return x*x;}
template< class T, class X > inline T __pow(T a,X y) {T z=1; rep(i,1,y){z*=a;} return z; }
template< class T > inline T gcd(T a,T b) {a=abs(a);b=abs(b); if(!b) return a; return __gcd(b,a%b);}
template< class T > inline T lcm(T a,T b) {a=abs(a);b=abs(b); return (a/__gcd(a,b))*b;}
inline bool ispow2(int x){return (x!=0 && (x&(x-1))==0);}
template<class T>void UpdateMin(T &x,T y){  if(y<x){x=y;}}
template<class T>void UpdateMax(T &x,T y){if(x<y){x=y;}}
template<class T,class X, class Y > inline T bigmod(T n,X m,Y mod){ull ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template<class T, class Y > inline T modinv(T n,Y mod) {return bigmod(n,mod-2,mod);}

template<class T,class X> int getbit(T s,X i) { return (s >> i) & 1; }
template<class T,class X> T onbit(T s, X i) { return s | (T(1) << i); }
template<class T,class X> T offbit(T s, X i) { return s & (~(T(1) << i)); }
template<class T> inline void read(T &n){char c;for (c = getchar(); !(c >= '0' && c <= '9'); c = getchar()); n = c - '0';for (c = getchar(); c >= '0' && c <= '9'; c = getchar()) n = n * 10 + c - '0';}

void extended_euclid(ll a,ll b,ll &x,ll &y){ if(!b){ x = 1 , y = 0  ;  return ;} ll xx,yy; extended_euclid(b,a%b,xx,yy); x = yy; y = xx - (a/b)*yy; }
pair<ll, pair<ll, ll> > extendedEuclid(ll a, ll b) { ll x = 1, y = 0; ll xLast = 0, yLast = 1; ll q, r, m, n; while(a != 0) {q = b / a; r = b % a; m = xLast - q * x; n = yLast - q * y; xLast = x, yLast = y; x = m, y = n; b = a, a = r; } return make_pair(b, make_pair(xLast, yLast)); }

const ll mod[]  ={0,1000000007,1000000009,1000000021,1000000033,1000000097,1000000093,1000000097,1000000103};
const ll base[] ={0,1000003,1000033,1000037,1000039,1000081,1000099,1000117,1000121};

#define pi acos(-1.0)
#define eps  1e-12
#define MX   (lmt+20)
#define inf  1000000000
#define MOD  1000000007LL
//---------->0123456789123465789
#define lmt  100000

ll a[MX] , dp[MX][50];;// dp[MX][];

ll func(ll pos,ll step){

    rep(i,1,step){
        pos = (pos * 2  - 1);
    }
    return pos;
}

ll three[MX];

void precal(){

    three[0] = 1;
    rep(i,1,30){
        three[i] = (three[i-1] * 3 - 1  + MOD) % MOD;
    }
}

ll direct(ll sv,ll ev,ll step){

    ll ret = (sv + ev) * three[step];
    ret %= MOD;
    return ret;
}

ll n , m ,x , y ;

ll calc(ll p, ll m){

    if(p==0) return 0;
    if(p==1) return a[1];

    ll ret = 0;
    rep(i,1,p){
        if(i==1 || p==i){
            ret += three[m] * a[i];
        }
        else{
            ret += (2*three[m]*a[i] - a[i]);
        }
        ret %= MOD;
    }
    return ret;
}
ll solve(ll pos,ll s,ll e,ll range,ll step){

//cout<<"st "<<step<<endl;;

//    cout<<"sdf "<<pos<<endl;

//getchar();
    if(range==0) return 0;
    if(step==0){

//    cout<<"ps "<<pos<<" "<<range<<endl;
        if(pos==range) return s;
        if(pos+1==range) return (s + e)%MOD;

        return 0;
    }


    ll np = pos*2 - 1;
    ll mp = func(np + 1 , step-1);
    ll ret  = 0 ;
    if(mp<=range){
        ret += solve(np+1,(s + e)%MOD , e , range , step - 1) +
        direct(s , (s + e)%MOD , step-1) - (s + e)%MOD;
    }
    else{

        ret += solve(np , s , (s + e)%MOD , range , step - 1);

//    cout<<"kutta "<<np+1<<" "<<range<<" "<<step<<endl;
//    getchar();
//    getchar();

    }
    ret %= MOD;
    return ret;
}

int main()
{
    precal();

    int ts;
    scanf("%d",&ts);
    while(ts--){
        scanf("%lld%lld%lld%lld",&n,&m,&x,&y);
        rep(i,1,n) scanf("%lld",a+i);

        ll st = -1 ,ed = -1;
        ll ans =  0 ;
        rep(i,1,n){
            ll f = func(i , m);
            if(f>=y){
                ed = i;
                ans += calc(i-1,m);
                break;
            }
        }

        rev(i,n,1){
            ll f = func(i , m);
            if(f <= x){
                st = i;
                ans -= calc(i,m);
                break;
            }
        }

        ll ff = func(ed , m);
        if(ff==y) ans = ans - calc(ed-1,m) + calc(ed , m);
        else {
            ans -= a[ed-1];
            ans += solve(ed-1,a[ed-1],a[ed],y,m);
        }

        ll ss = func(st , m);

        if(ss==x) ans += a[st];
        else {
            ans += a[st];
            ans -= solve(st,a[st],a[st+1],x-1,m);
        }


        ans = (ans%MOD + MOD)%MOD;
        cout<<ans<<endl;
    }

    return 0;
}
