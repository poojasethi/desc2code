#include<iostream>
#include<vector>
#include<numeric>
#include<algorithm>

using namespace std;

int main() {
    int t;
    cin>>t;
    while(t--) {
	int n, m, l;
	cin>>n>>m>>l;
	vector<pair<int, int> > *ar = new vector<pair<int,int> >[n];
	vector<int> ans(n, l);

	int x, y, c;
	for(int i=0; i<m; i++) {
	    cin>>x>>y>>c;
	    ar[x-1].push_back(make_pair(y-1, c));
	}

	for(int i=0; i<n; i++) {
	    for(int j=0; j<n; j++) {
		for(int k=0; k<ar[j].size(); k++) {
		    ans[j] = max(ans[j], ans[ar[j][k].first] + ar[j][k].second);
		}
	    }
	}

	bool fl = true;
	for(int i=0; i<n && fl; i++)
	    for(int j=0; j<ar[i].size(); j++) {
		if(ans[i]<ans[ar[i][j].first] + ar[i][j].second) {
		    fl =false;
		    break;
		}
	    }
	if(!fl)
	    cout<<"Inconsistent analysis."<<endl;
	else {
	    cout<<accumulate(ans.begin(), ans.end(), 0)<<endl;
	    for(int i=0; i<n; i++)
		cout<<ans[i]<<" ";
	    cout<<endl;
	}
    }

    return 0;
}



