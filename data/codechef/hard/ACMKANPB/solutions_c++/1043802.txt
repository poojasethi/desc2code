#include <iostream>
#include <cstdio>
#include <cstring>
#include <stack>
#include <vector>
#include <queue>
#include <algorithm>
using namespace std;
struct point
{
	int dis,v,next;
}e[20010];
int cnt,head[110];
void addedge(int u,int v,int dis)
{
	e[cnt].v = v;
	e[cnt].dis = dis;
	e[cnt].next = head[u];
	head[u] = cnt ++;
}
int dis[110],visit[110];
queue<int> q;
int c[110];
int spfa(int n,int r)
{
	memset(c,0,sizeof(c));
	while(!q.empty()) q.pop();
	for(int i = 1; i <= n; i ++) {
		dis[i] = r;
		q.push(i);
		visit[i] = 1;
	}
	while(!q.empty()) {
		int u = q.front();
		q.pop();
		visit[u] = 0;
		for(int i = head[u]; i != -1; i = e[i].next) 
			if(dis[e[i].v] < dis[u] + e[i].dis) {
				dis[e[i].v] = dis[u] + e[i].dis;
				if(!visit[e[i].v]) {
					c[e[i].v] ++;
					if(c[e[i].v] > n) return 0;
					visit[e[i].v] ++;
					q.push(e[i].v);
				}
			}
	}
	int sum = 0;
	for(int i = 1; i <= n; i ++)
		sum += dis[i];
	printf("%d\n",sum);
	for(int i = 1; i <= n; i ++) {
		printf("%d",dis[i]);
		if(i == n) printf("\n");
		else printf(" ");
	}
	return 1;
}
int main()
{
	int n,m,r,t,x,y,z;
	scanf("%d",&t);
	while(t--) {
		scanf("%d%d%d",&n,&m,&r);
		memset(head,-1,sizeof(head));
		cnt = 0;
		while(m --) {
			scanf("%d%d%d",&x,&y,&z);
			addedge(y,x,z);
		}
		if(!spfa(n,r)) printf("Inconsistent analysis.\n");
	}
	return 0;
}
