#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<sstream>
#include<bitset>
#include<cstdio>
#include<cmath>
#include<ctime>
#include<string>
using namespace std;
typedef long long LL;
template<typename T> T gcd(T a, T b) { return (b == 0) ? abs(a) : gcd(b, a % b); }
template<typename T> inline T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<typename T> inline T mod(T a, T b) { return (a % b + b) % b; }
template<typename T> inline T sqr(T x) { return x * x; }
template<typename T> inline string tostring(const T& x) { ostringstream  os; os << x; return os.str(); }

inline int toint(const string& s) { istringstream  is(s); int x; is >> x; return x; }
inline double todouble(const string& s) { istringstream  is(s); double x; is >> x; return x; }
inline string tobinary( int a) { string s; while( a != 0 ) { s = (char)(a%2+'0') + s; a>>=1; } return s; }
inline int isvowel( char c ) { if ( c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ) return 1; return 0; }
inline int isprime( int a ) {  for ( int i = 2; i*i <= a; i++ ) if (!(a%i)) return 0; return 1; }

#define s(n)					scanf("%d",&n)
#define sll(n) 					scanf("%lld",&n)
#define sl(n) 					scanf("%ld",&n)
#define ss(n) 					scanf("%s",n)
#define pp(x) printf("%d",x)
#define ppl(x) printf("%ld",x)
#define ppll(x) printf("%lld",x)
#define ps printf(" ")
#define pendl printf("\n")
#define forr(x, b, e)    for (int x = (b); x <= (e); x++)
#define forev(x, b, e)   for (int x = (b); x >= (e); x--)
#define all(c)          (c).begin(), (c).end()
#define mp      make_pair
#define pb      push_back
#define ii      pair<int,int>
#define debug(args...)			{dbg,args; cerr<<endl;}
#define zero(a) memset(a, 0, sizeof(a))
#define fill(a, x) memset(a, x, sizeof(a))
#define MOD 1000000007
int dx[] = {0, 1, 0, -1};
int dy[] = {1, 0, -1, 0};
LL powmod( LL b, LL p,LL m )
{
    LL r = 1;
    for( int i = ( 1 << 30 ); i; i >>= 1 )
    {
        r *= r; r %= m;
        if( p & i ) { r *= b; r %= m; }
    }
    return (LL)r;
}

/*Main Code Begins Now*//////////////////////////////////////////////////////////////////////////////////////////////

int v[101],x[100001],y[100001],d[100001];
int main()
{
   //freopen("C:\\Users\\admin\\Desktop\\input.txt","r",stdin);
   //freopen("C:\\Users\\admin\\Desktop\\output.txt","w",stdout);

    int N;
    int test;
    cin>>test;
    while(test--){
    s(N);
    int M,L,a,b,c;
    cin>>M;
    cin>>L;
    vector<ii> cost[N];
    forr(i,0,M-1){
		cin>>a>>b;
		x[i]=a;
		y[i]=b;cin>>c;
		d[i]=c;
		a--;
	
		b--;
        cost[a].push_back(ii(b,c));
    }
    int i,j;
    int res=1,sum=0;
	   int n=N;
	   int m=M,l=L;
		for(i=1;i<=n;i++)v[i]=l;
		for(j=1;j<n;j++)
			for(i=0;i<m;i++)
				if(v[x[i]]<(v[y[i]]+d[i]))v[x[i]]=v[y[i]]+d[i];
		for(i=0;i<m;i++)
			if(v[x[i]]<(v[y[i]]+d[i]))res=0;
		if(!res)
		{
			printf("Inconsistent analysis.\n");
			continue;
		}
		for(i=1;i<=n;i++)sum+=v[i];
		printf("%d\n",sum);
		for(i=1;i<=n;i++)
			printf("%d ",v[i]);
		printf("\n");
		continue;
    queue<int> Q;
    for(int i=0;i<N;i++)
    Q.push(i);
    int fcost[N];
    int flag=0;
    for(int i=0;i<N;i++)fcost[i]=L;
    while(!Q.empty())
    {
		int u=Q.front();Q.pop();
		for(int i=0;i<cost[u].size();i++)
		{
			int v=cost[u][i].first;
			int ctemp=cost[u][i].second;
		
			if(fcost[u]<fcost[v]+ctemp)
			{
				fcost[u]=fcost[v]+ctemp;
			//	cout<<"u : "<<u<<" cost "<<fcost[u]<<endl;
				Q.push(u);
			}
		}
		
	}
	
		long sum1=0;
		for(int i=0;i<N;i++) sum1+=fcost[i];
		cout<<sum1<<endl;
		for(int i=0;i<N;i++)
	{
		cout<<fcost[i]<<" ";
	}
	cout<<endl;
}

   // system("pause");
  return 0;
}












