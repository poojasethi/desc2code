#include<stdio.h>

int x,t,n,a[1001][3],ans[1001],prev[1001],b[1001][3],tmp,max1,prv,final_max1,final_node,cnt,tm,ind1,ind2,ind;
bool sign;

inline void merge(int lo,int hi)
{
ind1=lo;
ind2=1+(lo+hi)/2;
ind=lo;
while(ind1<=(lo+hi)/2 && ind2<=hi)
{
if(a[ind1][0]<=a[ind2][0])
{b[ind][0]=a[ind1][0];b[ind][1]=a[ind1][1];b[ind][2]=a[ind1][2];ind++;ind1++;}
else
{b[ind][0]=a[ind2][0];b[ind][1]=a[ind2][1];b[ind][2]=a[ind2][2];ind++;ind2++;}
}
while(ind1<=(lo+hi)/2)
{
b[ind][0]=a[ind1][0];b[ind][1]=a[ind1][1];b[ind][2]=a[ind1][2];ind++;ind1++;
}
while(ind2<=hi)
{
b[ind][0]=a[ind2][0];b[ind][1]=a[ind2][1];b[ind][2]=a[ind2][2];ind++;ind2++;
}
for(int i=lo;i<=hi;i++)
{
a[i][0]=b[i][0];
a[i][1]=b[i][1];
a[i][2]=b[i][2];
}
}

void m_sort(int lo,int hi)
{
if(lo==hi)
return;
m_sort(lo,(lo+hi)/2);
m_sort(1+(lo+hi)/2,hi);
merge(lo,hi);
}

inline void inp(int &u)
{
/*u=0;
sign=false;
x=getchar_unlocked();
if(x=='-')
{sign=true;x=getchar_unlocked();}
while(x>='0' && x<='9')
{
u=(u<<3)+(u<<1)+(x-'0');
x=getchar_unlocked();
}
if(sign)
u*=(-1);*/
scanf("%d",&u);
}

inline int abs(int ab)
{
if(ab<0)
return ab*(-1);
return ab;
}

inline int mst(int i,int j)
{
return (abs(a[i][2]-a[j][2])+abs(a[i][1]-a[j][1]));
}

int main()
{
inp(t);
for(int i=0;i<t;i++)
{
inp(n);
a[0][0]=0;
a[0][1]=0;
a[0][2]=0;
for(int i=1;i<=n;i++)
{
inp(a[i][1]);
inp(a[i][2]);
inp(a[i][0]);
}
m_sort(1,n);
ans[0]=0;
prev[0]=-1;
final_max1=-1;
final_node=0;
for(int i=1;i<=n;i++)
{
max1=-1;
prv=-1;
for(int j=0;j<i;j++)
{
if(a[j][0]+mst(i,j)>a[i][0] || ans[j]==-1)
continue;
tmp=1+ans[j];
if(tmp>max1)
{max1=tmp;prv=j;}
}
ans[i]=max1;
prev[i]=prv;
if(final_max1<ans[i])
{final_max1=ans[i];final_node=i;}
else if(final_max1==ans[i] && a[i][0]<a[final_node][0])
{final_max1=ans[i];final_node=i;}
}
tmp=final_node;
cnt=0;
while(1)
{
if(tmp==0)
break;
cnt++;
tmp=prev[tmp];
}
if(cnt==0)
printf("No Photos\n");
else
printf("%d %d\n",cnt,a[final_node][0]);
}
return 0;
}