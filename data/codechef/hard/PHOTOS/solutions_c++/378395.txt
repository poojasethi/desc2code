/// Author: Mahesh

/// pre code starts:
#include <vector>
#include <string>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <ctype.h>
#include <bitset>
#include <assert.h>

using namespace std;

#define REP(i, n) for(int i=0; i<(n); i++)
#define FOR(i, a, b) for(int i=(a); i<(b); i++)
#define IFOR(i, a, b) for(int i=(a); i>=(b); i--)
#define FORD(i, a, b, c) for(int i=(a); i<(b); i+=(c))

#define SS ({int x;scanf("%d", &x);x;})
#define SI(x) ((int)x.size())
#define PB(x) push_back(x)
#define MP(a,b) make_pair(a, b)
#define SORT(a) sort(a.begin(),a.end())
#define ITER(it,a) for(typeof(a.begin()) it = a.begin(); it!=a.end(); it++)
#define ALL(a) a.begin(),a.end()
#define INF 1000000000
#define V vector
#define S string
#define FST first
#define SEC second
typedef V<int> VI;
typedef V<S> VS;
typedef long long LL;
typedef pair<int, int> PII;
/// pre code ends:

int v[1001][1001];
PII dp[1001];
pair<int, PII> pp[1000];
int main()
{
	int t=SS;
	while(t--){
		int n=SS;
		pp[0]=MP(0, MP(0, 0));
		REP(i, n){
			int x=SS, y=SS, t=SS;
			pp[i+1]=MP(t, MP(x, y));
		}
		sort(pp, pp+n+1);
		REP(i, n+1){
			int t=pp[i].FST;
			int x=pp[i].SEC.FST;
			int y=pp[i].SEC.SEC;
			FOR(j, i+1, n+1){
				int tt=pp[j].FST;
				int xx=pp[j].SEC.FST;
				int yy=pp[j].SEC.SEC;
				v[i][j]=0;
				if(tt >= t+abs(x-xx)+abs(y-yy)){
					v[i][j]=1;
				}
			}
		}
		REP(i, n+1){
			dp[i]=MP(0, pp[i].FST);
		}

		IFOR(i, n, 0){
			FOR(j, i+1, n+1){
				if(v[i][j]==1){
					if(1+dp[j].FST>dp[i].FST){
						dp[i] = MP(1+dp[j].FST, dp[j].SEC);
					}
					else if(1+dp[j].FST==dp[i].FST && dp[j].SEC < dp[i].SEC){
						dp[i] = MP(1+dp[j].FST, dp[j].SEC);
					}
				}
			}
		}
		if(dp[0].FST==0){
			cout<<"No Photos\n";
		}
		else{
			cout<<dp[0].FST<<" "<<dp[0].SEC<<endl;
		}
	}
	return 0;
}
