#include <bits/stdc++.h>
#define MAXN 100003
using namespace std;

bool a[MAXN], visited[MAXN];
vector<pair<int,int> > g[MAXN];
int d[MAXN];

priority_queue< pair<int, int>, vector< pair<int, int> >, greater< pair<int, int> > >s;
int n, m, k;

int main() {
    cin>>n>>m>>k;
    for (int i = 1 ; i <=k; i++) {
        int x; 
        cin>>x;
        a[x] = 1;
    }
    
    for (int i = 0; i < m; i++) {
        int x, y, z;
        cin>>x>>y>>z;
        
        
        g[x].push_back(make_pair(y, z) );
        g[y].push_back(make_pair( x, z) ) ;
    }
    
    int ans = INT_MAX;
    
    for (int i = 1 ; i <= n;i++) {
        if (!a[i]) {
            continue;
        }
        
        for (int j = 1; j <= n ; j++) {
            d[j] = INT_MAX;
            visited[j] = false;
        }
        
        d[i] = 0;
        while ( !s.empty() ) {
            s.pop();
        }
        
        
        s.push( make_pair(0, i)  );
        int cnt_special  = 0 ;
        while (!s.empty() ) {
            int u = s.top().second;
            s.pop();
            
            if (visited[u]) {
                continue;
            }
            
            visited[u] = true;
            
           
            
            if ( a[u] ) {
                cnt_special++;
            }
            
            if ( d[u] > ans ) {
                break;
            }
            if ( cnt_special  == 2 && a[u]) {
                ans = min(ans, d[u]);
                break;
            }
            
            
            for (int v = 0; v < g[u].size(); v++ ) {
                int to = g[u][v].first;
                int w  = g[u][v].second;
                
                if (d[u] + w < d[to]) {
                    d[to] = d[u]+w;
                    s.push( make_pair(d[to], to) );
                }
            }
        }
    }
    
    cout<<ans<<endl;
    
	return 0;
}
