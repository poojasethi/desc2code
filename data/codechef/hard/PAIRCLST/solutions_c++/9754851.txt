//      go_on
#include <bits/stdc++.h>
using namespace std;


//      LOOPS AND MEM
#define mz(a) memset(a,0,sizeof(a))
#define md(a,m,n) memset(a,0,sizeof(a[0][0])*m*n);
#define mmin1(a) memset(a,-1,sizeof(a))
#define minf(a) memset(a,MEMSET_INF,sizeof(a));
#define f(i,a,n) for(int i=a;i<=n;++i)
#define fs(i,a,n) for(int i=a;i<n;++i)
#define fl(i,n,a) for(int i=n;i>=a;--i)


//       I/O
#define i(n) cin>>n
#define is(n) scanf("%s",n)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define o(n) cout<<n
#define p(n) printf("%d",n)
#define pl(n) printf("%lld",n)
#define os cout<<" "
#define on cout<<"\n"


//       CONTAINERS
#define ll long long int
typedef vector <ll> vi;
typedef pair<ll, ll> pii;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define all(a)  a.begin(),a.end()
//#define fv(i,v) for(auto i = v.begin();i !=v.end(); ++i)


//        DEF AND INIT

#define M 1000000007
#define eps 1e-15
#define MAX 100005
/*map< string, int > m;
map< string, int > :: iterator it;*/
vector< pii > p[MAX];

ll dis[MAX],vis[MAX],a[MAX],sp[MAX],max_;

void fun(ll source)
{
    ll ind_,dis_;
    priority_queue< pii, vector< pii >, greater< pii > > s;
    s.push(mp(0,source));
    mz(vis);
    mmin1(dis);
    vis[source]=1;
    dis[source]=0;
    while(!s.empty())
    {
        ind_=s.top().second;
        dis_=s.top().first;
        if(ind_!=source && sp[ind_] && dis_<max_)
        {
            max_=dis_;
            return;
        }
        else if(dis_>max_)
            return;
        s.pop();
        vis[ind_]=2;
        for(ll i=0;i<p[ind_].size();++i)
        {
            if(vis[p[ind_][i].second]==0)
            {
                s.push(pii(dis[ind_]+p[ind_][i].first,p[ind_][i].second));
                vis[p[ind_][i].second]=1;
                dis[p[ind_][i].second]=dis[ind_]+p[ind_][i].first;
            }
            else if(vis[p[ind_][i].second]==1 && dis[p[ind_][i].second]>(dis[ind_]+p[ind_][i].first))
            {
              //  s.erase(ii(dis[p[ind_][i].second],p[ind_][i].second));
				s.push(pii(dis[ind_]+p[ind_][i].first,p[ind_][i].second));
				dis[p[ind_][i].second]=dis[ind_]+p[ind_][i].first;
            }
        }
       /* if(ind_==des)
            break;*/
    }
}
int main()
{
    ll n,m,k,i,j,e;
    i(n);i(m);i(k);
    mz(sp);
    f(i,0,k-1)  i(a[i]),sp[a[i]]=1;
    while(m--)
    {
        i(i);i(j);i(e);
        p[i].pb(mp(e,j));
        p[j].pb(mp(e,i));
    }
   // ll min_=INT_MAX,ans,source,des;
   max_=INT_MAX;
    for(i=0;i<k;++i)
    {
       /* for(j=i+1;j<k;++j)
        {
            source=a[i];
            des=a[j];
            fun(source,des);
            if(dis[des]==-1)
                ans=INT_MAX;
            else
                ans=dis[des];
            min_=min(ans,min_);
        }*/
        fun(a[i]);
    }
    o(max_);
    return 0;
}
