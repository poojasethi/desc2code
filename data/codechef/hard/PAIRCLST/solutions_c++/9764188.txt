//Why to fear things we are yet to see!!
//May the Lord be with us
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
typedef pair<int,int> pii;
typedef long long ll;
typedef vector<int> vi;
vector<pii> G[100005];
ll ans=1e9+9;
set<int> s;
int visited[100005]={0};
ll dis[100005];
void dks(int st){
 priority_queue<pii,vector<pii>,greater<pii> > Q;
 Q.push(mp(0,st));
 while(!Q.empty()){
   int a = Q.top().first;//wt
   int b = Q.top().second;//node
   if(ans < a){
    return;}
   visited[b]=1;
   Q.pop();
   if( b!=st && s.find(b)!=s.end()){
    if(ans > a)
     ans=a;
    return;}
   else{
          
          for(int i=0;i<G[b].size();i++)
           {
              
              if(visited[G[b][i].second]==0){
                if(dis[G[b][i].second]>a+G[b][i].first){
                   dis[G[b][i].second]=a+G[b][i].first;
                   Q.push(mp(dis[G[b][i].second],G[b][i].second));
                  }
                }
           }
        }
     }
  }
     
int main(){
	std::ios::sync_with_stdio(false);
 int n,m,k;
 cin >> n >> m >>k;
 vi sp;
 ll a,b,c,x;
 for(int i=0;i<k;i++){
  cin >> x;
  sp.pb(x);
  s.insert(x);
 }
 for(int i=0;i<m;i++){
  cin >> a >> b >> c;
  G[a].pb(mp(c,b));
  G[b].pb(mp(c,a));
 }
 for(int i=0;i<sp.size();i++){
  memset(visited,0,sizeof(visited));
  fill(dis,dis+n,1000000004);
  dks(sp[i]);}
 cout << ans << endl;
 return 0;
}

