#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const int maxN=1010,maxM=15,oo=1000000000;
int perm[maxM+9];
int cnt[maxM+9][maxM+9];
int dp[1<<maxM],from[1<<maxM];
int main() {
	int T;
	for(scanf("%d",&T);T;T--){
	int n,m;
	scanf("%d%d",&n,&m);
	memset(cnt,0,sizeof(cnt));
	for(int i=1;i<=n;i++) {
		for(int j=1;j<=m;j++)
		    scanf("%d",perm+j);
		    
		for(int j=1;j<=m;j++)
		for(int k=j+1;k<=m;k++)
		    cnt[perm[j]][perm[k]]++;
	}
	
	fill(dp,dp+(1<<m),oo);
	dp[0]=0;
	for(int set=0;set<(1<<m);set++)
	    if(dp[set]<oo) {
			//printf("dp[%d]=%d from %d\n",set,dp[set],from[set]);
			for(int add=1;add<=m;add++)
			    if(!(set&(1<<(add-1)))) {
					int set2=set+(1<<(add-1));
					int ret=dp[set];
					for(int i=1;i<=m;i++)
						if(set&(1<<(i-1)))
						    ret+=cnt[add][i];

					//printf("%d=>dp[%d]\n",ret,set2);
					if(ret<dp[set2]||(ret==dp[set2]&&add<from[set2])) {
						dp[set2]=ret;
						from[set2]=add;
					}
				}}

    for(int i=m,set=(1<<m)-1;i;i--,set-=1<<(from[set]-1))
        perm[i]=from[set];
	printf("%d:",dp[(1<<m)-1]);
	for(int i=1;i<=m;i++)
	    printf(" %d",perm[i]);
	puts("");}
	scanf("%*s");
}
