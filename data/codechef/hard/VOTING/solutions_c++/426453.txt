/* Author : Akshay */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <stdlib.h>
#include <stdio.h>
#define M 15
using namespace std;
#define sqr(x) x*x
typedef pair<int,int> ii;
int dp[1<<M],f[1<<M],inp[1001][M+1],n,m,tc,i,j,dist[M+1][M+1],k,ret,O[M+1];
void input(void)
{
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++) for(j=0;j<m;j++) {scanf("%d",&inp[i][j]);inp[i][j]--;}
}
void precompute(void)
{
	//dist[i][j] indicates how much time i has been rated than j
	memset(dist,0,sizeof(dist));
	for(i=0;i<n;i++)for(j=0;j<m;j++)for(k=j+1;k<m;k++) (dist[inp[i][k]][inp[i][j]])++;
}
void solve(void)
{
	memset(f,-1,sizeof(f)),memset(dp,-1,sizeof(dp)),dp[0]=0;//No one choose
	for(i=0;i<(1<<m);i++)
	{
		for(j=0;j<m;j++)
		{
			if((i&(1<<j))!=0)
			{
				ret=0;
				for(k=0;k<m;k++)
				{
					if((i&(1<<k))==0)
						ret+=dist[j][k];
				}
				ret+=dp[i^(1<<j)]; // Ignoring the jth fellow
				if( dp[i]==-1 )
				{
					dp[i]=ret;
					f[i]=j;
				}
				else if(ret < dp[i])
				{
					dp[i]=ret;
					f[i]=j;
				}
			}
		}
	}
}
void printResult()
{
	printf("%d: ",dp[(1<<m)-1]);
	int mask=(1<<m)-1;
	for(i=0;i<m;i++)
	{
		O[i]=f[mask]+1;
		mask=(mask^(1<<f[mask]));
	}
	for(i=m-1;i>=0;i--)
		printf("%d ",O[i]);
	printf("\n");
}
int main()
{
	scanf("%d",&tc);
	while(tc--)
	{
		input();
		precompute();
		solve();
		printResult();
	}
	return 0;
}



