#include <iostream>
#include <string.h>
#include <cstdio>

using namespace std;
int rank[1000][15];
int memo[1<<15];
int chosen[1<<15];
int N,M;
int counts[15][15];
int solve(int state, int upto) {
    if (memo[state]!=-1) return memo[state];
    if (upto==M) return memo[state]=0;
    for (int i=0; i<M; i++) if ((state&(1<<i))==0) {
        int bad = 0;
        for (int j=0; j<M; j++) if (state&(1<<j)) {
            bad += counts[j][i];
        }
        int here = bad + solve(state|(1<<i),upto+1);
        if (memo[state]==-1 || memo[state]>here) {
            memo[state]=here;
            chosen[state]=i;
        }
    }
    return memo[state];
}
int ret[15];
int main() {
    int T; scanf("%d",&T); while (T--) {
        memset(memo,-1,sizeof(memo));
        memset(counts,0,sizeof(counts));
        scanf("%d %d",&N,&M);
        for (int i=0; i<N; i++) {
            for (int j=0; j<M; j++) {
                scanf("%d",&rank[i][j]);rank[i][j]--;
                for (int k=0; k<j; k++) counts[rank[i][k]][rank[i][j]]++;
            }
        }
        
        
        printf("%d:",solve(0,0));
        int a = 0, b = 0;
        while (b<M) {
            int next = chosen[a];
            ret[M-1-b]=next;
            a|=1<<next;
            b++;
        }
        for (int i=0; i<M; i++) printf(" %d",ret[i]+1);
        printf("\n");
    }
}
