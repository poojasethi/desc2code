#include<algorithm>
#include<iostream>
#include<string>
#include<map>
#include<queue>
#include<sstream>
#include<vector>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cstdio>
#include<stack>
using namespace std;
#define MAX 300000
int cnt[MAX][3], aux[3];
int debe[MAX];
int n;
int S[3] = {1,2,0};
 
inline void update(int node, int from, int to, int L, int R){
		if(from != to){
		 	debe[L] += debe[node];
		 	debe[R] += debe[node];
		 	if(debe[L] >= 3) debe[L] -= 3;
		 	if(debe[R] >= 3) debe[R] -= 3;
		}
		int x = debe[node];
		aux[x] = cnt[node][0];
		x = S[x];
		aux[x] = cnt[node][1];
		x = S[x];
		aux[x] = cnt[node][2];
		cnt[node][0] = aux[0]; cnt[node][1] = aux[1]; cnt[node][2] = aux[2];
		debe[node] = 0;
}
 
void add(int from, int to, int node = 0, int le = 0, int ri = n - 1){
	int L = node * 2 + 1, R = node * 2 + 2;
	if(debe[node]) update(node, le, ri, L, R);	
	if(from > to) return;
 
	if(from == le && to == ri){
		debe[node] = S[debe[node]];
		update(node, from, to, L, R);	
	}else{	
		int mid = (le + ri) / 2;
		add(from, min(to, mid), L, le, mid);
		add(max(from, mid + 1), to, R, mid + 1, ri);
		cnt[node][0] = cnt[L][0] + cnt[R][0];
		cnt[node][1] = cnt[L][1] + cnt[R][1];
		cnt[node][2] = cnt[L][2] + cnt[R][2];
	}
}
 
int cuenta(int from, int to, int node = 0, int le = 0, int ri = n - 1){
	if(from > to) return 0;
	int L = node * 2 + 1, R = node * 2 + 2;
	if(debe[node]) update(node, le, ri, L, R);
	if(from == le && to == ri) return cnt[node][0];
	else{
		int mid = (le + ri) / 2;
		return cuenta(from, min(to, mid), L, le, mid) + 
		       cuenta(max(from, mid + 1), to, R, mid + 1, ri);
	}
}	
 
void create(int node = 0, int le = 0, int ri = n - 1){
	if(le == ri) cnt[node][0] = 1;
	else{
		int mid = (le + ri) / 2, L = node * 2 + 1, R = node * 2 + 2;
		create(L, le, mid);
		create(R, mid + 1, ri);
		cnt[node][0] = cnt[L][0] + cnt[R][0];
	}
}
 
int main(){
	int q; scanf("%d %d", &n, &q);
	memset(cnt, 0, sizeof cnt);
	create();
	memset(debe, 0, sizeof debe);
	
	while(q--){
		int o, a, b;
		scanf("%d %d %d", &o, &a, &b);
		if(o == 0){
			add(a, b);
		}else{
			printf("%d\n", cuenta(a, b));
 
		}
	}	
} 
