//Coder: Balajiganapathi

#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;

// Basic macros

#define st          first
#define se          second
#define all(x)      (x).begin(), (x).end()
#define ini(a, v)   memset(a, v, sizeof(a))
#define re(i,s,n)  	for(int i=s;i<(n);++i)
#define fr(i,n)     re(i,0,n)
#define tr(i,x)     for(typeof(x.begin()) i=x.begin();i!=x.end();++i)
#define pu          push_back
#define mp          make_pair
#define sz(x)       (int)(x.size())
#define inf			2000000009

// I/O shortcuts
#define ssi(x) scanf("%d", &x)
#define ssa(n, x) {ssi(n); fr(i, n) ssi(x[i]);}

const int mx = 314159;
const int mx_time = 31415926;
int R, N;
int inc[mx], tme[mx], dur[mx], room[mx];
int main() {
	int t;
	ssi(t);
	while(t--) {
		ssi(R); ssi(N);
		fr(i, N) {
			ssi(tme[i]); ssi(inc[i]);
		}
		fr(i, min(R, N)) {
			room[i] = i - inc[i];
			dur[i] = mx_time;
		}
		
		int last = R - 1;
		re(i, R, N) {
			if(inc[i] == R) {
				room[i] = 0;
			} else {
				dur[last] = tme[i] - tme[last];
				room[i] = R - 1 - inc[i];
				last = i;
			}
			dur[i] = mx_time;
			
		}
		
		fr(i, N) printf("%d %d\n", room[i], dur[i]);
	}

	return 0;
}
