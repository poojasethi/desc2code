#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
#include<assert.h>
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

int main(){
  int T, R, N;
  static int tm[333333], inc[333333];
  static int res1[333333], res2[333333];
  int Rsum = 0, Nsum = 0;
  
  int i, j, k, last;

  assert( scanf("%d",&T)==1 );
  assert( 1<=T && T<=314159 );
  while(T--){
    assert( scanf("%d%d",&R,&N)==2 );
    assert( 1<=R && R<=314159 );
    assert( 1<=N && N<=314159 );
    Rsum += R; Nsum += N;
    assert(Rsum <= 314159);
    assert(Nsum <= 314159);

    rep(i,N) assert( scanf("%d%d",tm+i,inc+i)==2 );
    assert( 0<=tm[0] );
    REP(i,1,N) assert( tm[i-1] < tm[i] );
    assert( tm[N-1] < 31415926 );
    rep(i,N) assert(0<=inc[i] && inc[i]<=R);
    rep(i,N) assert( inc[i] <= i ); /* it is needed that answers exist */

    rep(i,R){ /* at first, occupy the rooms */
      res1[i] = i-inc[i];
      res2[i] = 31415926;
    }
    last = R-1; /* the current guest for the last room */
    REP(i,R,N){
      if(inc[i]==R){ /* leave */
        res1[i] = 0;
        res2[i] = 31415926;
      } else { /* go the last room */
        res2[last] = tm[i] - tm[last];
        res1[i] = (R-1) - inc[i];
        res2[i] = 31415926;
        last = i;
      }
    }

    rep(i,N) printf("%d %d\n",res1[i],res2[i]);
  }
  
  return 0;
}
