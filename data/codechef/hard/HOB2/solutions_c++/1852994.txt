#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);




#define LIM 314159

int vis_time[LIM+10];
int pref_room[LIM+10];
int stay_time[LIM+10];
int no_of_cheks[LIM+10];
int done[LIM+10];
int id[LIM+10];

//pref_room
//stay time

int N;
void ini(int N)
{
    int i;
    for(i=0;i<N;i++) done[i]=0;
}






int main()
{
    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);

    int i,j,k,T,R,I;
    scanf("%d",&T);


    while(T--)
    {
        scanf("%d %d",&R,&N);

        ini(N);





        for(i=0,I=0;i<N;i++)
        {


            scanf("%d %d",&vis_time[i],&no_of_cheks[i]);


            if(no_of_cheks[i]==R)
            {
                stay_time[i]=1;
                pref_room[i]=0;
                done[i]=1;
                continue;
            }


            if(I>=R)
            {
                stay_time[ id[I-R] ]=vis_time[i]-vis_time[ id[I-R] ];
                done[ id[I-R] ]=1;
            }
            pref_room[i]=(((I-no_of_cheks[i])%R)+R)%R;


            id[I++]=i;
            //I%=R;
            //cout<<"asdf";
        }


      //  asdf




        for(i=0;i<N;i++)
        {
            if(!done[i])
                stay_time[i]=31415926;
        }


        for(i=0;i<N;i++)
        {
            printf("%d %d\n",pref_room[i],stay_time[i]);
        }



      //  cout<<endl;



    }

    return 0;
}
