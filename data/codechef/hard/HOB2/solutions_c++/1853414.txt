#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<stdlib.h>
#include<cmath>


#define FO(i,s,e,p) for(int i=(s);i<int(e);i+=p)
#define FOD(i,s,e,p) for(int i=(s);i>int(e);i-=p)


#define FOR(i,s,e) FO(i,s,e,1)
#define FORE(i,s,e) FOR(i,s,e+1)
#define FORD(i,s,e) FOD(i,s,e,1)
#define FORDE(i,s,e) FORD(i,s,e-1)

#define ALL(i,s) for(__typeof((s).begin()) i=(s).begin();i!=(s).end();i++)

#define MEM(tab,fill) memset(tab,fill,sizeof(tab))

#include<iostream>
#include<set>
#include<vector>
#include<string>
#include<sstream>
#include<stack>
#include<queue>
#include<algorithm>
#include<utility>
#include<bitset>
#include<map>
#include<cassert>

using namespace std;
#define ll  long long
#define inf ((1LL<<30)-1)
#define deb(a) cout<<endl<<#a<<" "<<a<<endl
#define pb push_back
#define mp make_pair

#define llu unsigned long long
#define PI pair<int,int>

#define fi first
#define se second

int anstime[414159],ansrom[414159];
int intime[414159];
stack<pair<int,int> > ss; //room AND id
void solve()
{
    int R,n;scanf("%d%d",&R,&n);
    FOR(i,0,n) anstime[i]=31415926,ansrom[i]=0;
    while(ss.size()) ss.pop();

    FOR(i,0,n){
        int bad;scanf("%d%d",intime+i,&bad);
        assert(bad<=ss.size());
      //  deb(ss.size());
        if(bad!=R && ss.size()==R){
            int id=ss.top().se;ss.pop();
            anstime[id]=intime[i]-intime[id];
        }
        int last=-1;
        if(ss.size()) last=ss.top().fi;
        last=last-bad+1;
        ansrom[i]=last;
        if(R!=bad) ss.push(mp( min(i,R-1) ,i));
    }

    FOR(i,0,n) printf("%d %d\n",ansrom[i],anstime[i]);



}



int main()
{
    //freopen("C:\\a","r",stdin);

    int t;cin>>t;
    while(t--) solve();




    return 0;
}

