#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <deque>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define FOR(i,a,b)				for (i=a;i<b;i++)
#define s(n)					scanf("%d",&n)
#define p(n)					printf("%d\n",n)
#define pl(n)					printf("%lld\n",n)
#define sd(n)					int n;scanf("%d",&n)
#define sl(n)					scanf("%lld",&n)
#define sld(n)					long long int n;scanf("%lld",&n)
#define pb(n)                                   push_back(n)
#define all(c)                                  (c).begin(),(c).end()
#define tr(container,it)                        for (typeof(container.begin()) it=container.begin();it!=container.end();it++ )
#define sz(a)                                   int((a).size())
#define clr(a)                                  memset(a,0,sizeof(a))

typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vstr;

int main()
{
    sd(t);
    int i;
    FOR(i,0,t)
    {
        sd(r);sd(n);
        vi time(n),incon(n),stay_time(n),room(n);
        int j;
        FOR(j,0,n)
        {
            s(time[j]);s(incon[j]);
        }
        FOR(j,0,min(r,n))
        {
            room[j]=j-incon[j];
            stay_time[j]=31415926;
        }
        int prev=r-1;   //the previous occupant of the (r-1)th room
        FOR(j,j,n)
        {
            if (incon[j]<r)
            {
                stay_time[prev]=time[j]-time[prev];
                room[j]=r-1-incon[j];
                stay_time[j]=31415926;
                prev=j;
            }
            else        //incon[j]=r
            {
                room[j]=0;      //any value other than r-1; can r-1 also be used?
                stay_time[j]=1; //any arbitrary positive value
            }
        }
        FOR(j,0,n) printf("%d %d\n",room[j],stay_time[j]);
    }
}
