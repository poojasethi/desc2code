#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#include<limits.h>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);



#define SS 319

//typedef long long LL;

int n;
int a[100010];
int l[100010];


int qn;
int q1[100010];
int q2[100010];
int q3[100010];
char qans[100010];
int dn[100010];


int seg[321][321];





void make(int f,int t)
{
    int i,j;
    int T=t+1-f;
    for(i=0;i<T;i++)
    {
        for(j=1;j<=SS;j++)
        {
            seg[i][j]=l[i+f];
            if( (i-j)>=0)
                seg[i][j]+=seg[i-j][j];
        }
    }
}












int main()
{
    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);


    int i,j,J1,J2,J3,x,y,z,lo,hi,mid,y0;
    char temp[20];
    scanf("%d",&n);

    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
        sprintf(temp,"%d",a[i]);
        l[i]=strlen( temp );
    }






    scanf("%d",&qn);


    for(i=0;i<qn;i++)
    {
        scanf("%d %d %d",&q1[i],&q2[i],&q3[i]);
		q1[i]--;
    }



    int T;

    for(i=0;i<n;i+= (SS+1) )
    {
        T=MIN(i+SS,n-1);
        make(i, T );

        for(j=0;j<qn;j++)
        {
            J1=q1[j];
            if(dn[j] || J1>T ) continue;

            J2=q2[j];



            if(J2>SS)
            {
                y=l[ J1 ];
                if( y < q3[j] )
                {
                    q3[j]-=y;
                    q1[j]+=J2;
                }
                else
                {
                    dn[j]=1;
                    sprintf(temp,"%d",a[J1]);
                    qans[j]=temp[q3[j]-1];
                }
                continue;
            }

			




            //q1[j]+x*q2[j]==T

            z=J1-i;
            x=(T-J1)/J2;


			y0=0;

			if( (z-J2)>=0) y0=seg[ z-J2 ][  J2 ];
            y=seg[ z+x*J2 ][  J2 ];

            if( (y-y0) < q3[j] )
            {
                q3[j]-=(y-y0);
                q1[j]+=(x+1)*J2;
                continue;
            }
            else
            {
                lo=0;
                hi=x;
                J3=q3[j];


                while(lo<=hi)
                {
                    mid=(lo+hi)/2;
                    if( (seg[ z+mid*J2 ][  J2 ]-y0 )< J3 ) lo=mid+1;
                    else hi=mid-1;
                }


				x=( (seg[ z+lo*J2 ][  J2 ]-y0 )-J3);


				

				sprintf(temp,"%d",a[J1+lo*J2]);
				qans[j]=temp[strlen(temp)-1-x];
                dn[j]=1;
            }
        }
    }







    for(i=0;i<qn;i++)
    {
        if(!dn[i])
        {
            printf("So sad\n");
            continue;
        }
        printf("%c\n",qans[i]);
    }


    return 0;
}
