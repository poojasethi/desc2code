#include <stdio.h>
#include <vector>
using namespace std;

const int N=100000;
int a[N];
int size[N];
vector<int> num[N];
int dp[317][N];

int main(int argc, char* argv[])
{
	int h,i,j,n,m,l,v,k;
	scanf("%d", &n);
	for(i=0;i<n;i++)
	{
		scanf("%d", &a[i]);
	}
	for(i=0;i<n;i++)
	{
		int t=a[i];
		int b[10]={0};
		int idx=0;
		int q=0;
		while(t)
		{
			q=t/10;
			b[idx++]=t-10*q;
			t=q;
		}
		if(a[i]==0)
		{
			b[idx++]=0;
		}
		size[i]=idx;
		for(j=0;j<idx;j++)
		{
			num[i].push_back(b[idx-j-1]);
		}
	}
	for(h=1;h<=316;h++)
	{
		for(i=0;i<h;i++)
		{
			dp[h][i]=size[i];
			for(j=i+h;j<n;j=j+h)
			{
				dp[h][j]=dp[h][j-h]+size[j];
			}
		}
	}
	scanf("%d", &m);
	for(h=0;h<m;h++)
	{
		scanf("%d %d %d",&l,&v,&k);
		if(v>316)
		{
			int ans=-1;
			int s=0;
			for(i=0;l+v*i-1<n;i++)
			{
				int idx=l+v*i-1;
				s+=size[idx];
				if(s>=k)
				{
					ans=num[idx][k-s+size[idx]-1];
					break;
				}
			}
			if(ans>=0)
			{
				printf("%d\n", ans);
			}
			else
			{
				printf("So sad\n");
			}
		}
		else
		{
			int high=(n-l)/v+(l-1)/v;
			int low=(l-1)/v;
			int base=0;
			int idx=0;
			int r=(l-1)%v;
			if(l-v>0)
			{
				base=dp[v][l-v-1];
			}
			while(low<high)
			{
				int mid=(high+low)>>1;
				if(k+base<=dp[v][mid*v+r])
				{
					high=mid;
				}
				else
				{
					low=mid+1;
				}
			}
			idx=(k+base>dp[v][low*v+r]) ? -1 : low;
			if(idx==-1)
			{
				printf("So sad\n");
			}
			else
			{
				int ans=0;
				int pos=idx*v+r;
				if(idx>0)
				{
					int p=k-dp[v][pos-v]+base-1;
					ans=num[low*v+r][p];
				}
				else
				{
					ans=num[low*v+r][k-1];
				}
				printf("%d\n", ans);
			}
		}
		
	}
	return 0;
}

