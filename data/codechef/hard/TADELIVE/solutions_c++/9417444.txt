#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
using namespace std;
typedef long long int LL;
int A[100010] , B[100010] , flag[100010];
std::vector< pair<int , int > > v;
LL ans = 0;
int main(){



// memset(flag , 0 , sizeof(flag));
int N , X , Y;
scanf("%d %d %d",&N,&X,&Y);

for(int i=0;i<N+4;i++)
	flag[i] = 0;

for(int i=1;i<=N;i++){
	scanf("%d",&A[i]);
}


for(int i=1;i<=N;i++){
	scanf("%d",&B[i]);
}


for(int i=1;i<=N;i++)
{
	v.push_back(make_pair(-1*abs(A[i] - B[i]) , i));
}

sort(v.begin() , v.end());
pair<int , int >  temp;

for(int i=0;i<N;i++)
{
	temp = v[i];
	// cout << v[i].first << "   ###   " << v[i].second << endl;
	if(flag[temp.second] == 0)
	{
		if(X==0 && Y!=0)
		{
			ans = ans + B[temp.second];
			Y--;
		}
		else if(X!=0 && Y==0)
		{
			ans = ans + A[temp.second];
			X--;
		}

		else if(X!=0 && Y!=0)
		{
			if(A[temp.second]>B[temp.second])
			{
				ans = ans + A[temp.second];
				X--;
			}
			else
			{
				ans = ans + B[temp.second];
				Y--;
			}
		}
		flag[temp.second] = 1;
	}
}

cout << ans << endl;
return 0;
}








