#include<bits/stdc++.h>

using namespace std;

#define in(a,x,y) (a>=x && a<=y)
#define out(a,x,y) (!in(a,x,y))
#define sz(a) ((int)a.size())
#define repv(i,a) for(int i=0;i<sz(a);i++)
#define revv(i,a) for(int i=sz(a)-1;i>=0;i--)
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define rev(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define pb push_back

#define AND(a,b) ((a) & (b))
#define OR(a,b) ((a)|(b))
#define XOR(a,b) ((a) ^ (b))
#define xx first
#define yy second
#define mp make_pair
#define sqr(x) ((x)*(x))
#define sqrt(x) sqrt(1.0*(x))

#define LB(a,x) (lower_bound(all(a),x)-a.begin()) //  first element in the range [first,last) which does not compare less than val.
#define UB(a,x) (upper_bound(all(a),x)-a.begin()) //  first element in the range [first,last) which compares greater than val.
#define forit(it, s) for(__typeof(s.begin()) it = s.begin(); it != s.end(); it++)
#define left nokol_left
#define right nokol_right
#define countbit(x) __builtin_popcountll((ll)x)
#define PQ priority_queue
#define FAST ios_base::sync_with_stdio(0);cin.tie(0);
#define Unique(store) store.resize(unique(store.begin(),store.end())-store.begin())
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

typedef long long ll;
typedef unsigned int uint;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef pair<long long,long long> pll;
typedef vector<int> vi;
typedef vector<long long> vll;

template<class T>T __sqr(const T x){return x*x;}
template< class T, class X > inline T __pow(T a,X y) {T z=1; rep(i,1,y){z*=a;} return z; }
template< class T > inline T gcd(T a,T b) {a=abs(a);b=abs(b); if(!b) return a; return __gcd(b,a%b);}
template< class T > inline T lcm(T a,T b) {a=abs(a);b=abs(b); return (a/__gcd(a,b))*b;}
inline bool ispow2(int x){return (x!=0 && (x&(x-1))==0);}
template<class T>void UpdateMin(T &x,T y){  if(y<x){x=y;}}
template<class T>void UpdateMax(T &x,T y){if(x<y){x=y;}}
template<class T,class X, class Y > inline T bigmod(T n,X m,Y mod){ull ret=1, a = n%mod ; while(m){ if(m&1)ret=(ret*a)%mod; m>>=1; a=(a*a)%mod; }ret%=mod;return (T)ret;}
template<class T, class Y > inline T modinv(T n,Y mod) {return bigmod(n,mod-2,mod);}

template<class T,class X> int getbit(T s,X i) { return (s >> i) & 1; }
template<class T,class X> T onbit(T s, X i) { return s | (T(1) << i); }
template<class T,class X> T offbit(T s, X i) { return s & (~(T(1) << i)); }
template<class T> inline void read(T &n){char c;for (c = getchar(); !(c >= '0' && c <= '9'); c = getchar()); n = c - '0';for (c = getchar(); c >= '0' && c <= '9'; c = getchar()) n = n * 10 + c - '0';}

void extended_euclid(ll a,ll b,ll &x,ll &y){ if(!b){ x = 1 , y = 0  ;  return ;} ll xx,yy; extended_euclid(b,a%b,xx,yy); x = yy; y = xx - (a/b)*yy; }
pair<ll, pair<ll, ll> > extendedEuclid(ll a, ll b) { ll x = 1, y = 0; ll xLast = 0, yLast = 1; ll q, r, m, n; while(a != 0) {q = b / a; r = b % a; m = xLast - q * x; n = yLast - q * y; xLast = x, yLast = y; x = m, y = n; b = a, a = r; } return make_pair(b, make_pair(xLast, yLast)); }

const ll mod[]  ={0,1000000007,1000000009,1000000021,1000000033,1000000097,1000000093,1000000097,1000000103};
const ll base[] ={0,1000003,1000033,1000037,1000039,1000081,1000099,1000117,1000121};

#define pi acos(-1.0)
#define eps  1e-12
#define MX   (lmt+20)
#define inf  800000000000000000LL
#define MOD  100000007LL
//---------->0123456789123465789
#define lmt  200000

typedef pair<long long , long long > point;

//typedef pair<LL, LL> point;

ll cw(const point &a, const point &b, const point &c) {
    return (b.first - a.first) * (c.second - a.second) - (b.second - a.second) * (c.first - a.first);
}

vector<point> convexHull(vector<point> p) {
    int n = p.size();
    if (n <= 1)
        return p;
    sort(p.begin(), p.end());
    int cnt = 0;
    vector<point> q(n * 2);
    for (int i = 0; i < n; q[cnt++] = p[i++])
        for (; cnt >= 2 && cw(q[cnt - 2], q[cnt - 1], p[i]) >= 0; --cnt)
            ;
    for (int i = n - 2, t = cnt; i >= 0; q[cnt++] = p[i--])
        for (; cnt > t && cw(q[cnt - 2], q[cnt - 1], p[i]) >= 0; --cnt)
            ;
    q.resize(cnt - 1 - (q[0] == q[1]));
    return q;
}

ll area(point &a,point &b,point &c){

    return abs( a.xx*(b.yy - c.yy) + a.yy*(c.xx - b.xx) + 1*(b.xx*c.yy - b.yy*c.xx) );
}

inline ll dist(point &a,point &b){
    return abs( ( a.xx-b.xx ) * ( a.xx-b.xx ) + ( a.yy - b.yy )*( a.yy - b.yy ));
}

int main()
{
    ll ts , n;
    scanf("%lld",&ts);
    while(ts--){
        scanf("%lld",&n);
        vector<point>p;
        ll x, y;
        rep(i,1,n) {
            scanf("%lld%lld",&x,&y);
            p.pb( mp(x, y) );
        }
        vector<point> hull = convexHull(p);
//        if(hull.size()==n) puts("-1");
//        else{
            set< point > s;
            repv(i,hull) s.insert( hull[i] );


            vector<point>tot;
            repv(i,p) if( s.find( p[i] )==s.end() ) tot.pb( p[i] );
            vector<point> gt = convexHull(tot);

            if(gt.size()==0){
                cout<<-1<<endl;
                continue;
            }

            ll mn = abs( cw(hull[0],hull[1],gt[0]) ) , id = 0;
            repv(i,gt){
                ll d = abs( cw(hull[0],hull[1],gt[i]) ) ;
                if(d < mn){
                    mn = d;
                    id = i;
                }
            }

            ll res = mn;
            for(int i = 1; i < hull.size(); i++){
                ll v = abs(cw(hull[i], hull[(i+1)%hull.size()], gt[id]));
                while(1){
                    id = (id + 1) % gt.size();
                    if(abs(cw(hull[i], hull[(i+1)%hull.size()], gt[id])) < v){
                        v = abs(cw(hull[i], hull[(i+1)%hull.size()], gt[id]));
                    } else {
                        id = (id - 1 + gt.size()) % gt.size();
                        break;
                    }
                }

                if(v < res) res = v;
            }
            ll ans = 0;
            repv(i,hull){
                if(i<=1) continue;
                ans += area(hull[0],hull[i-1],hull[i]);
            }
            ans = abs(ans);
            ans -= res;
            printf("%lld\n",ans);
//            cout<<ans<<endl;
//        }
    }

    return 0;
}
