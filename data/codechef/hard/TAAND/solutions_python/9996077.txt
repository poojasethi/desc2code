import math
def parseIntList(str):
 return [long(x) for x in str.split()]
def printBS(li):
 if len(li) is 0:
  print
 else:
  for i in range(len(li)-1):
   print li[i],
  print li[-1]
n=input()
li=[]
for i in range(n):
 li.append(str(bin(long(raw_input()))[2:]))
res=[set([]) for x in range(32)]
for i in range(n):
 for j in range(1,len(li[i])+1):
  if li[i][-j]=='1':
   res[j-1].add(i)
#print res
i=31
while i>0 and len(res[i])<2:
 i-=1
prev=res[i]
while i>=0:
 t=prev&res[i]#find intersection of res[i] & prev
 #print i,t
 if len(t)==2: 
  prev=t
  break
 elif len(t)>2:
  prev=t
 i-=1
if len(prev)<2:
 print 0
else:
 tmp=list(prev)
 print long(li[tmp[0]],2)&long(li[tmp[1]],2)
