/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/* 
 * File:   main.cpp
 * Author: aditya
 *
 * Created on 6 May, 2016, 11:55 AM
 */
#include<math.h>
#include<algorithm>
#include<stdio.h>
#include <iostream>

using namespace std;
int num[300005];
int arr[300005][35];
int sum[300005][35];

void digitize(int x, int num)
{
    int val = num;
    int k = 0;
    while(val!=0)
    {
        arr[x][k] = val%2;
        val = val/2;
        k++;
    }

}
void fillArr(int N)
{
    for(int i=0;i<N;i++)
    {
        digitize(i,num[i]); 
    }
}
void updateSum(int n,int m)
{
    for(int i = m;i<=n;i++)
    {
        for(int j=0;j<=33;j++)
         {
            sum[i][j] = sum[i][j] - sum[m-1][j];
            //cout<<sum[i][j];
         }
        //cout<<endl;
        
    }

}

int ans = 0;

int process(int max_col, int max_row , int min_row)
{
    //cout<<ans<<" "<<max_col<<" "<<max_row<<" "<<min_row<<endl;
    for(int i = max_row;i>=min_row;i--)
    {
        for(int j = max_col;j>=0;j--)
        {
            
            if(sum[i][j]>1)
            {
                //cout<<"sum["<<i<<"]["<<j<<"] = "<<sum[i][j]<<"#"<<endl;
                int k = i;
                while(arr[k][j] == 0)k--;
                //cout<<k<<"##"<<max_row<<endl;
                ans += pow(2,j);
                max_row = k;
                max_col = j-1;
                if(min_row != (k-sum[i][j]+1) )
                {
                min_row = k-sum[i][j]+1;
                updateSum(max_row,min_row);
                }
               return process(max_col,max_row,min_row);
               
            }
            
        }
        
    }
    return 0;
}



int main(int argc, char** argv) {

    int N;
  
    cin>>N;
    for(int i=0;i<N;i++){
        cin>>num[i];
    }
    sort(num,num+N);
    fillArr(N);
    
    
    for(int j=0;j<33;j++){
        for(int i=0;i<N;i++)
        {
            if(arr[i][j] == 1)
            {
                if(i>0)
                sum[i][j] = sum[i-1][j]+1;
                else
                sum[i][j] = 1;
            }
            else sum[i][j] = sum[i-1][j];
                
        }
    }
    
    process(33,N-1,0);
    cout<<ans<<endl;
    
    return 0;
}


