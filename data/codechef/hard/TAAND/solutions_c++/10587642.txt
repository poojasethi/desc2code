#include<bits/stdc++.h>
using namespace std;


#define MEM(a,N,b) fill(a,(a+N),b)
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define FORR(i,n) for(i=n-1;i>=0;--i)
#define elif else if
#define mp make_pair
#define pb push_back
#define ff first
#define ss second
#define all(x) (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define sd(x) scanf("%lf",&x);
#define sll(x) scanf("%lld",&x)
#define sl(x)  scanf("%ld",&x)
#define si(x)  scanf("%d",&x)
#define pi(x)  printf("%d",x)
#define pl(x)  printf("%ld",x)
#define pd(x)  printf("%lf",x)
#define pll(x) printf("%lld",x)
#define ps(x)  printf("%s",x)
#define nl     printf("\n")
#define sp     printf(" ")

typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef pair<int,long> PIL;
typedef pair<long,int> PLI;
typedef pair<int,long long> PILL;
typedef pair<long long,int> PLLI;
typedef pair<long,long> PLL;
typedef pair<long long,long long> PLLLL;
typedef pair<double,PIL> PDPIL;
typedef vector<int> VI;
typedef vector<long> VL;
typedef vector<double> VD;
typedef vector<long double> VLD;
typedef vector<long long> VLL;
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VLL> VVLL;
typedef vector<PII > VPII;
typedef vector<PLL > VPLL;
typedef vector<PIL> VPIL;
typedef vector<PLI > VPLI;
typedef vector<PILL> VPILL;
typedef vector<PLLI> VPLLI;
typedef vector<PLLLL> VPLLLL;
typedef vector<VPLL> VVPLL;
typedef vector<PDPIL> VPDPIL;

#define ll long long
#define l long
#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define ABS(x)   ((x) < 0 ? (-1)*(x) : (x))
#define Pi 3.1415926535897
#define MOD 1000000007
#define coolreshab ios::sync_with_stdio(false);//cin.tie(NULL)


/*freopen("test.txt","r",stdin);
  freopen("out.txt","w",stdout);
  cout << clock() / (double) CLOCKS_PER_SEC << "\n";*/

VVL lol(32);
VL temp;
main()
 { l N,i,ans,j,c;
   l arr;
   coolreshab;
   cin>>N;
   c=0;
   FORN(i,N)
   {
       cin>>arr;
       if(arr==0)
        {   ++c;
            continue;
        }
       FORN(j,30)
        {
            if(arr&(1<<j))
                lol[j].pb(arr);
        }

   }

   if(c==N ||(c==1&&N==2))
   {
       cout<<0<<endl;
       return 0;
   }

   int index=-1;
   FORR(i,30)
   {
       if(lol[i].size()>=2)
       {
           index=i;
           break;
       }
   }
   if(index==-1)
    ans=0;
   elif(lol[index].size()==2)
    ans=lol[index][0]&lol[index][1];

   else
   {
       ans=-1;
       for(i=index-1;i>=0;--i)
       {
           FORN(j,lol[index].size())
           {
               if(lol[index][j]&(1<<i))
                {
                   // cout<<pow2[i]<<endl;
                    temp.pb(lol[index][j]);
                }
           }

           if(temp.size()==2)
           {
               ans=temp[0]&temp[1];
               break;
           }
           else if(temp.size()>2)
           {
               lol[index].clear();
               lol[index]=temp;

           }
           temp.clear();

      }
  }
  if(ans==-1)
  {
      if(lol[index].size()>2)
        ans=lol[index][0];
      else
        ans=1<<index;
  }

    cout<<ans<<endl;

}
