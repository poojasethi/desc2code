// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define MAXN 100010
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
int a[MAXN];
int BIT[MAXN];
inline int find(int idx)
{
	int ret=0;
	for(;idx>0;idx-=(idx&(-idx)))
		ret+=BIT[idx];
	return ret;
}
inline void upd(int idx)
{
	for(;idx<MAXN;idx+=(idx&(-idx)))
		BIT[idx]++;
	return ;
}
int main()
{
	int n,q;scanf("%d%d",&n,&q);
	for(int i=0;i<n;i++)
		scanf("%d",&a[i]);
	int inv=0;
	for(int i=n-1;i>=0;i--)
	{
		inv=(inv+find(a[i]-1))&1;
		upd(a[i]);
	}
	for(int i=0;i<q;i++)
	{
		int l,r;scanf("%d%d",&l,&r);
		inv=(1-inv);
		printf("%d\n",inv);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



