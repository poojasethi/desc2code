#include<bits/stdc++.h>
using namespace std;

long long tree[1000000];
int a[1000000];
long long ans(int i,int rs,int re,int qs, int qe)
{
    if(qe<rs || re<qs)
        return 0;
    else if(qs<=rs&&re<=qe)
    {
        return tree[i];
    }
    else
    {
        long long mid=rs+(re-rs)/2;
        long long temp=ans(2*i+1,rs,mid,qs,qe)+ans(2*i+2,mid+1,re,qs,qe);
        return temp;
    }
}
inline void update(int i, int rs, int re, int qs, int qe)
{
    if(qe<rs || qs>re)
        return ;
    else if(qs<=rs && qe>=re)
        tree[i]++;
    else
    {
        long long mid=rs+(re-rs)/2;
        update(2*i+1,rs,mid,qs,qe);
        update(2*i+2,mid+1,re,qs,qe);
        tree[i]++;
    }
}
int main()
{
    int x,y,n,q;
    scanf("%d%d",&n,&q);
    int i;
    for( i=1;i<=n;i++)
        scanf("%d",&a[i]);
    long long inv;long long res=0;
    for(i=n;i>=1;i--)
    {
        inv=ans(0,1,n,1,a[i]);
        res+=inv;
        update(0,1,n,a[i],a[i]);
    }
    res=res%2;
    while(q--)
    {
        int j,m;scanf("%d%d",&j,&m);
        res=res^1;
        printf("%lld\n",res);
    }
    return 0;
}
