#include <cstdio>
#include <cstdlib>
#include <cstring>
using namespace std;
#define MOD 1000000007
typedef long long LL;
int f[1 << 16][30];

bool is_prime(int x) {
	if (x < 2) return false;
	if (x == 2) return true;
	for (int i = 2; i * i <= x; i++)
		if (x % i == 0) return false;
	return true;
}

int solve(int n, int m) {
	int prime[20];
	int tot = 0; 
	prime[0] = 0;
	for (int i = 2; i <= m; i++) 
		if (is_prime(i)) {
			tot++;
			if (i <= m / 2) prime[++prime[0]] = i;
		}
	memset(f,0,sizeof(f));
	f[0][0] = 1;
	for (int i = 2; i <= m; i++) {
		int t = 0;
		for (int j = 1; j <= prime[0]; j++)
			if (i % prime[j] == 0) t |= 1 << (j - 1);
		for (int j = (1 << prime[0]) - 1; j >= 0; j--) 
			if ((j & t) == 0) 
				for (int k = tot - 1; k >= 0; k--) 
					f[j | t][k + 1] = (f[j | t][k + 1] + f[j][k]) % MOD;
	}
	int ans = 1, fact = 1;
	for (int i = 1; i <= tot; i++) {
		int sum = 0;
		for (int j = 0; j <  1 << prime[0]; j++) 
			sum = (sum + f[j][i]) % MOD;
		fact = (LL) fact * (n - i + 1) % MOD;	 
		sum = (LL) sum * fact % MOD;
		ans = (ans + sum) % MOD;
	}
	return ans;
}

int main() {
	int test;
	scanf("%d", &test);
	for (int i = 1; i <= test; i++) {
		int n, m;
		scanf("%d%d", &n, &m);
		printf("%d\n", solve(n, m));
	}
	return 0;
}