#include <bits/stdc++.h>
using namespace std;

#define mod 1000000007

typedef long long ll;
const int N = 100005;

int prime[30] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};

int mask[102];
int dp[30][(1 << 15) + 10][102];

ll fa[N], pfa[N];

ll poww(ll a,ll b){
    ll ans = 1;
    while( b) {
        if(b % 2 == 1){
            ans = (ans * a) % mod;
        }
        a = (a * a) % mod;
        b /= 2;
    }
    return ans;
}

int go(int left,int b,int cur){
    if(left == 0) return 1;
    if(cur == 1 || (cur - 1) < left) return 0;
    if(dp[left][b][cur] != -1) return dp[left][b][cur];
    int ret = go(left,b,cur - 1) % mod;
    if((mask[cur] & b) == 0){
        ret = ( ret + go(left - 1, b ^ mask[cur], cur - 1) % mod ) % mod;
    }
    return dp[left][b][cur] = ret % mod;
}

int main(){

    fa[0] = 1;
    pfa[0] = 1;
    for(int i=1;i<=N;i++){
        fa[i] = (fa[i - 1] * i) % mod;
        pfa[i] = poww(fa[i] , mod - 2);
    }

    for(int i=1;i<=100;i++){
        mask[i] = 0;
        for(int j=0;j<15;j++){
            if(i % prime[j] == 0) mask[i] ^= (1 << j);
        }
    }

    int test; cin >> test;
    while(test--){
        int n,m; cin >> n >> m;
        memset(dp , -1, sizeof dp);
        int ans = 1;
        for(int i=1;i<=25;i++){
            if(i > n) break;
            int w = go(i,0,m);  //cout << w << '\n';
            ans += (ll)(((ll)(fa[n] * w) % mod ) * pfa[n - i]) % mod;
            ans %= mod;
        }

        cout << ans  << '\n';
    }
    return 0;
}