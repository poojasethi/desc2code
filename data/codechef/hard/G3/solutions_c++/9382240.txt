/*
 *************************
 Id  : Matrix.code
 Task: A Coin Game
 Date: 2016-02-11

 **************************
 */


#include <bits/stdc++.h>
using namespace std;

#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
template <typename T>
using ordered_set = tree<T, null_type, less<T>, rb_tree_tag, tree_order_statistics_node_update>;


/*------- Constants---- */

#define Long                    long long
#define ull                     unsigned long long
#define mod                     1000000007
#define MEMSET_INF              63
#define MEM_VAL                 1061109567
#define forn(i,n)               for( int i=0 ; i < n ; i++ )
#define mp(i,j)                 make_pair(i,j)
#define lop(i,a,b)              for( int i = (a) ; i < (b) ; i++)
#define pb(a)                   push_back((a))
#define SZ(a)                   (int) a.size()
#define all(x)                  (x).begin(),(x).end()
#define gc                      getchar_unlocked
#define PI                      acos(-1.0)
#define INF                     1<<29
#define EPS                     1e-9
#define Fr                      first
#define Sc                      second
#define Sz                      size()
#define lc                      ((n)<<1)
#define rc                      ((n)<<1|1)
#define db(x)                   cout << #x << " -> " << x << endl;
#define Di(n)                   int n;si(n)
#define Dii(a,b)                int a,b;si(a);si(b)
#define Diii(a,b,c)             int a,b,c;si(a);si(b);si(c)
#define Si(n)                   si(n)
#define Sii(a,b)                si(a);si(b)
#define Siii(a,b,c)             si(a);si(b);si(c)
#define min(a,b)                ((a)>(b) ? (b) : (a) )
#define max(a,b)                ((a)>(b) ? (a):(b))
/*---- short Cuts ------- */
#define ms(ara_name,value) memset(ara_name,value,sizeof(ara_name))
typedef pair<int, int> ii;
typedef vector<int > vi ;
typedef vector<Long> vl;
/*------ template functions ------ */
#ifndef getchar_unlocked
#define getchar_unlocked getchar
#endif
template<class T> inline void si(T &x){register int c = gc();x = 0;int neg = 0;for(;((c<48 | c>57) && c != '-');c = gc());
      if(c=='-') {neg=1;c=gc();}for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
Long bigmod(Long p,Long e,Long M){Long ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;} return ret;}
Long gcd(Long a,Long b){if(b==0)return a;return gcd(b,a%b);}
Long modinverse(Long a,Long M){return bigmod(a,M-2,M);}
void io(){freopen("/Users/MyMac/Desktop/in.txt","r",stdin);}

/*************************** END OF TEMPLATE ****************************/

const int N = 1e4+5;

int a[N];


int main()
{
      //freopen("in.txt","r",stdin);
      Di(t);
      while(t--) {
            Di(n);
            a[0] =0;
            for(int i = 1;i <= n; i ++ ) scanf("%d",&a[i]);
            sort(a,a+n+1);
            vector<int> pile;
            vector<pair<int,int> > info;
            for(int i= n ; i >= 1; i -=2 ) {
                  pile.push_back(a[i] - a[i-1] - 1);
                  info.push_back(mp(a[i],a[i-1]));
            }
            int ans= 0;
            for(auto a: pile)  ans ^= a;
            if(ans ) {
                  printf("Mary wins\n");
                  int k = 0;
                  for(int i = pile.size() - 1; i >= 0; i -- ) {
                        k = pile[i] - (ans ^ pile[i]);
                        if(k < 0) {
                              k = -k;
                              int left = info[i].second,right = info[i].first;

                              int prv = (i +1 < info.size() ? info[i+1].first : 0);
                              if(left - k > prv  ) {
                                    printf("Move %d to %d\n",left, left - k);
                                    break;
                              }
                        }
                        else {
                              int left = info[i].second,right = info[i].first;
                              if(right - left > k ) {
                                    printf("Move %d to %d\n", right, right - k);
                                    break;
                              }
                        }
                  }
            }else printf("Johnny wins\n");
            puts("");
      }
      return 0;

}
