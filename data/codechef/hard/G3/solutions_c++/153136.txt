#include<iostream>
using namespace std;


int main()
{
	int cases;
	scanf("%d", &cases);
	
	int *coins = (int *)malloc(10001 * sizeof(int));
	coins[0] = 0;
	int *spaces = (int *)malloc(5001 * sizeof(int));
	
	while(--cases >= 0)
	{
		int numCoins;
		scanf("%d", &numCoins);
		
		if(numCoins % 2 == 0)
		{
			for(int i = 1; i <= numCoins; i++)
				scanf("%d", &coins[i]);
		}
		else
		{
			numCoins++;
			coins[1] = 0;
			for(int i = 2; i <= numCoins; i++)
				scanf("%d", &coins[i]);
		}
		coins[numCoins + 1] = INT_MAX;
		
		int XOR = 0;
		for(int i = 1; 2 * i <= numCoins; i++)
		{
			spaces[i] = coins[2 * i] - coins[2 * i - 1] - 1;
			//cout << spaces[i] << " ";
			XOR ^= spaces[i];
		}
		//cout << endl;
		//cout << "XOR = " << XOR << endl;
		if(XOR != 0)
		{
			printf("Mary wins\n");
			
			for(int i = 1; 2 * i <= numCoins; i++)
			{
				int k = spaces[i] - (spaces[i] ^ XOR);
				//cout << k << endl;
				if(k < 0)
				{
					int possibleMove = coins[2 * i - 1] - coins[2 * i - 2] - 1;
					//cout << possibleMove << endl;
					if(possibleMove < (-1 * k))
						continue;
					else
					{
						printf("Move %d to %d\n", coins[2 * i - 1], coins[2 * i - 1] + k);
						break;
					}
				}
				else
				{
					int possibleMove = coins[2 * i] - coins[2 * i - 1] - 1;
					//cout << possibleMove << endl;
					if(possibleMove < k)
						continue;
					else
					{
						printf("Move %d to %d\n", coins[2 * i], coins[2 * i] - k);
						break;
					}
				}
			}
		}
		else
		{
			printf("Johnny wins\n");
		}
		printf("\n");
		
	}
	
	return 0;
}