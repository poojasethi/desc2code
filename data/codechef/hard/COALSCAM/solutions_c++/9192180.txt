// In the name of GOD
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair < int,pair <int,int> >
#define f first
#define s second
#define MOD 1000000007
#define MAXN 5050
#define MAX 20010
#define IOS ios_base::sync_with_stdio(0)
#define PI 3.1415926535897932384626
int dx[4]={-1,1,0,0};
int dy[4]={0,0,-1,1};
bool  isone(ll,int);
int count(ll);
ll exp(ll,ll,ll);
ll GCD(ll,ll);
int p[MAXN];
int s[MAXN];
vector< pair<int,pii> > a,b;
int find(int x)
{
	if(p[x]!=x)
		p[x]=find(p[x]);
	return p[x];
}
bool cmp(pair<int,pii> x,pair<int,pii> y)
{
	return (x.f>y.f)?1:((x.f==y.f)?(x.s.f<y.s.f):0);
}
int main()
{
	int tc;scanf("%d",&tc);
	while(tc--)
	{
		a.clear();
		b.clear();
		int n,m1,m2;scanf("%d%d%d",&n,&m1,&m2);
		for(int i=0;i<n;i++)
		{
			p[i]=i;
			s[i]=1;
		}
		for(int i=0;i<m1;i++)
		{
			int n1,n2,n3;scanf("%d%d%d",&n1,&n2,&n3);
			b.pb(mp(n3,mp(n1,n2)));
		}
		for(int i=0;i<m2;i++)
		{
			int n1,n2,n3;scanf("%d%d%d",&n1,&n2,&n3);
			a.pb(mp(n3,mp(n1,n2)));
		}
		sort(b.begin(),b.end());
		sort(a.begin(),a.end(),cmp);
		ll ans1=0,ans2=0;
		for(int i=0;i<m2;i++)
		{
			int px=find(a[i].s.f);
			int py=find(a[i].s.s);
			if(px!=py)
			{
				if(s[px]<s[py])
				{
					s[py]=s[px]+s[py];
					s[px]=0;
					p[px]=py;
				}
				else
				{
					s[px]=s[px]+s[py];
					s[py]=0;
					p[py]=px;
				}
				ans1+=a[i].f;
				ans2+=a[i].f;
			}
		}
		for(int i=0;i<m1;i++)
		{
			int px=find(b[i].s.f);
			int py=find(b[i].s.s);
			if(px!=py)
			{
				if(s[px]<s[py])
				{
					s[py]=s[px]+s[py];
					s[px]=0;
					p[px]=py;
				}
				else
				{
					s[px]=s[px]+s[py];
					s[py]=0;
					p[py]=px;
				}
				ans2+=b[i].f;
			}
		}
		for(int i=0;i<n;i++)
			p[i]=find(i);
		bool isok=1;
		for(int i=1;i<n;i++)
			if(p[i]!=p[i-1])
			{
				isok=0;
				break;
			}
		if(!isok)	printf("Impossible\n");
		else	printf("%lld %lld\n",ans1,ans2);
	}
	return 0;
}

ll GCD(ll a,ll b)
{
   if(!b) return a;
   else   return GCD(b,a%b);
}
ll exp(ll a,ll b,ll c)
{
	ll ret=1LL;
	ll mult=a;
	while(b)
	{
		if(b&1)	ret=(ret*mult)%c;
		mult=(mult*mult)%c;
		b>>=1;
	}
	return ret;
}
int count(ll x)
{
   int ret=0;
   while(x)
   {
		   if(x&1)  ret++;
		   x>>=1LL;
   }
   return ret;
}

bool isone(ll x,int pos)
{
	 return x&(1<<pos);
}



