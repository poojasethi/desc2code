#include <bits/stdc++.h>
#define inf 1000000008
#define gc getchar
using namespace std;
inline void get(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
typedef struct ve
{
	pair <int,int> wt;
	int con;
} vert;
//int chef[5010][5010],b[5010][5010],cut[5010];
int min_x,min_y;
int n;
int cut[5005];
vector< vector<vert> >a(5010);
pair <int,int> minwt[5005],minwtg;
void add(int x)
{
	if(x==-1)
		return ;
	cut[x]=1;
	for(int i=0;i<a[x].size();i++)
	{
		if(!cut[a[x][i].con])
		{
			minwt[a[x][i].con]=min(minwt[a[x][i].con],a[x][i].wt);
		}
	}
	minwt[x]=make_pair(inf,inf);
}
int main()
{
	vert node;
	pair<int,int> x=make_pair(inf,inf);
	int t;
	int m1,m2,i,j,mi,ver,weight,flag,weigh2,count;
	scanf("%d",&t);
	while(t--)
	{
		//scanf("%lld %lld %lld",&n,&m1,&m2);
		get(n);
		get(m1);
		get(m2);
		for(i=0;i<n;i++)
		{
			a[i].clear();
		}
		for(i=0;i<m1;i++)
		{
			//scanf("%lld %lld %lld",&mi,&ver,&j);
			get(mi);
			get(ver);
			get(j);
			//chef[ver][mi]=chef[mi][ver]=min(j,chef[mi][ver]);
			/*a[mi][ver].wt=a[ver][mi].wt=min(a[mi][ver].wt,make_pair((int)(0),j));*/
			node.wt=make_pair(0,j);
			node.con=mi;
			a[ver].push_back(node);
			node.con=ver;
			a[mi].push_back(node);
		}
		for(i=0;i<m2;i++)
		{
			//scanf("%lld %lld %lld",&mi,&ver,&j);
			get(mi);
			get(ver);
			get(j);
			/*a[mi][ver].wt=a[ver][mi].wt=min(a[mi][ver].wt,make_pair((-j),j));*/
			node.wt=make_pair(-j,j);
			node.con=mi;
			a[ver].push_back(node);
			node.con=ver;
			a[mi].push_back(node);
		}
		for(i=0;i<n;i++)
		{
			minwt[i]=make_pair(inf,inf);
			cut[i]=0;
		}
		minwtg=x;
		min_x=-1;
		min_y=-1;
		for(i=0;i<n;i++)
			for(j=0;j<a[i].size();j++)
			{
				if(minwtg>a[i][j].wt)
				{	
					minwtg=a[i][j].wt;
					min_x=i;
					min_y=a[i][j].con;
				}
			}
		add(min_x);
		add(min_y);
		
		int set=1;
		pair<long long,long long> over;
		over=minwtg;
		//cout<<over.first<<" "<<over.second<<"\n";
		//getchar();
 
		for(j=0;j<n-2&&set;j++)
		{
			minwtg=x;
			min_x=-1;
			for(i=0;i<n;i++)
			{
				if(!cut[i])
				if(minwt[i]<minwtg)
				{
					minwtg=minwt[i];
					min_x=i;
				}
			}
			if(minwtg==x)
			{
				printf("Impossible\n");
				set=0;
			}
			else
			{
				add(min_x);
				over.first+=minwtg.first;
				over.second+=minwtg.second;
			}
		}
		if(set)
		{
			printf("%lld %lld\n",-1*over.first,over.second);
		}
	}
	return 0;
}