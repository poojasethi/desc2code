#include<bits/stdc++.h>
using namespace std;
vector<pair<int,pair<int,int> > > v1;
vector<pair<int,pair<int,int> > > v2;
int parent[5005],rank[5005];
inline int inp()
{
    int noRead=0;
    char p= getchar_unlocked();
    for(;p<33;)
    {
     p=getchar_unlocked();
    };
    while(p>32)
    {
     noRead = (noRead << 3) + (noRead << 1) + (p - '0');
     p=getchar_unlocked();
    }
    return noRead;
};
int find(int a)
{
	if(parent[a]==a)
	return a;
	else
	{
		int y=find(parent[a]);
		parent[a]=y;
		return y;
	}
}
int uni(int a,int b)
{
	int ps=find(a);
	int pd=find(b);
	if(ps==pd)
	{
		return 0;
	}
	else
	{
		if(rank[ps]==rank[pd])
		{
			parent[pd]=ps;
			rank[ps]++;
		}
		else if(rank[ps]>rank[pd])
		{
			parent[pd]=ps;
		}
		else
		{
			parent[ps]=pd;
		}
		return 1;
	}
}
int main()
{
	int t,n,m1,m2,i,a,b,k,x;
	long long int c,sum,tsum;
	//scanf("%d",&t);
	t=inp();
	while(t--)
	{
		v1.clear();
		v2.clear();
		//scanf("%d%d%d",&n,&m1,&m2);
		n=inp();
		m1=inp();
		m2=inp();
		for(i=0;i<m1;i++)
		{
			//scanf("%d%d%lld",&a,&b,&c);
			a=inp();
			b=inp();
			c=inp();
			v1.push_back(make_pair(c,make_pair(a,b)));			
		}
		for(i=0;i<m2;i++)
		{
			//scanf("%d%d%lld",&a,&b,&c);
			a=inp();
			b=inp();
			c=inp();
			v2.push_back(make_pair(c,make_pair(a,b)));
		}
		sort(v1.begin(),v1.end());
		sort(v2.rbegin(),v2.rend());
		for(i=0;i<n;i++)
		{
			parent[i]=i;
			rank[i]=0;
		}
		k=0;
		sum=0;
		tsum=0;
		for(i=0;i<v2.size();i++)
		{
			if(k==n-1)
			{
				goto jump;
			}
			x=uni(v2[i].second.first,v2[i].second.second);
			if(x==0)
			{
				
			}
			else
			{
				tsum+=v2[i].first;
				sum+=v2[i].first;
				k++;
			}
		}
		for(i=0;i<v1.size();i++)
		{
			if(k==n-1)
			{
				goto jump;
			}
			 x=uni(v1[i].second.first,v1[i].second.second);
			if(x==0)
			{
				
			}
			else
			{
				tsum+=v1[i].first;
				k++;
			}
		}
		jump:;
		if(k<n-1)
		printf("Impossible\n");
		else
		printf("%lld %lld\n",sum,tsum);
	}
}