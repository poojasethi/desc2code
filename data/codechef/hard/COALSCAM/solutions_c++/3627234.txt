#include <stdio.h>
#include <iostream>
#include <algorithm>
using namespace std;
pair <int, pair <int,int> > a[20001], b[20001];
    int parent[5001] = {0}, size[5001];
bool cmd(pair <int, pair <int,int> > c, pair <int, pair <int,int> > d)
{
    if (c.first > d.first)
    {
        return true;
    }
    return false;
}
int get(int c)
{
    if (parent[c] == c)
    {
        return c;
    }
    else
    {
        return parent[c] = get(parent[c]);
    }
}
void unique(int c,int d)
{
    c = get(c);
    d = get(d);
    if (size[c] < size[d])
    {
        swap(c, d);
    }
    size[c]++;
    parent[d] = c;
}
main()
{
    int T, N, M1, M2,n1;
    long long int answer1,answer2;
    scanf("%d", &T);
    while (T--)
    {
        scanf("%d%d%d", &N, &M1, &M2);
        answer1 = 0;
        answer2 = 0;
        n1 = 0;
        for (int i = 1; i <= N; i++)
        {
            size[i] = 0;
            parent[i] = i;
        }
        for (int i = 1; i <= M1; i++)
        {
            scanf("%d%d%d", &a[i].second.first, &a[i].second.second, &a[i].first);
            a[i].second.first++;
            a[i].second.second++;
        }
        for (int i = 1; i <= M2; i++)
        {
            scanf("%d%d%d", &b[i].second.first, &b[i].second.second, &b[i].first);
            b[i].second.first++;
            b[i].second.second++;
        }
        sort(a + 1, a + 1 + M1);
        sort(b + 1, b + 1 + M2, cmd);
        for (int i = 1; i <= M2; i++)
        {
            if (get(b[i].second.first) != get(b[i].second.second))
            {
                n1++;
                answer1 += b[i].first;
                unique(b[i].second.first,b[i].second.second);
            }
        }
        for (int i = 1; i <= M1; i++)
        {
            if (get(a[i].second.first) != get(a[i].second.second))
            {
                n1++;
                answer2 += a[i].first;
                unique(a[i].second.first, a[i].second.second);
            }
        }
        if (N == n1 + 1)
        {
            printf("%lld %lld\n",answer1, answer1 + answer2);
        }
        else
        {
            printf("Impossible\n");
        }
    }
    return 0;
}
