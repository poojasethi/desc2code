#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 20010

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)
struct node
{
	int u,v,c;
}a[N],b[N];
bool cmp(node a,node b)
{
	return a.c>b.c;
}
bool cmp1(node a,node b)
{
	return a.c<b.c;
}
int f[N/4],sz[N/4];
int find(int a)
{
	if(a==f[a])return a;
	return f[a]=find(f[a]);
}
void add(int a,int b)
{
	if(sz[a]>=sz[b])f[b]=a,sz[a]+=b;
	else f[a]=b,sz[b]+=a;
}
int main()
{
	int T,n,m,i,j,k;
	scanf("%d",&T);
	while(T--)
	{
		int m1,m2;
		scanf("%d%d%d",&n,&m1,&m2);
		for(i=0;i<m1;i++)
		{
			scanf("%d%d%d",&a[i].u,&a[i].v,&a[i].c);
		}
		sort(a,a+m1,cmp1);
		for(i=0;i<m2;i++)
		{
			scanf("%d%d%d",&b[i].u,&b[i].v,&b[i].c);
		}
		sort(b,b+m2,cmp);
		ll ans=0;
		for(i=0;i<n;i++)f[i]=i,sz[i]=1;
		for(i=0;i<m2;i++)
		{
			int u=b[i].u,v=b[i].v;
			u=find(u),v=find(v);
			if(u!=v)ans+=b[i].c,add(u,v);
		}
		ll res=ans;
		for(i=0;i<m1;i++)
		{
			int u=a[i].u,v=a[i].v;
			u=find(u),v=find(v);
			if(u!=v)ans+=a[i].c,add(u,v);
		}
		m=0;
		for(i=0;i<n;i++)
		if(f[i]==i)m++;
		if(m!=1)puts("Impossible");
		else
		printf("%lld %lld\n",res,ans);
	}
}