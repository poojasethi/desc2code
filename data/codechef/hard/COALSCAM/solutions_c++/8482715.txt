#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#define lli long long int
#define pb push_back
#define mod 1000000007
#define pii pair<int,int>

using namespace std;
int rnk[5002],parent[5002];

void make_set(int n){
    for(int i=0;i<=n;i++){
        rnk[i]=0;
        parent[i]=i;
    }
}

int find_set(int a){
    if(parent[a]!=a)return find_set(parent[a]);
    else return a;
}

void merge_set(int a,int b){
    int pa=find_set(a);
    int pb=find_set(b);

    if(rnk[pa] > rnk[pb]){
        parent[pb]=pa;
    }
    else parent[pa]=pb;

    if(rnk[pa]==rnk[pb])rnk[pb]++;
}
int main()
{
    int t,i,j,k,n,m1,m2,a,b;
    lli c;
    scanf("%d",&t);
    while(t--)
    {
        set<pair<lli , pii > > ss;

        scanf("%d%d%d",&n,&m1,&m2);
        for(i=0;i<m1;i++){
            scanf("%d%d%lld",&a,&b,&c);
            ss.insert(make_pair(c,make_pair(a,b)));
        }
        for(i=0;i<m2;i++){
            scanf("%d%d%lld",&a,&b,&c);
            c*=(-1);
            ss.insert(make_pair(c,make_pair(a,b)));
        }
        make_set(n);
        lli ans1=0,ans2=0;
        int cnt=0;
        while(ss.size() > 0){
            pair<lli , pii > temp = *(ss.begin());
            a=temp.second.first;
            b=temp.second.second;
            c=temp.first;
            ss.erase(ss.begin());
            //cout<<a<<"  "<<b<<"  "<<c<<endl;
            if(find_set(a) != find_set(b)){
                cnt++;
                merge_set(a,b);
                if(c<0){
                    c*=(-1);
                    ans2+=c;
                }
                ans1+=c;
            }
        }
        if(cnt==n-1)printf("%lld %lld\n",ans2,ans1);
        else printf("Impossible\n");
    }

    return 0;
}
