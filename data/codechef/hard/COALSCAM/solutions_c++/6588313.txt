#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define gc getchar_unlocked
#define pb push_back

const int limit = 5005;
int par[limit];
int rannk[limit];

int find(int a){
	return (par[a]==a?a:par[a]=find(par[a]));
}

void merge(int a,int b){
	int pa = find(a);
	int pb = find(b);
	
	if(rannk[pa] > rannk[pb])
		par[pb] = pa;
	else if(rannk[pb] > rannk[pa])
		par[pa] = pb;
	else{
		rannk[pb]++;
		par[pa] = pb;
	}
	return;
}

struct minis{
	lli cost;
	int src;
	int dest;
	minis(){};
	minis(lli _cost,int _src,int _dest){
		cost = _cost;
		src = _src;
		dest = _dest;
	}
	bool operator<(minis a) const{
		if(cost > a.cost) return true;
		if(cost < a.cost) return false;
		if(src > a.src) return true;
		if(src < a.src) return false;
		if(dest > a.dest) return true;
		return false;
	}
};

struct gov{
	lli cost;
	int src;
	int dest;
	gov(){};
	gov(lli _cost,int _src,int _dest){
		cost = _cost;
		src = _src;
		dest = _dest;
	}
	bool operator<(gov a) const{
		if(cost < a.cost) return true;
		if(cost > a.cost) return false;
		if(src < a.src) return true;
		if(src > a.src) return false;
		if(dest < a.dest) return true;
		return false;
	}
};

vector<minis> v1;
vector<gov> v2;

int main(){
	int t,n,m1,m2,sc,dt,ne;
	lli c,profit,total;
	minis a;
	gov b;
	scanf("%d",&t);
	while(t--){
		memset(rannk,0,sizeof(rannk));
		for(int i=0;i<limit;i++)
			par[i]=i;
		v1.clear();
		v2.clear();
		ne=0;
		profit = 0;
		total = 0;
		scanf("%d %d %d",&n,&m1,&m2);
		//cout<<n<<" "<<m1<<" "<<m2;
		for(int i=0;i<m1;i++){
			scanf("%d %d %lld",&sc,&dt,&c);
			v2.pb(gov(c,sc,dt));
		}
		for(int i=0;i<m2;i++){
			scanf("%d %d %lld",&sc,&dt,&c);
			v1.pb(minis(c,sc,dt));
		}
		/*cout<<"minister \n";
		for(int i=0;i<v1.size();i++){
			a = v1[i];
			cout<<a.cost<<" "<<a.src<<" "<<a.dest<<endl;
		}
		cout<<"gov \n";
		for(int i=0;i<v2.size();i++){
			b = v2[i];
			cout<<b.cost<<" "<<b.src<<" "<<b.dest<<endl;
		}*/
		
		sort(v1.begin(),v1.end()); //v1 minis 
		sort(v2.begin(),v2.end());
		
		for(int i=0;i<v1.size();i++){
			a = v1[i];
			int px = find(a.src);
			int py = find(a.dest);
			
			if(px != py){
				profit += a.cost;
				total += a.cost;
				ne++;
				merge(a.src,a.dest);
			}
			if(ne == n-1) break;
		}
		if(ne != n-1){
			for(int i=0;i<v2.size();i++){
				b = v2[i];
				int px = find(b.src);
				int py = find(b.dest);
			
				if(px != py){
					total += b.cost;
					ne++;
					merge(b.src,b.dest);
				}
				if(ne == n-1) break;
			}
		}
		if(ne != n-1){
			printf("Impossible\n");
		}
		else{
			printf("%lld %lld\n",profit,total);
		}
		//cout<<"herer";
	}
}