//For testing only
//CODER: Balajiganapathi
 
#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
 
using namespace std;
 
typedef long long ll;
typedef vector<int> VI;
typedef pair<int,int> PI;
typedef vector<string> VS;
 
#define ST          first
#define SE          second
#define ALL(x)      (x).begin(), (x).end()
#define INI(a, v)   memset(a, v, sizeof(a))
#define RE(i,s,n)  	for(int i=s;i<(n);++i)
#define FR(i,n)     RE(i,0,n)
#define TR(i,x)     for(typeof(x.begin()) i=x.begin();i!=x.end();++i)
#define PU          push_back
#define MP          make_pair
#define SZ(x)       (int)(x.size())
#define INF			2000000009
 
#define gc getchar_unlocked
 
inline void fps(int &x)
{
    register int c = gc();
	x = 0;
    for(;((c<48 || c>57));c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
 
#define mx 502
 
int A[mx], S[mx];
int n, k;
 
main() {
	int t;
	scanf("%d",&t);
	while(t--) {
		scanf("%d%d",&n,&k);
		RE(i, 1, n + 1)  scanf("%d",&A[i]);
		sort(A + 1, A + n + 1);
 
		int ans = INF, ans1, sofar = 0, k2, cur;
		FR(k1, k + 1) {
			cur = A[k1];
			RE(i, k1, n + 1) {
				A[i] -= cur;
				if(i) S[i] = S[i - 1] + A[i];
				sofar += cur;
			}
			k2 = k - k1;
			ans1 = INF;
			for(int i = n; i >= k; --i) ans1 = min(ans1, (n - i) * A[i] + S[i] - S[i - k2]);
			ans = min(ans, sofar + ans1); 
		}
		printf("%d\n", ans);
	}
	return 0;
} 