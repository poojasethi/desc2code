#include<iostream>
#include<cstdio>
#include<fstream>
#include<algorithm>
#define INF 1000000000
#define SZ 65536
using namespace std;
char buffer[SZ];
int point=-1;
int next_input()
{
	if(point==-1 || buffer[point]=='\0')
	{
		fread(buffer,1,SZ,stdin);
		point=0;
	}
	int res=0;
	//cout<<buffer<<"\n";
	while( buffer[point] == ' ' || buffer[point] =='\n')
	{
		point++;
		if( buffer[point] == '\0' ) 
		{
			fread(buffer,1,SZ,stdin);
			point=0;
		}
	}
	while(buffer[point] != ' ' && buffer[point] !='\n')
	{
		if(buffer[point]=='\0') 
		{ 
		fread(buffer,1,SZ,stdin); point=0; 
		if(buffer[point]==' ' || buffer[point]=='\n') break;
		}
		res=(res << 1) +(res << 3)+buffer[point++]-'0';
	}
	if(buffer[point]!='\0') point++;
	return res;
}

int main()
{
	int dp[505][505];
	int K,N,T;
	int arr[505];
	T = next_input();
	while(T--)
	{
		N = next_input() ; K = next_input();
		//cout << N;
		for (int i=0; i < N; ++i) arr[i] = next_input();
		for ( int i = 0; i <= K; ++i)
		for ( int j = 0; j < N; ++j)
			dp[i][j] = INF;
		sort ( arr , arr+ N);
		int res=INF;
		dp[0][N-1] = 0;
		for(int j = 0; j < N; ++j)
			dp[1][j] = ( N - j ) * arr[j];
		for (int i =2 ; i <= K; ++i)
		for (int j =0; j < N; ++j)
		{
			for( int k =  j + 1 ; k < N; ++k)
				dp[i][j] = min ( dp[i][j] , dp[i-1][k]  + arr[j]*(k - j ) );
		}
		for(int i = 0; i < N; ++i)
			res = min ( res , dp[K][i] );
		cout << res <<"\n";
	}
	return 0;
}
