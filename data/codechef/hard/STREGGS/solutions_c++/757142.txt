//Writer's solution

#include<cstdio>
#include<algorithm>
using namespace std;

const unsigned INF = 200*10000000+1;

int main(){
  int T;

  scanf("%d",&T);

  while(T--){
    int i, j;
    int N, K, A[500];
    int broken, last;
    unsigned dp[501][501], res;

    scanf("%d%d",&N,&K);
    for(i=0;i<N;i++) scanf("%d",A+i);
    sort(A,A+N);

    for(i=0;i<=K;i++) for(j=0;j<=N;j++) dp[i][j] = INF;
    dp[0][N] = 0;
    
    for(broken=0;broken<K;broken++) for(last=0;last<=N;last++){
      for(i=0;i<last;i++) dp[broken+1][i] = min(dp[broken+1][i], dp[broken][last] + (last-i)*A[i]);
    }

    res = dp[K][N];
    for(i=0;i<N;i++) res = min(res, dp[K][i]);

    printf("%d\n",res);
  }

  return 0;
}