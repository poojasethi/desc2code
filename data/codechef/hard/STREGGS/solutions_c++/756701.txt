
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <assert.h>
#include <stdint.h>
#include <algorithm>

int Min(int a, int b) {
  return (a < b ? a : b);
}

int compare_inc (const void * a, const void * b)
{
  if ( *(int*)a - *(int*)b > 0 ) return 1;
  else if ( *(int*)a - *(int*)b < 0 ) return -1;
  else return 0;
}

main(int argc, char **argv) {

  int dp[501][501];
  int A[501];

  int T;
  scanf("%d", &T);
  for(int t=1; t<=T; t++) {
    int N, K;
    scanf("%d%d", &N, &K);
    for(int i=1; i<=N; i++) {
      scanf("%d", &A[i]);
    }
    qsort(A+1, N, sizeof(int), compare_inc);
    
    int k=1;
    for(int i=N; i>=1; i--) {
      dp[k][i] = A[i]*(N-i+1);
    }
    for(k=2; k<=K; k++) {
      for(int i=1; i<=N; i++) {
	dp[k][i] = 0x3FFFFFFF;
	for(int j=i+1; j<=N; j++) {
	  dp[k][i] = Min(dp[k][i], dp[k-1][j]+A[i]*(j-i));
	}
      }
    }
    int minTap = 0x3FFFFFFF;
    for(int i=N; i>=1; i--) {
      minTap = Min(minTap, dp[K][i]);
    }
    printf("%d\n", minTap);
  } // end of T
  
  exit(0);
}

// \rm -f a.out; g++ STREGGS.cpp; cat STREGGS.in | ./a.out 1


