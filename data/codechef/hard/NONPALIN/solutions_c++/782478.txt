//In the name of Allah
//
//
//////////////////////
// Program: 
// Written By Alireza Farhadi (LGM)
//////////////////////
#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <cctype>
#include <climits>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <utility>
#include <vector>
#include <bitset>
#include <deque>
#include <iomanip>
#include <complex>
#include <fstream>
#include <sstream>
//#include <map>
//#include <list>


using namespace std;

#if ( _WIN32 || __WIN32__ )
    #define LLD "%I64d"
#else
    #define LLD "%lld"
#endif

#define show(x) cerr<<((#x))<<" = "<<((x))<<" "<<endl
#define bit(a,b) (((a)>>(b))&1)
#define gcd __gcd
#define endl '\n'
#define bcnt(x) ((__builtin_popcount(x)))
#define sz(x) ((int((x).size())))
#define sqr(x) ((((x))*((x))))

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pie;

const double eps=1e-9;
const ld leps=1e-14;

const int MN=2*1000*100+100;
ll hash[MN];
ll pw[MN];
unsigned long long ans;
string s,_;
int t,n;
int key=701;
int p1,p2;
ll hsh(int a,int b)
{
	ll res=hash[b];
	if (a!=0)
		res-=pw[b-a+1]*hash[a-1];
	return res;
}
bool palind(int a,int b)
{
	ll h1=hsh(a,b);
	ll h2=hsh(s.size()-1-b,s.size()-1-a);
	return h1==h2;
}
int calc(int l,int & p)
{
	if (l==1)
		return 0;
	while (p<=n-l && palind(p,p+l-1)==1)
		p++;
	int t=p;
	p=max(p-1,0);
	if (t>n-l)
		return 0;
	return t+1;
}
int main(int argc,char * argv[])
{
	ios_base::sync_with_stdio(false);
	pw[0]=1;
	for (int i=1;i<MN;i++)
		pw[i]=key*pw[i-1];
	cin>>t;
	while (t-->0)
	{
		cin>>s;
		_=s;
		reverse(_.begin(),_.end());
		s+=_;
		for (int i=0;i<s.size();i++)
		{
			if (i==0)
				hash[i]=s[i];
			else
				hash[i]=key*hash[i-1]+s[i];
		}
		n=sz(s)/2;
		ans=0;
		p1=p2=0;
		for (int i=1;i<=n;i++)
		{
			if (i%2)
				p1=max(p1-1,0);
			else
				p2=max(p2-1,0);
			int t;
			if (i%2)
				t=calc(i,p1);
			else
				t=calc(i,p2);
			ans=100007*ans+t;
		}
		cout<<ans<<endl;
	}
	return 0;
}
