/*
 	C++ Template
	Gaurav Babbar
*/

#include<bits/stdc++.h>
#define MOD 1000000007
#define MAX 100005
#define mp make_pair
#define pb push_back
#define gc getchar
#define pc putchar
#define ll long long
#define llu unsigned long long

ll ABS(ll a){if(a>0) return a; else return (-1*a);}
int gcd(int a,int b){if (b==0) return a;else return gcd(b,a%b);}
llu power(llu b,llu exp,llu m) {llu ans=1; b%=m; while(exp){if(exp&1) ans=(ans*b)%m; exp>>=1; b=(b*b)%m; } return ans; }

using namespace std;

#define DisplayDebuggingInfo 0
#define debug(args...) {dbg,args; if(DisplayDebuggingInfo) cerr<<endl;}
struct debugger
{
      template<typename T> debugger& operator,(const T& v)
      {
          if(DisplayDebuggingInfo)
          {
              cerr<< v <<" ";
              return *this;
          }
      }
}dbg;

inline void inp(ll &n)
{
  n = 0;
  int ch = gc();
  int sign = 1;
  while(ch < '0' || ch > '9') {
    if (ch == '-') sign = -1;
    ch = gc();
  }
  while(ch >= '0' && ch <= '9')
    n = (n<<3) + (n<<1) + ch - '0', ch = gc();
  n = n*sign;
}

inline void outp(ll a)
{
  char snum[25];
  int i=0;
  do
  {
    snum[i++]=a%10+48;
    a=a/10;
  } while(a!=0);
  i=i-1;
  while(i>=0)
    pc(snum[i--]);
  pc(' ');
}

/* Main Code sarts here */

ll L,R,k,n;
ll longestAP,temp,x;

void reset()
{
}

void input()
{
    inp(L);inp(R);inp(k);inp(n);
}

void preprocess()
{
    longestAP = 1 + (R-L)/k;
    x = longestAP-1;
    temp = R - x*k;
}

ll sum(ll a)
{
    // to calculate total sum pass a = L1
    //to calculate sum from length2 to end pass L2
    // count is summation 1 + floor[ R - (li + (longestAP-1)*k)]
    ll ans = 0 ;
    if(temp<a) return 0;
    ll q = (temp-a)/x;
    ll r = (temp-a)%x;
    ans = q*(q-1)/2*x + (r+1)*q + (temp - a + 1);
    return ans;
}

ll getCeil(ll n)
{
    ll low = 1;
    ll high = temp - L + 1;
    while(low<=high)
    {
        ll mid = low + (high-low)/2;
        ll upperSum = sum(L) - sum(L+mid);
        if(n==upperSum) return mid;
        if(n>upperSum)
        {
            low = mid+1;
        }
        else
        {
            high = mid - 1;
        }
    }
    return low;
}

void solve()
{
    ll totalSum = sum(L);
    if(n>totalSum)
    {
        cout<<longestAP<<" 0 0\n";
        return;
    }
    debug(totalSum);
    ll sequenceNo = getCeil(n);
    ll lengthSeq = sum(L+sequenceNo-1) - sum(L+sequenceNo);
    n -= (sum(L) - sum(L+sequenceNo-1));
    debug(sequenceNo,lengthSeq,n);
    outp(longestAP);outp(L+sequenceNo-1);outp(L+sequenceNo-1 + k+n-1);
    cout<<endl;
}

int main()
{
//   freopen("input.txt","r",stdin);
//   freopen("output.txt","w",stdout);
   ll t;
   inp(t);
   while(t--)
   {
	   reset();
       input();
       preprocess();
	   solve();
   }
   return 0;
}
