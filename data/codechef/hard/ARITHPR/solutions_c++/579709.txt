#include <iostream>
#include <algorithm>
#include <cstdio>
#define fr(a,b,c) for (a=b;a<=c;a++)
#define frr(a,b,c) for (a=b;a>=c;a--)
using namespace std;

int L,R,K,k,longest;
long long n;

long long sum_consecutive(int l,int r)
{
	return 1LL*(r-l+1)*(l+r)/2;
}

long long calc(int cur)
{
	int left_mod = (R-L) % longest, right_mod = (R-cur) % longest;
	int num = cur-L+1, num_period = num/longest;
	long long sum_div = 1LL*num*R - sum_consecutive(L,cur);
	long long sum_mod_period = 1LL*longest*(longest-1)/2;
	sum_div -= sum_mod_period*num_period;
	if (num%longest)
	{
		if (left_mod>=right_mod) sum_div -= sum_consecutive(right_mod,left_mod);
		else sum_div -= (sum_consecutive(0,left_mod) + sum_consecutive(right_mod,longest-1));
	}	
	return sum_div/longest - 1LL*num*(k-1);
}

int main()
{
	int test,low,high,re;
	cin >> test;
	while (test--)
	{
		scanf("%d %d %d %lld",&L,&R,&k,&n);
		longest=(R-L)/k; re=-1;
		low=L; high=R-k*longest;
		while (low<=high)
		{
			int mid=(low+high)/2;
			if (calc(mid)>=n) re=mid, high=mid-1;
			else low=mid+1;
		}
		if (re<0) printf("%d 0 0\n",longest+1);
		else
		{
			n-=calc(re-1);
			n=(n-1)%((R-re)/longest);
			printf("%d %d %lld\n",longest+1,re,n+k+re);
		}
	}
	return 0;
}
