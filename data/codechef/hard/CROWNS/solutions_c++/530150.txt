#include <cmath>
#include <cstdio>
#include <utility>
#include <algorithm>
using namespace std;
int t,n,m,i,j,k,x,y;
pair <double, double> a[55],b[55];
double f[55][2],xx,yy,dd,d,z,e,r,res,eps=1e-8;
bool q;
int main() {
  scanf("%d",&t);
  while (t--) {
    scanf("%d",&n); res=0;
    for (i=0; i<n; i++) scanf("%lf%lf",&b[i].first,&b[i].second);
    for (x=0; x<n; x++) for (y=0; y<n; y++) if (x!=y) {
      z=atan2(b[y].second-b[x].second,b[y].first-b[x].first);
      dd=sqrt((b[y].second-b[x].second)*(b[y].second-b[x].second)+(b[y].first-b[x].first)*(b[y].first-b[x].first));
      for (i=m=0; i<n; i++) if (i!=x && i!=y) {
        d=sqrt((b[i].second-b[x].second)*(b[i].second-b[x].second)+(b[i].first-b[x].first)*(b[i].first-b[x].first));
        e=atan2(b[i].second-b[x].second,b[i].first-b[x].first);
        xx=d*cos(e-z);
        yy=d*sin(e-z);
        if (xx>eps && xx<dd-eps && yy>eps) a[m++]=make_pair(xx,yy);
      }
      sort(a,a+m); 
      for (i=0; i<m; i++) {      
        q=true;
        for (k=0; k<m; k++) if (k!=i) {
          if (a[k].first>a[i].first+eps) break;
          if (a[i].first*(a[k].second-a[i].second)-(a[k].first-a[i].first)*a[i].second<-eps) { q=false; break; }
        }
        f[i][1]=-1e9;
        if (q) f[i][0]=a[i].first*a[i].second; else f[i][0]=-1e9;
      }
      for (i=0; i<m; i++) for (j=i+1; j<m; j++) if (a[j].first>a[i].first+eps) {
        q=true;
        for (k=i+1; k<m; k++) if (k!=j) {
          if (a[k].first>a[j].first+eps) break;
          if ((a[j].first-a[i].first)*(a[k].second-a[j].second)-(a[k].first-a[j].first)*(a[j].second-a[i].second)<-eps) { q=false; break; }
        }
        if (q) {
          if (a[j].second>a[i].second+eps) f[j][0]=max(f[j][0],f[i][1]+(a[j].first-a[i].first)*(a[j].second+a[i].second));
           else if (a[j].second<a[i].second-eps) f[j][1]=max(f[j][1],f[i][0]+(a[j].first-a[i].first)*(a[j].second+a[i].second));
        }
      }
      for (r=i=0; i<m; i++) {
        q=true;
        for (k=i+1; k<m; k++) if ((dd-a[i].first)*a[k].second-(a[k].first-dd)*(-a[i].second)<-eps) { q=false; break; }
        if (q) r=max(r,f[i][0]+a[i].second*(dd-a[i].first));
      }
      if (r>res) res=r;
    }
    printf("%.1lf\n",res*0.5);
  }
  return 0;
}
