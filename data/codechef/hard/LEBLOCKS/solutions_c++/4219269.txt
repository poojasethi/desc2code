/*Programmed by Ayush Jaggi*/

#include<bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define L(i,x,y) for(i=x;i<y;i++)
#define l0(i,x) for(i=0;i<x;i++)
#define l1(i,x) for(i=1;i<x;i++)
#define pd(n) printf("%d",n)
#define pdn(n) printf("%d\n",n)
#define pds(n) printf("%d ",n)
#define plld(n) printf("%lld",n)
#define plldn(n) printf("%lld\n",n)
#define pllds(n) printf("%lld ",n)
#define pc(n) printf("%c",n)
#define pn printf("\n")
#define ps printf(" ")
#define plf(n) printf("%.6lf",n)
#define plfn(n) printf("%.6lf\n",n)
#define plfs(n) printf("%.6lf ",n)
#define pllf(n) printf("%.6llf",n)
#define pllfn(n) printf("%.6llf\n",n)
#define pllfs(n) printf("%.6llf ",n)
#define psn(n) printf("%s\n",n)
#define pss(n) printf("%s ",n)
#define sd(n) scanf("%d",&n)
#define sld(n) scanf("%ld",&n)
#define slld(n) scanf("%lld",&n)
#define slf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define sc(n) scanf("%c",&n)
#define mem(n,m) memset(n,m,sizeof(n))
#define W(t) while(t--)

typedef long long LL;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<string> VS;

LL MOD=1000000007;

int main()
{
    LL t, n, k, a[25][2], fact[25], i, j, temp, c, num, den, l, m, dp[25][205], count;
    double ans;
    fact[0]=1;
    l1(i,21)
    fact[i]=fact[i-1]*i;
    slld(t);
    W(t)
    {
        slld(n);
        slld(k);
        num=0;
        mem(a,0);
        l0(i,n)
        {
            slld(temp);
            slld(c);
            if(a[c][0])
                a[c][1]=temp;
            else a[c][0]=temp;
        }
        den=fact[n];
        l1(i,n+1)
        {
            if(!a[i][0])
                continue;
            if(a[i][0]-k>0)
                num=num+fact[n]*(a[i][0]-k);
            if(a[i][1])
            {
                if(a[i][1]-k>0)
                    num=num+fact[n]*(a[i][1]-k);
                //LL min=a[i][0]+a[i][1]-k;
                mem(dp,0);
                /*if(min>0)
                {
                    if(a[i][0]<min)
                        min=a[i][0];
                    if(a[i][1]<min)
                        min=a[i][1];
                    num=num+min*2*fact[n-1];
                }*/
                count=0;
                for(j=1; j<=a[i][0]; j++)
                    if(j+k>a[i][0] && j+k<=a[i][0]+a[i][1])
                        count++;
                num=num+count*2*fact[n-1];
                l1(j,n+1)
                {
                    if(j==i || !a[j][0])
                        continue;
                    //dp[1][a[j][0]]++;
                    //if(!a[j][1])
                    //{
                    for(l=n-3; l>0; l--)
                        l1(m,k)
                        dp[l+1][m+a[j][0]]+=dp[l][m];
                    dp[1][a[j][0]]++;
                    //}
                    //else
                    if(a[j][1])
                    {
                        for(l=n-3; l>0; l--)
                            l1(m,k)
                            //{
                            //dp[l+1][m+a[j][0]]+=dp[l][m];
                            dp[l+1][m+a[j][1]]+=dp[l][m];
                        //}
                        //dp[1][a[j][0]]++;
                        dp[1][a[j][1]]++;
                    }
                }
                l1(j,n-1)
                {
                    l1(l,k)
                    {
                        count=0;
                        //pllds(dp[j][l]);
                        for(m=1; m<=a[i][0]; m++)
                            if((m+k)>(a[i][0]+l) && (m+k)<=(a[i][0]+l+a[i][1]))
                                count++;
                        //pllds(count);
                        if(n-1-j<0)
                            num=num+count*fact[j]*dp[j][l]*2;
                        else num=num+count*fact[j]*dp[j][l]*2*fact[n-1-j];
                    }
                    //pn;
                }
                //pn;
            }
        }
        //plldn(num);
        //plldn(den);
        ans=(double)num/(double)den;
        //plfn(ans);
        printf("%.7lf\n",ans);
    }
    return 0;
}
