#include<iostream>
#include<cstdio>
#include<set>
#include<stack>
#define ROF(a,b,c) for(int a=b;a>=c;--a)
#include<vector>
#include<algorithm>
#define FOR(a,b,c) for(int a=b;a<=c;++a)
#include<cstring>
#include<bitset>
#include<cmath>
#include<iomanip>
#include<queue>
#define debug cerr<<"OK";
#define f cin
#define g cout
#define mp make_pair
#define pb push_back
#define ll long long
#define mod 1000000007
#define inf (1<<30)
#define DIM 1000100
#define shit 2000000000000000000LL
#define cl first
#define le second
#define nmic 110
#define N 25
#define SM 210
#define Q 15100
#define eps 1.e-8
using namespace std;
//int dx[]={0,0,0,1,-1};
//int dy[]={0,1,-1,0,0};
void swa(pair<ll,ll> &a,pair<ll,ll> &b)
{
	pair<ll,ll> aux;
	aux=a;
	a=b;
	b=aux;
}
pair<ll,ll> v[N];
int viz[N],n,l1,l2,color,k,S,T,adaos;
double R[N][SM],sol,D[N][N][N];
double fac[N];
void rucsac();
int main ()
{
    #ifndef ONLINE_JUDGE
    freopen("a.in","r",stdin);
    freopen("a.out","w",stdout);
    #endif
	
	f>>T;
	fac[0]=1;
	FOR(i,1,20)
	fac[i]=fac[i-1]*i;
	while(T--)
	{
		f>>n>>k;
		S=0;
		sol=0;
		memset(viz,0,sizeof(viz));
		FOR(i,1,n)
		{
			f>>v[i].le>>v[i].cl;
			if(v[i].le>k)
				sol=sol+v[i].le-k;
			S+=v[i].le;
		}
		sort(v+1,v+n+1);
		FOR(i,1,n-1)
		{
			if(v[i].cl==v[i+1].cl)
			{
				color=v[i].cl;
				l1=v[i].le;
				l2=v[i+1].le;
				rucsac();
			}
		}
		g<<fixed<<setprecision(9)<<sol<<"\n";
	}
	return 0;
}
void rucsac()
{
	memset(R,0,sizeof(R));
	R[0][0]=1;
	FOR(bloc,1,n)
	{
	if(v[bloc].cl==color)
		continue;
	ROF(nrbl,n,1)
	{
		ROF(len,k-v[bloc].le,0)
		R[nrbl][len+v[bloc].le]+=R[nrbl-1][len];
	}
	}
	FOR(nrbl,0,n)
	FOR(len,0,k-1)
	{
		if(!R[nrbl][len])
			continue;
		ll nrm=0;
		adaos=l1+len;
		FOR(j,1,l2)
		if(j+adaos-k>=1&&j+adaos-k<=l1)
			nrm++;
		nrm<<=1;
		if(!nrm)
			continue;
		sol=sol+fac[nrbl]*fac[n-nrbl-2]*R[nrbl][len]*nrm*(n-nrbl-1)/fac[n];
	}
} 