#include <iostream>
#include <stdio.h>
#include <string.h>

using namespace std;

int n;
int neighr[] = {1,1,-1,-1,2,2,-2,-2};
int neighc[] = {2,-2,2,-2,1,-1,1,-1};

bool isvalid(int r, int c)
{
	if(r<0 or c<0 or r>=n or c>=n)
		return false;
	return true;
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("KFORK.txt", "r", stdin);
	#endif
	int t, m, r, c, dr, dc;
	cin >> t;
	while(t--)
	{
		cin >> n >> m;
		int array[n][n];
		memset(array, 0, sizeof(array));
		for(int i=0; i<m; i++)
		{
			cin >> r >> c;
			array[r-1][c-1] = 1;

			// setting row and col
			for(int j=0; j<n; j++)
			{
				if(array[r-1][j] == 0)
					array[r-1][j] = 2;
				if(array[j][c-1] == 0)
					array[j][c-1] = 2;
			}
			dr = r-2;
			dc = c-2;
			while(isvalid(dr, dc))
			{
				if(array[dr][dc] == 0)
					array[dr][dc] = 2;
				dr--;
				dc--;				
			}
			dr = r;
			dc = c;
			while(isvalid(dr, dc))
			{
				if(array[dr][dc] == 0)
					array[dr][dc] = 2;
				dr++;
				dc++;
			}
			dr = r-2;
			dc = c;
			while(isvalid(dr, dc))
			{
				if(array[dr][dc] == 0)
					array[dr][dc] = 2;
				dr--;
				dc++;
			}
			dr = r;
			dc = c-2;
			while(isvalid(dr, dc))
			{
				if(array[dr][dc] == 0)
					array[dr][dc] = 2;
				dr++;
				dc--;
			}
		}
		int res = 0, nei;
		for(int i=0; i<n; i++)
		{
			for(int j=0; j<n; j++)
			{				
				// check for row
				if(array[i][j])
					continue;
				nei = 0;
				for(int nr=0; nr<8; nr++)
				{
					// cout << "i : " << i << " j : " << j;
					// cout << " r : " << i+neighr[nr] << " c : " << j+neighc[nr] << endl;
					if(isvalid(i+neighr[nr], j+neighc[nr]) and array[i+neighr[nr]][j+neighc[nr]] == 1)
					{
						// cout << "valid" << endl;
						nei++;
					}
				}
				// cout << "nei " << nei << endl;
				if(nei >= 2)
					res++;
			}
		}
		cout << res << endl;
	}
	return 0;
}