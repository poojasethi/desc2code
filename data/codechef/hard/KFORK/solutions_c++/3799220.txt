#include<cstdio>
#include<cstdlib>

using namespace std;
#define REP(i,a,b)\
    for(int i=int(a);i<=int(b);i++)
#define REPMIN(i,a,b)\
    for(int i=int(a);i>=int(b);i--)

int cb[1004][1004];
int main(){
    int T,N,M,count,totalcount,X,Y,p,q;
    scanf("%d",&T);
    while(T--){
        scanf("%d",&N);
        scanf("%d",&M);
        REP(i,0,1003)
            REP(j,0,1003)
                cb[i][j] = 0;
        REP(i,0,M-1){
            scanf("%d",&X);
            scanf("%d",&Y);
            cb[X+1][Y+1]=8;
            REP(j,X+2,N+1)
                if(cb[j][Y+1]!=8)
                    cb[j][Y+1]=7;
            REPMIN(j,X,0)
                if(cb[j][Y+1]!=8)
                    cb[j][Y+1]=7;
            REP(j,Y+2,N+1)
                if(cb[X+1][j]!=8)
                    cb[X+1][j]=7;
            REPMIN(j,Y,0)
                if(cb[X+1][j]!=8)
                    cb[X+1][j]=7;
            p=X+2;
            q=Y+2;
            while(p<=N+1 && q<=N+1){
                if(cb[p][q]!=8)
                    cb[p][q]=7;
                p++;
                q++;
            }
            p=X;
            q=Y;
            while(p>=0 && q>=0){
                if(cb[p][q]!=8)
                    cb[p][q]=7;
                p--;
                q--;
            }
            p=X+2;
            q=Y;
            while(p<=N+1 && q>=0){
                if(cb[p][q]!=8)
                    cb[p][q]=7;
                p++;
                q--;
            }
            p=X;
            q=Y+2;
            while(p>=0 && q<=N+1){
                if(cb[p][q]!=8)
                    cb[p][q]=7;
                p--;
                q++;
            }

        }
        totalcount = 0;
        REP(i,2,N+1){
            REP(j,2,N+1){
                count = 0;
                if(cb[i][j]==8 || cb[i][j]==7)
                    continue;
                else{
                    if(cb[i+1][j+2]==8)
                        count++;
                    if(cb[i+2][j+1]==8)
                        count++;
                    if(cb[i-1][j+2]==8)
                        count++;
                    if(cb[i-2][j+1]==8)
                        count++;
                    if(cb[i-1][j-2]==8)
                        count++;
                    if(cb[i-2][j-1]==8)
                        count++;
                    if(cb[i+1][j-2]==8)
                        count++;
                    if(cb[i+2][j-1]==8)
                        count++;
                }
                if(count>=2){
                    totalcount++;
//                    printf("The forking position is: %d %d",i-1,j-1);
                }
            }
        }
        printf("%d\n",totalcount);
    }
    return 0;
} 
