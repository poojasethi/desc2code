#include <iostream>
#define SIZE 1005

using namespace std;

int Q[SIZE][SIZE];
int X[SIZE],Y[SIZE];
int D1[2*SIZE], D2[2*SIZE];

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		int i,j;
		int ans=0;

		cin>>n>>m;

		for(i=0;i<=2*n;i++)
		{
			if(i<=n)
			{
				for(j=0;j<=n;j++) Q[i][j]=0;
				X[i]=Y[i]=D1[i]=D2[i]=0;
			}
			else D1[i]=D2[i]=0;
		}
			

		for(i=0;i<m;i++)
		{
			int x,y;
			cin>>x>>y;
			Q[x][y]=1;
			
			X[x]=1;
			Y[y]=1;
	        D1[y+x-1]=1;  // x+y-1 = coordinate where diagonal 1 would hit x=1
	        D2[y+n-x]=1;  // x+n-1 = coordinate where diagonal 2 would hit x=n
		}

		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				if(!Q[i][j] && !X[i] && !Y[j] && !D1[j+i-1] && !D2[j+n-i])
				{
					int c=0;

					if(i+1<=n && j+2<=n && Q[i+1][j+2]) c++;
					if(i+1<=n && j-2>=1 && Q[i+1][j-2]) c++;
					if(i-1>=1 && j+2<=n && Q[i-1][j+2]) c++;
					if(i-1>=1 && j-2>=1 && Q[i-1][j-2]) c++;
					if(i+2<=n && j+1<=n && Q[i+2][j+1]) c++;
					if(i+2<=n && j-1>=1 && Q[i+2][j-1]) c++;
					if(i-2>=1 && j+1<=n && Q[i-2][j+1]) c++;
					if(i-2>=1 && j-1>=1 && Q[i-2][j-1]) c++;
					
					if(c>1) ans++;
				}
			
		cout<<ans<<endl;
	}
return 0;
}