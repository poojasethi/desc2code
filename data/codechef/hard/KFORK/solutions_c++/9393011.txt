#include <iostream>
#include <cstdio>
#include <set>
#include <map>
using namespace std;

int main() {
	int t;
	scanf("%d", &t);
	while (t--) {
		int n, m;
		scanf("%d%d", &n, &m);
		set<int> h1, h2;
		set<int> rows, cols;
		set<pair<int,int> > queen;
		for (int i = 0; i < m; i++) {
			int x, y;
			scanf("%d%d", &x, &y);
			rows.insert(x);
			cols.insert(y);
			h1.insert(x-y);
			h2.insert(x+y);
			queen.insert(make_pair(x, y));
		}

		int positions = 0;
		int d[8][2] = {{2, 1}, {-2, 1}, {2, -1}, {-2, -1}, {1, 2}, {-1, 2}, {1, -2}, {-1, -2}};
		for (int i = 1; i <= n; i++) {
			for (int j = 1; j <= n; j++) {
				int count = 0;
                if (queen.count(make_pair(i, j))) continue;
				if (rows.count(i) or cols.count(j)) continue;
				if (h1.count(i-j) or h2.count(i+j)) continue;
				for (int k = 0; k < 8; k++) {
					int nx = i+d[k][0];
					int ny = j+d[k][1];
					if (queen.count(make_pair(nx, ny))) count++;
				}
				if (count >= 2) {
                    positions++;
                }
			}
		}

		printf("%d\n", positions);
	}
}
