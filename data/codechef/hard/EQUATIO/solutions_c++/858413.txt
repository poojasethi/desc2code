#include<iostream>
#include<stack>
#include<queue>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<string>
#include<cstring>
#include<map>
#include<numeric>
#include<sstream>
#include<cmath>
using namespace std;
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define pb push_back
#define f(i,x,y) for(int i = x; i<y; i++ )
#define FORV(it,A) for(vector<int>::iterator it = A.begin(); it!= A.end(); it++)
#define FORS(it,A) for(set<int>::iterator it = A.begin(); it!= A.end(); it++)
#define quad(x) (x) * (x)
#define mp make_pair
#define clr(x, y) memset(x, y, sizeof x)
#define fst first
#define snd second
typedef pair<int, int> pii;
typedef long long ll;
typedef long double ld;
#define N 1100000
vector <int> primos;
bool P[N];

int qnts (int h){
	int cnt = 0;
	for (int j = 0; j < primos.size(); j++){
		if (primos[j] > h) break;
		if (h%primos[j] == 0) cnt++;
	}	        
	return cnt;
}

int main (){
    f (i, 0, N) P[i] = 1;
    for (int i = 2; i*i < N; i++) if (P[i])
        for (int j = i*i; j < N; j += i) P[j] = 0;
    
    f (i, 2, N) if (P[i]) primos.pb (i);
    int t; scanf("%d", &t);
    while (t--){
      	vector <int> div;
		   div.clear();
        int a, b, c; cin >> a >> b >> c;
        if (a == 0 &&c == 0){
        	if (b == 0) printf("0\n");
        	else printf("-1\n");
        	continue;
        }
        
        else{
		    ll ans = 0;
		    for (int d = b+1; a/d+c >= d-b; d++) if (a%d == 0 && (a/d+c)%(d-b) == 0){
				ans += (1<<qnts ((a/d+c)/(d-b)));
		    }
		    cout << ans << endl;
        }
    }
    return 0;
}