#include<cstdio>
#include<iostream>
#include<cmath>
#include<algorithm>
#include<cstring>
using namespace std;

#define LIM 2000005
#define SIEVE 1415

bool is_prime[LIM];
int D[LIM],a,b,c,counter,cases;

int main()
{
    memset(is_prime,true,LIM);
    is_prime[0]=is_prime[1]=false;
    D[0]=0; D[1]=1;
    for(int i=2;i<LIM;i++) D[i]=1;
    for(int i=2;i<SIEVE;i++) if(is_prime[i]) for(int j=i*i;j<LIM;j+=i) is_prime[j]=false;
    for(int i=2;i<LIM;i++){
        if(is_prime[i]){
            for(int j=i;j<LIM;j+=i) D[j]=D[j]<<1;
        }
    }
    cin>>cases;
    while(cases--){
        cin>>a>>b>>c;
        counter=0;
        if(a==0 && c==0){
            if(b==0) printf("0\n");
            else printf("-1\n");
        }
        else if(a==0){
            int u=(int)sqrt(double(c))+1;
            while(u*u>c) u--;
            for(int i=1;i<=u;i++){
                if(c%i == 0){
                    counter += D[c/i];
                    if(c/i > i) counter += D[i];
                }
            }
            printf("%d\n",counter);
        }
        else{
            int u=(int)sqrt(double(a))+1;
            while(u*u>a) u--;
            for(int i=1;i<=u;i++){
                if(a%i==0){
                    //printf("i=%d\n",i);
                    int a1=a/i;
                    if(i>b && (a1+c)%(i-b)==0){
                        counter += D[(a1+c)/(i-b)];
                    }
                    if(a1>b && a1>i && (i+c)%(a1-b)==0){
                        counter += D[(i+c)/(a1-b)];
                    }
                }
            }
            printf("%d\n",counter);
        }
    }
    return 0;
}
