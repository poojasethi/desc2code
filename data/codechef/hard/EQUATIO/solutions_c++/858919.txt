#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <utility>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string.h>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
#define debug(args...) dbg(),args
const double pi=acos(-1.0);
const double eps=1e-11;
#define S(N) scanf("%d", &N)
#define SL(N) scanf("%lld", &N)
#define SF(N) scanf("%lf", &N) 
#define SC(N) scanf("%c", &N) 
#define SS(N) scanf("%s", N) 
#define SIZE(X) ((int)((X).size()))
#define MP(A,B) make_pair(A,B)
#define FOR(A,B,C) for(int A=B;A<C;A++)
#define EFOR(A,B,C) for(int A=B;A<=C;A++)
#define RFOR(A,B,C) for(int A=B;A>=C;A--)
#define FORL(A,B,C) for(ll A=B;A<C;A++)
#define EFORL(A,B,C) for(ll A=B;A<=C;A++)
#define RFORL(A,B,C) for(ll A=B;A>=C;A--)
#define PB(A,B) A.push_back(B);
#define SORT(A) sort( A.begin(),A.end() )
#define ALL(A) A.begin(),A.end()
#define MEM(A,B) memset(A,B,sizeof(A))
#define SZ(A) int(A.size())
#define MAX(A,B) ((A > B) ? A : B)
#define MIN(A,B) ((A < B) ? A : B)
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
#define DBGCHECK if (argc > 1) DBG = ((*argv[1] == '0') ? 0 : 1)
#define MOD 1000000007LL
#define LIM 500 
#define INF 10000
bool DBG;
struct dbg { template<typename T> dbg& operator , (const T& v) { if (DBG) cerr << v << " "; return *this; } ~dbg() { if (DBG) cerr << endl; } };

int a,b,c;
int func(int t){
	int num = 1, i,n = t;
  for (i=2;i<=sqrt(t);i++)
    if (n % i == 0) {
      num *= 2;
      while (n % i == 0)
		n /= i;
    }
  if (n > 1)
	num *= 2;
  return num;
}

int main(int argc,char* argv[]){
	DBGCHECK;
	int t;
	S(t);
	while(t-- > 0){
		int ans=0,t;
		scanf("%d %d %d",&a,&b,&c);
		if(a == 0 && c == 0){
			if(b==0)
				ans = 0;
			else 
				ans = -1;
		}
		else{
			for(int d = b+1;(a/d + c) >= (d-b);d++){
				if( a%d == 0 && (a/d+c)%(d-b) == 0)
					ans += func((a/d+c)/(d-b)); 
			}
		}
		printf("%d\n",ans);
	}
}
