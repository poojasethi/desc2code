#include<cstdio>
#include<vector>
#include<cstring>
#include<iostream>

using namespace std;

struct Query {
    public:
    char t, c;
    int pos;

    Query(char _t, int _pos, char _c) {
        t = _t; pos = _pos; c = _c;
    }
};

vector<Query> v;

const int mx = 300005;
char s[mx], ans[mx];
int bit[mx], len;

int read(int x) {
    ++x;
    int ans = 0;

    while(x > 0) {
        ans += bit[x];
        x -= (x & -x);
    }

    return ans;
}

void update(int x, int v) {
    ++x;
    while(x < mx) {
        bit[x] += v;
        x += (x & -x);
    }
}

int get(int p) {
    int lo = 0, hi = len - 1;
    while(lo < hi) {
        int m = (lo + hi) / 2;
        if(read(m) >= p) hi = m;
        else lo = m + 1;
    }

    return lo;
}

int main() {
    int q;
    scanf("%d", &q);
    while(q--) {
        char t;
        int p, n;
        scanf(" %c %d", &t, &p);
        if(t == '+') {
            scanf("%s", s);
            n = strlen(s);
            for(int i = n - 1; i >= 0; --i) v.push_back(Query(t, p + 1, s[i]));
            len += n;
        } else {
            scanf("%d", &n);
            for(int i = 0; i < n; ++i) v.push_back(Query(t, p + i, ' '));
            v.push_back(Query(t, -1, '\n'));
        }
    }
    for(int i = 0; i < len; ++i) update(i, 1);

    for(int i = (int)v.size() - 1; i >= 0; --i) {
        //cerr << i << " " << v[i].t << " " << v[i].pos << " " << v[i].c << endl;
        if(v[i].pos == -1) continue;
        int x = get(v[i].pos);
        //cerr << x << endl;
        if(v[i].t == '+') {
            ans[x] = v[i].c;
            update(x, -1);
        } else {
            v[i].pos = get(v[i].pos);
        }
    }

    for(int i = 0; i < (int)v.size(); ++i) {
        if(v[i].pos == -1) putchar('\n');
        else if(v[i].t == '?') putchar(ans[v[i].pos]);
    }

    return 0;
}
