#include <cstdio>
#include <algorithm>
using namespace std;

const int Maxn = 1000;

int t, n, ans;
pair <int, int> times[Maxn];

bool Enough(int t)
{
     int jtime = 0;
     for (int i = 0; i < n; i++)
        if (times[i].first > t) jtime += times[i].second;
     if (jtime > 2*t) return false;
     bool fin[Maxn+1];
     int Maxs = jtime/2 + 1;
     fill(fin, fin+Maxs, false);
     fin[0] = true;
     for (int i = 0; i < n; i++)
        if (times[i].first > t)
           for (int j = Maxs-1-times[i].second; j >= 0; j--)
              if (fin[j]) fin[j+times[i].second] = true;
     for (int j = Maxs-1; j >= 0; j--)
        if (fin[j]) return jtime-j <= t;
}

void Search(int l, int r)
{
     if (l > r) return;
     int mid = (l + r) / 2;
     if (Enough(mid)) {
                      ans = mid;
                      Search(l, mid-1);
     } else Search(mid+1, r);
}

int main()
{
    scanf("%d", &t);
    while (t--) {
          scanf("%d", &n);
          for (int i = 0; i < n; i++)
             scanf("%d %d", &times[i].first, &times[i].second);
          Search(0, Maxn);
          printf("%d\n", ans);
    }
    return 0;
}
