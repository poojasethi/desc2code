#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define inf 1000000000
#define mp make_pair
using namespace std;
typedef long long L;
typedef unsigned long long UL;
pair<int,int> A[1001];
int test,n,D[1001];


bool canuse(int t){
    int sum=0;
    memset(D,0,sizeof(D));
    D[0]=1;
    for(int i=0;i<n;i++)
        if(A[i].first>t){
            sum+=A[i].second;
            for(int j=0;j<=t;j++)
                if(D[j]&&(j+A[i].second<=t))D[j+A[i].second]=1;
        }
    for(int i=t;i>=0;i--)
        if(D[i]){
            if(sum-i<=t)return true;
            else return false;
        }
}

int main()
{
    int l,r,mid;

    cin>>test;
    while(test--){

        cin>>n;
        l=1,r=0;

        for(int i=0;i<n;i++){
            cin>>A[i].first>>A[i].second;
            r=max(r,A[i].first);
        }

        sort(A,A+n);

        while(l<=r){
            mid=(l+r)/2;
            if(canuse(mid))r=mid-1;
            else l=mid+1;
        }
        cout<<r+1<<endl;

    }


    return 0;
}
