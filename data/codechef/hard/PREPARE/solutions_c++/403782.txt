#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include  <string>
using namespace std;
int n;
int C[1024],W[1024];
int temp[1024];
bool possible[2048];
bool isPossible(int t)
{
        int count=0,sum=0;
        for(int i=0;i<n;i++)
        {
                if(W[i]<=t)continue; //that can be given to worker
                if(C[i]>t) return 0;
                temp[count++]=C[i];
                sum+=C[i];
        }
        if(sum==0)return 1;
        if(sum>2*t)return 0;
        memset(possible,false,sizeof(possible));
        possible[0]=true;
        for(int i=0;i<count;i++)for(int j=sum-temp[i];j>=0;j--)if(possible[j])
                possible[j+temp[i]]=true;
        for(int i=0;i<=t;i++)
        {
                if(possible[i] && sum-i<=t)return true;
        }
        return false;

}
int main()
{
        int X;
        scanf("%d",&X);
        while(X--)
        {
                scanf("%d",&n);
                for(int i=0;i<n;i++)scanf("%d%d",&W[i],&C[i]);
                int low=0,mid,high=1024;
                while(1)
                {
                        mid=(low+high)/2;
                        if(low==high)break;
                        if(isPossible(mid))high=mid;
                        else low=mid+1;
                }
                printf("%d\n",mid);
        }
}
