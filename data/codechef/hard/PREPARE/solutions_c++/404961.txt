#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <cstdio>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)REP(i,0,(int)(v)-1)
#define FORD(i,v)REPD(i,(int)(v)-1,0)
#define pb push_back
#define sz size
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define ALL(x) (x).begin(),(x).end()
using namespace std;
int cook[30000],chef[30000],n;

bool check(int t)
{
    vector<int> p(t+3,0);
    p[0]=1;
    int suma=0;
    bool ok=1;
    FOR(i,n)
    {
        if (cook[i]<=t) continue;
        suma+=chef[i];
        p.clear();
        REPD(k,t,0)
            if (p[k] && k+chef[i]<=t) p[k+chef[i]]=1;
    }
    int l;
    REPD(j,t,0) if (p[j]) {l=j;break;}
    if (suma-l<=t) return 1;
    return 0;
}


int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--)
    {
        cin>>n;
        FOR(i,n) cin>>cook[i]>>chef[i];
        int lo=0,hi=2000,mid;
        while (hi-lo>1)
        {
            mid=(hi+lo)/2;
            if (check(mid))
                hi=mid;
            else
                lo=mid;
        }
        cout<<hi<<endl;
    }
    
    return 0;
}
