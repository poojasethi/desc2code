#include<algorithm>
#include<bitset>
#include<cassert>
#include<cmath>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<deque>
#include<fstream>
#include<iostream>
#include<map>
#include<queue>
#include<set>
#include<sstream>
#include<stack>
#include<vector>
#include<climits>

using namespace std;

int n;

struct st{
	int a,b;
	st(){}
	st(int aa,int bb){ a=aa; b=bb;}
}s[1111];


bool cmp(st l,st r){
	if( l.a!=r.a ) return l.a > r.a;
	return l.b < r.b;
}

bool sum[2111];

int main (){
	int testCase; scanf("%d",&testCase);
	while( testCase-- ){
		cin>>n;
		for(int i=0;i<n;i++)
		  scanf("%d %d",&s[i].a,&s[i].b);
		sort(s,s+n,cmp);
		memset(sum,0,sizeof(sum));
		//for(int i=0;i<n;i++ ) cout<<s[i].a<<" "<<s[i].b<<endl;
		sum[0]=1; int md=s[0].a,ts=0;
		
		
		for(int i=0;i<n;i++){
			ts+=s[i].b;
			if( ts>=2000 ) break;
			//ts=min(ts,1000);
			for(int j=ts;j>=0;j--) 
			  if( j-s[i].b>=0 && sum[ j-s[i].b ] ) sum[j]=1;
			
			
		    int diff=1000000,tim;
		    for(int j=ts;j>=0;j--) if( sum[j] && sum[ts-j] ){
		    	int temp=ts-j-j;
		    	if( temp<0 ) temp=-temp;
		    	if( diff>temp ) {diff=temp; tim=max(j,ts-j);}
		    }
		    
		    int fu=0;
		    if( i+1<n ) fu=s[i+1].a;
		    
		    int  diff1=max(tim,fu);
		   
		    md=min(md,diff1);
		    
		   // cout<<i<<": "<<ts<<" "<<tim<<" "<<diff1<<" "<<md<<endl;
		}
		cout<<md<<endl;
		//for(int i=0;i<10;i++) cout<<sum[i]<<" "; cout<<endl;
	}
	return 0;
}

