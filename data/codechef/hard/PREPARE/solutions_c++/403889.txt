#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;


bool check(vector<int>& ama, vector<int>& pro, int lim){
  int len = ama.size();
  vector<int> rest;
  //priority_queue<int> rest;
  for(int i = 0; i < len; i++){
    if(ama[i] <= lim)continue;
    rest.push_back(pro[i]);
  }
  /*
  int p0 = 0, p1 = 0;
  sort(rest.begin(), rest.end());
  for(int i = rest.size()-1; i >= 0; i--){
    if(p0 + rest[i] <= lim)p0 += rest[i];
    else p1 += rest[i];
  }
  */
  int sum = 0;
  bool dp[1001];
  for(int i = 0; i < 1001; i++)dp[i] = false;
  dp[0] = true;
  for(int i = 0; i < rest.size(); i++){
    sum += rest[i];
    for(int j = lim - rest[i]; j >= 0; j--)
      dp[j+rest[i]] |= dp[j];
  }
  int p0 = lim;
  while(p0 >= 0 && !dp[p0])p0--;
  int p1 = sum - p0;
  return p0 <= lim && p1 <= lim;
}

int main(){
  int T;
  scanf("%d", &T);
  for(;T;T--){
    int n;
    scanf("%d", &n);
    vector<int> ama;
    vector<int> pro;
    for(int i = 0; i < n; i++){
      int a,b;
      scanf("%d%d",&a,&b);
      ama.push_back(a); pro.push_back(b);
    }
    int left = 0, right = 1000;
    int ans = right;ans++;
    while(left <= right){
      int m = (left+right) / 2;
      if(check(ama, pro, m)){
        if(m < ans)ans = m;
        right = m-1;
      }else{
        left = m+1;
      }
    }
    printf("%d\n", ans);
  }

  return 0;
}
