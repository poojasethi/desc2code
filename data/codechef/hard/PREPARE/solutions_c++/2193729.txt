#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cstdlib>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<cmath>
#include<cctype>
#include<algorithm>
using namespace std;
#define pb push_back
#define mp make_pair
#define cin(n) scanf("%d",&n)
#define gc getchar_unlocked
typedef vector<int> VI;
int fcin(){register int c = gc();int x = 0;for(;(c<48 || c>57);c = gc());for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}return x;}
int dp[1005][1005]; 
vector<int> l; 
int lower,upper; 
int A[1005],B[1005],N;

bool check(int t){
	l.clear(); 
	for(int i=0;i<N;i++)
		if(A[i] > t)
			l.pb(B[i]); 
			
	int num = 0 ; for(int i=0;i<l.size();i++)num+=l[i]; //num = sum(l)
	if (2*t < num)return false; 
	if (t >= num)return true;
	lower = num - t; 
	upper = t;
	
	int n = l.size(); 
	if(n == 0)return true; 
	memset(dp,-1,sizeof dp); 
	for(int v = lower; v<=upper;v++)
		for(int i=0;i<n;i++)
			dp[i][v] = 1;
	
	for(int v = lower-1;v >=0 ;v--){
		dp[0][v] = l[0] + v >= lower && l[0] + v <= upper; 
		for(int i=1;i<n;i++){
			dp[i][v] = max(dp[i-1][v] , l[i] + v <= upper ? dp[i-1][v+l[i]] : 0);
		}
	}
	return dp[n-1][0]; 
}
int main(){
	int tests=fcin();
	while(tests--){
		N=fcin(); 
		int M = 0; 
		for(int i=0;i<N;i++){A[i] = fcin();B[i] = fcin();M=max(M,A[i]);}
		int s=0,e=M,m; 
		while (s<e) {
			m = (s+e)>>1; 
			if(check(m))e=m;
			else s=m+1;
		}
		printf("%d\n",s);
	}
	return 0;
}