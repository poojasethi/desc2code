#include <stdio.h>
#include <string.h>

#define MAXN 2000

int n;
int f1[MAXN], f2[MAXN], f[MAXN];
bool dp[MAXN];

bool can(int mid){
	memset(dp, false, sizeof(dp));
	dp[0] = true;
	int total = 0, sum = 0;
	for(int i = 1; i <= n; ++i)
		if(f1[i] > mid) f[++total] = f2[i], sum += f2[i];
	for(int i = 1; i <= total; ++i)
		for(int j = mid; j >= 0; --j)
			if(dp[j] && j + f[i] <= mid) dp[j + f[i]] = true;
	for(int i = 0; i <= mid; ++i)
		if(dp[i] && sum - i <= mid && dp[sum - i]) return true;
	return false;
}

int main(){
	int cases;
	scanf("%d", &cases);
	for(int caseT = 1; caseT <= cases; ++caseT){
		scanf("%d", &n);
		for(int i = 1; i <= n; ++i)
			scanf("%d%d", f1 + i, f2 + i);
		int low = 1, high = 1000, res = high + 1;
		while(low <= high){
			int mid = (low + high) >> 1;
			if(can(mid))
				res = mid, high = mid - 1;
			else
				low = mid + 1;
		}
		printf("%d\n", res);
	}
	return 0;
}