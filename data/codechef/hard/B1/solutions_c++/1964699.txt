#include <iostream>
#include <algorithm>
#include<string.h>
#include <list>
#include<queue>
#include<vector>
#include <cmath>
#define mp make_pair
using namespace std;
#define pii pair<int,int>
#define x first
#define y second
pii chef,kapa,u,v;
bool was[1005][1005];char s[1005][1005];
int dis[1005][1005],n,m;
int dx[]={-1,0,1,0,-1,-1,1,1};
int dy[]={0,1,0,-1,-1,1,-1,1};
bool check(int t)
{
 if(dis[chef.x][chef.y]<t)return 0;
 queue<pii>q;
 q.push(chef);
 memset(was,0,sizeof(was));
 was[chef.x][chef.y]=1;
 while(!q.empty())
 {
  u=q.front();q.pop();
  if(u==kapa)return 1;
  for(int i=0;i<8;i++)
  {
   v=mp(u.x+dx[i],u.y+dy[i]);
   if(v.x<0||v.x>=n||v.y<0||v.y>=m)continue;
   if(!was[v.x][v.y]&&dis[v.x][v.y]>=t)
   {q.push(v);was[v.x][v.y]=1;}
  }
 }
 return 0;
}
int main()
{
 // freopen("in.txt","r",stdin);
  while(~scanf("%d%d",&n,&m))
  {
   queue<pair<int,int> >q;
   memset(dis,-1,sizeof(dis));
   for(int i=0;i<n;i++)
   {
    scanf("%s",s[i]);
    for(int j=0;j<m;j++)
    if(s[i][j]=='@')chef=mp(i,j);
    else if(s[i][j]=='$')kapa=mp(i,j);
    else if(s[i][j]=='D')q.push(mp(i,j)),dis[i][j]=0;
   }
   while(!q.empty())
   {
    u=q.front();q.pop();
    for(int i=0;i<8;i++)
    {
     v=mp(u.x+dx[i],u.y+dy[i]);
     if(v.x<0||v.x>=n||v.y<0||v.y>=m)continue;
     if(dis[v.x][v.y]==-1)
     {
      dis[v.x][v.y]=dis[u.x][u.y]+1;
      q.push(v);
	 }
	}
   }
   int lo=0,hi=n*m,mid;
   while(lo<=hi)
   {
    mid=(lo+hi)>>1;
    if(check(mid))lo=mid+1;
    else hi=mid-1;
   }
   printf("%d\n",hi);
  }
  return 0;
}
