#include <cstdio>
#include <cstring>
#define N 705
char str[N][N];
int px[N*N],py[N*N],now,nx,ny,e[N*N][4],p0[N*N];
int id[N][N];
int n,m;
int dr[][2]={-2,-2,-2,2,2,-2,2,2};
int vis[N*N];
bool dfs(int u){

    for(int i=0;i<p0[u];i++){
        int v=e[u][i];
        if(vis[v]==now) continue;
        vis[v]=now;
        if(!py[v]||dfs(py[v])){
            py[v]=u;
            px[u]=v;
            return 1;
        }
    }
    return 0;
}

int cal(int x,int y){

    nx=ny=0;
    for(int i=x;i<n;i+=2)
      if(i%4>=2)
        for(int j=(y-2+4)%4;j<m;j+=4)
        if(str[i][j]=='F') id[i][j]=++ny;

    for(int i=x;i<n;i+=2)
     if(i%4<2)
     for(int j=y;j<m;j+=4)
     if(str[i][j]=='F')
     {
         id[i][j]=++nx;
         p0[nx]=0;
         for(int k=0;k<4;k++){
         int a=i+dr[k][0],b=j+dr[k][1];
         if(a<0||b<0||a>n-1||b>m-1) continue;
          if(str[a][b]=='F'&&str[i+dr[k][0]/2][j+dr[k][1]/2]!='P') e[nx][p0[nx]++]=id[a][b];
         }
     }
     for(int j=1;j<=ny;j++) vis[j]=py[j]=0;
     int res=nx+ny;

     for(int i=1;i<=nx;i++){
         px[i]=0;
         for(int j=0;j<p0[i];j++)
         {
             if(!py[e[i][j]])
             {
                 py[e[i][j]]=i,px[i]=e[i][j];res--;
                 break;
             }
         }
    }
    now=1;
    for(int i=1;i<=nx;i++)
    if(!px[i])
    {
        if(dfs(i)) res--,now++;
    }
     return res;
}

int main(){
    while(scanf("%d%d",&n,&m),n|m){
        for(int i=0;i<n;i++) scanf("%s",str[i]);
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
            {
                if(str[i][j]=='F')
                  for(int k=0;k<4;k++){
                      int x=i+dr[k][0],y=j+dr[k][1];
                      if(x<0||y<0||x>n-1||y>m-1) continue;
                      if(str[x][y]=='G'&&str[i+dr[k][0]/2][j+dr[k][1]/2]!='P'){
                      str[i][j]='-';
                      break;
                      }
                  }
            }

        int cnt=0;

        for(int i=0;i<2;i++)
           for(int j=0;j<4;j++) cnt+=cal(i,j);

        printf("%d\n",cnt);
    }
}
