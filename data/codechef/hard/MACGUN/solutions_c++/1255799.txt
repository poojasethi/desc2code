#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define DD puts("!");
using namespace std;
const int inf=19940606;
const int R=710,N=490020,M=2950000;
char str[R][R],g[R][R];
int id[R][R],head[N],next[M],v[M],t;
int q[N*2],disx[N],disy[N],S=0,T,n,m,rex[N],rey[N];
int ans;
int L[N],left=0,RI[N],right;
bool in(int x,int y){return x>=1&&x<=n&&y>=1&&y<=m;}
bool P(int x,int y){return str[x][y]!='P';}
inline void add(int a,int b)
{
	next[++t]=head[a];v[t]=b;head[a]=t;
}
bool bfs()
{
	static int s,h,tail,i;
	h=1;tail=0;
	for(i=1;i<=left;i++)
	{
		if(rex[L[i]]==-1)q[++tail]=L[i];
		disx[L[i]]=0;
	}
	for(i=1;i<=right;i++)disy[RI[i]]=0;
	bool ok=false;
	while(h<=tail)
	{
		s=q[h++];
		for(i=head[s];i;i=next[i])
		if(!disy[v[i]])
		{
			disy[v[i]]=disx[s]+1;
			if(rey[v[i]]==-1)ok=true;
			else disx[rey[v[i]]]=disy[v[i]]+1,q[++tail]=rey[v[i]];
		}
	}
	return ok;
}
bool aug(int x)
{
	int i;
	for(i=head[x];i;i=next[i])
	if(disy[v[i]]==disx[x]+1)
	{
		disy[v[i]]=0;
		if(rey[v[i]]==-1||aug(rey[v[i]]))
		{
			rey[v[i]]=x;
			rex[x]=v[i];
			return true;
		}
	}	
	return false;
}
void sol()
{
	static int i,j,x,y;
	left=right=0;
	S=0;T=0;ans=0;//getchar();
	for(i=1;i<=n;i++)
	scanf("%s",str[i]+1);
	for(i=1;i<=n;i++)
	for(j=1;j<=m;j++)
	g[i][j]=str[i][j];
	for(i=1;i<=n;i++)
	for(j=1;j<=m;j++)
	if(g[i][j]=='G')
	{
		x=i+2;y=j+2;if(in(x,y)&&P(i+1,j+1)&&str[x][y]=='F')str[x][y]='G';
		x=i+2;y=j-2;if(in(x,y)&&P(i+1,j-1)&&str[x][y]=='F')str[x][y]='G';
		x=i-2;y=j+2;if(in(x,y)&&P(i-1,j+1)&&str[x][y]=='F')str[x][y]='G';
		x=i-2;y=j-2;if(in(x,y)&&P(i-1,j-1)&&str[x][y]=='F')str[x][y]='G';
	}
	for(i=1;i<=n;i++)
	for(j=1;j<=m;j++)
	{
		if(str[i][j]=='F')
		{
			id[i][j]=++T;
			if(i%4==1||i%4==2)L[++left]=T;
			else RI[++right]=T;
		}
		else id[i][j]=0;
	}
	memset(rex,-1,sizeof(rex));
	memset(rey,-1,sizeof(rey));
	for(i=1;i<=T;i++)head[i]=0;t=1;
	//for(i=1;i<=n;i++,puts(""))
	//for(j=1;j<=m;j++)printf("%d ",id[i][j]);
	ans=T;
	for(i=1;i<=n;i++)
	for(j=1;j<=m;j++)
	if(id[i][j])
	{
		x=i+2;y=j+2;if(in(x,y)&&P(i+1,j+1)&&id[x][y])
		{
			if(i%4==1||i%4==2)add(id[i][j],id[x][y]);
			else add(id[x][y],id[i][j]);
		}
		x=i-2;y=j+2;if(in(x,y)&&P(i-1,j+1)&&id[x][y])
		{
			if(i%4==1||i%4==2)add(id[i][j],id[x][y]);
			else add(id[x][y],id[i][j]); 
		}
	}
	while(bfs())
	{
		for(i=1;i<=left;i++)
		if(rex[L[i]]==-1&&aug(L[i]))ans--;
	}
	printf("%d\n",ans);
}
int main()
{
	while(scanf("%d%d",&n,&m),n)
	sol();
}
