#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <cstdlib>

using namespace std;

typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,int> pli;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;


#define min(a,b) a<b?a:b
#define max(a,b) a>b?a:b
#define mod(a) a<0?((-1)*a):a

#define PB push_back
#define MP make_pair
#define LB lower_bound
#define UB upper_bound
#define B begin()
#define E end()
#define F first
#define S second
#define rep(i,a,b) for(i=a;i<=b;i++)
#define rem(i,a,b) for(i=a;i>=b;i--)
#define scd(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define scs(x) scanf("%s",x)
#define scc(x) scanf("%c",&x)
#define prd(x) printf("%d\n",x)
#define prl(x) printf("%lld\n",x)
#define prc(x) printf("%c\n",x)
#define prs(x) printf("%s\n",x)
#define parr(a,n) for(int i=1;i<=n;i++) printf("%d ",a[i]);printf("\n")
#define parr1(a,n) for(int i=0;i<n;i++) printf("%d ",a[i]);printf("\n")
unsigned X; // we assume that unsigned is a 32bit integer type
void srand1(unsigned S){
  X = S;
}
unsigned nextInteger1(void){
  X = X * 1103515245 + 12345;
  return (X / 65536) % 32768;
}
void generator1(int N, unsigned S, int A[]){
  srand1(S);
  for(int i=1;i<=N;i++){
    A[i] = nextInteger1() % 2;
  }
  
}
char str[132000][55],str1,st[200005];
int a[55];
int main(){
    unsigned i,t,n,j,limit;
    rep(i,0,131071){
        generator1(33,i,a);
        rep(j,1,33){
            str[i][j-1]=a[j]+'0';
        }
        str[i][33]='\0';
    }
    scd(t);
    while(t--){
        scs(st);
        rep(i,0,131071){
            rep(j,0,32){
                if(str[i][j]!=st[j]){
                    break;
                }
            }
            if(j==33)
                break;
        }
        if(i==131072){
            printf("Xorshift\n");
        }
        else
            printf("LCG\n");

    }
    return 0;
} 
