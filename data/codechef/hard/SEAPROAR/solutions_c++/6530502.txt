#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<cmath>
#define mod 1000000007
using namespace std;
 
unsigned X; // we assume that unsigned is a 32bit integer type
void srand1(unsigned S)
{	X = S;	}
unsigned nextInteger1(void)
{
  X = X * 1103515245 + 12345;
  return (X / 65536) % 32768;
}
//void generator1(int N, unsigned S, int A[])
//{
//  srand1(S);
//  for(int i=1;i<=N;i++){
//    A[i] = nextInteger1() % 2; 
//  }
//}
 
unsigned x, y, z, w; // we assume that unsigned is a 32bit integer type
void srand2(unsigned S)
{	
  x = S;
  y = x * S;
  z = y * S;
  w = z * S;
}
unsigned nextInteger2(void)
{
  unsigned t = x ^ (x << 11);
  x = y; y = z; z = w;
  return w = (w ^ (w >> 19)) ^ (t ^ (t >> 8)); 
}
//void generator2(int N, unsigned S, int A[]){
//  srand2(S);
//  for(int i=1;i<=N;i++){
//    A[i] = nextInteger2() % 2; 
//  }
//}
int main()
{
  std:ios_base::sync_with_stdio(false);
  int t,n,i;
  unsigned s;
  string st;
  cin>>t;
  while(t--)
  {
  	cin>>st;
  	n=st.length();
  	for(s=0;s<=150000;s++)
  	{
  	  srand1(s);
      for(i=1;i<=n;i++)
	  {
	  	if(st[i-1]-'0'!=nextInteger1()%2)
	  	break;
      }
      if(i==n+1)
      	break;
  	}
  	if(s==150001)
  	cout<<"Xorshift\n";
  	else
  	cout<<"LCG\n";
  }
  return 0;
}