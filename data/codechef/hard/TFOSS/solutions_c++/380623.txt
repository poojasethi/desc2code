#include<iostream>
#include<cstdio>
#include<cstring>
#include<cassert>
#include<cctype>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<numeric>
#include<utility>
#include<sstream>
using namespace std;
#define all(a) a.begin(),a.end()
#define pb push_back
#define eps (1e-9)
#define inf (1<<29)
#define SET(a) memset(a,-1,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))
typedef pair<int,int> pii;
#define MAX 100005
#define x first
#define y second
#define i64 long long

pii a[MAX],upper[MAX],lower[MAX];

bool isleft(pii &a,pii &b,pii &c){
  return ((a.x - b.x)*(i64)(b.y - c.y) - (b.x - c.x)*(i64)(a.y - b.y))>0;
}
i64 dist(pii &a,pii &b){
  return (a.x - b.x)*(i64)(a.x - b.x) + (a.y - b.y)*(i64)(a.y - b.y);
}
int main(){
  int t,i,j,k,n;
  scanf("%d",&t);
  
  while(t--){
    scanf("%d",&n);
    for(i = 0;i<n;i++) scanf("%d %d",&a[i].x,&a[i].y);
    if(n == 1){
      puts("0");
      continue;
    }
    sort(a,a+n);
    j = k = 0;
    for(i = 0;i<n;i++){
      while(j>=2 && isleft(upper[j-2],upper[j-1],a[i])) j--;
      while(k>=2 && !isleft(lower[k-2],lower[k-1],a[i])) k--;
      upper[j++] = a[i];
      lower[k++] = a[i];
    }
    //cout<<j<<"**"<<k<<endl;
   // for(i = 0;i<j;i++)
    // cout<<upper[i].x<<" "<<upper[i].y<<endl;
    k--;
    i = 0;
    i64 ans = 0;
    while(i<j-1 || k>0){
    //  cout<<i<<"**"<<k<<endl;
      ans = max(ans,dist(upper[i],lower[k]));
      if(i == j-1)
	k--;
      else if(k == 0)
	i++;
      else{
	if((upper[i].y-upper[i+1].y)*(i64)(lower[k-1].x - lower[k].x)>(lower[k-1].y - lower[k].y)*(i64)(upper[i].x - upper[i+1].x))
	  i++;
	else k--;
      
      }
      
    }
    printf("%lld\n",ans);
  }
  return 0;
}