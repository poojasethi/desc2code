#include <iostream>
#include <algorithm>
#include<string.h>
#include <list>
#include<queue>
#include<vector>
#include <cmath>
#define mp make_pair
using namespace std;
#define pii pair<int,int>
#define x first
#define y second
#define inf 100000000
#define N 100005
#define ll long long
pii p[N],upper[N],lower[N];
bool isleft(pii a,pii b,pii c)
{
 return (c.x-b.x)*(ll)(a.y-b.y)-(c.y-b.y)*(ll)(a.x-b.x)>0;
}
ll dist(pii a,pii b)
{return (b.x-a.x)*(ll)(b.x-a.x)+(b.y-a.y)*(ll)(b.y-a.y);}
int main()
{
  int T,i,j,n,k;
  //freopen("in.txt","r",stdin);
  scanf("%d",&T);
  while(T--)
  {
   scanf("%d",&n);
   for(i=0;i<n;i++)scanf("%d%d",&p[i].x,&p[i].y);
   if(n==1){puts("0");continue;}
   sort(p,p+n);
   j=k=0;
   for(i=0;i<n;i++)
   {
    while(j>=2&&isleft(upper[j-2],upper[j-1],p[i]))j--;
    while(k>=2&&!isleft(lower[k-2],lower[k-1],p[i]))k--;
    upper[j++]=p[i];lower[k++]=p[i];
   }
   k--;i=0;ll mx=0;
   while(i<j-1||k)
   {
   	mx=max(mx,dist(upper[i],lower[k]));
    if(i==j-1)k--;
    else if(k==0)i++;
    else if((upper[i+1].y-upper[i].y)*(ll)(lower[k].x-lower[k-1].x)>(upper[i+1].x-upper[i].x)*(ll)(lower[k].y-lower[k-1].y))i++;
    else k--;
   }
   printf("%lld\n",mx);
  }
  return 0;
}
