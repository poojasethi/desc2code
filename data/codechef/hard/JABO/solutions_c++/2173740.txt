#include<iostream>              //------------------------------------------------------------//
#include<cstdio>                //  ___  ___ _____ ______                                     //
#include<algorithm>             //  |  \/  |/  ___|| ___ \     This C++ Template Belongs to   //                   
#include<cmath>                 //  | .  . |\ `--. | |_/ /        Manish Singh Bisht          //
#include<vector>                //  | |\/| | `--. \| ___ \       http://fb.me/manish05        //    
#include<set>                   //  | |  | |/\__/ /| |_/ /    Email: manish05@facebook.com    //
#include<map>                   //  \_|  |_/\____/ \____/                                     //    
#include<functional>            //------------------------------------------------------------//
#include<string>
#include<cstring>
#include<bitset>
#include<cstdlib>
#include<queue>
#include<utility>
#include<fstream>
#include<sstream>

#include<stack>
#include<cstdio>
#include<ctime>
         

using namespace std;
#define gc getchar_unlocked
#define MEM(a,b) memset(a,(b),sizeof(a))
#define FOR(i,n) for(int i=(0);i<(n);i++)
#define CLEAR(a) memset((a),0,sizeof(a))
#define S(n) scanf("%d", &n)
#define P(k) printf("%d\n", k)
#define fastS(n) scanint(&n)
#define pb push_back
#define mp make_pair
#define ll long long
#define VI vector<int>
#define PII pair<int, int>
#define ft first
#define sd second
#define inf (1<<30)
#define PNL printf("\n")
#define md 1000000007
#define Swap(a,b) {*b = (*a + *b) - (*a = *b);}
#define swap(a,b) Swap(&a,&b)
#define bigger(a,b) {a>b?a:b}
#define smaller(a,b) {a<b?a:b}

void scanint(int *x)
{
    register int c = gc();
    *x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {*x = (*x<<1) + (*x<<3) + c - 48;  }
}

ll modPow(ll a,ll b)
{ll x;
    for(x=1;b>0;b/=2,a=(a*a)%md)
        if(b%2==1)
                x=(x*a)%md;
  return x%md;
}
            
string convertInt(int number){stringstream ss;ss << number;return ss.str();}
int convertString(string s){int num;stringstream sstr(s);sstr>>num;return num;}

int n,r,c;


  int ar[501*2501];
  int v[501*2501];

  int find_rootindex(int a,int chng=-1)
  { 
      if(chng==-1)chng=a;
      
      if(ar[a]<0)
      {
          if(chng!=a)
            ar[chng]=a;
            
          return a;
      }
      else 
      {
          int ans= find_rootindex(ar[a],chng);
          if(ar[ar[a]]>0)ar[a]=ar[ar[a]];
          return ans;
      }
  }
  
  void merge(int a,int b)
  {
      int x=find_rootindex(a),y=find_rootindex(b);
      
      if(x==y) return;
      
          v[y]+=v[x];
          ar[x]=y;
          
  }
  
  
  
  int find(int a,int chng=-1)
  {
      if(chng==-1)chng=a;
      
      if(ar[a]<0)
       {
        if(a!=chng)
         ar[chng]=a;
         
        return v[a];
       }
      else 
      {
       int ans=find(ar[a],chng);
       if(ar[ar[a]]>0)ar[a]=ar[ar[a]];
       return ans;
      }
  }
  
  
  
  void high(int a,int chng=-1)
  {
      if(chng==-1)chng=a;
      
      if(ar[a]<0)
      {
          if(chng!=a)
            ar[chng]=a;
            
         v[a]++; //set root to high
      }
      else 
      {
          high(ar[a],chng);
          if(ar[ar[a]]>0)ar[a]=ar[ar[a]];
      }
  }
  
  void low(int a,int chng=-1)
  {
     if(chng==-1)chng=a;
      
      if(ar[a]<0)
      {
          if(chng!=a)
            ar[chng]=a;
            
            v[a]--; //set root to low
      }
     else {low(ar[a],chng); if(ar[ar[a]]>0)ar[a]=ar[ar[a]];}
  }
 

int getval(char a,char b)
{
    int j,k;
    if(a>='a' && a<='z')
    j=a-'a'+26;
    else
    j=a-'A';
    
    if(b>='a' && b<='z')
    k=b-'a'+26;
    else
    k=b-'A';
    
    return ((j)*52+k)-1;    
}

int main()
{
    
    fastS(n);fastS(r);fastS(c);
    
    MEM(ar,-1);
    MEM(v,0);
        
    int x1,y1,x2,y2,z1,z2;
    char inp[10];
    while(n--)
    {
        
        scanf("%s",inp);
        
        switch(inp[0])
        {
        case 'W':
            x1=getval(inp[1],inp[2]);
            y1=(getval(inp[3],inp[4]))/5;
            x2=getval(inp[5],inp[6]);
            y2=(getval(inp[7],inp[8]))/5;
            
            z1=y1*c + x1;
            z2=y2*c + x2;
            
            merge(z1,z2);
        break;
        case 'V':
            x1=getval(inp[1],inp[2]);
            y1=(getval(inp[3],inp[4]))/5;
            
            z1=y1*c + x1;
            
            high(z1);        
        
        break;
        case 'R':
            x1=getval(inp[1],inp[2]);
            y1=(getval(inp[3],inp[4]))/5;
        
            z1=y1*c + x1;
            
            low(z1); 
        
        break;
        case 'L':
            x1=getval(inp[1],inp[2]);
            y1=(getval(inp[3],inp[4]))/5;
            x2=getval(inp[5],inp[6]);
            y2=(getval(inp[7],inp[8]))/5;
        
            z1=y1*c + x1;
            z2=y2*c + x2;
            
            if((find(z1)>0)^(find(z2)>0))
             printf("ON\n");
            else
             printf("OFF\n");
        break;         
        }
        
        /*DEBUG
        for(int i=0;i<c*r;i++)
        cout<<i<<"->"<<ar[i]<<' ';
        cout<<endl;
        */
        //cout<<x1<<' '<<y1<<' '<<x2<<' '<<y2<<endl;
            
    }
    return 0;
}