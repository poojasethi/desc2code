#include<bits/stdc++.h>
int rep[2000000 + 10];
int v[2000000 + 10];
char s[15];
using namespace std;
void link(int x,int y)
{
    while(rep[x] != x)
    {
        x = rep[x];
    }
    while(rep[y] != y)
    {
        y = rep[y];
    }
    if(x != y)
    {
        rep[max(x,y)] = min(x,y);
        v[min(x,y)] += v[max(x,y)];
    }
}
int value(char x)
{
    if(x>='A' && x<='Z') return x - 'A';
    return x - 'a' + 26;
}
void update(int gp,int val)
{
    while(rep[gp] != gp)
    {
        gp = rep[gp];
    }
    v[gp] += val;
    //printf("value = %d\n",v[gp]);
}
int ispd(int x,int y)
{
    while(rep[x] != x)
    {
        x = rep[x];
    }
    while(rep[y] != y)
    {
        y = rep[y];
    }
    //printf("x = %d y = %d %d %d\n",x,y,v[x],v[y]);
    if(v[x] == 0 && v[y] > 0) return 1;
    if(v[x] > 0 && v[y] == 0) return 1;

    return 0;
}
int main()
{
    int n,r,c;
    int x1,x2,y1,y2;
    int gp1,gp2;
    scanf("%d %d %d",&n,&r,&c);
    int tot = (r + 2)*(c + 2);

    for(int i = 1 ; i<= tot ; i++)
    rep[i] = i;

    for(int i = 1 ; i<=n ; i++)
    {
        gp1 = 0;
        gp2 = 0;
        x1 = y1 = x2 = y2 = -1;
        scanf("%s",s+1);
        switch(s[1])
        {
            case 'W':
            y1 = (value(s[2]))*52 + (value(s[3]));
            x1 = (value(s[4]))*52 + (value(s[5]));
            y2 = (value(s[6]))*52 + (value(s[7]));
            x2 = (value(s[8]))*52 + (value(s[9]));
        //printf("%d %d %d %d\n",y1,x1,y2,x2);

            if(x1%5 == 0) x1 = x1/5;
            else x1 = x1/5 + 1;
            if(x2%5 == 0) x2 = x2/5;
            else x2 = x2/5 + 1;
            gp1 = (y1 - 1)*r + x1;
            gp2 = (y2 - 1)*r + x2;
        //printf("%d %d\n",gp1,gp2);
            link(gp1,gp2);
            break;
            case 'V':
            y1 = (value(s[2]))*52 + (value(s[3]));
            x1 = (value(s[4]))*52 + (value(s[5]));
            y2 = (value(s[6]))*52 + (value(s[7]));
            x2 = (value(s[8]))*52 + (value(s[9]));
        //printf("%d %d %d %d\n",y1,x1,y2,x2);

            if(x1%5 == 0) x1 = x1/5;
            else x1 = x1/5 + 1;
            if(x2%5 == 0) x2 = x2/5;
            else x2 = x2/5 + 1;
            gp1 = (y1 - 1)*r + x1;
            gp2 = (y2 - 1)*r + x2;
        //printf("%d %d\n",gp1,gp2);
            update(gp1,1);
            break;
            case 'R':
            y1 = (value(s[2]))*52 + (value(s[3]));
            x1 = (value(s[4]))*52 + (value(s[5]));
            y2 = (value(s[6]))*52 + (value(s[7]));
            x2 = (value(s[8]))*52 + (value(s[9]));
        //printf("%d %d %d %d\n",y1,x1,y2,x2);

            if(x1%5 == 0) x1 = x1/5;
            else x1 = x1/5 + 1;
            if(x2%5 == 0) x2 = x2/5;
            else x2 = x2/5 + 1;
            gp1 = (y1 - 1)*r + x1;
            gp2 = (y2 - 1)*r + x2;
        //printf("%d %d\n",gp1,gp2);
            update(gp1,-1);
            break;
            case 'L':
            y1 = (value(s[2]))*52 + (value(s[3]));
            x1 = (value(s[4]))*52 + (value(s[5]));
            y2 = (value(s[6]))*52 + (value(s[7]));
            x2 = (value(s[8]))*52 + (value(s[9]));
        //printf("%d %d %d %d\n",y1,x1,y2,x2);

            if(x1%5 == 0) x1 = x1/5;
            else x1 = x1/5 + 1;
            if(x2%5 == 0) x2 = x2/5;
            else x2 = x2/5 + 1;
            gp1 = (y1 - 1)*r + x1;
            gp2 = (y2 - 1)*r + x2;
        //printf("%d %d\n",gp1,gp2);
            int ans = ispd(gp1,gp2);
            if(ans == 1) printf("ON\n");
            else printf("OFF\n");
            break;
        }
        //printf("%d %d\n",gp1,gp2);
        //printf("%d %d %d %d\n",x1,y1,x2,y2);
    }
    return 0;
}
