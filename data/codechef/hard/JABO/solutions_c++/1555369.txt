#define DEBUG 0

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <algorithm>
using namespace std;

pair<int,int> _set[2500][500];
int source[2500][500]={0};

pair<int,int> _find(int x, int y) {
  if(_set[x][y].first==x&&_set[x][y].second==y) return _set[x][y];
  pair<int,int> p1=_find(_set[x][y].first,_set[x][y].second);
  source[p1.first][p1.second]+=source[x][y];
  source[x][y]=0;
  return (_set[x][y]=p1);
}

void _union(int x1, int y1, int x2, int y2) {
  if(DEBUG) printf("union %d,%d %d,%d\n", x1, y1, x2, y2);
  pair<int,int> p1=_find(x1,y1);
  pair<int,int> p2=_find(x2,y2);
  if(p1.first==p2.first&&p1.second==p2.second) return;
  if(rand()%2) {
    source[p2.first][p2.second]+=source[p1.first][p1.second];
    source[p1.first][p1.second]=0;
    _set[p1.first][p1.second]=p2;    
  } else {
    source[p1.first][p1.second]+=source[p2.first][p2.second];
    source[p2.first][p2.second]=0;
    _set[p2.first][p2.second]=p1;
  }
}

int conv(char c1, char c2) {
  int ret;
  if(isupper(c1))
    ret=c1-'A';
  else
    ret=c1-'a'+26;
  if(isupper(c2))
    return (ret*52+c2-'A'-1);
  else
    return (ret*52+c2-'a'+26-1);
}

void led(int x1, int y1, int x2, int y2) {
  if(DEBUG) printf("led %d,%d %d,%d\n", x1, y1, x2, y2);
  pair<int,int> p1=_find(x1,y1);
  pair<int,int> p2=_find(x2,y2);
  if(source[p1.first][p1.second])
    printf("%s\n", source[p2.first][p2.second]?"OFF":"ON");
  else
    printf("%s\n", source[p2.first][p2.second]?"ON":"OFF");
}

void _add(int x1, int y1) {
  if(DEBUG) printf("_add %d,%d\n", x1, y1);
  pair<int,int> p1=_find(x1,y1);
  source[p1.first][p1.second]++;
}

void _rem(int x1, int y1) {
  if(DEBUG) printf("_rem %d,%d\n", x1, y1);
  pair<int,int> p1=_find(x1,y1);
  source[p1.first][p1.second]--;
}

int main(void) {
  int N, Y, X, x, y;
  char s[20];
  scanf("%d%d%d", &N, &Y, &X);
  memset(source,0,sizeof(source));
  for(x=0;x<X;x++)
    for(y=0;y<Y;y++)
      _set[x][y]=make_pair(x,y);
  while(N--) {
    scanf("%s", s);
    if(s[0]=='W') _union(conv(s[1],s[2]),conv(s[3],s[4])/5,conv(s[5],s[6]),conv(s[7],s[8])/5);
    else if(s[0]=='V') _add(conv(s[1],s[2]),conv(s[3],s[4])/5);
    else if(s[0]=='R') _rem(conv(s[1],s[2]),conv(s[3],s[4])/5);
    else if(s[0]=='L') led(conv(s[1],s[2]),conv(s[3],s[4])/5,conv(s[5],s[6]),conv(s[7],s[8])/5);
  }
  if(DEBUG)
    for(x=0;x<X;x++)
      for(y=0;y<Y;y++)
	printf("%d,%d _set=%d,%d source=%d\n", x, y, _set[x][y].first, _set[x][y].second, source[_set[x][y].first][_set[x][y].second]);
  return 0;
}
