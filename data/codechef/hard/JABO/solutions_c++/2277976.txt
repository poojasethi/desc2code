#include<stdio.h>

int a[501][2501],rank[501*2501],set_size[501*2501],parent[501*2501];
int numsets;

void init(int r,int c)
{
              numsets = r*c;
              
              int st = 0;
              
              for(int i=0;i<r;i++)
                      for(int j=0;j<c;j++)
                              a[i][j] = st++;
                              
              for(int i=0;i<st;i++)
              {
                      parent[i]=i;
                      rank[i]=0;
                      set_size[i]=0;
              }
              
              return ;
}

int find_set(int i)
{
                 if(parent[i]==i)
                                 return i;
                  
                 return parent[i]=find_set(parent[i]);    
}

void add(int x)
{
                 set_size[find_set(x)]++;     
}

void remove(int x)
{
                 set_size[find_set(x)]--;     
}

int voltcount(int x)
{
                  return set_size[find_set(x)];
}

void union_set(int x,int y)
{
                   int p1=find_set(x);
                   int p2=find_set(y);

                   if(p1==p2)return ;
                   
                   if(rank[p1]==rank[p2])
                                        rank[p1]+=1;
                   else if(rank[p1]<rank[p2])
                   {
                                             int t = p1;
                                             p1 = p2;
                                             p2 = t;     
                   }
                   
                   parent[p2]=p1;
                   
                   set_size[p1]+=set_size[p2];
                   
                   numsets-=1;
              
}
int f[256];

int main()
{
          for(char c='a';c<='z';c++)
                   f[c] = c-'a'+26;
          
          for(char c='A';c<='Z';c++)
                   f[c] = c-'A';
                  
          
          int n,r,c1;
          
          scanf("%d %d %d",&n,&r,&c1);

          //n=getint(),r=getint(),c1=getint();
          init(r,c1);
          
          for(int i=0;i<n;i++)
          {
                              char c[100];
                              scanf("%s",c);
                              
                              int x1=0,y1=0,x2=0,y2=0;
                              
                              if(c[0]=='W')
                              {
                                        
                                        x1=(f[c[1]])*52+(f[c[2]])-1;
                                        y1=(f[c[3]])*52+(f[c[4]])-1;
                                        x2=(f[c[5]])*52+(f[c[6]])-1;
                                        y2=(f[c[7]])*52+(f[c[8]])-1;
                                        
                                        union_set(a[y1/5][x1],a[y2/5][x2]);         
                              }
                              else if(c[0]=='V')
                              {
                                        x1=(f[c[1]])*52+(f[c[2]])-1;
                                        y1=(f[c[3]])*52+(f[c[4]])-1;
                                        add(a[y1/5][x1]);
                              }
                              else if(c[0]=='R')
                              {
                                        x1=(f[c[1]])*52+(f[c[2]])-1;
                                        y1=(f[c[3]])*52+(f[c[4]])-1;
                                        remove(a[y1/5][x1]);
                              }
                              else 
                              {
                                       x1=(f[c[1]])*52+(f[c[2]])-1;
                                       y1=(f[c[3]])*52+(f[c[4]])-1;
                                       x2=(f[c[5]])*52+(f[c[6]])-1;
                                       y2=(f[c[7]])*52+(f[c[8]])-1;
                                       
                                       int c1 = voltcount(a[y1/5][x1]),c2 = voltcount(a[y2/5][x2]);
                                        
                                       //cout<<c1<<" "<<c2<<"\n";
                                       printf("%s\n",(((c1>0) ^ (c2>0))?"ON":"OFF"));
                              }         
                              
                              //cout<<c[0]<<" "<<x1<<" "<<y1<<" "<<x2<<" "<<y2<<"\n";
                              
                              
          }         
          
          
          scanf("\n");
          return 0;    
}
