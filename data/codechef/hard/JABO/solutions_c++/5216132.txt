#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<algorithm>
#define ll long long int
#define P(n) printf("%lld",n)
#define Ps(n) printf("%s",n)
#define Pc(n) printf("%c",n)
#define PS() printf(" ")
#define Pn() printf("\n")
#define Sl(n) scanf("%lld",&n)
#define Si(n) scanf("%d",&n)
#define Sc(n) scanf("%c",&n)
#define Ss(n) scanf("%s",&n)
#define pb push_back
#define mp make_pair
#define pll pair< ll, ll >
#define vl vector< ll >
#define v2l vector< vl >
#define repG(start,end,diff,var) for(var=start;var<end;var+=diff)
#define repL(start,end,diff,var) for(var=start;var>end;var-=diff)
#define TESTCASE ll t;Sl(t);while(t--)
using namespace std;

int N,R,C,i,j,k,l;
//int a[505][2505];
//vector< vector< pair<int,int> > >Parent;
pair<int,int> Parent[2505][505];
bool Voltage=false;
int voltage[2505][505]={0};
char s[25];

pair<int,int> find(int xxx,int yyy){
	if(Parent[xxx][yyy].first==xxx && Parent[xxx][yyy].second==yyy)return Parent[xxx][yyy];
	pair<int,int> ppp=find(Parent[xxx][yyy].first,Parent[xxx][yyy].second);
	voltage[ppp.first][ppp.second]+=voltage[xxx][yyy];
	voltage[xxx][yyy]=0;
	 return (Parent[xxx][yyy]=ppp); 
}

void Union(int first,int second,int third, int fourth){
	pair<int,int> pp1=find(first,second);
	pair<int,int> pp2=find(third,fourth);

	if(pp1.first==pp2.first && pp1.second==pp2.second)return;
	
	if(rand()%2){	
		Parent[pp1.first][pp1.second]=pp2;
		voltage[pp2.first][pp2.second]+=voltage[pp1.first][pp1.second];
		voltage[pp1.first][pp1.second]=0;}
	else{
		Parent[pp2.first][pp2.second]=pp1;
		voltage[pp1.first][pp1.second]+=voltage[pp2.first][pp2.second];
		voltage[pp2.first][pp2.second]=0;
		}
}


void addVoltage(int xx1,int yy1){
	pair<int,int> xxxy=find(xx1,yy1);
//	cout<<xxxy.first<<" "<<xxxy.second<<endl;
	voltage[xxxy.first][xxxy.second]++;
}
void removeVoltage(int xx1,int yy1){
	pair<int,int> xxxy=find(xx1,yy1);
	voltage[xxxy.first][xxxy.second]--;
}
void LED(int xx1,int yy1,int xx2,int yy2){
	pair<int ,int >xxxy1=find(xx1,yy1);
	pair<int ,int >xxxy2=find(xx2,yy2);
//	cout<<xx1<<" "<<yy1<<" "<<xxxy1.first<<" "<<xxxy1.second<<" "<<xx2<<" "<<yy2<<" "<<xxxy2.first<<" "<<xxxy2.second<<endl;
	if(voltage[xxxy1.first][xxxy1.second])
  	  printf("%s\n", voltage[xxxy2.first][xxxy2.second]?"OFF":"ON");
 	 else
  	  printf("%s\n", voltage[xxxy2.first][xxxy2.second]?"ON":"OFF");

	
}

int getCoord(char A,char B){
	int tx,ty;
	if(A>=65 && A<=90){
		tx=A-65;
	}
	else{
		tx=A-97+26;
	}
	if(B>=65 && B<=90){
		ty=B-65-1;
	}
	else{
		ty=B-97+26-1;
	}
	return (tx*52)+ty;
}

int main(){

	Si(N);Si(R);Si(C);
	memset(voltage,0,sizeof(voltage));
	repG(0,C+1,1,i){
	//	Parent.pb(vector< pair<int,int> >());
		repG(0,R+1,1,j){
			Parent[i][j]=mp(i,j);
		}
	}
	repG(0,N,1,i){
		Ss(s);
		
		if(s[0]=='W'){
			Union(getCoord(s[1],s[2]),getCoord(s[3],s[4])/5,getCoord(s[5],s[6]),getCoord(s[7],s[8])/5);
		}
	else	if(s[0]=='V'){
			addVoltage(getCoord(s[1],s[2]),getCoord(s[3],s[4])/5);
		}
	else	if(s[0]=='R'){
			removeVoltage(getCoord(s[1],s[2]),getCoord(s[3],s[4])/5);
		}
	else	if(s[0]=='L'){
			LED(getCoord(s[1],s[2]),getCoord(s[3],s[4])/5,getCoord(s[5],s[6]),getCoord(s[7],s[8])/5);
		}
		
	}
	

	return 0;
}