#include<iostream>
#include<cstdio>
using namespace std;
 
int rank[2000000];
int parent[2000000];
int potential[2000000];
 
void makeSet(int v){
    parent[v]=v;
    //rank[v]=0;
    //potential[v]=false;
}
 
int findSet(int v){
    return (v==parent[v])?v:(parent[v]=findSet(parent[v]));
}
 
bool unionSet(int a,int b){
    a=findSet(a);
    b=findSet(b);
    if(a==b)
        return false;
 
    if(rank[a]>rank[b]){
        parent[b]=a;
        potential[a]+=potential[b];
    }
    else{
        parent[a]=b;
        potential[b]+=potential[a];
        if(rank[a]==rank[b])
            rank[b]++;
    }
        
    return true;
}
        
 
int main(){
    int  n,r,c;
    int map[128];
    for(int i=0;i<26;i++){
        map['A'+i]=i;
        map['a'+i]=i+26;
    }
    
    char str[10];
	scanf("%d %d %d",&n,&r,&c);
    for(int i=0;i<r*c;i++)
        makeSet(i);
 
    while(n--){
		scanf("%s",str);
        if(str[0]=='W'){
            int c1=map[str[1]]*52+map[str[2]];
            int r1=map[str[3]]*52+map[str[4]];
            int c2=map[str[5]]*52+map[str[6]];
            int r2=map[str[7]]*52+map[str[8]];
            r1--;c1--;r2--;c2--;
            r1/=5;r2/=5;
            //cout<<r1<<' '<<c1<<' '<<r2<<' '<<c2<<endl;
            unionSet(r1*c+c1,r2*c+c2);
            
        }
        else if(str[0]=='L'){
            int c1=map[str[1]]*52+map[str[2]];
            int r1=map[str[3]]*52+map[str[4]];
            int c2=map[str[5]]*52+map[str[6]];
            int r2=map[str[7]]*52+map[str[8]];
            r1--;c1--;r2--;c2--;
            r1/=5;r2/=5;
            //cout<<r1<<' '<<c1<<' '<<r2<<' '<<c2<<endl;
            if((potential[findSet(r1*c+c1)]>0)^(potential[findSet(r2*c+c2)]>0))
                printf("ON\n");
            else
                printf("OFF\n");
        }
        else if(str[0]=='V'){
            int c1=map[str[1]]*52+map[str[2]];
            int r1=map[str[3]]*52+map[str[4]];
            r1--;c1--;
            r1/=5;
            //cout<<r1<<' '<<c1<<endl;
            potential[findSet(r1*c+c1)]++;
        }
        else if(str[0]=='R'){
            int c1=map[str[1]]*52+map[str[2]];
            int r1=map[str[3]]*52+map[str[4]];
            r1--;c1--;
            r1/=5;
            //cout<<r1<<' '<<c1<<endl;
            potential[findSet(r1*c+c1)]--;
        }
    }
}  
