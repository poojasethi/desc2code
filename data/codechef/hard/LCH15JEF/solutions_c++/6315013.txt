#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<ll> vin;
typedef vector<string> vs;
typedef vector<vector<ll> > vvin;
typedef vector<bool> vb;

#define REP(i,a,b) for(ll i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define BREP(i,a,b) for(ll i=a-1;i>=b;i--)
#define brep(i,n) BREP(i,n,0)
#define pb push_back
#define inf 999999999
#define mp make_pair
#define sz size()
#define DEBUG 0
#define all(vec) (vec).begin(),(vec).end()
#define first fi
#define second se
#define POPCOUNT __builtin_popcountll
#define CLR(x,y) memset(x,y,sizeof(x))
#define UNIQUE(V) (V).erase(unique((V).begin(),(V).end()),(V).end())
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define NUMDIGIT(x,y) (((int)(log10((x))/log10((y))))+1)
#define SQ(x) ((x)*(x))
#define ABS(x) ((x)<0?-(x):(x))
#define FABS(x) ((x)+eps<0?-(x):(x))
#define LCM(x,y) (((x)/gcd((x),(y)))*(y))
#define mset(a,b) memset(a,b,sizeof a)
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
ll MOD;

long long mult(long long A, long long B) {
	if ( B == 0 ) return 0;
	long long u = mult(A, B/2);
	long long res;
	if ( B%2 == 0 ) 
		res = u + u;
	else
		res = u + u + A;
	//while ( res >= MOD ) res -= MOD;
	return res%MOD;
}

void solve() {
    string s;
    ll len,partRes1,partRes2,ans;
    cin>>MOD>>s;
    ans=1%MOD;
    len=s.sz;
    rep(i,len) {
        //calcluate A%MOD 
        ll A = 0;
		ll j = i;
		while( s[j] >= '0' && s[j] <= '9' ) {
			A = mult(A, 10);
			A += s[j]-'0';
			A %= MOD;
			j++;
		}
		j++;
		j++;
		
		//calculate (A%MOD)^B
		partRes2=1%MOD;
		while( s[j] >= '0' && s[j] <= '9' ) {
		    partRes1=1%MOD;
		    rep(k,10)
		        partRes1=mult(partRes1,partRes2);
		    partRes2=partRes1;
		    rep(k,(s[j]-'0'))
		        partRes2=mult(partRes2,A);
		    j++;
		}
		ans=mult(ans,partRes2);
		i=j;
    }
    cout<<ans<<endl;
}

int main() {
    std::ios::sync_with_stdio(false);
    int tc;
    cin>>tc;
    while(tc--)
        solve();
    return 0;
}