#include<iostream>
#include<cstring>

using namespace std;

long long coff[15];
int d ;
long long x;
long long func[1000];
long long mod;

long long dp[901][501];
void store( int n)
{
     
     int i , j;
     long long a , X;
     
     for (  i = 0; i <= n; i++ ) {
         a = 0;
         X = ( i * x ) % mod;
         for ( j = d; j >= 0; j-- ) {
            a = ( coff[j] + X * a )% mod;
         }
         func[i] = a % mod;
     }
}

long long solve( int n , int m )
{
    if( m == 1 ) {
        return func[n];
    }
    
    if( dp[n][m] != -1 )
        return dp[n][m];
    
    long long ans = 0 , t1 , t2;
    int i;
    
    for ( i = 0; i <= n; i++ ) {
        t1 = solve( i , m / 2 );
        t2 = solve( n - i , m - m / 2 );
        ans = ans + ( t1 * t2  ) % mod;
        ans = ans % mod;
    }
    
    ans = ( ans + mod )% mod;
    dp[n][m] = ans;
    
    return ans;
}
int main()
{
    int t , n;
    cin >> t;
    mod = 1000000007;
    int m  , i ,  ans;
    long long k;
    while( t )
    {
           t--;
           cin >> m >> n >> x >> d;   
           for ( i = 0; i <= d; i++ ) {
                cin >> k;
                coff[i] = k;
           }
           memset( dp , -1 ,sizeof( dp ) );
           store( n );
           
           ans = solve( n , m );
           
           cout << ans << "\n";
    }
    
    return 0;
}
