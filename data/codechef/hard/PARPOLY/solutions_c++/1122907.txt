#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<iomanip>
#include<utility>
#include<map>
#include<cmath>
#include<vector>
#include<queue>
#include<string>
#include<algorithm>
#include<fstream>
 
using namespace std;
 
#define mod 1000000007
 
double val=0.0;
long long int  coeff[20];
int D;
long long int B[1000];
long long int C[1000];
long long int Matrix[1000];
long long int A[1000];
long long int Z[1000];
 
long long int power(long long int r,long long int p)
{
        long long int toret=1;
        while(p>0)
        {
                if(p%2 != 0)
                {
                  toret = (toret*r)%mod;
                }
                r = (r*r)%mod;
                p =p/2;
        }
        return toret;
}
 
long long int calc(int r)
{
        long long int ans = 0;
        for(int i=0;i<=D;i++)
        {
                ans = (ans+(coeff[i]*power(r,i))%mod)%mod;
        }
        return ans;
}
 
long long int  polpar(int N,int M ,long long int X,long long int  Matrix[1000])
{
 
        for(int i=0;i<=N;i++)
        {
                        C[i] = Matrix[i];
                        B[i]=0;
                        A[i] = 0;
        }
        A[0]=1;
        
        
         
        
        
        while(M > 0 )
        {
                if(M % 2 != 0)
                {
                                for(int j=0;j<=N;j++)
                                {
                                        for(int k=j,l=0;k>=0;k--,l++)
                                        {
                                                B[j]=(B[j]+ (A[l]*C[k])%mod)%mod; 
                                               
                                        }
                                     //    printf("B[%d]=%d\n",j,B[j]);
                                }
                        for(int i=0;i<=N;i++)
                        {
                                A[i]=B[i];
                                B[i]=0;
                        }
                }
                                for(int j=0;j<=N;j++)
                                {
                                        for(int k=j,l=0;k>=0;k--,l++)
                                        {
                                                B[j]=(B[j]+ (C[l]*C[k])%mod)%mod; 
                                        }
                                      //  printf("B[%d]=%d\n",j,B[j]);
                                }
                        for(int i=0;i<=N;i++)
                        {
                                C[i]=B[i];
                                B[i]=0;
                        }
                M/=2;
        }
        long long int toret = 0;
        for(int i=0;i<=N;i++)
        {
               // cout<<i<<" "<<A[i]<<" "<<Z[i]<<endl;
                toret = (toret + (A[i]*Z[i])%mod)%mod;
        }
          return toret;
}

int main()
{
        int t;
        long long int N,M;
        long long int X;
        cin >>  t;
        while(t--)
        {
                val = 0.0;
                scanf("%lld%lld%lld%d",&M,&N,&X,&D);
                for(int i=0;i<=D;i++)
                        scanf("%lld",&coeff[i]);
                for(int i=0;i<=N; i++)
                {
                        long long int topass = (i*X)%mod;
                        Matrix[i] = calc(topass);
                        Z[N-i] = Matrix[i];
                }
                
                

                long long int mainans = polpar(N,M-1,X,Matrix);
                printf("%lld\n",mainans);
                memset(Matrix,0,sizeof(Matrix));
        }
        return 0;
}
 
