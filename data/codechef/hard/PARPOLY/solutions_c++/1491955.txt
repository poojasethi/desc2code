#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <bitset>
#include <vector>
#include <stack>
#include <list>
#include <utility>
#include <queue>
#include <set>
#include <map>
using namespace std;

typedef long long ll;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VP;
typedef vector<string> VS;

#define FOR(i,a,b) for(i=(a);i<(b);i++)
#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ALL(x) x.begin(),x.end()
#define CLR(x, v) memset((x),v,sizeof (x))
#define gcd(a, b) __gcd(a, b)
#define PB push_back 
#define MP make_pair
#define INF 2000000007

int toInt(string s){ istringstream sin(s); int t; sin>>t; return t; }
template<class T> string toString(T x){ ostringstream sout; sout<<x; return sout.str(); }
template<class T> void chmin(T &t, T f) { if (t > f) t = f; }
template<class T> void chmax(T &t, T f) { if (t < f) t = f; }
#define MOD 1000000007
ll f[1000][1000];
int d, c[15];
ll eval(ll x)
{
	x %= MOD;
	ll p = 1, ret = 0;
	int i;
	FOR(i,0,d+1) {
		ret += p*c[i];
		ret %= MOD;
		p *= x;
		p %= MOD;
	}
	return ret;
}
ll solve(int n, int m)
{
	int k = m/2;
	int i;
	ll &ret = f[n][m];
	if(ret >= 0) return ret;
	ret = 0;
	FOR(i,0,n+1) {
		ret += solve(i,k)*solve(n-i,m-k);
		ret %= MOD;
	}
	return ret;
}
int main()
{
	int T;
	scanf("%d", &T);
	while(T--) {
		int m, n;
		ll x;
		scanf("%d%d%lld",&m,&n,&x);
		scanf("%d", &d);
		int i, j;
		FOR(i,0,d+1) scanf("%d", c+i);
		CLR(f,-1);
		FOR(i,0,n+1) f[i][1] = eval(x*i);
		printf("%lld\n", solve(n,m));
	}
	return 0;
}
