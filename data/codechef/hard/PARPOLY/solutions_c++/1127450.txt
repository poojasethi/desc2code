#include<iostream>
#include<fstream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define REP(i,n) FOR(i,0,n)
#define pb push_back
#define mp make_pair
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)

#define LL long long
/*Main Code*/
#define M 1000000007LL
LL dp[501][901];
LL vals[900];

LL poly[12];
int d;
LL x;
LL getval(int i)
{
	LL a=0;
	LL X=(i*x)%M;
	for(int i=d;i>=0;--i)
	{
		a=(poly[i]+X*a)%M;
		//c=(c*X)%M;
	}
	return a%M;
}

LL solve(int m, int n)
{
	if(dp[m][n]!= -1)return dp[m][n];
	if(m==1)return vals[n];
	
	LL res=0,t1,t2;
	REP(i,n+1)
	{
		t1=solve(m/2,i);
		t2=solve(m-m/2,n-i);
		res+=(t1*t2)%M;
		//if(res>=M)res-=M;
	}
	res=(res+M)%M;
	dp[m][n]=res;
	return dp[m][n];
}
int main()
{
	int t,n,m;
	for(s(t);t--;)
	{
		scanf("%d%d%lld",&m,&n,&x);
		s(d);
		REP(i,d+1)sl(poly[i]);
		REP(i,n+1)vals[i]=getval(i);
		//memset(dp,-1,sizeof(dp));
		REP(i,m+1)REP(j,n+1)dp[i][j]=-1;
		printf("%lld\n",solve(m,n));
	}
	return 0;
}
