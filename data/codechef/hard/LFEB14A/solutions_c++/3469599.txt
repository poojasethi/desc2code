/* 
 * File:   LFEB14A.cpp
 * Author: anuraganand
 * Created on 24 February, 2014, 12:28 AM
 */

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>

using namespace std;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef long double ld;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0;(i) < (n);  ++i)
#define rept(i,a,b) for(var(i,a); i < (b); ++i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
#define fill(a,val) memset(a,val,sizeof(a))
#define gi(n) scanf("%d",&n);
#define all(v) v.begin(),v.end()

const int N = 100100;

int f[N], a[N], b[N];

void add(int idx, int val) {
    while(idx < N) {
        f[idx] += val;
        idx += idx & -idx;
    }
}

int get(int idx) {
    int sum = 0;
    while(idx > 0) {
        sum += f[idx];
        idx -= idx & -idx;
    }
    return sum;
}

int main(int argc, char** argv) {
#ifdef LOCAL
    freopen("in.txt", "r", stdin);
#endif
    int tt; gi(tt);
    while(tt--) {
        int n, m;
        gi(n); gi(m);
        rep(i, n) gi(a[i]);
        rep(i, m) gi(b[i]);
        fill(f, 0);
        double exp = 0.0;
        for(int i = n - 1; i >= 0; i--) {
            exp += get(a[i] - 1);
            add(a[i], +1);
        }
        fill(f, 0);
        rep(i, m) add(b[i], +1);
        rep(i, n) {
            double p = (i + 1) / (double)(n + 1);
            exp += (1 - p) * get(a[i] - 1) + p * (m - get(a[i]));
        }
        rep(i, m) {
            exp += 0.5 * get(b[i] - 1);
        }
        printf("%.10lf\n", exp);
    }
    return 0;
}

