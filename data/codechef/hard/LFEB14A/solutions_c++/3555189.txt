//Coder: Balajiganapathi
//#define TRACE
#define DEBUG

#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;

// Basic macros
#define st          first
#define se          second
#define all(x)      (x).begin(), (x).end()
#define ini(a, v)   memset(a, v, sizeof(a))
#define re(i,s,n)  	for(int i=s;i<(n);++i)
#define rep(i,s,n)  for(int i=s;i<=(n);++i)
#define fr(i,n)     re(i,0,n)
#define repv(i,f,t) for(int i = f; i >= t; --i)
#define rev(i,f,t)  repv(i,f - 1,t)
#define frv(i,n)    rev(i,n,0)
#define pu          push_back
#define mp          make_pair
#define sz(x)       (int)(x.size())

const int oo = 2000000009;
const double eps = 1e-9;

#ifdef TRACE
    #define trace1(x)                cerr << #x << ": " << x << endl;
    #define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
    #define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
    #define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
    #define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
    #define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

    #define trace1(x)
    #define trace2(x, y)
    #define trace3(x, y, z)
    #define trace4(a, b, c, d)
    #define trace5(a, b, c, d, e)
    #define trace6(a, b, c, d, e, f)

#endif


const int mx = 100005;

const int mx_bit = mx;
typedef ll bit_type;

bit_type bit_array[mx_bit];
bit_type read(int idx) {
    bit_type sum = 0;
    while (idx > 0) {
        sum += bit_array[idx];
        idx -= (idx & -idx);
    }
    return sum;
}

void update(int idx , bit_type val) {
    while (idx < mx_bit) {
        bit_array[idx] += val;
        idx += (idx & -idx);
    }
}

double c1[mx], c2[mx];
int a[mx], b[mx];

int main() {
    int t, n, m;
    scanf("%d", &t);
    while(t--) {
        scanf("%d %d", &n, &m);
        fr(i, n) scanf("%d", a + i);
        fr(i, m) scanf("%d", b + i);
        double aa, bb, ab;
        aa = bb = ab = 0;

        ini(bit_array, 0);
        fr(i, n) {
            aa += i - read(a[i]);
            update(a[i], 1);
        }
        ini(c1, 0);
        fr(i, m) {
            bb += i - c1[b[i]];
            ++c1[b[i]];
        }
        bb /= 2;

        ini(c1, 0); ini(c2, 0);

        fr(i, n) {
            c1[a[i]] += i + 1;
            c2[a[i]] += n - i;
        }
        
        re(i, 1, mx) c1[i] += c1[i - 1];
        for(int i = mx - 2; i >= 0; --i) c2[i] += c2[i + 1]; 

        fr(i, m) ab += c1[b[i] - 1] + c2[b[i] + 1];
        ab /= (n + 1);
        trace3(aa, bb, ab);

        printf("%.08lf\n", aa + bb + ab);
    }
    
	return 0;
}
