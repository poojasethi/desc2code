#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <complex>
#include <queue>
using namespace std;
#define For(i,a,b) for(int i=a;i<=b;i++)
#define Ford(i,a,b) for(int i=a;i>=b;i--)
#define fi first
#define se second
#define sr(x) (int)x.size()
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; For(_,a,b) cout << x[_] << ' '; cout << endl;}
#define Bit(s,i) ((s&(1<<i))>0)
#define Two(x) (1<<x)
const int modul = 1000000007;
const int nmax = 100010;
const double e = 1e-8;
const double pi = acos(-1);
typedef long long ll;
typedef pair<int,int> pii;
int n,m,stest,bit[nmax],a[nmax],b[nmax];
void add(int i,int x) {
    for (;i<=100000;i+=i&(-i)) bit[i]+=x;
}
int query(int i) {
    int x=0;
    for (;i>0;i-=i&(-i)) x+=bit[i];
    return x;
}
int main() {
    //freopen("input.txt","r",stdin);
    ios::sync_with_stdio(false);
    for (cin >> stest;stest;stest--) {
        cin >> n >> m;
        For(i,1,100000) bit[i]=0;
        For(i,1,n) cin >> a[i];
        For(i,1,m) cin >> b[i];

        double res=0;
        Ford(i,n,1) {
            res+=query(a[i]-1);
            add(a[i],1);
        }
        ll sol =  (ll)m*(m-1)/2;
        //BUG(res);

        sort(b+1,b+m+1);
        //PR(b,1,m);
        int i=1;
        while (i<=m) {
            int j=i;
            while (j<=m && b[j]==b[i]) j++;
            sol-= (ll)(j-i)*(j-i-1)/2;
            i=j;
        }
        //BUG(sol);
        res+=sol*0.5;
        For(i,1,n) {
            int j = lower_bound(b+1,b+m+1,a[i])-b;
            j--;
            res+=(1.0*(n-i+1)/(n+1)) * j;
        }

        For(i,1,n) {
            int j = upper_bound(b+1,+b+m+1,a[i])-b;
            res+=(1.0 * i/(n+1)) * (m-j+1);
        }

        printf("%.8lf\n",res);
    }
    return 0;
}




