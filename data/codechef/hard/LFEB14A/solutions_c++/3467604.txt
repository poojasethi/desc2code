#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>

using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back

typedef long long ll;
typedef long double real;
typedef pair<int,int> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int N=131072;
int T[N+1];
void A(int i,int x){for(;i<=N;i+=i&-i)T[i]+=x;}
int S(int i){int ans=0;for(;i>0;i-=i&-i)ans+=T[i];return ans;}
int cases,n,m,p,i,j,a[N+1],b[N+1],cntb[N+1];
real pA,pB,tot;

struct seg
{
	int en[4*N];ll sum[4*N];
	void pen(int i,int x,int y,int s){en[i]+=s;sum[i]+=1LL*(y-x+1)*s;}
	void pdown(int i,int x,int y){pen(i*2,x,(x+y)/2,en[i]);pen(i*2+1,(x+y)/2+1,y,en[i]);en[i]=0;}
	void upd(int i){sum[i]=sum[i*2]+sum[i*2+1];}
	void find(int i,int x,int y,int l,int r,int s)
	{
		if(y<l||x>r)return;
		if(x>=l&&y<=r){pen(i,x,y,s);return;}
		pdown(i,x,y);
		find(i*2,x,(x+y)/2,l,r,s);
		find(i*2+1,(x+y)/2+1,y,l,r,s);
		upd(i);
	}
}Z;
int main()
{
    //freopen("1.in","r",stdin);
	//freopen("1.out","w",stdout);
for(read(cases);cases;cases--)
{
	read(n);read(m);
	CL(cntb,0);pA=pB=tot=0;
	CL(T,0);rep(i,1,n)read(a[i]);
	_rep(i,n,1)pA+=S(a[i]-1),A(a[i],1);
	rep(i,1,m)read(b[i]),cntb[b[i]]++;
	rep(i,1,N)cntb[i]+=cntb[i-1];
	rep(i,1,m)pB+=(m-cntb[b[i]]);pB/=2;
	sort(b+1,b+1+m);
	
	tot=0;
	CL(Z.en,0);CL(Z.sum,0);
	rep(i,1,n)
	{
		p=lower_bound(b+1,b+1+m,a[i])-b-1;
		if(p)Z.find(1,1,m,1,p,1);
		tot+=Z.sum[1];
	}
	CL(Z.en,0);CL(Z.sum,0);
	_rep(i,n,1)
	{
		p=upper_bound(b+1,b+1+m,a[i])-b;
		Z.find(1,1,m,p,m,1);
		tot+=Z.sum[1];
	}
	
	tot/=(n+1);
	cout<<fixed<<setprecision(9)<<tot+pA+pB<<endl;
}
    scanf("\n");
    return 0;
}
