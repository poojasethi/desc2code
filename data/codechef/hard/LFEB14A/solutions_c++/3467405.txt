#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef long long int LL;

const int MAXN = 100001;
int BIT[MAXN];
int A[MAXN];
int B[MAXN];
int SM[MAXN];

void update(int idx,int val) {
	for(int i = idx; i < MAXN; i += i & -i) BIT[i] += val;
}

int query(int idx) {
	int res = 0;
	for(int i = idx; i; i -= i & -i) res += BIT[i];
	return res;
}

int main() {
	int tc;
	S(tc);
	while(tc--) {
		int n,m;
		scanf("%d%d",&n,&m);
		double ans = 0;
		memset(BIT, 0, sizeof(BIT));
		memset(SM, 0, sizeof(SM));
		rep(i,0,n) {
			S(A[i]);
			ans += i-query(A[i]);
			update(A[i],1);
		}
		rep(i,0,m) {
			S(B[i]);
			SM[B[i]]++;
		}
		rep(i,1,MAXN) SM[i] += SM[i-1];
		sort(B,B+m);
		double tmp = 0;
		int prev = -1;
		rep(i,1,m) {
			if(B[i] != B[i-1]) prev = i-1;
			tmp += prev+1;
		}
		ans += tmp/2;
		rep(i,0,n) {
			ans += (double)((double)m-(double)SM[A[i]]) * ((double)(i+1.0)/(n+1.0));
			ans += (double)SM[A[i]-1] * (double)(((double)n-i)/(n+1));
		}
		printf("%0.9lf\n",ans);
	}
	return 0;
}