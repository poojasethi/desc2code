#include <bits/stdc++.h>
using namespace std;

const int N = 100010;
int lowbit(int x) { return x & (-x); }
long long a[4][N];
int b[N],c[N];

void insert(int x,int y,long long a[])
{
    for(int i = x; i < N; i += lowbit(i)) a[i] += y;
}

long long query(int x,long long a[])
{
    long long ans = 0;
    for(int i = x; i > 0; i -= lowbit(i))
        ans += a[i];
    return ans;
}

void solve()
{
    int n,m;
    scanf("%d%d",&n,&m);
    for(int i = 1; i <= n; i ++) scanf("%d",&c[i]);
    for(int i = 1; i <= m; i ++) scanf("%d",&b[i]);
    memset(a,0,sizeof(a));
    double ans = 0;
    for(int i = 1; i <= n; i ++) {
        ans += query(N - 1,a[0]) - query(c[i],a[0]);
        insert(c[i],1,a[0]);
    }
    sort(b + 1,b + m + 1);
    for(int i = 1; i <= m; i ++) {
        double tmp = query(b[i] - 1,a[1]);
        ans += tmp / 2.00;
        insert(b[i],1,a[1]);
    }
    for(int i = 1; i <= n; i ++) {
        insert(c[i],i,a[2]);
        insert(c[i],n - i + 1,a[3]);
    }
    long long sum = 0;
    for(int i = 1; i <= m; i ++) {
        sum += query(b[i] - 1,a[2]);
        sum += query(N - 1,a[3]) - query(b[i],a[3]);
    }
    //cout << sum << endl;
    ans += 1.0 * sum / (n + 1);
    printf("%.20lf\n",ans);
}
    
int main()
{
    int t;
    scanf("%d",&t);
    while(t --) solve();
    return 0;
}
