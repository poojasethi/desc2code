#include <iostream>
#include <cstdio>
using namespace std;

const int maxn=100001;

struct Interval
{
    int startd;
    int endd;
};

typedef struct Interval inter;

inter a[maxn],l[maxn],r[maxn];

int scan()
{
    int t=0;
    char c;
    c=getchar();
    while(c<'0' || c>'9')
    c=getchar();
    while(c>='0' && c<='9')
    {
        t=(t<<3)+(t<<1)+c-'0';
        c=getchar();
    }
    return(t);
}

void Merge(int begx,int endx)
{
    int mid=begx+((endx-begx)>>1);
    int i,lctr=0,rctr=0,llim,rlim;
    for(i=begx;i<=mid;i++)
    {
        l[lctr++]=a[i];
    }
    for(i=mid+1;i<=endx;i++)
    {
        r[rctr++]=a[i];
    }

    i=begx;
    llim=lctr;
    rlim=rctr;
    lctr=0;
    rctr=0;

    while(lctr<llim && rctr<rlim)
    {
        if(l[lctr].endd < r[rctr].endd)
        {
            a[i++]=l[lctr++];
        }
        else if(l[lctr].endd >= r[rctr].endd)
        {
            a[i++]=r[rctr++];
        }
    }

    while(lctr<llim)
    {
        a[i++]=l[lctr++];
    }

    while(rctr<rlim)
    {
        a[i++]=r[rctr++];
    }
}

void MergeSort(int startx,int endx)
{
    if(startx<endx)
    {
        int mid=startx+((endx-startx)>>1);
        MergeSort(startx,mid);
        MergeSort(mid+1,endx);
        Merge(startx,endx);
    }
    return;
}

int main()
{
    int n,i,j,k,change;
    int counter=0;
    int start=0;

    n=scan();

    for(i=1;i<=n;i++)
    {
        a[i].startd=scan();
        a[i].endd=scan();
        a[i].endd+=a[i].startd;
    }

    MergeSort(1,n);

    for(i=1;i<=n;i++)
    {
        if(a[i].startd <= start)
        {
            continue;
        }

        start=a[i].endd;
        counter++;
    }

    printf("%d\n",counter);

    return 0;
}
