// http://www.codechef.com/problems/STADIUM

#include <iostream>    
#include <map>

int main() {
    int number_of_events;
    std::cin >> number_of_events;

    std::map < int, int > memo;
    std::map<int,int>::iterator it1;
    
    while (number_of_events--) {
        int starting_date, duration_of_event;

        std::cin >> starting_date >> duration_of_event;
        
        // memo.insert (std::make_pair (starting_date, duration_of_event));
        //overwrite the existing value if any 
        it1 = memo.find(starting_date);

        if(memo.end() == it1) {//adding this for first time
            memo.insert (std::make_pair (starting_date, duration_of_event));
        } else if(duration_of_event < (*it1).second)
            memo[starting_date] = duration_of_event;
        
    }
    
    int possible_number_of_events(0);
    
    std::map<int,int>::iterator it = memo.begin();
    std::map<int,int>::iterator peek = it;
    //for (it=to_check+1; it!=memo.end(); ++it) {
    while(true) {    
        int ending_date((*it).first + (*it).second);
        //std::clog << "This iterator " << (*it).first << " => " << (*it).second 
       // << " => " << ending_date << std::endl;
        //std::map<int,int>::iterator peek = it;
        ++peek;
        if(memo.end() == peek){
            ++possible_number_of_events;
            break;
        }
        // std::clog << "Next iterator " << (*peek).first << " => " 
        // << (*peek).second << std::endl;
        if(ending_date < (*peek).first) {
            // std::clog << "condition 1" << std::endl;
            ++possible_number_of_events;
            it=peek;
            continue;
        }
        int peek_ending_date((*peek).first + (*peek).second);
        if(ending_date > peek_ending_date) {
            // std::clog << "condition 2" << std::endl;
            //++possible_number_of_events;
            it = peek;//or ++it;
            // continue;
        }
    }

    std::cout << possible_number_of_events << std::endl;
    
    return 0;
}
