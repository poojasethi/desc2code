/**
 *  Blocking do CODECHEF!!
 */

#include <cstdio>
#include <vector>
#include <algorithm>
#include <cassert>

using namespace std;

int n;
int mat[101][101]; // entrada
int hom[101][101]; // lista preferencia homens
int pos[101]; // posicao da lista de preferencia dos homens
int casados[101], casadas[101]; // com quem cada um ta casado

void solve()
{
	vector<int> out; // a casar
	for (int i = 1; i <= n; ++i)
		out.push_back(i);
	
	while (!out.empty())
	{
		int homem = *out.rbegin();
		int prefere = hom[homem][pos[homem]];
		out.pop_back();
		// mulher solteira
		if (!casadas[prefere])
		{
			casados[homem] = prefere;
			casadas[prefere] = homem;
		}
		// mulher casada
		else
		{
			int divorcio = casadas[prefere];
			// se instavel
			if (mat[homem][prefere] > mat[divorcio][prefere]) // aqui depende do problema..
			{
				casados[divorcio] = 0;
				casados[homem] = prefere;
				casadas[prefere] = homem;
				++pos[divorcio];
				out.push_back(divorcio);
			}
			// senao homem tenta proxima mulher
			else 
			{
				++pos[homem];
				out.push_back(homem);
			}
		}
	}
}

int u;

bool comp(int a, int b)
{
	return mat[u][a] < mat[u][b]; // aqui depende do problema
}

int main()
{
	scanf("%d", &n);	
	// pega entrada
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j <= n; ++j)
			scanf("%d", &mat[i][j]);
	// monta lista preferencia homens, das mulheres nao precisa, usar o mat pras mulheres
	for (int i = 1; i <= n; ++i)
	{
		u = i;
		for (int j = 0; j < n; ++j)
			hom[i][j] = j+1;
		sort(hom[i], hom[i]+n, comp);
	}
	solve();
	for (int i = 1; i <= n; ++i)
	{
		if (i > 1) printf(" ");
		assert(casadas[i]);
		printf("%d", casados[i]);
	}
	printf("\n");
	
	return 0;
}
