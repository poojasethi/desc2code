#include <iostream>
#include <cstdio>
#include <string.h>
#include <algorithm>
#include <queue>
#include <string>
#include <map>
using namespace std;

const int maxn = 1007;
      int n;
      bool use[maxn];

struct person
{
    int rank, ID;//当前匹配异性的排名和ID
    int opp[maxn];//男人关于某个排名的异性ID 女人关于某个异性的排名
} Man[maxn], Woman[maxn];

void StableMatch()
{
    queue<int> zz;
    for (int i = 1; i <= n; i++) zz.push(i), use[i] = true;
    for (int i = 1; i <= n; i++) Man[i].rank = 1, Woman[i].rank = -1;
    while (zz.size())
    {
        int x = zz.front();
        use[x] = false;
        zz.pop();
        int ID = Man[x].opp[Man[x].rank];
        while (Woman[ID].rank != -1 && Woman[ID].opp[x] < Woman[ID].rank) ID = Man[x].opp[++Man[x].rank];
        Man[x].ID = ID;
        if (Woman[ID].rank != -1 && !use[Woman[ID].ID]) use[Woman[ID].ID] = true, zz.push(Woman[ID].ID);
        Woman[ID].ID = x;
        Woman[ID].rank = Woman[ID].opp[x];
    }
}

int c[maxn], x[maxn];

bool cmp(const int &a, const int &b)
{
    return c[a] < c[b];
}

int main()
{
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
    {
        for (int j = 1; j <= n; j++) scanf("%d", &c[j]), x[j] = j;
        sort(x+1, x+1+n, cmp);
        for (int j = 1; j <= n; j++)
        {
            Man[i].opp[j] = x[j];
            Woman[j].opp[i] = c[j];
        }
    }
    StableMatch();
    for (int i = 1; i <= n; i++)
        if (i < n) printf("%d ", Man[i].ID);
        else       printf("%d\n", Man[i].ID);
    return 0;
}
