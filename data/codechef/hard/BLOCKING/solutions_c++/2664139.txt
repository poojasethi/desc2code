#include <cstdlib>
#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <queue>
#include <stack>
#include <vector>
#include <list>
#include <set>
#include <bitset>
#include <map>
#include <cassert>
#include <ctime>

#define iter(c) __typeof((c).begin())
#define Tr(a,b) for(iter(b) a = (b).begin(); a != (b).end(); ++a)
#define Fr(a,b,c) for(int a = b; a < c; ++a)
#define Rp(a,c) Fr(a,0,c)
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define oo 0x3F3F3F3F

using namespace std;

typedef pair<int,int> pii;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned long long rash;

#define dbg if(0)

#define MAXN 110

int n;
int grid[MAXN][MAXN];
int A[MAXN], B[MAXN];

pii temp[MAXN];
int pref[MAXN][MAXN];
int p[MAXN];

int main() {
	scanf("%d", &n);
	Rp(i,n) Rp(j,n) scanf("%d", &grid[i][j]);
	
	Rp(i,n) A[i] = -1, B[i] = -1;
	Rp(i,n) p[i] = 0;
	
	Rp(i,n) {
		Rp(j,n) temp[j] = MP(grid[i][j], j);
		sort(temp, temp + n);
//		reverse(temp, temp + n);
		Rp(j,n) pref[i][j] = temp[j].S;
		dbg {
			Rp(j,n) printf(" %2d", pref[i][j]);
			puts("");
		}
	}
	
	Rp(piv,n) {
		int x = piv;
		while(B[pref[x][p[x]]] != -1) {
			int y = pref[x][p[x]];
			dbg printf(" (x %d, y %d (%d))\n", x, y, B[y]);
			
			if(grid[x][y] > grid[B[y]][y])
				A[x] = y, swap(x, B[y]);
			
			A[x] = -1;
			++p[x];
		}
		
		A[x] = pref[x][p[x]], B[pref[x][p[x]]] = x;
		dbg printf("[x %d, y %d]\n", x, A[x]);
	}
	
	Rp(i,n) printf("%d%c", A[i] + 1, (i + 1 == n) ? '\n' : ' ');
	
	return 0;
}
