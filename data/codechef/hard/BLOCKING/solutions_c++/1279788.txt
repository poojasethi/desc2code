/*
PROB:msquare
NAME:chen_yu2
LANG:C++
*/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <set>
#include <algorithm>
using namespace std;
typedef long long LL;

int n;
int vt[ 105 ][ 105 ];
struct hum
{
    int w, id;
}men[ 105][ 105 ], women[ 105 ][ 105 ];
int block[ 105 ], wcnt[ 105 ], getboy[ 105 ];
bool cmp1( hum a, hum b )
{
    return a.w < b.w;
}
bool cmp2( hum a, hum b )
{
    return a.w > b.w;
}
int main()
{
    //int wcnt[ 105 ] = { 0 };
    memset( block, -1, sizeof( block ) );
    //memset( get)
    scanf( "%d", &n );
    for ( int i = 0; i < n; i++ )
     for ( int j = 0; j < n; j++ )
     scanf( "%d", &vt[ i ][ j ] );
     for ( int i = 0; i < n; i++ )
      for ( int j = 0; j < n; j++ )
      {
          men[ i ][ j ].w = vt[ i ][ j ];
          men[ i ][ j ].id = j;
          women[ j ][ i ].id = i;
          women[ j ][ i ].w = vt[ i ][ j ];
      }
      for ( int i = 0; i < n; i++ )
      {
          sort( men[ i ], men[ i ] + n, cmp1 );
          sort( women[ i ], women[ i ] + n, cmp2 );
      }
      bool stop = false;
      memset( getboy, -1, sizeof( getboy ) );
      while ( !stop )
      {
          stop = true;
          for ( int i = 0; i < n; i++ )
          {
              if ( block[ i ] == -1 )
              {
                 int gid = men[ i ][ wcnt[ i ] ].id;
                 if ( getboy[ gid ] == -1 )
                 {
                    getboy[ gid ] = i;
                 }
                 else if ( vt[ getboy[ gid ] ][ gid ] < vt[ i ][ gid ] )
                 {
                     block[ getboy[ gid ] ] = -1;
                     getboy[ gid ] = i;
                 }
                 wcnt[ i ]++;
                 stop = false;
               }
          }
          for ( int i = 0; i < n; i++ )
          {
              if ( getboy[ i ] != -1 )
              block[ getboy[ i ] ] = i;
          }
      }
      for ( int i = 0; i < n; i++ )
      printf( i == 0 ? "%d" : " %d", block[ i ] + 1 );
      cout << endl;

     return 0;
}
