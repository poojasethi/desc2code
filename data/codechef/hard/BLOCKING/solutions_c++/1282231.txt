#include<stdio.h>
#include<stdlib.h>
struct node {
       int val;
       struct node *p;
       };
typedef struct node N;
struct room{
       int ti,no;
       };
typedef struct room T;
int main()
{
 
 int n;
 while(scanf("%d",&n)==1)
 {
                         N *start,*tmp;
                         start=NULL;
                         int i,j;
                         for(i=n;i>=1;i--)
                         {
                                          tmp=(N*)malloc(sizeof(N));
                         tmp->val=i;
                         tmp->p=start;
                         start=tmp;
                                          }
                                         
                         int b[105][105],c[105][105],next[105],eng[105],rank[105][105];
                   int      a[105][105];
 for(i=1;i<=n;i++)
 {
 for(j=1;j<=n;j++){
 scanf("%d",&a[i][j]);
}
}
for(i=1;i<=n;i++)
{
                 next[i]=1;
                 eng[i]=-1;
                 }

int e[105],f[105];
int l,m;
int tm;
for(i=1;i<=n;i++)
{
                 for(j=1;j<=n;j++)
                 {
                                  e[j]=a[i][j];
                                  f[j]=j;
                                  }
                 for(l=1;l<n;l++)
                 {
                                 for(m=l+1;m<=n;m++)
                                 {
                                                    if(e[m]<e[l])
                                                    {
                                                                 tm=e[m];
                                                                 e[m]=e[l];
                                                                 e[l]=tm;
                                                                 tm=f[m];
                                                                 f[m]=f[l];
                                                                 f[l]=tm;
                                                                 }
                                                    }
                                 }
                 for(j=1;j<=n;j++)
                 b[i][j]=f[j];
                 
                 }
                 
for(i=1;i<=n;i++)
{
                 for(j=1;j<=n;j++)
                 {
                                  e[j]=a[j][i];
                                  f[j]=j;
                                  }
                 for(l=1;l<n;l++)
                 {
                                 for(m=l+1;m<=n;m++)
                                 {
                                                    if(e[m]>e[l])
                                                    {
                                                                 tm=e[m];
                                                                 e[m]=e[l];
                                                                 e[l]=tm;
                                                                 tm=f[m];
                                                                 f[m]=f[l];
                                                                 f[l]=tm;
                                                                 }
                                                    }
                                 }
                 for(j=1;j<=n;j++)
                 c[i][j]=f[j];
                 
                 }
               
                 for(i=1;i<=n;i++)
                 for(j=1;j<=n;j++)
                 {
                                  l=c[i][j];
                                  rank[i][l]=j;
                                  }
 /*
 3
1 2 3
4 5 6
7 8 9


 */
 
 for(i=1;i<=n;i++)
 {
                  next[i]=1;
                  eng[i]=-1;
                  }
                  while(start!=NULL)
                  {
                              int cur=start->val;
                            
                              start=start->p;
                  int ch;
                  int st=next[cur];
            
                  for(i=st;i<=n;i++)
                  {
                                    ch=b[cur][i];
                               
                                    if(eng[ch]==-1)
                                    {
                                              
                                                  eng[ch]=cur;
                                                  next[cur]=i+1;
                                                  break;
                                                  }
                                                  else {
                                                       int fir,sec,pr;
                                                       pr=eng[ch];
                                                    
                                                       fir=rank[ch][pr];
                                                       sec=rank[ch][cur];
                                                    
                                                       if(sec<fir)
                                                       {
                                                                  eng[ch]=cur;
                                                                  next[cur]=i+1;
                                                                  tmp->val=pr;
                                                                  tmp->p=start;
                                                                  start=tmp;
                                                                  break;
                                                                  }
                                                       }
                                    }
                                  
                              
                              }
                             
                                       int ans[105];
                                       for(i=1;i<=n;i++)
                                       ans[eng[i]]=i;
                 printf("%d",ans[1]);
                 for(i=2;i<=n;i++)
                 printf(" %d",ans[i]);
                 printf("\n");
                         }   
}
