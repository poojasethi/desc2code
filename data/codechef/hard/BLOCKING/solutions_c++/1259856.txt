#include <string>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <iostream>
#include <sstream>
#include <cstring>
#include <queue>
#include <cassert>
#include <cctype>
#define PB push_back
#define MP make_pair
#define MOD
#define INF
#define MAXN
using namespace std;
typedef pair<int, int> PII;
typedef unsigned long long ULL;
typedef long long LL;

int hs[101], mat[101][101];
bool fd[101];

void process(int h, int f)
{
    if(hs[h] == -1)
    {
        hs[h] = f;
        fd[f] = true;
        return;
    }
    if(mat[f][h]>mat[hs[h]][h])fd[hs[h]]=false, fd[f]=true, hs[h]=f;

}

int main()
{

    int n;
    scanf("%d", &n);
    for(int i=0; i<n; i++)
        for(int j=0; j<n; j++)
            scanf("%d", &mat[i][j]);


    vector<vector<int> > frnd(n);
    for(int i=0; i<n; i++)
    {
        vector<PII> v;
        for(int j=0; j<n; j++)v.PB(MP(mat[i][j], j));
        sort(v.begin(), v.end());
        for(int j=0; j<n; j++)
            frnd[i].PB(v[j].second);
    }

    int id[n];
    memset(hs, -1, sizeof(hs));
    memset(fd, false, sizeof(fd));
    memset(id, 0, sizeof(id));

    bool flag = true;
    while(flag)
    {
        flag = false;
        for(int i=0; i<n; i++)
        {
            if(fd[i] == false)
            {
                flag = true;
                process(frnd[i][id[i]], i);
                id[i]++;
            }
        }
    }
    int block[n];
    for(int i=0; i<n; i++)
    {

        block[hs[i]] = i+1;
    }
    for(int i=0; i<n; i++)
        printf("%d ", block[i]);
    printf("\n");
    return 0;
}

