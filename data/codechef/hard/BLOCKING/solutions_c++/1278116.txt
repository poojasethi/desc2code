#include<iostream>
#include<queue>
#include<map>
#include<utility>
#include<vector>
#include<stdlib.h>
#include<memory.h>
using namespace std;
struct Compare{
    bool operator()( const pair<int,int> first , const pair<int,int> second ) const {
        return first.second < second.second;
   }
};

char *fstart; 
#define BUF 30000000
char buf [BUF]; 
 
void get_int ( int* n)	{ 
	while ( *fstart != 0 && !( '0' <= *fstart && *fstart <= '9')) 
		fstart++; 
	*n = 0; 
	while ( '0' <= *fstart && *fstart <= '9')	{ 
		*n = ( ( *n) << 3) + ( ( *n) << 1) + *fstart-'0', ++fstart; 
	} 
} 
 
void take_input()	{ 
	int sz = fread ( buf, sizeof ( char), BUF, stdin); 
	buf [sz] = 0; 
	fstart = buf;
}

int main()
{
    priority_queue< pair<int,int>,vector<pair<int,int> >,Compare > a[100];
    map<int,int> ans;
        bool pd[100]={0};
    int i,j,k,n,temp,min[2],pmin[100][2];
    take_input();
    get_int(&n);
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
        {
            get_int(&temp);
            a[j].push(make_pair(i,temp));
        }
    }
    bool win=1;
    while(1)
    {
        for(i=0;i<n;i++)
        {
            if(pd[a[i].top().first])
            {
               if(a[i].top().second>pmin[a[i].top().first][0])
               {
                       a[i].pop();
                   if(a[i].empty())
                   {
                       win=0;
                       break;
                   }    
               }
               else if(a[i].top().second<pmin[a[i].top().first][0])
               {
                       pmin[a[i].top().first][0]= a[i].top().second;
                       a[pmin[a[i].top().first][1]].pop();
                       if(a[pmin[a[i].top().first][1]].empty())
                       {
                          win=0;
                          break;
                       }
                       pmin[a[i].top().first][1]=i;
               }
           }
           else
           {
               pd[a[i].top().first]=1;
               pmin[a[i].top().first][0]= a[i].top().second;
               pmin[a[i].top().first][1]=i;
           }
       }    
       bool flag=0;
       for(i=0;i<n;i++)
       {
           if(!pd[i])
           {
               flag=1;
               break;
           }
       }
       if(!flag)
       break;
   }
   if(win)
   {
           for(i=0;i<n;i++)
           printf("%d ",pmin[i][1]+1);
   }
   else
   printf("-1");    
        
   return 0;
}