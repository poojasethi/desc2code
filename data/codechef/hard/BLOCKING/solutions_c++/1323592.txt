#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
using namespace std;

#define MAX 1010

int n;
int mlove[MAX][MAX];
int wlove[MAX][MAX];
int couple[MAX];
int pare[MAX];

queue < int > SQ;
int G[MAX][MAX],r[MAX];
int id;
void gale_shapley()
{
    int i,man,woman;
    while(!SQ.empty()) SQ.pop();
    memset(couple, -1, sizeof(couple));
    for(i=1;i<=n;i++) SQ.push(i);

    while(!SQ.empty())
    {
        man = SQ.front();
        SQ.pop();

        for(i=1;i<=n;i++)
        {
            if(mlove[man][i] != -1)//如男生未选择过该女生
            {
                //选择未被拒绝且最喜欢的女生
                woman = mlove[man][i];//挑选最喜欢的女生
                mlove[man][i] = -1;//选择并标记之

                long pre = couple[woman];
                if(pre == -1) //若没有女生未配对
                {
                    couple[woman] = man;//撮合之
                    pare[man] = woman;//撮合之
                    break;
                }
                else //若已配对
                {
                    if(wlove[woman][man] > wlove[woman][pre])//如果女生喜欢这个男生超过现在的
                    {
                        SQ.push(pre);//把现在的放到队列里
                        couple[woman] = man;//撮合之
                        pare[man] = woman;//撮合之
                        break;
                    }
                }
            }
        }
    }//while
}
bool cmp1(int i,int j){
    return G[id][i]<G[id][j];
}
bool cmp2(int i,int j){
    return G[i][id]<G[j][id];
}

int main()
{
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=1;i<=n;i++) 
        for(int j=1;j<=n;j++) scanf("%d",&G[i][j]);

        for(int i = 1; i <= n; i++)
        {
            for(int j=1;j<=n;j++) mlove[i][j]=j;
            id=i;
            sort(mlove[i]+1,mlove[i]+n+1,cmp1);
        }
        
        for(int i = 1; i <= n; i++)
        {
            for(int j=1;j<=n;j++) r[j]=j;
            id=i;
            sort(r+1,r+n+1,cmp2);
            for(int j=1;j<=n;j++) wlove[i][r[j]]=j;

        }
        gale_shapley();
        for(int i = 1; i <= n; i++)
           {   if(i>1) printf(" ");
               printf("%d", pare[i]);//对于男方的配偶
           }
           puts("");
    }
    return 0;
}
