#include <cstdlib>  
#include <cctype>  
#include <cstring>  
#include <cstdio>  
#include <cmath>  
#include <algorithm>  
#include <vector>  
#include <string>  
#include <iostream>  
#include <sstream>  
#include <map>  
#include <set>  
#include <queue>  
#include <stack>  
#include <fstream>  
#include <numeric>  
#include <iomanip>  
#include <bitset>  
#include <list>  
#include <stdexcept>  
#include <functional>  
#include <utility>  
#include <ctime>  
using namespace std;  

#define PB push_back  
#define MP make_pair  

#define REP(i,n) for(i=0;i<(n);++i)  
#define FOR(i,l,h) for(i=(l);i<=(h);++i)  
#define FORD(i,h,l) for(i=(h);i>=(l);--i)  
#define CLOCK cout << "Clock " << (double)clock()/CLOCKS_PER_SEC << endl
const int maxs = 110;
int edges[maxs][maxs];
int n;
struct womannode
{
	int val;
	int idx;
	bool flag; //表示是否已经求婚过 false：没有
	bool operator < (const womannode & a) const
	{
		if (val < a.val) return true;
		else if(val > a.val) return false;
		else {
			return idx<=a.idx;
		}
	}
};
struct mannode
{
	int val;
	int idx;
	bool operator < (const mannode & a) const
	{
		if (val > a.val) return true;
		else if (val < a.val) return false;
		else 
		{
			return idx <= a.idx;
		}
	}
};
bool freewoman[maxs] = {false}; //false 表示free
vector<struct womannode> man[maxs];
vector<struct mannode> woman[maxs];
queue<int> freeman;
int matchman[maxs]; // 女生与哪个男生结婚

int matchwoman[maxs]; // 男生与哪个女生结婚

void SMP()
{
	while(!freeman.empty())
	{
		int manid = freeman.front();
		freeman.pop();
		int womanid = 0;
		for (;womanid<n;womanid++)
		{
			if (!man[manid][womanid].flag)
			{
				man[manid][womanid].flag = true;
				break;
			}
		}
		int tmp = man[manid][womanid].idx;
		if (!freewoman[tmp])
		{
			matchman[tmp] = manid;
			matchwoman[manid] = tmp;
			freewoman[tmp] = true;
		}
		else
		{
			int tmp2 = 0;
			for (;tmp2<n;tmp2++)
			{
				if (woman[tmp][tmp2].idx == matchman[tmp])
				{
				 	tmp2 = woman[tmp][tmp2].idx;
					break;
				}
			}
			if (edges[manid][tmp] > edges[tmp2][tmp])
			{
				matchman[tmp] = manid;
				matchwoman[manid] = tmp;
				freeman.push(tmp2);
			}
			else
			{
				freeman.push(manid);
			}
		}
	}
}

int main()
{
	scanf("%d",&n);
	for (int i=0;i<n;i++)
		for (int j=0;j<n;j++) scanf("%d",&edges[i][j]);
	for (int i=0;i<n;i++)
		for (int j=0;j<n;j++) 
		{
			struct womannode hn;
			hn.val = edges[i][j];
			hn.idx = j;
			hn.flag = false;
			man[i].push_back(hn);
		}

	for (int j=0;j<n;j++)
		for (int i=0;i<n;i++) 
		{
			struct mannode fn;
			fn.val = edges[i][j];
			fn.idx = i;
			woman[j].push_back(fn);
		}
	for (int i=0;i<n;i++)
	{

		sort(man[i].begin(),man[i].end());
		sort(woman[i].begin(),woman[i].end());
	}
	for (int i=0;i<n;i++)
		freeman.push(i);
	SMP();
	for (int i=0;i<n;i++)
		printf("%d%c",matchwoman[i]+1,(i==n-1?'\n':' '));
	return 0;
}
