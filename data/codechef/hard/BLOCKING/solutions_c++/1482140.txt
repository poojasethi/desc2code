#include <iostream>
#include <utility>
#include <vector>
#include <algorithm>

using namespace std;

bool myfunction (pair<int,int> p1, pair<int,int> p2){
	return (p1.first<p2.first);
}

int main(){
	int t;
	//cin>>t;
	//for(int m=0;m<t;m++){
		int n;
		cin>>n;
		int M[n][n];
		pair<int,int> N[n][n];
		for(int i=0; i<n; i++){
			for(int j=0; j<n ;j++){
				int elem;
				cin>>elem;
				M[i][j]=elem;
			}
		}
		bool isBlocked[n];
		pair<int,int> blockedCell[n];
		for(int i=0;i<n;i++){
			blockedCell[i]=make_pair(-1,-1);
		}
		for(int i=0;i<n;i++){
			isBlocked[i]=false;
		}
		for(int i=0;i<n;i++){
			vector<pair<int,int> > myvector(n);
			for(int j=0;j<n;j++){
				myvector[j]=make_pair(M[i][j],j);
			}
			sort (myvector.begin(), myvector.end(), myfunction);
			for(int j=0;j<n;j++){
				N[i][j]=myvector[j];
			}
			for(int j=0;j<n;j++){
				//cout<<N[i][j].first<<endl;
			}
		}
		vector<int> output(n);
		int count=n,max=0;
		while(count!=0 && max<(n*n)){
			int i=count;
			int min=-1,j=0,index,block,next,k=0;
			while(i>0){
				k=0;
				if(!isBlocked[j]){
					i--;
					while(N[j][k].first==-1){
						k++;
					}
					if(min==-1) {
						min=N[j][k].first;
						index=j;
						block=N[j][k].second;
						next=k;
					}
					else if(N[j][k].first<min) {
						min=N[j][k].first;
						index=j;
						block=N[j][k].second;
						next=k;
					}
				}
				j++;
			}
			//cout<<"index : "<<index<<" block: "<<block<<" min: "<<min<<" next: "<<next<<endl;
			if(blockedCell[block].first!=-1){
				pair<int,int> check=blockedCell[block];
				if(check.second>min) {
					N[index][next]=make_pair(-1,0);				
				}
				else{
					//cout<<":"<<endl; 
					isBlocked[check.first]=false;
					blockedCell[block]=make_pair(index,min);
					N[index][next]=make_pair(-1,0);
					isBlocked[index]=true;
				}
			}
			else{
				blockedCell[block]=make_pair(index,min);
				N[index][next]=make_pair(-1,0);
				isBlocked[index]=true;
				count--;
			}
			max++;
		}
		int i=0;
		if(count==0){
				while(i<n){
				int index=blockedCell[i].first;
				output[index]=i+1;
				i++;
				//cout<<"aaaaa"<<endl;
			}
			i=0;
			while(i<n-1){
				cout<<output[i]<<" ";
				i++;
			}
			cout<<output[n-1]<<endl;
		}
		else cout<<-1;
	//}
	return 0;
}