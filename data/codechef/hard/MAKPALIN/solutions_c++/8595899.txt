#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define mp make_pair
#define f first
#define s second
#define N 2000005
#define NN 10000000
#define ln 1e10+1
#define ll long long
#define oo 1000000007
#define ln 1e9+1
#define cs 176789
#define pii pair < pair <int, int>, int >
#define pi pair < int, pair <int, int> >
#define Pa pair < int ,int >

using namespace std;

string S;
ll L[N], R[N], Pow[N];
int T, n;

ll Get_L(int d, int c)
{
    return L[c] - L[d-1] * Pow[c-d+1];
}

ll Get_R(int d, int c)
{
    return R[d] - R[c+1] * Pow[c-d+1];
}

int main()
{
    ios_base::sync_with_stdio(0);
    //filein("inp.txt");  fileout("out.txt");
    cin >> T;
    Pow[0] = 1;
    for(int i=1; i<N; i++)
        Pow[i] = Pow[i-1] * cs;
    while(T--)
    {
        int ans = 0;
        cin >> S;
        n = S.size(); S = ' ' + S;
        int Si = (n+1)/2;
        for(int i=1; i<=n; i++)
            L[i] = L[i-1] * cs  + (S[i] - 'a');
        R[n+1] = 0;
        for(int i=n; i>=1; i--)
            R[i] = R[i+1] * cs  + (S[i] - 'a');
        for(int i=0; i<Si; i++)
            for(int k=0; k<26; k++)
            {
                ll PL = L[i] * Pow[Si-i] + Pow[Si-1-i] * k + Get_L(i+1, Si-1);
                ll PR = R[n-Si+1];
                if(PL == PR)
                {
                    ans++;
                    break;
                }
            }
        for(int i=n; i>=n-Si+1; i--)
            for(int k=0; k<26; k++)
            {
                ll PL = L[Si];
                ll PR = R[i+1] * Pow[Si-n+i] + Pow[Si-n+i-1] * k + Get_R(n-Si+2, i);
                if(PL == PR)
                {
                    ans++;
                    break;
                }
            }
        if(n % 2 == 0 && L[Si] == R[n-Si+1])  ans++;
        cout << ans << endl;
    }
}
