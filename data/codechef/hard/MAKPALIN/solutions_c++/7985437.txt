//Pranet Verma
#include <bits/stdc++.h>
using namespace std;
unsigned long long p[100011];
unsigned long long h1[100011],h2[100011];
// /*k is string index */
inline unsigned long long getHash(unsigned long long h[],int k,char c,int n)
{
    unsigned long long part1=h[k];
    unsigned long long part2=c*p[k+1];
    unsigned long long part3=(h[n]-h[k])*173;
    return part3+part2+part1;
}
char str[100011];
int main()
{
    p[0]=1;
    for(int i=1;i<=100010;++i)
        p[i]=p[i-1]*173;
    int t;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%s",str);
        string s(str);
        string r(str);
        reverse(r.begin(),r.end());
        for(int i=0;i<s.size();++i)
            h1[i+1]=h1[i]+s[i]*p[i+1];
        for(int i=0;i<s.size();++i)
            h2[i+1]=h2[i]+r[i]*p[i+1];
        int ans=0;
        for(int k=0;k<=(int)s.size();++k)
        {
            for(char a='a';a<='z';++a)
            {
                unsigned long long sh=getHash(h1,k,a,(int)s.size());
                unsigned long long rh=getHash(h2,(int)s.size()-k,a,(int)s.size());
                if(rh==sh)
                {
                    ++ans;
                    break;
                }
            }
        }
        printf("%d\n",ans);
    }
}