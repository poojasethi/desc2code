#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <string>
#include <cstring>
#include <cassert>
#define rf freopen("in.in", "r", stdin)
#define wf freopen("out.out", "w", stdout)
#define rep(i, s, n) for(int i=int(s); i<=int(n); ++i)
using namespace std;
const int mx = 1e5+10, mod = 1e9+7;

int pre[mx], suf[mx];
int t;

int checkpal(string s)
{
	int chk = 1;
	int n = s.length()-1;

	rep(i, 0, n/2)
		if(s[i] != s[n-i])
			chk = 0;
	return chk;
}

int getans(string a, string b)
{
	int n = b.length();
	pre[0]=1; suf[n+1]=1;

	rep(i, 0, n-1)
		pre[i+1] = (pre[i] and (b[i]==a[i]));
	for(int i=n-1; i+1; --i)
		suf[i+1] = (suf[i+2] and (b[i] == a[i+1]));

	int ret = 0;
	rep(i, -1, n-1)
		if(pre[i+1] and suf[i+2])
			ret++;

	return ret;
}

int main()
{
	//rf;// wf;

	scanf("%d", &t);
	while(t--)
	{
		string in;
		cin >> in;
		int n = in.length();

		if((n&1) == 0)
		{

			string a1="", a2="", b1="", b2="";
			rep(i, 0, n/2-2)
				a2 += in[i];
			for(int i=n-1; i>=n/2; --i)
				a1 = a1+in[i];

			rep(i, 0, n/2-1)
				b1 += in[i];
			for(int i=n-1; i>n/2; --i)
				b2 = b2+in[i];

			printf("%d\n", getans(a1, a2) + getans(b1, b2)+checkpal(in));
		}
		else
		{
			string a1="", a2="", b1="", b2="";
			rep(i, 0, n/2)
				a1 += in[i];
			for(int i=n-1; i>n/2; --i)
				a2 = a2+in[i];

			rep(i, 0, n/2-1)
				b2 += in[i];
			for(int i=n-1; i>=n/2; --i)
				b1 = b1+in[i];

			printf("%d\n", getans(a1, a2) + getans(b1, b2));
		}
	}
	return 0;
}