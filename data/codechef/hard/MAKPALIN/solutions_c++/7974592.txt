#include<iostream>
#include<vector>

using namespace std;

#define ll long long
#define pb push_back
#define inf 100000000

void calP1(string s, ll p[])
{
  ll n = s.size(),i;
  p[0] = 1;
  if(s[0]==s[n-1])
    p[1] = 1;
  else
    p[1] = 0;
  for(i=2;i<=(n-1)/2;++i)
    p[i] = p[i-1]&(s[i-1]==s[n-i]);
}

void calP2(string s,ll p[])
{
  ll n = s.size(),i;
  if(n%2==0)
  {
    p[n/2-1] = 1;
    for(i=n/2-2;i>=0;--i)
      p[i] = p[i+1] & (s[i+1]==s[n-i-1]);
  }
  else
  {
    p[(n-3)/2+1] = 1;
    p[(n-3)/2] = (s[(n-3)/2 + 1]==s[(n-3)/2 + 2]);
    for(i = (n-3)/2 - 1; i>=0; --i)
      p[i] = p[i+1] & (s[i+1]==s[n-i-1]);
  }
}

void calP3(string s, ll p[])
{
  ll n = s.size(),i;
  if(n%2==0)
  {
    p[n/2] = 1;
    for(i=n/2+1;i<=n-1;++i)
      p[i] = p[i-1] & (s[i-1]==s[n-i-1]);
  }
  else
  {
    p[(n+1)/2-1] = 1;
    p[(n+1)/2] = (s[(n+1)/2 - 1] == s[(n+1)/2 - 2]);
    for(i=(n+1)/2+1;i<=n-1;++i)
      p[i] = p[i-1] & (s[i-1]==s[n-i-1]);
  }
}

bool palin(string s)
{
  ll i,n =s.size();
  for(i=0;i<n;++i)
    if(s[i]!=s[n-1-i])
      return false;
  return true;
}

int main()
{
  ll t;
  cin>>t;
  while(t--)
  {
    string s;
    cin>>s;
    ll p1[100005], p2[100005],n = s.size(),i,p3[100005];
    calP1(s,p1);

    /*for(i=0;i<n;++i)
      cout<<p1[i]<<" ";
    cout<<endl;*/

    calP2(s,p2);

    /*for(i=0;i<n;++i)
      cout<<p2[i]<<" ";
    cout<<endl;*/

    calP3(s,p3);

    /*for(i=0;i<n;++i)
      cout<<p3[i]<<" ";
    cout<<endl;*/

    ll ans = 0;
    for(i=0;i<n;++i)
    {
      if(i<=(n-1)/2)
      {
        ans += p1[i] & p2[i];
      }
      else
      {
        ans += p1[n-i-1] & p3[i];
      }
    }
    if(palin(s))
      ans++;
    cout<<ans<<endl;
  }
}
