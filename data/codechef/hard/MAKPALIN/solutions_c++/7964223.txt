/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 225898512559LL
#define MOD1 1000000009LL
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif
LLD power1[100002],power2[100002];
int main()
{
	int t;
	power1[0]=power2[0]=1;
	for(t=1;t<=100001;t++)
	{
		power1[t]=(power1[t-1]*26)%MOD;
		power2[t]=(power2[t-1]*26)%MOD1;
	}
	si(t);
	while(t--)
	{
		LLD f[100005],f1[100005],r[100005],r1[100005];
		string s;
		cin>>s;
		int n=s.size(),i,j;
		f[0]=f1[0]=0;
		FOR(i,1,n+1)
		{
			f[i]=(f[i-1]+(s[i-1]-'a'+1)*power1[n-i])%MOD;
			f1[i]=(f1[i-1]+(s[i-1]-'a'+1)*power2[n-i])%MOD1;
	//		trace3(i,f[i],f1[i]);
		}
		r[n]=r1[n]=0;
		for(i=n-1;i>=0;i--)
		{
			r[i]=(r[i+1]+(s[i]-'a'+1)*power1[i])%MOD;
			r1[i]=(r1[i+1]+(s[i]-'a'+1)*power2[i])%MOD1;
	//		trace3(i,r[i],r1[i]);
		}
		int ans=0;
		for(i=0;i<=n;i++)
		{
			for(j=0;j<26;j++)
			{
				LLD for1=f[n]+25*f[i]+j*power1[n-i];
	//			trace3(i,j,for1);
				LLD bac1=r[0]+25*r[i]+j*power1[i];
				LLD for2=f1[n]+25*f1[i]+j*power2[n-i];
				LLD bac2=r1[0]+25*r1[i]+j*power2[i];
				for1%=MOD,bac1%=MOD;
				for2%=MOD1,bac2%=MOD1;
				if(for1==bac1 && for2==bac2)
				{
					ans++;
					break;
				}
			}
		}
		cout<<ans<<endl;
	}
	return 0;
}	
