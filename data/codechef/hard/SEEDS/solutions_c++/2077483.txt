#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <map>
#include <cstdio>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)REP(i,0,(int)(v)-1)
#define FORD(i,v)REPD(i,(int)(v)-1,0)
#define pb push_back
#define sz size
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define ALL(x) (x).begin(),(x).end()
#define uint unsigned int
using namespace std;
typedef vector<uint> mat;
int d,n,A[100];
 
void wypisz(mat m1)
{
    FOR(i,d){
    FOR(j,d)
    cout<<!!(m1[i]&(1<<j))<<" ";
    cout<<endl;
    }
}
 
mat id()
{
    mat w(d,0);
    FOR(i,d) w[i]=(1<<i);
    return w;
}
 
mat mult(mat m1, mat m2)
{
    mat w(d,0);
    FOR(i,d) FOR(j,d) FOR(k,d)
    {
        w[i]^=((!!(m1[i]&(1<<j)))&(!!(m2[j]&(1<<k))))<<k;
    }
    return w;
}
 
mat podnies(mat m, ll k)
{
    if (k==0) return id();
    mat x=podnies(m,k/2);
    x=mult(x,x);
    if (k%2) return mult(m,x);
    return x;
}
 
 
 
 
 
int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--)
    {
        uint seed=0,wyn;
        vector<int> nr,war,pod;
        int ile=0,a,b;
        cin>>d>>n;
        FOR(i,d) cin>>A[i];
        FOR(i,n)
        {
            cin>>a>>b;
            nr.pb(a);
            war.pb(b);
        }
        mat m(d);
        FOR(i,d-1) m[i]=1<<(i+1);
        FOR(i,d) m[d-1]|=(A[i])<<i;
        //wypisz(m);
        //DBG(d);
        FOR(i,n) pod.pb((podnies(m,nr[i]))[0]);
        //FOR(i,n) DBG(pod[i]);
        FOR(s,(1<<d))
        {
            //DBG(s);
            int ok=1;
            FOR(i,n)
            {
                //DBG(__builtin_popcount(pod[i]&s)%2);
                if (__builtin_popcount(pod[i]&s)%2!=war[i])
                {
                    ok=0;
                    break;
                }
            }
            if (ok)
            {
                ile++;
                wyn=s;
            }
            //DBG(wyn);
        }
        if (ile==1)
        {
            FOR(i,d) cout<<!!(wyn&(1<<i))<<" ";
            cout<<endl;
        }
        else if (ile==0)
        {
            cout<<"no solution"<<endl;
        }
        else
        {
            cout<<"multiple solutions"<<endl;
        }
    }
    
    
    return 0;
}
 