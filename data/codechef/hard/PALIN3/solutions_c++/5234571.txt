#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <string>
 
#define LL long long
#define vi vector<int>
#define pb push_back
#define sz size
#define all(x) (x).begin(),(x).end()
#define it iterator
#define REP(i,a,b) for(int i=(a);i<(b);i++)
#define REPX(i,a,b,c) for(int i=(a);i<(b);i+=(c))
#define DEP(i,a,b) for(int i=(a)-1;i>=(b);i--)
#define REX(i,x) for(__typeof((x).begin()) i=(x).begin(); i!=(x).end();i++)
#define pii pair<int,int>
#define pdd pair<double, double>
#define mp make_pair
#define fi first
#define se second
#define st string
#define ffo find_first_of
#define su substr
#define vs vector<st>
#define ub upper_bound
#define lb lower_bound
#define ni next_int
#define gu getchar_unlocked
#define bs binary_search
#define MAX 1000010
#define MOD 1000000007
using namespace std;
char x[MAX],t[MAX<<1]; int y[MAX<<1][3],s[MAX<<1],p[MAX<<1];
inline int ni()
{
	int n=0,s=1; char c=gu();
	while(!(c>='0' && c<='9')) 
	{
		if(c=='-') s=-1;
		c=gu();
	}
	while(c>='0' && c<='9')
	{
		n=(n<<3)+(n<<1)+c-'0';
		c=gu();
	}
	return n*s;
}
inline int ord(char c)
{
	if(c>='0' && c<='9') return c-'0';
	return 0;
}
int preprocess(int n)
{
	t[0]='^'; int j=1;
	REP(i,0,n)
	{
		t[j++]='#';
		t[j++]=x[i];
	}
	t[j++]='#'; 
	t[j++]='$'; t[j]='\0';
	return j;
}
int main()
{
	scanf("%s",x);
	int n=(int)strlen(x); LL v=0;
	int m=preprocess(n);
	int c=0,r=0;
	REP(i,1,m-1)
	{
		int j=(c<<1)-i;
		p[i]=(i<=r)?min(r-i,p[j]):0;
		while(t[i+1+p[i]]==t[i-1-p[i]]) p[i]++;
		if(i+p[i]>r)
		{
			c=i;
			r=p[i]+i;
		}
	}
	s[0]=0;
	REP(i,1,m)
	{
		int h=ord(t[i]);
		s[i]=(s[i-1]+h)%3;
		REP(j,0,3) y[i][j]=y[i-1][j]+(h && j==s[i]);
	}
	REP(i,1,m) 
	{
		int j=(ord(t[i])+s[i])%3;
		v+=(t[i]=='0' || t[i]=='3' || t[i]=='6' || t[i]=='9')+y[i+p[i]][j]-y[i][j];
	}
	printf("%lld\n",v);
	return 0;
}
