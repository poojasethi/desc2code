#include <bits/stdc++.h>
using namespace std;
#define dbg(a,sz) for(int i = 0; i < sz; ++i) cerr << a[i] << " ";cerr <<"\n"
#define INT(ch) ((int)ch-48)
typedef long long LL;
const int NN = 1123456;

int Len[2][NN],st[2],en[2],sum[NN],zero[NN],N;
LL dp[3][NN];
string str;

void Manacher(){
    st[0] = st[1] = 0;
    en[0] = en[1] = -1;
    for(int i = 0; i < N; ++i) for(int p = 0; p < 2; ++p){
        int dR = en[p]-i+!p;
        int sz = (i > en[p] ? 0 : min(dR,Len[p][st[p]+dR])) + 1;
        while(i+sz-!p < N and i-sz >= 0 and str[i+sz-!p] == str[i-sz]) ++sz;
        Len[p][i] = --sz;
        if (i+sz-!p > en[p])
            en[p] = i+sz-!p, st[p] = i-sz;
    }
}

LL Count(int st,int en,int mod3){
    LL ans = dp[mod3][st];
    int add = sum[st] - sum[en];
    while (add < 0) add += 3;
    for(int i = 0; i < 3; ++i) if ((add+i)%3 == mod3)
        ans -= dp[i][en];
    return ans;
}

LL s[2],c[2];
LL substrCount(){
    LL ans = 0LL,v;
    for(int p = 0; p < 2; ++p) for(int i = 0; i < N; ++i){
        int sz = Len[p][i], v = ( p ? INT(str[i]) : 0),k;
        sz = max(0,sz-zero[i+sz-!p]);

        if (p) ans += (v%3 == 0), s[p] += (v%3 == 0);
        for(k = 0; k < 3;++k) if ((2*k+v)%3 == 0){
            v = Count(i+p,i+sz+p,k),ans += v, s[p] += v;
            break;
        }

        //if (i == 15 and p)
        //    cerr << i << " " << Len[p][i] << " " << sz << " " << v << " " << k << " AT 14\n";
        //if (!p and v)
        //    cerr << i << " " << sz << " " << v << " " << k << " " << str.substr(i-1,2) << endl;
    }
    return ans;
}

LL brute(){
    LL ans = 0;
    for(int i = 0; i < N; ++i) for(int j = i; j < N; ++j){
        int tot = 0;
        for(int k = i; k <= j; ++k) tot += INT(str[k]);
        if (tot%3 == 0){
            int L = i, R = j,ct = 1;
            while(L < R){
                if (str[L] != str[R] or str[L] == '0') ct = 0;
                ++L,--R;
            }
            ans += ct;
            int d = (j-i+1) & 1;
            c[d] += ct;
            if (ct and (j != i) and !d)
                cerr << i <<  " " << j << " " << str.substr(i,j-i+1) << endl;
        }
    }
    return ans;
}

string gen(){
    string temp = "";
    N = rand()%1000 + 1;
    int num;
    for(int i = 0; i < N; ++i)
        num = rand()%10 , temp.push_back((char)(num+48));
    return temp;
}

void solve(){
    cin >> str;
    N = (int)str.size();
    //str = gen();
    //cerr << str << endl;
    Manacher();

    sum[N] = 0;
    zero[0] = (!INT(str[0]));
    for(int i = 1; i < N; ++i)
        if (!INT(str[i])) zero[i] = 1 + zero[i-1];

    for(int i = N-1; i >= 0; --i){
        int add = INT(str[i]);
        sum[i] = (add + sum[i+1])%3;
        if (add != 0) dp[add%3][i] += 1LL;
        for(int k = 0; k < 3; ++k)
            dp[(k+add)%3][i] += dp[k][i+1];
    }
    LL ans = substrCount();//,v = brute();
    /*if (s[0] != c[0] or s[1] != c[1]){
        cerr << "Expected " << v << " Found " << ans << endl;
        cerr << "Even " << s[0] << " " << c[0] << endl;
        cerr << "Odd " << s[1] << " " << c[1] << endl;
    }*/
    cout << ans << endl;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    solve();
    return 0;
}
