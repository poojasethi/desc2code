#include <bits/stdc++.h>
using namespace std;

const int N = 2000010;
char s[N],str[N];
int rad[N];
int sum[N];
int pre[3][N];

int main()
{
    scanf("%s",s);
    str[0] = '$';
    str[1] = '#';
    int n = 2;
    for(int i = 0; s[i]; i ++) {
        str[n ++] = s[i];
        str[n ++] = '#';
    }
    int ma = 0,re;
    for(int i = 1; i < n; i ++) {
        if(ma > i) rad[i] = min(ma - i,rad[2 * re - i]);
        else rad[i] = 1;
        while(str[i - rad[i]] == str[i + rad[i]]) rad[i] ++;
        if(rad[i] + i > ma) {
            ma = rad[i] + i;
            re = i;
        }
    }
    int len = strlen(s);
    for(int i = 1; i <= len; i ++) {
        sum[i] = sum[i - 1] + (s[i - 1] - '0');
        sum[i] %= 3;
        for(int j = 0; j < 3; j ++)
            pre[j][i] = pre[j][i - 1];
        if(s[i - 1] != '0') {
            pre[sum[i]][i] ++;
        }
    }
    long long ans = 0;
    for(int i = 2; i < n; i ++) {
        if(str[i] == '#') {
            int len = (rad[i] - 1) / 2;
            int id = i / 2;
            ans += pre[sum[id]][id + len] - pre[sum[id]][id];
        }
        else {
            int id = i / 2; 
            int x = (str[i] - '0') % 3;
            int len = (rad[i] - 1) / 2;
            if(!x) ans ++;
            x = (sum[id] + x) % 3;
            ans += pre[x][id + len] - pre[x][id];
        }
    }
    cout << ans << endl;
    return 0;
}
