#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define f first
#define s second
#define N 1000007
#define cs 1373
#define BIT(i, n) ( (n >> i) & 1 )
#define ln 1000000000
#define oo 1000000007
#define Pa pair <int, int>

using namespace std;

string S;
char P[N];
int n, p, cnt[3][N], Sum[N], DP1[N], DP2[N];
ll ans = 0;

int main()
{
    //filein("inp.txt");   fileout("out.txt");
    scanf("%s", &P);
    //for(int i=0; i<1000000; i++)    P[i] = '3';
    S = P;
    n = S.size();
    S = ' ' + S;
    for(int i=0; i<=n; i++)
    {
        for(int j=0; j<3; j++)
            cnt[j][i+1] = cnt[j][i];
        if(i)   Sum[i] = (Sum[i-1] + S[i] - '0') % 3;
        if(S[i+1] != '0' || i == n)
            cnt[Sum[i]][i+1]++;
    }
    int L = 0, R = 0;
    for(int i=1; i<=n; i++)
    {
        int k = ((R < i) ? 0 : min(DP1[L+R-i], R-i)) + 1;
        while(S[i+k] == S[i-k] && i+k<=n && i-k>=1)   k++;
        DP1[i] = --k;
        if(DP1[i] + i > R)
        {
            R = i + DP1[i];
            L = i - DP1[i];
        }
        int M = (S[i] - '0') % 3;
        ans += (M == 0);
        if(DP1[i] == 0)  continue;
        int rest = (Sum[i-1] - M + 3) % 3;
        ans += cnt[rest][i-1] - cnt[rest][i-DP1[i]-1];
    }
    L = 0, R = 0;
    for(int i=1; i<=n; i++)
    {
        int k = ((R < i) ? 0 : min(DP2[L+R-i+1], R-i+1)) + 1;
        while(S[i+k-1] == S[i-k] && i+k-1<=n && i-k>=1)   k++;
        DP2[i] = --k;
        if(DP2[i] + i - 1 > R)
        {
            R = DP2[i] + i - 1;
            L = i - DP2[i];
        }
        if(DP2[i] == 0) continue;
        ans += cnt[Sum[i-1]][i-1] - cnt[Sum[i-1]][i-DP2[i]-1];
    }
    cout << ans;
}
