#include<iostream>
#include<stdio.h>
#define gc getchar_unlocked
#define hsh 9999999
using namespace std;
typedef long long ll;
//string str;
char str[1000005];
int arr[10004],str_[2000013];
ll p[2000013] ={0};
int modsum[1000005],mod[1000005][3];
int main()
{
    long long total=0;        
    int i=0,num,sz=0,j=2,c=0,r=0,k_,tmp=0,l=0;;
    char ch;
    
    while ((ch=gc()) != '\n')
    {str[i++] = ch;sz++;}
    //  int sz = str.length();
    
    for (int i=0;i<=10000;)
    {
        arr[i++]=0;arr[i++]=1;arr[i++]=2;
    }    
        
    //char* str_ = new char[2*sz+20];
    str_[0] = hsh+2;
    str_[1] = hsh;
    i=0;
    mod[0][1] = mod[0][2] = 0;
    mod[1][1] = mod[1][2] = 0;
    mod[0][0] = mod[1][0] = 1;
    while (i<sz)
    {
        modsum[l+2] = arr[modsum[l+1] + str[i] - 48];
        mod[l+2][0] = mod[l+1][0];
        mod[l+2][1] = mod[l+1][1];
        mod[l+2][2] = mod[l+1][2];
        if (str[i]=='0')
        {
            num=0;
            while (str[i++] == '0')
            {num++;}
            str_[j++] = -num;
            total+=num;
            str_[j++] = hsh;
            l++;
            i--;
        }    
        else
        {    
            if (arr[str[i]-48]==0) total++;
            mod[l+2][modsum[l+2]]++;
            str_[j++] = str[i++]-48;
            str_[j++] = hsh;
            l++;
        }    
    }
    str_[j]=hsh+1;
    
    for (int k=2;k<j;k++)
    {
//        cout<<"fvfv";
        k_ = 2*c - k;
        if (k<r)
        {
            p[k] = min(p[k_],ll(r-k));
        }
        
        while (str_[k + p[k] + 1] == str_[k - p[k] - 1] )
        p[k] ++;
            
        if (k + p[k] > r)
        {
            c = k;
            r = k +p[k];
        }    
    }
//  cout<<total<<"....";
    int indx,prev,md2,md,actp;  
    for (int i=2;i<j;i+=2)
    {
        indx = (i>>1) +1;
        actp = (p[i]>>1);
        if (str_[i] < 0)
        md = 0;
        else
        md = arr[(str_[i] )];
       /* if (md==0) {total++;cout*/
        
        if (str_[i+(actp<<1)] < 0 && actp > 0)
        actp--;
        
        prev = modsum[indx];
        md2 = arr[(md + prev)];
        tmp = (mod[indx+actp][md2] - mod[indx][md2]);
    //if (tmp >0) cout<<tmp<<"+++"<<indx<<".."<<indx + actp<<".."<<indx<<md<<"-"<<prev<<""<<md2<<endl;
        total+= tmp;
    }    
  //  cout<<total;
    for (int i=3;i<j;i+=2)
    {
        indx = (i>>1) +2;
        actp = (p[i]>>1);
        if (str_[i+(actp-1)*2] < 0 && actp >0)
        {actp--;}
        if (actp<=0) continue;
  //      cout<<"ooo"<<indx<<endl;
        prev = modsum[indx-1];
        md2 = prev;
        
        total+= (mod[indx+actp-1][md2] - mod[indx-1][md2]);
    }
  /*
    for (ll i=0;i<=sz+3;i++)
    {
        cout<<i<<"\t"<<mod[i][0]<<endl;
        cout<<i<<"\t"<<mod[i][1]<<endl;
        cout<<i<<"\t"<<mod[i][2]<<endl;
    }    
 

    
    for ( ll i=0;i<=j;i++)
    cout<<str_[i]<<"\t"<<p[i]<<endl;
  */
    cout<<total;//<<endl;
    
//system("pause");
}  