#include<bits/stdc++.h>

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define all(c) (c).begin(),(c).end()
#define mp make_pair
#define pb push_back
#define each(i,c) for(__typeof((c).begin()) i=(c).begin();i!=(c).end();i++)
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf = (int)1e9;
const double INF = 1e12, EPS = 1e-9;

const int N = 1000100;
int n, rad[2*N], sum[N][3], s[N];
char in[N];

void build(char *text, int n) {
  int i, j, k;
  for (i = 0, j = 0; i < 2*n; i += k, j = max(j-k, 0)) {
    while (i-j >= 0 && i+j+1 < 2*n && text[(i-j)/2] == text[(i+j+1)/2]) ++j;
    rad[i] = j;
    for (k = 1; i-k >= 0 && rad[i]-k >= 0 && rad[i-k] != rad[i]-k; ++k)
      rad[i+k] = min(rad[i-k], rad[i]-k);
  }
}

int main(){
	
	gets(in);
	n = strlen(in);
	
	rep(i, n){
		s[i + 1] = s[i] + in[i] - '0';
		s[i + 1] %= 3;
		
		rep(j, 3) sum[i + 1][j] = sum[i][j];
		if(in[i] > '0') sum[i + 1][s[i + 1]]++;
	}
	build(in, n);
	
	ll ans = 0;
	rep(i, 2 * n){
		int l = (i + 1) / 2;
		int r = l + (rad[i] + 1) / 2;
		int mod = i % 2 ? 0 : (in[i / 2] - '0') % 3;
		
		if(mod) mod = 3 - mod;
		mod += s[l];
		mod %= 3;
		
		ans += sum[r][mod] - sum[l][mod];
		/*
		cerr<<"i: "<<i<<" ans: "<<ans<<endl;
		cerr<<"l: "<<l<<" r: "<<r<<endl;
		dbg(mod);
		*/
	}
	rep(i, n) if(in[i] == '0') ans++;
	
	cout << ans << endl;
	
	return 0;
}