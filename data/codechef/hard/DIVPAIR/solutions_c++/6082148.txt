/*This is by Technical Bangla from University of Dhaka*/
#include <bits/stdc++.h>
using namespace std;

#define pi acos(-1.0)
#define e 2.7182818284590451
#define eps 1e-9
#define in_d(x) scanf("%d",&x)
#define nl printf("\n")
#define MAX 1001
#define Mod 1000000007
#define MOD(a,m) ((a)%(m)+(m))%(m)
#define Inf 1000000
#define filein freopen("input.txt","r",stdin)
#define fileout freopen("output.txt","w",stdout)
typedef long long int ll;
typedef unsigned long long int llu;

double sqr(double x) {return x*x;}
double distsqr(double x,double y,double a,double b) {return sqr((x-a))+sqr((y-b));}
double cosine_angle(double a,double b,double c) {return (double)(sqr(a)+sqr(b)-sqr(c))/((double)2.0*a*b);}

template <class T> T Maximum(T a, T b) {return a>b?a:b;}
template <class T> T Minimum(T a, T b) {return a<b?a:b;}
template <class T> T GCD(T a, T b) {if(!b) return a;return GCD(b,a%b);}
template <class T> void SWAP(T &a, T &b) {T temp=a;a=b;b=temp;return ;}
template <class T> T ExtendedEuclid(T a,T b,T c) {if(!a) return 0;return (b*ExtendedEuclid(b%a,a,-c)+c)/a;}
template <class T> T ModInverse(T a,T m) {return MOD(ExtendedEuclid(a,m,(T)1),m);}

ll Sum(int n)
{
    ll r=n;r*=r+1;return r/2;
}

int main()
{
    int t,n,m,l,u; ll a,b,c;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d",&n,&m);
        l=n/m;u=(n<<1)/m;
        a=n;a*=u-l;
        b=Sum(l);b*=m;b-=l;if(b<0) b=0;
        c=Sum(u)-Sum(l);if(c<0) c=0;c*=m;c-=u-l;if(c<0) c=0;
        if(m&1)
        {
            b-=l>>1;
            c+=(u-l)>>1;
            if(l&1) c++;
        }
        else
        {
            b-=l;
            c+=u-l;
        }
        if(b<0) b=0;if(c<0) c=0;
        b>>=1;c>>=1;
        a-=c;a+=b;
        printf("%lld\n",a);
    }
}
