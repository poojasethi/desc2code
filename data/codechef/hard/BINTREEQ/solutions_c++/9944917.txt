//Mitesh Agrawal
// #include <bits/stdc++.h>
#include <stdio.h>
#include <iostream>
#include <string>
#include <vector>
#include <map>
using namespace std;

vector<int> pathu;
vector<int> pathv;

int height(int u){
     int h=0;
     while(u){
          u/=2;
          h++;
     }
     return h;
}

int lca(int u, int v){
     int uh,vh;
     uh=height(u);
     vh=height(v);
     if(uh>vh){
          swap(u,v);
          swap(uh,vh);
     }
     while(uh!=vh){
          v/=2;
          vh--;
     }
     while(u!=v){
          u/=2;
          v/=2;
     }
     return u;
}

void filleru(int n,int u){
     pathu.clear();
     vector<int> v;
     while(n!=u){
          v.push_back(u);
          u/=2;
     }
     v.push_back(n);
     for(int i=v.size()-2;i>=0;i--)
          (v[i]==v[i+1]*2) ? pathu.push_back(1) : pathu.push_back(0); 
}

void fillerv(int n,int u){
     pathv.clear();
     vector<int> v;
     while(n!=u){
          v.push_back(u);
          u/=2;
     }
     v.push_back(n);
     for(int i=v.size()-2;i>=0;i--)
          (v[i]==v[i+1]*2) ? pathv.push_back(1) : pathv.push_back(0); 

}

int valid(int mi, int n){
     long long u,i,j,v;
     u=mi;
     for(i=0;i<pathu.size();i++){
          u*=2;
          if(pathu[i]==0)
               u++;
     }
     v=mi;
     for(i=0;i<pathv.size();i++){
          v*=2;
          if(pathv[i]==0)
               v++;
     }
     // cout<<mi<<" "<<max(u,v)<<endl;
     if(u<=n && v<=n)
          return 1;
     return 0;
}


int main()
{
     // freopen ("input.in","r",stdin); 
     int i,j,n,u,v,t,l,hi,lo,mi,ans;
     scanf("%d",&t);
     while(t--){
          ans=0;
          scanf("%d %d %d",&n,&u,&v);
          l=lca(u,v);
          // cout<<l<<endl;
          fillerv(l,v);
          filleru(l,u);
          // for(i=0;i<pathu.size();i++)
          //      cout<<pathu[i]<<" ";
          // cout<<endl;
          // for(i=0;i<pathv.size();i++)
          //      cout<<pathv[i]<<" ";
          // cout<<endl;

          lo=1;
          hi=n;
          while(lo<=hi){
               mi=lo+(hi-lo)/2;
               // cout<<lo<<" "<<mi<<" "<<hi<<endl;
               // cout<<valid(mi,n)<<endl;
               if(valid(mi,n)){
                    ans=max(ans,mi);
                    lo=mi+1;
               }
               else
                    hi=mi-1;
          }
          cout<<ans<<endl;

     }

     return 0;
}      