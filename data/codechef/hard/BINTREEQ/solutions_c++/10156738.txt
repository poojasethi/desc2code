//amazing takes time, legendary requires patience
#include "bits/stdc++.h"
#define sd(n) scanf("%d", &(n))
#define rep(i, x, n) for (int i = x, _n = (n); i < _n; ++i)
#define repi(i, a) for(typeof((a).begin()) i = (a).begin(), _##i = (a).end(); i != _##i; ++i)
#define pra(v) repi(it, v) cout << *it << " "; cout << endl;
#define SZ(c) (int)(c).size()
#define lcm(a,b) (a*(b/__gcd(a,b)))
#define VI vector<int>
#define all(c) (c).begin(), (c).end()
#define allr(c) (c).rbegin(), (c).rend()
#define pb push_back
#define mii map<int, int>
#define pii pair<int, int>
#define pip pair<int, pii>
#define F first
#define S second
#define mp make_pair
#define lli long long int
#define llu unsigned long long
#define CLR(p) memset(p, 0, sizeof(p))
#define SET(p) memset(p, -1, sizeof(p))
#define INF 0x3f3f3f3f
#define pi 3.141592653589793
#define debug 0
using namespace std;

lli get_node(int v, int power, int part)
{
	return v*1ll*power + part;
}


int main()
{
	int q, n, u, v;
	sd(q);
	while(q--)
	{
		sd(n);
		sd(u);
		sd(v);

		int u_power = 1, v_power = 1, u_part = 0, v_part = 0;
		
		while(u != v)
		{
			if(u > v)
			{
				u_part += u_power*(u%2);
				u_power *= 2;
				u /= 2;
			}
			else
			{
				v_part += v_power*(v%2);
				v_power *= 2;
				v /= 2;
			}
		}

		
		lli lo = 1, hi = n;
		while(lo != hi)
		{
			lli mid = (lo + hi + 1)/2;
			
			if(get_node(mid, u_power, u_part) <= n and get_node(mid, v_power, v_part) <= n)
				lo = mid;
			else
				hi = mid-1;
		}
		printf("%lld\n", lo);
	}
    return 0;
}    

