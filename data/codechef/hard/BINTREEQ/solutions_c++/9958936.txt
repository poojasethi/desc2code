#include <cstdio> 
#include <iostream> 
#include <cmath> 
#include <string> 
#include <list> 
#include <vector> 
#include <algorithm> 
#include <functional> 
#include <utility> 
#include <set> 
#include <map> 
#include <complex> 
#include <queue> 
#include <stack> 
#include <cstdlib> 
#include <ctime> 
#include <cstring> 
#include <string.h>  
using namespace std;

#define pb push_back
#define clr(a) memset(a, 0, sizeof(a))
#define forl(i,l,u) for(int i=(l);i<(u);i++)
#define forn(i,n) forl(i,0,n)

typedef long long int ll;
typedef pair<int, int> ii;
const int maxn=1e5+1;
const int maxd=1e7+7;
const int mod = 1e9+7;


int lca(int u,int v){
    //cerr<<u<<" "<<v<<endl;
    if(u==v)
        return u;
    else if(u>v)
        (u%2==0)?u=u/2:u=(u-1)/2;
    else
        (v%2==0)?v=v/2:v=(v-1)/2;
    return lca(u,v);
}
int dist(int u,int v,ll &k){
    int w=max(u,v);
    k=lca(u,v);
    int count=0;
    while(w!=k){
        (w%2==0)?w=w/2:w=(w-1)/2;
        count++;
    }
    return count;
}
ll ipow(ll base, ll exp)
{
    ll result = 1;
    while (exp)
    {
        if (exp%2)
            result = (result*base);
        exp >>= 1;
        base = (base*base);
    }
    return result;
}
int main()
{
    ios::sync_with_stdio(false);
    int q;
    cin>>q;
    while(q--){
        ll n,u,v;
        cin>>n>>u>>v;
        ll k;
        int w=max(u,v);
        int d =dist(u,v,k);
        ll e = ipow(2,d);
        ll x = w-(k*e);
        ll ans;
        ans=floor((n-x)/e);  
        cout<<ans<<endl;
    }
    
}





