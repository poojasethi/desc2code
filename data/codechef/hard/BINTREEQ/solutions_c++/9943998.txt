/*_______SHREY MANIK______*/
#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include <list>
#include <bitset>
#define ff first
#define ss second
#define mod 1000000007
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
typedef long long LL;
typedef pair< int , int > pii;
typedef pair< int , LL> pil;
typedef pair< LL, int>pli;
typedef pair< LL, LL> pll;
typedef vector< LL >vl;
typedef vector< int > vi;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}
template<class T>T powmod(T a,T b) {T res=1;if(a>=mod)a%=mod;for(;b;b>>=1){if(b&1)res=res*a;if(res>=mod)res%=mod;a=a*a;if(a>=mod)a%=mod;}return res;}

int q,n,u,v,cpath,f,ct1,anc,ct2,ans,x,y;
vi v1,step,st;
bool valid(int a)
{
	int x = a;
	for(int i=0;i<step.size();i++)
	{
		
		if(step[i] == 0)
			x*=2;
		else x=x*2 + 1;
		if(x>n)
		{
		
		return 0;
		}
	}
	x=a;
	for(int i=0;i<st.size();i++)
	{
		
		if(st[i] == 0)
			x*=2;
		else x=x*2 + 1;
		if(x>n)
		{
		
		return 0;
		}
	}
	return 1;
}
int main()
{
  cin>>q;
  while(q--)
  {
  	cin>>n>>u>>v;
	if(u>v)
  	swap(u,v);
  	x=u;
  	f=0;
  	cpath=0;
  	ct1=0,ct2=0;
  	ans=0;
  	while(x>0)
  	{
  		
  		v1.pb(x);
  		x/=2;
  		
	}
	y=v;
	while(y>0)
	{
		if(find(v1.begin(), v1.end(),y)!= v1.end())
		{
				anc=y;
				break;
			}
		if(y%2==0)
		step.pb(0);
		else step.pb(1);
		y/=2;
		ct2++;
	}
	//cout<<anc<<endl;
	while(u>anc)
	{
		if(u%2==0)st.pb(0);
		else st.pb(1);
		u/=2;
	}
	x = n;
	y = n;
	reverse(step.begin(),step.end());
	reverse(st.begin(),st.end());
	//for(int i=0;i<step.size();i++)cout<<step[i]<<" " ;
	//cout<<endl;
	//for(int i=0;i<st.size();i++)cout<<st[i]<<" " ;
	//cout<<endl;	
	int low=1,high=n,mid;
  while(low<=high)
  {
  	 mid=(low+high)/2;
	  if(valid(mid))
  	{
  		low=mid+1;
  //		cout<<"moveright ";
	}
	else{
//		cout<<"moveleft ";
	 high=mid-1;
		}
		//cout<<mid<<endl;
	
  }
	ans=high;
	cout<<ans<<endl;
	v1.clear();
	st.clear();
	step.clear();
  }
  
  return 0;
}


