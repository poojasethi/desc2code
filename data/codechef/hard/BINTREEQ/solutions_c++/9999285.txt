// #include<abhi.944>

#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

#ifndef ONLINE_JUDGE
	#define TRACE
#endif

const long double PI=3.1415926535897932384626;
const ll MAX=1000000000+7;
const int INF = 0x3f3f3f3f;

#define ps printf(" ")
#define pn printf("\n")
#define sc(n) scanf("%d",&n)
#define pf(n) printf("%d",n)
#define forall(it, x) for(__typeof((x).begin()) it=(x).begin();it!=(x).end();it++)
#define sz size()
#define ff first
#define ss second
#define pb push_back //pop_back
#define mp make_pair
#define fill(a,val) memset(a,val,sizeof(a))
//#define pii pair <int ,int>

#ifdef TRACE
    #define trace(x)            cerr<<__FUNCTION__<<":"<<__LINE__<<": ERROR---->"<<x<<endl;
    #define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
    #define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
    #define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
    #define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl;
#else
    #define trace(x)
    #define trace1(x)
    #define trace2(x,y)
    #define trace3(x,y,z)
    #define trace4(a,b,c,d)
#endif

int main(int argc, char const *argv[])
{
    int t;
    sc(t);
    while(t--) {
        int n,u,v;
        sc(n); sc(u); sc(v);

        string f="",s="";

        while(u!=v) {
            if(u > v) {
                if(u&1) f+='R';
                else f+='L';
                u/=2;
            }
            else {
                if(v&1) s+='R';
                else s+='L';
                v/=2;
            }
        }

        int ex1=0,ex2=0;
        int val1=1,val2=1;

        reverse(f.begin(),f.end());
        reverse(s.begin(),s.end());

        //trace2(f,s);
        for(int i=0;i<f.sz;i++) {
            val1*=2;
            if(f[i]=='R') {
                ex1*=2;
                ex1++;
            } 
            else ex1*=2;
        }
        for(int i=0;i<s.sz;i++) {
            val2*=2;
            if(s[i]=='R') {
                ex2*=2;
                ex2++;
            }
            else ex2*=2;
        }

        //trace4(ex1,val1,ex2,val2);
        int ans1 = (n-ex1)/val1;
        int ans2 = (n-ex2)/val2;

        cout << min(ans1,ans2) << endl;
    }
    return 0;
}