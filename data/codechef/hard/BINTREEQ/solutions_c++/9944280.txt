#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll,ll>
#define MOD 1000000007
#define ll long long int
#define MAXINT 1000000001ll
#define SET(x,y) memset(x,y,sizeof(x));

using namespace std;

ll powers(ll a,ll b) {
	ll ans=1;
	while(b) {
		if(b&1)
			ans=(ans*a);
		a=(a*a);
		b>>=1;
	}
	return ans;
}

int test(string a,string b) {
	int i,la,lb;
	la=a.size();
	lb=b.size();
	if(la>lb)	return 1;
	if(la<lb)	return -1;
	for(i=0;i<la;i++) {
		if(a[i]<b[i])	return -1;
		else if(a[i]>b[i])	return 1;
	}
	return 0;
}

ll work(string sn,string sa,int ln,int la) {
	ll diff,ans,lesse,i;
	diff=ln-la-1;
	ans=powers(2,diff)-1;
	string x=sn.substr(ln-la,la);
	lesse=0;
	for(i=1;i<ln-la;i++)
		if(sn[i]=='1')
			break;
	for(;i<ln-la;i++) {
		lesse<<=1;
		if(sn[i]=='1')
			lesse++;
	}
	lesse++;
	if(test(x,sa)>=0)
		ans+=lesse;
	else
		ans+=lesse-1;
	return ans;
}

string conv(ll a) {
	string sa="";
	while(a) {
		if(a%2)	sa+="1";
		else	sa+="0";
		a>>=1;
	}
	reverse(sa.begin(),sa.end());
	return sa;
}

void solve(void) {
	ll n,a,b,la,lb,ln,ans,i;
	string sa,sb,sn;
	cin>>n>>a>>b;
	sa=conv(a);
	sb=conv(b);
	sn=conv(n);
	la=sa.size();
	lb=sb.size();
	ln=sn.size();
	for(i=0;i<la && i<lb;i++) {
		if(sa[i]!=sb[i])	break;
	}
	sa=sa.substr(i,la-i);
	sb=sb.substr(i,lb-i);
	if(test(sa,sb)<0)	sa=sb;
	la=sa.size();
	//cout<<sa<<" "<<la<<endl;
	if(la==0)	{cout<<n<<endl;return;}
	ans=work(sn,sa,ln,la);
	cout<<ans<<endl;
}

int main() {
	int i,t;
	cin>>t;
	for(i=1;i<=t;i++) {
		//cout<<"Case #"<<i<<": ";
		solve();
	}
	return 0;
}