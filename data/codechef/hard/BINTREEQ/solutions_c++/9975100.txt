#include <algorithm>
#include <map>
#include <vector>
using namespace std;
#include <stdio.h>

typedef long long ll;
int test, n, u, v;
map <int, int> mp;
vector <bool> bit;

int findCommon(int u, int v){
    mp.clear();
    while (u > 0){
        ++mp[u];
        u >>= 1;
    }
    while (v > 0){
        ++mp[v];
        v >>= 1;
    }

    int res = 0;
    for (map <int, int>::iterator it = mp.begin(); it != mp.end(); ++it)
    if (it->second == 2 && it->first > res)
        res = it->first;
    return res;
}

ll getVal(ll x){
    for (int i = 0; i < bit.size(); ++i)
        x = (x << 1) + bit[i];
    return x;
}

int main(){
    //freopen("in.txt", "r", stdin);
    scanf("%d", &test);
    while (test--){
        scanf("%d %d %d", &n, &u, &v);
        int common = findCommon(u, v);

        if (u < v)
            u = v;

        bit.clear();
        while (u != common){
            bit.push_back(u & 1);
            u >>= 1;
        }
        reverse(bit.begin(), bit.end());

        int res = 0;
        int lef = 1, rig = n;
        while (lef <= rig){
            int mid = (lef + rig) >> 1;
            if (getVal(mid) <= n)
                lef = (res = mid) + 1;
            else
                rig = mid - 1;
        }
        printf("%d\n", res);
    }
    return 0;
}
