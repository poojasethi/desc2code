#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pii >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<=k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

pll lca(ll x , ll y) {
	vii ans;
	while (x != y) {
		// cout << x << ' ' << y << '\n';
		if (x > y)
			x /= 2;
		else {
			if (y % 2 == 0)
				ans.pb(0);
			else
				ans.pb(1);
			y /= 2;
		}
	}
	reverse(all(ans));
	// print(ans , 0 , ans.size() - 1);
	pll sol = mp(1 , 0);
	rep(i , ans.size()) {
		sol.ff *= 2;
		sol.ss *= 2;
		if (ans[i] == 1)
			sol.ss++;
	}
	return sol;
}

int main(int argc, char const *argv[])
{
	fast;

	CASES {
		ll u , v , n;
		cin >> n >> u >> v;
		if (u > v)
			swap(u , v);
		pll sol = lca(u , v);
		// cout << sol.ff << ' ' << sol.ss << '\n';
		cout << max(0LL , (n - sol.ss) / sol.ff ) << '\n';
	}
	
	return 0;
}