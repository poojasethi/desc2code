#include <bits/stdc++.h>
using namespace std;

long long int getnode(int x,int power,int part)
{
	long long int temp=(long long int)1*x*power+part;
	return temp;
}

void solve()
{
	int n,u,v;
	
	cin>>n>>u>>v;
	
	int u_power=1;
	int v_power=1;
	
	int u_part=0;
	int v_part=0;
	
	while(u!=v)
	{
		if(u>v)
		{
			u_part+=u_power*(u%2);
			u_power+=u_power;
			u/=2;
		}
		else
		{
			v_part+=v_power*(v%2);
			v_power+=v_power;
			v/=2;
		}
	}
	
	int middle,left=1,right=n,result=1;
	
	while(left<right)
	{
		middle=left+(right-left+1)/2;
		
		if(getnode(middle,u_power,u_part)<=n&&getnode(middle,v_power,v_part)<=n)
		{
			left=middle;
		}
		else
		 right=middle-1;
	}
	
	//cout<<left<<" "<<right<<" ";
	
	cout<<left<<endl;
	
}

int main() {
	
	int t;
	cin>>t;
	
	while(t--)
	{
		solve();
	}
	
	return 0;
}