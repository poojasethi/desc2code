# BINTREEQ.py

from math import *

t = int(raw_input())
for _ in xrange(t):
	n,u,v = map(int,raw_input().split())
	u,v = min(u,v),max(u,v)
	copy_u = u;
	copy_v = v;
	arr_v = []
	while copy_v != copy_u :
		# print copy_v,copy_u
		if copy_u > copy_v :
			copy_u/=2;
		else:
			if copy_v %2 == 1 :
				arr_v.append(1);
			else :
				arr_v.append(0);
			copy_v/=2;
	# lca = copy_v
	# max_steps = max(u/lca,v/lca)
	max_steps = len(arr_v)
	ans = n;
	# arr_v = reverse(arr_v);
	# print arr_v,lca
	# print max_steps
	i = 0;
	while max_steps > 0:		
		if arr_v[i] == 0:
			ans/=2;
		else:
			ans = (ans-1)/2;
		i+=1;
		max_steps -= 1;
	print ans
