#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 65538, M = 2e5+2;
int n, m;
int x[M], y[M], z[M];
long long s[N];
vector <int> adj[N], c[N];
bool vis[N];

void Add_Edge(int u, int v, int cost){
	adj[u].push_back(v);
	c[u].push_back(cost);
}

void DFS(int u){
	vis[u] = 1;
	int v;
	for(int i = 0; i < adj[u].size(); i++){
		v = adj[u][i];
		if (!vis[v]){
			s[v] = s[u] + c[u][i];
			DFS(v);
		}
	}
}

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
	scanf("%d %d", &n, &m);
	for(int i = 0; i < m; i++){
		scanf("%d %d %d", &x[i], &y[i], &z[i]);
		Add_Edge(x[i]-1, y[i], z[i]);
		Add_Edge(y[i], x[i]-1, -z[i]);
	}
	for(int i = 0; i <= n; i++)
		if (!vis[i])
			DFS(i);
	for(int i = 0; i < m; i++)
		if (s[y[i]] - s[x[i]-1] != z[i]){
			printf("-1\n");
			return 0;
		}
	for(int i = 1; i <= n; i++)
		printf("%lld ", s[i] - s[i-1]);

	return 0;
}