#include <stdio.h>
#define MAXNUMS 444444
#define MAXPAIRS 444444
int i;
int f[MAXPAIRS+2];
int t[MAXPAIRS+2];
int p[MAXPAIRS+2];
long long int S[MAXNUMS+2];
int V[MAXPAIRS+2];
bool visited[MAXNUMS+2];
int a[MAXPAIRS+2];
int b[MAXPAIRS+2];
int Z[MAXPAIRS+2];
int pairs;


inline int read(){
	char ch;int res=0,fla=0,mu=1;
	while(1){
		ch=getchar();
		if(ch==10||ch==13||ch==32)if(fla)return res*mu;else continue;
		if(ch=='-')mu=-1;else res=res*10+ch-'0';
		fla=1;
	}
}


void dfs(int node){
	visited[node]=true;
	int i=f[node]; 
	
	while(i){
		if(!visited[t[i]]){
			S[t[i]]=S[node]+V[i];
			dfs(t[i]);
		}
		i = p[i];
	}
}

void addEdge(int x, int y, int z){
	t[++pairs]=y;
	p[pairs]=f[x];
	f[x]=pairs;
	V[pairs]=z;
}

int main(){	
	int N;
	int M;
	scanf("%d %d", &N, &M);
	for(i=1;i<=M;i++){
		//scanf("%d %d %d", &a[i], &b[i], &Z[i]);
		a[i]=read();
		b[i]=read();
		Z[i]=read();
		addEdge(a[i]-1, b[i], Z[i]);
		addEdge(b[i], a[i]-1, -Z[i]);
	}
	for(i=0;i<=N;i++){
		if(!visited[i])
			dfs(i);
	}
	for(i=1;i<=M;i++){
		if((S[b[i]]-S[a[i]-1])!=Z[i]){
			printf("-1\n");
			return 0;
		}
	}
	printf("%d", S[1]);
	for(i=2;i<=N;i++)
		printf(" %d", S[i]-S[i-1]);
		printf("\n");
	return 0;
}

