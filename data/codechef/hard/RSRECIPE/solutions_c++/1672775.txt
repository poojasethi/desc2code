#include <cstdio>
#include <vector>
#include <utility>
#include <cstring>

#define MXN 70000
#define MXM 200005

using namespace std;

long long prefixSum[MXN];
int vis[MXN];
vector< pair<int,int> > edges[MXN];

int dfs(int ind)
{
    int flag = 1;
    for(int i=0; i<edges[ind].size() && flag; i++) {
        int nxt, weight;
        nxt = edges[ind][i].first;
        weight = edges[ind][i].second;
        if(!vis[nxt]) {
            prefixSum[nxt] = prefixSum[ind] + weight;
            vis[nxt] = 1;
            flag = dfs(nxt);
        } else if(prefixSum[nxt] != prefixSum[ind] + weight) return 0;
    }

    return flag;
}

int main()
{
    int n, m, x, y, z;
    scanf("%d %d", &n, &m);
    for(int i=0; i<m; i++) {
        scanf("%d %d %d", &x, &y, &z);
        x--;
        edges[x].push_back(make_pair(y, z));
        edges[y].push_back(make_pair(x, -z));
    }

    memset(vis, 0, sizeof vis);

    int flag = 1;
    for(int i=0; i<=n && flag; i++) if(!vis[i]) {
        prefixSum[i] = 0;
        vis[i] = 1;
        flag = dfs(i);
    }

    if(!flag) {
        puts("-1");
        return 0;
    }

    for(int i=1; i<=n; i++) printf("%lld ", prefixSum[i] - prefixSum[i-1]);
    putchar('\n');
}
