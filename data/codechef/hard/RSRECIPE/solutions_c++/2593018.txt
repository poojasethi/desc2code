#include <stdio.h>
#include <vector>
#include <time.h>
using namespace std;
#define maxx 65540
#define ll long long
#define pii pair<int,ll>
ll s[maxx];
int vis[maxx];
int edge[200005][2];
ll cost[200005];
vector<vector<pair<int,ll> > > graph;
void dfs(int x,ll val)
{
	int i;
	s[x] = val;
	vis[x] = 1;
	for(i = 0; i < graph[x].size(); i++) {
		if (!vis[graph[x][i].first]) {
			dfs(graph[x][i].first,val+graph[x][i].second);
		}
	}
}
int main()
{
	int n,m;
	int i,j;
	float tym = (float) clock();
	scanf("%d%d",&n,&m);
	graph.resize(n+1);
	for (i = 0; i < m; i++) {
		int a,b;
		ll c;
		scanf("%d%d%lld",&a,&b,&c);
		graph[a-1].push_back(pii(b,c));
		graph[b].push_back(pii(a-1,-c));
		edge[i][0] = a-1;
		edge[i][1] = b;
		cost[i] = c;
	}
	s[0] = 0;
	for (i = 0; i <= n; i++) {
		if(!vis[i]) {
			dfs(i,0);
		}
	}
	for ( i = 0; i < m; i++) {
		if (cost[i] != s[edge[i][1]]-s[edge[i][0]]) {
			printf("-1\n");
			while ((clock()-tym)/CLOCKS_PER_SEC < 2.8);
			return 0;
		}
		else {
			int l,r;
			r = edge[i][1];
			l = edge[i][0];
			//printf("sum[%d] - sum[%d] = %lld\n",r,l,s[r]-s[l]);
		}
	}
	for ( i = 0; i < n; i++) {
		printf("%lld ",s[i+1]-s[i]);
	}
	printf("\n");
	while ((clock()-tym)/CLOCKS_PER_SEC < 2.8);
	return 0;
}

