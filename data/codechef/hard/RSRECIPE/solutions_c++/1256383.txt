#include <iostream>
#include <string>
#include <sstream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <list>
#include <map>
#include <set>
#include <fstream>
#include <cstring>

typedef long long int64;

using namespace std;
vector< pair<int,int> > adj[65537];
bool visited[65537] = {false};
int64 s[65537] = {0};
bool ok = true;

int dfs(int u)
{
    vector< pair<int,int> >::iterator it;

    for (it = adj[u].begin(); it != adj[u].end(); it++)
    {
        int v = (*it).first;
        int d = (*it).second;
        if (!visited[v])
        {
            visited[v] = true;
            s[v] = s[u] + d;
            dfs(v);
        }
        else if (s[v] != s[u] + d)
        {
            cout<<"-1";
            exit(0);
        }
    }
}

int main()
{
    int n,m;
    scanf("%d %d",&n,&m);
    int x,y,z;
    for (int i = 1; i <= m ; i++)
    {
        scanf("\n%d %d %d",&x,&y,&z);
        adj[x-1].push_back(make_pair(y,z));
        adj[y].push_back(make_pair(x-1,-z));
    }

    for (int i = 1; i <=n ; i++)
    {
        if (!visited[i])
        {
            visited[i] = true;
            dfs(i);
        }

    }
    for (int i = 1; i <= n; i++) cout<<s[i]-s[i-1]<<" ";

	return 0;
}
