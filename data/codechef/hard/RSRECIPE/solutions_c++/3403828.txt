#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<math.h>
#include<algorithm>
#include<set>
#include<map>
#include<utility>
#include<vector>
#include<string>
#include<stack>
#include<queue>
using namespace std;
#define MAXN 65540
vector < vector < pair < int , long long > > > Edges(MAXN);
bool vis[MAXN];
long long val[MAXN];
bool flag;
void dfs(int node, long long v)
{
    if (vis[node])
    {
        if (val[node] != v) flag = false;
        return;
    }
    vis[node] = true;
    val[node] = v;
    int i,now;
    long long c;
    for (i=0; i<Edges[node].size(); ++i)
    {
        now = Edges[node][i].first, c = Edges[node][i].second;
        dfs(now, v+c);
    }
}
int main()
{
    //freopen("data.txt", "r", stdin);
    int N,M,i,x,y;
    long long c;
    while (scanf("%d %d", &N, &M) != EOF)
    {
        for (i=0; i<=N; ++i) Edges[i].clear();
        while (M--)
        {
            scanf("%d %d %lld", &x, &y, &c);
            Edges[x-1].push_back(make_pair(y,c));
            Edges[y].push_back(make_pair(x-1,-c));
            //printf("%d %d %lld\n", x-1,y,c);
        }
        memset(vis, false, sizeof(vis));
        memset(val, 0, sizeof(val));
        flag = true;
        for (i=0; flag && i<=N; ++i)
        {
            if (!vis[i]) dfs(i,0);
        }
        if (!flag) puts("-1");
        else
        {
            printf("%lld", val[1]);
            for (i=2; i<=N; ++i) printf(" %lld", val[i]-val[i-1]);
            puts("");
        }
    }
    return 0;
}
