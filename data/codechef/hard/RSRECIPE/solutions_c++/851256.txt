#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<cstring>
#include<numeric>

using namespace std;

#define ll long long int 
#define ss1(a) scanf("%d",&a)
#define ss2(a,b) scanf("%d %d",&a,&b)
#define ss3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define loop(i,a,b) for(int i=a;i<b;i++)
#define loope(i,a,b) for(int i=a;i<=b;i++)
#define loopd(i,a,b) for(int i=a;i>=b;i--)

typedef vector<int> vi; 
typedef vector< vi > vvi; 
typedef pair<int,int> ii; 
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define mp(a,b) make_pair(a,b)
#define F first
#define S second

ll powr(int s,int p)
{
	if(p==0)
		return 1;	

	if(p%2==1)
	{
		ll q=powr(s,p/2);
		ll a=q;
		q=(a*a);
		q=(q*s);	
		return ( q );
	}

	else
	{
		ll q=powr(s,p/2);
		ll a=q;
		q=(a*a);	
		return (q);
	}
}
/*-----------------------------------------Main code starts---------------------------------*/

#define MAX 65536 
vector <vector <pair<ll,ll> > > Adj(MAX + 1);
ll cums[MAX+1];
ll A[MAX+1];
int vis[MAX+1];
int flag;
int n,m;
void init()
{
	loope(i,0,n)
	{	
		vis[i]=0;
		A[i]=0;
	}
	flag=0;
	return;
}

void DFS(int i)
{
	vis[i]=1;
	for(int j=0;j<sz(Adj[i]);j++)
	{
		ll x=Adj[i][j].F;
		ll z=Adj[i][j].S;
 	
		if(!vis[x])
		{
			cums[x]=cums[i]+z;
			DFS(x);
		}
		else
		{
			if(cums[x]!=cums[i]+z)
			{
				//printf("%lld %d",x,i);
				flag=1;	
			}
		}
	}
	return;
}

int main()
{
	ss2(n,m);
	loop(i,0,m)
	{
		ll x,y,z;
		scanf("%lld %lld %lld",&x,&y,&z);
		Adj[x-1].pb(mp(y,z));
		Adj[y].pb(mp(x-1,-z));
	}
	
	init();
	loope(i,0,n)
	{
		if(!vis[i])
		{
			cums[i]=cums[i-1];
			DFS(i);
			A[i]=0;
		}	
		else
			A[i]=cums[i]-cums[i-1];
	}

	if(flag)
	{
		printf("-1\n");
		return 0;
	}

	loope(i,1,n) printf("%lld ",A[i]);
	printf("\n");

	return 0;
}