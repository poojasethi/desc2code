#include <iostream>
using namespace std;
long long vals[20], a[4], mod=1000000;
int Q;
pair<long long,long long> coeff[4];
long long solve(long long cons[4], int upto) {
    //printf("Cons this size: ");
    //for (int i=0; i<Q-upto; i++) printf("%I64d ",cons[i]);
    //printf("\n");
    if (upto==Q) return 0;    
    //printf("Coeff multiplier is %I64d\n",coeff[upto].second);
 
    long long next[4];
    int numnew = Q-upto-1;
    for (int i=0; i<numnew; i++) {
        next[i] = ((cons[i+1]-(coeff[upto].second*cons[i])%mod)%mod+mod)%mod;
    }
    long long ret = solve(next,upto+1);
    ret = (ret + (coeff[upto].second*cons[Q-upto-1])%mod)%mod;
    return ret;
}
int main() {
    int P;scanf("%d %d",&P,&Q);
    for (int i=0; i<P; i++) {scanf("%lld",&a[i]);a[i] = (a[i]+mod)%mod;}
    for (int i=0; i<Q; i++) {scanf("%lld",&coeff[i].first);coeff[i].first = (coeff[i].first+mod)%mod;}
    for (int i=0; i<Q; i++) {scanf("%lld",&coeff[i].second);coeff[i].second = (coeff[i].second+mod)%mod;}
    for (int i=0; i<10; i++) {scanf("%lld",&vals[i]);vals[i] = (vals[i]+mod)%mod;}
    
    for (int x=0; x<10; x++) {
        // find last Q constants of the equations
        //printf("Cons: ");
        long long cons[4];
        for (int i=0; i<Q; i++) {
            cons[Q-1-i] = vals[9+x-i];
            for (int j=0; j<P; j++) cons[Q-1-i] = ((cons[Q-1-i]-a[j]*vals[8+x-i-j])%mod+mod)%mod;
            //printf("%I64d ",cons[i]);
        }
        //printf("\n");
        long long nextcoeff = solve(cons,0);
        //printf("Retcon: %I64d\n",nextcoeff);
        long long ans = nextcoeff;
        for (int j=0; j<P; j++) ans = (ans+a[j]*vals[x+9-j])%mod;
        vals[x+10]=ans;
        printf("%lld ",ans);
    }
    printf("\n");
}
/*
4a + 3b + 2c + d = A
8a + 9b + 8c + 5d = B
16a + 27b + 32c + 25d = C
32a + 81b + 128c + 125d = D
64a + 243b + 512c + 625d = E
 
3b + 4c + 3d = B-2A
9b + 16c + 15d = C-2B
27b + 64c + 75d = D-2C
81b + 256c + 375d = E-2D
 
(e-2d)-3(d-2c)
 
*/