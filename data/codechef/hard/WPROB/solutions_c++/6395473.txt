/* 
    Template: 
    By Jugal :) 
*/ 
#include<bits/stdc++.h> 
using namespace std; 

typedef long long ll; 
typedef vector <int> vi; 
typedef vector <vi> vii; 
typedef pair<int,int> pii; 
typedef int ft; 

#define get getchar_unlocked 
#define put putchar_unlocked 
#define pb push_back 
#define mp make_pair 
#define ff first 
#define ss second 
#define sz size() 
#define len length() 
#define rep(i,n) for(int i=0;i<n;i++) 
#define ref(i,a,n) for(int i=a;i<=n;i++) 
#define reb(i,n,a) for(int i=n;i>=a;i--) 
#define all(a) a.begin(),a.end() 
#define gi(n) scanf("%d",&n) 
#define gii(n) scanf("%lld",&n) 
#define gc(c) scanf(" %c",&c) 
#define pi(n) printf("%d",n) 
#define pii(n) printf("%lld",n) 
#define pc(c) printf("%c",c) 
#define ps printf(" ") 
#define pn printf("\n") 

void gl(char *str) { char c; int i=0; if((c=get())!='\n') str[i++]=c; while((c=get())!='\n') str[i++]=c;str[i]='\0'; } 
void pl(char *str) { rep(i,strlen(str)) put(str[i]); } 
void gfi(ft &n) { 
	char c; 
	ft sign=1; n=0; 
	while(((c=get())<'0' || c>'9') && c!='-'); 
	if(c=='-') sign=-1; if(c>='0' && c<='9') n=(n<<3)+(n<<1)+(c-'0'); 
	while((c=get())!='\n' && c!=' ') n=(n<<1)+(n<<3)+(c-'0'); 
	n*=sign; 
}

ll solve(int *dp,int x,int y,int l) {
	ll cost=0,noy=0,noz=0;
	rep(i,l) {
		if(dp[i]==x) cost+=(noy+noz);
		else if(dp[i]==y) {
			cost+=noz;
			noy++;
		} else noz++;
	}
	return cost;
}

char str[1000000];
int dp[1000000];

int main() 
{
	int t;
	gi(t);
	while(t--) {
		gl(str);
		int l=strlen(str);
		ll ans;
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=solve(dp,1,2,l);
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=min(solve(dp,2,1,l),ans);
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=min(solve(dp,1,3,l),ans);
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=min(solve(dp,3,1,l),ans);
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=min(solve(dp,2,3,l),ans);
		rep(i,l) if(str[i]=='r') dp[i]=1; else if(str[i]=='g') dp[i]=2; else dp[i]=3;
		ans=min(solve(dp,3,2,l),ans);
		cout << ans << endl;
	} 
	return 0; 
}
