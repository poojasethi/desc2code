#pragma comment(linker, "/STACK:1024000000,1024000000")
#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <cmath>
#include <map>
#include <vector>
#include <queue>
#include <assert.h>
using namespace std;
#define x first
#define y second
#define pii pair<int,int>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define FOREACH(it,x) for(typeof(x.begin())it=x.begin();it!=x.end();it++)
#define DBG(x) cerr<<#x<<"="<<x<<"\n";
#define ull unsigned long long
#define ll long long
#define inf 1000000007
#define mod 1000000007
#define N 100010


char s[N];
int main()
{
    int i,j,k,ca=0,T,m,n;
    scanf("%d",&T);
    while(T--){
        scanf("%s",s);
        n=strlen(s);
        int r=0,b=0;
        for(i=0;i<n;i++){
            r+=(s[i]=='r');
            b+=(s[i]=='b');
        }
        int v[3]={0,1,2};
        int w[3]={r,n-r-b,b};
        map<char,int>g;
        g['r']=0;g['g']=1,g['b']=2;
        ll ans=1e16;
        do{
            //for(i=0;i<3;i++)cerr<<v[0]<<" "<<v[1]<<" "<<v[2]<<"\n";
            int x=w[v[0]],y=w[v[1]],z=w[v[2]];ll res=0;
            for(i=n-1;i>=0;i--)
            if(g[s[i]]!=v[2])break;
            if(n-1-i==z){
                for(i;i>=0;i--)if(g[s[i]]!=v[1])break;
                if(i+1==x){ans=0;break;}
                for(j=i-1,k=0;j>=0;j--){
                    if(g[s[j]]==v[1])res+=i-j-k,k++;
                }
                ans=min(ans,res);
            }
            else{
                for(j=i-1,k=0;j>=0;j--){
                    if(g[s[j]]==v[2])res+=i-j-k,k++;
                }
                for(i;i>=0;i--){
                    if(g[s[i]]==v[2]){continue;}
                    if(g[s[i]]!=v[1])break;
                }
                if(i+1==x){ans=min(ans,res);continue;}
                for(j=i-1,k=0;j>=0;j--){
                    if(g[s[j]]==v[2])k++;
                    else if(g[s[j]]==v[1])res+=i-j-k,k++;
                }
                ans=min(ans,res);
                //DBG(res)
            }
        }while(next_permutation(v,v+3));
        printf("%lld\n",ans);
    }
    return 0;    
}