#include <iostream>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
#define MAXN 100005
#define inf 1e10+99
long int n;
char str[MAXN];
int arr[MAXN];
long long int cnt;
void swap(long int i,long int j)
{
     int temp=arr[i];
     arr[i]=arr[j];
     arr[j]=temp;
 }
 /*
long long int bubblesort(int r,int g,int b)
{
     long long int count=0;
     for(long int i=1;i<=n;i++)
     {
             if(str[i-1]=='r')arr[i]=r;
             if(str[i-1]=='g')arr[i]=g;
             if(str[i-1]=='b')arr[i]=b;
             
             
             }
     
     for(long int i=1;i<=n;i++)
     {
              for(long int j=1;j<n;j++)
              {
                       if(arr[j]>arr[j+1])
                       {
                          swap(j,j+1);
                          count++;                
                                          }
                       }
              
              }
     
     for(int i=1;i<=n;i++)
     cout<<arr[i]<<" ";
     cout<<endl;
        return count;
 }
 */
 void encode(int r,int g,int b)
 {
     for(long int i=0;i<n;i++)
     {
             if(str[i]=='r')arr[i]=r;
             if(str[i]=='g')arr[i]=g;
             if(str[i]=='b')arr[i]=b;
             
             
             }
     
      
  }
 int quicksort(long int l,long int r)
 {
    long int one=0,two=0,three=0;
    for(long int i=l;i<r;i++)
    {
             if(arr[i]==1){cnt+=two+three;one++;}
             if(arr[i]==2){cnt+=three;two++;}
             if(arr[i]==3)three++;
             
             }
             
    
    
     
 }
 int main()
 {
     ios_base::sync_with_stdio(false);
     cin.tie(NULL);
     
     int t;
     cin>>t;
     while(t--)
     {
               cin>>str;
               n=strlen(str);
               //long long int minsum=bubblesort(1,2,3);
              /* minsum=min(minsum,bubblesort(1,3,2));
               minsum=min(minsum,bubblesort(2,1,3));
               minsum=min(minsum,bubblesort(2,3,1));
               minsum=min(minsum,bubblesort(3,1,2));
               minsum=min(minsum,bubblesort(3,2,1));
               */
               long long int minsum=inf;
               for(int i=1;i<=3;i++)
               for(int j=1;j<=3;j++)
               for(int k=1;k<=3;k++)
               {
                       if(i!=j&&i!=k&&j!=k)
                       {
                                        cnt=0;
                                        encode(i,j,k);
                                        quicksort(0,n);
                                        minsum=min(minsum,cnt);   
                                           }
                       }
               
               cout<<minsum<<endl;
               }
     
     
 }
 
 