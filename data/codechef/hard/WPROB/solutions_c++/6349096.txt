#include <bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<ll> vin;
typedef vector<string> vs;
typedef vector<vector<ll> > vvin;
typedef vector<bool> vb;

#define REP(i,a,b) for(ll i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define BREP(i,a,b) for(ll i=a-1;i>=b;i--)
#define brep(i,n) BREP(i,n,0)
#define pb push_back
#define inf 999999999
#define mp make_pair
#define sz size()
#define DEBUG 0
#define all(vec) (vec).begin(),(vec).end()
#define first fi
#define second se
#define POPCOUNT __builtin_popcountll
#define CLR(x,y) memset(x,y,sizeof(x))
#define UNIQUE(V) (V).erase(unique((V).begin(),(V).end()),(V).end())
#define MIN(a,b) ((a)<(b)?(a):(b))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define NUMDIGIT(x,y) (((int)(log10((x))/log10((y))))+1)
#define SQ(x) ((x)*(x))
#define ABS(x) ((x)<0?-(x):(x))
#define FABS(x) ((x)+eps<0?-(x):(x))
#define LCM(x,y) (((x)/gcd((x),(y)))*(y))
#define mset(a,b) memset(a,b,sizeof a)
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
const int MOD = (int)1e9 + 7;

long long pow(long long base, long long exp, long long mod){
	long long result = 1;
	while(exp>0){
		if(exp&1) result*=base;
		base*=base;
		if(base>mod) base%=mod;
		if(result>mod) result%=mod;
		exp/=2;
	}
	return result;
}

long long mult(long long A, long long B) {
	if ( B == 0 ) return 0;
	long long u = mult(A, B/2);
	long long res;
	if ( B%2 == 0 ) 
		res = u + u;
	else
		res = u + u + A;
	while ( res >= MOD ) res -= MOD;
	return res;
}


int main() {
    std::ios::sync_with_stdio(false);
    string str;
    ll tc,ret,res,c2,c3,len;
    cin>>tc;
    while(tc--) {
        cin>>str;
        len=str.sz;
        char perm[3]={'0','1','2'};
        rep(i,len)
            str[i]=(str[i]=='b'?'2':(str[i]=='g'?'1':'0'));
        ret=1e18;
        do {
            res=0;
            c2=c3=0;
            rep(i,len) {
                if(str[i]==perm[0])
                    res+=(c2+c3);
                else if(str[i]==perm[1])
                    res+=c3;
                if(str[i]==perm[1])
                    c2++;
                else if(str[i]==perm[2])
                    c3++;
            }
            ret=MIN(ret,res);
        }while(next_permutation(perm,perm+3));
        cout<<ret<<endl;
    }
    
    return 0;
}