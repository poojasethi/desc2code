#define TRACE
#define DEBUG
 
#include <bits/stdc++.h>
#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
 
using namespace std;
 
typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;
 
// Basic macros
#define st          first
#define se          second
#define all(x)      (x).begin(), (x).end()
#define ini(a, v)   memset(a, v, sizeof(a))
#define re(i,s,n)  	for(int i=s;i<(n);++i)
#define rep(i,s,n)  for(int i=s;i<=(n);++i)
#define fr(i,n)     re(i,0,n)
#define repv(i,f,t) for(int i = f; i >= t; --i)
#define rev(i,f,t)  repv(i,f - 1,t)
#define frv(i,n)    rev(i,n,0)
#define pu          push_back
#define mp          make_pair
#define sz(x)       (int)(x.size())
 
const int oo = 2000000009;
const double eps = 1e-9;
 
#ifdef TRACE
    #define trace1(x)                cerr << #x << ": " << x << endl;
    #define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
    #define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
    #define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
    #define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
    #define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
 
#else
 
    #define trace1(x)
    #define trace2(x, y)
    #define trace3(x, y, z)
    #define trace4(a, b, c, d)
    #define trace5(a, b, c, d, e)
    #define trace6(a, b, c, d, e, f)
 
#endif
 
const int mx = 100000008;
 
vi fib;
map<int, int> last;
 
void print(int n) {
    printf("%d ", n);
    if(n == 0) {
        printf(".##.\n");
        return;
    }
    if(n == 1) {
        printf("..\n");
        return;
    }
    bool first = true;
    while(n > 1) {
        int i = last[n];
        n /= fib[i];
        if(!first) printf("#");
        fr(j, i + 2) printf(".");
        first = false;
    }
    assert(n == 1);
    printf("\n");
}
 
vi v;
set<int> si;
 
void pre() {
    v.pu(0);
    si.insert(1);
    while(sz(si)) {
        int cur = *si.begin();
        v.pu(cur);
        re(i, 1, sz(fib)) if(cur <= mx / fib[i]) {
            last[cur * fib[i]] = i;
            si.insert(cur * fib[i]);
        }
        si.erase(si.begin());
    }
}
 
int main() {
    int a = 1, b = 2;
    while(a < mx) {
        fib.pu(a);
        int c = a + b;
        a = b;
        b = c;
    }
    pre();
    int t;
    scanf("%d", &t);
    while(t--) {
        int l, u, r;
        scanf("%d %d %d", &l, &u, &r);
        int s = lower_bound(all(v), l) - v.begin();
        if(s + r - 1 < sz(v) && v[s + r - 1] <= u) {
            print(v[s + r - 1]);
        } else {
            printf("-1\n");
        }
    }
 
	return 0;
}