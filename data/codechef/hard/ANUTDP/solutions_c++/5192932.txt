#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<stack>
#include<cmath>
#include<iomanip>
#include<cstdlib>
#include<sstream>
#include<time.h>
using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define pb push_back
#define ss second
#define ff first
#define vi vector<int>
#define vl vector<ll>
#define s(n) scanf("%d",&n)
#define ll long long
#define mp make_pair
#define PII pair <int ,int >
#define PLL pair<ll,ll>
#define inf 1000*1000*1000+5
#define v(a,size,value) vi a(size,value)
#define sz(a) a.size()
#define all(a) a.begin(),a.end()
#define tri pair < int , PII >
#define TRI(a,b,c) mp(a,mp(b,c))
#define xx ff
#define yy ss.ff
#define zz ss.ss
#define in(n) n = inp()
#define vii vector < PII >
#define vll vector< PLL >
#define viii vector < tri >
#define vs vector<string>
#define foreach(v,c) for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define fill(a,v)  memset(a,v,sizeof a)
#define printall(a) rep(i,sz(a))cout<<a[i]<<endl;
#define DREP(a) sort(all(a)); a.erase(unique(all(a)),a.end());
#define INDEX(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
#define ok if(debug)
ll MOD = int(1e9) + 7;
ll powmod(ll num,ll power){if(power==0)return 1%MOD;if(power==1)return num%MOD;
      ll t = powmod(num,power/2)%MOD;return power%2?t*t%MOD*num%MOD:t*t%MOD;}
ll pow1(ll num,ll power){if(power==0)return 1;if(power==1)return num;	ll t = pow1(num,power/2);return power%2?t*t*num:t*t;}
int check(int);
int binarysearch(int len)//finds last 1 in 11111000
{int lo = 1,hi = len,mid,flag;while(lo<=hi){mid = hi+lo>>1;(flag = check(mid))?lo = mid+1:hi = mid-1;}return mid-1+flag;}
const int N = 1000*100+5;
int debug = 1;
int check(int a){return a;}
#define gc getchar()

inline int inp(){int n=0,s=1,c=gc;if(c=='-')s=-1;
      while(c<48)c=gc;while(c>47)n=(n<<3)+(n<<1)+c-'0',c=gc;return n*s;}
ll fib[50];
set<int>s;
vi a;
map<int,int> len,pre;
int main()
{
      ios :: sync_with_stdio(false);
    //  freopen("input.txt","r",stdin);
     // freopen("output.txt","w",stdout);
      int i,j,n,t;
      fib[0] = 1;
      fib[1] = 2;
      int no = 2;
      for(i=2;fib[i-1] <= int(1e8);i++)
      {
			fib[i] = fib[i-1] + fib[i-2];
			no++;
	  }
	  s.insert(1);
	  len[1] = 1;
	  pre[1] = 0;
	  len[0] = -1;
//	  cout<<"AA";
	  for(i=1;i<no;i++)
      {
			ll j = fib[i],t1 = fib[i];
			set<int> :: iterator it;
			for(it = s.begin();it != s.end();it++)
			{
				if((ll)(*it) * j <= int(1e8))
				{
					if(s.find((*(it)) * j) == s.end())
					{
						len[(*it) * j ] = len[*it] + 1 + i + 2;
						pre[(*it)*j] = *it;
					}
					s.insert((*it)*j);
				}
			}
		}
		set <int> :: iterator it;
		a.pb(0);
		for(it = s.begin(); it != s.end();it++)a.pb(*it);
		cin>>t;
		while(t--)
		{
			int l,r,n;
			cin>>l>>r>>n;
			vi :: iterator it1,it2;
			it1 = lower_bound(all(a),l);
			it2 = lower_bound(all(a),r);
			if(l == 0 && n == 1){cout<<"0 .##.\n";continue;}
		    if(*(it2) != r)it2 --;
			if(it2 - it1 + 1 < n){cout<<-1<<endl;continue;}
			int ind = (it1 - a.begin());
			ind += n-1;
			cout<<a[ind];
			cout<<' ';
			ind = a[ind];
		//	if(ind == 0){cout<<".##."<<endl;continue;}
			for(i = len[ind];i > 0;i--)
			{
				if(i > len[pre[ind]]+1)cout<<'.';
				else if(i == len[pre[ind]]+1)cout<<'#';
				else {ind = pre[ind];i++;}
			}
			cout<<endl;
		}			
		cin>>i;
//		return 0;
}

