#include<bits/stdtr1c++.h>
using namespace std;
typedef long long LL;
int n;

int dp[55];
int const MX=1e8;
int vis[(int)4e6];

#define getB(a,k) ((k[a/32]>>(a&31)) &1)
#define setB(a,k) (k[a/32]|=1<<(a&31))

vector<int> p,v;
map<int, vector< int> > ans;
void solve(int ind,LL n,vector<int> &path)
{
	if(n>MX || ind==p.size())
		return;
	if(!getB(n,vis)){
		ans[n]=(path);
		v.push_back(n);
		setB(n,vis);
	}

	solve(ind+1,n,path);
	LL k=p[ind];

	vector<int> t=path;
	for(;n*k<=MX;)
	{
		t.push_back(ind+3);
		solve(ind+1,n*k,t);
		k*=p[ind];
	}

}
void dot(int k)
{
	for(int i=0;i<k;i++)
		cout<<".";
}
void Print(int a)
{
	if(a==0) cout<<"#\n";
	else if(a==1) cout<<".\n";
	else
	{
		int c=0;
		vector<int> &v=ans[a];
		for(int i=0;i<v.size();i++)
		{
				//cout<<p[i]<<endl;
				if(c)cout<<"#";
				c++;
				for(int j=0;j<v[i];j++)
					cout<<".";

		}
		//cout<<a<<endl;
		cout<<endl;
	}
}
int main() {
#ifndef ONLINE_JUDGE
	freopen("2.in", "r", stdin);
	//freopen("2.out","w",stdout);
#endif // ONLINE_JUDGE
	ios::sync_with_stdio(false);
	cin.tie(NULL);
	cout.tie(NULL);
	dp[0]=0;
	dp[1]=1;
	dp[2]=1;
	for(int i=3;;i++)
	{
		dp[i]=dp[i-1]+dp[i-2];
		p.push_back(dp[i]);
		if(dp[i]>=MX){
			break;
		}
	}
	v.push_back(0);
	vector<int> ll;
	solve(0,1,ll);
	sort(v.begin(),v.end());
	//cout<<v.back()<<endl;
	/*cout<<v.size()<<endl;
	for(int i=0;i<19;i++)
		cout<<v[i]<<" ";
	cout<<endl;*/
	int tp,l,r,n;
	cin>>tp;
	while(tp--)
	{
		cin>>l>>r>>n;
		int ind=lower_bound(v.begin(),v.end(),l)-v.begin();
		//cout<<ind<<" "<<v[ind]<<endl;
		int nind=n+ind-1;
		if(nind >=v.size())
			cout<<-1<<endl;
		else if(v[nind]>r)
			cout<<-1<<endl;
		else{
			cout<<v[nind]<<" ";
			Print(v[nind]);
		}
	}

	return 0;

}
