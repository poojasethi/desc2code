// AUTHOR : SIKANDER MAHAN
// sikander_nsit
// PLAGIARISM IS BAD

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string.h>

#define tr(type,c,it) for(type::iterator it=c.begin();it!=c.end();++it)
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define itor(c) c::iterator
#define ll long long
#define vi vector<int>
#define vs vector<string>
#define si set<int>
#define msi multiset<int>
#define ii pair<int,int>
#define sii set<ii>
#define vii vector<ii>
#define vvi vector<vi>
#define pb push_back
#define mp make_pair
#define F first
#define S second

using namespace std;

int fib[100];
int N=100000000;
vector<int> ex[100];
set<int> s;
vector<int> v;

void func(int sz)
{
    int i;
    int temp;
    for(i=0;i<sz;++i)
    {
        temp=1;
        while(temp<=(N/fib[i]))
        {
            temp*=fib[i];
            ex[i].pb(temp);
        }
    }
}

int main()
{
    ios::sync_with_stdio(false);
    //freopen("input.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int t=0,i=0,j=0,n=0,m,k=0,ind;
    int temp,num;
    fib[0]=2;
    fib[1]=3;
    for(i=2;;++i)
    {
        fib[i]=fib[i-1]+fib[i-2];
        if(fib[i]>=N)
            break;
    }
    int sz=i;
    func(sz);
    s.insert(1);
    itor(si) it;
    for(i=0;i<sz;++i)
    {
        m=ex[i].size();
        v.clear();
        for(j=0;j<m;++j)
        {
            it=s.begin();
            num=N/ex[i][j];
            while(it!=s.end())
            {
                temp=(*it);
                if(temp<=num)
                    v.pb(temp*ex[i][j]);
                else
                    break;
                ++it;
            }
        }
        m=v.size();
        for(j=0;j<m;++j)
        {
            s.insert(v[j]);
        }
    }
    v.clear();
    v.pb(0);
    tr(si,s,it)
        v.pb(*it);
    cin>>t;
    int l,r;
    for(i=0;i<t;++i)
    {
        cin>>l>>r>>n;
        ind=lower_bound(all(v),l)-v.begin();
        ind+=n-1;
        if(ind<v.size() && v[ind]<=r)
        {
            cout<<v[ind]<<" ..";
            num=v[ind];
            j=sz-1;
            if(num==0)
            {
                cout<<"##.";
            }
            else
            {
                while(num>1)
                {
                	if(fib[j]==144 || fib[j]==8)
                	{
                		--j;
                		continue;
                	}
                    if(num%fib[j]==0)
                    {
                        num/=fib[j];
                        for(k=0;k<=j;++k)
                            cout<<".";
                        cout<<"#..";
                    }
                    else
                        --j;
                }
            }
        }
        else
            cout<<"-1";
        cout<<"\n";
    }
    return 0;
}
