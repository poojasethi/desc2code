#include<bits/stdc++.h>
using namespace std;
queue <int>q;
vector< int > ans;
int siz,n[100001],l[100001],r[100001],t,s[100001],res[100001];
map< pair<int,int> , int> p;
#define mp make_pair
#define f first
bool cmp(int i,int j)
{
    return l[i]<l[j];
}
void func(int n)
{
    int i,j=0,k=n,c;
    char temp,pr[100001];
    if(n==-1)
    {
        printf("\n");
        return ;
    }
    int a=n;
    int b=0;
    while(a!=-1)
    {
        if(b==0)
            pr[j++]='#';
        else
            pr[j++]='.';
        k=p[mp(a,b)];
        b=a;
        a=k;
    }
    for(i=0;i<j/2;i++)
    {
        temp=pr[i];
        pr[i]=pr[j-i-1];
        pr[j-i-1]=temp;
    }
    //printf("\n");
    //for(i=0;i<j;i++)
   // {
    //    prr[i]=pr[j-i-1];
   // }
    pr[j-1]='\0';
    printf("%s\n",pr);
    return ;
}
int main()
{
    int i,j,k,w,ptr,a,b;
    q.push(0);
    q.push(1);
    siz=0;
    p[mp(0,1)]=-1;
    while(!q.empty())
    {
        a=q.front();
        q.pop();
        b=q.front();
        q.pop();
        if(b==0)
            ans.push_back(a);
        if(a+b<=100000000&&p.find(mp(b,a+b))==p.end())
        {
            q.push(b);
            q.push(a+b);
            p[mp(b,a+b)]=a;
        }
        if(p.find(mp(b,0))==p.end())
        {
            q.push(b);
            q.push(0);
            p[mp(b,0)]=a;
        }
    }
    sort(ans.begin(),ans.end());
    scanf("%d",&t);
    for(i=0;i<t;i++)
    {
        scanf("%d %d %d",&l[i],&r[i],&n[i]);
        s[i]=i;
    }
    sort(s,s+t,cmp);
    ptr=0;
    for(i=0;i<t;i++)
    {
        w=s[i];
        while(ptr<(int)ans.size()&&l[w]>ans[ptr])ptr++;
        k=ptr+n[w]-1;
        if(k>100000000||k>=(int)ans.size()||ans[k]>r[w])
            res[w]=-1;
        else
            res[w]=ans[k];
    }
    //for(i=0;i<t;i++)
      //  printf("%d ",res[i]);
    for(i=0;i<t;i++)
    {
        printf("%d ",res[i]);
        func(res[i]);
    }
    return 0;
}
