#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cmath>
#include<iostream>
#include<fstream>
#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
using namespace std;
#define FOR(i,n) for( i = 0 ; i<n ; i++)
#define RFOR(i,a,b)  for( i = a ; i<b ; i++)
#define CLR(a) memset(a,0,sizeof(a))
#define MCLR(a) memset(a,-1,sizeof(a))

#define pi acos( -1 )
#define eps 1e-9

#define max( a, n ) ( ( a ) > ( n ) ? ( a ) : ( n ) )
#define min( a, n ) ( ( a ) < ( n ) ? ( a ) : ( n ) )
#define pb push_back
typedef pair<long long,long long> pii;
int board[ 502 ][ 502 ], n;
void boshai( int r, int c )
{
	int i, j;
	for(i = c ; i <= n ; i ++ ) 
		if( board[ r ][ i ] == -1) break;
		else if( board[ r ][ i ] == 0 ) board[ r ][ i ] = c;
	for(i = r + 1, j = c + 1; i <= n && j <= n ; i ++, j ++)
		if ( board[ i ][ j ] == -1 ) break;	
		else if( board[ i ][ j ] == 0 ) board[ i ][ j ] = c;
	for(i = r - 1, j = c + 1; i > 0 && j <= n ; i --, j ++)  
		if ( board[ i ][ j ] == -1 ) break;	
		else if( board[ i ][ j ] == 0 ) board[ i ][ j ] = c;
}
void shorai(int col)
{
	int i, j;
	for(i = 1; i <= n ; i ++ ) for(j = 1; j <= n ; j ++ ) if( board[ i ][ j ] == col ) board[ i ][ j ] = 0;
}

bool call( int col )
{
	if( col > n ) return true;
	int i;
	for(i = 1 ; i <= n ; i ++ ) if( board[ i ][ col ] == 0 ){
		boshai( i, col );
		if( call ( col + 1 ) )	return true;
		shorai( col );
	}
	return false;
}
int main()
{
//	freopen(".txt","r",stdin);
	int tc;
	cin >> tc;
	while( tc  -- )
	{	
		CLR( board );
		int k, i, a, b, j;
		cin >> n >> k;
		for( i = 0; i < k ; i ++ ) cin >> a >> b, board[ a ][ b ] = -1;
		call( 1 );
		//	show();
		for( j = 1; j <= n ; j ++ ) for(i = 1; i <= n ; i ++ )  if( board[ i ][ j ] == j ){
			if( j > 1 ) cout <<" ";
			cout << i; 
		}
		cout << endl;

	}
	return 0;
}