#include<cstdio>
#include<cstring>
int T,i,N,M,x,y;
int P[505],f[505][505];
void Attack(int i,int j)
{
	int L,M,R,k;
	L=M=R=j;
	for(k=i+1;k<=N;++k)
	{
		--L,++R;
		if(L>0&&L<=N&&f[k][L]==1) L=-1;
		if(M>0&&M<=N&&f[k][M]==1) M=-1;
		if(R>0&&R<=N&&f[k][R]==1) R=-1;
		if(L>0&&L<=N) f[k][L]+=2;
		if(M>0&&M<=N) f[k][M]+=2;
		if(R>0&&R<=N) f[k][R]+=2;
	}
}
void Remove(int i,int j)
{
	int L,M,R,k;
	L=M=R=j;
	for(k=i+1;k<=N;++k)
	{
		--L,++R;
		if(L>0&&L<=N&&f[k][L]==1) L=-1;
		if(M>0&&M<=N&&f[k][M]==1) M=-1;
		if(R>0&&R<=N&&f[k][R]==1) R=-1;
		if(L>0&&L<=N) f[k][L]-=2;
		if(M>0&&M<=N) f[k][M]-=2;
		if(R>0&&R<=N) f[k][R]-=2;
	}
}
void prt()
{
	int i;
	for(i=1;i<=N;++i) printf("%d ",P[i]);
	printf("\n");
}
bool dfs(int i)
{
	int j;
	if(i>N)
	{
		prt();
		return 1;
	}
	for(j=1;j<=N;++j)
		if(!f[i][j])
		{
			Attack(i,j);
			P[i]=j;
			if(dfs(i+1)) return 1;
			Remove(i,j);
		}
	return 0;
}
int main()
{
	for(scanf("%d",&T);T--;)
	{
		scanf("%d%d",&N,&M);
		memset(f,0,sizeof(f));
		for(i=1;i<=M;++i)
		{
			scanf("%d%d",&x,&y);
			f[y][x]=1;
		}
		dfs(1);
	}
	return 0;
}
