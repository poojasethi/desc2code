#include<iostream>
using namespace std; 
int board[505][505];
int n=0;
bool solve(int);
void print();
bool isSafe(int,int);

void print()
{
     for(int i=0;i<n;i++)
             for(int j=0;j<n;j++)
                     if(board[j][i]==2) cout<<j+1<<" ";
}

bool solve(int col)
{
     if(col==n)
     {
      print();cout<<endl;
      return true;
     }
     for(int i=0;i<n;i++)
     {
      if(board[i][col]==0&&isSafe(i,col))
      {
       board[i][col]=2;
       if(solve(col+1)==true) 
       return true;
       board[i][col]=0;
      }
    }
    return false;
}
inline bool isSafe(int row, int col)
{     
     int flag=0;
     for(int j=col-1;j>=0;j--)
             {
              if(board[row][j]==1)break;
              if(board[row][j]==2){flag=1;break;}
             }
     if(flag==1)return false;
     
     for(int i=row-1,j=col-1;i>=0&&j>=0;i--,j--){
             if(board[i][j]==1)break;
             if(board[i][j]==2){ flag=1;break;}
             }
     if(flag==1)return false;
     
     for(int i=row+1,j=col-1;i<n&&j>=0;i++,j--){
             if(board[i][j]==1)break;
             if(board[i][j]==2){flag=1;break;}
             }
      if(flag==1)return false;
      
     return true;
}
     
     
int main()
{
    int t,k,i,j,l,m,p;
    cin>>t;
    while(t--)
    {
               cin>>n>>k;
               //intialize the board
               for(l=0;l<n+1;l++)
                       for(m=0;m<n+1;m++)
                               board[l][m]=0;
               
               for(p=0;p<k;p++){
                       cin>>i>>j;
                       board[i-1][j-1]=1;
                       }
               solve(0);
    }
 return 0;
}
