#include <cstdio>
#include <cmath>
#include <algorithm>

using namespace std;

long long int primes[112345];
bool seive[1000000];
int idx;

long long int prime(long long int ar[], int n) {
    
    long long int gcd, root;
    for(int i=0; i<n; i++)
        for(int j=i+1; j<n; j++) {
            gcd = __gcd(ar[i], ar[j]);
            if(gcd>1)
                return gcd;
        }
    
    
    for(int i=0; i<n; i++) {
        for(int j=0; j<idx && ar[i]>1; j++)
            if(ar[i] % primes[j] == 0) {
                if(ar[i] % (primes[j]*primes[j]) == 0)
                    return primes[j];
                ar[i] /= primes[j];
            }
            
            root = (long long int)(sqrt(ar[i])+0.5);
            if(ar[i] != 1 &&  root*root == ar[i])
                return root;
    }
    
    return -1;
}

int main() {
    
    idx=0;
    for(int i=2; i<=1000; i++) {
        if(seive[i] == false) {
            for(int j=i*i; j<1000000; j += i)
                seive[j] = true;
        }
    }
    for(int i=2; i<1000000; i++) {
        if(seive[i] == false)
            primes[idx++] = (long long int)i;
    }
            
    int t;
    scanf("%d",&t);
    while(t--) {
        int n;
        scanf("%d",&n);
        long long int ar[n];
        for(int i=0; i<n; i++)
            scanf("%lld",&ar[i]);
        
        printf("%lld\n",prime(ar, n));
        
    }
    
    return 0;
}