    #include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

int MOD,k;

ll fastexp(ll base,ll pow)
{
    if(pow==0)
        return 1;
    if(pow==1)
        return base;
    ll res=fastexp(base,pow/2);
    res=(res*res)%MOD;
    if(pow%2==1)
        res=(res*base)%MOD;
    return res;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    int t;s(t);
    while( t-- )
    {
        ll n;sll(n);sll(k);
        MOD = 1;
        REP(i,0,k - 1)
            MOD *= 10;
        long double nlogn = n * log10l(n);
        long double ans1 = pow(10 , nlogn - floor(nlogn) + k - 1 );
        printf("%lld ",ll(ans1));
        ll ans = fastexp(n,n);
        ll ch = ans;
        int noofdig = 0;
        while( ch > 0 )
        {
            ch /= 10;
            noofdig++;
        }
        REP(i,0,min(k - noofdig - 1 , k - 2) )
            printf("0");
        printf("%lld\n",ans);
    }
    return 0;
}
