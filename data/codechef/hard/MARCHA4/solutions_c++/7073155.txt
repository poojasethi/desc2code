#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>     
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;

#define pb push_back
#define mp make_pair

#define ALL(x) (x).begin(),(x).end()
#define CLR(a,b) memset(a,b,sizeof(a))
#define REPN(x,a,b) for (int x=a; x<b;++x)
#define REP(x,b) REPN(x, 0, b)
#define sz(x) ((int)(x).size())
#define EPS 1e-9

#define dbg(x) cout << #x << " = " << x << endl
#define dbg2(x, y) cout << #x << " = " << x << "  " << #y << " = " << y << endl
#define dbg3(x, y, z) cout << #x << " = " << x << "  " << #y << " = " << y << "  " << #z << " = " << z << endl
#define dbg4(x, y, z, w) cout << #x << " = " << x << "  " << #y << " = " << y << "  " << #z << " = " << z << "  " << #w << " = " << w <<  endl

typedef long long ll;
typedef long double ld;


int main() {

    int T, n, k, m;
    cin >> T;
    REP(tc, T) {
        cin >> n >> k; 

        ld y = n*log10l(n);
        ld r = pow(10, y - floor(y) + k - 1); //n ^ m = 10^x, m log n = x log 10, x = m log_10 n. floor(log_10 n) = gives the number of digits of n

        ll mod = 1;
        REP(i, k) mod *= 10;
        ll pt = n, b = n;
        ll res = 1;
        while (pt) {
            if (pt & 1) res *= b, res %= mod;
            b *= b;
            b %= mod;
            pt >>= 1LL;
        }

        printf("%lld ", ll(r));
        string S = "";
        while (res) {
            S = string(1, ((res%10)+'0')) + S;
            res /= 10;
        }
        while (S.length() < k) S = "0" + S;
        cout << S << "\n";
    }

    return 0;
}
