#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdio>
#include <cmath>
using namespace std;

void print(int n, int k)
{
	char t[10], s[10];
	int i, j;
	for(i = 0; i < k; i++) {
		t[i] = (n % 10) + '0';
		n = n / 10;
	}
	t[i] = '\0';
	
	n = strlen(t);
	for(i = n - 1, j = 0; i >= 0; i--) {
		s[j++] = t[i];
	}
	s[j] = '\0';
	printf("%s\n", s);
}

long long exponent(long long b, long long e, long long mod)
{
	long long r = 1;
	b = b % mod;
	while(e > 0) {
		if(e & 1) {
			r = (r * b) % mod;
		}
		b = (b * b) % mod;
		e = e >> 1;
	}
	return r;
}

int main(int argc, char const *argv[])
{
	int t, n, k;
	long long first, last;
	long double x;
	
	scanf("%d", &t);
	while(t--) {
		scanf("%d %d", &n, &k);
		
		x = n;
		x = x * log10l(x);
		first = floorl(powl(10, x - floorl(x) + k - 1));
		last = exponent(n, n, pow(10, k));
		printf("%lld ", first);
		print(last, k);
	}
	return 0;
}