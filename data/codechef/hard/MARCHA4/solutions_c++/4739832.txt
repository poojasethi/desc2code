#include<bits/stdc++.h>

using namespace std;

int pow1[]={1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000};


int power(long long int x,int n,int mod)
{
        //printf("\n mod=%d %lld %d",mod,x,n);
    x=x%mod;
    int temp3=x;
    if(n==0)
        return (int)1;
    if(n==1)
        return (int)x;
    x=x*x;
    //printf("\n%d ",x);
    x=x%mod;

    if(n%2==0)
    {
        //printf("\n%d ",x);
        return power(x,n/2,mod);
    }
    else
    {
        int temp1=power(x,n/2,mod);
        long long int temp2=temp1 * (long long int)temp3;
        //printf(" temp2 %lld temp1 %d temp3 %d ",temp2,temp1,temp3);
        return (int)(temp2%mod);
    }
}

void print(long long int n,int k)
{
    //calculated 10 digit as n
    while(10-k!=0)
    {
        k++;
        n=n/10;
    }
    printf("%lld ",n);
}


int main()
{

    //printf("%.8f",1.23456789);
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,k;
        scanf("%d%d",&n,&k);
        //first k digit
        long double f = n * log10l(n);
        long long int f1=floor(f);
        long double f2=f-(long double)f1;
        long double f3=pow(10,f2+9);
        //printf("%.9lf ",f3);
        //double temp=(double)power(10,k-1,1000000009);
        //printf("%lf ",temp);

        //long long int f4=(pow1[9]*f3);
        print((long long int)floor(f3),k);

        //last k digit
        int f5;
//        if(k%2==0)
  //          f5=power((long long int)n,n,(int)pow(10,k)+1);
   // else
            f5=power((long long int)n,n,pow1[k]);
        //printf("%d",f5);
        int f6=f5;
        //printf(" f6=%d ",f6);
        while(f6>0)
        {
            k--;
            f6=f6/10;
        }
        //printf("\n res2=");
        while(k--)
            printf("0");
        if(f5!=0)
            printf("%d",f5);
        printf("\n");

    }

    //cout << pow(10,0.24);

    return 0;
}
