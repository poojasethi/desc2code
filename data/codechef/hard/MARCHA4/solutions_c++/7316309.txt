#include<bits/stdc++.h>
#include <iostream>
#include<algorithm>
#include<cstdio>
using namespace std;
#define LL long long
int get_int()
{
    int num = 0;
    char c = getchar_unlocked();
    int flag = 0;
    while(!((c>='0' && c<='9') || c == '-'))
        c=getchar_unlocked();
    if(c == '-')
    {
        flag = 1;
        c=getchar_unlocked();
    }
    while(c>='0' && c<='9')
    {
        num = (num<<1)+(num<<3)+c-'0';
        c=getchar_unlocked();
    }
    if(flag==0)
        return num;
    else
        return -1*num;
}
int get_LL()
{
    LL num = 0;
    char c = getchar_unlocked();
    int flag = 0;
    while(!((c>='0' && c<='9') || c == '-'))
        c=getchar_unlocked();
    if(c == '-')
    {
        flag = 1;
        c=getchar_unlocked();
    }
    while(c>='0' && c<='9')
    {
        num = (num<<1)+(num<<3)+c-'0';
        c=getchar_unlocked();
    }
    if(flag==0)
        return num;
    else
        return -1*num;
}
LL firstK(LL n,LL k);
LL lastK(LL n,LL k);
LL mod ;
int main() {
	int t;
	t = get_int() ;
//	printf("%lld %lld\n",firstK(4,2),lastK(4,2));
	LL n,k;
	while(t--)
	{
	  n = get_LL() ;
	  k = get_LL() ;
	  mod = 1 ;
	  for(int i=0;i<k-1;i++)
	    mod*=10 ;
	  printf("%lld ",firstK(n,k));
	  if(k==1)
	   printf("%01lld\n",lastK(n,k));
	  else if(k==2)
	   printf("%02lld\n",lastK(n,k)) ;
	  else if(k==3)
	   printf("%03lld\n",lastK(n,k)) ;
	   else if(k==4)
	    printf("%04lld\n",lastK(n,k));
	    else if(k==5)
	     printf("%05lld\n",lastK(n,k)) ;
	    else if(k==6)
	     printf("%06lld\n",lastK(n,k));
	     else if(k==7)
	      printf("%07lld\n",lastK(n,k));
	    else if(k==8)
	     printf("%08lld\n",lastK(n,k));
	     else if(k==9)
	      printf("%09lld\n",lastK(n,k)) ;
	}
	return 0;
}
LL firstK(LL n,LL k)
{
   long double intpart;
      return (LL) floorl( powl(10.0,modfl( ((long double)n * log10l((long double)n)) , &intpart ) + k - 1 ) );
    
}
LL lastK(LL n,LL k)
{
    LL powk = 1 ;
    for(int i=0;i<k;i++)
     powk*=10 ;
    LL ans = 1;
    LL tmp = n%powk ;
    while(n)
    {
        if(n&1)
         ans = (ans*tmp)%powk ;
        tmp =(tmp*tmp)%powk ; 
        n = n>>1 ;
        
    }
    return ans%powk ;
}
