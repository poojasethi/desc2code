#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define ll long long
const int mod=1000000007;
long long pwr(long long a,long long b,long long mod)
{
  if(b==0)
    return 1;
  long long temp=pwr(a,b/2,mod);
  temp=(temp*temp)%mod;
  if(b&1)
    temp=(temp*a)%mod;
  return temp;
}
long long pwr(long long a,long long b)
{
  if(b==0)
    return 1;
  long long temp=pwr(a,b/2);
  temp=(temp*temp);
  if(b&1)
    temp=(temp*a);
  return temp;
}
long long gcd(long long a,long long b)
{
  return b==0?a:gcd(b,a%b);
}
long long lcm(long long a,long long b)
{  
  return (a/gcd(a,b))*b;
}
long long modularInverse(long long a,long long m)
{ 
      return pwr(a,m-2,m);
}

long long firstK(long long n,int k)
{
  long double x=n*log10l(n);
  long double f=x-floor(x);
  return pow(10,f+k-1);
}
long long lastK(long long n,int k)
{
  return pwr(n,n,pwr(10,k));
}
int nod(long long n)
{
  if(n==0)
    return 1;
  int count=0;
  
  while(n)
  {
    n/=10;
    ++count;
  }
  return count;
}
int main(void)
{
  int t;
  cin>>t;
  while(t--)
  {
    long long n,k;
    cin>>n>>k;

    int nodL=nod(lastK(n,k));

    cout<<firstK(n,k)<<" ";
    for(int printed=nodL;printed<k;++printed)
      cout<<"0";
    cout<<lastK(n,k)<<endl;
  }
}