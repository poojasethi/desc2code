#include<iostream>
#include<stdio.h>
#include<math.h>
 
using namespace std;
 
 
int first_k_digits(int n,int k)
{
	long double nlog = (long double)log10l(n);
	long double value = (long double)n*nlog;
	long double frac = (long double)value - (int)value;
	long double digits = (long double)pow(10,frac);
	digits*=pow(10,k-1);
	return (int)digits;
}
 
int last_k_digits(int n,int k)
{
	long long int m = pow(10,k);
	long long int result = 1;
	long long int mod = n%m;
	while(n)
	{
		if(n%2 == 1)
		{
			result = result*mod % m;
		}
		mod = mod*mod % m;
		n>>=1;
	}
 
	return result;
}
 
void print(int first,int last,int k)
{
	switch(k)
	{
		case 9:
			printf("%09d %09d\n",first,last);break;
		case 8:
			printf("%08d %08d\n",first,last);break;
		case 7:
			printf("%07d %07d\n",first,last);break;
		case 6:
			printf("%06d %06d\n",first,last);break;
		case 5:
			printf("%05d %05d\n",first,last);break;
		case 4:
			printf("%04d %04d\n",first,last);break;
		case 3:
			printf("%03d %03d\n",first,last);break;
		case 2:
			printf("%02d %02d\n",first,last);break;
		case 1:
			printf("%01d %01d\n",first,last);break;
	}
}
 
 
 
 
 
main()
{
	int number_of_cases;
	scanf("%d",&number_of_cases);
	while(number_of_cases--)
	{
		int n,k;
		scanf("%d%d",&n,&k);
		int first = first_k_digits(n,k);
		int last = last_k_digits(n,k);
//		printf("%d %d\n",first,last);
		print(first,last,k);
	}
}
 