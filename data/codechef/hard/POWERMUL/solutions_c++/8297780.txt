#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <limits.h>
#include <time.h>
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<double,int> pdi;
typedef pair<pii,int> ppi;
typedef pair<ll,int> pli;
typedef pair<int,ll> pil;
typedef pair<ll,ll> pll;

#define PB push_back
#define MP make_pair
#define LB lower_bound
#define UB upper_bound
#define B begin()
#define E end()
//#define F first
//#define S second
#define CLR0(qwgh) memset(qwgh,0,sizeof(qwgh))
#define CLR1(qwgh) memset(qwgh,-1,sizeof(qwgh))
#define rep(i,a,b) for(i=a;i<=b;i++)
#define rem(i,a,b) for(i=a;i>=b;i--)
#define scd(x) scanf("%d",&x)
#define scl(x) scanf("%lld",&x)
#define scs(x) scanf("%s",x)
#define scc(x) scanf("%c",&x)
#define prd(x) printf("%d\n",x)
#define prl(x) printf("%lld\n",x)
#define prc(x) printf("%c\n",x)
#define prs(x) printf("%s\n",x)
#define parr(a,n) for(int o=0;o<n;o++) printf("%d ",a[o]);printf("\n")
#define parr1(a,n) for(int o=1;o<=n;o++) printf("%d ",a[o]);printf("\n")
#define MAXN 1000003

ll Fom[MAXN],mod,x[MAXN][30];

long long power(long long a,long long b){
	long long ans=1;
	while(b){
		if(b&1)
			ans=(ans*a)%mod;
		a=(a*a)%mod;
		b>>=1;
	}
	return ans;
}

ll modInverse(ll a, ll b){
	ll b0 = b, t, q;
	ll x0 = 0, x1 = 1;
	if (b == 1) return 1;
	while (a > 1) {
		q = a / b;
		t = b, b = a % b, a = t;
		t = x0, x0 = x1 - q * x0, x1 = t;
	}
	if (x1 < 0) x1 += b0;
	return x1;
}


int main(){
	int t,q,i,j,cnt;
	bool flag[MAXN];
	ll n,prime[30],temp,ans,m,r,y[30],z[30];
	clock_t tStart=clock();
	//freopen("inp.in","r",stdin);
	scd(t);
	while(t--){
		scanf("%lld%lld%d",&n,&m,&q);
		//printf("n %lld m %lld q %d\n",n,m,q);

		mod=m;
		cnt=0;

		if(m%2==0){
			prime[cnt++]=2;
			while(m%2==0)
				m/=2;
		}
		for(i=3;i<=n;i+=2){
			if(m%i==0){
				prime[cnt++]=i;
				while(m%i==0)
					m/=i;
			}
			if(m==1)
				break;
		}
		if(m!=1){
			prime[cnt++]=m;
		}
		Fom[1]=1;
		for(i=0;i<cnt;i++)
			x[1][i]=0;
		for(i=2;i<=n;i++){
			temp=i;
			for(j=0;j<cnt;j++){
				int x1=0;
				while(temp%prime[j]==0){
					temp/=prime[j];
					x1++;
				}
				x[i][j]=x[i-1][j]+x1*i;
			}
			temp=power(temp,i);
			Fom[i]=(Fom[i-1]*temp)%mod;
		}
		for(i=1;i<=q;i++){
			scl(r);
			ans=1;
			for(j=0;j<cnt;j++){
				temp=power(prime[j],x[n][j]-x[r][j]-x[n-r][j]);
				ans=(ans*temp)%mod;
			}
			temp=(Fom[r]*Fom[n-r])%mod;
			temp=(modInverse(temp,mod));
			temp=(temp*Fom[n])%mod;
			ans=(ans*temp)%mod;
			printf("%lld\n",ans);
		}
	}

	return 0;
}
