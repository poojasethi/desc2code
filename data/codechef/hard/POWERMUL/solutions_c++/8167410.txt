#include<cstdio>
#include<vector>
#define min(a,b) a>b?b:a
#define max(a,b) a>b?a:b
using namespace std;
vector<long long> prime;
inline void I(int &a)
{
 register int c;
 a=0;
 do c=getchar_unlocked(); while(c<'0');
 do
 {
  a=(a<<1)+(a<<3)+c-'0';
  c=getchar_unlocked();
 }while(c >= '0');
}
inline void O(long long a)
{
 register char s[30];
 register int t=-1;
 do s[++t]=a%10+'0',a/=10; while(a>0);
 while(t>=0) putchar_unlocked(s[t--]);
 putchar_unlocked('\n');
}
void sieve()
{
long long i,j,a[41100]={0};
for(i=2;i<=41000;i++)
if(!a[i])
for(j=i*i;j<=41000;j+=i)
a[j]=1;
for(i=2;i<=41000;i++)
if(!a[i])
prime.push_back(i);
}
long long pf[100];
int num;
void initp(int p)
{
num=0;
for(long long i=2;i*i<=p;i++)
{
if(p%i==0)
{
pf[num++]=i;
while(p%i==0) p/=i;
}
}
if(p>1) pf[num++]=p;
}
long long totient(long long m)
{
initp(m);
long long x = 1,y = m;
for(int i=0;i<num;i++)
{
x *= pf[i]-1;
m /= pf[i];
}
return x*m;
}
long long quitpow(long long n,long long m,long long mod)
{
long long ans=1,k=n;
if(n==1) return 1;
while(m)
{
if(m&1) ans=(ans*k)%mod;
m>>=1;
k=(k*k)%mod;
}
return ans;
}
int main()
{
int t;
I(t);
while(t--)
{
long long n,m,q; int jjj;
I(jjj); n=jjj;
I(jjj); m=jjj;
I(jjj); q=jjj;
if(n<=11)
{
long long temp[12][5] = {{0}};
for(int i=2;i<12;i++)
{
if(i==2) temp[i][0] = 2;
if(i==3) temp[i][1] = 3;
if(i==4) temp[i][0] = 8;
if(i==5) temp[i][2] = 5;
if(i==6) {temp[i][0] = 6;temp[i][1]=6;}
if(i==7) temp[i][3] = 7;
if(i==8) temp[i][0] = 24;
if(i==9) temp[i][1] = 18;
if(i==10) {temp[i][0] = 10;temp[i][2] = 10;}
if(i==11) temp[i][4] = 11;
}
for(int i=3;i<12;i++)
{
for(int j=0;j<5;j++)
temp[i][j]+=temp[i-1][j];
}
int v[5] = {2,3,5,7,11};
while(q--)
{
long long k;
int pp;
I(pp);
k=pp;
long long p[5]={0};
for(int i=0;i<5;i++)
p[i]=temp[n][i]-temp[k][i]-temp[n-k][i];
long long ans = 1;
for(int i=0;i<5;i++)
ans= (ans*quitpow(v[i],p[i],m))%m;
O(ans%m);
}
}
else
{
long long x = totient(m);
long long a[n/2+2];
a[1] = quitpow(n,n,m);
for(int i=2;i<=n/2;i++)
{
long long y=quitpow(i,x-1,m);
y=quitpow(y,i,m);
long long z=quitpow(n+1-i,n+1-i,m);
z=(y*z)%m;
a[i]=(a[i-1]*z)%m;
}	
while(q--)
{
long long k;
int pp;
I(pp);
k=pp;
if(k<=n/2)
O(a[k]);
else
O(a[n-k]);
}	
}
}
}   