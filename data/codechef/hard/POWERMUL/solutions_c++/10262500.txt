#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <string>
#include <sstream>
#include <utility>
#include <ctime>
#include <cassert>
#include <fstream>
using namespace std;
typedef long long LL;
typedef vector<int> VI;
typedef pair<int, int> II;
typedef vector<long long> VLL;
typedef vector<bool> VB; 
#define SZ(A) ((int)A.size())
#define LEN(A) ((int)A.length())
#define MS(A) memset(A, 0, sizeof(A))
#define MSV(A,a) memset(A, a, sizeof(A))
#define MAX(a,b) ((a >= b) ? (a) : (b))
#define MIN(a,b) ((a >= b) ? (b) : (a))
#define ABS(a) (((a) > 0) ? (a) : (-a))
#define MP make_pair
#define X first
#define Y second
#define PB push_back
#define FOUND(A, x) (A.find(x) != A.end())
#define getcx getchar_unlocked
#define INF 0x3f3f3f3f
#define INFL (LL(1e18))
#define EPS 1e-12 
#define chkbit(s, b) (s & (1<<b))
#define setbit(s, b) (s |= (1<<b))
#define clrbit(s, b) (s &= ~(1<<b))
#define rep(i, a, n) for(i = a; i < n; i++)
#define rev(i, a, n) for(i = a; i > n; i--)
#define FORALL(itr, c) for(itr = (c).begin(); itr != (c).end(); itr++)
#define ALL(A) A.begin(), A.end()
#define LLA(A) A.rbegin(), A.rend()
inline void inp( int &n )
{ 
	n=0;    int ch=getcx();int sign=1;   
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();} 
	while(  ch >= '0' && ch <= '9' )    
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}   	
inline void inp1( LL &n )
{ 
	n=0;    LL ch=getcx();LL sign=1;   
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();} 
	while(  ch >= '0' && ch <= '9' )    
	n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	n=n*sign;
}   	
 
int inv(int a, int b)
{
	int q, ps=1, s=0, pt=0, t=1, r,m=a;

	while(a%b != 0)
	{
		q = a/b; r = a-q*b;

		int tmps=s, tmpt=t;
		s = ps-q*s, t = pt-q*t;
		ps = tmps, pt = tmpt;

		a=b; b=r;
	}
	return (t+m)%m;
}
 
LL power(LL base,LL e,int mod)
{
	LL ans=1;
	while(e)
	{
		if(e&1)
		ans=(ans*base)%mod;
		base=(base*base)%mod;
		e>>=1;
	}
	return ans;
}
 
vector<int> v;
vector<int> pd;
LL d[20][100005],a[100005];
int p[100005];
LL fir[]={0,1,4,108,27648,86400000};
int main()
{
	int i,j,k,n,m,t,c,x,y,r,q;
	LL ans,den,nume,pp;
	for(i=2;i*i<100005;i++)
	{
		if(!p[i])
		{
			for(j=i*i;j<100005;j+=i)
			p[j]=1;
		}
	}
	for(i=2;i<100005;i++)
	if(!p[i])v.PB(i);  //primes till 100005 pushed
	
	inp(t);
	while(t--)
	{
		pd.clear();
		inp(n);inp(m);inp(q);
		if(n<=5)
		{
			rep(i,0,q)
			{
				scanf("%d",&r);
				printf("%lld\n",(fir[n]/(fir[n-r]*fir[r]))%m);
			}
			continue;
		}
		c=m;
		rep(i,0,v.size())
		{
			y=0;
			//if(c%v[i]==0)pd.PB(v[i]);
			while(c%v[i]==0){y++;c/=v[i];}
			if(y)pd.PB(v[i]);
			if(c==1)break;
		}
		if(c>1)pd.PB(c);
		rep(i,0,pd.size())d[i][1]=0;
		a[1]=1;
		rep(i,2,n+1)
		{
			x=i;
			rep(j,0,pd.size())
			{
				y=0;
				while(x%pd[j]==0){y++;x/=pd[j];}
				d[j][i]=d[j][i-1]+(y*i);
			}
			a[i]=(a[i-1]*power(x,i,m))%m;
		}
		rep(i,0,q)
		{
			inp(r);
			nume=a[n];
			den=(a[n-r]*a[r])%m;
			pp=1;
			rep(j,0,pd.size())
			{
				LL xx=d[j][n]-d[j][n-r]-d[j][r];
				pp=(pp*power(pd[j],xx,m))%m;
			}
			nume=(nume*pp)%m;
			ans=(nume*inv(m,den))%m;
			printf("%lld\n",ans);
		}
	}
	return 0;
} 