# Solution to "Prime Generator" for CodeChef
# by Peter Mattsson (quantum.caffeine@gmail.com)

import sys
from math import sqrt

limit = 1000000000

def read(inFile):
    t = int(inFile.readline())
    for _ in xrange(t):
        yield [int(x) for x in inFile.readline().split()]

def write(outFile, answer):
    m, results = answer
    for p in xrange(len(results)):
        if results[p] == 1:
            outFile.write(str(m+p)+'\n')
    outFile.write('\n')

def getPrimes(limit):
    primes = []
    primeTable = [0, 0] + [1 for _ in xrange(limit - 1)]
    for n in xrange(2, limit+1):
        if primeTable[n]:
           primes.append(n)
           for m in xrange(n*n, limit, n):
               primeTable[m] = 0
    return primes

primes = getPrimes(int(sqrt(limit)))
def solve(m, n):
    limit = int(sqrt(n))
    rsize = n-m+1
    results = [1 for _ in xrange(rsize)]
    for p in primes:
        if p > limit: break
        for x in xrange(p*(m<=p) + p-1 - (m-1)%p, rsize, p):
            results[x] = 0
    if m == 1: results[0] = 0
    return m, results

for case in read(sys.stdin):
    write(sys.stdout, solve(*case))
