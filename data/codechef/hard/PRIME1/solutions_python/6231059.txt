# cook your code here
import math
#MAX_NUM = int(math.sqrt(100))+1
MAX_NUM = 31623 # int(math.sqrt(1000000000))+1

def get_primes(n):
    l = range(2, n+1)
    if len(l) == 0: return l
    i, sqrt_limit = 0, int(math.sqrt(n))
    while True:
        temp = l[i]
        if temp > sqrt_limit:
            break
        j = i+1
        while j < len(l):
            if l[j] % temp == 0:
                l.pop(j)
            else:
                j += 1
    #while l[i]<=math.sqrt(n)+1:
    #    temp = l[i]
    #    l = filter(lambda x: x==temp or x%temp<>0, l)
        i+=1
    return l

primes = get_primes(MAX_NUM)
#print primes

for casenum in range(input()):
    m, n = map(int, raw_input().split())
    m = max(2, m)
    sqrt_limit = int(math.sqrt(n))+1
    l = [True]*(n-m+1)
    for p in filter(lambda x:x<sqrt_limit, primes):
        i=m/p*p
        if i < m: i += p 
        while i<=n:
            #print p, i, i-m
            if i<>p:
                l[i-m] = False
            i += p
    for i in xrange(len(l)):
        if l[i]: print i+m
    print ''