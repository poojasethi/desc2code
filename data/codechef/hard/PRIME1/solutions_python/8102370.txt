import math
sqrt_max = int(math.ceil(math.sqrt(1000000000))) + 1

primes = [True] * (sqrt_max)
primes[0] = False
primes[1] = False
def sieve():
    i = 2
    n = len(primes)
    while i*i <= n:
        if primes[i]:
            j = i*i
            while j < n:
                primes[j] = False
                j += i
        i += 1
        
    

n = int(raw_input())
for i in xrange(n):
    a, b = raw_input().split()
    a = int(a)
    b = int(b)
    sieve()
    if sqrt_max < b:
        another_sieve = [True] * (b-a+1)
        lets_start = a
        if a < sqrt_max:
            lets_start = sqrt_max
            another_sieve[0:lets_start-a] = primes[a:]
        for j, x in enumerate(primes):
            if primes[j]:
                min_in_another = int(math.ceil((float(lets_start)/j)) * j)
                min_in_another_index = min_in_another - a
                while min_in_another_index < len(another_sieve):
                    another_sieve[min_in_another_index] = False
                    min_in_another_index += j
    else:
        another_sieve = primes[a:b+1]
    for j, x in enumerate(another_sieve):
        if x:
            print (j+a)
    print ""