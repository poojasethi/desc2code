import math
def get_input():
	first_num, second_num = raw_input().split()
	first_num = int(first_num)
	second_num = int(second_num)
	return first_num, second_num

global_primes = []

def is_prime(number):
	global global_primes
	square_root = int(math.sqrt(number))
	for prime in global_primes:
		if prime > square_root:
			return True
		if number % prime == 0:
			return False
def sieve():
	global global_primes
	maximum = 100001
	bool_array = [True]*maximum
	for index in range(2, maximum):
		if bool_array[index] == True :
			multiple = index
			multiple += index
			while multiple < maximum:
				bool_array[multiple] = False
				multiple += index
	for index in range(2, maximum):
		if bool_array[index] == True:
			global_primes.append(index)

def get_primes():
	primes = []
	first_num, second_num = get_input()
	if first_num == 1:
		first_num = 2
	for number in range(first_num, second_num+1):
		if is_prime(number):
			primes.append(number)
	return primes

if __name__ == '__main__':
	sieve()
	test_cases_num = int(raw_input())
	for x in range(0, test_cases_num):
		for number in get_primes():
			print number
