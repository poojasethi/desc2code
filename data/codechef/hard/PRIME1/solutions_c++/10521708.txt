#include <stdio.h>
#include<string.h>
using namespace std;
void SieveOfEratosthenes(int m,int n)
{
	bool prime[n+1-m];
	memset(prime, true, sizeof(prime));
	for (int p=m; p<=n; p++)
	{
		if (prime[p-m] == true)
		{
			for (int i=p*2; i<=n; i += p)
				prime[i-m] = false;
		}
	}
	for (int p=m; p<=n; p++)
	if (prime[p-m])
		printf("%d\n",p);
}

int main()
{   
    int max=1000000;
    bool prime[max+2];
    memset(prime,true,max+2);
    prime[1]=false;
    prime[0]=false;
    for(int i=2;i*i<=max;i++){
        if(prime[i]){
            for(int j=2*i;j<=max;j+=i){
                prime[j]=false;
            }
        }
    }
    int t;
    scanf("%d",&t);
    for(int k=0;k<t;k++){
        int n,m;
        scanf("%d %d",&m,&n);
        if(n<=max){
            for(int i=m;i<=n;i++){
                if(prime[i]){
                    printf("%d\n",i);
                }
            }
        }
        else
        {
            int d=n-m;
            bool prime2[d+1];
            memset(prime2,true,d+1);
            for(int i=2;i<=max;i++){
                if(prime[i]){
                    int k=m/i;
                    k=k*i;
                    if(k<m) k=k+i;
                    for(;k<=n;k+=i){
                        prime2[k-m]=false;
                    }
            }
        }
        for(int i=0;i<=d;i++){
            if(prime2[i]){
                printf("%d\n",m+i);
            }
        }
    }
    printf("\n");
}
}
