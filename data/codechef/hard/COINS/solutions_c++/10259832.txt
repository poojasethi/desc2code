// C++ program to prlong long largest contiguous array sum
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <list>
#include <stdlib.h>     /* abs */

using namespace std;
long long* A;

long long max_am_dollars(long long n){
    //cout<< n <<endl;
    //cout << "n is " <<n<<endl;
    if(n < 12){
        return n;
    }
    if(n >= 1000000 || A[n]==0){
    long long ans = 0;
    long long ans1 = max_am_dollars(n/2) + max_am_dollars(n/3) + max_am_dollars(n/4);
    long long ans2 = n;
    if(ans2 > ans1){
        ans1 = ans2;
    }
    ans = ans1;
    if(n<1000000){
    A[n] = ans;}
    return ans;
}
else{
    return A[n];
}

}
/*
long long string_to_long_long(string s){
    long long ans = 0;
    long long factor = 1;
    for(long long i =(s.size()-1);i>=0;i--){
        long long val = s[i] - '0';
ans = ans + factor*val;
factor = factor*10;
    }
    return ans;
}
*/
int main()
{
   A = new long long[1000000];
for(int i =0;i<1000000;i++){
    A[i] = 0;
}

vector<long long> answers;
        long long n;

int count = 0;
    while(cin >> n){
       
    //cout <<"s is "<<s<<endl;
 
    answers.push_back(max_am_dollars(n));
    count++;
    //cout<<ans<<endl;

}
for(long long i=0;i<answers.size();i++){
cout<<answers[i]<<endl;
    }
        delete[] A;

    return 0;
}