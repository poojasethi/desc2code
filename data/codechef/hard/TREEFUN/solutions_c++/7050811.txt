#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>

using namespace std;
using namespace __gnu_pbds;

#define INF 1000000007

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<vector<int> > vvi;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;
typedef vector<vector<pair<int,int> > > vvii;
typedef tree<int,null_type,less<int>,rb_tree_tag,tree_order_statistics_node_update> ordered_set;
 

#define all(x) x.begin(), x.end()
#define tr(x,it) for(auto it = x.begin();it!=x.end();++it)
#define sz(a) int((a).size()) 
#define pb push_back 
#define mp make_pair
#define fpresent(c,x) ((c).find(x) != (c).end())  // set,map
#define present(c,x) (find(all(c),x) != (c).end())  //vector
#define F first
#define S second
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define NFOR(i,a,b) for(int i=a;i>=b;--i)

int n,m;
int p[50000];
int s[17][50000];
int l[50000];
int a[50000];
vector<int> g[50000];
void dfs(int i)
{
	tr(g[i],it)
	{
		if(*it==p[i])continue;
		l[*it]=l[i]+1;
		p[*it]=i;
		dfs(*it);
	}
}
void pre()
{
	FOR(i,0,n-1)
	for(int j=0;(1<<j)<n;++j)
	s[j][i]=-1;
	
	FOR(i,0,n-1)s[0][i]=p[i];
	
	for(int j=1;(1<<j)<n;++j)
	{
		FOR(i,0,n-1)if(s[j-1][i]!=-1)s[j][i]=s[j-1][s[j-1][i]];
	}
	
}
inline int lca(int u, int v,bool req=0)
{	
	if(l[u]<l[v])u^=v^=u^=v;
	
	int LOG;
	for(LOG=1;(1<<LOG)<=l[u];++LOG);--LOG;
	
	NFOR(i,LOG,0)
	if(l[u]-(1<<i)>=l[v]+req)
	u=s[i][u];
	
	if(req)return u;
	if(u==v)return u;
	
	NFOR(i,LOG,0)
	if(s[i][u]!=-1&&s[i][u]!=s[i][v])
	u=s[i][u],v=s[i][v];
	
	return p[u];
}


int main() 
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    int T;
    cin>>T;
    while(T--)
    {
    	cin>>n>>m;int u,v;
    	FOR(i,0,n-1)g[i].clear();
    	p[0]=-1;
    	FOR(i,0,n-2)
    	{
    		cin>>u>>v;
    		g[u-1].pb(v-1);
    		g[v-1].pb(u-1);
    	}
    	l[0]=0;
    	dfs(0);
    	pre();
    	int k;
    	FOR(tourist,0,m-1)
    	{
    		cin>>k;FOR(i,0,k-1){cin>>a[i];--a[i];}
    		if(k==2){cout<<l[a[0]]+l[a[1]]-2*l[lca(a[0],a[1])]-1<<"\n";continue;}
    		
    		int x,y,z;
    		x=lca(a[0],a[1]);y=lca(a[2],a[1]);z=lca(a[0],a[2]);
    		if(l[y]>l[x])x=y;
    		if(l[z]>l[x])x=z;
    		
    		unordered_set<int> bc;
    		bool chutiyaap=0;
    		FOR(j,0,k-1)
    		{
    			if(x==a[j]){chutiyaap=1;break;}
    			u=lca(x,a[j],1);
    			if(p[u]!=x)u=p[x];
    			if(fpresent(bc,u)){chutiyaap=1;break;}
    			bc.insert(u);
    		}
    		chutiyaap?cout<<"0\n":cout<<"1\n";
    	}
    }
	return 0;
}