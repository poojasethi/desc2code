#include <iostream>
#include <cstdio>
using namespace std;

#define maxn 100001
int arr[maxn];
int w;

struct node{
	int l,r,ans;
	void merge(node x,node y,int a,int b,int c,int d){
		if(arr[b]==arr[c]){
			if(x.l==b-a+1)
				l=x.l+y.l;
			else
				l=x.l;
			if(y.r==d-c+1)
				r=x.r+y.r;
			else
				r=y.r;
			int temp2=x.ans+y.ans;
			if(x.r>=w)
				temp2-=x.r-w+1;
			if(y.l>=w)
				temp2-=y.l-w+1;
			if(x.r+y.l>=w)
				temp2+=x.r+y.l-w+1;
			ans=temp2;
		}else{
			l=x.l;
			r=y.r;
			ans=x.ans+y.ans;
		}
	}
};

node tree[4*maxn];

void build(int t,int i,int j){
	if(i==j){
		tree[t].l=tree[t].r=1;
		tree[t].ans=0;
		if(w==1)
            tree[t].ans++;
		return;
	}
	int mid=(i+j)/2;
	build(2*t,i,mid);
	build(2*t+1,mid+1,j);
	tree[t].merge(tree[2*t],tree[2*t+1],i,mid,mid+1,j);
}

void update(int t,int i,int j,int in,int c){
	if(i==j){
		arr[in]=c;
		return;
	}
	int mid=(i+j)/2;
	if(in<=mid)
		update(2*t,i,mid,in,c);
	else
		update(2*t+1,mid+1,j,in,c);
	tree[t].merge(tree[2*t],tree[2*t+1],i,mid,mid+1,j);
}

int main(){
	int n,q,in,c,t;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d",&n,&w);
		for(int i=1;i<=n;i++)
			scanf("%d",&arr[i]);
		build(1,1,n);
		scanf("%d",&q);
		while(q--){
			scanf("%d%d",&in,&c);
			update(1,1,n,in,c);
			printf("%d\n",tree[1].ans);
		}
	}
}
