#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<iostream>
#include<vector>
#include<ctime>
#include<string>
#include<algorithm>
#define rep(i,j,k) for (i=j;i<=k;i++)
#define reps(i,j,k) for (i=j;i>=k;i--)
#define pb push_back
#define mp make_pair
#define mem(a,b) memset(a,b,sizeof(a))
#define inf 0x7fffffff
#define maxn 210000
#define fi first
#define se second
#define mod 1000000007
using namespace std;
typedef long long LL;
struct node
{
	int lcol,rcol,lnum,rnum,ans,num;
}tree[maxn*4];
int T,n,K,a[maxn],q;
void update(int now)
{
	tree[now].lcol=tree[now*2].lcol;tree[now].rcol=tree[now*2+1].rcol;
	tree[now].num=tree[now*2].num+tree[now*2+1].num;
	if (tree[now*2].lcol==tree[now*2].rcol&&tree[now*2].rcol==tree[now*2+1].lcol&&tree[now*2].num==tree[now*2].lnum)
	tree[now].lnum=tree[now*2].lnum+tree[now*2+1].lnum;
	else tree[now].lnum=tree[now*2].lnum;
	if (tree[now*2+1].lcol==tree[now*2+1].rcol&&tree[now*2+1].lcol==tree[now*2].rcol&&tree[now*2+1].num==tree[now*2+1].rnum)
	tree[now].rnum=tree[now*2+1].rnum+tree[now*2].rnum;
	else tree[now].rnum=tree[now*2+1].rnum;
	tree[now].ans=tree[now*2].ans+tree[now*2+1].ans;
	if (tree[now*2].rcol==tree[now*2+1].lcol&&tree[now*2].rnum+tree[now*2+1].lnum>=K&&K!=1)
	{
		int ll=tree[now*2].rnum+1-K+1;if (ll<=0)ll=1;
		int rr=tree[now*2].rnum+tree[now*2+1].lnum-K+1;if(rr>tree[now*2].rnum)rr=tree[now*2].rnum;
		tree[now].ans+=(rr-ll+1);
	}
}
void bt(int now,int l,int r)
{
	if (l==r)
	{
		tree[now].lcol=tree[now].rcol=a[l];
		tree[now].lnum=tree[now].rnum=1;tree[now].num=1;
		if (K==1)tree[now].ans=1;else tree[now].ans=0;
		return;
	}
	int mid=(l+r)/2;
	bt(now*2,l,mid);
	bt(now*2+1,mid+1,r);
	update(now);
}
void modify(int now,int l,int r,int pos,int val)
{
	if (l==r)
	{
		tree[now].lcol=tree[now].rcol=val;
		tree[now].lnum=tree[now].rnum=1;
		if (K==1)tree[now].ans=1;else tree[now].ans=0;
		return;
	}
	int mid=(l+r)/2;
	if (pos<=mid) modify(now*2,l,mid,pos,val);
	else modify(now*2+1,mid+1,r,pos,val);
	update(now);
}
int main()
{
	int i,j,k;
	//freopen("in.txt","r",stdin);freopen("out.txt","w",stdout);
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d",&n,&K);
		rep(i,1,n)scanf("%d",&a[i]);
		bt(1,1,n);
		scanf("%d",&q);
		rep(i,1,q)
		{
			int x,y;
			scanf("%d%d",&x,&y);
			modify(1,1,n,x,y);
			printf("%d\n",tree[1].ans);
		}
	}
	return 0;
}
