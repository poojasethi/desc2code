#include <bits/stdc++.h>
#define filein(t) freopen(t, "r", stdin)
#define fileout(t) freopen(t, "w", stdout)
#define ll long long
#define mp make_pair
#define f first
#define s second
#define N 100007
#define cs 1373
#define BIT(i, n) ( (n >> i) & 1 )
#define ln 1e12+1
#define oo 1000000007
#define Pa pair <int, int>

using namespace std;

int res = 0, a[N], w;
set <Pa> S;

void Solve()
{
    int pos, V;
    cin >> pos >> V;
    if(V == a[pos]) return;
    a[pos] = V;
    set <Pa> :: iterator u = S.upper_bound(mp(pos+1, -1));    u--;
    Pa cur = *u;
    S.erase(u);
    res -= max(cur.s - cur.f + 2 - w, 0);
    int Mi = pos;
    int Ma = pos;
    if(pos == cur.f && V == a[pos-1])
    {
        set <Pa> :: iterator u = S.upper_bound(mp(pos, -1));  u--;
        Pa U = *u;
        res -= max(U.s - U.f + 2 - w, 0);
        Mi = U.f;
        S.erase(u);
    }
    if(pos == cur.s && V == a[pos+1])
    {
        set <Pa> :: iterator u = S.upper_bound(mp(pos+2, -1));  u--;
        Pa U = *u;
        res -= max(U.s - U.f + 2 - w, 0);
        Ma = U.s;
        S.erase(u);
    }
    if(pos != cur.f)
    {
        S.insert(mp(cur.f, pos-1));
        res += max(pos - 1 - cur.f + 2 - w, 0);
    }
    if(pos != cur.s)
    {
        S.insert(mp(pos+1, cur.s));
        res += max(cur.s - pos - 1 + 2 - w, 0);
    }
    res += max(Ma - Mi + 2 - w, 0);
    S.insert(mp(Mi, Ma));
    return;
}

int main()
{
   // filein("inp.txt");  fileout("out.txt");
    int Test, n, q;
    cin >> Test;
    while(Test--)
    {
        res = 0;
        S.clear();
        cin >> n >> w;
        for(int i=1; i<=n; i++)
            cin >> a[i];
        int pre = 0;
        a[0] = a[n+1] = -1;
        for(int i=1; i<=n+1; i++)
            if(a[i] != a[i-1])
            {
                S.insert(mp(pre, i-1));
                if(pre) res += max(i-pre-w+1, 0);
                pre = i;
            }
        S.insert(mp(n+1, n+1));
        cin >> q;
        while(q--)
        {
            Solve();
            cout << res << endl;
        }
    }
}
