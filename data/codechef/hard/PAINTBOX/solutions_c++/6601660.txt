#include <bits/stdc++.h>
using namespace   std;



#define mod 1000000009
#define si 100001
#define f first
#define s second
#define rep(i,n) for(i=1;i<=n;i++)
#define rep0(i,n) for(i=0;i<n;i++)
#define rep1(i,a,b) for(i=a;i<=b;i++)
#define pb push_back
#define mp make_pair
#define endl '\n'
#define ll long long
#define ull unsigned long long
#define v2(x) vector< vector <int> > x
#define print(x) printf("%d\n",x)

#ifdef ONLINE_JUDGE
#define gc getchar_unlocked
#else
#define gc getchar
#endif

inline int scan(){
    char c = gc();
    int x = 0;
    bool b=0;
    while(c<'0'||c>'9'){
        {
            if(c=='-')
            b=1;
            c=gc();

        }
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=gc();
    }
    if(b==1)
        x*=-1;
    return x;
}


struct data {int pref,suff,ans;
bool v;} ;
data t[si*4];
int x[si],w;
data combine ( data l, data r,int l1, int r1,int sl,int sr ) {
	data res ;
	res.ans=l.ans+r.ans;
	if(l.v==1&&r.v==1&&x[l1]==x[r1])
        res.v=1;
    else
        res.v=0;

    res.pref=l.pref;
    res.suff=r.suff;

    if(l.v==1&&x[l1]==x[r1])
        res.pref=l.pref+r.pref;

    if(r.v==1&&x[l1]==x[r1])
        res.suff=r.suff+l.suff;

if(l.suff+r.pref>=w&&x[l1]==x[r1])
	 {res.ans+=(min(l.suff,w-1)+min(r.pref,w-1)-w+1);
	 }


	return res ;
}

data make_data ( int val ) {
	data res;
	res.pref=res.suff=res.v=1;
	if(w==1)
        res.ans=1;
    else
        res.ans=0;

        return res;

}

void ct(int ss,int se,int in )
{ int m= ss + (se -ss)/2,i;
   if(ss==se)


{t[in]=make_data(x[ss]);
//cout<<t[in].ans<<endl;
return ;}


ct(ss,m,in*2);
ct(m+1,se,in*2+1);

    t[in]=combine(t[in*2],t[in*2+1],m,m+1,m-ss+1,se-m);
return;
}


void upd (int q,int ss,int se,int in,int y)
{

    if (ss==q&&se==q)
        {
           t[in]=make_data(y);
            return  ;
        }

        if (se < q || ss > q)
        return ;

        int m= ss + (se -ss)/2;


        upd(q,ss,m,in*2,y);
        upd(q,m+1,se,in*2+1,y);
        t[in]=combine(t[in*2],t[in*2+1],m,m+1,m-ss+1,se-m);
        return ;
}

int main() {


 int test,i,j,n,q,y,p;
 test=scan();
 rep(j,test)
 {
     n=scan();w=scan();
     rep(i,n)
     x[i]=scan();

     memset(t,0,sizeof(t));
     ct(1,n,1);
     //print(t[3].ans);

     q=scan();
     rep(i,q)
     {
         p=scan();y=scan();
         x[p]=y;
         upd(p,1,n,1,y);

         print(t[1].ans);
     }
 }

}
