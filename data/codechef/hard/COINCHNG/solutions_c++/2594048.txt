//TC

#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <list>
#include <set>
#include <map>

#define forn(a,b,c) for(int (a)=(b);(a)<=(c);(a)++)
#define forr(a,b,c) for(int (a)=(b);(a)>=(c);(a)--)
#define foreach(a,b) for( typeof( (b).begin() ) a=(b).begin(); (a)!=(b).end() ; (a)++ )
#define foreachr(a,b) for( typeof( (b).rbegin() ) a=(b).rbegin(); (a)!=(b).rend() ; (a)++ )
#define dg(x)  cerr <<#x<<':'<<x<<" "
#define dbg(x)  cerr <<#x<<':'<<x<<endl
#define SET(A,b) memset(A,b,sizeof (A) )
#define SIZE(A) ((int)(A).size())
#define ALL(A) (A).begin(),(A).end()
#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define num(a) (1LL<<(a))
using namespace std;

typedef double dbl;
typedef long long Lint;
typedef pair<int,int> ii;
typedef pair<Lint,Lint> Lii;

const Lint mod = 1e9;

const int MAXN = 200010;

int n,C,S;
Lint K;

Lint comb[70][510];

Lint Pow(Lint a,Lint b){
	
	Lint R=1LL;
	
	while(b){
		
		if(b&1)	R=R*a;
		
		b>>=1;
		
		a*=a;
		
	}
	
	return R;
	
}

int main(){
	
	int T;
	
	scanf(" %d",&T);
	
	Lint res=0LL;
	
	Lint t;
	
	while(T--){
		
		scanf("%d %d %Ld",&C,&S,&K);
		
		res=0LL;
		
		t=1e18;
		
		n=1;
		
		while(t)
			n++,t/=C;
		//~ dbg(n);
		
		SET( comb,0 );
		
		comb[0][0]=1LL;
		
		forn(i,1,n)
		{
			forn(j,0,min( S,(i-1)*(C-1) ) )
				forn(t,0,C-1)
					if(j+t<=S)
						comb[i][j+t]+=comb[i-1][j];
			//~ forn(j,0,min(S,(i)*(C-1)))
				//~ printf("%Ld ",comb[i][j]);
			//~ puts("");
		}
		
		//~ dbg(S);
		
		forr(i,n,1)
			forn(j,0,C-1)
			{
				//~ printf("%d %d -> %Ld\n",i,j,comb[i-1][S-j]);
				if( comb[i-1][S-j]<K )
					K-=comb[i-1][S-j];
				else{
					//~ printf("%d -> %d\n",i,j);
					S-=j;
					res+=Pow( C,i-1 )*(Lint)j;
					break;
				}
				//~ dbg(K);
			}
				
		printf("%Ld\n",res);
		 
	}
	
	return 0;
	
}
