#include <cmath>
#include <algorithm>
#include <vector>
#include <iostream>
#include <cstdio>
#include <set>
#include <queue>
#include <map>
#include <string>
#include <cstring>
#include <ctime>
using namespace std;
#define For(i,a,b) for(int i=a;i<=b;i++)
#define Ford(i,a,b) for(int i=a;i>=b;i--)
#define Rep(i,c) for((type of c.begin()) i;i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sr(x) (int)x.size()
#define modul (ll)1e18+1
#define nmax 100
#define BUG(x) {cout << #x << " = " << x << endl;}
#define PR(x,a,b) {cout << #x << " = "; For(_,a,b) cout << x[_] << ' '; cout << endl;}
#define fillchar(x,a,b,delta) For(_,a,b) x[_]=delta;
#define Bit(s,i) (s&(1<<i))
#define Two(x) (1<<x)
#define pii pair<int,int>
#define ll long long
#define e 1e-6
#define pi acos(-1)
int n,C,S,stest;
ll dp[66][555],K;
int res[66];
int main()
{
  //  freopen("codechef.inp","r",stdin);
    scanf("%d",&stest);
    dp[61][0]=1;
    while (stest) {
        stest--;
        scanf("%d%d%lld",&C,&S,&K);int SS=S;
        For(i,0,60) fillchar(dp[i],0,S,0);
        dp[61][0]=1;
        Ford(i,61,1) For(j,0,S) if (dp[i][j]>0) For(t,0,min(C-1,S-j)) dp[i-1][j+t]=min(modul,dp[i-1][j+t]+dp[i][j]);
        For(i,0,60) {
            ll tg=0;
            For(j,0,C-1) if (tg+dp[i+1][S-j]>=K) {
                K-=tg;
                res[i]=j;
                S-=j;
                break;
            } else tg+=dp[i+1][S-j];
        }
        S=SS;
     //   PR(res,0,5);
        ll tg=1,ans=0;
        Ford(i,60,0) {
            For(j,1,res[i]) ans+=tg;
            S-=res[i];
            if (S==0) break;
            tg*=C;
        }
        printf("%lld\n",ans);
    }
    return 0;
}








