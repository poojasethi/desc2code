#include <iostream>
#include <fstream>
#include <sstream>
#include <string.h>
#include <algorithm>
#include <cmath>
#include <assert.h>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <set>

#define for0(i,n) for (int i=0; i<n; i++)
#define forr(i,n) for (int i=n-1; i>=0; i--)
#define fori(i,a,b) for (int i=a; i<=b; i++)
#define iter(c,x) for(x::iterator it=c.begin(); it!=c.end(); it++)
#define vec(x) vector< x >
#define pb push_back
#define ms(a,z) memset(a,z,sizeof(a));
#define mp make_pair
#define nl cout<<"\n";
#define pr(x) cout<<(x)<<" ";
#define prl(x) cout<<#x " = "<<x<<endl;
#define prp(x) cout<<"("<<(x).first<<" "<<(x).second<<") ";
#define printv(v) {for(int _=0; _<size(v); _++) cout<<v[_]<<" "; cout<<"\n";}
#define printa(a,s) {for (int _=0; _<s; _++) cout<<a[_]<<" "; cout<<"\n";}
#define print2D(a,m,n) {for (int _=0; _<m; _++) {for (int __=0; __<n; __++) cout<<a[_][__]<<" "; cout<<"\n";} cout<<"\n";}
#define debug cout<<"ok at line "<<__LINE__<<endl;
#define X first
#define Y second
#define sqr(x) 1LL*(x)*(x)
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define all(a) a.begin(),a.end()
#define size(x) (int)(x).size()
#define read(x) scanf("%lld",&x);
#define int long long
#define MAXNUM 368934881474191032LL

using namespace std;

typedef long long ll;

const int INF = 999999999;
const long long INFL = 99999999999999999LL;
const double EPSILON = 0.00000001;
const long long MOD = 1000000007;

ll freq[65][520];

int32_t main()
{
    //freopen("P1.txt","r",stdin);
    //freopen("P_output.txt","w",stdout);
    int cases;
    cin >> cases;
    for0(casen,cases){
        ll c,s,k;
        read(c); read(s); read(k);

        ms(freq,0);
        freq[0][0] = 1;

        unsigned long long powc = 1;
        int lv = 1;
        while (powc <= MAXNUM){
            //prl(lv) prl(powc)
            for (int i=0; i<=(c-1)*lv; i++){
                for (int j=i; j>=0 and j>i-c; j--){
                    freq[lv][i] += freq[lv-1][j];
                }
            }
            lv++;
            powc *= c;
        }
        //print2D(freq,lv,(c-1)*lv);

        ll x = 0;
        int base = 0;
        while (lv > 0){
            lv--;
            //prl(lv) prl(powc) prl(k) prl(base)
            ll cnt = 0;
            for (int i=0; i<c and s-i-base>=0; i++){
                cnt += freq[lv][s-i-base];
                //pr(i) pr(cnt) nl
                if (cnt >= k) {
                    k -= cnt-freq[lv][s-i-base];
                    base += i;
                    break;
                }
                else{
                    x += powc;
                }
            }
            //prl(x) nl
            powc /= c;
        }

        cout<<x<<endl;
    }
    return 0;
}
