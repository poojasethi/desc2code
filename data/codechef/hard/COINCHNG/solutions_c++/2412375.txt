#include <iostream>
#include <iomanip>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <algorithm>
#include <vector>
#include <queue>
#include <utility>
#include <set>
#include <stack>
#include <cmath>
#include <map>
using namespace std;

typedef unsigned long long int uLint;
typedef long long int Lint;
typedef short int sint;
typedef long double ld;
typedef pair<int,int> PII;
typedef pair<PII,int> PPI;
typedef vector<int> VI;
typedef vector<PII> VII;
typedef queue<int> QI;
typedef queue<PII> QII;
typedef pair<int,PII> edge;

const int PRIME = 1000 * 1000 * 1000 + 7;
const int MULTIPLIER = 173;
const int INFI = 1 << 30;
const ld INF = 2 * 10e9 + 1;
const ld EPS = 1e-9;
const ld PI = M_PI;
const int DIM = 2;

#define X s[0]
#define Y s[1]

#define REP(a, b) for(int a = 0;a < (int)b;++a)
#define FOR(a, b, c) for(int a = (int)b;a <= (int)c;++a)
#define FORD(a, b, c) for(int a = (int)b;a >= (int)c;--a)
#define PB push_back
#define MP make_pair
#define NEWLINE cout << "\n";

const int S_MAX = 500;
const int roz = 100;
uLint tab[S_MAX + 1][roz];

int main()
{
	ios_base::sync_with_stdio(0);
	uLint mn[roz];	
	int t;
	cin >> t;
	while(t--)
	{
		int c, s;
		uLint k;
		cin >> c >> s >> k;
		
		if(s == 0)
		{
			cout << "0\n";
		}
		else
		{
			mn[0] = 1;
			FOR(i, 1, roz - 1) mn[i] = mn[i - 1] * c;
			
			REP(i, min(c, s + 1)) tab[i][1] = 1;
			FOR(i, c, s) tab[i][1] = 0;
			int bits = 1;
			
			while(tab[s][bits] < k)
			{
				++bits;
				uLint suma = 0;
				REP(i, s + 1)
				{
					suma += tab[i][bits - 1];
					if(i - c >= 0) suma -= tab[i - c][bits - 1];
					tab[i][bits] = suma;
				}
			}
			
			uLint wynik = 0;
			uLint ile = 0;
			FORD(i, bits, 2)
			{
				int akt = 0;
				while(ile + tab[s - akt][i - 1] < k)
				{
					ile += tab[s - akt][i - 1];
					++akt;
				}
				wynik += akt * mn[i - 1];
				s -= akt;
			}
			wynik += s;
			cout << wynik << "\n";
		}
	}
	return 0;
}
