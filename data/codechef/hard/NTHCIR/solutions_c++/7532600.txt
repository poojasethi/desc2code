#include<bits/stdc++.h>
using namespace std;
 
const int N=12345;
long long n[N];
double ans[N];
 
double find_r(double r1, double r2, double r, double p) {
    double x=(r-r1)/r1;
    double y=(r-r2)/r2;
    double z1=x+y+2*sqrt(x*y-1.0f);
    double z2=x+y-2*sqrt(x*y-1.0f);
    double alpha1=r/(z1+1.0f);
    double alpha2=r/(z2+1.0f);
    if(abs(alpha1-p)<abs(alpha2-p)) {
        return alpha2;
    } else {
        return alpha1;
    }
}
 
int main() {
    int test;
    scanf("%d", &test);
    if(test<=1000) {
        int p, m, b;
        scanf("%d %d %d %d", &n[0], &p, &m, &b);
        for(int i=1; i<=test; i++) {
            n[i]=(p*n[i-1])%m+b;
        }
        double r1, r2, r3, r4;
        scanf("%lf %lf %lf %lf", &r1, &r2, &r3, &r4);
        ans[1]=r1;
        ans[2]=r2;
        ans[3]=r3;
        ans[4]=r4;
        double res=0;
        for(int i=5; i<N; i++) {
            ans[i]=find_r(ans[i-1], r2, r1, ans[i-2]);
        }
        for(int i=1; i<=test; i++) {
            res+=ans[n[i]];
        }
        printf("%lf\n", res);
    } else {
        long long N1,P,B,M;
        long double R,a,b,c;
        cin>>N1>>P>>M>>B;
        cin>>R>>a>>b>>c;
        long double r=a/R;
        long double answer=0.0;
        long double x=(1-r)*r*R;
        long double y=(1-r)*(1-r);
        long double n1=sqrt((x-c*r)/(c*y));
        long long fix;
        if(c<b){
        fix=n1;
        for(int i=1;i<=test;i++){
            N1=(P*N1)%M+B;
            if(N1>=4){
            long double n=(long double)N1-4;
            long double temp1=(1-r)*r*R*2;
            temp1=temp1/(2*((n+fix)*(n+fix)*(1-r)*(1-r)+r));
            temp1=temp1;
            answer+=temp1;
            continue;
            }
            answer+=(N1==1)?R:(N1==2)?a:b;
        }
      }
      else
      {
        for(int i=1;i<=test;i++){
            N1=(P*N1)%M+B;
            if(N1>=4){
            long double n=(long double)N1;
            n=fabs(N1-4-n1);
            long double temp1=(1-r)*r*R*2;
            temp1=temp1/(2*(n*n*(1-r)*(1-r)+r));
            temp1=temp1;
            answer+=temp1;
            continue;
            }
            answer+=(N1==1)?R:(N1==2)?a:b;
 
        }
      }
        cout<<setprecision(6)<<fixed<<answer<<endl;
    }
}