#include <cstdlib>
#include <cstdio>
#include <cstring>
using namespace std;
typedef long long int64;
const int mod=1000000007;
const int maxM=1000100;
void calc(int n,int x[],int limit,int val[]) {
	static int dp[2][maxM];
	for(int i=0;i<=n;i++)
	    dp[0][i]=1;
	val[0]=1;

	for(int i=1;i<=limit;i++) {
		dp[i&1][0]=0;
		for(int j=1;j<=n;j++)
	    	dp[i&1][j]=(dp[i&1][j-1]+(int64)dp[(i-1)&1][j-1]*x[j])%mod;

		val[i]=dp[i&1][n];
	}
}
void join(int limit,int val1[],int val2[],int val[]) {
	for(int i=0;i<=limit;i++) {
		int ret=0;
		for(int j=0;j<=i;j++)
	    	ret=(ret+(int64)val1[j]*val2[i-j])%mod;
		val[i]=ret;
	}
}
void pow(int limit,int val[],int n,int val2[]) {
	if(n==0) {
		for(int i=0;i<=limit;i++)
		    val2[i]=i==0;
		return;
	}
	int tmp[21];
	pow(limit,val,n/2,tmp);
	join(limit,tmp,tmp,val2);
	if(n&1) {
		memcpy(tmp,val2,sizeof(int)*(limit+1));
		join(limit,tmp,val,val2);
	}
}


int last[maxM],x[maxM*2];
int main() {
	int T;
	for(scanf("%d",&T);T;T--){
		int n,limit,A,B,C,M;
		scanf("%d%d%d%d%d%d",&n,&limit,&A,&B,&C,&M);

		int end1=n-1,end2=n;
		memset(last,0,sizeof(last[0])*M);
		memset(x,0,sizeof(x[0])*2*M);

		last[x[1]=A]=1;
		for(int i=2;i<=n;i++) {
			x[i]=((int64)x[i-1]*B+C)%M;
			if(last[x[i]]) {
				end1=last[x[i]]-1,end2=i-1;
				break;
			}
			last[x[i]]=i;
		}

		int valH[21],valC[21],valT[21],tmp[21];
		calc(end1,x,limit,valH);
		calc(end2-end1,x+end1,limit,valC);
		calc((n-end1)%(end2-end1),x+end1,limit,valT);
		/*for(int i=0;i<=limit;i++)
			printf("%d : %d\n",i,valH[i]);puts("");
	    for(int i=0;i<=limit;i++)
			printf("%d : %d\n",i,valC[i]);puts("");
	    for(int i=0;i<=limit;i++)
			printf("%d : %d\n",i,valT[i]);puts("");*/

		pow(limit,valC,(n-end1)/(end2-end1),tmp);
		join(limit,tmp,valH,valC);
		join(limit,valC,valT,tmp);

		//for(int i=0;i<=limit;i++)
		//	printf("%d : %d\n",i,tmp[i]);puts("");
		/*1,end1
		end1+1,end2
		end2,end2+(n-end1)%(end2-end1)-1*/

		/*for(int i=1;i<=end1;i++)
		    printf("%d ",x[i]);
		printf("(");
	    for(int i=end1+1;i<=end2;i++)
		    printf("%d ",x[i]);
		printf(")\n");*/

		printf("%d\n",tmp[limit]);
	}
	scanf("%*s");
}
