#include <iostream>
using namespace std;
#define FOR(i,n) for(int (i)=0;(i)<(n);++(i))
#define FORI(i,n) for(int (i)=1;(i)<=(n);++(i))
#define ll long long
 
ll m;
 
ll potega (ll a, ll b) {
   if (b == 0) return 1;
   ll wyn = potega((a*a)%m, b/2);
   if (b % 2) wyn = (wyn*a)%m;
   return wyn;
}
 
ll mnoz (ll a, ll b, ll mm) {
   ll a1 = a >> 20;
   ll a2 = a - (a1 << 20);
   ll b1 = b >> 20;
   ll b2 = b - (b1 << 20);
   
   return (((a1 << 40) % mm) * b1 + ((a1*b2+a2*b1) << 20) + a2*b2) % mm;
}
 
ll kwadrat (ll a, ll mm) {
   ll a1 = a >> 20;
   ll a2 = a - (a1 << 20);
   
   return (((a1 << 40) % mm) * a1 + ((a1*a2) << 21) + a2*a2) % mm;
}
 
ll potega2 (ll a, ll b, ll mm) {
   if (b==0) return 1;
   ll wyn = potega2(kwadrat(a,mm), b/2, mm);
   if (b%2) wyn = mnoz(wyn,a,mm);
   return wyn;
}
 
ll foobar (ll g, ll z) {
   if (g==1) return z+1;
   ll mm = (g-1)*m;
   ll gzplus1 = potega2(g,z+1,mm) - 1;
   return (gzplus1 / (g-1));
}
 
int main () {
   ios_base::sync_with_stdio(0);
   int tests;
   cin >> tests;
   while (tests--) {
      ll n;
      cin >> n >> m;
      
      ll sumacala = 0;
      
      if (n < m) {
         for (int j = 1; j <= n; ++j) {
            ll jj = potega(j,j);
            sumacala += jj;
         }
      } else {
         for (ll j = 1; j <= min(n,m); ++j) {
            ll jj = potega(j,j);
            ll g = potega(j,m);
            ll z = (n-j)/m;
            
            sumacala += (jj * foobar(g,z)) % m;
         }
      }
      sumacala %= m;
      cout << sumacala << endl;
   }
}