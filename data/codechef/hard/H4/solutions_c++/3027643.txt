#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <string>
#include <numeric>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <sstream>
#include <cstring>
using namespace std;
 
#define rep(i,b) for(int i=(0);i<(b);++i)
#define fo(i,a,b) for(int i=(a);i<=(b);++i)
#define ford(i,a,b) for(int i=(a);i>=(b);--i)
#define fore(a,b) for(__typeof((b).begin()) a = (b).begin();a!=(b).end();++a)
#define vv vector
#define pb push_back
#define ll long long
#define ld long double
#define ss(a) (int)(a).size()
#define all(x) (x).begin(),(x).end()
#define clr(x,a) memset(x,a,sizeof(x))
#define vi vv<int>
#define vs vv<string>
 
int cond = (ll)1;
#define db(x) { if (cond > 0) { cond--; rep (xxx, 1) cerr << __LINE__ << " " << #x << " " << x << endl; cerr.flush(); } }
 
 
inline  int pot( int i,  int j,  int P) {
     int tmp = i;
     int ret = 1;
    while (j) {
        if (j & 1) {
		ret = ((ll)ret * tmp) % P;
	}
        tmp = ((ll)tmp * tmp) % P;
        j /= 2;
    }
    return ret;
}
 
inline  void pot3( int i,  int j1, int j2,  int P, int &ret1, int &ret2) {
     int tmp = i;
     ret1 = 1; ret2 = 1;
     while (j2) {
        if (j1 & 1) { ret1 = ((ll)ret1 * tmp) % P; }
        if (j2 & 1) { ret2 = ((ll)ret2 * tmp) % P; }
        tmp = ((ll)tmp * tmp) % P;
	j1 >>= 1; j2 >>= 1;
    }
}
 
 
 
 
inline  ll mul2( ll a,  ll b,  ll P) {
	return ((((a * (b/65536)) % P )*65536) + a * (b % 65536)) % P;
}
 
 
inline  ll pot2( ll i,  ll j,  ll P) {
     ll tmp = i;
     ll ret = 1;
     while (j) {
        if (j & 1) {
		ret = mul2(ret, tmp, P);
	}
	tmp = mul2(tmp, tmp, P);
        j /= 2;
    }
    return ret;
}
 
ll fi(ll m) {
	ll ret = 1;
	for (ll i = 2; i * i <= m; i++) {
		if (m % i == 0) { ret *= i - 1; m /= i; }
		while (m % i == 0) { ret *= i; m /= i; }
	}
	if (m > 1) ret *= m - 1;
	return ret;
}
 
ll solve() {
	ll n;
	int m;
	cin >> n >> m;
	if (m == 1) return 0;
	ll ret = 0;
	fo (i, 1, m - 1) {
		int fst, ni;
	       	pot3(i, i, m, m, fst, ni);
		ll ile = (n - i + m) / m;
 
		if (i == 1) {
			ret = (ret + fst * ile) % m;
		}
		else {
			//ll ni = pot(i, m, m);
 
			if (ni == 0) {
				if (ile >= 1)
					ret = (ret + fst) % m;
			} else
			if (ni == 1) {
				ret = (ret + fst * ile) % m;
			}
			else {
				ll mian = (ll)m * (ni - 1);
				ll up = pot2(ni, ile, mian) - 1;
				if (up < 0) up += mian;
 
				up /= (ni - 1);
				ret = (ret + fst * up) % m;
			}
		}
	}
 
	return (ret % m + m) % m;
}
 
 
int main(int argc, char ** argv) {
    ios::sync_with_stdio(false);
    cond = argc >= 2 && argv[1][0] == 'q' ? 1 << 30 : 0;
    int t;
    cin >> t;
    fo (i, 1, t) {
	    cout << solve() << endl;
    }
    return 0;
}
  