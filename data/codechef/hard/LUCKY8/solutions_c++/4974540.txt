#include<iostream>
using namespace std;
int func(int n4,int n7,int n)
{
	int k=(n7-n4+n)/2;
	
	if(0<=k&&k<=n)
	{
		return (n4+k)*(n7+n-k);
	}
	k++;
	
	if(0<=k&&k<=n)
	{
		return (n4+k)*(n7+n-k);
	}
	
	return max(n4*(n7+n),n7*(n4+n));
}
int func(int L,int R,int n4,int n7,int n)
{
	if(L>R)
	return 0;
	
	int ans=func(n4,n7,n);
	
	if(L<=4&&4<=R)
	ans=max(ans,func(n4+1,n7,n));
	if(L<=7&&7<=R)
	ans=max(ans,func(n4,n7+1,n));
	
	return ans;
}
int main()
{
	int T;
	
	scanf("%d",&T);
	
	while(T--)
	{
		long long L,R; 
		scanf("%lld%lld",&L,&R);
		
		int aL[20]={0};
		int nL=0;
		
		while(L>0)
		{
			aL[nL++]=L%10;
			L/=10;
		}
		
		int aR[20]={0};
		int nR=0;
		
		while(R>0)
		{
			aR[nR++]=R%10;
			R/=10;
		}
		
		int n=max(nR,nL);
		int i;
		int n4=0;
		int n7=0;
		for(i=n-1;i>=0&&(aL[i]==aR[i]);i--)
		{
			n4+=(aL[i]==4);
			n7+=(aL[i]==7);
		}
		
		int ans=0;
		
		if(i<0)
		{
			ans=n4*n7;
		}
		else
		{
			ans=func(aL[i]+1,aR[i]-1,n4,n7,i);
			
			int c4=n4;
			int c7=n7;
			int j=i;
			
			while(1)
			{
				c4+=(aL[j]==4);
				c7+=(aL[j]==7);
				j--;
				if(j<0)
				break;
				
				ans=max(ans,func(aL[j]+1,9,c4,c7,j));
			}
			
			ans=max(ans,c4*c7);
			
			c4=n4;
			c7=n7;
			
			j=i;
			
			while(1)
			{
				c4+=(aR[j]==4);
				c7+=(aR[j]==7);
				j--;
				if(j<0)
				{
					break;
				}
				ans=max(ans,func(0,aR[j]-1,c4,c7,j));
			}
			ans=max(ans,c4*c7);
		}
		
		printf("%d\n",ans);
	}
	return 0;
}
