#include <cstdio>
#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;
typedef long long ll;
int calc(int n1, int n2, int r)
{
    if(n1 > n2) swap(n1, n2);
    if(n1+r<=n2) return (n1+r)*n2;
    int x = (r+n1-n2)/2;
    return (n1+r-x)*(n2+x);
}
int solve(ll L, ll R)
{
    int nl[20], nr[20], n = 0;
    while(R) {
        nr[n++] = R%10;
        R/=10;
    }
    int i, j;
    for(i=0;i<n;i++) {
        nl[i] = L%10;
        L/=10;
    }
    reverse(nl,nl+n);
    reverse(nr,nr+n);
    // nl: L, nr: R
    int n4 = 0, n7 = 0;
    int ans = 0, f = 0;
    for(i=0;i<n;i++) {
        int s = nl[i]+1, t = nr[i];
        if(f) t = 10;
        for(j=s;j<t;j++) {
            ans = max(ans, calc(n4+(j==4),n7+(j==7),n-1-i));
        }
        n4 += nl[i]==4;
        n7 += nl[i]==7;
        if(nl[i] < nr[i]) f = 1;
    }
    ans = max(ans, n4*n7);
    n4 = n7 = f = 0;
    for(i=0;i<n;i++) {
        int s = nl[i]+1, t = nr[i];
        if(f) s = 0;
        for(j=s;j<t;j++) {
            ans = max(ans, calc(n4+(j==4),n7+(j==7),n-1-i));
        }
        n4 += nr[i]==4;
        n7 += nr[i]==7;
        if(nl[i] < nr[i]) f = 1;
    }
    ans = max(ans, n4*n7);
    return ans;
}
int main()
{
    int T;
    scanf("%d", &T);
    while(T--) {
        ll L, R;
        int i, j;
        scanf("%lld %lld", &L, &R);
        printf("%d\n", solve(L,R));
    }
    return 0;
}
