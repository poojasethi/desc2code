#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <istream>
#include <fstream>
#include <iterator>

using namespace std;

#define mem(x , val) memset((x), (val) , sizeof(x))
#define pb push_back
#define mp make_pair
#define sz size()
#define Int size_t
#define rep(i,n) for(int i = 0; i < (int)(n); i++)
#define repd(i, n) for(int i = (n) - 1; i >= 0; i--)
#define re return

typedef long long LL;

short dp[20][2][2][20][20];
string a, b;
int n;

short go(int i, bool normal1, bool normal2, int sevens, int fours) {
	if (i == n) {
		re short(sevens * fours);
	} else {
		if (dp[i][normal1][normal2][sevens][fours] != -1) re dp[i][normal1][normal2][sevens][fours];
		short res = -1;
		for (char c = '0'; c <= '9'; c++) {
			if (c >= a[i] || normal1) {
				if (c <= b[i] || normal2) {
					res = max(res, go(i + 1, normal1 || (c > a[i]), normal2 || (c < b[i]), sevens + (c == '7'), fours + (c == '4')));
				}
			}
		}
		re dp[i][normal1][normal2][sevens][fours] = res;
	}
}
int main() {

//	freopen("C://Users//mohamed sayed wahba//Downloads//Desktop//input.txt", "r", stdin);
//	freopen("C://Users//mohamed sayed wahba//Downloads//Desktop//output.txt", "w", stdout);

	int t;
	cin >> t;
	while (t--) {
		cin >> a >> b;
		mem(dp, -1);
		n = max(int(a.sz), int(b.sz));
		while (int(a.size()) < n) {
			a = "0" + a;
		}
		while (int(b.size()) < n) {
			b = "0" + b;
		}
//cout << a << " " << b << endl;
		cout << go(0, 0, 0, 0, 0) << endl;
	}
	re 0;
}
