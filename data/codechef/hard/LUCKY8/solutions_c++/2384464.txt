#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
LL L,R;
int l[22],r[22],ma;
bool can[22][2][2][22][22],was[22][2][2][22][22];
void dfs(int p, int up, int down, int n4, int n7) {
	if (p == -1) {
		ma = max(ma,n4 * n7);
		return;
	}
	if (was[p][up][down][n4][n7]) return;
	was[p][up][down][n4][n7] = true;
	for (int i = 0; i < 10; i++) {
		if (!up && i > r[p]) continue;
		if (!down && i < l[p]) continue;
		dfs(p - 1,up | (i < r[p]),down | (i > l[p]),n4 + (i == 4),n7 + (i == 7));
	}
}
void solve() {
	memset(can,false,sizeof(can));
	memset(was,false,sizeof(was));
	ma = 0;
	cin >> L >> R;
	for (int i = 0; i < 20; i++) {
		l[i] = L % 10; r[i] = R % 10;
		L /= 10; R /= 10;
	}
	dfs(19,0,0,0,0);
	cout << ma << endl;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
}
