#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string.h>
#include <math.h>
using namespace std;
int t,n,m;
char a[20],b[20];
int f[20][20][20][2][2][2];
void khoitao(){
    n=strlen(b);
    m=strlen(a);
    char tam[20];
    tam[0]='\0';
    if (m<n){
        for (int i=1;i<=n-m;i++) strcat(tam,"0");
        strcat(tam,a);
        strcpy(a,tam);
    }
    //cout<<a<<" "<<b;
}
int qhd(int vt,int d4,int d7,int ok1,int ok2,int ok3){
    if (f[vt][d4][d7][ok1][ok2][ok3]>-1) return(f[vt][d4][d7][ok1][ok2][ok3]);
    if (vt==n){
        f[vt][d4][d7][ok1][ok2][ok3]=d4*d7;
        return(d4*d7);
    }
    int cmin,cmax;
    if (ok1==1) cmin=0; else cmin=a[vt]-'0';
    if (ok2==1) cmax=9; else cmax=b[vt]-'0';
    //cout<<cmin<<" "<<cmax<<endl;
    int c=0;
    for (int i=cmin;i<=cmax;i++){
        if (ok3==0){
            if (i==0) c=max(c,qhd(vt+1,d4,d7,ok1 | (i>cmin),ok2 | (i<cmax),0));
            else c=max(c,qhd(vt+1,d4+(i==4),d7+(i==7),ok1 | (i>cmin),ok2 | (i<cmax),1));
        }
        else c=max(c,qhd(vt+1,d4+(i==4),d7+(i==7),ok1 | (i>cmin),ok2 | (i<cmax),1));
    }
    f[vt][d4][d7][ok1][ok2][ok3]=c;
    return(c);
}
void xuli(){
    //memset(f,255,sizeof(f));
    for (int i1=0;i1<=n;i1++)
        for (int i2=0;i2<=n;i2++)
            for (int i3=0;i3<=n;i3++)
                for (int i4=0;i4<=1;i4++)
                    for (int i5=0;i5<=1;i5++)
                        for (int i6=0;i6<=1;i6++) f[i1][i2][i3][i4][i5][i6]=-1;
    printf("%d\n",qhd(0,0,0,0,0,0));
}
int main(){
    //freopen("LUCKY8.inp","r",stdin);
    //freopen("LUCKY8.out","w",stdout);
    scanf("%d\n",&t);
    while (t){
        cin>>a; cin>>b;
    //cout<<a<<" "<<b;
        khoitao();
        //cout<<1;
        xuli();
        t--;
    }
}
