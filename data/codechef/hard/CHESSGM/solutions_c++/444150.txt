#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>
#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define PB(x) push_back(x)
#define MP(x,y) make_pair(x,y)
#define F first
#define S second
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;

struct matrix{
    LL arr[70][70];
};

const LL MOD=1000000007LL;

matrix mult(matrix a,matrix b,int n)
{
    matrix ans;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            ans.arr[i][j]=0;
            for(int k=0;k<n;k++){
                ans.arr[i][j]+=((LL)a.arr[i][k]*b.arr[k][j])%MOD;
                ans.arr[i][j]%=MOD;
            }
        }
    }
    return ans;
}
int main()
{
    //freopen("input.txt","r",stdin);
    int D;LL K;
    cin>>D>>K;
    if (K == 0) {
        cout<<"1\n";
        return 0;
    }
    else if (K==1){
        cout<<"0\n";
        return 0;
    }
    matrix inp;
    for(int i=0;i<(D+1)*(D+1);i++){
        for(int j=0;j<(D+1)*(D+1);j++){
            int a,b;a=i/(D+1);b=i%(D+1);
            int c,d;c=j/(D+1);d=j%(D+1);
            if((c==a-1 && b==d) || (d==b+1 && c==a) || (c==a+1 && d==b-1)){
                inp.arr[i][j]=1;
            }
        }
    }
    matrix temp=inp,ans=inp;
    K--;
    int n=(D+1)*(D+1);
    while(K){
        if(K&1)
            ans=mult(ans,temp,n);
        temp=mult(temp,temp,n);
        K/=2;
    }
    cout<<ans.arr[0][0]<<endl;
}
