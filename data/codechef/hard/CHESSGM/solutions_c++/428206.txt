#include<iostream>
#include<cmath>
#include<algorithm>
#include<limits>
#include<vector>
#include<bitset>
#include<cstdlib>
#include<cstdio>
#include<cstring>

using namespace std;

#define S scanf
#define P printf
#define REP(i,n) for(int i=0;i<n;i++)
#define FOR(i,FROM,n) for(int i=FROM;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define ll long long int
#define llu long long unsigned int
#define mod 1000000007

int t,n;
ll k;

int ni()
{
    int temp;
    scanf("%d",&temp);
    return temp;
}

ll nl()
{
    ll temp;
    scanf("%lld",&temp);
    return temp;
}

float nf()
{
    float temp;
    scanf("%f",&temp);
    return temp;
}
/*
bool myfunction( const node& i, const node& j )    //use it to sort vectors
{
    if( i.x < j.x ) return false;
    if( j.x < i.x ) return true;
    return j.c < i.c;
}
*/




struct dist
{
    int x,y;
};

dist p[100];
int pi=0;
int a[100][100];

void multi(ll p[100][100],ll q[100][100])
{
    ll temp[100][100];

    REP(i,pi)
    {
        REP(j,pi)
        {
            temp[i][j]=0;
            REP(l,pi)
            temp[i][j]=(temp[i][j]+(p[i][l]*q[l][j])%mod)%mod;
        }
    }
    REP(i,pi)
    REP(j,pi)
    p[i][j]=temp[i][j];
}




ll mul()
{
    /*
    REP(i,pi)
    {
        REP(j,pi)
        cout<<a[i][j]<<" ";
        cout<<endl;
    }
    */
    ll ans[100][100],by[100][100];
    REP(i,pi)
    REP(j,pi)
    {
        //if(i==j)
        //ans[i][j]=1;
        //else
        ans[i][j]=0;
        by[i][j]=a[i][j];
    }
    ans[0][0]=1;
    while(k)
    {
        if(k%2)
        multi(ans,by);

        multi(by,by);
        k/=2;
    }
    ll temp=0;
    REP(i,pi)
    temp=(temp+ans[i][0])%mod;
    return temp;
}


int main()
{
   //freopen("input.txt","r",stdin);
   //freopen("output.txt","w",stdout);

   //scanf("%d",&t);
   //for(int prob=0;prob<t;prob++)
   n=ni();
   k=nl();
   REP(i,n+1)
   {
       REP(j,n+1)
       {
           p[pi].x=i;
           p[pi++].y=j;
       }
   }

   REP(i,pi)
   {
       REP(j,pi)
       {
           if((p[j].x-p[i].x==-1 && p[j].y==p[i].y) || (p[j].x==p[i].x && p[j].y==p[i].y+1) || (p[j].x-p[i].x==1 && p[j].y==p[i].y-1))
           a[i][j]=1;
           else
           a[i][j]=0;
       }
   }

   printf("%lld\n",mul());

   //system("pause");
   return 0;

}
