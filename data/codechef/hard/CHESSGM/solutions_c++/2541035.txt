#include <cstdio>
#include <iostream>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <set>
#include <map>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <climits>
#include <cctype>
 #define ill long long
#define s(n)     scanf("%d",&n)
#define sc(n)    scanf("%c",&n)
#define sl(n)    scanf("%lld",&n)
#define sf(n)    scanf("%lf",&n)
#define ss(n)    scanf("%s",n)
#define INF      (int)1e9
#define EPS      1e-9
#define bitcount __builtin_popcount
#define gcd      __gcd
#define forall(i,a,b) for(int i=a; i<b; i++)
#define foreach(v, c) for( typeof( (c).begin()) v = (c).begin();   v != (c).end();  ++v)
#define all(a) a.begin(), a.end()
#define in(a,b) ( (b).find(a) != (b).end())
#define pb  push_back
#define fill(a,v) memset(a, v, sizeof a)
#define sz(a) ((int)(a.size()))
#define mp  make_pair
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)  ( (n >> b) & 1)
#define DREP(a) sort(all(a));  a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
#define pii pair<int, int>
#define fr first
#define sec second
#define MAX 80
#define rep while
#define pi  (2*acos(0.0))
#define sq(a) ((a)*(a))
#define mod (int)((1e9)+7)
using namespace std;
void multiply(ill a[64][64], ill b[64][64]) {
    ill res[64][64];
    forall(i, 0, 64) {
        forall(j, 0, 64) {
            res[i][j] = 0;
            forall(k, 0, 64) {
                res[i][j] += a[i][k]*b[k][j];
                res[i][j] %= mod;
            }
        }
    }
    forall(i, 0, 64) {
        forall(j, 0, 64) {
            a[i][j] = res[i][j];
        }
    }
}

int main() {
    int d, k;
    s(d);   s(k);
    int a[64][64];
    int sid = 0;
    forall(i, 0, d+1) {
        forall(j, 0, d+1) {
            a[i][j] = sid++;
        }
    }
    ill mat[64][64];
    forall(i, 0, d+1) {
        forall(j, 0, d+1) {
            
            int ii = i-1, jj = j+1;
            if(jj <=d && ii >= 0 )
                mat[a[i][j]][a[ii][jj]] ++;
            ii = i+1; jj = j;
            if(ii <= d)
                mat[a[i][j]][a[ii][jj]] ++;
            ii = i; jj = j-1;
            if(jj >= 0)
                mat[a[i][j]][a[ii][jj]] ++;
    

        }
    }
    
    ill res[64][64];
    forall(i, 0, 64) {
        forall(j, 0, 64) {
            res[i][j] = (i==j);
        }
    }
    // cout << k <<endl;
    while(k) {
        // cout << "hello" <<endl;
        if(k%2== 1) {

            multiply(res, mat);
     
        }
        k/=2;
        multiply(mat, mat);
    }
    cout << res[a[0][0]][a[0][0]] <<endl;
}