#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 400010

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)

int sa[N],rank[N],g[N],b[N],h,lcp[N],l[N],r[N],cnt1[N],cnt2[N],n;ll ans[N];
inline bool cmp(int i,int j)
{
	if(i==j||g[i]!=g[j])return g[i]<g[j];
	return g[i+h]<g[j+h];
}
void init(char *s)
{
	n=strlen(s);
	int i,k;
	for(i=0;i<=n;i++)sa[i]=i,g[i]=s[i];
	g[n]=-1,b[0]=b[n]=0;
	sort(sa,sa+n+1,cmp);
	for(h=1;b[n]!=n;h<<=1)
	{
		sort(sa,sa+n+1,cmp);
		for(i=0;i<n;i++)b[i+1]=b[i]+cmp(sa[i],sa[i+1]);
		for(i=0;i<=n;i++)g[sa[i]]=b[i];
	}
	//for(i=0;i<n;i++)sa[i]=sa[i+1];
	for(i=1;i<=n;i++)rank[sa[i]]=i;
	k=0;
	for(i=0;i<n;i++)
	{
		if(k>0)k--;
		if(rank[i]==1){lcp[1]=0,k=0;continue;}
		int j=sa[rank[i]-1];
		while(s[i+k]==s[j+k])k++;
		lcp[rank[i]]=k;
	}
}
char s[N],s1[N];
vi p[N];
int main()
{
	int T,m,i,j,k;
	scanf("%d",&T);
	while(T--)
	{
		int L;
		scanf("%s%s%d",s,s1,&L);
		m=strlen(s);
		strcat(s,"#");
		strcat(s,s1);
		init(s);
		for(i=1;i<=n;i++)p[i].clear();
		for(i=1;i<=n;i++)
		if(lcp[i])p[lcp[i]].pb(i);
		for(i=1;i<=n;i++)
		{
			cnt1[i]=sa[i]<m;cnt2[i]=sa[i]>m;
			l[i]=i-1,r[i]=i+1;
		}
		ll sum=0;
		int w;
		for(i=n;i;i--)
		{
			for(j=0;j<p[i].size();j++)
			{
				w=p[i][j];
				sum+=(ll)cnt1[l[w]]*cnt2[w];sum+=(ll)cnt2[l[w]]*cnt1[w];
				cnt1[l[w]]+=cnt1[w];cnt2[l[w]]+=cnt2[w];
				l[r[w]]=l[w];r[l[w]]=r[w];
			}
			ans[i]=sum;
		}
		for(i=1;i<=L;i++)
		printf("%lld ",ans[i]);
		puts("");
	}
}