/*
*
*	FileName: 
*	Created By: r3gz3n
*	Description: 
*
*/
#include <bits/stdc++.h>

#define ll long long
#define ull unsigned long long

using namespace std;


const ll MOD = 1000000007;
vector <int> A, B, Res;
typedef complex<double> base;

int rev(int num, int lgn)
{
    int res = 0;
    for(int i = 0;i < lgn;++i)
    {
        if(num & (1 << i))
            res |= 1 << (lgn-1+i);
    }
    return res;
    
}

void fft(vector <base> &a, bool invert)
{
    int n = a.size();
    
    for(int i = 1, j = 0;i < n;++i)
    {
        int bit = n >> 1;
        for(;j >= bit; bit >>= 1)
            j -= bit;
        j += bit;
        if(i < j)
            swap(a[i], a[j]);
    }
    
    for(int len = 2;len <= n; len <<= 1)
    {
        double ang = 2 * M_PI / len * (invert ? -1 : 1);
        base wlen (cos(ang), sin(ang));
        for(int i = 0;i < n;i += len)
        {
            base w(1);
            for(int j = 0;j < len/2;++j)
            {
                base u = a[i+j], v = a[i+j+len/2]*w;
                a[i+j] = u + v;
                a[i+j+len/2] = (u - v);
                w *= wlen;
            }
        }
    }
    if(invert)
    {
        for(int i = 0;i < n;++i)
            a[i] /= n;
    }
}

void multiply(const vector<int> &a,const vector<int> &b)
{
    vector <base> fa(a.begin(), a.end()), fb(b.begin(), b.end());
    size_t n = 1;
    while(n < max(a.size(), b.size())) n <<= 1;
    n <<= 1;
    fa.resize(n), fb.resize(n);
    //res.resize(n);
    fft(fa, false), fft(fb, false);
    for(size_t i = 0;i < n;++i)
        fa[i] *= fb[i];
    fft(fa, true);
    
    Res.resize(n);
    
    for(size_t i = 0;i < n;++i)
    {
        if(fa[i].real() < 0)
            Res[i] = int(fa[i].real() - 0.5);
        else Res[i] = int(fa[i].real() + 0.5);
    }
}


int main()
{
    //freopen("input.txt", "r", stdin);
    string a, b;
    int k, n, m, x, y;
    ll ans;
    cin >> a;
    n = a.length();
    for(int i = 0;i < n;++i)
        A.push_back((a[i] == '0' ? -1 : 1));
    cin >> k;
    for(int i = 0;i < k;++i)
    {
        cin >> b;
        B.clear();
        m = b.length();
        for(int i = m-1;i >= 0;--i)
            B.push_back((b[i] == '0' ? -1 : 1));
        ans = 0;
        Res.clear();
        multiply(A, B);
        for(int i = m-1;i < n;++i)
        {
            //cout << res[x] << ' ';
            //if(res[x] < 0) res[x]--;
            ans = (ans*100001 + (m - Res[i]) / 2) % MOD;
        }
        //cout << endl;
        //if(ans < 0) ans += MOD;
        printf("%lld\n", ans);
    }
    return 0;
}
