#include <bits/stdc++.h>
using namespace std;
 
#define PB push_back
#define MP make_pair
#define SZ size()
#define all(v) v.begin(), v.end()
#define REP(i, n) for(int i = 0; i < (int)n; i++)
#define ITR(i, j, n) for(int i = j; i < (int)n; i++)
#define mem(array, val) memset(array, val, sizeof(array))
#define READ(filename) freopen(filename, "r", stdin)
#define WRITE(filename) freopen(filename, "w", stdout)
#define Pii pair <int, int>
#define Fr first
#define Sc second
#define Long long long
#define si(a) scanf("%d", &a)
#define sl(a) scanf("%lld", &a)
#define sd(a) scanf("%lf", &a)
#define sii(a, b) scanf("%d%d", &a, &b)
#define sll(a, b) scanf("%lld%lld", &a, &b)
#define sdd(a, b) scanf("%lf%lf", &a, &b)
#define siii(a, b, c) scanf("%d%d%d", &a, &b, &c)
#define slll(a, b, c) scanf("%lld%lld%lld", &a, &b, &c)
#define sddd(a, b, c) scanf("%lf%lf%lf", &a, &b, &c)
 
#define MAX 100005
#define MOD 1000000007
#define H 100001
string A, B;
int N, M, K;
 
Long solve()
{
   Long ret = 0, hash[2] = {0, 0}, mul = 1;
   REP(i, N-M+1) {
      if(i) mul = (mul*H) % MOD;
      REP(j, 2) {
         hash[j] = hash[j]*H + (A[i] != '0'+j ? 1:0);
         hash[j] %= MOD;
      }
   }
   REP(i, M) {
      if(i) REP(j, 2) {
         hash[j] = hash[j] - (A[i-1] != '0'+j ? 1:0) * mul;
         hash[j] = (hash[j]+MOD) % MOD;
         hash[j] = hash[j]*H + (A[i+N-M] != '0'+j ? 1:0);
         hash[j] %= MOD;
      }
      //cout << hash[0] << ' ' << hash[1] << endl;
      ret += (B[i] == '0' ? hash[0]:hash[1]);
      ret %= MOD;
   }
   return ret;
}
 
void main_()
{
   cin >> A;
   N = A.SZ;
   cin >> K;
   REP(i, K) {
      cin >> B;
      M = B.SZ;
      cout << solve() << endl;
   }
}
 
int main()
{
   ios_base::sync_with_stdio(0); cin.tie(0);
   int t = 1;
   //cin >> t;
 
   while(t--) main_();
 
   return 0;
}
 