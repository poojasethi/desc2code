#include<bits/stdc++.h>
#define ll long long
#define S(n) scanf("%d",&(n))
#define P(n) printf("%d",(n))
#define SL(n) scanf("%lld",&(n))
#define PL(n) printf("%lld",(n))
#define NL printf("\n")
#define Debug cout<<"Hello"
#define N 100006
#define SP printf(" ")
#define M 1000000007
using namespace std;
ll z[N],o[N];
ll rz[N],ro[N];

ll mod_pow(ll b,ll exp,ll mod)
{
	ll res=1;
	
	while(exp)
	{
		if(exp%2==1)res=(res*b)%mod;
		b=(b*b)%mod;
		exp/=2;
	}
	return res;
}

void ee(ll a,ll b,ll &x ,ll &y)
{
	if(b==0)
	{
		x=1;
		y=0;
	}
	else
	{
		ee(b,a%b,x,y);
		
		long long temp=x;
		
		x=y;
		
		y= (temp-(a/b)*y);
	}
	
}

//ax=b mod n
//for inverse ax=1 mod n
void eqnSolver(ll a,ll b,ll m,ll &x)
{
	
	long long y,d=__gcd(a,m);
	
	ee(a,m,x,y);
	
	if(b%d==0)
		{
			x=(x*(b/d));
			while(x<0)
			{
				x+=m;
			}
			x%=m;
		}
		
	else x=-1;
}
ll inverse(ll a, ll m)
{
	
	ll x;
	eqnSolver(a,1,(ll)m,x);
	while(x<0)x+=M;
	return x;
}
int main()
{
	
	
	//cout<<inverse(7,4);
	//freopen("input.txt","r",stdin);
	
	string a,b;
	cin>>a;
	int k;
	cin>>k;

	
	int n = a.size();
	
	
	
	
	
	while(k--)
	{
		
		cin>>b;
		
		
			memset(z,0,sizeof(z));memset(o,0,sizeof(o));memset(rz,0,sizeof(rz));memset(ro,0,sizeof(ro));
			
			int m = b.size();
		
		
			if(n==m)
			{
				
				ll ans=0;
				for(int i=1;i<=(n-m+1);i++)
				{
					ll cnt=0;
					for(int j=0;j<m;j++)
					{
						
						if(a[i+j-1]!=b[j])
						{
							cnt++;
						}
						
					}
					
					ans = ans*100001%M+cnt;ans%=M;
					
				}
				PL(ans);NL;
				continue;
				
				
				
			}
		
			
			
			
			z[0]=o[0] = 0;
			
			for(int i=1;i<=m;i++)
			{
			
				z[i] = z[i-1]%M;
				o[i] = o[i-1]%M;
		
			
				if(b[i-1]=='0')
				{
					z[i]+=mod_pow(100001,i-1,M);z[i]%=M;
				
				}
				else
				{
					o[i]+=mod_pow(100001,i-1,M);o[i]%=M;
				}
			
				//PL(o[i]);SP;PL(z[i]);NL;
				
			}
			
			rz[m+1]=ro[m+1] = 0;
		
		for(int i=m;i>0;i--)
		{
			
				rz[i] = rz[i+1]*100001%M;
				ro[i] = ro[i+1]*100001%M;
		
			
			if(b[i-1]=='0')
			{
				rz[i]+=1;
				rz[i]%=M;
				
			}
			else
			{
				ro[i]+=1;
				ro[i]%=M;
				
			}
			
		}
			
			
			
			
			
		
		
		
		ll ans=0;
		
		int idx = min(m,n-m+1);
		
		for(int i=1;i<=idx;i++)
		{
			if(a[i-1]=='0')
			{
				ans+=o[i]*mod_pow(100001,n-m+1-i,M)%M;ans%=M;
			}	
			else
			{
				ans+=z[i]*mod_pow(100001,n-m+1-i,M)%M;ans%=M;
			}
			
			
		}
		
		
		//PL(ans);NL;
		for(int i=idx+1;i<=(n-m+1);i++)
		{
			if(a[i-1]=='0')
			{
				ans+=o[m]*mod_pow(100001,n-m+1-i,M)%M;
				ans%=M;
			}	
			else
			{
				ans+=z[m]*mod_pow(100001,n-m+1-i,M)%M;ans%=M;
			}
			
			
		}
		//PL(ans);NL;
		
		if(idx!=m)
		{
		
		for(int i=idx+1;i<=(n-idx);i++)
		{
			
			
			
			if(a[i-1]=='0')
			{
				ll tmp = o[i] - o[i-idx];
				if(tmp<0)tmp+=M;tmp%=M;
				ans+=tmp*inverse(mod_pow(100001,i-idx,M), M)%M;
				
				ans%=M;
			}	
			else
			{
				ll tmp = z[i] - z[i-idx];
				if(tmp<0)tmp+=M;tmp%=M;
				
				ans+=tmp*inverse(mod_pow(100001,i-idx,M), M)%M;
				
				ans%=M;
			}
			
		}
		}
		//PL(ans);NL;
		if(idx!=m)
		{
			idx = n-idx+1;
		}
		else
		{
			idx = n-m+2;
		}
		
		for(int i=idx;i<=n;i++)
		{
			if(a[i-1]=='0')
			{
				ans+=ro[i-n+m];ans%=M;
			}	
			else
			{
				ans+=rz[i-n+m];ans%=M;
			}
			
			
		}
		
		PL(ans%M);NL;
		
	}
	
	
	
	
	return 0;
	
}