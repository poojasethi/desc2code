//#include <iostream>
#include <stdio.h>

using namespace std;

bool numberInSet(int number,int numberSet[])
{
    bool bOK = true;
    while (number)
    {
       if (numberSet[number % 10] != 1)
       {
           bOK = false;
           break;
       }
       number = number/10;
    }
    return bOK;
}

int main()
{
   //cout << "Hello World" << endl; 
   int nNumbers = 0;
   int numAvail[10] = {0,0,0,0,0,0,0,0,0,0};
   scanf("%d",&nNumbers);
   int i;
   for (i=0;i<nNumbers;i++)
   {
       int n = 0;
       scanf("%d",&n);
       numAvail[n] = 1;
   }
   //printf("nCases:%d\n",nNumbers);
   //      a b c
   //        d e
   // _X_________
   //      A B C
   //    D E F
   //____________
   //    G H I J
   int answer[10] = {0,0,0,0,0,0,0,0,0,0};  // A ~ J
   unsigned int num = 11111; // abcde
   int answerCount = 0;
   for (num = 11111;num<=99999;num++)
   {
       // check all num is availble
       bool bOK = numberInSet(num, numAvail);
       if (!bOK)
        continue;
        // compute A~J
        int abc = num/100;
        int d = (num/10) % 10;
        int e = num % 10;
        int ABC = abc*e;
        if (ABC >= 1000 || !numberInSet(ABC, numAvail))
            continue;
        int DEF = abc*d;
        if (DEF >= 1000 || !numberInSet(DEF, numAvail))
            continue;
        int GHIJ = ABC + 10*DEF;
        if (GHIJ >= 10000 || !numberInSet(GHIJ, numAvail))
            continue;
        answerCount++;
        //printf("abc:%d de:%d\n",abc,d*10+e);
    }
    printf("%d\n",answerCount);
   return 0;
}
