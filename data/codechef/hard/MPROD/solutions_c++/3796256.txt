#include <bits/stdc++.h>
using namespace std;
const long long m=1e9 + 7;

long long a[20010];
vector<long long> p;

void find_p()
{
    p.push_back(2); p.push_back(3);
    for(int i=4; i<=10000; ++i)
    {
        int chk=1;
        for(int j=0; p[j]<=sqrt(i); ++j)
            if(i%p[j]==0){chk=0; break;}
        if(chk)p.push_back(i);
    }
}

int main()
{
    //freopen("in.in", "r", stdin);
    find_p();
    int t; cin >> t;

    while(t--)
    {
        memset(a, 0, sizeof a);
        int n; long long prod=1;
        cin >> n;

        for(int i=1; i<=n; ++i)cin >> a[i];

        for(int i=0; i<p.size(); ++i)
        {
            priority_queue<int> pc;
            for(int j=1; j<=n; ++j)
            {
                int c=0;
                while(a[j]%p[i]==0){c++; a[j]/=p[i];}
                if(c>0)pc.push(c);
            }
            while(pc.size()>1){
                int m1=pc.top()-1; pc.pop();
                int m2=pc.top()-1; pc.pop();
                if(m1>0)pc.push(m1);
                if(m2>0)pc.push(m2);
            }

            if(pc.size()){
                for(int j=pc.top(); j>0; --j)
                    prod = (prod*p[i])%m;
            }
        }

        map<long long, int> mapy;
        for(int i=1; i<=n; ++i)mapy[a[i]]++;

        map<long long, int>::iterator it=mapy.begin();
        for(; it!=mapy.end(); it++)
            if(it->second%2)prod = (prod*(it->first))%m;
        cout << prod << endl;
    }
    return 0;
}
