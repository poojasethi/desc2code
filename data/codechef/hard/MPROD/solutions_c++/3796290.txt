#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <utility>
#include <set>
#include <map>
#include <iostream>
#include <queue>
#include <climits>

using namespace std;

typedef long long LL;

#define PB push_back
#define FRO freopen("in.txt","r",stdin);

#define CLR(arr) memset( (arr),0,sizeof(arr) );
#define NEG(arr) memset( (arr),-1,sizeof(arr) );

#define X first
#define Y second

#define MP make_pair

#define snuke(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)


typedef pair<int,int> pint;
typedef map<int,int> mint;

vector< multiset<int> > v;
multiset<int> save;
map<int,int> mp;
vector<int> rev;
int cnt ;

vector<int> p;

void func(int x){

    int val;
    for (int i=0;p[i]*p[i]<=x;++i){
        if ( x%p[i] == 0 ){
            val = 0;
            while ( x%p[i] ==0 ){
                val++;
                x/=p[i];
            }
            if ( mp.find( p[i] ) == mp.end() ){
                mp[ p[i] ] = cnt++;
                save.clear();
                save.insert( val );
                v.PB( save );
                rev.PB( p[i] );
            }else{
                v[ mp[ p[i] ] ].insert( val );
            }
        }
    }
    if ( x!= 1 ){
        if ( mp.find( x ) == mp.end() ){
            mp[ x ] = cnt++;
            save.clear();
            save.insert( 1 );
            v.PB( save );
            rev.PB( x );
        }else{
            v[ mp[ x ] ].insert( 1 );
        }
    }
}

bool prime[10100];

multiset<int>:: iterator it1,it2;
long long BigMod ( long long a, long long p, long long m ){
    long long res = 1;
    long long x = a;

    while ( p ){
        if ( p & 1 ){
            res = ( res * x ) % m;
        }
        x = ( x * x ) % m;
        p = p >> 1;
    }

    return res % m;
}

LL mod = 1000000007 ;
int main(){


    

    for (int i=2;i<=105;++i){
        if ( !prime[i] ){
            for (int j=i+i;j<10100;j+=i){
                prime[j]=true;
            }
        }
    }
    for (int i=2;i<10100;++i){
        if ( !prime[i] ){
            p.PB(i);
        }
    }

    //cout<<p.back();

    int kase;
    scanf("%d",&kase);

    while ( kase-- ){

        v.clear();
        mp.clear();
        rev.clear();
        cnt = 0;

        int tmp,n;
        scanf("%d",&n);

        for (int i=0;i<n;++i){
            scanf("%d",&tmp);
            func( tmp );
        }

        LL ans = 1;
        for (int i=0;i<v.size();++i){

            multiset<int> &now = v[i];
            /*
            cout<<rev[i]<<endl;
            snuke( now, itr ){
                cout<<*itr<<" ";
            }cout<<endl;
            */

            while ( now.size()>1 ){
                it2=now.end();
                it2--;
                it1=it2;
                it2--;

                if ( *it1 -1 != 0  ){
                    now.insert( *it1 -1 );
                }
                if ( *it2 -1 != 0  ){
                    now.insert( *it2 -1 );
                }
                now.erase( it1 );
                now.erase( it2 );
                //cout<<"shaon\n";
            }

            if ( now.size()>0 ){
                //cout<<rev[i]<<" "<<*now.begin()<<endl;
                ans = ( ans * BigMod( rev[i] , *now.begin(),mod ) )%mod;
            }

        }
        printf("%lld\n",ans);
    }


    return 0;
}
