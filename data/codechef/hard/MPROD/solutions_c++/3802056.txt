#include "cstdio"
#include "iostream"
#include "vector"
#include "algorithm"
#include "cstring"
#include "cmath"
#include "map"
#include "queue"
#define runtime() ((double)clock() / CLOCKS_PER_SEC)
#define rep(i, n) for(int i=0; i<n; i++)
#define repp(i, a, b) for(int i=a; i<a+b; i++)
#define repd(i, a, b) for(int i=a; i>a-b; i--)
using namespace std;
inline int getint(){
	char c = getchar();
	for(;c<'0'||c>'9';) c = getchar();
	int x = 0;
	for(;c>='0' && c<='9'; c = getchar()) x*=10, x+=c-'0';
	return x;
}
const int maxn = 20010, mod = 1000000007;
int n,m,k,x,y, b[maxn*20];
map<int, int> id;
int tot = 0;
std::vector<int> v[maxn*20];

int main(int argc, char const *argv[])
{
	int cass = getint();
	rep(cas, cass){
		n = getint();
		repp(i,1,tot) v[i].clear();
		rep(i, n){
			x = getint();
			for(int i=2; i*i<=x; i++) if(x%i==0){
				y = id[i];
				if(y==0) id[i] = y = ++tot, b[tot] = i;
				int r = 0;
				while(x%i==0) x/=i, r++;
				v[y].push_back(r);
			}
			if(x>1){
				y = id[x];
				if(y==0) id[x] = y = ++tot, b[tot] = x;
				v[y].push_back(1);
			}
		}
		long long ans = 1;
		repp(i,1,tot) if(v[i].size()){
			int s = 0, len = v[i].size();
			rep(j, len-1){
				if(j<len-2) s += v[i][j];
				v[i][j+1] -= v[i][j];
			}
			k = v[i][len-1] - s - s;
			if(k<0) k = v[i][len-1]&1;
			rep(mm, k) ans *= b[i], ans %= mod;
			//printf("ans %I64d \n", ans);
		}
		cout<<ans<<endl;
	}
	return 0;
}