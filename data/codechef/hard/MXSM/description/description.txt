Dreaming to manipulate the dimensions of spacetime one day, Chef satisfies himself with manipulating dimensions of abstract mathematical entities for now. Today, Chef has N lists consisting of integers. The i^th list is represented as Li, and has size Si.


Chef has transformed the given lists of integers to form an N dimensional matrix M of size S1 × S2 × S3 × … × SN such that an entry j1, j2, j3, … , jN in the matrix M is obtained by taking product of given N integers L1[j1], L2[j2], L3[j3], ..., LN[jN], where Li[ji] denotes the j^th integer in the i^th list (1-based indexing).


To explore the mathematics of the matrix M deeply, Chef wants to compute the maximum submatrix sum in this matrix; but he is afraid of its high dimensionality. So, he asked you to help him. He asked you to compute two quantities, the maximum sub-matrix sum in the matrix M, and the number of submatrices having this maximum sum.


Since the second answer to this problem can be very large, output it modulo 10^9+7.


Input

First line of input contains a single integer T denoting the number of test cases.
First line of each test case contains a single integer N denoting the number of lists of integers.
Next N lines of each test case contains some space separated integers where integers in the i^th line make up the i^th list. Each list description has the following format.

First integer Si in the i^th line denotes the size of the i^th list, and
the next Si space separated integers are the elements in the list.



Output
For each test case, output 2 space separated integers (second integer modulo 10^9 + 7) where the first integer denotes the maximum submatrix sum and the second denotes the number of such submatrices.

Constraints


1 ≤ T ≤ 100


1 ≤ N ≤ 9


1 ≤ Si ≤ 9


-9 ≤ Li[j] ≤ 9


Example
Input

2
2
2 3 4
2 4 5
2
3 4 -5 4
3 -2 3 -2

Output
63 1
12 2

Explanation

All the matrices with maximum sum are highlighted with coloured fencing.
