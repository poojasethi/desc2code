#include <iostream>

using namespace std;

long long int maxx[10], minn[10], cntmax[10], cntmin[10], cntzero[10][2];
long long int mod = 1e9+7;
long long int a[11][11];
int n;
int nn[10];

void calcmaxmin() {
	for(int i = 0; i < n; ++i) {
		maxx[i] = -2000000000000000000ll;
		cntzero[i][0] = 0;
		cntzero[i][1] = 0;
		cntmax[i] = 0;
		cntmin[i] = 0;
		minn[i] = 2000000000000000000ll;
		for(int j = 0; j < nn[i]; ++j) {
			long long int sum = 0;
			for(int k = j; k < nn[i]; ++k) {
				sum += a[i][k];
				if(sum > maxx[i]) {
					maxx[i] = sum;
					cntmax[i] = 1;
				}
				else
				if(sum == maxx[i]) {
					cntmax[i]++;
				}
				
				if(sum < minn[i]) {
					minn[i] = sum;
					cntmin[i] = 1;
				}
				else
				if(sum == minn[i]) {
					cntmin[i]++;
				}
				
				if(sum == 0)
					cntzero[i][0]++;
			}
			
		}
		cntzero[i][1] = (nn[i]*(nn[i]+1))/2ll - cntzero[i][0];
		//cout<<"max "<<maxx[i]<<endl;
		if(minn[i] == maxx[i])
			cntmin[i] = 0;
	}
}


int main(void) {

	int t;
	scanf("%d", &t);

	while(t--) {
		scanf("%d", &n);
		for(int i = 0; i < n; ++i) {
			scanf("%d", &nn[i]);
			for(int j = 0; j < nn[i]; ++j)
				scanf("%lld", &a[i][j]);
		}

		calcmaxmin();

		long long int s = -2000000000000000000ll;
		long long int nsubmatrices = 0;

		int total = (1<<n) - 1;
		for(int b = 0; b <= total; ++b) {

			long long int tsum = 1;
			long long int tcnt = 1;
			//cout<<b<<" ";
			for(int j = 0; j < n; ++j) {
				
				if((1<<j) & b) {
					//cout<<j<<" "<<maxx[j]<<endl;
					tsum *= maxx[j];
					tcnt = (tcnt*cntmax[j])%mod;
				}
				else {
					tsum *= minn[j];
					tcnt = (tcnt*cntmin[j])%mod;
				}
			}
			//cout<<"tsum "<<tsum<<endl;
			if(tsum > s) {
				s = tsum;
				nsubmatrices = tcnt;
			}
			else if(tsum == s) {
				nsubmatrices = (nsubmatrices + tcnt)%mod;
			}
		}
		if(s != 0) {
			printf("%lld %lld\n", s, nsubmatrices);
			continue;
		}

		nsubmatrices = 0;
		s = 0;
		for(int b = 1; b <= total; ++b) {
			long long int tcnt = 1;
			for(int j = 0; j < n; ++j) {
				if((1<<j) & b) tcnt = (tcnt*cntzero[j][0])%mod;
				else		   tcnt = (tcnt*cntzero[j][1])%mod;
			}
			nsubmatrices = (nsubmatrices + tcnt)%mod;
		}

		printf("%lld %lld\n", s, nsubmatrices);

	}

}