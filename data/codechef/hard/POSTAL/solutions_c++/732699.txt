
/* C++ template */

#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <stack>
#include <queue>
#include <cstring>
#include <string>
#include <algorithm>

using namespace std;

#define FOR(a,b,c) for(int a=(int)(b);a<=(int)(c);a++)
#define ll long long
#define ull unsigned long long 
#define MAX(a,b) ((a>b)?(a):(b))
#define MIN(a,b) ((a>b)?(b):(a))
#define SWAP(a,b) {int t=a;a=b;b=t;}
#define sz(x) (sizeof(x))

/* Main code starts here */

ll n,q,pos[550],dir[550],T,p,c,ans,collisionTime,rem[550];

int input()
{
	cin>>n;
	FOR(i,0,n-1) cin>>pos[i];
	FOR(i,0,n-1) cin>>dir[i];
	cin>>q;
	return 0;
}

int input2()
{
	cin>>p>>T;
	return 0;
}

int solve()
{
	ll i;
	memset(rem,0,sz(rem));
	c=0;
	
	while(1)
	{
		collisionTime=T+1;
		for(i=p; i>=0 && i<n; i+=(dir[p]?+1:-1))
		{
			if(rem[i]) continue;
			rem[i]=1;
			if(dir[p]==dir[i]) continue;
			collisionTime=(abs(pos[i]-pos[p])-1)/2+1;
			break;
		}
		if(collisionTime>T) break;
		c++;
		p=i;
	}
	
	ans=pos[p] + (dir[p]?+1:-1)*T;
	
	return 0;
}

int main()
{
	int test;
	cin>>test;
	while(test--)
	{
		input();
		while(q--)
		{
			input2();
			solve();
			cout<<ans<<" "<<c<<endl;
		}
	}
	return 0;
}

