#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <algorithm>
#include <stack>
#include <list>
#include <queue>
#include <map>
#include <set>
#include <cassert>
using namespace std;
 
#define present(c,x) (find(c.begin(),c.end(),x) != (c).end())
#define traverse(v,it) for (typeof(v.begin()) it=v.begin();it!=v.end();it++)
template<class A, class B> A cvt(B x) { stringstream ss; ss<<x; A y; ss>>y; return y; }
typedef long long int64;
 
int tests,n,q;
int x[500],d[500];
 
int main() {
	//freopen("postal.in","r",stdin);
	scanf("%d",&tests);
	while (tests--) {
		scanf("%d",&n);
		for (int i=0;i<n;i++) {
			scanf("%d",&x[i]); x[i]*=2;
		}
		for (int i=0;i<n;i++) {
			scanf("%d",&d[i]);
		}
		scanf("%d",&q);
		for (int i=0;i<q;i++) {
			int id,T;
			scanf("%d %d",&id,&T);
			T*=2;
			int left=id-1,right=id+1;
			int pos=x[id],cnt=0,dir=d[id];
			for (;;cnt++,dir=1-dir) {
				if (dir==0) {
					while (left>=0 && d[left]!=1) left--;
					if (left>=0 && (pos-x[left])/2<=T) {
						pos=x[left]; left--;
					} else {
						pos=pos/2-T/2;
						break;
					}
				} else {
					while (right<n && d[right]!=0) right++;
					if (right<n && (x[right]-pos)/2<=T) {
						pos=x[right]; right++;
					} else {
						pos=pos/2+T/2;
						break;
					}
				}
			}
			printf("%d %d\n",pos,cnt);
		}
	}
    return 0;
}