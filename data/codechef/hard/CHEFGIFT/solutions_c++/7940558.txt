#include <cassert>
#include <cstdio>
#include <algorithm>
using namespace std;
#define rep(x,n) for(int x = 0; x < n; x++)
#define gc getchar_unlocked
 
inline void fps(int &x) {
	register int c = gc();
	for(;c<48||c>57;c=gc());
	for(x=0;c>47&&c<58;c=gc()) x=(x<<1)+(x<<3)+c-48;
}
 
const int maxn = 100 + 10, maxv = 100*200 + 10, maxe = 1<<17;
int c[maxn][maxn], r[maxn][maxn];
int n, m, d;
int x[maxe], y[maxe], ant[maxe], adj[maxv], e;
int f[maxn][maxn];
int _x0[maxe], _y0[maxe], _0, agora;
 
void add(int nx, int ny, int z) {
	if(z >= f[nx][ny]) return; else f[nx][ny] = z;
	if(z == agora) _x0[_0] = nx, _y0[_0] = ny, _0++;
	else ant[e] = adj[z], x[e] = nx, y[e] = ny, adj[z] = e++;
}
 
int main() {
	int t; fps(t);
	while(t--) {
		fps(d), fps(n), fps(m);
		rep(i,m) rep(j,n) fps(r[i][j]);
		rep(i,m) rep(j,m) fps(c[i][j]);
		rep(i,m) rep(j,n+1) f[i][j] = d+1;
		rep(i,d+1) adj[i] = -1; e = _0 = 0;
		agora = 0;
		rep(i,m) add(i,0,0);
		for(int w = 0; w <= d; w++) {
			agora = w;
			for(int a = adj[w]; a >= 0; a = ant[a]) {
				int i = x[a], j = y[a];
				if(f[i][j] < w) continue;
				if(j == n) { printf("%d\n",d-w); goto end; }
				if(j-1 >= 0) add(i,j-1,f[i][j] + r[i][j-1]);
				add(i,j+1,f[i][j] + r[i][j]);
				rep(k,m) add(k,j,f[i][j] + c[i][k]);
			}
			int at = 0;
			while(at < _0) {
				int i = _x0[at], j = _y0[at]; at++;
				if(f[i][j] < w) continue;
				if(j == n) { printf("%d\n",d-w); goto end; }
				if(j-1 >= 0) add(i,j-1,f[i][j] + r[i][j-1]);
				add(i,j+1,f[i][j] + r[i][j]);
				rep(k,m) add(k,j,f[i][j] + c[i][k]);
			}
			_0 = 0;
		}
		puts("-1"); end:;
	}
	return 0;
} 