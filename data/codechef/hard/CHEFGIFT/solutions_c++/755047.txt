#include <stdio.h>
#include <stdlib.h>
#include<limits.h>


#define MAX 107


#define INF 99999999
#define gc getchar_unlocked


int d[MAX][MAX];

int c[MAX][MAX],g[MAX][MAX];
int n,m,D;


void getshortestpaths();


inline int min(int a,int b)
{
    if( a > b )
    return b;
    else
    return a;

}


inline void fs(int &x)
{
		register int c = gc();
		x = 0;
		int neg = 0;
		for(;((c<48 || c>57) && c != '-');c = gc());
		if(c=='-') {neg=1;c=gc();}
		for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
		if(neg) x=-x;
}



int main()
{
  int t;

  int i,j,k;
   int ans,min,temp;


  //scanf("%d",&t);
fs(t);

  while (   t> 0 )
    {

     // scanf("%d %d %d",&D,&n,&m);
     fs(D);
     fs(n);
     fs(m);


      for ( i=1;i<=m;i++ )
        {
          for (j=1;j<=n;j++)
            {
              //scanf("%d",&g[i][j]);
              fs(g[i][j]);
            }
        }

      for (i=1;i<=m;i++)
        {
          for (j=1;j<=m;j++)
            {
              //scanf("%d",&c[i][j]) ;
              fs(c[i][j]);
            }
        }


getshortestpaths();



      for ( i=1  ;  i<=n  ;  i++ )
        {
          for ( j=1 ;  j<=m ; j++ )
            {
                min=INT_MAX;
              for ( k=1;k<=m;k++ )
                {
                  temp = d[k][i-1]+c[k][j];

                  if ( min >= temp )
                    {
                      min=temp;
                    }
                }

              d[j][i] = min  + g[j][i];

            }
        }

min=INT_MAX;
for(i=1;i<=m;i++)
{
    temp = d[i][n];

    if( min>=temp )
    {
      min=temp;
    }

}

if(  (D-min) >= 0 )
ans=D-min;
else
ans=-1;

printf("%d\n",ans);

      t--;
    }

  return 0;
}


void getshortestpaths()
{

  int i,j,k;

  for( k=1;k<=m;k++ )
  {
    for( i=1;i<=m;i++ )
    {
      for( j=1;j<=m;j++ )
      {
          c[i][j] = min (  c[i][j]  ,  c[i][k] + c[k][j]  ) ;
      }
    }

  }
}

void display()
{
  int i,j;

  for( i=1;i<=m;i++)
  {
    for(  j=1;j<=m;j++)
    {
      printf("%d  ",c[i][j]);
    }
    printf("\n");
  }

}
