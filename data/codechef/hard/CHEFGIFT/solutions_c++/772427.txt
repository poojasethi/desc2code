#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)	
#define INF 1000000007
#define MAXN 1000010
 
typedef pair<int,int>   PI;
typedef vector<int> VI;
typedef long long int LL;
 
int a[110][110],c[110][110],dp[110][110],path[110][110];
 
int main(){
 
	int t;
	scanf("%d",&t);
	while(t--)
	{
		
		int D,n,m;
		scanf("%d%d%d",&D,&n,&m);
		
		memset(a,0,sizeof(a));
		memset(dp,0,sizeof(dp));
		memset(c,0,sizeof(c));
		memset(path,0,sizeof(path));
 
		REP(i,m)
			REP(j,n)
				scanf("%d",&a[i][j]);
 
		REP(i,m)
			REP(j,m)
			{
				scanf("%d",&c[i][j]);
				path[i][j]=c[i][j];
			}
 
		REP(i,m)
			dp[0][i]=a[i][0];
 
 
		REP(k,m)
			REP(i,m)
				REP(j,m)
					path[i][j]=min(path[i][j],path[i][k]+path[k][j]);
				
 
		FOR(i,1,n)
		{
			REP(j,m)
			{
				dp[i][j]=INF;
				REP(k,m)
					dp[i][j]=min(dp[i][j],dp[i-1][k]+path[k][j]);
				dp[i][j]+=a[j][i];
			}
		}
 
		int ans=INF;
 
		REP(i,m)
			ans=min(ans,dp[n-1][i]);
 
		if(ans>D)
			printf("%d\n",-1);
		else
			printf("%d\n",D-ans);
 
 
	}
	return 0;
}