#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
#include<unistd.h>
#include<stdint.h>
using namespace std;
const int N = 1000;
#define ll long long
#define mp make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define BUFSIZE (10000)
char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;
#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})
void init_input(){
	if (input_eof) return;
	int existing = BUFSIZE - (ioend - inputbuffer);
	memcpy(inputbuffer, ioend, existing);
	int wanted = ioend - inputbuffer;
	int count=fread(inputbuffer + existing, 1, wanted, stdin);
	if (count < wanted)input_eof = 1;
	ioend = inputbuffer + BUFSIZE - (wanted - count);
	while (*--ioend > ' ');
	ioend++;
	ioptr=inputbuffer;
}
inline void non_whitespace(){
	for(;;){
		if(ioptr>=ioend)init_input();
		if(*ioptr>' ')return;
		ioptr++;
	}
}
inline int getint(){
	non_whitespace();
	int neg=0;
	if(*ioptr=='-'){
		ioptr++;
		neg=1;
	}
	int n=0;
	while(*ioptr>' ')
		n=(n<<3)+(n<<1)+*ioptr++-'0';
	ioptr++;
	if(neg)
		n=-n;
	return n;
}
#define N 110
#define inf 1000000007
int dp[N][N],a[N][N],c[N][N];
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,m,l,k,x,y,n,D;
	T=getint();
	while(T--)
	{
      D=getint(),n=getint(),m=getint();
	  for(i=0;i<m;i++)
	  for(j=0;j<n;j++)a[i][j]=getint();
	  for(i=0;i<m;i++)
	  for(j=0;j<m;j++)c[i][j]=getint();
	  for(k=0;k<m;k++)
	  for(i=0;i<m;i++)
	  for(j=0;j<m;j++)
	  c[i][j]=min(c[i][j],c[i][k]+c[k][j]);
	  for(i=0;i<m;i++)
	  dp[0][i]=a[i][0];
	  for(i=1;i<n;i++)
	  for(j=0;j<m;j++)
	  {
	   dp[i][j]=inf;
	   for(k=0;k<m;k++)
	   dp[i][j]=min(dp[i][j],dp[i-1][k]+c[k][j]);
	   dp[i][j]+=a[j][i];
	  }
	  int ans=D+1;
	  for(i=0;i<m;i++)ans=min(ans,dp[n-1][i]);
	  if(ans>D)
	  {puts("-1");continue;}
	  else
	  {
	   printf("%d\n",D-ans);
	  }
	}
	return 0;
}
