#include <cstdio>
#include <algorithm>

using namespace std;

const int maxn = 500005;

int n, q, c[maxn], prer[maxn], prec[maxn], row1[maxn], row0[maxn], col1[maxn], col0[maxn];

char foo[10];

int lowbit(int x) {
	return x & -x;
}

int query(int bit[], int x) {
	int sum = 0;
	while(x) {
		sum += bit[x];
		x -= lowbit(x);
	}
	return sum;
}

void add(int bit[], int x, int y) {
	while(x <= q) {
		bit[x] += y;
		x += lowbit(x);
	}
}

int main() {
	scanf("%d%d", &n, &q);
	for (int i = 1; i <= q; ++i) {
		scanf("%s", foo);
		int x, y;
		if (foo[0] == 'R') {
			if (foo[3] == 'Q') {
				scanf("%d", &x);
				if (prer[x] == 0 || c[prer[x]] == 0) printf("%d\n", n - (query(col1, i) - query(col1, max(prer[x] - 1, 0))));
				else printf ("%d\n", query(col0, i) - query(col0, max(prer[x] - 1, 0)));
			}
			else {
				scanf("%d%d", &x, &y);
				if (prer[x]) {
					if (c[prer[x]] == 0) add(row0, prer[x], -1);
					else add(row1, prer[x], -1);
				}
				if (y) {
					add(row1, i, 1);
					c[i] = 1;
				}
				else {
					add(row0, i, 1);
					c[i] = 0;
				}
				prer[x] = i;
			}
		}
		else {
			if (foo[3] == 'Q') {
				scanf("%d", &x);
				if (prec[x] == 0 || c[prec[x]] == 0) printf("%d\n", n - (query(row1, i) - query(row1, max(prec[x] - 1, 0))));
				else printf ("%d\n", query(row0, i) - query(row0, max(prec[x] - 1, 0)));
			}
			else {
				scanf("%d%d", &x, &y);
				if (prec[x]) {
					if (c[prec[x]] == 0) add(col0, prec[x], -1);
					else add(col1, prec[x], -1);
				}
				if (y) {
					add(col1, i, 1);
					c[i] = 1;
				}
				else {
					add(col0, i, 1);
					c[i] = 0;
				}
				prec[x] = i;
			}
		}
	}
	return 0;
}

