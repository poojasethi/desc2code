#include <iostream>
#include <stdio.h>
using namespace std;

int N, Q;
int row1[500001], row0[500001], col1[500001], col0[500001], rowtimestamp[500001][2], coltimestamp[500001][2];

void update(int *tree, int idx, int value){
	while(idx <= Q)
		tree[idx] += value, idx += (idx&-idx);
}

int read(int *tree, int idx){
	int sum = 0;
	while(idx > 0)
		sum += tree[idx], idx -= (idx&-idx);
	return sum;
}

void print(){
	int i;
	for(i=0; i<N; i++) cout<<"--"; cout<<endl;
	for(i=0; i<N; i++) cout<<read(row0,i+1)<<" "; cout<<endl;
	for(i=0; i<N; i++) cout<<read(row1,i+1)<<" "; cout<<endl;
	for(i=0; i<N; i++) cout<<read(col0,i+1)<<" "; cout<<endl;
	for(i=0; i<N; i++) cout<<read(col1,i+1)<<" "; cout<<endl;
	for(i=0; i<N; i++) cout<<"--"; cout<<endl;
		
}

int main() {
	int qno=0;
	char quest[20];
	int index, set, i;
	scanf("%d %d", &N, &Q);	
	for(i=0; i<Q; i++){
		qno++;
		int ans=0;
		scanf("%s", quest);
		if(quest[3] == 'Q'){
			scanf("%d", &index);
			int idx, s;
			if(quest[0] == 'R'){
				//cout<<"RowQuery "<<index<<endl;
				idx = rowtimestamp[index][0];	// last index in which the change is happened
				s = rowtimestamp[index][1];
				if(s==1){
					ans = read(col0,qno) - read(col0,idx);
				}else{
					ans = N - (read(col1,qno) - read(col1,idx));
				}
			}else{
				//cout<<"ColQuery "<<index<<endl;
				idx = coltimestamp[index][0];
				s = coltimestamp[index][1];
				if(s==1){
					ans = read(row0,qno) - read(row0,idx);
				}else{
					ans = N - (read(row1,qno) - read(row1,idx));
				}
			}
			printf("%d\n",ans);
		}else{
			scanf("%d %d", &index, &set);
			int idx,s;
			if(quest[0] == 'R'){
				//cout<<"RowSet "<<index<<" "<<set<<endl;
				idx = rowtimestamp[index][0];
				s = rowtimestamp[index][1];
				
				int l=rowtimestamp[index][0];
				if(rowtimestamp[index][1]==0&&l>0)
					update(row0,l,-1);
				if(rowtimestamp[index][1]==1&&l>0)
					update(row1,l,-1);
				if(set==1)
					update(row1,qno,1);
				else
					update(row0,qno,1);
				
				rowtimestamp[index][0] = qno;
				rowtimestamp[index][1] = set;
				//print();
			}else{
				//cout<<"ColSet "<<index<<" "<<set<<endl;
				idx = coltimestamp[index][0];
				s = coltimestamp[index][1];
				
				int l=coltimestamp[index][0];
				if(coltimestamp[index][1]==0&&l>0)
					update(col0,l,-1);
				if(coltimestamp[index][1]==1&&l>0)
					update(col1,l,-1);
				if(set==1)
					update(col1,qno,1);
				else
					update(col0,qno,1);
				
				coltimestamp[index][0] = qno;
				coltimestamp[index][1] = set;
				//print();
			}
		}
	}
	
	return 0;
}