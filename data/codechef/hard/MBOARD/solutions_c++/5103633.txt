#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
using namespace std;

const int N = 500000 + 10;

pair<int, int> tr[N], tc[N];
int row[2][N], col[2][N];
int n, q;

int ask(int a[N], int pos) {
	int res = 0;
	for(int i = pos; i; i ^= (i & (-i))) {
		res += a[i];
	}
	return res;
}

void modify(int a[N], int pos, int val) {
	if (pos == 0) {
		return ;
	}
	for(int i = pos; i <= q; i += (i & (-i))) {
		a[i] += val;
	}
}


int main() {
	while(scanf("%d %d", &n, &q) != EOF) {
		for(int i = 1; i <= q; i++) {
			row[0][i] = row[1][i] = col[0][i] = col[1][i] = 0;
		}
		for(int i = 1; i <= n; i++) {
			tr[i] = make_pair(0, 0);
			tc[i] = make_pair(0, 0);
		}
		
		for(int i = 1; i <= q; i++) {
			static char buffer[1000];
			scanf("%s", buffer);
			int a, b;
			if (buffer[0] == 'R') {
				if (buffer[3] == 'Q') {
					scanf("%d", &a);
					if (tr[a].second == 0) {
						printf("%d\n", n - (ask(col[1], q) - ask(col[1], tr[a].first)));
					} else {
						printf("%d\n", ask(col[0], q) - ask(col[0], tr[a].first));
					}
				} else {
					scanf("%d %d", &a, &b);
					if (tr[a].second != 0) {
						modify(row[1], tr[a].first, -1);
					} else {
						modify(row[0], tr[a].first, -1);
					}
					if (b) {
						modify(row[1], i, 1);
					} else {
						modify(row[0], i, 1);
					}
					tr[a] = make_pair(i, b);
				}
			} else {
				if (buffer[3] == 'Q') {
					scanf("%d", &a);
					if (tc[a].second == 0) {
						printf("%d\n", n - (ask(row[1], q) - ask(row[1], tc[a].first)));
					} else { 
						printf("%d\n", ask(row[0], q) - ask(row[0], tc[a].first));
					}
				} else {
					scanf("%d %d", &a, &b);
					if (tc[a].second != 0) {
						modify(col[1], tc[a].first, -1);
					} else {
						modify(col[0], tc[a].first, -1);
					}
					if (b == 1) {
						modify(col[1], i, 1);
					} else {
						modify(col[0], i, 1);
					}
					tc[a] = make_pair(i, b);
				}
			}
		}
		return 0;
	}	
	return 0;
}

