#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>

using namespace std;

/*typedef long long int64;
typedef unsigned long long uint64;*/
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
/*template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}*/
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define ll long long int
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define pi(x) printf("%d",x)
#define nl printf("\n")
#define pl(x) printf("%lld",x)
#define mmax 500005


int tr0[mmax*4],tr1[mmax*4],tc0[mmax*4],tc1[mmax*4];
int r0[mmax],r1[mmax],c0[mmax],c1[mmax];

void update(int st[],int ss,int se,int i,int amount,int index)
{
	if(i<ss||i>se)return;
	st[index]+=amount;
	if(se!=ss)
	{
		int mid=(ss+se)/2;
		update(st,ss,mid,i,amount,2*index+1);
		update(st,mid+1,se,i,amount,2*index+2);
	}
}


int query(int st[],int ss,int se,int qs,int qe,int index)
{
	if(qs<=ss&&qe>=se) return st[index];
	if(se<qs||ss>qe) return 0;
	int mid=(ss+se)/2;
	return query(st,ss,mid,qs,qe,2*index+1)+query(st,mid+1,se,qs,qe,2*index+2);
}

int main()
{
	char str[50];
	int n,m,x,y,ts=0,cn=0;
	si(n);
	si(m);
	memset(r0,0,sizeof(r0));
	memset(r1,0,sizeof(r1));
	memset(c0,0,sizeof(c0));
	memset(c1,0,sizeof(c1));
	memset(tr0,0,sizeof(tr0));
	memset(tr1,0,sizeof(tr1));
	memset(tc0,0,sizeof(tc0));
	memset(tc1,0,sizeof(tc1));
	while(cn<m)
	{
		cn++;
		scanf("%s",str);
		if(str[0]=='R'&&str[3]=='Q')
		{
			si(x);
			if(r0[x]>=r1[x])
			{
				pi(n-query(tc1,0,m+1,r0[x],ts,0));
				nl;
			}
			else if(r0[x]<r1[x])
			{
				pi(query(tc0,0,m+1,r1[x],ts,0));
				nl;
			}
		}
		else if(str[0]=='R'&&str[3]=='S')
		{
			si(x);si(y);
			ts++;
			if(r0[x]>r1[x])
			{
				update(tr0,0,m+1,r0[x],-1,0);
			}
			else if(r0[x]<r1[x])
			{
				update(tr1,0,m+1,r1[x],-1,0);
			}
			if(y==0)
			{
				r0[x]=ts;
				update(tr0,0,m+1,ts,1,0);
			}
			else 
			{
				r1[x]=ts;
				update(tr1,0,m+1,ts,1,0);
			}
			
		}
		else if(str[0]=='C'&&str[3]=='Q')
		{
			si(x);
			if(c0[x]>=c1[x])
			{
				pi(n-query(tr1,0,m+1,c0[x],ts,0));
				nl;
			}
			else if(c0[x]<c1[x])
			{
				pi(query(tr0,0,m+1,c1[x],ts,0));
				nl;
			}
		}
		else if(str[0]=='C'&&str[3]=='S')
		{
			si(x);si(y);
			ts++;
			if(c0[x]>c1[x])
			{
				update(tc0,0,m+1,c0[x],-1,0);
			}
			else if(c0[x]<c1[x])
			{
				update(tc1,0,m+1,c1[x],-1,0);
			}
			if(y==0)
			{
				c0[x]=ts;
				update(tc0,0,m+1,ts,1,0);
			}
			else 
			{
				c1[x]=ts;
				update(tc1,0,m+1,ts,1,0);
			}
		}
	}	
}