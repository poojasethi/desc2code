#include<bits/stdc++.h>
#define mod 1000000007
#define ll int
#define big 100000000000000000
using namespace std;

ll bitr0[500010]={0},bitr1[500010]={0},bitc0[500010]={0},bitc1[500010]={0},n,q,in,timr[500010][2],timc[500010][2],x;
char str[15];

ll query(ll bit[],ll in){
	ll sum = 0;
	while(in > 0){
		sum += bit[in];
		in = in - (in & (-in));
	}
	return sum;
}
void update(ll bit[],ll in,ll x){
	while(in <= q){
		bit[in] += int(x);
		in = in + (in & (-in));
	}
}
int main(){
//	freopen("input.txt","r",stdin);
//	ios::sync_with_stdio(0);
	
	ll i,j;
	
	scanf("%d%d\n",&n,&q);
	for(i=1;i<=n;i++){
		timr[i][0]=timr[i][1]=timc[i][0]=timc[i][1] = 0;
	}
	for(j=1;j<=q;j++){
		scanf("%s",str);
		if(!strcmp(str,"RowQuery")){
			scanf("%d\n",&in);
			if(timr[in][1]){
				printf("%d\n",query(bitc0,j)-query(bitc0,timr[in][0]));
			}
			else{
				printf("%d\n",n-(query(bitc1,j)-query(bitc1,timr[in][0])));
			}
		}
		else if(!strcmp(str,"ColQuery")){
			scanf("%d\n",&in);
			if(timc[in][1]){
				printf("%d\n",query(bitr0,j)-query(bitr0,timc[in][0]));
			}
			else{
				printf("%d\n",n-(query(bitr1,j)-query(bitr1,timc[in][0])));
			}
		}
		else if(!strcmp(str,"RowSet")){
			scanf("%d%d\n",&in,&x);
			if(timr[in][0]){
				if(timr[in][1]){
					update(bitr1,timr[in][0],-1);
				}
				else{
					update(bitr0,timr[in][0],-1);
				}
			}
			timr[in][0] = j;
			timr[in][1] = x;
			if(x){
				update(bitr1,j,1);
			}
			else{
				update(bitr0,j,1);
			}
		}
		else{
			scanf("%d%d\n",&in,&x);
			if(timc[in][0]){
				if(timc[in][1]){
					update(bitc1,timc[in][0],-1);
				}
				else{
					update(bitc0,timc[in][0],-1);
				}
			}
			timc[in][0] = j;
			timc[in][1] = x;
			if(x){
				update(bitc1,j,1);
			}
			else{
				update(bitc0,j,1);
			}
		}
		/*
		for(i=1;i<=q;i++)
			printf("%d ",bitr0[i]);
		printf("\n");
		for(i=1;i<=q;i++)
			printf("%d ",bitr1[i]);
		printf("\n");
		for(i=1;i<=q;i++)
			printf("%d ",bitc0[i]);
		printf("\n");
		for(i=1;i<=q;i++)
			printf("%d ",bitc1[i]);
		printf("\n\n");*/
	}
	return 0;
}
