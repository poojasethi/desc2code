#include <stdio.h>
#include <iostream>
#include <string>
#include <string.h>
#include <algorithm>
#include <stdlib.h>
#include <vector>
#include <set>
#include <map>
#include <math.h>
#include <queue>
using namespace std;

#define CLR(x,y) memset(x,y,sizeof(x));
#define FOR(i,x,y) for(int i = (x) ; i < (y) ; ++i)
#define PB push_back
#define MP make_pair
#define INF 1000000007
const double EPS = 1e-8;
const int TMS = 100;
typedef long long LL;
int limit;

const int N = 500000+5;
int n,q;
char buf[20];
int lastr[2][N],lastc[2][N];
pair<int,int> prer[N],prec[N];

void add(int a[],int x,int val){
    if(x <= 0)return;
    for(int i = x ; i <= limit ; i += i & (-i)){
        a[i] += val;
    }
}
int sum(int a[],int x){
    int ans = 0;
    for(int i = x; i >= 1; i -= i & (-i)){
        ans += a[i];
    }
    return ans;
}
int gao(int a[],int l,int r){
    return sum(a,r) - sum(a, l);
}

int main()
{
    while(~scanf("%d%d",&n,&q)){
        CLR(lastr,0);
        CLR(lastc,0);
        CLR(prer,0);
        CLR(prec,0);
        int t = 0;
        limit = q;
        while(q--){
            t ++;
            scanf("%s",buf);
            string str = buf;
            if(str == "RowQuery"){
                int x;
                scanf("%d",&x);
                int ans;
                int pt = prer[x].first;
                int one = gao(lastc[1],pt,t);
                int zero = gao(lastc[0],pt,t);
                if(prer[x].second == 0){
                    ans = n - one;
                }else{
                    ans = zero;
                }
                printf("%d\n",ans);
            }else if(str == "ColQuery"){
                int x;
                scanf("%d",&x);
                int ans;
                int pt = prec[x].first;
               // cout << pt << " " << t << "!" << endl;
                int one = gao(lastr[1],pt,t);
                int zero = gao(lastr[0],pt,t);
                if(prec[x].second == 0){
                    ans = n - one;
                }else{
                    ans = zero;
                }
                printf("%d\n",ans);
            }else if(str == "ColSet"){
                int x,v;
                scanf("%d%d",&x,&v);
                add(lastc[v],t,1);
                add(lastc[prec[x].second],prec[x].first,-1);
                prec[x] = MP(t,v);
            }else if(str == "RowSet"){
                int x,v;
                scanf("%d%d",&x,&v);
                add(lastr[v],t,1);
                add(lastr[prer[x].second],prer[x].first,-1);
                prer[x] = MP(t,v);
            }
        }
    }
    return 0;
}

/*
 
 3 100
 RowSet 1 1
 ColSet 1 1
 ColSet 3 0
 RowQuery 1

*/
