#include<iostream>
#include<cstdio>
#include<cstring>

using namespace std;

    char que[15];
    int row[500002][2],col[500002][2];
    int rstamp[500002][2],cstamp[500002][2];


int readIt(int BIT[][2],int col,int idx) {

    int sum=0;
    while(idx>0) {
            sum +=BIT[idx][col];
            idx -=(idx & -idx);
    }
        return sum;
}

void deleteIt(int BIT[][2],int col,int sz,int idx) {

    while(idx<=sz) {

        BIT[idx][col]--; idx +=(idx & -idx);
    }

}

void addIt(int BIT[][2],int col,int sz,int idx) {

    while(idx<=sz) {

        BIT[idx][col]++; idx +=(idx & -idx);
    }

}



int main() {

    int N,Q;
    int r,c,val,time;

    scanf("%d %d",&N,&Q);

    for (int i=1;i<=Q;i++){

        scanf("%s",que);



        if(que[0]=='R') {

                if(que[3]=='Q') {   //Query Encountered
                    scanf("%d",&r);

                    time=rstamp[r][1]; val=rstamp[r][0];
                     int ans;
                    if(val==1) {
                                //since row was set 1 so we need to count no of ColSet0 from that time
                        printf("%d\n",readIt(col,0,Q)-readIt(col,0,time));

                    }
                    else if(val==0) {
                               // row set 0 so need to count colSet1 n subtract it from N to get #0
                        printf("%d\n",N-(readIt(col,1,Q)-readIt(col,1,time)));
                       // ans=N-ans;

                    }

                       // printf("%d\n",ans);

                }
                else if(que[3]=='S') {

                    scanf("%d %d",&r,&val);

                    int oldTime=rstamp[r][1]; int oldVal=rstamp[r][0]; time=i;

                    if(oldTime) {

                    if(oldVal==1)
                            deleteIt(row,1,Q,oldTime);   //previously 1 was set
                    else
                            deleteIt(row,0,Q,oldTime);   //previously 0 was set
                    }

                    if(val==1)
                            addIt(row,1,Q,time);
                    else
                            addIt(row,0,Q,time);

                    rstamp[r][1]=time;  rstamp[r][0]=val;

                }


        }   //if Row
        else if(que[0]=='C') {

                     if(que[3]=='Q') {   //Query Encountered
                            scanf("%d",&c);

                        time=cstamp[c][1]; val=cstamp[c][0];
                        int ans;
                        if(val==1) {
                                //since col was set 1 so we need to count no of RowSet0 from that time
                            printf("%d\n",readIt(row,0,Q)-readIt(row,0,time));

                        }
                        else if(val==0) {
                               // col was set 0 so need to count RowSet1 n subtract it from N to get #0
                            printf("%d\n",N-(readIt(row,1,Q)-readIt(row,1,time)));
                            //ans=N-ans;

                        }

                            //printf("%d\n",ans);

                    }
                    else if(que[3]=='S') {

                        scanf("%d %d",&c,&val);

                        int oldTime=cstamp[c][1]; int oldVal=cstamp[c][0]; time=i;

                        if(oldTime) {

                        if(oldVal==1)
                                deleteIt(col,1,Q,oldTime);   //previously 1 was set
                        else
                                deleteIt(col,0,Q,oldTime);   //previously 0 was set

                        }

                        if(val==1)
                                addIt(col,1,Q,time);
                        else
                                addIt(col,0,Q,time);


                            cstamp[c][1]=time;  cstamp[c][0]=val;

                    }



        }//if Column

    }


    return 0;
}
