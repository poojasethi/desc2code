#include <iostream>
#include <stdio.h>
#include <set>
#define maxn 500007
using namespace std;

int row[2][maxn],col[2][maxn];
int ctr[2][maxn],ctc[2][maxn];
int n,q,foo,bar,val,tp,pt;

int lowbit(int x){return x&(-x);}
void updater(int pos, bool i){for(;pos<=q;pos+=lowbit(pos)) ctr[i][pos]++;}
void updatec(int pos, bool i){for(;pos<=q;pos+=lowbit(pos)) ctc[i][pos]++;}
void updatern(int pos, bool i){for(;pos<=q;pos+=lowbit(pos)) ctr[i][pos]--;}
void updatecn(int pos, bool i){for(;pos<=q;pos+=lowbit(pos)) ctc[i][pos]--;}
int queryr(int pos, bool i){for(val=0;pos>=1;pos-=lowbit(pos)) val+=ctr[i][pos];return val;}
int queryc(int pos, bool i){for(val=0;pos>=1;pos-=lowbit(pos)) val+=ctc[i][pos];return val;}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("I.in","r",stdin);
	#endif
		
	char c[10];
	scanf("%d%d",&n,&q);
	for(int i=1;i<=q;i++)
	{
		scanf("%s",c);
		scanf("%d",&foo);
		if(c[0]=='R')
		{
			if(c[3]=='S')
			{
				scanf("%d",&bar);
				tp=row[0][foo],pt=row[1][foo];
				if(tp>pt) updatern(tp,0);
				else if(pt>tp) updatern(pt,1);
				row[bar][foo]=i;
				updater(i,bar);
			}
			else 
			{
				tp=row[0][foo],pt=row[1][foo];
				if(tp>=pt) printf("%d\n",n-(queryc(i,1)-queryc(tp,1)));
				else printf("%d\n",queryc(i,0)-queryc(pt-1,0));
			}
		}
		if(c[0]=='C')
		{
			if(c[3]=='S')
			{
				scanf("%d",&bar);
				tp=col[0][foo],pt=col[1][foo];
				if(tp>pt) updatecn(tp,0);
				else if(pt>tp) updatecn(pt,1);
				col[bar][foo]=i;
				updatec(i,bar);
			}
			else
			{
				tp=col[0][foo],pt=col[1][foo];
				if(tp>=pt) printf("%d\n",n-(queryr(i,1)-queryr(tp,1)));
				else printf("%d\n",queryr(i,0)-queryr(pt-1,0));
			}
		}
	}
	return 0;
}