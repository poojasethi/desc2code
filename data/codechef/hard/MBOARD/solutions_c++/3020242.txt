#include <stdio.h>
#include <string.h>
#include <iostream>
#include <vector>
#include <set>
#include <algorithm>
#define ll long long int
#define pb push_back
#define DISP(a,n)  for(ll i=0;i<n;i++)              cerr<<#a<<"["<<i<<"] ="<<a[i]<<endl;  cerr<<endl;
using namespace std;
const ll maxn=500005;
ll rowv[maxn],colv[maxn],rowT0[maxn],colT0[maxn],rowT1[maxn],colT1[maxn],row[maxn],col[maxn];
ll read(ll tree[],ll idx){
	ll sum = 0;
	while (idx > 0){
		sum += tree[idx];
		idx -= (idx & -idx);
	}
	return sum;
}
void update(ll tree[],ll idx ,ll val){
	while (idx <= maxn){
		tree[idx] += val;
		idx += (idx & -idx);
	}
}

int main()
{
   // freopen("input.txt","r",stdin);
    memset(rowv,0,sizeof(rowv));
    memset(colv,0,sizeof(colv));
    memset(rowT0,0,sizeof(rowT0));
    memset(rowT1,0,sizeof(rowT1));
    memset(colT0,0,sizeof(colT0));
    memset(colT1,0,sizeof(colT1));
    memset(row,0,sizeof(row));
    memset(col,0,sizeof(col));
    char s[12];
    ll i,x,n,q;
    scanf("%lld%lld",&n,&q);
    for(ll j=1;j<=q;j++)
    {
        scanf("%s",s);
       // cout<<s;
        if(strcmp(s,"RowQuery")==0)
        {
            scanf("%lld",&x);
            if(row[x]==0)
            {
                printf("%lld\n",(n-read(colT1,j)));
            }
            else if(rowv[x]==0)
            {
                printf("%lld\n",(n-read(colT1,j) + read(colT1,row[x])));
            }
            else
            {
                printf("%lld\n",(read(colT0,j) - read(colT0,row[x])));
            }
        }
        if(strcmp(s,"ColQuery")==0)
        {
            scanf("%lld",&x);
            if(col[x]==0)
            {
                printf("%lld\n",(n-read(rowT1,j)));
            }
            else if(colv[x]==0)
            {
                printf("%lld\n",(n- read(rowT1,j) + read(rowT1,col[x])));
            }
            else
            {
                printf("%lld\n",(read(rowT0,j) - read(rowT0,col[x])));
            }
        }
        if(strcmp(s,"RowSet")==0)
        {
            scanf("%lld%lld",&i,&x);
           if(rowv[i]==0&&row[i]!=0)
            {
                update(rowT0,row[i],-1);
            }
            else if(row[i]!=0)
            {
                update(rowT1,row[i],-1);
            }
            if(x==0)
            {
                update(rowT0,j,1);
            }
            else
            {
                update(rowT1,j,1);
            }
            row[i]=j;rowv[i]=x;
        }
        if(strcmp(s,"ColSet")==0)
        {
            scanf("%lld%lld",&i,&x);
           if(colv[i]==0&&col[i]!=0)
            {
                update(colT0,col[i],-1);
            }
            else if(col[i]!=0)
            {
                update(colT1,col[i],-1);
            }
            if(x==0)
            {
                update(colT0,j,1);
            }
            else
            {
                update(colT1,j,1);
            }
            col[i]=j;colv[i]=x;
        }
      /*  cout<<"j= "<<j<<endl;
        DISP(row,n+1);
        DISP(col,n+1);
        DISP(rowv,n+1);
        DISP(colv,n+1);
        DISP(rowT0,q+1);
        DISP(rowT1,q+1);
        DISP(colT0,q+1);
        DISP(colT1,q+1);*/
    }
    return 0;
}
