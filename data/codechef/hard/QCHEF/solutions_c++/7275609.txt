#include<cstdio>
#include<algorithm>
#include<vector>
#define PII pair<int,int>
#define f first
#define s second
#define VI vector<int>
#define LL long long
#define MP make_pair
#define PB push_back
#define ALL(V) V.begin(),V.end()
#define FOR(x, b, e)  for(int x=b;x<=(e);x++)
#define REP(x, n)     for(int x=0;x<(n);x++)
#define mini(a,b) a=min(a,b)
#define maxi(a,b) a=max(a,b)
using namespace std;
int n,a,b,c,d,k,m,q,z,t;
const int MXN=110000, MAGIC=300;
vector<pair<PII,int> > que[MXN/MAGIC];
bool cmp(pair<PII,int> a,pair<PII,int> b)
{
  return a.f.s<b.f.s;
}
VI D[MXN];
int mxd[MXN], mind[MXN], ans[MXN], in[MXN];
int brutem(int a,int b)
  {
  int ret=0;
  FOR(i,a,b)
    {
    if(D[in[i]].size()==0) D[in[i]].PB(i);
    maxi(ret,i-D[in[i]][0]);
    }
  FOR(i,a,b)  D[in[i]].clear();
  return ret;
  }
main()
{
scanf("%d%d%d",&n,&m,&k);
FOR(i,1,n) scanf("%d",&in[i]);  
FOR(i,1,k)
  {
  scanf("%d%d",&a,&b);
  if(b-a+1<=MAGIC)  ans[i]=brutem(a,b);    
  else que[a/MAGIC].PB(MP(MP(a,b),i));
  }
FOR(i,0,n/MAGIC)
  {
  if(que[i].size()==0)continue;
  FOR(j,1,m)  mxd[j]=0, mind[j]=1e9;
  sort(ALL(que[i]),cmp);
  int poc=(i+1)*MAGIC, kon=poc-1, wynig=0;
  REP(j,que[i].size())
    {
    int a=que[i][j].f.f, b=que[i][j].f.s, id=que[i][j].s;
    while(kon<b)
      {
      kon++;
      mxd[in[kon]]=kon;
      mini(mind[in[kon]],kon);
      maxi(wynig,mxd[in[kon]]-mind[in[kon]]);
      }
    if(poc>b)
      {
      puts("BLAD poc>b");
      return 0;
      }
    int pomw=wynig;
    if(a<poc)maxi(pomw,brutem(a,poc));
    while(a<poc) poc--, maxi(pomw,mxd[in[poc]]-poc);
    ans[id]=pomw, poc=(i+1)*MAGIC;
    }
  }
FOR(i,1,k) printf("%d\n",ans[i]);
}