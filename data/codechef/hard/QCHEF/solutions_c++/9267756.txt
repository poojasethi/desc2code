#include<bits/stdc++.h>
#define sl(a) scanf("%lld",&a)
#define pl(a) printf("%lld\n",a)
#define ll long long
using namespace std;

ll n,m,k,arr[100005],ans[100005],fir[100005],vis[100005],las[100005],siz;
vector<pair<ll,pair<ll,ll> > > vec;

struct nod
{
    ll a,b,ind;
}obj[100005];

bool cmp(nod aa,nod bb)
{
    if(aa.a/siz!=bb.a/siz)
        return aa.a/siz<bb.a/siz;
    
    return aa.b<bb.b;                      
}

ll add(ll v)
{
    if(fir[arr[v]]>v)
        fir[arr[v]]=v;

    if(las[arr[v]]<v)
        las[arr[v]]=v;

    if(las[arr[v]]>fir[arr[v]])
        return las[arr[v]]-fir[arr[v]];
    return 0;
}

int main()
{
    cin>>n>>m>>k;
    siz=300;
    // m=50001;

    for (int i = 0; i < n; ++i)
        sl(arr[i]);

    // for (int i = 1; i < n; ++i)
        // arr[i]+=arr[i-1];

    for (int i = 0; i < m+1; ++i)
        vis[i]=-1;

    for (int i = 0; i < k; ++i)
    {
        sl(obj[i].a);
        sl(obj[i].b);
        obj[i].a--;
        obj[i].b--;
        obj[i].ind=i;
    }

    sort(obj,obj+k,cmp);
    ll x=0;

    for (int b = 0; b*siz <= n; ++b)
    {
        for (int i = 0; i <= m; ++i)
        {
            fir[i]=n+1;
            las[i]=-1;
        }

        ll end=(b+1)*siz-1;
        ll curr=end+1;
        ll fin=0;

        while((x<k)&&(obj[x].a<=end))
        {
            while(curr<=obj[x].b)
                fin=max(add(curr++),fin);

            ll tempans=fin;
            ll po=obj[x].a;
            vec.clear();

            while(po<=min(obj[x].b,end))
            {
                if(vis[arr[po]]!=x)
                {
                    vis[arr[po]]=x;
                    vec.push_back(make_pair(arr[po],make_pair(fir[arr[po]],las[arr[po]])));
                }

                tempans=max(add(po++),tempans);
            }

            ans[obj[x].ind]=tempans;
            
            for (int i = 0; i < (int)vec.size(); ++i)
            {
                ll yu=vec[i].first;
                fir[yu]=vec[i].second.first;
                las[yu]=vec[i].second.second;
            }
            x++;
        }
    }

    for (int i = 0; i < k; ++i)
        pl(ans[i]);

    return 0;
}