using namespace std;
#include <bits/stdc++.h>
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define wl(n) while(n--)
#define ll long long
#define P(x) printf("%d\n",x)
#define PB push_back
#define MP make_pair
#define fl(i,n) for(i=0;i<n;i++)
#define fil(i,a,n) for(i=a;i<n;i++)
#define rev(i,a,n) for(i=n-1;i>=a;i--)
#define mem(a,i) memset(a,i,sizeof(a))
#define F first
#define S1 second
typedef pair<int,int> P;
vector<int> v;
pair<int,int> p1;
#define MOD 1000000007
#define debug(x)  printf("####%d####\n",x);
#define nl printf("\n");
#define str string
int a[1234567];
#define blocks 355
int ans=0;
vector<pair<pair<int,int>,int> > v1;
bool cmp(pair<pair<int,int>,int> p1,pair<pair<int,int>,int> p2)
{
    if(p1.first.first/blocks!=p2.first.first/blocks)
        return (p1.first.first/blocks<p2.first.first/blocks);
    return p1.first.second<p2.first.second;
}
int sol[100041],mark[100015][3];
void insert(int ele,int ind , int min_val)
{
    if(mark[ele][1]<min_val)
        mark[ele][1]=ind;
    mark[ele][2]=ind;
    ans=max(ans,mark[ele][2]-mark[ele][1]);
}
int main()
{
    int i,j,k,l,m,n;
    S2(n,l);
    S(m);
    fl(i,n)
    S(a[i]);
    mem(mark,-1);
    //fl(i,n+1)
    //cout<<a[i]<<" ";
    //nl;
    fl(i,m)
    {
        int l,r;
        S2(l,r);
        l--;
        r--;
        v1.push_back(MP(MP(l,r),i));
    }
    sort(v1.begin(),v1.end(),cmp);
    i=0;
    for(int b=0;b*blocks<=n;b++)
    {
        //cout<<"here\n";
        int begin=blocks*b;
        int end=(blocks)*(b+1)-1;
        int right=end+1;
        ans=0;
        //cout<<"here2\n"<<i<<" "<<end<<" "<<v1[i].first.first<<"\n";
        while(i<m&&v1[i].first.first<=end)
        {
            //cout<<"here3\n";
            int tempans=0;
            int p=v1[i].first.first;
            int q=v1[i].first.second;
            int r=v1[i].second;
            //cout<<p<<" "<<q<<" "<<r<<" ";
            for(;right<=q;right++)
            {
                //cout<<"never\n";
                insert(a[right],right,end+1);
            }
            //cout<<ans<<"\n";
            for(j=min(q,end);j>=p;j--)
            {
                //cout<<a[j]<<" ";
                if(mark[a[j]][2]>end&&mark[a[j]][2]<=q)
                tempans=max(tempans,mark[a[j]][2]-j);
                else
                {
                    if(mark[a[j]][0]>j&&mark[a[j]][0]<=min(end,q))
                    tempans=max(tempans,mark[a[j]][0]-j);
                    else
                    mark[a[j]][0]=j;
                }
            }
            sol[r]=max(ans,tempans);
            i++;
            //nl;
        }
        
    }
    fl(i,m)
    P(sol[i]);
    return 0;

}