#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define cls ios_base::sync_with_stdio(false); cin.tie(NULL)
#define N  100001

vector < vector <long long> > a;
vector < vector <long long> > d;
vector < vector <long long> > dp;
ll mins[N];

int main(){
    cls;
    int t;
    cin >> t;
    while(t--){
        ll n,m;
        a.clear();
        d.clear();
        dp.clear();
        cin >> n >> m;
        a.resize(n); d.resize(n); dp.resize(n);
        for(ll i = 0; i < n; i++){
            a[i].resize(m); d[i].resize(m); dp[i].resize(m);
        }
        for(ll i = 0; i < n; i++){
            for(ll j = 0; j < m; j++) cin >> a[i][j];
        }
        for(ll i = 0; i < n; i++){
            for(ll j = 0; j < m; j++) cin >> d[i][j];
        }
        for(ll i = 0; i < n; i++){
            for(ll j = 0; j < m; j++) dp[i][j] = LONG_LONG_MAX;
        }

        for(ll i = 0; i < n; i++) mins[i] = LONG_LONG_MAX;

        for(ll j = 0; j < m; j++){
            dp[0][j] = a[0][j];
            if(dp[0][j] < mins[0]) mins[0] = dp[0][j];
        }

        //dp[0][0] = 0;
        //cout << mins[0] << endl;

        for(ll i = 1; i < n; i++){

            for(ll j = 0; j < m; j++){
                ll x = a[i][j] - d[i-1][j];
                if(x < 0) x = 0;
                dp[i][j] = min(x + dp[i-1][j], a[i][j] + mins[i-1]);
                if(dp[i][j] < mins[i]) mins[i] = dp[i][j];
                //cout << (a[i][j] - d[i-1][j]) + dp[i-1][j]<< " " << a[i][j] + mins[i-1] << endl;
            }
        }
        cout << mins[n-1] << endl;
    }
}
