/*

    Harsh Vardhan :)

*/

#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<vector>
#include<set>
#include<map>
#include<iomanip>
#include<cstring>
#include<queue>
#include<stack>
#include<limits>

using namespace std;

#define MAX 111111
#define gi(n) scanf("%d",&n)
#define gl(n) scanf("%lld",&n)
#define pi(n) printf("%d\n",n)
#define pl(n) printf("%lld\n",n)
#define all(c) c.begin(), c.end()
#define M_PI 3.14159265358979323846
#define tr(v, it) for(typeof(v.begin()) it = v.begin(); it != v.end(); it++)
#define mp make_pair
#define F first
#define S second
 
typedef long long LL;
const int mod=1000000007;
 
LL fac[27];
LL inv[27];
 
LL powerMod(LL b, LL p, int d)
{
	LL l=1;
	while(p)
	{
		if(p & 1) l=l*b%d;
		b=b*b%d;
		p>>=1;
	}
	return l;
}
 
int main()
{
	int h, i, t;
	fac[0]=inv[1]=1;
	for(i=1;i<27;i++)
	{
		fac[i]=fac[i-1]*i%mod;
	}
	inv[1]=1;
	for(i=2;i<27;i++)
	{
		inv[i]=inv[mod%i]*(mod - mod/i)%mod;
	}
	scanf("%d", &t);
	for(h=0;h<t;h++)
	{
		LL ans=0, n, k;
		gl(n);gl(k);
		if(k>1)
		{
			LL n0=powerMod(k,n,mod);
			LL n1=n0*k%mod;
			LL d1=inv[k-1];
			LL d2=d1*d1%mod;
			LL T=k*(n0-1)%mod*d1%mod;
			LL s2=((n*n1%mod*d1%mod)-(T*d1%mod))%mod;
			LL s5=(s2*T+s2)%mod;
			LL s6=((n1*T%mod*d2%mod)+(n*n%mod*n1%mod*d1%mod)-(4*n*n1%mod*d2%mod)+(T*(3*d2+d1)%mod))%mod;
			LL s7=T*T%mod;
			ans=((s7*T%mod)-s5*6+s6*3+s7*3+T*2)%mod;
			if(ans<0) ans+=mod;
		}
		pl(ans);
	}
	return 0;
}