#include<iostream>
#include<cmath>
#include<cstring>
#include<ctype.h>
#include<algorithm>
using namespace std;
const int N=100010,p=1000000007;
int pow(int a,int b,int c)
{
	int d=1;
	while (b)
	{
		if (b&1)
            d=1LL*d*a%c;
		b>>=1;
		a=1LL*a*a%c;
	}
	return d;
}
int main()
{
    int n,t,k,out;
    int K[N],KS[N];
	cin>>t;
	while (t--)
	{
		cin>>n>>k;
		int k2=pow(k-1,p-2,p),inv2=(p+1)/2;
		int K=pow(k,n,p);
		int A=(1LL*K*k%p-k)*k2%p;
		int B=(1LL*K*k%p*n%p-A)*k2%p;
		int C=(1LL*K*k%p*n%p*n%p-2LL*B+A)*k2%p;
		out=0;
		out=(out+1LL*A*A%p*A-3LL*C-A)%p;
		out=(out-6LL*K*k%p*k2%p*k2%p*(1LL*n*K%p*k%p-2LL*A+n))%p;
		out=(out+6LL*K*k%p*k2%p*n%p*(n+1)%p*inv2%p)%p;
		out=(out-6LL*k2*B)%p;
		out=(out+3LL*K*(1LL*(n+1)*A%p-B)%p)%p;
		out=(out-3LL*K*k2%p*(1LL*(n+1)*A%p-B)%p)%p;
		out=(out+6LL*k2*K%p*k%p*n%p*(n+1)%p*inv2)%p;
		out=(out-3LL*k2%p*k%p*B)%p;
		out=(out+p)%p;
		cout<<out<<"\n";
	}
	return 0;
}
