
You are given a tree consisting of n nodes numbered from 1 to n. The weights of edges of the tree can be any binary integer satisfying following Q conditions.


		Each condition is of form u, v, x where u, v are nodes of the tree and x is a binary number. 
		For satisfying this condition,  sum of the weight of all the edges present in the path from node u to v of the tree, should have even if x = 0, odd otherwise.
	


Now, you have to find out number of ways of assigning 0/1 (binary) weights to the edges of the tree satisfying the above conditions.
As the answer could be quite large, print your answer modulo 10^9 + 7.


Input

The first line of input contains a single integer T denoting number of test cases.
For each test case:

First line contains two space separated integers n, Q.
Each of the next n - 1 lines will contain two space separated integer  u, v denoting that there is an edge between vertex u and v in the tree.
Each of the next Q lines will contain three space separated integer  u, v, x denoting a condition as stated in the probelm.




Output

For each test case, output a single integer corresponding to the answer of the problem.


Constraints

1 ≤ u, v ≤ n
0 ≤ x ≤ 1


Example
Input:
3
3 2
1 2
1 3
1 2 0
1 3 0
3 0
1 2
2 3
3 1
1 2
2 3
1 2 1

Output:
1
4
2

Explanation
In the first example,
You can only set the weight of each edge equal to 0 for satisfying the given condition. So, there is exactly one way of doing this. Hence answer is 1.

In the second example,
There are two edges and there is no condition on the edges. So, you can assign them in 4 ways.

In the third example,
You have to assign the weight of edge between node 1 and 2 to 1. You can assign the remaining edge from 2 to 3 either 0 or 1. So, the answer is 2.

