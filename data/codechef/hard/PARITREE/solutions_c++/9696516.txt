#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pair<int , int> >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcount(x)
#define print(A,j,k) for(int ii=j;ii<=k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int N = 1e6 + 5;
const int MOD = 1e9 + 7;

int vis[N];
vii V[N] , G[N];

void dfs(int u , int cc) {
	vis[u] = cc;
	rep(i , V[u].size()) {
		int v = V[u][i];
		if (vis[v] == 0)
			dfs(v , cc);
	}
}

ll fpow(ll a , ll b) {
	if (b == 0)
		return 1;

	ll res = fpow((a * a) % MOD , b / 2);
	if (b % 2)
		res = (res * a) % MOD;
	return res;
}

bool bipartite;
int color[N];

int reverse(int x) {
	if (x == 2)
		return 3;
	return 2;
}

void Color(int node) {
	vis[node] = 1;
	rep(i , G[node].size()) {
		int v = G[node][i];
		if (color[v] != -1 && color[v] == color[node]) {
			bipartite = false;
			return;
		}
		if (vis[v] == 0) {
			color[v] = reverse(color[node]);
			Color(v);
		}
	}
}

int main(int argc, char const *argv[])
{
	fast;

	// FILE;

	CASES {
		int n , q;
		cin >> n >> q;
		rep(i , n - 1) {
			int x , y;
			cin >> x >> y;
		}

		vpii W;

		frep(i , 0 , n + 5) {
			vis[i] = 0;
			color[i] = -1;
			V[i].clear();
			G[i].clear();
		}

		while (q--) {
			int a , b , c;
			cin >> a >> b >> c;
			if (c == 0) {
				V[a].pb(b);
				V[b].pb(a);
			}
			else
				W.pb(mp(a , b));
		}

		int cc = 0;
		frep(i , 1 , n) {
			if (vis[i] == 0) {
				++cc;
				dfs(i , cc);
			}
		}

		ll ans = 0;
		bool f = true;

		rep(i , W.size()) {
			int x = vis[W[i].ff];
			int y = vis[W[i].ss];
			if (x == y) {
				f = false;
				break;
			}
			else {
				G[x].pb(y);
				G[y].pb(x);
			}
		}

		if (!f) {
			cout << "0\n";
			continue;
		}

		frep(i , 1 , cc )
			vis[i] = 0;

		ans = 0;
		bipartite = true;
		frep(i , 1 , cc ) {
			if (color[i] == -1) {
				color[i] = 3;
				Color(i);
				if (!bipartite) {
					f = false;
					break;
				}
				ans++;
			}
		}

		if (!f) {
			cout << "0\n";
			continue;
		}
		else {
			if (ans)
				cout << fpow(2 , ans - 1) << '\n';
			else
				cout << 1 << '\n';
		}

	}
	return 0;
}