    #include <bits/stdc++.h>
    using namespace std;
    #define MOD  1000000007
    vector < pair<int,int> > adj[100010];
    int mark[100010];
    int val0[100010];
    typedef long long ll;

    int dfs0(int u,int x)
    {
    	mark[u] = 1;
    	val0[u] = x;
    	int flag = 1;
    	int sz = adj[u].size();
    	for(int j = 0 ; j<sz ; j++)
    	{
    		int v = adj[u][j].first;
    		if(mark[v] == 0)
    		{
    			if(dfs0(v,x^adj[u][j].second) == 0) flag = 0;
    		}
    		else
    		{
    			if((val0[u]^val0[v]) != adj[u][j].second) flag = 0;
    		}
    	}
    	return flag;
    }
    int main()
    {
    	int t;
    	cin>>t;
    	int n,q,u,v,x;


    	while(t--)
    	{
    		cin>>n>>q;

    		for(int i = 1 ; i<=n ; i++)
    		{
    			adj[i].clear();
    			mark[i] = 0;
    			val0[i] = -1;
    		}

    		for(int i = 1 ; i<n ; i++)
    		{
    			cin>>u>>v;
    		}
    		for(int i = 1 ; i<=q ; i++)
    		{
    			cin>>u>>v>>x;
    			adj[u].push_back(make_pair(v,x));
    			adj[v].push_back(make_pair(u,x));
    		}
            //find connected components
    		ll ans0 = 1;
    		for(int i = 1 ; i<=n ; i++)
    		{
    			if(mark[i] == 0)
    			{
    				int temp = dfs0(i,0);
    				if(i > 1)
    				   ans0  = (1ll*ans0*(temp+temp))%MOD;
    				else
    				   ans0  = (1ll*ans0*temp)%MOD;
    			}
    		}
    		printf("%lld\n",ans0);
    	}
    	return 0;
    }
