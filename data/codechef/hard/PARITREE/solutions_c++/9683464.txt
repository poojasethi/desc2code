#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int T,n,m,x,y,z,sum,ans;
bool flag;
bool vis[200005];
const int mod=1e9+7;
int num,b[200005],a[400005],col[200005],nxt[400004];
int cost[400006];

void dfs(int x,int c)
{
    vis[x]=true;col[x]=c;
    for (int i=b[x];i!=0;i=nxt[i])
    {
        int y=a[i];
        int dq=c^cost[i];
        if (vis[y])
        {
            if (col[y]!=dq) flag=false;
        }
        else
        {
            dfs(y,dq);
        }
    }
}
void add(int x,int y,int w)
{
    ++num;a[num]=y;nxt[num]=b[x];b[x]=num;cost[num]=w;
}

int main()

{
    scanf("%d",&T);
    while (T--)
    {
        num=0;
        memset(b,0,sizeof(b));
        scanf("%d%d",&n,&m);
        for (int i=1;i<n;++i) scanf("%d%d",&x,&y);
        for (int i=1;i<=m;++i)
        {
            scanf("%d%d%d",&x,&y,&z);
            add(x,y,z);
            add(y,x,z);
        }
        sum=0;flag=true;
        memset(vis,false,sizeof(vis));
        for (int i=1;i<=n;++i)
        {
            if (vis[i]) continue;
            sum++;
            dfs(i,0);
        }
        if (!flag) ans=0;else ans=1;
        for (int i=1;i<sum;++i) ans=ans*2%mod;
        printf("%d\n",ans);
    }

    return 0;

}