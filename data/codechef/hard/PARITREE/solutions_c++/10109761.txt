#include <bits/stdc++.h>
 
using namespace std;
 
typedef long long ll;
typedef pair<ll,ll> pll;
typedef map<ll,ll> mll;
typedef vector<ll,ll> vll;
typedef set<ll> sll;
typedef stack<ll> stll;
typedef stack< pair<ll,ll> > stpll;
typedef map<ll,pair<ll,ll> > mllpll;
typedef vector< pair<ll,ll> > vpll;
#define mk make_pair 
#define pb push_back
#define X first 
#define Y second 
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define rep(x,n)   for((x)=0;(x)<(n);(x)++)
#define mod 1000000007
const double eps=1e-15;
const double Max=1e+18;
 
inline void normal(ll& a) {
    a %= mod;
    (a < 0) && (a += mod);
}
 
inline ll mul(ll a, ll b) {
    a %= mod, b %= mod;
    normal(a), normal(b);
    return (a * b) % mod;
}
 
inline ll add(ll a, ll b) {
    a %= mod, b %= mod;
    normal(a), normal(b);
    return (a + b) % mod;
}
 
inline ll sub(ll a, ll b) {
    a %= mod, b %= mod;
    normal(a), normal(b);
    a -= b;
    normal(a);
    return a;
}
 
 
int parent[100010],xval[100010];
int rnk[100010],cnt=0;
 
pair<int,int> find(int x)
{
	// cout<<x<<" "<<"--x "<<" "<<xval[x]<<endl;
	if(parent[x] == x) return mk(x,0);
	pair<int,int> p=find(parent[x]);
	xval[x]=(xval[x]+p.Y)%2;
	parent[x]=p.X;
	// cout<<x<<" -- "<<xval[x]<<" "<<parent[x]<<endl;
	return mk(parent[x],xval[x]);
}
 
bool merge(int a, int b, int c)
{
    pair<int,int> p1 = find(a), p2 = find(b);
    // cout<<a<<" "<<b<<" "<<p1.X<<" "<<p2.X<<" "<<p1.Y<<" "<<p2.Y<<endl;
    if(p1.X == p2.X)    
    {
    	if((p1.Y+p2.Y)%2 == c) return true;
    	else return false;
    }
    cnt++;
    if(rnk[p2.X] > rnk[p1.X])   swap(p1.X,p2.X);
    parent[p2.X] = p1.X;
    xval[p2.X] = (xval[a]+xval[b]+c)%2;
    if(rnk[p1.X] == rnk[p2.X])    rnk[p1.X]++;
    return true;
}
 
void init()
{
	cnt=0;
	memset(rnk,0,sizeof(rnk));
	memset(xval,0,sizeof(xval));
	for(int i=0;i<100010;i++) parent[i]=i;
 
}
 
ll Pow(ll a,ll b,ll n)
{
	ll res=1;
	while (b)
	{
	    if (b % 2) { res = (res * a) % n; }
 
	    a = (a * a) % n;
	    b /= 2;
	}
 
	return res;
}
 
int main()
{
	ios::sync_with_stdio(false);
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);
	int t;
	cin>>t;
	while(t--)
	{
		init();
		int q,n;
		cin>>n>>q;
		int i,x,y,z;
		for(i=1;i<n;i++)
		{
			cin>>x>>y;
		}
		bool flag=true;
		for(i=0;i<q;i++)
		{
			cin>>x>>y>>z;
			flag = flag&merge(x,y,z);
		}
		if(!flag) cout<<0<<endl;
		else
		{
			ll ans=Pow(2,n-1-cnt,mod);
			cout<<ans<<endl;
		}
	}
 
	return 0;
} 