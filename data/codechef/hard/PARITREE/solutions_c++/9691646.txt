#include <bits/stdc++.h>
using namespace std;
#define f first
#define s second
#define mp make_pair
#define ll long long
#define mod 1000000007LL
#define pb push_back
#define pii pair<int,int>
ll modulo(ll a,ll b,ll c)
{
    ll x=1LL,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0LL)
    {
        if(b%2LL == 1LL)
        {
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2LL;
    }
    return x%c;
}

vector< pii >adj[100011];
int vis[100011],wei[100011];
int dfs(int u,int w)
{
    vis[u]=1;
    wei[u]=w;
    for(int i=0;i<adj[u].size();i++)
    {
        int k=adj[u][i].f;
        if(vis[k]==1)
        {
            int y=(((w-wei[k]+adj[u][i].s)%2)+2)%2;
            if(y==1)
                return 0;
        }
        else
        {
            if(!dfs(k,w+adj[u][i].s))
                return 0;
        }
    }
    return 1;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,q,i,j,k;
        scanf("%d %d",&n,&q);
        for(i=0;i<=n+1;i++)
        {
            adj[i].clear();
            wei[i]=0;
            vis[i]=0;
        }
        for(i=0; i<n-1; i++)
            scanf("%d %d",&j,&k);
        for(i=0; i<q; i++)
        {
            int u,v,x;
            scanf("%d %d %d",&u,&v,&x);
            adj[u].pb(mp(v,x));
            adj[v].pb(mp(u,x));
        }
        k=0;
        int flag=0;
        for(i=1;i<=n;i++)
        {
            if(!vis[i])
            {
                if(!dfs(i,0))
                    flag=1;
                k++;
            }
            if(flag==1)
                break;
        }
        if(flag==1)
            printf("0\n");
        else
            printf("%lld\n",modulo(2LL,k-1,mod));
    }
    return 0;
}
