#include <bits/stdc++.h>
using namespace std;
struct  node
{
    /* data */
    int u,x;
}p;

list<node> adj[100001];
list<node>::iterator it;
int color[100001];
long long mod = 1000000000+7;

void mark(int n)
{
    int i;
    for(i=1;i<=n;i++)
        color[i]=-1;
}

void add(int u1,int v1,int x1)
{
    p.u = v1;
    p.x = x1;
    adj[u1].push_back(p);
    p.u = u1;
    adj[v1].push_back(p);
}

bool check(int s)
{
    queue<int> q;
    q.push(s);

    color[s]=1;
    while(!q.empty())
    {
        int xt = q.front();
        q.pop();
        for(it=adj[xt].begin();it!=adj[xt].end();it++)
        {
            int v1 = it->u;
            int x1 = it->x;

            if(color[v1]!=-1)
            {  
                if(color[v1]==color[xt]&&x1==1)
                    return false;
                if(color[v1]!=color[xt]&&x1==0)
                    return false;
                 continue;
            }

            if(x1)
                color[v1] = 1-color[xt];
            else
                color[v1] = color[xt];
            q.push(v1);


        }

    }
    return true;
}

long long mpow(long long a, long long n,long long mod)
{
  long long ret=1;long long b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (long long)ret;
}

int main()
{ int t;
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        // freopen("output.txt","w",stdout);
      #endif
    cin>>t;
    while(t--)
    {
        int n,q,count=0,p=1,i,random_shit,random_shit_return;
        cin>>n>>q;

        for(i=0;i<n-1;i++)
            cin>>random_shit>>random_shit_return;

        while(q--)
        {
            int u1,v1,x1;
            cin>>u1>>v1>>x1;
            add(u1,v1,x1);
        }

        mark(n);

        for(i=1;i<=n;i++)
        {  //cout<<i<<" "<<color[i]<<endl;
            if(color[i]==-1)
            {  //cout<<i;
                count++;
                if(check(i)==false)
                 { p=0;break; }
            }
        }

        if(!p)
            cout<<'0'<<endl;
        else
            cout<<mpow(2,count-1,mod)<<endl;

        for(i=1;i<=n;i++)
            adj[i].clear();

    }
    return 0;
}