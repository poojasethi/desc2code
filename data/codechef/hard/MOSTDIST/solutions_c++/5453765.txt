#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <locale>
#include <vector>
#include <cassert>
#include <climits>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <sstream>
#include <utility>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <valarray>
#include <algorithm>
#include <functional>

#define xx first
#define yy second
#define LL long long
#define inf 100000000
#define pb push_back
#define all(v) v.begin(),v.end()
#define pi acos(-1)
#define clr(a,b) memset(a,b,sizeof a)
#define bclr(a) memset(a,false,sizeof a)
#define pii pair<int,int>
#define MOD 1000000007
#define EPS 1e-16
#define MP make_pair
#define MX 500005

using namespace std;
priority_queue<pii>S[5];
bool chk[MX];
pii P[MX];
char s[5];

int main(){
    int n,id=1,ans=0;
    scanf("%d",&n);
    for(int i=0;i<n;i++){
        scanf("%s",s);
        if(s[0]=='+'){
            int x,y;
            scanf("%d%d",&x,&y);
            x^=ans,y^=ans;
            P[id]=MP(x,y);
            S[0].push(MP(x+y,id));
            S[1].push(MP(x-y,id));
            S[2].push(MP(-x+y,id));
            S[3].push(MP(-x-y,id));
            id++;
        }
        else if(s[0]=='-'){
            int d;
            scanf("%d",&d);
            d^=ans;
            if(d>=1 && d<id && !chk[d]) chk[d]=true;
        }
        else{
            int x,y;
            scanf("%d%d",&x,&y);
            x^=ans,y^=ans;
            int res=0;

            while(chk[S[0].top().yy]) S[0].pop();
            while(chk[S[1].top().yy]) S[1].pop();
            while(chk[S[2].top().yy]) S[2].pop();
            while(chk[S[3].top().yy]) S[3].pop();

            res=max(res,abs(S[0].top().xx-(x+y)));
            res=max(res,abs(S[1].top().xx-(x-y)));
            res=max(res,abs(S[2].top().xx-(-x+y)));
            res=max(res,abs(S[3].top().xx-(-x-y)));

            printf("%d\n",res);
            ans=res;
        }
    }
    return 0;
}
