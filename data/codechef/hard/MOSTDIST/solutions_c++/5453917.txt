#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<string>
#include<vector>
 
#define f first
#define s second
#define pb push_back
#define N 500006
 
using namespace std;
 
typedef pair<int,int> pr;
typedef long long ll;
ll mn = -10000000000000000LL;
 
ll tree[4*N][4];
ll res[4];
 
void update(ll n,ll l,ll r,ll idx)
{
	ll m,i;
 
	if(l == r)
	{
		for(i = 0;i < 4;i++)
		{
			tree[n][i] = res[i];
		}
		return;
	}
	m = (l+r)/2;
	if(idx <= m)
	{
		update(2*n,l,m,idx);
	}
	else
	{
		update(2*n+1,m+1,r,idx);
	}
	for(i = 0;i < 4;i++)
	{
		tree[n][i] = max(tree[2*n][i],tree[2*n+1][i]);
	}
 
}
 
 
int main()
{
 
	ll q,n,i,num,ans,a1,a2,a3,a4,x1,y1;
	char ch;
 
	n = 0;
 
	cin>>q;
	ans = 0;
	for(i = 1; i < 4*N;i++)
	{	
		tree[i][0] = tree[i][1] = mn;
		tree[i][2] = tree[i][3] = mn;
	}	
 
	while(q--)
	{
		cin.ignore();
		scanf("%c",&ch);
		if(ch == '+')
		{
			scanf("%lld %lld",&x1,&y1);
			x1 = x1^ans;
			y1 = y1^ans;
			n++;
			res[0] = -(x1+y1);
			res[1] = (x1+y1);
			res[2] = (-x1+y1);
			res[3] = (-y1+x1);
			update(1,1,N-1,n);
		}
		else if(ch == '-')
		{
			scanf("%lld",&num);
			num = num^ans;
			res[0] = mn;
			res[1] = mn;
			res[2] = res[3] = mn;
			update(1,1,N-1,num);
		}
		else
		{
			scanf("%lld %lld",&x1,&y1);
			x1 = x1^ans;
			y1 = y1^ans;
			a1 = tree[1][0];
			a2 = tree[1][1];
			a3= tree[1][2];
			a4 = tree[1][3];
		// cout<<a1<<" "<<a2<<" "<<a3<<" "<<a4<<" "<<endl;
			ans = mn;
			ans = max(ans,(x1+y1) + a1);
			ans = max(ans,(-(y1+x1) + a2));
			ans = max(ans,(x1 - y1 + a3));
			ans = max(ans,(-x1 + y1 + a4));
			printf("%lld\n",ans);
		}
	}
return 0;
}
