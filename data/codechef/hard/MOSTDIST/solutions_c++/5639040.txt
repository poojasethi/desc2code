//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000007
#define INF INT_MAX
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

set<pair<int,int> >st,st2;
int v[500005];
int v2[500005];


int main()
{
  int Q;
  si(Q);
  int answer=0,id=0,id2=0,x,y,N;
  while(Q--)
  {
    char ch[2];
    scanf("%s",ch);
    if( ch[0]== '+')
    {
      si(x);
      si(y);
      x=x ^ answer;
      y=y ^ answer;
      st.insert(mp(x+y,++id));
      st2.insert(mp(x-y,++id2));
      v[id]=x+y;
      v2[id2]=x-y;
    }
    else if (ch[0] == '-')
    {
      si(N);
      N=N ^ answer;
      st.erase(st.find(mp(v[N],N)));
      st2.erase(st2.find(mp(v2[N],N)));
    }
    else
    {
      si(x);
      si(y);
      x=x ^ answer;
      y=y ^ answer;
      int tot;
      tot=(x+y)-((st.begin())->first);
      tot=max(tot ,(st.rbegin())->first - ( x+y ));
      tot=max(tot,(x-y)-((st2.begin())->first));
      tot=max(tot ,(y-x)+((st2.rbegin())->first));
      pi(tot);answer=tot;
      nl;
    }
  }
}