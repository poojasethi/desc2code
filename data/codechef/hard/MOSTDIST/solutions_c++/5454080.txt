#include <bits/stdc++.h>

using namespace std;

#define INF 1000000007
#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define MOD 1000000007

priority_queue<pair<int, int> > s1, s2, s3, s4;
int  a[5000100][2], vis[5000100];
multiset<int> :: iterator it;

int solve(){
    int i, n, x, y, j = 1, va, ans = 0, in;
    cin>>n;
    char ch;
    pair<int, int> tp;
    for(i = 1; i <= n; i++){
        scanf("%c", &ch);
        cin>>ch;
        if(ch == '+'){
            sd(x);
            sd(y);
            x = (x ^ ans);
            y = (y ^ ans);
            a[j][0] = x;
            a[j][1] = y;
            vis[j] = 1;

            s1.push(MP(x + y, j));
            s2.push(MP(y - x, j)) ;
            s3.push( MP(x - y, j) );
            s4.push( MP((-1 * y) - x, j));
            j++;
        }
        else if(ch == '-'){
            sd(in);
            in = in ^ ans;
            vis[in] = 0;
        }
        else{
            sd(x);
            sd(y);
            x = (x ^ ans);
            y = (y ^ ans);
            while(!s1.empty()){
                tp = s1.top();
                va = tp.F;
                in = tp.S;
                if(vis[in] == 1) break;
                s1.pop();
            }
            ans = va - (x + y);

            while(!s2.empty()){
                tp = s2.top();
                va = tp.F;
                in = tp.S;
                if(vis[in] == 1) break;
                s2.pop();
            }
            ans = max(ans, va + (x - y));

            while(!s3.empty()){
                tp = s3.top();
                va = tp.F;
                in = tp.S;
                if(vis[in] == 1) break;
                s3.pop();
            }

            ans = max(ans, va + (y - x));

            while(!s4.empty()){
                tp = s4.top();
                va = tp.F;
                in = tp.S;
                if(vis[in] == 1) break;
                s4.pop();
            }
            ans = max(ans, va + (x + y));

            printf("%d\n", ans);
        }
    }
}

int main(){
    //freopen("in.txt", "r", stdin);
    int t = 1;
    //cin>>t;
    while(t--){
        solve();
    }
}
