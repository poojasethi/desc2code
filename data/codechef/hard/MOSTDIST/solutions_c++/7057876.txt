#include "bits/stdc++.h"
#define mp make_pair
#define pb push_back
using namespace std;
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c < '0' || c > '9'){
        c = getchar_unlocked();
    }
    while(c >= '0' && c <= '9'){
        x = (x<<1) + (x<<3) + c - '0';
        c = getchar_unlocked();
    }
    return x;
}
inline int scanc(){
    char c = getchar_unlocked();
    while(c != '?' && c != '+' && c != '-'){
        c = getchar_unlocked();
    }
    return c;
}
const int N = 500001;
set< pair < int , int > > s1 , s2;
int inp1[N];
int inp2[N];
int cur = 0;
int answer = 0;
int q;
inline int dist(int x , int y , int id){
    return abs(x - inp1[id]) + abs(y - inp2[id]);
}
int main(){
    q = scan();
    while(q--){
        char c = scanc();
        if(c == '+'){
            inp1[++cur] = scan() xor answer;
            inp2[cur] = scan() xor answer;
            s1.insert(mp(inp1[cur] + inp2[cur] , cur));
            s2.insert(mp(inp1[cur] - inp2[cur] , cur));
        }
        else if(c == '-'){
            int x = scan() xor answer;
            s1.erase(mp(inp1[x] + inp2[x] , x));
            s2.erase(mp(inp1[x] - inp2[x] , x));
        }
        else{
            int x = scan() xor answer, y = scan() xor answer;
            int id[4];
            id[0] = s1.begin() -> second;
            id[1] = s1.rbegin() -> second;
            id[2] = s2.begin() -> second;
            id[3] = s2.rbegin() -> second;
            answer = 0;
            for(int i = 0 ; i < 4 ; ++i){
                answer = max(answer , dist(x , y , id[i]));
            }
            printf("%d\n",answer);
        }
    }
}