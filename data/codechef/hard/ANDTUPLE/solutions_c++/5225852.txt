#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <utility>
#include <fstream>

using namespace std;

#define PB push_back
#define MP make_pair
#define S second
#define F first
#define MOD 1000000009
#define INF 1000000007
#define MAXN 500000
#define LL long long
#define LD long double
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define N 1000000009

map< pair<LL, LL>, LL> m;

inline LL add(LL &x, LL y){
    x += y;
    if(x >= MOD) x -= MOD;
    return x;
}

inline LL f(LL n, LL k){
    if(n == 0) return 1;
    if(n == 1) return 1;
    if(n == 2) return 2;
    if(n == 3) return 2;
    if(m.find(MP(n, k)) != m.end()) return m[MP(n, k)];
    LL ret = 0;
    if(n & 1){
        add(ret, f( (n - 1) / 2, k ));
        add(ret, f( (n - 3) / 2 , k));
    }
    else{
        add(ret, f( (n) / 2, k ));
        add(ret, f( (n - 2) / 2, k ));
        if(k == 4) add(ret, f( (n - 4) / 2, k ));
    }
    return m[MP(n, k)] = ret;
}

inline void Solve(){
    LL i, k, n, s;
    cin>>k>>s;
    cout<<f(s, k)<<endl;
    return;
}

int main(){
    //freopen("input.txt", "r", stdin);
    LL t = 1, tt = 0;
    sld(t);
    while(t--){
        Solve();
    }
    return 0;
}



