#define filer() freopen("in.txt","r",stdin)
#define filew() freopen("out.txt","w",stdout)

#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<queue>
#include<stack>
#include<vector>
#include <map>
#include<ctime>
#define INF 1<<29
#define SET(a, x) memset((a), (x), sizeof(a))
#define ll long long
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define SZ(x) ((int)(x).size())
#define i64 ll
#define IN(A, B, C)  ((B) <= (A) && (A) <= (C))

using namespace std;
typedef vector<int> VI;
typedef vector<string> VS;
typedef vector<double> VD;
typedef vector<ll> VL;
typedef pair<int,int> PII;
typedef pair<ll,ll> PLL;
const int inf=0x20202020;
const ll mod=1000000009;
const double eps=1e-9;
const double pi=3.1415926535897932384626;

const int DX[]={1,0,-1,0},DY[]={0,1,0,-1};
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll powmod(ll a,ll b,ll mod) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}


template<class X>void debug(vector<X>&v){for(int i=0;i<v.size();i++)cout<<v[i]<<" ";cout<<endl;}

i64 N, K, DP[70][200],vst[70][200],TRUE;

i64 func(i64 pos, i64 propagated)
{
    if(vst[pos][propagated]==TRUE)return DP[pos][propagated];
    i64 mask=((i64)1<<pos);

    if(pos==62)
    {
        cout<<"Here"<<endl;
    }

    if(mask > N)
    {
        if(propagated==0)return 1;
        return 0;
    }

    i64 ans=0,i,p;

    if(mask & N)
    {
        if(propagated & 1)
        {
            for(i=0;i<=K;i+=2)
            {
                p=propagated+i;
                ans+=func(pos+1,p/2);
                ans%=mod;
            }
        }
        else
        {
            for(i=1;i<=K;i+=2)
            {
                p=propagated+i;
                ans+=func(pos+1,p/2);
                ans%=mod;
            }
        }
    }
    else
    {
        if(propagated & 1)
        {
            for(i=1;i<=K;i+=2)
            {
                p=propagated+i;
                ans+=func(pos+1,p/2);
                ans%=mod;
            }
        }
        else
        {
            for(i=0;i<=K;i+=2)
            {
                p=propagated+i;
                ans+=func(pos+1,p/2);
                ans%=mod;
            }
        }
    }
    vst [pos][propagated]=TRUE;
    return DP[pos][propagated]=ans;
}

int main()
{
    //filer();

    //freopen("","r",stdin);
    //freopen("","w",stdout);

    i64 i,j,k ,T,cas=0,M,a,b,c;
    scanf("%lld",&T);
    while(T--)
    {
        TRUE++;
        scanf("%lld%lld",&K,&N);
        i64 ans=func(0,0);
        printf("%lld\n",ans);
    }


    return 0;
}
/*Test Cases


*/
