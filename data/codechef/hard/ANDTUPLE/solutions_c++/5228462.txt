#pragma comment(linker, "/STACK:1024000000,1024000000")
#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<fstream>
#include<math.h>
#include<iomanip>
#include<time.h>
#include<assert.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define db double
#define inf 1000000007
#define mod 1000000009
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100001
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

int dp[62][4],m,b[62];
int dfs(int x,int c)
{
	if(x==m)return c==0;
	int &ret=dp[x][c];
	if(ret+1)return ret;
	if(c==0)
	{
		if(b[x]==0)ret=((dfs(x+1,0)+dfs(x+1,1))%mod+dfs(x+1,2))%mod;
		else ret=(dfs(x+1,1)+dfs(x+1,0))%mod;
	}
	else if(c==1)
	{
		if(b[x]==0)ret=(dfs(x+1,1)+dfs(x+1,2))%mod;
		else ret=((dfs(x+1,0)+dfs(x+1,1))%mod+dfs(x+1,2))%mod;
	}
	else if(c==2)
	{
		if(b[x]==0)ret=((dfs(x+1,1)+dfs(x+1,2))%mod+dfs(x+1,3))%mod;
		else ret=(dfs(x+1,2)+dfs(x+1,1))%mod;
	}
	else
	{
		if(b[x]==0)ret=(dfs(x+1,2)+dfs(x+1,3))%mod;
		else ret=((dfs(x+1,1)+dfs(x+1,2))%mod+dfs(x+1,3))%mod;
	}
	return ret;
}
int go(int x,int c)
{
	if(x==m)return c==0;
	int &ret=dp[x][c];
	if(ret+1)return ret;
	if(c==0)
	{
		ret=(go(x+1,0)+go(x+1,1))%mod;
	}
	else if(c==1)
	{
		if(b[x]==0)ret=(go(x+1,1)+go(x+1,2))%mod;
		else ret=(go(x+1,0)+go(x+1,1))%mod;
	}
	else if(c==2)
	{
		ret=(go(x+1,2)+go(x+1,1))%mod;
	}
	return ret;
}
int main()
{
    int T,i,j,k,ca=0;
	scanf("%d",&T);
	while(T--)
	{
		ll n;
		cin>>k>>n;m=0;
		while(n)b[m++]=n&1,n>>=1;
		memset(dp,-1,sizeof(dp));
		int ans;
		if(k==4)ans=dfs(0,0);
		else ans=go(0,0);
		printf("%d\n",ans);
	}
    return 0;
}