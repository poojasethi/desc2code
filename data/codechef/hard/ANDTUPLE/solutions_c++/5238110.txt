#include<bits/stdc++.h>
#define MP make_pair
#define PB push_back
#define LL long long int
#define N 1000009
#define MOD 1000000009
#define INf 1000000000000LL
using namespace std;
LL ans1[N];
LL ans2[N];
map < LL,LL > mp1;
map < LL,LL > mp2;
void pre1()
{
    ans1[1]=1;
    ans1[2]=2;
    ans1[3]=2;
    LL i;
    for(i=4;i<N;i++)
    {
        if(i%2==0)
        {
            ans1[i]=ans1[i/2] + ans1[(i-2)/2];
        }
        else
        {
            ans1[i]=ans1[(i-1)/2] + ans1[(i-3)/2];
        }
        ans1[i]%=MOD;
    }
}
void pre2()
{
    ans2[1]=1;
    ans2[2]=2;
    ans2[3]=2;
    ans2[4]=4;
    LL i;
    for(i=5;i<N;i++)
    {
        if(i%2==0)
        {
            ans2[i]=ans2[i/2] + ans2[(i-2)/2]+ans2[(i-4)/2];
        }
        else
        {
            ans2[i]=ans2[(i-1)/2] + ans2[(i-3)/2];
        }
        ans2[i]%=MOD;
    }
}
LL f1(LL n)
{
    if(n<N)
    {
        return ans1[n];
    }
    if(mp1.find(n)!=mp1.end())
    {
        return mp1[n];
    }
    LL ret;
    if(n%2==0)
    {
        ret= f1(n/2) + f1((n-2)/2);
        ret%=MOD;
    }
    else
    {
        ret=f1((n-1)/2) + f1((n-3)/2);
        ret%=MOD;
    }
    mp1[n]=ret;
    return ret;
}
LL f2(LL n)
{
    if(n<N)
    {
        return ans2[n];
    }
    if(mp2.find(n)!=mp2.end())
    {
        return mp2[n];
    }
    LL ret;
    if(n%2==0)
    {
        ret= f2(n/2) + f2((n-2)/2)+f2((n-4)/2);
        ret%=MOD;
    }
    else
    {
        ret=f2((n-1)/2) + f2((n-3)/2);
        ret%=MOD;
    }
    mp2[n]=ret;
    return ret;
}
int main()
{
    LL t;
    cin>>t;
    LL n,k;
    pre1();
    pre2();
    while(t--)
    {
        cin>>k>>n;
        if(k==3)
        {
            cout<<f1(n)<<endl;
        }
        else
        {
            cout<<f2(n)<<endl;
        }
    }
    return 0;
}
 