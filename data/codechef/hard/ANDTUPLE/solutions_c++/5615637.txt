#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
ll dp[65][260];
int mark[65];
ll mod;
ll GetAns(ll n,int k,int b,int carry)
{
    if(b == -1)
    {
        if(carry == 0) return 1;
        else return 0;
    }
    if(carry < 0 || carry > 2*k) return 0;
    //printf("%d %d\n",b,carry);
    //int z;scanf("%d",&z);
    if(dp[b][carry] != -1) return dp[b][carry];
    int newCarry = carry;
    if(mark[b] == 1) newCarry++;
    ll ways = 0;
    for(int d = 0 ; d<=k ; d++)
    {
        ll temp = GetAns(n,k,b-1,2*(newCarry-d));
        ways = ways + temp;
        if(ways >= mod) ways = ways - mod;
    }
    dp[b][carry] = ways;
    return ways;
}
int main()
{
    mod = pow(10,9) + 9;
    int tc,t;
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        for(int i = 0 ; i<65 ; i++)
        {
            for(int j = 0 ; j<260 ; j++)
            dp[i][j] = -1;

            mark[i] = 0;
        }
        ll n;
        int k;
        scanf("%d %lld",&k,&n);
        int f = 0;
        ll temp = n;
        while(temp > 0)
        {
            if(temp%2 == 1) mark[f] = 1;
            temp = temp/2;
            f++;
        }
        ll ans = GetAns(n,k,f,0);
        printf("%lld\n",ans);
    }
    return 0;
}

