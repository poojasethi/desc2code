dp = [0, 2, 2, 2]
k = 2
i = 1
while 1:
   even = (dp[2 * k - 2] * (2 * k - 3) * (2 * k - 2)) / ((k - 1) * (k - 1))
   if(len(str(even)) > 1000):
      break
   odd = (dp[2 * k - 1] * (2 * k - 2) * (2 * k - 1)) / ((k - 1) * k)
   dp.append(even)
   dp.append(odd)
   k += 1

s = len(dp) - 1     
def binsearch(n, a, b):
   if a > b:
      return False
   m = (a + b) / 2
   if n < dp[m]:
      return binsearch(n, a, m - 1)
   elif n > dp[m]:
      return binsearch(n, m + 1, b)
   return True

t = int(raw_input())
while t > 0:
   t -= 1
   n = int(raw_input())   
   if binsearch(n, 0, s):
      print "YES"
   else:
      print "NO"

