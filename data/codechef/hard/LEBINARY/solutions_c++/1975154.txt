#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <climits>
#include <numeric>
#include <vector>
#include <cmath>
#include <map>
using namespace std;
#define ll long long
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define rep(i,n) for(int i=0;i<n;i++)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define BUFSIZE (10000)
/*char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;
#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})
void init_input(){
	if (input_eof) return;
	int existing = BUFSIZE - (ioend - inputbuffer);
	memcpy(inputbuffer, ioend, existing);
	int wanted = ioend - inputbuffer;
	int count=fread(inputbuffer + existing, 1, wanted, stdin);
	if (count < wanted)input_eof = 1;
	ioend = inputbuffer + BUFSIZE - (wanted - count);
	while (*--ioend > ' ');
	ioend++;
	ioptr=inputbuffer;
}
inline void non_whitespace(){
	for(;;){
		if(ioptr>=ioend)init_input();
		if(*ioptr>' ')return;
		ioptr++;
	}
}
inline int getint(){
	non_whitespace();
	int neg=0;
	if(*ioptr=='-'){
		ioptr++;
		neg=1;
	}
	int n=0;
	while(*ioptr>' ')
		n=(n<<3)+(n<<1)+*ioptr++-'0';
	ioptr++;
	if(neg)
		n=-n;
	return n;
}*/
#define N 200005
#define M 1000000007
#define sz(a) int(a.size())
#define pii pair<int,int>
#define base 100000
#define digit 5
struct Bignum
{
 int a[300],l;
 void load(int x)
 {
  memset(a,0,sizeof(a));
  a[l=1]=x;
 }
 void mul(int x)
 {
  int c=0,i;
  for(i=1;i<=l;i++)
  {
   a[i]=a[i]*x+c;
   c=a[i]/base;
   a[i]%=base;
  }
  if(c)a[++l]=c;
 }
 void divide(int x)
 {
  int c=0,i;
  for(i=l;i>=1;i--)
  {
   a[i]=c*base+a[i];
   c=a[i]%x;
   a[i]/=x;
  }
  while(l>1&&!a[l])l--;
 }
 void read()
 {
  load(0);
  string s;
  cin>>s;
  l=(sz(s)+digit-1)/digit;
  reverse(s.begin(),s.end());
  for(int i=1;i<=l;i++)
  for(int j=i*digit-1;j>=(i-1)*digit;j--)
  if(j<sz(s))
  {
   a[i]=a[i]*10+s[j]-'0';
  }
 }
 int cmp(Bignum t)
 {
  if(l!=t.l)return l<t.l?-1:1;
  for(int i=l;i>=1;i--)
  if(a[i]!=t.a[i])return a[i]<t.a[i]?-1:1;
  return 0;
 }
}num[4000];
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,l,y,n,m;
	int maxn;
	for(n=1;;n+=2)
	{
	 m=n/2+1;
	 if(n==1)num[1].load(2);
	 else
	 {
	 	num[n]=num[n-1];
	 	num[n].mul(2*m-1);
	 	num[n].divide(m);
	 }
	 num[n+1]=num[n];
	 num[n+1].mul(2);
	 if(num[n+1].l>200)
	 {maxn=n+1;break;}
	}
	//T=getint();
	scanf("%d",&T);
	while(T--)
	{
	 Bignum t;
	 t.read();
	 int ok=0,lo=1,hi=maxn,mid;
	 while(lo<=hi)
	 {
	  mid=(lo+hi)>>1;
	  int x=num[mid].cmp(t);
	  if(!x){ok=1;break;}
	  else if(x<0)lo=mid+1;
	  else hi=mid-1;
	 }
	 puts(ok?"YES":"NO");
	}
	return 0;
}
