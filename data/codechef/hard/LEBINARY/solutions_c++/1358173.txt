/*************************************************************
 ********                    Vikash Gupta             ********
 ********                     IIT2009088              ********
 ********                   IIIT Allahabad            ********
 ***************************************************************/


/************Header Files****************/
#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<cstdlib>
#include<climits>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<cstring>
#include<string>
#include<algorithm>
#include<cassert>

using namespace std;

/*************** Prototypes ****************/
#define MAX 1e9
#define MIN 1e-9
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define REP(i,n) FOR(i,0,n)
#define FORR(i,a,b) for(int i=b-1;i>=a;i--) 
#define REPR(i,n) FORR(i,0,n)
#define sz size()
#define all(c) c.begin(),c.end()
#define mp make_pair
#define fill(ar,val) memset(ar,val,sizeof ar)
#define FORE(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

typedef long long ll;
typedef vector<int> VI;
typedef vector<string> VS;
typedef map<int,int> MII;
typedef map<int,string> MIS;
typedef map<string,int> MSI;
typedef pair<int,int> PII;
typedef pair<string,string> PSS;
typedef pair<int,string> PIS;
typedef pair<string,int> PSI;

/**************** execution function main is being begin *********************/

static const int SZ = (1<<16);
static const int DI = (1<<10);
char *a[SZ];
int k;

char *get_mem()
{
	return (char *)calloc(DI,sizeof(char));
}

void pre_calc()
{
	a[2] = get_mem(); a[2][0] = 2;
	a[3] = get_mem(); a[3][0] = 2;

	int n = 1, r = 1, nd = 0;
	k = 3;

	for(int it = 4; it < SZ && nd <= 1000; it++ ) {
		k++;
		n++;

		a[it] = get_mem();

		int ca = 0;

		REP(i,DI) {
			int v = a[it-1][i];
			v *= n;
			v += ca;
			a[it][i] = v%10;
			ca = v/10;
		}

		int di;
		if(it&1) di = ++r;
		else di = n-r;

		int rc = 0;

		REPR(i,DI) {
			rc *= 10;
			rc += a[it][i];
			a[it][i] = (rc/di);
			rc %= di;
		}

		assert(rc==0);

		REP(i,DI) if(a[it][i]) nd = i;

	}

	assert(k<SZ);

}
		
void clean_up()
{
	REP(i,DI) {
		free(a[i]);
		a[i] = NULL;
	}

}

char buf[1024],c[1024];

int main()
{
	pre_calc();
	
	int t;
	scanf("%d", &t);

	while( t-- ) {
		

		cin >> buf;
		//scanf("%s",buf);
		int len = strlen(buf);

		//cout<<buf<<" "<<len<<endl;

		fill(c,0);

		REP(i,len) c[i] = buf[len-i-1]-'0';

		int lo = 2, hi = k;

		while( lo < hi ) {
			int mid = (lo+hi)/2;
			bool f = true;

			for(int i=DI-1; i>=0 && f; i--) {
				if( c[i] > a[mid][i] ) f = false;
				else if( c[i] < a[mid][i] ) break;
			}

			if( f ) hi = mid;
			else lo = mid+1;
			//cout<<lo<<" "<<hi<<endl;
		}

		bool f = true;
		REP(i,DI) f = (f && (c[i] == a[lo][i] ));

		cout << (f ? "YES" : "NO") << endl;
	}

	clean_up();

}
