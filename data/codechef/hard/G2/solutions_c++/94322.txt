/*IT IS STEPHEN MERRIMAN'S CODE. I AM USING IT FOR TEST PURPOSE*/

#include <iostream>

#include <set>

#include <vector>

#include<stdio.h>

using namespace std;

int grid[500][500];

int ans[500][500];

char input[50000000];

int numcharsin;

int inpos = 0;

int getint() {

while (input[inpos]<'0' || input[inpos]>'9') inpos++;

int ret = 0;

while (inpos<numcharsin && input[inpos]>='0' && input[inpos]<='9') ret = 10*ret+input[inpos++]-'0';

return ret;

}

int row[500][1000];

int rowlen[500];

int col[500][1000];

int collen[500];

int brute[500][500];

int N,M;



int main() {

cin.read(input,50000000);

numcharsin = cin.gcount();

int T = getint(); while (T--) {

M=getint();

N=getint();

for (int i=0; i<M; i++)

for (int j=0; j<N; j++) grid[i][j]=getint();


memset(row,-1,500*1000*sizeof(int));

memset(col,-1,500*1000*sizeof(int));

memset(rowlen,0,500*sizeof(int));

memset(collen,0,500*sizeof(int));

 

int ret = 0;

for (int i=M-1; i>=0; i--)

for (int j=N-1; j>=0; j--) {

int low = 0, high = rowlen[i]+1;


while (high-low>1) {

int mid = (high+low)/2;

if (grid[i][row[i][mid]]>=grid[i][j]) {

low = mid;

} else {

high = mid;

}

}


int low2 = 0, high2 = collen[j]+1;

while (high2-low2>1) {

int mid = (high2+low2)/2;

if (grid[col[j][mid]][j]<=grid[i][j]) {

low2 = mid;

} else {

high2 = mid;

}

}


ans[i][j] = 1 + max(low,low2);

// printf("Setting ans[%d][%d] = 1 + max(%d,%d) = %d\n",i,j,low,low2,ans[i][j]);

ret>?=ans[i][j];

for (int k=ans[i][j]; k>=low && k>0; k--) {

if (row[i][k]!=-1 && grid[i][row[i][k]]>=grid[i][j]) break;

// printf("row[%d][%d] = %d\n",i,k,j);

row[i][k]=j;

}

for (int k=ans[i][j]; k>=low2 && k>0; k--) {

if (col[j][k]!=-1 && grid[col[j][k]][j]<=grid[i][j]) break;

// printf("col[%d][%d] = %d\n",j,k,i);

col[j][k]=i;

}

 

rowlen[i]>?=ans[i][j];

collen[j]>?=ans[i][j];

}

printf("%d\n",ret);




}

}
