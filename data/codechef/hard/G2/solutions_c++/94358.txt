#include <iostream>
#include <set>
#include <vector>
using namespace std;


char input[50000000];
int numcharsin;
int inpos = 0;
int board[500][500];
int m,n;

int getint() {
	while (input[inpos]<'0' || input[inpos]>'9') inpos++;
	int ret = 0;
	while (inpos<numcharsin && input[inpos]>='0' && input[inpos]<='9') 
          ret = 10*ret+input[inpos++]-'0';
	return ret;
}

int calculateMaxMoves(){
	int moves[500][500];
	int highest=0;
	for(int i=m-1;i>=0;i--)
		for(int j=n-1;j>=0;j--){
			moves[i][j]=1;
			int colMax=0;
			int colLeader=9999999;
			for(int col=j+1;col<n;col++)
				if(board[i][col]>=board[i][j] && board[i][col]<colLeader){
					int currMoves=moves[i][col];
					colLeader=board[i][col];
					if(currMoves>colMax)
						colMax=currMoves;
					if(colLeader==board[i][j])
						break;							
				}					
			int rowMax=0;
			int rowLeader=-1;
			for(int row=i+1;row<m;row++)
				if(board[row][j]<=board[i][j] && board[row][j]>rowLeader){
					int currMoves=moves[row][j];
					rowLeader=board[row][j];
					if(currMoves>rowMax)
						rowMax=currMoves;
					if(rowLeader==board[i][j])
						break;
				}
				moves[i][j]+= (colMax>rowMax?colMax:rowMax);
			if(moves[i][j]>highest)
				highest=moves[i][j];
		}		
	return highest;
}

int main() {
	cin.read(input,50000000);
	numcharsin = cin.gcount();
	int T = getint(); 
    while (T--) {
		m=getint();
		n=getint();
		for (int i=0; i<m; i++)
			for (int j=0; j<n; j++) 
				board[i][j]=getint();
		int ret = calculateMaxMoves();
		printf("%d\n",ret);
	}
}

	


