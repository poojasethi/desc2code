#include<bits/stdc++.h>

using namespace std;

#define REP0(i, n) for (int i = 0; i < n; i++)
#define REP1(i, n) for (int i = 1; i <= n; i++)
#define REP(i, l, r) for (int i = l; i <= r; i++)
#define RP(i, r, l) for (int i = r; i >= l; i--)
#define FORE(i, x) for (int i = fi[x]; i != -1; i = e[i].n)

#define MAX_N 110000
#define MAX_M 110
#define MOD 1000000009ll
#define A first
#define B second
#define MP make_pair
typedef pair < int, int > PT;
int a[MAX_N], b[MAX_M], f[MAX_M][MAX_M], si[MAX_M][MAX_M];
int fac[MAX_N], ifac[MAX_N];
int n, nq, m;

inline int mpow(long long int x, long long int y)
{
       long long int s = 1ll;
       while (y)
       {
             if (y & 1) s = s *x % MOD;
             x = x * x % MOD, y >>= 1;
       }
       return (int)s;
}
inline int inv(int x) { return mpow(x, MOD - 2); }
inline int C(int x, int y) { return fac[x] * 1LL * ifac[y] % MOD * 1LL * ifac[x - y] % MOD; }

void solve(void)
{
     //REP0(i, m) printf ("%d ", b[i]); puts("");
     REP1(i, m) REP0(j, m) si[i][j] = 0;
     REP0(i, m) REP(j, 0, b[i])
     {
        int t = i * 1LL * j % m;
        si[i + 1][t] = (si[i + 1][t] + C(b[i], j)) % MOD;
     }
    // REP0(i, m) { REP0(j, m) printf ("%d ", si[i][j]); puts(""); }
     f[0][0] = 1;
     REP1(i, m) REP0(j, m)
     {
         f[i][j] = 0;
         REP0(k, m) f[i][j] = (f[i][j] + f[i - 1][(j - k + m) % m] * 1LL * si[i][k]) % MOD;
     }
     printf ("%d\n", f[m][0]);
}

int main(void)
{
    int test, maxn = 100000; scanf("%d", &test); fac[0] = 1;
    fac[0] = ifac[0] = 1;
    REP1(i, MAX_N - 1) fac[i] = fac[i - 1] * 1LL * i % MOD, ifac[i] = inv(fac[i]);
    //REP1(i, 10) printf ("%d %d\n", fac[i], ifac[i] * 1LL * fac[i] % MOD);
    while (test-- > 0)
    {
          scanf("%d%d", &n, &nq);
          REP1(i, n) scanf("%d", a + i);
          REP1(i, nq)
          {
              scanf("%d", &m), fill(b, b + m, 0);
              REP1(j, n) b[(a[j] % m + m) % m]++;
              solve();
          }
    }
    return 0;
}
