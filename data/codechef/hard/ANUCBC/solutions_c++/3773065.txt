#include <iostream>
#include <stdio.h>
#include <string.h>
using namespace std;
 
long long mod = 1000000009;

long long a[100005], s[102][102], d[102][102];
long long counts[102], ans[102];
long long f[100005], invf[100005];

long long pmod(long long b, long long e)
{
	long long r = 1;
	while(e)
	{
		if(e%2) r = (r*b)%mod;
		b = (b*b)%mod;
		e = e/2;
	}
	return r;
}

void gen(int limit)
{
	f[0] = 1;
	for(int i=1;i<=limit;i++)
		f[i] = (f[i-1]*(long long)i)%mod;
	
	//for(int i=0;i<=100000;i++)
	//	invf[i] = pmod(f[i], mod-2);
		
	invf[limit] = pmod(f[limit], mod-2);
	for(int i=limit-1; i>=0; i--)
		invf[i] = (invf[i+1]*(i+1))%mod;	
}

int main() {
	
	int tc;
	scanf("%d",&tc);
	while(tc--)
	{ 
		int n,q;
		scanf("%d%d",&n,&q);
		gen(n);
		for(int i=0;i<n;i++)
			scanf("%lld",&a[i]);

		memset(ans, -1, sizeof(ans));
		for(int i=0;i<q;i++)
		{
			int m;
			scanf("%d",&m);
			if(ans[m] != -1) 
			{
				printf("%lld\n",ans[m]);
				continue;
			}
			//for(int j=0;j<m;j++) counts[j] = 0;
			memset(counts, 0, sizeof(counts));
			
			
			for(int j=0;j<n;j++)
			{
				int x;
				x = a[j];
				x = (x%m+m)%m;
				counts[x]++;
			}
				
			/*
			for(int j=0;j<m;j++)
				for(int k=0;k<m;k++)
					s[j][k] = 0;
			*/
			memset(s, 0, sizeof(s));
			
			
			s[0][0] = pmod(2, counts[0]);
			for(int j=1;j<m;j++)
				for(int k=0;k<=counts[j];k++)
				{
					int p = (k*j)%m;
					s[j][p] =  (s[j][p] + ((f[counts[j]]*invf[k])%mod * invf[counts[j]-k])%mod)%mod;
				}	
		
			
			d[0][0] = pmod(2,counts[0]);
			for(int k=1;k<m;k++) d[0][k] = 0;
			
			for(int j=1;j<m;j++) 
			{
				for(int k=0;k<m;k++) 
				{
					d[j][k] = 0;
					for(int p=0;p<m;p++)
					{
						d[j][k] =  (d[j][k] +  (d[j-1][((k-p)%m + m)%m]*s[j][p])%mod)%mod;
					}
				}
			}

			ans[m] = d[m-1][0];
			printf("%lld\n",d[m-1][0]);
		}
	}
	return 0;
} 