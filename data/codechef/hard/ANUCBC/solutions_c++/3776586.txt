#include<iostream>
#include<stdio.h>
#include<cmath>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#include<limits.h>
using namespace std;
 
/*printing definitions*/
#define pi(x) printf("%d\n",(x))
#define pii(x,y) printf("%d %d\n",(x),(y))
#define pl(x) printf("%lld\n",(x))
#define pll(x,y) printf("%lld %lld\n",(x),(y))
#define pil(x,y) printf("%d %lld\n",(x),(y))
#define pli(x,y) printf("%lld %d\n",(x),(y))
#define plf(x) printf("%lf\n",(x))
#define plflf(x,y) printf("%lf %lf\n",(x),(y))
 
/*scanning definitions*/
#define si(x) scanf("%d",&x)
#define sii(x,y) scanf("%d %d",&x,&y)
#define sl(x) scanf("%lld",&x)
#define sll(x,y) scanf("%lld %lld",&x,&y)
#define sil(x,y) scanf("%d %lld",&x,&y)
#define sli(x,y) scanf("%lld %d",&x,&y)
#define slf(x) scanf("%lf",&x)
#define slflf(x,y) scanf("%lf %lf",&x,&y)
 
/*fast i/p definitions*/
#define getcx getchar_unlocked
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif
#define M 1000000009
//  CREATED BY: ATUL SEHGAL
inline long long int in()
{
   long long int n=0;
   long long int ch=getcx();long long int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}
long long int p(long long int a,long long b)
{
    long long int res=1;
    while(b)
    {
        if(b&1)
            res=(res*a)%M;
        b/=2;
        a=(a*a)%M;
    }
    return res;
}
long long int a[100005],mod[101],c[101][101],dp[101][101],f[100005],fi[100005],com[1002][1002],msum[101][101];
long long int C(long long int n,long long int r)
{
    return (f[n]*((fi[n-r]*fi[r])%M))%M;
}
int main()
{
  //  freopen("aanucbc_in.txt","r",stdin);
  //  freopen("aanucbc_out.txt","w",stdout);
 	long long int t,i,j,k,l,m,n,q,sum,ans;
	f[0]=1;
	for(i=1;i<=100000;i++)
        f[i]=(f[i-1]*i)%M;
    fi[100000]=p(f[100000],M-2);
    for(i=100000;i>0;i--)
        fi[i-1]=(i*fi[i])%M;
    for(i=0;i<=1000;i++)
        for(j=0;j<=i;j++)
            com[i][j]=C(i,j);
	t=in();
	while(t--)
	{
		n=in(); q=in();
		for(i=0;i<n;i++)
            a[i]=in();
		while(q--)
        {
            m=in();
            if(m==1)
                pl(p(2,n));
            else
            {
                memset(mod,0,sizeof(mod));
                for(i=0;i<n;i++)
                {
                    sum=a[i]%m;
                    if(sum<0)
                        sum+=m;
                    mod[sum]++;
                }
                for(i=0;i<m;i++)
                {
                    for(j=0;j<m;j++)
                        c[i][j]=dp[i][j]=0;
                 //   cout<<"mod[i]="<<mod[i]<<endl;
                    if(mod[i]<=1000)
                    {
                        for(j=0;j<=mod[i];j++)
                        {
                            sum=(i*j)%m;
                            c[i][sum]=(c[i][sum]+com[mod[i]][j])%M;
                        }
                    }
                    else
                    {
                        for(j=0;j<=mod[i];j++)
                        {
                            sum=(i*j)%m;
                            c[i][sum]=(c[i][sum]+C(mod[i],j))%M;
                        }
                    }
                }
                for(i=0;i<m;i++)
                    for(j=0;j<m;j++)
                        msum[i][j]=(i+j)%m;
              /*  cout<<"c[][]\n";
                for(i=0;i<m;i++)
                {
                    for(j=0;j<m;j++)
                        cout<<"  "<<c[i][j];
                    cout<<endl;
                }
              */  for(i=0;i<m;i++)
                    dp[0][i]=c[0][i];
                for(i=1;i<m;i++)
                {
                    for(j=0;j<m;j++)
                    {
                        for(k=0;k<m;k++)
                        {
                            l=msum[j][k];//(j+k)%m;
                            dp[i][l]=(dp[i][l]+ dp[i-1][j]*c[i][k])%M;
                        }
                    }
                }
             /*   cout<<"dp[][]\n";
                for(i=0;i<m;i++)
                {
                    for(j=0;j<m;j++)
                        cout<<"  "<<dp[i][j];
                    cout<<endl;
                }
               */ 
                ans=dp[m-1][0];
                pl(ans);
            }
        }
	}
	return 0;
}