#include<bits/stdc++.h>

// STL
#define pb push_back
#define LL long long
#define ULL unsigned long long
#define L long
#define VCTP vector<pair<LL,LL> >
#define PII pair<LL,LL>
#define PDD pair<double,double>
#define ft first
#define sd second
#define mp make_pair

// Useful constants
#define INF                         (int)1e9
#define EPS                         1e-9

// Useful hardware instructions
#define bitcount                    __builtin_popcount
#define gcd                         __gcd

// Useful container manipulation / traversal macros
#define forall(i,a,b)               for(int i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair

// Some common useful functions
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())
using namespace std;
int arr[100005];
//int a[2][101];
typedef long long ll;
int m=1000000009;
long long int po(long long int a,long long int b,long long int MOD) {
long long int x = 1, y = a;
    while(b > 0) {
        if(b%2 == 1) {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}
ll cd[101];
ll comb(ll n,ll r,ll m)
{
	ll a=n,b=1,c=n-1;
	for(int i=2;i<=r;i++)
	{
		a=(a*c)%m;
		b=(b*i)%m;
	}
//	printf("%lld %lld\n",a,b);
	a=(a*po(b,m-2,m))%m;
	return a;
}
/*
#define gc getchar_unlocked
#define rd readInt()
inline long long readInt()
{
	long long n = 0, c = gc(), f = 1;
	while(c != '-' && (c < '0' || c > '9')) c = gc();
	if(c == '-') f = -1, c = gc();
	while(c >= '0' && c <= '9')
	n = (n<<3) + (n<<1) + c - '0', c = gc();
	return n * f;
}
*/
ll ans[101];
//int pp[30];
int bb[101];
//int cc[101];
ll pl[101][101];
ll br[100005];
int main()
{
	int t;
	for(int i=0;i<=100000;i++)
		br[i]=po(i,m-2,m);
//	printf("%lld\n",comb(5,2,m));
	scanf("%d",&t);
//	t=rd;
	while(t--)
	{
		int n,q;
		scanf("%d %d",&n,&q);
//		n=rd;
//		q=rd;
		forall(i,0,n)
//			arr[i]=rd;
		scanf("%d",&arr[i]);
		int p;
		for(int i=0;i<q;i++)
		{
			scanf("%d",&p);
	//		int p=rd;
//			printf("%lld\n",ans[p]);
//		}
//		memset(ans,0,sizeof(ans));
//		for(int k=0;k<q;k++)
//		{
//			int p=pp[k];

//			if(ans[p])
//				continue;

			memset(bb,0,sizeof(bb));
//			memset(a,0,sizeof(a[0][0])*2*101);
			for(int i=0;i<n;i++)
			{
			//		printf("i-->%d arr[i]mod p==%d\n",i,arr[i]%p);
					if(arr[i]%p>=0)
					{
							bb[arr[i]%p]++;
					}
					else
					{
							bb[p+arr[i]%p]++;
			//			printf("i-->%d arr[i]mod p==%d\n",i,p+arr[i]%p);

					}
			}
//			printf("%d\n",p);
//			for(int i=0;i<p;i++)
//				if(bb[i])
//				printf("i==>%d bb[i]==>%d\n",i,bb[i]);
		memset(cd,0,sizeof(cd));
//		memset(cc,0,sizeof(cc));
		memset(pl,0,sizeof(pl));
		pl[0][0]=po(2,bb[0],m)-1;
		forall(i,1,p)
		{
			ll an=bb[i];
			ll count=bb[i];
			memset(cd,0,sizeof(cd));

			for(int j=1;j<=bb[i];j++)
			{
				pl[i][(i*j)%p]=(pl[i][(i*j)%p]+an)%m;
				an=(an*(count-j))%m;
				an=(an*br[j+1])%m;//(an*po(j+1,m-2,m))%m;
			}
			for(int j=0;j<p;j++)
			{
				for(int k=0;k<p;k++)
				{
					cd[(k+j)%p]=(cd[(k+j)%p]+ (pl[i][j]*pl[i-1][k])%m)%m;
				}
			}
			for(int j=0;j<p;j++)
				pl[i][j]=(cd[j]+pl[i-1][j]+pl[i][j])%m;
		}
//		cd[0]=bb[0];
//		ans[p]=(pl[p-1][0]+1)%m;
			printf("%lld\n",(pl[p-1][0]+1)%m);
		}
	}
	return 0;
}

