#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
#define gc getchar_unlocked
using namespace std;
typedef long long ll;
ll c=1000000009;
ll a[100007],cnt[107];
ll b[100007],inv[100007];
ll add[107][107];
ll dp[107][107];
ll cache[107][107],tg;
void scanint(long long  &x)
{
    register long long int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
ll pow(ll aa,ll bb)
{
    ll x=1,y=aa; 
    while(bb> 0)
    {
        if(bb%2==1)
            x=(x*y)%c;
        y = (y*y)%c;
        bb/=2;
    }
    return x;
}
void pre()
{
    b[0]=1;
    for(int i=1;i<=100000;i++)
        b[i]=(b[i-1]*i)%c;
    inv[100000]=pow(b[100000],c-2);
	for(int i=100000-1;i>=0;i--)		 
		inv[i]=(inv[i+1]*(i+1))%c;
}
ll  C(ll n,ll r)
{
    ll sol;
	sol=(b[n]*inv[r])%c;
	sol=(sol*inv[n-r])%c;
	return sol;
}
int main()
{
    pre();
    ll t;
    scanint(t);
    while(t--)
    {
        tg++;
        ll n,q,m;
        scanint(n);
        scanint(q);
        for(int i=0;i<n;i++)
                scanint(a[i]);
       //cout<<"check 5c3="<<C(5,3)<<endl;
        while(q--)
        {
                memset(cnt,0,sizeof(cnt));
                memset(dp,0,sizeof(dp));
                memset(add,0,sizeof(add));
                scanint(m);
                if(cache[tg][m])
                {
                                printf("%lld\n",cache[tg][m]);
                                continue;
                }
                for(int i=0;i<n;i++)
                {
                int r=((a[i])%m+m)%m;
                cnt[r]++;
                }
                /*cout<<"cnt="<<endl;
			for(int i=0;i<m;i++)
			   cout<<cnt[i]<<" ";
			   cout<<endl;
			    */
              ll temp=pow(2,cnt[0]);
              dp[0][0]=temp;
              add[0][0]=temp;
                for(int i=1;i<m;i++)
                                for(int j=0;j<=cnt[i];j++)
                                add[i][(i*j)%m]=(add[i][(i*j)%m]+C(cnt[i],j))%c;
               /* cout<<"cr="<<endl;
			for(int i=0;i<m;i++){
			   for(int j=0;j<m;j++)
			         cout<<add[i][j]<<" ";
               cout<<endl;}
                */for(int i=1;i<m;i++)
                                for(int j=0;j<m;j++)
                                for(int r=0;r<m;r++)
                                dp[i][j]=(dp[i][j]+dp[i-1][(j-r+m)%m]*add[i][r]%c)%c;
               /* cout<<"dp="<<endl;
                for(int i=0;i<m;i++)
                {
                                for(int j=0;j<m;j++)
                                cout<<dp[i][j]<<" ";
                                cout<<endl;
                }*/
                cache[tg][m]=dp[m-1][0];
                printf("%lld\n",dp[m-1][0]);
        }
    }
    return 0;
}