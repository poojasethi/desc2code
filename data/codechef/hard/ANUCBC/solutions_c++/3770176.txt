#include<cstdio>
#include<iostream>
#include<cstring>
#define ll long long
#define MOD 1000000009
#define N 100000
using namespace std;
 
int memo[105][105];
int A[N+5], F[105];
ll ways[105][105], FF[N+5], FI[N+5];
int n,m;
 
int f(int pos,int mod){
	if(pos==m){
		if(mod==0)return 1;
		return 0;
	}
	int &ret=memo[pos][mod];
	if(ret!=-1)return ret;
	ll acum=0LL;
	for(int i=0; i<m; ++i){
		acum += ( ways[pos][i] * f (pos+1, (mod+i>=m) ? mod+i-m : mod+i  )  ) %MOD   ;
		if(acum>=MOD)acum-=MOD;
	}
	ret=acum;
	return ret;
}
 
 int pot( ll  a,int b){
 	if(b==0)return 1;
 	ll ret= pot(a,b/2);
 	ret= (ret * ret)%MOD;
 	if(b&1)ret= ( (a%MOD) * ret )%MOD;
 	return (int)ret;
 }
 
 int comb(int n, int k){
 	ll ret=FF[n];
 	ret = ( ret * FI[k] )%MOD;
 	ret = ( ret * FI[n-k] )%MOD;
 	return (int)ret;
 }
 
void doit(){
	int q;
	scanf("%d%d",&n,&q);
	for(int i=0;i<n;++i){
		scanf("%d",&A[i]);
	}
	while(q--){
		scanf("%d",&m);
		for(int i=0;i<m;++i){
			F[i]=0;
			for(int j=0;j<m;++j){
				memo[i][j]=-1;
				ways[i][j]=0;
			}
		}
		for(int i=0;i<n;++i){
			int rem= ( (A[i]%m)+m )%m;
			F[rem]++;
		}
		for(int i=0;i<m;++i){
			for(int j=0;j<=F[i];++j){
				ways[i][ (i*j)%m ] = ( ways[i][ (i*j)%m ] +  comb(F[i], j ) )%MOD;
			}
		}
		printf("%d\n", f( 0, 0 ) );
	}
}
 
int main(){
	int t;
	FF[0]=1;
	for(int i=1;i<=N;++i)FF[i]=( FF[i-1] * i )%MOD;
	FI[N]=pot( FF[N], MOD-2);
	for(int i=N-1;i>=0;i--) FI[i]=( FI[i+1] * (i+1) )%MOD;
	scanf("%d",&t);
	while(t--)doit();
}