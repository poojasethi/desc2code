#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)
void change(int &x)
{
	if(x&1)x--;else x++;
}
int dp[1<<18],w[50][50],n;
int go(int mask)
{
	if(dp[mask]!=inf)return dp[mask];
	int ans=inf;
	int id;
	for(int i=0;i<n/2;i++)if(mask&(1<<i))id=i;
	for(int i=0;i<n/2;i++)if(mask&(1<<i)&&id!=i)
	{
		ans=min(ans,go(mask^(1<<i)^(1<<id))+w[2*i][2*id]);
	}
	return dp[mask]=ans;
}
int get(vector<pair<int,pii> >v)
{
	for(int i=0;i<n;i++)
	for(int j=0;j<n;j++)w[i][j]=inf;
	for(int i=0;i<n;i++)w[i][i]=0;
	FOREACH(it,v)
	{
		int a=it->x,b=it->y.x,c=it->y.y;
		w[a][b]=w[b][a]=c;
		//DBG(w[a][b])
	}
	for(int k=0;k<n;k++)
	for(int i=0;i<n;i++)
	for(int j=0;j<n;j++)
	w[i][j]=min(w[i][j],w[i][k]+w[k][j]);
	//for(int i=0;i<n;i++)DBG(vi(w[i],w[i]+n))
	for(int i=0;i<1<<(n/2);i++)dp[i]=inf;
	dp[0]=0;
	return go((1<<(n/2))-1);
}
int main()
{
	int T,m,i,j,k;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d",&n,&m);
		n<<=1;
		vector<pair<int,pii> >v;
		for(i=0;i<m;i++)
		{
			int a,b,c;
			scanf("%d%d%d",&a,&b,&c);
			v.pb(mp(a,mp(b,c)));
		}
		int res=get(v);
		FOREACH(it,v)
		{
			change(it->x);change((it->y).x);
		}
		res=min(res,get(v));
		printf("%d\n",res);
	}
}