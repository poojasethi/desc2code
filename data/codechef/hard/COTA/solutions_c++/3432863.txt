// -*- C++ -*-
// File: a.cpp
// Copyright (C) 2013
#include <algorithm>
#include <string>
#include <vector>
#include <queue>
#include <iostream>
#include <cmath>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <memory.h>
#include <cstdio>
#include <assert.h>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define rep(i,n) FOR(i,0,n)
#define CL(a,v) memset((a),(v),sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int,int> pii;

/*** TEMPLATE CODE ENDS HERE */

int N,n,MASK;
int e[36][36];
int a[18];
int dp[1<<18];

int match(int mask) {
    if(mask == MASK) return 0;
    int &ans = dp[mask];
    if(ans != -1) return ans;
    ans = INF;
    
    rep(i,n) {
        if(mask & (1<<i)) continue;
        FOR(j,i+1,n) {
            if(mask & (1<<j)) continue;
            
            ans = min(ans, match(mask|(1<<i)|(1<<j)) + e[a[i]][a[j]]);
        }
        break;
    }
    return ans;
}


int find_matching(int n) {
    CL(dp,-1);
    return match(0);
}

void solve() {
    int m;
    cin >> n >> m;
    N = 2*n;
    MASK = (1<<n)-1;
    
    rep(i,N) rep(j,N) e[i][j] = i==j ? 0 : INF;
    
    rep(i,m) {
        int x,y,c;
        cin >> x >> y >> c;
        e[x][y] = e[y][x] = c;
    }
    
    rep(k,N) rep(i,N) rep(j,N) e[i][j] = min(e[i][j], e[i][k] + e[k][j]);
    
    rep(i,N) a[i] = 2*i;
    int ans = find_matching(n);
    
    rep(i,N) a[i] = 2*i+1;
    ans = min(ans, find_matching(n));
    
    cout << ans << endl;
}

int main() {
#ifdef LOCAL_HOST
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
#endif

    ios_base::sync_with_stdio(false);
    
    int T;
    cin >> T;
    
    while(T--) solve();

#ifdef LOCAL_HOST
    printf("TIME: %.3lf\n",double(clock())/CLOCKS_PER_SEC);
#endif

    return 0;
}
