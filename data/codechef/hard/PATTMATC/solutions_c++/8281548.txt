#include <bits/stdc++.h>

using namespace std;

const int maxn = 100100;

string s, t, temp;
string arr[maxn];
int lps[maxn], k_arr[maxn], match[510][maxn];

void compute(int k)
{
	int i, j, len;
	lps[0] = 0;
	i = 1, j = 0;
	len = arr[k].size();
	while(i<len){
		if(arr[k][i]==arr[k][j]){
			j++;
			lps[i] = j;
			i++;
		}
		else{
			if(j!=0)
				j = lps[j-1];
			else{
				lps[i] = 0;
				i++;
			}
		}
	}
}

void kmp(int k)
{
	int i, j, len, n;
	i = j = 0;
	len = arr[k].size();
	n = s.size();
	while(i<n){
    	if(arr[k][j]==s[i]){
        	j++;
        	i++;
      	}
 		if(j==len){
 			k_arr[i-j] = 1;
        	j = lps[j-1];
      	}
      	else if(i<n && arr[k][j]!=s[i]){
        	if(j!=0)
        		j = lps[j-1];
        	else
     	    	i = i+1;
      	}
    }
}

int main()
{
	//freopen("i.txt", "r", stdin);
	int T, i, j, k, n, m, p, var;
	scanf("%d", &T);
	while(T--){
		cin >> t >> s;
		n = s.size();
		m = t.size();
		j = 0;
		for(i=0; i<m; ){
			if(t[i]=='*'){
				i++;
				continue;
			}
			temp = "";
			k = i;
			while(k<m){
				if(t[k]=='*'){
					k++; 
					break;
				}
				else
					temp+=t[k];
				k++;
			}
			i = k;
			arr[j++] = temp;
		}
		for(i=j-1; i>=0; i--){
			compute(i);
			for(p=0; p<=n; p++)
				k_arr[p] = 0;
			kmp(i);
			var = match[i][n] = -1;
			for(p=n-1; p>=0; p--){
				if(i==(j-1)){
					if(k_arr[p])
						match[i][p] = p+arr[i].size();
					else
						match[i][p] = match[i][p+1];
				}
				else{
					//cout << p << " " << var << " " << p-1+arr[i].size() << " " << match[i+1][p-1+arr[i].size()] << "\n";
					if(k_arr[p])
						match[i][p] = var;
					else
						match[i][p] = match[i][p+1];
					if(var==-1 && (p-1+arr[i].size()<n) && match[i+1][p-1+arr[i].size()]!=-1)
						var = match[i+1][p-1+arr[i].size()];
					else
						var = min(var, match[i+1][p-1+arr[i].size()]);
				}
			}
			/*cout << "here\n";
			for(p=0; p<=n; p++)
				cout << match[i][p] << " ";
			cout << "\n";*/
		}
		if(j==0){
			for(i=0; i<n; i++)
				match[0][i] = i+1;
		}
		for(i=0; i<n; i++)
			printf("%d ", match[0][i]);
		printf("\n");
	}
	return 0;
}