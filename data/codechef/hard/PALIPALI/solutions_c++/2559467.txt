#include<bits/stdc++.h>
#define bug(x) cerr << #x << " = " << x << endl;
using namespace std;

typedef long long ll;
typedef pair<int,int> pii;

const int MAX = 100005;
const int oo = 1 << 29;

char s[MAX];
int p[MAX];
int n;
pii pos[MAX];
ll tree[MAX];

void update(int a)
{
	for( ;a <= n; a += a & -a)
		tree[a] ++;
}

ll read(int a)
{
	ll ret = 0;
	for( ;a > 0; a -= a & -a)
		ret += tree[a];
	return ret;
}

void manacher(int * ans, int r)
{
	for (int i = 0, j = 0, k; i < n; i += k, j = max(j - k, 0))
	{
		while (i - j >= 0 && i + j + r < n && s[i - j] == s[i + j + r])
			j++;
		ans[i] = j;
		for (k = 1; k < j && ans[i - k] != j - k; k++)
			ans[i + k] = min(ans[i - k], j - k);
	}
}

ll solve()
{
	n = strlen(s);

	memset(tree, 0, (n + 1) * sizeof(ll) );
	memset(p, 0, (n + 1) * sizeof (int));

	manacher(p, 1);

	for( int i = 0; i < n; ++ i)
		pos[i] = pii(2 * i - p[i], i);

	sort(pos, pos + n);

	ll ret = 0;
	for( int i = 0, j = 0; i < n; ++ i)
	{
		while( j < n && pos[j].first <= 2 * i)
		{
			update(pos[j].second + 1);
			++ j;
		}
		ret += read(i + p[i] + 1) - read(i + 1);
	}

	return ret;
}
int main()
{
	int runs;
	scanf("%d", &runs);

	while (runs--)
	{
		scanf("%s", s);
		printf("%lld\n", solve());
	}

	return 0;
}

