#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
#include<assert.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define pi acos(-1)
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010

#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)

char s[N];
int dp[N],f[N],n;
void update(int x,int v)
{
	while(x<=n)f[x]+=v,x+=x&-x;
}
int query(int x)
{
	int ans=0;
	while(x>0)ans+=f[x],x-=x&-x;
	return ans;
}
int query(int x,int y)
{
	if(x>y)return 0;
	return query(y)-query(x-1);
}
int main()
{
	int T,m,i,j,k,q;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%s",s);
		n=strlen(s);
		int id=0,r=-1;
		for(i=0;i<n;i++)
		{
			if(i<=r)j=min(r-i+1,dp[id+id-i]);
			else j=0;
			while(i-1-j>=0&&i+j<n&&s[i-1-j]==s[i+j])j++;
			dp[i]=j;
			if(i+j-1>r)id=i,r=i+j-1;
		}
		set<pii>a;
		memset(f,0,sizeof(f));
		ll ans=0;
		set<pii>::iterator it;
		for(i=n-1;i>0;i--)
		if(dp[i])
		{
			int x=i+1,y=i+dp[i]/2;
			while(a.size())
			{
				it=a.end();it--;
				if(it->x>i)update(it->y,-1),a.erase(it);
				else break;
			}
			ans+=query(x,y);
			a.insert(mp(i-dp[i],i));
			update(i,1);
		}
		printf("%lld\n",ans);
	}
	return 0;
}