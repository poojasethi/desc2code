//This is the painkiller...
#include <bits/stdc++.h>
using namespace std;
#define mem(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define mp make_pair
#define sz(x) int((x).size())
#define x first
#define y second
#define all(a) (a).begin(),(a).end()
#define rep(i,n) for(int i=0;i<int(n);i++)
#define repi(i,a,n) for(int i=int(a);i<int(n);i++)
#define repe(i,a) for(__typeof((a).begin()) i=(a).begin();i!=(a).end();i++)

typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;

void manacher(char *p,int *q)
{
	string s="$#";
	for(int i=0;p[i];i++)
	{
		s.pb(p[i]);
		s.pb('#');
	}
	s.pb('%');
	int id=0,mx=0;
	q[id]=0;
	repi(i,1,sz(s)-1)
	{
		q[i]=(i<mx?min(mx-i,q[2*id-i]):1);
		while(s[i+q[i]]==s[i-q[i]])q[i]++;
		if(i+q[i]>=mx)
		{
			mx=i+q[i];
			id=i;
		}
	}
	q[sz(s)]=-1;
}

char s[100005];
int p[200010];
int tree[200010];

int read(int id)
{
	int ret=0;
	while(id>0)
	{
		ret+=tree[id];
		id-=id&-id;
	}
	return ret;
}

void update(int id,int v)
{
	while(id<200010)
	{
		tree[id]+=v;
		id+=id&-id;
	}
}

int main()
{
	//~ freopen("in.txt","r",stdin);
	int tst;
	scanf("%d",&tst);
	while(tst--)
	{
		scanf("%s",s);
		manacher(s,p);
		ll ans=0;
		mem(tree,0);
		vector<pii> r;
		for(int i=1;p[i]!=-1;i+=2)r.pb(mp(2*i-p[i]+1,i));
		sort(all(r));
		int id=0;
		
		for(int i=1;p[i]!=-1;i+=2)
		{
			update(i,-1);
			while(id<sz(r) && r[id].x<=2*i)
			{
				update(r[id].y,1);
				id++;
			}
			ans+=read(p[i]+i-1);
		}
		printf("%lld\n",ans);
	}
	return 0;
}
