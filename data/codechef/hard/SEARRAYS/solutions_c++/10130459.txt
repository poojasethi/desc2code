//Template by @sai krishna
#include <map>
#include <set>
#include <queue>
#include <cmath>
#include <stack>
#include <vector>
#include <cstdio>
#include <bitset>
#include <sstream>
#include <cassert>
#include <cstring>
#include <utility>
#include <iterator>
#include <iostream>
#include <algorithm>
#include <functional>
using namespace std;
#define rep(i,a,n) for(int i=a;i<n;i++)
#define srt(x) sort(x.begin(),x.end())
#define clear(x,val) memset(x,val,sizeof x)
#define rl(x) scanf("%lld",&x)
#define ri(x) scanf("%d",&x)
#define gc getchar_unlocked
#define pi2 pair<pii,int>
#define pii pair<int,int>
#define MOD 1000000007
#define LL long long
#define MAX 100000001
#define ss second
#define INF 1<<32
#define ff first
LL fact[2000054],inv_fact[2000054];
LL powerMOD(LL a,LL b)
{
	LL x=1,y=a;
	while(b)
	{
		if(b&1)
		x*=y;
		if(x>MOD)x%=MOD;
		y*=y;
		if(y>MOD)y%=MOD;
		b>>=1;
	}
	return x;
}
void factorial()
{
	inv_fact[0]=fact[0]=inv_fact[1]=1;
	for(int i=1;i<=2000050;i++)
	{
		fact[i]=(fact[i-1]*i)%MOD;
	}
    for(int i=2;i<=2000050;++i){
        inv_fact[i]=(powerMOD(i,MOD-2)*inv_fact[i-1])%MOD;
    }
}
LL nCr(LL n,LL r)
{
	return (fact[n]*inv_fact[n-r]%MOD * inv_fact[r])%MOD;
}
int main()
{
	int t;
	ri(t);
	while(t--)
	{
		LL n,k;
		rl(n),rl(k);
		LL ans[n+1];
		if(k==1)
		{
			cout<<(powerMOD(2,n))<<endl;
			continue;
		}
		ans[0]=1;
		ans[1]=(k==1)?2:1;
		for(int i=2;i<=n;i++)
		{
			if(i<k)
				ans[i]=1;
			else
				ans[i]=(ans[i-k]+ans[i-1])%MOD;
		}
		cout<<ans[n]<<endl;
	}
	return 0;
}  