#include<bits/stdc++.h>
using namespace std;

#define ll long long
#define mod 1000000007
int dp[100010];
ll modulo(ll a,ll b,ll c){ ////// (a^b)%c
long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
while(b > 0){
if(b%2 == 1){
x=(x*y)%c;
}
y = (y*y)%c; // squaring the base
b /= 2;
}
return x%c;
}
ll cal(int n,int k)
{
	if(dp[n]!=-1)
	 return dp[n];
	if(k>n)
	 return dp[n]=1;
	if(k==n)
	 return dp[n]=2;
	dp[n] = cal(n-1,k);
	dp[n]+= cal(n-k,k);
	dp[n]%=mod;
	return dp[n];
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,k;
		scanf("%d%d",&n,&k);
		memset(dp,-1,sizeof(dp));
		if(k==1)
		 {
		 cout<<modulo(2,n,mod)<<endl;
		 continue;
	     }
	     if(k>n)
	      {
	       cout<<1<<endl;
	       continue;
		  }
		  ll res = cal(n,k);
		  cout<<res<<endl;
		 
	}
}