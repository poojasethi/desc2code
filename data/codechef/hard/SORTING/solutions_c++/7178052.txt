#include<stdio.h>

int l[11000000],r[11000000],val[11000000],h,n,t[500500],pos[500500],i,st[500500],a,f,x[500500],y[500500],cst,hst,k;
long long c;

int update(int n,int from,int to,int exp){
    int id=h;
    val[id]=val[n]+1;
    h++;
    if(from==to)return id;
    int mid=(from+to)/2;
    if(exp<=mid){
        r[id]=r[n];
        l[id]=update(l[n],from,mid,exp);
    }
    else{
        l[id]=l[n];
        r[id]=update(r[n],mid+1,to,exp);
    }
    return id;
}

int fndseg(int nf,int nt,int from,int to,int k){
    if(from==to)return pos[from];
    int mid=(from+to)/2;
    if(val[l[nt]]-val[l[nf]]>=k)return fndseg(l[nf],l[nt],from,mid,k);
    else return fndseg(r[nf],r[nt],mid+1,to,k-val[l[nt]]+val[l[nf]]);
}

int main(){
    h=1;
    scanf("%d",&n);
    st[0]=0;
    for(i=1;i<=n;i++){
        scanf("%d",&pos[i]);
        t[pos[i]]=i;
    }
    h=1;
    for(i=1;i<=n;i++){
        st[i]=update(st[i-1],1,n,t[i]);
    }
    hst=1;
    cst=0;
    x[0]=1;
    y[0]=n;
    while(cst<hst){
        c+=y[cst]-x[cst]+1;
        k=fndseg(st[x[cst]-1],st[y[cst]],1,n,(y[cst]-x[cst]+2)/2);
        if(x[cst]<k-1){
            x[hst]=x[cst];
            y[hst]=k-1;
            hst++;
        }
        if(k+1<y[cst]){
            x[hst]=k+1;
            y[hst]=y[cst];
            hst++;
        }
        cst++;
    }
    printf("%lld\n",c);
}
