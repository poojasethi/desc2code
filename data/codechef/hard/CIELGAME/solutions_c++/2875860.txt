#include<iostream>
#include<cstdio>


using namespace std;
 
typedef pair<int, int> pii;
typedef long long ll;

#define REP(i,n) for(i = 0;i < (n);i++)
#define rep(i,a,b) for(i = (a);i < (b);i++)
#define MOD 1000000009
#define MAX 210
	
ll fact[MAX],fact_inv[MAX],inv[MAX];

void extended_euclid(ll x,ll y,ll *c,ll *a,ll *b){
  ll a0,a1,a2,b0,b1,b2,r0,r1,r2,q;
  r0=x; r1=y; a0=1; a1=0; b0=0; b1=1;
  while(r1>0){
    q=r0/r1; r2=r0%r1; a2=a0-q*a1; b2=b0-q*b1;
    r0=r1; r1=r2; a0=a1; a1=a2; b0=b1; b1=b2;
  }
  *c=r0; *a=a0; *b=b0;
}

ll get_inv(ll i, ll mod){
	ll a,b,c;
	extended_euclid(mod,i,&c,&a,&b);
	if(b < 0) b+= mod;
	return b%mod;
}

ll pow(ll a, ll b, ll mod){
	if(b == 0) return 1;
	ll pb2 = pow(a,b/2,mod);
	pb2 = (pb2 * pb2)%mod;
	if(b % 2) pb2 = (pb2 * a)%mod;
	return pb2;
}

ll P(int n, int k){
	if(k < 0 || k > n) return 0;
	return (fact[n]*fact_inv[n-k])%MOD;
}

ll C(int n, int k){
	if(k < 0 || k > n) return 0;
	return (((fact[n]*fact_inv[n-k])%MOD)*fact_inv[k])%MOD;
}

int main(){
	int T;
	cin >> T;
	ll f[MAX],ff[MAX];
	int i = 0, j = 0;
	rep(i,1,MAX) inv[i] = get_inv(i,MOD);
	fact[0] = 1;
	rep(i,1,MAX) fact[i] = (i*fact[i-1])%MOD;
	fact_inv[0] = 1;
	fact_inv[1] = 1;
	rep(i,2,MAX) fact_inv[i] = (fact_inv[i-1] * inv[i])%MOD;
	
	while(T--){
		int N,M,K;
		scanf("%d%d%d",&N,&M,&K);
		rep(i,1,N+1){
			if(M > K) ff[i] = (P(i,K)*pow(i-K,M-K,MOD))%MOD;
			else ff[i] = P(i,M);
			rep(j,1,i) ff[i] = ( ff[i] - C(i,j)*ff[j])%MOD;
			if(ff[i] < 0) ff[i] += MOD;
			f[i] = (ff[i]*fact_inv[i])%MOD;		
		}
		ll res = 0;
		rep(i,1,N+1) res +=f[i];
		res = res % MOD;
		printf("%d\n",int(res));
	}

}