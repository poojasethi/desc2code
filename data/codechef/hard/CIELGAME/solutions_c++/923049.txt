#include <iostream>
#include <string.h>
using namespace std;

typedef long long LL;
const LL MOD = 1000000009;

int t, n, m, k;
LL dp[205];
LL C[205][205];

int min(int a, int b) {return a < b ? a : b;}

LL POW(int a, int n)
{
    LL t = a, ret = 1;
    while (n)
    {
        if (n & 1) ret = (ret * t) % MOD;
        t = (t * t) % MOD;
        n >>= 1;
    }
    return ret;
}

int main()
{
    C[0][0] = 1;
    for(int i = 1; i <= 200; i++)
    {
        C[i][0] = 1;
        for(int j = 1; j <= i; j++)
            C[i][j] = (C[i - 1][j - 1] + C[i - 1][j]) % MOD;
    }
    cin >> t;
    while (t--)
    {
        cin >> n >> m >> k;
        int x = min(k, m);
        for(int i = 1; i <= n; i++)
        {
            dp[i] = 1;
            for(int j = 0; j < x; j++) dp[i] = (dp[i] * (i - j)) % MOD;
            if (m > k) dp[i] = (dp[i] * POW(i - k, m - k)) % MOD;
            for(int j = 1; j < i; j++) dp[i] = (dp[i] - (dp[j] * C[i][j]) % MOD) % MOD;
            if (dp[i] < 0) dp[i] += MOD;
        }
        LL t = 1, ans = 0;
        for(int i = 1; i <= n; i++)
        {
            t = (t * POW(i, MOD - 2)) % MOD;
            ans = (ans + (dp[i] * t) % MOD) % MOD;
        }
        cout << ans << endl;
    }
   
    return 0;
}
