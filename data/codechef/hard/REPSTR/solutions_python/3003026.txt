import sys

def get_int():
    return int(sys.stdin.readline())

def get_ints():
    return [int(i) for i in sys.stdin.readline().split()]

def find_max(line, pos, L, H):
    for i in range(H-L):
        new_pos = [ j + 1 for j in pos if j != len(line) - 1]
        #print 'new', new_pos
        if len(new_pos) < len(pos):
            return len(pos), L+i
        for i0 in range(len(new_pos) -1):
            if line[new_pos[i0]] != line[new_pos[i0+1]]:
                return len(pos), L+i
        pos = new_pos
    return len(pos), H

def run():
    while True:
        L, H = get_ints()
        if L == 0:
            break
        line = sys.stdin.readline()[:-1]
        # Find the maximun occurrence of length L
        dd = {}
        for i in range(len(line)-L+1):
            s = line[i:i+L]
            dd.setdefault(s, []).append(i+L-1)
        max_l = 0
        poses = []
        br = False
        #print line, dd
        for k, v in dd.viewitems():
            if len(v) > max_l:
                max_l = len(v)
                poses = [v,]
            elif len(v) == max_l:
                poses.append(v)
        max_l = 0
        r = None
        for pos in poses:
            m = find_max(line, pos, L, H)
            #print 'm', m
            if m[1] > max_l:
                r = m
                max_l = m[1]
        print r[0], r[1]


run()
