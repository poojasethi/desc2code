/*
 * File: repstr.cpp
 * Author: wym510 
 * Email: <wym6110@gmail.com>
 * Create Date: 2012-01-02 15:23:20
*/

#include <vector>
#include <string>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <iostream>
#include <fstream>
#include <sstream>
#include <queue>
#include <deque>
#include <stack>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#define S size()
#define B begin()
#define E end()
#define P push_back
#define fu(i,a,b) for(int i=a;i<b;++i)
#define fd(i,a,b) for(int i=b-1;i>=a;--i)
typedef long long int64;
using namespace std;

const int MaxL=120000;

char str[MaxL];
int _rk[MaxL*2],ss[MaxL],cnt[MaxL];
int sa[MaxL],rk[MaxL];
int h[MaxL];

void suffixarray(int n)
{
	memset(_rk,0,sizeof _rk);
	memset(cnt,0,sizeof(int)*2000);
	for(int i=0;i<n;++i) cnt[str[i]]++;
	for(int i=1;i<1000;++i) cnt[i]+=cnt[i-1];
	for(int i=0;i<n;++i) rk[i]=cnt[str[i]-1]+1;

	for(int l=1;l<n;l<<=1)
	{
		memset(cnt,0,sizeof(int)*(n+3));
		memcpy(_rk,rk,sizeof(int)*n);
		for(int i=0;i<n;++i) ++cnt[_rk[i+l]];
		for(int i=1;i<=n+2;++i) cnt[i]+=cnt[i-1];
		for(int i=n-1;i>=0;--i) sa[--cnt[_rk[i+l]]]=i;

		memset(cnt,0,sizeof(int)*(n+3));
		for(int i=0;i<n;++i) ++cnt[_rk[sa[i]]];
		for(int i=1;i<=n+2;++i) cnt[i]+=cnt[i-1];
		for(int i=n-1;i>=0;--i) ss[--cnt[_rk[sa[i]]]]=sa[i];

		rk[ss[0]]=1;
		for(int i=1;i<n;++i)
		{
			int j=ss[i],k=ss[i-1];
			
			rk[j]=rk[k];
			if(_rk[j]>_rk[k] || (_rk[j]==_rk[k] && _rk[j+l]>_rk[k+l])) ++rk[j];
		}
	}
	sa[0]=sa[n+1]=n+1;
	for(int i=0;i<n;++i) sa[rk[i]]=i; 
}

void lcp(int n)
{
	int j,k=0;

	h[0]=0;
	for(int i=0;i<n;h[rk[i++]]=k)
		for(k?k--:0,j=sa[rk[i]-1];str[j+k]==str[i+k];++k);
}

int st[MaxL],en[MaxL];
int f[MaxL],g[MaxL];

void precalc(int n)
{
	memset(cnt,0,sizeof(int)*(n+3));
	for(int i=1;i<=n;++i) cnt[h[i]]++;
	for(int i=1;i<=n+2;++i) cnt[i]+=cnt[i-1];
	for(int i=n;i;--i) ss[--cnt[h[i]]]=i;

	int rr=n-1,res=0;

	for(int i=0;i<=n+1;i++) st[i]=i+1,en[i]=i-1;
	for(int i=n;i;--i)
	{
		while(rr>=0 && h[ss[rr]]==i)
		{
			int u=ss[rr--];

			//cout<<u<<endl;
			st[en[u+1]]=st[u-1];
			en[st[u-1]]=en[u+1];
			res=max(res,en[u+1]-st[u-1]+1);
		}
		f[i]=res+1;
	}

	g[n]=n;
	for(int i=n-1;i>0;i--)
		f[i]==f[i+1]?g[i]=g[i+1]:g[i]=i;
}

void query(int ll,int rr)
{
	printf("%d %d\n",f[ll],min(g[ll],rr));
}

int main()
{
	int ll,rr,n;

	while(1)
	{
		memset(str,0,sizeof str);
		scanf("%d%d",&ll,&rr);
		if(ll==0 && rr==0) break;
		scanf("%s",str);
		suffixarray(n=strlen(str));
		lcp(n);precalc(n);
		
		/*cout<<"sa:";
		for(int i=0;i<=n;i++) cout<<sa[i]<<' ';
		cout<<endl;

		cout<<"rk:";
		for(int i=0;i<=n;i++) cout<<rk[i]<<' ';
		cout<<endl;

		cout<<"h:";
		for(int i=0;i<=n;i++) cout<<h[i]<<' ';
		cout<<endl;*/
		query(ll,rr);
	}
	return 0;
}

/* vim: set ts=4 sw=4: */

