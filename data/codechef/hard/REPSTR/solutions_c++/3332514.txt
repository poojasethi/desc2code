#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <map>
#include <vector>

#define REP(a,b) for (int a = 0; a < b; a++)
#define FOR(a,b,c) for (int a = b; a <= c; a++)
#define RESET(a,b) memset(a,b,sizeof a)

#define PII pair<int,int>
#define MP make_pair
#define PB push_back
#define F first
#define S second

#define EPS 1e-8
#define LL long long
#define MAXN 100005
#define K 2
using namespace std;

int L,H,N;
char sc[MAXN];
int B[K],BP[K][MAXN];

PII ar[MAXN];
int p;
int rank(int lim){
   p = 0;
   int cur[K];
   RESET(cur,0);
   REP(i,K){
      REP(j,lim){
         cur[i] = (cur[i] * B[i]) + (sc[j] - 'a');
      }
   }
   
   FOR(i,lim,N-1){
      ar[p++] = MP(cur[0], cur[1]);
//      if (lim == L) printf("%d\n", cur[0]);
        
      REP(j,2){
         cur[j] = (cur[j] * B[j]) + (sc[i] - 'a') - (BP[j][lim] * (sc[i-lim]-'a')); 
      }
   }
   ar[p++] = MP(cur[0], cur[1]);
   
   sort(ar, ar + p);
   
   int maks = 0;
   int naw = 0;
   int las = 0;
   REP(i,p){
      if (ar[i] != ar[las]){
         maks = max(maks, naw);
         las = i;
         naw = 1;
      }else{
         naw++;
      }
   }
   maks = max(maks, naw);
   
   return maks;
}

int main(){
   B[0] = 31;
   B[1] = 37;
   BP[0][0] = BP[1][0] = 1;
   REP(i,2){
      FOR(j,1,MAXN-1){
         BP[i][j] = BP[i][j-1] * B[i];
      }
   }
   		
	while (scanf("%d%d", &L, &H), L | H){
	   scanf("%s", sc);
	   N = strlen(sc);
	   
	   int sampel = rank(L);
	   int ki = L;
	   int ka = H;
	   int ans;
	   while (ki <= ka){
	      int tgh = (ki + ka) >> 1;
	      
	      int h = rank(tgh);
	      if (h == sampel){
	         ans = tgh;
	         ki = tgh + 1;
	      }else{
	         ka = tgh - 1;
	      }
	   }
	   
	   printf("%d %d\n", sampel, ans);
	}
   		
	return 0;
}