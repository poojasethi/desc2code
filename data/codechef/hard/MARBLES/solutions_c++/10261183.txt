// C++ program to prunsigned long long largest contiguous array sum
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <list>
#include <stdlib.h>  
#include <stdio.h>
   /* abs */

using namespace std;

unsigned long long nCk(unsigned long long n, unsigned long long k){
    unsigned long long ans= 1;
    for(unsigned long long i=0;i<k;i++){
        //cout<<ans<<endl;
        ans = ans * (n-i);
        ans = ans/(i+1);
    }
   
    return ans;
}
/*
unsigned long long rec_nCk(unsigned long long n, unsigned long long k){
    unsigned long long ans = 0;
    if(k==0){
        return 1;
    }
    if(n==k){
        return 1;
    }
    if(k==1){
        return n;
    }
    ans = rec_nCk(n-1,k-1) + rec_nCk(n-1,k);
    return ans;
}

unsigned long long iter_nCk(unsigned long long n, unsigned long long k){
    vector<unsigned long long> v1(k+1);
    vector<unsigned long long> v2(k+1);
    v1[0] = 1;
    v1[1] = 1;
    for(unsigned long long i=2;i<(k+1);i++){
        v1[i] = 0;
    }

    for(unsigned long long i=1;i<n;i++){
    v2[0] = 1;
    for(unsigned long long j=1;j<(k+1);j++){
        v2[j] = v1[j-1] + v1[j];
    }
v1 = v2;

    }
    return v1[k];
}
*/
int main()
{
int T;
cin>>T;
for(unsigned long long t=0;t<T;t++){
unsigned long long n;
unsigned long long k;
cin >> n;
cin>> k;
 n = n-1;
 k = k-1;
if(k > n/2){
    k = n-k;
}
cout<< nCk(n,k)<<endl;
}
    return 0;
}