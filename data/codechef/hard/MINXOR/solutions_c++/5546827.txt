#include <stdio.h>
#include <stdlib.h>
using namespace std;

int n,m,S,Sn,i,j,k,opt,l,r,val,ans1,ans2;
int a[300005],from[300005],L[1005],R[1005];
int Trie[5000005][2],sum[5000005],root[1005],cnt[1005],Xor[1005];

void build(int x)
{
	int tot=cnt[x],lim=root[x],l=L[x],r=R[x],X=Xor[x],i,j,k,p;
	for(;tot>=lim;--tot)Trie[tot][0]=Trie[tot][1]=sum[tot]=0;
	++tot;
	for(i=l;i<=r;++i)a[i]^=X;Xor[x]=0;
	for(i=l;i<=r;++i)
	{
		p=lim;
		for(j=15;j>=0;--j)
		{
			k=((a[i]&(1<<j))!=0);
			if(!Trie[p][k])Trie[p][k]=++tot;
			p=Trie[p][k];
		}
		++sum[p];
	}
	cnt[x]=tot;
}

void work(int x)
{
	int X=Xor[x],p=root[x],num=0,i,k;
	for(i=15;i>=0;--i)
	{
		k=((X&(1<<i))!=0);
		if(Trie[p][k])p=Trie[p][k];
		else p=Trie[p][1-k],num+=1<<i;
		if(num>ans1)return;
	}
	if(num<ans1)ans1=num,ans2=0;
	if(num==ans1)ans2+=sum[p];
}

int main()
{
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;++i)scanf("%d",&a[i]);
	S=500;Sn=1;L[1]=1;
	for(i=1;i<=n;++i)
	{
		from[i]=Sn;
		if(i%S==0&&i!=n)R[Sn]=i,L[++Sn]=i+1;
	}
	R[Sn]=n;
	for(i=1;i<=Sn;++i)root[i]=cnt[i]=(L[i]-1)*20;
	for(i=1;i<=Sn;++i)build(i);
	for(;m;--m)
	{
		scanf("%d%d%d",&opt,&l,&r);
		if(opt==1)
		{
			ans1=100000;ans2=0;
			if(from[l]==from[r])
			{
				val=Xor[from[l]];
				for(i=l;i<=r;++i)
				{
					if((a[i]^val)<ans1)ans1=a[i]^val,ans2=0;
					if((a[i]^val)==ans1)++ans2;
				}
			}
			else
			{
				val=Xor[from[l]];
				for(i=l,k=R[from[l]];i<=k;++i)
				{
					if((a[i]^val)<ans1)ans1=a[i]^val,ans2=0;
					if((a[i]^val)==ans1)++ans2;
				}
				val=Xor[from[r]];
				for(i=r,k=L[from[r]];i>=k;--i)
				{
					if((a[i]^val)<ans1)ans1=a[i]^val,ans2=0;
					if((a[i]^val)==ans1)++ans2;
				}
				for(i=from[l]+1,k=from[r]-1;i<=k;++i)work(i);
			}
			printf("%d %d\n",ans1,ans2);
		}
		else
		{
			scanf("%d",&val);
			if(from[l]==from[r])
			{
				for(i=l;i<=r;++i)a[i]^=val;
				build(from[l]);
			}
			else
			{
				for(i=l,k=R[from[l]];i<=k;++i)a[i]^=val;
				for(i=r,k=L[from[r]];i>=k;--i)a[i]^=val;
				build(from[l]);build(from[r]);
				for(i=from[l]+1,k=from[r]-1;i<=k;++i)Xor[i]^=val;
			}
		}
	}
}