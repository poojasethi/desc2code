#include <bits/stdc++.h>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 260005

template <class T> inline void Min(T &a,T b){if(a>b)a=b;}
template <class T> inline void Max(T &a,T b){if(a<b)a=b;}

int ans,mi;
struct node{
    int v,ch[2];
    void init(){
        v=ch[0]=ch[1]=0;
    }
}t[N*16];
int sz=0,top=0,root[N],f[N];
pii w[N];
int q[N*16];
int NewNode(){
    if(!top)return t[++sz].init(),sz;
    int x=q[top--];
    return t[x].init(),x;
}
    void insert(int p,int x,int v){
        int i,j;
        if(!root[p])root[p]=NewNode();
        p=root[p];
        for(i=15;i>=0;i--){
            j=x>>i&1;int u=p;
            if(t[p].ch[j]==0){
                t[p].ch[j]=NewNode();
            }
            p=t[p].ch[j];
            t[p].v+=v;
            if(t[p].v==0)q[++top]=p,t[u].ch[j]=0;
        }
        //FOREACH(it,q)delete *it;
    }
    void query(int p){
        int res=0,i,j,u=p;p=root[p];
        int mi=inf;
        for(i=15;i>=0;i--){
            int x=0;
            if(f[u]>>i&1)x=1;
            if(t[p].ch[x]){
                p=t[p].ch[x];continue;
            }
            p=t[p].ch[1-x],res|=1<<i;
        }
        w[u]=mp(res,t[p].v);
    }
int a[N];
int main(){
    int T,i,j,k,n,m;
    scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)scanf("%d",&a[i]);
    int sz=sqrt(n+0.);
    int id=0;
    for(i=0;i<n;i+=sz,id++){
        int l=i,r=min(n-1,i+sz-1);
        for(j=l;j<=r;j++)insert(id,a[j],1);
        query(id);
    }
    int l,r,x;
    while(m--){
        scanf("%d%d%d",&k,&l,&r);l--,r--;
        if(k==1){
            ans=0;mi=inf;
            if(r-l+1<=sz){
                for(i=l;i<=r;i++){
                    int x=a[i]^f[i/sz];
                    if(mi>x)mi=x,ans=1;
                    else if(mi==x)ans++;
                }
            }
            else{
                int st=l/sz,ed=r/sz;
                for(i=l;i<(st+1)*sz;i++){
                    int x=a[i]^f[st];
                    if(mi>x)mi=x,ans=1;
                    else if(mi==x)ans++;
                }
                for(i=ed*sz;i<=r;i++){
                    int x=a[i]^f[ed];
                    if(mi>x)mi=x,ans=1;
                    else if(mi==x)ans++;
                }
                for(i=st+1;i<ed;i++){
                    if(w[i].x<mi)mi=w[i].x,ans=w[i].y;
                    else if(w[i].x==mi)ans+=w[i].y;
                }
                
            }
            printf("%d %d\n",mi,ans);
        }
        else{
            scanf("%d",&x);
            if(r-l+1<=sz){
                for(i=l;i<=r;i++){
                    insert(i/sz,a[i],-1);
                    a[i]^=x;
                    insert(i/sz,a[i],1);
                }
            }
            else{
                int st=l/sz,ed=r/sz;
                for(i=st+1;i<ed;i++){
                    f[i]^=x;
                    query(i);
                }
                for(i=l;i<(st+1)*sz;i++){
                    insert(st,a[i],-1);
                    a[i]^=x;
                    insert(st,a[i],1);
                }
                query(st);
                for(i=ed*sz;i<=r;i++){
                    insert(ed,a[i],-1);
                    a[i]^=x;
                    insert(ed,a[i],1);
                }
                query(ed);
            }
        }
    }
    return 0;
}