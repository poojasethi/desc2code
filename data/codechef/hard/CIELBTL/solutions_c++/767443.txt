#include <stdio.h>

#define N 105
#define eps 1e-10

double dp[7][N][N];
double s[7][N][N];

inline int miin (int v, int s) {
    return v < s ? v : s;
}

int va, vb, sa, sb;
int i, j, k, n, m, x, y;
double z, t, res;

double l, r, c;

int main() {
    scanf("%d%d%d%d%d", &va, &vb, &sa, &sb, &m);

    l = 0;
    r = 1.0;
    while (r - l > eps) {
        c = (l + r) / 2;

        for (i = 1; i <= va; i ++) {
            for (j = 1; j <= vb; j ++) {
                for (k = 0; k <= m; k ++) {
                    if (k == 0) {
                        t = 0;
                    } else {
                        t = dp[k-1][(i+1)/2][(j+1)/2];
                    }
                    z = s[k][i-1][j] + s[k][i][j-1] - s[k][i-1][j-1];
                    s[k][i][j] = z;
                    if (i - sb > 0) {
                        z -= s[k][i-sb-1][j];
                    }
                    if (j - sa > 0) {
                        z -= s[k][i][j-sa-1];
                    }
                    if (i - sb > 0 && j - sa > 0) {
                        z += s[k][i-sb-1][j-sa-1];
                    }
                    if (sa >= j) {
                        z += (sa - j + 1) * miin(i, sb + 1);
                    }
                    if (sa >= j && sb >= i) {
                        z += c * (sa - j + 1) * (sb - i + 1);
                    }
                    z /= ((sa+1)*(sb+1)-1.0);
                    if (t < z) {
                        t = z;
                    }
                    dp[k][i][j] = t;
                    s[k][i][j] += t;
                }
            }
        }

        if (dp[m][va][vb] > c) {
            l = c;
        } else {
            r = c;
        }
    }
    printf("%.8lf\n", c);
    return 0;
}




                   








