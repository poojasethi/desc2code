    /*
    * File: cielbtl.cpp
    * Author: wym510
    * Email: <wym6110@gmail.com>
    * Create Date: 2011-12-19 16:12:40
    */
    #include <vector>
    #include <string>
    #include <map>
    #include <set>
    #include <list>
    #include <cmath>
    #include <ctime>
    #include <cstdio>
    #include <iostream>
    #include <fstream>
    #include <sstream>
    #include <queue>
    #include <deque>
    #include <stack>
    #include <cstdlib>
    #include <algorithm>
    #include <cstring>
    #define S size()
    #define B begin()
    #define E end()
    #define P push_back
    #define fu(i,a,b) for(int i=a;i<b;++i)
    #define fd(i,a,b) for(int i=b-1;i>=a;--i)
    typedef long long int64;
    using namespace std;
    const int MaxMp=7,MaxHp=230,M=104,St=110;
    double f[MaxMp][MaxHp][MaxHp];
    double sum[MaxMp][MaxHp][MaxHp];
    double ans;
    inline void calcsum(int i,int j,int k)
    {
    sum[i][j][k]=sum[i][j-1][k]+sum[i][j][k-1]-sum[i][j-1][k-1];
    }
    inline void insert(int i,int j,int k,double x)
    {
    j+=St;k+=St;
    f[i][j][k]=x;sum[i][j][k]+=x;
    }
    inline double recsum(int i,int j,int k,int sa,int sb)
    {
    return sum[i][j][k]-sum[i][j-sa-1][k]-sum[i][j][k-sb-1]+sum[i][j-sa-1][k-sb-1];}
    double dp(int va,int vb,int sa,int sb,int ma)
    {
    double tot=(sa+1)*(sb+1)-1;
    for(int i=0;i<=ma;i++)
    for(int j=-M;j<=va;j++) for(int k=-M;k<=vb;k++)
    {
    calcsum(i,j+St,k+St);
    if(j<=0 && k<=0) insert(i,j,k,ans);
    else if(j<=0) insert(i,j,k,0);
    else if(k<=0) insert(i,j,k,1);
    else
    {
    double tmp=recsum(i,j+St,k+St,sa,sb)/tot;
    if(i>0) tmp=max(tmp,f[i-1][(j+1)/2+St][(k+1)/2+St]);
    insert(i,j,k,tmp);
    }
    }
    return f[ma][va+St][vb+St];
    }
    int main()
    {
    int va,vb,sa,sb,ma;
    cin>>va>>vb>>sa>>sb>>ma;
    double low=0,high=1;
    while(low+1e-7<=high)
    {
    ans=(low+high)/2.0;
    if(dp(va,vb,sb,sa,ma)>ans) low=ans;
    else high=ans;
    }
    printf("%.10lf\n",(low+high)/2.0);
    return 0;
    }
    /* vim: set ts=4 sw=4: */ 