//http://www.codechef.com/download/Solutions/2012/June/Setter/FLY.cpp
#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <string>

#define all(i,n) for(i = 0; i < (n); i++)
#define SET(p) memset(p,-1,sizeof(p))
#define CLR(p) memset(p,0,sizeof(p))
#define maX(a,b)	((a)>(b)?(a):(b))
#define miN(a,b)	((a)<(b)?(a):(b))
#define S(n)	scanf("%d",&n)
#define P(n)	printf("%d\n",n)
#define Sl(n)	scanf("%lld",&n)
#define Pl(n)	printf("%lld\n",n)
#define Sf(n)   scanf("%lf",&n)
#define Ss(n)   scanf("%s",n)
#define LL long long
#define ULL unsigned long long
#define pb push_back
using namespace std;
LL intC,doubleC;
char strC[35];
void processC()
{
    int len=strlen(strC),i,d;
    intC=0;doubleC=0;
    for(i=0;i<len;i++)
    {
        if(strC[i]=='.')
            break;
        intC*=10;
        intC+=strC[i]-'0';
    }
    i++;
    for(d=0;i<len;i++,d++)
    {
        doubleC*=10;
        doubleC+=strC[i]-'0';
    }
    for(;d<9;d++)
    {
        doubleC*=10;
    }
}
void calcAns(LL P,LL F,LL C1,LL C2)
{
    LL D10=1000000000;
    LL F1=F/D10,F2=F%D10,D1,D2,IANS,DANS;
    D1=(C2*F2)/D10;
    D2=(C2*F2)%D10;
    IANS=P+C1*F1*D10+C2*F1+C1*F2+D1;
    DANS=D2;
    printf("%lld.%09lld\n",IANS,DANS);
}
int main()
{
LL t,n,m,i,a1,b1,a2,b2;
LL A,B;
Sl(t);
while(t--)
{
    Sl(n);Ss(strC);Sl(m);
    if(m)
    {
        Sl(a1);Sl(b1);
    }
    if(m==2)
    {
        Sl(a2);Sl(b2);
    }
    processC();
    //printf("%lld %lld\n",intC,doubleC);
    if(intC<2)
    {
        A=n*(n-1);
        B=n*(n-1)/2-m;
    }
    else if(m<2 || a1==a2 || a1==b2 || b1==a2 || b1==b2)
    {
        A=((n-1)*(n-2))*2;
        A+=(n-1)*2;
        B=n-1-m;
    }
    else
    {
        A=((n-2)*(n-3))*2;
        A+=(n-2)*2;
        A+=2*((n-3)*3+2+1);
        B=n-1-m;
        if(intC<2*(n-2))
        {
            B++;
            A-=2*(n-2);
        }
    }
    //printf("%lld %lld\n",A,B);
    calcAns(A,B,intC,doubleC);
}
return 0;
}
