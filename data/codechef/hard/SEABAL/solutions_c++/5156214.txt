#include<bits/stdc++.h>
using namespace std;

typedef pair<int, int> pii;

int ans;
int ballons[111111];
pii query[111111];
vector<int> contains[111111];
bool empty[111111];
int fa[111111];
int get(int x) {
	if (x == fa[x]) return x;
	return fa[x] = get(fa[x]);
}

void merge(int a, int b) {
	a = get(a);
	b = get(b);
	if (contains[a].size() < contains[b].size()) swap(a, b);

	fa[b] = a;
	if (a != b) {
		for (vector<int> :: iterator it = contains[b].begin(); it != contains[b].end(); ++it) {
			contains[a].push_back(*it);
		}
	}
	for (vector<int> :: iterator it = contains[b].begin(); it != contains[b].end(); ++it) {
		if (!empty[*it]) {
			if (get(query[*it].first) == get(query[*it].second)) {
				++ans;
				empty[*it] = true;
			}
		}
	}
}
int main() {

//	freopen("Din","r",stdin);

	int n, m;
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; ++i) scanf("%d", &ballons[i]);
	for (int i = 0; i < m; ++i) {
		int l, r; scanf("%d %d", &l, &r);
		query[i] = pii(l, r);
		contains[l].push_back(i);
		contains[r].push_back(i);
	}
	for (int i = 1; i <= n; ++i) fa[i] = i;
	int Q; scanf("%d", &Q);
	ans = 0;
	while (Q--) {
		int x; scanf("%d", &x);
		x += ans;
		if (!ballons[x]) {
			printf("%d\n", ans);
			continue;
		}
		if (!--ballons[x]) {
			merge(x, x);
			if (x > 1 && ballons[x-1] == 0) merge(x-1, x);
			if (x < n && ballons[x+1] == 0) merge(x+1, x);
		}
		printf("%d\n", ans);
	}

	return 0;
}
