#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <set>
#include <cctype>
using namespace std;

const int N = 1e5 + 5;
int a[N], fl[N], fr[N];
multiset< pair<int, int> > TT[N * 4];
int ans[N], tot;
int bo[N];

void add(int k, int m, int n, int l, int r, int i) {
    if (m > l || n < l) return;
    TT[k].insert(make_pair(r, i));
    if (m == n) return;
    int z1 = k << 1, z2 = z1 + 1, mid = m + n >> 1;
    add(z1, m, mid, l, r, i);
    add(z2, mid + 1, n, l, r, i);
}

int find(int x, int f[]) {
    if (f[x] != x) f[x] = find(f[x], f);
    return f[x];
}

void solve(int k, int m, int n, int l, int r) {
    if (m > r || n < l) return;
    if (m >= l && n <= r) {
	multiset<pair<int, int> >::iterator it;
	while (1) {
	    it = TT[k].begin();
	    if (it == TT[k].end() || it -> first > r) break;
	    int c = it -> second;
	    if (!bo[c]) ++tot, bo[c] = 1;
	    TT[k].erase(it);
	}
	return ;
    }
    int z1 = k << 1, z2 = z1 + 1, mid = m + n >> 1;
    solve(z1, m, mid, l, r);
    solve(z2, mid + 1, n, l, r);
}

void READ(int &x) {
    x = 0;
    int ch;
    while (ch = getchar(), !isdigit(ch));
    x = ch - '0';
    while (ch = getchar(), isdigit(ch))
	x = x * 10 + ch - '0';
}

int main() {
    int n, m;
    while (scanf("%d%d", &n, &m) == 2) {
	tot = 0;
	memset(bo, 0, sizeof(bo));
	for (int i = 0; i < N * 4; ++i)
	    TT[i].clear();
	for (int i = 0; i <= n + 1; ++i) 
	    fl[i] = fr[i] = i;
	for (int i = 1; i <= n; ++i)
	    READ(a[i]);//scanf("%d", &a[i]);
	for (int i = 1; i <= m; ++i) {
	    int l, r;
	    //scanf("%d%d", &l, &r);
	    READ(l);
	    READ(r);
	    add(1, 1, n, l, r, i);
	}
	int K;
	scanf("%d", &K);
	for (int i = 1; i <= K; ++i) {
	    int x;
	    scanf("%d", &x);
	    x += ans[i - 1];
	    if (a[x] == 0) 
		ans[i] = tot;
	    else if (--a[x] == 0) {
		fl[x] = find(x - 1, fl);
		fr[x] = find(x + 1, fr);
		int l = find(x, fl) + 1, r = find(x, fr) - 1;
		solve(1, 1, n, l, r);
		ans[i] = tot;
	    }
	    printf("%d\n", ans[i]);
	}
    }
    return 0;
}

