#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;


int a[100005];
int lef[100005];
int righ[100005];

vector <int> v[100005];

int main()
{
    int n,m,x,y,q,ans=0,k;
    cin >> n >> m;
    for ( int i = 1; i <= n; i++ ) {
        lef[i] = righ[i] = i;
        cin >> a[i];
    }
    lef[0] = righ[0] = 0;
    lef[n+1] = righ[n+1] = n+1;
    while ( m-- ) {
          cin >> x >> y;
          v[x].push_back(y);
    }
    for ( int i = 1; i <= n; i++ ) {
        sort(v[i].begin(),v[i].end());
        reverse(v[i].begin(),v[i].end());
    }
    cin >> q;
    while ( q-- ) {
          cin >> k;
          k += ans;
          a[k]--;
          if ( a[k] == 0 ) {
               lef[k] = lef[k-1];
               righ[k] = righ[k+1];
               while ( lef[k] != lef[lef[k]] ) {
                     lef[k] = lef[lef[k]];
               }
               while ( righ[k] != righ[righ[k]] ) {
                     righ[k] = righ[righ[k]];
               }
          //     cout << k << " " << lef[k] << " " << righ[k] << endl;
               for ( int j = lef[k]+1; j <= righ[k]-1; j++ ) {
                   while ( !(v[j].empty())  && v[j].back() <= righ[k]-1 ) {
                         ans++;
                         v[j].pop_back();
                   }
               }
          }
          cout << ans << endl;
    }
    
    return 0;
}
