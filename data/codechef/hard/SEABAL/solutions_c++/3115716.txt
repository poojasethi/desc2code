#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <cassert>


typedef std::vector<int> VI;

using namespace std;

#define gc getchar_unlocked

#define REP(k,a,b) for(typeof(a) k=(a); k <= (b); ++k)			// inclusive for
#define REPR(i,a,b) for( typeof(a) i=(a) ; i>=(b); --i)
#define ALL(c) (c).begin(), (c).end() 
#define T(t) int t=read<int>(); while(t--) 

template <typename T>
inline T read()
{
	register T x=0;
	register char c;
	int sign=1;
	while((c=gc())<48 || c>'9') if(c=='-') sign=-1;
	x=c-'0';
	while((c=gc())>='0' && c<='9')
		x=(x<<3)+(x<<1)+c-'0';
	return x*sign;
}


VI query[100005];
int balloons[100005];
int rght[100005];

int main() 
{
	int n= read<int>(),m=read<int>(), ans=0;
	REP(i,1,n) 
		balloons[i] = read<int>();
	rght[n+1] = n+1;
	REPR(i,n,1) 
		rght[i] = balloons[i]>0 ? i : balloons[i+1];
	
	REP(i,1,m)
	{
		int a = read<int>(); int b = read<int>();
		query[a].push_back(b);
	}
	for(int i=1; i<=n; i++) 
		sort(ALL(query[i]),greater<int>());
	
	T(k)
	 {
		int x = read<int>();
		x+=ans;
		balloons[x]--;
		if(!balloons[x]) {
			int b = rght[x+1];
			for(int i=x;rght[i]==x;i--) {
				while(query[i].size() && query[i].back()<b) {
					query[i].pop_back();
					ans++;
				}
				rght[i] = b;
			}
		}
		printf("%d\n", ans);;
	}
	return 0;
}


