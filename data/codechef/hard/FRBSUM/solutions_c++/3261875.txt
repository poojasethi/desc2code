#include <cstdio>
#include <cstring>

using namespace std;

#define MAXN 100005

int b[MAXN],a[18][MAXN],sum[18][MAXN];

void merge_sort(int lvl, int l, int r){
    if(l == r) a[lvl][l] = b[l];
    else{
        int mi = (l + r) >> 1;
        
        merge_sort(lvl + 1,l,mi);
        merge_sort(lvl + 1,mi + 1,r);
        
        int p1 = l,p2 = mi + 1,p3 = l;
        
        while(p1 <= mi && p2 <= r){
            if(a[lvl + 1][p1] <= a[lvl + 1][p2])
                a[lvl][p3++] = a[lvl + 1][p1++];
            else
                a[lvl][p3++] = a[lvl + 1][p2++];
        }
        
        while(p1 <= mi) a[lvl][p3++] = a[lvl + 1][p1++];
        while(p2 <= r) a[lvl][p3++] = a[lvl + 1][p2++];
    }
}

int query(int lvl, int l, int r, int x, int y, int Q){
    if(r < x || l > y) return 0;
    
    if(x <= l && r <= y){
        int lo = l - 1,hi = r,mi;
        
        while(lo < hi){
            mi = (lo + hi + 1) >> 1;
            
            if(a[lvl][mi] > Q) hi = mi - 1;
            else lo = mi;
        }
        
        return sum[lvl][lo + 1] - sum[lvl][l];
    }
    
    int mi = (l + r) >> 1;
    
    return query(lvl + 1,l,mi,x,y,Q) + query(lvl + 1,mi + 1,r,x,y,Q);
}

int main(){
    int N,M,l,r;
    
    scanf("%d",&N);
    
    for(int i = 0;i < N;++i)
        scanf("%d",&b[i]);
    
    memset(a,0,sizeof a);
    merge_sort(0,0,N - 1);
    
    for(int i = 0;i < 18;++i){
        sum[i][0] = 0;
        
        for(int j = 0;j < N;++j)
            sum[i][j + 1] = sum[i][j] + a[i][j];
    }
    
    scanf("%d",&M);
    
    while(M--){
        scanf("%d %d",&l,&r);
        --l; --r;
        
        int cur = 0,nxt;
        
        while(true){
            nxt = query(0,0,N - 1,l,r,cur + 1);
            if(nxt == cur) break;
            cur = nxt;
        }
        
        printf("%d\n",cur + 1);
    }
    
    return 0;
}