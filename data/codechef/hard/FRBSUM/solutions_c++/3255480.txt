#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<ctype.h>
#include<string.h>
#include<math.h>
#include<string>
#include<deque>
#include<iostream>
#include<set>
#include<map>
#include<vector>
#include<algorithm>
#include<bitset>
#include<stack>
#include<queue>
#include<sstream>

#define MODM 1000000007
#define MAXM 2147483647
#define MAXML 9223372036854775807LL
#define Pi 3.14159265358979323846264338327950288419716939937510582
#define EPS 1e-10

#define ff first
#define ss second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define mp make_pair
#define L(x) x.length()
#define B(x) x.begin()
#define E(x) x.end()
#define F(x) x.front()
#define SZ(x) x.size()
#define CLR(x) x.clear()
#define SORT(x) sort(x.begin(),x.end())
#define REV(x) reverse(x.begin(),x.end())
#define FOR(i,x,y) for(int i=x;i<y;i++)
#define S(x) scanf("%d",&x)
#define SL(x) scanf("%lld",&x)
#define SD(x) scanf("%lf",&x)
#define SC(x) scanf("%1s",&x)
#define SS(x) scanf("%s",x)
#define DUM() scanf("%c",&dum)
#define READ(x) freopen(x,"r",stdin)
#define WRITE(x) freopen(x,"w",stdout)
#define FILL(x,y) memset(x,y,sizeof(x))
#define IT iterator

using namespace std;
typedef long long int lli;
typedef unsigned long long int llu;
typedef pair<int,int> P;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef vector< P > VP;
typedef vector< VP > VVP;
typedef vector<string> VS;
typedef vector< VS> VVS;
typedef map<int,int> MAP;

lli gcd(lli a,lli b){if(a==0)return(b);else return(gcd(b%a,a));}
lli fastpow(lli a,lli n,lli temp){if(n==0) return(1);if(n==1)return((a*temp)%MODM); if(n&1)temp=(temp*a)%MODM;return(fastpow((a*a)%MODM,n/2,temp));}
char dum;

VVI v,sum;
int a[100005];
void init(int nd,int l,int r){
	
	if(l==r){
		v[nd].pb(a[l]);
		sum[nd].pb(a[l]);
		return ;
	}
	int nnd=nd<<1;
	int m=(l+r)>>1;
	init(nnd,l,m);
	init(nnd+1,m+1,r);
	int p1=0,p2=0;
	
	while(p1<SZ(v[nnd]) and p2<SZ(v[nnd+1])){
		if(v[nnd][p1]<=v[nnd+1][p2]){
			v[nd].pb(v[nnd][p1]);
			p1++;
		}
		else{
			v[nd].pb(v[nnd+1][p2]);
			p2++;
		}
	}
	for(;p1<SZ(v[nnd]);p1++)
		v[nd].pb(v[nnd][p1]);
	
	for(;p2<SZ(v[nnd+1]);p2++)
		v[nd].pb(v[nnd+1][p2]);
	
	sum[nd].pb(v[nd][0]);
	FOR(i,1,SZ(v[nd])){
		sum[nd].pb(v[nd][i]+sum[nd][i-1]);
	}
	return ;
}
int find_sum(int nd,int l,int r,int i,int j,int upto){
	
	if(i>r or j<l){
		return 0;
	}
	if(i<=l and r<=j){
		int beg=0,end=SZ(v[nd])-1,mid,c=-1;
		while(beg<=end){
			mid=(beg+end)/2;
			if(v[nd][mid]<=upto){
				c=mid;
				beg=mid+1;
			}
			else end=mid-1;
		}
		if(c==-1)
			return 0;
		return sum[nd][c];
	}
	int nnd=nd*2,m=(l+r)/2;
	return find_sum(nnd,l,m,i,j,upto) + find_sum(nnd+1,m+1,r,i,j,upto);
}
int main()
{
	#ifndef ONLINE_JUDGE
	READ("read.txt");
	#endif
	int n,m,x,y;
	S(n);
	FOR(i,0,n){
		S(a[i]);
	}
	v=sum=VVI(500000);
	
	init(1,0,n-1);
	
	S(m);
	while(m--){
		S(x),S(y);
		x--,y--;
		int sum=0,nsum;
		while(1){
			nsum=find_sum(1,0,n-1,x,y,sum+1);
			if(nsum==sum)
				break;
			sum=nsum;
		}
		printf("%d\n",nsum+1);
	}
	return 0;
}
