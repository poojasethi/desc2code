#include <cstdio>
#include <vector>
#include <set>
#include <algorithm>
using namespace std;
int n,mf,m,i,j,xs,x,y,num,a[111][5],p[444];
vector <int> b[111],c[111],g[444],f[444];
set <pair <int, int> > s;
set <pair <int, int> > :: iterator it;
long long res;
long long sump(long long l, long long r) {
//  printf("sump %I64d %I64d = %I64d\n",l,r,((l+r)*(r-l+1))/2);
  if (l>r) return 0;
  return ((l+r)*(r-l+1))/2;
}
int main() {
  scanf("%d%d%d",&n,&mf,&m);
  for (i=0; i<m; i++) {
    for (j=0; j<5; j++) scanf("%d",&a[i][j]);
    b[a[i][0]].push_back(a[i][1]);
    b[a[i][3]].push_back(a[i][4]);
  }
  for (i=1; i<=n; i++) {
    b[i].push_back(1);
    b[i].push_back(mf);
    sort(b[i].begin(),b[i].end());
    b[i].resize(unique(b[i].begin(),b[i].end())-b[i].begin());
    for (j=0; j<b[i].size(); j++) {
      c[i].push_back(num++);
      if (j) {
        g[num-1].push_back(num-2); f[num-1].push_back(b[i][j]-b[i][j-1]);
        g[num-2].push_back(num-1); f[num-2].push_back(b[i][j]-b[i][j-1]);
      }
    }
    if (i>1) {
      g[c[i][0]].push_back(c[i-1][0]); f[c[i][0]].push_back(1);
      g[c[i-1][0]].push_back(c[i][0]); f[c[i-1][0]].push_back(1);
    }
  }
  for (i=0; i<m; i++) {
    for (j=0; j<b[a[i][0]].size(); j++) if (b[a[i][0]][j]==a[i][1]) { x=c[a[i][0]][j]; break; }
    for (j=0; j<b[a[i][3]].size(); j++) if (b[a[i][3]][j]==a[i][4]) {
      y=c[a[i][3]][j];
      g[x].push_back(y); f[x].push_back(a[i][2]);
      g[y].push_back(x); f[y].push_back(a[i][2]);
      break;
    }
  }
  scanf("%d",&m);
  while (m--) {
    scanf("%d%d",&x,&y); xs=x;
    for (i=0; i<num; i++) p[i]=1000000000;
    for (j=0; j<b[x].size(); j++) if (b[x][j]>=y) {
      i=c[x][j];
      p[i]=b[x][j]-y;
      s.insert(make_pair(p[i],i));
      if (j>0) {
        i=c[x][j-1];
        p[i]=y-b[x][j-1];
        s.insert(make_pair(p[i],i));
      }
      break;
    }
    while (!s.empty()) {
      i=s.begin()->second;
      s.erase(s.begin());
      //printf("from %d\n",i);
      for (j=0; j<g[i].size(); j++) {
        x=g[i][j];
        //printf("sosed %d\n",x);
        if (p[i]+f[i][j]<p[x]) {
          //printf("%d -> %d = %d\n",i,x,p[i]+f[i][j]);
          it=s.find(make_pair(p[x],x));
          if (it!=s.end()) s.erase(it);
          p[x]=p[i]+f[i][j];
          s.insert(make_pair(p[x],x));
        }
      }
    }
    res=0;
    for (i=1; i<=n; i++) if (i!=xs) for (j=0; j<b[i].size(); j++) {
      res+=p[c[i][j]];
      if (j>0 && b[i][j]>b[i][j-1]+1) {
        y=p[c[i][j-1]]+p[c[i][j]]+b[i][j]-b[i][j-1];
        //printf("%d [ %d .. %d ] ( %d %d ) %d\n",i,b[i][j-1],b[i][j],p[c[i][j-1]],p[c[i][j]],y);
        res+=sump(p[c[i][j-1]]+1,y/2);
        res+=sump(p[c[i][j]]+1,y/2);
        if (y%2==0) res-=y/2;
      }
    }
    printf("%lld\n",res);
  }
  return 0;
}
