#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <fstream>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define inf 1000000000
#define MP make_pair
#define PI acos(-1.0)
#define eps 1e-9
using namespace std;
typedef long long i64;
typedef unsigned long long u64;
vector<pair<int,int> > A[101];
int N,F,M,Q,ts;
int G[401][401],D[101];

int find(int bi,int hi){
    for(int j=0;j<A[bi].size();j++)
        if(A[bi][j].first==hi)return A[bi][j].second;
    return -1;
}

int main()
{
    int b1,b2,f1,f2,f3,T;
    int gi1,gi2,c1,c2;
    int tc1,tc2,k,cnt;
    i64 res;

    scanf("%d%d%d",&N,&F,&M);

    for(int i=1;i<=N;i++){
        A[i].push_back(MP(1,++ts));
        if(i>1)G[i][i-1]=1;
        if(i<N)G[i][i+1]=1;
    }


    for(int i=1;i<=N;i++){
        A[i].push_back(MP(F,++ts));
        G[ts][ts-N]=G[ts-N][ts]=F-1;
    }

    while(M--){
        scanf("%d%d%d%d%d",&b1,&f1,&T,&b2,&f2);
        gi1=find(b1,f1);
        gi2=find(b2,f2);
        if(gi1==-1){gi1=++ts;A[b1].push_back(MP(f1,gi1));}
        if(gi2==-1){gi2=++ts;A[b2].push_back(MP(f2,gi2));}
        G[gi1][gi2]=G[gi2][gi1]=T;
    }

    for(int i=1;i<=ts;i++){
        for(int j=1;j<=ts;j++)if(G[i][j]==0)G[i][j]=inf;
        G[i][i]=0;
    }

    for(int i=1;i<=N;i++){sort(A[i].begin(),A[i].end());D[i]=A[i].size();}

    for(int i=1;i<=N;i++)
        for(int j=0;j<(D[i]-1);j++)
            G[A[i][j].second][A[i][j+1].second]=G[A[i][j+1].second][A[i][j].second]=(A[i][j+1].first-A[i][j].first);

    for(int k=1;k<=ts;k++)
        for(int i=1;i<=ts;i++)
            for(int j=1;j<=ts;j++)
                if(G[i][k]+G[k][j]<G[i][j])G[i][j]=G[i][k]+G[k][j];

    scanf("%d",&Q);
    while(Q--){
        scanf("%d%d",&b1,&f1);

        for(int j=0;j<D[b1];j++){
            if(A[b1][j].first<=f1){gi1=A[b1][j].second;c1=(f1-A[b1][j].first);}
            if(A[b1][j].first>=f1){gi2=A[b1][j].second;c2=(A[b1][j].first-f1);break;}
        }

        res=0;
        for(int i=1;i<=N;i++){

            if(i==b1)continue;

            for(int j=0;j<(D[i]-1);j++){
                tc1=min(c1+G[gi1][A[i][j].second],c2+G[gi2][A[i][j].second]);
                tc2=min(c1+G[gi1][A[i][j+1].second],c2+G[gi2][A[i][j+1].second]);

                cnt=A[i][j+1].first-A[i][j].first;
                k=(tc2-tc1+cnt)/2;

                if(k>=0)res+=((i64)(tc1+(tc1+k))*(k+1)/2);
                if(cnt-k>0){res+=((i64)(tc2+(tc2+cnt-k-1))*(cnt-k)/2);}
                res-=tc2;
            }
            res+=tc2;

        }

        printf("%lld\n",res);
    }


    return 0;
}
