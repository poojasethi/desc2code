#include <iostream>
#include <string>
#include <set>
using namespace std;

#define MOD 34369934
typedef long long ll;

ll power1[250001];
int v[34369934];

void buildPower(ll n, ll power[]){
	power[0]=1;
	for(int i=1; i<250000; i++){
		power[i] = power[i-1] * n;
		power[i]%=MOD;
	}
}

int main(){
	string s1, s2;
	cin >> s1 >> s2;
	int l1=s1.size(), l2=s2.size();

	ll b=9584612342LL;
	buildPower(b,power1);

	bool flag=false;
	int l=1, h=l2, mid, idx, len;
	while(l<=h){
		mid = (l+h)/2;
		fill(v, v+34369934, -1);

		ll p=0;
		for(int i=0 ; i<mid ; i++){
			p = p*b + (s1[i]-'a');
			p%=MOD;
		}
		v[p]=0;
		for(int i=mid ; i<l1 ; i++){
			p = p - ((s1[i-mid]-'a')*power1[mid-1])%MOD ;
			if(p<0)
				p+=MOD;
			p = (p*b)%MOD;
			p = (p+s1[i]-'a')%MOD;
			v[p]=i-mid+1;
		}

		bool localFlag = false;
		p=0;
		for(int i=0 ; i<mid ; i++){
			p = p*b + (s2[i]-'a');
			p%=MOD;
		}
		if(v[p]!=-1){
			bool cond=true;
			int idx1=v[p], idx2=0, cnt=0;
			while(cnt++<mid){
				if(s1[idx1++]!=s2[idx2++]){
					cond = false;
					break;
				}
			}
			if(cond){
				localFlag = true;
				idx = 0;
				len = mid;
			}
		}
		if(!localFlag){
			for(int i=mid ; i<l2 ; i++){
				p = p - ((s2[i-mid]-'a')*power1[mid-1])%MOD ;
				if(p<0)
					p+=MOD;
				p = (p*b)%MOD;
				p = (p+s2[i]-'a')%MOD;
				if(v[p]!=-1){
					bool cond=true;
					int idx1=v[p], idx2=i-mid+1, cnt=0;
					while(cnt++<mid){
						if(s1[idx1++]!=s2[idx2++]){
							cond = false;
							break;
						}
					}
					if(cond){
						localFlag = true;
						idx = i-mid+1;
						len = mid;
						break;
					}
				}
			}
		}
		if(localFlag){
			flag = true;
			l = mid+1;
		}
		else
			h = mid-1;
	}

	if(flag){
		for(int i=idx ; i<idx+len ; i++)
			cout << s2[i] ;
		cout << endl << len << endl;
	}
	else
		cout << 0 << endl;

	return 0;
}