#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
const ll base1=32,base2=27;
//const ll base1=10,base2=10;
const ll mod=1e9+7;
ll b1[250005],b2[250005];
ll arr1[250005],arr2[250005];
ll arr3[250005],arr4[250005];
vector< pair<ll,ll> >v;
pair<ll,ll> gethash1(int l,int r)
{
    if(l==0)
    {
        ll v1=(arr1[r]+mod)%mod;
        ll v2=(arr2[r]+mod)%mod;
        return make_pair(v1,v2);
    }
    else
    {
        //cout<<arr1[r]<<" "<<arr1[l-1]*b1[r-l]<<"\n";
        ll v1=((arr1[r]-(arr1[l-1]*b1[r-l+1])%mod)+mod)%mod;
        ll v2=((arr2[r]-(arr2[l-1]*b2[r-l+1])%mod)+mod)%mod;
        return make_pair(v1,v2);
    }
}
pair<ll,ll> gethash2(int l,int r)
{
    if(l==0)
    {
        ll v1=(arr3[r]+mod)%mod;
        ll v2=(arr4[r]+mod)%mod;
        return make_pair(v1,v2);
    }
    else
    {
        ll v1=((arr3[r]-(arr3[l-1]*b1[r-l+1])%mod)+mod)%mod;
        ll v2=((arr4[r]-(arr4[l-1]*b2[r-l+1])%mod)+mod)%mod;
        return make_pair(v1,v2);
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    b1[0]=1;b2[0]=1;
    for(int i=1;i<=250000;i++)
    {
        b1[i]=(b1[i-1]*base1)%mod;
        b2[i]=(b2[i-1]*base2)%mod;
    }
    string s1,s2;cin>>s1>>s2;
    arr1[0]=s1[0]-'a'+1;
    int l=s1.length();
    arr2[0]=s1[0]-'a'+1;
    for(int i=1;i<l;i++)
    {
        arr1[i]=((arr1[i-1]*base1)%mod+(s1[i]-'a'+1))%mod;
        arr2[i]=((arr2[i-1]*base2)%mod+(s1[i]-'a'+1))%mod;
    }
    int l1=s2.length();
    arr3[0]=s2[0]-'a'+1;
    arr4[0]=s2[0]-'a'+1;
    for(int i=1;i<l1;i++)
    {
        arr3[i]=((arr3[i-1]*base1)%mod+(s2[i]-'a'+1))%mod;
        arr4[i]=((arr4[i-1]*base2)%mod+(s2[i]-'a'+1))%mod;
    }

    /*string s1,s2;cin>>s1>>s2;
    arr1[0]=s1[0]-'0';
    int l=s1.length();
    arr2[0]=s1[0]-'0';
    for(int i=1;i<l;i++)
    {
        arr1[i]=((arr1[i-1]*base1)%mod+(s1[i]-'0'))%mod;
        arr2[i]=((arr2[i-1]*base2)%mod+(s1[i]-'0'))%mod;
    }
    int l1=s2.length();
    arr3[0]=s2[0]-'0';
    arr4[0]=s2[0]-'0';
    for(int i=1;i<l1;i++)
    {
        arr3[i]=((arr3[i-1]*base1)%mod+(s2[i]-'0'))%mod;
        arr4[i]=((arr4[i-1]*base2)%mod+(s2[i]-'0'))%mod;
    }*/
    string ans,a1;
    ll low=0,high=min(l,l1);
    while(low<high)
    {
       ll mid=low+(high-low+1)/2;
       if(mid==0)
        break;
      // cout<<mid<<"\n";
       v.clear();
       for(int i=0;i<l-mid+1;i++)
       {
           v.push_back(gethash1(i,i+mid-1));
       }
       sort(v.begin(),v.end());
       bool f=false;string ans;
       for(int i=0;i<l1-mid+1;i++)
       {
           pair<ll,ll> val=gethash2(i,i+mid-1);
           int temp=lower_bound(v.begin(),v.end(),val)-v.begin();
           if(v[temp].first==val.first && v[temp].second==val.second)
           {
               ans=s2.substr(i,mid);f=true;break;
           }
       }
       if(f)
        {low=mid;a1=ans;}
       else
        high=mid-1;
    }
    if(low==0)
    cout<<low<<"\n";
    else
        cout<<a1<<"\n"<<low<<"\n";
    //cout<<gethash1(7,8).first<<" "<<gethash1(7,8).second<<"\n";
    //cout<<gethash2(0,1).first<<" "<<gethash2(0,1).second<<"\n";
    return 0;
}

