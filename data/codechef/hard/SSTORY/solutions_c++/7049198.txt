#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
typedef long long ll;
using namespace std;
char a[250001];
char b[250001];
ll la,lb;
ll modular_pow(ll base, ll exponent, ll modulus)
{
    ll result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
ll rabin(int m){
 //   cout<<m<<endl;
    long long q=28879;
    ll p=0;
    ll t=0;
    ll h=1;
    ll d=26;
    //cout<<la<<" "<<lb<<endl;
    //cout<<m<<endl;
    vector<long long> has[28879];
    h=modular_pow(d,m-1,q);
    for(ll i=0;i<m;i++){			  //hash for a[0...m-1]
        t=(d*t+a[i])%q;
    }
    for(ll i=0;i<m;i++){			 //hash for b[0...m-1]
        p=(d*p+b[i])%q;
    }
    has[t].push_back(0);
    for(ll i=1;i<=la-m;i++){					//store hash value of all substrings of string a[] of length m
            t=(d*(t-a[i-1]*h)+a[i+m-1])%q;
            if(t<0)
                t=t+q;
            has[t].push_back(i);
    }
    bool flag=false;
    ll index=100000000;
    for(ll i=0;i<=lb-m;i++){				//check hash of all substrings of string b[] of length m
        if(has[p].size()!=0){
            for(ll v=0;v<has[p].size();v++){
            bool f=true;
            ll j=has[p][v];
            for(ll k=0;k<m;k++){
                if(a[j+k]!=b[i+k]){
                    f=false;
                    break;
                }
            }
            if(f){
                return i;
            }
        }
        }
        if(i<lb-m){
            p=(d*(p-b[i]*h)+b[i+m])%q;
            if(p<0)
                p+=q;
        }
    }
    //cout<<1<<endl;

        return -1;
}
int main(){
    scanf("%s",a);
    scanf("%s",b);
    la=strlen(a);
    lb=strlen(b);
    //cout<<la<<" "<<lb<<endl;
    ll low=0;
    ll high=lb+1;
    ll mid;
    ll index=100000000;
    while(low+1<high){
        mid=(low+high)/2;
        //cout<<mid<<endl;
        ll temp=rabin(mid);
        //cout<<mid<<endl;
        if(temp!=-1){
            //cout<<mid<<endl;
            low=mid;
            index=temp;
        }
        else
            high=mid;
    }
    /*cout<<la<<" "<<lb<<endl;
    cout<<index<<endl;
    cout<<b[index]<<b[index+1]<<b[index+2]<<b[index+3]<<b[index+4]<<endl;*/
    if(index==100000000)
        printf("0\n");
    else{
    	for(ll i=index;i<index+low;i++)
        	printf("%c",b[i]);
        printf("\n");

        printf("%lld\n",low);
    }
}
