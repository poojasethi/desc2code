#include<iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;
 
#define MAXN 500002
#define MAXLG 20
int mini(int aa,int bb){ return aa>bb?bb:aa;}
int maxi(int aa,int bb){ return aa>bb?aa:bb;}
 
char S[MAXN],B[MAXN], A[MAXN];
int sortindx[MAXN];
struct entry
{
    int nr[2];
    int p;
} L[MAXN];
 
int P[MAXLG][MAXN];
int LCP[MAXN];
int N,i;
int stp, cnt;
int ch=0;
int cmp(struct entry a, struct entry b)
{
    return a.nr[0]==b.nr[0] ?(a.nr[1]<b.nr[1] ?1: 0): (a.nr[0]<b.nr[0] ?1: 0);
}
 
int lcp(int x, int y)
{
int k, ret = 0;
if (x == y) return N - x;
for (k = stp - 1; k >= 0 && x < N && y < N; k--){
	if (P[k][x] == P[k][y]){
		ret += 1 << k;
		x += 1 << k;
	    y += 1 << k;
	 
	}
}
return ret;
}
 
 
 
int main()
{
   	scanf("%s",S);
   	scanf("%s",B);
   	int n1=strlen(S);
   	int n2=strlen(B);
   	strcat(A,S);
   	A[n1]='@';
   	strcat(A,B);
    for(N=strlen( A), i = 0; i < N; i++)
        P[0][i] = A[i] - 'a';
 
    for(stp=1, cnt = 1; cnt < N; stp++, cnt *= 2)
    {
        for(i=0; i < N; i++)
        {
            L[i].nr[0]=P[stp- 1][i];
            L[i].nr[1]=i +cnt <N? P[stp -1][i+ cnt]:-1;
            L[i].p= i;
        }
        sort(L, L+N, cmp);
        for(i=0; i < N; i++)
            P[stp][L[i].p] =i> 0 && L[i].nr[0]==L[i-1].nr[0] && L[i].nr[1] == L[i- 1].nr[1] ? P[stp][L[i-1].p] : i;
            
     	
    }
   
    for(i=0;i<N;i++){
    	if(P[stp-1][i]<N)
    	sortindx[P[stp-1][i]]=i;
    }
    int ans=0,ind=0;
    
    
    for(i=0;i<N-1;i++)
    {
    			if((sortindx[i]>n1 && sortindx[i+1]<n1) || (sortindx[i]<n1 && sortindx[i+1]>n1))
    			{
     				LCP[i]=lcp(sortindx[i],sortindx[i+1]);
     				if(ans<LCP[i]){
     					ans=LCP[i];
     					ind=maxi(sortindx[i],sortindx[i+1]);
     				}
     				else if(ans==LCP[i])
     					ind=mini(ind,maxi(sortindx[i],sortindx[i+1]));
     			}		
     			else LCP[i]=0;
     			//cout<<lcp<<"  "<<LCP[i]<<"----"<<ind<<endl;
    }
       
    if(ans>0){
    		int tr=0,flag=0;
    		for(tr=0;tr<ans;tr++){ if(S[tr]!=B[tr]){ flag=1;break;}}
    	if(flag==1){
   			for(i=ind;i<ind+ans;i++)
   				cout<<A[i];
   				cout<<endl;
   		}
   		else { for(tr=0;tr<ans;tr++) cout<<B[tr]; cout<<endl;}
   	}
	cout<<ans<<endl;
    return 0;
}
 
 