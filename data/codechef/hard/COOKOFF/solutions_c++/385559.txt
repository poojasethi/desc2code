
#include <cstdio>
#include <algorithm>
using namespace std;

int n, m, c1, c2, p1, p2;
int pb[1055];

bool can(int c) {
	int p=p1, ju=0;
	while (p<p2) {
		int ma=pb[p]+c, tg=0;
		while (p+1<n+2 && pb[p+1]<=ma) { 
			p++;
			tg=1;
		}
		if (!tg || ju++ > m) return false;
	}
	
	int tt=p2-p1-1;
	if (tt>=m) return true;
	
	p=p2;
	while (p+1<n+2 && pb[p+1]-pb[p]<=c) {
		++p;
		if (++tt>=m) return true;
	}
	
	p=p1;
	while (p-1>=0 && pb[p]-pb[p-1]<=c) {
		--p;
		if (++tt>=m) return true;
	}
	return false;
}

main() {
	int ntc;
	scanf("%d", &ntc);
	while (ntc--) {
		scanf("%d%d%d%d", &n, &m, &c1, &c2);
		if (c1>c2) swap(c1,c2);
		for (int i=0; i<n; i++) scanf("%d", pb+i);
		pb[n]=c1;
		pb[n+1]=c2;
		sort(pb, pb+n+2);
		for (int i=0; i<n+2; i++) if (pb[i]==c1) { p1=i; break; }
		for (int i=n+1; i>=0; i--) if (pb[i]==c2) { p2=i; break; }
		
		int a=-1, b=1000100;
		while (a+1<b) {
			int c=(a+b)/2;
			if (can(c)) b=c; else a=c;
		}
		printf("%d\n", b);
	}
} 
