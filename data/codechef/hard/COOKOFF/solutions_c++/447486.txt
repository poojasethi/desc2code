//as explained in editorial
//comments in prev file
#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>
#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define PB(x) push_back(x)
#define MP(x,y) make_pair(x,y)
#define F first
#define S second
using namespace std;
typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;

int main()
{
    //freopen("input.txt","r",stdin);
    int t;
    cin>>t;
    while(t--) {
        int n,m,c1,c2;
        cin>>n>>m>>c1>>c2;
        if(c1>c2) {
            swap(c1,c2);
        }
        vector<int> arr;
        for(int i=0; i<n; i++) {
            int x;
            cin>>x;
            arr.PB(x);
        }
        arr.PB(c1);
        arr.PB(c2);
        sort(arr.begin(),arr.end());

        int lb,ub;
        lb=lower_bound(arr.begin(),arr.end(),c1)-arr.begin();
        ub=upper_bound(arr.begin(),arr.end(),c2)-arr.begin();
        int len=arr.size();
        if(ub-lb<=m+2) {
            int ans=0;
            for(int i=lb; i<ub-1; i++) {
                ans=max(ans,arr[i+1]-arr[i]);
            }
            int st=lb,ed=ub;
            m-=ub-lb;
            m+=2;
            while(m--) {
                if(st!=0) {
                    if(ed!=len && arr[st]-arr[st-1]>arr[ed]-arr[ed-1]) {
                        ans=max(ans,arr[ed]-arr[ed-1]);
                        ed++;
                    } else {
                        ans=max(ans,arr[st]-arr[st-1]);
                        st--;
                    }
                } else {
                    ans=ans=max(ans,arr[ed]-arr[ed-1]);
                    ed++;
                }
            }
            cout<<ans<<endl;
        } else {
            int mid,st,ed;
            st=lb;
            ed=ub;
            lb=0;
            ub=c2-c1;
            while(lb+1<ub) {
                mid=(lb+ub)/2;
                int cur=st,nxt;
                for(int i=0; i<=m; i++) {
                    nxt=cur;

                    while(arr[nxt]<c2 && arr[nxt+1]<=arr[cur]+mid)
                        nxt++;
                    cur=nxt;
                }
                if(arr[cur]<c2) {
                    lb=mid;
                } else
                    ub=mid;
            }
            cout<<ub<<endl;
        }
    }
}
