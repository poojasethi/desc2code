#include <string>
#include <vector>
#include <algorithm>
#include <cstdio>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)REP(i,0,(int)(v)-1)
#define FORD(i,v)REPD(i,(int)(v)-1,0)
#define pb push_back
#define sz size
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define DBG(vari) cout<<#vari<<" = "<<vari<<endl;
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define INF 900000000
using namespace std;
int c1,c2,n,m;
vector<int> tr;

bool check(int gap)
{
    int ile=-2;
    FOR(i,tr.sz()) if (tr[i]>=c1 && tr[i]<=c2) ile++;
    //DBG(ile);
    int trzeba=0;
    int i1,i2,i0;
    i1=0;while(tr[i1+1]<=c1) i1++;
    i2=tr.sz()-1;while(tr[i2-1]>=c2) i2--;
    //DBG(i1);DBG(i2);
    int is;
    i0=i1;
    while(1)
    {
        is=i0;
        if (c2-tr[i0]<=gap) break;
        while(tr[is+1]-tr[i0]<=gap) is++;
        if (is==i0) {trzeba=INF;break;}
        trzeba++;
        i0=is;
    }
    if (trzeba>m) return 0;
    while(tr[i1]-tr[i1-1]<=gap) i1--;
    while(tr[i2+1]-tr[i2]<=gap) i2++;
    int mx=i2-i1-1;
    return (mx>=m);
}

int main()
{
    ios_base::sync_with_stdio(0);
    int t;
    cin>>t;
    while(t--)
    {
        tr.clear();
        cin>>n>>m>>c1>>c2;
        if (c1>=c2) swap(c1,c2);
        tr.pb(-INF);tr.pb(INF);
        tr.pb(c1);tr.pb(c2);
        FOR(i,n) {int x;cin>>x;tr.pb(x);}
        sort(tr.begin(),tr.end());
        //DBG(c1);DBG(c2);
        int lo=0,hi=10000000,mid;
        while(hi-lo>1)
        {
            mid=(lo+hi)/2;
            if (check(mid)) hi=mid;
            else lo=mid+1;
        }
        if (check(lo)) printf("%d\n",lo);
        else printf("%d\n",hi);
        
        //DBG(check(30));
    }
    return 0;
}
