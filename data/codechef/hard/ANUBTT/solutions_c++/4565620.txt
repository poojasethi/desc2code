#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
using namespace std;
#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define REP(i,x,y) for(int i=(x);i<=(y);i++)
#define _REP(i,x,y) for(int i=(x);i>=(y);i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define pb push_back
#define IN insert
#define ER erase
#define BE begin()
#define ED end() 
#define LB lower_bound
#define UB upper_bound
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl
template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
template<class T> inline void read(T&x,T&y){read(x);read(y);}
template<class T> inline void read(T&x,T&y,T&z){read(x);read(y);read(z);}
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}
 
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
 
const int N=100010;
const int inf=int(1e9);
int n,i,j,k,l,p,x,y,z;
int v[N],v0[N],sz[N];
int n0[N],n1[N];
 
int S,T,V,edge,e[N<<1],b[N<<1],c[N<<1],w[N<<1],fir[N];
 
void clear(){edge=1;REP(i,1,V)fir[i]=0;}
void add(int x,int y,int z,int q){e[++edge]=y;c[edge]=z;w[edge]=q;b[edge]=fir[x];fir[x]=edge;}
void add2(int x,int y,int z,int q){add(x,y,z,q);add(y,x,0,-q);}
void dfs(int i,int f){for(int k=fir[i];k;k=b[k])if(e[k]!=f)dfs(e[k],i),sz[i]++;}
 
int st[N];bool cmp(int x,int y){return v[x]<v[y];}
 
struct graph
{
	bool v[410],o[410];int d[410],de[410],cur[410];
	ll ans;
	int zkw(int i,int flow)
	{
		if(i==T){ans+=flow*d[i];return flow;}
		int r=flow,l,t;
		v[i]=o[i]=1;
		for(int&k=cur[i];k;k=b[k])if(c[k])
		{
			l=d[i]+w[k]-d[e[k]];upmin(de[e[k]],l);
			if(l==0&&(!o[e[k]]))
			{
				t=zkw(e[k],min(r,c[k]));
				r-=t;c[k]-=t;c[k^1]+=t;
				if(r==0)break;
			}
		}
		o[i]=0;return flow-r;
	}
	ll solve()
	{
		ans=0;	
		CL(v,0);CL(o,0);CL(d,0);
		while(1)
		{
			int i;
			rep(i,1,V)v[i]=0,de[i]=inf,cur[i]=fir[i];
			zkw(S,inf);
			int del=inf;rep(i,1,V)if(!v[i])upmin(del,de[i]);
			if(del==inf)break;
			rep(i,1,V)if(!v[i])d[i]+=del;
		}
		return ans;
	}
}G;
 
int num1[N],num2[N],num3[N];
 
int main()
{
    //freopen("1.in","r",stdin);freopen("1.out","w",stdout);
	read(n);
	int ms=inf;rep(i,1,n)read(v[i]),upmin(ms,v[i]);
	rep(i,1,n-1)read(x,y),add(x,y,0,0),add(y,x,0,0);
	
	dfs(1,0);
	
	int m,q;
	for(read(q);q;q--)
	{
		read(m,x,y);
		rep(i,1,m)read(v0[i]);
		
		st[0]=0;rep(i,1,n)if(sz[i]<x)st[++st[0]]=i;
		sort(st+1,st+1+st[0],cmp);
		
		int nod=m;
		int g=min(st[0],100),oth;
		rep(j,1,m){num1[j]=++nod;num2[j]=++nod;}
		rep(i,1,g)num3[i]=++nod;oth=++nod;
		S=++nod;T=V=++nod;clear();
		
		rep(j,1,m)
		{
			add2(S,j,1,0);
			add2(num1[j],T,x,0);
			add2(num2[j],T,inf,0);
		}
		rep(i,1,g)
		{	
			add2(num3[i],T,x-sz[st[i]],0);
			add2(oth,T,inf,0);
		}
		
		rep(j,1,m){
			rep(i,1,j-1)
			{
				add2(j,num1[i],1,v0[j]*v0[i]);
				add2(j,num2[i],1,v0[j]*v0[i]+y);
			}
			rep(i,1,g)
			{
				add2(j,num3[i],1,v0[j]*v[st[i]]);
			}
			add2(j,oth,1,v0[j]*ms+y);
		}
		
		cout<<G.solve()<<endl;
	}
		
    return 0;
} 