#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<fstream>
#include<cmath>
#include<iomanip>
#include<time.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1000000007
#define mod 1000000007
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 100010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

int a[N],b[110],de[N],d[350],head[350],cnt,size,v[350],p[350];
struct node
{
	int v,c,w,next;
}g[N];
void add(int a,int b,int c,int w)
{
	g[cnt].v=b,g[cnt].c=c,g[cnt].w=w,g[cnt].next=head[a],head[a]=cnt++;
	g[cnt].v=a,g[cnt].c=0,g[cnt].w=-w,g[cnt].next=head[b],head[b]=cnt++;
}
bool bfs(int s,int t)
{
	for(int i=0;i<size;i++)d[i]=inf,v[i]=0;
	queue<int>q;d[s]=0;
	q.push(s);
	while(!q.empty())
	{
		int u=q.front();q.pop();
		v[u]=0;
		//if(u==t)return 1;
		for(int i=head[u];i+1;i=g[i].next)
		{
			int j=g[i].v;
			if(g[i].c>0&&d[j]>d[u]+g[i].w)
			{
				d[j]=d[u]+g[i].w;
				p[j]=i;
				if(!v[j])v[j]=1,q.push(j);
			}
		}
	}
	//DBG(d[t])
	return d[t]<inf;
}
int max_flow(int s,int t)
{
	int ans=0;
	while(bfs(s,t))
	{
		int x=t,f=inf;
		while(x!=s)
		{
			f=min(f,g[p[x]].c);
			x=g[p[x]^1].v;
		}
		x=t;
		while(x!=s)
		{
			g[p[x]].c-=f,g[p[x]^1].c+=f;
			x=g[p[x]^1].v;
		}
		ans+=d[t]*f;
	}
	return ans;
}
int main()
{
	int i,j,T,ca=0,k,m,n;
	while(~scanf("%d",&n))
	{
		for(i=1;i<=n;i++)scanf("%d",&a[i]),de[i]=0;
		for(i=1;i<n;i++)
		{
			scanf("%d%d",&j,&k);
			de[j]++,de[k]++;
		}
		vector<pii>q;
		for(i=1;i<=n;i++)q.pb(mp(a[i],i)),--de[i];
		sort(all(q));
		int Q;
		scanf("%d",&Q);
		while(Q--)
		{
			cnt=0;
			memset(head,-1,sizeof(head));
			int x,y;
			scanf("%d%d%d",&m,&x,&y);
			for(i=0;i<m;i++)scanf("%d",&b[i]);
			int rem=m;
			vector<pii>v;
			for(i=0;i<n&&rem>0;i++)
			{
				int cur=x-de[q[i].y];
				if(cur>0)
				{
					v.pb(mp(cur,q[i].x));
					rem-=cur;
				}
			}
			int s=0,t=1,num=2;
			for(i=0;i<m;i++)add(s,num++,1,0);
			for(i=0;i<v.size();i++)add(num++,t,v[i].x,0);
			int small=q[0].x,at=num;
			add(num++,t,inf,0);
			vector<pii>pre;
			for(i=0;i<m;i++)
			{
				for(int c=0;c<v.size();c++)add(i+2,m+c+2,1,b[i]*v[c].y);
				add(i+2,at,1,b[i]*small+y);
				for(int c=0;c<pre.size();c++)add(i+2,pre[c].x,1,b[i]*pre[c].y);
				pre.pb(mp(num,b[i]));
				add(num++,t,x,0);
				if(small>b[i])
				{
					small=b[i];at=num;
					add(num++,t,inf,0);
				}
			}
			size=num;
			printf("%d\n",max_flow(s,t));
		}
	}
	return 0;
}