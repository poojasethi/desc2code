count=0
def inversion(a,n):
    if(n<=1):
        return [a[0],]
    else:
        l=a[0:n/2]
        r=a[n/2:]
        return merge(inversion(l,n/2),inversion(r,n-(n/2)))
def merge(a,b):
    global count
    
    l1=len(a)
    l2=len(b)
    i=0;j=0;
    c=[]
    while(i<l1 and j<l2):
        if(a[i][1]>b[j][1]):
            count+=l1-i
            c.append(b[j])
            j+=1
        else:
            c.append(a[i])
            i+=1
    while(i<l1):
        c.append(a[i])
        i+=1
    while(j<l2):
        c.append(b[j])
        j+=1
    return c

n=input()
m=[]
f=[]

for i in range(n):
    a=raw_input()
    a=a.strip().split()
    m.append((int(a[0]),int(a[1])))
m=sorted(m)
inversion(m,n)
print count

