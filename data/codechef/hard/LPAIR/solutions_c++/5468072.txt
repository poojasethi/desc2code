#include <bits/stdc++.h>

using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define REVERSE(c) reverse(ALL(c))
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define INF 1000000000
#define X first
#define Y second
#define pb push_back
#define SZ(c) (c).size()
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef vector<VI> VVI;
typedef long long LL;
#define MOD 1000000007


LL tree[1000100];
void update(int idx,int val)
{
	while(idx<=1000000)
	{
		tree[idx]+=val;
		idx+=(idx&-idx);
	}
}
LL read(int idx)
{
	LL sum=0;
	while(idx)
	{
		sum+=tree[idx];
		idx-=(idx&-idx);
	}
	return sum;
}
int main()
{
	int n;
	cin>>n;
	VPII a,x;
	VI b;
	REP(i,n)
	{
		int x,y;
		cin>>x>>y;
		a.pb(make_pair(x,y));
		b.pb(y);
	}
	SORT(a);
	SORT(b);
	map<int,int> m;
	REP(i,n)
		m[b[i]]=i+1;
	LL ans=0;
	FORD(i,n-1,0)
	{
		if(i!=n-1&&a[i].X!=a[i+1].X)
		{
			FOREACH(k,x)
				update(m[k->Y],1);
			x.clear();
		}
		x.pb(a[i]);
		ans+=read(m[a[i].Y]);
	}
	cout<<ans<<endl;
	return 0;
}





