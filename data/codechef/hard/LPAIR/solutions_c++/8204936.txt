#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#include<map>
#include<utility>
#include<climits>
 
using namespace std;
 
#ifdef ONLINE_JUDGE
    #define gc getchar_unlocked
#else
    #define gc getchar
#endif
#define MEM(a,b) memset(a,(b),sizeof(a))
#define s(a) fastRead_INT(a)
#define MOD 1000000007
#define maxn 100005
 
typedef long long LL;
 
LL ans=0;
void merge(vector<int> &a,int p,int q,int r)
{
    int n1=q-p+1, n2=r-q;
    int i,j;
    vector<int> L(n1,0);
    vector<int> R(n2,0);
    for(i=0; i<n1; i++)
        L[i] = a[p+i];
    for(j=0; j<n2; j++)
        R[j] = a[q+j+1];
    i=0, j=0;
    for(int k=p; k<=r; k++)
        if((i<n1 && L[i] <= R[j]) || j>=n2)
            a[k] = L[i++];
        else
            a[k] = R[j++], ans += n1-i;
}
 
void mergeSort(vector<int> &a, int p, int r)
{
    if(p<r)
    {
        int q = (p+r)/2;
        mergeSort(a,p,q);
        mergeSort(a,q+1,r);
        merge(a,p,q,r);
    }
}
 
inline void fastRead_INT(int &x) {
    register int c = gc();
    x = 0;
    int neg = 0;
 
    for(; ((c<48 || c>57) && c != '-'); c = gc());
 
    if(c=='-') {
    	neg = 1;
    	c = gc();
    }
 
    for(; c>47 && c<58 ; c = gc()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }
 
    if(neg)
    	x = -x;
}
 
 
int main()
{
    int n;
    s(n);
 
    vector< pair<int,int> > initial(n);
    vector<int> match(n,0);
 
    for(int i=0; i<n; i++)
    {
        int a,b;
        s(a);
        s(b);
        initial[i]=make_pair(a,b);
    }
    sort(initial.begin(),initial.end());
 
    for(int i=0; i<n; i++)
        match[i] = initial[i].second;
 
    mergeSort(match,0,n-1);
    printf("%lld\n",ans);
    return 0;
}
 