#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define ll long long
#define mod 1000000007
#define bitcount    __builtin_popcountll
#define pb push_back
int c[100005],d[100005],e[100005],f[100005],n;
ll ans;
int bin1(int key)
{
	int l=0,r=n-1,m;
	while(l<=r)
	{
		m=(l+r)/2;
		if(c[m]==key)
			return m;
		else if(c[m]>key)
			r=m-1;
		else
			l=m+1;
	}
}
int bin2(int key)
{
	int l=0,r=n-1,m;
	while(l<=r)
	{
		m=(l+r)/2;
		if(d[m]==key)
			return m;
		else if(d[m]>key)
			r=m-1;
		else
			l=m+1;
	}
}
void merge(int l,int m,int r)
{
	int i=l,j=m,k=l;
	while(i<m&&j<=r)
	{
		if(e[j]<e[i])
		{
			ans+=m-i;
			f[k++]=e[j++];
		}
		else
			f[k++]=e[i++];
	}
	while(i<m)
		f[k++]=e[i++];
	while(j<=r)
		f[k++]=e[j++];
	for(i=l;i<k;i++)
		e[i]=f[i];
}
void mergesort(int l,int r)
{
	if(l==r)
		return;
	int m=(l+r)/2;
	mergesort(l,m);
	mergesort(m+1,r);
	merge(l,m+1,r);
}
int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int i,j,k,a[100005],b[100005];
    sd(n);
    for(i=0;i<n;i++)
    {
    	sd(a[i]);
    	sd(b[i]);
    	c[i]=a[i];
    	d[i]=b[i];
    }
    sort(c,c+n);
    sort(d,d+n);
    for(i=0;i<n;i++)
    {
    	j=bin1(a[i]);
    	k=bin2(b[i]);
    	e[j]=k;
    }
    mergesort(0,n-1);
    printf("%lld\n",ans);
    return 0;
}