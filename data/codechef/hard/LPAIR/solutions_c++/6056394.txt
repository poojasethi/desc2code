#include<iostream>
#define size 100002
using namespace std;

int b[size][2];

void merge2(int a[][2],int low,int mid ,int high)
{
   int h,i,j,k;
   h=low;
   i=low;
    j=mid+1;
   while(h<=mid && j<=high)
   {
      if(a[h][0]<=a[j][0])
	 {b[i][0]=a[h][0];
	  b[i][1]=a[h++][1];
	 }
      else
	 {b[i][0]=a[j][0];
	  b[i][1]=a[j++][1];
	 }
      i++;
   }

   if( h > mid)
      for(k=j;k<=high;k++)
	{b[i][0]=a[k][0];
     b[i++][1]=a[k][1];
	}
   else
      for(k=h;k<=mid;k++)
	 {b[i][0]=a[k][0];
      b[i++][1]=a[k][1];
	 }

   //cout <<"\n";
   for(k=low;k<=high;k++)
   {  a[k][0]=b[k][0];
      a[k][1]=b[k][1];
     //cout << a[k] <<" ";
   }

}

void mergesort2(int a[][2],int i,int j)
{
   int mid;
   if(i<j)
   {
      mid=(i+j)/2;
      mergesort2(a,i,mid);
      mergesort2(a,mid+1,j);
      merge2(a,i,mid,j);
   }
}

int main()
{
 int n,p,p1,p2;
 static int male[size][2] ,fmale[size][2],part[100002],sum1[10],sum2[1002];
 unsigned long long sum;
 cin>>n;
 for(int i=0;i<n;i++)
  {cin>>male[i][0]>>fmale[i][0];
   male[i][1]=fmale[i][1]=i;
  }
 mergesort2(male,0,n-1);
 mergesort2(fmale,0,n-1);

 for(int i=0;i<n;i++)
 {
     fmale[fmale[i][1]][0]=i;
 }

 for(int i=0;i<n;i++)
    part[i]=1;
 n--;
 for(int i=0;i<=n/10000;i++)
 {
  sum1[i]=10000;
 }
 for(int i=0;i<=n/100;i++)
 {
     sum2[i]=100;
 }
 n++;
 sum=0;
 for(int i=0;i<n;i++)
 {
     p=fmale[male[i][1]][0];
     p2=p/100;
     p1=p/10000;

     for(int j=0;j<p1;j++)
        sum=sum+(unsigned long long)sum1[j];
     for(int j=p2-p2%100;j<p2;j++)
        sum=sum+(unsigned long long)sum2[j];
     for(int j=p-p%100;j<p;j++)
        sum=sum+(unsigned long long)part[j];

     part[p]=0;
     sum1[p1]--;
     sum2[p2]--;

 }

cout<<sum<<endl;
return 0;
}
