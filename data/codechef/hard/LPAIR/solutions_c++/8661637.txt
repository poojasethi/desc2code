#include<bits/stdc++.h>
int bitree[100010];
int get(int idx)
{
	int ans=0;
	while(idx>0)
	{
		ans+=bitree[idx];
		idx-=(idx & -idx);
	}
	return ans;
}
void update(int idx)
{
	while(idx<=100000)
	{
		bitree[idx]++;
		idx+=(idx & -idx);
	}
}
using namespace std;
struct node{
	int a,b;
}a[100010],a1[100010],b1[100010];
bool cmp(node a,node b)
{
	return a.a>b.a;
}
bool cmp1(node a,node b)
{
	return a.a<b.a;
}
main()
{
	int i,n;
	memset(bitree,0,sizeof(bitree));
	scanf("%d",&n);
	for(i=0;i<n;i++)
	scanf("%d %d",&a1[i].a,&b1[i].a),a1[i].b=i,b1[i].b=i;
	sort(a1,a1+n,cmp1);sort(b1,b1+n,cmp1);//printf("here\n");
	for(i=0;i<n;i++)
	a[a1[i].b].a=i+1,a[b1[i].b].b=i+1;
	sort(a,a+n,cmp);//printf("here1\n");
	long long ans=0;
	for(i=0;i<n;i++)
	{
		//printf("%d %d\n",a[i].a,a[i].b);
		ans+=get(a[i].b);
		update(a[i].b);
	}
	printf("%lld\n",ans);
}