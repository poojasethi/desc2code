#include<iostream>
using namespace std;
long long int arr[1000010];
long long 	int grls[1000010];
long long int b[1000010];
#include<bits/stdc++.h>
long long int inc=0;
long long int read_int(){
	char r;
	bool start=false,neg=false;
	long long int ret=0;
	while(true){
		r=getchar();
		if((r-'0'<0 || r-'0'>9) && r!='-' && !start){
			continue;
		}
		if((r-'0'<0 || r-'0'>9) && r!='-' && start){
			break;
		}
		if(start)ret*=10;
		start=true;
		if(r=='-')neg=true;
		else ret+=r-'0';
	}
	if(!neg)
		return ret;
	else
		return -ret;
}
void merg(long long int st,long long int m,long long int en);
void merge_sort(long long int st,long long int en)
{
  int m;
  if(en>st)
  {
   m=(st+en)/2;
   merge_sort(st,m);
   merge_sort(m+1,en);
   merg(st,m,en);
  }
}

void merg(long long int st,long long int m,long long int en)
{

 long long int f=st,k=st,sst=m+1,i;
 while(f<=m && sst<=en)
 {
   if(arr[f]<arr[sst])          ///sst= second start
    {b[k++]=arr[f++];}
   else
    {
	      b[k++]=arr[sst++];
          if(arr[f]!=arr[sst]) inc=inc+(m-f+1);  ///this line makes merge sort to inversion count
    }
 }

  if(f>m)
   for(i=sst;i<=en;i++)
   b[k++]=arr[i];

  else
  for(i=f;i<=m;i++)
  b[k++]=arr[i];

  for(i=st;i<=en;i++)
  arr[i]=b[i];
}


int main()
 {
 	int n;
 	 cin>>n;
 	vector<pair<int,int > >v;
 long long  int max=-1;
 	for(int i=0;i<n;i++)
 	 {
 	 	int a,b;
 	 	 a=read_int();
 	 	 b=read_int();
 	 	 if(a>max) max=a;
 	 	 grls[i]=b;
 	 	 v.push_back(make_pair(a,b));
 	 }
 	 sort(v.begin(),v.end());
 	/*- sort(grls,grls+n);
 	 
 	 map<long long int,long long int> m;
 	 for(int i=0;i<n;i++)
 	  {
 	  	long long int a,b;
 	  	a=v[i].first;
 	  	b=v[i].second;
 	    long long int *p=upper_bound(grls,grls+n,b);
 	  	int index=p-grls;
 	  
 	  	 
 	  	m[a]=index;
 	  }
 	  int kk=0;*/
 	 /* for(int i=0;i<=max;i++)
 	   {
 	   	if(m[i]!=0)
 	   	 {
 	   	 	arr[m[i]]=i;
 	   	 }
 	   }
 	   inc=0;*/
 	 for(int i=0;i<n;i++)
 	  {
 	  	arr[i]=v[i].second;
 	  }
 	 // for(int i=0;i<n;i++) cout<<arr[i]<<" ";
 	 //  cout<<endl;
 	    merge_sort(0,n-1);
 	     cout<<inc<<endl;
 	     return 0;
 }