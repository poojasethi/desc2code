#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#define lli long long int
#define pb push_back
#define mod 1000000007
#define pii pair<int,int>

using namespace std;
vector<pii> vec;
bool comp1(pii a, pii b)
{
    return a.second< b.second;
}
int seg[500000];
void update(int n,int b,int e,int val)
{
    if(b==e && b==val)
    {
        seg[n]++;
        return ;
    }
    if(b==e)return ;
    int mid=(b+e)/2;
    if(val<=mid)update(2*n,b,mid,val);
    else update(2*n +1, mid+1,e,val);

    seg[n]=seg[2*n] + seg[2*n+1];
}

int query(int n,int b,int e,int i,int j)
{
    if(i>e || b>j)return 0;
    if(b>=i && e<=j)return seg[n];
    int mid=(b+e)/2;
    int p= query(2*n,b,mid,i,j);
    int q= query(2*n +1,mid+1,e,i,j);

    return p+q;
}
int main()
{
    int n,i,j,k,a,b,c;
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        scanf("%d%d",&a,&b);
        vec.pb(make_pair(a,b));
    }

    sort(vec.begin(),vec.end(),comp1);
    for(i=0; i<n; i++)
    {
        vec[i].second= i+1;
    }
    sort(vec.begin(),vec.end());
    lli ans=0;
    memset(seg,0,sizeof(seg));
    for(i=0; i<n; i++)
    {
        a=vec[i].second;
        int x= query(1,1,100000,a,100000);
        //cout<<x<<endl;
        ans+=x;
        update(1,1,100000,a);
    }
    printf("%lld",ans);

    return 0;
}

