#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <stack>
#include <queue>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <limits.h>
#include <functional>

typedef long long ll;
#define MOD 1000000007

using namespace std;
const int MAXN=100005;

ll tree[MAXN];
ll read(int idx)
{
    ll sum=0;
    while(idx>0)
    {
        sum+=tree[idx];
        idx-=(idx&-idx);
    }
    return sum;
}

void update(int idx)
{
    while(idx<=MAXN)
    {
        tree[idx]+=1;
        idx+=(idx&-idx);
    }
}

int main()
{
    ios_base::sync_with_stdio(0);cin.tie(0);
    int i,n;
    cin>>n;
    set<int> myset;
    vector< pair<int,int> > a(n+1);
    map<int,int> M;
    for(i=1;i<=n;i++)
    {
        cin>>a[i].first>>a[i].second;
        myset.insert(a[i].second);
    }
    sort(a.begin(),a.end());
    set<int>::iterator it;
    i=1;
    for(it=myset.begin();it!=myset.end();it++)
    {
        M[*it]=i++;
    }
    for(i=1;i<=n;i++)
    {
        a[i].second=M[a[i].second];
    }
    ll inv_cnt=0;
    for(i=n;i>0;i--)
    {
        ll x;
        x=read(a[i].second);
        inv_cnt+=x;
        update(a[i].second);

    }
    cout<<inv_cnt<<endl;



    return 0;
}
