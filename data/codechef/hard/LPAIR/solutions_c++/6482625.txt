/*  Template:  By Jugal :) */
#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef vector <int> vi;
typedef vector <vi> vii;
typedef pair<int,int> pii;
typedef ll ft;
#define get getchar_unlocked 
#define put putchar_unlocked 
#define pb push_back 
#define mp make_pair 
#define ff first 
#define ss second 
#define sz size() 
#define ln length() 
#define rep(i,n) for(int i=0;i<n;i++) 
#define ref(i,a,n) for(int i=a;i<=n;i++) 
#define reb(i,n,a) for(int i=n;i>=a;i--) 
#define all(a) a.begin(),a.end() 
#define gi(n) scanf("%d",&n) 
#define gii(n) scanf("%lld",&n) 
#define gc(c) scanf(" %c",&c) 
#define pi(n) printf("%d",n) 
#define pii(n) printf("%lld",n) 
#define pc(c) printf("%c",c) 
#define ps printf(" ") 
#define pn printf("\n") 
void gl(char *str) { char c; int i=0; if((c=get())!='\n') str[i++]=c; while((c=get())!='\n') str[i++]=c;str[i]='\0'; }
void pl(char *str) { rep(i,strlen(str)) put(str[i]); }
void gfi(ft &x) {
    register ft c = get(); x = 0; ft sn=1;
        for(;(c<48 || c>57);c = get()) if(c=='-') sn=-1;
        for(;c>47 && c<58;c = get()) {x = (x<<1) + (x<<3) + c - 48;}
        x*=sn;
}

struct node {
	ll x,y;
}a[1000000],b[1000000];

typedef struct node nod;

int inline cmp(const void *xx,const void *yy) {
	nod *x1 = (nod*) xx;
	nod *y1 = (nod*) yy;
	return (x1->x-y1->x);
}

ll cnt=0;

void merge(int l,int m,int r) {
	int i=l,j=m+1,k=0;
	while(i<=m && j<=r) {
		if(a[i].y<a[j].y) {
			b[k++]=a[i++];
		} else {
			cnt+=(m-i+1);
			b[k++]=a[j++];
		}
	}
	while(i<=m) b[k++]=a[i++];
	while(j<=r) b[k++]=a[j++];
	j=l;
	rep(i,k) a[j++]=b[i];
}

void mergeSort(int l,int r) {
	if(l<r) {
		int m=(l+r)/2;
		mergeSort(l,m);
		mergeSort(m+1,r);
		merge(l,m,r);
	}
}

int main() {
	ll n;
	gfi(n);
	rep(i,n) gfi(a[i].x),gfi(a[i].y);
	qsort(a,n,sizeof(nod),cmp);
//	rep(i,n) pii(a[i].x),ps,pii(a[i].y),pn;
	mergeSort(0,n-1);
//	rep(i,n) pii(a[i].x),ps,pii(a[i].y),pn;
	pii(cnt);pn;
	return 0;
}
