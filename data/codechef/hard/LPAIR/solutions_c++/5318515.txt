#include <iostream>
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<iomanip>
#include<utility>
#include<bitset>
#include<algorithm>
#include<ctype.h>
#define ll long long
#define mod 1000000007
using namespace std;
ll tree[100005];
ll maxVal;
ll read(int idx)
{
	ll sum=0;
	while(idx>0)
	{
		sum+=tree[idx];
		idx-=(idx & -idx);
	}
	return sum;
	}
	void update(int idx,ll val)
	{
		while(idx<=maxVal)
		{
			tree[idx]+=val;
			idx+=(idx & -idx);
		}
	}

int main() {
	vector<pair<ll,ll> > v;
	ll n;
	scanf("%lld",&n);
	maxVal=n;
	memset(tree,0,sizeof(ll)*(n+1));
	for(int i=0;i<n;i++)
	{
		ll a,b;
		scanf("%lld %lld",&a,&b);
		v.push_back(make_pair(a,b));
	}
	sort(v.begin(),v.end());
	ll a[n+5],b[n+5];
	for(int i=0;i<n;i++)
	{a[i]=v[i].second;
	 b[i]=a[i];
	 }
	 sort(b,b+n);
	 for(int i=0;i<n;i++)
	 {
	 	int index=(int)(lower_bound(b,b+n,a[i])-b);
	 	a[i]=index+1;
	 }ll inv_count=0;
	 for(int i=n-1;i>=0;i--)
	 {
	 	ll x=read(a[i]-1);
	 	inv_count+=x;
	 	update(a[i],1);
	 }
	 printf("%lld\n",inv_count);
	// your code goes here
	return 0;
}