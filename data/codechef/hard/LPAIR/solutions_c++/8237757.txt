# include <bits/stdc++.h>

# define INF 0x7f7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned long long int 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked
# define tri pair < LL,PL >
# define TRI(a,b,c) mp(a,mp(b,c))
# define ms(A,val) memset(A,val,sizeof(A))

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

using namespace std;

int debug=1;
const int N=4e5+3;

/* MAIN PROGRAM STARTS HERE */

static LL F[N];

void modify(LL idx,LL val) { for (LL i=idx; i<N; i+=(i&(-i))) F[i]+=val; }
LL query(LL idx) { LL ret=0; for (LL i=idx; i; i^=(i&(-i))) ret+=F[i]; return ret; }


int main()
	{
	//freopen("TC1.txt","r",stdin);
	//freopen("outpaut1","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	int T;
	LL i,j,k,x,y,z,p,q,r,n;
	
	cin>>n;
	VPL V;
	VL X,Y;
	REP (i,n)
		{
		cin>>x>>y;
		X.pb(x); Y.pb(y);
		V.pb(mp(x,y));
		}
	sort(X.begin(),X.end());
	sort(Y.begin(),Y.end());
	map <LL,LL> mx;
	map <LL,LL> my;
	k=1; REP (i,n) mx[X[i]]=k++;
	k=1; REP (i,n) my[Y[i]]=k++;
	REP (i,n)
		{
		V[i].ff=mx[V[i].ff];
		V[i].ss=my[V[i].ss];
		}
	sort(V.begin(),V.end());
	LL ans=0;
	REP (i,n)
		{
		ans+=i-query(V[i].ss);
		modify(V[i].ss,1);
		}
	cout<<ans<<"\n";
	return 0;
	}