#include<iostream>
#include<cstdio>
#include<algorithm>
#include<map>
#include<cstring>
#define in(a) scanf("%d",&a)
#define lll long long 
#define map map<int,int> 
using namespace std;

int bit[1000008],m,n,maxi;

struct val
{
	int  l,r;
};


bool mysort(val a,val b)
{
	if(a.l>b.l)
		return true;
	else if(a.l==b.l && a.r>b.r)
		return true;
	else
		return false;
}

void update(int idx,int val)
{
	while(idx<=maxi)
	{
		bit[idx]+=val;
		idx+=(idx & -idx);
	}
}

lll  query(int index)
{
	lll cnt=0;
	while(index>0)
	{
		cnt+=bit[index];
		index-=(index&-index);
	}
	return cnt;
}

int   main()
{
	int  t,k,i,j;
	
		scanf("%d",&k);
		val * arr = new val[k+10];
		for(i=0;i<k;i++)
			scanf("%d%d",&arr[i].l,&arr[i].r);
		
		maxi=0;
		for(i=0;i<k;i++)
			maxi=max(arr[i].r,maxi);
		
		memset(bit,0,sizeof(bit));
		
		sort(arr,arr+k,mysort);
		
		map mp;
		int *newarr=new int[1000008];
		int *narr=new int[1000008];
		
		for(i=0;i<k;i++)
			{	mp[arr[i].r]=i;
				narr[i]=arr[i].r;
			}
		
		sort(narr,narr+k);
		
		for(i=0;i<k;i++)
			newarr[mp[narr[i]]]=i+1;
		
		//for(i=0;i<k;i++);
		//	cout<<newarr[i]<<"  ";   return 0;
		
		lll cnt=0;
		
		maxi=k;
		
		for(i=0;i<k;i++)
		{
			cnt+=query(newarr[i]-1);
			update(newarr[i],1);
		}
		
		
		printf("%lld\n",cnt);
	
	
	return 0;
}