#include<iostream>
using namespace std;
long long int arr[1000010];
long long 	int grls[1000010];
long long int b[1000010];
#include<bits/stdc++.h>
long long int inc=0;
/* inverssion count */
void merg(long long int st,long long int m,long long int en);
void merge_sort(long long int st,long long int en)
{
  int m;
  if(en>st)
  {
   m=(st+en)/2;
   merge_sort(st,m);
   merge_sort(m+1,en);
   merg(st,m,en);
  }
}

void merg(long long int st,long long int m,long long int en)
{

 long long int f=st,k=st,sst=m+1,i;
 while(f<=m && sst<=en)
 {
   if(arr[f]<arr[sst])          ///sst= second start
    {b[k++]=arr[f++];}
   else
    {
	      b[k++]=arr[sst++];
          if(arr[f]!=arr[sst]) inc=inc+(m-f+1);  ///this line makes merge sort to inversion count
    }
 }

  if(f>m)
   for(i=sst;i<=en;i++)
   b[k++]=arr[i];

  else
  for(i=f;i<=m;i++)
  b[k++]=arr[i];

  for(i=st;i<=en;i++)
  arr[i]=b[i];
}
/* inverssion count end */

int main()
 {
 	int n;
 	 cin>>n;
 	vector<pair<int,int > >v;
 long long  int max=-1;
 	for(int i=0;i<n;i++)
 	 {
 	 	int a,b;
 	 	 cin>>a>>b;
 	 	 if(a>max) max=a;
 	 	 grls[i]=b;
 	 	 v.push_back(make_pair(a,b));
 	 }
 	 sort(v.begin(),v.end());
 	
 	 for(int i=0;i<n;i++)
 	  {
 	  	arr[i]=v[i].second;
 	  }
 	 
 	    merge_sort(0,n-1);
 	     cout<<inc<<endl;
 	     return 0;
 }