#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>

int sum;
int f[100][100000];
char s[100][100];
int n,m,l[100],e[100],v[100],num[100][100];
struct node{
	int x,y;
}p[20];
void work(int x,int y)
{
	memset(v,0,sizeof(v));
	for (int i=0;i<sum;++i)
		if (y&(1<<i)) v[p[i].y]=1;
	int nl=0,ne=0;
	for (int i=0;i<m;++i)
		if (s[x][i]=='L'){
			l[nl++]=i;
			y|=1<<num[x][i];
		}else if (s[x][i]=='E'&&!v[i]) e[ne++]=i;
	if (!ne) f[x][y]=1;
	else{
		for (int i=0;i<nl;++i)
			if (l[i]<=e[0]||l[i]>=e[ne-1])
				f[x][y^(1<<num[x][l[i]])]=1;
		for (int i=0;i<nl;++i)
			for (int j=i+1;j<nl;++j)
				f[x][y^(1<<num[x][l[i]])^(1<<num[x][l[j]])]=1;
	}
}
int main()
{
	int T;
	scanf("%d",&T);
	while (T--)
	{
		scanf("%d%d",&n,&m);
		for (int i=0;i<n;++i) scanf("%s",s[i]);
		sum=0;
		for (int i=0;i<n;++i)
			for (int j=0;j<m;++j)
				if (s[i][j]=='L'){
					p[sum].x=i;p[sum].y=j;
					num[i][j]=sum++;
				}
		memset(f,0,sizeof(f));
		f[n][0]=1;
		for (int i=n-1;i>=0;--i)
			for (int j=0;j<1<<sum;++j)
				if (f[i+1][j]) work(i,j);
		int ans=0;
		for (int j=0;j<1<<sum;++j)
			if (f[0][j])
			{
				ans=1;
				break;
			}
		if (ans) printf("Possible\n"); else printf("Impossible\n");
	}
	return 0;
}
