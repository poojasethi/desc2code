#include <map>
#include <set>
#include <cmath>
#include <queue>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;

#define PB push_back
#define MP make_pair

typedef double DB;
typedef long long LL;
typedef pair<int, int> PI;

const DB eps = 1e-8;
const int N = 55 + 7;
const int INF = 1e9 + 7;
const int MOD = 1e9 + 7;

struct Pnode{
    int x, y;
} p[20];


int n, m, bel[N][N], cnt, v[N], l[N], e[N];
bool f[55][1 << 16];

char s[N][N];

void Gao(int x, int y){
    memset(v, 0, sizeof(v));
    for (int i = 0; i < cnt; i++)
    if (y >> i & 1) v[p[i].y] = 1;


    int nl = 0, ne = 0;

    for (int i = 0; i < m; i++)
    if (s[x][i] == 'L'){
        l[nl++] = i;
        y |= 1 << bel[x][i];
    }else if (s[x][i] == 'E' && !v[i]) e[ne++] = i;


    if (!ne) f[x][y] = 1;
    else{
        for (int i = 0; i < nl; i++)
        if (l[i] <= e[0] || l[i] >= e[ne - 1])
            f[x][y ^ (1 << bel[x][l[i]])] = 1;

        for (int i = 0; i < nl; i++)
        for (int j = i + 1; j < nl; j++)
            f[x][y ^ (1 << bel[x][l[i]]) ^ (1 << bel[x][l[j]])] = 1;
    }
}

int main(){
    int cas;
    scanf("%d", &cas);
    while (cas--){
        scanf("%d%d", &n, &m);
        for (int i = 0; i < n; i++) scanf("%s", s[i]);
        cnt = 0;
        for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
        if (s[i][j] == 'L'){
            p[cnt].x = i, p[cnt].y = j;
            bel[i][j] = cnt++;
        }
        memset(f, 0, sizeof(f));
        f[n][0] = 1;
        for (int i = n - 1; i >= 0; i--)
        for (int j = 0; j < 1 << cnt; j++)
        if (f[i + 1][j]) Gao(i, j);

        int ans = 0;
        for (int j = 0; j < 1 << cnt; j++)
        if (f[0][j]){
            ans = 1;
            break;
        }
        if (ans) puts("Possible"); else puts("Impossible");
    }
}

