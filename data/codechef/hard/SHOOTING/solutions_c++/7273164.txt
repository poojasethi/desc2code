// tester soln
#include <bits/stdc++.h>
#define getchar_unlocked getchar
using namespace std;
int T, n, m, i, j, an, ax[100], ay[100], k, x, y, kx[100], py[100], it, u[100][100], ii;
char a[100][100], b[100][100];
bool fl, fr, fail, fb, fk;
int main ()
{
  scanf("%d",&T);
  while (T--)
  {
    an = 0;
    scanf("%d %d", &n, &m);
    for(i = 1; i <= n; i++) 
      for(j = 1; j <= m; j++)
      {
        a[i][j] = getchar_unlocked();
        while (a[i][j] != '.' && a[i][j] != 'E' && a[i][j] != 'L') a[i][j] = getchar_unlocked();
        if (a[i][j] == 'L')
          ++an, ax[an] = i, ay[an] = j;
      }
    ii = 1 << an;
    for(i = 0; i < ii; i++)
    {
      ++it; fb = 0;
      for(j = 1; j <= an; j++)
       if (i & (1 << (j - 1)))
       {
        for (x = ax[j], y = ay[j], fk = 0; x > 0; --x)
        {
          if (u[x][y] == it)
          {
            fb = 1;
            break;
          }
          u[x][y] = it;
          if (a[x][y] == 'E') fk=1;
        }
        if (!fk) fb=1;
        if (fb) break;
       }
      if (fb) continue;
      for(j = 1; j <= n; j++) kx[j] = 0;
      for(j = 1; j <= an; j++) if ((i & (1 << (j - 1))) == 0)
      {
        ++kx[ax[j]];
        py[ax[j]] = ay[j];
      }
      fail = 0;
      for(j = 1; j <= n; j++) if (kx[j] < 2)
      {
        for(fl = fr = 0, k = 1; k <= m; k++) 
          if (a[j][k] == 'E' && u[j][k] != it && py[j] > k) fl = 1;
          else if (a[j][k] == 'E' && u[j][k] != it)
            {
              fr = 1;
              break;
            }
        if (kx[j] == 0 && (fl || fr))
        {
          fail = 1;
          break;
        }
        if (fl && fr)
        {
          fail = 1;
          break;
        }
      }
      if (!fail)
      {
        puts("Possible");
        break;
      }
    }
    if (i == ii) puts("Impossible");
  }
}