#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<climits>
#include<sstream>

#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
#include<deque>
#include<list>
#include<bitset>

using namespace std;

typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs; 
typedef pair<int,int> pii;
typedef long long int lld;
typedef long double Lf;
typedef unsigned long long int llu;

#define sz(a)                        int((a).size()) 
#define pb                           push_back 
#define mp                           make_pair
#define F                            first
#define S                            second
#define present(c,x)                 ((c).find(x) != (c).end()) 
#define cpresent(c,x)                (find(all(c),x) != (c).end())
#define tr(c,i)                      for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define rtr(c,i)                      for(typeof((c).rbegin()) i = (c).rbegin(); i != (c).rend(); i++)
#define all(c)                       (c).begin(),(c).end()
#define si(n)                        inp(n)
#define sl(n)                        scanf("%lld",&n)
#define sf(n)                        scanf("%f",&n)
#define sd(n)                        scanf("%lf",&n)
#define ss(n)                        scanf("%s",n)
#define sii(n,m)		     inp(n);inp(m)
#define siii(n,m,r)		     inp(n);inp(m);inp(r)

#define abs(x)                       ((x)<0?-(x):(x))
#define fill(a,v)                    memset((a),(v),sizeof (a))
#define INF                          INT_MAX
#define LINF                         (long long)1e18
#define EPS                          1e-9
#define MODBY 1000000007
#define MAX     

#define getcx getchar_unlocked
 
inline void inp( int &n )
{
n=0;
int ch=getcx();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
n=n*sign;
}

int laser;
pii pos1[55];
string mp1[55];
int main()
{
	int t;
	si(t);
	while(t--)
	{
		int n,m,cnt=0;
		char c;
		sii(n,m);
		laser = 0;
		int k =0;
		for(int i=0;i<n;i++)
		{
			k=0;
			cin>>mp1[i];
			for(int j=0; j<m; j++)
			{
				if(mp1[i][j]=='L')
					cnt++;
			}
		}
		laser = (1ULL)<<cnt;
		int hoho=0;
		for(int i=0;i<laser;i++)
		{
			int col[55];
			fill(col,0);
			int yy = cnt-1,flag=0;
			for(int j=n-1;j>=0;j--)
			{
				int x1=0;
				int x2=0;
				int l1=0;
				for(int k=m-1;k>=0;k--)
				{
					if(mp1[j][k]=='L')
					{
						if(i&(1ll<<yy))
						{
							col[k]=1;
						}
						else
							l1++;
						yy--;
					}
					else if(mp1[j][k]=='E' && col[k]!=1)
					{
						if(!l1)
							x1++;
						else
							x2++;
					}

				}
				if(x1==0 && x2==0)
					continue;
				else if((x1==0 && l1!=0)||(x2==0 && l1!=0))
					continue;
				else if(x1!=0 && x2!=0 && l1>=2)
					continue;
				else
				{
					flag = 1;
					break;
				}
			}
			if(!flag)
			{
				hoho=1;
				break;
			}
		}
		if(hoho)
			printf("Possible\n");
		else
			printf("Impossible\n");
		
	}
	return 0;
}      
