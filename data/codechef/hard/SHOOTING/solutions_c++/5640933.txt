#include <bits/stdc++.h>
using namespace std;
#define N 50
char s[N + 1][N + 2];
char temp [N + 1][N + 2];
typedef pair <int,int> ii;
ii lasers[20];
//int mxe[N + 1],mne[N + 1],col[N + 1],mark[N + 1];
int main()
{
    int tc,t;
    scanf("%d ",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int n,m,i,j,fl=0,head=0;
        scanf("%d %d",&n,&m);
        for(i = 1 ; i<=n ; i++)
        {
            scanf("%s",s[i]+1);
            for(int j = 1 ; j<=m ; j++)
            {
                if(s[i][j] == 'L')
                {
                    head++;
                    lasers[head].first = i;
                    lasers[head].second = j;
                }
            }
        }
        int p2 = pow(2,head);
        for(int k = 0 ; k<p2 ; k++)
        {
            int mark[20] = {0};
            int col[51] = {0};
            int p = k;
            int f = 0;
            while(p > 0)
            {
                f++;
                if(p%2 == 1)
                {
                    mark[f] = 1;
                    col[lasers[f].second] = max(col[lasers[f].second],lasers[f].first);
                }
                p = p/2;
            }
            int gl = 1;
            int g = 0;
            for(i = 1 ; i<=n ; i++)
            {
                int posl = -1;
                int mxe = 0;
                int mne = 52;
                int las = 0;
                int en = 0;
                for(j = 1 ; j<=m ; j++)
                {
                    if(s[i][j] == 'E')
                    {
                        if(col[j] < i)
                        {
                            mxe = max(mxe,j);
                            mne = min(mne,j);
                            en++;
                        }
                    }
                    if(s[i][j] == 'L')
                    {
                        g++;
                        if(mark[g] == 0)
                        {
                            las++;
                            posl = j;
                        }
                    }
                }
                if(las == 0 && en > 0)
                {
                    gl = 0;
                    break;
                }
                if(las == 1 && (mne < posl && posl < mxe))
                {
                    gl = 0;
                    break;
                }
            }
            if(gl == 1)
            {
                fl = 1;
                break;
            }
        }
        if(fl == 1) printf("Possible\n");
        else printf("Impossible\n");
    }
    return 0;
}
 /*for(i = 1 ; i<=n ; i++)
            {
                int las = 0;
                int en = 0;
                int mne = 52;
                int mxe = 0;
                int posl = -1;
                for(int j = 1 ; j<=m ; j++)
                {
                    if(temp[i][j] == 'L')
                    {
                        las++;
                        posl = j;
                    }
                    if(temp[i][j] == 'E')
                    {
                        en++;
                        mne = min(mne,j);
                        mxe = max(mxe,j);
                    }
                }
                if(las == 0 && en > 0)
                {
                    gl = 0;
                    break;
                }
                if(las == 1 && (mne < posl && posl < mxe))
                {
                    gl = 0;
                    break;
                }
            }
            if(gl == 1)
            {
                fl = 1;
                break;
            }*/
