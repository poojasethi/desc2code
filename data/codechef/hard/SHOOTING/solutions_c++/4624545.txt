#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cassert>
#include <cstring>

#define NMAX 52


using namespace std;

int col[52][52];
int n[52];

int fst[52],lst[52];

int N,M;
int L;

pair<int,int> lasers[20];

int killed[52][52];
int enemy[52][52];

int compute(){
	int i,sel,x,y,s,e;

	for(sel = 0; sel < (1<<L); ++sel){

		for(i = 0; i < M; ++i) fst[i] = N, lst[i] = -1;


		for(i =0; i < L; ++i){

			x = lasers[i].first;
			y = lasers[i].second;

			if(sel&(1<<i)){
				while(x >= 0){
					killed[x][y] = sel;
					--x;
				}

				continue;
			}

			fst[x] = min(fst[x],y);
			lst[x] = max(lst[x],y);
		}


		for(i = 0; i < M; ++i){
			s = 0;
			e = n[i]-1;
			while(s < n[i] && (killed[i][col[i][s]] == sel))	++s;
			while(e >= s && (killed[i][col[i][e]] == sel)) --e;
			if(s > e) continue;
			if(fst[i] <= col[i][s] || lst[i] >= col[i][e]) continue;
			if(fst[i] < lst[i])  continue;
			break;
		}

		if(i < M) continue;
		break;
	}

	return (sel < (1<<L));
}

char str[52];



int main(){
	int i,t,j;

	scanf("%d",&t);

	while(t--){
		L = 0;

		memset(killed,-1,sizeof(killed));
		memset(enemy,-1,sizeof(enemy));
		memset(n,0,sizeof(n));

		scanf("%d%d",&M,&N);

		for(i =0 ; i < M; ++i){
			scanf("%s",str);
			for(j = 0; j < N; ++j){
				if(str[j]=='L'){
					lasers[L++] = make_pair(i,j);
				}else if(str[j] == 'E'){
					col[i][n[i]++] = j;
					enemy[i][j] = 1;
				}
			}
		}

		printf("%s\n",compute() ? "Possible" : "Impossible");
	}


	return 0;
}
