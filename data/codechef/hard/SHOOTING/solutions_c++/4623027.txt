#include <bits/stdc++.h>

using namespace std;

string a[101], aa[101];
char s[101];
vector<int> tmp[101], v[101], vv[101];
bool mm[51][51];

int main()
{
    int t;
   // ios_base::sync_with_stdio(false);
   // cin.tie(0);
    cin >> t;

    while(t--) {
        int n, m;
        cin >> n >> m;
        int g = 0;
        for(int i = 0; i < n; i++) {
            scanf("%s", s);
            a[i] = s;
            tmp[i].clear();
            vv[i].clear();
            v[i].clear();
            for(int j = 0; j < m; j++) {
                if(a[i][j] == 'L') v[i].push_back(j), tmp[i].push_back(g++);
                if(a[i][j] == 'E') vv[i].push_back(j);

            }
        }
        bool ff = false;
        for(int i = 0; i < (1<<g); i++) {
            memset(mm,0,sizeof(mm));
            for(int j = 0; j < n; j++) {
                for(int k = 0; k < vv[j].size(); k++) {
                    mm[j][vv[j][k]] = 1;
                }
            }
            int cc = 0;
            for(int j = 0; j < n; j++) {
                for(int k = 0; k < v[j].size(); k++) {
                    if(i&(1<<cc)) {
                        int x = j;
                        int y = v[j][k];
                        while(x >= 0) {
                            if(mm[x][y]) mm[x][y] = 0;
                            x--;
                        }
                    }
                    cc++;
                }
            }
            bool poss = true;
            for(int j = 0; j < n; j++) {
                for(int k = 0; k < vv[j].size(); k++) {
                     if(mm[j][vv[j][k]]) {
                        int x = j;
                        int y;
                        vector<int> avail;
                        for(int l = 0; l < tmp[x].size(); l++) {
                            if(i&(1<<tmp[x][l])) continue;
                            avail.push_back(v[x][l]);
                        }
                      //  for(int kk = 0; kk < avail.size(); kk++) {
                       //     cout << avail[kk] << " ";
                      //  }
                       // cout << endl;
                        if(avail.size() == 0) {
                            poss = false;
                            break;
                        }
                        if(avail.size() >= 2) {
                            break;
                        }
                        int ll, rr;
                        ll = rr = 0;
                        for(int l = 0; l < vv[j].size(); l++) {
                            if(mm[j][vv[j][l]]) {
                               // cout << "enter" << endl;
                                if(vv[j][l] < avail[0]) ll++;
                                else rr++;
                            }
                        }
                       // cout << l << " " << r << endl;
                        if(ll && rr) {
                            poss = false;
                            break;
                        }
                        else {
                            break;
                        }
                     }
                }
                if(!poss) break;
            }
            if(poss) {
                ff = true;
            }
            if(ff) break;
        }
        if(ff) {
            puts("Possible");
        }
        else {
            puts("Impossible");
        }
    }
}

/*
1
3 4
.E.L
..LE
EELE
*/

