#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>

using namespace std;

#define PB push_back
#define MP make_pair
#define AA first
#define BB second
#define OP begin()
#define ED end()
#define SZ size()
#define SORT(x) sort(x.OP,x.ED)
#define SQ(x) ((x)*(x))
#define SSP system("pause")
#define cmin(x,y) x=min(x,y)
#define cmax(x,y) x=max(x,y)
typedef long long LL;
typedef pair<int, int> PII;
const double eps=1e-8;
const double PI=acos(-1.);
const LL MOD = 1000000007;

char s[55][55];
int main() {
	//freopen("","r",stdin);
	//freopen("","w",stdout);
	int i,j,k,_T;
	scanf("%d",&_T);
	while(_T--) {
		int n,m;
		scanf("%d%d",&n,&m);
		vector<PII>L;
		vector<int>G[55];
		int vis[55];
		int le[55],re[55];
		for(i=0; i<n; i++)scanf("%s",s[i]);
		for(i=0; i<n; i++)for(j=0; j<m; j++)if(s[i][j]=='L')L.PB(MP(i,j));
		for(i=0; i<n; i++)G[i].clear();
		for(i=0; i<n; i++)for(j=0; j<m; j++)if(s[i][j]=='E')G[i].PB(j);
		int got=0;
		for(int s=0; s<1<<L.SZ; s++) {
			for(i=0; i<m; i++)vis[i]=-1;
			for(i=0; i<n; i++)le[i]=m,re[i]=-1;
			for(i=0; i<L.SZ; i++)
				if(s>>i&1)cmax(vis[L[i].BB],L[i].AA);
				else cmin(le[L[i].AA],L[i].BB),cmax(re[L[i].AA],L[i].BB);
			int fail=0;
			for(i=0; i<n; i++)if(!G[i].empty()) {
					int pe=m,qe=-1;
					for(j=0; j<G[i].SZ; j++) {
						int u=G[i][j];
						if(i<=vis[u])continue;
						cmin(pe,u),cmax(qe,u);
					}
					if(pe>qe)continue;
					if(le[i]>re[i]) {fail=1; break;}
					if(le[i]==re[i]) {
						if(le[i]>=qe||le[i]<=pe);
						else {fail=1; break;}
					}
				}
			if(!fail) {got=1; break;}
		}
		if(got)puts("Possible");
		else puts("Impossible");
	}
	return 0;
}

