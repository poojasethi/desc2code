#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <cmath>

using namespace std;

#define LL long long
#define ll long long
#define PB push_back
#define MP make_pair
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define F first
#define S second
#define MAXN 500
#define INF 250000010
#define MOD 1000000007

int n, m;
char s[52][52];
vector<pair<int, int> > v;
vector<int> adj[52];
int done[52];
int tp[39];
int arr[52][52];
int final;
int vis[52];

bool poss(int x){
    int cnt = 0;
    for(int i = 0; i <= m; i++){
        done[i] = 0;
    }

    for(int i =  v.size() - 1; i >= 0; i--){
        if(tp[i] & x){
    //        cout<<1<<" "<<v[i].F<<" "<<v[i].S<<endl;
            done[ v[i].S ] = max(done[v[i].S], v[i].F);
        }
    }
    //cout<<endl;

    for(int i = 1; i <= m; i++){
        cnt += arr[ done[i] ][i];
    }
    int rw;
    for(int i = 1; i <= n; i++){
        vis[i] = 0;
    }
    for(int i = 0; i < v.size(); i++){
        if(tp[i] & x){
            continue;
        }
        bool bv = 0;
        rw = v[i].F;
        if(vis[rw] == 1){
            continue;
        }
            for(int j = 0; j < adj[rw].size(); j++){
                if(adj[rw][j] == i || (tp[adj[rw][j]] & x)){
                    continue;
                }
                    bv = 1;
                    break;
            }
        vis[rw] = 1;
        if(bv == 1){
            for(int j = 1; j <= m; j++){
                if(done[j] < rw && s[rw][j] == 'E'){
                    cnt++;
                }
            }
        }
        else{
                int temp1 = 0, temp2 = 0;
                int flag = 1;
                for(int j = 1; j <= m; j++){
                    if(j == v[i].S){
                        flag = 2;
                        continue;
                    }
                    if(flag == 1 && s[rw][j] == 'E' && done[j] < rw){
                        temp1 ++;
                    }
                    if(flag == 2 && s[rw][j] == 'E' && done[j] < rw){
                        temp2++;
                    }
                }
                if(temp1 == 0 || temp2 == 0){
                    cnt += (temp1 + temp2);
                }
                else{
                   // return 0;
                }
        }
    }
    if(cnt == final){
        return 1;
    }
    else{
        return 0;
    }
}
int solve(){
    cin>>n>>m;
    for(int i = 1; i <= n; i++){
        adj[i].clear();
    }
    v.clear();
    final = 0;
    for(int i = 1; i <= n; i++){
        scanf("%s", &(s[i][1] ));
    }
    for(int i = 1; i <= m; i++){
        arr[0][i] = 0;
    }
    for(int i = 1; i <= n; i++){
        for(int j = 1; j <= m; j++){
            arr[i][j] = arr[i - 1][j];
            if(s[i][j] == 'L'){
                v.PB(MP(i, j));
                adj[i].PB( v.size() - 1);
            }
            if(s[i][j] == 'E'){
                final ++;
                arr[i][j]++;
            }
        }
    }
    for(int i = 0; i < tp[ v.size() ]; i++){
        if(poss(i)){
            return 1;
        }
    }
    return 0;
}
int main(){
    int test = 1;
    tp[0] = 1;
    for(int i = 1; i <= 20; i++){
        tp[i] = tp[i-1] + tp[i-1];
    }
    //freopen("input.txt", "r", stdin);
    //freopen("my.txt", "w", stdout);
    cin>>test;
    while(test--){
        if(solve()){
            cout<<"Possible"<<endl;
        }
        else{
            cout<<"Impossible"<<endl;
        }
    }
    return 0;
}
