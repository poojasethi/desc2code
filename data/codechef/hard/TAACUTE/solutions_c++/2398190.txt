/*
 * File:      main.cpp
 * Author:    Hrayr [HarHro94]
 * Problem:
 * IDE:       Visual C++ 2012
 */
#pragma comment(linker, "/STACK:67108864")
#define _CRT_SECURE_NO_WARNINGS
#include <functional>
#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <cassert>
#include <iomanip>
#include <cstring>
#include <cstdio>
#include <string>
#include <vector>
#include <ctime>
#include <queue>
#include <stack>
#include <cmath>
#include <set>
#include <map>
using namespace std;

typedef long long LL;
typedef long double LD;
#define pb push_back
#define mp make_pair
#define all(v) (v).begin(), (v).end()
#define sz(v) (int)(v).size()

#define y1 myy1
const LD pi = acos(-1.0);
const LD eps = 1e-8;

#define Point Vect
class Vect // also Point
{
public:
    LD x, y;

    Vect(LD x = 0.0, LD y = 0.0) : x(x), y(y) { }

    Vect(const Vect &o)
    {
        x = o.x;
        y = o.y;
    }

    Vect(const Point &A, const Point &B)
    {
        x = B.x - A.x;
        y = B.y - A.y;
    }

    inline LD getFi() const
    {
        LD ret = atan2(y, x);
        if (ret < 0.0)
        {
            ret += 2 * pi;
        }
        return ret;
    }

    Vect operator + (const Vect &o) const
    {
        return Vect(x + o.x, y + o.y);
    }

    Vect operator - (const Vect &o) const
    {
        return Vect(x - o.x, y - o.y);
    }
};

int main()
{
#ifdef harhro94
    freopen("input.txt", "r", stdin);
    freopen("output.txt", "w", stdout);
#endif

    int n;
    cin >> n;
    vector<Point> pt(n);
    for (int i = 0; i < n; ++i)
    {
        cin >> pt[i].x >> pt[i].y;
    }
    LL ans = 0;
    for (int i = 0; i < n; ++i)
    {
        vector<Vect> V;
        for (int j = 0; j < n; ++j)
        {
            if (i == j)
            {
                continue;
            }
            V.pb(pt[j] - pt[i]);
        }
        int m = n - 1;
        vector<LD> mas;
        for (int j = 0; j < m; ++j)
        {
            mas.pb(V[j].getFi());
        }
        sort(all(mas));
        for (int j = 0; j < m; ++j)
        {
            mas.pb(2 * pi + mas[j]);
        }
        int l = 0;
        int r = 0;
        for (int j = 0; j < m; ++j)
        {
            while (l < 2 * m && mas[l] - mas[j] < pi / 2.0 - eps)
            {
                ++l;
            }
            while (r < 2 * m && mas[r] - mas[j] < 1.5 * pi + eps)
            {
                ++r;
            }
            ans += (r - l);
        }
    }
    assert(ans % 2 == 0);
    cout << (LL)n * (LL)(n - 1) * (LL)(n - 2) / 6 - ans / 2 << endl;

#ifdef harhro94
    cerr << fixed << setprecision(3) << "\nExecution time = " << clock() / 1000.0 << "s\n";
#endif
    return 0;
}