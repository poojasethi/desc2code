#include <stdio.h>
#include <math.h>
#include <time.h>

#ifndef ONLINE_JUDGE
#define getchar_unlocked getchar
#endif

#define TOL 1e-9

int getInt()
{
	int N = 0;
	char ch = getchar_unlocked();
	while( ch == ' ' || ch == '\n' )
		ch = getchar_unlocked();
	while( ch >= '0' && ch <= '9' )
	{
		N = (N*10) + ch - '0';
		ch = getchar_unlocked();
	}
	return N;
}

double getAng( int x, int y )
{
	double ang = atan2( y, x );
	if( ang < 0 )
		ang += (2*M_PI);
	return ang;
}

void swap( double* i, double* j ) { double temp = *i; *i = *j; *j = temp; }
void qsrt( double* p, double* q )
{
	double* j = p;
	double* i = p;
	double pivot = *q;
	if( p < q )
	{
		while( j != q )
		{
			if( *j < pivot )
			{
				swap( i, j );
				i++;
			}
			j++;
		}
		swap( i, q );
		qsrt( p, i-1);
		qsrt( i+1, q );	
	}
}


int X[2001];
int Y[2001];
double angles[10000];
int main()
{
	int n, i, j, k;
	int acute,notAcute;
	long long ans = 0, st = 1;
	int inc;
	int tx, ty;
	
#ifndef ONLINE_JUDGE
	freopen("taacute.txt", "r", stdin );
#endif
	n = getInt();
	for( i = 0 ; i< n;++i )
	{
		X[i] = getInt();
		Y[i] = getInt();
	}
	
	for( i = 0 ; i< n;++i )
	{
		inc = 0;
		tx = X[i];
		ty = Y[i];
		for( j = 0; j < n ; ++j )
		{
			X[j] -= tx;
			Y[j] -= ty;
			if( i!=j)
				angles[inc++] = getAng( X[j], Y[j]);
		}
		qsrt( angles, angles + n - 2);
		for( j = 0; j < n -1 ; ++j )
		{
			angles[inc++] = ( angles[j] + (2*M_PI) );
		}
		acute = 0;
		notAcute = 0;
		for( j = 0; j < n -1 ; ++j )
		{
			for(; angles[acute] - angles[j] < M_PI_2 - TOL; ++acute);
			for(; angles[notAcute] - angles[j] < 3 * M_PI_2 + TOL; ++notAcute);
			ans+=(notAcute-acute);
		}
	}
	printf("%ld\n", (st*n*(n-1)*(n-2)/6)-(ans/2));
#ifndef ONLINE_JUDGE
	printf("%d\n", clock());
#endif
	return 0;
}
