#include <bits/stdc++.h>
#define msg(x) cout << #x << " = " << x << endl
using namespace std;

typedef vector<int> VI;
typedef long long LL;
typedef unsigned long long uLL;
typedef pair<double, double> PDD;
typedef vector<PDD> VPDD;
#define pb push_back
#define fi first
#define se second
#define mp make_pair
#pragma comment(linker, "/STACK:266777216")

const double eps=1e-9; //10^-3 * 10^-3 ...
const double PI=2*acos(0.0);

int N;
VPDD pts, ori;

bool cmp(PDD a, PDD b) {
  if(a.se<=0 && b.se>0)return 1;
  if(a.se>0 && b.se<=0)return 0;
  if(a.se == 0 && b.se==0)return (a.fi<b.fi);
  if(a.fi*b.se - b.fi*a.se>0)return 1;
  return 0;
}

bool isacute(PDD a, PDD b) {
    if(a.fi*b.se - a.se*b.fi >= 0 && a.fi*b.fi + a.se*b.se>0) {
        return 1;
    }
    return 0;
}

bool isacute2(PDD a, PDD b) {
    if(a.fi*b.se - a.se*b.fi > 0 && a.fi*b.fi + a.se*b.se>0) {
        return 1;
    }
    return 0;
}

LL obtuse() {
    LL ans = 0;
    int j=0, a=1,b=1, M=N-1;

    sort(pts.begin(), pts.end(), cmp);

    while(j<M) {
        while(isacute(pts[j], pts[a]) && a<M) {
            a++;
        }
        while(!isacute2(pts[b], pts[j]) && b<M) {
           b++;
        }
        ans += (LL)(b-a);
        j++;
    }
    return ans;
}

LL nC3(int a) {
    LL ans = ((LL)a*(a-1)*(a-2))/6;
    return ans;
}

int main()
{
    cin.sync_with_stdio(0); cin.tie(0);
    ori.clear();
    double x, y;
    LL res = 0, ans;

    cin >> N;
    for(int i=0; i<N; i++) {
        cin >> x >> y;
        ori.pb(mp(x,y));
    }
    for(int i=0; i<N; i++) {
        pts.clear();
        for(int j=0; j<N; j++) {
            if(j!=i) {
                pts.pb(mp(ori[j].fi - ori[i].fi, ori[j].se - ori[i].se));
            }
        }
        res+= obtuse();
    }
    ans = nC3(N);
    cout << ans - res << "\n";
}
