#define ll long long
#define vi vector <int>
#define pii pair <int,int>
#define FOR(i, a, b) for (int i = (a); i <= (b); i++)
#define REP(i, a) for (int i = 0; i < (a); i++)
#define ALL(v) (v).begin(), (v).end()
#define SET(a, x) memset((a), (x), sizeof(a))
#define SZ(a) ((int)(a).size())
#define CL(a) ((a).clear())
#define SORT(x) sort(ALL(x))
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))

#define filer() freopen("in.txt","r",stdin)
#define filew() freopen("out.txt","w",stdout)

#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <queue>


#define NN 100005
using namespace std;

#define EPS 1e-10
typedef pair<ll,ll> Poll;

double pi = acos(-1.);
double mytan(ll dx,ll dy){
	if(!dy){
		if(dx > 0)	return 0;
		else		return pi;
	}
	if(!dx){
		if(dy > 0)	return pi/2.;
		else		return 3.*pi/2.;
	}
	double at = atan2(1.*dy,1.*dx);
	if(at < 0)	at+=2*pi;
	return at;
}

ll n;
Poll p[4444];
ll m;
double a[4444];

int main(){

   // filer();

	ll T=0;
	ll i,j,k,l,s;
	ll tot;

    scanf("%lld",&n);

	{

		for(i=0;i<n;++i)
			scanf("%lld%lld",&p[i].first,&p[i].second);

		tot = 0;
		ll c,tot2=0;
		for(i=0;i<n;++i){
			m = 0;
			for(j=0;j<n;++j)if(i!=j)
				a[m++] = mytan(p[j].first - p[i].first,p[j].second-p[i].second);
			sort(a,a+m);

			for(j=0;j<m;++j)
				a[j+m] = a[j]+2*pi;

			j=0;
			k=0;
			l=k;
			s=0;

			while(j<m){

				while(s<j+m && fabs(a[s]-a[j])<EPS)s++;

				tot2+=(s-j-1);

				while(k<j+m && a[k]-a[j] < pi/2.-EPS)++k;
			//	if(k==j+m)	break;



				while(l<j+m && ((a[l]-a[j]) < pi) && fabs((a[l]-a[j])-pi)>EPS   )++l;

			//	assert(fabs((a[l]-a[j])-pi)>EPS);

			//	if(k==j+m)	break;
				if(l>k)	tot += l-k;
				++j;

			}

		}

		assert(tot2%2==0);

		printf("%lld\n",n*(n-1)*(n-2)/6 - tot-tot2/2 );
	}
	return 0;
}
