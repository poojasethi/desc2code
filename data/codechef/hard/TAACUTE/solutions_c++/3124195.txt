#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<memory.h>
#include<cstdlib>
#include<cmath>
#include<cassert>
#include<memory.h>
#include<algorithm>
#include<queue>
#include<utility>
#include<map>
#include<bitset>
using namespace std;

typedef vector<int> VI;
typedef long long LL;
typedef unsigned long long uLL;
typedef pair<int, int> PII;
typedef vector<PII> VPII;
#define pb push_back
#define fi first
#define se second
#define mp make_pair
#pragma comment(linker, "/STACK:266777216")

const int inf=1000000000;
const LL INF=LL(inf)*inf;
const double eps=1e-9;
const double PI=2*acos(0.0);

int N;
VPII pts, ori;

bool cmp(PII a, PII b)
{
  if(a.se<=0 && b.se>0)return 1;
  if(a.se>0 && b.se<=0)return 0;
  if(a.se == 0 && b.se==0)return (a.fi<b.fi);
  if(a.fi*b.se - b.fi*a.se>0)return 1;
  return 0;
}
bool isacute(PII a, PII b)
{
    if(a.fi*b.se - a.se*b.fi >= 0 && a.fi*b.fi + a.se*b.se>0)
    {
        return 1;
    }
    return 0;
}
bool isacute2(PII a, PII b)
{
    if(a.fi*b.se - a.se*b.fi > 0 && a.fi*b.fi + a.se*b.se>0)
    {
        return 1;
    }
    return 0;
}
bool isless180(PII a, PII b)
{
    if(a.fi*b.se - a.se*b.fi >0)
    {
        return 1;
    }
    if(a.fi*b.se - a.se*b.fi == 0 && a.fi*b.fi + a.se*b.se>0 )
    {
        return 1;
    }
    return 0;
}

LL obtuse()
{

    LL cnt = 0;
    sort(pts.begin(), pts.end(), cmp);

      //To find number of obtuse angles
    int j=0, a=1,b=1,c=1,d=1, ans, sub, M=N-1;

    while(j<M)
    {
        //cout<<j<<" "<<M<<endl;
        while(isacute(pts[j], pts[a]) && a<M)
        {
            a++;
        }
        while(!isacute2(pts[b], pts[j]) && b<M)
        {
           b++;
        }
        //cout<<"a "<<a<<" b "<<b<<endl;
        ans = b-a;
        if(ans<0)
        {
            cout<<"much doge"<<endl;
            ans = 0;
        }
        while(isless180(pts[j], pts[c]) && c<M)
        {
            c++;
        }
        while(!isless180(pts[d], pts[j]) && d<M)
        {
            d++;
        }
        sub = d-c;
        if(sub<0)sub =0;
        sub = 0;
        //cout<<"j"<<j<<" ans "<<ans<<" sub "<<sub<<endl;
        cnt += (LL)(ans - sub);
        j++;
    }
    return cnt;
}

LL nC3(int a)
{
    LL ans = ((LL)a*(a-1)*(a-2))/6;
    return ans;
}

void solve()
{
    ori.clear();
    int x, y;
    LL res = 0, ans;

    scanf("%d", &N);
    for(int i=0; i<N; i++)
    {
        scanf("%d%d", &x, &y);
        ori.pb(mp(x,y));
    }

    for(int i=0; i<N; i++)
    {
        pts.clear();
        for(int j=0; j<N; j++)
        {
            //cout<<j<<endl;
            if(j!=i)
            {
                pts.pb(mp(ori[j].fi - ori[i].fi, ori[j].se - ori[i].se));
            }
        }
        res+= obtuse();
        //cout<<i<<" "<<res<<endl;
    }

    ans = nC3(N);
    //cout<<ans<<endl;
    printf("%lld\n", ans - res );
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    solve();
}
