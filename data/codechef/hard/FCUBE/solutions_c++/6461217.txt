#include <bits/stdc++.h>
using namespace std;
#define ll long long 
#define mod 1000000007

int plimit=1000006 , prime[1000000] , cnt=0 ,  mark[1000010]={0};
ll num[105] , num1[105];

void sieve(){
	
	for(int i=2 ; i*i<plimit ; i++){
		if(!mark[i]){
			for(int j=i*i ; j<=plimit ; j+=i) mark[j]=1;
		}
	}
	for(int i=2 ; i<plimit ; i++){
		if(!mark[i]) prime[cnt++]=i;
	}
}

int main() {
	sieve();
	int t , n;
	scanf("%d" , &t);
	while(t--){
		scanf("%d" , &n);
		
		for(int i=0 ; i<n ; i++) scanf("%lld" , &num[i]);
		
		map<ll , int> m;
		map<ll , int>::iterator k;
		
		for(int i=0 ; i<n ; i++){
			for(int j=0 ; j<cnt && prime[j]<=num[i] ; j++){
				while(num[i]%prime[j]==0) { m[prime[j]]++; num[i]/=prime[j] ; }
			}
		}
		
		for(int i=0 ; i<n ; i++){
			num1[i]=num[i];
			for(int j=0 ; j<n ; j++){
				ll g=__gcd(num[i] , num[j]);
				if(g!=1 && g!=num[i]){
					m[g]++; m[num[i]/g]++; num1[i]=1;
					break;
				}
			}
		}
		
		for(int i = 0; i < n; ++i) {
            long long x = (long long)sqrt(num1[i]);
            for(int d = -2; d <= 2; ++d) {
                if(x + d > 1 && (x + d) * (x + d) == num[i]) {
                    m[x + d] += 2;
                    num1[i] = 1;
                    break;
                }
            }
        }
		
		for(int i=0 ; i<n ; i++){
			if(num1[i]!=1) m[num1[i]]++;
		}
		
		ll ans=1; 
		
		for(k=m.begin() ; k!=m.end() ; k++){
			int x=k->second;
			if(x%3) x=(x+3-x%3);
			for(int i=0 ; i<x ; i++){
				ans=ans*(k->first%mod)%mod;
			}
		}
		
		cout<<ans<<"\n";
		
	}
	return 0;
}