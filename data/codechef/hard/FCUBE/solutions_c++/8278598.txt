#include <bits/stdc++.h>

#define fi first
#define se second
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define MOD 1000000007
#define ll long long int
#define MAXINT 1000000000000LL

using namespace std;

ll A[101];
bool sieve[1000006];
vector<int> primes;
map<ll,ll> factors;
map<ll,ll> pairs;

void precompute(void) {
	int i,j;
	for(i=2;i*i<=1000000;i++) {
		if(sieve[i]==0) {
			for(j=i;j*i<=1000000;j++)
				sieve[j*i]=1;
		}
	}
	for(i=2;i<=1000000;i++)
		if(sieve[i]==0)
			primes.pb(i);
}

ll power(ll a,ll b) {
	ll ans=1;
	while(b) {
		if(b&1)
			ans=(ans*a)%MOD;
		a=(a*a)%MOD;
		b>>=1;
	}
	return ans;
}

ll gcd(ll a,ll b) {
	if(b>a)
		return gcd(b,a);
	if(b==0)
		return a;
	return gcd(b,a%b);
}

void addfactor(ll x,ll c) {
	if(factors.find(x)==factors.end())
		factors[x]=c;
	else
		factors[x]+=c;
}

ll dofactoring(ll x) {
	int i;
	ll y,c;
	for(i=0;i<primes.size() && x>1;i++) {
		y=primes[i];
		c=0;
		while(x%y==0) {
			c++;
			x/=y;
		}
		if(c)
			addfactor(y,c);
	}
	return x;
}

void solve(void) {
	factors.clear();
	pairs.clear();
	int i,n,done;
	ll x,y,z,ans=1;
	cin>>n;
	for(i=1;i<=n;i++)
		cin>>A[i];
	for(i=1;i<=n;i++) {
		x=dofactoring(A[i]);
		if(x==1)	continue;
		y=sqrt(x);
		if(y*y==x) 
			addfactor(y,2);
		else if((y+1)*(y+1)==x)
			addfactor(y+1,2);
		else if((y-1)*(y-1)==x)
			addfactor(y-1,2);
		else {
			if(pairs.find(x)==pairs.end())
				pairs[x]=1;
			else
				pairs[x]+=1;
		}
	}
	map<ll,ll> :: iterator it,jt;
	for(it=pairs.begin();it!=pairs.end();it++) {
		x=it->fi;
		y=it->se;
		done=0;
		for(jt=factors.begin();jt!=factors.end();jt++) {
			if(x%(jt->fi) == 0) {
				addfactor(jt->fi,y);
				z=x/(jt->fi);
				addfactor(z,y);
				done=1;
				break;
			}
		}
		if(done)
			pairs.erase(x);
	}
	for(it=pairs.begin();it!=pairs.end();it++) {
		jt=it;
		jt++;
		done=0;
		for(;jt!=pairs.end();jt++) {
			x=gcd(it->fi,jt->fi);
			if(x==1)	continue;
			addfactor(x,it->se+jt->se);
			addfactor(it->fi/x,it->se);
			addfactor(jt->fi/x,jt->se);
			done=1;
			break;
		}
		if(done) {
			pairs.erase(jt->fi);
			pairs.erase(it->fi);
		}
		else
			addfactor(it->fi,it->se);
	}
	ans=1;
	for(it=factors.begin();it!=factors.end();it++) {
		//cout<<it->fi<<" "<<it->se<<endl;
		ans=(ans*power(it->fi%MOD,ceil(it->se/3.0)*3))%MOD;
	}
	cout<<ans<<endl;
}

int main () {
	precompute();
	int i,test;
	cin>>test;
	for(i=1;i<=test;i++)
		solve();
	return 0;
}