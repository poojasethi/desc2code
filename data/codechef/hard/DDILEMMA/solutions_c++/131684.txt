#include<stdio.h>
#include<cmath>
#include<string>
#include<cstring>

#define FOR(i,a,b) for(int i=(a);i<(b);++i)
#define FORD(i,a,b) for(int i=(a);i>=(b);--i)
#define REP(i,n) FOR(i,0,n)

typedef long long ll;
using namespace std;

int m, n;
char adj[256][256];
int dp[35][35];
char domains[8000][35];

int myabs(int x) {
	return x < 0 ? -x : x;
}

int edit_Dis(char* a, char* b) {
	int n1 = strlen(a), n2 = strlen(b);
	if (myabs(n1-n2) > 2) return 3;
	//memset(dp, 0, sizeof(dp));
	
	int res = 3;
	REP(i, n1) {
		dp[i][0] = i;
		REP(j, n2) {
			dp[0][j] = j;
			if (a[i] == b[j]) 
				dp[i+1][j+1] = dp[i][j];
			else 
				dp[i+1][j+1] = min(dp[i][j]+adj[a[i]][b[j]],1 + min(dp[i+1][j], dp[i][j+1]));
		}
		//printf("%d,%d->%d\n",i+1, j+1, dp[i+1][j+1]);
	}
	return dp[n1][n2];
}

int main() {
	REP(i, 256) REP(j, 256) adj[i][j] = (i == j ? 0 : 2);
	string r[4] = {"1234567890", "qwertyuiop", "asdfghjkl", "zxcvbnm"};
	REP(j, 4) REP(i, r[j].size()-1) {
		char a = r[j][i];
		char c = r[j][i+1];
		adj[a][c] = adj[c][a] = 1;
	}
	
	scanf("%d%d", &m, &n);
	REP(i, m) {
		scanf("%s", domains[i]);
	}
	//cout << d.size() << endl;
	REP(i, n) {
		char w[35];
		memset(w, 0, sizeof(w));
		scanf("%s",w);
		int cnt = 0;
		int mn = 3;
		REP(j, m) {
			int dis = edit_Dis(domains[j], w);
			if (dis > 2) continue;
			++cnt; mn = min(mn, dis);
		}
		int res = (mn == 3) ? 0 : ((mn == 0) ? -1 : ((mn == 1) ? 50 : 25));
		if (res > 0) res = (int)(res + log10(cnt));
		printf("%d\n", res);
	}
	return 0;
}
