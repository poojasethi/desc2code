#include<bits/stdc++.h>
using namespace std;
#define sd(x) 						scanf("%d", &x)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define      fill(a)           memset(a, 0, sizeof (a))
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define MOD 1000000007
#define D double
#define LD long double
typedef long long int LL;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef vector<LL> vl;
typedef vector< vector<int> > vii;
typedef vector< vector<LL> > vll;
ifstream fin;        ofstream fout;
#define MAX 200 + 7
/*
	for making order increase by one - n*((m + 1 c 1)*(m + 2 c 1)*(m + 3 c 1)*.......(m + n - 1 c 1))
	for making it be same - (m + 1 c 1)*(m + 2 c 1)*(m + 3 c 1)*.......(m + n - 1 c 1);
*/

int main(int argc, char *argv[])
{
	if(argc == 3){fin.open(argv[1]);fout.open(argv[2]);}
	int tc;
	sd(tc);
	while(tc--){
		int k,n;
		sd(n);sd(k);
		LL hash[MAX];
		memset(hash,0,sizeof(hash));
		for(int i = 0;i < n;i++){
			int inp;
			cin>>inp;
			hash[inp]++;	
		}
		LL dp[k + 5];
		memset(dp,0,sizeof(dp));
		dp[1] = 0;
		dp[0] = 1;
		LL size = 0;
		for(int i = 201;i >= 1;i--){
		/*	if(hash[i] > 0 && size == 0){
				LL perm = 1;
				for(int l = size + 1;l <= size + hash[i] - 1;l++)
					perm = (perm*l)%MOD;
				dp[1] = perm;
				size += hash[i];
			}
		*/	if(hash[i] > 0){
				LL perm = 1;
				for(int l = size + 1;l <= size + hash[i] - 1;l++)
					perm = (perm*l)%MOD;
				for(int j = k;j >= 0;j--){
					dp[j + 1] = (dp[j + 1] + (((perm * dp[j])%MOD) * hash[i])%MOD)%MOD;
					dp[j] = ((((dp[j]*perm)%MOD)*size)%MOD);
				}
				size += hash[i];
			}
		}
		LL ans = 0;
		for(int i = 1;i <= k;i++)
			ans = (ans + dp[i])%MOD;

		cout<<ans<<endl;
	}
	return 0;
}