/*
 * Author:  Eyelids
 * Created Time:  2014/10/21 21:50:44
 * File Name: A.cpp
 */
#include<iostream>
#include<sstream>
#include<fstream>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cctype>
#include<cmath>
#include<ctime>
using namespace std;
const double eps(1e-8);
typedef long long lint;
#define clr(x) memset( x , 0 , sizeof(x) )
#define sz(v) ((int)(v).size())
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repf(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i >= (b); --i)
#define clrs( x , y ) memset( x , y , sizeof(x) )
typedef long long LL;
const LL MOD = (LL)1e9 + 7;
const int N = 200;
int n, m, a[210];
LL dp[210][210], c[210][210], g[210];
void UPD( LL &a, LL b ) {
    a += b;
    a %= MOD;
}

int main(){
    int T;
    scanf( "%d", &T );
    for ( int i = 0; i <= N; i ++ )
        for ( int j = 0; j <= i; j ++ ) c[i][j] = ( j ) ? ( c[i - 1][j - 1] + c[i - 1][j] ) % MOD : 1;
    g[0] = 1;
    for ( int i = 1; i <= N; i ++ ) g[i] = g[i - 1] * i % MOD;
    
    while ( T -- ) {
        scanf( "%d%d", &n, &m );
        for ( int i = 0; i < n; i ++ ) scanf( "%d", &a[i] );
        sort( a, a + n );
        memset( dp, 0, sizeof(dp) );
        dp[0][0] = 1;
        
        for ( int i = 1; i <= n; i ++ ) {
            for ( int j = 0; j < i; j ++ ) {
                for ( int k = 0; k <= j; k ++ ) {
                    if ( !j || a[i - 1] > a[j - 1] ) {
                        UPD( dp[i][k + 1], dp[j][k] * c[n - j - 1][i - j - 1] % MOD * g[i - j - 1] % MOD );
                    } else {
                        UPD( dp[i][k], dp[j][k] * c[n - j - 1][i - j - 1] % MOD * g[i - j - 1] % MOD );
                    }
                }
            }
        }
        LL ret = 0;
        for ( int i = 1; i <= m; i ++ ) UPD( ret, dp[n][i] );
        
        cout <<ret<<endl; 
    }
    
    return 0;
}











