#include <bits/stdc++.h>

#define REP(i, n) for (int i = 0; i < (int) (n); ++i)
#define REPP(i, a, b) for (int i = (int) a; i <= (int) (b); ++i)

using namespace std;

const int N = 205;
int f[N][N][N], g[N][N][N], a[N];
const int MOD = (int) 1e9 + 7;

void add(int &x, int y) {
	x += y;
	if (x >= MOD) x -= MOD;
}

int main() {
	int t, n, k;

	//freopen("cf.in", "r", stdin);

	scanf("%d", &t);
	while (t--) {
		scanf("%d %d", &n, &k);
		REPP(i, 1, n) {
			scanf("%d", a + i);
		}
		sort(a + 1, a + n + 1);
		reverse(a + 1, a + n + 1);

		f[1][1][a[1]] = 1;
		for (int k = 200; k >= 1; --k) {
			g[1][1][k] = g[1][1][k + 1];
			add(g[1][1][k], f[1][1][k]);
		}

		REPP(i, 2, n) {
			REPP(j, 1, i) {
				add(f[i][j][a[i]], g[i - 1][j - 1][a[i] + 1]);
				add(f[i][j][a[i]], f[i - 1][j][a[i]]);
				for (int k = 200; k >= a[i]; --k) add(f[i][j][k], 1ll * (i - 1) * f[i - 1][j][k] % MOD);
			}
			REPP(j, 1, i) {
				for (int k = 200; k >= 1; --k) {
					g[i][j][k] = g[i][j][k + 1];
					add(g[i][j][k], f[i][j][k]);
				}
			}
		}
		int ans = 0;
		REPP(i, 1, k) add(ans, g[n][i][a[n]]);
		printf("%d\n", ans);
		REPP(i, 1, n) REPP(j, 1, i) REPP(k, 1, 200) f[i][j][k] = g[i][j][k] = 0;
	}

}
