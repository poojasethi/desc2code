#include <bits/stdc++.h>
using namespace std;

/*
*/
const int mod = 1000000007;
int ch[205][205];
int P(int n, int k)
{
	if (n < k)
		return 0;
	if (k == 0)
		return 1;
	if (ch[n][k] != -1)
		return ch[n][k];
	return ch[n][k] = (n*1ll*P(n-1, k-1)) % mod;
}



int a[205];
int cnt[205];
int dp[205][205];
int sol(int n, int k, int i)
{
	if (k < 0)
		return 0;
	if (n == 0)
	{
		return 1;
	}
	if (dp[n][k] != -1)
		return dp[n][k];
	if (cnt[i] == 0)
		return dp[n][k] = sol(n, k, i+1);
	return dp[n][k] = (((cnt[i]*1ll*P(n-1, cnt[i]-1)) % mod)*sol(n-cnt[i], k-1, i+1) + P(n-1, cnt[i])*1ll*sol(n-cnt[i], k, i+1)) % mod;
}

int main()
{
	int T;
	scanf("%d", &T);
	while (T--)
	{
		memset(cnt, 0, sizeof(cnt));
		memset(dp, -1, sizeof(dp));
		memset(ch, -1, sizeof(ch));
		int n, k;
		scanf("%d %d", &n, &k);
		for (int i = 0; i < n; i++)
		{
			int x;
			scanf("%d", &x);
			cnt[x]++;
		}
		printf("%d\n", sol(n, k, 0));
	}
}