#include <bits/stdc++.h>
using namespace std;
#define LL long long
LL F[210],P[210];
LL dp[210][210][210];
LL C[210];
int N,K;
int A[210];
#define MOD 1000000007
LL PowMod(LL N,LL P)
{
	if(P==0)
		return 1;
	LL Res = PowMod(N,P/2);
	if(P&1)
		return ((Res*Res)%MOD*N)%MOD;
	return (Res*Res)%MOD;
}
LL calc(int idx,int last,int k)
{
	LL &Res = dp[idx][last][k];
	if(Res==-1)
	{
		if(idx==N+1)
			return Res = ((k<=K)&&(last==N));
		Res = 0;
		Res+=calc(idx+1,last,k);
		Res%=MOD;
		if(A[idx+1]>A[idx]){
			LL val = F[N - last - 1]*P[N - idx];
			val%=MOD;
			Res = (Res + (calc(idx+1,idx,k+1)*val)%MOD*C[idx])%MOD;
		}
	}
	return Res;
}
LL Solve()
{
	sort(A+1,A+N+1);
	A[N+1] = 1e9;
	for(int i = 1;i<=N;i++)
	{
		C[i] = 1;
		if(A[i]==A[i-1])
			C[i]+=C[i-1];
	} 
	memset(dp,-1,sizeof(dp));
	return calc(1,0,0);
}
void Preprocess()
{
	F[0] = 1;
	for(int i = 1;i<=200;i++){
		F[i] = (F[i-1]*i)%MOD;
	}
	P[0] = 1;
	for(int i = 1;i<=200;i++){
		P[i] = PowMod(F[i],MOD-2);
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	int Testcases;
	Preprocess();
	cin>>Testcases;
	while(Testcases--)
	{
		cin>>N>>K;
		for(int i = 1;i<=N;i++)
		{
			cin>>A[i];
		}
		cout<<Solve()<<endl;
	}
	return 0;
}