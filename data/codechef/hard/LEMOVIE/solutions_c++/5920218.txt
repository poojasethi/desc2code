#include<cstdio>
#include<cstdlib>
#include<cstring>
#define MOD 1000000007
#define MX 205
int N,K,ct[MX];
long long int noOfPerm[MX];
int upd(int m, int n){
	long long int t = 1,r,i,a,b;
	for (i = m+1; i<m+n; i++)t=(t*i)%MOD;// m+1  , .. m+n-1
	a = (t * n) % MOD;//which one to put first
	b = (t * m) % MOD;//everyone not first 
	for (r = K; r>=0; r--) {
		noOfPerm[r+1] = (noOfPerm[r+1] + ((noOfPerm[r] * a) % MOD) ) % MOD;
		noOfPerm[r] = (noOfPerm[r] * b) % MOD; 
	}
	//printf("perm0:%lld\n",noOfPerm[0]);
	return m += n;
}
void solve(){
	long long ans = 0;
	int i,m = 0;
	for(i=200;i>=1;i--)if(ct[i] > 0)m = upd(m, ct[i]);
	for(i=1;i<=K;i++)ans = (ans + noOfPerm[i])%MOD;
	if (ans < 0) ans = (ans + MOD)%MOD;
	printf("%lld\n",ans);
}
int main(){
	int T,i,x;scanf("%d",&T);
	while(T--){
		scanf("%d%d",&N,&K);
		for(i=0;i<=N;i++) noOfPerm[i] = 0;
		for(i=0;i<=200;i++) ct[i] = 0;
		for(i=0;i<N;i++) scanf("%d",&x), ct[x]++;
		noOfPerm[0] = 1;
		solve();
	}
	return 0;
}
