#include <bits/stdc++.h>
using namespace std;

const int mod = (int) 1e9 + 7;

typedef long long LL;

int f[222][222];
int a[222];
int cnt[222];
int sum[222];
int fact[444], invfact[444];
void add(int &x, int v) {
	x += v;
	if (x >= mod) x -= mod;
}
int fpow(int a, int t, int mod) {
	int res = 1;
	for (; t; t >>= 1, a = (LL) a * a % mod)
		if (t & 1) res = (LL) res * a % mod;
	return res;
}
int main() {
	
	fact[0] = invfact[0] = 1;
	for (int i = 1; i <= 400; ++i) {
		fact[i] = (LL) fact[i-1] * i % mod;
		invfact[i] = fpow(fact[i], mod-2, mod);
	}

	//freopen("in","r",stdin);

	int cases; scanf("%d", &cases);
	while(cases--) {

		memset(cnt, 0, sizeof cnt);

		int K, n; scanf("%d %d", &n, &K);
		for (int i = 1; i <= n; ++i) {
			scanf("%d", &a[i]);
			++cnt[a[i]];
		}
		sort(a + 1, a + n + 1);
		int m = unique(a+1, a + n + 1) - a - 1;
		
		
		memset(f, 0, sizeof f);

		for (int i = 1; i <= m; ++i) sum[i] = (sum[i-1] + cnt[a[i]]);
		
		f[0][0] = 1;
		
		for (int i = 1; i <= m; ++i)
		for (int k = 1; k <= K; ++k) {
			for (int j = 0; j < i; ++j) {
				int y = sum[m]-sum[i];
				int x = sum[i]-sum[j]-1;
				add(f[i][k], (LL) f[j][k-1] * fact[x+y] % mod * invfact[y] % mod * cnt[a[i]] % mod);
			}
		}
		int ans = 0;
		for (int k = 0; k <= K; ++k) add(ans, f[m][k]);
		/*
		for (int i = 1; i <= m; ++i) {
			for (int j = 0; j < cnt[a[i]]; ++j) ans = (LL) ans * (j+1) % mod;
		}*/
		printf("%d\n", ans);
	}

	return 0;
}
