#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pi;

#define MP make_pair
#define PB push_back
#define F first
#define S second
#define MOD 1000000007
#define INF (1 << 30)

ll numPerm[205];
int k;

void update(int &m, int n)
{
	ll t = 1;
	int i, r;
	for(i = m + 1; i < m + n; i++)
		t = (t * i) % MOD;
	ll val1 = (t * n) % MOD;
	ll val2 = (t * m) % MOD;
	for(r = k; r >= 0; r--)
	{
		numPerm[r + 1] = (numPerm[r + 1] +  (val1 * numPerm[r]) % MOD ) % MOD;
		numPerm[r] = (numPerm[r] * val2) % MOD;
	}
	// cout << "Perms " << numPerm[0] << " " << numPerm[1] << endl;
	m += n;
}

int main()
{
    ios :: sync_with_stdio(false);
    cin.tie(0);
    int t, i, n, m, cur, cur_count;
    cin >> t;
    while(t--)
    {
    	memset(numPerm, 0, sizeof numPerm);
    	numPerm[0] = 1;
    	cin >> n >> k;
    	int a[n];
    	for(i = 0; i < n; i++)
    		cin >> a[i];
    	sort(a, a + n, greater<int>());
    	cur = a[0];
    	cur_count = 1;
    	m = 0;
    	for(i = 1; i < n; i++)
    	{
    		if(a[i] != cur)
    		{
    			update(m, cur_count);
    			cur = a[i];
    			cur_count = 1;
    		}
    		else
    			cur_count++;
    	}
    	update(m, cur_count);
    	ll ans = 0;
    	for(i = 1; i <= k; i++)
    		ans = (ans + numPerm[i]) % MOD;
    	cout << ans << endl;
    }
    return 0;
}
