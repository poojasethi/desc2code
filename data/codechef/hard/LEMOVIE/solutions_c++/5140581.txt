#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cctype>
#include <cstdio>
#include <string>
#include <vector>
#include <cassert>
#include <cstdlib>
#include <cstring>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <algorithm>

using namespace std;

#define PB push_back
#define MP make_pair
#define AA first
#define BB second
#define OP begin()
#define ED end()
#define SZ size()
#define SORT(x) sort(x.OP,x.ED)
#define SQ(x) ((x)*(x))
#define SSP system("pause")
#define cmin(x,y) x=min(x,y)
#define cmax(x,y) x=max(x,y)
typedef long long LL;
typedef pair<int, int> PII;
const double eps=1e-8;
const double PI=acos(-1.);
const LL MOD = 1000000007;
int cnt[222];
int sum[222];
LL dp[205][205];
LL A[205][205];
int main() {
	//freopen("","r",stdin);
	//freopen("","w",stdout);
	int i,j,k,_T;
	for(i=0; i<=200; i++) {
		A[i][0]=1;
		for(j=1;j<=i;j++)
			A[i][j]=A[i][j-1]*(i-j+1)%MOD;
	}
	scanf("%d",&_T);
	while(_T--) {
		int N,K;
		scanf("%d%d",&N,&K);
		memset(cnt,0,sizeof cnt);
		memset(dp,0,sizeof dp);
		int mx=0;
		for(i=1; i<=N; i++) {
			int p;
			scanf("%d",&p);
			cmax(mx,p);
			cnt[p]++;
		}
		sum[0]=0;
		for(i=1; i<=mx; i++)sum[i]=sum[i-1]+cnt[i];
		dp[0][0]=1;
		for(i=0; i<mx; i++)for(j=0; j<=i; j++)if(dp[i][j]) {
					dp[i][j]%=MOD;
					if(N>sum[i])dp[i+1][j]+=A[N-sum[i]-1][cnt[i+1]]*dp[i][j]%MOD;
					if(cnt[i+1]&&N>sum[i])dp[i+1][j+1]+=cnt[i+1]*A[N-sum[i]-1][cnt[i+1]-1]%MOD*dp[i][j]%MOD;
				}
		LL ans=0;
		for(i=1; i<=K; i++)ans=(ans+dp[mx][i])%MOD;
		cout<<ans<<endl;
	}
	return 0;
}

