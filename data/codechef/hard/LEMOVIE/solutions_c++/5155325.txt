#include <cstdio>
#include <cstring>
#include <utility>
#include <algorithm>
#define LL long long
#define REP(i,n) for (int i=1;i<=n;++i)
using namespace std;

pair<int,int> a[220];
const LL MO=1000000007;
int T,n,k,ans;
LL d[220];
LL c[440][440];
LL f[220][220];

LL Calc(int n,int k) {
	return c[n+k][k]*d[k]%MO;
}

int main() {
	scanf("%d",&T);
	c[0][0]=1;
	for (int i=0;i<=400;++i) {
		c[i][0]=c[i][i]=1;
		REP(j,i-1)
			c[i][j]=(c[i-1][j]+c[i-1][j-1])%MO;
	}
	d[0]=1;
	REP(i,400) d[i]=(d[i-1]*(LL)i)%MO;
	REP(T_T,T) {
		scanf("%d%d",&n,&k);
		REP(i,n) {
			scanf("%d",&a[i].first);
			a[i].first=-a[i].first;
			a[i].second=i;
		}
		sort(a+1,a+n+1);
		memset(f,0,sizeof(f));
		f[0][0]=1;
		for (int l=1;l<=n;) {
			int r=l;
			while (r<n && a[r].first==a[r+1].first) ++r;
			for (int j=0;j<=k;++j) {
				if (j<k) {
					(f[r][j+1]+=f[l-1][j]*Calc(l-1,r-l+1)%MO)%=MO;
					if (l>1) (f[r][j+1]-=f[l-1][j]*Calc(l-2,r-l+1)%MO)%=MO;
				}
				if (l>1) (f[r][j]+=f[l-1][j]*Calc(l-2,r-l+1)%MO)%=MO;
			}
			l=r+1;
		}
		ans=0;
		for (int i=0;i<=k;++i)
			(ans+=f[n][i])%=MO;
		printf("%d\n",(ans+MO)%MO);
	}
	return 0;
}
