#include<cstdio>
#include<iostream>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#define MOD 1000000007
typedef long long ll;

using namespace std;

ll jc[220];
ll c[220][220];
ll f[220][220];

ll mul(ll a, ll b, ll c)
{
	ll res = (a * b) % MOD;
	return (res * c) % MOD;
}

void work()
{
	//cout<<"!"<<endl;
	int n, k;
	int p[220];
	scanf("%d%d", &n, &k);
	for (int i = 1; i <= n; i++)
		scanf("%d", &p[i]);
	sort(p + 1, p + n + 1);
	reverse(p + 1, p + n + 1);

	int pre[220];
	pre[0] = 0;
	for (int i = 1 ; i <= n; i++)
		pre[i] = p[i] == p[i - 1] ? pre[i - 1] : i - 1;
//	for (int i = 0; i < n; i ++)
//		printf("%d ", pre[i + 1]);
//	printf("\n");

	memset(f, 0, sizeof(f));
	f[0][0] = 1;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= k; j++)
		{
			int k = pre[i];
			f[i][j] = mul(f[k][j], c[i - 1][i - k], jc[i - k]);
			f[i][j] = (f[i][j] + mul(f[k][j - 1], i - k, c[i - 1][i - k - 1]) * jc[i - k - 1]) % MOD;
			//printf("%d %d %lld\n", i, j, f[i][j]);
		}

	ll ans = 0;
	for (int i = 1; i <= k; i++)
		ans = (ans + f[n][i]) % MOD;
	cout <<	ans << endl;
}

int main()
{
	//freopen("1.in", "r", stdin);

	jc[0] = 1;
	for (int i = 1; i < 220; i++)
		jc[i] = (jc[i - 1] * (ll)i) % MOD;
	for (int i = 0; i < 220; i++)
		for (int j = 0; j <= i; j++)
			if (j == 0 || j == i)
				c[i][j] = 1;
			else
				c[i][j] = (c[i - 1][j] + c[i - 1][j - 1]) % MOD;

	int ttt;
	scanf("%d", &ttt);
	while (ttt--)
		work();
}

