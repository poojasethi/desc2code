#include<iostream>
#include<vector>
#include<string.h>
#include<stdio.h>
#include<climits>
#include<map>
#include<math.h>
#include<algorithm>
#define LL long long int
#define P(N) printf("%d\n",N);
#define S(N) scanf("%d",&N);
#define SL(N) scanf("%lld",&N);
#define pb push_back
#define mp make_pair
using namespace std;
int gcd(int a, int b){ int temp; while(b>0)	{ temp= b; b=a%b; a=temp;}	return a;}
main()
{
         // freopen("C:\\Users\\cyber\\Desktop\\codechef\\input.txt", "r", stdin);
      // freopen("C:\\Users\\cyber\\Desktop\\codechef\\output.txt", "w", stdout);
      int i,j,t,N,k; LL subset;
      S(t);
      LL mod=1000000007;
      LL dp[205];
      LL prod;
      int freq[204], P[204];
      while(t--)
      {
            S(N); S(k);
            memset(freq,0,sizeof(freq));
            for(i=0;i<N;i++)
            {
                S(P[i]);
                freq[P[i]]++;
            }
            memset(dp,0,sizeof(dp));
            dp[0]=1;
            int m=0;
            for(j=200;j>=1;j--)
            {
                subset=freq[j];
                if(subset>0) // ith is present
                {
                    prod= 1;
                    for(i=m+1;i<=m+subset-1;i++)
                    {
                        prod= (prod*i)%mod;
                    }

                    // update the current subset in the original multiset
                    LL y=(m*prod)%mod;
                    LL x=(subset*prod)%mod;
                    for(i=k;i>=0;i--)
                    {
                        dp[i+1]= (dp[i+1]+ (dp[i]*x)%mod+ mod)%mod;
                        dp[i]= (dp[i]*y)%mod;
                    }
                    m+= subset;
                }
            }
            LL ans=0;
            for(i=1;i<=k;i++)
            {
                ans= (ans+dp[i]+mod)%mod;
            }
            printf("%lld\n",ans);
      }
return 0;
}
