#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<ctime>
#include<map>
#include<string>
#include<vector>
#include<set>

using namespace std;
#define For(i,l,r) for (int i = l; i <= r; ++i)
#define Cor(i,l,r) for (int i = l; i >= r; --i)
#define Fill(a,b) memset(a,b,sizeof(a))
#define FI first
#define SE second
#define MP make_pair
#define PII pair<int,int>
#define flt double
#define INF (0x3f3f3f3f)
#define MaxN 1020304
#define MaxNode 1020304
#define MD 1000000007
#define UPD(a,b) { a = (a + (b)) % MD; }

long long getLL() {
	long long ret = 0;
	char c;
	while (1) {
		c = getchar();
		if (c >= '0' && c <= '9') break ;
	}
	while (1) {
		ret = ret * 10 + c - '0';
		c = getchar();
		if (c < '0' || c > '9') break ;
	}
	return ret;
}

int getInt() {
	int ret = 0;
	char c;
	while (1) {
		c = getchar();
		if (c >= '0' && c <= '9') break ;
	}
	while (1) {
		ret = ret * 10 + c - '0';
		c = getchar();
		if (c < '0' || c > '9') break ;
	}
	return ret;
}

int cnt[233], A[233], B[233], f[233][233][233], tg[233][233][233];
int main() {
	//freopen("input.txt","r",stdin); //freopen("output.txt","w",stdout);
	int T = getInt();
	For(TTT,1,T) {
		int n = getInt(), K = getInt();
		memset(cnt, 0, sizeof(cnt));
		int Max = 0;
		For(i,1,n) {
			A[i] = getInt();
			++cnt[A[i]];
			Max = max(Max, A[i]);
		}
		B[0] = 0;
		For(i,1,200) B[i] = B[i - 1] + cnt[i];
		memset(f, 0, sizeof(f)); memset(tg, 0, sizeof(tg));
		f[0][0][0] = 1; 
		For(i,0,n) For(j,0,200) For(k,0,i) {
			UPD(tg[i][j][k], tg[i][j - 1][k]);
			UPD(f[i][j][k], (long long)tg[i][j][k] * cnt[j] % MD);
			UPD(tg[i + 1][j + 1][k + 1], f[i][j][k]);
			if (B[j] > i) UPD(f[i + 1][j][k], (long long)f[i][j][k] * (B[j] - i) % MD);
		}

		int ans = 0;
		For(i,0,K) UPD(ans, f[n][Max][i]);
		cout << ans << endl;
	}
	return 0;
}

