#include <iostream>
#include <memory.h>
#include <limits.h>
#include <stdio.h>
#define forn(i,n) for(i=0;i<n;i++)
#define sc(x) scanf("%d",&x)
int arr[100][100];
int mixture[100][100];
int trr[100];
int rv(int a, int b){
	if (a + b >= 100)
		return a + b - 100;
	return a + b;
}
int ss(int a, int b){
	return a*b;
}
int dp(int a, int b)
{
	if (arr[a][b] != 0)
		return arr[a][b];
	if (a == b)
	{
		return 0;
	}
	int i,j;
	int min = INT_MAX,result;
	for (i = a+1; i <= b; i++)
	{
		if (mixture[a][i-1] == 0){
			int mix = trr[a];
			for (j = a + 1; j <= i-1; j++){
				mix = rv(mix, trr[j]);
			}
			mixture[a][i-1] = mix;
		}
		if (mixture[i ][b] == 0){
			int mix = trr[i];
			for (j = i + 1; j <= b; j++){
				mix = rv(mix, trr[j]);
			}
			mixture[i ][b] = mix;
		}
		result = dp(a, i-1) + dp(i, b) + ss(mixture[a][i-1], mixture[i ][b]);
		if (min > result)
			min = result;
	}
	return arr[a][b] = min;
}
int main(void)
{
	int n,i;
	while (sc(n)!= EOF)
	{
		memset(arr, 0, sizeof(arr));
		memset(mixture, 0, sizeof(mixture));
		
		forn(i, n){
			sc(trr[i]);
		}
		for (i = 1; i < n; i++){
			arr[i - 1][i] = ss(trr[i - 1], trr[i]);
		}
		printf("%d\n", dp(0, n - 1));
	}
}