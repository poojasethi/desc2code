#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<string> vs;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
typedef map<int, int> mii;

//#define in(a) scanf("%d",&a)
#define out(a) printf("%d",a)

#define pb push_back
#define len length()


#define sz size()

#define gc getchar_unlocked
#define pc putchar_unlocked
#define pn printf("\n")
#define ps printf(" ")

#define rep(i,a,b) for(int i=a;i<b;i++)
#define repn(i,n) rep(i,0,n)
#define W(a) while(a--)

/*======================================Templates Ends========================*/
/* Main Code Starts from here */


inline void in(int &x)
{
	register char c = gc();
	while(c<'0' || c>'9')
		c = gc();

	x=0; while(c>='0' && c<='9') { x = 10 * x + c - 48; c = gc(); } 
} 

int matrix_chain(int n)
{
    vector<vii> dp(n+1,vii(n+1));

    rep(iter,1,n+1)
    {
        dp[iter][iter].first=0;
        in(dp[iter][iter].second);
    }

    int size, i, j, k;
    int temp1, temp2;

    for(size=2;size<=n;size++)
    { 
        for(i=1;i<=(n-size+1);i++)
        {
            j=i+size-1;
            dp[i][j].first=INT_MAX;

            for(k=i;k<j;k++)
            {
                temp1=dp[i][k].first+dp[k+1][j].first+dp[i][k].second*dp[k+1][j].second;
                temp2=k;

                if(temp1<dp[i][j].first)
                {
                    dp[i][j].first=temp1;
                    dp[i][j].second=(dp[i][k].second+dp[k+1][j].second)%100;
                }
            }
        }
    }

    return dp[1][n].first;
}

int main()
{
    //freopen("in.in","r",stdin);
    int n;

    while(cin>>n)
    {
        out(matrix_chain(n));
        pn;
    }

   return 0;
}
