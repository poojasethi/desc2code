import fileinput
import sys
def min_smoke(d,start_ind,end_ind):
	if ((start_ind,end_ind) in d):return d[(start_ind,end_ind)]       #(smoke,state)
	else:
		(x,y)=min_smoke(d,start_ind,start_ind)
		(p,q)=min_smoke(d,start_ind+1,end_ind)
		ans=(x+p+y*q,(y+q)%100)
		diff=end_ind-start_ind
		counter=1
		while (counter<diff):
			(a,b)=min_smoke(d,start_ind,start_ind+counter)
			(c,dd)=min_smoke(d,start_ind+counter+1,end_ind)
			num=a+c+b*dd
			if (num<ans[0]):ans=(num,(b+dd)%100)
			counter+=1
		d[(start_ind,end_ind)]=ans
		return ans
fn=fileinput.input()
while True:
	line=fn.readline()
	if len(line)==0:break
	n=int(line)
	line=fn.readline()
	l=map(int,line.split())
	d={}
	for i in xrange(n):d[(i,i)]=(0,l[i])
	print min_smoke(d,0,n-1)[0] 