import sys

def recurse(a, i, j, dic):
    if dic.has_key((i, j)):
        return dic[(i, j)]
    if i == j:
        dic[(i, j)] = 0
        return 0
    if i+1 == j:
        dic[(i, j)] = a[i]*a[j]
        return a[i]*a[j]

    m = -1
    for z in range(j-i):
        left = a[i:i+z+1]
        right = a[i+z+1:j+1]
        cand = (sum(left)%100)*(sum(right)%100)
        cand += recurse(a, i, i+z, dic)
        cand += recurse(a, i+z+1, j, dic)
        if m == -1 or cand < m:
            m = cand

    dic[(i, j)] = m
    return m


def main():
    lines = sys.stdin.readlines()
    for i in range(len(lines)/2):
        line = lines[2*i+1]
        line.rstrip()
        a = [int(z) for z in line.split()]
        print recurse(a, 0, len(a)-1, {})

if __name__ == '__main__':
    main()