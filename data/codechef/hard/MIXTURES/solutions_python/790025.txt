import sys

tests = sys.stdin.readlines()

    
def combine(a, b):
    value_a = a[1]
    value_b = b[1]
    smoke_a = a[0]
    smoke_b = b[0]
    return [value_a * value_b + smoke_a + smoke_b, (value_a+value_b)%100]
    
def solve(lst):
    n = len(lst)
    if len(lst) == 1:
        return 0
    arr = [[-1 for i in range(n)] for i in range(n)]
    for z in range(0, n):
        for y in range(z, n):
            if y - z == 1:
                arr[z][y] = combine([0, lst[y]], [0,lst[z]])
    for i in range(n-3, -1, -1):
        for j in range(i+2, n):
    
            least_smoke = -1
            comb_value = -1
            for k in range(i, j):
                one = -1
                two = -1
                if i == k:
                    one = [0, lst[i]]
                else:
                    one = arr[i][k]
                    
                if j-1 == k:
                    two = [0, lst[j]]
                else:
                    two = arr[k+1][j]
                temp = combine(one, two)
    
                if least_smoke == -1:
                    least_smoke = temp[0]
                    comb_value = temp[1]
                else:
                    if least_smoke > temp[0]:
                        least_smoke = temp[0]
                        comb_value = temp[1]
            
            arr[i][j] = [least_smoke, comb_value]
    return arr[0][n-1][0]

for i in range(1, len(tests), 2):
    line = tests[i]
    seq = [int(x) for x in line.split()]
    print solve(seq)
