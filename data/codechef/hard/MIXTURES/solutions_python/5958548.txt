'''
MIXTURE problem
'''

import fileinput
import sys

def min_smoke(colors):
	n = len(colors)

	mixed_colors = [[None for c in colors] for c in colors]
	min_costs = [[sys.maxint for c in colors] for c in colors]
	for i in xrange(0, n):
		mixed_colors[i][i] = colors[i]
		min_costs[i][i] = 0

	for L in xrange(2, n+1):
		for i in xrange(0, n-1):
			j = i + L - 1

			if j >= n:
				continue

			for k in xrange(i, j):
				smoke_cost = min_costs[i][k] + min_costs[k+1][j] + \
							 (mixed_colors[i][k] * mixed_colors[k+1][j])
				if smoke_cost < min_costs[i][j]:
					min_costs[i][j] = smoke_cost
					mixed_colors[i][j] = (mixed_colors[i][k] + mixed_colors[k+1][j]) % 100

	return min_costs[0][n-1]

fn = fileinput.input()
while True:
	line = fn.readline()

	if len(line) == 0:
		break

	n_mixtures = int(line)
	
	line = fn.readline()
	colors = map(int, line.split())
	
	print min_smoke(colors)