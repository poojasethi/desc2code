#include<cstring>
#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<algorithm>
#define valid(x,y) 1<=x && x<=n && 1<=y && y<=m && b[x][y]=='W' && vis[x][y]!=tes
using namespace std;
int n,m;
char b[1005][1005];
int vis[1005][1005]={0};
int qux[1000005],quy[1000005],p,q;
int tes;
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
struct node{int x1,x2,y1,y2;}A[1000005];int tot=0;
void bfs(int I,int J){
	int x1=n+1,x2=0,y1=m+1,y2=0;
	p=q=0;
	qux[q]=I;quy[q++]=J;
	vis[I][J]=tes;
	while(p!=q){
		int x=qux[p],y=quy[p++];x1=min(x1,x);x2=max(x2,x);y1=min(y1,y);y2=max(y2,y);		
		for (int k=0;k<4;k++)
			if(valid(x+dx[k],y+dy[k]))qux[q]=x+dx[k],quy[q++]=y+dy[k],vis[x+dx[k]][y+dy[k]]=tes;
	}
	if(x1==1 || y1==1 || x2==n || y2==m)return;
	A[tot++]=(node){x1,x2,y1,y2};
}
int check(int I,int J){
	for (int i=0;i<tot;i++)if(!(A[i].x1-1<=I && I<=A[i].x2+1 || A[i].y1-1<=J && J<=A[i].y2+1))return 0;
	return 1;
}
int main()
{
	int qq;
	scanf("%d",&qq);
	for (tes=1;tes<=qq;tes++){
		scanf("%d%d",&n,&m);tot=0;
		for (int i=1;i<=n;i++)
			for (int j=1;j<=m;j++){
				char c;while((c=getchar())<'A'||c>'Z');
				b[i][j]=c;
			}
		for (int i=1;i<=n;i++)
			for (int j=1;j<=m;j++)if(b[i][j]=='W' && vis[i][j]!=tes)bfs(i,j);
		if(tot<=2){
			printf("YES\n");
			continue;
		}
	/*	int tms=200000000/tot;
		while(tms--){
			int I=rand()%n+1,J=rand()%m+1;
			if(check(I,J)){printf("YES\n");break;}
		}
		if(!tms)printf("NO\n");*/
		int bo=0;
		for (int I=1;I<=n && !bo;I++)
			for (int J=1;J<=m;J++){
				if(check(I,J)){bo=1;break;}
			}
		if(!bo)printf("NO\n");
		else printf("YES\n");
	}
	return 0;
}
 