#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <algorithm>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <utility>
#include <fstream>

using namespace std;

#define PB push_back
#define MP make_pair
#define S second
#define F first
#define MOD 1000000007
#define INF 1000000007
#define MAXN 1000000
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)

char a[1002][1002];
bool vis[1002][1002];
int n, m;
vector<pair<int, int> > st[1002], fin[1002];
pair<int, int> up[1002], down[1002], range[1002];

inline bool isValid(int x, int y){
    if(x <= 0 or x > n or y <= 0 or y > m) return false;
    return true;
}

inline void BFS(int x, int y){
    queue<pair<int, int> > Q;
    Q.push(MP(x, y));
    vis[x][y] = true;
    pair<int, int> top;
    bool flag = 0;
    int i, j, x1 = 1002, x2 = 0, y1 = 1002, y2 = 0;
    while(!Q.empty()){
        top = Q.front();
        if(top.F == 1 or top.F == n or top.S == 1 or top.S == m){
            flag = 1;
        }
        x1 = min(x1, top.F);
        x2 = max(x2, top.F);
        y1 = min(y1, top.S);
        y2 = max(y2, top.S);

        for(i = -1; i <= 1; i++){
            for(j = -1; j <= 1; j++){
                if(!(i == 0 or j == 0)) continue;
                if(vis[top.F + i][top.S + j] == false and a[top.F + i][top.S + j] == 'W' and isValid(
                    top.F + i, top.S + j)){
                    Q.push(MP(top.F + i, top.S + j));
                    vis[top.F + i][top.S + j] = true;
                }
            }
        }
        Q.pop();
    }
    if(flag == 1){
        return;
    }
    st[x1].PB(MP(y1, y2));
    fin[x2].PB(MP(y1, y2));
    return;
}

inline void Solve(){
    int i, j;
    sd(n); sd(m);
    for(i = 1; i <= 1000; i++){
        st[i].clear(); fin[i].clear();
    }
    for(i = 1; i <= n; i++){
        for(j = 1; j <= m; j++){
            vis[i][j] = false;
            cin>>a[i][j];
        }
    }
    for(i = 1; i <= n; i++){
        for(j = 1; j <= m; j++){
            if(a[i][j] == 'W' and vis[i][j] == false){
                BFS(i, j);
            }
        }
    }
    int y1 = 0, y2 = 1002;
    for(i = 1; i <= n; i++){
        for(j = 0; j < fin[i - 1].size(); j++){
            y1 = max(y1, fin[i - 1][j].F);
            y2 = min(y2, fin[i - 1][j].S);
        }
        range[i] = MP(y1, y2);
    }
    y1 = 0, y2 = 1002;
    for(i = n; i >= 1; i--){
        for(j = 0; j < st[i + 1].size(); j++){
            y1 = max(y1, st[i + 1][j].F);
            y2 = min(y2, st[i + 1][j].S);
        }
        range[i].F = max(y1, range[i].F);
        range[i].S = min(y2, range[i].S);
    }
    /*
    for(i = 1; i <= n; i++){
        cout<<"i = "<<i<<", y1 = "<<range[i].F<<", y2 = "<<range[i].S<<endl;
    }
    */
    bool flag = 0;
    for(i = 1; i <= n; i++){
        for(j = 1; j <= m; j++){
            if(range[i].F <= range[i].S and j >= range[i].F and j <= range[i].S){
                flag = 1;
                break;
            }
        }
    }
    if(flag){
        printf("YES\n");
    }
    else{
        printf("NO\n");
    }
    return;
}

int main(){
    //freopen("input.txt", "r", stdin);
    int t = 1;
    cin>>t;
    while(t--){
        Solve();
    }
    return 0;
}
