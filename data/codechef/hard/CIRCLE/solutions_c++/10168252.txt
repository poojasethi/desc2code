
#include<bits/stdc++.h>

using namespace std;

#define si(x) scanf("%d",&x)
#define pri(x) printf("%d",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld",x)
#define sstr(s) scanf("%s",s)
#define pstr(s) printf("%s",s)
#define nl printf("\n")
#define ll long long int
#define pb push_back
#define mp make_pair

char a[1005][1005];
int n,m,DP[1005][1005];
int DP1[1005][1005],f[1005];

void func() {
    for(int i=0;i<n;++i) {
	DP[i][0] = DP[i][m-1] = 0;
    }
    for(int j=0;j<m;++j) {
	DP[0][j] = DP[n-1][j] = 0;
    }
    for(int i=1;i<n-1;++i) {
	for(int j=1;j<m-1;++j) {
	    if(a[i][j] == 'W') {
		if(a[i-1][j]=='B' && a[i][j-1]=='B' && a[i+1][j]=='B' && a[i][j+1]=='B') {
		    DP[i][j] = 1;
		}
		else {
		    DP[i][j] = 0;
		}
	    }
	    else {
		DP[i][j] = 0;
	    }
	}
    }
    DP1[0][0] = DP[0][0];
    for(int j=1;j<m;++j) {
	DP1[0][j] = DP[0][j] + DP1[0][j-1];
    }
    for(int i=1;i<n;++i) {
	f[0] = DP[i][0];
	DP1[i][0] = f[0]+DP1[i-1][0];
	for(int j=1;j<m;++j) {
	    f[j] = f[j-1]+DP[i][j];
	    DP1[i][j] = f[j]+DP1[i-1][j];
	}
    }
}

int sum(int i1, int j1, int i2, int j2) {
    if(i1>i2 || j1>j2 || i1>n-1 || i1<0 || j1>m-1 || j1<0 || i2<0 || j2<0 || i2>n-1 || j2>m-1) {
	return 0;
    }
    return DP1[i2][j2]-DP1[i2][j1-1]-DP1[i1-1][j2]+DP1[i1][j1];
}

int main()
{
    int t; si(t);
    while(t--) {
	si(n); si(m);
	for(int i=0;i<n;++i) {
	    sstr(a[i]);
	}
	func();
/*	for(int i=0;i<n;++i) {
	    for(int j=0;j<m;++j) {
		cout<<DP[i][j]<<" ";
	    }
	    nl;
	}
	for(int i=0;i<n;++i) {
	    for(int j=0;j<m;++j) {
		cout<<DP1[i][j]<<" ";
	    }
	    nl;
	}*/
	int mn = 1000000007;
	for(int i=1;i<n-1;++i) {
	    for(int j=1;j<m-1;++j) {
		int mx = -1;
		mx = max(mx,sum(0,0,i-2,j-2));
		mx = max(mx,sum(0,j+2,i-2,m-1));
		mx = max(mx,sum(i+2,0,n-1,j-2));
		mx = max(mx,sum(i+2,j+2,n-1,m-1));
		mn = min(mn,mx);
		if(mn==0) {
		    break;
		}
	    }
	    if(mn==0) {
		break;
	    }
	}
	if(mn==0) {
	    pstr("YES\n");
	}
	else {
	    pstr("NO\n");
	}
    }
    return 0;
}
