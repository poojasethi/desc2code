#include<bits/stdc++.h>
using namespace std;
int vis[100010],par[100010],cnt=0,dfsnum[100010],dfslow[100010],deg[100010];
vector<pair<int,int> > vi;
map<pair<int,int>,int > s1;
vector<int> g[100010];
int timer=1,comp;
void dfs(int u)
{//printf("dfs --> %d\n",u);
	int i;
	vis[u]=1;dfsnum[u]=dfslow[u]=timer++;
	for(i=0;i<g[u].size();i++)
	if(vis[g[u][i]]==0)
	{
		par[g[u][i]]=u;
		dfs(g[u][i]);
		if(dfslow[g[u][i]]>dfsnum[u])
		vi.push_back(make_pair(max(u,g[u][i]),min(u,g[u][i])));
		dfslow[u]=min(dfslow[u],dfslow[g[u][i]]);
	}
	else if((g[u][i]!=par[u]))
	{//printf("backedge %d %d\n",u,g[u][i]);
	dfslow[u]=min(dfslow[u],dfsnum[g[u][i]]);
	}
}
int dfs2(int u)
{//printf("u=%d comp=%d\n",u,comp);
	vis[u]=1;
	for(int i=0;i<g[u].size();i++)
	{
		if(vis[g[u][i]]==0 && s1[make_pair(max(u,g[u][i]),min(u,g[u][i]))]==0)
		{
			dfs2(g[u][i]);
		}
		else if(s1[make_pair(max(u,g[u][i]),min(u,g[u][i]))]==1)
		deg[comp]++;
	}
}
main()
{
	int n,m,i,u,v,noc=0,sub=0;
	map<pair<int,int>,int> mp;
	scanf("%d %d",&n,&m);
	for(i=0;i<=n;i++)vis[i]=0,par[i]=-1,deg[i]=0;
	for(i=0;i<m;i++)
	{
		scanf("%d %d",&u,&v);
		if(mp[make_pair(max(u,v),min(u,v))]==0)
		{
		mp[make_pair(max(u,v),min(u,v))]=1;
		g[u].push_back(v);g[v].push_back(u);
		}
		else if(mp[make_pair(max(u,v),min(u,v))]==1)
		{
			mp[make_pair(max(u,v),min(u,v))]=2;
		}
	}
	dfs(1);
	for(i=0;i<vi.size();i++)
	if(mp[vi[i]]==1){s1[vi[i]]=1;}//printf("bridge-->%d %d\n",vi[i].first,vi[i].second);}
	comp=0;
	for(i=0;i<=n;i++)vis[i]=0;
	for(i=1;i<=n;i++)
	{
		if(!vis[i])
		{//printf("DFS\n");
			comp++;dfs2(i);
		}
	}
	//printf("comp-->%d\n",comp);
	//printf("%d  %d\n",cnt,sub);
	//for(i=1;i<=n;i++)printf("%d  ",dfsnum[i]);printf("\n");
	//for(i=1;i<=n;i++)printf("%d  ",dfslow[i]);printf("\n");
	int good=1;
	for(i=1;i<=comp;i++)
	{//printf("degree %d is %d\n",i,deg[i]);
	if(deg[i]>2)good=0;
	}
	if(good)
	printf("YES\n");
	else
	printf("NO\n");
}