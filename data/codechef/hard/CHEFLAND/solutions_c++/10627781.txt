#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define sd(x) scanf("%d",&x)
#define pd(x) printf("%d",x)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
#define N (int)(1e5+5)
int par[N],depth[N],mind[N];
int vis[N],deg[N],done[N];
vector<int> G[N];
pii ed[2*N];
int parent(int x){
    if(x!=par[x])
        par[x]=parent(par[x]);
    return par[x];
}
void dfs(int pos,int prev){
    depth[pos]=depth[prev]+1;
    mind[pos]=depth[pos];
    vis[pos]=1;
    for(int i=0;i<G[pos].size();i++){
        int to=G[pos][i];
        if(to==prev)
            continue;
        if(vis[to])
            mind[pos]=min(mind[pos],depth[to]);
        else{
            dfs(to,pos);
            if(mind[to]<=depth[pos]){
                int x=parent(pos);
                int y=parent(to);
                par[y]=x;
            }
            mind[pos]=min(mind[pos],mind[to]);
        }
    }
}

void solve(){
	int n,m;
	sd(n);sd(m);
	for(int i=1;i<=n;i++){
        par[i]=i;
    }
    for(int i=1;i<=m;i++){
        int x,y;
        scanf("%d %d",&x,&y);
        G[x].pb(y);
        G[y].pb(x);
        ed[i].fi=x;
        ed[i].se=y;
    }
    for(int i=1;i<=n;i++){
		if(!vis[i])
			dfs(i,0);
	}
	for(int i=1;i<=n;i++){
		par[i]=parent(i);
	}
	for(int i=1;i<=m;i++){
		int x=ed[i].fi;
		int y=ed[i].se;
		if(par[x]==par[y])
		continue;
		deg[par[x]]++;
		deg[par[y]]++;
		
	}
	
	int cnt=0;
	for(int i=1;i<=n;i++){
		if(!done[par[i]]&&deg[par[i]]==1){
		   done[par[i]]=1;
		   cnt++;		
		}
	}
	if(cnt<=2){
		printf("YES");
	}
	else{
		printf("NO");
	}
	
}
int main(){
   //freopen("input.IN","r",stdin);
   //freopen("out.txt","w",stdout);
   int t=1;
   //sd(t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d:\n",i);
       solve();
   }
   return 0;
}