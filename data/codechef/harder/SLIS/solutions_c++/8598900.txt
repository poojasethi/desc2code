 // tu amocanaze wrong answer meqnebaa administraciis dedac movtyan 
 
 // codechefis deda sheveci
 
 // i have seen in the future and you are not in it :))
 // pain trains character
 //MOGITYANT KOMPIUTERI ROMLITAC ATESTIREBTT YLEEBO DA BOZISHVILEBO
// idzite na xui vseee :))
// I LOVE SET <3 go to fuck you :)

//   I BRING BAD NEWS  <I WILL DESTROY IT> ----- > OUTWORLD DEVOURER

 #define _CRT_SECURE_NO_DEPRECATE
 
#include <iostream>
#include <math.h>
#include<set>
#include <iomanip>
#include <algorithm>
#include <vector>
#include <map>
#include<stdio.h>
#include <queue>
#include <utility>
#include <string>
#define cn(x) scanf("%d",&x);
#define INF 2143647
#define idinaxui return 0
# define davainaxui exit(0)
#define PI 3.14159265358
#define mod9 1000000007
#define mod7 %1000000007
#define caut cout
#define md 1000000007
#define f first
#define s second
#define rtn return 0
#define time clock()/(double)CLOCKS_PER_SEC
#define Freopen freopen("input.txt","r",stdin); freopen("output.txt","w",stdout)
#define maxn 500000
#define ct(n) printf("%d ",n);
#define ctt(n) printf("%d\n",n);
#define cantinue continue
#define mk make_pair
# define ll long long
using namespace std;
 int n,m;
  struct o{
         int x,y,xn,yn;
         } t[10000001];
          o f(o A, o B){
                if (A.x>B.x){
                             if (A.y<B.x) A.y=B.x; 
                             if (A.y==B.x) A.yn+=B.xn;
                             A.yn=A.yn mod7;
                             return A;
                             }
                  if (A.x<B.x){
                               if (B.y<A.x) B.y=A.x;
                               if (B.y==A.x) B.yn+=A.xn;
                               B.yn=B.yn mod7;
                               return B;
                              }
                     A.xn=(A.xn+B.xn)mod7;
                     A.yn=(A.yn+B.yn)mod7;
                     return A;
                   }
         void upd(int v,int l,int r,int pos,o ss){
                if (l==r){
                          t[v]=f(t[v],ss);
                          return;
                          }
                          int mid=(l+r)/2;
                          if (pos<=mid)
                            upd(2*v,l,mid,pos,ss);
                            else upd(2*v+1,mid+1,r,pos,ss);
                          t[v]=f(t[v*2],t[2*v+1]);
              }
              o pp;
         o get (int v,int l,int r,int l1,int r1){
               if (l>r1 || r<l1) return pp;
               if (l==l1 && r==r1){
                         return t[v];
                         }
                         int mid=(l+r)/2;
                         o A,B;
                         A=get(2*v,l,mid,l1,min(mid,r1));
                         B=get(2*v+1,mid+1,r,max(mid+1,l1),r1);
                         return f(A,B);
               }
               int a[10000001];vector <pair <int,int> > p;
int main(){
  //freopen("input.txt","r",stdin);
  //freopen("output.txt","w",stdout);
     int tt; cin>>tt;
     pp.y=0;
      while (tt--){
             cin>>n;
             p.clear();pp.x=pp.y=pp.xn=pp.yn=0;pp.y=-1;
               for (int k=1;k<=4*n;++k) t[k]=pp;
             for (int k=1;k<=n;++k){
               cn(a[k]);
               p.push_back(make_pair(a[k],k));
               }
               sort(p.begin(),p.end());
               int num=1;
               for (int k=0;k<p.size();++k){
                 if (k==0 || p[k].f!=p[k-1].f) num++;
                 a[p[k].s]=num;
                 }
                 //  cout<<ans<<endl;
                   //return 0;
                    for (int k=1;k<=n;++k){
                        o dd=get(1,1,n,1,a[k]-1);
                         if (!dd.x) {
                                    dd.x=1;
                                    dd.xn=1;
                                    dd.yn=0;
                                    }
                         else {
                              ++dd.x;
                              if (dd.xn==0)
                              ++dd.xn;
                              ++dd.y;if (dd.yn==0 && dd.y!=0) dd.yn=1;
                              }
                            //  return 0;
                              upd(1,1,n,a[k],dd);
                             // cout<<t[1].xn<<' '<<t[1].x<<' '<<t[1].yn<<' '<<t[1].y<<endl;
                        }
                        cout<<t[1].yn<<endl;
            }
  idinaxui;
}
