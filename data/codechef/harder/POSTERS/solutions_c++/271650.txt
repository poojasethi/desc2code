#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
using namespace std;

#define SET(x,v) memset(x,v,sizeof(x))

const int mxn = 101;

int match1[mxn], match2[mxn];
int vis[mxn], can[mxn][mxn];
int x1[mxn], x2[mxn], y1[mxn], y2[mxn];
int n;

int findMatch(int i)
{
	for(int j=0;j<n;j++)
		if(can[i][j] && !vis[j])
		{
			vis[j]=1;
			if(match2[j]==-1 || findMatch(match2[j])) 
			{	match1[i]=j; match2[j]=i; return 1;		}
		}
	return 0;
}

int main()
{
	int i,j,k,t,matches;
	
	for(scanf("%d",&t);t--;)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++) scanf("%d %d %d %d",x1+i,x2+i,y1+i,y2+i);

		SET(match1,-1);
		SET(match2,-1);
		SET(can,0);

		for(i=0;i<n;i++) for(j=0;j<n;j++)
			if(x1[i]<x1[j] && x2[i]>x2[j] && y1[i]>y1[j] && y2[i]<y2[j])
			{ 
				//printf("%d-->%d\n",i,j);	
				can[i][j]=1; 
			}
		
		for(i=matches=0;i<n;i++)
		{
			if(match1[i]!=-1) continue;
			SET(vis,0);
			if(findMatch(i)) matches++;
		}

		printf("%d\n",n-matches);
	}

	return 0;
}
