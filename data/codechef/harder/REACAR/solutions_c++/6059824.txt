#include<bits/stdc++.h>
#include<stdio.h>
#include<stdlib.h>
#include "map"

#define ll long long
#define l long

#define ins(s) scanf("%s",s)
#define in(s) scanf("%d",&s)
#define inc(s) scanf("%c",&s)
#define inl(s) scanf("%ld",&s)
#define inll(s) scanf("%lld",&s)
#define outs(s) printf("%s\n",s)
#define out(s) printf("%d\n",s)
#define outc(s) printf("%c\n",s)
#define outl(s) printf("%ld\n",s)
#define outll(s) printf("%lld\n",s)
#define lp(i,a,n)  for(i=a;i<n;i++)
#define mal(n) (int *)malloc(sizeof(int )*n)
#define mem(a) memset(a,0,sizeof(a))
#define gc getchar
#define pc putchar
#define md 1000000007
using namespace std;
ll mul(ll a,ll b,ll m)
{
    ll mod = m;
    a %= m;
    b %= m;
    long double res = a;
    res *= b;
    ll c = (ll)(res / mod);
    a *= b;
    a -= c * mod;
    a %= mod;
    if (a < 0) a += mod;
    return a;
}

ll fpower(ll x,ll p,ll MOD)                         //POWER  MODULO C
{
    ll res = 1;
    while(p>0)
    {
        if(p%2 != 0) res = mul(res,x,MOD);
        p = p/2;
        x = mul(x,x,MOD);
    }
    return res;
}
inline void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

ll bit[100006];
int ar[100005],b[100005],n;

int up[100005],org[100005];

ll read(int i)
{
    ll res=0;
    while(i>0)
    {
        res+=bit[i];
        i=i-(i&-i);
    }
    return res;
}
void update(int i,int val)
{
    while(i<=n)
    {
        bit[i]+=val;
        i=i+(i&-i);
    }
}
map<int,int> mp;
map<int,int>::iterator it1;
int main()
{
    
    int i,c,x;
    ll res;
    scanint(n);
    for(i=0;i<n;i++)  scanint(up[i]);
    c=1;
    for(i=0;i<n;i++)
    {
        scanint(org[i]);
        mp.insert(pair<int,int>(org[i],c++));
    }
    for(i=0;i<n;i++)
    {
        it1=mp.find(up[i]);
        ar[i]=(it1)->second;
        b[i]=ar[i];
    }
    /*sort(b,b+n);
    for(i=0;i<n;i++)
    {
        x=(int)(lower_bound(b,b+n,ar[i])-b);
        ar[i]=x+1;
    }*/
    res=0;
    for(i=n-1;i>=0;i--)
    {
        res+=read(ar[i]-1);
        update(ar[i],1);
    }
    outll(res);
    return 0;
}