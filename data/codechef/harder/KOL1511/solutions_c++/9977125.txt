import java.io.*;
import java.util.*;
 
 
 
class WaitForIt {
 
//  static Map<Integer,Long> memo = new HashMap<Integer, Long>();
  
  static ILMap memo;
  
  static final long mod = 1_000_000_007;
 
  static void init(){
    memo = new ILMap();
  }
  
  static class ILMap{
    static int S = 20_000_003;
    int[] in = new int[S];
    long[] out = new long[S];
    public ILMap() {
      Arrays.fill(out,-1);
    }
    int getLoc(long x){
      int loc = (int) ((x+x) % (long) S);
      while(in[loc]!= 0 && in[loc]!=x){
        loc ++;
        if(loc == S)
          loc = 0;
      }
      return loc;
    }
    
    long get(int x){
      return out[getLoc(x)];      
    }
    void put(int x,long y){
      int l = getLoc(x);
      in[l] = x;
      out[l] = y;
    }
  }
  
  static long count(int n){
    if(n == 1) return 1;
    long ret = memo.get(n);
    if(ret != -1)
      return ret;
    long r = n;
    r *= r;
    int rn = (int) Math.sqrt(n);
    for(int i=2; i<=rn; ++i)
      r -= count(n/i);
    rn = n/rn;
    for(int i=1; i<rn; ++i)
      r -= count(i)*(n/i - n/(i+1));
    r %= mod;
    if (r < 0) r += mod;
    memo.put(n,r);
    return r;
  }
  
  static long solve(long a0, long b0, int n){
    long ret = 0;
    long a,b;
    a=b=1;
    for(int i=1; i<=n; ++i){
      a = a*a0 % mod;
      b = b*b0 % mod;
      long c = a-b;
      if(c < 0)
        c += mod;
      ret += c*count(n/i);
      ret %= mod;
    }
    System.out.println(ret);
    return ret;
  }
  
  
  static long pow(long x,int y){
    x %= mod;
    long ret = 1;
    for(;y>0; y>>=1){
      if((y & 1) > 0)
        ret = (ret * x) % mod;
      x = (x * x) % mod;
    }
    return ret;
  }
  
  public static long[] gcd(long p, long q){
    if (q == 0)
      return new long[] { p, 1, 0 };
 
    long[] vals = gcd(q, p % q);
    long d = vals[0];
    long a = vals[2];
    long b = vals[1] - (p / q) * vals[2];
    return new long[] { d, a, b };
  }
 
  public static long inv(long x){
    if(x < 0)
      x += mod;
    long ret = gcd(mod,x)[2];
    if(ret < 0)
      ret += mod;
    return ret;
  }
 
  
  static long solve2(long a0, long b0, int n){
    long ret = 0;
    long a,b;
    a=b=1;
    int rn = (int) Math.sqrt(n);
    for(int i=1; i<=rn; ++i){
      a = a*a0 % mod;
      b = b*b0 % mod;
      long c = a-b;
      if(c < 0)
        c += mod;
      ret += c*count(n/i);
      ret %= mod;
    }
    rn = n/rn;
    long ai = inv(a0-1);
    long bi = b0==1 ? 1 : inv(b0-1);
    for(int i=1; i<rn; ++i){
      int i0 = n/(i+1)+1;
      int i1 = n/i;
      a = pow(a0,i1+1)-pow(a0,i0);
      b = b0 == 1 ? i1-i0+1 : pow(b0,i1+1)-pow(b0,i0);
      a *= ai;
      b *= bi;
      a %= mod;
      b %= mod;
      long c = a-b;
      c %= mod;
      if(c < 0)
        c += mod;
      
      ret += c*count(i);
      ret %= mod;
    
    }
    
    System.out.println(ret);    
    return ret;
  }
  
  
  static long solve3(long a0, long b0, int n){
    long ret = 0;
    long a,b;
    a=b=1;
    int rn = (int) Math.sqrt(n);
    for(int i=1; i<=rn; ++i){
      a = a*a0 % mod;
      b = b*b0 % mod;
      long c = a-b;
      if(c < 0)
        c += mod;
      ret += c*count(n/i);
      ret %= mod;
    }
    rn = n/rn;
    long ai = inv(a0-1);
    long bi = b0==1 ? 1 : inv(b0-1);
    
    int i1 = n/(rn);
    long ap = pow(a0,i1+1);
    long bp = pow(b0,i1+1);
    
    for(int i=rn-1; i>0; --i){
      int i0 = i1;
      i1 = n/i;
      a = - ap;
      ap *= pow(a0,i1-i0);
      ap %= mod;
      a += ap;
      a %= mod;
      
      if(b0 == 1)
        b = i1-i0;
      else{
        b = - bp;
        bp *= pow(b0,i1-i0);
        bp %= mod;
        b += bp;
        b %= mod;
      }
      a *= ai;
      b *= bi;
      a %= mod;
      b %= mod;
      long c = a-b;
      c %= mod;
      if(c < 0)
        c += mod;
      
      ret += c*count(i);
      ret %= mod;
    
    }
    
    System.out.println(ret);    
    return ret;
  }
  
  
  public static void main(String[] args) throws Exception{
    //goFile("input/input.txt");
    init();
    go();
  }
  
  static int[] getInts(BufferedReader br) throws IOException{
    String[] ss = new String[0];
    while(ss.length==0 || "".equals(ss[0])) ss =  br.readLine().split(" ");
    int[] ret = new int[ss.length];
    for(int i=0; i<ss.length; ++i){
      ret[i] = Integer.parseInt(ss[i]);
    }
    return ret;
  }
 
  static void goFile(String s) throws Exception{
    go(new FileReader(new File(s)));
  }
 
  static void go() throws Exception{
    go(new InputStreamReader(System.in));
  }
 
 
  static void go(Reader r) throws Exception{
    BufferedReader br = new BufferedReader(r);
    int t = getInts(br)[0];
    for(int i=0; i<t; ++i){
      int[] x = getInts(br);
      solve3(x[0],x[1],x[2]);
    }
  }
}