#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>
using namespace std;
#define N 100050
#define ll long long
#define ld double
#define PII pair <int,int>
#define fr first
#define sc second
#define mp make_pair
PII _li[N];
const ld pi = acos(-1.0);
int fi[N],c[N*2][2],wei[N],h[N],rf[N],li[N],Prime[N];
int rev[N*4],Now[N],la[N],bit,len,n,m,ss=1,st;bool vis[N];ld ans;
struct complex
 {
 	ld r,i;
 	complex (){}
 	complex (ld _r,ld _i) {r=_r;i=_i;}
 } a[N*4],b[N*4],Emp;
complex operator+ (const complex &x,const complex &y)
 {return complex(x.r+y.r,x.i+y.i);}
complex operator- (const complex &x,const complex &y)
 {return complex(x.r-y.r,x.i-y.i);}
complex operator* (const complex &x,const complex &y)
 {return complex(x.r*y.r-x.i*y.i,x.r*y.i+x.i*y.r);}
inline int Read()
 {
 	int x=0;char y;
 	do y=getchar(); while (y<'0'||y>'9');
 	do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
 	return x;
 }
inline void Line(int x,int y)
 {
 	c[++ss][0]=y;c[ss][1]=fi[x];fi[x]=ss;
 	c[++ss][0]=x;c[ss][1]=fi[y];fi[y]=ss;
 	return;
 }
void Pretreat()
 {
 	for (int i=2;i<N;i++)
 	 {
 	 	if (!vis[i]) Prime[++st] = i;
 	 	for (int j=1;Prime[j]*i<N;j++)
 	 	 {
 	 	 	vis[Prime[j] * i] = true;
 	 	 	if (i % Prime[j] == 0) break;
 	 	 }
 	 }
 	memset(vis,false,sizeof vis);
 	return;
 }
void FFT(complex* a,int n,int f)
 {
 	for (int i=0;i<n;i++)
 	 if (i<rev[i]) swap(a[i],a[rev[i]]);
 	for (int p=1;p<n;p <<= true)
 	 {
 	 	complex wn(cos(pi/p),sin(pi/p)*f);
 	 	for (int i=0;i<n;i += p << true)
 	 	 {
 	 	 	complex e(1,0);
 	 	 	for (int j=0;j<p;j++,e=e*wn)
 	 	 	 {
 	 	 	 	complex x = a[i + j], y = a[i + j + p] * e;
 	 	 	 	a[i + j] = x + y;a[i + j + p] = x - y;
 	 	 	 }
 	 	 }
 	 }
 	if (f==-1)
 	 for (int i=0;i<n;i++) a[i].r/=n;
 	return;
 }
void GetFFT()
 {
 	for (int i=1;i<len;i++)
 	  rev[i] = (rev[i >> true] >> true) | ((i & true) << bit - 1);
 	FFT(a,len,1);FFT(b,len,1);
 	for (int i=0;i<len;i++) a[i] = a[i] * b[i];
 	FFT(a,len,-1);
    return;
 }
int GetList(int x)
 {
 	static int _st = false;_st ++;
 	int ri = true,le = true;la[x] = false;
 	Now[li[true] = x] = _st;
 	for (;le<=ri;le++)
 	 for (int i=fi[li[le]];i;i=c[i][1])
 	  if (Now[c[i][0]] != _st&& !vis[c[i][0]])
 	  	Now[c[i][0]] = _st,
 	  	li[++ri] = c[i][0], la[c[i][0]] = li[le];
  	return ri;
 }
int GetSize(int Cnt)
 {
 	for (int i=Cnt;i>=1;i--)
 	 {
 	 	wei[li[i]] = true;
 	 	for (int j=fi[li[i]];j;j=c[j][1])
 	 	 if (c[j][0]!=la[li[i]] && !vis[c[j][0]])
 	 	   wei[li[i]] += wei[c[j][0]];
 	 }
 	int rt = li[1];
 	while (true)
 	 {
 	 	bool flag = true;
 	 	for (int i=fi[rt];i&&flag;i=c[i][1])
 	 	 if (c[i][0]!=la[rt]&&wei[c[i][0]]*2>=Cnt&&
 	 	   !vis[c[i][0]])
 	 	   flag = false, rt = c[i][0];
 	 	if (flag) return rt;
 	 }
 }
void GetRf(int Cnt)
 {
 	rf[li[1]] = false;
 	for (int i=fi[li[1]];i;i=c[i][1])
 	 if (!vis[c[i][0]])
 	   rf[c[i][0]] = c[i][0];
 	for (int i=2;i<=Cnt;i++)
 	 {
 	 	if (rf[la[li[i]]]) rf[li[i]] = rf[la[li[i]]];
 	 	_li[i-1] = mp(rf[li[i]] , h[li[i]]);
 	 }
 	sort(_li+1,_li+Cnt);
 	for (int i=1;i<Cnt;)
 	 {
 	 	int ri = i,ma = _li[i].sc;
 	 	while (ri < Cnt - 1 && _li[ri + 1].fr == _li[i].fr)
 	 	  ma = max(ma, _li[++ ri].sc);
 	 	len = true; bit = false;
 	 	while (len <= max(2,ma * 2)) len = len << true ,bit ++;
 	 	for (int j=0;j<len;j++) a[j] = Emp;
 	 	for (;i <= ri;i ++) a[_li[i].sc] .r += true;
 	 	ans -= a[1].r*(a[1].r - 1);
 	 	for (int j=0;j<len;j++) b[j] = a[j];
 	 	GetFFT();
 	    for (int j=2;Prime[j] < len ; j++)
 	      ans -= (ll)(a[Prime[j]].r + 0.5);
 	 }
 	return;
 }
void Solve(int x)
 {
 	int Cnt = GetList(x), rt = GetSize(Cnt), ma = false;
 	GetList(rt);
 	for (int i=1;i<=Cnt;i++)
 	  ma = max(ma , h[li[i]] = h[la[li[i]]] + 1);
 	len = true; bit = false;
 	while (len<=max(ma*2,2)) len <<= true, bit ++;
 	for (int i=0;i<len;i++) a[i]=Emp;
 	for (int i=1;i<=Cnt;i++) a[h[li[i]]].r += true;
 	ans += a[2].r*2;ans += a[1].r*(a[1].r - 1);
 	for (int i=0;i<len;i++) b[i] = a[i];
 	GetFFT();
    for (int i=2;i<=st&&Prime[i]<len;i++)
      ans += (ll)(a[Prime[i]].r+0.5);
    GetRf(Cnt);vis[rt] = true;
    for (int i=fi[rt];i;i=c[i][1])
     if (!vis[c[i][0]]) Solve(c[i][0]);
    return;
 }
int main()
 {
 	//freopen("input.txt","r",stdin);//freopen("output.txt","w",stdout);
 	n=Read();Pretreat();h[0] = -1;
 	for (int i=1;i<n;i++) Line(Read(),Read());
 	Solve(1);printf("%.6lf\n",(double)(ans/n/(n-1)));
 	return 0;
 }