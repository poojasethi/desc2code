#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <algorithm>
using namespace std;

int n,i,j,k,u;
int P[300005],A[300005],H[300005],P_[300005];
long long f[300005];
int *st[1200005],st_pool[6000005],top[1200005],cnt;

struct node
{
	long long f;
	int H,P,id;
}b[300005],b2[300005];
inline bool cmpP(const node &a,const node &b){return a.P<b.P;}
inline bool cmpH(const node &a,const node &b){return a.H<b.H;}

void B2(int *st,int &top,int tot)
{
	int i;
	top=0;
	for(i=1;i<=tot;++i)
	{
		for(;top>1;--top)
		{
			int x=st[top-1],y=st[top],z=b2[i].id;
			if(2*(f[x]-f[y])/(H[x]-H[y])<=2*(f[y]-f[z])/(H[y]-H[z]))break;
		}
		st[++top]=b2[i].id;
	}
}

void B(int x,int l,int r)
{
	st[x]=st_pool+cnt;
	int i,k=0,tot=0,mid=(l+r)>>1;
	int t1=l-1,t2=mid;
	for(i=l;i<=r;++i)b2[++tot]=b[i];
	for(i=1;i<=tot;++i)if(b2[i].P<=P_[mid])b[++t1]=b2[i];else b[++t2]=b2[i];
	for(i=1;i<=tot;++i)
	if(k==0||b2[i].H!=b2[k].H)++k,b2[k]=b2[i];
	else
	{
		if(b2[i].f<b2[k].f)
		b2[k]=b2[i];
	}
	B2(st[x],top[x],tot=k);
	cnt+=top[x]+2;
	if(l==r)return;
	B(x<<1,l,mid);
	B(x<<1|1,mid+1,r);
}

void Q2(int *st,int top)
{
	if(!top)return;
	int l=2,r=top,mid,aim=1;
	long long g1,g2;
	while(l<=r)
	{
		mid=(l+r)>>1;
		g1=f[st[mid-1]]-2*(long long)H[st[mid-1]]*H[u];
		g2=f[st[mid]]-2*(long long)H[st[mid]]*H[u];
		if(g2<=g1)aim=mid,l=mid+1;
		else r=mid-1;
	}
	g1=f[st[aim]]-2*(long long)H[st[aim]]*H[u];
	if(g1<f[u])f[u]=g1;
}

void Q(int x,int l,int r)
{
	if(P[u]<b[l].P)return;
	if(b[r].P<=P[u])
	{
		Q2(st[x],top[x]);
		return;
	}
	int mid=(l+r)>>1;
	Q(x<<1,l,mid);
	if(P[u]>=b[mid+1].P)Q(x<<1|1,mid+1,r);
}

void CDQ(int l,int r)
{
	if(l==r)
	{
		if(l==1)f[1]=A[1]+(long long)H[1]*H[1];
		else f[l]+=A[l]+2*(long long)H[l]*H[l];
		return;
	}
	int i,mid=(l+r)>>1,tot=0;
	CDQ(l,mid);
	for(i=l;i<=mid;++i)
	{
		++tot;
		b[tot].f=f[i];
		b[tot].H=H[i];
		b[tot].P=P[i];
		b[tot].id=i;
	}
	sort(b+1,b+tot+1,cmpP);
	for(i=1;i<=tot;++i)P_[i]=b[i].P;
	sort(b+1,b+tot+1,cmpH);
	cnt=0;
	B(1,1,tot);
	for(i=mid+1;i<=r;++i)
	{
		u=i;
		Q(1,1,tot);
	}
	CDQ(mid+1,r);
}

int main()
{
	scanf("%d",&n);
	for(i=1;i<=n;++i)scanf("%d",&P[i]);
	for(i=1;i<=n;++i)scanf("%d",&A[i]);
	for(i=1;i<=n;++i)scanf("%d",&H[i]);
	memset(f,0x7f,sizeof(f));
	f[1]=0;
	CDQ(1,n);
	for(i=1;i<=n;++i)f[i]-=(long long)H[i]*H[i];
	printf("%lld\n",f[n]);
}