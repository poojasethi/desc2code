#include <iostream>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <memory.h>
#include <cctype>
#include <string.h>
#include <vector>
#include <list>
#include <queue>
#include <deque>
#include <stack>
#include <map>
#include <set>
#include <algorithm>
using namespace std;

typedef long long Int;
typedef pair<int,int> PII;
typedef vector<int> VInt;

#define FOR(i, a, b) for(i = (a); i < (b); ++i)
#define RFOR(i, a, b) for(i = (a) - 1; i >= (b); --i)
#define CLEAR(a, b) memset(a, b, sizeof(a))
#define SIZE(a) int((a).size())
#define ALL(a) (a).begin(),(a).end()
#define PB push_back
#define MP make_pair

#define MOD 1000000007
#define MAX (1 << 20)

int P[MAX];
int Prime[MAX];
Int A[64];

Int Pow(Int a, int b)
{
	if(b == 0)
		return 1;

	Int res = Pow(a*a % MOD, b >> 1);
	if(b & 1)
		res *= a;

	return res % MOD;
}

Int F(Int a, int b)
{
	return (Pow(a % MOD, b + b + b) + Pow(a % MOD, b + b + b - 1) - Pow(a % MOD, b + b - 1) + MOD) % MOD;
}

int main()
{
	int T, t;
	scanf("%d", &T);

	CLEAR(P, -1);
	P[0] = P[1] = 0;
	int i, j;
	FOR(i, 0, MAX)
		if(P[i] == -1)
			for(j = i + i; j < MAX; j += i)
				P[j] = 0;

	int cnt = 0;
	FOR(i, 0, MAX)
		if(P[i] == -1)
		{
			Prime[cnt] = i;
			++cnt;
		}

	FOR(t, 0, T)
	{
		Int p;
		scanf("%lld", &p);

		Int res = 1;
		Int t = p - 1;
		FOR(i, 0, cnt)
		{
			Int a = Prime[i];
			if(a*a > t)
				break;

			if(t % a == 0)
			{
				int cnt = 0;
				while(t % a == 0)
				{
					t /= a;
					++cnt;
				}

				res *= F(a, cnt);
				res %= MOD;
			}
		}

		if(t != 1)
		{
			res *= F(t, 1);
			res %= MOD;
		}

		res += ((p - 1) % MOD)*((p - 1) % MOD);
		printf("%d\n", int(res % MOD));
	}

	return 0;
};
