#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
const int N=210000;
int n,m,q;
int head[N],np[N],p[N],tot;
vector<int>to[N];
int fa[N];
int semi[N],bfa[N],best[N];

int get(int x){
	if(!bfa[x])return x;
	if(bfa[bfa[x]])semi[x]=min(semi[x],get(bfa[x])),bfa[x]=bfa[bfa[x]];
	return semi[x];
}
void init(){
	rep(i,1,n)head[i]=fa[i]=0;
	rep(i,1,tot)np[i]=p[i]=0;
	rep(i,1,n)to[i].clear();
	tot=0;
}
int cnt[N];
void Main(){
	scanf("%d%d%d",&n,&m,&q);
	init();
	rep(i,1,m){
		int a,b;scanf("%d%d",&a,&b);
		++tot;p[tot]=b;np[tot]=head[a];head[a]=tot;
		to[b].push_back(a);
	}
	
	rep(i,1,n){
		rep(j,0,to[i].size()-1)if(to[i][j]<i)fa[i]=max(fa[i],to[i][j]);
	}
	
	rep(i,1,n)semi[i]=bfa[i]=best[i]=0;
	
	rep(i,1,n)cnt[i]=0;
	per(i,n,2){
		int temp=1e9;
		rep(j,0,to[i].size()-1){
			int x=to[i][j];
			temp=min(temp,get(x));
		}
		cnt[temp]++;
		semi[i]=temp;
		bfa[i]=fa[i];
	}
	rep(i,1,q){
		int x;scanf("%d",&x);printf("%d%c",cnt[x],i==q?'\n':' ');
	}
	printf("\n");
}
int main(){
	int T;scanf("%d",&T);
	while(T--)Main();
	return 0;
}
