#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	100005
#define Vec	vector<int>
#define Rep(i,a,b)	for(int i=a;i>=b;i--)
#define For(i,a,b)	for(int i=a,lim=b;i<=lim;i++)

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

int		T,N,M,Q,F[n],W[n],V[n],cnt[n],semi[n];
Vec		E0[n],E1[n],E2[n];

void	DFS(int u){
		V[u]=1;
		For(i,0,E0[u].size()-1){
			int v=E0[u][i];
			if	(!V[v])	DFS(v),E1[u].push_back(v);
		}
}

int		Min(int a,int b){
		return	semi[a]<semi[b]?a:b;
}
int		Get(int u){
		if	(F[u]==u)	return	u;
		int t=Get(F[u]);W[u]=Min(W[u],W[F[u]]);
		return	F[u]=t;
}

int		main(){
		for	(T=IN();T--;){
			N=IN();	M=IN();	Q=IN();
			For(i,1,N)	F[i]=W[i]=semi[i]=i,V[i]=cnt[i]=0,
						E0[i].clear(),E1[i].clear(),E2[i].clear();
			For(i,1,M)	{
				int u=IN(),v=IN();
				E0[u].push_back(v);	E2[v].push_back(u);
			}
			For(i,1,N)	sort(E0[i].begin(),E0[i].end());
			DFS(1);

			Rep(u,N,1)	{
				For(i,0,E2[u].size()-1){
					int	v=E2[u][i];
					if	(v<u)	semi[u]=min(semi[u],v);
						else	Get(v),semi[u]=min(semi[u],semi[W[v]]);
				}
				if	(u!=1)	cnt[semi[u]]++;
				For(i,0,E1[u].size()-1)	F[E1[u][i]]=u;
			}
			for	(;Q--;)	printf("%d ",cnt[IN()]);	puts("");
		}
}