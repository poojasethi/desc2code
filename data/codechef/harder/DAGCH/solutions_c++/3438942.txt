#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<vector>
using namespace std;
int n,m,q;
int s[100010];
int semi[100010];
int ufs[100010];
int best[100010];
int f[100010],dfn[100010];
vector <int> g[100010];
vector <int> a[100010];
void clear(vector <int> &a){
	 vector <int> s;
	 a.swap(s);
}
int getf(int x){
	if (ufs[x] == x) return x;
	int y  = getf(ufs[x]);
	if (semi[best[x]] > semi[best[ufs[x]]]) best[x] = best[ufs[x]];
	return (ufs[x] = y);
}
void dfs(int p){
	dfn[p] = p;
	sort(&a[p][0],&a[p][a[p].size()]);
	for (int i = 0;i < a[p].size();i++)
		if (!dfn[a[p][i]]) dfs(a[p][i]),f[a[p][i]] = p;
}
int main(){
	int TT;scanf("%d",&TT);
	while (TT--){
		memset(s,0,sizeof(s));memset(dfn,0,sizeof(dfn));
		for (int i= 1;i <= n;i++) clear(g[i]),clear(a[i]);
		scanf("%d%d%d",&n,&m,&q);
		
		for (int i = 1;i <= m;i++){
			int u,v;
			scanf("%d%d",&u,&v);
			g[v].push_back(u);a[u].push_back(v);
		}
		dfs(1);
		for (int i = 1;i <= n;i++) semi[i] = (1 << 30);
		for (int i = 1;i <= n;i++) ufs[i] = best[i] = i;
		for (int i = n;i > 1;i--){
			for (unsigned int j = 0;j < g[i].size();j++){
				int d = g[i][j];
				if (d <= i) semi[i] = min(semi[i],d);
				else {
					getf(d);
					semi[i] = min(semi[i],semi[best[d]]);
				}
			}
			ufs[i] = f[i];
		}

		for (int i = 1;i <= n;i++)
			if (semi[i] != (1 << 30)) s[semi[i]]++;
		for (int i = 1;i <= q;i++){
			int p;scanf("%d",&p);
			printf("%d ",s[p]);
		}
		printf("\n");
	}
	return 0;
}
