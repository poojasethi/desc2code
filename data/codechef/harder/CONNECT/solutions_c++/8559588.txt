#include <cstdio>
#include <cmath>
#include <vector>
#include <memory.h>
#include <time.h>
#include <algorithm>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
const int x1[4]={0,0,-1,1},x2[4]={-1,1,0,0};
int sum[128],a1[17][17],a2[17][17],pr[17][17],dp[17][17][128],d1[200000],d2[200000],d3[200000],nc[255],c1[255][255],c2[255][255],down[9][130],bel[129][130];
bool visit[17][17][128],coloru[255];
int main()
{
	int n,m,k;
	scanf("%d%d%d",&n,&m,&k);
	memset(nc,0,sizeof(nc));
	rep(i,1,n)
	  rep(j,1,m)
	  {
			scanf("%d",&a1[i][j]);
			if(a1[i][j]<1)continue;
			c1[a1[i][j]][++nc[a1[i][j]]]=i;
			c2[a1[i][j]][nc[a1[i][j]]]=j;
		}
	rep(i,1,n)
		rep(j,1,m)
		  scanf("%d",&pr[i][j]);
	int all=0;
	rep(i,1,n*m)
	  if(nc[i]>0)all++;
	if(all<k)
	{
		printf("%d\n",-1);
		return 0;
	}	
	rep(i,0,n+1)
	  rep(j,0,m+1)
	  	a2[i][j]=-1;
	int ans=n*m*100000;
	srand(time(0));
	sum[0]=0;
	memset(down,0,sizeof(down));
	memset(bel,0,sizeof(bel));
	rep(i,1,(1<<k)-1)
	{
		sum[i]=sum[i>>1]+(i&1);
		down[sum[i]][++down[sum[i]][0]]=i;
		rep(j,1,i-1)
		  if(i|j==i&&sum[j]<=sum[i]>>1)bel[i][++bel[i][0]]=j;
	}
	int t=220;
	while(t--)
	{
		rep(i,1,n)
			rep(j,1,m)
				a2[i][j]=a1[i][j];
		rep(i,1,n*m)
		{
			int c=1+rand()%k;			
			  rep(j,1,nc[i])
				  a2[c1[i][j]][c2[i][j]]=c;
		}
		memset(coloru,0,sizeof(coloru));
		rep(i,1,n)
		  rep(j,1,m)
		  	if(a2[i][j]>0)coloru[a2[i][j]]=1;
		int all=0;
		rep(i,1,k)
			if(coloru[i])all++;
		if(all<k){t++;continue;}
		memset(dp,50,sizeof(dp));
		memset(visit,0,sizeof(visit));
		int t1=1,t2=0;
		rep(i,1,n)
			rep(j,1,m)
				if(a2[i][j]>0)
				{
					dp[i][j][1<<(a2[i][j]-1)]=pr[i][j];
					visit[i][j][1<<(a2[i][j]-1)]=1;
					d1[++t2]=i;
					d2[t2]=j;
					d3[t2]=1<<(a2[i][j]-1);
				}
		rep(l,2,k)
		{
			while(t1<=t2)
			{
				rep(i,0,3)
				{
					int n1=d1[t1]+x1[i],n2=d2[t1]+x2[i];
					//printf("%d %d %d %d\n",d1[t1],d2[t1],n1,n2);
					if(a2[n1][n2]>=0&&dp[d1[t1]][d2[t1]][d3[t1]]+pr[n1][n2]<dp[n1][n2][d3[t1]])
					{
						dp[n1][n2][d3[t1]]=dp[d1[t1]][d2[t1]][d3[t1]]+pr[n1][n2];
						if(!visit[n1][n2][d3[t1]])
						{
							visit[n1][n2][d3[t1]]=1;
							d1[++t2]=n1;
							d2[t2]=n2;
							d3[t2]=d3[t1];
						}
					}
				}
				visit[d1[t1]][d2[t1]][d3[t1]]=0;
				t1++;
			}
			t1=1;
			t2=0;
			rep(i,1,n)
				rep(j,1,m)
					if(a2[i][j]>=0)
						rep(k2,1,down[l][0])
						{
							rep(l2,1,bel[down[l][k2]][0])
								if(dp[i][j][bel[down[l][k2]][l2]]+dp[i][j][down[l][k2]^bel[down[l][k2]][l2]]-pr[i][j]<dp[i][j][down[l][k2]])
									dp[i][j][down[l][k2]]=dp[i][j][bel[down[l][k2]][l2]]+dp[i][j][down[l][k2]^bel[down[l][k2]][l2]]-pr[i][j];
							d1[++t2]=i;
							d2[t2]=j;
							d3[t2]=down[l][k2];
							visit[i][j][d3[t2]]=1;
						}
		}
		rep(i,1,n)
			rep(j,1,m)
				if(dp[i][j][(1<<k)-1]<ans)ans=dp[i][j][(1<<k)-1];
	}
	if(ans==m*n*100000)printf("%d\n",-1);
  else printf("%d\n",ans);
  return 0;
}