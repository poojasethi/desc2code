#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

const long long mod = 1000000007;
const int N = 1000010;
int next[N];

void get_next(int m,char *s)
{
    next[1] = 0;
    int i = 1,j = 0;
    while(i <= m) {
        if(j == 0 || s[i] == s[j]) {
            i ++,j ++;
            next[i] = j;
        }
        else j = next[j];
    }
}

long long pow(long long a,long long b)
{
    long long ans = 1;
    while(b) {
        if(b & 1LL) ans = ans * a % mod;
        a = a * a % mod;
        b /= 2;
    }
    return ans;
}

int change(char c)
{
    if(c >= 'a' && c <= 'z') return c - 'a';
    return c - 'A' + 26;
}

char s[N],str[N],tmp[N];
long long a[N],b[N];
int dp[N];

void get_next(int n)
{
    dp[1] = 0;
    for(int i = 2; i <= n; i ++) {
        if(!next[i]) {
            if(s[i] != s[1]) dp[i] = 1;
            else dp[i] = 0;
        }
        else {
            if(s[i] != s[next[i]]) dp[i] = next[i];
            else dp[i] = dp[next[i]];
        }
    }
    /*
    for(int i = 1; i <= n; i ++) cout << dp[i] << " ";
    cout << endl;*/
}
        
            
int match(int n,int m,char *str,char *s,int flag)
{
    int i = 1,j = 1;
    while(i <= n) {
        if(j == 0 || str[i] == s[j]) {
            i ++,j ++;
        }
        else j = next[j];
        if(j > m) {
            if(flag) return j;
            else j = next[j];
        }
    }
    return j;
}

void solve()
{
    int n,m;
    scanf("%d%s",&n,tmp);
    int len1 = 0,len2 = 0;
    for(int i = 0; tmp[i]; i ++) {
        int x = change(tmp[i]);
        for(int j = 0; j < 5; j ++) {
            s[++ len1] = ((x & (1 << (4 - j))) != 0) + '0';
        }
    }
    s[++ len1] = 0;
    get_next(len1,s);
    /*
    for(int i = 1; i <= n; i ++) cout << next[i] <<  " " ;
    cout << endl;
    */
    scanf("%d%s",&m,tmp);
    for(int i = 0; tmp[i]; i ++) {
        int x = change(tmp[i]);
        for(int j = 0; j < 5; j ++) {
            str[++ len2] = ((x & (1 << (4 - j))) != 0) + '0';
        }
    }
    //cout << s + 1 << " " << str + 1 << endl; 
    int fail = match(m,n,str,s,1);
    if(fail > n) {
        printf("0\n");
        return;
    }
    a[0] = 0;
    b[0] = 1;
    a[1] = -2 + mod;
    b[1] = 1;
    /*
    str[++ len2] = 0;
    get_next(len2,str);
    fail = match(n,m,s,str,0);*/
    fail --;
    //cout << fail << endl;
    get_next(len1,s);
    get_next(n);
    //for(int i = 1; i <= n; i ++) cout << dp[i][0] << " " << dp[i][1] << " " << endl;
    //cout << endl;
    //cout << fail << endl;

    for(int i = 2; i <= n; i ++) {
        int pt = dp[i];
        a[i] = (2 * a[i - 1] - a[pt] - 2) % mod; 
        if(a[i] < 0) a[i] += mod;
        b[i] = 1;
        //b[i] = (2 * b[i - 1] - b[pt]) % mod;
        //if(b[i] < 0) b[i] += mod;
    }
    /*
    for(int i = 1; i <= n; i ++)
        cout << b[i] << " " << a[i] << endl;*/
    long long E = -a[n] * pow(b[n],mod - 2) % mod;
    if(E < 0) E += mod;
    //cout << E << endl;
    int ans = (a[fail] + E * b[fail]) % mod;
    if(ans < 0) ans += mod;
    printf("%d\n",ans);
    /*
    for(int i = 1; i <= n; i ++) {
        long long tmp =  (a[i] + E * b[i]) % mod;
        if(tmp < 0) tmp += mod;
        cout << tmp << " ";
    }
    cout << endl;*/
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t --) {
        solve();
    }
    return 0;
}


