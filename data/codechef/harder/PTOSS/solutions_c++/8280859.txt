#pragma comment (linker, "/STACK:1073741824")
#define _USE_MATH_DEFINES
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iostream>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <string>
#include <bitset>
#include <complex>
 
using namespace std;
 
#define SZ(x) (int((x).size()))
#define FOR(i, a, b) for(int (i) = (a); (i) <= (b); ++(i))
#define ROF(i, a, b) for(int (i) = (a); (i) >= (b); --(i))
#define REP(i, n) for (int (i) = 0; (i) < (n); ++(i))
#define REPD(i, n) for (int (i) = (n); (i)--; )
#define FE(i, a) for (int (i) = 0; (i) < (int((a).size())); ++(i))
#define MEM(a, val) memset((a), val, sizeof(a))
#define INF 1000000000
#define LLINF 1000000000000000000LL
#define PB push_back
#define PPB pop_back
#define ALL(c) (c).begin(), (c).end()
#define SQR(a) ((a)*(a))
#define MP(a,b) make_pair((a), (b))
#define XX first
#define YY second
 
typedef vector<int> vint;
typedef vector<long long> vLL;
typedef double dbl;
typedef long double ldbl;
typedef vector<pair<int, int> > vpii;
typedef long long LL;
typedef pair<int, int> pii;
 
const LL mod = 1000000007;
const int nmax = 1000100;
 
int p[nmax];
int dp[nmax];
int b[nmax];
 
vector<bool> a, have;
char s[nmax/5];
 
void read(vector<bool> &a, int &n) {
  a.clear();
  scanf("%d%s", &n, s);
 
  int len = strlen(s);
  REP(i, len) {
    int cur = 0;
    if ('A' <= s[i] && s[i] <= 'Z')
      cur = s[i] - 'A' + 26;
    else
      cur = s[i] - 'a';
 
    REPD(j, 5) a.PB((cur >> j) & 1);
  }
  a.resize(n);
 
//  printf("::: ");
//  REP(i, n) printf("%d", a[i] ? 1 : 0);
//  printf("\n");
}
 
void prefix(vector<bool> &a) {
  p[0] = 0;
  for(int i = 1; i < SZ(a); ++i) {
    int j = p[i - 1];
    while(j && a[i] != a[j]) j = p[j - 1];
    if (a[i] == a[j])
      p[i] = j + 1;
    else
      p[i] = j;
  }
}
 
int main() {
#ifdef    CENADAR_DEBUG
  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
//  freopen("errput.txt", "w", stderr);
#else  // CENADAR_DEBUG
//  freopen("input.txt", "r", stdin);
//  freopen("output.txt", "w", stdout);
#endif // CENADAR_DEBUG
 
  int T;
  cin >> T;
  while(T--) {
    int n, m;
    read(a, n);
    read(have, m);
    prefix(a);
 
    b[0] = 0;
    b[1] = b[0] - 2;
    for(int i = 1; i < n; ++i) {
      if (a[p[i - 1]] == a[i]) {
        b[i + 1] = 2*b[i] - b[dp[p[i - 1]]] - 2;
        dp[i] = dp[p[i - 1]];
      } else {
        b[i + 1] = 2*b[i] - b[p[i - 1] + 1] - 2;
        dp[i] = p[i - 1] + 1;
      }
      while (b[i + 1] > mod) b[i + 1] -= mod;
      while (b[i + 1] < 0) b[i + 1] += mod;
    }
 
//    REP(i, n + 1) printf(":: %d: %d\n", i, b[i]);
//    REP(i, n + 1) printf(":!: %d: %d\n", i, dp[i]);
 
    int cur = 0;
    for(int i = 0; i < m && cur != n; ++i) {
      while(cur && have[i] != a[cur]) cur = p[cur - 1];
      if (have[i] == a[cur]) ++cur;
    }
 
    printf("%d\n", (mod - (b[n] - b[cur] + mod) % mod) % mod);
  }
 
  return 0;
}