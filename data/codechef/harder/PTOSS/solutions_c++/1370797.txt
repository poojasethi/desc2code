#include <string>
#include <vector>
#include <algorithm>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <iostream>
#include <cstring>
#define REP(i,x,v)for(int i=x;i<=v;i++)
#define REPD(i,x,v)for(int i=x;i>=v;i--)
#define FOR(i,v)for(int i=0;i<v;i++)
#define FORE(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++)
#define REMIN(x,y) (x)=min((x),(y))
#define REMAX(x,y) (x)=max((x),(y))
#define pb push_back
#define sz size()
#define mp make_pair
#define fi first
#define se second
#define ll long long
#define IN(x,y) ((y).find((x))!=(y).end())
#define un(v) v.erase(unique(ALL(v)),v.end())
#define LOLDBG1
#ifdef LOLDBG
#define DBG(vari) cerr<<#vari<<" = "<<vari<<endl;
#define DBG2(v1,v2) cerr<<(v1)<<" - "<<(v2)<<endl;
#else
#define DBG(vari)
#define DBG2(v1,v2)
#endif
#define CZ(x) scanf("%d",&(x));
#define CZ2(x,y) scanf("%d%d",&(x),&(y));
#define CZ3(x,y,z) scanf("%d%d%d",&(x),&(y),&(z));
#define ALL(x) (x).begin(),(x).end()
#define tests int dsdsf;cin>>dsdsf;while(dsdsf--)
#define testss int dsdsf;CZ(dsdsf);while(dsdsf--)
using namespace std;
typedef pair<int,int> pii;
typedef vector<int> vi;
template<typename T,typename TT> ostream &operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream &operator<<(ostream &s,vector<T> t){s<<"{";FOR(i,t.size())s<<t[i]<<(i==t.size()-1?"":",");return s<<"}"<<endl; }




char s1[2000010];
char s2[1000010];
char s[200005];
int n,m;
int pr[2000006];
int spr[2000006];

void fpref()
{
    pr[0]=0;
    spr[0]=-1;
    if (s1[0]!=s1[1]) spr[1]=0;
    else spr[1]=-1;
    int t=0;
    REP(i,1,n-1)
    {
        if (s1[i]==s1[t])
        {
            t++;
            pr[i]=t;
        }
        else
        {
            while(t>0)
            {
                t=pr[t-1];
                if (s1[t]==s1[i])
                {
                    t++;
                    break;
                }
            }
            pr[i]=t;
        }
        if (s1[pr[i]]!=s1[i+1]) spr[i+1]=pr[i];
        else spr[i+1]=spr[pr[i]];
    }
}
#define MOD 1000000007
int p[1000002];
int d[1000002];
int sum[1000002];

int main()
{

	testss
	{
		CZ(n);
		scanf("%s",s);
		int l=strlen(s);
		FOR(i,l)
		{
			int d=(i+1)*5-1;
			int x;
			if ('a'<=s[i] && s[i]<='z') x=s[i]-'a';
			else x=26+s[i]-'A';
			FOR(j,5) s1[d-j]=!!(x&(1<<j));
		}
		s1[n]=3;
		CZ(m);
		scanf("%s",s);
		l=strlen(s);
		FOR(i,l)
		{
			int d=(i+1)*5-1;
			int x;
			if ('a'<=s[i] && s[i]<='z') x=s[i]-'a';
			else x=26+(s[i]-'A');
			FOR(j,5) s2[d-j]=!!(x&(1<<j));
		}
		DBG(n);
		FOR(i,m) s1[n+1+i]=s2[i];
		int truen=n;
		n=n+m+1;
		fpref();
		n=truen;
		int pos=pr[n+m];
		if (m==0) pos=0;
		
		DBG(pos);
		bool doned=0;
		REP(j,n+1,n+m)
		{
			if (pr[j]==n)
			{
				puts("0");
				doned=1;
				break;
			}
		}
		if (doned) continue;
		DBG(vi(spr,spr+n));
		p[0]=0;
		REP(i,1,n-1) p[i]=spr[i]+1;
		DBG(vi(p,p+n));
		sum[0]=0;
		FOR(i,n)
		{
			if (p[i]==i)
			{
				d[i]=2;
			}
			else
			{
				d[i]=sum[i]-sum[p[i]]+2;
				if (d[i]<0) d[i]+=MOD;
				if (d[i]>=MOD) d[i]-=MOD;
			}
			sum[i+1]=sum[i]+d[i];
			if (sum[i+1]>=MOD) sum[i+1]-=MOD;
		}
		printf("%d\n",(sum[n]-sum[pos]+MOD)%MOD);
		
		
	}
	
	
	
    return 0;
}
