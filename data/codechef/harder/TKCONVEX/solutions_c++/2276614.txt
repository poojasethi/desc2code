#include <iostream>
#include <vector>
#include <cstdlib>
#include <cstring>
#include <set>
#include <algorithm>
#include <queue>
#include <map>
 
using namespace std;
 
typedef long long Long;
typedef pair<Long,Long> PLL;
PLL arr[1010];
Long used[1010];
Long bits[50000];
Long tem[20];
// ====================== BEGIN CUT HERE =========================
 
bool nextint(int &n,int SIZE = 7)
{
	int b = n & -n;
	int cnt = 0;
	while(n & b)
	{
		b <<= 1 , cnt++;
	}
	n |= b;
	n &= ~(b-1);
	cnt--;
	if(cnt > 0)n |= (1<<cnt)-1;
	return !(n & (1<<SIZE));
}
 
// ====================== END CUT HERE =========================
 
int main()
{
    int N, K;
    cin >> N >> K;
    int SZ = 0 , n = (1<<(K-1))-1;
    do
    {
    	bits[SZ++] = n;
    }while(nextint(n,2*K-2));
    
    for(int i = 0; i < N; ++i)
    {
    	cin >> arr[i].first;
    	arr[i].second = i;
    }
    sort(arr,arr+N);
//    for(int i = 0; i < N; ++i)
//    	cout << arr[i] << " ";
//    cout << endl;
 
 
    for(int i = K-1; i < N; ++i)
    {
    	for(int j = max(2*K-1,i+1); j < N; ++j)
    	{
    		if(j-i < K)
    		{
    			int sz = 0;
    			Long su = 0;
    			for(int a = j-2*K+1; a <= j; ++a)
    			{
    				if(a==i || a==j)continue;
    				tem[sz++] = a;
    				su += arr[a].first;
    			}
 
    			int lo = 0;
    			Long misu = 200000000000000LL;
    			if(su <= arr[i].first+arr[j].first+1)continue;
    			for(int l = 0; l < SZ; ++l)
    			{
//    				cout << bits[l] << endl;
    				Long s = 0;
    				int ex = 0;
    				for(int m = 0; m < sz && !ex; ++m)
    					if(bits[l] & (1<<m))
    					{
    						if(tem[m] > i)
    							ex = 1;
    						s += arr[tem[m]].first;
    					}
//    				cout << endl;
    				if(ex)break;
//    				cout << s << endl;
    				if(s > arr[i].first && misu > s)
    					misu = s , lo = l;
//    				cout << " --> " << s << endl;
    			}
//    			cout << "  -- > "<< misu <<" "<< arr[i] << endl;
//    			continue;
//    			while(lo < hi)
//    			{
//    				int mid = (lo+hi)/2;
//    				if( (1<<(i-tem[0])) )
//    				Long e = 0;
//    				for(int a = 0; a < sz; ++a)
//    					if(bits[mid] & (1<<a))
//    						e += arr[tem[a]];
//    				if(e > arr[i])
//    					hi = mid;
//    				else
//    					lo = mid+1;
//    			}
 
    			Long ge = 0;
				for(int a = 0; a < sz; ++a)
					if(bits[lo] & (1<<a))
						ge += arr[tem[a]].first;
//				cout << su-ge << endl;
				if(ge > arr[i].first && su-ge > arr[j].first)
				{
					cout << "Yes" << endl;
					for(int a = 0; a < sz; ++a)
						if(bits[lo] & (1<<a))
							cout << arr[tem[a]].second+1 << " ";
					cout << arr[i].second+1 << " ";
					for(int a = 0; a < sz; ++a)
						if(!(bits[lo] & (1<<a)))
							cout << arr[tem[a]].second+1 << " ";
					cout << arr[j].second+1 << endl;
					return 0;
				}
 
    		}
    		else
    		{
    			Long s1 = 0;
    			Long s2 = 0;
    			for(int a = i-K+1; a < i; ++a)
    				s1 += arr[a].first;
    			for(int b = j-K+1; b < j; ++b)
    				s2 += arr[b].first;
//    			cout << s1 << " " << arr[i] << endl;
//    			cout << s2 << " " << arr[j] << endl;
    			if(s1 > arr[i].first && s2 > arr[j].first)
    			{
    				cout << "Yes" << endl;
        			for(int a = i-K+1; a < i; ++a)
        				cout << arr[a].second+1 << " ";
        			cout << arr[i].second+1 << " ";
        			for(int b = j-K+1; b < j; ++b)
        				cout << arr[b].second+1 << " ";
        			cout << arr[j].second+1 << endl;
    				return 0;
    			}
    		}
    	}
    }
    cout << "No" << endl;
    
    return 0;
}
//1 2 3 3 4 5
/*
 
*/
