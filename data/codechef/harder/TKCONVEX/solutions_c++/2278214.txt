using namespace std;
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<stack>
#include<sstream>
#include<algorithm>
#include<cctype>
#include<list>
#include<set>
#include<set>
#include<map>
#include<queue>
#include<stack>
#define f(i,n) for(i=0;i<n;i++)
#define fr(i,n,x) for(i=x;i<=n;i++)
#define w(t) while(t--)
#define MAX(A,B) (A)>(B)?(A):(B)
#define MIN(A,B) (A)<(B)?(A):(B)
#define gcd(a,b)  { return (b==0)?a:gcd(b,a%b); }
#define lcm(a,b)  { return a*b/gcd(a,b);  }
#define  sc(a)   scanf("%lld",&a)
#define  p(a)   printf("%lld\n",&a)
#define  str(s)   cin>>s
#define  ps(s)     cout<<s<<endl
#define  print(s)  printf("%s\n",s.c_str())
#define lt(v,k) list<int>v[k]
#define ll long long
#define q(n) cin>>n
#define b(n) scanf("%I64d",&n);
typedef vector<int> vi;
typedef pair<string,int> ps;
typedef pair<int,int>pi;
typedef vector<pi> vii;
typedef vector<vii> vvii;
//vvii G(2501);
//vi d(1000,100000000);

long long  int i,j,k,t,n1,n2,n,m,c=0;
// long long a[1000001];
 //list<int> l[100001];
 
 class abc
 {public:
 long long int v1;
 long long int index;
 //string s;
 };
 abc a[10001],v2[10001];   
 //long long  arr[1001][1001];
bool compare(const abc& a1,const abc& b1)
{
 return a1.v1<b1.v1;
 }

vector<long long >v;
ll sum[100001],sum1[10001];
int main()
{
//freopen("C:\\Users\\dell\\Desktop\\input.txt","r",stdin)   ;
//freopen("C:\\Users\\dell\\Desktop\\output.txt","w",stdout);
//sc(t);
//w(t)
//while(sc(a))
{
  sc(n);sc(k);
  fr(i,n,1)
  {
  sc(a[i].v1);

a[i].index=i;
}
sort(a+1,a+n+1,compare);
sum[0]=0;
for(i=1;i<=n;i++)
{
 				sum[i]=sum[i-1]+a[i].v1;
				 }

bool flag1=false;
ll range;
for(i=1;i<=n;i++)
{range=i+k-1;
if(range>n)
break;
c=(sum[range]-sum[i-1]); 
//n1=c-a[range].v1;
										 
	if(2*a[range].v1<c)
	{for(j=i;j<=range;j++)
	{				 
					 
					 v.push_back(a[j].index);
					 }

flag1=true;
n2=range;
n1=i;
break;
}
}
ll x=1;
if(flag1==true)
{
for(i=1;i<=n;i++)
{
if(i<n1||i>n2) 	
{
 			
		 v2[x].v1=a[i].v1;
		 v2[x].index=a[i].index;
		// x++;
		// cout<<v2[x].v1<<" "<<v2[x].index<<endl;
		 x++;
		 }			 
		 }		  
				  
	sort(v2+1,v2+x,compare);			  
				  
				  
	sum1[0]=0;
for(i=1;i<x;i++)
{
 				sum1[i]=sum1[i-1]+v2[i].v1;
				 }
			  
			  
for(i=1;i<x;i++)
{range=i+k-1;
if(range>=x)
break;
c=(sum1[range]-sum1[i-1]); 
//n1=c-a[range].v1;
										 
	if(2*v2[range].v1<c)
	{for(j=i;j<=range;j++)
	{				 
					 
					 v.push_back(v2[j].index);
					 }


break;
}

				  
}				  
}				  
				  
				  
				  
  if((int)v.size()<2*k)
  printf("No\n");
  else
  {
  printf("Yes\n");
 for(i=0;i<2*k;i++)
 {
 printf("%lld",v[i]); 

if(i!=2*k-1)
cout<<" ";
}
cout<<endl;
}
}
 //system("pause");
  return 0;
}
