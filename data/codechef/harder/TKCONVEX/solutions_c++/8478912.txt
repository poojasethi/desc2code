#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;

int n,k;

int a[1005];
int b[1005];
ll su[1005];

int ans[1005];
int tot=0;
int bo[1005];
void out(){
	printf("Yes\n");
	for (int i=1;i<=2*k;i++){
		for (int j=1;j<=n;j++)if(!bo[j] && ans[i]==b[j]){
			bo[j]=1;
			printf("%d ",j);
			break;
		}
	}
	printf("\n");
}

int I,J;
int dfs(int i,int ci,int cj,ll sui,ll suj){
	if(ci==k && cj==k){
		if(sui>0 && suj>0){
			out();
			return 1;
		}else return 0;
	}
	if(i<=I && ci+1<=k){
		ans[ci+1]=a[i];
		if(dfs(i-1,ci+1,cj,sui+a[i],suj))return 1;
	}
	if(i!=I && cj+1<=k){
		ans[cj+1+k]=a[i];
		if(dfs(i-1,ci,cj+1,sui,suj+a[i]))return 1;
	}
	return 0;
}
int main()
{
	scanf("%d%d",&n,&k);
	for (int i=1;i<=n;i++)scanf("%d",&a[i]),b[i]=a[i];
	sort(a+1,a+1+n);
	for (int i=1;i<=n;i++)su[i]=su[i-1]+a[i];
	for (int i=k;i<=n;i++)
		if(su[i-1]-su[i-k]>a[i])
			for (int j=i+k;j<=n;j++)
				if(su[j-1]-su[j-k]>a[j]){
					for (int l=i-k+1;l<=i;l++)ans[++tot]=a[l];
					for (int l=j-k+1;l<=j;l++)ans[++tot]=a[l];
					out();
					return 0;
				}
	for (int i=k;i<=n;i++)
		for (int j=max(i+1,2*k);j<=n && j<i+k;j++){
			I=i;J=j;
			if(dfs(j,0,0,-2ll*a[i],-2ll*a[j]))return 0;
		}
	printf("No\n");
	return 0;
}
