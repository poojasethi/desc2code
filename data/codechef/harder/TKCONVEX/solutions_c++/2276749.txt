#include<stdio.h>
#include<string.h>
#include<algorithm>

using namespace std;

#ifdef _WIN32
#define _LL __int64
#define FM "%I64d"
#else 
#define FM "%lld"
#define _LL long long
#endif

_LL tmp[1100];

_LL ans[50],k,m,n,A[1100];

_LL judge()
{
	_LL i,j,sum=0;
	for(i=1;i<k;i++) sum+=A[tmp[i]];
	for(i=k;i<=m;i++)
	{
		if(sum>A[tmp[i]]){
			for(j=i-k+1;j<=i;j++)
				ans[j-i+2*k]=tmp[j];
			return i+1;
		}
		sum+=A[tmp[i]]-A[tmp[i-k+1]];
	}
	return 0;
}
struct node{ int id; _LL v; }num[1100];
bool cmp(node a,node b){ return a.v<b.v; }

int  vis[1100];

_LL dfs(_LL s,_LL dep,_LL sum)
{
	_LL i;
	if(dep>=k+1){
		if(sum>2*A[ans[k]]){
			m=0;
			for(i=1;i<=n;i++)
				if(!vis[i]) tmp[++m]=i;
			return judge();
		}
		else return 0;
	}
	for(i=s;i<=n;i++)
	{
		vis[i]=1;
		ans[dep]=i;
		if(dfs(i+1,dep+1,sum+A[i]))
			return 1;
		if(dep==k){
			vis[i]=0;
			break;
		}
		vis[i]=0;
	}
	return 0;
}


void print()
{
	int i;
	for(i=1;i<2*k;i++)
		printf("%d ",num[ans[i]].id);
	printf("%d\n",num[ans[i]].id);
}

int main()
{
	_LL i,j,flag,t,sum;
	while(scanf(FM,&n)!=EOF)
	{
		scanf(FM,&k);
		memset(vis,0,sizeof(vis));
		for(i=1;i<=n;i++){
			scanf(FM,&num[i].v);
			num[i].id=i;
		}
		sort(num+1,num+n,cmp);
		for(i=1;i<=n;i++) A[i]=num[i].v;
		m=n;
		for(i=1;i<=n;i++) tmp[i]=i;
		if(!(t=judge())){
			 puts("No"); continue;
		}
		for(i=1;i<=k;i++) ans[i]=ans[i+k];
		m=n-t+1;
		for(i=t;i<=n;i++)
			tmp[i-t+1]=i;
		if(judge()){
			puts("Yes");
			print();
			continue;
		}
		for(i=1,sum=flag=0;i<k;i++) sum+=A[i];
		for(i=k,t=0;i<=n;i++){
			if(sum>A[i]) t++,flag=i;
			sum+=A[i]-A[i-k+1];
		}
		if(flag<2*k||t<2){
			puts("No"); continue;
		}
		n=2*k;
		for(j=1;j<=2*k;j++){ A[j]=A[flag-2*k+j]; num[j]=num[flag-2*k+j]; }
		if(dfs(1,1,0))
		{
			puts("Yes");
			print();
		}
		else puts("No");
	}
	return 0;
}
