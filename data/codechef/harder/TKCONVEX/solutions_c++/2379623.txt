#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<cstring>
using namespace std;
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(j,i,n) for(int j=i;j<n;j++)
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define fil(a,v) memset(a,v,sizeof(a))
typedef long long ll;
int a[25];
bool ok;
int array[2000];
int k;
vector<pair<int,int> >xx;
void check(int x)
{ ll sum=0,sum1=0,l1,l2;
rep(i,2*k)
if(a[i])
{sum+=array[x+i];l1=array[x+i];}
else
{sum1+=array[x+i];l2=array[x+i];}
 
if(l1<sum-l1 && l2<sum1-l2)
ok=true;
//cout<<sum<<" "<<sum1<<endl;
if(ok)
{
cout<<"Yes\n";
rep(i,2*k)
if(a[i])cout<<xx[i+x].s<<" ";
rep(i,2*k)
if(!a[i])cout<<xx[i+x].s<<" ";
cout<<endl;
}
}
void ff(int id,int rem,int x)
{ //cout<<id<<" "<<rem<<endl;
if(rem<0 || id>2*k)return ;
if(rem==0 && id==2*k) {check(x);return ;}
if(rem>2*k-id)return ;
if(!ok)
{a[id]=0;
ff(id+1,rem,x);
}
if(!ok)
{
a[id]=1;
ff(id+1,rem-1,x);
}
}
bool fun(int x)
{
fil(a,0);
ff(0,k,x);
}
int main()
{
int n;int array1[2000];
scanf("%d%d",&n,&k);
rep(i,n)
scanf("%d",&array1[i]);
rep(i,n)
xx.pb(mp(array1[i],i+1));
sort(xx.begin(),xx.end());
rep(i,n)array[i]=xx[i].f;
ok=false;
rep(i,n-2*k+1)
{
if(ok)break;
fun(i);
}
if(!ok)
cout<<"No\n";
}