from itertools import combinations
from collections import defaultdict
 
 
def small_j(sticks, cum, k):
    for j in range(k - 1, len(sticks)):
        i = j - k + 1
        hyp = sticks[j]
        rest = cum[j - 1] - cum[i] + sticks[i]
        if rest > hyp:
            return i, j
    return None, None
 
def small_ii(sticks, cum, k):
    for jj in range(-1, k - len(sticks) - 1, -1):
        ii = jj - k + 1
        hyp = sticks[jj]
        rest = cum[jj - 1] - cum[ii] + sticks[ii]
        if rest > hyp:
            return len(sticks) + ii, len(sticks) + jj
    assert False
 
 
 
 
 
 
def solve(n, k, sticks):
    len_pos = defaultdict(list)
    for pos, len_ in enumerate(sticks):
        len_pos[len_].append(str(pos + 1))
 
    sticks.sort()
    tot = 0
    cum = []
    for s in sticks:
        tot += s
        cum.append(tot)
 
    i, j = small_j(sticks, cum, k)
    if j is None:
        return "No"
 
    ii, jj = small_ii(sticks, cum, k)
 
    if ii > j:
        ans = sticks[i:j+1] + sticks[ii:jj+1]
        ans_i = []
        for len_ in ans:
            ans_i.append(len_pos[len_].pop())
        return "Yes\n" + " ".join(ans_i)
 
    if jj < 2*k - 1:
        return "No"
 
    chosen_sticks = list(enumerate(sticks[jj - 2*k + 1: jj+1]))
    assert len(chosen_sticks) == 2*k
 
    positions = range(len(chosen_sticks))
 
    solution = None
    for poly1 in combinations(positions, r=k):
        poly1 = list(poly1)
        i1 = 0
        sum1 = 0
        sum2 = 0
        hyp1 = 0
        hyp2 = 0
        for pos, cs in chosen_sticks:
            if i1 < k and pos == poly1[i1]:
                sum1 += cs
                i1 += 1
                hyp1 = cs
            else:
                sum2 += cs
                hyp2 = cs
        sum1 -= hyp1
        sum2 -= hyp2
        if sum1 > hyp1 and sum2 > hyp2:
            solution = poly1
            break
 
    if solution is None:
        return "No"
    else:
        chosen_sticks = [v for _, v in chosen_sticks]
        poly1 = [chosen_sticks[i] for i in solution]
        for v in poly1:
            chosen_sticks.remove(v)
        poly2 = chosen_sticks
        ans = poly1 + poly2
        ans_i = []
        for len_ in ans:
            ans_i.append(len_pos[len_].pop())
        return "Yes\n" + " ".join(ans_i)
 
 

 
n, k = map(int, raw_input().split())
sticks = map(int, raw_input().split())
print solve(n, k, sticks) 