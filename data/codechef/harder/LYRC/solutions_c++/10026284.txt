#include <cstdio>
#include <cstring>
#include <algorithm>
 
#define L 5100100
 
using namespace std;
 
const int LEN = L * 3;
 
int r[LEN], sa[LEN];
int wa[LEN], wb[LEN], wv[LEN], ss[LEN];
 
#define F(x) ((x) / 3 + ((x) % 3 == 1 ? 0 : tb))
#define G(x) ((x) < tb ? (x) * 3 + 1 : ((x) - tb) * 3 + 2)
 
int c0(int *r, int a, int b) { return r[a] == r[b] && r[a + 1] == r[b + 1] && r[a + 2] == r[b + 2]; }
 
int c12(int k, int *r, int a, int b) {
	if (k == 2) return r[a] < r[b] || (r[a] == r[b] && c12(1, r, a + 1, b + 1));
	return r[a] < r[b] || (r[a] == r[b] && wv[a + 1] < wv[b + 1]);
}
 
void sort(int *r, int *a, int *b, int n, int m) {
	for (int i = 0; i < n; i ++) wv[i] = r[a[i]];
	for (int i = 0; i < m; i ++) ss[i] = 0;
	for (int i = 0; i < n; i ++) ss[wv[i]] ++;
	for (int i = 1; i < m; i ++) ss[i] += ss[i - 1];
	for (int i = n - 1; i >= 0; i --) b[-- ss[wv[i]]] = a[i];
}
 
void DC3(int *r, int *sa, int n, int m) {
	int i, j, p;
	int *san = sa + n, *rn = r + n;
	int ta = 0, tb = (n + 1) / 3, tbc = 0;
 
	r[n] = r[n + 1] = 0;
	for (i = 0; i < n; i ++) if (i % 3 != 0) wa[tbc ++] = i;
 
	sort(r + 2, wa, wb, tbc, m);
	sort(r + 1, wb, wa, tbc, m);
	sort(r, wa, wb, tbc, m);
 
	for (p = 1, rn[F(wb[0])] = 0, i = 1; i < tbc; i ++)
		rn[F(wb[i])] = c0(r, wb[i - 1], wb[i]) ? p - 1 : p ++;
 
	if (p < tbc) DC3(rn, san, tbc, p);
	else for (i = 0; i < tbc; i ++) san[rn[i]] = i;
 
	for (i = 0; i < tbc; i ++) if (san[i] < tb) wb[ta ++] = san[i] * 3;
	if (n % 3 == 1) wb[ta ++] = n - 1;
 
	sort(r, wb, wa, ta, m);
 
	for (i = 0; i < tbc; i ++) wv[wb[i] = G(san[i])] = i;
	for (i = 0, j = 0, p = 0; i < ta && j < tbc; p ++)
		sa[p] = c12(wb[j] % 3, r, wa[i], wb[j]) ? wa[i ++] : wb[j ++];
 
	for ( ; i < ta; p ++) sa[p] = wa[i ++];
	for ( ; j < tbc; p ++) sa[p] = wb[j ++];
}
 
int m;
 
int calc(char *s) {
	int len = strlen(s);
	int lo = 0, hi = m, st, en;
	while(lo + 1 < hi) {
		int md = (lo + hi) >> 1, i, ok = 1;
		int t = sa[md];
		for(i = 0; i < len; i ++) {
			if(s[i] != r[t + i]) {
				if(s[i] > r[t + i]) ok = 0;
				break;
			}
		}
		if(ok) hi = md; else lo = md;
	}
	st = hi;
	lo = 0; hi = m;
	while(lo + 1 < hi) {
		int md = (lo + hi) >> 1, i, ok = 1;
		int t = sa[md];
		for(i = 0; i < len; i ++) {
			if(s[i] != r[t + i]) {
				if(s[i] < r[t + i]) ok = 0;
				break;
			}
		}
		if(ok) lo = md; else hi = md;
	}
	en = lo;
	return en - st + 1;
}
 
char tmp[50010], s[501][5002];
int W, n;
 
void run() {
	for(int i = 1; i <= W; i ++) {
		printf("%d\n", calc(s[i]));
	}
}
 
int main() {
	scanf("%d\n", &W);
	for(int i = 1; i <= W; i ++) gets(s[i]);
	scanf("%d\n", &n);
	for(int i = 1; i <= n; i ++) {
        gets(tmp);
		for(int j = 0; tmp[j]; j ++) r[m ++] = tmp[j];
		r[m ++] = '*';
	}
	r[m ++] = 0;
	DC3(r, sa, m, 256);
	run();
	return 0;
} 