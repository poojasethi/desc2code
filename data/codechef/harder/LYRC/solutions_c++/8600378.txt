#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
inline int e(char p){
	if(p>='a'&&p<='z')return p-'a';
	if(p>='A'&&p<='Z')return p-'A'+26;
	if(p>='0'&&p<='9')return p-'0'+52;
	if(p=='-')return 62;
}
int go[1510000][65];int tot=1;
int num[505];
int n,m;
char str[51000];
int q[1510000];
int fail[1510000];
int ans[1510000];
int main(){
	scanf("%d",&n);
	rep(i,1,n){
		scanf("%s",str+1);
		int len=strlen(str+1);
		int now=1;
		rep(j,1,len){
			if(!go[now][e(str[j])])go[now][e(str[j])]=++tot;
			now=go[now][e(str[j])];
		}
		num[i]=now;
	}
	q[q[0]=1]=1;fail[1]=1;
	rep(i,1,q[0]){
		int x=q[i];
		rep(j,0,62){
			int y=fail[x];
			while(y!=1&&(!go[y][j])){
				y=fail[y];
			}
			int pd=0;
			if(!go[y][j])pd=1;
			else{
				if(go[y][j]==go[x][j])pd=1;
				else pd=go[y][j];
			}
			if(go[x][j])fail[go[x][j]]=pd,q[++q[0]]=go[x][j];
			else go[x][j]=pd;
		}
	}
	scanf("%d",&m);
	rep(i,1,m){
		scanf("%s",str+1);
		int len=strlen(str+1);
		int now=1;
		rep(j,1,len)now=go[now][e(str[j])],++ans[now];
	}
	per(i,q[0],1){
		int x=q[i];
		ans[fail[x]]+=ans[x];
	}
	rep(i,1,n)printf("%d\n",ans[num[i]]);
	return 0;
}

