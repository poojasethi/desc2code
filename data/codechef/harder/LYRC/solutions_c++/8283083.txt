#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

int n;
char str[1000005];

int fail[2500005];
int ch[2500005][63];
int nd;

inline int se(char c){
	if(c=='-')return 0;
	if(c>='a')return c-'a'+1;
	if(c<='9')return c-'0'+53;
	return c-'A'+27;
}
int insert(){
     int cur=0;
     for (int i=0;str[i];i++){
         if(ch[cur][se(str[i])])cur=ch[cur][se(str[i])];
         else cur=ch[cur][se(str[i])]=++nd;
     }
     return cur;
} 
int qu[2500005];int p,q;
void build(){
     p=q=0;
     qu[q++]=0;
     int u,v;
     while(p<q){
                u=qu[p++];
                for (int i=0;i<63;i++)if(ch[u][i]){
                    qu[q++]=ch[u][i];
		    if(u){
			    v=fail[u];
			    while(v && !ch[v][i])v=fail[v];
			    fail[ch[u][i]]=ch[v][i];
		    }
                }
     }
}
int an[2500005];
int aa[5555];
int main()
{
	int n;
	 nd=0;
	 scanf("%d",&n);
	 for (int i=1;i<=n;i++){
	     scanf("%s",str);
	     aa[i]=insert();
	 }
	 build();
	 int m;scanf("%d",&m);
	 while(m--){
		 scanf("%s",str);
		 int cur=0,j,p;
		 for (int i=0;str[i];i++){
		     j=se(str[i]);
		     while(cur && !ch[cur][j])cur=fail[cur];
		     cur=ch[cur][j];
		     an[cur]++;
		 }
	 }
	 for (int i=q-1;i>=0;i--)an[fail[qu[i]]]+=an[qu[i]];
	 for (int i=1;i<=n;i++)printf("%d\n",an[aa[i]]);
    return 0;
}
