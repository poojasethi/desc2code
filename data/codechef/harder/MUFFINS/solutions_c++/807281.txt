#include <iostream> 
#include <sstream> 
#include <cstdio> 
#include <cstdlib> 
#include <cmath> 
#include <memory.h> 
#include <cctype> 
#include <string> 
#include <vector> 
#include <list> 
#include <queue> 
#include <deque> 
#include <stack> 
#include <map> 
#include <set> 
#include <algorithm> 
using namespace std;
 
#define FOR(i,a,b) for(int (i) = (a); (i) < (b); ++(i))
#define RFOR(i,a,b) for(int (i) = (a)-1; (i) >= (b); --(i))
#define CLEAR(a) memset((a),0,sizeof(a))
#define INF 1000000000
#define PB push_back
#define ALL(c) (c).begin(), (c).end()
#define pi 2*acos(0.0)
#define SQR(a) (a)*(a)
#define MP make_pair
#define MAX 1 << 16
 
typedef long long Int;

int t, n, m, k, g;
pair<int, int> M[1 << 16];
bool B[1 << 10];

bool F(int x, int y)
{
		while (y < m && (B[M[y].first] == true || B[M[y].second] == true))
				y++;
		if (y == m)
				return true;
		if (x == 0)
				return false;

		int a = M[y].first, b = M[y].second;
		B[a] = true;
		if (F(x-1, y+1))
		{
				B[a] = false;
				return true;
		}
		B[a] = false;

		B[b] = true;
		if (F(x-1, y+1))
		{
				B[b] = false;
				return true;
		}
		B[b] = false;
		return false;
}

int main()
{
		scanf("%d", &t);
		FOR (tt,0,t)
		{
				scanf("%d %d %d", &n, &m, &g);

				FOR (i,0,m)
				{
						int u, v;
						scanf("%d %d", &u, &v);
						M[i] = MP(u, v);						
				}
				k = n-g;
				CLEAR(B);

				printf(F(k, 0) ? "Possible\n" : "Impossible\n");
				
		}
		return 0;
} 