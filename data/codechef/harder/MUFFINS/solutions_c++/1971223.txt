#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<map>
#include<vector>
#include<list>
#include<set>
#include<queue>
#include<numeric>
#include<sstream>
#include<string>
#include<cmath>
#include<algorithm>
#include<stack>
using namespace std;

//#define inf 1001001010010010100ll
#define pb		push_back
#define mp 		make_pair
#define EPS		1e-9
#define ll long long
#define vi vector<int>
#define pii pair<int,int>
#define fi first
#define se second
#define inf 1000000000
#define mod 1009419529
#define N 100001
#define M 30002
#define Pars 1<<19
char buffer[Pars];int K;
void read(int &aux)
{
	aux = 0;
	for(;buffer[K] < '0' || buffer[K] > '9';)
	{
		if(++K == Pars)
			fread(buffer,1,Pars,stdin),K =0;
	}

	for(;buffer[K] >= '0' && buffer[K] <= '9';)
	{
		aux = aux * 10 + buffer[K] - '0';
		if(++K == Pars)
			fread(buffer,1,Pars,stdin),K = 0;
	}
}
int u[20202],v[20202],mask[1010],m;
bool solve(int i,int k)
{
 if(i==m)return 1;
 if(mask[u[i]]||mask[v[i]])return solve(i+1,k);
 if(k==0)return 0;
 mask[u[i]]=1;
 if(solve(i+1,k-1))return 1;
 mask[u[i]]=0;
 mask[v[i]]=1;
 if(solve(i+1,k-1))return 1;
 mask[v[i]]=0;
 return 0;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,k,n,p,q,g;
	scanf("%d",&T);
	while(T--)
	{
	 read(n);read(m);read(g);
	 for(i=0;i<m;i++)
	 {
	  read(u[i]),read(v[i]);
	 }
	 memset(mask,0,sizeof(mask));
	 if(solve(0,n-g))printf("Possible\n");
	 else printf("Impossible\n");
	}
	return 0;
}
