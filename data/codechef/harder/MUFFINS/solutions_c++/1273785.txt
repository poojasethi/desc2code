#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = (int)2e4 + 10;
int a[maxn],b[maxn],used[1111],m;
bool dfs(int g, int pos)
{
	if (pos == m) return true;
	if (used[a[pos]] || used[b[pos]]) return dfs(g,pos + 1);
	if (g)
	{
		used[a[pos]] = 1;
		if (dfs(g - 1,pos + 1)) return true;
		used[a[pos]] = 0;
		used[b[pos]] = 1;
		if (dfs(g - 1,pos + 1)) return true;
		used[b[pos]] = 0;
	}
	return false;
}
int main()
{
	#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif
	int T,n,g;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d%d",&n,&m,&g);
		for(int i = 0; i < m; i++)
			scanf("%d%d",&a[i],&b[i]);
		memset(used,0,sizeof(used));
		if (dfs(n - g,0)) puts("Possible"); else puts("Impossible");
	}
	return 0;
}
