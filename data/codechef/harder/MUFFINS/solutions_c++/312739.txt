#include <stdio.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <string>
#include <vector>
#include <set>
#include <map>
#pragma comment(linker, "/STACK:16777216")
using namespace std;

typedef vector<int> VI;
typedef pair<int,int> PII;
#ifndef ONLINE_JUDGE
typedef __int64 LL;
#else
typedef long long LL;
#endif

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof ar)
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))

//clock_t start=clock();
//fprintf(stderr,"time=%.3lfsec\n",0.001*(clock()-start));

#define N 1010
#define M 20202

int n,m,g;
int U[M],V[M];
int mark[N];

bool cover(int i,int k)
{
	if(i==m) return true;
	int u=U[i];
	int v=V[i];
	if(mark[u] || mark[v]) return cover(i+1,k);
	if(k==0) return false;
	mark[u]=1;
	if(cover(i+1,k-1)) return true;
	mark[u]=0;
	mark[v]=1;
	if(cover(i+1,k-1)) return true;
	mark[v]=0;
	return false;
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	#endif
	int T;
	for(scanf("%d",&T);T--;)
	{
		scanf("%d%d%d",&n,&m,&g);
		int i;
		for(i=0;i<m;i++)
			scanf("%d%d",U+i,V+i);
		memset(mark,0,4*n);
		bool yes=cover(0,n-g);
		puts(yes?"Possible":"Impossible");
	}
	return 0;
}
