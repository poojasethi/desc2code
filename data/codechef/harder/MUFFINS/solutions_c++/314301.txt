#include <iostream>
#include <queue>
#include <cstdio>
#include <cstring>
#include <map>
#include <vector>
#include <list>
#include <sstream>
#include <cmath>
#include <ctime>
#include <algorithm>

using namespace std;

#define FOR(i, a, b) for (int i = (a); i < (b); i++)
#define FOD(i, a, b) for (int i = (a); i >= (b); i--)
#define REP(i, a) for (int i = 0; i < (a); i++)
#define sz(a) ((int)a.size())
#define cl clear()
#define pb push_back
#define mp make_pair
#define X first
#define Y second
#define all(a) a.begin(), a.end()
#define sqr(a) ((a) * (a))
#define PI 3.1415926535897932384626433832795

typedef long long ll;
typedef pair <int, int> pii;
typedef pair <double, double> pdd;

vector <pii> a;
bool w[1000];

bool rec(int x, int k)
{
    while (x < sz(a) && (w[a[x].X] || w[a[x].Y]))
        x++;
    if (x == sz(a))
        return 1;
    if (k == 0)
        return 0;
    w[a[x].X] = 1;
    bool v = rec(x + 1, k - 1);
    w[a[x].X] = 0;
    if (v)
        return 1;
    w[a[x].Y] = 1;
    v = rec(x + 1, k - 1);
    w[a[x].Y] = 0;
    return v;
}

int main()
{
    int t;
    scanf("%d", &t);
    REP(tt, t)
    {
        memset(w, 0, sizeof(w));
        int n, m, g;
        scanf("%d%d%d", &n, &m, &g);
        int x, y;
        a.cl;
        REP(i, m)
            scanf("%d%d", &x, &y), a.pb(mp(x, y));
        if (rec(0, n - g))
            printf("Possible\n");
        else
            printf("Impossible\n");
    }
    return 0;
}
