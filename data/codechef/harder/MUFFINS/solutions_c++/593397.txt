#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#define inf 1000000000
using namespace std;
typedef long long L;
typedef unsigned long long UL;
pair<int,int> edges[20001];
int t,n,m,g;
int cover[1001];

bool vrcover(int eidx,int k){
    if(eidx==m+1)return true;
    int a=edges[eidx].first;
    int b=edges[eidx].second;
    if(cover[a]||cover[b])return vrcover(eidx+1,k);
    if(k>0){
        cover[a]=1;
        if(vrcover(eidx+1,k-1))return true;
        cover[a]=0;
        cover[b]=1;
        if(vrcover(eidx+1,k-1))return true;
        cover[b]=0;
    }
    return false;
}

int main()
{
    cin>>t;
    for(int i=1;i<=t;i++){
        cin>>n>>m>>g;
        memset(cover,0,sizeof(cover));
        for(int j=1;j<=m;j++)
            cin>>edges[j].first>>edges[j].second;

        if(vrcover(1,n-g))cout<<"Possible";
        else cout<<"Impossible";
        cout<<endl;
    }

    return 0;
}
