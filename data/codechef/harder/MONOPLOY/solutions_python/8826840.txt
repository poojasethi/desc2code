#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <algorithm>
#define LL long long
using namespace std;
const int N=100000,J=17;

template<class T>
class Ta{

	int n;T a[N+10];
	
public:
	
	void Init(T _n){n=_n;for (int i=1;i<=n;i++) a[i]=0;}
	
	void Add(int i,T _a){
		for (;i<=n;i+=i&-i) a[i]+=_a;
	}
	
	T Get(int i){T sum=0;
		for (;i;i-=i&-i) sum+=a[i];
		return sum;
	}
};

class Tree{

	int n,m,lis[N+10];Ta<int> ta;Ta<LL> ta2;

	struct Point{
		int sum,si,first,pre,fa[J+1],di;
	}po[N+10];
	
	struct Line{
		int next,l;
	}li[N+N+10];
	
	void Dfs(int fa,int k,int si){int i;
		po[k].fa[0]=fa,po[k].si=si,po[k].sum=1;lis[po[k].si]=k;
		for (i=1;po[k].fa[i-1];i++) po[k].fa[i]=po[po[k].fa[i-1]].fa[i-1];
		po[k].di=i-1;
		for (i=po[k].first;i;i=li[i].next){
			if (li[i].l==fa) continue;
			Dfs(k,li[i].l,si+po[k].sum);
			po[k].sum+=po[li[i].l].sum;
		}
	}
	
	void Plus(int i,int a){
		ta.Add(po[i].si+1,a);
		ta.Add(po[i].si+po[i].sum+1,-a);
		ta2.Add(po[i].si+1,a*po[i].sum);
	}
	
	int Find(int k){int tmp=ta.Get(po[k].si+1);
		for (int i=po[k].di;i>=0;i--){
			if (ta.Get(po[po[k].fa[i]].si+1)==tmp)
				k=po[k].fa[i];
		}
		return k;
	}

public:

	void Renew(int _n){n=_n,m=0;ta.Init(n);ta2.Init(n);
		for (int i=0;i<n;i++) po[i].first=0,po[i].pre=0,memset(po[i].fa,0,sizeof(po[i].fa));
	}
	
	void Add(int a,int b){
		li[++m].next=po[a].first,po[a].first=m,li[m].l=b;
		li[++m].next=po[b].first,po[b].first=m,li[m].l=a;
	}
	
	void Init(){
		Dfs(0,0,0);
		for (int i=1;i<n;i++) Plus(i,1);
	}
	
	void Modify(int k){
		int tmp,tmp2;tmp=k;
		while (tmp=Find(tmp)){
			Plus(tmp,-1);
			int &tp=po[po[tmp].fa[0]].pre;
			if (tp) Plus(tp,1);tp=tmp;
		}
		if (po[k].pre) Plus(po[k].pre,1),po[k].pre=0;
	}
	
	double Query(int k){
		return ta.Get(po[k].si+1)+(long double)(ta2.Get(po[k].si+po[k].sum)-ta2.Get(po[k].si+1))/po[k].sum;
	}
}tr;

int main(){
	int t,i,j,a,b,n,q;char ch;
//	freopen("a.in","r",stdin);
	//freopen("a.out","w",stdout);
	scanf("%d",&t);
	while (t--){
		scanf("%d",&n);tr.Renew(n);
		for (i=1;i<n;i++) scanf("%d%d",&a,&b),tr.Add(a,b);
		tr.Init();
		scanf("%d",&q);
		while (q--){
			scanf(" %c%d",&ch,&a);
			if (ch=='q') printf("%.9lf\n",tr.Query(a));
			else tr.Modify(a);
		}
	}
	return 0;
}