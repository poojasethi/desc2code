#include<cstdio>
#include<cstring>
#include<cassert>
int T;
int n,q;
int head[100001],end[200001],next[200001],tp;
int dad[100001][21],dep[100001],siz[100001],wz[100001],ewz[100001],gs;
int a[100001],ed[200001],ld[100001],tim;
long long bit1[100001],bit2[100001];
void dfs(int p)
{
	int i,j,k;
	//printf("p=%d\n",p);
	for(i=1;i<=20;i++)dad[p][i]=dad[dad[p][i-1]][i-1];
	siz[p]=1;wz[p]=++gs;a[p]=++tim;ed[tim]=p;
	for(i=head[p];i;i=next[i])if(end[i]!=dad[p][0])
	{
		dad[end[i]][0]=p;dep[end[i]]=dep[p]+1;
		dfs(end[i]);siz[p]+=siz[end[i]];
	}
	ewz[p]=gs;
}
void add(int l,int r,int z)
{
	int i,j,k;
	for(i=l;i<=n;i+=i&-i){bit1[i]+=z;bit2[i]+=1ll*l*z;}
	for(i=r+1;i<=n;i+=i&-i){bit1[i]-=z;bit2[i]-=1ll*(r+1)*z;}
}
long long find(int l,int r)
{
	int i,j,k;
	long long ans1=0,ans2=0;
	for(i=r;i;i-=i&-i)ans1+=bit1[i];
	ans1*=(r+1);
	for(i=r;i;i-=i&-i)ans1-=bit2[i];
	for(i=l-1;i;i-=i&-i)ans2+=bit1[i];
	ans2*=l;
	for(i=l-1;i;i-=i&-i)ans2-=bit2[i];
	return ans1-ans2;
}
int lca(int x,int y)
{
	int i,j,k;
	if(dep[x]<dep[y]){int t=x;x=y;y=t;}
	for(i=0;dep[x]>dep[y];i++)if((dep[x]-dep[y])&(1<<i))x=dad[x][i];
	for(i=20;i>=0;i--)if(dad[x][i]!=dad[y][i]){x=dad[x][i];y=dad[y][i];}
	if(x!=y)x=dad[x][0];
	return x;
}
int son(int x,int y)
{
	int i,j,k;
	for(i=0;dep[y]>dep[x]+1;i++)if((dep[y]-dep[x]-1)&(1<<i))y=dad[y][i];
	return y;
}
int main()
{
	int i,j,k;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&n);
		memset(head,0,sizeof(head));tp=0;
		for(i=1;i<n;i++)
		{
			int x,y;scanf("%d%d",&x,&y);x++;y++;
			next[++tp]=head[x];head[x]=tp;end[tp]=y;
			next[++tp]=head[y];head[y]=tp;end[tp]=x;
		}
		dad[1][0]=0;gs=0;tim=0;dfs(1);
		//puts("ok");
		memset(bit1,0,sizeof(bit1));memset(bit2,0,sizeof(bit2));
		//for(i=1;i<=n;i++)printf("wz[%d]=%d\n",i,wz[i]);
		for(i=2;i<=n;i++)ld[i]=1;
		for(i=1;i<=n;i++)add(wz[i],wz[i],dep[i]);
		scanf("%d",&q);
		while(q--)
		{
			char op[10];int x;
			scanf("%s%d",op,&x);x++;
			if(op[0]=='O')
			{
				++tim;
				for(i=1;;)
				{
					int l=lca(ed[a[i]],x);
					if(ed[a[i]]==x)break;
					else if(l==x)
					{
						int s=son(x,ed[a[i]]);
						a[s]=a[i];
						assert(ld[s]==0);
						add(wz[s],ewz[s],1);ld[s]=1;
						break;
					}
					else if(l==ed[a[i]])
					{
						int s=son(ed[a[i]],x);
						assert(ld[s]==1);
						add(wz[s],ewz[s],-1);ld[s]=0;
						i=s;
					}
					else
					{
						int s1=son(l,ed[a[i]]),s2=son(l,x);
						assert(ld[s1]==0);assert(ld[s2]==1);
						add(wz[s1],ewz[s1],1);ld[s1]=1;
						add(wz[s2],ewz[s2],-1);ld[s2]=0;
						a[s1]=a[i];i=s2;
					}
				}
				a[1]=tim;ed[tim]=x;
			}
			else printf("%.10lf\n",1.0*find(wz[x],ewz[x])/siz[x]);
		}
	}
	return 0;
}