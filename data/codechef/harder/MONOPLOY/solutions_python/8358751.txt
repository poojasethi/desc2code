#include<bits/stdc++.h>
#define N 100010
#define M 400010
#define mod 1000000007
#define ll long long
using namespace std;
char s[5];
int l,ln,n,T,i,x,y,j,m,tot,u;
int v[M],ne[M],sum[M],get[N];
int sz[N],wz[N],cs[N],head[N],dad[N],dfn[N],en[N],top[N];
long long f[N],ans;
void adde(int x,int y){v[++l]=y;ne[l]=head[x];head[x]=l;}
void dfs(int x)
{
	sz[x]=1;cs[x]=cs[dad[x]]+1;
	for(int i=head[x];i;i=ne[i])
		if(v[i]!=dad[x])dad[v[i]]=x,dfs(v[i]),sz[x]+=sz[v[i]];
}
void slpf(int x)
{
	int m1=0;wz[x]=++ln;dfn[ln]=x;
	for(int i=head[x];i;i=ne[i])
		if(sz[v[i]]>sz[m1]&&v[i]!=dad[x])m1=v[i];
	if(m1)top[m1]=top[x],slpf(m1);
	for(int i=head[x];i;i=ne[i])
		if(v[i]!=dad[x]&&v[i]!=m1)top[v[i]]=v[i],slpf(v[i]);
	en[x]=ln;
}
void add(int x,int y){for(;x<=n;x+=x&-x)f[x]+=y;}
long long query(int x){long long y=0;for(;x;x-=x&-x)y+=f[x];return y;}
void change(int x,int y,int l,int r,int cur)
{
	if(l==r){sum[cur]=y;return;}
	int mid=(l+r)>>1;
	if(x<=mid)change(x,y,l,mid,cur<<1);
	else change(x,y,mid+1,r,cur<<1|1);
	sum[cur]=sum[cur<<1]+sum[cur<<1|1];
}
int find(int L,int R,int l,int r,int cur)
{
	if(!sum[cur])return 0;
	if(l==r)return l;
	int mid=(l+r)>>1,ans=0;
	if(R>mid)ans=find(L,R,mid+1,r,cur<<1|1);
	if(ans)return ans;
	if(L<=mid)ans=find(L,R,l,mid,cur<<1);
	return ans;
}
int ask(int L,int R,int l,int r,int cur)
{
	if(l>=L&&R>=r)return sum[cur];
	int mid=(l+r)>>1,ans=0;
	if(R>mid)ans+=ask(L,R,mid+1,r,cur<<1|1);
	if(L<=mid)ans+=ask(L,R,l,mid,cur<<1);
	return ans;
}
int main()
{
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&n);
		l=ln=0;
		memset(f,0,sizeof(f));
		memset(sum,0,sizeof(sum));
		memset(get,0,sizeof(get));
		memset(head,0,sizeof(head));
		for(i=1;i<n;i++)
		{
			scanf("%d%d",&x,&y);
			adde(x+1,y+1);
			adde(y+1,x+1);
		}
		dfs(1);top[1]=1;
		slpf(1);
		for(i=1;i<=n;i++)
		{
			add(wz[i],sz[i]);
			change(wz[i],1,1,n,1);
		}
		scanf("%d",&m);
		while(m--)
		{
			scanf("%s%d",s,&x);x++;
			if(s[0]=='O')
			{
				change(wz[x],1,1,n,1);
				if(get[x])add(wz[get[x]],sz[get[x]]);
				get[x]=0;
				for(;x;x=dad[x])
				{
					if(top[x]!=x)
					for(;y=dfn[find(wz[top[x]],wz[x]-1,1,n,1)];)
					{
						change(wz[y],0,1,n,1);
						if(get[y])add(wz[get[y]],sz[get[y]]);
						get[y]=dfn[wz[y]+1];
						add(wz[get[y]],-sz[get[y]]);
					}
					x=top[x];y=dad[x];
					if(!y)break;
					change(wz[y],1,1,n,1);
					if(get[y])add(wz[get[y]],sz[get[y]]);
					get[y]=x;
					add(wz[get[y]],-sz[get[y]]);
				}
			}
			else
			{
				tot=0;u=x;
				ans=query(en[x])-query(wz[x]);
				for(;x;x=dad[top[x]])
				{
					if(top[x]!=x)
						tot+=ask(wz[top[x]],wz[x]-1,1,n,1);
					if(!dad[top[x]])break;
					tot+=get[dad[top[x]]]!=top[x];
				}
				printf("%.10lf\n",(double)ans/sz[u]+tot);
			}
		}
	}
}