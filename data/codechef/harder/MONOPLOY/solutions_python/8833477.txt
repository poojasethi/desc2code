#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
using namespace std;
typedef long long LL;
inline void readi(int &x);
inline char getc();
const int maxn=100005;
int n,Q;
int head[maxn],adj[maxn*2],next[maxn*2],tot;
int fa[maxn],siz[maxn],dfn[maxn],las[maxn],idx;
int son[maxn];

int tk[maxn];
LL tb[maxn];

inline void add_(const int &x,const int &c)
{
	for(int i=x;i;i^=i&-i)tk[i]+=c;
	for(int i=x+1,t=c*x;i<=n;i+=i&-i)tb[i]+=t;
}

inline void add(const int &l,const int &r,const int &c)
{add_(r,c),add_(l-1,-c);}

inline LL get_(const int &x)
{
	if(!x)return 0;
	int rk=0;LL rb=0;
	for(int i=x;i<=n;i+=i&-i)rk+=tk[i];
	for(int i=x;i;i^=i&-i)rb+=tb[i];
	return (LL)x*rk+rb;
}

inline LL get(const int &l,const int &r)
{return get_(r)-get_(l-1);}

inline void addst(const int &x,const int &c)
{add(dfn[x],las[x],c);}

inline LL getst(const int &x)
{return get(dfn[x],las[x]);}

void addedge(int u,int v)
{tot++;adj[tot]=v;next[tot]=head[u];head[u]=tot;
tot++;adj[tot]=u;next[tot]=head[v];head[v]=tot;}

void tdfs(const int &x)
{
	dfn[x]=++idx;
	siz[x]=1;
	for(int i=head[x];i;i=next[i])
		if(adj[i]!=fa[x])
		{
			fa[adj[i]]=x;
			tdfs(adj[i]);
			siz[x]+=siz[adj[i]];
		}
	las[x]=idx;
}

struct node
{
	node *f,*lc,*rc;
	
	inline bool isroot()
	{return !f||f->lc!=this&&f->rc!=this;}
	
}C[maxn];

inline void rotate(node *x)
{
	node *y=x->f,*z=y->f,*b=x==y->lc?x->rc:x->lc;
	y->f=x,x->f=z;
	if(b)b->f=y;
	if(z)
	{
		if(z->lc==y)z->lc=x;
		else if(z->rc==y)z->rc=x;
	}
	if(y->lc==x)y->lc=b,x->rc=y;
	else y->rc=b,x->lc=y;
}

void splay(node *x)
{
	while(!x->isroot())
	{
		if(x->f->isroot())rotate(x);
		else if((x->f->f->lc==x->f)==(x->f->lc==x))rotate(x->f),rotate(x);
		else rotate(x),rotate(x);
	}
}

void access(node *x)
{
	for(node *p=x,*q=NULL;p;q=p,p=p->f)
	{
		splay(p);
		if(q)
		{
			while(q->lc)q=q->lc;
			splay(q);
			addst(q-C,-1);
		}
		if(son[p-C])
			addst(son[p-C],1);
		son[p-C]=q?q-C:0;
		p->rc=q;
	}
}

void init()
{
	memset(head,0,n+1<<2),tot=1;
	memset(tk,0,n+1<<2),memset(tb,0,n+1<<3);
	readi(n);
	for(int u,v,i=1;i<n;i++)
		readi(u),readi(v),addedge(u+1,v+1);
	idx=0,tdfs(1);
	for(int i=1;i<=n;i++)
	{
		C[i].lc=C[i].rc=C[i].f=NULL;
		son[i]=0;
		if(i>1)
			addst(i,1),C[i].f=C+fa[i];
	}
}

void work()
{
	readi(Q);
	for(int x,qi=1;qi<=Q;qi++)
		if(getc()=='O')
			readi(x),x++,
			access(C+x);
		else
			readi(x),x++,
			printf("%.10lf\n",(double)getst(x)/siz[x]);
}

int main()
{
	int CT;
	for(readi(CT);CT--;)
		init(),
		work();
	return 0;
}

inline void readi(int &x)
{char c;while(c=getchar(),c<'0'||c>'9');
x=c^'0';while(c=getchar(),c>='0'&&c<='9')x=x*10+(c^'0');}
inline char getc()
{char c;while(c=getchar(),c!='O'&&c!='q');return c;}
