#include<stdio.h>
#include<iostream>
#include<string.h>
#include<vector>
#include<queue>
#include<algorithm>
//#include<time.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 2000000007
#define mod 1000000009
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 200010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

#define M 500010
struct node
{
	int ch[26],fail,dep,v;
	void init()
	{
		memset(ch,0,sizeof(ch));
		fail=dep=v=0;
	}
}t[M];
int sz=0;char s[N];
void build(char *s)
{
	sz=0;int i,j,ed=0;t[0].init();t[0].fail=-1;t[0].v=1;
	for(i=0;s[i];i++)
	{
		int j=s[i]-'a';
		int p=++sz;t[p].init();t[p].dep=t[ed].dep+1;t[p].v=1;
		while(ed>=0&&t[ed].ch[j]==0)t[ed].ch[j]=p,ed=t[ed].fail;
		if(ed==-1){ed=p;continue;}
		int q=t[ed].ch[j];
		if(t[q].dep==t[ed].dep+1)t[p].fail=q;
		else
		{
			int r=++sz;t[r]=t[q];t[r].dep=t[ed].dep+1;t[r].v=0;
			t[p].fail=t[q].fail=r;
			while(ed>=0&&t[ed].ch[j]==q)t[ed].ch[j]=r,ed=t[ed].fail;
		}
		ed=p;
	}
}
bool cmp(int i,int j){return t[i].dep>t[j].dep;}
vector<pii> w[N*26];int id[N*26];
void run()
{
	int i,j,k;
	for(i=0;i<=sz;i++)id[i]=i;
	sort(id,id+sz+1,cmp);
	for(k=0;k<sz;k++)
	{
		i=id[k];
		j=t[i].fail;
		t[j].v+=t[i].v;
	}
	for(i=1;i<=sz;i++)
	{
		j=t[i].fail;
		k=t[j].dep+1;
		w[t[i].v].pb(mp(k,t[i].dep));
	}
}
struct Node
{
	int x,y,id;
	bool operator <(const Node&a)const
	{
		return x<a.x;
	}
}a[N*26];
int ans[N*26],f[N];
void add(int x,int v)
{
	while(x<N)f[x]+=v,x+=x&-x;
}
int query(int x)
{
	int ans=0;
	while(x)ans+=f[x],x-=x&-x;
	return ans;
}
int main()
{
	int i,j,k,T,n,m;
	gets(s);
	{
		build(s);run();
		scanf("%d",&n);
		for(i=0;i<n;i++)scanf("%d%d",&a[i].y,&a[i].x),a[i].id=i,ans[i]=0;
		sort(a,a+n);
		for(i=0;i<n;i=j)
		{
			j=i;
			while(j<n&&a[j].x==a[i].x)j++;
			int x=a[i].x;
			if(w[x].size()==0)
			{
				for(k=i;k<j;k++)ans[a[k].id]=0;
				continue;
			}
			for(k=0;k<w[x].size();k++)add(w[x][k].x,1),add(w[x][k].y+1,-1);
			for(k=i;k<j;k++)
			{
				ans[a[k].id]=query(a[k].y);
			}
			for(k=0;k<w[x].size();k++)add(w[x][k].x,-1),add(w[x][k].y+1,1);
		}
		for(i=0;i<n;i++)printf("%d\n",ans[i]);
	}
	return 0;
}