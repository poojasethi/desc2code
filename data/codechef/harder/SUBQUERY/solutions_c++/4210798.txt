#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

#define REP0(i, n) for (int i = 0; i < n; i++)
#define REP1(i, n) for (int i = 1; i <= n; i++)
#define REP(i, l, r) for (int i = l; i <= r; i++)
#define RP(i, r, l) for (int i = r; i >= l; i--)
#define FORE(i, x) for (int i = fi[x]; i != -1; i = e[i].n)

#define MAX_N 510000
#define oo 0x7fffffff
#define PB push_back
#define A first
#define B second
#define MP make_pair

typedef pair < int, int > PT;
int c[MAX_N][26], f[MAX_N], cnt[MAX_N], lv[MAX_N], ans[MAX_N], q[MAX_N];
char str[MAX_N]; vector < PT > g[MAX_N];
int n, m, tot, tail;

inline bool cmp(int x, int y) { return lv[x] > lv[y]; }
void ins(int x, int d)
{
     int p = tail, q = ++tot; lv[tail = q] = d, cnt[q] = 1;
     while (!c[p][x] && p) c[p][x] = q, p = f[p];
     if (!p) { f[q] = 1; return ; }
     int tp = c[p][x], tq;
     if (lv[tp] == lv[p] + 1) { f[q] = tp; return ; }
     tq = ++tot; REP0(i, 26) c[tq][i] = c[tp][i]; f[tq] = f[tp], lv[tq] = lv[p] + 1;
     f[tp] = f[q] = tq; while (p && c[p][x] == tp) c[p][x] = tq, p = f[p];
}

int main(void)
{
    scanf ("%s", str + 1), tot = tail = 1, n = strlen(str + 1); 
    REP1(i, n) ins(str[i] - 'a', i); REP1(i, tot) q[i] = i; sort(q + 1, q + tot + 1, cmp);
    //REP1(i, tot) printf ("%d\n", f[i]); puts("");
    REP1(i, tot) cnt[f[q[i]]] += cnt[q[i]];
    REP(i, 2, tot)
    {
       int l = lv[f[i]] + 1, r = lv[i];
       g[cnt[i]].PB(MP(l, -1)), g[cnt[i]].PB(MP(r, oo));
    }
    scanf ("%d", &m); 
    REP1(i, m) { int x, y; scanf ("%d%d", &x, &y), g[y].PB(MP(x, i)); }
    REP1(i, n)
    {
        sort(g[i].begin(), g[i].end()); int ret = 0;
        REP0(j, g[i].size()) if (g[i][j].B == -1) ret++; else if (g[i][j].B == oo) ret--;
            else ans[g[i][j].B] = ret;
    }
    REP1(i, m) printf ("%d\n", ans[i]);
	return 0;
}
 
