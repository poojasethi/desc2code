//I choose to go die.
#include <cstdio>
#include <algorithm>
#include <memory.h>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
#define rep2(i,x,y) for(int i=x;i>=y;i--)
#define ll long long
ll dp[32][200000],ss,n,q,flag=0;
int v[32],c[31],visit[200000],next[32][200000];
int main()
{
	memset(visit,0,sizeof(visit));
	scanf("%d",&n);
	int tem=1;
	rep(i,1,n)
	{
		scanf("%d%d",&v[i],&c[i]);
		if(v[i]<v[tem])tem=i;
	}
	swap(v[tem],v[1]);
	swap(c[tem],c[1]);
	rep(i,2,n)
		rep2(j,n,i+1)
			if(abs(c[j]-c[1])<abs(c[j-1]-c[1])||abs(c[j]-c[1])==abs(c[j-1]-c[1])&&c[j]<c[j-1])
			{
				swap(c[j],c[j-1]);
				swap(v[j],v[j-1]);
			}
	rep(i,0,n)
		rep(j,0,v[1]-1)
			dp[i][j]=(ll)1e18;
	rep(i,1,n)
		rep(j,0,v[1]-1)
			next[i][j]=(j+v[i])%v[1];
  int k=dp[0][0]=0;
  rep(i,1,n)
  {
		if(c[i]!=c[i-1])
		{
			int j2;
			for(j2=i+1;j2<=n;j2++)
				if(c[j2]!=c[j2-1])break;
			if(c[j2]!=c[j2-1])j2--;
			rep2(j,k,0)
				rep(l,0,v[1]-1)
					rep(k2,i,j2)
						if(dp[j][l]+v[k2]<dp[j+1][next[k2][l]])dp[j+1][next[k2][l]]=dp[j][l]+v[k2];
		  k++;
		}
		rep(j,1,k)
		{
			flag++;
			rep(l,0,v[1]-1)
				if(visit[l]<flag)
				{
					int s=0,now=l,k2=l;
					while(visit[k2]<flag)
					{
						if(dp[j][k2]<dp[j][now])now=k2;
						s++;
						visit[k2]=flag;
						k2=next[i][k2];
					}
					rep(k2,1,s)
					{
						if(dp[j][now]+v[i]<dp[j][next[i][now]])dp[j][next[i][now]]=dp[j][now]+v[i];
						now=next[i][now];
					}
				}
		}
	}
	scanf("%d",&q);
	rep(i,1,q)
	{
		scanf("%lld",&ss);
		int tem=ss%v[1];
		bool tf=true;
		rep2(j,k,1)
			if(dp[j][tem]<=ss)
			{
				printf("%d\n",j);
				tf=false;
				break;
			}
		if(tf)printf("-1\n");
	}
	return 0;
}