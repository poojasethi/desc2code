#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
#ifdef WIN32
	#define Ch64 "%I64d\n"
#else
	#define Ch64 "%lld\n"
#endif
using namespace std;
typedef long long LL;
const int Maxn=100005,MaxL=329;
int n,a[Maxn],N,L;
char st[Maxn];
int s0[MaxL][Maxn];
LL s1[MaxL][Maxn],s2[MaxL][Maxn];
int c0[Maxn];
LL c1[Maxn],c2[Maxn];
int t0[Maxn],t1[Maxn],t2[Maxn],cur=0;
LL ans0[MaxL][MaxL],ans1[MaxL][MaxL],ans2[MaxL][MaxL];

inline int get() {
	char ch;
	while (!isdigit(ch=getchar()));
	int v=ch-48;
	while (isdigit(ch=getchar())) v=v*10+ch-48;
	return v;
}

void init() {
	static int b[Maxn];
	for (int i=1,t=0;i<=n;i++) {
		t^=1<<(st[i]-'a');
		b[i]=a[i]=t;
	}
	sort(b,b+n+1);
	N=unique(b,b+n+1)-b-1;
	for (int i=1;i<=n;i++)
		a[i]=lower_bound(b,b+N+1,a[i])-b;
	L=int(sqrt(n))+1;
	memset(c0,0,(N+1)<<2);
	memset(c1,0,(N+1)<<3);
	memset(c2,0,(N+1)<<3);
	for (int i=1;i<=n;i++) {
		c0[a[i]]++;
		c1[a[i]]+=i;
		c2[a[i]]+=LL(i)*i;
		if (i%L==0) {
			memcpy(s0[i/L],c0,(N+1)<<2);
			memcpy(s1[i/L],c1,(N+1)<<3);
			memcpy(s2[i/L],c2,(N+1)<<3);
		}
	}
	for (int i=1;i<=n;i+=L) {
		memset(c0,0,(N+1)<<2);
		memset(c1,0,(N+1)<<3);
		memset(c2,0,(N+1)<<3);
		LL a0=0,a1=0,a2=0;
		for (int j=i+L-1,k=i;j<=n;j+=L) {
			for (;k<=j;k++) {
				a0+=c0[a[k]];
				a1+=LL(c0[a[k]])*k-c1[a[k]];
				a2+=LL(c0[a[k]])*k*k-2*c1[a[k]]*k+c2[a[k]];
				c0[a[k]]++;
				c1[a[k]]+=k;
				c2[a[k]]+=LL(k)*k;
			}
			ans0[(i-1)/L+1][(j-1)/L+1]=a0;
			ans1[(i-1)/L+1][(j-1)/L+1]=a1;
			ans2[(i-1)/L+1][(j-1)/L+1]=a2;
		}
	}
}

template <int t>
LL query(int x,int y) {
	++cur;
	--x;
	int xi=x==0?1:(x-1)/L+1,yi=(y-1)/L+1;
	int *s0x=s0[xi],*s0y=s0[yi-1];
	LL *s1x=s1[xi],*s1y=s1[yi-1],*s2x=s2[xi],*s2y=s2[yi-1];
	LL ret=t==0?ans0[xi+1][yi-1]:(t==1?ans1[xi+1][yi-1]:ans2[xi+1][yi-1]);
	int cnt0;
	LL cnt1,cnt2;
	if (xi==yi) {
		for (int i=x;i<=y;i++) {
			if (t>=2&&t2[a[i]]!=cur) t2[a[i]]=cur,c2[a[i]]=0;
			if (t>=1&&t1[a[i]]!=cur) t1[a[i]]=cur,c1[a[i]]=0;
			if (t>=0&&t0[a[i]]!=cur) t0[a[i]]=cur,c0[a[i]]=0;
			if (t>=0) cnt0=c0[a[i]];
			if (t>=1) cnt1=c1[a[i]];
			if (t>=2) cnt2=c2[a[i]];
			if (t==2) ret+=LL(cnt0)*i*i-2*cnt1*i+cnt2;
			if (t==1) ret+=LL(cnt0)*i-cnt1;
			if (t==0) ret+=cnt0;
			if (t>=2) c2[a[i]]+=LL(i)*i;
			if (t>=1) c1[a[i]]+=i;
			if (t>=0) c0[a[i]]++;
		}
		return ret;
	}
	for (int i=(yi-1)*L+1;i<=y;i++) {
		if (t>=2&&t2[a[i]]!=cur) t2[a[i]]=cur,c2[a[i]]=0;
		if (t>=1&&t1[a[i]]!=cur) t1[a[i]]=cur,c1[a[i]]=0;
		if (t>=0&&t0[a[i]]!=cur) t0[a[i]]=cur,c0[a[i]]=0;
		if (t>=0) cnt0=s0y[a[i]]-s0x[a[i]]+c0[a[i]];
		if (t>=1) cnt1=s1y[a[i]]-s1x[a[i]]+c1[a[i]];
		if (t>=2) cnt2=s2y[a[i]]-s2x[a[i]]+c2[a[i]];
		if (t==2) ret+=LL(cnt0)*i*i-2*cnt1*i+cnt2;
		if (t==1) ret+=LL(cnt0)*i-cnt1;
		if (t==0) ret+=cnt0;
		if (t>=2) c2[a[i]]+=LL(i)*i;
		if (t>=1) c1[a[i]]+=i;
		if (t>=0) c0[a[i]]++;
	}
	for (int i=xi*L;i>=x;i--) {
		if (t>=2&&t2[a[i]]!=cur) t2[a[i]]=cur,c2[a[i]]=0;
		if (t>=1&&t1[a[i]]!=cur) t1[a[i]]=cur,c1[a[i]]=0;
		if (t>=0&&t0[a[i]]!=cur) t0[a[i]]=cur,c0[a[i]]=0;
		if (t>=0) cnt0=s0y[a[i]]-s0x[a[i]]+c0[a[i]];
		if (t>=1) cnt1=s1y[a[i]]-s1x[a[i]]+c1[a[i]];
		if (t>=2) cnt2=s2y[a[i]]-s2x[a[i]]+c2[a[i]];
		if (t==2) ret+=LL(cnt0)*i*i-2*cnt1*i+cnt2;
		if (t==1) ret+=cnt1-LL(cnt0)*i;
		if (t==0) ret+=cnt0;
		if (t>=2) c2[a[i]]+=LL(i)*i;
		if (t>=1) c1[a[i]]+=i;
		if (t>=0) c0[a[i]]++;
	}
	return ret;
}

int main() {
	for (int T=get();T;T--) {
		scanf(" %s",st+1);
		n=strlen(st+1);
		init();
		LL A=0,B=0;
		for (int q=get();q;q--) {
			int x=(get()+A)%n+1,y=(get()+B)%n+1,t=get();
			if (x>y) swap(x,y);
			LL ans=t==0?query<0>(x,y):(t==1?query<1>(x,y):query<2>(x,y));
			A=B; B=ans;
			printf(Ch64,ans);
		}
	}
	return 0;
}