#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <map>
#include <math.h>
#include <algorithm>
using namespace std;

map <int,int> Hash;

int T,S,Sn,h,n,m,i,j,k,A,B,u,v,c,l,r;
int a[100005],id[100005],L[100005],R[100005];
long long val0[100005],val1[100005],val2[100005];
long long sum0[405][100005],sum1[405][100005],sum2[405][100005];
long long ans,ans0[405][405],ans1[405][405],ans2[405][405];
char s[100005];

void add(int x)
{
	++val0[a[x]];
	val1[a[x]]+=x;
	val2[a[x]]+=(long long)x*x;
}

long long calc(int l,int r,int t)
{
	long long ans=0;
	if(id[l]+1>=id[r])
	{
		add(l-1);
		for(i=l;i<=r;++i)
		{
			if(t==0)ans+=val0[a[i]];
			if(t==1)ans+=val0[a[i]]*i-val1[a[i]];
			if(t==2)ans+=val0[a[i]]*i*i-2*val1[a[i]]*i+val2[a[i]];
			add(i);
		}
		for(i=l-1;i<=r;++i)val0[a[i]]=val1[a[i]]=val2[a[i]]=0;
	}
	else
	{
		if(t==0)ans=ans0[id[l]+1][id[r]-1];
		if(t==1)ans=ans1[id[l]+1][id[r]-1];
		if(t==2)ans=ans2[id[l]+1][id[r]-1];
		
		for(i=R[id[l]]+1;i>=l;--i)
		{
			j=a[i-1];
			val0[j]=sum0[id[r]-1][j]-sum0[id[l]][j];
			val1[j]=sum1[id[r]-1][j]-sum1[id[l]][j];
			val2[j]=sum2[id[r]-1][j]-sum2[id[l]][j];
		}
		for(i=L[id[r]];i<=r;++i)
		{
			j=a[i];
			val0[j]=sum0[id[r]-1][j]-sum0[id[l]][j];
			val1[j]=sum1[id[r]-1][j]-sum1[id[l]][j];
			val2[j]=sum2[id[r]-1][j]-sum2[id[l]][j];
		}
		add(R[id[l]]);
		
		for(i=R[id[l]];i>=l;--i)
		{
			if(t==0)ans+=val0[a[i-1]];
			if(t==1)ans+=-val0[a[i-1]]*(i-1)+val1[a[i-1]];
			if(t==2)ans+=val0[a[i-1]]*(i-1)*(i-1)-2*val1[a[i-1]]*(i-1)+val2[a[i-1]];
			add(i-1);
		}
		for(i=L[id[r]];i<=r;++i)
		{
			if(t==0)ans+=val0[a[i]];
			if(t==1)ans+=val0[a[i]]*i-val1[a[i]];
			if(t==2)ans+=val0[a[i]]*i*i-2*val1[a[i]]*i+val2[a[i]];
			add(i);
		}
		
		for(i=R[id[l]]+1;i>=l;--i)j=a[i-1],val0[j]=val1[j]=val2[j]=0;
		for(i=L[id[r]];i<=r;++i)j=a[i],val0[j]=val1[j]=val2[j]=0;
	}
	return ans;
}

int main()
{
	scanf("%d",&T);
	for(;T;--T)
	{
		h=0;Hash.clear();
		scanf("%s",s+1);n=strlen(s+1);
		a[0]=0;
		for(i=1;i<=n;++i)a[i]=a[i-1]^(1<<s[i]-'a');
		for(i=0;i<=n;++i)
		{
			if(!Hash[a[i]])Hash[a[i]]=++h;
			a[i]=Hash[a[i]];
		}
		S=(int)sqrt(n);Sn=0;
		for(i=1;i<=n;++i)
		{
			if(i%S==1)++Sn;
			id[i]=Sn;
		}
		for(i=1;i<=Sn;++i)L[i]=(i-1)*S+1,R[i]=i*S;
		R[Sn]=n;
		
		for(i=1;i<=Sn;++i)
		{
			add(L[i]-1);
			for(k=i-1,j=L[i];j<=n;++j)
			{
				if(j%S==1)
				{
					++k;
					ans0[i][k]=ans0[i][k-1];
					ans1[i][k]=ans1[i][k-1];
					ans2[i][k]=ans2[i][k-1];
				}
				ans0[i][k]+=val0[a[j]];
				ans1[i][k]+=val0[a[j]]*j-val1[a[j]];
				ans2[i][k]+=val0[a[j]]*j*j-2*val1[a[j]]*j+val2[a[j]];
				add(j);
			}
			for(j=1;j<=h;++j)val0[j]=val1[j]=val2[j]=0;
		}
		for(i=1,k=0;i<=n;++i)
		{
			if(i%S==1)
			{
				++k;
				for(j=1;j<=h;++j)
				{
					sum0[k][j]=sum0[k-1][j];
					sum1[k][j]=sum1[k-1][j];
					sum2[k][j]=sum2[k-1][j];
				}
			}
			j=a[i];
			++sum0[k][j];
			sum1[k][j]+=i;
			sum2[k][j]+=(long long)i*i;
		}
		
		scanf("%d",&m);
		A=B=0;
		for(;m;--m)
		{
			scanf("%d%d%d",&u,&v,&c);
			l=(u+A)%n+1;
			r=(v+B)%n+1;
			if(l>r)swap(l,r);
			ans=calc(l,r,c);
			printf("%lld\n",ans);
			A=B;B=ans%n;
		}
	}
}