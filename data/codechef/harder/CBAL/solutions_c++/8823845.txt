#include <cstdio>
#include <algorithm>
#include <cmath>
#include <memory.h>
#include <cstring>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
#define ll long long
int ar[100010],a1[350][100010],order[100010],ls[100010];
ll sum1[100010],sum2[100010],sum3[100010],ans0[400][400],ans1[400][400],ans2[400][400],a2[350][100010],a3[350][100010],big[100010],b2[100010];
char st[100010];
bool cmp(int a,int b)
{
	return ls[a]<ls[b];
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%s",st+1);
		int n=strlen(st+1);
		ar[0]=0;
		rep(i,1,n)
			ar[i]=ar[i-1]^(1<<(st[i]-'a'));
		rep(i,0,n)
		{
			big[i]=1ll*i*i;
			b2[i]=i*2;
		}
		rep(i,0,n)
		{
			order[i+1]=i+1;
			ls[i+1]=ar[i];
		}
		sort(order+1,order+2+n,cmp);
		int m=0;
		ls[0]=-1;
		order[0]=0;
		rep(i,1,n+1)
		{
			if(ls[order[i]]!=ls[order[i-1]])m++;
			ar[order[i]-1]=m;
		}
		int k=floor(sqrt(n));
		rep(i,1,m)
			sum1[i]=sum2[i]=sum3[i]=0;
		rep(i,0,n)
		{
			sum1[ar[i]]++;
			sum2[ar[i]]+=i;
			sum3[ar[i]]+=big[i];
			if(i==n||(i+1)%k==0)
				rep(j,1,m)
				{
					a1[i/k+1][j]=sum1[j];
					a2[i/k+1][j]=sum2[j];
					a3[i/k+1][j]=sum3[j];
				}
		}
		rep(i,1,n/k+1)
		{
			rep(j,1,m)
				sum1[j]=sum2[j]=sum3[j]=0;
			ans0[i][i-1]=ans1[i][i-1]=ans2[i][i-1]=ans0[i][i]=ans1[i][i]=ans2[i][i]=0;
			int now=i;
			rep(j,(i-1)*k,n)
			{
				ans0[i][now]+=sum1[ar[j]];
				ans1[i][now]+=sum1[ar[j]]*j-sum2[ar[j]];
				ans2[i][now]+=sum1[ar[j]]*big[j]+sum3[ar[j]]-sum2[ar[j]]*b2[j];
				sum1[ar[j]]++;
				sum2[ar[j]]+=j;
				sum3[ar[j]]+=big[j];
				if((j+1)%k==0)
				{
					now++;
					ans0[i][now]=ans0[i][now-1];
					ans1[i][now]=ans1[i][now-1];
					ans2[i][now]=ans2[i][now-1];
				}
			}
		}
		rep(i,1,m)
			sum1[i]=sum2[i]=sum3[i]=0;
		ll a=0,b=0;
		int q;
		scanf("%d",&q);
		while(q--)
		{
			int x,y,z;
			scanf("%d%d%d",&x,&y,&z);
			x=(x+a)%n+1;
			y=(y+b)%n+1;
			if(x>y)swap(x,y);
			ll ans=0;
			x--;
			if(x/k==y/k)
			{
				rep(i,x,y)
				{
					switch(z)
					{
						case 0:{ans+=sum1[ar[i]];break;}
						case 1:{ans+=sum1[ar[i]]*i-sum2[ar[i]];break;}
						case 2:{ans+=sum1[ar[i]]*big[i]+sum3[ar[i]]-sum2[ar[i]]*b2[i];break;}
					}
					sum1[ar[i]]++;
					if(z>0)sum2[ar[i]]+=i;
					if(z==2)sum3[ar[i]]+=big[i];
				}
				rep(i,x,y)
					sum1[ar[i]]=sum2[ar[i]]=sum3[ar[i]]=0;
			}
			else
			{
				int l=x/k+2,r=y/k;
				switch(z)
				{
					case 0:{ans=ans0[l][r];break;}
					case 1:{ans=ans1[l][r];break;}
					case 2:{ans=ans2[l][r];break;}
				}
				rep(i,x,(l-1)*k-1)
				{
					switch(z)
					{
						case 0:{ans+=sum1[ar[i]]+a1[r][ar[i]]-a1[l-1][ar[i]];break;}
						case 1:{ans+=sum1[ar[i]]*i-sum2[ar[i]]+a2[r][ar[i]]-a2[l-1][ar[i]]-1ll*(a1[r][ar[i]]-a1[l-1][ar[i]])*i;break;}
						case 2:{ans+=sum1[ar[i]]*big[i]+sum3[ar[i]]-sum2[ar[i]]*b2[i]+1ll*(a1[r][ar[i]]-a1[l-1][ar[i]])*big[i]+a3[r][ar[i]]-a3[l-1][ar[i]]-(a2[r][ar[i]]-a2[l-1][ar[i]])*b2[i];break;}
					}
					sum1[ar[i]]++;
					if(z>0)sum2[ar[i]]+=i;
					if(z==2)sum3[ar[i]]+=big[i];
				}
				rep(i,r*k,y)
				{
					switch(z)
					{
						case 0:{ans+=sum1[ar[i]]+a1[r][ar[i]]-a1[l-1][ar[i]];break;}
						case 1:{ans+=sum1[ar[i]]*i-sum2[ar[i]]-a2[r][ar[i]]+a2[l-1][ar[i]]+1ll*(a1[r][ar[i]]-a1[l-1][ar[i]])*i;break;}
						case 2:{ans+=sum1[ar[i]]*big[i]+sum3[ar[i]]-sum2[ar[i]]*b2[i]+1ll*(a1[r][ar[i]]-a1[l-1][ar[i]])*big[i]+a3[r][ar[i]]-a3[l-1][ar[i]]-(a2[r][ar[i]]-a2[l-1][ar[i]])*b2[i];break;}
					}
					sum1[ar[i]]++;
					if(z>0)sum2[ar[i]]+=i;
					if(z==2)sum3[ar[i]]+=big[i];
				}			
				rep(i,x,(l-1)*k-1)
					sum1[ar[i]]=sum2[ar[i]]=sum3[ar[i]]=0;	
				rep(i,r*k,y)
					sum1[ar[i]]=sum2[ar[i]]=sum3[ar[i]]=0;	
			}
			printf("%lld\n",ans);
			a=b;
			b=ans;
		}
	}
	return 0;
}
