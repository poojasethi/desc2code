#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<cmath>
#include<map>
#include<vector>
#define bel(x) ((x-1)/S)
#define st(x) (x*S+1)
#define ed(x) ((x+1)*S)
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
const int N=110000;
int S;
LL ans[305][305][3];
LL sum[305][N][3];
char a[N];
int tmp[N];
int val[N];
int M=0;
int n,Q;
LL cnt[N][3];
int tim[N];
int cho=0;
LL solve(int L,int R,int ty){
	LL AB=0;
	if(bel(L)==bel(R)){
		cho++;
		rep(i,L,R){
			if(tim[val[i-1]]^cho){
				tim[val[i-1]]=cho;
				rep(k,0,2)cnt[val[i-1]][k]=0;
			}
			cnt[val[i-1]][0]++;
			cnt[val[i-1]][1]+=1ll*(i-1);
			cnt[val[i-1]][2]+=1ll*(i-1)*(i-1);
			if(tim[val[i]]^cho){
				tim[val[i]]=cho;
				rep(k,0,2)cnt[val[i]][k]=0;
			}
			if(ty==0)AB+=cnt[val[i]][0];
			if(ty==1)AB+=cnt[val[i]][0]*1ll*i-cnt[val[i]][1];
			if(ty==2)AB+=cnt[val[i]][0]*1ll*i*i-2ll*i*cnt[val[i]][1]+cnt[val[i]][2];
			//printf("for %d %I64d\n",i,AB);
		}
		return AB;
	}
	AB=ans[bel(L)+1][bel(R)-1][ty];
	cho++;
	rep(i,L,ed(bel(L))){
		if(tim[val[i-1]]^cho){
			tim[val[i-1]]=cho;
			rep(k,0,2)cnt[val[i-1]][k]=0;
		}
		cnt[val[i-1]][0]++;
		cnt[val[i-1]][1]+=1ll*(i-1);
		cnt[val[i-1]][2]+=1ll*(i-1)*(i-1);
		if(tim[val[i]]^cho){
				tim[val[i]]=cho;
				rep(k,0,2)cnt[val[i]][k]=0;
			}
		if(ty==0)AB+=cnt[val[i]][0];
		if(ty==1)AB+=cnt[val[i]][0]*1ll*i-cnt[val[i]][1];
		if(ty==2)AB+=cnt[val[i]][0]*1ll*i*i-2ll*i*cnt[val[i]][1]+cnt[val[i]][2];
	}
	rep(i,st(bel(R)),R){
		if(tim[val[i-1]]^cho){
			tim[val[i-1]]=cho;
			rep(k,0,2)cnt[val[i-1]][k]=0;
		}
		cnt[val[i-1]][0]++;
		cnt[val[i-1]][1]+=1ll*(i-1);
		cnt[val[i-1]][2]+=1ll*(i-1)*(i-1);
		if(tim[val[i]]^cho){
				tim[val[i]]=cho;
				rep(k,0,2)cnt[val[i]][k]=0;
			}
		if(ty==0)AB+=cnt[val[i]][0];
		if(ty==1)AB+=cnt[val[i]][0]*1ll*i-cnt[val[i]][1];
		if(ty==2)AB+=cnt[val[i]][0]*1ll*i*i-2ll*i*cnt[val[i]][1]+cnt[val[i]][2];
	}
	int GG=bel(R)-1;
	int BB=bel(L);
	rep(i,st(bel(R)),R){
		if(ty==0)AB+=sum[GG][val[i]][0]-sum[BB][val[i]][0];
		if(ty==1)AB+=(sum[GG][val[i]][0]-sum[BB][val[i]][0])*1ll*i-(sum[GG][val[i]][1]-sum[BB][val[i]][1]);
		if(ty==2)AB+=(sum[GG][val[i]][0]-sum[BB][val[i]][0])*1ll*i*i-2ll*i*(sum[GG][val[i]][1]-sum[BB][val[i]][1])+(sum[GG][val[i]][2]-sum[BB][val[i]][2]);
	}
	rep(i,L,ed(bel(L))){
		LL x0=sum[GG][val[i-1]][0]-sum[BB][val[i-1]][0];
		LL x1=sum[GG][val[i-1]][1]-sum[BB][val[i-1]][1];
		LL x2=sum[GG][val[i-1]][2]-sum[BB][val[i-1]][2];
		if(val[ed(bel(L))]==val[i-1]){
			x0-=1;
			x1-=ed(bel(L))*1ll;
			x2-=ed(bel(L))*1ll*ed(bel(L));
		}
		if(val[st(bel(R))-1]==val[i-1]){
			x0+=1;
			x1+=1ll*(st(bel(R))-1);
			x2+=1ll*(st(bel(R))-1)*(st(bel(R))-1);
		}
		if(ty==0)AB+=x0;
		if(ty==1)AB+=x1-(i-1)*1ll*x0;
		if(ty==2)AB+=x2-2ll*x1*(i-1)+(i-1)*1ll*(i-1)*x0;
	}
	return AB;
}
void MY_FOLLOW_BROTHERS(){
	scanf("%s",a+1);n=strlen(a+1);scanf("%d",&Q);
	S=min(((int)sqrt(n))+2,350);
	while(n/S>=300)S++;
	if(S>n)S=n;
	rep(i,0,bel(n))rep(j,0,bel(n))rep(k,0,2)ans[i][j][k]=0;
	rep(i,0,bel(n))rep(j,0,n)rep(k,0,2)sum[i][j][k]=0;
	M=0;int now=0;tmp[++M]=now;
	rep(i,1,n){
		now^=(1<<(a[i]-'a'));
		tmp[++M]=now;
	}
	sort(tmp+1,tmp+1+M);
	M=unique(tmp+1,tmp+1+M)-tmp-1;
	now=0;val[0]=1;
	rep(i,1,n){
		now^=(1<<(a[i]-'a'));
		val[i]=lower_bound(tmp+1,tmp+1+M,now)-tmp;
		//printf("__%d %d\n",i,val[i]);
	}
	rep(i,1,n)rep(k,0,2)cnt[i][k]=tim[i]=cho=0;
	rep(i,0,bel(n)){
		++cho;
		rep(j,i,bel(n)){
			rep(k,st(j),ed(j)){
				if(tim[val[k-1]]^cho){
					tim[val[k-1]]=cho;
					rep(v,0,2)cnt[val[k-1]][v]=0;
				}
				cnt[val[k-1]][0]+=1;
				cnt[val[k-1]][1]+=1ll*(k-1);
				cnt[val[k-1]][2]+=(k-1)*1ll*(k-1);
				if(tim[val[k]]^cho){
				tim[val[k]]=cho;
				rep(v,0,2)cnt[val[k]][v]=0;
			}
				ans[i][j][0]+=cnt[val[k]][0];
				ans[i][j][1]+=cnt[val[k]][0]*1ll*k-cnt[val[k]][1];
				ans[i][j][2]+=cnt[val[k]][0]*1ll*k*k-2ll*k*cnt[val[k]][1]+cnt[val[k]][2];
			}
			if(j){
				rep(v,0,2)ans[i][j][v]+=ans[i][j-1][v];
			}
		}
	}
	rep(i,0,bel(n)){
		if(i){
			rep(j,0,M)rep(k,0,2)sum[i][j][k]=sum[i-1][j][k];
		}
		rep(j,st(i),ed(i)){
			sum[i][val[j-1]][0]++;
			sum[i][val[j-1]][1]+=1ll*(j-1);
			sum[i][val[j-1]][2]+=(j-1)*1ll*(j-1);
		}
	}
	LL A=0;LL B=0;
	while(Q--){
		int x,y,ty;
		scanf("%d%d%d",&x,&y,&ty);
		int L=(x+A)%n+1;
		int R=(y+B)%n+1;
		if(L>R)swap(L,R);
		//printf("__%d %d %d %d\n",L,R,S,ty);
		LL AA=solve(L,R,ty);
		A=B;
		B=AA;
		printf("%lld\n",AA);
	}
}
int main(){
	int T;scanf("%d",&T);
	while(T--)MY_FOLLOW_BROTHERS();
	return 0;
}

