N,K = map(int, raw_input().split())

##L = sorted(set(map(int, raw_input().split())))
##
##cmax = 0
##
##cur_index = 0
##cur_val = L[cur_index]
###import time
##while 1:
##    #print "loop,",L
##    if cur_index == len(L)-1:
##        break
##    j = cur_index
##    cur_count = 1
##    loop_val = L[j]
##    L[j]=0
##    #print "{} {} {}".format(j, loop_val, cur_val)
##    while j < len(L)-1:
##        if L[j+1] != 0:
##            if L[j+1]-loop_val >= K:
##                loop_val = L[j+1]
##                cur_count += 1
##                L[j+1] = 0
##        j += 1
##    #print "cur count {}\n".format(cur_count)
##    if cur_count > cmax: cmax = cur_count
##    for i in xrange(cur_index+1,len(L)):
##        if L[i] != 0:
##            cur_index = i
##            cur_val = L[i]
##            break
##        cur_index = len(L)-1
##    #time.sleep(5)
##print cmax

#Trying to optimize
L = [0]*10000001
MIN, MAX = 10000001, 0
c_ind = 0
S = map(int, raw_input().split())
for c in S:
    if c>MAX: MAX = c
    if c < MIN: MIN = c
    L[c] = 1
#print 'reached'
i = MIN
count = 0
while i <= MAX:
    if L[i] == 1:
        count += 1
        i += K
    else:
        i += 1
print count
