#include <bits/stdc++.h>

using namespace std;

#define sd(x) scanf("%d",&x)
#define ULL unsigned long long
#define LD long double
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define Fill(a, b) memset(a, b, sizeof(a))
#define INF 1000000009

typedef pair<int,int> PII;
typedef vector<int> VI;

#define M 320
#define N 112345

ULL bit[N];
ULL arr[N];
ULL funcSum[M];
ULL times[M][N];
PII limits[N];

void update(int idx,ULL x)
{
	while(idx<N)
	{
		bit[idx]+=x;
		idx+=idx&(-idx);
	}
}

ULL query(int idx)
{
	ULL sum=0;
	while(idx)
	{
		sum+=bit[idx];
		idx-=idx&(-idx);
	}
	return sum;
}

void solve()
{
	ULL n,q,t;
	ULL a,b,l,r;
	//printf("%d\n",3%1);
	scanf("%llu",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%llu",&arr[i]);
		update(i,arr[i]);
	}
	int idx=0;
	for(int i=1;i<=n;i++)
	{
		scanf("%llu%llu",&a,&b);
		funcSum[idx]+=query(b)-query(a-1);
		times[idx][a]+=1;
		times[idx][b+1]-=1;
		limits[i]=MP(a,b);
		if(i%M==0)
			idx++;
	}
	for(int i=0;i<=idx;i++)
	{
		for(int j=1;j<=n;j++)
		{
			times[i][j]+=times[i][j-1];
		}
	}
	/*printf("arr:-\n");
	for(int i=1;i<=n;i++)
	{
		printf("%d ",arr[i]);
	}
	printf("\n");
	printf("funcSum:-\n");
	for(int i=0;i<=idx;i++)
	{
		printf("%lld ",funcSum[i]);
	}
	printf("\n");
	printf("times:-\n");
	for(int i=0;i<=idx;i++)
	{
		for(int j=1;j<=n;j++)
		{
			printf("%d ",times[i][j]);
		}
		printf("\n");
	}
	printf("\n");
	printf("limits:-\n");
	for(int i=1;i<=n;i++)
	{
		printf("%d %d %d\n",i,limits[i].F,limits[i].S);
	}*/
	scanf("%llu",&q);
	while(q--)
	{
		scanf("%llu%llu%llu",&t,&a,&b);
		if(t==1)
		{
			update(a,b-arr[a]);
			for(int i=0;i<=idx;i++)
			{
				//printf("funcSum[%d] changing from %lld to ",i,funcSum[i]);
				funcSum[i]=funcSum[i]+(b-arr[a])*times[i][a];
				//printf("%lld\n",funcSum[i]);
			}
			arr[a]=b;
		}
		else
		{
			l=(a-1)/M;
			r=(b-1)/M;
			ULL ans = 0;
			//printf("%d %d\n",l,r);
			for(int i=l;i<=r;i++)
			{
				ans+=funcSum[i];
				//printf("Ans after block %d = %lld\n",i,ans);
			}
			//printf("Temp ans after full blocks:-%lld\n",ans);
			for(int i=l*M+1;i<a;i++)
			{
				ans-=query(limits[i].S)-query(limits[i].F-1);
				//printf("Ans after removing %d = %lld\n",i,ans);
			}
			//printf("Temp ans after removing extra starting elements:-%lld\n",ans);
			for(int i=b+1;i<=min(r*M+M,n);i++)
			{
				//printf("%d\n",i);
				ans-=query(limits[i].S)-query(limits[i].F-1);
				//printf("%d\n",i);
				//printf("Ans after removing %d = %lld\n",i,ans);
			}
			printf("%llu\n",ans);
		}
	}
}

int main()
{
	//freopen("in2.txt","r",stdin);
	//freopen("out2.txt","w",stdout);
	int t=1;
	//scanf("%d",&t);
	for(int i=1;i<=t;i++)
	{
		//printf("Case #%d:\n",i);
		solve();
	}
}