#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<assert.h>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
LL P;LL G;LL C;
LL Pow(LL a,LL b){
	LL c=1;
	for(;b;b>>=1,a=a*a%P)if(b&1)c=c*a%P;
	return c;
}
LL yue[250000];
void findroot(){
	int tt=0;
	LL x=P-1;
	for(LL i=2;i*i<=x;i++)if(x%i==0){
		yue[++tt]=i;
		yue[++tt]=x/i;
	}
	for(G=2;;G++){
		bool flag=1;
		rep(i,1,tt)flag&=(Pow(G,(P-1)/yue[i])!=1);
		if(flag)break;
	}
}
namespace BSGS{
	const LL mo=1111;
	int S;
	int head[250000];int np[250000];LL val[250000];int p[250000];int tot;
	void insert(LL gg,int pos){
		++tot;val[tot]=gg;p[tot]=pos;
		np[tot]=head[gg%mo];head[gg%mo]=tot;
	}
	void init(){
		rep(i,1,tot){
			np[i]=p[i]=0;
			head[val[i]%mo]=0;
			val[i]=0;
		}
		tot=0;
	}
	void mk(){
		S=1;while(S*S<=P)S++;
		LL vv=1;
		rep(i,0,S-1){
			insert(vv,i);
			vv=vv*G%P;
		}
	}
	LL find(LL x,LL bit){
		//if(x<0)return -1;
		LL vv=Pow(Pow(G,S),P-2);
		rep(i,0,P/S){
			LL gt=-1;
			
			for(int u=head[x%mo];u;u=np[u])
			if(val[u]==x)
			if(!(bit==0&&((p[u]+i*S)%2==1)))
			if(!(bit==1&&((p[u]+i*S)%2==0)))
			if(gt==-1||p[u]+i*S<gt)
			gt=p[u]+i*S;
		
		
			if(gt!=-1)return gt;
			
			x=x*vv%P;
		}
		return -1;
	}
};
LL sqrt5;
void Main(){
	scanf("%lld%lld",&C,&P);
	if(C==0){
		printf("0\n");
		return;
	}
	findroot();
	BSGS::init();
	BSGS::mk();
	LL ss=BSGS::find(5,2);
	//assert((ss&1)==0);
	ss/=2ll;
	sqrt5=Pow(G,ss);
	//printf("sqrt5=%I64d\n",sqrt5);
	C=C*sqrt5%P;
	//if(C<0)return ;
	LL delta=(C*C%P+4)%P;
	LL delta2=(C*C%P+P-4)%P;
	//printf("%I64d %I64d\n",delta,C);
	LL rr=BSGS::find(delta,2);
	LL rr1=BSGS::find(delta2,2);
	//assert(rr>=0);
	//assert(rr1>=0);
	LL ab=-1;
	if(rr%2==0||rr==-1){
		if(rr>=0)delta=Pow(G,rr/2);else delta=0;
		LL jie=((C+delta)%P)*Pow(2,P-2)%P;
		
		G=(sqrt5+1ll)*Pow(2,P-2)%P;
		BSGS::init();
		BSGS::mk();
	
		LL ans=BSGS::find(jie,0);
		jie=((C+P-delta)%P)*Pow(2,P-2)%P;
		LL ans1=BSGS::find(jie,0);
		if(ans==-1)ans=ans1;
		else if(ans1!=-1&&ans1<ans)ans=ans1;
		ab=ans;
	}
	if(rr1%2==0||rr1==-1){
		findroot();
		if(rr1>=0)delta=Pow(G,rr1/2);else delta=0;
		LL jie=((C+delta)%P)*Pow(2,P-2)%P;
		
		G=(sqrt5+1)*Pow(2,P-2)%P;
		BSGS::init();
		BSGS::mk();
		
		LL ans=BSGS::find(jie,1);
		
		jie=((C+P-delta)%P)*Pow(2,P-2)%P;
		LL ans1=BSGS::find(jie,1);
		
		if(ans==-1)ans=ans1;
		else if(ans1!=-1&&ans1<ans)ans=ans1;
		if(ab==-1)ab=ans;
		else if(ans!=-1&&ans<ab)ab=ans;
	}
	printf("%lld\n",ab);
}
int main(){
	int T;scanf("%d",&T);
	while(T--)Main();
	return 0;
}


