#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}


class cipolla{
	private:
		int d,pp;
		struct num{int a,b;};//a+bsqrt(d)
		num mul(const num &a,const num &b){
			int p=(1ll*a.a*b.a+1ll*d*a.b%pp*b.b)%pp;
			int q=(1ll*a.a*b.b+1ll*a.b*b.a)%pp;
			return (num){p,q};
		}
		num num_qp(num a,int b){num ans;ans=(num){1,0};do{if(b&1)ans=mul(ans,a);a=mul(a,a);}while(b>>=1);return ans;}
		int qp(int a,int b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
	public:
		int solve(int n,int p){// p >=3 prime
			pp=p;n%=p;
			if(n==0)return 0;
			if(qp(n,(p-1)/2,p)!=1)return -1;
			int a;
			for (a=0;;a++){
				d=(1ll*a*a-n)%p;
				if(d<0)d+=p;
				if(d==0)return a;
				if(qp(d,(p-1)/2,p)==p-1)break;
			}
			num cur;cur=(num){a,1};
			cur=num_qp(cur,(p+1)/2);
			return cur.a;
		}
}my;


class bsgs{
#define SZ 100000
#define MO 10007
	struct ha{
		int S[SZ],V[SZ],nex[SZ];
		int head[MO];
		int tot;
		void cl(){
			/*memset(S,0,sizeof(S));
			memset(V,0,sizeof(V));
			memset(nex,0,sizeof(nex));*/
			memset(head,-1,sizeof(head));
			tot=0;
		}
		int push(int s,int v=0){
			for (int i=head[s%MO];~i;i=nex[i])
				if(S[i]==s)return V[i];
			S[tot]=s;V[tot]=v;nex[tot]=head[s%MO];head[s%MO]=tot++;
			return v;
		}
	}h;
	int po(int a,int b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
	public:
	int solve(int b,int n,int p){
		b%=p;n%=p;
		int m=int(sqrt(1.0*p))+1;
		h.cl();
		int ans=2147483647;
		int cur=1,bm=po(b,m,p);
		for (int i=1;i<=m;i++){
			cur=1ll*cur*bm%p;
			h.push(cur,i);
		}
		int tmp;cur=n;
		for (int j=1;j<=m;j++){
			cur=1ll*cur*b%p;
			if(tmp=h.push(cur))ans=min(ans,tmp*m-j);
		}
		if(ans==2147483647)return -1;
		else return ans;
	}
}bs;
int c,p;
#define inf 10000000000000000ll
int main()
{
	int tes;scanf("%d",&tes);
	while(tes--){
		scanf("%d%d",&c,&p);
		int rr5=my.solve(5,p);
		int r5=1ll*(1+rr5)*qp(2,p-2,p)%p;
		int r52=1ll*r5*r5%p;
		int y=1ll*rr5*c%p;
		ll ans=inf,t;

		int d,x;


		d=my.solve(((1ll*y*y-4)%p+p)%p,p);
		if(d!=-1){
			x=(1ll*y+d)*qp(2,p-2,p)%p;
			x=1ll*x*qp(r5,p-2,p)%p;
			t=bs.solve(r52,x,p);if(t!=-1)ans=min(ans,t*2+1);
		}

		d=my.solve(((1ll*y*y-4)%p+p)%p,p);
		if(d!=-1){
			x=((1ll*y-d)*qp(2,p-2,p)%p+p)%p;
			x=1ll*x*qp(r5,p-2,p)%p;
			t=bs.solve(r52,x,p);if(t!=-1)ans=min(ans,t*2+1);
		}

		d=my.solve(((1ll*y*y+4)%p+p)%p,p);
		if(d!=-1){
			x=(1ll*y+d)*qp(2,p-2,p)%p;
			t=bs.solve(r52,x,p);if(t!=-1)ans=min(ans,t*2);
		}

		d=my.solve(((1ll*y*y+4)%p+p)%p,p);
		if(d!=-1){
			x=((1ll*y-d)*qp(2,p-2,p)%p+p)%p;
			t=bs.solve(r52,x,p);if(t!=-1)ans=min(ans,t*2);
		}

		if(ans!=inf){
			cout<<ans<<endl;
		}else{
			printf("-1\n");
		}
	}
	return 0;
}
