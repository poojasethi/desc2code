#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef long double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

int n,m;
struct edge{
	int v,next,w;
}e[1111];int g[222];
int etot;
void ae(int u,int v,int w){
	e[etot].v=v;e[etot].next=g[u];e[etot].w=w;g[u]=etot++;
}
int ans;
int d[222];
int qu[222],pre[222];
vector<int>dd;
int dis[222][222];
int fa[222];
int wsu[222];
int mlen[222],mw[222],smlen[222],sw[222];
#define inf 100000000

void bfs2(int rt){
	mlen[rt]=smlen[rt]=inf;
	for (int u=1;u<=n;u++){
		d[u]=inf;
		fa[u]=0;
		pre[u]=0;
	}
	int p=0,q=0;
	qu[q++]=rt;d[rt]=0;
	wsu[rt]=0;
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next){
			if(d[u]+1<d[e[i].v]){
				d[e[i].v]=d[u]+1;
				pre[e[i].v]=u;
				qu[q++]=e[i].v;
				if(u==rt)fa[e[i].v]=e[i].w;
				else fa[e[i].v]=fa[u];
				wsu[e[i].v]=wsu[u]+e[i].w;
			}else if(e[i].v!=pre[u]){
				if(fa[u]!=fa[e[i].v]){
					int cir=wsu[u]+wsu[e[i].v]+e[i].w;
					int len=d[u]+d[e[i].v]+1;
					if(cir==mw[rt] || cir==sw[rt])continue;
					if(len<mlen[rt]){
						smlen[rt]=mlen[rt];
						sw[rt]=mw[rt];
						mlen[rt]=len;
						mw[rt]=cir;
					}else if(len<smlen[rt]){
						smlen[rt]=len;
						sw[rt]=cir;
					}
				}
			}
		}
	}
	for (int i=1;i<=n;i++)dis[rt][i]=d[i];
}


void bfs(int rt,int t){
	dd.clear();
	for (int u=1;u<=n;u++){
		d[u]=inf;
		fa[u]=0;
		pre[u]=0;
	}
	int p=0,q=0;
	qu[q++]=rt;d[rt]=0;
	while(p!=q){
		int u=qu[p++];
		if(u==t)continue;
		for (int i=g[u];~i;i=e[i].next){
			if(d[u]+1<d[e[i].v]){
				d[e[i].v]=d[u]+1;
				pre[e[i].v]=u;
				qu[q++]=e[i].v;
			}if(e[i].v==t){
				dd.push_back(d[u]+1);
			}
		}
	}
	if(dd.size()>=3){
		ans=min(ans,dd[0]+dd[1]+dd[2]);
	}
}
int main()
{
	int tes;
	scanf("%d",&tes);
	while(tes--){
		etot=0;memset(g,-1,sizeof(g));
		gn(n);gn(m);
		ans=m+1;
		while(m--){
			int w=rand()<<16|rand();
			int u,v;
			gn(u);gn(v);
			ae(u,v,w);
			ae(v,u,w);
		}
		int cl=clock();
		for (int u=1;u<=n;u++)bfs2(u);
		//printf("%d\n",clock()-cl);cl=clock();
		for (int u=1;u<=n;u++)
			for (int v=u+1;v<=n;v++)bfs(u,v);
		//printf("%d\n",clock()-cl);cl=clock();
		for (int u=1;u<=n;u++)
			for (int v=u+1;v<=n;v++){
				if(mw[u]!=mw[v])ans=min(ans,mlen[u]+dis[u][v]+mlen[v]);
			}
		for (int u=1;u<=n;u++)
			ans=min(ans,mlen[u]+smlen[u]);
		printf("%d\n",ans-1);
	}
	return 0;
}
