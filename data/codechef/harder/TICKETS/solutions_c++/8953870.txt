#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	1005
#define INF	(1<<30)
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T,N,M,D,X[n],Y[n],st[n];
int		Tim,F[n],Q[n],V[n],G[n],Dis[n];

struct	Lin{int v,next;}E[n];

void	Link(int u,int v){
		E[++D]=(Lin){v,st[u]};	st[u]=D;
		E[++D]=(Lin){u,st[v]};	st[v]=D;
}

int		BFS(int S,int T){
		int Ans=0,cnt=3;
		For(i,1,N)	Dis[i]=INF;	Dis[Q[1]=S]=0;
		for	(int l=0,r=1;l<r;){
			int u=Q[++l];
			for	(int i=st[u],v;i;i=E[i].next)
			if	(Dis[u]+1<Dis[v=E[i].v]){
				if	(v==T)	{
					Ans+=Dis[u]+1;
					if	(!(--cnt))	return	Ans-1;
				}	else	Dis[Q[++r]=v]=Dis[u]+1;
			}
		}
		return	INF;
}

void	Work(int S){
		For(i,1,M)	G[i]=0;
		For(i,1,N)	Dis[i]=INF,F[i]=0;	Dis[Q[1]=S]=0;

		for	(int l=0,r=1;l<r;){
			int u=Q[++l];
			for	(int i=st[u],v;i;i=E[i].next)
			if	(Dis[u]+1<Dis[v=E[i].v])
				Dis[Q[++r]=v]=Dis[u]+1,F[v]=u,G[i>>1]=1;
		}
}

int		Up(int x){
		int ret=0;
		for	(;x&&V[x]!=Tim;x=F[x])	ret++,V[x]=Tim;
		return	ret;
}

int		main(){
		scanf("%d",&T);
		for	(;T--;)	{
			scanf("%d%d",&N,&M);	D=1;
			For(i,1,N)	st[i]=0;
			For(i,1,M)	scanf("%d%d",&X[i],&Y[i]),Link(X[i],Y[i]);

			int Ans=M;
			For(i,1,N)	For(j,i+1,N)	Ans=min(Ans,BFS(i,j));
			For(i,1,N)	{
				Work(i);	int x=INF,y=INF;
				For(j,1,M)	if	(!G[j]&&Dis[X[j]]<INF){
					Tim++;	int ret=Up(X[j])+Up(Y[j]);
					if	(ret<x)	y=x,x=ret;
						else	y=min(y,ret);
				}	Ans=min(Ans,x+y-1);
			}
			printf("%d\n",Ans);
		}
}