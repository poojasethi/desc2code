#include<cstdio>
#include<ctime>
#include<cstring>
#include<map>
#include<vector>
#include<algorithm>
using namespace std;

int A[100],w[100];
pair<long long,int> Q[10000];
int mult[65][65];
long long res[45];
pair<long long,int> T1[200000],T2[200000],tmp[200000];
map<vector<int>,vector<pair<long long,int> > > hash;

void add(pair<long long,int> &X,pair<long long,int> *Y,int &YN)
{
    if (YN)
    {
        if (X.first==Y[YN-1].first) Y[YN-1].second+=X.second;
        else
        {
            if (!Y[YN-1].second) Y[YN-1]=X;
            else Y[YN++]=X;
        }
    } else Y[YN++]=X;
}

void work(int A[],pair<long long,int> Q[],int QN)
{
    int XN,YN,ZN;
    pair<long long,int> *X=T1;
    pair<long long,int> *Y=T2,*Z;
    X[0]=make_pair(1,1);
    XN=1;
    long long oo=Q[QN-1].first;

    for (int i=1;i<=A[0];i++)
    {
        int tot=0;
        for (int j=0;j<XN;j++)
        {
            long long w=X[j].first*mult[A[i]][X[j].first%A[i]];
            if (w<=oo) tmp[tot++]=make_pair(w,X[j].second*-1);
        }
        sort(tmp,tmp+tot);
        YN=0;
        int a=0,b=0;
        for (;a<XN && b<tot;)
        if (X[a].first<=tmp[b].first)
            add(X[a++],Y,YN);
        else add(tmp[b++],Y,YN);
        for (;a<XN;a++) add(X[a],Y,YN);
        for (;b<tot;b++) add(tmp[b],Y,YN);        
        if (YN && !Y[YN-1].second) YN--;
        swap(X,Y);XN=YN;
    }
    for (int i=0,j=0;i<XN;i++)
    {
        while (Q[j].first<X[i].first) j++;
        for (int k=j;k<QN;k++) res[Q[k].second]+=X[i].second*(Q[k].first/X[i].first);
    }    
}

int main()
{
    for (int i=1;i<=60;i++)
        for (int j=0;j<i;j++)
            mult[i][j]=i/__gcd(i,j);
    int Test;
    long long X[45],B[45];
    scanf("%d",&Test);
    for (int i=0;i<Test;i++)
        scanf("%lld%lld",&B[i],&X[i]);
    for (int k=0;k<Test;k++)
    for (int i=1;i<X[k];i++)
    {
        int ix=i/__gcd(X[k],(long long)i);
        long long m=B[k]*__gcd((long long)i,X[k])/X[k];
        w[0]=A[0]=0;
        for (int d=i+1;d<X[k];d++) w[++w[0]]=d/__gcd((long long)d,X[k]*ix);
        sort(w+1,w+1+w[0]);
        vector<int> V;
        for (int u=1;u<=w[0];u++)
        {
            A[++A[0]]=w[u];
            for (int l=1;l<u;l++)
            if (w[u]%w[l]==0)
            {
                A[0]--;break;
            }
        }
        for (int j=1;j<=A[0];j++) V.push_back(A[j]);
        hash[V].push_back(make_pair(m,k));
    }
    
    for (map<vector<int>,vector<pair<long long,int> > > :: iterator it=hash.begin();it!=hash.end();it++)
    {
        A[0]=(it->first).size();
        for (int i=0;i<A[0];i++) A[i+1]=(it->first)[i];
        int QN=(it->second).size();
        for (int i=0;i<QN;i++) Q[i]=(it->second)[i];
        sort(Q,Q+QN);
        work(A,Q,QN);
    }
    for (int i=0;i<Test;i++)
    printf("%lld\n",res[i]);
}
