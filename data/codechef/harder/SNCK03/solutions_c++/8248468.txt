 #include<cstdio>
    #include<cstring>
    #include<cassert>
    #define MOD 1000000007
    int test,n,k,fac[20005],inver_fac[20005],a[25],F[25][25][20005];
    inline int pow(int a,int n)
    {
    int ans=1,tmp=a;
    for (;n;n>>=1)
    {
    if (n&1) ans=((long long)ans*tmp)%MOD;
    tmp=((long long)tmp*tmp)%MOD;
    }
    return ans;
    }
    inline void Prepare()
    {
    fac[0]=1;
    inver_fac[0]=pow(fac[0],MOD-2);
    for (int i=1;i<=20000;++i)
    {
    fac[i]=(long long)fac[i-1]*i%MOD;
    inver_fac[i]=pow(fac[i],MOD-2);
    }
    }
    inline int Combination(int n,int m)
    {
    assert(m<=n);
    assert(n<=20000 && m<=20000);
    if (!m || !n) return 1;
    int tmp=(long long)fac[n]*inver_fac[m]%MOD;
    return (long long)tmp*inver_fac[n-m]%MOD;
    }
    inline void Go(int l,int r,int occ)
    {
    assert(1<=l && l<n && 1<r && r<=n && l<r);
    if (F[l][r][occ]!=-1) return;
    int &res=F[l][r][occ];
    res=0;
    if (l+1==r)
    {
    res=1;
    return;
    }
    int tot=a[r]-a[l]+1-1-occ-(l!=1)-(r!=k);
    if ((l&1)==(r&1))
    {
    for (int m=l+1;m<r;m+=2)
    {
    int p=a[m]-a[l]+1-1-occ-(l!=1);
    int A=Combination(tot,p);
    Go(l,m,occ);
    Go(m,r,0);
    int B=F[l][m][occ],C=F[m][r][0];
    res+=((long long)A*B%MOD*(long long)C)%MOD;
    res%=MOD;
    }
    }
    else
    {
    for (int m=l+2;m<r;m+=2)
    {
    int p=a[m]-a[l]+1-1-occ-(l!=1);
    int A=Combination(tot,p);
    Go(l,m,occ);
    Go(m,r,0);
    int B=F[l][m][occ],C=F[m][r][0];
    res+=((long long)A*B%MOD*(long long)C)%MOD;
    res%=MOD;
    }
    assert(l+1<=n);
    if (a[l]+occ+(l!=1)<a[l+1])
    {
    Go(l,r,occ+1);
    res+=F[l][r][occ+1];
    res%=MOD;
    }
    }
    }
    int main()
    {
    Prepare();
    for (scanf("%d",&test);test--;)
    {
    scanf("%d%d",&n,&k);
    assert(1<=n && n<=20000 && 1<=k && k<=22 && k<=n);
    for (int i=1;i<=k;++i)
    {
    scanf("%d",&a[i]);
    assert(1<=a[i] && a[i]<=n);
    if (i>1) assert(a[i]>a[i-1]);
    }
    for (int i=1;i<=k;++i)
    for (int j=i+1;j<=k;++j)
    for (int p=0;p<=a[j]-a[i]+1;++p) F[i][j][p]=-1;
    Go(1,k,0);
    printf("%d\n",F[1][k][0]);
    }
    return 0;
    }  