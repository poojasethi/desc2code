#include<stdio.h>
#include<stdlib.h>
#include<time.h>
#include <algorithm>

#define getcx getchar
#define MAXN 10001
#define MAXROUNDS 500
using namespace std;
int X[MAXN],Y[MAXN];
inline void s( int &n )
    {
        n=0;
        int ch=getcx();
        while( ch < '0' || ch > '9' ) ch=getcx();

        while( ch >= '0' && ch <= '9' )
            n = (n<<3)+(n<<1) + ch-'0', ch=getcx();

    }
	
	/*
struct line
	{
		int A,B,C;
		void Line(int x1,int y1,int x2,int y2)
			{
				A=y2-y1;
				B=x1-x2;
				C = A*x1 + B*y1;
			}
		bool on(int x,int y)
			{
				return ((A*x) + (B*y) == C);
			}
	};	
	
	*/
typedef struct Line{
  int A, B, C;
  Line(int x1,int y1, int x2,int y2){
    //(x-x1)*(y2-y1) == (y-y1)*(x2-x1)
    //x*(y2-y1) - y*(x2-x1) = x1*(y2-y1) - y1*(x2-x1)
    //A = (y2-y1), B = (x1-x2), C = x1*A + y1*B
    A = y2-y1, B = x1 - x2;
    C = A*x1 + B*y1;
  }
  bool on(int x,int y){
    return A*x + B*y == C;
  }
} Line;
	
	
int cal(int n){
	if(n==1)
		return 1;
  int ret = 2;
  int rounds = MAXROUNDS;
  while(rounds--)
  	{
    	int a = rand()%n;
    	int b = rand()%n;
    	if(a == b) continue;
    	Line L(X[a], Y[a], X[b], Y[b]);
    	int cur = 0;
    	for(int i=0;i<n;++i) if(L.on(X[i],Y[i])) ++cur;
    	ret = max(ret, cur);
  	}	
  	return ret;
}

/*
int cal(int n)
	{	
		if(n==1)
			return 1;
		int ret=1;
		int rounds=MAXROUNDS;
		while(rounds--)
			{
				int a=rand()%n;
				int b=rand()%n;
				if(a==b)
					continue;
					
				Line L(X[a],Y[a],X[b],Y[b]);
				int curr=0;
				for(int i=0;i<n;i++)
					{
						if(L.on(X[i],Y[i])) 
							curr++;
					}
				ret=max(ret,curr);			
			}
		return ret;
	}
*/
int main()
	{
		srand(time(NULL));
		int t,n;
		scanf("%d",&t);
		
		while(t--)
			{	
				s(n);
				for(int i=0;i<n;i++)
					{
						scanf("%d",&X[i]);
						scanf("%d",&Y[i]);
					}
				int ans=cal(n);				
				printf("%d\n",ans);
			}
		return 0;
	}