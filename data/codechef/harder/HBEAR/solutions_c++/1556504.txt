#include <iostream>
#include <cstring>
using namespace std;

const int MAX = 1e2*3 + 2;

int n , m , kar;
long long ans[MAX][MAX] , calc[MAX][MAX] , valu[MAX] , d[MAX];
bool a[MAX][MAX];

void make( int c ) {
	int s=0 , e = 0 , sum = 0;
	memset ( d, 0 , sizeof d);
	while ( s < n ) {
		while ( e < n and sum < kar){
			sum+=valu[e];
			//if ( c == 2 )
			//cerr <<s << " " << e << " " << valu[e] << " " << sum << endl; 
			e++;
		}
		if ( sum >= kar ) {
			d[e-s]++;
			d[n-s+1]--;
			//if ( c == 2 )
			//cerr <<" e-s : " << e-s << endl;
			//cerr << e << " " << s << endl;
		}
		sum-=valu[s];
		//cerr << " s va e : " << s << " " << e << " " << valu[e] << endl;
		s++;
	}
	for ( int i = 1 ; i <= n ; i++){
		//if ( c == 3 )
		//	cerr <<i << " B : " << ans[i][c];
		d[i]+=d[i-1];
		ans[i][c]=ans[i][c]+d[i];
		//if ( c == 2 )
		//	cerr << ans[i][c] << endl;
	}
}

int main() {
	ios::sync_with_stdio(false);
	// input
	cin >> n >> m >> kar;
	for (int i = 0; i < n; i++) {
		string gar;
		cin >> gar;
		for (int j = 1 ; j < m+1; j++) {
			if ( gar[j-1] == 'H' )
				a[i][j] = true;
		}
	}
	// prepros
	for ( int i = 1 ; i < m+1 ; i++ ) { 
		for (int j = 0 ; j < n ; j++ ) {
			calc[j][i]+=a[j][i]+calc[j][i-1];
			//cerr << j << " " << i << " " << calc[j][i] << endl;
		}
	}
	for ( int i = 1 ; i < m+1 ; i++ )
		for ( int j = i ; j < m+1 ; j++ ) {
			int sum = 0;
			for ( int k = 0 ; k < n ; k++) { 
				valu[k] = calc[k][j] - calc[k][i-1];
				//cerr <<i <<  " k : " <<  k << " " << valu[k] << endl;
				sum+=valu[k];
			}
			//cerr << i << " DD ASD "<< j <<" " <<  sum  << endl;
			//if ( i == 1 and j ==2 )
			//	cerr << valu[3] << " " << valu[4] << endl;
			if ( sum >= kar) 
			make( j-i+1 );
		}
	// solve
	int q;
	cin >> q;
	for ( int i = 1 ; i <= n ; i++ )
		for ( int j = 1 ; j <= m ; j++ )
			ans[i][j]+=ans[i-1][j];
	for ( int i = 1 ; i <= m ;i++)
		for ( int j = 1 ; j <= n ; j++ )
			ans[j][i]+=ans[j][i-1];
	for ( int i=0; i < q ; i++ ){
		int r,c;
		cin >> r >> c;
		cout << ans[r][c] << endl;
	}
}
