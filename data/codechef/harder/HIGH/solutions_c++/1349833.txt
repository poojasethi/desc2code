#include<iostream>
#include<algorithm>
 
#define N 12
using namespace std;
int n;
long double matrix[N-1][N-1];
 
long long int det (long long int in_matrix[N-1][N-1])
{
  int i, j, k;
  long double det = 1;
  
  for ( i = 0; i < n; i++ ) {
    for ( j = 0; j < n; j++ )
      matrix[i][j] = in_matrix[i][j];
  }
  
  for ( k = 0; k < n; k++ ) {
    if ( matrix[k][k] == 0 ) {
      bool ok = false;
      
      for ( j = k; j < n; j++ ) {
        if ( matrix[j][k] != 0 )
          ok = true;
      }
      
      if ( !ok )
        return 0;
      
      for ( i = k; i < n; i++ )
	    swap ( matrix[i][j], matrix[i][k] );
      
      det = -det;
    }
    
    det *= matrix[k][k];
 
    //if ( k + 1 < n ) 
    {
      for ( i = k + 1; i < n; i++ ) {
        for ( j = k+1; j < n; j++ )
          matrix[i][j] = matrix[i][j] - matrix[i][k] * 
          matrix[k][j] / matrix[k][k];
      }
    }
  }
  return (long long int)(det+0.5);
}
 
 
int main()
{
    int t,p,i,j,k,m;
    scanf("%d",&t);
    int lap[N][N];
    long long int cofactor[N-1][N-1];
    for(p=0;p<t;p++)
    {
	scanf("%d%d",&n,&m);
	for(i=0;i<n;i++)
	    for(j=0;j<n;j++)
		cofactor[i][j]=lap[i][j]=0;
	for(i=0;i<m;i++)
	{
	    scanf("%d%d",&j,&k);
	    lap[j-1][k-1]=-1;
	    lap[k-1][j-1]=-1;
	}
	for(i=0;i<n;i++)
	{
	    k=0;
	    for(j=0;j<n;j++)
		if(lap[i][j]==-1)
		    k++;
	    lap[i][i]=k;
	}
	for(i=0;i<n-1;i++)
	    for(j=0;j<n-1;j++)
			cofactor[i][j]=lap[i][j];
	    
	n--;
	printf("%lld\n",det(cofactor));
    }
}