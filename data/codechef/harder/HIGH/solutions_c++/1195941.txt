//#pragma warning (disable: 4786)
//#pragma comment (linker, "/STACK:16777216")

#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cmath>
#include<iostream>
#include<fstream>
#include<iomanip>
#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>
#define maxim 100
#define LLD long long int
#define LLU long long unsigned
#define HD short int
#define HU short unsigned
#define ui unsigned
#define pi acos(-1.0)
#define inf (1<<29)
#define CLR(a) memset(a,0,sizeof(a))
#define SET(a) memset(a,-1,sizeof(a))
#define pb push_back
#define sz(a) ((int)a.size())
#define all(a) a.begin(),a.end()
#define eps 1e-6
#define rep(i,init,n) for(i=init;i<n;i++)
#define rem(i,init,n) for(i=init;i>n;i--)
#define _abs(a) ((a)<0?(-(a)):(a))
#define area(x1,y1,x2,y2,x3,y3) ( x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2) )
#define sqr(x) ((x)*(x))
#define distSqr(x1,y1,x2,y2) ( sqr(x1-x2) + sqr(y1-y2) )
#define spDist(lat1,long1,lat2,long2,r) ( r * acos( sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(long1-long2) ) )
#define isEq(a,b) (fabs(a-b)<eps)
#define STR string
#define LF double
#define IT iterator
#define VI vector<int>
#define VLLD vector<LLD>
#define VS vector<STR>
#define VLF vector<LF>
#define MII map<int,int>
#define MIB map<int,bool>
#define MSI map<STR,int>
#define MSB map<STR,bool>
#define MSS map<STR,STR>
#define M2dII map<int,map<int,int> >
#define QI queue<int>
#define SI stack<int>
#define PLL pair< LLD, LLD >
#define PPI pair< PII, int >
#define ff first
#define ss second
#define VPII vector<PII>
#define MP make_pair

#define chk(a,k) ((bool)(a&(1<<(k))))
#define set0(a,k) (a&(~(1<<(k))))
#define set1(a,k) (a|(1<<(k)))

#define chkA(a,k) (bool)(a[(k)>>5] & (1<<((k)&31)))
#define setA0(a,k) (a[(k)>>5] &= ~(1<<((k)&31)))
#define setA1(a,k) (a[(k)>>5] |= (1<<((k)&31)))

#define SD(a) scanf("%d",&a)
#define SU(a) scanf("%u",&a)
#define SHD(a) scanf("%hd",&a)
#define SHU(a) scanf("%hu",&a)
#define SLLD(a) scanf("%lld",&a)
#define SLLU(a) scanf("%llu",&a)
#define SF(a) scanf("%f",&a)
#define SLF(a) scanf("%lf",&a)
#define SC(a) scanf("%c",&a)
#define SS(a) scanf("%s",a)

#define foreach(i, c) for( __typeof( (c).begin() ) i = (c).begin(); i != (c).end(); ++i )

int diru[] = {-1,-1,-1,0,0,1,1,1};
int dirv[] = {-1,0,1,-1,1,-1,0,1};

using namespace std;

template< class T > T sq(T n) { return n*n; }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T a, T b, T c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }
template< class T > T power(T N,T P){  return (P==0)?  1: N*power(N,P-1); }

LF a[14][14] ;
LLD L[14][14] ;
bool adj[14][14] ;

LF gaussian(int n)
{
         int i = 0, j = 0,k,l,r=n,c=n ;
         LF val ;

         rep(i,0,n)
                    rep(j,0,n)
                              a[i][j] = L[i][j] ;

          //printf("%d\n",i) ;
          i = j = 0 ;

         while(i<r && j<c)
         {
                   //puts("sds") ;
                  rep(k,i,r)
                  {
                           if(!(fabs(a[k][j])<eps))
                           {
                                    rep(l,j,c)        swap(a[i][l],a[k][l]) ;
                                    break ;
                           }
                  }

                  if(k==r)
                  {
                           return 0 ;
                  }

                  rep(k,i+1,r)
                  {
                           val = a[k][j]/a[i][j] ;
                           rep(l,j,c)
                           {
                                    a[k][l] -= a[i][l]*val ;
                           }
                  }

                  /*rep(x,0,n)
                  {
                            rep(y,0,n)            printf("%.6lf ",a[x][y]) ;
                            puts("") ;
                  }**/

                  i++ ;
                  j++ ;
         }

         LF ret = 1 ;

         rep(i,0,n)           ret *= a[i][i] ;

         return ret ;
}

int main()
{
	int T,t=1,m,i,j,n;
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	scanf("%d",&T);
	for(t=1;t<=T;t++)
	//while(scanf("%d",&n)==1)
	{
	          SD(n) ;
	          SD(m) ;

		CLR(L) ;
		CLR(adj) ;

		while(m--)
		{
			scanf("%d%d",&i,&j) ;

			i -- ;
			j -- ;

			if(i==j || adj[i][j])                 continue ;

			adj[i][j] = 1 ;
			adj[j][i] = 1 ;

			L[i][j] = -1 ;
			L[j][i] = -1 ;

			L[i][i] ++ ;
			L[j][j] ++ ;
		}

		if(n==1)            puts("1") ;
		else
		{
		          LF tmp = gaussian(n-1) ;
		          if(tmp<0) tmp = -tmp ;
		          printf("%.0lf\n",tmp) ;

		          //ans = (LLD)(tmp+eps) ;
		}
	}
	return 0;
}
