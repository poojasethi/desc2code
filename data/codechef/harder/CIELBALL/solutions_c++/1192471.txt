#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstring>
#include<vector>
#include<assert.h>
#define REP(i,m) for(int i=0;i<m;++i)
#define REPN(i,m,in) for(int i=in;i<m;++i)
#define ALL(t) (t).begin(),(t).end()
#define pb push_back
#define mp make_pair
#define fr first
#define sc second
#define dump(x)  cerr << #x << " = " << (x) << endl
#define prl cerr<<"called:"<< __LINE__<<endl
using namespace std;
static const int INF =500000000; 
template<class T> void debug(T a,T b){ for(;a!=b;++a) cerr<<*a<<' ';cerr<<endl;}
typedef long long int lint;
typedef pair<int,int> pi;
int n,b;
lint m,l;
int s[35],tmp[35];
int sectall[1000];
lint dp[35][1000];
lint rec(int tall,int other){
	lint& res=dp[tall][other];
	if(tall>0 && sectall[other]>=tall) return res=rec(tall,other-1);
	if(res!=-1) return res;
	if(other==0){
		lint nxt=rec(tall-1,other);
		res=(nxt+b)/(b+1);
		if(res>l){
			res=nxt-l*b;
		}
	}else{
		lint nxt1=rec(tall-1,other),nxt2=rec(tall,other-1);
		res=(nxt1+nxt2*b+b)/(b+1);
		lint k=res-nxt2;
		if(k>l){
			res=min(nxt2+l,nxt1-b*l);
		}
	}
	return res;
}

int main(){
	int t;scanf("%d",&t);
	while(t--){
		cin>>n>>b>>m>>l;
		REP(i,n) cin>>s[i],tmp[i]=s[i];
		int tall=max_element(s,s+n)-s;
		int sum=0;
		REP(i,n) if(i!=tall) sum+=s[i];
		REP(j,sum+1){
			int maxi=-1,maxind=-1;
			REP(k,n) if(k!=tall && maxi<s[k]){
				maxi=s[k];
				maxind=k;
			}
			sectall[sum-j]=maxi;
			if(maxi==0){
				break;
			}
			--s[maxind];
		}
		lint lb=0,ub=1e15+5;
		while(ub-lb>1){
			memset(dp,-1,sizeof(dp));
			lint md=(lb+ub)>>1;
			REP(i,sum+1) dp[0][i]=md;
			if(rec(s[tall],sum)<=m) lb=md;
			else ub=md;
		}
		printf("%lld\n",lb);
	}
	return 0;
}

