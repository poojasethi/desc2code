#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
const int maxn = 33;
bool flower[maxn];
vector<int> g[maxn];
int n,N;
double mat[2 * maxn][2 * maxn],buf[2 * maxn][2 * maxn];
int idx[maxn][2];
void out() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			printf("%.3lf ",mat[i][j]);
		}
		puts("");
	}
	puts("");
}
void norm() {
	for (int i = 0; i < N; i++) {
		double sum = 0.0;
		for (int j = 0; j < N; j++) {
			sum += mat[i][j];
		}
		for (int j = 0; j < N; j++) {
			mat[i][j] /= sum;
		}
	}
}
void mul() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			buf[i][j] = 0.0;
			for (int k = 0; k < N; k++) {
				buf[i][j] += mat[i][k] * mat[k][j];
			}
		}
	}
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			mat[i][j] = buf[i][j];
		}
	}
}
double solve(int id) {
	N = 0;
	for (int i = 1; i <= n; i++) {
		if (flower[i]) {
			idx[i][i == id] = N++;
			idx[i][i != id] = 2 * maxn - 1;
		} else {
			idx[i][0] = N++;
			idx[i][1] = N++;
		}	
	}
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < N; j++) {
			mat[i][j] = 0.0;
		}
	}
	for (int i = 1; i < n; i++) {
		double prob = 1.0 / sz(g[i]);
		for (int j = 0; j < sz(g[i]); j++) {
			int v = g[i][j];
			if (flower[v]) {
				mat[idx[i][0]][idx[v][id == v]] += prob;
				mat[idx[i][1]][idx[v][id == v]] += prob;
			} else {
				mat[idx[i][0]][idx[v][0]] += prob;
				mat[idx[i][1]][idx[v][1]] += prob;
			}
		}
	}
	mat[idx[n][0]][idx[n][0]] = 1.0;
	mat[idx[n][1]][idx[n][1]] = 1.0;
	for (int it = 0; it < 111; it++) {
		//out();
		mul();		
		norm();
	}
	return mat[idx[1][1 == id]][idx[n][1]];
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int m,s; cin >> n >> m >> s;
	for (int i = 0; i < s; i++) {
		int x; cin >> x;
		flower[x] = true;
	}
	for (int i = 0; i < m; i++) {
		int a,b; cin >> a >> b;
		g[a].pb(b);
	}
	for (int i = 1; i < n; i++) {
		if (!flower[i]) continue;
		printf("%.9lf\n",solve(i));
	}
	return 0;
}
