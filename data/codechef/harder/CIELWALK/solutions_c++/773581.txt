#include <cstdio>
#include <vector>

#define pb push_back

using namespace std;

const int lgk = 110;
const int maxord = 63;

bool isCrit[maxord];
bool related[maxord];
int n, m, s, idx[maxord][2];
vector<int> adj[maxord];

double mat[maxord][maxord];

void printMat(int ord) {
	printf("====\n");
	for (int i=0; i<ord; i++) {
		for (int j=0; j<ord; j++) {
			printf("%.2f ", mat[i][j]);
		}
		printf("\n");
	}
}

double ret[maxord][maxord];
void sqr(int ord) {
	for (int i=0; i<ord; i++) {
		for (int j=0; j<ord; j++) {
			ret[i][j] = 0.0f;
			for (int k=0; k<ord; k++) {
				ret[i][j] += mat[i][k]*mat[k][j];
			}
		}
	}
	for (int i=0; i<ord; i++) {
		for (int j=0; j<ord; j++) {
			mat[i][j] = ret[i][j];
		}
	}
}

void norm(int ord) {
	for (int i=0; i<ord; i++) {
		double sum = 0.0f;
		for (int j=0; j<ord; j++) {
			sum += mat[i][j];
		}
		for (int j=0; j<ord; j++) {
			mat[i][j] /= sum;
		}
	}
}

void pwr(int ord) {
	for (int i=0; i<lgk; i++) {
		sqr(ord);
		//printMat(ord);
		norm(ord);
		//printMat(ord);
	}
}

void clear() {
	for (int i=0; i<maxord; i++) {
		for (int j=0; j<maxord; j++) {
			mat[i][j] = 0.0f;
		}
	}
}

double solve(int fin) {
	clear();

	int l = 0;
	for (int i=0; i<=n; i++) {
		if(related[i]) {
			if(isCrit[i]) {
				idx[i][fin==i] = l++;
				idx[i][fin!=i] = maxord-1;
			}
			else {
				idx[i][0] = l++;
				idx[i][1] = l++;
			}
		}
		else {
			idx[i][0] = idx[i][1] = maxord-1;
		}
	}

	for (int i=1; i<n; i++) {
		if (adj[i].size()) {
			double prob = 1.0f/adj[i].size();
			for (int j=0; j<adj[i].size(); j++) {
				int v = adj[i][j];
				if (isCrit[v]) {
					int nk = (adj[i][j] == fin);
					mat[idx[i][0]][idx[v][nk]] += prob;
					mat[idx[i][1]][idx[v][nk]] += prob;
				}
				else {
					mat[idx[i][0]][idx[v][0]] += prob;
					mat[idx[i][1]][idx[v][1]] += prob;
				}
			}
		}
		else {
			for (int j=0; j<2; j++) {
				if (idx[i][j] != -1) {
					mat[idx[i][j]][idx[i][j]] = 1.0f;
				}
			}
		}
	}
	for (int i=0; i<2; i++) {
		if (idx[n][i] != -1) {
			mat[idx[n][i]][idx[n][i]] = 1.0f;
		}
	}
	//printMat(l);
	pwr(l);

	return mat[idx[1][1==fin]][idx[n][1]];
}

int main() {
	scanf("%d%d%d", &n, &m, &s);
	for (int i=0; i<s; i++) {
		int tmp;
		scanf("%d", &tmp);
		isCrit[tmp] = true;
	}

	for (int i=0; i<m; i++) {
		int a, b;
		scanf("%d%d", &a, &b);
		adj[a].pb(b);
		related[a] = related[b] = true;
	}
	for (int i=0; i<maxord; i++) {
		if (isCrit[i]) {
			double soln = solve(i);
			printf("%.7f\n", soln);
		}
	}
	return 0;
}