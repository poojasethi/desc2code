#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
const int P=104857601;
const int G=3;
inline int Pow(int a,int b){
	int c=1;
	for(;b;b>>=1,a=a*1ll*a%P)if(b&1)c=c*1ll*a%P;
	return c;
}
inline int FFT(int *A,int N,int f){
	rep(i,0,N-1){
		int x=i;int y=0;
		for(int k=1;k<N;k<<=1,x>>=1)(y<<=1)|=(x&1);
		if(i<y){int tmp=A[i];A[i]=A[y];A[y]=tmp;}
	}
	for(int i=1;i<N;i<<=1){
		int v;v=Pow(G,(P-1)/N);v=Pow(v,(N/(i<<1)));if(f)v=Pow(v,P-2);
			for(int j=0;j<N;j+=(i<<1)){
        int w=1;
        for(int k=0;k<i;k++){
          int x,y;y=A[j+k];x=A[j+k+i]*1ll*w%P;
          A[j+k]=(x+y)%P;
          A[j+k+i]=(y-x+P)%P;
          w=w*1ll*v%P;
      }
    }
  }
	if(f){
		int VV=Pow(N,P-2);
		rep(i,0,N-1)A[i]=A[i]*1ll*VV%P;
	}
}
int A0[1<<17];
inline void GetInv(int *A,int *B,int N){
	if(N==1){
		B[0]=Pow(A[0],P-2);
		return;
	}
	GetInv(A,B,N/2);
	
	rep(i,0,N-1)A0[i]=A[i];
	rep(i,N,(N<<1)-1)A0[i]=0;
	FFT(B,N<<1,0);
	FFT(A0,N<<1,0);
	rep(i,0,(N<<1)-1){
		B[i]=B[i]*1ll*(2ll+P-(A0[i]*1ll*B[i]%P))%P;
	}
	FFT(B,N<<1,1);
	rep(i,N,(N<<1)-1)B[i]=0;
}
int C[1<<16];int k;
int A[1<<16];
int gg[1<<16];
int now[1<<16];
int ginv[1<<17];
int ttt[1<<17];
inline void fan(int *B,int l){
	static int ri[1<<17];
	memset(ri,0,sizeof ri);
	static int ni[1<<17];
	memset(ni,0,sizeof ni);
	//rep(i,0,l+k)printf("%d ",B[i]);printf("\n");
	//return;
	
	rep(i,0,l-1)ni[i]=ginv[i];
	
	FFT(ni,(1<<16),0);
	static int fu[1<<17];
	memset(fu,0,sizeof fu);
	rep(i,0,l-1)fu[i]=B[i];
	FFT(fu,1<<16,0);
	rep(i,0,(1<<16)-1)fu[i]=fu[i]*1ll*ni[i]%P;
	FFT(fu,1<<16,1);
	
	rep(i,l,(1<<16)-1)fu[i]=0;
	//rep(i,0,l-1)printf("%d ",fu[i]);printf("\n");
	
	FFT(fu,1<<16,0);
	rep(i,1,k)ri[i]=C[i];ri[0]=0;
	FFT(ri,1<<16,0);
	rep(i,0,(1<<16)-1)ri[i]=ri[i]*1ll*fu[i]%P;
	
	FFT(ri,1<<16,1);
	rep(i,0,k-1)B[i]=(ri[i+l]+B[i+l])%P;
	rep(i,k,(1<<16)-1)B[i]=0;
	//rep(i,0,k-1)printf("%d ",B[i]);printf("\n");
}
int main(){
	LL n;
	scanf("%d%lld",&k,&n);
	rep(i,1,k)scanf("%d",&A[i]);
	rep(i,1,k)scanf("%d",&C[i]);
	rep(i,1,k)A[i]%=P,C[i]%=P;
	rep(i,1,k)ttt[i]=(P-C[i])%P;ttt[0]=1;
	GetInv(ttt,ginv,1<<16);
	if(k==1){
		LL x=n-1;
		int c=A[1];int b=C[1];
		for(;x;x/=2ll,b=b*1ll*b%P)if(x&1)c=c*1ll*b%P;
		printf("%d\n",c);
		return 0;
	}
	if(n<=k){
		printf("%d\n",A[n]%P);
		return 0;
	}
	n--;
	rep(i,0,k-1)gg[i]=C[i+1];
	now[0]=1;bool fl=0;
	rep(pp,0,60){
		if(n/k<(1ll<<pp))break;
		FFT(gg,1<<16,0);
		if(((n/k)>>pp)&1){
			if(!fl){
				fl=1;
				rep(i,0,(1<<16)-1)now[i]=gg[i];
				FFT(now,1<<16,1);
				rep(i,k,(1<<16)-1)now[i]=0;
			}
			else{
				FFT(now,1<<16,0);
				rep(i,0,(1<<16)-1)now[i]=now[i]*1ll*gg[i]%P;
				FFT(now,1<<16,1);
				fan(now,k-1);
			}
		}
		rep(i,0,(1<<16)-1)gg[i]=gg[i]*1ll*gg[i]%P;
		FFT(gg,(1<<16),1);
		fan(gg,k-1);
	}
	int yue=n%k;
	if(!yue){
		int ans=0;
		rep(i,0,k-1)ans=(ans+A[k-i]*1ll*now[i])%P;
		printf("%d\n",(ans%P+P)%P);
		return 0;
	}
	fan(now,yue);
	int ans=0;
	rep(i,0,k-1)ans=(ans+A[k-i]*1ll*now[i])%P;
	printf("%d\n",(ans%P+P)%P);
	return 0;
}



