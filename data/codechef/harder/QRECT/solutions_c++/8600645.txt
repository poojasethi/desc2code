#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
int M;
const int N=410000;
struct BIT{
	int cnt[N];
	void add(int x,int v){
		for(;x<=M;x+=x&(-x))cnt[x]+=v;
	}
	int ask(int x){
		int ans=0;
		for(;x;x-=x&(-x))ans+=cnt[x];
		return ans;
	}
}u,d,l,r;
struct mat{
	int x1,y1,x2,y2;
	inline void rd(){
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
	}
}li[N];
struct opt{
	int kind;
	mat th;
	int id;
}a[N],te[N];
int tmp[N];
inline int finder(int x){return lower_bound(tmp+1,tmp+1+M,x)-tmp;}
int ans[N];
int cnt[N];
int tim[N];
int cho=0;
inline void add(int x,int v){
	for(;x<=M;x+=x&(-x)){
		if(tim[x]^cho){
			tim[x]=cho;cnt[x]=0;
		}
		cnt[x]+=v;
	}
}
inline int ask(int x){
	int ans=0;
	for(;x;x-=x&(-x)){
		if(tim[x]^cho){
			tim[x]=cho;cnt[x]=0;
		}
		ans+=cnt[x];
	}
	return ans;
}
void CDQ1(int l,int r){
	if(l==r)return;
	int mid=(l+r)>>1;
	CDQ1(l,mid);
	CDQ1(mid+1,r);
	int l1=l;int r1=mid+1;
	int bg=l;
	++cho;
	while(!(l1>mid&&r1>r)){
		bool kd=0;
		if(l1>mid)kd=1;
		else if(r1>r)kd=0;
		else{
			int x1,x2;
			if(a[l1].kind<=2)x1=a[l1].th.x2;
			else x1=a[l1].th.x1;
			
			if(a[r1].kind<=2)x2=a[r1].th.x2;
			else x2=a[r1].th.x1;
			if(x1<x2)kd=0;else kd=1;
		}
		if(kd==0){
			te[bg++]=a[l1];
			if(a[l1].kind==1){
				add(a[l1].th.y1,1);
			}
			else
			if(a[l1].kind==2){
				add(a[l1].th.y1,-1);
			}
			l1++;
		}
		else{
			te[bg++]=a[r1];
			if(a[r1].kind==3){
				ans[a[r1].id]+=ask(M)-ask(a[r1].th.y2);
			}
			r1++;
		}
	}
	rep(i,l,r)a[i]=te[i];
}
void CDQ2(int l,int r){
	if(l==r)return;
	int mid=(l+r)>>1;
	CDQ2(l,mid);
	CDQ2(mid+1,r);
	int l1=l;int r1=mid+1;
	int bg=l;
	++cho;
	while(!(l1>mid&&r1>r)){
		bool kd=0;
		if(l1>mid)kd=1;
		else if(r1>r)kd=0;
		else{
			int x1,x2;
			if(a[l1].kind<=2)x1=a[l1].th.x2;
			else x1=a[l1].th.x1;
			
			if(a[r1].kind<=2)x2=a[r1].th.x2;
			else x2=a[r1].th.x1;
			if(x1<x2)kd=0;else kd=1;
		}
		if(kd==0){
			te[bg++]=a[l1];
			if(a[l1].kind==1){
				add(a[l1].th.y2,1);
			}
			else
			if(a[l1].kind==2){
				add(a[l1].th.y2,-1);
			}
			l1++;
		}
		else{
			te[bg++]=a[r1];
			if(a[r1].kind==3){
				ans[a[r1].id]+=ask(a[r1].th.y1-1);
			}
			r1++;
		}
	}
	rep(i,l,r)a[i]=te[i];
}
void CDQ3(int l,int r){
	if(l==r)return;
	int mid=(l+r)>>1;
	CDQ3(l,mid);
	CDQ3(mid+1,r);
	int l1=l;int r1=mid+1;
	int bg=l;
	++cho;
	while(!(l1>mid&&r1>r)){
		bool kd=0;
		if(l1>mid)kd=1;
		else if(r1>r)kd=0;
		else{
			int x1,x2;
			if(a[l1].kind<=2)x1=a[l1].th.x1;
			else x1=a[l1].th.x2;
			
			if(a[r1].kind<=2)x2=a[r1].th.x1;
			else x2=a[r1].th.x2;
			if(x1>x2)kd=0;else kd=1;
		}
		if(kd==0){
			te[bg++]=a[l1];
			if(a[l1].kind==1){
				add(a[l1].th.y1,1);
			}
			else
			if(a[l1].kind==2){
				add(a[l1].th.y1,-1);
			}
			l1++;
		}
		else{
			te[bg++]=a[r1];
			if(a[r1].kind==3){
				ans[a[r1].id]+=ask(M)-ask(a[r1].th.y2);
			}
			r1++;
		}
	}
	rep(i,l,r)a[i]=te[i];
}
void CDQ4(int l,int r){
	if(l==r)return;
	int mid=(l+r)>>1;
	CDQ4(l,mid);
	CDQ4(mid+1,r);
	int l1=l;int r1=mid+1;
	int bg=l;
	++cho;
	while(!(l1>mid&&r1>r)){
		bool kd=0;
		if(l1>mid)kd=1;
		else if(r1>r)kd=0;
		else{
			int x1,x2;
			if(a[l1].kind<=2)x1=a[l1].th.x1;
			else x1=a[l1].th.x2;
			
			if(a[r1].kind<=2)x2=a[r1].th.x1;
			else x2=a[r1].th.x2;
			if(x1>x2)kd=0;else kd=1;
		}
		if(kd==0){
			te[bg++]=a[l1];
			if(a[l1].kind==1){
				add(a[l1].th.y2,1);
			}
			else
			if(a[l1].kind==2){
				add(a[l1].th.y2,-1);
			}
			l1++;
		}
		else{
			te[bg++]=a[r1];
			if(a[r1].kind==3){
				ans[a[r1].id]+=ask(a[r1].th.y1-1);
			}
			r1++;
		}
	}
	rep(i,l,r)a[i]=te[i];
}
opt bf[N];
int main(){
	static int Q;
	scanf("%d",&Q);
	int Y=0;
	rep(i,1,Q){
		char op[4];scanf("%s",op+1);
		if(op[1]=='I'){
			a[i].kind=1;
			a[i].th.rd();
			li[++Y]=a[i].th;
		}
		if(op[1]=='D'){
			a[i].kind=2;
			int x;scanf("%d",&x);
			a[i].th=li[x];
		}
		if(op[1]=='Q'){
			a[i].kind=3;
			a[i].th.rd();
		}
		a[i].id=i;
	}
	rep(i,1,Q){
		tmp[++M]=a[i].th.x1;
		tmp[++M]=a[i].th.y1;
		tmp[++M]=a[i].th.x2;
		tmp[++M]=a[i].th.y2;
	}
	sort(tmp+1,tmp+1+M);
	M=unique(tmp+1,tmp+1+M)-tmp-1;
	rep(i,1,Q){
		a[i].th.x1=finder(a[i].th.x1);
		a[i].th.y1=finder(a[i].th.y1);
		a[i].th.x2=finder(a[i].th.x2);
		a[i].th.y2=finder(a[i].th.y2);
	}
	int pre=0;
	rep(i,1,Q){
		if(a[i].kind==1){
			pre++;
			u.add(a[i].th.y1,1);
			d.add(a[i].th.y2,1);
			l.add(a[i].th.x2,1);
			r.add(a[i].th.x1,1);
		}
		if(a[i].kind==2){
			pre--;
			u.add(a[i].th.y1,-1);
			d.add(a[i].th.y2,-1);
			l.add(a[i].th.x2,-1);
			r.add(a[i].th.x1,-1);
		}
		if(a[i].kind==3){
			ans[i]=pre;
			ans[i]-=u.ask(M)-u.ask(a[i].th.y2);
			ans[i]-=d.ask(a[i].th.y1-1);
			ans[i]-=l.ask(a[i].th.x1-1);
			ans[i]-=r.ask(M)-r.ask(a[i].th.x2);
		}
	}
	rep(i,1,Q)bf[i]=a[i];
	CDQ1(1,Q);
	rep(i,1,Q)a[i]=bf[i];
	CDQ2(1,Q);
	rep(i,1,Q)a[i]=bf[i];
	CDQ3(1,Q);
	rep(i,1,Q)a[i]=bf[i];
	CDQ4(1,Q);
	rep(i,1,Q)a[i]=bf[i];
	rep(i,1,Q)if(a[i].kind==3)printf("%d\n",ans[i]);
	return 0;
}



