    #include <stdio.h>
    #include <assert.h>
    #include <math.h>
    #include <time.h>
    #include <string.h>
    #include <iostream>
    #include <fstream>
    #include <algorithm>
    #include <string>
    #include <vector>
    #include <set>
    #include <map>
    #pragma comment(linker, "/STACK:16777216")
    using namespace std;
     
    typedef vector<int> VI;
    typedef pair<int,int> PII;
    #ifndef ONLINE_JUDGE
    typedef __int64 LL;
    #else
    typedef long long LL;
    #endif
     
    #define bit(n) (1<<(n))
    #define inf 1000000000
    #define eps 1e-9
    #define PI 3.1415926535897932385
    #define pb push_back
    #define sz size()
    #define mp make_pair
    #define cl clear()
    #define all(a) a.begin(),a.end()
    #define fill(ar,val) memset(ar,val,sizeof ar)
    #define MIN(a,b) if(a>(b)) a=(b)
    #define MAX(a,b) if(a<(b)) a=(b)
    #define sqr(x) ((x)*(x))
    #define min(a,b) ((a)<(b)?(a):(b))
    #define max(a,b) ((a)>(b)?(a):(b))
     
    #define MOD 1000000007
     
    int inv(int a)
    {
    int n=MOD-2;
    int p=1;
    for(;n;)
    {
    if(n%2) p=LL(p)*a%MOD;
    if(n/=2) a=LL(a)*a%MOD;
    }
    return p;
    }
     
    struct triple
    {
    int res;
    int a,b;
    triple(){}
    triple(int res_,int a_,int b_){res=res_,a=a_,b=b_;}
    bool operator<(const triple &x) const
    {
    if(res!=x.res) return res<x.res;
    if(a!=x.a) return a<x.a;
    return b<x.b;
    }
    bool operator==(const triple &x) const
    {
    return res==x.res && a==x.a && b==x.b;
    }
    };
     
    bool lessval(const triple &x,const triple &y)
    {
    return (x.a+1)/2+x.b<(y.a+1)/2+y.b;
    }
     
    #define A 1222222
    triple a27[A],a35[A];
    int inv35[A];
    int len27,len35;
     
    #define N 702
    int main()
    {
    #ifndef ONLINE_JUDGE
    freopen("in.txt","r",stdin);
    #endif
    int a,b;
    int res,cur;
     
    clock_t start=clock();
    double log2=log10(2.);
    double log7=log10(7.);
    res=1;
    for(a=0;a*log7<N;a++)
    {
    cur=res;
    for(b=0;a*log7+b*log2<N;b++)
    {
    a27[len27++]=triple(cur,b,a);
    cur=(cur<<1)%MOD;
    }
    res=LL(res)*7%MOD;
    }
    sort(a27,a27+len27);
    fprintf(stderr,"time=%.3lfsec\n",0.001*(clock()-start));
     
    start=clock();
    double log3=log10(3.);
    double log5=log10(5.);
    res=1;
    for(a=0;a*log5<N;a++)
    {
    unsigned int cur=res;
    for(b=0;a*log5+b*log3<N;b++)
    {
    a35[len35++]=triple(cur,b,a);
    cur=cur*3%MOD;
    }
    res=LL(res)*5%MOD;
    }
    sort(a35,a35+len35,lessval);
    for(int i=0;i<len35;i++)
    inv35[i]=inv(a35[i].res);
    fprintf(stderr,"time=%.3lfsec\n",0.001*(clock()-start));
     
    int T;
    for(scanf("%d",&T);T--;)
    {
    scanf("%d",&res);
    if(res==0){puts("10");continue;}
    if(res==1){puts("1");continue;}
    int ans[10];
    int anssum=inf;
    fill(ans,100);
    int i,j,d;
    for(i=0;i<len35;i++)
    {
    int cur35=a35[i].res;
    int x3=a35[i].a;
    int x5=a35[i].b;
    int sum=(x3+1)/2+x5;
    if(sum>anssum) break;
    int cur27=LL(res)*inv35[i]%MOD;
    int L=-1;
    int R=len27;
    while(L+1<R)
    {
    int M=(L+R)/2;
    if(a27[M].res<cur27) L=M; else R=M;
    };
    for(j=R;a27[j].res==cur27;j++)
    {
    int x2=a27[j].a;
    int x7=a27[j].b;
    sum+=x7+x2/3;
    if(sum>anssum) continue;
    int num[10]={0};
    num[9]=x3/2;x3%=2;
    num[8]=x2/3;x2%=3;
    num[7]=x7;
    num[6]=min(x2,x3);x2-=num[6];x3-=num[6];
    num[5]=x5;
    num[4]=x2/2;x2%=2;
    num[3]=x3;
    num[2]=x2;
    sum=0;
    for(d=2;d<10;d++) sum+=num[d];
    if(anssum>sum)
    {
    anssum=sum;
    for(d=2;d<10;d++) ans[d]=num[d];
    }
    else
    {
    if(anssum==sum)
    {
    for(d=2;d<10 && ans[d]==num[d];d++);
    if(d<10 && ans[d]>num[d])
    for(d=2;d<10;d++) ans[d]=num[d];
    }
    }
    }
    };
    LL r=1;
    for(d=2;d<10;d++)
    for(int i=0;i<ans[d];i++)
    {
    printf("%d",d);
    r=LL(r)*d%MOD;
    }
    assert(r==res);
    printf("\n");
    }
    return 0;
    }
