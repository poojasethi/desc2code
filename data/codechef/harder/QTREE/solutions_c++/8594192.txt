#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

struct edge{int v,w,next;}e[200005];int etot=0;
int g[100005];
void ae(int u,int v,int w){
	e[etot].v=v;e[etot].w=w;e[etot].next=g[u];g[u]=etot++;
}
int rt;
int qu[100005],p,q,sz[100005],son[100005],up[100005],pre[100005],h[100005],id[100005],ind=0,uw[111111],ew[111111];
int n;
void init(int rt){
	p=q=0;
	qu[q++]=rt;
	sz[0]=h[rt]=pre[rt]=0;
	uw[rt]=0;
	while(p!=q){
		int u=qu[p++],v;
		sz[u]=1,son[u]=0;
		for (int i=g[u];~i;i=e[i].next)if((v=e[i].v)!=pre[u]){
			qu[q++]=v;
			h[v]=h[u]+1;
			pre[v]=u;
			uw[v]=e[i].w;
		}
	}
	for (int i=q-1;i>=1;i--){
		if(i)sz[pre[qu[i]]]+=sz[qu[i]];
		if(sz[qu[i]]>sz[son[pre[qu[i]]]])son[pre[qu[i]]]=qu[i];
	}
	for (int i=1;i<=n;i++)if(!son[i]){
		int u=i;while(son[pre[u]]==u)u=pre[u];
		int p=u;while(p)up[p]=u,id[p]=++ind,p=son[p];
	}
	for (int i=1;i<=n;i++)ew[id[i]]=uw[i];
}
int fa[111111];
int gf(int x){return x==fa[x]?x:fa[x]=gf(fa[x]);}
int s,t,sw;
struct data{
	int su,lmi,imi,rmi,lma,ima,rma;
	void rev(){
		swap(lmi,rmi);
		swap(lma,rma);
	}
	void minus(){
		su*=-1;
		swap(lmi,lma);
		swap(rmi,rma);
		swap(imi,ima);
		lmi*=-1,lma*=-1,rmi*=-1,rma*=-1,imi*=-1,ima*=-1;
	}
	void se(int x){
		su=lmi=lma=x;
		lmi=min(lmi,0);
		lma=max(lma,0);
		imi=rmi=lmi;
		ima=rma=lma;
	}
};
data st;
data operator+(const data&a,const data&b){
	data c;
	c.su=a.su+b.su;
	c.lmi=min(a.lmi,a.su+b.lmi);
	c.lma=max(a.lma,a.su+b.lma);
	c.rmi=min(b.rmi,a.rmi+b.su);
	c.rma=max(b.rma,a.rma+b.su);
	c.imi=min(min(a.imi,b.imi),a.rmi+b.lmi);
	c.ima=max(max(a.ima,b.ima),a.rma+b.lma);
	return c;
}
int dis(int u,int v){
	int a=h[u],b=h[v];
	while(up[u]!=up[v]){
		if(h[up[u]]<h[up[v]])swap(u,v);
		u=pre[up[u]];
	}
	int c=min(h[u],h[v]);
	return a-c+b-c;
}

data seg[444444];int tag[444444];
void build(int l,int r,int x){
	if(l==r)seg[x].se(ew[l]);
	else{
		int mid=l+r>>1;
		build(l,mid,x<<1);
		build(mid+1,r,x<<1|1);
		seg[x]=seg[x<<1]+seg[x<<1|1];
	}
}

void pd(int x){
	if(tag[x]){
		tag[x<<1]^=1;
		tag[x<<1|1]^=1;
		seg[x<<1].minus();
		seg[x<<1|1].minus();
		tag[x]=0;
	}
}
int l1,r1;
void upd(int l,int r,int x){
	if(l1<=l && r<=r1){
		seg[x].minus();
		tag[x]^=1;
	}else{
		if(tag[x])pd(x);
		int mid=l+r>>1;
		if(l1<=mid)upd(l,mid,x<<1);
		if(r1>mid)upd(mid+1,r,x<<1|1);
		seg[x]=seg[x<<1]+seg[x<<1|1];
	}
}
data V;
void que(int l,int r,int x){
	if(l1<=l && r<=r1){
		V=V+seg[x];
	}else{
		if(tag[x])pd(x);
		int mid=l+r>>1;
		if(l1<=mid)que(l,mid,x<<1);
		if(r1>mid)que(mid+1,r,x<<1|1);
	}
}
void work(int u,int v){
	while(up[u]!=up[v]){
		if(h[up[u]]<h[up[v]])swap(u,v);
		l1=id[up[u]],r1=id[u],upd(1,n,1);
		u=pre[up[u]];
	}
	if(u==v)return;
	if(h[u]<h[v])swap(u,v);
	l1=id[v]+1,r1=id[u],upd(1,n,1);
}

data query(int u,int v){
	int sg=0;
	data au,av;au.se(0);av.se(0);
	while(up[u]!=up[v]){
		if(h[up[u]]<h[up[v]]){
			swap(u,v);
			swap(au,av);
			sg^=1;
		}
		l1=id[up[u]],r1=id[u],V.se(0),que(1,n,1);
		au=V+au;
		u=pre[up[u]];
	}
	if(u!=v){
		if(h[u]<h[v]){
			swap(u,v);
			swap(au,av);
			sg^=1;
		}
		l1=id[v]+1,r1=id[u],V.se(0),que(1,n,1);
		au=V+au;
	}
	if(sg){
		swap(au,av);
	}
	au.rev();
	return au+av;
}
int main()
{
	memset(g,-1,sizeof(g));
	gn(n);
	for (int i=1;i<=n;i++)fa[i]=i;
	for (int i=1;i<=n;i++){
		int x,y,z;
		gn(x);gn(y);gn(z);
		int p=gf(x),q=gf(y);
		if(p==q){
			s=x,t=y,sw=z;
		}else{
			ae(x,y,z);
			ae(y,x,z);
			fa[p]=q;
		}
	}
	init(1);
	build(1,n,1);
	st.se(sw);
	int q;gn(q);
	while(q--){
		char c;while((c=getchar())!='f' && c!='?');
		int u,v;gn(u);gn(v);
		int d1=dis(u,v),d2=dis(u,s)+1+dis(t,v),d3=dis(u,t)+1+dis(s,v);
		if(d2>d3){
			swap(u,v);swap(d2,d3);
		}
		if(c=='f'){
			if(d1<d2)work(u,v);
			else work(u,s),st.minus(),work(t,v);
		}else{
			data ans;
			if(d1<d2)ans=query(u,v);
			else{
				ans=query(u,s);
				ans=ans+st;
				ans=ans+query(t,v);
			}
			printf("%d\n",ans.ima);
		}
	}
	return 0;
}
