#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
int fib[15];
int c[15];
int f[15];
int g[105][80002];
int huan[105];
namespace li{
	#define p_size 70
	#define d_size 40
	int p;
	int d,f[d_size],c[d_size],a[d_size],tmp[d_size],n_[p_size];
	
	void mult(int *a,int *b)
	{
		int i,j,k;
		for(j=1;j<=d+d;++j)tmp[j]=0;
		for(j=1;j<=d;++j)
		for(k=1;k<=d;++k)
		tmp[j+k]=(tmp[j+k]+(long long)a[j]*b[k])%p;
		for(j=1;j<=d;++j)
		for(k=1;k<=d;++k)
		tmp[j+k]=(tmp[j+k]+(long long)tmp[j]*c[k])%p;
		for(j=1;j<=d;++j)a[j]=tmp[j+d];
	}
	
	int calc(long long n)
	{
		int i,j,k,p_=0;long long m;
		if(n<d)return f[n];
		for(m=n/d;m;m>>=1)n_[++p_]=m&1;
		for(i=1;i<=d;++i)a[i]=c[i];
		for(i=1;i<=d;++i)a[i+d]=0;
		for(i=p_-1;i;--i)
		{
			mult(a,a);
			if(n_[i])mult(a,c);
		}
		for(i=1,k=n%d;i<=k;++i)
		for(j=1;j<=d;++j)
		a[i+j]=(a[i+j]+(long long)a[i]*c[j])%p;
		for(i=1;i<=d;++i)a[i]=a[i+k];
		for(i=1,k=0;i<=d;++i)k=(k+(long long)a[i]*f[d-i])%p;
		return k;
	}
};
int main(){
	fib[1]=1;
	rep(i,2,12)fib[i]=fib[i-1]+fib[i-2];
	rep(i,3,12){
		rep(j,1,i-1)rep(k,1,i-j-1)
		f[i]+=fib[j]*fib[k]*fib[i-j-k]*6*k*j*(i-j-k);
	}
	c[0]=1;
	rep(i,1,6)
	per(j,12,0)
	c[j+1]-=c[j],c[j+2]-=c[j];
	rep(i,1,12)c[i]*=-1;
	
	for(int p=1;p<=100;p++){
		rep(i,1,12)g[p][i]=f[i]%p;
		for(int i=13;i;i++){
			rep(j,1,12)g[p][i]=((g[p][i]+g[p][i-j]*c[j])%p+p)%p;
			bool fl=1;
			rep(j,1,12)if(g[p][j]!=g[p][i-(12-j)]){fl=0;break;}
			if(fl){huan[p]=i-12;break;}
		}
	}
	int T;scanf("%d",&T);
	while(T--){
		int p;scanf("%d",&p);
		if(p<=100){
			LL n;scanf("%lld",&n);
			printf("%d\n",g[p][n%huan[p]]);
			continue;
		}
		LL n;scanf("%lld",&n);
		li::p=p;
		rep(i,1,12)li::c[i]=(c[i]%p+p)%p;
		rep(i,1,12)li::f[i]=(f[i]%p+p)%p;
		li::d=12;
		printf("%d\n",li::calc(n));
	}
	return 0;
}

