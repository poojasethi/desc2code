#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
//const int mo=1000000007;
int mo;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

int a[13]={0,0,0,1,0,3,0,3,0,1,0,0,0};
int b[13]={1,-6,9,10,-30,-6,41,6,-30,-10,9,6,1};
int f[13];


struct poly{
	int c[12];
}uno,ini;
ll tmp[30];
poly operator *(const poly&a,const poly&b){
	for (int i=0;i<24;i++)tmp[i]=0;
	for (int i=0;i<12;i++)
		for (int j=0;j<12;j++)
			tmp[i+j]+=1ll*a.c[i]*b.c[j];
	for (int i=22;i>=12;i--){
		tmp[i]%=mo;
		for (int j=1;j<=12;j++)tmp[i-j]-=tmp[i]*::b[j];
	}
	poly c;
	for (int i=0;i<=11;i++)c.c[i]=tmp[i]%mo;
	return c;
}
poly qp(poly a,ll b){
	poly ans=ini;
	do{
		if(b&1)ans=ans*a;
		a=a*a;
	}while(b>>=1);
	return ans;
}

int an[200][311111];
int len[200];

int check(int mo,int i){
	for (int j=0;j<12;j++)if(an[mo][j]!=an[mo][i+j])return 0;
	return 1;
}
void pre(int mo){
	for (int i=0;i<12;i++)an[mo][i]=(f[i]%mo+mo)%mo;
	for (int i=12;;i++){
		ll su=0;
		for (int j=1;j<=12;j++)su-=b[j]*an[mo][i-j];
		an[mo][i]=(su%mo+mo)%mo;
		if(check(mo,i-12+1)){
			len[mo]=i-12+1;
			break;
		}
	}
}
int main()
{
	/*freopen("1.in","r",stdin);
	freopen("1.out","w",stdout);*/
	ini.c[0]=1;
	uno.c[1]=1;
	for (int i=0;i<13;i++){
		int su=a[i];
		for (int j=0;j<i;j++)su-=f[j]*b[i-j];
		f[i]=su;
	}
	for (int i=2;i<=199;i++)pre(i);
	int tes;scanf("%d",&tes);
	while(tes--){
		gn(mo);
		ll n;
		gn(n);
		if(mo==1){
			printf("0\n");
			continue;
		}
		if(mo<=199){
			int ret=an[mo][n%len[mo]];
			printf("%d\n",int((1ll*ret*6)%mo));
			continue;
		}
		poly an=qp(uno,n);
		ll ans=0;
		for (int i=0;i<12;i++)ans+=1ll*an.c[i]*f[i];
		ans*=6;
		ans=(ans%mo+mo)%mo;
		printf("%d\n",int(ans));
	}
	return 0;
}
