#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
typedef long long ll;
#define pct __builtin_popcount
#define P 1000000007
#define N2 1000010
#define N 5010
#define M 50000
#define K 110
int x0,y0,x1,y1,sx,sy,px[K],py[K],n,he[N],he2[N],ne[M],ne2[M],ad[M],ad2[M],t,F[N2],IF[N2],f[K][K];bool g[N];
void addE(int x,int y)
{
	++t,ne[t]=he[x],he[x]=t,ad[t]=y;
	ne2[t]=he2[y],he2[y]=t,ad2[t]=x;
}
bool v[N];int st[N],sn,w,c[N],s[N],f2[N];bool v3[N],v4[N];
void ff1(int x)
{
	v[x]=1;
	for(int p=he[x];p;p=ne[p])
		if(!v[ad[p]])ff1(ad[p]);
	st[sn++]=x;
}
void ff2(int x,int y)
{
	v[x]=0,c[x]=y;
	for(int p=he2[x];p;p=ne2[p])
		if(v[ad2[p]])ff2(ad2[p],y);
}
void ff3(int x)
{
	v3[x]=1;
	for(int p=he[x];p;p=ne[p])
		if(!v3[ad[p]])ff3(ad[p]);
}
void ff4(int x)
{
	v4[x]=1;
	for(int p=he2[x];p;p=ne2[p])
		if(!v4[ad2[p]])ff4(ad2[p]);
}
int gg(int x)
{
	if(v[x])return f2[x];
	v[x]=1;
	int&S=f2[x];
	for(int p=he[x];p;p=ne[p])
		if(s[c[ad[p]]]==1)(S+=gg(ad[p]))%=P;
	return S;
}
int ff(int L,int R,int n)
{
	sn=w=0,memset(v,0,sizeof v);
	for(int i=0;i<n;i++)if(!v[i])ff1(i);
	for(int i=n-1;i>=0;i--)
		if(v[st[i]])ff2(st[i],w),w++;
	memset(s,0,sizeof s);
	for(int i=0;i<n;i++)s[c[i]]++;
	if(c[L]==c[R])return s[c[L]]>=2?-1:1;
	memset(v3,0,sizeof v3),
	memset(v4,0,sizeof v4),
	ff3(L),ff4(R);
	for(int i=0;i<n;i++)
		if(v3[i]&&v4[i]&&s[c[i]]>=2)return -1;
	if(!v3[R])return 0;
	memset(v,0,sizeof v),
	memset(f2,0,sizeof f2),
	v[R]=1,f2[R]=1;
	return gg(L);
}
int pow(int x,int y)
{
	int s=1,t=x;
	for(;y;t=(ll)t*t%P,y/=2)
		if(y&1)s=(ll)s*t%P;
	return s;
}
int C(int x,int y)
{
	if(x<y)return 0;
	return (ll)F[x]*IF[x-y]%P*IF[y]%P;
}
int main()
{
	F[0]=1;for(int i=1;i<N2;i++)F[i]=(ll)F[i-1]*i%P;
	IF[N2-1]=pow(F[N2-1],P-2);
	for(int i=N2-2;i>=0;i--)IF[i]=(ll)IF[i+1]*(i+1)%P;
	int _;scanf("%d",&_);
	while(_--)
	{
		scanf("%d%d%d%d%d%d%d",&sx,&sy,&n,&x0,&y0,&x1,&y1);
		for(int i=0;i<n;i++)scanf("%d%d",px+i,py+i);
		if(sx<0)
		{
			sx=-sx,x0=-x0,x1=-x1;
			for(int i=0;i<n;i++)px[i]=-px[i];
		}
		if(sy<0)
		{
			sy=-sy,y0=-y0,y1=-y1;
			for(int i=0;i<n;i++)py[i]=-py[i];
		}
		if(abs(x0)+abs(x1)<abs(y0)+abs(y1))
		{
			swap(x0,y0),swap(x1,y1),swap(sx,sy);
			for(int i=0;i<n;i++)swap(px[i],py[i]);
		}
		if(abs(x0)<abs(x1))swap(x0,x1),swap(y0,y1);
		px[n]=py[n]=0,px[n+1]=sx,py[n+1]=sy;
		if(x0*y1!=x1*y0)
			if((sx*y1-sy*x1)%(x0*y1-y0*x1)!=0||(sx*y0-sy*x0)%(x1*y0-y1*x0)!=0)puts("0");else
			{
				for(int i=0;i<n;i++)
					for(int j=i+1;j<n;j++)
					{
						int tx=px[i]-px[j],ty=py[i]-py[j];
						if((tx*y1-ty*x1)%(x0*y1-y0*x1)==0&&(tx*y0-ty*x0)%(x1*y0-y1*x0)==0)
							if((tx*y1-ty*x1)/(x0*y1-y0*x1)>=0&&(tx*y0-ty*x0)/(x1*y0-y1*x0)>=0)
								swap(px[i],px[j]),swap(py[i],py[j]);
					}
				memset(f,0,sizeof f);
				for(int i=0;i<n+2;i++)
					for(int j=0;j<n+2;j++)
					{
						int tx=px[j]-px[i],ty=py[j]-py[i];
						if((tx*y1-ty*x1)%(x0*y1-y0*x1)==0&&(tx*y0-ty*x0)%(x1*y0-y1*x0)==0)
						{
							int A=(tx*y1-ty*x1)/(x0*y1-y0*x1),B=(tx*y0-ty*x0)/(x1*y0-y1*x0);
							if(A>=0&&B>=0)f[i][j]=C(A+B,B);
						}
					}
				memset(f2,0,sizeof f2);
				int S=f[n][n+1];
				for(int i=0;i<n;i++)
				{
					f2[i]=f[n][i];
					for(int j=0;j<i;j++)
						(f2[i]+=P-(ll)f2[j]*f[j][i]%P)%=P;
					(S+=P-(ll)f2[i]*f[i][n+1]%P)%=P;
				}
				printf("%d\n",S);
			}else
		if(sx*y1!=sy*x1)puts("0");else
		if(x0==0)puts(sx==0&&sy==0?"-1":"0");else
		if(x1==0)
		{
			if(sx%x0!=0){puts("0");continue;}
			int c=sx/x0;
			if(c<0||c*y0!=sy){puts("0");continue;}
			bool F=1;
			for(int i=0;i<c;i++)
				for(int j=0;j<n;j++)
					if(px[j]==i*x0&&py[j]==i*y0)F=0;
			puts(F?"-1":"0");
		}else
		if(x0<0&&x1<0)puts(sx==0&&sy==0?"1":"0");else
		if(x0>0&&x1>0)
		{
			memset(g,0,sizeof g);
			for(int i=0;i<n;i++)
				if(px[i]*y1==py[i]*x1&&0<=px[i]&&px[i]<=sx)g[px[i]]=1;
			memset(f2,0,sizeof f2),f2[0]=1;
			for(int i=1;i<=sx;i++)
				if(!g[i])f2[i]=((i>=x0?f2[i-x0]:0)+(i>=x1&&x1!=x0?f2[i-x1]:0))%P;
			printf("%d\n",f2[sx]);
		}else
		{
			int c=abs(__gcd(x0,x1));
			if(sx%c!=0){puts("0");continue;}
			int mi=0,ma=sx/c;
			for(int i=0;i<n;i++)
				if(px[i]*y1==py[i]*x1&&px[i]%c==0)
					mi=min(mi,px[i]/c),ma=max(ma,px[i]/c);
			int xc=abs(x0/c)+1,SH=xc-mi,ri=xc*2+ma-mi+1;
			memset(g,0,sizeof g);
			for(int i=0;i<n;i++)
				if(px[i]*y1==py[i]*x1&&px[i]%c==0)g[SH+px[i]/c]=1;
			memset(he,0,sizeof he),
			memset(he2,0,sizeof he2),t=0;
			for(int i=mi-xc;i<mi-1;i++)
				addE(SH+i,SH+i+1),addE(SH+i+1,SH+i);
			for(int i=ma+1;i<ma+xc;i++)
				addE(SH+i,SH+i+1),addE(SH+i+1,SH+i);
			for(int i=0;i<ri;i++)
			{
				if(i+x0/c>=0&&i+x0/c<ri&&!g[i]&&!g[i+x0/c])addE(i,i+x0/c);
				if(i+x1/c>=0&&i+x1/c<ri&&!g[i]&&!g[i+x1/c])addE(i,i+x1/c);
			}
			printf("%d\n",ff(SH,SH+sx/c,ri));
		}
	}
	return 0;
}
 