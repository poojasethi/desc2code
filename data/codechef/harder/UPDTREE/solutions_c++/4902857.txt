#pragma comment(linker, "/STACK:60777216")
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<vector>
#include<cassert>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define ll long long
#define ST pair<ll,ll>
#define mp make_pair
#define f first
#define s second
#define lim 100001
ll t,z,n,m1,m2,x,y,u,v,i,j,a,b;
ST p;
vector<ll> V[lim];
ll P[lim],start[lim],prefix[lim],S[lim],F[lim],Z[lim],Sum[lim],M[lim][20];
void dfs(ll x)
{
   ll i,y;
   start[x]=t++;
   for(i=0;i<V[x].size();i++)
   {
      y=V[x][i];
      if(P[y]==-1)
      {
         P[y]=x;
         dfs(y);
      }
   }
   F[x]=t++;
   Z[z++]=x;
}
void dfs2(ll x)
{
   ll i,y;
   prefix[x]=S[x];
   for(i=0;i<V[x].size();i++)
   {
      y=V[x][i];
      if(y!=P[x])
      {
         dfs2(y);
         prefix[x]+=prefix[y];
      }
   }
}
void dfs3(ll x)
{
   ll i,y;
   for(i=0;i<V[x].size();i++)
   {
      y=V[x][i];
      if(y!=P[x])
      {
         Sum[y]=Sum[x]+prefix[y];
         dfs3(y);
      }
   }
}
bool ancestor(ll x,ll y)
{
	if(x==-1)
	  return 1;
   return start[x]<=start[y] && F[y]<=F[x];
}
ll lca(ll x,ll y)
{
   ll z=x,i;
   if(ancestor(x,y))
      return x;
   if(ancestor(y,x))
      return y; 
   for(i=0;!ancestor(M[z][i],y);i++);
   for(;i>=0;i--)
     if(!ancestor(M[z][i],y))   
       z=M[z][i];
   return P[z];
}
ST f(ll x,ll y,ll a,ll b)
{
   ll u,v,mn,mx;
   u=lca(y,a);
   v=lca(x,b);
   if(!ancestor(u,y) || !ancestor(v,b))
      return mp(0,0);
   mn=lca(y,b);
   mx=lca(x,a);
   if(mx==x)
      mx=a;
   else
      mx=x;
   if(ancestor(mx,mn))
      return mp(mx,mn);
   else
      return mp(0,0);
}
int main()
{
   int i1,i2,i3,i4;
   cin>>n>>m1>>m2;
   assert(n<lim);
   for(i=0;i+1<n;i++)
   {
      scanf("%d%d",&i1,&i2);
      x=i1-1;
      y=i2-1;
      V[x].push_back(y);
      V[y].push_back(x);
   }
   memset(P,-1,sizeof P);
   P[0]=0;
   dfs(0);
   memset(M,-1,sizeof M);
   for(i=n-1;i>=0;i--)
   {
      x=Z[i];
      if(x)
        M[x][0]=P[x];
      else
        M[x][0]=-1;
      for(j=1;;j++)
      {
         if(M[x][j-1]==-1)
         {
            M[x][j]=-1;
            break;
         }
         else
            M[x][j]=M[M[x][j-1]][j-1];
      }
   }
   for(i=0;i<m1;i++)
   {
      scanf("%d%d%d%d",&i1,&i2,&i3,&i4);
      x=i1-1;
      y=i2-1;
      a=i3-1;
      b=i4-1;
      u=lca(x,y);
      v=lca(a,b);
      S[x]++;
      S[y]++;
      S[u]-=2;
      p=f(u,x,v,a);
      S[p.f]++;
      S[p.s]--;
      p=f(u,x,v,b);
      S[p.f]++;
      S[p.s]--;
      p=f(u,y,v,a);
      S[p.f]++;
      S[p.s]--;
      p=f(u,y,v,b);
      S[p.f]++;
      S[p.s]--;
   }
   dfs2(0);
   Sum[0]=prefix[0];
   dfs3(0);
   while(m2--)
   {
      scanf("%d%d",&i1,&i2);
      x=i1-1;
      y=i2-1;
      u=lca(x,y);
      cout<<Sum[x]+Sum[y]-2*Sum[u]<<"\n";
   }
   return 0;
}
