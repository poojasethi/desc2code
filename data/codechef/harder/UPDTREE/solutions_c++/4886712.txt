/*
 
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
 
#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash
 
#define eps 1e-6
//#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 256
#define right adsgasgadsg
 
using namespace std;
 
long tin[1<<18],tout[1<<18];
long timer;
vector<long> up[1<<18];
long l;
vector<long> g[1<<18];
long n,m1,m2;
long a,b;
long long cost[1<<18];
long long ans[1<<18];
long q;
long c,d,t;
 
void dfs(long v,long p)
{
 tin[v]=timer;
 ++timer;
 up[v][0]=p;
 for (int i=1;i<=l;i++)
 {
     up[v][i]=up[up[v][i-1]][i-1];
 }
 for (int i=0;i<g[v].size();i++)
 {
     long to=g[v][i];
     if (to!=p)
      dfs(to,v);
 }
 ++timer;
 tout[v]=timer;
}
 
bool upper(long a,long b)
{
 return tin[a]<=tin[b]&&tout[a]>=tout[b];
}
 
long lca(long a,long b)
{
 if (upper(a,b))return a;
 if (upper(b,a))return b;
 for (int i=l;i>=0;--i)
  if (!upper(up[a][i],b))
   a=up[a][i];
  return up[a][0];
}
 
void upd(long a,long b,long val)
{
//     cout<<"@@"<<a<<" "<<b<<" "<<val<<endl;
 cost[a]-=val;
 cost[b]+=val;
/*for (int i=0;i<n;i++)
  cout<<cost[i]<<" ";
  cout<<endl;*/
}
 
void solve(long v,long p,long ag)
{
 for (int i=0;i<g[v].size();i++)
 {
  long q=g[v][i];
  if (q==p)continue;
  solve(q,v,0);
  cost[v]+=cost[q];
 }
}
 
void dodel(long a1,long a2,long b1,long b2)
{
 // b1 - a1 - a2 - b2
 if (upper(b1,a1)&&upper(a1,a2)&&upper(a2,b2))
  upd(a1,a2,-1);
  else // a1 - b1 - b2 - a2
  if (upper(a1,b1)&&upper(b1,b2)&&upper(b2,a2))
   upd(b1,b2,-1);
   else // b1 - a1 - b2 - a2
   if (upper(b1,a1)&&upper(a1,b2)&&upper(b2,a2))
    upd(a1,b2,-1);
    else // a1-b1-a2-b2
    if (upper(a1,b1)&&upper(b1,a2)&&upper(a2,b2))
    upd(b1,a2,-1);
}
 
void solve1(long v,long p)
{
 for (int i=0;i<g[v].size();i++)
 {
  long q=g[v][i];
  if (q==p)continue;
  cost[q]+=cost[v];
  solve1(q,v);
 }
}
 
int main(){
//freopen("paired.in","r",stdin);
//freopen("paired.out","w",stdout);
//freopen("C:/input.txt","r",stdin);
//freopen("C:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);
 
l=18;
for (int i=0;i<(1<<18);i++)
 up[i].resize(20);
 
cin>>n>>m1>>m2;
for (int i=1;i<n;i++)
{
    cin>>a>>b;
    --a;
    --b;
    g[a].push_back(b);
    g[b].push_back(a);
}
 
dfs(0,0);
 
/*while (cin>>a>>b)
{
 --a;
 --b;
 cout<<lca(a,b)<<endl;
}*/
 
for(int i=0;i<m1;i++)
{
 cin>>a>>b>>c>>d;
 --a;
 --b;
 --c;
 --d;
 // add on path
 t=lca(a,b);
 upd(t,a,1);
 upd(t,b,1);
 // del on path
 q=lca(c,d);
 dodel(q,c,t,lca(c,a));
 dodel(q,c,t,lca(c,b));
 dodel(q,d,t,lca(d,a));
 dodel(q,d,t,lca(d,b));
/* for (int qq=0;qq<n;qq++)
 cout<<cost[qq]<<" ";
 cout<<endl;*/
}
 
/*for (int i=0;i<n;i++)
cout<<i<<"&"<<cost[i]<<endl;
*/
solve(0,0,0);
 
solve1(0,0);
 
for (;m2;--m2)
{
 cin>>a>>b;
 --a;--b;
 t=lca(a,b);
 cout<<cost[a]+cost[b]-2*cost[t]<<"\n";
}
/*for (int i=0;i<n;i++)
cout<<i<<"^"<<ans[i]<<endl;
for (int i=0;i<n;i++)
cout<<i<<"&"<<cost[i]<<endl;
*/
cin.get();cin.get();
return 0;}  
