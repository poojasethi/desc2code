#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
struct Set {
	int rep,n,m;
};
struct Edge {
	int a,b,w;
};
inline bool operator<(const Edge &e1,const Edge &e2) {
	return e1.w>e2.w;
}

const int maxN=10100,maxM=50100;
Set set[maxN];
int getRep(int x) {
	return (set[x].rep==x)?x:(set[x].rep=getRep(set[x].rep));
}
Edge e[maxM];
int main() {
	int T;
	for(scanf("%d",&T);T;T--){
		int n,m;
		scanf("%d%d",&n,&m);
		for(int i=1;i<=m;i++)
		    scanf("%d%d%d",&e[i].a,&e[i].b,&e[i].w);

		sort(e+1,e+m+1);
		for(int i=1;i<=n;i++) {
			set[i].rep=i;
			set[i].n=1;
			set[i].m=0;
		}
		int ans=0,cnt=0;
		for(int i=1;i<=m;i++) {
			//printf("%d %d %d\n",e[i].a,e[i].b,e[i].w);
			int a=getRep(e[i].a),b=getRep(e[i].b);
			
			if(a==b) {
				if(set[a].m<set[a].n) {
					//printf("sel\n");
					set[a].m++;
					cnt++,ans+=e[i].w;
				}
			} else {
				int n2=set[a].n+set[b].n;
				int m2=set[a].m+set[b].m+1;
				if(m2<=n2) {
                    //printf("sel\n");
					set[b].rep=a;

					set[a].n=n2,set[a].m=m2;
					cnt++,ans+=e[i].w;
					
					//printf("[%d][%d]\n",set[a].m,set[a].n);
				}
			}
		}
		if(cnt==n)
			printf("%d\n",ans);
		else
		    puts("impossible");
	}
	scanf("%*s");
}
