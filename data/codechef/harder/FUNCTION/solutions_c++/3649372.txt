#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back
#define COUT(S,x) cout<<fixed<<setprecision(x)<<S<<endl

typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
inline char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int N=10010;
const int M=50010;
int T,n,m,i,j,k,l,p,x,y,x0,y0,cnt,tot;
struct node{int x,y,z;}a[M];
bool cmp(node a,node b){return a.z>b.z;}

int f[N],s[N];
int get(int i){return f[i]==i?i:f[i]=get(f[i]);}

int main()
{
    //freopen(".in","r",stdin);
	//freopen(".out","w",stdout);
	
	for(read(T);T;T--)
	{
		read(n);read(m);
		rep(i,1,m)read(a[i].x),read(a[i].y),read(a[i].z);
		sort(a+1,a+1+m,cmp);
		
		rep(i,1,n)f[i]=i,s[i]=0;
		
		cnt=0;tot=0;
		rep(i,1,m)
		{
			x=a[i].x;
			y=a[i].y;
			x0=get(x);
			y0=get(y);
			if(x0!=y0)
			{
				if(s[x0]+s[y0]<=1)
				{
					s[x0]+=s[y0];
					f[y0]=x0;
					cnt++;tot+=a[i].z;
				}
			}
			else
			{
				if(s[x0]==0)
				{
					s[x0]++;
					cnt++;tot+=a[i].z;
				}
			}
		}
		
		if(cnt==n)printf("%d\n",tot);else printf("impossible\n");
	}
	
    scanf("\n");
    return 0;
}
