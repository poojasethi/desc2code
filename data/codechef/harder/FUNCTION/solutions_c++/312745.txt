#include <stdio.h>
#include <math.h>
#include <time.h>
#include <string.h>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <string>
#include <vector>
#include <set>
#include <map>
#pragma comment(linker, "/STACK:16777216")
using namespace std;

typedef vector<int> VI;
typedef pair<int,int> PII;
#ifndef ONLINE_JUDGE
typedef __int64 LL;
#else
typedef long long LL;
#endif

#define bit(n) (1<<(n))
#define inf 1000000000
#define eps 1e-9
#define PI 3.1415926535897932385
#define pb push_back
#define sz size()
#define mp make_pair
#define cl clear()
#define all(a) a.begin(),a.end()
#define fill(ar,val) memset(ar,val,sizeof ar)
#define MIN(a,b) if(a>(b)) a=(b)
#define MAX(a,b) if(a<(b)) a=(b)
#define sqr(x) ((x)*(x))
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))

//clock_t start=clock();
//fprintf(stderr,"time=%.3lfsec\n",0.001*(clock()-start));

struct edge
{
	int u,v,c;
	edge(){}
	edge(int u_,int v_,int c_){u=u_;v=v_;c=c_;}
	bool operator<(const edge &a) const
	{
		return c>a.c;
	}
};

#define N 10001
#define M 50001

int p[N];
bool cyc[N];
edge a[M];

int find_set(int x)
{
	int y,z,t;
	for(y=x;y!=p[y];y=p[y]);
	for(z=x;z!=y;t=p[z],p[z]=y,z=t);
	return y;
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	#endif
	int T;
	for(scanf("%d",&T);T--;)
	{
		int n,m,i;
		scanf("%d%d",&n,&m);
		for(i=0;i<m;i++)
			scanf("%d%d%d",&a[i].u,&a[i].v,&a[i].c);
		sort(a,a+m);
		for(i=1;i<=n;i++)
		{
			p[i]=i;
			cyc[i]=0;
		}
		int ans=0;
		int cnt=0;
		for(i=0;i<m;i++)
		{
			int x=find_set(a[i].u);
			int y=find_set(a[i].v);
			if(x==y)
			{
				if(!cyc[x])
				{
					ans+=a[i].c;
					cnt++;
					cyc[x]=1;
				}
			}
			else
			{
				if(cyc[x]+cyc[y]<=1)
				{
					ans+=a[i].c;
					cnt++;
					p[y]=x;
					if(cyc[x] || cyc[y]) cyc[x]=1;
				}
			}
		}
		if(cnt<n) puts("impossible"); else printf("%d\n",ans);
	}
	return 0;
}
