#include<iostream>
#include<cstdio>
using namespace std;

typedef long long int64;

#define MAXN 1001

int64 MOD = 1000000007;
int64 fact[MAXN], ifact[MAXN];

int64 pow(int64 a, int64 p, int64 MOD)
{
    int64 b = a%MOD, ans =1;
    while(p)
    {
        if(p&1LL)
        {
            ans *= b;
            ans %= MOD;
        }
        b *= b;
        b %= MOD;
        p /= 2;
    }
    return ans;
}

void compute()
{
    fact[0] = 1;
    ifact[0] = 1;

    for(int i=1; i<MAXN; i++)
    {
        fact[i] = fact[i-1]*i;
        fact[i] %= MOD;

        ifact[i] = ifact[i-1]*pow(i, MOD-2, MOD);
        ifact[i] %= MOD;
    }
}

int64 nCr(int64 n, int64 r, int64 MOD)
{
    int64 ans = fact[n]*ifact[r];
    ans %= MOD;
    ans *= ifact[n-r];
    ans %= MOD;
    return ans;
}

void solve()
{
    int64 N, D, ans1 = 0, ans2 = 0, ans,  x, y, z;
    scanf("%lld%lld", &N, &D);

    for(int64 i=0; i<=N; i++)
    {
        x = pow(D, i, MOD-1)*pow(D+1, N-i, MOD-1);
        x %= MOD-1;
        y = pow(2LL, x, MOD);
        z = nCr(N, i, MOD)* y;
        z %= MOD;
        if (i&1LL)
        {
            z *= -1;
            z %= MOD;
        }
        ans1 += z;
        ans1 %= MOD;
    }
    D--;
    for(int64 i=0; i<=N; i++)
    {
        x = pow(D, i, MOD-1)*pow(D+1, N-i, MOD-1);
        x %= MOD-1;
        y = pow(2LL, x, MOD);
        z = nCr(N, i, MOD)* y;
        z %= MOD;
        if (i&1LL)
        {
            z *= -1;
            while(z<0)z += MOD;
        }
        ans2 += z;
        ans2 %= MOD;
    }
    ans = ans1- ans2;
    while(ans <0) ans += MOD;
    printf("%lld\n", ans);
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    #endif

    int64 a = 2, p;
    compute();
    int t;
    scanf("%d", &t);
    while(t--)
    {
        solve();
    }
}
