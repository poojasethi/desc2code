#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
typedef long long LL;
const int Maxn=1005,mod=1000000007;
int T,n,d;
int C[Maxn][Maxn];

int Pow(int a,int x,int mod) {
	int ret=1;
	for (;x;x>>=1,a=LL(a)*a%mod)
		if (x&1) ret=LL(ret)*a%mod;
	return ret;
}

int solve(int n,int d) {
	int ret=0;
	for (int i=0;i<=n;i++) {
		int tmp=LL(C[n][i])*Pow(2,LL(Pow(d,i,mod-1))*Pow(d+1,n-i,mod-1)%(mod-1),mod)%mod;
		ret=(ret+((i&1)?-1:1)*tmp)%mod;
	}
	return ret;
}

int main() {
	for (int i=0;i<=1000;i++) {
		C[i][0]=1;
		for (int j=1;j<=i;j++) {
			C[i][j]=C[i-1][j-1]+C[i-1][j];
			if (C[i][j]>=mod) C[i][j]-=mod;
		}
	}
	for (cin>>T;T;T--) {
		cin>>n>>d;
		int ans=(solve(n,d)-solve(n,d-1))%mod;
		cout<<(ans+mod)%mod<<endl;
	}
	return 0;
}