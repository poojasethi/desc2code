#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;
int c[1111][1111];


int f(int n,int d){
	int su=0;
	for (int i=0,sg=1;i<=n;i++,sg*=-1){
		int sz;
		sz=qp(2,1ll*qp(d+1,n-i,mo-1)*qp(d,i,mo-1)%(mo-1),mo);
		su=(su+1ll*c[n][i]*sz*sg)%mo;
	}
	return su;
}
int main()
{
	c[0][0]=1;
	for (int i=1;i<=1100;i++){
		c[i][0]=1;
		for (int j=1;j<=i;j++)c[i][j]=(c[i-1][j]+c[i-1][j-1])%mo;
	}
	int tes;scanf("%d",&tes);
	while(tes--){
		int n,d;
		scanf("%d%d",&n,&d);
		printf("%d\n",((f(n,d)-f(n,d-1))%mo+mo)%mo);
	}
	return 0;
}
