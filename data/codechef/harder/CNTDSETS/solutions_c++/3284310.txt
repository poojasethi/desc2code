#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <string>
#include <cassert>

using namespace std;
typedef long long LL;
typedef pair<int,int> pii;

#define forup(i,a,b) for(int i=a; i<b; ++i)
#define fordn(i,a,b) for(int i=a; i>b; --i)
#define rep(i,a) for(int i=0; i<a; ++i)

#define dforup(i,a,b) for(i=a; i<b; ++i)
#define dfordn(i,a,b) for(i=a; i>b; --i)
#define drep(i,a) for(i=0; i<a; ++i)

#define slenn(s,n) for(n=0; s[n]!=13 and s[n]!=0; ++n);s[n]=0

#define gi(x) scanf("%d",&x)
#define gl(x) cin>>x
#define gd(x) scanf("%lf",&x)
#define gs(x) scanf("%s",x)

#define pis(x) printf("%d ",x)
#define pin(x) printf("%d\n",x)
#define pls(x) cout<<x<<" "
#define pln(x) cout<<x<<"\n"
#define pds(x) printf("%.12f ",x)
#define pdn(x) printf("%.12f\n",x)
#define pnl() printf("\n")

#define fs first
#define sc second

#define pb push_back

const int inv=1000000000;
const int minv=-inv;

const int max_n=1010;
const LL modref=1000000007ll;

LL fpow(LL a, LL p)
{
	if(p==0ll) return 1ll;
	else
	{
		LL t=fpow(a,p/2ll);
		t*=t; t%=modref;

		if(p%2ll==1ll) { t*=a; t%=modref; }
		return t;
	}
}

LL ch[max_n+1][max_n+1];

LL p0[max_n+1];
LL p1[max_n+1];
LL solve(int n, int d)
{
	p0[0]=1ll; p1[0]=1ll;
	forup(i,1,n+1)
	{
		p0[i]=p0[i-1]*(LL(d)); p0[i]%=(modref-1ll);
		p1[i]=p1[i-1]*(LL(d+1)); p1[i]%=(modref-1ll);
	}

	LL res=0ll;
	for(int i=0; i<=n; ++i)
	{
		LL p=(p0[i]*p1[n-i])%(modref-1ll);

		LL dres=fpow(2ll,p);
		dres*=ch[n][i];
		dres%=modref;
		if(i%2==1)
		{
			dres=modref-dres;
			dres%=modref;
		}

		res+=dres;
		res%=modref;
	}

	return res;
}

int T;
int n,d;

int main()
{
	for(int i=0; i<=max_n; ++i)
	{
		ch[i][0]=1ll; ch[i][i]=1ll;
		for(int j=1; j<i; ++j)
		{
			ch[i][j]=ch[i-1][j]+ch[i-1][j-1];
			ch[i][j]%=modref;

			//if(i<=10)
				//cout<<i<<" "<<j<<" "<<ch[i][j]<<"\n";
		}
	}

	gi(T);

	rep(z,T)
	{
		gi(n); gi(d);

		/*if(d==1)
		{
			pin(n);
			continue;
		}*/

		//cout<<"res: "<<res<<"\n";

		LL res=(solve(n,d)+modref-solve(n,d-1))%modref;
		pln(res);
	}
	
	return 0;
}