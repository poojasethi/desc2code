#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<vector>
#include<map>
#include<queue>
#include<string>
#include<bitset>
#include<iomanip>
#include<iostream>
#include<cmath>
#include<complex>
using namespace std;

#define rep(i,x,y) for(i=x;i<=y;i++)
#define _rep(i,x,y) for(i=x;i>=y;i--)
#define CL(S,x) memset(S,x,sizeof(S))
#define CP(S1,S2) memcpy(S1,S2,sizeof(S2))
#define ALL(x,S) for(x=S.begin();x!=S.end();x++)
#define sqr(x) ((x)*(x))
#define mp make_pair
#define fi first
#define se second
#define upmin(x,y) x=min(x,y)
#define upmax(x,y) x=max(x,y)
#define pb push_back

typedef long long ll;
typedef long double real;
typedef pair<int,int> pii;

template<class T> inline void read(T&x){bool fu=0;char c;for(c=getchar();c<=32;c=getchar());if(c=='-')fu=1,c=getchar();for(x=0;c>32;c=getchar())x=x*10+c-'0';if(fu)x=-x;};
char getc(){char c;for(c=getchar();c<=32;c=getchar());return c;}

const int mod=1337;
int T,n,i,j,k,l,p;
char a[110];

int x[110][7][2][2],d[110][7][2][2];bool v[110][7][2][2];

pair<int,int> get(int i,bool less,int mo,bool h,bool zz)
{
	if(less&&v[i][mo][h][zz])return mp(x[i][mo][h][zz],d[i][mo][h][zz]);
	if(less)v[i][mo][h][zz]=1;
	
	bool l2,h2,z2;int m2;
	bool fir=1;int X,D;pii u;
	
	if(i==0){X=0;D=1;if(zz){X=1;if(h||(mo==0))D=-1;}}
	else
	for(int j=0;j<=((less)?9:(a[i]-'0'));j++)
	{
		l2=less|(j<(a[i]-'0'));
		m2=(mo*10+j)%7;
		h2=h|(j==7);
		z2=zz|(j>0);
		u=get(i-1,l2,m2,h2,z2);
		if(fir)fir=0,X=u.fi,D=u.se;
		else{X=(X+D*u.fi)%mod;D*=u.se;}
	}
	if(less)x[i][mo][h][zz]=X,d[i][mo][h][zz]=D;
	return mp(X,D);
}
int main()
{
    //freopen(".in","r",stdin);
	//freopen(".out","w",stdout);
	CL(x,0);CL(d,0);CL(v,0);
	for(read(T);T;T--)
	{
		scanf("%s",a+1);l=strlen(a+1);reverse(a+1,a+1+l);
		int ans=get(l,0,0,0,0).fi;
		ans%=mod;if(ans<=0)ans+=mod;
		printf("%d\n",ans);
	}
	
	
    scanf("\n");
    return 0;
}
