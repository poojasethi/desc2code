#include <cstdio>
#include <ctime>
#include <cassert>
#include <cstring>
using namespace std;
typedef long long ll;
const int D=51000;
int _,d,u,v;
ll m,q,a[D],f[D],inv[D],g[D],p[200],n,Q,P,p1[D],p2[D],b[D],h[D][2],C[D],m1,m2,m3,a1,a2,a3,ans,nn;
char N[100100];
void scanl(ll &x) {
char ch;
while((ch=getchar())<'0');
for (x=ch-'0';(ch=getchar())>='0';) x=x*10+ch-'0';
}
ll mul(ll x,ll y,ll m) {
x%=m;y%=m;
assert(x>=0&&y>=0);
ll e=((long double)x*y/m);
ll d=x*y;
d-=e*m;
if (d>=m) d-=m;
if (d<0) d+=m;
return d;
}
ll gcd(ll a,ll b) { return b?gcd(b,a%b):a;}
ll calcn(int d,ll *a,ll n,ll m) {
n%=m;if (n<0) n+=m;
if (n<=d) return a[n];
p1[0]=p2[0]=1;
for (int i=0;i<=d;i++) {
ll t=(n-i+m)%m;if (t<0) t+=m;
p1[i+1]=mul(p1[i],t,m);
}
// p1[i] n*...*(n-i+1)
for (int i=0;i<=d;i++) {
ll t=(n-d+i+m)%m;if (t<0) t+=m;
p2[i+1]=mul(p2[i],t,m);
}
// p2[i] (n-d)*...*(n-d+i-1)
ll ans=0;
for (int i=0;i<=d;i++) {
if ((d-i)&1) ans-=mul(mul(mul(g[i],g[d-i],m),mul(p1[i],p2[d-i],m),m),a[i],m);
else ans+=mul(mul(mul(g[i],g[d-i],m),mul(p1[i],p2[d-i],m),m),a[i],m);
if (ans>=m) ans-=m; else if (ans<0) ans+=m;
}
return ans;
}
/*
bool check(ll *a,ll d,ll m,ll a_d) {
a[d+1]=a_d;
ll s=0;
for (int i=0;i<=d+1;i++) {
if (i&1) s+=mul(mul(a[i],g[i],m),g[d+1-i],m);
else s-=mul(mul(a[i],g[i],m),g[d+1-i],m);
if (s>=m) s-=m; else if (s<0) s+=m;
}
return s==0;
}
*/
ll solveq1(int d,ll *a,ll n,ll m) {
n%=m;if (n<0) n+=m;
b[0]=a[0];
for (int i=1;i<=d;i++) {
b[i]=b[i-1]+a[i];
if (b[i]>=m) b[i]-=m;
}
b[d+1]=calcn(d,a,d+1,m)+b[d];
if (b[d+1]>=m) b[d+1]-=m;
return calcn(d+1,b,n-1,m);
}
void spilt(ll &m,ll q,ll &m2,int &v) {
ll t=0;v=0;
while ((t=gcd(m,q))!=1) v++,m/=t,m2*=t;
}
ll Inv(ll q,ll m) {
if (q==0) return 0;
assert(q>=0);
ll a1=m,b1=0,a2=q,b2=1,a3,b3,t;
while (a2!=1) {	t=a1/a2,a3=a1-t*a2,b3=b1-mul(t,b2,m),
a1=a2,a2=a3,b1=b2,b2=b3;if (b2<0) b2+=m;}
return b2;
}
int main() {
//freopen("data.in","r",stdin);
for (scanf("%d",&_);_;_--) {
scanl(m);scanl(q);scanf("%s%d",N,&d);
f[0]=f[1]=inv[0]=inv[1]=g[0]=g[1]=1;
for (int i=0;i<=d;i++) scanl(a[i]);
for (int i=2;i<=d+14;i++) f[i]=mul(f[i-1],i,m);
for (int i=2;i<=d+14;i++) inv[i]=m-mul(inv[m%i],m/i,m);
for (int i=2;i<=d+14;i++) g[i]=mul(g[i-1],inv[i],m);
int len=strlen(N);n=0;Q=1;p[0]=1;
for (int i=1;i<=20;i++) p[i]=mul(p[i-1],q,m);
for (int i=0;i<len;i++) {
n=n*5%m;n=n+n+N[i]-'0';if (n>=m) n-=m;
ll P=mul(Q,Q,m);P=mul(P,P,m);P=mul(Q,P,m);P=mul(P,P,m);
Q=mul(P,p[N[i]-'0'],m);
}
if (len>2) nn=100; else {
nn=0;
for (int i=0;i<len;i++) nn=nn*10+N[i]-'0';
}
if (q==0) { printf("%lld\n",a[0]);continue;}
if (q==1) { printf("%lld\n",solveq1(d,a,n,m));continue;}
m1=m;m2=m3=1;
spilt(m1,q,m2,u);
spilt(m1,q-1,m3,v);
///////////////////////////////////case 1////////////////////////////
if (m1==1) a1=0; else {
ll r=Inv(q,m1),p3=0,p4=0,c;
h[0][0]=0;h[0][1]=1;
for (int i=1;i<=d+1;i++) {
h[i][0]=mul((h[i-1][0]+a[i-1])%m1,r,m1);
h[i][1]=mul(h[i-1][1],r,m1);
}
for (int i=0;i<=d+1;i++) {
ll t=mul(g[i],g[d+1-i],m1);
if (i&1) p3-=mul(h[i][0],t,m1),p4-=mul(h[i][1],t,m1);
else p3+=mul(h[i][0],t,m1),p4+=mul(h[i][1],t,m1);
if (p3<0) p3+=m1;if (p3>=m1) p3-=m1;
if (p4<0) p4+=m1;if (p4>=m1) p4-=m1;
}
c=mul(Inv(p4,m1),m1-p3,m1);
for (int i=0;i<=d+1;i++) {
h[i][0]+=mul(h[i][1],c,m1);
if (h[i][0]>=m1) h[i][0]-=m1;
}
for (int i=0;i<=d+1;i++) C[i]=h[i][0];
a1=mul(calcn(d,C,n,m1),Q,m1)-c;
if (a1<0) a1+=m1;
}
///////////////////////////////////case 2//////////////////////////
a2=0;
for (int i=0;i<=u&&i<nn;i++) {
a2+=mul(calcn(d,a,i,m2),p[i]%m2,m2);
if (a2>=m2) a2-=m2;
}
//////////////////////////////////case 3//////////////////////////////
a3=0;
if (m3!=1) for (int i=0;i<d+v;i++) {
ll t=0,w=1;
for (int j=0;j<v&&j<=i;j++) {
t+=w,w=mul(mul(w,q-1,m3),mul(i-j,inv[j+1],m3),m3);
if (t>=m3) t-=m3;
}
C[i]=mul(calcn(d,a,i,m3),t,m3);
}
a3=solveq1(d+v-1,C,n,m3);
//////////////////////////////////CRT//////////////////////////////////
ans=mul(Inv(m2*m3%m1,m1)*m2*m3,a1,m)+mul(Inv(m1*m3%m2,m2)*m1*m3,a2,m)+mul(Inv(m1*m2%m3,m3)*m1*m2,a3,m);
printf("%lld\n",ans%m);
}
} 