#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<vector>
#define fi first
#define se second
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
namespace __{
	int node;
	int tot;
	int head[1010000],p[1010000],np[1010000],flow[1010000];
	int S,T;
	inline void init(){
		rep(i,1,node)head[i]=0;
		rep(i,1,tot)p[i]=np[i]=flow[i]=0;
		tot=1;
		node=2;
		S=1;T=2;
	}
	inline void link(int &a,int &b,int c){
		if(!a)a=++node;
		if(!b)b=++node;
		++tot;p[tot]=b;np[tot]=head[a];head[a]=tot;flow[tot]=c;
		++tot;p[tot]=a;np[tot]=head[b];head[b]=tot;flow[tot]=0;
	}
	int q[1010000];bool inq[1010000];int dis[1010000];
	int bfs(){
		rep(i,1,node)inq[i]=0,dis[i]=-1;dis[S]=0;q[q[0]=1]=S;inq[S]=1;
		rep(i,1,q[0]){
			int x=q[i];
			for(int u=head[x];u;u=np[u])if(flow[u])if(dis[p[u]]==-1){
				dis[p[u]]=dis[x]+1;
				inq[p[u]]=1;q[++q[0]]=p[u];
			}
		}
		return dis[T];
	}
	int dinic(int x,int ff){
		int ret=0;
		if(x==T)return ff;
		for(int u=head[x];u;u=np[u])if(flow[u])if(dis[p[u]]==dis[x]+1){
			int tmp=dinic(p[u],min(flow[u],ff));
			ret+=tmp;ff-=tmp;
			flow[u]-=tmp;flow[u^1]+=tmp;
			if(!ff)break;
		}
		if(!ret)dis[x]=-1;
		return ret;
	}
	int getmax(){
		int ans=0;
		while(bfs()!=-1){
			ans+=dinic(S,1e9);
		}
		return ans;
	}
};
map<int,int>lnum;
int lt[1010000];
int ls[1010000];
map<int,int>rnum;
int rt[1010000];
int rs[1010000];
map<int,int>zhi;
int zz[1010000];
int gcd(int a,int b){
	if((!a)||(!b))return a+b;
	return gcd(b,a%b);
}
int n;
int a[405];
int b[405];
void Main(){
	__::init();
	rep(i,1,lt[0])lt[i]=ls[i]=0;lt[0]=0;
	rep(i,1,rt[0])rt[i]=rs[i]=0;rt[0]=0;
	rep(i,1,zz[0])zz[i]=0;zz[0]=0;
	lnum.clear();rnum.clear();zhi.clear();
	
	scanf("%d",&n);
	rep(i,1,n)scanf("%d",&a[i]);
	rep(i,1,n)scanf("%d",&b[i]);
	
	rep(i,1,n)rep(j,1,n)if(a[i]<b[j]){
		int d=gcd(a[i],b[j]);
		if(d==1)continue;
		if(!lnum[d])lnum[d]=++lt[0];
		ls[lnum[d]]++;
	}
	rep(i,1,n)rep(j,1,n)if(b[i]<a[j]){
		int d=gcd(b[i],a[j]);
		if(d==1)continue;
		if(!rnum[d])rnum[d]=++rt[0];
		rs[rnum[d]]++;
	}
	for(map<int,int>::iterator it=lnum.begin();it!=lnum.end();++it){
		__::link(__::S,lt[it->se],ls[it->se]);
		int vv=it->fi;
		for(int i=2;i*i<=vv;i++)if(vv%i==0){
			while(vv%i==0)vv/=i;
			if(!zhi[i])zhi[i]=++zz[0];
			__::link(lt[it->se],zz[zhi[i]],1e9);
		}
		if(vv!=1){
			if(!zhi[vv])zhi[vv]=++zz[0];
			__::link(lt[it->se],zz[zhi[vv]],1e9);
		}
	}
	for(map<int,int>::iterator it=rnum.begin();it!=rnum.end();++it){
		__::link(rt[it->se],__::T,rs[it->se]);
		int vv=it->fi;
		for(int i=2;i*i<=vv;i++)if(vv%i==0){
			while(vv%i==0)vv/=i;
			if(!zhi[i])zhi[i]=++zz[0];
			__::link(zz[zhi[i]],rt[it->se],1e9);
		}
		if(vv!=1){
			if(!zhi[vv])zhi[vv]=++zz[0];
			__::link(zz[zhi[vv]],rt[it->se],1e9);
		}
	}
	printf("%d\n",__::getmax());
}
int main(){
	int T;scanf("%d",&T);
	while(T--)Main();
	return 0;
}


