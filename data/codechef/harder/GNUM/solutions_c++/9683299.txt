#include<cstdio>
#include<algorithm>
#include<cstring>
#include<map>
#define N 700005
using namespace std;
map<int,int>mp;
const int inf=(int)1e9;
int i,j,m,n,p,k,tot,dis[N],st,ed,que[N],fox[N],k1,a[N],b[N],A[N],B[N],pr[N],sum[N],Sum[N],Ax,Bx;
struct Bian{int ed,before,flow;}s[5000001];
void getpr(int x)
{
	  int i;
	  pr[0]=0;
	  for (i=2;i*i<=x;++i)
	      while (x%i==0) 
	        {
	        	  if (pr[pr[0]]!=i) pr[++pr[0]]=i;
	        	  x/=i;
	        }
	 if (x>1) pr[++pr[0]]=x;
}
inline int bfs()
 { int i,p,l,r;
   memset(dis,-1,sizeof(dis));
    l=r=1;
    dis[st]=0;
   que[1]=st;
   while (l<=r)
    { p=que[l];
      for (i=fox[p];i;i=s[i].before)
        if (s[i].flow>0)
        if (dis[s[i].ed]==-1)
         { 
           que[++r]=s[i].ed;
           dis[s[i].ed]=dis[p]+1;
           }
    l++;
}
 if (dis[ed]==-1) return 0;
 return 1;
}
void add(int p1,int p2,int p3) {s[++k1].ed=p2; s[k1].flow=p3; s[k1].before=fox[p1]; fox[p1]=k1;
  s[++k1].ed=p1; s[k1].flow=0; s[k1].before=fox[p2]; fox[p2]=k1; }
int dfs(int num,int flow)
 {  int i;
    int a,nowans=0;
   if (num==ed) return flow;
     for (i=fox[num];i&&flow;i=s[i].before)
       if (s[i].flow>0&&dis[s[i].ed]==dis[num]+1)
        if(a=dfs(s[i].ed,min(s[i].flow,flow)))
         { s[i].flow-=a;
           s[i^1].flow+=a;
           flow-=a;nowans+=a;
           }if (!nowans) dis[num]=(int)1e9;
   return nowans;
}
int gcd(int x,int y) { return !y?x:gcd(y,x%y); }
int Maxflow()
{ int j;
  int ans=0;
    while (bfs())
    { j=dfs(st,(int)1e9);  while (j) ans+=j,j=dfs(st,(int)1e9); }
  return ans;
}
int Main()
{
	memset(fox,0,sizeof(fox)); k1=1; A[0]=0;B[0]=0; mp.clear();
	scanf("%d",&n); 
	for (i=1;i<=n;++i) scanf("%d",&a[i]);
	for (i=1;i<=n;++i) scanf("%d",&b[i]);
	for (i=1;i<=n;++i) for (j=1;j<=n;++j) 
	{
		int G=gcd(a[i],b[j]);
		if (G==1) continue;
	    if (b[j]>a[i]) A[++A[0]]=G;
	    else if (b[j]<a[i]) B[++B[0]]=G;
	}
	sort(A+1,A+A[0]+1);
	sort(B+1,B+B[0]+1);
	sum[1]=Sum[1]=1; Ax=Bx=1;
	for (i=2;i<=A[0];++i) if (A[i]==A[Ax]) ++sum[Ax]; else A[++Ax]=A[i],sum[Ax]=1;
	for (i=2;i<=B[0];++i) if (B[i]==B[Bx]) ++Sum[Bx]; else B[++Bx]=B[i],Sum[Bx]=1;
	A[0]=min(A[0],Ax); B[0]=min(B[0],Bx);
	tot=A[0]+B[0]; st=++tot; ed=++tot;
	for (i=1;i<=A[0];++i)
	{
		  add(st,i,sum[i]);
		  getpr(A[i]);
		   for (j=1;j<=pr[0];++j) 
		   {
		   	  if (!mp[pr[j]]) mp[pr[j]]=++tot;
		   	  add(i,mp[pr[j]],inf);
		   }
    }
    for (i=1;i<=B[0];++i)
    {
    	  add(i+A[0],ed,Sum[i]);
    	  getpr(B[i]);
    	  for (j=1;j<=pr[0];++j)
    	  if (mp[pr[j]]) add(mp[pr[j]],i+A[0],inf);
    }
    return Maxflow();
}
int main()
{
	 int T; scanf("%d",&T);
	 for (;T--;) printf("%d\n",Main());
}
	  