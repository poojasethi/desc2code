#include <cstdio>
#include <algorithm>
using namespace std;

#define n	35
#define m	1005
#define unt	unsigned int
#define For(i,a,b)	for(int i=a;i<=b;i++)

unt		S[m];
bool	V[m];
char	A[n][n],C[m][n];
int		N,M,T,P,D,num,Q[2],B[n],p[n],H[m],E[m];

struct	Nod{
		unt sta,tot;
		Nod	operator +	(const Nod&b){
			return	(Nod){sta|b.sta,tot+b.tot};
		}
}Bas[m],F[2][m*m];

bool	Cmp1(int a,int b)	{return	B[a]<B[b];}
bool	Cmp2(const Nod&a,const Nod&b)	{
		return	a.sta<b.sta||a.sta==b.sta&&a.tot<b.tot;
}
bool	Cmp3(const Nod&a,const Nod&b)	{return	a.sta>b.sta;}

int		main(){
		for	(scanf("%d",&P);P--;T=num=0){
			scanf("%d%d",&N,&M);
			For(i,1,M)	{
				scanf("%s",C[i]+1);	H[i]=0;
				For(j,1,N)	H[i]=H[i]*107+C[i][j];
			}	D=(1<<N)-1;
			if	(!M)	{puts("0");continue;}

			For(i,1,M)	{
				int flag=1;
				For(j,1,num)	flag=(H[i]==E[j]?0:flag);
				if	(flag){
					E[++num]=H[i];
					For(j,1,N)	A[num][j]=C[i][j];
				}
			}	M=num;
			if	(M==(1<<N))	{puts("0");continue;}

			For(i,0,D)	{
				int cnt=N,len=0;
				For(j,1,M)	B[j]=0,p[j]=j;
				For(j,1,N)	if	((1<<j-1)&i){
					cnt--;	len++;
					For(k,1,M)	if	(A[k][j]<'a')	B[k]|=1<<j;
				}	cnt=1<<cnt;

				sort(p+1,p+M+1,Cmp1);
				for	(int i=1,j;i<=M;i=j+1){
					for	(j=i;j<M&&B[p[j+1]]==B[p[i]];j++);
					if	(j-i+1==cnt)	{
						Bas[++T]=(Nod){0,len};
						For(k,i,j)	Bas[T].sta|=1ll<<p[k]-1;
					}
				}
			}	sort(Bas+1,Bas+T+1,Cmp3);

			F[0][Q[0]=1]=(Nod){0,0};
			For(i,1,T)	V[i]=0;	S[T+1]=D=0;
			For(i,1,T)	For(j,1,T)	if	(i^j)
				if	((Bas[i].sta&Bas[j].sta)==Bas[j].sta)	V[j]=1;
			for	(int i=T;i;i--)	S[i]=S[i+1]|Bas[i].sta;

			unt Ans=1<<30,U=(1ll<<M)-1;
			For(i,1,T)	if	(!V[i]){
				int p=(++D)&1,q=p^1,Now=0;	Q[p]=0;

				For(j,1,Q[q])	if	((F[q][j].sta|S[i])==U){
					if	(F[q][j].tot<Ans)	F[p][++Q[p]]=F[q][j];
					if	(F[q][j].tot+Bas[i].tot>=Ans)	continue;
					if	((F[q][j].sta&Bas[i].sta)==Bas[i].sta)	continue;
					F[p][++Q[p]]=F[q][j]+Bas[i];
					if	(F[p][Q[p]].sta==U)	Ans=min(Ans,F[p][Q[p]].tot);
				}

				sort(F[p]+1,F[p]+Q[p]+1,Cmp2);
				For(j,1,Q[p])
					if	(j==1||F[p][j].sta!=F[p][j-1].sta)	F[p][++Now]=F[p][j];
				Q[p]=Now;
			}	printf("%d\n",(int)Ans);
		}
}
