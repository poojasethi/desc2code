#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
#define pb push_back
#define mp make_pair
#define gc getchar
#define MAX 200005
int t[4*MAX];
int read_int(){
    register int x = 0, c = gc();
    int sign = 1;
    while(c!='-' && (c<48 || c>57) ) c = gc();
    if(c=='-')
        sign = -1, c = gc();
    while(c>=48 && c<=57)
        x = (x<<1) + (x<<3) + c - 48, c = gc();
    return sign*x;
}

void build(int v, int tl, int tr)
{
    if(tl == tr) t[v] = 1;
    else
    {
        int tm = (tl + tr) >> 1;
        build((v<<1),tl,tm);
        build((v<<1)+1,tm+1,tr);
        t[v] = tr - tl + 1;
    }
}

int query(int v, int reqPos, int tl, int tr)
{
    if(tl == tr)
    {
        t[v] -= 1;
        return tl;
    }
    int tm = (tl + tr) >> 1;
    t[v] -= 1;
    if(reqPos <= t[v<<1])
        return query((v<<1),reqPos,tl,tm);
    else
        return query((v<<1)+1,reqPos - t[v<<1],tm+1,tr);
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,N;
    T = read_int();
    while(T--)
    {
        N = read_int();
        int Moves[N],Rank[N];
        build(1,1,N);
        F(i,0,N-1) Moves[i] = read_int();
        RF(i,N-1,0) Rank[i] = query(1,i-Moves[i]+1,1,N);
        F(i,0,N-1) printf("%d ",Rank[i]);
        printf("\n");
    }
    return 0;
}

