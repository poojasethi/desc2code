#include <bits/stdc++.h>
#define REP(i,a,b) for(i=a;i<=b;i++)
using namespace std;
typedef long long ll;
ll bit[200010],mrk[200010],ar[200010];
void update(ll x,ll pos,ll n){
	while(pos<=n){
		bit[pos]+=x;
		pos+=pos&(-pos);
	}
}
ll RSQ(ll pos){
	ll sum=0;
	while(pos>0){
		sum+=bit[pos];
		pos-=pos&(-pos);
	}
	return sum;
}
ll bsrch(ll pos,ll n){
	if(pos>0){
		ll l=1,r=n,mid,x;
		while(l<=r){
			mid=(l+r)>>1;
			x=RSQ(mid);
			if(x==pos && mrk[mid]){
				mrk[mid]=0;
				return mid;
			}
			if(x<pos)
				l=mid+1;
			else
				r=mid-1;
		}
	}
	return 1;
}
int main(){
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--){
		ll i,n;
		cin>>n;
		REP(i,1,n){
			cin>>ar[i];
			mrk[i]=1;
			update(1,i,n);
		}
		for(i=n;i>0;i--){
			ar[i]=bsrch(i-ar[i],n);
			update(-1,ar[i],n);
		}
		REP(i,1,n)
			cout<<ar[i]<<" ";
		cout<<endl;
	}
}