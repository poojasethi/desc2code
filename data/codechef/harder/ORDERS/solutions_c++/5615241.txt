#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<string>
#include<vector>

#define f first
#define s second
#define pb push_back

using namespace std;

typedef pair<int,int> pr;
typedef long long ll;

int arr[200005];
int sol[200005];
int tot;


struct BIT
{
	int n;
	int data[200005];

	BIT()
	{}

	void init(int nd)
	{
		memset(data,0,sizeof(data));
		n = nd;							
	
	}	
	void update(int idx ,int val)
	{
		while (idx <= n)
		{
			data[idx] += val;
			idx += (idx & -idx);
		}
	}
	int read(int idx)
	{
		int sum = 0;
		while (idx > 0){
			sum += data[idx];
			idx -= (idx & -idx);
		}
		return sum; 
	}
	

}tree;


int binsearch(int val,int n)
{
	int l,r,a,m;

	l = 1;
	r = n;

	a = tot - val+1;
	while(l  < r)
	{
		m = (l+r)/2;
		if((tree.read(m))  < a)
		{
			l = m+1;
		}
		else 
		{
			r = m;
		} 

	}
	tot--;
	return r;

}

void func(int n)
{	
	int i,y;

	tree.init(n);
	tot = n;		
	for(i = 1;i <= n;i++)
	{
		tree.update(i,1);
	}
	for(i = n;i >= 1;i--)
	{
		y = binsearch(arr[i]+1,n);
		sol[i] = y;
		tree.update(y,-1);
	}		

}

int main()
{

	int t,n,i;
	
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(i = 1;i <= n;i++)
		{
			scanf("%d",&arr[i]);	
		} 		
		func(n);	
		for(i  = 1;i <= n;i++)
		{
			printf("%d ",sol[i]);
		}
		printf("\n");			
		
	}

	return 0;
}	
		
	
