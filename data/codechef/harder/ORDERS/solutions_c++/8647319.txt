//Pranet Verma
#include <bits/stdc++.h>
using namespace std;
int a[200001],ans[200001];
template<class T> 
struct BIT
{
    T *bit;int n;
    BIT(int n):n(n){bit=(T*)calloc(n+1,sizeof(T));}
    ~BIT(){free(bit);}
    void reset(){memset(bit,0,sizeof(T)*(n+1));}
    void update(int u,T v){while(u<=n)bit[u]+=v,u+=(u&-u);}
    T read(int u){T ret=0;while(u)ret+=bit[u],u-=(u&-u);return ret;}    
};
int getIndex(BIT<int> &b,int k)
{
    int low=1;
    int high=b.n;
    int poss;
    while(high>=low)
    {
        int mid=(high+low)/2;
        if(b.read(mid)>=k)
            poss=mid,
            high=mid-1;
        else
            low=mid+1;
    }
    return poss;
}
int main()
{
    std::ios::sync_with_stdio(false);
    cin.tie(0);
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        BIT<int> b(n);
        for(int i=0;i<n;++i)
            cin>>a[i],
            b.update(i+1,1);
        for(int i=n-1;i>=0;--i)
        {
            int val=getIndex(b,i+1-a[i]);
            ans[i]=val;
            b.update(val,-1);
        }
        for(int i=0;i<n;++i)
            cout<<ans[i]<<" ";
        cout<<endl;
    }
}