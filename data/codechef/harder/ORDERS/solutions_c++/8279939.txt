#include <bits/stdc++.h>
#define fr(i,a,b) for(int i=a;i<b;++i)
#define rf(i,a,b) for(ll  i=a;i>=b;--i)
#define pyes cout<<"YES"<<endl
#define pno cout<<"NO"<<endl
#define ff first
#define ss second
#define pb push_back
#define re return
#define ioS ios_base::sync_with_stdio(0);cin.tie(0);
#define coutd(a,b) cout<<a<<" "<<b<<endl
#define coutt(a,b,c)cout<<a<<" "<<b<<" "<<c<<endl;
#define coutq(a,b,c,d)cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
#define cina(a,n) fr(i,0,n)cin>>a[i]
#define coutar(a,n)  fr(i,0,n)cout<<a[i]<<" ";cout<<endl;
#define couts(a) cout<<a<<endl
#define MAXN 100100
#define mod  1000000007
using namespace std;
 
typedef long long int ll;
typedef long double ld;
typedef pair<int,int>pi;
multiset<int>st;
set<int>s[MAXN];
 
ll t[100*MAXN],A[100*MAXN],n,ans[100*MAXN];
 
void build(ll node,ll a,ll b)
{
    ll mid=(a+b)>>1;
    if(a==b)t[node]=1;
    else
    {
        build(2*node,a,mid);
        build(2*node+1,mid+1,b);
        t[node]=b-a+1;
    }
}
 
ll query(ll node,ll pos,ll a ,ll b)
{
    --t[node];
    if(a==b){ re a;}
    ll mid=a+b>>1;
    if(pos<=t[2*node]){re query(2*node,pos,a,mid);}
    else {re query(2*node +1,pos-t[2*node],mid+1,b);}
}
 
int main()
{
int t;cin>>t;
 
while(t--)
{
    cin>>n;
    cina(A,n);
    build(1,1,n);
 
    rf(i,n-1,0)ans[i]=query(1,i-A[i]+1 ,1,n);
    coutar(ans,n);
 
}
}
 