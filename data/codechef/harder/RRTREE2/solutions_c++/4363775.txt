#include <iostream>
#include <bits/stdc++.h>
#define maxn 100005
#define mod1 59604644783353249LL
#define mod2 99194853094755497LL
using namespace std;
typedef long long int ll;
int subtreeW[505],val[505],n,par[505];
ll sumW1[maxn],sumW2[maxn];
bool ans[maxn];

ll sum;
vector<ll> G[505];
void addw(ll w)
{
    for(int i=sum;i>=w;--i)
    {
        sumW1[i] += sumW1[i-w];
        sumW2[i] += sumW2[i-w];
        if(sumW2[i]>mod2)
            sumW2[i]-=mod2;
        if(sumW1[i]>mod1)
            sumW1[i]-=mod1;
    }

}
void deletew(ll w)
{
    for(int i=w;i<=sum;++i)
    {
        sumW1[i] = sumW1[i]-sumW1[i-w];
        if(sumW1[i]<0)
            sumW1[i]+=mod1;
        sumW2[i] = sumW2[i]-sumW2[i-w];
        if(sumW2[i]<0)
            sumW2[i]+=mod2;
    }

}

void dfs(int u,ll curr)
{

    for(int i=curr;i<=sum;++i)
        if(sumW1[i-curr] || sumW2[i-curr])
        {
            ans[i] = 1;
        }
    for(int i=0;i<G[u].size();++i)
    {
        int v = G[u][i];
        addw(subtreeW[v]);
    }
    for(int i=0;i<G[u].size();++i)
    {
        int v = G[u][i];
        deletew(subtreeW[v]);
        dfs(v,curr+val[v]);
        addw(subtreeW[v]);
    }
    for(int i=0;i<G[u].size();++i)
    {
        int v = G[u][i];
        deletew(subtreeW[v]);
    }
}



int main()
{
    //freopen("in.txt","r",stdin);
    memset(subtreeW,0,sizeof subtreeW);
    memset(ans,0,sizeof ans);
    memset(sumW1,0,sizeof sumW1);
    memset(sumW2,0,sizeof sumW2);
    sum =0;
    sumW1[0] = 1;
    sumW2[0] = 1;
    scanf("%d",&n);
    for(int i=1;i<=n;++i)
    {
        scanf("%d",&val[i]);
        sum+=val[i];
    }


    par[1] = -1;
    int x;
    for(int i=2;i<=n;++i)
    {
     subtreeW[i] = val[i];
     scanf("%d",&par[i]);
    }
    subtreeW[1] = val[1];

    for(int i=2;i<=n;++i)
    {
        G[par[i]].push_back(i);
        int p=par[i],u=i;
        while(p!= -1)
        {
            subtreeW[p]+=val[u];
            p=par[p];
        }
    }
    dfs(1,val[1]);
    for(int i=1;i<=sum;++i)
    {
        printf("%d",ans[i]);
    }
    puts("");




}
