#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <stdlib.h>
#include <algorithm>
#include <queue>
#include <vector>
#include <set>
#define mp make_pair
#define pb push_back
#define rep(i,n) for (int i = 1;i <= n; i++)
#define rip(i,d,n) for (int i = d;i <= n; i++)
#define ripd(i,d,n) for (int i = n;i >= d; i--)
#define scf(x) scanf("%d",&x)
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<bool> VB;

const int maxn = 100010;

int N;
int Wi[maxn],S[maxn];
VB ju[maxn];
VI adj[501];

void dfs(int x) {
    S[x] = Wi[x];

    for (int i = 0;i < adj[x].size(); i++) {
        dfs(adj[x][i]);
        S[x] += S[adj[x][i]];
    }
    ju[x].resize(S[x]+1,false);
    ju[x][Wi[x]] = true;
    for (int i = 0;i < adj[x].size(); i++) {
        int y = adj[x][i],z;
        VB check(S[x]+1,false);
        for (int j = 0;j <= S[y]; j++) check[j+Wi[x]] = check[j+Wi[x]] | ju[y][j];
        for (int j = 0;j < adj[x].size(); j++)
            if (y != adj[x][j]) {
                z = adj[x][j];
                for (int k = S[x]-S[z];k >= 0; k--) check[k+S[z]] = check[k+S[z]] | check[k];
            }
        for (int j = 0;j <= S[x]; j++) ju[x][j] = ju[x][j] | check[j];
    }
    //cout<<x<<endl;
}

int main() {
    scf(N);
    rep(i,N) scf(Wi[i]);
    rip(i,2,N) {
        int u;scf(u);
        adj[u].push_back(i);
    }
    dfs(1);
    rep(i,S[1]) if (ju[1][i]) printf("1"); else printf("0");
    printf("\n");
    return 0;
}
