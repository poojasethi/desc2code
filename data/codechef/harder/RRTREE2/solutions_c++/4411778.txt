#include "cstdio"
#include "iostream"
#include "algorithm"
#include "cmath"
#include "cstring"
#include "time.h"
#include "cstdlib"
#include "vector"
#include "queue"
#include "set"
#include "map"
#define runtime() ((double)clock() / CLOCKS_PER_SEC)
#define rep(i, n) for(int i=0; i<n; i++)
#define repp(i, a, b) for(int i=a; i<a+b; i++)
using namespace std;
#define SZ size()
#define PB push_back
#define MK make_pair
#define X first
#define Y second
#define ll long long
#define ITR iterator
#define LB lower_bound
#define UB upper_bound
#define PII pair<int, int>

int getint(){
    int s = 0, o = 1;
    char c;
    for(c = getchar(); c<'0'||c>'9';c = getchar()) if(c=='-') o = -1;
    for(;c>='0'&&c<='9'; c = getchar()) s *=10, s+=c-'0';
    return s*o;
}

const int mod = (int)1e9+7, maxn = 510, maxW = 100010;

std::vector<int> e[maxn];
int f[maxW], g[maxW], a[maxn], s[maxn];
int n,m,x,sum;

inline void up(int w){
    for(int i=0; i<=sum-w; i++) g[i+w] |= (f[i]>0);
}
inline void addI(int w){   
    for(int i=sum; i>=w; i--){
        f[i] += f[i-w];
        if(f[i]>mod) f[i] -= mod;
    }
}
inline void revI(int w){   
    for(int i=w; i<=sum; ++i){
        f[i] -= f[i-w];
        if(f[i]<0) f[i] += mod;
    }
}
void dfs(int u, int w){
    w += a[u];
    up(w);
    rep(i,e[u].SZ){
        addI(s[e[u][i]]);
    }
    rep(i,e[u].SZ){
        revI(s[e[u][i]]);
        dfs(e[u][i], w);
        addI(s[e[u][i]]);
    }
    rep(i,e[u].SZ){
        revI(s[e[u][i]]);
    }
    w -= a[u];
}
int main(int argc, char const *argv[])
{
    n = getint();
    repp(i,1,n) a[i] = getint(), sum += a[i];
    repp(i,2,n-1){
        x = getint();
        e[x].PB(i);
    }
    for(int i=n; i>=1; i--){
        s[i] = a[i];
        rep(j,e[i].SZ) s[i] += s[e[i][j]];
    }
    f[0] = 1;
    dfs(1, 0);
    repp(i,1,sum) printf("%d", g[i]);
    return 0;
}