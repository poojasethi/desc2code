#include<bits/stdc++.h>
using namespace std;
#define AIN(a,n,b) assert(a<=n && n<=b)
#define i64 long long
#define MAX 1000000
#define pb push_back
#define all(a) a.begin(),a.end()
#define M 2
typedef pair<int,int> pii;

vector<int> child[505];
int w[505],ans[100005],cnt,n;
i64 dp[100005][5],sub_sum[505],sum;
i64 MOD[5] = {99194853094755497LL,59604644783353249LL,2147483647LL, 489133282872437279LL, 3093215881333057LL};

void add_item(int w){
    int i,j;
    for(i = sum;i>=w;i--){
        for(j = 0;j<M;j++){
            dp[i][j] += dp[i-w][j];
            if(dp[i][j]>MOD[j])
                dp[i][j]-=MOD[j];
            //dp[i][j]%=MOD[j];
        }
    }
}
void remove_item(int w){
    int i,j;
    for(i = w;i<=sum;i++){
        for(j = 0;j<M;j++){
            dp[i][j] -= dp[i-w][j];
            if(dp[i][j]<0) dp[i][j]+=MOD[j];
            //dp[i][j]%=MOD[j];
        }
    }
}
void update(int w){
    int i,j;
    for(i = w;i<=sum;i++){
        for(j = 0;j<M;j++){
            ans[i] |= dp[i-w][j]?1:0;
        }
    }
}
void solve(int u,int W){
    update(W);
    cnt++;
    int sz = child[u].size(),i;
    for(i = 0;i<sz;i++){
        int v = child[u][i];
        add_item(sub_sum[v]);
    }
    for(i = 0;i<sz;i++){
        int v = child[u][i];
        remove_item(sub_sum[v]);
        solve(v,W+w[v]);
        add_item(sub_sum[v]);
    }
    for(i = 0;i<sz;i++){
        int v = child[u][i];
        remove_item(sub_sum[v]);
    }
}

int main(){
    double cl = clock();
    int i,j,k;

    scanf("%d",&n);
    AIN(1,n,500);
    for(i = 1;i<=n;i++){
        scanf("%d",&w[i]);
        AIN(1,w[i],100000);
        sum+=w[i];

    }
    AIN(1,sum,100000);
    for(i = 2;i<=n;i++){
        scanf("%d",&k);
        AIN(1,k,i-1);
        child[k].pb(i);
    }
    for(i = n;i;i--){
        sub_sum[i] = w[i];
        k=child[i].size();
        for(j = 0;j<k;j++){
            int v = child[i][j];
            sub_sum[i]+=sub_sum[v];
        }
    }
    for(i = 0;i<M;i++){
        dp[0][i] = 1;
    }
    solve(1,w[1]);
    assert(cnt==n);
    for(i = 1;i<=sum;i++){
        printf("%d",ans[i]);
    }
    puts("");
    cl = clock() - cl;
    fprintf(stderr,"Execution Time = %lf sec\n",cl / CLOCKS_PER_SEC);
    return 0;
}