#include <vector>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define	n	100005
#define I64	long long
#define Vec	vector<int>
#define For(i,a,b)	for(int i=a,lim=b;i<=lim;i++)
#define Rep(i,a,b)	for(int i=a,lim=b;i>=lim;i--)

int		N,M,D,w[n],F[n],G[n],Dfn[n],siz[n],semi[n],idom[n];
Vec		E0[n],E1[n],E2[n],E3[n];

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

void	DFS(int u){
		Dfn[u]=++D;
		For(i,0,E0[u].size()-1){
			int v=E0[u][i];
			if	(!Dfn[v])	DFS(v),E1[Dfn[u]].push_back(Dfn[v]);
		}
}

int		MIN(int a,int b){
		return	semi[a]<semi[b]?a:b;
}
int		Get(int u){
		if	(u==F[u])	return	F[u];
		int t=Get(F[u]);w[u]=MIN(w[F[u]],w[u]);
		return	F[u]=t;
}

int		main(){
		N=IN();	M=IN();
		For(i,1,M)	{
			int u=IN(),v=IN();	E0[u].push_back(v);
		}
		DFS(1);

		For(u,1,N)	For(i,0,E0[u].size()-1){
			int v=E0[u][i];
			if	(Dfn[u]&&Dfn[v])	E2[Dfn[v]].push_back(Dfn[u]);
		}
		N=D;

		For(i,1,N)	F[i]=w[i]=i;
		Rep(u,N,1)	{
			semi[u]=u;
			For(i,0,E2[u].size()-1){
				int v=E2[u][i];
				if	(v<u)	semi[u]=min(semi[u],v);
					else	Get(v),semi[u]=min(semi[u],semi[w[v]]);
			}
			For(i,0,E3[u].size()-1)	{
				int v=E3[u][i];	Get(v);	G[v]=w[v];
			}
			E3[semi[u]].push_back(u);
			For(i,0,E1[u].size()-1)	F[E1[u][i]]=u;
		}
		For(i,1,N)	idom[i]=(semi[i]!=semi[G[i]])?idom[G[i]]:semi[G[i]];

		I64	Ans=1ll*N*(N-1)/2;
		For(i,1,N)	siz[i]=1;
		Rep(i,N,1)	if	(idom[i])	siz[idom[i]]+=siz[i];
		For(i,1,N)	if	(idom[i]==1)Ans-=1ll*siz[i]*(siz[i]-1)/2;
		printf("%lld\n",Ans);
}