#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
const int SIZEN=100010;
const int SIZEM=500010; 
int N, M;
int to[SIZEM<<4],next[SIZEM<<4],tms;
int sucend[SIZEN],preend[SIZEN],domend[SIZEN];//suc是离开该点,pre是进入 
int fa[SIZEN],dfn[SIZEN],dfslis[SIZEN];
int semi[SIZEN],idom[SIZEN],dsj[SIZEN],best[SIZEN];
int siz[SIZEN];
void addedge(int head[],int x,int y){
	to[++tms]=y;
	next[tms]=head[x];
	head[x]=tms;
}
int zig(int x){
	if(!dsj[x]) return x;
	int y=zig(dsj[x]);
	if(semi[best[dsj[x]]]<semi[best[x]]) best[x]=best[dsj[x]];
	dsj[x]=y;
	return y;
}
void dfs(int x){//按dfs序给每个点编号 
	dfn[0]++;//计数器 
	dfn[x]=dfn[0];
	dfslis[dfn[0]]=x;
	for(int p=sucend[x];p;p=next[p]){
		int v=to[p];
		if(!dfn[v]){
			fa[v]=x;
			dfs(to[p]);
		}
	}
}
void dominate(){
	for(int i=1;i<=N;i++) dsj[i]=0,idom[i]=semi[i]=best[i]=i;
	int x,y,p;
	for(int i=dfn[0];i>1;i--){
		for(y=dfslis[i],p=preend[y];p;p=next[p]){
			int z=dfn[to[p]];
			if(z){
				zig(z);
				semi[i]=min(semi[i],semi[best[z]]);
			}
		}
		addedge(domend,semi[i],i);
		x=dfn[fa[y]];
		dsj[i]=x;
		for(p=domend[x];p;p=next[p]){
			int z=to[p];
			//cout<<i<<" "<<x<<" "<<z<<endl;
			zig(z);
			if(semi[best[z]]<x) idom[z]=best[z];
			else idom[z]=x;
		}
		domend[x]=0;
	}
	for(int i=2;i<=dfn[0];i++){
		if(semi[i]!=idom[i]) idom[i]=idom[idom[i]];
		addedge(domend,idom[i],i);
	}
}
int main(){
	scanf("%d%d",&N,&M);
	for(int i=1,x,y;i<=M;i++){
		scanf("%d%d",&x,&y);
		addedge(sucend,x,y);
		addedge(preend,y,x);
	}
	dfs(1);
	dominate();
	//for(int i=1;i<=dfn[0];i++) cout<<dfn[i]<<" ";
	//cout<<endl;
	//for(int i=1;i<=dfn[0];i++) cout<<semi[i]<<" ";
	//cout<<endl;
	long long ans=0,s1=0,s2=0;
	for(int i=dfn[0];i>1;i--){
		siz[i]++;
		siz[idom[i]]+=siz[i];
	}
	for(int p=domend[1],v;p;p=next[p]){
		v=to[p];
		s1+=siz[v];
		s2+=1LL*siz[v]*siz[v];
	}
	ans=(s1*s1-s2)/2+dfn[0]-1;
	printf("%lld\n",ans);
	return 0;
}
