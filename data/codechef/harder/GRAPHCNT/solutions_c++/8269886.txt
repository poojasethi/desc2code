#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

int n;
struct edge{int v,next;}e[5000005];int etot;
int g[200005],gt[200005],dom[200005];
inline void ae(int*g,int u,int v){e[etot].v=v;e[etot].next=g[u];g[u]=etot++;}
int dfn[200005],id[200005],ind;
int pre[200005],idom[200005],semi[200005];
int f[200005],best[200005];
int get(int x){
    if(x==f[x])return x;
    int y=get(f[x]);
    if(semi[best[x]]>semi[best[f[x]]])best[x]=best[f[x]];
    return f[x]=y;
}
int stk[200005],cur[200005],top;
int tmppr[200005];
void dfs(int rt){
	top=0;
	stk[++top]=rt;cur[top]=g[rt];
	while(top){
		int u=stk[top];
		if(cur[top]==g[u]){
		    id[dfn[u]=++ind]=u;
		}
		if(cur[top]==-1){
			pre[dfn[u]]=dfn[tmppr[u]];
			top--;
			continue;
		}
		int i=cur[top];cur[top]=e[i].next;
		if(!dfn[e[i].v]){
			stk[++top]=e[i].v;
			cur[top]=g[e[i].v];
			tmppr[e[i].v]=u;
		}
	}
}
void tarjan(){
    for (int j=ind,u;u=id[j],j>=2;j--){
        for (int i=gt[u],v;v=dfn[e[i].v],~i;i=e[i].next){
            if(!v)continue;//数据未保证从源点可到达所有点
            get(v);
            if(semi[best[v]]<semi[j])semi[j]=semi[best[v]];
        }
        ae(dom,semi[j],j);
        int x=f[j]=pre[j];
        for (int i=dom[x],z;z=e[i].v,~i;i=e[i].next){
            get(z);
            if(semi[best[z]]<x)idom[z]=best[z];
            else idom[z]=x;
        }
        dom[x]=-1;
    }
    for (int i=2;i<=ind;i++){
        if(semi[i]!=idom[i])idom[i]=idom[idom[i]];
        ae(dom,idom[i],i);
    }
}

int su[200005];
int main()
{
    int m;
    scanf("%d%d",&n,&m);
        etot=ind=0;
        for (int i=1;i<=n;i++){
            g[i]=gt[i]=dom[i]=-1;
            dfn[i]=0;
            f[i]=best[i]=semi[i]=i;
        }
        while(m--){
            int x,y;gn(x);gn(y);
            ae(g,x,y);
            ae(gt,y,x);
        }
        dfs(1);
        tarjan();        
	
	for (int j=ind;j>=2;j--){
		su[j]++;
		su[idom[j]]+=su[j];
	}
	ll s=0,sq=0;
	for (int i=dom[1];~i;i=e[i].next){
		int x=su[e[i].v];
		s+=x;
		sq+=1ll*x*x;
	}
	s=(1ll*s*s-sq)/2+(ind-1);
	cout<<s<<endl;
    return 0;
}
