#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <map>
#include <vector>
#include <ctime>
using namespace std;
typedef long long int64;

int64 ans[500000];
int nAns=0;
void gen() {
	static int len[1000000];
	len[1]=len[10]=len[100]=len[1000]=len[10000]=len[100000]=1;
	for(int i=1;i<1000000;i++)
	    len[i]+=len[i-1];
	#define LEN_DIGIT(x) ((x<1000000)?len[x]:(len[(x)/1000000]+6))

	map<int64,vector<int> > table[2][2];
	//for(int part=0;part<=1;part++)
	for(int carry=0;carry<=1;carry++)
	for(int number=0;number<100000;number++) {
		int c=carry,n=number;
		int cnt[10];
		memset(cnt,0,sizeof(cnt));
		for(int i=1;i<=5;i++) {
			int d;
			c+=n%10*2;
			if(c<10)
			    d=c,c=0;
			else
			    d=c-10,c=1;

			cnt[n%10]--,cnt[d]++;
			n/=10;
		}
		
		if(c&&carry)
		    continue;
		int64 hash=0;
		for(int i=0;i<10;i++) {
		    if(abs(cnt[i])>4)
		        goto invalid;
			hash=(hash<<4)+cnt[i]+5;
		}
		table[c][carry][hash].push_back(number);

        invalid:;
		/*printf("carry=%d number=%d:\n\tc=%d\n\t",carry,number,c);
		for(int i=0;i<10;i++)
		    if(cnt[i])
		    printf("%d:%d ",i,cnt[i]);
		scanf("%*s");*/
	}
	for(int carry=0;carry<=1;carry++)
	    for(map<int64,vector<int> >::iterator it=table[0][carry].begin();it!=table[0][carry].end();++it) {
			int64 hash=733007751850LL-it->first;
			if(table[carry][0].count(hash)) {
                vector<int> &l1=it->second,&l2=table[carry][0][hash];
				for(vector<int>::iterator it1=l1.begin();it1!=l1.end();++it1)
				for(vector<int>::iterator it2=l2.begin();it2!=l2.end();++it2) {
					int64 val=*it1*100000LL+*it2;
					if(LEN_DIGIT(val)==LEN_DIGIT(val+val))
					    ans[++nAns]=val;
					//printf("%I64d %I64d\n",val,val*2);
				}
				//scanf("%*s");
			}
		}
}
int main() {
/*    int64 hash=0;
		for(int i=0;i<10;i++)
			hash=(hash<<4)+10;
  printf("%I64d\n",hash);*/
  //long tt=clock();
	gen();
	sort(ans+1,ans+nAns+1);
	//printf("%d\n",clock()-tt);

/*printf("%d\n",nAns);
	for(int i=1;i<=100;i++)
	    printf("%I64d ",ans[i]);
	puts("OK");*/

	int T;
	for(scanf("%d",&T);T;T--) {
		int64 A,B;
		scanf("%lld%lld",&A,&B);
		printf("%d\n",upper_bound(ans+2,ans+nAns+1,B)-lower_bound(ans+2,ans+nAns+1,A));
	}
	scanf("%*s");
}
