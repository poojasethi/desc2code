#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<iostream>
#define mem(a) memset(a,0,sizeof(a))
using namespace std;
struct node{int y,c,next;}a[500000];
int len=1,first[11000],st,ed,p[11000],tail,inf=9999999,h[11000];
void ins(int x,int y,int c)
{
	len++;a[len].y=y;a[len].c=c;a[len].next=first[x];first[x]=len;
	len++;a[len].y=x;a[len].c=0;a[len].next=first[y];first[y]=len;
}
int bfs()
{
	mem(h);h[st]=1;p[1]=st;tail=1;
	for(int i=1;i<=tail;i++)
	{
		int x=p[i];
		for(int k=first[x];k;k=a[k].next)
		{
			int y=a[k].y;
			if(h[y]==0 && a[k].c>0) {h[y]=h[x]+1;p[++tail]=y;}
		}
	}
	return h[ed];
}
int dfs(int x,int flow)
{
	if(x==ed) return flow;
	int delta=0;
	for(int k=first[x];k;k=a[k].next)
	{
		int y=a[k].y;
		if(delta==flow) break;
		if(h[y]==h[x]+1 && a[k].c>0) {int t=dfs(y,min(a[k].c,flow-delta));delta+=t;a[k].c-=t;a[k^1].c+=t;}
	}
	if(delta==0) h[x]=0;
	return delta;
}
int main()
{
	int n,m,l;
	scanf("%d%d%d",&n,&m,&l);
	st=n*(m+1)+1;
	ed=st+1;
	for(int i=1;i<=n;i++)
	{
		ins(st,(i-1)*(m+1)+1,inf);
		for(int j=1;j<=m;j++)
		{
			int d;
			scanf("%d",&d);
			if(d==-1) d=inf;
			else d=100-d;
			ins((i-1)*(m+1)+j,(i-1)*(m+1)+j+1,d);
		}
		ins(i*(m+1),ed,inf);
	}
	for(int i=1;i<=l;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		for(int j=1;j<=m;j++) ins((x-1)*(m+1)+j,(y-1)*(m+1)+j+1,inf);
	}
	int ans=0;
	while(bfs())
	{
		int t=dfs(st,inf);while(t) {ans+=t;t=dfs(st,inf);}
	}
	double r;
	r=100*n-ans;
	r/=n;
	printf("%.2lf",r);
}