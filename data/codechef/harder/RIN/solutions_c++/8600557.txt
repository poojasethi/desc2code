#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	105
#define m	1000005
#define INF	(1<<30)
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,M,K,C,D=1,S,T,Q[m],st[m],Dis[m],A[n][n],ID[n][n];
struct	Lin{int v,f,next;}E[m];

void	Link(int u,int v,int f){
		E[++D]=(Lin){v,f,st[u]};	st[u]=D;
		E[++D]=(Lin){u,0,st[v]};	st[v]=D;
}
bool	BFS(){
		For(i,1,C)	Dis[i]=-1;	Dis[Q[1]=S]=0;
		for (int l=0,r=1;l<r;)	{
			int u=Q[++l];
			for (int i=st[u],v;i;i=E[i].next)
			if	(E[i].f&&Dis[v=E[i].v]==-1){
				Dis[Q[++r]=v]=Dis[u]+1;
				if	(v==T)	return	1;
			}
		}
		return	0;
}
int		DFS(int u,int Lim)	{
		if	(u==T)	return	Lim;	int c=0;
		for (int i=st[u],v;i;i=E[i].next)
		if	(E[i].f&&Dis[u]+1==Dis[v=E[i].v]){
			int t=DFS(v,min(Lim-c,E[i].f));
			if	(t)	{
				E[i].f-=t;	E[i^1].f+=t;c+=t;
				if	(c==Lim)break;
			}	else	Dis[v]=-1;
		}
		return	c;
}

int		main(){
		scanf("%d%d%d",&N,&M,&K);
		For(i,1,N)	For(j,1,M)	scanf("%d",&A[i][j]);

		S=++C;	T=++C;
		For(i,1,N)	{
			For(j,1,M+1)ID[i][j]=++C;
			Link(S,ID[i][1],INF);	Link(ID[i][M+1],T,INF);
			For(j,1,M)	Link(ID[i][j],ID[i][j+1],A[i][j]!=-1?100-A[i][j]:INF);
		}

		For(i,1,K)	{
			int u,v;	scanf("%d%d",&u,&v);
			For(j,1,M)	Link(ID[u][j],ID[v][j+1],INF);
		}

		int Ans=N*100;
		for (;BFS();)	Ans-=DFS(S,INF);
		printf("%.2lf\n",1.*Ans/N);
}