#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <queue>
using namespace std;
#define N 105
#define M 20050
#define INF 0x3f7f7f7f
int fi[M],c[M*5][3],sg[N][N],h[M];
int S=M-1,T=M-2,st,n,m,p,ans,ss=1;queue <int> li;
inline int Read()
 {
 	int x=0;char y;bool z=false;
 	do y=getchar(),z|=y=='-'; while (y<'0'||y>'9');
 	do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
 	return z?-x:x;
 }
inline void Line(int x,int y,int z)
 {
 	c[++ss][0]=y;c[ss][1]=fi[x];fi[x]=ss;c[ss][2]=z;
 	c[++ss][0]=x;c[ss][1]=fi[y];fi[y]=ss;
 	return;
 }
bool BFS()
 {
 	for (int i=1;i<=st;i++) h[i]=false;
 	h[T]=false;h[S]=true;li.push(S);
    while (!li.empty())
     {
     	int k=li.front();li.pop();
     	for (int i=fi[k];i;i=c[i][1])
     	 if (c[i][2]&&!h[c[i][0]])
     	   h[c[i][0]]=h[k]+1,li.push(c[i][0]);
     }
    return h[T]>0;
 }
int DFS(int x,int y)
 {
 	if (x==T) return y;
 	int k,l=false;
 	for (int i=fi[x];i&&y;i=c[i][1])
 	 if (c[i][2]&&h[c[i][0]]==h[x]+1)
 	  {
 	  	 int k=DFS(c[i][0],min(y,c[i][2]));
 	  	 if (k) y-=k,l+=k,c[i][2]-=k,c[i^1][2]+=k;
 	  }
 	if (!l) h[x]=-1;
 	return l;
 }

int main()
 {
 	//freopen("input.txt","r",stdin);
 	n=Read();m=Read();p=Read();ans += 100 * n;
 	for (int i=1;i<=n;i++)
 	 for (int j=0;j<=m;j++) sg[i][j]=++st;
 	for (int i=1;i<=n;i++)
 	  Line(S,sg[i][0],INF),Line(sg[i][m],T,INF);
 	for (int i=1;i<=n;i++) for (int j=1;j<=m;j++)
 	 {
 	 	int k=Read();k = k == -1 ? INF : 100 - k;
 	 	Line(sg[i][j-1],sg[i][j],k);
 	 }
 	while (p--)
 	 {
 	 	int k=Read(),l=Read();
 	 	for (int i=0;i<m;i++) Line(sg[k][i],sg[l][i+1],INF);
 	 }
 	while (BFS()) ans-=DFS(S,INF);
 	printf("%.2lf\n",(1.0*ans)/n);
 	return 0;
 }