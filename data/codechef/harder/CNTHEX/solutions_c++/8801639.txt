#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
typedef long long LL;
//type: 0->11111,1->2111,2->221,3->311,4->32,5->41,6->5
const int mod=1000000007;
const int bn[7]={5,4,3,3,2,2,1};
const int rp[7]={1,2,2,3,3,4,5};
const int di[7]={120,6,2,2,1,1,1};
const int w[7][7]={
	{0,60,30,20,10,5,1},
	{0,0,6,6,4,3,1},
	{0,0,0,0,2,1,1},
	{0,0,0,0,1,2,1},
	{0,0,0,0,0,0,1},
	{0,0,0,0,0,0,1},
	{0,0,0,0,0,0,0}
};
const int c[7][6]={
	{1,-5,10,-10,5,-1},
	{1,-3,2,2,-3,1},
	{1,-1,-2,2,1,-1},
	{1,-2,1,-1,2,-1},
	{1,0,-1,-1,0,1},
	{1,-1,0,0,-1,1},
	{1,0,0,0,0,-1}
};
int N,L,X,K;
int ans=0,f[7];

int Pow(int a,int x) {
	int ret=1;
	for (;x;x>>=1,a=LL(a)*a%mod)
		if (x&1)
			ret=LL(ret)*a%mod;
	return ret;
}

int calc2(LL n,int typ) {
	if (typ==0) {//11111
		int ret=1;
		for (int i=1;i<=5;i++) ret=ret*LL(n+i)%mod;
		return ret*LL(Pow(120,mod-2))%mod;
	}
	if (typ==1) {//2111
		//?
		return ((n+1)*(n+3)%mod*(n+3)%mod*(n+5)+(n%2==0)*3)%mod*Pow(48,mod-2)%mod;
	}
	if (typ==2) {//221
		//?
		return ((n+1)*(n+3)%mod*(n+5)+(n%2==0)*3*(n+3))%mod*Pow(24,mod-2)%mod;
	}
	if (typ==3) {//311
		//?
		return ((n+1)*(n+4)%mod*(n+4)+(n+1)%3*2)%mod*Pow(18,mod-2)%mod;
	}
	if (typ==4) {//32
		//?
		return ((n+1)*(n+5)+(n%2==0)*3+(n%3==0)*4)%mod*Pow(12,mod-2)%mod;
	}
	if (typ==5) {//41
		return LL(n/4+1)*(n+1-n/4*2)%mod;
	}
	if (typ==6) {//5
		return n/5+1;
	}
}

int calc(int N,int typ) {
	int ret=0;
	for (int i=0;i<6;i++)
		if (N>=5+LL(X)*i)
			ret=(ret+LL(c[typ][i])*calc2(N-X*i-5,typ))%mod;
	return ret;
}

void work(int mx) {
	for (int i=6;i>=0;i--) {
		f[i]=(Pow(X,bn[i])-calc(mx,i))%mod;
		for (int j=6;j>i;j--)
			f[i]=(f[i]-LL(w[i][j])*f[j])%mod;
		f[i]=LL(f[i])*Pow(di[i],mod-2)%mod;
		if (rp[i]<=K) ans=(ans+f[i])%mod;
	}
}

int main() {
	cin>>N>>L>>X>>K;
	for (int i=L;i<=N;i++) work(i);
	cout<<(ans+mod)%mod<<endl;
	return 0;
}