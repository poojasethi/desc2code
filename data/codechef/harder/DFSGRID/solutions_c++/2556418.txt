#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <string.h>
#include <map>
#define N 222222
using namespace std;
long long f(long long R, long long C, long long sr, long long sc, long long tr, long long tc)
{
	if ((sr == tr && sc <= tc) || (tc == C && tr >= sr))
		return tr - sr + tc - sc + 1;
	if (tr > sr)
	{
		long long cur = R - sr + C - sc + 1 + (C - 1) * (R - tr);
		if ((R - tr) % 2 == 0)
			cur += C - tc;
		else 
			cur += tc;
		return cur;
	}
	if (sc == 1)
	{
		long long cur = C * (R - tr);
		if ((sr - tr) % 2 == 0)
			cur += tc;
		else
			cur += C - tc + 1;
		return cur;
		
	}
	if (sr == R)
	{
		if (sc == C)
		{
			long long cur = C * (R - tr);
			if ((R - tr) % 2 == 0)
				cur += C - tc + 1;
			else
				cur += tc;
			return cur;
		}
		if (tc - tr >= sc - sr)
		{
			long long cur = C * (R - tr);
			if ((sr - tr) % 2 == 1)
			{
				long long p = max(1ll, sc - (sr - tr - 1));
				cur += C - p + 1 + C - tc + 1 - C;
			}
			else
			{
				long long p = max(1ll, sc - (sr - tr));
				cur += tc - p + 1;
			}
			return cur;
		}
		long long cur = C * (R - tr);
		if ((sr - tr) % 2 == 0)
		{
			long long p = sc - (sr - tr + 1);
			cur += C - tc + 1;
			if (tr > 1)
				cur += C - p + 1;
		}
		else
		{
			long long p = sc - (sr - tr);
			cur += C - p + 1 + tc;
		}
		return cur;
	}
	if ((R - sr) % 2 == 0)
	{
		long long cur = C * (R - tr);
		if ((sr - tr) % 2 == 0)
			cur += C - tc + 1;
		else
			cur += tc;
		return cur;
	}
	if (sr == tr)
	{
		return C * (R - sr + 1) - (sc - tc - 1);
	}
	if (tc - tr >= sc - sr)
	{
		long long cur = C * (R - tr);
		if ((sr - tr) % 2 == 1)
		{
			long long p = max(1ll, sc - (sr - tr));
			cur += tc - p + 1;
		}
		else
		{
			long long p = max(1ll, sc - (sr - tr - 1));
			cur += C - p + 1 + C - tc + 1 - C;
		}
		return cur;
	}
	long long cur = C * (R - tr);
	if ((sr - tr) % 2 == 1)
	{
		long long p = sc - (sr - tr + 1);
		cur += C - tc + 1;
		if (tr > 1)
			cur += C - p + 1;
	}
	else
	{
		long long p = sc - (sr - tr);
		cur += C - p + 1 + tc;
	}
	return cur;
}
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output1.txt", "w", stdout);
	int t = 1;
	cin >> t;
	for (int i = 0; i < t; i++)
	{
		long long R, C, sr, sc, tr, tc;
		cin >> R >> C >> sr >> sc >> tr >> tc;
		cout << f(R, C, sr, sc, tr, tc) << "\n";
	}
	//cin >> t;
	return 0;
}
