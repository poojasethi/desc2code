#include <iostream>
#include <fstream>
#include <cstdio>
#include <iomanip>
#include <sstream>
#include <cstring>
#include <string>
#include <cmath>
#include <stack>
#include <list>
#include <queue>
#include <deque>
#include <set>
#include <map>
#include <vector>
#include <algorithm>
#include <numeric>
#include <utility>
#include <functional>
#include <limits>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;
typedef pair<int,int> pii;
typedef vector<vector<int> > graph;

const double pi = acos(-1.0);

#define oned(a, x1, x2) { cout << #a << ":"; for(int _i = (x1); _i < (x2); _i++){ cout << " " << a[_i]; } cout << endl; }
#define twod(a, x1, x2, y1, y2) { cout << #a << ":" << endl; for(int _i = (x1); _i < (x2); _i++){ for(int _j = (y1); _j < (y2); _j++){ cout << (_j > y1 ? " " : "") << a[_i][_j]; } cout << endl; } }

#define mp make_pair
#define pb push_back
#define fst first
#define snd second

ll n, m, sx, sy, fx, fy;

void solve() {
	ll cnt = 0;
	
	if(sy==fy && sx<=fx) {
		cout << fx-sx+1 << endl;
		return;
	}
	cnt += m-sx+1;
	
	if(m==fx && sy<fy) {
		cout << cnt+fy-sy << endl;
		return;
	}
	cnt += n-sy;
	
	if(sy<fy) {
		ll ans = cnt;
		ans += (n-fy)*(m-1);
		ans += (n-fy)%2 ? fx : m-fx;
		cout << ans << endl;
		return;
	}
	cnt += (n-sy)*(m-1);
	
	if(sx==1) {
		ll ans = cnt;
		ans += (sy-fy-1)*m;
		ans += (sy-fy)%2 ? m-fx+1 : fx;
		cout << ans << endl;
		return;
	}
	
	if(sx==m && sy==n) {
		ll ans = (n-fy)*m;
		ans += (n-fy)%2 ? fx : m-fx+1;
		cout << ans << endl;
		return;
	}
	
	if((n-sy)%2==0) {
		if(sy==n) {
			ll px, py;
			if(sx < sy) {
				px = 1;
				py = 1+sy-sx;
			} else {
				px = 1+sx-sy;
				py = 1;
			}
			
			if(fy>py && fy-fx>sy-sx) {
				ll ans = cnt;
				ans += (sy-fy)*(m+1);
				ans += (sy-fy)%2 ? fx : (m+1)-(fx-1);
				cout << ans << endl;
				return;
			} else if(fy>=py && fy-fx<=sy-sx) {
				ll ans = cnt;
				ans += (sy-fy-1)*(m+1);
				ans += (sy-fy)%2 ? m-(fx-1) : fx+1;
				cout << ans << endl;
				return;
			}
			cnt += (sy-py)*(m+1);
			
			if(fy==py) {
				cout << ((sy-py)%2 ? cnt+fx : cnt+(px-fx)) << endl;
				return;
			}
			cnt += px-1;
			
			ll ans = cnt;
			ans += (py-fy-1)*m;
			ans += (sy-fy)%2 ? m-(fx-1) : fx;
			cout << ans << endl;
			return;
		}
		
		if(sy==fy) {
			cout << cnt+sx-fx << endl;
			return;
		}
		cnt += sx-1;
		
		ll ans = cnt;
		ans += (sy-fy-1)*m;
		ans += (sy-fy)%2 ? fx : m-fx+1;
		cout << ans << endl;
	} else {
		ll px, py;
		if(sx < sy) {
			px = 1;
			py = 1+sy-sx;
		} else {
			px = 1+sx-sy;
			py = 1;
		}
		
		if(fy>py && fy-fx>sy-sx) {
			ll ans = cnt;
			ans += (sy-fy)*(m+1);
			ans += (sy-fy)%2 ? (m+1)-(fx-1) : fx;
			cout << ans << endl;
			return;
		} else if(fy>=py && fy-fx<=sy-sx) {
			ll ans = cnt;
			ans += (sy-fy-1)*(m+1);
			ans += (sy-fy)%2 ? fx+1 : m-(fx-1);
			cout << ans << endl;
			return;
		}
		cnt += (sy-py)*(m+1);
		
		if(fy==py) {
			cout << ((sy-py)%2 ? cnt+(px-fx) : cnt+fx) << endl;
			return;
		}
		cnt += px-1;
		
		ll ans = cnt;
		ans += (py-fy-1)*m;
		ans += (sy-fy)%2 ? fx : m-(fx-1);
		cout << ans << endl;
	}
}

int main() {
//	freopen("input.in", "r", stdin);
	cin.sync_with_stdio(false);
	cout.sync_with_stdio(false);
	int t; cin >> t;
	for(int i = 0; i < t; i++) {
		cin >> n >> m >> sy >> sx >> fy >> fx;
		solve();
	}
}
