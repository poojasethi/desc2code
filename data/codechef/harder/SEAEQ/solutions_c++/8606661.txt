#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

ll f[511][511*510/2]={0};
int c[511][511];
int fac[511];
int main()
{
	f[1][0]=1;
	for (int n=1;n<500;n++){
		for (int i=n*(n-1)/2;i>=0;i--){
			f[n+1][i]+=f[n][i];
			f[n+1][i+n+1]-=f[n][i];
		}
		for (int i=1;i<=1+n*(n+1)/2;i++)f[n+1][i]+=f[n+1][i-1];
		for (int i=0;i<=n*(n+1)/2;i++)f[n+1][i]%=mo;
	}
	for (int n=1;n<=500;n++){
		for (int i=1;i<=n*(n-1)/2;i++)f[n][i]=(f[n][i-1]+f[n][i])%mo;
	}
	c[0][0]=1;
	for (int i=1;i<=500;i++){
		c[i][0]=1;
		for (int j=1;j<=i;j++){
			c[i][j]=(c[i-1][j-1]+c[i-1][j])%mo;
		}
	}
	fac[0]=1;
	for (int i=1;i<=500;i++)fac[i]=1ll*fac[i-1]*i%mo;
	for (int i=1;i<=500;i++)fac[i]=1ll*fac[i]*fac[i]%mo;
	for (int i=1;i<=500;i++)
		for (int j=1;j<=500;j++)c[i][j]=1ll*c[i][j]*c[i][j]%mo*(i-j+1)%mo*fac[i-j]%mo;
	int tes;scanf("%d",&tes);
	while(tes--){
		int n,e;
		scanf("%d%d",&n,&e);
		ll ans=0;
		for (int l=1;l<=n;l++){
			int x=f[l][min(e,l*(l-1)/2)];
			x=1ll*x*c[n][l]%mo;
			ans=(ans+x);
		}
		ans%=mo;
		printf("%d\n",int(ans));
	}
	return 0;
}
