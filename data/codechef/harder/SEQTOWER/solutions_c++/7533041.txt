#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<vector>
using namespace std;
#define lim 5001
int cs,n,mod,i,s,x,y,j,p;
int C[lim],L[lim],A[100001],N[lim],P[lim],Y[lim][lim],BE[lim][lim];
vector<int> V;
int gcd(int a,int b)
{
  int g,x2;
  if(a<b)
    return gcd(b,a);
  if(!b)
  {
    x=1;
    y=0;
    return a;
  }
  g=gcd(b,a%b);
  x2=x;
  x=y;
  y=x2-a/b*y;
  return g;
}
int be(int b,int e,int m)
{
  int x;
  if(!e)
    return 1%m;
  x=be(b,e/2,m);
  x=x*x%m;
  if(e&1)
    x=x*b%m;
  return x;
}
void rec(int len,int m)
{
  int v,i,z,m2,m1;
  if(len==1)
  {
    for(i=0;i<m;i++)
      N[i]=0;
    for(i=0;i<n;i++)
    {
      z=A[i]%m;
      N[z]++;
      if(N[z]>=mod)
        N[z]-=mod;
    }
    return;
  }
  if(m==1)
  {
    N[0]=be(n,len,mod);
    return;
  }
  rec(len-1,L[m]);
  for(i=0;i<m;i++)
    C[i]=0;
  for(i=0;i<n;i++)
  {
    if(gcd(A[i],m)==1)
      C[A[i]%m]++;
    else
    {
      m2=m;
      m1=1;
      while(!(m2%A[i]))
      {
        m1*=A[i];
        m2/=A[i];
      }
      gcd(m2,m1%m2);
      y=(y%m2+m2)%m2;
      z=A[i]%m2*m1*y;
      C[z%m]++;
    }
  }
  for(v=0;v<L[m];v++)
    P[v]=N[v];
  for(i=0;i<m;i++)
    N[i]=0;
  for(i=0;i<m;i++)
    if(C[i])
      for(v=0,z=1;v<L[m];v++)
      {
        N[z]=(N[z]+P[v]*C[i])%mod;
        z=z*i%m;
      }
}
int main()
{
  for(i=1;i<lim;i++)
    for(n=i,j=2,L[i]=1;j<=n;j++)
      if(!(n%j))
      {
        p=j-1;
        n/=j;
        while(!(n%j))
        {
          p*=j;
          n/=j;
        }
        L[i]=L[i]*p/gcd(L[i],p);
      }
  scanf("%d",&cs);
  int c=0;
  while(cs--)
  {
    scanf("%d%d",&n,&mod);
    for(i=0;i<n;i++)
      scanf("%d",&A[i]);
    rec(n,mod);
    for(i=s=0;i<mod;i++)
      s=(s+i*N[i])%mod;
    printf("%d\n",s);
    //if(++c==999)
    //  return 0;
  }
  return 0;
}
