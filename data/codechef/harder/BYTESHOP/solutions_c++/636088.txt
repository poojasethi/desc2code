#include <stdio.h>

#define MAXNM 40005
#define MOD 1000000007LL

long long fat[MAXNM], invfat[MAXNM];

long long modpow(long long a, int e)
{
	if(e == 0) return 1;
	long long r = modpow(a, e/2);
	r = (r*r)%MOD;
	if(e%2) return (r*a)%MOD;
	return r;
}

long long bin(int n, int k)
{
	if(k > n) return 0;
	long long ret = (fat[n]*invfat[k])%MOD;
	return (ret*invfat[n-k])%MOD;
}

int main()
{
	fat[0] = 1; invfat[0] = 1;
	for(int i = 1; i < MAXNM; i++) {
		fat[i] = (fat[i-1]*i)%MOD;
		invfat[i] = modpow(fat[i], MOD-2);
	}

	int T;
	scanf("%d", &T);
	while(T--) {
		int n, m, r, sol = 0;
		scanf("%d%d%d", &n, &m, &r);
		for(int i = 0; i < n; i++)
			for(int j = 0; j < m; j++) {
				long long prod = (bin(n,i)*bin(m,j))%MOD;
				if((i+j)%2)
					sol -= (prod*bin((n-i)*(m-j),r))%MOD;
				else 
					sol += (prod*bin((n-i)*(m-j),r))%MOD;
				if(sol < 0) sol += MOD;
				if(sol >= MOD) sol -= MOD;
			}
		printf("%d\n", sol);
	}
	return 0;
}
