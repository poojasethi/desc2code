#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
typedef long long qword;
#define MAXN 401000
int prime[MAXN],topp=-1;
int mnp[MAXN];
bool pflag[MAXN];
void init()
{
		for (int i=2;i<MAXN;i++)
		{
				if (!pflag[i])
				{
						prime[++topp]=i;
						mnp[i]=i;
				}
				for (int j=0;j<=topp && i*prime[j]<MAXN;j++)
				{
						pflag[i*prime[j]]=true;
						mnp[i*prime[j]]=prime[j];
						if (i%prime[j]==0)break;
				}
		}
}
vector<int> factn;
vector<qword> analyse(qword x,qword s)
{
		vector<int> factor=factn;
		while (x!=1)
				factor.push_back(mnp[x]),x/=mnp[x];
		sort(factor.begin(),factor.end());
		vector<qword> factor2;
		vector<qword> tmp;
		factor2.push_back(1);
		for (register int i=0;i<factor.size();i++)
		{
				if (!i || factor[i]!=factor[i-1])x=1,factor2.insert(factor2.end(),tmp.begin(),tmp.end()),tmp.clear();
				x*=factor[i];
				for (register int j=factor2.size()-1;j>=0;j--)
						tmp.push_back(factor2[j]*x);
		}
		x=1,factor2.insert(factor2.end(),tmp.begin(),tmp.end()),tmp.clear();
		return factor2;
}
struct bint
{
		int topn;
		int numb[1010];
		bint(qword x=0)
		{
				memset(numb,0,sizeof(numb));
				topn=-1;
				while (x)
				{
						numb[++topn]=x%10;
						x/=10;
				}
		}
		void print()
		{
				if (topn==-1)topn=0;
				for (int i=topn;i>=0;i--)
						printf("%d",numb[i]);
				printf("\n");
		}
};
bint operator * (bint b1,bint b2)
{
		bint res;
		for (int i=0;i<=b1.topn;i++)
				for (int j=0;j<=b2.topn;j++)
						res.numb[i+j]+=b1.numb[i]*b2.numb[j];
		res.topn=b1.topn+b2.topn;
		for (int i=0;i<=res.topn;i++)
				if (res.numb[i]>=10)
				{
						res.numb[i+1]+=res.numb[i]/10;
						res.numb[i]%=10;
				}
		while (res.numb[res.topn+1])
		{
				++res.topn;
				res.numb[res.topn+1]+=res.numb[res.topn]/10;
				res.numb[res.topn]%=10;
		}
		return res;
}

int main()
{
		//freopen("short20.in","r",stdin);
		int nn;
		scanf("%d",&nn);
		init();
		while (nn--)
		{
				int n;
				qword l;
				scanf("%d%lld",&n,&l);
				if (n==0)
				{
						bint a(l-1);
						bint b(l-1);
						bint res;
						res=a*b;
						res.print();
						continue;
				}
				qword c,d;
				int ans=0;
				int x=n;
				factn.clear();
				for (int i=0;i<=topp;i++)
						while (x%prime[i]==0)
								factn.push_back(prime[i]),x/=prime[i];
				vector<qword> fct;
				for (c=1;c<min(l-n,25ll*n/10+1);c++)
				{
						qword s=(qword)n*(n+c-1);
						if (c<4000)
						{
								fct=analyse(n+c-1,s);
								for (register int i=fct.size()-1;i>=0;i--)
								{
										qword t=fct[i];
										if ((t+n)%c==0)
										{
												d=s/t;
												if (c<=d && d<l-n)
												{
														ans+=(1+(c!=d));
												}
										}
								}
						}else
						{
								int tt;
								tt=(((qword)n*n-n)/c+2*n)/c;
								for (register int k=1;k<=tt;k++)
								{
										if (k*c-n<=0)continue;
										d=s/(k*c-n);
										if (c<=d && s%(k*c-n)==0 && d<l-n)
										{
												ans+=(1+(c!=d));
										}
								}
						}
				}
				printf("%d\n",ans);
		}
}