#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	300005
#define I64	long long
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T,P[n][35];

I64		N,M;

namespace	Case1{
		int		A[105],B[105];

		void	Main(I64 N){
			*A=0;
			for	(;N;N/=10)	A[++*A]=N%10;
			if	(!N)	A[++*A]=0;

			*B=A[0]*3;
			For(i,1,*B)	B[i]=0;
			For(i,1,*A)	For(j,1,*A)
				B[i+j-1]+=A[i]*A[j];

			For(i,2,*B)	B[i]+=B[i-1]/10,B[i-1]%=10;
			for	(;!B[*B]&&*B>1;--*B);
			for	(;*B;--*B)	printf("%d",B[*B]);
			puts("");
		}
};

namespace	Case2{
		int		A[105],B[105];

		I64		C,D,T,Ans;

		void	DFS(int d,I64 D){
			if	(D+N>=M)	return;
			if	(d>*A)	{
				if	(D>=C&&(N*(C+N-1)/D+N)%C==0)	Ans+=1+(C!=D);
				return;
			}
			For(i,0,B[d])	DFS(d+1,D),D*=A[d];
		}

		void	Main(){
			int L=min(3*N+0ll,M-1-N);	Ans=0;
			For(i,1,L)	{
				C=i;T=N*(C+N-1);*A=0;

				if	(C<=4000)	{
					For(i,1,*P[N])	if	(T%P[N][i]==0)
					for	(++*A,A[*A]=P[N][i],B[*A]=0;T%P[N][i]==0;)	B[*A]++,T/=P[N][i];

					For(i,1,*P[C+N-1])	if	(T%P[C+N-1][i]==0)
					for	(++*A,A[*A]=P[C+N-1][i],B[*A]=0;T%P[C+N-1][i]==0;)	B[*A]++,T/=P[C+N-1][i];

					DFS(1,1);
				}	else	{
					for	(I64 k=-N%C+C;;k+=C){
						D=N*(C+N-1)/k;
						if	(D<C)	break;
						if	(k*D==N*(C+N-1)&&D+N<M)	Ans+=1+(C!=D);
					}
				}
			}
			printf("%lld\n",Ans);
		}
};

int		main(){
		N=300000;
		For(i,2,N)	if	(*P[i]==0)
		For(j,1,N/i)P[i*j][++*P[i*j]]=i;

		scanf("%d",&T);
		for	(;T--;)	{
			scanf("%lld%lld",&N,&M);
			if	(!N)	Case1::Main(M-1);
				else	Case2::Main();
		}
}