#include <stdio.h>
#include <stdlib.h>
#include <vector>
using namespace std;

int T,n,m,i,j,k,c,p,ans;
int pi[105],num[105],tot;
long long K,L,l,d;

vector<int> g[110005];

void dfs(int x,long long y)
{
	if(y+n>=K)return;
	if(x>tot)
	{
		if(y>=c&&(L/y+n)%c==0)ans+=1+(y!=c);
		return;
	}
	for(int i=0;i<=num[x];++i)
	{
		dfs(x+1,y);
		y*=pi[x];
	}
}

int A[105],B[105];

int main()
{
	n=110000;
	for(i=2;i<=n;++i)if(g[i].size()==0)
	for(j=i;j<=n;j+=i)
	g[j].push_back(i);
	scanf("%d",&T);
	for(;T;--T)
	{
		scanf("%d%lld",&n,&K);ans=0;
		if(n==0)
		{
			for(m=0,--K;K;K/=10)A[++m]=K%10;
			for(i=1;i<=m+m+10;++i)B[i]=0;
			for(i=1;i<=m;++i)
			for(j=1;j<=m;++j)
			B[i+j-1]+=A[i]*A[j];
			for(i=1;i<=m+m+10;++i)
			B[i+1]+=B[i]/10,B[i]%=10;
			for(m=m+m+10;m&&!B[m];--m);
			if(!m)++m;
			for(i=m;i>=1;--i)printf("%d",B[i]);
			printf("\n");
			continue;
		}
		m=3*n;if(K-n-1<m)m=K-n-1;
		for(c=1;c<=m;++c)
		if(c<=4000)
		{
			tot=0;
			L=(long long)(c+n-1)*n;
			for(i=g[n].size()-1;i>=0;--i)
			{
				k=g[n][i];
				if(L%k==0)
				for(pi[++tot]=k,num[tot]=0;L%k==0;L/=k)++num[tot];
			}
			for(i=g[c+n-1].size()-1;i>=0;--i)
			{
				k=g[c+n-1][i];
				if(L%k==0)
				for(pi[++tot]=k,num[tot]=0;L%k==0;L/=k)++num[tot];
			}
			L=(long long)(c+n-1)*n;
			dfs(1,1);
		}
		else
		{
			L=(long long)(c+n-1)*n;
			for(l=-n%c+c;l<=L;l+=c)
			{
				d=L/l;
				if(d>=c)
				{
					if(L%l==0&&n+d<K)ans+=1+(c!=d);
				}
				else break;
			}
		}
		printf("%d\n",ans);
	}
}