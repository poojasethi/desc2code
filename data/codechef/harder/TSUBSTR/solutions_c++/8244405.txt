#include <cstdio>
#include <cstdlib>
#include <iostream>
using namespace std;
typedef long long int ll;

template <class Q>
void gi(Q &x){char ch = getchar(); x = 0; while (ch < '0' || ch > '9') ch = getchar(); while (ch >= '0' && ch <= '9') x = x * 10 + ch - 48, ch = getchar();}

#define sz 550200
int go[sz][26];
int N = 1, tim[sz], par[sz];
int expand(int la, char c){
  int i, p, q, nq, j;
  p = ++N; i = la; tim[p] = tim[la] + 1;
  for (; i && !go[i][c]; i = par[i]) go[i][c] = p;
  if (!go[i][c]){par[p] = 1; return p;}
  q = go[i][c];
  if (tim[q] == tim[i] + 1){par[p] = q; return p;}
  nq = ++N; tim[nq] = tim[i] + 1; par[nq] = par[q]; par[q] = par[p] = nq;
  for (j = 0; j < 26; j++) go[nq][j] = go[q][j];
  for (; go[i][c] == q; i = par[i]) go[i][c] = nq;
  return p;
}
int deg[sz], q[sz];
ll g[sz];

void topsort(){
  int i, j, k, l = 1, r = 0;
  for (i = 1; i <= N; i++)
    for (j = 0; j < 26; j++)
      if (go[i][j]) deg[go[i][j]]++;
  for (i = 1; i <= N; i++) if (deg[i] == 0) q[++r] = i;
  while (l <= r){
    k = q[l++];
    for (j = 0; j < 26; j++)
      if (go[k][j]){
	deg[go[k][j]]--;
	if (deg[go[k][j]] == 0)
	  q[++r] = go[k][j];
      }
  }
}

void dp(){
  int i, j;
  for (i = N; i; i--){
    g[q[i]] = 1;
    for (j = 0; j < 26; j++)
      if (go[q[i]][j]) g[q[i]] += g[go[q[i]][j]];
  }
}

int query(char *q, ll K){
  int v = 1, x;
  if (K > g[v]) return printf("-1\n");
  while (K){
    if (K == 1) return printf("\n");
    K--;
    for (int i = 0; i < 26; i++)
      if (go[v][q[i] - 'a']){
	x = go[v][q[i] - 'a'];
	if (g[x] < K) K -= g[x];
	else{v = x; putchar(q[i]); break;}
      }
  }
}

int n, Q;
char s[sz];
ll K;

int node[sz], next[sz], to[sz], e;
void ins(int x, int y){e++; next[e] = node[x]; node[x] = e; to[e] = y;}
int QAQ[sz], inq[sz], rt[sz];
void bfs(){
  int i, j, k, l, r;
  inq[QAQ[l = r = 0] = 1] = 1;
  rt[1] = expand(N = 1, s[1] - 'a');
  while (l <= r){
    k = QAQ[l++];
    for (j = node[k]; j; j = next[j])
      if (!inq[to[j]]){
	inq[QAQ[++r] = to[j]] = 1;
	rt[to[j]] = expand(rt[k], s[to[j]] - 'a');
      }
  }
}

char ord[202];
int main(){
  int x, y;
  scanf("%d %d", &n, &Q);
  scanf("%s", s + 1);
  for (int i = 1; i < n; i++){
    scanf("%d %d", &x, &y); ins(x, y); ins(y, x);
  }
  bfs();
  topsort(); dp();
  cout << g[1] << endl;
  while (Q--){
    scanf("%s", ord); gi(K);
    query(ord, K);
  }
  return 0;
}
