#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}


char str[250005];int n;
struct node{int ch[26],m,pre;}t[500005];int ndtot;
int s;
int add(int c,int last){
	int p=last;
	if(!t[p].ch[c]){
		int np=++ndtot;
		t[np].m=t[last].m+1;
		for(;p && !t[p].ch[c];p=t[p].pre)t[p].ch[c]=np;
		if(!p)t[np].pre=s;
		else{
			int q=t[p].ch[c];
			if(t[q].m==t[p].m+1)t[np].pre=q;
			else{
				int nq=++ndtot;
				t[nq]=t[q];t[nq].m=t[p].m+1;
				t[np].pre=t[q].pre=nq;
				for(;p && t[p].ch[c]==q;p=t[p].pre)t[p].ch[c]=nq;
			}
		}
		return np;
	}else{
		int q=t[p].ch[c];
		if(t[q].m==t[p].m+1)return q;
		else{
			int nq=++ndtot;
			t[nq]=t[q];t[q].pre=nq;t[nq].m=t[p].m+1;
			for(;p && t[p].ch[c]==q;p=t[p].pre)t[p].ch[c]=nq;
			return nq;
		}
	}
}
int cnt[250005]={0};
int seq[500005];
typedef long long ll;
ll gonum[500005];


struct edge{int v,next;}e[555555];int etot=0;int g[255555];
void ae (int u,int v){e[etot].v=v;e[etot].next=g[u];g[u]=etot++;}
int qu[255555],pre[255555];
int id[255555];
int p=0,q=0;
void bfs(int rt){
	qu[q++]=rt;
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){
			pre[e[i].v]=u;
			qu[q++]=e[i].v;
		}
	}
}
int main()
{
	memset(g,-1,sizeof(g));
	int n;gn(n);
	int q;
	scanf("%d",&q);
	scanf("%s",str);
	for (int i=1;i<n;i++){
		int x,y;gn(x);gn(y);
		ae(x,y);ae(y,x);
	}
	bfs(1);
	s=ndtot=id[0]=1;
	for (int i=0;i<n;i++){
		id[qu[i]]=add(int(str[qu[i]-1]-'a'),id[pre[qu[i]]]);
	}
	for (int i=1;i<=ndtot;i++)cnt[t[i].m]++;
	for (int i=1;i<=n;i++)cnt[i]+=cnt[i-1];
	for (int i=ndtot;i>=1;i--)seq[cnt[t[i].m]--]=i;
	gonum[0]=0;
	for (int i=ndtot;i>=1;i--){
		int u=seq[i];
		gonum[u]=1;
		for (int j=0;j<26;j++)gonum[u]+=gonum[t[u].ch[j]];
	}
	cout<<gonum[s]<<endl;
	while(q--){
		scanf("%s",str);
		ll K;
		gn(K);
		if(K>gonum[s]){
			printf("-1\n");
			continue;
		}
		int p=s;
		while(1){
			/*if(p!=s)*/K--;
			if(K==0)break;
			for (int s=0;s<26;s++){
				int j=str[s]-'a';
				if(K<=gonum[t[p].ch[j]]){
					putchar(j+'a');
					p=t[p].ch[j];
					break;
				}else K-=gonum[t[p].ch[j]];
			}
		}
		putchar('\n');
	}
	return 0;
}
