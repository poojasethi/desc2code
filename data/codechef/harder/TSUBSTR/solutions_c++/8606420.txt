#include <bits/stdc++.h>
#define PR pair
#define fi first
#define se second
#define mk make_pair
#define pb push_back
#define CH (ch=getchar())
#define Exit(...)    printf(__VA_ARGS__),exit(0)
#define dprintf(...) fprintf(stderr,__VA_ARGS__)
#define rep(i,V)     for(__typeof(*V.begin()) i:  V)
#define For(i,a,b)   for(int i=(int)(a);i<=(int)(b);i++)
#define Rep(i,a,b)   for(int i=(int)(a);i< (int)(b);i++)
#define Forn(i,a,b)  for(int i=(int)(a);i>=(int)(b);i--)
#define pend(x)      ((x)=='\n'||(x)=='\r'||(x)=='\t'||(x)==' ')
using namespace std;
typedef	double		db;
typedef	long long	ll;
typedef PR<int,int> PII;
const	int N=250005;
const	ll	Inf=(ll)1e10;
const	int inf=(int)1e9;
const	int	mo=ll(1e9+7);

inline int IN(){
	char ch;CH; int f=0,x=0;
	for(;pend(ch);CH); if(ch=='-')f=1,CH;
	for(;!pend(ch);CH) x=x*10+ch-'0';
	return (f)?(-x):(x);
}

int Pow(int x,int y,int p){
	int A=1;
	for(;y;y>>=1,x=(ll)x*x%p) if(y&1) A=(ll)A*x%p;
	return A;
}

int n,fa[500005];
char s[500005];
vector<int> e[500005];
struct node{
	node *s[26],*f;
	int dep;
	ll siz;
}ex[500005],*cur=ex,*rt,*a[500005];
char st[35];

node *expand(node *tail,int w){
	if(w>=26) for(;;);
	node *p=++cur,*q=tail;
	p->dep=tail->dep+1;
	for(;q&&!q->s[w];q=q->f) q->s[w]=p;
	if(!q){
		p->f=rt;
		return p;
	}
	node *gt=q->s[w];
	if(gt->dep==q->dep+1){
		p->f=gt;
		return p;
	}
	node *nq=++cur;
	nq->f=gt->f,nq->dep=q->dep+1;
	gt->f=p->f=nq;
	memcpy(nq->s,gt->s,sizeof gt->s);
	for(;q&&q->s[w]==gt;q=q->f) q->s[w]=nq;
	return p;
}

void dfs(int x){
	for(int i=0;i<(int)e[x].size();i++){
		int v=e[x][i];
		if(v==fa[x])continue;
		fa[v]=x;
		a[v]=expand(a[x],s[v]-'a');
		dfs(v);
	}
}

ll dfs(node *x){
	if(x->siz)return x->siz;
	x->siz=1;
	Rep(i,0,26) if(x->s[i]) x->siz+=dfs(x->s[i]);
	return x->siz;
}

int Q;
int main(){
	scanf("%d%d",&n,&Q);
	scanf("%s",s+1);
	rt=++cur;
	rt->dep=1;
	For(i,2,n){
		int x,y;
		scanf("%d%d",&x,&y);
		e[x].pb(y);
		e[y].pb(x);
	}
	a[1]=expand(rt,s[1]-'a');
	dfs(1);
	dfs(rt);
	dprintf("%d\n",cur-ex);
	printf("%lld\n",rt->siz);
	while(Q--){
		scanf("%s",st);
		ll K;
		scanf("%lld",&K);
		if(K>rt->siz){
			puts("-1");
			continue;
		}
		
		node *now=rt;
		while(1){
			if(!(K-=1)) break;
			if(!now) break;
			Rep(i,0,26){
				int v=st[i]-'a';
				if(!now->s[v])continue;
				if(now->s[v]->siz<K){
					K-=now->s[v]->siz;
				}else{
					putchar(v+'a');
					now=now->s[v];
					break;
				}
			}
		}
		puts("");
	}
	return 0;
}


