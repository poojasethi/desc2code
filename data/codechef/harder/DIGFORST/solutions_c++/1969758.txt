#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<map>
#include<vector>
#include<list>
#include<set>
#include<queue>
#include<numeric>
#include<sstream>
#include<string>
#include<cmath>
#include<algorithm>
#include<stack>
using namespace std;

//#define inf 1001001010010010100ll
#define pb		push_back
#define mp 		make_pair
#define EPS		1e-9
#define ll long long
#define vi vector<int>
#define pii pair<int,int>
#define fi first
#define se second
#define inf 1000000000
//#define mod 1000000007
#define N 101
#define M 420
struct node
{
 int i,dig,mod,dis;
 bool operator<(const node&a)const
 {return dis>a.dis;}
};
int vis[N][64][M],d[N][64][M],c[N],a[N][N];
bool check(int dig,int mod)
{
 for(int i=0;i<6;i++)
 if((dig&(1<<i))&&(mod%(i+2)))return 0;
 return 1;
}
int main()
{
	//freopen("in.txt","r",stdin);
	int T,i,j,q,k,m,n,num;
	//scanf("%d",&T);
	//while(T--)
	{
	 while(~scanf("%d",&n),n)
	 {
	  for(i=0;i<n;i++)scanf("%d",&c[i]);
	  for(i=0;i<n;i++)for(j=0;j<n;j++)
	  scanf("%d",&a[i][j]);
	  node s;
	  s.i=0;s.dig=0;if(c[0]>1)s.dig=1<<(c[0]-2);
	  s.mod=c[0]%M;s.dis=c[0];
	  priority_queue<node>q;
	  q.push(s);int ans=inf;
	  memset(d,127,sizeof(d));
	  memset(vis,0,sizeof(vis));
	  d[0][s.dig][s.mod]=c[0];
	  while(!q.empty())
	  {
	   node u=q.top();q.pop();
	   if(u.i==n-1&&check(u.dig,u.mod))break;
	   vis[u.i][u.dig][u.mod]=0;
	   for(i=0;i<n;i++)
	   if(a[u.i][i])
	   {
	    node v;
	    v.i=i;v.dig=u.dig;
	    if(c[i]>1)v.dig|=(1<<(c[i]-2));v.mod=(u.mod*10+c[i])%M;
	    if(d[v.i][v.dig][v.mod]>d[u.i][u.dig][u.mod]+c[i])
	    {
	     d[v.i][v.dig][v.mod]=d[u.i][u.dig][u.mod]+c[i]	;
	     v.dis=d[v.i][v.dig][v.mod];
	     if(!vis[v.i][v.dig][v.mod])
	     q.push(v),vis[v.i][v.dig][v.mod]=1;
		 if(v.i==n-1&&check(v.dig,v.mod))
		 {ans=min(ans,d[v.i][v.dig][v.mod]);}
	    }
	   }
	  }
	  if(ans==inf)ans=-1;
	  printf("%d\n",ans);
	 }
	}
	return 0;
}
