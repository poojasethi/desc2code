#include<iostream>
#include<queue>
#include<string.h>
#include<vector>
using namespace std;

#define BUF 4096
char ibuf[BUF];
int ipt = BUF;
 
int readInt() {
    while (ipt < BUF && ibuf[ipt] < '0') ipt++;
    if (ipt == BUF) {
	fread(ibuf, 1, BUF, stdin);
	ipt = 0;
	while (ipt < BUF && ibuf[ipt] < '0') ipt++;
    }
    int n = 0;
    while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
    if (ipt == BUF) {
	fread(ibuf, 1, BUF, stdin);
	ipt = 0;
	while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
    }
    return n;
}

struct ver
{
   unsigned char mask;
   int dis,ind;
   unsigned char mod;    
};

bool operator <(const ver &a,const ver &b)
{
 return a.dis>b.dis;     
}


int N,arr[105];
int adj[105][105];
int cnt[105];
ver make(int a,int b,int c,int d)
{
 ver t;
 t.ind = a; t.dis = b; t.mask = c; t.mod=d;
 return t;   
}

int vis[105][133][87];
bool check(ver &t)
{
    if((t.mask&2)&&t.mod%2)return 0;
    if((t.mask&4)&&t.mod%3)return 0;
    if((t.mask&8)&&t.mod%4)return 0;
    if((t.mask&16)&&arr[N-1]%5)return 0;
    if((t.mask&32)&&t.mod%6)return 0;
    if((t.mask&64)&&t.mod%7)return 0; 
    return 1;
}

int dij()
{
 ver t;
 priority_queue<ver> Q;
 Q.push(make(0,arr[0],1<<(arr[0]-1),arr[0]%84));   
 memset(vis,0,sizeof vis);
 while(!Q.empty())
 {
  t = Q.top();
  Q.pop();
  
 // cout<<t.ind<<" "<<t.mask<<" "<<t.a4<<" "<<t.a7<<" "<<t.dis<<endl;
  
                   
  if(t.ind==N-1&&check(t))return t.dis; 
  int i;
  for(i=0;i<cnt[t.ind];i++)
  {
   int to = adj[t.ind][i];
   int m2 = t.mask|(1<<(arr[to]-1));
   int m3 = (t.mod*10+arr[to])%84;
   int weight = t.dis+arr[to];
   if(vis[to][m2][m3]==0||vis[to][m2][m3]>weight)
   {
                                                              vis[to][m2][m3]=weight;
                                                              Q.push(make(to,weight,m2,m3));
   }
   
  }
 }   
 return -1; 
}


int main()
{
   // freopen("tt.in","r",stdin);
   // freopen("tt.out","w",stdout);
    while(1)
    {
     N = readInt();
     if(!N)return 0;
     int i,j,x;
     for(i=0;i<N;i++)cnt[i]=0;
     for(i=0;i<N;i++)arr[i]=readInt();
     for(i=0;i<N;i++)for(j=0;j<N;j++){x=readInt();
     if(!x)continue;
     if(arr[j]==5&&arr[N-1]%5!=0)continue;
     if(arr[j]==2&&arr[N-1]%2!=0)continue;
     adj[i][cnt[i]++]=j;
     }
     cout<<dij()<<endl;       
    }
 return 0;   
}
