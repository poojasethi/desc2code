#include <iostream>
#include<cstdio>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<cstring>
using namespace std;
int n;
const int maxn=110;
const int inf=1000000000;
int v[maxn];
int mat[maxn][maxn];
int dis[maxn][450][450];
vector<int> g[maxn];
int llcm[450][450];

int dv[70];

int lcm(int a,int b)
{
    return a*b/__gcd(a,b);
}
void init()
{
    for(int i=0;i<64;i++)
    {
        dv[i]=1;

        for(int j=2;j<=7;j++)
        {
            if((i&(1<<(j-2)))!=0)
            {
                dv[i]=lcm(dv[i],j);
            }
        }
    }
}
struct node
{
    int y;
    int n,lcm,mod;
    node() {}
    node(int a,int b,int c,int d)
    {
        n=a,lcm=b,mod=c,y=d;
    }
};
bool operator<(const node &a,const node &b)
{
    return a.y>b.y;
}
int bfs(int n)
{
    priority_queue<node> p;

    for(int i=0;i<n;i++)
    {
        for(int j=0;j<=64;j++)
        {
            for(int k=0;k<420;k++)
            {
                dis[i][j][k]=inf;
            }
        }
    }

    int a,b,c,d;
    a=0;
    b=0;
    if(v[0]>1)b|=(1<<(v[0]-2));
    c=v[0];
    d=v[0];

    node tmp=node(a,b,c,d);
    p.push(tmp);

    while(!p.empty())
    {
        node top=p.top();
        p.pop();

        int x=top.n;
        int l=top.lcm;
        int m=top.mod;
        int y=top.y;


        if(y>dis[x][l][m])continue;

        if(m%dv[l]==0&&x==n-1)
        {
            return y;
        }
        for(int i=0; i<g[x].size(); i++)
        {
            a=g[x][i];
            b=l;
            if(v[a]>1)
                b|=(1<<(v[a]-2));

            c=(m*10+v[a])%420;
            d=y+v[a];

            if(dis[a][b][c]>d)
            {
                dis[a][b][c]=d;
                p.push(node(a,b,c,d));
            }
        }
    }
    return -1;
}
int main()
{
//    freopen("in","r",stdin);
    init();
    while(scanf("%d",&n),n)
    {
        int m=1;
        for(int i=0; i<n; i++)
        {
            scanf("%d",&v[i]);
        }
        for(int i=0; i<n; i++)
        {
            g[i].clear();
            for(int j=0; j<n; j++)
            {
                scanf("%d",&mat[i][j]);
                if(mat[i][j])
                    g[i].push_back(j);
            }
        }
        printf("%d\n",bfs(n));
    }
    return 0;
}
