#include<iostream>
#include<algorithm>
#include<iterator>
#include<map>
#include<vector>
#include<list>
#include<set>
#include<queue>
#include<deque>
#include<stack>
#include<bitset>
#include<functional>
#include<utility>
#include<fstream>
#include<iosfwd>
#include<sstream>
#include<iomanip>
#include<string>
#include<cmath>
#include<cstring>
#include<ctime>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<cassert>
#include<complex>
#include<numeric>

using namespace std;

#define DEBUG                            0
#define BUG(x)                           cout<<"Debugging Variable "<< #x <<endl
#define VAR(x,a)                         __typeof(a) x(a)
#define FORD(i,a,b)                      for(int i = (int)a,_b = (int)b;i>=(_b);--i)
#define FOREACH(it,v)                    for(VAR(it,(v).begin());it!=(v).end();++it)
#define FOR(i,a,b)                       for(int i=(int)(a),_b = (int)b;i<(int)(_b);++i)
#define REP(i,n)                         FOR(i,0,n)
#define REPD(i,n)                        FORD(i,n,0)
#define Size()                           size()
#define PB                               push_back
#define PF                               push_front
#define MP                               make_pair
#define SZ                               size()
#define ALL(X)                           X.begin(),X.end()
#define Clear(X)                         memset(X,0,sizeof(X))
#define PushBack                         push_back
#define PushFront                        push_front
#define MakePair                         make_pair
#define PopBack                          pop_back
#define PopFront                         pop_front
#define BitCount                         __builtin_popcount
#define INF                              100000000
#define INFLL                            10000000000000000LL
#define First                            first
#define Second                           second
#define N                                10000000

typedef vector< int >                    VI;
typedef vector< double >                 VD;
typedef vector< string >                 VS;
typedef vector< char >                   VC;
typedef vector< long double >            VLD;
typedef vector< long long >              VLL;
typedef vector< vector< int > >          VVI;
typedef vector< pair< int,int > >        VPII;
typedef vector< vector< double > >       VVD;
typedef vector< vector< char > >         VVC;
typedef vector< vector< string > >       VVS;
typedef vector< vector< long long > >    VVLL;
typedef string                           SS;
typedef unsigned long long               ULL;
typedef long long                        LL;
typedef long double                      LD;
typedef pair< int,int >                  PII;
typedef unsigned long                    UL;

int RInt(){int c;scanf("%d",&c);return c;}
SS  RSS(){SS S;cin>>S;return S;}
LL  RLL(){LL c;cin>>c;return c;}
VI  RVInt(int c){VI V(c,0);for(int i=0;i<c;++i)scanf("%d",&V[i]);return V;}

void DInt(int X){cout<<"Value Of Variable = "<<X<<endl;}
void DSS(SS S){cout<<"String is "<<S<<endl;}
void DVInt(VI V){cout<<"Vector Size = "<<V.SZ<<endl;cout<<"Elements "<<endl;REP(i,V.SZ)cout<<V[i]<<" ";cout<<endl;}
void DLL(LL X){cout<<"Value Of Variable = "<<X<<endl;}

int PFlag[N+10],SFlag[N+10],c[N+10];
int s[N+10];
void BuildTables(void);
int main()
{
    BuildTables();
    int Test=RInt();
    while(Test--) {
        int A=RInt(),B=RInt();
        LL Return=0LL;
        if(A>B)
            swap(A,B);
        for(int i=1;i<=A&&i<=10000;i++)
            Return+=(LL)c[i]*(LL)(A/i)*(LL)(B/i);
        if(A>10000) {
            for(int i=10001;i<=A;) {
                int jA=A/(A/i);
                int jB=B/(B/i);
                if(jB<jA) 
                    jA=jB;
                Return+=(LL)(s[jA]-s[i-1])*(LL)(A/i)*(LL)(B/i);
                i=jA+1;
            }
        }
        printf("%lld\n",Return);
    }
    return 0;
}
void BuildTables(void)
{
    Clear(PFlag);
    Clear(SFlag);
    for(int i=3;i<=N;i+=2) {
        if(PFlag[i]) 
            continue;
        PFlag[i]=1;
        for(int j=3*i;j<=N;j+=2*i)
            PFlag[j]++;
        if(i<3500)
        for(int j=i*i;j<=N;j+=2*i*i)
            SFlag[j]++;
        if(i<300)
            for(int j=i*i*i;j<=N;j+=2*i*i*i)
                SFlag[j]=2;
    }
    PFlag[2]=1;SFlag[2]=0;
    for(int i=4;i<=N;i+=8) {
        PFlag[i]=PFlag[i>>2]+1;
        SFlag[i]=SFlag[i>>2]+1;
    }
    for(int i=8;i<=N;i+=8)
        SFlag[i]=2;
    for(int i=6;i<=N;i+=4) {
        PFlag[i]=PFlag[i>>1]+1;
        SFlag[i]=SFlag[i>>1];
    }
    s[1]=0;c[1]=0;
    for(int i=2;i<=N;i++) {
        switch(SFlag[i]) {
            case 0: c[i]=((PFlag[i]&1)?PFlag[i]:(-PFlag[i]));
                    break;
            case 1: c[i]=((PFlag[i]&1)?(-1):1);
                    break;
            default: c[i]=0;
        }
        s[i]=s[i-1]+c[i];
    }

}
