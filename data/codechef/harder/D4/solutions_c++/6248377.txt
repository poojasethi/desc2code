/*
    name 	:- rajat sharrma
    college :- geca
    moto 	:- sometimes i feel like giving up then i remember
                i have a lot of motherfu*ckers to prove wrong!
*/
#include <bits/stdc++.h>
#include <algorithm>
#include <bitset>
#include <deque>
#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

using namespace std;

typedef long long LL;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<string> vs;

// Basic maarr2os
#define st          first
#define se          second
#define all(x)      (x).begin(), (x).end()
#define ini(a, v)   memset(a, v, sizeof(a))
#define re(i,s,n)  	for(int i=s;i<(n);++i)
#define rep(i,s,n)  for(int i=s;i<=(n);++i)
#define fr(i,n)     re(i,0,n)
#define repv(i,f,t) for(int i = f; i >= t; --i)
#define rev(i,f,t)  repv(i,f - 1,t)
#define frv(i,n)    rev(i,n,0)
#define pu          push_back
#define mp          make_pair
#define sz(x)       (int)(x.size())
#define s(x) scanf("%d",&x)
#define i64 long long
#define gc() getchar()
inline i64 readLLD()
{
    i64 ret=0;
    bool negg=false;
    char c;
    c=gc();
    while((c<'0' || c>'9') && c!='-')
    {
        //scanf("%c",&c);
        c=gc();
    }
    if(c=='-'){negg=true;c=gc();}
    while(c>='0' && c<='9')
    {
        ret=ret*10+(c-'0');
        c=gc();
    }
    if(negg){ret=-ret;}
    return ret;
}//=readLLD();
inline int readInt()
{
    int ret=0;
    bool negg=false;
    char c;
    c=gc();
    while((c<'0' || c>'9') && c!='-')
    {
        c=gc();
    }
    if(c=='-')
    {
        negg=true;
        c=gc();
    }
    while(c>='0' && c<='9')
    {
        ret=ret*10+(c-'0');
        c=gc();
    }
    if(negg)
    {
        ret=-ret;
    }
    return ret;
}//=readInt();
const int MX=10000001;
int c[MX],P[MX],g[MX],s[MX];
char arr[MX];
int tot;
void init(){
    arr[1]=1;
    for (int i=2;i<MX;i++){
        if (!c[i]){
            c[i]=i;
            P[++tot]=i;
        }
        int d=(MX-1)/i;
        for (int j=1;P[j]<=d;j++){
            c[P[j]*i]=P[j];
            if (!(i%P[j])) break;
        }
        int q=i,z=0,cnt=0;
        while (q>1){
            int ret=c[q];
            q/=ret;
            if (c[q]==ret){
                z=1;
                arr[i]=0;
            }
            else g[i]+=arr[i/ret];
            cnt++;
        }
        if (!z) arr[i]=(cnt%2)?(-1):(1);
        s[i]=s[i-1]+g[i];
    }
}
int main(){
    int n,m,test;
    test=readInt();
    init();
    while (test--){
        n=readInt();m=readInt();
        LL ans=0;
        for (int i=1;i<=min(n,m);){
            int a=n/i;
            int b=m/i;
            int nt=min(n/a+1,m/b+1);
            ans+=(LL)(s[nt-1]-s[i-1])*(m/i)*(n/i);
            i=nt;
        }
        printf("%lld\n",ans);
    }
}