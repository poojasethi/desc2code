#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <time.h>

using namespace std;
typedef long long LL;
const int maxn=32000;

int flag[maxn],sushu[maxn/5],t=0;
int G,Y,factor[10],ft;

void prime()
{
	for(int i=2;i<maxn;++i)
	{
		if(!flag[i]) sushu[t++]=i;
		for(int j=0;j<t&&i*sushu[j]<maxn;++j)
		{
			flag[i*sushu[j]]=sushu[j];
			if(i%sushu[j]==0) break;
		}
	}
}

int calc(int n,int g)
{
	int ans=0;
	int nn=n/2;
	for(int i=n;i>=1;)
	{
		int sta=g/i;
		int hj=g/(sta+1);
		if(hj<=nn) 
			hj=nn;
		ans+=(i-hj)*sta;
		if(hj==nn) return ans;
		i=hj;
	}
}

LL ans;
void dfs(int a,int sum,int f)
{
	if(a==ft) return ;
	dfs(a+1,sum,f);
	sum*=factor[a];
	ans+=f*calc(2*Y/sum,G/sum);
	//printf("%d %lld\n",sum,ans);
	dfs(a+1,sum,f*-1);
}



int solve(int n)
{
	int ans=0;
	for(int i=2;i<=n;++i)
		for(int j=1;j<i;++j)
			if((i*j)%(i+j)==0)
				ans++;
	return ans;
}

int main()
{
	int T;scanf("%d",&T);
	prime();
	while(T--)
	{
		int N;scanf("%d",&N);
		ans=0;
		for(int i=2;i*i<=N;++i)
		{
			int y=i;
			Y=i;
			G=N/i;
			ft=0;
			while(flag[y])
			{
				factor[ft++]=flag[y];
				int po=flag[y];
				while(y%po==0) y/=po; 
			}
			if(y!=1) factor[ft++]=y;
			dfs(0,1,-1);
			ans+=calc(2*i,G);
		}
		printf("%lld\n",ans);
	}
}