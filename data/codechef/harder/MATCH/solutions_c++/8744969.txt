#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;


int n,m;
db p[7][111];
map<int,int>vis;
int qu[5555],nex[5555][32];
int q;
int getnext(int u,int v){
	int nu=0;
	for (int i=0;i<1<<n;i++)if(1<<i&u){
		nu|=1<<i;
		for (int j=0;j<n;j++)if(1<<j&v){
			nu|=1<<(i|(1<<j));
		}
	}
	return nu;
}
void bfs(){
	int p=0;
	q=0;
	qu[++q]=1;
	vis[1]=1;
	while(p!=q){
		int u=qu[++p];
		for (int i=0;i<1<<n;i++){
			int v=getnext(u,i);
			if(vis[v]==0){
				qu[++q]=v;
				vis[v]=q;
				nex[p][i]=q;
			}else nex[p][i]=vis[v];
		}
	}
}
db f[5555][105];
db getp(int i,int v){
	db pp=1.0;
	for (int j=0;j<n;j++)if(1<<j&v){
		pp*=p[j][i];
	}else pp*=(1.0-p[j][i]);
	return pp;
}
int cnt[32];
int main()
{
	for (int i=0;i<32;i++){
		int su=0;
		for (int j=0;j<5;j++)if(1<<j&i)su++;
		cnt[i]=su;
	}
	gn(n);gn(m);
	for (int i=0;i<n;i++)
		for (int j=1;j<=m;j++)scanf("%lf",&p[i][j]);
	bfs();
	f[1][0]=1.0;
	for (int j=1;j<=m;j++){
		for (int i=1;i<=q;i++)
			for (int v=0;v<1<<n;v++)
				f[nex[i][v]][j]+=f[i][j-1]*getp(j,v);
	}
	db ans=0.0;
	for (int i=1;i<=q;i++){
		int v=qu[i];
		int ma=0;
		for (int j=0;j<1<<n;j++)if(1<<j&v)ma=max(ma,cnt[j]);
		ans+=ma*f[i][m];
	}
	printf("%.10lf\n",ans);
	return 0;
}
