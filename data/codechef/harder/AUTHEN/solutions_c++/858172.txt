#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <cstdlib>
#include <cstring>
using namespace std;

typedef long long Long;

char A[10105];
int SZ;
int next[27][10105];

void buildnext()
{
    for(char c = 'a'; c <= 'z'; ++c)
    {
        int idx = -1;
        next[c-'a'][SZ] = -1;
        for(int i = SZ-1; i>=0; --i)
        {
            if(A[i]==c)idx = i;
            next[c-'a'][i] = idx;
        }
    }
}

#define MOD 1009419529LL

Long memo2[10105][105];
Long dp(int id,int rem)
{
	if(id==SZ)return rem==0;
	if(memo2[id][rem]!=-1)return memo2[id][rem];
	Long w = 0;
	//choose this
	w += dp(id+1,rem);
	if(rem > 0) w += dp(id+1,rem-1);

	int idx = next[A[id]-'a'][id+1];

	if(idx!=-1 && idx-id <= rem) w -= dp(idx+1,rem-(idx-id));
	w = (w%MOD + MOD)%MOD;
	return memo2[id][rem] = w;
}

int main(int argc, char** argv) {
    int TC;
    scanf("%d",&TC);
    for(int tc = 1; tc<=TC; ++tc)
    {
        int N,K;
        scanf("%d%d%s",&N,&K,A);
        SZ = strlen(A);
        buildnext();

        for(int id = SZ; id >= 0 ; id--)
        {
        	for(int rem = 0; rem <= K; ++rem)
        	{
        		Long &w = memo2[id][rem];
        		if(id==SZ)w = rem==0;
        		else
        		{
        			w = 0;
					w += memo2[id+1][rem];
					if(rem > 0)
						w += memo2[id+1][rem-1];
					int idx = next[A[id]-'a'][id+1];
					if(idx!=-1 && idx-id <= rem)
						w -= memo2[idx+1][rem-(idx-id)];
					w = (w%MOD + MOD)%MOD;
        		}
        	}
        }

        printf("%d\n",(memo2[0][K]-1+MOD)%MOD);
    }
    return 0;
}
