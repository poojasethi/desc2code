#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstdlib>
#include <cstring>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <fstream>
#include <set>
#include <map>
#include <cmath>
#pragma comment(linker,"/STACK:16777216")
#define inf 1000000000
#define MP make_pair
#define PI acos(-1.0)
#define eps 1e-9
using namespace std;
typedef long long i64;
typedef unsigned long long u64;
const int sz=12000;
char A[sz];
int F[sz][110],pr[sz],T,N,K;
int dp[sz][110];
const int rem=1009419529;
vector<int> G[130];

bool in(int c,int a,int b){
    return (c>=a&&c<=b);
}

int main()
{

    cin>>T;

    while(T--){
        cin>>N>>K;
        N+=K;

        cin.getline(A+1,sz,'\n');
        cin.getline(A+1,sz,'\n');

        for(int i=1;i<=N;i++){G[A[i]].push_back(i);}

        for(int i='a';i<='z';i++)
            if(G[i].size()){
                pr[G[i][0]]=0;
                for(int j=1;j<G[i].size();j++)pr[G[i][j]]=G[i][j-1];
                G[i].clear();
            }

        for(int i=0;i<=N;i++)dp[i][0]=F[i][0]=1;

        for(int i=1;i<=N;i++)
            for(int j=1;j<=min(i,K);j++){
                dp[i][j]=F[i][j]=0;
                //F[i][j]=(dp[i-1][j]>0)*(dp[i-1][j]+rem-(pr[i]>0&&in(j-i+pr[i],0,min(pr[i]-1,K)))*dp[pr[i]-1][j-i+pr[i]])%rem;
                int p;
                for(p=i-1;p>=pr[i];p--)if(in(j-(i-p-1),0,p));else break;
                F[i][j]=(dp[i-1][j]+rem-(p>=0)*dp[p][(j-(i-p-1))])%rem;
                dp[i][j]=(dp[i-1][j-1]+F[i][j])%rem;
                //cout<<i<<" "<<j<<" "<<F[i][j]<<" "<<dp[i][j]<<endl;
            }
        //cout<<dp[2][1]<<endl;
        int res=0;
        for(int i=1;i<=N;i++)
            if(in(i-N+K,0,min(i,K)))res=(res+F[i][i-N+K])%rem;

        //cout<<res<<endl;
        res=(res+rem-1)%rem;
        cout<<res<<endl;

    }

    return 0;
}
