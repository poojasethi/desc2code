#include <cstdio>
#include <cstring>

using namespace std;

typedef long long llong;

int N, K;
char S[10104];

#define MOD 1009419529

int last[26];
int DP[10104][104];

int main(int argc, char* argv[]) {
   int TC;
   scanf("%d", &TC);
   while (TC-- > 0) {
      scanf("%d %d", &N, &K);
      scanf("%s", S+1);
      memset(last, -1, sizeof(last));
   // memset(DP, 0, sizeof(DP));
      DP[0][0] = 1;
      for (int n = 1; n <= N+K; ++n) {
         int c = S[n]-'a';
         memset(DP[n], 0, sizeof(DP[0][0])*(K+2));
         for (int k = 0; k <= K; ++k) {
            // take letter
            DP[n][k] += DP[n-1][k];
            DP[n][k] %= MOD;

            // omit letter
            if (k > 0) {
               DP[n][k] += DP[n-1][k-1];
               DP[n][k] %= MOD;
            }

            if (last[c] > 0 && k >= n-last[c]) {
               DP[n][k] += (MOD - DP[ last[c]-1 ][k-(n-last[c])]);
               DP[n][k] %= MOD;
            }
         }
         last[c] = n;
      }

/*
      for (int n = 0; n <= N+K; ++n) {
         cerr << n << ':';
         for (int k = 0; k <= K; ++k)
            cerr << ' ' << DP[n][k];
         cerr << endl;
      }
*/
      int res = DP[N+K][K];
      res = (res + MOD - 1) % MOD;
      printf("%d\n", res);
   }
   return 0;
}
