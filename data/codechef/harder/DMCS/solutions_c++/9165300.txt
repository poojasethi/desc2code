#include<cstdio>

using namespace std;

int nr, T, N, mod, ans[80];
int a[] = {0, 272,589185,930336768,853401154,217676188,136558333,415722813,985269529,791527976,201836136,382110354,441223705,661537677,641601343,897033284,816519670,365311407,300643484,936803543,681929467,462484986,13900203,657627114,96637209,577140657,600647073,254604056,102389682,811580173,592550067,587171680,526467503,265885773,951722780,219627841,371508152,283501391,159234514,439380999,722868959,125599834,351398134,456317548,365496182,614778702,502680047,193063685,309004764,743901785,870955115,312807829,160375015,691844624,137034372,350330868,895680450,282610535,317897557,28600551,583305647,539409363,327406961,627805385,680183978,681299085,954964592,743524009,788048339,699454626,666369521,857206425};
int coef[] = {0, 1,999998256,116405,85452673,554115042,156014244,348050269,827145587,499362222,235020451,945246280,487523377,181812482,999805738,781667749,156019930,487004069,165048565,223916257,568547436,266083964,165436872,706679916,38928432,777681484,775353772,209550973,934884057,649159321,726116404,38175356,256245988,152683562,899906518,82346955,244730388,755269619,917653052,100093489,847316445,743754019,961824651,273883603,350840686,65115950,790449034,224646235,222318523,961071575,293320091,834563135,733916043,431452571,776083750,834951442,512995938,843980077,218332258,194269,818187525,512476630,54753727,764979556,500637785,172854420,651949738,843985763,445884965,914547334,999883602,1751};

struct matrix
{
    int a[74][74];
    matrix () {}
    matrix (bool type)
    {
        for (int i=1; i<=nr; i++)
            for (int j=1; j<=nr; j++)
                a[i][j] = (i == j && type);
    }
}recurenta (0), curr_ans (0), put[30];

matrix operator * (matrix a, matrix b)
{
    matrix ans (0);
    for (int i=1; i<=nr; i++)
        for (int j=1; j<=nr; j++)
        {
            ans.a[i][j] = 0;
            for (int k=1; k<=nr; k++)
                ans.a[i][j] = ((long long) ans.a[i][j] + 1LL * a.a[i][k] * b.a[k][j]) % mod;
        }
    return ans;
}

void multiply (int v[], int p)
{
    int aux[80];
    for (int i=1; i<=71; i++)
        aux[i] = v[i];
    for (int j=1; j<=71; j++)
    {
        v[j] = 0;
        for (int i=1; i<=71; i++)
            v[j] = ((long long) v[j] + 1LL * aux[i] * put[p].a[i][j]) % mod;
    }
}

void pow (int N)
{
    for (int i=1; i<=71; i++)
        ans[i] = a[i];
    for (int i=0; (1<<i) <= N; i++)
        if (N & (1 << i)) multiply (ans, i);
}

int main ()
{
//freopen ("input", "r", stdin);
//freopen ("output", "w", stdout);

///a(i-70) a(i - 69) ... a(i) = (a(i - 71), a(i - 70), ..., a(i)) * MAT
nr = 71, mod = 1e9 + 7;
for (int j=1; j<=70; j++)
    recurenta.a[j + 1][j] = 1;
for (int i=1; i<=71; i++)
    recurenta.a[i][71] = coef[i];
put[0] = recurenta;
for (int i=1; i<=29; i++)
    put[i] = put[i - 1] * put[i - 1];
scanf ("%d", &T);
while (T --)
{
    scanf ("%d", &N);
    if (N <= 71)
    {
        printf ("%d\n", a[N]);
        continue;
    }
    pow (N - 71);
    printf ("%d\n", ans[71]);
}

return 0;
}
