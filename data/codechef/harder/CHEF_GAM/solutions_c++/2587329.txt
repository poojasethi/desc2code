    #include <cstdio>
    #include <algorithm>
    using namespace std;
     
    typedef long long LL;
     
    const int maxN = 50000;
     
    int n;
    int a[maxN];
    LL s;
    LL b[maxN];
    LL sb[maxN];
     
    int rn;
    LL rb[maxN];
    LL r[maxN];
    int f[maxN+1];
     
    LL ans;
     
    LL c[maxN];
    void merge(int l,int m,int r)
    {
    int i,j,k;
    for(i=k=l,j=m;i<m || j<r;)
    if(i<m && (j==r || b[i]<=b[j]))
    c[k++]=b[i++];
    else
    {
    c[k++]=b[j++];
    ans+=m-i;
    }
    for(k=l;k<r;k++)
    b[k]=c[k];
    }
     
    void divide(int l,int r)
    {
    if(l+1<r)
    {
    int m=(l+r)/2;
    divide(l,m);
    divide(m,r);
    merge(l,m,r);
    }
    }
     
    void add(LL rx,int d)
    {
    int x=lower_bound(r,r+rn,rx)-r+1;
    for(;x<=rn;x+=x&-x) f[x]+=d;
    }
     
    int sum(LL rx)
    {
    int x=lower_bound(r,r+rn,rx)-r+1;
    int s=0;
    for(;x>0;x-=x&-x) s+=f[x];
    return s;
    }
     
    int main()
    {
    int TST;
    scanf("%d",&TST);
    for(int tst=0;tst<TST;tst++)
    {
    int i,j;
    scanf("%d",&n);
     
    int mini=0;
    for(i=0;i<n;i++)
    {
    scanf("%d",a+i);
    b[i]=(i?b[i-1]:0)+a[i];
    if(b[mini]>b[i]) mini=i;
    }
    s=b[n-1];
     
    b[0]=0;
    for(j=1;j<n;j++)
    b[j]=b[j-1]+a[(mini+j)%n];
     
    ans=0;
    divide(0,n);
     
    for(i=0;i<n;i++)
    {
    LL ri=b[i]%s;
    r[i]=rb[i]=ri?s-ri:ri;
    }
    //random_shuffle(r,r+n);
    sort(r,r+n);
    rn=unique(r,r+n)-r;
    for(i=0;i<=rn;i++) f[i]=0;
     
    sb[0]=0;
    for(i=j=0;i<n;i++)
    {
    LL ceil_i=(b[i]+s-1)/s;
    if(i<n-1) sb[i+1]=sb[i]+ceil_i;
    for(;j<n && b[j]+s<b[i];j++)
    add(rb[j],1);
    ans+=j*ceil_i-sb[j]-sum(rb[i]);
    }
    printf("%lld\n",ans);
    }
    return 0;
    } 
