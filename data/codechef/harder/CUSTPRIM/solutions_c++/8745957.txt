#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
//int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
//int gcd(int a,int b){return b?gcd(b,a%b):a;}
//const int mo=1000000007;

ll mul(ll x,ll y,ll z){if(z<2e9){return (x%z)*(y%z)%z;}else return (x*y-(ll)(x/(long double)z*y+1e-3)*z+z)%z;}
ll qp(ll a,ll b,ll mo){ll ans=1;do{if(b&1)ans=mul(ans,a,mo);a=mul(a,a,mo);}while(b>>=1);return ans;}
ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
int pr[9]={2,3,5,7,11,13,17,19,23};
int mr(ll n){
	if(n<=1)return 0;
	for (int i=0,a;i<9;i++){
		if((a=pr[i])==n)return 1;
		ll t=n-1;int k=0;
		while(~t&1)t>>=1,k++;
		ll c=qp(a,t,n);
		if(c==1)continue;
		int bo=0;
		for (int i=0;i<k;i++){
			if(c==n-1){bo=1;break;}
			c=mul(c,c,n);
		}
		if(!bo)return 0;
	}
	return 1;
}

int ok[15];
int main(){
	ok[2]=ok[6]=ok[7]=ok[8]=ok[10]=1;
	int tes;gn(tes);
	while(tes--){
		int a,b,c;
		gn(a);gn(b);gn(c);
		ll s=33-2*a-c,t=b-a;
		ll n=s*s+s*t+3*t*t;
		int bo;
		if(t!=0){
			bo=mr(n);
		}else{
			if(s==0 || s==1 || s==-1)bo=0;
			else{
				bo=0;
				s=abs(s);
				if(s==2)bo=1;
				if(mr(s) && ok[s%11])bo=1;
			}
		}
		if(bo)printf("PRIME\n");
		else printf("NOT PRIME\n");
	}
	return 0;
}
