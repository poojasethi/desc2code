#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define I64	long long
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T;

int		Pow(int a,int b,int P){
		int ret=1;	a=(a%P+P)%P;
		for	(;b;b>>=1,a=1ll*a*a%P)
			if	(b&1)	ret=1ll*ret*a%P;
		return ret;
}

const int pr[]={2,3,5,7,11,13,17,19,23,29};

inline I64 qprod(I64 a,I64 b,I64 c){
    I64 ans=0;
    for (a%=c;b;b>>=1){
        if (b&1) if ((ans+=a)>=c) ans-=c;
        if ((a+=a)>=c) a-=c;
    }
    return ans;
}
inline I64 qpow(I64 a,I64 b,I64 c){
    I64 ans=1;
    for (a%=c;b;b>>=1,a=qprod(a,a,c))
        if (b&1) ans=qprod(ans,a,c);
    return ans;
}

bool	OK(I64 A,I64 N){
    	I64	t=N-1;
    	while	(!(t&1))	t>>=1;
    	I64	x0,x1=qpow(A,t,N);

    	while	(t!=N-1){
        	x0=x1;
        	x1=qprod(x0,x0,N);
        	if (x1==1 && x0!=1 && x0!=N-1) return true;
        	t<<=1;
    	}
    	return x1!=1;
}

bool	Mill(I64 N){
		if	(N==2)	return	1;
		if	(N<2||N>2&&!(N&1))	return	0;
		For(i,0,9)	{
        	if	(N<=pr[i])	return 1;
        	if	(OK(pr[i],N))	return	0;
    	}
    	return	1;
}

bool	Check(int A,int B){
		if	(B)	return	Mill(1ll*A*A+1ll*A*B+3ll*B*B);
		return	(abs(A)==2)||(Mill(abs(A))&&Pow(-11,(abs(A)-1)/2,abs(A))==abs(A)-1);
}

int		main(){
		scanf("%d",&T);
		for (int a,b,c;T--;){
			scanf("%d%d%d",&a,&b,&c);
			int A=33-2*a-c,B=b-a;
			puts(Check(A,B)?"PRIME":"NOT PRIME");
		}
}