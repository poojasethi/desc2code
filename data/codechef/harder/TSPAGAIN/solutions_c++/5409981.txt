#include <bits/stdc++.h>
using namespace std;

int i, j, n, k, energy[1001][1001], near[1001][1001];

int min(int a, int b){
	if(a>b) return b;
	return a;
}

int max(int a, int b){
	if(a>b) return a;
	return b;
}

int f(int i, int j){
	if(i==j) return 0;
	return energy[j][i];
}

int main(){
	int t, x, y, a, b, c, index;
	cin >> t;
	while(t>0){
		t--;
		cin >> n >> k;
		for(i=0; i<n; i++){
			for(j=0; j<n; j++){
				energy[i][j]=0;
			}
		}
		for(i=0; i<k; i++){
			cin >> x >> y;
			energy[y][x]++;
		}
		for(i=0; i<n; i++){
			for(j=n-1; j>=0; j--){
				if(i-1>=0){a=energy[i-1][j];}
				else{a=0;}
				if(j+1<n){b=energy[i][j+1];}
				else{b=0;}
				if(i-1>=0 && j+1<n){c=energy[i-1][j+1];}
				else{c=0;}
				energy[i][j]+=a+b-c;
			}
		}
		for(i=n-1; i>=0; i--){
			for(j=n-1; j>=0; j--){
				near[i][j]=1000000000;
				index=max(i, j)+1;
				if(index>=n){
					near[i][j]=f(i, n-1)+f(n-1, j);
				}
				else{
					near[i][j]=min(f(i, index)+near[index][j], f(index, j)+near[i][index]);
				}
			}
		}
		cout << near[0][0] << endl;
	}
}
