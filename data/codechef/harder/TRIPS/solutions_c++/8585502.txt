#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cassert>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

#define MAXV 111111
struct edge{
	int v,next,w;
}e[MAXV*2];int etot=0;int g[MAXV];
void ae(int u,int v,int w){
	e[etot].w=w;e[etot].v=v;e[etot].next=g[u];g[u]=etot++;
}
int qu[MAXV],pre[MAXV];int n;
int h[MAXV],H[MAXV];
int up[MAXV];
int pr[19][MAXV];
void bfs(int rt){
	int p=0,q=0;
	pre[rt]=0;
	h[0]=H[0]=-1;
	h[rt]=H[rt]=0;
	qu[q++]=rt;
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){
			pre[e[i].v]=u;
			h[e[i].v]=h[u]+1;
			H[e[i].v]=H[u]+e[i].w;
			qu[q++]=e[i].v;
		}
	}
	for (int i=0;i<=n;i++)pr[0][i]=pre[i];
	for (int d=1;d<=19;d++)
		for (int u=1;u<=n;u++)pr[d][u]=pr[d-1][pr[d-1][u]];
}
int lca(int a,int b){
	if(h[a]<h[b])swap(a,b);
	for (int i=0;h[a]-h[b];i++)if(h[a]-h[b]&1<<i)a=pr[i][a];
	if(a==b)return a;
	for (int i=18;i>=0;i--)if(pr[i][a]!=pr[i][b])a=pr[i][a],b=pr[i][b];
	return pr[0][a];
}
#define sz 200
int day[sz*2+5][MAXV],loc[sz*2+5][MAXV],go[sz*2+5][MAXV];

int adv(int u,int d){
	for (int i=18;i>=0;i--)if(H[u]-H[pr[i][u]]<=d){
		d-=H[u]-H[pr[i][u]];
		u=pr[i][u];
	}
	return u;
}
int tmp[111111],tmp2[111111];
int ttot,t2;
int main()
{
	//freopen("1.in","r",stdin);
	memset(g,-1,sizeof(g));
	gn(n);
	for (int i=1;i<n;i++){
		int x,y,w;
		gn(x);gn(y);gn(w);
		ae(x,y,w);
		ae(y,x,w);
	}
	bfs(1);
	for (int i=0;i<n;i++){
		int u=qu[i];
		if(h[pre[u]]%sz==0)up[u]=pre[u];
		else up[u]=up[pre[u]];
	}
	for (int u=1;u<=n;u++)go[0][u]=u;
	/*for (int u=1;u<=n;u++){
		assert(h[u]-h[up[u]]<300);
	}*/
	for (int d=1;d<=sz;d++){
		for (int u=1;u<=n;u++){
			if(H[u]-H[pre[u]]<=d){
				go[d][u]=go[d-(H[u]-H[pre[u]])][pre[u]];
			}else 
				go[d][u]=u;
			//assert(H[u]-H[go[d][u]]<=d);
		}
	}
	for (int d=2;d<=sz;d++){
		for (int i=0;i<n;i++){
			int u=qu[i];
			if(h[go[d][u]]<=h[up[u]]){
				day[d][u]=1;
				loc[d][u]=go[d][u];
			}else{
				int v=go[d][u];
				day[d][u]=day[d][v]+1;
				loc[d][u]=loc[d][v];
			}
			assert(((h[u]-h[loc[d][u]]<=400)));
		}
	}
	int q;gn(q);
	while(q--){
		int u,v,d;
		gn(u);gn(v);gn(d);
		if(u==v){
			printf("0\n");
			continue;
		}
		int l=lca(u,v);
		int ans=0;

		int nd=0;
		if(d<=sz){
			while(h[loc[d][u]]>h[l]){
				ans+=day[d][u];
				u=loc[d][u];
				nd++;
			}
			while(h[loc[d][v]]>h[l]){
				ans+=day[d][v];
				v=loc[d][v];
				nd++;
			}
			/*assert(h[u]-h[l]<=400);
			assert(h[v]-h[l]<=400);*/
			ttot=t2=0;
			while(u!=l){
				tmp[++ttot]=H[u]-H[pre[u]];
				u=pre[u];
			}
			while(v!=l){
				tmp2[++t2]=H[v]-H[pre[v]];
				v=pre[v];
			}
			for (int i=t2;i>=1;i--)tmp[++ttot]=tmp2[i];
			int cur=0;
			for (int i=1;i<=ttot;i++){
				if(cur+tmp[i]>d){
					ans++;
					cur=tmp[i];
				}else cur+=tmp[i];
			}
			if(cur)ans++;
			printf("%d\n",ans);
			continue;
		}
		while(H[u]-H[l]>=d){
			ans++;
			u=adv(u,d);
		}
		while(H[v]-H[l]>=d){
			ans++;
			v=adv(v,d);
		}
		int dd=H[u]-H[l]+H[v]-H[l];
		if(dd>0 && dd<=d){
			ans++;
		}else if(dd>0)
			ans+=2;
		//assert(nd<500);
		printf("%d\n",ans);
		//printf("%d\n",nd);
	}
	return 0;
}
