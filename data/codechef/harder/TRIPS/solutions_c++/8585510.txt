#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

#define MAXV 111111
struct edge{
	int v,next,w;
}e[MAXV*2];int etot=0;int g[MAXV];
void ae(int u,int v,int w){
	e[etot].w=w;e[etot].v=v;e[etot].next=g[u];g[u]=etot++;
}
int qu[MAXV],pre[MAXV];int n;
int h[MAXV],H[MAXV];
int up[MAXV];
void bfs(int rt){
	int p=0,q=0;
	pre[rt]=0;
	h[0]=H[0]=-1;
	h[rt]=H[rt]=0;
	qu[q++]=rt;
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){
			pre[e[i].v]=u;
			h[e[i].v]=h[u]+1;
			H[e[i].v]=H[u]+e[i].w;
			qu[q++]=e[i].v;
		}
	}
}
//#define sz 100
#define sz 100

int day[sz*2+5][MAXV],loc[sz*2+5][MAXV],go[sz*2+5][MAXV];
int lca(int u,int v){
	while(up[u]!=up[v]){
		if(h[u]>h[v])swap(u,v);
		v=up[v];
		assert(v>=1 && v<=n);
	}
	while(u!=v){
		if(h[u]>h[v])swap(u,v);
		v=pre[v];
		assert(v>=1 && v<=n);
	}
	return u;
}
int adv(int u,int d){
	while(H[u]-H[up[u]]<=d){
		d-=(H[u]-H[up[u]]);
		u=up[u];
	}
	return go[d][u];
}
int cl;
int main()
{
	//freopen("1.in","r",stdin);
	//cl=clock();
	memset(g,-1,sizeof(g));
	gn(n);
	for (int i=1;i<n;i++){
		int x,y,w;
		gn(x);gn(y);gn(w);
		ae(x,y,w);
		ae(y,x,w);
	}
	bfs(1);
	for (int i=0;i<n;i++){
		int u=qu[i];
		if(h[pre[u]]%sz==0)up[u]=pre[u];
		else up[u]=up[pre[u]];
	}
	for (int u=1;u<=n;u++)assert(up[u]!=u);
	//for (int i=1;i<=n;i++)printf("%d\n",h[i]-h[up[i]]);
	for (int u=1;u<=n;u++)go[0][u]=u;
	//printf("%d\n",clock()-cl);cl=clock();
	for (int d=1;d<=sz*2;d++){
		for (int u=1;u<=n;u++)
			if(H[u]-H[pre[u]]<=d){
				go[d][u]=go[d-(H[u]-H[pre[u]])][pre[u]];
			}else 
				go[d][u]=u;
	}
	//printf("%d\n",clock()-cl);cl=clock();
	for (int d=1;d<=sz*2;d++){
		for (int i=0;i<n;i++){
			int u=qu[i];
			if(h[go[d][u]]<=h[up[u]]){
				day[d][u]=1;
				loc[d][u]=go[d][u];
			}else{
				int v=go[d][u];
				day[d][u]=day[d][v]+1;
				loc[d][u]=loc[d][v];
			}
		}
	}
	//printf("%d\n",clock()-cl);cl=clock();
	int q;gn(q);
	int cl1=0,cl2=0;
	while(q--){
		int u,v,d;
		gn(u);gn(v);gn(d);
		if(u==v){
			printf("0\n");
			continue;
		}
		int l=lca(u,v);
		int ans=0;
		//cl=clock();
		if(d<=2*sz){
			while(h[loc[d][u]]>h[l]){
				ans+=day[d][u];
				//printf("up %d \n",h[loc[d][u]]-h[u]);
				u=loc[d][u];
				assert(u>=1 && u<=n);
			}
			while(h[loc[d][v]]>h[l]){
				ans+=day[d][v];
				//printf("up %d \n",h[loc[d][v]]-h[v]);
				v=loc[d][v];
				assert(v>=1 && v<=n);
			}
		}
		//printf("\n");
		//cl1+=clock()-cl;
		//cl=clock();
		while(H[u]-H[l]>=d){
			ans++;
			u=adv(u,d);
			assert(u>=1 && u<=n);
		}
		while(H[v]-H[l]>=d){
			ans++;
			v=adv(v,d);
			assert(v>=1 && v<=n);
		}
		//cl2+=clock()-cl;
		int dd=H[u]-H[l]+H[v]-H[l];
		if(dd>0 && dd<=d){
			ans++;
		}else if(dd>0)
			ans+=2;
		printf("%d\n",ans);
	}
	//printf("%d %d\n",cl1,cl2);
	//printf("%d\n",clock()-cl);cl=clock();
	return 0;
}
