#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}


int tes;
int a[1111],n;
map<int,int>ma;
char s[10];
int f[1111][1111]={0};
int tot;


void gp(int &l,int &r,int i,int j,int m){
	if(m==1)l=1,r=i-1;
	if(m==3)l=i+1,r=j-1;
	if(m==5)l=j+1,r=n;
}

int get(int l,int r,int x){
	for (int i=l;i<=r;i++)if(a[i]==x)return i;
}

int glow(int l,int r,int lo){
	l--;
	int lef=lo,rig=tot,mid;
	while(lef<=rig){
		mid=lef+rig>>1;
		int cnt=f[r][mid]-f[l][mid]-f[r][lo-1]+f[l][lo-1];
		if(cnt)rig=mid-1;
		else lef=mid+1;
	}
	return lef;
}
int ghig(int l,int r,int hi){
	l--;
	int lef=1,rig=hi,mid;
	while(lef<=rig){
		mid=lef+rig>>1;
		int cnt=f[r][hi]-f[l][hi]-f[r][mid-1]+f[l][mid-1];
		if(cnt)lef=mid+1;
		else rig=mid-1;
	}
	return rig;
}
int ans[10];
int atot;
int main(){
	scanf("%d",&tes);
	while(tes--){
		scanf("%d",&n);
		scanf("%s",s+1);
		ma.clear();
		for (int i=1;i<=n;i++){
			scanf("%d",&a[i]);
			ma[a[i]];
		}
		tot=0;
		for (map<int,int>::iterator it=ma.begin();it!=ma.end();it++)it->second=++tot;
		for (int i=1;i<=n;i++)a[i]=ma[a[i]];
		for (int i=1;i<=n;i++)
			for (int j=1;j<=tot+1;j++)f[i][j]=f[i-1][j]+(a[i]<=j);

		char mi=min(min(s[1],s[3]),s[5]);
		char ma=max(max(s[1],s[3]),s[5]);
		int mii,mai;
		for (int i=1;i<=5;i++)if(mi==s[i])mii=i;
		for (int i=1;i<=5;i++)if(ma==s[i])mai=i;
		int midi=1+3+5-mii-mai;
		char mid=s[midi];
		
		for (int i=2;i<=n;i++)
			for (int j=i+1;j<n;j++)
				if((a[j]-a[i])*(s[4]-s[2])>0){
					int l,r;
					int hi,lo;

					lo=1,hi=tot;
					if(mi>s[2])lo=max(lo,a[i]+1);
					if(mi>s[4])lo=max(lo,a[j]+1);
					if(mi<s[2])hi=min(hi,a[i]-1);
					if(mi<s[4])hi=min(hi,a[j]-1);
					gp(l,r,i,j,mii);
					int tmi=glow(l,r,lo);
					if(tmi==-1 || tmi>hi)continue;

					lo=1,hi=tot;
					if(ma<s[2])hi=min(hi,a[i]-1);
					if(ma<s[4])hi=min(hi,a[j]-1);
					if(ma>s[2])lo=max(lo,a[i]+1);
					if(ma>s[4])lo=max(lo,a[j]+1);
					gp(l,r,i,j,mai);
					int tma=ghig(l,r,hi);
					if(tma==-1 || tma<lo)continue;

					lo=tmi+1,hi=tma-1;
					if(mid>s[2])lo=max(lo,a[i]+1);
					if(mid>s[4])lo=max(lo,a[j]+1);
					if(mid<s[2])hi=min(hi,a[i]-1);
					if(mid<s[4])hi=min(hi,a[j]-1);
					gp(l,r,i,j,midi);
					int tmi2=glow(l,r,lo);
					if(tmi2==-1 || tmi2>hi)continue;

					atot=0;
					gp(l,r,i,j,mii);
					ans[++atot]=get(l,r,tmi);
					gp(l,r,i,j,mai);
					ans[++atot]=get(l,r,tma);
					gp(l,r,i,j,midi);
					ans[++atot]=get(l,r,tmi2);
					ans[++atot]=i;
					ans[++atot]=j;
					sort(ans+1,ans+1+atot);
					for (int i=1;i<=5;i++)printf("%d ",ans[i]-1);
					printf("\n");
					goto lb;
				}
		printf("-1\n");
lb:
		continue;
	}
	return 0;
}
