#include <cstdio>
#include <algorithm>
using namespace std;
const int N=1005;
pair<int,int> p[N];
int n,a[N],b[15],P[15],val[N],t[N];
short lmin[N][N],rmin[N][N],lmax[N][N],rmax[N][N],m[N][N];
short k0,k1,k2,k3,k4,kl,km,kr;
int T;
char S[15];
bool check(int i,int j,int x,int y){
    if (x>=y) return 0;
    return (m[y][j]-m[y][i-1]-m[x+1][j]+m[x+1][i-1]>0);
}
int main(){
    for(scanf("%d",&T);T;--T){
    scanf("%d%s",&n,S);
    for(int i=0; i<5; ++i) b[i]=S[i]-'0';
    for(int i=1; i<=n; ++i) scanf("%d",&val[i]),p[i].first=val[i],p[i].second=i;
//    for(int i=0; i<5; ++i) scanf("%d",&b[i]);
    sort(p+1,p+n+1);
    int v=0;
    for(int i=1; i<=n; ++i){
        if (i==1||p[i].first!=p[i-1].first) ++v;
        a[p[i].second]=v;
    }
    ++v;
    for(int i=0; i<=v; ++i){
        lmin[i][0]=lmax[i][0]=-1;
        for(int j=1; j<=n; ++j){
            lmin[i][j]=lmin[i][j-1];
            lmax[i][j]=lmax[i][j-1];
            if (a[j]>i&&(lmin[i][j]<0||a[j]<a[lmin[i][j]])) lmin[i][j]=j;
            if (a[j]<i&&(lmax[i][j]<0||a[j]>a[lmax[i][j]])) lmax[i][j]=j;
            if (a[j]<i) m[i][j]=m[i][j-1]+1;
            else m[i][j]=m[i][j-1];
        }
        rmin[i][n+1]=rmax[i][n+1]=-1;
        for(int j=n; j>=1; --j){
            rmin[i][j]=rmin[i][j+1];
            rmax[i][j]=rmax[i][j+1];
            if (a[j]>i&&(rmin[i][j]<0||a[j]<a[rmin[i][j]])) rmin[i][j]=j;
            if (a[j]<i&&(rmax[i][j]<0||a[j]>a[rmax[i][j]])) rmax[i][j]=j;
        }
    }
    kl=min(b[0],min(b[2],b[4]));
    kr=max(b[0],max(b[2],b[4]));
    km=b[0]+b[2]+b[4]-kl-kr;
    for(int i=0; i<5; ++i) P[b[i]]=i;
    t[0]=0,t[6]=v;
    bool found=0;
    for(int k1=2; k1<=n&&!found; ++k1)
        for(int k3=k1+2; k3+1<=n&&!found; ++k3){
            if (a[k1]==a[k3]) continue;
            if (a[k1]>a[k3]&&b[1]<b[3]) continue;
            if (a[k1]<a[k3]&&b[1]>b[3]) continue;
            t[b[1]]=a[k1];
            t[b[3]]=a[k3];
            t[b[0]]=t[b[2]]=t[b[4]]=-1;
            if (P[kl]==0){
                k0=lmin[t[kl-1]][k1-1];
                if (k0==-1) continue;
                t[b[0]]=a[k0];
                if (P[kr]==4) k4=rmax[t[kr+1]][k3+1];
                else k4=rmin[t[km-1]][k3+1];
                if (k4==-1) continue;
                t[b[4]]=a[k4];
            }
            else if (P[kl]==4){
                k4=rmin[t[kl-1]][k3+1];
                if (k4==-1) continue;
                t[b[4]]=a[k4];
                if (P[kr]==0) k0=lmax[t[kr+1]][k1-1];
                else k0=lmin[t[km-1]][k1-1];
                if (k0==-1) continue;
                t[b[0]]=a[k0];
            }
            else if (P[kl]==2&&P[kr]==4){
                k4=rmax[t[kr+1]][k3+1];
                if (k4==-1) continue;
                t[b[4]]=a[k4];
                if (P[kl]==0) k0=lmin[t[kl-1]][k1-1];
                else k0=lmax[t[km+1]][k1-1];
                if (k0==-1) continue;
                t[b[0]]=a[k0];
            }
            else if (P[kl]==2&&P[kr]==0){
                k0=lmax[t[kr+1]][k1-1];
                if (k0==-1) continue;
                t[b[0]]=a[k0];
                if (P[kl]==4) k4=rmin[t[kl-1]][k3+1];
                else k4=rmax[t[km+1]][k3+1];
                if (k4==-1) continue;
                t[b[4]]=a[k4];
            }
            found = check(k1+1,k3-1,t[b[2]-1],t[b[2]+1]);
            for(int i=2; i<=5; ++i)
                if (i!=b[2]&&i!=b[2]+1&&t[i]<=t[i-1]) found=0;
            if (found){
                for(k2=k1+1; k2<=k3-1; ++k2)
                    if (t[b[2]-1]<a[k2]&&a[k2]<t[b[2]+1]){
                        printf("%d %d %d %d %d\n",k0-1,k1-1,k2-1,k3-1,k4-1);
                        break;
                    }
            }
        }
    if(!found) printf("-1\n");
    }
    return 0;
}
