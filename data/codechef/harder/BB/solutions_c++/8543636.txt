#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}


int calc2(int n,int m,int r){
	if(n==0 || m==0)return 1;
	int up=1,dow=1;
	for (int i=1;i<=n;i++)for (int j=1;j<=m;j++)up=1ll*up*(r+i+j-2)%mo;
	for (int i=1;i<=n;i++)for (int j=1;j<=m;j++)dow=1ll*dow*(i+j-1)%mo;
	return 1ll*up*qp(dow,mo-2)%mo;
}
int calc(int p,int q,int n){
	return calc2(q,p-q,n+1);
}
int main()
{
	int tes;scanf("%d",&tes);
	while(tes--){
		int n,m,k;
		scanf("%d%d%d",&n,&m,&k);
		int t=k-(m-n%m);
		int an;
		if(t>=1)an=calc(n%m,t,n/m+1);
		else an=calc(m-n%m,k,n/m);
		printf("%d\n",an);
	}
	return 0;
}
