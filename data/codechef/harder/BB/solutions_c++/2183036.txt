#include <iostream>
#include <cstdio>
using namespace std;

const int MOD = 1000000007;
typedef long long LL;
int exp(int a,int b) {
    if(b==0)
        return 1;
    LL x = exp(a,b>>1);
    x=(x*x)%MOD;
    if(b&1)
        x=(x*a)%MOD;
    return x%MOD;
}

int semiStdYT(int r,int c,int big)//r,p,n
{
    int m = big;
    int d = r;
    int m1 = m + c - 1;
    int d1 = d + c - 1;

    LL ans = 1;
    for(int a=m1;a>d1&&a>=m;a--)
        for(int j=a;j>(a-r)&&j>=0;j--)
            ans = (ans*j)%MOD;

    for(int b=d;b<m&&b<=d1;b++)
        for(int j=b;j>(b-r)&&j>=0;j--)
            ans = (ans*exp(j,MOD-2))%MOD;

    return ans%MOD;
}

int min_boards(int n,int m,int k) {

    /*if(!(k<=m&&k>=1&&m<=n&&n<=1000000000&&m<=50))
        return -1;*/
    if(k>m)
        return 0;
    int p = n%m;
    if(p==m-k)
        return 1;
    else if(p==0)
        return semiStdYT(k,n/m,m);
    else if(p<m-k)
        return semiStdYT(k,n/m,m-p);
    else
        return semiStdYT(k-(m-p),n/m+1,p);
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t)
    {
        int n,m,k;
        scanf("%d%d%d",&n,&m,&k);
        printf("%d\n",min_boards(n,m,k));
        t--;
    }
    return 0;
}
