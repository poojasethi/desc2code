#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
const db pi=acos(-1);
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
//const int mo=1000000007;
const int mo=1000003;
int phi=1000002;
const int inf=1061109567;
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};

int n;

int f[16];

char str[105];
int stk[105];int top1=0;
char opt[105];int lev[105];int top2=0;

int work(int a,int b,char c){
	if(c=='!')return 65535-b;
	else if(c=='v')return a|b;
	else if(c=='^')return a&b;
	else return a^(a&b);
}
int getlev(char c){
	if(c=='!')return 2000;
	else if (c=='.') return -10000;
	else return 1000;
}
int wei[111111];
int main()
{
	gn(n);
	f[0]=qp(2,qp(2,n,phi),mo);
	f[8]=f[4]=qp(2,qp(2,n,phi)+phi-1,mo);
	f[12]=qp(2,qp(2,n,phi)+phi-2,mo);
	f[2]=qp(2,qp(2,n-1,phi),mo);
	f[10]=f[6]=f[14]=qp(2,qp(2,n-1,phi)+phi-1,mo);
	f[1]=qp(2,n+1,mo);
	f[9]=f[5]=qp(2,n,mo);
	f[13]=qp(2,n-1,mo);
	f[3]=qp(2,n,mo);
	f[11]=f[7]=f[15]=qp(2,n-1,mo);

	for (int i=15;i>=0;i--)
		for (int j=i+1;j<=15;j++)if((j&i)==i)f[i]=(f[i]-f[j]+mo)%mo;
	for (int i=0;i<=15;i++){
		if(i&1)wei['A']|=1<<i;
		if(i&2)wei['D']|=1<<i;
		if(i&4)wei['P']|=1<<i;
		if(i&8)wei['Z']|=1<<i;
	}
	int q;
	gn(q);
	while(q--){
		scanf("%s",str);
		int curlev=0;
		int le=strlen(str);
		str[le]='.';
		str[le+1]=0;
		top1=top2=0;
		int t1=0;
		for (int i=0;str[i];i++){
			if(str[i]=='('){
				curlev+=2000;
			}else if(str[i]==')'){
				curlev-=2000;
			}else if(str[i]>='A' && str[i]<='Z'){
				stk[++top1]=wei[str[i]];
			}else {
				int l=curlev+getlev(str[i]);
				if(str[i]=='!')l+=t1;
				while(top2>=0 && l<=lev[top2]){
					int an=work(stk[top1-1],stk[top1],opt[top2]);
					top1-=2;
					stk[++top1]=an;
					top2--;
				}
				opt[++top2]=str[i];
				lev[top2]=l;
				if(str[i]=='!')stk[++top1]=0,t1++;	
			}
		}
		int an=stk[1];
		int su=0;
		for (int i=0;i<16;i++)if(an&1<<i)su=(su+f[i])%mo;
		su=(su+mo)%mo;
		printf("%d\n",su);
	}
	return 0;
}
