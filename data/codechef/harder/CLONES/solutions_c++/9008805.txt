#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	105
#define P	1000003
#define lf	else if
#define For(i,a,b)	for(int i=a;i<=b;i++)
#define Rep(i,a,b)	for(int i=a;i>=b;i--)

int		T,N,M,Q,C,G[n],F[n],S[n],B[n];
char	A[n];

int		Pow(int a,int b,int p){
		int ret=1;
		for	(;b;b>>=1,a=1ll*a*a%p)
			if	(b&1)	ret=1ll*ret*a%p;
		return	ret;
}

void	Add(int a)	{
		if	(C&&S[C]==-3)	C--,Add(65535-a);
			else	S[++C]=a;
}
void	Del()	{
		int	t=0;
		for	(;C&&S[C]!=-1;)	B[++t]=S[C--];	C--;

		int	x=B[t--];
		for	(;t;)	{
			int	k=B[t--],y=B[t--];
			if	(k==-4)	x=x-(x&y);
			lf	(k==-5)	x=x&y;
			lf	(k==-6)	x=x|y;
				else	puts("AKBAKB");
		}
		Add(x);
}

int		main(){
		scanf("%d",&N);

		G[0] =Pow(2,Pow(2,N,P-1),P);
		G[1] =Pow(2,Pow(2,N,P-1)+P-2,P);
		G[2] =Pow(2,Pow(2,N,P-1)+P-2,P);
		G[3] =Pow(2,Pow(2,N,P-1)+P-3,P);
		G[4] =Pow(2,Pow(2,N-1,P-1),P);
		G[5] =Pow(2,Pow(2,N-1,P-1)+P-2,P);
		G[6] =Pow(2,Pow(2,N-1,P-1)+P-2,P);
		G[7] =Pow(2,Pow(2,N-1,P-1)+P-2,P);
		G[8] =Pow(2,N+1,P);
		G[9] =Pow(2,N,P);
		G[10]=Pow(2,N,P);
		G[11]=Pow(2,N-1,P);
		G[12]=Pow(2,N,P);
		G[13]=Pow(2,N-1,P);
		G[14]=Pow(2,N-1,P);
		G[15]=Pow(2,N-1,P);

		Rep(i,15,0)	{
			F[i]=G[i];
			For(j,i+1,15)	if	((i&j)==i)	F[i]=(F[i]-F[j]+P)%P;
		}

		int	z=0,p=0,d=0,a=0;
		For(i,0,15)	{
			if	(i&1)	z|=1<<i;
			if	(i&2)	p|=1<<i;
			if	(i&4)	d|=1<<i;
			if	(i&8)	a|=1<<i;
		}

		scanf("%d\n",&Q);
		for	(;Q--;C=0)	{
			scanf("%s",A+1);	M=strlen(A+1);
			A[0]='(';	A[M+1]=')';

			For(i,0,M+1)	{
				if	(A[i]=='(')	S[++C]=-1;
				lf	(A[i]==')')	Del();
				lf	(A[i]=='!')	S[++C]=-3;
				lf	(A[i]=='\\')S[++C]=-4;
				lf	(A[i]=='^')	S[++C]=-5;
				lf	(A[i]=='v')	S[++C]=-6;
				lf	(A[i]=='Z')	Add(z);
				lf	(A[i]=='P')	Add(p);
				lf	(A[i]=='D')	Add(d);
				lf	(A[i]=='A')	Add(a);
					else	puts("ORZGTW");
					
			}

			int	Ans=0;
			For(i,0,15)	if	((1<<i)&S[1])	Ans=(Ans+F[i])%P;
			printf("%d\n",Ans);
		}
}