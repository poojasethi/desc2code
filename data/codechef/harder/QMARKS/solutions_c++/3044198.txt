#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
 
using namespace std;
int t,trie[1010][30],flag[1010],fail[1010],tail,que[1010],head,f[1010][1010],n,m;
int next[1010][1010],c[1010][1010];
char s[1010],dic[1010],Trie[1010];
void Add(int k)
{
	int now=0,len=strlen(dic+1),i;
	for (i=1;i<=len;++i)
	{
		if (trie[now][dic[i]-'a'])
			now=trie[now][dic[i]-'a'];
		else
			trie[now][dic[i]-'a']=++tail,now=tail,Trie[now]=dic[i];
	}
	flag[now]++;
}
void AC()
{
	head=0; que[tail=1]=0;
	int now,i,v;
	while (head<tail)
	{
		now=que[++head];
		for (i=0;i<26;++i)
			if (v=trie[now][i])
			{
				if (now)
					fail[v]=trie[fail[now]][i],flag[v]+=flag[fail[v]];
				que[++tail]=v;
			}
			else
				trie[now][i]=trie[fail[now]][i];
	}
}
int main()
{
	int i,j,k;
	scanf("%d",&t);
	while (t--)
	{
		scanf("%d%d",&n,&m);
		memset(trie,0,sizeof(trie));
		memset(fail,0,sizeof(fail));
		memset(flag,0,sizeof(flag));
		memset(trie,0,sizeof(trie));
		tail=0;
		scanf("\n%s",s+1);
		for (i=1;i<=m;++i)
		{
			scanf("%s",dic+1);
			Add(i);
		}
		int top=tail;
		AC();
		memset(f,200,sizeof(f));
		for (i=0;i<=top;++i)
			f[i][0]=flag[i];
		for (i=1;i<=n;++i)
		{
			for (j=0;j<=top;++j)
			{
				if (s[n-i+1]=='?')
				{
					for (k=0;k<26;++k)
					{
						if (f[trie[j][k]][i-1]+flag[j]>f[j][i])
							f[j][i]=f[trie[j][k]][i-1]+flag[j],
							next[j][i]=trie[j][k],c[j][i]=k;
					}
				}
				else
					f[j][i]=f[trie[j][s[n-i+1]-'a']][i-1]+flag[j],
					next[j][i]=trie[j][s[n-i+1]-'a'],c[j][i]=s[n-i+1]-'a';
			}
		}
		printf("%d\n",f[0][n]);
		int now=0;
		for (i=n;i;--i)
		{
			printf("%c",c[now][i]+'a');
			now=next[now][i];
		}
		puts("");
	}
	return 0;
}