#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 80010

template<typename T,typename TT> 
ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> 
ostream& operator<<(ostream &s,vector<T> t){for(int i=0;i<t.size();i++)s<<t[i]<<" ";return s;}
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)
int cnt[1010],c[1010][26],dp[1010][1010],tot,f[1010];
void ins(char *s)
{
	int n=strlen(s),i,j;
	int p=0;
	for(i=0;i<n;i++)
	{
		j=s[i]-'a';
		if(!c[p][j])c[p][j]=++tot;
		p=c[p][j];
	}
	cnt[p]++;
}
void build()
{
	queue<int>q;
	int i,j;
	q.push(0);f[0]=-1;
	while(!q.empty())
	{
		int p=q.front(),now;q.pop();
		if(f[p]!=-1)cnt[p]+=cnt[f[p]];
		for(i=0;i<26;i++)
		if(now=c[p][i])
		{
			if(!p)f[now]=0;
			else
			{
				int fa=f[p];
				while(fa!=-1)
				{
					if(c[fa][i]){f[now]=c[fa][i];break;}
					fa=f[fa];
				}
				if(fa==-1)f[now]=0;
			}
			q.push(now);
		}
	}
}
char s[1010],t[1010][1010];int st[1010][1010],n;
int solve(int p,int l)
{
	if(l==n)return 0;
	int &res=dp[p][l];
	if(res+1)return res;
	if(s[l]!='?')
	{
		int k=s[l]-'a';
		int now=c[p][k];
		if(!now)
		{
			int fa=f[p];
			while(fa!=-1){if(now=c[fa][k])break;fa=f[fa];}
		}
		res=solve(now,l+1)+cnt[now];
		st[p][l]=now;t[p][l]=s[l];
		return res;
	}
	else
	{
		res=-1;
		for(int k=0;k<26;k++)
		{
			int now=c[p][k];
			if(!now)
			{
				int fa=f[p];
				while(fa!=-1){if(now=c[fa][k])break;fa=f[fa];}
			}
			int tmp=solve(now,l+1)+cnt[now];
			if(tmp>res)
			{
				res=tmp;st[p][l]=now,t[p][l]=k+'a';
			}
		}
		return res;
	}
}
int main()
{
	int T,i,j,m,k;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d%d%s",&n,&m,s);
		memset(c,0,sizeof(c));
		memset(cnt,0,sizeof(cnt));
		tot=0;
		for(i=0;i<m;i++)
		{
			char c[1001];
			scanf("%s",c);
			ins(c);
		}
		build();
		memset(dp,-1,sizeof(dp));
		solve(0,0);
		printf("%d\n",dp[0][0]);
		k=0;
		for(i=0;i<n;i++)
		{
			printf("%c",t[k][i]);
			k=st[k][i];
		}
		puts("");
	}
}