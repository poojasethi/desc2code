#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<ctype.h>
#include<string.h>
#include<math.h>
#include<string>
#include<deque>
#include<iostream>
#include<set>
#include<map>
#include<vector>
#include<algorithm>
#include<bitset>
#include<stack>
#include<queue>
#include<sstream>

#define MODM 1000000007
#define MAXM 2147483647
#define MAXML 9223372036854775807LL
#define Pi 3.14159265358979323846264338326950288419716939937510582
#define EPS 1e-10

#define ff first
#define ss second
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define mp make_pair
#define L(x) x.length()
#define B(x) x.begin()
#define E(x) x.end()
#define F(x) x.front()
#define SZ(x) x.size()
#define CLR(x) x.clear()
#define SORT(x) sort(x.begin(),x.end())
#define REV(x) reverse(x.begin(),x.end())
#define FOR(i,x,y) for(int i=x;i<y;i++)
#define S(x) scanf("%d",&x)
#define SL(x) scanf("%lld",&x)
#define SD(x) scanf("%lf",&x)
#define SC(x) scanf("%1s",&x)
#define SS(x) scanf("%s",x)
#define DUM() scanf("%c",&dum)
#define READ(x) freopen(x,"r",stdin)
#define WRITE(x) freopen(x,"w",stdout)
#define FILL(x,y) memset(x,y,sizeof(x))
#define IT iterator

using namespace std;
typedef long long int lli;
typedef unsigned long long int llu;
typedef pair<int,int> P;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef vector< P > VP;
typedef vector< VP > VVP;
typedef vector<string> VS;
typedef vector< VS> VVS;
typedef map<int,int> MAP;

lli gcd(lli a,lli b){if(a==0)return(b);else return(gcd(b%a,a));}
lli fastpow(lli a,lli n,lli temp){if(n==0) return(1);if(n==1)return((a*temp)%MODM); if(n&1)temp=(temp*a)%MODM;return(fastpow((a*a)%MODM,n/2,temp));}
char dum;

int aho[1003][27];
int cnt[1003];
int dp[1003][1003];
int sstate[1003][1003];
char cstore[1003][1003];
int ahoIndex;

string s;
void insert(string s){
	int state=0;
	FOR(i,0,L(s)){
		if(aho[state][s[i]-'a']!=-1){
			state=aho[state][s[i]-'a'];
		}
		else{
			aho[state][s[i]-'a']=ahoIndex++;
			state=aho[state][s[i]-'a'];
		}
	}
	cnt[state]++;
}

void fail_func(){
	
	queue<int>q;
	FOR(i,0,26){
		if(aho[0][i]==-1){
			aho[0][i]=0;
		}
		else{
			aho[aho[0][i]][26]=0;
			q.push(aho[0][i]);
		}
	}
	while(!q.empty()){
		int state=q.front();
		q.pop();
		FOR(i,0,26){
			if(aho[state][i]!=-1){
				q.push(aho[state][i]);
				int fail=aho[state][26];
				while(aho[fail][i]==-1){
					fail=aho[fail][26];
				}
				aho[aho[state][i]][26]=aho[fail][i];
				cnt[aho[state][i]]+=cnt[aho[fail][i]];
			}
		}
	}
}
int solve(int state,int ind){
	
	
	if(ind==L(s))
		return 0;
	
	if(dp[state][ind]!=-1)
		return dp[state][ind];
	
	
		
	int nstate=state;
	
	if(s[ind]!='?'){
		while(aho[nstate][s[ind]-'a']==-1)
			nstate=aho[nstate][26];
		nstate=aho[nstate][s[ind]-'a'];
		
		dp[state][ind]=solve(nstate,ind+1)+cnt[nstate];
		sstate[state][ind]=nstate;
		cstore[state][ind]=s[ind];
		return dp[state][ind];
	}
	else{
		int res=0,ans=-1;
		FOR(i,0,26){
			nstate=state;
			while(aho[nstate][i]==-1)
				nstate=aho[nstate][26];
			
			nstate=aho[nstate][i];
			res=solve(nstate,ind+1)+cnt[nstate];
			if(res>ans){
				ans=res;
				dp[state][ind]=res;
				sstate[state][ind]=nstate;
				cstore[state][ind]=i+'a';
			}
		}
		return ans;
	}
}
int main()
{
	#ifndef ONLINE_JUDGE
	READ("read.txt");
	#endif
	
	int t,n,m;
	string str;
	cin>>t;
	while(t--){
		
		cin>>n>>m>>s;
		
		ahoIndex=1,FILL(aho,-1),FILL(cnt,0);
		
		FOR(i,0,m){
			cin>>str;
			insert(str);
		}
	
		fail_func();
		FILL(dp,-1);
		cout<<solve(0,0)<<endl;
	
		int state=0;
		FOR(i,0,L(s)){
			cout<<cstore[state][i];
			state=sstate[state][i];
		}
		cout<<endl;
	}
	return 0;
}
		
