#include <iostream>
#include <stdio.h>
#include <algorithm>
#define MAX 4000000
typedef long long int ll;
using namespace std;
const int mod=(1<<30)-1;
const int maxn=4000000+10;
int flag[maxn];
int prime[maxn];
int g[maxn];
void sieve()
{
	int tot=0;
	for (int i=2;i<=MAX;i++)
    {
        if (!flag[i]) prime[tot++]=i;
        for (int j=0;j<tot && i*prime[j]<=MAX;j++)
        {
            flag[i*prime[j]]=prime[j];
            if (i%prime[j]==0) break;
        }
    }
}
void compute()
{


	g[1]=1;
	for(int n=2,j,k,kk;n<=MAX;n++)
	{
		if(!flag[n])
		g[n]=(1-n);
		else
		{
			
			j=flag[n];
			k=n/j;
			kk=k/j;
			
			if(kk*j!=k)
			g[n]=g[k]*(1-j);
			else
			if (kk%j) g[n]=-g[kk]*j;
		   
			
			
			
		}
		
	
	}
	for (int i=1;i<=MAX;i++) g[i]=g[i-1]+g[i]*i;
	

}

int calc(int A,int B)
{
    int res=0;
    if (A>B) swap(A,B);
    for (int d=1,dd;d<=A;d=dd+1)
    {
        int u=A/d,v=B/d;
        dd=min(A/u,B/v);
        ll s1=((ll)u*(u+1)/2)&mod;
        ll s2=((ll)v*(v+1)/2)&mod;
        res+=(((s1*s2)&mod)*(g[dd]-g[d-1]+mod+1))&mod;
        res&=mod;
    }
    return res;
}
 
int main()
{
   
    sieve();
    compute();
    
    int t,A,B;
    scanf("%d",&t);
    while(t--)
    {
        int res=0;
        scanf("%d %d",&A,&B);
        printf("%d\n",calc(A,B));
    }
    
   
} 