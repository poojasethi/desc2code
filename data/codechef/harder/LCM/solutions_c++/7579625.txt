#include <stdio.h>
#include <iostream>
#define MAXN 4000000
#include <algorithm>
#define MOD (1LL << 30)
typedef long long ll;
using namespace std;
int small[MAXN + 1], primes[MAXN], M[MAXN + 1], F[MAXN + 1], total, S[MAXN + 1];
int a[100010];
void pre() {
    small[1] = M[1] = F[1]= 1;
    for(int i = 2; i <= MAXN; i++) {
        if(!small[i]) {
            M[i] = -1;
            small[i] = primes[total++]= i;
            F[i] = 1 - i;
        }
        int upto = MAXN / i;
        for(int j = 0; j < total && primes[j] <= upto; j++) {
            small[i * primes[j]] = primes[j];
            if(small[i] == primes[j]) {
                M[i * primes[j]] = 0;
                if(small[i / primes[j]] == primes[j]) F[i * primes[j]] = 0;
                else F[i * primes[j]] = -primes[j] * (M[primes[j]] * M[primes[j]]) * F[i / primes[j]];
                break;
            }
            else M[i * primes[j]] = -M[i], F[i * primes[j]] = F[i] * F[primes[j]];
        }
    }
    /*for(int i = 1; i <= 50; i++) cout << -F[i] << " "; cout << endl;
    return;
    int temp, cnt = 1;
    ll num;
    for(int i = 2; i <= MAXN; i++) {
        ll cons = M[i] * M[i];
        temp = small[i];
        int j = i / temp;
        cnt = 1;
        num = temp;
        int flag =  0;
        while(temp == small[j]) {
            cnt++;
            j /= temp;
            if(cnt == 3) {F[i] = 0;flag = 1;break;}
            num = num * temp;
        }
        if(flag) continue;
        ll K = -temp * (M[i/temp] * M[i/temp]);
        K = cons + K;
        if(num == i) F[i] = K * F[j];
        else F[i] = F[j] * F[num];
    }*/
    for(int i = 1; i <= MAXN; i++) {
        F[i] = F[i] * ll(-i);
        S[i] = S[i - 1] + F[i];
    }
}

int sum(int t) {
  if (t & 1) return (t+1)/2*t;
  else return t/2*(t+1);
}
int ga,gb, ans, n;
void solve() {
    scanf("%d%d",&ga,&gb);
    int i;if (ga > gb) { i = ga; ga = gb; gb = i; }
    ans = 0; n = 2;
    a[0] = 1;
    a[1] = ga+1;
    for (i=2;i<=ga;i++)
      if (ga/i != ga/(i-1)) a[n++] = i;
      else break;
    for (i=ga/i-1;i>=1;i--) a[n++] = ga/(i+1)+1;
    for (i=2;i<=gb;i++)
      if (gb/i != gb/(i-1)) a[n++] = i;
      else break;
    for (i=gb/i-1;i>=1;i--) a[n++] = gb/(i+1)+1;
    std::sort(a,a+n);
    a[n++] = ((1LL << 31 )- 1LL);
    for (i=0;a[i]<= ga;i++)
      ans -= sum(ga/a[i])*sum(gb/a[i])*(S[a[i+1]-1]-S[a[i]-1]);
    printf("%d\n",ans & ((1 << 30)-1));
}
int main() {
    int t;
    pre();
    scanf("%d", &t);
    while(t--) solve();
}
