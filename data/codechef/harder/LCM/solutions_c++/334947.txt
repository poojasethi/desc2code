#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <cmath>
using namespace std;
int gcd(int a,int b) {
	return b?gcd(b,a%b):a;
}
const int maxN=4000000,maxSqrtN=2000;
int p[maxN+10],F[maxN+10];
int prime[300000],nPrime=0;
int makeList(int n,int l[]) {
	int r=lrint(floor(sqrt(n)));
	
	int nl=0;
	for(int i=1;i<=r;i++)
	    l[++nl]=i;
	for(int i=r;i>=1;i--)
		if(l[nl]<n/i)
	    	l[++nl]=n/i;
	return nl;
}
int calc(int n,int m) {
	static int l1[maxSqrtN*2+10],l2[maxSqrtN*2+10];
    int n1=makeList(n,l1);
    int n2=makeList(m,l2);
    int ans=0;
    for(int i=1,j=1,last=0;i<=n1||j<=n2;) {
		int pos;
        if(i<=n1&&j<=n2&&l1[i]==l2[j]) {
			pos=l1[i];
			i++,j++;
		} else if(i<=n1&&(j>n2||l1[i]<l2[j])) {
            pos=l1[i];
			i++;
		} else {
            pos=l2[j];
			j++;
		}
		if(last<pos) {
			int A=n/pos,B=m/pos;
			ans+=(F[pos]-F[last])*(A*(A+1)/2)*(B*(B+1)/2);
			//last++;
			//printf("%d: %d %d   %d %d\n",pos,n/pos,m/pos,n/last,m/last);
		    last=pos;
		}
	}
	return ans&((1<<30)-1);
}
int main() {
	F[1]=1;
	for(int i=2;i<=maxN;i++) {
		if(!p[i]) {
            prime[++nPrime]=i;
            
			p[i]=i;
			F[i]=1-i;
		}
		for(int pi=1;pi<=nPrime;pi++) {
			int pp=prime[pi],mul=i*pp;
			if(mul>maxN)
			    break;
			    
			p[mul]=pp;
			if(p[i]!=pp)
			    F[mul]=F[i]*(1-pp);
			else if(p[i/pp]!=pp)
			    F[mul]=F[i/pp]*(-pp);
			else
			    F[mul]=0;
			
			if(p[i]==pp)
			    break;
		}
	}
	for(int i=1;i<=maxN;i++)
	    F[i]=F[i-1]+F[i]*i;

	int T;
	for(scanf("%d",&T);T;T--) {
		int A,B;
		scanf("%d%d",&A,&B);
		printf("%d\n",calc(A,B));
	}
	scanf("%*s");
}
