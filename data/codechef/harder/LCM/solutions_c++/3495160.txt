#include<cstdio>
#include<ctime>
#include<algorithm>
using namespace std;
 
const int mod=(1<<30)-1;
const int maxn=4000000+10;
int flag[maxn];
int prime[maxn];
int g[maxn];
bool ng[maxn];
 
int calc(int A,int B)
{
    int res=0;
    if (A>B) swap(A,B);
    for (int d=1,dd;d<=A;d=dd+1)
    {
        int u=A/d,v=B/d;
        dd=min(A/u,B/v);
        long long s1=((long long)u*(u+1)/2)&mod;
        long long s2=((long long)v*(v+1)/2)&mod;
        res+=(((s1*s2)&mod)*(g[dd]-g[d-1]+mod+1))&mod;
        res&=mod;
    }
    return res;
}
 
int main()
{
    int tot=0;
    for (int i=2;i<=4000000;i++)
    {
        if (!flag[i]) prime[tot++]=i;
        for (int j=0;j<tot && i*prime[j]<=4000000;j++)
        {
            flag[i*prime[j]]=prime[j];
            if (i%prime[j]==0) break;
        }
    }
 
    //for (int i=2;i<=160;i++) if (!flag[i])
      //  for (int j=i*i*i,k=i*i*i;j<=4000000;j+=k)
        //    ng[j]=1;
 
    g[1]=1;
    for (int i=2,j,k,kk;i<=4000000;i++)
    if (!flag[i]) g[i]=1-i;else
    if (!ng[i])
    {
        j=flag[i];k=i/j;kk=k/j;
        if (kk*j!=k) g[i]=g[k]*(1-j);
        else if (kk%j) g[i]=-g[kk]*j;
    }
    for (int i=1;i<=4000000;i++) g[i]=g[i-1]+g[i]*i;
    
    int Test,A,B;scanf("%d",&Test);
    for (;Test--;)
    {
        int res=0;
        scanf("%d%d",&A,&B);
        //A=rand()*rand()%4000000+1;
        //B=rand()*rand()%4000000+1;
        printf("%d\n",calc(A,B));
    }
    
    //printf("%d\n",calc(4000000,4000000));
    //fprintf(stderr,"%lf\n",(double)clock()/CLOCKS_PER_SEC);
} 