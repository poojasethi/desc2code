#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <math.h>
#define fi first
#define se second
#define mk make_pair
using namespace std;

typedef pair<unsigned long long, double> Val;
Val operator +(const Val &a,const Val &b)
{
	unsigned long long A=a.fi+b.fi;
	double B=a.se+b.se;
	A+=(int)B;B-=(int)B;
	return mk(A,B);
}

int n,m,i,j,k,u,v,tot,cnt;
int id[505],w[505];
long long x[505],y[505],sumx[505],sumy[505],U,V;
long long Ax,Bx,Cx,Ay,By,Cy;
Val ans,tmp,BC;

struct node
{
	long long x,y;
	bool z;
	int u,v;
	node(long long x_=0,long long y_=0,int u_=0,int v_=0)
	{
		x=x_;y=y_;u=u_;v=v_;
		z=(x>=0&&y>=0)||(y>0);
	}
	bool operator == (const node &a)const {return (z==a.z)&&(x*a.y==y*a.x);}
}ang[500005],d[500005];

inline bool cmp(const node &a,const node &b)
{
	if(a.z!=b.z)return a.z>b.z;
	return a.x*b.y>a.y*b.x;
}
inline bool cmp2(const int &a,const int &b){return x[a]*U+y[a]*V>x[b]*U+y[b]*V;}

void Swap(int z)
{
	int u=id[z-1],v=id[z];
	swap(id[z-1],id[z]);
	swap(w[u],w[v]);
	sumx[z-1]+=x[v]-x[u];
	sumy[z-1]+=y[v]-y[u];
}

void adjust(int u)
{
	int v;
	long long val=x[u]*U+y[u]*V,tmp;
	for(;w[u]>1;)
	{
		v=id[w[u]-1];
		tmp=x[v]*U+y[v]*V;
		if(val>=tmp)Swap(w[u]);else break;
	}
	/*for(;w[u]<n;)
	{
		v=id[w[u]+1];
		tmp=x[v]*U+y[v]*V;
		if(val<tmp)Swap(w[u]+1);else break;
	}*/
}

unsigned long long sqr(long long x)
{
	unsigned long long y;
	if(x<0)y=-x;else y=x;
	return y*y;	
}	

Val Sqrt(unsigned long long x)
{
	if(!x)return mk(0,0);
	unsigned long long y=(unsigned long long)sqrt(x);
	for(;(y+1)*(y+1)<=x;++y);
	return mk(y,(x-y*y)/(sqrt(x)+y));
}

Val dis(long long x,long long y){return Sqrt(sqr(x-Bx)+sqr(y-By))+Sqrt(sqr(x-Cx)+sqr(y-Cy))+BC;}

void calc()
{
	int l=1,r=m,mid,aim=0,u;
	Val tmp;
	while(l<=r)
	{
		mid=l+r>>1;u=id[mid];
		if(U*x[u]+V*y[u]>0)aim=mid,l=mid+1;
		else r=mid-1;
	}
	tmp=dis(Ax+sumx[aim],Ay+sumy[aim]);
	if(tmp>ans)ans=tmp;
}

char s[105];

int main()
{
	scanf("%d%d",&n,&m);
	scanf("%lld%lld",&Ax,&Ay);
	scanf("%lld%lld",&Bx,&By);
	scanf("%lld%lld",&Cx,&Cy);
	BC=Sqrt(sqr(Bx-Cx)+sqr(By-Cy));
	ans=dis(Ax,Ay);
	for(i=n,n=0;i;--i)
	{
		scanf("%d%d",&u,&v);
		if(u||v)x[++n]=u,y[n]=v;
	}
	if(m>n)m=n;
	
	if(m)
	{
		for(i=1;i<=n;++i)
		for(j=i+1;j<=n;++j)
		if(x[i]!=x[j]||y[i]!=y[j])
		{
			ang[++tot]=node(y[i]-y[j],x[j]-x[i],i,j);
			ang[++tot]=node(y[j]-y[i],x[i]-x[j],i,j);
		}
		for(i=1;i<=n;++i)
		{
			ang[++tot]=node(-y[i],x[i],0,0);
			ang[++tot]=node(y[i],-x[i],0,0);
		}
		ang[++tot]=node(0,1,0,0);
		ang[++tot]=node(0,-1,0,0);
		ang[++tot]=node(1,0,0,0);
		ang[++tot]=node(-1,0,0,0);
		sort(ang+1,ang+tot+1,cmp);
		ang[tot+1]=ang[1];
		
		d[++cnt]=node(1,0,0,0);
		for(i=1;i<=tot;i=j+1)
		{
			for(j=i;j<tot&&ang[j+1]==ang[j];++j);
			for(k=i;k<=j;++k)d[++cnt]=node(ang[i].x+ang[j+1].x,ang[i].y+ang[j+1].y,ang[k].u,ang[k].v);
		}
		
		for(i=1;i<=n;++i)id[i]=i;
		U=d[1].x;V=d[1].y;
		sort(id+1,id+n+1,cmp2);
		for(i=1;i<=n;++i)w[id[i]]=i;
		for(i=1;i<=n;++i)sumx[i]=sumx[i-1]+x[id[i]],sumy[i]=sumy[i-1]+y[id[i]];
		
		for(i=1;i<=cnt;++i)
		{
			U=d[i].x;V=d[i].y;
			if(d[i].u)adjust(d[i].u),adjust(d[i].v);
			calc();
		}
	}
	
	sprintf(s+1,"%.13lf",ans.se);
	printf("%llu%s\n",ans.fi,s+2);
}