//
//	ID: y0rkl1u
//	PROG: bzoj2509
//	LANG: C++
//	DATE: 04.14.2016
//	NOTE: block + fft
//

#include <bits/stdc++.h>
using namespace std;

#define ef else if
#define reg register
#define rint reg int
#define Min(a,b) ((a)<(b)?(a):(b))
#define Max(a,b) ((a)>(b)?(a):(b))
#define Abs(a) ((a)>=0?(a):(-(a)))
#define cmax(a,b) ((a)<(b)?(a)=(b):1)
#define cmin(a,b) ((a)>(b)?(a)=(b):1)
#define For(i,l,r) for(rint i=(l),_c=(r);i<=_c;i++)
#define Dor(i,l,r) for(rint i=(l),_c=(r);i>=_c;i--)
#define clr(a,sz) memset(a,0,sizeof(a[0])*(sz+5))
#define clrs(a,k,sz) memset(a,k,sizeof(a[0])*(sz+5))
#define pt(x,b) cerr<<#x<<" = "<<x<<(b?'\n':'\t')
#define pa(a,l,r) do{cerr<<#a<<" = ";\
	For(_i,l,r)cerr<<a[_i]<<" \n"[_i==r];}while(0)
typedef long long ll;
typedef double fl;

const int MN=100010,MS=65536+10;
#define cpp reg const cp&t
struct cp
{
	fl x,y;
	cp operator+(cpp)const{return(cp){x+t.x,y+t.y};}
	cp operator-(cpp)const{return(cp){x-t.x,y-t.y};}
	cp operator*(cpp)const{return(cp){x*t.x-y*t.y,x*t.y+y*t.x};}
};
const fl PI=acos(-1);
struct FFT
{
	cp w[MS];
	void getW(rint n){
		rint m=n>>1;reg cp e=(cp){cos(2*PI/n),sin(2*PI/n)};
		w[m]=(cp){1,0};
		For(i,1,m-1)w[i+m]=e*w[i+m-1];
		Dor(i,m-1,1)w[i]=w[i<<1];
	}
	void DFT(reg cp*a,rint n){
		for(rint i=0,j=0;i<n;++i){
			if(i>j)swap(a[i],a[j]);
			for(rint l=n>>1;(j^=l)<l;l>>=1);
		}
		for(rint s=2,m=1;s<=n;m=s,s<<=1){
			for(rint i=0;i<n;i+=s)For(j,0,m-1){
				reg cp tmp=a[i+j+m]*w[j+m];
				a[i+j+m]=a[i+j]-tmp,a[i+j]=a[i+j]+tmp;
			}
		}
	}
	void mul(const rint*a,const rint*b,reg ll*c,rint n){
		rint tn=1;while(tn<(n<<1))tn<<=1;getW(tn);
		static cp ta[MS],tb[MS];
		For(i,0,n-1)ta[i].x=a[i],tb[i].x=b[i];
		DFT(ta,tn),DFT(tb,tn);For(i,0,tn-1)ta[i]=ta[i]*tb[i];
		reverse(ta+1,ta+tn),DFT(ta,tn);
		reg fl inv=1.0/tn;
		For(i,0,tn-1)c[i]=(ll)(ta[i].x*inv+0.5),ta[i]=tb[i]=(cp){0,0};		// <--
	}
}p;
int an,a[MN],T,lmax[MN],rmax[MN],lcnt[MS],rcnt[MS],m;
inline void Main()
{
	scanf("%d",&an);
	For(i,1,an)scanf("%d",a+i),cmax(m,a[i]),lmax[i]=Max(lmax[i-1],a[i-1]);
	Dor(i,an,1)rmax[i]=Max(rmax[i+1],a[i+1]),++rcnt[a[i]];
	T=sqrt(10*m*log(m))+1;

	reg ll ans=0;
	for(rint l=1,r;l<=an;l=r+1){
		r=Min(l+T-1,an);
		For(i,l,r)--rcnt[a[i]];
		static ll res[MN];
		p.mul(lcnt,rcnt,res,Max(lmax[l],rmax[r])+1);
		For(i,l,r){
			ans+=res[2*a[i]];
			For(j,i+1,r)if(2*a[i]-a[j]>=0)ans+=lcnt[2*a[i]-a[j]];
			For(j,l,i-1)if(2*a[i]-a[j]>=0)ans+=rcnt[2*a[i]-a[j]];
			++lcnt[a[i]];
		}
		For(i,0,lmax[l]+rmax[r])res[i]=0;		// <--
	}
	cout<<ans<<endl;
}
int main()
{
	Main();
	return 0;
}
