#include <cstdio>
#include <cmath>
#include <memory.h>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
#define pi 3.141592653535898
struct complex
{
	double x,y;
} a1[65536],a2[65536],t[65536];
int ar[100010],sum1[30010],sum2[30010];
complex operator *(complex a,complex b)
{
	complex ans;
	ans.x=a.x*b.x-a.y*b.y;
	ans.y=a.x*b.y+a.y*b.x;
	return ans;
}
complex operator +(complex a,complex b)
{
	complex ans;
	ans.x=a.x+b.x;
	ans.y=a.y+b.y;
	return ans;
}
complex get(double angle)
{
	complex ans;
	ans.x=cos(angle);
	ans.y=sin(angle);
	return ans;
}
void fft(int f,int l,int flag,complex a[])
{
	if(f==l)return;
	int mid=(f+l)/2;
	rep(i,f,l)
		if(i-f&1)t[mid+1+(i-f)/2]=a[i];
		else t[f+(i-f)/2]=a[i];
	rep(i,f,l)
		a[i]=t[i];
	fft(f,mid,flag,a);
	fft(mid+1,l,flag,a);
	complex cir=get(flag*2*pi/(l-f+1)),sta=get(0);
	int x=f,y=mid+1;
	rep(i,f,l)
	{
		t[i]=a[x]+a[y]*sta;
		sta=sta*cir;
		x++;y++;
		if(x>mid)x=f;
		if(y>l)y=mid+1;
	}	
	rep(i,f,l)
		a[i]=t[i];
	if(flag==1&&l-f==65535)
		rep(i,f,l)
			a[i].x/=65536;
}
int main()
{
	int n;
	scanf("%d",&n);
	rep(i,1,n)
		scanf("%d",&ar[i]);
	if(n<100)
	{
		int ans=0;
		rep(i,1,n)
			rep(j,i+1,n)
				rep(k,j+1,n)
					if(ar[i]+ar[k]==2*ar[j])ans++;
		printf("%d\n",ans);
		return 0;
	}
	memset(sum1,0,sizeof(sum1));
	memset(sum2,0,sizeof(sum2));
	int k=n/20;
	long long res=0;
	rep(i,1,n)
		sum2[ar[i]]++;
	rep(i,1,k)
	{
		sum2[ar[i]]--;
		rep(j,1,i-1)
			if(2*ar[i]-ar[j]>0&&2*ar[i]-ar[j]<=30000)res+=sum2[2*ar[i]-ar[j]];	
	}
	int t=n/k;
	if(n%k==0)t--;
	rep(i,2,t)
	{
		rep(j,(i-2)*k+1,(i-1)*k)
			sum1[ar[j]]++;
	  rep(j,(i-1)*k+1,i*k)
			{
				sum2[ar[j]]--;
				rep(l,(i-1)*k+1,j-1)
					if(2*ar[j]-ar[l]>0&&2*ar[j]-ar[l]<30001)res+=sum2[2*ar[j]-ar[l]];
				rep(l,j+1,i*k)
					if(2*ar[j]-ar[l]>0&&2*ar[j]-ar[l]<30001)res+=sum1[2*ar[j]-ar[l]];
			}
		rep(j,0,65535)
			a1[j].y=a1[j].x=a2[j].x=a2[j].y=0.0;
		rep(j,1,30000)
		{
			a1[j].x=(double)sum1[j];
			a2[j].x=(double)sum2[j];
		}
		fft(0,65535,-1,a1);
		fft(0,65535,-1,a2);
		rep(j,0,65535)
			a1[j]=a1[j]*a2[j];
		fft(0,65535,1,a1);
		rep(j,(i-1)*k+1,i*k)
			res+=trunc(a1[ar[j]*2].x+0.5);
	}
	rep(i,(t-1)*k+1,t*k)
		sum1[ar[i]]++;
	rep(i,t*k+1,n)
	{
		rep(j,i+1,n)
			if(2*ar[i]-ar[j]>0&&2*ar[i]-ar[j]<=30000)res+=sum1[2*ar[i]-ar[j]];
		sum1[ar[i]]++;
	}
	printf("%lld\n",res);
	return 0;
}