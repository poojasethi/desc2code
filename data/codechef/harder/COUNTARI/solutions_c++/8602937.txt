#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<cmath>

#define Size 2000
#define maxn 110000
#define Length 70000
#define High   16
#define LL     long long
#define dou    double
using namespace std;
const dou pi=acos(-1);
int  A[maxn],Left[maxn],Right[maxn];
int  R[Length];
int  n,L=65536,K=0;
//int  n,L=32,K=0;
LL   Ans=0;

struct Comp{
	dou  x,y;
	/**/ Comp(){}
	/**/ Comp(dou _x,dou _y){x=_x;y=_y;}
	friend Comp operator+(Comp A,Comp B){return Comp(A.x+B.x,A.y+B.y);}
	friend Comp operator-(Comp A,Comp B){return Comp(A.x-B.x,A.y-B.y);}
	friend Comp operator*(Comp A,Comp B){return Comp(A.x*B.x-A.y*B.y,A.y*B.x+A.x*B.y);}
	friend Comp operator/(Comp A,dou  k){return Comp(A.x/k,A.y/k);}	
};
Comp C1[Length],C2[Length];
void Reverse(int R[Length]){
	int t,s;
	for(int i=0;i<L;i++){
		t=i;s=0;
		for(int j=0;j<High;j++){s<<=1;s|=t&1;t>>=1;}
		R[i]=s;
		//cout<<i<<" "<<R[i]<<endl;
	}
}
void FFT(Comp C[Length],int d){
	for(int i=0;i<L;i++)if(i<R[i])swap(C[i],C[R[i]]);
	Comp w,wn,u,v;int s;
	for(int i=1;i<=High;i++){
		s=1<<i;wn=Comp(cos(pi*2.0/s*d),sin(pi*2.0/s*d));
		for(int j=0;j<L;j+=s){
			w=Comp(1,0);
			for(int k=0;k<s/2;k++){
				u=C[j+k];v=C[j+k+s/2]*w;C[j+k]=u+v;C[j+k+s/2]=u-v;w=w*wn;
			}
		}
	}
	if(d<0)for(int i=0;i<L;i++)C[i]=C[i]/L;
}

void init(){
	scanf("%d",&n);
	for(int i=1;i<=n;i++)scanf("%d",&A[i]);
	for(int i=1;i<=n;i+=Size){K++;Left[K]=i;Right[K]=min(i+Size-1,n);}
	//for(int i=1;i<=K;i++)printf("%d %d\n",Left[i],Right[i]);
}
void Work1(){
	static int C[Length],left,right;
	memset(C,0,sizeof(C));
	for(int t=1;t<=K;t++){
		left=Left[t];right=Right[t];
		for(int i=left;i<right;i++){
			for(int j=i+2;j<=right;j++){
				C[A[j-1]]++;
				if((A[i]+A[j])%2==0)Ans+=C[(A[i]+A[j])/2];
			}
			for(int j=i+2;j<=right;j++)C[A[j-1]]--;
		}
	}
}
void Work2(){
	static int C[Length],left,right;
	memset(C,0,sizeof(C));
	for(int t=1;t<=K;t++){
		left=Left[t];right=Right[t];
		for(int i=left;i<right;i++)
		    for(int j=i+1;j<=right;j++)if(A[i]*2-A[j]>=0)Ans+=C[A[i]*2-A[j]];
		for(int i=left;i<=right;i++)C[A[i]]++;
	}
	memset(C,0,sizeof(C));
	for(int t=K;t>=1;t--){
		left=Left[t];right=Right[t];
		for(int i=left;i<right;i++)
		    for(int j=i+1;j<=right;j++)if(A[j]*2-A[i]>=0)Ans+=C[A[j]*2-A[i]];
		for(int i=left;i<=right;i++)C[A[i]]++;
	}
}
void Work3(){
	memset(C1,0,sizeof(C1));
	memset(C2,0,sizeof(C2));
	int  left,right;
	
	for(int t=1;t<=K;t++){
		left=Left[t];right=Right[t];
		memset(C1,0,sizeof(C1));
	    memset(C2,0,sizeof(C2));
	    //cout<<"C1 C2 "<<endl;for(int i=0;i<L;i++)cout<<C1[i].x<<" "<<C1[i].y<<"    "<<C2[i].x<<" "<<C2[i].y<<endl;
	    for(int i=1;i<left;i++)C1[A[i]].x+=1.0;
	    for(int i=n;i>right;i--)C2[A[i]].x+=1.0;
	    
	    //cout<<"C1 C2 "<<endl;
	    //for(int i=0;i<L;i++)cout<<C1[i].x<<" "<<C1[i].y<<"    "<<C2[i].x<<" "<<C2[i].y<<endl;
	    
	    FFT(C1,1);FFT(C2,1);
	    for(int i=0;i<L;i++)C1[i]=C1[i]*C2[i];
	    FFT(C1,-1);
	    //for(int i=0;i<L;i++)cout<<C1[i].x<<" "<<C1[i].y<<endl;
	    for(int i=left;i<=right;i++)Ans+=(LL)(C1[A[i]*2].x+0.5);
	    //cout<<t<<" "<<Ans<<"   "<<left<<" "<<right<<endl;
	    //cout<<endl<<endl;
	}
}

int  main(){
	//freopen("COUNTARI.in","r",stdin);
	//freopen("COUNTARI.out","w",stdout);
	init();
	Reverse(R);
	Work1();
	Work2();
	Work3();
	cout<<Ans<<endl;
	return 0;
}