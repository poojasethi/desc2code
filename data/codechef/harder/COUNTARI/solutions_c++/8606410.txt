#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>

#define pi 3.141592653589793238462643383
#define MaxC 60005

using namespace std;
int i,j,m,n,p,k,F[MaxC],a[100005],tot,S,st[100005],ed[100005],N,rev[300005],M;
struct complex
{
    double re,im;
    complex(double r=0.0,double i=0.0) {re=r,im=i;}
    void print() {printf("%lf %lf\n",re,im);}
}A[300005],B[300005],W[2][300005],C[300005];
complex operator +(const complex&A,const complex&B) {return complex(A.re+B.re,A.im+B.im);}
complex operator -(const complex&A,const complex&B) {return complex(A.re-B.re,A.im-B.im);}
complex operator *(const complex&A,const complex&B) {return complex(A.re*B.re-A.im*B.im,A.re*B.im+A.im*B.re);}
long long ans;

void FFT(complex*a,int f)
{  int t,l,i,j,k;
    complex x,y;
    for (i=0; i<N; i++) if (i<rev[i]) swap(a[i],a[rev[i]]);
    for (i=1; i<N; i<<=1)
        for (j=0,t=N/(i<<1); j<N; j+=i<<1)
            for (k=0,l=0; k<i; k++,l+=t) x=W[f][l]*a[j+k+i],y=a[j+k],a[j+k]=y+x,a[j+k+i]=y-x;
    if (f) for (i=0; i<N; i++) a[i].re/=N;
}
int main()
{
   scanf("%d",&n);
   for (i=1;i<=n;++i) scanf("%d",&a[i]),M=max(M,a[i]);
   M*=2;
   S=max(1,n/30);
   //S=3;
   for (i=1;i<=n;i=ed[tot]+1)
   {
      st[++tot]=i;
	  ed[tot]=min(n,st[tot]+S-1);
   }
   for (i=1;i<=tot;++i)
   {
   	     memset(F,0,sizeof(F));   	   
		  for (j=st[i];j<=ed[i];++j)
		  {
		        ans+=F[a[j]];
		         for (k=st[i];k<j;++k)
		            if (2*a[j]-a[k]>0) F[2*a[j]-a[k]]++;
		  }
   }
   memset(F,0,sizeof(F));
   for (i=1;i<=tot;++i)
   {
   	    for (j=st[i];j<=ed[i];++j)
   	          for (k=st[i];k<j;++k)
   	             if (2*a[k]-a[j]>0) ans+=F[2*a[k]-a[j]];
   	    for (j=st[i];j<=ed[i];++j) F[a[j]]++;
   	}
   	memset(F,0,sizeof(F));
   	for (i=tot;i;--i)
   	{
   		for (j=st[i];j<=ed[i];++j)
   		    for (k=st[i];k<j;++k)
   		      if (2*a[j]-a[k]>0) ans+=F[2*a[j]-a[k]];
   		for (j=st[i];j<=ed[i];++j) F[a[j]]++;
    }
   	for (N=1;N<M;N*=2); N*=2;
   	  for (i=0; i<N; i++)
    {
        int x=i,y=0;
        for (k=1; k<N; x>>=1,k<<=1) (y<<=1)|=x&1;
        rev[i]=y;
    }
    for (i=0; i<N; i++) W[0][i]=W[1][i]=complex(cos(2*pi*i/N),sin(2*pi*i/N)),W[1][i].im=-W[0][i].im;
    for (i=1;i<=n;++i) B[a[i]].re+=1.; 
    for (i=1;i<=tot;++i)
    {
    	   for (j=st[i];j<=ed[i];++j) B[a[j]].re-=1.;
    	     FFT(A,0); FFT(B,0); 
             for (j=0;j<N;j++) C[j]=A[j]*B[j];
             FFT(C,1); FFT(A,1);FFT(B,1);
             for (j=st[i];j<=ed[i];++j) A[a[j]].re+=1,ans+=(long long)(C[2*a[j]].re+0.5);
             for (j=0;j<N;++j) A[j].im=B[j].im=0;
    }
    printf("%lld\n",ans);
}
	
				  