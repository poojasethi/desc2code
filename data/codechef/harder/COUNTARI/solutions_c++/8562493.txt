#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
int n;
#define pi 3.141592653589793238462643383279502884197169399375105
using namespace std;
typedef double db;
struct cp{
       double a,b;
       cp operator+(const cp&x)const{return (cp){a+x.a,b+x.b};}
       cp operator-(const cp&x)const{return (cp){a-x.a,b-x.b};}
       cp operator*(const cp&x)const{return (cp){a*x.a-b*x.b,a*x.b+b*x.a};}
}A[100005],B[100005];
void dft(cp*a,int n,int fl=1){
	for (int i=n>>1,j=1;j<n;j++){
		if(i<j)swap(a[i],a[j]);
		int k;for (k=n>>1;i&k;i^=k,k>>=1);i^=k;
	}
	for (int m=2;m<=n;m<<=1){
		cp wm;wm=(cp){cos(fl*2*pi/m),sin(fl*2*pi/m)};
		for (int i=0;i<n;i+=m){
			cp w;w=(cp){1,0};
			for (int j=i;j<i+(m>>1);j++,w=w*wm){
				cp u=a[j],v=w*a[j+(m>>1)];
				a[j]=u+v;
				a[j+(m>>1)]=u-v;
			}
		}
	}
	if(fl==-1)for (int i=0;i<n;i++)a[i].a/=n;
}
void fft(ll *a,ll *b,int n){
	for (int i=0;i<n;i++){
		A[i]=(cp){a[i],0};
		B[i]=(cp){b[i],0};
	}
	dft(A,n);dft(B,n);
	for (int i=0;i<n;i++)A[i]=A[i]*B[i];
	dft(A,n,-1);
	for (int i=0;i<n;i++)a[i]=ll(A[i].a+0.5);
}
int N=65536;
int a[166666];
int sz=2000;
ll p[66666],q[66666];
int cnt[66666]={0};
int main()
{
	scanf("%d",&n);
	for (int i=1;i<=n;i++)scanf("%d",&a[i]);
	ll su=0;
	for (int i=1+sz;i+sz<=n;i+=sz){
		memset(p,0,sizeof(p));
		memset(q,0,sizeof(q));
		for (int j=1;j<i;j++)p[a[j]]++;
		for (int j=i+sz;j<=n;j++)q[a[j]]++;
		fft(p,q,N);
		for (int j=i;j<i+sz;j++)su+=p[a[j]*2];
	}
	for (int i=1;i<=n;i+=sz){
		int up=min(n,i+sz-1);
		for (int j=i;j<=up;j++){
			for (int k=j+1;k<=up;k++){
				int nd=2*a[j]-a[k];
				if(nd>=0)su+=cnt[nd];
			}
			cnt[a[j]]++;
		}
	}
	for (int i=1;i<=n;i+=sz){
		int up=min(n,i+sz-1);
		for (int j=i;j<=up;j++){
			cnt[a[j]]--;
		}
		for (int j=i;j<=up;j++){
			for (int k=j+1;k<=up;k++){
				int nd=2*a[k]-a[j];
				if(nd>=0)su+=cnt[nd];
			}
		}
	}
	cout<<su<<endl;
	return 0;
}
 