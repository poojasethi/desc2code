#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cstdlib>
#include<string>
#include<bitset>
#define INF 1000000000
#define fi first
#define se second
#define N 100005
#define debug(x) cout<<#x<<"="<<x<<endl
using namespace std;
typedef long long LL;
typedef pair<int,int> pii;
double pi=acos(-1.0);
struct Complex
{
    double r,i;
    Complex(double real=0,double image=0)
    {
        r=real,i=image;
    }
    Complex operator + (const Complex &o)
    {
        return Complex(r+o.r,i+o.i);
    }
    Complex operator - (const Complex &o)
    {
        return Complex(r-o.r,i-o.i);
    }
    Complex operator * (const Complex &o)
    {
        return Complex(r*o.r-i*o.i,i*o.r+r*o.i);
    }
};
Complex A[N],B[N];
void brc(Complex *y,int n)
{
    int i,j,k;
    for(i=1,j=n/2;i<n-1;i++)
    {
        if(i<j) swap(y[i],y[j]);
        k=n/2;
        while(k<=j)
            j-=k,k>>=1;
        j+=k;
    }
}

void fft(Complex *y,int n,int on)
{
    int i,j,k;
    Complex u,t;
    brc(y,n);
    for(i=2;i<=n;i<<=1)
    {
        Complex wn(cos(on*2*pi/i),sin(on*2*pi/i));
        for(j=0;j<n;j+=i)
        {
            Complex w(1,0);
            for(k=j;k<j+i/2;k++)
            {
                u=y[k];
                t=w*y[k+i/2];
                y[k]=u+t;
                y[k+i/2]=u-t;
                w=w*wn;
            }
        }
    }
    if(on==-1)
		for(i=0;i<n;i++)
			y[i].r/=n;
}

LL S1,S2,S3;
int n,a[N],pre[N],suf[N];
//S1 The entire triplet lies in the current block
//S2 Two numbers in the triplet lie in the current block
//S3 Only one number lies in the current block
int main()
{
    int i,j,sz=600,m,k,st,ed,K=2;
    while(K<30000*2)
        K*=2;
    //debug(K);
    cin>>n;
    m=n/sz+(n%sz!=0);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]);
    //calc S1
    for(k=0;k<m;k++)
    {
        st=k*sz;
        ed=min(n,(k+1)*sz);
        for(i=st;i<ed;i++)
            suf[a[i]]++;
        for(i=st;i<ed;i++)
        {
            suf[a[i]]--;
            for(j=st;j<i;j++)
                if(a[i]*2>a[j])
                {
                    //debug(i);
                    //debug(j);
                    //debug(suf[a[i]*2-a[j]]);
                    S1+=suf[a[i]*2-a[j]];
                }
        }
    }
    //debug(S1);
    //calc S2
    for(i=0;i<n;i++)
        suf[a[i]]++;
    for(k=0;k<m;k++)
    {
        st=k*sz;
        ed=min(n,(k+1)*sz);
        for(i=st;i<ed;i++)
            suf[a[i]]--;
        for(i=st;i<ed;i++)
            for(j=st;j<i;j++)
            {
                if(a[i]*2>a[j])
                    S2+=suf[a[i]*2-a[j]];
                if(a[j]*2>a[i])
                    S2+=pre[a[j]*2-a[i]];
            }
        for(i=st;i<ed;i++)
            pre[a[i]]++;
    }
    //cout<<S1+S2<<endl;
    //calc S3
    memset(pre,0,sizeof(pre));
    memset(suf,0,sizeof(suf));
    for(i=0;i<n;i++)
        suf[a[i]]++;
    for(k=0;k<m;k++)
    {
        st=k*sz;
        ed=min(n,(k+1)*sz);
        //debug(st);
        //debug(ed);
        for(i=st;i<ed;i++)
            suf[a[i]]--;
        for(i=0;i<K;i++)
        {
            A[i].r=pre[i],A[i].i=0;
            B[i].r=suf[i],B[i].i=0;
        }
        //debug(pre[3]);
        //debug(suf[3]);
        //debug(A[3].r);
        //debug(B[3].r);
        fft(A,K,1);
        fft(B,K,1);
        for(i=0;i<K;i++)
            A[i]=A[i]*B[i];
        fft(A,K,-1);
        //debug(A[6].r);
        for(i=st;i<ed;i++)
            S3+=LL(A[a[i]*2].r+0.5);
        for(i=st;i<ed;i++)
            pre[a[i]]++;
    }
    cout<<S1+S2+S3<<endl;
    return 0;
}
// davidlee1999WTK 2016/
// srO myk Orz
// ios::sync_with_stdio(false);
//#pragma comment(linker, "/STACK:102400000,102400000")
