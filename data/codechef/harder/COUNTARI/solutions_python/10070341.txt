#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <ctime>
#define pdd pair<double,double>
#define re first
#define im second

using namespace std;

int N;
int A[100010]={0};
int St[400]={0},En[400]={0};
int Sp=0;
int X=0;
int belong[100010]={0};
const double PI=acos(-1);
long long H[400][70000]={{0}};
int cntl[70000]={0};
int cntr[70000]={0};
pdd Q1[70000];
pdd Q2[70000];
pdd Q3[70000];

pdd operator * (pdd a,pdd b)
{return pdd(a.re*b.re-a.im*b.im,a.re*b.im+b.re*a.im);}

pdd operator + (pdd a,pdd b)
{return pdd(a.re+b.re,a.im+b.im);}

pdd operator - (pdd a,pdd b)
{return pdd(a.re-b.re,a.im-b.im);}

pdd operator / (pdd a,double b)
{return pdd(a.re/b,a.im/b);}

void FFT(pdd *Q,int Len,int flag)
{
	for(int i=0;i<Len;i++)
	{
		int S=i,P=0;
		for(int j=Len>>1;j>=1;j>>=1,S>>=1)
			P|=(S&1)*j;
		if(P>i) swap(Q[P],Q[i]);
	}
	for(int l=2;l<=Len;l<<=1)
	{
		pdd W=pdd(cos(2*PI/l*flag),sin(2*PI/l*flag));
		for(int i=0;i<Len;i+=l)
		{
			pdd wk=pdd(1,0);
			for(int j=0;j<(l>>1);j++)
			{
				pdd u=Q[i+j],v=Q[i+j+(l>>1)]*wk;
				Q[i+j]=u+v,Q[i+j+(l>>1)]=u-v;
				wk=wk*W;
			}
		}
	}
	if(flag==-1)
	{
		for(int i=0;i<Len;i++)
			Q[i]=Q[i]/Len;
	}
	return;
}

int main()
{
	cin>>N;
	for(int i=1;i<=N;i++)
		scanf("%d",&A[i]);
	X=sqrt(N)*13;
	for(int i=1;i<=N;)
	{
		Sp++;
		St[Sp]=i,En[Sp]=min(N,i+X-1);
		for(int p=St[Sp];p<=En[Sp];p++)
			belong[p]=Sp;
		i=En[Sp]+1;
	}
	for(int i=1;i<=N;i++)
		cntr[A[i]]++;
	for(int i=1;i<=Sp;i++)
	{
		for(int p=St[i];p<=En[i];p++)
			cntr[A[p]]--;
		for(int j=0;j<65536;j++)
			Q2[j]=pdd(cntl[j],0),Q3[j]=pdd(cntr[j],0);
		FFT(Q2,65536,1),FFT(Q3,65536,1);
		for(int j=0;j<65536;j++)
			Q1[j]=Q2[j]*Q3[j];
		FFT(Q1,65536,-1);
		for(int j=0;j<65536;j++)
			H[i][j]=Q1[j].re+0.5;
		for(int p=St[i];p<=En[i];p++)
			cntl[A[p]]++;
	}
	memset(cntl,0,sizeof(cntl));
	memset(cntr,0,sizeof(cntr));
	for(int i=1;i<=N;i++)
		cntr[A[i]]++;
	long long Ans=0;
	int cnt=0;
	for(int i=1;i<=N;i++)
	{
		cntr[A[i]]--;
		if(belong[i]!=cnt+1)
		{
			cnt++;
			for(int j=St[cnt];j<=En[cnt];j++)
				cntl[A[j]]++;
		}
		Ans+=H[belong[i]][A[i]*2];
		for(int j=St[belong[i]];j<i;j++)
			Ans+=cntr[A[i]*2-A[j]];
		
		for(int j=i+1;j<=En[belong[i]];j++)
			Ans+=cntl[A[i]*2-A[j]];
	}
	cout<<Ans<<endl;
	return 0;
}