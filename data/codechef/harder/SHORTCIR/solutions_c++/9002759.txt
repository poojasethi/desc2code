#include <map>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	30005
#define DB	double
#define lf	else if
#define CH	(ch=getchar())
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T,N,C,D,A[n];
DB		B[n];

map<int,int>G;

struct	Nod{DB e,p;	int	k;}S[n],F[n];

void	Pre(){
		int	ch;	N=C=D=0;	G.clear();
		for	(CH;ch!='('&&ch!=')'&&!(ch>='a'&&ch<='z');CH);
		for	(;ch!='\n';)	{
			if	(ch=='(')	A[++N]=-1,CH;
			lf	(ch==')')	A[++N]=-2,CH;
			lf	(ch>='a'&&ch<='z'){
				int	s[10];	s[*s=1]=ch;
				for	(;CH>='a'&&ch<='z';)	s[++*s]=ch;
				if	(*s==3&&s[1]=='a'&&s[2]=='n'&&s[3]=='d')	A[++N]=-3;
				lf	(*s==3&&s[1]=='n'&&s[2]=='o'&&s[3]=='t')	A[++N]=-4;
				lf	(*s==2&&s[1]=='o'&&s[2]=='r')	A[++N]=-5;
				else	{
					int	t=0;
					For(i,1,*s)	t=t*27+s[i]-'a'+1;
					A[++N]=++D;	G[t]=D;
				}
			}	else	CH;
		}

		char s[10];
		For(i,1,D)	{
			scanf("%s",s+1);
			int	l=strlen(s+1),t=0;
			For(j,1,l)	t=t*27+s[j]-'a'+1;
			scanf("%lf",&B[G[t]]);
		}
}

void	Add(Nod x){
		if	(C&&S[C].k==-4)	C--,Add((Nod){x.e,1-x.p,x.k});
			else	S[++C]=x;
}
bool	Cmp1(const Nod&a,const Nod&b)	{return	a.e*(1-b.p)<b.e*(1-a.p);}
bool	Cmp2(const Nod&a,const Nod&b)	{return	a.e*b.p<b.e*a.p;}

void	Ins(){
		int	t=0;
		for	(;C&&(S[C].k==0||S[C].k==-3);C--)
			if	(S[C].k==0)	F[++t]=S[C];
		sort(F+1,F+t+1,Cmp1);

		DB	e=0,p=1;
		For(i,1,t)	e+=p*F[i].e,p*=F[i].p;
		S[++C]=(Nod){e,p,0};
}

void	Del(){
		int	t=0;Ins();
		for	(;C&&S[C].k!=-1;C--)
			if	(S[C].k==0)	F[++t]=S[C];	C--;
		sort(F+1,F+t+1,Cmp2);

		DB	e=0,p=1;
		For(i,1,t)	e+=p*F[i].e,p*=1-F[i].p;
		Add((Nod){e,1-p,0});
}

void	Work(){
		A[0]=-1;A[N+1]=-2;
		For(i,0,N+1)	{
			if	(A[i]==-1)	S[++C]=(Nod){0,0,-1};
			lf	(A[i]==-2)	Del();
			lf	(A[i]==-3)	S[++C]=(Nod){0,0,-3};
			lf	(A[i]==-4)	S[++C]=(Nod){0,0,-4};
			lf	(A[i]==-5)	Ins(),S[++C]=(Nod){0,0,-5};
				else	Add((Nod){1,B[A[i]],0});
		}
		printf("%.6lf\n",S[1].e);
}

int		main(){
		scanf("%d",&T);
		for	(;T--;)	Pre(),Work();
}