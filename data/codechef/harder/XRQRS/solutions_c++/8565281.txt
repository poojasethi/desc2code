#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	500005
#define m	10000005
#define For(i,a,b)	for(int i=a;i<=b;i++)

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

int		N,M,D,Rt[n],ls[m],rs[m],siz[m];

void	INS(int&u,int d,int x){
		int	v=u;u=++D;siz[u]=siz[v]+1;ls[u]=ls[v];rs[u]=rs[v];
		if	(d==-1)	return;	int t=(x>>d)&1;
		if	(t)		INS(rs[u],d-1,x);
			else	INS(ls[u],d-1,x);
}

int		Query1(int v,int u,int d,int x){
		if	(d==-1)	return	0;	int t=(x>>d)&1;
		if	(t)	{
			if	(siz[ls[u]]-siz[ls[v]])	return	Query1(ls[v],ls[u],d-1,x)+(1<<d);
			return	Query1(rs[v],rs[u],d-1,x);
		}
		if	(siz[rs[u]]-siz[rs[v]])	return	Query1(rs[v],rs[u],d-1,x)+(1<<d);
		return	Query1(ls[v],ls[u],d-1,x);
}
int		Query2(int v,int u,int d,int x){
		if	(d==-1)	return	0;	int t=(x>>d)&1;
		if	(t&1)	return	siz[ls[u]]-siz[ls[v]]+Query2(rs[v],rs[u],d-1,x);
		return	Query2(ls[v],ls[u],d-1,x);
}
int		Query3(int v,int u,int d,int x){
		if	(d==-1)	return	0;	int t=siz[ls[u]]-siz[ls[v]];
		if	(x<=t)	return	Query3(ls[v],ls[u],d-1,x);
		return	Query3(rs[v],rs[u],d-1,x-t)+(1<<d);
}

int		main(){
		M=IN();
		for (;M--;)	{
			int k=IN(),l,r,x;
			if	(k==0)	x=IN(),N++,Rt[N]=Rt[N-1],INS(Rt[N],19,x);
			if	(k==1)	l=IN(),r=IN(),x=IN(),printf("%d\n",Query1(Rt[l-1],Rt[r],19,x)^x);
			if	(k==2)	x=IN(),N-=x;
			if	(k==3)	l=IN(),r=IN(),x=IN(),printf("%d\n",Query2(Rt[l-1],Rt[r],19,x+1));
			if	(k==4)	l=IN(),r=IN(),x=IN(),printf("%d\n",Query3(Rt[l-1],Rt[r],19,x));
		}
}