#include <vector>
#include <math.h>
#include <stdio.h>
using namespace std;
 
const int MAX=500000000;
const int highmax=exp(log(MAX)/3);
const int lowmax=MAX/highmax;
 
//typedef __int64 LL;
typedef long long LL;
 
vector<int> phi;
vector<LL> G_lo;
vector<LL> G_hi;
 
int main(int argc, char* argv[])
{
    int h, i, j, t, n, d;
    scanf("%d", &t);
    phi.assign(lowmax+1,0);
    G_lo.assign(lowmax+1,0);
    G_hi.assign(highmax+1,0);
    phi[1]=1;
    for(i=2;i<=lowmax;i++)
    {
        phi[i]=i;
    }
    for(i=2;i<=lowmax;i++)
    {
        if(phi[i]==i)
        {
            for(j=i;j<=lowmax;j=j+i) phi[j]-=phi[j]/i;
        }
    }
 
    G_lo[1]=1;
    for(i=2;i<=lowmax;i++)
    {
        G_lo[i]=G_lo[i-1]+phi[i];
    }
 
 
    for(h=0;h<t;h++)
    {
        scanf("%d %d", &n, &d);
        int N=n/d;
        // calculate phi(1)+phi(2)+phi(3)+...+phi(N)
        LL ans=0;
        if(N<=lowmax)
        {
            ans=G_lo[N];
        }
        else
        {
            int hmax=exp(log(N)/3);
            for(i=hmax;i>0;i--)
            {
                LL n=N/i;
                int root=sqrt(n);
                int max=hmax/i;
                LL sub=(n*(n+1))>>1;
                for(j=2;j<=max;j++)
                {
                    sub-=G_hi[i*j];
                }
                for(j=max+1;j<=root;j++)
                {
                    sub-=G_lo[n/j];
                }
                max=n/(root+1);
                LL end=n, start;
                for(j=1;j<=max;j++)
                {
                    start=n/(j+1);
                    sub-=(end-start)*G_lo[j];
                    end=start;
                }
                G_hi[i]=sub;
            }
            ans=G_hi[1];
        }
        printf("%lld\n", ans);
    }    
    return 0;
} 
