#include<vector>
#include<list>
#include<map>
#include<set>
#include<deque>
#include<queue>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<iostream>
#include<sstream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<cctype>
#include<string>
#include<cstring>
#include<cstdio>
#include<ctime>
#include<climits>
#include<complex>
#include<cassert>
#define mp make_pair
#define pb push_back
#define fi first
#define se second
#define sz(x) (int)((x).size())
#define all(x) x.begin(),x.end()
#define clr(x) memset((x),0,sizeof(x))
#define cdp(x) memset((x),-1,sizeof(x))
#define rep(i,n) for (i=0;i<n;i++)
#define Rep(i,a,b) for (i=a;i<=b;i++)
#define ff(i,x) for (i=start[x];i!=-1;i=a[i].next)
#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)
using namespace std;
const double eps=1e-8;
const double pi=acos(-1.0);
int dblcmp(double d){if (fabs(d)<eps)return 0;return d>eps?1:-1;}
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<pii> vpi;
int ac[611][27];
int end[611];
int top=0;
void init()
{
	cdp(ac);
	clr(end);
	top=0;
}
void ins(char *s)
{
	int i,l=strlen(s),t=0;
	for (i=0;i<l;i++)
	{
		if (ac[t][s[i]-'a']==-1)
		{
			ac[t][s[i]-'a']=++top;
		}
		t=ac[t][s[i]-'a'];
	}
	end[t]=1;
}
char s[333];
char dp[257][257][513];
char getdp(int l,int r,int u)
{
	if (l>r)return !u;
	if (dp[l][r][u]!=-1)return dp[l][r][u];
	int i,j,k;
	for (i=l;i<r;i++)
	{
		if (getdp(l,i,0)==1&&getdp(i+1,r,u)==1)return dp[l][r][u]=1;
	}
	//printf("%d %d\n",l,r);
		int nxt=ac[u][s[l]-'a'];
		//printf("... %d %d\n",u,nxt);
		if (nxt!=-1)
		{
			if (getdp(l+1,r,nxt)==1)return dp[l][r][u]=1;
			if (end[nxt])
			{
				if (getdp(l+1,r,0)==1)return dp[l][r][u]=1;
			}
		}
	return dp[l][r][u]=0;
}
/*
aaabc
3
abc
ac
aaa
*/	
int main()
{
	int i,j,k;
	init();
	scanf("%s",s);
	int n;
	scanf("%d",&n);
	for (i=0;i<n;i++)
	{
		char t[55];
		scanf("%s",t);
		ins(t);
	}
	cdp(dp);
	int l=strlen(s);
	int d[333]={0};
	//for (i=0;i<=top;i++)if (end[i])puts("---");
	//printf("%d\n",getdp(1,3,0,0));
	//return 0;
	for (i=0;i<l;i++)
	{
		if (getdp(0,i,0))d[i]=i+1;
		for (j=0;j<i;j++)
		{
			if (getdp(j+1,i,0))
			{
				d[i]=max(d[i],d[j]+(i-(j+1))+1);
			}
		}
		if (i)d[i]=max(d[i],d[i-1]);
	}
	
	printf("%d\n",l-d[l-1]);
	return 0;
}
/*
ababba
2
aba
bab
*/ 