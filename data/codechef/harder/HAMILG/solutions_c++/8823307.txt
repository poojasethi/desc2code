#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
using namespace std;

int T,n,m,i,j,k,u,v,ans;
int son[2005],next[2000005],ed[2000005],tot;
int mate[2005],link[2005],col[2005],fa[2005];
int vis[2005],q[2005],visT,l,r;
bool Ans[2005];

int get(int x){return fa[x]==x?x:fa[x]=get(fa[x]);}

int lca(int u,int v)
{
	for(++visT;;)
	{
		if(u)
		{
			if(vis[u=get(u)]==visT)return u;
			vis[u]=visT;u=link[mate[u]];
		}
		swap(u,v);
	}
}

void Union(int u,int v)
{
	int x,y;
	for(;u!=v;u=y)
	{
		x=mate[u];y=link[x];
		if(get(y)!=v)link[y]=x;
		if(col[x]==2)col[q[++r]=x]=1;
		if(col[y]==2)col[q[++r]=y]=1;
		fa[get(u)]=get(x);
		fa[get(x)]=get(y);;
	}
}

void find(int S)
{
	int i,u,v,c;
	for(i=1;i<=n;++i)link[i]=col[i]=0,fa[i]=i;
	for(col[q[l=r=1]=S]=1;l<=r;++l)
	{
		u=q[l];Ans[u]=true;
		for(i=son[u];i;i=next[i])
		{
			v=ed[i];
			if(v==mate[u]||col[v]==2||get(u)==get(v))continue;
			if(col[v]==1)
			{
				c=lca(u,v);
				if(get(u)!=c)link[u]=v;
				if(get(v)!=c)link[v]=u;
				Union(u,c);Union(v,c);
			}
			else
			{
				if(!mate[v])
				{
					for(;u;v=c,u=link[c])
					{
						c=mate[u];
						mate[u]=v;mate[v]=u;
					}
					return;
				}
				else
				{
					q[++r]=mate[v];
					col[mate[v]]=1;
					col[v]=2;
					link[v]=u;
				}
			}
		}
	}
}

int main()
{
	scanf("%d",&T);
	for(;T;--T)
	{
		scanf("%d%d",&n,&m);ans=tot=0;
		for(i=1;i<=n;++i)son[i]=mate[i]=0;
		for(;m;--m)
		{
			scanf("%d%d",&u,&v);
			++tot;next[tot]=son[u];son[u]=tot;ed[tot]=v;
			++tot;next[tot]=son[v];son[v]=tot;ed[tot]=u;
		}
		for(i=1;i<=n;++i)if(!mate[i])find(i);
		for(i=1;i<=n;++i)Ans[i]=false;
		for(i=1;i<=n;++i)if(!mate[i])find(i);
		for(i=1;i<=n;++i)if(Ans[i])++ans;
		printf("%d\n",ans);
	}
}