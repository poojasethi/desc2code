#include<cstdio>
#include<cassert>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
#define inf 1000000000
#define MAXV 2005
using namespace std;
int n;
struct edge{int v,next;}e[2000005];int etot=0;int g[MAXV];
void ae(int u,int v){e[etot].v=v;e[etot].next=g[u];g[u]=etot++;}
int match[MAXV],next[MAXV],mark[MAXV],fa[MAXV];
int gf(int x){return fa[x]==x?x:fa[x]=gf(fa[x]);}
void un(int x,int y){x=gf(x),y=gf(y);fa[x]=y;}
void init(){
	memset(mark,0,sizeof(mark));
	memset(fa,0,sizeof(fa));
}
int qu[100*MAXV],p,q;
int tmp[MAXV]={0};
int lca(int u,int v){
    static int ts=0;
    ts++;
    while(1){
        if(u){
            u=gf(u);
            if(tmp[u]==ts)return u;
            tmp[u]=ts;
            if(match[u])u=next[match[u]];
            else u=0;
        }
        swap(u,v);
    }
}
void link(int a,int p){
    while(a!=p){
        int b=match[a],c=next[b];
        if(gf(c)!=p)next[c]=b;    
        if(mark[b]==2)mark[qu[q++]=b]=1;
        if(mark[c]==2)mark[qu[q++]=c]=1;
        un(a,b);un(b,c);        
        a=c;
    }
}
int ban; 
int vis[2222];
void find(int rt){
    for (int i=0;i<=n;i++)next[i]=mark[i]=0,fa[i]=i;
    p=q=0;qu[q++]=rt;mark[rt]=1;
    while(p!=q){
        int u=qu[p++];
	vis[u]=1;
        for (int i=g[u];~i;i=e[i].next){
            int v=e[i].v;
	    if(v==ban)continue;
            if(gf(v)==gf(u) || mark[v]==2 || v==match[u])continue;
            if(mark[v]==1){
                int p=lca(u,v);
                if(gf(u)!=p)next[u]=v;
                if(gf(v)!=p)next[v]=u;
                link(u,p);
                link(v,p);
            }else if(!match[v]){
                next[v]=u;
                while(v){
                    u=next[v];
                    int t=match[u];
                    match[v]=u;match[u]=v;
                    v=t;
                }
                return; 
            }else{
                next[v]=u;
                mark[v]=2;
                mark[qu[q++]=match[v]]=1;
            }
        }
    }
    return;
}
 
void doit(){
	init();
	memset(vis,0,sizeof(vis));
        memset(g,-1,sizeof(g));etot=0;
    	int m;
    	scanf("%d%d",&n,&m);
        int u,v;
        while(m--){
		gn(u);gn(v);
            ae(u,v);ae(v,u);
        }
        memset(match,0,(n+2)*sizeof(int));
        memset(tmp,0,(n+2)*sizeof(int));
        for (int i=1;i<=n;i++)if(!match[i]){
		find(i);
	}
	int su=0;
	memset(vis,0,sizeof(vis));
	for (int i=1;i<=n;i++)if(!match[i])find(i);
	for (int i=1;i<=n;i++){
		if(vis[i])su++;
	}
	printf("%d\n",su);
}
 
int main(){
	int tes;scanf("%d",&tes);
	while(tes--){
		doit();
	}
	return 0;
}
