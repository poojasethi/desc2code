#include <cstdio>
using namespace std;

#define n	2005
#define m	2000005
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T,N,M,D,L,R,Q[n],F[n],st[n],Pre[n],Mat[n],Tim[n];
struct	Lin{int v,next;}E[m];
bool	V[n],vis[n];

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}
void	Link(int u,int v){
		E[++D]=(Lin){v,st[u]};	st[u]=D;
		E[++D]=(Lin){u,st[v]};	st[v]=D;
}

int		LCA(int u,int v){
		for (++*Tim;u;u=Pre[Mat[u]])	Tim[u=F[u]]=*Tim;
		for (;;v=Pre[Mat[v]])	if	(Tim[v=F[v]]==*Tim)	return	v;
}
void	Upd(int u,int w){
		for (;u!=w;)	{
			int v=Mat[u];
			Tim[F[u]]=Tim[F[v]]=*Tim;	v=Pre[v];
			if	(F[v]!=w)	Pre[v]=Mat[u];	u=v;
		}
}

void	Cir(int u,int v){
		int w=LCA(u,v);	++*Tim;
		Upd(u,w);	if	(F[u]!=w)	Pre[u]=v;
		Upd(v,w);	if	(F[v]!=w)	Pre[v]=u;
		For(i,1,N)	if	(Tim[F[i]]==*Tim)	{
			F[i]=w;
			if	(!V[i])	V[Q[++R]=i]=1;
		}
}

bool	Find(int S){
		For(i,1,N)	Pre[i]=V[i]=0,F[i]=i;	V[Q[1]=S]=1;
		for (L=0,R=1;L<R;)	{
			int u=Q[++L];	vis[u]=1;
			for (int i=st[u],v;i;i=E[i].next)
			if	(F[v=E[i].v]!=F[u]&&Mat[u]!=v)
			if	(v==S||Mat[v]&&Pre[Mat[v]])	Cir(u,v);
			else	if	(!Pre[v]){
				Pre[v]=u;
				if	(Mat[v]){
					if	(!V[Mat[v]])	V[Q[++R]=Mat[v]]=1;
				}	else	{
					for (u=v;u;){
						v=Pre[u];	int w=Mat[v];
						Mat[u]=v;	Mat[v]=u;	u=w;
					}	return	1;
				}
			}
		}	return	0;
}

int		main(){
		for (T=IN();T--;)	{
			N=IN();	M=IN();
			For(i,1,N)	st[i]=Mat[i]=0;
			For(i,1,M)	Link(IN(),IN());
			For(i,1,N)	if	(!Mat[i])	Find(i);

			int Ans=0;
			For(i,1,N)	vis[i]=0;
			For(i,1,N)	if	(!Mat[i])	Find(i);
			For(i,1,N)	Ans+=vis[i];
			printf("%d\n",Ans);
		}
}