#include <cstdio>
using namespace std;

#define n	2005
#define m	2000005
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		T,N,M,C,D,st[n];
int		L,R,Q[n],V[n],Tim[n];
int		F[n],pre[n],vis[n],match[n];

struct	Lin{int v,next;}E[m];
void	Link(int u,int v){
		E[++D]=(Lin){v,st[u]};	st[u]=D;
		E[++D]=(Lin){u,st[v]};	st[v]=D;
}

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

int		LCA(int u,int v){
		for (++C;u;)	u=F[u],Tim[u]=C,u=pre[match[u]];
		for (;;v=pre[match[v]])
			if	(Tim[v=F[v]]==C)	return	v;
}
void	reset(int u,int w){
		for (;u!=w;){
			int v=match[u];
			Tim[F[u]]=Tim[F[v]]=C;	v=pre[v];
			if	(F[v]!=w)	pre[v]=match[u];	u=v;
		}
}
void	Work(int u,int v){
		int w=LCA(u,v);	++C;
		reset(u,w);	reset(v,w);
		if	(F[u]!=w)	pre[u]=v;
		if	(F[v]!=w)	pre[v]=u;
		For(i,1,N)	if	(Tim[F[i]]==C){
			F[i]=w;
			if	(!V[i])	V[Q[++R]=i]=1;
		}
}

bool	BFS(int S)	{
		For(i,0,N)	V[i]=0,pre[i]=0,F[i]=i;	V[Q[1]=S]=1;
		for (L=0,R=1;L<R;)	{
			int u=Q[++L];	vis[u]=1;
			for (int i=st[u],v;i;i=E[i].next)
			if	(F[v=E[i].v]!=F[u]&&match[u]!=v){
				if	(v==S||(match[v]&&pre[match[v]]))	Work(u,v);
				else	if	(!pre[v]){
					pre[v]=u;
					if	(match[v])	{
						if	(!V[match[v]])	V[Q[++R]=match[v]]=1;
					}	else	{
						for (u=v;u;){
							v=pre[u];	int w=match[v];
							match[u]=v;	match[v]=u;	u=w;
						}	return	1;
					}
				}
			}
		}	return	0;
}

int		main(){
		for (T=IN();T--;)	{
			N=IN();	M=IN();	D=0;
			For(i,0,N)	st[i]=match[i]=0;
			For(i,1,M)	Link(IN(),IN());
			For(i,1,N)	if	(!match[i])	BFS(i);

			int Ans=0;
			For(i,0,N)	vis[i]=0;
			For(i,1,N)	if	(!match[i])	BFS(i);
			For(i,1,N)	if	(vis[i])	Ans++;
			printf("%d\n",Ans);
		}
}