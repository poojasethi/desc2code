#include <bits/stdc++.h>
using namespace std;

template<class T>inline void Read(T &x)
{
    int f = 1;
    char t = getchar();
    while (t < '0' || t > '9') {
        if (t == '-') f = -1;
        t = getchar();
    }
    x = 0;
    while (t >= '0' && t <= '9') {
        x = x * 10 + t - '0';
        t = getchar();
    }
    x *= f;
}

template<class T>inline void chkmin(T &x, T y) { if (x > y) x = y; }
template<class T>inline void chkmax(T &x, T y) { if (x < y) x = y; }

const int maxn = 100006;
const long long inf = 1e16;

int n;
int q;
int a[maxn];

long long ind[maxn];
long long rep;

void input()
{
    Read(n);
    Read(q);
    a[n] = 0;
    for (int i = 0; i < n; i++) {
        Read(a[i]);
        if (a[i] + i >= n) a[n] ++;
    }
    rep = 1ll * n * (n + 1);
}

void solve()
{
    static stack<int> st;
    for (int i = 0; i <= n; i++) ind[i] = inf;
    while (st.size()) st.pop();
    for (int i = 0; i < n * 2; i++) {
        int cur = a[i % n];
        if (cur == n + 1) {
            st.push(i);
        } else if (cur == n - 1 && st.size()){
            int to = st.top();
            st.pop();
            ind[to % n] = ind[i % n] = (1ll * i * (n + 1) % rep - 1ll * to * n % rep + rep) % rep; 
        }
    }
    long long x;
    int ans;
    for (int i = 1; i <= q; i++) {
        Read(x);
        ans = n;
        if (a[x % n] == n - 1 && x < ind[x % n]) ans --;
        if (a[x % (n + 1)] == n + 1 && x < ind[x % (n + 1)]) ans ++;
        printf("%d ", ans);
    }
    printf("\n");
}

int main()
{
#ifndef ONLINE_JUDGE
    freopen("dp.in", "r", stdin);
    freopen("dp.out", "w", stdout);
#endif

    int T;
    Read(T);
    while (T --) {
        input();
        solve();
    }

#ifndef ONLINE_JUDGE
    fclose(stdin);
    fclose(stdout);
#endif
    return 0;
}
