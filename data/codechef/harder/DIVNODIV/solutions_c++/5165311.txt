#include <stdio.h>
#include <math.h>
#include <stdlib.h>
 
typedef long long LL;
 
LL MOD(LL a,LL b,LL c)// a*b%c
{
	int x[66];
	int n=0;
	for(;a;a/=2) x[n++]=a%2;
	LL ans=0;
	for(;n--;)
		ans=(2*ans+x[n]*b)%c;
	return ans;
}
 
LL powmod(LL a,LL n,LL mod)
{
	LL p=1;
	for(;;)
	{
		if(n%2) p=MOD(p,a,mod);
		n/=2;
		if(!n) break;
		a=MOD(a,a,mod);
	}
	return p;
}
 
bool witness(LL a,LL n)
{
	LL m,x,y;
	for(m=n-1;m%2==0;m/=2);
	x=powmod(a,m,n);
	for(;m<n-1;m*=2)
	{
		y=MOD(x,x,n);
		if(y==1 && 1<x && x<n-1) return false;
		x=y;
	}
	return x==1;
}
 
LL RAND()
{
	LL a=0;
	for(int i=0;i<4;i++)
		a=(a<<15)+(rand() & ((1<<15) - 1));
	return a;
}
 
bool prob_prime(LL n)
{
	if(n%2==0) return n==2;
	if(n%3==0) return n==3;
	if(n%5==0) return n==5;
	int s;
	for(s=0;s<10;s++)
	{
		LL a=RAND()%(n-3)+2;
		if(!witness(a,n)) return false;
	}
	return true;
}
 
const int N=1000000;
int a[N];
int p[88888];
int plen=0;
LL fact[20]={1};
 
void precalc()
{
	int i,j;
	for(i=1;i<20;i++)
		fact[i]=i*fact[i-1];
	for(i=2;(j=i*i)<N;i++) if(!a[i])
		for(;j<N;j+=i) a[j]=1;
	for(i=2;i<N;i++) if(!a[i])
		p[plen++]=i;
}
 
LL f(LL n)
{
	if(n==4) return 1;
	int num=0;
	for(int i=0;i<plen;i++)
	{
		LL q=p[i];
		if(q*q*q>n) break;
		if(n%q) continue;
		int k=0;
		for(;n%q==0;n/=q)
			k++;
		if(k>1) return -1;
		num++;
	}
	if(n>1) 
	{
		LL sqn=sqrt(double(n))+1e-9;
		if(sqn*sqn==n) return -1;
		if(prob_prime(n))
			num++;
		else
			num+=2;
	}
	return fact[num];
}
 
int main()
{
	precalc();
	int TST;
	scanf("%d",&TST);
	for(int tst=0;tst<TST;tst++)
	{
		LL n;
		scanf("%lld",&n);
		LL res=f(n);
		printf("%lld\n",res);
	}
	return 0;
}
 