#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<deque>
#include<climits>
#define inf 1e9
#define Maxn 260
#define Maxm 30010
using namespace std;
struct node
{
  int x,y,next,d,c;
}edge[Maxm*10]; int len,first[Maxn*2];
void ins(const int &x,const int &y,const int &c,const int &d)
{
  len++; int k1=len; edge[len].x=x; edge[len].y=y; edge[len].d=d; edge[len].c=c; edge[len].next=first[x]; first[x]=len;
  len++; int k2=len; edge[len].x=y; edge[len].y=x; edge[len].d=-d; edge[len].c=0; edge[len].next=first[y]; first[y]=len;
}
int pre[Maxn*2],dis[Maxn*2]; bool v[Maxn*2];
int Q[Maxn*100]; int head,tail;
int ST,ED; int N,M,K;
bool bfs()
{
  for(int i=ST;i<=ED;i++)
  {
	v[i]=0; dis[i]=inf; pre[i]=-1;
  }
  head=Maxn*50; tail=Maxn*50+1;
  v[ST]=1; dis[ST]=0; Q[head]=ST;
  while(head<=tail)
  {
	int x=Q[head]; head++; v[x]=false;
	for(int k=first[x];k!=-1;k=edge[k].next)
	{
	  int y=edge[k].y;
	  if(dis[y]>dis[x]+edge[k].d&&edge[k].c)
	  {
		dis[y]=dis[x]+edge[k].d;
		pre[y]=k;
		if(!v[y])
		{
		  v[y]=true;
		  if(dis[y]<dis[x]){head--; Q[head]=y;}
		  else {Q[tail]=y; tail++;}
		}
	  }
	}
  }
  return dis[ED]<inf;
}
int A[Maxn*2],_; int F[Maxn][Maxn]; int sum[Maxn*2];
void dfs()
{
  _=0;
  while(bfs())
  {
	int delta=0; int Minx=INT_MAX;
	for(int k=pre[ED];k!=-1;k=pre[edge[k].x]) Minx=min(Minx,edge[k].c);
    for(int k=pre[ED];k!=-1;k=pre[edge[k].x])
	{
	  edge[k].c-=Minx; edge[k^1].c+=Minx; delta+=edge[k].d;
	}
	A[++_]=delta; sum[_]=sum[_-1]+A[_];
  }
}
int main()
{
  scanf("%d%d%d",&N,&M,&K);
  len=-1; ST=0; ED=(N<<1)+2; for(int i=ST;i<=ED;i++) first[i]=-1;
  for(int i=1;i<=N;i++) ins(ST,(i<<1),1,0);
  for(int i=1;i<=N;i++)
	for(int j=1;j<=N;j++)
	{
      if(i==j) F[i][j]=0;
	  else F[i][j]=inf;
	}
  int x,y,d;
  for(int i=1;i<=M;i++)
  {
	scanf("%d%d%d",&x,&y,&d);
	if(d<F[x][y]) F[x][y]=d;
  }
  for(int k=1;k<=N;k++)
	for(int i=1;i<=N;i++)
	    for(int j=1;j<=N;j++)
		     if(F[i][j]>F[i][k]+F[k][j]) F[i][j]=F[i][k]+F[k][j];
  for(int i=1;i<=N;i++)
	for(int j=1;j<=N;j++)
	  if(F[i][j]<inf&&i!=j)
		ins(i<<1,(j<<1)+1,1,F[i][j]);
  for(int i=1;i<=N;i++) ins((i<<1)+1,ED,1,0);
  dfs();
  for(int i=1;i<=K;i++)
  {
	int x;
	scanf("%d",&x);
	int L=1; int R=_; int ret=0;
    while(L<=R)
    {
	  int mid=(L+R)>>1;
      if(A[mid]<x){L=mid+1; ret=mid;}
	  else if(A[mid]==x) {ret=mid; break;}
	  else R=mid-1;
    }
	printf("%d\n",(N-ret)*x+sum[ret]);
  }
  return 0;
}
/*
6 5 3
1 3 2
2 3 2
3 4 2
4 5 2
4 6 2
1
5
10
*/