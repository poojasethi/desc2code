#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
const db pi=acos(-1.0);
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
const int inf=1061109567;
//const ll inf=1000000000000000000ll;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
int dx[4]={1,0,-1,0};
int dy[4]={0,1,0,-1};
#define x1 x192837465
#define x2 x123456789
#define y1 y192837465
#define y2 y123456789


////////////////////////////////////
typedef int nu;
typedef ll nc;
const nu infu=1000000000;
const nc infc=10000000000000000ll;
const int MAXV=1111+5;
const int MAXE=177777+5;
////////////////////////////////////
struct edge{int v,next;nu f;nc c;}e[MAXE*2];int g[MAXV],etot;
void ae(int u,int v,nu f,nc c){
	e[etot].v=v;e[etot].f=f;e[etot].c=c;e[etot].next=g[u];g[u]=etot++;
	e[etot].v=u;e[etot].f=0;e[etot].c=-c;e[etot].next=g[v];g[v]=etot++;
}
int s,t;
int qu[MAXV],p,q,inq[MAXV]={0},ine[MAXV];
nc dis[MAXV];
nu mi[MAXV];
int spfa(){
	p=q=0;qu[q++]=s;inq[s]=1;
	for (int i=1;i<=t;i++)dis[i]=infc;
	dis[s]=0;mi[s]=infu;
	while(p!=q){
		int u=qu[p++];if(p==MAXV)p=0;
		if(dis[u]>dis[qu[(q+MAXV-1)%MAXV]])swap(u,qu[(q+MAXV-1)%MAXV]);
		inq[u]=0;
		for (int i=g[u];~i;i=e[i].next)if(e[i].f){
			int v=e[i].v;
			if(dis[u]+e[i].c<dis[v]){
				dis[v]=dis[u]+e[i].c;
				mi[v]=min(mi[u],e[i].f);
				ine[v]=i;
				if(!inq[v]){
					inq[v]=1;
					qu[q++]=v;
					if(q==MAXV)q=0;
				}
			}
		}
	}
	return dis[t]<infc;
}


ll f[255];
int n;
nc costflow(){
	nc cost=0;
	int las=1;
	for (int i=1;i<=n;i++){
		if(las && spfa()){
			nu del=mi[t];
			cost+=del*dis[t];
			int u=t;
			while(u!=s){
				e[ine[u]].f-=del;
				e[ine[u]^1].f+=del;
				u=e[ine[u]^1].v;
			}
			f[i]=cost;
		}else f[i]=infc,las=0;
	}
	return cost;
}
void init(){
	memset(g,-1,sizeof(g));
	etot=0;
}

int d[255][255];
int main()
{
	init();
	int m,k;
	gn(n);gn(m);gn(k);
	memset(d,63,sizeof(d));
	while(m--){
		int s,t,v;
		gn(s);gn(t);gn(v);
		d[s][t]=min(d[s][t],v);
	}
	for (int k=1;k<=n;k++)
		for (int i=1;i<=n;i++)
			for (int j=1;j<=n;j++)d[i][j]=min(d[i][j],d[i][k]+d[k][j]);
	s=2*n+1,t=s+1;
	for (int i=1;i<=n;i++)
		for (int j=1;j<=n;j++)if(d[i][j]<inf)ae(i,j+n,1,d[i][j]);
	for (int i=1;i<=n;i++)
		ae(s,i,1,0),ae(i+n,t,1,0);
	costflow();

	while(k--){
		int c;
		gn(c);
		int x=inf;
		for (int i=0;i<=n;i++)if(f[i]<infc){
			x=min(1ll*x,c*(n-i)+f[i]);
		}
		printf("%d\n",x);
	}
	return 0;
}
