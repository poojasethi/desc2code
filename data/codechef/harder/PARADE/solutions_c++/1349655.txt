#include<cstdio>
#include<cstring>
const int node=505;
const int edge=502005;
int N,M,K,i,j,k,S,T,V,l,r,mid,St,Ed,x,e,Num;
int dis[255][255],D[255],Sum[255];
int son[node],f[node],d[node],pre[node],road[node];
int ed[edge],flow[edge],cost[edge],next[edge];
int Q[10000005];
void Addedge(int i,int j,int k,int l)
{
	ed[++e]=j,flow[e]=k,cost[e]=l,next[e]=son[i],son[i]=e;
	ed[++e]=i,flow[e]=0,cost[e]=-l,next[e]=son[j],son[j]=e;
}
bool spfa()
{
	int i,j,k,l,r;
	memset(d,127,sizeof(d));
	memset(f,0,sizeof(f));
	d[St]=0,f[St]=1,Q[1]=St;
	for(l=0,r=1;l<r;)
	{
		i=Q[++l],f[i]=0;
		if(d[i]>=d[Ed]) continue;
		for(j=son[i];j;j=next[j])
			if(flow[j]>0)
			{
				k=ed[j];
				if(d[k]>d[i]+cost[j])
				{
					d[k]=d[i]+cost[j],road[k]=j,pre[k]=i;
					if(!f[k]) f[k]=1,Q[++r]=k;
				}
			}
	}
	if(d[Ed]>1000000000) return 0;
	D[++Num]=d[Ed];
	return 1;
}
void back()
{
	int i;
	for(i=Ed;i!=St;i=pre[i])
		--flow[road[i]],++flow[road[i]^1];
}
int main()
{
    scanf("%d%d%d",&N,&M,&K);
    memset(dis,6,sizeof(dis));
    for(i=1;i<=M;++i)
    {
		scanf("%d%d%d",&S,&T,&V);
		if(V<dis[S][T]) dis[S][T]=V;
	}
    for(k=1;k<=N;++k)
    	for(i=1;i<=N;++i)
    		for(j=1;j<=N;++j)
    			if(dis[i][j]>dis[i][k]+dis[k][j])
    				dis[i][j]=dis[i][k]+dis[k][j];
    St=0,Ed=2*N+1,e=1;
    for(i=1;i<=N;++i) Addedge(St,i,1,0);
    for(i=1;i<=N;++i) Addedge(i+N,Ed,1,0);
    for(i=1;i<=N;++i)
    	for(j=1;j<=N;++j)
    		Addedge(i,j+N,1,dis[i][j]);
    for(;spfa();) back();
    for(i=1;i<=N;++i) Sum[i]=Sum[i-1]+D[i];
    for(;K--;)
    {
		scanf("%d",&x);
		if(D[N]<=x)
		{
			printf("%d\n",Sum[N]);
			continue;
		}
		for(l=1,r=N;l<r;)
		{
			mid=(l+r)/2;
			if(D[mid]>x) r=mid;
			else l=mid+1;
		}
		mid=(l+r)/2;
		printf("%d\n",Sum[mid-1]+(N-mid+1)*x);
	}
    return 0;
}
