#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define	n	505
#define INF	(1<<30)
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,M,K,G[n],A[n][n];

namespace	Cost{
		int		D=1,S,T,st[n],Dis[n],pre[n],Q[n*n*10];
		struct	Lin{int v,c,f,next;}E[n*n];
		bool	V[n];

		void	Link(int u,int v,int c,int f){
			E[++D]=(Lin){v,c,f,st[u]};	st[u]=D;
			E[++D]=(Lin){u,-c,0,st[v]};	st[v]=D;
		}
		bool	SPFA(){
			For(i,1,T)	Dis[i]=INF;	Dis[Q[1]=S]=0;
			for	(int l=0,r=1;l<r;){
				int	u=Q[++l];	V[u]=0;
				for	(int i=st[u],v;i;i=E[i].next)
				if	(E[i].f&&Dis[u]+E[i].c<Dis[v=E[i].v]){
					Dis[v]=Dis[u]+E[i].c;	pre[v]=i;
					if	(Dis[v]<Dis[T]&&!V[v])	V[Q[++r]=v]=1;
				}
			}	return	Dis[T]!=INF;
		}
		int		Upd(){
			for	(int x=T;x!=S;x=E[pre[x]^1].v)	E[pre[x]].f--,E[pre[x]^1].f++;
			return	Dis[T];
		}

		void	Main()	{
			S=2*N+1;	T=S+1;
			For(i,1,N)	Link(S,i,0,1),Link(N+i,T,0,1);
			For(i,1,N)	For(j,1,N)	Link(i,N+j,A[i][j],1);
			for	(;SPFA();)	G[++*G]=Upd();
			For(i,2,N)	G[i]+=G[i-1];
		}
};

int		main(){
		scanf("%d%d%d",&N,&M,&K);
		For(i,1,N)	For(j,1,N)	A[i][j]=10000;
		for	(int i=1,u,v,c;i<=M;i++)
			scanf("%d%d%d",&u,&v,&c),A[u][v]=min(A[u][v],c);
		For(k,1,N)	For(i,1,N)	For(j,1,N)
			A[i][j]=min(A[i][j],A[i][k]+A[k][j]);
		Cost::Main();
		for	(int C;K--;){
			scanf("%d",&C);	int Ans=N*C;
			For(i,1,N)	Ans=min(Ans,G[i]+(N-i)*C);
			printf("%d\n",Ans);
		}
}