#include<cstdio>
#include<map>
#include<algorithm>
#include<vector>
#define ll long long
using namespace std;
int n;
int mn=200002;
struct pt{
	ll x,y;
};
vector<pt> pts(mn);
ll ans;
bool hor;
bool operator < (pt p1,pt p2)
{
	if(p1.y-p1.x != p2.y-p2.x)return p1.y-p1.x > p2.y-p2.x;
	if(hor)return p1.x < p2.x;
	return p1.x > p2.x;
}
vector<ll> bit1(mn);
vector<ll> bit2(mn);
void add1(int i,ll x)
{
	if(i<mn)
	{
		bit1[i]+=x;
		i+=(i&(-i));
		add1(i,x);
	}
}
void add2(int i,ll x)
{
	if(i<mn)
	{
		bit2[i]+=x;
		i+=(i&(-i));
		add2(i,x);
	}
}
ll fnd1(int i)
{
	if(i<=0)return 0;
	ll ans=bit1[i];
	i-=(i&(-i));
	return ans+fnd1(i);
}
ll fnd2(int i)
{
	if(i<=0)return 0;
	ll ans=bit2[i];
	i-=(i&(-i));
	return ans+fnd2(i);
}
struct ipt{
	int i;
	ll x,y;
};
bool operator < (ipt p1,ipt p2)
{
	return p1.y+p1.x < p2.x+p2.y;
}
vector<ipt> an(mn);
void doonce()
{
	sort(pts.begin(),pts.begin()+n);
	map<int,int> mmap;
	for(int i=0;i<n;++i)
	{
		an[i].x=pts[i].x;
		an[i].y=pts[i].y;
		an[i].i=i;
	}
	sort(an.begin(),an.begin()+n);
	int cnt=1;
	mmap[an[0].i]=1;
	for(int i=1;i<n;++i)
	{
		if(an[i].x+an[i].y != an[i-1].x+an[i-1].y)cnt++;
		mmap[an[i].i]=cnt;
	}
	for(int i=0;i<n;++i)
	{
		if(hor)
		{
			ll a=fnd1(n)-fnd1(mmap[i]);
			ll b=fnd2(n)-fnd2(mmap[i]);
			ans+=a;
			ans-=b*pts[i].y;
		}
		else
		{
			//Find sum of y coordinates of pts >=mmap[i]
			ll a=fnd1(n)-fnd1(mmap[i]-1);
			ll b=fnd2(n)-fnd2(mmap[i]-1);
			ans+=a;
			ans-=b*pts[i].y;
		}
		//Add i to DS
		add1(mmap[i],pts[i].y);
		add2(mmap[i],1);
	}
}
void doit()
{
	ans=0;
	hor=0;
	scanf("%d",&n);
	ll a,b;
	scanf("%lld%lld",&a,&b);
	for(int i=0;i<n;++i)
	{
		scanf("%lld%lld",&pts[i].x,&pts[i].y);
		pts[i].x*=a;
		pts[i].y*=b;
	}
	for(int i=0;i<n+1;++i){bit1[i]=0;bit2[i]=0;}
	doonce();
	for(int i=0;i<n;++i)
	{
		ll q=pts[i].y;
		pts[i].y=pts[i].x;
		pts[i].x=-q;
	}
	hor=1;
	for(int i=0;i<n+1;++i){bit1[i]=0;bit2[i]=0;}
	doonce();
	for(int i=0;i<n;++i)
	{
		ll q=pts[i].y;
		pts[i].y=pts[i].x;
		pts[i].x=-q;
	}
	hor=0;
	for(int i=0;i<n+1;++i){bit1[i]=0;bit2[i]=0;}
	doonce();
	for(int i=0;i<n;++i)
	{
		ll q=pts[i].y;
		pts[i].y=pts[i].x;
		pts[i].x=-q;
	}
	hor=1;
	for(int i=0;i<n+1;++i){bit1[i]=0;bit2[i]=0;}
	doonce();
	printf("%lld\n",ans/2);
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		doit();
	}
	return 0;
}
