#include<iostream>
#include<cstring>
#include<stdio.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<assert.h>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<ll,ll>
#define INF 2000000000
#define ULL unsigned long long
using namespace std;
const int N=100005;
int n,m,i,j,x,y,cnt[N],cur,u,h[N],ele;
bool f[N];
vector<int> g[N];
ll ans,sum;
ULL e,R[N];

ULL ran(){
   return (((ULL)rand()<<48)|((ULL)rand()<<32)|((ULL)rand()<<16)|(ULL)rand());
}

void go(int u,int p){
     int i,to;
     f[u]=1;
     h[u]=h[p]+1;

     for(i=0;i<g[u].size();i++){
        to=g[u][i];
        if(to==p)continue;
        if(f[to]){
           if(h[to]<h[u]){
             cnt[u]++;
             cnt[to]--;
             e=ran();
             R[u]^=e;
             R[to]^=e;
           }
           continue;
        }
        go(to,u);
        cnt[u]+=cnt[to];
        R[u]^=R[to];
     }
}

int main()
{scanf("%d%d",&n,&m);
 for(i=1;i<=m;i++){
    scanf("%d%d",&x,&y);
    g[x].pb(y);
    g[y].pb(x);
 }
 u=m-(n-1);
 if(u<0)assert(0);
 ans+=(ll)u*(u-1)/2;

 go(1,0);
 for(i=1;i<=n;i++)
 if(!f[i]){
    cout<<(ll)m*(m-1)/2<<endl;return 0;
 }

 for(i=1;i<=n;i++)
    if(cnt[i]==1)ans+=(u-1);else
    if(cnt[i]>1)ans+=u;
 sort(R+1,R+n+1);

 cur=0;
 for(i=2;i<=n;i++)if(R[i]==0)ele++;
 for(i=2;i<=n;i++){
    if(R[i]==0)continue;
    if(R[i]!=R[i-1]){

       sum+=(ll)(n-1-ele-cur)*cur;
       cur=1;
    }else cur++;
 }

 sum+=(ll)(n-1-ele-cur)*cur;
 ans+=sum/2;
 ans=(ll)m*(m-1)/2-ans;
 printf("%lld\n",ans);
}
