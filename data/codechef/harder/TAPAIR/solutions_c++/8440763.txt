#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

#define le 60 
const ll mask=(1ll<<le)-1;
ll f[500005];
struct edge{int v,next;}e[1000005];int etot=0;int g[100005];
void ae(int u,int v){e[etot].v=v;e[etot].next=g[u];g[u]=etot++;}
int n,m;
int vis[100005]={0},prei[100005];
ll del[100005]={0},cur[100005]={0};
ll gr(){return mask&(1ll*rand()<<32|rand());}

int stk[111111],cg[111111],top=0;
void dfs(int u,int prei=-1){
	vis[u]=1;
	for (int i=g[u];~i;i=e[i].next)if((i^1)!=prei){
		if(!vis[e[i].v]){
			dfs(e[i].v,i);
			cur[u]^=del[u];del[u]=0;
		}else if(vis[e[i].v]==1){
			f[i>>1]=gr();
			cur[u]^=f[i>>1];
			del[e[i].v]^=f[i>>1];
		}
	}
	if(~prei){f[prei>>1]=cur[u];
		cur[e[prei^1].v]^=cur[u];
	}
	vis[u]=2;
}
/*int prev[111111];
void dfs(int rt){
	stk[++top]=rt;cg[top]=g[rt];prei[top]=prev[top]=-1;
	while(top){
		int u=stk[top];
		if(cg[top]==g[u]){
			vis[u]=1;
		}
		int i=cg[top];
		if(i==-1){
			if(~prev[top]){
				f[prei[top]>>1]=cur[u];
				cur[e[prei[top]^1].v]^=cur[u];
				cur[prev[top]]^=del[prev[top]],del[prev[top]]=0;
			}
			vis[u]=2;
			top--;
		}else{
			cg[top]=e[i].next;
			if((i^1)==prei[top])continue;
			if(!vis[e[i].v]){
				stk[++top]=e[i].v;
				prei[top]=i;
				prev[top]=u;
				cg[top]=g[e[i].v];
				//printf("%d %d,\n",u,e[i].v); 
			}else if (vis[e[i].v]==1){
				f[i>>1]=gr();
				cur[u]^=f[i>>1];
				del[e[i].v]^=f[i>>1];
			}
		}
	}
}*/

int main()
{
	memset(g,-1,sizeof(g));
	scanf("%d%d",&n,&m);
	for (int i=0;i<m;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		ae(x,y);ae(y,x);
	}
	dfs(1);
	sort(f,f+m);
	ll su=0;
	for (int i=0;i<m;i++)if(i==0  || f[i]!=f[i-1]){
		int j=i;
		for (;j<m && f[j]==f[i];j++);
		int cn=j-i;
		if(f[i]==0){
			su+=1ll*cn*(m-cn);
			su+=1ll*cn*(cn-1)/2;
		}else{
			su+=1ll*cn*(cn-1)/2;
		}
	}
	cout<<su<<endl;
	return 0;
}
