#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>
#include <map>
#include <ctime>
#include <cstdlib>
using namespace std;
#define N 300050
#define M 300050
#define ull unsigned long long
ull ad[N],val[N],ans;
int fi[N],c[N*2][2],ln[M][2],rf[N],fa[N],_Cnt,ss=1,n,m;
map <ull,int> li;
inline int Read()
 {
 	int x=0;char y;
 	do y=getchar(); while (y<'0'||y>'9');
 	do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
 	return x;
 }
int Find(int x) {return rf[x]==x?x:(rf[x]=Find(rf[x]));}
inline void Line(int x,int y)
 {
 	c[++ss][0]=y;c[ss][1]=fi[x];fi[x]=ss;
 	c[++ss][0]=x;c[ss][1]=fi[y];fi[y]=ss;
 	return;
 }
inline ull GetNew()
 {
 	return (1uLL*rand()*rand()+10084852983uLL*rand()+998244353);
 }
void DFS(int x,int y)
 {
 	for (int i=fi[x];i;i=c[i][1])
 	 if (c[i][0]!=y)
 	   DFS(c[i][0],x),ad[x]^=ad[c[i][0]];
 	if (x!=1) if (ad[x])
 	  ans+=li[ad[x]],li[ad[x]]++; else _Cnt++,ans+=m-_Cnt;
 	return;
 }
int main()
 {
 	n=Read();m=Read();srand(time(NULL));
 	for (int i=1;i<=m;i++) ln[i][0]=Read(),ln[i][1]=Read();
 	for (int i=1;i<=n;i++) rf[i]=i;
 	for (int i=1;i<=m;i++)
 	 {
 	 	int k=Find(ln[i][0]),l=Find(ln[i][1]);
 	 	if (k!=l)
 	 	  rf[k]=l,Line(ln[i][0],ln[i][1]); else
 	 	  val[i] = GetNew();
 	 	ad[ln[i][0]]^=val[i];
 	 	ad[ln[i][1]]^=val[i];
 	 	if (val[i]) li[val[i]]++;
 	 }
 	int Cnt=false;
 	DFS(1,0);cout <<ans<<endl;
 	return 0;
 }