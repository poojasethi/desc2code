#include <map>
#include <ctime>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
using namespace std;

#define n	300005
#define I64	long long
#define u64	unsigned long long
#define For(i,a,b)	for(int i=a;i<=b;i++)

#define CH	(ch=getchar())
int		IN(){
		int x=0,ch;
		for	(;CH<'0'||ch>'9';);
		for	(;ch>='0'&&ch<='9';CH)	(x*=10)+=ch-'0';
		return	x;
}

I64		Ans;
u64		A[n],B[n];
int		N,M,D,V[n],X[n],Y[n],st[n],vis[n];
struct	Lin{int v,next;}E[n<<1];

#define Map	map<u64,int>
Map		G;

void	Link(int u,int v){
		E[++D]=(Lin){v,st[u]};	st[u]=D;
		E[++D]=(Lin){u,st[v]};	st[v]=D;
}
void	DFS1(int u){
		vis[u]=1;
		for	(int i=st[u],v;i;i=E[i].next)
			if	(!vis[v=E[i].v])	DFS1(v),V[i>>1]=1;
}
void	DFS2(int u){
		vis[u]=1;
		for	(int i=st[u],v;i;i=E[i].next)
			if	(!vis[v=E[i].v])	DFS2(v),A[i>>1]=B[v],B[u]^=B[v];
}

int		main(){
		srand(time(0));

		N=IN();	M=IN();	D=1;
		For(i,1,M)	Link(X[i]=IN(),Y[i]=IN());	DFS1(1);
		For(i,1,M)	if	(!V[i])	A[i]=1ll*rand()*rand()*rand()*rand(),B[X[i]]^=A[i],B[Y[i]]^=A[i];
		For(i,1,N)	vis[i]=0;	DFS2(1);

		For(i,1,M)	G[A[i]]++;
		for	(Map::iterator t=G.begin();t!=G.end();t++)
		if	(t->first)	Ans+=1ll*(t->second)*(t->second-1)/2;
			else	Ans+=1ll*(t->second)*(M-1)-1ll*(t->second)*(t->second-1)/2;
		printf("%lld\n",Ans);
}