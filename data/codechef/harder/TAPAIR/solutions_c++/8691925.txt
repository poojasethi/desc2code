#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <map>
using namespace std;

int son[600005],next[600005],ed[600005],tot;
bool vis[600005],use[600005];
int deep[600005],fa[600005],link[600005],q[600005],qt;
int a[600005],b[600005];
unsigned long long mark[600005],sum[600005],ans;
int n,m,i,j,k,u,v,Q,p[6];

map <unsigned long long,int> H;

void dfs(int now)
{
	q[++qt]=now;
	vis[now]=true;
	for(int i=son[now];i;i=next[i])
	if(!vis[ed[i]])
	{
		fa[ed[i]]=now;
		link[ed[i]]=i/2;
		use[i/2]=true;
		deep[ed[i]]=deep[now]+1;
		dfs(ed[i]);
	}
}

int main()
{
	scanf("%d%d",&n,&m);
	tot=1;
	for(i=1;i<=m;++i)
	{
		scanf("%d%d",&u,&v);
		a[i]=u;b[i]=v;
		++tot;next[tot]=son[u];son[u]=tot;ed[tot]=v;
		++tot;next[tot]=son[v];son[v]=tot;ed[tot]=u;
	}
	dfs(1);
	for(i=1;i<=m;++i)
	if(!use[i])
	{
		mark[i]=(((unsigned long long)rand())<<31)+rand();
		sum[a[i]]^=mark[i];
		sum[b[i]]^=mark[i];
	}
	for(i=n;i>1;--i)
	{
		j=q[i];
		sum[fa[j]]^=sum[j];
		mark[link[j]]=sum[j];
	}
	for(i=1;i<=m;++i)
	{
		if(mark[i])ans+=H[mark[i]];
		++H[mark[i]];
	}
	k=H[0];
	ans+=(long long)k*m-(long long)k*(k+1)/2;
	printf("%lld\n",ans);
}