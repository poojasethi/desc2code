#include<cstdio>
#include<cmath>
inline int I(int &a) {
 register int c; a=0; do c=getchar_unlocked(); while(c<'0');
 do {  a=(a<<1)+(a<<3)+c-'0';  c=getchar_unlocked(); }while(c >= '0');}
class Reaction { public:
void read() { I(a); I(b); scanf("%lf",&ratio); I(t); }
double ratio; int a, b, t; };
double t0[100][200], t1[100][100], s0[100], s1[100][2], sum[100], rem[100];
void computeS0(int n) {
for (int i = 0; i < n; i++) t0[i][i] = 1.0-t0[i][i], t0[i][i+n] = 1.0;
for (int y = 0; y < n; y++) for (int x = 0; x < n; x++) if (y != x)
t0[y][x] = -t0[y][x]; int n2 = n*2;
for (int y = 0; y < n; y++) { int y2 = y;
while (y2 < n && fabs(t0[y2][y]) < 1e-9) y2++; if (y2 >= n) throw 2;
if (y2 > y) for (int x = y; x < n2; x++) t0[y][x] += t0[y2][x];
for (int x = n2-1; x >= y; x--) t0[y][x] /= t0[y][y];
for (int j = 0; j < n; j++) if (j != y) {
double f = -t0[j][y];
for (int x = y; x < n2; x++) t0[j][x] += f*t0[y][x]; } }
for (int y = 0; y < n; y++) for (int x = 0; x < n; x++) s0[y] += t0[y][x+n]; }
int main() { int n, k; I(n); I(k);
for (int i = 0; i < n; i++) {
scanf("%lf", rem+i); rem[i] = 1.0-rem[i]; t0[i][i] = rem[i]; }
int m; I(m); Reaction r;
for (int i = 0; i < m; i++) { r.read();
t0[r.a][r.a] -= rem[r.a]*r.ratio;
if (r.t) t1[r.b][r.a] += rem[r.a]*r.ratio;
else  t0[r.b][r.a] += rem[r.a]*r.ratio; } computeS0(n);
for (int i = 0; i < n; i++) { s1[i][0] = s0[i]; sum[i] = s0[i]; }
for (int t = 1; t < k; t++) {
for (int y = 0; y < n; y++) { double d = 0.0;
for (int x = 0; x < n; x++) d += s1[x][0]*t1[y][x]; s1[y][1] = d; }
for (int y = 0; y < n; y++) { double d = 0.0;
for (int x = 0; x < n; x++) d += s1[x][1]*t0[y][x+n];
s1[y][0] = d; sum[y] += d; } } printf("%.8lf", sum[0]);
for (int i = 1; i < n; i++) printf(" %.8lf", sum[i]); printf("\n"); } 