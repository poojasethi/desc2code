#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	35
#define DB	double
#define INF	(1<<30)
#define Vec	vector<Nod>
#define For(i,a,b)	for(int i=a;i<=b;i++)
#define	Rep(i,a,b)	for(int i=a;i>=b;i--)

int		T,N,M,V[n],A[n],B[n],F[n][n];
DB		P[n];

struct	Nod{int x;DB y,s;};
Vec		L[n],R[n];

void	DFS(int l,int r,int x,int y,DB p){
		if	(l>r)	{
			if	(r==N)	R[x].push_back((Nod){y,p,p});
				else	L[x].push_back((Nod){y,p,p});
			return;
		}
		DFS(l+1,r,x+1,y,p*(1-P[l]));
		DFS(l+1,r,x,y+V[l],p*P[l]);
}

bool	Cmp(const Nod&a,const Nod&b)	{return	a.x<b.x;}
void	Work(Vec&G){
		sort(G.begin(),G.end(),Cmp);
		Rep(i,G.size(),2)	G[i-2].s=G[i-1].s+G[i-2].y;
}

DB		Cal(Vec&a,Vec&b,int k){
		if	(!a.size()||!b.size())	return	0;	DB	ret=0;
		for	(int i=0,j=b.size();i<a.size();i++){
			for	(;j&&b[j-1].x+a[i].x>=k;j--);
			if	(j<b.size())	ret+=a[i].y*b[j].s;
		}	return	ret;
}

int		main(){
		scanf("%d",&T);
		for	(;T--;)	{
			scanf("%d%d",&N,&M);
			For(i,1,N)	scanf("%d%lf",&V[i],&P[i]),P[i]*=0.01;
			For(i,1,M)	scanf("%d%d",&A[i],&B[i]);

			For(i,0,N)	For(j,0,M)	F[i][j]=INF;	F[0][0]=0;
			For(i,1,M)	Rep(j,N-B[i],0)	Rep(k,M-1,0)
				if	(F[j][k]!=INF)	F[j+B[i]][k+1]=min(F[j+B[i]][k+1],F[j][k]+A[i]);
			For(i,1,N)	For(j,0,M)	F[i][j]=min(F[i][j],F[i-1][j]);
			For(i,0,N)	Rep(j,M-1,0)F[i][j]=min(F[i][j],F[i][j+1]);

			For(i,0,N)	L[i].clear(),R[i].clear();
			DFS(1,N/2,0,0,1);	DFS(N/2+1,N,0,0,1);
			For(i,0,N)	Work(L[i]),Work(R[i]);

			DB	Ans=0;
			For(i,0,N)	For(j,0,N-i)	For(k,1,M)
				if	(F[i+j][k]!=INF)	Ans+=Cal(L[i],R[j],F[i+j][k]);
			printf("%.4lf\n",Ans);
		}
}