#include <cstdio>
#include <cmath>
#include <memory.h>
#include <iostream>
using namespace std;
#define rep(i,x,y) for(i=x;i<=y;i++)
#define ll long long
#define tem 1000000
int t,i,j,np,nps,npt;
ll l,k,r,ans2,ans,num,now;
int ar[100010],pr[100010],pr2[100010],q[50010],con[50010][25];
ll p[50010],mins[50010][25],p2[50010],mini[100010][25],m26[1000010];
ll ch(ll a,ll b,ll p)
{
  if(b<1e8)return (a*b)%p;
  return ((((a*(b/tem)))%p)*tem+a*(b%tem))%p;
}
ll gcd(ll a,ll b)
{
  if(b==0)return a;
  return gcd(b,a%b);
}
ll lcm(ll a,ll b)
{
  return(a/gcd(a,b)*b);
}
ll doit2(ll bas,unsigned int p,ll x)
{
  if(bas==26&&x<=tem)return m26[x];
  if(x==0)return 1;
  if(x==1)return bas;
  ll te=doit2(bas,p,x>>1);
  te=(te*te)%p; 
  if(x&1==1)te=(te*bas)%p;
  return te;
}
ll doit1(ll bas,ll p,ll x)
{
  if(x==0)return 1;
  if(x==1)return bas;
  ll te=doit1(bas,p,x>>1);
  te=ch(te,te,p); 
  if(x&1==1)te=ch(te,bas,p);
  return te;
}
ll doit(ll bas,ll p,ll x)
{
  if(p<3e9)return doit2(bas,p,x);
  return doit1(bas,p,x);
}
ll ds(int k,ll t1,ll t2)
{
  int i;
  if(k==nps+1&&t1==1)return 0;
  if(k==nps+1)return t1/t2;
  ll te2=ds(k+1,t1,t2);
  t1*=(p[k]-1);
  rep(i,1,q[k])
  {
    te2+=ds(k+1,t1,lcm(t2,mins[k][i]));
    t1*=p[k];
  }
  return te2;
}
void find(int now)
{
  int i,j,tp=now-1,tm;
  npt=0;
  while(tp>1&&pr[ar[tp]]!=tp)
  {
    tm=ar[tp];
    p2[++npt]=tm;
    while(tp%tm==0)tp/=tm;
  }
  if(tp>1)p2[++npt]=tp;
  ll te=p2[++npt]=now;
  mini[now][1]=now-1;
  i=1;
  while(te<=1e10)
  {
    i++;
    mini[now][i]=mini[now][i-1]*now;
    te*=now;
  }
  for(i--;i>0;i--)
  {
    te/=now;
    rep(j,1,npt)
      while(mini[now][i]%p2[j]==0&&doit(2,te,mini[now][i]/p2[j])==1)mini[now][i]/=p2[j];
    mini[now][i-1]=mini[now][i];
  }
  return;
}
ll calc(ll n)
{
  if(n==1)return 0;
  now=n;
  nps=0;
  int i;
  rep(i,1,con[n-l][0])
  {
    p[++nps]=con[n-l][i];
    q[nps]=0;
    while(now%con[n-l][i]==0)
    {
      now/=con[n-l][i];
      q[nps]++;
      mins[nps][q[nps]]=mini[con[n-l][i]][q[nps]];
    }
  }
  if(now>1)
  {
    p[++nps]=now;
    q[nps]=1;
    mins[nps][1]=num=now-1;
    npt=0;
    rep(i,1,np)
    {
      if(pr2[i]>num)break;
      if(num%pr[i]==0)
      {
        p2[++npt]=pr[i];
        while(num%pr[i]==0)num/=pr[i];
      }
    }
    if(num>1)p2[++npt]=num;
    rep(i,1,npt)
      while(mins[nps][1]%p2[i]==0&&doit(2,now,mins[nps][1]/p2[i])==1) mins[nps][1]/=p2[i];
  }
  return ds(1,1,1);
}
int main()
{
  memset(ar,0,sizeof(ar));
  np=0;
  rep(i,2,100000)
  {
    if(ar[i]==0)
    {
      pr[++np]=i;
      pr2[np]=i*i;
      ar[i]=np;
      if(i>2)find(i);
    }
    rep(j,1,np)
    {
      if(pr[j]*i>100000)break;
      ar[pr[j]*i]=pr[j];
      if(i%pr[j]==0)break;
    }
  }
  m26[0]=1;
  rep(i,1,1000000)m26[i]=(m26[i-1]*26)%1000000007;
  scanf("%d",&t);
  rep(j,1,t)
  {
    scanf("%lld%lld",&l,&r);
    rep(i,0,r-l+1)con[i][0]=0;
    rep(i,1,np)
    {
      k=((l-1)/pr[i])+1;
      while(k*pr[i]<=r+1)
      {
        con[k*pr[i]-l][++con[k*pr[i]-l][0]]=pr[i];
        k++;
      }
    }
    ans2=0;
    if(l&1==1)ans=calc(l);
    rep(i,0,r-l)
    {
      if(l+(ll)i&1==1)ans++;
      else ans=calc(l+(ll)i+1);
      ans2=(ans2+doit2(26,1000000007,ans%1000000006))%1000000007;
    }
    printf("%d\n",(int)ans2);
  }
  return 0;
}