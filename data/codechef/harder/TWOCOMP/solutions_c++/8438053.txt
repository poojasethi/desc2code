#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
int n;
class tu{
	public:
		struct edge{
			int v,next;
		}e[200005];int etot;
		int g[100005];
		void ae(int u,int v){
			e[etot].v=v;e[etot].next=g[u];g[u]=etot++;
		}
		int pre[100005][20],h[100005];
		int qu[100005],p,q;
		void bfs(int rt){
			p=q=0;
			pre[rt][0]=0;h[rt]=0;
			qu[q++]=rt;
			while(p!=q){
				int u=qu[p++];
				for (int i=g[u];~i;i=e[i].next){
					if(e[i].v!=pre[u][0]){
						pre[e[i].v][0]=u;
						h[e[i].v]=h[u]+1;
						qu[q++]=e[i].v;
					}
				}
			}
			for (int k=0;k<18;k++)
				for (int u=1;u<=n;u++)
					pre[u][k+1]=pre[pre[u][k]][k];
		}
		int lca(int u,int v){
			if(h[u]<h[v])swap(u,v);
			for (int i=0;h[u]-h[v];i++)if(h[u]-h[v]&1<<i)u=pre[u][i];
			if(u==v)return u;
			for (int i=18;i>=0;i--)if(pre[u][i]!=pre[v][i]){
				u=pre[u][i];
				v=pre[v][i];
			}
			return pre[u][0];
		}
		void work(){
			memset(g,-1,sizeof(g));
			for (int i=1;i<n;i++){
				int x,y;scanf("%d%d",&x,&y);
				ae(x,y);
				ae(y,x);
			}
			bfs(1);
		}
		int test(int a,int b,int c,int d){
			int l1=lca(a,b),l2=lca(c,d);
			if(l1==l2)return 1;
			if(h[l1]>h[l2])swap(l1,l2),swap(a,c),swap(b,d);
			if(lca(a,l2)==l2 || lca(b,l2)==l2)return 1;
			return 0;
		}
}my;
int m1,m2;
struct xx{
	int x,y,d;
}a[777],b[777];

struct edge{
	int v,next,f;
}e[5000000];int etot=0;
int g[10005];
void ae(int u,int v,int f){
	e[etot].v=v;e[etot].f=f;e[etot].next=g[u];g[u]=etot++;
	e[etot].v=u;e[etot].f=0;e[etot].next=g[v];g[v]=etot++;
}
int s,t;
int qu[10005],d[10005];int p,q;
int label(){
	p=q=0;
	qu[q++]=s;
	for (int i=1;i<=t;i++)d[i]=inf;
	d[s]=0;
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next)if(e[i].f){
			int v=e[i].v;
			if(d[v]==inf){
				d[v]=d[u]+1;
				if(v==t)return 1;
				qu[q++]=v;
			}
		}
	}
	return 0;
}
int aug(int u,int mi=inf){
	if(u==t)return mi;
	int del,su=0;
	for (int i=g[u];~i;i=e[i].next)if(e[i].f){
		int v=e[i].v;
		if(d[v]==d[u]+1){
			del=aug(v,min(mi,e[i].f));
			e[i].f-=del;
			e[i^1].f+=del;
			mi-=del;
			su+=del;
			if(mi==0)break;
		}
	}
	if(!su)d[u]=-1;
	return su;
}
int dinic(){
	int fl=0,tmp;
	while(label()){
		while(tmp=aug(s,inf))fl+=tmp;
	}
	return fl;
}
int main()
{
	memset(g,-1,sizeof(g));
	scanf("%d%d%d",&n,&m1,&m2);
	my.work();
	int su=0;
	for (int i=1;i<=m1;i++)scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].d),su+=a[i].d;
	for (int i=1;i<=m2;i++)scanf("%d%d%d",&b[i].x,&b[i].y,&b[i].d),su+=b[i].d;
	s=m1+m2+1;
	t=s+1;
	for (int i=1;i<=m1;i++)
		for (int j=1;j<=m2;j++)if(my.test(a[i].x,a[i].y,b[j].x,b[j].y)){
			ae(i,j+m1,inf);
		}
	for (int i=1;i<=m1;i++)ae(s,i,a[i].d);
	for (int i=1;i<=m2;i++)ae(i+m1,t,b[i].d);
	printf("%d\n",su-dinic());
	return 0;
}
