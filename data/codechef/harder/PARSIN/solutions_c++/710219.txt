// #includes {{{
#include <algorithm>
#include <numeric>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <stack>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cstring>
#include <cmath>
#include <complex>
#include <functional>
using namespace std;
// }}}
// pre-written code {{{
#define REP(i,n) for(int i=0;i<(int)(n);++i)
#define RREP(i,a,b) for(int i=(int)(a);i<(int)(b);++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define IFOR(i,it,c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();++it,++i)
#define ALL(c) (c).begin(), (c).end()
#define MP make_pair
#define PB push_back
#define CLEAR(c,d) memset((c),(d),sizeof(c))
#define TO_STRING(VariableName) # VariableName
#define OUT(c) cout<<TO_STRING(c)<<"="<<(c)<<endl

typedef long long Int;
typedef long long ll;

typedef pair<int,int> pii;
// }}}

//{{{ Debug
// Input/Output

template<class S,class T>
ostream &operator<<(ostream &os, const pair<S,T> &p){
	cout<<"("<<p.first<<","<<p.second<<")";
}

template<class T>
ostream &operator<<(ostream &os, vector<T> &x) {
	os<<"[";
	REP(i,x.size()){
		os<<x[i];
		if(i!=x.size()-1)os<<",";
	}
	os<<"]";
	return os;
}

template<class T>
ostream &operator<<(ostream &os, set<T> &x) {
	os<<"[";
	REP(i,x.size()){
		os<<x[i];
		if(i!=x.size()-1)os<<",";
	}
	os<<"]";
	return os;
}
template<class S,class T>
ostream &operator<<(ostream &os, pair<S,T> &p){
	os<<"("<<p.first<<","<<p.second<<")";
	return os;
}
//}}}

typedef double number;
typedef vector<number> array;
typedef vector<array> matrix;

const number EPS=1e-5;

int M,N;
number X;

int D;

void mult(const matrix &A,const matrix &B,matrix &C){
	REP(i,D)REP(j,D){
		number s=0.0;
		REP(k,D)s+=A[i][k]*B[k][j];
		C[i][j]=s;
	}
}

matrix tmp[2],A,B;
matrix ans[2];

void pow(const matrix &A,int n,matrix &B){
	int from=0,to=1,from1=0,to1=1;
	ans[0].assign(D,array(D,0.0));
	REP(i,D)REP(j,D)tmp[0][i][j]=A[i][j];
	REP(i,D)ans[0][i][i]=1.0;
	while(n>0){
		if(n%2==1){
			mult(ans[from1],tmp[from],ans[to1]);
			swap(from1,to1);
		}
		mult(tmp[from],tmp[from],tmp[to]);
		swap(from,to);
		n/=2;
	}
	REP(i,D)REP(j,D)B[i][j]=ans[from1][i][j];
}

void main2(){
	scanf("%d%d%lf",&M,&N,&X);
	D=M*2;
/*	if(abs(X)<EPS or (M_PI-EPS<X and X<M_PI+EPS)){
		printf("0.0\n");
		return;
	}*/
	REP(i,2)tmp[i].assign(D,array(D,0.0));
	REP(i,2)ans[i].assign(D,array(D,0.0));
	A.assign(D,array(D,0.0));
	B.assign(D,array(D,0.0));
	REP(i,M)A[i][M+i]=1.0;
	for(int i=1;i<=M;i++){
		int i1=i-1;
		A[M+i1][i1]-=1.0;A[M+i1][M+i1]+=cos(X)*2;
		if(i1>0)A[M+i1][M+i1-1]+=sin(X);
	}
	pow(A,N,B);
	number ans=B[M-1][M]*sin(X);
	printf("%.10le\n",ans);
}

int main() {
	int T;scanf("%d", &T);
	REP(ct, T){
		main2();
	}
	return 0;
}

