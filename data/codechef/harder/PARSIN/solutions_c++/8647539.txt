#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
int sz;
struct mat{
	db c[70][70];
}x,uno;
mat operator*(const mat&a,const mat&b){
	mat c;
	for (int i=1;i<=sz;i++)
		for (int j=1;j<=sz;j++){
			db su=0.0;
			for (int k=1;k<=sz;k++){
				su+=a.c[i][k]*b.c[k][j];
			}
			c.c[i][j]=su;
		}
	return c;
}
mat qp(mat a,ll b){mat ans=uno;do{if(b&1)ans=ans*a;a=a*a;}while(b>>=1);return ans;}
int main()
{
	int tes;
	scanf("%d",&tes);
	while(tes--){
		int m,n;db r;
		scanf("%d%d%lf",&m,&n,&r);
		sz=2*m;
		memset(x.c,0,sizeof(x.c));
		memset(uno.c,0,sizeof(uno.c));
		for (int i=1;i<=sz;i++)uno.c[i][i]=1.0;
		db co=cos(r),si=sin(r);
		for (int i=1;i<=m;i++){
			x.c[i][i]=co;
			x.c[i][i+m]=si;
			if(i>=2)x.c[i+m][i-1]=co,x.c[i+m][i-1+m]=si;
			x.c[i+m][i+m]=co,x.c[i+m][i]=-si;
		}
		mat an=qp(x,n);
		db ans=an.c[m][m+1];
		printf("%.10e\n",ans);
	}
	return 0;
}
