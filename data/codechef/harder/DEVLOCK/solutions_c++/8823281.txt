#include <cstdio>
#include <cmath>
#include <memory.h>
using namespace std;
#define rep(i,x,y) for(int i=x;i<=y;i++)
#define ll long long
const int P=998244353;
int sum[51],vis[51],now,fir[51];
ll a1[32768],a2[32768],a3[32768],ar[32768],ans[51][32768],as[51][32768],tem[51][32768],t[32768],rn;
ll ksm(ll bas,ll k,ll p)
{
	if(k==0)return 1;
	if(k==1)return bas%p;
	ll ans=ksm(bas,k>>1,p);
	ans=(ans*ans)%p;
	if(k&1==1)ans=(ans*bas)%p;
	return ans;
}
void dft(int f,int l,ll g,int flag,ll a[])
{
	if(f==l)return;
	int mid=(f+l)>>1;
	rep(i,f,l)
		t[i]=a[i];
	rep(i,f,l)
		if(((i-f)&1)==0)a[f+((i-f)>>1)]=t[i];
			else a[mid+((i-f+1)>>1)]=t[i];
	dft(f,mid,(g*g)%P,flag,a);
	dft(mid+1,l,(g*g)%P,flag,a);
	ll nows=1,cir=g,k1=f,k2=mid+1;
	rep(i,f,l)
	{
		t[i]=(a[k1]+nows*a[k2])%P;
		nows=(nows*cir)%P;
		k1++;
		k2++;
		if(k1>mid)k1=f;
		if(k2>l)k2=mid+1;
	}
	if(flag==1||l-f!=now-1)rep(i,f,l)a[i]=t[i];
		else rep(i,f,l)a[i]=(t[i]*rn)%P;
	return;
}
int main()
{
	int n,p,m;
	scanf("%d%d%d",&n,&p,&m);
	int nn=n;
	memset(vis,0,sizeof(vis));
	int t;
	for(t=0,now=1;vis[now]<2;t++,vis[now]++,now=(now*10)%p)
		if(fir[now]==0)fir[now]=t+1;
	int s=0;
	rep(i,0,p)
		if(vis[i]==2)s++;
		 else if(vis[i]==1)n--;
	memset(sum,0,sizeof(sum));
	for(int i=1;i<=n%s;i++,sum[now]=1,now=(now*10)%p);
	rep(i,0,p)
		if(vis[i]>1)sum[i]+=n/s;
	now=32;
	while(now-1<m*2)now*=2;
	int g=ksm(3,(P-1)/now,P),gr=ksm(g,P-2,P);
	rn=ksm(now,P-2,P);
	int k=n/s,k0=k;
	memset(a1,sizeof(a1),0);
	a1[0]=1;
	memset(a2,sizeof(a2),0);
	rep(i,0,9)a2[i]=1;
	while(k>0)
	{
		dft(0,now-1,g,1,a2);
		if(k&1==1)
		{
			dft(0,now-1,g,1,a1);
			rep(i,0,now-1)
				a1[i]=(a1[i]*a2[i])%P;
			dft(0,now-1,gr,-1,a1);
			rep(i,m+1,now-1)
				a1[i]=0;
		}
		k/=2;
		rep(i,0,now-1)
			a2[i]=(a2[i]*a2[i])%P;
		dft(0,now-1,gr,-1,a2);
		rep(i,m+1,now-1)
			a2[i]=0;
	}
	memset(a3,0,sizeof(a3));
	rep(i,0,9)a3[i]=1;
	dft(0,now-1,g,1,a3);
	dft(0,now-1,g,1,a1);
	rep(i,0,now-1)
		a2[i]=(a1[i]*a3[i])%P;
	dft(0,now-1,gr,-1,a2);
	dft(0,now-1,gr,-1,a1);
	memset(a3,sizeof(a3),0);
	rep(i,0,9)a3[i]=1;
	memset(ans,0,sizeof(ans));
	ans[0][0]=1;
	rep(i,0,p)
		if(vis[i]>0&&fir[i]<=nn)
		{
			memset(ar,0,sizeof(ar));
			if(vis[i]==1)rep(j,0,9)ar[j]=1;
				else if(sum[i]==n/s)rep(j,0,m)ar[j]=a1[j];
					else rep(j,0,m)ar[j]=a2[j];
			memset(as,0,sizeof(as));
			rep(j,0,m)
				as[(j*i)%p][j]=ar[j];
			rep(j,0,p)
			{
				dft(0,now-1,g,1,ans[j]);
				dft(0,now-1,g,1,as[j]);
			}
			memset(tem,0,sizeof(tem));
			rep(j,0,p)
				rep(k,0,p)
					rep(l,0,now-1)
						tem[(j+k)%p][l]=(tem[(j+k)%p][l]+ans[j][l]*as[k][l])%P;
			rep(j,0,p)
				dft(0,now-1,gr,-1,tem[j]);
			rep(j,0,p)
			{
				rep(k,0,m)
					ans[j][k]=tem[j][k];
				rep(k,m+1,now-1)
					ans[j][k]=0;
			}
		}
	rep(i,1,m)
		ans[0][i]=(ans[0][i]+ans[0][i-1])%P;
	rep(i,0,m)
		printf("%d ",ans[0][i]);
	putchar('\n');
	return 0;
}