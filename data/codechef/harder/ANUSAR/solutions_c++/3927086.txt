#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<fstream>
#include<cmath>
#include<iomanip>
#include<time.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define inf 1000000007
#define mod 1000000007
#define pii pair<int,int>
#define vi vector<int>
#define VS vector<string>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 200010
#define pi 3.14159265358979323846
#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(__typeof(t.begin()) i=t.begin();i!=t.end();i++)

struct node
{
	int ch[26],fail,len,v;
	char c;
	void init()
	{
		memset(ch,0,sizeof(ch));
		fail=-1;len=0;c='#';v=1;
	}
}t[N*50];
int sz;
void add(char *s)
{
	int ed=0,i,j;
	for(i=0;s[i];i++)
	{
		j=s[i]-'a';
		int p=++sz;t[p].init();t[p].len=t[ed].len+1;t[p].c=s[i];
		while(ed>=0&&!t[ed].ch[j])t[ed].ch[j]=p,ed=t[ed].fail;
		if(ed==-1){t[p].fail=0;ed=p;continue;}
		int q=t[ed].ch[j];
		if(t[q].len==t[ed].len+1)t[p].fail=q;
		else
		{
			int r=++sz;t[r]=t[q];t[r].len=t[ed].len+1;
			t[p].fail=t[q].fail=r;t[r].v=0;
			while(ed>=0&&t[ed].ch[j]==q)t[ed].ch[j]=r,ed=t[ed].fail;
		}
		ed=p;
	}
}
int id[N*10];ll cnt[N*10],ans[N];char s[N];
bool cmp(int i,int j)
{
	return t[i].len>t[j].len;
}
void solve()
{
	int i,j,k,n;
	n=strlen(s);
	for(i=0;i<=sz;i++)id[i]=i,cnt[i]=0;
	for(i=0;i<=n;i++)ans[i]=0;
	sort(id,id+sz+1,cmp);
	for(k=0;k<=sz;k++)
	{
		i=id[k];
		if(t[i].v)cnt[i]++;
		//cerr<<t[i].c<<" "<<t[i].len<<" "<<cnt[i]<<"\n";
		j=t[i].fail;
		ll v=(ll)(t[i].len-t[j].len)*cnt[i];
		ans[1]+=v;if(cnt[i]+1<=n)ans[cnt[i]+1]-=v;
		//DBG(v)DBG(ans[1])
		cnt[j]+=cnt[i];
	}
	for(i=1;i<=n;i++)ans[i]+=ans[i-1];
}
int main()
{
	int i,j,T,ca=0,k,m,n;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%s",s);n=strlen(s);
		t[0].init();sz=0;
		add(s);
		scanf("%d",&m);
		solve();
		for(i=0;i<m;i++)
		{
			scanf("%d",&j);
			printf("%lld\n",j>n?0LL:ans[j]);
		}
	}
	return 0;
}