#include<cstdio>
#include<cstring>
#include<algorithm>
#include<set>
#include<map>
#include<assert.h>
#include<vector>
#define rep(i,j,k) for(int i=(int)j;i<=(int)k;i++)
#define per(i,j,k) for(int i=(int)j;i>=(int)k;i--)
using namespace std;
typedef long long LL;
typedef double db;
const int P=1000000007;
inline int Pow(int a,int b){
	int c=1;
	for(;b;b>>=1,a=a*1ll*a%P)if(b&1)c=c*1ll*a%P;
	return c;
}
const int N=110000;
const int S=100;
vector<int>pos[N];
int n;int a[N];
LL cnt[N];
inline void add(int x,int v){
	if(!x)return;
	for(;x<=n;x+=x&(-x))cnt[x]+=v;
}
inline LL ask(int x){
	LL v=0;for(;x;x-=x&(-x))v+=1ll*cnt[x];return v;
}
int rest[N];
LL work(int col){
	LL ans=0;
	int pr=0;
	rep(i,0,pos[col].size()-1){
		rep(j,pr+1,pos[col][i])rest[j]=i;
		pr=pos[col][i];
	}
	rep(j,pr+1,n)rest[j]=pos[col].size();
	
	//in middle
	rep(i,1,100000)if(pos[i].size())if(i^col){
		LL now=0;
		rep(j,0,pos[i].size()-1){
			ans+=now*1ll*(pos[col].size()-rest[pos[i][j]]);
			now+=1ll*rest[pos[i][j]];
		}
	}
	//not in middle
	rep(i,1,100000)if(pos[i].size()<S)if(pos[i].size()){
		LL s[3];memset(s,0,sizeof s);
		rep(j,0,pos[i].size()-1){
			int x=pos[i][j];
			LL cg=0;
			
			cg+=s[0]*rest[x]*rest[x];
			cg-=2ll*rest[x]*s[1];
			cg+=s[2];
			cg-=rest[x]*s[0];
			cg+=s[1];
			
			assert(cg%2==0);
			
			ans+=cg/2;
			
			s[0]++;
			s[1]+=1ll*rest[x];
			s[2]+=1ll*rest[x]*rest[x];
		}
	}
	return ans;
}
LL tmp[N];
int ss[N];
int main(){
	scanf("%d",&n);
	rep(i,1,n)scanf("%d",&a[i]);
	rep(i,1,n)pos[a[i]].push_back(i);
	//small to small
	LL ans=0;
	rep(i,1,n)if(pos[a[i]].size()<S){
		per(j,pos[a[i]].size()-1,0){
			if(pos[a[i]][j]>i){
				int x=pos[a[i]][j];
				ans+=1ll*(ask(n)-ask(x));
			}
			else break;
		}
		per(j,pos[a[i]].size()-1,0){
			if(pos[a[i]][j]>i){
				int x=pos[a[i]][j];
				add(x,1);
			}
			else break;
		}
	}
	rep(i,1,100000)if(pos[i].size()&&(pos[i].size()<S)){
		int x=pos[i].size();
		if(x<4)continue;
		LL v1=x*1ll*(x-1)*1ll*(x-2);
		LL v2=(x-3);
		
		if(v1%3==0)v1/=3;else v2/=3;
		rep(j,1,3)if(v1%2==0)v1/=2;else v2/=2;
		
		v1%=P;
		v2%=P;
		
		ans-=(1ll*v1*v2)%P;
	}
	//big to small and big
	rep(i,1,100000)if(pos[i].size()>=S){
		ans+=work(i);
	}
	//left
	LL dui=0;
	rep(i,1,n){
		ans+=tmp[a[i]];
		tmp[a[i]]+=1ll*dui;
		dui+=1ll*ss[a[i]];
		ss[a[i]]++;
	}
	
	rep(i,1,100000)if(pos[i].size()){
		int x=pos[i].size();
		if(x<4)continue;
		LL v1=x*1ll*(x-1)*1ll*(x-2);
		LL v2=(x-3);
		
		if(v1%3==0)v1/=3;else v2/=3;
		rep(j,1,3)if(v1%2==0)v1/=2;else v2/=2;
		
		v1%=P;
		v2%=P;
		
		ans-=(1ll*v1*v2)%P;
	}
	
	
	LL x=0;
	LL tt=0;
	rep(i,1,100000){
		LL gg=pos[i].size()*1ll*(pos[i].size()-1)/2;
		x+=(gg%P)*tt%P;
		tt+=gg;
	}
	x%=P;
	printf("%lld\n",(x+P-(ans%P)*1ll)%P);
	return 0;
}
