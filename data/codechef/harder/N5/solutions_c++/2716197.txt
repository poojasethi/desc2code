//Traffic jam
/*
给定长度为N的整数序列，问：至少要进行多少次操作可以使该序列变为不下降序列。
*/
#include<cstdio>
#include<iostream>
#include<algorithm>
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define red(i,r,l) for(int i=r;i>=l;i--)
#define db(x) cout<<#x<<"="<<(x)<<" "
#define el cout<<endl
#define mp make_pair
#define PII pair<int,int>
#define fi first
#define se second
using namespace std;
const int MXN=100007;

int N;
PII a[MXN];

void solve(){
	cin>>N;
	rep(i,1,N) scanf("%d",&a[i].fi),a[i].se=i;
	sort(a+1,a+N+1);
	int now=0,n=1;
	rep(i,1,N)
	if (a[i].se>now){
		now=a[i].se;
	}else{
		int j=i;
		while (j<N&&a[j].fi==a[j+1].fi) j++;
		red(k,j,i){
			if (a[k].se<now){
				now=a[k].se;//Attention!! 
				break;
			}
		}
		i=j;
		n++;
	}
	//db(n),el;
	int ans=0;
	for(;(1<<ans)<n;ans++);
	cout<<ans<<endl;
}

int cas;
int main(){
	cin>>cas;
	while (cas--) solve();
	return 0;
}