#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
const db pi=acos(-1);
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}


int r;
ll c;
db p;

int curtot=0;
int bel[10];
map<ll,int>mp;
map<int,ll>mbk;
int sttot;
ll has(){
	ll su=0;
	for (int i=0;i<=r;i++)su=(su<<4)|bel[i];
	return su;
}
void ret(ll su){
	for (int i=r;i>=0;i--){
		bel[i]=su&15;
		su>>=4;
	}
}

void dfs(int i){
	if(i==r+1){
		int bo=0;
		for (int j=1;j<=r;j++)if(bel[j]==bel[0])bo=1;
		if(!bo)return;

		for (int j=1;j<=r;j++)if(bel[j]==bel[0]){
			for (int k=1;k<j;k++)
				for (int l=j+1;l<=r;l++)if(bel[k]==bel[l] && bel[k]!=bel[j])return;
		}
		for (int j=1;j<=r;j++)
			for (int k=j+2;k<=r;k++)if(bel[j]==bel[k])
				for (int l=j+1;l<k;l++)
					for (int m=k+1;m<=r;m++)if(bel[l]!=bel[j] && bel[l]==bel[m])return;
		ll me=has();
		mp[me]=++sttot;
		mbk[sttot]=me;
	}else{
		for (int j=1;j<=curtot;j++){
			bel[i]=j;
			dfs(i+1);
		}
		bel[i]=++curtot;
		dfs(i+1);
		curtot--;
	}
}
db tmp1[4000],tmp2[4000];
db *pre=tmp1,*cur=tmp2;
inline void cl(db *a){
	for (int i=0;i<=sttot;i++)a[i]=0.0;
}
#define eps 1e-20

int met[555];
int lab[555];
int regu(){
	static int ind=0;

	ind++;
	int ct=0;
	for (int i=0;i<=r;i++)if(met[bel[i]]!=ind){
		met[bel[i]]=ind;
		bel[i]=lab[bel[i]]=++ct;
	}else{
		bel[i]=lab[bel[i]];
	}
	int bo=0;
	for (int i=1;i<=r;i++)if(bel[i]==bel[0])bo=1;
	return bo;
}
int to[4444][10][4];
db su1;
db work(int c){
	cl(cur);
	bel[0]=bel[1]=1;
	for (int i=2;i<=r;i++)bel[i]=i;
	int t=mp[has()];
	cur[t]=1.0;

	su1=0.0;
	for (int i=1;i<=c;i++){
		for (int j=1;j<=r;j++){
			if(i==1 && j==1)continue;
			swap(cur,pre);
			cl(cur);
			for (int t=1;t<=sttot;t++)if(fabs(pre[t])>eps){
				if(j==1){
					cur[to[t][j][0]]+=pre[t]*(1-p);
					cur[to[t][j][1]]+=pre[t]*(p);
				}else{
					cur[to[t][j][0]]+=pre[t]*(1-p)*p;
					cur[to[t][j][1]]+=pre[t]*(p)*(1-p);
					cur[to[t][j][2]]+=pre[t]*p*p;
					cur[to[t][j][3]]+=pre[t]*(1-p)*(1-p);
				}
			}
		}
		if(i==c-1){
			for (int i=1;i<=sttot;i++){
				ret(mbk[i]);
				if(bel[r]==bel[0])su1+=cur[i];
			}
		}
	}
	db su=0.0;
	for (int i=1;i<=sttot;i++){
		ret(mbk[i]);
		if(bel[r]==bel[0])su+=cur[i];
	}
	return su;
}
int tmp[10];
void ini(){
	memset(to,0,sizeof(to));
	for (int j=1;j<=r;j++)
		for (int t=1;t<=sttot;t++){
				ll stt=mbk[t];
				ret(stt);
				for (int i=0;i<=r;i++)tmp[i]=bel[i];
				if(j==1){
					to[t][j][0]=t;

					for (int i=0;i<=r;i++)bel[i]=tmp[i];
					bel[j]=100;
					if(regu())to[t][j][1]=mp[has()];
				}else{
					for (int i=0;i<=r;i++)bel[i]=tmp[i];
					bel[j]=bel[j-1];
					if(regu())to[t][j][0]=mp[has()];

					to[t][j][1]=t;

					for (int i=0;i<=r;i++)bel[i]=tmp[i];
					bel[j]=100;
					if(regu())to[t][j][2]=mp[has()];

					for (int i=0;i<=r;i++)bel[i]=tmp[i];
					int tmp=bel[j];for (int i=0;i<=r;i++)if(bel[i]==tmp)bel[i]=bel[j-1];
					if(regu())to[t][j][3]=mp[has()];
				}
		}
}


struct que{
	int r;ll c;
	db p;int id;
}qs[111];
int cmp1(const que&a,const que&b){
	return a.r<b.r;
}
db out[111];
int main()
{
	int tes;
	gn(tes);
	for (int i=1;i<=tes;i++)scanf("%d%lld%lf",&qs[i].r,&qs[i].c,&qs[i].p),qs[i].id=i;
	sort(qs+1,qs+1+tes,cmp1);
	int las=0;
	for (int i=1;i<=tes;i++){
		r=qs[i].r,c=qs[i].c,p=qs[i].p;
		//gn(r);gn(c);scanf("%lf",&p);
		if(r!=las){
			las=r;
			mp.clear();
			mbk.clear();
			sttot=0;
			dfs(0);
			int cl=clock();
			ini();
		}
		db ans;
		if(c<=50)ans=work(c);
		else{
			db su=work(50);
			db pp=su1;
			if(pp<eps)ans=0;
			else ans=pp*pow(su/pp,c-49.0);
		}
		out[qs[i].id]=ans;
	}
	for (int i=1;i<=tes;i++)printf("%.10lf\n",out[i]);
	return 0;
}


