#include<iostream>
#include<cmath>
#include<cstring>
#include<cstdio>
#include<algorithm>
#include<bitset>
using namespace std;
int n,m;
struct atom{
	bitset<64>x[64],num;
	void scan(){
		char ch[20];
		for (int i=1;i<=n;i++) x[i]=0;
		scanf("%s",ch+1);
		if (ch[3]=='w'){
			for (int i=1;i<=n;i++)
				for (int j=1;j<=n;j++){
					int k1;
					scanf("%d",&k1); if (k1&1) k1=1; else k1=0;
					x[i][j]=k1;
				}
		} else {
			unsigned S,P,A;
			scanf("%u%u%u",&S,&P,&A);
			for (int i=1;i<=n;i++)
				for (int j=1;j<=n;j++){
					int k=(S>>12)%100+1;
					if (k&1) k=1; else k=0;
					x[i][j]=k; S=S*P+A;
				}
		}
		for (int i=1;i<=n;i++) x[i][n+1]=1;
	}
	void calc(){
		num=0; int now=1,where=0;
		for (int i=1;i<=n+1;i++){
			int r=now;
			while (r<=n&&x[r][i]==0) r++;
			if (r>n){
				if (where) return; where=i; continue;
			}
			swap(x[now],x[r]);
			for (int j=1;j<=n;j++)
				if (x[j][i]!=0&&j!=now) x[j]^=x[now];
			now++;
		}
		for (int i=1;i<=n+1;i++)
			if (i==where) num[i]=1;
			else if (i>where) num[i]=0;
			else num[i]=x[i][where];
	}
}A[8010];
void solve(){
	scanf("%d%d",&n,&m);
	for (int i=1;i<=m;i++){
		A[i].scan();
		A[i].calc();
	}
	if (n==1){
		int ans=0;
		for (int i=1;i<=m;i++)
			for (int j=i+1;j<=m;j++)
				if (A[i].x[1][1]==1&&A[j].x[1][1]==1) ans++;
		printf("%d\n",ans);
		return;
	}
	int ans=0;
	for (int i=1;i<=m;i++)
		for (int j=i+1;j<=m;j++)
			if ((A[i].num&A[j].num).count()%2) ans++;
	printf("%d\n",ans);
}
int main(){
	int t; scanf("%d",&t);
	for (;t;t--) solve();
	return 0;
}