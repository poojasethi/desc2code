#include <bits/stdc++.h>

using namespace std;

#define FOR(i, a, b) for(int i = a; i < b; i++)
#define REP(i, n) FOR(i, 0, n)
#define ll long long
#define pb push_back
#define mp make_pair

#define N 500005

int n, k, bad_cnt, a[N], b[N];
vector< pair<int, int> > va;
set<int> valid;
priority_queue< pair<int, int> > pq;

void add_point(int pt)
{
    valid.insert(pt);
    set<int> :: iterator it = valid.find(pt);
    set<int> :: iterator lit = --it;
    set<int> :: iterator rit = ++it; ++rit;
    bad_cnt -= *rit - *lit > k;
    bad_cnt += *it - *lit > k;
    bad_cnt += *rit - *it > k;
}

void erase_point(int pt)
{
    set<int> :: iterator it = valid.find(pt);
    set<int> :: iterator lit = --it;
    set<int> :: iterator rit = ++it; ++rit;
    bad_cnt += *rit - *lit > k;
    bad_cnt -= *it - *lit > k;
    bad_cnt -= *rit - *it > k;
    valid.erase(it);
}

int main()
{
    scanf("%d%d", &n, &k);
    REP(i, n) scanf("%d%d", a+i, b+i);
    
    REP(i, n) va.pb(mp(a[i], i));
    sort(va.begin(), va.end());
    
    valid.insert(-1); valid.insert(n);
    bad_cnt = 1;
    
    int ans = 2000000000;
    REP(i, n)
    {
        add_point(va[i].second);
        pq.push(mp(b[va[i].second], va[i].second));
        if(i == n-1 or va[i].first != va[i+1].first)
        {
            int store = pq.top().second;
            erase_point(store);
            pq.pop();
            while(bad_cnt == 0 and !pq.empty())
            {
                store = pq.top().second;
                erase_point(store);
                pq.pop();
            }
            add_point(store);
            pq.push(mp(b[store], store));
            if(bad_cnt == 0) ans = min(ans, va[i].first*pq.top().first);
        }
    }
    printf("%d\n", ans);
    return 0;
}