#include <cstdio>
#include <algorithm>
#include <iostream>

using namespace std;

struct cell {
    int dnde, a, b;
    bool operator < (const cell &otro) const {
        if(a<otro.a)
            return true;
        return false;
    }
} B[500005];

int ctos, k, tam, res=1024000001;
int T[1048580], F[1048580], izq, der, pon;

void up(int x, int y, int dnde){
    if(y<izq or x>der)
        return ;
    if(x>=izq and y<=der){
        if(T[dnde]>pon)
            T[dnde]=pon;
        if(F[dnde]==0 or F[dnde]>pon)
            F[dnde]=pon;
        return ;
    }
    if(F[dnde]>0){
        T[dnde*2]=min(T[dnde*2], F[dnde]);
        if(F[dnde*2]==0 or F[dnde*2]>F[dnde])
            F[dnde*2]=F[dnde];

        T[dnde*2+1]=min(T[dnde*2+1], F[dnde]);
        if(F[dnde*2+1]==0 or F[dnde*2+1]>F[dnde])
            F[dnde*2+1]=F[dnde];

        F[dnde]=0;
    }
    up(x, (x+y)/2, dnde*2);
    up((x+y)/2+1, y, dnde*2+1);
    T[dnde]=max(T[dnde*2], T[dnde*2+1]);
}

int main()
{
    for(int i=1; i<1048579; i++)
        T[i]=32001;
    scanf("%d%d",&ctos,&k);
    if(k>ctos){
        printf("0\n");
        return 0;
    }
    for(int i=1; i<=ctos; i++){
        scanf("%d%d",&B[i].a,&B[i].b);
        B[i].dnde=i;
    }
    sort(B+1, B+ctos+1);
    tam=ctos-k+1;
    for(int v=1; v<=ctos; v++){
        izq=max(1, B[v].dnde-k+1);
        der=min(tam, B[v].dnde);
        pon=B[v].b;
        up(1, tam, 1);
        if(T[1]<=32000)
            res=min(res, T[1]*B[v].a);
    }
    printf("%d\n",res);
    return 0;
}
