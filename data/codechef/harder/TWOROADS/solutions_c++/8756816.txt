#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

#define n	105
#define DB	double
#define min(a,b)	((a)<(b)?(a):(b))
#define For(i,a,b)	for(int i=a;i<=b;i++)

int		N,ID[n];
DB		Ans=1e20,X[n],Y[n];

struct	Vec{
		DB	x,y;

		Vec	operator -	(const Vec&a)	{return	(Vec){x-a.x,y-a.y};}
		DB	operator *	(const Vec&a)	{return	x*a.x+y*a.y;}
		DB	operator /	(const Vec&a)	{return	x*a.y-y*a.x;}
}A[n];

struct	Lin{
		DB	x,y,x2,y2,xy;	int s;

		Lin()	{x=y=x2=y2=xy=s=0;}
		void	Upd(const Vec&a,int t){
			x+=t*a.x;	x2+=t*a.x*a.x;
			y+=t*a.y;	y2+=t*a.y*a.y;
			xy+=t*a.x*a.y;	s+=t;
		}
		DB		Work()	{
			if	(!s)	return	0;
			DB	a=1.*x/s,b=1.*y/s;
			DB	A=x2-2*a*x+s*a*a,B=2*b*x+2*a*y-2*xy-2*s*a*b,C=y2-2*b*y+s*b*b;
			return	((A+C)-sqrt((A-C)*(A-C)+B*B))*.5;
		}
}U,D;

bool	Cmp(int a,int b)	{return	X[a]<X[b];}

int		main(){
		scanf("%d",&N);
		For(i,1,N)	scanf("%lf%lf",&A[i].x,&A[i].y);

		For(i,1,N)	For(j,i+1,N)	{
			Vec	G=A[j]-A[i];
			For(k,1,N)	ID[k]=k,X[k]=(A[k]-A[i])*G,Y[k]=(A[k]-A[i])/G;
			sort(ID+1,ID+N+1,Cmp);

			U=D=Lin();
			For(k,1,N)	if	(k==i||Y[k]>1e-8)	U.Upd(A[k],1);
				else	D.Upd(A[k],1);
			For(x,1,N)	{
				int k=ID[x];
				if	(k==i||Y[k]>1e-8)	U.Upd(A[k],-1),D.Upd(A[k],1);
					else	D.Upd(A[k],-1),U.Upd(A[k],1);
				DB	ret=U.Work()+D.Work();
				Ans=min(Ans,ret);
			}
		}
		printf("%.12lf\n",Ans/N);
}