#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <algorithm>
#define eps 0.00000001
#define pi 3.141592653589793238462643383
using namespace std;

struct Point{double x,y;};
struct Vector{double x,y;double len(){return sqrt(x*x+y*y);};};
Vector operator -(const Point &a,const Point &b)
{
	Vector c;
	c.x=a.x-b.x;
	c.y=a.y-b.y;
	return c;
}
double operator ^(const Vector &a,const Vector &b){return a.x*b.y-a.y*b.x;}
double operator *(const Vector &a,const Vector &b){return a.x*b.x+a.y*b.y;}

int n,m,i,j,k,p1,p2;
Point p[105];
Vector v,v2;
double ans,tmp;

struct node
{
	Point p;
	double a;
}t[105];
inline bool cmp(const node &a,const node &b){return a.a<b.a;}

struct pset
{
	int n;
	double x,y,x2,y2,xy;
	void clear(){n=0;x=y=x2=y2=xy=0;}
	void add(double px,double py,int z)
	{
		n+=z;
		x+=z*px;y+=z*py;
		x2+=z*px*px;y2+=z*py*py;
		xy+=z*px*py;
	}
	double calc()
	{
		if(!n)return 0;
		double x_=x/n,y_=y/n;
		double A=x2-x_*x;
		double B=2*y_*x-2*xy;
		double C=y2-y_*y;
		double a=-4;
		double b=4*(A+C);
		double c=B*B-4*A*C;
		return (-b+sqrt(b*b-4*a*c))/(2*a);
	}
}A,B;

int main()
{
	scanf("%d",&n);
	for(i=1;i<=n;++i)scanf("%lf%lf",&p[i].x,&p[i].y);
	ans=1e30;
	for(p1=1;p1<=n;++p1)
	for(p2=1;p2<=n;++p2)
	if(p1!=p2)
	{
		v=p[p2]-p[p1];m=0;
		for(i=1;i<=n;++i)if(i!=p1&&i!=p2)
		{
			t[++m].p=p[i];
			t[m].a=v*(p[i]-p[p1]);
		}
		sort(t+1,t+m+1,cmp);
		A.clear();B.clear();
		A.add(p[p1].x,p[p1].y,1);
		A.add(p[p2].x,p[p2].y,1);
		for(i=1;i<=n;++i)if(i!=p1&&i!=p2)
		{
			v2=p[i]-p[p1];
			if((v^v2)>=0)A.add(p[i].x,p[i].y,1);
			else B.add(p[i].x,p[i].y,1);
		}
		tmp=A.calc()+B.calc();if(tmp<ans)ans=tmp;
		for(i=1;i<=m;++i)
		{
			v2=t[i].p-p[p1];
			if((v^v2)>=0)A.add(t[i].p.x,t[i].p.y,-1),B.add(t[i].p.x,t[i].p.y,1);
			else A.add(t[i].p.x,t[i].p.y,1),B.add(t[i].p.x,t[i].p.y,-1);
			tmp=A.calc()+B.calc();if(tmp<ans)ans=tmp;
		}
	}
	printf("%.20lf\n",ans/n);
}