#include <algorithm>
#include <string>
#include <cstdio>
#include <cstring>
#include <iostream>
#include <iomanip>
#include <cassert>
#include <queue>
#include <cstdlib>
#include <set>
#include <map>
#include <stack>
#include <cmath>
#include <ctime>

#define	st first
#define	nd second
#define	mp make_pair
#define	pb push_back
#define	lli long long int
#define	all( gg )	gg.begin(),gg.end()
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	FP( ii,aa,bb ) for( lli ii=aa;ii<=bb;ii++ )
#define	FM( ii,aa,bb ) for( lli ii=aa;ii>=bb;ii-- )
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;

#define	mod	1000000007LL

using namespace std;

lli	n,k,D,dp[700][110000],ps[110000];

int main(){

	cin >> n >> k >> D;
	
	if( k>600 ){
		cout << 0 << endl;
		return	0;
	}
	
	FP( i,0,k ){
		FP( j,0,n ){
			if( i==0 ){
				dp[i][j] = (j==0);
				continue;
			}
			if( j<i )	continue;
			dp[i][j] = ps[j-i];
			if( j-(D+1)*i>=0 )	dp[i][j] -= ps[j-(D+1)*i];
			if( dp[i][j]<0 )	dp[i][j] += mod;
		}
		ps[0] = dp[i][0];
		FP( j,1,n ){
			ps[j] = dp[i][j];
			if( j>=(i+1) )	ps[j] += ps[ j-(i+1) ];
			if( ps[j]>=mod )	ps[j] -= mod;
		}
		
	}
	
	cout << dp[k][n] << endl;
	
}