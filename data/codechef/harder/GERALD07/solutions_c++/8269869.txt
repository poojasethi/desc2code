#include<cstdio>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
#define inf 1000000005
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
const int mo=1000000007;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}

struct node{int ch[2],pre,mi,fl,up,v;}t[400005];
void fl(int x){swap(t[x].ch[0],t[x].ch[1]);t[x].fl^=1;}
void pd(int x){if(t[x].fl)fl(t[x].ch[0]),fl(t[x].ch[1]),t[x].fl=0;}
void pu(int x){t[x].mi=min(t[x].v,min(t[t[x].ch[0]].mi,t[t[x].ch[1]].mi));}
void rot(int x){
	int y=t[x].pre;pd(y);pd(x);
	int f=t[y].ch[0]==x;t[x].up=t[y].up;
	t[y].ch[!f]=t[x].ch[f];t[t[x].ch[f]].pre=y;
	t[x].pre=t[y].pre;t[t[y].pre].ch[t[t[y].pre].ch[1]==y]=x;
	t[x].ch[f]=y;t[y].pre=x;
	pu(y);
}
void spl(int x){
	if(!t[x].pre)pd(x);
	else{
		while(t[x].pre)rot(x);
		pu(x);
	}
}
int acc(int x){
	int y=0;
	for(;x;y=x,x=t[x].up){
		spl(x);
		t[t[x].ch[1]].up=x;
		t[t[x].ch[1]].pre=0;
		t[x].ch[1]=y;
		t[y].pre=x;
		pu(x);
	}
	return y;
}
int gr(int x){
	acc(x);spl(x);
	while(t[x].ch[0])x=t[x].ch[0],pd(x);
	return x;
}
void mr(int x){
	acc(x);spl(x);fl(x);
}
void lk(int x,int y){
	mr(x);t[x].up=y;
}
void cut(int x,int y){
	mr(x);acc(y);spl(x);
	t[y].pre=t[y].up=0;
	t[x].ch[1]=0;pu(x);
}
int quemi(int x,int y){
	mr(x);acc(y);spl(y);return t[y].mi;
}
int n,m;
int f[200005];
int x[200005],y[200005];
struct segnode{int l,r,x;}tt[4000005];int ndtot=0;
int head[200005]={0};
int add(int x,int v,int l,int r){
	int y=++ndtot;
	tt[y]=tt[x];
	tt[y].x++;
	if(l!=r){
		int mid=l+r>>1;
		if(v<=mid)tt[y].l=add(tt[x].l,v,l,mid);
		else tt[y].r=add(tt[x].r,v,mid+1,r);
	}
	return y;
}
int lim;
int Que(int h1,int h2){
	int l=0,r=m+1,su=0;
	while(1){
		if(lim>r)break;
		if(l==r && l==lim){su+=tt[h2].x-tt[h1].x;break;}
		int mid=l+r>>1;
		if(mid+1>=lim){
			su+=tt[tt[h2].r].x-tt[tt[h1].r].x;
			h2=tt[h2].l,h1=tt[h1].l;r=mid;
		}else{
			h2=tt[h2].r,h1=tt[h1].r;l=mid+1;
		}
	}
	return su;
}
int main()
{
	int tes;gn(tes);
	while(tes--){
		ndtot=0;
		int que,fl=0;
		gn(n);gn(m);gn(que);
		t[0].ch[0]=t[0].ch[1]=t[0].pre=t[0].fl=t[0].up=0;
		t[0].mi=t[0].v=inf;
		for (int i=1;i<=m+n;i++)t[i]=t[0];
		for (int i=1;i<=m;i++){
			gn(x[i]);
			gn(y[i]);
			if(x[i]==y[i])f[i]=m+1;
			else{
				if(gr(x[i])!=gr(y[i]))	f[i]=0;
				else{
					int mi=quemi(x[i],y[i]);
					f[i]=mi;
					cut(mi+n,x[mi]);
					cut(mi+n,y[mi]);
				}
				t[i+n].v=t[i+n].mi=i;
				lk(i+n,x[i]);
				lk(i+n,y[i]);
			}
		}
		for (int i=1;i<=m;i++)head[i]=add(head[i-1],f[i],0,m+1);
		int la=0;
		while(que--){
			int l,r;gn(l);gn(r);/*scanf("%d%d",&l,&r);*/l^=fl*la;r^=fl*la;if(l>r)swap(l,r);
			lim=l;
			printf("%d\n",la=n-(r-l+1)+Que(head[l-1],head[r]));
		}
	}
	return 0;
}
			
