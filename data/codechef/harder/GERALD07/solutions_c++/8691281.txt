#include <cstdio>
#include <cmath>
#include <memory.h>
#include <algorithm>
using namespace std;
#define MAX 200010
int e1[MAX],e2[MAX],f[MAX],l[MAX],b[MAX],order[MAX],visit[MAX],v2[MAX],rank[MAX],r2[MAX],fat[MAX],f2[MAX],ans[MAX],flag,fl2;
int getfather(int x)
{
	if(visit[x]<flag){visit[x]=flag;fat[x]=x;rank[x]=1;}
	return fat[x]==x?x:getfather(fat[x]);
}
int getfather2(int x)
{
	if(v2[x]<fl2){v2[x]=fl2;f2[x]=x;r2[x]=1;}
	return f2[x]==x?x:getfather2(f2[x]);
}
bool cmp(int x,int y)
{
	return b[x]<b[y]||b[x]==b[y]&&l[x]<l[y];
}
int main()
{
	int t;
	scanf("%d",&t);
	flag=fl2=order[0]=b[0]=0;
	while(t--)
	{
		int n,m,q,now,sum;
		scanf("%d%d%d",&n,&m,&q);
		for(int i=1;i<=m;i++)
			scanf("%d%d",&e1[i],&e2[i]);
		int qs=floor(1.2*sqrt(m));
		for(int i=1;i<=q;i++)
		{
			scanf("%d%d",&f[i],&l[i]);
			b[i]=(f[i]-1)/qs+1;
			order[i]=i;
		}
		sort(order+1,order+1+q,cmp);
		for(int i=1;i<=q;i++)
		{
			if(b[order[i]]!=b[order[i-1]])
			{
				now=b[order[i]]*qs;
				flag++;
				sum=n;
			}
			for(int j=now+1;j<=l[order[i]];j++)
			{
				int x=getfather(e1[j]),y=getfather(e2[j]);
				if(x==y)continue;
				sum--;
				if(rank[x]<rank[y])fat[x]=y;
				else{fat[y]=x;if(rank[x]==rank[y])rank[x]++;}
			}
			if(now<l[order[i]])now=l[order[i]];
			fl2++;
			int sum2=sum;
			for(int j=min(b[order[i]]*qs,l[order[i]]);j>=f[order[i]];j--)
			{
				int x=getfather(e1[j]),y=getfather(e2[j]);
				if(x==y)continue;
				int x2=getfather2(x),y2=getfather2(y);
				if(x2==y2)continue;
				sum2--;
				if(r2[x2]<r2[y2])f2[x2]=y2;
				else{f2[y2]=x2;if(r2[x2]==r2[y2])r2[x2]++;}
			}
			ans[order[i]]=sum2;
		}
		for(int i=1;i<=q;i++)printf("%d\n",ans[i]);
	}
	return 0;
}