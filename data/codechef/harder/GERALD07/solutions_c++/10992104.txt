#include <cstdio>

#include <cmath>

#include <cstring>

#include <iostream>

#include <algorithm>

#include <queue>

#include <vector>

#include <map>



using namespace std;



typedef long long LL;


int T,m,n,q;
struct EE
{
	int x,y;
}e[200005];
struct QQ
{
	int l,r,id,x;
}f[200005],qq[200005];
vector<QQ> v[200005];
int nn;
int ans[200005];
int sum,cur;
int fa[200005],siz[200005],top;
bool cmp(QQ a,QQ b)
{
	return a.r<b.r;
}
void init(int n)
{
	for (int i=1;i<=n;++i) 
	{
		fa[i]=i;
		siz[i]=1;
	}
	sum=n;cur=0;
	top=0;
}
void link(int x,int y)
{
	while (x!=fa[x]) x=fa[x];
	while (y!=fa[y]) y=fa[y];
	if (x==y) return;
	if (siz[x]>siz[y])

    {

        fa[y]=x;siz[x]+=siz[y];

        ++top;qq[top].l=x;qq[top].r=y;qq[top].id=cur;qq[top].x=sum;
        sum--;

    }

    else

    {

        fa[x]=y;siz[y]+=siz[x];

        ++top;qq[top].l=y;qq[top].r=x;qq[top].id=cur;qq[top].x=sum;
        sum--;

    }
}
void restore(int tt)

{

    while (top>0&&tt<qq[top].id)

    {

        int x=qq[top].l,y=qq[top].r;

        fa[y]=y;

        siz[x]-=siz[y];
        sum=qq[top].x;
	        --top;
    }
    cur=tt;

}

int main()

{

	scanf("%d",&T);

	while (T--)

	{

		scanf("%d%d%d",&n,&m,&q);

		for (int i=1;i<=m;++i) scanf("%d%d",&e[i].x,&e[i].y);
		for (int i=1;i<=q;++i) scanf("%d%d",&f[i].l,&f[i].r);
		for (int i=1;i<=q;++i) f[i].id=i;
		sort(f+1,f+q+1,cmp);
		nn=(int)sqrt(1.0*m);
		for (int i=0;i<=m;++i) v[i].clear();
		for (int i=1;i<=q;++i) v[f[i].l/nn].push_back(f[i]);
		for (int i=0;i<=m;++i)
		{
			if (v[i].size()==0) continue;
			init(n);
			int j=0;
			int dqr=nn*(i+1);
			while (j<v[i].size()&&v[i][j].r<dqr)
			{
				cur=1;
				for (int k=v[i][j].l;k<=v[i][j].r;++k)
					link(e[k].x,e[k].y);
				ans[v[i][j].id]=sum;
				restore(0);
				++j;
			}
			while (j<v[i].size())
			{
				while (dqr<=v[i][j].r)
				{
					link(e[dqr].x,e[dqr].y);
					dqr++;
				}
				cur=1;
				for (int k=nn*(i+1)-1;k>=v[i][j].l;--k)
					link(e[k].x,e[k].y);
				ans[v[i][j].id]=sum;
				restore(0);
				++j;
			}
		}
		for (int i=1;i<=q;++i) printf("%d\n",ans[i]);
	}

	return 0;

}