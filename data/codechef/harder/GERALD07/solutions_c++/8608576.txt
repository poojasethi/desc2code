#include <bits/stdc++.h>
using namespace std;
#define md int(2e5+100)
#define modul int(1e9+7)
#define FOR(i,a,b) for( int i=(a),_b=(b);i<=_b;i++)
#define DOW(i,b,a) for( int i=(b),_a=(a);i>=_a;i--)
int xx[4]={0,0,1,-1};
int yy[4]={1,-1,0,0};
typedef long long ll;
int n,m,q;
int len;
pair<int,int> c[md];
int d,d2,r[md];
vector< pair<int,int> >save;

struct re
{
    int l,r,q;
};

re a[md];
int lab[md],lab2[md];

int root(int x)
{
    while (lab[x]>0) x=lab[x];
    return x;
}

void uni(int x, int y)
{
    if (lab[x]>lab[y]) swap(x,y);
    lab[x]+=lab[y];
    lab[y]=x;
}

int root2(int x)
{
    while (lab2[x]>0) x=lab2[x];
    return x;
}

void uni2(int x, int y)
{
    if (lab2[x]>lab2[y]) swap(x,y);
    lab2[x]+=lab2[y];
    lab2[y]=x;
}

bool cmp(re a, re b)
{
    if (a.l/len<b.l/len || (a.l/len==b.l/len && a.r<b.r)) return true;
    return false;
}

int main()
{
    //freopen("inp.txt","r",stdin);
    //freopen("o1.txt","w",stdout);
    int tcase;
    scanf("%d",&tcase);
    FOR(o,1,tcase)
    {
        scanf("%d%d%d",&n,&m,&q);
        FOR(i,1,m)
        scanf("%d%d",&c[i].first,&c[i].second);


        FOR(i,1,q)
        {
            scanf("%d%d",&a[i].l,&a[i].r);
            a[i].q=i;
        }

        len=int(sqrt(n))+1;
        sort(a+1,a+1+q,cmp);
        int i=1;
        while (i<=q)
        {
            FOR(x,1,n) { lab[x]=-1; lab2[x]=-1; }
            int j=i-1;
            int lef=( a[i].l/len+1) *len-1;
            int done=lef+1;
            d=0;
            while (j+1<=q && a[j+1].l/len==a[i].l/len)
            {
                j++;

                if (a[j].r/len==a[j].l/len)
                {
                    d=0;
                    FOR(k,a[j].l,a[j].r)
                    {
                        int x=c[k].first, y=c[k].second;
                        int u=root(x), v=root(y);
                        if (u!=v)
                        {
                            uni(u,v);
                            d++;
                        }
                    }
                    r[a[j].q]=n-d;
                    d=0;
                    FOR(k,a[j].l,a[j].r)
                    {
                        lab[c[k].first]=-1;
                        lab[c[k].second]=-1;
                    }
                }
                else
                {
                    FOR(k,done,a[j].r)
                    {
                        //if (j==8) cout<<k<<endl;
                        int x=c[k].first, y=c[k].second;
                        int u=root(x), v=root(y);
                        if (u!=v)
                        {
                            uni(u,v);
                            uni2(u,v);
                            d++;
                        }
                    }
                    int d2=d;
                    save.clear();
                    FOR(k,a[j].l,min(m,lef))
                    {
                        int x=c[k].first, y=c[k].second;
                        int u=root2(x), v=root2(y);
                        if (u!=v)
                        {
                            save.push_back(make_pair(u,v));
                            uni2(u,v);
                            d2++;
                        }
                    }
                    r[a[j].q]=n-d2;

                    FOR(k,0,int(save.size())-1)
                    {
                        lab2[save[k].first]=lab[save[k].first];
                        lab2[save[k].second]=lab[save[k].second];
                    }
                    done=a[j].r+1;
                }
            }
            i=j+1;
        }
        //return 0;
        FOR(i,1,q)
        printf("%d\n",r[i]);
    }
}
