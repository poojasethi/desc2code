#include<stdio.h>
#include<iostream>
#include<string.h>
#include<queue>
#include<algorithm>
#include<string>
#include<map>
#include<set>
#include<sstream>
#include<cmath>
#include<assert.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define pi acos(-1)
#define inf 1001001001
#define mod 1000000007
//const ll inf = 1000000000005LL;
#define pii pair<int,int>
#define vi vector<int>
#define all(x) x.begin(),x.end()
#define mp make_pair
#define pb push_back
#define x first
#define y second
#define N 250010

#define DBG(vari) cerr<<#vari<<"="<<(vari)<<endl;
#define FOREACH(i,t) for(typeof(t.begin()) i=t.begin();i!=t.end();i++)

struct point
{
	int x,y;
	point(){}
	point(int _x,int _y):x(_x),y(_y){}
	bool operator <(const point &p)const
	{
		return x<p.x||x==p.x&&y<p.y;
	}
};
typedef vector<point> VP;
struct segm
{
	int x,y1,y2;
	bool operator <(const segm &s)const
	{
		return x<s.x||(x==s.x&&(y1<s.y1||y1==s.y1&&y2<s.y2));
	}
	bool operator==(const segm &s)const
	{
		return x==s.x&&y1==s.y1&&y2==s.y2;
	}
};
typedef vector<segm> VSG;
ll gen(VP &a,VP &b,int sA,int sB,int dA,int dB,VSG &s)
{
	s.clear();
	sort(all(b));
	for(int i=0;i<a.size();i++)
	{
		int x=a[i].x,y=a[i].y;
		int y1=max(sA-x,x-dB);
		int y2=min(sB-x,x-dA);
		int j=lower_bound(all(b),a[i])-b.begin();
		if(j<b.size()&&b[j].x==x)y2=min(y2,b[j].y-1);
		if(j>0&&b[j-1].x==x)y1=max(y1,b[j-1].y+1);
		segm cur={x,y1,y2};
		s.pb(cur);
	}
	sort(all(s));
	s.erase(unique(all(s)),s.end());
	ll ans=0;
	for(int i=0;i<s.size();i++)
	ans+=s[i].y2-s[i].y1+1;
	return ans;
}
void swapXY(VP &a)
{
	for(int i=0;i<a.size();i++)swap(a[i].x,a[i].y);
}
struct event
{
	int x,tp,y1,y2;
	event(){}
	event(int x_,int tp_,int y1_,int y2_=0){x=x_;tp=tp_,y1=y1_;y2=y2_;}
	bool operator<(const event&e)const
	{
		return x<e.x||x==e.x&&tp<e.tp;
	}
};
ll intersect(VSG &a,VSG &b)
{
	vi y;
	for(int i=0;i<b.size();i++)y.pb(b[i].x);
	sort(all(y));
	y.erase(unique(all(y)),y.end());
	vector<event>ev;
	for(int i=0;i<a.size();i++)
	ev.pb(event(a[i].x,0,a[i].y1,a[i].y2));
	for(int i=0;i<b.size();i++)
	ev.pb(event(b[i].y1,-1,b[i].x)),
	ev.pb(event(b[i].y2,+1,b[i].x));
	sort(all(ev));
	int n=ev.size();
	vi f(n+1,0);
	ll ans=0;
	for(int i=0;i<ev.size();i++)
	{
		int tp=ev[i].tp;
		if(tp)
		{
			int j=lower_bound(all(y),ev[i].y1)-y.begin()+1;
			for(;j<=n;j+=j&-j)f[j]-=tp;
		}
		else
		{
			int j1=lower_bound(all(y),ev[i].y1)-y.begin();
			int j2=upper_bound(all(y),ev[i].y2)-y.begin();
			for(int j=j2;j>0;j-=j&-j)ans+=f[j];
			for(int j=j1;j>0;j-=j&-j)ans-=f[j];
		}
	}
	return ans;
}
// sA<=x+y<=sB, dA<=x-y<=dB
ll calc(VP &a,VP &b,int sA,int sB,int dA,int dB)
{
	ll ans=0;
	VSG x,y;
	ans+=gen(a,b,sA,sB,dA,dB,x);
	swapXY(b);
	swapXY(a);
	ans+=gen(a,b,sA,sB,-dB,-dA,y);
	ans-=intersect(x,y);
	return ans;
}
int main()
{
	int W,n,m;
	scanf("%d%d%d",&W,&n,&m);
	VP b[2],o[2];
	for(int i=0;i<n+m;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		int r=(x+y)%2;
		int u=(x+y-r)/2;
		int v=(x-y-r)/2;
		(i<n?b[r]:o[r]).pb(point(u,v));
	}
	ll ans=0;
	for(int r=0;r<=1;r++)
	ans+=calc(b[r],o[r],1-r,W-r,1,W);
	printf("%lld\n",ans);
	return 0;
}