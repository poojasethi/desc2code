#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>

inline int read() {
  static char ch;
  while ((ch = getchar()) < '0' || ch > '9');
  int res = ch - 48;
  while ((ch = getchar()) >= '0' && ch <= '9')
    res = res * 10 + ch - 48;
  return res;
}

const int N = 1e5 + 10;
int dataT, n;
int a[N], b[N], c[N];
int sum[5], pos[5][N];

void Modify(int x) {
  if (c[x] == 2) return (void)(pos[2][++sum[2]] = x);
  if (c[x] == 3) return (void)(pos[3][++sum[3]] = x);
  if (c[x] == -2) {
    if (sum[3] > 0) {
      c[x] += 4;
      int y = pos[3][sum[3]--];
      c[y] -= 4;
      pos[2][++sum[2]] = x;
    }
    return ;
  }
  if (c[x] == -3) {
    if (sum[3] > 0) {
      c[x] += 4;
      int y = pos[3][sum[3]--];
      c[y] -= 4;
    } else if (sum[2] > 0) {
      c[x] += 4;
      int y = pos[2][sum[2]--];
      c[y] -= 4;
    }
  }
}

int main() {
#ifndef ONLINE_JUDGE
  freopen("a.in", "r", stdin);
  freopen("a.out", "w", stdout);
#endif
  
  dataT = read();
  while (dataT--) {
    n = read();
    for (int i = 1; i <= n; ++i)
      a[i] = read();
    for (int i = 1; i <= n; ++i)
      b[i] = read();
    for (int i = 1; i <= n; ++i)
      a[i] = (b[i] - a[i] + 4) % 4;
    for (int i = 1; i <= n; ++i)
      c[i] = a[i] - a[i - 1];
    
    sum[2] = sum[3] = 0;
    for (int i = n; i >= 1; --i) {
      Modify(i);
    }
    
    int ans = 0;
    for (int i = 1; i <= n; ++i)
      ans += std::max(0, c[i]);
    printf("%d\n", ans);
  }
  return 0;
}