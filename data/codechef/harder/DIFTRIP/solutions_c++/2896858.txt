    #include<math.h>
    #include<algorithm>
    #include<cstdlib>
    #include<iostream>
    #include<stdio.h>
    #include<map>
    #include<ext/hash_map>
    #include<ext/hash_set>
    #include<set>
    #include<string>
    #include<vector>
    #include<queue>
    #include<deque>
    #include<sstream>
    #define INF 2001001001
    #define MA(a,b) ((a)>(b)?(a):(b))
    #define MI(a,b) ((a)<(b)?(a):(b))
    #define Pr 1000000007
    #define X first
    #define Y second
    #define mp make_pair
    #define pb push_back
    #define HASa(l,r) (Ha[(r)]-Ha[(l)-1])*P[N-(r)]
    #define HASb(l,r) (Hb[(r)]-Hb[(l)-1])*P[N-(r)]

    using namespace std;
    using namespace __gnu_cxx;
    const int N=101010;
    int n,m,i,I,x,y,j,k,mid,B,l,r,C,SZ=-1;
    vector <int> v[N];
    long long A,L,b[N][18];
    int a[N][18],H[N];
    pair <long long ,int> c[N];
    void go(int x,int f,int h)
    {
        H[x]=h;
        A+=h;
        a[x][0]=f;
        for (int i=0;i<v[x].size();i++)
            if (v[x][i]!=f) go(v[x][i],x,h+1);
    }
    int main()
    {
        cin>>n;
        for (i=1;i<n;i++)
        {
            scanf("%d%d",&x,&y);
            v[x].pb(y);
            v[y].pb(x);
        }
        go(1,0,1);
        for (j=1;j<18;j++)
        for (i=1;i<=n;i++)
        a[i][j]=a[a[i][j-1]][j-1];
        for (i=1;i<=n;i++) b[i][0]=v[i].size();

        for (i=1;i<=n;i++) c[i]=mp(b[i][0],i);
        sort(c+1,c+n+1);
        for (i=1,L=0;i<=n;i++)
        {
            if (L<c[i].X) {L=c[i].X; c[i].X=c[i-1].X+1;}
            else c[i].X=c[i-1].X;
        }
        for (i=1;i<=n;i++) b[c[i].Y][0]=c[i].X;

        for (k=1;k<18;k++)
        {
        for (i=1;i<=n;i++) c[i]=mp(b[i][k-1]*N+b[a[i][k-1]][k-1],i);
        sort(c+1,c+n+1);
        for (i=1,L=0;i<=n;i++)
        {
            if (L<c[i].X) {L=c[i].X; c[i].X=c[i-1].X+1;}
            else c[i].X=c[i-1].X;
        }
        for (i=1;i<=n;i++) b[c[i].Y][k]=c[i].X;
        }
         for(i=2;i<=n;i++)
        {
            x=c[i].Y;
            y=c[i-1].Y;
            for (j=17;j>=0 && x && y;j--)
            if (b[x][j]==b[y][j] && H[x]>=(1<<j) && H[y]>=(1<<j)) A-=(1<<j),x=a[x][j],y=a[y][j];
        }
        cout<<A<<endl;

        return 0;
    }
