#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<vector>
#include<math.h>
 using namespace std;
 
long long rank[300009][30],k,n,dist[300009],ox[30],raod[200009],i,j,x,y,sm[200009][30],t,t1,o,o1,r,msh[200009];
vector <long long> q[200009];
long long ans;
pair <pair<long long,long long>,long long> ric[400009];
 
void pashol(long long sad)
 {
 	   long long l;
	    
		for (l=0;l<q[sad].size();l++)
		 if (!dist[q[sad][l]])
		 {
		  sm[q[sad][l]][0]=sad;
		  dist[q[sad][l]]=dist[sad]+1;
		  
  		  pashol(q[sad][l]); 
	     }
 }
 
 
 long long fu(long long a1,long long b1){
        if (rank[a1][17]==rank[b1][17]) return min(dist[a1],dist[b1]);
	 
	 long long pas=0,k1;
	  for (k1=17;k1>=0;k1--)
	   {
	   	if (b1<=0 || a1<=0) break;
	   	if (rank[a1][k1]==rank[b1][k1])
	   	 {
	   	 	pas+=(1<<k1);
	   	 	a1=sm[a1][k1];
	   	 	b1=sm[b1][k1];
	   	 }
	   }	 		
 	 return pas;
 }
   
main()
{
  cin>>n;

   for (i=1;i<n;i++)
    {
     cin>>x>>y;
	  
	  q[x].push_back(y);
	  q[y].push_back(x);
	  raod[x]++;
	  raod[y]++;
	}
	
	dist[1]=1;
	pashol(1);
	 	
	 	
	 	
	   for (i=1;i<=17;i++)
	    for (j=1;j<=n;j++)
	    sm[j][i]=sm[sm[j][i-1]][i-1];
	 	
	 	
	 	for (i=1;i<=n;i++)
	 	  rank[i][0]=raod[i];
	 	 
		  for (k=1;k<=17;k++)
		   {
		   	
		   	 for (i=1;i<=n;i++)
		   	   {
		   	   	ric[i].first.first=rank[i][k-1];
		   	   	
					  if (dist[i]<=1<<(k-1)) ric[i].first.second=-1; else
					   ric[i].first.second=rank[sm[i][k-1]][k-1];
					   
			    ric[i].second=i;		   
		   	   }
			  
			  
			  sort (ric+1,ric+n+1); 
			  
			   rank[ric[1].second][k]=1;
			   
			   for (i=2;i<=n;i++)
			    if (ric[i-1].first==ric[i].first) rank[ric[i].second][k]=rank[ric[i-1].second][k]; else
			                                      rank[ric[i].second][k]=rank[ric[i-1].second][k]+1;
			                                      
		   }	 	 

	 	  
	 	 ans=0;
	 	 
	 	for (i=1;i<=n;i++)
	 	 ans+=dist[i];
	 	 
	 	 for (i=1;i<n;i++)
	 	  ans-=fu(ric[i].second,ric[i+1].second);
	 	  
	 	  cout<<ans<<endl;
	 	
}   