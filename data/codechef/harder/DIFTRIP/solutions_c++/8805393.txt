#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <map>
using namespace std;

int n,i,j,k,u,v,cnt;
int id[100005],d[100005],son[100005],next[200005],ed[200005];
bool vis[100005];

map <int,int> Trie[100005];

struct SAM
{
	map <int,int> trans;
	int len,fa;
}sam[400005];
int tot,root;

int add(int ch,int len,int tail)
{
	int p=tail,np=++tot,q,r;
	sam[np].len=len;
	for(;p&&!sam[p].trans[ch];p=sam[p].fa)sam[p].trans[ch]=np;
	tail=np;
	if(!p)sam[np].fa=root;
	else if(sam[sam[p].trans[ch]].len==sam[p].len+1)sam[np].fa=sam[p].trans[ch];
		else
		{
			q=sam[p].trans[ch];r=++tot;
			sam[r].fa=sam[q].fa;
			sam[r].trans=sam[q].trans;
			sam[r].len=sam[p].len+1;
			sam[q].fa=sam[np].fa=r;
			for(;p&&sam[p].trans[ch]==q;p=sam[p].fa)sam[p].trans[ch]=r;
		}
	return tail;
}

void dfs(int x,int y,int z,int t)
{
	vis[x]=true;
	if(!Trie[y][d[x]])Trie[y][d[x]]=++cnt,id[cnt]=add(d[x],z,t);
	y=Trie[y][d[x]];t=id[y];
	for(int i=son[x];i;i=next[i])if(!vis[ed[i]])dfs(ed[i],y,z+1,t);
	vis[x]=false;
}

long long ans;

int main()
{
	scanf("%d",&n);
	for(i=1;i<n;++i)
	{
		scanf("%d%d",&u,&v);++d[u];++d[v];
		++tot;next[tot]=son[u];son[u]=tot;ed[tot]=v;
		++tot;next[tot]=son[v];son[v]=tot;ed[tot]=u;
	}
	root=tot=1;cnt=0;
	dfs(1,0,1,1);
	for(i=2;i<=tot;++i)ans+=sam[i].len-sam[sam[i].fa].len;
	printf("%lld\n",ans);
}