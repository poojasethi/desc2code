#include <iostream>
#include <cstring>
#include <cmath>
#include <cstdio>
#include <algorithm>
using namespace std;
#define N 100050
#define M 21
#define Base +10079
#define PII pair <int,int>
#define fr first
#define sc second
#define mp make_pair
#define ll unsigned long long
int fi[N],c[N*2][2],fa[N][M],val[N],li[N],h[N],d[N],Rk[N][M];
int sg[N],_sg[N],n,m,ss=1,st,Mul;PII _li[N];ll ans;
inline int Read()
 {
 	int x=0;char y;
 	do y=getchar(); while (y<'0'||y>'9');
 	do x=x*10+y-'0',y=getchar(); while (y>='0'&&y<='9');
 	return x;
 }
inline void Line(int x,int y)
 {
 	val[x]++;val[y]++;
 	c[++ss][0]=y;c[ss][1]=fi[x];fi[x]=ss;
 	c[++ss][0]=x;c[ss][1]=fi[y];fi[y]=ss;
 	return;
 }
void DFS(int x)
 {
 	h[x]=h[fa[x][0]]+1;
 	for (int i=1;i<M;i++) fa[x][i]=fa[fa[x][i-1]][i-1];
 	for (int i=fi[x];i;i=c[i][1])
 	 if (c[i][0]!=fa[x][0])
 	   fa[c[i][0]][0]=x,DFS(c[i][0]);
 	return;
 }
inline bool cmp(int x,int y)
 {return li[x]<li[y]||(li[x]==li[y]&&
 	li[fa[x][Mul]]<li[fa[y][Mul]]);}
void Multi()
 {
 	for (int i=1;i<=n;i++) _sg[i]=i;
 	sort(_sg+1,_sg+n+1,cmp);st=false;
    for (int i=1;i<=n;i++)
     {
     	if (!(li[_sg[i]]==li[_sg[i-1]]&&
     	  li[fa[_sg[i]][Mul]]==li[fa[_sg[i-1]][Mul]])) st=i;
     	d[_sg[i]]=st;sg[i]=_sg[i];
     }
    memcpy(li,d,sizeof d);
    for (int i=1;i<=n;i++) Rk[i][Mul+1]=li[i];
 	return;
 }
int LCA(int x,int y)
 {
 	int len = false;
 	for (int i=Mul;~i;i--)
 	 if (Rk[x][i]==Rk[y][i])
 	   len += 1 << i, x = fa[x][i], y = fa[y][i];
 	return len;
 }
void Solve()
 {
 	for (int i=1;i<=n;i++) _li[i]=mp(val[i],i);
 	sort(_li+1,_li+n+1);
    for (int i=1;i<=n;i++)
     {
     	if (_li[i].fr!=_li[i-1].fr) st=i;
     	li[_li[i].sc]=st;sg[i]=_li[i].sc;Rk[_li[i].sc][0]=st;
     }
    for (Mul=false;(1 << Mul)<n;Mul++) Multi();
    for (int i=1;i<=n;i++)
     {
     	int len = false, k = sg[i], l = sg[i-1];
     	if (li[k]==li[l]) continue;
     	ans += h[sg[i]] - LCA(k,l);
     }
    return;
 }
int main()
 {
    n=Read();if (n==1) {cout <<1<<endl;exit(0);}
 	for (int i=1;i<n;i++) Line(Read(),Read());
 	DFS(1);Solve();cout <<ans<<endl;
 	return 0;
 }