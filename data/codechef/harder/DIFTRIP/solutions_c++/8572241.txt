#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
void gn(ll &x){
	int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
	if(c=='-')sg=-1,x=0;else x=c-'0';
	while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
	x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;

////////////////////////////////////
const int MAXV=100000+5;
////////////////////////////////////
struct edge{int v,next;}e[MAXV*2];int g[MAXV],etot;
void ae(int u,int v){
	e[etot].v=v;e[etot].next=g[u];g[u]=etot++;
}
int qu[MAXV],pre[MAXV];int n;
int p2[MAXV][22];
int hh[MAXV];
ll ha[MAXV];
int deg[MAXV];
void bfs(int rt){
	int p=0,q=0;
	pre[rt]=pre[0]=0;
	qu[q++]=rt;
	hh[rt]=0;
	ha[rt]=deg[rt];
	while(p!=q){
		int u=qu[p++];
		for (int i=g[u];~i;i=e[i].next)if(e[i].v!=pre[u]){
			pre[e[i].v]=u;
			qu[q++]=e[i].v;
			hh[e[i].v]=hh[u]+1;
			ha[e[i].v]=(ha[u]*314159+deg[e[i].v]);
		}
	}
	for (int i=1;i<=n;i++)p2[i][0]=pre[i];
	for (int i=1;i<=20;i++)
		for (int u=1;u<=n;u++)p2[u][i]=p2[p2[u][i-1]][i-1];
}
int pp[MAXV];


int gp(int u,int x){
	for (int i=0;x;i++)if(1<<i&x){
		u=p2[u][i];
		x^=(1<<i);
	}
	return u;
}
int cnt[MAXV],sa[MAXV],tmp1[MAXV],tmp2[MAXV],rk[MAXV],h[MAXV];
void work(){
	int i,num;
	for (i=1;i<=n;i++)pp[i]=pre[i];

	int *x=tmp1,*y=tmp2;
	for (i=0;i<n;i++)cnt[i]=0;
	for (i=0;i<=n;i++)cnt[deg[i]]++;
	for (i=1;i<n;i++)cnt[i]+=cnt[i-1];
	for (i=n;i>=0;i--)sa[--cnt[deg[i]]]=i;
	for (num=i=1,x[sa[0]]=0;i<=n;i++)x[sa[i]]=deg[sa[i-1]]==deg[sa[i]]?num-1:num++;
	for(int len=1;len<=n+1;len<<=1){
		for (i=0;i<num;i++)cnt[i]=0;
		for (i=0;i<=n;i++)cnt[x[pp[i]]]++;
		for (i=1;i<num;i++)cnt[i]+=cnt[i-1];
		for (i=n;i>=0;i--)y[--cnt[x[pp[i]]]]=i;

		for (i=0;i<num;i++)cnt[i]=0;
		for (i=0;i<=n;i++)cnt[x[i]]++;
		for (i=1;i<num;i++)cnt[i]+=cnt[i-1];
		for (i=n;i>=0;i--)sa[--cnt[x[y[i]]]]=y[i];

		swap(x,y);
		for (num=i=1,x[sa[0]]=0;i<=n;i++)
			x[sa[i]]= y[sa[i-1]]==y[sa[i]]&&y[pp[sa[i-1]]]==y[pp[sa[i]]] ?num-1:num++;

		for (i=n-1;i>=0;i--){
			int u=qu[i];
			pp[u]=pp[pp[u]];
		}
	}
	for (i=0;i<=n;i++)
		rk[sa[i]]=i;
}
int ml[MAXV];
void ch(){
	for (int k=n-1;k>=0;k--){
		int i=qu[k];
		int l=ml[i];
		int j=sa[rk[i]-1];
		if(ha[i]==ha[j]){
			h[rk[i]]=hh[i]+1;
			continue;
		}
		for (;gp(j,l) && deg[gp(j,l)]==deg[gp(i,l)];l++);
		h[rk[i]]=l;
		if(pre[i]!=pre[j])ml[pre[i]]=max(ml[pre[i]],l-1);
	}
	h[0]=0;
}

int main(){
	etot=0;
	memset(g,-1,sizeof(g));
	gn(n);
	if(n==1){
		printf("1\n");
		return 0;
	}
	for (int i=1;i<n;i++){
		int x,y;gn(x);gn(y);
		ae(x,y);ae(y,x);
		deg[x]++;
		deg[y]++;
	}
	bfs(1);
	work();
	ch();
	ll su=0;
	for (int i=1;i<=n;i++)su+=hh[i]+1;
	for (int i=1;i<=n;i++)su-=h[i];
	cout<<su<<endl;
	return 0;
}
