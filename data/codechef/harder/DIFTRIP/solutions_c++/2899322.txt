#include<iostream>
#include<cstring>
#include<stdio.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define F first
#define S second
using namespace std;
const int n_max=100002;
int n,i,j,k,x,y,cur,lg,h[n_max];
int par[n_max][23],dp[n_max][23];
vector<int> g[n_max];
vector<pair<long long,int> > v;
long long e,ans;


void go(int u,int p){
     int i;
     h[u]=h[p]+1;
     par[u][0]=p;
     for(i=1;i<=lg;i++)
        par[u][i]=par[par[u][i-1]][i-1];

     v.pb(mp((long long)g[u].size(),u));
     for(i=0;i<g[u].size();i++)
        if(g[u][i]!=p)go(g[u][i],u);
}


main()
{scanf("%d",&n);
 for(i=1;i<n;i++){
    scanf("%d%d",&x,&y);
    g[x].pb(y);
    g[y].pb(x);
 }
 while((1<<lg)<n)lg++;
 go(1,0);
 sort(v.begin(),v.end());
 dp[v[0].S][0]=cur=1;
 for(i=1;i<n;i++){
    if(v[i].F!=v[i-1].F)cur++;
    dp[v[i].S][0]=cur;
 }

 for(j=1;j<=lg;j++){
     v.clear();
     for(i=1;i<=n;i++){
        e=(long long)dp[i][j-1]*(n+1)+dp[par[i][j-1]][j-1];
        v.pb(mp(e,i));
     }
     sort(v.begin(),v.end());
     dp[v[0].S][j]=cur=1;
     for(i=1;i<n;i++){
        if(v[i].F!=v[i-1].F)cur++;
        dp[v[i].S][j]=cur;
     }

    }
 ans=h[v[0].S];
 for(i=1;i<n;i++){
    x=v[i].S;
    y=v[i-1].S;
    cur=0;
    for(j=lg;j>=0 && x>0 && y>0;j--)
        if(dp[x][j]==dp[y][j])cur+=(1<<j),x=par[x][j],y=par[y][j];

    x=v[i].S;
    cur=MIN(cur,h[x]);
    ans+=(long long)h[x]-cur;
 }
 cout<<ans<<endl;
}
