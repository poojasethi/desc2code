#include<stdio.h>
#include<string.h>
#include<ctype.h>
#include<stdlib.h>
#include<cmath>
#include<assert.h>

#define FO(i,s,e,p) for(int i=(s);i<(e);i+=p)
#define FOD(i,s,e,p) for(int i=(s);i>(e);i-=p)


#define FOR(i,s,e) FO(i,s,e,1)
#define FORE(i,s,e) FOR(i,s,e+1)
#define FORD(i,s,e) FOD(i,s,e,1)
#define FORDE(i,s,e) FORD(i,s,e-1)

#define ALL(i,s) for(__typeof((s).begin()) i=(s).begin();i!=(s).end();i++)

#define MEM(tab,fill) memset(tab,fill,sizeof(tab))

#include<iostream>
#include<set>
#include<vector>
#include<string>
#include<sstream>
#include<stack>
#include<queue>
#include<algorithm>
#include<utility>
#include<bitset>
#include<map>

using namespace std;
#define ll  long long
#define inf ((1LL<<30)-1)
#define deb(a) cout<<#a<<" "<<a<<endl
#define pb push_back
#define mp make_pair

#define llu unsigned long long
#define PI pair<int,int>

int deg[100100];
vector<int> x[100010];
int P[18][100010];
int HEG[100100];
void dfs(int on,int p=-1,int h=1)
{
    P[0][on]=p;
    HEG[on]=h;
    ALL(i,x[on]) if(*i!=p) dfs(*i,on,h+1);
}

long long key[18][100100];
int pos[100100];

int LG;


bool cm(int a,int b){
    return key[LG][a]<key[LG][b];
}

void pre(int n)
{
    FOR(j,1,18){
        FOR(i,0,n)
        if(P[j-1][i]!=-1) P[j][i]=P[j-1][P[j-1][i]];
        else P[j][i]=-1;
    }
}

void complca(int n)
{
    LG=0;
    FOR(i,0,n) key[0][i]=deg[i];
    FOR(i,0,n) pos[i]=i;
    sort(pos,pos+n,cm);

    LG=1;
    for(int l=1;l<n;l*=2,LG++){

        FOR(i,0,n) pos[i]=i;


        FOR(i,0,n) {
            key[LG][i]=key[LG-1][i]*1000000LL;
            if(P[LG-1][i]!=-1) key[LG][i]+=key[LG-1][P[LG-1][i]];
        }

        sort(pos,pos+n,cm);

        ll last=-1;
        int on=0;
        FOR(i,0,n){
            if(key[LG][pos[i]]!=last) on++,last=key[LG][pos[i]];
            key[LG][pos[i]]=on;
        }

    }
    LG--;
}

int LCP(int a,int b)
{
    int len=0;
    for(int i=LG;i>=0 && a>=0 && b>=0;i--){
        if(HEG[a]>=(1<<i) && HEG[b]>=(1<<i) && key[i][a]==key[i][b]) len+=1<<i,a=P[i][a],b=P[i][b];
    }
    //cout<<len<<endl;
    return len;
}



int main()
{
    //freopen("C:\\a","r",stdin);
    int n;cin>>n;
    FOR(i,1,n){
        int a,b;scanf("%d%d",&a,&b);a--;b--;
        x[a].pb(b);x[b].pb(a);
        deg[a]++;deg[b]++;
    }
    dfs(0,-1);
    pre(n);
    complca(n);

    ll z=LCP(pos[0],pos[0]);

    //FOR(i,0,n) cout<<pos[i]<<' ';cout<<endl;

    FOR(i,1,n) z+=HEG[pos[i]]-LCP(pos[i],pos[i-1]);
    cout<<z<<endl;

    return 0;
}
