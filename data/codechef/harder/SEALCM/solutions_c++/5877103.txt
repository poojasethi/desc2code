#include<bits/stdc++.h>

using namespace std;

#define vi vector < int >
#define pii pair < int , int >
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define foreach(it,v) for( __typeof((v).begin())it = (v).begin() ; it != (v).end() ; it++ )
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000
#define dbg(x) { cout<< #x << ": " << (x) << endl; }
#define dbg2(x,y) { cout<< #x << ": " << (x) << " , " << #y << ": " << (y) << endl; }
#define all(x) x.begin(),x.end()
#define mset(x, v) memset(x, v, sizeof(x))
#define sz(x) (int)x.size()

ll modpow(ll a,ll b)
{
    ll r = 1;
    while(b)
    {
        if(b&1)
            r = (r*a)%MOD;
        b >>= 1;
        a = (a*a)%MOD;
    }
    return r;
}

int get(int m,vi v)
{
    int i,j;
    int n = sz(v);
    int ret = 0;
    for(i=0;i<(1<<n);i++)
    {
        int c = 0;
        int val = 1;
        for(j=0;j<n;j++)
        {
            if(i&(1<<j))
            {
                c++;
                val *= v[j];
            }
        }
        if(c&1)
            ret -= (m/val);
        else
            ret += (m/val);
    }
    return ret;
}

ll solve(int n,int m,int d)
{
    vi a;
    int i,j;
    for(i=2;i*i<=d;i++)
    {
        if(d%i == 0)
        {
            int tmp = 1;
            while(d%i == 0)
            {
                tmp *= i;
                d/=i;
            }
            a.pb(tmp);
        }
    }
    if(d > 1)
    {
        a.pb(d);
    }
    ll ans = modpow(m,n);
    int N = sz(a);
    for(i=1;i<(1<<N);i++)
    {
        int tmp = 1;
        int c = 0;
        vi v;
        for(j=0;j<N;j++)
        {
            if(i&(1<<j))
            {
                c++;
                v.pb(a[j]);
            }
        }
        int cnt = get(m,v);
        ll val = modpow(cnt,n);
        if(c&1)
            ans -= val;
        else
            ans += val;
        if(ans >= MOD)
            ans -= MOD;
        if(ans < 0)
            ans += MOD;
    }
    return ans;
}

int cc;

int lcm(int a,int b)
{
    return a * (b/__gcd(a,b));
}

void go(int n,int m,int pos,int d,int l)
{
    if(pos == n)
    {
        if(l%d == 0)
            cc++;
        return;
    }
    int i;
    for(i=1;i<=m;i++)
    {
        int nl = lcm(l,i);
        go(n,m,pos+1,d,nl);
    }
}

ll brute(int n,int m,int d)
{
    int i,j;
    cc = 0;
    go(n,m,0,d,1);
    return cc;
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m,l,r;
        scanf("%d%d%d%d",&n,&m,&l,&r);
        ll ans = 0;
        ll bt = 0;
        while(l <= r)
        {
            ans += solve(n,m,l);
            if(ans >= MOD)
                ans -= MOD;
            l++;
        }
        printf("%lld\n",ans);
    }
    return 0;
}
