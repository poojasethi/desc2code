#include<iostream>
#include<vector>
#include<cmath>
#include<cstring>
using namespace std;
//vector<int> mask(1001,0);
//vector<vector<long long> > base(1<<5,vector<long long>(1<<5,0));
vector<int> factors;
int mask[1005];
long long base[1<<5][1<<5];
int N,M,L,R;

void factorize(int num)
{
           /* factors.clear();
            int temp=num;
            //vector<int> factors;
            for(int i=2;i<=temp;i++)
            {
                    int t=1;
                    while(temp>1 && temp%i==0)
                    {
                                    t*=i;
                                    temp/=i;
                    }
                    if(t>1) factors.push_back(t);
                    
            }
            //return factors;
            */
             factors.clear();
 
             for(int i=2;i*i<=num;i++)
             if(num % i == 0){
                    int val = 1;
                    while(num % i == 0){
                    num /= i;
                    val *= i;
            }
            factors.push_back(val);
        }
 
         if(num > 1) factors.push_back(num);
}

void init()
{
     int f=factors.size();
     int sz=(1<<f);
     
     //for(int i=0;i<1001;i++) mask[i]=0;
     memset(mask, 0, sizeof(mask));
     for(int i=1;i<=M;i++)
     for(int j=0;j<f;j++)
     {
             if(i%factors[j]==0) mask[i]|=(1<<j);
     }
     
     /*for(int i=0;i<32;i++)
     for(int j=0;j<32;j++)
     base[i][j]=0;
     */
     memset(base, 0, sizeof(base));
     for(int i=0;i<sz;i++)
     for(int j=1;j<=M;j++)
     {
             //base[i][i|mask[j]]++;
             base[i|mask[j]][i]++;
     }
}

void mul(vector<vector<long long> > &a,vector<vector<long long> > &b,int r)
{
     vector<vector<long long> > temp1=a;
     vector<vector<long long> > temp2=b;
     for(int i=0;i<r;i++)
     for(int j=0;j<r;j++)
     {
             long long temp=0;
             for(int k=0;k<r;k++)
             {
                     temp=(temp+temp1[i][k]*temp2[k][j])%1000000007;
                     //a[i][j]=(a[i][j]+temp1[i][k]*temp2[k][j])%1000000007;
             }
             a[i][j]=temp;
     }
}

void matpow(vector<vector<long long> > &a,int r,int p)
{
     /*vector<vector<long long> > temp=a;
     int ps=int(log2(double(n)));
     int rs=n-pow(2.0,ps);
     for(int i=0;i<ps;i++) mul(a,a,r);
     for(int i=0;i<rs;i++) mul(a,temp,r);
     */
     vector<vector<long long> > ans(r,vector<long long>(r,0));
     for(int i=0;i<r;i++)    ans[i][i] = 1;
 
     while(p)
     {
        if(p&1) mul(ans, a,r);
        mul(a,a,r);
        p >>= 1;
    }
    a=ans;
}

void printbase()
{
     for(int i=0;i<32;i++)
     {
             for(int j=0;j<32;j++) cout<<base[i][j]<<" ";
             cout<<endl;
     }
}

int main()
{
    int T;
    cin>>T;
    while(T--)
    {
              
              cin>>N>>M>>L>>R;
              long long ans=0;
              for(int d=L;d<=R;d++)
              {
                      factorize(d);
                      int f=factors.size();
                      int sz=1<<f;
                      
                      init();
                      /*cout<<sz<<endl;
                      printbase();
                      cout<<endl<<endl;
                      */
                      vector<vector<long long> > arr(sz,vector<long long>(sz,0));
                      for(int i=0;i<sz;i++)
                      for(int j=0;j<sz;j++)
                      arr[i][j]=base[i][j];
                      
                      matpow(arr,sz,N);
                      ans+=arr[sz-1][0];
                      ans=ans%1000000007;
                      
              }
              cout<<ans<<endl;
    }
}
