#include<iostream>
#include<cstdio>
#include<vector>
#define maxm 1003
#define mod 1000000007
 
using namespace std;
 
vector<int> primes, fact[maxm];
int prime[maxm];
long long npow[maxm], ans[maxm], pow2[25], div[maxm];
int factor[maxm][maxm], min_fact[maxm];
void cal_prime()
{
    for(int i = 0; i < maxm; i++)prime[i] = 1;
    prime[1] = 1;
    for(int i = 2; i < maxm; i++)
    {
        if(prime[i] == 1)for(int j = i*i; j < maxm; j += i)prime[j] = 0;
    }
    for(int i = 1; i <= maxm; i++)if(prime[i] == 1)primes.push_back(i);
}
void cal_min_fact()
{
    for(int i = 0; i < maxm; i++)min_fact[i] = 0;
    min_fact[1] = 1;
    for(int i = 2; i < maxm; i++)if(!min_fact[i])for(int j = i; j < maxm; j += i)if(min_fact[j] == 0)min_fact[j] = i;
}
void cal_factor()
{
    for(int i = 0; i < maxm; i++)for(int j = 0; j < maxm; j++)factor[i][j] = 0;
    for(int i = 2; i < maxm; i++)
    {
        int j = i;
        while(j != 1)
        {
            int x = min_fact[j], ct = 0;
            int y = 1;
            while(j % x == 0)
            {
                j = j / x;
                y = y*x;
                ct++;
            }
            fact[i].push_back(x);
            factor[i][x] = y;
        }
    }
}
 
long long powerm(long long a, long long b)
{
    long long ans = 1;
    while(b)
    {
        if(b % 2 == 1)ans = (ans * a) % mod;
        a = (a * a) % mod;
        b = b / 2;
    }
    return ans;
}
 
int set_count(int x)
{
    int ct = 0;
    for(int i = 0; i <= 7; i++)
    {
        if((x & pow2[i]) != 0)ct++;
    }
    return ct;
}
 
int main()
{
    cal_prime();
    cal_min_fact();
    cal_factor();
    pow2[0] = 1;
    for(int i = 1; i < 20; i++)pow2[i] = 2 * pow2[i-1];
    int t;
    scanf("%d", &t);
    while(t--)
    {
        int n, m, l, r;
        scanf("%d%d%d%d", &n, &m, &l, &r);
 
        for(int i = 0; i <= m; i++)npow[i] = powerm(i, n);
 
        div[1] = 0;
        for(int i = 2; i <= m; i++)
        {
            div[i] = m;
            int sz = fact[i].size();
            int max_bit = pow2[sz] - 1;
            for(int j = 1; j <= max_bit; j++)
            {
                int dv = 1;
                for(int k = 0; k <= 7; k++)
                {
                    if((pow2[k] & j) != 0)dv *= factor[i][fact[i][k]];
                }
                int temp = m / dv;
                if(set_count(j)%2 == 0)div[i] += temp;
                else div[i] -= temp;
            }
        }
 
        for(int i = l; i <= r; i++)
        {
            ans[i] = npow[m];
            int sz = fact[i].size();
            int mx_bit = pow2[sz] - 1;
            for(int j = 1; j <= mx_bit; j++)
            {
                int y = 1;
                for(int k = 0; k < 13; k++)
                {
                    if((pow2[k] & j) != 0)y = y * factor[i][fact[i][k]];
                }
                if(set_count(j) % 2 == 0)ans[i] = (ans[i] + npow[div[y]]) % mod;
                else ans[i] = (ans[i] - npow[div[y]]) % mod;
            }
        }
        long long ans1 = 0;
        for(int i = l; i <= r; i++)ans1 = (ans[i] + ans1) % mod;
        if(ans1 < 0)ans1 += mod;
        printf("%lld\n", ans1);
    }
}
