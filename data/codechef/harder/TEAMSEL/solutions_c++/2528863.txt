#include <iostream>

using namespace std;

typedef long long int64;

const int N = 100;
int a[N];
int64 dp[N * 450 + 1];

int main() {
  int cas;
  cin >> cas;
  for (int num = 0; num < cas; ++num) {
    if (num) cout << endl;
    int n;
    cin >> n;
    int sum = 0;
    for (int i = 0; i < n; ++i) {
      cin >> a[i];
      sum += a[i];
    }
    int target = sum / 2;
    fill(dp, dp + target + 1, 0LL);
    dp[0] = 1LL;
    int m = 0;
    for (int i = 0; i < n; ++i) {
      m = min(target, m + a[i]);
      for (int j = m; j >= a[i]; --j) {
        dp[j] |= (dp[j - a[i]] << 1);
      }
    }
    for (int i = target; i >= 0; --i) {
      if ((dp[i] & (1LL << (n / 2))) || (dp[i] & (1LL << ((n + 1) / 2)))) {
        cout << i << " " << sum - i << endl;
        break;
      }
    }
  }
  return 0;
}
