#include<cstdio>
#include<iostream>
#include<ctime>
#include<cstdlib>
#include<map>
#include<string>
#include<vector>
#include<algorithm>
#include<cmath>
#include<set>
#include<queue>
#include<cstring>
using namespace std;

typedef long long LL;

const int MAXN = 450 * 100 + 5;
const int MAXM = 100;

int w[MAXM];
LL can[MAXN];

int main() {
	int T; scanf("%d", &T);
	for (int test = 0; test < T; test++) {
		int N; scanf("%d", &N);
		int sum = 0;
		for (int i = 0; i < N; i++) {
			scanf("%d", &w[i]);
			sum += w[i];
		}
		int bit1 = N / 2;
		int bit2 = N - N / 2;
		for (int i = 0; i <= sum; i++)
			can[i] = 0;
		can[0] = (1LL << 0);
		sum = 0;
		for (int i = 0; i < N; i++) {
			for (int j = sum + w[i]; j - w[i] >= 0; j--)
				can[j] |= (can[j - w[i]] << 1);
			sum += w[i];
		}
		int bestdiff = 1000000000;
		int first = 0, second = 0;
		for (int i = 0; i <= sum; i++) {
			if ((can[i] & (1LL << bit1)) || (can[i] & (1LL << bit2))) {
				if (bestdiff > abs (sum - 2 * i)) {
					bestdiff = abs (sum - 2 * i);
					first = i;
					second = sum - i;
				}
			}
		}
		if (first > second) swap (first, second);
		printf("%d %d\n\n", first, second); 
	}
	return 0;
}