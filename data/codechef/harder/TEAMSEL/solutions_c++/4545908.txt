    #include <string>
    #include <vector>
    #include <cstdlib>
    #include <cstdio>
    #include <cmath>
    #include <algorithm>
    #include <ctime>
    #include <list>
    #include <map>
    #include <set>
    #include <bitset>
    #include <functional>
    #include <utility>
    #include <iostream>
    #include <fstream>
    #include <sstream>
    #include <string.h>
    using namespace std;
    typedef unsigned int uint;
     
    const int maxn=100+5;
    const int maxa=450+5;
    const int maxsize=maxa*maxn/2;
     
    int n,a[maxn];
    uint f[(maxn+1)/2][(maxsize>>5)+1];
     
    int main()
    {
    int testcase;
    for (scanf("%d",&testcase);testcase>0;testcase--)
    {
    scanf("%d",&n);
    for (int i=0;i<n;i++) scanf("%d",&a[i]);
    sort(a,a+n);
    int sa=0;
    for (int i=0;i<n;i++) sa+=a[i];
    for (int i=0;i<=(n+1)/2;i++) memset(f[i],0,(((sa/2)>>5)+1)*sizeof(uint));
    f[0][0]|=1;
    int s=0;
    for (int k=0;k<n;k++)
    {
    int shift=a[k]&31,delta=a[k]>>5;
    int m=(s>>5)+1;
    for (int c=min((n+1)/2-1,k);c>=0;c--)
    {
    uint *f0=f[c],*f1=f[c+1];
    if (shift==0)
    for (int i=0;i<m;i++) f1[i+delta]|=f0[i];
    else
    for (int i=0;i<m;i++) f1[i+delta]|=f0[i]<<shift,f1[i+delta+1]|=f0[i]>>(32-shift);
    }
    s=min(s+a[k],sa/2);
    }
    int opt=sa/2;
    for (;((f[n/2][opt>>5]>>(opt&31))&1)==0 && ((f[(n+1)/2][opt>>5]>>(opt&31))&1)==0;opt--);
    printf("%d %d\n",opt,sa-opt);
    if (testcase>1) printf("\n");
    }
    return 0;
    } 