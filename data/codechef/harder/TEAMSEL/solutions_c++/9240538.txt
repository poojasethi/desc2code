#include<bits/stdc++.h>
#define s(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)
using namespace std;
typedef long long int LL;

int n;
int inp[105];
LL dp[450005];
void solve(bool islast)
{
      memset(dp,0,sizeof(dp));
      int upper = 0;
      for(int i=0;i<n;i++)
            upper += inp[i];
     
      for(int i=0;i<n;i++)
      {
            // Possible sums with inp[i] of atleast 2 elements
            for(int j=upper;j>=0;j--)
            {
                  if((j+inp[i])<=upper)
                        dp[j+inp[i]] = (dp[j+inp[i]] | (dp[j]<<1));
            }
            // Sum using just 1 element
            dp[inp[i]] = (dp[inp[i]]|1LL);
      }
      
      // Find maximum possible lower sum using n/2 elements
      for(int i=upper/2;i>=0;i--)
      {
            if(dp[i]&(1LL<<((n-1)/2)))
            {
                  cout<<i<<" "<<upper-i<<endl;
                  if(!islast)cout<<endl;
                  return;
            }
            else if(n%2==1)
            {
                  if(dp[i]&(1LL<<(n/2-1)))
                  {
                        cout<<i<<" "<<upper-i<<endl;
                        if(!islast)cout<<endl;
                        return;
                  }
            }
      }
      cout<<0<<" "<<upper<<endl;
      if(!islast)cout<<endl;
}
int main()
{
      int t;
      s(t);
      while(t--)
      {
            s(n);
            for(int i=0;i<n;i++)
                  s(inp[i]);
            solve(t==0);
      }
      return 0;
}
