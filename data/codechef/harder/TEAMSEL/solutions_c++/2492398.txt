#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<deque>
#include<map>
#include<set>
#include<utility>
using namespace std;

#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define pob pop_back
#define ll long long
#define MAX_SIZE 200005
#define MOD 1000000007
#define S(x) scanf("%d",&x)
#define SL(x) cin>>x
#define SC(x) scanf("%c",&x)
#define SS(x) scanf("%s",x)
#define SZ(x) x.size()
#define IT iterator
#define PI pair<int,int>
#define PL pair<ll,ll>
#define VI vector<int>
#define VL vector<ll>
#define VVI vector< VI >
#define VVL vector< VL >
#define VVP vector< PI >
#define READ() freopen("/Users/home/Desktop/input.txt","r",stdin)
#define WRITE() freopen("/Users/home/Desktop/output.txt","w",stdout)
#define dump() SC(dump_char)
int dump_char;
#define MAX_SUM 22500

long long int dp[MAX_SUM+5];
int n,arr[105];

void cal_subset()
{
    int i,j;
    
    for(i=0;i<n;i++)
    {
        for(j=MAX_SUM;j>0;j--)
        {
            if(dp[j] && j+arr[i]<=MAX_SUM)
            {
                dp[j+arr[i]]|=(dp[j]<<1);
            }
        }
        dp[arr[i]]|=1;
    }
}

int main()
{
    int t,dif,i,sum,d1,d2;
    
    S(t);
    while(t--)
    {
        dif=MAX_SUM,sum=0;
        S(n);
        for(i=0;i<n;i++)
        {
            S(arr[i]);
            sum+=arr[i];
        }
        memset(dp,0,sizeof(dp));
        cal_subset();
        n/=2;
        for(i=1;i<=MAX_SUM;i++)
        {
            if((dp[i] & (1ll<<n-1)) && dif>abs(2*i-sum))
            {
                d1=i;
                d2=sum-i;
                dif=abs(2*i-sum);
            }
        }
        
        printf("%d %d\n",min(d1,d2),max(d1,d2));
        if(t)
            printf("\n");
    }
    return 0;
}