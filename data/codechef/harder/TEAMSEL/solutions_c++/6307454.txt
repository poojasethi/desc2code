#include<cstdio>
#include<algorithm>
using namespace std;
 
#define N 105
int t[N][N],a[N],n;
 
int solve(int s,int e,int left,int curm,int maxm)
{
 if(left==0)
 if(curm<=maxm)
 return curm;
 else
 return 0;
 if(curm>maxm||(e-s+1)<left)
 return 0;
 if(t[n-left][n-1]+curm>maxm)
 return 0;
 int cur=0;
 for(int i=s;i<=e;i++)
 {
  if(cur>0&&t[i][i+left-1]+curm<=cur)
  return cur;
  cur=max(cur,solve(i+1,e,left-1,curm+a[i],maxm));
  if(cur==maxm)
  return cur;
 }
 return cur;
}
 
int main()
{
	int T,i,j,q,k,m;
	scanf("%d",&T);
	while(T--)
	{
	 scanf("%d",&n);
	 int sum=0;
	 for(i=0;i<n;i++)
	 {
	  scanf("%d",&a[i]);
	  sum+=a[i];
	 }
	 sort(a,a+n);
	 reverse(a,a+n);
	 for(i=0;i<n;i++)
	 {
	  int prev=0;
	  for(j=i;j<n;j++)
	  {
	   t[i][j]=prev+a[j];
	   prev=t[i][j];
	  }
	 }
	 int half=sum/2,ans,ans1=0;
	 if(n%2)
	 {
	  ans1=solve(0,n-1,(n+1)/2,0,half);
	 }
	 ans=solve(0,n-1,n/2,0,half);
	 ans=max(ans,ans1);
	 printf("%d %d\n\n",ans,sum-ans);
	}
	return 0;
} 