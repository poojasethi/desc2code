#include <iostream>
#include <string>
#include <vector>
#include <deque>
#include <queue>

#include <stack>
#include <set>
#include <bitset>
#include <map>

#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <climits>

#include <cstdio>
#include <cstring>
#include <cassert>
#include <sstream>

#include <list>
#include <numeric>
#include <functional>
#include <utility>

using namespace std;

#define REP(i,n) for(i=0;i<(int)n;i++)
#define ull unsigned long long int

inline void read (int &n)
{
  n = 0;

  int i = getchar_unlocked();

  while (i < '0' || i > '9')
    i = getchar_unlocked();

  while (i >= '0' && i <= '9')
    {
      n = (n << 3) + ( n << 1) + i - '0';
      i = getchar_unlocked();
    }
}

int main()
{
  int t;
  
  read (t);
  
  unsigned long long int dp[23000];

  while (t--)
    {
      int n;
      read (n);
      
      //assert (sizeof (ull) == 8);
      int weight[100];
      int sumW = 0;
      
      for (int i = 0; i < n; i++)
	{
	  read (weight[i]);
	  sumW += weight[i];
	}
      
      sort (&weight[0], &weight[n]);
      
      memset (dp, 0, sizeof (dp));
      dp[0] = 1;
      
      int R = 0;
      for (int j = 0; j < n; j++)
	{
	  for (int i = sumW>>1; i >= weight[j]; i--)
	    dp[i] |= (dp[i-weight[j]] << 1);	  
	}
      
      ull x = n >> 1;
      ull y = x + n % 2;
      x = 1LL << x;
      y = 1LL << y;
      
      int i;
      for (i = (sumW >> 1); i >= 0; i--)
	{
	  if ((dp[i] & x) || (dp[i] & y)) break;
	}
      
      
      cout << i << " " << sumW - i << endl;
      if (t) cout << endl;
    }
  
  return 0;
}
