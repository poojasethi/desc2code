#include<cstdio>
#include<cstring>
#include<algorithm>
int t,n,m,p,x,y,f[8888],c[8888],num[2];
int get(int x)
{
	if (f[x]==x) return x;
	return f[x]=get(f[x]);
}
bool work()
{
	if (f[1]==f[2]) return 1;
	int rest=(n*(n-1)/2-m)&1;	//1->need two even  0->need two odd
	if (n&1) return rest;
	if (p)
		if (rest) return num[0] || num[1]>2;
		else return num[0]<=1 && num[1]==2;
	else
		if (rest) return !x || !y;
		else return x || y;
}
int main()
{
	scanf("%d",&t);
	while (t--){
		scanf("%d%d%d",&n,&m,&p); num[0]=num[1]=0;
		for (int i=1;i<=n;i++) f[i]=i;
		for (int i=1;i<=m;i++){
			scanf("%d%d",&x,&y);
			int t1=get(x),t2=get(y);
			if (t1!=t2) f[t1]=t2;
			}
		for (int i=1;i<=n;i++) c[f[i]=get(i)]^=1; x=c[f[1]],y=c[f[2]];
		for (int i=1;i<=n;i++) if (f[i]==i) num[c[i]]++,c[i]=0;
		printf(work()?"First\n":"Second\n");
		}
	return 0;
}
 