#include<cstdio>
#include<algorithm>
#include<cassert>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
void gn(ll &x){
    int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
    if(c=='-')sg=-1,x=0;else x=c-'0';
    while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
    x*=sg;
}
int qp(int a,ll b,int mo){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
const int mo=1000000007;

int n,m,p;
int fa[11111];
int cnt[11111];
int gf(int x){return x==fa[x]?x:fa[x]=gf(fa[x]);}
void un(int x,int y){
	x=gf(x);y=gf(y);
	if(x!=y){
		cnt[y]+=cnt[x];
		fa[x]=y;
	}
}
int f[40][40][2][2][2][2];
int F(int no,int ne,int p1,int p2,int le,int tms){
	if(~f[no][ne][p1][p2][le][tms])return 
		f[no][ne][p1][p2][le][tms];
	int bo=0;
	if(le)bo|=!F(no,ne,p2,p1,0,tms);
	if(ne>=2){
		bo|=!F(no,ne-1,p2,p1,le^1,tms);
	}
	if(no>=2){
		bo|=!F(no-2,ne+1,p2,p1,le,tms);
	}
	if(ne>=1 && no>=1){
		bo|=!F(no,ne-1,p2,p1,le^1,tms);
	}
	if(no>=1){
		bo|=!F(no-1,ne,p2,p1^1,le^p1^1,tms);
		bo|=!F(no-1,ne,p2^1,p1,le^p2^1,tms);
	}
	if(ne>=1){
		bo|=!F(no,ne-1,p2,p1,le^1,tms);
	}
	if(tms>=1 &&no==0 && p1==1 && p2==1 && ne>=1){
		bo|=!F(no,ne-1,p2^p1,0,le^(p1&p2)^1,0);
	}
	return f[no][ne][p1][p2][le][tms]=bo;
}
int main()
{
	memset(f,-1,sizeof(f));
	int tes;gn(tes);
	for (int no=0;no<=30;no++)
		for (int ne=0;ne<=30;ne++)
			for (int p1=0;p1<2;p1++)
				for (int p2=0;p2<2;p2++)
					for (int le=0;le<2;le++)
						for (int tms=0;tms<2;tms++)
							F(no,ne,p1,p2,le,tms);
	while(tes--){
		gn(n);gn(m);gn(p);
		p=min(1,p);
		for (int i=1;i<=n;i++)fa[i]=i,cnt[i]=1;
		for (int tt=1;tt<=m;tt++){
			int x,y;gn(x);gn(y);
			un(x,y);
		}
		int nodd=0,neven=0;
		int tot=0;
		for (int i=1;i<=n;i++)if(gf(i)==i){
			if(cnt[i]&1)nodd++;
			else neven++;
			tot=(tot+1ll*cnt[i]*(cnt[i]-1)/2)%2;
		}
		if(gf(1)==gf(2)){
			printf("First\n");
			continue;
		}
		tot=((tot-m)%2+2)%2;
		int id1=cnt[gf(1)]&1,id2=cnt[gf(2)]&1;
		if(id1==0)neven--;else nodd--;
		if(id2==0)neven--;else nodd--;
		if(neven>20)neven-=(neven-20)/4*4;
		if(nodd>20)nodd-=(nodd-20)/4*4;
		int bo=F(nodd,neven,id1,id2,tot,p);
		if(bo)printf("First\n");
		else printf("Second\n");
	}
	return 0;
}
