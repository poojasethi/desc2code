#include <string>
#include <sstream>
#include <fstream>
#include <bitset>
#include <algorithm>
#include <vector>
#include <iostream>
#include <numeric>
#include <map>
#include <set>
#include <cmath>
#include <climits>
#include <string>
#include <bitset>
using namespace std;

int MOD = 1000000007;

long long modpow(long long n, long long k) {
	long long x = n, c = 1;
	while (k > 0) {
		if (k & 1)
			c = c * x % MOD;
		x = x * x % MOD;
		k >>= 1;
	}
	return c;
}

int factorial(int n) {
	static vector<int> fact(1, 1);
	if (fact.size() <= n) {
		long long s = fact.size();
		fact.resize(n + 1);
		for (long long i = s; i <= n; ++i) {
			fact[i] = fact[i - 1] * i % MOD;
		}
	}
	return fact[n];
}

int calc(long long N, long long M) {
	if (M % 2 == 0)
		return modpow((M - N) * (M - N + 1) % MOD, N - (M + 1) / 2)
				* factorial(M - N) % MOD;
	else
		return modpow((M - N) * (M - N + 1) % MOD, N - (M + 1) / 2)
				* factorial(M - N + 1) % MOD;
}

void solve() {
	int T;
	scanf("%d", &T);

	for (int i = 0; i < T; ++i) {
		int N, M;
		scanf("%d%d", &N, &M);

		printf("%d\n", calc(N, M));
	}
}

int main() {
	solve();
	return 0;
}
