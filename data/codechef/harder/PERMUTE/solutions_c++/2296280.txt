#include<bits/stdc++.h>
#define f(i,x,y) for (int i = int(x); i < int(y); i++)
#define fd(i,x,y) for(int i = int(x); i>= int(y); i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define vint vector<int>
#define pll pair<ll,ll>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define cua(x) (x)*(x)
#define oo 10000000
#define MAX 1000009
#define MOD 1000000007

using namespace std;
ll F[MAX];
void ini(){
    F[0] = 1LL;
    F[1] = 1LL;
    f(i,2,MAX){
        F[i] = F[i-1]*(ll)i;
        F[i] %= MOD;
    }
}

ll modpow(ll a, ll pot) {
    ll res = 1;
    for (; pot; pot >>= 1) {
        if (pot&1) res = res * a % MOD;
        a = a * a % MOD;
    }
    return res;
}

int main(){
    //freopen("in.c","r",stdin);
    ini();
    int TC,n,m;
    scanf("%d",&TC);
    while(TC--){
        scanf("%d%d",&n,&m);
        ll ind = m-n;
            ll ans = 0;
            //primero se multiplica por ind luego por ind+1
            ll num = n-(ind+1);
            if(num%2==0){
                ans = F[ind+1]*modpow(ind,num/2);
                ans%=MOD;
                ans = ans*modpow(ind+1,num/2);
                ans%=MOD;
            }else{
                //cout<<F[ind+1]<<"*"<<modpow(ind,(num/2)+1)<<endl;
                ans = F[ind+1]*modpow(ind,(num/2)+1);
                ans%=MOD;
                ans = ans*modpow(ind+1,num/2);
                ans%=MOD;
            }
            cout<<ans<<endl;

    }
    return 0;
}
