#pragma warning(disable:4786)
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<functional>
#include<string>
#include<cstring>
#include<cstdlib>
#include<queue>
#include<utility>
#include<fstream>
#include<sstream>
#include<cmath>
#include<stack>
#include<cstdio>
#include <ctime>
#include<cassert>

using namespace std;

#define MEM(a,b) memset(a,(b),sizeof(a))
#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define MIN(a,b)  ((a) < (b) ? (a) : (b))
#define istr(S) istringstream sin(S)
#define MP make_pair
#define pb push_back
#define inf 1000000000

typedef pair<int,int> pi;
typedef vector<int> vi;
typedef vector<string> vs;
typedef vector<double> vd;
typedef vector<pi> vpi;

#define inf 1000000000
#define   M 1000000007

#define maxn 1000000
#define maxt 100000
typedef long long LL;

LL modexp(LL a,LL b)
{
	if(b==0) return 1;
	if(b%2) return ((a%M)*modexp(a,b-1))%M;
	LL q=modexp(a,b/2);
	return (q*q)%M;
}


int fact[maxn+2];

int main()
{
	int i,j,k,tests,n,m;

	//gen();return 0;

	//freopen("4.in","r",stdin);
	//freopen("4.out","w",stdout);

	fact[0]=1;
	for(i=1;i<=maxn;i++) fact[i]=((LL)fact[i-1]*i)%M;

	scanf("%d",&tests);
	assert(1<=tests && tests<=maxt);

	while(tests--)
	{
		scanf("%d%d",&n,&m);


		assert(2<=n && n<=maxn);
		assert(n<m && m<2*n);

		LL p= ((LL)(m-n)*(m-n+1))%M;
		LL ans=modexp(p,n-m/2);
		ans=(ans*fact[ 2*(m/2)-n])%M;

		printf("%d\n",(int)ans);

	}
	return 0;
}
