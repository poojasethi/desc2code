#include<stdio.h>
#define mod 1000000007

inline int FAST_IO()
{	int x=0;
	char ch;
	int Negativity=0;
	while (((ch=getchar_unlocked()) < 48 || ch > 57) && ch != '-');		// ASCII value 0->9
	if (ch == '-')
		Negativity=1;
	else 
		x = ch-48;
	while ((ch=getchar_unlocked()) >= 48 && ch <= 57)
		x=x*10+ch-48;
	return (Negativity) ? -x : x;
}
 
int fact[1000001];
 
void init()
{	int i;
	fact[0] = fact[1] = 1;
	for(i=2; i<=1000000; i++)
		fact[i] = ((long long int)fact[i-1]*i)%mod ;
}
 
long long int power(long long int n, long long int k)
{	if (k == 0)
		return 1;
	long long int res = power(n, k >>1 );
	res = (long long int)((long long int)res * res) % mod;
	if (k % 2)
		res = (long long int)((long long int)res * n) % mod;
	return res;
}
 
int main()
{	init();
	int t, n, m;
	long long k, r, c, ans;
	t= FAST_IO();
	while(t--)
	{	n= FAST_IO();
		m= FAST_IO();
		k= (long long int)m-n;
		r= (long long int)(n<<1) - m>>1;
		c= ((long long int)k*(1+k))%mod;
		ans= power(c,r);
		ans = ( (long long int)ans * fact[n-(r<<1)] )%mod;
		printf("%lld\n",ans);
	}
	return 0;
}