/***********Template Starts Here***********/
#pragma comment (linker,"/STACK:16777216")
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <deque>
#include <functional>
#include <string>
#include <iostream>
#include <cctype>

#define pb push_back
#define nl puts ("")
#define sp printf ( " " )
#define phl printf ( "hello\n" )
#define all(c) (c).begin(),(c).end()
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define sz(a) int((a).size())

using namespace std;

typedef long long vlong;
typedef unsigned long long uvlong;
typedef vector < int > vi;
typedef pair < int, int > ii;
typedef vector < ii > vii;


const vlong inf = 2147383647;
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
const vlong maxint = 2147483647;
const vlong minint = -2147483648;

/***********Template Ends Here***********/

vlong fact[1000010];
const vlong mod = 1000000007;
void init() {
    fact[0] = 1;
    int i;
    for ( i = 1; i <= 1000000; i++ ) {
        fact[i] = ( fact[i-1] * i ) % mod;
    }
}

vlong bigmod ( vlong a, vlong p ) {
    vlong res = 1, x = a;
    while ( p ) {
        if ( p & 1 ) res = ( res * x ) % mod;
        x = ( x * x ) % mod;
        p >>= 1;
    }
    return res;
}

int main () {
    init();
    //freopen ( "input.txt", "r", stdin );
    //freopen ( "output.txt", "w", stdout );

    int kase;
    scanf ( "%d", &kase );

    while ( kase-- ) {
        int n, m;
        scanf ( "%d %d", &n, &m );

        vlong gap = m - n + 1;
        vlong start = gap;
        vlong mid = ( m + 1 ) / 2;
        vlong step = mid - start + 1;
        vlong k = n - start + 1;
        vlong free = gap - 1;



        if ( k & 1 ) step--;

        vlong res = fact[free];
        res *= bigmod ( ( gap * ( gap - 1 ) ) % mod, step );
        res %= mod;
        if ( k & 1 ) res *= gap;
        res %= mod;

        printf ( "%lld\n", res );
    }



    return 0;
}
