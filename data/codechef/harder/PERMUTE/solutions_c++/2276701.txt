#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cmath>
using namespace std;
#define mod 1000000007

long long fact[1000001];
long long modular_pow(long long base,long long exp)
{
long long result=1;
while(exp>0)
{
if(exp%2==1)            
result =(result*base)%mod;
exp=exp/2;
base = (base*base)%mod;
            
}     
 return result;    
}

void facto()
{
fact[0]=1;
fact[1]=1;
for(int i=2;i<1000001;i++)
{
fact[i]=(i%mod)*fact[i-1];
fact[i]=fact[i]%mod;
}     
}

int main()
{
int t;
scanf("%d",&t);
facto();
while(t--)
{
int n,m,a,b;
long long p,p2,p3;
scanf("%d%d",&n,&m);          
a=(m-n+1);
b=a-1;
p=2*n-m-1;
p2=p/2;
p3=(p+1)/2;
long long ans2=1,ans3=1;
if(p%2==0)
{
ans2=modular_pow(b,p2)%mod;
}
else
{
ans2=modular_pow(b,p3)%mod;
}
ans3=modular_pow(a,p2)%mod;


/*
if(p%2==0)
{
for(long long j=0;j<p/2;j++)
{
ans2=(ans2*b)%mod;         
}
}
else
{
for(long long j=0;j<(p+1)/2;j++)
{
ans2=(ans2*b)%mod;         
}
}

for(long long j=0;j<(p)/2;j++)
{
ans3=(ans3*a)%mod;         
}
*/
//cout<<"ans2 "<<ans2<<endl;

//cout<<"ans3 "<<ans3<<endl;
long long finalans=(((fact[a]*ans2)%mod)*ans3)%mod;


cout<<finalans<<endl;
}

    
//system("pause");
return 0;    
}
