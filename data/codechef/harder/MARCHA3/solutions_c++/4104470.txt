#include<stdio.h>
#include<algorithm>
#include<vector>
#define PB push_back
#define MP make_pair
#define fi first
#define se second
using namespace std;
typedef pair<int,int> ii;
vector<ii> v;
#define INF 1000000000
void maximize(int &a,int b){
  if(a<b) a=b;
}
void solve(){
   int n;
   scanf("%d",&n);
   int tmo=n;
   char logic[3];
   int l;
   char task[4];
   v.clear();
   while(n>0){
       scanf("%s %d %s",&logic,&l,&task);
       if(task[0]=='Y'){
           if(logic[0]=='='){
              v.PB(MP(l,1));
              v.PB(MP(l,2));
           }
           if(logic[0]=='>' && l<INF){
                v.PB(MP(l+1,1));
                v.PB(MP(INF,2));
           }
           if(logic[0]=='<' && l>1){
              v.PB(MP(1,1));
              v.PB(MP(l-1,2));
           }
       }
       else{
          if(logic[0]=='='){
             if(l-1>=1){
             v.PB(MP(1,1));
             v.PB(MP(l-1,2));
             }
             if(l<INF){
             v.PB(MP(l+1,1));
             v.PB(MP(INF,2));
             }
          }
          if(logic[0]=='>'){
             v.PB(MP(1,1));
             v.PB(MP(l,2));
          }
          if(logic[0]=='<'){
             v.PB(MP(l,1));
             v.PB(MP(INF,2));
          }
        }
        n--;
    }
    int ans=0;
    int res=0;
   sort(v.begin(),v.end());
   for(int i=0;i<v.size();i++){
      if(v[i].fi<1) continue;
      if(v[i].fi>INF) break;
      if(v[i].se==1) ans++;
      else ans--;
      maximize(res,ans);
   }
   printf("%d\n",tmo-res);
}
main(){
 // freopen("test.inp","r",stdin);
   int T;
   scanf("%d",&T);
   while(T>0){
     solve();
     T--;
   }
}