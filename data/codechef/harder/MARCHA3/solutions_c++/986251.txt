#include <cstdio>
#include <cstring>
#include <algorithm>
 
using std::sort;
 
long long h[100000];
int w[200001];
 
 
int main() {
int t;
scanf("%d", &t);
for (int i = 0; i < t; i++) {
int k;
scanf("%d", &k);
for (int j = 0; j < k; j++) {
char op, logic[8];
scanf(" %c %lld %4s", &op, h+j, logic);
h[j] *= 8;
switch (op) {
case '<': h[j]++;
case '>': h[j]++;
case '=': h[j]++;
}
if (logic[0] == 'N') h[j] += 3;
}
sort(h, h+k);
memset(w, 0, (2*k+1)*sizeof(int));
int cw = 0, nw = 0, ca = 0, m = 0;
for (int j = 0; j < k; j++) {
if (j && (h[j]>>3) != (h[j-1]>>3)) {
w[m*2+1] = cw+ca;
w[m*2+2] = cw+nw;
// printf("w[%d] %d, w[%d] %d, cw %d\n", m*2+1, w[m*2+1], m*2+2, w[m*2+2], cw);
m++;
cw += nw;
ca = 0, nw = 0;
}
switch (h[j]&7) {
case 1: /* = */ nw++; break;
case 2: /* > */ ca++; break;
case 3: /* < */ cw++; break;
case 4: /* != */ ca++; break;
case 5: /* <= */ nw++; break;
case 6: /* >= */ break;
}
}
w[m*2+1] = cw+ca;
w[m*2+2] = cw+nw;
int xm = m;
cw = 0, nw = 0;
for (int j = k-1; j >= 0; j--) {
if (j < k-1 && (h[j]>>3) != (h[j+1]>>3)) {
w[m*2+1] += cw;
w[m*2] += cw+nw;
// printf("w[%d] %d, w[%d] %d, cw %d\n", m*2+1, w[m*2+1], m*2, w[m*2], cw);
m--;
cw += nw;
nw = 0;
}
switch (h[j]&7) {
case 1: /* = */ nw++; break;
case 2: /* > */ nw++; break;
case 3: /* < */ break;
case 4: /* != */ break;
case 5: /* <= */ break;
case 6: /* >= */ nw++; break;
}
}
w[1] += cw;
w[0] += cw+nw;
int mnw = 200001;
for (int j = (h[0]>>3)<=1; j <= 2*xm+1+((h[k-1]>>3) < 1000000000); j++)
if (w[j] < mnw) mnw = w[j];
printf("%d\n", mnw);
}
return 0;
}