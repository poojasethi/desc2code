#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>

#define pb push_back
#define mp make_pair

using namespace std;

typedef pair<int, int> pii;

int main() {
    int T;
    scanf("%d", &T);
    while (T--) {
        int N;
        scanf("%d", &N);
        vector<pii> delta;
        for (int i = 0; i < N; ++i) {
            char op[5], ans[5];
            int k;
            scanf("%s%d%s", op, &k, ans);
            if (op[0] == '<') {
                if (ans[0] == 'Y') {
                    delta.pb(mp(k, 1));
                    delta.pb(mp(1e9 + 1, -1));
                } else {
                    delta.pb(mp(1, 1));
                    delta.pb(mp(k, -1));
                }
            } else if (op[0] == '>') {
                if (ans[0] == 'Y') {
                    delta.pb(mp(1, 1));
                    delta.pb(mp(k + 1, -1));
                } else {
                    delta.pb(mp(k + 1, 1));
                    delta.pb(mp(1e9 + 1, -1));
                }
            } else {
                if (ans[0] == 'Y') {
                    delta.pb(mp(1, 1));
                    delta.pb(mp(k, -1));
                    delta.pb(mp(k + 1, 1));
                    delta.pb(mp(1e9 + 1, -1));
                } else {
                    delta.pb(mp(k, 1));
                    delta.pb(mp(k + 1, -1));
                }
            }
        }
        delta.pb(mp(1, 0));
//        delta.pb(mp(1e9, 0));
        
        sort(delta.begin(), delta.end());
        size_t i = 0;
        int d = 0;
        int ans = 1e9;
        while (i < delta.size()) {
            if (delta[i].first > 1e9) {
                break;
            }
            size_t j = i;
            while (j < delta.size() && delta[i].first == delta[j].first) {
                d += delta[j++].second;
            }
//            cerr << delta[i].first << ' ' << d << '\n';
            ans = min(ans, d);
            i = j;
        }
        cout << ans << '\n';
    }
}
