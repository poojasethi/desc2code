/***************[TEMPLATE BY]**************
 *  KELLY R. MILLA                        *
 *  2nd Year - BS Information Technology  *
 *  Ateneo de Naga University             *
 *  Philippines                           *
 ******************************************/
 
#include <bits/stdc++.h>
#define all(a)         (a).begin(), (a).end()
#define set(a, n)      memset(a, n, sizeof(a))
 
/******** [Methods(Vector/Deque)] *********/
#define popb           pop_back
#define popf           pop_front
#define pushb          push_back
#define pushf          push_front
 
/************** [Datatypes] ***************/
#define ll             long long
#define vi             vector <int>
#define vvi            vector <vi>
#define di             deque <int>
#define mii            map <ll,ll>
 
/********** [Inputs and Outputs] **********/
#define sf             scanf
#define pf             printf
#define sfi(a)         sf("%d", &a)
#define sfi2(a,b)      sfi(a); sfi(b)
#define pfi(a)         pf("%d", a)
#define pl()           pf("\n")
 
/**************** [Loops] *****************/
#define fri(i,n,m,l)   for(int i = n; i < m; i+=l)
#define frrd(i,n,m,l)  for(int i = n; i >= m; i-=l)
#define fr(i,n,m)      fri(i,n,m,1)
#define frr(i,n,m)     frrd(i,n,m,1)
#define cs(a)          while(a--)
#define infl()         while(true)
#define wInput(a)      while(cin >> a)
 
/************** [Algorithms] **************/
#define srt(a)         sort(all(a))
#define permute        next_permutation
 
/**************** [Others] ****************/
#define MAX            1010
using namespace std;
 
char ans[MAX], str1[MAX], str2[MAX];
int x[MAX], y[MAX], ctr[MAX][MAX];
 
int main(){
	int cases, n, m;
	bool process = true;
	double time =clock();
	
	sfi(cases);
	for(int k = 1; k <= cases; k++){
		sf("%d %s %d %s", &n, str1, &m, str2);
		if(process){
			for(int i = 0; i <= n; i++)
				ctr[i][0] = 0;
			for(int i = 0; i <= m; i++)
				ctr[0][i] = 0;
			for(int i = 1; i <= n; i++)
				for(int j = 1; j <= m; j++){
					if(str2[j-1] == str1[i-1])
						ctr[i][j] = ctr[i-1][j-1]+1;
					else
						ctr[i][j] = max(ctr[i][j-1], ctr[i-1][j]);
				}
			int tempm = m, tempn = n, ctr2 = 0;
			for(;;){
				if(str1[n-1] == str2[m-1]){
					ans[ctr2] = str1[n-1];
					x[ctr2] = n;
					y[ctr2++] = m;
					n--;
					m--;
				}
				else if(ctr[n][m-1] > ctr[n-1][m])
					m--;
				else
					n--;
				if(n == 0 || m == 0)
					break;
			}
			
			if(ctr[tempn][tempm] != 0){
				pf("case %d Y\n", k);			
				pf("%d\n", ctr[tempn][tempm]);
				for(int i = ctr2-1; i >= 0; i--)
					pf("%c %d %d\n",ans[i],x[i],y[i]);
			}
			else
				pf("case %d N\n", k);
			if((clock()-time)/CLOCKS_PER_SEC > 4.87)
				process = false;
		}
		else
			pf("case %d N\n", k);
	}
	return 0;
} 