#include<bits/stdc++.h>
using namespace std;

const int MAXN = 500+5;
int n;
const int N = 1005;
long long dp[N][N];
vector<pair<char,pair<int,int> > > findLongestCommonSubsequence(const string& a, const string& b){
    memset(dp,0,sizeof(dp));
    int n = (int)(a.size());
    int m = (int)(b.size());
    for(int i = 0;i<=m;i++){
    dp[i][0] = 0;
    }
    for(int j = 0;j<=n;j++){
    dp[0][j] = 0;
    }
    vector<pair<char,pair<int,int> > > ans;
    //string fin = "";
    for(int i = 1;i<=n;i++){
    for(int j = 1;j<=m;j++){
        if(a[i-1]==b[j-1])
        dp[i][j] = 1 + dp[i-1][j-1];
    else
        dp[i][j] = max(dp[i-1][j],dp[i][j-1]);
    }
    }
    int i = n, j = m;
    while(i>0&&j>0){
    if(a[i-1]==b[j-1]){
    ans.push_back(make_pair(a[i-1],make_pair(i,j)));
    i-=1,j-=1;
    }
    else{
    if(dp[i-1][j]>dp[i][j-1])
        --i;
    else --j;
    }
    }
    reverse(ans.begin(),ans.end());
return ans;
}
inline int scan(){
int x = 0;
char c = getchar_unlocked();
while(c<'0'||c>'9')
    c = getchar_unlocked();
while(c>='0'&&c<='9'){
    x = (x<<1)+(x<<3)+c-'0';
    c = getchar_unlocked();
}
return x;
}
inline string readString(){
    string res = "";
    char c = getchar_unlocked();
    while(c<'a'||c>'z')
        c = getchar_unlocked();
    while(c>='a'&&c<='z'){
    res = res + c;
    c = getchar_unlocked();
    }
    return res;
}
int main(){
    ios_base::sync_with_stdio( false );
    cin.tie(NULL);
    string a,b;
    int t,n,m;
    t = scan();
    for(int i = 1; i<=t; i++){
    n = scan();
    a = readString();
    m = scan();
    b = readString();
    vector<pair<char,pair<int,int> > > ans = findLongestCommonSubsequence(a,b);
    printf("case %d ",i);
    if((int)ans.size()>1)
        printf("Y");
    else
        printf("N");
    printf("\n");
    if((int)ans.size()>1){
    printf("%d\n",ans.size());
    for(int i = 0;i<(int)(ans.size());i++){
        printf("%c ",ans[i].first);
        printf("%d %d\n",ans[i].second.first,ans[i].second.second);
    }
    }
    }
    return 0;
}
