#include<cstdio>
#include<ctime>
#include<algorithm>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<bitset>
using namespace std;
typedef long long ll;
typedef double db;
void gn(int &x){
        int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
        if(c=='-')sg=-1,x=0;else x=c-'0';
        while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
        x*=sg;
}
void gn(ll &x){
        int sg=1;char c;while(((c=getchar())<'0'||c>'9')&&c!='-');
        if(c=='-')sg=-1,x=0;else x=c-'0';
        while((c=getchar())>='0'&&c<='9')x=x*10+c-'0';
        x*=sg;
}
const int mo=1000000007;
const ll inf = 1.22e19;
int qp(int a,ll b){int ans=1;do{if(b&1)ans=1ll*ans*a%mo;a=1ll*a*a%mo;}while(b>>=1);return ans;}
int gcd(int a,int b){return b?gcd(b,a%b):a;}
#define x1 x192837465
#define x2 x123456789
#define y1 y192837465
#define y2 y123456789
int n;
db k;
db a[2111];
db wei[2111];
int ord[2111];
db ans;
db su=0.0;
db val(){
        db su=0.0;
        for (int i=1;i<=n;i++)su+=wei[i]*a[ord[i]];
        return su;
}
void sw(int i,int j){
        su-=wei[i]*a[ord[i]];
        su-=wei[j]*a[ord[j]];
        swap(ord[i],ord[j]);
        su+=wei[i]*a[ord[i]];
        su+=wei[j]*a[ord[j]];
}
int main()
{
        //freopen("1.in","r",stdin);
        int tes;gn(tes);
        while(tes--){
                gn(n);
                scanf("%lf",&k);
                ans=1e9;
                for (int i=1;i<=n;i++)scanf("%lf",&a[i]);
                wei[1]=0.5;
                for (int i=2;i<=n;i++)wei[i]=wei[i-1]*0.5;
                for (int i=1;i<=n;i++)ord[i]=i;
                su=val();
                ans=fabs(k-su);

                for (int i=1;i<=min(n-1,30);i++){
                        for (int t=0;t<3000;t++){
                                int j=rand()%(n-i)+i+1;
                                sw(i,j);
                                db cur=fabs(su-k);
                                if(cur<ans){
                                        ans=cur;
                                }else{
                                        sw(i,j);
                                }
                        }
                }
                //printf("%.5lf\n",ans);
                printf("%d %d\n",ord[n],ord[n-1]);
                for (int i=n-2;i>=1;i--)printf("%d %d\n",ord[i],n-1+(n-i));
        }
        return 0;
}
