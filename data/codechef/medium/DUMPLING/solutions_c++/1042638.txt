#include <stdio.h>
#include <stdlib.h>
#include <math.h>

#include <iostream>

typedef long long int llint;

namespace IO
{
  const int SIZE = 1 << 19;
  char buff[SIZE], *p = buff + SIZE;

  char read_char ()
  {
    if (p == buff + SIZE)
      {
	fread (buff, 1, SIZE, stdin);
	p = buff;
      }
    return *(p++);
  }

  inline llint read_int ()
  {
    char c;

    while (!isdigit (c = read_char ()));

    llint r = c - '0';
    while (isdigit (c = read_char ()))
      r = 10 * r + c - '0';

    return r;
  }
}

using namespace IO;

llint
gcd (llint p, llint q)
{
  if (q > p)
    return (gcd (q, p));

  if (q == 0)
    return (p);

  return (gcd (q, p % q));
}


int
main ()
{
  int test_cases = read_int ();
  while (test_cases--)
    {
      llint A = read_int ();	// A = pow (10, 18);
      llint B = read_int ();	// B = pow (10, 18);
      llint C = read_int ();	// C = pow (10, 18);
      llint D = read_int ();	// D = pow (10, 18);
      llint K = read_int ();	// K = pow (10, 18);
      llint gcd1 = gcd (A, B);
      llint gcd2 = gcd (C, D);
      llint gcd3 = gcd (gcd1, gcd2);
      llint res = K / (gcd1 / gcd3) / gcd2;
      printf ("%lld\n", 2 * res + 1);
    }
}
