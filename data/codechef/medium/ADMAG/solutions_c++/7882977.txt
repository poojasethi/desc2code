#include <bits/stdc++.h>
using namespace std;
void multiply(long long int F[2][2], long long int M[2][2])
{
  long long int x =  F[0][0]*M[0][0] + F[0][1]*M[1][0];
  long long int y =  F[0][0]*M[0][1] + F[0][1]*M[1][1];
  long long int z =  F[1][0]*M[0][0] + F[1][1]*M[1][0];
  long long int w =  F[1][0]*M[0][1] + F[1][1]*M[1][1];
 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
void power(long long int F[2][2], long long int n)
{
  if( n == 0 || n == 1)
      return;
  long long int M[2][2] = {{1,1},{1,0}};
 
  power(F, n/2);
  multiply(F, F);
 
  if (n%2 != 0)
     multiply(F, M);
}
 
long long int fib(long long int n)
{
  long long int F[2][2] = {{1,1},{1,0}};
  if (n == 0)
    return 0;
  power(F, n-1);
  return F[0][0];
}
 
/* Optimized version of power() in method 4 */



int main() {
	int t;
	cin>>t;
	long long int n,i,c=3,count=3,fibn;
	map<long long int,pair<long long int,long long int> >mymap;
	for(i=3;i<pow(10,18);)
	{
		fibn=fib(c);
		mymap[i].first=fibn;
		mymap[i].second=count;
		i=i+fibn;
		count++;
		c++;
	}
	while(t--)
	{
		scanf("%lld",&n);
		if(n==1||n==2)
		{
			cout<<n<<"\n";
			continue;
		}
		for(i=3;i<pow(10,18);)
		{
			if(n<i+mymap[i].first)
			{
				cout<<mymap[i].second<<"\n";
				break;
				
			}
			i=i+mymap[i].first;
		}
	}
	return 0;
}