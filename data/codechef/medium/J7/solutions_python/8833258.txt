import sys
import itertools
import math
import numpy as np

def solveBestBox(P, S) :
  # Inequality of arithmetic and geometric means
  # (ABC)^(1/3) <= (A + B + C) / 3
  # (AB * BC * CA) = (ABC)^2
  # (AB * BC * CA)^(1/3) <= (AB + BC + CA) / 3
  # When A = B = C, we achieve the maximum
  # However, we must use all the wire and the paper, which trun the inequality
  # into equality, in this case, we cannot always achieve A = B = C, but we
  # can slightly relax the equality: A = B
  # Now the equalities become:
  # 2A + C = P / 4
  # A^2 + 2AC = S / 2
  # C = P / 4 - 2A
  # A^2 + 2A(P/4 - 2A) = S / 2
  # A^2 + 1/2 * PA - 4A^2 - S / 2 = 0
  # -3A^2 + 1/2 *PA - S / 2 = 0
  # -6A^2 + PA - S = 0
  # 6A^2 - PA + S = 0
  A = np.roots([6.0, -P, S])
  C = P / 4.0 - 2 * A
  return max(np.square(A) * C)

cases = int(sys.stdin.readline())

for _ in itertools.repeat(None, cases) :
  P, S = sys.stdin.readline().split()
  print solveBestBox(float(P), float(S))
