//  ...............................$$.....................................//

  //BIG OH
  //prob-
  
#include<cstdio>
#include<iostream>
#include<cstring>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<functional>
#include<bitset>
#include<numeric>
#include<cassert>
#include<limits>
 
using namespace std;
#define inchar getchar_unlocked
inline int read() 
{
  int n = 0;
  int ch = inchar();
  while (ch < '0' || ch > '9') ch = inchar();
   while (ch >= '0' && ch <= '9') 
   {
    n = (n << 3) + (n << 1) + (ch - '0');
    ch = inchar();
   }
    return n;
}
int dp[1001][1001];
char str[1001][1001];
int main()
{
	int t;
	t=read();
	int n;
	while(t--)
	{
		n=read();
		for(int i=0;i<n;i++)
		 gets(str[i]);
		 
		bool flag=false;
		for(int col=n-1;col>=0;--col)
		{
			for(int row=0;row<n;row++)
			{
				int mx=0;
				if(row-2>=0 && col+1<=n)
				  mx=max(mx,dp[row-2][col+1]);
				if(row+2<n && col+1<n)
				  mx=max(mx,dp[row+2][col+1]);
				if(col+2<n && row-1>=0)
				  mx=max(mx,dp[row-1][col+2]);
				if(col+2<n && row+1<n)
				 mx=max(mx,dp[row+1][col+2]);
				
				dp[row][col]=mx+(str[row][col]=='P'?1:0);
				
				if(str[row][col]=='K')
				{
					printf("%d\n",dp[row][col]);
					flag=true;
					break;
				}
			}
			if(flag) break;
		}
	}
}