#include<iostream>
#include<stdio.h>
#include<string.h>
#include<limits.h>
using namespace std;
#define N 1001
#define UNKNOWN -1
int dp[N][N];
char arr[N][N];
int next_vali(int ind,int i)
{
    if(ind==0)
        return i+1;
   /// if(ind==1||ind==2)
   if(ind==1)
        return i+2;
        if(ind==2)
            return i-1;
        if(ind==3)
            return i-2;
}
int next_valj(int ind,int j)
{
    if(ind==0||ind==2)
        return j+2;
    if(ind==1||ind==3)
        return j+1;

}
int func(int i,int j,int n)
{
     if(i<0||j<0||i>n-1 ||j>n-1)  // out of bounds then return 0
        {
           // dp[i][j]=0;
            return 0;
        }

   if(dp[i][j]!=UNKNOWN) //else only check whether is known
       return dp[i][j];


    int max1=0;
    if(arr[i][j]=='P')
        max1=1;

  //  if(j==n-1)
  //      {dp[i][j]=max1;
 //           return max1;
 //       }

        int val,max2=INT_MIN,next_i,next_j;

    for(int k=0;k<4;k++)
    {
        next_i= next_vali(k,i);
        next_j=next_valj(k,j);
       // cout<<" n i "<<next_i<<" n_j "<<next_j<<endl;
    val=func(next_i,next_j,n);
      //  if(val>max2)
        //     cout<<" n i "<<next_i<<" n_j "<<next_j<<endl;
    max2=max(max2,val);
    }
   // cout<<" max2 "<<max2<<" max 1 "<<max1<<endl;
    dp[i][j]=max1+max2;
     return max1+max2;
    // return 1;
}
int main()
{
int t,i,j,n,x,y;
cin>>t;
while(t--)
{
    cin>>n;
    memset(dp,-1,sizeof(dp));
   // memset(arr)
    getchar();
    for(i=n-1;i>=0;i--)
      {

        for(j=0;j<n;j++)
    {
        cin>>arr[i][j];
        if(arr[i][j]=='K')
        {
            x=i;
            y=j;
        }
    }
      getchar()  ;
      }

cout<<endl<<func(x,y,n);
}

    return 0;
}
