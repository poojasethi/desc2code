#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e3 + 10;
char board[MAXN][MAXN];
int dp[MAXN][MAXN];
bool knightVis[MAXN][MAXN];
int N;
inline void update(int newx, int newy, int x, int y){
    if(newx < 1 || newy < 1 || newx > N || newy > N || (!knightVis[newx][newy]))
        return ;
    dp[x][y] = max(dp[x][y], dp[newx][newy] + (board[x][y] == 'P' ? 1 : 0));
    knightVis[x][y] = true;
}
int main(){
    int t;
    cin >> t;
    while(t--){
        scanf("%d", &N);
        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= N;++j){
                scanf(" %c", &board[i][j]);
            }
        }
        for(int i = 0;i <= N;++i){
            for(int j = 0;j <= N;++j){
                dp[i][j] = 0;
                knightVis[i][j] = false;
            }
        }
        for(int j = 1;j <= N;++j){
            for(int i = 1;i <= N;++i){
                if(board[i][j] == 'K'){
                    knightVis[i][j] = true;
                }
            }
        }
        for(int j = 1;j <= N;++j){
            for(int i = 1;i <= N;++i){
                update(i + 2, j - 1, i, j);
                update(i + 1, j - 2, i, j);
                update(i - 1, j - 2, i, j);
                update(i - 2, j - 1, i, j);
            }
        }
        /*
        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= N;++j){
                cout << board[i][j] << " " ;
            }
            cout << "\n";
        }

        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= N;++j){
                cout << dp[i][j] << " " ;
            }
            cout << "\n";
        }

        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= N;++j){
                cout <<  knightVis[i][j] << " " ;
            }
            cout << "\n";
        }*/
        int ans = 0;
        for(int i = 1;i <= N;++i){
            if(knightVis[i][N]){
                ans = max(ans, dp[i][N]);
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
