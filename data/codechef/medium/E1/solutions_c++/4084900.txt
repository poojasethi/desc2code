#include<cstdio>
#include<string>
#include<iostream>
#include<algorithm>
using namespace std;
string s[1003];
int dp[1003][1003];
int n;
int fun(int r,int c)
{
    if(dp[r][c]!=-1)
        return dp[r][c];
    //printf("%d %d\n",r,c);
    int a=-1,b=-1,c1=-1,d=-1;
    if(c==n-1)
    {
        if(s[r][c]=='P')
            return 1;
        else return 0;
    }
    if(r+2<n && c+1<n)
    {
        a=fun(r+2,c+1);
    }
    if(r+1<n && c+2<n)
    {
        b=fun(r+1,c+2);
    }
    if(r-1>=0 && c+2<n)
    {
        c1=fun(r-1,c+2);
    }
    if(r-2>=0 && c+1<n)
    {
        d=fun(r-2,c+1);
    }

    if(s[r][c]=='P')
        dp[r][c]= 1+max(a,(max(b,max(c1,d))));
      else dp[r][c]= max(a,(max(b,max(c1,d))));
      return dp[r][c];

}
int main()
{
    int i,j,r,c,t;
    scanf("%d",&t);
    while(t--)
    {
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        for(j=0;j<n;j++)
            dp[i][j]=-1;
    }
    for(i=0;i<n;i++)
    {
        cin>>s[i];
        for(j=0;j<n;j++)
        {
            if(s[i][j]=='K')
            {
                r=i;
                c=j;
            }
        }
    }
    printf("%d\n",fun(r,c));
    }
}
