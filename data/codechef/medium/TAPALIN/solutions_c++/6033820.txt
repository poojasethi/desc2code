#include <cstdio>
#include <cassert>
long long powByMod(int a, long long pow, long long mod)
{
        if (pow == 0) {
                return 1;
        }
        long long t = 1;
        long long r = a;
        while (pow > 1) {
                if (pow % 2 == 1) {
                        t *= r;
                        t %= mod;
                }
                r *= r;
                r %= mod;
                pow /= 2;
        }
        return (r * t) % mod;
}

int main()
{
        const long long p =  1000000007;
        int t;
        scanf("%d", &t);
        long long int n;
        for (int i = 0; i < t; ++i) {
                scanf("%lld", &n);
                long long k = n / 2;
                long long s = 0;
                long long x = powByMod(26, k + 1, p) - 1;
                s = 2 * (x * powByMod(25, p - 2, p) - 1);
                s %= p;
                if (n % 2 == 1) {
                        s += powByMod(26, k + 1, p);
                }
                s %= p;
                printf("%lld\n", s);
        }
        return 0;
}

