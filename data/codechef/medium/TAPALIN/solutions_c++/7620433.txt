#include<bits/stdc++.h>
using namespace std;

#define FRE(i,a,b)  for(i = a; i <= b; i++)
#define FRL(i,a,b)  for(i = a; i < b; i++)
#define BWE(i,a,b)  for(i = a; i >= b; i--)
#define BWL(i,a,b)  for(i = a; i > b; i--)
#define mem(t, v)   memset ((t) , v, sizeof(t))
#define sqr(x)      ((x)*(x))
#define all(x)      x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define sf(n)       scanf("%lld", &n)
#define sff(a,b)    scanf("%lld %lld", &a, &b)
#define sfff(a,b,c) scanf("%lld %lld %lld", &a, &b, &c)
#define Fout        freopen("out.txt","w",stdout)
#define Finp        freopen("in.txt","r",stdin)
#define D(x)        cout<<#x " = "<<(x)<<endl
#define pf          printf
#define vi          vector <int>
#define pii         pair <int, int>
#define pll         pair <LL, LL>
#define pb          push_back
#define mp          make_pair
#define pi          acos(-1.00)
#define DBG         pf("Hi\n")
#define sz          size()
#define ins         insert
#define xx          first
#define yy          second
#define inf         (1<<29)
#define m         1000000007
#define eps         1e-9
#define MAX         1440
#define AND(a,b)    ((a) & (b))
#define OR(a,b)     ((a)  (b))
#define XOR(a,b)    ((a) ^ (b))

typedef long long int LL;
typedef double db;

/* Min Priority queue
   priority_queue<int, vector<int>, greater <int> > q;
*/

//int dx[] = {+0,+1,+0,-1};
//int dy[] = {+1,+0,-1,+0};
//int dx[] = {-1,-1,-1,+0,+0,+1,+1,+1};
//int dy[] = {-1,+0,+1,-1,+1,-1,+0,+1};
//int dx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knight's Move
//int dy[]={-1,  1, -2,  2, -2,  2, -1,  1};  // Knight's Move
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int on(int n, int pos) {return n | (1<<pos); }
//int off(int n, int pos) {return n & ~(1<<pos); }
//bool comp(pii a, pii b) { return a.xx < b.xx;}
//int gcd(int a,int b) {return b==0?a:gcd(b,a%b);}
//int lcm(int a,int b) {return ((a*b)/gcd(a,b));}
//bool operator < (Pair a, Pair b) {return a.second < b.second;} ///Only Comparing the second element
//bool operator < (Pair a, Pair b) ///Pair comparison on the basis of first element prioritized
//{if(a.first < b.first) return true;else if(a.first == b.first){if(a.second > b.second) return true;else return false;}


LL BM(LL x,LL y)
{
    LL temp;
    if( y == 0)
        return 1;
    temp = BM(x, y/2);
    if (y%2 == 0)
        return (temp*temp)%m;
    else
        return (x*((temp*temp)%m)%m);
}

LL modinv(LL a)
{
    LL ans = BM(a,m-2);
    return ans%m;
}

int main()
{
    LL ans, ans1, ans2, n, cs, k;
    sf(cs);
    FRE(k,1,cs)
    {

        ans=0,ans1=0,ans2=0;
        sf(n);
        if(n%2)
        {
            ans1 = BM(26, n/2+1);
            ans2 = (52 * (BM(26, (n-1)/2)-1)) %m;
            ans2 = (ans2 * modinv(25)) % m;
            ans  = (ans1+ans2) %m;

        }
        else
        {
            ans = (52*(BM(26,n/2)-1))%m;
            ans = (ans*modinv(25))%m;
        }
        cout<<ans<<endl;
    }
    return 0;
}
