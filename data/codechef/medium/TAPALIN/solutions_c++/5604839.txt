#include<bits/stdc++.h>
using namespace std;
typedef long long llu;
int a[50];
void arrform(llu n)
{	int i=0;
	while(n!=0)
	{	if(n%2==1)
		{	a[i]=1;
		}
		n=n/2;
		i++;
	}
}
 
llu factor(llu n)
{	for(int i=0;i<50;i++)
	{	a[i]=0;
	}
	arrform(n);
	llu ret=1;
	llu mult=26;
// count of that div;
///	while(n%div==0)
//	{	n=n/div;
//		countdiv++;
//	}
//	cout<<n<<endl;
//	mult=n;
	for(int i=0;i<50;i++)
	{	if(a[i]==1)
		{	ret=(ret*mult)%1000000007;
		}
		mult=(mult*mult)%1000000007;
	}
	return ret%1000000007;
}
llu inverse(llu n, llu div)
{	int rough=0;
	n=n%div;
	llu pro =div;
	llu divi=n;
	int coef1=1;
	int coef2=-pro/divi;
	int coef1l=0;
	int coef2l=1;
	while(1)
	{	int save1=coef1;
		int save2=coef2;
		llu same1=pro;
		llu same2=divi;
		pro=divi;
		divi=same1%same2;
		if(divi==0){break;
		}
		coef1=coef1l-(pro/divi)*coef1;
		coef2=coef2l-(pro/divi)*coef2;
		coef1l=save1;
		coef2l=save2;
		
	}
//	cout<<(coef2l+div)%div<<endl;
	return (coef2l+div)%div;
}
int main()
{	int test;
	scanf("%i",&test);
	while(test-->0)
	{	long long n;
		scanf("%llu",&n);
		long long ans=1;
		if(n%2==0)
		{	long long same=n/2;
			same++;
			long long inv=inverse(25,1000000007);
			ans=factor(same);
			ans= ((ans-1)*inv)%1000000007;
			ans=((ans-1)*2)%1000000007;
		}
		else 
		{	long long same=n/2;
			same++;
			long long inv=inverse(25,1000000007);
			ans=factor(same);
		//	cout<<ans<<endl;
		//	cout<<inv<<endl;
			ans= ((ans-1)*inv)%1000000007;
		//	cout<<ans<<endl;
			ans=((ans-1)*2)%1000000007;
		//	cout<<ans<<endl;
			ans=(ans+factor(same))%1000000007;
		}
		printf("%llu\n",ans);
	}
}