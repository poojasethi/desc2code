// Only_love97

using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define SZ size()
#define st first
#define nd second
#define PB push_back
#define FOR(i,a,b) for (int i=(a),_b=(b);i<_b;i++)
#define FORE(i,a,b) for (int i=(a),_b=(b);i<=_b;i++)
#define FORD(i,a,b) for (int i=(a),_b=(b);i>=_b;i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef pair<int,int> II;
typedef long long ll;
const int INF=1000000000+7;

ll res,n,m,test;

ll power(ll n)
{
    ll tmp,c;
    tmp=c=26;
    n--;
    while (n)
    {
        if (n%2) tmp=tmp*c%m;
        c=c*c%m;
        n/=2;
    }
    return tmp;
}

typedef struct BIG
{
    ll d[5][5],l;
    BIG(int v=0)
    {
        memset(d,0,sizeof(d));
        l=v;
    }
    BIG operator *(BIG &op)
    {
        BIG ans;
        ans.l=l;
        FORE(i,1,l)
            FORE(j,1,l)
                FORE(k,1,l)
                    ans.d[i][j]=(ans.d[i][j]+d[i][k]*op.d[k][j]%m)%m;
        return ans;
    }
};

void xuli()
{
    cin >> n;
    if (n%2) res=power( (n+1)/2),n--;
    else res=0;
    if (n==0) cout << res << "\n";
    else
    {
        n/=2;
        BIG c,ans,f;
        c.l=2;
        c.d[1][1]=26;
        c.d[1][2]=0;
        c.d[2][1]=26;
        c.d[2][2]=1;
        ans=c;
        n--;
        while (n)
        {
            if (n%2) ans=ans*c;
            c=c*c;
            n/=2;
        }
        f.d[1][1]=1;
        f.d[2][1]=0;
        f=ans*f;
        res=(res+f.d[2][1]*2)%m;
        cout << res << "\n";
    }
}

int main()
{
  //  freopen("TAPALIN.inp", "r", stdin);
  //  freopen("TAPALIN.out", "w", stdout);
    cin >> test;
    m=INF;
    while (test--) xuli();
}
