#include <cstdio>
#include <cstring>
 
int n, m;
int c[16][16];
char s[128], mx[128], p[128], st[128];
int ans;
 
bool gogo( int pos, bool sm )
{
	if ( pos >= m )
	{
		s[pos] = '\0';
		return 1;
	}
	int i, k;
	k = p[pos] - '0';
	if ( sm )
	{
		for ( i = 9; i >= 0; i-- )
		{
			if ( c[k][i] )
			{
				s[pos] = '0' + i;
				return gogo( pos+1, sm );
			}
		}
	}
	for ( i = mx[pos]-'0'; i >= 0; i-- )
	{
		if ( c[k][i] )
		{
			if ( i < mx[pos] - '0' )
			{
				s[pos] = '0' + i;
				return gogo( pos+1, 1 );
			}
			else
			{
				s[pos] = '0' + i;
				if ( gogo( pos+1, 0 ) )
					return true;
			}
		}
	}
	return false;
}
 
int main()
{
	memset( c, 0, sizeof( c ) );
	
	c[0][0] = 1; c[0][8] = 1;
	c[1][0] = c[1][1] = 1; c[1][3] = 1; c[1][4] = 1; c[1][7] = 1; c[1][8] = c[1][9] = 1;
	c[2][2] = c[2][8] = 1;
	c[3][3] = c[3][8] = c[3][9] = 1;
	c[4][4] = c[4][8] = c[4][9] = 1;
	c[5][5] = c[5][6] = c[5][8] = c[5][9] = 1;
	c[6][6] = c[6][8] = 1;
	c[7][0] = c[7][3] = c[7][7] = c[7][8] = c[7][9] = 1;
	c[8][8] = 1;
	c[9][8] = c[9][9] = 1;
	c[10][0] = c[10][1] = c[10][2] = c[10][3] = c[10][4] = c[10][5] = c[10][6] = c[10][7] = c[10][8] = c[10][9] = 1;
	
	int t, T;
	int i, j;
	scanf( "%d", &T );
	for ( t = 0; t < T; t++ )
	{
		memset( p, '@', sizeof( p ) );
		memset( s, '?', sizeof( s ) );
		memset( mx, '>', sizeof( mx ) );
		ans = 0;
		scanf( "%s%s", st, mx );
		sscanf( st, "%d", &j );
		ans = j;
 
//		printf( "OP %s %s %s\n", s, mx, p );
 
		n = strlen( st );
		m = strlen( mx );
//		printf( "ST %s %s %d %d\n", st, mx, n, m );
		for ( int k = 0; k <= m-n; k++ )
		{
			for ( i = 0; i < k; i++ )
			{
				p[i] = '0' + 10;
			}
			for ( i = k, j = 0; j < n; i++, j++ )
			{
				p[i] = st[j];
			}
			for ( i = k + n; i < m; i++ )
				p[i] = '0' + 10;
			p[m] = '\0';
			
//			printf( "OP %s %s %s\n", st, mx, p );
			gogo( 0, 0 );
			sscanf( s, "%d", &j );
			if ( j > ans )
				ans = j;
//			printf( "OP %s %s %s :: %d\n", s, mx, p, j );
		}
		printf( "%d\n", ans );
	}
	return 0;
}