#include<iostream>
#include<stdlib.h>
#include<cmath>
#include<cstdio>
#include<string.h>
using namespace std;
int valid[10][10]= {1,0,0,0,0,0,0,0,1,0,
                    1,1,0,1,1,0,0,1,1,1,
                    0,0,1,0,0,0,0,0,1,0,
                    0,0,0,1,0,0,0,0,1,1,
                    0,0,0,0,1,0,0,0,1,1,
                    0,0,0,0,0,1,1,0,1,1,
                    0,0,0,0,0,0,1,0,1,0,
                    1,0,0,1,0,0,0,1,1,1,
                    0,0,0,0,0,0,0,0,1,0,
                    0,0,0,0,0,0,0,0,1,1};


int main()
{
  int t,i;
  cin>>t;
  while(t--)
 {
    char S[10],M[10];
    int s,m,slen,mlen,output;
    int less,equal,prefix_less,prefix_equal;
    cin>>s>>m;
    sprintf(S,"%d",s); slen = strlen(S);
    sprintf(M,"%d",m); mlen = strlen(M);

    for(i=0;i<slen;i++)
       S[i] -= '0';
    for(i=0;i<mlen;i++)
        M[i] -= '0';
    output=s;
    for(int k=0;k<(mlen+slen-1);k++)
       {
         equal=0; less=-1;
         for(i=0;i<mlen;i++)
           {
             prefix_equal=prefix_less=-1;
             for(int j=0;j<10;j++)
             {
              if(0<=i-k&&i-k<slen && valid[S[i-k]][j]==0)
                continue;
 
          if(prefix_less<(less*10 + j)) 
              prefix_less=less*10 + j;
          if(j<M[i] && prefix_less  <( equal*10 + j)) 
              prefix_less=equal*10 + j;
          if(j==M[i] && prefix_equal<(equal*10 + j)) 
             prefix_equal=equal*10 + j;
        }
        equal=prefix_equal;
        less=prefix_less;
        if(i-k >=slen-1 &&output < equal)
           output=equal;
        if(i-k >= slen-1 &&output<less) 
           output=less;
           }
    }
     cout<<output<<endl;
  }
 
  return 0;
}  
     
