#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cctype>
#include<ctime>
#include<assert.h>

#include<cmath>
#include<iostream>
#include<fstream>

#include<string>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<set>
#include<sstream>
#include<stack>

using namespace std;

#define MAX(a,b) ((a)>(b) ? (a) : (b))
#define MIN(a,b) ((a)<(b) ? (a) : (b))
#define EPS 1e-9
#define asdf exit(0);



char in[90],in1[90];
char out[90];







int X(int i)
{
    return 1<<i;
}
int num[11];

int valid[11][11];
int mx[12];



int mx_to[12][12];

int n1,n2;
int cs;





void INI()
{
    num[0]=X(0)|X(1)|X(2)|X(4)|X(5)|X(6);
    num[1]=X(2)|X(5);
    num[2]=X(0)|X(2)|X(3)|X(4)|X(6);

    num[3]=X(0)|X(2)|X(3)|X(5)|X(6);
    num[4]=X(1)|X(2)|X(3)|X(5);
    num[5]=X(0)|X(1)|X(3)|X(5)|X(6);
    num[6]=X(0)|X(1)|X(3)|X(4)|X(5)|X(6);
    num[7]=X(0)|X(2)|X(5);

    num[8]=X(0)|X(1)|X(2)|X(3)|X(4)|X(5)|X(6);
    num[9]=X(0)|X(1)|X(2)|X(3)|X(5)|X(6);

    num[10]=0;

    cs=1;



    int i,j,k;


    for(i=0;i<=10;i++)
    for(j=0;j<=10;j++)
    if( (num[i]|num[j])==num[j] )
        valid[i][j]=1;



    for(i=0;i<=10;i++)
    {
        if(valid[i][9]) mx[i]=9;
        else mx[i]=8;
    }




    for(i=0;i<=10;i++)
    for(j=0;j<=10;j++)
    {
        mx_to[i][j]=-1;
        for(k=j-1;k>=0;k--)
        {
            if(valid[i][k])
            {
                mx_to[i][j]=k;
                break;
            }
        }
    }



}




int up[90];
int down[90];

int ten[10];

int mem[10][2];
int vis[10][2];


int get(int pos,int st)
{
    if(pos==n1) return 0;
    int i,ret=-1,val;

    if(vis[pos][st]==cs) return mem[pos][st];
    if(st==1)
    {
        ret=0;
        for(i=pos;i<n1;i++)
        {
            ret*=10;
            ret+=mx[ down[i] ];
        }


        vis[pos][st]=cs;
        return mem[pos][st]=ret;
    }


    //tight
    if(valid[ down[pos] ][up[pos]])
    {
        val=get(pos+1,0);
        if(val>=0)
             val+=ten[pos]*up[pos];
        ret=max(ret,val);
    }



    //loose
    if(mx_to[ down[pos] ][up[pos]]!=-1)
    {
        //cout<<pos<<" "<<st<<endl;
        val=get(pos+1,1);
        if(val>=0)
             val+=ten[pos]*mx_to[ down[pos] ][up[pos]];
        ret=max(ret,val);

     //   cout<<val<<endl;
    }


    //cout<<pos<<" "<<st<<" "<<ret<<endl;

    vis[pos][st]=cs;
    return mem[pos][st]=ret;
}



void prin()
{
    int i;
    for(i=0;i<n1;i++) cout<<up[i]<<" ";
    cout<<endl;

    for(i=0;i<n1;i++) cout<<down[i]<<" ";
    cout<<endl;

}

int main()
{
    //freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);

    int T,i,j,val,ans;
    INI();




    scanf("%d",&T);
    while(T--)
    {
        scanf("%s %s",in1,out);


        n1=strlen(out);
        n2=strlen(in1);




        sscanf(in1,"%d",&ans);

        for(i=0;i<n2;i++) in1[i]-='0';
        for(i=0;i<n1;i++) out[i]-='0';


        j=1;
        for(i=n1-1;i>=0;i--)
        {
            ten[i]=j;
            j*=10;
        }



        for(i=0;i<n1;i++)
        {
            up[i]= out[i] ;
        }

        for(i=0;i<=n1-n2;i++)
        {
            for(j=0;j<n1;j++) down[j]=10;
            for(j=0;j<n2;j++) down[j+i]=in1[j];

           // prin();


            //cout<<mx_to[10][1];
            //asdf




            cs++;
            val=get(0,0);


            if(val!=-1 && val>ans)
            {
                ans=val;


            }
          //  cout<<ans<<endl;

        }

       // asdf


        printf("%d\n",ans);

    }
    return 0;
}
