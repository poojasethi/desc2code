#include <iostream>
#include <fstream>
#include <cstdlib>
using namespace std;
int dungeon[70][70], paths[70][70];
int n, m;
bool visited[70][70];
int main() {
    //freopen("dungeon.in", "r", stdin);
	scanf("%d%d", &n, &m);
    for (int y=0; y<n; y++) {
        for (int x=0; x<m; x++) {
            scanf("%d", &dungeon[y][x]);
            visited[y][x]=false;
            paths[y][x]=999999999;
        }
    }
    paths[0][0]=dungeon[0][0];
    int y=0, x=0;
    bool check=true;
    while (check) {
        visited[y][x]=true;
        if (y>0) if (dungeon[y-1][x]+paths[y][x]<paths[y-1][x] && !visited[y-1][x]) paths[y-1][x]=dungeon[y-1][x]+paths[y][x];
        if (y<n-1) if (dungeon[y+1][x]+paths[y][x]<paths[y+1][x] && !visited[y+1][x]) paths[y+1][x]=dungeon[y+1][x]+paths[y][x];
        if (x>0) if (dungeon[y][x-1]+paths[y][x]<paths[y][x-1] && !visited[y][x-1]) paths[y][x-1]=dungeon[y][x-1]+paths[y][x];
        if (x<m-1) if (dungeon[y][x+1]+paths[y][x]<paths[y][x+1] && !visited[y][x+1]) paths[y][x+1]=dungeon[y][x+1]+paths[y][x];
        int maz=999999999;
        check=false;
        for (int q=0; q<n; q++) {
            for (int w=0; w<m; w++) {
                if (paths[q][w]<maz && !visited[q][w]) {
                    y=q;
                    x=w;
                    maz=paths[q][w];
                    check=true;
                }
            }
        }
    }
    int posX, posY, T;
    scanf("%d%d%d", &posY, &posX, &T);
    if (paths[posY-1][posX-1]<T) printf("YES\n%d", T-paths[posY-1][posX-1]);
    else printf("NO");
	return 0;
}
