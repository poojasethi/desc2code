//problema A
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
 
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <list>
 
#include <sstream>
#include <iostream>
#include <iomanip>
 
using namespace std;
 
typedef long long int64;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int i = a; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) (a).size()
#define all(a) a.begin(), a.end()
#define VI vector<int>
#define PII vector<pair<int,int> >
#define iss istringstream //>>
#define MAX 101
#define MOD 1000000007
const long double EPS = 1E-9;
const int INF = (int)1E9;
const int64 INF64 = (int64)1E18;
const long double PI = 2 * acos(.0);

int dungeon[MAX][MAX];
int n , m , px, py, t;
int resp[MAX][MAX];
bool deck[MAX][MAX];
int movx[4] = { 0 , 1, 0 , -1};
int movy[4] = { 1, 0 , -1, 0};
int DJ(){
	forn(i, n) forn(j , m ){ resp[i][j] = INF; deck[i][j] = false;}
	resp[0][0] = 0;
		
	priority_queue< pair < int ,  pair < int , int> > > cola;
	cola.push(mp( 0 ,  mp(0, 0)));
	while(!cola.empty()){
		pair < int , int > tope = cola.top().sc;
		cola.pop();
		//cout << "tope: " << tope.fs << " " << tope.sc << " resp:" << resp[tope.fs][tope.sc] << endl;
		if(tope.fs == px && tope.sc == py) return resp[px][py];
		deck[tope.fs][tope.sc] = 1;
		forn(i , 4){
			if(! (tope.fs + movx[i] >= 0 && tope.fs + movx[i] < n) ) continue;
			if(! (tope.sc + movy[i] >= 0 && tope.sc + movy[i] < m) ) continue;
			int mx = tope.fs + movx[i];
			int my = tope.sc + movy[i];
			//cout << mx << " " << my << endl;
			if(resp[mx][my] > resp[tope.fs][tope.sc] + dungeon[mx][my] ){
				resp[mx][my] = resp[tope.fs][tope.sc] + dungeon[mx][my];				
				if(!deck[mx][my]) cola.push(mp( - resp[mx][my], mp( mx, my) ) );
			}
		}
	}
	return resp[px][py];
}


int main(){
	cin >> n >> m;
	forn(i, n) forn(j , m) cin >> dungeon[i][j];
	cin >> px >> py>> t;
	px --;
	py --;
	int total = dungeon[0][0] + DJ();
	if(total <= t) {
		cout << "YES" <<endl;
		cout << t - total << endl;
	}else cout << "NO" << endl;
	return 0;
}
