#include<bits/stdc++.h>
using namespace std;
int visited[72][72];
int a[72][72];
int m,n;
int dx,dy;
int mn;
bool isValid(int i,int j)
{
    if(i >= 0 && j >= 0 && i<m && j < n)
        return true;
    return false;
}
int c = 0;
void dfs(int i,int j,int sum)
{
    if(i == dx && j == dy)
    {
        mn = min(mn,sum);
        c++;
        return;
    }
    int x[] = {1,-1,0,0};
    int y[] = {0,0,1,-1};
    int k;
    for(k=0;k<4;k++)
    {
        int xx,yy;
        xx = i+x[k];
        yy = j+y[k];
        if(isValid(xx,yy) && visited[xx][yy] == 0)
        {
            visited[xx][yy] = 1;
            dfs(xx,yy,sum+a[xx][yy]);
            visited[xx][yy] = 0;
        }
    }
    return;
}
int main()
{
    int i,j,t;
    cin>>m>>n;
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
        {
            cin>>a[i][j];
        }
    }
    cin>>dx>>dy>>t;
    mn = INT_MAX;
    dx--;
    dy--;
    int dp[72][72];
    for(i=0;i<m;i++)
    {
        for(j=0;j<n;j++)
            dp[i][j] = 1000000;
    }
    //dfs(0,0,a[0][0]);
    int k;
    dp[0][0] = a[0][0];
    for(k=0;k<m*(n-1)+n*(m-1);k++)
    {
        for(i=0;i<m;i++)
        {
            for(j=0;j<n;j++)
            {
                if(i >= 1 && dp[i][j] > dp[i-1][j]+a[i][j])
                    dp[i][j] = dp[i-1][j]+a[i][j];
                if(i < m-1 && dp[i][j] > dp[i+1][j]+a[i][j])
                    dp[i][j] = dp[i+1][j]+a[i][j];
                if(j >= 1 && dp[i][j] > dp[i][j-1]+a[i][j])
                    dp[i][j] = dp[i][j-1]+a[i][j];
                if(j < n-1 && dp[i][j] > dp[i][j+1]+a[i][j])
                    dp[i][j] = dp[i][j+1]+a[i][j];
                //cout<<dp[i][j]<<" ";
            }
            //cout<<endl;
        }

    }
    //cout<<dp[dx][dy]<<endl;
    mn = dp[dx][dy];
    if(mn <= t)
    {
        cout<<"YES"<<endl;
        cout<<t-mn<<endl;
    }
    else
        cout<<"NO"<<endl;
}
