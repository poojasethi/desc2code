#define DEBUG 1

#include <stdio.h>
#include <string.h>
#include <limits.h>
#include <queue>
using namespace std;

int g[72][72];
int r[72][72];
typedef struct {
  int x, y;
} point;

queue<point> q;

void bfs(void) {
  point p;
  int x, y;
  while(!q.empty()) {
    p=q.front();
    q.pop();
    x=p.x;
    y=p.y;
    if(r[x][y]+g[x+1][y]<r[x+1][y]) {
      r[x+1][y]=r[x][y]+g[x+1][y];
      p.x=x+1;
      p.y=y;
      q.push(p);
    }
    if(r[x][y]+g[x-1][y]<r[x-1][y]) {
      r[x-1][y]=r[x][y]+g[x-1][y];
      p.x=x-1;
      p.y=y;
      q.push(p);
    }
    if(r[x][y]+g[x][y+1]<r[x][y+1]) {
      r[x][y+1]=r[x][y]+g[x][y+1];
      p.x=x;
      p.y=y+1;
      q.push(p);
    }
    if(r[x][y]+g[x][y-1]<r[x][y-1]) {
      r[x][y-1]=r[x][y]+g[x][y-1];
      p.x=x;
      p.y=y-1;
      q.push(p);
    }
  }
}

int main(void) {
  int X, Y, x, y, px, py, t;
  point s;

  memset(r, 0, sizeof(g));

  scanf("%d%d", &Y, &X);
  for(y=1;y<=Y;y++)
    for(x=1;x<=X;x++) {
      scanf("%d", &g[x][y]);
      r[x][y]=INT_MAX;
    }
  scanf("%d%d%d", &py, &px, &t);

  s.x=1;
  s.y=1;
  q.push(s);
  r[1][1]=g[1][1];
  bfs();

  if(r[px][py]<=t)
    printf("YES\n%d\n", t-r[px][py]);
  else
    printf("NO\n");

  return 0;
}
