#include <iostream>
#include <cstring>
#define INF 1<<29
using namespace std;

int m,n;
int vtime[70][70];
int res[70][70];
int t, qx, qy;
bool visited[70][70];

bool exist(int i, int j){
    if(i < 0 || j < 0 || i >= m || j >= n)
        return false;

    return true;
}

void Solve(){
    for(int i = 0; i < m; i++){
        for(int j = 0; j < n; j++){
            res[i][j] = INF;
        }
    }
    res[0][0] = vtime[0][0];
    while(1){
        int Min = INF;
        int x,y;
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(!visited[i][j] && res[i][j] < Min){
                    Min = res[i][j];
                    x = i;
                    y = j;
                }
            }
        }

        visited[x][y] = true;
        if(x == qx && y == qy) break;
        if(exist(x+1,y) && !visited[x+1][y]){
            res[x+1][y] = min(res[x+1][y], res[x][y] + vtime[x+1][y]);
        }
        if(exist(x,y+1) && !visited[x][y+1]){
            res[x][y+1] = min(res[x][y+1], res[x][y] + vtime[x][y+1]);
        }
        if(exist(x,y-1) && !visited[x][y-1]){
            res[x][y-1] = min(res[x][y-1], res[x][y] + vtime[x][y-1]);
        }
        if(exist(x-1,y) && !visited[x-1][y]){
            res[x-1][y] = min(res[x-1][y], res[x][y] + vtime[x-1][y]);
        }
    }
}

int main(){
    //freopen("input.txt", "r", stdin);

    scanf("%d %d", &m, &n);
    for(int i = 0; i < m; i++){
        for(int j = 0; j < n; j++){
            scanf("%d", &vtime[i][j]);
        }
    }
    scanf("%d %d %d", &qx, &qy, &t);
    qx = qx-1;
    qy = qy-1;
    Solve();
    if(res[qx][qy] >= t)
        printf("NO\n");
    else
        printf("YES\n%d\n", t-res[qx][qy]);
}
