//amazing takes time, legendary requires patience
#include "bits/stdc++.h"
#define sd(n) scanf("%d", &(n))
#define rep(i, x, n) for (int i = x, _n = (n); i < _n; ++i)
#define repi(i, a) for(typeof((a).begin()) i = (a).begin(), _##i = (a).end(); i != _##i; ++i)
#define pra(v) repi(it, v) cout << *it << " "; cout << endl;
#define SZ(c) (int)(c).size()
#define lcm(a,b) (a*(b/__gcd(a,b)))
#define VI vector<int>
#define all(c) (c).begin(), (c).end()
#define allr(c) (c).rbegin(), (c).rend()
#define pb push_back
#define mii map<int, int>
#define pii pair<int, int>
#define pip pair<int, pii>
#define F first
#define S second
#define mp make_pair
#define lli long long int
#define llu unsigned long long
#define CLR(p) memset(p, 0, sizeof(p))
#define SET(p) memset(p, -1, sizeof(p))
#define INF 0x3f3f3f3f
#define pi 3.141592653589793
#define debug 0
using namespace std;

const int MOD = 1e9+7;
const int MAX = 100010;
const double eps = 1e-8;

lli fib[50];

lli f(int x, int k, int n)
{
	if(x < 0) return 0;
	
	if(x == 0 and k == 0) return 1;
	
	if(x > 0 and k > 0 and n > 0 and x <= k*fib[n-1])
		return f(x, k, n-1) + f(x - fib[n-1], k-1, n);
	return 0;
}


int main()
{
	int x, k, t;
	fib[0] = 1LL;
	fib[1] = 2LL;
	rep(i, 2, 45)
		fib[i] = 1LL*(fib[i-1] + fib[i-2]);
		
	sd(t);
	while(t--)
	{
		sd(x);
		sd(k);
		
		lli ans = f(x, k, 43);
		printf("%d\n", ans);
	}
    return 0;
}    

