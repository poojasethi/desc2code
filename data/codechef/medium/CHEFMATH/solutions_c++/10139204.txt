#include <bits/stdc++.h>
#define ll long long int
#define MAX 100001
#define EPS 1e-9
#define MOD 1000000007
#define vint vector <int>
#define vpint vector <pair<int,int> >
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
#define gc() getchar_unlocked()
#define ms(x,v) memset(x,v,sizeof x)
#define pr_arr(i,x,size) for(i=0;i<size;i++) cout<<x[i]<<" "
#define ff(i,a,b) for(i=a;i<=b;i++)
#define fb(i,a,b) for(i=a;i>=b;i--)
#define gprint(i) cout<<"Case #"<<i<<": "
using namespace std;

template<class T>
void scanint(T &x)
{
    register T c = gc();
    x = 0;
    T neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int m(int x,int m=MOD)
{
    return (((x%m)+m)%m);
}

inline bool lt(double a, double b)
{
    return a + EPS < b;
}
inline bool gt(double a, double b)
{
    return a > b + EPS;
}
inline bool eq(double a, double b)
{
    return fabs(a - b) < EPS;
}

ll power(ll base,ll p)
{
    ll temp=1;
    while(p>1)
    {
        if(p%2!=0)
            temp=(1LL*(base*temp)%MOD);
        base=(1LL*(base*base)%MOD);
        p/=2;
    }
    ll ans=(1LL*(base*temp)%MOD);
    return ans;
}

int f[44],k,ans;

void fun(int x,int z,int kl)
{
	if(z<1)
		return;
	if(1LL*(k-kl)*f[z]<x)
		return;
	if(x==0)
	{
		if(k==kl)
			ans=(ans+1)%MOD;
		return;
	}
	if(k==kl)
		return;
	if(f[z]<=x)
		fun(x-f[z],z,kl+1);
	fun(x,z-1,kl);
}

int main()
{
    ios::sync_with_stdio(false);
    int i;
    f[1]=1;
    f[2]=2;
    ff(i,3,43)
    {
    	f[i]=f[i-1]+f[i-2];
    }
    int q;
    cin>>q;
    ff(i,1,q)
    {
    	ans=0;
    	int x;
    	cin>>x>>k;
    	fun(x,43,0);
    	cout<<ans<<endl;
    }
    return 0;
}