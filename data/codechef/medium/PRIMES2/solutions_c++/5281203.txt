#include<cstdio>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<vector>
#include<queue>
#include<string>
#include<map>
#include<cmath>
using namespace std;
typedef unsigned long long int llu;
typedef long long ll;
#define sc(n) scanf("%lld",&n)
#define pr(n) printf("%lld\n",n)
#define rep(i,n) for(int i=0; i<(int)n; i++)
#define repv(i,n) for(int i=n-1; i>=0; i--)
#define repl(i,n) for(int i=1; i<=(int)n; i++)
#define replv(i,n) for(int i=n; i>=1; i--)

#define MAX 1000000
#define LMT 1000
unsigned flag[MAX>>6];
#define ifc(n) (flag[n>>6]&(1<<((n>>1)&31)))
#define isc(n) (flag[n>>6]|=(1<<((n>>1)&31)))

ll square[100010],cube[100010],s,c;

void sieve(){
    ll i,j,k;
    for(i=3;i<LMT;i+=2)
        if(!ifc(i))
            for(j=i*i,k=i<<1;j<MAX;j+=k)
                isc(j);
	square[0]=4;
	cube[0]=8;
	c=1;
	s=1;
	for(i=3;i<=MAX;i+=2){
		if(!ifc(i)){
		k=i*i;
		if(k<MAX)
			square[s++]=k;
		k=k*i;
		if(k<MAX)
			cube[c++]=k;
		}
	}
}
int main()
{
	//freopen("input.txt","r",stdin);
	ll r,q,p,num,i,j,d,sum;
	sieve();
	while(scanf("%lld",&num)==1)
	{
		r=0;
		for(i=0;i<c;i++)
		{
			if(cube[i]>=num)
				break;
			for(j=0;j<s;j++)
			{
				sum=cube[i]+square[j];
			    if(sum>=num)
					break;
				d=num-sum;
				if(d%2!=0&&!ifc(d))
				{
					p=cbrt(cube[i]);
					q=sqrt(square[j]);
					r=d;
					break;
				}
			}
			if(r)
				break;
		}
		if(r)
			printf("%lld %lld %lld\n",r,q,p);
			else printf("0 0 0\n");
	}
	return 0;
}
