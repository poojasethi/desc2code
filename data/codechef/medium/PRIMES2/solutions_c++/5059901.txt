// karan singh

//#include <bits/stdc++.h>
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>



// Typedef variables

#define l int
#define ll long long int
#define c char
#define f float
#define lf double 
#define r return 0 ;

// Input Macros

#define s(x) scanf("%d",&x);
#define sl(x) scanf("%lld",&x);
#define sd(x,y) scanf("%d %d",&x,&y);

// Output Macros

#define p(x) printf("%d\n",x);
#define pl(x) printf("%lld\n",x);
#define pd(x) printf("%d %d\n",x,y);

// Shortcuts

#define rep(i,a,n) for(int i = a ; i<=n ; i++)
#define repi(i,n,a) for(int i = n ; i>=a ; i--)
#define tc() int t ; scanf("%d",&t); while(t--)

// Some Functions

#define Fill(a,x) memset(a,x,sizeof(a));
#define Sz(a,x) x = (int)a.size() ; 

// Useful Constants 

#define INF 1e9
#define LINF 1e18
#define MOD (int)1e9+7	

#define TRACE

#ifdef TRACE

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;

#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else
 
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
 
#endif

using namespace std ;

// Your Code Goes here :-)

l is_prime(l N)
{
	
	if(N<2 || (!(N&1) && N!=2))
		return 0;
	for(int i=3; i*i<=N; i+=2)
		if(!(N%i))
			return 0;
	return 1;
}
void solve(l &p1 , l &p2 , l &p3 , l n )
{
    for( p3=100; p3>0; p3--)
	{
		if(p3*p3*p3<n && is_prime(p3))
	    {
			for(p2=2; p2*p2+p3*p3*p3<n; p2++)
		    {
				p1=n-p3*p3*p3-p2*p2;
			    if(is_prime(p2) && is_prime(p1))
			       return ;
			}
		  
	    }
	}
	p1=p2=p3=0;
}

l main()
{

/*  
    #ifndef ONLINE_JUDGE
	freopen("ip.txt","r",stdin);
	freopen("op.txt","w",stdout);
    #endif
*/   

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	while(1)
	{
		l n , flag = 0 , i , j  , x = 0 , p3 = 0 , p2 = 0 , p1 = 0;
 
		s(n)
		// Basically prime^2 , prime^3 
		// Now 100^3 = 10^6
        if(n==0) break ;
	    solve(p1,p2,p3,n);
	    printf("%d %d %d\n",p1,p2,p3);
	}
   r 
}
