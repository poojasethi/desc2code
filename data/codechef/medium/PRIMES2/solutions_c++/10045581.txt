#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e6 + 10;
bool sieve[MAXN];
vector<int> first(MAXN, 0);
vector<int> second(MAXN, 0);
vector<int> third(MAXN, 0);

vector<int> secondAns(MAXN, 0);
vector<int> thirdAns(MAXN, 0);
vector<int> primes;
void preprocess(){
    memset(sieve, 1, sizeof sieve);
    sieve[0] = sieve[1] = 0;
    for(int i = 2;i * i < MAXN;++i){
        if(sieve[i]){
            for(int j = i * i;j < MAXN;j += i){
                sieve[j] = false;
            }
        }
    }
    for(int i = 0;i < MAXN;++i){
        first[i] = 0;
        if(sieve[i]) {
            first[i] = i;
            primes.push_back(i);
        }
    }
    int sz = primes.size();
    for(int i = 0;i < MAXN;++i){
        for(int j = 0;j < sz;++j){
            int p = primes[j];
            int q = p * p;
            if(q > i) break;
            if(first[i - q] != 0){
                second[i] = q;
                secondAns[i] = p;
                break;
            }
        }
    }
    for(int i = 0;i < MAXN;++i){
        for(int j = 0;j < sz;++j){
            int p = primes[j];
            int q = p * p * p;
            if(q > i) break;
            if(second[i - q] != 0){
                third[i] = q;
                thirdAns[i] = p;
                break;
            }
        }
    }
}
int main(){
    preprocess();
    int N;
    while(scanf("%d", &N) != EOF && N != 0){
        int A, B, C;
        C = thirdAns[N];
        N -= third[N];
        B = secondAns[N];
        N -= second[N];
        A = first[N];
        if(C == 0) A = B = 0;
        printf("%d %d %d\n", A, B, C);
    }
    return 0;
}
