#include <cstdio>
#include <cmath>
#include <vector>
#include <iostream>
#include <iterator>

bool isPrime(int a) 
{
        if (a < 2) {
                return false;
        }
        for (int i = 2; i <= std::sqrt(a); ++i) {
                if (a % i == 0) {
                        return false;
                }
        }
        return true;
}

void generatePrimeNumbers(std::vector<int>& v)
{
        v[0] = 0;
        v[1] = 0;
        for (int i = 2; i < v.size(); ++i) {
                if (v[i] != 0) {
                        for (int j = i; i * j < v.size(); ++j) {
                                v[i * j] = 0;
                        }
                }
        }
}

void print3Numbers(std::vector<int>& v, int n)
{
        for (int i = 0; v[i] <= 100; ++i) {
                int p3 = v[i] * v[i] * v[i];
                if (p3 >= n) {
                        break;
                }
                for (int j = 0; v[j] < v.size(); ++j) {
                        int p2 = v[j] * v[j];
                        int p1 = n - p3 - p2;
                        if (p1 < 2) {
                                break;
                        }
                        if (isPrime(p1)) {
                                printf("%d %d %d\n", p1, v[j], v[i]);
                                return;
                        }
                }
        }
        printf("%d %d %d\n", 0, 0, 0);
}

int main()
{
        int k = 1000;
        std::vector<int> vv(k, 1);
        generatePrimeNumbers(vv);

        std::vector<int> v;
        for (int i = 0; i < vv.size(); ++i) {
                if (vv[i] != 0) {
                        v.push_back(i);
                }
        }
        int n;
        scanf("%d", &n);
        while (n != 0) {
                print3Numbers(v, n);
                scanf("%d", &n);
        }
        return 0;
}
