/// بسم الله الرحمن الرحيم

/*Conquer The World
                 by
          Knowledge && Humanity
                 ///->"lonely_point"*/
#include<bits/stdc++.h>
#define F(i,a,b) for(int i = a; i<=b; i++)
#define FF(i,a,b) for(int i = a; i<b; i++)
#define RF(i,a,b) for(int i = a; i>=b; i--)
#define PC(cs)  printf("Case %d: ",cs++)
#define PCN(cs) printf("Case %d:\n",cs++)
#define mset(ar,v) memset(ar,v,sizeof(ar))
#define RT return
#define pb push_back
#define clr clear()
#define ins insert
#define WH while
#define NL cout << endl
#define M 5000
#define IM int main
#define inf (1<<30)
#define X first
#define Y second
#define BB begin
#define EE end
#define rbeg rbegin
#define LL long long
#define UI unsigned
#define UL unsigned long
#define ULL unsigned long long
#define sng string
#define LO long
#define I int
#define  DB  double
#define itr  iterator
#define ritr reverse_iterator
#define ST struct
#define IA(n) scanf("%d",&n)
#define IB(n,m) scanf("%d%d",&n,&m)
#define IC(n,m,l) scanf("%d%d%d",&n,&m,&l)
#define ID(n,m,l,k) scanf("%d%d%d%d",&n,&m,&l,&k)
#define LA(n) scanf("%ld",&n)
#define LB(n,m) scanf("%ld%ld",&n,&m)
#define LC(n,m,l) scanf("%ld%ld%ld",&n,&m,&l)
#define LD(n,m,l,k) scanf("%ld%ld%ld%ld",&n,&m,&l,&k)
#define LLA(n) scanf("%lld",&n)
#define LLB(n,m) scanf("%lld%lld",&n,&m)
#define LLC(n,m,l) scanf("%lld%lld%lld",&n,&m,&l)
#define LLD(n,m,l,k) scanf("%lld%lld%lld%lld",&n,&m,&l,&k)
#define IPA(n)  printf("%d\n",n)
#define LPA(n)  printf("%lld\n",n)
#define gcd(a, b)   __gcd(a, b)
#define FI ios_base::sync_with_stdio(0);cin.tie(0);
#define lcm(a, b) ((a)*((b)/gcd(a,b)))
#define all(v) v.begin(), v.end()
#define no_ones __builtin_popcount // count 1's in a number's binary representation
#define eps 10e-7
#define PI acos(-1.0)

///          0123456789
#define MX   1000000

///sprintf(sa,"%d",n); ///  convert number to char  string
///int month[] = {0,31,28,31,30,31,30,31,30,31,}
///int month[]={0,31,28,31,30,31,30,31,31,30,31,30,31}; //Not Leap YEAR
///Some Symbols : π

using namespace std;


bool is_prime[MX+9];
int prime[MX+9],inx(2);

void siv()
{
    prime[1] = 2;

    for(int i = 3; i*i<=MX; i+=2)
    {
        if(is_prime[i] == 0)
        {
            for(int j = i*i; j<=MX; j+=i+i)
                is_prime[j] = 1;
        }
    }

    for(int i = 3; i<=MX; i+=2)
    {
        if(is_prime[i] == 0) prime[inx++] = i;
    }

}


int mark[MX+9];  int ar[MX+9][6];



void precal()
{

    for(int i = 1; i<=MX; i++)
    {
        for(int j = 1; j<=5; j++)
            ar[i][j] = 0;
    }

    ///for(int k = 1; k<=(inx-1); k++)
    //{
        for(int i = 1; prime[i]<=1000 && i<=(inx-1); i++)
        {
            for(int j = 1; prime[j]<=1000 && j<=(inx-1); j++)
            {
                    int sm =(prime[i]*prime[i]) + (prime[j]*prime[j]*prime[j]);

                    if(sm<=MX)
                    {
                        if(mark[sm] == 0)
                        {
                            ar[sm][1] = 1;
                            ///ar[sm][2] = prime[k];
                            ar[sm][3] = prime[i];
                            ar[sm][4] = prime[j];

                            mark[sm] = 1;
                        }
                    }
            }
        //}
    }
}

IM()
{
    siv();
    precal();

    ///cout << inx << endl;

    int n;

    WH(IA(n) && n)
    {
        bool on = 0;
        for(int i = 1; i<=(inx-1) && prime[i]<=n; i++)
        {
            int sm = n - prime[i];

            if(ar[sm][1] == 1)
            {
                cout << prime[i] << " " << ar[sm][3] << " " << ar[sm][4] << endl;
                on = 1;
                break;
            }
        }

        if(on == 0)
            cout << "0 0 0 " << endl;
    }


    RT 0;
}
