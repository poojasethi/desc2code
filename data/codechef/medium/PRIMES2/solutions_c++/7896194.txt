// URL : https://www.codechef.com/problems/PRIMES2/

#include <iostream>
#include <cstdio>

using namespace std;

typedef long long ll;
#define M 1000001

bool is_prime[M];

ll p1[M / 10];
ll p2[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997};
ll p3[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};

ll s1 = 0;
ll s2 = 168;
ll s3 = 25;

void calc()
{
	for(ll i = 0; i < M; ++i)is_prime[i] = true;
	is_prime[0] = false;
	is_prime[1] = false;
	
	for(ll i = 2; i < M; ++i)
	  if(is_prime[i])
	  {
	  	 p1[s1++] = i;
		 for(ll j = i * i; j < M; j += i)
	   	 {
	   	  is_prime[j] = false;
	   	 }
	  }
	  //cout << s1 << endl;
}

int bin_search_p1(ll k)
{
	if(k < 2)return 0;
	int low = 0, high = s1 - 1;
	int mid;
	while(low <= high)
	{
		mid = (low + high) / 2;
		
		if(p1[mid] == k)return 1;
		else if(p1[mid] < k)low = mid + 1;
		else high = mid - 1;
		
	}
	return 0;
}

int main()
{
	calc();
	ll n;
	
	while(cin >> n)
	{
		if(n == 0)break;
		ll a1, a2, a3;
		ll m1, m2, m3;
		bool f1 = false;
		
		for(int i = 0; i < s3; ++i)
		{
			a3 = p3[i];
			m3 = a3 * a3 * a3;
			if(m3 > n)break;
			
			for(int j = 0; j < s2; ++j)	
			{
				a2 = p2[j];
				m2 = a2 * a2;
				if(m3 + m2 > n)break;
				if(bin_search_p1(n - m2 - m3))
				{
					f1 = true;
					cout << (n - m2 - m3) << " " << a2 << " " << a3 << endl;
					break;
				}
			}
			if(f1)break;
		}
		if(!f1)cout << "0 0 0" << endl;
	}
	
	return 0;
}