#include <stdio.h>
#include <map>
using namespace std;

int d[300000];

const int OFF = 150000;

long long dp[100001];
int s_four[100001], s_seven[100001];

static char i_buf[30000000];
static int p = 0;
inline void init() { fseek(stdin , 0 , SEEK_END); int lSize = ftell (stdin); ; fseek(stdin, 0, SEEK_SET); int vv = fread(i_buf, lSize, sizeof(char), stdin); vv++; }
inline int nextInt(){ while(i_buf[p] < '0' || i_buf[p] > '9') p++; int v = 0; while(i_buf[p] >= '0' && i_buf[p] <= '9') v = v * 10 + int(i_buf[p] - '0'), p++; return v; } 

int in[100009];


int main()
{
	int maxi = 0;
	init();
	int T = nextInt();
	
	for(int i = 0; i < T; i++)
		maxi = max(maxi, in[i] = nextInt());
	
	d[OFF + 0]++;
	dp[1] = 1;
	for(int i = 2; i <= maxi; i++)
	{
		int four = 0, seven = 0;
		int x = i;
		while(x)
		{
			four  += (x % 10 == 4);
			seven += (x % 10 == 7);
			x /= 10;
		}
		
		s_four[i]  =  s_four [i - 1] + four;
		s_seven[i] =  s_seven[i - 1] + seven;
		
		dp[i] = dp[i - 1] + d[OFF + s_four[i] - s_seven[i]] + (four == seven);
		d[OFF + s_four[i - 1] - s_seven[i - 1]]++;
	}
	
	for(int t = 0; t < T; t++)
		printf("%lld\n", dp[in[t]]);

	
	
	return 0;
}
