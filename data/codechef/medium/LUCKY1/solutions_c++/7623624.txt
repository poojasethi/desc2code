#include<iostream>
using namespace std;
#define MAX 100005
class node
{
   int arr[MAX];
public:   int pos;
public:
   node()
   {
      int i;
      for(i=0;i<MAX;i++)
         arr[i]=0;
      pos=MAX/2;
   }
public:
   friend ostream& operator<<(ostream &p,node &q)
   {
      int i;
      for(i=q.pos-15;i!=q.pos;i++)
         cout<<q.arr[i]<<" ";
         cout<<"         ";
      for(;i<q.pos+15;i++)
         cout<<q.arr[i]<<" ";
      return p;
   }
   void leftShift(int data)
   {
      pos=pos+data;
   }
   void rightShift(int data)
   {
      pos=pos-data;
   }
   int getData(int data)
   {
      return arr[pos+data];
   }
   void insertElement(int idx,int data)
   {
      arr[pos+idx]=data;
   }
};
int main()
{
   long long int ans[MAX],power,nmb,i,n4,T,N,n7;
   node temp;
   ans[0]=0;
   for(i=1;i<MAX;i++)
   {
      for(n4=0,nmb=i;nmb;nmb=nmb/10)
      {
         if(nmb%10==4)
            n4++;
         else if(nmb%10==7)
            n4--;
      }
      if(n4==0)
         ans[i]=ans[i-1]+1;
      else if(temp.getData(-n4))
         ans[i]=ans[temp.getData(-n4)-1]+1;
      else
            ans[i]=0;
            
         temp.rightShift(n4);
         temp.insertElement(n4,i);
      }
   for(i=1;i<MAX;i++)
      ans[i]+=ans[i-1];
   cin>>T;
   while(T--)
   {
      cin>>N;
      cout<<ans[N]<<endl;
   }
   return 0;
}
