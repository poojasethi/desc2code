#include <vector>
#include<iostream>

#define REP(i,n) for (int i = 1; i <= n; i++)

using namespace std;

 

typedef long long ll;

typedef vector<vector<ll> > matrix;

const ll MOD = 1000000007;

int K=15,l[100],h[100];
 

// computes A * B

matrix mul(matrix A, matrix B)

{

    matrix C(K+1, vector<ll>(K+1));

    REP(i, K) REP(j, K) REP(k, K)

        C[i][j] = (C[i][j] + A[i][k] * B[k][j]) % MOD;

    return C;

}

 

// computes A ^ p

matrix pow(matrix A, unsigned long long int p)

{

    if (p == 1)

        return A;

    if (p % 2)

        return mul(A, pow(A, p-1));

    matrix X = pow(A, p/2);

    return mul(X, X);

}

 

// returns the N-th term of Fibonacci sequence

unsigned long long int fib(unsigned long long int N,int k)

{

    // create vector F1

    vector<ll> F1(K+1);
    F1[0]=1;
    /* for(int i=1;i<=K;i++)
     F1[i]=0;
    for(int i=1;i<=k;i++)
    F1[l[i]]=1;*/
   // F1[1]=1;F1[2]=2;F1[3]=3;F1[4]=5;F1[5]=8;F1[6]=13;F1[7]=21;F1[8]=35;
   for(int i=1;i<=K;i++)
    {
        F1[i]=0;
        for(int j=1;j<=k;j++)
        {
            if((i-l[j])>=0 && l[j]!=0)
            F1[i]=(F1[i-l[j]]+F1[i])%MOD;
        }
     }
     if(N<=K)
     return F1[N];
    /* REP(i,K)
     printf("%d ",F1[i]);
     printf("\n");*/
    // create matrix T

    matrix T(K+1, vector<ll>(K+1));

   // T[1][1] = 0, T[1][2] = 1;

   // T[2][1] = 1, T[2][2] = 1;
   for(int j=1;j<=k;j++)T[1][l[j]]++;
            for(int i=2;i<=15;i++)T[i][i-1]=1;
  /*  for(int i=1;i<K;i++)
    {
        for(int j=1;j<=K;j++)
        {
            if(j==(i+1))
            T[i][j]=1;
            else
            T[i][j]=0;
        }
    }
    int g=K-1;
    for(int i=K;i>=1;i--)
    {
        if(h[K-g])
        T[K][i]=1;
        else
        T[K][i]=0;
        g--;
    }*/
   // REP(i,K)
   // T[K][i]=1;
  
    // raise T to the (N-1)th power

   

    T = pow(T, N-15);
   
 

    // the answer is the first row of T . F1

    unsigned long long int res = 0;

    REP(i, K)

        res = (res + T[1][i] * F1[16-i]) % MOD;

    return res;
}
int main()
{
    int t,i,k,max;
    unsigned long long int n;
    scanf("%d",&t);
    while(t--)
    {
        max=0;
        scanf("%llu",&n);
        scanf("%d",&k);
        for(i=1;i<=k;i++){
        scanf("%d",&l[i]);
        //if(l[i]>max && l[i]<=n)
       // max=l[i];
       // h[l[i]]=1;
        }
       // K=max;
        if(k==0)
        printf("0\n");
        else
        printf("%llu\n",fib(n,k));
    }
    return 0;
}
        
