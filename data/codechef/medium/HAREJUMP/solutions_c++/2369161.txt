//matrix exponentiation and repeated squaring
#include<iostream>
#include<cstdio>
#define ll long long
#define mod 1000000007
using namespace std;
ll a[16][16];
ll b[16][16];
ll c[16][16];
void matrixmultiply(ll n)
{
    ll i,j,k;
    ll l;
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        {
            l=0;
            for(k=0;k<=n-1;k++)
            l=(l+((b[i][k]*a[k][j])%mod))%mod;
            c[i][j]=l;
        }
    }
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        b[i][j]=c[i][j];
    }
    return ;
}
void square(ll n)
{
    ll i,j,k;
    ll l;
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        {
            l=0;
            for(k=0;k<=n-1;k++)
            l=(l+((b[i][k]*b[k][j])%mod))%mod;
            c[i][j]=l;
        }
    }
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        b[i][j]=c[i][j];
    }
    return ;
}
void power(ll m,ll n)
{
    if(m==1)
    return ;
    else
    {
        power(m/2,n);
        if(m%2==0)
        {
            square(n);
        }
        else
        {
            square(n);
            matrixmultiply(n);
        }
        return ;
    }
}
void compute(ll m,ll n)
{
    ll i,j;
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        b[i][j]=a[i][j];
    }
    power(m,n);
    for(i=0;i<=n-1;i++)
    {
        for(j=0;j<=n-1;j++)
        a[i][j]=b[i][j];
    }
    return ;
}
int main(void)
{
    ll i,j,k,n,m,t;
    scanf("%lld",&t);
    while(t--)
    {
        k=0;
        scanf("%lld%lld",&m,&n);
        for(i=0;i<=15;i++)
        {
            for(j=0;j<=15;j++)
            a[i][j]=0;
        }
        for(i=0;i<=n-1;i++)
        {
            scanf("%lld",&j);
            if(j>k)
            k=j;
            a[j-1][0]=1;
        }
        for(i=1;i<=k-1;i++)
        a[i-1][i]=1;
        compute(m,k);
        printf("%lld\n",a[0][0]);
    }
    return 0;
}
 