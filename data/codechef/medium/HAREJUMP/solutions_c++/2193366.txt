#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#include <map>
#include <vector>
#include <iomanip>
#include <cstring>
#include <bitset>
#include <set>
#include <cstdlib>
#include <sstream>
#include <fstream>
#include <list>
#include <queue>
#include <cassert>
#include <deque>
#include <stack>
#include <ctime>
#include <cmath>

using namespace std;

#define FOR(i, a, b) for(int i = a; i < b; i++)
#define FORN(i, a, b) for (int i = a; i >= b; i--)
#define REP(i, a) FOR(i, 0, a)
#define REPN(i, a) FORN(i, a, 0)
#define FOREACH(it, c) for (typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define CLEAR(b) memset((b), 0, sizeof(b))
#define SET(a, b) memset((a), (b), sizeof(a))
#define setmax(a, b) if (a < b) {a = b;}
#define setmin(a, b) if (a > b) {a = b;}
#define ub(V, x) upper_bound((V).begin(), (V).end(), x)
#define lb(V, x) lower_bound((V).begin(), (V).end(), x)
#define pb push_back
#define mp make_pair

const int INF = 0x3f3f3f3f;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int u32;

void f_open() {
    freopen("ques.txt", "r", stdin);
    freopen("ans.txt", "w", stdout);
}

const ll MOD = 1000000007;

void mat_mul(ll a[16][16], ll b[16][16], ll c[16][16]) {

    REP(i, 16) {
        REP(j, 16) {
            c[i][j] = 0;
            REP(k, 16) {
                ll temp = a[i][k] * b[k][j];
                if (temp > MOD) temp %= MOD;
                c[i][j] += temp;
                if (c[i][j] > MOD) c[i][j] %= MOD;
            }
        }
    }
}

void mat_pow(ll a[16][16], ll p, ll b[16][16]) {

    if (p == 0LL) {
        REP(i, 16)
            REP(j, 16) {
                if (i == j) b[i][j] = 1;
                else b[i][j] = 0;
            }
        return;
    }
    else if (p == 1LL) {
        REP(i, 16)
            REP(j, 16)
                b[i][j] = a[i][j];
        return;
    }
    ll x[16][16], c[16][16];
    mat_pow(a, p / 2, x);
    mat_mul(x, x, c);
 
    if (p & 1)
        mat_mul(a, c, b);
    else {
        REP(i, 16)
            REP(j, 16)
                b[i][j] = c[i][j];
    }
}

void solve() {

    ll N;
    scanf("%lld", &N);
    ll a[16][16], b[16][16];
    CLEAR(a);
    FOR(i, 1, 16)
        a[i][i - 1] = 1;
    int n, l;
    scanf("%d", &n);
    REP(i, n) {
        scanf("%d", &l);
        a[0][l - 1]++;
    }
    mat_pow(a, N, b);
    printf("%lld\n", b[0][0]);
}

int main() {

    //f_open();
    int T;
    scanf("%d", &T);
    REP(t, T)
        solve();
    return 0;
}
