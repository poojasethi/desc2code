    #include <cstdio>
    #include <algorithm>
    #include <cstring>
    using namespace std;
    int T, m, n, ro[105][4][10], co[105][4][10], ma[105][105][10], ans;
    char c[105][105];
    int bi[4][4] = { 1,1,0,0, 1,1,0,0, 0,0,1,1, 0,0,1,1};
    int bj[4][4] = { 1,0,1,0, 0,1,0,1, 1,0,1,0, 0,1,0,1};
    int main() {
    scanf("%d", &T);
    while (T--) {
    scanf("%d%d", &m, &n);
    for (int i=0; i<m; ++i) {
    scanf("%s", c[i]);
    }
    ans = 0;
    for (int p=0; p<10; ++p) {
    memset(ro, -1, sizeof(ro));
    memset(co, -1, sizeof(co));
    memset(ma, 0, sizeof(ma));
    for (int i=0; i<m; ++i) {
    for (int j=0; j<n; ++j) {
    int dp[4], tmp[4];
    for (int k=0; k<4; ++k) {
    tmp[k] = c[i][j]-'0';
    if (k&1) tmp[k] = (tmp[k] + p) % 10;
    if (k&2) tmp[k] = (tmp[k] + p) % 10;
    dp[k] = 1;
    for (int o=0; o<4; ++o) {
    if (bi[k][o]) {
    dp[k] = max(dp[k], co[j][o][tmp[k]] + 1);
    }
    if (bj[k][o]) {
    dp[k] = max(dp[k], ro[i][o][tmp[k]] + 1);
    }
    }
    //if (m == 2 && p == 4 && i == 1 && j == 3 && k == 3) printf("!! %d\n", dp[3]);
    if (i > 0 && j > 0) {
    dp[k] = max(dp[k], ma[i-1][j-1][tmp[k]] + 1);
    }
    //if (m == 2 && p == 4 && i == 1 && j == 3 && k == 3) printf("!! %d %d\n", dp[3], tmp[3]);
    }
    if (i > 0) {
    for (int o=0; o<10; ++o) ma[i][j][o] = max(ma[i][j][o], ma[i-1][j][o]);
    }
    //if (m == 2 && p == 4 && i == 0 && j == 2) printf("@@@@@@@@@@@@@@@@@@@ %d\n", ma[0][2][8]);
    if (j > 0) {
    for (int o=0; o<10; ++o) ma[i][j][o] = max(ma[i][j][o], ma[i][j-1][o]);
    }
    //int temp = 0;
    for (int k=0; k<4; ++k) {
    for (int o=tmp[k]; o>=0; --o) {
    ro[i][k][o] = max(ro[i][k][o], dp[k]);
    co[j][k][o] = max(co[j][k][o], dp[k]);
    ma[i][j][o] = max(ma[i][j][o], dp[k]);
    }
    ans = max(ans, dp[k]);
    //temp = max(temp, dp[k]);
    //if (m == 2 && p == 4) printf("%d %d %d %d %d\n", i, j, k, tmp[k], dp[k]);
    }
    //if (m == 2 && p == 4) printf("%d %d %d\n", i, j, temp);
    }
    }
    //printf("%d %d\n", p, ans);
    }
    printf("%d\n", ans);
    }
    return 0;
    } 

