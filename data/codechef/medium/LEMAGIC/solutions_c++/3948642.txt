#include <cstdio>
using namespace std;

inline int max(int a,int b) { return a>b?a:b; }
inline void MAX(int &a,int b) { if(a<b) a=b; }

const int maxN = 100;
const int maxM = 100;
const int D = 10;

int a[maxN][maxM];
char buf[maxM+2];

int dp[maxN][maxM][2][2][D];

int main()
{
	int T;
	scanf("%d",&T);
	for(int t=0;t<T;t++)
	{
		int n,m;
		scanf("%d%d",&n,&m);
		int i,j;
		for(i=0;i<n;i++)
		{
			scanf("%s",buf);
			for(j=0;j<m;j++)
				a[i][j]=buf[j]-'0';
		}
		int ans=0;
		for(int p=1;p<D;p++)
		{
			for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				for(int x=0;x<2;x++)
				for(int y=0;y<2;y++)
				{
					int d;
					for(d=0;d<D;d++)
					{
						int &res = dp[i][j][x][y][d];
						res = 0;
						if(i>0) MAX(res, max(dp[i-1][j][0][y][d],dp[i-1][j][1][y][d]));
						if(j>0) MAX(res, max(dp[i][j-1][x][0][d],dp[i][j-1][x][1][d]));
					}
					int v=(a[i][j]+x*p+y*p)%D;
					int &res = dp[i][j][x][y][v];
					MAX(res, 1);
					if(i>0) MAX(res, max(dp[i-1][j][0][y][v],dp[i-1][j][1][y][v])+1);
					if(j>0) MAX(res, max(dp[i][j-1][x][0][v],dp[i][j-1][x][1][v])+1);
					for(d=0;d<v;d++)
						MAX(dp[i][j][x][y][d],res);
				}
			for(int x=0;x<2;x++)
				for(int y=0;y<2;y++)
					MAX(ans,dp[n-1][m-1][x][y][0]);
		}
		printf("%d\n",ans);
	}
	return 0;
}