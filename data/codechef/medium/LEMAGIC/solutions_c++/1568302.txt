#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <list>
#include <stack>
#include <bitset>
#include <string>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <ctime>

#define ALL(i,n)    for(i = 0; i < (n); i++)
#define FOR(i,a,b)  for(i = (a); i < (b); i++)
#define SET(p)      memset(p,-1,sizeof(p))
#define CLR(p)      memset(p,0,sizeof(p))
#define S(n)	    scanf("%d",&n)
#define P(n)	    printf("%d\n",n)
#define Sl(n)	    scanf("%lld",&n)
#define Pl(n)	    printf("%lld\n",n)
#define Sf(n)       scanf("%lf",&n)
#define Ss(n)       scanf("%s",n)
#define LL long long
#define ULL unsigned long long
#define pb push_back
using namespace std;
int dp[101][101][10][2][2],a[101][101],n,m,p;
int func(int r,int c,int sm,int x,int y)
{
    if(r>n || c>m)
        return 0;
    if(dp[r][c][sm][x][y]!=-1)
        return dp[r][c][sm][x][y];

    int ele=(a[r][c]+x*p+y*p)%10,ans=0;

    ans=max(ans,func(r+1,c,sm,0,y));
    ans=max(ans,func(r+1,c,sm,1,y));
    ans=max(ans,func(r,c+1,sm,x,0));
    ans=max(ans,func(r,c+1,sm,x,1));

    if(ele<=sm)
    {
        ans=max(ans,1+func(r+1,c,ele,0,y));
        ans=max(ans,1+func(r+1,c,ele,1,y));
        ans=max(ans,1+func(r,c+1,ele,x,0));
        ans=max(ans,1+func(r,c+1,ele,x,1));
    }

    return dp[r][c][sm][x][y]=ans;
}
int main()
{
int t,i,j,ans;
string str;
S(t);
while(t--)
{
    ans=0;
    S(n);S(m);
    for(i=1;i<=n;i++)
    {
        cin>>str;
        for(j=1;j<=m;j++)
        {
            a[i][j]=str[j-1]-48;
        }
    }
    for(p=0;p<10;p++)
    {
        SET(dp);
        ans=max(ans,func(1,1,9,0,0));
        ans=max(ans,func(1,1,9,0,1));
        ans=max(ans,func(1,1,9,1,0));
        ans=max(ans,func(1,1,9,1,1));
    }
    P(ans);
}
return 0;
}
