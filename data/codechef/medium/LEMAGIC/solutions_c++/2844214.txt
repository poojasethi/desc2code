#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
using namespace std;
vector<vector<vector<vector< vector<int> > > > > dpd(100,vector<vector<vector< vector<int> > > >(100,vector< vector< vector<int> > >(2,vector< vector<int> >(2,vector<int>(10,-1)))));
void init()
{
for(int i=0;i<100;++i)
for(int j=0;j<100;++j)
for(int k=0;k<2;++k)
for(int l=0;l<2;++l)
for(int t=0;t<10;++t)
dpd[i][j][k][l][t]=-1;
}
int m,n,p;
vector<vector<int> > data(100,vector<int>(100,0));
int dp(int i,int j,int k,int l,int t)
{
if(i>=m||j>=n)return 0;
int cv=(data[i][j]+k*p+l*p)%10;
if(i==m-1&&j==n-1)
{
if(cv<=t)return 1;
return 0;
}
if(dpd[i][j][k][l][t]!=-1)return dpd[i][j][k][l][t];
int ans=0;
//take i,j
if(cv<=t)
{
ans=max(ans,dp(i+1,j,0,l,cv)+1);
ans=max(ans,dp(i+1,j,1,l,cv)+1);
ans=max(ans,dp(i,j+1,k,0,cv)+1);
ans=max(ans,dp(i,j+1,k,1,cv)+1);
}
//leave i,j
ans=max(ans,dp(i+1,j,0,l,t));
ans=max(ans,dp(i+1,j,1,l,t));
ans=max(ans,dp(i,j+1,k,0,t));
ans=max(ans,dp(i,j+1,k,1,t));

dpd[i][j][k][l][t]=ans;
return ans;
}

int doit()
{
cin>>m>>n;
for(int i=0;i<m;++i)
{char arr[1000];
cin>>arr;
for(int j=0;j<n;++j)
data[i][j]=arr[j]-'0';
}
int ans=0;
for(p=0;p<10;++p)
{
init();
ans=max(ans,dp(0,0,0,0,9));
ans=max(ans,dp(0,0,1,0,9));
ans=max(ans,dp(0,0,0,1,9));
ans=max(ans,dp(0,0,1,1,9));
}
return ans;
}
int main()
{
int t;
cin>>t;
while(t--)
{
cout<<doit()<<endl;
}
return 0;
}