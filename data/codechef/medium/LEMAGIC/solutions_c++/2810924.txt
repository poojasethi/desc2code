    #include <iostream>
    #include <cstdio>
    #include <cstring>
    using namespace std;
    int ntest, m, n;
    int a[110][110], f[110][110][4][10];
    void checkmax(int &a, int b) {
    if (b < 0) return;
    if (a < b) a = b;
    }
    int solve(int p) {
    for (int i = 0; i <= m; i++)
    for (int j = 0; j <= n; j++)
    for (int mask = 0; mask < 4; mask++)
    for (int k = 0; k < 10; k++)
    f[i][j][mask][k] = -1000000000;
    for (int i = 1; i <= m; i++)
    for (int j = 1; j <= n; j++) {
    int v = a[i][j];
    f[i][j][0][v] = 1;
    v = (a[i][j] + p) % 10;
    f[i][j][1][v] = 1;
    f[i][j][2][v] = 1;
    v = (a[i][j] + p + p) % 10;
    f[i][j][3][v] = 1;
    }
    for (int i = 1; i <= m; i++)
    for (int j = 1; j <= n; j++) {
    int v;
    // do nothing
    v = a[i][j];
    for (int k = v; k < 10; k++) {
    // not column
    checkmax(f[i][j][0][v], f[i - 1][j][0][k] + 1);
    checkmax(f[i][j][0][v], f[i - 1][j][1][k] + 1);
    // not row
    checkmax(f[i][j][0][v], f[i][j - 1][0][k] + 1);
    checkmax(f[i][j][0][v], f[i][j - 1][2][k] + 1);
    }
    // do row or column
    v = (a[i][j] + p) % 10;
    for (int k = v; k < 10; k++) {
    // do column
    checkmax(f[i][j][2][v], f[i - 1][j][2][k] + 1);
    checkmax(f[i][j][2][v], f[i - 1][j][3][k] + 1);
    checkmax(f[i][j][2][v], f[i][j - 1][0][k] + 1);
    checkmax(f[i][j][2][v], f[i][j - 1][2][k] + 1);
    // do row
    checkmax(f[i][j][1][v], f[i][j - 1][1][k] + 1);
    checkmax(f[i][j][1][v], f[i][j - 1][3][k] + 1);
    checkmax(f[i][j][1][v], f[i - 1][j][0][k] + 1);
    checkmax(f[i][j][1][v], f[i - 1][j][1][k] + 1);
    }
    // do both
    v = (a[i][j] + p + p) % 10;
    for (int k = v; k < 10; k++) {
    // do column
    checkmax(f[i][j][3][v], f[i - 1][j][2][k] + 1);
    checkmax(f[i][j][3][v], f[i - 1][j][3][k] + 1);
    // do row
    checkmax(f[i][j][3][v], f[i][j - 1][1][k] + 1);
    checkmax(f[i][j][3][v], f[i][j - 1][3][k] + 1);
    }
    // update
    for (int k = 0; k < 10; k++) {
    // not column
    checkmax(f[i][j][0][k], f[i - 1][j][0][k]);
    checkmax(f[i][j][0][k], f[i - 1][j][1][k]);
    // not row
    checkmax(f[i][j][0][k], f[i][j - 1][0][k]);
    checkmax(f[i][j][0][k], f[i][j - 1][2][k]);
    // do column
    checkmax(f[i][j][2][k], f[i - 1][j][2][k]);
    checkmax(f[i][j][2][k], f[i - 1][j][3][k]);
    checkmax(f[i][j][2][k], f[i][j - 1][0][k]);
    checkmax(f[i][j][2][k], f[i][j - 1][2][k]);
    // do row
    checkmax(f[i][j][1][k], f[i][j - 1][1][k]);
    checkmax(f[i][j][1][k], f[i][j - 1][3][k]);
    checkmax(f[i][j][1][k], f[i - 1][j][0][k]);
    checkmax(f[i][j][1][k], f[i - 1][j][1][k]);
    // do column
    checkmax(f[i][j][3][k], f[i - 1][j][2][k]);
    checkmax(f[i][j][3][k], f[i - 1][j][3][k]);
    // do row
    checkmax(f[i][j][3][k], f[i][j - 1][1][k]);
    checkmax(f[i][j][3][k], f[i][j - 1][3][k]);
    }
    }
    int ans = -1;
    for (int mask = 0; mask < 4; mask++)
    for (int k = 0; k < 10; k++)
    checkmax(ans, f[m][n][mask][k]);
    return ans;
    }
    int main() {
    //freopen("input.txt", "r", stdin);
    cin >> ntest;
    for (int test = 0; test < ntest; test++) {
    cin >> m >> n;
    for (int i = 1; i <= m; i++)
    for (int j = 1; j <= n; j++) {
    char c;
    cin >> c;
    a[i][j] = c - '0';
    }
    int ans = -1;
    for (int p = 0; p < 10; p++)
    checkmax(ans, solve(p));
    cout << ans << endl;
    }
    } 
