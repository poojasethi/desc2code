#include<stdio.h>

inline int max(int a,int b){return a>b?a:b ;}

int main()
{
	int t,N,M,input[101][101],P,i,j,k,l,p,o,sol[4][10][101][101],in,dp,res;
	char str[101];
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&N,&M);		
		for(i=0;i<N;i++)
		{
			scanf("%s",str);
			for(j=0;j<M;j++)
				input[i][j] = str[j]-'0';
		}
		res=1;
		for(P=1;P<10;P++)
		{ 
				for(i=N-1;i>-1;i--)
					for(j=M-1;j>-1;j--)
						for(k=9;k>-1;k--)
						{
							for(o=0;o<4;o++)
							{
								dp=0;
								in = input[i][j];
								if((o&1)>0)
									in = (in+P)%10;
								if((o&2)>0)
									in = (in+P)%10;
								if (in < k+1)
									dp = 1;
									
								if (M>j+1) {
									dp = max(dp, max(sol[o&1][k][i][j+1],sol[(o&1)|2][k][i][j+1]));
									if (in < k+1)
										dp = max(dp,1 + max(sol[o&1][in][i][j+1],sol[(o&1)|2][in][i][j+1]));
								}
								if (N>i+1) 
								{
									dp = max(dp,max(sol[o&2][k][i+1][j],sol[(o&2)|1][k][i+1][j]));
									if (in < k+1)
										dp = max(dp,1 + max(sol[o&2][in][i+1][j],sol[(o&2)|1][in][i+1][j]));
								}
								
								
								sol[o][k][i][j] = dp;
							}
							if (i == 0 && j == 0 && k == 9) 
							{
								for (p = 0; p < 4; p++)
									res = max(res, sol[p][9][0][0]);
							}
						}
		}
		printf("%d\n",res);
	}
	return 0;
}