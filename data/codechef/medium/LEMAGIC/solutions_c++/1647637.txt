#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

using namespace std;

const int kMaxN = 100, kMaxM = 100;
int n, m, mat[kMaxN][kMaxM];
int dp[kMaxN][kMaxM][2][10];
int f[kMaxM][2][10];
int g[2][10];

#define C(a, b) (((a) + (b)) % 10)

inline void D(int &des, int src) {
	des = max(des, src);
}

int main() {
	//freopen("t.in", "r", stdin);
	int t;
	for (scanf("%d", &t); t --; ) {
		scanf("%d%d", &n, &m);
		static char buf[128];
		for (int i = 0; i < n; ++ i) {
			scanf("%s", buf);
			for (int j = 0; j < m; ++ j) mat[i][j] = buf[j] - '0';
		}
		int res = 0;
		for (int p = 0; p < 10; ++ p) {
			memset(dp, -0x3f, sizeof(dp));
			memset(f, -0x3f, sizeof(f));
			for (int j = 0; j < m; ++ j) {
				f[j][0][mat[0][j]] = 1;
				f[j][1][C(mat[0][j], p)] = 1;
			}
			memset(g, -0x3f, sizeof(g));
			for (int c = 0; c < 2; ++ c)
				for (int d = 0; d < 10; ++ d) g[c][d] = f[0][c][d];
			for (int j = 1; j < m; ++ j) {
				for (int a = 0; a < 2; ++ a)
					for (int c = 0; c < 2; ++ c)
						for (int d = a ? C(mat[0][j], p) : mat[0][j]; d < 10; ++ d)
							D(f[j][a][a ? C(mat[0][j], p) : mat[0][j]], g[c][d] + 1);
				for (int c = 0; c < 2; ++ c)
					for (int d = 0; d < 10; ++ d) D(g[c][d], f[j][c][d]);
			}
			for (int j = 1; j < m; ++ j)
				for (int a = 0; a < 2; ++ a)
					for (int c = 0; c < 2; ++ c)
						for (int d = 0; d < 10; ++ d)
							D(f[j][a][d], f[j - 1][c][d]);
			for (int j = 0; j < m; ++ j)
				for (int a = 0; a < 2; ++ a)
					for (int b = 0; b < 10; ++ b)
						D(dp[0][j][a][b], f[j][a][b]);
			memset(f, -0x3f, sizeof(f));
			for (int j = 0; j < m; ++ j) {
				f[j][0][C(mat[0][j], p)] = 1;
				f[j][1][C(mat[0][j], C(p, p))] = 1;
			}	
			memset(g, -0x3f, sizeof(g));
			for (int c = 0; c < 2; ++ c)
				for (int d = 0; d < 10; ++ d) g[c][d] = f[0][c][d];
			for (int j = 1; j < m; ++ j) {
				for (int a = 0; a < 2; ++ a)
					for (int c = 0; c < 2; ++ c)
						for (int d = a ? C(mat[0][j], C(p, p)) : C(mat[0][j], p); d < 10; ++ d)
							D(f[j][a][a ? C(mat[0][j], C(p, p)) : C(mat[0][j], p)], g[c][d] + 1);
				for (int c = 0; c < 2; ++ c)
					for (int d = 0; d < 10; ++ d) D(g[c][d], f[j][c][d]);
			}
			for (int j = 1; j < m; ++ j)
				for (int a = 0; a < 2; ++ a)
					for (int c = 0; c < 2; ++ c)
						for (int d = 0; d < 10; ++ d)
							D(f[j][a][d], f[j - 1][c][d]);
			for (int j = 0; j < m; ++ j)
				for (int a = 0; a < 2; ++ a)
					for (int b = 0; b < 10; ++ b)
						D(dp[0][j][a][b], f[j][a][b]);
			for (int i = 1; i < n; ++ i) {
				memset(f, -0x3f, sizeof(f));
				for (int j = 0; j < m; ++ j) {
					for (int b = 0; b < 10; ++ b) {
						D(f[j][0][b], dp[i - 1][j][0][b]);
						D(f[j][1][b], dp[i - 1][j][1][b]);
					}
					int x;
					x = 0;
					for (int b = mat[i][j]; b < 10; ++ b)
						x = max(x, dp[i - 1][j][0][b]);
					D(f[j][0][mat[i][j]], x + 1);
					x = 0;
					for (int b = C(mat[i][j], p); b < 10; ++ b)
						x = max(x, dp[i - 1][j][1][b]);
					D(f[j][1][C(mat[i][j], p)], x + 1);
				}
				memset(g, -0x3f, sizeof(g));
				for (int c = 0; c < 2; ++ c)
					for (int d = 0; d < 10; ++ d) g[c][d] = f[0][c][d];
				for (int j = 1; j < m; ++ j) {
					for (int a = 0; a < 2; ++ a)
						for (int c = 0; c < 2; ++ c)
							for (int d = a ? C(mat[i][j], p) : mat[i][j]; d < 10; ++ d)
								D(f[j][a][a ? C(mat[i][j], p) : mat[i][j]], g[c][d] + 1);
					for (int c = 0; c < 2; ++ c)
						for (int d = 0; d < 10; ++ d) D(g[c][d], f[j][c][d]);
				}
				for (int j = 1; j < m; ++ j)
					for (int a = 0; a < 2; ++ a)
						for (int c = 0; c < 2; ++ c)
							for (int d = 0; d < 10; ++ d)
								D(f[j][a][d], f[j - 1][c][d]);
				for (int j = 0; j < m; ++ j)
					for (int a = 0; a < 2; ++ a)
						for (int b = 0; b < 10; ++ b) D(dp[i][j][a][b], f[j][a][b]);
				memset(f, -0x3f, sizeof(f));
				for (int j = 0; j < m; ++ j) {
					for (int b = 0; b < 10; ++ b) {
						D(f[j][0][b], dp[i - 1][j][0][b]);
						D(f[j][1][b], dp[i - 1][j][1][b]);
					}
					int x;
					x = 0;
					for (int b = C(mat[i][j], p); b < 10; ++ b)
						x = max(x, dp[i - 1][j][0][b]);
					D(f[j][0][C(mat[i][j], p)], x + 1);
					x = 0;
					for (int b = C(mat[i][j], C(p, p)); b < 10; ++ b)
						x = max(x, dp[i - 1][j][1][b]);
					D(f[j][1][C(mat[i][j], C(p, p))], x + 1);
				}
				memset(g, -0x3f, sizeof(g));
				for (int c = 0; c < 2; ++ c)
					for (int d = 0; d < 10; ++ d) g[c][d] = f[0][c][d];
				for (int j = 1; j < m; ++ j) {
					for (int a = 0; a < 2; ++ a)
						for (int c = 0; c < 2; ++ c)
							for (int d = a ? C(mat[i][j], C(p, p)) : C(mat[i][j], p); d < 10; ++ d)
								D(f[j][a][a ? C(mat[i][j], C(p, p)) : C(mat[i][j], p)], g[c][d] + 1);
					for (int c = 0; c < 2; ++ c)
						for (int d = 0; d < 10; ++ d) D(g[c][d], f[j][c][d]);
				}

				for (int j = 1; j < m; ++ j)
					for (int a = 0; a < 2; ++ a)
						for (int c = 0; c < 2; ++ c)
							for (int d = 0; d < 10; ++ d)
								D(f[j][a][d], f[j - 1][c][d]);
				for (int j = 0; j < m; ++ j)
					for (int a = 0; a < 2; ++ a)
						for (int b = 0; b < 10; ++ b) 
							D(dp[i][j][a][b], f[j][a][b]);
			}
			for (int i = 0; i < n; ++ i)
				for (int j = 0; j < m; ++ j)
					for (int a = 0; a < 2; ++ a)
						for (int b = 0; b < 10; ++ b)
							D(res, dp[i][j][a][b]);
			//printf("%d %d\n", p, res);
		}
		printf("%d\n", res);
	}
	return 0;
}