#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
int a[111][111],p,n,m,dp[111][111][2][2][10];
int doit(int r, int c, int x, int y, int d) {
	if (r < 0 || c < 0) return 0;
	if (d > 9) return 0;
	int &res = dp[r][c][x][y][d];
	if (res != -1) return res;
	int v = a[r][c] + x * p + y * p;
	v %= 10;
	res = 0;
	res = max(res,doit(r - 1,c,0,y,d));
	res = max(res,doit(r - 1,c,1,y,d));
	res = max(res,doit(r,c - 1,x,0,d));
	res = max(res,doit(r,c - 1,x,1,d));
	res = max(res,doit(r - 1,c - 1,0,0,d));
	res = max(res,doit(r - 1,c - 1,1,0,d));
	res = max(res,doit(r - 1,c - 1,0,1,d));
	res = max(res,doit(r - 1,c - 1,1,1,d));	
	res = max(res,doit(r,c,x,y,d + 1));
	if (d == v) res++;
	return res;
}
void solve() {
	cin >> n >> m;
	for (int i = 0; i < n; i++) {
		string s; cin >> s;
		for (int j = 0; j < m; j++) {
			a[i][j] = s[j] - '0';
		}
	}	
	int res = 0;
	for (p = 0; p < 10; p++) {
		memset(dp,-1,sizeof(dp));
		for (int x = 0; x < 2; x++) {
			for (int y = 0; y < 2; y++) {
				res = max(res,doit(n - 1,m - 1,x,y,0));
			}
		}
	}
	cout << res << endl;
}
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
}
