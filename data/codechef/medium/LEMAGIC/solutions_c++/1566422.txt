#include <cstdio>
#include <iostream>

using namespace std;

char A[105][105], que;
int D[105][105][3][3][12], Z[105][105][3][3][12], casos, cto1, cto2, suma, num, res;

void din(int x, int y, int col, int row, int antes){
    int vale=A[x][y];
    if(col==1){
        vale=(vale+suma)%10;
    }
    if(row==1){
        vale=(vale+suma)%10;
    }
    if(x==cto1 and y==1){
        if(vale<=antes){
            D[x][y][col][row][antes]=1;
        }
        else {
            D[x][y][col][row][antes]=0;
        }
    }
    else {
        D[x][y][col][row][antes]=0;
        if(x<cto1){
            if(Z[x+1][y][0][row][antes]!=num){
                din(x+1, y, 0, row, antes);
            }
            D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x+1][y][0][row][antes]);
            if(Z[x+1][y][1][row][antes]!=num){
                din(x+1, y, 1, row, antes);
            }
            D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x+1][y][1][row][antes]);
            if(vale<=antes){
                if(Z[x+1][y][0][row][vale]!=num){
                    din(x+1, y, 0, row, vale);
                }
                D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x+1][y][0][row][vale]+1);
                if(Z[x+1][y][1][row][vale]!=num){
                    din(x+1, y, 1, row, vale);
                }
                D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x+1][y][1][row][vale]+1);
            }
        }
        if(y>1){
            if(Z[x][y-1][col][0][antes]!=num){
                din(x, y-1, col, 0, antes);
            }
            D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x][y-1][col][0][antes]);
            if(Z[x][y-1][col][1][antes]!=num){
                din(x, y-1, col, 1, antes);
            }
            D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x][y-1][col][1][antes]);
            if(vale<=antes){
                if(Z[x][y-1][col][0][vale]!=num){
                    din(x, y-1, col, 0, vale);
                }
                D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x][y-1][col][0][vale]+1);
                if(Z[x][y-1][col][1][vale]!=num){
                    din(x, y-1, col, 1, vale);
                }
                D[x][y][col][row][antes]=max(D[x][y][col][row][antes], D[x][y-1][col][1][vale]+1);
            }
        }
    }
    res=max(res, D[x][y][col][row][antes]);
    Z[x][y][col][row][antes]=num;
}

int main()
{
    scanf("%d",&casos);
    while(casos--){
        res=0;
        scanf("%d%d",&cto2,&cto1);
        for(int i=cto2; i>0; i--){
            for(int e=1; e<=cto1; e++){
                cin>>que;
                A[e][i]=que-'0';
            }
        }
        for(suma=0; suma<10; suma++){
            num=casos*100+suma+1;
            din(1, cto2, 0, 0, 9);
            din(1, cto2, 0, 1, 9);
            din(1, cto2, 1, 0, 9);
            din(1, cto2, 1, 1, 9);
        }
        printf("%d\n",res);
    }
    return 0;
}