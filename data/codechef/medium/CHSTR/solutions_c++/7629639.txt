//#include<stdio.h>
//#include<stdlib.h>
//#include<string.h>
#include<bits/stdc++.h>
using namespace std;
#define sd(x) scanf("%d",&x)
#define slld(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
string a[5002];
int f[5002],f1[5002],mod=1000000007,x,b[5002],b1[5002],d[5002];
int p(int a,int b)
{
    if(b==0)
        return 1;
    if(b==1)
        return a%mod;
    x=p(a,b/2)%mod;
    return (1ll*((1ll*x*x)%mod)*p(a,b%2))%mod;
}
int com(int n,int r)
{
    return (1ll*((1ll*f[n]*f1[r])%mod)*f1[n-r])%mod;
}
int main()
{
    int t,n,m,q,i,j,k1,k,y,min1,l;
    f[0]=1;
    for(i=1;i<=5000;i++)
        f[i]=(1ll*f[i-1]*i)%mod;
    for(i=0;i<=5000;i++)
        f1[i]=p(f[i],mod-2);
    sd(t);
    while(t--)
    {
        for(i=0;i<=5000;i++)
            d[i]=0;
        sd(n);
        sd(q);
        cin>>a[0];
        for(i=1;i<=n-1;i++)
        {
            a[i]=a[i-1].substr(1,n-i);
        }
        sort(a,a+n);
        /*for(i=0;i<n;i++)
            cout<<a[i]<<endl;*/
        k=0;k1=0;
        for(i=0;i<=n;i++)
            b[i]=0;
        for(i=0;i<n-1;i++)
        {
            k=k1;
            k1=0;
            min1=min(a[i].length(),a[i+1].length());
            for(j=0;j<min1;j++)
            {
                if(a[i][j]==a[i+1][j])
                    k1++;
                else
                    break;
            }
            if(k1>k)
            {
                for(j=k+1;j<=k1;j++)
                    b1[j]=i;
            }
            else if(k1<k)
            {
                for(j=k1+1;j<=k;j++)
                {
                    l=i-b1[j]+1;
                    d[l]++;
                }
            }
        }
        for(j=1;j<=k1;j++)
        {
            l=i-b1[j]+1;
            d[l]++;
        }
        for(i=1;i<=5000;i++)
        {
            if(d[i]>0)
            {
                for(j=1;j<=i;j++)
                    b[j]=(b[j]+(1ll*d[i]*com(i,j))%mod)%mod;
            }
        }
        b[1]=((1ll*n*(n+1))/2)%mod;
        while(q--)
        {
            sd(m);
            if(m>n)
                printf("0\n");
            else
                printf("%d\n",b[m]);
        }
    }
    return 0;
}
