#include <cstdio>
#include <cstring>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <cmath>
#include <map>
#include <string>
#include <iostream>
#define mod 1000000007
#define lli long long int
using namespace std;
vector<lli> f(5001 , 1);
vector<lli> inv(5001 , 1);
long long power(lli a, lli b, lli MOD)
{
	long long x=1,y=a;
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>MOD) x%=MOD;
		}
		y = (y*y);
		if(y>MOD) y%=MOD;
		b /= 2;
	}
	return x;
}

long long Euler(lli n, lli MOD)
{
	return power(n,MOD-2,MOD);
}

long long C(int n, int r, lli MOD)
{
	return (f[n]*((inv[r] * inv[n-r])% MOD)) % MOD;
}
int main()
{
	int t,n,q;
	scanf("%d",&t);
	while(t-->0)
	{
		scanf("%d %d",&n,&q);
		string str,temp;
		cin>>str;
		vector<lli> ct(n+1,0);
		priority_queue<string> pq;
		for(int i=0;i<str.length();i++)
		{
			temp=str.substr(i,n-i);
			pq.push(temp);
		}
		vector<string> pfarr(n);
		for(int i=n-1;!pq.empty();i--)
		{
			pfarr[i]=pq.top();
			pq.pop();
		}
		string l1,l2;
		l1=pfarr[0];
		vector<lli> lsc(n+1,0);
		vector<lli> v1(n+1,1);
		ct[1]+=l1.length();
		lli max=1;
		for(int i=1;i<n;i++)
		{
			l1=pfarr[i-1];l2=pfarr[i];
			lsc[i]=0;
			for(int j=0;j<l1.length() && j<l2.length();j++)
			{
				if(l1.at(j)==l2.at(j))
				{
					lsc[i]++;
				}
				else
				break;
			}
			ct[1]+=l2.length()-lsc[i];
			if(lsc[i]==0)
			v1.assign(n+1,1);
			else if(lsc[i]>=lsc[i-1])
			{
				for(int j=0;j<lsc[i];j++)
				{
					ct[v1[j]]--;
					v1[j]++;
					ct[v1[j]]++;
					if(max<v1[j])
					max=v1[j];
				}
			}
			else if(lsc[i]<lsc[i-1])
			{
				for(int j=0;j<lsc[i];j++)
				{
					ct[v1[j]]--;
					v1[j]++;
					ct[v1[j]]++;
					if(max<v1[j])
					max=v1[j];
				}
				for(int j=lsc[i];j<lsc[i-1];j++)
				{
					v1[j]=1;
				}
			}
		}

		for (int i=2; i<=max;i++)
		f[i]= (f[i-1]*i) % mod;

		for(int i=2;i<=max;i++)
		{
			inv[i]=Euler(f[i],mod);
		}

		vector<lli> res(max+1,0);
		for(int i=1;i<=max;i++)
		{
			lli po=0;
			for(int j=max;j>=i;j--)
			{
				po=po+C(j,i,mod)*ct[j];
				if(po>mod)
				po%=mod;
			}
			res[i]=po;
		}
		lli y;
		for(int i=0;i<q;i++)
		{
			scanf("%lld",&y);
			if(y>max)
			{
				printf("0\n");
			}
			else
			{
				printf("%lld\n",res[y]);
			}
		}
	}
}
