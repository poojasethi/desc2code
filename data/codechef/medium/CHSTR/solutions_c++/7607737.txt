#include<bits/stdc++.h>
using namespace std;
#define gc getchar_unlocked
#define pc putchar_unlocked
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define MAXN 100005
#define MOD 1000000007
#define mod MOD
#define ll long long
using namespace std;
 
inline void inp(ll *n )
{
*n=0; ll ch=gc(); int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}
while( ch >= '0' && ch <= '9' ) *n = (*n<<3)+(*n<<1) + ch-'0', ch=gc();
*n=*n*sign;
}
 
inline void fastp(ll a)
{
    register char c; char snum[20]; int i=0;
    do { snum[i++]=a%10+48; a=a/10; }while(a!=0);
    i=i-1; while(i>=0) pc(snum[i--]);
    pc('\n');
}
 
int nCr[5002][5002];
int power[5002];
int a[5005];
ll ans[5005];
int arr[200];
char s[5005];
ll b=10037;
 
void solve(ll n)
{
    int i,j,l,p;
    p=(int)n;
    for(i=0;i<=p;i++) nCr[i][0]=nCr[i][i]=1;
    for(i=0;i<=p;i++)
    {
        l=i-1;
        for(j=1;j<i;j++)
        {
            nCr[i][j]=nCr[l][j-1]+nCr[l][j];
            nCr[i][j]%=MOD;
        }
    }
 
}
 
void calculate(ll a)
{
    int i; power[0]=1;
    for(i=1;i<5002;i++)
    {
        power[i]=((ll)power[i-1]*(ll)a)%mod;
    }
    for(i=97;i<130;i++) arr[i]=i-96;
}
ll int_mod(ll a, ll b)
{
  a=a%b;
  return a<0?(a+b)%b:a;
}
 
int main()
{
    ll t,n,i,j,l,r,k,q;
 
    solve(5002);
 
    calculate(b);
    //freopen("x.txt","r",stdin);
    inp(&t);
    while(t--)
    {
       inp(&n); inp(&q); l=n;
 
       memset(a,0,sizeof(a));
 
       memset(ans,0,sizeof(ans));
 
       while((s[0] = gc()) < 'a' || s[0] > 'z');
       ll L = 1;
       while((s[L] = gc()) >= 'a' && s[L] <= 'z') L++;
       s[L] = '\0';
 
       for(i=0;i<n;i++)
       {
           map< ll,ll > m;
           map< ll ,ll >::iterator c,d;
 
           ll ht = 0; k=i+1; ll e=power[k];
 
           for(j=0;j<k;j++)
           {
               ht=(ht*b + (arr[s[j]]));
               if(ht>mod) ht%=mod;
           }
           m[ht]++;
 
           for(j= k;j<l;j++)
           {
             ht = int_mod(ht*b - arr[s[j-k]]*e + arr[s[j]],mod);
             m[ht]++;
           }
 
           ll flag=0;
 
           for(c=m.begin(),d=m.end();c!=d;++c)
           {
               if((*c).second>1) { a[(*c).second]++; flag=1;}
           }
           if(!flag) break;
       }
 
       vector< ll > index;
 
       for(i=2;i<=l;i++)
       {
           if(a[i]) index.pb(i);
       }
 
       k=index.size();
       ans[1]=(n*(n+1))/2;
 
       for(i=2;i<=n;i++)
       {
           j=(lower_bound(index.begin(),index.end(),i)-index.begin());
           if(j>=k) break;
           for(;j<k;j++) ans[i]=((long long)ans[i]+((long long)a[index[j]])*((long long)nCr[index[j]][i]))%MOD;
       }
       while(q--)
       {
           inp(&k);
           if(k>n) fastp(0);
           else fastp(ans[k]);
       }
    }
  return 0;
}
   