#include<iostream>
#include<vector>
#include<set>
#include<algorithm>
using namespace std;

string s;
int k;
set<int>se[28];
set<int>::iterator j;
set<int>ans;
bool flag;

void func(int beg,int last)
{
if(flag)
return;
for(int i=0;i<26;i++)
{
if(flag)
return;
vector<int>temp;
while(se[i].size()>0&&(*se[i].rbegin())>=beg)
{
ans.insert(*se[i].rbegin());
k--;
if(k==0)
{
flag=true;
return;
}
temp.push_back(*se[i].rbegin());
se[i].erase(*se[i].rbegin());
}
int f=last;
reverse(temp.begin(),temp.end());
for(int i=temp.size()-1;i>=0;i--)
{
func(temp[i]+1,last);
if(flag)
return;
f=temp[i]-1;
}
}
}

int main()
{
ios_base::sync_with_stdio(false);
int t;
cin>>t;
while(t--)
{
flag=false;
ans.clear();
for(int i=0;i<26;i++)
se[i].clear();
cin>>s>>k;
for(int i=0;i<s.size();i++)
se[s[i]-'a'].insert(i);
func(0,s.size()-1);
for(j=ans.begin();j!=ans.end();j++)
cout<<s[*j];
cout<<endl;
}
return 0;
}
