#include<stdio.h>
long long int mod=1000000007;

void mulmat(long long int a[3][3],long long int b[3][3])
{
	long long int ans[3][3];
	int i,j,k;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
		{
			ans[i][j]=0;
			for(k=0;k<3;k++)
				ans[i][j]=(ans[i][j]+((a[i][k]*b[k][j])%mod))%mod;
		}
	}
	
	for(i=0;i<3;i++)
		for(j=0;j<3;j++)
			a[i][j]=ans[i][j]%mod;
}

void modpowmat(long long int a[3][3],long long int n,long long int ans[3][3])
{
	int i,j;
	for(i=0;i<3;i++)
	{
		for(j=0;j<3;j++)
			ans[i][j]=0;
		ans[i][i]=1;
	}
	
	while(n>0)
	{
		if(n%2==1)
		{
			mulmat(ans,a);
		}
		mulmat(a,a);
		n=n>>1;
	}
}


int main()
{
	long long int dp[3],x[3][3],t,n,i,j;
	dp[2]=1;
	dp[1]=5;
	dp[0]=11;
	long long int y;
	
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld",&n);
		
		if(n<=3)
		{
			printf("%lld\n",dp[2-n+1]);
			continue;
		}
		
		long long int m[3][3]={{1,4,2},{1,0,0},{0,1,0}};
		
		modpowmat(m,n-3,x);
		
		//~ for(i=0;i<3;i++)
		//~ {
			//~ for(j=0;j<3;j++)
				//~ printf("%lld ",x[i][j]);
			//~ printf("\n");
		//~ }
		
		y=0;
		for(i=0;i<3;i++)
			y=(y+((dp[i]*x[0][i])%mod))%mod;
		printf("%lld\n",y);
	}
	
	return 0;
}
