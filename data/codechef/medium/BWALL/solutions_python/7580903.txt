#include <cstdio>
#include <iostream>
#include <vector>

using namespace std;

typedef unsigned long long ULong;
typedef vector<vector<ULong>> Matrix;

#define MOD 1000000007

Matrix operator*(Matrix& A, Matrix& B) {
  size_t n = A.size();
  Matrix C = {{0,0,0},{0,0,0},{0,0,0}};
  for(int i=0; i<n; i++) {
    for(int j=0; j<n; j++) {
      C[i][j] = 0;
      for(int k=0; k<n; k++)
        C[i][j] = (C[i][j] + ((A[i][k] * B[k][j]) % MOD)) % MOD;
    }
  }
  return C;
}

ULong getAnswer(Matrix base,int N) {
  if(N == 1) return 1;
  else if(N == 2) return 5;
  else if(N == 3) return 11;
  
  N -= 3;
  Matrix resultant = {{1,0,0},{0,1,0},{0,0,1}};
  while(N > 0) {
    if((N % 2) == 1)
      resultant = resultant * base;
    base = base * base;
    N >>= 1;
  }
  return ((11*resultant[0][0]) % MOD
       + (5*resultant[0][1]) % MOD
       + (1*resultant[0][2]) % MOD) % MOD;
}

int main() {
  unsigned int T; scanf("%u",&T);
  while(T--) {
    int N; scanf("%d",&N);
    printf("%llu\n",getAnswer({{1,4,2},{1,0,0},{0,1,0}},N));
  }
  return 0;
}