#include <stdio.h>
#include <math.h>
#define MOD 1000000007
#define MAX 1000000000

long long int firstMatrix[3][3] = {
		{1,4,2},
		{1,0,0},
		{0,1,0}
};

long long int edge[3] = {11,5,1};
int maxPower = log(MAX)/log(2) + 1;

void multiplyMatrix(long long int outputMatrix[3][3],long long int inputMatrix1[3][3],long long int inputMatrix2[3][3]){
	int i;
	for(i=0;i<3;i++){
		int j;
		for(j=0;j<3;j++){
			outputMatrix[i][j] = ((inputMatrix1[i][0]*inputMatrix2[0][j])%MOD + (inputMatrix1[i][1]*inputMatrix2[1][j])%MOD +
					(inputMatrix1[i][2]*inputMatrix2[2][j])%MOD)%MOD;

		}
	}
}
int main(){
	long long int powerTable[maxPower][3][3];
	long long int i;
	for(i=0;i<3;i++){
		int j;
		for(j=0;j<3;j++){
			powerTable[0][i][j] = firstMatrix[i][j];
		}
	}
	for(i=1;i<maxPower;i++){
		multiplyMatrix(powerTable[i], powerTable[i-1],powerTable[i-1]);
		//		int k;
		//			for(k=0;k<3;k++){
		//				int j;
		//				for(j=0;j<3;j++){
		//					printf(" %li ",powerTable[i][k][j]);
		//				}
		//				printf("\n");
		//			}
	}
	int T;
	scanf("%d",&T);
	while(T--){
		long long int N;
		scanf("%lli",&N);
		long long int resultMatrix[3][3]={
				{1,0,0},
				{0,1,0},
				{0,0,1}
		};
		int j=0;
		if(N<=3){
			printf("%lli\n",edge[3-N]);
			continue;
		}
		N-=3;

		for(i=N; i>0 ; i=i>>1){
			if((i&1)==1){
				long long int tmp[3][3];
				int k;
				for(k=0;k<3;k++){
					int l;
					for(l=0;l<3;l++){
						tmp[k][l] = resultMatrix[k][l];
					}
				}
				multiplyMatrix(resultMatrix,tmp,powerTable[j]);
			}
			j++;
		}
		long long int result = ((resultMatrix[0][0]*edge[0])%MOD + (resultMatrix[0][1]*edge[1])%MOD +
				(resultMatrix[0][2]*edge[2])%MOD)%MOD;
		printf("%lli\n",result);
	}
}
