#include <iostream>
#include <stdio.h>
#include <vector>
#include <string>

#define MAX(x,y) x>y?x:y
#define MIN(x,y) x<y?x:y
#define pb push_back
#define mp make_pair
#define forr(i,n) for(i=0;i<n;i++)
#define rep(i,n) for(int i=1;i<=n;i++)
#define endl '\n'
using namespace std;
typedef long long ll;
typedef vector<ll> vll;
typedef vector<vector<ll> > matrix;
const ll mod=1e9+7;
const int k=3;
ll ways(ll);
matrix mul(matrix,matrix);
matrix pow(matrix,int);

int main()
{
	std::ios::sync_with_stdio(0);
	ll i,j,t,k,m,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		cout<<ways(n)<<endl;
	}
}

ll ways(ll n)
{
	vector<ll> f(k+1);
	f[1]=1;f[2]=5;f[3]=11;

	matrix t(k+1,vector<ll>(k+1));
	t[1][1]=0,t[1][2]=1,t[1][3]=0;
	t[2][1]=0,t[2][2]=0,t[2][3]=1;
	t[3][1]=2,t[3][2]=4,t[3][3]=1;

	if(n==1)return 1;
	else if(n==2)return 5;
	else if(n==3)return 11;
	else
		t=pow(t,n-3);

	ll res=0;
	for(int i=1;i<=k;i++)
		res = (res+t[3][i]*f[i])%mod;
	return res;
}

matrix mul(matrix a,matrix b)
{
	matrix c(k+1,vector<ll>(k+1));
	rep(i,k) rep(j,k) rep(l,k)
		c[i][j]=(c[i][j]+a[i][l]*b[l][j])%mod;
	return c;
}

matrix pow(matrix a,int p)
{
	if(p==1)return a;
	if(p&1)
		return mul(a,pow(a,p-1));
	matrix x = pow(a,p/2);
	return mul(x,x);
}