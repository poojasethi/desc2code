#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;
#define REP(i,n) for(int i=0; i<n; i++)
typedef vector<vector<int long long>> matrix;
const int K = 3, mod = 1000000007;

matrix multiply(matrix A, matrix B) {
	matrix C(K+1, vector<int long long> (K+1, 0));
	REP(i,K) REP(j,K) REP(k,K)
		C[i+1][j+1] = (C[i+1][j+1] + A[i+1][k+1]*B[k+1][j+1]) % mod;
	return C;
}

matrix pow(matrix A, int long long p) {
	if(p==1)
		return A;
	else if(p%2)
		return multiply(A,pow(A,p-1));
	matrix X = pow(A, p/2);
	return multiply(X, X);
}

int ans(matrix A, matrix B, int long long n) {
	if(n<=3) {
		return B[4-n][1];
	}
	else {
		A = pow(A, n-3);
		B = multiply(A, B);
		return B[1][1];
	}
}

int main() {
	int long long t, n;
	cin >> t;
	matrix A(K+1, vector<int long long> (K+1, 0)), B(K+1, vector<int long long> (2, 0));
	A = { {0, 1, 0, 0},
	      {0, 1, 4, 2},
		  {0, 1, 0, 0},
		  {0, 0, 1, 0} 
		};
	B = { {0,0},
		  {0,11},
	      {0,5},
	      {0,1}
		};
	/*for(int i = 0; i < K+1; i++) {
		for(int j = 0; j < 2; j++)
			cout << B[i][j] << " ";
		cout << endl << endl;
	}*/
	while(t>0) {
		cin >> n;
		cout << ans(A, B, n) << endl;
		t--;
	}
	return 0;
}