#include<stdio.h>
#include<string.h>
int i,j,k;
long long m=1000000007;
long long compute(long long n)
{
long long M[][3]={{0,1,0},{0,0,1},{2,4,1}};
long long M1[][3]={{1,0,0},{0,1,0},{0,0,1}};
while(n!=0)
{
if(n%2!=0)
{
mul(M1,M,M1);
}
mul(M,M,M);
n=n/2;
}
return((((M1[0][0])*1)+((M1[0][1])*5)+((M1[0][2])*11))%m);
}
void mul(long long a[][3],long long b[][3],long long *M1)
{
long long c[3][3]={0};
for(i=0;i<3;i++)
{
for(j=0;j<3;j++)
{
for(k=0;k<3;k++)
{
c[i][j]=((a[i][k]*b[k][j])%m+c[i][j])%m;
//printf("%d\n",c[i][j]);
}
}
}
memcpy(M1,c,sizeof(c));
}
main()
{
int t;
scanf("%d",&t);
while(t--)
{
long long n;
scanf("%lld",&n);
printf("%lld\n",compute(n-1));
}
return(0);
}