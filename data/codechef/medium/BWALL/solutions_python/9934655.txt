#ifndef ONLINE_JUDGE
#define _CRT_SECURE_NO_WARNINGS
#include <conio.h>
#endif

#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

using namespace std;

#define M 1000000007

typedef int MATRIX[3][3];

const MATRIX baseMat =
{
	{ 1, 4, 2 },
	{ 1, 0, 0 },
	{ 0, 1, 0 },
};

const MATRIX identityMat =
{
	{ 1, 0, 0 },
	{ 0, 1, 0 },
	{ 0, 0, 1 },
};

int add(int a, int b)
{
	return ((long long)a + b) % M;
}

int mult(int a, int b)
{
	return ((long long)a*b) % M;
}

void cpyMat(MATRIX& des,const MATRIX& src)
{
	for (int i = 0; i < 3; ++i)
	{
		for (int j = 0; j < 3; ++j)
		{
			des[i][j] = src[i][j];
		}
	}
}

void multMat(MATRIX& res,const MATRIX& a,const MATRIX& b)
{
	for (int i = 0; i < 3; ++i)
	{
		for (int j = 0; j < 3; ++j)
		{
			res[i][j] = 0;
			for (int k = 0; k < 3; ++k)
			{
				res[i][j] = add(res[i][j], mult(a[i][k], b[k][j]));
			}
		}
	}
}

void powMat(int k, MATRIX& res)
{
	if (k == 0)
	{
		cpyMat(res, identityMat);
		return;
	}
	MATRIX temp;
	powMat(k >> 1, temp);
	multMat(res, temp, temp);
	if (k % 2 == 1)
	{
		cpyMat(temp, res);
		multMat(res, temp, baseMat);
	}
}

int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif

	int t;
	cin >> t;
	while (t--)
	{
		int n;
		cin >> n;
		MATRIX mat;
		int ans;
		switch (n)
		{
		case 1:
			cout << "1\n";
			break;
		case 2:
			cout << "5\n";
			break;
		default:
			powMat(n - 2, mat);
			ans = add(mult(mat[0][0], 5), add(mat[0][1], mat[0][2]));
			cout << ans << "\n";
			break;
		}
	}

#ifndef ONLINE_JUDGE
	_getch();
#endif
	return 0;
}