#include<stdio.h>
unsigned long long int ans[3][3];
void multiply(unsigned long long int F[3][3],unsigned long long int M[3][3],unsigned long long int ans[3][3]);
void power(unsigned long long int F[3][3],int n,unsigned long long int M[3][3]);
int main()
{
    int test_cases,num;
    scanf("%d",&test_cases);
    unsigned long long int M[3][3]={{1,4,2},{1,0,0},{0,1,0}};
    unsigned long long int F[3][3]={{1,4,2},{1,0,0},{0,1,0}};
    int MOD=1000000007;
    int sol[test_cases];
    for(int i=0;i<test_cases;i++)
    {
        scanf("%d",&num);
        if(num==0)
            sol[i]=1;
        else if(num==1)
            sol[i]=1;
        else if(num==2)
            sol[i]=5;
        else
          {
            F[0][0]=1;
            F[0][1]=4;
            F[0][2]=2;
            F[1][0]=1;
            F[1][1]=0;
            F[1][2]=0;
            F[2][0]=0;
            F[2][1]=1;
            F[2][2]=0;
            power(F,num-2,M);
            //printf("%llu:%llu:",F[0][0],F[0][1]);
            sol[i]=((F[0][0]*5)%MOD+(F[0][1]*1)%MOD+(F[0][2]*1)%MOD)%MOD;
          }
    }
    for(int i=0;i<test_cases;i++)
    {
        printf("%d\n",sol[i]);
    }
}
void multiply(unsigned long long int F[3][3],unsigned long long int M[3][3],unsigned long long int ans[3][3])
{
    int MOD=1000000007;
    unsigned long long int sum=0;
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            sum=0;
            for(int k=0;k<3;k++)
            {
                sum=((sum%MOD)+((F[i][k]%MOD)*(M[k][j]%MOD))%MOD)%MOD;
            }
            ans[i][j]=sum;
        }
    }
    for(int i=0;i<3;i++)
    {
        for(int j=0;j<3;j++)
        {
            //printf("%lld ",ans[i][j]);
            F[i][j]=ans[i][j];
        }
        //printf("\n");
    }
}
void power(unsigned long long int F[3][3],int n,unsigned long long int M[3][3])
{
    if(n==0 || n==1)
        return;
    power(F,n/2,M);
    multiply(F,F,ans);
    if(n%2!=0)
        multiply(F,M,ans);
}
