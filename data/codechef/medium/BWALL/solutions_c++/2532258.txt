#include<stdio.h>
#define mod 1000000007
long long int scan()
{
long long int n = 0;
char c = getchar_unlocked();
while (!('0' <= c && c <= '9'))
{
c = getchar_unlocked();
}
while ('0' <= c && c <= '9')
{
n = (n<<3)+(n<<1) + c - '0';
c = getchar_unlocked();
}
return n;
}
 
void multiply(long long int R[3][3],long long int T[3][3])
{
long long int a,b,c,d,e,f,g,h,i;
a=(((T[0][0]*R[0][0]))+((T[0][1]*R[1][0]))+((T[0][2]*R[2][0])))%mod;
b=(((T[0][0]*R[0][1]))+((T[0][1]*R[1][1]))+((T[0][2]*R[2][1])))%mod;
c=(((T[0][0]*R[0][2]))+((T[0][1]*R[1][2]))+((T[0][2]*R[2][2])))%mod;
d=(((T[1][0]*R[0][0]))+((T[1][1]*R[1][0]))+((T[1][2]*R[2][0])))%mod;
e=(((T[1][0]*R[0][1]))+((T[1][1]*R[1][1]))+((T[1][2]*R[2][1])))%mod;
f=(((T[1][0]*R[0][2]))+((T[1][1]*R[1][2]))+((T[1][2]*R[2][2])))%mod;
g=(((T[2][0]*R[0][0]))+((T[2][1]*R[1][0]))+((T[2][2]*R[2][0])))%mod;
h=(((T[2][0]*R[0][1]))+((T[2][1]*R[1][1]))+((T[2][2]*R[2][1])))%mod;
i=(((T[2][0]*R[0][2]))+((T[2][1]*R[1][2]))+((T[2][2]*R[2][2])))%mod;
T[0][0]=a;
T[0][1]=b;
T[0][2]=c;
T[1][0]=d;
T[1][1]=e;
T[1][2]=f;
T[2][0]=g;
T[2][1]=h;
T[2][2]=i;
}
 
 
void power(long long int T[3][3],long long int n)
{
long long int A[3][3]={{1,4,2},{1,0,0},{0,1,0}};
if(n==1)
return;
power(T,n/2);
multiply(T,T);
if(n%2)
multiply(A,T);
}
 
 
long long int solve(long long int n)
{
if(n==0||n==1)
return 1;
if(n==2)
return 5;
long long int T[3][3]={{1,4,2},{1,0,0},{0,1,0}};
power(T,n-2);
return 5*T[0][0]+T[0][1]+T[0][2];
}
 
 
int main()
{
int t;
long long int n,ans;
t=scan();
while(t--)
{
n=scan();
ans=solve(n);
printf("%lld\n",ans%mod);
}
return 0;
}