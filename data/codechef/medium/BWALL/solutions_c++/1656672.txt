#include<iostream>
#include<cstdio>
using namespace std;

void powarr(unsigned long long a[3][3], unsigned long long b, unsigned long long MOD, unsigned long long x[3][3])
{
	x[0][0] = x[1][1] = x[2][2] = 1;
	x[0][1] = x[0][2] = x[1][0] = x[1][2] = x[2][0] = x[2][1] = 0;
    unsigned long long y[3][3], temp[3][3];
    for (int i = 0; i < 3; i++)
    {
    	for (int j = 0; j < 3; j++)
    		y[i][j] = a[i][j]; 
    }
    while (b > 0)
    {
        if (b%2 == 1)
        {
        	for (int i = 0; i < 3; i++)
    		{
    			for (int j = 0; j < 3; j++)
    				temp[i][j] = x[i][j]; 
    		}
        	x[0][0] = ((temp[0][0]*y[0][0]) % MOD + (temp[0][1]*y[1][0]) % MOD + (temp[0][2]*y[2][0]) % MOD) % MOD;
        	x[0][1] = ((temp[0][0]*y[0][1]) % MOD + (temp[0][1]*y[1][1]) % MOD + (temp[0][2]*y[2][1]) % MOD) % MOD;
        	x[0][2] = ((temp[0][0]*y[0][2]) % MOD + (temp[0][1]*y[1][2]) % MOD + (temp[0][2]*y[2][2]) % MOD) % MOD;
        	x[1][0] = ((temp[1][0]*y[0][0]) % MOD + (temp[1][1]*y[1][0]) % MOD + (temp[1][2]*y[2][0]) % MOD) % MOD;
        	x[1][1] = ((temp[1][0]*y[0][1]) % MOD + (temp[1][1]*y[1][1]) % MOD + (temp[1][2]*y[2][1]) % MOD) % MOD;
        	x[1][2] = ((temp[1][0]*y[0][2]) % MOD + (temp[1][1]*y[1][2]) % MOD + (temp[1][2]*y[2][2]) % MOD) % MOD;
        	x[2][0] = ((temp[2][0]*y[0][0]) % MOD + (temp[2][1]*y[1][0]) % MOD + (temp[2][2]*y[2][0]) % MOD) % MOD;
        	x[2][1] = ((temp[2][0]*y[0][1]) % MOD + (temp[2][1]*y[1][1]) % MOD + (temp[2][2]*y[2][1]) % MOD) % MOD;
        	x[2][2] = ((temp[2][0]*y[0][2]) % MOD + (temp[2][1]*y[1][2]) % MOD + (temp[2][2]*y[2][2]) % MOD) % MOD;
        }
        for (int i = 0; i < 3; i++)
    	{
    		for (int j = 0; j < 3; j++)
    			temp[i][j] = y[i][j]; 
    	}
        y[0][0] = ((temp[0][0]*temp[0][0]) % MOD + (temp[0][1]*temp[1][0]) % MOD + (temp[0][2]*temp[2][0]) % MOD) % MOD;
        y[0][1] = ((temp[0][0]*temp[0][1]) % MOD + (temp[0][1]*temp[1][1]) % MOD + (temp[0][2]*temp[2][1]) % MOD) % MOD;
        y[0][2] = ((temp[0][0]*temp[0][2]) % MOD + (temp[0][1]*temp[1][2]) % MOD + (temp[0][2]*temp[2][2]) % MOD) % MOD;
        y[1][0] = ((temp[1][0]*temp[0][0]) % MOD + (temp[1][1]*temp[1][0]) % MOD + (temp[1][2]*temp[2][0]) % MOD) % MOD;
        y[1][1] = ((temp[1][0]*temp[0][1]) % MOD + (temp[1][1]*temp[1][1]) % MOD + (temp[1][2]*temp[2][1]) % MOD) % MOD;
        y[1][2] = ((temp[1][0]*temp[0][2]) % MOD + (temp[1][1]*temp[1][2]) % MOD + (temp[1][2]*temp[2][2]) % MOD) % MOD;
        y[2][0] = ((temp[2][0]*temp[0][0]) % MOD + (temp[2][1]*temp[1][0]) % MOD + (temp[2][2]*temp[2][0]) % MOD) % MOD;
        y[2][1] = ((temp[2][0]*temp[0][1]) % MOD + (temp[2][1]*temp[1][1]) % MOD + (temp[2][2]*temp[2][1]) % MOD) % MOD;
        y[2][2] = ((temp[2][0]*temp[0][2]) % MOD + (temp[2][1]*temp[1][2]) % MOD + (temp[2][2]*temp[2][2]) % MOD) % MOD;
        b /= 2;
    }
}

int main()
{
	int T;
	scanf("%d", &T);
	unsigned long long a[3][3] = {{1,1,0}, {4,0,1}, {2,0,0}};
	for (int t = 0; t < T; t++)
	{
		unsigned long long N, res;
		scanf("%llu", &N);
		if (N == 0 || N == 1)
			res = 1;
		else
		{
			unsigned long long arr[3][3];
			unsigned long long temp, two;
			powarr(a, N-2, 1000000007, arr);
			res = (((arr[0][0]*5) % 1000000007) + ((arr[1][0] + arr[2][0]) % 1000000007)) % 1000000007;
		}		
		printf("%llu\n", res);
	}
	return 0;
}
