// nacci.cpp : main project file.

//#include "stdafx.h"
#include<iostream>
#include<cstring>
#include<cmath>

using namespace std;
int M1[3][3];
int ident[3][3];
int num;
int k;

int mod=1000000007;
void preprocess()
{
	
	memset(M1,0,sizeof(M1));
	memset(ident,0,sizeof(ident));
	int i,j,k;
	
	M1[0][0]=1;
	M1[0][1]=4;
	M1[0][2]=2;
	for(i=0;i<3;i++)
	ident[i][i]=1;
	for(i=1;i<3;i++)
		M1[i][i-1]=1;

}
int multi(int p,int q)
{
	long long t=p;
	t*=(long long)q;
	t%=mod;
	return t;
}
void multiply1()
{
	int i,j,k;
	int temp[3][3];
	for(i=0;i<3;i++)
		for(j=0;j<3;j++)
		{
			temp[i][j]=0;
			for(k=0;k<3;k++)
				temp[i][j]=(temp[i][j]+multi(ident[i][k],M1[k][j]))%mod;
		}
		for(i=0;i<3;i++)
			for(j=0;j<3;j++)
				ident[i][j]=temp[i][j];

}
void multiply2()
{
	int temp[3][3];
	int i,j,k;
	for(i=0;i<3;i++)
		for(j=0;j<3;j++)
		{
			temp[i][j]=0;
			for(k=0;k<3;k++)
				temp[i][j]=(temp[i][j]+multi(M1[i][k],M1[k][j]))%mod;
		}
		for(i=0;i<3;i++)
			for(j=0;j<3;j++)
				M1[i][j]=temp[i][j];

}
void expon(int l)
{
	
	
	while(l>0)
	{
		if(l&1)
			multiply1();
		multiply2();
		l>>=1;
	}
	

}
int main()
{
	
	int tests;
	scanf("%d",&tests);
	while(tests--)
	{
		
		int l;
		scanf("%d",&num);
		
		int i,j;
		preprocess();
		int mul[3];
		
		mul[0]=1;
		
        
		mul[0]=mul[1]=1;
		mul[2]=5;
        
        if(num<3)
        {
             printf("%d\n",mul[num]);
             continue;   
        }        
		
		expon(num-2);
		
		
		
		int ans=0;
		for(i=0;i<3;i++)
			ans=(ans+multi(ident[0][i],mul[3-i-1]))%mod;
//		ans=ans%(int)pow(10,(double)k);
		ans%=mod;
		printf("%d\n",ans);

	}
    return 0;
}
