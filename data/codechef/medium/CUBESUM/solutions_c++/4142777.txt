#include <stdio.h>
#include <iostream>
#include <math.h>

#define MOD 1000000007
#define LL long long
#define ULL unsigned long long


using namespace std;
int getchar_unlocked( void );
//inline int getchar_unlocked() { return getchar(); }
inline void fastRead_int(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }

    if(neg)
    	x = -x;
}




inline void fastRead_string(char *str)
{
    register char c = 0;
    register int i = 0;

    while (c < 33)
        c = getchar_unlocked();

    while (c != '\n') {
        str[i] = c;
        c = getchar_unlocked();
        i = i + 1;
    }

    str[i] = '\0';
}
int a[101][101][101];
int b[101][101][101];

int main()
{
    int test;
    fastRead_int(test);

    while(test--)
    {
        int x,y,z;

        fastRead_int(x);
        fastRead_int(y);
        fastRead_int(z);





             for(int i=1;i<=x;++i)
        {
            for(int j=1;j<=y;++j)
            {
                for(int k=1;k<=z;++k)
                {
                    fastRead_int(b[i][j][k]);

                }

            }
        }


                    for(int i=1;i<=x;++i)
                    {
                    for(int j=1;j<=y;++j)
                        {
                            for(int k=1;k<=z;++k)
                            {

                                a[i][j][k] =b[i][j][k] - b[i-1][j][k] - b[i][j-1][k] - b[i][j][k-1] + b[i-1][j-1][k] + b[i][j-1][k-1] + b[i-1][j][k-1] - b[i-1][j-1][k-1];
                            }

                        }
                    }


         for(int i=1;i<=x;++i)
        {
            for(int j=1;j<=y;++j)
            {
                for(int k=1;k<=z;++k)
                {

                   printf("%d ",a[i][j][k]);

                }
                printf("\n");
            }
        }



    }


    return 0;
}
