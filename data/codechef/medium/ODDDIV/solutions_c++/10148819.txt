#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MAXN = 1e5 + 10;
LL ans[MAXN];
LL sm[MAXN];
LL p[MAXN];
inline LL power(LL a, LL b){
	LL ans = 1;
	while(b > 0){
		if(b & 1) ans = (ans * a);
		a = (a * a);
		b >>= 1;
	}
	return ans;
}
void go(){
	for(int i = 1;i < MAXN;++i){
		sm[i] = i;
		p[i] = 1;
	}
	for(int i = 2;i * i < MAXN;++i){
		if(sm[i] == i){
			for(int j = i;j < MAXN;j += i){
				int z = j / i;
				sm[j] = i;
				if(sm[j] == sm[z])
					p[j] = p[z] + 1;
				else p[j] = 1;
			}
		}
	}
	
	ans[1] = 1;
	for(int i = 2;i < MAXN;++i){
		if(i & 1){
			LL l = power(sm[i], p[i]);
			ans[i] = ans[i / l] * ((l * sm[i] - 1) / (sm[i] - 1));
		} else ans[i] = ans[i >> 1];
	}
	// for(int i = 1;i < 50;++i){
	// 	cout << i << " " << sm[i] << " " << p[i] << " " << ans[i] << "\n";
	// }
	for(int i = 2;i < MAXN;++i){
		ans[i] += ans[i - 1];
	}
	ans[0] = 0;
}
int main(){
	go();
	int t;
	scanf("%d", &t);
	while(t--){
		int l, r;
		scanf("%d%d", &l, &r);
		printf("%lld\n", ans[r] - ans[l - 1]);
	}
	return 0;
}