#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};
int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, t, l, r, c, j, temp;
	ll val;
	vl sum(100001,1), csum(100001);
	sum[1]=1;
	vb v(100001);
	for( i=2;i<100000;i++ )
	{
		if(!v[i])
		{
			for( j=i;j<=100000;j=j+i )
			{
				v[j] = true;
				if( i&1 )
				{
					temp = j;
					val = i;
					while( (temp%i) ==0 )
					{
						val *= i;
						temp /=i;
					}
					val -= 1;
					val /=(i-1);
					sum[j] *= val;
				}
			}
		}
	}
	for( i=1;i<=100000;i++ )
	{
		csum[i] = csum[i-1] + sum[i];
	}
	cin >> t;
	while( t--)
	{
		cin >> l >> r;
		cout << csum[r] - csum[l-1] << "\n";
	}
    return 0;
}
