def solution():
	T = raw_input('')
	answers = []
	for i in range(0,int(T)):
		N,M = map(int,raw_input('').split(' '))
		power_of_soints = {}
		power_of_sofloats = {}
		for i in range(0,N):
			power, level = map(int,raw_input('').split(' '))
			if level not in power_of_soints.keys():
				power_of_soints[level] = power
			else:
				power_of_soints[level] += power
		for i in range(0,M):
			power,level = map(int,raw_input('').split(' '))
			if level not in power_of_sofloats.keys():
				power_of_sofloats[level] = power
			else:
				power_of_sofloats[level] += power
		if sum(power_of_soints.values()) == 0:
			sochef += 1
		sochef = sochef_extra(power_of_soints,power_of_sofloats)
		answers.append(sochef)
	for i in answers:
		print "%d"%(i)

def sochef_extra(dict1,dict2):
	sochef = 0
	for i in dict1.keys():
		if dict1[i] < dict2[i]:
			sochef += dict2[i] - dict1[i]
	return sochef
solution()