#include<bits/stdc++.h>
using namespace std;
int mod( int a)
{
	if(a<0)
	{
		return -a;
	}
	else
	{
		return a;
	}
}
  
	 vector<int> pos[101][101][101];int dp[101][101], array[101];
int main()
{
	map <int,int> mymap; 
	map<int, int> ::iterator it;
	 int j=1 , k=0, temp2,temp3,h;	
	int n,i;
	int temp;
	
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&temp);
		 it = mymap.find(mod(temp));
		 if(it==mymap.end())
		 {
		 	mymap[mod(temp)] = j;
		 	
		 	 if(temp<0)
			{
		 		array[k] = -j;
		 	}	
		 	else
		 	{
		 		array[k] = j;
		 	}
		 	j++;k++;
		 }
		 else
		 {
		 	temp2 = mymap[mod(temp)];
		 	if(temp<0)
		 	{
		 		array[k] = -temp2;
		 	}
		 	
		 	else
		 	{
		 		array[k] = temp2;
		 	}
		 	k++;
		 }
		
	}
	int size;
	memset(dp,0,sizeof(dp));
	for(i=0;i<n;i++)
	{
		if(array[i]>0)
		{
			for(j=0;j<=i;j++)
			{
				for(k=i;k<=n-1;k++)
				{
					pos[j][k][array[i]].push_back(i);
				}
			}
		}
	}
	for(i=0;i<=n;i++)
	{
		for(j=0;j<=n;j++)
		{
			if(i>=j)
			{
				dp[i][j] = 1;
			}
		}
	}
	
	for(i=n-2;i>=0;i--)
	{
		for(j=n-1;j>i;j--)
		{
			
			dp[i][j] = (dp[i][j] + dp[i+1][j]) % 1000000007;
			if(array[i]<0)
			{
				size = pos[i][j][mod(array[i])].size();
				for(h=0;h<size;h++)
				{
					temp3 = pos[i+1][j][mod(array[i])][h];
					
					dp[i][j] = ( dp[i][j] + (dp[i+1][temp3-1]*dp[temp3+1][j]) ) % 1000000007;
				} 
			}	
		}
	}
	printf("%d\n",(dp[0][n-1])%1000000007);
return 0;
}
