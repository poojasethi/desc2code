//Abinash Ghosh(Om)
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <cstring>
#include <climits>
#include <iostream>
#include <iomanip>
#include <vector>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <string>
#include <utility>
#include <sstream>
#include <algorithm>
using  namespace  std;

#define PI acos(-1.0)
#define MAX 1000000007
#define EPS 1e-9
#define mem(a,b) memset(a,b,sizeof(a))
#define gcd(a,b) __gcd(a,b)
#define pb push_back
#define mp make_pair
#define x first
#define y second
#define Sort(x) sort(x.begin(),x.end())
#define FOR(i, b, e) for(int i = b; i <= e; i++)
#define FORR(i, b, e) for(int i = b; i >= e; i--)
#define pr(x) cout<<x<<"\n"
#define pr2(x,y) cout<<x<<" "<<y<<"\n"
#define pr3(x,y,z) cout<<x<<" "<<y<<" "<<z<<"\n";
#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

typedef  long long ll;
typedef  pair <int, int> pii;
typedef  pair <double , double> pdd;
typedef  pair <ll , ll > pll;
typedef  vector <int> vi;
typedef  vector <pii> vpii;
typedef  vector <ll > vl;


//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1}; //4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};
//int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};
//int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
int n;
int a[105];
ll dp[102][102];
ll solve(int x,int y)
{
    if(x>=y)return 0;
    if(dp[x][y]!=-1)return dp[x][y];
    ll ans=0,fr=a[x];
    ans+=solve(x+1,y)%MAX;
    if(fr<0)
    {
        FOR(i,x+1,y)
        {
            if(abs(fr)==a[i])
                ans=(ans+(1+solve(x+1,i-1))%MAX*(1+solve(i+1,y)%MAX))%MAX;
        }
    }
    return dp[x][y]=ans;
}
int main()
{
    //READ("inA.txt");
    //WRITE("outA.txt");
    scanf("%d",&n);
    FOR(i,1,n)
    scanf("%d",&a[i]);
    mem(dp,-1);
    ll ans=(1+solve(1,n))%MAX;
    printf("%lld\n",ans);
    return 0;
}

