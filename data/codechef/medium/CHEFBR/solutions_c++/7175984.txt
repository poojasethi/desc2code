#include <bits/stdc++.h>
#define MOD 1000000007
long int a[100];
long int dp[100][100];
long long int solve(int start, int end)
{
    int i, j;
    long long int count = 1;
    if(end <= start)
        return count;
    if(dp[start][end] != -1)
        return dp[start][end];
    for(i = start; i < end; i++)
    {
        if(a[i] > 0)
            continue;
        for(j = i + 1; j <= end; j++)
        {
            if(a[j] == (-1)*a[i])
            {
                count = (count + (solve(i+1, j-1) * solve(j+1, end)) % MOD) % MOD;
            }
        }
    }
    dp[start][end] = count;
    return count;
}
int main()
{
    int n, i;                  
    register int j;
    long long count = 0;
    scanf("%d", &n);
    for(i = 0; i < n; i++)      
        scanf("%ld", &a[i]);
    memset(dp,-1,sizeof(dp));
    count = solve(0, n-1);
    printf("%lld\n", count);
    return 0;
} 