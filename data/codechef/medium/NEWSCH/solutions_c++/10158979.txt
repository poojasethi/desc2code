#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const LL MOD = 1e9 + 7;
void mul(LL (*A)[2], LL (*B)[2]){
	LL C[2][2];
	for(int i = 0;i < 2;++i){
		for(int j = 0;j < 2;++j){
			C[i][j] = 0;
			for(int k = 0;k < 2;++k){
				C[i][j] = C[i][j] + A[i][k] * B[k][j];
				C[i][j] %= MOD;
			}
		}
	}
	for(int i = 0;i < 2;++i){
		for(int j = 0;j < 2;++j){
			A[i][j] = C[i][j];
		}
	}
}
void power(LL (*A)[2], LL N){
	LL ans[][2] =
		{
			{1, 0},
			{0, 1}
		};
	while(N > 0){
		if(N & 1)
			mul(ans, A);
		mul(A, A);
		N >>= 1;
	}
	for(int i = 0;i < 2;++i){
		for(int j = 0;j < 2;++j){
			A[i][j] = ans[i][j];
		}
	}
}
LL getAns(int N){
	switch(N){
		case 1: return 4;
		case 2: return 12;
	}
	LL ans[][2] = 
		{
			{2, 3},
			{1, 0}
		};
	power(ans, N - 2);
	return (ans[0][0] * 12) % MOD;
}
int main(){
	int t;
	scanf("%d", &t);
	while(t--){
		int N;
		scanf("%d", &N);
		printf("%lld\n", getAns(N));
	}

	return 0;
}