#include <iostream>
#include <cstdio>
using namespace std;

typedef unsigned long long ull;

const ull MOD = 1000000007;

class matrix
{
private:
    ull row,col;
    ull **a;

public:
    matrix(ull r,ull c)
    {
        row = r;
        col = c;
        a = new ull* [row];
        for(ull i=0;i<row;i++)    a[i] = new ull [col];
    }

    void setval(ull *b)
    {
        //cout << "Enter data:" << endl;
        for(ull i=0;i<row;i++)
        {
            for(ull j=0;j<col;j++)
            {
                a[i][j] = b[i*col+j];
            }
        }
    }

    ull entry(int i,int j)
    {
        return a[i][j];
    }

    void print()
    {
        for(ull i=0;i<row;i++)
        {
            for(ull j=0;j<col;j++)
            {
                cout << a[i][j] << "\t";
            }
            cout << endl;
        }
    }

    matrix operator*(matrix b)
    {
        matrix temp(2,2);
        for(ull i=0;i<row;i++)
        {
            for(ull j=0;j<b.col;j++)
            {
                temp.a[i][j] = 0;
                for(ull k=0;k<col;k++)
                {
                    temp.a[i][j] = (temp.a[i][j] + ((a[i][k] * b.a[k][j])%MOD))%MOD ;
                }
            }
        }
        return temp;
    }

    matrix operator^(ull x)
    {
        matrix X(2,2),Y(2,2);
        ull *b = new ull [4];
        b[0] = 1;
        b[1] = 0;
        b[2] = 0;
        b[3] = 1;
        X.setval(b);
        delete[] b;
        Y = *this;
        while(x)
        {
            if(x%2==1)
            {
                X = X*Y;
            }
            Y = Y*Y;
            x /= 2;
        }
        return X;
    }

};

int main()
{
    ull *a;
    a = new ull [4];
    a[0] = 2;
    a[1] = 3;
    a[2] = 1;
    a[3] = 0;
    matrix A(2,2);
    A.setval(a);
    delete[] a;
    ull t,n;
    scanf("%llu",&t);
    while(t--)
    {
        scanf("%llu",&n);
        ull ans = (A^(n-2)).entry(0,0);
        ans = (ans*12)%MOD;
        printf("%llu\n",ans);
    }
    return 0;
}
