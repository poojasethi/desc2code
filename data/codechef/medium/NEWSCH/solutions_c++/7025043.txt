#include<iostream>
using namespace std;
#define M 1000000007
class node;
node *C;
class node
{
   long long int a11,a12,a21,a22;
public:
   void intitialise()
   {
      a11=2;
      a12=1;
      a21=3;
      a22=0;
   }
   node operator*(node A)
   {
      node temp;
      temp.a11=(a11*A.a11%M+a12*A.a21%M)%M;
      temp.a12=(a11*A.a12%M+a12*A.a22%M)%M;
      temp.a21=(a21*A.a11%M+a22*A.a21%M)%M;
      temp.a22=(a21*A.a12%M+a22*A.a22%M)%M;
      return temp;
   }
   static node power(long long int N)
   {
      if(N==1)
         return *C;
      node res=power(N/2);
      res=res*res;
      if(N%2)
         return res*(*C);
      return res;
   }
   void printAns()
   {
      cout<<a21*4%M<<endl;
   }
};
int main()
{
   int T;
   C=new node;
   C->intitialise();
   long long int N;
   node ans;
   cin>>T;
   while(T--)
   {
      cin>>N;
      ans=node::power(N-1);
      ans.printAns();
   }
   return 0;
}