#define _USE_MATH_DEFINES
#define _CRT_SECURE_NO_DEPRECATE
#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <algorithm>
#include <utility>
#include <cassert>
#include <memory.h>
#include <sstream> 
#include <string>
#include <set>
#include <queue>
#include <map>
#include <vector>
#include <ctime>
using namespace std;

#define forn(i,n)  for(int i=0; i<(n); ++i) 
#define pb push_back
#define mp make_pair
#define pii pair<int,int> 
typedef long long ll;
ll mod = (ll)1e9 + 7;

struct matrix
{
	ll a[10][10];
	matrix(){
		memset(a, 0, sizeof(a));
	}
	matrix(ll b, ll c, ll d, ll e){
		a[0][0] = b; a[0][1] = c;
		a[1][0] = d; a[1][1] = e;
	}
	 void operator *= (const matrix &b){
		ll c[10][10];
		forn(i, 2){
			forn(j, 2){
				c[i][j] = 0;
				forn(k, 2){
					c[i][j] += a[i][k] * b.a[k][j];
					c[i][j] %= mod;
				}
			}
		}
		memcpy(a,c,sizeof(a));
	}
};

matrix binpow(matrix a, int n)
{
	matrix res(1, 0, 0, 1);
	while(n){
		if(n & 1){
			res *= a;
			n--;
		}
		else {
			a *= a;
			n /= 2;
		}
	}
	return res;
}
int main(){
 // freopen("input.txt","r",stdin); freopen("output.txt","w",stdout);
  int n, m;
  cin >> n;
  forn(i, n){
	  cin >> m;
	  --m;
	  matrix q = binpow(matrix(0, 1, 3, 2), m);
	  //cout << q.a[0][0] << q.a[0][1] << '\n' << q.a[1][0] << q.a[1][1];
	  cout << (q.a[1][0] * 4) % mod << endl; 
  }
  return 0;
}