#include <iostream>
#include <utility>
#include <stdio.h>
#include <string>
#include <string.h>
#include <algorithm>
#include <vector>

using namespace std;

char inp[20];
char fans[20] = {'0','0','0','1','0','0','1','0','1','1','0','0','0'};
char tmp[20];
int maxSteps[20];

vector<pair<int, int> > ans;

void rfl() {
	char ch=tmp[0];
	tmp[0] = tmp[3];
	tmp[3] = tmp[6];
	tmp[6] = tmp[8];
	tmp[8] = tmp[5];
	tmp[5] = tmp[2];
	tmp[2] = ch;
}

void rfr() {
	char ch=tmp[0];
	tmp[0] = tmp[2];
	tmp[2] = tmp[5];
	tmp[5] = tmp[8];
	tmp[8] = tmp[6];
	tmp[6] = tmp[3];
	tmp[3] = ch;
}

void rsl() {
	char ch=tmp[1];
	tmp[1] = tmp[4];
	tmp[4] = tmp[7];
	tmp[7] = tmp[9];
	tmp[9] = tmp[6];
	tmp[6] = tmp[3];
	tmp[3] = ch;
}

void rsr() {
	char ch=tmp[1];
	tmp[1] = tmp[3];
	tmp[3] = tmp[6];
	tmp[6] = tmp[9];
	tmp[9] = tmp[7];
	tmp[7] = tmp[4];
	tmp[4] = ch;
}

void rtl() {
	char ch=tmp[6];
	tmp[6] = tmp[9];
	tmp[9] = tmp[11];
	tmp[11] = tmp[12];
	tmp[12] = tmp[10];
	tmp[10] = tmp[8];
	tmp[8] = ch;
}

void rtr() {
	char ch=tmp[6];
	tmp[6] = tmp[8];
	tmp[8] = tmp[10];
	tmp[10] = tmp[12];
	tmp[12] = tmp[11];
	tmp[11] = tmp[9];
	tmp[9] = ch;
}

void incSteps() {
	if(maxSteps[0]<6) {
		maxSteps[0]++;
	} else {
		int i=0;
		while(maxSteps[i] == 6) {
			i++;
		}
		maxSteps[i]++;
		i--;
		while(i>=0) {
			maxSteps[i]=1;
			i--;
		}
	}
}

int solved() {
	int temp;
	for(int i=0;i<20;i++) {
		tmp[i] = inp[i];
	}
	int i=0;
	while(maxSteps[i]!=0) {
		switch(maxSteps[i]) {
			case 1:
				rfl();
				break;
			case 2:
				rfr();
				break;
			case 3:
				rsl();
				break;
			case 4:
				rsr();
				break;
			case 5:
				rtl();
				break;
			case 6:
				rtr();
				break;
		}
		i++;
	}
	int flag = 1;
	for(int i=0;i<13;i++) {
		if(tmp[i] != fans[i]) {
			flag = 0;
			break;
		}
	}
	return flag;
}

void buildAns() {
	int i=0;
	while(maxSteps[i] != 0) {
		switch(maxSteps[i]) {
			case 1:
				ans.push_back(make_pair(0,0));
				break;
			case 2:
				ans.push_back(make_pair(0,1));
				break;
			case 3:
				ans.push_back(make_pair(1,0));
				break;
			case 4:
				ans.push_back(make_pair(1,1));
				break;
			case 5:
				ans.push_back(make_pair(2,0));
				break;
			case 6:
				ans.push_back(make_pair(2,1));
				break;
		}
		i++;
	}
}

void solve() {
	while(1) {
		incSteps();
		if(solved()) break;
	}
	buildAns();
}

int main() {
	int t;
	cin>>t;
	while(t--) {
		scanf("%s",inp);
		ans.clear();
		memset(maxSteps,0,sizeof(maxSteps));
		int flag=1;
		for(int i=0;i<13;i++) {
			if(inp[i] != fans[i]) {
				flag = 0;
				break;
			}
		}
		if(flag) {
			cout<<"0"<<endl;
			continue;
		}
		solve();
		cout<<ans.size()<<endl;
		for(int i=0;i<ans.size();i++) {
			cout<<ans[i].first<<" "<<ans[i].second<<endl;
		}
	}
	return 0;
}