#include <iostream>
#include <string>
#include <vector>
using namespace std;

struct Op
{
	string dir;
	string location;

	Op();
	Op(string d, string loc);
};

Op::Op() {}

Op::Op(string d, string loc) {
	this->dir = d;
	this->location = loc;
}

vector<string> split(string s, string delim) {
	vector<string> ans;
	string cur = "";
	for(int i = 0 ; i < (int)s.size() ; i++) {
		if ( s.substr(i, delim.size()) == delim ) {
			ans.push_back(cur);
			cur = "";
			i += delim.size() - 1;
		} else {
			cur += s[i];
		}
	}
	ans.push_back(cur);
	return ans;
}

int main() {
	int t;
	cin >> t;
	int n;
	Op * moves = new Op[100];
	for(int i = 0 ; i < t ; i++) {
		cin >> n;
		string text;
		getline(cin, text);
		for(int j = 0 ; j < n ; j++) {
			getline(cin, text);
			vector<string> splitS = split(text, " on ");
			moves[j].dir = splitS[0];
			moves[j].location = splitS[1];
		}
		cout << "Begin on " << moves[n - 1].location << endl;

		for(int j = n - 2 ; j >= 0 ; j--) {
			if ( moves[j + 1].dir == "Left" ) {
				cout << "Right on ";
			} else {
				cout << "Left on ";
			}
			cout << moves[j].location << endl;
		}
		cout << endl;
	}
	delete[] moves;
}