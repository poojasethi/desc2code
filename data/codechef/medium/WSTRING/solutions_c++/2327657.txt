#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<map>
#include<set>
#include<stack>
#include<list>
#include<vector>
#include<queue>
#include<deque>
#include<ctype.h>
using namespace std;
#define MOD 1000000007
#define PI acos(-1)
#define MP make_pair
#define PB push_back
#define VI vector<int>
#define PII pair<int,int>
#define LL long long
#define SI(x) scanf("%d",&x)
#define PRI(x) printf("%d\n",x)
#define PRLL(x) printf("%lld\n",x)
#define SLL(x) scanf("%lld",&x)
#define MEM(v,i) memset(v,i,sizeof(v))
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for (int i=(a);i<=(b);i++)
#define DEBUG(x) cout<<#x<<"="<<x<<endl
int max_(int a,int b)
 {
  return (a)>(b)?a:b;
}
int pos[10005];
int C[26];
int A[26];
int E[10005];
int B[10005];
int D[10005];
char s[10005];
 
int main()
{
 
int k,i,j,l,t,sol,num,c;
SI(t);
  while(t--)
  {
   k=c=0;
   sol=0;
   scanf("%s",s);
   l=strlen(s);
   if(l<7)
     {
      cout<<"0"<<endl;
      continue;
     }
   for(i=0;i<l;i++)
     {
       if(s[i]=='#')
         c++;
     }
   if(c<3)
    {
     cout<<"0"<<endl;continue;
    }
   for(i=0;i<26;i++)
      C[i]=A[i]=0;
   for(i=0;s[i];i++)
     {
     if(s[i]=='#')
       {
         B[k]=0;
         D[k]=0;
         for(j=0;j<26;j++)
           {
             B[k]=max_(B[k],A[j]);
             D[k]=max_(D[k],C[j]);
             A[j]=0;
           }
                        
          k++;
     }
    else A[s[i]-'a']++,C[s[i]-'a']++;
   }
        
       /* D[k]=B[k]=0;
          for(j=0;j<26;j++)
             {
              B[k]=max_(B[k],A[j]);
              D[k]=max_(D[k],C[j]);
             }*/
                
num=k+1;
 
for(j=0;j<26;j++)
  C[j]=0;
 for(i=l-1;i>=0;i--)
        {
          if(s[i]=='#')
             {
                E[k]=0;
                for(j=0;j<26;j++)
                     {
                       E[k]=max_(E[k],C[j]);
                     }
                     k--;
                 }
                else C[s[i]-'a']++;
        }
E[k]=0;
       for(j=0;j<26;j++)
              {                               
                E[k]=max_(E[k],C[j]);
              }
      
   
for(i=0;i<num-3;i++)
 {
   if(D[i]&&B[i+1]&&B[i+2]&&E[i+3])
     sol=max(sol,D[i]+B[i+1]+B[i+2]+E[i+3]+3);
}
printf("%d\n",sol);
}
return 0;
}
 