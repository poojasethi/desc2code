#include<bits/stdc++.h>
using namespace std;
int dp[100001][27]={0};
vector<int>p;
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		p.clear();
		memset(dp,0,sizeof(dp));
		string s;
		cin>>s;
		int len = s.length();
		for(int i=0;i<len;i++)
		 {	
		 if(i!=0)
		  for(int  j=0;j<26;j++)
		   dp[i][j] = dp[i-1][j];
		  if(s[i]=='#')
		  { 
		  	p.push_back(i);
		  }
		  else
		  {
		  	int n= s[i]-'0';
		  	n -=49;
		  	dp[i][n]++;
		  }
	     }
	     if(0)
	     {
	      for(int i=0;i<p.size();i++)
	       cout<<p[i]<<" ";
	       cout<<endl;
	     }
	     if(0)
	     {
	     	for(int i=0;i<len;i++)
	     	{
	     		for(int j=0;j<26;j++)
	     		{
	     			cout<<dp[i][j]<<" ";
	     		}
	     		cout<<endl;
	     	}
	     }
	     int p1,p2,p3;
	     int temp=0,max_length=0;
	     int size_p= p.size();
	     if(size_p>=3)
	     for(int i=0;i<size_p-2;i++)
	     {
	     			p1= p[i],p2=p[i+1],p3=p[i+2];
	     			temp=0;
	     			//if(p3+1==len-1 && s[p3+1]=='#')continue;
	     			int max_p1=0,max_p2=0,max_p3=0,max_p4=0;
	     			//cout<<p1<<" "<<p2<<" "<<p3<<endl;
	     			for(int l=0;l<=25;l++)
	     			{
	     				max_p1 = max(max_p1,dp[p1][l]);
	     				max_p2 = max(max_p2,dp[p2][l]-dp[p1][l]);
	     				max_p3 = max(max_p3,dp[p3-1][l]-dp[p2][l]);
	     				max_p4 = max(max_p4,dp[len-1][l]-dp[p3][l]);
	     			}
	     			if(max_p4==0 || max_p1==0 || max_p2==0 || max_p3==0)continue;
	     			//cout<<max_p1<<" "<<max_p2<<" "<<max_p3<<" "<<" "<<max_p4<<endl;
	     			temp = max_p1+max_p2+max_p3+max_p4+3;
	     			if(temp>max_length)
	     			max_length= temp;
			
	     }
	     cout<<max_length<<endl;
		  
	}
}
