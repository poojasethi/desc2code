#include<bits/stdc++.h>
using namespace std;
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define MOD 1000000007
#define newl cout<<"\n"
#define newli "\n"
#define itn int
#define reutrn return
typedef long long int lld;
//-----------------------------------------------------
lld gcd(lld m, lld n)
{
    if(n == 0)
        return m;
    return gcd(n, m % n);
}
//---------------------------------------------------------
lld powmod(lld a,lld b)
{
    if(b==0)return 1;
    lld x=powmod(a,b/2);
    lld y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y%MOD;
}
//-------------------------------------------------------

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        int a[10010][26];
        int b[10010];
        memset(a,0,sizeof(a));
        int k=0;
        if(s[0]!='#')
            a[0][s[0]-'a']++;
        else
        {
            b[k]=0;
            k++;
        }
        rep(i,1,s.length())
        {
            rep(j,0,26)
                a[i][j]=a[i-1][j];
            if(s[i]!='#')
                a[i][s[i]-'a']++;
            else
            {
                b[k]=i;
                k++;
            }
        }
        int ind=0;
        int i=b[ind];
        int maxsum=0;
        while(i<s.length())
        {
            if(ind+2>=k)
                break;
            int max1=0;
            int  max2=0;
            int max3=0;
            int max4=0;
            rep(j,0,26)
            {
                max1=max(max1,a[i][j]);
            }
            int i1=b[ind+1];
            rep(j,0,26)
            {
                max2=max(max2,a[i1][j]-a[i][j]);
            }
            int i2=b[ind+2];
            rep(j,0,26)
            {
                max3=max(max3,a[i2][j]-a[i1][j]);
            }
            rep(j,0,26)
            {
                max4=max(max4,a[s.length()-1][j]-a[i2][j]);
            }
            int sum=max1+max2+max3+max4;
            if(sum>maxsum&&max1>0&&max2>0&&max3>0&&max4>0)
                maxsum=sum;
            ind++;
            i=b[ind];
        }
        if(maxsum<4)
            cout<<"0\n";
        else
            cout<<maxsum+3<<"\n";
    }
    return 0;
}
