#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(_v) (int)(_v).size()
#define all(_v) (_v).begin(),(_v).end()
#define pii pair<int,int>
typedef long long ll;
const int INF = 1000000000;

const int maxn = 100010;
int dp[maxn][33];

int main() {
    int t; cin >> t;
	while (t --) {
	    char s[maxn];
		scanf("%s",s);
		int len = strlen(s);
		
		memset(dp,0,sizeof dp);
		vector < int > pos;

		for (int i = 0; i < len; i ++) {
			if(i == 0) {
				if(s[i] != '#') dp[0][s[i] - 'a'] ++;
				else continue;
			}	
			else {
				for (int j = 0; j < 26; j ++) dp[i][j] = dp[i - 1][j];
				if(s[i] == '#') pos.pb(i);
				else dp[i][s[i] - 'a'] ++;
			}
		}

		if(sz(pos) < 3) {
			printf("0\n");
			continue;
		}

		int ans = 0;
		for (int i = 0; i + 2 < sz(pos); i ++) {
			int aa,bb,cc,dd;
			aa = bb = cc = dd = 0;
			for (int j = 0; j < 26; j ++) aa = max(aa,dp[pos[i]][j]);
			for (int j = 0; j < 26; j ++) bb = max(bb,dp[pos[i + 1]][j] - dp[pos[i]][j]);
			for (int j = 0; j < 26; j ++) cc = max(cc,dp[pos[i + 2]][j] - dp[pos[i + 1]][j]);
			for (int j = 0; j < 26; j ++) dd = max(dd,dp[len - 1][j] - dp[pos[i + 2]][j]);
			
			if(aa == 0 or bb == 0 or cc == 0 or dd == 0) continue;
			ans = max(ans,aa + bb + cc + dd + 3);
		}

		printf("%d\n",ans);
	}
	return 0;
}
