#include<stdio.h>
#include<string.h>

inline int F1(int c[26], int m[][26], int b)
{
	register int i, j;
	register int max = 0;
	for (j = 0; j < 26; j++)
	{
		c[j] += m[b][j];
	}
	for (i = 0; i < 26; i++)
	{
		if (c[i] > max)
		{
			max = c[i];
		}
	}
	return max;
}

inline int F2(int m[][26], int a)
{
	register int max = 0, i;
	for (i = 0; i < 26; i++)
	{
		if (m[a][i] > max)
		{
			max = m[a][i];
		}
	}
	return max;
}

inline int F3(int m[][26], int e[26], int a)
{
	register int i;
	register int max = 0;
	for (i = 0; i < 26; i++)
	{
		e[i] -= m[a][i];
	}
	for (i = 0; i < 26; i++)
	{
		if (e[i] > max)
		{
			max = e[i];
		}
	}
	return max;
}

inline int input(int m[][26], int c[])
{
	int R = 0;
	register int temp;
	char p = getchar_unlocked();
	register int i = 0, count = 0;
	while ((p >= 'a' && p <= 'z') || (p == '#'))
	{
		temp = (int)p - 97;
		if ((temp >= 0) && (temp <= 25))
		{
			m[R][temp]++;
			if (R >= 2)
			{
				c[temp]++;
			}
		}
		if (p == '#')
		{
			count++;
			R++;
		}
		p = getchar_unlocked();
		i++;
	}
	return count;
}

int main()
{
	int T;

	scanf("%d\n", &T);

	while (T--)
	{
		register int i, j, max1, max2, max3, max4, ans, l, k, foo;
		register int cnt[10000][26] = { {0} };
		register int pos[10001], rep, start, last;
		bool cond;
		register int y[26] = { 0 }, z[26] =
		{
		0};

		k = input(cnt, z);

		ans = 0;

		/* for (i = 0; i <= l; i++) { if (str[i] == '#') { pos[k++] = i; } } */

		/* for(i=0; i<=k; i++) { if(i==0) { start=0; last=pos[i]; } else
		   if(i==k) { start=pos[i-1]+1; last=l+1; } else { start=pos[i-1]+1;
		   last=pos[i]; }

		   while(start<last) { if(str[start] != '#') cnt[i][str[start]-97]++;
		   start++; } } */

		for (i = 0; i + 2 < k; i++)
		{
			max1 = F1(y, cnt, i);
			max2 = F2(cnt, i + 1);
			max3 = F2(cnt, i + 2);
			max4 = F3(cnt, z, i + 2);


			if ((max1) && (max2) && (max3) && (max4))
				foo = max1 + max2 + max3 + max4;
			else
				foo = 0;

			if (ans < foo)
				ans = foo;
		}

		if (ans > 3)
			printf("%d\n", ans + 3);
		else
			printf("0\n");
	}

	return 0;
}