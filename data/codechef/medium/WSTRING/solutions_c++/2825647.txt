#include <stdio.h>
#include<string.h>
#include<iostream>
#define size 10000
int count[size+1][27];
char test[size+1];
int hash[size+1];
int testCases;
int max(int a,int b)
{
	if(a>b)
	{
		return a;
	}
	return b;
}
int substring(int a,int b)
{
	int retVal=0,i=0;
	for(i=0;i<26;i++)
	{
		retVal=max(retVal,count[b][i]-count[a][i]);
	}
	if(retVal==0)
	{
		retVal=-10000;
	}
	return retVal;
}
int main()
{
	int l=0;
	char a='a';
	scanf("%d",&testCases);
	test[0]='\0';
	int i=0,j=0,k=0,len,m=0;
	for(i=0;i<size;i++)
	{
		for(j=0;j<26;j++)
		{
			count[i][j]=0;
		}
		hash[i]=0;
	}
	for(l=0;l<testCases;l++)
	{
		scanf("%s",test);
		len=strlen(test);
		m=0;
		for(i=len;i>0;i--)
		{
			test[i]=test[i-1];
		}
		test[0]='#';
		test[len+1]='\0';
		for(i=0;i<len+1;i++)
		{
			j=i-1;
			if(j>=0)
			{
				for(k=0;k<26;k++)
				{
					count[i][k]=count[j][k];
				}
			}
			if(test[i]!='#')
			{
				count[i][test[i]-a]++;
			}
		}
		for(i=1,k=0;test[i]!='\0';i++)
		{
			if(test[i]=='#')
			{
				hash[k]=i;
				k++;
			}
		}
		int result=0;
		for(i=0;i<=k-3;i++)
		{
			

result=max(result,(substring(0,hash[i])+substring(hash[i],hash[i+1])+substring(hash[i+1],hash[i+2])+substring(hash[i+2],len)+3));
		}
		printf("%d\n",result);
	}
	return 0;
}