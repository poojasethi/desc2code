//mistake found on line 92
//modifying the assert statement to pinpoint which variable is behaving unexpectedly
//n1 and n4 can be zero, even if n1>0 and n4<n-1; e.g. ###a#a#a#a###
//forgot to put the fix for the previous observation; doing so now

#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
#include <utility>
#include <stack>
#include <sstream>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <deque>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cassert>

using namespace std;

#define FOR(i,a,b)				for (i=a;i<b;i++)
#define s(n)					scanf("%d",&n)
#define p(n)					printf("%d\n",n)
#define pl(n)					printf("%lld\n",n)
#define sd(n)					int n;scanf("%d",&n)
#define sl(n)					scanf("%lld",&n)
#define sld(n)					long long int n;scanf("%lld",&n)
#define pb(n)                                   push_back(n)
#define all(c)                                  (c).begin(),(c).end()
#define tr(container,it)                        for (typeof(container.begin()) it=container.begin();it!=container.end();it++ )
#define sz(a)                                   int((a).size())
#define clr(a)                                  memset(a,0,sizeof(a))
#define mp(a,b)                                 make_pair(a,b)

#define INF                                     LONG_MAX
#define UINF                                    ULONG_MAX
#define INF_LL                                  LLONG_MAX
#define UINF_LL                                 ULLONG_MAX

typedef long long ll;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef vector <string> vstr;

int main()
{
    sd(T);
    int t;
    int i,j;
    FOR(t,0,T)
    {
        string str;
        cin>>str;
        int n=sz(str);
        vi hashes;
        FOR(i,0,n) if (str[i]=='#') hashes.pb(i);
        vvi mat(n,vi(26,0));
        if (str[0]!='#') mat[0][str[0]-'a']++;
        FOR(i,1,n)
        {
            FOR(j,0,26) mat[i][j]=mat[i-1][j];
            char c=str[i];
            if (c!='#') mat[i][c-'a']++;
        }
        int max_fw[n],max_bw[n];
        FOR(i,0,n)
        {
            int mx=0;
            FOR(j,0,26) mx=max(mx,mat[i][j]);
            max_fw[i]=mx;
        }
        max_bw[0]=max_fw[n-1];
        FOR(i,1,n)
        {
            int mx=0;
            FOR(j,0,26) mx=max(mx,mat[n-1][j]-mat[i-1][j]);
            max_bw[i]=mx;
        }
        int num_hashes=sz(hashes);
        int ans=0;
        FOR(i,0,num_hashes-2)
        {
            int p1=hashes[i],p2=hashes[i+1],p3=hashes[i+2];
            if (p1>0&&p2>p1+1&&p3>p2+1&&p3<n-1)
            {
                int n1=max_fw[p1];
                int n2=0;
                FOR(j,0,26) n2=max(n2,mat[p2][j]-mat[p1][j]);
                int n3=0;
                FOR(j,0,26) n3=max(n3,mat[p3][j]-mat[p2][j]);
                int n4=max_bw[p3];
                assert(n2>0&&n3>0);
                if (n1>0&&n4>0) ans=max(ans,n1+n2+n3+n4+3);
            }
        }
        p(ans);
    }
}