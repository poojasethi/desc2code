#include <set>
#include <bitset>
#include <queue>
#include <deque>
#include <stack>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <cstring>
#include <string>
#include <cassert>
#include <vector>
#include <list>
#include <map>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>

// DEFINE
#define FOR(i,a,b)     for (int i=(a),_b=(b); i<_b; i++)
#define RFOR(i,b,a)    for (int i=(b)-1,_a=(a); i>=_a; i--)
#define RESET(a,b)      memset((a),(b),sizeof(a))
#define fi              first
#define se              second
#define foreach(i, c)   for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)

//
using namespace std;
typedef vector <int> vi;
typedef vector <vi> vvi;
typedef pair <int, int> ii;
typedef vector <ii> vii;
typedef vector <string> vs;
typedef long long int64; //NOTES:int64
typedef unsigned long long uint64; //NOTES:uint64
typedef unsigned uint;
const double pi = acos(-1.0); //NOTES:pi
const double eps = 1e-11; //NOTES:eps
const int MAXI = 0x7fffffff;
int in() {
    int x = 0, c;
    for (; (uint)((c = getchar()) - '0') >= 10; ) { if (c == '-') return -in(); if (!~c) throw ~0; }
    do { x = (x << 3) + (x << 1) + (c - '0'); } while ((uint)((c = getchar()) - '0') < 10);
    return x;
}
// CODE
int main(int argc, char *argv[])
{
    // freopen("input.txt","r",stdin);
    // freopen("output.txt","w",stdout);
    int T;
    string s;
    cin >> T;
    FOR(t,0,T)
    {
        cin >> s;
        int c[26], cnt;
        vi seq_max[26], ele_max, seq, sharp;
        cnt = 0;
        RESET(c, 0);
//        int ti;
//        ti = 0;
//        while(s[ti] == '#' && ti < s.size())
//            ti++;
//        if(ti != 0)
//            s.erase(0, ti);
//        ti = s.size()-1;
//        while(s[ti] == '#' && ti >= 0)
//            ti--;
//        if(ti != s.size()-1)
//            s.erase(ti+1, s.size()-ti);
//        ti = 0;
//        FOR(i,1,s.size()-1)
//            if(s[i] == '#' && s[i-1] != '#' && s[i+1] != '#')
//                ti++;
//        if(ti < 2)
//        {
//            cout << 0 << endl;
//            continue;
//        }
        FOR(i,0,s.size()+1)
        {
            if(i == s.size() || s[i] == '#')
            {

                FOR(j,0,26)
                {
                    if(c[j] > cnt)
                        cnt = c[j];
                }
                ele_max.push_back(cnt);
                RESET(c,0);
                cnt = 0;
                if(i == s.size())
                    break;
                if(s[i] == '#')
                    sharp.push_back(i);
            }
            else
                c[s[i]-'a']++;
        }
        vi seq_l, seq_r;
        map<char, int> mci;
        int tmp;
        tmp = 0;
        FOR(i,0,s.size())
        {
            if(s[i] == '#')
            {
//                if(s[i-1] == '#')
//                    seq_l.push_back(0);
//                else
                    seq_l.push_back(tmp);
            }
            else
            {
                mci[s[i]]++;
                if(mci[s[i]] > tmp)
                    tmp = mci[s[i]];
            }
        }
        tmp = 0;
        mci.clear();
        for(int i = s.size()-1; i >= 0; i--)
        {
            if(s[i] == '#')
            {
//                if(s[i-1] == '#')
//                    seq_r.push_back(0);
//                else
                    seq_r.push_back(tmp);
            }
            else
            {
                mci[s[i]]++;
                if(mci[s[i]] > tmp)
                    tmp = mci[s[i]];
            }
        }
//        FOR(i,0,seq_l.size())
//            cout << seq_l[i] << " ";
//        cout << endl;
//        FOR(i,0,seq_r.size())
//            cout << seq_r[i] << " ";
//        cout << endl;
        int dp[3][sharp.size()];
        RESET(dp, 0);
        // first #
        FOR(i,0,sharp.size()-2)
            dp[0][i] = (seq_l[i]==0?(-1)*(1<<29):seq_l[i]);

        // second #
        FOR(i,1,sharp.size()-1)
            dp[1][i] = dp[0][i-1] + (ele_max[i]==0?(-1)*(1<<29):ele_max[i]);


        // third #
        FOR(i,2,sharp.size())
            dp[2][i] = dp[1][i-1] + (ele_max[i]==0?(-1)*(1<<29):ele_max[i]) + (seq_r[seq_r.size()-i-1]==0?(-1)*(1<<29):seq_r[seq_r.size()-i-1]);
//
//
//        FOR(i,0,sharp.size())
//            cout << dp[0][i] << " ";
//        cout << endl;
//        FOR(i,0,sharp.size())
//            cout << dp[1][i] << " ";
//        cout << endl;
//        FOR(i,0,sharp.size())
//            cout << dp[2][i] << " ";
//        cout << endl;
        int re;
        re = 0;
        FOR(i,2,sharp.size())
            if(dp[2][i] > re)
                re = dp[2][i];
        cout << (re == 0? 0 : re + 3) << endl;
    }
    return 0;
}
/*
2
abc#aabcc#aaabc##aab
aaaaa#bb#cc#dddd
*/
