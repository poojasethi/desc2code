/* Author : Anurag El Dorado */

/* Libraries */
#include <bits/stdc++.h>
#include <time.h>
#include <math.h>
using namespace std;

//MACRO DEFINITIONS
/* Data Types */
#define lld long long int
#define llu unsigned long long int

/* Input */
#define sd(var) scanf("%d", &var)
#define slld(var) scanf("%lld", &var)
#define sllu(var) scanf("%llu", &var)

/* Output */
#define print_arr(a, n) cout << #a << " : "; for (int I = 0; I < n; I++) { cout << a[I] << " "; } cout << endl;	//Array till n elements
#define print_v(v) 	cout << #v << " : "; for (long long int I = 0; I != v.size(); I++) { cout << v[I] << " "; } cout << endl;	//Vector
#define p2d(a, r, c) cout << #a << endl; for (int I = 0; I < r; I++) {	for (int J = 0; J < c; J++) {	cout << a[I][J] << " ";	} cout << endl;	} cout << endl;

/* File Input */
#define FILE_INPUT freopen("input.txt", "r", stdin);

/* File Output */
#define FILE_OUTPUT freopen("output.txt", "w", stdout);

//Single Variables
#define pr(x) cout << x << endl;
#define pdln(x) printf("%d\n", x);	//printf with new line
#define pd(x) printf("%d ", x);	//printf without new line

/* Output and Debugging */
#define deb(x) cout << #x << " = " << x << endl;
#define debb(x, y) cout << #x << " = " << x << "\t" << #y << " = " << y << endl;
#define debbb(x, y, z) cout << #x << " = " << x << "\t" << #y << " = " << y << "\t" << #z << " = " << z << endl;

/* MOD  value*/
#define MOD 1000000007

/* Timing */
#define TIMEIT cout << "TIME VARIABLE REINITIALISED\n"; clock_t start_time_ = clock();
#define TIMEUP cout << "Time: " << (clock() - start_time_) / (double)(CLOCKS_PER_SEC) << "s" << endl;

int main() {

	// int i, j, k, l;
	// int count, sum;
	// int n, m, p, t;
	// vector<int> v;
	// int maxi, mini;
	// int tc;
	// string s, r;
	// int lens, lenr;
	
	lld i, j, k;
	lld count, sum;
	lld n, m, p, t;
	vector<lld> v;
	lld maxi, mini;
	lld tc;
	string s, r;
	lld lens, lenr;

	//FILE_INPUT;
	
	cin >> n >> m;
	
	// while (scanf("%d %d", &n, &m) == 2) {
		lld a[n + 1][m + 1];

		for (i = 0; i < n; i++) {
			for (j = 0; j < m; j++) {
				cin >> a[i][j];
			}
		}

		cin >> tc;
		lld e1 = 0, e2 = 0;
		bool e1p = true, e2p = true;
		while (tc--) {
			cin >> i >> j;

			if (((i - 1 >= 0 && i - 1 < n) && (j - 1 >= 0 && j - 1 < m)) && e1p) {
				e1 += a[i - 1][j - 1];
			} else {
				e1 = -1;
				e1p = false;
			}

			if (((i - 1 >= 0 && i - 1 < m) && (j - 1 >= 0 && j - 1 < n)) && e2p) {
				e2 += a[j - 1][i - 1];
			} else {
				e2 = -1;
				e2p = false;
			}

		}

		cout << max(e1, e2) << endl;

	// }

	return 0;
}
