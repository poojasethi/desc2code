#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<cstdlib>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<ctime>
#include<queue>
#include<vector>
#include<stack>
#include<list>
#include<math.h>
using namespace std;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef long long int lli;
typedef pair<int,int> ii; 
#define MAXN 1000005
#define INF 2147483647
#define gc getchar_unlocked
#define pc putchar_unlocked
#define sz(a) int((a).size()) 
#define pb push_back 
#define FOR(x,a,b) for(int (x) = (a);(x)<=(b);(x)++)
#define rep(x,n)   for(int (x)=0;(x)<(n);(x)++)
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define all(c) c.begin(),c.end()
using namespace std;


int main()
{
//    freopen("input.txt","r",stdin);
//    freopen("output.txt","w",stdout);
    int t,n,m,q,p,r,readycar,readypass,num,takenride,k,total;
	scanf("%d",&t);
	while(t--)
	{

		queue<int> C;

		scanf("%d%d%d%d%d%d",&n,&m,&q,&p,&r,&k);
		
		rep(i,min(q,n))
		C.push(0);
		
		readycar = max(0,n-q);
		readypass = max(0,q-n);
		takenride = 0;
		total =m;

		FOR(s,1,k)
		{
			if(s%r==0 && total>0)
				readypass++,total--;

	//	   printf("\n Time = %d : %d %d %d %d %d",s,readycar,takenride,m+q-readypass-takenride-C.size(),readypass,C.size());
			
			while(C.size()>0 && C.front()+p==s)
				{C.pop(),readycar++,takenride++;}

			num = min(readycar,readypass);
			
			rep(i,num)
			C.push(s),readypass--,readycar--;

		}
		printf("\n %d %d %d %d ",readycar,takenride,m+q-readypass-takenride-C.size(),readypass);
	}

	return 0;
}
