#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;

class event
{
	public:
	int type;
	int time;
	
	event(int a,int b)
	{
		type =a;
		time = b;
	}
	bool operator< (const event a) const
	{
		
			return (time>a.time);
			
	}
};
int main()
{
	int t;
	cin>>t;
	//event a(5,7);
	//event b(6,8);
	//event c(4,7);
	//if(a<b) cout<<"a"<<endl;
	//if(a<c) cout<<"b"<<endl;
	while(t>0)
	{
		priority_queue<event> events;
		int n,m,q,p,r,k;
		cin>>n>>m>>q>>p>>r>>k;	
		int total = 0;
		int time1=r;
		for(int i=0;i<m;i++)
		{
			event temp(0,time1);
			events.push(temp);
			time1+=r;
		}
		int temp2 = min(n,q);
		for(int i=0;i<temp2;i++)
		{
			n--;
			q--;
			event temp(1,p);
			events.push(temp);
		}
		
		while(!events.empty())
		{
			event temp = events.top();	
			//cout<<"event is "<<temp.type<<" "<<temp.time<<" "<<n<<endl;
			events.pop();
			if(temp.time>k)
				break;
			if(temp.type ==0)
			{
				if(n>0)
				{
					event tempevent (1,temp.time+p);
					events.push(tempevent);
					n--;
				}
				else
				{
					q++;					
				}
				m--;
			}
			else 
			{
				total++;
				if(q>0)
				{
					q--;
					event tempevent(1,temp.time+p);
					events.push(tempevent);
				}
				else
				{
					n++;
				}
			}			
		}
		cout<<n<<" "<<total<<" "<<m<<" "<<q<<endl;
		t--;
	}
	return 0;
}	
