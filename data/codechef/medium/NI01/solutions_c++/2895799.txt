using namespace std;
#include <cmath>
#include <cstdio>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <string>
#include <vector>
#include <iostream>
#include <sstream>
#include <algorithm>
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
typedef long long ll; 
typedef pair<int,int> pii; 
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define split(str) {vs.clear();istringstream ss(str);while(ss>>(str))vs.push_back(str);}
#define PI 3.141592653589793
pii qu[100008];	//time, no.
int main()
{
	int t;
	sf(t);
	while(t--)
	{
		int n,m,q,p,r,k;
		sf(n);sf(m);sf(q);sf(p);sf(r);sf(k);
		int completed = 0;
		int beg = 0;
		int end = 0;
		int temp = r;
		FOR(i,k)
		{
			//cout<<i<<endl;
			temp--;
			if(temp == 0)
			{
				if(m > 0)
				{
					m--;
					q++;
				}
				temp = r;
			}
			while(beg < end)
			{
				if(qu[beg].first == i)
				{
					completed += qu[beg].second;
					n += qu[beg].second;
					beg++;
				}
				else
					break;
			}
			if(n > 0 && q > 0)
			{
				int car = min(n,q);
				n -= car;
				q -= car;
				qu[end++] = MP(i + p, car);
			}
		}
		printf("%d %d %d %d\n", n, completed, m, q);
	}
}