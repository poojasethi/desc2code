#include<iostream>
#define NUM_OF_CARS 0
#define NUM_OF_PASS_IN_M 1
#define NUM_OF_PASS_AT_GATE 2
#define PASS_RIDE_TIME 3
#define NEXT_PASS_REDY_TIME 4
#define TOTAL_TIME 5

#define MAX_CARS 50

#define CARS_WAT 0
#define PASS_COML_RIDE 1
#define PASS_WAND_IN_MUS 2
#define PASS_STILL_WAIT_AT_GATE 3

using namespace std;
int main()
{
int input[6], output[4], carsStatus[MAX_CARS +1];
int tests;
cin>>tests;

while(tests)
{
	cin>>input[0]>>input[1]>>input[2]>>input[3]>>input[4]>>input[5];
        for(int i =0; i <input[NUM_OF_CARS]; i++)
	carsStatus[i]=0;
	output[PASS_COML_RIDE] =0;
	for(int t = 0; t<=input[TOTAL_TIME] ; t++)
	{
		if(input[NUM_OF_PASS_IN_M] == 0 && input[NUM_OF_PASS_AT_GATE] ==0)
		break;
 	
		if( (t>0) && (t%input[NEXT_PASS_REDY_TIME] == 0) &&(input[NUM_OF_PASS_IN_M] >0))
		{
			input[NUM_OF_PASS_AT_GATE]++;
			input[NUM_OF_PASS_IN_M]--;
		}

		for(int c =0; (c< input[NUM_OF_CARS]) &&(input[NUM_OF_PASS_AT_GATE] >0) ; c++)
		{

			if(carsStatus[c] <= t)
			{
				carsStatus[c] = t+ input[PASS_RIDE_TIME];
				input[NUM_OF_PASS_AT_GATE]--;
				output[PASS_COML_RIDE]++;
			}
		}


	}
        output[CARS_WAT] = 0;
   	for(int i =0; i< input[NUM_OF_CARS]; i++)
	{
		if(carsStatus[i] <= input[TOTAL_TIME])
		 output[CARS_WAT]++;
		 else
		 output[PASS_COML_RIDE]--;
	}

	cout<<output[CARS_WAT]<<" "<<output[PASS_COML_RIDE]<<" "<<input[NUM_OF_PASS_IN_M]<<" "<<input[NUM_OF_PASS_AT_GATE]<<endl;


	tests--;
}

return 0;

}

