
#include <bits/stdc++.h>
using namespace std;


int diff(int arr[],int temp[],int n){

	int res=0;
	for (int i = 0; i < n; ++i)
	{
		// cout<<temp[i]<<" ";
		res=res+abs(temp[i]-arr[i]);
	}
	// cout<<res<<endl;
	return res;
}
// int check(int arr[],int n,int a,int b,int p){
// 	int temp[n];
// 	for(int i=0;i<n;i++){
// 		temp[i]=arr[i];
// 	}
// 	if(a>b)
// 		b=a;
// 	temp[0]=a;temp[1]=b;
// 	// int gcd=__gcd(a,b);
// 	// gcd=min_gcd(gcd);
// 	int gcd=p;

// 	int res=1000000000;
	
// 		for (int i = 2; i < n; ++i)
// 		{
// 			if(temp[i-1]>temp[i])
// 				temp[i]=temp[i-1];
// 			// if(__gcd(gcd,temp[i])==1){
				
// 				temp[i]+=gcd-temp[i]%gcd;	
// 			// }
// 		}
// 		res=diff(arr,temp,n);
	
// 	return res;

// }

int v[5000],size;
void SieveOfEratosthenes(int n)
{
    bool prime[10001];
    memset(prime, true, sizeof(prime));
 
    for (int p=2; p*p<=n; p++)
    {
        if (prime[p] == true)
        {

            for (int i=p*2; i<=n; i += p)
                prime[i] = false;
        }
    }
 
    for (int p=2; p<=n; p++)
       if (prime[p])
          v[size++]=p;
}


int main(){

	SieveOfEratosthenes(10000);


	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		int arr[20000];
		for (int i = 0; i < n; ++i)
		{
			cin>>arr[i];
		}
		int res;
		if(n==1){
			if(arr[0]==1)
				cout<<1<<endl;
			else
				cout<<0<<endl;
			continue;
		}
		
		res=1000000000;
	
		// cout<<size;
			// int temp[n];
			for(int i=0;i<size;i++){
				int temp[n];
				for(int k=0;k<n;k++){
					temp[k]=arr[k];
				}

				int p=v[i];
				int cur_res=0;
				// if(arr[0]%p!=0)
					// temp[0]=temp[0]+p-arr[0]%p;
				int s=0;
				for(int j=0;j<n;j++){
				
				// if(arr[j-1]>arr[j])
					// temp[j]=arr[j-1];
					if(arr[j]>cur_res){
						cur_res=((arr[j]+p-1)/p)*p;
					}
					s=s+cur_res-arr[j];
				// if(arr[j]%p!=0){
					// temp=arr[j]+p-arr[j]%p;
					// temp[j]=temp[j]+p-temp[j]%p;
				
				// cur_res=cur_res+(abs(arr[j]-temp));

			
			}

			res=min(res,s);
		}
		cout<<res<<endl;
	}
	return 0;
}