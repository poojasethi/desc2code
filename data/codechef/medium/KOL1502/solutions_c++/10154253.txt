#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e3 + 10;
typedef long long LL;
int A[MAXN];
LL dp[MAXN][10*MAXN];
const LL MOD = 1e7;
int main(){
	int t;
	scanf("%d", &t);
	memset(dp, 0, sizeof dp);
	while(t--){
		int N;
		scanf("%d", &N);
		int sum = 0;
		for(int i = 1;i <= N;++i){
			scanf("%d", &A[i]);
			sum += A[i];
		}
		dp[0][0] = 1;
		for(int i = 1;i <= N;++i){
			for(int j = 0;j <= sum;++j){
				dp[i][j] = dp[i - 1][j];
				if(A[i] <= j){
					dp[i][j] += dp[i - 1][j - A[i]];
				}
				while(dp[i][j] >= MOD) dp[i][j] -= MOD;
			}
		}
		LL ans = 0;
		for(int i = 0;i <= sum;++i){
			ans = (ans + max(i - (sum - i), (sum - i) - i) * dp[N][i]) % MOD;
		}
		printf("%lld\n", ans);
	}
} 
