#include <bits/stdc++.h>
#define sz 112345
using namespace std;

int n,k,p;
vector<pair<int, int> > arr;
int pos[sz], tree[4*sz];
vector<int> A;

void build(int node, int l, int r) {
	if(l == r) {
		tree[node] = A[l];
		return;
	}
	build(node*2, l, (l+r)/2);
	build(node*2+1, (l+r)/2+1, r);
	tree[node] = max(tree[node*2], tree[node*2+1]);
}

int query(int node, int l, int r, int i, int j) {
	if(l > j || r < i || j < i) return 0;
	if(l >= i && r <= j) return tree[node];
	return max(query(node*2, l, (l+r)/2, i, j), query(node*2+1, (l+r)/2+1, r, i, j));
}

int main() {
	scanf("%d%d%d", &n, &k, &p);
	for(int i=0;i<n;i++) {
		int a;
		scanf("%d", &a);
		arr.push_back(make_pair(a, i));
	}
	sort(arr.begin(), arr.end());
	for(int i=0;i<n;i++) {
		pos[arr[i].second] = i;
	}
	A.push_back(0);
	for(int i=1;i<n;i++) {
		A.push_back(arr[i].first - arr[i-1].first);
	}
	build(1, 0, n-1);
	for(int i=0;i<p;i++) {
		int l, r;
		scanf("%d%d", &l, &r);
		l--; r--;
		l = pos[l];
		r = pos[r];
		if(l > r) swap(l, r);
		//cout<<"for "<<i<<" "<<l<<" "<<r<<endl;
		if(l==r || query(1, 0, n-1, l+1, r) <= k) {
			printf("Yes\n");
		} else {
			printf("No\n");
		}
	}
	return 0;
}