#include <iostream>
#include <algorithm>
#include <stdio.h>
using namespace std;

struct node
{
    int index;
    int value;
    int maxdist;
};

bool cmp(node s1, node s2)
{
    return (s1.value >= s2.value ? true : false);
}

bool cmp2(node s1, node s2)
{
    return (s1.index <= s2.index ? true : false);
}

int main()
{
    std :: ios :: sync_with_stdio(false);
    //freopen("in.txt", "r", stdin);
    int N, K, P, x, y;
    cin >> N >> K >> P;
    node s[N+1];
    for(int i = 1; i<=N; ++i) {
        cin >> x;
        s[i].value = x;
        s[i].index = i;
        s[i].maxdist = x;
    }
    sort(s + 1, s + N + 1, cmp);
    for(int i = 1; i<N; ++i) {
        if(s[i].value - s[i+1].value <= K) {
            s[i+1].maxdist = s[i].maxdist;
        }
        else
            s[i+1].maxdist = s[i+1].value + K;
    }
    sort(s + 1, s + N + 1, cmp2);
    while(P--) {
        cin >> x >> y;
        if(s[x].maxdist == s[y].maxdist)
            cout << "Yes" << endl;
        else
            cout << "No" << endl;
    }
    return 0;
}
