#include <iostream>
#include <map>
#include <vector>
#include <algorithm>

using namespace std;

int main() {

    int *A, *coords, *right;
    int n, k, p, x, y;

    cin >> n >> k >> p;

    A = new int[n];
    coords = new int[n];
    right = new int [n];

    for(int i = 0 ; i < n ; i++) {
        cin >> A[i];
        coords[i] = A[i];
    }

    sort(coords, coords + n);

    for(int i = n-1 ; i >= 0 ; i--) {
        if(i == n-1) {
            right[i] = coords[i];
        } else {
            if(coords[i+1] - coords[i] <= k) {
                right[i] = right[i+1];
            } else {
                right[i] = coords[i];
            }
        }
    }

    map <int, int> m;
    map <int, int> :: iterator it;

    for(int i = 0 ; i < n ; i++) {
        m[coords[i]] = right[i];
    }

//    for(it = m.begin() ; it != m.end() ; it++) {
//        cout << it->first << " " << it->second << endl;
//    }

    while(p--) {
        cin >> x >> y;
        int l = min(A[x-1], A[y-1]);
        int r = max(A[x-1], A[y-1]);
        //cout<< l <<" " << r << " " << m[l] << endl;
        if(m[l] >= r) {
            cout << "Yes\n";
        } else {
            cout << "No\n";
        }
    }

    return 0;
}
