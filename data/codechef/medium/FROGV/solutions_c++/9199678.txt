#include<iostream>
#include<map>
#include<vector>
#include<algorithm>
using namespace std;
#define ull unsigned long long int
map<ull,pair<ull,ull> >mymap;
vector<ull>vec,sec;
bool func(ull i, ull j)
{//return mymap[i].first < mymap[j].first;
    return vec[i]<vec[j];
}
int main()
{
    ios::sync_with_stdio(false);
    ull n,k,p,i,a,b,no;
    cin>>n>>k>>p;
    for(i=0;i<n;i++)
    {
        cin>>a;
        /*mymap[i].first=a;
        mymap[i].second=0;*/
        vec.push_back(a);
        sec.push_back(i);
    }
    no=1;
    sort(sec.begin(),sec.end(),func);
    for(i=1;i<n;i++)
    {
        /*if(mymap[sec[i]].first-mymap[sec[i-1]].first<=k)
            mymap[sec[i]].second=mymap[sec[i-1]].second=no;*/
        if(vec[sec[i]]-vec[sec[i-1]]<=k)
            vec[sec[i-1]]=no;
        else
        {
            //mymap[sec[i-1]].second=no;
            vec[sec[i-1]]=no;
            no++;
            //mymap[sec[i]].second=no;
        }
    }
    vec[sec[n-1]]=no;
    while(p--)
    {
        cin>>a>>b;
        if(vec[a-1]==vec[b-1])
            cout<<"Yes\n";
        else
            cout<<"No\n";
    }
    return 0;
}

//*********************************************************************************************************//
//TLE SOLUTION OF O(N^2)//
/*#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
unsigned long long int bs(vector<unsigned long long int>& mymy ,unsigned long long int key)
{
    unsigned long long int mid,start=0,end=mymy.size()-1;
    while(start<=end)
    {
        mid=(start+end)/2;
        if(mymy[mid]<key)
            start=mid+1;
        else if(mymy[mid]>key)
            end=mid-1;
        else
            return mid;
    }
}
int main()
{
    ios::sync_with_stdio(false);
    unsigned long long int n,k,p,i,a,b,it1,it2,flag,mi,ma;
    cin>>n>>k>>p;
    vector<unsigned long long int>vec,sec;
    for(i=0;i<n;i++)
    {
        cin>>a;
        vec.push_back(a);
        sec.push_back(a);
    }
    sort(sec.begin(),sec.end());
    while(p--)
    {
        cin>>a>>b;
        it1=bs(sec,vec[a-1]);
        it2=bs(sec,vec[b-1]);
        flag=0;
        mi=min(it1,it2);
        ma=max(it1,it2);
        for(i=mi+1;i<=ma;i++)
        {
            if(sec[i]-sec[i-1]>k)
            {flag=1;break;}
        }
        if(flag)
            cout<<"No\n";
        else
            cout<<"Yes\n";
    }
    return 0;
}*/
