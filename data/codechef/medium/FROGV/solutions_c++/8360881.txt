/* Author : Anurag El Dorado */

/* Libraries */
#include <bits/stdc++.h>
#include <time.h>
using namespace std;

//MACRO DEFINITIONS
/* Data Types */
#define lld long long int
#define llu unsigned long long int

/* Input */
#define sd(var) scanf("%d", &var)
#define slld(var) scanf("%lld", &var)
#define sllu(var) scanf("%llu", &var)

/* Output */
#define print_arr(a, n) cout << #a << " : "; for (int I = 0; I < n; I++) { cout << a[I] << " "; } cout << endl;	//Array till n elements
#define print_v(v) 	cout << #v << " : "; for (long long int I = 0; I != v.size(); I++) { cout << v[I]->data << " "; } cout << endl;	//Vector
#define p2d(a, r, c) cout << #a << endl; for (int I = 0; I < r; I++) {	for (int J = 0; J < c; J++) {	cout << a[I][J] << " ";	} cout << endl;	} cout << endl;

//Single Variables
#define pr(x) cout << x << endl;
#define pdln(x) printf("%d\n", x);	//printf with new line
#define pd(x) printf("%d ", x);	//printf without new line

/* Output and Debugging */
#define deb(x) cout << #x << " = " << x << endl;
#define debb(x, y) cout << #x << " = " << x << "\t" << #y << " = " << y << endl;
#define debbb(x, y, z) cout << #x << " = " << x << "\t" << #y << " = " << y << "\t" << #z << " = " << z << endl;

/* MOD  value*/
#define MOD 1000000007

/* Timing */
#define TIMEIT cout << "TIME VARIABLE REINITIALISED\n"; clock_t start_time_ = clock();
#define TIMEUP cout << "Time: " << (clock() - start_time_) / (double)(CLOCKS_PER_SEC) << "s" << endl;

/* OTHERS */
#define MARKER -1
//END MACRO DEFINITIONS

//UTILITY FUNCTIONS

//END UTILITY FUNCTIONS

#define x first
#define pos second

bool cmp(const pair<int, int> &a, const pair<int, int> &b) {
	return a.x > b.x;
}

int main() {
	int tc;
	int i, j, k;
	int n, m, x, p;
	int count;

	cin >> n >> k >> p;
	pair<int, int> a[n];

	for (i = 0; i < n; i++) {
		cin >> x;
		a[i] = make_pair(x, i);
	}
	sort(a, a + n, cmp);
	
//	for (i = 0; i < n; i++) {
////		debbb(i, a[i].x, a[i]. pos);
//	}	cout << endl;

	int maxd[n];
	memset(maxd, 0, sizeof maxd);
	maxd[a[0].pos] = a[0].x + k;
	for (i = 1; i < n; i++) {
		if (a[i - 1].x - a[i].x <= k) {
			maxd[a[i].pos] = maxd[a[i - 1].pos];
		} else {
			maxd[a[i].pos] = a[i].x + k;
		}
//		print_arr(maxd, n);
	}
	
	int f, g;
	while (p--) {
		cin >> f >> g;
		if (maxd[f - 1] == maxd[g - 1]) {
			cout << "Yes\n";
		} else {
			cout << "No\n";
		}
	}

	return 0;
}
/*
5 3 3
0 3 8 5 12
1 2
1 3
2 5
*/