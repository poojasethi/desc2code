#include<stdio.h>

long int sortIndexUtil(long int a[],long int indices[],long int lo,long int hi){
    long int p = indices[hi],temp,i,j;
    for(j=lo,i=lo-1;j<hi;j++){
        if(a[indices[j]] < a[p]){
            temp = indices[i+1];
            indices[i+1] = indices[j];
            indices[j] = temp;
            i++;
        }
    }
    temp = indices[i+1];
    indices[i+1] = p;
    indices[hi] = temp;
    return i+1;
}
void sortIndex(long int a[],long int indices[],long int lo,long int hi){
    if(lo > hi)
        return;
    long int pivot = sortIndexUtil(a,indices,lo,hi);
    sortIndex(a,indices,lo,pivot-1);
    sortIndex(a,indices,pivot+1,hi);
}
int main(){
    long int i,k,p,n,a[100001],indices[100001],reach[100001]={0},num1,num2,group;

    scanf("%ld%ld%ld",&n,&k,&p);
    for(i=1;i<=n;++i)
        scanf("%ld",&a[i]);
    for(i=1;i<=n;i++)
        indices[i] = i;
    sortIndex(a,indices,1,n);
    /*for(i=1;i<=n;i++)
        printf("%ld ",indices[i]);
    printf("\n");*/
    group  =1;
    reach[indices[1]] = 1;
    for(i = 2;i <= n;i++){
        if(a[indices[i]]-a[indices[i-1]] <= k)
            reach[indices[i]] = group;

        else
            reach[indices[i]] = ++group;
    }
    /*for(i=1;i<=n;i++)
        printf("%ld ",reach[i]);
    printf("\n");*/
    while(p--){
        scanf("%ld%ld",&num1,&num2);
        if(reach[num1] == reach[num2])
            printf("Yes\n");
        else
            printf("No\n");
    }
    return 0;
}
