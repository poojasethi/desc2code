#include <iostream>
#include <stdio.h>
#include <algorithm>
using namespace std;
/*struct node
{
    int arr[300][2];
    int count;
}; */
int main()
{
    int cases;
    scanf("%d",&cases);
    while(cases--)
    {
        int B,S,E,L;
        scanf("%d",&B);
       /* int index=0,a[10]={0},tick[10]={0},total=0;
        struct node obj[10];
        int check[10][2]={{0,0}};
        int m=0;
        for(int i=0;i<10;i++)
        {
            obj[i].count=0;
        } */
        int arr[11][501],total=0;
        for(int i=0;i<=10;i++)
         {
            for(int j=0;j<501;j++)
            arr[i][j]=0;
         }
        for(int i=0;i<B;i++)
        {
            scanf("%d%d%d",&S,&E,&L);
            for(int i=S;i<=E;i++)
            {
                arr[L][i]=1;
            }
           /* if(tick[L]==0)
            {
                a[index++]=L;
                tick[L]=1;
            }
            obj[L].arr[obj[L].count][0]=S;
            obj[L].arr[obj[L].count++][1]=E; */
        }
        //sort(a,a+index);
        //cout<<"till now";
       /* for(int i=0;i<index-1;i++)
        {
            if(a[i+1]-a[i]==1)
            {
                int n1=a[i];
                int n2=a[i+1];
                int c1=obj[a[i]].count;
                int c2=obj[a[i+1]].count;
                for(int j=0;j<(c1>c2?c1:c2);j++)
                {
                    for(int k=0;k<(c1<c2?c1:c2);k++)
                    {
                        if(c2<c1)
                        {
                            if(!((obj[n1].arr[j][1]<obj[n2].arr[k][0])||(obj[n1].arr[j][0]>obj[n2].arr[k][1])))
                            {
                                int temp[4];
                                temp[0]=obj[n1].arr[j][0];
                                temp[1]=obj[n1].arr[j][1];
                                temp[2]=obj[n2].arr[k][0];
                                temp[3]=obj[n2].arr[k][1];
                                sort(temp,temp+4);
                                int dist,flag=1;
                                for(int i=0;i<m;i++)
                                {
                                    if(!(temp[2]>=check[i][0]||temp[1]>=check[i][1]))
                                    {
                                        int d[4];
                                        d[0]=check[i][0];
                                        d[1]=check[i][1];
                                        d[2]=temp[1];
                                        d[3]=temp[2];
                                        sort(d,d+4);
                                        flag=0;
                                        dist=(d[1]-d[0])+(d[3]-d[2]);
                                        check[i][0]=d[0];
                                        check[i][1]=d[3];
                                    }
                                }
                                if(flag)
                                {
                                    dist=temp[2]-temp[1]+1;
                                    check[m][0]=temp[1];
                                    check[m][1]=temp[2];
                                    m++;
                                }
                                total=total+dist;
                            }
                        }
                        else
                        {
                            if(!((obj[n1].arr[k][1]<obj[n2].arr[j][0])||(obj[n1].arr[k][0]>obj[n2].arr[j][1])))
                            {
                                int temp[4];
                                temp[0]=obj[n1].arr[k][0];
                                temp[1]=obj[n1].arr[k][1];
                                temp[2]=obj[n2].arr[j][0];
                                temp[3]=obj[n2].arr[j][1];
                                sort(temp,temp+4);
                                int dist,flag=1;
                                for(int i=0;i<m;i++)
                                {
                                    if(!(temp[2]>check[i][0]||temp[1]>check[i][1]))
                                    {
                                        int d[4];
                                        d[0]=check[i][0];
                                        d[1]=check[i][1];
                                        d[2]=temp[1];
                                        d[3]=temp[2];
                                        sort(d,d+4);
                                        flag=0;
                                        dist=(d[1]-d[0])+(d[3]-d[2]);
                                        check[i][0]=d[0];
                                        check[i][1]=d[3];
                                    }
                                }
                                if(flag)
                                {
                                    dist=temp[2]-temp[1]+1;
                                    check[m][0]=temp[1];
                                    check[m][1]=temp[2];
                                    m++;
                                }
                                total=total+dist;
                            }
                        }
                    }
                }
            } */
            for(int i=1;i<501;i++)
            {
                for(int j=0;j<10;j++)
                {
                    if(arr[j][i]==1&&arr[j+1][i]==1)
                    {
                        total++;
                        break;
                    }
                }
            }
       printf("%d\n",500-total);
    }
    return 0;
}
