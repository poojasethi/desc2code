#include <iostream>
#include <algorithm>
 
using namespace std;
int k[510];
int h[510];
int dp[1510];
int main()
{
    int T;
    cin >> T;
    while(T--)
    {
        int n;
        cin >> n;
        int max = -1;
        int min = 1000;
        for(int i = 0 ; i < 510 ; i++)
        {
            k[i] = h[i] = dp[i] = 0;
        }
        for(int i = 0 ; i < n ; i++)
        {
            cin >> h[i];
            if(2 * h[i] > max)
            {
                max = 2 * h[i];
            }
        }
        for(int i = 0 ; i < n ; i++)
        {
            cin >> k[i];
            if(k[i] > max)
            {
                max = k[i];
            }
            if(k[i] < min)
            {
                min = k[i];
            }
        }
        for(int i = 0 ; i <= max ; i++)
        {
            dp[i] = 1000;
        }
        for(int i = 0 ; i < n ; i++)
        {
            dp[k[i]] = 1;
        }
        for(int i = min + 1 ; i <= max ; i++)
        {
            for(int j = min ; j <= i / 2 ; j++)
            {
                //dp[i] = min((dp[i]) , (dp[j] + dp[i - j]));
                if((dp[j] + dp[i - j]) < dp[i])
                {
                    dp[i] = (dp[j] + dp[i - j]);
                }
            }
        }
        long long int sum = 0;
        for(int i = 0 ; i < n ; i++)
        {
            sum += dp[2 * h[i]];
        }
        cout << sum << endl;
    }
} 