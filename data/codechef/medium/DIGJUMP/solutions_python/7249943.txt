def bfs(indices,n,l):
    if n==1:
        return 0
    queue=[0]
    dist={}
    dist[0]=0
#visited[0]=True

    while (len(queue)!=0):
        v=queue[0]
        del(queue[0])
        neighbors=[]
        if l[v] in indices:
		
            for ind in indices[l[v]]:
                neighbors.append(ind)
            del(indices[l[v]])
        if v+1 <n:
		
            neighbors.append(v+1)
        if v-1>=0:
		
            neighbors.append(v-1)		
        for neighbor in neighbors:
            
			
            if (neighbor not in dist):
                #num[neighbor]=num.get(neighbor,0)+1				
                if (neighbor==n-1):
                    return dist[v]+1
                dist[neighbor]=dist[v]+1
                queue.append(neighbor)			 
            


s=raw_input().strip()
n=len(s)
l=[int(s[i]) for i in range(n)]
#print l
indices={}
for i in range(n):
    val=l[i]
    if l[i] not in indices:
        indices[l[i]]=[]
    indices[l[i]].append(i)		
    		
print bfs(indices,n,l)
#just do bfs from 0 to n-1

#visited={}


			 