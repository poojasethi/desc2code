#include<bits/stdc++.h>
using namespace std;
queue<int> q;
bool vis[100007];
int d[100007];
vector<int> v[10];
int main() {
     string s;
   cin>>s;
   memset(vis, false, sizeof vis);

   int l = s.size();

   for(int i=1;i<l;i++)
   {
     int val = s[i]-'0';
     v[val].push_back(i);
   }

     d[0] = 0;
   vis[0]  = true;
   q.push(0);
     while(!q.empty())  {
         int idx = q.front();
          if(idx == l-1)
             break;
            q.pop();
           int val = s[idx]-'0';
          for(int j=0; j < v[val].size(); j++)  {
             int nidx = v[val][j];
              if(!vis[nidx]) {
                vis[nidx]  = true;
                q.push(nidx);
                d[nidx] = d[idx] + 1;
                }
            }
           v[val].clear();
            if(idx - 1 >= 0 && vis[idx - 1] == false)  {
                 vis[idx - 1] = true;
                 q.push(idx - 1);
                 d[idx - 1] = d[idx] + 1;
                 }
             if(idx + 1 < l && vis[idx + 1] == false)  {
                 vis[idx + 1] = true;
                 q.push(idx + 1);
                 d[idx + 1] = d[idx] + 1;
                }
        }
        cout << d[l-1] << endl;
    return 0; 
}