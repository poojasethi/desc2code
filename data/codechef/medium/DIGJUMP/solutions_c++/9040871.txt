# include <bits/stdc++.h>
# define MP make_pair
# define ii pair< int ,int >

using namespace std ;
vector<int > h[10];
bool visit[100005];
char str[1000005];
int bfs(int k,int n);

int main()
{
	int i;
	scanf("%s",str);
	for(i=0;str[i]!='\0';i++)
		{
			h[str[i]-'0'].push_back(i);
		}

	int ans;
	ans=bfs(0,i-1);
	
	printf("%d\n",ans);	


	return 0;
}

int bfs(int k,int n)
{
	int idx,level;
	ii x;

	queue<ii> q ;
	visit[k]=true;
	q.push(MP(k,0));
	while(!q.empty())
	{
		x=q.front();
		q.pop();
		idx=x.first;
		level=x.second;

		if(idx==n)
			break;

		int num=str[idx]-'0';
		if(idx>0 && !visit[idx-1]){
			q.push(MP(idx-1,level+1));
			visit[idx-1]=true;
		}
		if(idx<n && !visit[idx+1]){
			q.push(MP(idx+1,level+1));
			visit[idx+1]=true;
		}


	
		int size=h[num].size();
		for(int j=0;j<size;j++)
		{
			if(!visit[h[num][j]]){
				q.push(MP(h[num][j],level+1));
				visit[h[num][j]];
			}


		}
		h[num].clear();
		
	
	}
	return level;


}