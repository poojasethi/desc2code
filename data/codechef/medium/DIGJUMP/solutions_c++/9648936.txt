#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 10;
int vis[MAXN];
int digVis[10];
string s;
vector<vector<int> > vc(10);
int main(){
	int N;
	cin >> s;
	N = s.size();
	for(int i = 0;i < N;++i){
		vis[i] = N + 10;
	}
	for(int i = 0;i < N;++i){
		vc[s[i] - '0'].push_back(i);
	}
	memset(digVis, 0, sizeof digVis);
	queue<int> qu;
	qu.push(0);
	vis[0] = 0;
	while(!qu.empty()){
		int node = qu.front();
		qu.pop();
		if(node > 0 && vis[node - 1] > vis[node] + 1) {
			qu.push(node - 1);
			vis[node - 1] = vis[node] + 1;
		}
		if(node < N && vis[node + 1] > vis[node] + 1) {
			qu.push(node + 1);
			vis[node + 1] = vis[node] + 1;
		}
		int sz = vc[s[node] - '0'].size();
		int i = s[node] - '0';
		if(digVis[i]) continue;
		for(int j = 0;j < sz;++j){
			int next = vc[i][j];
			if(vis[next] > vis[node] + 1){
				vis[next] = vis[node] + 1;
				qu.push(next);
			}
		}
		digVis[i] = 1;
	}
	cout << vis[N - 1] << "\n";
	return 0;
}