	#include<iostream>
	#include<queue>
	#include<string.h>
	using namespace std;
	int l;
	char a[100005];
	int mark[10]={0};
	queue<int > q;
	int visited[100005]={0};
	int flag=-1;
	int dist[100005];
	void bfs(int node)
	{
		int t;
		t=a[node]-48;
		if(mark[t]!=1)
		{	
			for(int i=0;i<l;i++)
			{
				//if(i!=node)
				{
					if(a[node]==a[i] && visited[i]!=1)
					{
						visited[i]=1;
						q.push(i);
						dist[i]=1+dist[node];
					}	
				}	
			}
		}	
		if(node+1<l && a[node]!=a[node+1] && visited[node+1]!=1)
		{
			if(node+1==l-1)
				flag=1;
			visited[node+1]=1;
			dist[node+1]=1+dist[node];
			q.push(node+1);
		}	
		if(node-1>=0 && a[node-1]!=a[node] && visited[node-1]!=	1)
		{
			visited[node-1]=1;
			dist[node-1]=1+dist[node];
			q.push(node-1);
		}	
	}	
	
	int main()
	{
		int temp;
		int num;
		cin>>a;
		l=strlen(a);
		temp=0;
		q.push(temp);
		int count=0;
		dist[0]=0;
		for(int i=0;i<l;i++)
			visited[i]=0;
		for(int i=0;i<10;i++)
			mark[i]=0;
		while(q.empty()!=1)
		{
			num=q.front();
			visited[num]=1;
			bfs(num);
			mark[a[num]-48]=1;
			q.pop();
		}
		cout<<dist[l-1]<<endl;
	}