#include <iostream>
#include <vector>
#include <queue>
#include <algorithm>
#include <string>
using namespace std;

vector <int> V[10];
bool vis[100002];
int dis[100002];
int main(){
	queue <int> q;
	string s;
	cin>>s;
	int sz = s.size();
	for(int i = 1 ; i < sz ; i++){
		int val = s[i]-'0';
		V[val].push_back(i);
	}
	dis[0] = 0;
	q.push(0);
	vis[0] = 1;
	while(!q.empty()){
		int idx = q.front();
			if(idx == sz-1) break;
		q.pop();
		int val = s[idx]-'0';
		int idxsz = V[val].size();
		for(int j = 0 ; j < idxsz ; j++){
			int tmp = V[val][j];
			if(!vis[tmp]){
				vis[tmp] = 1;
				dis[tmp] = dis[idx]+1;
				q.push(tmp);
			}
		}
		//q.push(V[val][idxsz-1]);
		V[val].clear();
		if(idx-1>=0 && !vis[idx-1]){
			vis[idx-1] = 1;
			q.push(idx-1);
			dis[idx-1] = dis[idx]+1;
		}
		if(idx+1<sz && !vis[idx+1]){
			vis[idx+1] = 1;
			q.push(idx+1);
			dis[idx+1] = dis[idx]+1;
		}
	}
	cout<<dis[sz-1];
	
}