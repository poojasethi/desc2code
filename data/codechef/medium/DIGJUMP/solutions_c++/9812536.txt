#include<iostream>
#include<string>
#include<queue>
#include<cstdio>
#include<cstring>
#include<vector>

using namespace std;

vector<bool> visited(100004,false);
vector<int> v[10];
queue<int> q;
int dist[100004];

int main()
{
    string s;
    cin>>s;
    int len = s.size();
    for(int i=1;i<len;i++)
    {
        int val = s[i]-'0';
        v[val].push_back(i);
    }
    dist[0] = 0;
    visited[0] = true;
    q.push(0);
    while(!q.empty())
    {
        int index = q.front();
        if(index==len-1)
            break;
        q.pop();
        int val = s[index]-'0';
        int vsize = v[val].size();
        for(int j=0;j<vsize;j++)
        {
            int nidx = v[val][j];
            if(!visited[nidx])
            {
                visited[nidx]=true;
                q.push(nidx);
                dist[nidx]=dist[index]+1;
            }
        }
        v[val].clear();
        if(index-1>=0 && !visited[index-1])
        {
            visited[index-1] = true;
            q.push(index-1);
            dist[index-1]= dist[index]+1;
        }
        if(index+1<len && !visited[index+1])
        {
            visited[index+1] = true;
            q.push(index+1);
            dist[index+1]= dist[index]+1;
        }
    }
    cout<<dist[len-1]<<"\n";
    return 0;
}
