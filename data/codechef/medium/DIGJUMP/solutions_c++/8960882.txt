# include <queue>
# include <iostream>
#include <stdio.h>
#include <string.h>
# define limit 100000
using namespace std;
long int arr[10][limit],len[10],dist[limit];
long int s,e,u,v,i;
string str;
queue<long int> q;
enum flag{seen,unseen}state[limit],mark[10];;
int main()
{
	for(i=0;i<10;i++)
		mark[i]=unseen;
	cin>>str;
	s=0;//index
	e=str.size()-1;// index
	q.push(s);
	dist[0]=0;
	for(i=0;i<str.size();i++)
	{
		state[i]=unseen;
		arr[str[i]-'0'][len[str[i]-'0']++]=i;
	}
	state[0]=seen;
	while(q.size())
	{
		u=q.front();
		q.pop();
		if(u==e)
			break;
		if(u!=s&&state[u-1]==unseen)
		{
			q.push(u-1);
			state[u-1]=seen;
			dist[u-1]=dist[u]+1;
		}
		if(state[u+1]==unseen)
		{
			q.push(u+1);
			state[u+1]=seen;
			dist[u+1]=dist[u]+1;
		}
		if(mark[str[u]-'0']==unseen) // no digit same as u has been popped till now
		{
			for(i=0;u!=arr[str[u]-'0'][i];i++)
				if(state[arr[str[u]-'0'][i]]==unseen)
				{
					q.push(arr[str[u]-'0'][i]);
					dist[arr[str[u]-'0'][i]]=dist[u]+1;
					state[arr[str[u]-'0'][i]]=seen;
				}
			for(++i;i<len[str[u]-'0'];i++)
				if(state[arr[str[u]-'0'][i]]==unseen)
				{
					q.push(arr[str[u]-'0'][i]);
					dist[arr[str[u]-'0'][i]]=dist[u]+1;
					state[arr[str[u]-'0'][i]]=seen;
				}
			mark[str[u]-'0']=seen;
		}			
	}
	cout<<dist[e]<<"\n";
	return 0;
}
