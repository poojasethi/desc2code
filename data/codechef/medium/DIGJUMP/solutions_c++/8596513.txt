#include<iostream>
#include<cstdio>
#include<cstring>
#include<queue>
#include<vector>
using namespace std;
queue<int> q;
vector<int> v[10];
bool vis[100005];
int d[100005];

int main()
{
    int i,j,x,y,z,p;
    string s;
    cin>>s;
    
    x=s.size();
    
    for(i=1;i<x;i++)
    {
        y=s[i]-48;
        v[y].push_back(i);
    }
    
    memset(vis,false,sizeof(vis));
    
    q.push(0);
    vis[0]=true;
    d[0]=0;
    
    //implementing bfs on the given string 
    
    while(!q.empty())
    {
       z=q.front();
       
       if(z==x-1)
        break;
       
       y=s[z]-48;
       q.pop();
       
       for(j=0;j<v[y].size();j++)
       {
           p=v[y][j];
           if(!vis[p])
           {
               vis[p]=true;
               q.push(p);
               d[p]=d[z]+1;
           }
       }
       
       v[y].clear();
       
       if(z-1>=0&& !vis[z-1])
       {
           vis[z-1]=true;
           q.push(z-1);
           d[z-1]=d[z]+1;
       }
       
       if(z+1<x && !vis[z+1])
       {
             vis[z+1]=true;
           q.push(z+1);
           d[z+1]=d[z]+1;
       }
       
        
    }
    
    
    cout<<d[x-1]<<endl;
    
    
    
    return 0;
}
