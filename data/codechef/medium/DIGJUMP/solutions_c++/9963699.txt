#include <iostream>
#include <vector>
#include <queue>
#include <cstring>
#include <cstdio>

using namespace std;

bool vis[100010];
bool visD[10];
int dist[100010];
vector<int> pos[10];
queue<int> qu;

void common(int x, int y) {

    if (!vis[y]) {
         vis[y] = true;
         dist[y] = dist[x] + 1;
         qu.push(y);
    }
}

int main() {
    string str;
    cin >> str;

    memset(vis, 0, sizeof(vis));
    memset(visD, 0, sizeof(visD));
    memset(dist, 0, sizeof(dist));

    int dig, x, y;
    for (int i = 0; i < str.size(); i++) {
        dig = str[i] - '0';
        pos[dig].push_back(i);
    }

    qu.push(0);
    vis[0] = true;

    while (!qu.empty()) {
        x = qu.front();
        qu.pop();

        if (x == str.size()-1) {
            cout << dist[x] << endl;
            break;
        }
        if (x != 0) {
            common(x, x-1);
        }
        common(x, x+1);

        int y;
        dig = str[x] - '0';
        if (!visD[dig]) {
             visD[dig] = true;
            for (int i = 0; i < pos[dig].size(); i++) {
                 y = pos[dig][i];
                 if (x == y) continue;
                 common(x,y);
            }
        }

    }
    return 0;
}
