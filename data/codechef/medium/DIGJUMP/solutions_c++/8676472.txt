#include<cstring>
#include<vector>
#include<cstdio>
#include<queue>

using namespace std;

vector<int> v[10];
queue<int> q;
char str[100005];
bool visited[100005];
int d[100005],n;

void bfs(int s)
{
	int idx,i,num,size;
	d[s]=0;
	visited[s]=true;
	q.push(s);
	while(!q.empty())
	{
		idx=q.front();
		if(idx==n-1)
			break;
		q.pop();
		num=str[idx]-'0';
		size=v[num].size();
		for(i=0;i<size;i++)
		{
			
			if(!visited[v[num][i]])
			{
				visited[v[num][i]]=true;
				q.push(v[num][i]);
				d[v[num][i]]=d[idx]+1;
			}
		}
		v[num].clear();
		if(idx-1>=0 && !visited[idx-1])
		{
			visited[idx-1]=true;
			q.push(idx-1);
			d[idx-1]=d[idx]+1;
		}
		if(idx+1<n && !visited[idx+1])
		{
			visited[idx+1]=true;
			q.push(idx+1);
			d[idx+1]=d[idx]+1;
		}
	}
}
	
	int main()
	{
		int i,val;
		scanf("%s",str);
		n=strlen(str);
		memset(visited,false,sizeof(visited));
		for(i=0;i<n;i++)
		{
			val=str[i]-'0';
			v[val].push_back(i);
		}
		
		bfs(0);
		printf("%d\n",d[n-1]);
		return 0;
	}
			
	
