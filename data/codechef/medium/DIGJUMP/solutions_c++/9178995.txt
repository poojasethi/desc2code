#include <cstdio>
#include <queue>
#include <vector>
#include <cstring>
#include <string>
#include <iostream>

std::vector<int> node[10];
std::queue<int> q;
int distance[100006];
bool visited[100006];

int main() {
//    char str[100006];
//    scanf("%s", str);
    std::string str;
    std::cin>>str;
    int j;
    int length = str.size();
    for (j = 1; j<length; j++) {
        node[str[j] - '0'].push_back(j);
    }

    for (int i = 0; i < length; i++) {
        distance[i] = 0;
        visited[i] = false;
    }
    distance[0] = 0;
    visited[0] = true;
    q.push(0);
    while (!q.empty()) {
        int index = q.front();

        if (index == length - 1) {
            break;
        }
        q.pop();
        int value = str[index] - '0';
        int x = node[value].size();
        for (int i = 0; i < x; i++) {
            int next_index = node[value][i];
            if (!visited[next_index]) {
                visited[next_index] = true;
                q.push(next_index);
                distance[next_index] = distance[index] + 1;
            }
        }
        node[value].clear();
        if (index - 1 >= 0 && !visited[index - 1]) {
            visited[index - 1] = true;
            q.push(index - 1);
            distance[index - 1] = distance[index] + 1;
        }
        if (index + 1 < length && !visited[index + 1]) {
            visited[index + 1] = true;
            q.push(index + 1);
            distance[index + 1] = distance[index] + 1;
        }
    }
    printf("%d\n", distance[length - 1]);
    return 0;
}
