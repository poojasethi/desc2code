#include<iostream>
#include<stdio.h>
#include<string>
#include<string.h>
#include<algorithm>
 
using namespace std;

int main() {
	string A;
	cin>>A;
	
	int pos[10][100000], empty[10], i, N=A.length();
	int jumps[N], queue[N], head, tail;

	for(i=0; i<10; ++i)
		empty[i] = 0;

	for(i = 0; i<N; ++i) {
		pos[A[i]-'0'][empty[A[i]-'0']++] = i;
		jumps[i] = 1000000;
	}

	for(i = 0; i<10; ++i)
		pos[i][empty[i]] = -1;

	jumps[0] = 0;
	queue[0] = 0;
	head = tail = 0;

	int dequeue, val, p;
	while(head <= tail) {
		val = queue[head++];
		
		if(val == N-1)
			break;

		if(val-1 >=0 && jumps[val-1] == 1000000) {
			jumps[val-1] = jumps[val] + 1;
			queue[++tail] = val-1;
		}

		if(val+1 <N && jumps[val+1] == 1000000) {
			jumps[val+1] = jumps[val] + 1;
			queue[++tail] = val+1;
		}

		int x = A[val] - '0';
		for(i=0; i<100000 && pos[x][i] != -1; ++i) {
			p = pos[x][i];
			pos[x][i] = -1;

			if(jumps[p] != 1000000)
				continue;
			queue[++tail] = p;
			jumps[p] = jumps[val] + 1;
			
		}
		
	}
	
	cout<<jumps[N-1]<<endl;
}
