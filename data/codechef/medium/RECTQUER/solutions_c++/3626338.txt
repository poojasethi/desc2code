#include<stdio.h>
#include<algorithm>
#include<vector>

#define mp make_pair

#define lb lower_bound
#define ub upper_bound

#ifndef ONLINE_JUDGE
#define getchar_unlocked getchar
#define putchar_unlocked putchar
#endif

inline int read_int() {
  register char c = getchar_unlocked();
  while(c<'0' || c>'9') c = getchar_unlocked();
  int ret = 0;
  while(c>='0' && c<='9') {
    ret = (ret<<3)+(ret<<1) + c - 48;
    c = getchar_unlocked();
  }
  return ret;
}

inline void fastwrite(int a){
char snum[20];
int i=0;
do{
snum[i++]=a%10+48;
a=a/10;
}while(a!=0);
i=i-1;
while(i>=0)
putchar_unlocked(snum[i--]);
putchar_unlocked('\n');
}


using namespace std;
#define pi pair<int,int>

vector<pi> pairs[11];

bool compx(pi a,pi b)
{
    return a.first<b.first;
}

bool compy(pi a,pi b)
{
    return a.second<b.second;
}

int main()
{
    int n,q,x1,x2,y1,y2,lim,i,j,ctr,temp;
    n=read_int();
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            temp=read_int();
            pairs[temp].push_back(mp(i,j));
        }
    }
    q=read_int();
    while(q--)
    {
        x1=read_int();
        y1=read_int();
        x2=read_int();
        y2=read_int();
        ctr=0;
        for(i=1;i<=10;i++)
        {
            lim=pairs[i].size();
            j=lb(lb(pairs[i].begin(),pairs[i].end(),mp(x1,0),compx),ub(pairs[i].begin(),pairs[i].end(),mp(x1,0),compx),mp(0,y1),compy)-pairs[i].begin();

            while(j<lim)
            {
                if(pairs[i][j].first<=x2)
                {
                    if(y1<=pairs[i][j].second && pairs[i][j].second<=y2)
                    {
                        ctr++;
                        break;
                    }
                    j++;
                }
                else
                    break;
            }
        }
        fastwrite(ctr);
    }
    return 0;
}
