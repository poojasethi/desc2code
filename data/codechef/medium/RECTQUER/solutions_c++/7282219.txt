#include<stdio.h>
#include<stdlib.h>
#define ROWS 301
#define COLS 301
#define getcx getchar_unlocked
 
inline void inp( int *n )//fast input function
{
   *n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           *n = (*n<<3)+(*n<<1) + ch-'0', ch=getcx();
   *n=*n*sign;
}
inline void out(register int N)
{
    register int rev=N, count = 0;
    if (N == 0)
    {
          putchar_unlocked('0');
          putchar_unlocked('\n');
          return ;
    }
    while ((rev % 10) == 0)
    {
          count++;
          rev /= 10;
    }
    rev = 0;
    while (N != 0)
    {
          rev = (rev<<3) + (rev<<1) + N % 10;
          N /= 10;
    }
    while (rev != 0)
    {
          putchar_unlocked(rev%10 + '0');
          rev /= 10;
    }
    while (count--)
          putchar_unlocked('0');
    putchar_unlocked('\n');
    return ;
}
 
int main(){
    int N,Q,i,j,d,count=0,temp;
    int x1,y1,x2,y2;
    int memo[ROWS][COLS][11] = {0};
 
    inp(&N);
    for(i=1;i<=N;i++){
        for(j=1;j<=N;j++){
            inp(&temp);
            for(d=0;d<11;d++){
                memo[i][j][d] = memo[i][j-1][d] + memo[i-1][j][d] - memo[i-1][j-1][d];
            }
            memo[i][j][temp]++;
        }       
    }
    inp(&Q);
    while(Q--){
        inp(&i);inp(&j);inp(&N);inp(&temp);
        count=0;
        for(d=1;d<11;d++){
            if((memo[N][temp][d] - memo[N][j-1][d] - memo[i-1][temp][d] + memo[i-1][j-1][d]) > 0)
                count++;
        }
        out(count);
    }
    return 0;
} 