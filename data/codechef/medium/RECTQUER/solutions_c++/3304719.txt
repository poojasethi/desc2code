#include <iostream>
#include <math.h>
#include <algorithm>
using namespace std;
const int maxn = 400;

int dp[maxn][maxn][11];
int m[maxn][maxn];
int n,q;

void pre()
{
	for(int i = 1; i <= n; i++)
	{
		for(int j = 1; j <= n; j++)
		{
			for(int v = 1; v <= 10; v++)
			{
				dp[i][j][v] = dp[i - 1][j][v] + dp[i][j - 1][v] - dp[i - 1][j -1][v];
				if(v == m[i][j])dp[i][j][v]++;
			}
		}
	}
}

int calc(int f, int c, int f1, int c1)
{
	int res = 0;

	for(int i = 1; i <= 10; i++)
	{
		res += ((dp[f][c][i] - dp[f1][c][i] - dp[f][c1][i] + dp[f1][c1][i]) ? 1 : 0);
		//cout << i << " " << (dp[f][c][i] - dp[f1][c][i] - dp[f][c1][i] + dp[f1][c1][i]) << endl;
	}
	//system("pause");
	return res;
}

int main()
{
	cin >> n;

	for(int i = 1; i <= n; i++)
		for(int j = 1; j <=n ; j++)
			cin >> m[i][j];

	pre();
	//cout << dp[2][2][2] << endl;
	//return 0;
	cin >> q;
	int x = 0,y =0, x1 = 0,y1 = 0;;
	while(q--)
	{
		cin >> x1 >> y1 >> x >> y;
		cout << calc(x,y,x1 - 1,y1 - 1) << endl;
	}
	return 0;
}
