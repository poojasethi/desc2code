// LUCIFER <3 SLS <3

#include <bits/stdc++.h>

using namespace std;

int main()
{
    int n, i, j, k, q, x1, y1, x2, y2;
    scanf("%d", &n);
    int a[n][n];
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++)
            scanf("%d", &a[i][j]);
    }
    int b[n*n][10];
    memset(b, 0, sizeof(b));
    for (i = 0; i < n; i++) {
        for (j = 0; j < n; j++) {
            b[n*i+j][a[i][j]-1]++;
            if (j > 0) {
                for (k = 0; k < 10; k++)
                    b[n*i+j][k] += b[n*i+j-1][k];
            }
        }
    }
    int c[n*n][10];
    memset(c, 0, sizeof(c));
    for (i = 1; i < n; i++) {
        for (j = 0; j < n; j++) {
            for (k = 0; k < 10; k++)
                b[i*n + j][k] += b[(i-1)*n + j][k];
        }
    }
    int p[10], cnt;
    memset(p, 0, sizeof(p));
    scanf("%d", &q);
    while (q--) {
        scanf("%d%d%d%d", &x1, &y1, &x2, &y2);
        x1--;
        y1--;
        x2--;
        y2--;
        for (i = 0; i < 10; i++)
            p[i] += b[n*x2+y2][i];
        if (x1 > 0 && y1 > 0) {
            for (i = 0; i < 10; i++)
                p[i] += b[(x1-1)*n + y1 - 1][i];
        }
        if (y1 > 0) {
            for (i = 0; i < 10; i++)
                p[i] -= b[x2*n + y1 - 1][i];
        }
        if (x1 > 0) {
            for (i = 0; i < 10; i++)
                p[i] -= b[(x1-1)*n + y2][i];
        }
        cnt = 0;
        for (i = 0; i < 10; i++) {
            if (p[i] > 0) {
                cnt++;
                p[i] = 0;
            }
        }
        printf("%d\n", cnt);
    }
    return 0;
}
