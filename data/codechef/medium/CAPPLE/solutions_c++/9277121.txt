
/* Libraries */

#include<stdio.h>

/* Limits */

#define MAX_SIZE 100000

/* Merge Sort */

void mergeSort1(int array1[], int start, int end);

/* Main Function */

int main(void)
{
    
    int cases;
    
    int array1[MAX_SIZE];
    int size;
    
    int result;
    
    scanf("%d", &cases);
    
    for(int input = 1; input <= cases; input++)
    {
        
        scanf("%d", &size);
        
        for(int index = 0; index < size; index++)
        {
            scanf("%d", &array1[index]);
        }
        
        mergeSort1(array1, 0, size-1);
        
        result = 1;
        
        for(int index = 0; index < size-1; index++)
        {
            if( array1[index] < array1[index+1] )
            {
                result += 1;
            }
        }        
        
        printf("%d\n", result);
        
    }
    
    return 0;
    
}

/* Merge Sort */

void mergeSort1(int array1[], int start, int end)
{
	
	static int mergeArray[MAX_SIZE];

	if(start >= end)
	{
		return;
	}

	int middle = ( start + end ) / 2;

	mergeSort1(array1, start, middle);
	mergeSort1(array1, middle+1, end);

	int i1;
	int i2;

	i1 = start;
	i2 = middle+1;

	for(int i = start; i <= end; i++)
	{
		
		if(i1 == middle+1)
		{
			mergeArray[i] = array1[i2];
			i2 += 1;
		}
		else if(i2 == end+1)
		{
			mergeArray[i] = array1[i1];
			i1 += 1;		
		}
		else if(array1[i1] <= array1[i2])
		{
			mergeArray[i] = array1[i1];
			i1 += 1;			
		}
		else
		{
			mergeArray[i] = array1[i2];
			i2 += 1;		
		}

	}

	for(int i = start; i <= end; i++)
	{		
		array1[i] = mergeArray[i];
	}

}



