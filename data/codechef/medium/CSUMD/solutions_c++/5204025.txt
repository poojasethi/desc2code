#include<iostream>
using namespace std;

int bin(long long n , int a[])
{	for(int i = 0 ; i < 64 ; i++)
	{	a[i]=0;
	}	
	long long same = 0 ;
	int chmax = 1 ;
	int longest = 0 ;
	while(n!=0)
	{	int count =  0;
		int same  = 1;
		while(same<=n)
		{	same *= 2;
			count++;
		}
		if(chmax==1)
		{	longest = count ;
			chmax= 0 ;
		}
		a[count-1]=1;
		n -= (same/2);
	}
	return longest;
}

int matrixmult(long long a[][2] , long long b[][2] , long long c[][2])
{	for(int i = 0 ; i < 2 ; i ++)
	{	for (int j = 0 ; j < 2  ; j++)
		{	long long sum=0;
			for(int k = 0; k < 2; k ++)
			{	sum = (sum  + (a[i][k]*b[k][j]))%1000000007;
			}
			c[i][j] = sum;
		}
	}
}

int equate(long long a[][2], long long b[][2])
{	for(int i= 0; i < 2; i++)
	{	for(int j =0 ; j< 2 ; j++)
		{	b[i][j] = a[i][j];
		}
	}
}
int totlmult(int a[] , long long ans[][2] , long long n)
{	long long iter[2][2];
	iter[0][0]=2;
	iter[0][1]=1;
	iter[1][0]=2;
	iter[1][1]=0;
	int s = bin(n,a);
	int t= 0;
	while(t<s)
	{	if(a[t]==1)
		{	long long  tem[2][2];
			matrixmult(ans,iter, tem);
			equate(tem,ans);
		}
		long long temp[2][2];
		matrixmult(iter,iter,temp);
		equate(temp,iter);
		t++;
	}
}
int main()
{	int test;
	scanf("%i",&test);
	for(int p = 0 ; p < test ;p++)
	{	long long n;
		scanf("%lld",&n);
		int a[64];
		long long ans[2][2];
		ans[0][0]=3;
		ans[0][1]=1;
		ans[1][0]=0;
		ans[1][1]=0;
		if(n>2)
		{	totlmult(a,ans,n-2);
			cout<<ans[0][0]<<endl;
		}
		else if(n==2)
		{	cout<<3<<endl;
		}
		else if(n==1)
		{	cout<<1<<endl;
		}
		
	}
}