#include<iostream>
#include<fstream>
#include<string.h>
#include<stdio.h>
#include<math.h>
#include<algorithm>
#include<string>
#include<vector>

using namespace std;
#define MOD 1000000007

int max(int a,int b)
{
	return (a>b)?a:b;
}

int min(int a,int b)
{
	return (a<b)?a:b;
}

int mod(int x)
{
	return (x<0)?(-x):x;
}

void multiply(long long A[][2],long long B[][2])
{
	int n=2;
	long long C[2][2];
	C[0][0]=(A[0][0]*B[0][0]+A[0][1]*B[1][0])%MOD;
	C[0][1]=(A[0][0]*B[0][1]+A[0][1]*B[1][1])%MOD;
	C[1][0]=(A[1][0]*B[0][0]+A[1][1]*B[1][0])%MOD;
	C[1][1]=(A[1][0]*B[0][1]+A[1][1]*B[1][1])%MOD;
	
	A[0][0]=C[0][0];
	A[0][1]=C[0][1];
	A[1][0]=C[1][0];
	A[1][1]=C[1][1];
	/*for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
		{
			C[i][j]=0;
			for(int k=0;k<n;k++)
			C[i][j]=(C[i][j]+(A[i][k]*B[k][j])%MOD)%MOD;
		}
	
	
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++)
			A[i][j]=C[i][j];
	*/	
}

void power(long long A[][2],int n)
{
	if(n==1)
		return;
	long long C[2][2]={2,1,2,0};
	power(A,n/2);
	multiply(A,A);
	if(n%2)
		multiply(A,C);	
}

long long process(int n)
{
	long long matrix[2][2]={2,1,2,0};
	long long ans;
	
	if(n==1)
		return 1;
	else if(n==2)
		return 3;
	else
		power(matrix,n-2);
	ans=((3*(long long)matrix[0][0])%MOD+matrix[1][0])%MOD;
	return ans;
}

int main()
{
	ios_base::sync_with_stdio(false);
	
	int t,n;
	cin>>t;
	while(t--)
	{
		cin>>n;
		cout<<process(n)<<endl;
	}
	
	return 0;
}
