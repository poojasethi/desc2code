#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const LL MOD = 1e9 + 7;
void mul(LL (*A)[2], LL (*B)[2]){
    LL C[2][2];
    for(int i = 0;i < 2;++i){
        for(int j = 0;j < 2;++j){
            C[i][j] = 0;
            for(int k = 0;k < 2;++k){
                C[i][j] = (C[i][j] + A[i][k] * B[k][j]) % MOD;
            }
        }
    }
    for(int i = 0;i < 2;++i){
        for(int j = 0;j < 2;++j){
            A[i][j] = C[i][j];
        }
    }
}
void power(LL (*MAT)[2], int p){
    LL ans[2][2] = {{1, 0}, {0, 1}};
    while(p > 0){
        if(p&1){
            mul(ans, MAT);
        }
        mul(MAT, MAT);
        p >>= 1;
    }
    for(int i = 0;i < 2;++i){
        for(int j = 0;j < 2;++j){
            MAT[i][j] = ans[i][j];
        }
    }
}
inline LL rec(int N){
    if(N == 1){
        return 1;
    } else if(N == 2){
        return 3;
    }
    LL MAT[2][2] = {{2, 2}, {1 , 0}};
    power(MAT, N - 2);

    return (MAT[0][0] * 3 + MAT[0][1]) % MOD;
}
int main(){
    int t;
    scanf("%d", &t);
    while(t--){
        int N;
        scanf("%d", &N);
        printf("%lld\n", rec(N));
    }
    return 0;
}
