#include<iostream>
using namespace std;
#define M 1000000007
class node
{
   long long int a11,a12,a21,a22;
public:
   node()
   {
      a11=a21=2;
      a12=1;
      a22=0;
   }
   node operator*(node A)
   {
      node B;
      B.a11=(a11*A.a11%M+a12*A.a21%M)%M;
      B.a12=(a11*A.a12%M+a12*A.a22%M)%M;
      B.a21=(a21*A.a11%M+a22*A.a21%M)%M;
      B.a22=(a21*A.a12%M+a22*A.a22%M)%M;
      return B;
   }
   static node power(long long int);
   void print()
   {
      long long int ans=(3*a11%M+a21)%M;
      cout<<ans<<endl;
   }
};
node node::power(long long int N)
{
   node temp;
   if(N==1)
      return temp;
   node res=power(N/2);
   res=res*res;
   if(N%2)
      return res*temp;
   return res;
}
int main()
{
   int T;
   long long int N,i,j,k;
   cin>>T;
   while(T--)
   {
      cin>>N;
      if(N==1)
         cout<<1<<endl;
      else if(N==2)
         cout<<3<<endl;
      else
      {
         node C=node::power(N-2);
         C.print();
      }
   }
return 0;
}
