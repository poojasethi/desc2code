#include<iostream>
#include<iomanip>
#include<algorithm>
#include<cmath>
#include<vector>
#include<set>
#include<queue>
#include<deque>
#include<stack>
#define f(i, n) for (int i = 0; i < n; i++)
#define fi(i, n) for (; i < n; i++)
#define d(i, n) for (int i = n; i >= 0; --i)
#define ff(i, m, n) for (int i = m; i < n; i++)
#define dd(i, m, n) for (int i = m; i > n; --i)
#define ull unsigned long long
#define mp(i, j) make_pair(i, j)
#define pb(v, a) v.push_back(a)
#define MAXN 5001
#define MOD 1000000007
using namespace std;
int n, k;
ull ans, f[MAXN], invf[MAXN];
ull mpow(int b, int e) {
  if (!e) return 1;
  if (e%2) return ((ull)b*mpow(b, e-1))%MOD;
  ull ret = mpow(b, e/2);
  return (ret*ret)%MOD;
}
ull C(int a, int b) {
  if (!b) return 1;
  if (b == 1) return (ull)a;
  return (((f[a]*invf[b])%MOD)*invf[a-b])%MOD;
}
int main() {
  f[0] = f[1] = 1; ff(i, 2, MAXN) f[i] = (i*f[i-1])%MOD;
  invf[MAXN-1] = mpow(f[MAXN-1], MOD-2);
  d(i, MAXN-2) invf[i] = ((i+1)*invf[i+1])%MOD;
  while(1) {
    cin >> n >> k;
    if (!n&&!k) break;
    cout << (2*C(n-2, k/2)*C(n-2, (k-1)/2))%MOD << endl;
  }
  return 0;
}
