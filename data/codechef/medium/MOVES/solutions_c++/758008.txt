#define DEBUG
#undef DEBUG

#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>

using namespace std;

typedef long long ll;

#define MOD 1000000007

#define N 5001

int powmod(ll a, ll b, ll m) {

	ll res = 1;

	while (b > 0) {
		if (b & 1) {
			res = (res * a) % m;
		}
		a = (a * a) % m;
		b = b >> 1;
	}

	return res;
}

int main() {


	ll fac[N], ifac[N];
	fac[0] = 1;
	ifac[0] = 1;
	for(int i = 1; i < N; i++) {
		fac[i] = (i * fac[i-1]) % MOD;
		ifac[i] = powmod(fac[i], MOD-2, MOD);
	}

	while(true) {
		int n, k;
		scanf("%d %d\n", &n,&k);
		if (n == 0 && k == 0) break;

		int m1 = (k+1)/2;
		int m2 = m1 + ( (k+1) % 2);

#ifdef DEBUG
		printf("I:%d %d\n", n, k);
		printf("P:%d %d\n", m1, m2);
#endif

		int l = n-1; //elements total
		int l1 = l-m1;
		int l2 = l-m2;

		ll w1 = (fac[l - 1] * ( (ifac[l-m1] * ifac[m1-1]) % MOD) ) % MOD;
		ll w2 = (fac[l - 1] * ( (ifac[l-m2] * ifac[m2-1]) % MOD) ) % MOD;

#ifdef DEBUG
		printf("W:l=%d l1=%d l2=%d w1=%ld s2=%ld\n", l,l1,l2, w1,w2);
		printf("W:fac(%d)=%ld\n", l-1, fac[l-1]);
		printf("W:ifac(%d)=%ld\n", l-m1, ifac[l-m1]);
		printf("W:ifac(%d)=%ld\n", m1-1, ifac[m1-1]);
#endif

		ll w = (((w1*w2) % MOD) * 2) % MOD;
		printf("%ld\n", w);
	}

	return 0;
}
