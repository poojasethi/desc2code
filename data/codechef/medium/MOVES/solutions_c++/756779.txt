#include<cstdio>
#define MOD 1000000007
#define LIM 5000

long C[LIM+1][LIM+1];

void precompute()
{
    C[0][0]=C[1][0]=C[1][1]=1;

    for(int n=2; n<=LIM; n++)
    {
        C[n][0]=C[n][n]=1;
        for(int r=1; r<n; r++)
            C[n][r] = (C[n-1][r]+C[n-1][r-1])%MOD;
    }
}

long long solve(int n,int k)
{
    n -= 2;
    if(k&1==1)
    {
        int k1=k/2;
        long long p=(long long)C[n][k1];
        return (2*p*p)%MOD;
    }
    else
    {
        int k1=k/2,k2=(k-1)/2;
        long long p1=(long long)C[n][k1],p2=(long long)C[n][k2];
        return (2*p1*p2)%MOD;
    }
}
int main()
{
    precompute();
    int n,k;

    do
    {
        scanf("%d%d",&n,&k);
        if(n||k)
            printf("%lld\n",solve(n,k));
    }while(n||k);
    return 0;
}
