# include <iostream>
# include <cstdio>
# include <vector>
# include <ctime>
using namespace std;
 
# define M 1000000007
 
long long fact[5001],invfact[5001];
 
long long modexp(long long a, long long b, long long n)
{
  long long r = 1;
  while(true)
    {
      if((b & 1) == true)
	{
	  r = r * a;
	  r = r % n;
	}
      a = (a * a) % n;
      b = b >> 1;
      if(b == 0)
	break;
    }
  return r;
} 
 
 
void init()
{
  fact[0] = 1;
  int i;
  for(i = 1; i <= 5000; i++)
    {
      fact[i] = (long long)i * fact[i-1] % M;
    }
 
  invfact[5000] = modexp(fact[5000], M - 2, M);
 
  for(i = 5000; i > 0; i--)
    {
      invfact[i-1] = (long long)i * invfact[i] % M;
    }
  //  cout << endl << fact[3] << endl << invfact[2] << endl << invfact[1];
}
 
long long BallsBins(int n, int r)
{
  if(n + r - 1 <= 0 || n + r - 1 < r)
    return 0;
  return (long long)(((long long)fact[n+r-1] * invfact[r]) % M) * (long long)invfact[n-1] % M; 
}
 
int main()
{
  int N,K,r1,r2;
  long long v;
  //preprocess(5000);
  init();
  //cout << endl << (clock() - start) / CLOCKS_PER_SEC << endl;
  while(scanf("%d %d",&N,&K) != EOF && (N || K) )
    {
      if(K % 2 != 0)
	{
	  r1 = (K + 1) / 2;
	  r2 = r1;
	}
      else
	{
	  r1 = K / 2;
	  r2 = r1 + 1;
	}
 
      v = (2ll * BallsBins(r1, N - 1 - r1) % M) * BallsBins(r2, N - 1 - r2) % M;
      printf("%lld\n",v);
    }
  return 0;
}