import sys
 
# Global Variables
 
M       = 5001
MOD     = 1000000007
 
factorial = [1]*M
 
 
 
# Helper Methods
 
def precompute_factorial_cache():
    for i in xrange(1, M):
        factorial[i] = (factorial[i-1] * i) % MOD
 
 
# INCORRECT WAY TO COMPUTE THIS
def choose(n, k):
    numerator = factorial[n]
    denominator = (factorial[k] * factorial[n-k]) % MOD
    return numerator * pow(denominator, MOD-2, MOD) 
    
 
def no_more_testcases(n, k):
    return not n and not k
 
 
def next_testcase():
    testcase = sys.stdin.readline().split()
    return int(testcase[0]), int(testcase[1])
 
 
 
# Begin main script
 
precompute_factorial_cache()
 
done = False
 
while not done:
    
    n, k = next_testcase()
    
    if no_more_testcases(n, k):
        done = True
 
    else:
        print (2*((choose(n-2, k/2) * choose(n-2, (k-1)/2)) % MOD)) % MOD