# Bogosort

fact = [1,1]
P = [0,0,1]
Num = [0,0,2]
Q_Num = [0,0,3]
Q_Den = [1,1,1]
Den = [1,1,1]
max1 = 2
max2 = 2


def gcd(a,b) :
    while b != 0:
        t = b
        b = a % b
        a = t
    return a


def find_fact():
    for i in range(2,152,1):
        fact.append(i*fact[i-1])

def find_P():
    for i in range(3,152,1):
        t1 = i*i - 3*i + 3
        t2 = fact[i-2]*t1
        P.append(t2)

def find_sol1(n):

    if Num[n] != -1:
        return

    #print "(find_sol1 --> %d )\n"%(n)
    
    t1 = P[n]*Den[n-1] + fact[n-1]*Num[n-1]
    t2 = t1*Q_Den[n-1]
    t3 = Q_Num[n-1]*Den[n-1]
    Num[n] = t2+t3 
    Den[n] = Den[n-1]*Q_Den[n-1]*(fact[n]-P[n])

    Q_Num[n] = Q_Num[n-1]*Den[n] + P[n]*Q_Den[n-1]*(Num[n]+Den[n])
    Q_Den[n] = Q_Den[n-1]*Den[n]

    t1 = gcd(Num[n],Den[n])
    t2 = gcd(Q_Num[n],Q_Den[n])
    Num[n] = Num[n]/t1
    Den[n] = Den[n]/t1
    Q_Num[n] = Q_Num[n]/t2
    Q_Den[n] = Q_Den[n]/t2


def find_sol(i):
    if Num[i] != -1:
        return
    else:
        #print "The start : (%d %d) " %(max2+1,i)
        for k in range(max2+1,i+1,1):
            find_sol1(k)
        

for i in range(3,160,1):
        Num.append(-1)
        Den.append(-1)
        Q_Num.append(-1)
        Q_Den.append(-1)

find_fact()
find_P()


test = raw_input() # read string
test = int(test)
for i in range(0,test,1) :
    num = raw_input() # read string
    num = int(num)  # convert string to integer

    if(num > max1):
        max2 = max1
        max1 = num
        find_sol(num)
    if Den[num] == 1:
        print "%d" %(Num[num])
    else:
        print "%d/%d" %(Num[num],Den[num])


# End Program