#include <bits/stdc++.h>

#define ALL(c)        c.begin(), c.end()
#define TR(c, it)     for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define REP(i, j, lo) for(int (i) = (j); i >= (lo); i--)
#define MAX(a, b)     ((a) > (b) ? (a) : (b))
#define MIN(a, b)     ((a) < (b) ? (a) : (b))
#define gc            getchar_unlocked
#define pu            putchar_unlocked

#ifndef ONLINE_JUDGE
    #define gc getchar
    #define pu putchar
#endif

#define ll            long long int
#define ull           unsigned long long int
#define inf           INT_MAX
#define mininf        INT_MIN
#define pb            push_back
#define pob           pop_back
#define pf            push_front
#define pof           pop_front
#define mp            make_pair
#define PI            3.14159265358979323846264338327950288
#define endl          '\n'
#define SET(arr, val) memset(arr, val, sizeof arr)
#define SI            ( { int x; scanf("%d", &x); x; } )
#define IOSFAST       ( ios::sync_with_stdio(false); )
#define sysp          ( system("pause") )
#define isNum(a)      (a>=48 && a<=57)
#define isSchar(a)    (a>='a' && a<='z')
#define isCchar(a)    (a>='A' && a<='Z')
#define fi             first
#define se             second
#define clz(x)         __builtin_clz(x)
#define ctz(x)         __builtin_ctz(x)
#define popcount(x)    __builtin_popcount(x)
#define clzll(x)       __builtin_clzll(x)
#define ctzll(x)       __builtin_ctzll(x)
#define popcountll(x)  __builtin_popcountll(x)

using namespace std;

typedef pair<int, int> pi;
typedef pair<pi, int> ppi;
typedef pair<int, pi> pip;

/** FUNCTIONS **/
//template <typename T> inline void ifast(T &x)
//{ register int c = gc();x = 0;int neg = 0;for(;((c < 48 || c > 57)&&c != '-');c = gc());if(c == '-') neg = 1, c = gc();
//  for( ; c > 47 && c < 58 ; c = gc()) x = (x << 1) + (x << 3) + c - 48; if(neg) x = -x; }
//
//template <typename T> inline void dfast(T &x)
//{ T s=1,i=10;x=0;char c=gc();if(c=='-')s=-1,c=gc();while(isNum(c))x=x*10+(c-'0'),c=gc();if(c!='.')return;c=gc();
//  while(isNum(c)) x = x + (c - '0') / i, i *= 10, c = gc(); }
//
//int sfast(char*str){register char c=0;register int i=0;while(c<33)c=gc();while(c!='\n'){str[i]=c;c=gc(),i++;}str[i]='\0'; return i;}
//
//int sfast(string &str){register char c=0;register int i=0;while(c<33)c=gc();str="";while(c!='\n'){str += c;c = gc();i++;} return i;}

template<typename T>T s2num(string &Text){ stringstream ss(Text);T result;return ss >> result ? result : 0;}

template<typename T>string num2s(T Number){ stringstream ss; ss << Number; return ss.str();}

template<typename T> T gcd(T a, T b){if(b == 0) return a; else return gcd(b, a % b);}

template<typename T> T ncr(T n,T r){T c=1,d;for(T j=1;j<r+1;j++){d=gcd(c, j);c /= d;c *= (n - j + 1) / (j / d);}return c;}

template<typename T> T uplim(){ return numeric_limits<T>::max(); }

template<typename T> T lolim(){ return numeric_limits<T>::min(); }

/** END **/

int main()
{
    int t = SI;
    while(t--)
    {
        int n = SI, m = SI;
        ll color[41] = {0}, cost[41] = {0}, col, cos;
        FOR(i, 0, n)
        {
            col = SI, cos = SI;
            color[col]++;
            cost[col] += cos;
        }
        ll dp1[41][41] = {0}, dp2[41][41] = {0};
        dp1[0][0] = 1;
        FOR(i, 1, 41)
        {
            dp1[i][0] = 1;
            FOR(j, 1, i+1)
                dp1[i][j] = dp1[i-1][j] + dp1[i-1][j-1] * ((1LL << color[i]) - 1);
        }
        FOR(i, 1, 41)
            FOR(j, 1, i+1)
            {
                if(color[i])
                    dp2[i][j] = dp2[i-1][j] + dp2[i-1][j-1] * ((1LL << color[i]) - 1) + dp1[i-1][j-1]*cost[i]*((1LL << (color[i]-1)));
                else
                    dp2[i][j] = dp2[i-1][j];
            }
        double num = 0, den = 0;
        FOR(i, m, n+1)
        {
            num += dp2[40][i];
            den += dp1[40][i];
        }
        printf("%0.9lf\n", num/den);
    }
    return 0;
}
