#include<cstdio>
#include<algorithm>
#include<iostream>
#include<cstdlib>
#include<vector>
#include<cmath>

using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define K 10000000
#define L 400
#define ll long long
#define s1(a) scanf("%d",&a);
#define s2(a,b) scanf("%lld%lld",&a,&b);
#define s3(a,b) scanf("%d%d",&a,&b);
#define s4(a,b,c) scanf("%d%d%d",&a,&b,&c); 

ll n,m,cl[50],dp1[50][50],k;
ll co[50],dp2[50][50];

void scan()
{
	FOR(i,0,45)
	{
		cl[i]=co[i]=0;
	}
	ll cr;
	ll cs;
	k=0;
	int max=0;
	s2(n,m)
	FOR(i,0,n)
	{
		s2(cr,cs)
		if(cl[cr]==0)
			++k;
		if(cr>max)
			max=cr;
		cl[cr]+=1;
		co[cr]+=cs;
	}
	int i2;
	FOR(i,1,max+1)
	{
		if(cl[i]==0)
		{
			i2=i;
		while(cl[i2]==0)
		{
			++i2;
		}
		FOR(j,i2,max+1)
		{
			cl[i+j-i2]=cl[j];
			co[i+j-i2]=co[j];
		}
		max=max-(i2-i);
		}
	}
	/*FOR(i,1,k+1)
		cout<<co[i]<<'\n';*/
}

void out()
{
	dp1[1][1]=pow(2,cl[1])-1;
	dp2[1][1]=co[1]*pow(2,cl[1]-1);
	FOR(i,2,k+1)
	{
		dp1[i][1]=dp1[i-1][1]+pow(2,cl[i])-1;
		dp1[1][i]=0;
		dp2[i][1]=dp2[i-1][1]+pow(2,cl[i]-1)*co[i];
		dp2[1][i]=0;
	}
	FOR(i,2,k+1)
	{
		FOR(j,2,k+1)
		{
			dp1[i][j]=dp1[i-1][j] + (pow(2,cl[i])-1)*dp1[i-1][j-1];
			dp2[i][j]=dp2[i-1][j] + (pow(2,cl[i])-1)*dp2[i-1][j-1] + dp1[i-1][j-1]*pow(2,cl[i]-1)*co[i];
		}
	}
	double num=0,den=0;
	double ans;
	FOR(i,1,k+1)
	{
		if(i>=m)
		{
			num+=dp2[k][i];
			den+=dp1[k][i];
		}
	}
	if(m==0)
		++den;
	ans=(double)(num/den);
	/*FOR(i,1,k+1)
	{
		FOR(j,1,k+1)
		{
			printf("%lld ",dp1[i][j]);
		}
		printf("\n");
	}*/
	//printf("%lld %lld\n",num,den);
	printf("%.9lf\n",ans);
}

int main()
{
	int t;
	s1(t)
	while(t--)
	{
		scan();
		out();
	}
	return 0;
}
