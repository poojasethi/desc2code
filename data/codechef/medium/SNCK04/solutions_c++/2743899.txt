#include<iostream>
#include<math.h>
#include<algorithm>
#include<stdio.h>
#include<queue>
#include<string.h>
#include<set>
#include<map>
#include<vector>
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORL(i,a,b) for(int i=a;i<=b;i++)
#define FORI(i,a,b,inc) for(int i=a;i<b;i=i+inc)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define LL long long
#define MAX 1000010
#define INF 1000000010
#define MOD 1000000007
#define pb push_back
using namespace std;
bool prime[MAX];
LL ans[MAX];
int part[MAX][2];
int totient[MAX];
void sieve()
{
     FORL(i,2,1000)
     {
            if(prime[i] == false)
            {
                        FORI(j,i*i,MAX,i)
                        {
                             prime[j] = true;            
                             int p =j , q = 1;
                             while(p%i == 0)
                             {
                                   p = p/i;
                                   q = q*i;    
                             }
                             part[j][0] = p;
                             if(p == 1)
                                  part[j][1] = i;
                             else
                                 part[j][1] = q;
                               
                        }
                             
            }       
     }
     ans[0] = 0;
     ans[1] = 0;
     FOR(i,2,MAX)
     {
                 if(prime[i] == false)
                     totient[i] =  i-1;
                 else
                 {
                     if(part[i][0] == 1)
                     {
                       
                         totient[i] =  i - i/part[i][1];          
                     }
                     else
                     {
                          totient[i] = totient[part[i][0]]*totient[part[i][1]];
                     }
                         
                 }
                 ans[i] = ans[i-1] + (LL)totient[i];
     }
     
}
int main()
{
    sieve();
    int t;
    scanf("%d",&t);
    while(t--)
    {
          int n;
          scanf("%d",&n);
          printf("%lld\n",ans[n]);
              
    }
    return 0;
}
