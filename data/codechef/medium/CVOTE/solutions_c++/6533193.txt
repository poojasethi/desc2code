#include <bits/stdc++.h>
using namespace std;
int main()
{
	string s,chef,country;
	long m,n;
	map<string,pair<string,int> > participant;
	map<string,int> nation;
	scanf("%d %d",&n,&m);
	while(n--)
	{
		//cout<<"first loop";
		//cout<<"\nenter the name of chef\n";
		cin>>chef;
		//cout<<"\n enter the name of country\n";
		cin>>country;
		participant[chef].first=country;
		participant[chef].second=0;
		nation[country]=0;
		//cout<<"parti "<<chef<<":"<<participant[chef].first<<endl;
		//cout<<participant[chef].second<<endl;	
	}

    while(m--)
	{
		//cout<<"second loop";
		cin>>s;
		participant[s].second++;
		nation[participant[s].first]++;
		//cout<<"parti "<<s<<":"<<participant[s].first<<endl;
		//cout<<participant[s].second<<endl;
	} 
	map<string,int > :: iterator ctry=nation.begin();
	map<string,pair<string,int> > :: iterator chf=participant.begin();
	for(map<string,pair<string,int> > :: iterator it = participant.begin();it!=participant.end();++it)
	{
		if(it->second.second>chf->second.second)//find the one with greatest vote
		{
			chf=it;
		}
		/*else if(it->second.second=chf->second.second)//both have same votes
		{
			if(it->second.first<ctry->second.first)//comparing lexorgaphical order of countries
			{
				ctry=it;
			}
			//no need for doing same for chefs as keys in map are already on lexographical order
		}*/
	}
	for(map<string,int>::iterator it = nation.begin();it!=nation.end();++it) {
		if(it->second>ctry->second) {
			ctry=it;
		}//already in lexographical order
	}
	cout<<ctry->first<<endl;
	cout<<chf->first<<endl;
	return 0;
}