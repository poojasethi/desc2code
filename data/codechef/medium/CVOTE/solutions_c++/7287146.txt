#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<numeric>
#include<stack>
#include<queue>
#include<deque>
#include<bitset>
#include<cmath>
#include<list>
#include<set>
#include<map>
#define vi vector<int>
#define vvi vector< vi >
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end() 
#define sz(c) c.size()
#define tr(c,it)  for(typeof(c.begin()) it=c.begin();it!=c.end();it++)  
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define abs(a)  (a>=0?a:-a)
#define present(c,x) find(all(c),x)!=c.end()
#define cpresent(c,x) c.find(x)!=c.end()  
#define permute(c) next_permutation(all(c))
#define MAXN 10004
#define MAXM 100005
using namespace std;
int main(){
    int N,M,i,max=0,count=0;
    map<string,string>chef_cntry;
    map<string,int> chef_vote;
    map<string,int> cntry_vote;
	string chef,cntry,best_chef,best_cntry;
	cin>>N>>M;
	for(i=0;i<N;i++){
		cin>>chef>>cntry;
		chef_cntry[chef]=cntry;
	} 
	for(i=0;i<M;i++){
		cin>>chef;
		chef_vote[chef]++;
		cntry=chef_cntry[chef];
		cntry_vote[cntry]++;
	} 
	/*tr(chef_cntry,it)
	   cout<<it->first<<" "<<it->second<<endl;
	tr(chef_vote,it)
	   cout<<it->first<<" "<<it->second<<endl;
	tr(cntry_vote,it)
	   cout<<it->first<<" "<<it->second<<endl;*/
	tr(chef_vote,it){
		 if(chef_vote[it->first]>max){
		 	max=chef_vote[it->first];
		 	best_chef=it->first;
		 }
	}
	max=0;
	tr(cntry_vote,it){
		if(cntry_vote[it->first]>max){
			max=cntry_vote[it->first];
			best_cntry=it->first;
		}
	}         
    cout<<best_cntry<<endl<<best_chef;      
	return 0;
}