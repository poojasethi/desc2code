//
//  main.cpp
//  brilliant problems
//
//  Created by prerna kashyap on 07/07/14.
//  Copyright (c) 2014 procrastinator135. All rights reserved.
//

#include<iostream>
#include<vector>
#include<string>
#include<set>
#include<algorithm>
#include<map>
#include<ctype.h>
using namespace std;

#define tr(container, it) \
for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)

int main()
{
    int m,n,i,large;
    cin>>n>>m;
    string chef,country,votes,most;
    map<string,int> temp;//chefname-votes
    map<string,int> temp1;//countryname-votes
    map<string,string> temp2;//chefname-country
    
    map<string,int>::iterator it;
    vector< pair<string,int> >::iterator it1;
    
    for(i=0;i<n;i++)//enter chef-country pairs
    {
        cin>>chef>>country;
        temp2[chef]=country;
    }
    
    for(i=0;i<m;i++)//enter votes
    {
        cin>>votes;
        
        if((it=temp.find(votes))==temp.end())//create chef-votes pairs
        {
            temp[votes]=1;
        }
        else
        {
            (it->second)++;
        }
        
        country=temp2.find(votes)->second;
        if((it=temp1.find(country))==temp1.end())//create country-votes pairs
        {
            temp1[country]=1;
        }
        else
        {
            (it->second)++;
        }
    }
    
    large=0;
    most=temp1.begin()->first;
    tr(temp1,i)
    {
        if(i->second>large)
        {
            large=i->second;
            most=i->first;
        }
        else if(i->second==large)
        {
            if(i->first<most)
                most=i->first;
        }
    }
    cout<<most<<endl;
    
    large=0;
    most=temp.begin()->first;
    tr(temp,i)
    {
        if(i->second>large)
        {
            large=i->second;
            most=i->first;
        }
        else if(i->second==large)
        {
            if(i->first<most)
                most=i->first;
        }
    }
    cout<<most<<endl;
}











