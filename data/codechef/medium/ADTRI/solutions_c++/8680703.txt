#include<bits/stdc++.h>
using namespace std;
#define MAX 5000001
typedef long long int ll;
ll a[MAX];

inline long long int inp() //Fast input only for numbers upto 10^9
{
    register long long  r=0,c;   
    for(c=getchar_unlocked(); c<=32; c=getchar_unlocked());
    if(c=='-')
        return -inp();
    for(; c>32; r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
    return r;
}
 
int check(ll z)  // This is a function to check if the number if of the form 4k + 1
{
	if((z-1)%4==0)
		return 1; 
	else
		return 0;
}
 
void sieve() // This function marks all prime numbers till 5000000
{
	for(ll i=0;i<=MAX;i++)
		a[i]=1;
	a[0]=a[1]=0;
	for(ll i=2;i<=2238;i++) //Square root of 5000000 is around 2238
	{
		if(a[i]==1) //The function marks 1 as the value of a prime index and 0 for a non-prime
		{
			for(ll j=2;i*j<=MAX;j++)
				a[i*j]=0;
		}
	}
}
 
int main()
{
	sieve();
	for(ll i=2;i<MAX;i++) //This loop marks all the prime numbers of the 4k + 1 with -1 and also all their multiples less   
	{						//than 5000000.
		if(a[i]==1)
		{
			if(check(i)==1)
			{
				for(ll j=2;i*j<MAX;j++)
					a[i*j]=-1;
				a[i]=-1;
			}
		}
	}
 
	ll t=inp();
	while(t--)
	{
		ll n=inp();
		if(a[n]==-1)
			printf("YES\n");
		else
			printf("NO\n");
	}
} 