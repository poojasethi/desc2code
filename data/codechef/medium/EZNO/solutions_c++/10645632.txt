#include <iostream>
#include <vector>


using namespace std;

typedef long long int lint;

const int p = 1000000007;

class Solver
{
public:
    Solver(int _b, int _d)
        : b(_b)
        , d(_d)
    {
    }
    
    int solve()
    {
        init();
        for (int k = 2; k <= d; ++k)
        {
            step(k);
            if (nums.empty())
                break;
        }
        return nums.size() % p;
    }
    
private:
    void  init()
    {
        for (int i = 1; i < b; ++i)
            nums.push_back(i);
    }
    
    void step(int k)
    {
        vector<lint> newNums; 
        for (vector<lint>::iterator it = nums.begin(); it != nums.end(); ++it)
        {
            for (int i = 0; i < b; ++i)
            {
                lint n = (b * (*it) + i) % 5342931457063200LL;
                if (n % k == 0)
                    newNums.push_back(n);
            }
        }
        nums.swap(newNums);
    }

    int b, d;
    vector<lint> nums;
};

/*int main()
{
    ios_base::sync_with_stdio(0);
    int T; cin >> T;
    for (int i = 0; i < T; ++i)
    {
        int b, d;
        cin >> b >> d;
        
        cout << s.solve() << endl;
    }
    return 0;
}*/

const int B = 16;
const int D = 50;

/*int main()
{
    cout << "{\n";
    for (int b = 0; b <= 16; ++b)
    {
        cout << "    { ";
        for (int d = 0; d <= D; ++d)
        {
            Solver s(b,d);
            cout <<  s.solve() << (d < D ? ", " : " }");
        } 
        cout << (b < B ? ",\n" : "\n");
    }
    cout << "}\n";
}*/

const int solutions[B+1][D+1] =
{
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 2, 2, 3, 3, 3, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 3, 3, 6, 8, 8, 7, 4, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 4, 4, 10, 17, 21, 21, 21, 13, 10, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 5, 5, 15, 30, 45, 54, 54, 49, 46, 21, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 6, 6, 21, 49, 87, 121, 145, 145, 145, 121, 92, 56, 33, 20, 14, 7, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 7, 7, 28, 74, 148, 238, 324, 367, 367, 320, 258, 188, 122, 69, 37, 12, 6, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 8, 8, 36, 108, 252, 454, 706, 898, 1039, 1039, 1039, 869, 674, 473, 309, 216, 126, 66, 34, 18, 8, 5, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 9, 9, 45, 150, 375, 750, 1200, 1713, 2227, 2492, 2492, 2225, 2041, 1575, 1132, 770, 571, 335, 180, 90, 44, 18, 12, 6, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 10, 10, 55, 202, 560, 1232, 2278, 3574, 4959, 6074, 6709, 6709, 6709, 5703, 4493, 3294, 2217, 1468, 872, 514, 282, 143, 65, 28, 14, 7, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 11, 11, 66, 264, 792, 1900, 3800, 6514, 9772, 13030, 15471, 16799, 16799, 15652, 13418, 10748, 8079, 5688, 3774, 2381, 1435, 817, 445, 226, 108, 45, 20, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 12, 12, 78, 338, 1105, 2874, 6278, 11660, 19068, 27607, 36136, 42702, 46610, 46610, 46610, 41294, 33796, 25982, 18892, 13103, 8577, 5356, 3162, 1743, 944, 470, 250, 126, 63, 25, 10, 4, 2, 2, 2, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 13, 13, 91, 424, 1484, 4154, 9707, 19414, 29121, 42063, 59159, 75615, 88747, 95597, 95597, 89036, 80204, 65867, 51176, 37661, 26428, 17759, 11353, 6821, 4096, 2220, 1165, 605, 310, 139, 69, 27, 10, 6, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 14, 14, 105, 525, 1995, 5985, 15960, 34199, 64409, 107154, 171563, 233954, 296371, 342124, 368134, 368134, 368134, 324876, 281553, 222037, 171005, 122130, 84431, 54937, 34827, 20907, 12333, 7023, 3880, 2057, 1167, 564, 260, 129, 62, 20, 7, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    { 15, 15, 120, 640, 2560, 8192, 21888, 50030, 100060, 178236, 285074, 414662, 554018, 681778, 779164, 831886, 831886, 782347, 701717, 591178, 473607, 361604, 263114, 183069, 121870, 78013, 48065, 28497, 16204, 8852, 4742, 2457, 1216, 565, 259, 124, 46, 21, 10, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}
};

int main()
{
    ios_base::sync_with_stdio(0);
    int T; cin >> T;
    for (int i = 0; i < T; ++i)
    {
        int b, d;
        cin >> b >> d;
        if (d > D)
            cout << 0 << endl;
        else
            cout << solutions[b][d] << endl;
    }
    return 0;
}

