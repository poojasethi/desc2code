#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<time.h>
#include<algorithm>
#include<vector>
#include<map>
#include<iostream>
#include<functional>
using namespace std;

#define gc getchar_unlocked
#define mod 1000000007
typedef unsigned long long ull;

void scanint(int &x);
void scanlong(ull &x);
ull modExp(ull base,int exp, int modVal);

int main()
{
    int noOfTestCase;
    scanint(noOfTestCase);
    for(int i=0;i<noOfTestCase;++i)
    {
        int nVal;
        scanint(nVal);
        if(nVal%2 == 0)
        {
            ull res= (3*modExp(2,nVal/2,mod))%mod-2;
            printf("%lld\n",res);
        }
        else
        {
            ull res = modExp(2,2+(nVal-1)/2,mod)-2;
            printf("%lld\n",res);
        }
    }
}

void scanint(int &x)
{
    int flag=0;
    register int c = gc();
    if(c == '-') flag=1;
    x = 0;
    for(; (c<48 || c>57); c = gc());
    for(; c>47 && c<58; c = gc())
    {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(flag == 1)x=-x;
}

void scanlong(ull &x)
{
    int flag=0;
    register int c = gc();
    if(c == '-') flag=1;
    x = 0;
    for(; (c<48 || c>57); c = gc());
    for(; c>47 && c<58; c = gc())
    {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(flag == 1)x=-x;
}

ull modExp(ull base,int exp,int modVal)
{
    if(exp == 0) return 1;
    ull z=modExp(base,(int)floor((double)exp/2),modVal);
    ull zpow2 = z*z;
    if(exp%2 == 0)
        return zpow2%modVal;
    else
        return (base*zpow2)%modVal;
}