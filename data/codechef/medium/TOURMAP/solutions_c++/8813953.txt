#include <iostream>
#include <cstdio>
#include <algorithm>
#include <map>
#include <math.h>
#include <cstring>
using namespace std;
#define max 5555
char a[max][60];// TO READ FROM CITIES
char b[max][60];// TO READ TO CITIES
int c[max];
string A,B;
int C;
map <string,int>citymap;// to map cities with unique integers [marsaw]=1[kiev]=2 [madrid]=3 [paris]=4 [munich]=5
map <string,int>fromcity;// to map from cities Warsaw =1 Madrid =2 Munich =3 Paris=4
int setone[max];
 int sum;
int main()
{
   int t;// test cases
   scanf("%d",&t);
   while(t--){
    int n;//
     sum=0;// to count money
    scanf("%d",&n);
    int idx=0;
    citymap.clear();
    fromcity.clear();
    memset(setone,0,sizeof(setone));
    for(int i=0;i<n-1;i++)
    {
     scanf("%s %s %d$",&a[i],&b[i],&c[i]);
     A=a[i];B=b[i];C=c[i];
     if(citymap.find(A)==citymap.end())//
        citymap[A]=idx++;
     if(citymap.find(B)==citymap.end())
     citymap[B]=idx++;
     fromcity[A]=i;// mapping from cities
       sum+=C;
       setone[citymap[B]]++;
    }
    // iterator to travel
    map<string,int>::iterator it;
    for(it=citymap.begin();it!=citymap.end();it++){
        if(setone[it->second]==0){
           A=it->first; // now a is our starting point
           break;
        }
    }
    while(fromcity.find(A)!=fromcity.end()){
        int idx=fromcity[A];
        printf("%s %s %d$\n", a[idx], b[idx], c[idx]);
        A=b[idx];
    }
    printf("%d$\n",sum);
   }

    return 0;
}
