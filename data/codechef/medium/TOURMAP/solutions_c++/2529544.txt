//
//  main.cpp
//  TOURMAP
//
//  Created by Prakhar Jain on 14/08/13.
//  Copyright (c) 2013 Prakhar Jain. All rights reserved.
//

#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <cctype>
#include <climits>
#include <ctime>
#include <limits>
#include <vector>
#include <set>
#include <stack>
#include <queue>
#include <string>
#include <map>
#include <list>
#include <deque>
#include <algorithm>

#define LL  long long
#define MOD 1000000007

using namespace std;

struct card {
    string c1, c2;
    int cost;
} cards[5555];
int main(int argc, const char * argv[])
{
    int T, N;
    scanf("%d", &T);
    while (T--) {
        scanf("%d", &N);
        map<string, int> mymap;
        char city1[55], city2[55];
        int cost;
        bool visited[N];
        bool isFirst[N];
        int cardNo[N];
        for (int i = 0; i < N; i++) {
            visited[i] = false;
            isFirst[i] = false;
            cardNo[i] = -1;
        }
        int totalCost = 0;
        for (int i = 0, j = 0; i < N-1; i++) {
            scanf("%s %s %d$", city1, city2, &cost);
            string s1 = city1;
            string s2 = city2;
            cards[i].c1 = s1;
            cards[i].c2 = s2;
            cards[i].cost = cost;
            totalCost += cost;
            map<string, int> :: iterator it = mymap.find(s1);
            if (it == mymap.end()) {
                cardNo[j] = i;
                isFirst[j] = true;
                mymap[s1] = j++;
            }
            else {
                visited[it->second] = true;
                if (cardNo[it->second] == -1)
                    cardNo[it->second] = i;
            }
            it = mymap.find(s2);
            if (mymap.find(s2) == mymap.end()) {
                mymap[s2] = j++;
            }
            else
                visited[it->second] = true;
        }
        int start;
        for (int i = 0; ; i++) {
            if (!visited[i] && isFirst[i]) {
                start = i;
                break;
            }
        }
        int index = cardNo[start];
        for (int i = 0; i < N-1; i++) {
            printf("%s %s %d$\n", cards[index].c1.c_str(), cards[index].c2.c_str(), cards[index].cost);
            index = cardNo[mymap.find(cards[index].c2)->second];
        }
        printf("%d$\n", totalCost);
    }
    return 0;
}