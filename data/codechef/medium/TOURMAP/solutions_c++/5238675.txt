#include<bits/stdc++.h>

using namespace std;

map< pair<string,string> , int > travel_cost;
map<string,int> indegree;
map<string,int> outdegree;
map<string,string> path;


int main()
{
int T,N,i,final_cost;
scanf("%d",&T);
char x[55],y[55],z[55];
while(T--)
{

cin>>N;
travel_cost.clear();
indegree.clear();
outdegree.clear();
path.clear();


for(i=0,final_cost=0;i<N-1;i++)
{
scanf("%s%s%s",x,y,z);
int val=0;
for(int j=0;z[j]!='$';j++)
val=val*10 + z[j]-'0';
final_cost+=val;

// travel cost from x to y is 'val'
travel_cost[make_pair(x,y)]=val;
indegree[y]++;
outdegree[x]++;
path[x]=y;	//next in path from x is y}
}


map<string,int>::iterator it;

//indegree=0
//outdegree=1

//traverse all outgoing edges
for(it=indegree.begin();it!=indegree.end();it++)
outdegree.erase(it->first);

it=outdegree.begin();	//only one entry remaining
//cout<<it->first<<endl;

string source=it->first;

for(i=0;i<N-1;i++)
{
cout<<source<<" "<<path[source]<<" "<<travel_cost[make_pair(source,path[source])]<<"$"<<endl;
source=path[source];
}
cout<<final_cost<<"$"<<endl;

}
return 0;
}
