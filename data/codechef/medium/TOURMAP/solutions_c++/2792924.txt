#include<cstdio>
#include<iostream>
#include<map>
#include<list>
#include<vector>
#include<algorithm>
#define white 0
#define gray 1
#define black 2
#define tr(c,it) for(typeof(c.begin()) it=c.begin();it!=c.end();++it)
using namespace std;
typedef pair<int,int> ii;
typedef pair<string,string> ss;
vector<ii> ft;
list<ii> *adj;
int dt[10000],color[10000];
int tim;
void dfs(int source) {
	color[source]=gray;
	dt[source]=tim=tim+1;
	tr(adj[source],it) {
		if(color[it->first]==white)
			dfs(it->first);
	}
	tim=tim+1;
	ft.push_back(ii(tim,source));
	color[source]=black;
}		
bool cmp(ii a,ii b){
	return a.first>b.first;
} 
main() {
	int t;
	scanf("%d",&t);
	while(t--) {
		int n,c;
		tim=0;
		scanf("%d",&n);
		adj=new list<ii>[n+1];
		map<string,int> m;
		map<int,string> r;
		map<ss,int> cost;	
		string s1,s2;
		int k=1,sum=0;
		for(int i=1;i<n;++i) {
			cin>>s1>>s2;
			scanf("%d$",&c);
//			cout<<s1<<s2<<c;
			if(!m[s1]) {
				m[s1]=k++;
				r[k-1]=s1;
//				cout<<m[s1];
			}
			if(!m[s2]) {
				m[s2]=k++;
				r[k-1]=s2;
//				cout<<m[s2];
			}
			adj[m[s1]].push_back(ii(m[s2],c));
			cost[ss(s1,s2)]=c;
			sum+=c;
		}
//		tr(m,it) {
//			cout<<"here";
//			cout<<it->first<<","<<it->second<<"\t";
//		}	
/*		for(int i=1;i<=n;++i) {
			tr(adj[i],it) {
				cout<<it->first<<","<<it->second<<"\t";
			}
			cout<<endl;
		}*/
		for(int i=1;i<=n;++i) {
			if(color[i]==white) {
				dfs(i);
//				cout<<"yo ";
			}
		}
		sort(ft.begin(),ft.end(),cmp);
		for(int i=0;i<n-1;++i) {
			cout<<r[ft[i].second]<<" "<<r[ft[i+1].second]<<" "<<cost[ss(r[ft[i].second],r[ft[i+1].second])]<<"$"<<endl;
		}
		cout<<sum<<"$\n";
		for(int i=0;i<=n;++i) {
                        color[i]=white;
                        dt[i]=0;
                        ft[i].first=0;
                        ft[i].second=0;
                }

	}	
	return 0;
}
			
