//#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>

#define ll long long
#define fo(i,in,end) for (i=in;i<end;i++)
#define in(x) scanf("%d",&x)
#define inp(x,y) scanf("%d%d",&x,&y)
#define vi vector <int>
#define pb push_back 
using namespace std;

char str[100005],s[11]="ABCDEABCDE";
vi v[10];
queue <int> q;
int w[100005],arr[5][2]={0,5,1,6,2,7,3,8,4,9},l;

void pre()
{
	v[0].pb(1);v[0].pb(4);v[0].pb(5);
	v[1].pb(0);v[1].pb(2);v[1].pb(6);
	v[2].pb(1);v[2].pb(3);v[2].pb(7);
	v[3].pb(2);v[3].pb(4);v[3].pb(8);
	v[4].pb(0);v[4].pb(3);v[4].pb(9);
	v[5].pb(0);v[5].pb(7);v[5].pb(8);
	v[6].pb(1);v[6].pb(8);v[6].pb(9);
	v[7].pb(2);v[7].pb(5);v[7].pb(9);
	v[8].pb(3);v[8].pb(5);v[8].pb(6);
	v[9].pb(4);v[9].pb(6);v[9].pb(7);
}

int bfs(int x)
{
	q.push(x);w[0]=x;int l1=1;
	int ver,n,i;
	if (l1==l)
	return 1;
	while (!q.empty())
	{
		ver=q.front();
		q.pop();
		n=v[ver].size();
		for (i=0;i<n;i++)
		{
			if (s[v[ver][i]]==str[l1])
			{
				w[l1]=v[ver][i];
				l1++;
				if (l1==l)
				return 1;
				q.push(v[ver][i]);
				break;
			}
		}
		if (i==n)
		return 0;
	}
}

int main()
{
	pre();
	int t;
	in(t);
	getchar();
	while (t--)
	{
		int ans;
		gets(str);
		l=strlen(str);
		while(!q.empty())
		q.pop();
		ans=bfs(arr[str[0]-'A'][0]);
		while(!q.empty())
		q.pop();
		if (ans==0)
		ans=bfs(arr[str[0]-'A'][1]);
		if (ans==0)
		printf("-1\n");
		else
		{
			for (int i=0;i<l;i++)
			{
				printf("%d",w[i]);
			}
			printf("\n");
		}
	}
	return 0;
}



