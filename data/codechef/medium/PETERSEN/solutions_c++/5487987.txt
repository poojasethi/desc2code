#include <iostream>
#include <cstdio>
#include <algorithm>
#include <map>
#include <cstring>
#include <vector>
#include <string>
#include <queue>

#define pb push_back

using namespace std;
int tt;
string s;
int c[2];
bool G[10][10];
string bfs(int x, string s)
{
    int duzina = s.length();
    int curr = x;
    string ret = "";
    ret += x + '0';
    for (int i = 1; i < duzina; i++)
    {
        int tmp1 = s[i] - c[0];
        int tmp2 = s[i] - c[1];
        if (G[curr][tmp1])
        {
            curr = tmp1;
            ret += tmp1+'0';
        }
        else if (G[curr][tmp2])
        {
            curr = tmp2;
            ret += tmp2+'0';
        }
        else return "nema";
    }
    return ret;
}
int main()
{
    c[1] = 60; c[0] = 65;
    G[0][1] = 1; G[1][2] = 1; G[2][3] = 1; G[3][4] = 1; G[4][0] = 1;
    G[0][5] = 1; G[1][6] = 1; G[2][7] = 1; G[3][8] = 1; G[4][9] = 1;
    G[5][7] = 1; G[5][8] = 1; G[9][6] = 1; G[9][7] = 1; G[8][6] = 1;
    G[1][0] = 1; G[2][1] = 1; G[3][2] = 1; G[4][3] = 1; G[0][4] = 1;
    G[5][0] = 1; G[6][1] = 1; G[7][2] = 1; G[8][3] = 1; G[9][4] = 1;
    G[7][5] = 1; G[8][5] = 1; G[6][9] = 1; G[7][9] = 1; G[6][8] = 1;

    scanf("%d", &tt);
    while (tt--)
    {
        cin>>s;
        int len = s.length();
        if (len == 0) printf("-1\n");
        else
        {
            int c1 = s[0] - c[0];
            int c2 = s[0] - c[1];
            string sol1, sol2;
            sol1=sol2="9999999";
            if (bfs(c1, s) != "nema") sol1 = bfs(c1, s);
            if (bfs(c2, s) != "nema") sol2 = bfs(c2, s);
            if (sol1 == sol2 && sol2 == "9999999") printf("-1\n");
            else
            {
                string sol = min(sol1, sol2);
                cout<<sol<<endl;
            }
        }
    }
    return 0;
}
