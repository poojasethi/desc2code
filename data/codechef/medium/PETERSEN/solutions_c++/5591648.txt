#include <iostream>
using namespace std;

int adj[10][10] = { {0,1,0,0,1,1,0,0,0,0},
    {1,0,1,0,0,0,1,0,0,0},
    {0,1,0,1,0,0,0,1,0,0},
    {0,0,1,0,1,0,0,0,1,0},
    {1,0,0,1,0,0,0,0,0,1},
    {1,0,0,0,0,0,0,1,1,0},
    {0,1,0,0,0,0,0,0,1,1},
    {0,0,1,0,0,1,0,0,0,1},
    {0,0,0,1,0,1,1,0,0,0},
    {0,0,0,0,1,0,1,1,0,0}
};
char cache[5][2] = {{0,5},{1,6},{2,7},{3,8},{4,9}};

string input;
int output[100001], l, l1;

int bfs(int root)
{
    output[0] = root;

    int i = 1, j, cur = root, next;
    bool flag;
    while(i<l)
    {
        next = input[i]-'A';
        flag = false;
        for(j=0; j<2; ++j)
        {
            if (adj[cur][cache[next][j]])
            {
                output[i] = cache[next][j];
                flag = true;
            }
        }
        if (!flag) break;
        cur = output[i];
        ++i;
    }
    return i;
}

int main()
{
    int t;
    bool flag;
    cin >> t;
    while(t--)
    {
        cin >> input;
        l = input.length();

        flag = false;
        for(int j=0; j<2; ++j)
        {
            int next = cache[input[0]-'A'][j];
            if (bfs(next)==l)
            {
                flag = true;
                break;
            }
        }

        if (flag)
        {
            for(int i=0; i<l; ++i) cout << output[i];
            cout << endl;
        }
        else cout << -1 << endl;
    }
    return 0;
}
