#include<cstdio>
#include<iostream>
#include<cstring>
#include<string>

using namespace std;

char val(int in)
{
	return in%5+'A';
}

int bfs(string & out,int graph[10][10],string s,int ind,int node)
{
	out+='0'+node;
	int i;
	while(ind!=s.size())
	{
		for(i=0;i<10;i++)
			if(graph[node][i] && val(i)==s[ind])
			{
				ind++;
				node=i;
				out+='0'+node;
				break;
			}
		if(i==10)
			return 0;
	}
	return 1;
}

void Build(int graph[][10])
{
	int i;
	for(i=0;i<5;i++)
	{
		graph[i][(i+1)%5]=graph[(i+1)%5][i]=1;
		graph[i][i+5]=graph[i+5][i]=1;
	}
	for(i=5;i<7;i++)
	{
		graph[i][i+2]=graph[i+2][i]=1;
		graph[i][i+3]=graph[i+3][i]=1;
	}
	graph[i][i+2]=graph[i+2][i]=1;

}

int main()
{
	int graph[10][10];
	memset(graph,0,sizeof(graph));
	int i;
	Build(graph);
	int t;
	cin>>t;
	string s="";
	string out="";
	while(t--)
	{
		cin>>s;
		out="";
		for(i=0;i<10;i++)
			if(val(i)==s[0] && bfs(out,graph,s,1,i))
				break;
			else
				out="";
		if(i==10)
			cout<<-1<<endl;
		else
			cout<<out<<endl;
	}
	return 0;
}

