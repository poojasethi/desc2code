#include <cstdio>
#include <cstring>
#define LMAX 111111
#define N 10
char L[N + 1] = "ABCDEABCDE";
char A[N][N] = {
{0, 1, 0, 0, 1, 1, 0, 0, 0, 0},
{1, 0, 1, 0, 0, 0, 1, 0, 0, 0},
{0, 1, 0, 1, 0, 0, 0, 1, 0, 0},
{0, 0, 1, 0, 1, 0, 0, 0, 1, 0},
{1, 0, 0, 1, 0, 0, 0, 0, 0, 1},
{1, 0, 0, 0, 0, 0, 0, 1, 1, 0},
{0, 1, 0, 0, 0, 0, 0, 0, 1, 1},
{0, 0, 1, 0, 0, 1, 0, 0, 0, 1},
{0, 0, 0, 1, 0, 1, 1, 0, 0, 0},
{0, 0, 0, 0, 1, 0, 1, 1, 0, 0},
};
int next[N][5];
void PreprocessGraph()
{
	int i, j;
	for (i = 0; i < N; i++)
    {
		for (j = 0; j < 5; j++)
			next[i][j] = -1;
		for (j = 0; j < N; j++)
			if (A[i][j])
				next[i][L[j] - 'A'] = j;
	}
}
char S[LMAX];
int v[LMAX];
int len, i, s;

int main()
{
	PreprocessGraph();
	int T;
	scanf("%d", &T);
	while (T--)
    {
		scanf("%s", S + 1);
		len = strlen(S + 1);
		for (s = 0; s < N; s++)
        {
			if (L[s] != S[1])
                continue;
			v[1] = s;
			for (i = 2; i <= len; i++)
			{
				if (next[v[i - 1]][S[i] - 'A'] < 0)
                    break;
				v[i] = next[v[i - 1]][S[i] - 'A'];
			}
			if (i > len)
                break;
		}
		if (s < N)
		{
			for (i = 1; i <= len; i++)
				printf("%d", v[i]);
			printf("\n");
		}
		else
			printf("-1\n");
	}
	return 0;
}
