#include <iostream>
#include <vector>
#include <cstdio>
#include <memory.h>
#include <string>
#include <cstring>
using namespace std;
 
vector<int> *adj;
char c[10];
bool *marked;
int table[10][10];
char* a;
int len;
void init()
{
	c[0]= 'A';
	c[1]= 'B';
	c[2]= 'C';
	c[3]= 'D';
	c[4]= 'E';
	c[5]= 'A';
	c[6]= 'B';
	c[7]= 'C';
	c[8]= 'D';
	c[9]= 'E';
	
	table[0][1]=table[0][4]=table[0][5]=1;
	table[1][6]=table[1][2]=table[1][0]=1;
	table[2][1]=table[2][3]=table[2][7]=1;
	table[3][8]=table[3][4]=table[3][2]=1;
	table[4][0]=table[4][3]=table[4][9]=1;
	table[5][7]=table[5][8]=table[5][0]=1;
	table[6][1]=table[6][8]=table[6][9]=1;
	table[7][9]=table[7][5]=table[7][2]=1;
	table[8][3]=table[8][5]=table[8][6]=1;
	table[9][7]=table[9][6]=table[9][4]=1;
}
int dfs(int k,int i,int *w)
{
	if(i==len)
		return len;
	if(c[k]!=a[i])
		return -1;
	w[i]=k;
	int min=100005,x;
	for(int j=0;j<adj[k].size();j++)
	{	
			
			x=dfs(adj[k][j],i+1,w);
			if(x!=-1)
			{
				if(x<min)
					min=x;
			}
		
	}	
	if(min==100005)
		return -1;
	else
		return min;
}
 
int main() {
	init();
	cout.sync_with_stdio(false);
	
	cin.sync_with_stdio(false);
	int n,m;
	n=10;
	adj=new vector<int>[n]; 
	//marked=new bool[n];
	//memset(marked,0,n);
 	
	int x,y;
	for(int i=0;i<10;i++)
	{
		for(int j=0;j<10;j++)
		{
			if(table[i][j])
			{
				adj[i].push_back(j);
			}
		}
	}
	int t;
	cin>>t;
	
	while(t--)
	{
		string s;	
		cin>>s;
		len=s.size();
		a=new char[len+1];
		a[len]=0;
		int *w1=new int[len];
		int *w2=new int[len];
		
		memcpy(a,s.c_str(),s.size());
		char first=a[0];
				int ans1=dfs(first-'A',0,w1);
				if(ans1!=-1)
				{
					for(int i=0;i<len;i++)
						cout<<w1[i];
					cout<<"\n";
					continue;
				}
				int ans2=dfs(first-'A'+5,0,w2);			
				if(ans2!=-1)
				{
					for(int i=0;i<len;i++)
						cout<<w2[i];
					cout<<"\n";
					continue;
				}	
			    cout<<"-1\n";
		
	}
	return 0;
}    