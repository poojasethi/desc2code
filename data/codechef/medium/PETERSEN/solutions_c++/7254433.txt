#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <sstream>

using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define SZ(x) ((int)(x).size())
#define FORV(i,x) FOR(i,0,SZ(x))
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define MP make_pair
#define PB push_back
#define ALL(x) x.begin(),x.end()
#define ULL unsigned long long
#define LL long long
#define mset(x,v) memset(x,v,sizeof x)
#define F first
#define S second

int main()
{
	ios::sync_with_stdio(false);
	bool g[12][12];
	mset(g,0);
	g[0][1]=g[0][4]=g[0][5]=1;
	FOR(i,1,4) g[i][i-1]=g[i][i+1]=g[i][i+5]=1;
	g[4][0]=g[4][3]=g[4][9]=1;
	g[5][8]=g[5][7]=g[5][0]=1;
	g[6][9]=g[6][8]=g[6][1]=1;
	g[7][5]=g[7][9]=g[7][2]=1;
	g[8][3]=g[8][5]=g[8][6]=1;
	g[9][4]=g[9][6]=g[9][7]=1;
	vector<int> v;
	int t;
	cin>>t;
	while(t--)
	{
		v.clear();
		string s;
		cin>>s;
		int num=(int) (s[0]-'A'),num1;
		bool f=1;
		FOR(i,1,SZ(s))
		{
			num1=(int)(s[i]-'A');
			if(g[num][num1] || g[num][num1+5])
			{
				v.PB(num);
				num=g[num][num1]?num1:num1+5;
			}
			else
			{
				f=0;
				break;
			}
		}
		if(f) {
			v.PB(num);
			FORV(i,v) cout<<v[i];cout<<endl;
			continue;
		}
		v.clear();
		f=1;
		num=(int)(s[0]-'A');
		num+=5;
		FOR(i,1,SZ(s))
		{
			num1=(int)(s[i]-'A');
			if(g[num][num1] || g[num][num1+5])
			{
				v.PB(num);
				num=g[num][num1]?num1:num1+5;
			}
			else
			{
				f=0;
				break;
			}
		}
		if(f) {
			v.PB(num);
			FORV(i,v) cout<<v[i];cout<<endl;
		}
		else {
			cout<<"-1"<<endl;
		}
	}
	return 0;
}
