

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <math.h>
#include <assert.h>

int DEBUG = 0;

int Min(int a, int b) {
  return (a < b ? a : b);
}
int Max(int a, int b) {
  return (a > b ? a : b);
}
int Abs(int a) {
  return (a >= 0 ? a : -a);
}

void print_vec(int *vec, int n) {
  for(int i=0; i<n; i++) {
    if(i>0) printf(" ");
    printf("%d", vec[i]);
  }
  printf("\n");
}

void swap2(char *str, int i, int n, char c, int &nswap) {
  if(n-1-i >= i) {
    if(str[i] != c)     { nswap++; str[i]     = c; } 
    if( (n-1-i > i) ) {
      if(str[n-1-i] != c) { nswap++; str[n-1-i] = c; } 
    }
  }
}
void swap1(char *str, int i, int n, int &nswap) {
  if(n-1-i > i) {
    if(str[i] != str[n-1-i]) {
      nswap++;
      str[i] = str[i] < str[n-1-i] ? str[i] : str[n-1-i];
      str[n-1-i] = str[i];
    }
  }
}

void find_lucky(char *str0) {
  char minstr[1001];
  int minswap=1001;
  char str[1001];
  int n = strlen(str0);
  int lasti = (n%2 == 0) ? (n/2-5) : (n/2-4);
  if(lasti<0) {
    printf("unlucky\n"); 
    return;
  }
  //printf("n= %d lasti= %d str0= %s\n", n, lasti, str0);
  for(int i=0; i<=lasti; i++) {
    strcpy(str, str0);
    int nswap=0;
    swap2(str, i,   n, 'l', nswap);
    swap2(str, i+1, n, 'u', nswap);
    swap2(str, i+2, n, 'c', nswap);
    swap2(str, i+3, n, 'k', nswap);
    swap2(str, i+4, n, 'y', nswap);
    for(int j=0; j<=lasti+4; j++) {
      if(j<i || j>(i+4)) {
	swap1(str, j, n, nswap);
      }
    }
    if(DEBUG) printf("i= %d nswap= %d luckypal: <%s>\n", i, nswap, str);
    if(minswap > nswap || (minswap == nswap && strcmp(str, minstr) < 0)) {
      minswap = nswap;
      strcpy(minstr, str);
    }
  }
  for(int i=0; i<=lasti; i++) {
    strcpy(str, str0);
    int nswap=0;
    swap2(str, i,   n, 'y', nswap);
    swap2(str, i+1, n, 'k', nswap);
    swap2(str, i+2, n, 'c', nswap);
    swap2(str, i+3, n, 'u', nswap);
    swap2(str, i+4, n, 'l', nswap);
    for(int j=0; j<=lasti+4; j++) {
      if(j<i || j>(i+4)) {
	swap1(str, j, n, nswap);
      }
    }
    if(DEBUG) printf("i= %d nswap= %d luckypal: <%s>\n", i, nswap, str);
    if(minswap > nswap || (minswap == nswap && strcmp(str, minstr) < 0)) {
      minswap = nswap;
      strcpy(minstr, str);
    }
  }
  if(DEBUG) printf("minswap= %d luckypal: <%s>\n", minswap, minstr);
  printf("%s %d\n", minstr, minswap);
}

main(int argc, char **argv) {
  if(argc>=2) {
    DEBUG = atoi(argv[1]);
  }

  int T; // <= 100
  scanf("%d", &T);
  char str[1001];
  for(int t=0; t<T; t++) {
    scanf("%s", str);
    //if(DEBUG) printf("<%s>\n", str);
    find_lucky(str);
  }
  exit(0);
}

// g++ LUCKPAL.cpp; cat LUCKPAL.in | ./a.out 1


