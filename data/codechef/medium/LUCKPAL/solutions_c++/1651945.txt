#include <cstdio>
#include <cstring>

#define min(a,b) ((a<=b) ?a:b )

bool isSmaller(char *a, char *b)
{
    int i=0;
    while(a[i]!='\0') {
        if(a[i] != b[i]) return a[i] < b[i];
        i++;
    }
    return false;
}

int main()
{
    int t;
    scanf("%d", &t);

    while(t--) {
        char inp[1010];
        scanf("%s", inp);
        int len = 0;
        while(inp[len] != '\0') len++;
        if(len < 9) {
            printf("unlucky\n");
            continue;
        }

        char lucky[] = "lucky";
        int steps=1010;
        char luckyStr[1010];

        for(int i=0; i < len-4; i++) {
            if(i < len/2 && i+4 > (len-1)/2) continue;

            char tmpStr[1010]; strcpy(tmpStr, inp);
            int tmpSteps = 0;
            
            //inserting lucky
            for(int j=0; j<5; j++) {
                if(tmpStr[i+j] != lucky[j]) tmpSteps++;
                tmpStr[i+j] = lucky[j];
                if(tmpStr[i+j] != tmpStr[len-i-j-1]) tmpSteps++;
                tmpStr[len-i-j-1] = lucky[j];
            }

            //making palindrome
            for(int j=0; j < len/2; j++) {
                if(tmpStr[j] != tmpStr[len-j-1]) tmpSteps++;
                char tmp = min(tmpStr[len-j-1], tmpStr[j]);
                tmpStr[j] = tmpStr[len-j-1] = tmp;            
            }

            if( (tmpSteps < steps) || (tmpSteps == steps && isSmaller(tmpStr, luckyStr)) ) {
                strcpy(luckyStr, tmpStr);
                steps = tmpSteps;
            }
        }

        printf("%s %d\n", luckyStr, steps);
    }
}
