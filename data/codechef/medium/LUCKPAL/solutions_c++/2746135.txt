#include<stdio.h>
#include<string.h>
int swap(char ar[1000],int st,int len);
void check(char a[1000],int st1,char b[1000],int len,int st2);
 
int sum,carr_sum;
int sum_pres,min_st,min_sum;
char min[1000];
char b[1000];
int main()
{
    int ctr;
    int len;
    int left,middle,right;
    left=0;middle=0;right=0;
    char a[100][1000];
    int t;
    char ch;
    scanf("%d%c",&t);
    int i;
    for(i=0;i<t;i++)
    {
        sum_pres=0;
        scanf("%s",a[i]);
        len=strlen(a[i]);
         if(len<9)
        {
            printf("unlucky\n");
            continue;
        }
        strcpy(b,a[i]);
        if(a[i][len-1]!='l')
        {
            sum_pres++;
 
        }
        if(a[i][0]!='l')
        sum_pres++;
        b[0]='l';
        b[len-1]='l';
        if(a[i][len-2]!='u')
        {
            sum_pres++;
        }
        if(a[i][1]!='u')
            sum_pres++;
        b[1]='u';
        b[len-2]='u';
        if(a[i][len-3]!='c')
        {
            sum_pres++;
        }
        if(a[i][2]!='c')
            sum_pres++;
        b[2]='c';
        b[len-3]='c';
        if(a[i][len-4]!='k')
        {
            sum_pres++;
        }
        if(a[i][3]!='k')
            sum_pres++;
        b[3]='k';
        b[len-4]='k';
        if(a[i][len-5]!='y')
        {
            sum_pres++;
        }
        if(a[i][4]!='y' && len/2!=4)
            sum_pres++;
        b[4]='y';
        b[len-5]='y';
        swap(b,5,len);
        sum_pres+=sum;
        middle=carr_sum;
        left=0;
        right=0;
        min_st=0;
        min_sum=sum_pres;
        strcpy(min,b);
        for(ctr=1;ctr<=(len+1)/2-5;ctr++)
        {
            sum_pres=0;
            sum_pres+=left;
             if(a[i][ctr-1]!=a[i][len-ctr])
             {
                    sum_pres++;
                    left++;
                    if(a[i][ctr-1]<a[i][len-ctr])
                    {
                        b[len-ctr]=a[i][ctr-1];
                        b[ctr-1]=a[i][ctr-1];
 
                    }
                    else
                    {
 
                        b[ctr-1]=a[i][len-ctr];
                        b[len-ctr]=a[i][len-ctr];
                    }
             }
             else
             {
                b[ctr-1]=a[i][ctr-1];
                b[len-ctr]=a[i][ctr-1];
             }
            if(a[i][len-ctr-1]!='l')
            {
                sum_pres++;
            }
            if(a[i][ctr]!='l')
                sum_pres++;
            b[ctr]='l';
            b[len-ctr-1]='l';
            if(a[i][len-ctr-2]!='u')
            {
                sum_pres++;
            }
            if(a[i][ctr+1]!='u')
                sum_pres++;
            b[ctr+1]='u';
            b[len-ctr-2]='u';
            if(a[i][len-ctr-3]!='c')
            {
                sum_pres++;
            }
            if(a[i][ctr+2]!='c')
                sum_pres++;
            b[ctr+2]='c';
            b[len-ctr-3]='c';
            if(a[i][len-ctr-4]!='k')
            {
                sum_pres++;
            }
            if(a[i][ctr+3]!='k')
                sum_pres++;
            b[ctr+3]='k';
            b[len-ctr-4]='k';
            if(a[i][len-ctr-5]!='y')
            {
                sum_pres++;
            }
            if(a[i][ctr+4]!='y' && len/2!=ctr+4)
                sum_pres++;
            b[ctr+4]='y';
            b[len-ctr-5]='y';
 
 
            sum_pres+=middle;
            if(a[i][ctr+5]!=a[i][len-ctr-6])
            {
                middle--;
            }
 
        if(sum_pres<min_sum)
        {
            strcpy(min,b);
            min_st=ctr;
            min_sum=sum_pres;
        }
        else
        {
            if(sum_pres==min_sum)
            {
                check(min,min_st,b,len,ctr);
            }
        }
 
 
        }
        left=0;middle=0;
        sum_pres=0;
         strcpy(b,a[i]);
        if(a[i][len-1]!='y')
        {
            sum_pres++;
 
        }
        if(a[i][0]!='y')
        sum_pres++;
        b[0]='y';
        b[len-1]='y';
        if(a[i][len-2]!='k')
        {
            sum_pres++;
        }
        if(a[i][1]!='k')
            sum_pres++;
        b[1]='k';
        b[len-2]='k';
        if(a[i][len-3]!='c')
        {
            sum_pres++;
        }
        if(a[i][2]!='c')
            sum_pres++;
        b[2]='c';
        b[len-3]='c';
        if(a[i][len-4]!='u')
        {
            sum_pres++;
        }
        if(a[i][3]!='u')
            sum_pres++;
        b[3]='u';
        b[len-4]='u';
        if(a[i][len-5]!='l')
        {
            sum_pres++;
        }
        if(a[i][4]!='l' && len/2!=4)
            sum_pres++;
        b[4]='l';
        b[len-5]='l';
        swap(b,5,len);
        sum_pres+=sum;
        middle=carr_sum;
        left=0;
        right=0;
         if(sum_pres<min_sum)
        {
            strcpy(min,b);
            min_st=0;
            min_sum=sum_pres;
        }
        else
        {
            if(sum_pres==min_sum)
            {
                check(min,min_st,b,len,0);
            }
        }
        for(ctr=1;ctr<=(len+1)/2-5;ctr++)
        {
            sum_pres=0;
            sum_pres+=left;
             if(a[i][ctr-1]!=a[i][len-ctr])
             {
                    sum_pres++;
                    left++;
                    if(a[i][ctr-1]<a[i][len-ctr])
                    {
                        b[len-ctr]=a[i][ctr-1];
                        b[ctr-1]=a[i][ctr-1];
 
                    }
                    else
                    {
 
                        b[ctr-1]=a[i][len-ctr];
                        b[len-ctr]=a[i][len-ctr];
                    }
             }
             else
             {
                b[ctr-1]=a[i][ctr-1];
                b[len-ctr]=a[i][ctr-1];
             }
            if(a[i][len-ctr-1]!='y')
            {
                sum_pres++;
            }
            if(a[i][ctr]!='y')
                sum_pres++;
            b[ctr]='y';
            b[len-ctr-1]='y';
            if(a[i][len-ctr-2]!='k')
            {
                sum_pres++;
            }
            if(a[i][ctr+1]!='k')
                sum_pres++;
            b[ctr+1]='k';
            b[len-ctr-2]='k';
            if(a[i][len-ctr-3]!='c')
            {
                sum_pres++;
            }
            if(a[i][ctr+2]!='c')
                sum_pres++;
            b[ctr+2]='c';
            b[len-ctr-3]='c';
            if(a[i][len-ctr-4]!='u')
            {
                sum_pres++;
            }
            if(a[i][ctr+3]!='u')
                sum_pres++;
            b[ctr+3]='u';
            b[len-ctr-4]='u';
            if(a[i][len-ctr-5]!='l')
            {
                sum_pres++;
            }
            if(a[i][ctr+4]!='l' && len/2!=ctr+4)
                sum_pres++;
            b[ctr+4]='l';
            b[len-ctr-5]='l';
 
 
            sum_pres+=middle;
            if(a[i][ctr+5]!=a[i][len-ctr-6])
            {
                middle--;
            }
            if(sum_pres<min_sum)
        {
            strcpy(min,b);
            min_st=ctr;
            min_sum=sum_pres;
        }
        else
        {
            if(sum_pres==min_sum)
            {
                check(min,min_st,b,len,ctr);
            }
        }
 
        }
 
 
        printf("%s %d\n",min,min_sum);
    }
    return 0;
}
 
void check(char a[1000],int st1,char b[1000],int len,int st2)
{
	int at1,at2;
	if(st1<st2)
	{
		at1=st1;
		at2=st2;
	}
	else
	{
		at1=st2;
		at2=st1;
	}
    while(a[at1]!='\0' && a[at1]==b[at1])
    {
        at1++;
    }
    if(at1!=len)
    {
        if(b[at1]<a[at1])
        {
            strcpy(a,b);
            min_st=st2;
        }
    }
}
 
int swap(char ar[1000],int st,int len)
{
    sum=0;
    carr_sum=0;
    int ctr=st;
    int mid=len/2;
    for(ctr=st;ctr<mid;ctr++)
    {
        if(ar[ctr]!=ar[len-ctr-1])
        {
            sum++;
            if(ar[ctr]<ar[len-ctr-1])
            {
                ar[len-ctr-1]=ar[ctr];
            }
            else
            {
                ar[ctr]=ar[len-ctr-1];
            }
            if(ctr!=st)
            carr_sum++;
        }
 
    }
} 