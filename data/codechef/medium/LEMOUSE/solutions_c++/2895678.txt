#include <algorithm>
#include <iostream>
#include <cstdio>
using namespace std;

const int MAX = 105;
const int MMAX = 100000;
int a[MAX][MAX],b[MAX][MAX],dp[MAX][MAX][2];

int main()
{
    int t,n,m;
    char c;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d",&m,&n);
        for(int i=0;i<m;i++)
        {
            getchar();
            for(int j=0;j<n;j++)
            {
                scanf("%c",&c);
                a[i][j] = c-'0';
                b[i][j] = 0;
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(a[i][j])
                {
                    if(i>0)      b[i-1][j]++;
                    if(j>0)      b[i][j-1]++;
                    if(i<m-1)    b[i+1][j]++;
                    if(j<n-1)    b[i][j+1]++;
                }
            }
        }
        for(int i=0;i<m;i++)
        {
            for(int j=0;j<n;j++)
            {
                if(i==0 && j==0)
                {
                    dp[0][0][0] = dp[0][0][1] = b[0][0]+a[0][0];
                }
                else if(i==0)
                {
                    dp[0][j][0] = b[0][j]+dp[0][j-1][0]-a[0][j-1];
                    dp[0][j][1] = MMAX;
                }
                else if(j==0)
                {
                    dp[i][0][0] = MMAX;
                    dp[i][0][1] = b[i][0]+dp[i-1][0][1]-a[i-1][0];
                }
                else
                {
                    dp[i][j][0] = b[i][j]+min(dp[i][j-1][0],dp[i][j-1][1]-a[i-1][j])-a[i][j-1];
                    dp[i][j][1] = b[i][j]+min(dp[i-1][j][1],dp[i-1][j][0]-a[i][j-1])-a[i-1][j];
                }
            }
        }
        printf("%d\n",min(dp[m-1][n-1][0],dp[m-1][n-1][1]));
    }
    return 0;
}
