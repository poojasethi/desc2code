#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <cctype>
#define vi vector < int >
#define mod 1000000007
#define inf 987654321
#define dinf -inf
#define lo long long int
#define S(n) scanf("%d",&n);
#define SL(n) scanf("%lld",&n);
#define P(n) printf("%d",n);
#define PL(n) printf("%lld",n);
#define spa printf(" ");
#define st(a,v) memset(a, v, sizeof (a))
#define nwl puts("");
using namespace std;
int a[105][105];
int dp[105][105];
int n;
int m;
int path[105][105];
const int vertical = 1;
const int horizontal = 2;
const int any = 3;
int coun_adj (int x, int y) {
    int cnt=0;
    if(x>=1)cnt+=a[x-1][y];
    if(y>=1)cnt+=a[x][y-1];
    return cnt;
}
int solve ( ) {
    dp[n-1][m-1]  = a[n-1][m-1] + coun_adj(n-1,m-1);
    for (int i = n - 2; i >=0; i--) {
        dp[i][m-1] = dp[i+1][m-1] + coun_adj(i, m-1);
        path[i][m-1] = vertical;
    }
    for (int j = m-2; j >= 0; j--) {
        dp[n-1][j] = dp[n-1][j+1] + coun_adj(n-1,j);
        path[n-1][j] = horizontal;
    }
    for (int i = n-2; i >=0; i--) {
        for(int j = m - 2; j >= 0;j--) {
            int hres,vres;
            if(path[i+1][j] == horizontal || path[i+1][j] == any)
                vres = dp[i+1][j];
            else
                vres = dp[i+1][j] + a[i][j+1];
            if(path[i][j+1]==vertical ||path[i][j+1]==any)
                hres = dp[i][j+1];
            else
                hres = dp[i][j+1] + a[i+1][j];
            int best;
            if(hres<vres)
                best = hres,path[i][j]=horizontal;
            else if(vres<hres)
                best = vres, path[i][j] = vertical;
            else
                best = hres, path[i][j] = any;
            dp[i][j] = best + coun_adj(i,j);
          }
    }
    return dp[0][0];
}
int main  ( ) {
    int tc;
    cin >> tc;
    while(tc--) {
        cin >> n >> m;
        for (int i = 0; i < n; i++) {
            string s;
            cin >> s;
            for (int j = 0; j < m;j++)
                a[i][j] = s[j]-'0';
        }
        st(dp,0);
        int ans = solve();
        cout << ans << endl;
    }
}
