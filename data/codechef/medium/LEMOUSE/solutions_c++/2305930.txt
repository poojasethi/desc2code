#include<stdio.h>
#include<algorithm>
using namespace std;
int main()
{
    int t,n,m,arr[101][101],dp[101][101],i,j,dir[101][101],x,y,x1,y1;
    char s[102];
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&n,&m);
        for(i=0;i<n;i++)
        {
            scanf("%s",s);
            for(j=0;j<m;j++)
            arr[i][j]=s[j]-'0';
        }

		 dp[0][0]=arr[0][0]+arr[1][0]+arr[0][1];
		 
		 for(i=1;i<m-1;i++)
		 {
				dp[0][i]=dp[0][i-1]+arr[0][i+1]+arr[1][i];
				dir[0][i]=0; // comes from right
		 }

		 dp[0][m-1]=dp[0][m-2]+arr[1][m-1];
		 dir[0][m-1]=0;

		  for(i=1;i<n-1;i++)
		  {
				dp[i][0]=dp[i-1][0]+arr[i+1][0]+arr[i][1];
				dir[i][0]=1; // comes from up
		  }
		  
		  dp[n-1][0]=dp[n-2][0]+arr[n-1][1];
		  dir[n-1][0]=1;
        
		  for(int i=1;i<n-1;i++)
		  {
				for(j=1;j<m-1;j++)
				{

				   int a=(dir[i-1][j]!=1)?0:arr[i][j-1];
				   int b=(dir[i][j-1]>=1)?0:arr[i-1][j];
				   
				   int x=dp[i-1][j]+arr[i+1][j]+arr[i][j+1]+a;
				   int y=dp[i][j-1]+arr[i+1][j]+arr[i][j+1]+b;
				   
				   dp[i][j]=min(x,y);

				   if(x<y)
                   dir[i][j]=1;
                   
                   else if(y<x)
                   dir[i][j]=0;
                   
                   else
                   dir[i][j]=2;
                 }
		  }
		  
		  for(int i=1;i<m-1;i++)
		  {
				   int a=(dir[n-2][i]!=1)?0:arr[n-1][i-1];
				   int b=(dir[n-1][i-1]>=1)?0:arr[n-2][i];

				   int x=dp[n-2][i]+arr[n-1][i+1]+a;
				   int y=dp[n-1][i-1]+arr[n-1][i+1]+b;
				   
				   dp[n-1][i]=min(x,y);

				   if(x<y)
                   dir[n-1][i]=1;

                   else if(y<x)
                   dir[n-1][i]=0;

                   else
                   dir[n-1][i]=2;
		  }
		  
		  for(int i=1;i<n-1;i++)
		  {
				   int a=(dir[i-1][m-1]!=1)?0:arr[i][m-2];
				   int b=(dir[i][m-2]>=1)?0:arr[i-1][m-1];

				   int x=dp[i-1][m-1]+arr[i+1][m-1]+a;
				   int y=dp[i][m-2]+arr[i+1][m-1]+b;

				   dp[i][m-1]=min(x,y);

				   if(x<y)
                   dir[i][m-1]=1;

                   else if(y<x)
                   dir[i][m-1]=0;

                   else
                   dir[i][m-1]=2;
		  }
		  

		  
		  int a=dir[n-2][m-1]!=1?0:arr[n-1][m-2];
		  int b=dir[n-1][m-2]>=1?0:arr[n-2][m-1];
		  
		  dp[n-1][m-1]=min(dp[n-2][m-1]+a,dp[n-1][m-2]+b);

	
           printf("\n%d",dp[n-1][m-1]);
	}
    return 0;
}
