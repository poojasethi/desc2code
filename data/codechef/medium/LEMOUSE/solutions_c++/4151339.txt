#include<bits/stdc++.h>
using namespace std;
int main()
{
	int t,i,j,n,m;;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		char mouse[n][m];
		for(i=0;i<n;i++)
		{
				cin>>mouse[i];
		}
		int shadow[101][101]={0};
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(mouse[i][j]=='1')
				{
				if(i!=0)
				shadow[i-1][j]++;
				if(j!=0)
				shadow[i][j-1]++;
				if(i!=n-1)
				shadow[i+1][j]++;
				if(j!=m-1)
				shadow[i][j+1]++;
				}
			}
		}
		int dp[102][102][2];
		dp[0][0][0]=shadow[0][0]-(mouse[0][0]-'0');
		dp[0][0][1]=shadow[0][0]-(mouse[0][0]-'0');
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(i==0 && j==0)
				continue;
				else if(i==0)
				{
					dp[i][j][1]=120000;
					dp[i][j][0]=shadow[i][j]-(mouse[i][j]-'0')+dp[i][j-1][0];
				}
				else if(j==0)
				{
					dp[i][j][0]=120000;
					dp[i][j][1]=shadow[i][j]-(mouse[i][j]-'0')+dp[i-1][j][1];
				}
				else
				{
				dp[i][j][0]=shadow[i][j]-(mouse[i][j]-'0')+min(dp[i][j-1][0],dp[i][j-1][1]-(mouse[i-1][j]-'0'));
				dp[i][j][1]=shadow[i][j]-(mouse[i][j]-'0')+min(dp[i-1][j][0]-(mouse[i][j-1]-'0'),dp[i-1][j][1]);
			}}
		}
		cout<<min(dp[n-1][m-1][0],dp[n-1][m-1][1])+(mouse[0][0]-'0')+(mouse[n-1][m-1]-'0')<<"\n";
	}
	return 0;
}