//#include <bits/stdc++.h>
#include <iostream>
#include <climits>
#include <cstdio>
#include <sstream>
#include <algorithm>
#include <vector>
#include <list>
#include <map>
#include <queue>
#include <cstring>
#define iofast ios_base::sync_with_stdio(false)
#define ull unsigned long long
#define ll long long
#define ui unsigned int
#define db double
#define pb push_back
#define mp make_pair
#define INF 1000000000
#define inf 0x7fffffff
#define MOD 1000000007

using namespace std;

typedef pair<int,int> pii;
typedef list<int> li;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;
typedef vector< vector< pii > > vvp;

const int N = 100001;
char arr[N];

inline char flip(char old,int& ans){
	ans++;
	return (char)(((old-48)+1)%2+48);
}

void check(int n,int k){
	int i,j;
	for(i=0;i<n;){
		for(j=i+1;j<=n && arr[j]==arr[j-1];j++);
		if (j==n+1) j=n;
		if (j-i>k) exit(1);
		i=j;
	}
}

int diff(int start,int n){
	int other = (start+1)%2,comp1=0;
	for(int i=0;i<n;i++){
		if ((i%2==1) && (arr[i]-48!=other)) comp1++;
		else if ((!(i&1)) && (arr[i]-48!=start)) comp1++; 
	}
	return comp1;
}

int change(int s,int n){
	int o = (s+1)%2,ans = 0;
	for(int i=0;i<n;i++){
		if (i&1 && arr[i]-48!=o) {arr[i] = o+48;ans++;}
		else if (!(i&1) && arr[i]-48!=s) {arr[i] = s+48;ans++;}
	}
	return ans;
}

int main(){
	iofast;
	stringstream ss;
	int t;
	cin>>t;
	while(t--){
		int n,k,ans=0,temp;
		cin>>n>>k;
		cin>>arr;
		if (k==1){
			int x0 = diff(0,n);
			int x1 = diff(1,n);
			int ans;
			if (x0<=x1) ans = change(0,n);
			else ans = change(1,n);
			ss<<ans<<"\n"<<arr<<"\n";
			continue;
		}
		int i=0,j=0;
		while(i<n){
			j=i+1;
			while(j<=n && arr[j]==arr[j-1]) j++;
			if (j==n+1){
				j=n;
			}
			//[i,j) is the string
			bool flag = false;
			if (j-i>k){
				temp = i+k;
				while(temp<j){
					if (temp==j-1) temp = j-2;
					arr[temp] = flip(arr[temp],ans);
					temp+=k+1;
				}
			}
			i=j;
		}
		ss<<ans<<"\n"<<arr<<"\n";
	}
	cout<<ss.str()<<endl;
}