#include <iostream>
#include <cstdio>
#include <algorithm>
#include <utility>
#include <cstring>

#define MAX 100001
using namespace std;

char str[MAX];
char tmp1[MAX];
char tmp2[MAX];
typedef pair<char, int> count_t;
count_t array[MAX];

int count(int n){
  char prev= str[0];
  int indx = 0;
  int count = 1;
  for(int i=1;i<n;++i){
    if(str[i] == prev) {
      count++;
    }else{
      count_t t = make_pair(prev, count);
      array[indx++] = t;
      count = 1;
    }
    prev = str[i];
  }
  count_t t = make_pair(prev, count);
  array[indx++] = t;
  return indx;
}
int countFlips = 0;
inline void flip(char& c){
  ++countFlips;
  c=='1'? c='0': c='1';
}

void findAns(int arrayLen, int k, int n) {
  if( k == 1){
    int c1=0, c2=0;
    strcpy(tmp1, str);
    strcpy(tmp2, str);
    for(int i=0;i<n;++i){
      tmp1[i] = '0'+ i%2;
      if(str[i] != tmp1[i]) ++c1;      
    } 
    for(int i=0;i<n;++i){
      tmp2[i] = '1'- i%2;
      if(str[i] != tmp2[i]) ++c2;      
    } 
    if( c1<c2){
      strcpy(str, tmp1);
      countFlips=c1;
    }else{
      strcpy(str, tmp2);
      countFlips=c2;
    }
  }else{
  int startIdx = 0;
  for(int i=0; i<arrayLen; ++i){
    int l = array[i].second;
    if( l<=k){
      startIdx += l; 
      continue;
    }
    int no_of_part = l/(k+1);

    {
      int idx = startIdx;
      int endIdx = idx+l-1;
      //cout<<"idx = "<<idx<<endl;
      //cout<<"endidx = "<<endIdx<<endl;
      for(int i=0;i<no_of_part;++i){
        int pickIdx = idx+k;
	if( pickIdx == endIdx){
          flip(str[endIdx-1]);
	}else{
	  flip(str[pickIdx]);
	}
	idx = pickIdx+1;
      }
      //if(l%(k+1) ==0){
        //cout<<"flipping second last"<<endl;
        //flip(str[endIdx-1]);
      //}
    }
    startIdx += l;
  }
  }
}




main(){
  int t;
  scanf("%d", &t);
  int n,k;
  for(int i=0; i<t;++i){
    countFlips=0;
    scanf("%d %d", &n, &k);
    scanf("%s", str);
    int arrLen = count(n);
    //cout<<"======================="<<endl;
    //cout<<"arraylen = "<<arrLen<<endl;
    //for(int i=0;i<arrLen;++i){
      //cout<<array[i].first<<" = "<<array[i].second<<endl;
    //}
    //cout<<"======================="<<endl;
    findAns(arrLen, k, n);
    printf("%d\n%s\n", countFlips, str);
  }
  
}
