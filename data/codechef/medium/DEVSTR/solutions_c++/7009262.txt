#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<string>
#include<bitset>
#include<vector>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<functional> //highest
#include<algorithm>	//sort, heap etc.
#include<utility>	//pair

using namespace std;

typedef long long ll;
typedef long double ld;
typedef vector<int> vi;
typedef stack<int> si;
typedef queue<int> qi;
typedef pair<int,int> ii;
typedef pair<int,ii> iii;
typedef vector<vi> vvi;
typedef vector<ii> vii;
typedef vector<vii> vvii;
typedef vector<iii> elst;

#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define ABS(a,b) ((a) < (b) ? (b)-(a) : (a)-(b))

#define FORN(i,j,n) for(int i=j;i<(int)n;i++)
#define forn(i,n) FORN(i,0,n)
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define sz size()
#define ff first
#define ss second
#define pq priority_queue
#define all(x) (x).begin(),(x).end()
#define mlc(t,n) ((t*)malloc(n*sizeof(t)))
#define mset(m,v) memset()

#ifdef ONLINE_JUDGE
#define gc getchar_unlocked
#else
#define gc getchar
#endif

inline int geti()
{
   int n=0;
   int ch=gc();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}

   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=gc();
   n=n*sign;
   return n;
 }

inline ll getll()
{
   ll n=0;
   ll ch=gc();ll sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}

   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=gc();
   n=n*sign;
   return n;
}


#define INF 1000000000
#define M 1000000007

//---------------------------------------------//


void solve(){
	int n,k,c=0,t=1;
	n = geti();
	k = geti();
	string str;
	cin >> str;

	if(k==1){
		string str1=str,str2=str;
		int c1=0,c2=0;
		forn(i,n){
			if(str1[i] != '0' + i%2){
				str1[i] = '0' + i%2;
				c1++;
			}
			if(str2[i] == '0' + i%2){
				str2[i] = '0' + 1 - i%2;
				c2++;
			}
		}
		if(c1 < c2){c = c1; str = str1;}
		else { c = c2; str = str2; }
	} else {
		FORN(i,1,n){
			if(t==k && str[i] == str[i-1]){
				if(i < n-1 && str[i] != str[i+1]){
					str[i-1] = '0' + '1' - str[i-1];
					t=0;
				}else{
					str[i] = '0' + '1' - str[i];
					t=1;
				}
				c++;
			}else if(str[i] == str[i-1]) t++;
			else t = 1;
		}
	}
	cout << c << endl;
	cout << str;
}

int main(){
	//freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);

	int T;
	scanf("%d\n",&T);
	while(T--){
		solve();
		if(T>0)cout << endl;
	}
}
