/*
ID: Sahil (sahiliitm)
PROG: 91. Two squares or not two square
LANG: C++ 
*/
#include <cstdio>
#include <cmath>
#include <iostream>
#include <vector>
#define deb(n) cout<<n<<endl
#include<map>
#include<tr1/unordered_map>
#include<tr1/unordered_set>
#include <set>
#include<string>
#include<algorithm>
#include<cstring>
#include<queue>
#include<stack>
#define mfor(i,n) for(int i=0;i<n;i++)
#define mfors(i,a,n) for(int i=a;i<n;i++)
#define Err(x) cerr<<#x<<" "<<x<<endl
#define pb push_back
#define FILL(a,b) memset(a,b,sizeof(a))
using namespace std;
using std::tr1::unordered_set;
using std::tr1::unordered_map;
typedef long long int llint;
#define getchar_unlocked getchar
inline int print(int d) { return printf("%d",d);}

inline int read(int &x){
	x=0;int sign,ch;
	while((ch<'0'||ch>'9')&&ch!='-'&&ch!=EOF) ch=getchar_unlocked();
	if (ch=='-')
		sign=-1,ch=getchar_unlocked();
	else sign=1;
	do
		x=(x<<3)+(x<<1)+ch-'0';
	while((ch=getchar_unlocked())>='0' && ch<='9');
	x*=sign;
	return 1;
}
 
int main()
{
	int t;
	scanf("%d",&t);
 
	while (t--)
	{
		int n, k;
 
		scanf("%d",&n);
		scanf("%d",&k);
 
		int flip_cnt = 0;
		char s[100005];
		scanf("%s",s);
		int l = strlen(s);
		s[l] = '2';
 
		if (k == 1)
		{
			int oo = 0;
			int eo = 0;
			int oz = 0;
			int ez = 0;
 
			for (int i = 0; i < l; i++)
			{
				if (i & 1)
				{
					if (s[i] == '0')oz++;
					else oo++;
				}
				else
				{
					if (s[i] == '0')ez++;
					else eo++;
				}
			}
			if ((eo + oz) <= (ez + oo))
			{
				printf("%d\n",eo + oz);
				int i = 0;
				bool sw = false;
				while (i < l)
				{
					printf("%c",(sw == false ? '0' : '1'));
					sw = !sw;
					i++;
				}
				printf("\n");
			}
			else
			{
				printf("%d\n",ez + oo);
				int i = 0;
				bool sw = false;
				while (i < l)
				{
					printf("%c",(sw == false ? '1' : '0'));
					sw = !sw;
					i++;
				}
				printf("\n");
			}
		}
		else
		{
			for (int i = 1; i < l; i++)
			{
				int cnt = 1;
				while (s[i] == s[i - 1] && i < l)
				{
					cnt++;
					if (cnt > k)
					{
						flip_cnt++;
						if (s[i] == s[i + 1])s[i] = (s[i] == '0' ? '1' : '0');
						else s[i - 1] = (s[i - 1] == '0' ? '1' : '0');
						cnt = 1;
					}
					i++;
				}
			}
			printf("%d\n",flip_cnt);
			for (int i = 0; i < l; i++)
				printf("%c",s[i]);
			printf("\n");
		}
	}
	return 0;
}