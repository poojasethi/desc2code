#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
 
 
inline void readint(int &a)
{
	register int c;
	a = 0;
	do c = getchar_unlocked(); while (c < '0');
	do{
		a = (a << 1) + (a << 3) + c - '0';
		c = getchar_unlocked();
	} while (c >= '0');
}
 
inline void readll(long long &a)
{
	register int c;
	a = 0;
	do c = getchar_unlocked(); while (c < '0');
	do{
		a = (a << 1) + (a << 3) + c - '0';
		c = getchar_unlocked();
	} while (c >= '0');
}
 
inline void printint(int a)
{
	int s[12], t = -1;
	do
	{
		s[++t] = a % 10 + '0';
		a /= 10;
	} while (a > 0);
 
	while (t >= 0)putchar_unlocked(s[t--]);
	putchar_unlocked('\n');
}
 
inline void printll(long long a)
{
	int s[25], t = -1;
	do
	{
		s[++t] = a % 10 + '0';
		a /= 10;
	} while (a > 0);
 
	while (t >= 0)putchar_unlocked(s[t--]);
	putchar_unlocked('\n');
}
 
inline int readstr(char s[])
{
	register int i = 0, c;
	do c = getchar_unlocked(); while (c < '0');
	do{
		s[i++] = c;
		c = getchar_unlocked();
	} while (c >= '0');
	s[i] = '\0';
	return i;
}
 
inline int  min(int a, int b)
{
	return (((a) < (b)) ? (a) : (b));
}
inline int  max(int a, int b)
{
	return (((a) > (b)) ? (a) : (b));
}
 
long long gcd(long long m, long long n)
{
	if (n == 0)return m;
	return gcd(n, m % n);
}
 
int main()
{
	int t;
	readint(t);
 
	while (t--)
	{
		int n, k;
 
		readint(n);
		readint(k);
 
		int flip_cnt = 0;
		char s[100005];
		int l = readstr(s);
		s[l] = '2';
 
		if (k == 1)
		{
			int oo = 0;
			int eo = 0;
			int oz = 0;
			int ez = 0;
 
			for (int i = 0; i < l; i++)
			{
				if (i & 1)
				{
					if (s[i] == '0')oz++;
					else oo++;
				}
				else
				{
					if (s[i] == '0')ez++;
					else eo++;
				}
			}
			if ((eo + oz) <= (ez + oo))
			{
				printint(eo + oz);
				int i = 0;
				bool sw = false;
				while (i < l)
				{
					putchar_unlocked(sw == false ? '0' : '1');
					sw = !sw;
					i++;
				}
				putchar_unlocked('\n');
			}
			else
			{
				printint(ez + oo);
				int i = 0;
				bool sw = false;
				while (i < l)
				{
					putchar_unlocked(sw == false ? '1' : '0');
					sw = !sw;
					i++;
				}
				putchar_unlocked('\n');
			}
		}
		else
		{
			for (int i = 1; i < l; i++)
			{
				int cnt = 1;
				while (s[i] == s[i - 1] && i < l)
				{
					cnt++;
					if (cnt > k)
					{
						flip_cnt++;
						if (s[i] == s[i + 1])s[i] = (s[i] == '0' ? '1' : '0');
						else s[i - 1] = (s[i - 1] == '0' ? '1' : '0');
						cnt = 1;
					}
					i++;
				}
			}
			printint(flip_cnt);
			for (int i = 0; i < l; i++)putchar_unlocked(s[i]);
			putchar_unlocked('\n');
		}
	}
	return 0;
}  