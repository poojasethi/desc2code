#include<iostream>
using namespace std;
#include<cstdlib>
long long arr[10002],maxfromlast[10002],maxfromstart[10002],minfromstart[10002],minfromlast[10002];
#define fo(i,n) for(i=1;i<=n;i++)
int main()
{
int test;
cin>>test;
while(test--)
{
    int n,i;
    cin>>n;
   fo(i,n)
   cin>>arr[i];
   long long maxim=0;
   maxfromstart[0]=-1000050000;
   for(i=1;i<=n;i++)
   {
       if(arr[i]>0)
       {
           if(maxim<0)
           {
               maxim=arr[i];
           }
           else
            maxim+=arr[i];
       }
       else
       {
         if(maxim<0)
            maxim=arr[i];
         else
            maxim+=arr[i];
       }
    maxfromstart[i]=max(maxfromstart[i-1],maxim);
   }
   maxim=0;
   maxfromlast[n+1]=-1000050000;
   for(i=n;i>0;i--)
   {
       if(arr[i]>0)
       {
           if(maxim<0)
           {
               maxim=arr[i];
           }
           else
            maxim+=arr[i];
       }
       else
       {
         if(maxim<0)
            maxim=arr[i];
         else
            maxim+=arr[i];
       }
    maxfromlast[i]=max(maxfromlast[i+1],maxim);
   }
   long long mini=0;
   minfromstart[0]=1000050000;
for(int i=1;i<=n;i++)
{
    if(arr[i]<0)
    {
        if(mini<0)
         mini+=arr[i];
        else
            mini=arr[i];
    }
    else
    {
        if(mini>0)
        {
            mini=arr[i];
        }
        else
            mini+=arr[i];
    }
    minfromstart[i]=min(minfromstart[i-1],mini);
}
mini=0;
   minfromlast[n+1]=1000050000;
for(int i=n;i>0;i--)
{
    if(arr[i]<0)
    {
        if(mini<0)
         mini+=arr[i];
        else
            mini=arr[i];
    }
    else
    {
        if(mini>0)
        {
            mini=arr[i];
        }
        else
            mini+=arr[i];
    }
    minfromlast[i]=min(minfromlast[i+1],mini);
}
long long maxval=0;
for(i=2;i<=n;i++)
{
    if(abs(maxfromstart[i-1]-minfromlast[i])>maxval)
        maxval=abs(maxfromstart[i-1]-minfromlast[i]);
    if(abs(minfromstart[i-1]-maxfromlast[i])>maxval)
        maxval=abs(minfromstart[i-1]-maxfromlast[i]);
}
cout<<maxval<<endl;
}
}
