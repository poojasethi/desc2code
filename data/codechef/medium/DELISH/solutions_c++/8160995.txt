#include <bits/stdc++.h>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)

inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
    freopen("in.txt","r",stdin);
    freopen("out.txt","w",stdout);
}

#define INF 1000000009

int main()
{
    int t = fi(), n;
    vi val;
    while(t--){
        vector<ll> maxi;
        vector<ll> mini;
        vector<ll> maxj(10004);
        vector<ll> minj(10004);
        n=fi();
        forall(i,0,n)
            val.pb(fi());

        ll max_sum=val[0], min_sum=val[0];

        maxi.pb(val[0]);
        mini.pb(val[0]);
        forall(i,1,n){
            maxi.pb(max(maxi.back(),0LL) + val[i]);
            mini.pb(min(mini.back(),0LL) + val[i]);
        }

        maxj[n-1] = val[n-1];
        minj[n-1] = val[n-1];

        forb(i,n-2,0){
            maxj[i] = max(maxj[i+1],0LL) + val[i];
            minj[i] = min(minj[i+1],0LL) + val[i];
        }
        ll ans = 0;
        forall(i,0,n-1) {
            ans = max(ans, abs(maxj[i+1] - mini[i]));
            ans = max(ans, abs(maxi[i] - minj[i+1]));
        }

        printf("%lld\n", ans);

        val.clear();
        mini.clear();
        maxi.clear();
        minj.clear();
        maxj.clear();
    }

    return 0;
}
