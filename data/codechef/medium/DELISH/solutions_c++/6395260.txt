#include <iostream>
#include <stdlib.h>
#include <stdio.h>

using namespace std;

#define ll long long int
#define inchar getchar_unlocked
 
inline void inp( ll &n )
{
n=0;
ll ch=inchar();ll sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}



typedef struct node
 {
     ll maxend,minend,maxfar,minfar;
 }node;
 
 
 node lt[10010],rt[10010];
 ll a[10010];

inline ll abs(ll x)
 {
     if(x<0) x = x*-1;
     return x;
 }


int main() {
	// your code goes here
     
     ll test;
     cin>>test;
     while(test--)
      {
          ll n;
          inp(n);
          for(int i=1;i<=n;i++)
           inp(a[i]);
          
          lt[1] = (node){a[1],a[1],a[1],a[1]};
          
          
          for(int i=2;i<=n;i++) // fill enteries from lt
           {
              lt[i].maxend = max(a[i],a[i]+lt[i-1].maxend);
              lt[i].minend = min(a[i],a[i]+lt[i-1].minend);
              lt[i].maxfar = max(lt[i].maxend,lt[i-1].maxfar);
              lt[i].minfar = min(lt[i].minend,lt[i-1].minfar);
              
           }
           
           rt[n] = (node){a[n],a[n],a[n],a[n]};
           
           for(int i=n-1;i>=1;i--)
            {
              rt[i].maxend = max(a[i],a[i]+rt[i+1].maxend);
              rt[i].minend = min(a[i],a[i]+rt[i+1].minend);
              rt[i].maxfar = max(rt[i].maxend,rt[i+1].maxfar);
              rt[i].minfar = min(rt[i].minend,rt[i+1].minfar);    
            }
           
           ll ans = 0;
           for(int i=1;i<n;i++)
            {
                ans = max(ans,abs(lt[i].maxfar-rt[i+1].minfar));
                ans = max(ans,abs(rt[i+1].maxfar-lt[i].minfar));
            }
           
           printf("%lld\n",ans);
          
      }


	return 0;
}
