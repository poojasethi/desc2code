#include<bits/stdc++.h>
#define ll long long int
#define F first
#define S second
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define rep(i,in1,n) for(i=in1;i<=n;i++)
#define repd(i,in1,n) for(i=in1;i>=n;i--)

#define pf(n) printf("%d ",n);
#define sf(n) scanf("%lld",&n)

#define nl printf("\n")
#define mem(arr,init) memset(arr,init,sizeof(arr))

using namespace std;


ll meharr[10007];
ll msharr[10007];
ll mnearr[10007];//max starting
ll mnsarr[10007];//min starting
ll arr[10007];
void init(ll n)
{
	ll i,j,k;
	ll meh=arr[1],msf=arr[1];
	meharr[1]=msf;
	rep(i,2,n)
	{
		meh=max(meh+arr[i],arr[i]);
		msf=max(meh,msf);
		meharr[i]=msf;
	}
	 msf=arr[n];
	 ll msh=arr[n];
	msharr[n]=arr[n];
	repd(i,n-1,1)
	{
		msh=max(msh+arr[i],arr[i]);
		msf=max(msh,msf);
		msharr[i]=msf;
	}
	 meh=arr[1];
	msf=arr[1];
	mnearr[1]=msf;
	rep(i,2,n)
	{
		meh=min(meh+arr[i],arr[i]);
		msf=min(meh,msf);
		mnearr[i]=msf;
	}
	 msf=arr[n];
	 msh=arr[n];
	mnsarr[n]=arr[n];
	repd(i,n-1,1)
	{
		msh=min(msh+arr[i],arr[i]);
		msf=min(msh,msf);
		mnsarr[i]=msf;
	}
	
	
	
	
}

int main()
{
	ll i,j,k,t,n,m,a,b,c,x,y,z,s1,sum,s2,mx,ans;
	sf(t);
	while(t--)
	{
		sf(n);
		rep(i,1,n)
		sf(arr[i]);
		
		init(n);
		s1=LLONG_MIN;
		s2=LLONG_MIN;
	
		
		
		for(j=1;j<n;j++)
		{
			s1=max(s1,meharr[j]-mnsarr[j+1]);
			
		}
		for(k=n;k>1;k--)
		{
			s2=max(s2,msharr[k]-mnearr[k-1]);
			
		}
	//	s2=max(s2,msharr[j]-mnearr[j+1]);
		
		ans=max(s1,s2);
		printf("%lld\n",ans);
		
		
	}
	




	return 0;
}
