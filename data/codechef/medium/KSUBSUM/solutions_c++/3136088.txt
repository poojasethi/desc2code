#include <cstring>
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define MAXN 1000010
#define ff first
#define ss second
#define pr(x) printf("%d",x);
#define get getchar//_unlocked
inline int inp()
{
int n=0,s=1;
char p=get();
if(p=='-')
s=-1;
while((p<'0'||p>'9')&&p!=EOF)
p=get();
while(p>='0'&&p<='9')
{
n = (n<< 3) + (n<< 1) + (p - '0');
p=get();
};
return n*s;
}
int a[10005],s[10005];
multiset<int>st;
multiset<int>::iterator it;
priority_queue<int,vector<int>,greater<int> >pq;
int main()
{
int i,n,j,k,t,c=0,k1,k2,k3;
t=inp();
while(t--)
{
n=inp();k1=inp();k2=inp();k3=inp();
st.insert(0);
for(i=1;i<=n;i++)
{
a[i]=inp();
s[i]=s[i-1]+a[i];
for(it=st.begin();it!=st.end();it++)
{
int val=s[i]-*it;
if(pq.size()<k3)
{
pq.push(val);
}
else if(val>pq.top())
{
pq.pop();
pq.push(val);
}
else break;
}
if(st.size()<k3)
{
st.insert(s[i]);
}
else if(s[i]<*(st.rbegin()))
{
it=st.end();it--;
st.erase(it);
st.insert(s[i]);
}
}
i=0;k=pq.size();
while(!pq.empty())
{
int v=pq.top();
pq.pop();
if((k-i)==k3)k3=v;
else if((k-i)==k2)k2=v;
else if((k-i)==k1)k1=v;
i++;
}
printf("%d %d %d\n",k1,k2,k3);
st.clear();
}
return 0;
}