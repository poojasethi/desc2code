#include<stdio.h>
int newbest[2020],best[2020],bestn,newbestn,smallest[2020],till,temp[2020];
int n,k1,k2,k3,t,k;
void merge();
main()
{
      int arr[10010],sum[10010];
      int i,j,total;
      scanf("%d",&t);
      for(;t--;)
      {
             total=0;   
             scanf("%d%d%d%d",&n,&k1,&k2,&k3);
             smallest[0]=0;
             till=1;
             k=k3;
             for(i=0;i<n;i++)
             {
                  scanf("%d",&arr[i]);
                  total=total+arr[i];
                  sum[i]=total;
             }
             bestn=0;
             for(i=0;i<n;i++)
             {
                      for(j=0;j<till;j++)
                      newbest[j]=sum[i]-smallest[j];
                      merge();
                      
                      for(j=till-1;j>=0&&sum[i]<smallest[j];j--)
                      smallest[j+1]=smallest[j];
                      smallest[j+1]=sum[i];
                      
                      if(till<=k)
                      till++;
                      
             }
             printf("%d %d %d\n",best[k1-1],best[k2-1],best[k3-1]);
      }
}
void merge()
{
       int i,i1,i2;
       i=0;
      //if(till==1)
      // printf("bestn=%d      ",bestn);
       for(i1=0,i2=0;i<k&&i1<bestn&&i2<till;)
       {
             if(best[i1]>newbest[i2])
             temp[i++]=best[i1++];         
             else
             {
                   if(newbest[i2]>best[i1])
                   temp[i++]=newbest[i2++];
                   else
                   {
                       temp[i++]=newbest[i2++];
                       if(i>=k)
                       break;
                       temp[i++]=best[i1++];
                   }
             }
       }
      while(i<k&&i1<bestn)
      temp[i++]=best[i1++];
              
      while(i<k&&i2<till)
      temp[i++]=newbest[i2++];
      int j;
      for(j=0;j<=i;j++)
      best[j]=temp[j];
      
      bestn=i;
}
                                                                                     
                      
                                             
             
