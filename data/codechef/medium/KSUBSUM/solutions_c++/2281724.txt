    #include <cstdio>
     
    #define MXK 2012
    #define MXN 10000
    #define min(a, b) ((a<b)?a:b)
    #define mps(x) (minPrefSum[x]==1000000000?0:minPrefSum[x])
     
    int minPrefSum[MXK], bestAns[MXK], currAns[MXK];
     
    inline void merge(int *A, int *B, int k)
    {
    int C[MXK];
    int a,b,c;
    a = b = c = k-1;
    while(c>=0) {
    if(A[a] > B[b]) C[c--] = A[a--];
    else C[c--] = B[b--];
    }
    for(int i=0; i<k; i++) A[i] = C[i];
    }
     
    inline void insert(int *A, int b, int k)
    {
    int i;
    for(i=k; i>0 && A[i-1]>b; i--) A[i]=A[i-1];
    if(i < k) A[i] = b;
    }
     
    int main()
    {
    int t;
    int n, k1, k2, k3, score, prefixSum;
    scanf("%d", &t);
    while(t--) {
    scanf("%d %d %d %d", &n, &k1, &k2, &k3);
    prefixSum = 0;
     
    for(int i=0; i<k3; i++) {
    bestAns[i] = currAns[i] = -1000000000;
    minPrefSum[i] = 1000000000;
    }
    minPrefSum[0] = 0;
    for(int i=0; i<n; i++) {
    scanf("%d", &score);
    prefixSum += score;
     
    for(int j=0; j<min(k3,i+1); j++)
    currAns[k3-j-1] = prefixSum - minPrefSum[j];
     
    merge(bestAns, currAns, k3);
    insert(minPrefSum, prefixSum, k3);
    }
     
    printf("%d %d %d\n", bestAns[k3-k1], bestAns[k3-k2], bestAns[k3-k3]);
    }
    }