
#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<string>
#include<algorithm>
#include<functional>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<limits.h>
#include<cstring>
#include<cstdlib>
#include<cfloat>
#include<cassert>
#define maxm(a,b) a>b?a:b;
#define minm(a,b) a<b?a:b;
using namespace std;
//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
typedef map<int,int> mp;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(n,s); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define traverse_map(a,b) for(mp::iterator it=a;it!=b;++it)
#define MOD 1000000007
#define MAX 1000001
#define cases() int t; cin>>t; while(t--)
// fast input function
#define getcx getchar_unlocked
// fast input function
#ifdef ONLINE_JUDGE
 inline void inp( int &n )
 {
    n=0;
    int ch=getcx();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

    while(  ch >= '0' && ch <= '9' )
            n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    n=n*sign;
  }
#else
inline void inp(int &n){
 cin>>n;
}
#endif
/*
inline long long inp(){
	char c = getchar_unlocked();
	long long n = 0;
	while(c < '0' || c > '9') c = getchar_unlocked();
	while(c >= '0' && c <= '9')
		n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();
	return n;
}

#define pc putchar_unlocked
inline void oup(int n){
	if(!n) pc('0');
	char pb[2];
	int pi = 0;
	while(n) pb[pi++] = (n%10) + '0', n /= 10;
	while(pi) pc(pb[--pi]);
}*/
int main(){
 int  A[10001],current[2015],previous[2015],max[2015];
 int t;
 //scanf("%d",&t);
 inp(t);
 while(t--){

   int n,k1,k2,k3;

   //scanf("%d%d%d%d",&n,&k1,&k2,&k3);
   inp(n);
   inp(k1);
   inp(k2);
   inp(k3);
   
   int i,x,previ=0;
   int sum=0;
   A[0]=0;
   
   
   
   for(i=1;i<=n;i++){
	//scanf("%d",&x);
	 inp(x);
	 sum+=x;
	A[i]=sum;
   }
   
	int k,temp;
	for(i=1;i<=n;i++){

	   if(i<=2012)
       {
		  temp=A[i-1];
		  k=i-2;
		  while(A[k]>temp&&k>=0){
			  A[k+1]=A[k];
			  k--;
		  }
		  A[++k]=temp;
	   }
	   else{
			  if(A[i-1]<A[2012])
			  {
                       temp=A[i-1];
		               k=2011;
		               while(A[k]>temp&&k>=0){
			             A[k+1]=A[k];
		     	          k--;
		                }
	    	             A[++k]=temp;

			  }
	    }
	  int j;
	  for(j=0;j<i&&j<=2012;j++)
	  {
			current[j]=(A[i]-A[j]);
	  }
	  
	  int z=0;
	  k=0;
	  int l=0;
	  while(z<2013&&l<j&&k<previ)
	  {
			if(current[l]<previous[k])
			 max[z]=(previous[k++]);
			 else
			 max[z]=(current[l++]);
			 z++;
	  }
	  if(z<2013){

		 for(;l<j&&z<2013;l++,z++)
		  max[z]=current[l];

	     for(;k<previ&&z<2013;k++,z++)
		  max[z]=(previous[k]);
	  }
	  previ=z;
	  for(k=0;k<z;k++)
	  {
			previous[k]=(max[k]);
	  }
	}

	printf("%d %d %d\n",max[k1-1],max[k2-1],max[k3-1]);

 }
 return 0;
}
