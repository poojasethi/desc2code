#include <stdio.h>
#include <bits/stdc++.h>

void mgs(long a[][3],long,long);
void mg(long a[][3],long,long,long);
void dp(long,int);


long r[100002];
long p[100002][3];
long min[100002][3];
long long d[100002];
long long ans;

int main()
{
    long t,n,m,i,neg,j;
    int k;
    scanf("%ld",&t);
    while(t--)
    {
        scanf("%ld%d%ld",&n,&k,&m);
        neg=0;
        for(i=0;i<n;i++)
        {
            scanf("%ld",&r[i]);
            if(r[i]<0)
            {
                min[neg][0]=-r[i];
                min[neg][1]=i+1;
                min[neg][2]=501;
                neg++;
            }
        }
        for(i=0;i<m;i++)
            scanf("%ld%ld%ld",&p[i][0],&p[i][1],&p[i][2]);
        mgs(p,0,m-1);
        for(i=0;i<neg;i++)
        {
            for(j=0;j<m;j++)
            {
                if(min[i][1]>=p[j][0]&&min[i][1]<=p[j][1])
                {
                    min[i][2]=p[j][2];
                    break;
                }
            }
        }
        memset(d,0,sizeof(d));
        dp(neg,k);
        ans=0;
        for(i=0;i<n;i++)
            ans+=r[i];
        ans+=d[k];
        printf("%lld\n",ans);

    }
    return 0;
}

void mgs(long a[][3],long low,long high)
{
    if(low<high)
    {
        long mid=low+(high-low)/2;
        mgs(a,low,mid);
        mgs(a,mid+1,high);
        mg(a,low,mid,high);
    }
}

void mg(long arr[][3],long low,long mid,long high)
{
    long i,j,n,k;
    i = low;
    j = mid+1;
    n = high-low+1;
    k = 0;
    long aux[n][3];

    while(i<=mid && j<=high)
    {
        if(arr[i][2]>arr[j][2])
        {
            aux[k][0]=arr[j][0];
            aux[k][1]=arr[j][1];
            aux[k][2]=arr[j][2];
            j++;
        }
        else
        {
            aux[k][0]=arr[i][0];
            aux[k][1]=arr[i][1];
            aux[k][2]=arr[i][2];
            i++;
        }
        k++;
    }
    while(i<=mid)
    {
        aux[k][0]=arr[i][0];
        aux[k][1]=arr[i][1];
        aux[k][2]=arr[i][2];
        k++;
        i++;
    }
    while(j<=high)
    {
        aux[k][0]=arr[j][0];
        aux[k][1]=arr[j][1];
        aux[k][2]=arr[j][2];
        k++;
        j++;
    }
    i=low;
    k=0;

    while(i<=high)
    {
        arr[i][0]=aux[k][0];
        arr[i][1]=aux[k][1];
        arr[i][2]=aux[k][2];
        i++;
        k++;
    }
}
void dp(long n,int k)
{
    long i;
    int j;
    for(i=1;i<=n;i++)
    {
        for(j=k;j>=min[i-1][2];j--)
        {
            d[j]=(d[j]>d[j-min[i-1][2]]+min[i-1][0])?d[j]:d[j-min[i-1][2]]+min[i-1][0];
        }
    }
}
