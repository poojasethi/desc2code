#include <iostream>
#include <sstream>
#include <set>
#include <vector>
#define ll long long
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define INF 1e9+5;
#define ppiii pair< pair<int,int> , int >
using namespace std;

int ratings[100001];
vector< pii > myleft[100001];
vector< pii > myright[100001];
int minicost[100001];
ll dp[100001][501];

int main(){
	ios_base::sync_with_stdio(false);
	stringstream ss;
	int t;
	cin>>t;
	while(t--){
		int n,k,m;
		cin>>n>>k>>m;
		for(int i=0;i<n;i++){
			cin>>ratings[i];
			minicost[i] = 1000000001;
			myleft[i].clear();
			myright[i].clear();
		}
		for(int i=0;i<m;i++){
			int l,r,c;
			cin>>l>>r>>c;
			l--;r--;
			myleft[l].pb(mp(c,i));
			myright[r].pb(mp(c,i));
		}
		set< pii > iset;
		for(int i=0;i<n;i++){
			for(int j=0,jend=myleft[i].size();j<jend;j++)
				iset.insert(myleft[i][j]);
			
			if (iset.size()==0){
				minicost[i] = INF;
			}
			else {
				minicost[i] = (iset.begin())->first;
			}
			// cout<<"** "<<i<<" "<<minicost[i]<<endl;
			for(int j=0,jend=myright[i].size();j<jend;j++)
				iset.erase(myright[i][j]);
		}

		for(int i=0;i<=k;i++){
			if (ratings[0]>=0) dp[0][i] = ratings[0];
			else if (i>=minicost[0]) dp[0][i] = 0;
			else dp[0][i] = ratings[0];
			// cout<<"   ---  "<<i<<" "<<dp[0][i]<<endl;
		}
		for(int ob=1;ob<n;ob++){
			for(int cost=0;cost<=k;cost++){
				if (ratings[ob]>=0) dp[ob][cost] = ratings[ob]+dp[ob-1][cost];
				else if (minicost[ob] > cost) dp[ob][cost] = dp[ob-1][cost]+ratings[ob];
				else dp[ob][cost] = max(dp[ob-1][cost]+ratings[ob] , dp[ob-1][cost-minicost[ob]]);
				// cout<<"^^ "<<ob<<" "<<cost<<" "<<dp[ob][cost]<<endl;
			}
		}
		ss<<dp[n-1][k]<<"\n";
	}
	cout<<ss.str()<<endl;
}