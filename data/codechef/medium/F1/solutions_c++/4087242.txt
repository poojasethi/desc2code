#include <cstdio>

#define MAX 500
int rmax[MAX][MAX], cmax[MAX][MAX];
int rcnt[MAX][MAX], ccnt[MAX][MAX];
int temp[MAX+1];

int main() {
    int t;
    scanf("%d",&t);
    for(int tt=1;tt<=t;++tt) {
        int n, m, k, i, j, x, mval, mcnt;
        scanf("%d%d%d",&m,&n,&k);

        for(i=1;i<=m;++i) {
            for(j=1,mval=0,mcnt=0; j<=k; ++j) {
                scanf("%d",temp+j);
                if (temp[j] > mval) {
                    mval = temp[j];
                    mcnt = 1;
                } else if (temp[j] == mval) ++mcnt;
            }
            rmax[i][1] = mval;
            rcnt[i][1] = mcnt;
            for(j=k+1; j<=n; ++j) {
                scanf("%d",temp+j);
                int in = temp[j];
                int out = temp[j-k];
                if (in > mval) {
                    mval = in;
                    mcnt = 1;
                } else if (in==mval && out<mval) ++mcnt;
                else if (in<out && out==mval) {
                    --mcnt;
                    if(!mcnt) {
                        for(x=j-k+1,mval=0,mcnt=0; x<=j; ++x) {
                            if (temp[x] > mval) {
                                mval = temp[x];
                                mcnt = 1;
                            } else if (temp[x]==mval) ++mcnt;
                        }
                    }
                }
                rmax[i][j-k+1] = mval;
                rcnt[i][j-k+1] = mcnt;
            }
        }

        for(j=1;j<=n;++j) {
            for(i=1,mval=0,mcnt=0; i<=k; ++i) {
                if (rmax[i][j] > mval) {
                    mval = rmax[i][j];
                    mcnt = rcnt[i][j];
                } else if (rmax[i][j] == mval) mcnt += rcnt[i][j];
            }
            cmax[1][j] = mval;
            ccnt[1][j] = mcnt;

            for(i=k+1; i<=m;++i) {
                int in = rmax[i][j];
                int out = rmax[i-k][j];
                if(in>mval) {
                    mval = in;
                    mcnt = rcnt[i][j];
                } else if (in==mval && out<mval) mcnt += rcnt[i][j];
                else if(in<out && out==mval) {
                    mcnt -= rcnt[i-k][j];
                    if (!mcnt) {
                        for(x=i-k+1, mval=0,mcnt=0; x<=i; ++x) {
                            if (rmax[x][j] > mval) {
                                mval = rmax[x][j];
                                mcnt = rcnt[x][j];
                            } else if (rmax[x][j] == mval) mcnt += rcnt[x][j];
                        }
                    }
                } else if (in==mval && out==mval) {
                    mcnt -= rcnt[i-k][j];
                    mcnt += rcnt[i][j];
                }
                cmax[i-k+1][j] = mval;
                ccnt[i-k+1][j] = mcnt;
            }
        }

        printf("Case %d:\n", tt);
        for(i=1; i<=m-k+1; ++i) {
            for(j=1; j<n-k+1; ++j) {
                if (ccnt[i][j]>1) printf("%d(%d) ",cmax[i][j],ccnt[i][j]);
                else printf("%d ",cmax[i][j]);
            }
            if (ccnt[i][j]>1) printf("%d(%d)\n",cmax[i][j],ccnt[i][j]);
            else printf("%d\n",cmax[i][j]);
        }
        printf("\n");
    }
    return 0;
}
