#include <cstdio>
#include <algorithm>
#include <cstring>

using namespace std;

const int MOD   = 1000000007;
const int MAX_N = 100;

typedef unsigned long long ULL;

int capapcity[MAX_N+1];
ULL dp[MAX_N+1][MAX_N+1];

int main()
{
    int T;
    scanf("%d", &T);
    for(; T>0; T--)
    {
        memset(capapcity, 0, sizeof(capapcity));
        memset(dp       , 0, sizeof(dp));
        int n, m, dishes;
        scanf("%d %d", &n, &m);
        dishes = n;
        for(int i=0; i<m; i++)
        {
            int xi, yi;
            scanf("%d %d", &xi, &yi);
            capapcity[i] = yi - xi;
            dishes -= xi;
        }

        for(int k=0; k<=min(capapcity[0], dishes); k++)
            dp[0][k] = 1;

        for(int i=1; i<m; i++)
            for(int j=0; j<=dishes; j++)
            {
                for(int k=0; k<=capapcity[i]; k++)
                    if (j-k>=0)
                        dp[i][j] += dp[i-1][j-k];
                dp[i][j] %= MOD;
            }

        printf("%lld\n", dp[m-1][dishes]);
    }
}
