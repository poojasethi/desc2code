#include <iostream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <math.h>
#include <cstdio>
 
#define FOR(i,x,y) for(int i=(x);i<(y);i++)
#define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
#define MIN(x,y) ((x)<(y)?(x):(y))
#define MAX(x,y) ((x)>(y)?(x):(y))
#define ABS(x) ((x)>0?(x):-(x))
#define SQ(x) ((x)*(x))
#define mset(x,y) memset(x,y,sizeof(x))
#define MOD 1000000007
typedef long long int lli;
typedef long double ld;

using namespace std;



int main()
{
	int dp[110][110];
	int x[110],y[110];
	int n,m;
  //  freopen("inp.txt","r",stdin);
    int t;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%d%d",&n,&m);
    	for(int i=0;i<m;i++) scanf("%d%d",&x[i],&y[i]);
    	for(int i=0;i<=n;i++) dp[0][i]=0;
    	for(int i=x[0];i<=y[0];i++)dp[0][i]=1;
    	for(int i=1;i<m;i++)
    		for(int j=0;j<=n;j++)
    			{
    				dp[i][j]=0;
    				for(int k=x[i];k<=y[i];k++)
    				if(j-k>=0)
    				{
    					dp[i][j]+=dp[i-1][j-k];
    					if(dp[i][j]>=MOD) dp[i][j]-=MOD;
    				}
    			}
    	printf("%d\n",dp[m-1][n]);
    }
    return 0;
    
}