#include <iostream>
#include <cstdio>
#include <ctime>
#include <cmath>
#define db double
#define ull unsigned long long int
#define gc getchar_unlocked
using namespace std;
ull read_int() {
	char c = gc();
	int sign = 1;
  	while((c<'0' || c>'9') && c!='-') c = gc();
  		if(c=='-') {
    		sign = -1;
    		c = gc();
  		}
  	ull ret = 0;
  	while(c>='0' && c<='9' ) {
    	ret = 10 * ret + c - 48;
    	c = gc();
  	}
 	 return ret*sign;
}
void foutput(int n)
{
    if(n==0)
    {
        putchar('0');
    }
    else    {
        if(n < 0) {
            putchar('-');
            n*=-1;
        }
        char temp[64];
        int sze=0;
        while(n > 0) {
            temp[sze++] = '0' + n%10;
            n/=10;
        }
        for(int i=sze-1;i>=0;i--)
        {
            putchar(temp[i]);
        }
    }
}
bool check(ull n)
{
	int temp;

	while (n >= 10) {
		temp = n%10;
		if (temp == 0 || temp == 1 || temp == 4 || temp == 9) {
			n = n/10;
		}
		else 
			return 0;
	}
	if (n == 0 || n == 1 || n == 4 || n == 9)
		return 1;
	else
		return 0;
}
int main()
{
	bool x;
	int temp3,count,j,t;
	ull temp,temp1,a,b,c;
	ull s[100002];
	s[0] = 1;
	s[1] = 2;
	s[2] = 3;
	s[3] = 4;
	for (ull i = 4; i <= 100000; i++) {
		temp = i*i;
		x = check(temp);
		if (x)
			s[i] = s[i-1] + 1;
		else
			s[i] = s[i-1];
	}
	t = read_int();
	for (int i = 0; i < t; i++) {
		a = read_int();
		b = read_int();
		temp = (int)sqrt(a);
		temp3 = (int)sqrt(b);
		c = temp*temp;
		if (c < a) {
			temp++;
		}
		temp1 = temp*temp;
		x = check(temp1);
		if (x)
			count = s[temp3] - s[temp] + 1;
		else
			count = s[temp3] - s[temp];
		foutput(count);
		printf("\n");
	}
}