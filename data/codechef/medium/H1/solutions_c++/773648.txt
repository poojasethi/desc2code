#define DEBUG 0

#include <stdio.h>
#include <string.h>
#include <queue>
using namespace std;

int ans[362880];
int is_prime[]={1,1,1,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1};

int conv(int a[3][3]) {
  int s=0, x, y, c[9], i, j, cr, m=40320;
  for(y=0;y<3;y++)
    for(x=0;x<3;x++)
      c[y*3+x]=a[x][y]-1;
  for(i=0; i<8; i++) {
    cr=c[i];
    for(j=0; j<i; j++)
      if(c[j]<c[i])
        cr--;
    s+=cr*m;
    m/=(8-i);
  }
  return s;
}

void swap(int a[3][3], int x1, int y1, int x2, int y2) {
  int tmp;
  tmp=a[x1][y1];
  a[x1][y1]=a[x2][y2];
  a[x2][y2]=tmp;
}

typedef struct {
  int a[3][3];
  int step;
} node;

queue<node> q;

void bfs(void) {
  node n;
  int x, y, s;
  while(!q.empty()) {
    n=q.front();
    q.pop();

    s=conv(n.a);

    if(DEBUG) {
      for(y=0;y<3;y++) {
        for(x=0;x<3;x++)
          printf("%d ", n.a[x][y]);
        printf("\n");
      }
      printf("step=%d code=%d\n", n.step, s);
    }

    if(ans[s]) {
      if(DEBUG)
        printf("repeat\n");
      continue;
    }
    ans[s]=n.step;

    n.step++;
    //if(n.step==9)
      //return;

    for(y=0;y<3;y++)
      for(x=0;x<3;x++) {
        if(x<2&&is_prime[n.a[x+1][y]+n.a[x][y]]) {
          swap(n.a, x+1, y, x, y);
          q.push(n);
          swap(n.a, x+1, y, x, y);
        }
        if(y<2&&is_prime[n.a[x][y+1]+n.a[x][y]]) {
          swap(n.a, x, y+1, x, y);
          q.push(n);
          swap(n.a, x, y+1, x, y);
        }
      }
  }
  return;
}

int main(void) {
  int tc, s, x, y, i, a[3][3];
  node n;
  memset(ans, 0, sizeof(ans));
  n.step=1;
  for(y=0;y<3;y++)
    for(x=0;x<3;x++)
      n.a[x][y]=y*3+x+1;
  q.push(n);
  bfs();

  scanf("%d", &tc);
  while(tc--) {
    for(y=0;y<3;y++)
      for(x=0;x<3;x++)
        scanf("%d", &a[x][y]);
    printf("%d\n", ans[conv(a)]-1);
    if(DEBUG)
      printf("code=%d\n", conv(a));
  }
  return 0;
}
