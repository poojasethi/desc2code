//problema A
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
 
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <list>
 
#include <sstream>
#include <iostream>
#include <iomanip>
 
using namespace std;
 
typedef  long long int64;
 
#define forn(i, n) for(int64 i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int64 i = a; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) (a).size()
#define all(a) a.begin(), a.end()
#define VI vector<int>
#define VVI vector < vector < int > > 
#define PII vector<pair<int,int> >
#define iss istringstream //>>
#define MAX 105
#define MOD 1000000007
const long double EPS = 1E-9;
const int INF = (int)1E9;
const int64 INF64 = (int64)1E18;
const long double PI = 2 * acos(.0);

map < int, int > resp;

int ini;
int goal;
bool isp[20] = {0, 0, 1, 1, 0 ,1, 0, 1, 0 ,0 , 0 , 1, 0 , 1 ,0 , 0, 0, 1, 0 , 1};
int mx[2] = { 1, 0 };
int my[2] = { 0, 1};
int aux[3][3];
void bfs(){
	ini = 123456789;
	resp[ini] = 1;
	queue <int> cola;
	cola.push(ini);
	while(!cola.empty()){
		int tope = cola.front();
		cola.pop();
		int cur = resp[tope];
		aux[0][0] = tope / 100000000;
		tope %= 100000000;
		aux[0][1] = tope / 10000000;
		tope %= 10000000;
		aux[0][2] = tope / 1000000;
		tope %= 1000000;
		aux[1][0] = tope / 100000;
		tope %= 100000;
		aux[1][1] = tope / 10000;
		tope %= 10000;
		aux[1][2] = tope / 1000;
		tope %= 1000;
		aux[2][0] = tope / 100;
		tope %= 100;
		aux[2][1] = tope / 10;
		tope %= 10;
		aux[2][2] = tope ;
		/*forn(i, 3){
			forn(j,3){
				cout << aux[i][j] << " ";
			}
			cout << endl;
		}*/
		forn(i, 3){
			forn(j, 3){
				forn(k, 2){
					int mox = mx[k] + i;
					int moy = my[k] + j;
					if(mox < 3  && moy < 3  && isp[aux[mox][moy] + aux[i][j]] ){
						swap(aux[mox][moy], aux[i][j]);
						int conv = 0;
						forn(l, 3) conv = (conv + aux[0][l]) * 10;
						forn(l, 3) conv = (conv + aux[1][l]) * 10;
						forn(l, 2) conv = (conv + aux[2][l]) * 10;
						conv += aux[2][2];
						if(resp[conv] == 0){
							if(conv == 123456789) cout << "wdf" << endl;
							resp[conv] = cur + 1;
							cola.push(conv);
						}
						swap(aux[mox][moy], aux[i][j]);
					}
				}	
			}
		}
		
	}
	return ;
}

int main(){
	int t , aux2;
	cin >> t;
	bfs();
	
	while(t --){
		goal = 0;
		forn(i, 8){
			cin >> aux2;
			goal += aux2;
			goal *= 10;
		}
		cin >> aux2;

		goal += aux2;
		cout << resp[goal] - 1 << endl;
	}
	
	return 0;
}
