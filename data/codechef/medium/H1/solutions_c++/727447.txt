// A puzzle game

#include <iostream>
#include <map>
#include <queue>
#include <string>
#include <ctime>
using namespace std;

int prime[]={ 0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1 };
int answer[362881];
int ans=0,index=0,val=1;
queue<string> Q[2];

int to_id(const string& A)
{
	int id=0,c;
	for(int i=0;i<9;i++)
	{
		c=0;
		for(int j=i+1;j<9;j++)
			if( A[i]>A[j] )
				c++;
		id = id*(9-i)+c;
	}
	return id;
}

void trying(string& A,int i,int j)
{
	if( prime[ A[i]+A[j]-'0'-'0' ] )
		{
			swap(A[i],A[j]);
			if( !answer[ to_id(A) ] )
				Q[1-index].push(A);
			swap(A[i],A[j]);
		}
}

void init()
{
	Q[0].push("123456789");
	while( !Q[0].empty() || !Q[1].empty())
	{
		while(!Q[index].empty())
		{
			string str = Q[index].front();
			Q[index].pop();

			if( answer[ to_id(str) ] )
				continue;
			answer[ to_id(str) ]=val;



			for(int i=0;i<6;i++)
					trying(str,i,i+3);
			for(int i=0;i<9;i++)
				if( i%3!=2)
					trying(str,i,i+1);
		}
		index=1-index;
		val++;
	}
}

int main()
{
	init();

	int t,x;
	string str;
	for(cin>>t;t;t--)
	{
		str.clear();
		for(int i=0;i<9;i++)
			cin>>x,str+=char(x+'0');
		cout << answer[ to_id(str) ] - 1 << '\n';
	}

	return 0;
}



