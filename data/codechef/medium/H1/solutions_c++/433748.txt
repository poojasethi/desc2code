#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>


#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define pb push_back
typedef long long LL;
using namespace std;

map<int,int> mp;
int p[20]= {0,0,1,1,0,1,0,1,0,0,0,1,0,1,0,0,0,1,0,1};

void swap(int &a,int &b)
{
    int c;
    c=a;
    a=b;
    b=c;
}

int toint(int a[9])
{
    int ans=0;
    for(int i=0;i<9;i++){
        ans*=10;
        ans+=a[i];
    }
    return ans;
}


void initialise()
{
    int ans=123456789,tt,s;
    queue<int> q;
    q.push(ans);
    mp[ans]=0;
    while(!q.empty()) {
        tt=q.front();
        q.pop();
        s=mp[tt];
        int temp[9];
        for(int i=8;i>=0;i--){
            temp[i]=tt%10;
            tt/=10;
        }
        for(int i=0; i<8 ; i++) {
            int x;
            x=temp[i]+temp[i+1];
            if(p[x]!=1)
                continue;
            if(i==2 || i==5)
                continue;
            swap(temp[i],temp[i+1]);
            int y=toint(temp);
            if(mp[y]==0 && y!=ans){
                mp[y]=s+1;
                q.push(y);
            }
            swap(temp[i],temp[i+1]);
        }

        for(int i=0; i<6 ; i++) {
            int x;
            x=temp[i]+temp[i+3];
            if(p[x]!=1)
                continue;
            swap(temp[i],temp[i+3]);
            int y=toint(temp);
            if(mp[y]==0 && y!=ans){
                mp[y]=s+1;
                q.push(y);
            }
            swap(temp[i],temp[i+3]);
        }
    }
}

int main()
{
    //freopen("input.txt","r",stdin);
    int t;
    cin>>t;
    initialise();
    int ans=123456789;
    while(t--) {
        int inp=0;
        for(int i=0;i<9;i++){
            int x;
            cin>>x;
            inp*=10;
            inp+=x;
        }
        if(mp[inp] || inp==ans)
            cout<<mp[inp]<<endl;
        else
            cout<<"-1\n";
    }
}
