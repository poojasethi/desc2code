#include<stdio.h>
#include <string.h>
#define gc getchar_unlocked

#define tr(c,i) for(auto i=(c).begin(); i != (c).end(); i++)
#define rep(i,n) for(int i=0;i<(n);i++)
#define forup(i,a,b) for(int i=(a);i<=(b);i++)
#define fordown(i,a,b) for(int i=(a);i>=(b);i--)
#define tcsolve() int tcs; scanint(tcs) ; forup(tc, 1, tcs) solve();
#define lli long long unsigned int

lli map[600000];

void scanint(int &x)
{
	register int c = gc();
	x = 0;
	for(;(c<48 || c>57);c = gc());
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

lli pow (lli num, int power)
{
	if (power == 0)
		return 1;

	num %= 1000000007;

	if (power & 1)
		return num * pow (num, power-1);
	else
		return pow (num*num, power/2);
}

lli powof2 (lli num, lli power)
{
	if (power == 0)
		return 1;

	lli result = powof2(num, power>>1);

	result = (result * result) % 1000000007;

	if (power & 1)
		return (result*num) % 1000000007;
	
	return result;
}


lli decimal_binary(int n)  /* Function to convert decimal to binary.*/
{
	lli binary = 0;
	lli rem, i=1;
	while (n!=0)
	{
		rem=n%2;
		n/=2;
		binary+=rem*i;
		i*=10;
	}
	return binary;
}


void solve ()
{
	int num;

	scanint(num);

	if (map[num] == 0)
	{
		lli result = powof2(2, decimal_binary(num));

		result %= 1000000007;

		result = (result * result) % 1000000007;
		
		map[num] = result;
	}

	printf("%llu\n", map[num]);

}


int main ()
{
	memset(map, 0, sizeof(map));
	tcsolve();

	return 0;
}