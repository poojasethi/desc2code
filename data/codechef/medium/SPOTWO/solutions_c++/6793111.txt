#include <stdio.h>
 
int d[25], nd;
 
unsigned long long Convert(int N) {
	unsigned long long ans = 0;
	nd = 0;
	while (N > 0) {
		nd++;
		d[nd] = N & 1;
		N >>= 1;
	}
 
	for (int i = nd; i >= 1; i--)
		ans = ans * 10 + d[i];
 
	return ans;
}
 
#define MOD 1000000007
 
unsigned long long RaiseToPow(unsigned long long x, unsigned long long y) {
	if (y == 0)
		return 1;
	unsigned long long result = RaiseToPow(x, y >> 1);
	result = (result * result) % MOD;
	if (y & 1)
		result = (result * x) % MOD;
	return result;
}
 
int main() {
	int T, N;
	scanf("%d", &T);
	while (T--) {
		scanf("%d", &N);
		unsigned long long ans = RaiseToPow(2, Convert(N));
		ans = (ans * ans) % MOD;
		printf("%llu\n", ans);
	}
	return 0;
}
 