#include<iostream>
#define MOD 1000000007

#define gc getchar_unlocked
using namespace std;
long int read() {
	long int num=0;
	char c=gc();
	while (c<48) c=gc();
	while (c>47) {
		num = (num*10)+ c-48;
		c=gc();
	}
	return num;
}
int fib(int n);
void multiply(int F[2][2], int M[2][2]);
void power(int F[2][2], int n);
int main()
{
	int t,g,ans,i,count;
	int f[1000001];
	long long n;
	t=read();
	f[0]=1;
		f[1]=1;
		for(i=2;i<=1000000;i++)
		f[i]=(f[i-1]+f[i-2])%MOD;
	while(t--)
	{
		count=0;
		//cin>>n>>g;
		n=read();
		g=read();
		//ans=fib(n);
		
		//cout<<ans<<"\n";
		//i=32;
		ans=f[n];
		while(ans>0)
		{
			if(ans%2==1)
			count++;
			ans/=2;
		}
		if(count==g)
		cout<<"CORRECT\n";
		else
		cout<<"INCORRECT\n";
		
	}
}

int fib(int n)
{
  int F[2][2] = {{1,1},{1,0}};
  if (n == 0)
      return 0;
  power(F, n);
 
  return F[0][0];
}
 
void multiply(int F[2][2], int M[2][2])
{
  int x =  (F[0][0]*M[0][0] + F[0][1]*M[1][0])%MOD;
  int y =  (F[0][0]*M[0][1] + F[0][1]*M[1][1])%MOD;
  int z =  (F[1][0]*M[0][0] + F[1][1]*M[1][0])%MOD;
  int w =  (F[1][0]*M[0][1] + F[1][1]*M[1][1])%MOD;
 
  F[0][0] = x;
  F[0][1] = y;
  F[1][0] = z;
  F[1][1] = w;
}
 
void power(int F[2][2], int n)
{
  int i,top;
  int a[20];
  top=0;
  int M[2][2] = {{1,1},{1,0}};
 
  // n - 1 times multiply the matrix to {{1,0},{0,1}}
  int k=n;
  while(k>1)
  {
  	a[top++]=k;
  	k/=2;
  }
  //for (i = 2; i <= n; i++)
    //  multiply(F, M);
  while(top--)
  {
  	multiply(F,F);
  	if(a[top]%2==1)
  	multiply(F,M);
  }
}
