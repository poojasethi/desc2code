#include <iostream>
using namespace std;
#include<stdio.h>
typedef unsigned long int ull;
ull f[1000002];
const ull mod =1000000007;
void solve()
{
	f[1]=1;f[2]=2;
	for(ull i=3;i<=1000000;i++)
	{
		f[i]=(f[i-1]+f[i-2])%mod;
	}
}
// faster input bitwise
inline ull get_int() //it works for (int ll l ull)
{
  int n=0,neg=0,c=getchar_unlocked();
  while((c<'0'||c>'9')&&c!='-')c=getchar_unlocked();
  if(c=='-') {neg=1;c=getchar_unlocked();}
  while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=getchar_unlocked();
  if(neg) n=-n;
  return n;
}
int main() 
{
	solve();
	ull t=get_int();
	while(t--)
	{
		ull n,g;
		n=get_int();g=get_int();
		ull x=f[n];
		ull count =0;
		while(x)
		{
			x=x&(x-1);
			count++;
		}
		if(count==g)
			printf("CORRECT\n");
		else 
			printf("INCORRECT\n");
	}
	// your code goes here
	return 0;
}