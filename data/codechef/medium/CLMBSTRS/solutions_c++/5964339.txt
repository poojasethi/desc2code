#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <list>
#include <map>
#include <queue>
#include <stack>
#include <set>
#include <cassert>
#include <climits>
#include <functional>
#include <bitset>


using namespace std;

#define din 2
#define MOD 1000000007
#define for(i,n) for(int i=0;i<n;i++)
//#define long long ll
struct matrix
{
     int  aa[din][din];
       }; 
       
      long long int ones(long long int n)
{
	long long int ans = 0;
	while(n > 0)
	{
		if(n%2 == 1)
		{
			ans = ans + 1;
			n = n/2;
		}
		else
			n = n/2;
	}
	return ans;
}

       matrix mul(matrix m,matrix n)
       {//cout<<"inn"<<endl;
            matrix res;
           
            
            for(i,2)
            {for(j,2)
            {res.aa[i][j]=0;
            for(k,2)
            {
                    res.aa[i][j]+=((m.aa[i][k])*(long long)(n.aa[k][j]))%MOD;
                  
                    }res.aa[i][j]=     res.aa[i][j]%MOD;
                     
                     
                     }
                    
                    
                    
                    
                    }
            
            
            
            return res;
            
            }
       
    
       matrix fibonum(matrix m,int n)
       {
              if(n==1)
              return m;
              
              matrix u=mul(m,m),p;
              
             p =fibonum(u,n/2);
              
             
               if(n&1)
             { p= mul(m,p);}
               return p;
              
              
              
              }
int main()
{
    
    matrix fib,res;
    fib.aa[0][0]=1;fib.aa[0][1]=1;
        fib.aa[1][0]=1;fib.aa[1][1]=0;
        
        int t;
        scanf("%d",&t);
        while(t--)
        {
        int n,m;
        scanf("%d %d",&n,&m);
        
        
              if(n==1 && ones(n)==m)
                printf("%s\n", "CORRECT");
              if(n==1 && ones(n)!=m)
                printf("%s\n", "INCORRECT");
                if(n==2 && ones(n)==m)
                 printf("%s\n", "CORRECT");
                if(n==2 && ones(n)!=m)
                printf("%s\n", "INCORRECT");
               
              
               if(n>2)
               {
                  // int yc=ones(m);
                   
             res=   fibonum(fib,n-2);   
                  // cout<<res.aa[0][0]<<res.aa[0][1]<<endl;
                   //cout<<res.aa[1][0]<<res.aa[1][1]<<endl;
                   
                   
                 long long  int val= (  (( res.aa[0][0]*2)% MOD +  ( res.aa[0][1]*1)% MOD ) ) % MOD;
                  // cout<<"val"<<val<<yc;
                   
                   if(m ==ones(val) )
                  printf("%s\n", "CORRECT");
                   else
                 printf("%s\n", "INCORRECT");
                   }
    //   printf("\n");
        
        
        }  
    
    
   // getch();
    return 0;
}
