#include<vector>
#include<algorithm>
#include<stdlib.h>
#include<iostream>
#include<utility>
using namespace std;
int main()
{
	int n,k,i,j,min,l,max,count,pos,helper=0;
	scanf("%d %d",&n,&k);
	pair<int,int> vec[n];
	for(i=0;i<n;i++)
	{
		scanf("%d",&j);
		vec[i]=make_pair(j,i);
	}
	sort(vec,vec+n);
	//printf("%d",vec[0].second);
	i=0;
	while(i<n)
	{
		helper++;
		j=i+1;
		while(j<n && vec[i].first==vec[j].first && vec[j].second-vec[i].second<k)
			j++;
		i=j;
	}
	/*vector<int> vec_heap(vec);
	make_heap(vec_heap.begin(),vec_heap.end(),heap_com);
	while(!vec_heap.empty())
	{
		min=vec_heap.front();
		pop_heap(vec_heap.begin(),vec_heap.end(),heap_com);
		vec_heap.pop_back();
		max=0;
		count=0;
		pos=-1;
		for(i=0;i<n-k+1 && i<1;i++)
		{
			count=0;
			for(j=0;j<k;j++)
			{
				if(vec[i+j]==min)
				{
					count++;
				}
			}
			if(count>max)
			{
				max=count;
				pos=i;
			}
		}
		for(i=1;i<n-k+1;i++)
		{	
			if(vec[i-1]==min)
				count--;
			if(vec[i+k-1]==min)
				count++;
			if(count>max)
			{
				max=count;
				pos=i;
			}
		}
		if(pos==-1)
			continue;
		helper++;
		for(i=pos;i<pos+k;i++)
		{
			if(vec[i]==min)
			{
				vec[i]=-1;
			}
		}
	}*/
	printf("%d\n",helper);
	return 0;
}