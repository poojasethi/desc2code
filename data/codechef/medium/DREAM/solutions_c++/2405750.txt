#include<cstdio>
#include<algorithm>
using namespace std;
struct node{
	int value;
	int index;
};

void merge(node* ptr,int a1,int b1,int c1){
    int n=c1-a1+1;
	node* temp=new node[n];
	int k=0;
	int j=a1;
	for(int i=b1;i<=c1;i++){
		while(ptr[i].value>=ptr[j].value && j<b1){
			temp[k++]=ptr[j];
			j++;
		}
		temp[k++]=ptr[i];
	}
	for(int i=j;i<b1;i++){
		temp[k++]=ptr[i];
	}
	k=0;
	for(int i=a1;i<=c1;i++){
		ptr[i]=temp[k++];
	}
    delete[] temp;
}


void merge_sort(node* ptr,int low,int high){

    if(low>=high)
    return;

    if(low==high-1){
		if(ptr[low].value>ptr[high].value){
		node temp=ptr[low];
		ptr[low]=ptr[high];
		ptr[high]=temp;
	}
		return;
	}
	merge_sort(ptr,low,(low+high)/2);
	merge_sort(ptr,(low+high)/2+1,high);
	merge(ptr,low,(low+high)/2+1,high);
}

int main(){
	int n,k,counter=0,i,j,ctr;
	scanf("%d%d",&n,&k);
	node* arr=new node[n+1];
	for(int i=0;i<n;i++){
		scanf("%d",&arr[i].value);
		arr[i].index=i;
	}
	merge_sort(arr,0,n-1);
	i=0;
	while(i<n){
		ctr=1;
		j=i;
		while(ctr<=k){
			if(arr[i].value==arr[i+1].value && arr[i+1].index-arr[j].index<k){
				ctr++;
				i++;
			}
			else{
				break;
			}
		}
		counter++;
		i++;
	}
	printf("%d\n",counter);
	return 0;
}
