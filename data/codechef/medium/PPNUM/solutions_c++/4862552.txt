#include<stdio.h>
#define M 1000000007

using namespace std;

int power[10];

int sum(int n)
{
    long long int res=( ( (long long) n * ( n + 1 ) ) / 2 ) % M ;
    return (int)res;
}

int digits(int n)
{
    int res=0;
    while(n>0)
    {
        res++;
        n=n/10;
    }
    return res;

}



int count1(int l,int r)
{
    long long int res=(long long)0;
    int nod1=digits(l);
    int nod2=digits(r);
    while(nod1 != nod2)
    {
        int temp1 = power[nod1]-1;
        int t2=( sum(temp1) - sum(l-1) ) ;
        if(t2 < 0)
            t2 = t2 + M;
        res=( res + ( ( t2 ) * (long long)nod1 )% M) % M;
        l=temp1+1;
        nod1++;
        //printf("%d ",t2);
    }
    int t2=sum(r)-sum(l-1);
    //printf("\n%d %d %d",t2,sum(r),sum(l-1));
    if(t2 < 0)
        t2= t2 + M;
    res=(res + ((t2) * (long long)nod1)% M) % M;

    return (int)res;
}


int main()
{
    long long int res=(long long)1;
    for(int i=0;i<10;i++)
    {
        power[i]=res;
        res=res*10;
    }

    int t;
    scanf("%d",&t);
    while(t--)
    {
        int l,r;
        scanf("%d%d",&l,&r);
        printf("%d\n",count1(l,r));
    }




    return 0;
}
