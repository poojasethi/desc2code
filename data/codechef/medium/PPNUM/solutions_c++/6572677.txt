#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<time.h>
#include<algorithm>
#include<vector>
#include<map>
#include<iostream>
#include<functional>
using namespace std;

#define gc getchar_unlocked
typedef unsigned long long ull;
void scanint(int &x);
void scanlong(ull &x);
int countDig(ull);

unsigned const modVal=1000000007;
unsigned const twoInverseMod=500000004;

typedef struct
{
    ull left;
    ull right;
    ull count;
    ull res;
}data;

int main()
{ 
    int noOfTestCase;
    scanint(noOfTestCase);
    ull left,right;
    data preCompute[11]={0};
    for(int i=1;i<11;++i)
    {
        preCompute[i].left=(ull)pow((double)10,i-1);
        preCompute[i].right=(ull)pow((double)10,i)-1;
        preCompute[i].count=i;
        ull temp1=preCompute[i].right-preCompute[i].left+1;
        ull temp2=preCompute[i].right+preCompute[i].left;
        preCompute[i].res=(((((temp1*temp2)%modVal)*twoInverseMod)%modVal)*preCompute[i].count)%modVal;
        //printf("%lld %lld %lld %lld\n",preCompute[i].count,preCompute[i].left,preCompute[i].right,preCompute[i].res);
    }
    preCompute[10].res=1000000000;
    
    for(int i=0;i<noOfTestCase;++i)
    {
        scanlong(left);scanlong(right);
        int leftDig=countDig(left);
        int rightDig=countDig(right);
        if(leftDig == rightDig)
        {
           ull temp1=right-left+1;
           ull temp2=left+right;
           printf("%lld\n",(((((temp1*temp2)%modVal)*twoInverseMod)%modVal)*leftDig)%modVal);
        }
        else
        {
            ull res=0;
            ull temp1 = preCompute[leftDig].right-left+1;
            ull temp2 = left+preCompute[leftDig].right;
            res+=(((((temp1*temp2)%modVal)*twoInverseMod)%modVal)*leftDig)%modVal;
            res%=modVal;
            
            for(int i=leftDig+1;i<=rightDig-1;++i)
            {
                res=(res+preCompute[i].res)%modVal;
            }
            
            temp1=right-preCompute[rightDig].left+1;
            temp2=preCompute[rightDig].left+right;
            res+=(((((temp1*temp2)%modVal)*twoInverseMod)%modVal)*rightDig)%modVal; 
            res%=modVal;
            printf("%lld\n",res);
        }
    }
    return 0;
}

int countDig(ull val)
{
    int x=0;
    while(val>0)
    {
        x++;
        val/=10;
    }
    return x;
}

void scanint(int &x)
{
    int flag=0;
    register int c = gc();
    if(c == '-') flag=1;
    x = 0;
    for(; (c<48 || c>57); c = gc());
    for(; c>47 && c<58; c = gc())
    {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(flag == 1)x=-x;
}

void scanlong(ull &x)
{
    int flag=0;
    register int c = gc();
    if(c == '-') flag=1;
    x = 0;
    for(; (c<48 || c>57); c = gc());
    for(; c>47 && c<58; c = gc())
    {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(flag == 1)x=-x;
}
