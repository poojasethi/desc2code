#include<iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <climits>
//#include <ext/hash_map>
//#include<tr1/random>
 
using namespace std;
using namespace __gnu_cxx;
 
#define REP(i,n) for(int i = 0; i < int(n); ++i)
#define REPV(i, n) for (int i = (n) - 1; (int)i >= 0; --i)
#define FOR(i, a, b) for(int i = (int)(a); i < (int)(b); ++i)
 
#define FE(i,t) for (__typeof((t).begin())i=(t).begin();i!=(t).end();++i)
#define FEV(i,t) for (__typeof((t).rbegin())i=(t).rbegin();i!=(t).rend();++i)
 
#define two(x) (1LL << (x))
#define ALL(a) (a).begin(), (a).end()

#define pb push_back
#define ST first
#define ND second
#define MP(x,y) make_pair(x, y)


typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<string> vs;

void p(int a[],int n){
	REP(i,n)
		printf("%d ",a[i]);
	printf("\n");
	return;
}

void p(char a[],int n){
	REP(i,n)
		printf("%c ",a[i]);
	printf("\n");
	return;
}

void swap(void *vp1,void *vp2,int size){
		char temp[size];
		memcpy(temp,vp1,size);
		memcpy(vp1,vp2,size);
		memcpy(vp2,temp,size);
		return;
}

int main(){
	int testcases,size,i;
	scanf("%d",&testcases);
	std::string cas;
	bool a[testcases][testcases];
	for(int i=0;i<testcases;i++){
		for(int j=0;j<testcases;j++){
			cin >> cas;
			a[i][j]=false;
			if (cas=="YES")
				a[i][j]=true;
		}
	}
	bool outputResult[testcases];
	bool bit=false;
	bool flag;
	for(int i=0;i<testcases;i++){
		for(int j=0;j<testcases;j++){
			bit = true ;
//			cout << "at start bit = " << bit << endl;
			for(int k=0;k<testcases;k++){				
				if(a[i][k]!=a[j][k]){
					bit = false;
					break;
				}
//				cout << "k = " << k << " and for bits " << a[i][k] << " and " << a[j][k] << " ans  = " << ((a[i][k])^(a[j][k])) << endl;
			}
			outputResult[j]= bit;
//			cout << "j = " << j << " bit = " << outputResult[j] << endl;
		}
		flag = true;
//		for(int lam=0;lam<testcases;lam++)
//			cout<<  outputResult[lam] << " " ;
//		cout << endl;
		for(int lam=0;lam<testcases;++lam)
			if(outputResult[lam]!=a[i][lam]){
				flag = false;
				break;
			}
		if(flag==true)
			break;
	}
//	cout << "ans = " ;
	if(flag==true){
	for(int lam=0;lam<testcases;lam++){
		if(outputResult[lam]==true)
			printf("YES\n");
		else
			printf("NO\n");
	}
	}
	if(flag==false)
		for(int lam=0;lam<testcases;lam++)
			printf("NO\n");

//	cout << endl;

	//printOutputResult

//	cout<<endl;
	return 0;
}

