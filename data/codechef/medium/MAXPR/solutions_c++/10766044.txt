//Archit Rai
#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define sz(a) (int)(a.size())
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define REP(i,a,b) for(int i=a;i<b;i++)
#define MOD 1000000007
#define endl '\n'
#define PIN(n) printf("%d\n",n)
#define PLLN(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)
typedef long long int ll;
#define N 200010
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
	return (a*y)%MOD;
    return y%MOD;
}

inline void FINT(int &x)
{
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    if(c=='-') {
	neg = 1;
	c = getchar_unlocked();
    }
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
	x = (x<<1) + (x<<3) + c - 48;
    }
    if(neg)
	x = -x;
}


//Template ends here
int dp[N],sum[103];
int a[N];
ll temp[N];
int main()
{
    temp[0] = 1;
    REP(i,1,N)
    {
	temp[i] = temp[i-1]*2;
	if(temp[i]>MOD) temp[i] %= MOD;
    }
    int tc;
    FINT(tc);
    while(tc--)
    {
	int n;
	FINT(n);
	ll ans=0;
	int m=0,mi=101;
	REP(i,1,n+1)
	{
	    FINT(a[i]);
	    m=max(m,a[i]);
	    mi=min(mi,a[i]);
	}
	int curr=0;
	REP(d,mi-m,m-mi+1)
	{
	    memset(sum,0,sizeof(sum));
	    curr=0;
	    for(int i=1;i<=n;i++)
	    {
		int val=1LL;
		if((a[i]-d)>=1 && (a[i]-d)<=100)
		{
		    val+=(ll)sum[a[i]-d];
		    if(val>MOD)
			val%=MOD;
		}
		sum[a[i]]+=val;
		if(sum[a[i]]>MOD)
		    sum[a[i]]%=MOD;
		curr+=val;
		if(curr>MOD)
		    curr%=MOD;
	    }
	    ans+=curr;
	    ans-=n;
	    while(ans<0)
		ans+=MOD;
	}
	ans+=n;
	if(ans>MOD)
	    ans%=MOD;
	int ans1=(int)temp[n]-1-(int)ans;
	while(ans1<0)
	    ans1+=MOD;
	PIN(ans1);
    }
    return 0;
}
