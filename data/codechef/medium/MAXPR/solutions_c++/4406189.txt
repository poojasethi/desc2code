#include <iostream>
#include <algorithm>
#include <cmath>
#include <string>
#include <cstring>
#include <cstdio>
#include <map>
using namespace std;
    int dp[105][205];
    int b[105];
    #define mod 1000000007
    typedef long long LL;
LL Pow(LL a,LL b){
    LL ans=1;
    while(b){
        if(b&1) b--,ans=(ans*a)%mod;
        else b>>=1,a=(a*a)%mod;
    }
    return ans;
}
    int main()
    {
    int i,j,t,n,x;
    cin>>t;
    while(t--)
    {
    memset(dp,0,sizeof(dp));
    memset(b,0,sizeof(b));
    cin>>n;
    for( i = 0; i < n; i++)
    {
        cin>>x;
        for( j = 1; j <= 100; j++){
            int d = x - j;
            if(d == 0){
                dp[x][d+100] = ((2 * dp[x][d+100]) + 1) % mod;
            }
            else{
                dp[x][d+100] += dp[j][d+100] + b[j];
                dp[x][d+100]%=mod;
            }
        }
        b[x]++;
    }
    long long x = 0,tot;
    for( i = 0; i <= 100; i++)
    {
    for( j = 0; j <= 200; j++)
    {
    x = (x + dp[i][j]) % mod;
    }
    }
    tot=(Pow(2,n)-1)%mod;
    tot=(tot-x)%mod;
    tot=(tot+mod)%mod;
    printf("%Ld\n",tot);
    }

    }
