#include <bits/stdc++.h>
using namespace std;



// Input Macros
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define sa(n)						scanf("%d",n)

// Useful constants
#define INF                         (int)1e9
#define EPS                         1e-9



// Useful container manipulation / traversal macros
#define forall(i,a,b)               for(int i=a;i<b;i++)
#define foreach(v, c)     for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp 							 make_pair




// Some common useful functions
#define maX(a,b) (a>b ? a : b)
#define miN(a,b) (a<b ? a : b)
#define checkbit(n,b)                ( (n >> b) & 1)
#define mod(a)(a>0 ? a : -a)

//Debugger
//#define DEBUG ;


#ifdef DEBUG
     #define debug(args...)            {dbg,args; cerr<<endl;}
										

#else
    #define debug(args...)              // Just strip off all debug tokens
#endif

struct debugger
{
    template<typename T> debugger& operator , (const T& v)
    {    
        cerr<<v<<" ";    
        return *this;    
    }
} dbg;


typedef long long LL;
typedef short int SI;

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////
//                C
///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////////////////////


int pow_r(int n)
{




LL p,k;
LL  res=1;
k=2;
	for(;n!=0;n=n>>1,k=(k*k)%1000000007)
	{
		p=n&1;
		
		if(p==1)
		{
		res=(res*k)%1000000007;
		}

		debug("baba\n");
	}



debug("power value is ",res);
return res;



}














SI *a;

int Evaluate(int n,SI *a)
{
int Sum[101];
int p,res=0;
int i;





	for(int d=-100;d<=100;d++)
	{
		for(i=n;i>0;i--)
		{

			if(((a[i]+d)<101)&&((a[i]+d)>0))
			{
				p=1+Sum[a[i]+d];
			}
		
			else
			{
				p=1;
			}


			Sum[a[i]]+=p;

			Sum[a[i]]%=1000000007;
			res+=p;
			res%=1000000007;


		}

		debug("befor d=",d,"res",res);
		res=(res-n)%1000000007;
		debug("for d=",d,"res",res);
		memset(Sum,0,404);
	}



res=(res+n)%1000000007;

debug("powr is ",pow_r(n));

res=(pow_r(n)-res-1)%1000000007;


if(res<0)
res+=1000000007;

return res;


}






int main()
{

int t,n;


a=(SI*)calloc(200001,sizeof(SI));


s(t);


while(t--)
{


	s(n);
	n++;
	forall(i,1,n)
	{

		sa(a+i);

	}

	n--;
	printf("%d\n",Evaluate(n,a));
debug("raghav is great");

memset(a,0,400002);

}








	return 0;
}