#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<ctype.h>
#include<string.h>
#include<iostream>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<set>
#include<algorithm>
#include<sstream>
using namespace std;

#define READ(a) freopen(a,"r",stdin);
#define WRITE(a) freopen(a,"w",stdout);
#define FOR(i,a,b)  for(int i=(a);i<b;i++)
#define REV(i,a,b)  for(int i=a;i>=b;i--)
#define mem(a,b) memset(a,b,sizeof(a))
#define clr(a) a.clear()
#define mp make_pair
#define pb push_back
#define SZ(a) (int)a.size()
#define all(a) (a).begin(),(a).end()
#define reall(a) (a).rbegin(),(a).rend()
#define fs first
#define sc second
#define PI (2*acos(0.0))
#define ERR (1e-7)
#define EQ(a,b) (fabs(a-b)<ERR)
#define onlyCPP ios_base::sync_with_stdio(0);cin.tie(0)
//#define FOREACH(it,x) for(__typeof((x.begin())) it=x.begin();it!=x.end();it++)
////int rrr[]={1,0,-1,0};int ccc[]={0,1,0,-1};                      //4 Direction
////int rrr[]={1,1,0,-1,-1,-1,0,1};int ccc[]={0,1,1,1,0,-1,-1,-1};  //8 direction
////int rrr[]={2,1,-1,-2,-2,-1,1,2};int ccc[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction

typedef long long ll;
typedef unsigned long long ull; //scanf("%llu",&N);
typedef vector<int>     VI;
typedef vector<string>  VS;
typedef pair<int,int>   PII;
typedef pair<int,PII >  DPII;
typedef vector<pair<int,int> >VPII;
typedef vector<pair<int,pair<int,int> > > VDPII;

const int INF=(1<<29);
const int MAX=215;

ll dp[MAX][MAX],sum[MAX];
int A[200099];
ll MOD=1000000007;

int main()
{
    onlyCPP;
    int n;
    int t;cin>>t;
    while(t--)
    {
        cin>>n;
        ll all=1;
        FOR(i,0,n)
        {
            cin>>A[i];
            all*=2;
            all%=MOD;
        }

        for(int i=0;i<MAX;i++)
        {
            sum[i]=0;
            for(int j=0;j<MAX;j++) dp[i][j]=0;
        }

        int add=102;
        for(int i=n-1;i>=0;i--)
        {
            for(int j=0;j<MAX;j++)
            {
                int nx=A[i]+j-add;
                if(nx>=0 and nx<=100)
                {
                    dp[A[i]][j]=dp[A[i]][j]+dp[nx][j]+sum[nx];
                    dp[A[i]][j]%=MOD;
                }
            }
            sum[A[i]]++;
        }

        ll ans=0;
        FOR(i,0,MAX)FOR(j,0,MAX) { ans+=dp[i][j];ans%=MOD;}

        ans=(ans+n+1)%MOD;;
        ans=all-ans;
        ans=(ans+MOD)%MOD;

        cout<<ans<<endl;
    }
    return 0;
}


/*

12
4
11 9  9 7

*/
