#include <vector>
#include <numeric>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <fstream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <limits>
#include <iomanip>

using namespace std;

#define FOR(i,a,b)		for(int i=(a),_b=(b);i<(_b);++i)
#define FORD(i,a,b)		for(int i=(a),_b=(b);i>(_b);--i)
#define pb			push_back
#define mp			make_pair
#define	sz(a)			int((a).size())
#define	all(c)			(c).begin(),(c).end()
#define	tr(c,i)	for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define	present(c,x)		((c).find(x) != (c).end())
#define	cpresent(c,x)		(find(all(c),x) != (c).end()) 

typedef long long		ll;
typedef unsigned long long	ull;
typedef vector<int>		vi;
typedef vector<vi>		vvi;
typedef vector<string>		vs;
typedef pair<int, int>		pii;
typedef vector<pii>		vpii;

const int N = 25;

int g[1005][1005];

int main()
{
#if 0
	ifstream cin("in");
#endif
#if 0
	ofstream cout("out");
#endif
	int T;
	cin >> T;
	int C,R,x,y,L;
	char c;
	string ret = "";
	while (T-- > 0) {
		cin >> C >> R >> x >> y >> L;
		memset(g,0,sizeof(g));
		g[x][y] = 1;
		pii v[L+1005];
		int k = 0;
		v[k++] = mp(x,y);
		string m;
		cin >> m;
		FOR(i,0,m.size()) {
			c = m[i];
			if (c == 'U')
				y++;
			else if (c == 'D')
				y--;
			else if (c == 'L')
				x--;
			else
				x++;
			g[x][y] = 1;
			v[k++] = mp(x,y);
		}
		ret = "WALL";
		int step = 0;
		int t = 0;
		if (c == 'U') {
			while (y < R) {
				g[v[t].first][v[t].second] = 0;
				++t;
				++y;
				if (g[x][y]) {
					ret = "BODY";
					break;
				}
				g[x][y] = 1;
				v[k++] = mp(x,y);
				step++;
			}
		} else if (c == 'D') {
			while (y > 1) {
				g[v[t].first][v[t].second] = 0;
				++t;
				--y;
				if (g[x][y]) {
					ret = "BODY";
					break;
				}
				g[x][y] = 1;
				v[k++] = mp(x,y);
				step++;
			}
		} else if (c == 'L') {
			while (x > 1) {
				g[v[t].first][v[t].second] = 0;
				++t;
				--x;
				if (g[x][y]) {
					ret = "BODY";
					break;
				}
				g[x][y] = 1;
				v[k++] = mp(x,y);
				step++;
			}
		} else {
			while (x < C) {
				g[v[t].first][v[t].second] = 0;
				++t;
				++x;
				if (g[x][y]) {
					ret = "BODY";
					break;
				}
				g[x][y] = 1;
				v[k++] = mp(x,y);
				step++;
			}
		}
		cout << ret << " " << step << endl;
	}
	return 0;
}
