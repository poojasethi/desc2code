#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>
#include <string>
#include <bitset>
#include <cmath>
#include <list>
#include <cstdlib>
#include <map>
#include <cstring>
#include <set>
#include <stack>
#include <sstream>
#include <queue>
#include <deque>
#include <ctime>

using namespace std;

#define debug(x) cout<<#x<<" = "<<x<<"\n"
#define FOR(t,a,n) for(int t=(a);(t)<(n);(t)++)
#define REP(I,N) FOR(I,0,N)
#define PB(X) push_back(X)
#define MP(X,Y) make_pair(X,Y)
#define INF int(1e9)
#define ALL(x) (x).begin(), (x).end()
#define SET(A,v) memset(A,v,sizeof A)
#define sp system("PAUSE")

int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};
int ar[1001][1001];
int N,M,x,y,l;
string s;

void move_tail(int i){
     ar[y][x]=0;
     if(s[i]=='R')x+=dx[0],y+=dy[0];
        else if(s[i]=='U')x+=dx[1],y+=dy[1];
        else if(s[i]=='L')x+=dx[2],y+=dy[2];
        else x+=dx[3],y+=dy[3];
}        
void solve()
{
    SET(ar,0);
    int n=s.length();
    int X=x,Y=y; char dir=s[n-1];
    ar[Y][X]=1;
    REP(i,n){
        if(s[i]=='R')X+=dx[0],Y+=dy[0];
        else if(s[i]=='U')X+=dx[1],Y+=dy[1];
        else if(s[i]=='L')X+=dx[2],Y+=dy[2];
        else X+=dx[3],Y+=dy[3];
        ar[Y][X]=1;
    }
  //  REP(i,N+1){REP(j,M+1)cout<<ar[i][j]<<" ";cout<<"\n";}cout<<"\n";
    string bound;
    int move=0;
    REP(i,10001){
            move_tail(i);
            if(dir=='R')X+=dx[0],Y+=dy[0];
            else if(dir=='U')X+=dx[1],Y+=dy[1];
            else if(dir=='L')X+=dx[2],Y+=dy[2];
            else X+=dx[3],Y+=dy[3];
            if(X>N||X<1||Y>M||Y<1){bound="WALL";break;}
            else if(ar[Y][X]==1){bound="BODY";break;}
            move++; s+=dir;
    }
    cout<<bound<<" "<<move<<"\n"; 
}        
       
int main()
{
    int T;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d%d%d%d",&N,&M,&x,&y,&l);
        cin>>s;
        solve();
    }
     return 0;
}
       
