import sys

def dec_to_bin(x):
  return str(bin(x)[2:])

def find_common_ancestor(i,j):
  node1 = dec_to_bin(i)
  node2 = dec_to_bin(j)
  indexmax = min(len(node1),len(node2))
  common_ancestor = []
  for index in xrange(indexmax):
    if node1[index] != node2[index]:
      break
    else:
      common_ancestor.append(node1[index])
  return "".join(common_ancestor)

def find_shortest_path(i,j):
  node1 = dec_to_bin(i)
  node2 = dec_to_bin(j)
  common_ancestor = find_common_ancestor(i,j)
  shortest_path = len(node1) + len(node2) - 2*len(common_ancestor)
  return shortest_path

t = input()
for case in xrange(t):
  data = map(int,sys.stdin.readline().split())
  i,j = data[0], data[1]
  print(find_shortest_path(i,j))
