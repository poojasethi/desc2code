#include <bits/stdc++.h>
#define getcx getchar_unlocked

#ifdef WIN32
    inline char getchar_unlocked(){return getchar();}
    inline void putchar_unlocked(char x){putchar(x);}
#endif // WINDOWS
using namespace std;

typedef pair<int,int> ii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;
#define sz(a) int((a).size())
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define _(x) memset(x,0,sizeof(x))
#define all(c) (c).begin(),(c).end()
#define foreach(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).Find(x) != (c).end())
#define cpresent(c,x) (Find(all(c),x) != (c).end())
#define forall(i,a,b) for(int i=a;i<(b);i++)
#define forb(i,a,b) for(int i=a;i>=(b);i--)
#define ll long long
#define ull unsigned long long
#define ui unsigned int
#define PI 3.1415926535897932384626
inline void pisz(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) forall(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)


inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}

inline void fo(int a) {
	char snum[20];
	int i=0;
    int c =a;
	do{
		snum[i++]=a%10+48;
		a=a/10;
	}
	while(a!=0);
	i=i-1;
    if(c<0)
        putchar_unlocked('-');
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

void init(){
#ifdef WIN32
    freopen("CHSTAMP.txt","r",stdin);
    //freopen("out.txt","w",stdout);
#endif // WINDOWS
}

int a[200005];
int v[50004];
int p[50004];
int r[50004];
vector<vector<pair<int,int> > > trades(50004);

int Find(int x){
    while(p[x]!=x){
        p[x] = p[p[x]];
        x=p[x];
    }
    return x;
}

void Union(int x, int y){
    int xr = Find(x);
    int yr = Find(y);

    if(xr==yr){
        return;
    }

    if(r[xr]<r[yr])
    {
        p[xr]=yr;
        r[yr]+=r[xr];
    }
    else
    {
        p[yr]=xr;
        r[xr]+=r[yr];
    }
}

int main()
{
    init();
    int t = fi();

    forall(cx,1,t+1){
        int n=fi(), m=fi();
        ll ans = 0;
        int maxDay = -1;

        forall(i,0,n){
            a[i] = fi();
        }

        forall(i,0,50004){
            v[i] = i;
            p[i] = i;
            r[i] = 1;
        }

        forall(i,0,m){
            int x = fi();
            int y = fi();
            int z = fi();

            maxDay = max(maxDay,x);

            trades[x].pb(mp(y,z));
        }

        forb(i,maxDay,1){
            forall(j,0,trades[i].size()){
                int x = trades[i][j].fi;
                int y = trades[i][j].se;
                Union(x,y);
            }

            forall(j,0,trades[i].size()){
                int x = trades[i][j].fi;
                int y = trades[i][j].se;
                int xr = Find(x);
                int yr = Find(y);
                v[xr] = max(v[x], v[xr]);
                v[yr] = max(v[y], v[yr]);
            }

            forall(j,0,trades[i].size()){
                int x = trades[i][j].fi;
                int y = trades[i][j].se;
                v[x] = v[Find(x)];
                v[y] = v[Find(y)];
            }

            forall(j,0,trades[i].size()){
                int x = trades[i][j].fi;
                int y = trades[i][j].se;
                p[x] = x; p[y] = y;
                r[x] = r[y] = 1;
            }
        }

        forall(i,0,n){
            ans += (ll)v[a[i]];
        }

        printf("%lld\n", ans);

        forall(i,0,maxDay+1){
            trades[i].clear();
        }
    }

    return 0;
}
