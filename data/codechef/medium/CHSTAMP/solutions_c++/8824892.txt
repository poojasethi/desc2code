#include<stdio.h>
#include<iostream>
#include<vector>
#include<cstdlib>
#include<cstring>
#include<math.h>
#include<map>
#include<algorithm>
#include<queue>
#include<string>
#include<climits>
#include<bitset>
#include<set>
#include<ctime>
#include<functional>

using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;

#ifdef _WIN32
    #define gx getchar
    #define px putchar
    #define ps putchar(' ')
    #define pn putchar('\n')
    #define DEBUG 1
#else
    #define gx getchar_unlocked
    #define px putchar_unlocked
    #define ps putchar_unlocked(' ')
    #define pn putchar_unlocked('\n')
    #define DEBUG 0
#endif

//input
void scan(int &n)
{
    int sign = 1;
    n = 0;
    char c = gx();
    while( c < '0' || c > '9' )
    {
        if( c == '-' ) sign = -1;
        c = gx();
    }
    while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * sign;
}
void lscan(ll &n)
{
    int sign = 1;
    n = 0;
    char c = gx();
    while( c < '0' || c > '9' )
    {
        if( c == '-' )
        sign = -1;
        c = gx();
    }
    while( c >= '0' && c <= '9' ) n = (n<<3) + (n<<1) + c - '0', c = gx();  n = n * (ll)(sign);
}
int sscan(char a[])
{
    char c = gx();
    while(c==' ' || c=='\n') c=gx();
    int i=0;
    while(c!='\n')a[i++] = c,c=gx();
    a[i]=0;
    return i;
}
int wscan(char a[])
{
    char c = gx();
    while(c==' ' || c=='\n') c=gx();
    int i=0;
    while(c!=EOF && c!='\n' && c!=' ')a[i++] = c,c=gx();
    a[i]=0;
    return i;
}

//output
void print(int n)
{
    if(n<0)
    {
        n=-n;
        px('-');
    }
    int i=10;
    char o[10];
    do{o[--i] = (n%10) + '0'; n/=10;}while(n);
    do{px(o[i]);}while(++i<10);
}
void lprint(ll n)
{
    if(n<0LL)
    {
        n=-n;
        px('-');
    }
    int i=21;
    char o[21];
    do{o[--i] = (n%10LL) + '0'; n/=10LL;}while(n);
    do{px(o[i]);}while(++i<21);
}
void sprint(const char a[])
{
    const char *p=a;
    while(*p)px(*p++);
}


ll po(ll a, ll b, ll m)
{
	ll x=1,y=a;
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>m) x%=m;
		}
		y = (y*y);
		if(y>m) y%=m;
		b /= 2;
	}
	return x;
}


const int siz = 50005;
int n,m,a[siz],val[siz];
vector< pair<int, pair<int,int> > > v;
vector<int> g[siz];
int f[siz],st[siz],df[siz];
int cur;
vector<int> present;
int today;

void dfs(int it)
{
	today = max(today,val[it]);
	df[it] = cur;
	int i,n=g[it].size();
	for(i=0;i<n;i++)
	{
		if(df[g[it][i]] == cur) continue;
		dfs(g[it][i]);
	}
	return;
}

void set1(int it)
{
	val[it] = today;
	st[it] = cur;
	int i,n=g[it].size();
	for(i=0;i<n;i++)
	{
		if(st[g[it][i]] == cur) continue;
		set1(g[it][i]);
	}
	return;
}

int main()
{
	int t,i,j,k,x,y,z;
	ll ans;
	scan(t);
	while(t--)
	{
		scan(n);
		scan(m);
		for(i=0;i<siz;i++)
		{
			a[i] = 0;
			f[i] = st[i] = df[i] = -1;
			val[i] = i;
		}
		for(i=0;i<n;i++)
		{
			scan(j);
			++a[j];
		}
		v.clear();
		for(i=0;i<m;i++)
		{
			scan(x);
			scan(y);
			scan(z);
			v.push_back( make_pair(x, make_pair(y,z) ) );
		}
		sort(v.rbegin(),v.rend());
		for(i=0;i<m;)
		{
			j = i+1;
			cur = i;
			while((j<m) && (v[j].first == v[i].first)) j++;
			
			present.clear();
			for(k=i;k<j;k++)
			{
				x = v[k].second.first;
				y = v[k].second.second;
				present.push_back(x);
				present.push_back(y);
				if(f[x] != cur)
				{
					g[x].clear();
					f[x] = cur;
					g[x].push_back(y);
				}
				else
				{
					g[x].push_back(y);
				}
				if(f[y] != cur)
				{
					g[y].clear();
					f[y] = cur;
					g[y].push_back(x);
				}
				else
				{
					g[y].push_back(x);
				}
			}
			i = j;
			
			n = present.size();
			for(j=0;j<n;j++)
			{
				if(df[present[j]] == cur) continue;
				today = 0;
				dfs(present[j]);
				set1(present[j]);
			}
			
			//for(k=0;k<10;k++) cout << k << " " << val[k] << endl;
			//pn;
			//pn;
			
		}
		ans = 0;
		for(i=0;i<siz;i++) ans += ((ll)a[i]*val[i]);
		lprint(ans);
		pn;
	}
	return 0;
}
