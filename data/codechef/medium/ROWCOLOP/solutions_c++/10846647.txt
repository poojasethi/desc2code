import java.io.*;
import java.util.*;

class ROWCOLOP{
	
	public static void main(String[] args) throws IOException{

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String[] input = br.readLine().split(" ");

		int size = Integer.parseInt(input[0]);
		int noOfOp = Integer.parseInt(input[1]);

		/* Maps to store <key,value> pairs where key is the row/column on which operation is performed
		 * and its value increases based on the operation.
		 */
		Map<Integer,Integer> rowMap = new HashMap<Integer,Integer>();
		Map<Integer,Integer> colMap = new HashMap<Integer,Integer>();

		for(int i = 0; i < noOfOp; i++){

			String[] operation = br.readLine().split(" ");

			int key = Integer.parseInt(operation[1]);
			int value = Integer.parseInt(operation[2]);

			/* Check if it's a row or column operation.
		     * Increment value of key based on the increment value specified in the operation.
			 */
			if(operation[0].equals("RowAdd")){

				rowMap.put(key, rowMap.getOrDefault(key, 0) + value);
			}
			else{
				colMap.put(key, colMap.getOrDefault(key, 0) + value);
			}
			
		}

		/* The max value is obtained where max row and max column value intersect.
		 * The sum of max value from both maps gives the value of max element in the matrix.
		 */
		int maxRow = 0, maxCol = 0;
		if(!rowMap.isEmpty()){

			maxRow = Collections.max(rowMap.values());
		}
		if(!colMap.isEmpty()){

			maxCol = Collections.max(colMap.values());
		}
	
		System.out.println(maxRow + maxCol);

	}
}