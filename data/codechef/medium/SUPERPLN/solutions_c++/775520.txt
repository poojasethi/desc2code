#define DEBUG 1

#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;

struct flight {
  int t1, c2, t2;
  bool used;

  bool operator<(const flight &f)const{return t1<f.t1; }
};

int main(void) {
  int tc, n, t, c, pt, e, c1, valid, legs, i;
  vector<flight> f[10001];
  vector<flight>::iterator it;
  flight f1;
  f1.used=false;
  scanf("%d", &tc);
  while(tc--) {
    scanf("%d", &n);
    for(i=0;i<10001;i++)
      f[i].clear();
    for(i=0;i<n;i++) {
      scanf("%d%d%d%d", &c1, &f1.t1, &f1.c2, &f1.t2);
      f[c1].push_back(f1);
    }
    for(i=0;i<10001;i++)
      sort(f[i].begin(),f[i].end());
    scanf("%d%d%d%d", &c, &t, &e, &pt);
    for(valid=1,legs=0;valid;) {
      if(c==e&&t<=pt)
        break;
      f1.t1=t;
      it=lower_bound(f[c].begin(),f[c].end(),f1);
      if(it==f[c].end()) {
        valid=0;
        break;
      } else {
        if(it->used)
          valid=0;
        it->used=true;
        c=it->c2;
        t=it->t2;
        legs++;
      }
    }
    if(valid&&t<=pt&&c==e)
      printf("Yes %d\n", legs);
    else
      printf("No\n");
  }
  return 0;
}
