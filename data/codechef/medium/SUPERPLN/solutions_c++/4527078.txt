#include<iostream>
#include<set>

using namespace std;

struct plane
{
	int sci;
	int sti;
	int eci;
	int eti;
	plane(int a, int b, int c, int d)
	{
		sci = a;
		sti = b;
		eci = c;
		eti = d;
	}
};

struct compare {
	bool operator()(const plane& p1, const plane& p2) {
		return p1.sti < p2.sti;
	}
};


set<plane, compare> city[10001];

int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		for(int i=0; i<=10000; ++i)
			city[i].clear();
		int n;
		cin>>n;
		for(int i=0; i<n; ++i)
		{
			int a, b, c, d;
			cin>>a>>b>>c>>d;
			city[a].insert(plane(a, b, c, d));
		}
		set<plane, compare>::iterator it;
		int a, b, c, d;
		cin>>a>>b>>c>>d;
		plane pl(a, b, c, d);
		int count = 0;
		int flag = 0;
		do
		{
			//cout<<pl.sci<<" "<<pl.sti<<" city "<<endl;
			if(pl.sci == c && pl.sti<=d)
			{
				flag = 1;
				break;
			}
			count++;
			it = city[pl.sci].lower_bound(pl); 
			//cout<<it->sci<<" "<<pl.sci<<" Values"<<endl;
			if(it == city[pl.sci].end())
				break;
			pl.sci = it->eci;
			pl.sti = it->eti;
		}while(count<n+1);
		if(flag)
			cout<<"Yes "<<count<<endl;
		else
			cout<<"No"<<endl;
	}
	return 0;
}
