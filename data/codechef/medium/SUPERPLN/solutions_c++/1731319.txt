#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

struct flight;
const int maxC = 10005; //maximum number of cities
const int maxT =  100005;
const int maxF = 10005;//maximum number of flights
vector<flight>city[maxC]; //list of flights from that city
bool mark[maxF];//if that city has been visited or not to see if you are caught in infinite loop



int start;//starting city
int dest;//destination city
int st;//start time
int pt;//party time
int cnt;

struct flight
{
  int dest;//destination
  int at;//arrival time
  int dt;//departure time
  int fno;//flight number
  flight(int , int , int, int);
};
void init()
{
    cnt = 0;
    for(int i=0; i<maxC; i++)
    mark[i] = 0, city[i].clear();
}
bool order(flight f1, flight f2)
{
    if(f1.dt< f2.dt)return 1;
    return 0;
}
int findflight(int t, int j)//returns flight with departure time not lesser than t at city j
{
    int low = 0, mid;
    int high = city[j].size()-1;
    while(low< high)
    {
        mid = (low+high)/2;
        if(city[j][mid].dt>=t) high = mid;
        else low = mid+1;
    }
    if(city[j].size() && city[j][high].dt>= t)return high;
    return -1;
}
bool solve()
{
    //starting city is index start destination index is dest st is start time
    int c = start;
    int time = st;
    while(1)
    {
        if(c == dest && time<=pt ) return 1;
        int q = findflight(time, c);
        //cout<<q<<endl;
        if(q>=0 && !mark[city[c][q].fno])
        {time = city[c][q].at;
        cnt++;
        mark[city[c][q].fno] = 1;
        c = city[c][q].dest;
        }
        else
        return 0;


    }
}

flight::flight(int departuretime, int destination, int arrivaltime, int no)
{

   dest = destination;
   at = arrivaltime;
   dt = departuretime;
   fno = no;
}
void printflight(flight f)
{
    cout<<"destination "<<f.dest<<endl;
    cout<<"departure time "<<f.dt<<endl;
    cout<<"arrival time "<<f.at<<endl;

}

int main()
{
int t, N;
int c1, c2, t1, t2;
scanf("%d", &t);

while(t--)
{
init();
scanf("%d", &N);
for(int i=0; i<N; i++)
{
    scanf("%d%d%d%d", &c1, &t1, &c2, &t2);
    flight f(t1, c2, t2, i);
    city[c1].push_back(f);
}
scanf("%d%d%d%d", &start, &st, &dest, &pt);
for(int i=0; i<maxC; i++)
sort(city[i].begin(), city[i].end(), order );

if(solve() == 1)
printf("%s %d\n", "Yes", cnt);
else
printf("%s\n", "No");
}
}
