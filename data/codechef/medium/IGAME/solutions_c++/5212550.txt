#include<iostream>
#include<vector>
using namespace std;
#define min(a,b)((a)<(b)?(a):(b))
void points(int m , int n , int p , int q , int x[] , int y[], vector<int>& cordx , vector <int>& cordy)
{	x[0]=-1;
	y[0]=-1;
	int y1=1;
	int x1=1;
	int nx= m-p;
	int ny= n-q;
	int mini = min(nx,ny);
	int count =0 ;
	int t=1;
	while(x1!=nx+1&&y1!=ny+1)
//	while(t>0)
	{	if(x[x1]==0&&y[y1]==0)
	 	{	count++;
	 		cordx.push_back(x1);
	 		cordy.push_back(y1+count);
	 		cordx.push_back(x1+count);
	 		cordy.push_back(y1);
	 		x[x1]=-1;
	 		x[x1+count]=-1;
	 		y[y1]=-1;
	 		y[y1+count]=-1;
//	 		cout<<x1<<y1+count<<endl;
//	 		cout<<x1+count<<y1<<endl;
	 		
		}
		
			x1++;
			y1++;

		
//	t--;
}
}

int main()
{	int test;
	cin>>test;
	while(test>0)
	{	int m;
		int n;
		int p,q;
		cin>>m>>n>>p>>q;
		vector<int> cordx;
		vector<int> cordy;
		int x[10001]={0};
		int y[10001]={0};
		points(m,n,p,q,x,y,cordx,cordy);
		int s = cordx.size();
		int t = 0 ;
		int nx = m-p+1;
		int ny = n-q+1;
		if(nx>=ny)
		{	t = s-1;
		}
		else if(nx<ny)
		{	t=s-2;
		}
		
	//	cout<<"KK"<<endl;
		if(s!=0&&cordx[t]==m-p&&cordy[t]==n-q)
		{	cout<<"Bob"<<endl;
		}
		else 
		{	cout<<"Alice"<<endl;
		}
		test--;
	}
}