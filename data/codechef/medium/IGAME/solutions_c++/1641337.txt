#include<stdio.h>
#include<limits.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#define swap(m,n) m^=n^=m^=n
#define SORT(a,n) qsort(a,n,sizeof(int),intcmp)
#define min(a,b) (a<b)?a:b
#define BINSEARCH(k,a,n) bsearch(k,a,n,sizeof(int),intcmp)	//returns pointer to key(given as &key) if found, else NULL
typedef long long int lld;
typedef long long ll;
typedef unsigned long long int uint64;
typedef unsigned long int uint32;

int intcmp(const void *f,const void *s)
{
	return (*(int *)f -*(int *)s);
}

int gcd(int a,int b){ return ((b==0)?a:gcd(b,a%b));}

int main()
{
	int i,j,k,l,m,n,T,p,q;
	scanf("%d",&T);
	int matrix[1002][1002];
	for(i=0;i<1001;i++)
		for(j=0;j<1001;j++)
			matrix[i][j]=1;
	matrix[0][0]=1;
	for(i=0;i<1001;i++)
	{
		for(j=0;j<1001;j++)
		{
			if(matrix[i][j]==1)
			{
				for(k=i+1;k<1001;k++)
					matrix[k][j]=0;
				for(k=j+1;k<1001;k++)
					matrix[i][k]=0;
				int diag=min(1001-i,1001-j);
				for(k=1;k<diag;k++)
					matrix[i+k][j+k]=0;
			}
		}
	}
	
	while(T--)
	{
		scanf("%d %d %d %d",&m,&n,&p,&q);
		m=m-p;
		n=n-q;
		if(matrix[m][n]==0) printf("Alice\n");
		else printf("Bob\n");
	}
	return 0;
}
