#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <cstdio>
#include <string>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <string.h>
#include <cassert>

using namespace std;

#define swap(m,n) m^=n^=m^=n

int main() {
   int t,m,n,p,q;
	
	int WL[1001][1001];
	memset(WL, 0, sizeof(WL));
	for(int i=1;i<1001;i++) {
		WL[i][0] = 1;
		WL[0][i] = 1;
		WL[i][i] = 1;
	}
	WL[0][0] = 0;	
	WL[1][2] = 0;	

/*	for(int i=1;i<1001;i++) {
		for(int j=i+1;j<1001;j++) {
			bool res = 1;
			if(WL[i][j]!=-1) 
			continue;

			for(int a=0;a<i;a++) {
				if(WL[a][j]==0) {
					WL[i][j] = 1;
					res = 0;
					break;				
				}					
			}

			for(int a=0;a<j;a++) {
				if(WL[i][a]==0) {
					WL[i][j] = 1;
					res = 0;
					break;				
				}			
			}
		
			for(int a=0;a<(min(i,j));a++) {
				if(WL[i-a][j-a]==0) {
					WL[i][j] = 1;
					res = 0;
					break;				
				}			
			}
			
			if(res==1) 
			WL[i][j] = 0;			

		}
	}
*/
	for(int i=0;i<1001;i++) {
		for(int j=0;j<1001;j++) {
			if(WL[i][j] == 0) {
				for(int k=i+1;k<1001;k++)
					WL[k][j] = 1;
				for(int k=j+1;k<1001;k++)
					WL[i][k] = 1;
				for(int k=i+1,r=j+1;k<1001 && r<1001;k++,r++)
					WL[k][r] = 1;

			}
		}		
	}

   scanf("%d",&t);
	while(t--) {
	
/*	for(int a=0;a<20;a++) {
		for(int b=0;b<20;b++) {
			printf("%d ",WL[a][b]);
		}
		printf("\n");
	}
*/
	scanf("%d %d %d %d",&m,&n,&p,&q);
	m = m - p;
	n = n - q;
	
	if(m>n)
	swap(m,n);

	if(WL[m][n])
	printf("Alice\n");
	else
	printf("Bob\n");

  
   }
   return 0;
}

