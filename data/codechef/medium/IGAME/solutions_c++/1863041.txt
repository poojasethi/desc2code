#include <iostream>
#include <cstdio>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <cstdlib>
#include <ctime>
#include <string>
#include <cstring>
#include <algorithm>
#include <cmath>

using namespace std;
typedef long long ll;

const int MaxN = 1224;

int t, n, m, p, q;
bool grundy[MaxN][MaxN];

void precalc_nim()
{
    grundy[0][0] = 0;

    for (int i = 0; i < MaxN; i++)
        for (int j = 0; j < MaxN; j++) if (!grundy[i][j])
        {
            for (int delta = 1; delta < MaxN; delta++)
            {
                bool found = false;
                if (delta + i < MaxN) {grundy[delta + i][j] = 1; found = true;}
                if (delta + j < MaxN) {grundy[i][delta + j] = 1; found = true;}
                if (delta + i < MaxN && delta + j < MaxN) grundy[delta + i][delta + j] = 1;
                if (!found) break;
            }
        }
}

int main()
{
    cin.sync_with_stdio(0);

    precalc_nim();
    cin >> t;

    while (t--)
    {
        cin >> n >> m >> p >> q;
        n -= p;
        m -= q;

        grundy[n][m] ? puts("Alice") : puts("Bob");
    }

    return 0;
}
