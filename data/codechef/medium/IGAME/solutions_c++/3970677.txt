#include <iostream>
#include <algorithm>
#include <cstring>
#include <cassert>

using namespace std;

int nu[1024], di[1024];
int R[1024];

void pre_calc() {
    memset(nu,0,sizeof(nu));
    memset(di,0,sizeof(di));
    memset(R,-1,sizeof(R));
    int mn = 1, md = 1;
    bool done = false;
    while(!done) {
        while(mn <= 1000 && nu[mn]) mn++;
        if(mn == 1000) done = true;
        else {
            while(md <= 1000 && di[md]) md++;
            if(md == 1000 || mn + md > 1000) done = true;
            else {
                R[mn] = mn+md;
                nu[mn] = 1;
                di[md] = 1;
                nu[mn+md] = 1;
            }
        }
    }
}

int main() {
    pre_calc();
    int T;
    cin >> T;
    assert(T <= 1000);
    while(T--) {
        int m, n, p, q;
        cin >> m >> n >> p >> q;
#define TEST(t) assert(t >= 0 && t <= 1000)
        TEST(m);
        TEST(n);
        TEST(p);
        TEST(q);
        assert(m >= p && n >= q);
        assert(m-p || n-q);
        int a = m-p, b = n-q;
        if(a>b) swap(a,b);
        if(R[a] == b) cout << "Bob" << endl;
        else cout << "Alice" << endl;
    }
    return 0;
}
