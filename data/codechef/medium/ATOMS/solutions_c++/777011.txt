#define DEBUG 0
#define SIZE 101

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
using namespace std;

int ns;

typedef struct {
  bool b[30];
} bs;

int comp(const void *a, const void *b) {
  int i, j, x;
  bs *ba=(bs *)a;
  bs *bb=(bs *)b;
  if(DEBUG) {
        printf("a=");
        for(j=0;j<ns;j++)
          printf("%d",ba->b[j]);
        printf(" b=");
        for(j=0;j<ns;j++)
          printf("%d",bb->b[j]);
        printf("\n");
  }
  for(i=0;i<ns;i++)
    if(x=ba->b[i]-bb->b[i])
      return x;
  return 0;
}

/*
int comp2(bool b[SIZE][30], int i, int k) {
  int j, x;
  if(DEBUG) {
        printf("a=");
        for(j=0;j<ns;j++)
          printf("%d",b[i][j]);
        printf(" b=");
        for(j=0;j<ns;j++)
          printf("%d",b[k][j]);
        printf(" comp2 i=%d k=%d", i, k);
  }
  for(j=0;j<ns;j++)
    if(x=b[i][j]-b[k][j]) {
      if(DEBUG)
        printf(" returning %d\n", x);
      return x;
    }
  if(DEBUG)
    printf(" returning %d\n", 0);
  return 0;
}

void mysort(bool b[SIZE][30]) {
  int i, j, k;
  for(i=1;i<ns;i++) {
    for(k=0;k<ns;k++)
      b[100][k]=b[i][k];
    for(j=i-1;j>=0&&comp2(b, j, 100)>0;j--)
      for(k=0;k<ns;k++)
        b[j+1][k]=b[j][k];
    for(k=0;k<ns;k++)
      b[j+1][k]=b[100][k];  
  }
}
*/

int main(void) {
  int tc, n, i, j, l, ans, x;
  bs b[SIZE];
  
  scanf("%d", &tc);
  while(tc--) {
    scanf("%d%d", &n, &ns);
    memset(b, false, sizeof(b));
    for(i=0;i<ns;i++) {
      scanf("%d", &l);
      for(j=0;j<l;j++) {
        scanf("%d", &x);
        b[x].b[i]=true;
      }
    }
    //mysort(b);
    qsort(b, n, sizeof(b[0]), &comp);
      if(DEBUG) {
        for(j=0;j<ns;j++)
          printf("%d",b[0].b[j]);
        printf(" i=%d\n", 0);
      }
    for(ans=0,i=1;i<n;i++) {
      if(DEBUG) {
        for(j=0;j<ns;j++)
          printf("%d",b[i].b[j]);
        printf(" i=%d\n", i);
      }
      if(comp((const void *)&b[i], (const void *)&b[i-1]))
        ans++;
    }
    printf("%d\n", ans+1);
  }
  return 0;
}
