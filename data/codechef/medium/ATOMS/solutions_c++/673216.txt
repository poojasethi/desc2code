#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
using namespace std;
int main()
{
 int t;
 scanf("%d",&t);
 while(t--)
 {
  int n,m;
  scanf("%d%d",&n,&m);
  int *v=new int[m];
  int **s=new int*[m];
  vector<vector <int> > tab;
   for(int i=0;i<=n;i++)
   {
    vector<int>row;
    tab.push_back(row);
   }
  for(int i=0;i<m;i++)
  {
   
   scanf("%d",&v[i]);
   s[i]=new int[v[i]];
   for(int j=0;j<v[i];j++){
   scanf("%d",&s[i][j]);
   tab[s[i][j]].push_back(i);
   }
  }
  int ans=0;
  bool *done=new bool[n+1];
  memset(done,false,n+1*sizeof(bool));
   for(int i=0;i<n;i++)
   sort(tab[i].begin(),tab[i].end());
  for(int i=0;i<n;i++)
 {
  
  if(!done[i])
  for(int j=0;j<n;j++)
  {
   if(i!=j && tab[i].size()==tab[j].size())
   {
    int k;k=0;
    for(k=0;k<tab[i].size();k++)
    if(tab[i][k]!=tab[j][k])
    break;
    if(k==tab[i].size())
    {
      
      done[j]=true;
    }
   }
   
  }
  if(!done[i]){
  
  ans++;
  done[i]=true;
 }
 }
 printf("%d\n",ans); 
 }
}