
# include <cstdio>
# include <cstring>
# include <cmath>
# include <cstdlib>
# include <iostream>
# include <vector>
# include <algorithm>
# include <queue>
# include <set>
# include <map>

#define MOD 1000000007
typedef long long ll;

using namespace std;

ll extendedEuclid(int n,int m){
	ll a1,a2,a3,b1,b2,b3,t1,t2,t3;
	a1=1; a2=0; a3=m;
	b1=0; b2=1; b3=n;
	while(b3!=1){
		ll q = a3/b3;
		t3 = a3 % b3;
		t1 = a1-q*b1; t2 = a2-q*b2;
		a1=b1; a2=b2;a3=b3; b1=t1; b2=t2;b3=t3;
	}
	//cout<<"Inverse of "<<n<<" is "<<b2<<endl;
	if(b2<0) b2 = -b2 * (MOD-1) % MOD;
	//cout<<"Inverse of "<<n<<" is "<<b2<<endl;
	return b2;
}
ll fac(int x, int t){
	ll ans  =1;
	int xx = x;
	while(t--) ans=(ans*x--)%MOD;
	//cout<<"factorial  of "<<xx<<" is "<<ans<<endl;
	return ans;
}

ll pow2(int n){
	ll ans =1;
	while(n--) ans = (ans<<1)%MOD;
	return ans;
}

ll ncr (int n, int r){
	return (fac(n,r)*extendedEuclid(fac(r,r),MOD))%MOD;
}
ll calc(int n){
	//cout<<pow2(n)<<endl;
	//cout<<ncr(n,n/2)<<endl;
	ll ans=(pow2(n)-(n%2?0:ncr(n,n/2)));
	if(ans<0) ans = (-ans)*(MOD-1) % MOD;
	return ans*extendedEuclid(2,MOD)%MOD;
}
int main(){
	int t,n,num;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		for(int i=0;i<n;++i) scanf("%d",&num);
		cout<<calc(n)<<endl;
	}
	return 0;
}
