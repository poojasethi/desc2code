#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<vector>
#include<stack>
#include<queue>
#include<climits>
#include<algorithm>
#include<set>
#include<map>
#include<limits.h>

#define FOR(i ,  n) \
	for(i = 0; i < n; i++)
#define FORS(i ,startForIndex , endForIndex) \
	for(i = startForIndex ;i < endForIndex; i++)
#define pb push_back
#define ss(n) scanf("%s",n)
#define sd(n) scanf("%d",&n)
#define pd(n) printf("%d\n",&n)
#define fill(x,v) memset(x,v,sizeof(x))
#define sz(x)  x.size()


using namespace std ;
long long int arr[1001]={0};
long long int nr[1001]={0};
long long int mo=1000000007;
long long int fac[1001]={0};
long long int ifact[1001]={0};
long long int pow(long long int p,long long int j)
{
	if(j==1)
	{
		return p;
	}
	if(j==0)
	{
		return 1;
	}
	long long int tmp=pow(p,j/2);
	tmp=((tmp*tmp))%mo;
	if(j%2==0)
	{
		return tmp;
	}
	else
	{
		return (tmp*p)%mo;
	}
}
long long int fact(int i)
{
	if(i==0||i==1)
	{
		fac[i]=1;
		ifact[i]=1;
		return fac[i];
	}
	if(fac[i]!=0)
	{
		return fac[i];
	}
	fac[i]=(i*fact(i-1))%mo;
	ifact[i]=(pow(fac[i],mo-2)%mo);
	return fac[i];
}

long long int ncr(int i,int j)
{
	if(j==0)
	{
		return 1;
	}
	if(j==1)
	{
		return i;
	}
	long long int tmp;
	tmp=(ifact[i-j]*ifact[j])%mo;
	tmp=(tmp*fac[i])%mo;
	return tmp;

	
}
void pre()
{
	int i;
	int j;
	long long int t;
	t=fact(1000);
	nr[1]=1;
	nr[2]=1;
	//printf("i m  here\n");
	int k;
	for(i=3;i<=1000;i++)
	{
		k=i/2+i%2;
		for(j=0;j<k;j++)
		{
			nr[i]+=ncr(i,j);
			nr[i]%=mo;
		}
	}
}
			

int main(){
	int t;
	pre();
	cin>>t;
	long long int n;
	int i;
	long long int ans=0;
	int a[1000];
	while(t>0)
	{
		t--;
		cin>>n;
		FOR(i,n)
		{
			cin>>a[i];
		}
		if(n%2==0)
		{
			cout<<nr[i]<<endl;

		}
		else
		{
			ans=pow(2,n-1);
	         	cout<<ans<<endl;
		}
	}
}
