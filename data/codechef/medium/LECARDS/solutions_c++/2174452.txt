
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <fstream>
#include <stack>
#include <string>
#include <vector>
#include <list>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>

#define sf(a) scanf("%d",&a)
#define sfl(a) scanf("%lld",&a)
#define ssf(a,b) scanf("%d%d",&a,&b)
#define pf(a) printf("%d\n",a)
#define foreach(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define pi pair<int,int>
#define vi vector<int>
#define all(v) v.begin(),v.end()

#define PB push_back
#define MP make_pair
#define sz(a) (int)(a).size()

#define REP(i,a) for((i) = (0); (i) < (a); ++(i))
#define FOR(i,a,b) for((i) = (a); (i) < (b); ++(i))  
#define RFOR(i,a,b) for((i) = (a)-1; (i) >= (b); --(i))  
#define CLEAR(a) memset((a),0,sizeof(a))

#define PI 3.1415926535897932

#define ll long long

using namespace std;

string convertInt(int number)
{
	stringstream ss;//create a stringstream
	ss << number;//add number to the stream
	return ss.str();//return a string with the contents of the stream
}

int convertString(string s)
{
	int num;
	stringstream sstr(s); // create a stringstream
	sstr>>num; // push the stream into the num
	return num;
}

int modulo (int m, int n) { return m >= 0 ? m % n : ( n - abs ( m%n ) ) % n; }

#define MOD 1000000007

int comb[1001][1001];

void getComb(){
	int i,j;
	REP(i,1001){
		comb[0][i] = 0;
	}
	REP(i,1001){
		comb[i][0] = 1;
	}
	FOR(i,1,1001){
		FOR(j,1,1001){
			comb[i][j] = (comb[i-1][j-1] + comb[i-1][j]) % MOD; 
		}
	}
}

int main(){

#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
#endif
	int t, n, temp, i;
	sf(t);
	getComb();
	while(t--){
		sf(n);
		REP(i,n){
			sf(temp);
		}
		temp = 0;
		FOR(i,n/2+1,n+1){
				temp = (temp + comb[n][i]) % MOD;
		}
		pf(temp);
	}
	return 0;
}