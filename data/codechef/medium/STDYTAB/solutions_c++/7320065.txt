#include<bits/stdc++.h>
using namespace std;
#define mod 1000000000
typedef long long int lld;
 
lld DP[2005][2005],C[4010][4010];
 
void precompute()
{
    for(int i=0;i<=4002;i++)
    {
        C[i][0]=1;
        C[i][i]=1;
    }
    for(int i=1;i<=4002;i++)
        for(int j=1;j<i;j++)
            C[i][j]=(C[i-1][j]+C[i-1][j-1])%mod;
}
 
lld precompute(int i,int j,int m)
{
    if(DP[i][j]!=0)
        return DP[i][j];
    if(i==1)
        DP[i][j]=(DP[i][j-1]+C[m+j-1][j])%mod;
    else
    {
        DP[i][j]=(DP[i][j-1]+(C[m+j-1][j]*precompute(i-1,j,m))%mod)%mod;
    }
    return DP[i][j];
}
 
int main()
{
    int t;
    scanf("%d",&t);
    precompute();
    while(t--)
    {
        int n,m;
        lld ans=1;
        scanf("%d%d",&n,&m);
        
        if(n==1)                  //Partion formula or N sum in K places
        {
            ans=0;
            for(int i=0;i<=m;i++)
                ans=(ans+C[i+m-1][i])%mod;
            printf("%lld\n",ans);
            continue;
        }
        
        for(int i=0;i<=n;i++)
            for(int j=0;j<=m;j++)
                DP[i][j]=0;
        for(int i=0;i<=n;i++)
            DP[i][0]=1;
        DP[m][0]=1;
        for(int i=1;i<=m;i++)
                ans=(ans+(C[m+i-1][i]*precompute(n-1,i,m))%mod)%mod;
        printf("%lld\n",ans);
    }
} 