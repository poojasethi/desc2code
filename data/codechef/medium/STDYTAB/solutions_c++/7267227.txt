#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<numeric>
#include<stack>
#include<queue>
#include<deque>
#include<bitset>
#include<cmath>
#include<list>
#include<set>
#include<map>
#define vi vector<int>
#define vvi vector< vi >
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end() 
#define sz(c) c.size()
#define tr(c,it)  for(typeof(c.begin()) it=c.begin();it!=c.end();it++)  
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define abs(a)  (a>=0?a:-a)
#define present(c,x) find(all(c),x)!=c.end()
#define cpresent(c,x) c.find(x)!=c.end()  
#define permute(c) next_permutation(all(c))
#define MOD 1000000000
using namespace std;
long long ncr[4400][4400],dp[2002][2002],N,M;
long long solve(long long i,long long x){
	if(dp[i][x]%MOD!=-1)	
	   return dp[i][x]%MOD;	
	if(x>M)
	   return 0;
	if(i==N+1)
	   return 1;
	dp[i][x]=(solve(i+1,x)*ncr[x+M-1][M-1]+solve(i,x+1))%MOD;
	return (dp[i][x]%MOD);         
}
int main(){ 
     long long T,i,j;
	 scanf("%lld",&T);
	 for(i=0;i<4100;i++){
	 	  ncr[i][0]=1;
	 	  ncr[i][i]=1;
	 }
	 for(i=1;i<4100;i++){
	 	for(j=1;j<=i;j++){
	 		 ncr[i][j]=(ncr[i-1][j-1]+ncr[i-1][j])%MOD;
	 		 ncr[i][j]%=MOD;
	 	}
	 }  
	 while(T--){
	 	scanf("%lld%lld",&N,&M);
	 	//printf("%lld\n",solve(1,0)%MOD);
	 	for(i=1;i<=N;i++)
	 	   dp[i][M+1]=0;
	 	for(j=0;j<=M;j++)
		   dp[N+1][j]=1;
		for(i=N;i>=1;i--){
			for(j=M;j>=0;j--){
				dp[i][j]=(dp[i+1][j]*ncr[j+M-1][M-1]+dp[i][j+1])%MOD;
				dp[i][j]%=MOD;
			}
		}      
		printf("%lld\n",dp[1][0]%MOD);
	 }
    
	return 0;
}