#include<stdio.h>
#include<string.h>
#define M 1000000000
#define LL long long int
LL count[4001];
LL pred[4001];
LL cur[2001];
bool prime[4001]={0};
LL pow(LL a, LL b,LL m)
	{
		LL x=1,y=a;
		while(b > 0)
			{
				if(b%2 == 1)
					{
						x=(x*y);
						if(x>m) x%=m;
					}
						y = (y*y);
						if(y>m) y%=m;
						b /= 2;
				}
		return x%m;
	}
LL crt(LL n,LL p)
	{
		LL count=0;
		LL temp=p;
		while(n/p!=0)
			{
				count+=n/p;
				p*=temp;
			}
		return count;
	}

LL calc(LL n,LL r)
	{
		LL ans=1,temp;
		LL i,j;
		memset(count,0,sizeof(count));
		for(i=2;i<=n;++i)
			{
				if(prime[i]==0)
					count[i]=crt(n,i);
			}
		for(i=2;i<=r;++i)
			{
				if(prime[i]==0)
					count[i]-=crt(r,i);
			}
		for(i=2;i<=n-r;++i)
			{
				if(prime[i]==0)
					count[i]-=crt(n-r,i);
			}
		for(i=2;i<=n;++i)
			{
				if(count[i]!=0)
					{
						temp=pow(i,count[i],1000000000);
						ans=(ans*temp)%M;
					}
				if(ans>=M)
					ans%=M;
			}
		return ans%M;
	}


LL fc[2001];



int main()
	{
		LL n,m;
		LL t,N,R,i,j,ans;
		memset(prime,0,sizeof(prime));
		for(i=2;i<=4000;++i)
			{
				if(prime[i]==0)
					{
						for(j=2*i;j<=4000;j+=i)
							prime[j]=1;
					}
			}
		scanf("%lld",&t);
		while(t--)
			{
				memset(cur,0,sizeof(cur));
				memset(pred,0,sizeof(pred));
				ans=0;
				scanf("%lld%lld",&n,&m);
				for(i=0;i<=m;++i)
					{
						N=i+m-1;
						R=i;
						fc[i]=calc(N,R);
						if(fc[i]>=M)
							fc[i]%=M;
						if(i>=1)
							pred[i]=fc[i]+pred[i-1];
						else
							pred[i]=fc[i];
						if(pred[i]>=M)
							pred[i]%=M;
						if(i>=1)
							cur[i]=fc[i]+cur[i-1];
						else
							cur[i]=fc[i];

						if(cur[i]>=M)
							cur[i]%=M;
					}

				for(i=2;i<=n;++i)
					{
						for(j=0;j<=m;++j)
							{
								if(j>=1)
									cur[j]=(fc[j]*pred[j])+cur[j-1];
								else
									cur[j]=fc[j]*pred[j];
								if(cur[j]>=M)
									cur[j]%=M;
							}
						pred[0]=cur[0];
						for(j=1;j<=m;++j)
							{
								pred[j]=cur[j];
							}
					}
				printf("%lld\n",cur[m]);
			}
	}
