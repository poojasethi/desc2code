#include<bits/stdc++.h>
using namespace std;
#define SF(x)	scanf("%d", &x)
#define PF(x)	printf("%d", x)
#define psp     printf(" ")
#define pnl     printf("\n")
#define charint(c) ((c)-'0')
#define pii pair< int, int >
#define pb(x) push_back(x)
#define test int t; scanf("%d",&t);while(t--)
#define forall(a,b) for(long long i=a;i<=b;i++)
#define abs(a) ((a)>(0)?(a):(-a))
#define bit(x,i)          (x&(1<<i))  //select the bit of position i of x
#define lowbit(x)         ((x)&((x)^((x)-1))) 
#define higbit(x)         (1 << ( int) log2(x) )
#define countleadzero(x)  __builtin_ctz(x) //in its binary representation ex. when x=8 answer is 3
#define countsetbits(x)   ____builtin_popcount(x) //count no of setbits
#define gcd(a,b)   __gcd(a,b)
#define bss binary_search
#define esort(x)        (sort((x).begin(), (x).end()))
#define ersort(x)       (sort((x).rbegin(), (x).rend()))
#define MAX		100050
#define INF		1e9
#define mod     1000000000
#define fi first
#define se second
typedef long long 		ll;
typedef unsigned long long	ull;
ll com[4005][4005],dp[4005][4005];
int m,n;
int prep(){
	for(int i=0;i<=4000;i++)
	{
		com[i][0]=1;
		com[i][i]=1;
	}
	for(int i=1;i<=4000;i++){
		for(int j=1;j<i;j++){
			com[i][j]=(com[i-1][j]+com[i-1][j-1])%mod;
		}
	}
}
ll solve(int r,int x){
	if(x>m)
	return 0;
	if(r>=n+1)
	return 1;
	if(dp[r][x]>=0)
	return dp[r][x];
	dp[r][x]=(solve(r+1,x)*com[x+m-1][m-1]+solve(r,x+1))%mod;
	return dp[r][x];
}
int main(){
	prep();
test{
	memset(dp,-1,sizeof(dp));
cin>>n>>m;
cout<<solve(1,0)<<endl;
}
}