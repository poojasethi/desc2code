#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<set>
using namespace std;
vector<int> v(1000001);
vector<int> s1;
vector<int> s2;
vector<int> s3;
vector<int> s4;
vector<int> s5;
int main()
{
    int i,t,a,b,k,j,res1,cal2,cal1;
    vector<int>::iterator it1,it2;
    for(i=2;i<=100000;i++)
    {
        if(v[i]==0)
        {
            for(j=i;j<=100000;j+=i)
            {
                v[j]+=1;
            }
        }
    }
    for(i=2;i<=100000;i++)
    {

            if(v[i]<=5)
            {
                switch(v[i])
                {
                case 1:
                    s1.push_back(i);
                    break;
                    case 2:
                    s2.push_back(i);
                    break;
                    case 3:
                        s3.push_back(i);
                        break;
                    case 4:
                        s4.push_back(i);
                        break;
                    case 5:
                        s5.push_back(i);
                        break;
                }
            }
        }
   scanf("%d",&t);
    while(t--)
    {
        res1=0;
        scanf("%d%d%d",&a,&b,&k);
        switch(k)
        {
        case 1:
            it1=lower_bound(s1.begin(),s1.end(),a);
            it2=lower_bound(s1.begin(),s1.end(),b);
            if((*it2)!=b)
            {
                it2--;
            }
            cal1=it1-s1.begin();
            cal2=it2-s1.begin();
            break;
        case 2:
            it1=lower_bound(s2.begin(),s2.end(),a);
            it2=lower_bound(s2.begin(),s2.end(),b);
            if((*it2)!=b)
            {
                it2--;
            }
            cal1=it1-s2.begin();
            cal2=it2-s2.begin();
            break;
        case 3:
            it1=lower_bound(s3.begin(),s3.end(),a);
            it2=lower_bound(s3.begin(),s3.end(),b);
            if((*it2)!=b)
            {
                it2--;
            }
            cal1=it1-s3.begin();
            cal2=it2-s3.begin();
            break;
        case 4:
            it1=lower_bound(s4.begin(),s4.end(),a);
            it2=lower_bound(s4.begin(),s4.end(),b);
            if((*it2)!=b)
            {
                it2--;
            }
            cal1=it1-s4.begin();
            cal2=it2-s4.begin();
            break;
        case 5:
            it1=lower_bound(s5.begin(),s5.end(),a);
            it2=lower_bound(s5.begin(),s5.end(),b);
            if((*it2)!=b)
            {
                it2--;
            }
            cal1=it1-s5.begin();
            cal2=it2-s5.begin();
            break;
        }
        res1=cal2-cal1+1;
        printf("%d\n",res1);
    }
    return 0;
}
