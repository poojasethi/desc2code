#include <stdlib.h>
#include <stdio.h>
#include <string.h>


#define get getchar_unlocked
//#define get getchar

inline int scan()
{
	int n = 0, s = 1;
	char p = get();
	if (p == '-') s = -1;
	while ((p<'0' || p>'9') && p != EOF&&p != '-') p = get();
	if (p == '-') s = -1, p = get();
	while (p >= '0'&& p <= '9') { n = (n << 3) + (n << 1) + (p - '0'); p = get(); }
	return n*s;
}

inline unsigned long  scan2(){
	unsigned long  n = 0, s = 1;
	char p = get();
	if (p == '-') s = -1;
	while ((p<'0' || p>'9') && p != EOF&&p != '-') p = get();
	if (p == '-') s = -1, p = get();
	while (p >= '0'&&p <= '9') { n = (n << 3) + (n << 1) + (p - '0'); p = get(); }
	return n*s;
}


inline unsigned long long  scan3(){
	unsigned long long  n = 0, s = 1;
	char p = get();
	if (p == '-') s = -1;
	while ((p<'0' || p>'9') && p != EOF&&p != '-') p = get();
	if (p == '-') s = -1, p = get();
	while (p >= '0'&&p <= '9') { n = (n << 3) + (n << 1) + (p - '0'); p = get(); }
	return n*s;
}

inline long long  scan4(){
	long long  n = 0, s = 1;
	char p = get();
	if (p == '-') s = -1;
	while ((p<'0' || p>'9') && p != EOF&&p != '-') p = get();
	if (p == '-') s = -1, p = get();
	while (p >= '0'&&p <= '9') { n = (n << 3) + (n << 1) + (p - '0'); p = get(); }
	return n*s;
}
#define MAX (100003)
int primeCount[MAX + 10];

class _PrimeCount{
private:

public:
	void SeiveCount(){
		memset(primeCount, 0x0, sizeof(primeCount));
		primeCount[1] = 1;
		int p = 2; int start = 2,i;
		for (start = 2; start < MAX;){

			primeCount[start] = 0;
			for (i = 2*start; i < MAX; i += start){
				if(i<MAX)primeCount[i]++;
			}

			//Advance Start to the next prime number
			for (i = start + 1; primeCount[i] != 0 && i<MAX; i++);
			if (primeCount[i] != 0)break;
			start = i;
		}
		for (i = 2; i < MAX; i++){
			if (primeCount[i] == 0)primeCount[i] = 1;
		}
	}

	int ComputeKPrime(int A, int B, int K){
		int KP = 0;
		for (int i = A; i <= B; i++){
			if (primeCount[i] == K)KP++;
		}
		return KP;
	}

};

int main(){
	int T;
	T = scan();
	_PrimeCount obj;
	obj.SeiveCount();

	while (T--){
		int A, B, K;
		A = scan(); B = scan(); K = scan();
		printf("%d\n", obj.ComputeKPrime(A, B, K));
	}
	return 0;
}

