import math

def getnumfactors(n):
	l = []
	temp = n
	nump = 2
	while temp != 1 :
		while 1 :
			if(temp%nump == 0):
				l.append(nump)
				# print nump 
				temp/=nump
			else :
				nump += 1
				break
	return len(set(l))

sievelis = []
countlis = [[] for i in range (100001)]

def isprime(n):
	for k in range(2 , math.sqrt(n)+1):
		if(n%k == 0):
			return False
		return True

def sieve(n):
	global sievelis
	sievelis = [0 for _ in range(n)]
	for i in range (2,100001):
		if(sievelis	[i] == 0):
			count_num = i
			while(count_num < 100001):
				sievelis[count_num] += 1
				count_num += i
def createcountlis():
	global sievelis
	global countlis
	cummlis = [0 for i in range (10)]
	for i in range(0 , 100001):
	#	print "cummlis " , i , cummlis
		cummlis[sievelis[i]] += 1
		countlis[i] = cummlis[:]
	#	print "countlis ", i , countlis[i]
	#print countlis[2]



def main():

	global sievelis
	global countlis
	t = int(raw_input())
	
	sieve(100001)
	createcountlis()

#	for i in range(100):
#		print "countlis ", i , countlis[i]

	for _ in range(t):
		arr = map(int , raw_input().split())
		test = arr[2]
		#print arr[0] , arr[1]
		ans = countlis[arr[1]][test] - countlis[arr[0]-1][test]
		print ans

if __name__ == '__main__':
	main()
