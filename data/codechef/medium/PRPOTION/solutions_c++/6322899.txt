#include <iostream>
#include <algorithm>
#include <cstdio>
#include <vector>
using namespace std;

#define print_v(v) for (long long int I = 0; I != v.size(); I++) {    cout << v[I] << " ";    } cout << endl;

int main() {
    int tc, R, G, B, M, i, j, t, maxx;
    vector<int> r, g, b;
    scanf("%d", &tc);

    while (tc--) {
        cin >> R >> G >> B >> M;

        for (i = 0; i < R; i++) {
            scanf("%d", &t);
            r.push_back(t);
        }
        for (i = 0; i < G; i++) {
            scanf("%d", &t);
            g.push_back(t);
        }
        for (i = 0; i < B; i++) {
            scanf("%d", &t);
            b.push_back(t);
        }

        sort(r.begin(), r.end());
        sort(g.begin(), g.end());
        sort(b.begin(), b.end());

        while (M--) {
            maxx = max(r[R - 1], max(g[G - 1], b[B - 1]));

            if (maxx == r[R - 1]) {
                for (i = 0; i < R; i++) {
                    r[i] /= 2;
                }
            } else if (maxx == g[G - 1]) {
                for (i = 0; i < G; i++) {
                    g[i] /= 2;
                }
            } else if (maxx == b[B - 1]) {
                for (i = 0; i < B; i++) {
                    b[i] /= 2;
                }
            }

            //cout << "R : ";print_v(r);cout << "G : ";print_v(g);cout << "B : ";print_v(b);
        }

        printf("%d\n", max(r[R - 1], max(g[G - 1], b[B - 1])));
        r.clear(); g.clear(); b.clear();
    }


    return 0;
}
