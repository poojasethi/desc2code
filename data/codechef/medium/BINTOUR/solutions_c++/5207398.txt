/*
asif_mak
BINTOUR
*/


#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
using namespace std;
#define MP make_pair
#define pb push_back
#define rep(i,n) for(int i=0;i<n;i++)
#define REP(i,a,b) for(int i=a;i<=b;i++)
typedef long long ll;
typedef vector<int> vi;
typedef vector< vi > vvi;
typedef pair< int,int > ii;
#define sz(a) int((a).size())]
#define clr(a) memset(a,0,sizeof(a))
#define ini(a) memset(a,-1,sizeof(a))
#define inp(n) scanf("%d",&n)
#define inp2(n,m) scanf("%d%d",&n,&m)
#define ins(s) scanf("%s",s);
#define out(n) printf("%d\n",n)
#define out2(n,m) printf("%d %d\n",n,m)
#define inc(n) scanf("%c",&n)
#define MOD 1000000009
#define MOD_INV 1000000006
#define MAX 100009
#define INF 999999999

#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)

ll fact[1<<21];
ll bigmod(ll a, ll b)
{
	if(b == 0) return 1;
	ll x = bigmod(a, b / 2);
	x = (x * x) % MOD;
	if(b & 1) x = (x * a) % MOD;
	return x;
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    int k;
    cin>>k;
    ll n=1<<k;
    fact[0]=1;
    ll ans=0;
    REP(i,1,n)
    fact[i]=(fact[i-1]*i)%MOD;
    REP(i,1,n)
    {
              if(i<n/2-1)
             { 
             cout<<"0"<<endl;
             continue;            
             }
             
             ans=(fact[i-1]*bigmod(fact[n/2-1],MOD-2))%MOD;
             ans=(ans*bigmod(fact[i-n/2],MOD-2))%MOD;
             ans=(ans*2)%MOD;
             ans=(ans*fact[n/2])%MOD;
             ans=(ans*fact[n/2])%MOD;
             cout<<ans<<endl;
    }
    
    
    //system("pause");
    return 0;
}
