#include<stdio.h>
#include<math.h>
 
int power[19]={2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768,65536,131072,262144,524288};
long long int fact[1100000];
int get()
{
	char c;
	while(c=getchar(),(c<'0'||c>'9')&&(c!='-'));
  	int flag=(c=='-');
       	if(flag)
        c=getchar();
  	int x=0;
  	while(c>='0'&&c<='9')
  	{
	      x=x*10+c-48;
	      c=getchar();
    	}
  return flag?-x:x;
}
 
long long int fpow(long long int a,long long int b)
{
    if(b == 0) return 1;
	long long int x = fpow(a, b / 2);
	x=(x*x)%1000000009;
	if(b&1)x=(x*a)%1000000009;
	return x;
}
 
int main()
{
    int k;
    long long int c,n,i;
        k=get();
        n=power[k-1];
        fact[0]=1;
		for(i=1;i<=n;i++)
			fact[i]=(fact[i-1]*i)%1000000009;
        if(k>1)
        {
            for(i=1;i<n/2;i++)
                printf("0\n");
            for(i=n/2;i<=n;i++)
            {
                c=(fact[i-1]*fpow(fact[n/2-1],1000000009-2))%1000000009;
                c=(c*fpow(fact[i-n/2],1000000009-2))%1000000009;
                c=(c*2)%1000000009;
                c=(c*fact[n/2])%1000000009;
                c=(c*fact[n/2])%1000000009;
                printf("%lld\n",c);
            }
        }
        else
            printf("2\n2\n");
    return 0;
} 