#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int i, n, k, l, r;
	ll sum = 0;
	cin >> n >> k;
	vi v(n);
	for( i=0;i<n;i++ )
	{
		cin >> v[i];
		sum += v[i];
	}
	multiset< pair<ll,pair<int,int> > > s;
	s.insert( mp( sum,mp(0,n-1) ) );
	multiset< pair<ll,pair<int,int> > >::iterator it;
	set<pair<int,int> > present;
	set<pair<int,int> >::iterator ft;
	while((k--) &&( !s.empty()) )
	{
		it = s.end();
		it--;
		sum = it->first;
		cout<<sum<<" ";
		l = (it->second).first;
		r = (it->second).second;
		s.erase( it);
		if( l ^ r)
		{
			ft = present.find(mp(l+1,r));
			if( ft == present.end())
			{
				s.insert( mp( sum-v[l],mp(l+1,r) ) );
				present.insert(mp(l+1,r));
			}
			ft = present.find(mp(l,r-1));
			if( ft == present.end())
			{
				s.insert( mp( sum-v[r],mp(l,r-1) ) );
				present.insert(mp(l,r-1));
			}
		}
	}
    return 0;
}
