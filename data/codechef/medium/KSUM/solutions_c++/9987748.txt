
#include<bits/stdc++.h>
using namespace std;
#define D(x)        cout<<#x " = "<<(x)<<endl
#define un(x)       x.erase(unique(x.begin(),x.end()), x.end())
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c) scanf("%d %d %d", &a, &b, &c)
#define pb          push_back
#define mp          make_pair
#define xx          first
#define yy          second
#define hp          (LL) 999983
#define MAX         100000
typedef long long int LL;
typedef pair<int,int> pii;

LL csum[MAX+11];
vector<LL> mxsm;

struct rng{
    pii idx;

    rng(){};
    rng(int x, int y){idx.xx = x; idx.yy = y;}
};

LL F(rng x) {return csum[x.idx.yy] - csum[x.idx.xx-1];}

bool operator < (const rng &u, const rng &v){
    return F(u) < F(v);
}

priority_queue<rng> PQ;
map< pii, bool > M;

int main()
{
    //freopen("c:\\Users\\User\\Desktop\\in.txt", "r", stdin);
    //freopen("c:\\Users\\User\\Desktop\\out.txt", "w", stdout);

    int i, j, k, n, v;
    rng cur;

    sff(n, k);
    for(i = 1; i <= n; i++)
    {
        sf(v);
        csum[i] = v + csum[i-1];
    }

    PQ.push(rng(1, n));

    while(mxsm.size() < k)
    {
        cur = PQ.top();
        PQ.pop();

        if(M[cur.idx]) continue;
        M[cur.idx] = true;
        mxsm.pb(F(cur));

        if(cur.idx.xx == cur.idx.yy) continue;
        PQ.push(rng(cur.idx.xx, cur.idx.yy-1));
        PQ.push(rng(cur.idx.xx+1, cur.idx.yy));
    }

    for(i = 0; i < k; i++)
        printf("%lld ", mxsm[i]);

    return 0;
}



/*
4 10
1 100 1 1
*/
