#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
const long long int mod = 1e9 + 7;
int n , k;
int a[N];
long long pref[N];
set < pair < long long , pair < int , int > >  , greater < pair < long long , pair < int , int > >  > > snd;
vector < long long > ans;
inline long long get(int l , int r){
    return pref[r] - pref[l - 1];
}
void disp(set < pair < long long , pair < int , int > > , greater < pair < long long , pair < int , int > >  > > rtq){
    set < pair < long long , pair < int , int > > , greater < pair < long long , pair < int , int > >  > > :: iterator it;
    for(it = rtq.begin(); it != rtq.end(); ++it){
        cout << (*it).first << " " << (*it).second.first << " " << (*it).second.second << endl;
    }
    cout << endl;
}
int main(){
    cin >> n >> k;
    for(int i = 1; i <= n; ++i){
        cin >> a[i];
    }
    memset(pref , 0 , sizeof pref);
    snd.clear();
    ans.clear();
    for(int i = 1; i <= n; ++i){
        pref[i] += pref[i - 1] + a[i];
    }
    for(int i = 1; i <= n; ++i){
        snd.insert(make_pair(get(i , n) , make_pair(i , n)));
    }
    int cur = 0;
   // disp(snd);
    while(!snd.empty() && cur < k){
        ++cur;
        ans.push_back((*snd.begin()).first);
        int i = (*snd.begin()).second.first;
        int j = (*snd.begin()).second.second;
        snd.erase((*snd.begin()));
        if(j - 1 > 0)
        snd.insert(make_pair(get(i , j - 1) , make_pair(i , j - 1)));
    }
    for(int i = 0 ; i < k ; ++i){
        cout << ans[i] << " ";
    }
    cout << endl;
    return 0;
}
