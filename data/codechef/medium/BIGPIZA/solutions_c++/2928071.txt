//{{{ theCodeGame
/******
When we seek excellence, excellence exists in performance, moreso in the preparation :D
******/
#include<iostream>
#include<algorithm>
#include<cmath>
#include<climits>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<stack>
#include<bitset>
#include<set>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<ctime>
#include<map>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iomanip>
#include<cctype>
//#undef thecodegame
#ifdef thecodegame
    #include<debug.h>
#else
    #define db(...) {}
    #define dbt(...) {}
	#define pprintf(...) {}
#endif

using namespace std;

#define assert(f) {if(!(f)){fprintf(stderr,"Line-->%d  Assertion failed: %s\n",__LINE__,#f);exit(1);}}
#define MOD 	 1000000007LL
#define ABS(x)   ((x)<0?-(x):(x))
#define SQR(x) 	 ((x)*(x))
#define CUBE(x)  ((x)*(x)*(x))
#define pnl      printf("\n")
#define REP(i,n)        for(__typeof(n) i=0;i<(n);i++)
#define FOR(i,a,b)      for(__typeof(b) i=(a);i<(b);++i)
#define FORE(i,a,b)     for(__typeof(b) i=(a);i<=(b);++i)
#define FORD(i,a,b,d)   for(__typeof(b) i=(a);i<(b);i+=(d))
#define FORR(i,n,e)     for(__typeof(n) i=(n);i>=(e);--i)
#define FORRD(i,n,e,d)  for(__typeof(n) i=(n);i>=(e);i-=(d))
#define REP_IT(it,m)    for(it=m.begin();it!=m.end();it++)
#define FORI(it,s) 	    for(__typeof((s).begin()) (it)=(s).begin();(it)!=(s).end();(it)++)
#define FOREACH(it, X)  for(__typeof((X).begin()) it = (X).begin(); it != (X).end(); ++it)
#define UNIQUE(v)       sort(ALL(v)),v.erase(unique(ALL(v)),v.end())
#define FILL(a,b)       memset(a,b,sizeof(a))
#define ALL(v)          (v).begin(), (v).end()
#define RALL(v)         (v).rbegin(), (v).rend()
#define checkbit(n,b)   (((n)>>(b))&1)
#define PB push_back
#define MP make_pair
#define XX first
#define YY second

const double PI=acos(-1.0);
const double EPS=1e-11;
template<typename T>inline T mod(T N,T M){return (N%M+M)%M;}
double start;//time
#ifdef amy
	#define SD(x) scanf("%d",&x);
#else
	#define SD(x) inp(x)
    #define getcx getchar_unlocked
    template<typename T>inline void inp(T &n){
        n=0;int ch=getcx();int sign=1;
        while(ch<'0'||ch>'9'){if(ch=='-')sign=-1;ch=getcx();}
        while(ch>='0'&&ch<='9'){n=(n<<3)+(n<<1)+ch-'0',ch=getcx();}
        n=n*sign;
    }
#endif
//}}}
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef pair<int,int> PII;
typedef vector<pair<int,int> >VPII;

#define SIZE 10001
#define MAXX 100000009
void arjun(){puts("Arjuna");}
void bhima(){puts("Bhima");}
int grundy[SIZE];
bool visited[SIZE];
void pre(){
    grundy[0]=0;
    grundy[1]=0;
    FOR(i,2,SIZE){
        FILL(visited,false);
        for(int x=0,y= i- 2;x <= y; ++x, --y){ // try all possible sub-games
			visited[ grundy[x] ^ grundy[y] ] = true;
        }
        int g;
		for(g=0;visited[g];++g){} // find mex (minimum excluded value)
		grundy[i] = g;
    }
}//end precompute
int N;
void doThis(int ccc){
    SD(N);
    if(grundy[N]){
        arjun();
    }else{
        bhima();
    }

}//end doThis
int main(){
start = clock();
ios_base::sync_with_stdio(false);
#ifdef amy
	freopen("C:\\A\\in.txt","r+",stdin);
	freopen("C:\\A\\out.txt","w+",stdout);
	//freopen("C:\\A\\err.txt","w+",stderr);
#endif
pre();
int cases = 1;
SD(cases);
FORE(i,1,cases){doThis(i);}
#ifdef amy
	fprintf(stdout,"\nTIME: %.3lf sec\n",(double)(clock()-start)/(CLOCKS_PER_SEC));
#endif
//while((clock()-start)<0.999*CLOCKS_PER_SEC){} // :D :D
return 0;
}//end main
