/*
 	C++ Template
	Gaurav Babbar
*/

#include<bits/stdc++.h>
#define MOD 1000000007
#define MAX 10005
#define mp make_pair
#define pb push_back
#define gc getchar
#define pc putchar
#define ll long long
#define llu unsigned long long

ll ABS(ll a){if(a>0) return a; else return (-1*a);}
int gcd(int a,int b){if (b==0) return a;else return gcd(b,a%b);}
llu power(llu b,llu exp,llu m) {llu ans=1; b%=m; while(exp){if(exp&1) ans=(ans*b)%m; exp>>=1; b=(b*b)%m; } return ans; }

using namespace std;

#define DisplayDebuggingInfo 0
#define debug(args...) {dbg,args; if(DisplayDebuggingInfo) cerr<<endl;}
struct debugger
{
      template<typename T> debugger& operator,(const T& v)
      {
          if(DisplayDebuggingInfo)
          {
              cerr<< v <<" ";
              return *this;
          }
      }
}dbg;

inline void inp(ll &n)
{
  n = 0;
  int ch = gc();
  int sign = 1;
  while(ch < '0' || ch > '9') {
    if (ch == '-') sign = -1;
    ch = gc();
  }
  while(ch >= '0' && ch <= '9')
    n = (n<<3) + (n<<1) + ch - '0', ch = gc();
  n = n*sign;
}

inline void outp(ll a)
{
  char snum[25];
  int i=0;
  do
  {
    snum[i++]=a%10+48;
    a=a/10;
  } while(a!=0);
  i=i-1;
  while(i>=0)
    pc(snum[i--]);
  pc('\n');
}

/* Main Code sarts here */

int grundy[MAX];

void reset()
{
}

void input()
{
    ll n;
    cin>>n;
    if(grundy[n])
    {
        cout<<"Arjuna\n";
    }
    else
    {
        cout<<"Bhima\n";
    }
}

void preprocess()
{
    // calculate grundy numbers

    // refer 1.cpp for grundy definitions

    grundy[0] = grundy[1]= 0;//terminal positons - losing => value 0
    bool occured[MAX];
    for(int i=2;i<MAX;++i)
    {
        memset(occured,0,sizeof(occured));
        //divide into N-2 subgames -- try all combinatons 0,n-2;1-n-3;2,n-4 ....

        for(int x=0,y=i-2;x<=y;x++,y--)
        {
            // doing xor because there are multiple games
            occured[grundy[x]^grundy[y]] = 1;
            //this is the definition of grundy -- it is that minimum integer that is not there in the postions you have moved to
        }

        int g;
        for(g=0;occured[g];++g);

        grundy[i] = g;
    }

//
//	for(int i=2;i<=20;++i)
//        cout<<i<<" "<<grundy[i]<<endl;
}

int main()
{
//   freopen("input.txt","r",stdin);
//   freopen("outputDP.txt","w",stdout);
   ll t;
   inp(t);
   preprocess();
   while(t--)
   {
	   reset();
	   input();
   }
   return 0;
}
