import math
def is_square(apositiveint):
    x = apositiveint // 2
    seen = set([x])
    while x * x != apositiveint:
        x = (x + (apositiveint // x)) // 2
        if x in seen: return False
        seen.add(x)
    return True
def factors(n):
    result = set()
    counter =0
    for i in range(1, int(n ** 0.5) + 1):
        div, mod = divmod(n, i)
        if mod == 0:
            result |= {i, div}
            tempdiv = div
            tempi = i
            while tempdiv > 0 :
                if tempdiv % 10== 4 or tempdiv %10 ==7:
                    counter = counter +1
                    break
                tempdiv = tempdiv/10
            while tempi > 0 :
                if tempi % 10== 4 or tempi %10 ==7:
                    counter = counter +1
                    break
                tempi =tempi/10
    return counter
x = raw_input()
y = int(x)
while y > 0:
    y = y-1
    num =int(raw_input())
    temp =2
    if num == 1:
        print "0"
    else:
        if is_square(num):
            asdf = math.sqrt(num)
            while asdf > 0:
                if asdf % 10 ==4 or asdf % 10==7:
                    temp = temp-1
                    break
                if asdf < 9 and asdf != 4 and asdf != 7:
                    break
            asdf = asdf/10
            if temp == 1:
                print factors(num)-1
            else:
                print factors(num)
        else:
            print factors(num)
 