#include <iostream>
#include <cstdio>
#include <cmath>
using namespace std;

int main()
{
    int t,i,n,otherDiv,ans;
    scanf("%d",&t);
    while(t)
    {
        scanf("%d",&n);
        /** Objective is to find
            factors p,q of n such that pq = n
            and |p-q| is minimized. Assume p<q...

            To avoid TLE:
            We don't need to check for all factors:-
            it is guaranteed one of the factors is
            always less than sqrt(n)

            So we iterate, starting from sqrt(n) and go down upto 2
            The moment we get a factor - we know its the answer
            (because it is the factor closest to the square root and less than it)

        **/

        ans = n-1;// corresponding to 1 x n
        //worst case - n is prime - then only 1 x n is possible

        for(i=(int)sqrt(n);i>1;i--)
        {
            if(n%i==0)//i is a factor
            {
                otherDiv = n/i;//otherDiv >= sqrt(n) >= i
                ans = otherDiv - i;//so ans is +ve always
                break;
            }
        }
        printf("%d\n",ans);
        t--;
    }
    return 0;
}