#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
#include<cmath>
#include<map>
#include<queue>
#include<fstream>
#include<cctype>
#include<sstream>
#include<algorithm>
#include<climits>
#include<numeric>
using namespace std;
#define MAX 1005
#define mod 1000000007
typedef long long int ll;
typedef long double lf;

lf distance_calc( int x1, int y1, int x2, int y2 ){
    int xdiff = x1-x2, ydiff = y1-y2;
    return sqrt(xdiff*xdiff + ydiff*ydiff);
}

lf triangle_area( int x1, int y1, int x2, int y2, int x3, int y3 ){
    lf s1 = distance_calc(x1,y1,x2,y2);
    lf s2 = distance_calc(x3,y3,x2,y2);
    lf s3 = distance_calc(x1,y1,x3,y3);
    lf s = (s1+s2+s3)/2;
    return sqrt(s*(s-s1)*(s-s2)*(s-s3));
}

int main(){
    int t, max_index, min_index, n;
//    for( scanf("%d", &t); t; t-- ){
    scanf("%d", &n);
    int x1,y1,x2,y2,x3,y3;
    lf max_area = LLONG_MIN, min_area = LLONG_MAX;
    for( int i=1; i<=n; i++ ){
        scanf("%d%d%d%d%d%d", &x1, &y1, &x2, &y2, &x3, &y3);
        lf area = triangle_area(x1,y1,x2,y2,x3,y3);
        if( max_area <= area ){
            max_index = i;
            max_area = area;
        }
        if( min_area >= area ){
            min_index = i;
            min_area = area;
        }
    }
    printf("%d %d\n", min_index, max_index);
//    }
    return 0;
}