from __future__ import print_function, division
import sys 
# There are K nuclear reactor chambers labelled from 0 to K-1. Particles are
# bombarded onto chamber 0. The particles keep collecting in the chamber 0.
# However if at any time, there are more than N particles in a chamber, a
# reaction will cause 1 particle to move to the immediate next chamber
# (if current chamber is 0, then to chamber number 1), and all the particles in 
# the current chamber will be be destroyed and same continues till no chamber has
# number of particles greater than N. Given K,N and the total number of particles
# bombarded (A), find the final distribution of particles in the K chambers.
# Particles are bombarded one at a time. After one particle is bombarded, the set
# of reactions, as described, take place. After all reactions are over, the next
# particle is bombarded. If a particle is going out from the last chamber, 
# it has nowhere to go and is lost.


def li_n_particles(n_particles, reaction_threshold, n_chambers):
    '''Returns a list containg the number of particles in each chamber 
    0,.., n_chambers-1.'''

    li_particles = [0 for _ in xrange(n_chambers)]
    if n_particles == 0 or reaction_threshold == 0:
        return li_particles
    li_particles[0] = n_particles
    for ind in xrange(1, n_chambers):

        if li_particles[ind-1] > reaction_threshold:
            li_particles[ind] = li_particles[ind-1] // (reaction_threshold+1)
            li_particles[ind-1] = li_particles[ind-1] % (reaction_threshold+1)

    li_particles[n_chambers-1] = li_particles[n_chambers-1] % (reaction_threshold+1)
    return li_particles
        

# Run program
# f = sys.stdin
# if len(sys.argv) > 1:
#     # python life_and_everything.py infile.txt returns 
#     # ['life_and_everything.py', 'infile.txt']
#     f = open(sys.argv[1])

   
li_inputs = map(int, raw_input().split())
n_particles = li_inputs[0]
reaction_threshold = li_inputs[1]
n_chambers = li_inputs[2]
 
li_particles = li_n_particles(n_particles, reaction_threshold, n_chambers)
op = ' '.join(map(str, li_particles))
print(op + '\n')
