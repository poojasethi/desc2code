#include <bits/stdc++.h>

using namespace std;
#define maxm (1<<22)
int dp[maxm][9],n;
long long a[25],target;
int solve(long long int tar,long long int mask,int k)
{
    int i;
    if(k==0)
    {
        if(mask!=(1<<n)-1)
            return 0;
        return 1;
    }
    if(dp[mask][k]!=-1)
        return dp[mask][k];
    if(tar==0)
    {
        return (dp[mask][k]=solve(target,mask,k-1));
    }
    dp[mask][k]=0;
    for(i=0;i<n;i++)
    {
        if(mask & (1<<i))
            continue;
        if(tar<a[i])
            continue;
            dp[mask][k]=max(dp[mask][k],solve(tar-a[i],mask|(1<<i),k));

    }
    return dp[mask][k];
}

int main()
{
   int t,k,i,y;
   long long int xx;
   scanf("%d",&t);
   while(t--)
   {
       memset(dp,-1,sizeof(dp));
       xx=0;
       scanf("%d %d",&n,&k);
       for(i=0;i<n;i++)
       {
           scanf("%lld",&a[i]);
           xx=xx+a[i];
       }
       if((xx%k!=0LL)||n<k)
   {
       printf("no\n");
   }
   else
    if(xx==0)
    printf("yes\n");
   else
   {
       target=xx/k;
   // cout<<target<<"\n";
       y=solve(target,0,k);
   if(y==1)
    printf("yes\n");
   else
    printf("no\n");
   }
   }
    return 0;
}
