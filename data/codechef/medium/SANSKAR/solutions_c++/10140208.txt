#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MAXN = 22;
LL A[MAXN];
int dp[10][(1 << 21) + 10];
int main(){
    int t;
    cin >> t;
    while(t--){
        int N, K;
        scanf("%d%d", &N, &K);
        LL sum = 0;
        for(int i = 0;i < N;++i){
            scanf("%lld", &A[i]);
            sum += A[i];
        }
        if(sum % K != 0){
            printf("no\n");
            continue;
        }
        memset(dp, 0, sizeof dp);
        dp[0][0] = 1;
        LL x = sum/K;
        //cout << x << "\n";
        for(int sk = 0;sk < K;++sk){
            for(int bitmask = 0;bitmask < (1 << N);++bitmask){
                if(!dp[sk][bitmask]) continue;
                LL sum = 0;
                for(int i = 0;i < N;++i){
                    if(bitmask & (1 << i))
                        sum += A[i];
                }
                sum -= sk * x;
                for(int i = 0;i < N;++i){
                    if(bitmask & (1 << i)){
                        continue;
                    }
                    int newmask = (bitmask) | (1 << i);
                    if(sum + A[i] == x){
                        dp[sk + 1][newmask] = 1;
                    } else if(sum + A[i] < x){
                        dp[sk][newmask] = 1;
                    }
                }
            }
        }
        int notzeromask = 0;
        for(int i = 0;i < N;++i){
            if(A[i] != 0){
                notzeromask |= (1 << i);
            }
        }
        dp[K][(1 << N) - 1] |= dp[K][notzeromask];
        if(notzeromask == 0 && N >= K){
            dp[K][(1 << N) - 1] = 1;
        }
        /*
        for(int k = 0;k <= K;++k){
            for(int i = 0;i < (1 << N);++i){
                cout << dp[k][i] << " " ;
            }
            cout << "\n";
        }*/
        if(dp[K][(1 << N) - 1] == 1){
            printf("yes\n");
        } else printf("no\n");
    }
    return 0;
}
