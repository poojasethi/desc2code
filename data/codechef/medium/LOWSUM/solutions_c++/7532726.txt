#include<bits/stdc++.h>
using namespace std;
typedef long long int ll ;
typedef unsigned int ui;
#define br printf("\n")
#define loop(i,k,n) for(int i=k;i<n;i++)
#define loopr(i,k,n) for(int i=k;i>=n;i--)
#define arrin(arrname,size) loop(i,0,size) cin>>arrname[i]
#define fastinput() ios_base::sync_with_stdio(false)
#define mod 1000000007
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x).size())
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
vector <pair <int,int > >  query;
int main()
{
	fastinput();
	int t; cin>>t;
	while(t--)
	{
		query.clear();
	 int n;int q;
	 cin>>n;cin>>q;
	 long long a[n],b[n];
	 int k[n];
	 arrin(a,n);
	 arrin(b,n);
	 loop(i,0,n)
	 k[i]=0;
	 sort(a,a+n);
	 sort(b,b+n);
	 int x;
    loop(i,0,q)
	{
		cin>>x;
		query.pb(mp(x,i));
		if (query[i].first > n*n) return 0;
	}
	sort(all(query));
	 priority_queue < pair < long long , int > > f;
	 loop(i,0,n)
	 {
	 	f.push(mp(-a[i]-b[0],i));
	 }
	 long long ans[600];
	 long long tmp;
	 int loc;
	 int ct=0;
	 loop(i,0,q)
	 {
	 	while(ct<query[i].F)
	 	{
	 		tmp=abs(f.top().F);
	 		loc=f.top().S;
	 	//	cout<<tmp<<" "<< loc<<endl;
	 		k[loc]++;
	 	//	cout<<a[loc]<<" "<<b[k[loc]]<<endl;
	 		f.pop();
	 	if(k[loc]<n)	f.push(mp(-a[loc]-b[k[loc]],loc));
	 	//cout<<"insertrd "<<-a[loc]-b[k[loc]]<<endl;
	 	
	 		ct++;
		 }
		 ans[query[i].S]=tmp;
	 }
	 loop(i,0,q)
	 {
	 	printf("%lld\n",ans[i]);
	 }
	 
	 
	}
	return 0;
}