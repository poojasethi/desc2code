#include <iostream>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstdio>
using namespace std;

struct sum
{
	long long int val;
	int indx;
};

class CompareSum {
    public:
    bool operator()(sum& t1, sum& t2) 
    {
       if (t1.val > t2.val) return true;
       return false;
    }
};

int main()
{
	int t=0;
	scanf("%d",&t);
	while(t--)
	{
		long long int out[20000]={0};
		int curr=0;
		int k,q;
		long long int c=0;
		vector<long long int> a(20000),b(20000);
		scanf("%d %d",&k,&q);
		for(int i=0;i<k;i++)
			{
				scanf("%lld",&a[i]);
			}
		for(int i=0;i<k;i++)
		{
			scanf("%lld",&b[i]);
		}

		sort(a.begin(),a.begin()+k);
		sort(b.begin(),b.begin()+k);
		priority_queue <struct sum, vector<struct sum>, CompareSum> q1;
		int loc[20000]={0};
		for(int i=0;i<k;i++)
		{
			struct sum v;
			v.val=a[i]+b[loc[i]++];
			v.indx=i;
			q1.push(v);
		}

		int filler=10000;
		while(filler--)
		{
			struct sum temp_v,temp_ins;
			if (q1.empty())
				break;
			temp_v=q1.top();
			q1.pop();
			if(loc[temp_v.indx]<k)
			{
				temp_ins.val=a[temp_v.indx]+b[loc[temp_v.indx]++];
				temp_ins.indx=temp_v.indx;
				q1.push(temp_ins);					
			}
			out[curr++]=temp_v.val;	
		}
		while(q--)
		{
			int quer=0;
			scanf("%d",&quer);
			printf("%lld\n",out[quer-1]);
		}

	}

	return 0;
}