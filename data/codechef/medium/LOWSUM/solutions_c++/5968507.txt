#include<bits/stdc++.h>
using namespace std;
vector<unsigned long long> A,B;
int RRank(unsigned long long number)
{
    int p1 = 1,p2 = B.size();
    int answer=0;
    while(p1<=A.size())
    {
        while(p2>0)
        {
            if(A[p1-1]+B[p2-1]<=number)
                break;
            p2--;
        }
        if(p2==0)
            break;
        answer+=p2;
        p1++;
    }
    return answer;
}
int LRank(unsigned long long number)
{
    int p1 = 1,p2 = B.size();
    int answer=0;
    while(p1<=A.size())
    {
        while(p2>0)
        {
            if(A[p1-1]+B[p2-1]<number)
                break;
            p2--;
        }
        if(p2==0)
            break;
        answer+=p2;
        p1++;
    }
    return answer;
}
int main()
{
#ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
#endif // ONLINE_JUDGE
    ios_base::sync_with_stdio(true);
    int T;
    cin >> T;
    while(T--)
    {
        int K,Q;
        cin >> K >> Q;
        A.assign(K,0);
        for(int i=0; i<K; i++)
            scanf("%llu",&A[i]);
        sort(A.begin(),A.end());
        B.assign(K,0);
        for(int i=0; i<K; i++)
            scanf("%llu",&B[i]);
        sort(B.begin(),B.end());

        int no = min(10005,K*K);
        unsigned long long Max_Limit = A[K-1]+B[K-1];
        unsigned long long Min_Limit = A[0]+B[0];
        unsigned long long ans = (Max_Limit + Min_Limit)/2;
        int Rrank = RRank(ans);
        int Lrank = LRank(ans);
        while(!(no <= Rrank && no > Lrank))
        {
            if( Rrank < no && Lrank < no)
                Min_Limit = ans+1;
            else if(Rrank >= no && Lrank >= no)
                Max_Limit = ans-1;
            ans = (Min_Limit+Max_Limit)/2;
            Rrank = RRank(ans);
            Lrank = LRank(ans);
        }
        vector<unsigned long long> V;
        for(int i=0;i<K;i++)
        {
            for(int j=0;j<K && A[i]+B[j]<=ans;j++)
                V.push_back(A[i]+B[j]);
        }
        sort(V.begin(),V.end());
        while(Q--)
        {
            int no;
            scanf("%d",&no);
            printf("%lld\n",V[no-1]);
        }
    }
}
