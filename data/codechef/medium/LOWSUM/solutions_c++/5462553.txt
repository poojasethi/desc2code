#include <bits/stdc++.h>

using namespace std;

const int N = (int)2e4 + 5;

long long A[N], B[N];
set < pair <long long, pair <int, int> > > S;

int main()
{
	int T, n, q, idx;
	scanf("%d", &T);
	vector <long long> ans;
	while(T--)
	{
		ans.clear();
		S.clear();
		scanf("%d %d", &n, &q);
		for(int i = 0; i < n; i++)
			scanf("%lld", &A[i]);
		for(int i = 0; i < n; i++)
			scanf("%lld", &B[i]);
		sort(A, A + n);
		sort(B, B + n);
		int limit = min(10000, n * n);
		S.insert(make_pair(A[0] + B[0], make_pair(0, 0)));
		while(ans.size() < limit)
		{
			pair <long long, pair <int, int> > temp = *(S.begin());
			S.erase(temp);
			ans.push_back(temp.first);
			int idx1 = temp.second.first, idx2 = temp.second.second;
			if(idx1 < n - 1 && idx2 < n - 1)
			{
				S.insert(make_pair(A[idx1 + 1] + B[idx2], make_pair(idx1 + 1, idx2)));
				S.insert(make_pair(A[idx1] + B[idx2 + 1], make_pair(idx1, idx2 + 1)));
			}
			else if(idx1 < n - 1)
				S.insert(make_pair(A[idx1 + 1] + B[idx2], make_pair(idx1 + 1, idx2)));
			else if(idx2 < n - 1)
				S.insert(make_pair(A[idx1] + B[idx2 + 1], make_pair(idx1, idx2 + 1)));
		}
		for(int i = 0; i < q; i++)
		{
			scanf("%d", &idx);
			printf("%lld\n", ans[idx - 1]);
		}
	}
	return 0;
}