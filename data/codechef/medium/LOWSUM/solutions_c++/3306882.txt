#include <iostream>
#include <utility>
#include <algorithm>
#include <queue>
using namespace std;

#define MAXN 20002
long long a[MAXN], b[MAXN], res[502];
int k[MAXN];
pair<int,int> q[MAXN];

int main() {
    ios_base::sync_with_stdio(false);
    int t;
    cin >> t;
    while(t--) {
        int n, m;
        cin >> n >> m;
        for(int i=0;i<n;++i) cin >> a[i];
        for(int i=0;i<n;++i) cin >> b[i];
        for(int i=0;i<m;++i) {
            cin >> q[i].first;
            q[i].second = i;
        }
        sort(a,a+n);
        sort(b,b+n);
        sort(q,q+m);
        priority_queue<pair<long long, int> > pq;
        for(int i=0;i<n;++i) {
            k[i] = 0;
            pq.push(make_pair(-a[i]-b[0],i));
        }
        int count = 1;
        long long cur = -pq.top().first;
        int x = pq.top().second;
        k[x]++;
        if(k[x]<n) pq.push(make_pair(-a[x]-b[k[x]],x));
        pq.pop();
        for(int i=0;i<m;++i) {
            int temp = q[i].first;
            while(count<temp) {
                cur = -pq.top().first;
                x = pq.top().second;
                k[x]++;
                if(k[x]<n) pq.push(make_pair(-a[x]-b[k[x]],x));
                pq.pop();
                count++;
            }
            res[q[i].second] = cur;
        }
        for(int i=0;i<m;++i) cout << res[i] << endl;
    }
    return 0;
}
