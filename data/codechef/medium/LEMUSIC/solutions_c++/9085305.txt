#include<stdio.h>
#include <vector>
#include <algorithm>
#include <map>
# define v (it->second)
using namespace std;
map <int, vector <int> > m;
map<int,int> minl;
typedef map <int, vector <int> >::iterator mvit;
typedef vector <int>::iterator vit;
typedef map<int,int>::iterator miit;
vector <int> minimum;
int T;
unsigned long long int sum;
int main()
{
	int N,L,B,i,M;
	scanf("%d",&T);
	while(T--)
	{
		sum=0;
		minl.clear();
		m.clear();
		minimum.clear();
		scanf("%d",&N);
		for(i=0;i<N;i++)
		{
			scanf("%d%d",&B,&L);
			if(!minl.count(B))
				minl[B]=L;
			else if(minl[B]<L)
			{
				m[B].push_back(L);
			}
			else // minl[B]>=L
			{
				m[B].push_back(minl[B]);
				minl[B]=L;
			}
		}
		M=minl.size();
		for(miit it=minl.begin();it!=minl.end();it++)
			minimum.push_back(v);
		sort(minimum.begin(),minimum.end());
		for(i=0;i<M;i++)
		{
			sum+=(unsigned long long)(i+1)*minimum[i];
			//printf("%d\n",minimum[i]);
		}
		for(mvit it=m.begin();it!=m.end();it++)
		{
			for(i=0;i<v.size();i++)
			{
				sum+=(unsigned long long)M*v[i];
				//printf("%d : %d\n",it->first,v[i]);
			}
		}
		printf("%llu\n",sum);
	}
	return 0;
}