#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#include <cmath>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <queue>
#include <bitset>

using namespace std;

#define FOR(i,a,b) for (int i = int(a); i <= b; i++)
#define INF 1000000000
#define mod 1000000007
#define ll long long int
// #define inp(x) scanf("%d",&x)
#define inchar getchar_unlocked
 
inline void inp( ll &n )
{
n=0;
ll ch=inchar();ll sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}

typedef pair<ll,ll> ii;

vector<ii> vec;

bitset<1000000010> vis;
bitset<100010> ind;

bool comp(ii a,ii b)
 {
    return a.second < b.second;  
 }


int main() {

    ll test,n,x,y,ans;
    inp(test);
    while(test--)
     {
         inp(n);
         vec.assign(n+1,ii(0,0)); 
        // vis.reset();
         ind.reset();     
         ans = 0;
         FOR(i,1,n)
          {
            inp(x);inp(y);
            vec[i] = ii(x,y);         
          }
         sort(vec.begin()+1,vec.end(),comp);
         ll c = 0;
         FOR(i,1,n)
          {
             if(!(vis[vec[i].first]))
              {
                c++;
                ind[i] = 1;
                vis[vec[i].first] = 1;
                ans += c*vec[i].second;            
              }         
          }
          FOR(i,1,n)
           {
             if(!ind[i])
              {
                ans += c*vec[i].second;          
              }         
             vis[vec[i].first] = 0;
           }
           
           printf("%lld\n",ans);         
     }
    
    
    //getchar();
    //getchar();
	return 0;
} 
