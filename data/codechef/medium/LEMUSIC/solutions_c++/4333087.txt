#include<stdio.h>
    #include<string.h>
    #include<stdlib.h>
    #include<math.h>
    #define MAX 100005
    int b[MAX],X[MAX],l[MAX],arr[MAX];
    int input()
    {
    int t=0;
    char c;
    c=getchar_unlocked();
    while(c<'0' || c>'9')
    c=getchar_unlocked();
    while(c>='0' && c<='9')
    {
    t=(t<<3)+(t<<1)+c-'0';
    c=getchar_unlocked();
    }
    return t;
    }
    void sort1(int lo,int hi)
    {
    int mid=(lo+hi)/2,i=lo,j=hi;
    int pivot=b[mid],temp;
    while(i<=j)
    {
    while(b[i]<pivot) i++;
    while(b[j]>pivot) j--;
    if (i<=j)
    {
    temp=l[i];
    l[i]=l[j];
    l[j]=temp;
    temp=b[i];
    b[i]=b[j];
    b[j]=temp;
    i++;
    j--;
    }
    }
    if (lo<i-1) sort1(lo,i-1);
    if (i<hi) sort1(i,hi);
    }
    void quicksort(int lo,int hi)
    {
    int mid=(lo+hi)/2,i=lo,j=hi;
    int pivot=X[mid],temp;
    while(i<=j)
    {
    while(X[i]<pivot) i++;
    while(X[j]>pivot) j--;
    if (i<=j)
    {
    temp=X[i];
    X[i]=X[j];
    X[j]=temp;
    i++;
    j--;
    }
    }
    if (lo<i-1) quicksort(lo,i-1);
    if (i<hi) quicksort(i,hi);
    }
    int main()
    {
    int t,n,i,j,k,temp;
    t=input();
    while(t--)
    {
    int counter=0;
    n=input();
    memset(b,0,(n+5)*4);
    for(i=0; i<n; i++)
    {
    b[i]=input();
    l[i]=input();
    }
    sort1(0,n-1);
    int in=0,min,count=0;
    long long ans=0,A,B;
    for(i=0; i<n;)
    {
    count++;
    min=l[i];
    in=i;
    k=i+1;
    while(1)
    {
    if (b[i]==b[k])
    {
    if (l[k]<min)
    {
    min=l[k];
    in=k;
    }
    k++;
    }
    else break;
    }
    l[in]=0;
    X[count]=min;
    //ans=ans+min*count;
    i=k;
 
    }
    quicksort(1,count);
    for(i=1; i<=count; i++)
    {
    A=(long long)i;
    B=(long long)X[i];
    ans=ans+A*B;
    }
    long long sum=0;
    for(i=0; i<n; i++)
    {
    A=(long long)l[i];
    sum=sum+A;
    }
    ans=ans+sum*(long)count;
    printf("%lld\n",ans);
 
    }
 
    return 0;
    }