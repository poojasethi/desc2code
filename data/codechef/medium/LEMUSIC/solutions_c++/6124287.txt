#include <iostream>
#include <cmath>
#include <string>
#include <cstring>
#include <vector>
#include <stack>
#include <cstdio>
#include <algorithm>
#include <map>
#include <cstdlib>
#include <queue>
#include <set>
 
using namespace std;
 
struct data {
  int b;
  int l;
};
typedef struct data tri;
typedef long long ll;
typedef long L;
typedef int I;
typedef double D;
typedef float F;
 
#define SL(s) strlen(s)
#define BUF 1024
#define pb(i) push_back(i)
#define it(x) vector<x>::iterator x
#define inf 2147483647
 
char ibuf[BUF];
int ipt = BUF;
int SI()
{
  while(ipt<BUF && ibuf[ipt]<'0')
    ipt++;
  if(ipt==BUF)
  {
      fread(ibuf,1,BUF,stdin);
      ipt=0;
      while(ipt<BUF && ibuf[ipt]<'0')
        ipt++;
  }
  int n=0;
  while(ipt<BUF && ibuf[ipt]>='0')
    n=(n*10)+(ibuf[ipt++]-'0');
  if (ipt==BUF)
  {
      fread(ibuf,1,BUF,stdin);
      ipt=0;
      while(ipt<BUF && ibuf[ipt]>='0')
        n=(n*10)+(ibuf[ipt++]-'0');
  }
  return n;
}
 
//ll mod=1000000007;
 
/* code starts here */
void f();
bool compare(tri, tri);
int main()
{
int t;
t=SI();
while(t--)
  f();
return 0;
}
void f()
{
  int n,i;
  tri A[100000];
  int temp[100000];
  n=SI();
  for(i=0;i<n;i++)
    {
      A[i].b=SI();
      A[i].l=SI();
    }
  std::sort(A,A+n,compare);
  ll s=0,ans=0,k=0;
  temp[k++]=A[0].l;
  for(i=1;i<n;i++)
  {
    if(A[i].b==A[i-1].b) 
      {
        s+=(ll)(A[i].l);
      }
    else
    {
      temp[k++]=A[i].l;
      
    }
  }
  ans+=s*k;
std::sort(temp,temp+k);
for(i=0;i<k;i++)
 ans+=(ll)(i+1)*(ll)temp[i];
 
  printf("%lld\n",ans);
 
}
bool compare(tri x, tri y)
{
  if(x.b>y.b) return false;
  if(x.b<y.b) return true;
  if(x.l<y.l) return true;
  return false;
}