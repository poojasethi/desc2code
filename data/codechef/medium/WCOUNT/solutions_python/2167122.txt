M = 10**9 + 7

def c(n, r):
    if n < r or n == 0 or r == 0:
        return 0

    if n - r > r:
        r = n - r
    
    if n == r:
        return 1
        
    num = 1
    for i in range(r + 1, n + 1):
        num = (num * i)
    
    den = 1
    for i in range(2, n - r + 1):
        den = (den * i)
    
    return num / den

def nfac(n):
    p = 1
    for i in range(2, n + 1):
        p = (p * i)
    
    return p


def process_string(s):
    ccnt = {}
    
    for c in s:
        if c in ccnt:
            ccnt[c] += 1
        else:
            ccnt[c] = 1
    
    return ccnt


t = int(raw_input())
while t > 0:
    t -= 1
    s = raw_input()
    
    ccnt = process_string(s)
    n = len(s)
    d = 0
    for v in ccnt.values():
        if v > 1:
            d += v
    
    if d == 0:
        print nfac(n) % M
    else:
        p1 = 1
        if n != d:
            p1 = nfac(n - d)
    
        p2 = 1
        n1 = n
        for v in ccnt.values():
            if v > 1:
                p2 = p2 * c(n1, v)
                n1 -= v
    
        print (p1 * p2) % M