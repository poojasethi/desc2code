#include <stdio.h>
#define MAX 100001
 
int fastInput() {
    int val = 0;
    char c = getchar_unlocked();
    while (c < '0' || c > '9') c = getchar_unlocked();
    while (c >= '0' && c <= '9') {
        val = (val<<1) + (val<<3) + (c-'0');
        c = getchar_unlocked();
    }
    return val;
}
 
inline void scanString(char str[])
{
    register char c = getchar_unlocked();
    register int i = 0;
    while(c == '\n' || c == ' ') c = getchar_unlocked();
    while(c != '\n') {
        str[i++] = c;
        c = getchar_unlocked();
    }
    str[i] = '\0';
}
 
inline void printInt(int n) {
	if(!n) {
	    putchar_unlocked('0');
	}
	int i = 0;
	char buff[10];
	while(n) {
	    buff[i++] = (n%10) + '0';
	    n /= 10;
	}
	while(i) putchar_unlocked(buff[--i]);
	putchar_unlocked('\n');
}
 
int main() {
    int n, m, i, j, now, temp, ans[MAX], a[10][2] = {0};
    char num[MAX];
    n = fastInput();
    m = fastInput();
    scanString(num);
    ans[0] = 0;
    for (i=1; i<n; i++) {
        now = num[i] - '0';
        for (j=0; j<10; j++) {
            temp = j - (num[i-1] - '0');
            (temp > 0) ? (a[j][0] += temp) : (a[j][1] += temp);
        }
        ans[i] = a[now][0] - a[now][1];
    }
    for (i=0; i<m; i++) {
        now = fastInput();
        printInt(ans[now-1]);
    }
    return 0;
} 