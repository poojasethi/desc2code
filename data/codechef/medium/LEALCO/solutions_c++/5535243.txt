#include <iostream>
#include<vector>
using namespace std;
bool isbad(vector<int> r,int k,int m)
{
	int n=r.size();
	for(int i=0;i<=n-k;i++)
	{
		int maxr=0;
		for(int j=i;j<k+i;j++)
		{
			maxr=max(maxr,r[j]);
		}
		int count=0;
		for(int j=i;j<k+i;j++)
		{
			if(maxr==r[j])
			count++;
			
		}
		if(count>=m)
		return true;
		
	}
	return false;
}
int popcount(int x)
{
	int count=0;
	while(x)
	{
		count++;
		x=x&(x-1);
	}
	return count;
}

int main() {
	int T;
	cin>>T;
	
	for(int t=0;t<T;t++ )
	{
		int n,k,m;
		cin>>n>>k>>m;
		vector<int> r(n);
		for(int i=0;i<n;i++)
		{
			cin>>r[i];
		}
		int res=n+1;
		for(int mask=0;mask<(1<<n);mask++)
		{
			int size=popcount(mask);
			if(res<=size)
			{
				continue;
			}
			vector<int> newr(n);
			for(int i=0;i<n;i++)
			{
				if(mask&(1<<i))
				{
				   newr[i]=r[i]+1;	
				}
				else
				{
				   newr[i]=r[i];
				}
			}
			if(!isbad(newr,k,m))
			  res=size;
			
		}
		if(res==n+1)
		{
			res=-1;
		}
		cout<<res<<endl;
	}
	return 0;
}