#include<iostream>
using namespace std;
#include<cstdio>
template<typename X> inline void inp(X &n ) {
     int ch=getchar();int sign=1;n=0;
     while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}
     while(  ch >= '0' && ch <= '9' ) n = (n<<3)+(n<<1) + ch-'0', ch=getchar();
     n=n*sign;
}
int isbad(int *r,int n,int m, int k)
{
          for(int i=0;i<=n-k;i++)
   {


    int maxm=0,c=0;//cout<<"m value"<<m<<endl;
         for(int j=i;j<=i+k-1;j++ )
         {
             if(r[j]>maxm)
             {
                 c=1;
                 maxm=r[j];
             }
             else if(r[j]==maxm)
                {++c;
                //cout<<"value of c and i "<<c<<i<<endl;
        }

         }
          if(c>=m)
             {
                return 1;
             }
    }
    return 0;
}

  void backtrack(int i,int *r,int n,int m,int k,int &ans)
{//int c;
int maxm=0,c=0;cout<<"m value"<<m<<endl;
         for(int j=i;j<=i+k-1;j++ )
         {
             if(r[j]>maxm)
             {
                 c=1;
                 maxm=r[j];
             }
             else if(r[j]==maxm)
                {++c;
                cout<<"yaha ghuse for value i "<<i<<endl;
                cout<<"c vlu "<<c<<endl;}
             if(c==m)
             {
                 cout<<"ghus gaye"<<endl;
                 r[j]=r[j]+1;
                 ans++;
                 backtrack(i,r,n,m,k,ans);
             }
         }
    }

int main()
{
    int t;
    inp(t);
    while(t--)
    {
        int m,k,n,v;
        inp(n);
        inp(k);
        inp(m);
        int r[n+1];

        for(int i=0;i<n;i++)
        {
            inp(v);
            r[i]=v;
        }
        int flag=0;
       // cout<<isbad(r,n,m,k);
       int anss=n+1;
      for(int mask=0;mask<=(1<<n);mask++)
      {int ans=0; int newr[n];
      for(int i=0;i<n;i++)
      {

          if(mask&1<<i)
           {

            newr[i]=r[i]+1;ans++;}
          else
            newr[i]=r[i];
      }
      if(!isbad(newr,n,m,k))
      {
          if(ans<anss)
          {
              anss=ans;
              flag=1;

          }
     //    cout<<ans<<endl;
                 // break;
      }
      }
      if(!flag)
        cout<<-1<<endl;
        else
            cout<<anss<<endl;
    }

}
