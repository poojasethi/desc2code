#include<iostream>
using namespace std;
int r[17];
int modified[17];
int m,k,n;
int pow;
#define INT_MAX 1000000
bool correct(int start,int k,int m)
{
    int large=modified[start];
    int sum=0;
    for(int i=0;i<k;i++)
    {
        if(modified[i+start]>large)
        large=modified[i+start];
    }
    for(int i=0;i<k;i++)
    {
        if(modified[i+start]==large)
        sum+=1;
    }
    if(sum>=m)
    return 0;
    else
    return 1;
}
bool check(int k,int m)
{
  for(int i=0;i<=n-k;i++)
  {
      if(correct(i,k,m)==0){
      return 0;
      }
  }
  return 1;
}
int power(int n)
{
    pow=1;
    for(int i=0;i<n;i++)
    pow=pow*2;
    return  pow;
}
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
       int ans=INT_MAX;
       cin>>n>>k>>m;
       int temp=0;
       int flag=0;
       for(int i=0;i<n;i++)
       cin>>r[i];
       pow=power(n);
       for(int u=0;u<pow;u++)
       {
              //copy
              for(int i=0;i<n;i++)
              modified[i]=r[i];
              temp=0;
              for(int j=0;j<n;j++)
              {
                if(u&1<<j)
                {
                modified[j]++;
                temp++;
                }
              }
             if(check(k,m))
            {
                flag=1;
                if(temp<ans)
                ans=temp;
            }
       }
       if(flag)
       cout<<ans<<endl;
       else
       cout<<"-1\n";
    }
    return 0;
}
