#include <iostream>
#include <algorithm>

using namespace std;

int arr[18];

// TODO : try this using sliding window maximum.

bool isValid(int n, int k, int m)   {
    for(int i = 1 ; i <= n - k + 1; ++i)   {

        int maxel = arr[i];
        int maxfr = 1;

        for(int j = i + 1 ; j < i + k ; ++j)    {
            if(arr[j] > maxel)  {
                maxel = arr[j];
                maxfr = 1;
            }
            else if(arr[j] == maxel)    {
                ++maxfr;
            }
        }

        if(maxfr >= m)return false;
    }

    return true;
}

bool check(int r, int n, int k, int m)   {

    bool bits[n + 1];


    for(int i = n ; i > n - r ; --i)bits[i] = 1;
    for(int i = n - r ; i >= 1 ; --i)bits[i] = 0;

    do {
        for (int i = 1; i <= n; ++i)arr[i] += bits[i];

        if (isValid(n, k, m))return true;

        for (int i = 1; i <= n; ++i)arr[i] -= bits[i];
    }while (next_permutation(bits + 1, bits + n + 1));

    return false;
}

int main() {

    int t,n,m,k;scanf("%d",&t);
    while (t--) {
        scanf("%d %d %d",&n,&k,&m);
        for(int i = 1; i <= n ; ++i)scanf("%d",&arr[i]);

        int answer = 0;

        while(answer <= n)  {
            if(check(answer,n,k,m))   {
                printf("%d\n",answer);
                break;
            }
            ++answer;
        }

        if(answer > n)printf("-1\n");
    }

    return 0;
}