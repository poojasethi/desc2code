#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<utility>
#include<numeric>
using namespace std;

int arr[20],str[20];
int n,k,m;

bool isbad()
{
//     cout<<"\n sebset array : ";
//     for(int i=0;i<n-k;i++)cout<<str[i]<<" ";cout<<endl;
     for(int i=0;i<=n-k;i++)
     {
             int max_value = *max_element(str+i,str+k+i);
//             cout<<"\n maximum value = "<<max_value<<endl;
             
             int max_freq = count(str+i,str+k+i,max_value);
//             cout<<"\n "<<max_value<<" is present "<<max_freq<<" tims \n";
             
             if(max_freq>=m)return true;
             }
     return false;
     }
     
int main()
{
    int t,ans;
    cin>>t;
    while(t--)
    {
              cin>>n>>k>>m;
              ans = 100;
//              cout<<"\n n = "<<n<<" , k = "<<k<<" ,m = "<<m<<endl;
              for(int i=0;i<n;i++)cin>>arr[i];
//              cout<<"\n arr : ";
//              for(int i=0;i<n;i++)cout<<arr[i]<<" ";cout<<endl;
              
              for(int mask = 0; mask < (1<<n) ; mask++)
              {
                      int no_of_one = __builtin_popcount(mask);
//                      cout<<"\n no of one of "<<mask<<" in binary = "<<no_of_one<<endl;
                      
                      if(ans>no_of_one)
                      {
                                       for(int i=0;i<n;i++)
                                       {
                                               if(mask & 1<<i)str[i] = arr[i]+1;
                                               else str[i] = arr[i];
                                               }
                                       
                                       if(isbad()==false)ans = no_of_one;
                                       }
                      }
              if(ans==100)ans=-1;
              cout<<ans<<endl;
              }
    return 0;
    }
