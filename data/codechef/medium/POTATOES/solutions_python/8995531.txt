import sys,math

prime_numbers = []


def sieve_of_eratosthenes(n):
    is_prime = [True]*(n + 1)
    sqrt_n = int(math.sqrt(n))
    for i in range(2, sqrt_n + 1):
        if is_prime[i] is True:
            start = i*i
            for j in range(start, n+1, i):
                is_prime[j] = False
    for i in range(2, n+1):
        if is_prime[i] == True: prime_numbers.append(i)


sieve_of_eratosthenes(3000)
l = prime_numbers.__len__()


test_cases = int(sys.stdin.readline())
while test_cases > 0:
    test_cases -= 1
    x,y = map(int ,sys.stdin.readline().split())
    sum = x+y
    z = 0
    for i in range(0, l):
        if sum < prime_numbers[i]:
            z = prime_numbers[i]
            break
    print z - sum