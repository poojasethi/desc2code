
#include <cstdio>

using namespace std;

#define min(x, y) ((x) < (y) ? (x) : (y))

const int INF = 1000100;

const int P = 1000000007;

int a[1001000];
int c[1001000];
int d[1001000];
int e[1001000];
int s1[1001000];
int m1[1001000];
int s2[1001000];
int m2[1001000];

int main() {
    int n, m;
    scanf("%d %d", &n, &m);
    for (int i = 0; i < n; ++i) {
        scanf("%d", &a[i]);
    }
    for (int i = 0; i < n; ++i) {
        c[i] = INF;
    }
    c[0] = 1;
    int h1 = 0, h2 = 0;
    s1[h1++] = 0;
    m1[0] = 1;
    d[1] = 1;
    for (int i = 1, j = 0; i < n; ++i) {
        while ((j < i) && (a[i] - a[j] > m)) {
            if (!h2) {
                while (h1) {
                    s2[h2] = s1[--h1];
                    m2[h2] = c[s2[h2]];
                    if (h2 && (m2[h2 - 1] < m2[h2])) m2[h2] = m2[h2 - 1];
                    ++h2;
                }
            }
            d[c[j]] -= e[j];
            if (d[c[j]] < 0) d[c[j]] += P;
            ++j;
            --h2;
        }
        c[i] = INF;
        if (h1) c[i] = min(c[i], m1[h1 - 1]);
        if (h2) c[i] = min(c[i], m2[h2 - 1]);
        d[c[i] + 1] += d[c[i]];
        if (d[c[i] + 1] >= P) d[c[i] + 1] -= P;
        e[i] = d[c[i]];
        c[i] += 1;
        s1[h1] = i;
        m1[h1] = c[s1[h1]];
        if (h1 && (m1[h1 - 1] < m1[h1])) m1[h1] = m1[h1 - 1];
        ++h1;
    }
    printf("%d %d\n", c[n - 1] - 2, e[n - 1]);
    return 0;
}
