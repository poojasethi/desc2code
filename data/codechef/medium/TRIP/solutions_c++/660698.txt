#include <cstdio>
#include <cstdlib>
#include <cctype>

using namespace std;

const int MODULO = 1000000007;
const int MAX = 1000001;
const int BUFSIZE = 4096;

int station[MAX];
int opt1[MAX];
int opt2[MAX];

int buf_pos;
char g_buf[BUFSIZE];

int readint()
{
    int n;
    while(buf_pos < BUFSIZE && !isdigit(g_buf[buf_pos]))
        buf_pos++;
    if (buf_pos == BUFSIZE)
    {
        buf_pos = 0;
        fread(g_buf, 1, BUFSIZE, stdin);
        while (buf_pos < BUFSIZE && !isdigit(g_buf[buf_pos]))
            buf_pos++;
    }
    n = 0;
    while (buf_pos < BUFSIZE && isdigit(g_buf[buf_pos]))
        n =  10 * n + (g_buf[buf_pos++] - '0');
    if (buf_pos == BUFSIZE)
    {
        buf_pos = 0;
        fread(g_buf, 1, BUFSIZE, stdin);
        while(buf_pos < BUFSIZE && isdigit(g_buf[buf_pos]))
            n = 10 * n + (g_buf[buf_pos++] - '0');
    }
    return n;
}

int main()
{
    int n, m;
    long long sum;
    int pos1, pos2;

    // init
    n = readint();
    m = readint();
    for (int i=0; i<n; i++)
    {
        station[i] = readint();
    }
    opt1[0] = -1;
    opt2[0] = 1;
    sum = pos1 = pos2 = 0;

    // dp
    for (int i=1; i<n; i++)
    {
        while (station[i] - station[pos1] > m) 
            sum -= opt2[pos1++];
        opt1[i] = opt1[pos1] + 1;
        if(pos2 < pos1)
        {
            pos2 = pos1;
            sum = 0;
        }
        while(opt1[pos1] == opt1[pos2])
        {
            sum += opt2[pos2];
            pos2++;
        }
        opt2[i] = sum % MODULO;
    }

    // print result
    printf("%d %d\n", opt1[n-1], opt2[n-1]);

    return 0;
}

