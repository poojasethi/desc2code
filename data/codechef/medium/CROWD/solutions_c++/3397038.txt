#include<iostream>
#include<cstring>
#include<stdio.h>
#include<algorithm>
#include<vector>
#define mp make_pair
#define pb push_back
#define MAX(a,b) (a>b?a:b)
#define MIN(a,b) (a<b?a:b)
#define F first
#define S second
#define ll long long
#define pp pair<ll,ll>
#define vec vector<ll>
#define P 1000000007
using namespace std;
ll a[3][3],b[3][3];
vec v;
int i,j,k,T;
ll n,ans,tmp[3][3],r[3][3];


void nm(ll a[3][3],ll b[3][3]){
    memset(tmp,0,sizeof(tmp));

    int i,j,k;

    for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        for(k=0;k<3;k++)
        tmp[i][j]=(tmp[i][j]+(a[i][k]*b[k][j])%P)%P;
    memcpy(a,tmp,sizeof(tmp));
}
void xx(ll a[3][3],ll y){
     int i,j;
     memset(r,0,sizeof(r));
     bool t=0;
     while(y){
        if(y&1)
            if(!t){
               t=1;
               for(i=0;i<3;i++)
                for(j=0;j<3;j++)r[i][j]=a[i][j];
               }else
            nm(r,a);
        nm(a,a);
        y>>=1;
     }
     memcpy(a,r,sizeof(r));

}
ll xar(ll y){
   ll ans=1,a=2;
   while(y){
      if(y&1)ans=(ans*a)%P;
      a=(a*a)%P;
      y>>=1;
   }
   return ans;
}

main()
{


 scanf("%d",&T);
 while(T--){
     scanf("%lld",&n);
     if(n==1 || n==2){printf("0\n");
                      continue;}
     for(i=0;i<3;i++)
        for(j=0;j<3;j++)
        b[i][j]=0;
     for(i=0;i<3;i++)b[i][2]=1;
     b[1][0]=1;
     b[2][1]=1;
     a[0][0]=1; a[0][1]=2; a[0][2]=4;
     xx(b,n-2);
     nm(a,b);
     ans=xar(n);
     //cout<<c[0][2]<<endl;
     printf("%d\n",(ans-a[0][2]+P)%P);
 }
}
