#include<bits/stdc++.h>
using namespace std;
//int d=3;
long long findPow(long long z,long long n,long long mod)
{
    long long r = 1;
	for(;n;n>>=1)
	{
		if(n&1) r = (r*z)%mod;
		z = (z*z)%mod;
	}
	return r;
}

void matmult(long long  a[3][3],long long  b[3][3],long long c[3][3],long long  mod)
{
    int i,j,k;
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j]=0;
            for(k=0;k<3;k++)
            {
                long long temp = (a[i][k]*b[k][j])%mod;
                if(temp>=mod)
					temp%=mod;
				c[i][j]+=temp;
				if(c[i][j]>=mod)
					c[i][j]%=mod;
            }
        }
    }

}

long long id[3][3] = {{1,0,0},{0,1,0},{0,0,1}};
void matrix_expo(long long Z[3][3],long long n,long long ans[3][3],long long M)
{
    int i,j;
	if(n==1)
	{
		for(i=0;i<3;i++)
            for(j=0;j<3;j++)
				ans[i][j]=Z[i][j];
		return;
	}
	else if(n==0)
	{
		 for(i=0;i<3;i++)
            for(j=0;j<3;j++)
				ans[i][j]=id[i][j];
		return;
	}

	long long c[3][3];
	long long x[3][3];

	matrix_expo(Z,n/2,x,M);
	matmult(x,x,c,M);

	if(n%2==1)
	{
		matmult(Z, c, ans,M);
		return;
	}
	else
	{
		 for(int i=0;i<3;i++)
            for(int j=0;j<3;j++)
				ans[i][j]=c[i][j];
		return;
	}
}



int main()
{
    long long n,m = 1000000007;
    //long long farr[]={2,4,7};
    long long a[3][3]={{1,1,1},{1,0,0},{0,1,0}};long long result[3][3];
    int T;
    scanf("%d",&T);
    while(T-->0)
    {
        scanf("%lld",&n);

    if(n>3)
    {

        long long ans = 0,p;

        matrix_expo(a,n-3,result,m);


        ans = 7*result[0][0] + 4*result[0][1] + 2*result[0][2];
        ans = (ans)%m;
        p=findPow(2LL,n,m);
        ans = (p-ans + m)%m;
        printf("%lld\n",ans);

    }

    else
		{
			if(n==1)
				printf("0\n");
			else if(n==2)
				printf("0\n");
			else
				printf("1\n");

		}
    }
}
