    #include <stdio.h>
    #define mod 1000000007
    long long int ans1,ans2;
    void mypow(long long int d)
    {
    int i,j,k,cnt=0;
    long long M[3][3]={{1,1,1},{1,0,0},{0,1,0}};
    long long temp1[3][3]={{1,0,0},{0,1,0},{0,0,1}};
    long long temp[3][3],sum=0;
    while(d>0)
    {
    if(d & 0x01)
    {
    for(i=0;i<3;i++)
    {
    for(j=0;j<3;j++)
    {
    sum=0;
    for(k=0;k<3;k++)
    {
    sum=sum+(temp1[i][k]*M[k][j])%mod;
    if(sum>mod)
    sum=sum-mod;
    }
    temp[i][j]=sum;
    }
    }
    for(i=0;i<3;i++)
    {
    for(j=0;j<3;j++)
    temp1[i][j]=temp[i][j];
    }
    }
    d = d >> 1;
    if(d>0)
    {
    for(i=0;i<3;i++)
    {
    for(j=0;j<3;j++)
    {
    sum=0;
    for(k=0;k<3;k++)
    {
    sum=sum+(M[i][k]*M[k][j])%mod;
    if(sum>mod)
    sum=sum-mod;
    }
    temp[i][j]=sum;
    }
    }
    for(i=0;i<3;i++)
    {
    for(j=0;j<3;j++)
    M[i][j]=temp[i][j];
    }
    }
    }
    ans1=(temp1[0][0]*4+temp1[0][1]*2+temp1[0][2]*1)%mod;
    ans2=(temp1[0][0]*3+temp1[0][1]*2+temp1[0][2]*1)%mod;
    }
    long long power(long long a,long long b)
    {    
	long long temp=1;
	while(b>0)
	{
		if(b & 0x01)
		{
		temp=(temp*a)%mod;
	    }
		b = b >> 1;
		if(b>0)
		{
			a=(a*a)%mod;
		}
	}
	return temp;
    }
    int main()
    {
    long long int N,x,y;
    int T;
    scanf("%d",&T);
    while(T--)
    {
    scanf("%lld",&N);
    if(N==1)
    printf("0\n");
    else if(N==2)
    printf("0\n");
    else if(N==3)
    printf("1\n");
    else
    {
    	mypow(N-3);
    	x=ans1;
    	y=ans2;
    	x=x+y;
    	if(x>mod)
    	x=x-mod;
    	y=power(2,N);
    	y=y-x;
    	if(y<0)
    	y=y+mod;
    	printf("%lld\n",y);
    }
    }
    return 0;
    } 