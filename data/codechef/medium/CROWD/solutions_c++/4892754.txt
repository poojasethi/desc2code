#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
//1 = HH,2 == HT,3 = TT,4 = TH;
long long a[4][4] = {{0,1,0,0},{0,0,1,1},{0,0,1,1},{1,1,0,0}};
long long temp[4][4] = {{0,1,0,0},{0,0,1,1},{0,0,1,1},{1,1,0,0}};
long long p[4] = {1,2,2,2};
long long p1[4] = {1,2,2,2};
long long val1 = 1;
long long val = 1;
void multi(long long a[][4],long long b[][4])
{
	long long t[4][4];
	for(int i = 0;i < 4;i++)
	{
		for(int j = 0;j < 4;j++)
		{
			long long sum = 0;
			for(int k = 0;k < 4;k++)
			{
				sum+=(a[i][k]*b[k][j]);
				sum%=MOD;
			}
			t[i][j] = sum;
		}
	}
	for(int i = 0;i < 4;i++)
		for(int j = 0;j <4;j++)
			a[i][j] = t[i][j];
	return ;
}
void pow_val(long long N)
{
	if(N == 0){
		val1 = 1;
		return ;
	}
	if(N == 1)
	{
		for(int i = 0;i < 4;i++)
		{
			for(int j = 0;j < 4;j++)
				a[i][j] = temp[i][j];
		}
		val1 = 2;
		return ;
	}
	pow_val(N/2);
	val1 = (val1*val1)%MOD;
	multi(a,a);
	if(N%2 == 1){
		multi(a,temp);
		val1 = (val1*2)%MOD;
		return ;
	}
	else return ;
}
int main()
{
	int T;
	scanf("%d",&T);
	long long A[T+1];
	pair<long long ,long long> B[T+1];
	for(int i = 0;i < T;i++)
	{
		long long N;
		scanf("%lld",&A[i]);
		B[i].first = A[i];
		B[i].second = i;
	}
	B[T].first = 3;
	B[T].second = T;
	sort(B,B+T+1);
	for(int i = 0;i <= T;i++){
//		cout << B[i].first << endl;
		if(B[i].first == 1)
		{
			val = 2;
			A[B[i].second] = 0;
		}
		else if(B[i].first == 2)
		{
			val = 4;
			A[B[i].second] = 0;
		}
		else if(B[i].first == 3){
			A[B[i].second] = 1;
			val = 8;
		}
		else{
			pow_val(B[i].first-B[i-1].first);
			long long sum = 0;
			val = (val1*val)%MOD;
			if(B[i].first != B[i-1].first){
				for(int k = 0;k < 4;k++)
				{
					sum = 0;
					for(int j = 0;j < 4;j++)
					{
						//cout << a[k][j] << " "; 
						sum+=(a[k][j]*p[j]);
						sum%=MOD;
					}
//					cout << endl;
					p1[k] = sum;
				}
				sum = 0;
				for(int k = 0;k < 4;k++){
					p[k] = p1[k];
					sum+=p[k];
					sum%=MOD;
				}
			
			}
		else{
				sum = 0;
			for(int k = 0;k < 4;k++){
				sum+=p[k];
				sum%=MOD;
			}
		}
			A[B[i].second] = (MOD+val-sum)%MOD;
		}
	}
	for(int i = 0;i < T;i++)
		cout << A[i] << endl;
	return 0;
}