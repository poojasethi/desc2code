#include<cstdio>
using namespace std;
    #define MOD 1000000007
    #define ROW 3
     
    void matrixExp(long long a[][ROW],long long b[][ROW],long long n,long long exp);
    long long power(long long base,long long exp);
     
    int main()
    {
    	long long ans,t,n,a[ROW][ROW],b[ROW][ROW],twoN;
    	scanf("%lld",&t);
    	while(t--)
    	{
    		a[0][0]=b[0][0]=1;
    		a[0][1]=b[0][1]=1;
    		a[0][2]=b[0][2]=0;
    		a[1][0]=b[1][0]=1;
    		a[1][1]=b[1][1]=0;
    		a[1][2]=b[1][2]=1;
    		a[2][0]=b[2][0]=1;
    		a[2][1]=b[2][1]=0;
    		a[2][2]=b[2][2]=0;
    		scanf("%lld",&n);
    		if(n<=2)
    			ans=0;
    		if(n>2)
    		{
    			ans=0;
    			twoN=(power(2,n)%MOD);
    			matrixExp(a,b,3,n-2);
    			ans=((4*b[0][0])+(2*b[1][0])+b[2][0])%MOD;
    			ans=twoN-ans;;
    			if(ans<0)
    				ans=ans+MOD;
    		}
    		printf("%lld\n",ans);
    	}
    	return 0;
    }
     
    void matrixExp(long long a[][ROW],long long b[][ROW],long long n,long long exp)
    {
    	long long i,j,k,p,c[ROW][ROW];
    	if(exp<=1)
    		return;
    	matrixExp(a,b,n,exp>>1);
    	for(i=0; i<n; i++)
    	{
    		for(j=0; j<n; j++)
    		{
    			p=0;
    			for(k=0; k<n; k++)
    				p=(p+(b[i][k]*b[k][j]))%MOD;
    			c[i][j]=p;
    		}
    	}
    	for(i=0; i<n; i++)
    		for(j=0; j<n; j++)
    			b[i][j]=c[i][j];
    	if(exp & 1)
    	{
    		for(i=0; i<n; i++)
    		{
    			for(j=0; j<n; j++)
    			{
    				p=0;
    				for(k=0; k<n; k++)
    					p=(p+(b[i][k]*a[k][j]))%MOD;
    				c[i][j]=p;
    			}
    		}
    	}
    	for(i=0; i<n; i++)
    		for(j=0; j<n; j++)
    			b[i][j]=c[i][j];
   	}
     
    long long power(long long base,long long exp)
    {
    	long long res=0;
    	if(exp==0)return 1;
    	res=power(base,exp>>1);
    	res=(res*res)%MOD;
    	if(exp & 1)
    	res=(res*base)%MOD;
    	return res;
    }
 