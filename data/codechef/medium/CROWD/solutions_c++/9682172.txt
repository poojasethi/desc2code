#include<bits/stdc++.h>
using namespace std;
#define mod 1000000007
long long int temp[3][3];

void multiply(long long int mat1[][3],long long int mat2[][3])
{
    long long int i,j,k;
    long long int c[3][3];
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            c[i][j]=0;
            for(k=0;k<3;k++)
            {
                c[i][j]=(c[i][j]+(mat1[i][k]*mat2[k][j]))%mod;

            }
        }
    }
    for(i=0;i<3;i++)
    {
        for(j=0;j<3;j++)
        {
            mat2[i][j]=c[i][j];
        }
    }

}
void power(long long int matrix1[][3],long long int matrix2[][3],long long int n)
{
    if(n==1)
    {

        return;
    }

       power(matrix1,matrix2,n/2);
        multiply(matrix1,matrix2);
       if(n%2!=0)
        {
            multiply(temp,matrix2);
        }


}
long long int fun(long long int n)
{
    int i,j;
    if(n==0)
        return 1;
    if(n==1)
        return 2;
    if(n==2)
       return 4;

       long long int matrix[3][3]={{1,1,1},{1,0,0},{0,1,0}};
       for(i=0;i<3;i++)
       {
           for(j=0;j<3;j++)
           {
               temp[i][j]=matrix[i][j];
           }
       }
       power(matrix,matrix,n-2);
       long long int ans;
       ans=(matrix[0][0]*4+matrix[0][1]*2+matrix[0][2]*1)%mod;
       return ans;

}
long long int powers(long long int a,long long int b)
{
    if(b==0)
        return 1;
    long long int temp=powers(a,b/2);
    if(b%2==0)
        return ((temp%mod)*(temp%mod))%mod;
    else
        return (((temp%mod*temp%mod)%mod)*a%mod)%mod;
}
int main()
{
    long long int t,n,answer;
    cin>>t;
    while(t!=0)
    {
         cin>>n;
        answer=fun(n);
         answer=powers(2,n)-answer;
         if(answer<0)
            answer=(answer+mod)%mod;

           cout<<answer<<endl;




        t--;
    }
    return 0;
}
