#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;

#define 	pb(x) 		push_back(x)
#define 	sz(a) 		int((a).size())
#define 	sortA(v)	sort(v.begin(), v.end())
#define 	sortD(v)	sort(v.begin(), v.end(), greater<auto>())
#define 	mp(x,y) 	make_pair(x,y)
#define 	all(v) 		v.begin(),v.end() //Don’t put the whole right-hand side of these macros into parentheses – that would be wrong!
#define 	it(i,v) 	__typeof(v.begin()) i;
#define 	fill(a,val) 	memset(a,val,sizeof(a))
#define 	rep(i,a,b) 	for(__typeof(a) i = (a); i < (b) ; i++)
#define 	rev(i,a,b) 	for(__typeof(a) i = (a); i >= (b) ; i--)
#define 	tr(vec,it) 	for(__typeof(vec.begin()) it = vec.begin();it!=vec.end();++it)
#define 	present(container, element) (container.find(element) != container.end())
#define 	cpresent(container, element) (find(all(container),element) != container.end())
#define 	LL 			long long int

#define 	iss 		istringstream
#define 	oss 		ostringstream
#define 	sqr(x) 		(x)*(x)
#define 	ESP 		(1e-9)
#define 	PI 			3.1415926535897932384626433832795
#define 	MOD 		1000000007
#define     X 			first
#define     Y 			second

LL a[3][3];
LL ans[3][3];
LL temp[3][3]={{1,1,1},{1,0,0},{0,1,0}};

void reset(){
    rep(i,0,3)rep(j,0,3){ a[i][j]=temp[i][j]; ans[i][j]=(i==j?1:0); }
}

void prod(LL A[][3], LL B[][3]){
    LL temp[3][3] = {{0,0,0},{0,0,0},{0,0,0}};
    rep(i,0,3)rep(j,0,3)rep(k,0,3) temp[i][j] = (temp[i][j]+A[i][k]*B[k][j])%MOD;
    rep(i,0,3)rep(j,0,3) A[i][j] = temp[i][j];
    return;
}
void pow_(LL b){
	while(b){
		if(b&1) prod(ans, a);
		b >>= 1;
		prod(a, a);
	}
	return;
}

LL pow_(LL base, LL b){
    LL ret = 1;
    while(b){
		if(b&1) ret = (ret*base)%MOD;
		b >>= 1;
		base = (base*base)%MOD;
	}
	return ret;
}

int main(){
	ios::sync_with_stdio(false);
    LL n;
    int t; cin>>t;
    rep(i,0,t){
        cin>>n;
        if(n<3) cout<<0<<endl;
        else{
            reset();
            pow_(n-3);
            LL res = (MOD + pow_(2,n) - (7*ans[0][0]+4*ans[0][1]+2*ans[0][2])%MOD)%MOD;
            cout<<res<<endl;
        }
    }
	return 0;
}
