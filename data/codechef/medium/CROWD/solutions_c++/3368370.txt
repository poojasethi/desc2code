
# include <cstdio>
# include <cstring>
# include <cmath>
# include <cstdlib>
# include <iostream>
# include <vector>
# include <algorithm>
# include <queue>
# include <set>
# include <map>
using namespace std;

typedef vector<int> vi;
typedef vector< vi > vvi;
typedef long long ll;

vvi identityMat(4,vector<int>(4,0)),buff(4,vector<int>(4,0));
#define MOD 1000000007LL

void matMul(vvi const &matA, vvi const &matB, vvi &buff){
	for(int i=0;i<4;++i) 
		for(int j=0;j<4;++j){
			ll res=0,tmp;
			for(int k=0;k<4;++k){
				tmp = 1LL*matA[i][k]*matB[k][j];
				//if(tmp>=MOD || tmp<=-MOD) tmp%=MOD;
				//cout<<(res + tmp ) % MOD<<endl;
				res=(res + tmp );
				//cout<<res<<" '''''''"<<endl;
				//if(res>=MOD || res<=-MOD) res%=MOD;
				//cout<<res<<endl;
				//res=(res + 1LL*matA[i][k]*matB[k][j] % MOD ) % MOD;
			}
			buff[i][j]=res%MOD;
		}
}
vvi matPow(vvi &mat,ll n){
	if( n==0) return identityMat;

	vvi ans = matPow(mat,n/2);
	matMul(ans,ans,buff);
	if(n%2) {
		matMul(buff,mat,ans);
		return ans;
	}
	return buff;
}
ll pow2(ll n){
	if(n==0) return 1;
	ll ans = pow2(n/2);
	ans = (ans * ans);
	if(ans>=MOD) ans%= MOD;
	if(n&1){
		ans = ans * 2;
		if(ans>=MOD) ans%= MOD;
	}
	return ans;
}
int main(){
	int preStore[3]={0,0,1};
	int vect[4]={4,3,2,1};
	
	for(int i=0;i<4;++i) identityMat[i][i]=1;

	vvi valMat(4,vector<int>(4,0)),res;
	valMat[0][0]=valMat[0][1]=valMat[1][0]=valMat[1][1]=valMat[2][0]=valMat[3][2]=1;
	valMat[1][3]=-1;

	int t;
	ll n;
	cin>>t;
	while(t--){
		cin>>n;
		if(n<4) cout<<preStore[n-1]<<endl;
		else{
			res = matPow(valMat,n-3);
			ll ans=0,tmp;
			for(int i=0;i<2;++i)
				for(int j=0;j<4;++j) ans = (ans + 1LL*res[i][j]*vect[j] % MOD) % MOD;
			cout<<(pow2(n)-ans+MOD)%MOD<<endl;
		}
	}
	return 0;
}
