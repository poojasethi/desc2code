/***********Template Starts Here***********/
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <deque>
#include <functional>
#include <string>
#include <iostream>
#include <cctype>
#include <set>

#define pb push_back
#define nl puts ("")
#define sp printf ( " " )
#define phl printf ( "hello\n" )
#define ff first
#define ss second
#define popcount __builtin_popcount
#define rightmost __builtin_ctz

using namespace std;

typedef long long vlong;
typedef unsigned long long uvlong;
typedef vector < int > vi;
typedef pair < int, int > ii;
typedef pair < vlong, vlong > lili;
typedef vector < ii > vii;

template < class T > T sq( T x ) { return x * x; }

const vlong inf = 2147383647;
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
const vlong maxint = 2147483647;
const vlong minint = -2147483648;

vlong gcd ( vlong a, vlong b ) {
    a = abs ( a ); b = abs ( b );
    while ( b ) {
        a = a % b;
        swap ( a, b );
    }
    return a;
}

/***********Template Ends Here***********/
int arr[300];

char buf[1000010];

int main () {
    #ifdef forthright48
    //freopen ( "input.txt", "r", stdin );
    //freopen ( "output.txt", "w", stdout );
    #endif

    int kase;
    scanf ( "%d", &kase );

    while ( kase-- ) {
        memset ( arr, -1, sizeof arr );

        int n;
        scanf ( "%d", &n );

        int i;
        for ( i = 0; i < n; i++ ) {
            char c, d;
            scanf ( " %c %c", &c, &d );
            arr[c] = d;
        }

        scanf ( "%s", buf );

        bool dot = false;

        for ( i = 0; buf[i]; i++ ) {
            char c = buf[i];
            if ( arr[c] == -1 ) {
                if ( buf[i] == '.' ) dot = true;
                continue;
            }
            buf[i] = arr[c];
            if ( buf[i] == '.' ) dot = true;
        }

        int len = strlen ( buf );

        if ( dot ) {
            for ( i = len - 1; i >= 0; i-- ) {
                if ( buf[i] == '0' ) buf[i] = 0;
                else break;
            }
        }

        len = strlen ( buf );
        if ( buf[len-1] == '.' ) {
            buf[len-1] = 0;
            len--;
        }

        i = 0;
        while ( buf[i] == '0' ) i++;

        if ( i >= len ) {
            printf ( "0\n" );
            continue;
        }

        for ( ; i < len; i++ ) printf ( "%c", buf[i] );
        nl;
    }

    return 0;
}
