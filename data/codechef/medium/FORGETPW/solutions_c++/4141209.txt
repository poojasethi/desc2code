#include<fstream>
#include<iostream>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdlib>
#include<cctype>
#include<cstdio>
#include<vector>
#include<map>
#include<set>
using namespace std;

typedef long long int lli;

// input macros
#define inp_int(t) scanf("%d",&t)
#define inp_str(t) scanf("%s",&t)
#define inp_flt(t) scanf("%f",&t)
#define inp_dbl(t) scanf("%lf",&t)
// output macros
#define out_int(t) printf("%d",t)
#define out_long(t) printf("%ld",t)
#define out_flt(t) printf("%f",t)
#define out_dbl(t) printf("%lf",t)
#define out_str(t) printf("%s",t)
#define outln_int(t) printf("%d\n",t)
#define outln_long(t) printf("%ld\n",t)
#define outln_flt(t) printf("%f\n",t)
#define outln_dbl(t) printf("%lf\n",t)
#define outln_str(t) printf("%s\n",t)
// string macros
#define copy(a,b) strcpy(b,a)
// for loops
#define REP(i,j,n) for(int i=j;i<n;i++)
#define rep(i,n) REP(i,0,n)

#define mod 1000000007
#define inp_s ios_base::sync_with_stdio(false);

lli BigMod(lli a,lli b)
{
      if(!b) return 1;
      lli x = BigMod(a,b/2);
      lli temp = (x*x)%mod;
      if(b%2) temp = (temp*a)%mod;
      return temp;
}

lli modinv(lli a)
{
      return BigMod(a,mod-2);
}

int main()
{
      inp_s;
      int t;
      cin>>t;
      while(t--)
      {
            int n;
            cin>>n;
            char ch;
            cin.get(ch);
            int hash[150] = {0};
            for(int i=0;i<n;i++)
            {
                  string str;
                  getline(cin,str);
                  int xx = (int) str[0];
                  int yy = (int) str[2];
                  hash[xx] = yy;
            }
            char query[1000100];
            cin>>query;
            int l = strlen(query);
            int deci = 0;
            for(int i=0;i<l;i++)
            {
                  int p = (int) query[i];
                  if(hash[p])
                        query[i] = hash[p];
                  if(query[i] == '.')
                        deci = 1;
            }
            int i = 0,j = l-1;
            while(i<l && query[i] == '0')
            i++;
            if(deci){
            while(query[j] == '0')
            j--;
            if(query[j] == '.')
            j--;
            }
            if(i>j)
            cout<<"0";
            while(i<=j)
            {
                  cout<<query[i];
                  i++;
            }
            cout<<endl;
      }
      return 0;
}
