/* Jai Gupta */
#include <iostream>
#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <string>
#include <cstring>
#include <map>
#include <cstdlib>
#include <algorithm>
#include <list>
#include <deque>
#include <bitset>
#include <cmath>
#include <set>
#include <sstream>

using namespace std;

#define oo 0x7F7F7F7F
#define LET(x,a)     __typeof(a) x(a)
#define EACH(it,v)   for(LET(it,v.begin());it!=v.end();++it)
#define REP(i,n)     for(__typeof(n) i(0); i<n; i++)
#define ALL(x)       (x).begin(), (x).end()
#define gint(t)      scanf("%d", &t);
#define pint(t)      printf("%d\n", t);
#define pb           push_back
#define mp           make_pair
#ifdef JAI_ARENA
#define debug(args...) {cerr<<"> "; dbg,args;cerr<<endl;}
#define debugv(v)      {cerr<<"> "; EACH(it, v) dbg,(*it); cerr<<endl;}
#else
#define debug(args...) {}
#define debugv(x) {}
#endif
typedef long long int   ll;
typedef unsigned long long int ull;
typedef unsigned int    uint;
typedef pair<int, int>  pii;
typedef vector<int>     vi;
typedef vector<vi>      vii;
typedef vector<pii>     vpii;

struct debugger
{
    template<typename T> debugger& operator , (const T& v)
	{
	    cerr<<v<<" ";
	    return *this;
	}
} dbg;


#define BUF 4096
char ibuf[BUF];
int ipt = BUF;

ll hcf(ll a, ll b) {
	if (a==0) return b;
	return hcf(b%a, a);
}
void work(const int t) {
	int n; cin>>n;
	char re[200];
	REP(ni, 200) re[ni] = ni;
	REP(ni, n) {
		char a, b;
		cin>>a>>b;
		re[a] = b;
	}
	string s;
	cin>>s;
	string res; bool start = true; bool found_dot = false;
	for(int i = 0; i < s.size(); i++) {
		char c= re[s[i]];
		if(c=='0' && start) continue;
		start = false;
		res.push_back(c);
		found_dot = found_dot || (c=='.');
	}
	int pos = res.size()-1;
	while(found_dot && pos >= 0 && res[pos] == '0') pos--;
	if (res[pos] == '.') pos--;
	res.resize(pos+1);
	if (pos!=-1)
		cout<<res<<endl;
	else
		cout<<0<<endl;
}
int main()
{
    int t;
    cin>>t;
    REP(ti, t)
    	work(ti+1);
    return 0;
}
