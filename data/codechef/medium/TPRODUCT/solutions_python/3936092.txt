import pdb
def main():
    #get the input:
    case_num = 0;
    H_vect = [];
    data_vect = [];
    fin = 0;
    while fin == 0:
        t_H = raw_input();
        H = int(t_H);
        if H == 0:
            fin = 1;
            continue;
        H_vect.append(H);
        t_data = raw_input();
        data_vect.append(map(int,t_data.split()));
        case_num+=1;
        
    #pdb.set_trace();
    answers = [0]*case_num;
    for k in range(case_num):
        H = H_vect[k];
        data = data_vect[k];
        vals = [[0]*(2**i) for i in range(H)];
        #vals = [0]*(2**H-1);
        #vals[-2**(H-1):] = data[-2**(H-1):];
        if H == 1:
            pdb.set_trace();
        vals[-1] = data[-2**(H-1):];
        current_node = 2**(H-1)-2;
        #pdb.set_trace();
        for i in range(H-1):
            for j in range(2**(H-i-2)):
                m_fact = data[current_node];
                term1 = m_fact*vals[-(i+1)][-(2*j+1)];
                term2 = m_fact*vals[-(i+1)][-(2*j+2)];
                vals[-(i+2)][-(j+1)] = max(term1,term2);
                current_node-=1;
        #pdb.set_trace();
        answers[k] = vals[0][0]%1000000007;

    for k in range(case_num):
        print(answers[k]);

main()