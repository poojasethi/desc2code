#include<stdio.h>
//#include<conio.h>
#include<cstring>
#include<math.h>
#define IREP(i,a,b) for(i=a;i<=b;++i)
#define DREP(i,a,b) for(i=a;i>=b;--i)
#define N 32780
#define M 1000000007
#define ULL unsigned long long
double max(double a,double b) {return a>b?a:b;}
long arr[N];
double f[N];

long long func(int n)
{int i,p=n/2+1;
DREP(i,n,p){f[i]=log(arr[i]);}
DREP(i,p-1,2){
               f[i]=log(arr[i])+max(f[2*i],f[2*i+1]);
               
               }
   long long res=1;i=1;
   while(i<=n)
   {res=(res*(arr[i]%M))%M;
   if(2*i+1<=n){if(f[2*i]<f[2*i+1])i=2*i+1;else i=2*i;}
   else break;
              
   }           
               
   return res;  
     
     
}


int lookup[16]={1,2,4,8,16,32,64,128,256,512,1024,2048,4096,8192,16384,32768};

int main()
{int h,n,i;
scanf("%d",&h);
while(h)
{n=lookup[h]-1;
IREP(i,1,n){scanf("%ld",&arr[i]);}    



  
printf("%lld\n",func(n));
scanf("%d",&h);       
}
    
   
    
//getch();
return 0;    
}
