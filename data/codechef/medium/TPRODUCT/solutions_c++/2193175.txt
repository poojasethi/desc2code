//-------------only fast integer input for both +ve and -ve integers
//for fast integer output copy from ultrafastion--only output waala
#include<stdio.h>
#include<algorithm>
using namespace std;

long long a[65536];
double b[65536];

int main()
{
    int h,i,j,t;
    char ch;
    while(1)
    {
       //S(h);// scanf("%d",&h);
       h=0;
	while((ch<'0' || ch>'9')&& ch!=EOF)	ch=getchar_unlocked();

	do
	h=(h<<3)+(h<<1)+ch-'0';
	while((ch=getchar_unlocked())>='0' && ch<='9');
        if(h==0) return 0;
        h=(1<<h)-1;
        for(i=1;i<=h;i++)
        {
        // S(t);//   scanf("%d",&t);
        t=0;
	while((ch<'0' || ch>'9')&& ch!=EOF)	ch=getchar_unlocked();

	do
	t=(t<<3)+(t<<1)+ch-'0';
	while((ch=getchar_unlocked())>='0' && ch<='9');
            b[i]=a[i]=t;
        }

        for(i=h/2;i>=1;i--)
        {
            j=(i<<1);
            if(b[j]>b[j+1])
            {
                b[i]*=b[j];
                a[i]*=a[j];
            }
            else
            {
                b[i]*=b[j+1];
                a[i]*=a[j+1];
            }
            a[i]%=1000000007;
        }
        printf("%d\n",(int)a[1]);
    }
}
