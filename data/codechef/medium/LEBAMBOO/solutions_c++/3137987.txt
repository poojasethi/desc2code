//In the Name of Allah,the Most Gracious,the Most Merciful
//Coder-Abdulla
#include <stdio.h>
#include <ctype.h>
#include <iostream>
#include <math.h>
#include <string.h>
#include <algorithm>
#include <stdlib.h>
#include <time.h>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <vector>
#include <utility>
#include <assert.h>
#include <sstream>
using namespace std;
 
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find() != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define PI 3.1415926535
#define INF 9876543210
#define MOD 1000000007
int main()
{
	int tc;
	scanf("%d",&tc);
	while(tc--)
	{
		int n;
		scanf("%d",&n);
		vector<int> H,D,v;	
		for(int i=0;i<n;i++)
		{
			int data;
			scanf("%d",&data);
			H.push_back(data);
		}

		for(int i=0;i<n;i++)
		{
			int data;
			scanf("%d",&data);
			D.push_back(data);
		}
		int sum=0;
		for(int i=0;i<n;i++)
		{
			int data;
			data=(D[i]-H[i]);
			v.push_back(data);
			sum+=data;
		}
		if(n==1)
		{
			if(H[0]>=D[0])
				cout<<H[0]-D[0]<<endl;
			else
				cout<<"-1\n";
		}
		else if(n==2)
		{
			if((H[0]-D[0])==-(H[1]-D[1]))
				cout<<abs(H[0]-D[0])<<endl;
			else
				cout<<"-1\n";
		}
		else
		{
			for(int i=1;i<=sum/(n-2);i++)
			{
				int mini=100,pos=-1;
				for(int j=0;j<n;j++)
				{
					if(mini>v[j])
					{
						mini=v[j];
						pos=j;
					}
				}
				for(int j=0;j<n;j++)
				{
					if(j==pos)
						v[j]++;
					else
						v[j]--;
				}
			}
			int flag=0;
			for(int i=0;i<n;i++)
			{
				if(v[i]!=0)
				{
					flag=1;
					break;
				}
			}
			if(flag==0)
				cout<<sum/(n-2)<<endl;
			else
				cout<<"-1\n";
		}
	}
	return 0;
}
