/**
http://www.codechef.com/OCT13/problems/LEBAMBOO
*/
/**
NOTE: This question is just about solving the Simple math Equations.
	  The formula given below will be generated after it's proper generation.
	  It means that There are N equation with N- variables are given and we have to find the value of all variables
	  After sloving the Equations.There could be N-no of solution for this  but we need to find the minimum no of
	  Trasforamtion of finding the solution.IN The end we have to ensure that all the variable's value's are positive 
	  Then only there would exits an solution for the anser regarding the Question, because it's mentioned in the
	  Question that All the D[i], values after No of tranformation will be Positive in the end. 
		No of Solution will be:
								s=(d-h)/(N-2)
								where d=Sum of All D[i] 1<i<=N
								where h=Sum of All H[i] 1<i<=N
								N- Total No of elements in the array.
								s- Is the No of requifed transformation  steps for converting H[i] to D[i] and
								  will be equal to the minimum No of Operations also. 

     Derivation:
	            Suppose that for getting the D[i] from H[i], we are requiring the x(i) , No of operations:
				-->
				D[i]=H[i]-x(i)+{x(1)+x(2)+x(i-1)+x(i+1)+..........+x(n-1)x(n)};
				      since, apart from the ith-stem all others are going to increase the value of ith-stem by
					  the No of their Required No Of Operations, that's why here we subtract the x(i) No of
					  operations and Apart from that All the Other Operation's of other stems will be added.

				LET Us suppose that-
							s={x(1)+x(2)+......+x(N)};
							i.e. some of all required No of transformation for converting H[] to D[].
				Then above equation will be:
							D[i]=H[i]+s-2*x(i);
     By Adding all the N-Equations:
							d=h+s*N-2*{x(1)+x(2)+...+x(N)};
							d=h+s*N- 2*s;
							d=h+s*(N-2);
				or,			s=(d-h)/N-2;

	This will be the Value of s.
	From the above equation, it's clear that for N=2;
							s=INF;
    It's mean that for N=2 there will be No of solutions.
	So we need to handle it sepratly.
				
*/
/**
Input:
3
1
1
2
2
1 2
2 1
3
3 2 2
4 5 3


Output:
-1
1
5
*/
#include <cstdio>
#include <iostream>
#include <set>
#include <vector>
#include <algorithm>
#include <cmath>
#include <stack>
#include <map>
#include <cstring>
using namespace  std;
#define N 55
int H[N],D[N];

int main()
//void driver()
{
	int i,j,k,t,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for(i=0;i<n;i++)
			scanf("%d",&H[i]);
		for(i=0;i<n;i++)
			scanf("%d",&D[i]);
		//Now calculate the answer.
		int d=0,h=0,s=0;
		if(n==2)
		{
			j=(H[0]-D[0]);
			k=(D[1]-H[1]);
			if(j!=k){
				printf("-1\n");
			}
			else
			{
				printf("%d\n",abs(j));
			}
			continue;
		}
		for(i=0;i<n;i++)
		{
			d+=D[i];
			h+=H[i];
		}
		s=(d-h)/(n-2);

		//If s<0 or s is an Non-integer then no solution exits.
		if(s<0||(s*(n-2))!=(d-h))
		{
			printf("-1\n");
		}
		else
		{
		//Now check whether all Values x(i) are positive.
		bool flag=false;
		for(i=0;i<n;i++)
		{
			j=(s+H[i]-D[i])*.5;
			if(j<0||j*2!=(s+H[i]-D[i]))
			{
				flag=true;
				break;
			}
		}
		if(flag)
			printf("-1\n");
		else
			printf("%d\n",s);
		}

	}

return 0;
}
