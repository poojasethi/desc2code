#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

int count(vector <int> in, vector <int> req, int d){
	int sumIN = 0, sumREQ = 0;
	for(int i = 0; i < d; i++)
		sumIN += in[i];
	for(int i = 0; i < d; i++)
		sumREQ += req[i];
	if(in == req)
		return 0;
	if(d == 1){
		if(in[0] < req[0])
			return -1;
		return in[0] - req[0];
	}
	if(d == 2){
		if(sumREQ != sumIN)
			return -1;
		return (int)fabs((double)in[0] - (double)req[0]);
	}
	else{
		if(sumIN > sumREQ || (sumREQ-sumIN)%(d-2) != 0)
			return -1;
		else{
			int MOVE = (sumREQ-sumIN)/(d-2);
			int ans = MOVE;
			for(int i = 0; i < d; i++){
				int num = 0;
				for(int k = 0; k < MOVE; k++){ 
					if(in[i] >= req[i]){
						num++;
						in[i]--;
					}
					else
						in[i]++;
				}
				for(int j = i+1; j < d; j++){
					in[j] += num;
				}
				MOVE -= num;
				if(i == d-1){
					if(in != req)
						return -1;
					else
						return ans;
				}
			}
		}
	}
	
}

int main(){
	int cases;
	scanf("%d", &cases);
	while(cases--){
		int n, d;
		scanf("%d", &n);
		vector <int> in;
		vector <int> req;
		
		for(int i = 0; i < n; i++){
			scanf("%d", &d);
			in.push_back(d);
		}
			
		for(int i = 0; i < n; i++){
			scanf("%d", &d);
			req.push_back(d);
		}
		printf("%d\n", count(in, req, n));
	}
}