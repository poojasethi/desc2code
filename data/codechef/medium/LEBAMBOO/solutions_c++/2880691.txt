#include<iostream>
using namespace std;
int minOps(int n,int *h,int *d);
inline int abs(int x);
int main()
{
	int t,i=0,n,*h,*d,*out;
	cin>>t;
	out=new int[t];
	while(i<t)
	{
		cin>>n;
		h=new int[n];
		d=new int[n];
		for(int j=0;j<n;j++)
		{
			cin>>h[j];
		}
		for(int j=0;j<n;j++)
		{
			cin>>d[j];
		}
		out[i]=minOps(n,h,d);
		i++;
	}
	for(i=0;i<t;i++)
	{
		cout<<out[i]<<"\n";
	}
	delete [] out;
	delete [] h;
	delete [] d;
	return 0;
}
int minOps(int n,int *h,int *d)
{
	int sh=0,sd=0,nMoves=0;
	if(n==2)
	{
		if((h[0]+h[1])!=(d[0]+d[1]))
		{
			return -1;
		}
		return (abs(h[0]-d[0]));
	}
	for(int i=0;i<n;i++)
	{
		sh+=h[i];
		sd+=d[i];
	}
	if((sd-sh)%(n-2)!=0)
	{
		return -1;
	}
	nMoves=(sd-sh)/(n-2);
	for(int i=0;i<n;i++)
	{
		if((nMoves-(d[i]-h[i]))%2!=0)
		{
			return -1;
		}
		int x=(nMoves-(d[i]-h[i]))/2;
		if(x<0)
		{
			return -1;
		}
	}
	return nMoves;
}
inline int abs(int x)
{
	if(x<0)
		x=-x;
	return x;
}
