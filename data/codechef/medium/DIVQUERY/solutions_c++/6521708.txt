#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pv(v,b,a) v.insert(v.begin()+b,a)
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define MAXCR 1000000000
#define mem(arr,a) memset(arr, a, sizeof arr)
#define er(vec,a,b) vec.erase(vec.begin() + a, vec.begin() + b+1)
#define pii pair<int ,int>
#define mod 1000000007
#define LIM 100
//auto bound_=upper_bound (v.begin(), v.end(), 20); //Returns an iterator pointing to the first element in the range [first,last) which compares greater than val.
//auto bound_=lower_bound (v.begin(), v.end(), 20);//Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.
using namespace std;
vector<pair<int ,pair<int ,int > > >q2(100005);
vector<pair<int ,pair<int ,int > > >q1(100005);
int count_[100005]={0},a[100005]={0},qans1[100005]={0},qans2[100005]={0};
bool comp(pair<int ,pair<int ,int > >a,pair<int ,pair<int ,int > >b)
{
	if(a.S.F<b.S.F)
		return true;
	else
		return false;
}
int main()
{
	int i,n,j,l,r,k,q;
	sf(n)
	sf(q)
	for(i=1;i<=n;i++)
		sf(a[i])
	for(i=0;i<q;i++)
	{
		sf(l)
		sf(r)
		sf(k)
		q1[i]=mp(i,mp(l-1,k));
		q2[i]=mp(i,mp(r,k));
	}
	sort(q1.begin(),q1.begin()+q,comp);
	sort(q2.begin(),q2.begin()+q,comp);
	//printf("a");
	int p1=0,p2=0;
	for(i=1;i<=n;i++)
	{//printf("%d",i);
		for(j=1;j*j<a[i];j++)
		{
			if(a[i]%j==0)
			{
				count_[j]++;
				count_[a[i]/j]++;
			}
		}
		if(j*j==a[i])
			count_[j]++;
//		for(k=1;k<10;k++)
//			printf("%d;",count_[k]);
//		printf("\n");
	//	printf("(%d,%d)",p1,p2);
		while(p1<q&&q1[p1].S.F<i)p1++;
		while(p2<q&&q2[p2].S.F<i)p2++;
		
		while(q1[p1].S.F==i)
		{
//			printf("%d::",i);
			qans1[q1[p1].F]=count_[q1[p1].S.S];
//			printf("(%d)",q1[p1].F.F);
			p1++;
		}	
		while(q2[p2].S.F==i)
		{
			qans2[q2[p2].F]=count_[q2[p2].S.S];
//			printf("((%d))",q2[p2].F.S);
			p2++;
		}//printf("%d",i);
	}
	//printf("ss");
	for(i=0;i<q;i++)
	{
		printf("%d\n",qans2[i]-qans1[i]);
	}
//	printf("\n");
	return 0;
}