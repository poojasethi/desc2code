#include<stdio.h>
#include<algorithm>
#include<vector>
#include<stdlib.h>
using namespace std;

vector<int> mult[100001];

int binSearch(int num,int k, int hi)
	{
	int lo=0;
	int mid=hi/2;
	if(mult[k][lo]>=num)
		return(0);
	if(mult[k][hi]<=num)
		return(hi);
	while(lo!=mid)
	{
		if(mult[k][mid]==num)
			return(mid);
		else if(mult[k][mid]<num)
			lo=mid;
		else
			hi=mid;
		mid=(lo+hi)/2;
	}
	return(mid);
}

int main()
{
	int n,q,l,r,k,x;

	scanf("%d", &n);
	scanf("%d", &q);
	for(int i=1;i<=n;i++)
	{
		scanf("%d", &x);
		mult[x].push_back(i);
		int j;
		for(j=2;j*j<x;j++)
		{
			if(x%j==0)
			{
				mult[j].push_back(i);
				mult[x/j].push_back(i);
			}
		}
		if(j*j==x)
			mult[j].push_back(i);
	}
	
	while(q-->0)
	{
		scanf("%d", &l);
		scanf("%d", &r);
		scanf("%d", &k);
		if(k==1)
		{
			printf("%d\n",r-l+1);
			continue;
		}
		if(mult[k].empty() || r<mult[k][0] || l>mult[k][mult[k].size()-1])
		{
			printf("0\n");
			continue;
		}
		int rightLim = binSearch(r,k,mult[k].size()-1);
		//System.out.println("\tR "+rightLim);
		int leftLim = binSearch(l,k,rightLim);
		if(mult[k][leftLim]<l)
			leftLim++;
		printf("%d\n",rightLim-leftLim+1);
	}
		
	return(0);
}
		
		
		
	