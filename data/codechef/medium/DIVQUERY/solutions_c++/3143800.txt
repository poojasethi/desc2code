#include <bits/stdc++.h>
using namespace std;
#define MAX 100100

bool a[MAX];
vector<int>v[MAX];

void sieve() 
{
	memset(a, false, sizeof(a));
	a[0] = a[1] = true;
	
	for(int i = 4; i < MAX; i+=2) a[i] = true;
	
	for(int i = 3; i <= sqrt(MAX); i+=2) {
		if(!a[i]) {
			for(int j = i * i; j <= MAX; j += i + i) {
				a[j] = true;
			}
		}
	}
}

int main()
{
	sieve();
	
	vector<int> :: iterator low, up;
	int n, q, nu, k;
	scanf("%d%d", &n, &q);
	
	for(int i = 1; i <= n; i++) {
		scanf("%d", &nu);
		if(!a[nu]) {
			v[1].push_back(i);
			v[nu].push_back(i);
			continue;
		}
		
		for(k = 1; k * k < nu; k++) {
			if(nu % k == 0) {
				v[k].push_back(i);
				v[nu/k].push_back(i);
			}
		}
		if(k * k == nu) {
			v[k].push_back(i);
		}
	}
	
	while(q--) {
		int i, j, div;
		cin >> i >> j >> div;
		up = upper_bound(v[div].begin(), v[div].end(), j);
		low = lower_bound(v[div].begin(), v[div].end(), i);
		
		k = ((up - v[div].begin()) - (low - v[div].begin()));
		
		printf("%d\n", k);
	}
	return 0;
}