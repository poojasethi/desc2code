// Only_love97

using namespace std;
#include<bits/stdc++.h>

#define BG begin()
#define ED end()
#define SZ size()
#define st first
#define nd second
#define PB push_back
#define FOR(i,a,b) for (int i=(a),_b=(b);i<_b;i++)
#define FORE(i,a,b) for (int i=(a),_b=(b);i<=_b;i++)
#define FORD(i,a,b) for (int i=(a),_b=(b);i>=_b;i--)
#define ri(n)({\
    int neg=0;\
    n=0;\
    char ch;\
    for(ch=getchar(); ch<'0' || ch>'9'; ch=getchar()) if (ch=='-') neg=1-neg;\
    n=ch-48;\
    for(ch=getchar(); ch>='0' && ch<='9'; ch=getchar()) n=(n<<3)+(n<<1)+ch-48;\
    if (neg) n=-n;\
})

typedef long long ll;
typedef pair<int,int> II;
const int INF=1000000000+7;
const double esp=1e-13;
const double pi=3.141592653589;

struct fa
{
    int gt,vt,th,gtk;
} f[200000+10];

int x,y,k,n,a[100000+10],d[100000+10],dau,q,ans[100000+10];

bool cmp(fa a, fa b)
{
    return ( a.vt<b.vt);
}

int main()
{
 //   freopen("DIVQUERY.inp", "r", stdin);
 //   freopen("DIVQUERY.out", "w", stdout);
    ri(n); ri(q);
    FORE(i,1,n) ri(a[i]);
    FORE(i,1,q)
    {
        ri(x); ri(y); ri(k);
        x--;

        f[i*2-1].vt=x;
        f[i*2-1].gt=-1;
        f[i*2-1].th=i;
        f[i*2-1].gtk=k;

        f[i*2].vt=y;
        f[i*2].gt=1;
        f[i*2].th=i;
        f[i*2].gtk=k;
    }
    sort(f+1,f+2*q+1,cmp);
    dau=1;
    memset(ans,0,sizeof(ans));
    FORE(i,1,n)
    {
        FORE(j,1,(int) sqrt(a[i]))
        if ( a[i]%j==0 )
        {
            d[j]++;
            if (j!=a[i]/j) d[a[i]/j]++;
        }
        while (dau<=q*2 && f[dau].vt<=i)
        {
            if ( f[dau].vt==i ) ans[ f[dau].th ]+=d[f[dau].gtk]*f[dau].gt;
            dau++;
        }
    }
    FORE(i,1,q) cout << ans[i] << "\n";
}
