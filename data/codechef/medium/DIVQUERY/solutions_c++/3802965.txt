#include <bits/stdc++.h>
#define ll long long
#define ull unsigned long long
#define sf scanf
#define pf printf
#define frii(i,a) for(i = a.begin(); i != a.end(); i++)
#define fr(i,n,m) fri(i,n,m,1)
#define frm(t,i,n,m) frim(t,i,n,m,1)
#define fre(i,n,m) fri(i,n,m+1,1)
#define frem(t,i,n,m) frim(t,i,n,m+1,1)
#define fri(i,n,m,l) frim(int,i,n,m,l)
#define frim(t,i,n,m,l) for(t i = n; i < m; i+=l)
#define frie(i,n,m,l) fri(i,n,m+1,l)
#define friem(t,i,n,m,l) frim(t,i,n,m+1,l)
#define frr(i,n,m) frrd(i,n,m,1)
#define frrm(t,i,n,m) frrdm(t,i,n,m,1)
#define frre(i,n,m) frrd(i,n,m-1,1)
#define frrem(t,i,n,m) frrdm(t,i,n,m-1,1)
#define frrd(i,n,m,l) frrdm(int,i,n,m,l)
#define frrdm(t,i,n,m,l) for(t i = n; i > m; i-=l)
#define frrde(i,n,m,l) frrd(i,n,m-1,l)
#define frrdem(t,i,n,m,l) frrdm(t,i,n,m-1,l)
#define all(a) a.begin(),a.end()
#define mset(a,n) memset(a, n, sizeof(a))
#define mllc(n,t) ((t*)malloc((n)*sizeof(t)))
#define pl() pf("\n")
#define bipc(a) __builtin_popcount(a)
#define MOD 1000000007
#define getc getchar_unlocked
#define putc putchar_unlocked
#define file 0
using namespace std;

inline int readInt(){
    register int c = getc();
    int x = 0, neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getc());
    if(c == '-'){ neg = 1; c = getc();}
    for(; c>47 && c<58 ; c = getc()) x = (x<<1) + (x<<3) + c - 48;
    return (neg)?-x:x;
}

inline void printInt(int x){
	char pri[30];
	int i = 0, neg = 0;
	if(x < 0){ neg = 1; x = -x;}
	do{ pri[i++] = (x%10)+48; x/=10;}while(x!=0);
	if(neg) putc('-');
	frre(j,i-1,0) putc(pri[j]);
}

vector <int> factors[100005];

void factorize(){
	fre(i,1,100000)
		frie(j,i,100000,i)
			factors[j].push_back(i);
}

void solve(){
	factorize();
	int N, Q, L, R, K, x, y, A;
	N = readInt();
	Q = readInt();
	vector <int> C[100001];
	fre(i,1,N){
		A = readInt();
		fr(j,0,factors[A].size())
			C[factors[A][j]].push_back(i);
	}
	while(Q--){
		L = readInt(); R = readInt(); K = readInt();
		x = lower_bound(all(C[K]),L)-C[K].begin();
		y = upper_bound(all(C[K]),R)-C[K].begin();
		printInt(y-x);
		putc('\n');
	}
}

int main(){
	if(file){
		double _time = clock();
		freopen("input.txt", "r", stdin);
		solve();
		pf("%0.4f sec\n", (clock()-_time)/CLOCKS_PER_SEC);
		return 0;
	}
	solve();
	return 0;
}