#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pv(v,b,a) v.insert(v.begin()+b,a)
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define MAXCR 1000000000
#define mem(arr,a) memset(arr, a, sizeof arr)
#define er(vec,a,b) vec.erase(vec.begin() + a, vec.begin() + b+1)
#define pii pair<int ,int>
#define mod 1000000007
#define LIM 100
//auto bound_=upper_bound (v.begin(), v.end(), 20); //Returns an iterator pointing to the first element in the range [first,last) which compares greater than val.
//auto bound_=lower_bound (v.begin(), v.end(), 20);//Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.
using namespace std;
int a[100005]={0};
vector<int >occurances[100005];
int main()
{
	int i,n,j,l,r,k,q;
	sf(n)
	sf(q)
	for(i=1;i<=n;i++)
	{
		sf(a[i])
		for(j=1;j*j<a[i];j++)
		{
			if(a[i]%j==0)
			{
				occurances[j].pb(i);
				occurances[a[i]/j].pb(i);	
			}
		}
		if(j*j==a[i])
			occurances[j].pb(i);
	}
	for(i=1;i<=q;i++)
	{
		sf(l)
		sf(r)
		sf(k)
		printf("%d\n",upper_bound(all(occurances[k]),r)-lower_bound(all(occurances[k]),l));
	}
	return 0;
}