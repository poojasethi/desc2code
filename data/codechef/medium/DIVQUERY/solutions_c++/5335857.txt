


#include <fstream>
#include <vector>
#include <algorithm>
#include <cstring>
#include <iostream>

#define pb push_back
#define DIM 100009

using namespace std;
//ofstream out("op.out");

int n , v[DIM];
int Q;

vector < int > H[DIM];
typedef vector < int >::iterator IT;

int main()
{

   // ifstream in("op.in");

    cin >> n >> Q;

    for( int i = 1 ; i<=n ; i++)
        cin >> v[i];

    for( int i = 1 ; i<=n ; i++)
    {

        int x = v[i];

        for( int j = 1 ; j*j <=x ; j++)
        {

            if( x % j == 0 )
            {

                H[j].pb(i);
                if( j * j != x )
                    H[x/j].pb(i);
            }

        }

    }



    for( int L , R , K ; Q ; --Q )
    {

        cin >> L >> R >> K;
        int poz1 , poz2 ;

        poz1 = lower_bound(H[K].begin(),H[K].end(),L) - H[K].begin();
        poz2 = upper_bound(H[K].begin(),H[K].end(),R) - H[K].begin();

        cout << poz2 - poz1 << '\n';

    }

    return 0;


}
