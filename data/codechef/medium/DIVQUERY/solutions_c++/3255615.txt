#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
using namespace std;
int a[100005];
struct que 
{
	int ind;
	int k;
	int pos;
	int ans;
} left1[100005],right1[100005];
bool myfunc(que a1,que a2)
{
	return (a1.ind<a2.ind);
}
int main()
{
	int n,q;
	int t1,t2,t3,kmax=0;
	scanf("%d",&n);
	scanf("%d",&q);
	for(int i=0;i<n;i++)
	{
		scanf("%d",&a[i]);
	}
	for(int i=0;i<q;i++)
	{
		scanf("%d",&t1);
		scanf("%d",&t2);
		scanf("%d",&t3);
		left1[i].ind=t1-2;
		left1[i].k=t3;
		left1[i].pos=i;
		left1[i].ans=0;
		right1[i].ind=t2-1;
		right1[i].k=t3;
		right1[i].pos=i;
		right1[i].ans=0;
		kmax=max(t3,kmax);
	}
	sort(left1,left1+q,myfunc);
	sort(right1,right1+q,myfunc);
	int count[100005]={0};
	int j=0,j2=0;
	int ks=sqrt(kmax);
	while(left1[j].ind<0)
	j++;
	for(int i=0;i<n;i++)
	{
		int temp2=sqrt(a[i]);
		//printf("a[i] :%d min: %d\n",min(ks,temp2));
		for(int m=1;m<=temp2;m++)
		{
			//printf("m: %d \n",m);
			if(a[i]%m==0)
			{	
				count[m]++;
				//printf("i: %d a[i]: %d m: %d count[m]: %d\n",i,a[i],m,count[m]);
				if((m*m)!=a[i])
				{
					count[a[i]/m]++;
					//printf("count[%d]: %d\n",a[i]/m,count[a[i]/m]);
				}
				/*else if((ks*ks)!=kmax)
				{
					count[a[i]/m]++;
					printf("count[%d]: %d\n",a[i]/m,count[a[i]/m]);
				}*/
                                //printf("i: %d a[i]: %d m: %d count[m]: %d\n",i,a[i],m,count[m]);
			}
			//printf("m: %d\n",m);
			
		}
		while(i==left1[j].ind)
		{
			left1[j].ans=count[left1[j].k];
			//printf("i: %d j: %d left[j].ans: %d\n",i,j,left1[j].ans);
			j++;
		}
		while(i==right1[j2].ind)
		{
			right1[j2].ans=count[right1[j2].k];
			//printf("i: %d j2: %d right[j2].ans: %d\n",i,j2,right1[j2].ans);
			j2++;
		}
	}
	int temp;
	for(int i=0;i<q;i++)
	{
		temp=left1[i].ind;
		left1[i].ind=left1[i].pos;
		left1[i].pos=temp;
		temp=right1[i].ind;
		right1[i].ind=right1[i].pos;
		right1[i].pos=temp;
	}
	sort(left1,left1+q,myfunc);
	sort(right1,right1+q,myfunc);
	for(int i=0;i<q;i++)
	{
		printf("%d\n",right1[i].ans-left1[i].ans);
	}
	return 0;
}
