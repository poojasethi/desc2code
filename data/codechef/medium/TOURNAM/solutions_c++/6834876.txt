#include <iostream>
#include <stdlib.h>
#include <stdio.h>
#include <math.h>
#include <vector>
#include <algorithm>
struct str_prob
{
    double prob;
    int ap;
};

int main(int argc, char *argv[])
{
    using namespace std;
    int n_cases;
    cin >> n_cases;
    for (int i=0;i<n_cases;i++)
    {
        int n_players, n_strange;
        double probs;

        cin >> n_players;
        cin >> n_strange;
        cin >> probs;

        //if (n_strange<=10000)
        {
        str_prob *prob_matrix = (str_prob *)malloc (sizeof(str_prob) * (n_strange));


        vector <int> strange_index(n_strange);

        //printf("\n");
        for (int i=0;i<n_strange;i++)
        {
            int ap_index;
            cin >> ap_index;
            strange_index[i]=ap_index;
            //printf("%d ", ap_index);
        }


        sort (strange_index.begin(), strange_index.end());

        //printf("\n");
        for (int i=0;i<n_strange;i++)
        {
            prob_matrix[i].ap=strange_index[i]-1;
            prob_matrix[i].prob = 1;
            //printf("%d ", prob_matrix[i].ap);
        }

        /*if (prob_matrix[n_strange-1].ap<n_players)
        {
                n_strange++;
                prob_matrix[n_strange-1].ap = n_players-1;
                prob_matrix[n_strange-1].prob=0;
        }*/

        //n_players=n_strange;
        //printf("\n");
        double PP = probs/100.0;

        //while (n_strange>1)
        while (n_players>1)
        {
            /*printf("l: ");
            for (int i=0;i<n_strange;i++)
            {
                printf("%d:%f ", prob_matrix[i].ap, prob_matrix[i].prob);
            }
            printf("\n");*/

            n_players=n_players/2;

            int players_for=n_strange;


            int next_ap=0;

            for (int i=0;i<players_for;i++)
            {
                int band_inc=1;
                int ap_temp = prob_matrix[i].ap/2;
                double p=prob_matrix[i].prob;
                double q=0;

                int iresp=i;
                if (i<(players_for-1))
                if ((prob_matrix[i].ap%2==0)&&
                        ((prob_matrix[i].ap+1) == prob_matrix[i+1].ap))
                {
                    q= prob_matrix[i+1].prob;
                    i++;
                    n_strange--;
                    band_inc=0;
                }

                prob_matrix[next_ap].ap=ap_temp;
                prob_matrix[next_ap].prob= p*q + p*(1-q)*PP + q*(1-p)*PP;
                next_ap++;
            }
        }
        /*if (n_strange<n_players)
        {
            double p=prob_matrix[0].prob;
            double q=0;
            prob_matrix[0].prob= p*q + p*(1-q)*PP + q*(1-p)*PP;
        }*/

        printf ("%.14f\n", prob_matrix[0].prob*100.0);
        free(prob_matrix);
        }
        /*else
        {
            for (int i=0;i<n_strange;i++)
            {
                int ap_strange;
                cin >> ap_strange;
            }
        }*/
    }
}
