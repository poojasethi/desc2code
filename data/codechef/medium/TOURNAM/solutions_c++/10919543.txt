#include <stdio.h>

struct Data
{
	long double x;
	long double y;
	long long int pos;
};
struct Data data[10001][31];
long long int A[10001], left[10001], right[10001];

void merge(long long int p, long long int r)
{
	long long int q, i;
	q=((p+r)/2);
	if (p<r)
	{
		merge (p, q);
		merge (q+1, r);
	}
	else if (p==r)
	{
		return;
	}
//	long long int left[q-p+2],right[r-q+1];
	for (i=0; i<(q-p+1); i++)
	{
		left[i]=A[p-1+i];
	}
	left[i]=9999999999999999;
	for (i=0; i<(r-q); i++)
	{
		right[i]=A[q+i];
	}
	right[i]=9999999999999999;
	long long int l, rr;
	l=rr=0;
	for (i=p-1; i<r; i++)
	{
		if (left[l]<right[rr])
		{
			A[i]=left[l];
			l++;
		}
		else
		{
			A[i]=right[rr];
			rr++;
		}
	}
}

int main()
{
	int t;
	scanf ("%d", &t);
	while (t--)
	{
		long long int i, j, k, l, m, n, count=0;
		long double x, y, p;
		scanf ("%lld %lld %Lf", &n, &m, &p);
		p/=100;
		j=n;
		while (j>1)
		{
			count++;
			j/=2;
		}
		for (i=0; i<m; i++)
		{
			scanf ("%lld", &A[i]);
		}
		merge(1, m);
		for (i=0; i<m; i++)
		{
			data[i][0].pos=A[i];
			data[i][0].x=1;
			data[i][0].y=0;
		}
		for (i=0; i<m; i++)
		{
			if (data[i][0].pos %2 ==0)
			{
				if (i!=0)
				{
					if (data[i-1][0].pos==data[i][0].pos-1)
					{
						data[i][0].y=1;
					}
				}
			}
			else if (data[i][0].pos%2 !=0)
			{
				if (i==m-1)
				{
					continue;
				}
				if (data[i+1][0].pos== data[i][0].pos+1)
				{
					data[i][0].y=1;
				}
			}
		}
		k=m;
		l=0;
		for (i=1; i<=count; i++)
		{
			l=0;
			for (j=0; j<k; j++)
			{
				if (j==0)
				{
					data[l][i].pos=(data[j][i-1].pos+1)/2;
					data[l][i].x=(data[j][i-1].x*(1-data[j][i-1].y)*p) + ((1-data[j][i-1].x)*data[j][i-1].y*p) + (data[j][i-1].x*data[j][i-1].y);
					data[l][i].y=0;
					l++;
					continue;
				}
				if (data[j][i-1].pos%2==0 && data[j-1][i-1].pos==data[j][i-1].pos-1)
				{
					continue;
				}
				data[l][i].pos=(data[j][i-1].pos+1)/2;
				data[l][i].x=(data[j][i-1].x*(1-data[j][i-1].y)*p) + ((1-data[j][i-1].x)*data[j][i-1].y*p) + (data[j][i-1].x*data[j][i-1].y);
				data[l][i].y=0;
				l++;				
			}
			for (j=0; j<l; j++)
			{
				if (data[j][i].pos %2 ==0)
				{
					if (j!=0)
					{
						if (data[j-1][i].pos==data[j][i].pos-1)
						{
							data[j][i].y=data[j-1][i].x;
						}
					}
				}
				else if (data[j][i].pos%2 !=0)
				{
					if (j==l-1)
					{
						continue;
					}
					if (data[j+1][i].pos== data[j][i].pos+1)
					{
						data[j][i].y=data[j+1][i].x;
					}
				}
			}
			k=l;
		}
		printf("%.8Lf\n", (100*data[0][count].x));
	}
}