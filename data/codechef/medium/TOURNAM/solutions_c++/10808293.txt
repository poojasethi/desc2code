 #include<bits/stdc++.h>
using namespace std;
double func(double p1,double p2,double p)
{
    return p1*p2+p1*p+p2*p-2*p1*p2*p;
}

void Merge(int arr[],int n,int s1,int e1,int s2,int e2)
{
    int i,j,l1=e1-s1+1,l2=e2-s2+1,k,l=l1+l2;
    int arr1[e1-s1+1],arr2[e2-s2+1],temp[l];
    k=0;
    for(i=s1;i<=e1;++i)
    {arr1[k]=arr[i];k++;}

    k=0;

    for(i=s2;i<=e2;++i)
    {arr2[k]=arr[i];k++;}
    k=0;
    for(i=0,j=0;i<l1&&j<l2;)
    {
        if(arr1[i]<=arr2[j])
        {temp[k]=arr1[i];i++;k++;}
        else if(arr1[i]>arr2[j])
        {temp[k]=arr2[j];j++;k++;}
    }

    if(i>=l1)
    {
        for(;j<l2;++j)
        {temp[k]=arr2[j];k++;}
    }
    else if(j>=l2)
    {
        for(;i<=l1;++i)
        {temp[k]=arr1[i];k++;}
    }
    i=0;j=s1;
    for(;i<l;++i)
    {arr[j]=temp[i];j++;}


}

void mergesort(int arr[],int n,int s,int e)
{
   if(s<e)
   {
       mergesort(arr,n,s,(e+s)/2);
       mergesort(arr,n,1+(e+s)/2,e);
       Merge(arr,n,s,(e+s)/2,(e+s)/2+1,e);
   }
}

int main()
{
    long int t,m,n,i,k,len,j;
    double p;
    cin>>t;
    while(t--)
    {
        cin>>n>>m>>p;
        p/=100;
        int arr[m];
        k=0;
        while(n!=1)
        {
            n/=2;
            k++;
        }
        for(i=0;i<m;++i)
            cin>>arr[i];
        mergesort(arr,m,0,m-1);
        double prob[m];
        for(i=0;i<m;++i)
            prob[i]=1;
        while(k--)
        {
            len=0;
            int arr1[m];
            double prob1[m];
            for(i=0;i<m;)
            {
                if(i<m-1)
                {
                    if(arr[i]%2==1)
                    {
                        if(arr[i]+1==arr[i+1])
                        {
                        arr1[len]=(arr[i]+1)/2;
                        prob1[len]=func(prob[i],prob[i+1],p);
                        len++;
                        i+=2;
                        }
                        else
                        {
                        arr1[len]=(arr[i]+1)/2;
                        prob1[len]=func(prob[i],0,p);
                        len++;
                        i+=1;
                        }
                    }
                    else
                    {
                    arr1[len]=(arr[i])/2;
                    prob1[len]=func(prob[i],0,p);
                    len++;
                    i+=1;
                    }
                }
                else if(i==m-1)
                {
                    if(arr[i]%2==1)
                    {

                        arr1[len]=(arr[i]+1)/2;
                        prob1[len]=func(prob[i],0,p);
                        len++;
                        i+=1;

                    }
                    else
                    {
                    arr1[len]=(arr[i])/2;
                    prob1[len]=func(prob[i],0,p);
                    len++;
                    i+=1;
                    }
                }
            }
            for(j=0;j<len;++j)
            {arr[j]=arr1[j];prob[j]=prob1[j];}
            m=len;
        }
       printf("%.13lf\n", 100.0*prob[0]);
    }
    return 0;
}
