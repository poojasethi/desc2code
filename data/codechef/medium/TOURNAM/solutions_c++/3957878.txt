import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.LinkedList;
import java.util.List;
import java.util.Queue;
import java.util.StringTokenizer;

public class Main {

    public static void main(String[] args) throws IOException {
        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));
        String s = reader.readLine();
        int T = Integer.parseInt(s);
        for (int t=0; t<T; t++) {
            s = reader.readLine();
            String[] parts = s.split(" ");
            int N = Integer.parseInt(parts[0]);
            int M = Integer.parseInt(parts[1]);
            double P = Integer.parseInt(parts[2])/100.0;
            List<Info> list = new ArrayList<Info>();
            s = reader.readLine();
            StringTokenizer tokenizer = new StringTokenizer(s);
            for (int m=0; m<M; m++) {
                int position = Integer.parseInt(tokenizer.nextToken());
                list.add(new Info(position-1, 1));
            }
            Collections.sort(list, new Comparator<Info>() {
                @Override
                public int compare(Info o1, Info o2) {
                    return o1.position-o2.position;
                }
            });
            Queue<Info> strangelandians = new LinkedList<Info>(list);
            while (N>1) {
                N /= 2;
                Queue<Info> advancing = new LinkedList<Info>();
                while (!strangelandians.isEmpty()) {
                    Info player = strangelandians.poll();
                    int playerPosition = player.position;
                    if (playerPosition%2 == 0) {
                        Info nextPlayer = strangelandians.peek();
                        if (nextPlayer != null && nextPlayer.position == playerPosition+1) {
                            strangelandians.poll();
                            player.pst = player.pst*nextPlayer.pst+(player.pst*(1-nextPlayer.pst)+nextPlayer.pst*(1-player.pst))*P;
                        } else {
                            player.pst *= P;
                        }
                    } else {
                        player.pst *= P;
                    }
                    player.position /= 2;
                    advancing.add(player);
                }
                strangelandians = advancing;
            }
            System.out.println(strangelandians.peek().pst*100);
        }
    }

    static class Info {
        int position;
        double pst;
        
        Info(int position, double pst) {
            this.position = position;
            this.pst = pst;
        }
    }
    
}
