#include <iostream>
#include <vector>
#include <algorithm>
#include <cstdio>
using namespace std;

class Data2 {
public:
	double p;
	int ind;
	bool operator < (const Data2& d) {
		return this->ind < d.ind;
	}
	Data2 (int a, double b) : p(b), ind(a) {}
};

int main() {
	int test;
	cin >> test;
	while (test--) {
		int n, m;
		double p;
		cin >> n >> m >> p;
		p = p/100.0;
		vector <Data2> x(m, Data2(0,0));
		
		int tmp;
		for (int i = 0; i < m; i++) {
			cin >> tmp;
			x[i] = Data2 (tmp-1, 1);
		}
		sort (x.begin(), x.end());
		while (n>1) {
			vector <Data2> y;
			for (int i = 0; i < x.size(); i++) {
				if (x[i].ind % 2 == 0 && i < x.size()-1 && x[i+1].ind == x[i].ind + 1) {
					y.push_back (Data2 (x[i].ind/2, x[i].p * x[i+1].p + p* (x[i].p * (1-x[i+1].p) + x[i+1].p * (1-x[i].p) ) ) );
					i++;
				} else {
					y.push_back (Data2 (x[i].ind/2, x[i].p * p));
				}
			}
			x = y;
			n = n / 2;
		}
		
		printf ("%.14f\n", x[0].p*100);
	}
	
	return 0;
}