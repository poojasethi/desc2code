import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.Collections;
import java.util.StringTokenizer;


class TennisTournament {

	public static void main(String args[] ) throws Exception {
		   
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
	    PrintWriter w = new PrintWriter(System.out);
	    
	    int t = ip(br.readLine());
	    
	    while(t-- > 0){
	    
		    StringTokenizer st1 = new StringTokenizer(br.readLine());
		    int n = ip(st1.nextToken());
			int m = ip(st1.nextToken());
		    double p = ip(st1.nextToken())/100.0;     
			int k = Integer.toBinaryString(n).length() - 1;
		    
		    StringTokenizer st2 = new StringTokenizer(br.readLine());
		    ArrayList<Integer> draw = new ArrayList<Integer>();
		    ArrayList<Double> prob = new ArrayList<Double>();
		    
		    for(int i=0;i<m;i++){
		    	draw.add(ip(st2.nextToken()));
		    	prob.add(1D);
		    }
		    
		    Collections.sort(draw);
		    
		    for(int round=1;round<=k;round++){
		    	ArrayList<Integer> drawt = new ArrayList<Integer>();
			    ArrayList<Double> probt = new ArrayList<Double>();
			    int s = draw.size();
			    for(int i=0;i<s;i++){
			    	if(i != s-1 && draw.get(i+1) == (draw.get(i) + 1) && ((draw.get(i) & 1)==1)){
			    		drawt.add((draw.get(i)+1)/2);
			    		double x = prob.get(i)*prob.get(i+1);
			    		x += (1 - prob.get(i)) * prob.get(i+1) * p;
			    		x += prob.get(i) * (1 - prob.get(i+1)) * p;
			    		probt.add(x);
			    		i++;
			    	}
			    	else{
			    		drawt.add((draw.get(i)+1)/2);
			    		probt.add(prob.get(i)*p);
			    	}
			    }
			    draw.clear();
			    prob.clear();
			    draw.addAll(drawt);
			    prob.addAll(probt);
		    }
		    
		    w.println(prob.get(0)*100);
	    }
	    w.close(); 
	}
	
	public static int ip(String s){
		return Integer.parseInt(s);
	}
}
