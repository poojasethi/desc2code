/*
http://www.codingaquarium.com/
Shaikh shiam Rahman
Khulna University of Engineering and Technology(KUET)

*/

#include <bits/stdc++.h>
using namespace std;

/*** typedef ***/

#define MEMSET_INF 127
#define MEMSET_HALF_INF 63
#define stream istringstream
#define rep(i,n) for(__typeof(n) i=0; i<(n); i++)
#define repl(i,n) for(__typeof(n) i=1; i<=(n); i++)
#define FOR(i,a,b) for(__typeof(b) i=(a); i<=(b); i++)
#define INF (1<<30)
#define PI acos(-1.0)
#define pb push_back
#define ppb pop_back
#define all(x) x.begin(),x.end()
#define mem(x,y) memset(x,y,sizeof(x))
#define memsp(x) mem(x,MEMSET_INF)
#define memdp(x) mem(x,-1)
#define memca(x) mem(x,0)
#define eps 1e-9
#define ii pair<int,int>
#define pmp make_pair
#define ft first
#define sd second
#define vi vector<int>
#define vii vector<ii>
#define si set<int>
#define msi map<string , int >
#define mis map<int , string >
typedef long long i64;
typedef unsigned long long ui64;

/** function **/
#define pf printf
#define sf scanf
#define SDi(x) sf("%d",&x)
#define SDs(x) sf("%s",x)
#define SD2(x,y) sf("%d%d",&x,&y)
#define SD3(x,y,z) sf("%d%d%d",&x,&y,&z)
#define pfcas(x) pf("Case %d: ",x)

#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)
#define MAX 100005

#ifdef ONLINE_JUDGE
#define SDl(x) sf("%lld",&x)
void logs(char *ch, ...){
    return;
}
#endif // ONLINE_JUDGE

#ifndef ONLINE_JUDGE
#define SDl(x) sf("%I64d",&x)
void logs(const char *ch, ...){
    char *logmsg;
    va_list args;
    va_start(args,ch);
    int n = _vscprintf(ch,args)+1;
    if(n<1000000) {
        logmsg = (char*)malloc(n);
        vsprintf(logmsg,ch,args);
    } else {
        //puts("Too large");
        logmsg = (char*)malloc(100);
        strcpy(logmsg,"Too Large For Print.");
    }
    va_end(args);

    puts(logmsg);
}
#endif // ONLINE_JUDGE



int main (int argc, char **argv) {
#ifndef ONLINE_JUDGE
    READ("in.txt");
    //cout<<"hello world!"<<endl;
#endif
    int tc,A[MAX],B[MAX],N,K;
    i64 ans;
    SDi(tc);
    while(tc--) {
        SD2(N,K);
        rep(i,N) SDi(A[i]);
        rep(i,N) SDi(B[i]);
        ans = INT_MIN;
        rep(i,N) ans = max(ans,(i64)(K/A[i]) * B[i] );
        cout<< ans <<endl;
    }
    return 0;
}
