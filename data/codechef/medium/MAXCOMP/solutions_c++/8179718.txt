#include <stdio.h>
#include <iostream>
#include <algorithm>

using namespace std;

int input()
{
    int n=0;
    char c=getchar_unlocked();
    while(c < '0' || c >'9') {c=getchar_unlocked();}
    while(c>='0' && c<='9')
    {
        n=(n<<3)+(n<<1)+c-'0';
        c=getchar_unlocked();
    }
    return n;
}

typedef struct Node{
	int s;
	int e;
	int value;
	int ans;
}node;

node A[2001];

bool func(node x, node y){
	return (x.e < y.e);
}

int find_nearest(int x){
	for(int i = x-1; i >= 0; i--){
		if(A[i].e <= A[x].s){
			return A[i].ans;
		}
	}
	return 0;
}

int main(){
	int T, N;
	int a,b;
	int nearest;
	T = input();
	while(T--){
		N = input();
		for(int i = 0; i < N; i++){
			A[i].s = input();
			A[i].e = input();
			A[i].value = input();
		}
		sort(A, A+N, func);
		A[0].ans = A[0].value;
		for(int i = 1; i < N; i++){
			nearest = find_nearest(i);
			A[i].ans = max(A[i-1].ans, A[i].value + nearest);
		}
		cout << A[N-1].ans << endl;
	}
}



