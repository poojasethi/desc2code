#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;
struct node{
	long long int strt;
	long long int end;
	long long int conc;
	node(int _s,int _e,int _c){
		strt=_s;
		end=_e;
		conc=_c;
	}
};

struct comp{
		bool operator () (node n1, node n2){
			if(n1.strt<n2.strt) return true;
		//	else if(n1.strt==n2.strt && n1.end<n2.end) return true;
			else return false;
		}
} myobjstrt;
/*
long long int maximal(vector<node> v, int* justnext, int i,int* ansz){
	if(ansz[i]!=-1) return ansz[i];
	if(i==v.size()-1) {
		ansz[i]=v[i].conc;
		return v[i].conc;
	}
	if(justnext[i]==-1) {
		if(ansz[i]!=-1) return ansz[i];
		else{
			ansz[i]=max(maximal(v,justnext,i+1,ansz),(long long int) v[i].conc);
			return ansz[i];
		}
	}
	if(ansz[i]==-1){
	ansz[i]=max(v[i].conc+maximal(v,justnext,justnext[i],ansz),maximal(v,justnext,i+1,ansz));
	}
	return ansz[i];
}
*/
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
			int n;
			scanf("%d",&n);
			vector<node> v;
			long long int strt,end,conc;
			for(int i=0;i<n;i++){
				scanf("%lld %lld %lld",&strt,&end,&conc);
				v.push_back(node(strt,end,conc));
			}
			sort(v.begin(),v.end(),myobjstrt);
			//int num=v.size();
			//int ansz[n];
			int justnext[n];
			long long int maxz[n];
			for(int i=n-1;i>=0;i--) {
				justnext[i]=-1;
				int L = i;
				int R = n-1;
				if(!(v[R].strt<v[i].end)){
				while (true) {
					if(L+2==R){
						int tmpa=v[i].end;
						if(v[L].strt>=tmpa){justnext[i]=L;break;}
						else if(v[L+1].strt>=tmpa){justnext[i]=L+1;break;}
						else if(v[L+2].strt>=tmpa){justnext[i]=L+2;break;}
						else break;
					}
					if(L+1==R){
						int tmpa=v[i].end;
						if(v[L].strt>=tmpa){justnext[i]=L;break;}
						else if(v[L+1].strt>=tmpa){justnext[i]=L+1;break;}
						else break;
					}
					if(L==R) break;
					int M = (L + R)/2;
					if (v[M].strt < v[i].end) {
						L = M;
					}
					else {
						R = M;
					}
				}
				}
				if(i==n-1) {maxz[i]=v[i].conc;}
				else if(justnext[i]==-1) maxz[i]=max((long long int) v[i].conc,maxz[i+1]);
				else maxz[i]=max(v[i].conc+maxz[justnext[i]],maxz[i+1]);
			}
			printf("%lld\n",maxz[0]);
	}
}
