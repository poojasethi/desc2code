#include<iostream>
using namespace std;
int max(int i,int j)
{
	return i>j?i:j;
}
int partision(int s[],int e[],int c[],int l,int r)
{
	int i,j=l,pt=e[r],x;
	for(i=l;i<r;i++)
	{
		if(e[i]<=pt)
		{
		    x=s[i];
			s[i]=s[j];
			s[j]=x;
			x=e[i];
			e[i]=e[j];
			e[j]=x;
			x=c[i];
			c[i]=c[j];
			c[j]=x;
			j++;
		}
	}
        	x=s[i];
			s[i]=s[j];
			s[j]=x;
			x=e[i];
			e[i]=e[j];
			e[j]=x;
			x=c[i];
			c[i]=c[j];
			c[j]=x;
		return j;
}
void qsort(int s[],int e[],int c[],int l,int r)
{
	if(l<r)
	{
		int j=partision(s,e,c,l,r);
		qsort(s,e,c,l,j-1);
		qsort(s,e,c,j+1,r);
	}
}
int main()
{
	int T;
	cin>>T;
	while(T--)
	{
		int N,i,j,max1,temp;
		
		cin>>N;
		
		int S[N],C[N],E[N];
		
		int arr[50]={0};
		
		max1=0;
		
		for(i=0;i<N;i++)
		cin>>S[i]>>E[i]>>C[i];
		
		qsort(S,E,C,0,N-1);
		
		for(i=0;i<N;i++)
		{
			max1=0;
			
			for(j=0;j<=S[i];j++)
			if(max1<arr[j])
			max1=arr[j];
			
			temp=max1+C[i];
			arr[E[i]]=max(temp,arr[E[i]]);
		}
		max1=0;
		
		for(i=0;i<=48;i++)
		if(max1<arr[i])
		max1=arr[i];
		
		cout<<max1<<endl;
	}
	return 0;
}