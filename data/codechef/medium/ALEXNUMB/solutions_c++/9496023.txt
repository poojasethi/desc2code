#include<iostream>
#include<set>
#include<map>
#include<vector>
#include<list>
#include<string.h>
#include<cmath>
#include<algorithm>
#include<string>
#include<sstream>
#include<stack>
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;

#define pb push_back
#define mp make_pair

#define S second
#define F first

#define all(c) (c).begin(), (c).end()

ll gcd(ll a, ll b)
{
   if (b==0) return a;
   return gcd(b,a%b);
}

ll abs1(ll a)
{
	if(a<0)
	return -1*a;
	else return a;
}

ll power(ll base, ll n, ll M)
{
    if(n==0)
    return 1;
    if(n==1)
    return base;
    ll halfn=power(base,n/2,M);
    if(n%2==0)
    return ( halfn * halfn ) % M;
    else
    return ( ( ( halfn * halfn ) % M ) * base ) % M;
}

ll findMMI(ll n,ll M)
{
    return power(n,M-2,M);
}

ll max2(ll a, ll b)
{
	if(a>b)
	return a;
	else return b;
}

ll max3(ll a, ll b, ll c)
{
	max2(max2(a, b), c);
}

ll min2(ll a, ll b)
{
	if(a<b)
	return a;
	else return b;
}

ll min3(ll a, ll b, ll c)
{
	return min2(min2(a, b), c);
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int *arr;
		arr=new int[n+1];
		map<int, int> q;
		for(int i=1;i<=n;i++)
		{
			cin>>arr[i];
			q[arr[i]]++;
		}
		vector<int> v, tv;
		v.pb(0);
		tv.pb(0);
		ll ct=0;
		for(map<int, int>::iterator it=q.begin();it!=q.end();it++)
		{
			ct+=it->S;
			tv.pb(it->S);
			v.pb(ct);
		}
		ll fin=0;
		for(int i=1;i<v.size()-1;i++)
		{
			fin+=(tv[i]*(ct-v[i]));
		}
		cout<<fin<<endl;
	}
	return 0;
}
