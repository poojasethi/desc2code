#include<iostream>
#include<string.h>
using namespace std;
const int LN=20;
struct BigInt
{
    int num[LN+1];
    BigInt()
    { 
       memset(num,0,sizeof(num));
       num[0]=0; 
    }
    BigInt(int x)
    {
       memset(num,0,sizeof(num));
       num[0]=1;
       num[LN]=x;
       if(x>=10000)
       {
          num[0]++;
          num[LN-1]=x/10000;
          num[LN]=x%10000;
       }
    }
};
BigInt operator +(BigInt &a,BigInt &b)
{
    int i;
    BigInt res;
    memset(res.num,0,sizeof(res.num));
    int len=max(a.num[0],b.num[0]);
    for(i=LN;i>=LN-len+1;i--)
    {
       int m=res.num[i]+a.num[i]+b.num[i];
       res.num[i]=m%10000;
       res.num[i-1]=m/10000;
    }
    if(res.num[LN-len]!=0)
       res.num[0]=len+1;
    else
       res.num[0]=len;
    return res;
}
BigInt operator *(BigInt &a,BigInt &b)
{
   BigInt res;
   memset(res.num,0,sizeof(res.num));
   int i,j,p=0,npos=1000000000;
   for(i=LN;i>=LN-b.num[0]+1;i--)
   {
      for(j=LN;j>=LN-a.num[0]+1;j--)
      {
         int m=res.num[j-p]+a.num[j]*b.num[i];
         res.num[j-p]=m%10000;
         if(m%10000)
            npos=min(npos,j-p);
         res.num[j-p-1]+=m/10000;
         if(m/10000)
           npos=min(npos,j-p-1);
      }
      p++;
   }
   while(npos<=LN && res.num[npos]==0)
      npos++;
   while(npos>1 && npos<=LN && res.num[npos-1]!=0)
      npos--;
   res.num[0]=LN-npos+1;
   return res;
}
BigInt operator -(BigInt &a,BigInt b)
{
   BigInt res;
   int i;
   memset(res.num,0,sizeof(res.num));
   int len=max(a.num[0],b.num[0]);
   for(i=LN;i>=LN-len+1;i--)
   {
      int m=res.num[i]+a.num[i]-b.num[i];
      res.num[i]=m;
      if(res.num[i]<0)
      {
         res.num[i]+=10000;
         res.num[i-1]--;
      }
   }
   for(i=0;i<=LN;i++)
   {
      if(res.num[i]!=0)
      {
         res.num[0]=LN-i+1;
         break;
      }
   }
   return res;
}
void out(BigInt &a)
{
    int i;
    for(i=LN-a.num[0]+1;i<=LN;i++)
    {
  		if (i==LN-a.num[0]+1) printf("%d",a.num[i]); else
		if (a.num[i]<10) printf("000%d",a.num[i]); else
		if (a.num[i]<100) printf("00%d",a.num[i]); else
		if (a.num[i]<1000) printf("0%d",a.num[i]); else
		printf("%d",a.num[i]);
    }
    printf("\n");
}

int main()
{
    int t;
    scanf("%d",&t);
    BigInt one(1),four(4),two(2);
    while(t--)
    {
       int n,m;
       scanf("%d%d",&n,&m);
       if(n==1 && m==1)
       {
         printf("0\n");
         continue;
       }
       BigInt res,a(n),b(m),temp,t1,t2,t3;
       t1=a*b;
       t2=t1-one;
       res=t1*t2;
       if(m>1 && n>2)
       {
         t1=a-two;
         t2=b-one;
         t3=four*t1;
         t3=t3*t2;
         res=res-t3;
       }
       if(m>2 && n>1)
       {
          t1=a-one;
          t2=b-two;
          t3=four*t1;
          t3=t3*t2;
          res=res-t3;
       }
       out(res);
    }
    return 0;
}
