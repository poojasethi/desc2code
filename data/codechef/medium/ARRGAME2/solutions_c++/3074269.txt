#include<iostream>
#include<vector>
#include<set>
//#include<cstdio.h>
#include<map>
#include<queue>
#include<stack>
#include<string>
#include<algorithm>
#include<functional>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<cassert>
using namespace std;
//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)

#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(n,s); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()

#define M 1000000007
// fast input function
/*
#define getcx getchar_unlocked

 inline void inp( int &n )
 {
    n=0;
    int ch=getcx();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

    while(  ch >= '0' && ch <= '9' )
            n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    n=n*sign;
  }
  
 */
 
  int main(){
   
   int t;
   
   //inp(t);
   cin>>t; // testcases
   
   vector<int>A;
   vector<int>B;
   
   while(t--){
     
     int n;           
              
      cin>>n;
      
      int i,x,one=0,two=0,three=0;     
      
      rep(i,n){
                
       cin>>x;
      
       if(x==1)
        continue;
       else if(x==2)
         A.pb(4);
       else{    
          if(x==3)
          three++;
          A.pb(x);
        }        
      }  
      
      
      //int one=0,two=0;
      rep(i,n){
        
        cin>>x;       
        
        if(x==1)
        { 
          one++;         
          continue;
        }
        else if(x==2){
          two++;   
          continue;
        }
        else
         B.pb(x);     
     } 
       
      //int count=0;
      
      sort(A.begin(),A.end());
      sort(B.begin(),B.end());
   
      ll sum=0;
      
      ll Alength=A.size();
      ll Blength=B.size();
      
      sum+=one*Alength;   
      sum+=three*two;
     
          
      ll count=0;
      int j=0;      
      for(i=0;i<Alength;i++){
        
        for(;j<Blength;j++){
               
           if(B[j]<=A[i])                
             count++;
           else{    
             sum+=(Blength-count);  
             break;
           }  
        
        } 
           
      }
     
      printf("%lf\n",sum/double(n)); 
     
     A.clear();
     B.clear();
   }
   return 0;
  }
