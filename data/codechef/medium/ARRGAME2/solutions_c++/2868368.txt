#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<queue>
#include<deque>
#include<map>
#include<cstdlib>
#include<cmath>
#include<utility>
#include<cstring>
#include<stack>
#include<set>
#include<limits.h>
using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define PI pair<int,int>
#define READ() freopen("input.txt","r",stdin)
#define WRITE() freopen("output.txt","w",stdout)
#define FOR(i,x,y) for(int i=x;i<y;i++)
#define SORT(x) sort(x.begin(),x.end())
#define MODM 1000000007
#define lli long long int

lli gcd(lli a,lli b){if(a==0)return(b);else return(gcd(b%a,a));}

lli power(int a,int b,int mod)
{
    lli ans=1;
    while(ans&&b)
    {
        if(b&1)
            ans=(ans*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return ans;
}


bool cmp(int a,int b)
{
    return a<b;
}

int main()
{
    lli t,x,n;
    cin>>t;
    while(t--)
    {
        vector<int> chef,sasha;
        lli s1=0;
        lli kiss=0;
        cin>>n;

        FOR(i,0,n)
        {
            cin>>x;
            if(x==1) continue;
            if(x==2) x=4;
            chef.pb(x);
        }

        FOR(i,0,n)
        {
            cin>>x;
            if(x==1) {  s1++; continue; }
            sasha.pb(x);
        }

        lli lenChef=chef.size(),lenSasha=sasha.size();

        /**When sasha has 1 she loses always, just add the counter**/
        kiss+=lenChef*s1;

        if(lenChef==0)  { printf("0.000000\n"); continue; }
        if(lenSasha==0) { printf("%lf\n",kiss/(double)n); continue;}

        SORT(chef);
        SORT(sasha);

        lli i=0,j=0,cnt1=0,cnt2=0;

        if(chef[0]==3)
        {
            while(chef[i]==3) cnt1++,i++;
            while(sasha[j]==2) j++;
            while(sasha[j]==3) cnt2++,j++;
        }

        /**Count all the possible places where chef is 3 and where sasha is 3**/
        kiss+= cnt1*(lenSasha-cnt2);
        j=0;

        for(;i<lenChef;i++)
        {
            while(chef[i]>=sasha[j]&&j<lenSasha)
                j++;
            if(j<lenSasha)
                kiss+=lenSasha-j;
            if(j==lenSasha&&chef[i]<sasha[j-1])   { kiss+=lenSasha;  }
        }
        printf("%lf\n",kiss/(double)n);
    }
    return 0;
}
