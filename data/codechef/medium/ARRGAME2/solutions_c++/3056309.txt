//ARRGAME

#include<cstdio>
#include<cstring>
#include<algorithm>
#define MAXN 100001
#define loop(x, y, z) for(int i=x;i<=y; i+=z)
using namespace std;

typedef long long int I64;
long a[MAXN], b[MAXN];
int N;

int rnk(long int x){
	int i=1, j=N;
	while(i<=j){
		int mid=(i+j)>>1;
		if(b[mid]>=x && ((b[mid-1]<x && mid>1) || mid==1)) return mid;
		else if(b[mid]<x) i=mid+1;
		else if(b[mid]>=x && b[mid]>=x) j=mid-1;
	}
	return N+1;
}

inline I64 input(){
	I64 in=0;
	char c=getchar();
	while(c<48) c=getchar();
	while(c>47){
		in=(in<<3)+(in<<1)+c-'0';
		c=getchar();
	}
	return in;
}


int main(){
	int test;
	test=input();
	while(test--){
		I64 count=0, one=0, two=0, rnk4, rnk5;
		double expt=0;
		N=input();
		for(int i=1; i<=N; i++) a[i]=input();
		for(int i=1; i<=N; i++) b[i]=input();
		sort(b, b+N+1);
		rnk4=rnk(4);
		rnk5=rnk(5);
		for(int i=1; i<=N; i++){
			if(b[i]==1) one++;
			else if(b[i]==2) two++;
			else break;
		}
		loop(1, N, 1){
			if(a[i]==2) count+=one+N+1-rnk5;
			else if(a[i]==3)count+=one+two+N-rnk4+1;
			else if(a[i]>=4) count+=one+N-rnk(a[i]+1)+1;
		}
		//printf("Count %lld\n", count);
		expt=count/(double)N;
		printf("%f\n", expt);
	}
}