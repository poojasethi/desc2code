#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include<list>
 
#define si(n)                       scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define pi(n)                       printf("%d\n",n)
#define pc(n)                       printf("%c\n",n)
#define pl(n)                       printf("%lld\n",n)
#define pf(n)                       printf("%lf\n",n)
#define ps(n)                       printf("%s\n",n)
 
// Useful constants
 
#define INF                         (ll)1e9
#define EPS                         1e-9
 
// Useful container manipulation / traversal macros
 
#define loop(i,a,b)                 for(ll i=a;i<b;i++)
#define foreach(v,c)                for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                   memset(a, v, sizeof a)
#define sz(a)                       ((ll)(a.size()))
#define mp                          make_pair
 
// Some common useful functions
 
#define MAX(a,b)                     ( (a) > (b) ? (a) : (b))
#define MIN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define SORT(a)                      ( sort(all(a))
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())
 
typedef long long ll;
using namespace std;
 
int main()
{
    ll t;
    scanf("%lld",&t);
 
    while(t--)
    {
      ll n;
      sl(n);
      ll a[n], b[n];
      ll a2 = 0, b3 = 0, b4 = 0, b1=0,a1=0;
      ll x,j=0,k=0;
      loop(i,0,n)
      {
        sl(a[i]);
        if(a[i]==2)
          a2++;
        else if(a[i]==1)
          a1++;
      }
      loop(i,0,n)
      {
        sl(b[i]);
        
        if(b[i]==4)
          b4++;
        else if(b[i]==3)
          b3++;
        else if(b[i]==1)
          b1++;
      }
 
      double cnt=0,cnt2=0;
      sort(a,a+n);
      sort(b,b+n);
      
      loop(i,0,n)
      {
        if(a[i]==3)
          cnt+=(n-b3-b1);
        else if(a[i]!=1)
        {
          ll *index = upper_bound(b,b+n,a[i]);
          ll tmp = ((b+n)-index);
//          pi(tmp);
          cnt += tmp;
        }
      }
      cnt -= (a2*b4) + (a2*b3);
      cnt += (n*b1);
      cnt -= (b1*a1);
//      pf(cnt1);
//      pf(n*n - cnt2);
 
      double ans = cnt/(double)n;      
      pf(ans);
    }
return 0;
}