    #include<cstdio>
    #define SIZE 100000
    #define INF 1000000001
    using namespace std;
     
    inline static int get_i(){
    static int noRead,p;
    noRead=0;
    do{
    p=getchar_unlocked();
    }while(p<48);
    while(p>47){
    noRead= (noRead<<3)+(noRead<<1)+p-'0' ;
    p=getchar_unlocked();
    }
    return noRead;
    }
     
     
    void max_heapify(int *x,int n){
    int *a=x-1;
    int i,j,k,t;
    for(i=2;i<=n;i++){
    j=i;
    k=(j>>1);
    while(j!=1&&a[j]>a[k]){
    t=a[j];
    a[j]=a[k];
    a[k]=t;
    j=k;
    k=j>>1;
    }
    }
     
    }
     
    int pop_heap(int *x,int n){
    int *a=x-1;
    int t=a[1],t1;
    a[1]=a[n];
    n--;
    int i=1,j,k,l;
    while(i<n){
    j=i<<1;
    k=j+1;
    if(k<=n){
    l=a[j]>a[k]?j:k;
    if(a[l]>a[i]){
    t1=a[l];
    a[l]=a[i];
    a[i]=t1;
    i=l;
    }
    else {
    break;
    }
    }
    else if(j<=n){
    if(a[j]>a[i]){
    t1=a[j];
    a[j]=a[i];
    a[i]=t1;
    i=j;
    }
    else {
    break;
    }
    }
    else
    break;
    }
    return t;
    }
     
    void sort_heap(int *x,int n){
    int i,t;
    for(i=n;i>=2;i--){
    t=pop_heap(x,i);
    x[i-1]=t;
    }
    }
     
     
     
    int main(){
    static int T,a[SIZE+2],b[SIZE+2],N,i,j,f,l,m;
    long long s1,s2;
    a[0]=-1;
    T=get_i();
    while(T--){
    N=get_i();
    for(i=1;i<=N;i++){
    a[i]=get_i();
    if(a[i]==1)
    a[i]=INF;
    else if(a[i]==2)
    a[i]=4;
    }
    a[N+1]=INF;
    /*for(i=0;i<=N+1;i++){
    printf("%d\t",a[i]);
    }
    printf("\n");
    */
    max_heapify(a+1,N);
    /*for(i=0;i<=N+1;i++){
    printf("%d\t",a[i]);
    }
    printf("\n");
    */
    sort_heap(a+1,N);
    /*for(i=0;i<=N+1;i++){
    printf("%d\t",a[i]);
    }
    printf("\n");
    */
    for(i=0;i<=N+1;i++){
    b[i]=0;
    }
    for(i=1;i<=N;i++){
    j=get_i();
    if(j==1)
    j=INF;
    else if(j==2)
    j=4;
    f=0;l=N+1;
    //performing binary search
    while(l-f!=1){
    m=f+((l-f)>>1);
    if(j<=a[m])
    l=m;
    else
    f=m;
    }
    b[f]++;
    }
    /*for(i=0;i<=N+1;i++){
    printf("%d\t",a[i]);
    }
    printf("\n");
    for(i=0;i<=N+1;i++){
    printf("%d\t",b[i]);
    }
    printf("\n");*/
    s1=s2=0;
    for(i=N;i>0;i--){
    s1+=b[i];
    s2+=s1;
    }
    printf("%.6lf\n",((double)s2)/N);
    }
    return 0;
    }
