#!/usr/bin/python

# read the number of testcases
testcases = int(raw_input())

# for each test case
for i in range(0, testcases):
	# read the inputs k and string of len 2^k
	vals    = raw_input().split()
	strlen  = 2**int(vals[0])
	# compute mirror string
	mirrorstr = [0] * strlen
	# for each char in the string
	for j in range(0, strlen):
		# set mirrors to zero
		mirror = 0
		# compute the mirror of bits in j
		for k in range(0, int(vals[0])):
			# check if bit k is set in j
			if (j & (1 << k)):
				# if so, populate the mirror bits
				mirror = (1 << (int(vals[0]) - k - 1)) | mirror
		# populate the right char in mirror str
		mirrorstr[mirror] = vals[1][j]
	# print mirror string
	print ''.join(mirrorstr)
