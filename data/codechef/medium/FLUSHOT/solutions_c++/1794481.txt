#include <cstdio>
#include <algorithm>
 
using namespace std;
 
#define MAX 10000
#define EPS 1e-9	// for rounding off purpose
#define si(t) scanf("%d", &t)
#define sf(t) scanf("%lf", &t);
#define wile(t) while (t-- > 0 )
#define FOR(i,a,b) for (int i = a; i < b; ++i)

double a[MAX];
 
bool solvable(int n, double t, double d) 
{	double x = max(a[0]-d,0.0);		// for first element, extend this logic for all subsequent elements
	
	for (int i = 1; i < n; ++i) 
	{	if (a[i]+d<x+t)			// can be shifted at max a[i]+d and this should be >= x+t to be valid arranngent
			return 0;
		x = max(a[i]-d,x+t);	// person can be shifted in both the ways, a[i]-d-> same logic as for the first one. ( shifting the current person to the left most place ). Take example and simulate to get better understanding.
	}
	return 1;
}
 
int main()
{	int t;
	si(t);
	wile (t) 
	{	int n;
		double t;
		si(n);
		sf(t);
		FOR (i,0,n)
			sf(a[i])
		sort(a,a+n);
		double lo = 0, hi = 1;
		while (!solvable(n, t, hi)) 
			hi= hi*2;
		while (lo+EPS<hi)		// round off lo till 4 decimal places!! Like in SPOJ CLOPPAIR 
		{	double mid = (lo+hi)/2;
			if (solvable(n,t,mid)) 
				hi = mid;
			else 
				lo = mid;
		}
		printf("%.4lf\n", lo);
	}
	return 0;
}
