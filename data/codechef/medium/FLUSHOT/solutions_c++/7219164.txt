# include <bits/stdc++.h>

# define INF 0x7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned LL 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;


using namespace std;

int debug=1;
const int LIM=1e4+5;


/* MAIN PROGRAM STARTS HERE */

double A[LIM];

bool solvable(LL n,double t,double d)
	{
	LL i,j,k;
	double x=max(0.0,A[0]-d);
	
	F(i,1,n)
		{
		if (x+t>A[i]+d) return false;
		else
			{
			x=max(A[i]-d,x+t);
			}
		}
	return true;
	}

int main()
	{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	
	LL T,n,i,j,k,l,m,x,y,z;
	
	cin>>T;
	while(T--)
		{
		cout<<fixed<<setprecision(4);
		double t,low=0.0,mid,high=1.0;
		cin>>n>>t;
		REP(i,n) cin>>A[i];
		while(!solvable(n,t,high)) high*=2.0;
		
		while(low+EPS<high)
			{
			mid=(low+high)/2.0;
			if (solvable(n,t,mid)) high=mid;
			else low=mid;
			}
		
		cout<<mid<<endl;
		}
	
	return 0;
	}