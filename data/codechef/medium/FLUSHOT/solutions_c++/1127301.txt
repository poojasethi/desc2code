#include <algorithm>
#include <iostream>
#include <string>
#include <sstream>
#include <string.h>
#include <cstdio>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <ctime>
#include <cstdlib>

using namespace std;

typedef long long ll;
typedef vector<long> vi;
typedef pair<long,long> pii;
typedef pair<double,double> pdd;
typedef unsigned long long ull;

#define FOR(i,a,b) for (long i(a); i < (b); i++)
#define REP(i,n) FOR(i,0,n)
#define SORT(v) sort((v).begin(),(v).end())
#define UN(v) sort((v).begin(),(v).end()),v.erase(unique(v.begin(),v.end()),v.end())
#define CL(a,b) memset(a,b,sizeof(a))
#define pb push_back

vector<double> x;
int K, N;
double T;

double calcinitial() {
	int n = x.size();
	double prev = 0;
	double k = x[0];
	REP(i, n) {
		if (abs(x[i] - prev) > k) {
			k = abs(x[i] - prev);
		}
		prev += T;
	}
	return k;
}

bool row(double mid) {
	double prev = 0;
	int n = x.size();
	REP(i, n) {
		if ((x[i] - mid) >= prev) {
			prev = x[i] - mid + T;
		} else if (x[i] >= prev) {
			prev += T;
		} else if (x[i] + mid >= prev) {
			prev += T;
		} else {
			return false;
		}
	}
	return true;
}

int main() {
	scanf("%d", &K);
	REP(lp, K) {
		x.clear();
		cin >> N >> T;
		REP(i, N) {
			double X;
			scanf("%lf", &X);
			x.pb(X);
		}
		double up = calcinitial();
		double low = 0;
		double mid;
		REP(i, 40) {
			mid = (low + up) / 2;
			if (row(mid)) {
				up = mid;
			} else {
				low = mid;
			}
		}
		printf("%.4lf\n", mid);
	}
}