#include<iostream>
#include<vector>
#include<algorithm>
#include<cassert>
using namespace std;
#define ll long long
ll mod=1000000007;

vector<ll> dp;
vector<ll> bit;
int b;
void inc(int i,ll x)
{
	if(i>b)return;
	x%=mod;
	int ta=i&(-i);
	bit[i]+=x;
	bit[i]%=mod;
	inc(i+ta,x);
}
ll presum(int i)
{
	if(i>b)i=b;
	ll ans=0;
	while(i>0)
	{
		int ts=i&(-i);
		ans+=bit[i];
		ans%=mod;
		i-=ts;
	}
	return ans;
}
int main()
{
	int n;
	cin>>n>>b;
	vector<int> arr(n+1,0);
	for(int i=0;i<n;++i)cin>>arr[i+1];
	dp.resize(b+1);
	bit.resize(b+1);
	for(int i=0;i<=b;++i){dp[i]=0;bit[i]=0;}
	dp[b]=1;
	inc(b,1);
	for(int i=b-1;i>=1;i--)
	{
		dp[i] = presum(i+arr[i]);
		inc(i,dp[i]);
	}
	int q;
	cin>>q;
	for(int i=0;i<q;++i)
	{
		int x;
		cin>>x;
		cout<<dp[x]<<endl;
	}
	return 0;
}
