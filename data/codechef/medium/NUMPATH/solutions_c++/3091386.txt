/*
 * File:   Trust Paths.cpp
 * Author: Varsha
 *
 * Created on December 12, 2013, 11:11 PM
 */

#include <cstdlib>
#include<iostream>
#include <stdio.h>
#define MAX_SIZE 200001
#define MOD 1000000007
//#define min(x, y) (((x)<(y))?(x):(y))

inline int mod(int x) {
	if (x >= MOD)
		x -= MOD;
	else if (x < 0)
		x += MOD;
	return x;
}

using namespace std;

int main() {

	int N, B, Q;
	int *paths, *n, *S;
	// n is used to save the ni values as well as the cumulative sum of path values

	scanf("%d %d", &N, &B);
	n = new int[N + 1];
	paths = new int[B + 1];
	for (int i = 1; i <= N; i++)
		scanf("%d", &n[i]);
	scanf("%d", &Q);
	S = new int[Q];

	for (int i = 0; i < Q; i++)
		scanf("%d", &S[i]);

	for (int i = N; i > B; i--)
		n[i] = 0;
	paths[B] = 1;
	n[B] = 1;
	for (int i = B - 1; i >= 1; i--) {
		paths[i] = mod(n[i + 1] - n[i + n[i] + 1]);
		n[i] = mod(paths[i] + n[i + 1]);
	}

	for (int i = 0; i < Q; i++)
		printf("%d\n", paths[S[i]]);

	return 0;
}