#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define MOD 1000000007
 
using namespace std;
 
const int maxn=200001;
int trust[maxn], path[maxn], fenwick[maxn];
int N;
 
int input()
{
int in=0;
char c=getchar();
while(c<48) c=getchar();
while(c>47)
{
in=(in<<3)+(in<<1)+c-'0';
c=getchar();
}
return in;
}
 
void update(int idx, int val)
{
while(idx<=N)
{
fenwick[idx]+=val;
if(fenwick[idx]>=MOD) fenwick[idx]-=MOD;
idx+=(idx&(-idx));
}
}
 
int read(int idx)
{
int sum=0;
while(idx>0)
{
sum+=fenwick[idx];
if(sum>=MOD) sum-=MOD;
idx-=(idx&(-idx));
}
return sum;
}
 
int main()
{
int B, Q;
N=input();
B=input();
for(int i=1; i<=N; i++) trust[i]=input();
update(B, 1);
for(int i=B-1; i>0; i--)
{
path[i]=read(i+trust[i]);
update(i, path[i]);
}
Q=input();
for(int i=0; i<Q; i++)
{
int query;
query=input();
printf("%d\n", path[query]);
}
} 