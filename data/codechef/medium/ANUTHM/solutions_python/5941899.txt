"""
Tojo Hates Probability:

Given a N x M grid, and we need to move from 1 x 1 to N x M.
Also, we can only move down or right, and cannot move out of the grid.
Suppose we start at (1,1) then the only two options are (1,2) or (2,1).
SO the probability of moving to these two points will be 0.5 and 0.5
Now, if we were to count the number of steps it takes to reach each cell
of a 3 x 4 grid, it would look like this:
0 1 2 3
1 2 3 4
2 3 4 5

We observe that for any diagonal (right to left) we would need the same
number of steps to reach a cell, So the sum of probabilities across these
diagonal elements will be 1.
1     0.5     0.25     0.125
0.5   0.5     0.375    0.3125
0.25  0.5     0.6875   1

So, sum across every diagonal equals 1.
Thus, sum across the grid  = (number of diagonals) * (1)
"""


def probability_sum(n, m):
    return n + m - 1


if __name__ == '__main__':
    tests = int(raw_input())
    for _ in xrange(tests):
        n, m = map(int, raw_input().split())
        print '%.6f' % probability_sum(n, m)