from math import sqrt
t = int(raw_input())
f = lambda a,b: a[0]-b[0] if a[0]!=b[0] else b[1]-a[1]
d = lambda a,b: sqrt((a[0]-b[0])*(a[0]-b[0])+(a[1]-b[1])*(a[1]-b[1]))
while t:
    raw_input()
    n = int(raw_input())
    points = {}
    for i in range(n):
        (x,y) = map(int, raw_input().split())
        if x in points:
            points[x].append(y)
        else:
            points[x] = [y]
    distance = 0
    lastx = None
    lasty = None
    for i in sorted(points.keys()):
        points[i].sort(reverse=True)
        if lastx!=None:
            distance+=d((lastx, lasty), (i, points[i][0]))
        for j in range(1, len(points[i])):
            distance+=points[i][j-1]-points[i][j]
        lastx = i
        lasty = points[i][len(points[i])-1]
    print '%.02f'%distance
    t-=1
