#include<iostream>
#include<math.h>
#include<iomanip>
using namespace std;

double dist(int x1,int y1,int x2,int y2)
{
    int p=(x1-x2)*(x1-x2)+(y1-y2)*(y1-y2);
    double a = sqrt(p);
    return a;
}
void merge1(int low,int mid,int high,int a[],int b[],int c[],int d[])
{
    int i,j,k;
    i=low,j=mid+1;
    k=0;
    while(i<=mid && j<=high)
    {
        if(a[i]<a[j] ||(a[i]==a[j] && b[i]>b[j]))
        {
            c[k]=a[i];
            d[k]=b[i];
            i++;

        }
         else
        {
            c[k]=a[j];
            d[k]=b[j];
            j++;

        }
        k++;
    }

    while(i<=mid)
    {
        c[k]=a[i];
        d[k]=b[i];
        i++;
        k++;
    }
    while(j<=high)
    {
        c[k]=a[j];
        d[k]=b[j];
        j++;
        k++;

    }
    k=0;

    for(i=low;i<=high;i++)
    {
        a[i]=c[k];
        b[i]=d[k];
        k++;
    }

}

void mergeSort(int a[],int b[],int c[],int d[],int low,int high)
{
    int mid=(low+high)/2;
    if(low>=high)
        return;
    mergeSort(a,b,c,d,low,mid);
    mergeSort(a,b,c,d,mid+1,high);
    merge1(low,mid,high,a,b,c,d);
}


int main()
{
    int t,i,n;
    cin>>t;
    double sum;
    while(t--)
    {
    sum=0;
    cin>>n;
    int a[n];
    int b[n];
    for(i=0;i<n;i++)
    cin>>a[i]>>b[i];
    int c[n],d[n];
    mergeSort(a,b,c,d,0,n-1);
    for(i=0;i<n-1;i++)
        sum+=dist(a[i],b[i],a[i+1],b[i+1]);
    cout<<fixed<<setprecision(2);
    cout<<sum<<endl;


    }
}

