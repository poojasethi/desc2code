#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <algorithm>

using namespace std;

int main(){
    	int x[511],y[511],r,R,n,i,j,count,u,t;
    	double adj[511][511],distance[511],ans;
    	cin>>t;
    	while(t--){
    		vector<double> v;
	//	cout<<"enter the track radius"<<endl;
    		cin>>r>>R;
	//	cout<<"enter no of obstacles"<<endl;
    		cin>>n;
    		for(i = 0;i < n+2;i++){
    			distance[i] = 1e9;
	//		cout<<distance[i]<<" ";
		}
	//	cout<<"enter co-ordinates of obstacles"<<endl;
    		for(i = 0;i < n;i++){
    			cin>>x[i]>>y[i];
		}
		//
    		for(i = 0;i < n;i++){
    			for(j = 0;j < n;j++){
    				adj[i][j] = sqrt(1.0 * (x[i]-x[j])*(x[i]-x[j]) + 1.0 * (y[i]-y[j])*(y[i]-y[j]));
			}
    		}	
    		for(i = 0;i < n;i++){
    			adj[n][i] = adj[i][n] = sqrt(1.0*x[i]*x[i] + 1.0*y[i]*y[i]) - r;
    			adj[n+1][i] = adj[i][n+1] = R - sqrt(1.0*x[i]*x[i]+1.0*y[i]*y[i]);
    		}
    		adj[n][n] = adj[n+1][n+1] = 0;
    		adj[n][n+1] = adj[n+1][n] = R-r;
    		//
    		u = n;
    		distance[u] = 0;
    		count = n+2;
    		x[n] = -1;
    		while(count > 0)
    		{
        		for(j = 0;j < n+2;j++)
    			{
                		if(distance[j] < distance[u])
    					u = j;
    			}
    			if(u == n){
    				distance[u] = 1e9;
			}
    			else{
    				distance[u]*=1e9;
			}
    			for(j = 0;j < n+2;j++){
    				adj[j][u] = -1;
			}
    			for(j = 0;j < n+2;j++)
    			{
    				if((adj[u][j] > 0)&&(adj[u][j] < distance[j]))
    				{
    					x[j] = u;
    					distance[j] = adj[u][j];
    				}
    			}
    			count--;
    		}
    		//
    		i = n+1;
    		while(i != n)
        	{
    			v.push_back(distance[i]/1e9);
    			i = x[i];
    		}
    		//
    		ans = v[0];
    		for(i = 1;i < v.size();i++)
    		{
    			if(v[i] > ans)
    				ans = v[i];
    		}
    		printf("%.3lf\n",ans);
    	}
    	return 0;
} 
