//obstacle problem

#include<cstdio>
#include<iostream>
#include<list>
#include<vector>
#include<algorithm>
#include<set>
#include<utility>
#include<stack>
#include<math.h>

using namespace std;

stack<int> st;

int main()
{
    int t,cones,a,b,c,i,j,k;
    int r1,r2;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d%d",&r1,&r2,&cones);
        if(cones==0)
        printf("%.3f\n",(float)r2-r1);
        else
        {
        
        int x[cones+1],y[cones+1];
        float d[cones+4][cones+4];
        
        for(i=0;i<cones;i++)
        {
          scanf("%d%d",&x[i],&y[i]);
          d[i][cones]=d[cones][i]=(sqrt(((float)(x[i]*x[i]))+((float)(y[i]*y[i])))-r1); 
           d[i][cones+1]=d[cones+1][i]=(float)(r2-(sqrt(((float)(x[i]*x[i]))+((float)(y[i]*y[i])))));
         // printf("mayank %f    %f\n",d[i][cones],d[i][cones+1]);
        }
      
        for(i=0;i<cones;i++)
        {
            for(j=i+1;j<cones;j++)
            {
                d[i][j]=d[j][i]=sqrt(((float)(x[i]-x[j])*(x[i]-x[j]))+((float)(y[i]-y[j])*(y[i]-y[j])));
           //     printf("vikash   %f \n",d[i][j]);
                
            }
        }  
         //printf("hey this is me\n");      
        int parent[cones+3];
        float key[cones+3];
        int visit[cones+3];
        
        for(i=0;i<cones+2;i++)
        {
            parent[i]=0;
            key[i]=25005;
             visit[i]=0;
         }
         key[cones]=0;
         parent[cones]=0;
         d[cones][cones+1]=d[cones+1][cones]=r2-r1;
         
         for(i=0;i<cones+2;i++)
         {
             float m=25005;
             int index;
             for(j=0;j<cones+2;j++)
             {
                 if((visit[j]==0)&&(key[j]<m)) 
                 {m=key[j];index=j;}
             }  
             
             int u=index;
              st.push(u);
             if(u==cones+1)
             break;
             else
             {         
            
             visit[u]=1;
             for(int v=0;v<cones+2;v++)
             {
                 if((visit[v]==0)&&(key[v]>d[u][v]))
                 {
                     key[v]=d[u][v];parent[v]=u;
                   // printf("v   %d   key[v]  %f\n",v,key[v]);
                 }
             }
             }    
         }
         //printf("hey the fuck out of me is this man the man of my words\n");
         float max=0.000;   
         while(!st.empty())
         {
             int u=st.top();
             st.pop();
            if(u==cones);
            else
             {
                 if(max<d[u][parent[u]])
                 max=d[u][parent[u]];
                // printf("max is %f\n",max);
               //  system("pause");
             }
             
         }
         printf("%.3f\n",max);
    // system("pause");            
     }                 
    }
}          
            