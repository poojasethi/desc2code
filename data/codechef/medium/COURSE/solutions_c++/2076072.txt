#include <iostream>
#include <stdio.h>
#include <queue>
#include <math.h>
#define MIN(X,Y) ((X)<(Y)?(X):(Y))
#define MAX(X,Y) ((X)>(Y)?(X):(Y))
using namespace std;

int x[510],y[510],visited[510],r1,r2,n;
double d[510];

inline double D(int i, int j)
{
       if(i==j) return 0;
       if(i==0&&j==n+1) return double(r2-r1);
       if(i==0) return sqrt((double)(x[j]*x[j]+y[j]*y[j]))-(double)r1;
       if(j==0) return sqrt((double)(x[i]*x[i]+y[i]*y[i]))-(double)r1;
       if(j==n+1) return (double)r2-sqrt((double)(x[i]*x[i]+y[i]*y[i]));
       if(i==n+1) return (double)r2-sqrt((double)(x[j]*x[j]+y[j]*y[j]));
       return sqrt((double)(x[i]-x[j])*(x[i]-x[j])+(y[i]-y[j])*(y[i]-y[j]));
}
       
int main()
{
    int t,in;
    double min;
    scanf("%d",&t);
while(t--)
{
          scanf("%d%d",&r1,&r2);
          scanf("%d",&n);
          if(n==0) {printf("%.3lf\n",(double)r2-r1);continue;}
          for(int i=1;i<=n;i++) scanf("%d%d",&x[i],&y[i]);
          for(int i=0;i<=n+1;i++) visited[i]=0,d[i]=500000000.0;
          d[0]=0;
          while(1)
          {
                   in=-1;
                   min=600000000.0;
                   for(int i=0;i<=n+1;i++) if(visited[i]==0) if(d[i]<min) in=i,min=d[i];
                   if(in==-1) break;
                   visited[in]=1;
                   for(int i=0;i<=n+1;i++) if(visited[i]==0) d[i]=MIN(d[i],MAX(D(in,i),d[in]));
                   }
          printf("%.3lf\n",d[n+1]);
          }
          return 0;
          //system("pause");
}
