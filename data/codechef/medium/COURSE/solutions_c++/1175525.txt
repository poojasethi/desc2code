#include<stdio.h>
#include<math.h>
#define EPS 0.00001
double d[505][505];
int visited[505],n,queue[505];
int x[505],y[505];
double dist(int x1,int y1,int x2,int y2)
{  return sqrt(double((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)));
}
int poss(double check)
{  int head,tail,i;  
head=0;tail=1;  
queue[head]=n;
  while(head<tail)
    {      visited[queue[head]]=1;
      for(i=0;i<=(n+1);i++)
        {         if(!visited[i] && d[queue[head]][i]<check)
            {         if(i==(n+1))return 0;
              visited[i]=1;
              queue[tail++]=i;
            }
        }
      head++;
    }
  return 1;
}
int main()
{
  int t,r,R,i,j;
  double hi,lo,mid;
  scanf("%d",&t);
  while(t--)
    {
      scanf("%d %d",&r,&R);
      scanf("%d",&n);
      for(i=0;i<n;i++)
        scanf("%d %d",&x[i],&y[i]);
      for(i=0;i<=(n+1);i++)
        d[i][i]=0;
      for(i=0;i<n;i++)
        for(j=i+1;j<n;j++)
          d[i][j]=d[j][i]=dist(x[i],y[i],x[j],y[j]);
      for(i=0;i<n;i++)
        {
          d[i][n]=d[n][i]=dist(x[i],y[i],0,0)-r;
          d[i][n+1]=d[n+1][i]=R-d[n][i]-r;
        }
      d[n][n+1]=d[n+1][n]=R-r;
      hi=R-r;
      lo=0;
      while(hi-lo>=EPS)
        {
          for(i=0;i<=(n+1);i++)
            visited[i]=0;
          mid=(lo+hi)/2.0;
          if(poss(mid))
            lo=mid;
          else
            hi=mid;
        }
      printf("%.3lf\n",lo);
    }
  return 0;
}