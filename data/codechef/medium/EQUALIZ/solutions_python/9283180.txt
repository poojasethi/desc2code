#include <stdio.h>
#include <stdlib.h>
 
int *array;
int counter;
 
void eval(int count)
{
    int *index1array;
    int index1,index2,index3,blocks;
    if(count==2) {counter+=1; return;}
 
    for(index1=2;index1<count;index1++)
    {
        if(count%index1==0) break;
    }
    if(index1==count)
    {
        counter+=1;
    }
 
    else
    {
        if(count%13==0)
        {
            blocks=count/13;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<13;index2++)
            {
                eval(blocks);
            }
            return;
        }
 
        if(count%11==0)
        {
            blocks=count/11;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<11;index2++)
            {
                eval(blocks);
            }
            return;
        }
 
	if(count%7==0)
        {
            blocks=count/7;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<7;index2++)
            {
                eval(blocks);
            }
            return;
        }
        
        if(count%5==0)
        {
            blocks=count/5;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<5;index2++)
            {
                eval(blocks);
            }
            return;
        }
        
        if(count%3==0)
        {
            blocks=count/3;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<3;index2++)
            {
                eval(blocks);
            }
            return;
        }
        
        if(count%2==0)
        {
            blocks=count/2;
            for(index2=0;index2<blocks;index2++)
            {
                counter+=1;
            }
  
            for(index2=0;index2<2;index2++)
            {
                eval(blocks);
            }
            return;
        }
    }
}
 
void print(int count,int *indexarray)
{
    int *index1array;
    int index1,index2,index3,blocks;
    if(count==2) {printf("2 %d %d\n",indexarray[0]+1,indexarray[1]+1); return;}
 
    for(index1=2;index1<count;index1++)
    {
        if(count%index1==0) break;
    }
    if(index1==count)
    {
        printf("%d ",count);
        for(index2=0;index2<count;index2++)
        {
            if(index2!=count-1) printf("%d ",indexarray[index2]+1);
            else printf("%d\n",indexarray[index2]+1);
        }
    }
 
    else
    {
        if(count%13==0)
        {
            blocks=count/13;
            for(index2=0;index2<blocks;index2++)
            {
                printf("13 ");
                for(index3=index2*13;index3<(index2+1)*13;index3++)
                {
                    if(index3!=((index2+1)*13-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<13;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*13];
                    
                }
                print(blocks,index1array);
            }
            return;
        }
 
        if(count%11==0)
        {
            blocks=count/11;
            for(index2=0;index2<blocks;index2++)
            {
                printf("11 ");
                for(index3=index2*11;index3<(index2+1)*11;index3++)
                {
                    if(index3!=((index2+1)*11-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<11;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*11];
                    
                }
                print(blocks,index1array);
            }
            return;
        }
 
        if(count%7==0)
        {
            blocks=count/7;
            for(index2=0;index2<blocks;index2++)
            {
                printf("7 ");
                for(index3=index2*7;index3<(index2+1)*7;index3++)
                {
                    if(index3!=((index2+1)*7-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<7;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*7];
                   
                }
                 print(blocks,index1array);
            }
            return;
        }
 
        if(count%5==0)
        {
            blocks=count/5;
            for(index2=0;index2<blocks;index2++)
            {
                printf("5 ");
                for(index3=index2*5;index3<(index2+1)*5;index3++)
                {
                    if(index3!=((index2+1)*5-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<5;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*5];
                   
                }
                 print(blocks,index1array);
            }
            return;
        }
 
        if(count%3==0)
        {
            blocks=count/3;
            for(index2=0;index2<blocks;index2++)
            {
                printf("3 ");
                for(index3=index2*3;index3<(index2+1)*3;index3++)
                {
                    if(index3!=((index2+1)*3-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<3;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*3];
                    
                }
                print(blocks,index1array);
            }
            return;
        }
 
        if(count%2==0)
        {
            blocks=count/2;
            for(index2=0;index2<blocks;index2++)
            {
                printf("2 ");
                for(index3=index2*2;index3<(index2+1)*2;index3++)
                {
                    if(index3!=((index2+1)*2-1))printf("%d ",indexarray[index3]+1);
                    else printf("%d\n",indexarray[index3]+1);
                }
            }
            index1array=malloc(sizeof(int)*blocks);
            for(index2=0;index2<2;index2++)
            {
                for(index3=0;index3<blocks;index3++)
                {
                    index1array[index3]=indexarray[index2+index3*2];
                }
                print(blocks,index1array);
            }
            return;
        }
 
    }
}
 
int main()
{
    int t,n,check;
 
    int index,index1;
    int *index1array;
    scanf("%d",&t);
    for(index=0;index<t;index++)
    {
        check=0;
        scanf("%d",&n);
        array=malloc(sizeof(int)*n);
        for(index1=0;index1<n;index1++)
        {
            scanf("%d",&array[index1]);
        }
        
     	counter=0;
     	eval(n);
     	printf("%d\n",counter);
        index1array=malloc(sizeof(int)*n);
 
        for(index1=0;index1<n;index1++)
        {
            index1array[index1]=index1;
        }
        
        
        print(n,index1array);
    }
 
    return 0;
}
 