#include<iostream>
#include<math.h>
#include<algorithm>
#include<stdio.h>
#include<queue>
#include<string.h>
#include<set>
#include<map>
#include<vector>
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORL(i,a,b) for(int i=a;i<=b;i++)
#define FORI(i,a,b,inc) for(int i=a;i<b;i=i+inc)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define LL long long
#define MAX 110
#define INF 100000000010ll
#define MOD 1000000007
#define pb push_back
using namespace std;
bool prime[31];
int arr[10] = {2,3,5,7,11,13,17,19,23,29};
vector<int> v[1100];
int k;
void fun(int i , int j , int len)
{
     if(prime[len] == true)
     {
          v[k].pb(len); 
          FORL(p,i,j)
                    v[k].pb(p);
          k++;                
     }
     else
     {
          if(len%2 == 0)
          {
                   fun(i,i+len/2-1,len/2);
                   fun(i+len/2,j,len/2);
                   int p = i;
                   while(p < i+len/2)
                   {
                           v[k].pb(2);
                           v[k].pb(p);
                           v[k].pb(p+len/2);
                           k++;
                           p++;
                   }
          }
          else if(len%3 == 0)
          {
                   fun(i,i+len/3-1,len/3);
                   fun(i+len/3,i+(2*len)/3-1,len/3);
                   fun(i+(2*len)/3,j,len/3);
                   int p = i;
                   while(p < i+len/3)
                   {
                           v[k].pb(3);
                           v[k].pb(p);
                           v[k].pb(p+len/3);
                           v[k].pb(p+(2*len)/3);
                           k++;
                           p++;
                   }  
          }
          else
          {
                   fun(i,i+len/5-1,len/5);
                   fun(i+len/5,i+(2*len)/5-1,len/5);
                   fun(i+(2*len)/5,i+(3*len)/5-1,len/5);
                   fun(i+(3*len)/5,i+(4*len)/5-1,len/5);
                   fun(i+(4*len)/5,j,len/5);
                   int p = i;
                   while(p < i+len/5)
                   {
                           v[k].pb(5);
                           v[k].pb(p);
                           v[k].pb(p+len/5);
                           v[k].pb(p+(2*len)/5);
                           v[k].pb(p+(3*len)/5);
                           v[k].pb(p+(4*len)/5);
                           k++;
                           p++;
                   } 
          } 
     }
}
int main()
{
     FOR(i,0,10)
                prime[arr[i]] = true;
     
     int t;
     scanf("%d",&t);
     while(t--)
     {
          k = 0;     
          int n,a;
          scanf("%d",&n);   
          FOR(i,0,n)
                    scanf("%d",&a);    
          fun(1,n,n);   
          printf("%d\n",k);
          FOR(i,0,k)
          {
                    FOR(j,0,v[i].size())
                                        printf("%d ",v[i][j]); 
                    printf("\n");
                    v[i].clear();
          }                              
     }
    
    //system("pause");
    return 0;
}
