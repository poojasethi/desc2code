#include <stdio.h>
#define inchar getchar_unlocked
inline int inIntPos() {
      int n=0, ch;
      while((ch = inchar()) < '0');
      n=(ch-'0');
      while((ch=inchar())>='0') n=(n<<3)+(n<<1)+(ch-'0');
      return n;
}
int prim[] = {2,3,5,7,11,13,17,19,23,29};
int isPrim[] = {0,0,1,1,0,1,0,1,0,0,
                0,1,0,1,0,0,0,1,0,1,
                0,0,0,1,0,0,0,0,0,1,  0};
int main(){
	int t,n,i,j,k,l,v,g,ca;
	int a[20];

	t=inIntPos();
	while(t--) {
		n=inIntPos();

		v=inIntPos();
		g=1;
		for(i=1; i<n; ++i) {
			k=inIntPos();
			if(v!=k) g=0;
		}

		if(g) {
			printf("0\n");
			continue;
		}
		if(isPrim[n]) {
			printf("%d\n",1);
			printf("%d",n);
			for(i=1; i<=n; ++i) printf(" %d",i);
			printf("\n");
			continue;
		}
		k=0; g=n; ca=0; v=0;
		while(g>1) {
			i=0;
			while(g%prim[i]) ++i;
			a[ca]=prim[i];
			g=g/prim[i];
			v+=n/a[ca];
			++ca;
		}

		printf("%d\n",v);
		i=ca-1;
		g=n/a[i]; k=1;
		for(j=1; j<=g; ++j) {
			printf("%d",a[i]);
			for(; k<=j*a[i]; ++k) printf(" %d",k);
			printf("\n");
		}
		--i; g=n;
		for(;i>=0;--i) {
			g=g/a[i];
			v=n/a[i];
			for(j=1; j<=v; ++j) {
				printf("%d",a[i]);
				for(k=j+((j-1)/g)*g*(a[i]-1),l=1; l<=a[i]; k+=g,++l) printf(" %d",k);
				printf("\n");
			}
		}
	}
	return 0;
}
