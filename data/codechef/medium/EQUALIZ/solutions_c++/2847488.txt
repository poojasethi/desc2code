#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
struct node
{
int n;
vector<int> num;
};
vector<node> ans;
int isprime(int n)
{
if(n==2)return 1;
if(n%2==0)return 0;
for(int i=2;i*i<=n;++i)
if(n%i==0)return 0;
return 1;
}

void rec(int i,int j,int n)
{
//cout<<i<<" "<<j;
if(isprime(n))
{
node q;
q.n=n;
for(int w=i;w<=j;++w)q.num.push_back(w);
ans.push_back(q);
return;
}
else if(n%2==0)
{
rec(i,i+(j-i+1)/2-1,n/2);
rec(i+(j-i+1)/2,j,n/2);
for(int q=1;q<=n/2;++q)
{
node w;
w.n=2;
w.num.push_back(i+q-1);
w.num.push_back(i+q-1+n/2);
ans.push_back(w);
}

}
else if(n%3==0)
{
rec(i,i+(j-i+1)/3-1,n/3);
rec(i+(j-i+1)/3,i+(j-i+1)/3+(j-i+1)/3-1,n/3);
rec(i+(j-i+1)/3+(j-i+1)/3,j,n/3);
for(int q=1;q<=n/3;++q)
{
node w;
w.n=3;
w.num.push_back(i+q-1);
w.num.push_back(i+q-1+n/3);
w.num.push_back(i+q-1+n/3+n/3);
ans.push_back(w);
}

}
else
{
rec(1,5,5);
rec(6,10,5);
rec(11,15,5);
rec(16,20,5);
rec(21,25,5);
for(int q=1;q<=n/5;++q)
{
node w;
w.n=5;
w.num.push_back(i+q-1);
w.num.push_back(i+q-1+n/5);
w.num.push_back(i+q-1+n/5+n/5);
w.num.push_back(i+q-1+n/5+n/5+n/5);
w.num.push_back(i+q-1+n/5+n/5+n/5+n/5);
ans.push_back(w);
}
}
}
int doit()
{
int n;
cin>>n;
int x;
for(int i=0;i<n;++i)
cin>>x;
ans.clear();
rec(1,n,n);
cout<<ans.size()<<endl;
for(int i=0;i<ans.size();++i)
{
cout<<ans[i].n<<" ";
for(int j=0;j<ans[i].num.size();++j)
cout<<ans[i].num[j]<<" ";
cout<<endl;
}
}
int main()
{
int t;
cin>>t;
while(t--)
{

doit();
}
return 0;
}