//Author: Aman Choudhary
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
#define mod  1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define S1(x) scanf("%llu",&x)
#define MAX 100001
#define NIL 0
#define INF (1<<28)

#define MAXNODES 2005
using namespace std;

vector < vector <int> > a;

bool prime[35];
int n;

bool f(int x, vector <int> &s, int n)
{
    if (x == 1) return true;

    int i;
    for (i = 2; i <= x; i++) {
        if (prime[i] && x%i == 0) {
            vector <int> ss = s;
            ss.pb (i);
            bool ok = f(x/i, ss, n+1);
            if (ok) {
                s = ss;
                return true;
            }
        }
    }
    return false;
}

void print(vector <int> &s)
{
    int i;
    F (i, 0, s.size()) cout << s[i] << " ";
    cout << endl;
}

void process()
{
    int i;
    a.resize (100);
    F (i, 2, 31) {
        f(i, a[i], 0);
     //   cout << i << " --> ";
    //    print(a[i]);
    }
}

bool fin(int x)
{
    if (x <= 1) return false;
    if (x <= 3) return true;
    if (x%2 == 0) return false;

    int i;
    for (i = 3; i*i <= x; i=i+2) {
        if (x%i == 0) return false;
    }
    return true;
}

vector < vector <int> > seg,ans,ss;


void mer(int x)
{
    int n = seg.size();
    int left = n/x;

    ss = seg;
    seg.clear();
    seg.resize (left);

    int i,j;

    for (i = 0; i < ss[0].size(); i++) {
        for (j = 0; j < n; j=j+x) {
            vector <int> aa;
            aa.pb (x);
            for (int k = j; k < j+x; k++) {
                aa.pb (ss[k][i]);
            }
            ans.pb(aa);
        }
    }
    seg.clear();

    for (i = 0; i < ss.size(); i=i+x) {
        vector <int> aa;
        for (j = i; j < i+x; j++) {
            for (int k = 0; k < ss[j].size(); k++) {
                aa.pb (ss[j][k]);
            }
        }
        seg.pb (aa);
    }


}

int main()
{
  //  freopen ("input.txt", "r", stdin);

    int t;
    S (t);

    for (int i = 0; i <= 30; i++) {
        prime[i] = fin(i);
    }

    process();

    while (t--) {
        S (n);
        int i,x;
        F (i, 0, n) S (x);

        seg.clear();
        seg.resize (n);
        ans.clear();

        F (i, 0, n) seg[i].pb (i+1);

        for (i = 0; i < a[n].size(); i++) {
            int x = a[n][i];
            mer (x);
        }

        int j;
        cout << ans.size() << endl;
        F (i, 0, ans.size()) {
            F (j, 0, ans[i].size()) {
                cout << ans[i][j] << " ";
            }cout << endl;
        }

    }

	return 0;
}
