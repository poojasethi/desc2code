#include<iostream>
#include<cstdio>
#include<math.h>
#include<vector>
#include<map>
#include<queue>
using namespace std;

vector< vector<int> > graph;
map<int,int> save;
map<int,int> visited;
bool check(int s)
{
    //cout<<s<<endl;
    visited[s] = 0;
    if(save.count(s) > 0) return false;
    
    int count1 =0;
    for(int i=0;i<graph[s].size();i++)
    {
      if(save.count(graph[s][i]) > 0 && visited.count(graph[s][i]) == 0) count1++;
    }
    //cout<<"s = "<<s<<" count1 ="<<count1<<endl;
    if(count1 > 1) return false;
    
    else{
      int count = 0;
      for(int i=0;i<graph[s].size();i++)
      {
        if(visited.count(graph[s][i]) == 0){
          if(!check(graph[s][i])) count++;
        }
      }
      //cout<<"s = "<<s<<" count ="<<count<<endl;
      if(count > 1) return false;
      else return true;
    }
}

int main()
{
    int T;
    cin>>T;
    
    while(T--)
    {
      int n,s,t;
      scanf("%d%d%d",&n,&s,&t);
      s--;
      
      graph.resize(n);
      for(int i=0;i<n;i++)
      {
        int temp;
        cin>>temp;
        for(int j=0;j<temp;j++){
          int k;
          cin>>k;
          graph[i].push_back(k-1);
        }
      }
      
      
      
      for(int j=0;j<t;j++)
      {
        int k;
        cin>>k;
        //cout<<k<<endl;
        save[k-1] = 1;
      }
      //cout<<save[0]<<"-"<<save[1]<<"-"<<save[2]<<endl;
      bool flag = check(s);
      if(flag) cout<<"yes"<<endl;
      else cout<<"no"<<endl;
      graph.clear();
      save.clear();
      visited.clear();
    }
    return 0;
}
