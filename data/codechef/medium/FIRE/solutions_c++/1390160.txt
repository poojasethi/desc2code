#include <vector>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <cstdio>

#define N 10011

using namespace std;

int test,s,t,c,fire[N],visited[N],i,j,u,n;

vector<int> v[N];

void input(){
	cin>>n>>s>>t;
	for(i = 0;i < n;i++){
		v[i].clear();
		visited[i] = 0;
		fire[i] = 1;
	}
	for(i = 0;i < n;i++){
		cin>>c;
		for(j = 0;j < c;j++){
			cin>>u;
			--u;
			v[i].push_back(u);
		}
	}
	for(i = 0;i < t;i++){
		cin>>c;
		--c;
		fire[c] = 0;
	}
}

bool dfs(int index){
	if(!fire[index]){
		 return false;
	}
	if(v[index].size() < 2 ){
		 return true;
	}
	int count = 0;
	visited[index] = 1;
	for(int k = 0;k < v[index].size();k++){
		if(visited[v[index][k]] == 0){
			count = count + dfs(v[index][k]);
		}
	}
	return (count > 0) ;
}

void print()
{
	puts(dfs(--s) ? "yes" : "no");
}

int main(){
	cin>>test;
	while(test--){
		input();
		print();
	}
	return 0;
}
