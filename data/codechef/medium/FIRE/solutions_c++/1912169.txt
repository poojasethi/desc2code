#include <iostream>
#include <vector>
#include <set>

#define rep( I, N ) for( int I = 0; I < N; ++I )

using namespace std;

typedef vector< vector<int> > nodes_t;

void bush();
bool saveable( nodes_t &, set<int> &, int, int );

int main( int, char ** )
{

    int T; cin >> T;

    rep(t, T) bush();


    return 0;
}

void bush()
{
    int N, S, T, c, b;
    nodes_t     nodes;
    set<int>  special;

    cin    >> N >> S >> T;
    cin.ignore( 1, '\n' );

    nodes.resize( N );

    rep(n, N) {
        cin >> c;

        rep(i, c) { cin >> b; nodes[n].push_back( b - 1 ); }

    }

    rep(t, T) { cin >> b; special.insert( b - 1 ); }


    cout << ( saveable( nodes, special, S - 1, -1 ) ? "yes" : "no" ) << endl;
}

bool saveable( nodes_t &nodes, set<int> &special, int r, int p )
{

    if( special.find( r ) != special.end() ) return false;

    vector<int> &adj = nodes[r];

    if( adj.size() <= 1 ) return true;

    bool save = false;
    for( vector<int>::iterator n = adj.begin(); n != adj.end(); ++n ) if( *n != p )
    {
        save = save || saveable( nodes, special, *n, r);
    }

    return save;
}