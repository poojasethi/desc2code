#include<cstdio>
#include<cstdlib>
#include<vector>
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> ii;

int save[10001],flag=1;
int firestat[10001][2];
void dfs(int **mat,int n,int s,int t,int x,int pred);
int main()
{
   // FILE *fin=fopen("fire.txt","r");
    int i,j,k,T,a,b,p,n,s,t;
    int **mat=(int**)malloc(sizeof(int*)*10001);
    for(i=0;i<10001;i++)
    mat[i]=(int*)calloc(3,sizeof(int));
    scanf("%d",&T);
    for(p=0;p<T;p++)
    {
        scanf("%d%d%d",&n,&s,&t);
        for(i=0;i<=n;i++)
        {
            save[i]=-1;
            mat[i][0]=-1;mat[i][1]=-1;mat[i][2]=-1;
        }
        for(i=1;i<=n;i++)
        {
            scanf("%d",&b);
            k=0;
            for(j=0;j<b;j++)
            {
                 scanf("%d",&a);
                  mat[i][k++]=a;
            }
        }
        for(i=0;i<t;i++)
         {
             scanf("%d",&a);
             save[a]=1;
         }
         for(i=0;i<=n;i++){firestat[i][0]=1;firestat[i][1]=0;}
         dfs(mat,n,s,t,s,-1);

        // printf("%d %d\n",firestat[1][1],firestat[3][0]);
         if(firestat[s][1]==1)
         printf("yes\n");
         else
         printf("no\n");
    }
    return(0);
}
//firestat[i][0]= when saved, clearly we can all in the sub tree of i,always 1
// firestat[i][1]= when allowed to cathc fire, can be 0 or 1
void dfs(int **mat,int n,int s,int t,int x,int pred)
{
        int z[2];
        int i,j,k,count=0,a;
        k=0;
        firestat[x][0]=1;
        for(i=0;i<3;i++)
        {
            if(mat[x][i]!=-1 && mat[x][i]!=pred)
            {dfs(mat,n,s,t,mat[x][i],x);

             z[k]=mat[x][i];
             k++;
             count++;
            }
        }
        if(save[x]==1)
        {
            firestat[x][1]=0;
            return;
        }
        if(count==0)
        {
            //its is leaf
            firestat[x][1]=1;
        }
        else if(count==1)
            firestat[x][1]=1;
        else
        {

            if((firestat[z[0]][1]*firestat[z[1]][0])==1)
            firestat[x][1]=1;
            else if((firestat[z[0]][0]*firestat[z[1]][1])==1)
            firestat[x][1]=1;
            else
            firestat[x][1]=0;
        }
}
