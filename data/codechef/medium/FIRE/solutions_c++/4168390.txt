#include <iostream>
#include <vector>
#include <memory.h>

using namespace std;

int bush[10009][4];
int toSave[10009];

bool check(int b[][4], int toSave[], int burning )
{
  if(toSave[burning])
    return false;
  
 int no = bush[burning][0];

vector<int> adj;
for( int s=1;s<=no;s++)
  if( bush[burning][s] > burning)
    adj.push_back(bush[burning][s]);
  
if(adj.size() == 1 || adj.size() == 0)
  return true;

if(adj.size() == 2)
{
  if(toSave[adj[0]] && toSave[adj[1]])
    return false;
  else
  {
    if(toSave[adj[0]])
      return ( check( b, toSave, adj[1]));
    else if( toSave[adj[1]])
      return (check( b, toSave, adj[0]));
    else
      return ( check( b, toSave, adj[0]) || check( b, toSave, adj[1]) );
  }
}

}
int main()
{
  int T;
  cin>>T;
  while( T-- )
  {
  memset( toSave, 0, sizeof(toSave));
  int n, s, t;
  cin>>n>>s>>t;
  for( int i=1; i<=n; i++)
  {
    int ci;
    cin>>ci;
    bush[i][0]=ci;
    for(int j=1; j<=ci; j++)
    {
      int close;
      cin>>close;
      bush[i][j] = close;
    }
  }
  
  for(int i=1; i<=t; i++)
  {
    int save;
    cin>>save;
    toSave[save]=1;
  }
  int i = s;

  bool can = check( bush, toSave,s );
  
  if( can )
    cout<<"yes"<<endl;
  else
    cout<<"no"<<endl;
  
  }
  return 0;
  
}
