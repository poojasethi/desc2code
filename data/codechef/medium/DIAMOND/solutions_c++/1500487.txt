#include <iostream>
#include <fstream>
#include <sstream>
#include <stack>
#include <queue>
#include <map>
#include <vector>
#include <string.h>
#include <list>
#include <algorithm>
#include <cmath>
#include <set>

#define for0(i,n) for (int i=0; i<n; i++)
#define forr(i,n) for (int i=n-1; i>=0; i--)
#define fori(i,a,b) for (int i=a; i<=b; i++)
#define iter(v,x) for(vector<x>::iterator it=v.begin(); it!=v.end(); it++)
#define vec(x) vector<x>
#define pb push_back
#define ms(a,z) memset(a,z,sizeof(a))
#define mp make_pair
#define gl(x) getline(cin,x,'\n')
#define nl cout<<"\n";
#define pr(x) cout<<(x)<<" ";
#define prp(x) cout<<"("<<(x).first<<" "<<(x).second<<") ";
#define printv(v) for(int _=0; _<v.size(); _++) cout<<v[_]<<" "; cout<<"\n";
#define printa(a,s) for (int _=0; _<s; _++) cout<<a[_]<<" "; cout<<"\n";
#define print2D(a,m,n) for (int _=0; _<m; _++) {for (int __=0; __<n; __++) cout<<a[_][__]<<" "; cout<<"\n";} cout<<"\n";
#define sum(a,l,s) int s=0; for (int _=0; _<l; _++) s+=a[_];
#define fill2D(a,x,m,n) for (int _=0; _<m; _++) {for (int __=0; __<n; __++) a[_][__]=x;}
#define X first
#define Y second
#define sqr(x) 1LL*(x)*(x)
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define all(a) a.begin(),a.end()
#define MAXN 2000

using namespace std;
typedef long long ll;

int INF = 999999999;
double EPSILON = 0.00000001;

double dp[2012][2012][2];

int main()
{
    for (int n=0; n<=MAXN; n++){
        dp[n][0][1] = 1;
        dp[n][0][0] = 0;
        dp[n][n+1][1] = 1;
        dp[n][n+1][0] = 0;
    }

    for (int n=1; n<=MAXN; n++){
        for (int i=0; i<n; i++){
            dp[n][i+1][0] = 0.5*(dp[n-1][i][1] + dp[n-1][i+1][1]);
            dp[n][i+1][1] = 0.5*(dp[n-1][i][0] + dp[n-1][i+1][0]);
        }
    }

    //freopen("P3.txt","r",stdin);
    int cases;
    cin >> cases;
    for0(casen,cases){
        int n;
        cin >> n;
        vec(int) a(n);
        for0(i,n){
            scanf("%d",&a[i]);
        }

        double ans = 0;
        for (int i=0; i<MAXN; i++){
            ans += a[i]*dp[n][i+1][0];
        }
        printf("%.9lf\n",ans);
    }
    return 0;
}
