#include<bits/stdc++.h>
#define FOR(i,a,b) for(i=(a);i<(b);i++)
#define pnt pair<int,int>
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define eps 1e-9
#define pi 3.14159265358979323846
#define dbg(x)	{cerr<< #x << " = " << x <<endl;}
#define swap(x,y)  {x=x+y-(y=x);}
#define pii pair<int,int>
#define F first
#define S second
#define root 0
#define N 3010
 
typedef long long ll;
typedef unsigned long long ull;
 
const int MOD=1000000007;
 
using namespace std;

vector<int>v[N];
int parent[N],low[N],tim[N];
bool vis[N],mark[N];
int ti=0,ans=0;

void DFS(int cur,int prev){
	int i,child,children=0;
	parent[cur]=prev;
	tim[cur]=low[cur]=++ti;
	vis[cur]=true;
	FOR(i,0,v[cur].size()){
		child=v[cur][i];
		if(!vis[child]){
			children++;
			DFS(child,cur);
			low[cur]=min(low[cur],low[child]);
			if(parent[cur]==-1 && children>1){
				mark[cur]=true;
			}
			else if(parent[cur]!=-1 && tim[cur]<=low[child]){
				mark[cur]=true;
			}
		}
		else if(child!=parent[cur] && vis[child]){
			low[cur]=min(tim[child],low[cur]);
		}
	}
}

int main(){
	#ifndef ONLINE_JUDGE
		freopen("inpu.txt","r",stdin);
	#endif
	int t,n,m,k,i,x,y;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d%d",&n,&m,&k);
		FOR(i,0,n){
			v[i].clear();
			vis[i]=false;
			mark[i]=false;
		}
		ti=0;
		ans=0;
		FOR(i,0,m){
			scanf("%d%d",&x,&y);
			v[x].pb(y);
			v[y].pb(x);
		}
		DFS(root,-1);
		FOR(i,0,n){
			if(mark[i])	ans++;
		}
		cout<<ans*k<<endl;
	}
	return 0;
}   