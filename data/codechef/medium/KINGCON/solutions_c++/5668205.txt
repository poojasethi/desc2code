//#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>

#define mod 1000000007
#define ll long long
#define fo(i,in,end) for (i=in;i<end;i++)
#define in(x) scanf("%d",&x)
#define inp(x,y) scanf("%d%d",&x,&y)
#define vi vector <int>
#define vvi vector< vector <int> >
#define pb push_back
#define mem(a,val) memset(a,val,sizeof(a))
using namespace std;

vi v[3005];
int mark[3005],par[3005],low[3005],disc[3005],time_,ap[3005];

void dfs(int x)
{
	mark[x]=1;
	int child=0,i,n;
	time_++;
	disc[x]=time_;
	low[x]=time_;
	n=v[x].size();
	for (i=0;i<n;i++)
	{
		if (mark[v[x][i]]==0)
		{
			//mark[v[x][i]]==1;
			par[v[x][i]]=x;
			child++;
			//disc[i]=++time;
			dfs(v[x][i]);
			low[x]=min(low[x],low[v[x][i]]);
			if (par[x]==-1 && child>1)
			ap[x]=1;
			if (par[x]!=-1 && low[v[x][i]]>=disc[x])
			ap[x]=1;
		}
		else if (v[x][i]!=par[x])
		low[x]=min(low[x],disc[v[x][i]]);
	}
}

int main()
{
	int t;
	in(t);
	while (t--)
	{
		int n,m,k,i,x,y,cnt=0;
		time_=0;
		inp(n,m);
		in(k);
		for (i=1;i<=m;i++)
		{
			inp(x,y);
			v[x].pb(y);
			v[y].pb(x);
			
		}
		par[0]=-1;
		dfs(0);
		for (i=0;i<n;i++)
		{
			if (ap[i]==1)
			cnt++;
		}
		printf("%d\n",cnt*k);
		for (i=0;i<n;i++)
		{
			ap[i]=0;
			mark[i]=0;
			par[i]=0;
			low[i]=0;
			disc[i]=0;
			v[i].clear();
		}
	}
	return 0;
}
