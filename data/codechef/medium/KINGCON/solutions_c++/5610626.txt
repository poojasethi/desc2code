#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;
const int MAXN = 3003;
char isArt[MAXN];
int n, m, k;
int vrijeme, brGran;
int p[MAXN], d[MAXN], low[MAXN];
vector<int> ls[MAXN];
 
inline void print_d(int n) {if(n<0){n=-n;putchar_unlocked('-');}int i=10;char output_buffer[10];do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<10);}
 
inline void scan( int &n )
{
	n = 0;
	int ch = getchar_unlocked(); int sign = 1;
	while( ch < '0' || ch > '9' )
	{
		if(ch == '-')
			sign = -1;
		ch = getchar_unlocked();
	}
	while( ch >= '0' && ch <= '9' )
		n = (n << 3) + (n << 1) + ch - '0', ch = getchar_unlocked();
	n = n * sign;
}
 
void dfs(int x)
{
	low[x] = d[x] = ++vrijeme;
	int sz = ls[x].size();
	for(int i = 0; i < sz; ++i)
	{
		int y = ls[x][i];
		if(!d[y])
		{
			p[y] = x;
			dfs(y);
 
			if(!x) ++brGran;
 
			low[x] = min(low[x], low[y]);
 
			if(x && low[y] >= d[x])
				isArt[x] = '1';
		}
		else if(y != p[x])
			low[x] = min(low[x], d[y]);
	}
}
 
int main()
{
	int T; scan(T);
	while(T--)
	{
		scan(n), scan(m), scan(k);
		for(int i = 0; i < m; ++i)
		{
			int a, b; scan(a), scan(b);
			ls[a].push_back(b);
			ls[b].push_back(a);
		}
 
		int arttoc = 0;
 
		dfs(0);
 
		if(brGran > 1) isArt[0] = '1';
 
		for(int i = 0; i < n; ++i)
			if(isArt[i]) ++arttoc;
 
		arttoc *= k;
		print_d(arttoc);
		putchar_unlocked('\n');
 
		memset(isArt, 0, sizeof(isArt));
		memset(d, 0, sizeof(d));
		memset(p, 0, sizeof(p));
		memset(low, 0, sizeof(low));
		vrijeme = brGran = 0;
 
		for(int i = 0; i < n; ++i)
			ls[i].clear();
	}
	return 0;
} 