#include<bits/stdc++.h>
using namespace std;

void dfs(int p);
int dis[3010],vis[3010],low[3010],parent[3010],found[3010],count;
vector< vector< int > > v(3010);
      

int main()
{
   int t;
   scanf("%d",&t);
   while(t)
   {
           t--;
   int n,m,n1,n2,i,k;   
   //cin>>n>>m>>k;
   scanf("%d %d %d",&n,&m,&k);
   ::count=0;
   for(i=0;i<=n;i++)
   {
      vis[i]=0;
      parent[i]=-1;
      found[i]=0;
      v[i].clear();
   } 
   for(i=0;i<m;i++)
   {
      //cin>>n1>>n2;
      scanf("%d %d",&n1,&n2);
      if(n1!=n2)
      {   
         v[n1].push_back(n2);
         v[n2].push_back(n1);
      }
      
   }  
      //if (vis[i] == 0)
           dfs(0);
   
    printf("%d\n",::count*k);
    //cout<<::count*k<<endl;
    
    } 
    return 0;

}
void dfs(int p)
{
    static int time = 0;
    int children = 0;
    vis[p] = 1;
    dis[p] = low[p] = ++time;
 
   
    for (int i=0; i < v[p].size(); i++)
    {    //cout<<p<<" "<<v[p][i];
        if (!vis[ (v[p][i])])
        {
            children++;
            parent[(v[p][i])] = p;
            dfs((v[p][i]));
 
            low[p]  = min(low[p], low[(v[p][i])]);
            
            
            if (parent[p] == -1 && children > 1)
               {    
                    if(found[p]!=1)
                    ::count++;
                    found[p] = 1;
                  //::count++;
                  //cout<<"=="<<p<<" "<<::count<<endl;
               }
            if (parent[p] != -1 && low[(v[p][i])] >= dis[p])
               {
                 if(found[p]!=1)
                    ::count++;
                    found[p] = 1;
                  
                 //ap[u] = true;
                 //::count++;
                // cout<<"!="<<p<<" "<<::count<<endl;
               }
        }
 
        else if ((v[p][i]) != parent[p])
            low[p]  = min(low[p], dis[(v[p][i])]);
    }
}
 
