#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(n) scanf("%d",&n);
#define mem(a,val) memset(a,val,sizeof(a))
#define pb push_back
#define f first
#define s second
using namespace std;
vi v[3005];
queue<int> q;
bool vis[3005],point[3005];
int time_,par[3005],disc[3005],low[3005];
void dfs(int src)
{	int i,child=0;
	vis[src]=1;
	disc[src]=time_;
	low[src]=time_;
	time_++;
	for(i=0;i<v[src].size();i++)
	{	if(!vis[v[src][i]])
		{	child++;
			par[v[src][i]]=src;
			dfs(v[src][i]);
			low[src]=min(low[src],low[v[src][i]]);
			if(low[v[src][i]]>=disc[src]&&par[src]!=-1)
				point[src]= true;
			if(par[src]==-1&&child>1)
               point[src]=true;
		}
		else if(par[src]!=v[src][i])
			low[src]=min(disc[v[src][i]],low[src]);
	}
}
int main()
{	int t,i,j,n,m,cost,x,y,cnt;
	sf(t);
	while(t--)
	{	sf(n);sf(m);sf(cost);
		for(i=0;i<=n;i++)
		{	v[i].clear();
			vis[i]=false;
			point[i]=false;
			disc[i]=0;
			low[i]=0;
		}
		for(i=0;i<m;i++)
		{	sf(x);sf(y);
			v[x].pb(y);
			v[y].pb(x);
		}
		q.push(0);par[0]=-1;
		time_=0;cnt=0;
		dfs(0);
		for(i=0;i<n;i++)
			if(point[i]==true)
				cnt++;
		printf("%d\n",cnt*cost);
	}
	return 0;
}

