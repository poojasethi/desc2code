#include<cstdio>
#include<cstring>
#include<iostream>
#include<vector>
#include<string>
#include<set>
#include<map>
#include<stack>
#include<queue>
#include<deque>
#include<algorithm>
#include<cmath>

using namespace std;

#define mod 1000000007
#define inf 2147483647
#define ninf -2147483648
#define FOR(i,a,b) for(i=a;i<b;i++)
#define s(a) scanf("%d",&a)
#define lls(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define p(a) printf("%d",a)
#define llp(a) printf("%lld",a)
#define sp(a) printf("%s",a)
#define cp(a) printf("%c",a)
#define nline printf("\n")
#define space printf(" ")
#define ll long long
#define MAX 100001
struct point{
    int x,y;
};
int det(int a[3][3])
{
    int ans=0;
    ans+=a[0][0]*(a[1][1]*a[2][2]-a[2][1]*a[1][2]);
    ans-=a[0][1]*(a[1][0]*a[2][2]-a[2][0]*a[1][2]);
    ans+=a[0][2]*(a[1][0]*a[2][1]-a[2][0]*a[1][1]);
    return ans;
}


 double A,B,C,D;

int isValidCircle(point a,point b,point c)
{
    int ar[3][3];
    ar[0][0]=a.x;
    ar[0][1]=a.y;
    ar[0][2]=1;

    ar[1][0]=b.x;
    ar[1][1]=b.y;
    ar[1][2]=1;

    ar[2][0]=c.x;
    ar[2][1]=c.y;
    ar[2][2]=1;

    if(det(ar))
    return 1;
    return 0;
}

void solve(point a,point b,point c)
{
    int ar[3][3];
    ar[0][0]=a.x;
    ar[0][1]=a.y;
    ar[0][2]=1;

    ar[1][0]=b.x;
    ar[1][1]=b.y;
    ar[1][2]=1;

    ar[2][0]=c.x;
    ar[2][1]=c.y;
    ar[2][2]=1;

    int d=det(ar);

    ar[0][0]=-(a.x*a.x+a.y*a.y);
    ar[1][0]=-(b.x*b.x+b.y*b.y);
    ar[2][0]=-(c.x*c.x+c.y*c.y);

    int d1=det(ar);

    ar[0][0]=a.x;
    ar[1][0]=b.x;
    ar[2][0]=c.x;

    ar[0][1]=-(a.x*a.x+a.y*a.y);
    ar[1][1]=-(b.x*b.x+b.y*b.y);
    ar[2][1]=-(c.x*c.x+c.y*c.y);

    int d2=det(ar);

    ar[0][1]=a.y;
    ar[1][1]=b.y;
    ar[2][1]=c.y;


    ar[0][2]=-(a.x*a.x+a.y*a.y);
    ar[1][2]=-(b.x*b.x+b.y*b.y);
    ar[2][2]=-(c.x*c.x+c.y*c.y);

    int d3=det(ar);

    A=(( double)(d1));
    B=(( double)(d2));
    C=(( double)(d3));
    D=(( double)(d));
}
int check(point a)
{
    if((( double)a.x*a.x+( double)a.y*a.y+((A*a.x+B*a.y+C)/D))<=0L)
    return 1;
    return 0;
}
int main()
{
    int t;
    s(t);
    while(t--)
    {
        int i,j,k,l;
        int n;
        s(n);
        point p[50];
        FOR(i,0,n)
        {
            s(p[i].x);
            s(p[i].y);
        }
        int ans=0,count=0;
        FOR(i,0,n)
        {
            FOR(j,i+1,n)
            {
               // if(j==i) continue;
                FOR(k,j+1,n)
                {
                    //if(j==k||i==k) continue;
                    //if(isValidCircle(p[i],p[j],p[k]))

                        //solve(p[i],p[j],p[k]);
                        FOR(l,0,n)
                        {
                            if(k==l||l==j||l==i)
                            continue;
                            //cout<<i<<" "<<j<<" "<<" "<<k<<" "<<l<<endl;
                            count++;
                            //ans+=check(p[l]);
                        }

                }
            }
        }
        FOR(i,0,n)
        {
            FOR(j,i+1,n)
            {
               /* if(j==i)
                continue;*/
                FOR(k,j+1,n)
                {
                   /* if(j==k||i==k)
                    continue;*/
                    if(isValidCircle(p[i],p[j],p[k]))
                    {
                        solve(p[i],p[j],p[k]);
                        FOR(l,0,n)
                        {
                            if(k==l||l==j||l==i)
                            continue;

                            ans+=check(p[l]);
                        }
                    }
                }
            }
        }
        //cout<<count<<" "<<ans<<endl;
        printf("%.7lf\n",(( double)(ans)/( double)(count)));
    }
    return 0;
}
