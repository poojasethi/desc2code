

#include<cstdio>
#include<vector>
#include<queue>
#include<cmath>
#define gc getchar_unlocked
#define pp pair<int,int>

using namespace std;
double ans,dis,r,m1,m2,m3,cx,cy,d,p,o;
int i,j,k,l,x,y,cnt;
inline int getn(){
int n = 0, c = gc(), f = 1;
while(c != '-' && (c < '0' || c > '9')) c = gc();
if(c == '-') f = -1, c = gc();
while(c >= '0' && c <= '9')
n = (n<<3) + (n<<1) + c - '0', c = gc();
return n * f;
}

inline bool iscircle(std::vector<std::pp > &b,int f,int g,int h)
{
  m1=((double)(b[g].second-b[f].second))/(b[g].first-b[f].first);
  m2=((double)(b[h].second-b[g].second))/(b[h].first-b[g].first);
  m3=((double)(b[h].second-b[f].second))/(b[h].first-b[f].first);
    if(m1==m2 && m2==m3)
    return false;
    else
    return true;
}

inline double radius(std::vector<std::pp > &b,int f,int g,int h)
{   cx=(double)((((b[f].first)*(b[f].first))+((b[f].second)*(b[f].second)))*((b[g].second)-(b[h].second)));
    cx+=((((b[g].first)*(b[g].first))+((b[g].second)*(b[g].second)))*((b[h].second)-(b[f].second)));
    cx+=((((b[h].first)*(b[h].first))+((b[h].second)*(b[h].second)))*((b[f].second)-(b[g].second)));

    cy=(double)((((b[f].first)*(b[f].first))+((b[f].second)*(b[f].second)))*((b[h].first)-(b[g].first)));
    cy+=((((b[g].first)*(b[g].first))+((b[g].second)*(b[g].second)))*((b[f].first)-(b[h].first)));
    cy+=((((b[h].first)*(b[h].first))+((b[h].second)*(b[h].second)))*((b[g].first)-(b[f].first)));

    d=(double)((b[f].first)*((b[g].second)-(b[h].second)));
    d+=((b[g].first)*((b[h].second)-(b[f].second)));
    d+=((b[h].first)*((b[f].second)-(b[g].second)));

    cx=cx/(2*d);
    cy=cy/(2*d);

    r=(double)sqrt(((b[f].first-cx)*(b[f].first-cx))+((b[f].second-cy)*(b[f].second-cy)));
    return r;
}
inline double distance(int h,std::vector<std::pp > &b)
{
    dis=(double)sqrt(((b[h].first-cx)*(b[h].first-cx))+((b[h].second-cy)*(b[h].second-cy)));
    return dis;
}
int main()
{
    int t,c;
    t=getn();
    vector< pp > a;
    while(t--)
    {   a.clear();
        c=getn();

        for(i=0;i<c;i++)
        {
            x=getn();y=getn();
            a.push_back(pp(x,y));
        }
        cnt=0;
        for(i=0;i<c-2;i++)
         for(j=i+1;j<c-1;j++)
           for(k=j+1;k<c;k++)
              {
                if(iscircle(a,i,j,k))
                 {   p=radius(a,i,j,k);

                     for(l=0;l<c;l++)
                     {
                         if(l!=i && l!=j && l!=k)
                         {    o=distance(l,a);
                             if( o<p || fabs(p-o) < .00001)
                                 cnt++;
                         }
                     }

                 }
              }

    ans=((double)(c*(c-1)*(c-2)*(c-3)))/6;

              printf("%.6lf\n",cnt/ans);

}
return 0;
}
