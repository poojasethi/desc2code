 #include<stdio.h>
    double a[2][30];
    double trio_kill(int n)
    {
    int i,j,k,l;
    double a1,a2,b1,b2,c1,c2,d1,d2,q,det,xm1,ym1,xm2,ym2,r,s,d,t;
    q=0;
    for(i=0;i<n;i++)
    {
    for(j=i+1;j<n;j++)
    {
    a1=a[1][j]-a[1][i]; b1=a[0][i]-a[0][j];
    xm1=(a[0][i]+a[0][j])/2.0; ym1=(a[1][i]+a[1][j])/2.0;
    for(k=j+1;k<n;k++)
    {
    a2=a[1][k]-a[1][j]; b2=a[0][j]-a[0][k];
    xm2=(a[0][j]+a[0][k])/2.0; ym2=(a[1][j]+a[1][k])/2.0;
    det=(a1*b2)-(a2*b1);
    if(det==0)
    continue;
    else
    {
    d1=(a1*ym1)-(b1*xm1);
    d2=(a2*ym2)-(b2*xm2);
    r=((a2*d1)-(a1*d2))/det;
    s=((b2*d1)-(b1*d2))/det;
    d=((a[0][k]-r)*(a[0][k]-r))+((a[1][k]-s)*(a[1][k]-s));
    for(l=0;l<n;l++)
    {
    if((l!=i)&&(l!=j)&&(l!=k))
    {
    t=((a[0][l]-r)*(a[0][l]-r))+((a[1][l]-s)*(a[1][l]-s))-d;
    if(t<=0.000001)
    q++;
    }
    }
    }
    }
    }
    }
    return q;
    }
    int main()
    {
    int i,j,t,n;
    double p,f,ans;
    scanf("%d",&t);
    while(t--)
    {
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
    for(j=0;j<2;j++)
    scanf("%lf",&a[j][i]);
    }
    f=trio_kill(n);
    p=n*(n-1)*(n-2)*(n-3);
    ans=(f*6.0)/(p*1.0);
    printf("%lf\n",ans);
    }
    return 0;
    }  