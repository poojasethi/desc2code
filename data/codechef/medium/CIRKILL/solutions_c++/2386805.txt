#include<iostream>
#include<cstdio>
#include<algorithm>
#include<utility>
#include<cstdlib>
#include<cstring>
#include<cmath>

using namespace std;

int main()
{
    long long  int t,n,i,total_circle,total_ways,x1,y1,x2,y2,x3,y3,j;
    long long int a1,a2,b1,b2,c1,c2,d1,d2,centrex,centrey,temp,u,r;
    double ans;
    scanf("%lld",&t);
    while(t--)
    {
        total_circle=1,total_ways=1;
        long long int x[31],y[31],pointx[3],pointy[3],flag=0,flagtemp=0,count=0;
        long long int *a;
        scanf("%lld",&n);
        for(i=0;i<n;i++)
        scanf("%lld%lld",&x[i],&y[i]);
        
        total_circle*=(n*(n-1)*(n-2));
        //total_circle/=6;
        total_ways=total_circle*(n-3);
        
        
        a=(long long int*)malloc(sizeof(long long int)*n);
        memset(a,0,sizeof(long long int)*n);
        
        a[0]=1,a[1]=1,a[2]=1;
        
        count=0;
        
        do
        {
            for(i=0,j=0;i<n;i++)
            {
                if(a[i]==1)
                {
                    pointx[j]=x[i];
                    pointy[j]=y[i];
                    j++;
                }
            }
            x1=pointx[0],y1=pointy[0],x2=pointx[1],y2=pointy[1],x3=pointx[2],y3=pointy[2];
            
             if (x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2) == 0) continue;
            
            //cout<<x1<<" "<<y1<<endl;
            //cout<<x2<<" "<<y2<<endl;
            //cout<<x3<<" "<<y3<<endl;
            
            b1=(y2-y1)*2;
            a1=(x1-x2)*(-2);
            d1=(a1*((x1+x2)))+((b1)*((y1+y2)));
            d1=d1/2;
            
            b2=2*(y3-y2);
            a2=(x2-x3)*(-2);
            d2=(a2*((x2+x3)))+((b2)*((y2+y3)));
            d2=d2/2;
            int det = a1*b2 - a2*b1;
            
            if(det==0)
            {
                continue;
            }
            else
            {
                centrex = (b2*d1 - b1*d2);
                centrey = (a1*d2 - a2*d1);   
                r=(centrex-(x1*det))*(centrex-(x1*det))+(centrey-(y1*det))*(centrey-(y1*det));
            }
            
            
            
            //cout<<centrex<<" "<<centrey<<" "<<r<<" out\n";
            
            //if(y2!=y1 && (((x1-x3)*(y1-y2)))!=(((x1-x2)*(y1-y3))))
            //{
            //cout<<"sidddi\n";
            
            
            
            //cout<<"centerx="<<centrex<<" sid "<<"centrey="<<centrey<<" "<<"radius ="<<r<<endl;
            //cout<<x1<<" "<<y1<<endl;
            //cout<<x2<<" "<<y2<<endl;
            //cout<<x3<<" "<<y3<<endl;
            
            for(i=0;i<n;i++)
            {
                if(a[i]!=1)
                {
                    temp=(centrex-(det*x[i]))*(centrex-(x[i]*det))+(centrey-(y[i]*det))*(centrey-(y[i]*det));
                    
                    
                    if(temp<=r)
                    {
                    
                    //cout<<x[i]<<" sid "<<y[i]<<endl;
                    count++;
                    }
                }
            }
            //}
            
            
        }while(prev_permutation(a,a+n));
        
        //cout<<count<<" sid "<<total_ways<<endl;
        ans=(double)(6*count)/total_ways;
        
        printf("%.7lf\n",ans);
        
    }
    return 0;
}