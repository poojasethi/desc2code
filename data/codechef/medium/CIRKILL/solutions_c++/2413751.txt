#include<string.h>
#include<stdio.h>
#include<math.h>

int det( int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9)
{
    int val;
    val= a1*(a5*a9-a6*a8)- a2*(a4*a9-a6*a7)+ a3*(a4*a8-a5*a7);
    return val;
}

main()
{
    int test_cases,n,i,j,k,m,first,second,third,fourth,val,area;
    double ans,c,cnt;
    int cor[30][2];
    scanf("%d",&test_cases);
    while(test_cases--)
    {
        c=0;
        cnt=0;
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            //cin>>cor[i][0]>>cor[i][1];
            scanf("%d %d",&cor[i][0],&cor[i][1]);
        }

        for(i=0;i<n;i++)
        {
            for(j=i+1;j<n;j++)
            {
                for(k=j+1;k<n;k++)
                {
                     cnt++;
                     //area= cor[i][0]*( cor[j][1]-cor[k][1]) + cor[j][0]*(cor[k][1]-cor[i][1])+ cor[k][0]*(cor[i][1]-cor[j][1]);
                        area= det(cor[i][0],cor[i][1],1,cor[j][0],cor[j][1],1,cor[k][0],cor[k][1],1);
                     if(area) //forms a circle
                     {
                         for(m=0;m<n;m++)
                         {
                                if(m==i || m==j || m==k)continue;
                                else{

                         first= det( cor[i][0],cor[i][1],1,cor[j][0],cor[j][1],1,cor[k][0],cor[k][1],1);
                         second= det( cor[i][0]*cor[i][0]+cor[i][1]*cor[i][1], cor[i][1],1, cor[j][0]*cor[j][0]+cor[j][1]*cor[j][1], cor[j][1],1, cor[k][0]*cor[k][0]+cor[k][1]*cor[k][1], cor[k][1],1);
                         third= det( cor[i][0]*cor[i][0]+cor[i][1]*cor[i][1], cor[i][0],1, cor[j][0]*cor[j][0]+cor[j][1]*cor[j][1], cor[j][0],1, cor[k][0]*cor[k][0]+cor[k][1]*cor[k][1], cor[k][0],1);
                         fourth= det( cor[i][0]*cor[i][0]+cor[i][1]*cor[i][1], cor[i][0],cor[i][1], cor[j][0]*cor[j][0]+cor[j][1]*cor[j][1], cor[j][0],cor[j][1], cor[k][0]*cor[k][0]+cor[k][1]*cor[k][1], cor[k][0],cor[k][1]);

                            val= (cor[m][0]*cor[m][0]+cor[m][1]*cor[m][1])*first - cor[m][0]*second + cor[m][1]*third- fourth;
                            if( area>0 && val<=0)
                                c++;
                             else if(area<0 && val>=0)
                                    c++;


                        }

                     }

                }
            }
          }
        }

   // printf("c=%d ,cnt=%d\n",c,cnt);
        ans= double(c)/double(cnt*(n-3));
        printf("%.6lf\n",ans);

    }
return 0;
}
