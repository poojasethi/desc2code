#include<stdio.h>
#include<string.h>
int flag[31]={0};
double x[31],y[31];
int main()
{
     int test,n,i,j,k,den=0,l;
     double ds1,ds2,ns1,ns2,e,b,c,d,cx,cy;
     double prob=0,dis,rad;
     int f=n-3;
     double tol=-0.000000000000001;
     scanf("%d",&test);
     while(test--)
     {
	  scanf("%d",&n);
	  f=n-3;
	  prob=0;
	  den=0;
	  for(i=0;i<n;i++)
	  {
	       scanf("%lf%lf",&x[i],&y[i]);
	       flag[i]=0;
	  }
	  for(i=0;i<n;i++)
	  {
	       flag[i]=1;
	       for(j=i+1;j<n;j++)
	       {
		    flag[j]=1;
		    e=(x[i]+x[j])/2;
		    b=(y[i]+y[j])/2;
		    ds1=y[j]-y[i];
		    ns1=((x[j]-x[i]));
		    ns1*=-1;
		    for(k=j+1;k<n;k++)
		    {
			 flag[k]=1;
			 c=(x[j]+x[k])/2;
			 d=(y[j]+y[k])/2;
			 ds2=y[k]-y[j];
			 ns2=((x[k]-x[j]));
			 ns2*=-1;
			 den++;
			 //printf("ns1 : %lf  ns2 : %lf  ds1 : %lf   ds2 : %lf\n",ns1,ns2,ds1,ds2);
			 if(ns1*ds2!=ds1*ns2)                // if it is a circle
			 {
			      cx=(ds1*ds2*(d-b)-ds1*ns2*c+ds2*ns1*e)/(ds2*ns1-ds1*ns2);
			      if(ds1!=0)
				   cy=ns1*(cx-e)/ds1+b;
			      else
				   cy=ns2*(cx-c)/ds2+d;
			      rad=(cx-x[k])*(cx-x[k])+(cy-y[k])*(cy-y[k]);
			      //			 printf("cx : %lf  cy : %lf  rad : %lf\n",cx,cy,rad);
			      for(l=0;l<n;l++)
				   if(flag[l]==0)
				   {
					dis=(cx-x[l])*(cx-x[l])+(cy-y[l])*(cy-y[l]);
					if((rad-dis)>=tol)
					     prob+=1.0;
				   }
 
			 }
			 flag[k]=0;
		    }
		    flag[j]=0;
	       }
	       flag[i]=0;
	  }
	  if(den!=0 && f!=0)
	  {
	       prob/=den;
	       prob/=f;
	       printf("%0.7lf\n",prob);
	  }
     } 
     return 0;
}