#include <iostream>
#include <cstdio>
using namespace std;
typedef long long LL;
typedef struct point{
int x,y;
} point;

point p[50];
LL sq(LL n)
{
      return n*n;
}

int check_cirkill(point p1,point p2,point p3,point p4)
{
     int a = p2.x - p1.x;
    int b = p2.y - p1.y;
    int c = p3.x - p1.x;
    int d = p3.y - p1.y;
    int e = a * (p1.x + p2.x) + b * (p1.y + p2.y);
    int f = c * (p1.x + p3.x) + d * (p1.y + p3.y);
    int g = 2 * (a * (p3.y - p2.y) - b * (p3.x - p2.x));
    if (g == 0) return false;
 
    if (sq (d * e - b * f - g * p4.x) + sq (a * f - c * e - g * p4.y) <= sq (d * e - b * f - g * p1.x) + sq (a * f - c * e - g * p1.y))
        return true;
    else
    return false;
}

int main()
{
      int t;
      cin>>t;
      while(t--)
      {
            int n=0;
            cin>>n;
            for(int i=0;i<n;i++)
            {
                  cin>>p[i].x>>p[i].y;
            }
            int tcnt=0,kcnt=0;
            for(int i=0;i<n;i++)
            {
                  for(int j=i+1;j<n;j++)
                  {
                        for(int k=j+1;k<n;k++)
                        {
                              for(int l=0;l<n;l++)
                              {
                                    if(l==i || l==j || l==k)
                                    continue;
                                    tcnt++;
                                    if(check_cirkill(p[i],p[j],p[k],p[l]))
                                    kcnt++;
                              }
                        }
                  }
            }
       //printf ("%.6lf\n", kcnt / (double) tcnt);
       
      cout<<kcnt/(double)tcnt<<endl;
      }
      
      return 0;
}