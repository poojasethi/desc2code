#include <stdio.h>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<stdlib.h>
#include<vector>
#define ss second
#define ff first
using namespace std;

int cmp(pair<int,int>l,pair<int,int>r){
    return l.ss-l.ff+1 < r.ss-r.ff+1;
}
 
int main()
{
    std::ios_base::sync_with_stdio(false);
    int t,n,k;
    vector<pair<int,int> > r;
    cin>>t;
    while(t--){
        r.clear();
        cin>>n;
        cin>>k;
        int x,y;
        char ans[2111];
        memset(ans,0,sizeof ans);
        while(k--){
            cin>>x;
            cin>>y;
            r.push_back(make_pair(x,y));
        }
        for(int i = 1;i < r.size();i++){
            for(int j = 0;j < i;j++){
                if(r[i].ff >= r[j].ff && r[i].ff <= r[j].ss && r[i].ss >= r[j].ss){
                    r.push_back(make_pair(r[j].ff , r[i].ff-1));
                    r.push_back(make_pair(r[i].ff , r[j].ss));
                    r.push_back(make_pair(r[j].ss+1 , r[i].ss));
                    r.erase(r.begin()+i);
                    r.erase(r.begin()+j);
                    i-= 2;
                }else if(r[j].ff >= r[i].ff && r[j].ff <= r[i].ss && r[j].ss >= r[i].ss){
                    r.push_back(make_pair(r[i].ff , r[j].ff-1));
                    r.push_back(make_pair(r[j].ff , r[i].ss));
                    r.push_back(make_pair(r[i].ss+1 , r[j].ss));
                    r.erase(r.begin()+i);
                    r.erase(r.begin()+j);
                    i-= 2;
                }
            }
        }
        
        sort(r.begin(),r.end(),cmp);
        
        for(int i = 0;i < r.size();i++){
            int count = 0;
            for(int j = r[i].ff;j <= r[i].ss;j++){
                if(ans[j] == '\0'){
                    count++;
                }
            }
            for(int j = r[i].ff ,chk = 0;j <= r[i].ss;++j){
                if(ans[j] == '\0' && chk<count/2){
                    ans[j] = '(';
                    chk++;
                }else if(ans[j] == '\0' && chk >=count/2){
                    ans[j] =')';
                    chk++;
                }
            }
        }
        
        	for(int i = 0;i<n;i++){
			    if(ans[i] == '\0')
				    ans[i] = '(';
        	}
		puts(ans);
        
    }
    
    return 0;
}