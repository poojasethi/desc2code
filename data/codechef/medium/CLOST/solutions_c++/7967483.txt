#include <bits/stdc++.h>

using namespace std;

int n, k, c_e;
string str;
int dp[2010][2010];

int solve1(int i, int j)
{
	if(j<0)
		return 0;
	if(i==c_e){
		if(j==0)
			return 1;
		else
			return 0;
	}
	if(dp[i][j]!=-1)
		return dp[i][j];
	int ret = 0;
	if(str[i]=='#'){
		ret|=solve1(i+1, j+1);
		ret|=solve1(i+1, j-1);
	}
	else{
		if(str[i]=='(')
			ret = solve1(i+1, j+1);
		else
			ret = solve1(i+1, j-1);
	}
	return dp[i][j] = ret;
}

void solve2(int i, int j)
{
	if(i==c_e)
		return;
	if(str[i]=='#'){
		if(solve1(i+1, j+1)){
			solve2(i+1, j+1);
			str[i] = '(';
		}
		else{
			solve2(i+1, j-1);
			str[i] = ')';
		}
	}
	else{
		if(str[i]=='(')
			solve2(i+1, j+1);
		else
			solve2(i+1, j-1);
	}
}

set<pair<int, int> > mset;
set<pair<int, int> > :: iterator it1, it2;
vector<pair<int, int> > v; 

int comp(pair<int, int> p1, pair<int, int> p2)
{
	return ((p1.second-p1.first+1)<(p2.second-p2.first+1));
}

int main()
{
	int t, i, j, l, r, flag, cnt, cur;
	pair<int, int> f1, f2, f3;
	scanf("%d", &t);
	while(t--){
		scanf("%d%d", &n, &k);
		str.resize(n);
		mset.clear();
		memset(dp, -1, sizeof(dp));
		v.clear();
		for(i=0; i<n; i++)
			str[i] = '#';
		for(i=0; i<k; i++){
			scanf("%d%d", &l, &r);
			v.push_back(make_pair(l, r));
		}
		/*cout << "\n1\n\n";
		for(i=0; i<v.size(); i++)
			cout << v[i].first << " " << v[i].second << "\n";*/
		for(i=0; i<v.size(); i++){
			for(j=0; j<i; j++){
				if(v[j].first>=v[i].first && v[i].second>=v[j].first && v[j].second>=v[i].second){
					v.push_back(make_pair(v[i].first, v[j].first-1));
					v.push_back(make_pair(v[j].first, v[i].second));
					v.push_back(make_pair(v[i].second+1, v[j].second));
					v.erase(v.begin()+i), v.erase(v.begin()+j);
					i-=2;	
				}
				else if(v[i].first>=v[j].first && v[j].second>=v[i].first && v[i].second>=v[j].second){
					v.push_back(make_pair(v[j].first, v[i].first-1));
					v.push_back(make_pair(v[i].first, v[j].second));
					v.push_back(make_pair(v[j].second+1, v[i].second));
					v.erase(v.begin()+i), v.erase(v.begin()+j);
					i-=2;	
				}
			}
		}
		/*cout << "\n2\n\n";
		for(i=0; i<v.size(); i++)
			cout << v[i].first << " " << v[i].second << "\n";*/
		sort(v.begin(), v.end(), comp);
		/*for(i=0; i<v.size(); i++){
			if(v[i].first>=v[i].second)
				v.erase(v.begin()+i), i--;
		}
		cout << "\n3\n\n";
		for(i=0; i<v.size(); i++)
			cout << v[i].first << " " << v[i].second << "\n";
		cout << "\n\n";
		cout << str << "\n\n";*/
		/*for(i=0; i<v.size(); i++){
			if(v[i].first>=v[i].second)
				continue;
			cnt = cur = 0;
			//cout << v[i].first << " " << v[i].second << "\n";
			for(j=v[i].first; j<=v[i].second; j++){
				if(str[j]=='#')
					cnt++;
			}
			for(j=v[i].first; j<=v[i].second; j++){
				if(str[j]=='#' && cur<(cnt/2))
					str[j] = '(', cur++;
				else if(str[j]=='#' && cur>=(cnt/2))
					str[j] = ')';
			}
			//cout << str << "\n";
		}*/
		for(i=0; i<v.size(); i++){
			if(v[i].first>=v[i].second)
				continue;
			l = v[i].first, r = v[i].second;
			c_e = r+1;
			str[l] = '(', str[r] = ')';
			solve2(l, 0);
			//cout << str << "\n";
		}
		for(i=0; i<n; i++){
			if(str[i]=='#')
				str[i] = '(';
		}
		cout << str << "\n";
	}
	return 0;
}