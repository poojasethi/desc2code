#include<bits/stdc++.h>
using namespace std;

bool cmp(pair<int, int> a, pair<int, int> b){
	return (a.second - a.first < b.second - b.first);
}
char ans[3000];
int main(){
	int t;
	scanf("%d", &t);
	while(t--){
		int N, K;
		scanf("%d%d", &N, &K);
		set<pair<int, int> > ss;
		for(int i = 1;i <= K;++i){
			int x, y;
			scanf("%d%d", &x, &y);
			ss.insert(make_pair(x, y));
		}
		while(true){
			pair<int, int> a;
			pair<int, int> b;
			pair<int, int> c;
			bool found = false;
			for(set<pair<int, int> >:: iterator it1 = ss.begin();it1 != ss.end() && (!found);++it1){
				set<pair<int ,int> > :: iterator it2 = ss.upper_bound(make_pair(it1->first + 1, -1));
				for(;it2 != ss.end();++it2){
					if(it2 -> first >= it1 -> second){
						break;
					}
					if(it2 -> second > it1 -> second){
						a = make_pair(it1 -> first, it2 -> first - 1);
						b = make_pair(it2 -> first, it1 -> second);
						c = make_pair(it1 -> second + 1, it2 -> second);
						found = true;
						ss.erase(it1);
						ss.erase(it2);
						break;
					}
				}
			}
			if(!found) break;
			ss.insert(a);
			ss.insert(b);
			ss.insert(c);
		}
		vector<pair<int, int> > B;
		for(set<pair<int, int> >:: iterator it = ss.begin();it != ss.end();++it){
			B.push_back(*it);
		}
		sort(B.begin(), B.end(), cmp);
		int M = B.size();
		for(int i = 0;i < N;++i) ans[i] = '-';
		ans[N] = '\0';
		for(int i = 0;i < M;++i){
			int x = B[i].first;
			int y = B[i].second;
			int cnt = 0;
			for(int j = x;j <= y;++j){
				if(ans[j] == '-') ++cnt;
			}
			int cur = 0;
			for(int j = x;j <= y;++j){
				if(ans[j] == '-'){
					if(cur < cnt/2)
						ans[j] = '(';
					else ans[j] = ')';
					++cur;
				}
			}
		}
		for(int i = 0;i < N;++i){
			if(ans[i] == '-'){
				ans[i] = ')';
			}
		}
		printf("%s\n", ans);
	}
	return 0;
}