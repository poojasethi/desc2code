#include <cstdio>
#include <numeric>
#include <algorithm>
#include <vector>

using namespace std;

char fxor(char& a, char& b) {
   return a ^ b;
}

char mex(vector<char>& nexts) {
   for(int i = 0; ; i++) {
      if(find(nexts.begin(), nexts.end(), i) == nexts.end())
         return i;
   }
}

char board[1000][1000];

char solve(int i, int j) {
    if(board[i][j] != -1) return board[i][j];
    else {
        vector<char> nexts;
        nexts.reserve(6);
        if((i-1) >= 0)
           nexts.push_back(solve(i-1,j));
        if((i-2) >= 0)
           nexts.push_back(solve(i-2,j));
        if((j-1) >= 0)
           nexts.push_back(solve(i,j-1));
        if((j-2) >= 0)
           nexts.push_back(solve(i,j-2));
        if(((i-1) >= 0) && ((j-1) >= 0))
           nexts.push_back(solve(i-1,j-1));
        if(((i-2) >= 0) && ((j-2) >= 0))
           nexts.push_back(solve(i-2,j-2));
        board[i][j] = mex(nexts);
        return board[i][j];
    }
}

int main() {
   fill(&board[0][0], &board[1000][0], -1);
   board[0][0] = 0;
   solve(999,999);
   int T;
   scanf("%d", &T);
   while(T--) {
      int C;
      scanf("%d", &C);
      char p[C];
      for(int i = 0; i < C; ++i) {
         int ni, mi;
         scanf("%d%d", &ni, &mi);
         p[i] = solve(ni-1,mi-1);
      }
      char ans = accumulate(&p[0], &p[C], (char)0, fxor);
      if(ans != 0)
         printf("MasterChef\n");
      else
         printf("Football\n");
   }
}
