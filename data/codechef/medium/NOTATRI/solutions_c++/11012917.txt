#include<iostream>
#include<math.h>
using namespace std;
void swap ( int* a, int* b )
{
    int t = *a;
    *a = *b;
    *b = t;
}
int partition (int arr[], int l, int h)
{
    int x = arr[h];
    int i = (l - 1);
 
    for (int j = l; j <= h- 1; j++)
    {
        if (arr[j] <= x)
        {
            i++;
            swap (&arr[i], &arr[j]);
        }
    }
    swap (&arr[i + 1], &arr[h]);
    return (i + 1);
}
void quickSort(int A[], int l, int h)
{
    if (l < h)
    {        
        /* Partitioning index */
        int p = partition(A, l, h); 
        quickSort(A, l, p - 1);  
        quickSort(A, p + 1, h);
    }
}
int main()
{
	int n; cin>>n;
	while(n)
	{
		int arr[n]; int c=0;
		for(int i=0;i<n;i++) cin>>arr[i];
		quickSort(arr,0,n-1);
	    for(int i=n-1;i>=2;i--)
		{
            int j=i-1,k=0;
            while(k<j)
			{
                if(arr[i]>arr[j]+arr[k])
				{
                    c+=j-k;
                    k++;
                }  
                else j--;  
            }
        }
		cout<<c<<endl;
		cin>>n;
	}
	return 0;
}
