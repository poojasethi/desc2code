#include<stdio.h>
#include<iostream>
#include<stdlib.h>
#include<string.h>
#include<vector>
#include<stack>
#include<queue>
#include<climits>
#include<algorithm>
#include<set>
#include<math.h>
#include<map>

#define FOR(i ,  n) \
	for(i = 0; i < n; i++)
#define FORI(i ,startForIndex , endForIndex) \
	for(i = startForIndex ;i < endForIndex; i++)
#define FORD(i ,startForIndex , endForIndex) \
	for(i = startForIndex - 1;i >= endForIndex; i--)
#define tr( container , it) \
	for( typeof(container.begin()) it = container.begin() ; it != container.end() ; it++ ) 
#define print1(ar) \
	for( typeof(ar.begin()) it = ar.begin() ; it != ar.end(); it++){\
		cout << * it << " " ;\
	}printf("\n") ;
#define print2(ar)\
	for( typeof(ar.begin()) it = ar.begin() ; it != ar.end(); it++){\
		for(typeof(it->begin()) itt = it->begin() ; itt !=  it->end() ; itt++ ){\
			cout << * itt << " " ;\
		}printf("\n") ;\
	}printf("\n");
#define ALL(ar)\
	ar.begin() , ar.end()
#define PB push_back
#define LL long long int 
#define VI	vector < int > 
#define VVI 	vector < VI >  
#define VVVI 	vector < VVI > 
#define VS	vector < string >
#define VL	vector < LL > 
#define VVL 	vector < VL >
#define V(i) 	vector < i >
#define VV(i) 	vector < vector < node > > 
#define p(var)	cout << #var << " = " << var << endl ;

using namespace std ;
VL ar ( 11 ) ;
LL siz( LL num ){
	LL a =  0 ;
	while(num !=0) {
		num /= 10 ;a++; 
	}return a ;
}

LL go1( LL num)  {
	LL l = siz(num) , sum = 0 , tmp, i, count , j , a, b;
	if (l == 1) {
		return num ;
	}
	tmp = num ; 
	VL dig ( l) , ck( 10 ,0 );
	FORD(i , l , 0){
		dig[i] = (tmp % 10 );
		tmp /= 10 ;
	}
	FOR( i , l ) {
		count =0  ;
		if ( i == 0) {
			a = 1 ;b = dig[i] ; 
		}
		else if( i == l - 1 ) {
			a = 0 ; b  = dig[i] + 1 ;
		}
		else {
			a = 0 ; b = dig[i] ; 
		}
		FORI( j ,a ,  b){
			if ( ck[j] == 0 ) {
				count++ ;
			}
		}
		tmp = 1; 
		FORI( j , i + 1 , l ) {
			tmp *= ( 10 - j ) ; 
		}
//		p(tmp )  ; p (count)  ; 
		sum += tmp * count ;
		if ( ck[dig[i]] == 1) {
			break ;
		}
		ck[dig[i]] = 1 ;
	}
	return sum ;


}

LL ckd( LL num) {
	VL dig (10, 0) ;
	LL tmp ;
	while( num != 0 ) {
		tmp = num % 10 ;
		if ( dig[tmp] == 1 ) {
			return 0 ;
		}
		dig[tmp] = 1;
		num  /= 10 ;
	}
	return 1 ;
}




int main(){
	LL i , t , j , tmp, n, m , k , count , flag, a, b, l1, l2, maxi = 9999999999ULL, sum;
	ar[1] = 9 ;
	FORI(i , 2, 11) {
		ar[i] = ar[i-1] * (11 - i) ;
	}
	cin >> t ;
	while(t--) {
		sum = 0 ;
		scanf("%lld%lld", &a , &b) ;
		if ( a > b) {swap( a, b ); } 
		if ( a > maxi ) {
			printf("0\n") ;
			continue ;
		}
		else if ( b > maxi ) {
			b = maxi ; 
		}

		l1= siz(a) ; l2 = siz(b) ;
		sum = 0 ; 
		FORI( i , l1, l2 ) {
			sum += ar[i] ;
		}
		tmp =  go1(a ) ;
		if ( ckd(a) ) {
			tmp-- ;
		}
		sum -= tmp ;
		tmp = go1( b) ;
		sum += tmp ;
		printf("%lld\n" ,sum ) ;
	}
}
