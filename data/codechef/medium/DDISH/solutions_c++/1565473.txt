#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>

using namespace std;

int D[11];
long long F[11], dp[11];

int count(long long n)
{
  int len = 0, i, d, ans = 0;
  if (n > 9876543210ll) return dp[10];

  i = len = int(log10(n)) + 1;
  while (n) {
    D[--i] = n%10;
    n /= 10;
  }
  
  ans = dp[len-1];

  int mark = 0;
  int used = 0;
  for (i = 0; i < len; i++) {
    for (d = (i ? 0 : 1); d < D[i]; d++) {
      if (mark & (1 << d)) continue;


      
      int temp = 1;
      int j = i + 1;
      for (int k = 10 - i - 1; j < len; j++, k--)
        temp *= k;

      ans += temp;
    }

    if (mark & (1 << D[i])) break;

    mark = mark | (1 << D[i]);
    used++;
  }

  return ans;
}


int main(int argc, char **argv)
{
  int t, i;
  long long L, R, ans;

  F[0] = 1;
  dp[0] = 0;
  for (i = 1; i < 11; i++)
    F[i] = i * F[i-1];

  for (i = 1; i < 11; i++)
    dp[i] = 9 * F[9]/F[10-i] + dp[i-1];


  scanf("%d", &t);

  while (t--) {
    scanf("%lld %lld", &L, &R);
    
    ans = 0;

    if (L < 9876543210ll) {
      long long l = count(L);
      long long r = count(R + 1);
      ans = r - l;
    }

    cout << ans << endl;
  }

  return 0;
}

