#include <cstring>
#include<stdio.h>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define pb push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define mod 1000000007
#define MAXN 1000010
#define ll long long
#define get getchar_unlocked
inline ll inp()
{
    ll n=0,s=1;
    char p=get();
    if(p=='-')
    s=-1;
    while((p<'0'||p>'9')&&p!=EOF)
    p=get();
    while(p>='0'&&p<='9')
    {
    n = (n<< 3) + (n<< 1) + (p - '0');
    p=get();
    };
    return n*s;
}
ll dp[11],fact[11];
void preprocess()
{
    int i;
    fact[0]=1;
    for(i=1;i<11;i++)
    fact[i]=(i*fact[i-1]);
    dp[0]=0;
    for(i=1;i<11;i++)
    dp[i]=dp[i-1]+(9*fact[9])/fact[10-i];
}
ll sol(ll n)
{
    if(n>9876543210LL)return dp[10];
    ll i,j=0,a[11],used[11]={0},k,ans;
    while(n)
    {
        a[j++]=n%10;
        n/=10;
    }
    ans=dp[j-1];
    for(i=j-1;i>=0;i--)
    {
        for(k=(i==j-1?1:0);k<a[i];k++)
        if(!used[k])
        ans+=fact[9-(j-1-i)]/fact[10-j];
        if(used[k])break;
        used[a[i]]=1;
    }
    return ans;
}
int main()
{
    ll i,n,j,k,l,t,r;
    t=inp();
    preprocess();
    while(t--)
    {
        l=inp();r=inp();
        printf("%lld\n",sol(r+1)-sol(l));
    }
    return 0;
}
