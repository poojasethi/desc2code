#include<stdio.h>
#include<iostream>
#include<cstring>
#include<algorithm>
#define mod 10000007
#define limit 9876543210
#include<math.h>
using namespace std;
long long int solver(long long int x);
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
	    long long int l,r;
	   long long int limit1=pow(10,10);
		scanf("%lld %lld",&l,&r);
		//cout<<limit1;
		if(l>=limit1)
		{
		    printf("0\n");
		    continue;
		}
        if(r>limit1)
        r=limit1;
        long long int res1=solver((long long int)r);
        long long int res2=solver((long long int)(l-1));
        //cout<<"resr="<<res1<<"\n";
        //cout<<"resl="<<res2;
        res1=res1-res2;
        printf("%ld\n",res1);
	}
}
long long int solver(long long int x)
{
     if(x<10)
        return x;
       long long int n1=0,arr[11];
       int flag=0;
        long long int temp1=x;
        //cout<<"$$$$"<<x<<"\n";
       while(temp1>0)
       {
           arr[n1++]=temp1%10;
           temp1=temp1/10;
       }
        long long int ans=0,p,temp;
        for(int i=1;i<n1;i++)
        {
            p=9;
            temp=9;
            for(int j=1;j<i;j++,p--)
            {
                temp*=p;
            }
               ans=ans+temp;
        }
       bool visit[10]={false};
        fill_n(visit,sizeof(visit),false);
       for(int pos=n1;pos>=1;pos--)
       {
           int c=0;
           for(int k=(pos==n1?1:0);k<=(pos==1?arr[pos-1]:arr[pos-1]-1);k++)
           {
                if(visit[k]==false)
                {
                    c++;
                }
            }
           p=c;

           for(int i=pos-1;i>=1;i--)
           {
               p*=(10-(n1-i));
           }
           ans=ans+p;
          if(visit[arr[pos-1]]==true)
          {
              flag=1;
              break;
          }
           visit[arr[pos-1]]=true;
       }
       if(flag==1)
           return ans;
       return ans;
}
