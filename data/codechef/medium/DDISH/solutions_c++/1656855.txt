#include <cstdio>
#include <algorithm>
#include <queue>

long long  delicious[9000000];
int cnt;

int main()
{
    std::queue<long long> gen;
    std::queue<int> used;
    for(int i=1; i<10; i++) {
        gen.push(i);
        used.push(1<<i);
    }

    while(!gen.empty()) {
        long long num = gen.front(); gen.pop();
        int vis = used.front(); used.pop();
        delicious[cnt++] = num;
      //  printf("%lld ", num);

        for(int i=0; i<10; i++) if( (vis&(1<<i)) == 0 ){
            gen.push(num*10 + i);
            used.push(vis|(1<<i));
        }
    }

    int t;
    scanf("%d", &t);
    while(t--) {
        long long L, R;
        scanf("%lld %lld", &L, &R);
        int ans = std::upper_bound(delicious, delicious+cnt, R) - delicious;
        ans -= std::upper_bound(delicious, delicious+cnt, L-1) - delicious;
        printf("%d\n", ans);
    }
}
