#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <queue>

using namespace std;

vector<long long int> dnumbers;
queue<long long int> delicious,used;


void gen_dishes()
{
    long long int d,u,u_invert;

    for(int i=1;i<=9;i++)
    {
        delicious.push(i);
        used.push(1<<i);
    }

    do
    {
        d=delicious.front();
        u=used.front();
        delicious.pop();
        used.pop();
        dnumbers.push_back(d);
        u_invert=~u;

        for(int i=0;i<=9;i++)
        {
            if(u_invert&(1<<i))
            {
                delicious.push(d*10+i);
                used.push(u|(1<<i));
            }
        }
    }while(!delicious.empty());

}

int main()
{
    int t;
    long long int L,R;

    scanf("%d",&t);

    gen_dishes();

    while(t--)
    {
        scanf("%lld%lld",&L,&R);
        printf("%d\n",int(upper_bound(dnumbers.begin(),dnumbers.end(),R)-dnumbers.begin())-int(upper_bound(dnumbers.begin(),dnumbers.end(),L-1)-dnumbers.begin()));
    }

    return 0;
}
