/**
 	My standard template
 	Name: Shivam Mishra
 	handle: shivam217

 **/
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <assert.h>
#include <cstring>
#include <string>
#include <string.h>
#include <queue>
#include <iomanip>
#include <stack>
#include <vector>
#include <map>
#include <time.h>
#include <climits>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;++i)
#define FORR(i,a,b) for(int i=a;i>=b;--i)
#define FORC(it,container) for(typeof(container.begin()) it=container.begin();it!=container.end();++it)
#define INT(x) scanf("%d",&x)
#define LLD(x) scanf("%lld",&x)
#define STR(x) scanf("%s",x)
#define CHAR(x) scanf("%c",&x)
#define PINT(x) printf("%d\n",x)
#define PLLD(x) printf("%lld\n",x)
#define CLR(x) memset(x,0,sizeof(x));
#define F first
#define S second
#define PB push_back


const int INF = INT_MAX;
const int MAX = 1000001;
const int MOD = 1e9 + 7;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef map<int,int> MII;
typedef vector<pair<int,int> > VPII;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef vector<VLL> VVL;
typedef set<int> SI;
typedef set<char> SC;

LL power(LL b,LL e)
{
	if(b==0 && e==0) return 1;
	if(b==0 && e>1)  return 0;	
	if(b>0 && e==0) return 1;
	LL r=1;
	while(e)
	{
		if(e&1) { r = r*b;  r %= MOD; }
		e >>= 1; b = b*b; b %= MOD;
		
	}
return r;
}

LL gcd(LL a, LL b) {  if(b==0) return a;  else return gcd(b,a%b);  }

int a[MAX+5];

int main()
{

int test = 1;
INT(test);  //remove this line

while(test--)
{
	int n ; INT(n);

	FOR(i,0,n)
		INT(a[i]);


	bool flag=true;


	if(n==1) {
		if(a[0]==1) {
			printf("Yes\n"); 
			continue;
		}
		else {
			printf("No\n");
			continue;	
		}
	}
	else if(n>1) {
		if(a[0]>=1){
			printf("No\n");
			continue;

		}
	}


	int node = 1;
	int maxl = 2;

	FOR(i,1,n) {
	
		int cl = a[i];

		if(cl>maxl) {
			flag=false;
			break;
		}
		
		if(cl==maxl && i!=n-1) {
			flag=false;
			break;
		}

		

		int rl = maxl-cl;

		maxl = 2*rl;


		if(i==n-1 && maxl!=0) {
			flag=false;
			break;
		}

	}


	if(flag)
		printf("Yes\n");
	else
		printf("No\n");
	


}

//remove testcase line

return 0;
}

