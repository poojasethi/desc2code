#include<stdio.h>
#include<stdlib.h>


using namespace std;

typedef struct chef
{
int age;
int m;
int e;
int rep;
}chef;

typedef struct report
{
int a;
int b;
char time;
}report;

int get(int n,chef s[])
{
int i;

int age[n];

for(i=0;i<n;i++)
scanf("%d",&age[i]);

report r[n-1];

for(i=1;i<n;i++)
scanf("%d %d %c",&r[i-1].a,&r[i-1].b,&r[i-1].time);

for(i=0;i<n;i++)
{
s[i].age = age[i];
s[i].e = -1;
s[i].m = -1;
s[i].rep = -1;
}

for(i=0;i<n-1;i++)
{
                  
if(r[i].time=='M')
                  {
                  s[r[i].a-1].m = r[i].b-1;
                  }
else
                  {
                  s[r[i].a-1].e = r[i].b-1;
                  }
                  
                  s[r[i].b-1].rep = r[i].a-1;
}

for(i=0;i<n;i++)
                {
                if(s[i].rep==-1)
                                {
                                return i;
                                }
                }
                return -1;

}



int ise(chef hc[],chef qc[],int index,int qh)
{
chef h = hc[index];
chef q = qc[qh];

if(h.age!=q.age)
                return 0;
                
int l;
if(h.m==-1 && q.m==-1)
           l = 1;
else
           l = ise(hc,qc,h.m,q.m);
           
int r;
if(h.e==-1 && q.e==-1)
           r = 1;
else
           r = ise(hc,qc,h.e,q.e);

return l*r;

}



int check(chef hc[],chef qc[],int n,int qh)
{
int i;
for(i=0;i<n;i++)
                {
                if(ise(hc,qc,i,qh)==1)
                                      return 1;
                }
                return 0;
}

int main()
{
int n, i, j, q;
	scanf("%d", &n);
	
	chef headchef[n];
	get(n, headchef);
	
	scanf("%d", &q);
	for(i=0; i<q; i++)
	{
		int qn, qhead;
		scanf("%d", &qn);
		
		chef qchef[qn];
		qhead=get(qn, qchef);
		
		int result=check(headchef, qchef, n, qhead);
		if(result==0)
			printf("NO\n");
		else
			printf("YES\n");
	}
	
	
	return 0;
}











