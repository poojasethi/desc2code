import sys
import math

M = 1000000007

rs = {}

def fn(An, En, V):
    global rs, M

    try:
        return rs[An][En][V]
    except:
        if V < 0:
            return 0
        if rs.has_key(An):
            if not rs[An].has_key(En):
                rs[An][En] = {}
        else:
            rs[An] = {}
            rs[An][En] = {}

        rs[An][En][V] = None
        if V < An:
            rs[An][En][V] = 0
        else :
            if An == 0:
                    rs[An][En][V] = 1
            else:                
                if An == 1 and En == 0:
                    if V == 0:
                        rs[An][En][V] = 0
                    else:
                        rs[An][En][V] = 1

        if rs[An][En][V] == None:
            vRemain = V - An
            s = (An + En) / 2
            cnt = 0
            for an1 in range(max(0, s - En), min(An, s)+1):
                cnt += fn(an1, s - an1, vRemain) * fn(An - an1, En - s + an1, vRemain)
            rs[An][En][V] = cnt % M
        return rs[An][En][V]
    
def main():        
    testCases = int(sys.stdin.readline())
    cases = []
    for n in range(0, testCases):
        An, En, V = sys.stdin.readline().split(' ')
        print "%s" % ((fn(int(An), int(En), int(V)) - fn(int(An), int(En), int(V)-1) + M ) % M)
 
if __name__ == '__main__':
    main()
