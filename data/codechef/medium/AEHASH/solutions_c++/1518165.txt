/*
 * AeHash.cpp
 *
 *  Created on: Nov 3, 2012
 *      Author: saha
 */

#include <iostream>
#include <cstring>
#include <cstdio>

#define max(a,b) ((a>b)?a:b)
#define min(a,b) ((a<b)?a:b)

#define MOD 1000000007

typedef long long my_long;

int Memo[60][60][1001];

int DP(int A, int E, int V)
{
	if(A<0 || E<0 || V<0)
		return 0;

	if(Memo[A][E][V] != -1)
		return Memo[A][E][V];

	int N = A+E;
	if(N<=1)
	{
		Memo[A][E][V] = (A<=V);
		return Memo[A][E][V];
	}

	if(V<A)
	{
		Memo[A][E][V] = 0;
		return 0;
	}


	Memo[A][E][V] = 0;
	int split = N/2;
	int rest  = N-split;

	int al = (A<split)?A:split;

	for(int i=0 ; i<=al ; i++)
	{
		if((split-i)<=E)
		{
			int l = DP(i,   split-i, V-A);
			int r = DP(A-i, E-split+i, V-A);

			Memo[A][E][V] += ((my_long)l*r)%MOD;
			Memo[A][E][V] %= MOD;
		}
	}
	return Memo[A][E][V];
}


int main () {
    int T;
    int A,E,V;

    memset(Memo, -1, sizeof(Memo));

    scanf("%d", &T);
    while (T--) {
        scanf("%d %d %d", &A, &E, &V);

        my_long count =  (DP(A,E,V) - DP(A,E,V-1) + MOD)%MOD;
        printf("%lld\n",count);
    }
    return 0;
}
