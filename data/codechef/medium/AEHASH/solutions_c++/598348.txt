#include <fstream>
#include <iostream>
#include <stdio.h>
#include <vector>
#include <math.h>
#include <algorithm>
#include <stdlib.h>
#include <string>
#include <string.h>
using namespace std;


#define pb push_back

typedef pair<int, int> pii;

const int MAXV = 150, MAXA = 50, MAXLEN = 100;
const int MODULO = 1000000007;

int dp[MAXLEN+1][MAXA+1][MAXV+1], sums[MAXLEN+1][MAXA+1][MAXV+1];

void precalc()
{
	dp[0][0][0] = 1;
	for (int V = 0; V <= MAXV; V++) sums[0][0][V] = 1;
	dp[1][0][0] = 1; dp[1][1][1] = 1;
	for (int V = 0; V <= MAXV; V++)
	{
		sums[1][0][V] = 1;
		sums[1][1][V] = 1;
	}
	sums[1][1][0] = 0;
	for (int len = 2; len <= MAXLEN; len++)
	{
		for (int A = 0; A <= MAXA; A++)
		{
			if (A == 0) dp[len][A][0] = 1;
			for (int V = 0; V <= A; V++) sums[len][A][V] = dp[len][A][0];
			for (int V = A+1; V <= MAXV; V++)
			{
				int tmp = 0;
				int l1 = len/2, l2 = len/2 + 1;
				if (len%2==1)
				{
					for (int i = 0; i <= min(A,V-A); i++)
					tmp = (tmp+(long long)(dp[l1][i][V-A])*(dp[l2][A-i][V-A])+
					       (long long)(dp[l2][i][V-A])*(sums[l1][A-i][V-A-1])+
					       (long long)(dp[l1][i][V-A])*(sums[l2][A-i][V-A-1])) % MODULO;
				} else
				{
					for (int i = 0; i <= min(A,V-A); i++)
					tmp = (tmp+2*((long long)(dp[l1][i][V-A])*(sums[l1][A-i][V-A-1]))+
						   (long long)(dp[l1][i][V-A])*(dp[l1][A-i][V-A])) % MODULO;
				}
				dp[len][A][V] = tmp;
				sums[len][A][V] = (sums[len][A][V-1]+dp[len][A][V]) % MODULO;
			}
		}
	}
}

int main()
{
	precalc();
	int T; cin >> T;
	for (int tt = 0; tt < T; tt++)
	{
		int a, e, v; cin >> a >> e >> v;
		if (v > 152) cout << 0 << "\n"; else cout << dp[a+e][a][v] << "\n";
	}
}
