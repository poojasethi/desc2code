#include <iostream>
#include <cstdio>
#include <memory.h>

using namespace std;

const int MOD = 1000000007;

const int nn = 1024;
int C[nn][nn];
int f[64][64][nn];
int g[64][64][nn];

int F(int A, int E, int V);
int G(int A, int E, int V);

int F(int A, int E, int V) {
	//cerr << A << ' ' << E << ' ' << V << endl;
	if (V > (A+E)*3) return 0;
	if (V < A) return 0;
	if (A+E <= 1) return V == A;
	
	if (f[A][E][V] >= 0) return f[A][E][V];
	long long res = 0;
	
	int v = V - A;
	int L = A + E;
	int L1 = L / 2;
	int L2 = L - L1;
	
	for (int a = 0; a <= L1 && a <= A; a++) {
		int e = L1 - a;
		if (e < 0 || e > E) continue;
		long long k = 0;
		k += 1LL * G(a, e, v - 1) * F(A - a, E - e, v);
		k += 1LL * F(a, e, v) * G(A - a, E - e, v - 1);
		k += 1LL * F(a, e, v) * F(A - a, E - e, v);
		k %= MOD;
		res += k;
	}
	
	return f[A][E][V] = res % MOD;
}

int G(int A, int E, int V) {
	int& res = g[A][E][V];
	if (res == -1) {
		res = 0;
		for (int v = 0; v <= V; v++) {
			res += F(A, E, v);
			if (res >= MOD) res -= MOD;
		}
	}
	return res;
}

int main() {
	memset(f, -1, sizeof f);
	memset(g, -1, sizeof g);

	int t;
	cin >> t;
	
	while (t--) {
		int A, E, V;
		cin >> A >> E >> V;
		cout << F(A, E, V) << endl;
	}
	
	return 0;
}