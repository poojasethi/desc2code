#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<iostream>
#define MAXA 64
#define MAXE 64
#define MAXV 1002
#define MOD 1000000007

//partial sums

using namespace std;

int map[MAXA][MAXE][MAXV];

typedef long long ll;

int max(int a,int b)
{
    if(a>b) return a;
    return b;
}


int findsol(int a,int e,int v)
{
    if(v<0 || e<0) return 0;
    if(map[a][e][v]!=-1) return map[a][e][v];
    if(a==0) return map[a][e][v]=1;
    if(v<a) return map[a][e][v]=0;
    if((a+e)==1) return map[a][e][v]=!!v;

    int sum = a+e;
    int suml = sum>>1;
    int sumr = sum-suml;
    map[a][e][v]=0;

    for(int i=max(0,a-sumr);i<=a && i<=suml;i++)
    {
        //printf("a-%d e-%d v-%d i-%d\n",a,e,v,i);
        int p,p1;
        p=((long long)findsol(i,suml-i,v-a)*findsol(a-i,sumr-a+i,v-a))%MOD;
        p1 = ((ll)findsol(i,suml-i,v-a-1)*findsol(a-i,sumr-a+i,v-a-1))%MOD;
        map[a][e][v]+=(p-p1+MOD)%MOD;
        map[a][e][v]%=MOD;
    }
    map[a][e][v]+=findsol(a,e,v-1);
    map[a][e][v]=map[a][e][v]%MOD;
    return map[a][e][v];
}

int main()
{
    int a,e,v;

    int cases;
    memset(map,-1,sizeof(map));
    scanf("%d",&cases);

    while(cases--)
    {
        scanf("%d%d%d",&a,&e,&v);
        int ans=findsol(a,e,v);
        if(v!=0)
        {
            ans-=findsol(a,e,v-1);
        }
        ans+=MOD;
        ans=ans%MOD;
        printf("%d\n",ans);
    }

    return 0;
}
