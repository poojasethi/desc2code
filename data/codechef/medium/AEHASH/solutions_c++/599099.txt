#include <stdio.h>
#include <stdlib.h>

#include <iostream>
#include <cmath>
#include <algorithm>

typedef long long ll;

using namespace std;

#define MOD 1000000007

int memo[51][51][1001];

int calc(int A, int E, int V){
  if(memo[A][E][V] >= 0)
    return memo[A][E][V];
  int len = A + E;
  if(len <= 1)
    return (A <= V ? 1 : 0);
  ll ans = 0;
  if(V < A)
    return 0;
  int former = len / 2;
  int latter = len - former;
  int limit = min(A, former);
  for(int i = 0; i <= limit; i++)
    if(former - i <= E){
      ans += ((ll)calc(i, former - i, V - A) * calc(A - i, latter - A + i, V - A)) % MOD;
      ans %= MOD;
    }
  return memo[A][E][V] = (int)ans;
}

int main(){
  int T;
  scanf("%d", &T);
  for(int i = 0; i <= 50; i++)
    for(int j = 0; j <= 50; j++)
      for(int k = 0; k <= 1000; k++)
        memo[i][j][k] = -1;
  for(;T>0;T--){
    int A, E, V;
    scanf("%d%d%d", &A, &E, &V);
    printf("%d\n", (calc(A, E, V) - calc(A, E, V - 1) + MOD) % MOD);
  }

  return 0;
}
