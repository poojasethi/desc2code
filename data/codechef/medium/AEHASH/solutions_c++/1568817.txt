#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
 
using namespace std;
 
typedef long long ll;
 
#define MOD 1000000007
 
int memo[128][64][1024];
int fun(int n, int a, int v) {
    //cout << n << " " << a << " " << v << endl;
    if(memo[n][a][v] != -1) return memo[n][a][v];
    if(n < a) return memo[n][a][v] = 0;
    if(a == 0) return memo[n][a][v] = 1;
    if(v < a) return memo[n][a][v] = 0;
    if(n == 1) return memo[n][a][v] = !!v;
    int nl = (n>>1), nh = (n>>1) + (n&1);
    memo[n][a][v] = 0;
    for(int aa = max(0,a-nh); aa <= nl && aa <= a; aa++) {
        int p = ( (long long)fun(nl,aa,v-a)*fun(nh,a-aa,v-a) ) % MOD;
        int q = (v>a ? ( (long long)fun(nl,aa,v-a-1)*fun(nh,a-aa,v-a-1) ) % MOD : 0);
        memo[n][a][v] += (p-q+MOD) % MOD;
        memo[n][a][v] %= MOD;
    }
    memo[n][a][v] += fun(n,a,v-1);
    memo[n][a][v] %= MOD;
    return memo[n][a][v];
}
 
int main() {
    memset(memo,-1,sizeof(memo));
    int T;
    cin >> T;
    while(T--) {
        int A, E, V;
        cin >> A >> E >> V;
        cout << (fun(A+E,A,V) - (V ? fun(A+E,A,V-1) : 0) + MOD) % MOD << endl;
    }
    return 0;
}