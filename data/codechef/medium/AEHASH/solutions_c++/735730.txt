#include<iostream>
#include<stdio.h>
using namespace std;
const long long MOD = 1000000007;
long long d[51][51][1001],dd[51][51][1001];
int used[51][51][1001],dused[51][51][1001];
long long dfs(int a, int e, int v);
long long ddfs(int a, int e, int v);
int main()
{
	#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	#endif
	used[0][0][0] = 1;
	d[0][0][0] = 1;
	int t,a,e,v;
	scanf("%d",&t);
	for(int tt = 0; tt < t; tt++)
	{
		scanf("%d%d%d",&a,&e,&v);
		printf("%I64d\n",dfs(a,e,v));
	}
	return 0;
}
long long ddfs(int a, int e, int v)
{
	if (v < 0) return 0;
	if (dused[a][e][v]) return dd[a][e][v];
	dused[a][e][v] = 1;
	return dd[a][e][v] = (dfs(a,e,v) + ddfs(a,e,v - 1)) % MOD;
}
long long dfs(int a, int e, int v)
{
	if (used[a][e][v]) return d[a][e][v];
	used[a][e][v] = 1;
	int l = a + e;
	if (l == 1) return d[a][e][v] = (v == a) ? 1 : 0;
	if (a > v) return d[a][e][v] = 0;
	long long p = 0;
	for(int aa = max(0,l / 2 - e); aa <= min(a,l / 2); aa++)
	{
		int ee = l / 2 - aa;
		/*for(int vv = 0; vv < v - a; vv++)
		{
			long long first = dfs(aa,ee,v - a);
			if (first > 0) p = p + dfs(aa,ee,v - a) * dfs(a - aa,e - ee,vv);
			while(p >= MOD) p -= MOD;
			first = dfs(aa,ee,vv);
			if (first > 0) p = p + dfs(aa,ee,vv) * dfs(a - aa,e - ee,v - a);
			while(p >= MOD) p -= MOD;
		}*/
		p = (p + dfs(aa,ee,v - a) * ddfs(a - aa,e - ee,v - a - 1)) % MOD;
		p = (p + ddfs(aa,ee,v - a - 1) * dfs(a - aa,e - ee,v - a)) % MOD;
		long long first = dfs(aa,ee,v - a);
		if (first > 0) p = p + dfs(aa,ee,v - a) * dfs(a - aa,e - ee,v - a);
		while(p >= MOD) p -= MOD;
	}
	return d[a][e][v] = p;
}
