//
//  main.cpp
//  AEHASH
//
//  Created by Sokol Kostya's MacBook on 22.03.11.
//  Copyright (c) 2013 __MyCompanyName__. All rights reserved.
//

#include <iostream>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <algorithm>
#include <iomanip>
#include <queue>
#include <cstdlib>
#include <ctime>
#include <stack>
#include <fstream>

typedef unsigned long long ull;
#define mp make_pair
#define pb push_back

const long double eps = 1e-9;
const double pi = acos(-1.0);
const long long inf = 1e18;
const long long mod = 1000000007;

using namespace std;

int f[ 55 ][ 55 ][ 222 ];
int g[ 55 ][ 55 ][ 222 ];
long long cur;

void calc( int ii, int jj, int kk )
{
    g[ii][jj][kk] = f[ii][jj][kk];
    if ( kk == 0 ) return;
    (g[ii][jj][kk] += g[ii][jj][kk - 1]) %= mod;
}
int main (int argc, const char * argv[])
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int t; cin >> t;
    for ( int i = 0; i <= 50; i++ )
        for ( int j = 0; j <= 50; j++ )
            for ( int k = 0; k <= 150; k++ )
            {
                if ( k - i < 0 )
                {
                    calc( i, j, k );
                    continue;
                }
                if ( i == 0 && k != 0 )
                {
                    calc( i, j, k );
                    continue;
                }
                int len = i + j;
                if ( len == 0 )
                {
                    if ( k == 0 ) f[i][j][k] = 1;
                    calc(i, j, k);
                    continue;
                }
                if ( len == 1 )
                {
                    if ( i == 1 && k == 1 ) f[i][j][k] = 1;
                    if ( i == 0 && k == 0 ) f[i][j][k] = 1;
                    calc(i, j, k);
                    continue;
                }
                int len1 = len / 2;
                int kmax = k - i;
                int lim = min( i, len1 );
                for ( int i1 = 0; i1 <= lim; i1++ )
                {
                    int j1 = len1 - i1;
                    int i2 = i - i1;
                    int j2 = j - j1;
                    if ( j1 < 0 || j1 > j ) continue;
                    if ( i2 < 0 || i2 > i ) continue;
                    if ( j2 < 0 || j2 > j ) continue;
                    long long a = g[i1][j1][kmax];
                    long long b = f[i2][j2][kmax];
                    (cur = a * b ) %= mod;
                    (f[i][j][k] += cur) %= mod;
                    if ( f[i][j][k] >= mod ) f[i][j][k] -= mod;
                    if ( kmax > 0 )
                    {
                        a = g[i2][j2][kmax - 1];
                        b = f[i1][j1][kmax];
                        (cur = a * b ) %= mod;
                        (f[i][j][k] += cur) %= mod;
                    }
                }
                calc( i, j, k );

            }
    for ( int it = 0; it < t; it++ )
    {
        int a, e, v;
        scanf("%d%d%d", &a, &e, &v);
        printf("%d\n", f[a][e][v]);
    }
    return 0;
}