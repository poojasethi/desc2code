#include <bits/stdc++.h>
#define MAX_N 22
using namespace std;

#define ll long long
#define ull unsigned long long
#define ii pair<int,int>
#define iii pair<ii, int>

#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define ep emplace_back
#define sz(a) (int) a.size()
#define cl(a) a.clear()

#define vi vector<int>
#define vii vector<ii>

#define FOR(x,a,b) for (int x=a;x<=b;x++)
#define FOD(x,a,b) for (int x=a;x>=b;x--)
#define REP(x,a,b) for (int x=a;x<b;x++)
#define RED(x,a,b) for (int x=a;x>b;x--)

const int MAX = 1e5 + 10;
const int MAXN = 1e4 + 10;
const int MOD = 1e9 + 7;
const int inf = 1e9;
const double pi = acos(-1.0);
const double eps = 1e-6;

int dx[] = {0 , -1 , 0 , 1};
int dy[] = {1 , 0 , -1 , 0};

int dp[1 << MAX_N];
int fact[MAX_N];
int n , m , test , res;

int main()
{
	ios::sync_with_stdio(false);
    cin.tie(0);

    cin >> test;

    while (test--)
    {
        cin >> n >> m;

        fill(fact , fact + n + 1 , 0);
        fill(dp ,  dp + (1 << n) + 3 , n);
        res = n;

        REP(i , 0 , n) fact[i] |= (1 << i);

        while (m--)
        {
            int u , v;
            cin >> u >> v;

            u--; v--;

            fact[u] |= (1 << v);
            fact[v] |= (1 << u);
        }

        /*dp[0] = 0;

        //cout << dp[1] << endl;

        REP(mask , 1 , (1 << n))
            REP(i , 0 , n)
                if ((mask | fact[i]) == mask) dp[mask] = min(dp[mask] , dp[mask - fact[i]] + 1);

        cout << dp[(1 << n) - 1] << endl;*/

        REP(mask , 1 , 1 << n)
        {
            int tmp , cnt;

            tmp = cnt = 0;

            REP(i , 0 , n)
                if (mask & (1 << i))
                {
                    tmp |= fact[i];
                    cnt++;
                }

            if (tmp == (1 << n) - 1) res = min(res , cnt);
        }

        cout << res << endl;
    }

	return 0;
}
