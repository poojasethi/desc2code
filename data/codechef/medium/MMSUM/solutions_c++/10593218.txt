#include<bits/stdc++.h>
using namespace std;

long long memo[100010][3];
int N;
long long A[100010];

long long dp(int i, int used){
	if(i==N) return 0;
	if(memo[i][used]!=-1) return memo[i][used];
	long long ans = 0;
	if(used==0){
		ans = max(dp(i+1,0)+A[i], dp(i+1,1));
	}else{
		ans = max(dp(i+1,used)+A[i],0LL);
	}
	return memo[i][used] = ans;
}

int main(){
	int tc; cin>>tc;
	while(tc--){
		long long maxv = -9999999999LL;
		bool haspos = false;
		cin>>N;
		for(int i = 0; i<N; i++) {
			cin>>A[i];
			maxv = max(maxv,A[i]);
			if(A[i]>0) haspos = true;
		}
		if(haspos){
			memset(memo,-1,sizeof memo);
			for(int i = 0; i<N; i++){
				maxv = max(maxv, max(dp(i,0),dp(i,1)));
			}
		}
		cout<<maxv<<endl;
	}
}