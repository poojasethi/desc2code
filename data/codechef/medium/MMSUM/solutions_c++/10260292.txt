#include <bits/stdc++.h>
using namespace std;

int a[100010], n;
long long dp[100010][2][2], inf;

long long f( int pos, int has, int beg )
{
	if( pos == n )
		return beg ? 0 : inf;
	long long &ret = dp[pos][has][beg];
	if( ret != inf )
		return ret;
	if( beg )
		ret = 0;
	ret = max( ret, f( pos+1, has, 1 ) + a[pos] );
	if( !has )
		ret = max( ret, f( pos+1, beg, beg ) );
	return ret;
}

int main()
{
	inf = -1000000000LL * 1000000000LL;
	int t;
	scanf( "%d" , &t );
	while( t -- )
	{
		scanf( "%d", &n );
		for( int i = 0 ; i < n ; i ++ )
			scanf( "%d", a + i );
		for( int i = 0 ; i < n ; i ++ )
			for( int j = 0 ; j < 2 ; j ++ )
				for( int k = 0 ; k < 2 ; k ++ )
					dp[i][j][k] = inf;
		cout << f( 0, 0, 0 ) << endl;
		// dp[0][0] = dp[0][1] = a[0];
		// for( int i = 0 ; i < n ; i ++ )
		// {
			// dp[i][0] = max( 1ll * a[i] , dp[i-1][0] + a[i] );
			// dp[i][1] = max( 1ll * a[i], max( dp[i-1][1] + a[i], dp[i-1][0] ) );
		// }
		// cout << max( dp[n-1][0], dp[n-1][1] ) << endl;
	}
	return 0;
}
