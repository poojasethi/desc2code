#include<bits/stdc++.h>
using namespace std;

struct pos_info {
	long long int val, sum, till_sum, rev_till_sum;
}data[100005];

long long temp, temp_sum;

int main() {
	int t;
	cin >> t;

	while(t--) {
		int n, i ;

		cin >> n;
		long long temp_min = 1e9, res = -1, temp_max = -1e10, temp_max_sum = -1e10, prev_zero;	

		for(i = 1 ; i <= n ; i++) {
			cin >> data[i].val;
			temp_max = max(temp_max, data[i].val);
		}

		data[0].val = data[n+1].val = 0;
		data[0].till_sum = data[n+1].till_sum = 0;
		data[0].rev_till_sum = data[n+1].rev_till_sum = 0;
		
		temp_sum = 0;

		for(i = 0 ; i <= n + 1 ; i++) {
			if(temp_sum + data[i].val >= 0) {
				temp_sum += data[i].val;
				data[i].till_sum = temp_sum;
				res = max(res, data[i].till_sum );
			}else{
				temp_sum = 0;
				data[i].till_sum = data[i].rev_till_sum = 0;
			}
		}

		temp_sum = 0;

		for(i = n + 1 ; i >= 0 ; i--) {
			if(temp_sum + data[i].val >= 0) {
				temp_sum += data[i].val;
				data[i].rev_till_sum = temp_sum;
				res = max(res, data[i].rev_till_sum);
			}else{
				temp_sum = 0;
				data[i].till_sum = data[i].rev_till_sum = 0;
			}

		}

		for(i = 1 ; i <= n ; i++) {
			//printf("%lld %lld\n",data[i].till_sum, data[i].rev_till_sum);
			if(data[i].val < 0) {
				res = max(res, data[i-1].till_sum + data[i+1].rev_till_sum);
			}
		}
		
		if(temp_max < 0)	
			res = temp_max;

		printf("%lld\n",res);		
	}
	return 0;
}