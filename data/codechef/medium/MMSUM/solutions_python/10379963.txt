def find_sum_forward(a,start):
	n=len(start)
	start[n-1]=a[n-1]
	for t in xrange(n-2,-1,-1):
		start[t]=max(a[t]+start[t+1],a[t])	
	return		

def find_sum_backward(a,end):
	n=len(end)
	end[0]=a[0]
	for t in xrange(1,n):
		end[t]=max(a[t]+end[t-1],a[t])
	return

def get_max_sum(a,start,end):
	temp_sum,max_sum=0,0
	max_start,max_end=-1,-1
	temp_start,temp_end=-1,-1
	for i in xrange(start,end+1):
		if temp_start==-1 and a[i]>=0:
			temp_start,temp_end=i,i
		temp_sum+=a[i]
		temp_end=i
		if temp_sum>max_sum:
			max_sum=temp_sum
			max_start,max_end=temp_start,temp_end
		if temp_sum<0:
			temp_sum=0
			temp_start=i+1
			temp_end=i+1	
	return max_sum

t=input()
while(t>0):
	n=input()
	a=[int(x) for x in raw_input().strip().split()]
	n_flag=True
	for i in a:
		if i>0:
			n_flag=False
			break
	result=-1000000002
	temp=-1000000002
	start=[0 for x in xrange(n)]
	end=[0 for x in xrange(n)]
	find_sum_forward(a,start)
	find_sum_backward(a,end)	
	for i in xrange(n):
		if i==0 and a[i]<0:
			temp=start[i+1]
		if i==n-1 and a[i]<0:
			temp=end[i-1]
		if i>0 and i<n-1 and a[i]<0:
			temp=max(end[i-1],start[i+1],end[i-1]+start[i+1])
		if temp>result:
			result=temp	
	# print start
	# print end		
	if n_flag==False:
		#print get_max_sum(a,0,n-1)
		result=max(result,get_max_sum(a,0,n-1))
	print result
	t-=1				
