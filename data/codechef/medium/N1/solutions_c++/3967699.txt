#define DEBUG 0
#include <cstdio>
#include <string.h>
#include <ctype.h>
#include <queue>

using namespace std;
 
typedef struct 
{
    int y, x, mn, tf;
} mz;
 
queue<mz> q;
char g[13][14];
bool v[13][13][8192];
int n, nt;
 
void bfs(void) 
{
    mz m;
    int x, y, tf;
    
    while(!q.empty()) 
    {
        m = q.front();
        q.pop();
        x = m.x;
        y = m.y;
        tf = m.tf;
        if(DEBUG)
            printf("mn=%d x=%d y=%d tf=%x\n", m.mn, x, y, tf);
        if(x==n-1 && y==n-1)
        {
            if(tf == (1<<nt)-1) 
            {
                printf("%d\n", m.mn);
                return;
            }  
            else
                continue;
        }
       
        m.mn++;
        if(x>0 && g[y][x-1]!='#' && !v[y][x-1][tf]) 
        {
            m.x = x-1;
            m.y = y;
            if(isalpha(g[y][x-1]))
                m.tf = tf|(1<<(g[y][x-1]-'a'));
            else
                m.tf = tf;
            
            v[y][x-1][m.tf] = true;
            q.push(m);
        }
    
        if(x<n-1 && g[y][x+1]!='#' && !v[y][x+1][tf]) 
        {
            m.x = x+1;
            m.y = y;
            if(isalpha(g[y][x+1]))
                m.tf = tf|(1<<(g[y][x+1]-'a'));
            else
                m.tf = tf;
        
            v[y][x+1][m.tf] = true;
            q.push(m);
        }
    
        if(y>0 && g[y-1][x]!='#' && !v[y-1][x][tf]) 
        {
            m.x = x;
            m.y = y-1;
            if(isalpha(g[y-1][x]))
                m.tf = tf|(1<<(g[y-1][x]-'a'));
            else
                m.tf = tf;
        
            v[y-1][x][m.tf]=true;
            q.push(m);
        }
    
        if(y<n-1 && g[y+1][x]!='#' && !v[y+1][x][tf]) 
        {
            m.x = x;
            m.y = y+1;
            if(isalpha(g[y+1][x]))
                m.tf = tf|(1<<(g[y+1][x]-'a'));
            else
                m.tf = tf;
        
            v[y+1][x][m.tf] = true;
            q.push(m);
        }
    } 
    printf("-1\n");
}
 
int main(void) 
{
    int tc, x, y;
    scanf("%d", &tc);
    mz m;
    while(tc--) 
    {
        scanf("%d", &n);
        for (y = 0, nt = 0 ; y < n ; y++) 
        {
            scanf("%s", &g[y]);
            for(x=0;x<n;x++) 
            {
                if(g[y][x]=='*') 
                {
                    g[y][x]='a'+nt;
	                nt++;
                }
                if(DEBUG)
                    putchar(g[y][x]);
            }
            if(DEBUG)
                printf("\n");
        }
         
        while(!q.empty())
            q.pop();
            
        m.x = 0, m.y = 0, m.mn = 0, m.tf = 0;
        memset(v, false, sizeof(v));
        v[0][0][0] = true;
        q.push(m);
        bfs();
    }
    
    // scanf("%d", &tc);
    return 0;
}
