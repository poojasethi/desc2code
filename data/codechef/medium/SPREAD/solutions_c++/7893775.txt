#include<bits/stdc++.h>
using namespace std;
 
long long int getSum(long long int *bit,long long int index){
 
long long int sum=0;
index=index+1;
while(index>0){
 
sum+=bit[index];
index=index-(index & -index);
}
return sum;
}
void update(long long int *bit,long long int size,long long int index,long long int value){
 
 
index=index+1;
if(index<=0) return ;
while(index<=size){
 
bit[index]+=value;
index=index+( index & -index);
}
return;
}
long long int * construct(long long int *A,long long int size){
 
 
long long int *bit=(long long int *)malloc((size+5)*sizeof(long long int));
 
for(long long int i=0;i<=size;i++) bit[i]=0;
 
for(long long int i=0;i<size;i++)
update(bit,size,i,A[i]);
return bit;
}
int main(){
 
long long int n,m,c,L,R,_c;
 
scanf("%lld%lld%lld",&n,&m,&_c);
 
long long int *arr=(long long int *)malloc(n*sizeof(long long int));
for(long long int i=0;i<n;i++) arr[i]=0;
 
long long int *bit=construct(arr,n);
char choice;
 
while(m--){
 
scanf(" %c ",&choice);
if(choice=='S'){
 
scanf("%lld%lld%lld",&L,&R,&c);
L=L-1; R=R-1;//zero based index
update(bit,n,L,c);
update(bit,n,R+1,-c);
}
else{
scanf("%lld",&L);
L=L-1;//zero based index....
c=getSum(bit,L);
printf("%lld\n",c+_c);
}
}
return 0;
}