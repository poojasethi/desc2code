#include<bits/stdc++.h>
#define trace1(x)                    cerr << #x << ": " << x << endl;
#define trace2(x, y)                 cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)              cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)           cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)        cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f)     cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#define ll long long int
#define MAXN 100002
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%lld",&i)
#define sout(i) printf("%d",i)
#define soutl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(int i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define tr(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define GETCHAR getchar_unlocked
#define PUTCHAR putchar_unlocked
	/***MAH Templates MAH Rules **/

template <class T>T sabs(T x){ if(x<0) return x*-1; else return x;}
template<class T> T sgcd(T x ,T y){ if(y==0) return x; else return sgcd(y,x%y);}
template<class T> T smax(T x,T y){ if(x>y) return x; else return y;}
template<class T> T smin(T x,T y){ if(x>y) return y; else return x;}
template <class T> T smod(T a, T b ,T m){T res=1,x=b;while(b>0){if(x&1) res=((res%m)*(x%m))%m;x=(x*x)%m;b=(b>>1);}return res;}
template<class T> T square(T a){ return a*a;}
using namespace std;
inline void writeInt(int x) { if(x==-1) { PUTCHAR('-'); PUTCHAR('1'); PUTCHAR('\n'); } else { int i = 10; char buf[11]; // buf[10] = 0;
buf[10] = ' '; do { buf[--i] = x % 10 + '0'; x/= 10; }while(x); do { PUTCHAR(buf[i]); } while (buf[i++] != ' '); } }
inline void fastInput(int &x) {
register int c = getchar();
x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = getchar());
if(c=='-') {
neg = 1;
c = getchar();
}
for(; c>47 && c<58 ; c = getchar()) {
	x = (x<<1) + (x<<3) + c - 48;
}
	if(neg)
	x = -x;
}
ll EXP[4000001];
int ci,n,m;


void update_sum(int v,int tl,int tr,int l,int r,ll val){
	if(tl==l &&  tr==r){
		EXP[v]+=val;
		return;
	}
	int mid=(tl+tr)>>1;
	EXP[2*v]+=EXP[v];
	EXP[2*v+1]+=EXP[v];
	EXP[v]=0;
	if(r<=mid) update_sum(2*v,tl,mid,l,r,val);
	else if(l>mid) update_sum(2*v+1,mid+1,tr,l,r,val);
	else{
		update_sum(2*v,tl,mid,l,mid,val);
		update_sum(2*v+1,mid+1,tr,mid+1,r,val);
	}
	return ;
}

ll query(int v,int tl,int tr,int p){
	if(tl==tr && tl==p){
		ll ans=EXP[v]+(ll)ci;
		return ans;
	}
	EXP[2*v]+=EXP[v];
	EXP[2*v+1]+=EXP[v];
	EXP[v]=0;
	int mid=(tl+tr)>>1;
	if(p<=mid) return query(2*v,tl,mid,p);
	else return query(2*v+1,mid+1,tr,p);
}
int main(){
fastInput(n); fastInput(m); fastInput(ci);
while(m--){
char x; int a,b;
int val;
scanf(" %c",&x);
if(x=='S'){
fastInput(a); fastInput(b); fastInput(val);
	update_sum(1,0,n-1,a-1,b-1,(ll)val);
}
else{
	fastInput(a);
	printf("%lld\n",query(1,0,n-1,a-1));
}
}
return 0;
}
