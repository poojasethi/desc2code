#include <cstdio>
#include <algorithm>
#include <cmath>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <iostream>
#include <cstring>
#define F first
#define S second
#define mp make_pair
#define isok(x,y) (x>=0 && x<R && y>=0 && y<C)
#define MAX (int)1e6
#define INF INF
using namespace std;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< VI > VII;
typedef long long LL;
///Fast IO
const int BUFFSIZE = 10240;
char BUFF[BUFFSIZE + 1], *p = BUFF;
int CHAR, SIGN, BYTES = 0;
#define GETCHAR(c) {								\
	if(p-BUFF==BYTES && (BYTES==0 || BYTES==BUFFSIZE)){BYTES=fread(BUFF,1,BUFFSIZE,stdin);p=BUFF;}	\
	if(p-BUFF==BYTES && (BYTES>0 && BYTES<BUFFSIZE)){BUFF[0]=0;p=BUFF;}					\
	c = *p++;										\
}
#define DIGIT(c) (((c) >= '0') && ((c) <= '9'))
#define LETTER(c)(((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))
#define MINUS(c) ((c)== '-')
#define GETNUM(n) {								\
	n = 0;SIGN = 1; do{GETCHAR(CHAR);}while(!(DIGIT(CHAR)|| MINUS(CHAR)));	\
	if(MINUS(CHAR)){SIGN = -1; GETCHAR(CHAR);}		\
	while(DIGIT(CHAR)){n = 10*n + CHAR-'0'; GETCHAR(CHAR);}if(SIGN == -1){n = -n;}\
}
#define GETWORD(s,i) {								\
	i = 0;do{GETCHAR(s[i]);}while(!LETTER(s[i]));	\
	do{GETCHAR(s[++i]);}while(LETTER(s[i]));	\
	s[i]=0;													\
}
 
///Fast IO ends
 
int N,M,C;
LL BIT[MAX + 1];
int maxval = MAX;
void update(int idx,int val)
{
	while(idx <= N)
	{
		BIT[idx] += val;
		idx += (idx&-idx);
	}
}
LL read(int idx)
{
	LL sum = 0;
	while(idx > 0)
	{
		sum += BIT[idx];
		idx -= (idx&-idx);
	}
	return sum;
}
int main()
{	
	GETNUM(N);GETNUM(M);GETNUM(C);
	while(M--)
	{
		char s[2];int l;
		GETWORD(s,l);
		if(s[0] == 'Q')
		{
			int x;
			GETNUM(x);
			printf("%lld\n",read(x) + C);
		}
		else
		{
			int u,v,k;
			GETNUM(u);GETNUM(v);GETNUM(k);
			update(u,k);
			update(v+1,-k);
		}
	}
	return 0;
}  