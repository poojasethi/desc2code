#include <bits/stdc++.h>
#include<cstring>
#define MOD 1000000007
using namespace std;
inline void inp( int &n ) {//fast input function
    n=0;
    int ch=getchar_unlocked(),sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar_unlocked();}
    while( ch >= '0' && ch <= '9' )
    n=(n<<3)+(n<<1)+ ch-'0', ch=getchar_unlocked();
    n=n*sign;
}

long long int bit[1000005];
int n;
void update(int index,int val)
{
    while(index<=n)
    {
        bit[index]+=val;
        index+=index&(-index);
    }
}
long long int need(int index)
{
    long long int sum=0;
    while(index>0)
    {
        sum+=bit[index];
        index-=index&(-index);
    }
    return sum;
}
int main()
{
    int m,c,start,enda,val,index,i;
    inp(n);
    inp(m);
    inp(c);
        update(1,c);
    while(m--)
    {
        char a;
        a=getchar_unlocked();
        while(!(a=='Q'||a=='S'))
            a=getchar_unlocked();
            if(a=='S')
            {
                inp(start);
                inp(enda);
                inp(val);
                update(start,val);
                update(enda+1,-val);
            }
        else if(a=='Q')
             {
                 inp(index);
                printf("%lld\n",need(index));
            }
    }
    return 0;
}
