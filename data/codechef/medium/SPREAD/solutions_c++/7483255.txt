#include<bits/stdc++.h>
using namespace std;
#ifndef ONLINE_JUDGE
    #define gc getchar
#else
    #define gc getchar_unlocked
#endif
 #ifndef ONLINE_JUDGE
    #define pc putchar
#else
    #define pc putchar_unlocked
#endif
inline void sc(char* ch)
{
    register char c;
    while((c = gc()) == '\n' || c == ' '){}
    *ch=c;
}
inline void si(int* x)
{
	register char c = gc();
	*x = 0;
	int neg = 0;
	for(; ((c<48 || c>57) && c != '-');c = gc());
	if(c=='-') {
        neg = 1;
        c = gc();
    }
	for(; (c>47)&&(c<58);c = gc())
		*x = (int)((((*x)<<1) + ((*x)<<3)) + c - 48);
    if(neg)
        *x = -*x;
}
inline void plli(long long int a)
{
    char snum[20];
    int i=0;
    char sign='+';
    if(a<0)
    {
        sign='-';
        a*=-1;
    }
    do
    {
        snum[i++]=a%10+48;
        a=a/10;
    }while(a!=0);
    i=i-1;
    if(sign=='-')
        pc(sign);
    while(i>=0)
    pc(snum[i--]);
    pc('\n');
}
long long int bit[1000001];
int n;
void update(int i,int v)
{
    for(;i<=n;i+=i&(-i))
        bit[i]+=v;
}
long long int query(int i)
{
    long long int s;
    for(s=0;i>0;i-=i&(-i))
        s+=bit[i];
    return s;
}
void range_update(int i,int j,int v)
{
    update(i,v);
    update(j+1,-v);
}
int main()
{
    int m,c,i,u,v,k,p;
    char ch;
    si(&n);
    si(&m);
    si(&c);
    for(i=1;i<=n;i++)
        range_update(i,i,c);
    while(m--)
    {
        sc(&ch);
        if(ch=='S')
        {
            si(&u);
            si(&v);
            si(&k);
            range_update(u,v,k);
        }
        else
        {
            si(&p);
            plli(query(p));
        }
    }
    return 0;
} 