#include<bits/stdc++.h>
using namespace std;
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define MAX(a,b) ((a)>(b)?(a):(b))
#define P(temp,val) cout<<temp<<" "<<val<<"\n";
ill ABS(ill a) { if ( a < 0 ) return (-a); return a; }
#define fe first
#define se second
#define gc getchar_unlocked
#define pu putchar_unlocked
#define FAST std::ios::sync_with_stdio(false); cin.tie(NULL);
inline void ifast(int &x)
{
register int c = gc();
x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = gc());
if(c=='-')
{
neg = 1;
c = gc();
}
for(; c>47 && c<58 ; c = gc()){
	x = (x<<1) + (x<<3) + c - 48;
	}
	if(neg)
	x = -x;
}
ill bit[1000007];
int n,m,c;

void update(ill a,ill val){
	for(;a<=n;a+=(a & -a)){
		bit[a]+=val;
	}
}
ill query(ill a){
	ill ans=0;
	for(;a>0;a-=(a & -a)){
		ans+=bit[a];
	}
	return ans;
}
int main(){
	ifast(n);
	ifast(m);
	ifast(c);
	char ch;
	F(i,0,m){
	        ch = gc();
   		while(ch != 'Q' && ch != 'S')
			ch = gc();
	
		if(ch=='Q'){	
			int index;
			ifast(index);
			printf("%lld\n",query(index)+c);
		}
		else{
			int u,v,k;
			ifast(u);
			ifast(v);
			ifast(k);
			update(u,k),update(v+1,-k);
		}
	}
}
