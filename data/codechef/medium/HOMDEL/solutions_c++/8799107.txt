#include <iostream>
#include <cstdio>
#include <algorithm>
#include <math.h>
using namespace std;
 #define M 300
 int n;
int graph[M][M];
int fw[M][M];
void floydwarshall(int n){
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
                fw[i][j]=graph[i][j];
            if(i==j)// 
                fw[i][j]=0;

        }
    }
for(int k=0;k<n;k++){// intermediate 
    for(int i=0;i<n;i++){// source
        for(int j=0;j<n;j++){// destination
            fw[i][j]=min(fw[i][j],fw[i][k]+fw[k][j]);
        }
    }
}
}
int main()
{
    int p,q,r;
   scanf("%d",&n);

   for(int i=0;i<n;i++){// accepting matrix
    for(int j=0;j<n;j++){
        int a;
        scanf("%d",&a);
        graph[i][j]=a;
    }
   }
floydwarshall(n);
int m;
scanf("%d",&m);
for(int i=1;i<=m;i++){
        scanf("%d%d%d",&p,&q,&r);
        int dist=fw[p][q]+fw[q][r];// source>fuel station>destination
        int diff=dist-fw[p][r];
        printf("%d %d\n",dist,diff);

}

    return 0;
}
