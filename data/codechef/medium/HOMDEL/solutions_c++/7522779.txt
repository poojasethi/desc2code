#include<iostream>
#include<cstdio>
#define BUF 4096
using namespace std;
int T[251][251];
char ibuf[BUF];
int ipt = BUF;
int read_uint()
 {
while (ipt < BUF && ibuf[ipt] < '0') ipt++;
if (ipt == BUF) {
    fread(ibuf, 1, BUF, stdin);
    ipt = 0;
    while (ipt < BUF && ibuf[ipt] < '0') ipt++;
}
int n = 0;
while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
if (ipt == BUF) {
    fread(ibuf, 1, BUF, stdin);
    ipt = 0;
    while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
}
return n;
}
int main()
{
    int N,M,S,G,D;
    //scanf("%d",&N);
    N=read_uint();
    for(int i=0;i<N;i++)
    {
        for(int j=0;j<N;j++)
        {
                //scanf("%d",&T[i][j]);
                T[i][j]=read_uint();
        }
    }
    for(int k=0;k<N;k++)
        {
            for(int i=0;i<N;i++)
            {
                for(int j=0;j<N;j++)
                {
                    if(T[i][k]+T[k][j] < T[i][j])
                    {
                        T[i][j]=T[i][k]+T[k][j];
                    }
                }
            }
        }
    //scanf("%d",&M);
    M=read_uint();
    while(M-- > 0)
    {
        //scanf("%d %d %d",&S,&G,&D);
        S=read_uint();
        G=read_uint();
        D=read_uint();
        int indir=T[S][G];
        indir+=T[G][D];
        int dir=T[S][D];
        printf("%d %d\n",indir,indir-dir);
    }
    return 0;
}