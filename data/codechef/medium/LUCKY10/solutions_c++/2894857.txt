#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <limits>
#include <vector>
#include <cstdlib>
#include <numeric>
#include <sstream>
#include <iostream>
#include <algorithm>
#include<string.h>
#define S1(n) scanf("%ld",&n);
#define S2(m,n) scanf("%ld %ld",&m,&n);
#define S3(m,n,t) scanf("%ld %ld %ld",&m,&n,&t);
using namespace std;

vector<int> read()
{
	string s;
	cin >> s;
	vector<int> a(10, 0);
	for (int i = 0; i < s.length(); ++i) {
		int d = s[i] - '0';
		if (d < 4) {
			++a[0];
		} else if (d == 4) {
			++a[4];
		} else if (d < 7) {
			++a[5];
		} else if (d == 7) {
			++a[7];
		}
	}
	return a;
}

int main()
 {
    long t,i,l,c4,c7,ca,d;

    S1(t);
    int n[10];
    while(t--)
    {
       vector<int>a=read();
        vector<int>b=read();
        vector<int>c(10,0);




        int priority[11][2]={{7, 5}, {5, 7}, {7, 0}, {0, 7}, {7, 4}, {4, 7}, {7, 7}, {4, 0}, {0, 4}, {4, 4}};




        for (int i = 0; i < 11; i++)
            {
			int d1 = priority[i][0];
			int d2 = priority[i][1];
			int k = min(a[d1], b[d2]);
			int d = max(d1, d2);
			c[d] += k;
			a[d1] -= k;
			b[d2] -= k;
		}

        cout<<string(c[7],'7')+string(c[4],'4')<<"\n";
    }




	return 0;
}
