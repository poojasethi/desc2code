//http://www.codechef.com/OCT12/problems/LUCKY10
#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
using namespace std;
char a[20005],b[20005];
int t,a13,a4,a56,a7,a89,b13,b4,b56,b7,b89,ans7,ans4,ab;
void calSpecificDigit(char x[],int *p13,int *p4,int *p56,int *p7,int *p89){
     int len = strlen(x);
     int j;
     for(j=0;j<len;j++){
     if(x[j]-48<4)
                *p13+=1;
     else if(x[j]-48==4)
                *p4+=1;
     else if(x[j]-48<7)
                *p56+=1;
     else if(x[j]-48==7)
                *p7+=1;
     else
                *p89+=1;
     }
     
     }
     void resolve(int *x, int *y){
     if(*x<*y){
        *y-=*x;
        *x=0;     
     }    
     else if(*x > *y){
        *x-=*y;  
        *y=0;
     } 
     else{
          *x=0;*y=0;
     }
     }

int main(){
    scanf("%d\n", &t);
    while(t--){
    scanf("%s",&a);    
    scanf("%s",&b);    
    a13=0;a4=0;a56=0;a7=0;a89=0;b13=0;b4=0;b56=0;b7=0;b89=0;
    calSpecificDigit(a,&a13,&a4,&a56,&a7,&a89);
    calSpecificDigit(b,&b13,&b4,&b56,&b7,&b89);
    //printf("\n%d %d %d %d %d\n",a13,a4,a56,a7,a89);
    //printf("\n%d %d %d %d %d\n",b13,b4,b56,b7,b89);
    ans7=0; ans4=0;
    if(a7!=0){
    ans7+= min(a7,b56);
    resolve(&a7,&b56);
    if(a7!=0){
      ans7+=min(a7,b13);
      resolve(&a7,&b13);
      if(a7!=0){
      ans7+=min(a7,b4);
      resolve(&a7,&b4);
       if(a7!=0){
         ans7+=min(a7,b7);
         resolve(&a7,&b7);
          }}}}
    if(b7!=0){
    ans7+=min(b7,a56);
    resolve(&b7,&a56);
    if(b7!=0){
      ans7+=min(b7,a13);
      resolve(&b7,&a13);
      if(b7!=0){
      ans7+=min(b7,a4);
      resolve(&b7,&a4);
      }}}   
    if(a4!=0){
    ans4+=min(a4,b13);
    resolve(&a4,&b13);
    if(a4!=0){
      ans4+=min(a4,b4);
      resolve(&a4,&b4);
    }}
    
    if(b4!=0){
    ans4+=min(b4,a13);
    resolve(&b4,&a13);
    }
    for(ab=0;ab<ans7;ab++){
          printf("7");
            }
    for(ab=0;ab<ans4;ab++){
          printf("4");  
            }
    printf("\n");
    }
    return 0;
}
