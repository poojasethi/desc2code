#include <iostream>
#include <cstdio>
#include <algorithm>
#include <deque>
#include <cstring>

#define lint long long int
#define in() ({ int x; scanf("%d", &x); x; })
#define fr(i,a) for(i=0;i<a;i++)
#define frab(i, a, b) for(i=a;i<b;i++)
#define min(a, b) (((a) < (b)) ? (a) : (b))
#define max(a, b) (((a) > (b)) ? (a) : (b))
#define MOD 1000000007

void INPUT_FROM_FILE()
{
    #ifndef ONLINE_JUDGE
    freopen("in.txt", "r", stdin);
    #endif
}

void swap(int &a, int &b);

using namespace std;
int main()
{
    INPUT_FROM_FILE();

    int tc, lt4[2], eq4[2], bet47[2], eq7[2], gt7[2],ans7, ans4, n, i;
    char ch[20002];

    tc = in();
    while(tc--)
    {
        ans7 = ans4 = 0;
        fill(lt4, lt4+2, 0);
        fill(eq4, eq4+2, 0);
        fill(bet47, bet47+2, 0);
        fill(eq7, eq7+2, 0);
        fill(gt7, gt7+2, 0);
        scanf("%s", ch);
        n = strlen(ch);
        fr(i, n)
        {
            if(ch[i] < '4') lt4[0]++;
            else if(ch[i] == '4') eq4[0]++;
            else if(ch[i] > '4' && ch[i] < '7') bet47[0]++;
            else if(ch[i] == '7') eq7[0]++;
            else if(ch[i] > '7') gt7[0]++;
        }
        scanf("%s", ch);
        n = strlen(ch);
        fr(i, n)
        {
            if(ch[i] < '4') lt4[1]++;
            else if(ch[i] == '4') eq4[1]++;
            else if(ch[i] > '4' && ch[i] < '7') bet47[1]++;
            else if(ch[i] == '7') eq7[1]++;
            else if(ch[i] > '7') gt7[1]++;
        }

        //cout << lt4[0] << " " << eq4[0] << " " << bet47[0] << " " << eq7[0] << " " << gt7[0] << endl;
        //cout << lt4[1] << " " << eq4[1] << " " << bet47[1] << " " << eq7[1] << " " << gt7[1] << endl;

        fr(i ,2)
        {
            if(bet47[0] >= eq7[1])
            {
                ans7 += eq7[1];
                bet47[0] -= eq7[1];
                eq7[1] = 0;
            }
            else
            {
                ans7 += bet47[0];
                eq7[1] -= bet47[0];
                bet47[0] = 0;
                if(lt4[0] >= eq7[1])
                {
                    ans7 += eq7[1];
                    lt4[0] -= eq7[1];
                    eq7[1] = 0;
                }
                else
                {
                    ans7 += lt4[0];
                    eq7[1] -= lt4[0];
                    lt4[0] = 0;
                    if(eq4[0] >= eq7[1])
                    {
                        ans7 += eq7[1];
                        eq4[0] -= eq7[1];
                        eq7[1] = 0;
                    }
                    else
                    {
                        ans7 += eq4[0];
                        eq7[1] -= eq4[0];
                        eq4[0] = 0;
                        if(eq7[0] >= eq7[1])
                        {
                            ans7 += eq7[1];
                            eq7[0] -= eq7[1];
                            eq7[1] = 0;
                        }
                        else
                        {
                            ans7 += eq7[0];
                            eq7[1] -= eq7[0];
                            eq7[0] = 0;

                        }
                    }
                }
            }
            swap(lt4[0], lt4[1]);
            swap(eq4[0], eq4[1]);
            swap(bet47[0], bet47[1]);
            swap(eq7[0], eq7[1]);
            swap(gt7[0], gt7[1]);
        }
        //cout << lt4[0] << " " << eq4[0] << " " << bet47[0] << " " << eq7[0] << " " << gt7[0] << endl;
        //cout << lt4[1] << " " << eq4[1] << " " << bet47[1] << " " << eq7[1] << " " << gt7[1] << endl;

        fr(i, 2)
        {
            if(lt4[0] >= eq4[1])
            {
                ans4 += eq4[1];
                lt4[0] -= eq4[1];
                eq4[1] = 0;
            }
            else
            {
                ans4 += lt4[0];
                eq4[1] -= lt4[0];
                bet47[0] = 0;
                if(eq4[0] >= eq4[1])
                {
                    ans4 += eq4[1];
                    eq4[0] -= eq4[1];
                    eq4[1] = 0;
                }
                else
                {
                    ans4 += eq4[0];
                    eq4[1] -= eq4[0];
                    eq4[0] = 0;
                }
            }
            swap(lt4[0], lt4[1]);
            swap(eq4[0], eq4[1]);
            swap(bet47[0], bet47[1]);
            swap(eq7[0], eq7[1]);
            swap(gt7[0], gt7[1]);
        }

        while(ans7--) printf("7");
        while(ans4--) printf("4");
        printf("\n");
    }

    return 0;
}

void swap(int &a, int &b)
{
    int temp;
    temp = a;
    a = b;
    b = temp;
}
