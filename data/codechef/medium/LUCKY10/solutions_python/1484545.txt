import sys, os
import unittest

def getToTarget(target, values, priorities):
	returnTarget = 0
	returnValues = values
	for p in priorities:
		x = values[p]
		toTarget = target-returnTarget
		add = min(x,toTarget)
		returnValues[p] = x-add
		returnTarget += add

	return returnTarget, returnValues

def count(str):
	counts = [0] * 10
	for x in str:
		d = ord(x)-ord('0')
		counts[d] += 1

	return  [ 
			  counts[0] + counts[1] + counts[2] + counts[3],
			  counts[4],
			  counts[5] + counts[6],
			  counts[7]
		 	]

def solveCase(a,b):
	valuesA = count(a)
	valuesB = count(b)

	sevensA, valuesB = getToTarget(valuesA[3], valuesB, [2, 0, 1, 3])
	valuesA[3] -= sevensA
	sevensB, valuesA = getToTarget(valuesB[3], valuesA, [2, 0, 1, 3])

	sevens = sevensA + sevensB

	foursA, valuesB = getToTarget(valuesA[1], valuesB, [0, 1])
	valuesA[1] -= foursA
	foursB, valuesA = getToTarget(valuesB[1], valuesA, [0, 1])

	fours = foursB + foursA

	return '7'*(sevens) + '4'*(fours)

class Tests(unittest.TestCase):
	def test_0(self):
		self.assertEqual(solveCase('4', '7'), '7')

	def test_1(self):
		self.assertEqual(solveCase('435', '479'), '74')

	def test_2(self):
		self.assertEqual(solveCase('7','8'), '')

	def test_3(self):
		self.assertEqual(solveCase('1675475', '9756417'), '777744')

	def test_4(self):
		self.assertEqual(solveCase('777444', '666666'), '777')

	def test_5(self):
		self.assertEqual(solveCase('777444', '666444'), '777444')
		
	def test_6(self):
		self.assertEqual(solveCase('666444', '777444'), '777444')

	def test_7(self):
		self.assertEqual(solveCase('111344', '777433'), '777444')

	def test_8(self):
		self.assertEqual(solveCase('778888', '111174'), '77')

	def test_9(self):
		self.assertEqual(solveCase('87432', '87643'), '7744')

	def test_10(self):
		self.assertEqual(solveCase('84847487764', '19887294978'), '77777')

	def test_11(self):
		self.assertEqual(solveCase('88487786847', '79774772742'), '777777')

if __name__ == '__main__':
	# unittest.main()
	# sys.stdin = open('test.txt')
	cases = int(sys.stdin.readline().strip())
	for x in range(cases):
		a = sys.stdin.readline().strip()
		b = sys.stdin.readline().strip()
		print solveCase(a,b)