#include <iostream>
#include <cstdio>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
using namespace std;

typedef long long ll;
template <class T> T ABS(const T &x) {return x>0? x:-x;}
ll gcd(ll n1, ll n2) {return n2==0? abs(n1) : gcd(n2,n1%n2);}

ll C(int a, int b) {
    if (b<0 || b>a) return 0;
    if (b > a-b) b=a-b;
    int x[2005];
    for (int i=0; i<b; i++) {
        x[i] = a-i;
    }
    for (int i=2; i<=b; i++) {
        int s = i;
        for (int k=0; k<b && s>1; k++) {
            int d = gcd(s, x[k]);
            s/=d;
            x[k]/=d;
        }
    }
    ll ret = 1;
    for (int i=0; i<b; i++) {
        ret = ret*x[i];
    }
    return ret;
}

int main()
{
    int t, n, f, x, b;
    ll sum;
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        scanf("%d", &f);
        sum = ll(n)*(n+1)/2;
        for (int i=0; i<f; i++) {
            scanf("%d", &x);
            sum -= x;
        }
        scanf("%d", &b);
        int a = (n+1)/2;

        //ll comb = C(a, b);
        //ll occur = C(a-1, b-1);
        //printf("Sum = %lld, comb = %lld, occur = %lld, a = %d, b = %d\n", -1, comb, occur, a, b);
        //double ans2 = 1.0 - ((1.0*occur)/comb);
        double ans = (a-b)*1.0/a;
        ans = ans*sum;
        /*
        if (ABS(ans-ans2)>1e-9) {
            printf("Sum = %lld, comb = %lld, occur = %lld, a = %d, b = %d\n", -1LL, comb, occur, a, b);
            printf("%d %d\n", a, b);
            printf("%lf\n%lf\n", ans, ans2);
            return 0;
        }
        */
        printf("%.4lf\n", ans);
    }
    return 0;
}
