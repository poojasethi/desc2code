#include <bits/stdc++.h>

using namespace std;

#define get getchar_unlocked
#define pb push_back

long long int ch(char c)
{
    if (c == 'c')
        return 0;
    else if (c == 'h')
        return 1;
    else if (c == 'e')
        return 2;
    return 3;
}

char in(long long int i)
{
    string s = "chef";
    return s[i];
}

void read(string &a)
{
    char ch = get();
    while (ch < 'a' || ch > 'z')
        ch = get();
    while (ch >= 'a' && ch <= 'z') {
        a.pb(ch);
        ch = get();
    }
}

char readch()
{
    char ch = get();
    while (ch < 'a' || ch > 'z')
        ch = get();
    return ch;
}

long long int scan()
{
    long long int n = 0, ch = get();
    while (ch < '0' || ch > '9')
        ch = get();
    while (ch >= '0' && ch <= '9') {
        n = (n << 3) + (n << 1) + ch - '0';
        ch = get();
    }
    return n;
}

long long int dp[1000011][4][4];
long long int freq[1000011][4];

int main()
{
    string s;
    read(s);
    long long int i, j, k;
    dp[0][ch(s[0])][ch(s[0])] = 1;
    freq[0][ch(s[0])] = 1;
    for (i = 1; i < s.size(); i++) {
        dp[i][ch(s[i])][ch(s[i])] += 1;
        for (j = 0; j < 4; j++) {
            for (k = 0; k < 4; k++)
                dp[i][j][ch(s[i])] += dp[i-1][j][k];
            freq[i][j] = freq[i-1][j];
        }
        freq[i][ch(s[i])]++;
    }
    for (i = 1; i < s.size(); i++) {
        for (j = 0; j < 4; j++) {
            for (k = 0; k < 4; k++) {
                dp[i][j][k] += dp[i-1][j][k];
            }
        }
    }
    char m, n;
    long long int x, y, ans;
    long long int q;
    q = scan();
    while (q--) {
        m = readch();
        n = readch();
        x = scan();
        y = scan();
        x--;
        y--;
        ans = dp[y][ch(m)][ch(n)];
        //cout << ans << endl;
        if (x) {
            ans -= dp[x-1][ch(m)][ch(n)];
          // cout << ans << endl;
            ans -= freq[x-1][ch(m)]*(freq[y][ch(n)]-freq[x-1][ch(n)]);
        }
        printf("%lld\n", ans);
    }
    return 0;
}