#include <iostream>
#include <string.h>
using namespace std;

#define gc getchar
#define MAX 1000005
typedef long long ll;

int n,q;
ll coun[4][4][MAX]={0};
ll occ[4][MAX]={0};

int input()
{
  int n = 0, ch;
  while(!(ch >= '0' && ch <= '9'))ch = getchar();
  while(ch >= '0' && ch <= '9')
    {
      n = (n << 3) + (n << 1) + (ch - '0');
      ch = getchar();
    }
  return n;
}

int num(char a)
{
	if(a=='c')return 0;
	if(a=='h')return 1;
	if(a=='e')return 2;
	if(a=='f')return 3;

	return -1;

}


void prescale(char buf[])
{

	int c[4]={0};

	c[num(buf[0])]++;
	coun[num(buf[0])][num(buf[0])][0]++;
	occ[num(buf[0])][0]++;


	for(int i=1;i<n;i++)
	{
		c[num(buf[i])]++;

		for(int j=0;j<4;j++)
		{
			coun[num(buf[i])][j][i]=coun[num(buf[i])][j][i-1]+c[j];
		}

		for(int j=0;j<4;j++)
		{	
			if(num(buf[i])!=j)
			{
				for(int k=0;k<4;k++)
				{
					coun[j][k][i]=coun[j][k][i-1];
				}
			}

		}

		for(int j=0;j<4;j++)
		{
			occ[j][i]=occ[j][i-1];
		}

		occ[num(buf[i])][i]++;

	}

}


ll query(char a,char b,int l,int r)
{
	if(l>=0)
	{
		ll repa = occ[num(a)][l-1];
		ll coub = occ[num(b)][r] - occ[num(b)][l-1];

		ll rep = repa*coub;

		ll cou = coun[num(b)][num(a)][r] - coun[num(b)][num(a)][l-1] - rep;

		//cout<<rep <<" "<<coun[num(b)][num(a)][l-1] <<" "<<coun[num(b)][num(a)][r] <<endl;

		return cou;

	}

	return coun[num(b)][num(a)][r];

}

char buf[MAX];

int main()
{
	
	scanf("%s",buf);

	n=strlen(buf);

	prescale(buf);

	scanf("%d",&q);

	char a,b;
	int l,r;

	while(q-->0)
	{

		while(!(a == 'c' || a == 'h' || a == 'e' || a =='f'))a = getchar();
		while(!(b == 'c' || b == 'h' || b == 'e' || b =='f'))b = getchar();
		l = input();
		r = input();	

		printf("%lld\n",query(a,b,l-1,r-1));

		a='a';
		b='a';

	}


}








