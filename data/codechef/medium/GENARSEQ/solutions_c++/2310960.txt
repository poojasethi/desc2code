// Standard includes
#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<limits.h>
#include<string.h>

//Data Structures
#include<algorithm>
#include<vector>
#include<string>
#include<set>
#include<map>
#include<utility>
#include<stack>
#include<queue>
using namespace std;

#define FOR(i,a,b) for(int i= (int )a ; i < (int )b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define INF INT_MAX
#define all(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define pb push_back
#define sz(x) int(x.size())
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pil(n) printf("%d\n",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)

typedef pair<int,int> pr;
typedef vector<int> vec;
typedef vector<vec> matrix;
typedef long long LL;
#define mod 1000000007

int main()
{
int re;
si(re);
int a,b,n;
int arr[100009];
int j;
int l;int ans[2000];
int ind,ind1;
bool flag;
rep(v,re){
flag = false;
	l=0;
si(a),si(b),si(n);
rep(i,100009)arr[i]=0;
//set it as zero
arr[1]=1,arr[0]=2;
if(a>b)flag=true,arr[a-b]=2;
//2 can't be taken

ans[l++]=1;
j=2;
while(l<n){
while(arr[j]!=0)j++;
//flag=false;

ans[l++]=j;
FOR(i,0,l-1){
	if((ind=a*j -b*ans[i])>0 && ind > j && ind <100005)arr[ind]=2;
	if((ind=a*ans[i] -b*j)>0 && ind > j && ind <100005)arr[ind]=2;
	}
if(flag && (a-b)*j < 100005)arr[(a-b)*j]=2;
arr[j]=1;
}
FOR(i,0,l-1)printf("%d ",ans[i]);
printf("%d\n",ans[l-1]);
/*FOR(i,0,l)
	FOR(j,0,l)
		if((ind=a*ans[i] - b*ans[j])>0 && ind <100005 && arr[ind]==1 && ind>ans[i] && ind>ans[j])
			printf("%d --%d %d No\n",a*ans[i]-b*ans[j],ans[i],ans[j]);
*/
}
return 0;
}

