#include<bits/stdc++.h>
using namespace std;

#define FRE(i,a,b)  for(i = a; i <= b; i++)
#define FRL(i,a,b)  for(i = a; i < b; i++)
#define BWE(i,a,b)  for(i = a; i >= b; i--)
#define BWL(i,a,b)  for(i = a; i > b; i--)
#define mem(t, v)   memset ((t) , v, sizeof(t))
#define sqr(x)      ((x)*(x))
#define all(x)      x.begin(),x.end()
#define un(x)       x.erase(unique(all(x)), x.end())
#define sf(n)       scanf("%d", &n)
#define sff(a,b)    scanf("%d %d", &a, &b)
#define sfff(a,b,c) scanf("%d %d %d", &a, &b, &c)
#define Fout        freopen("out.txt","w",stdout)
#define Finp        freopen("in.txt","r",stdin)
#define D(x)        cout<<#x " = "<<(x)<<endl
#define pf          printf
#define vi          vector <int>
#define pii         pair <int, int>
#define pll         pair <LL, LL>
#define pb          push_back
#define mp          make_pair
#define pi          acos(-1.00)
#define DBG         pf("Hi\n")
#define sz          size()
#define ins         insert
#define xx          first
#define yy          second
#define inf         (1<<29)
#define MOD         100007
#define eps         1e-9
#define MAX         1440
#define AND(a,b)    ((a) & (b))
#define OR(a,b)     ((a)  (b))
#define XOR(a,b)    ((a) ^ (b))

typedef long long int LL;
typedef double db;

/* Min Priority queue
   priority_queue<int, vector<int>, greater <int> > q;
*/

//int dx[] = {+0,+1,+0,-1};
//int dy[] = {+1,+0,-1,+0};
//int dx[] = {-1,-1,-1,+0,+0,+1,+1,+1};
//int dy[] = {-1,+0,+1,-1,+1,-1,+0,+1};
//int dx[]={-2, -2, -1, -1,  1,  1,  2,  2};  // Knight's Move
//int dy[]={-1,  1, -2,  2, -2,  2, -1,  1};  // Knight's Move
//bool check(int n, int pos) {return (bool) (n & (1<<pos));}
//int on(int n, int pos) {return n | (1<<pos); }
//int off(int n, int pos) {return n & ~(1<<pos); }
//bool comp(pii a, pii b) { return a.xx < b.xx;}
//int gcd(int a,int b) {return b==0?a:gcd(b,a%b);}
//int lcm(int a,int b) {return ((a*b)/gcd(a,b));}
//bool operator < (Pair a, Pair b) {return a.second < b.second;} ///Only Comparing the second element
//bool operator < (Pair a, Pair b) ///Pair comparison on the basis of first element prioritized
//{if(a.first < b.first) return true;else if(a.first == b.first){if(a.second > b.second) return true;else return false;}

int arr[100009], ans[2000],ind, ind1, j, l, a, b, n, cs, i, k;

int main()
{
    sf(cs);
    bool flag;
    FRE(k,1,cs)
    {
        flag = false;
        l=0;
        sfff(a,b,n);
        mem(arr,0);
        arr[1]=1;
        arr[0]=2;
        if(a>b)
        {
            flag=true;
            arr[a-b]=2;
        }
        ans[l]=1; l++;
        j=2;
        while(l<n)
        {
            while(arr[j]!=0)
                j++;
            ans[l]=j;
            l++;
            FRL(i,0,l-1)
            {
                if((ind=a*j -b*ans[i])>0 && ind > j && ind <100005)
                    arr[ind]=2;
                if((ind=a*ans[i] -b*j)>0 && ind > j && ind <100005)
                    arr[ind]=2;
            }
            if(flag && (a-b)*j < 100005)
                arr[(a-b)*j]=2;
            arr[j]=1;
        }
        FRL(i,0,l-1)
        printf("%d ",ans[i]);
        printf("%d\n",ans[l-1]);
    }
    return 0;
}
