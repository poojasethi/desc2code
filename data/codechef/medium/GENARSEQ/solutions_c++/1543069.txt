#include <iostream>
#include <cstdio>
using namespace std;

#include <bitset>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>

# define FR(i, n)           for( int i = 0; i<=n; i++)
# define FRm(i, m, n)     for( int i = m; i <=n; i++)
# define FRrev(i, n)         for( int i = n; i >= 0; i-- )
# define FRrevm(i,n,m)         for( int i = n; i >= m; i-- )

# define PF       printf
# define PFS PF(" ")
# define PFd(x)   printf("%d" , x )
# define PFdS(x)   printf("%d " , x )
# define PFdN(x)  printf("%d\n" , x )
# define PFN	  printf("\n")
# define SF    scanf
# define SFd(x) scanf("%d",&x)
# define SFd2(x,y) scanf("%d%d",&x,&y)
# define LL long long

# define PB push_back
# define PII pair<int,int>
# define F first
# define S second
# define MP make_pair

#define nmax 1000

#define inarrd(arr,n) for(int i=0;i<n;i++)SFd(arr[i]);
#define outarrd(arr,n) for(int i=0;i<n;i++){PFd(arr[i]);PF(" ");}PFN;
#define outarrN(arr,n) for(int i=0;i<n;i++){PFd(arr[i]);PFN;}

#define deb 1
class Compare
{
    public:
    bool operator()(int v1,int v2)
    {
        if(v1<v2)
        {
           return true;
        }
        else
        {
            return false;
        }
    }
};




int main()
{
    int t,n,a,b;
    SFd(t);
    int x[nmax+1];
    bool vis[2*nmax*nmax+1];
    int tmp;
    int maxval=2*nmax*nmax;

    while(t--)
    {
        SFd2(a,b);SFd(n);

        memset(vis,0,sizeof(vis));
        /*set<int,Compare> q;
        set<int,Compare>::iterator it;
        x[0]=1;
        FRm(i,1,n-1)
        {
            tmp=x[i-1];
            while(q.find(tmp)!=q.end())
            {
                tmp++;
            }


        }*/
        x[0]=1;
        if(a>b)vis[abs(a-b)]=1; vis[1]=1;
        FRm(i,1,n-1)
        {
            tmp=x[i-1];
            while(vis[tmp])tmp++;
            x[i]=tmp; vis[tmp]=1;
            FR(j,i-1)
            {
                tmp=a*x[j]-b*x[i];
                if(tmp>0 && tmp<maxval)vis[tmp]=1;
                tmp=-b*x[j]+a*x[i];
                if(tmp>0 && tmp<maxval)vis[tmp]=1;
            }
            tmp=x[i]*abs(a-b);
            if(a>b)vis[tmp]=1;
        }

        FRm(i,0,n-1)PFdS(x[i]);
        PFN;

    }

    return 0;
}
