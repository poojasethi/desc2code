#include<stdio.h>
#include<bits/stdc++.h>

#define gc getchar_unlocked // for linux
//#define gc getchar        // for windows
#define LL long long

using namespace std;
int inp()   //Signed long long data type
{
	int n=0;
	int ch=gc();int sign=1;
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}
	while( ch >= '0' && ch <= '9' )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	return(n*sign);
}
void scanint(int &x)  // Unsigned int data type
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
void scanlong(long long &x)     //Unsigned long long data type
{
    register long long c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

int main()
{
	int t,n,m,i;
	scanint(t);
	set<int> myset;
	while(t--)
	{
		myset.clear();
		scanint(n);
		scanint(m);
		int final[n];
		int arr[m][2];
		for(i=0;i<m;i++)
		{
			scanint(arr[i][0]);
			scanint(arr[i][1]);
		}
		int index=0;
		for(i=m-1;i>=0;i--)
		{
			if(myset.count(arr[i][0])==0 && myset.count(arr[i][1])==0)
			{
				myset.insert(arr[i][0]);
				myset.insert(arr[i][1]);
				final[index++]=i;
			}
		}
//		printf("%d\n", index);
		for(i=index-1;i>=0;i--)
		{
			printf("%d ", final[i]);
		}
		printf("\n");
	}
	return 0;
}
