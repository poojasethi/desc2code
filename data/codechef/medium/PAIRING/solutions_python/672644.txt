# code chef - easy - pairing chefs - pairing.py

t = int(raw_input())

for iter in range(t):
    n,m =  map(int, raw_input().split())
    available = [True] * n
    pairs = []
    for i in range(m):
        pairs.append( map(int, raw_input().split()) )

    #print pairs

    # weights are 2^n, so optimum is to start at back of list
    # and take all available pairs

    answer = []
    for p in range( len(pairs)-1, -1, -1 ):
        e1 = pairs[p][0]
        e2 = pairs[p][1]
        if available[e1] and available[e2]:
            available[e1] = False
            available[e2] = False
            answer.append(p)
        #print available

    answer.reverse()

    for p in answer:
        print p,
    print
            
        
        
