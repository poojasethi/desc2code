#pragma comment(linker, "/stack:16777216")
#include <string>
#include <vector>
#include <map>
#include <list>
#include <iterator>
#include <set>
#include <queue>
#include <iostream>
#include <sstream>
#include <stack>
#include <deque>
#include <cmath>
#include <memory.h>
#include <cstdlib>
#include <cstdio>
#include <cctype>
#include <algorithm>
#include <utility> 
using namespace std;
 
#define FOR(i, a, b) for(int i = (a); i < (b); ++i)
#define RFOR(i, b, a) for(int i = (b) - 1; i >= (a); --i)
#define REP(i, N) FOR(i, 0, N)
#define RREP(i, N) RFOR(i, N, 0)
#define FILL(A,b) memset(A,b,sizeof(A))
 
#define ALL(V) V.begin(), V.end()
#define SZ(V) (int)V.size()
#define PB push_back
#define MP make_pair
#define Pi 3.14159265358979

typedef long long Int;
typedef unsigned long long UInt;
typedef vector <int> VI;
typedef pair <int, int> PII;

const int INF = 1<<30;
const int MAX = 1<<17;

int t, n;
int A[MAX];

// standard GCD function
int gcd(int a, int b)
{
	while (a && b)
		if (a > b)
			a %= b;
		else
			b %= a;
	return a + b;
}

int main()
{
	#ifndef ONLINE_JUDGE
		freopen("in.txt", "r", stdin);
	#endif
	cin >> t;
	FOR (tt,0,t)
	{
		// input
		scanf("%d", &n);
		FOR (i,0,n)
			scanf("%d", &A[i]);

		int g = 0;

		// finding a GCD of all numbers
		FOR (i,0,n)
			g = gcd(g, A[i]);

		// if g = 1 there is no way to find a divisor > 1
		if (g == 1)
			printf("-1\n");
		else
		{
			int res = g;
			// iterating through all i > 2 such that i*i <= x and finding minimal common divisor
			for (int i = 2; i * i <= g; i++)
				if (g % i == 0)
				{
					res = i;
					break;
				}

			// output
			printf("%d\n", res);	
		}
	}



	return 0;
}