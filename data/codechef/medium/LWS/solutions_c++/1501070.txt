#include<stdio.h>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define mod 1000000007
#define MAXN 1000010
#define get getchar_unlocked
using namespace std;
inline int inp()
{
    int n=0;
    char p=get();
    while((p<'0'||p>'9')&&p!=EOF)
    p=get();
    while(p>='0'&&p<='9')
    {
    n = (n<< 3) + (n<< 1) + (p - '0');
    p=get();
    };
    return n;
}
int dp[2005][30][30];
int main()
{
    int i,j,k,l,m,t,ans;
    t=inp();
    string s;
    while(t--)
    {
        cin>>s;
        s="#"+s;
        l=s.length();
        memset(dp,0,sizeof(dp));
        for(i=1;i<27;i++)for(j=1;j<27;j++)
        dp[0][i][j]=-mod;
        for(i=1;i<l;i++)
        {
            for(j=0;j<27;j++)
            {
                for(k=0;k<27;k++)
                {
                    m=s[i]-'a'+1;
                    dp[i][j][k]=max(dp[i][j][k],dp[i-1][j][k]);
                    if(m>=j)
                    dp[i][m][k]=max(dp[i][m][k],dp[i-1][j][k]+1);
                    if(m<=k)
                    dp[i][j][m]=max(dp[i][j][m],dp[i-1][j][k]+1);
                }
            }
        }
       ans=-mod;
       for(i=0;i<27;i++)
       {
           for(j=0;j<27;j++)
           ans=max(ans,dp[l-1][i][j]);
       }
       printf("%d\n",ans);
     }
    return 0;
}
