#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;

const int maxS = 2005;

int S;
char seq[maxS];
int iseq[maxS], dseq[maxS];
int dp[maxS][27][27];


void print()
{
     for(int k =0; k<=S; k++)
  {
      cout<<"k "<<k<<endl;
      for(int i=0; i<27; i++)
      {
          for(int j= 0; j<27; j++)cout<<dp[k][i][j]<<" ";
          cout<<endl;
      }
      cout<<endl;
  }
}

void init()
{
  scanf("%s", seq);
  S = strlen(seq);
  for(int i=0; i<S; i++)
  {
      iseq[i] = seq[i] - 'a'+ 1;
      dseq[i] = 27 - iseq[i];
  }

      for(int i=0; i<27; i++)
      {
          for(int j= 0; j<27; j++)dp[0][i][j] = 0;
      }


}
void process()
{
    int m;
    for(int k=1; k<=S; k++)
    {
        for(int i=0; i<27; i++)
        {
            for(int j =0; j<27; j++)
            {
            dp[k][i][j] = dp[k-1][i][j];
            }
        }
        //increasing

        for(int i=0; i<27; i++)
        {
            m = -1;
            for(int j=0; j<=iseq[k-1]; j++)
            {
                if(dp[k-1][i][j]>m)m = dp[k-1][i][j];
                if(m != 0 || i == 0)
                {
                    dp[k][i][iseq[k-1]] = 1+m;
                }
            }
        }

        //decreasing

        for(int j=0; j<27; j++)
        {
            m = -1;
            for(int i=0; i<=dseq[k-1]; i++)
            {
                if(dp[k-1][i][j]>m)m = dp[k-1][i][j];
                if(m != 0 || j == 0)
                {
                    dp[k][dseq[k-1]][j] = 1+m;
                }
            }
        }
    }
       int res = -1;
        for(int i=0; i<27; i++)
        {
                for(int j=0; j<27; j++)
                {
                    if(dp[S][i][j]>res)res = dp[S][i][j];
                }
        }
   printf("%d\n", res);


}


void solve()
{
   init();
   //print();
   process();
   //print();


}


int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
    int t;
    scanf("%d", &t);

    while(t--)
    {
        solve();
    }
}

