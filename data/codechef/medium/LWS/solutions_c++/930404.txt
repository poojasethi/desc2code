#include <map>
#include <queue>
#include <stack>
#include <ctime>
#include <cmath>
#include <vector>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <climits>
#include <iostream>
#include <algorithm>


using namespace std;

long int temp,i,j,k,T;

#define CASE while(T--)
#define FOR(I,A,B) for(I=A;I<B;I++)
#define REP(i,n) FOR(i,0,n)
#define FORR(I,J,K) for(I=J;I>K;I--)
#define JAM(N) printf("Case #%ld:",N)
#define INPUT(A) freopen(A,"r",stdin);
#define OUTPUT(A) freopen(A,"w",stdout);

#define EXP 1e-10
#define INF	(int)1e9

#define F first
#define S second

typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<int,PII> TRI;

#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%ld",&n)
#define sll(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%f",&n)
#define slf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)

int next(){
    char c;int num=0;
    c=getchar_unlocked();
    while(!(c>='0' && c<='9')) c=getchar_unlocked();
    while(c>='0' && c<='9'){
        num=(num<<3)+(num<<1)+c-'0';
        c=getchar_unlocked();
    }
    return num;
}

//main code is here
#define MAX 2007

void solve(char b[])
{
	int n=strlen(b);
	int dp[MAX][30][30]={0};
	
	char a[MAX]={1};
	REP(i,n) a[i+1]=b[i]; n++;
	
	FOR(i,1,27)
	FOR(j,1,27)
	dp[0][i][j]=-1;
	
	FOR(i,1,n)
	FOR(j,0,27)
	FOR(k,0,27)
	{
		int t=a[i]-'a'+1;
		dp[i][j][k]=max(dp[i][j][k],dp[i-1][j][k]);
		
		if(j<=t)
			dp[i][t][k]=max(dp[i][t][k],dp[i-1][j][k]+1);
		if(k>=t)
			dp[i][j][t]=max(dp[i][j][t],dp[i-1][j][k]+1);
	}
	int ans=-1;
	n--;
	FOR(i,0,27)
	FOR(j,0,27)
	ans=max(ans,dp[n][i][j]);
	
	cout<<ans<<endl;
}
main()
{
	sl(T);
	CASE
	{
		char a[MAX];
		ss(a);
		solve(a);
	}
	return 0;
}