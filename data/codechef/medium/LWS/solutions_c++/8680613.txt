#include <iostream>
#include <stdio.h>
#include <vector>
#include <string.h>
using namespace std;
#define MAXN 2002
typedef long long ll;
int dp[MAXN][27][27];
char S[MAXN];
void solve() {
    scanf("%s", S);
    int N = strlen(S);
    for(int i = 0; i < N; i++) for(int j = 0; j < 27; j++) for(int k = 0; k < 27; k++) dp[i][j][k] = 0;
    dp[0][S[0] - 'a' + 1][0] = 1;
    dp[0][0][S[0] - 'a' + 1] = 1;
    for(int k = 1; k < N; k++) {
        for(int i = 0; i < 27; i++) {
            for(int j = 0; j < 27; j++) {
                dp[k][i][j] = dp[k - 1][i][j];
            }
        }
        int now = S[k] - 'a' + 1;
        for(int i = 0; i <= now; i++) {
            for(int j = 0; j < 27; j++) {
                dp[k][now][j] = max(dp[k][now][j], dp[k - 1][i][j] + 1);
            }
        }
        for(int j = now; j < 27; j++) {
            for(int i = 0; i < 27; i++) {
                dp[k][i][now] = max(dp[k][i][now], dp[k - 1][i][j] + 1);
            }
        }
        for(int i = 0; i < 27; i++) {
            dp[k][i][now] = max(dp[k][i][now], dp[k - 1][i][0] + 1);
        }
    }
    //cout << dp[1][1][0] << endl;
    int ans = 0;
    for(int i = 0; i < 27; i++) for(int j = 0; j < 27; j++) ans = max(ans, dp[N - 1][i][j]);
    //for(int i = 0; i < N; i++) cout << dp[i][0] << " "; cout << endl;
    //for(int i = 0; i < N; i++) cout << dp[i][1] << " "; cout << endl;
    //int ans = 0;
    //for(int i = 0; i < N; i++) ans = max(ans, dp[i][0]);
    //for(int i = 0; i < N; i++) ans = max(ans, dp[i][1]);
    printf("%d\n", ans);
}
int main() {
    int t = 1; scanf("%d", &t);
    while(t--) solve();
}
