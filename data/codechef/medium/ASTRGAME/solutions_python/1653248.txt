__author__ = 'robert'
from collections import defaultdict
import sys

def solve(cache, between, i, j):
    if (i, j) in cache:
        return cache[(i, j)]
    if not between[(i, j)]:
        return 0
    if len(between[(i, j)]) == 1:
        return 1
    grundy_numbers = set()
    for word in between[(i, j)]:
        start, end = word
        grundy_numbers.add(
            solve(cache, between, i, start) ^ solve(cache, between, end, j)
        )
    mex = 0
    while mex in grundy_numbers:
        mex += 1
    cache[(i, j)] = mex
    return mex



def run():
    input_ = (i.strip() for i in sys.stdin)
    test_cases = int(next(input_))
    for case in range(test_cases):
        s = next(input_)
        n = int(next(input_))
        words = [next(input_) for i in range(n)]
        word_locations = []
        for i in range(len(s)):
            for j in range(i + 1, len(s) + 1):
                if s[i:j] in words:
                    word_locations.append((i, j))
        between = defaultdict(list)
        for word in word_locations:
            start, end = word
            for i in range(start + 1):
                for j in range(end, len(s) + 1):
                    between[(i, j)].append(word)
        cache = {}
        print "Teddy" if solve(cache, between, 0, len(s)) else "Tracy"

run()