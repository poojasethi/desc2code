//#pragma comment(linker, "/STACK:16777216")

#include <fstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <functional>
#include <string>
#include <string.h>
#include <vector>
#include <map>
#include <set>
#include <list>
#include <queue>
#include <stack>
#include <algorithm>
#include <math.h>
#include <ctime>

#define forn(i, n) for (int i = 0; i < (int)(n); i++)
#define fornd(i, n) for (int i = (int)(n) - 1; i >= 0; i--)
#define forab(i, a, b) for (int i = (int)(a); i <= (int)(b); i++)
#define forabd(i, b, a) for (int i = (int)(b); i >= (int)(a); i--)
#define sz(a) (int)(a).size()
#define all(a) (a).begin(), (a).end()
#define zero(a) memset(a, 0, sizeof(a))
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef unsigned long long ull;
const long long INF = 1000000000;

using namespace std;

void prepare(){
#ifdef _DEBUG
	freopen("input.txt", "r", stdin);
	//freopen("output.txt","w", stdout);
#endif
}

string	s;
string w[50];
int n;
int dp[50][50];

int grandy(int i1, int j1){
	if (i1 > j1) return 0;
	if (dp[i1][j1] != INF) return dp[i1][j1];

	set <int> mex;
	for (int i = 0; i < n; i++)
	{
		for (int j = i1; w[i].length() <= j1 - j + 1; j++)
		{
			if (s.substr (j, w[i].length() ) == w[i]){
				mex.insert ( grandy( i1, j - 1 ) ^ grandy ( j + w[i].length(), j1 ) );
			}
		}
	}
	for (int i = 0; ; i++)
		if (mex.count (i) == 0 ){
			dp[i1][j1] = i;
			return i;
		}
}

int main(){
	prepare();
	
	int t;
	scanf("%d", &t);
	for (int i = 0; i < t; i++){
		for (int qwe = 0; qwe < 50; qwe++)
			for (int qwj = 0; qwj < 50; qwj++)
				dp[qwe][qwj] = INF;
		
		cin >> s;
		scanf("%d", &n);	
		for (int j = 0; j < n; j++)
			cin >> w[j];
		
		if ( grandy (0, s.length() - 1 ) == 0){
			printf("Tracy\n");
		}else{
			printf("Teddy\n");
		}
	}
	return 0;
}
