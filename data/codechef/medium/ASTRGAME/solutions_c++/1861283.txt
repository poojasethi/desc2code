#include <cstdio>
#include <cassert>
#include <cstring>
#include <set>
#define REP(i,n) for (int i = 0; i < (int)n; i++)
using namespace std;

const int MAX = 50;
int T, L, N, len[MAX], grundy[MAX][MAX];
char S[MAX], dict[MAX][MAX];
bool valid[MAX][MAX];

int main()
{
	scanf("%d", &T);
	while (T--)
	{
		scanf("%s", S);
		L = strlen(S);
		scanf("%d", &N);
		REP(d, N)
		{
			scanf("%s", dict[d]);
			len[d] = strlen(dict[d]);
		}

		memset(valid, false, sizeof valid);
		REP(i, L)
			REP(d, N)
				if (i+len[d]-1 < L && !memcmp(S+i, dict[d], len[d]))
					valid[i][d] = true;

		memset(grundy, 0, sizeof grundy);
		REP(n, L)
			REP(i, L-n)
			{
				int j = i+n+1;
				set<int> mex;
				for (int k = i; k < j; k++)
					REP(d, N)
						if (k+len[d]-1 < j && valid[k][d])
							mex.insert(grundy[i][k] ^ grundy[k+len[d]][j]);
				while (mex.count(grundy[i][j]))
					grundy[i][j]++;
			}
		puts(grundy[0][L] ? "Teddy" : "Tracy");
	}
}

