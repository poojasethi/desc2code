//problema A
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
 
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <list>
 
#include <sstream>
#include <iostream>
#include <iomanip>
 
using namespace std;
 
typedef  long long int64;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int i = a; i < (int)(n); i++)
#define pb push_back
#define mp make_pairre
#define fs first
#define sc second
#define sz(a) (a).size()
#define all(a) a.begin(), a.end()
#define VI vector<int>
#define PII vector<pair<int,int> >
#define iss istringstream //>>
#define MAX 250005
#define MOD 1000000007
const long double EPS = 1E-9;
const int INF = (int)1E9;
const int64 INF64 = (int64)1E18;
const long double PI = 2 * acos(.0);
 
 
bool match[40][40]; //i = pos, j = len
int grundy[40][40]; //i = len ,  j = pos
int mini [400];
int main(){
	int t, n, cadlen, auxlen;
	string cad, aux;
	cin >> t;
	while(t--){
		forn(i, 40) forn(j, 40) match[i][j] = 0;
//		memset(match , false, sizeof(match));
		cin >> cad >> n;
		cadlen = sz(cad);
		forn(i, n){
			cin >> aux;
			auxlen = sz(aux);
			int pos = 0;
			while((pos = cad.find(aux, pos)) != -1){
				match[pos][auxlen] = true;
			//	cout << pos << " " << auxlen << endl;
				pos ++;
			}
		}
		forn(i, cadlen + 1) grundy[0][i] = 0;
		fore(i, 1, cadlen + 1){
			forn(j, cadlen - i + 1 ){
				memset(mini, false, sizeof(mini));
			//	cout << "id: "<< j << " " << i << endl;
				fore(k, j, j + i){
					forn(l , i + j- k + 1){
						
				//		cout << k << " " << l << endl;
						if(match[k][l]){	
							int xl, yl, xr, yr;
							xl = j;
							xr = k - j;
							yl = k + l ;
							yr = j + i - yl;
		//			cout << j << " " << i << endl;
			//			cout << k << " " << l << endl;
		//cout << xl << " " << xr << " " << yl << " " << yr << endl;
							mini[grundy[xr][xl] ^ grundy[yr][yl]] = true;
						}
					}
				}
				int cur = 0;
				while(mini[cur]) cur++;
				grundy[i][j] = cur; 
			} 
		}
		
		/*forn(i, cadlen + 1 ){
			forn(j, cadlen - i + 1){
				cout << grundy[i][j] << " " ;
			}
			cout << endl;
		}*/
		if(grundy[cadlen][0]) cout << "Teddy" << endl;
		else cout << "Tracy"<< endl;
	}
	return 0;
}