#include <bits/stdc++.h>
 
using namespace std;
 
int t,n,l[30],memo[30][30];
string s,w[30];
 
int grundy(int a, int b) {
	if (a > b) return 0;
	if (memo[a][b] > -1) return memo[a][b];
	int ls = b-a+1;
	bool g[31]; memset(g, 0, sizeof g);
	for (int i = 0; i < ls; i++)
		for (int j = 0; j < n; j++)
			if (ls-i >= l[j]) {
				bool valid = 1;
				for (int k = 0; k < l[j] && valid; k++)
					if (s[a+i+k] != w[j][k]) valid = 0;
					
				if (valid)
					g[grundy(a,a+i-1) ^ grundy(a+i+l[j],b)] = 1;
			}
	int i = 0;
	while (i <= 30 && g[i]) i++;
	return memo[a][b] = i;
}
 
int main() {
	ios::sync_with_stdio(0);
	cin>>t;
	while (t--) {
		cin>>s>>n;
		for (int i = 0;i < n; i++)
			cin>>w[i], l[i] = (int) w[i].length();
			
		memset(memo, -1, sizeof memo);
			
		if (grundy(0, s.length()-1) > 0)
			cout<<"Teddy"<<endl;
		else
			cout<<"Tracy"<<endl;
	}
	return 0;
}
