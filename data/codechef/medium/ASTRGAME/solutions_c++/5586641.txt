// adijimmy
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
const int MAX = 32;
char s[MAX];
char sbs[MAX][MAX];
int n,len[MAX];
int dp[MAX][MAX];
int solve(int l,int r){
 if(l>r)
    return 0;
 if(dp[l][r] != -1)
    return dp[l][r];
 set<int> st;
 for(int i=0;i<n;i++){
    for(int j=l;j<=r;j++){
        if(strncmp(s+j,sbs[i],len[i])==0 && j+len[i]-1<=r)
            st.insert(solve(l,j-1) xor solve(j+len[i],r));
    }
 }
 int res = 0;
 set<int>:: iterator it;
 for(it=st.begin();it!=st.end();it++){
   if((*it)!=res){
    dp[l][r] = res;
    return dp[l][r];
   }
   res++;
 }
  dp[l][r] = res;
  return dp[l][r];
}
int main(){
int t;
cin >> t;
while(t--){
  scanf("%s",s);
  cin >> n;
  for(int i=0;i<n;i++){
    scanf("%s",sbs[i]);
    len[i] = strlen(sbs[i]);
  }
  memset(dp,-1,sizeof dp);
  solve(0,strlen(s)-1);
  if(dp[0][strlen(s)-1])
    puts("Teddy");
  else
    puts("Tracy");
}
return 0;
}
