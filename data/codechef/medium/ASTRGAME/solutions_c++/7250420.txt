# include <bits/stdc++.h>

# define INF 0x7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned LL 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;


using namespace std;

int debug=1;
const int LIM=1e5;


/* MAIN PROGRAM STARTS HERE */


int main()
	{
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	LL T,n,i,j,k,l,m,x,y,z;
	
	cin>>T;
	while(T--)
		{
		string s,s2;
		cin>>s; LL l=s.length();
		cin>>n;
		map <string,LL> M;
		REP(i,n)
			{
			cin>>s2;
			M[s2]=1;
			}
		
		int dp[l+2][l+2];
		memset(dp,0,sizeof(dp));
		LL child_grundy[LIM];
		memset(child_grundy,0,sizeof(child_grundy));
		LL z=0;
		for (LL len=1; len<=l; len++)
			{
			for (i=0; i<=l-len; i++)
				{
				j=i+len-1;
				z++;
				if (M.find(s.substr(i,len))!=M.end()) child_grundy[0]=z;
				for (LL p=1; p<len; p++)
					{
					for (LL t=i; t<=j-p+1; t++)
						{
						s2=s.substr(t,p);
						if (M.find(s2)!=M.end())
							{
							if (t==i)
								child_grundy[dp[t+p][j]]=z;
							else if (t==j-p+1)
								child_grundy[dp[i][t-1]]=z;
							else
								child_grundy[dp[i][t-1] ^ dp[t+p][j]]=z;
							}
						}
					}
				y=0;
				while (child_grundy[y]==z) y++;
				dp[i][j]=y;
				}
			}
			
		if (dp[0][l-1]) cout<<"Teddy\n";
		else cout<<"Tracy\n";
		}
	
	return 0;
	}