#include <iostream>
#include <vector>
#include <string>
#include <set>
#include <iterator>

using namespace std;

#define REP(i,n) FOR(i,0,n)
#define FOR(i,a,b) for(int i = a; i < b; i++)

vector<vector<int> > gr;
vector<string> dict;
string ip;
int len;

int grundy(int a, int b) {
  if (a > b || a < 0 || a >= len || b < 0 || b >= len)
	return 0;
  if (gr[a][b] != -1)
	return gr[a][b];
//  cout << a << ' ' << b << endl;
  set<int> s;
  
  int sz = dict.size(), pos;
  string temp;
  REP(i,sz) {
	temp = ip.substr(a,b-a+1);
	int tl = temp.length();
	string temp2 = temp;
	REP(j,tl) {
	  temp = temp2.substr(j,tl-j);
	  pos = temp.find(dict[i]);
	  if (pos == string::npos) 
		continue;
	
	  s.insert(grundy(a,a+j+pos-1) ^ grundy(a+j+pos+dict[i].length(),b));
	}
  }
  
  gr[a][b] = 0;
  set<int>::iterator iter;
  for (iter = s.begin(); iter != s.end(); ++iter) {
	if (*iter == gr[a][b])
	  gr[a][b]++;
	else
	  break;
  }
  
  return gr[a][b];
}

int main() {
  int T;
  cin >> T;
  while(T--) {
	cin >> ip;
	
	len = ip.length();
	gr.clear(); 
	gr.resize(len);
	REP(i,len) {
	  gr[i].resize(len);
	  fill(gr[i].begin(), gr[i].end(), -1);
	}
	
	int sz;
	cin >> sz;
	dict.clear();
	dict.resize(sz);
	REP(i,sz) cin >> dict[i];
	
	if (grundy(0,len-1) != 0)
	  cout << "Teddy" << endl;
	else
	  cout << "Tracy" << endl;
  }
}