#include<iostream>
#include<cstring>
#include<vector>
#include <algorithm>
#include<cstdio>
using namespace std;
int dp[101][101];
vector<int> v[100];
int solve(int l,int r)
{
    if (r-l<0)
        return 0;
    if (dp[l][r]!=-1)
        return dp[l][r];
    bool g[101]={0};
    for (int i=l;i<=r;i++)
    {
        int x=v[i].size();
        for (int j=0;j<x;j++)
        {
            int s=i,e=v[i][j];
            if (e>r)
                continue;
            int ans= solve(l,s-1) ^ solve(e+1,r);
            g[ans]=1;
        }
    }
    int ret=0;
    while(g[ret])
        ret++;
    return dp[l][r]=ret;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        string s;
        cin>>s;
        int n=s.length();
        for (int i=0;i<n;i++)
            v[i].clear();
        memset(dp,-1,sizeof(dp));
        int m;
        cin>>m;
        while(m--)
        {
            string x;
            cin>>x;
            int k=x.length();
            for (int i=0;i+k-1<n;i++)
            {
                if (s.substr(i,k)==x)
                    v[i].push_back(i+k-1);
            }
        }
        if (solve(0,n-1))
            cout<<"Teddy"<<endl;
        else
            cout<<"Tracy"<<endl;
    }
}
