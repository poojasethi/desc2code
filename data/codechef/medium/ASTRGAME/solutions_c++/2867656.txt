#include <cstring>
#include<cstdio>
#include<vector>
#include<stack>
#include<map>
#include<queue>
#include<set>
#include<list>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<climits>
#include<cstdlib>
#define snd(a) scanf("%d",&(a))
#define snlld(a) scanf("%lld",&(a))
#define rep(i,n) for((i)=0;(i)<(n);(i)+=1)
#define reps(i,s,n) for((i)=(s);(i)<(n);(i)+=1)
#define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define pb push_back
#define pf push_front
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define fill(a,v) memset((a),(v),sizeof(a))
#define sz size()
#define mp make_pair
#define N 100010
#define mod  1000000007
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
template<class T> inline T poww(T b,T p){ll a=1;while(p){if(p&1){a=(a*b);}p>>=1;b=(b*b);}return a;}
template<class T> inline T modpoww(T b,T p,T mmod){ll a=1;while(p){if(p&1){a=(a*b)%mmod;}p>>=1;b=(b*b)%mmod;}return a%mmod;}
template<class T>  inline T gcd(T a,T b){ if(b>a)return gcd(b,a);return ((b==0)?a:gcd(b,a%b));}
template<class T> inline void scan(vector<T>& a,int n){T b;int i; rep(i,n){cin>>b;a.pb(b);}}
#define modd  20071027
#define pii pair<int,int>
#define vpii vector<pii >
#define vi vector<int>
#define vvi vector<vi >
#define vl vector<long long>
#define fr first
#define sd second
#define mx 50

bool match[mx][mx];
int grundy[mx][mx];
//int ln[mx];
int main(){

    int i,j,k,t,n,l,d;
    vector<string>a;
    string s;
    snd(t);
    while(t--){
        cin>>s;
        l=s.sz;
        snd(n);
        a.clear();
        scan<string>(a,n);
        rep(i,l){
            rep(j,n){
                match[i][j]=false;
                match[i][j]=(s.compare(i,a[j].sz,a[j]))?false:true;//pos,len,str
               // if(match[i][j])cout<<i<<" "<<j<<":\n";
            }
        }
        rep(i,mx)rep(j,mx)grundy[i][j]=0;
        k=1;
        while(k<=l){
            rep(i,l){
                if(i+k-1>l-1)break;
                set<int> xors;
                reps(j,i,i+k){
                    rep(d,n){
                        if(j+a[d].sz-1<=i+k-1){
                            if(match[j][d]){
                                xors.insert(grundy[i][j]^grundy[j+a[d].sz][i+k]);
                            }
                        }
                    }
                }
                while(xors.count(grundy[i][i+k]))grundy[i][i+k]++;
            }
            k++;
        }
        cout<<(grundy[0][l]?"Teddy":"Tracy")<<"\n";
    }
}







