#include <iostream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <math.h>
#include <cstdio>
 
#define FOR(i,x,y) for(int i=(x);i<(y);i++)
#define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
#define MIN(x,y) ((x)<(y)?(x):(y))
#define MAX(x,y) ((x)>(y)?(x):(y))
#define ABS(x) ((x)>0?(x):-(x))
#define SQ(x) ((x)*(x))
#define mset(x,y) memset(x,y,sizeof(x))

typedef long long int lli;
typedef long double ld;

using namespace std;

char str[40];
char dic[40][40];
int size[40];
int G[40][40];
int n;

bool chk(int i, int j)
{
	bool c;
	for(int k=0;k<n;k++)
	if(size[k]==j-i+1)
	{
		c=1;
		for(int l=i;l<=j;l++) if(dic[k][l-i]!=str[l]) c=0;
		if(c) return 1;
	}
	return 0;
}

int calc(int i, int j)
{
	if(i>j) return 0;
	int temp;
	if(G[i][j]==-1)
	{
		set<int> mex;
		for(int k=i;k<=j;k++)
		for(int l=k;l<=j;l++)
		if(chk(k,l))
		{
			temp=calc(i,k-1)^calc(l+1,j);
			mex.insert(temp);
		}
		G[i][j]=0;
		while (mex.count(G[i][j])) G[i][j]++;
	}
	return G[i][j];
}
int main()
{
    //freopen("inp.txt","r",stdin);
    int t;
    int s;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%s",str);
    	scanf("%d",&n);
    	s=strlen(str);
    	for(int i=0;i<n;i++) {scanf("%s",dic[i]);size[i]=strlen(dic[i]);}
    	mset(G,-1);
    	if(calc(0,s-1)) printf("Teddy\n");
    	else printf("Tracy\n");
    }
    return 0;
    
}