#include<bits/stdc++.h>
using namespace std;
 
int marked[11];
int cost[11][11];
int costi;
int diff=1;
int searc(vector<vector<int> >&graph, int des, int reach,int journey,int marked[])
{	if(journey>costi)
	{	return 0;
	}
	if(reach==des)
	{//	cout<<"cost"<<costi<<" "<<journey<<endl;
		if(costi>journey)
		{	costi=journey;
			diff=1;
		}
		else if(costi==journey)
		{	diff++;
		}
		return 0;
	}
//	cout<<"p"<<endl;
//	cout<<reach<<" "<<endl;
	int seconm[11];
	for(int i=0;i<11;i++)
	{	seconm[i]=marked[i];
	}
	for(int i=0;i<graph[reach].size();i++)
	{	int ch=graph[reach][i];
	//	cout<<"ch"<<ch<<endl;
		if(seconm[ch]==0)
		{	seconm[ch]=1;
			searc(graph,des,ch,journey+cost[reach][ch],seconm);
			seconm[ch]=0;
		}
	}
	
	return 0;
}
int main()
{	int t;
	cin>>t;
	while(t-->0)
	{	int n;
		int m;
		cin>>n>>m;
		vector<vector<int> > graph(n+1);
		for(int i=0;i<m;i++)
		{	int k1,k2,k3;
			cin>>k1>>k2>>k3;
			graph[k1].push_back(k2);
			graph[k2].push_back(k1);
			cost[k1][k2]=k3;
			cost[k2][k1]=k3;
		}
		for(int i=0;i<11;i++)
		{	marked[i]=0;
		}
		costi=100000000;
		int des=n;
		marked[1]=1;
		searc(graph,n,1,0,marked);
		cout<<diff<<endl;
	}
}