#include<bits/stdc++.h>
using namespace std;
const int INF = 1e8;
typedef long long LL;
int dis[20][20];
int org[20][20];
LL ways[20][20];
int main(){
	int t;
	cin >> t;
	while(t--){
		int N, M;
		scanf("%d%d", &N, &M);
		for(int i =1;i <= N;++i){
			for(int j = 1;j <= N;++j){
				dis[i][j] = INF;
				ways[i][j] = 0;
				org[i][j] = INF;
			}
			ways[i][i] = 0;
			dis[i][i] = 0;
			org[i][i] = 0;
		}
		while(M--){
			int A, B, C;
			scanf("%d%d%d", &A, &B, &C);
			dis[A][B] = C;
			dis[B][A] = C;
			org[A][B] = C;
			org[B][A] = C;
		}
		for(int k = 1;k <= N;++k){
			for(int i = 1;i <= N;++i){
				for(int j = 1;j <= N;++j){
					dis[i][j] = min(dis[i][j], dis[i][k] + dis[k][j]);
				}
			}
		}
		for(int i = 1;i <= N;++i){
			for(int j = 1;j <= N;++j){
				if(org[i][j] != INF && org[i][j] == dis[i][j])
					ways[i][j] = 1;
			}
		}
		for(int k = 1;k <= N;++k){
			for(int i = 1;i <= N;++i){
				for(int j = 1;j <= N;++j){
					if(i != k && j != k && dis[i][j] == dis[i][k] + dis[k][j]){
						ways[i][j] += ways[i][k] * ways[k][j];
					}
				}
			}
		}
		printf("%lld\n", ways[1][N]);
	}
	return 0;
}