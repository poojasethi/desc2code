#include<iostream>
using namespace std;
int n,m;
int visited[11]={0};
int graph[11][11]={0};
#define INT_MAX 1000000
int len=INT_MAX;
int count=0;
void dfs(int i,int path)
{
    if(i==n)
    {
        if(path<len)
        {
        len=path;
        count=1;
        }
        else if(path==len)
        count++;
        return;
    }
    if(path>len)
    return;
    visited[i]=1;
    for(int j=1;j<=n;j++)
    {
        if(graph[i][j]&&(visited[j]==0))
        dfs(j,path+graph[i][j]);
    }
    visited[i]=false;
}
int main()
{
    int test;
    cin>>test;
    while(test--)
    {
        cin>>n>>m;
        for(int i=1;i<=m;i++)
        {
            int first,second,dis;
            cin>>first>>second>>dis;
            graph[first][second]=dis;
            graph[second][first]=dis;
        }
        int path=0;
        count=0;
        len=INT_MAX;
        dfs(1,path);
        cout<<count<<endl;
        for(int i=0;i<11;i++)
        visited[i]=0;
        for(int i=0;i<11;i++)
        for(int j=0;j<11;j++)
        graph[i][j]=0;
    }
    return 0;
}
