//Franky

#include<bits/stdc++.h>
#define  mp make_pair
#define MOD 1000000007
using namespace std;

vector < vector < pair<int,int> > > g (1001);
int n;
long long  d[1001];
long long  dp[1001];
bool visited[1001];
void shrt_path(int source)
{

	int i;
	
	for(i=0;i<n+1;i++)
	d[i]=INT_MAX;
	d[source] = 0;
	
	priority_queue < pair<int,int> > q;
	q.push (make_pair (0, source));
	while (!q.empty()) {
		int v = q.top().second,  cur_d = -q.top().first;
		q.pop();
		if (cur_d > d[v])  continue;
 
		for (size_t j=0; j<g[v].size(); ++j) {
			int to = g[v][j].first,
				len = g[v][j].second;
			if (d[v] + len < d[to]) {
				d[to] = d[v] + len;
				dp[to]=dp[v];
				//p[to] = v;
				q.push (make_pair (-d[to], to));
			}
		else
			if (d[v] + len ==d[to]) {
				d[to] = d[v] + len;
				dp[to]+=dp[v];
				//p[to] = v;
			//	q.push (make_pair (-d[to], to));
			}
		
		}
	}
}
	
	
	


	
	

/*

long long dfs(int s)
{
if(s==1)
return 1;
	if(visited[s])
	return dp[s];
	visited[s]=1;
	
	long long cnt=0;
for (size_t j=0; j<g[s].size(); ++j) {
			int to = g[s][j].first;
		
			
		if(d[s]>d[to])
		cnt+=dfs(to);
		}

return dp[s]=cnt%MOD;

}
*/

int  main()
{
	
int t,m,a,b,val;;
scanf("%d",&t);
while(t--)
{int i;
	scanf("%d",&n);
		if(n==0)
		break;
		scanf("%d",&m);
		for(i=0;i<m;i++)
		{
		
		scanf("%d",&a);
		scanf("%d",&b);
		scanf("%d",&val);
		a-=1;
		b-=1;
		g[a].push_back(mp(b,val));
		g[b].push_back(mp(a,val));
		
		}
		
	

	for(i=0;i<n;i++)
	dp[i]=0,visited[i]=0;
	dp[0]=1;
	
//cout<<"good"<<endl;	
//for(i=0;i<n;i++)
//cout<<d[i]<<endl;
//printf("%lld\n",dfs(0));
	shrt_path(0);
	cout<<dp[n-1]<<endl;
for(i=0;i<n;i++)
g[i].clear();
}
return 0;
}




	
	
	
