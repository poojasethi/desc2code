#include<iostream>
#include<stdlib.h>
using namespace std;
void merge(long long int *,int, int , int );
void mergesort(long long int *a, int low, int high)
{
    int mid;
    if (low < high)
    {
        mid=(low+high)/2;
        mergesort(a,low,mid);
        mergesort(a,mid+1,high);
        merge(a,low,high,mid);
    }
    return;
}
void merge(long long int *a, int low, int high, int mid)
{
    int i, j, k;
    long long int c[5000];
    i = low;
    k = low;
    j = mid + 1;
    while (i <= mid && j <= high)
    {
        if (a[i] < a[j])
        {
            c[k] = a[i];
            k++;
            i++;
        }
        else
        {
            c[k] = a[j];
            k++;
            j++;
        }
    }
    while (i <= mid)
    {
        c[k] = a[i];
        k++;
        i++;
    }
    while (j <= high)
    {
        c[k] = a[j];
        k++;
        j++;
    }
    for (i = low; i < k; i++)
    {
        a[i] = c[i];
    }
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        long long int a[n];

        for(int i=0;i<n;i++)
        {
            cin>>a[i];
        }
        mergesort(a,0,n-1);
        long long int min = 999999999;
        for(int i=0;i<n;i++)
        {
            if(i!=n-1){
                    long long int sub = a[i+1] - a[i];
                    if(sub<min)
                    {
                        min = sub;
                    }

            }

        }
        cout<<min<<endl;

    }

}
