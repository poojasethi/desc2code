#include<bits/stdc++.h>
using namespace std;

const int INF = 1e8;
char grid[60][60];
int L[60][60];
int R[60][60];
int T[60][60];
int B[60][60];

int main(){
    int t;
    cin >> t;
    while(t--){
        int N, M;
        scanf("%d%d", &N, &M);
        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= M;++j){
                scanf(" %c", &grid[i][j]);
            }
        }
        for(int i = 1;i <= N;++i){
            L[i][0] = 0;
            for(int j = 1;j <= M;++j){
                if(grid[i][j] == '#'){
                    L[i][j] = 0;
                } else {
                    L[i][j] = (L[i][j - 1] + 1);
                }
            }
            R[i][M + 1] = 0;
            for(int j = M;j >= 1;--j){
                if(grid[i][j] == '#'){
                    R[i][j] = 0;
                } else {
                    R[i][j] = (R[i][j + 1] + 1);
                }
            }
        }
        for(int j = 1;j <= M;++j){
            T[0][j] = 0;
            for(int i = 1;i <= N;++i){
                if(grid[i][j] == '#'){
                    T[i][j] = 0;
                } else {
                    T[i][j] = (T[i - 1][j] + 1);
                }
            }
            B[N + 1][j] = 0;
            for(int i = N;i >= 1;--i){
                if(grid[i][j] == '#'){
                    B[i][j] = 0;
                } else {
                    B[i][j] = (B[i + 1][j] + 1);
                }
            }
        }
        int ans = 0;
        for(int i = 1;i <= N;++i){
            for(int j = 1;j <= M;++j){
                if(grid[i][j] == '#') continue;
                int l = L[i][j] - 1;
                int r = R[i][j] - 1;
                int t = T[i][j] - 1;
                int b = B[i][j] - 1;
                int cur = INF;
                cur = min(cur, l);
                cur = min(cur, r);
                cur = min(cur, t);
                cur = min(cur, b);
                if(cur >= 2) ++ans;
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
