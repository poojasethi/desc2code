#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>

using namespace std;

/*typedef long long int64;
typedef unsigned long long uint64;*/
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
/*template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}*/
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define ll long long int
#define Si(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
#define Pi(x) printf("%d",x);
#define nl printf("\n");
#define Pl(x) printf("%lld",x);

ll fact[20];int point[10];
void foo()
{
	memset(fact,0,sizeof(fact));fact[0]=1;
	for(int i=1;i<=18;i++)
	{
		fact[i]=fact[i-1]*i;
	}
}

ll cal()
{
	int l=0;
	for(int i=0;i<10;i++)l+=point[i];
	ll z=fact[l];
	for(int i=0;i<=9;i++)
	{
		z=z/fact[point[i]];
	}
	return z;
}
int main()
{
		int T,a[20];char s[20];
		Si(T);
		foo();
		while(T--)
		{
			ll sum=0;
			memset(point,0,sizeof(point));
			scanf("%s",s);
			for(int i=0;s[i];i++)
			{
				a[i]=s[i]-'0';
				point[a[i]]++;
			}
			int p=0,i=0;
			int l=strlen(s);
			while(i<l)
			{
				if(point[p]>0&&a[i]>p)
				{
					point[p]--;
					sum+=cal();
					point[p]++;
					p++;
				}
				else if(point[p]>0&&a[i]==p)
				{
					point[p]--;
					p=0;
					i++;
				}
				else p++;
			}
			Pl(sum+1);nl;
		}
}