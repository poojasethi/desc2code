#include <iostream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <math.h>
#include <cstdio>
 
#define FOR(i,x,y) for(int i=(x);i<(y);i++)
#define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
#define MIN(x,y) ((x)<(y)?(x):(y))
#define MAX(x,y) ((x)>(y)?(x):(y))
#define ABS(x) ((x)>0?(x):-(x))
#define SQ(x) ((x)*(x))
#define mset(x,y) memset(x,y,sizeof(x))

typedef long long int lli;
typedef long double ld;

using namespace std;

lli fact[20];

void init()
{
	fact[0]=1;
	for(int i=1;i<20;i++) fact[i]=fact[i-1]*(lli)i;
}

int main()
{
   // freopen("inp.txt","r",stdin);
    init();
    lli n;
    int t;
    int a[10];
    int dig[20];
    int size;
    lli prod,rank;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%lld",&n);
    	size=rank=0;
    	mset(a,0);
    	while(n)
    	{
    		a[n%10]++;
    		dig[size++]=n%10;
    		n/=10;
    	}
    	reverse(dig,dig+size);
    	for(int i=0;i<size;i++)
    	{
    		for(int j=0;j<dig[i];j++)
    			{
    				if(a[j]>0)
    				{
    					prod=fact[size-1-i];
    					a[j]--;
    					for(int k=0;k<10;k++) prod/=fact[a[k]];
    					a[j]++;
    					rank+=prod;
    				}
    			}
    		a[dig[i]]--;
    	}
    	printf("%lld\n",rank+1);
    }
    return 0;
    
}