#include <iostream>
#include <cstdio>
#include <vector>
#include <queue>
#include <stack>
#include <cassert>
#include <cstdlib>
#include <cmath>
#include <utility>
#include <algorithm>
#include <map>
#include <climits>
#include <string>
#include <cstring>
using namespace std;
 
typedef long long LL;
typedef unsigned long long ULL;
typedef vector<int> VI;
typedef vector<ULL> VULL;
typedef vector<LL> VLL;
 
#define MX LONG_MAX
#define MN LONG_MIN
#define SZ 19
#define REP(i, s, e) for(int i = (s); i <= (e); ++i)
#define FOR(i, s, n) for(int i = (s); i < (n); ++i)
#define FORALL(i, n) for(int i = 0; i < (n); ++i)
#define pushb push_back
#define MOD 1000000007

LL fact[SZ] = {0};

void fn(int n) {
	fact[0] = fact[1] = 1;
	FOR(i, 2, n) fact[i] = i*fact[i-1]; 
} 

int main() {
	int t;
	fn(SZ);
	cin >> t;
	while (t--) {
		LL n;
		cin >> n;
		int hash[10] = {0}, d, len = 0, num[20];
		LL dum = n;
		while (dum) {
			hash[dum%10]++;
			num[len++] = dum%10;
			dum /= 10;
		}
		dum = n;
		LL rank = 0, r, tillnow = 0;
		for (int k = len-1; k >= 0; k--) {
			tillnow++;
			d = num[k];
			FORALL(i, d) {
				if (!hash[i]) continue;
				r = fact[len-tillnow];
				hash[i]--;
				FORALL(j, 10) {
					if (!hash[j]) continue;
					r /= fact[hash[j]];
				}
				hash[i]++;
				rank += r;
			}
			hash[d]--;
		}
		cout << rank+1 << endl;
	}
	return 0;
}
