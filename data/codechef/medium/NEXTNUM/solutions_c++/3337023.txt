
# include <cstdio>
# include <cstring>
# include <cmath>
# include <cstdlib>
# include <iostream>
# include <vector>
# include <algorithm>
# include <queue>
# include <set>
# include <map>
using namespace std;
typedef long long ll;
ll per(int x){
	ll ans=1;
	while(x>0) ans*=x--;
	return ans;
}
ll calc(int num,int cdig,vector<bool> &avail, vector<int> &sdigits,int len){
	ll ans=num==0?0:per(num);
	//cout<<"num is  "<<num<<" dig is "<<cdig<<endl;
	int cnt=0,prev=-1;
	for(int i=0;i<len;++i){
		if(avail[i]){
			//cout<<"not marked yet i="<<i<<endl;
		//	cout<<"prev is "<<prev<<" and digit is "<<sdigits[i]<<endl;
			if(sdigits[i]!=prev) {
				if(prev==cdig) --cnt;
		//		cout<<"digit is "<<sdigits[i]<<" ans count  is "<<cnt<<endl;
				ans/=per(cnt),prev=sdigits[i],cnt=1;
			}
			else ++cnt;
		}
	}
	//cout<<"prev is "<<prev<<" and cdig is "<<cdig<<endl;
	//if(sdig[len-1]==cdig) --cnt;
	//cout<<" cnt is "<<cnt<<endl;
	ans/=per(cnt);
	//cout<<"ans is "<<ans<<endl;
	return ans;
}
ll findAns(vector<int> const &digits,vector<int> &sdigits,int len){
	int used =0,pos=-1;
	ll ans =0;
	vector<bool> avail(len,true);

	while(++pos<len){
		int prev=-1;
		for(int i=0;i<len;++i){
			if(avail[i] && sdigits[i]<digits[pos] && sdigits[i]!=prev){
				ans+=calc(len-used-1,sdigits[i],avail,sdigits,len);
				prev = sdigits[i];
			}
			else if(avail[i] && sdigits[i]>=digits[pos]) {
				++used;
				avail[i]=false;
				//cout<<"marked pos i="<<i<<endl;
				break;
			}
			//cout<<"------------------------------"<<endl;
		}
	}
	return ans;
}
int main(){
	vector<int> sdigits(18),digits(18);
	int t;
	char num[20];
	scanf("%d",&t);
	while(t--){
		scanf("%s",num);
		int cnt=0;
		while(num[cnt]!='\0'){
			sdigits[cnt]=num[cnt]-'0';
			++cnt;
		}
		for(int i=0;i<cnt;++i)
			digits[i]=sdigits[i];
		sort(sdigits.begin(),sdigits.begin()+cnt);
		cout<<findAns(digits,sdigits,cnt)+1<<endl;
	}
	return 0;
}
