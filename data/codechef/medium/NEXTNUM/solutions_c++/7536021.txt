//codechef problem : Rank of a number 
//problem code :  NEXTNUM
//by Nitish Kumar
//user id : nk17kumar
#include<bits/stdc++.h>
using namespace std;
typedef unsigned long long ll ;
typedef unsigned int ui;
#define br printf("\n")
#define loop(i,k,n) for(int i=k;i<n;i++)
#define loopr(i,k,n) for(int i=k;i>=n;i--)
#define arrin(arrname,size) loop(i,0,size) cin>>arrname[i]
#define fastinput() ios_base::sync_with_stdio(false)
#define mod 1000000007
#define F first
#define S second
#define mp make_pair
#define pb push_back
#define sz(x) ((int)(x).size())
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pq priority_queue 
vector <ll> factorial;
void pre()
{  factorial.pb(1);
	for(int i=1;i<=18;i++)
	{
	factorial.pb(factorial[i-1]*i);
    }
}

int main()
{
	fastinput();
	pre();
//	vector <ll> :: iterator it;
//	loop(i,0,factorial.size())
//	{
//		cout<<factorial[i]<<endl;
//	}
	int t; cin>>t;
	while(t--)
	{
	  char a[20],b[20];
	  cin>>a;
	  int size=0;
	  for(int i=0;a[i]!='\0';i++)
	  {
	  	b[i]=a[i];
	  	size++;
	  }
	  b[size]='\0';
	  sort(b,b+size);
	  //cout<<b;
	 vector < pair <char,int> > cal;
	  int count=1;
	  int p=0;
	  //cout<<endl;
	  loop(i,1,size+1)
	  {
	  	if(b[i]!=b[i-1])
	  	{
	  	   	cal.pb(mp(b[i-1],count));
	  	   	p++;
	  	   	count=1;
		  }
		  else
		  count++;
	  }

	  unsigned long long tmp=1,answer=0;
	  int s=size;
	  loop(i,0,s)
	  {
	  	loop(j,0,p)
	  	{
	  		if(a[i]!=cal[j].F && cal[j].S!=0)
	  		{
	  		   cal[j].S--;
				 loop(k,0,p)
				 {  if(cal[k].S>=0)
				 	tmp*=(ll)factorial[cal[k].S];
					  } 	
//					  cout<<" \ntmp : "<<tmp;
//					  cout<<"  factorial : "<<factorial[size-1];
//					  cout<<"  inserted : "<<factorial[size-1]/tmp;
			   answer+=(ll)factorial[size-1]/tmp;
			   cal[j].S++;	
			   tmp=(ll)1;	  
			}
			else if(a[i]==cal[j].F && cal[j].S!=0)
			{  // cout<<"\n inserted : "<<cal[j].F;
				size--;
				cal[j].S--;
				tmp=(ll)1;
				break;
			}
		  }
	  }
	 printf("%lld\n",answer+1);
	  //cout<<endl<<answer+1;
	  
	  
	  
	  }
	return 0;
}