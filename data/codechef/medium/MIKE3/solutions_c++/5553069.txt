#include<iostream>
#include<bitset>
#include<stdio.h>
#include<vector>

using namespace std;

const int maxn = 20020;
const int maxm = 22;
int n,m;
bool used[maxn], intersect[maxm][maxm];
vector< int > a[ maxn ],s;
int answer = 0;

void find(int pos)
{
	if(pos == m+1)
	{
		answer = max(answer,(int)s.size());
		return;
	}
	find(pos+1);
	bool taken =true;
	for(int i=0;i<s.size();i++) if(intersect[pos][s[i]]) taken = false;
	if(taken)
	{
		s.push_back(pos);
		find(pos+1);
		s.pop_back();
	}
}

int main()
{
	int i,k,j;
	bool flag;
	scanf("%d%d",&n,&m);
	
	for(i=1;i<=m;i++)
	{
		scanf("%d",&k);
		a[i].resize(k);
		for(j=0;j<k;j++)
		{
		    scanf("%d",&a[i][j]);	
		}
	}
	
	
	for(i=1;i<=m;i++)
	{
	    for ( int j = 1; j <= n; j++ ) used[j] = false;	
		for(j=0;j<a[i].size();j++)used[a[i][j]] = true;
		for(j=i+1;j<=m;j++)
		{
			flag = false;
			for(k=0;k<a[j].size();k++)
			if(used[a[j][k]])  flag = true;
		    if(flag == true)
		    intersect[i][j] = intersect[j][i] = true;
		}
	}
	
    find(1);
    cout<<answer<<"\n";
	return 0;
}