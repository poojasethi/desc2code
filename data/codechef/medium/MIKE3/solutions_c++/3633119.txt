#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
//#include <priority_queue>
#include <cmath>
#include <algorithm>
#include <vector>
#define mm 20005
#define clr(A) memset(A,0,sizeof(A))

using namespace std;
//int hash[mm];
const int mod = 1000000009;
typedef long long LL;
int opt[30][30];
int hash[30];
int n,m;
int ans;
vector<int> by[mm];
void input()
{
    scanf("%d%d",&n,&m);
    for(int i = 1;i<=n;i++)
    if(!by[i].empty()) by[i].clear();
    clr(opt);

    for(int i = 1;i<=m;i++)
    {
        int k,x;
        scanf("%d",&k);
        for(int j = 1;j<=k;j++)
        {
            scanf("%d",&x);
            for(int p = by[x].size()-1;p>=0;p--)
            opt[i][by[x][p]] = opt[by[x][p]][i] = 1;
            by[x].push_back(i);
        }
    }
}

void dfs(int k,int sum)
{
    if(k>m || m-k+1+sum<=ans) {ans = max(ans,sum);return ;}
    dfs(k+1,sum);
    if(hash[k] != 0) return ;
    hash[k]++;
    for(int i = 1;i<=m;i++)
    if(opt[k][i]) hash[i]++;
    dfs(k+1,sum+1);
    hash[k]--;
    for(int i = 1;i<=m;i++)
    if(opt[k][i]) hash[i]--;
}

int main()
{
	//freopen("chef.in","r",stdin);
	input();
	ans = 0;
	clr(hash);
	dfs(1,0);
	printf("%d\n",ans);
    return 0;
}
