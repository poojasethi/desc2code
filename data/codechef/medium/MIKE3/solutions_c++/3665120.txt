#include <cstdio>
#include<vector>
#define pb push_back
#define pop pop_back
using namespace std;
int a[21][20001],overlap[21][21],m,n,ans=0;
vector<int> V;
void dfs(int v)
{
	if(v==m+1)
		{ans=ans>V.size()?ans:V.size();
		return;}
	dfs(v+1);
	int i,flag=1;
	for(i=0;i<V.size();i++)
		if(overlap[v][V[i]]){flag=0;break;}
	if(flag)
	{
		V.pb(v);
		dfs(v+1);
		V.pop();
	}
}
int main(void) {
	int i,j,x,y,k;
	scanf("%d%d",&n,&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d",&x);
		for(j=0;j<x;j++)
		{	scanf("%d",&y);
			a[i][y]=1;	}
	}
	//find overlap matrix
	for(i=1;i<=m;i++)
		for(j=i+1;j<=m;j++)
			for(k=1;k<=n;k++)
				if(a[i][k]&&a[j][k])
					{overlap[i][j]=overlap[j][i]=1;
					break;}
	//use dfs to find maximum number of non-overlapping sets
	dfs(1);
	printf("%d\n",ans);
	return 0;
}
