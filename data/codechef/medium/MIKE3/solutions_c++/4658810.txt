#include <iostream>
#include <vector>
#include <map>
#include <string>
using namespace std;

map <int, vector<int> > harta;
bool check[20001];
int conflict[21], m;

int fmax (int x, int y)
{
    if (x > y)
        return x;
    return y;
}

int find (int x, int mask, int sum)
{
    if (x == m)
        return sum;

    int res = find (x+1, mask, sum);
    if (!(mask >> x & 1))
    {
        res = fmax (res, find (x+1, mask | conflict[x], sum + 1));
    }
    return res;
}

int main ()
{
    int n, k, a;
    cin >> n >> m;
    for (int i = 0; i < m; i++)
    {
        cin >> k;
        for (int j = 0; j < k; j++)
        {
            cin >> a;
            harta[a].push_back(i);
        }
    }
    for (map<int, vector<int> >::iterator it = harta.begin(); it != harta.end(); ++it)
    {
        int mask = 0;
        for (unsigned int i = 0; i < it->second.size(); i++)
            mask |= 1 << it->second[i];
        for (unsigned int i = 0; i < it->second.size(); i++)
            conflict[it->second[i]] |= mask;
    }
    cout << find (0, 0, 0) << endl;
    return 0;
}
