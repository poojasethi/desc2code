//  ...............................................$$.....................................//

  //BIG OH
  //prob-easy
  
#include<cstdio>
#include<iostream>
#include<stdlib.h>
#include<cstring>
#include<cmath>
#include<sstream>
#include<vector>
#include<list>
#include<queue>
#include<stack>
#include<algorithm>
#include<map>
#include<set>

using namespace std;
int dp[21][21]={0};
int main()
{
	bool temp;
    int mx=1;
    int n,m;
    cin>>n>>m;
    int k,ai;
    vector<int>ab[21];
    for(int i=0;i<m;i++)
	{
      cin>>k;
      for(int j=0;j<k;j++)
	  {
        cin>>ai;
        ab[i].push_back(ai);
    }
    }
    int ans=0;
    int arr[111];
    memset(arr,0,sizeof(arr));
    for(int i=1;i<n+1;i++)
	{
       ans=0;
       for(int j=0;j<m;j++)
	   {
         if(binary_search(ab[j].begin(),ab[j].end(),i))
		 {
           arr[ans++]=j;
         }
       }
      for(int j=0;j<ans-1;j++)
	  {
        for(int l=j+1;l<ans;l++)
		{
            dp[arr[j]][arr[l]]=1;
            dp[arr[l]][arr[j]]=1;
        }
      }
    }
 
    for(int i=0;i<(1<<m);i++)
	{
       ans=0;
       for(int j=0;j<m;j++)
	   {
         if(i&1<<j) 
	      arr[ans++]=j;
       }
       temp=true;
       for(int j=0;j<ans-1;j++)
	   {
         for(int z=j+1;z<ans;z++)
		 {
             if((dp[arr[j]][arr[z]]==1)or(dp[arr[z]][arr[j]]==1))
			 {
              temp=false;
               break;
             }
         }
        if(temp==0)
	       break;
       }
       if(temp!=0) 
	     mx=max(mx,ans);
    }
   cout<<mx<<endl;
 return 0;
} 

