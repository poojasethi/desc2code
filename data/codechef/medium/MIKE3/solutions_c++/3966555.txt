#include<iostream>
#include<stdio.h>
#include<vector>

using namespace std;

int main()
{	
	vector <int>v[21];
	vector <int>conf[21];
	vector <int>dfs;
	int l, flag, max=0, cnt[30]={0}, c, over[30][30]={0}, i, j, k, n, m, temp, size, off[21][20010], mat[21][20010]={0}; 
	scanf("%d%d", &n, &m);	
	for(i=0; i<m; i++)
	{
		scanf("%d", &off[i][0]);
		for(j=1; j<=off[i][0]; j++)
		{
			scanf("%d", &off[i][j]);
			mat[i][off[i][j]]=1;
		}
	}
	if(m == 1)
		printf("1\n");
	else{
	for(i=0; i<m; i++)	
		for(k=i+1; k<m; k++)
		{
			flag=0;
			for(j=1; j<=off[i][0]; j++)
				if(mat[i][off[i][j]] && mat[k][off[i][j]])
				{
					over[i][k]=1;
					flag=1; 
					break;
				}
			if(flag == 0)
			{
				conf[i].push_back(k);
				v[i].push_back(k);
			}
		}

/*	for(i=0; i<m && printf("\n"); i++)
		for(j=0; j<m; j++)
		printf("%d ", over[i][j]);
	for(i=0; i<m && printf("\n"); i++)
	for(j=0; j<v[i].size(); j++)
		printf("%d ", v[i][j]);
	printf("\n");
*/
	flag=0;
	for(i=0; i<m; i++)
		if(v[i].size())
		{
			flag=1;
			break;
		}
	
	if(flag){
		max=0;
		for(i=0; i<m; i++)
		{
			if(v[i].size()){
			dfs.push_back(i);
			while(dfs.size())
			{
				temp=dfs[dfs.size()-1];
				if(v[temp].size())
				{
					k=v[temp][v[temp].size()-1];
					flag=0;
					for(l=0; l<dfs.size(); l++)
						if(over[dfs[l]][k])
						{
							flag=1;
							break;			
						}
					if(!flag)
						dfs.push_back(k);
					v[temp].pop_back();
				}
				else
				{
					if(max<dfs.size())
						max=dfs.size();
					k=dfs[dfs.size()-1];
					dfs.pop_back();
					for(j=k; j<m; j++)
						v[j]=conf[j];
				}
			}}
		}
		printf("%d\n", max);
	}	
		else
		printf("1\n");
	}
	return 0;
}