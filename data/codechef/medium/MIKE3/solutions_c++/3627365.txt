#pragma comment(linker,"/STACK:102400000,102400000")
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <set>
#include <map>
#include <cstring>
#include <string>
#include <iostream>
#include <time.h>
#include <algorithm>
using namespace std;
typedef pair<int, int> pii;
#define INF 0x7fffffff 
#define mod 1000000007
#define ftmp 1000000000
#define llu unsigned long long
#define ll long long
#define maxn 20055
#define pi acos(-1.0)
#define dis(x0, y0, x1, y1) sqrt((x0 - x1) * (x0 - x1) + (y0 - y1) * (y0 - y1))
ll gcd(ll n, ll m){ return m ? gcd(m, n%m) : n; }
//struct node{int x, y;}b[maxn];
//bool comp(node a, node b){ return (a.x < b.x || a.x == b.x&&a.y < b.y); }
int n, m, s, t ,k ,ans;
vector<int>g[maxn];
char str[maxn];
int dp[1<<20];
int a[22][maxn], vis[22], v[22][22];
string S, T;
int main(){
	int cas = 1;
	while (~scanf("%d%d", &n, &m)){
		for (int i = 0; i <= 20000; i++)g[i].clear();
		memset(vis, 0, sizeof vis);
		memset(dp, 0, sizeof dp);
		memset(v, 0, sizeof v);
		for (int i = 0; i < m; i++){
			scanf("%d", &k);
			for (int j = 0; j < k; j++){
				scanf("%d", &a[i][j]);
				g[a[i][j]].push_back(i);
			}
		}
		for (int i = 0; i < m; i++){
			for (int j = 0; j < n; j++){
				for (int k = 0; k < g[a[i][j]].size(); k++){
					vis[g[a[i][j]][k]] = 1;
				}
			}
			for (int j = 0; j < m; j++){
				if (vis[j]&&i!=j)v[i][j]=1;
			}
			memset(vis, 0, sizeof vis);
		}
		ans = 1;
		for (int i = 0; i < (1 << m); i++){
			dp[i] = 1;
			int x = (i ^ (i - 1));
			int j;
			for (j = m-1; j >=0; j--){
				if ((1 << j)&x)break;
			}
			x = ~x;
			if (dp[i&x] == -1){ dp[i] = -1; continue; }
			s = 0;
			for (k = m-1; k > j; k--){
				if (((1 << k)&i)){
					s++;
					if (v[k][j])dp[i] = -1;
				}
			}
			if(dp[i]!=-1)ans = max(ans, s+1);
		}
		printf("%d\n", ans);
	}
	return 0;    
}