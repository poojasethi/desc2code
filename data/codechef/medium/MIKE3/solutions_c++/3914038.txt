#include<iostream>
#include <vector>
using namespace std;
int max(int a,int b){
	if(a>b)return a;
	return b;
}
int n,m,conflict[22]={0};
int DFS(int i, int mask, int sum){
    if (i == m+1)  return sum;
    int ret = DFS(i + 1, mask, sum); 
    if (!(mask >> i & 1))
        ret = max( ret, DFS(i + 1, mask | conflict[i], sum + 1));
    return ret;
}
int main(){
	vector< int > id[ 20020 ];
	cin>>n>>m;
	for(int i=1;i<=m;i++){
		int a;
		cin>>a;
		for(int j=0;j<a;j++){
			int b;
			cin>>b;
			id[b].push_back(i);
		}
	}
	for(int i=1;i<=n;i++){
		int mask=0;
		for(int j=0;j<id[i].size();j++){
			int ID=id[i][j];
			mask |= 1 << ID;
		}
		for(int j=0;j<id[i].size();j++){
			int ID=id[i][j];
			conflict[ID] |= mask;
		}
	}
	cout<<DFS(1,0,0)<<endl;
}