#include<bits/stdc++.h>
#define MAX 100005
#define MOD 1000000007
using namespace std;
typedef long long ll;
ll parent[MAX];
ll findParent(ll i)
{
    if(parent[i]==i)
        parent[i]=i;
    else
        parent[i]=findParent(parent[i]);
    return parent[i];
}
void unionNodes(ll a,ll b)
{
    ll parent_a=findParent(a);
    ll parent_b=findParent(b);
    if(parent_a==parent_b)
        return;
    parent[parent_a]=parent[parent_b];
}
int main()
{
    ll t,n,m,i,j,c,k,now,pa,pb,p;
    scanf("%lld",&t);
    while(t--)
    {
        now=1;
        scanf("%lld %lld",&n,&m);
        for(i=0;i<=n;i++)
        {
            parent[i]=i;
        }
        for(k=0;k<m;k++)
        {
            scanf("%lld %lld",&i,&j);
            pa=findParent(i);
            pb=findParent(j);
            if(pa!=pb)
                unionNodes(pa,pb);
        }
        set<ll> noOfConnComp;
        set<ll>::iterator it2;
        map<ll,ll> routes;
        map<ll,ll>::iterator it;
        noOfConnComp.clear();
        for(i=1;i<=n;i++)
        {
            p=findParent(i);
            //cout<<p<<'\n';
            noOfConnComp.insert(p);
            routes[p]++;
        }
        /*for(it2=noOfConnComp.begin();it2!=noOfConnComp.end();++it2)
            cout<<*it2<<'\n';
        cout<<noOfConnComp.size()<<'\n';*/
        for(it=routes.begin();it!=routes.end();++it)
        {
            now=now*(it->second);
            now=now%MOD;
        }
        cout<<noOfConnComp.size()<<" "<<now<<'\n';
    }
    return 0;
}
