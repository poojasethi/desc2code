#include<iostream>
#include<map>
#include<stdlib.h>
#include<list>
#define MOD 1000000007;
using namespace std;
int root[100003],rank[100003];
void create_set(int i)
{
	root[i]=i;
	rank[i]=0;
}
int find_set(int x)
{

while(x!=root[x])
{
	x=root[x];
}
return x;
}
void unionset(int a,int b)
{
	if(rank[b]<rank[a])
	{
		root[b]=a;
	}
	else
	{
		root[a]=b;
	}
	if(rank[a]==rank[b])
	{
		rank[b]=rank[b]+1;
	}
}
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,m;
		cin>>n>>m;
		//long int root[n+1],rank[n+1];
	
	   for(int i=1;i<=n;i++)
	   create_set(i);
		for(int k=0;k<m;k++)
		{
			int i,j;
			cin>>i>>j;
			 int a=find_set(i);
			int b=find_set(j);
			if(a!=b)
			unionset(a,b);
	
		}

		int count=0;
		long long int ans=1;

      map<int,int> mp;
      map<int, int >::iterator it;
    
      for(int i=1;i<=n;i++)
      {
       int x=find_set(i);
      	mp[x]++;
	  }
	  for(it=mp.begin();it!=mp.end();it++)
	  {
	  	ans=(ans*(it->second))%MOD;
	  	count++;
	  }
		cout<<count<<" "<<ans<<"\n";
	}
}