#include<iostream>
using namespace std;
#include<vector>
vector<vector<long long int> > vec;
vector<bool> visited;
long long int sum,product,c;

void dfs(long long int u)
{
    //cout<<u+1<<" ";
    visited[u]=true;
    int i;
    for(i=0;i<vec[u].size();i++)
    {
        if(visited[vec[u][i]]==false)
        {
            c++;
            //cout<<i<<" "<<vec[u][i]+1<<endl;
            dfs(vec[u][i]);
        }
    }
}

int main()
{
    long long int t;
    cin>>t;
    while(t--)
    {
        long long int n,m;
        product=1;
        sum=0;
        c=1;
        cin>>n>>m;
        vec=vector<vector<long long int> > (n);
        visited=vector<bool> (n,0);
        long long int i,j,k;
        for(k=0;k<m;k++)
        {
            cin>>i>>j;
            i--,j--;
            vec[i].push_back(j);
            vec[j].push_back(i);
        }
        for(i=0;i<n;i++)
        {
            if(visited[i]==false)
            {
                sum++;
                c=1;
                //cout<<"dfs("<<i<<")"<<endl;
                dfs(i);
                product=(product*c)%1000000007;
            }
        }
        cout<<sum<<" "<<product<<endl;
    }
    return 0;
}
