#include <bits/stdc++.h>

using namespace std;
int parent[100001];
int rank[100001];
#define mod 1000000007
int parentfunc(int i)
{
	if (i != parent[i])
		parent[i] = parentfunc(parent[i]);
	return parent[i];
}
void unionn(int x,int y)
{
	if (rank[x] > rank[y])
	{
		parent[y] = x;
	}
	else if (rank[x] < rank[y])
	{
		parent[x] = y;
	}
	else
	{
		if (x < y) {
			parent[y] = x;
			rank[x]++;
		}
		else {
			parent[x] = y;
			rank[y]++;
		}
	}
}
int main()
{
	int t;
	scanf("%d",&t);
	while (t--)
	{
		int n,m;
		scanf("%d%d",&n,&m);
		for (int i = 1; i <= n; i++)
			parent[i] = i;
		for (int i = 1; i <= n; i++)
			rank[i] = 1;
		while (m--)
		{
			int x,y;
			scanf("%d%d",&x,&y);
			int px = parentfunc(x);
			int py = parentfunc(y);
			if (px != py)
				unionn(px,py);
		}
		long long int ans[n+1];
		memset(ans,0,sizeof(ans));
		for (int i = 1; i <= n; i++)
		{
			ans[parentfunc(i)]++;
		}
		long long int ans1 = 1;
		int ctr = 0;
		for (int i = 1; i <= n; i++)
		{
			if (ans[i] != 0) {
				ctr++;
				ans1 = ans1*ans[i];
				ans1 = ans1%mod;
			}
		}
		cout << ctr << " " << ans1 << endl;
	}
	return 0;
}