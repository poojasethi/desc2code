#include<iostream>
#include<vector>
#include<string>
#include<algorithm>
#include<map>
using namespace std;
int a[55][55],b[55][55];
int main()
{
	int n,i,count=1,j,val=0;
	map<string,int> mp;	
	string st;
	cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>st;
		mp.insert(pair<string,int>(st,count));
        count++;
	}
	
	
	for(i=0;i<=n;i++)
	{
		for(j=0;j<=n;j++)
		{
			a[i][j]=0;
			b[i][j]=0;
		}
	}
	int m,p1,p2,d;
	string c1,c2;
	cin>>m;
	for(i=0;i<m;i++)
	{
        cin>>c1>>c2>>d;
        p1= mp[c1];
        p2=mp[c2];
        a[p1][p2]=1;
        b[p1][p2]=d;
                    
    }
	int t,k;
	cin>>t;
	for(i=0;i<t;i++)
	{	
		cin>>k;
		if(k==1)
		{
			string city;
			cin>>city;
			int p = mp[city];
			if(p==0)
			{
				cout<<"ERROR\n";
				continue;
			}
			else
			{
				cout<<"0\n";
				continue;			
			}
		}
		else
		{	
			vector <string> route,route1;
			int flag=1;
			for(j=0;j<k;j++)
			{
				string str;
				cin>>str;
				route.push_back(str);
				route1.push_back(str);
				if(mp[str]==0)
				flag=0;
			}
			if(!flag||route[0]==route[k-1])
			{
				cout<<"ERROR\n";
				continue;
			}
			else
			{
                long long int ans=0;
					
				flag=1;
				sort(route1.begin(),route1.end());
				for(j=0;j<k-1;j++)
				{
					if(route[j]==route[j+1]||route1[j]==route1[j+1])
					{
						cout<<"ERROR\n";
						flag=0;
						break;
					}
				}
				if(flag)
				{
					flag=1;
					for(j=0;j<k-1;j++)
					{
						string ss,sss;
						ss = route[j];
						sss= route[j+1];
						int pp= mp[ss];
						int ppp= mp[sss];
						if(a[pp][ppp]==0)
						{
							flag=0;
							cout<<"ERROR\n";
							break;
						}
						else
						ans+=b[pp][ppp];
					}
                        
				}
				if(flag)
				cout<<ans<<"\n";
			}
		}
		
	}
	
	return 0;
}
