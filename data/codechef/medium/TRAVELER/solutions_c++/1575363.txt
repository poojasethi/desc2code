#include <iostream>
#include <algorithm>
#include <string>
#include <map>
#include <cstdio>
using namespace std;

const int INF = 1000000;

int t, n, m, d, k;
string name, c1, c2;
map<string, int> names;
string route[55];
int a[55][55];
bool vis[55];

int main()
{
    //freopen("in.txt", "r", stdin);
    cin >> n;
    names.clear();
    for (int i=0; i<n; i++) {
        cin >> name;
        names.insert(pair<string, int>(name, i));
    }
    cin >> m;
    for (int i=0; i<n; i++) for (int j=0; j<n; j++) {
        a[i][j] = INF;
    }
    for (int i=0; i<m; i++) {
        cin >> c1 >> c2 >> d;
        a[names[c1]][names[c2]] = d;
    }
    cin >> t;
    for(int i=0; i<t; i++) {
        cin >> k;
        bool ok = true;
        for (int i=0; i<n; i++) vis[i] = false;
        for (int j=0; j<k; j++) {
            cin >> route[j];
            if (names.find(route[j])==names.end()) {
                ok = false;
                continue;
            }
            if (ok && vis[names[route[j]]]) ok = false;
            if (ok) vis[names[route[j]]] = true;
            if (ok && j>0 && (route[j]==route[j-1] || (a[names[route[j-1]]][names[route[j]]])==INF))
                ok = false;
        }
        if (k>1) {
            if (ok && route[0]==route[k-1])
                ok = false;
        }
        if (ok) {
            int ans = 0;
            for (int j=1; j<k; j++) {
                ans = ans + a[names[route[j-1]]][names[route[j]]];
            }
            cout << ans << endl;
        } else
            cout << "ERROR" << endl;
    }
    return 0;
}
