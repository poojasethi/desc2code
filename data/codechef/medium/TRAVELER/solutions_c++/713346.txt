#include<iostream>
#include<map>
#include<string>
#include<vector>
using namespace std;
typedef map<string,int> citylist;
int main()
{
 citylist list;
 string city;
 int n;
 //cout<<"Enter number of cities"<<endl;
 cin>>n;
 for(int i=0;i<n;i++)
 {
         cin>>city;
         list[city]=i;
}
int arr[n][n];
for(int r=0;r<n;r++)
for(int s=0;s<n;s++)
arr[r][s]=-1;
//cout<<"Enter number of edges"<<endl;
cin>>n; //number of edges
string city1,city2;
int distance;
for(int i=0;i<n;i++)
{
        cin>>city1>>city2>>distance;
        arr[list.find(city1)->second][list.find(city2)->second]=distance;   //adjacency matrix  
}        
//cout<<"Enter number of queries"<<endl;
cin>>n; //number of queries

for(int i=0;i<n;i++)
{
        int error=0;
        int m;
        cin>>m;
        vector<int> ilist(m);
        for(int j=0;j<m;j++)
        {
                cin>>city;
                if(list.find(city)->second<0 || list.find(city)->second>=n)
                {
                ilist[j]=-1;
                error=1;
                }                     
                else
                ilist[j]=list.find(city)->second;
        }
//for(int j=0;j<m;j++)
//cout<<ilist[j]<<endl;              
                                  
        int unique=0;
        for(int k=0;k<m;k++)
        {
          for(int p=k+1;p<m;p++)
           {
                  if(ilist[k]==ilist[p])
                  {
                    unique=1;
                    break;
                    }
                    }
                    }
            if(error==1||unique==1)
            cout<<"ERROR"<<endl;
            else
            {
                int ans=0,t;
                for(t=0;t<m-1;t++)
                {
                     if(arr[ilist[t]][ilist[t+1]]<0)
                     {
                                           cout<<"ERROR"<<endl;   
                                           break;
                      }
                    ans=ans+arr[ilist[t]][ilist[t+1]];
                        }
                        if(t==m-1)
                        cout<<ans<<endl;
                        }
}
                //cin>>n;
                return 0;
                }
