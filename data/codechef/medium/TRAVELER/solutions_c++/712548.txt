#include<stdio.h>
#include<limits.h>
#include<string.h>
int main()
{
	int n;
	scanf("%d",&n);
	char arr[n][22];
	int i;
	for(i=0;i<n;i++)
		scanf("%s",arr[i]);
	int d;
	int dist[n][n];
	int j;
	for(i=0;i<n;i++)
	{
		for(j=0;j<n;j++)
			dist[i][j] = INT_MAX;
	}
	scanf("%d",&d);
	char a[22],b[22];
	int far;
	while(d--)
	{
		scanf("%s %s %d",a,b,&far);
		int p=0,q=0;
		for(i=0;i<n;i++)
		{
			if(strcmp(a,arr[i])==0)
			{
				p = i;
				break;
			}
		}
		for(i=0;i<n;i++)
		{
			if(strcmp(b,arr[i])==0)
			{
				q = i;
				break;
			}
		}
		dist[p][q] = far;
	}
	int m;
	char lame[128][22];
	scanf("%d",&m);
	while(m--)
	{
		int t;
		int color[n];
		for(i=0;i<n;i++)
			color[i] = 0;
		scanf("%d",&t);
		
		for(i=0;i<t;i++)
			scanf("%s",lame[i]);
		int result = 0;
		int flag = 0;
		for(i=0;i<t;i++)
		{
         
			int p=-1,q=-1;
			for(j=0;j<n;j++)
			{
		//		printf("looped\n");
				if(strcmp(lame[i],arr[j])==0)
				{
					if(color[j] == 0)
					{
						p = j;
						color[j] = 1;
						break;
					}
					else
					{
						printf("ERROR\n");
						flag = 1;
						break;
					}
				}
			}
			if(i!=t-1)
			{
				for(j=0;j<n;j++)
				{
					if(strcmp(lame[i+1],arr[j])==0)
					{
						if(color[j] == 0)
						{
							q = j;
							break;
						}
						else
						{
							printf("ERROR\n");
							flag = 1;
							break;
						}
					}
				}
        		}
	//			printf("got here\n");
	//			printf("p=> %d q=> %d\n",p,q);
			if(flag == 1)
				break;
			if(p == -1 || (q == -1&&i!=t-1))
			{
				flag = 1;
				printf("ERROR\n");
				break;
			}
			if(i!=t-1)
			{
			          if(dist[p][q] == INT_MAX)
			          {
				                    flag = 1;
				                    printf("ERROR\n");
				                    break;
                        }
			            result += dist[p][q];
             }
		}

		if(flag != 1)
			printf("%d\n",result);
	}
	return 0;
}
