#include<stdio.h>
#include<stdlib.h>
#include<string>
#include<string.h>
#include<map>
#include<vector>
 
using namespace std;
 
char city[60];
char c1[60],c2[60];
int n,m;
int uid;
map<string,int> cities;
 
int edges[100][100];
 
int main()
{
uid=0;
scanf("%d",&n);
memset(edges,-1,sizeof(edges));
 
for(int i=0;i<n;i++)
{
scanf("%s",city);
string temp(city);
cities[temp] = uid;
uid++;
}
scanf("%d",&m);
int dist;
for(int i=0;i<m;i++)
{
scanf("%s%s%d",c1,c2,&dist);
string xx(c1);
string yy(c2);
edges[cities[xx]][cities[yy]] = dist;
}
 
int cases;
int mark[60];
scanf("%d",&cases);
 
for(int x=0;x<cases;x++)
{
int nt;
int prev,pres;
int flag=0;
int path=0;
memset(mark,0,sizeof(mark));
 
scanf("%d",&nt);
scanf("%s",c1);
string temp1(c1);
 
if(cities.find(temp1)==cities.end())
{
flag=1;
}
else
{
prev = cities[temp1];
mark[prev] = 1;
}
 
for(int i=1;i<nt;i++)
{
scanf("%s",c2);
if(flag==1) continue;
string temp2(c2);
if(cities.find(temp2)==cities.end())
{
flag=1;
continue;
}
pres = cities[temp2];
if(edges[prev][pres]!=-1 && mark[pres]==0 && flag==0)
{
mark[pres]=1;
path+=edges[prev][pres];
prev = pres;
}
else
{
flag=1;
}
}
 
if(flag==1)
{
printf("ERROR\n");
}
else
{
printf("%d\n",path);
}
 
}
return 0;
}
