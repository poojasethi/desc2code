#include <iostream>
#include <set>
#include <vector>

using namespace std;

struct node{
       string a;
       string b;
       int c;
};

int main(){
    int i, j, n1, m, a1, total, t, k1, k, p, m1, z;
    string str, str1;
    string st[200];
    struct node n[3000];
    vector <string> v;
    set <string> s;
    cin >> n1;
    for(i = 0; i < n1; i++){
          cin >> str;
          v.push_back(str);
    }
    cin >> m;
    for(i = 0; i < m; i++){
          cin >> str >> str1 >> a1;
          n[i].a = str;
          n[i].b = str1;
          n[i].c = a1;
    }
    cin >> k1;
    for(i = 0; i < k1; i++){
          cin >> m1;
          total = 0;
          for(j = 0; j < m1; j++){
               cin >> st[j];
               s.insert(st[j]);
          }
          if(int(s.size()) != m1)
               cout << "ERROR" << endl;
          else if(m1 == 1){
               z = 0;
               for(j = 0; j < v.size(); j++){
                     if(v[j] == st[0]){
                             z = 1;
                             break;
                     }
               }
               if(z == 1)
                   cout << "0" << endl;
               else
                   cout << "ERROR" << endl;
          }
          else{
               p = 0;
               for(j = 0; j < (m1-1); j++){
                     t = 0;
                     for(k = 0; k < m; k++){
                           if(n[k].a == st[j] && n[k].b == st[j+1]){
                                t = 1;
                                total = total + n[k].c;
                                break;
                           }
                     }
                     if(t != 1){
                         p = 1;
                         cout << "ERROR" << endl;
                         break;
                     }
               }
               if(p != 1)
                   cout << total << endl;
          }
          s.clear();
    }
    
    //system("pause");
    return 0;
}
