#include <iostream>
#include <map>
#include <string>

using namespace std;

int main()
{
    int N,NN,M,D,T,K,i,j,dist,acum;
    bool error;
    map<string,int> cities;
    string cA,cB;
    cin >> N;
    NN=N;
    int **mapa = new int*[N+1];
    int *visited = new int[N+1];
    for(i=0;i<N;i++) mapa[i] = new int[N+1];
    for(j=0;j<N;j++)
        for(i=0;i<N;i++)
            mapa[i][j] = -1;
        
    i=0;
    while(NN--)
    {
        cin >> cA;
        cities[cA] = i++;
    }
    cin >> D;
    while(D--)
    {
        cin >> cA >> cB >> dist;
        mapa[cities[cA]][cities[cB]] = dist;
    }
    cin >> T;
    while(T--)
    {
        for(i=0;i<N;i++) visited[i] = 0;
        cin >> K;
        acum = 0;
        error = false;
        if(K==1)
        {
            cin >> cA;
            if(cities.find(cA)!=cities.end())
            {
               cout << 0 << endl;
                continue; 
            } else
                error=true; 
        } else
        {
          cin >> cA;
          if(cities.find(cA)==cities.end()) {error = true; /*cerr << "Error en linea 52 T=" << T << " K=" << K << endl;*/}
          else visited[cities[cA]]++;
        }
        K--;
        while(K--)
        {
          cin >> cB;
          if(cities.find(cA)==cities.end() || cities.find(cB)==cities.end())
            {error = true; /*cerr << "Error en linea 60 T=" << T << " K=" << K << endl;*/}
          else if(visited[cities[cB]]>=1)
            {error = true; 
            /*cerr << "Error en linea 62 T=" << T << " K=" << K << " | ciudad = " << cB << "["<< cities[cB] <<"]";
            cerr << " visited = " << visited[cities[cB]] << endl;*/}
          else
          {
            visited[cities[cB]]++;
            if(mapa[cities[cA]][cities[cB]] != -1)
            {
                //cerr << "Visitando de " << cA << " a " << cB << " con destino visitado = " << (visited[cities[cB]]-1) << endl;
                acum +=  mapa[cities[cA]][cities[cB]];
            }
            else
                {error = true; /*cerr << "Error en linea 69 T=" << T << " K=" << K << endl;*/}
          }
          
          cA = cB;
        }
        if(error)
            cout << "ERROR" << endl;
        else
            cout << acum  << endl;
    }
    delete []visited;
    return 0;   
}
