#include<iostream>
using namespace std;
#define M 1000000007
int *arr,*brr,prime[100005];
int maximum(int a,int b)
{
   if(a>b)
      return a;
   return b;
}
int gcd(int a,int b)
{
   if(b==0)
   return a;
   return gcd(b,a%b);
}
void maintainPrimeFactor(int N)
{
   int counter,i;
   for(i=0;N!=1;i++)
   {
      for(counter=0;N%prime[i]==0;counter++)
         N=N/prime[i];
      brr[i]=maximum(brr[i],counter);
   }
}
int main()
{
   int T;
   long long int ans;
   int N,i,j,k,counter,l;
   bool isprime[100005];
   for(i=1;i<100001;i++)
      isprime[i]=true;
   for(i=2,j=0;i<100001;i++)
   {
      if(!isprime[i])
         continue;
      prime[j++]=i;
      for(k=2*i;k<100001;k=k+i)
         isprime[k]=false;
   }
   cin>>T;
   while(T--)
   {
      cin>>N;
      arr=new int[N];
      brr=new int[N];
      for(i=0;i<N;brr[i]=0,i++)
      cin>>arr[i];
      brr[i]=0;
      for(i=0;i<N;i++)
      {
         if(!arr[i])
            continue;
         for(j=i,counter=0;arr[j];)
         {
            k=j;
            j=arr[j]-1;
            arr[k]=0;
            counter++;
         }
         maintainPrimeFactor(counter);
      }
      for(ans=1,i=0;i<N;i++)
      {
         for(;brr[i];brr[i]--)
            ans=ans*prime[i]%M;
      }
      cout<<ans<<endl;
   }
return 0;
}
