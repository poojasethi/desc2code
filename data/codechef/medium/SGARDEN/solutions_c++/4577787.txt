#include<iostream>
#include<vector>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<cstring>
#include<cstdio>
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end()) //set/map
#define cpresent(c,x) (find(all(c),x) != (c).end()) //for vector
#define rp(i,n) for((i)=0;(i)<(n);(i)++)
#define each(i,a,n) for((i)=(a);(i)<(n);(i)++)
#define sci(i) scanf("%d",&(i));
#define scl(i) scanf("%lld",&(i));
#define pri(i) printf("%d\n",(i));
#define prl(i) printf("%lld\n",(i));
#define psi(i) printf("%d ",(i));
#define psl(i) printf("%lld ",(i));
#define ll long long int
using namespace std;
vector<int>v;
vector<int>ans;
vector<int>vis(100008);
vector<  pair<int, int > > pw[100008];
vector< int > isp(100008);
map<int,int>pr;
map<int,int>::iterator it;
void sieve()
{
	int i,j,x;
	for(i=2;i<100008;i++)
		if(!isp[i])
		{
			pw[i].pb(pair<int,int>(i,i));
			for(j=2*i;j<100008;j+=i)
			{
				isp[j]=1;
				x=j;
				while((x%i)==0)
					x/=i;
				pw[j].pb(make_pair(i,j/x));
			}
		}
}
ll res(int i,int pos)
{
	ll ns=1;
	pos=v[i];
	vis[pos]=1;
	while(i!=pos)
	{
		vis[pos]=1;
		pos=v[pos];
		ns++;
	}
	return ns;
}
ll gcd(ll a , ll b)
{
	ll r=a;
	while(b)
	{
		r=a%b;
		a=b;
		b=r;
	}
	return a;
}
int main()
{
	int t,n,i,j,beat;
	ll ns,mul;
	sci(t);
	sieve();
	while(t--)
	{
		sci(n);
		v.resize(n+1);ans.clear();
		fill(all(vis),0);
		for(i=1;i<=n;i++)
			sci(v[i]);
		for(i=1;i<=n;i++)
			if (!vis[i])
				ans.pb(res(i,i));	
		pr.clear();mul=1;
		for(i=0;i<ans.size();i++)
			for(j=0;j<pw[ans[i]].size();j++)
			{
				beat=pr[pw[ans[i]][j].first];
				if(pw[ans[i]][j].second>beat)
					pr[pw[ans[i]][j].first]=pw[ans[i]][j].second;
			}
		for(it=pr.begin();it!=pr.end();it++)
	//		printf("%d %d\n",it->first,it->second);
			mul= ((ll)mul*(ll)it->second)%1000000007;
		prl(mul);
				
	}
	return 0;
}
