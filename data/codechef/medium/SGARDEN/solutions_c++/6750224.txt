#include <iostream>
#include<map>
using namespace std;
#define N 100001
#define LL long long
#include<math.h>
#include<stdlib.h>
#define MOD 1000000007
int a[N],c[N+1]={0};
LL lcm=0,ans=1;
int prime[N],included[N]={0};

map<int,int>Map;
map<int,int>MapNo;

void sieve()
{
	int ar[10000]={0};
	int p=1;
	prime[0]=2;
	
	for(int i=3;i<500;i+=2)
	{
		if(ar[i]==0){
			prime[p]=i;
			p++;
			for(int j=i*i;j<N;j++)
			ar[i]=1;
		}
	}
}

void calculatePower(int no){
	int i=0;

	while(prime[i]<=(int)sqrt(no) )
	{
		int d=prime[i];
		if(no%d==0)
		{
			included[no]=1;
			MapNo[d]++;
			no=no/d;
		}
		else
		i++;
	}
	if(no!=1){
		included[no]=1;
		MapNo[no]++;
	}
}


void LCM(int no)
{
	if(!included[no]){
	calculatePower(no);
	map<int,int>::iterator i;
	i=MapNo.begin();
	while(i!=MapNo.end()){
		int base=(*i).first;
		int exp=(*i).second;
		
		if((!Map[base]) || Map[base]<exp)
			Map[base]=exp;
		i++;
	}
	MapNo.clear();
	included[no]=1;
	}
}
LL powerModulo(int base,int exp)
{
	LL res=1;
	if(exp==1)
	return base;
	while(exp>0){
	
	if(exp&1)
	res=res*base%MOD;
	
	base=base*base%MOD;
	exp=exp/2;
	}
	return res;
}
int main() {
	// your code goes here
	int t,n;
	cin>>t;
	
	sieve();
	while(t--){
		ans=1;
		cin>>n;
		
		for(int i=0;i<n;i++)		{
			cin>>a[i];
			c[i+1]=0;
			included[i+1]=0;
		}
		
		int count;
		
		for(int i=0;i<n;i++){
			count=0;
			if(c[i+1]==0){
				
				int j=i;
				while(a[j]!=i+1)				{
					c[a[j]]=1;			//going to visit value in a[j]
					j=a[j]-1;				//visit
					count++;
				}
				c[a[j]]=1;
				count++;
			 	LCM(count);
			}
		}
		
		map<int,int>::iterator i;
		i=Map.begin();
		while(i!=Map.end()){
			int base=(*i).first;
			int exp=(*i).second;
			//cout<<base<< " "<<exp;
			LL val=powerModulo(base,exp);
			ans=ans*val%MOD;
			//ans=ans*pow(base,exp);//%MOD;
			i++;
		}
		cout<<ans<<endl;
		Map.clear();
	}
	return 0;
}