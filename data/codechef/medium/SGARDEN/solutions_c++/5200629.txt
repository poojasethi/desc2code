#include<iostream>
#include<string.h>
#include<string>
#include<stdio.h>
#include<algorithm>
using namespace std;

#define MOD 1000000007
int max(int a,int b)
{
	return (a>b)?a:b;
}

int A[100005];
int known[100005];
int P[100005];



long long p(int x,int n)
{
     if(n==0)
             return 1;
     else if(n==1)
          return x;
     else if(n%2==0)
          return p((x*x)%MOD,n/2);
     else
         return (x*p((x*x)%MOD,n/2))%MOD;
}

int main()
{
	ios_base::sync_with_stdio(false);
	int t,n;
	long long ans;
	
	cin>>t;
	while(t--)
	{
		ans=1;
		memset(known,0,sizeof(known));
		memset(P,0,sizeof(P));
		cin>>n;
		for(int i=1;i<=n;i++)
			cin>>A[i];
			
		int j,k=0;
		for(int i=1;i<=n;i++)
		{
			j=i;
			k=0;
			while(!known[j])
			{
				k++;
				known[j]=1;
				j=A[j];
			}
			
			if(k!=0)	
				{
					int power=0;
					int num=k;
					for(int b=2;b<=num;b++)
					{
						power=0;
						while(k%b==0)
						{
							power++;
							k/=b;
						}
						P[b]=max(P[b],power);
					}
				}
		}
		
		for(int i=2;i<=n;i++)
		{
			/*for(int j=1;j<=P[i];j++)
			{
				ans=(ans*i)%MOD;
			}*/
			ans=(ans*p(i,P[i]))%MOD;
		}
		cout<<ans<<endl;
	}
	return 0;
}