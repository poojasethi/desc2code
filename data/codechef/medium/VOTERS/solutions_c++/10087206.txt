#include<iostream>
#include<map>
using namespace std;
int main()
{
int N1,N2,N3;
cin>>N1>>N2>>N3;

int *ar1= new int[N1];
int *ar2= new int[N2];
int *ar3= new int[N3];
std::map<int,int> m;

for(int i = 0;i<N1;i++)
{
cin>>ar1[i];
if(m.find(ar1[i]) == m.end())
{
    m[ar1[i]] = 1;
}
else{
    m[ar1[i]]+=1;
}
}


for(int i = 0;i<N2;i++)
{

cin>>ar2[i];

    if(m.find(ar2[i]) == m.end())
{
    m[ar2[i]] = 1;
}
else{
    m[ar2[i]]+=1;
}
}

for(int i = 0;i<N3;i++)
{

cin>>ar3[i];
     if(m.find(ar3[i]) == m.end())
{
    m[ar3[i]] = 1;
}
else{
    m[ar3[i]]+=1;
}
}
typedef std::map<int,int >::iterator it_type;
int *ans = new int[N1+N2+N3];
int len = 0;
for(it_type iter = m.begin(); iter != m.end(); iter++) {
      if(iter->second >= 2)
      {
          ans[len++] = iter->first;
      }

}
cout<<len<<"\n";
for(int i =0;i<len;i++)
{
    cout<<ans[i]<<"\n";
}
return 0;
}
