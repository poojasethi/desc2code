#include<iostream>
using namespace std;
int a[150000];
void merge(int,int,int);
void merge_sort(int low,int high)
{
 int mid;
 if(low<high)
 {
  mid=(low+high)/2;
  merge_sort(low,mid);
  merge_sort(mid+1,high);
  merge(low,mid,high);
 }
}
void merge(int low,int mid,int high)
{
 int h,i,j,b[150000],k;
 h=low;
 i=low;
 j=mid+1;

 while((h<=mid)&&(j<=high))
 {
  if(a[h]<=a[j])
  {
   b[i]=a[h];
   h++;
  }
  else
  {
   b[i]=a[j];
   j++;
  }
  i++;
 }
 if(h>mid)
 {
  for(k=j;k<=high;k++)
  {
   b[i]=a[k];
   i++;
  }
 }
 else
 {
  for(k=h;k<=mid;k++)
  {
   b[i]=a[k];
   i++;
  }
 }
 for(k=low;k<=high;k++) a[k]=b[k];
}
int main()
{
 int i,j,count,n1,n2,n3,k=0,swap,b[150000];
 cin>>n1>>n2>>n3;
 for(i=0;i<(n1+n2+n3);i++)
 {
     cin>>a[i];
 }
 int num=n1+n2+n3;
 merge_sort(1,num);
 for(i=0;i<n1+n2+n3;i++)
 {
    if(a[i]==a[i+1])
    {
      b[k]=a[i];
      k++;i++;
      if(a[i+1]==a[i])
      i++;
   }
 }
 cout<<k<<"\n";
 for(i=0;i<k;i++)
 cout<<b[i]<<"\n";
 return 0;
 }