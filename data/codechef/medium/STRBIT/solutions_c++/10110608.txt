#include <bits/stdc++.h>
using namespace std;
int a[200000];
int n;
void range_update(int l, int r){
	r = min(n,r);
	for(l+=n,r+=n;l<r;l>>=1,r>>=1)
	{
		if(l&1)a[l++]+=1;
		if(r&1)a[--r]+=1;
	}
}

int query(int p )
{	
	int ans=0;
	for(p+=n;p>0;p>>=1){
		ans+=a[p];
	}
	return ans;
}

int main()
{
	int k,t,result;
	ios::sync_with_stdio(false);
	cin>>t;
	char c;
	while(t--)
	{
		cin>>n>>k;
		for(int i=0;i<n;i++)
		{
			cin>>c;
			if(c=='G')a[n+i]=0;
			else a[n+i]=1;
		}
		//buid the tree;
		for(int i = n-1;i>0;i--)
		{
			a[i] = 0; 
		}
		//
		result = 0;
		for(int i = 0;i<n;i++)
		{
			if((query(i)&1)){
				result++;
				range_update(i,i+k);
			}
		}
		cout<<result<<"\n";
	}
}