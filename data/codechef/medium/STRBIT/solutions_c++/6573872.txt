#include<bits/stdc++.h>
using namespace std;
char s[100005];
int coun=0;
int segment[400005];
void count(int node,int i,int j,int b,int e)
{

    if(i>e || j<b)
    return;
    if (b == e)
        {
           coun=coun+segment[node];
            return ;
        }

    int x=2*node;
    int y=(b+e)>>1;
    count(x,i,j,b,y);
    count(x + 1,i,j,y+1,e);
    coun=coun+segment[node];
}
void update(int node,int i,int j,int b,int e)
{
    if(i>e || j<b)
    return;
    if(b>=i && e<=j)
    {
        segment[node]+=1;
        return ;
    }
    update((node<<1),i,j,b,((b+e)>>1));
    update((node<<1) + 1,i,j,((b+e)>>1) + 1,e);
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,k,ans=0,i;
        scanf("%d%d",&n,&k);
        scanf("%s",s);
        for(i=0;i<=4*n;i++)
        segment[i]=0;
        n--;
        for(i=0;i<=n;i++)
        {

            coun=0;
            count(1,i,i,0,n);
            if(coun%2==0)
            {
                if(s[i]=='R')
                {
                    int low=min(n,i);
                    int high=min(n,i+k-1);
                    update(1,low,high,0,n);
                    ans++;
                }
            }
            else
            {
                if(s[i]=='G')
                {
                    int low=min(n,i);
                    int high=min(n,i+k-1);
                    update(1,low,high,0,n);
                    ans++;
                }
            }
        }
        printf("%d\n",ans);
    }
}
