//amazing takes time, legendary requires patience
#include "bits/stdc++.h"
#define sd(n) scanf("%d", &(n))
#define rep(i, x, n) for (int i = x, _n = (n); i < _n; ++i)
#define repi(i, a) for(typeof((a).begin()) i = (a).begin(), _##i = (a).end(); i != _##i; ++i)
#define SZ(c) (int)(c).size()
#define pra(v, n) rep(i, 0, n) cout << v[i] << " "; cout << endl;
#define lcm(a,b) (a*(b/__gcd(a,b)))
#define VI vector<int>
#define all(c) (c).begin(), (c).end()
#define pb push_back
#define mii map<int, int>
#define pii pair<int, int>
#define pip pair<int, pii>
#define F first
#define S second
#define mp make_pair
#define lli long long int
#define llu unsigned long long
#define CLR(p) memset(p, 0, sizeof(p))
#define SET(p) memset(p, -1, sizeof(p))
#define INF 0x3f3f3f3f
#define pi 3.14159265358979
#define debug 0
using namespace std;

const int MOD = 1e9+7;
const int eps = -1e6;
const int MAX = 100010;

int BIT[MAX], n;

int query(int k)
{
	int s =0;
	while(k > 0)
	{
		s += BIT[k];
		k -= k & -k;
	}
	return s;
}

void update(int x, int v)
{
//	printf("x is %d and v is %d\n", x, v);
	while(x <= n)
	{
		BIT[x] += v;
		x += x & -x;
	}
}
char c[MAX];
int k;
int main()
{
	ios_base::sync_with_stdio(0);
	int t;
	sd(t);
	while(t--)
	{
		sd(n);
		sd(k);
		scanf("%s", c);
		CLR(BIT);
		rep(i, 1, n+1)
		{
			int x = (c[i-1] == 'R' ? 1: 0);
			update(i, x);
			update(i+1, -x);
		}
//		rep(i, 1, n+1)
//			printf("%d ", query(i));
//		puts("");
		int cnt = 0;
		rep(i, 1, n+1)
		{
			if(query(i)%2 == 1)
			{
			//	printf("cnt for %d\n", i);
				cnt++;
				update(i, 1);
				update(min(n, i+k-1)+1, -1);
			}
//			rep(j, 1, n+1)
//				printf("%d ", query(j));
//			puts("");
		}
		printf("%d\n", cnt);
	}
    return 0;
}    