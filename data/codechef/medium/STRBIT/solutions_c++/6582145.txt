#include<bits/stdc++.h>
using namespace std;
void update(int BIT[],int idx,int value,int n)
{
    idx++;
    while(idx<=n)
    {
        BIT[idx]+=value;
        idx+=(idx&(-idx));
    }
}
int getsum(int BIT[],int idx)
{
    int sum=0;
    idx++;
    while(idx>0)
    {
        sum+=BIT[idx];
        idx-=(idx&(-idx));
    }
    return sum;

}
void rangeupdate(int BIT[],int l,int r,int n)
{
    update(BIT,l,1,n);
    update(BIT,r+1,-1,n);
}
void solve()
{
    int n,k,i,j,ans=0;
    scanf("%d%d",&n,&k);
    char str[n+1];
    int bit[n+2],arr[n+1];
    cin>>str;
    memset(bit,0,sizeof(bit));
    for(i=0;str[i];i++)
    {
        if(str[i]=='R')
            arr[i]=1;
        else
            arr[i]=0;
    }
    for(i=0;i<n;i++)
    {
        if((arr[i]+getsum(bit,i))%2==1)
        {
            ans++;
            rangeupdate(bit,i,min(i+k-1,n-1),n);
        }
    }
    printf("%d\n",ans);
}
int main()
{
    int test;
    scanf("%d",&test);
    while(test--)
        solve();
    return 0;
}
