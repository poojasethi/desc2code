#include<iostream>
#include<cstdio>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<list>
#include<algorithm>
#include<stdlib.h>
#include<cmath>
#include<climits>
#include<string.h>
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)
#define sc(a) scanf("%c",&a)
#define pi(a) printf("%d",a)
#define pl(a) printf("%d",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define pn() printf("\n")
#define p() printf(" ")
#define fl(i,a) for(i=0;i<a;i++)
#define fl1(i,a) for(i=1;i<=a;i++)
#define ll long long
#define vi vector<int>
#define vvi vector<vi>
#define vl vector<long long>
#define vvl vector<vi>
#define mp map<long long,long long>
#define pr pair<long long,long long>
#define M 1000000007
using namespace std;

/*#define gc getchar_unlocked
void scan(ll &x)   // works fine with +ve and -ve as well
{
    register ll c = gc();
    x = 0;
    ll neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

void print(ll X)  // not tested for -ve numbers
{
if(X<0) { putchar_unlocked('-'); X=-X; }
ll Len=0,Data[10];
while(X) { Data[Len++]=X%10; X/=10; }
if(!Len) Data[Len++]=0;
while(Len--) putchar_unlocked(Data[Len]+48);
putchar_unlocked('\n');
}*/

ll gcd(ll a,ll b){return (!a)?b:(!b)?a:gcd(b,a%b);}

int main()
{
	int t,n,i,j,k,no,sum;
	char str[200005];
	int aux[300005];
	sl(t);
	while(t--)
	{
		memset(aux,0,sizeof(aux));
		sl(n);
		sl(k);
		ss(str);
		sum=0;
		no=0;

		for(i=0;i<n;i++)
		{
			sum+=aux[i];
			if(((sum%2)&&(str[i]=='G'))||((sum%2==0)&&(str[i]=='R')))
			{
				no++;
				sum+=1;
				if(i+k<100001)
				aux[i+k]-=1;
			//	printf("%lld %lld \n",i,sum);
			}
		}

		pl(no);
		pn();
	}
	return 0;
}