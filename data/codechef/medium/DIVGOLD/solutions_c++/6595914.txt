#include<bits/stdc++.h>
using namespace std;

#define p(n) printf("%d\n",n)
#define r(n) scanf("%d",&n)
#define rs(n) scanf("%s",n)
#define ps(n) printf("%s\n",n)
#define P printf
#define R scanf
#define F first
#define S second
#define fr(i,a,b) for(int i=(int)a; i <= (int)b; i++)
#define frr(i,a,b) for(int i=(int)a; i >= (int)b; i--)
#define ll long long int
#define us(x) unsigned x
#define pb push_back
#define vi vector<int>
#define ve(x) vector<x>
#define si set<int>
#define itv vi :: iterator
#define ixv(x) vector<x> :: iterator
#define its si :: iterator
#define ixs(x) set<x> :: iterator
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define fill(s,v) memset(s,v,sizeof(s))
#define all(s) s.begin(),s.end()
#define fs(i,s) for(its i = s.begin(); i != s.end(); i++)
#define fv(i,v) for(itv i = v.begin(); i != v.end(); i++)
#define INF INT_MAX
#define MOD 1000000007
#define ii pair<int,int>
#define pa(x) pair<x,x>
#define mp make_pair

ll ipow(ll base, ll exp)
{
    ll result = 1;
    while (exp)
    {
        if (exp & 1)
            {result *= base;result %= MOD;}
        exp >>= 1;
        base *= base;
        base %= MOD;
    }
    return result;
}
int  len;
char temp[100], str[100];
void put(int pos, int cpos)
{
    int spos = 0,rpos = 0;
    while(1)
    {
        if(spos >= len && rpos >= len)
            break;
        if(rpos == cpos)
        {
            rpos++;
            continue;
        }
        if(spos == pos)
        {
            temp[pos] = str[cpos];
            spos++;
            continue;
        }
        temp[spos] = str[rpos];
        spos++;
        rpos++;
    }
}

main()
{
    int t;

    cin >> t;
    while(t--)
    {
        cin >> len >> str;
        string ans(str);
        fr(i,0,len-1)
        {
           //P("for %d\n",i);
           fr(j,0,len-1)
           {
               if(j == i) continue;
               temp[len] = '\0';
               put(j,i);
               //ps(temp);
               string tt(temp);
               ans = min(ans,tt);
           }
        }
        cout << ans<< endl;
    }
    return 0;
}
