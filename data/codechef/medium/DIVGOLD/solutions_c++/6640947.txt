#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<cstring>
#include<string>
#include<vector>
#include<algorithm>
 
using namespace std;
typedef vector<string> vst;
#define pb push_back
#define REP(i,a,b) \
    for(int(i)=int(a);i<=int(b);i++)
 
vst possibleStr;
string line;
bool mycompare(string a, string b){
    return a<b;
}
 
string getResult(int a, int b){
/*    cout<<"a is now "<<a<<endl;
    cout<<"b is now "<<b<<endl;
    cout<<"line is now "<<line<<endl;
    cout<<"inside get result "<<endl; */
    string temp="";
    if(b > a){
        temp = temp + line.substr(0,a);
    //    cout<<"temp is now 2 "<<temp<<endl;
        temp = temp + line.substr(b,1);
    //    cout<<"temp is now 3 "<<temp<<endl;
        temp = temp + line.substr(a,b-a);
    //    cout<<"temp is now 4 "<<temp<<endl;
        temp = temp + line.substr(b+1);
    //    cout<<"temp is now 5 "<<temp<<endl;
    //    cout<<"going out"<<endl;
    }
    else{
        temp = temp + line.substr(0,b);
        temp = temp + line.substr(b+1,a-b);
        temp = temp + line.substr(b,1);
//        temp = temp + line.substr(b,a-b);
        temp = temp + line.substr(a+1);
    }
        return temp;
}
     
int main(){
    int T,N;
    char tmpChar;
    string temp;
    scanf("%d",&T);
    while(T--){
        possibleStr.clear();
        scanf("%d",&N);
        getline(cin,line);
        getline(cin,line);
        possibleStr.pb(line);
        REP(i,0,N-2){
            REP(j,i+1,N-1){
                temp = getResult(i,j);
                possibleStr.pb(temp);
                temp = getResult(j,i);
                possibleStr.pb(temp);
            }
        }
        sort(possibleStr.begin(),possibleStr.end(),mycompare);
        cout<<possibleStr[0]<<endl;
    }
    return 0;
}
