#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <iterator>
#include <numeric>
#include <utility>
using namespace std;

template< class T > T _abs(T n) { return (n < 0 ? -n : n); }
template< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }
template< class T > T _min(T a, T b) { return (a < b ? a : b); }
template< class T > T sq(T x) { return x * x; }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T a, T b, T c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

#define ALL(c) c.begin(), c.end()
#define PB(x) push_back(x)
#define UB(s, e, x) upper_bound(s, e, x)
#define LB(s, e, x) lower_bound(s, e, x)
#define REV(s, e) reverse(s, e);
#define SZ(c) c.size()
#define SET(p) memset(p, -1, sizeof(p))
#define CLR(p) memset(p, 0, sizeof(p))
#define MEM(p, v) memset(p, v, sizeof(p))
#define CPY(d, s) memcpy(d, s, sizeof(s))
#define ll long long
#define ff first
#define ss second
#define DEBUG if(0)

#define sc(x) scanf("%s",x)
#define pc(x) printf("%s\n",x)
#define siz 100
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
              string str,ans,temp;
              char small;
              int n,flag=0,i,j,k,pos1=0,pos2=0;
              cin>>n>>str;
              ans=temp=str;
              for(i=0;i<n;i++)
              {
              for(j=0;j<n;j++)
              {
                   string temp;           
                 if(i<=j)
                 {             
                 temp=str.substr(0,i);
                 temp+=str.substr(i+1,j-i);
                 temp+=str.substr(i,1);
                 temp+=str.substr(j+1,n-j);
                 }
                 else
                 {
                  swap(i,j);  
                 temp=str.substr(0,i);
                 temp+=str.substr(j,1);
                 temp+=str.substr(i,j-i);
                 temp+=str.substr(j+1,n-j);
                 swap(i,j);
                 }                           
               //  cout<<temp<<"\n";
                 if(temp<ans)
                 ans=temp;
                 }
                 }               
                                
             
             cout<<ans<<"\n";
             
              }
              return 0;
              }
