#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

inline void fastRead(int *a)
{
	register char c=0;
	while (c<33) c=getchar_unlocked();
	*a=0;
	while (c>33)
	{
		*a=*a*10+c-'0';
		c=getchar_unlocked();
	}
}

inline void fastWrite(int a)
{
	register char c;
	char snum[20];
	int i=0;
	do
	{
		snum[i++]=a%10+48;
		a=a/10;
	}while(a!=0);
	i=i-1;
	while(i>=0)
		putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}
int main(){
    int t,n,p,i,j,k,dimen;
    fastRead(&t);
    while(t--){
        fastRead(&n);
        fastRead(&p);
        char sa[64002],sb[64002];
        scanf("%s%s",sa,sb);
        int cube[41][41][41];
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
                for(k=0;k<n;k++){
                    if(sa[i*n*n+j*n+k] == sb[i*n*n+j*n+k])
                        cube[i][j][k] = 1;
                    else
                        cube[i][j][k] = 0;
                }
            }
        }
 
        dimen=n;
        int cube2[41][41][41];
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
                cube2[i][j][0] = cube[i][j][0];
            }
        }
        for(i=0;i<n;i++){
            for(j=0;j<n;j++){
                for(k=1;k<n;k++){
                    cube2[i][j][k] = cube[i][j][k]+cube2[i][j][k-1];
                }
            }
        }
 
        int cube3[41][41][41];
        for(j=0;j<n;j++){
            for(k=0;k<n;k++){
                    cube3[0][j][k] = cube2[0][j][k];
            }
        }
        for(i=1;i<n;i++){
            for(j=0;j<n;j++){
                for(k=0;k<n;k++){
                    cube3[i][j][k] = cube2[i][j][k]+cube3[i-1][j][k];
                }
            }
        }
 
        int cube4[41][41][41];
        for(i=0;i<n;i++){
            for(k=0;k<n;k++){
                cube4[i][0][k] = cube3[i][0][k];
            }
        }
        for(i=0;i<n;i++){
            for(j=1;j<n;j++){
                for(k=0;k<n;k++){
                    cube4[i][j][k] = cube3[i][j][k]+cube4[i][j-1][k];
                }
            }
        }
 
        int ans,flag=0;
        for(dimen=n;dimen>0;dimen--){
            ans = 0;
            int unique_no1,unique_no2,unique_no3,unique_no4,unique_no5,a;
            int x1,y1,z1,x2,y2,z2,ii;
            for(i=0;i<n-dimen+1;i++){
                for(j=0;j<n-dimen+1;j++){
                    for(k=0;k<n-dimen+1;k++){
                        unique_no1=0;
                        unique_no2=0;
                        unique_no3=0;
                        unique_no4=0;
                        unique_no5=0;
                        x1 = i;
                        y1 = j;
                        z1 = k;
                        x2 = i+dimen-1;
                        y2 = j+dimen-1;
                        z2 = k+dimen-1;
 
                        unique_no1 = cube4[x2][y2][z2];
                        if(x1>0)
                            unique_no1 = cube4[x2][y2][z2]-cube4[x1-1][y2][z2];
 
                        if(z1>0)
                            unique_no2 = cube4[x2][y2][z1-1];
                        if(x1>0 && z1>0)
                            unique_no2 = cube4[x2][y2][z1-1]-cube4[x1-1][y2][z1-1];
 
                        unique_no2 = unique_no1-unique_no2;
 
                        if(y1>0){
                            unique_no3 = cube4[x2][y1-1][z2];
                            if(x1>0)
                                unique_no3 = cube4[x2][y1-1][z2]-cube4[x1-1][y1-1][z2];
 
                            if(z1>0)
                                unique_no4 = cube4[x2][y1-1][z1-1];
                            if(x1>0 && z1>0)
                                unique_no4 = cube4[x2][y1-1][z1-1]-cube4[x1-1][y1-1][z1-1];
 
                            unique_no4 = unique_no3-unique_no4;
                        }
                        unique_no5 = unique_no2-unique_no4;
 
                        long long int temp,temp1,temp2;
                        temp = dimen;
                        temp = temp*temp*temp;
                        temp1 = unique_no5;
                        temp1 = temp1*100;
                        temp2 = p;
                        temp1  = temp1/temp;
                        if(temp1>=temp2){
                            ans++;
                        }
                    }
                }
            }
            if(ans>0){
                printf("%d %d\n",dimen,ans);
                flag = 1;
                break;
            }
        }
        if(flag==0)
            printf("-1\n");
    }
    return 0;
}