//December Challenge 2013
//Courtesy midishero

#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define MAXN 64001

char cubeA[MAXN], cubeB[MAXN];
bool s[MAXN];
int subCube[41][41][41]={0};
int N, P, com;

void findSubCube(){
	int len=N*N*N;
	for(int i=0;i<len; i++) s[i]=(cubeA[i]==cubeB[i]);
	int x1, y1, z1, k, C;
	com=0;
	for(int x=1; x<=N; x++){
		x1=x-1;
		for(int y=1; y<=N; y++){
			y1=y-1;
			for(int z=1; z<=N; z++){
				z1=z-1;
				subCube[x][y][z]=subCube[x1][y][z]+subCube[x][y1][z]+subCube[x][y][z1]-subCube[x1][y1][z]-subCube[x1][y][z1]-subCube[x][y1][z1]+subCube[x1][y1][z1];
				if(s[x1*N*N+y1*N+z1]){
					subCube[x][y][z]++;
					com++;
				}
			}
		}
	}
	if(com>0) C=com;
	else{
		printf("-1\n");
		return;
	}
	for(int i=N; i>=2; i--){
		com=0;
		int min=ceil(i*i*i*P*0.01);
		for(int x=i; x<=N; x++){
			x1=x-i;
			for(int y=i; y<=N; y++){
				y1=y-i;
				for(int z=i; z<=N; z++){
					z1=z-i;
					int k=subCube[x][y][z]-subCube[x1][y][z]-subCube[x][y1][z]-subCube[x][y][z1]+subCube[x1][y1][z]+subCube[x1][y][z1]+subCube[x][y1][z1]-subCube[x1][y1][z1];
					if(k>=min) com++;
				}
			}
		}
		if(com>0){
			printf("%d %d\n", i, com);
			return;
		}
	}
	printf("1 %d\n", C);
	return;
}

int main(){
	int test;
	scanf("%d", &test);
	while(test--){
		scanf("%d %d", &N, &P);
		scanf("%s", cubeA);
		scanf("%s", cubeB);
		if(P==0){
			printf("%d 1\n",N);
			continue;
		}
		findSubCube();
	}
}

