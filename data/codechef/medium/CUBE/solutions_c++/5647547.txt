    #include<stdio.h>
    #include<string.h>
    #include<math.h>
    #define MAX 64001
    int acc[41][41][41];
    int main()
    {
    int t,n,i,j,k,p,totalsc,cb[41],cs,occ,minc,mc,l;
    char a[MAX],b[MAX];
    double flp;
    cb[1]=1;cb[2]=8;cb[3]=27;cb[4]=64;cb[5]=125;cb[6]=216;cb[7]=343;cb[8]=512;cb[9]=729;cb[10]=1000;cb[11]=1331;cb[12]=1728;cb[13]=2197;cb[14]=2744;cb[15]=3375;cb[16]=4096;cb[17]=4913;cb[18]=5832;cb[19]=6859;cb[20]=8000;cb[21]=9261;cb[22]=10648;cb[23]=12167;cb[24]=13824;cb[25]=15625;cb[26]=17576;cb[27]=19683;cb[28]=21952;cb[29]=24389;cb[30]=27000;cb[31]=29791;cb[32]=32768;cb[33]=35937;cb[34]=39304;cb[35]=42875;cb[36]=46656;cb[37]=50653;cb[38]=54872;cb[39]=59319;cb[40]=64000;
    scanf("%d",&t);
    while(t--)
    {
    scanf("%d%d",&n,&p);getchar(); gets(a);gets(b);
    l=0;
    for(i=1;i<=n;i++)
    {
    for(j=1;j<=n;j++)
    {
    for(k=1;k<=n;k++)
    {
    acc[i][j][k]=acc[i-1][j][k]+(acc[i][j-1][k]-acc[i-1][j-1][k])+((acc[i][j][k-1]-acc[i][j-1][k-1])-(acc[i-1][j][k-1]-acc[i-1][j-1][k-1]));
    if(a[l]==b[l])
    acc[i][j][k]++;
    l++;
    }
    // printf("\n");
    }
    // printf("\n");
    }
    totalsc=acc[n][n][n];
    flp=p;
    occ=0;
    for(cs=n;cs>=2;cs--)
    {
    minc=ceil((cb[cs]*flp)/100);
    if(minc>totalsc)
    continue;
    for(i=1;i<=n-cs+1;i++)
    {
    for(j=1;j<=n-cs+1;j++)
    {
    for(k=1;k<=n-cs+1;k++)
    {
    mc=acc[i+cs-1][j+cs-1][k+cs-1]-acc[i-1][j+cs-1][k+cs-1]-(acc[i+cs-1][j-1][k+cs-1]-acc[i-1][j-1][k+cs-1])-(acc[i+cs-1][j+cs-1][k-1]-acc[i-1][j+cs-1][k-1])+(acc[i+cs-1][j-1][k-1]-acc[i-1][j-1][k-1]);
    if(mc>=minc)
    {
    occ++;
    // printf("\n%d %d %d",i,j,k);
    }
    }
    }
    if((totalsc-acc[i][n][n])<minc)
    break;
    }
    if(occ)
    break;
    }
    printf("\n");
    if(totalsc==0 )
    {
    if(p)
    printf("-1");
    else
    printf("%d 1",n);
    }
    else
    {
    if(cs==1)
    printf("%d %d",cs,totalsc);
    else
    printf("%d %d",cs,occ);
    }
    }
    } 