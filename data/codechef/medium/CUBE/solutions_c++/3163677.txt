#include <iostream>
#include<stdio.h>
#include<algorithm>
#include<limits.h>
#define s(n) scanf("%d",&n)
#define f(i,n) for(int i=0;i<n;i++)

using namespace std;
char s1[70000],s2[70000],a[50][50][50],b[50][50][50];
int p;

template<size_t fi, size_t  sc,size_t  th> void cal_cube_similarity(int i,int j,int k,int (&countm)[fi][sc][th]){
countm[i+1][j+1][k+1]=countm[i][j+1][k+1]+countm[i+1][j][k+1]+countm[i+1][j+1][k]+countm[i][j][k]-countm[i+1][j][k]-countm[i][j+1][k]-countm[i][j][k+1];
	  	   	if(a[i+1][j+1][k+1]==b[i+1][j+1][k+1])
	  	   	 countm[i+1][j+1][k+1]++;
}

template<size_t fi, size_t  sc,size_t  th> void check_cube_similarity(int l,int i,int j,int k,int (&countm2)[fi][sc][th],int *ans,int *sum){
int p_count=countm2[i+l+1][j+l+1][k+l+1]-countm2[i][j][k]-countm2[i][j+l+1][k+l+1]-countm2[i+l+1][j][k+l+1]-countm2[i+l+1][j+l+1][k]+countm2[i+l+1][j][k]+countm2[i][j+l+1][k]+countm2[i][j][k+l+1];

			   	if (((float)p_count*100/((l+1)*(l+1)*(l+1)))>=p){
			   	 *ans=l+1;
			   	 (*sum)++;
			   	 }
			   	 }

 int main(){
// freopen("cube.txt","r",stdin);
 	int t;
 	 s(t);
	  while(t--){
	  	int n;
	  	int countm2[50][50][50]={0};
	  	s(n);
	  	s(p);
	  	scanf("%s",s1);
	  	scanf("%s",s2);
	  	for(int i=0;i<n;i++)
	  	 for(int j=0;j<n;j++)
          for(int k=0;k<n;k++)
	  	   {
	  	   	a[i+1][j+1][k+1]=s1[ i*n*n + j*n + k ];
	  	   	b[i+1][j+1][k+1]=s2[ i*n*n + j*n + k ];

	  	   }
	  	  for(int i=0;i<n;i++)
	  	 for(int j=0;j<n;j++)
          for(int k=0;k<n;k++)
	  	   {
	  	   cal_cube_similarity(i,j,k,countm2);
	  	     }
	  	  		int ans=0,cnt=0;
			for(int l=0;l<n;l++){
			  int sum=0;
			 for(int i=0;i<n;i++)
	  	 for(int j=0;j<n;j++)
          for(int k=0;k<n;k++){
			    if(((i+l+1)<=n)&&((j+l+1)<=n)&&((k+l+1)<=n))
			   	check_cube_similarity(l,i,j,k,countm2,&ans,&sum);
			   	if(sum!=0)
			   	 cnt=sum;

	  	 	   }
	  	 	   }
            if(ans!=0)
			   printf("%d %d\n",ans,cnt);
            else
             printf("-1\n");




	  }
 }
