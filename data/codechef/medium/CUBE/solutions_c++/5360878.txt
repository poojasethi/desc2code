#include<bits/stdc++.h>
using namespace std;
#define REP( i , n ) for( int i = 0 ; i < n ; i++ )
#define clr( A , val ) memset( A , val , sizeof( A ) )

#define pb push_back
#define fi first
#define se second

#define mp make_pair
#define N 100
typedef vector< int > vi;
typedef long long ll;
int v1[ N + 3 ][ N + 3 ][ N + 2 ] ,T[ N + 3][ N + 3 ][ N + 3 ] , v2[ N + 3 ][ N + 3 ][ N + 3 ];
int main(){
	ios_base::sync_with_stdio( 0 );
	int cases ,n , p;
	cin>>cases;
	string s,t;
	REP( c , cases ){
		clr( T , 0 );
		cin>>n>>p;
		cin>>s;
		int acu = 0;
		REP( i , n + 1 ) REP( j , n + 1 ) REP( k , n + 1 ){
			if( i == 0 || j == 0 || k == 0 ) continue;
			v1[ i ][ j ][ k ] = s[ acu ++ ] - 'a';
		}
		cin>>t;
		acu = 0;
		REP( i , n + 1 ) REP( j , n + 1 ) REP( k , n + 1 ){
			if( i == 0 || j == 0 || k == 0 ) continue;
			v2[ i ][ j ][ k ] = t[ acu ++ ] - 'a';
		}	 	
		REP( i , n + 1 ) REP( j , n + 1  ) REP( k , n + 1 ){
			if( i == 0 || j == 0 || k == 0 ) continue;
			T[ i ][ j ][ k ] = (v1[ i ][ j ][ k ] == v2[ i ][ j ][ k ] ? 1:0 ) + T[ i - 1 ][ j ][ k ] + T[ i ][ j - 1 ][ k ] +T[ i ][ j ][ k - 1 ] - T[ i - 1 ][ j - 1 ][ k ] - T[ i ][ j - 1 ][ k - 1 ] - T[ i - 1][ j ][ k - 1 ] + T[ i - 1 ][ j - 1 ][ k - 1 ];
		}
		int ans = -( 12 ) , cant = 1 ;
		REP( i , n + 1 ) REP( j , n + 1 ) REP( k , n + 1 ){
		if( i == 0 || j == 0 || k == 0 ) continue;
			REP( l , n + 1 ){
				if( l == 0 ) continue;
				if( i - l >= 0 && j - l >= 0 && k - l >= 0 ){
					int val = T[ i ][ j ][ k ] - ( T[ i - l ][ j ][ k ] + T[ i ][ j - l ][ k ] +T[ i ][ j ][ k - l ] - T[ i - l ][ j - l ][ k ] - T[ i ][ j - l ][ k - l ] - T[ i - l ][ j ][ k - l ] + T[ i - l ][ j - l ][ k - l ] );			
					if( val * 100 - l*l*l*p >= 0 ){				
						if( l > ans ){
							ans = l;
							cant = 1;
						}else if( l == ans ) cant++;
					}			
				}
			}	
		}
		if( ans == -12 ){ cout<<-1<<endl;continue;}
		cout<<ans<<" "<<cant<<endl;
	}
	
}