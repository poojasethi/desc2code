#include<stdio.h>
#include<algorithm>
#include<vector>
#include<stack>
#include<queue>
#include<math.h>
#include<string.h>
#include<stdlib.h>
#include<set>
#include<iostream>
using namespace std;

#define S(x) scanf("%d",&x)
#define S1(x) scanf("%lld",&x)
#define P(x) printf("%d\n",x)
#define P1(x) printf("%lld\n",x)
#define Y printf("YES\n")
#define N printf("NO\n")
#define mod 1000000007
#define ull long long

ull power(ull b, ull e) {
    ull p = 1;
    while (e > 0) {
        if(e&1) {
            p = (p*b)%mod;
        }
        e = e>>1;
        b = (b * b)%mod;
    }
    return p;
}
ull inp()
{
	ull n=0,s=1;
	char c;
	for(c=getchar_unlocked();c<48||c>58;c=getchar_unlocked())
	if(c=='-')s=-1;
	for(;c>47&&c<59;c=getchar_unlocked())
	n=n*10+c-48;
	return n*s;
}
char str1[41][41][41],str2[41][41][41];
ull cube[41][41][41];

int main()
{
	ull n,i,t,j,p,cs,k,cnt,l,m;
	for(S1(t);t--;)
	{
	    cnt=0;
		S1(n);
		S1(p);
		cs=n;
		getchar_unlocked();
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                for(k=0;k<n;k++)
                str1[i][j][k]=getchar_unlocked();
        getchar_unlocked();
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                for(k=0;k<n;k++)
                str2[i][j][k]=getchar_unlocked();
        getchar_unlocked();
        for(i=0;i<n;i++)
            for(j=0;j<n;j++)
                for(k=0;k<n;k++)
                {
                    cube[i+1][j+1][k+1]= str1[i][j][k]==str2[i][j][k]?1:0;
                }
        for(i=1;i<=n;i++)
            for(j=1;j<=n;j++)
                for(k=1;k<=n;k++)
                    cube[i][j][k]=cube[i-1][j][k]+cube[i][j][k];
        for(i=1;i<=n;i++)
            for(j=1;j<=n;j++)
                for(k=1;k<=n;k++)
                    cube[i][j][k]=cube[i][j-1][k]+cube[i][j][k];
        for(i=1;i<=n;i++)
            for(j=1;j<=n;j++)
                for(k=1;k<=n;k++)
                    cube[i][j][k]=cube[i][j][k-1]+cube[i][j][k];
        cnt=0;
        for(l=n;l>0;l--)
        {
            for(i=l;i<=n;i++)
                for(j=l;j<=n;j++)
                    for(k=l;k<=n;k++)
                    {
                        cs=cube[i][j][k]-cube[i-l][j][k]-cube[i][j-l][k]-cube[i][j][k-l]+cube[i-l][j-l][k]+cube[i-l][j][k-l]+cube[i][j-l][k-l]-cube[i-l][j-l][k-l];
                        if(cs*100>=p*l*l*l)
                        {
                            cnt++;
                        }
                    }
            if(cnt)
                break;
        }
        if(cnt)
            printf("%lld %lld\n",l,cnt);
        else
            P(-1);
        memset(cube,0,sizeof(cube));
	}
	return 0;
}
