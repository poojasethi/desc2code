    #include <stdio.h>
    #include <math.h>
    const int MAX=64001;
    int T,N,P,comN;
    char SA[MAX],SB[MAX];
    bool si[MAX];
    int S[41][41][41]={0};
    void solve()
    {
    int length=N*N*N;
    int k,x1,y1,z1,C;
    comN=0;
    for (int x = 1; x <= N; x++)
    {
    for (int y = 1; y <= N; y++)
    {
    for (int z = 1; z <= N; z++)
    {
    x1=x-1;y1=y-1;z1=z-1;
    S[x][y][z]=S[x1][y][z]+S[x][y1][z]+S[x][y][z1]-S[x1][y1][z]-S[x][y1][z1]-S[x1][y][z1]+S[x1][y1][z1];
    if(SA[x1*N*N+y1*N+z1]==SB[x1*N*N+y1*N+z1])
    {
    S[x][y][z]++;
    comN++;
    }
    }
    }
    }
    if(comN>0)
    {
    C=comN;
    }
    else
    {
    printf("-1\n"); return;
    }
    for (int i = N; i >= 2 ; i--)
    {
    comN=0;
    int min=ceil(i*i*i*P*0.01);
    for (int x = i; x <= N; x++)
    {
    for (int y = i; y <= N; y++)
    {
    for (int z = i; z <= N; z++)
    {
    x1=x-i;y1=y-i;z1=z-i;
    k=S[x][y][z]-S[x1][y][z]-S[x][y1][z]-S[x][y][z1]+S[x1][y1][z]+S[x][y1][z1]+S[x1][y][z1]-S[x1][y1][z1];
    if(k>=min)
    {
    comN++;
    }
    }
    }
    }
    if(comN>0)
    {
    printf("%d %d\n",i,comN);
    return;
    }
    }
    printf("1 %d\n",C);
    }
    int main()
    {
    scanf("%d",&T);
    while (T--)
    {
    scanf("%d %d\n",&N,&P);
    gets(SA);
    gets(SB);
    if(P==0)
    {
    printf("%d 1\n",N);
    continue;
    }
    solve();
    }
    } 

