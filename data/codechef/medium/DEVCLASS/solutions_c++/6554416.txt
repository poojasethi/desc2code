#include <bits/stdc++.h>

using namespace std;

#define PB push_back
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define LL long long
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%lld", &x)
#define MOD 1000000000
#define SQ 112345
#define N 1123456
#define SZ(X) ((int)(X).size())
#define ALL(X) (X).begin(), (X).end()
#define REP(I, A, B) for (int I = A; I <= B; ++I)
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define PII pair<int,int>

LL powe(LL x, LL y){
    LL ret = 1;
    while(y--){
        ret *= x;
    }
    return ret;
}

LL get(string s, string t, int ty){
    LL ans = 0;
    if(ty == 0){
        REP(i, 0, s.length() - 1)
            if(s[i] != t[i]) ans++;
        return ans / 2;
    }
    if(ty >= 1){
        queue<pair<char, int> > q;pair<char, int> p;
        REP(i, 0, s.length() - 1){
            if(s[i] != t[i]){
                if(q.size() == 0){
                    q.push(MP(s[i], i));
                    continue;
                }
                p = q.front();
                if(p.F == s[i]){
                    q.push(MP(s[i], i));
                }
                else{
                    ans += powe((i - p.S), 1);
                   // cout<<ans<<" "<<i<<endl;
                    q.pop();
                }
            }
        }
    }
    else{
        stack<pair<char, int> > q;pair<char, int> p;
        REP(i, 0, s.length() - 1){
            if(s[i] != t[i]){
                if(q.size() == 0){
                    q.push(MP(s[i], i));
                    continue;
                }
                p = q.top();
                if(p.F == s[i]){
                    q.push(MP(s[i], i));
                }
                else{
                    ans += powe((i - p.S), ty);
                   // cout<<ans<<" "<<i<<endl;
                    q.pop();
                }
            }
        }
    }
    return ans;
}

int solve(){
    int ty, b = 0, g = 0;
    sd(ty);
    char ch1, ch2;
    string s, t;
    t = "";
    cin>>s;
    LL ans;
    REP(i, 0, s.length() - 1){
        if(s[i] == 'B') b++;
        else g++;
    }
    if(abs(b - g) > 1){
        printf("-1\n");
    }
    else{
        if(abs(b - g) == 1){
            if(b > g){
                ch1 = 'B';
                ch2 = 'G';
            }
            else{
                ch1 = 'G';
                ch2 = 'B';
            }
            REP(i, 0, s.length() - 1){
                if(i % 2 == 0)
                    t += ch1;
                else t += ch2;
            }
            ans = get(s, t, ty);
        }
        else{
            ch1 = 'G';
            ch2 = 'B';
            REP(i, 0, s.length() - 1){
                if(i % 2 == 0)
                    t += ch1;
                else t += ch2;
            }
            ans = get(s, t, ty);

            t = "";
            ch1 = 'B';
            ch2 = 'G';
            REP(i, 0, s.length() - 1){
                if(i % 2 == 0)
                    t += ch1;
                else t += ch2;
            }

            ans = min(ans, get(s, t, ty));
        }
        printf("%lld\n", ans);
    }

}

int main(){
    //freopen("in.txt", "r", stdin);
    int t = 1;
    cin>>t;
    while(t--){
        solve();
    }
    return 0;
}
