#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;

int oddLen0(char ,int );
int oeLen1(char ,char ,int );

char str[100005];
int main()
{
    int cases;
    int typ,len,ans;
    int b,g,evenb,oddb;
    scanf("%d",&cases);
    while(cases--)
    {
        g = b = evenb = oddb = 0;
        scanf("%d",&typ);
        scanf("%s",&str);
        len = strlen(str);
        if(len % 2)
        {
            for(int i=0; i<len; i++)
                if(str[i] == 'B')
                    b++;
            g = len - b;
            if(b == (g+1))
            {
                if(typ == 0)
                    ans = oddLen0('B',len);
                else
                    ans = oeLen1('B','G',len);
            }
            else if(g == (b+1))
            {
                if(typ == 0)
                    ans = oddLen0('G',len);
                else
                    ans = oeLen1('G','B',len);
            }
            else
                ans = -1;
        }
        else
        {
            for(int i=0; i<len; i=i+2)
            {
                if(str[i] == 'B')
                    evenb++;
                if(str[i+1] == 'B')
                    oddb++;
            }
            if((oddb+evenb) != len/2)
                ans = -1;
            else
            {
                if(typ == 0)
                {
                    if(evenb < oddb)
                        ans = evenb;
                    else
                        ans = oddb;
                }
                else
                {
                    ans = min(oeLen1('B','G',len),oeLen1('G','B',len));
                }
            }
        }
        printf("%d\n",ans);
    }
    return 0;
}

int oddLen0(char a,int n)
{
    int swp=0;
    for(int i=0; i<n; i=i+2)
        if(str[i] != a)
            swp++;
    return swp;
}
int oeLen1(char a,char b,int n)        //  a b a b a ...
{
    int swp = 0;
    int diff,pa=0,pb=1;
    while(1)
    {
        while((pa<n) && (str[pa]==a))
            pa += 2;
        while((pa<n) && (str[pb]==b))
            pb += 2;
        if((pa < n) && (pb < n)){
            diff = pa - pb;
            if(diff < 0)
                diff = -diff;
            swp = swp + diff;
            pa += 2;
            pb += 2;
        }
        else
            break;
    }
    return swp;
}
