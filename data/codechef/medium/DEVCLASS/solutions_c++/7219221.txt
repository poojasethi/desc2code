# include <bits/stdc++.h>
 
# define INF 0x7f7f7f
# define EPS 1e-9
# define BIF 1e19
# define MOD 1000000007
 
# define ll long long int
# define ull unsigned ll 
# define pl pair <ll,ll>
# define vpl vector < pll >
# define vl vector <ll>
# define vvl vector < vll >
# define pb push_back
# define mp make_pair 
# define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
# define ff first
# define ss second 
 
# define f(i,a,b) for (i=a; i<b; i++)
# define rep(i,n) f(i,0,n)
 
 
#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
 
 
using namespace std;
 
 
int debug=1;
 
 
 
static struct IO {
	char tmp[1 << 10];
 
	// fast input routines
	char cur;
 
//#define nextChar() (cur = getc_unlocked(stdin))
//#define peekChar() (cur)
	inline char nextChar() { return cur = getc_unlocked(stdin); }
	inline char peekChar() { return cur; }
 
	inline operator bool() { return peekChar(); }
	inline static bool isBlank(char c) { return (c < '-' && c); }
	inline bool skipBlanks() { while (isBlank(nextChar())); return peekChar() != 0; }
 
	inline IO& operator >> (char & c) { c = nextChar(); return *this; }
 
	inline IO& operator >> (char * buf) {
		if (skipBlanks()) {
			if (peekChar()) {
				*(buf++) = peekChar();
				while (!isBlank(nextChar())) *(buf++) = peekChar();
			} *(buf++) = 0; } return *this; }
 
	inline IO& operator >> (string & s) {
		if (skipBlanks()) {	s.clear(); s += peekChar();
			while (!isBlank(nextChar())) s += peekChar(); }
		return *this; }
 
	inline IO& operator >> (double & d) { if ((*this) >> tmp) sscanf(tmp, "%lf", &d); return *this;	}
 
#define defineInFor(intType) \
	inline IO& operator >>(intType & n) { \
		if (skipBlanks()) { \
			int sign = +1; \
			if (peekChar() == '-') { \
				sign = -1; \
				n = nextChar() - '0'; \
			} else \
				n = peekChar() - '0'; \
			while (!isBlank(nextChar())) { \
				n += n + (n << 3) + peekChar() - 48; \
			} \
			n *= sign; \
		} \
		return *this; \
	}
 
defineInFor(int)
defineInFor(unsigned int)
defineInFor(long long)
 
	// fast output routines
 
//#define putChar(c) putc_unlocked((c), stdout)
	inline void putChar(char c) { putc_unlocked(c, stdout); }
	inline IO& operator << (char c) { putChar(c); return *this; }
	inline IO& operator << (const char * s) { while (*s) putChar(*s++); return *this; }
 
	inline IO& operator << (const string & s) { for (int i = 0; i < (int)s.size(); ++i) putChar(s[i]); return *this; }
 
	char * toString(double d) { sprintf(tmp, "%lf%c", d, '\0'); return tmp; }
	inline IO& operator << (double d) { return (*this) << toString(d); }
 
 
#define defineOutFor(intType) \
	inline char * toString(intType n) { \
		char * p = (tmp + 30); \
		if (n) { \
			bool isNeg = 0; \
			if (n < 0) isNeg = 1, n = -n; \
			while (n) \
				*--p = (n % 10) + '0', n /= 10; \
			if (isNeg) *--p = '-'; \
		} else *--p = '0'; \
		return p; \
	} \
	inline IO& operator << (intType n) { return (*this) << toString(n); }
 
defineOutFor(int)
defineOutFor(long long)
 
#define endl ('\n')
#define cout __io__
#define cin __io__
} __io__;
 
 
 
 
 
/* MAIN PROGRAM STARTS HERE */
 
 
string s;
ll n,cB,cG;
int type;
 
 
ll func()
	{
	ll c=0,c2=0;
	ll i,p,k;
	
	type=1;
	
	if (cB>cG)
		{
		c=0;
		
		queue <ll> q;
		
		for (i=0; i<n; i+=2)
			{
			if (s[i]!='B') q.push(i);
			}
		
		for (i=1; i<n; i+=2)
			{
			if (s[i]=='B') 
				{
				p=q.front();
				q.pop();
				c+=pow(abs(p-i),type);
				}
			}
		
		return c;
		}	
	else if (cB<cG)
		{
		c=0;
		
		queue <ll> q;
		
		for (i=1; i<n; i+=2)
			{
			if (s[i]!='B') q.push(i);
			}
		
		for (i=0; i<n; i+=2)
			{
			if (s[i]=='B') 
				{
				p=q.front();
				q.pop();
				c+=pow(abs(p-i),type);
				}
			}
		
		return c;
		}
	else
		{
		c=0;
		
		queue <ll> q;
		
		for (i=0; i<n; i+=2)
			{
			if (s[i]!='B') q.push(i);
			}
		
		for (i=1; i<n; i+=2)
			{
			if (s[i]=='B') 
				{
				p=q.front();
				q.pop();
				c+=pow(abs(p-i),type);
				}
			}
		
		c2=0;
		
		queue <ll> q2;
		
		for (i=1; i<n; i+=2)
			{
			if (s[i]!='B') q2.push(i);
			}
		
		for (i=0; i<n; i+=2)
			{
			if (s[i]=='B') 
				{
				p=q2.front();
				q2.pop();
				c2+=pow(abs(p-i),type);
				}
			}
		
		return min(c,c2);
		}
	}
 
 
ll func2()
	{
	ll i,j,c=0,Mc=INF;
	
	if (cG>cB)	
		{
		rep (i,n)
			if ((i&1)&&(s[i]=='B'));
			else if ((!(i&1))&&(s[i]=='G'));
			else c++;
		c/=2;
		Mc=min(Mc,c);
		}
	else if (cB>cG)
		{
		c=0;
		rep (i,n)
			if ((i&1)&&(s[i]=='G'));
			else if ((!(i&1))&&(s[i]=='B'));
			else c++;
		c/=2;
		Mc=min(Mc,c);
		}
	else
		{
		c=0;
		rep (i,n)
			if ((i&1)&&(s[i]=='B'));
			else if ((!(i&1))&&(s[i]=='G'));
			else c++;
		c/=2;
		Mc=min(Mc,c);
 
		c=0;
		rep (i,n)
			if ((i&1)&&(s[i]=='G'));
			else if ((!(i&1))&&(s[i]=='B'));
			else c++;
			
		c/=2;
		Mc=min(Mc,c);
		}
		
	return Mc;
	}
 
 
 
 
 
int main()
	{
	
	ll t,i,j,k;
	
	cin>>t;
	
	while (t--)
		{
		cin>>type;
		cin>>s;
		n=s.length();
		
		cB=cG=0;
		
		rep (i,n)
			if (s[i]=='B') cB++;
			else cG++;
			
		if (abs(cB-cG)>1) cout<<"-1"<<endl;
		else
			{
			if (type)
			cout<<func()<<endl;
			else 
			cout<<func2()<<endl;
			}
		}
	return 0;
	}  