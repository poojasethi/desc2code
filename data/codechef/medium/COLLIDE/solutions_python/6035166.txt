import fileinput
import sys

def get_end_point(x1,y1,dir):
	if dir == 'R':
		x2 = 100
		y2 = y1
	elif dir == 'L':
		x2 = -100
		y2 = y1
	elif dir == 'U':
		x2 = x1
		y2 = 100
	elif dir == 'D':
		x2 = x1
		y2 = -100
	return (x2,y2)

def get_line_equation(x1,y1,x2,y2):
	A = y2 - y1
	B = x1 - x2
	C = A*x1 + B*y1
	return (A,B,C)

def is_in_range(qry_x, x1, x2):
	return qry_x >= min(x1,x2) and qry_x <= max(x1,x2)

fn = fileinput.input()
n_tests = int(fn.readline())

for t in xrange(0, n_tests):
	line = fn.readline()
	earth_pos = line.strip().split()
	
	ex = int(earth_pos[0])
	ey = int(earth_pos[1])
	e_dir = earth_pos[2]
	
	pt = get_end_point(ex,ey,e_dir)
	ex2 = pt[0]
	ey2 = pt[1]

	#print 'earth = {0},{1},{2},{3},{4}'.format(ex,ey,e_dir,ex2,ey2)

	tmp = get_line_equation(ex,ey,ex2,ey2)
	A1 = tmp[0]
	B1 = tmp[1]
	C1 = tmp[2]

	line = fn.readline()
	n_asteroids = int(line)

	min_dist = 1000.0
	for n in xrange(0, n_asteroids):
		line = fn.readline()
		a_pos = line.strip().split()
	
		ax = int(a_pos[0])
		ay = int(a_pos[1])
		a_dir = a_pos[2]
		pt = get_end_point(ax,ay,a_dir)
		ax2 = pt[0]
		ay2 = pt[1]

		tmp = get_line_equation(ax,ay,ax2,ay2)
		A2 = tmp[0]
		B2 = tmp[1]
		C2 = tmp[2]

		det = A1*B2 - A2*B1

		dist = 1000.0
		if det == 0:
			if ex == ax and is_in_range(ey,ay,ay2) and is_in_range(ay,ey,ey2):
				dist = (max(ey,ay) - min(ey,ay)) / 2.0
			elif ey == ay and is_in_range(ex,ax,ax2) and is_in_range(ax,ex,ex2):
				dist = (max(ex,ax) - min(ex,ax)) / 2.0
		else:
			cx = (B2*C1-B1*C2) / det
			cy = (A1*C2-A2*C1) / det
			d1 = abs(cx-ax) + abs(cy-ay)
			d2 = abs(cx-ex) + abs(cy-ey)
			if d1 == d2:
				if is_in_range(cx,ex,ex2) and is_in_range(cy,ey,ey2) and is_in_range(cx,ax,ax2) and is_in_range(cy,ay,ay2):
					dist = float(d1)

		min_dist = min(min_dist, dist)

	if min_dist == 1000.0:
		print 'SAFE'
	else:
		print min_dist



