// COLLIDE
#include <cstdio>
#include <algorithm>
using namespace std;

int main(){
  double least;
  int t,xe,ye,n,xa,ya,xdist,ydist;
  char dire,dira;

#ifndef ONLINE_JUDGE
  freopen("in.txt","r",stdin);
#endif
  scanf("%d",&t);
  while(t--){
    scanf("%d %d %c %d",&xe,&ye,&dire,&n);
    least=9999.0;
    while(n--){
      scanf("%d %d %c",&xa,&ya,&dira);
      if(dire==dira) continue;
      if(ya==ye){
        if(xa>xe && dira=='L' && dire=='R') least=min(least,((double)(xa-xe))/2);
        else if(xe>xa && dire=='L' && dira=='R') least=min(least,((double)(xe-xa))/2);
      }
      else if(xa==xe){
        if(ya>ye && dira=='D' && dire=='U') least=min(least,((double)(ya-ye))/2);
        else if(ye>ya && dire=='D' && dira=='U') least=min(least,((double)(ye-ya))/2);
      }
      else{
        xdist=abs(xe-xa);
        ydist=abs(ye-ya);
        if(xdist==ydist){
          if(xa>xe && (dira=='L' || dire=='R')){
            if(ya>ye && (dira=='D' || dire=='U')) least=min(least,(double)xdist);
            else if(ye>ya && (dire=='D' || dira=='U')) least=min(least,(double)xdist);
          }
          else if(xe>xa && (dire=='L' || dira=='R')){
            if(ya>ye && (dira=='D' || dire=='U')) least=min(least,(double)xdist);
            else if(ye>ya && (dire=='D' || dira=='U')) least=min(least,(double)xdist);
          }
        }
      }
    }
    if(least==9999.0) puts("SAFE");
    else printf("%.1f\n",least);
  }
  return 0;
}