#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
#include<map>
using namespace std;

void solve()
{
int N;
int xe, ye;//coordinates of earth
int xa, ya;//coordinates of asteroid


map<char, int> direction;
direction['U'] = 0;
direction['D'] = 1;
direction['L'] = 2;
direction['R'] = 3;


int dirx[4] = {0, 0, -1, 1};
int diry[4] = {1, -1, 0, 0};

int rx, ry;
int rsx, rsy;
int de, da;
int sex, sey;
int sax, say;//speed components of asteroid
int speed; //abs value of speed
char dir[2];
float curtime, mintime = 220;

scanf("%d%d%s", &xe, &ye, dir);
de = direction[dir[0]];
sex = dirx[de], sey = diry[de];

scanf("%d", &N);
while(N--)
{
scanf("%d%d%s", &xa, &ya, dir);
da = direction[dir[0]];
sax = dirx[da], say = diry[da];

//find relative coordinates
rx = xa - xe;
ry = ya - ye;

//find relative speed
rsx = sax - sex;
rsy = say - sey;

if( (rx>0 && rsx<0 || rx == 0 && rsx == 0 || rx<0 && rsx > 0 ) && (ry>0 && rsy<0 || ry == 0 && rsy == 0 || ry<0 && rsy > 0))//check if there can at all be a collision
{
    if(rx*rsy == ry*rsx)//check if collission actually happens
    {
      curtime = (rx ==  0?(float)ry/(-rsy):(float)rx/(-rsx));
      if(curtime < mintime)mintime = curtime;
    }
}
}
if(mintime == 220)printf("%s\n", "SAFE");
else printf("%.1f\n", mintime);
return;
}
int main()
{
#ifndef ONLINE_JUDGE
freopen("in.txt","r",stdin);
freopen("out.txt","w",stdout);
#endif
int t;
scanf("%d", &t);
while(t--)
{
solve();
}
}
