#include <iostream>
#include <cstdio>

using namespace std;

int main()
{
	int t, n, score;
	float e, r;
	float m, time;
	float x[10000], y[10000];
	char ch[10000];
	char th;
	cin >> t;
	for (int i = 0; i < t; i++) {
		cin >> e >> r >> th;
		cin >> n;
		for (int j = 0; j < n; j++) {
			cin >> x[j] >> y[j] >> ch[j];
		}
		score = 0;
		time = 1000000.0f;
		for (int j = 0; j < n; j++) {
			
			if (x[j] != e) {
//				cout << "x[j] != e" << endl;
				m = ((y[j] - r)/(x[j] - e));
//				cout << "m is " << m << " th is " << th << " ch is " << ch[j] << endl;
				if (m == 0.0f) {
//					cout << "m is 0" << endl;
					if (th == 'R') {
						if (ch[j] == 'L' && x[j] > e) {
							score++;
//							cout << "collison where time is " << (x[j] - e) / 2 << endl;
							if ((x[j] - e) / 2 < time) {
								time = (x[j] - e) / 2;
//								cout << "time update " << endl;
							}
								
						}
					}
					if (th == 'L') {
						if (ch[j] == 'R' && x[j] < e) {
							score++;
//							cout << "collison where time is " << (e - x[j]) / 2 << endl;
							if ((e - x[j]) / 2 < time) {
								time = (e - x[j]) / 2;
//								cout << "time update " << endl;
							}
						}
					}
				}
				if (m == 1.0f) {
//					cout << "m is " << m << "th is " << " th " << "ch is " << ch[j] << endl;
					if (th == 'R') {
						if (ch[j] == 'D' && y[j] > r) {
							score++;
//							cout << "collison where time is " << (y[j] - r) << endl;
							if (y[j] - r < time) {
								time = y[j] - r;
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'U') {
						if (ch[j] == 'L' && y[j] > r) {
							score++;
							
//							cout << "collison where time is " << (y[j] - r) << endl;
							if (y[j] - r < time) {
								time = y[j] - r;
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'D') {
						if (ch[j] == 'R' && y[j] < r) {
							score++;
//							cout << "collison where time is " << (r - y[j]) << endl;
							if (r - y[j] < time) {
								time = r - y[j];
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'L') {
						if (ch[j] == 'U' && y[j] < r) {
							score++;
//							cout << "collison where time is " << (r - y[j]) << endl;
							if (r - y[j] < time) {
								time = r - y[j];
//								cout << "time update " << endl;
							}
						}
					}
				}
				if (m == -1.0f) {
//					cout << "m is " << m << "th is " << " th " << "ch is " << ch[j] << endl;
					if (th == 'R') {
						if (ch[j] == 'U' && y[j] < r) {
							score++;
//							cout << "collison where time is " << (r - y[j]) << endl;
							if (r - y[j] < time) {
								time = r - y[j];
//								cout << "time update " << endl;
							}
						}
					
					}
					if (th == 'U') {
						if (ch[j] == 'R' && y[j] > r) {
							score++;
//							cout << "collison where time is " << (y[j] - r) << endl;
							if (y[j] - r < time) {
								time = y[j] - r;
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'D') {
						if (ch[j] == 'L' && y[j] < r) {
							score++;
//							cout << "collison where time is " << (r - y[j]) << endl;
							if (r - y[j] < time) {
								time = r - y[j];
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'L') {
						if (ch[j] == 'D' && y[j] > r) {
							score++;
//							cout << "collison where time is " << (y[j] - r) << endl;
							if (y[j] - r < time) {
								time = y[j] - r;
//								cout << "time update " << endl;
							}
						}
					}
				}
			
			}
			if (x[j] == e) {
//				cout << "x[j] == e" << endl;
//				cout << "th is " << th << " ch is " << ch[j] << endl;
				if (th == 'U') {
						if (ch[j] == 'D' && y[j] > r) {
							score++;
//							cout << "collison where time is " << (y[j] - r) / 2 << endl;
							if ((y[j] - r) / 2 < time) {
								time = (y[j] - r) / 2;
//								cout << "time update " << endl;
							}
						}
					}
					if (th == 'D') {
						if (ch[j] == 'U' && y[j] < r) {
							score++;
//							cout << "collison where time is " << (r - y[j]) / 2 << endl;
							if ((r - y[j]) / 2 < time) {
								time = (r - y[j]) / 2;
//								cout << "time update " << endl;
							}
						}
					}
			}
		}
		if (score == 0) {
			cout << "SAFE" << endl;
		} else {
			printf("%.1f\n", time);
//			cout << score << endl;
		}
	}
	
}