// LUCIFER <3 SLS <3

#include <bits/stdc++.h>

using namespace std;

void get_direction(double &x, double &y, char ch)
{
    if (ch == 'U') {
        x = 0;
        y = 1;
    }
    else if (ch == 'D') {
        x = 0;
        y = -1;
    }
    else if (ch == 'R') {
        x = 1;
        y = 0;
    }
    else {
        x = -1;
        y = 0;
    }
}

double get_min_time(double xe, double ye, char de, double xa, double ya, char da)
{
    double a1, a2, a3, a4, den1, den2;
    get_direction(a1, a2, de);
    get_direction(a3, a4, da);
    //cout << a1 << " " << a2 << " " << a3 << " " << a4 << endl;
    den2 = a4 - a2;
    den1 = a3 - a1;
    if (den1 == 0 && den2 == 0)
        return 1e12;
    //cout << den1 << " " << den2 << endl;
    if ((xe-xa)*den2 != (ye-ya)*den1)
        return 1e12;
    if (den1 == 0) {
        double tmp = (ye-ya)/den2;
        if (tmp < 0)
            return 1e12;
        return tmp;
    }
    double tmp = (xe-xa)/den1;
    if (tmp < 0)
        return 1e12;
    return tmp;
}

int main()
{
    double xe, ye, xa, ya;
    char de, da;
    int n, t;
    cin >> t;
    while (t--) {
        cin >> xe >> ye >> de;
        cin >> n;
        double mn = 1e12;
        while (n--) {
            cin >> xa >> ya >> da;
            //cout << get_min_time(xe, ye, de, xa, ya, da) << endl;
            mn = min(mn, get_min_time(xe, ye, de, xa, ya, da));
        }
        if (mn != 1e12)
            printf("%.1lf\n", mn);
        else
            printf("SAFE\n");
    }
    return 0;
}
