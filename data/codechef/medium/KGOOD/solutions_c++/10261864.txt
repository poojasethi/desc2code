    //ALL HAIL MEGATRON

using namespace std;

#include<bits/stdc++.h>

#define wl(n) while(n--)
#define fl(i,a,b) for(i=a; i<b; i++)
#define rev(i,a,b) for(i=a; i>=b; i--)
#define scan(n) scanf("%d", &n)
#define scans(s) scanf("%s", s)
#define scanc(c) scanf("%c", &c)
#define scanp(f) scanf("%f", &f)
#define scanll(l) scanf("%lld", &l)
#define scanllu(u) scanf("%llu", &u)
#define print(n) printf("%d\n", n)
#define prints(s) printf("%s\n", s)
#define printc(c) printf("%c\n", c)
#define printp(f) printf("%f\n", f)
#define printll(l) printf("%lld\n", l)
#define printllu(u) printf("%llu\n", u)
#define nline printf("\n")
#define mclr(strn) strn.clear()
#define ignr cin.ignore()
#define MOD 1000000007
#define ll long long int
#define u64 unsigned long long int
#define PB push_back

int has[26], cnt[100005];

int main()
{
    int t;
    scan(t);
    //cout<<t<<endl;
    wl(t)
    {
        string s;
        int k,i,j;
        cin>>s>>k;
        //cout<<s<<endl;
        int n = s.size();
        memset(has,0,sizeof(has));
        
        fl(i,0,n)
            has[s[i]-'a']++;
            
        int ans = MOD, tans=0;
        
        fl(i,0,26)
        {
            tans = 0;
            fl(j,0,26)
            {
                if(has[j]>has[i] && has[j]-has[i]>k)
                    tans+=(has[j]-has[i]-k);
                else if(has[j]<has[i])
                    tans+=has[j];
            }
            ans = min(ans, tans);
        }
        
        print(ans);
    }
    
    return 0;
}