def function(b,i,j,matrix):
	if i>=j:
		return 0
	if b[j]-b[i]<=k:
		return 0
	if matrix[i][j]!=-1:
		return matrix[i][j]
	#matrix[i][j]=min(b[i]+matrix[i+1][j],matrix[i][j-1]+b[j]-b[i]-k)
	m1=b[i]+function(b,i+1,j,matrix)
	m2=b[j]-b[i]-k+function(b,i,j-1,matrix)
	matrix[i][j]=min(m1,m2)
	return matrix[i][j]

def get_k_good(word,k):
	a={}
	for i in word:
		if i in a:
			a[i]+=1
		else:
			a[i]=1
	b=sorted([a[i]for i in a])
	n=len(b)
	matrix=[[-1 for i in xrange(n)] for i in xrange(n)]
	# print b
	# print matrix
	return function(b,0,len(b)-1,matrix)

t=input()
while(t>0):
	word,k=raw_input().strip().split()
	k=int(k)
	print get_k_good(word,k)
	t-=1
