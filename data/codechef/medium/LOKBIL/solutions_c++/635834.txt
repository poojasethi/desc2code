#include <stdio.h>
#include<iostream>
using namespace std;
 
#define GRAPHSIZE 200
#define INFINITY GRAPHSIZE*GRAPHSIZE
#define MAX(a, b) ((a > b) ? (a) : (b))
 
int e=0;
int n=0;
int dist[GRAPHSIZE][GRAPHSIZE];
int d[GRAPHSIZE];
double avg[200];
 
 
void popular_friend()
{
int i=1,q=1;
double p=avg[1];
 
while(i<n)
{
if(avg[i+1]<p)
{
p=avg[i+1];
q=i+1;
}
i++;
}
printf("%d %f\n",q,avg[q]);
}
 
 
void printD(int j) {
	int i,sum=0;
	for (i = 1; i <= n; ++i) {
	sum=sum+d[i];
	}
	avg[j]=(float)sum/n;
 
}
 
void dijkstra(int s) {
	int i, k, mini;
	int visited[GRAPHSIZE];
 
	for (i = 1; i <= n; ++i) {
		d[i] = INFINITY;
		visited[i] = 0;
	}
 
	d[s] = 0;
 
	for (k = 1; k <= n; ++k) {
		mini = -1;
		for (i = 1; i <= n; ++i)
			if (!visited[i] && ((mini == -1) || (d[i] < d[mini])))
				mini = i;
 
		visited[mini] = 1;
 
		for (i = 1; i <= n; ++i)
			if (dist[mini][i])
				if (d[mini] + dist[mini][i] < d[i])
					d[i] = d[mini] + dist[mini][i];
	}
}
 
int main() {
	int i, j,t,m,f;
	int u=1;
	char ch;
	scanf("%d",&t);
	while(u<=t)
	{
	scanf("%d",&m);
	for (i = 1; i <= m; ++i)
	for (j = 1; j <= m; ++j)
	dist[i][j] = 0;
 
	n=-1;
 
	for(i=1;i<=m;i++)
	{
	ch='t';
	while(ch!='\n')
	{
	scanf("%d",&f);
	dist[i][f]=1;
	n = MAX(i, MAX(f, 1));
	ch=getchar();
	}
	}
 
	for(i=1;i<=m;i++)
	{
 
	dijkstra(i);
 
	printD(i);
	}
	popular_friend();
       //	printf("\n");
	u++;
	}
 
 //system("pause");
	return 0;
} 
