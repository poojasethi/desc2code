#define DEBUG 0
#define MAX 101
//#define MAX 11
#define INF 1<<20

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <limits.h>
#include <algorithm>
using namespace std;

int main(void) {
  int tc, n, d[MAX][MAX][MAX], i, j, k, best, best_d, total_d;
  char s[1000], *p;

  scanf("%d", &tc);
  while(tc--) {
    scanf("%d", &n);
    while(getchar()!='\n');

    for(i=1;i<=n;i++) {
      for(j=1;j<=n;j++)
        d[0][i][j]=INF;
      d[0][i][i]=0;
      gets(s);
      p=strtok(s, " ");
      if(DEBUG)
        printf("%d:", i);
      while(p!=NULL) {
        d[0][i][atoi(p)]=1;
        if(DEBUG)
          printf(" %d", atoi(p));
        p=strtok(NULL, " ");
      }
      if(DEBUG)
        printf("\n");
    }

    //fw
    for(k=1;k<=n;k++)
      for(i=1;i<=n;i++)
        for(j=1;j<=n;j++)
          d[k][i][j]=min(d[k-1][i][j], d[k-1][i][k]+d[k-1][k][j]);

    for(i=1;i<=n;i++) {
      for(total_d=0,j=1;j<=n;j++)
        total_d+=d[n][i][j];
      if(DEBUG)
	printf("i=%d total_d=%d\n", i, total_d);
      if(i==1 || total_d<best_d) {
        best=i;
        best_d=total_d;
      }
    }
    printf("%d %lf\n", best, ((double)best_d)/n);
  }
  return 0;
}
