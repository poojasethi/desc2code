#include<stdio.h>
#include <iostream>
#include<algorithm>
#include<string.h>
//#include<conio.h>
 
using namespace std;
 
int n;
int D[100];
int len[100];
int E[100][100];
int Q[100];
 
int BFS(int u)
{
	int head,tail,curr,sum=0,v,j;
	head=0;
	tail=1;
	Q[0]=u;
	fill(D,D+n,n);
	D[u]=0;
	while(tail<n)
	{
		curr=Q[head];
		for(j=0;j<len[curr];j++)
		{
			v=E[curr][j];
			if(D[v]>D[curr]+1)
			{
				D[v]=D[curr]+1;
				Q[tail]=v;
				tail++;
				sum+=D[v];
			}
		}
		head++;
	}
	return sum;
}
 
int main()
{
	int p,i,t,j;
	char inp[400];
	gets(inp);
	t=atoi(inp);
	char * pch;
	int val,frnd;
	for(p=0;p<t;p++)
	{
		gets(inp);
		n=atoi(inp);
		fill(len,len+n,0);
		for(i=0;i<n;i++)
		{
			char edges[400];
			gets(edges);
			pch=strtok (edges," ");
			while (pch != NULL)
			{
				E[i][len[i]]=atoi(pch)-1;
				len[i]++;
				pch = strtok (NULL, " ");
			}
		}
		if(n==2)
		{
			printf("1 0.500000\n");
			continue;
		}
		val=n*n;
		frnd=0;
		for(i=0;i<n;i++)
		{
            //printf("%d\n",i);
			if(len[i]>1)
			{
				j=BFS(i);
				if(j<val)
				{
					val=j;
					frnd=i;
				}
			}
		}
		printf("%d %f\n",frnd+1,(float)val/n);
 
	}
//	getch();
	return 0;
} 
