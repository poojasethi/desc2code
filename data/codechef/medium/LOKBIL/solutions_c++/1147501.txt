#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <string.h>
using namespace std;

int Q[100];
int E[100][100];
int len[100];
int D[100];
int n;

int bfs(int u)
{
	int head=0,tail=1,sum=0,curr,v;
	Q[0]=u;
	fill(D,D+n,n);
	D[u]=0;
	while(tail<n)
	{
		curr=Q[head];
		for(int j=0;j<len[curr];j++)
		{
			v=E[curr][j];
			if(D[v]>D[curr]+1)
			{
				D[v]=D[curr]+1;
				Q[tail]=v;
				tail++;
				sum+=D[v];
			}
		}
		head++;
	}
	return sum;
}

int main()
{
	char buf[400];
	gets(buf);
	int t=atoi(buf);
	char* pch;
	while(t--)
	{
		gets(buf);
		n=atoi(buf);
		fill(len,len+n,0);
		for(int i=0;i<n;i++)
		{
			char edges[401];
			gets(edges);
			pch=strtok(edges," ");
			while(pch!=NULL)
			{
				E[i][len[i]]=atoi(pch)-1;
				len[i]++;
				pch=strtok(NULL," ");
			}
		}
		if(n==2)
		{
			cout<<"1 0.500000\n";
			continue;
		}
		int val=n*n;int j,frnd=0;
		for(int i=0;i<n;i++)
		{
			if(len[i]>1)
			{
				j=bfs(i);
				if(j<val)
				{
					val=j;
					frnd=i;
				}
			}
		}
		cout.precision(6);
		cout.setf(ios::fixed,ios::floatfield);
		cout<<frnd+1<<" "<<((float)val/n)<<endl;
	}
	return 0;
}
