#include <iostream>
#include <string>
#include <sstream>
#include <fstream>
#include <iomanip>
#include <climits>

using namespace std;

const int BIG = 100000;

int main()
{
	int ngroups, n, friendid;
	cin>>ngroups;
	string line;

	while(ngroups--)
	{
		int g[100][100] = { { 0 } };
		cin>>n;

		// initialize path matrix
		for(int i=0; i<n; i++)
			for(int j=0; j<n; j++)
				g[i][j] = BIG;

		// read friend data
		getline(cin, line);

		for(int i=0; i<n; i++)
		{
			getline(cin, line);
			istringstream iss(line);

			while(iss >> friendid)
			{
				g[i][friendid-1] = 1;
				g[friendid-1][i] = 1;
			}
		}

		// warshall on g
		for(int k = 0; k < n; k++)
			for(int i = 0; i < n; i++)
				for(int j = 0; j < n; j++)
					g[i][j] = min(g[i][j], g[i][k] + g[k][j]);


		// and cinally
		int mintot = INT_MAX;
		int popular = 1;

		for(int i=0; i<n; i++)
		{
			int dist = 0;
			for(int j=0; j<n; j++)
			{
				if(j!=i) 
					dist += g[i][j];
			}

			if(dist < mintot)
			{
				mintot = dist;
				popular = i+1;
			}
		}
		
		cout<<popular<<" ";
		cout.setf(ios::fixed,ios::floatfield);
		cout<<setprecision(6)<<((double)mintot)/n<<endl;
		 
	}

    return 0;
}