#include<iostream>
#include<vector>
#include<queue>
#include<sstream>
using namespace std;

int bfs(vector<vector<int > >&a , int no[] , int** stats, int root)
{	queue<int> start;
	start.push(root);
	no[root]=1;
	stats[root][root]=0;
	start.pop();
	for(int i = 0;  i < a[root].size(); i++)
	{	no[a[root][i]]=1;
		stats[root][a[root][i]]=1;
		start.push(a[root][i]);
	}
	while(start.empty()!=1)
	{	int topper = start.front();
		start.pop();
		for(int i = 0 ; i  < a[topper].size(); i++)
			{	if(no[a[topper][i]]!=1)
				{	no[a[topper][i]]=1;
					stats[root][a[topper][i]]=stats[root][topper]+1;
					start.push(a[topper][i]);
				}
			}
		
	}
	
}

int main()
{	int grp , num;
	scanf("%i",&grp);
	for(int p = 0; p < grp ; p++)
	{	scanf("%i",&num);
		vector<vector<int> > a(num+1);
		int **stats;
		stats = new int*[num+1];
		for(int i = 0; i <num+1 ; i++)
		{	stats[i]= new int[num+1];
		}
		string line;
		getline(cin,line);
		for(int i = 1 ; i < num+1 ; i++)
		{
			getline(cin,line);
			istringstream iss(line);
			int k;
			a[i].push_back(0);
			while(iss>>k)
			{	
				a[i].push_back(k);
				
			}
			
		}
//		for(int i = 1 ; i < num+1 ; i++)
//		{	for(int j =1 ; j< a[i].size() ; j++)
//			{	cout<<a[i][j]<<"  ";
//			}
//			cout<<endl;
//		}
		int root=-1;
		for(int i = 0 ; i  < num ; i++)
		{	root = i+1;
			int no[num+1];
			for(int  j = 1; j < num+1; j++)
			{	no[j]=0;
			}
			bfs(a,no,stats,root);
		}
		int ans[num+1];
		for(int i = 1 ; i < num+1; i++)
		{	ans[i]=0;
			for(int j =1 ; j < num+1 ;j++)
			{	ans[i]+=stats[i][j];
		//		cout<<stats[i][j]<<" ";
			}
		//	cout<<endl;
		}
		int min=99999999;
		int pos=-1;
		for(int i = 1 ; i <num+1 ; i++)
		{//	cout<<ans[i]<<endl;
			if(min>ans[i])
			{	min=ans[i];
				pos=i;
			}
		}
//		cout<<min<<endl;
		double ans2 = double(min)/double(num);
		printf("%i",pos);
		printf(" ");
		printf("%0.6f\n",ans2);
	}
}