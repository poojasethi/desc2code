#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
using namespace std;

const int INF = 10000;
int t, n, a[111][111];
char buff[100000];
char *pok;

int main()
{
    //freopen("in.txt", "r", stdin);
    scanf("%d", &t);
    while (t--) {
        scanf("%d\n", &n);
        for (int i=0; i<=n; i++) for (int j=0; j<=n; j++) a[i][j] = INF;
        for (int i=0; i<=n; i++) a[i][i] = 0;
        for (int i=0; i<n; i++) {
            gets(buff);
            pok = strtok(buff, " ");
            while (pok != NULL) {
                int x = atoi(pok)-1;
                a[i][x] = 1;
                pok = strtok(NULL, " ");
            }
        }
        for (int k=0; k<n; k++)
            for (int i=0; i<n; i++)
                for (int j=0; j<n; j++) if (i!=k && j!=k)
                    a[i][j] = min(a[i][j], a[i][k]+a[k][j]);

        int sum = INF;
        int cur = -1;
        for (int i=0; i<n; i++) {
            int s = 0;
            for (int j=0; j<n; j++)
                if (a[i][j]<INF)
                    s+=a[i][j];
            if (s<sum) {
                sum = s;
                cur = i+1;
            }
        }
        double ans = sum;
        ans = ans/n;
        printf("%d %.6lf\n", cur, ans);
    }
    return 0;
}
