#include<iostream>
#include<cstdlib>
#include<cstring>
#include<queue>
using namespace std;
/*****1- white  2- gray  3-black*****/ 
struct edge;
struct node 
{
       int color,d;
       node *pi;
       edge *adj;
};
struct edge
{
       int data;
       edge *adj;
};
int n;node *array[101];
int power(int base, int n)
{
int i, p;
p = 1;
for (i = 1; i <= n; ++i)
p = p * base;
return p;
}
int bfs(int s)
{
     int i,sum;node * temp;edge *p;
     queue <node*> q;
     for(i=1;i<=n;i++)
         {
           
           array[i]->color=1;
           array[i]->d=999999;
           array[i]->pi=NULL;
         }
     array[s]->color=2;
     array[s]->d=0;
     array[s]->pi=NULL;
     q.push(array[s]);
     while(q.size()!=0)
     {
          temp=q.front();
          q.pop();   
          p=temp->adj;
          while(p!=NULL)
          {
             if(array[p->data]->color==1)
             {
                array[p->data]->color=2;
                array[p->data]->d=temp->d+1;
                array[p->data]->pi=temp;
                q.push(array[p->data]);
             }
             p=p->adj;
          }
          temp->color=3;
     }sum=0;
     for(i=1;i<=n;i++)
     {
          sum+=array[i]->d;
     }
     return sum;                   
}                                                   
main()
{
      int t,i,a,min,c,v,st;edge *p,*q;
      double ans;
      scanf("%d",&t);
      while(t--)
      {
         scanf("%d",&n);
         for(i=1;i<=n;i++)
         {
           array[i]=(node*)malloc(sizeof(node));
           array[i]->color=1;
           array[i]->d=999999;
           array[i]->pi=NULL;
           array[i]->adj=NULL;
         }
         for(i=1;i<=n;i++)
         {//cout<<"anuj"<<endl;scanf("%d",&a);cout<<"a "<<c<<endl;
            while(true)
            {
                scanf("%d",&a); c=getchar();          
                p=(edge*)malloc(sizeof(edge));                                    
                p->data=a;
                p->adj=NULL; 
                q=array[i]->adj;       
                if(array[i]->adj==NULL)
                array[i]->adj=p;
                else
                {
                   while(q->adj!=NULL)
                   {
                        q=q->adj;
                   }
                   q->adj=p;
                } if(c=='\n')break;
            }
         }min=999999;
         for(i=1;i<=n;i++)
         {
            v=bfs(i); //cout<<"hi "<<v<<" hi"<<endl;             
            if(v<min)
            {
              min=v;
              st=i;
            }
         }         //cout<<"min="<<min<<" n="<<n<<endl;                 
         ans=(double)min/(double)n;
         printf("%d %.6f\n",st,ans);
      }
      //system("pause");
}                                
