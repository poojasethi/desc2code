#include <stdio.h>
#include <string.h>
#define INF 999999
#define MIN(a, b) (a<b)?a:b
 
int main ()
       {
        int t, frnds, num, i, j, len, k, f;
         float sum;
        char str[10000];
        scanf("%d", &t);
        while (t--) {
        float minimum=3.40282e+038;
                int arr[101][101] = {0};
                int dist[101][101];
                scanf("%d", &frnds);
                getchar();
                for (i = 0; i < frnds; i++) {
                        gets(str);
                        len = strlen (str);
                        num = 0;
                        for (j = 0; j < len; j++) {
                                if (str[j] == ' ') {
                                        arr[i][num-1] = 1;
                                        num = 0;
                                }
                                else {
                                        num = (num<<3) + (num<<1) + (str[j] - '0');
                                }
                        }
                        arr[i][num-1] = 1;
                }
                // Floyd-Warshall's Algorithm
 
                for (i = 0; i < frnds; i++)                             // Setting up Base Case
                        for (j = 0; j < frnds; j++)
                                if (arr[i][j] == 1)
                                        dist[i][j] = 1;
                                else if (i == j)
                                        dist[i][j] = 0;
                                else
                                        dist[i][j] = INF;
 
                for (k = 0; k < frnds; k++)
                        for (i = 0; i < frnds; i++)
                                for (j = 0; j < frnds; j++)
                                        dist[i][j] = MIN(dist[i][j], dist[i][k] + dist[k][j]);
                int cntt=0;
                float cnt_V;
                for (i = 0; i < frnds; i++) {
                        sum = 0;
                        cntt=0;
                        for (j = 0; j < frnds; j++) {
                                if (i!=j && dist[i][j]!=INF)
                                {
                                cntt+=1;
                                        sum += dist[i][j];
                                }
                                
                        }
                        cnt_V=cntt+1;
                        if (sum/cnt_V <  minimum) {
                                 minimum = sum/cnt_V;
                                f = i;
                        }
                }
                printf("%d %.6f\n", f+1,(double)(minimum));
        }
        return 0;
}  