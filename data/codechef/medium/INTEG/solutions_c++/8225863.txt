#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define N  100010
 
typedef long long int llint;
 
#define get getchar_unlocked
inline llint INP( )
{
       llint n = 0 , s = 1 ; char p = get( ) ;
       if( p == '-' ) s=-1;
       
       while( ( p < '0' || p > '9' ) && p != EOF && p != '-' )
          p = get( ) ;
       if( p == '-' )
       s = -1 , p = get( ) ;
       while( p >= '0' && p <= '9' )
       {
              n = ( n << 3 ) + ( n << 1 ) + ( p - '0' ) ;
              p = get( ) ;
       }
       return n * s ;
}
 
int main()
{
	llint n, x, i, cost,total=0,sum=0,count,k;
	vector <llint> V(N,0);
	n=INP();
	i=0;
	while(i<n)
	{
		x=INP();
		if(x > 0){ i++; continue;}
		total += -x; V.pb (-x); i++;
	}
	cost=INP(); k=V.size();
	if(k <= cost)
	{
		printf("%lld",total);
		return 0;
	}
	sort(all(V));
	count=0; i=k-1;
	while(count != cost) sum += V[i], count++, i--;
	printf("%lld",sum);
}