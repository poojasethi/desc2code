#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ulli        unsigned long long int
#define lli         long long int
#define clr(x)      memset(x,0,sizeof(x))
#define set(x)      memset(x,1,sizeof(x))
#define memset(x,i) memset(x,i,sizeof(x))
#define Sd(x)       scanf("%d",&x);
#define Sf(x)       scanf("%f",&x);
#define Sc(x)       scanf("%c",&x);
#define Ss(x)       scanf("%s",x);
#define Sulli(x)    scanf("%llu",&x)
#define Slli(x)     scanf("%lld",&x)
#define F(i,a,n)    for(int i=a;i<n;i++)
#define FD(i,a,n)   for(int i=a;i>=n;i--)
#define Nl          printf("\n");

//-----RELEVANT CODE-----

void swap(lli *a,lli *b)
{
    lli c;
    c=*a;
    *a=*b;
    *b=c;
}
lli partition(lli a[],lli l,lli h)
{
    lli x=a[h];
    lli i=l-1,j;
    for(j=l;j<h;j++)
    {
        if(a[j]>=x)
        {
            i++;
            swap(&a[i],&a[j]);
        }
    }
    swap(&a[i+1],&a[h]);
    return i+1;
}
void quicksort(lli a[],lli l,lli h)
{
    lli p;
    if(l<h)
    {
        p=partition(a,l,h);
        quicksort(a,l,p-1);
        quicksort(a,p+1,h);
    }
}

int main()
{
    //freopen("inp.txt","r",stdin);
    lli x,n,count,sum=0;
    Slli(n);
    lli a[n];
    F(i,0,n)
        Slli(a[i]);
    Slli(x);
    if(x>0 && x<=n)
    {
    quicksort(a,0,n-1);
    sum-=(a[n-x]*x);
    F(i,n-x+1,n)
        sum-=a[i]-a[n-x];
    printf("%lld\n",sum);
    }
    else if(x==0)
        printf("%lld\n",x);
    else if(x>n)
    {
        F(i,0,n)
        {
            if(a[i]<0)
                sum+=(-(a[i]));
        }
        printf("%lld\n",sum);
    }

    return 0;
}
