#include<stdio.h>
#include<malloc.h>
long long int *A;
void Insert(long long int data,long long int N)
{
   for(;N&&A[(N-1)/2]<=data;N=(N-1)/2)
      A[N]=A[(N-1)/2];
   A[N]=data;
}
void adjust(long long int N)
{
   long long int idx=1;
   long long int temp=A[0];
   for(;idx<=N;)
   {
      if(idx<N&&A[idx+1]>A[idx])
         idx++;
      if(temp>=A[idx])
         break;
      A[(idx-1)/2]=A[idx];
      idx=idx*2+1;
   }
   A[(idx-1)/2]=temp;
}
long long int Delete(long long int N)
{
   long long int temp=A[0];
   A[0]=A[N];
   adjust(N-1);
   return temp;
}
int main()
{
   long long int N,i;
   long long int X,j,k,ans;
   scanf("%lld",&N);
   A=(long long int*)malloc(N*sizeof(long long int));
   for(i=0;i<N;i++)
   {
      scanf("%lld",&j);
      if(j>=0)
      {
      	i--;
         N--;
         continue;
      }
      Insert(-j,i);
   }
   scanf("%lld",&X);
   for(i=0;i<N-1;i++)
      A[N-i-1]=Delete(N-i-1);
   i=N-X;
   ans=0;
   if(i<0)
   i=0;
   while(i<N)
   ans+=A[i++];
   printf("%lld\n",ans);
return 0;
}