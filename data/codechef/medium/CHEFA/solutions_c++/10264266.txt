#include<iostream>
using namespace std;
long long a[1000000];
void merge(long long,long long,long long);
void merge_sort(long long low,long long high)
{
 long long mid;
 if(low<high)
 {
  mid=(low+high)/2;
  merge_sort(low,mid);
  merge_sort(mid+1,high);
  merge(low,mid,high);
 }
}
void merge(long long low,long long mid,long long high)
{
 long long h,i,j,b[100000],k;
 h=low;
 i=low;
 j=mid+1;

 while((h<=mid)&&(j<=high))
 {
  if(a[h]>=a[j])
  {
   b[i]=a[h];
   h++;
  }
  else
  {
   b[i]=a[j];
   j++;
  }
  i++;
 }
 if(h>mid)
 {
  for(k=j;k<=high;k++)
  {
   b[i]=a[k];
   i++;
  }
 }
 else
 {
  for(k=h;k<=mid;k++)
  {
   b[i]=a[k];
   i++;
  }
 }
 for(k=low;k<=high;k++) a[k]=b[k];
}
int main()
{
long long t,n,count,i,j;
 cin>>t;
 while(t--)
 {
  count=0;
  cin>>n;
  for(i=0;i<n;i++)
  {
  cin>>a[i];
  }
  merge_sort(0,n-1);
  for(i=0;i<n;i=i+2)
  count+=a[i];
  cout<<count<<"\n";
  }
  return 0;
  }