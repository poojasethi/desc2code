def merge_sort(L):
    if len(L)<2:
        return L
    else:
        mdl = int(len(L)/2)
        left = merge_sort(L[:mdl])
        right = merge_sort(L[mdl:])
        return merge(left,right)
def merge(left, right):
    result = []
    i,j = 0,0
    while i < len(left) and j<len(right):
        if left[i] > right[j]:
            result.append(left[i])
            i += 1
        else:
            result.append(right[j])
            j += 1
    while i < len(left):
        result.append(left[i])
        i += 1
    while j < len(right):
        result.append(right[j])
        j += 1
    return result
t = int(raw_input()) #number of test cases
for _ in range(t):
    arraySize = int(raw_input())
    L = map(int, raw_input().split())
    L.sort()
    optimalSum = 0
    for i in range(arraySize-1,0,-2):
    	optimalSum += L[i]
    print optimalSum
