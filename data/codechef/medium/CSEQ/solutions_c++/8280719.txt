#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000003
#define tot 300005
#define BLOCK 1000
#define MAXN 1000005
typedef unsigned long long int uint64;
typedef long long int int64;


int64 fact[MAXN+5];

void pre(){
	fact[0]=1;
	for(int64 i=1;i<=MAXN;i++){
		fact[i]=i*fact[i-1];
		fact[i]%=MOD;
	}
}
vector<int> getrep(int64 val){
	vector<int>ret;
	while(val){
		ret.pb(val%MOD);
		val/=MOD;
	}
	return ret;
}

int64 powe(int64 a,int64 b){
	int64 ret=1;
	while(b){
		if(b&1){
			ret*=a;
			ret%=MOD;
		}
		a=a*a;
		b/=2;
		a%=MOD;
	}
	return ret;
}

int64 C(int64 n,int64 k){
	if(k>n)
	return 0;
	int64 ret=fact[n];
	ret*=powe(fact[k],MOD-2);
	ret%=MOD;
	ret*=powe(fact[n-k],MOD-2);
	ret%=MOD;
	return ret;
}

int main(){
	pre();
	int64 n,l,r,t;
	cin>>t;
	while(t--){
		scanf("%lld%lld%lld",&n,&l,&r);
		int64 num=n+r-l+1;
		int64 den=n;
		vector<int>up=getrep(num);
		vector<int>dwn=getrep(den);
		int64 res=1;
		for(int i=0;i<dwn.size();i++){
			res*=C(up[i],dwn[i]);
			res%=MOD;
		}
		res-=1;
		if(res<0)
		res+=MOD;
		printf("%lld\n",res);
	}
	return 0;
}
