#include <cstdio>
#include <iostream>
#include<string.h>
#include<stdio.h>
#include<stdlib.h>
#include<vector>
using namespace std;
long long int MOD=1000003;
long long int f[1000003];
long long power(long long int a, long long int b)
{
    long long int x=1,y=a;
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y);
            if(x>MOD) x%=MOD;
        }
        y = (y*y);
        if(y>MOD) y%=MOD;
        b /= 2;
    }
    return x;
}
long long InverseEuler(long long int n)
{
    return power(n,MOD-2);
}
long long C(long long int n,long long int r)
{
    return (f[n]*((InverseEuler(f[r]) * InverseEuler(f[n-r])) % MOD)) % MOD;
}
int main() {
    int t;
    long long int L,l,r,i,S,n,n1,r1;
    f[0]=f[1]=1;
    for (i=2;i<=1000002;i++)
        f[i]= (f[i-1]*i) % MOD;
    scanf("%d",&t);
    while(t--)
    {
        S=1;
        scanf("%lld%lld%lld",&L,&l,&r);
        n=r-l+L+1;
        while(n!=0)
        {
            n1=n%MOD;
            r1=L%MOD;
            if(n1>=r1)
                S*=C(n1,r1);
            else
            {
                S=0;
                break;
            }
            n/=MOD;
            L/=MOD;
        }
        S=(S-1)%MOD;
        if(S==-1)
            S=1000002;
        printf("%lld\n",S);
    }
    return 0;
}