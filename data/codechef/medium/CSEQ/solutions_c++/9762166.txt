#include<iostream>
using namespace std;

#define MOD 1000003

long long fact[MOD], ifact[MOD];

long long power(long long x, long long n){
    if(n==0)
        return 1;
    long long p = power(x, n/2);
    if(n%2==0)
        return (p*p)%MOD;
    else
        return ((x%MOD)*((p*p)%MOD))%MOD;
}

long long ncr(long long n, long long r)
{
    if(n<r)
        return 0;
    return (((fact[n] * ifact[r])%MOD) * ifact[n-r])%MOD;
}

long long calculate(long long n, long long r)
{
    long long ans = 1;
    while(n)
    {
        ans = (ans * ncr(n%MOD, r%MOD))%MOD;
        n /= MOD;
        r /= MOD;
    }
    return (ans-1+MOD)%MOD;
}

void preprocess()
{
    fact[0] = 1;
    for(int i=1;i<=1000002;i++)
        fact[i] = (i * fact[i-1])%MOD;

    ifact[0] = 1;
    for(int i=1;i<=1000002;i++)
        ifact[i] = power(fact[i], MOD-2);
}

int main()
{
    ios_base::sync_with_stdio(false);
    preprocess();
    int t;
    long long n, l, r, ans;
    cin>>t;
    while(t--)
    {
        cin>>n>>l>>r;
        ans = calculate(n+r-l+1, n);
        cout<<ans<<endl;
    }
    return 0;
}

