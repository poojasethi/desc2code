#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<numeric>
#include<stack>
#include<queue>
#include<deque>
#include<bitset>
#include<cmath>
#include<list>
#include<set>
#include<map>
#define vi vector<int>
#define vvi vector< vi >
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end() 
#define sz(c) c.size()
#define tr(c,it)  for(typeof(c.begin()) it=c.begin();it!=c.end();it++)  
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define abs(a)  (a>=0?a:-a)
#define present(c,x) find(all(c),x)!=c.end()
#define cpresent(c,x) c.find(x)!=c.end()  
#define permute(c) next_permutation(all(c))
#define MOD 1000003
long long fact[MOD]={0};
long long inverse(long long a){
	long long x=1,y=a,b=MOD-2;
	while(b>0){
		if(b%2!=0)
		   x=(x*y)%MOD;
		y=(y*y)%MOD;
		b=b/2;   
	}
	return x;
}
using namespace std;
int main(){   
    long long i,T;
    fact[0]=1,fact[1]=1;
    for(i=2;i<=MOD;i++){
    	fact[i]=(i*fact[i-1])%MOD;
    }
    scanf("%lld",&T);
    while(T--){
    	 long long ans=1,N,L,R,n,r,np[100]={0},rp[100]={0},s1,s2,max;
    	 scanf("%lld%lld%lld",&N,&L,&R);
    	 n=N+R-L+1;
    	 r=N;
    	 i=0;
    	 while(n){
    	 	np[i]=n%MOD;
    	 	n/=MOD;
    	 	i++;
    	 }
    	 s1=i;
    	 i=0;
    	 while(r){
    	 	  rp[i]=r%MOD;
    	 	  r/=MOD;
    	 	  i++;
    	 }
    	 s2=i;
         max=(s1>s2?s1:s2);
         for(i=0;i<max;i++){
         	if(rp[i]>np[i]){
         		 ans=0;
         		 break;
         	}
         	else{
         		 long long x1=fact[np[i]];
         		 long long x2=inverse(fact[rp[i]]);
         		 long long x3=inverse(fact[np[i]-rp[i]]);
         		 ans=((((ans*x1%MOD)*x2)%MOD)*x3)%MOD;
         	}
         }
         printf("%lld\n",(ans-1+MOD)%MOD);
    }
	return 0;
}