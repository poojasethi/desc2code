#include <stdio.h>
#include <stdlib.h>
unsigned long long int fac_mod[1000009];
unsigned long long int exponentiation(unsigned long long int base,unsigned long long int power,unsigned long long int p) {   // using fast exponentiation
unsigned long long int res = 1;
 unsigned long long int cur = base;
  while (power) {
    if (power%2)   res = (res * cur)%p;
    power /= 2;  cur = (cur * cur) % p;
  }
  return res;
}
int main()
{
   unsigned long long int t,i,p=1000003;
   scanf("%llu",&t);   fac_mod[0]=1;
    for(i=1;i<1000003;i++)    fac_mod[i]=(fac_mod[i-1]*i)%p;
   while(t--)
   {
      unsigned long long int n,l,r,m,i,x1,y1,x2,y2,a1,a2,ans1,ans2,a=0;//,pow,base,denom_res,start,end,num_res=1;
       scanf("%llu%llu%llu",&n,&l,&r);
       m=r-l+1; x1=(m+n)%p; y1=(m+n)/p; x2=n%p; y2=n/p;
        if(y1<y2 || x1<x2)       printf("%lld\n",p-1);
        else
        {
            a1=((fac_mod[y1-y2])*(fac_mod[y2]))%p;
            a2=(exponentiation(a1,p-2,p))%p;
              ans1=(fac_mod[y1]*a2)%p;
               a1=((fac_mod[x1-x2])*(fac_mod[x2]))%p;
            a2=(exponentiation(a1,p-2,p))%p;
              ans2=(fac_mod[x1]*a2)%p;
              a=(ans1*ans2)%p;
              if(a==0)                printf("%llu\n",p-1);
              else             printf("%llu\n",a-1);
        }
   }
}
