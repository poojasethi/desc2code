 #include<bits/stdc++.h>
 using namespace std;
long long int a[1000004];
long long int maxis;

long long pow(long long int a,long long int b, long long int MOD)
{
	long long int x=1,y=a;
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			x%=MOD;
		}
		y = (y*y);
		y%=MOD;
		b /= 2;
	}
	return x;
}

long long InverseEuler(int n, int MOD)
{
	return pow(n,MOD-2,MOD);
}

long long smallC(int n, int r, int MOD)
{
	long long int i;
	if(maxis < n){
		for (i=maxis; i<=n;i++)
		{
			a[i]= (a[i-1]*i) % MOD;
		}
		maxis = n;
	}
	return (a[n]*((InverseEuler(a[r], MOD) * InverseEuler(a[n-r], MOD)) % MOD)) % MOD;
}

long long Lucas(long long int n, long long int m,long long int p)
{
	if (n==0 && m==0) return 1;
	long long int ni = n % p;
	long long int mi = m % p;
	if (mi>ni)
		return 0;
	return Lucas(n/p, m/p, p) * smallC(ni, mi, p);
}

int main()
{

	long long int n,r,p,l;
	long long int t,k,i;
	long long int ans;
	maxis = 1;
	a[0] = 1;
	a[1] = 1;
	a[2] = 2;
	scanf("%lld",&t);
	while(t--){
		scanf("%lld %lld %lld",&n,&l,&r);
		ans = (Lucas(n+r-l+1,n,1000003))%1000003;
		if(ans!=0){
			printf("%lld\n",ans-1);
		}else{
			printf("1000002\n");
		}
	}
}
