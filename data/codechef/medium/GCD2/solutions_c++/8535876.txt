#include <iostream>
#include <list>
#include <string>
#include <sstream>
#include <algorithm>
#include <cmath>
#include <map>

using namespace std;

typedef unsigned long long ull;
typedef long long ll;

#define SSTR( x ) dynamic_cast< std::ostringstream & >( \
        ( std::ostringstream() << std::dec << x ) ).str()
#define itc(n) char(n+48)
#define cti(ch) (ch-48)

int gcd(int a, int b)
{
	if (b == 0)
		return a;
	else
		return gcd(b, a%b);
}

int modulo(int a, string b) {
	int res = cti(b[0]);
	for (int i = 1; i < b.size(); ++i) {
		res = ((res * 10 + cti(b[i])) % a);
	}
	return res;
}

int main() {
	int T;
	cin >> T;
	
	int a;
	string b;
	for (int t = 0; t < T; ++t) {
		cin >> a >> b;
		if (a == 0) {
			cout << b << endl;
			continue;
		}
		cout << gcd(a, modulo(a, b)) << endl;
	}
	
	return 0;
}
