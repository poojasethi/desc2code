#include<bits/stdc++.h>
using namespace std;


#define MEM(a, b) memset(a, (b), sizeof(a))
#define FORN(i, n) for(i = 0; i <= n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define FORR(i,n) for(i=n;i>=0;++i)
typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef vector<int> VI;
typedef vector<PII > VP;
#define ll long long
#define l long
ll solutioncount(int N);



main()
 { int T,N,A,B,C,i,j,k,flag;
   ll god;
   ios::sync_with_stdio(false);
   cin>>T;
   while(T--)
   {
       cin>>N>>A>>B>>C;
       god=0;
      /* FORN(i,N)


       god+=solutioncount(i)-solutioncount(i-A-1)-solutioncount(i-B-1)-solutioncount(i-C-1)+solutioncount(i-A-B-2)+solutioncount(i-A-C-2)+solutioncount(i-B-C-2)-solutioncount(i-A-B-C-3);//sum of solutions for i<=N
       */
       //Using d as fourth variable such that d>=0
       god=solutioncount(N)-solutioncount(N-A-1)-solutioncount(N-B-1)-solutioncount(N-C-1)+solutioncount(N-A-B-2)+solutioncount(N-A-C-2)+solutioncount(N-B-C-2)-solutioncount(N-A-B-C-3);

       cout<<god<<endl;

   }


 }
 ll solutioncount(int N)
 {
     if(N>=0)
       //return ((N+1)*(N+2))/2;//Coeficient of x^N in (1+x)^-3
       return ((ll)(N+1)*(N+2)*(N+3))/6;

       //Coeficient of x^N in (1+x)^-4
     else
        return 0;
 }
