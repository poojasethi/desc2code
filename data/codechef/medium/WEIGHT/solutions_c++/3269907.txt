#include <iostream>
#include <algorithm>
#include <cstdio>
#include <set>
using namespace std;
#define N 22
#define W 222
#define MOD 1000007 
 
int dp[N][W][11];
 
/**
METHOD1://Using Top-Down DP approach..
*/
int dfs(int n,int w,int val)
{
	int c=0;
	if(n==0)
	{
		if(w==0) 
			return 1;
		else
			return 0;
	}
	if(w<0) return 0;
	if(dp[n][w][val]!=-1)
		return dp[n][w][val];
	for(int i=0;i<10;i++)
	{
	  c=(c+dfs(n-1,w-abs(val-i),i)%MOD)%MOD;
	}
	return dp[n][w][val]=c;
}
 
/**
METHOD 2:
By using BUTTOM-UP approach.. 
*/
 
int main()
{
	//printf("\ndriver of WWEIGHT is running\n");
	int i,j,k,t,n,w;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&n,&w);
		for(i=0;i<=n;i++)
		{
			for(j=0;j<=w;j++)
				for(k=0;k<10;k++)
					dp[i][j][k]=-1;
		}
 
		k=0;
		for(i=1;i<10;i++)
		{
		     k=(k+dfs(n-1,w,i)%MOD)%MOD;
		}
		printf("%d\n",k);
	}
	return 0;
} 