//Data Structure includes
#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>


//Other Includes
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
//#include<bitset>

using namespace std;


#define FOR(i,a,b)							for(int i=a;i<b;i++)
#define REP(i,n)							FOR(i,0,n)
#define pb								push_back
#define fill(a,v) 							memset(a, v, sizeof a)
#define SZ								size()
#define INF								(int)1e9
#define EPS								1e-9
#define bitcount							__builtin_popcount
#define all(x)								x.begin(), x.end()


typedef vector<int> VI;
typedef vector<vector<int> > VVI;
typedef long long LL;
typedef pair<int, int > PII;

#define E(x) cout<<#x<<" "<<x<<endl;

/*Main code begins now */

int n,w;
int dp[21][205][10];
int mod=1000007 ;

void input()
{
    scanf("%d%d",&n,&w);
}

void solve()
{
    int ans=0;
    for (int j=0;j<=9;j++)
    {
        ans+=dp[n][w][j];
        if (ans>=mod) ans-=mod;
    }
    printf("%d\n",ans);
}

void precompute()
{
    for (int i=1;i<=9;i++) dp[1][0][i]=1;
    dp[1][0][0]=0;
    for (int i=2;i<=20;i++)
    {
        for (int j=0;j<=200;j++)
        {
            for (int d=0;d<=9;d++)
            {
                dp[i][j][d]=0;
                for (int d2=0;d2<=9;d2++)
                {
                    int diff=j-abs(d2-d);
                    if (diff<0) continue;
                    dp[i][j][d]+=dp[i-1][diff][d2];
                    if (dp[i][j][d]>=mod) dp[i][j][d]-=mod;
                }
            }
        }
    }
}

int main()
{
    precompute();

    int T;
    scanf("%d",&T);

    while (T--)
    {
        input();
        solve();
    }
    return 0;
}

