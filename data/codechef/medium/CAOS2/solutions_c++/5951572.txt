#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <assert.h>
#include <cstring>
#include <string>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <time.h>
#include <climits>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;++i)
#define FORR(i,a,b) for(int i=a;i>=b;--i)
#define INT(x) scanf("%d",&x)
#define CHAR(x) scanf("%s", x)
#define LLD(x) scanf("%lld",&x)
#define PINT(x) printf("%d\n",x)
#define PLLD(x) printf("%lld\n",x)
#define CLR(x) memset(x,0,sizeof(x));
#define F first
#define S second
#define PB push_back
#define MOD 1000000007
#define MAX 1005

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef map<int,int> MII;
typedef vector<pair<int,int> > VPII;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef vector<VLL> VVL;

bool not_prime[MAX];

map<int,int>  primecount;

int c=0;
void cal_prime()
{
	primecount.clear();
	CLR(not_prime);
	not_prime[0] = true;
	not_prime[1] = true;
	not_prime[2] = false;
	primecount[0]=0;
	primecount[1]=0;
	c=0;
	FOR(i,2,MAX)
	{
		primecount[i] = c;

		if(!not_prime[i])
		{
			++c;
			primecount[i] = c;

			for(int j=2*i;j<MAX;j+=i)
			{

				not_prime[j] = true;
			}

		}

	}



}

int main()
{

cal_prime();

//FOR(i,0,15)
	//cout<<" i = "<<i<<" "<<primecount[i]<<endl;


int test; INT(test);

char a[505][505];
int  left[505][505];
int  right[505][505];
int  up[505][505];
int  down[505][505];

while(test>0)
{
	--test;

	CLR(a);
	CLR(left);
	CLR(right);
	CLR(up);
	CLR(down);
	int r,c; INT(r); INT(c);

	

	FOR(i,0,r)
	{	CHAR(a[i]);
		//cout<<a[i]<<endl;

	}
	FOR(i,0,r)
	{
		FOR(j,0,c)
		{
			if(j==0)
			{
				left[i][j]=0;
			}
			else{
				if(a[i][j-1]=='^')
					left[i][j] = left[i][j-1]+1;
				else if(a[i][j-1]=='#')
					left[i][j]=0;
			}
			
			if(c-j-1==c-1)
			{
				right[i][c-j-1]=0;
			}
			else{
				if(a[i][c-j]=='^')
					right[i][c-j-1] = right[i][c-j]+1;
				else if(a[i][c-j]=='#')
					right[i][c-j-1]=0;
			}		
	
			
		}

	}


	

	//up and down
	
	FOR(j,0,c)
	{
		FOR(i,0,r)
		{
			if(i==0)
			{
				up[i][j]=0;
			}
			else
			{
				if(a[i-1][j]=='^')
					up[i][j] = up[i-1][j]+1;
				else if(a[i-1][j]=='#')
					up[i][j]=0;
			}
			
			if(r-i-1==r-1)
			{
				down[r-i-1][j]=0;
			}
			else
			{
				if(a[r-i][j]=='^')
					down[r-i-1][j] = down[r-i][j]+1;
				else if(a[r-i][c]=='#')
					down[r-i-1][j]=0;
			 }		
	
			
		}

	}



	//cout<<" down mat = "<<endl;
//
	//FOR(i,0,r)
	//{
	//	FOR(j,0,c)
	//		cout<<down[i][j]<<" ";
	//	cout<<endl;
	//}


	
	int ans=0;

	FOR(i,0,r)
	{
		FOR(j,0,c)
		{

			int t  = min(left[i][j],min(down[i][j],min(right[i][j],up[i][j])));
			
			//cout<<"t = "<<t<<endl;
			//--t;
			if(a[i][j]!='#')
				ans += primecount[t];
		}

	}
		
	
	PINT(ans);



}


return 0;
}