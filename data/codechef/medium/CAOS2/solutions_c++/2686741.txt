/* Author : Pranav
BITS PILANI Hyderabad Campus */
// Cao Stage-2
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
using namespace std;

#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define fr(i,n) for(i=0; i<n; i++)
#define N 100005
#define mo 1000000007
#define f first
#define s second
typedef vector<int> vi;
typedef pair <int, int> paint;
typedef long long ll;
vector <long long> a;
   ll dpleft[501][501],dpright[501][501],dptop[501][501],dpbot[501][501];
int main(){
     ll t,n,m,i,j,k,ct=0,prime[501]={0};

     cin>>t;
     char s[501][501];
     prime[1]=0;
     for(i=2;i<=500;i++)
     {
          for(j=2;j<i;j++)
          {
               if(i%j==0){prime[i]=prime[i-1];break;}
          }
          if(j==i){prime[i]=prime[i-1]+1;}
     }
     
     
     
     while(t--){
          cin>>n>>m;
          fr(i,n){
               fr(j,m){
                    cin>>s[i][j];
               }
          }
          fr(i,n){dpleft[i][0]=0;}
          fr(j,m){dptop[0][j]=0;}

          for(i=1;i<n;i++){
               for(j=1;j<m;j++){
                    if(s[i][j-1]=='^'){
                         dpleft[i][j]=dpleft[i][j-1]+1;
                    }
                    else{dpleft[i][j]=0;}
                    
                    if(s[i-1][j]=='^'){
                         dptop[i][j]=dptop[i-1][j]+1;
                    }
                    else{dptop[i][j]=0;}
               }
          }
          
          fr(i,n){dpright[i][m-1]=0;}
          fr(j,m){dpbot[n-1][j]=0;}
          
          for(i=n-2;i>=0;i--){
               for(j=m-2;j>=0;j--){
                    if(s[i][j+1]=='^'){
                         dpright[i][j]=dpright[i][j+1]+1;
                    }
                    else{dpright[i][j]=0;}

                    if(s[i+1][j]=='^'){
                         dpbot[i][j]=dpbot[i+1][j]+1;
                    }
                    else{dpbot[i][j]=0;}


               }
          }
          ll k;
           fr(i,n){
               fr(j,m){
               if(s[i][j]=='#'){continue;}
                    if(dpright[i][j]>1&&dpleft[i][j]>1&&dptop[i][j]>1&&dpbot[i][j]>1){
                         k=min(dpright[i][j],min(dpleft[i][j],min(dptop[i][j],dpbot[i][j])));
                         ct+=prime[k];
                    }
               }
           }
           cout<<ct<<endl;
           ct=0;

     }


 return 0;

}