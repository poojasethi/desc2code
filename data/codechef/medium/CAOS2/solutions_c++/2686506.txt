#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
char arr[501][501];
struct cell{
	int T,B,L,R;
};
int min(struct cell temp)
{
	int m=temp.L;
	if(m>temp.R)
	   m=temp.R;
	if(m>temp.T)
	   m=temp.T;
	if(m>temp.B)
	   m=temp.B;
	   
	return m;
}	
int number[] = {0,0,1,2,2,3,3,4,4,4,4,5,5,6,6,6,6,7,7,8,8,8,8,9,9,9,9,9,9,10,10,11,11,11,11,11,11,12,12,12,12,13,13,14,14,14,14,15,15,15,15,15,15,16,16,16,16,16,16,17,17,18,18,18,18,18,18,19,19,19,19,20,20,21,21,21,21,21,21,22,22,22,22,23,23,23,23,23,23,24,24,24,24,24,24,24,24,25,25,25,25,26,26,27,27,27,27,28,28,29,29,29,29,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,31,31,31,32,32,32,32,32,32,33,33,34,34,34,34,34,34,34,34,34,34,35,35,36,36,36,36,36,36,37,37,37,37,37,37,38,38,38,38,39,39,39,39,39,39,40,40,40,40,40,40,41,41,42,42,42,42,42,42,42,42,42,42,43,43,44,44,44,44,45,45,46,46,46,46,46,46,46,46,46,46,46,46,47,47,47,47,47,47,47,47,47,47,47,47,48,48,48,48,49,49,50,50,50,50,51,51,51,51,51,51,52,52,53,53,53,53,53,53,53,53,53};


int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	int t,row,col,i,j,count;
	//cin>>t;
	scanf("%d",&t);
	while(t--)
	{
			count=0;
			//cin>>row>>col;
			scanf("%d %d",&row,&col);
		
			for(i=0;i<row;i++)
			{
				scanf("%s",&arr[i]);
			}
			
			cell firstDP[row][col];
			for(i=0;i<row;i++)
			{
				for(j=0;j<col;j++)
				{
					if(j==0)
					   firstDP[i][j].L=0;
					else if(arr[i][j]=='#' || arr[i][j-1]=='#')
					    firstDP[i][j].L=0;
					else
						firstDP[i][j].L=firstDP[i][j-1].L+1;
				}
				  
			}
			for(i=0;i<row;i++)
			{
				for(j=col-1;j>=0;j--)
				{
					if(j==col-1)
					   firstDP[i][j].R=0;
					else if(arr[i][j]=='#' || arr[i][j+1]=='#')
					    firstDP[i][j].R=0;
					else
						firstDP[i][j].R=firstDP[i][j+1].R+1;
				}
				  
			}
			for(i=0;i<row;i++)
			{
				for(j=0;j<col;j++)
				{
					if(i==0)
					   firstDP[i][j].T=0;
					else if(arr[i][j]=='#' || arr[i-1][j]=='#')
					    firstDP[i][j].T=0;
					else
						firstDP[i][j].T=firstDP[i-1][j].T+1;
				}
				  
			}
			for(i=row-1;i>=0;i--)
			{
				for(j=0;j<col;j++)
				{
					if(i==row-1)
					   firstDP[i][j].B=0;
					else if(arr[i][j]=='#' || arr[i+1][j]=='#')
					    firstDP[i][j].B=0;
					else
						firstDP[i][j].B=firstDP[i+1][j].B+1;
				}
				  
			}
			for(i=0;i<row;i++)
			{
			  for(j=0;j<col;j++)
			  {
			  	  int mi=min(firstDP[i][j]);
			  	  count+=number[mi];
			  	  //cout<<min(firstDP[i][j])<<" ";
			  }
			  //cout<<endl;
			}
			
			/*for(i=0;i<row;i++)
			{
			  for(j=0;j<col;j++)
			  {
			  	  //int mi=min(firstDP[i][j]);
			  	  //count+=number[mi];
			  	  //cout<<min(firstDP[i][j])<<" ";
			  	  cout<<"arr["<<i<<"]["<<j<<"] : ";
			  	  cout<<"L = "<<firstDP[i][j].L<<" , ";
			  	  cout<<"R = "<<firstDP[i][j].R<<" , ";
			  	  cout<<"T = "<<firstDP[i][j].T<<" , ";
			  	  cout<<"B = "<<firstDP[i][j].B<<" , ";
			  	  cout<<endl;
			  }
			  cout<<endl;
			}*/
			     
			//count=check(row,col);
			//count=calculate(row,col);
			printf("%d\n",count);
			
			//cout<<"\n\n";
		
		  
	}
}