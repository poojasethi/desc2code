#include<iostream>
#include<cstring>
using namespace std;
void sieve();
string a[501];
int primenumber[1010];
int top[501][501];
int bottom[501][501];
int left1[501][501];
int right1[501][501];
int main()
{
    //memset(primenumber,1,sizeof(primenumber));
    sieve();
    int test;
    cin>>test;
    while(test--)
    {
        int k,min,count=0;
        int row,col;
        cin>>row>>col;
        for(int i=1;i<=row;i++)
        {
            cin>>a[i];
        }

        //top down storing of the values

        for(int j=0;j<col;j++)
        {
            int count=0;
            for(int i=1;i<=row;i++)
            {
                if(a[i][j]=='^')
                {
                    top[i][j]=count;
                    count++;
                }
                else
                    count=0;
            }
        }

        //bottom up storing of the values

         for(int j=0;j<col;j++)
        {
            int count=0;
            for(int i=row;i>=1;i--)
            {
                if(a[i][j]=='^')
                {
                    bottom[i][j]=count;
                    count++;
                }
                else
                    count=0;
            }
        }

        //for left to right  storing the value


         for(int i=1;i<=row;i++)
        {
            int count=0;
            for(int j=0;j<col;j++)
            {
                if(a[i][j]=='^')
                {
                    left1[i][j]=count;
                    count++;
                }
                else
                    count=0;
            }
        }

        //for right to left storing vales

        for(int i=1;i<=row;i++)
        {
            int count=0;
            for(int j=col-1;j>=0;j--)
            {
                if(a[i][j]=='^')
                {
                    right1[i][j]=count;
                    count++;
                }
                else
                    count=0;
            }
        }





        int totalcount=0;
        for(int i=1;i<=row;i++)
        {
            for(int j=0;j<col;j++)
            {
                if(a[i][j]=='^')
                {
                   int min=999999;
                min = top[i][j]<min?top[i][j]:min;
                min = bottom[i][j]<min?bottom[i][j]:min;
                min = left1[i][j]<min?left1[i][j]:min;
                min = right1[i][j]<min?right1[i][j]:min;

                if(min>=2)
                {
                    //cout<<min<<"csasa"<<i<<j<<"\n";
                    totalcount=totalcount+primenumber[min];
                }
                }
                }
            }


        cout<<totalcount<<"\n";

}


    return 0;
}

void sieve()
{

     primenumber[0]=0;
  primenumber[1]=0;
  //primenumber[2]=1;

    for(int i=2;i<=1000;i++)
    {
        //cout<<primenumber[i];
        if(primenumber[i]==0)
        {
            for(int j=2*i;j<=1000;j=j+i)

          {
              primenumber[j]=1;
          }
        }
    }
    int count=0;
    for(int i=2;i<=1000;i++)
    {
        if(primenumber[i]==0)
        {
            count++;
            primenumber[i]=count;
        }
        else
            primenumber[i]=count;
        //cout<<i<<"sdfdsfs"<<primenumber[i]<<"\n";
    }

}