#include<iostream>
#define MAX 500
#define min(a,b) ((a<=b)?a:b)
using namespace std;
struct node
{
    int right;
    int top;
    int left;
    int bot;
};
int minim(int a,int b,int c,int d)
{
    return min(min(a,b),min(c,d));
}
int main(void)
{
    int i,j,k,l,t,r,c;
    int arr[MAX+1];
    for(i=0;i<=MAX;i++)
        arr[i]=1;
        arr[0]=0;
        arr[1]=0;
    for(i=2;i<=MAX;i++)
    {
        if(arr[i]==0)
            continue;
        else
        {
            for(j=2*i;j<=MAX;j+=i)
                arr[j]=0;
        }
    }
    /*for(i=0;i<=MAX;i++)
    if(arr[i]==1)
        cout<<i<<endl;*/
        int primes[MAX+1];
        primes[0]=0;
        primes[1]=0;
    for(i=2;i<=MAX;i++)
    {
        if(arr[i]==1)
            primes[i]=primes[i-1]+1;
        else
            primes[i]=primes[i-1];
    }
    cin>>t;
    while(t--)
    {
        cin>>r>>c;
        char matrix[r][c];
        struct node stats[r][c];
        for(i=0;i<=r-1;i++)
        {
            for(j=0;j<=c-1;j++)
                cin>>matrix[i][j];
        }
        for(i=0;i<=r-1;i++)
        {
            stats[i][0].left=0;
            stats[i][c-1].right=0;
            for(j=1;j<=c-1;j++)
            {
                if(matrix[i][j]=='#')
                    stats[i][j].left=0;
                else if(matrix[i][j-1]=='#')
                    stats[i][j].left=0;
                else
                    stats[i][j].left=1+stats[i][j-1].left;
            }
            for(j=c-2;j>=0;j--)
            {
                if(matrix[i][j]=='#')
                    stats[i][j].right=0;
                else if(matrix[i][j+1]=='#')
                    stats[i][j].right=0;
                else
                    stats[i][j].right=1+stats[i][j+1].right;
            }
        }
        for(i=0;i<=c-1;i++)
        {
            stats[0][i].top=0;
            stats[r-1][i].bot=0;
            for(j=1;j<=r-1;j++)
            {
                if(matrix[j][i]=='#')
                    stats[j][i].top=0;
                else if(matrix[j-1][i]=='#')
                    stats[j][i].top=0;
                else
                    stats[j][i].top=1+stats[j-1][i].top;
            }
            for(j=r-2;j>=0;j--)
            {
                if(matrix[j][i]=='#')
                    stats[j][i].bot=0;
                else if(matrix[j+1][i]=='#')
                    stats[j][i].bot=0;
                else
                    stats[j][i].bot=1+stats[j+1][i].bot;
            }
        }
        //cout<<stats[2][5].top<<stats[2][5].bot<<stats[2][5].right<<stats[2][5].left<<endl;
        k=0;
        for(i=0;i<=r-1;i++)
        {
            for(j=0;j<=c-1;j++)
            {
                l=minim(stats[i][j].bot,stats[i][j].top,stats[i][j].right,stats[i][j].left);
                k+=primes[l];
            }
        }
        cout<<k<<endl;
    }
    return 0;
}
