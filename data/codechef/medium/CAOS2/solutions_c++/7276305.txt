#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<numeric>
#include<stack>
#include<queue>
#include<deque>
#include<bitset>
#include<cmath>
#include<list>
#include<set>
#include<map>
#define vi vector<int>
#define vvi vector< vi >
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end() 
#define sz(c) c.size()
#define tr(c,it)  for(typeof(c.begin()) it=c.begin();it!=c.end();it++)  
#define max(a,b) (a>b?a:b)
#define min(a,b) (a<b?a:b)
#define abs(a)  (a>=0?a:-a)
#define present(c,x) find(all(c),x)!=c.end()
#define cpresent(c,x) c.find(x)!=c.end()  
#define permute(c) next_permutation(all(c))
#define MAX 505
using namespace std;
int prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,
71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,
181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,
293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,
421,431,433,439,443,449,457,461,463,467,479,487,491,499,503};
int main(){   
    int T,R,C,i,j,l,minm,count,mon;
    char map[MAX][MAX];
    scanf("%d",&T);
    while(T--){
    	 int L[MAX][MAX]={0},Rt[MAX][MAX]={0},Tp[MAX][MAX]={0},B[MAX][MAX]={0};
    	 count=0;
    	 scanf("%d%d",&R,&C);
		 for(i=0;i<R;i++)
		   for(j=0;j<C;j++)
		     cin>>map[i][j];
		 for(i=0;i<R;i++){
		 	L[i][0]=0;
		 	for(j=1;j<C;j++){
		 		if(map[i][j-1]=='^')
		 		   L[i][j]=L[i][j-1]+1;
		 		else
				   L[i][j]=0;   
		 	}
		 }
		 for(i=0;i<R;i++){
		 	Rt[i][C-1]=0;
		 	for(j=C-2;j>=0;j--){
		 		if(map[i][j+1]=='^')
		 		   Rt[i][j]=Rt[i][j+1]+1;
		 		else
				   Rt[i][j]=0;   
		 	}
		 }  
		 for(j=0;j<C;j++){
		 	Tp[0][j]=0;
		 	for(i=1;i<R;i++){
		 		if(map[i-1][j]=='^')
		 		   Tp[i][j]=Tp[i-1][j]+1;
		 		else
				   Tp[i][j]=0;   
		 	}
		 }
		 for(j=0;j<C;j++){
		 	B[R-1][j]=0;
		 	for(i=R-2;i>=0;i--){
		 		if(map[i+1][j]=='^')
		 		   B[i][j]=B[i+1][j]+1;
		 		else
				   B[i][j]=0;   
		 	}
		 } 
		 for(i=0;i<R;i++){
		 	for(j=0;j<C;j++){
		 		if(map[i][j]!='#'){
		 			minm=min(L[i][j],Rt[i][j]);
		 			minm=min(minm,Tp[i][j]);
		 			minm=min(minm,B[i][j]);
		 			//printf("min=%d\n",minm);
		 			for(l=0;prime[l]<=minm;l++);
		 			mon=l;
		 			//printf("mon=%d\n",mon);   
		 			count+=mon;   
		 		}
		 		
		 	}
		 }   
		 printf("%d\n",count);	    
    }
	return 0;
}