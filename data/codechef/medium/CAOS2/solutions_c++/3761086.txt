#include <iostream>
#define MAX 505
using namespace std;

int left1[MAX][MAX], right1[MAX][MAX], bottom1[MAX][MAX], top1[MAX][MAX];

int small(int a, int b)
{
    return a<b?a:b;
}

int min(int a, int b, int c, int d)
{
    return small(small(a,b), small(c, d));
}

int primes[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503};

int find_primes(int n)
{
    int cnt=0;
    int i=0;
    while(n>=primes[i++])
        cnt++;
    return cnt;
}




void count_left(char a[MAX][MAX], int r, int c)
{
    for(int i=0; i<r; i++)
    {
        int cnt=0;
        for(int j=0; j<c; j++)
        {
            if(a[i][j]=='#')
            {
                left1[i][j]= -1;
                cnt=0;
            }
            else
                left1[i][j]=cnt++;
        }
    }
}

void count_right(char a[MAX][MAX], int r, int c)
{
    for(int i=0; i<r; i++)
    {
        int cnt=0;
        for(int j=c-1; j>=0; j--)
        {
            if(a[i][j]=='#')
            {
                right1[i][j]=-1;
                cnt=0;
            }
            else
                right1[i][j]=cnt++;
        }
    }
}

void count_bottom(char a[MAX][MAX], int r, int c)
{
    for(int i=0; i<c; i++)
    {
        int cnt=0;
        for(int j=r-1; j>=0; j--)
        {
            if(a[j][i]=='#')
            {
                bottom1[j][i]=-1;
                cnt=0;
            }
            else
                bottom1[j][i]=cnt++;
        }
    }
}

void count_top(char a[MAX][MAX], int r, int c)
{
    for(int i=0; i<c; i++)
    {
        int cnt=0;
        for(int j=0; j<r; j++)
        {
            if(a[j][i]=='#')
            {
                top1[j][i]=-1;
                cnt=0;
            }
            else
                top1[j][i]=cnt++;
        }
    }
}

void display(int a[MAX][MAX], int r, int c)
{
    for(int i=0; i<r; i++)
    {
        for(int j=0; j<c; j++)
        {
            cout<<" "<<a[i][j];
        }
        cout<<endl;
    }
    cout<<endl;
    cout<<endl;
}

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int r, c;
        cin>>r>>c;
        char a[MAX][MAX]={0};
        for(int i=0; i<r; i++)
            cin>>a[i];

        count_left(a, r, c);
        count_right(a, r, c);
        count_top(a, r, c);
        count_bottom(a, r, c);

        int cnt=0;
        for(int i=0; i<r; i++)
        {
            for(int j=0; j<c; j++)
            {
                int minimum=min(left1[i][j],right1[i][j],bottom1[i][j],top1[i][j]);
                cnt+=find_primes(minimum);
            }
        }
        cout<<cnt<<endl;
        /*
        display(left1, r , c);
        display(right1,r , c);
        display(top1, r, c);
        display(bottom1, r,c );
        */
    }
    return 0;
}
