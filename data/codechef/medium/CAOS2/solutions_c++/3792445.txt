#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <bitset>

using namespace std;

const int MAXN = 510;
char inp[MAXN][MAXN];
bitset<MAXN> b;
int ttl[MAXN][MAXN], ttu[MAXN][MAXN], ttr[MAXN][MAXN], ttd[MAXN][MAXN];
int mn[MAXN][MAXN];
int prs[MAXN];

void sieve() {
    for (int i = 2; i < MAXN; i++) {
        if (b[i] == 0) {
            prs[i] = 1;
            for (int j = i * 2; j < MAXN; j += i)
                b[j] = 1;
        }
    }
    for (int i = 1; i < MAXN; i++) { 
        prs[i] += prs[i - 1];
    }
}

int main() {
    int t, r, c;
    sieve();
    scanf("%d", &t);
    while(t--) {
        scanf("%d%d", &r, &c);
        memset(ttl, 0, sizeof(ttl));
        memset(ttu, 0, sizeof(ttu));
        memset(ttd, 0, sizeof(ttd));
        memset(ttr, 0, sizeof(ttr));
        gets(inp[0]);
        for (int i = 0; i < r; i++)
            gets(inp[i]);
        for (int i = 0; i < r; i++)
            for (int j = 0; j < c; j++)
                mn[i][j] = MAXN;
        int ans = 0;
        for (int i = 0; i < r; i++) {
            mn[i][0] = mn[i][c - 1] = 0;
            if (inp[i][0] == '^') ttl[i][0] = 1;
            if (inp[i][c - 1] == '^') ttr[i][c - 1] = 1;
        }
        for (int i = 0; i < c; i++) {
            mn[0][i] = mn[r - 1][i] = 0;
            if (inp[0][i] == '^') ttu[0][i] = 1;
            if (inp[r - 1][i] == '^') ttd[r - 1][i] = 1;
        }
        for (int i = 1; i < r - 1; i++) {
            for (int j = 1; j < c - 1; j++) {
                if (inp[i][j] == '#') {
                    mn[i][j] = 0;
                    ttl[i][j] = ttu[i][j] = 0;
                }
                else if (inp[i][j] == '^') {
                    ttl[i][j] = 1 + ttl[i][j - 1];
                    ttu[i][j] = 1 + ttu[i - 1][j];
                }
            }
        }
        for (int i = r - 2; i > 0; i--) {
            for (int j = c - 2; j > 0; j--) {
                if (inp[i][j] == '#') {
                    mn[i][j] = 0;
                    ttr[i][j] = ttd[i][j] = 0;
                }
                else if (inp[i][j] == '^') {
                    ttr[i][j] = 1 + ttr[i][j + 1];
                    ttd[i][j] = 1 + ttd[i + 1][j];
                }
            }
        }
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j++) {
                if (inp[i][j] == '^') {
                    mn[i][j] = min(min(ttr[i][j] - 1, ttl[i][j] - 1),
                                                 min(ttu[i][j] - 1, ttd[i][j] - 1));
                    if (mn[i][j] >= 0)
                        ans += prs[mn[i][j]];
                }
            }
        }
        printf("%d\n", ans);
    }
    return 0;
}
