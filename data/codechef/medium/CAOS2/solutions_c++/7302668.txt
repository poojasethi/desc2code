#include<bits/stdc++.h>
using namespace std;
bool prime[1005];
int n[1005];
void sieve() {
	int l = sqrt(1000),i,j;
	memset(prime,true,sizeof(prime));
	for(i=2;i<=l;i++) {
		if(prime[i]) {
			for(j = 2*i;j<=1000;j = j+ i)
			prime[j] = false;	
		}
	}
	int c = 0;
	n[0] = n[1] = 0;
	for(i=2;i<=1000;i++) {
		if(prime[i])
		c++;
		n[i] = c;
	}
}

struct data {
	int u,d,r,l;
};

struct data pre[501][501];

int main()  {
	sieve();
	int t,r,c,i,j;
	cin >> t;
	while(t--) {
		memset(pre,0,sizeof(pre));
		cin >> r >> c;
		string st[r];
		for(i=0;i<r;i++)
		cin >> st[i];
		for(i=0;i<r;i++) {
			for(j=0;j<c;j++) {
				if(st[i][j] == '#') 
				continue;				
				if(j!= 0 && st[i][j-1] == '^')
				pre[i][j].l = pre[i][j-1].l  + 1;
				if(i!= 0 && st[i-1][j] == '^')
				pre[i][j].u = pre[i-1][j].u  + 1;
			}
		}
		for(i=r-1;i>=0;i--) {
			for(j=c-1;j>=0;j--) {
				if(st[i][j] == '#')
				continue;
//				cout <<"fdsdf\n";
				if(j!= c-1 && st[i][j+1] == '^')
				pre[i][j].r = pre[i][j+1].r  + 1;
				if(i!= r-1 && st[i+1][j] == '^')
				pre[i][j].d = pre[i+1][j].d  + 1;
			}
		}
//		cout <<"fdsdf";
		int res = 0;
/*		for(i=2;i<r-2;i++) {
			for(j=2;j<c-2;j++) {
				printf("(%d,%d,%d,%d) ",pre[i][j].l,pre[i][j].r,pre[i][j].d,pre[i][j].u);				
			}
			printf("\n");
		}
*/		for(i=2;i<r-2;i++) {
			for(j=2;j<c-2;j++) {
				if(st[i][j] == '^') {
					int p = min(pre[i][j].l,min(pre[i][j].r,min(pre[i][j].d,pre[i][j].u)));
//					cout << i <<" " <<j <<" " << p <<"\n";
//					printf("n[%d]=%d\n",p,n[p]);
					res += n[p];
				}
			}
		}
		cout << res <<"\n";
	}				
	return 0;
}