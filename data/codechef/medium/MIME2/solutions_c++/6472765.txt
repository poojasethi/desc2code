#include<iostream>
#include<string.h>
#include<stdlib.h>


using namespace std;

char UNKNOWN[8] = "unknown";

typedef struct media
{
    char ext[11];
    char type[51];
    struct media *next;
}media;

media *arr[300];

void init()
{
    int i;
    for(i = 0; i < 300; i++)
    {
        arr[i] = NULL;
    }
}

void create(char *e, char *t)
{
    media *temp, *a, *b;
    temp = (media*)malloc(sizeof(media));
    temp->next = NULL;

    strcpy(temp->ext, e);
    strcpy(temp->type, t);

    if(arr[(int)e[0]] == NULL)
    {
        arr[(int)e[0]] = temp;
    }
    else
    {
        a = arr[(int)e[0]];
        b = a;

        while(a != NULL && strcmp(e, a->ext) > 0)
        {
            b = a;
            a = a->next;
        }

        temp->next = b->next;
        b->next = temp;
    }

}

char* searchExt(char *a)
{
    media *temp;
    temp = arr[(int)a[0]];

    while(temp != NULL /*&& strcmp(a, temp->ext) <= 0*/)
    {
        if(strcmp(a, temp->ext) == 0)
        {
            return temp->type;
        }
        temp = temp->next;
    }

    return UNKNOWN;
}

char* findExt(char *a)//a is filename
{
    int l, i, flag = 0;
    l = strlen(a);
    for(i = l - 1; i >= 0; i--)
    {
        if(a[i] == '.')
            return searchExt(a+i+1);
    }

    return UNKNOWN;

}

int main()
{
    int n, q, i;
    char ext[11], type[51], filename[100];
    cin>>n;
    cin>>q;

    init();

    for(i = 0; i < n; i++)
    {
        cin>>ext;
        cin>>type;
        create(ext, type);
    }

    for(i = 0; i < q; i++)
    {
        cin>>filename;

        strcpy(type, findExt(filename));
        cout<<type<<"\n";

    }

    return 0;

}
