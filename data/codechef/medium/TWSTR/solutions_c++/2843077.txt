#include<stdio.h>
#include<string.h>

struct dish
{
    char name[1001];
    int prt;
};
int partition_array(dish a[1000],int lb,int ub)
{
    int pivot=a[lb].prt;
    dish tmp;
    int lower=lb,upper=ub;
    while(lower<upper)
    {
        while(a[lower].prt<=pivot)
            lower++;
        while(a[upper].prt>pivot)
            upper--;
        if(lower<upper)
        {
            tmp=a[lower];
            a[lower]=a[upper];
            a[upper]=tmp;
        }
    }
    tmp=a[lb];
    a[lb]=a[upper];
    a[upper]=tmp;
    return upper;
}


void quicksort(dish a[1000],int lb,int ub)
{
    if(lb<ub)
    {
        int p=partition_array(a,lb,ub);
        quicksort(a,lb,p-1);
        quicksort(a,p+1,ub);
    }
}
int main()
{
    int N;
    scanf("%d",&N);
    dish ds[N];
    for(int g=0;g<N;g++)
        scanf("%s %d",ds[g].name,&ds[g].prt);
    quicksort(ds,0,N-1);
    int Q;
    scanf("%d",&Q);
    for(int r=0;r<Q;r++)
    {
        int fg=0;
        char tmp[1001],tp2[1001];
        scanf("%s",tmp);
        for(int z=N-1;z>=0;z--)
        { strcpy(tp2,ds[z].name);
            if(tp2[0]==tmp[0] && strlen(tp2)>=strlen(tmp))
            {
                int len=strlen(tmp);
                for(int b=0;b<len;b++)
                {
                    if(tp2[b]==tmp[b])
                        fg++;
                }
                if(fg==len)
                {
                    printf("%s\n",tp2);fg=1;break;
                }
                else
                    fg=0;
            }
        }
        if(fg==0)
            printf("NO\n");
    }
}
