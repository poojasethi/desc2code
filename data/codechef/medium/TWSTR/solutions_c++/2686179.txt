#include<iostream>
#include<string>
#include<cstdio>
#include<cstring>

#define N 1000005
#define L 27
#define inf 1<<30

using namespace std;

int nodes,trie[N][L],prior[N];

void init(){
    nodes=1;
    memset(trie,-1,sizeof(trie));
    for(int i=0;i<N;i++)prior[i]=-inf;
}

inline int num(char c){
    if(c=='-')return 26;
    return c-'a';
}

void insert(string &s,int &pri){
    int p=0;
    for(int i=0;i<s.length();i++){
        if(trie[p][num(s[i])]==-1)trie[p][num(s[i])]=nodes++;
        p=trie[p][num(s[i])];
        prior[p]=max(prior[p],pri);
    }
}

string find(string &s){
    int p=0;
    string res=s;
    for(int i=0;i<s.length();i++){
        if(trie[p][num(s[i])]==-1)return "NO";
        p=trie[p][num(s[i])];
    }
    while(true){
        int next=-1;
        for(int i=0;i<L;i++){
            int pto=trie[p][i];
            if(pto!=-1){
                if(prior[pto]==prior[p]){
                    next=pto;
                    if(i==26)res+='-';
                    else res+=(char)(i+'a'); 
                    break;
                }
            }
        }
        if(next==-1)break;
        p=next;
    }
    return res;
}

int main(){
    int n;
    scanf("%d",&n);
    init();
    for(int i=0;i<n;i++){
        string s;
        int pri;
        cin>>s;
        scanf("%d",&pri);
        insert(s,pri);
    }
    int q;
    scanf("%d",&q);
    for(int i=0;i<q;i++){
        string s;
        cin>>s;
        cout<<find(s)<<endl;
    }
}
