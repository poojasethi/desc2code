#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define N 10010
int f[N];
vector<int> Adj[N];
set<pair<int,int> > s;

void dfs(int x,int v) {
    f[x]=v;
    int i,y;
    for(i=0;i<(int)Adj[x].size();i++) {
        y=Adj[x][i];
        if(f[y]==-1 || f[y]<f[x]) {
            dfs(y,f[x]+1);
        }
    }
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t,n,m,i,a,b;
    bool flag;
    cin>>t;
    while(t--) {
        cin>>n>>m;
        for(i=0;i<n;i++) {
            f[i]=-1;
            Adj[i].clear();
        }
        flag=true;
        s.clear();
        while(m--) {
            cin>>a>>b;
            --a,--b;
            Adj[a].push_back(b);
            if(flag && s.find(make_pair(b,a))!=s.end()) { flag=false; }
            if(flag) s.insert(make_pair(a,b));
        }
        if(!flag) cout<<"IMPOSSIBLE\n";
        else {
            for(i=0;i<n;i++) {
                if(f[i]==-1) dfs(i,1);
            }
            m=0;
            for(i=0;i<n;i++) m=max(m,f[i]);
            cout<<m<<'\n';
        }
    }
    return 0;
}