#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <set>
#include <vector>
#include <cmath>
#include <queue>
using namespace std;
const int N = 10009;
set<int> to[N];
int used[N];
int f[N];
int work(int x){
	//cout<<"work"<<x<<endl;
	if (used[x]==2) return -9999999;
	if (used[x]) return f[x];
	used[x]=2;
	if (!to[x].empty()){
		f[x]=-9999999;
		for (set<int>::iterator it=to[x].begin();it!=to[x].end();it++)
		f[x]=max(f[x],work(*it)+1);
	}else f[x]=1;
	used[x]=1;
	return f[x];
}
main(){
	int i,j,k,n,m,t;
	scanf("%d",&t);
	while (t--){
		scanf("%d%d",&n,&m);
		memset(used,0,sizeof(used));
		memset(f,0,sizeof(f));
		for (i=1;i<=n;i++)
		to[i].clear();
		for (i=1;i<=m;i++)
		{
			scanf("%d%d",&j,&k);
			to[k].insert(j);
		}
		int ans=-9999999;
		for (i=1;i<=n;i++){
			int tmp=work(i);
			if (tmp<0) {ans=-1;break;}
			ans=max(ans,tmp);
			
		}
		if (ans<0) printf("IMPOSSIBLE\n");else
		printf("%d\n",ans);
		//for (i=1;i<=n;i++) printf("%d ",f[i]);
		//printf("\n");
	}
}
