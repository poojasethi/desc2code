# include <stdio.h>
# include <string.h>
# include <algorithm>
# include <vector>

# define MAXN 10009
# define mi(x,y) (x<y ? x : y)
# define ma(x,y) (x>y ? x : y)

using namespace std;

vector<int> G[MAXN];

int n,t,m,a,b,p,ti,l,g;

int k[29][MAXN] , tin[MAXN] , k1[29][MAXN];

void cycle(int cur)
{
	tin[cur] = ti++; k[g][cur] = p;
	
	for(int h=0; h<(int)G[cur].size(); h++)
	{
		int to = G[cur][h];
		
		if(k[g][to] == p  &&  tin[cur] >= tin[to]) 	l = 1;
		
		else if(!k[g][to])	cycle(to);
	}
}

void dfs(int cur)
{
	int o = 0;
	
	for(int h=0; h<(int)G[cur].size(); h++)
	{
		int to = G[cur][h];
		if(!k1[g][to])	dfs(to);
		o = ma(k1[g][to] , o);
	}
	
	k1[g][cur] = o+1;
}

int main()
{
	scanf("%d",&t);
	
	for(int h=0; h<t; h++)
	{
		p = 1; l = 0; g = h;
		
		scanf("%d %d",&n,&m);
		
		for(int j=1; j<=n; j++)	G[j].resize(0);
		
		for(int j=0; j<m; j++)	scanf("%d %d",&a,&b) , G[a].push_back(b);	a = 0;
		
		for(int j=1; j<=n; j++)	if(!k[g][j])	ti = 1 , cycle(j) , p++;
		
		if(l){printf("IMPOSSIBLE\n"); continue;}
		
		for(int j=1; j<=n; j++)
		{
			if(!k1[g][j])	dfs(j);
			a = ma(a , k1[g][j]);
		}
		
		printf("%d\n",a);
	}
}
