#include<iostream>
#include<cstring>
#include<cstdio>
#include<vector>
#include<queue>
#define PB push_back
using namespace std;
const int N = 100010;
vector<int> edge[N];
int d[N],dp[N];
queue<int> que;
int main(void)
{
	int T,n,m,x,y;
	scanf("%d",&T);
	while(T--){
		scanf("%d%d",&n,&m);
		for(int i=1;i<=n;i++){
			edge[i].clear();
			d[i]=0;dp[i]=0;
		}
		for(int i=1;i<=m;i++){
			scanf("%d%d",&x,&y);
			edge[x].PB(y);
			d[y]++;
		}
		while(!que.empty()){
			que.pop();
		}
		int sum=0,maxx=0;
		for(int i=1;i<=n;i++){
			if(!d[i]){
				que.push(i);
				sum++;
				dp[i]=1;
			}
		}
		while(!que.empty()){
			int tmp=que.front();
			que.pop();
			for(int i=0;i<edge[tmp].size();i++){
				int u=edge[tmp][i];
				sum++;
				d[u]--;
				if(d[u]==0){
					que.push(u);
				}
				dp[u]=max(dp[u],dp[tmp]+1);
				maxx=max(dp[u],maxx);
			}
		}
		if(sum!=n){
			puts("IMPOSSIBLE");
		}else{
			printf("%d\n",maxx);
		}
	}
	return 0;
} 
