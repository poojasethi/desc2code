#include <bits/stdc++.h>
#define msg(x) cout << #x << " = " << x << endl
using namespace std;

const int maxN = 10224;

int t, m, n, u, v;
int mark[maxN];
bool cycle;
vector<int> adj[maxN], order;

void topsort(int x) {
    if (mark[x]) {
        if (mark[x] == 1) cycle = true;
        return;
    }
    mark[x] = 1;
    for (int i = 0; i < adj[x].size(); i++) {
        topsort(adj[x][i]);
    }
    mark[x] = 2;
    order.push_back(x);
}

int solve(int x, int c) {
    if (mark[x]) return 0;
    mark[x] = true;
    int res = c;
    for (int i = 0; i < adj[x].size(); i++) {
        res = max(res, solve(adj[x][i], c + 1));
    }
    return res;
}

int main() {
    cin.sync_with_stdio(0); cin.tie(0);
    cin >> t;
    while (t--) {
        cin >> n >> m;
        for (int i = 1; i <= n; i++) {
            adj[i].clear();
            mark[i] = 0;
        }
        cycle = false;
        while (m--) {
            cin >> u >> v;
            adj[u].push_back(v);
        }
        for (int i = 1; i <= n; i++) {
            if (!mark[i]) topsort(i);
        }
        if (cycle) {
            cout << "IMPOSSIBLE\n";
            continue;
        }
        memset(mark, 0, sizeof(mark));
        int ans = 0;
        while (!order.empty()) {
            if (!mark[order.back()]) {
                ans = max(ans, solve(order.back(), 1));
            }
            order.pop_back();
        }
        cout << ans << "\n";
    }
    return 0;
}
