//codechef http://www.codechef.com/problems/STEPUP
#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<queue>
#include<math.h>
#include<vector>
using namespace std;
int main()
{
	int testcase;
	cin>>testcase;
	while(testcase--)
	{
		int vertices,edges,i,j,element,k;
		cin>>vertices;
		cin>>edges;
		vector<int> number(vertices+1,0);
		vector<int> IndegList(vertices+1,0);
		vector< vector<int> > AdjList;
		AdjList.resize(vertices+1);
		for(k=edges;k>0;k--)
		{
			cin>>i;
			cin>>j;
			AdjList[i].push_back(j);
			IndegList[j]++;
		}
		/*for(i=1;i<=vertices;i++)
		{
			cout<<i<<"--";
			for(k=0;k<AdjList[i].size();k++)
			{
				cout<<AdjList[i][k]<<",";
			}
			cout<<endl;
		}
		cout<<endl<<endl<<"aya"<<endl;
		for(i=1;i<=vertices;i++)
		{
			cout<<i<<"--"<<IndegList[i]<<endl;
		}*/
		queue<int> set;
		for(i=1;i<=vertices;i++)
		{
			if(IndegList[i]==0)
			{
				//cout<<i<<",";
				set.push(i);
				number[i]++;
			}
		}
		for(j=1;j<=vertices;j++)
		{
			if(!set.empty())
			{
				i=set.front();
				set.pop();
				for(k=0;k<AdjList[i].size();k++)
				{
					element=AdjList[i][k];
					IndegList[element]--;
					if(IndegList[element]==0)
					{
						//cout<<element<<",";
						set.push(element);
						number[element]=number[i]+1;
					}
				}
			}
			else
			{
				break;
			}
		}
		/*for(i=1;i<=vertices;i++)
		{
			cout<<i<<"--"<<number[i]<<endl;
		}*/
		if (j==vertices+1)
		{
			cout<<number[element]<<"\n";
		}
		else
		{
			cout<<"IMPOSSIBLE\n";
		}
	}
	return 0;
}