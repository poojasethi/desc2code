#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>
#include <queue>
using namespace std;

const int MAXN = 10005;

vector<int> e[MAXN];
int in[MAXN];
int v[MAXN];


int main()
{
    int t, n, m, a, b, r, ok;
    scanf("%d", &t);
    while (t--) {
        scanf("%d%d", &n, &m);
        for (int i=1; i<=n; i++) {
            in[i]=0;
            e[i].clear();
            v[i]=0;
        }
        for (int i=0; i<m; i++) {
            scanf("%d%d", &a, &b);
            e[a].push_back(b);
            in[b]++;
        }
        queue<int> Q;
        while (!Q.empty()) Q.pop();
        for (int i=1; i<=n; i++) if (in[i]==0) {
            Q.push(i);
            v[i]=1;
        }
        ok = 1;
        r=0;
        while (!Q.empty()) {
            r++;
            int s = Q.size();
            for (int i=0; i<s && ok; i++) {
                a = Q.front(); Q.pop();
                for (int k=0; k<e[a].size() && ok; k++) {
                    b = e[a][k];
                    if (v[b]>0 && v[b]<=r) ok = 0;
                    else v[b] = r+1,Q.push(b);
                }
            }
            if (!ok) break;
        }
        if (ok && r>0) {
            printf("%d\n", r);
        } else {
            printf("IMPOSSIBLE\n");
        }
    }
    return 0;
}
