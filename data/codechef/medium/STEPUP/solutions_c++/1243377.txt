
//Author Phinfinity
#include<iostream>
#include<cstdio>
#include<vector>
#include<cassert>
#include<sstream>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include<string>
#include<cstring>
#include<cctype>
#include<cmath>
#include<cstdlib>
//#include<climits>
using namespace std;
#define pop_count(n) __builtin_popcount(n)
#define FOR(i,a,b) for(int i= (int)a; i< (int)b; ++i)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define MP make_pair

typedef pair<int,int> PI;
typedef vector<int> VI;
typedef long long LL;
#define INF 1000000000

vector<vector<int> > g;
int a[11234];
bool dfs(int i) {
   a[i]=-1;
   int cv = 0;
   for(size_t j=0;j<g[i].size();j++) {
      int v = g[i][j];
      if(a[v]==-1)
	 return false;
      if(a[v]==0 && !dfs(v)) return false;
      cv = max(a[v],cv);
   }
   a[i]=cv+1;
   return true;
}
int main()
{
   int t;
   scanf("%d",&t);
   while(t--) {
      int m,n;
      scanf("%d%d",&n,&m);
      g.clear();
      g.resize(n);
      while(m--) {
	 int tmp1,tmp2;
	 scanf("%d%d",&tmp1,&tmp2);
	 tmp1--;
	 tmp2--;
	 g[tmp1].PB(tmp2);
      }
      memset(a,0,sizeof(a));
      int ans=0;
      int i;
      for(i=0;i<n;i++){
	 if(a[i]==0)
	    if(!dfs(i))
	       break;
	 ans = max(ans,a[i]);
      }
      if(i<n)
	 printf("IMPOSSIBLE\n");
      else
	 printf("%d\n",ans);
   }
   return 0;
}
