#include<cstdio>
#include<cstdlib>
 
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define K 10000000
#define L 3000
#define s1(a) scanf("%d",&a);
#define s2(a) scanf("%lld",&a);

int a[K+1],g[L][L],visited[L][L]={0},b[K+1],n;
long long h[L][L],ans=0;

void sieve();
void scan();
void out();
void dfs(int,int,int);

void dfs(int p,int q,int k)
{
	visited[p][q]=1;
	if(p>0)
		if(visited[p-1][q]!=1 && g[p-1][q]==k)
			dfs(p-1,q,k);
	if(q>0)
		if(visited[p][q-1]!=1 && g[p][q-1]==k)
			dfs(p,q-1,k);
	if(p<n-1)
		if(visited[p+1][q]!=1 && g[p+1][q]==k)
			dfs(p+1,q,k);
	if(q<n-1)
		if(visited[p][q+1]!=1 && g[p][q+1]==k)
			dfs(p,q+1,k);
	return;
}

void sieve()
{
	a[0]=1;
	a[1]=1;
	int i,j;
	for(i=2;i*i<=K;i++)
		for(j=i*i;j<=K;j+=i)
			if(a[j]==0)
				a[j]=1;
	int c=0;
	FOR(i,2,K+1)
		if(a[i]==0)
		{
			b[i]=c;
			++c;
		}
	return;
}

void scan()
{
	long long p;
	s1(n)
	FOR(i,0,L)
		FOR(j,0,L)
			visited[i][j]=0;
	FOR(i,0,n)
	{
		FOR(j,0,n)
		{
			s2(p)
			h[i][j]=p;
			if(a[p]==0)
				g[i][j]=0;
			else if(p%2==1)
				g[i][j]=1;
			else if(p%2==0)
				g[i][j]=2;
		}
	}
	return;
}

void out()
{
	ans=0;
	FOR(i,0,n)
		FOR(j,0,n)
		{
			if(visited[i][j]==0)
			{
				if(g[i][j]==0)
				{
					ans+=b[h[i][j]];
					visited[i][j]=1;
				}
				else if(g[i][j]==1)
				{
					ans+=((h[i][j]/2) +2);
					dfs(i,j,1);
				}
				else if(g[i][j]==2)
				{
					ans+=h[i][j]/2;
					dfs(i,j,2);
				}
			}	
		}
	printf("%lld\n",ans);
	return;
}

int main()
{
	sieve();
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scan();
		out();
	}
	return 0;
}
