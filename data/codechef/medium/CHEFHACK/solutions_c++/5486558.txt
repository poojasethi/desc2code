#include <bits/stdc++.h>

using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define REVERSE(c) reverse(ALL(c))
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define INF 1000000000
#define X first
#define Y second
#define pb push_back
#define SZ(c) (c).size()
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef vector<VI> VVI;
typedef long long LL;
#define MOD 1000000007


int p[10000001];
int prime[10000001],pi=0;
void sieve()
{
	p[0]=1;
	p[1]=1;
	FOR(i,2,10000001)
		if(!p[i])
			for(int j=i+i;j<=10000000;j+=i)
				p[j]=1;
	FOR(i,2,10000001)
		if(!p[i])
			prime[i]=pi++;
}
int dx[]={0,0,1,-1};
int dy[]={-1,1,0,0};
int n;
int g[400][400],v[400][400];
void dfs(int x,int y)
{
	v[x][y]=1;
	for(int i=0;i<4;i++)
		if(x+dx[i]>=0&&x+dx[i]<n&&y+dy[i]>=0&&y+dy[i]<n&&((g[x][y]%2)==(g[x+dx[i]][y+dy[i]]%2)))
			if(p[g[x+dx[i]][y+dy[i]]])
			if(!v[x+dx[i]][y+dy[i]])
				dfs(x+dx[i],y+dy[i]);
}
int main()
{
	int t;
	scanf("%d",&t);
	sieve();
	while(t--)
	{
		scanf("%d",&n);
		REP(i,n)
			REP(j,n)
			{
				scanf("%d",&g[i][j]);
				v[i][j]=0;
			}
		LL ans=0;
		REP(i,n)
			REP(j,n)
			{

				if(v[i][j]){/*cout<<ans<<" "<<i<<" "<<j<<endl;*/continue;}
				if(!p[g[i][j]])
				{
					ans+=prime[g[i][j]];
//					cout<<ans<<" "<<i<<" "<<j<<endl;
					v[i][j]=1;
					continue;
				}
				if(!(g[i][j]&1))
				{
					ans+=(g[i][j]/2);
					dfs(i,j);
//					cout<<ans<<" "<<i<<" "<<j<<endl;
					continue;
					
				}
				ans+=(g[i][j]+3)/2;
				dfs(i,j);
//			cout<<ans<<" "<<i<<" "<<j<<endl;
				continue;
			}
		printf("%lld\n",ans);
	}
	return 0;
}









