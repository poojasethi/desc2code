#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<cstdio>
#include<stack>
#include<cstring>
using namespace std;

long arr[351][351];
int vis[351][351];
int n;
int isprime[10000000];

long long dfs(long long i,long long j)
{
	long long ans=0;      int sec;
	stack<long long> s;//15
	
	if(arr[i][j]%2==0)
		  {  ans+=(arr[i][j])/2;  sec=0;  }
		else
		  {  ans+=(arr[i][j]+1)/2+1;  sec=1;  }
	
	s.push(j);
	s.push(i);
	
	while(!s.empty())
	{
		int w=s.top();
						s.pop();
		int z=s.top();
						s.pop();
	    vis[w][z]=1;
		
		//for left neighbour
	  if(z-1>=0 && isprime[arr[w][z-1]]<0 
	             && arr[w][z-1]%2==sec && vis[w][z-1]==0 )
	  {   
		s.push(z-1);
	    s.push(w);
	  }  
	  //for right
	  if(z+1<n && isprime[arr[w][z+1]]<0 
	           && arr[w][z+1]%2==sec && vis[w][z+1]==0)
	  {   
	    s.push(z+1);
	    s.push(w);	
	  }
	  //for up
	  if(w-1>=0 && isprime[arr[w-1][z]]<0 
	             && arr[w-1][z]%2==sec && vis[w-1][z]==0 )
	  {   
		      s.push(z);
              s.push(w-1);
	  }
	  //for down
	  if(w+1<n && isprime[arr[w+1][z]]<0 
	           && arr[w+1][z]%2==sec  && vis[w+1][z]==0 )
	  {  
		    s.push(z);
	          s.push(w+1);
	  }
	}
	
	return ans;
}

//  2 3 5 7 11 13 17 19 23 29
//  3+2+1+5+8+9 
int main()
{
	long long  i,j,t;
	long long ans;
	
	for(i=0;i<=10000000;i++)
		isprime[i]=1;
	long long x=1;
	
	isprime[0]=-1;   isprime[1]=-1;
	
	for(i=2;i<=10000000;i++)
		if(isprime[i]>0)
		{   
			isprime[i]=x++;
			for(j=i*2;j<=10000000;j+=i)
				isprime[j]=-1;  
		}
		
	
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld",&n);
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
				scanf("%lld",&arr[i][j]);
		
    memset(vis,0,sizeof(vis));
		ans=0;
		for(i=0;i<n;i++)
			for(j=0;j<n;j++)
				if(!vis[i][j])
				{
					if(isprime[arr[i][j]]>0)
					 	ans+=isprime[arr[i][j]]-1; 
						
				  else
				    ans+=dfs(i,j);
				} 
						
	    cout<<ans<<endl;
	}
	return 0;
}