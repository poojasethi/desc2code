#include<iostream>
#include<stdlib.h>
#include<math.h>
#define m 10000000
#define getcx                   getchar_unlocked
inline void inp( int &n1 )
{
       n1 = 0;
       int ch=getcx(); int sign = 1;
       while( ch < '0' || ch > '9' )  { if ( ch == '-' ) sign = -1; ch=getcx(); }
       while( ch >= '0' && ch <= '9' ) n1=(n1<<3)+(n1<<1)+ch-'0', ch=getcx();
       n1 = n1*sign;
}  
 
bool isprime[10000000];
int cost[10000000]; 
int arr[352][352];
void seive()
{
     int i,j,k;
     isprime[2]=1;
     for(i=3;i<m;i+=2)
     if(i%2)isprime[i]=1;
     for(i=3;i<=sqrt(m);i+=2)
     {
                     if(isprime[i])
                     {
                     for(j=i*i;j<=m;j+=i)
                     isprime[j]=0;
                     }
     }
}
void allot_cost()
{
     int i,j;
     int id=0;
     for(i=0;i<m;i++)
     {
                     if(isprime[i]){
                                    cost[i]=id;
                                    id++;
                                    }
                     else if(i%2)
                     cost[i]=(i+3)/2;
                     else if(!(i%2))
                     cost[i]=i/2;
     }
}
 void fun(int i,int j,int k,int n)
 {
      if(i+1<n && arr[i+1][j]%2==k && !isprime[arr[i+1][j]]){
                                    arr[i+1][j]=-1;
                                    fun(i+1,j,k,n);
                                    }
      if(j+1<n && arr[i][j+1]%2==k && !isprime[arr[i][j+1]]){
                                   arr[i][j+1]=-1;
                                   fun(i,j+1,k,n);
                                   }
      if(i-1>=0 && arr[i-1][j]%2==k && !isprime[arr[i-1][j]]){
                                    arr[i-1][j]=-1;
                                    fun(i-1,j,k,n);
                                    }
      if(j-1>=0 && arr[i][j-1]%2==k && !isprime[arr[i][j-1]]){
                                    arr[i][j-1]=-1;
                                    fun(i,j-1,k,n);
                                    }
                                    
      return;
 }
                                
int main()
{
    seive();
    allot_cost();
    int t,i,j;
 /*   for(i=0;i<15;i++)printf(" %d ",isprime[i]);
    printf("\n");
    for(i=0;i<15;i++)printf(" %d ",cost[i]);
    printf("\n");
 */   scanf("%d",&t);
    while(t--)
    {
              int n;
             inp(n);
    //  scanf("%d",&n);
              long long int sum=0;
              for(i=0;i<n;i++)
              for(j=0;j<n;j++)//scanf("%d",&arr[i][j]);
              inp(arr[i][j]);  
              for(i=0;i<n;i++)
              {
              for(j=0;j<n;j++)
              {
                            //  printf("\nyes\n");
                              int a1=arr[i][j]%2;
                              if(arr[i][j]!=-1){
                                                sum+=cost[arr[i][j]];
                                           //     printf("\ncost is %d %d %d\n",cost[arr[i][j]],i,j);
                                               
                                                if(!(isprime[arr[i][j]]))
                                                {
                                            //    printf("\nIn\n");
                                                arr[i][j]=-1;
                                                fun(i,j,a1,n);
                                                }
                                                
                                                }
              }
              }
              printf("%lld\n",sum);
    }
  //  system("pause");
    return 0;
}