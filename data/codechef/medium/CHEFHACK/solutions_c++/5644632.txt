#include<iostream>
#include<cstdio>
#include<stack>
#include<queue>
#include<set>
#include<iomanip>
#include<complex>
#include<vector>
#include<map>
#include<algorithm>
#include<cmath>
#include<string>
#include<bitset>
#include<memory.h>
#include<cassert>
#include<ctime>
#ifndef ONLINE_JUDGE
#include<conio.h>
#endif

#pragma comment(linker, "/stack:30000000")

using namespace std;

#define For(i,l,r) for (int i = l ;i < r ; ++ i )
#define ForI(it , s , T) for (T :: iterator it = s.begin(); it != s.end() ; ++ it )
#define LL long long
#define iinf 2000000000
#define linf 4000000000000000000LL
#define MOD  1000000007
#define Pi 3.1415926535897932384
#define bit(mask,i) ((mask>>i)&1)
#define pb(x) push_back(x)
#define mk(x,y) make_pair(x,y)
#define sqr(x) ((x)*(x))
#define pause cin.get();cin.get();
#define fir first
#define sec second
#define ln(x) log(x)
#define pi pair<int,int> 
#define MAX 10000010
#define LMT 10000
#define LEN 5761456

unsigned flag[MAX/64];
int a[MAX], total;

#define ifc(x) (flag[x>>6]&(1<<((x>>1)&31)))
#define isc(x) (flag[x>>6]|=(1<<((x>>1)&31)))
int i,j,k,n,m,t,A[400][400],vis[400][400];
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};
void sieve()
{
	int i, j, k;
	for(i=3; i<LMT; i+=2)
		if(!ifc(i))
			for(j=i*i,k=i<<1; j<MAX; j+=k)
				isc(j);
	
	a[2] = 1;
	int cnt=2;
	for(i=3,j=2; i<MAX; i+=2)
		if(!ifc(i))
			a[i] = cnt++;
	
}

void bfs(int x,int y,int mark)
{
     vis[x][y]=1;
     queue< pi > Q;
     Q.push(mk(x,y)); 
     while(!Q.empty())
     {
                      
       int px=Q.front().fir,py=Q.front().sec;
      /// cout<<px<<" "<<py<<endl;
       Q.pop();
       
       For(i,0,4) { int p=px+dx[i],q=py+dy[i];
       if(!vis[p][q] && A[p][q]%2==mark && p>=0 && p<n && q>=0 && q<n && !a[A[p][q]] ) { vis[p][q]=1; Q.push(mk(p,q)); }
       }
       
     }
     //  cout<<endl;
}
       

main()
{
sieve();
cin>>t;
while(t--)
{
 cin>>n;
 For(i,0,n) For(j,0,n) { cin>>A[i][j]; vis[i][j]=0; }
 LL ans=0;
 
 
 For(i,0,n) For(j,0,n)  if(!vis[i][j])
 {
 if(a[A[i][j]]) { ans+=(a[A[i][j]]-1);  vis[i][j]=1; }
 else 
 {
      
      if(A[i][j]%2==1) ans+=(A[i][j]/2+2);
      else ans+=A[i][j]/2;
      bfs(i,j,A[i][j]%2);
     // cout<<i<<" "<<j<<" "<<ans<<endl;
 }
 }

cout<<ans<<endl;

}
#ifndef ONLINE_JUDGE
getch();
#endif
}
