// Name:- Kunal Sheth

// Problem:- End Of The World

// Link:- http://www.codechef.com/problems/CHEFHACK/

// Site:- CodeChef

//just want to check if the time reduces drastically due to the use of fast IO for this problem...:P

//header files

#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
#include<cstring>
using namespace std;

//end of header files


//definitions

#define MOD 1000000007
#define llu long long unsigned
#define lld long long
#define ld long

//end of definitions


//fast input

int scan_d()    {int ip=getchar_unlocked(),ret=0,flag=1;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=ret*10+ip-'0';return flag*ret;}
ld scan_ld()    {int ip=getchar_unlocked(),flag=1;ld ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=ret*10+ip-'0';return flag*ret;}
lld scan_lld()    {int ip=getchar_unlocked(),flag=1;lld ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=ret*10+ip-'0';return flag*ret;}
llu scan_llu()    {int ip=getchar_unlocked();llu ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked());for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=ret*10+ip-'0';return ret;}

//end of fast input

//fast output

//no line break
void print_d(int n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=10;char output_buffer[10];do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<10);}
void print_ld(ld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=11;char output_buffer[11];do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<11);}
void print_lld(lld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=21;char output_buffer[21];do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<21);}
void print_llu(llu n)     {int i=21;char output_buffer[21];do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<21);}

//new line
void println_d(int n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=10;char output_buffer[11];output_buffer[10]='\n';do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<11);}
void println_ld(ld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=11;char output_buffer[12];output_buffer[11]='\n';do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<12);}
void println_lld(lld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=21;char output_buffer[22];output_buffer[21]='\n';do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<22);}
void println_llu(llu n)     {int i=21;char output_buffer[22];output_buffer[21]='\n';do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<22);}

//special char
char sp;
void printsp_d(int n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=10;char output_buffer[11];output_buffer[10]=sp;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<11);}
void printsp_ld(ld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=11;char output_buffer[12];output_buffer[11]=sp;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<12);}
void printsp_lld(lld n)     {if(n<0){n=-n;putchar_unlocked('-');}int i=21;char output_buffer[22];output_buffer[21]=sp;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<22);}
void printsp_llu(llu n)     {int i=21;char output_buffer[22];output_buffer[21]=sp;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<22);}

//end of fast output

bool s[10000001];
int pass[351][351];
bool crack[351][351];
map<int,int>p;

//extra functions

void rec(int i,int j,bool d,int n)
{
    if(i<n-1&&!crack[i+1][j]&&pass[i+1][j]%2==d)
    {
        crack[i+1][j]=1;
        rec(i+1,j,d,n);
    }
    if(j<n-1&&!crack[i][j+1]&&pass[i][j+1]%2==d)
    {
        crack[i][j+1]=1;
        rec(i,j+1,d,n);
    }
    if(j>0&&!crack[i][j-1]&&pass[i][j-1]%2==d)
    {
        crack[i][j-1]=1;
        rec(i,j-1,d,n);
    }
    if(i>0&&!crack[i-1][j]&&pass[i-1][j]%2==d)
    {
        crack[i-1][j]=1;
        rec(i-1,j,d,n);
    }
}

//end of extra fnctions


//main

int main()
{
    int t,n,k=1;
    long long sum,i,j;
    p[2]=0;
    for(i=3;i<=10000000;i+=2)
        if(!s[i])
        {
            p[i]=k++;
            for(j=i;i*j<=10000000;j+=2)
                s[i*j]=1;
        }
    scanf("%d",&t);
    while(t--)
    {
        //scanf("%d",&n);
        n=scan_d();
        sum=0;
        s[0]=s[1]=1;
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                //scanf("%d",&pass[i][j]);
                pass[i][j]=scan_d();
                if(pass[i][j]==2||(pass[i][j]%2!=0&&!s[pass[i][j]]))
                {
                    crack[i][j]=1;
                    sum+=p[pass[i][j]];
                }
                else
                    crack[i][j]=0;
            }
        }
        for(i=0;i<n;i++)
        {
            for(j=0;j<n;j++)
            {
                if(!crack[i][j])
                {
                    if(pass[i][j]%2==0)
                    {
                        
                        sum+=pass[i][j]/2;
                        crack[i][j]=1;
                        rec(i,j,0,n);
                    }
                    else
                    {
                        sum+=((pass[i][j]+3)/2);
                        crack[i][j]=1;
                        rec(i,j,1,n);
                    }
                }
            }
        }
        println_lld(sum);
    }
    return 0;
} 

//end of main