#include<cstdio>
#include<vector>
#include<algorithm>
#define max 10000000
using namespace std;
vector <vector <long long int> > num(350,vector<long long int>(350,0));
vector <vector <int> > res(350,vector<int>(350,0));
vector <long long int> prime(max);
int n;
unsigned long long int ans;

int check(int i,int j,int k)
{
    if(i<0 || i>=n)return 0;
    if(j<0 || j>=n)return 0;
    if(res[i][j])return 0;
    if(num[i][j]%2!=k)return 0;
    return 1;
}

void dfs(int i,int j,int k)
{
    res[i][j]=1;
    if(check(i,j+1,k))dfs(i,j+1,k);
    if(check(i,j-1,k))dfs(i,j-1,k);
    if(check(i+1,j,k))dfs(i+1,j,k);
    if(check(i-1,j,k))dfs(i-1,j,k);
}

int main()
{
    int test,count;
    long long int i,j;
    // seive of erastosthenes
    count=0;
    prime[0]=prime[1]=1;
    for(i=2;i<max;i++)
    {
	if(prime[i]==0)
	{
	    prime[i]=count;
	    count++;
	    for(j=i;(j*i)<max;j++)
	    {
		prime[i*j]=1;
	    }
	}
    }
    scanf("%d",&test);
    while(test--)
    {
	ans=0;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	{
	    for(j=0;j<n;j++)
	    {
		scanf("%lld",&num[i][j]);
		res[i][j]=0;
		if(prime[num[i][j]]!=1 || num[i][j]==3)
		{
		    ans+=prime[num[i][j]];
		    res[i][j]=1;
		}
	    }
	}
	for(i=0;i<n;i++)
	{
	    for(j=0;j<n;j++)
	    {
		if(res[i][j]==0)
		{
		    if(num[i][j]%2==0)
		    {
			ans+=(num[i][j]/2);
			dfs(i,j,0);
		    }
		    else
		    {
			ans+=((num[i][j]/2)+2);
			dfs(i,j,1);
		    }
		}
	    }
	}
	printf("%llu\n",ans);
    }
    return 0;
}
