#include<iostream>
using namespace std;
#define MAX 10000000
int T,N,i,j,l,r,idx;
long long int ans;
int prime[MAX],pme;
bool isprime[MAX];
int Server[350][350],visited[350][350];
void hack(int i,int j,int mode)
{
   visited[i][j]=0;
   if(i>0&&visited[i-1][j]==mode)
      hack(i-1,j,mode);
   if(i<N-1&&visited[i+1][j]==mode)
      hack(i+1,j,mode);
   if(j>0&&visited[i][j-1]==mode)
      hack(i,j-1,mode);
   if(j<N-1&&visited[i][j+1]==mode)
      hack(i,j+1,mode);
}
int main()
{
   for(i=3;i<MAX;i+=2)
         isprime[i]=true;
   isprime[2]=true;
   prime[2]=0;
   for(pme=1,i=3;i<MAX;i+=2)
   {
      if(isprime[i]==false)
         continue;
      prime[i]=pme++;
      for(j=i+i;j<MAX;j+=i)
         isprime[j]=false;
   }
   cin>>T;
   while(T--)
   {
      cin>>N;
      for(i=0;i<N;i++)
      for(j=0;j<N;j++)
      {
         cin>>Server[i][j];
         if(isprime[Server[i][j]])
            visited[i][j]=1;
         else if(Server[i][j]%2)
            visited[i][j]=2;
         else
            visited[i][j]=3;
      }
      for(ans=i=0;i<N;i++)
      {
         for(j=0;j<N;j++)
         {
            if(visited[i][j]==0||Server[i][j]==2)
            continue;
            if(Server[i][j]%2==0)
            {
               ans+=Server[i][j]/2;
               hack(i,j,3);
               continue;
            }

            if(isprime[Server[i][j]])
            {
               visited[i][j]=0;
               ans+=prime[Server[i][j]];
               continue;
            }
            ans+=(Server[i][j]+1)/2+1;
            hack(i,j,2);
         }
      }
      cout<<ans<<endl;
   }
return 0;
}
