#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
#define ll int
bool pos[10000001];
ll a[10000001];
ll primes[10000001];
ll mx=10000002;
bool vis[351][351];
ll ar[351][351],n;
//https://www.codechef.com/viewsolution/2778792
void pre()
{
    ll i,j,t=sqrt(mx);
	pos[0]=pos[1]=false;
	for(i=2;i<=mx;i++)
	pos[i]=true;
	for(i=2;i<=t;i++)
	{
		if(pos[i])
		{
			for(j=i*i;j<=mx;j+=i)
    			pos[j]=false;
		}
	}
	int k=0;
	for(i=2;i<=mx;i++)
	{
		if(pos[i])
		a[i]=k++;
	}
}
ll fu(ll x)
{
	if(pos[x])
	return 2;
	if(x&1)
	return 1;
	return 0;
}
void dfs(ll i,ll j,ll f)
{
    if(i<1||j<1||i>n||j>n||fu(ar[i][j])!=f||vis[i][j])
    	return ;
	vis[i][j]=true;
    dfs(i+1,j,f);
    dfs(i,j+1,f);
    dfs(i-1,j,f);
    dfs(i,j-1,f);
}
int main()
{
	pre();
	ll i,t,j;
	cin>>t;
	while(t--)
	{
		long long c=0LL;
		cin>>n;
		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				cin>>ar[i][j];
		memset(vis,false,sizeof vis);	
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=n;j++)
			{
				if(!vis[i][j])
				{
					if(pos[ar[i][j]])
                    {
                	  c+=a[ar[i][j]];
                    }
                    else
                    if(ar[i][j]&1)
                    {
                    	c+=(ar[i][j]+3)/2;
                 	   dfs(i,j,1);
                    } 	
                    else
                    {
                    	c+=(ar[i][j])/2;
                 	   dfs(i,j,0);
                    }
				}
			}
		}
		cout<<c<<"\n";	
	}
	return 0;
}