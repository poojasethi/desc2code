#include<iostream>
#include<cstdio>
#include<algorithm>
#include<queue>
#include<vector>
#include<cmath>
#include<stack>
using namespace std;

long long int N=10000001;
int k;

queue<pair<int,int> > q;

int a[351][351],mark[351][351];
long long int sv[10000005]={0};

void genprime()
{
	long long int i,j;
	k=0;
	sv[0]=-1;
	sv[1]=-1;
	for(i=2;i<=N;i++)
	{
		if(sv[i]==-1)
			continue;
		sv[i]=k;
		k++;
		for(j=i*i;j<=N;j+=i)
			sv[j]=-1;
	}
}

int main()
{
	int t,n,i,j,e,f,ch;
	long long int ans;
	genprime();
//	freopen("in.txt","r",stdin);
	scanf("%d",&t);
	while(t--)
	{
		ans=0;
		while(q.size()!=0)
			q.pop();
		scanf("%d",&n);
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				scanf("%d",&a[i][j]);
				mark[i][j]=0;
			}
		}
		
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				if(mark[i][j]==1)
					continue;
				if(sv[a[i][j]]==-1)
				{
					if(a[i][j]%2==0)
					{
						ans+=(a[i][j]/2);
						ch=0;
					}
					else
					{
						ans+=((a[i][j]+3)/2);
						ch=1;
					}
					q.push(make_pair(i,j));
					while(q.size()!=0)
					{
						pair<int,int> p;
						p=q.front();
						q.pop();
						e=p.first;
						f=p.second;
						
						//if(mark[e][f]==1)
					//		continue;
						
						if(f>0 && mark[e][f-1]!=1 && sv[a[e][f-1]]==-1 && a[e][f-1]%2==ch && a[e][f-1]!=2)
						{
							mark[e][f-1]=1;
							q.push(make_pair(e,f-1));
						}
						
						if(e>0 && mark[e-1][f]!=1 && sv[a[e-1][f]]==-1 && a[e-1][f]%2==ch && a[e-1][f]!=2)
						{
							mark[e-1][f]=1;
							q.push(make_pair(e-1,f));
						}
						
						if(f<n-1 && mark[e][f+1]!=1 && sv[a[e][f+1]]==-1 && a[e][f+1]%2==ch && a[e][f+1]!=2)
						{
							mark[e][f+1]=1;
							q.push(make_pair(e,f+1));
						}
						
						if(e<n-1 && mark[e+1][f]!=1 && sv[a[e+1][f]]==-1 && a[e+1][f]%2==ch && a[e+1][f]!=2)
						{
							mark[e+1][f]=1;
							q.push(make_pair(e+1,f));
						}
					}
				}
				else
				{
					ans+=sv[a[i][j]];
				}
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}