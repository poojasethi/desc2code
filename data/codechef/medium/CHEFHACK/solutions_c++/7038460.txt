#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<map>
#include<cmath>
#include<queue>
#include<set>
#include<algorithm>
#define s(a) scanf("%d",&a)
#define sc(a) scanf("%s",&a)
#define p(a) printf("%d\n",a)
#define pf(a) printf("%lld\n",a)
#define f(i,r) for(int i=0;i<r;i++)
#define fr(i,p,r) for(int i=p;i<r;i++)
#define ll long long
using namespace std;

bool lock[355][355];
int grid[355][355];
bool num[10000001];
int prime[664600];
int n;

void mark(int i,int j)
{
	if(lock[i][j])
	{
		lock[i][j]=false;
		
		if(i>0 && !(grid[i-1][j]&1) && grid[i-1][j]!=2)
		mark(i-1,j);
							
		if(i<n-1 && !(grid[i+1][j]&1) && grid[i+1][j]!=2)
		mark(i+1,j);
							
		if(j>0 && !(grid[i][j-1]&1) && grid[i][j-1]!=2)
		mark(i,j-1);
							
		if(j<n-1 && !(grid[i][j+1]&1) && grid[i][j+1]!=2)
		mark(i,j+1);
	}
						
}

int find(int x)
{	
	int s=0,e=664578;
	
	while(s<=e)
	{
		int m=s+(e-s)/2;
		
		if(prime[m]==x)
		return m;
		
		if(x > prime[m])
		s=m+1;
		else
		e=m-1;
	}
	
	return -1;
}


void mark2(int i,int j)
{
	if(lock[i][j])
	{
		lock[i][j]=false;
		
		if(i>0 && (grid[i-1][j]&1) && (find(grid[i-1][j])==-1) )
		mark2(i-1,j);
							
		if(i<n-1 && (grid[i+1][j]&1) && (find(grid[i+1][j])==-1))
		mark2(i+1,j);
							
		if(j>0 && (grid[i][j-1]&1) && (find(grid[i][j-1])==-1))
		mark2(i,j-1);
							
		if(j<n-1 && (grid[i][j+1]&1) && (find(grid[i][j+1])==-1))
		mark2(i,j+1);
	}
						
}


int main()
{
	int t;
	ll ans;
	
	f(i,10000001)
	num[i]=false;
	
	fr(i,2,3170)
	{
		if(!num[i])
		{
			for(int j=i*i;j<10000001;j=j+i)
			num[j]=true;
		}
	}
	
	int k=0;
	
	fr(i,2,10000001)
	if(!num[i])
	prime[k++]=i;
		
	s(t);
	while(t--)
	{
		s(n);
		
		f(i,n)
		f(j,n)
		{
			s(grid[i][j]);
			lock[i][j]=true;
		}	
		
		ans=0;
		
		f(i,n)
		f(j,n)
		{
		//	cout<<"num "<<grid[i][j]<<endl;
			if(lock[i][j])
			{
				
				int x=find(grid[i][j]);
				
			//	cout<<"num "<<grid[i][j]<<endl;
				
				if(x==-1)
				{
					x=grid[i][j];
					
					if(x&1)
					{
						mark2(i,j);
						ans+=x/2+2;
					}
					else
					{	
						mark(i,j);			
						ans+=x/2;
					}
				}
				else
				{
					lock[i][j]=false;
					ans+=x;
				}
			}
			
		//	cout<<"ans "<<ans<<endl;
		}
		
		pf(ans);
	}
	
}