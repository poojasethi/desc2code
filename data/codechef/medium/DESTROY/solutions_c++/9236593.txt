#include<iostream>

#include<map>
#include<algorithm>
#include<queue>
using namespace std;
int main()
{
int t,n,x,d;
cin>>t;
while(t--)
{
long long count=0;
cin>>n;
map<int,int> m;
map<int,int>::iterator itr;
for(int i=0;i<n;i++)
{
cin>>x;
itr=m.find(x);
if(itr!=m.end()) itr->second=itr->second+1;
else m.insert(make_pair(x,1));
}
priority_queue<int> s;

for(itr=m.begin();itr!=m.end();itr++)
{
s.push(itr->second);
}
int x,y;
while(!s.empty()&&s.size()!=1)
{
    x=s.top()-1;
    s.pop();
    y=s.top()-1;
    s.pop();
    count++;
    if(x!=0) s.push(x);
    if(y!=0) s.push(y);

}
if(s.size()==1) count+=s.top();
cout<<count<<endl;

}




return 0;
}
