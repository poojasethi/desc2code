     #include<stdio.h>
    #include<string.h>
     
    char arr[150010];
    void quicksrt(int *arr,int start ,int end)
    {
    int i, j,key;
    key = arr[(start + end)/2];
    /* int temp2 = arr[key];
      arr[key] = arr[end];
      arr[end] = temp2;*/
    i = start;
    j = end;
    do
    {
    while( arr[i] < key )
    i++;
    while(arr[j] > key)
    j--;
    //swap the two pos
    if(i<=j){
    int temp = arr[i];
    arr[i] = arr[j];
    arr[j] = temp;
    i++;
    j--;
    }
    }while(i<=j);
    //swap ith and last element
    /* int temp = arr[i];
      arr[i] = arr[end];
      arr[end] = temp; */
    //calling func again
    if(start < j)
    quicksrt(arr,start,j);
    if(i<end)
    quicksrt(arr,i,end);
    }
     
    int main()
    {
    int t;
    scanf("%d",&t);
    getchar();
    char arr1[27];
    while(t--)
    {
    gets(arr1);
    gets(arr);
    //scanf("%s",&arr1);
    //scanf("%s",&arr);
    long int len;
    len = strlen(arr);
    long int i;
    int hash[26] = {0};
    for(i=0;i<len;i++)
    {
    if(arr[i] >= 'a' && arr[i]<='z')
    {
    hash[arr[i]-97]++;
    }
    if(arr[i] >='A' && arr[i] <= 'Z')
    {
    hash[arr[i] - 65]++;
    }
    }
    int j,k;
    int resulthash[26];
    for(j=0;j<26;j++)
    resulthash[j] = hash[j];
    quicksrt(resulthash,0,25);
    int mainhash[26] = {0};
    for(j=0;j<26;j++)
    {
    if(hash[j]!=0)
    {
    int tempp = 0;
    for(k=0;k<26;k++)
    {
    if(resulthash[k]!=0)
    tempp++;
    if(resulthash[k] == hash[j])
    break;
    }
    mainhash[j] = tempp;
    resulthash[k] = -1;
    }
    }
    int lennn = 0;
    for(j=0;j<26;j++)
    if(mainhash[j]!=0)
    lennn++;
    for(i=0;i<len;i++)
    {
    if(arr[i] >='a' &&arr[i] <='z')
    {
    // printf("%d\n",mainhash[arr[i]-97]);
    printf("%c",arr1[25+mainhash[arr[i]-97] - lennn] );
    }
    else	if(arr[i] >='A' && arr[i] <='Z')
    {
    printf("%c",arr1[25+mainhash[arr[i]-65]-lennn] - 32);
    }
    else
    printf("%c",arr[i]);
    }
    printf("\n");
    }
    return 0;
    } 