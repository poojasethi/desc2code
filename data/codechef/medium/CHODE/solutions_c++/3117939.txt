//
/*
bfgjklmopqrstuwxzhvnicdyea
abcd b efgd hbi!
*/

#include<iostream>
#include<stdio.h>
#include<string>
#include<string.h>


using namespace std;

int main()
{

	int t,c[27],ind,n,i,j,max,l;
	char pl[27],ci[27],str[150002],ch,map[27];
	//pl[] plain text frequeny
	//ci[]cipher text frequency
	//str in cipher input
	//
	scanf("%d",&t);
	//we can read a char here if u want
	while(t--)
	{
		scanf("%s\n",pl);
		scanf("%[^\n]",str);
		//printf("%s %s \n",pl,str);
		l=strlen(str);

		memset(c,0,sizeof(c));

		for(i=0;i<l;i++)
		{
			ch=str[i];
			if(islower(ch))
				c[ch-97]++;
			else if(isupper(ch))
				c[ch-65]++;
		}
		//comment it
		//for(i=0;i<26;i++)
		//	printf("%d ",c[i]);
		//printf("\n");
		//forming the cipher text frequency
		for(i=0;i<26;i++)
		{
			max=0;
			//find the ith max value
			for(j=0;j<26;j++)
			{
				if(c[j]>=max)
				{
					ind=j;
					max=c[j];
				}
			}
			c[ind]=-1;
			ci[25-i]=(char)(97+ind);
		}

		// cipher-plain text mapping
		for(i=0;i<26;i++)
		{
			n= ci[i] - 97; //this wil give the index of char
			map[n]=pl[i];  //mapping the corresponding characters
		}
		for(i=0;i<l;i++)
		{
			ch=str[i];
			if(islower(ch))
				//str[i]= map[ch-97];
				printf("%c",map[ch-97]);

			else if(isupper(ch))
			//	str[i]=map[ch-65];
				printf("%c",map[ch-65]-32);
			else
				printf("%c",str[i]);

		}
		printf("\n");
		fflush(stdin);
	}
	return 0;
}









