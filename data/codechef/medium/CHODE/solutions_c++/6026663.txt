#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <string>
#include <algorithm>

using namespace std;
struct node{
	int count;
	int positon;
	int first;
	int index;
};
string freq;
bool nodecompare(node lhs,node rhs){
	if(lhs.count!=rhs.count)
		return lhs.count > rhs.count;
	else{
		return lhs.index > rhs.index;
	}	
}
int main(){
	int t;
	cin >> t;
	while(t--){
		struct node * data = (node *)calloc(26,sizeof(node));
		string cipher;
		cin >> freq;
		cin.ignore();
		//
		getline(cin,cipher);
		for(int i=0;i<26;i++){
			data[i].first = -1;
			data[i].index = i;		
		}
		for(int i = 0; i < cipher.length(); i++){
			int index;
			if(cipher[i] <= 'z' && cipher[i]>='a'){
				index = cipher[i]-'a';
				data[index].count++;	
				if(data[index].first==-1){
					data[index].first = i;
				}
			}
			else if(cipher[i] <= 'Z' && cipher[i]>='A'){
				index = cipher[i] -'A';
				data[index].count++;	
				if(data[index].first==-1){
					data[index].first = i;
				}
			}
		}
		sort(data,data+26,nodecompare);
		for(int i =0;i<cipher.length();i++){
			if((cipher[i]<='Z' && cipher[i]>='A') || (cipher[i]<='z' && cipher[i]>='a')){
			for(int j=0;j<26;j++){
					if(cipher[i]==cipher[data[j].first] || cipher[i]==cipher[data[j].first]-'a'+'A' || cipher[i]==cipher[data[j].first]-'A'+'a')
					{
						if(cipher[i] >= 'a'){
							cout << freq[25-j];
							break;
						}
						else{
							char c = freq[25-j]-'a'+'A';
							cout << c;
						}
					}
			}}
			else{
				cout << cipher[i];
			}
		}
		cout << endl;
	}
	return 0;
}
