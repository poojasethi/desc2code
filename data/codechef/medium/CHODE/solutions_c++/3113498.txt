#include <iostream>
#include <stdio.h>
#include <string.h>
#include <vector>
#include <algorithm>

using namespace std;

#define rep(i,n) for(int i=0;i<n;i++);


void swap ( int* a, int* b )
{
    int t = *a;
    *a = *b;
    *b = t;
}


int edit(int alpha[],int carr[],int low,int high)
{
     int i=low,j=0;
     while(j <= high)
     {
                  while(j <= high && carr[j] )
                  {
                                j++;
                                i++;
                                //cout<<"hi"<<endl;
                  }
                  
                  j++;
                  
                  while(j<=high && !carr[j] )
                                j++;
                  
                  if( j <= high )
                  {
                       swap(&carr[j],&carr[i]);
                       swap(&alpha[j],&alpha[i]);
                       i++;
                  }
                  
                  
     }
     return i-1;
}

int myfunction(pair<int,int> i,pair<int,int> j)
{
    if(i.second == j.second)
    {
                return(i.first < j.first);
                
    }
    else
        return ( i.second < j.second );
}


int main()
{
 int t,l,n=26,i,p;
 scanf("%d",&t);
 char fseq[26]={0};
 char text[150000]={0};
 char f;
 for(int a=0;a<t;a++)
 {
         scanf("%s\n",fseq);
         //scanf("%[^\t\n]",fseq);
         scanf("%[^\n]",text);
         
         
         //cout << text << endl;

         int alpha[26]={0};
         int carr[26]={0};
         char sarr[26]={0};
         
         l=strlen(text);
         
         for(i=0;i<26;i++)
                          alpha[i]=i;
         
         for(i=0;i<l;i++)
         {
                         f=text[i];
                         if( f >= 'a' && f <= 'z' )
                         {
                                    //alpha[ text[i] - 'a' ] = text[i] - 'a';
                                    
                                    carr[ f - 'a' ] ++;
                         }
                         else if( f >='A' && f<='Z')
                         {
                              carr[ f - 'A' ]++;
                         }
         }
         
         int h=edit(alpha,carr,0,25);
 
         /*
         cout<<"h="<<h<<endl;
         for(i=0;i<=h;i++)
         {
                          //cout<<alpha[i]+1<<" "<<carr[i]<<endl;
                          cout<<(char)(97 + alpha[i] )<<" "<<carr[i]<<endl;
         }
         */
         
         vector < pair<int,int> > myvec;
         myvec.reserve(26);
 
         for(i=0;i<=h;i++)
         {
                          myvec.push_back(make_pair(alpha[i], carr[i]));
         }
 
         //cout<<"vec size="<<myvec.size()<<endl;
 
         sort(myvec.begin(),myvec.end(),myfunction);
 
         /*
         cout<<"based on freq \n";
 
 
         for ( size_t x = 0; x < myvec.size(); ++x ) 
         {
             //cout<<"abhi"<<endl;
             cout << char('a'+ myvec[x].first) << "," << myvec[x].second <<endl;
         }
         
         cout<<"myvec size="<<myvec.size()<<endl;
         */
         
         p=25;
         for ( int x = myvec.size()-1; x >=0 ; --x )
         {
             
             //cout<<x<<" "<<"abhi"<<endl;
             sarr[ myvec[x].first ]= fseq[p--];
             //cout<<(char)('a' + myvec[x].first)<<" "<<sarr[ myvec[x].first ]<< "\n";
         }
         
         /*
         cout<<"sarr=\n";
         for(i=0;i<26;i++)
                          {
                                  if(sarr[i] != '0')
                                             cout<<(char)('a' + i)<<" "<<sarr[i]<<endl;
                          }
         
         */
         
         for(i=0;i<l;i++)
         {
                         if(text[i] >= 'a' && text[i] <= 'z' ) 
                         {
                                    printf("%c",sarr[ text[i] - 'a' ]);
                         }
                         else if( text[i] >= 'A' && text[i] <= 'Z')
                              printf(        "%c",(      (int)(sarr[ text[i] - 'A' ]) - 32     )          );
                              //printf("%c",(  (sarr[ text[i] - 'A' ]) ) );
                         else
                             printf("%c",text[i]);
         }
         printf("\n");
          
 }
 
 
 
 //system("pause");
 //getchar();
 return 0;
}
