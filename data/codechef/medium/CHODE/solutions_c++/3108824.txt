#include<iostream>
using namespace std;
typedef struct ntype
{
    int index,val;

}node;
int Search(node *arr,int data);
int mergeSort(node *arr,int left,int right);
int mergeList(node *arr,int left,int mid,int right);
int main()
{

    int t,i,x,index;
    char freq[27];
    char text[151001];
    char c;
    node Hash[26];

    cin>>t;
	cin.get();
    for(x=0;x<t;x++)
    {
        cin>>freq;
		cin.get();
		cin.getline(text,151001);
        for(i=0;i<26;i++)
        {
            Hash[i].index=i;
            Hash[i].val=0;
        }
        i=0;
        while(text[i]!='\0')
        {
            if((text[i]>=97)&&(text[i]<=122))
                Hash[text[i]-97].val++;
            else if((text[i]>=65)&&(text[i]<=90))
                Hash[text[i]-65].val++;
            i++;
        }
        mergeSort(Hash,0,25);
        i=0;
        while(text[i]!='\0')
        {
            if((text[i]>=97)&&(text[i]<=122))
            {
                index=Search(Hash,text[i]-97);
                cout<<freq[index];
            }
            else if((text[i]>=65)&&(text[i]<=90))
            {
                index=Search(Hash,text[i]-65);
                c=freq[index]-32;
                cout<<c;
            }
            else
            {
                cout<<text[i];
            }
            i++;
        }
        cout<<endl;
    }
    return 0;
}

int Search(node *arr,int data)
{

    int i;
    for(i=25;i>=0;i--)
    {
        if(arr[i].index==data)
            return i;
    }
    return -1;
}

int mergeSort(node *arr,int left,int right)
{
    int mid;
    if(left<right)
    {
         mid=(left+right)/2;
         mergeSort(arr,left,mid);
         mergeSort(arr,mid+1,right);
         mergeList(arr,left,mid,right);
    }
    return 0;
}

int mergeList(node *arr,int left,int mid,int right)
{
    int i,j,k;
    node temp[26];
    i=left;
    j=mid+1;
    k=left;
    while((i<=mid)&&(j<=right))
    {
        if(arr[i].val<arr[j].val)
        {
            temp[k]=arr[i];
            i++;
            k++;
        }
        else if(arr[i].val>arr[j].val)
        {
            temp[k]=arr[j];
            j++;
            k++;
        }
        else
        {
            if(arr[i].index<arr[j].index)
            {
                temp[k]=arr[i];
                i++;
                k++;
            }
            else
            {
                temp[k]=arr[j];
                j++;
                k++;
            }
        }
    }
    for(;i<=mid;i++)
    {
        temp[k]=arr[i];
        k++;
    }
    for(;j<=right;j++)
    {
        temp[k]=arr[j];
        k++;
    }
    for(i=left;i<=right;i++)
    {
        arr[i]=temp[i];
    }
    return 0;
}

