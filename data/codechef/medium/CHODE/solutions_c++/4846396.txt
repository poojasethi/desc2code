#include<stdio.h>
	#include<stdlib.h>
	#include<string.h>
	#include<map>
	using namespace std;

	typedef struct{
		
		char c;
		int frequency;
	
	}Letter;
		
	int compare( const void *a, const void *b){
		
			Letter *a1 = (Letter*)a; 
			Letter *b1 = (Letter*)b;
			if(a1->frequency < b1->frequency){
				return -1;			
			}else{
				if(a1->frequency > b1->frequency){
					return 1;				
				}else{
					return a1->c - b1->c;				
				}			
			}	
	}
		
	int main(){
	
		int c, p;
		scanf("%d", &c);
		while(c--){
			
			map<char, char> mapper;
			char *dictionary = (char*) malloc(sizeof(char) * 26);
			char *text = (char *) malloc(sizeof(char) * 100000);
			scanf(" %[^\n]", dictionary);
			scanf(" %[^\n]", text);
			int size = strlen(text);
			map<char, int> frequencies;
			for(p = 0; p < size; p++){
				char letter = text[p];
				if(letter >= 'a' && letter <= 'z'){
					frequencies[letter]++;
				}else{
					if(letter >= 'A' && letter <= 'Z'){
						int aux = letter - 'A';
						letter = 'a' + aux;
						frequencies[letter]++;				
					}				
				}			
			}							
			Letter abecedario[26];
			for(p = 0; p < 26; p++){
				Letter nueva;
				nueva.c = dictionary[p];
				nueva.frequency = frequencies[dictionary[p]];
				abecedario[p] = nueva;
				
			}
			
			qsort(abecedario, 26, sizeof(Letter), compare);	
				
			for(p = 0; p < 26; p++){
				mapper[abecedario[p].c] = dictionary[p];	
			}
			
			for(p = 0; p < size; p++){
				
				char letter = text[p];
				char newLetter;
				if(letter >= 'a' && letter <= 'z'){
					newLetter = mapper[letter];
				}else{
					if(letter >= 'A' && letter <= 'Z'){
						int aux = letter - 'A';
						letter = 'a' + aux;
						newLetter = mapper[letter];
						aux = newLetter - 'a';
						newLetter = 'A' + aux;
									
					}else{
						newLetter = letter;
									
					}		
				}					
				printf("%c", newLetter);
						
			}
			printf("\n");
				
		}		
	
		return 0;	
	}