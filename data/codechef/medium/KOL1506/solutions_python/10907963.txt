//You only fail when you stop trying...
#include <iostream>
#include<bits/stdc++.h>
using namespace std;
#define ll  long long int
#define inf 1000000000000
#define mod 1000000007 
#define pb push_back
#define mp make_pair
#define all(v) v.begin(),v.end()
#define S second
#define F first
#define boost1 ios::sync_with_stdio(false);
#define boost2 cin.tie(0);
#define mem(a,val) memset(a,val,sizeof a)
#define endl "\n"
#define maxn 100001

ll arr[maxn],power[maxn],fact[maxn],ifact[maxn],c[maxn],power1[maxn];
ll bpow(ll x,ll n)
{
	ll ans=1;
	while(n>0)
	{
	    if(n&1) ans*=x;
	    x*=x;
	    ans%=mod;
	    x%=mod;
	    n/=2;
	}
	return ans;
}
void pre_calc(ll N)
{
    fact[0]=ifact[0]=1;
    for(ll i=1; i<=N; ++i)
    {
        fact[i]=(fact[i-1]*i)%mod;
        ifact[i]=bpow(fact[i],mod-2);
    }
}
ll ncr(int n,int r)
{
    if(r<0 or n<r)
        return 0;
    ll ans=fact[n];
    ans=(ans*ifact[r])%mod;
    ans=(ans*ifact[n-r])%mod;
    return ans;
}
int main()
{
	//boost1;boost2;
	ll i,j,n,k,ans=0,t,a;
	pre_calc(101);
	scanf("%lld",&t);
	while(t--)
	{
		//mem(arr,0);
		mem(c,0);
		//mem(power,0);
		ans=0;
		scanf("%lld%lld",&n,&k);
		for(i=1;i<=n;i++)
		cin>>arr[i];
		sort(arr+1,arr+n+1);
		for(i=1;i<=n;i++)
		{
			power[0]=1;
			power1[0]=1;
			for(a=1;a<=k;a++)
			{
				power[a]=(power[a-1]*arr[i])%mod;
				power1[a]=((power1[a-1]*(-arr[i]))%mod+mod)%mod;
			}	
			for(a=0;a<=k;a++)
			ans=(ans+(((ncr(k,a)*c[a])%mod)*power[a])%mod)%mod;
			for(a=0;a<=k;a++)
			{
				c[a]+=power1[k-a];
				if(c[a]>=mod)
				c[a]-=mod;
			}	
		}
		printf("%lld\n",(2*ans)%mod);
	}
	
	return 0;
}
