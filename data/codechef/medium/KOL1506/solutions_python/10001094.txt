#include <bits/stdc++.h>
using namespace std;

#define MOD 1000000007

long long A[100005];
long long C[102], mmi[102], dp[100005][102], pr[100005][102];

long long power(long long N, long long expo)
{
    long long ans = 1;

    while(expo)
    {
        if(expo%2)
            ans = ans * N % MOD;

        N = N * N % MOD;
        expo /= 2;
    }

    return ans;
}

int main()
{
    int T;
    scanf("%d", &T);

    for(int i=1; i<=100; i++)
        mmi[i] = power(i, MOD-2);

    while(T--)
    {
        int N, K;
        scanf("%d %d", &N, &K);

        for(int i=1; i<=N; i++)
            scanf("%lld", &A[i]);

        sort(A+1, A+1+N);

        C[0] = 1;

        for(int i=1; i<=K; i++)
            C[i] = C[i-1]*(K-(i-1))%MOD*mmi[i]%MOD;

        for(int i=1; i<=N; i++)
            dp[i][0] = pr[i][0] = 1;

        for(int i=1; i<=N; i++)
        {
            for(int j=1; j<=K; j++)
            {
                dp[i][j] = dp[i][j-1]*A[i]%MOD;
                dp[i][j] = -dp[i][j];

                if(dp[i][j]<0)
                    dp[i][j]+= MOD;

                pr[i][j] = pr[i][j-1]*A[i]%MOD;
            }
        }

        for(int i=1; i<=N; i++)
            for(int j=0; j<=K; j++)
                dp[i][j] = (dp[i][j] + dp[i-1][j])%MOD;

        long long ans = 0;

        for(int j=0; j<=K; j++)
            for(int i=2; i<=N; i++)
                ans = (ans + pr[i][K-j]*dp[i-1][j]%MOD*C[j])%MOD;

        printf("%lld\n", ans*2%MOD);
    }

    return 0;
}
