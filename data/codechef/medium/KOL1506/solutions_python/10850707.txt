#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
typedef long long ll;
typedef pair<int,int> p;
 
const int N=1e5+10;
 
ll fac[N],rev[N],refac[N];
int main()
{
    ios_base::sync_with_stdio(0);
    ll t,i,j;
    rev[1]=1;
    for(i=2;i<N;i++)
        rev[i]=MOD-(MOD/i)*rev[MOD%i]%MOD;
    refac[0]=1;
    for(i=1;i<N;i++)
        refac[i]=refac[i-1]*rev[i]%MOD;
    fac[0]=1;
    for(i=1;i<N;i++)
        fac[i]=fac[i-1]*i%MOD;
    cin>>t;
    while(t--)
    {
        ll n,k;
        cin>>n>>k;
        ll arr[n];
        for(i=0;i<n;i++)
            cin>>arr[i];
        sort(arr,arr+n);
        ll combi[k+1];
        for(i=0;i<=k;i++)
        {
            ll temp=fac[k]*refac[k-i];
            if(temp>=MOD)
                temp%=MOD;
            temp*=refac[i];
            if(temp>=MOD)
                temp%=MOD;
            combi[i]=temp;
            //cout<<"combi["<<i<<"]="<<combi[i]<<"\n";
        }
        ll dp[2][k+1];
        dp[0][k]=1;
        for(i=k-1;i>=0;i--)
        {
            dp[0][i]=dp[0][i+1]*(-arr[0]);
            if(dp[0][i]>=MOD)
                dp[0][i]%=MOD;
            if(dp[0][i]<0)
                dp[0][i]%=MOD;
        }
        ll temp=1;
        ll ans=0;
        for(i=0;i<=k;i++)
        {
            ans+=((((combi[i]*dp[0][i])%MOD)*temp)%MOD+MOD)%MOD;
            if(ans>=MOD)
                ans%=MOD;
            temp*=arr[1];
            if(temp>=MOD)
                temp%=MOD;
        }
        for(i=3;i<=n;i++)
        {
            dp[1][k]=dp[0][k]+1;
            if(dp[1][k]>=MOD)
                dp[1][k]%=MOD;
            temp=1;
            for(j=k-1;j>=0;j--)
            {
                temp*=-arr[i-2];
                if(temp>=MOD)
                    temp%=MOD;
                if(temp<0)
                    temp%=MOD;
                dp[1][j]=dp[0][j]+temp;
                if(dp[1][j]>=MOD)
                    dp[1][j]%=MOD;
                if(dp[1][j]<0)
                    dp[1][j]%=MOD;
            }
            for(j=0;j<=k;j++)
                dp[0][j]=dp[1][j];
            temp=1;
            for(int l=0;l<=k;l++)
            {
                ans+=(((combi[l]*dp[0][l])%MOD*temp)%MOD+MOD)%MOD;
                if(ans>=MOD)
                   ans%=MOD;
                temp*=arr[i-1];
                if(temp>=MOD)
                    temp%=MOD;
            }
        }
        ans*=2;
        if(ans>=MOD)
            ans%=MOD;
        cout<<ans<<"\n";
    }
}