#include<bits/stdc++.h>
#include <iostream>
#include <algorithm>
//#define mod  1000000007

using namespace std;

typedef long long ll;
const ll MOD = 1e9 + 7;
const int MAXN = 1e5 + 10;

ll power(ll A, ll B){
	ll ans = 1LL;
	while(B > 0){
		if(B&1LL) ans = (ans * A);
		A = (A * A);
		if(ans >= MOD) ans %= MOD;
		if(A >= MOD) A %= MOD;
		B >>= 1;
	}
	return ans;
}

int main() {
    int t;
    cin >>t;
    ll a[MAXN];
    ll inv[200];
    ll c[200];
    ll p[200];
    for(int i=1;i<200;i++){
            inv[i] = power(i, MOD - 2);
        }
    while(t--){
        int n,k,i,r;
        cin >>n>>k;
        
        memset(c,0,sizeof c);
        for(i=0;i<n;i++){
            cin >>a[i];
        }
        
        
        
        sort(a,a+n);
        ll ans=0;
        ll ncr=1;
        for(i=0;i<n;i++){
            p[0]=1;
            // calculating power
            for(r=1;r<=k;r++){
                p[r]=(p[r-1]*a[i])%MOD;
            }
            // calculating answer
            ncr=1;
            for(r=0;r<=k;r++){
                ans=(ans+(ncr*((p[r]*c[r])%MOD))%MOD)%MOD;
                ncr = (ncr * (k - r)) % MOD;
				ncr = (ncr * inv[r + 1]) % MOD;
            }
            // calculating c
            for(r=0;r<=k;r++){
               if((k-r)&1)
                    c[r]=(c[r]+MOD-p[k-r]);
               else
                    c[r]=(c[r]+p[k-r]);
               while(c[r] >= MOD) c[r] -= MOD;     
            }
            
        }
        ans <<= 1;
		while(ans >= MOD)ans %= MOD;
		cout <<ans<<endl;
    }
	return 0;
}
