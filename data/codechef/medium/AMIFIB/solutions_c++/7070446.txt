#include<stdio.h>
#include<iostream>
#include<set>
#include<string.h>
using namespace std;
long long fibr(int n)
{
    if(n==1) return 0;
    if(n==2) return 1;
    return fibr(n-1)+fibr(n-2);
}
unsigned long long f[7000];
unsigned long long fibm(int n)
{   if(n==1) return 0;
    if(f[n]>0) return f[n];
    f[n]=fibm(n-1)+fibm(n-2);
    return f[n];
}
int bsearch(int n,int beg,int last)
{
    int mid=(beg+last)/2;
    if(n==f[mid]) return 1;
    else if(beg+1==last&&n!=f[beg]&&n!=f[last]) return 0;
    else if(beg==last&&n!=f[beg]) return 0;
    else if(n>f[mid]) bsearch(n,mid+1,last);
    else if(n<f[mid])bsearch(n,beg,mid-1);
    else return 0;
 //   return 0;
}
int main()
{   int i,t;
  // for(i=0;i<20;i++) cout<<bsearch(i,0,8)<<"\n";
cin>>t;
     f[2]=1;
     fibm(7000);

     while(t--)
     {
    char s[1001];
    cin>>s;
   unsigned long long n=0;
    int l=strlen(s);

  //  for(i=0;i<50;i++) cout<<f[i]<<"\n";
    for(i=0;i<l;i++)
    {
        n=n*10+s[i]-'0';
    }

  //  n++;
  //  cout<<n;
  set<int> sf(f,f+6900);
		if (sf.find(n) == sf.end()) printf("NO\n");
		else printf("YES\n");
//if(bsearch(n,0,6900)==1) cout<<"YES\n";
  //  else cout<<"NO\n";}
}
    return 0;
}
