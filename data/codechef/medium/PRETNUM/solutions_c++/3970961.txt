#include<math.h>
#include<stdio.h>
#include<stdlib.h>
#include<iostream>
using namespace std;
int isprime(long long int n)
{
    int flag=1, i, rt=(int)sqrt((double)n);
    for (i=2;i<=rt;i++)
    {
        if (n%i==0)
            {
                flag=0;
                break;
            }
    }
    if (n==1) flag=0;
    return flag;
}
int *seive(long long int l, long long int u)
{
    long long int sq;
    int j, i, rt=(int)sqrt((double)u), r=u-l+1;
    int *A=(int*)malloc(r*sizeof(int));
    for (i=0;i<r;i++)
        A[i]=0;
    for (i=1;i<=rt;i++)
    {
        j=(i-l%i)%i;
        while(j<r)
        {
            if (!(i>(int)sqrt(l+j)))
            A[j]+=2;
            j+=i;
        }
    }
    for (i=1;i<=rt;i++)
    {
        sq=(long long int)i*i;
        if (sq>=l)
        {
            A[sq-l]--;
        }
    }
    return A;
}
int main()
{
    int *A, i, r, ANS[5], k, t;
    long long int l, u;
    scanf("%i", &t);
    for (i=0;i<5;i++)
    {
        ANS[i]=0;
    }
    for (k=0;k<t;k++)
    {
    scanf("%lli %lli", &l, &u);
    A=seive(l, u);
    r=u-l+1;
    for (i=0;i<r;i++)
    {
        if (isprime(A[i]))
            ANS[k]++;
    }
    }
    for (i=0;i<t;i++)
    {
    printf("%i\n", ANS[i]);
    }
    return 0;
}
