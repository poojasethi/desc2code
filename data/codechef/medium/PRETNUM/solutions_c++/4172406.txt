#include <iostream>
#include <vector>
#include <map>
#include <cstdio>
#include <math.h>
#include <algorithm>
#include <limits.h>
#include <cstring>
#include <string>
#include <queue>
#include <stack>

using namespace std;

#define PII pair<int ,int>
#define m_p make_pair
#define LL long long
#define pb push_back
#define MAX 200005
#define MOD 1000000007

vector<bool> p(1000007,true);
vector<LL> prime;

LL num[1000007] , divs[1000007];

void seive()
{
    p[0]=p[1]=false;
    for(LL i=2;i<=1000006;i++)
        if(p[i]){
            prime.pb(i);
            for(LL j=i*i ; j<=1000006;j+=i)
                p[j]=false;
        }
//      cout<<prime.size()<<endl;
//    for(int i=0;i<=25;i++)
//        cout<<prime[i]<<" ";
}

int n ;
LL l,r,ans;



LL solve(LL l, LL r)
{
    //cout<<" solving... "<<endl;
    LL ans=0;
    for(LL i=l;i<=r;i++)
        divs[i-l]=1 , num[i-l]=i ;

    for(LL i=0;i<prime.size();i++){

        for(LL j=prime[i]* (LL)ceil((double)l/prime[i]);j<=r;j+=prime[i]){
            LL count=0;
            LL index=j-l;

            while(num[index]%prime[i]==0)
                count++ , num[index]/=prime[i] ;
            divs[index]*=(count+1);
        }
    }
    //cout<<"solved"<<endl;

    for(LL i=l;i<=r;i++){
        LL index=i-l;
        //cout<<"num divs i "<<i<<" "<<num[index]<<" "<<divs[index]<<" ";
        if(num[index]>1) divs[index]*=2;
        if(p[divs[index]]) ans++ ;

    }
    return ans;
}

int main()
{
    int test;
    cin>>test;
    seive();
    while(test--){
        cin>>l>>r;
        cout<<solve(l,r)<<endl;
    }

    return 0;
}
