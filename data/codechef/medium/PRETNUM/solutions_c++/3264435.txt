#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<string>
#include<utility>
#include<numeric>
#include<iterator>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cctype>
#include<climits>
#include<ctime>
#include<cstring>

#define ALL(c)  c.begin(), c.end()
#define TR(c, it)   for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define MAX(a, b)   ((a) > (b) ? (a) : (b))
#define MIN(a, b)   ((a) < (b) ? (a) : (b))
#define MIN3(a, b, c)   ((MIN((a), (b)) > (c)) ? (c) : MIN((a), (b)))
#define gc  getchar_unlocked
#define ll long long int
#define ull unsigned long long int
#define ulli unsigned long long int
#define inf INT_MAX
#define mininf INT_MIN
#define pb push_back
#define mp  make_pair
#define PI  3.14159265358979323846264338327950288

using namespace std;

int main()
{
    int t;
    scanf("%d",&t);
    int  *prime = new int[1000001];
    for(int i = 0 ;i <= 1000001 ; i++)
         prime[i] = 1;
    for(int i = 2; i*i <= 1000001 ; i++)
    {
        if(prime[i])
            for(int j = 2*i; j <= 1000001 ; j+=i)
                prime[j] = 0;
    }
    while(t--)
    {
        ll m , n ;
        scanf("%lld%lld",&m,&n);
        ll *arr = new ll[n-m+1] ;
        for(ll i = 0 ;i <= n-m ; i++)
            arr[i] = 2;
        if(m==1)
            arr[0] = 1;
        for(ll i = 2 ;i*i <= n; i++)
        {
            ll less = ((m-1)/i + 1)*i;
            for(ll j = less ; j <= n; j+=i)
            {
                if(j!=i && j>=m)
                {
                    if(i*i==j)
                        arr[j-m] += 1;
                    else if((i*i)<j)
                        arr[j-m] += 2;
                }
            }
        }
        ll count=0;
        for(ll j = 0 ; j <= n-m ; j++)
            if(prime[arr[j]]&&(j+m)!=1)
                count++;
        printf("%lld\n",count);
    }
    return 0;
}