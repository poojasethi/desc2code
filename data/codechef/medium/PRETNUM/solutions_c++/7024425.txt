#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
bool a[1000001],h[1000001];
ll p[1000001],sz;
void seive(){
  ll i,j; 
  //cout<<"in seive\n";
  for(i=2;i<=1000000;i++)
     a[i]=false;
  for(i=2;i<=sqrt(1000000);i++){
     if(!a[i]){
        for(j=2*i;j<=1000000;j+=i){
             a[j]=true;
        }
     }
  }
  sz=0; 
  for(i=2;i<=1000000;i++){
     if(!a[i]){
        p[sz++]=i;
       
     }
  }            
}
ll segment_seive(ll l,ll r){
   ll up=r-l+1,s=0,k=0,i,j;
   for(i=0;i<up;i++)
     h[i]=false; 
   for(i=2;i<=sqrt(r);i++){
      if(!a[i]){
	      k=ceil(double(l)/i);
	      k=k*i;
	      //cout<<"k="<<k<<endl;
	      if(k==i)
		k*=2;
	      
	      for(j=k;j<=r;j+=i){ 
		 h[j-l]=true;
	      }
      }
   }
   for(i=0;i<up;i++){
      if(!h[i]){
      //  cout<<i+l<<" "; 
        s++;
      }
   }
   return s;        
}
ll calc(ll n){
   ll cn=0,div=1;
   //cout<<"kkkk "<<endl;
   ll i;
   for(i=0;p[i]<=sqrt(n) && i<sz;i++){
       cn=0;
      // cout<<"hi "<<p[i]<<" ";
       while(n%p[i]==0 && n>0){
         cn++;
         n/=p[i];
       }
       div=(div*(cn+1));
       if(n==1)
          break;
   }
   if(n>1)
     div=div*2;
   return div;     
}
int main(){
  ll t,l,r,s,i;
  seive();
  //cout<<"lll\n";
  scanf("%lld",&t);
  while(t--){
  
     scanf("%lld%lld",&l,&r);
     s=0;
     if(l<2)
       l=2;
     s+=(segment_seive(l,r));
     for(i=l;i<=r;i++){
        
       if(floor(sqrt(i))==ceil(sqrt(i)) && !a[calc(i)])
           s++;
          
     }
     printf("%lld\n",s);
  }
  return 0;
}          