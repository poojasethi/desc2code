//Bismillah al-Rahman al-Rahim
//Coder-Abdulla
#include <stdio.h>
#include <ctype.h>
#include <iostream>
#include <math.h>
#include <string.h>
#include <algorithm>
#include <stdlib.h>
#include <time.h>
#include <queue>
#include <set>
#include <map>
#include <string>
#include <vector>
#include <utility>
#include <assert.h>
#include <sstream>
using namespace std;
 
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find() != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define PI 3.1415926535
#define INF 9876543210
#define MOD 1000000007
bool prime[1000005];
bool seive[205];
int isprime(long long int n)
{
	int c=0;
	for(long long int i=1;i*i<=n;i++)
	{
		if(n%i==0)
		{
			c++;
			if(n/i!=i)
				c++;
		}
	}
	if(seive[c]==0)
		return 1;
	else
		return 0;

}
int main()
{
	int tc;
	scanf("%d",&tc);
	seive[0]=seive[1]=1;
	for(int i=2;i*i<=200;i++)
	{
		if(seive[i]==0)
		for(int j=i*i;j<=200;j+=i)
			seive[j]=1;
	}
	while(tc--)
	{
		memset(prime,0,sizeof(prime));
		long long int n,m,counter=0,sqrn,sqrm;
		scanf("%lld %lld",&n,&m);
		
		sqrn=floor(sqrt(n));

		for(long long int i=sqrn;i*i<=m;i++)
		{
			if(i*i>=n)
			{
				if(isprime(i*i))
					counter++;
			}
		}

		for(long long int i=2;i*i<=m;i++)
		{
			long long int less=n/i;
			less*=i;
			for(long long int j=less;j<=m;j+=i)
			{
				if(j!=i && j>=n)
					prime[j-n]=1;
			}
		}
		for(long long int i=0;i<m-n+1;i++)
		{
			if(prime[i]==0 && n+i!=1)
				counter++;
		}
		printf("%lld\n",counter);
	}
	return 0;
}