/*Programmed by Ayush Jaggi*/

#include<iostream>
#include<cstring>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<ctype.h>
#include<climits>
#include<vector>
#include<cassert>
#include<sstream>
#include<map>
#include<stack>
#include<queue>
#include<algorithm>
#include<set>
#include<deque>
#include<list>
#include<utility>
#include<fstream>
#include<iterator>
#include<ctime>
#include<deque>
#include<numeric>
#include<functional>
#include<sstream>

using namespace std;
#define MOD 1000000007
#define mp make_pair
#define pb push_back
#define F first
#define S second
#define L(i,x,y) for(i=x;i<y;i++)
#define l0(i,x) for(i=0;i<x;i++)
#define l1(i,x) for(i=1;i<x;i++)
#define pd(n) printf("%d",n)
#define pdn(n) printf("%d\n",n)
#define pds(n) printf("%d ",n)
#define plld(n) printf("%lld",n)
#define plldn(n) printf("%lld\n",n)
#define pllds(n) printf("%lld ",n)
#define pn printf("\n");
#define ps printf(" ")
#define plf(n) printf("%.6lf",n)
#define plfn(n) printf("%.6lf\n",n)
#define plfs(n) printf("%.6lf ",n)
#define sd(n) scanf("%d",&n)
#define sld(n) scanf("%ld",&n)
#define slld(n) scanf("%lld",&n)
#define slf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define W(t) while(t--)

bool prime[1000001];
bool seg_sieve[1000001];
int sieve[78499];

inline void gen_prime()
{
    prime[0]=prime[1]=true;
    int i, j, counter=0;
    for(i=3; i<1001; i+=2)
        if(!prime[i])
            for(j=i*i; j<1000001; j+=i)
                prime[j]=true;
    for(i=3; i<1000001; i+=2)
        if(!prime[i])
            sieve[counter++]=i;
}

inline void gen_seg_sieve(long long int x, long long int y)
{
    int i=0;
    long long int temp;
    while(sieve[i] && sieve[i]<=sqrt(y))
    {
        if(x%sieve[i])
            temp=x+(sieve[i]-x%sieve[i]);
        else
            temp=x;

        for(long long int j=temp; j<=y; j+=sieve[i])
            seg_sieve[j%x]=true;
        i++;
    }
}

int main()
{
    int t, factor, count;
    long long int a, b, i, j, temp, handpick;
    gen_prime();
    sd(t);
    W(t)
    {
        slld(a);
        slld(b);
        memset(seg_sieve,false,sizeof(seg_sieve));
        if(b>1000000)
            if(a>1000000)
                gen_seg_sieve(a,b);
            else gen_seg_sieve(1000001,b);
        count=0;
        if(a==1)
            a++;
        L(i,a,b+1)
        {
            if(i<1000001)
            {
                if(i!=2 && (prime[i] || !(i%2)))
                {
                    temp=sqrt(i);
                    if(temp*temp==i)
                    {
                        factor=0;
                        L(j,2,sqrt(i))
                        if(!(i%j))
                            factor+=2;
                        if(!prime[factor+3] && (factor+3)%2)
                            count++;
                    }
                }
                else count++;
            }
            else
            {
                if(a>1000000)
                    handpick=a;
                else handpick=1000001;
                if(seg_sieve[i%handpick] || !(i%2))
                {
                    temp=sqrt(i);
                    if(temp*temp==i)
                    {
                        factor=0;
                        L(j,2,sqrt(i))
                        if(!(i%j))
                            factor+=2;
                        if(!prime[factor+3] && (factor+3)%2)
                            count++;
                    }
                }
                else count++;
            }
        }
        pdn(count);
    }
    return 0;
}
