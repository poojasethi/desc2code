                           //anki_2189
#include<iostream>
#include<cstring>
#include<algorithm>
#include<cmath>
#include<climits>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<cstdio>
#include<cstdlib>
using namespace std;

#define MOD 10000007
#define Fill(a,b) memset(a,b,sizeof(a))
typedef long l;
typedef long long ll;
        //CONTAINERS
typedef vector<int> vi;
typedef set<int> si;
typedef stack<int> sti;
typedef multiset<int> mi;
        //INPUT
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%ld",&a)
#define sll(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
       //OUTPUT
#define pi(a) printf("%d\n",a)
#define pl(a) printf("%ld\n",a)
#define pll(a) printf("%lld\n",a)
#define ps(a) printf("%s\n",a)
#define pn() printf("\n")
#define pw(a) printf("%d ",a)
#define plw(a) printf("%ld ",a)
#define pllw(a) printf("%lld ",a)
#define all(a) a.begin(),a.end()
#define prin_cor(x,y) cout<<"("<<x<<","<<y<<")"<<endl

#ifndef ONLINE_JUDGE
    #define gc getchar
    #define pc putchar
#else
    #define gc getchar_unlocked
    #define pc putchar_unlocked
#endif // ONLINE_JUDGE

#define Ri fastreadint
#define Wi fastwriteint
#define Rll fastreadll
#define Wll fastwritell

inline int fastreadint(){register char c=gc();bool signum=0;while((c<'0'||c>'9') && c!='-')c=gc();if(c=='-'){signum=1;c=gc();}int x=0;while(c>='0' && c<='9'){x = x*10 + c-'0';c=gc();}if(signum)x=-x;return x;}
inline void fastwriteint(int a){char str[20];if(a<0){pc('-');a=-a;}int id=0;while(a>0){str[id++]=a%10+'0';a/=10;}id--;if(id==-1)pc('0');else for(;id>=0;id--)pc(str[id]);}
inline long long fastreadll(){register char c=gc();bool signum=0;while((c<'0'||c>'9') && c!='-')c=gc();if(c=='-'){signum=1;c=gc();}long long x=0;while(c>='0' && c<='9'){x = x*10 + c-'0';c=gc();}if(signum)x=-x;return x;}
inline void fastwritell(long long a){char str[23];if(a<0){pc('-');a=-a;}int id=0;while(a>0){str[id++]=a%10+'0';a/=10;}id--;if(id==-1)pc('0');else for(;id>=0;id--)pc(str[id]);}

ll gcd(ll a,ll b)
{
    if(b==0)
        return a;
    return gcd(b,a%b);
}
ll lcm(ll a,ll b)
{
    return (a*b/gcd(a,b));
}

int main()
{
   #ifndef ONLINE_JUDGE
     //freopen("C:\\Users\\Ankit Tomar\\Desktop\\input.txt","r",stdin);
     //freopen("C:\\Users\\Ankit Tomar\\Desktop\\output.txt","w",stdout);
   #endif // ONLINE_JUDGE
   ll n,m,limit,i,j;
   n=Rll();
   m=Rll();
   ll product=1;
   ll val=0;
   ll arr[n][m];
   for(i=0;i<n;i++)
       for(j=0;j<m;j++)
           arr[i][j]=Rll();
   for(i=0;i<m;i++)
   {
       val=0;
       for(j=0;j<n;j++) val+=arr[j][i];
       product=(product*val)%MOD;
    }
    product=(product+MOD)%MOD;
   Wll(product);
   pn();
   return 0;
}
