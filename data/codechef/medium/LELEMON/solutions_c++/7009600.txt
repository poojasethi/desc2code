#include<iostream>
using namespace std;
class Lemonade{
	int n,m;
	public:
		Lemonade()
		{
			cin>>n>>m;
			int p[m];
			int *r[n],ans=0,count;
			int c[n];
			int i,j;
			for(i=0;i<m;i++)
			cin>>p[i];
			qsort(p,0,m-1);
			for(i=0;i<n;i++)
			{
				 cin>>c[i];
				 r[i]=new int[c[i]+1];
				 for(j=0;j<c[i];j++)
				 cin>>r[i][j];
				 qsort(r[i],0,c[i]-1);
				 for(j=0;j<c[i]-1;j++)
				 {
				 	r[i][j+1]+=r[i][j];
				 }
			}
	        i=1;
		   while(i<m)
		   {
		   	count=1;
			for(;i<m;i++)
			{
				if(p[i-1]==p[i])
				count++;
				else
				break;
			}
			if(p[i-1]!=p[i]&&i==m-1)
			{
			ans+=r[p[i]][0];
			//cout<<r[p[i]][0]<<endl;
			}
			if(count>c[p[i-1]])
			{
			ans+=r[p[i-1]][c[p[i-1]]-1];
			//cout<<r[p[i-1]][c[p[i-1]]-1]<<endl;
			}
			else
			{
			ans+=r[p[i-1]][count-1];
			//cout<<r[p[i-1]][count-1]<<endl;
			}
			i++;
	     	}
	     	cout<<ans<<endl;
	     }
		void qsort(int *p,int l,int r)
		{
			if(l<r)
			{
				int j=pos(p,l,r);
				qsort(p,l,j-1);
				qsort(p,j+1,r);
			}
		}
		int pos(int *p,int l,int r)
		{
			int i,j=l,pt=p[r];
			for(i=l;i<r;i++)
			{
				if(pt<=p[i])
				{
					int x=p[i];
					p[i]=p[j];
					p[j]=x;
					j++;
				}
			}
			p[i]=p[j];
			p[j]=pt;
			return j;
		}
};
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		Lemonade l;
	}
	return 0;
}