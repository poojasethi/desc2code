#include <iostream>
using namespace std;
void merge(int a[],int l,int m,int u)
{
if(l!=u)
{int n1,n2;
n1=m-l+1;
n2=u-m;
int c[n1],d[n2];
int i,j,k;
for( i=0;i<n1;i++)
{
c[i]=a[l+i];
}
for( j=0;j<n2;j++)
{
d[j]=a[m+j+1];
}
i=0;
j=0;
k=l;
while(i<n1 && j<n2)
{
if(c[i]<=d[j])
{
a[k]=c[i];
i++;
}
else 
{
a[k]=d[j];
j++;
}
k++;
}
while(i<n1)
{
a[k]=c[i];
i++;
k++;
}
while(j<n2)
{
a[k]=d[j];
j++;
k++;
}}
}
void mergesort(int A[],int L,int U)
{int M;
if(U!=L)
{ M=(L+U)/2;
mergesort(A,L,M);
mergesort(A,M+1,U);}
merge(A,L,M,U);
}
int main() {
	// your code goes here
int t;
cin>>t;
for(int i=0;i<t;i++)
{
int n,m;
cin>>n>>m;
int p[m];
int a[n];
for(int j=0;j<n;j++)
a[j]=0;
for(int j=0;j<m;j++)
{
cin>>p[j];
a[p[j]]++;
}
int z=0;
for(int j=0;j<n;j++)
{
int c;
cin>>c;
int s[c];
for(int k=0;k<c;k++)
cin>>s[k];
mergesort (s,0,c-1);
while(a[j]!=0 && c!=0)
{
z=z+s[c-1];
c--;
a[j]--;
}
}
cout<<z<<endl;
}
	return 0;
}