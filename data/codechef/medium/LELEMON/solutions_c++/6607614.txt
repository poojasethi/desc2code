#include<iostream>
using namespace std;
int lemonade[101];
/*void quicksort(int first,int last)
{
   if(first>=last)
      return ;
   int fi,pivot,li,temp;
   fi=pivot=first;
   li=last;
   while(1)
   {
      while(lemonade[pivot]>=lemonade[fi]&&fi<last)
         fi++;
      while(lemonade[pivot]<lemonade[li])
         li--;
      if(fi>=li)
         break;
      temp=lemonade[fi];
      lemonade[fi]=lemonade[li];
      lemonade[li]=temp;
   }
   temp=lemonade[pivot];
   lemonade[pivot]=lemonade[li];
   lemonade[li]=temp;
   quicksort(first,li-1);
   quicksort(li+1,last);
}*/
void adjust(int idx,int n)
{
   int temp=lemonade[idx];
   for(idx=idx*2+1;idx<=n;)
   {
      if(idx<n&&lemonade[idx]<lemonade[idx+1])
         idx++;
      if(lemonade[idx]<=temp)
         break;
      lemonade[(idx-1)/2]=lemonade[idx];
      idx=idx*2+1;
   }
   lemonade[(idx-1)/2]=temp;
}
void Insert(int n,int data)
{
   for(;n>0&&lemonade[(n-1)/2]<data;n=(n-1)/2)
   lemonade[n]=lemonade[(n-1)/2];
   lemonade[n]=data;
}
int Delete(int n)
{
   if(n==0)
      return 0;
      if(n==1)
         return lemonade[0];
   int data=lemonade[0];
   lemonade[0]=lemonade[n-1];
   adjust(0,n-2);
   return data;
}
int main()
{
int T,n,m,*rooms,C,i,j,k;
long long int ans;
cin>>T;
while(T--)
{
   cin>>n>>m;
   rooms=new int[n];
   for(i=0;i<n;i++)
   rooms[i]=0;
   for(i=0;i<m;i++)
   {
      cin>>j;
      rooms[j]++;
   }
   for(ans=i=0;i<n;i++)
   {
      cin>>C;
      if(rooms[i]>C)
      rooms[i]=C;
      for(j=0;j<C;j++)
      {
         cin>>k;
         Insert(j,k);
      }
      for(j=0;j<rooms[i];j++)
      {
         ans+=Delete(C-j);
      }

   }
   cout<<ans<<endl;
   delete []rooms;
}
return  0;
}
