#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
using namespace std;
typedef long long ll;
#define MAXN 1000000000000000000LL
vector<ll> v;
void pre() {
    ll start = 2;
    for(; start <= MAXN; start <<= 1LL) v.push_back(start);
    int total = v.size();
    v.push_back(1);
    for(int i = 0; i < total; i++) {
        ll num = v[i];
        start = 3LL;
        for(int j = 0; start <= (MAXN / v[i]); j++) {
            v.push_back(start * v[i]);
            start = start * 3LL;
        }
    }
    sort(v.begin(), v.end());
    total = v.size();
    v.push_back(2 * MAXN);
    //for(int i = 0; i < total; i++) cout << v[i] << " "; cout << endl;
}
ll get(ll num) {
    int idx = lower_bound(v.begin(), v.end(), num) - v.begin();
    if(v[idx] == num) idx++;
    return idx;
}
void solve() { 
    ll L, R;
    cin >> L >> R;
    ll ans = get(R) - get(L - 1);
    cout << ans << endl;
}
int main() {
    int t;
    pre();
    cin >> t;
    while(t--) solve();
}
