/*programmed by dipjal */

#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<string.h>
#define pb push_back
#define sz(c) c.size()
using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<string> vs;
#define mod 1000000007


ll pow1(int x,int y)
{
ll ret=1;
while(y>0)
{
    if(y&1)
    {
        ret=(ret*x)%mod;
    }

        x*=x;
        x%=mod;

    y>>=1;
}
return(ret%mod);
}

/*
int scan()
{
    int x=0;
    char c=getchar_unlocked();
    while(c<'0'||c>'9')
    {
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}

void fastWrite(ll x)
{
    char ctemp[21];
    int l=0;
    do{
        ctemp[l++]=x%10+'0';
        x/=10;
    }while(x);
    --l;
    while(l>=0)
    {
        putchar_unlocked(ctemp[l--]);
    }
    putchar_unlocked('\n');
}

*/

int main()
{
int N;
int X;
int i;
int j;
//vector<int> v;
int v[105];
//ios_base::sync_with_stdio(false);
//cin.tie(0);
//v.reserve(105);
cin>>N;
for(i=0;i<N;i++)cin>>v[i];

    map<int,int> mapper;

    int maxsum=0;

    for(i=0;i<N;i++)
        for(j=i+1;j<N;j++)
        {
            mapper[v[i]+v[j]]++;
            if(mapper[v[i]+v[j]]>maxsum)
            maxsum=mapper[v[i]+v[j]];

        }

    cout<<2*maxsum;
return 0;
}



