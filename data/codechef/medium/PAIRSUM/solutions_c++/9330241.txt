#include<bits/stdc++.h>
using namespace std;
#define temp 0
#define perm 1
#define INF (int(1e9))
#define INFL ((long long int)(1e18))
#define in2(n,m) scanf("%d %d",&n,&m);
#define in3(x,y,z) scanf("%d %d %d",&x,&y,&z);
#define in4(p,q,r,s) scanf("%d %d %d %d",&p,&q,&r,&s);
#define unsetBit(BITT,X) (BITT&(~(1<<X)));
#define setBit(BITT,X) (BITT|(1<<X));
#define bitIsSet(BITT,X) (BITT&(1<<X))
#define bitIsNotSet(BITT,X) (!(BITT&(1<<X)))
#define getcx getchar
inline void in(int &n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}
#define mod 1000000007
#define pii pair< int , int >
typedef long long int LL;
LL a[105];
int solve(LL sum,int n)
{
    int low = 1;
    int up = n;
    int ans = 0;
    while(low<up)
    {
        if(a[low]+a[up]==sum)
        {
            low++;
            up--;
            ans+=2;
        }
        else if(a[low]+a[up]>sum)
        {
            up--;
        }
        else
        {
            low++;
        }
    }
    return ans;
}
int main()
{
    int n;
    in(n);
    assert(n<=100);
    for(int i=1; i<=n; i++)
    {
        cin>>a[i];
    }
    sort(a+1,a+1+n);

    int ans = 0;
    for(int i=1; i<=n; i++)
    {
        for(int j=i+1; j<=n; j++)
        {
            ans = max(ans,solve(a[i]+a[j],n));
        }
    }
    printf("%d\n",ans);
}
