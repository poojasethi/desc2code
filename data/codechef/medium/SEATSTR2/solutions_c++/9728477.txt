/**



   Pradip chandra karmaker
   Comilla University(6th_ICT)
*/



#include<bits/stdc++.h>
using namespace std;
#define inf 1<<30
#define xx first
#define yy second
#define pb push_back
#define mp make_pair
#define clr(a) memset(a,0,sizeof a)
#define neg(a) memset(a,-1,sizeof a)
#define Sort(a) sort(a.begin(),a.end())
#define All(a) a.begin(),a.end()
typedef long long i64;
typedef pair<int,int> pi;
#define mod 1000000007LL





template<class T>T Bitcnt(T a){int sum=0;while(a){if(a&1)sum++;a/=2;}return sum;}
template<class T>T Max3(T a,T b,T c){return max(a,max(b,c));}
template<class T>T Lcm(T a,T b){T tmp=__gcd(a,b);return (a/tmp)*b;}
template<class T> T Pow(T a,T b){T ans=1;T base=a;while(b){if(b&1)ans=(ans*base);base=(base*base);b/=2;}return ans;}
i64 Bigmod(i64 a,i64 b)
{
    i64 res=1;
    i64 pw=a%mod;
    while(b>0)
    {
       if(b&1)res=(res*pw)%mod;
       pw=(pw*pw)%mod;
       b/=2;
    }
    return res;
}


#define s1(a) scanf("%d",&a)
#define s2(a,b) scanf("%d %d",&a,&b)
#define s3(a,b,c) scanf("%d %d %d",&a,&b,&c)
#define sl1(a) scanf("%lld",&a)
#define sl2(a,b) scanf("%lld %lld",&a,&b)
#define sl3(a,b,c) scanf("%lld %lld %lld",&a,&b,&c)
#define p1(a) printf("%d",a)
#define p2(a,b) printf("%d %d",&a,&b)
#define inf (i64)1e16
#define NL printf("\n")
#define N 4000000
#define rep(i,a,b)    for(int i=a;i<=b;i++)
#define rrep(i,b,a)   for(int i=b;i>=a;i--)
#define fs(i,a,s)     for(int i=a;s[i];i++)

int a_x[]={1,-1,0,0};
int a_y[]={0,0,1,-1};
i64 X,Y;

void extend_euclid(i64 a,i64 b)
{
    if(b==0)
    {
        X=a;Y=0;return;
    }
    extend_euclid(b,a%b);
    i64 x,y;
    x=Y;
    y=X-(a/b)*Y;
    X=x;
    Y=y;
}
i64 inverse_modulo(i64 a,i64 b)
{
    extend_euclid(a,b);
    return (X+mod)%mod;
}

/** dijkstra,bitmask,ME,scc,backtraking,grid dp,segment tree,bit,LCA,bfs,dfs,BPM,MAX_FLOW,MCM,Tree dp,kmp,MST,Meet in the middle*/

/**Triangle characteristics,Phi,bitwise_seive,SOD,articulation,topological,HLD,Z,knapsack,Coin,Digit,LIS,LCS,minimum vertex
cover,josephus,chinese remainder,square root decomposition,ternary search,binary search,Number of theory(divisor,prime),chinese remainder,Generic functoin,Convex hull*/

/*************************************************************************************************************************************************************************************************/

i64 f[N];
i64 inv[N];
char data[N];
int a[30];
int main()
{
   ///freopen("input.txt","r",stdin);

    f[0]=1;
    inv[0]=1;
    rep(i,1,1000000)
    {
        f[i]=(f[i-1]*i)%mod;
        inv[i]=Bigmod(f[i],mod-2);
    }
    int t;
    s1(t);
    while(t--)
    {
       scanf("%s",data);
       int len=strlen(data);

        memset(a,0,sizeof a);

        rep(i,0,len-1)
         a[data[i]-'a']++;
        i64 p=f[len];
       // cout<<p<<"..\n";
        rep(i,0,25)
         {
             if(!a[i])continue;
             p=(p*inv[a[i]])%mod;
         }
         i64 s=0;

         // s=1;  ///No swapping
          ///single swap

          i64 A=0,B=0,C=0;
          rep(i,0,25)
            {
                rep(j,i+1,25)
                   s=(s+a[i]*1LL*a[j])%mod;
            }

        ///overlapping swap

        rep(i,0,25)
         rep(j,i+1,25)
            rep(k,j+1,25)
                {
                    s=(s+(((a[i]*1LL*a[j])%mod)*a[k]*2LL)%mod)%mod;

                }
          // cout<<s<<endl;

          rep(i,0,25)
             rep(j,0,25)
               rep(k,j+1,25)
                  {
                      if(i!=j && i!=k)
                      {
                          A=0;
                         s=(s+(((a[i]*(a[i]-1))%mod)*(a[j]*a[k])%mod)%mod)%mod;
//                         if(A<0)
//                             cout<<a[i]<<" "<<a[j]<<" "<<a[k]<<endl;
                      }
                  }
//                  cout<<A<<endl;
//               cout<<s<<endl;
       ///double swap

       ///Case 1:

      rep(i,0,25)
         rep(j,i+1,25)
            rep(k,j+1,25)
               rep(l,k+1,25)
                     {
                         i64 tmp=0;
                          tmp=(a[i]*a[j])%mod;
                            tmp=(tmp*(a[k]*a[l])%mod)%mod;
                            s=(s+tmp*3LL)%mod;
                     }
          rep(i,0,25)
            rep(j,i+1,25)
               {
                    if(a[i]>=2 && a[j]>=2){
                   i64 tmpa=f[a[i]]*inv[2];
                    tmpa%=mod;
                      tmpa=(tmpa*inv[a[i]-2])%mod;
                      i64 tmpb;
                         tmpb=f[a[j]]*inv[2];
                        tmpb%=mod;
                        tmpb=(tmpb*inv[a[j]-2])%mod;
                      s=(s+(tmpa*tmpb)%mod)%mod;

                    }
               }
          //  cout<<s<<" "<<p<<endl;
      i64 tot=(p*(p-1))%mod;
      // cout<<tot<<"==="<<p*s<<endl;
      tot=tot-(p*s)%mod;

       tot+=mod;
       tot%=mod;
       printf("%lld\n",tot);

    }

   return 0;
}


