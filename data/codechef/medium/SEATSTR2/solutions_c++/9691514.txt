// #include<abhi.944>

#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

#ifndef ONLINE_JUDGE
	#define TRACE
#endif

const long double PI=3.1415926535897932384626;
const ll MAX=1000000000+7;
const int INF = 0x3f3f3f3f;

#define ps printf(" ")
#define pn printf("\n")
#define sc(n) scanf("%d",&n)
#define pf(n) printf("%lld",n)
#define forall(it, x) for(__typeof((x).begin()) it=(x).begin();it!=(x).end();it++)
#define sz size()
#define ff first
#define ss second
#define pb push_back //pop_back
#define mp make_pair
#define fill(a,val) memset(a,val,sizeof(a))
//#define pii pair <int ,int>

#ifdef TRACE
    #define trace(x)            cerr<<__FUNCTION__<<":"<<__LINE__<<": ERROR---->"<<x<<endl;
    #define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
    #define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
    #define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
    #define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl;
#else
    #define trace(x)
    #define trace1(x)
    #define trace2(x,y)
    #define trace3(x,y,z)
    #define trace4(a,b,c,d)
#endif
#define N 100005

ll fact[N+3];

ll add(ll a, ll b) {
    ll c = (ll)(a)+(ll)(b);
    while(c >= MAX) c-=MAX;
    return c;
}

ll mul(ll a,ll b) {
    ll c = (ll)(a)*(ll)(b);
    c%=MAX;
    while(c < 0) c+=MAX;
    return c;
}

void factorial()
{
    fact[0]=1;
    for(int i=1;i<N;i++) {
        fact[i] = mul(fact[i-1],i);
    }
}

ll pow(ll a, ll b)
{
    ll x=1, y=a;
    while (b>0)
    {
        if (b%2)
        {
            x=x*y;
            x=x%MAX;
        }
        y=y*y;
        y=y%MAX;
        b=b/2;
    }
    return x;
}

ll nc2(ll n) {
    if(n < 2) return 0;
    ll by = (ll)(n)*(ll)(n-1);
    by>>=1;
    return by;
}

int main(int argc, char const *argv[])
{
    factorial();
    int t;
    sc(t);
    while(t--) {
        int cnt[30];
        fill(cnt ,0);
        string a;
        cin >> a;

        for(int i=0;i<a.sz;i++) cnt[a[i]-'a']++;

        ll down = 1;
        for(int i=0;i<26;i++) {
            down = mul(down , fact[cnt[i]]);
        }

        ll perm = mul(fact[a.sz],pow(down,MAX-2));

        ll ans1=0,ans2=0,ans3=0;
        ll by;
        for(int i=0;i<26;i++) {                 // single swap
            for(int j=i+1;j<26;j++) {
                by = mul(cnt[i],cnt[j]);
                ans1 = add(ans1,by);

                by = mul(nc2(cnt[i]),nc2(cnt[j]));      // for 4 swaps with two same * 1
                ans3 = add(ans3,by);                    
            }
        }

        ll by1 =0;
        for(int i=0;i<26;i++) {                 //three different*2
            for(int j=i+1;j<26;j++) {
                for(int k=j+1;k<26;k++) {
                    by = mul(mul(cnt[i],cnt[j]),cnt[k]);
                    ans2 = add(ans2,by);                
                                                    //for 4 swaps with 1 same * 2
                    by1 = add(by1,mul(mul(cnt[i],cnt[j]),nc2(cnt[k])));
                    by1 = add(by1,mul(mul(cnt[i],cnt[k]),nc2(cnt[j])));
                    by1 = add(by1,mul(mul(cnt[k],cnt[j]),nc2(cnt[i])));
                }
            }
        }
        by1 = mul(by1,2);
        ans3 = add(ans3,by1);
        ans2 = mul(ans2,2);


        ll by3 = 0;
        for(int i=0;i<26;i++) {
            for(int j=i+1;j<26;j++) {
                for(int k=j+1;k<26;k++) {
                    for(int l=k+1;l<26;l++) {
                        by = mul(mul(cnt[i],cnt[j]),mul(cnt[k],cnt[l]));         // all diff * 3
                        by3 = add(by3,by);
                    }
                }
            }
        }
        by3 = mul(by3 , 3);
        ans3 = add(ans3,by3);

        ll ans = add(add(ans1,1),add(ans2,ans3));
        ans = mul(perm,perm-ans);
        pf(ans); pn;
    }
    return 0;
}