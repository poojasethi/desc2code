#include<iostream>
#include<vector>
using namespace std;
const int mx=400006;
typedef long long int ll;
ll pm[mx]={0};
ll smp[mx]={0};
bool good[mx],prime[mx];
ll smd[mx]={0};
vector<ll>gd;
void sieve()
{	prime[0]=prime[1]=true;
	for(ll i=2;i*i<mx;i++)
	{
		if(!prime[i])
		{
			for(ll j=i*i;j<mx;j+=i)
			prime[j]=true;
		}
	}
	for(int i=1;i<mx;i++)
	smp[i]++;
	for(int i=2;i<mx;i++)
	{
		for(int j=i;j<mx;j+=i)
		{if(!prime[i])
		{smp[j]+=i;
		pm[j]++;}
		else smp[j]+=i;
		}
	}
	/*for(int i=1;i<11;i++)
	cout<<smp[i]<<" ";*/
}
ll x;
void divsm()
{	
	for(ll i=2;i*i<mx;i++)
	{	x=i*i;
		for(ll j=x;j<mx;j+=x)
		good[j]=true;
	}
	/*for(int i=1;i<11;i++)
	if(!good[i])
	cout<<i;
	for(ll i=2;i<mx;i++)
	{
		if(!prime[i])
		smp[i]++;
		else smp[i]+=i+1;
	}*/
	for(ll j=1;j<100006;j++)
	{
		if(!good[j])
		{
			if(!prime[pm[smp[j]]])
			{//cout<<j<<" "<<smp[j]<<" "<<pm[smp[j]]<<"\n";
				smd[j]=smp[j];
			}
		}
	}
	for(ll i=1;i<100006;i++)
	smd[i]+=smd[i-1];
}
int main()
{	std::ios::sync_with_stdio(false);
	sieve();
	divsm();
	ll t;
	cin>>t;
	while(t--)
	{
		ll l,r;
		cin>>l>>r;
		cout<<smd[r]-smd[l-1]<<"\n";
	}
}