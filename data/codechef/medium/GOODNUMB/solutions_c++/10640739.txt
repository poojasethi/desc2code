#include<bits/stdc++.h>
using namespace std;
const int N=1e5+5;
#define LL int long long
int sum[N];
int c[N];
LL prefix[N];
int square[100005]={0};
int pr[2000010]={0};
int sum_of_div(int x)
{
	int i,j,k,l=1;
	while(x!=1)
	{
		k=1;
		i=pr[x];
		j=pr[x];
		while(x%j==0)
		{
			k+=i;
			i*=pr[x];
			x/=j;
		}
		l*=k;
	}
	return l;
}
int no_of_divisors(int x)
{
	int i,j,k;
	set <int> v; 
	while(x!=1)
	{
      v.insert(pr[x]);
      x/=pr[x];
	}
	return v.size();
}
void pre()
{
	//printf("pre in\n");
	int i,j,k;
	pr[1]=0;
	//	printf("pr\n");
	
	for(i=2;i<N*20;i++)
	{
		if(pr[i]!=0) continue;
		for(j=i;j<N*20;j+=i) pr[j]=i;
	}
   //printf("pr out\n");
	
	//	printf("square\n");
    for(i=2;i*i<N;i++)
    {
    	k=i*i;
    	for(j=k;j<N;j+=k) square[j]=1;
    }
    //printf("square out\n");
    
    sum[1]=1;
    sum[0]=0;
    prefix[0]=0;
    prefix[1]=0;
    for(i=2;i<N;i++)
    {
    	sum[i]=sum_of_div(i);
    	c[i]=no_of_divisors(sum[i]);
        prefix[i]=prefix[i-1];
        if(pr[c[i]]==c[i] && square[i]==0 && c[i]>1) prefix[i]+=sum[i];
    }
    //printf("done in pre\n");
}
int main()
{
  pre();
  int t;
 
  scanf("%d",&t);
  while(t--)
  {
     int l,r;
     scanf("%d %d",&l,&r);
     LL ans=prefix[r]-prefix[l-1];
     printf("%lld\n",ans);
  }
     /*for(t=1;t<=5;t++)
     {
     	printf("t=%d pref=%d sum=%d c[t]=%d\n",t,prefix[t],sum[t],c[t]);
     }*/

  return 0;
}