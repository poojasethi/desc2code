#include <bits/stdc++.h>
using namespace std;
//fast input
template<class T>
inline T scan_int() {int ip=getchar_unlocked(),flag=1;T ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=(ret<<3)+(ret<<1)+ip-'0';return flag*ret;}
#define scan_d scan_int<int>
#define scan_ld scan_int<long int>
#define scan_lld scan_int<long long int>
template <class T>
inline T scan_decimal(){char c;c = getchar_unlocked();long long int t = 0;while(c<='9' && c>='0'){t=(t<<3)+(t<<1)+c-'0';c = getchar_unlocked();}int d=0,i=1;if(c=='.'){c = getchar_unlocked();while(c<='9' && c>='0'){i=(i<<3)+(i<<1);d=(d<<3)+(d<<1)+c-'0';c = getchar_unlocked();}}return (T)t + ((T)d)/i;}
#define scan_f scan_decimal<float>
#define scan_lf scan_decimal<double>
inline void scan_str(char *str){register char c = 0;register int i = 0;while (c < 33)c = getchar_unlocked();while (c != '\n' && c != EOF){str[i] = c;c = getchar_unlocked();i = i + 1;}str[i] = '\0';}
//end of fast input
//fast output
char output_buffer[21];
template <class T>
inline void print_int(T n) {if(n<0){n=-n;putchar_unlocked('-');}int i=21;do{output_buffer[--i]=(n%10)+'0';n/=10;}while(n);do{putchar_unlocked(output_buffer[i]);}while(++i<21);}
#define print_d print_int<int>
#define print_ld print_int<long int>
#define print_lld print_int<long long int>
template <class T>
inline void println_int(T n) {print_int(n);putchar_unlocked('\n');}
#define println_d println_int<int>
#define println_ld println_int<long int>
#define println_lld println_int<long long int>
template <class T>
inline void printsp_int(T n,char ch) {print_int(n);putchar_unlocked(ch);}
#define printsp_d printsp_int<int>
#define printsp_ld printsp_int<long int>
#define printsp_lld printsp_int<long long int>
inline void print_str(char *str){char* temp=str;while((*temp)!='\0'){putchar_unlocked(*temp);temp++;}}
//end of fast output

int main()
{
	int t;
	double pa,pb;
	double ans;
	t = scan_d();
	while(t--)
	{
		pa = scan_lf();
		pb = 1-pa;
		ans = 2.0*pa*pb*10000.0;
		if(pa>0.5)
			ans+= pa*10000.0;
		else
			ans+= pb*10000.0;
		printf("%lf\n",ans);
	}	
	return 0;
}