import sys
##filein = open("mgcrnk.in",'r')
filein = sys.stdin
t = int(filein.readline())
for i in range(t) :
  n = int(filein.readline())
  ja = [0] * n
  for j in range(n) :
    ja[j] = map(int,filein.readline().rstrip().split())
  
  ## Tricky initializing a multi-dimensional array
  sum = [0] * n
  for k in range (n) : sum[k] = [0] * n
  
  ## We work the array backwards
  ## We calculate the maximum sum one can achieve from that cell to the end
  ## Note that once you hit the right edge or bottom edge your path is predetermined
  ## At other nodes you have a choice of two pats
  ## We first to the right column, and bottom row, and then we process the array from bottom up
  
  for k in range(n-2,-1,-1) :
    sum[k][n-1] = sum[k+1][n-1] + ja[k][n-1]  ## Right column
    sum[n-1][k] = sum[n-1][k+1] + ja[n-1][k]  ## Bottom row

  for k1 in range(n-2,-1,-1) :
    for k2 in range (n-2,-1,-1) :
      sum[k1][k2] = ja[k1][k2] + max(sum[k1+1][k2], sum[k1][k2+1])      
  
  numjudges = float(2*n - 3)
  avgscore = float(sum[0][0]) / numjudges
  if avgscore < 0 : print "Bad Judges"
  else            : print "%.7f" % avgscore