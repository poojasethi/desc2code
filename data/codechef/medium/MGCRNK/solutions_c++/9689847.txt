#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
const int MAXN = 1e2 + 10;
LL A[MAXN][MAXN];
LL dp[MAXN][MAXN];
int N;
int main(){
	memset(dp, 0, sizeof dp);
	int t;
	cin >> t;
	while(t--){
		cin >> N;
		for(int i  = 1;i <= N;++i){
			for(int j = 1;j <= N;++j){
				cin >> A[i][j];
			}
		}
		for(int i = 1;i <= N;++i){
			for(int j = 1;j <= N;++j){
				if(i == 1){
					dp[i][j] = dp[i][j - 1] + A[i][j];
				} else if(j == 1){
					dp[i][j] = dp[i - 1][j] + A[i][j];
				} else{
					dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]) + A[i][j];
				}
			}
		}
		if(dp[N][N] < 0){
			cout << "Bad Judges\n";
		} else{
			printf("%.6lf\n", dp[N][N]/(1.0*(2*N - 3)));
		}
	}
	return 0;
}