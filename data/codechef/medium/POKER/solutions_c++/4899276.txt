#include<iostream>
#include<cstdio>
#include<cstring>
#include<ctype.h>
#include<cmath>
#include<vector>
#include<map>
#include<list>
#include<stack>
#include<queue>
#include<algorithm>
#define pi pair<int,int>
#define ppi pair<int,pair<int,int> >
#define pip pair<pair<int,int>,int>
#define pipi pair<pair<int,int>,pair<int,int> >
#define vi vector<int>
#define vc vector<char>
#define vll vector<ll>
#define mp make_pair
#define Min(a,b)((a<b)?a:b)
#define Max(a,b)((a>b)?a:b)
#define Swap(a,b)(a=b+a-(b=a))
#define sfd(d) scanf("%d",&d)
#define sfld(d) scanf("%lld",&d)
#define sff(d) scanf("%f",&d)
#define sfc(ch) scanf("%c",&ch)
#define sfs(s) scanf("%s",s)
#define pfd(d) printf("%d",d)
#define pfld(d) printf("%lld",d)
#define el putchar('\n')
#define sp putchar(' ')
#define Fill(a,val) memset(a,val,sizeof a)
#define pb push_back
#define ppb pop_back
#define INF 123456789
#define mod 1000000007
#define ll long long int
#define si short int
#define gcd __gcd
#define all(a) a.begin(),a.end()
#define T(x) strtok(x, " \n\r\t")
using namespace std;
char ch[10][20] = {"royal flush","straight flush","four of a kind","full house","flush","straight","three of a kind","two pairs","pair","high card"};
char Rank[13]={'A','K','Q','J','T','9','8','7','6','5','4','3','2'};
char a[5],b[5];
map<char,int>m;
bool ord(char c1,char c2) {
    return (m[c1]>m[c2]);
}
bool insequence() {
    bool ret = 0,ok=1;
    sort(a,a+5,ord);
    for(int i=1;i<5;++i) {
        if(m[a[i-1]]-1 != m[a[i]]){
            ok = 0;
            break;
        }
    }
    ret |= ok;
    m['A'] = 1;ok = 1;
    sort(a,a+5,ord);
    for(int i=1;i<5;++i) {
        if(m[a[i-1]]-1 != m[a[i]]){
            ok = 0;break;
        }
    }
    ret |= ok;
    return ret;
}
int main() {
    for(int i=0;i<13;++i)
        m[Rank[i]] = 14 - i;
    int t;
    sfd(t);
    while(t--) {
        map<char,int>rr;
        map<char,bool>M;
        for(int i=0;i<5;++i)
            cin>>a[i]>>b[i] , M[a[i]] = 1 ,++rr[a[i]];
        bool samesuit = 1;
        for(int i=1;i<5;++i){
            if(b[i] != b[0]){
                samesuit = 0;
                break;
            }
        }
        if(samesuit) {
            if(M['A']&&M['K']&&M['Q']&&M['J']&&M['T']){
                cout<<ch[0];el;
            }
            else {
                if(insequence()) {
                    cout<<ch[1];el;
                }
                else cout<<ch[4],el;
            }
        }
        else {
            if(insequence()) {
                cout<<ch[5];el;
            }
            else {
                vi v;v.clear();
                for(int i=0;i<13;++i) {
                    if(rr[Rank[i]]) v.pb(rr[Rank[i]]);
                }
                int sz = v.size();
                if(sz == 2) {
                    int mx = Max(v[0],v[1]);
                    if(mx == 4) cout<<ch[2],el;
                    else cout<<ch[3],el;
                }
                else if(sz == 3) {
                    sort(v.begin(),v.end());
                    if(v[0]==1 && v[1]==1 && v[2]==3) {
                        cout<<ch[6];el;
                    }
                    else if(v[0]==1 && v[1]==2 && v[2]==2) {
                        cout<<ch[7];el;
                    }
                    else cout<<ch[9],el;
                }
                else if(sz == 4) {
                    sort(v.begin(),v.end());
                    if(v[0]==1 && v[1]==1 && v[2]==1 && v[3]==2) cout<<ch[8],el;
                    else cout<<ch[9],el;
                }
                else cout<<ch[9],el;
            }
        }
    }
    return 0;
}
