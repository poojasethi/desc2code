#include <set>
#include <map>
#include <ctime>
#include <cstdio>
#include <vector>
#include <string>
#include <climits>
#include <cstdlib>
#include <cstddef>
#include <sstream>
#include <string.h>
#include <iostream>
#include <algorithm>

using namespace std;

#define LL long long

template <typename T> T sqr(T x) { return x * x; }
template <typename T> T abs(T x) { return x < 0 ? -x : x; }

string s[5];

int f(char x)
{
	if (x == 'T') return 10;
	if (x == 'J') return 11;
	if (x == 'Q') return 12;
	if (x == 'K') return 13;
	// if (x == 'A')
	return 14;
}

int main()
{
	int t;
	cin >> t;
	while (t--)
	{
		vector<pair<int, int > > a;
		for (int i = 0; i < 5; i++)
		{
			string t;
			cin >> t;
			a.push_back(make_pair(t[0] >= '2' && t[0] <= '9' ? t[0] - '0' : f(t[0]), t[1]));
		}
		sort(a.begin(), a.end());
		bool color =
		(
			a[0].second == a[1].second &&
			a[0].second == a[2].second &&
			a[0].second == a[3].second &&
			a[0].second == a[4].second
		);

		bool up =
		(
			(
				a[0].first == a[1].first - 1 &&
				a[0].first == a[2].first - 2 &&
				a[0].first == a[3].first - 3 &&
				a[0].first == a[4].first - 4
			) || (
				a[0].first == a[1].first - 1 &&
				a[0].first == a[2].first - 2 &&
				a[0].first == a[3].first - 3 &&
				a[4].first == 14 && a[0].first == 2
			)
		);
		if (a[0].first == 10 && up && color)
			puts("royal flush");
		else if (up && color)
			puts("straight flush");
		else if (
			(a[0].first == a[1].first && a[0].first == a[2].first && a[0].first == a[3].first) || 
			(a[1].first == a[2].first && a[1].first == a[3].first && a[1].first == a[4].first))
				puts("four of a kind");
		else if (
			(a[0].first == a[1].first && a[0].first == a[2].first && a[3].first == a[4].first) ||
			(a[0].first == a[1].first && a[2].first == a[3].first && a[2].first == a[4].first) )
				puts("full house");
		else if (color)
			puts("flush");
		else if (up)
			puts("straight");
		else if (
			(a[0].first == a[1].first && a[0].first == a[2].first) ||
			(a[1].first == a[2].first && a[1].first == a[3].first) ||
			(a[2].first == a[3].first && a[2].first == a[4].first))
				puts("three of a kind");
		else if (
			(a[0].first == a[1].first && (a[2].first == a[3].first || a[3].first == a[4].first)) ||
			(a[1].first == a[2].first && a[3].first == a[4].first))
				puts("two pairs");
		else if (
			a[0].first == a[1].first ||
			a[1].first == a[2].first ||
			a[2].first == a[3].first ||
			a[3].first == a[4].first)
				puts("pair");
		else
			puts("high card");
	}
	return 0;
}
