#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <string>
#include <vector>
#include <cmath>
#include <set>
#include <utility>
#define EPSI 1e-9
#define MOD 1000000007
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
using namespace std;

typedef long long ll;
vector <pair<int,int> > v;
int convert(char a) {
    switch(a) {
        case 'A': return 1;
        case 'T': return 10;
        case 'J': return 11;
        case 'Q': return 12;
        case 'K': return 13;
    }
    return a-48;
}
int toSuit(char a) {
    switch(a) {
        case 'S': return 1;
        case 'H': return 2;
        case 'D': return 3;
        case 'C': return 4;
    }
    return 5;
}
char* cal() {
    bool straight = true;
    bool suit = true;
    int p = 0; // number of pairs
    bool three = false;
    bool four = false;
    
    // check straight and suit
    for(int i = 0; i < 4; i++) {
        if(v[i].second != v[i+1].second) suit = false;
        if(v[i].first == 1 && v[i+1].first == 10) continue;
        if(v[i].first != v[i+1].first - 1) straight = false;
        if(v[i].first == v[i+1].first) p++;
    }
    
    // check three of kind
    for(int i = 0; i < 3; i++) if(v[i].first == v[i+1].first && v[i].first == v[i+2].first) three = true;
    
    // check four
    for(int i = 0; i < 2; i++) if(v[i].first == v[i+1].first && v[i].first == v[i+2].first && v[i].first == v[i+3].first) four = true;
    
    if(straight) {
        if(suit) {
            if(v[0].first == 1 && v[1].first == 10 && v[2].first == 11 
                && v[3].first == 12 && v[4].first == 13) return "royal flush";
            else return "straight flush";
        }
        return "straight";
    }
    if(four) return "four of a kind";
    if(three && p > 2) return "full house";
    if(suit) return "flush";
    if(three) return "three of a kind";
    if(p > 1) return "two pairs";
    if(p == 1) return "pair";
    return "high card";
}
int main() {
    int t;
    scanf("%d", &t);
    while(t--) {
        char ch[4];
        v.clear();
        for(int i = 0; i < 5; i++ ) {
            scanf("%s", &ch);
            v.pb(mp(convert(ch[0]),toSuit(ch[1])));
        }
        sort(v.begin(),v.end());
        printf("%s\n", cal());
    }
    //system("pause");
    return 0;
}
