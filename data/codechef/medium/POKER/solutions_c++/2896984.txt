#include <stdio.h>
#include <algorithm>

int main()
{
	int T,rank[255];
	char s[16];
	rank['A']=1;
	rank['K']=13;rank['Q']=12;rank['J']=11;
	rank['T']=10;rank['9']=9; rank['8']=8;
	rank['7']=7; rank['6']=6; rank['5']=5;
	rank['4']=4; rank['3']=3; rank['2']=2;
	scanf("%d\n",&T);
	while (T--)
	{
		gets(s);
		bool is_same_suit=true;
		char c=0;
		for (int i = 1; i < 14; i+=3)
		{
			if(c==0)
			{
				c=s[i];
			}
			else
			{
				if(c!=s[i])
				{
					is_same_suit=false;
					break;
				}
			}
		}
		int j=0,a[5]={0};
		for (int i = 0; i < 14; i+=3)
		{
			a[j++]=rank[s[i]];
		}
		std::sort(a,a+5);
		if(is_same_suit)
		{
			if(a[0]==1&&a[1]==10&&a[2]==11&&a[3]==12&&a[4]==13)
			{
				printf("royal flush\n");
			}
			else
			{
				bool flag=true;
				for (int i = 1; i < 5; i++)
				{
					if(flag&&a[i]-a[i-1]!=1)
					{
						flag=false;
					}
				}
				if(flag)
				{
					printf("straight flush\n");
				}
				else
				{
					printf("flush\n");
				}
			}
		}
		else
		{
			int rank_count[5]={0};
			int q=0;
			rank_count[q]=1;
			bool is_straight=true;
			for (int i = 1; i < 5; i++)
			{
				bool same_rank=a[i]==a[i-1];
				if(same_rank)
				{
					rank_count[q]+=1;
				}
				else
				{
					rank_count[++q]=1;
					if(is_straight&&a[i]-a[i-1]!=1)
					{
						is_straight=false;
					}
				}
			}
			if(q==4)
			{
				if(is_straight)
				{
					printf("straight\n");
				}
				else
				{
					printf("high card\n");
				}
			}
			else
			{
				std::sort(rank_count,rank_count+5);
				if(rank_count[4]==4)
				{
					printf("four of a kind\n");
				}
				else if(rank_count[4]==3)
				{
					if(rank_count[3]==2)
					{
						printf("full house\n");
					}
					else
					{
						printf("three of a kind\n");
					}
				}
				else if(rank_count[4]==2)
				{
					if(rank_count[3]==2)
					{
						printf("two pairs\n");
					}
					else
					{
						printf("pair\n");
					}
				}
				else
				{
					printf("high card\n");
				}
			}
		}
	}
}