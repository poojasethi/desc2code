import sys

def replaceCardWithNumber(x):
    if x == "J":
        return 11
    elif x == "Q":
        return 12
    elif x == "K":
        return 13
    elif x == "A":
        return 14
    elif x == "T":
        return 10

def cardCompare(x,y):
    x = x[0]
    y = y[0]
    
    if x.lower() != x or x.upper() != x:
        x = replaceCardWithNumber(x.upper())
    if y.lower() != y or y.upper() != y:
        y = replaceCardWithNumber(y.upper())

    x = int(x)
    y = int(y)
    return x-y

def cardCompare1(x,y):
    x = x[0]
    y = y[0]
    
    if x.lower() != x or x.upper() != x:
        x = replaceCardWithNumber(x.upper())
    if y.lower() != y or y.upper() != y:
        y = replaceCardWithNumber(y.upper())

    x = int(x)
    y = int(y)

    if x > 10:
        x = -4+(x % 10)
    if y > 10:
        y = -4+(y % 10)
    return x-y

def processHand(input):

    
    input = sorted(input, cardCompare)
    
    consec = 0
    flush = 0

    consec1 = 0
    t = sorted(input, cardCompare1)

    for i in range(len(input)-1):
        if cardCompare1(input[i], input[i+1]) == -1:
            consec1 += 1

    if consec1 == 4:
        consec1 = True

    hash = {}

    for i in range(len(input)-1):
        if cardCompare(input[i], input[i+1]) == -1:
            consec += 1
        if input[i][1] == input[i+1][1]:
            flush += 1
        if input[i][0] not in hash:
            hash[input[i][0]] = 1
        else:
            hash[input[i][0]] += 1


    if input[len(input)-1][0] not in hash:
        hash[input[len(input)-1][0]] = 1
    else:
        hash[input[len(input)-1][0]] += 1

    flag = False
    if consec == 3 and t[0][0] == 'A' and t[4][0] == '5':
        flag = True

    if consec == 4 or flag == True:
        consec = True
    else:
        consec = False

    if flush == 4:
        flush = True
    else:
        flush = False


    if consec and flush:
        if input[len(input)-1][0].upper() == "A" and input[0][0].upper() == 'T':
            return "royal flush"
        else:
            return "straight flush"

    items = hash.items()

    pairs = 0
    triplet = 0
    quartet = 0

    for i in items:
        if i[1] == 2:
            pairs += 1
        elif i[1] == 3:
            triplet += 1
        elif i[1] == 4:
            quartet += 1


    if quartet == 1:
        return "four of a kind"
    elif triplet == 1:
        if pairs == 1:
            return "full house"
        else:
            return "three of a kind"
    elif flush == True:
        return "flush"
    elif consec == True:
        return "straight"
    elif pairs > 0:
        if pairs == 2:
            return "two pairs"
        elif pairs == 1:
            return "pair"
    return "high card"

def main():
    f = sys.stdin
    limit = int(f.readline())
    for i in range(limit):
        input = f.readline().split()
        print processHand(input)

if __name__ == "__main__":
    main()
