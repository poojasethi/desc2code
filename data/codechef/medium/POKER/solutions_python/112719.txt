def numbs(hand):
    d=[]
    for ii in xrange(5):
        if hand[ii][0]=='A':    d+=[14]
        elif hand[ii][0]=='K':  d+=[13]
        elif hand[ii][0]=='Q':  d+=[12]
        elif hand[ii][0]=='J':  d+=[11]
        elif hand[ii][0]=='T':  d+=[10]
        else:   d+=[int(hand[ii][0])]
    return d

def foakfh(a,t):
    if a.count(t[0])==4 or a.count(t[1])==4:
        return 'four of a kind'
    return 'full house'

def tok(a,t):
    a=max([a.count(ii) for ii in t])
    if a==3:
        return 'three of a kind'
    elif len(t)==3:
        return 'two pairs'
    return 'pair'

def strai(a):
    if a[0]==2 and a[4]==14:    #Äss võib lugeda kõrge ja madalana
        a.pop(4)
        a.insert(0,1)
    if list(set(a[ii]-1==a[ii-1] for ii in xrange(1,5)))==[True]:
        return True
    return False
    
def handcheck(hand):
    suits=[hand[ii][1] for ii in xrange(5)]
    numbers=numbs(hand)
    numbers.sort()
    erinevad=list(set(numbers))
    if len(erinevad)==2:
        return foakfh(numbers,erinevad) #Four of a kind/Full House
    if len(erinevad) in (3,4):
        return tok(numbers,erinevad)    #Three/Two of a kind
    flush=len(set(suits))==1            #Flush on, kui ühte tüüpi mast
    straight=strai(numbers)          
    if flush and straight:
        if numbers[4]==14:
            return 'royal flush'
        return 'straight flush'
    if flush:
        return 'flush'
    if straight:
        return 'straight'
    return 'high card'

for ii in xrange(int(raw_input())):
    print handcheck(raw_input().split())