ranks=['A','K','Q','J','T','9','8','7','6','5','4','3','2']
suits=['S','H','D','C']

def check_suit(s):
    first_suit=s[0]
    for i in s:
        if i!=first_suit:
            return 0
    return 1

def check_count(r):
    count=[]
    for i in ranks:
        if r.count(i)>0:
            count.append(r.count(i))
    return count
def check_straight(r):
    j=1
    flag=0
    while j<=9:
      temp=[]
      if j==9:
          r1=ranks[j:]
          r1.append('A')
          for i in r1:
                if r.count(i)>0:
                    temp.append(r.count(i))
          if len(temp)==5:
                flag=1         
      else:      
        for i in ranks[j:j+5]:
            if r.count(i)>0:
                temp.append(r.count(i))    
        if len(temp)==5:
            flag=1
      j=j+1
    if flag:
        return True
    else:
        return False

def print_hand(test):
    rank=[]
    suit=[]
    count=[]
    test_array=test.split(' ')
    for i in test_array:
        rank.append(i[0])
        suit.append(i[1])
    same_suit=check_suit(suit)
    count=check_count(rank)
    if same_suit:
        if rank.count('A')==1 and rank.count('K')==1 and rank.count('Q')==1 and rank.count('T')==1 and rank.count('J')==1:
          print "royal flush"
        elif check_straight(rank[:]):
           print "straight flush" 
        else:
           print "flush"
    else:
         count.sort(reverse=True)
         if check_straight(rank[:]):
             print "straight"
         elif count[0]==4:
             print "four of a kind"
         elif count[0]==3 and count[1]==2:
             print "full house"
         elif count[0]==3 and len(count)==3:
             print "three of a kind"
         elif count[0]==2 and count[1]==2:
             print "two pairs"
         elif count[0]==2 and len(count)==4:
             print "pair"
         else:
             print "high card"
                
num_of_cases=input()
while num_of_cases>0:
    test_case=[]
    test_case=raw_input()
    print_hand(test_case)
    num_of_cases=num_of_cases-1
