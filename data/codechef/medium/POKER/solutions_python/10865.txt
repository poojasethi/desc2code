def isInSameSuit(hand):
    for i in range(1,len(hand)):
        if hand[0][1]!=hand[i][1]:
            return None
    return True

def getRanksInList(hand):
    rank=[]
    for i in range(0,len(hand)):
        if hand[i][0]=='T':
            rank.append(10)
        elif hand[i][0]=='J':
            rank.append(11)
        elif hand[i][0]=='Q':
            rank.append(12)
        elif hand[i][0]=='K':
            rank.append(13)
        elif hand[i][0]=='A':
            rank.append(1)
        else:
            rank.append(int(hand[i][0]))
#    rank.sort()
    return rank

def isRoyalFlush(hand):
    if isInSameSuit(hand):
        if hand[0][0]=='A' or hand[0][0]=='K' or hand[0][0]=='Q' or hand[0][0]=='J' or hand[0][0]=='T':
            if hand[1][0]!=hand[0][0] and (hand[1][0]=='A' or hand[1][0]=='K' or hand[1][0]=='Q' or hand[1][0]=='J' or hand[1][0]=='T'):
                if hand[2][0]!=hand[0][0] and hand[2][0]!=hand[1][0] and (hand[2][0]=='A' or hand[2][0]=='K' or hand[2][0]=='Q' or hand[2][0]=='J' or hand[2][0]=='T'):
                    if hand[3][0]!=hand[0][0] and hand[3][0]!=hand[1][0] and hand[3][0]!=hand[2][0] and (hand[3][0]=='A' or hand[3][0]=='K' or hand[3][0]=='Q' or hand[3][0]=='J' or hand[3][0]=='T'):
                        if hand[4][0]!=hand[0][0] and hand[4][0]!=hand[1][0] and hand[4][0]!=hand[2][0] and hand[4][0]!=hand[3][0] and (hand[4][0]=='A' or hand[4][0]=='K' or hand[4][0]=='Q' or hand[4][0]=='J' or hand[4][0]=='T'):
                            return 'royal flush'
    return None

def isStraightFlush(hand):
    if isInSameSuit(hand):
        ranks=getRanksInList(hand)
        ranks.sort()
        for i in range(0,len(ranks)-1):
            if ranks[i]+1!=ranks[i+1]:
                return None
        return 'straight flush'
    return None

def isFourOfAKind(hand):
    ranks=getRanksInList(hand)
    if ranks.count(ranks[0])==4 or ranks.count(ranks[1])==4:
        return 'four of a kind'
    return None

def isFullHouse(hand):
    ranks=getRanksInList(hand)
    for i in range(0, len(ranks)):
        for j in range(0, len(ranks)):
            if ranks[i]!=ranks[j] and i!=j:
                if (ranks.count(ranks[i])==3 and ranks.count(ranks[j])==2) or (ranks.count(ranks[j])==3 and ranks.count(ranks[i])==2):
                    return 'full house'
    return None

def isFlush(hand):
    if isInSameSuit(hand):
        return 'flush'
    return None

def isStraight(hand):
    if isInSameSuit(hand)==None:
        ranks=getRanksInList(hand)
        ranks.sort()
        for i in range(0,len(ranks)-1):
            if ranks[i]+1!=ranks[i+1]:
                return None
    return 'straight'

def isThreeOfAKind(hand):
     ranks=getRanksInList(hand)
     if ranks.count(ranks[0])==3 or ranks.count(ranks[1])==3 or ranks.count(ranks[2])==3:
        return 'three of a kind'
     return None
 
def isTwoPairs(hand):
    ranks=getRanksInList(hand)
    for i in range(0, len(ranks)):
        for j in range(0, len(ranks)):
            if ranks[i]!=ranks[j] and i!=j:
                if (ranks.count(ranks[i])==2 and ranks.count(ranks[j])==2):
                    return 'two pairs'
    return None

def isPair(hand):
    ranks=getRanksInList(hand)
    if ranks.count(ranks[0])==2 or ranks.count(ranks[1])==2 or ranks.count(ranks[2])==2 or ranks.count(ranks[3])==2:
        return 'pair'
    return None
def getHandType(hand):
    if isRoyalFlush(hand):
        return 'royal flush'
    if isStraightFlush(hand):
        return 'straight flush'
    if isFourOfAKind(hand):
        return 'four of a kind'
    if isFullHouse(hand):
        return 'full house'
    if isFlush(hand):
        return 'flush'
    if isStraight(hand):
        return 'straight'
    if isThreeOfAKind(hand):
        return 'three of a kind'
    if isTwoPairs(hand):
        return 'two pairs'
    if isPair(hand):
        return 'pair'
    else:
        return 'high card'
    
t = int(raw_input())
hands=[]
output=[]
for i in range(0,t):
    hands.append(raw_input())
    cards=hands[i].split()
    output.append(getHandType(cards))
    
for i in range(0,t):
    print output[i]