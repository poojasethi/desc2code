VALUES = '  23456789TJQKA'

def find_nuples(x, n):
    s, i, m = [], 0, n - 1
    while i < 5 - m:
        if x[i] == x[i + m]:
           s.append(x[i])
           i += m
        i += 1
    return s

def hand(cards):
    val  =  sorted(map(lambda x: VALUES.index(x[0]), cards))
    val2 =  sorted(map(lambda v: ((v - 1) % 13) + 1, val))
    col  = ''.join(map(lambda x:              x[1],  cards))
    flsh = col.count(col[0]) == 5
    strt = val[0] + 4 == val[4] or val2[0] + 4 == val2[4]
    n2uples = find_nuples(val, 2)
    n3uples = find_nuples(val, 3)
    n4uples = find_nuples(val, 4)

    if    strt and flsh and val[0] == 10: r = 'royal flush'
    elif  strt and flsh:                  r = 'straight flush'
    elif  n4uples:                        r = 'four of a kind'
    elif  n2uples and n3uples and \
          n2uples[0] != n3uples[0]:       r = 'full house'
    elif  flsh:                           r = 'flush'
    elif  strt:                           r = 'straight'
    elif  n3uples:                        r = 'three of a kind'
    elif  len(n2uples) == 2:              r = 'two pairs'
    elif  n2uples:                        r = 'pair'
    else:                                 r = 'high card'

    return r

t = int(raw_input())
for i in range(t):
    deck = map(tuple, raw_input().split())
    print hand(deck)
