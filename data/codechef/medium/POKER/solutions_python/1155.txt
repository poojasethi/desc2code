import sys;
import fpformat;

mp = {'2':2,'3':3,'4':4,'5':5,
	      '6':6,'7':7,'8':8,'9':9,
	      'T':10,'J':11,'Q':12,'K':13,'A':14};

def main():
    max_Input = int(raw_input());
    res = [];
    i = 0;
    while i < max_Input:
        res.append(myCheck(raw_input()));
        i += 1;
                   
    for result in res:
        print result;

def myCheck(arg):
    arr = arg.split(' ');
    num = [];
    suits = [];
    numArr = [];

    for st in arr:
        num.append(st[0]);
        suits.append(st[1]);
    
    num.sort(compare);
    same_Suit = allSameSuit(suits);

    for ch in num:
        numArr.append(mp[ch]);

    if same_Suit:
        if royalFlush(numArr):
            return 'royal flush';
        if straightFlush(numArr):
            return 'straight flush';
        
    if fourOfAKind(numArr):
        return 'four of a kind';
    if fullHouse(numArr):
        return 'full house';
    if same_Suit:
        return 'flush';
    if straight(numArr):
        return 'straight';
    if threeOfAKind(numArr):
        return 'three of a kind';
    if twoPair(numArr):
        return 'two pairs';
    if pair(numArr):
        return 'pair';
    
    return 'high card'; 


#ROYAL FLUSH
def royalFlush(numArr):
    if(numArr[0] == 10 and numArr[4] == 14):       
        return True;        

    return False;

#STRAIGHT FLUSH
def straightFlush(numArr):
   
    first = numArr[0];
    last =  numArr[4];

    if first + 4 == last:
        return True;

    if first == 2 and first + 3 == numArr[3] and numArr[4] == 14:
        return True;
    
    return False;

#FOUR OF A KIND
def fourOfAKind(numArr):
    
    if(numArr[0] == numArr[3]):
        return True;
    if(numArr[1] == numArr[4]):
        return True;
    
    return False;

#FULL HOUSE
def fullHouse(numArr):
   
    if (numArr[0] == numArr[2] and numArr[3] == numArr[4]):
        return True;
    if(numArr[0] == numArr[1] and numArr[2] == numArr[4]):
        return True;
    
    return False;

#STRAIGHT
def straight(numArr):
    first = numArr[0];
    last =  numArr[4];

    if first + 4 == last:
        return True;

    if first == 2 and first + 3 == numArr[3] and numArr[4] == 14:
        return True;
    
    return False;
    
#Three of a kind
def threeOfAKind(numArr):
    
    if(numArr[0] == numArr[2]):
        return True;
    if(numArr[1] == numArr[3]):
        return True;
    if(numArr[2] == numArr[4]):
        return True;
    return False;

#2PAIR
def twoPair(numArr):
    matches = 0;
    for i in xrange(1,len(numArr)):
        if(numArr[i] == numArr[i-1]):
            matches += 1;

    if(matches == 2):
        return True;
    return False;

#PAIR
def pair(numArr):    
    for i in xrange(1,len(numArr)):
        if(numArr[i] == numArr[i-1]):
            return True;

    return False;

def compare(x,y):
    if( mp[x] == mp[y]):
        return 0;
    if(mp[x] > mp[y]):
        return 1;
    return -1;

def allSameSuit(suits):
    first = suits[0];
    for ch in suits:
        if(ch != first):
            return False;
    return True;

if __name__ == '__main__':
  main();
