def nCk(N, K):
    nn=N
    klim = min(K, N-K)+1
    res = 1
    #print " res = " + str(res)
    for kk in xrange(1, klim):
        res *= nn
        #print " res = " + str(res)
        res /= kk
        #print " res = " + str(res)
        nn -= 1
    #print str(N) + " choose " + str(K) + " = " + str(res)
    return res


def doTest():
   CC = raw_input()
   CCT = CC.split()
   S = int(CCT[0])
   N = int(CCT[1])
   M = int(CCT[2])
   K = int(CCT[3])
   #print "S=" + str(S) + " N = " + str(N) + " M = "  + str(M) + " K = " + str(K)
   den = nCk(S-1, N-1)
   #print "den = " + str(den)
   klim = min(M, N)
   num = 0
   for kk in xrange(K, klim):
       if ((S-M) < (N-kk-1)):
           continue
       num += nCk(M-1, kk)*nCk(S-M, N-kk-1)

   #print "num = " + str(num)
   ans = num/float(den)
   print "%.9f" % ans


# MAIN
T = int(raw_input())
#print "T = " + str(T)
for tt in xrange(0, T):
    doTest()

