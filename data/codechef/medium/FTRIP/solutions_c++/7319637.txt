//THEM THAT STICK TO IT OUT, ARE THEM THAT WIN
//The closer you think you're, the less you will actually see.
#include "bits/stdc++.h"
#define sd(n) scanf("%d", &(n))
#define rep(i, x, n) for (int i = x, _n = (n); i < _n; ++i)
#define repV(i, v) for (i = v.begin(); i != v.end(); i++)
#define SZ(c) (int)(c).size()
#define VI vector<int>
#define all(c) (c).begin(), (c).end()
#define pb push_back
#define mii map<int, int>
#define pii pair<int, int>
#define pip pair<int, pii>
#define F first
#define S second
#define mp make_pair
#define lli long long int
#define CLR(p) memset(p, 0, sizeof(p))
#define SET(p) memset(p, -1, sizeof(p))
#define INF 0x3f3f3f3f
using namespace std;

const int MOD = 1e9+7;
const int MAX = 1010;


double c[MAX][MAX];
void pre()	//calculates nCr % P using pascals triangle in O(n^2) time 
{
	c[0][0] = 1.0;
	for(int i = 1; i < MAX; i++)
	{
		c[i][0] = 1.0;
		for(int j = 1; j <= i; j++)
			c[i][j] = (c[i-1][j-1] + c[i-1][j]);
	}
}

int main()
{
	pre();
	int t, s, n, m, k;
	sd(t);
	while(t--)
	{
		sd(s);
		sd(n);
		sd(m);
		sd(k);
		
		double ans = 0.0;
		rep(f, max(k, n-1+m-s), min(m-1, n-1)+1)
			ans += c[m-1][f] *1.0* c[s-m][n-f-1];
			
		double dnr = c[s-1][n-1];
		
		printf("%.6lf\n", (double)ans/dnr);
	}
    return 0;
}    
