#include<bits/stdc++.h>
using namespace std;
int t,s,n,m,k,l,h;
int prime[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997};
int power[1001],num[4],den[5];
double P,x;
int max(int a,int b){if(a>b) return a; return b;}
int min(int a,int b){if(a<b) return a; return b;}
 inline int inp()
{
    int noRead=0;
    char p=getchar_unlocked();
    for(;p<33;){p=getchar_unlocked();};
    while(p>32)
    {
		noRead = (noRead << 3) + (noRead << 1) + (p - '0');
		p=getchar_unlocked();
    }
    return noRead;
};
int gcd(int a,int b)
{
	if(b==0) return a;
	return gcd(b,a%b);
}
int p(int n,int i)
{
	int pw=0,k=i;
	while(i<=n)
	{
		pw+=(n/i);
		i*=k;
	}
	return pw;
}
int main()
{
	t=inp();
	while(t--)
	{
		s=inp();n=inp();m=inp();k=inp();
		l=min(m-1,n-1);P=0.0;
		h=max((n+m)-(s+1),k);
		for(int r=h;r<=l;r++)
		{
			num[0]=m-1;num[1]=s-m;num[2]=s-n;
			den[0]=(m-r-1);den[1]=r;den[2]=(s-m-n+r+1);
			den[3]=(n-r-1);den[4]=(s-1);num[3]=(n-1);

			for(int i=0;i<168;i++) power[prime[i]]=0;

			for(int i=0;i<4;i++)
			{
				//cout<<num[i]<<" ";
				for(int j=0;j<168;j++)
				{
					power[prime[j]]+=p(num[i],prime[j]);
				}
			}
			//cout<<endl;
			for(int i=0;i<5;i++)
			{
				//cout<<den[i]<<" ";
				for(int j=0;j<168;j++)
				{
					power[prime[j]]-=p(den[i],prime[j]);
				}
			}
			/*cout<<endl;
			for(int i=0;i<168;i++)
			cout<<prime[i]<<" : "<<power[prime[i]]<<endl;
			cout<<endl;*/
			x=1.0;

			for(int i=0;i<168;i++)
			{
				if(power[prime[i]] > 0) x*=pow(prime[i],power[prime[i]]);
				else if(power[prime[i]] < 0) x/=pow(prime[i],-power[prime[i]]);
			}
            //cout<<x<<endl;

			P+=x;
			//system("pause");
		}
		printf("%f\n",P);
	}
	return 0;
}
