#include<bits/stdc++.h>
using namespace std;
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define MOD 1000000007
#define newl cout<<"\n"
#define newli "\n"
#define itn int
#define reutrn return
typedef long double lld;
//-----------------------------------------------------
/*lld gcd(lld m, lld n)
{
    if(n == 0)
        return m;
    return gcd(n, m % n);
}
//---------------------------------------------------------
lld powmod(lld a,lld b)
{
    if(b==0)return 1;
    lld x=powmod(a,b/2);
    lld y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y%MOD;
}*/
//-------------------------------------------------------
lld C[1010][1010];
/*void ncr(int n, int k)
{
    memset(C,0,sizeof(C));
    int i, j;

    for (i = 0; i <= n; i++)
    {
        for (j = 0; j <= min(i, k); j++)
        {
            if (j == 0 || j == i)
                C[i][j] = 1;

            else
                C[i][j] = C[i-1][j-1] + C[i-1][j];
        }
    }

    //return C[n][k];
}*/
void ncr(int  n,int k)
{
    memset(C,0,sizeof(C));
    rep(i,0,1005)
    {
        C[i][0]=1;
    }
    rep(i,1,1005)
    {
        rep(j,1,i+1)
        {
            C[i][j]=C[i-1][j-1]*(lld)((i)/(lld)(j));
        }
        C[i][i]=1;
    }
}


int main()
{
    int t;
    cin>>t;
    ncr(1005,1005);
    while(t--)
    {
        int s,n,m,k;
        cin>>s>>n>>m>>k;
       // ncr(s,s);
        lld p=0;
        long double ans=0;
        if(n-1<k)
            printf("%.8Lf\n",ans);
       // else if(n==s)
         //   printf("%.8Lf\n",ans+1);

        else
        {
            int num=min(m,n);
            int num1=s-m;
            int num2=n-num1;
            num2=max(k,num2);
            rep(i,k,m)
            {
                if(i+s-m>=n-1)
                p+=C[m-1][i]*C[s-m][n-i-1];
               // cout<<p<<"\n";
            }
            lld tot=C[s-1][n-1];
            ans=(long double)p/(long double)tot;
            printf("%.8Lf\n",ans);
        }
          /*    rep(i,0,s+1)
                 {
                 rep(j,0,s+1)
                 cout<<C[i][j]<<" ";
                 cout<<endl;
                 }*/

    }

    return 0;
}
