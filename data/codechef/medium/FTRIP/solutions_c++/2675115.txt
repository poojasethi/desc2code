/***********Template Starts Here***********/
#pragma comment (linker,"/STACK:16777216")
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <map>
#include <queue>
#include <stack>
#include <vector>
#include <deque>
#include <functional>
#include <string>
#include <iostream>
#include <cctype>

#define pb push_back
#define nl puts ("")
#define sp printf ( " " )
#define phl printf ( "hello\n" )
#define all(c) (c).begin(),(c).end()
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define sz(a) int((a).size())

using namespace std;

typedef long long vlong;
typedef unsigned long long uvlong;
typedef vector < int > vi;
typedef pair < int, int > ii;
typedef vector < ii > vii;


const vlong inf = 2147383647;
const double pi = 2 * acos ( 0.0 );
const double eps = 1e-9;
const vlong maxint = 2147483647;
const vlong minint = -2147483648;

/***********Template Ends Here***********/

double coef[1010][1010];
int done[1010][1010];

double nck ( int n, int k ) {
    if ( k == 0 ) return 1;
    if ( n == 0 ) return 0;

    if ( done[n][k] == 1 ) return coef[n][k];
    coef[n][k] = nck ( n - 1, k ) + nck ( n - 1, k - 1 );
    done[n][k] = 1;
    return coef[n][k];
}

int main () {
    memset ( done, -1, sizeof done );

    //freopen ( "input.txt", "r", stdin );
    //freopen ( "output.txt", "w", stdout );
    int kase;
    scanf ( "%d", &kase );

    while ( kase-- ) {
        int s, n, m, k;
        scanf ( "%d %d %d %d", &s, &n, &m, &k );

        double total = nck ( s - 1, n - 1 );
        double res = 0;
        int normal = s - m;
        int i;

        for ( i = k; i <= m - 1; i++ ) {
            res += nck ( m - 1, i ) * nck ( normal, n - 1 - i );
            //printf ( "%d %d\n", i, n - 1 - i );
        }
        printf ( "%.10lf\n", res / total );
    }

    return 0;
}
