#include<stdio.h>
#define gc getchar_unlocked

void scanint(int &x)
{
	register int c = gc();
	x = 0;
	for(;(c<48 || c>57);c = gc());
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

void process (char table[101][101], int r, int c)
{
	char str[] = {'s', 'p', 'o', 'o', 'n'};
	char str1[] = {'S', 'P', 'O', 'O', 'N'};
	bool found = false;
	int k=0;
	// process each row
	for (int i=0; i< r; i++)
	{
		for (int j=0; j < c; j++)
		{
			if ((table[i][j] == str[0] || table[i][j] == str1[0]) && (c-j) >= 5 )
			{
				found = true;
				
				k = j; 
				for (int r=1; r < 5; r++)
				{
					k++;
					if (!(table[i][k] == str[r] || table[i][k] == str1[r]))
					{
						found = false;
						break;
					}
				}
			}

			if (found)
			{
				printf("There is a spoon!\n");
				return;
			}
		}
	}

	// process each column
	for (int i=0; i< c; i++)
	{
		for (int j=0; j < r; j++)
		{
			if ((table[j][i] == str[0] || table[j][i] == str1[0]) && (r-j) >= 5 )
			{
				found = true;

				k = j; 
				for (int r=1; r < 5; r++)
				{
					k++;
					if (!(table[k][i] == str[r] || table[k][i] == str1[r]))
					{
						found = false;
						break;
					}
				}
			}

			if (found)
			{
				printf("There is a spoon!\n");
				return;
			}
		}
	}

	if (!found)
		printf ("There is indeed no spoon!\n");

}


int main ()
{
	int t, r, c;
	char table[101][101];

	scanint(t);

	while (t--)
	{
		scanint(r);
		scanint(c);

		for (int i=0; i< r; i++)
		{
			for (int j=0; j <= c; j++)
			{
				table[i][j] = gc();
				if (table[i][j] == '\n')
				{
					table[i][j] = '\0';
				}
			}
		}

		process (table, r, c);
	}

	return 0;
}