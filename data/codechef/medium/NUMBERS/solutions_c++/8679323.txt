#include <stdio.h>
#include <iostream>
#include <cstdlib>
#include <algorithm>
#include <vector>

using namespace std;

int input()
{
    int n=0;
    char c=getchar_unlocked();
    while(c < '0' || c >'9') {c=getchar_unlocked();}
    while(c>='0' && c<='9')
    {
        n=(n<<3)+(n<<1)+c-'0';
        c=getchar_unlocked();
    }
    return n;
}

typedef struct Bubble{
	string name;
	int num;
	Bubble(int n, string str):num(n), name(str){
	}
}bubble;

bool key(bubble a, bubble b) {
	return (a.num < b.num);
}

int main(){
	int T, N;
	int num;
	T = input();
	vector<bubble> vec;
	string str;
	bool flag;
	while(T--){
		N = input();
		vec.clear();
		for(int i = 0; i < N; i++){
			cin >> str;
			num = input();
			vec.push_back(bubble(num, str));
		}
		sort(vec.begin(), vec.end(), key);
		if(N > 1){
			if(vec[0].num != vec[1].num){
				cout << vec[0].name << endl;
				continue;
			}
		}
		else{
			cout << vec[0].name << endl;
			continue;
		}
		flag = false;
		for(int i = 1; i < N-1; i++){
			if((vec[i-1].num != vec[i].num) && (vec[i].num != vec[i+1].num)){
				cout << vec[i].name << endl;
				flag = true;
				break;
			}
		}
		if(flag)
			continue;
		else{
			if(N > 1){
				if(vec[N-2].num != vec[N-1].num){
					cout << vec[N-1].name << endl;
				}
				else{
					cout << "Nobody wins." << endl;
				}
			}
		}
	}
}






