/*
USER: Mukesh 
TASK: 
ALGO: 
*/
#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef istringstream iss; // >>
typedef ostringstream oss; //<<
#define geti(n) int n;scanf("%d",&n)
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)
#define getl(n) long long n;cin >> n
#define getc(c) char c;cin >> c
#define rep(i,n) for(int i=0;i<n;i++)
#define puti(n) printf("%d\n",n)
#define ll long long
#define pb push_back
#define mem(p,q) memset(p,q,sizeof(p))
#define fu(i,a,n) for(int i=a;i<n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define mp make_pair
#define popcount __builtin_popcount
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define max(x,y) ( x ^ ((x ^ y) & -(x < y)))
#define min(x,y) (y ^ ((x ^ y) & -(x < y)))
#define TRACE
using namespace std;
#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#else
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
#endif

//Dp[x] --> max/min score upto elmnt<=x ; 
const int MAX=102; 
double Dp[MAX][10004],p[MAX],ans=0;
int flag[MAX],strt;
int main()
{ 
         #ifdef _WIN32 
           freopen("input.txt", "r", stdin);
           //freopen("output.txt","w",stdout);
          #endif // LOCAL_USER  
geti(t);
while(t--)
{int Tot_F=0;
  geti(n);
  rep(i,n)
    {cin>>flag[i];
    Tot_F+=flag[i];}
    rep(i,n)
      {cin>>p[i];
       p[i]/=100;}
mem(Dp,0);    
Dp[0][0] = 1 ; // 
for(int i=1;i<=n;i++)
{
  for(int j=0;j<=Tot_F;j++)
  {
      if(j >= flag[i-1])
        Dp[i][j] = Dp[i-1][j-flag[i-1]]*p[i-1] + Dp[i-1][j]*(1-p[i-1]);
      else
        Dp[i][j] = (Dp[i-1][j])*(1-p[i-1]);
  }
}
if(Tot_F%2!=0)
strt = (Tot_F/2) +1;
else 
strt = Tot_F/2;

ans=0;
for(int i = strt;i<=Tot_F;i++)
{
  ans+=Dp[n][i];
}
printf("%.7lf\n",ans);
}
return 0 ; 
}