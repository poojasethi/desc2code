#include<iostream>
#include <functional>
#include<vector>
#include <string.h>
#include <string>
#include <algorithm>
#include <queue>
#include <math.h>

using namespace std;

const int maxn = 109;
typedef long long ll;

int n;
double a[maxn],p[maxn];
double dp[maxn][maxn*maxn];

int main()
{
	int t = 0;
	cin >> t;

	while(t--)
	{
		int sum = 0;
		cin >> n;
		for(int i = 1; i <= n; i++)
		{
			cin >> a[i];
			sum += a[i];
		}
		for(int i = 1; i <= n; i++)
		{
			cin >> p[i];
			p[i] = (p[i]*1.0)/100;
		}

		a[0] = p[0] =0;
		dp[0][0] = 1;
		for(int i = 1; i <= n; i++)
		{
			for(int k = 0; k <= sum; k++)
			{
					if(k - a[i] >= 0)
						dp[i][k] += (dp[i - 1][k - (int)a[i]]*p[i] + dp[i - 1][k]*(1 - p[i]));
					else
						dp[i][k] += dp[i - 1][k]*(1 - p[i]);
			}
		}

		double res = 0;
		for(int k = (sum + 1)/2; k <= sum; k++)
			res += dp[n][k];
		cout << res << endl;
		memset(dp,0,sizeof(dp));
	}
	return 0;
}
