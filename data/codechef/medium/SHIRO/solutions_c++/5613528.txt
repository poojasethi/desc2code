#include <cstdio>
#include <algorithm>
#define lld long long int
void dynamic(int a[],float p[],int n,float dp[][10002])
{
	int i,j,f=0;;
	for(i=1;i<=n;i++)
	{
		f=f+a[i];
		for(j=0;j<=f;j++)
		{
			if(j-a[i] >= 0)
				dp[i][j]=(dp[i-1][j])*(1-p[i])+(dp[i-1][j-a[i]])*(p[i]);
			else
				dp[i][j]=(dp[i-1][j])*(1-p[i]);
			//printf("dp[%d][%d]%f\n",i,j,dp[i][j]);
		}
	}
}
int main()
{
	int t,n,a[101],i,j,f;
	float dp[101][10002],p[101],sum;
	scanf("%d",&t);
	while(t--)
	{
		f=0;
		sum=0.0;
		scanf("%d",&n);
		for(i=1;i<=n;i++)
		{
			scanf("%d",&a[i]);
			f=f+a[i];
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&j);
			p[i]=float(j/(100.0));
		}
		for(i=0;i<=n;i++)
		{
			for(j=0;j<=f;j++)
			{
				dp[i][j]=0;
			}
		}
		dp[0][0]=1;
		dynamic(a,p,n,dp);
		j=(f+1)/2;
		//printf("j%d\n",j);
		for(i=j;i<=f;i++) sum+=dp[n][i];
		printf("%f\n",sum);
	}
	return 0;
}