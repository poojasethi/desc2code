// Headers
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cassert>
#include<cstdlib>
#include<vector>
#include<map>
#include<fstream>
#include<list>
#include<stack>
#include<queue>
#include<algorithm>
#include<bitset>
#include<set>
using namespace std;
// Global declarations
typedef long long int ll;
typedef vector<int> vi;
typedef vector<char> vc;
typedef pair<int, int> pi;
const int mod = 1e9 + 7;
const int INF = 1 << 25;
// Macros
#define mp make_pair
#define el putchar('\n')
#define sp putchar(' ')
#define Fill(a,val) memset(a,val,sizeof a)
#define ff first
#define ss second
#define pb push_back
#define ppb pop_back
#define gcd __gcd
#define all(a) a.begin(),a.end()


int const N = 105;
int a[N], p[N];
double DP[N*N][N];

int main(){
	int t;
	cin >> t;
	while (t--){
		int n;
		cin >> n;
		Fill(DP, 0.0);
		double sum = 0.0;
		for (int i = 0; i < n; ++i)
			cin >> a[i], sum += a[i];
		for (int i = 0; i < n; ++i)
			cin >> p[i];
		DP[0][0] = 1.0;
		for (int j = 1; j <= n; ++j){
			for (int i = 0; i < int(sum+5); ++i){
				double val1 = ((i - a[j - 1]) >= 0 ? double(p[j - 1] / 100.0) * DP[i - a[j - 1]][j - 1] : 0.0);
				double val2 = (1.0 - double(p[j - 1] / 100.0))*DP[i][j - 1];
				DP[i][j] = val1 + val2;
			}
		}
		double ans = 0.0;
		for (int i = 0; i < int(sum+5); ++i){
			if (i >= sum - i){
				ans += DP[i][n];
			}
		}
		printf("%.12lf\n", ans);
	}
	return 0;
}