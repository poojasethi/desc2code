#include <cstdio>
#include <algorithm>
#define lld long long int
void dynamic(int a[],float p[],int n,float dp[])
{
	int i,j,f=0;
	for(j=1;j<=n;j++){
		f=f+a[j];
	for(i=f;i>=0;i--)
	{
		if(i-a[j] >= 0)
			dp[i]=(dp[i])*(1-p[j])+(dp[i-a[j]])*(p[j]);
		else
			dp[i]=(dp[i])*(1-p[j]);
		//printf("dp[%d][%d]%f\n",j,i,dp[i]);
	}
}
}
int main()
{
	int t,n,a[101],i,j,f;
	float dp[10002],p[101],sum;
	scanf("%d",&t);
	while(t--)
	{
		f=0;
		sum=0.0;
		scanf("%d",&n);
		for(i=1;i<=n;i++)
		{
			scanf("%d",&a[i]);
			f=f+a[i];
		}
		for(i=1;i<=n;i++)
		{
			scanf("%d",&j);
			p[i]=float(j/(100.0));
		}
		for(i=0;i<=f;i++) dp[i]=0;
		dp[0]=1;
		dynamic(a,p,n,dp);
		j=(f+1)/2;
		//printf("j%d\n",j);
		for(i=j;i<=f;i++) sum+=dp[i];
		printf("%f\n",sum);
	}
	return 0;
}