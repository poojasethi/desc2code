#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define mem(a,val) memset(a,val,sizeof(a))
#define nl printf("\n");
#define pb push_back
#define mp make_pair
//#define f first
//#define s second
#define cf I64
using namespace std;
int dp[101][101];
int main()
{	int t,i,j,n,m,ans,sum,k,l,a[101][101];
	sf(t);
	while(t--)
	{	sf(n);
		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				sf(a[i][j]);
		mem(dp,0);		
		//precomputation :-	
		dp[1][1]=a[1][1];
		for(i=1,j=1;j<=n;j++) dp[i][j]=dp[i][j-1]^a[i][j];
		for(i=1,j=1;i<=n;i++) dp[i][j]=dp[i-1][j]^a[i][j];
		for(i=2;i<=n;i++)
			for(j=2;j<=n;j++)
				dp[i][j]=dp[i][j-1]^dp[i-1][j]^dp[i-1][j-1]^a[i][j];
		//for each matrix :-
		ans=0;
		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				for(k=i;k<=n;k++)
					for(l=j;l<=n;l++)
						ans=max(ans,dp[k][l]^dp[i-1][l]^dp[k][j-1]^dp[i-1][j-1]);
				
		cout<<ans<<endl;		
	}
	return 0;
}
