#include<iostream>
#include<cstdlib>
#include<vector>
using namespace std;

int loop(long long  a[] , long pos,vector<long>&s , vector<long> &p, long n )
{	
	s.push_back(a[pos]);
	p.push_back(1);
	long long sum_i = 0;
	for(int i = 0; i < n ; i++)
	{	if(pos<i)
		{	sum_i =  sum_i + a[i];
		
			int chc = 0;
			for(int j = 0 ; j < s.size() ; j++)
			{	if(sum_i/(i-pos+1)==s[j]&&sum_i%(i-pos+1)==0)
				{	p[j] += 1;
					chc =1;
					
					
					
				}
				
			}
			if(((sum_i)%(i-pos+1))==0&&chc==0)
				{	s.push_back(sum_i/(i-pos+1));
					p.push_back(1);
					
					
					
				}
		}
		else if(pos>i&&i>0)
		{	sum_i += a[pos-i-1];
			int chc = 0;
			for(int j = 0 ; j < s.size() ; j++)
			{	if(s[j]==(sum_i)/(i+1)&&sum_i%(i+1)==0)
				{	p[j] += 1;
					chc = 1;
				}
			}
			if((sum_i%(i+1)==0&&chc==0))
			{	s.push_back(sum_i/(i+1));
				p.push_back(1);
			}
			
		}
		else if(i==pos)
		{	sum_i = a[pos];	}
		
		else if(i==0&&pos!=0)
		{	int chc = 0;
			sum_i = a[pos-1];
			for(int j = 0 ; j < s.size() ; j++)
			{	if(s[j]==(sum_i))
				{	p[j] += 1;
					chc = 1;
				}
			}
			if(chc==0)
			{	s.push_back(sum_i);
				p.push_back(1);
			}
		
		}
		
	}
}

long long oper(vector <long>&  s, vector<long>& t , long k ,long n , long pos, long long  a[],long long  b[])
{	long long  crit_a= 999999999;
	 long long  crit_d= -999999999;

	for(long   i =0 ; i < t.size() ; i++)
	{	if(n+1-(t[i]+1)<=k)
		{	long long  chan_a = b[pos]- s[i]*pos ;
			long long chan_d = s[i];
	
		
			if(chan_a<crit_a)
			{	crit_a = chan_a;
				crit_d = chan_d;
			}
			else if(chan_a==crit_a)
			{	if(crit_d > chan_d)
				{	crit_a = chan_a;
					crit_d = chan_d;
				}
			}
		}
	}
	
		return crit_d;
}
long long take(long long a[], long n, long k, long long& r,long long b[])
{	long long  max  = 0;
	long long stor = 999999999;
	long long  d_ =  999999999 ;
	for(long i = 0 ; i <  n ; i++)
	{	vector<long> s;
		vector<long> t;
		loop(a,i,s,t,n);
		
		max  = oper(s,t,k,n,i,a,b);
		if(max!=-999999999)
	  {
	
		
		if(stor > b[i]-max*(i))
			{	stor = b[i]-max*(i);
				d_ = max;
			
				
			}
		else if((stor==(b[i]-max*(i)))&& max < d_)
			{	d_ = max;
		
				
			}
	  }
	}
	r = stor;
	return d_; 
}
int main()
{	
	
		long no;
		cin>>no;
		long k;
		cin>>k;
		long long b[no];
		for(int i =0 ;i <no ; i++)
		{	cin>>b[i];
		}
		long n = no-1;
		long long a[n];
		for(long i = 0; i< n ; i++)
		{	a[i]=b[i+1]-b[i];
		}
		long long r=0;
		long long d;
		if(no <= 50)
	{
			d  = take(a,n,k,r,b);
		
	}
		else if(no>50)
	{	vector<long> s;
		vector<long> t;
		for(long i = 0 ; i < n  ; i++)
		{	int chc =0;
			for(long j = 0 ; j < s.size(); j++)
			{	if(a[i]==s[j])
				{	t[j]+=1;
					chc=1;
				}
				
			}
			if(chc==0)
			{	s.push_back(a[i]);
				t.push_back(1);
			}
			
		}
			long max = t[0];
			long pos = 0;
			long long num = 0;
		for(long i = 0 ; i < t.size() ; i++)
		{	
			if(t[i]>max)
			{	max = t[i];
				pos = i;
			}
			
		}
		long stand;
		for(long i = 0 ; i < n ; i++)
		{	if(a[i]==s[pos])
			{	num = b[i];
				stand = i ;
			}
		}
		r = num - s[pos]*stand;
	 	d =  s[pos];
	}

		for(long i = 0; i < no  ;i++)
		{	cout<<r+i*d<<" ";
		}
}

	

		
		
	
	


			
		
			
	
