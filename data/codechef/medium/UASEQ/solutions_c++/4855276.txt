#include <iostream>
#include<cstdio>
#include<vector>
#include<map>
#define inf 1000000000
#define pb push_back
#define pii pair<int,int>
#define gc getchar_unlocked
#define pc putchar_unlocked
int scan(){register int n=0,c=gc();while(c<'0'||c>'9')c=gc();while(c<='9'&&c>='0')n=n*10+c-'0',c=gc();return n;}
void print(int a){char s[20];int i=0;do{s[i++]=a%10+'0',a/=10;}while(a);i--;while(i>=0)pc(s[i--]);pc(' ');}
using namespace std;
int main() {
	int a0,diff,a[100000],n,k,i,j,size,l,min=inf,mindiff=inf,pos; scanf("%d%d",&n,&k);
	vector<pii > v; map<int,int> cnt;//map to keep count of each diff
	for(i=0;i<n;i++)a[i]=scan();
	for(size=1;size<=k+1;size++)//size of intervals when k differences can be changed
	{ 	v.clear(); cnt.clear();
		//create diff vector with interval size= size
		for(i=size;i<n;i++)
		{	diff=a[i]-a[i-size];
			if(!cnt[diff])v.pb(pii(diff,i-size));
			cnt[diff]++;
		}
		l=v.size();
		for(j=0;j<l;j++)
		{	diff=v[j].first; pos=v[j].second;
			//n-size is total no of differences, k is no of differences that can be changed
			//n-size-k is no of differences that cant be changed
			if(cnt[diff]>=((n-size)-k) && diff%size==0)//if this diff can be divided equally in the interval of size =size
			{	diff=diff/size; //diff between each adjacent element= diff/interval size
				//calc a0
				a0=a[pos]-diff*(pos);
				if(a0<min)min=a0,mindiff=diff;
				else if(a0==min && diff<mindiff)mindiff=diff;
			}
		}
	}
	for(i=0;i<n;i++)print(min+(mindiff*i));
	return 0;
}
