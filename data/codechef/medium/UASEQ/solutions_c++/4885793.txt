#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <stack>
#include <queue>
#include <cmath>
#include <unistd.h>
#include <algorithm>
#include <vector>
#include <map>

using namespace std;

#define V(a) vector<a>
#define pi pair<int,int>
#define ull unsigned long long
#define ill long long
#define F(i,a,n) for(i=(a);i<(n);++i)
#define RP(i,n) F(i,0,n)
#define SUM(v, s, i) RP(i, v.size()){ s += v[i];}
#define MP(a, b) make_pair(a, b)
#define S(x) scanf("%d",&x)
#define SL(x) scanf("%lld",&x)
#define SZ(x) (x.size())
#define PB(a) push_back(a)
#define dbug(i,size,x) F(i,0,size){cout<<x[i]<<" ";} cout<<endl
#define tin freopen("aain.txt","r",stdin)
#define tout freopen("aaout.txt","a",stdout)

bool cmp(pair<int, int> a, pair<long int, long int>b) {
        return a.first < b.first;
}

bool feasible(long int a, long int d, V(long int) ar, long int n,long int k)
{
	long int tr, i, tk;


	tr = a; tk = 0;

	F(i, 0, n) {
		if (tr != ar[i]) {
			tk++;
			if (tk > k)
				return false;
		}

		tr = tr + d;
	}

	return true;

}

int main()
{
	long int n, k, i, j, l;
	long int diff, a0, tmp;

	V(long int) ar(100001);
	//pair<int ,int> tpi;

	vector <pair <long int, long int> > pr;

	S(n); S(k);

	F(i, 0, n) {
	//	cin >> ar[i];
		//S(ar[i]);
		scanf("%ld", &ar[i]);
	}

	F(i, 0, k + 1) {
		for (j = n - 1; j >= (n - k - 1) ; --j) {
			if (i < j) {
				l = j - i;
				
				diff = ar[j] - ar[i] ;

				if (diff % l != 0 )
					break;

				diff /= l;
				a0 = ar[i] - (i * diff);

				if (feasible(a0, diff, ar, n, k))
				pr.PB(make_pair(a0, diff));

			}
		}
	}
	
	l = SZ(pr);

	sort(pr.begin(), pr.end(), cmp);

	a0 = pr[0].first;
	diff = pr[0].second;

	F(i, 1, l) {
		if (pr[i].first == a0){
			if (pr[i].second < diff)
				diff = pr[i].second;
		} else {
			break;
		}
	}

	tmp = a0;
	
	F(i, 0, n) {
		printf("%ld ", tmp);
		tmp += diff;
	}

	return 0;
}


