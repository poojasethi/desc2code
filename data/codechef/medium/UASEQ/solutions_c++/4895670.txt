#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
using namespace std;
#ifndef ONLINE_JUDGE
inline int getchar_unlocked(){return getchar();}
inline int putchar_unlocked(char c){
	return putchar(c);
}
#endif 
inline void in(int &x){register int c=getchar_unlocked();x = 0;int neg=0;for(;((c<48||c>57)&&c!='-');c=getchar_unlocked());if(c=='-'){neg=1;c=getchar_unlocked();}for(;c>47&&c<58;c=getchar_unlocked()){x=(x<<1)+(x<<3)+c-48;}if(neg)x=-x;}
#define pc(x) putchar_unlocked(x);
    inline void out (int n)
    {
    	bool flag=false;
      if(n<0)
      {
      	n=-n;
      	flag=true;
      }
		  int N = n, rev, count = 0;
        rev = N;
        if (N == 0) { pc('0'); pc('\n'); return ;}
        while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
        rev = 0;
        while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
        if(flag)pc('-');
        while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
        while (count--) pc('0');
        pc(' ');
    }

int n,k,A,D,arr[100003];
inline void solve()
{
	int lim=min(11,n-1);
	bool flag=true;
	for(int count,a,d,i=1;i<lim;i++)
	{
		a=arr[n-i-1],d=arr[n-i]-arr[n-i-1];
		count=0;
		for(int j=n-i;j<n;j++)
		{
			if(arr[j]!=(a+=d))count++;
		}
		
		a=arr[n-i];
		for(int j=n-i-1;j>=0;j--)
		{
			if(arr[j]!=(a-=d))count++;
		}
		
		if(count<=k)
		{
			flag?(flag=false,A=a,D=d):(A>a?A=a:(a==A&&D>d?D=d:D));
		}
	}
	return ;
}
int main()
{
	cin>>n;
	cin>>k;
	for(int i=0;i<n;i++)cin>>arr[i];
	solve();
	n--;
	for(int i=0;i<n;i++)out(A+D*i);
	printf("%d ",(A+D*n));
	return 0;
} 