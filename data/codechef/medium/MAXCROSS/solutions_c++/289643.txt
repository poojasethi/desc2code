/* 
 * File:   main2.cpp
 * Author: jom
 *
 * Created on 8 de julio de 2010, 16:30
 */

#include <iostream>
#include <vector>
#include <sstream>
#include <cstring>
//
#define pb push_back

using namespace std;

/*
 * 
 */

//vector<string> vs;
char vs[1300][1300];
int B[1001][1001];
bool visited[1001][1001];
int n;

int main(int argc, char** argv) {

	

    char c[1300];
    cin >> n;
    cin.ignore();
    memset(B, 0, sizeof(B));
	memset(visited, false, sizeof(visited));
    for(int i = 0; i < n; i++){
        //cin.getline(vs[i],1300);
		scanf("%s",vs[i]);
        //vs.pb(c);
    }	
/*
 * Solve Problem starts
 */
 
	for(int i = 0; i < n; i++){
		for(int j = 0; j < n; j++){
			if(vs[i][j] == 'X'){
				int sum = 1;
				int k;
				for(k = j+1; k < n; k++)
					if(vs[i][k] == 'X') sum++;
					else break;
				for(int m = j; m <= k-1; m++)
					if(B[i][m] < sum) B[i][m] = sum;
			j += sum;
			}
		}
	
	}
	
	
	for(int j = 0; j < n; j++){
		for(int i = 0; i < n; i++){
			if(vs[i][j] == 'X'){
				int sum = 1;
				int k;
				for(k = i+1; k < n; k++)
					if(vs[k][j] == 'X') sum++;
					else break;
				for(int m = i; m <= k-1; m++)
					if(B[m][j] < sum) B[m][j] = sum;
			i += sum;
			}
		}
	
	}
	
	
	for(int i = 0; i < n; i++){
		for(int j = 0; j < n; j++){
			if(vs[i][j] == 'X' && !visited[i][j]){
				visited[i][j] = true;
				int sum = 1;
				for(int k = i+1, m = j+1; k < n && m < n; k++, m++){
					if(vs[k][m] == 'X' && !visited[k][m]){
						sum++;
						visited[k][m] = true;
						}
					else {
							visited[k][m] = true;
							break;
							}
				for(int k = i, m = j; k < i+sum && m < j+sum; k++, m++){
					if(B[k][m] < sum) B[k][m] = sum;
				}
				
				}
			
			}
		
		}
	
	}
	//Check for diagonal izquierda
	memset(visited, false, sizeof(visited));
	for(int i = 0; i < n; i++){
		for(int j = 0; j < n; j++){
			if(vs[i][j] == 'X' && !visited[i][j]){
				visited[i][j] = true;
				int sum = 1;
				for(int k = i+1, m = j-1; k < n && m >= 0; k++, m--){
					if(vs[k][m] == 'X' && !visited[k][m]){
						sum++;
						visited[k][m] = true;
						}
					else {
							visited[k][m] = true;
							break;
							}
				for(int k = i, m = j; k < i+sum && m >= j-sum; k++, m--){
					if(B[k][m] < sum) B[k][m] = sum;
				}
				
				}
			
			}
		
		}
	
	}
/*
 * PRINT ANSWER
 */

	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++)
			printf("%d ", B[i][j]);
		printf("\n");
	}
		
	return 0;	
    
}

