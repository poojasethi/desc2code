#include <cstdio>
#include <algorithm>
#define MAX 1002

using namespace std;
char f[MAX][MAX], a;
short ar[MAX*MAX*4], *hor[MAX][MAX], *ver[MAX][MAX], *di1[MAX][MAX], *di2[MAX][MAX];
int i, j, k, n, c=0;

void readString(char str[]) {
    int i = 0;
    str[i] = getchar();
    if (str[i] != '\n')
        i++;
    while ((str[i++] = getchar()) != '\n');
    str[i-1] = '\0';
}

int main() {
    scanf("%d\n", &n);

    for (i=0; i<=n; i++)
        f[0][i]=f[i][0]=f[n+1][i]=f[i][n+1]='.';

    for (i = 1; i <= n; i++)
        readString(&f[i][1]);
/*
    for (i = 1; i <= n; i++) {
        for (j = 1; j <= n; j++)
            putchar(f[i][j]);
        putchar('\n');
    }
*/
    for (i=1; i<=n; i++) {
        for (j=1; j<=n; j++) {
            //f[i][j]=getchar();

            if (f[i][j]=='.') {
                hor[i][j]=ver[i][j]=di1[i][j]=di2[i][j]=NULL;
            } else {
                if (f[i-1][j]=='X') {
                    ver[i][j]=ver[i-1][j];
                    (*ver[i][j])++;
                } else {
                    ver[i][j]=&ar[c++];
                    *ver[i][j]=1;
                }

                if (f[i][j-1]=='X') {
                    hor[i][j]=hor[i][j-1];
                    (*hor[i][j])++;
                } else {
                    hor[i][j]=&ar[c++];
                    *hor[i][j]=1;
                }

                if (f[i-1][j-1]=='X') {
                    di1[i][j]=di1[i-1][j-1];
                    (*di1[i][j])++;
                } else {
                    di1[i][j]=&ar[c++];
                    *di1[i][j]=1;
                }

                if (f[i-1][j+1]=='X') {
                    di2[i][j]=di2[i-1][j+1];
                    (*di2[i][j])++;
                } else {
                    di2[i][j]=&ar[c++];
                    *di2[i][j]=1;
                }
            }
        }
        //scanf("\n");
    }

    for (i=1; i<=n; i++) {
        for (j=1; j<=n; j++)
            printf("%d ", f[i][j]=='.' ? 0 : max(max(*hor[i][j], *ver[i][j]), max(*di1[i][j], *di2[i][j])));
        printf("\n");
    }

    return 0;
}
