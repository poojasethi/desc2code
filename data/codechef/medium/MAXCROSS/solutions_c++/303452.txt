#include<iostream>
#include<algorithm>
using namespace std;
int n,ld[1002][1002],rd[1002][1002],hs[1002][1002],vs[1002][1002],result[1002][1002],temp;
char a[1002][1002];

int main()
{
  int i,j,k,q,max3,max1,max2;
  scanf("%d",&n);
for (i=0; i<n; i++) {
scanf("%s",a[i]);
}
//a[0][0]='.';a[0][1]='.';a[1][0]='.';a[1][1]='.';
  for(i=0;i<n;i++)
  for(j=0;j<n;j++)
  {
    if(a[i][j]=='.')
     result[i][j]=0;
     else
     { 
         k=i;q=j;
         if((temp=ld[i][j])==0)
         {
       while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         temp++;
         k++;q--;
         }
         k=i;q=j;
          while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         ld[k][q]=temp;
         k++;q--;
         }
         }
         k=i;q=j;
         if((temp=rd[i][j])==0)
         {
          while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         temp++;
         k++;q++;
         }
         k=i;q=j;    
               while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         rd[k][q]=temp;
         k++;q++;
         }    
         }    
         k=i;q=j;
          if((temp=hs[i][j])==0)
          {
          while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         temp++;
         q++;
         }
         k=i;q=j;
            while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         hs[k][q]=temp;
         q++;
         }
         }
          k=i;q=j;                
          if((temp=vs[i][j])==0)
          {
            while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         temp++;
         k++;
         }
         k=i;q=j;
            while(a[k][q]!='.'&&(k>=0&&k<n)&&(q>=0&&q<n))
       {
         vs[k][q]=temp;
         k++;
         }
         }
        // printf("%d   %d   %d   %d     \n",rd[i][j],ld[i][j],hs[i][j],vs[i][j]);
         max1=max(rd[i][j],ld[i][j]);
         max2=max(hs[i][j],vs[i][j]);
         max3=max(max1,max2);
         result[i][j]=max3;
         }
         }
         for(i=0;i<n;i++)
         {
         for(j=0;j<n;j++)
         printf("%d ",result[i][j]);
         printf("\n");
         }
       //  while(1);
         return 0;
         }
         