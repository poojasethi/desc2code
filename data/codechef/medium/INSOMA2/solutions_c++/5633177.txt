
import java.awt.Point;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.Scanner;
import java.util.Stack;
import java.util.StringTokenizer;
 
 
 
 
 
class TestClass {
 
static long[] dis ;	
static int[] vis;
static ArrayList<Integer>[] resu;
static int[] som;
static long max;
static long max2;
static int[][] dp;
 
public static void update(int i, int val , int k){
	
	   while(i<k){
		som[i]+=val;
		i+=(i&-i);
		//System.out.println(i+" "+k);
	   }
}
 
 
public static int value(int i){
	int ans =0;
	while(i>0){
		
		ans+=som[i];
		i-=(i&-i);
	}
	
	
	return ans;
	
}
public static boolean search(int i , int j , int k, char[][] graph , char[] match){
	   
	   if(k>=match.length) { max++ ;return true;}
	
	  int[] dx = {1,1,-1,-1};
	  int[] dy = {1,-1,1,-1};
	  
	    for(int l=0;l<4;l++){
	    	
	      int ti = i + dx[l];
	     int  tj = j + dy[l];
	      
	  if(ti>=0 && tj>=0 && ti<graph[0].length && tj<graph[0].length && graph[ti][tj]== match[k])
		            search(ti,tj,k+1,graph,match);
	    }
	  
	  
	  return false;
}

 
public static void main(String args[] ) throws IOException {
 
 
// BufferedReader in = new BufferedReader(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
// Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
// PrintWriter pw = new PrintWriter(new FileWriter("C:\\Users\\Sompathak\\Desktop\\output.txt"));
 
Scanner in = new Scanner(new InputStreamReader(System.in));
//Scanner in = new Scanner(new FileReader("C:\\Users\\Sompathak\\Desktop\\yes.txt"));
int n =in.nextInt();

char[][] graph = new char[n][n];

for(int i=0;i<n;i++)
for(int j=0;j<n;j++)
	graph[i][j] =  in.next().charAt(0);
//System.out.println(graph[0][1]);


String s  =in.next();
char[] match = new char[s.length()];
for(int i=0;i<s.length();i++) match[i] = s.charAt(i);
long ans =0;
max=0;
for(int i=0;i<n;i++)
	for(int j=0;j<n;j++){
				
		if(graph[i][j]== match[0]){
			if(search(i, j, 1, graph,match))
				ans++;
		}
	}
System.out.print(max);

}
}
 
 
 