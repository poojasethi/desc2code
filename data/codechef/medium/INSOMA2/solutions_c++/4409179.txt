#include<stdio.h>
#include<string.h>

int N;
char matrix[1001][1001];
char str[1000001];

int getPaths(char * str, int i, int j){
	if(strlen(str) == 0) return 1;
	char firstChar = str[0];
	int res = 0;

	if(i<N-1 && j< N-1 && matrix[i+1][j+1] == firstChar){
		//putchar('y');
		res += getPaths(str+1,i+1,j+1);
	}
	if(i<N-1 && j>0 && matrix[i+1][j-1] == firstChar){ 
		//putchar('y');
		res += getPaths(str+1,i+1,j-1); 
	}
	if(i>0 && j<N-1 && matrix[i-1][j+1] == firstChar){ 
		//putchar('y');
		res += getPaths(str+1,i-1,j+1);
	}
	if(i>0 && j>0 && matrix[i-1][j-1] == firstChar){ 
		//putchar('y');
		res += getPaths(str+1,i-1,j-1);
	}

	//printf("i:%d j:%d firstChar:%c res:%d\n",i,j, firstChar,res);

	return res;
}

int main(){
	int res,i,j;
	char firstChar;
	int nbytes;
	char x;

	res = 0;
	scanf("%d",&N);
	getchar();
	nbytes=N;

	for(i=0;i<N;i++){
		for(j=0;j<N;j++){
			x='*';
			while( !((x>='A'&&x<='Z')||(x>='a'&&x<='z')) )
				x=getchar();
			matrix[i][j]=x;
		}
	}
	scanf("%s",str);

	firstChar = str[0];

	for(i=0;i<N;i++){
		for(j=0;j<N;j++){
			if(matrix[i][j] == firstChar)	res += getPaths(str+1,i,j);
		}
	}
	printf("%d\n",res);

	return 0;
}
