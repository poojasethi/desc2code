# include <bits/stdc++.h>

# define INF 0x7f7f7f
# define EPS 1e-9
# define MOD 1000000007

# define LL long long int
# define ULL unsigned LL 
# define PL pair <LL,LL>
# define VPL vector < PL >
# define VL vector <LL>
# define VVL vector < VL >
# define pb push_back
# define mp make_pair 
# define tr(c,it) for(typeof(c.begin()) it = c.begin(); it != c.end(); it++) 
# define ff first
# define ss second 
# define pc putchar_unlocked

# define F(i,a,b) for (i=a; i<b; i++)
# define REP(i,n) F(i,0,n)


#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) ok cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;


using namespace std;

int debug=1;
const int LIM=10005;


/* MAIN PROGRAM STARTS HERE */

char A[LIM][LIM];
map < pair <PL,LL> ,LL> M;
string s;

LL ways(LL x,LL y,LL p,LL n,LL n2)
	{
	if (x<0 || y<0 || x>n-1 || y>n-1) return 0;
	if (M.find(mp(mp(x,y),p))!=M.end()) return M[mp(mp(x,y),p)];
	
	if (A[x][y]!=s[p]) return M[mp(mp(x,y),p)]=0;
	
	if (p==n2-1) return M[mp(mp(x,y),p)]=1; 
	
	
	LL res=0;
	
	res+=ways(x+1,y+1,p+1,n,n2);
	res+=ways(x-1,y+1,p+1,n,n2);
	res+=ways(x-1,y-1,p+1,n,n2);
	res+=ways(x+1,y-1,p+1,n,n2);
	
	//trace6(x,y,p,A[x][y],s[p],res);
	
	return M[mp(mp(x,y),p)]=res;
	}
	


int main()
	{
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	LL T,n,i,j,k,l,m,x,y,z;
	
	cin>>n;
	REP (i,n) REP(j,n) cin>>A[i][j];
	cin>>s;
	LL n2=s.length();
	
	LL ans=0;
	REP(i,n)
		{
		REP(j,n)
			{
			if (A[i][j]==s[0])
				{
				ans+=ways(i,j,0,n,n2);	
				//trace3(i,j,ans);
				}
			}
		}
	
	cout<<ans<<endl;
	
	return 0;
	}