			/*
			      *** PATIENCE ABOVE PERFECTION ***
			        "When in doubt, use brute force. :D"

			        -Founder of alloj.wordpress.com
			*/
			#include<bits/stdc++.h>
			using namespace std;
			#define pb push_back
			#define mp make_pair
			#define nline cout<<"\n"
			#define fast ios_base::sync_with_stdio(false),cin.tie(0)
			#define ain(A, B, C) assert(IN(A, B, C))
			#define ull unsigned long long int
			#define ll long long int
			#define pii pair<int,int>
			#define MAXX 10009
			#define fr(a,b,i) for(int i=a;i<b;i++)
			vector<int>G[MAXX];
			char ch[MAXX][MAXX];
			int n;
			string finish;
			int backtrack(int x,int y,int i)
			{
				int num=0;
				if(x>n-1 or y>n-1 or x<0 or y<0 or finish[i]!=ch[x][y])return 0;
				if(i==finish.size()-1)return 1;
				if(ch[x][y]==finish[i])
				  num+=backtrack(x-1,y-1,i+1);
				if(ch[x][y]==finish[i])
				  num+=backtrack(x+1,y+1,i+1);
				if(ch[x][y]==finish[i])
				  num+=backtrack(x-1,y+1,i+1);
				if(ch[x][y]==finish[i])
				  num+=backtrack(x+1,y-1,i+1);
				return num;
			}
			int main()
			{
				fast;
				cin>>n;
				for(int i=0;i<n;i++)for(int j=0;j<n;j++)cin>>ch[i][j];
				cin>>finish;  
			   int ans=0;
			   for(int i=0;i<n;i++)for(int j=0;j<n;j++)if(ch[i][j]==finish[0])ans+=(backtrack(i,j,0));
				cout<<ans<<endl;
			   return 0;
			}
