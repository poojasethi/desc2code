#include <cstdlib>
#include <cstdio>
#include <stack>
#include <cstring>
 
struct Item
{
    Item(int i, int _x, int _y) 
        : index(i), x(_x), y(_y) {}
    int index;
    int x;
    int y;
};
 
const int N=1000;
 
char board[N+1][N+1];
char target[N*N+2];
 
int main()
{
 
    std::stack<Item> stack;
    
    int n, i, j, k, _x, _y, _index, cnt, len;
    
    fgets(target, N*N+2, stdin);
    n = atoi(target);
    for(i=0; i < n; i++)
    {
        fgets(target, N*N+2, stdin);
        for(j=0; j < n; j++)
        {
            board[i][j] = target[2*j];
        }
    }
 
    scanf("%s", target);
 
    if ( (len = strlen(target)) == 0)
    {
        printf("0\n");
        return 0;
    }
 
    cnt = 0;
    for(i = 0; i < n; i++)
        for(j = 0; j < n; j++)
            if (board[i][j] == target[0])
            {
                if(len == 1)
                    cnt += 1;
                else
                {
                    stack.push(Item(1, i, j));
                    while (!stack.empty())
                    {
                        Item next = stack.top();
                        stack.pop();
 
                        _index = next.index;
                        _x = next.x;
                        _y = next.y;    
                       
                        if(_x-1>= 0 && _y-1>=0 &&
                           board[_x-1][_y-1] == target[_index])
                        {
                            if (_index == len - 1)
                                cnt += 1;
                            else
                                stack.push(Item(_index+1, _x-1, _y-1));
                        }
 
                        if(_x-1>=0 && _y+1<n &&
                           board[_x-1][_y+1] == target[_index])
                        {
                            if (_index == len - 1)
                                cnt += 1;
                            else
                                stack.push(Item(_index+1, _x-1, _y+1));
                        }
 
                        if(_x+1<n && _y-1>=0 &&
                           board[_x+1][_y-1] == target[_index])
                        {
                            if (_index == len - 1)
                                cnt += 1;
                            else
                                stack.push(Item(_index+1, _x+1, _y-1));
                        }
 
                        if(_x+1<n && _y+1<n &&
                           board[_x+1][_y+1] == target[_index])
                        {
                            if (_index == len - 1)
                                cnt += 1;
                            else
                                stack.push(Item(_index+1, _x+1, _y+1));
                        }
                    }
                }
            }
    printf("%d\n", cnt);
    return 0;
}