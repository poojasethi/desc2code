#include <iostream>
#include <string>
#include <algorithm>
#include <cstdio>
#include <map>
#include <vector>
#include <iomanip>
#include <cstring>
#include <bitset>
#include <set>
#include <cstdlib>
#include <sstream>
#include <fstream>
#include <list>
#include <queue>
#include <cassert>
#include <deque>
#include <stack>
#include <ctime>
#include <cmath>

using namespace std;

#define FOR(i, a, b) for(int i = a; i < b; i++)
#define FORN(i, a, b) for (int i = a; i >= b; i--)
#define REP(i, a) FOR(i, 0, a)
#define REPN(i, a) FORN(i, a, 0)
#define FOREACH(it, c) for (typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define CLEAR(b) memset((b), 0, sizeof(b))
#define SET(a, b) memset((a), (b), sizeof(a))
#define setmax(a, b) if (a < b) {a = b;}
#define setmin(a, b) if (a > b) {a = b;}
#define ub(V, x) upper_bound((V).begin(), (V).end(), x)
#define lb(V, x) lower_bound((V).begin(), (V).end(), x)
#define pb push_back
#define mp make_pair

const int INF = 0x3f3f3f3f;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int u32;
#define DEBUG 0

inline void process(int& ans, int flag, int d) {
    REP(i, d)
        ans = (ans * 2) + flag;
}

int main() {
#if DEBUG
    freopen("ques.txt", "r", stdin);
    freopen("ans.txt", "w", stdout);
#endif
    char inp[100];
    int d = 0, flag = 0, ans = 0;
    while (1) {
        gets(inp);
        int n = strlen(inp);
        REP(i, n) {
            if (inp[i] == '~') {
                return 0;
            }
            else if (inp[i] == '#') {
                process(ans, flag, d);
                printf("%d\n", ans);
                d = flag = ans = 0;
            }
            else if (inp[i] == '0')
                d++;
            else if (inp[i] == ' ') {
                if (d == 1) flag = 1;
                else if (d == 2) flag = 0;
                else if (d > 2) process(ans, flag, d - 2);
                d = 0;
            }
        }
        if (d == 1) flag = 1;
        else if (d == 2) flag = 0;
        else if (d > 2) process(ans, flag, d - 2);
        d = 0;
    }
    return 0;
}
