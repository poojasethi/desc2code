#include <cstdio>
#include <iostream>
#include <fstream>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <string>
#include <memory.h>
#include <sstream>
#include <complex>
#include <cassert>
#include <functional>

#define REP(i,n) for(int i = 0, _n = (n); i < _n; i++)
#define REPD(i,n) for(int i = (n) - 1; i >= 0; i--)
#define FOR(i,a,b) for (int i = (a), _b = (b); i <= _b; i++)
#define FORD(i,a,b) for (int i = (a), _b = (b); i >= _b; i--)
#define FORN(i,a,b) for(int i=a;i<b;i++)
#define FOREACH(it,c) for (__typeof((c).begin()) it=(c).begin();it!=(c).end();it++)
#define RESET(c,x) memset (c, x, sizeof (c))

#define PI acos(-1)
#define sqr(x) ((x) * (x))
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define Aint(c) (c).begin(), (c).end()
#define SIZE(c) (c).size()

#define DEBUG(x) { cerr << #x << " = " << x << endl; }
#define PR(a,n) {cerr<<#a<<" = "; FOR(_,1,n) cerr << a[_] << ' '; cerr <<endl;}
#define PR0(a,n) {cerr<<#a<<" = ";REP(_,n) cerr << a[_] << ' '; cerr << endl;}
#define LL long long

using namespace std;

int main()
{
    LL N,M,H;
    cin>>N>>M>>H;
    LL cost=0;
    LL sum=0;
    LL t;
    LL c;
    vector<pair<LL,LL> > m;
    for(LL i=0;i<H;++i)
    {
        cin>>t>>c;
        pair<LL,LL> p=make_pair(c,t);
        m.push_back(p);
        sum=sum+t;
    }
    if(sum<N*M)
        cout<<"Impossible"<<endl;
    else
    {
        std::sort(m.begin(), m.end());
        sum=0;
        cost=0;
        for(LL it=0;it<H;++it)
        {
            //cout<<m[it].first;//.first<<"\t"<<m[it].second;
            sum=sum+m[it].second;
            if(sum<N*M)
                cost+=(m[it].first*m[it].second);
            else
                {
                    cost+=(N*M-(sum-m[it].second))*(m[it].first);
                    cout<<cost<<endl;
                    return 0;
                }
        }
    }
    return 0;
}

