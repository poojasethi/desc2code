#include<bits/stdc++.h>
#include<iostream>
#include<cstdio>
#include<stack>
#include<queue>
#include<algorithm>
#define all(c) c.begin(),c.end()
#define tr(c,it) for(typeof(c.begin()) it=c.begin();it!=c.end();it++)
#define sz(c) c.size()
#define pb push_back
#define mp make_pair
#define inf 1000001
//#define gc() getchar_unlocked()
//#define pc(x) putchar_unlocked(x)
#define ll long long int
using namespace std;


typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef map<int,int> mii;



/*static inline int fastio()
{
    int x=0;
    char c=gc();
    while(c<'0'||c>'9')
    {
        c=gc();
    }
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=gc();
    }
    return x;
}


static inline void fastWrite(int x)
{
  char s[11];
  int i=0;
  do
  {
      s[i++]=x%10+'0';
      x/=10;
  }while(x);
  --i;
  while(i>=0)
  {
      pc(s[i--]);
  }
  pc('\n');

}
*/


bool comp(pair<ll,ll> p1,pair<ll,ll> p2)
{
 if(p1.second!=p2.second)
 {
     return(p1.second<p2.second);
 }
 return 0;
}









pair<ll,ll> p[100001];
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    ll N;
    ll M;
    int H;
    ll cost;
    ll lim;
    cin>>N>>M>>H;
    int i;
    ll totcells=N*M,maxallow=0LL;
    for(i=0;i<H;i++)
    {
        cin>>lim>>cost;
        maxallow+=lim;
        p[i]=make_pair(lim,cost);
    }
    if(maxallow<totcells)
    {
        cout<<"Impossible";
        return 0;
    }
    sort(p,p+H,comp);
    ll maxcost=0LL;
    ll remCells=totcells;
   /* for(i=0;i<H;i++)
    {
        printf("pair[%d].first = %d,pair[%d].second = %d\n",i,p[i].first,p[i].second);
    } */


    for(i=0;i<H;i++)
    {
        if(remCells-p[i].first>=0)
        {
            maxcost+=(p[i].first*p[i].second);
            remCells-=p[i].first;
        }
        else if(remCells-p[i].first<0)
        {
            maxcost+=(remCells*p[i].second);
            break;
        }


        }

         cout<<maxcost;
         return 0;
    }
