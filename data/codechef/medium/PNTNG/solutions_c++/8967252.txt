/* Author : Anurag El Dorado */

/* Libraries */
#include <bits/stdc++.h>
#include <time.h>
#include <math.h>
using namespace std;

//MACRO DEFINITIONS
/* Data Types */
#define lld long long int
#define llu unsigned long long int

/* Input */
#define sd(var) scanf("%d", &var)
#define slld(var) scanf("%lld", &var)
#define sllu(var) scanf("%llu", &var)

/* Output */
#define print_arr(a, n) cout << #a << " : "; for (int I = 0; I < n; I++) { cout << a[I] << " "; } cout << endl;	//Array till n elements
#define print_v(v) 	cout << #v << " : "; for (long long int I = 0; I != v.size(); I++) { cout << v[I] << " "; } cout << endl;	//Vector
#define p2d(a, r, c) cout << #a << endl; for (int I = 0; I < r; I++) {	for (int J = 0; J < c; J++) {	cout << a[I][J] << " ";	} cout << endl;	} cout << endl;

/* File Input */
#define FILE_INPUT freopen("input.txt", "r", stdin);

/* File Output */
#define FILE_OUTPUT freopen("output.txt", "w", stdout);

//Single Variables
#define pr(x) cout << x << endl;
#define pdln(x) printf("%d\n", x);	//printf with new line
#define pd(x) printf("%d ", x);	//printf without new line

/* Output and Debugging */
#define deb(x) cout << #x << " = " << x << endl;
#define debb(x, y) cout << #x << " = " << x << "\t" << #y << " = " << y << endl;
#define debbb(x, y, z) cout << #x << " = " << x << "\t" << #y << " = " << y << "\t" << #z << " = " << z << endl;

/* MOD  value*/
#define MOD 1000000007

/* Timing */
#define TIMEIT cout << "TIME VARIABLE REINITIALISED\n"; clock_t start_time_ = clock();
#define TIMEUP cout << "Time: " << (clock() - start_time_) / (double)(CLOCKS_PER_SEC) << "s" << endl;

int main() {

	lld i, j, k, h;
	lld count, sum;
	lld n, m, p, t;
	vector<lld> v;
	lld maxi, mini;
	lld tc;
	string s, r;
	lld lens, lenr, num, cost;

	// FILE_INPUT;
	
	// cin >> tc;
	
	// while (tc--) {
		cin >> n >> m >> h;
		count = n * m;

		pair<lld, lld> parr[h];
		for (i = 0; i < h; i++) {
			// cin >> most[i] >> cost[i];
			cin >> num >> cost;
			parr[i] = make_pair(cost, num);
		}

		sort(parr, parr + h);

		sum = 0;
		for (i = 0; i < h; i++) {
			cost = parr[i].first;
			num = parr[i].second;

			if (count >= num) {
				sum += cost * num;
				count -= num;
			} else {
				sum += count * cost;
				count = 0;
				// debbb(cost, num, sum);
				break;
			}
			// debbb(cost, num, sum);	deb(count);
		}

		if (count > 0) {
			cout << "Impossible\n";
		} else {
			cout << sum << endl;
		}


	// }

	return 0;
}
