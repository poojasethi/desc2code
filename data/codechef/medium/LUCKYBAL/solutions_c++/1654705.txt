#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <stdarg.h>
#include <cassert>
#include <fstream>

using namespace std;

//make macros available for redefinition.
#undef LOCAL
#undef DEBUG
#undef CONSOLE
#undef INFILE
#undef OUTFILE

#define LOCAL

#ifdef LOCAL
#define INFILE
//#define DEBUG
#define CONSOLE
//#define OUTFILE
#endif

#ifdef ONLINE_JUDGE //enough for codechef and codeforces
#undef LOCAL
#undef INFILE
#undef OUTFILE
#undef CONSOLE
#undef DEBUG
#endif
//otherwise uncomment following lines
/*
#undef LOCAL
#undef INFILE
#undef OUTFILE
#undef CONSOLE
#undef DEBUG
*/


#ifdef LOCAL
#define getcha getchar
#endif
#ifndef LOCAL
#ifdef _MSC_VER
#define getcha getchar
#else
#define getcha getchar_unlocked
#endif
#endif

#define ll long long

#define PR(id) printf("The value of " #id " is %d\n", id)
#define glue(a,b) a ## b

#ifdef CONSOLE
#include<conio.h>
#endif

int scan() {
	int t = 0;
	char c = getcha();
	while(c<'0' || c>'9') c = getcha();
	while(c>='0' && c<='9') {
		t = 10 * t + c - 48;
		c = getcha();
	}
	return t;
}

ll scanl() {
	ll t=0;
	char c = getcha();
	while(c<'0' || c>'9') c = getcha();
	while(c>='0' && c<='9') {
		t = 10 * t + c - 48;
		c = getcha();
	}
	return t;
}

/* ADD PROGRAM LOGIC HERE */

void go() {
	int t;
	scanf("%d",&t);
	string s;
	getline(cin,s);
	while(t--) {
		getline(cin,s);
		ll n = s.length();
		ll ans = (n*(n+1))/2;
		for(int i=0; i<n; i++) {
			if(s[i]=='7') {
				ll cur = i;
				while(i<n && s[i]=='7') {
					i++;
				}
				ans-=((i-cur)*(i-cur+1))/2;
			}
		}
		printf("%lld\n",ans);
	}
}



/*  */

int main() {

#ifdef INFILE
	freopen("in.txt","r",stdin);
#endif
#ifdef OUTFILE
	freopen("out.txt","w",stdout);
#endif

	//call function here.
	go();


#ifdef DEBUG
	printf("\nEND\n");
#endif
#ifdef CONSOLE
	_getch();
#endif

	return 0;
}