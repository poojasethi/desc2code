//Md. Ahsan Kabir Shohagh
#include<bits/stdc++.h>
using namespace std;
#define sz 100000
#define pb(a) push_back(a)
#define ll long long
#define ull unsigned long long
#define fread freopen("input.txt","r",stdin)
#define fwrite freopen("output.txt","w",stdout)
#define inf (1<<29)
#define mem(abc,z) memset(abc,z,sizeof(abc))
#define PI acos(-1)
ll tax[105],mod;
struct matrix
{
    ll x[105][105];
};

ll m;
matrix multiply(matrix a,matrix b,int n)
{
    matrix ret;
    ll tmp;
    int i,j,k;
    for(i=1; i<=n; i++)
    {
        for(j=1; j<=n; j++)
        {
            tmp=0LL;
            for(k=1; k<=n; k++)
            {
                tmp+=(1LL*a.x[i][k]*b.x[k][j]);

            }
            if(tmp>=mod-1LL) tmp%=(mod-1LL);
            //for fermet's theoram
            ret.x[i][j]=tmp;
        }
    }
    return ret;
}
matrix bigmod(matrix a,ll k,int n)
{
    matrix xx=a,power=a;
    while(k>0)
    {
        if(k&1) xx=multiply(xx,power,n);
        power=multiply(power,power,n);
        k>>=1;
    }
    return xx;
}
ll pbigmod(ll b,ll p,ll mod){
   ll ret=1LL;
   while(p>0){
      if(p&1) {
         ret=(ret*b)%mod;
      }
      p>>=1;
      b=(b*b)%mod;
   }
   return ret;
}
int main(){
   int t,initTax,slot1,slot2,k,n;
   ll ans;
   mod=100000007LL;
   scanf("%d",&t);
   while(t--){
      scanf("%d %d %d %d %d",&initTax,&slot1,&slot2,&k,&n);
      tax[1]=initTax;
      for(int i=2;i<=slot1+1;i++){
         tax[i]=tax[i-1]+1LL;
      }
      for(int i=slot1+2;i<=slot1+slot2+1;i++){
         tax[i]=(tax[i-1]*2LL)%mod;
      }
      if(n<=slot1+slot2+1){
        printf("%lld\n",tax[n]);
      }
      else {
        matrix a;
        for(int i=1;i<=k;i++){
            for(int j=1;j<=k;j++){
                a.x[i][j]=0;
            }
        }
        for(int i=1;i<=k;i++){
            a.x[1][i]=1;
            a.x[i+1][i]=1;
        }
        a = bigmod(a,n-(slot1+slot2+1)-1,k);
        ans=1LL;
        for(int i=1,j=slot1+slot2+1;i<=k;i++,j--){
            ans=(ans*pbigmod(tax[j],a.x[1][i],mod))%mod;
        }
        printf("%lld\n",ans);
      }
   }
   return 0;
}
/*
1
50 50 50 101 1000000000
31220332
*/
