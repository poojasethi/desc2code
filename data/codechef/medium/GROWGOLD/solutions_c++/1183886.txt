#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<ctype.h>
#include<climits>
#include<set>
#include<string>

using namespace std;

#define FF 111
#define MOD 100000007
#define FOR(i, a, b) for(i=(a);i<=(b);i++)
#define FORR(i, a, b) for(i=(a);i>=(b);i--)
#define S(n) scanf("%d", &n)
#define P(k) printf("%d\n", k)
#define pb push_back
#define mp make_pair
#define ll long long

int pow(int a, int b){
    if(b == 0) return 1;
    if(b == 1) return a % MOD;
    int c, d;
    c = d = a % MOD;
    b--;
    while(b){
        if(b&1){ c = (ll) c*d % MOD; b--; }
        else { d = (ll) d*d % MOD; b >>= 1; }
    }
    return c;
}

int main(){
    int i, j, n, t, slot1, slot2, k, init, l;
    int a[FF][FF], b[FF][FF], c[FF][FF], te[FF][FF];
    S(t);
    int aa[FF];
    while(t--){
        S(init); S(slot1); S(slot2); S(k); S(n);
        aa[1] = init % MOD;
        FOR(i, 2, slot1+1) aa[i] = (aa[i-1]+1) % MOD;
        FOR(i, slot1+2, slot1 + slot2+1) aa[i] = (2*aa[i-1]) % MOD;
        if(n <= slot1 + slot2 + 1) { P(aa[n]); continue; }
        n -= slot1 + slot2 + 1;
        FOR(i, 0, k-1) FOR(j, 0, k-1) a[i][j] = 0;
        FOR(i, 0, k-2) a[i][i+1] = 1;
        FOR(j, 0, k-1) a[k-1][j] = 1;
        FOR(i, 0, k-1) FOR(j, 0, k-1) b[i][j] = c[i][j] = a[i][j];
        n += (k-2);
        while(n){
            if(n&1){
                FOR(i, 0, k-1) FOR(j, 0, k-1){
                    ll sum = 0;
                    FOR(l, 0, k-1) sum += (ll) c[i][l]*b[l][j];
                    te[i][j] = sum % (MOD-1);
                }
                FOR(i, 0, k-1) FOR(j, 0, k-1) b[i][j] = te[i][j];
                n--;
            }
            else{
                FOR(i, 0, k-1) FOR(j, 0, k-1){
                    ll sum = 0;
                    FOR(l, 0, k-1) sum += (ll) c[i][l]*c[l][j];
                    te[i][j] = sum % (MOD-1);
                }
                FOR(i, 0, k-1) FOR(j, 0, k-1) c[i][j] = te[i][j];
                n >>= 1;
            }
        }
        int ans = 1;
        FOR(j, 0, k-1) ans = (ll) ans * pow(aa[slot1 + slot2 + 1 - k + j +1], b[0][j]) % MOD;
        P(ans);
    }
    system("pause");
    return 0;
}
