#include<iostream>
#include<cstring>
#define MOD1 100000007
#define MOD2 100000006
using namespace std;
long long tpow[110][110],tmul[110][110];
long long A[110][110], R[110][110];
void mat_mul(long long res[110][110],long long a[110][110],long long b[110][110],int K)
{
	int i,j,k;
	long long x;
	
	for(i=1;i<=K;i++)
	{
		for(j=1;j<=K;j++)
		{
			x=0;
			
			for(k=1;k<=K;k++)
			{
				x=x+(a[i][k]*b[k][j]);
			}
			if(x>=MOD2)
			x=x%MOD2;
			tmul[i][j]=x;
		}
	}
	for(i=1;i<=K;i++)
	{
		for(j=1;j<=K;j++)
		{
			res[i][j]=tmul[i][j];
		}
	}
	return ;
}
void matrix_power(long long R[110][110],long long A[110][110],int P,int K)
{
	int i,j;
	for(i=1;i<=K;i++)
	{
		for(j=1;j<=K;j++)
		{
			R[i][j]=(i==j);
			tpow[i][j]=A[i][j];
		}
	}
	while(P)
	{
		if(P&1)
		mat_mul(R,R,tpow,K);
		if(P>>=1)mat_mul(tpow,tpow,tpow,K);
	}
}
long long pow_mod(long long a,long long p)
{
	//cout<<"a="<<a<<" p="<<p<<endl;
	long long res=1;
	
	a=a%MOD1;
	
	while(p>0)
	{
		if(p&1)
		{
			res=(res*a)%MOD1;
		
		}
			p>>=1;
			a=(a*a)%MOD1;
			
		
	}
	return res;
}
int main()
{
	int T;
	long long tax[110];
	int slot1,slot2,K,N;
	int i,j;
	scanf("%d",&T);
	
	while(T--)
	{
		scanf("%lld %d %d %d %d",&tax[0],&slot1,&slot2,&K,&N);
		N--;
		
		for(i=1;i<=slot1;i++)
		{
			tax[i]=tax[i-1]+1;
		}
		
		for(i=slot1+1;i<=slot1+slot2;i++)
		{
			tax[i]=(2*tax[i-1])%MOD1;
		}
		
		if(N<=slot1+slot2)
		{
			printf("%lld\n",tax[N]);
		}
		else
		{
			
			memset(A,0,sizeof(A));
			
			for(i=1;i<=K;i++)
			{
				A[1][i]=1;
				A[i+1][i]=1;
			}
			
			matrix_power(R,A,N-slot1-slot2,K);
			long long ans=1;
			for(i=1;i<=K;i++)
			{
				ans=(ans*pow_mod(tax[slot1+slot2-i+1],R[1][i]))%MOD1;
			}
			
			printf("%lld\n",ans);
		}
	}
	return 0;
}