#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <stdlib.h>
#include <memory.h>
#include <set>
#include <map>
#include <vector>
#include <ctime>
#include <cmath>
 
using namespace std;
 
const int md = 100000007;
 
int aa[111];
int a[111][111],b[111][111],c[111][111];
int tt,init,s1,s2,k,n,i,j,q,ans,step;
 
int pw(int a,int b) {
  int step = 1 << 30, x = 1;
  while (step > 0) {
    x = (long long)x*x % md;
    if (step & b) x = (long long)x*a % md;
    step >>= 1;
  }
  return x;
}
 
int main() {
  scanf("%d",&tt);
  while (tt--) {
    scanf("%d %d %d %d %d",&init,&s1,&s2,&k,&n);
    aa[1] = init % md;
    for (i=2;i<=s1+1;i++) aa[i] = (aa[i-1]+1) % md;
    for (i=s1+2;i<=s1+s2+1;i++) aa[i] = (aa[i-1]*2) % md;
    if (n <= s1+s2+1) printf("%d\n",aa[n]); else {
      n -= s1+s2+1;
      for (i=0;i<k;i++)
        for (j=0;j<k;j++) a[i][j] = 0;
      for (i=1;i<k;i++) a[i][i-1] = 1;
      for (i=0;i<k;i++) a[i][k-1] = 1;
      for (i=0;i<k;i++)
        for (j=0;j<k;j++) b[i][j] = (i == j);
      step = 1 << 30;
      while (step > n) step >>= 1;
      while (step > 0) {
        for (i=0;i<k;i++)
          for (j=0;j<k;j++) {
            long long sum = 0;
            for (q=0;q<k;q++) sum += (long long)b[i][q]*b[q][j];
            c[i][j] = sum % (md-1);
          }
        for (i=0;i<k;i++)
          for (j=0;j<k;j++) b[i][j] = c[i][j];
        if (step & n) {
          for (i=0;i<k;i++)
            for (j=0;j<k;j++) {
              long long sum = 0;
              for (q=0;q<k;q++) sum += (long long)b[i][q]*a[q][j];
              c[i][j] = sum % (md-1);
            }
          for (i=0;i<k;i++)
            for (j=0;j<k;j++) b[i][j] = c[i][j];
        }
        step >>= 1;
      }
      ans = 1;
      for (i=0;i<k;i++) ans = (long long)ans*pw(aa[s1+s2+1-k+i+1],b[i][k-1]) % md;
      printf("%d\n",ans);
    }
  }
  return 0;
}
