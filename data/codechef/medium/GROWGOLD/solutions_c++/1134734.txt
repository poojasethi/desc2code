/*
 * Bidhan Roy
 * University of Dhaka
 */

using namespace std;

#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <list>
#include <ctime>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <vector>

#define rep(i,n) for(__typeof(n) i=0; i<(n); i++)
#define foreach(i,n) for(__typeof((n).begin())i =(n).begin();i!=(n).end();i++)
#define inf (1<<30)
#define eps 1e-9
#define pb push_back
#define ins insert
#define mp make_pair
#define sz(x) ((int)x.size())
#define clr clear()
#define all(x) x.begin(),x.end()
#define xx first
#define yy second
#define sqr(x) ((x)*(x))
#define mem(x,val) memset((x),(val),sizeof(x));
#define read(x) freopen(x,"r",stdin);
#define rite(x) freopen(x,"w",stdout);
#define chk(a,k) ((bool)(a&(1<<(k))))
#define off(a,k) (a&(~(1<<(k))))
#define on(a,k) (a|(1<<(k)))

typedef long long i64;
typedef unsigned long long ui64;
typedef string st;
typedef vector<int> vi;
typedef vector<st> vs;
typedef map<int,int> mii;
typedef map<st,int> msi;
typedef map<int,st> mis;
typedef set<int> si;
typedef set<st> ss;
typedef pair<int,int> pii;
typedef vector<pii> vpii;

namespace matrix{
    #define size 105
    #define wint int
    wint mat[size][size],tmp[size][size],res[size][size];
    wint MOD;
    int n;
    void init(int _n,wint _MOD){
        n=_n;
        MOD=_MOD;
        mem(mat,0);
        mem(tmp,0);
        mem(res,0);
    }
    void mul(wint r[][size],wint a[][size],wint b[][size]) {
        rep(i,n) rep(j,n) {
            i64 val=0;
            rep(t,n) val+=1LL*a[i][t]*b[t][j];
            tmp[i][j]=val%MOD;
        }
        rep(i,n) rep(j,n) r[i][j]=tmp[i][j];
    }
    void mPow(wint r[][size],wint a[][size],wint p) {
        if (p<0) return;
        mem(r,0);
        rep(i,n) r[i][i]=1;
        while(p>0) {
            if(p&1) mul(r,r,a);
            mul(a,a,a); p>>=1;
        }
    }
    void pow(wint p){
        mPow(res,mat,p);
        rep(i,n) rep(j,n) mat[i][j]=res[i][j];
    }
    void fill(){
	    rep(i,n-1) {
	        mat[0][i]=1;
	        if(i) mat[i][i-1]=1;
	    }
    }
    void print(wint pp[][size]){
        rep(i,1){
            rep(j,n) printf(" %09d",pp[i][j]);
            cout<<endl;
        }
    }
    #undef MOD
    #undef size
    #undef wint
};
#define mx 105
#define mod 100000007
i64 powmod( long long b, int p, int m=mod ){
    long long r=1;
    for(int i=(1<<30); i;i>>=1){
        r*=r; if(r>m) r%=m;
        if(p&i) {r*=b; if(r>m) r%=m;}
    }
    return r;
}
i64 x[mx];
int my[mx][mx];
int main(){
    //read("in.txt");
    int test;
    scanf("%d",&test);
    while(test--){
        int in,s1,s2,k,n;
        scanf("%d%d%d%d%d",&in,&s1,&s2,&k,&n);
        int tot=1;
        x[1]=in;
        tot++;
        rep(i,s1){
            x[tot]=(x[tot-1]+1);
            if(x[tot]>mod) x[tot]%=mod;
            tot++;
        }
        rep(i,s2){
            x[tot]=(x[tot-1]*2);
            if(x[tot]>mod) x[tot]%=mod;
            tot++;
        }
        if(n<tot) { printf("%d\n",x[n]); continue; }
        matrix::init(k+1,mod-1);
        matrix::fill();
        matrix::pow(n-tot+1);
        mem(my,0);
        for(int i=k-1,j=0; i>=0; j++,i--) my[j][i]=1;
        matrix::mul(my,matrix::mat,my);
        i64 ans=1;
        for(int i=1,j=tot-1; i<=k; i++,j--){
            ans*=powmod(x[j],my[0][k-i]);
            if(ans>mod) ans%=mod;
        }
        printf("%d\n",ans);
    }
    return 0;
}
