#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<ctype.h>
#include<climits>
#include<set>
#include<string>
 
using namespace std;
 
#define FF 111
#define MOD 100000007
#define FOR(i, a, b) for(i=(a);i<=(b);i++)
#define FORR(i, a, b) for(i=(a);i>=(b);i--)
#define S(n) scanf("%d", &n)
#define P(k) printf("%d\n", k)
#define pb push_back
#define mp make_pair
#define ll long long
 
int pow(int a, int b){
//    if(b == 0) return 1;
//    if(b == 1) return a % MOD;
//    if(b & 1) return (ll) pow(a, b-1)*a % MOD;
//    return (ll) pow(a, b>>1)*pow(a, b>>1) % MOD;
    if(b == 0) return 1;
    if(b == 1) return a % MOD;
    int c, d;
    c = d = a % MOD;
    b--;
    while(b){
        if(b&1){ c = (ll) c*d % MOD; b--; }
        else { d = (ll) d*d % MOD; b >>= 1; }
    }
    return c;
}
 
struct matrix{
    int a[111][111];
};
 
int k, aa[111];
 
matrix mul(matrix a, matrix b){
    matrix t;
    int i, j, l;
    FOR(i, 0, k-1) FOR(j, 0, k-1){
        ll sum = 0;
        FOR(l, 0, k-1) sum += (ll) a.a[i][l]*b.a[l][j];
        t.a[i][j] = sum % (MOD-1);
    }
    return t;
}
 
matrix a, b, c;
 
int main(){
    int j, n, t, s1, s2, init, l, i;
    S(t);
    while(t--){
        S(init); S(s1); S(s2); S(k); S(n);
        aa[1] = init % MOD;
        FOR(i, 2, s1+1) aa[i] = ( aa[i-1] + 1 ) % MOD;
        FOR(i, s1+2, s1+s2+1 ) aa[i] = ( 2 * aa[i-1] ) % MOD;
        if(n <= s1 + s2 + 1){ P(aa[n]); continue; }
        n -= s1 + s2 + 1;
        FOR(i, 0, k-1) FOR(j, 0, k-1) a.a[i][j] = 0;
        FOR(i, 0, k-2) a.a[i][i+1] = 1;
        FOR(j, 0, k-1) a.a[k-1][j] = 1;
        FOR(i, 0, k-1) FOR(j, 0, k-1) b.a[i][j] = c.a[i][j] = a.a[i][j];
        n += (k-2);
        while(n){
            if(n&1){ b = mul(c, b); n--; }
            else { c = mul(c, c); n >>= 1; }
        }
        int ans = 1;
        FOR(j, 0, k-1) ans = (ll) ans * pow(aa[s1 + s2 + 1 - k + j + 1], b.a[0][j]) % MOD;
        P(ans);
    }
    system("pause");
    return 0;
}