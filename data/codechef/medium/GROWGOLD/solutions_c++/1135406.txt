#include <bits/stdc++.h>
#define rep(x,n) for(int x = 0; x < n; ++x)
#define print(x) cout << x << endl
#define dbg(x) cerr << #x << " == " << x << endl
#define _ << " , " <<
#define mp make_pair
#define x first
#define y second
using namespace std;

template<class T> void pv(T a, T b) { for (T i = a; i != b; ++i) cout << *i << " "; cout << endl; }

typedef long long ll;
typedef pair<int,int> pii;

const int mod = 1e8 + 7, mod2 = mod - 1;
ll tax[1<<10];

struct M {
  int a[120][120],d;
  M() {
    memset(a,0,sizeof a);
  }
  M operator*(M m) const {
    M ret;
    ret.d = m.d;
    rep(i,d) rep(j,d) {
      ll x = 0;
      rep(k,d) x += (ll)(a[i][k]) * m.a[k][j];
      ret.a[i][j] = x % mod2;
    }
    return ret;
  }
};

M fpow(M m, ll e) {
 	M x; x.d = m.d;
	rep(i,x.d) x.a[i][i] = 1;
	while(e){
		if(e&1) x = x*m;
		if(e>>=1) m=m*m; else break;
	}
	return x;
}

ll fpow(ll m, ll e) {
	if(e == 0) return 1;
	if(e == 1) return m;
	ll x = fpow(m * m % mod, e >> 1);
	if(e & 1) x = x * m % mod;
	return x;
}

const int debug = false;

int main() {
  int T;
  for(({if(!debug)cin>>T; else T=1e9;});T;T--){
    ll initTax, slot1, slot2, K, N;
    
    if(!debug) cin >> initTax >> slot1 >> slot2 >> K >> N; else
    {
    	initTax = rand() % 50 + 1;
    	slot1 = rand() % 50 + 1;
    	slot2 = rand() % 50 + 1;
    	K = rand() % (slot1 + slot2 + 1) + 1;
    	K = 1;
    	N = rand() % 1000000000 + 1;
    }
    
    int n = 1;
    tax[n] = initTax % mod;
    rep(i,slot1) tax[n+1] = (tax[n]+1) % mod, n++;
    rep(i,slot2) tax[n+1] = (tax[n]*2) % mod, n++;
    
    if(n >= N) {
      printf("%lld\n", tax[N]);
      continue;
    }
    
    int bla=0;
    
    vector<ll> v;
    rep(i,K) {   
    
    	if(n-i<=0){
    		puts("WA");
    		bla=1;
    		break;
    	}
     
    	v.push_back(tax[n-i]);
    }
    
    if(bla)continue;
    
    reverse(v.begin(),v.end());
    
    M m;
    m.d = K;
    rep(i,K-1) m.a[i][i+1] = 1;
    rep(i,K) m.a[K-1][i] = 1;
    assert(N - n > 0);
    m = fpow(m,N - n);
    ll x = 1;
    rep(i,K) x = x * fpow(v[i], m.a[K-1][i]) % mod;
    printf("%lld\n",x);
    
  }
  return 0;
}
