#include <cmath>
#include <cstdio>
#include <cstring>
#define LL long long
#define MAX 105
using namespace std;
 
 
LL MOD;
LL initTax;
int slot1,slot2,K,N;
int k;
LL tax[105];
void mult(LL A[MAX][MAX],LL B[MAX][MAX])
{
	LL tmp[MAX][MAX],t;
 
	for(int i=0;i<K;i++)
	{
		for(int j=0;j<K;j++)
		{
			t=0;
			for(int k=0;k<K;k++)
				t+=(A[i][k]*B[k][j]);
			tmp[i][j]=t%(MOD-1);
		}
	}
	for(int i=0;i<K;i++)
		for(int j=0;j<K;j++)
			A[i][j]=tmp[i][j];
}
LL pow1(LL a,LL b)
    {
        if(b==1)return a;
        long long tmp=pow1(a,b/2);
        tmp=tmp*tmp;
        if(tmp>=MOD)
        tmp%=MOD;
        if(b%2==1){
            tmp*=a;
        if(tmp>=MOD)
        tmp%=MOD;}
        return tmp;
    }
LL solve()
{
	
	LL base[MAX][MAX]={{0}},ans[MAX][MAX]={{0}};
	for(int i=0;i<K;i++) { ans[i][i]=1;base[0][i]=1; }
	for(int i=1;i<K;i++) base[i][i-1]=1;
 
	int L=N-k+1;
	while(L)
	{
		if(L&1) mult(ans,base);
		mult(base,base);
		L>>=1;
	}
	 LL res=1;
                    for(int i=0;i<K;i++)
                    {
						//printf("%lld\n",ans[0][i]);
                        res*=pow1(tax[--k],ans[0][i]);
						
                        if(res>=MOD)
                        res%=MOD;
                    }
                    return res;
	
}
 
int main()
{
	int cases;
	scanf("%d",&cases);
	while(cases--)
	{
		scanf("%lld %d %d %d %d",&initTax,&slot1,&slot2,&K,&N);
		MOD=100000007;
		tax[1]=initTax;
		k=2;
                for(int i=0;i<slot1;i++)
                {
                    tax[k]=tax[k-1]+1;
                    k++;
                }
                for(int i=0;i<slot2;i++)
                {
                    tax[k]=tax[k-1]*2;
                    if(tax[k]>=MOD)
                    tax[k]%=MOD;
                    k++;
                }
                
                if(N>=k)
                {
                    
                    printf("%lld\n",solve());
                }
                else
                {
					printf("%lld\n",tax[N]);
                    
                }
		
	}
	return 0;
} 