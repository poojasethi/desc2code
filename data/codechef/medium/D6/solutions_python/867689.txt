a = int(0)
b = int(0)
c = int(0)
d = int(0)
dx = int(0)
dy = int(0)
q1 = (int(0), int(0))
q2 = (int(0), int(0))
s_points = set([])
count = int(0)

def solve(points):
    global a, b, c, d, dx, dy, q1, q2, s_points, count
    points.sort()
    s_points = set(points)
    count = 0
    for i in xrange(len(points) - 1):
        a = points[i][0]
        b = points[i][1]
        for j in xrange(i + 1, len(points)):
            c = points[j][0]
            d = points[j][1]
            if d <= b: continue
            dx = d - b
            dy = c - a
            q1 = (a + dx, b - dy)
            q2 = (c + dx, d - dy)
            if q1 in s_points and q2 in s_points:
                count += 1
    return count

cases = []
tests_num = int(raw_input())
for t in xrange(tests_num):
    n = int(raw_input())
    points = []
    for n in xrange(n):
        points.append(tuple([int(v) for v in raw_input().split()]))
    cases.append(points)
 
for case in cases:
    print solve(case) 
