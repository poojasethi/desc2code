//problema A
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
 
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <list>
 
#include <sstream>
#include <iostream>
#include <iomanip>
 
using namespace std;
 
typedef long long int64;
 
#define forn(i, n) for(int i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int i = a; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) (a).size()
#define all(a) a.begin(), a.end()
#define VI vector<int>
#define PII vector<pair<int,int> >
#define iss istringstream //>>
#define MAX 500005

#define MOD 10000
 
const long double EPS = 1E-9;
const int INF = (int)1E9;
const int64 INF64 = (int64)1E18;
const long double PI = 2 * acos(.0);

bool mapa[110][110];
int main(){
	int t , n, x , y;
	scanf("%d" , &t);
	while(t--){
		memset( mapa , 0, sizeof(mapa));
		scanf("%d" , &n);
		forn(i , n){
			scanf("%d%d" , &x, &y);
			mapa[x + 50][y + 50] = 1;
		}
		int squares = 0;
		forn( i , 101){
			forn(j , 101){
				if(mapa[i][j]){
					int m = 0; //misma fila
					while(1){
						int k = 0;
						if(i + m > 100) break;
						while(1){
							k++;
							if(!( i + m < 101 && j + k < 101)) break;
							if( !mapa[i + m][j + k]  ) continue;
							int p = i + m;
							int q = j + k;
							if(!( p + k < 101 && q - m >= 0)) break;
							if(!mapa[p + k][q - m] ) continue;
							p = p + k;
							q = q - m;
							if(!( p - m >=0 && q - k >= 0)) break;
							if( !mapa[p - m][q - k] ) continue;
							squares ++;
						}
						m++;
					}			
				}
			}
		}
		printf("%d\n", squares);
	}
	
	return 0;
}
