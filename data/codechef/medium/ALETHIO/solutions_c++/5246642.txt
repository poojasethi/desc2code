#include <iostream>
#include<cmath>
#include<climits>
#include<algorithm>
#include<cstdlib>
#include<stdio.h>
#include<vector>
#include<set>
#include<map>
#include<cstring>
#define mod 1000000009LL
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)

#define pb push_back
#define ll long long
using namespace std;
ll maxval;
ll bit[400005];
void update(ll idx,ll val)
{
 while(idx<=maxval)
 {
  bit[idx]+=val;
  idx+=(idx & -idx);
 }
}
ll query(ll idx)
{
 ll sum=0;
 while(idx>0)
 {
   sum+=bit[idx];
   idx-=(idx & -idx);
 }
 return sum;
}
ll power(ll a,ll b)
{
ll res=1LL;
while(b>0)
{
 if(b&1)
 res=res*a;
 a=a*a;
 b/=2;
}
return res;
}
struct T
{
 int id,att,val,idx,pri;
}node[100005];
bool compare(const struct T &a,const struct T &b)
{
 if(a.id==b.id)
 {
   if(a.att==b.att)
   {
     if(a.pri==b.pri)
     {
      return a.idx<b.idx;
     }
     else
     return a.pri<b.pri;
   }
   else
   return a.att<b.att;
 }
 else
 return a.id<b.id;
}
int bsearch(int l,int r,int i,int a)
{
 int ans;
 while(l<=r)
 {
  int mid=(l+r)/2;
  if(node[mid].id<i)
  l=mid+1;
  else if(node[mid].id>i)
  r=mid-1;
  else
  {
   if(node[mid].att<a)
   l=mid+1;
   else if(node[mid].att>a)
   r=mid-1;
   else
   {
    ans=node[mid].val;
    l=mid+1;
   }
  }
 }
 return ans;
}
string s1;
int compare(int id1,int id2)
{

 int v1=(int)s1[id1];
 int v2=(int)s1[id2];
 if(v1>=48 && v1<=57)
 v1-=48;
 else
 v1=9;
 if(v2>=48 && v2<=57)
 v2-=48;
 else
 v2=9;
 if(v1>v2)
 return 1;
 else if(v1<v2)
 return 2;
 else
 return 0;
}
int main()
{
int i,len,zer[2001],dig[2001],j,strt;
memset(zer,0,sizeof(zer));
memset(dig,0,sizeof(dig));
cin>>s1;
len=s1.length();
strt=len;
for(i=0;i<len;++i)
{
 int val=(int)s1[i]-65;
 if(val>=0 && val<=25)
 {
    if(i==0)
    dig[i]=1;
    else
    dig[i]=dig[i-1]+1;
 }
 else
 {
    if(i==0)
    dig[i]=0;
    else
    dig[i]=dig[i-1];
 }
}
for(i=len-1;i>=0;--i)
{
  int val=(int)s1[i]-48;
  if(val==0)
  {
    if(i==len-1)
    zer[i]=1;
    else
    zer[i]=zer[i+1]+1;
  }
  else
  zer[i]=0;

}
/*for(i=0;i<len;++i)
cout<<dig[i];
cout<<endl;
for(i=0;i<len;++i)
cout<<zer[i];
cout<<endl;*/
int maxlen=0;
for(i=len;i>=1;--i)
{
  for(j=0;j<=len-i;++j)
  {
    if(j==0)
    {
    if((dig[j+i-1])<=1)
    maxlen=max(maxlen,i-zer[j]);
    }
    else
    {
     if((dig[j+i-1]-dig[j-1])<=1)
     maxlen=max(maxlen,i-zer[j]);
    }
  }
}
//cout<<maxlen<<endl;
for(i=0;i<=len-maxlen;++i)
{
  if(i==0)
  {
    if((dig[i+maxlen-1])<=1)
    {
    strt=i;
    break;
    }
  }
  else
  {
    if((dig[i+maxlen-1]-dig[i-1])<=1)
    {
    strt=i;
    break;
    }
  }
}
for(i=strt+1;i<=len-maxlen;++i)
{
  int sub;
  if(i==0)
  sub=0;
  else
  sub=dig[i-1];
  if((dig[i+maxlen-1]-sub)<=1)
  {
     int f=2;
     for(j=i;j<=i+maxlen-1;++j)
     {
       if(compare(j,strt+j-i)==1)
       {
       f=1;
       break;
       }
       else if(compare(j,strt+j-i)==2)
       {
       f=0;
       break;
       }
     }
     if(f==1)
     strt=i;
  }
}
if(maxlen==0)
cout<<"0";
else
{
for(i=strt;i<=strt+maxlen-1;++i)
{
 int v=(int)s1[i];
 if(v>=48 && v<=57)
 cout<<s1[i];
 else
 cout<<"9";
}
}
cout<<endl;
return 0;
}
