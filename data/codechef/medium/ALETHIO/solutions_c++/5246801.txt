#define Yamatan_Debug 0
//#define BAYAN
#ifdef BAYAN
#	define BAYAN_NUM "E"
#endif
#if Yamatan_Debug == 1
#	include <conio.h>
#endif

#include <list>
#include <map>
#include <set>
#include <bitset>
#include <deque>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional> 
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <bitset>
#include <string.h>

using namespace std;

#define STR(X) #X

#define ABS(a)		((a>0)?a:-(a))
#define MIN(a,b)	((a<b)?(a):(b))
#define MAX(a,b)	((a<b)?(b):(a))
#define FOR(i,a,n)	for(int i=(a);i<(n);++i)
#define FORI(n)		for(int i = 0; i < n; ++i)
#define MEMS(a,b)	memset(a,b,sizeof(a))

#define MP(p1, p2)		std::make_pair(p1, p2)
#define VI				std::vector<int>
#define SI				std::set<int>
#define RNG(container)	container.begin(), container.end()

typedef long long L2;

const int		MOD = 1000000007;
const double	EXP = 2.7182818284590452;
const double	Pi	= 3.1415926358979323;

// O(sqrt(n))
bool prime(L2 n)
{ 
    for(L2 i = 2; i <= sqrt( n ); i++)
        if(n % i == 0)
            return false;
   
	return true;
}

L2 gcd(L2 a, L2 b)
{
	while(a*b)
	{
		if(a > b)
			a %= b;
		else
			b %= a;
	}
 	return a + b;
}

L2 lcm(L2 a, L2 b)
{
	return a / gcd(a, b) * b;
}
 
//////////////////
//////////////////

string str;
map<char, vector < int > > p;

string comp(string str1, string str2)
{
	if(str1.size() != str2.size())
	{
		return (str1.size() > str2.size())?(str1):(str2);
	}
	else
	{
		FOR(i,0,str1.size())
		{
			if(str1[i] == str2[i]) continue;

			return (int(str1[i]) > int(str2[i]))?(str1):(str2);
		}	
	}

	return str1;
}

string GetMax()
{
	string maxstr = "0", temp = "0";
	char buff[1010] = {0};
	bool isstart = false;
	int curpos = 0;

	FOR(i,0,str.length())
	{
		if(isdigit(str[i]) && (str[i] != '0' || isstart))
		{
			isstart = true;

			buff[curpos++] = str[i];
		}
		else
		{
			if(str[i] != '0' && isstart)
			{
				isstart = false;
				buff[curpos] = '\0';
				curpos = 0;

				temp = buff;
				maxstr = comp(temp, maxstr);
			}
		}		
	}

	if(isstart)
	{
		isstart = false;
		buff[curpos] = '\0';
		curpos = 0;

		temp = buff;
		maxstr = comp(temp, maxstr);
	}

	return maxstr;
}

string maxx = "0";

bool isdig[10] = {0};
int maxd = -1;

int main(void)
{
#if Yamatan_Debug == 2 
	freopen("input.txt", "r", stdin); 
	freopen("output.txt", "w", stdout);
#endif
	
#if Yamatan_Debug == 0
#	if defined( BAYAN )
	freopen((string(BAYAN_NUM) + string(".in")).c_str(), "r", stdin);
	freopen((string(BAYAN_NUM) + string(".txt")).c_str(), "w", stdout);
#	endif
#endif
	
	// < Code here>

	cin >> str;

	FOR(i,0,str.length())
	{
		if(!isdigit(str[i]))
			p[str[i]].push_back(i);
		else
			isdig[str[i] - '0'] = true;
	}

/*	FOR(i,0,10)
	{
		if(!isdig[i]) maxd = MAX(maxd, i);
	}
	*/

	maxd = 9;
	maxx = comp(maxx, GetMax());

	if(maxd >= 0)
		for(map<char, VI > ::iterator iter = p.begin(); iter != p.end(); ++iter)
		{
//			FOR(i,0,iter->second.size())
//				str[iter->second[i]] = char('0' + maxd);

			FOR(i,0,iter->second.size())
			{
				str[iter->second[i]] = char('0' + maxd);
				maxx = comp(maxx, GetMax());
				str[iter->second[i]] = iter->first;
			}

//			FOR(i,0,iter->second.size())
//				str[iter->second[i]] = iter->first;
		}

	cout << maxx;

	// </ Code here>
 
#if Yamatan_Debug == 1
	_getch();
#endif

	return 0;

} 