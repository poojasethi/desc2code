#define DEBUG 0
#define MOD 100000007

#include <stdio.h>

long long modpow(long long b, long long e) {
  long long x;
  if(e==0)
    return 1;
  if(e==1)
    return b;
  x=(modpow(b, e/2)%MOD);
  if(e%2)
    return ((((x*x)%MOD)*b)%MOD);
  return ((x*x)%MOD);
}

long long mod(long long x) {
  while(x<0)
    x+=MOD;
  return (x%MOD);
}

long long r1(long long pow_two_n, long long pow_three_n) {
  long long ans=mod(pow_three_n+1-2*pow_two_n);
  if(ans%2)
    return ((ans+MOD)/2);
  return (ans/2);
}

long long r2(long long pow_two_n, long long pow_three_n) {
  long long ans=mod(((pow_two_n+3)*pow_two_n)%MOD-(3*pow_three_n)%MOD-1);
  if(ans%2)
    return ((ans+MOD)/2);
  return (ans/2);
}

int main(void) {
  int tc;
  long long n, pow_two_n, pow_three_n;

  scanf("%d", &tc);
  while(tc--) {
    scanf("%lld", &n);
    if(n==1)
      printf("0 0\n");
    else if(n==2)
      printf("1 0\n");
    else {
      pow_two_n=modpow(2, n);
      pow_three_n=modpow(3, n);
      printf("%lld %lld\n", r1(pow_two_n, pow_three_n), r2(pow_two_n, pow_three_n));
    }
  }
}
