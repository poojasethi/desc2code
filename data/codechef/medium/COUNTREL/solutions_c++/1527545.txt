
#include<stdio.h>
#define int64 long long
#define MOD 100000007
 
int64 exp(int64 a, int64 n, int64 mod)
{
    if(n == 0) return 1;
    else
    {
        int64 temp = exp(a,n/2,mod);
        temp = (temp*temp)%mod;
        if(n%2 != 0) temp = (temp*a)%mod;
        return temp;
    }
    return -1;
}
 
int main()
{
    int T;
    scanf("%d",&T);
    int64 N;
    while(T--)
    {
        scanf("%lld",&N);
        int64 pow3mod2 = exp(3,N,2*MOD);
        int64 temp = pow3mod2+1;
        temp %= 2*MOD;
        temp /= 2;
        int64 pow2mod1 = exp(2,N,MOD);
        int64 R = temp - pow2mod1;
        if(R<0) R += MOD;
        printf("%lld ",R);
        int64 pow2mod2 = exp(2,N,2*MOD);
        R = (pow2mod2*pow2mod2)%(2*MOD);
        R--;
        if(R<0) R += 2*MOD;
        R -= ((3*pow3mod2)%(2*MOD));
        if(R<0) R += 2*MOD;
        R += ((3*pow2mod2)%(2*MOD));
        R %= 2*MOD;
        R = R>>1;
        printf("%lld\n",R);
    }
}