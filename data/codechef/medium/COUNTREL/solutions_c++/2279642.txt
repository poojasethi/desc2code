#include<iostream>
#include<string.h>
#include<climits>
#include<stdio.h>
#include<string>
#include<algorithm>
#include<queue>
#include<math.h>
#include<sstream>
#include<vector>
#include<map>
//2*4^(n-1) - 3^n + 2^(n-1) + 2^n - (3^n+1)/2
#define MOD 100000007
using namespace std;
long long power(long long base,long long expo)
{
	if(expo==0)
	{
		return 1;
	}
	else if(expo & 1)
	{
		return base*power(base,expo-1)%MOD;
	}
	else
	{
		long long root;
		root=power(base,expo>>1);
		return root*root%MOD;
	}
}
int main()
{
	int testcases;
	cin>>testcases;
	//cout<<power(2,MOD-2);
	while(testcases--)
	{
		long long int n,ans1,ans2;
		cin>>n;
		ans1=((((power(3,n)+1)*50000004)%MOD)-power(2,n))%MOD;
		if(ans1<0)
		{
			ans1=ans1+MOD;
		}
		ans2=(((((2*power(4,n-1)%MOD)+power(2,n-1))%MOD)+power(2,n))%MOD)-(((((3*power(3,n)+1)%MOD))*50000004)%MOD);
		if(ans2<0)
		{
			ans2=ans2+MOD;
		}
		cout<<ans1<<" "<<ans2<<endl;
	}
	return 0;
}