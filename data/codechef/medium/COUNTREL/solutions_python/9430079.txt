import java.util.Scanner;

class CountRel {
	private static final long m = 100000007;

	// Set c = 1, e′ = 0.
	// Increase e′ by 1.
	// Set c = (b ⋅ c) mod m.
	// If e′ < e, goto step 2. Else, c contains the correct solution to c ≡ be
	// mod 'm.
	static long modulo(long n, long t) {
		long sum = 1;
		while (n != 0) {
			if (n % 2 != 0)
				sum = (sum * t) % m;
			t = (t * t) % m;
			n /= 2;
		}
		return sum;
	}

	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int T = Integer.parseInt(sc.nextLine().trim());
		while (T != 0) {
			T--;
			long n = Long.parseLong(sc.nextLine().trim());
			if (n == 1) {

				System.out.println("0 0");
				continue;
			}

			else if (n == 2) {
				System.out.println("1 0");
				continue;
			}
			long a2 = modulo(n, (long) 2);
			long a3 = modulo(n, (long) 3);
			long a4 = modulo(n, (long) 4);
			long r1 = (a3 - (2 * a2) % m + 1) % m;
			if (r1 % 2 == 0)
				r1 /= 2;
			else
				r1 = (r1 + m) / 2;
			r1 %= m;
			if (r1 <= 0)
				r1 += m;
			long r2 = (a4 - ((3 * a3) % m - (3 * a2) % m + 1)) % m;
			if (r2 % 2 == 0)
				r2 /= 2;
			else
				r2 = (r2 + m) / 2;
			r2 %= m;
			if (r2 <= 0)
				r2 += m;
			System.out.println((long) (r1) + " " + (long) (r2));

		}

	}

}
