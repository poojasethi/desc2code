#include<iostream>
using namespace std;
typedef long long int  LL;


LL fastexp(LL base,LL exp,LL mod)
{ LL ans =1;
    while(exp>0)
    {  if(exp%2==1)
          ans=(ans*base)%mod;

       base=(base*base)%mod;
         exp=exp/2;
    }
    return ans%mod;
}

int main()
{
int t;
LL n,a,b,c,d,e,r1,r2;
LL mod=100000007;
cin>>t;

   while(t--)
   {  cin>>n;
       a=fastexp(3,n,2*mod)+1;
       a=a/2;
       b=fastexp(2,n,mod);         // (3^n+1)/2 - 2^n//Part 2 closed form: 2*4^(n-1) - 3^n + 2^(n-1) + 2^n - (3^n+1)/2
       c=2*fastexp(4,n-1,mod);
       d=fastexp(3,n,mod);
       e=fastexp(2,n-1,mod);
       if(c>d)
         c=(c-d);
       else
        c=(mod+c-d);
        c=c+e+b;
        if(c>a)
            r2=(c-a)%mod;
        else
            r2=(mod+c-a)%mod;

        if(a>b)
            r1=(a-b)%mod;
        else
            r1=(mod+a-b)%mod;  

         // r1=(a-b+mod)%mod;
         // r2=(c-d+b+e-a+mod)%mod;

      cout<<r1<<" "<<r2<<endl;

   }


return 0;
}
