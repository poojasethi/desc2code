#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#define REPEAT(token, num) for (token = 0; token < num; token++)
typedef signed char byte;
#define debug
#ifdef debug
#define printfD printf
#else
#define printfD(...) 1
#endif
#define MOD 100000007
#define INVERSE2MOD 50000004
#define CALCMOD(num, mod) ((num % mod)+mod) % mod

//arr = [2]; for (i = 1; i < 64; i++) { arr[i] = arr[i-1]*arr[i-1]; arr[i] %= 100000007; }
long long pow2to32 = 4294967296;
long long storage2[64] = {2, 4, 16, 256, 65536, 94967002, 37556848, 32958935, 20293834, 69590784, 78733280, 45633377, 50655786, 75657208, 21674375, 98756137, 12468596, 75328610, 87324170, 32403193, 43097573, 68472287, 58818610, 40158098, 22090515, 18805869, 84088919, 3622355, 54827527, 6511704, 86015462, 85167307, 73889377, 51273357, 54022466, 28431294, 21930748, 74172472, 17481920, 5493175, 69468382, 59888025, 87340361, 25626654, 49264945, 35960603, 77602073, 12351638, 50603641, 3205900, 94090561, 49582411, 8483850, 5784201, 78866418, 52756926, 46138966, 34532876, 41355018, 94063713, 83987671, 86229260, 59663671}, storage3[64] = {3, 9, 81, 6561, 43046721, 59140441, 16843076, 89283539, 78356042, 88128948, 31916941, 51489111, 65991340, 50155638, 47095898, 53164766, 45980309, 67742279, 42882721, 31638909, 92638853, 84418661, 26177235, 84277900, 31216527, 89728731, 3283239, 57576549, 62695292, 63816313, 19837464, 50404553, 85286500, 73084945, 11754409, 21267654, 75001806, 9492701, 65967610, 64491336, 27925649, 17482275, 17781532, 58134228, 28584810, 5539709, 73656500, 12480428, 72159914, 23993700, 99391175, 76378282, 52916619, 70379380, 82456431, 37323386, 44992546, 53859086, 41699333, 50926495, 11439486, 30783870, 85841645};
long long calcModuloExpM(byte base, long long exponent) {
    long long answer = 1;
    long long *storage = base == 2 ? storage2 : storage3;
    byte i;
    REPEAT(i, 64) if (i < 32 ? (1 << i) & ((long) (exponent % pow2to32)) : (1 << (i-32)) & (exponent/pow2to32)) {
        answer *= storage[i];
        if (answer > MOD) answer %= MOD;
    }
    return answer;
}

void runTest() {
    long long num;
    long long answer1, answer2 = 0, store2, store3;
    scanf("%lli", &num);
    store2 = calcModuloExpM(2, num);
    store3 = calcModuloExpM(3, num);
    answer1 = INVERSE2MOD*(store3-1)+1-store2;
    answer1 = CALCMOD(answer1, MOD);
    answer2 = calcModuloExpM(2,2*num-1)+calcModuloExpM(2, num-1)-store3-answer1;
    answer2 = CALCMOD(answer2, MOD);
    printf("%lli %lli\n", answer1, answer2);
}

int main() {
//#define DEBUG
#ifndef DEBUG
    short num, i;
    scanf("%hi", &num);
    REPEAT(i, num) runTest();
#else
    long long pow;
    byte base;
    scanf("%hhi %lli", &base, &pow);
    printf("%lli\n", calcModuloExpM(base, pow));
#endif
    return 0;
}