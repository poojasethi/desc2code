/* Author : Vamsi Kavala */
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <string>
#include <cmath>
using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define REP(i,n) FOR(i,0,n)
#define PB push_back
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)
#define mod 1000000007
#define MAXN 1000010

typedef pair<int,int>   PI;
typedef vector<int> VI;
typedef long long int LL;

int d[1000010];

int main(){

	int t;
	scanf("%d",&t);
	while(t--)
	{
		memset(d,0,sizeof(d));
		int ch,n,k,x,y,z;
		scanf("%d%d",&n,&k);

		REP(i,k)
		{
			scanf("%d%d%d%d",&ch,&x,&y,&z);
			
			//updating the boundary elements

			if(ch==1)
			{
				d[x-1]+=z;
				d[y]-=z;
			}
			else if(ch==2)
			{
				d[x-1]-=z;
				d[y]+=z;
			}
		}

		int cur=0, minm=mod, maxm=-mod;

		REP(i,n)
		{
			//generating each element using the difference between the current element and the previous element
			cur+=d[i];//printf("cur:%d\n",cur);
		  // printf("cur+i:%d\n",cur+i);
			minm=min(minm,cur+i+1);
			maxm=max(maxm,cur+i+1);
			//printf("max:%d\n",maxm);
		    //printf("min:%d\n",minm);
		}
		printf("%d\n",maxm-minm);
	}

	return 0;
}
