#include<iostream>
#include<string.h>
#define mod 1000000007
#include<math.h>
int visited[100001];
int totalvisited=0;
unsigned long long int cycleincrement=1;
unsigned long long int totalincrement=0;
using namespace std;

unsigned long long int getposition(unsigned long long int i, unsigned long long int n)
{
if (totalvisited==n)
return 0;
if (visited[i]==1)
cycleincrement=0;
else
totalvisited++;



visited[i]=1;
if (i%2==1)
{
unsigned long long int  oddposition = ceil(1.0*i/2);
return (floor(1.0*n/2)+oddposition);

}

else
{
unsigned long long int evenposition=(i/2);
return evenposition;

}


}

int main()
{
int t;
cin>>t;
while(t--)
{totalvisited=0;
memset(visited,0,sizeof(visited[0])*100001);
unsigned long long int n,i;
cin>>n;
totalincrement=0;
for(i=1;i<=n;i=i+2)
{
if (visited[i]==1)
continue;
if (totalvisited==n)
break;
unsigned long long int d=i;
cycleincrement=1;
while(1)
{
d=getposition(d,n);
if (d==0)
break;

if (d==i)
break;
}

if (cycleincrement==1)
totalincrement++;
}

unsigned long long int power= totalincrement;
unsigned long long int base=26;
unsigned long long int result=1;

while(power!=0)
{
    if (power%2==0)
    {
    base=(base*base)%mod;
    power=power/2;
    }
    else
    {
    result=(result*base)%mod;
    power=power-1;
    }
}
cout<<result<<'\n';
}

return 0;
}
