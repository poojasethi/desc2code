#include<iostream>
#define MOD 1000000007
 
typedef unsigned long long uInt64;
 
uInt64 power(uInt64 base, uInt64 exponent, uInt64 modulus)
{
	uInt64 result = 1;
	while (exponent > 0)
	{
		if (exponent % 2 == 1)
			result = (result * base) % modulus;
		exponent >>= 1;
		base = (base * base) % modulus;
	}
	return result;
}
using namespace std;
int main()
{
	int t;
	cin>>t;
	while(t--)
	{
		int n,i,k,tmp;
		cin>>n;
		int a[n],count=0;
		if(n%2==0)
		{
			for(i=0;i<n/2;i++)
			a[i]=2*(i+1)-1;
			for(i=n/2;i<n;i++)
			a[i]=2*(i-n/2);
		}
		else
		{
			count=1;
			n=n-1;	
			for(i=0;i<n/2;i++)
			a[i]=2*(i+1)-1;
			for(i=n/2;i<n;i++)
			a[i]=2*(i-n/2);
		}
		for(i=0;i<n;i++)
		{
			if(a[i]==0)
			continue;
			count++;
			k=a[i];
			while(k!=i)
			{
				tmp=a[k];
				a[k]=0;
				k=tmp;
			}
			a[i]=0;
		}
		cout<<power(26,count,MOD)<<"\n";
		
	}
}