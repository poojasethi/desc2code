#include <cstdio>
#include <cstring>
#include <vector>
using namespace std;
inline int inp()
    {
    int noRead=0;
    char p=getchar_unlocked();
    for(;p<33;){p=getchar_unlocked();};
    while(p>32)
    {
    noRead = (noRead << 3) + (noRead << 1) + (p - '0');
    p=getchar_unlocked();
    }
    return noRead;
    };
 
const int maxN = 100;
 
vector<int> a[maxN];
int mark[maxN];
int cmp;
 
void dfs(int u)
{
	mark[u]=cmp;
	for(int i=a[u].size();i--;)
	{
		int v=a[u][i];
		if(!mark[v]) dfs(v);
	}
}
 
int main()
{
	int TST;
	TST=inp();
	for(int tst=0;tst<TST;tst++)
	{
		int n,m;
		n=inp();m=inp();
		int i,u,v;
		for(i=0;i<n;i++) a[i].clear();
		for(int k=0;k<m;k++)
		{
			u=inp();
			v=inp();
			a[u].push_back(v);
			a[v].push_back(u);
		}
		memset(mark,0,4*n);   //we could have alternately wriiten for(i=0;i<n;i++)    mark[i]=0;
		cmp=0;
		for(i=0;i<n;i++)
			if(!mark[i])
			{
				cmp++;
				dfs(i);
			}
		int Q;
		Q=inp();
		for(int q=0;q<Q;q++)
		{
			u=inp();
			v=inp();
			puts(mark[u]==mark[v]?"YO":"NO");
		}
	}
	return 0;
} 