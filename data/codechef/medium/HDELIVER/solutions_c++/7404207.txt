#include <iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<stdio.h>
using namespace std;

//const int r=1000000007;
	vector<int> adj[105];
	int index[105];
int main() {
	//std::ios::sync_with_stdio(false);
	queue<int>q;
	int n,m,t,a,b,test,frontier,tot;
//	long long int prod=1,cnt=0,tot;
	scanf("%d",&test);
	for(t=0;t<test;t++)
	{
		tot=0,
	//	cin>>n>>m;
	scanf("%d %d",&n,&m);
		bool *visit = new bool[n+1];
		for(int i=0;i<m;i++)
		{
		//	cin>>a>>b;
		scanf("%d %d",&a,&b);
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		for(int i=0;i<n;i++)
		visit[i]=0;
		for(int i=0;i<n;i++)
		{
//			tot=1;
			if(visit[i]==0)
		{
			q.push(i);
			visit[i]=1;
			index[i]=tot;
			while(!q.empty())
			{
				frontier=q.front();
				q.pop();
				for(int j=0;j<adj[frontier].size();j++)
				{
					if(visit[adj[frontier][j]]==0)
					{
						visit[adj[frontier][j]]=1;
						index[adj[frontier][j]]=tot;
						q.push(adj[frontier][j]);
					}
				}
			}
			tot++;
		}
		}
		int query;
	//	cin>>query;
	scanf("%d",&query);
		for(int k=0;k<query;k++)
		{
		//	cin>>a>>b;
		scanf("%d %d",&a,&b);
			if(index[a]==index[b])
			cout<<"YO\n";
			else
			cout<<"NO\n";
		}
		delete visit;
		for(int i=0;i<=n;i++)
		adj[i].clear();
	}
	// your code goes here
	return 0;
}
