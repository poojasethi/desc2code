#include<iostream> 
#include<vector> 
#include<cstring>
 #include<cstdio> 
using namespace std; 
#define get getchar_unlocked
 inline int scan() { int n=0,s=1; char p=get(); if(p=='-') s=-1; while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get(); if(p=='-') s=-1,p=get(); while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); } return n*s; } inline void print(int X) { int Len=0,Data[10]; while(X) { Data[Len++]=X%10; X/=10; } if(!Len) Data[Len++]=0; while(Len--) putchar_unlocked(Data[Len]+48); putchar_unlocked(' '); } vector <int> A[102]; int visited[102]; int cmp; void dfs(int i) { int j; visited[i]=cmp; for(j=0;j<A[i].size();j++) { if(!visited[A[i][j]]) dfs(A[i][j]); } } int main() { int t,n,m,i,a,b,u,v; t=scan(); while(t--) { n=scan(); m=scan(); for(i=0;i<n;i++) A[i].clear(); for(i=1;i<=m;i++) { a=scan(); b=scan(); A[a].push_back(b); A[b].push_back(a); } memset(visited,0,sizeof(visited)); cmp=0; for(i=0;i<n;i++) { if(!visited[i]) { cmp++; dfs(i); } } int q; q=scan(); while(q--) { u=scan();v=scan(); if(visited[u]==visited[v]) { puts("YO"); } else puts("NO"); }}return 0;}