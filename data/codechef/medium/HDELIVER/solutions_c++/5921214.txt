#include <cstdio>
#include <cstdlib>
struct subset
{
    int parent;
    int rank;
};
int Find(subset subsets[], int i)
{
    if (subsets[i].parent != i)
        subsets[i].parent = Find(subsets, subsets[i].parent);
    return subsets[i].parent;
}
void Union(subset subsets[], int x, int y)
{
    int xroot = Find(subsets, x);
    int yroot = Find(subsets, y);
    if (subsets[xroot].rank < subsets[yroot].rank)
        subsets[xroot].parent = yroot;
    else if (subsets[xroot].rank > subsets[yroot].rank)
        subsets[yroot].parent = xroot;
    else
    {
        subsets[yroot].parent = xroot;
        subsets[xroot].rank++;
    }
}
int main()
{
    subset subsets[110];
    int t,n,m,q,i,a,b;
    scanf("%d",&t);
    while(t>0)
    {
        t--;
        scanf("%d %d",&n,&m);
        for (i=0;i<n;i++)
        {
        subsets[i].parent = i;
        subsets[i].rank = 0;
        }
        for(i=0;i<m;i++)
        {
            scanf("%d %d",&a,&b);
            Union(subsets,a,b);
        }
        scanf("%d",&q);
        int x,y;
        while(q>0)
        {
            q--;
            scanf("%d %d",&a,&b);
            x=Find(subsets,a);
            y=Find(subsets,b);
            if(x==y)
                printf("YO\n");
            else
                printf("NO\n");
        }
    }
}
