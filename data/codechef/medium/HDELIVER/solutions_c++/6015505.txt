#include<cstdio>
#include<vector>
using namespace std;
		vector<int> adj[101];
		int flag[101];
		
void dfs(int u, int value)
{
	int i,v;
	for(i=0;i<adj[u].size();i++)
	{
		v=adj[u][i];
		if(flag[v]==0)
		{
			flag[v]=value;
			dfs(v,value);
		}
	}
}
		
int main()
{
	int t,q,u,v;
	int n,m,i,j;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&n,&m);
		int selfloop[n];
		for(j=0;j<n;j++)
		{
			flag[j]=0;
			selfloop[j]=0;
		}
		for(i=0;i<m;i++)
		{
			scanf("%d %d",&u,&v);
			adj[u].push_back(v);
			adj[v].push_back(u);
			if(u==v)
			selfloop[u]=1;
		}
		
			
			flag[u]=1;		
			dfs(u,1);	
		j=2;
		for(i=0;i<n;i++)
		{
			if(flag[i]==0)
			{
				if(!adj[i].empty())
				{
					dfs(i,j);
					j++;
				}
			}
		}
	//	for(i=0;i<n;i++)
	//	printf("%d\t",flag[i]);
	//	printf("\n\n");
		scanf("%d",&q);
	//	printf("\nThe no of queries are - %d\n",q);
		for(i=0;i<q;i++)
		{
			scanf("%d %d",&u,&v);
			if(u==v)
			{
				//if(selfloop[u]==1)
				printf("YO\n");
				
			}
			else
			{
			if(flag[u]==flag[v] && flag[u]!=0)
			printf("YO\n");
			else
			printf("NO\n");
			}
		}
		
		for(i=0;i<n;i++)
		adj[i].clear();
		
	}
	return 0;
}