#include<stdio.h>
#define getcx getchar_unlocked
char arr[8000005];
inline void inp( int *n )//fast input function
{
   *n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           *n = (*n<<3)+(*n<<1) + ch-'0', ch=getcx();
   *n=*n*sign;
}
 
 
inline void out(register int N)
{
    register int rev=N, count = 0;
    if (N == 0)
    {
          putchar_unlocked('0');
          putchar_unlocked('\n');
          return ;
    }
    while ((rev % 10) == 0)
    {
          count++;
          rev /= 10;
    }
    rev = 0;
    while (N != 0)
    {
          rev = (rev<<3) + (rev<<1) + N % 10;
          N /= 10;
    }
    while (rev != 0)
    {
          putchar_unlocked(rev%10 + '0');
          rev /= 10;
    }
    while (count--)
          putchar_unlocked('0');
    putchar_unlocked('\n');
    return ;
}
int main(){
	int L[1000], R[1000], notc, N;
	inp(&notc);
	int i, total, temp, k;
	while(notc--){
		total = 0;
		inp(&N);
		if (N)
			inp(L);inp(R);
		for (i = 1;i<N;i++){
			inp(L+i);inp(R+i);
			if (L[i-1]>L[i])
				temp = L[i-1]-L[i];
			else
				temp = L[i] - L[i-1];
			total += temp;
			if (R[i-1]>R[i])
				temp = R[i-1]-R[i];
			else
				temp = R[i] - R[i-1];
			total += temp;
		}
		out(total);
		putchar_unlocked('\n');
		for(i = 0, k = 0;i<N-1;i++){
			if (R[i]<=L[i+1]){
				total = R[i] - L[i]-1;
				while(total--){
					//putchar_unlocked('L');
					//putchar_unlocked('+');
					//printf("L+");
					arr[k++] = 'L';
					arr[k++] = '+';
					
				}
				total = L[i+1]+1-R[i];
				while(total--){/*
					putchar_unlocked('R');
					putchar_unlocked('+');
					putchar_unlocked('L');
					putchar_unlocked('+');
					//printf("L+");*/
					arr[k++] = 'R';
					arr[k++] = '+';
					arr[k++] = 'L';
					arr[k++] = '+';
					
				}
				total = R[i+1] - R[i] - (L[i+1]+1-R[i]);
				while(total--){/*
					putchar_unlocked('R');
					putchar_unlocked('+');
					//printf("L+");*/
					arr[k++] = 'R';
					arr[k++] = '+';
					
				}
			}
			else{
				if (L[i+1]>L[i]){
					total = L[i+1] - L[i];
					while(total--){/*
						putchar_unlocked('L');
						putchar_unlocked('+');*/
						//printf("L+");
						arr[k++] = 'L';
						arr[k++] = '+';
					
					}
				}
				else{
					total = L[i] - L[i+1];
					while(total--){/*
					putchar_unlocked('L');
					putchar_unlocked('-');*/
					//printf("L+");
					arr[k++] = 'L';
					arr[k++] = '-';
					
				}
				}
				if (R[i+1]>R[i]){
					total = R[i+1] - R[i];
					while(total--){/*
						putchar_unlocked('R');
						putchar_unlocked('+');*/
						//printf("L+");
						arr[k++] = 'R';
						arr[k++] = '+';
					
					}
				}
				else{
					total = R[i] - R[i+1];
					while(total--){/*
						putchar_unlocked('R');
						putchar_unlocked('-');
						//printf("L+"*);*/
						arr[k++] = 'R';
						arr[k++] = '-';
					
					}
				}
			}
		}
		arr[k++] = '\0';
		printf("%s\n", arr);
	}
	return 0;
}