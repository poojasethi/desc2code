#include<iostream>
#include<cstdio>
#include<vector>

#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif // ONLINE_JUDGE

using namespace std;

int input(){
char c=gc();
int sign=1;
if(c=='-') sign=-1;
while(c<'0'||c>'9') c=gc();
int ans=0;
while(c>='0'&&c<='9'){
    ans=10*ans+c-'0';
    c=gc();
}
return sign*ans;
}

int main(){
int t;
cin>>t;
while(t--){
        vector<char> v1;
        int n,i,count=0,l_curr,r_curr,temp;
        cin>>n;
        int l[n],r[n];
        for(i=0;i<n;i++){
                cin>>l[i];
                cin>>r[i];
        }
        l_curr=l[0];
        r_curr=r[0];
        for(i=1;i<n;i++){
            if(l[i]>=l_curr&&r[i]>=r_curr){
                    if(l[i]<=(r_curr-1)){
                    temp=l[i]-l_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('L');v1.push_back('+');}
                    temp=r[i]-r_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('R');v1.push_back('+');}
                    l_curr=l[i];
                    r_curr=r[i];
                    }
                    else if(l[i]>=r_curr){
                    temp=r_curr-1-l_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('L');v1.push_back('+');}
                    l_curr=r_curr-1;
                    while(l_curr!=l[i]&&r_curr!=r[i]){
                        {v1.push_back('R');v1.push_back('+');{v1.push_back('L');v1.push_back('+');}}
                        l_curr++;
                        r_curr++;
                    }
                    temp=r[i]-r_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('R');v1.push_back('+');}
                    l_curr=l[i];
                    r_curr=r[i];
                    }
            }
            else if(l[i]<=l_curr&&r[i]<=r_curr){
                    temp=l_curr-l[i];
                    //count+=temp;
                    while(temp--) {v1.push_back('L');v1.push_back('-');}
                    temp=r_curr-r[i];
                    //count+=temp;
                    while(temp--) {v1.push_back('R');v1.push_back('-');}
                    l_curr=l[i];
                    r_curr=r[i];
            }
            else if(l[i]>=l_curr&&r[i]<=r_curr){
                    temp=l[i]-l_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('L');v1.push_back('+');}
                    temp=r_curr-r[i];
                    //count+=temp;
                    while(temp--) {v1.push_back('R');v1.push_back('-');}
                    l_curr=l[i];
                    r_curr=r[i];
            }
            else if(l[i]<=l_curr&&r[i]>=r_curr){
                    temp=l_curr-l[i];
                    //count+=temp;
                    while(temp--) {v1.push_back('L');v1.push_back('-');}
                    temp=r[i]-r_curr;
                    //count+=temp;
                    while(temp--) {v1.push_back('R');v1.push_back('+');}
                    l_curr=l[i];
                    r_curr=r[i];
            }
        }
count=v1.size()/2;
cout<<count<<"\n";
for(i=0;i<v1.size();i++) cout<<v1[i];
cout<<"\n";
}
return 0;
}
