#include <iostream>
#include<stdio.h>
#include <stdlib.h>
using namespace std;
#define abs(x) (((x)>0)?(x):(-(x)))
#define cabs(x) (((x)>=0)?'+':'-')
void strcat(char a[],char c, char op,int l)
{
a[l]=c;
a[l+1]=op;
a[l+2]='\0';
}
void sstrcat(char a[], char op,int l)
{
a[l]='R';
a[l+1]=op;
a[l+2]='L';
a[l+3]=op;
a[l+4]='\0';
}
int main() 
{
int ct,l,t, n,i,j,adiff,bdiff,a,b,an,bn;
char ans[8000001]="",c;
cin>>t;
while(t--)
{
	l=0;
cin>>n;
cin>>a>>b;
n--;
ans[0]='\0';
	while(n--)
	{
	  cin>>an>>bn;
	  adiff=an-a;
	  bdiff=bn-b;
	  
	  if(adiff*bdiff<=0)
	  	{
		  for(i=0;i<abs(adiff);i++)
		  	{
			  c=cabs(adiff);
			  strcat(ans,'L',c,l);			  
			  l+=2;
			  }
		  for(i=0;i<abs(bdiff);i++)
		  	{
			  c=cabs(bdiff);
			  strcat(ans,'R',c,l);
			  l+=2;
			  }
	  	}
	  else if(adiff>0)
	  	{
			if(a>b)  
			{
			for(i=0;i<abs(adiff);i++)
		  	{
			  
			  strcat(ans,'L','+',l);			  
			  l+=2;
			 }
			 for(i=0;i<abs(bdiff);i++)
		  	{
			  
			  strcat(ans,'R','+',l);
			  l+=2;
			  }
			 }
			  else
			  { ct=0;
			    for(i=0,j=a;i<abs(adiff)&&j<b-1;i++,j++)
		  		{
			  	
			  	strcat(ans,'L','+',l);			  
			  	l+=2;
			 	}
			 	for(;i<abs(adiff);i++)// check for errors in continuity
			 		{
						sstrcat(ans,'+',l);
						l+=4;
						ct++; 
				 	}
			 	for(i=ct;i<abs(bdiff);i++)
		  		{
			  
			  	strcat(ans,'R','+',l);
			  	l+=2;
			  	}
			  } 
	  	}
	  	else
	  	{
		  	if(a<b)  
			{
				for(i=0;i<abs(adiff);i++)
		  		{
			  
			  	strcat(ans,'L','-',l);			  
			  	l+=2;
			 	}
			 	for(i=0;i<abs(bdiff);i++)
		  		{
			  
			  	strcat(ans,'R','-',l);
			  	l+=2;
			  	}
			 }
			 else
			 {
			 	ct=0;
			 	for(i=0,j=a;i<abs(adiff)&&j>b+1;i++,j--)
		  		{
			  	
			  	strcat(ans,'L','-',l);			  
			  	l+=2;
			 	}
			 	for(;i<abs(adiff);i++)// check for errors in continuity
			 		{
						sstrcat(ans,'-',l);
						l+=4;
						ct++; 
				 	}
			 	for(i=ct;i<abs(bdiff);i++)
		  		{
			  
			  	strcat(ans,'R','-',l);
			  	l+=2;
			  	}
			 }
	  	}
	  
	  a=an;
	  b=bn;
	}
cout<<l/2<<endl<<ans<<endl;
}
return 0;	
}