#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> PII;
typedef long long LL;

int n,a[65];

map<PII,LL> cache;
int gcd(int a,int b)
{
    if(a==0)
        return b;
    return gcd(b%a,a);
}
LL f(int pos,int currgcd)
{
    if(currgcd==1&&pos==n) return 1;
    if(pos==n)  return 0;
    PII key = make_pair(pos,currgcd);
    if(cache.find(key)!=cache.end()) return cache[key];
    if(currgcd==1) return pow(2,n-pos);

    return  cache[key] = f(pos+1,currgcd)+f(pos+1,gcd(currgcd,a[pos]));
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {

        scanf("%d",&n);
        cache.clear();
        int i;
        for(i=0;i<n;i++)
            scanf("%d",&a[i]);
        LL ans=0;
        for(i=0;i<n;i++)
            ans+=f(i+1,a[i]);
        cout<<ans<<endl;
    }
    return 0;
}
