#include <iostream>
#include <set>
#include <cassert>

using namespace std;

int gcd(int a, int b) {
    return b?gcd(b,a%b):a;
}

int A[64];
long long dp[2][1<<15];

int main() {
    int T;
    cin >> T;
    assert(1 <= T && 100 >= T);
    while(T--) {
        int N;
        cin >> N;
        assert(1 <= N && 60 >= N);
        set<int> S;
        for(int i=0;i<N;i++) {
            cin >> A[i];
            assert(1 <= A[i] && 10000 >= A[i]);
            assert(S.find(A[i]) == S.end());
            S.insert(A[i]);
        }
        int p=0, q=1;
        for(int i=0;i<=10000;i++) dp[p][i] = 0;
        dp[p][0] = 1;
        for(int i=0;i<N;i++) {
            for(int j=0;j<=10000;j++) dp[q][j] = dp[p][j];
            for(int j=0;j<=10000;j++) if(dp[p][j]) dp[q][gcd(A[i],j)] += dp[p][j];
            p=1-p;
            q=1-q;
        }
        cout << dp[p][1] << endl;
    }
    return 0;
}
