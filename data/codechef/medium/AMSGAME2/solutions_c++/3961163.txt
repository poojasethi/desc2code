#include<bits/stdc++.h>
using namespace std;
#define ll long long 
int a[65];
ll dp[65][10005];

ll modulo(ll a,ll b){ ////// (a^b)%c
long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
while(b > 0){
if(b%2 == 1){
x=(x*y);
}
y = (y*y); // squaring the base
b /= 2;
}
return x;
}
int n;
ll cal(int pos,int gcd)
{
	if(pos==n && gcd>1)return dp[pos][gcd]=0;
	if(pos==n && gcd==1) return dp[pos][gcd]=1;
	if(dp[pos][gcd]!=-1) return dp[pos][gcd];
	if(gcd==1) return dp[pos][gcd]= modulo(2,n-pos);
	return dp[pos][gcd]= cal(pos+1,gcd) + cal(pos+1,__gcd(gcd,a[pos]));  
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		memset(dp,-1,sizeof(dp));
		scanf("%d",&n);
		for(int i=0;i<n;i++)
		 scanf("%d",&a[i]);
		 ll ans=0L;
		for(int i=0;i<n;i++)
		{
			ans += cal(i+1,a[i]);
		}
		cout<<ans<<endl;
	}
}