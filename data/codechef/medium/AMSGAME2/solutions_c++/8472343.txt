#include<iostream>
#include<bits/stdc++.h>
using namespace std;
long long int dp[65][100000];
long long int arr[66];
 long long int n;
long long int solve(long long int cur_pos,long long int cur_gcd)
{
	if(dp[cur_pos][cur_gcd]!=-1) return dp[cur_pos][cur_gcd];
	else if(cur_pos>=n) 
	{
		if(cur_gcd==1) return 1;
		else return 0;
	}
	else
	{
		long long int ret=solve(cur_pos+1,cur_gcd);
		 ret+=solve(cur_pos+1,__gcd(cur_gcd,arr[cur_pos]));
		 dp[cur_pos][cur_gcd]=ret;
		 return dp[cur_pos][cur_gcd];
	}
}
int main()
 {
 	long long int t;
 	 cin>>t;
 	 while(t--)
 	  {
 	  	
 	  	  cin>>n;
 	  	  for(long long int i=0;i<=n+2;i++)
 	  	   {
 	  	   	 for(long long int j=0;j<=10000;j++)
 	  	   	  {
 	  	   	  	dp[i][j]=-1;
					}
			  }
 	  	  for(long long int i=0;i<n;i++)
 	  	   {
 	  	   	 cin>>arr[i];
			  }
			 long  long int ans=0;
			  ans=solve(0,0);
			  cout<<ans<<endl;
	   }
 }