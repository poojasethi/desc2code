#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <map>
#include <utility>

#define MAXN 100

typedef long long LL;

using namespace std;

int n;
int a[MAXN];
map<pair<int, int>, LL> m;

LL f(int pos, int curr_gcd)
{
	if (pos==n) {
		if (curr_gcd==1)
			return 1;
		else 
			return 0;
	}

	pair<int, int> p = make_pair(pos, curr_gcd);
	if (m.find(p) != m.end()) 
		return m[p];
	else 
		return m[p] = f(pos+1, curr_gcd) + f(pos+1, __gcd(curr_gcd, a[pos]));
}

int main()
{
	int t;
	scanf("%d", &t);

	while (t--) {
		scanf("%d", &n);
		m.clear();
		for (int i=0; i<n; i++) 
			scanf("%d", &a[i]);
		
		LL result=0;
		for (int pos=0; pos<n; pos++) {
			result += f(pos+1, a[pos]);
		}
		printf("%lld\n", result);
	}
	return 0;
}