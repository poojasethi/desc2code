#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define BUFFER 100000
char buff[BUFFER + 10];
char str[100];
size_t c; 
int p;

void validate(bool a)
{
	if (!a)
		abort();
}

char getnextchar()
{
	if (!c)
	{
		c = fread(buff, sizeof(char),BUFFER, stdin);
        p = 0;
	}
	if (c){
		c--;
		return buff[p++];
	}
	else return 0;
}

void ungetlastchar()
{
	validate(p >0);
	p--;
	c++;
}

char *readnext()
{
	int pp=-1;
	int count = 0;
	while (1) {
		char cc = getnextchar();
		if (cc >= 'a' && cc <= 'z' || cc >= 'A' && cc <= 'Z'  || cc == '\'') {
			pp = -1;
			count++;
			continue;
		}
		else if (cc == ' ') {
            pp = 0;
			validate(count <=100);
			count++;
			continue;
		}
		else if (cc >= '0' && cc <= '9' ) {
			if (pp >= 0) {
				str[pp] = cc;
				pp++;
			}
			count++;
			continue;
		}
		else if (pp >=0){
			validate(cc == 10 || cc == 13);
			validate(pp && *str != '0');
			str[pp] = 0;
			return str;
		}
		else
			validate(count == 0 && (cc == 10 || cc == 13));
        
	}
    
}
bool isciel(char * s)
{
	int count[3];
	count[0]=0;
	count[1]=0;
	count[2]=0;
	validate(strlen(s) <= 6);
    
	while (*s) {
		switch(*s) {
			case '8':
				count[2]++;
				break;
			case '5':
				count[1]++;
				break;
			case '3':
				count[0]++;
				break;
			default:
				return 0;
		}
		s++;
	}
	if (count[0] > count[1] || count[1] > count[2])
		return 0;
	else {
		return 1;
	}
}
int main()
{
	int t;
	scanf("%d", &t);
	validate(t <= 1000);
	c = 0;
	int count=0;
	while (t--)
	{
		if (isciel(readnext()))
			count++;
	}
	printf("%d\n", count);
	return 0;
} 