#include <bits/stdc++.h>
#define MAXN 1003
#define MAXT 1003

using namespace std;
typedef long long ll;


int n, m;
ll D;

double sellRates[MAXN][MAXT], buyRates[MAXN][MAXT];
double dp[MAXT][MAXN][2];

int main() {
    
    ios::sync_with_stdio(0);
    
    cin>>n>>m>>D;
    
    for (int i = 0; i < n; i++) {
        for (int j = 1; j <= m;j++) {
            int x, y;
            cin>>x>>y;
            
            sellRates[i][j] = ( 1.0 * x );
            buyRates [i][j] = ( 1.0 * y );
            
        }
    }
    
    
    for (int i = 0; i < n; i++) {
        dp[0][i][0] = D;
        dp[0][i][1] = 0;
    }
    
    
    for (int t = 1; t <= m; t++) {
        for (int k = 0; k < n; k++) {
            dp[t][k][0] = dp[t-1][k][0];
            dp[t][k][1] = dp[t-1][k][1];
            
            
            for (int d = 1 ; d <= 1 ;d++) {
                
                if ( k + d < n && t-d >= 0 ) {
                    
                    dp[t][k][0] =  max(dp[t][k][0] , dp[t - d][k+d][0]);
                    dp[t][k][1] =  max(dp[t][k][1] , dp[t - d][k+d][1]);
                    
                    
                    dp[t][k][0] =  max(dp[t][k][0] , dp[t - 1][k][1] * buyRates[k][t] );
                    dp[t][k][1] =  max(dp[t][k][1] , dp[t - 1][k][0] / sellRates[k][t] );
                    
                    
                }
                
                if (k - d >= 0 && t-d >= 0) {
                    
                    dp[t][k][0] =  max(dp[t][k][0] , dp[t - d][k-d][0]);
                    dp[t][k][1] =  max(dp[t][k][1] , dp[t - d][k-d][1]);
                    
                    
                    dp[t][k][0] =  max(dp[t][k][0] , dp[t - 1][k][1] * buyRates[k][t] );
                    dp[t][k][1] =  max(dp[t][k][1] , dp[t - 1][k][0] / sellRates[k][t] );
                    
                }
            }
            
            
        }
    }
    
    
    double mx = 0.0;
    
    for (int i = 1; i <= m; i++) {
        for (int j = 0; j < n; j++) {
            mx = max(mx , dp[i][j][0]);
        }
    }
   
    if (mx > 1e18) {
        printf("Quintillionnaire\n");
    } else {
        printf("%.10lf\n", mx);
    }
    
    return 0;
}
