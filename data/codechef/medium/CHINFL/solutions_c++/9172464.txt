
#include <bits/stdc++.h>
using namespace std;
#define V 1e18
#define ll long long
ll selling[1005][1005],buying[1005][1005];
double dp[1005][1005][2];

int main() {

	int n,m;
	ll d;
	scanf("%d%d%lld",&n,&m,&d);
	for(int i=0;i<n;i++)
    {
        for(int j=0;j<m;j++)
        {
            scanf("%lld%lld",&selling[j][i],&buying[j][i]);
        }
    }
    for(int i=0;i<n;i++)
        dp[0][i][0]=d;
    for(int t=1;t<=m;t++)
    {
        for(int i=0;i<n;i++)
        {
            dp[t][i][0]=dp[t-1][i][0];
            dp[t][i][1]=dp[t-1][i][1];

            /*for(int dis=1;dis<n;dis++)
            {
                if(i+dis<n&&t-dis>=0)
                {
                    dp[t][i][0]=max(dp[t][i][0],dp[t-dis][i+dis][0]);
                    dp[t][i][1]=max(dp[t][i][1],dp[t-dis][i+dis][1]);


                }
                if(i-dis>=0&&t-dis>=0)
                {
                    dp[t][i][0]=max(dp[t][i][0],dp[t-dis][i-dis][0]);
                    dp[t][i][1]=max(dp[t][i][1],dp[t-dis][i-dis][1]);
                }

            }*/

            if(i+1<n)
            {
                dp[t][i][0]=max(dp[t][i][0],dp[t-1][i+1][0]);
                dp[t][i][1]=max(dp[t][i][1],dp[t-1][i+1][1]);
            }
            if(i-1>=0)
            {
                dp[t][i][0]=max(dp[t][i][0],dp[t-1][i-1][0]);
                dp[t][i][1]=max(dp[t][i][1],dp[t-1][i-1][1]);
            }

            dp[t][i][0] = max(dp[t][i][0], dp[t-1][i][1]*buying[t-1][i]);
            dp[t][i][1] = max(dp[t][i][1], dp[t-1][i][0]/selling[t-1][i]);
        }
    }
    double ans=0;
    for(int i=0;i<n;i++)
    {
        ans=max(ans,dp[m][i][0]);
    }
    if(ans>V)
        printf("Quintillionnaire");
    else
        printf("%lf",ans);
	return 0;
}
