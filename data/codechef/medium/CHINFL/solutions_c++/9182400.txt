#include <bits/stdc++.h>
#define MOD 1000000007
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define rf(i, x, y) for (int i = (x); i < (y); i++)
#define rfe(i, x, y) for (int i = (x); i <= (y); i++)
#define rb(i, x, y) for (int i = (x); i > (y); i--)
#define rbe(i, x, y) for (int i = (x); i >= (y); i--)
#define sfi(x) scanf("%d", &x)
#define pfi(x) printf("%d", x)
#define sfll(x) scanf("%lld", &x)
#define pfll(x) printf("%lld", x)
#define sfd(x) scanf("%lf", &x)
#define pfd(x) printf("%lf", x)
#define sfs(x) scanf("%s", x)
#define pfs(x) printf("%s", x)
#define eol printf("\n")
#define pb(x) push_back((x))
 
#define SIZE 1025
using namespace std;
 
typedef long long int ll;

typedef struct{
	double b,s;
}kiosk;

kiosk in[1001][1001];
double dp[1002][1002][2]; 
int main() {
 
    ll n,m;
	double d;
	sfll(n);	 	
	sfll(m);
	sfd(d);
	rf(i,0,n){
		rfe(j,1,m){
			sfd(in[i][j].s);
			sfd(in[i][j].b);
		}
	}
	rf(i,0,n){
		dp[0][i][0] = d;
		dp[0][i][1] = 0;
	}
	rfe(t,1,m){
		rf(i,0,n){
			dp[t][i][0] = dp[t-1][i][0];
			dp[t][i][1] = dp[t-1][i][1];
			if(i == 0){
				dp[t][i][0] = MAX(dp[t][i][0], dp[t-1][i+1][0]);
				dp[t][i][1] = MAX(dp[t][i][1], dp[t-1][i+1][1]);
			} else if(i == n-1){
				dp[t][i][0] = MAX(dp[t][i][0], dp[t-1][i-1][0]);
				dp[t][i][1] = MAX(dp[t][i][1], dp[t-1][i-1][1]);							
			} else {
				dp[t][i][0] = MAX(dp[t][i][0], dp[t-1][i+1][0]);
				dp[t][i][0] = MAX(dp[t][i][0], dp[t-1][i-1][0]);
				dp[t][i][1] = MAX(dp[t][i][1], dp[t-1][i+1][1]);
				dp[t][i][1] = MAX(dp[t][i][1], dp[t-1][i-1][1]);
			}
			dp[t][i][1] = MAX(dp[t][i][1], dp[t-1][i][0]/in[i][t].s);
			dp[t][i][0] = MAX(dp[t][i][0], dp[t-1][i][1]*in[i][t].b);
		}
	}
	double ans=-1;
	rf(i,0,n) if(ans < dp[m][i][0]) ans = dp[m][i][0];
	if(ans > 1e18) pfs("Quintillionnaire");
	else pfd(ans);
	eol;
    return 0;
}