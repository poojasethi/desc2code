	#include<iostream>
	#include<vector>
	#include<algorithm>
	using namespace std;
	typedef pair<int,int> pp;
	int main()
	{
		int t;
		cin>>t;
		while(t>0)
		{
			int n,m;
			cin>>n>>m;
			int arr[100005];
			vector<pp>  v;
			for(int i=1;i<=n;i++)
				cin>>arr[i];

			int x,y;
			for(int i=0;i<m;i++)
			{
				cin>>x>>y;
				v.push_back(make_pair(x,y));
			}
			sort(v.begin(),v.end());
			vector<pp>  v2;
			v2.push_back(v[0]);
			int l=v2.size();
			pp p1,p;
			for(int i=1;i<v.size();i++)
			{
				p=v[i];
				l=v2.size();
				p1=v2[l-1];
				if(p.first>= p1.first && p.first<= p1.second)
				{
					v2[l-1]=make_pair(p1.first ,max(p.second,p1.second));
				}	
				else if(p.first >p1.second)
				{
					v2.push_back(v[i]);
				}	
			}
			p=make_pair(0,0);
			int k=0;
			int flag=0;
			for(int i=1;i<=n;i++)
			{
				if(arr[i]>p.second)
				{
					if(k<v2.size())
					{
						p=v2[k];
						k++;
					}	
				}
				if((arr[i]<=p.second && arr[i]>=p.first)!=1)
				{
					if(arr[i]!=i)
					{
						flag=1;
						break;
					}
				}

			}		
			if(flag==1)
				cout<<"Impossible\n";
			else
				cout<<"Possible\n";
			t--;
		}	
	}