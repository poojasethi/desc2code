#include <iostream>
#include <algorithm>
using namespace std;

#define maxn 100001

pair<int,int> cache[2 * maxn];
int a[maxn];

int main() {
    int t, n, m, l, r;
    cin >> t;
    while(t--) {
        cin >> n >> m;
        for(int i=1; i<=n; ++i) cin >> a[i];
        for(int i=1; i<=m; ++i) {
            cin >> l >> r;
            cache[2 * i - 1] = make_pair(l, 1);
            cache[2 * i] = make_pair(r + 1, -1);
        }
        m = 2 * m;
        sort(cache + 1, cache + m + 1);
        int balance = 0;
        int left = 0;
        for(int i=1; i<=m; ++i) {
            balance += cache[i].second;
            if ( balance == 1 && cache[i].second == 1) left = cache[i].first;
            else if (balance == 0) sort(a + left, a + cache[i].first);
        }
        bool correct = true;
        for(int i=1; i<=n; ++i) {
            if (a[i] != i) {
                correct = false;
                break;
            }
        }
        if (correct) cout << "Possible" << endl;
        else cout << "Impossible" << endl;
    }
    return 0;
}
