#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> PP;

bool comp(PP A , PP B)
{
	if(A.first == B.first)
		return A.second < B.second;
	return(A.first < B.first);
}
int main()
{
	int test;
	scanf("%d",&test);
	while(test--)
	{
		int N,M;
		scanf("%d %d",&N,&M);
		vector<PP>mypair;
		int input[N];
		for(int i = 0 ; i < N ; i++)
		{
			int a ;
			scanf("%d",&a);
			input[i] = --a;
		}
		for(int i = 0 ; i < M ; i++)
		{
			int a,b;
			scanf("%d %d",&a,&b);
			mypair.push_back(make_pair(--a,--b));
		}
		sort(mypair.begin(),mypair.end(),comp);
		int low = mypair[0].first;
		int high = mypair[0].second;
		for(int i = 1 ; i < M ; i++)
		{
			if(high >= mypair[i].first)
			{
				high = max(high, mypair[i].second);
			}
			else
			{
			//	cout<<"low ="<<low<<" high ="<<high<<endl;
				sort(input+low,input+high+1);
				low = mypair[i].first;
				high = mypair[i].second;
			}

		}
		sort(input+low,input+high+1);
	//	for(int i = 0 ; i < N ; i++)
	//		cout<<input[i]<<" ";
	//	cout<<endl;
		bool ans = true;
		for(int i = 0 ; i < N ; i++)
		{
			if(input[i] != i)
				ans = false;
		}
		if(ans == false)
			puts("Impossible");
		else
			puts("Possible");
		//delete[] input;
	}
}
