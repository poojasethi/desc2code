#include<iostream>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<set>
#include<map>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<queue>
#include<stack>
#include<cctype>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef map<int,int> mii;
typedef vector<int> vi;
typedef vector< vector<int> > vvi;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<string> vs;

#define rep(i,n) for(int i=0;i<n;i++)
#define forup(i,a,b) for(int i=a;i<=b;i++)
#define fordn(i,a,b) for(int i=a;i>=b;i--)
#define all(x) x.begin(),x.end()
#define permute(x) next_permutation(all(x))
#define pb push_back
#define MAX 1001

pii A[100005];
int P[100005];


int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m;
        scanf("%d %d",&n,&m);

        rep(i,n)
        {
            scanf("%d",&P[i]);
            --P[i];
        }


        int l,r;
        rep(i,m)
        {
            scanf("%d %d",&l,&r);
            --l;
            --r;
            A[i]= pii(l,r);
        }

        sort(A,A+m);

        l=A[0].first;
        r=A[0].second;

        forup(i,1,m-1)
        {
            if(r< A[i].first)
            {
                sort(P+l,P+r+1);
                l=A[i].first;
                r=A[i].second;
            }
            else
                r=max(A[i].second,r);
        }
        sort(P+l,P+r+1);
        bool b=1;

        rep(i,n)
        {
            if(i!=P[i])
            {
                 b=0;
                 break;
            }

        }
        if(b) printf("Possible\n");
        else printf("Impossible\n");
    }
    return 0;
}
