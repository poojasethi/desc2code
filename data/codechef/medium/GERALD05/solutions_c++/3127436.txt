#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<memory.h>
#include<cstdlib>
#include<cmath>
#include<cassert>
#include<memory.h>
#include<algorithm>
#include<queue>
#include<utility>
#include<map>
#include<bitset>
using namespace std;

typedef vector<int> VI;
typedef long long LL;
typedef unsigned long long uLL;
typedef pair<int, int> PII;
typedef vector<PII> VPII;
#define pb push_back
#define fi first
#define se second
#define mp make_pair
#pragma comment(linker, "/STACK:266777216")

const int inf=1000000000;
const LL INF=LL(inf)*inf;
const double eps=1e-9;
const double PI=2*acos(0.0);

#define SMAX 105
#define MOD 1000000007
#define NMAX 101

LL dp[SMAX][SMAX], ifact[NMAX];
int A0, A1, A2, A3, S;


LL mult(LL a, LL b)
{
    LL ans = a*b;
    if(ans>= MOD)
    {
        ans%=MOD;
    }
    return ans;
}

LL pow(LL a, LL p)
{
    LL ans = 1;
    while(p!=0)
    {
        if(p&1LL)
        {
            ans = mult(ans,  a);
        }
        p /= 2;
        a = mult(a, a);
    }
    return ans;
}

//To compute number of different ways to choose k objects from set of A distinct objects
LL f(int A, int k)
{
    int n = k+ A-1, r = k;
    LL ans=1;
    for(int i=0; i<r; i++)
    {
        ans = (ans*(LL)(n-i))%MOD;
    }
    ans = (ans*ifact[r])%MOD;
    return ans;
}

//To calculate inverse factorials of numbers upto 100
void precompute()
{
    ifact[0] = 1;
    for(int i=1; i<NMAX; i++)
    {
        ifact[i] = (ifact[i-1]*pow((LL)i, (LL)(MOD-2)))%MOD;
    }
}

void solve()
{
    scanf("%d%d%d%d", &A0, &A1, &A2, &A3);
    scanf("%d", &S);

    //Initialize
    dp[0][0] = 1;
    for(int i=1; i<=S; i++)
    {
       dp[0][i] = 0;
    }
    //Main Loops
    for(int i=1; i<=S; i++)
    {
        for(int j=0; j<=S; j++)
        {
            dp[i][j] = dp[i-1][j];
        }
        for(int j=0; j<=S-i; j++)
        {
            for(int k=1; j+k*i<=S; k++)
            {
                dp[i][j+k*i] = (dp[i][j+k*i] + (dp[i-1][j]*f(A0 + i*A1 + i*i*A2 + i*i*i*A3, k))%MOD)%MOD;
            }
        }
    }
    printf("%lld\n", dp[S][S]);
}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif

    precompute();

    int t;
    scanf("%d", &t);
    while(t--)
    {
        solve();
    }

}
