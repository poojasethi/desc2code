#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define N 100
ll invmod [N + 2];
ll dp[N + 1][N + 1];
ll f[N + 1];
int main()
{
    int tc,t;
    int mod = pow(10,9) + 7;
    ll MOD = pow(10,9) + 7;
    invmod[1] = 1;
    for(int i = 2 ; i<=101 ; i++)
    {
        ll I = (ll) i;
        invmod[i] = (-(MOD/I)*invmod[MOD%I])%MOD + MOD;
        //printf("%lld\n",invmod[i]);
    }
    scanf("%d",&tc);
    for(t = 1 ; t<=tc ; t++)
    {
        int s;
        int a0,a1,a2,a3;
        scanf("%d %d %d %d %d",&a0,&a1,&a2,&a3,&s);
        for(int rang = 1 ; rang <= s ; rang++)
        {
            int val = a0 + a1*rang + a2*rang*rang + a3*rang*rang*rang;
            f[rang] = (ll) val;
            //cout<<f[rang]<<endl;
        }
        dp[0][0] = 1;
        for(int i = 1 ; i<=s ; i++)
        {
            for(int j = 0 ; j<=s ; j++)
            {
                ll num = f[i];
                ll invden = 1;
                ll ways = dp[i-1][j];
                for(int k = 1 ; j-k*i>=0 ; k++)
                {
                    ll temp1 = invden*num%MOD;
                    ll temp2 = temp1*dp[i-1][j-k*i]%MOD;
                    ways = (ways + temp2)%MOD;
                    invden = invden*invmod[k+1]%MOD;
                    int temp = f[i]+k;
                    ll Temp = (ll) temp;
                    num = num*Temp%MOD;
                    //if(num < 0) num = num + MOD;
                }
                dp[i][j] = ways;
                //printf("%lld ",dp[i][j]);
            }
            //printf("\n");
        }
        ll ans = dp[s][s];
        printf("%lld\n",ans);
    }
    return 0;
}
