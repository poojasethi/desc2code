mod = 1000000007
F = []
combinations = {}
meal = {}
def cook(N, S):
   if S == 0: return 1
   if N == 0: return 0
   key = (N, S)
   if key in meal: return meal[key]
   food = 0
   for rank in xrange(N, 0, -1):
      for count in xrange(S // rank, 0, -1):
         cooked = cook(rank - 1, S - (rank * count))
         if cooked: food += combinations[(F[rank] + count - 1, count)] * cooked
   food %= mod
   meal[key] = food
   return food

for _ in xrange(int(raw_input())):
   A0, A1, A2, A3 = map(int, raw_input().split())
   S = int(raw_input())
   F = [0]
   for N in xrange(1, S + 1):
      sets = (((A3 * N + A2) * N + A1) * N + A0) % mod
      F.append(sets)
      combinations[(sets, 1)] = sets
      for i in xrange(2, S // N + 1):
         combinations[(sets + i - 1, i)] = ((sets + i - 1) * combinations[(sets + i - 2, i - 1)]) // i
   meal = {}
   cook(S, S)
   print cook(S, S)
