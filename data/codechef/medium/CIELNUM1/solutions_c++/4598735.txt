#include <iostream>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <vector>
#include <string>
#include <deque>
#include <bitset>
#include <algorithm>
#include <utility>
#include <functional>
#include <limits>
#include <numeric>
#include <complex>
#include <cassert>
#include <cmath>
#include <memory.h>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <climits>

using namespace std;

template<typename X> inline X abs(const X& a) { return (a < 0 ? -a : a); }
template<typename X> inline X sqr(const X& a) { return (a * a); }
template<typename X> inline void print(const X& a,int N) {cout<<endl;for(int i=0;i<N;i++)cout<<a[i]<<" ";cout<<endl;}
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pp;
typedef pair<ld, ld> ppld;
typedef unsigned long long ull;
#define FOR(i, n) for(int i = 0; i < int(n); i++)
#define FOR1(i, n) for(int i = 1; i <= int(n); i++)
#define FORD(i, n) for(int i = int(n-1); i >= 0; i--)
#define FORAB(i, a, b) for(int i = int(a); i < int(b); i++)
#define foreach(it, a) for(__typeof((a).begin()) it = (a).begin(); it != (a).end(); it++)
#define pb push_back
#define mp make_pair
#define mset(a, val) memset(a, val, sizeof (a))
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define getcx getchar_unlocked
#define getmid(a,b) (a+(b-a)/2)
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
const int MAXINT = numeric_limits<int>::max();
const int MININT = numeric_limits<int>::min();
const ll MAXINT_64 = numeric_limits<ll>::max();
const ll MININT_64 = numeric_limits<ll>::min();
const ld PI = ld(3.1415926535897932384626433832795);
template<typename X> inline void inp(X &n ) {
     int ch=getcx();int sign=1;n=0;
     while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
     while(  ch >= '0' && ch <= '9' ) n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
     n=n*sign;
}template<typename X> inline void out(X a) {
    char snum[20]; int i=0;
    do {snum[i++]=a%10+48; a=a/10; }while(a!=0);
    i=i-1;
    while(i>=0) putchar_unlocked(snum[i--]);
    putchar_unlocked('\n');
}

#define MAXC 50000
int c = 1;

void solve(int ndigits, int n8, int n5, int n3, int factor, ll num){
    if(c > MAXC)
        return;
    if(ndigits == 0){

        int n8 = 0;
        int n5 = 0;
        int n3 = 0;
        int k = 0;
        ll temp = num;
        while(temp){
            if(temp%10 == 8) n8++;
            else if(temp%10 == 5) n5++;
            else if(temp%10 == 3) n3++;
            else k++;
            temp = temp/10;
        }
        if(n8>=n5 and n5>=n3 and k==0){
            out(num);
            c++;
        }

        return;
    }
    int total = ndigits+n8+n5+n3;
    // cout<<"total = "<<total<<endl;
    int max8 = total;
    int max5 = total/2;
    int max3 = total/3;
    // cout<<"max8 = "<<max8<<endl;
    if(n3 < max3)
        solve(ndigits-1, n8, n5, n3+1, factor+1, 10*num+3);
    if(n5 < max5)
        solve(ndigits-1, n8, n5+1, n3, factor+1, 10*num+5);
    if(n8 < max8)
        solve(ndigits-1, n8+1, n5, n3, factor+1, 10*num+8);
    return;
}

int main(){
    int i = 1;
    while(c <= MAXC){
        solve(i, 0, 0, 0, 0, 0);
        i++;
    }
    return 0;
}
