#include <cstdio>
#include <cstring>
#include <cmath>
#include <cstdlib>
#include <iostream>
#include <vector>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include<list>
 
#define si(n)                       scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
#define pi(n)                       printf("%d\n",n)
#define pc(n)                       printf("%c\n",n)
#define pl(n)                       printf("%lld\n",n)
#define pf(n)                       printf("%lf\n",n)
#define ps(n)                       printf("%s\n",n)
 
// Useful constants
 
#define INF                         (int)1e9
#define EPS                         1e-9
 
// Useful container manipulation / traversal macros
 
#define loop(i,a,b)                 for(int i=a;i<b;i++)
#define foreach(v,c)                for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                   memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair
 
// Some common useful functions
 
#define MAX(a,b)                     ( (a) > (b) ? (a) : (b))
#define MIN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define SORT(a)                      ( sort(all(a))
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())
#define MOD 1000000007
typedef long long ll;
using namespace std;
 
ll mod_pow(ll a, ll p)
{
  if(p==0)
    return 1;
  if(p==1)
    return a%MOD;
  if(a==1)
    return 1;
 
  ll tmp = mod_pow(a,p/2);
  tmp = tmp*tmp;
  tmp %= MOD;
  if(p%2)
    tmp *= (a%MOD);
return tmp%MOD;
}
 
int main()
{
//  pl(mod_pow(3,4));
    int t;
    scanf("%d",&t);
    while(t--)
    {
      ll n,m,d,k;
      sl(n);
      sl(m);
      sl(d);
      sl(k);
      if(m<=d)
        printf("0\n");
      else
      {
      ll t1 = mod_pow(d+1,n);
      ll t2 = mod_pow(d,n);
      ll t3 = mod_pow(d-1,n);
      
      t2 = (2*t2)%MOD;
//      pl(t1);
//      pl(t2);
//      pl(t3);
      t1 %= MOD;
      ll t4;
      if(t1 >= t2)
        t4 = (t1-t2)%MOD;      // t1 - 2*t2 + t3
      else
        t4 = (t1-t2)%MOD + MOD;
//      pl(t4);
      ll t5 = t4%MOD + t3%MOD;
//      pl(t5);
      ll t = (t5)%MOD;
//      pl(t);
      ll ans = (((m-d)%MOD)*(t%MOD))%MOD;                     // ans = (m-d) * t
      ans %= MOD;
      pl(ans);
      }
      }
return 0;
}
 