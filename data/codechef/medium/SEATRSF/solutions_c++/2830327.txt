#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<complex>
#include<string>
#include<utility>
#include<numeric>
#include<iterator>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cctype>
#include<climits>
#include<ctime>
#include<cstring>

#define ALL(c)  c.begin(), c.end()
#define TR(c, it)   for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define MAX(a, b)   ((a) > (b) ? (a) : (b))
#define gc  getchar_unlocked
#define lli long long int
#define inf INT_MAX
#define mininf INT_MIN
#define pb push_back
#define mp  make_pair
#define time   QueryPerformanceCounter
#define qp  QuadPart
#define LI LARGE_INTEGER
#define PI  3.14159265358979323846264338327950288
#define root_2 1.412135623730950488016887242097
#define M 1000000007

using namespace std;

lli mypow(lli base, lli exp)
{
    lli result = 1;
    while(exp)
    {
        if(exp & 1)
        {
            result *= base;
            result %= M;
        }
        exp >>= 1;
        base *= base;
        base %= M;
    }
    return result;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        lli n , m , r , k , ans ;
        scanf("%lld%lld%lld%lld",&n,&m,&r,&k);
        if(n==1 && r==0)
            printf("%lld\n",m);
        else if(n==1 && r!=0)
            printf("0\n");
        else if(r == 0)
            printf("%lld\n",m);
        else if(r >= m)
            printf("0\n");
        else
        {
            ans = (mypow( r+1, n))%M;
            ans += ((ans < 0)? M : 0);
            ans += (mypow( r-1, n))%M;
            ans += ((ans < 0)? M : 0);
            ans -= (2*((mypow(r , n))%M))%M;
            ans += ((ans < 0)? M : 0);
            ans = (ans*(m - r))%M;
            ans += ((ans < 0)? M : 0);
            printf("%lld\n",ans);
        }
    }
    return 0;
}
