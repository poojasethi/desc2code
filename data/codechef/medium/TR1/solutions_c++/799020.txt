#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <stack>
#include <queue>
#include <set>
#include <map>
#include <vector>
#include <cassert>

#define MOD	       	    1000000007LL
#define LU             	long long unsigned int
#define LL             	long long int

#define REP(i,n)        for(int i = 0; i < n; i++)
#define FOR(i,a,b,k)    for(int i = a; i < b; i+=k)

using namespace std;

int ni(){
    int v;
    scanf("%d", &v);
    return v;
}

vector<int> v[10000];
int visited[10000];
int N;
LL ans;
LL Im[10000];

int DFS(int curr){
    if(visited[curr]) return 0;

    visited[curr] = 1;
    int c = 1;
    vector<int> g;
    REP(j, v[curr].size()){
        int next = v[curr][j];
        int cj = DFS(next);
        c += cj;
        g.push_back(cj);
    }

    Im[curr] = 2*(c-1) + 1;
    REP(j, g.size()){
        Im[curr] = (Im[curr] + (g[j]*(c-g[j]-1))%MOD)%MOD;
    }
    ans += (Im[curr]*(curr+1))%MOD;
    ans %= MOD;
    return c;
}

void solve(){
    memset(visited, 0, sizeof(visited));
    ans = 0;
    DFS(0);
    printf("%lld\n", ans);
}

int main(){
//    freopen("input.txt", "r", stdin);
//    freopen("output.txt", "w", stdout);
    int t = ni();
    while(t--){
        N = ni();
        REP(i,N-1){
            int a = ni()-1;
            int b = ni()-1;
            v[a].push_back(b);
            v[b].push_back(a);
        }
        solve();
        REP(i,N){
            v[i].erase(v[i].begin(), v[i].end());
        }
    }

}
