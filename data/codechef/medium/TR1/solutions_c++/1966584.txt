#include<cstdio>
#include<vector>
#define m 1000000007
using namespace std;
vector<long long>v[10005];
long long t,n,cnt,k,x,y,j,sum,ans[10005],color[10005],result[10005];
void dfs(long long node)
{
    ++cnt;
    /*printf("\n****NODE=%d****",node);
    if(v[node].size()==1 && node!=1)
    {
        printf("\nit's a leaf node\n");
        return;
    }*/



    long long temp1,i,p,r;

    temp1=cnt;
    //printf("\nnon leaf node=%lld temp1=%lld\n",node,temp1);

    color[node]=1;
    for(i=0;i<v[node].size();i++)
    {
        //parent[v[node][i]]=node;
        if(color[v[node][i]]==0)
        {
            dfs(v[node][i]);

        }


    }
    //printf("\n*temp1=%lld NODE=%lld  cnt after visiting childs=%lld* ",temp1,node,cnt);
    ans[node]=cnt-temp1+1;
    p=0;r=ans[node];
    //printf("ans[node]=%lld \n",ans[node]);
    //printf("\n****CHILDS****\n");
    for(i=0;i<v[node].size();i++)
    {
        if(color[v[node][i]]==2)
        {
             r=(r+p*ans[v[node][i]])%m;
             p=(p+ans[v[node][i]])%m;
             //printf(" %lld ",v[node][i]);
        }
    }
    //printf("r=%lld\n",r);
     result[node]=(2*r-1)%m;
     //printf("result[node]=%lld\n",result[node]);
    color[node]=2;
}
int main()
{
    scanf("%lld",&t);
    while(t--)
    {
        sum=0;
        cnt=0;
        scanf("%lld",&n);
        for(j=0;j<=n;j++)
        {
            result[j]=0;
            color[j]=0;
            ans[j]=0;
            v[j].clear();
        }
        for(j=1;j<=n-1;j++)
        {
            scanf("%lld %lld",&x,&y);
            v[x].push_back(y);
            v[y].push_back(x);

        }
        /*for(j=1;j<=n;j++)
        {
            printf("%lld---->",j);
            for(k=0;k<v[j].size();k++)
            printf("%lld ",v[j][k]);
            printf("\n");
        }*/
        dfs(1);
        /*printf("\n");
        for(j=1;j<=n;j++)
        {
            //ans[j]+=1;
            printf("%lld ",ans[j]);
        }

        printf("\n");*/
        sum=0;
        for(j=1;j<=n;j++)
        {
            /*p=0;r=ans[j];
            printf("j=%lld \n",j);
            for(k=0;k<v[j].size();k++)
            {
                if(mark[v[j][k]]==0 && v[j][k]!=j)
                {
                    printf("%lld-->%lld\n ",v[j][k],ans[v[j][k]]);
                    r=(r+p*ans[v[j][k]])%m;
                    p=p+ans[v[j][k]];
                }
                mark[v[j][k]]=1;
            }
            mark[j]=1;
            printf("\n r=%lld",r);
           r=(2*r-1)%m;
          printf(" final result=%lld\n",r);*/
           sum=(sum+(j*result[j]))%m;
        }
        printf("%lld\n",sum);

    }
    return 0;

}
