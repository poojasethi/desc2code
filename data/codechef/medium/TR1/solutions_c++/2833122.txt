#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cstring>
#define MOD 1000000007
#define MAX 10001
using namespace std;
int n;
vector<int> graph[MAX];
bool visited[MAX];
long long unsigned child[MAX];
 
long long unsigned dfs(int node) 
{
  long long unsigned ans=1, x;
  visited[node]=true;

  for(int i=0;i<graph[node].size();i++)
    {
        if(!visited[graph[node][i]]) 
        {
          x=dfs(graph[node][i]);
          child[node]=(child[node]+ans*x)%MOD;
          ans=(ans+x)%MOD;
        }

    }
  
  child[node]=2*child[node]+1;
  return ans;
}
 
long long unsigned calculate() 
{
  long long unsigned ans=0;
  for(int i=1;i<=n;i++) 
  {
    ans=(ans+(i*child[i])%MOD)%MOD;
  }
  return ans;
}
 
int main() 
{
  int tc;
  scanf("%d", &tc);
  while(tc--) 
  {
    scanf("%d", &n);
    memset(child,0,sizeof(child));
    for(int i=1;i<=n;i++) 
    {
        graph[i].clear();
        visited[i]=false;
    }
    for(int i=0;i<n-1;i++) 
    {
        int u,v;
        scanf("%d%d", &u, &v);
        graph[u].push_back(v);
        graph[v].push_back(u);
    }
    dfs(1);
    printf("%llu\n", calculate());
  }
  return 0;
}