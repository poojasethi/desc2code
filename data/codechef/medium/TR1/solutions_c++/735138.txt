#include <cstdio>
#include <vector>
#include <cstring>
using namespace std;

vector < vector <int> > E(10001);
int visited[10001];
long long int ans = 0;

int recurse (int x)
{
  if (visited[x]) return 0;
  visited[x] = 1;
  vector <int> groups;
  int c = 1;
  int k;
  for (int i = 0; i < E[x].size(); i++)
  {
    k = recurse(E[x][i]);
    groups.push_back(k);
    c += k;
  }
  long long int pr = 0;
  for (int i = 0; i < groups.size(); i++)
  {
    for (int j = i+1; j < groups.size(); j++)
    {
      pr += ((long long)(groups[i]%1000000007)*(long long)(groups[j]%1000000007))%1000000007;
    }
  }
  pr *= 2ll;
  pr %= 1000000007;
  ans += ((long long)((x+1)%1000000007)*(1+(c-1)*2+pr))%1000000007;
  ans %= 1000000007;
  return c;
}

int main () 
{
  int t,n,a,b;
  scanf ("%d",&t);

  while (t--) 
  {
    scanf ("%d",&n);
     
    for (int i = 0; i < n; i++) E[i].resize(0);
    
    for (int i = 0; i < n-1; i++)
    {
      scanf ("%d%d",&a,&b);
      E[a-1].push_back(b-1);
      E[b-1].push_back(a-1);
    }
    memset(visited,0,sizeof(visited));
    ans = 0;
    recurse(0);
    printf("%lld\n",ans);
  }
  return 0;
}