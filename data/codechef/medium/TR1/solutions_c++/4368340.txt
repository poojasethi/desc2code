#include <iostream>
#include<vector>
#include<list>
#include<algorithm>
#define mod 1000000007
using namespace std;

inline void scanint(long long* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	for(; (c<48)||(c>57);c = getchar_unlocked());
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (long long)((((*x)<<1) + ((*x)<<3)) + c - 48);
}

vector<long long> childs[10005];
list<long long>edges[10005];
vector<long long> size[10005];
long long sum[10005];

long long size_calculator(long long i)
{
	if(childs[i].size()==0){sum[i]=0;return 1;}
	
	long long v;
	
  sum[i]=0;
	
	
	for(int j=0;j<childs[i].size();j++)
	{
		v=size_calculator(childs[i][j]);
		size[i].push_back(v);
	   sum[i]+=v;
	}
	
	
	
	return (1+sum[i]);
}

void child_manager(int i)
{
	if(edges[i].size()>0)
	{
		int t=edges[i].size();
		
		for(int j=0;j<t;j++){childs[i].push_back(edges[i].front());edges[i].pop_front();}
		
		for(int j=0;j<childs[i].size();j++)
		{
			edges[childs[i][j]].remove(i);
			
			child_manager(childs[i][j]);
		}
		
	}
}

int main() 
{
    long long t,n,ch,i,j,val,val2,k;
    long long ans;
    scanint(&t);
   
    while(t--)
    {
    ans=0;	
    
    scanint(&n);
   
   for(i=0;i<n-1;i++){scanint(&val);scanint(&val2);edges[val].push_back(val2);edges[val2].push_back(val);}
   
   child_manager(1);
   ch=size_calculator(1);
   
   
   
   for(i=1;i<=n;i++)
   {
   	if(childs[i].size()==0){ans=ans+i;if(ans>=mod)ans-=mod;}
   	
   	else 
   	{
   		ans=ans+(i*(sum[i]*2+1));
   		
   		if(ans>=mod)ans-=mod;
   		
   		for(j=0;j<childs[i].size();j++)
   		{
   		for(k=j+1;k<childs[i].size();k++){ans=ans+ ((i*(2*size[i][j]*size[i][k]))%mod);
   		
   		if(ans>=mod)ans-=mod;
   		}
   		
   		}
   	}
   }
   
   for(i=1;i<=n;i++){size[i].clear();childs[i].clear();edges[i].clear();}
   
   printf("%lld\n",ans);
   
  }
    
	return 0;
}