#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef std::vector<int> vi;
typedef pair<int,int> ii;

ll mod=1000000007;
vi adjList[10001];
int n;
int root=0;
ll children[10001];
int parent[10001];
ll importanceArray[10001];

void bfs(int u){
    int i;
    for(i=0;i<adjList[u].size();i++)
        if(parent[adjList[u][i]]==-1&&adjList[u][i]!=root){
            parent[adjList[u][i]]=u;
            bfs(adjList[u][i]);
            children[u]+=1+children[adjList[u][i]];
        }
}

void importance(){
    int i,j,k;
    for(i=0;i<n;i++){
        importanceArray[i]=(2*children[i]+1)%mod;
        for(j=0;j<adjList[i].size();j++)
            for(k=j+1;k<adjList[i].size();k++)
                if(adjList[i][j]!=parent[i]&&adjList[i][k]!=parent[i])
                importanceArray[i]+=(2*(children[adjList[i][j]]+1)*(children[adjList[i][k]]+1))%mod;
        importanceArray[i]%=mod;
    }
}

int main(){
    int t;scanf("%d",&t);
    while(t--){
        int i,j;
        scanf("%d",&n);
        for(i=0;i<10001;i++)
            adjList[i].clear();
        memset(children,0,sizeof(children));
        memset(parent,-1,sizeof(parent));
        for(i=0;i<n-1;i++){
            int u,v;
            scanf("%d %d",&u,&v);
            u--;v--;
            adjList[u].push_back(v);
            adjList[v].push_back(u);
        }
        bfs(0);
        importance();
        ll ans=0;
        for(i=0;i<n;i++)
            ans=(ans+(i+1)*importanceArray[i]%mod)%mod;
        cout<<ans<<endl;
    }
    
}