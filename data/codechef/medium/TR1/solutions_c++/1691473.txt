// KUNAL ACHARYA(sub_zer0) :)
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<string>
#define MOD 1000000007
using namespace std;
struct node
{
int vertex;
int size;
vector<int> child;
vector<long long> num;
long long imp;
};
node g[10004];
int n,v[10004];
void dfs(int i)
{
v[i]=0;     
//cout<<1<<endl;     
g[i].size=1;
int l=g[i].child.size();
int j,k;
long long c=0,res=0;
for(j=0;j<l;j++)
{               
k=g[i].child[j];
if(v[k])
{        
dfs(k);
g[i].num.push_back((long long)g[k].size);
g[i].size+=g[k].size;
}
}
res=g[i].size;
l=g[i].num.size();
for(j=0;j<l;j++)
{
res=(res+(c*g[i].num[j]))%MOD;
c+=g[i].num[j];               
}
res=(2*res-1)%MOD;
g[i].imp=res;
}
int main()
{
//freopen("in.txt","r",stdin);
//freopen("out.txt","w",stdout);
int t,i,a,b,ans;
scanf("%d",&t);
while(t--)
{
ans=0;
scanf("%d",&n);
for(i=1;i<=n;i++)
{
v[i]=1;
g[i].child.clear();
g[i].num.clear();
}
for(i=1;i<n;i++)
{
scanf("%d %d",&a,&b);
g[a].child.push_back(b);
g[b].child.push_back(a);
}
dfs(1);
for(i=1;i<=n;i++)
{
//cout<<"imp "<<g[i].imp<<endl;                 
ans=(ans+i*g[i].imp)%MOD;
}
cout<<ans<<endl;
}
//fclose(stdin);
//fclose(stdout);
//system("pause");
return 0;
}
