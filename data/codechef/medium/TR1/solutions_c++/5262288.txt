#include <vector>
#include <stdio.h>

using namespace std;
#define mod 1000000007


vector<int> tree[11111];
vector<int> vis(11111);
vector<long long> im(11111);
int dfs(int i)
{
	im[i] = 0;
	int ret = 1;
	long long temp = 1;
	vis[i] = 1;
	for (int j= 0; j<tree[i].size(); ++j)
	{
		if (vis[tree[i][j]]) continue;
		int ans = dfs(tree[i][j]);
		im[i] += temp*ans;
		if (im[i] > mod) im[i]%= mod;
		temp += ans;
		ret += ans;
	}
    im[i] = im[i]*2 + 1;
	vis[i] = 0;
	return ret;
}


int main()
{ 
	int t,n;
	long long sum = 0;
	scanf("%d",&t);
	while (t--)
	{
		
		scanf("%d",&n);
		for(int i = 0; i<n-1; ++i)
		{
			int a,b;
			scanf("%d",&a);
			scanf("%d",&b);
            tree[a].push_back(b);
            tree[b].push_back(a);
		}

		dfs(1);

        for (int i = 1; i<=n; ++i) sum = (sum + im[i]*i % mod) % mod;
		printf("%lld\n",sum);

	    for(int i = 0; i<= n; i++) {tree[i].clear(); im[i] = 0;}
	    sum = 0;
	}
return 0;
}