#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <string>
#include <vector>
 
using namespace std;
 
const long long int MOD = 1000000007;
 
vector<vector<int> > M;
vector<bool> visit;
vector<int> size;
vector<long long> imp;
 
int DFS(int v)
{
	if(visit[v])
		return 0;
 
	visit[v] = true;
 
	int n=M[v].size();
 
	long long sum=1;
	for(int i=0;i<n;i++){
		int x = DFS(M[v][i]);
		
		imp[v] += (2*(sum*x)%MOD)%MOD;
		sum += x;
		size[v] += x;
	}
	return size[v];
}
int main()
{
	int t;
	scanf("%d", &t);
	
	while(t--)
	{
		int N;
		scanf("%d", &N);
 
		visit = vector<bool>(N+1, false);
		M = vector<vector<int> >(N+1, vector<int>());
		size = vector<int>(N+1, 1);
		imp = vector<long long>(N+1, 1);
		int u,v;
		for(int i=1;i<=N-1;i++)
		{
			scanf("%d%d", &u, &v);
 
			M[u].push_back(v);
			M[v].push_back(u);
		}
 
		DFS(1);
 
		long long int sol = 0;
		for(int i=1;i<=N;i++){
			sol = (sol + (i*imp[i])%MOD)%MOD;
		}
 
		cout << sol <<"\n";
	}
} 
