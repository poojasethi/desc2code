#include  <cstdio>
#include "vector"
#include "queue"
#include "stack"
#define max 10001
#define swap(x,y,t) 	{ t=x;x=y;y=t;	}
#define mod(x)	{	if(x  >= 1000000007)  x  %= 1000000007;		}
using namespace std;

vector<int>  input[max];
int temp[max];
int numelSubtree[max];
int n;
unsigned long long sum,prod,sum1,sum2;

void readInput(){
	int a,b,i;
	for(i=0;i<=n;i++){	
		input[i].resize(0);	
		input[i].push_back(0);
	}
	for(i=0;i<n-1;i++){
		scanf("%d %d",&a,&b);
		input[a][0]++;
		input[a].push_back(b);
		input[b][0]++;
		input[b].push_back(a);
	}
}

void makeTree(){
	int top,i,j,k;
	for(i=1;i<=n;i++)	temp[i]=0;
	temp[1]=1;
	queue<int> q;
	q.push(1);
	while(!q.empty()){
		top = q.front();
		q.pop();
		i=1;
		k=input[top][0];
		while(i<=k){
			if(temp[input[top][i]] == 0){
				temp[input[top][i]] =  1;
				q.push(input[top][i]);
				i++;
			}
			else{
					swap(input[top][i],input[top][k],j);
					k--;
					input[top][0]--;
			}
		}
	}
}

void calculateSum(){
	int top,i,j;
	stack<int> s;
	s.push(1);
	numelSubtree[1]=1;
	sum =  0;
	while(!s.empty()){
		top = s.top();
		if(numelSubtree[top] > input[top][0]){
			temp[top]=0;prod=sum1=sum2=0;
			for(i=1;i<=input[top][0];i++){
				temp[top] += (temp[input[top][i]]+1);
				prod += (temp[input[top][i]]+1)*(temp[input[top][i]]+1);
			}
			sum1= temp[top]*temp[top];
			sum2= sum1-prod;
			sum2 += 2*temp[top]+1;
			mod(sum2);
			//printf("%d -- %llu\n",top,sum2);
			sum += top*sum2;
			mod(sum);
			s.pop();
		}
		else{
			j=input[top][numelSubtree[top]];
			s.push(j);
			numelSubtree[j] = 1;
			numelSubtree[top]++;
		}
	}
}

int main(){
	int t,i,j;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		readInput();
		makeTree();
		/*for(i=0;i<=n;i++){
			for(j=0;j<=n;j++) printf("%d  ",input[i][j]);
			printf("\n");
		}*/
		calculateSum();
		printf("%llu\n",sum);
	}
	return 0;
}