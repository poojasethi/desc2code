#include<iostream>
#include<set>
#include<map>
#include<vector>
#include<list>
#include<string.h>
#include<cmath>
#include<algorithm>
#include<string>
#include<sstream>
#include<stack>
using namespace std;

typedef unsigned long long int ull;
typedef long long int ll;

#define pb push_back
#define mp make_pair
#define S second
#define F first
#define all(c) (c).begin(), (c).end()
#define vectorIterate(v) for(auto it=v.begin(); it!=v.end();it++)

ll gcd(ll a, ll b)
{
   if (b==0) return a;
   return gcd(b,a%b);
}

ll abs1(ll a)
{
	if(a<0)
	return -1*a;
	else return a;
}

ll power(ll base, ll n, ll M)
{
    if(n==0)
    return 1;
    if(n==1)
    return base;
    ll halfn=power(base,n/2,M);
    if(n%2==0)
    return ( halfn * halfn ) % M;
    else
    return ( ( ( halfn * halfn ) % M ) * base ) % M;
}

ll findMMI(ll n,ll M)
{
    return power(n,M-2,M);
}

ll max2(ll a, ll b)
{
	if(a>b)
	return a;
	else return b;
}

ll max3(ll a, ll b, ll c)
{
	max2(max2(a, b), c);
}

ll min2(ll a, ll b)
{
	if(a<b)
	return a;
	else return b;
}

ll min3(ll a, ll b, ll c)
{
	return min2(min2(a, b), c);
}

int arr[1000001], p[1000002];

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll t;
	cin>>t;
	while(t--)
	{
		ll n, h;
		cin>>n>>h;
		for(ll i=0;i<=n;i++)
		{
			arr[i]=0;
			p[i]=0;
		}
		for(ll i=0;i<n;i++)
		{
			ll l, r;
			cin>>l>>r;
			p[l]+=1;
			p[r+1]-=1;
		}
		for(ll i=1;i<=n;i++)
		p[i]=p[i]+p[i-1];
		for(ll i=0;i<n;i++)
		arr[i]+=p[i];
		ll i=0, j=0, ct=0, tt=0, mx=-1;
		while(j<n)
		{
			if(i>j)
			{
				j++;
				tt=0;
				i=j;
				ct=0;
			}
			else if(ct<h)
			{
				tt+=(n-arr[j]);
				j++;
				ct++;
			}
			else
			{
				if(mx==-1)
				mx=tt;
				else if(mx>tt)
				mx=tt;
				tt-=(n-arr[i]);
				i++;
				ct--;
			}
		}
		if(ct==h)
		{
			if(mx==-1)
			mx=tt;
			else if(mx>tt)
			mx=tt;
			tt-=(n-arr[i]);
			i++;
			ct--;			
		}
		cout<<mx<<endl;
	}
	return 0;
}
