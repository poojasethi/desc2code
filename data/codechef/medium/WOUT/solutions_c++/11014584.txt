#include <iostream>
#include <bits/stdc++.h>

using namespace std;

typedef long long ll;

int main()
{
	ll t,n,h,li,hi,currMin;
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld",&n);
		scanf("%lld",&h);
		vector<ll> prefSum(n,n);
		vector<ll> subSum(n,0);
		for(ll i=0;i<n;i++)
		{
			scanf("%lld",&li);
			scanf("%lld",&hi);
			subSum[li]--;
			if(hi!=(n-1)) subSum[hi+1]++;
		}
		//cout<<"here"<<endl;
		for(ll i=1;i<n;i++)
		{
			subSum[i] = subSum[i] + subSum[i-1]; 
		}

		for(ll i=0;i<n;i++)
		{
			prefSum[i] = prefSum[i] + subSum[i]; 
		}

		for(ll i=1;i<n;i++)
		{
			prefSum[i] = prefSum[i] + prefSum[i-1]; 
		}

		ll minBlocks = n*n+1;
		for(ll i=0;i<n;i++)
		{
			if((i+h-1)>=n) break;
			if(i!=0) currMin = prefSum[i+h-1]- prefSum[i-1];
			else	 currMin = prefSum[h-1];
			if(currMin<minBlocks)
				minBlocks = currMin;
		}
		cout<<minBlocks<<endl;
		prefSum.clear();
		subSum.clear();
	}
	return 0;
}