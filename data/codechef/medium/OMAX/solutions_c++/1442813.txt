#include <iostream>
#include <cstring>
#include <fstream>
#include <cmath>
#include <algorithm>
#include <complex>
#include <vector>
#include <iomanip>
#include <cassert>

using namespace std;

#define in cin
#define out cout
#define dout if(true) cout

#define FORALL(i,a,b) for(int i=(a);i<=(b);++i)
#define FOR(i,n) FORALL(i,0,((n)-1))
#define FORB(i,a,b) for(int i=(a);i>=(b);--i)

typedef unsigned int uint;
typedef long long ll;
typedef long double ld;

#define MAXN 80
int A[MAXN][MAXN];
int sum[MAXN][MAXN];
int ans[MAXN][MAXN][MAXN][MAXN];

#define query(i,j,k,h) (sum[k][h] - sum[k][j-1] - sum[i-1][h] + sum[i-1][j-1])
#define gett(z,zz,zzz,zzzz) (((z>zzz) || (zz>zzzz))?INF:ans[z][zz][zzz][zzzz])

#define INF 600000000

int main(){
	memset(A,0,sizeof(A));
	memset(sum,0,sizeof(sum));
	while(true){
		int H,W;
		scanf("%d %d", &H, &W);
		if (!(H|W)) break;
		FORALL(r,1,H) FORALL(c,1,W)
			scanf("%d",&A[r][c]),
			sum[r][c] = A[r][c] + sum[r-1][c] + sum[r][c-1] - sum[r-1][c-1];

		int res = query(1,1,H,W) - A[2][2];	//some random answer to get the ball rolling
		int p,q,r,s;
		FORALL(h,1,H) FORALL(w,1,W){
			for(int a=1, c=h;c<=H;++a,++c){
				for(int b=1,d=w;d<=W;++b,++d){
					p = gett(a+1,b,c,d);
					q = gett(a,b+1,c,d);
					r = gett(a,b,c-1,d);
					s = gett(a,b,c,d-1);
					
					if (q<p) p = q;
					if (s<r) r = s;
					if (r<p) p = r;
					
					ans[a][b][c][d] = min(query(a,b,c,d),p);
					
					int val = query(a,b,c,d) - gett(a+1,b+1,c-1,d-1);
					if (val > res) res = val;
				}
			}
		}
		
		printf("%d\n",res);
	}
}


