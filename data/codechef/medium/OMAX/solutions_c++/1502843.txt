#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>
#include<set>
#include<climits>
#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define PB(x) push_back(x)
#define MP(x,y) make_pair(x,y)
#define F first
#define S second
#define SS ({int x;scanf("%d",&x);x;})
#define bitcount  __builtin_popcount
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef vector<int> vi;

#define SUM(a, b) ((a>=0 && b>=0) ? sum[a][b] : 0)
#define SUM2(i, j, k, l) ( sum[k][l] - SUM(k, j-1) - SUM(i-1, l) + SUM(i-1, j-1) )

int arr[78][78], min_submat[78][78][78][78], sum[78][78];

int main(){
    //freopen("input.txt", "r", stdin);
    int m,n;
    m=SS;n=SS;
    while(m){
        
        for(int i=0; i<m; i++)
            for(int j=0; j<n; j++){
                arr[i][j] = SS;
                sum[i][j] = SUM(i, j-1) + SUM(i-1, j) - SUM(i-1, j-1) + arr[i][j];
            }

        for(int i=m-1; i>=0; i--)
            for(int j=n-1; j>=0; j--)
                for(int k=i; k<m; k++)
                    for(int l=j; l<n; l++){
                        min_submat[i][j][k][l] = SUM2(i, j, k, l);
                        if(i+1 <= k)
                            min_submat[i][j][k][l] = min(min_submat[i][j][k][l], min(min_submat[i+1][j][k][l], min_submat[i][j][k-1][l]));
                        if(j+1 <= l)
                            min_submat[i][j][k][l] = min(min_submat[i][j][k][l], min(min_submat[i][j+1][k][l], min_submat[i][j][k][l-1]));
                    }


        int ans = INT_MIN;
        for(int i=0; i<m; i++)
            for(int j=0; j<n; j++)
                for(int k=i+2; k<m; k++)
                    for(int l=j+2; l<n; l++)
                        ans = max(ans, SUM2(i, j, k, l) - min_submat[i+1][j+1][k-1][l-1]);
         
        printf("%d\n",ans);
        m=SS;n=SS;
    }           
}
