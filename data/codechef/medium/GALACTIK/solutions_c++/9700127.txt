#include <bits/stdc++.h>
#define min(a,b) a>b?b:a
using namespace std;
 
 int a[1000001],b[1000001];
int arr[100001];
int size[100001];
long long int min_cost[100001]; 
int root(int i)
{
    while(arr[i]!=i)
    {
        i=arr[i];
    }
    return i;
}
void funion(int a,int b)
{
    int root_a=root(a);
    int root_b=root(b);
    if(root_a==root_b)
    return;
    if(size[root_a]>=size[root_b])
    {
        arr[root_b]=root_a;
        size[root_a]+=size[root_b];
        
        if(min_cost[root_a]==-1)
        min_cost[root_a]=min_cost[root_b];
        else
        if(min_cost[root_b]==-1)
        {}
        else
        min_cost[root_a]=min(min_cost[root_b],min_cost[root_a]);
        
        
    }
    else
    {
        arr[root_a]=root_b;
        size[root_b]+=size[root_a];
        
        if(min_cost[root_b]==-1)
        min_cost[root_b]=min_cost[root_a];
        else
        if(min_cost[root_a]==-1)
        {}
        else
        min_cost[root_b]=min(min_cost[root_a],min_cost[root_b]);
        
    }
}
 
int main() {
	int t,n,m,i;

	{
	    
	    scanf("%d %d",&n,&m);
	    for(i=1;i<=n;i++)
	    {
	        arr[i]=i;
	        size[i]=1;
	    }
	    
	    int i;
	    for(i=0;i<m;i++)
	    {
	        scanf("%d %d",&a[i],&b[i]);
	    }
	    for(i=1;i<=n;i++)
	    {
	        scanf("%lld",&min_cost[i]);
	        if(min_cost[i]<0)
	        {
	            min_cost[i]=-1;
	        }
	    }
	    for(i=0;i<m;i++)
	    {
            funion(a[i],b[i]);
	        
	        
	    }
	    int num=0;
	    
	    long long int min_ans=LLONG_MAX;
	    long long int ans=0;
	    bool flag=true;
	    for(i=1;i<=n;i++)
	    {
	        if(arr[i]==i)
	        {
	            num++;
	            if(min_cost[i]==-1)
	            {
	                flag=false;
	                break;
	            }
	            else
	            {
	                ans+=min_cost[i];
	                if(min_cost[i]<min_ans)
	                {
	                    
	                    min_ans=min_cost[i];
	                }
	            }
	        }
	    }
	    if(num==1)
	    printf("0\n");
	    else
	    if(flag)
	    
	    {
	        printf("%lld\n",ans+(num-2)*min_ans);
	    }
	    else
	    printf("-1\n");
	    
	}
	return 0;
}