#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<list>
#include<cstring>
#include<climits>
using namespace std;
const int MOD=1000000007;
#define Int long long
bool *visited;
list<int>*adj;
int mini=10001,*c;
void dfs(int v)
{
    visited[v]=true;
    list<int>::iterator i;
    for(i=adj[v].begin();i!=adj[v].end();i++)
    {
        if(!visited[*i])
        dfs(*i);
    }
    if(mini>c[v] && c[v]>=0)mini=c[v];
}
int main()
{

        int n,m;
        scanf("%d %d",&n,&m);
        adj=new list<int>[n];
        visited=new bool[n];
        c=new int[n];
        memset(visited,false,sizeof(bool)*n);
        while(m--)
        {
            int x,y;
            scanf("%d%d",&x,&y);x-=1;y-=1;
            adj[x].push_back(y);adj[y].push_back(x);
        }
        for(int i=0;i<n;i++)scanf("%d",&c[i]);
        int res=0,global_min=1000000,cost=0,flag=0;
        for(int i=0;i<n;i++)
        {
            if(!visited[i])
            {
                res++;mini=10001;
                dfs(i);
                if(mini==10001)
                {
                    cost=-1;
                    flag=1;
                    break;
                }
                if(mini<global_min)global_min=mini;
                cost+=mini;
            }
        }
        if(res==1)cost=0;
        else if(res>2 && flag==0){
            cost+=((res-2)*global_min);
        }
        printf("%d\n",cost);

    return 0;
}
