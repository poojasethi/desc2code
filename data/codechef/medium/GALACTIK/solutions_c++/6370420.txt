#include<stdio.h>
#include<iostream>
#include<algorithm>
using namespace std;
int p[100005];
int r[100005];
void init(int n)
{
for(int i=1;i<=n;i++){
 p[i]=i;
 r[i]=0;}
}
int find(int i)
{
 if(p[i]!=i)
   p[i]=find(p[i]);
 return p[i];
}
 void join(int x,int y)
{
 int e=find(x);int q=find(y);
 if(e==q)return;
 if(r[e]<r[q])p[e]=q;
 else{p[q]=e;if(r[e]==r[q])r[e]++;}
}
int main()
{
int i,k,n,m;
scanf("%d %d",&n,&m);
init(n);
while(m--)
{
int u,v;
scanf("%d %d",&u,&v);
join(u,v);
}//connected components
int cp[n+1];
int costm[n+1];
for(i=1;i<=n;i++)
{
cp[i]=0;
costm[i]=100005;
}
int minall=100005,com=0,c,sum=0;
for(i=1;i<=n;i++)
{
scanf("%d",&c);
k=find(i);
cp[k]++;
if(c>=0)
costm[k]=min(costm[k],c);
}//calc min cost for all subsets
int f=0;
for(i=1;i<=n;i++)
{
 if(cp[i]>0){
  com++;
  if(costm[i]==100005)f=1;
  minall=min(minall,costm[i]);sum+=costm[i];
}
}
if(com==1)printf("0\n");
else
{ if(f)
  printf("-1\n");
  else
   printf("%d\n",(minall*(com-1))+sum-minall);
}
return 0;
}
