#include<bits/stdc++.h>
using namespace std;
#define rep(i,i1,n) for(int i=i1;i<n;i++)
#define pb push_back
#define MP make_pair
#define ALL(c) (c).begin(),(c).end()
#define F first
#define S second
#define MOD 1000000007
#define si1(c) scanf("%d",&c);
#define sll1(c) scanf("%lld",&c);
#define pri1(c) printf("%d\n",c);
#define prll1(c) printf("%lld\n",c);
#define newl cout<<"\n"
typedef long long ll;
//-----------------------------------------------------
ll powmod(ll a,ll b)
{
    if(b==0)return 1;
    ll x=powmod(a,b/2);
    ll y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y%MOD;
}
//-------------------------------------------------------
vector<int> g[100010];
int visited[100010],visited1[100010],min1;
int count1=0;
int a[100010];
vector<int> v;
void dfs(int z)
{
    visited[z]=1;
    if(a[z-1]>=0)
        min1=min(min1,a[z-1]);
    rep(i,0,g[z].size())
    {
        if(!visited[g[z][i]])
            dfs(g[z][i]);
    }
}
void dfs1(int z)
{
    visited1[z]=1;
    count1++;
    rep(i,0,g[z].size())
    {
        if(!visited1[g[z][i]])
            dfs1(g[z][i]);
    }
}

int main()
{
    int n,m;
    si1(n);
    si1(m);
    rep(i,0,m)
    {
        int x,y;
        si1(x);si1(y);
        g[x].pb(y);
        g[y].pb(x);
    }
    rep(i,0,n)
        si1(a[i]);
    min1=INT_MAX;
    int min2=INT_MAX;
    int flag=0;
    memset(visited,0,sizeof(visited));
    memset(visited1,0,sizeof(visited1));
    rep(i,1,n+1)
    {
        if(!visited[i])
        {
            dfs(i);
            if(min1!=INT_MAX)
            {
            v.pb(min1);
            min2=min(min2,min1);
            }
            else
                flag=1;
            min1=INT_MAX;
        }
    }
    if(flag==1)
    {
        dfs1(1);
        if(count1!=n)
        {
            printf("-1\n");
            return 0;
        }
    }
    ll cost=0;
    rep(i,0,v.size())
    {
        cost+=v[i]+min2;
    }
    if(v.size())
    {
        cost-=2*min2;
    }
    printf("%lld\n",cost);
    return 0;
}
