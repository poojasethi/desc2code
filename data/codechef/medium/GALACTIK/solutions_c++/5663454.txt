#include<iostream>
#include<cstdio>
#define INF 999999999ll
using namespace std;

int parent[100001]={0};
long long hash[100001];
int value[100001]={0};

void init(int v)
{	
	for(int i=1;i<=v;i++)
	parent[i]=i;
}

int findset(int x)
{
	int rep=x;
	
	if(parent[rep]!=rep)
	parent[rep]=findset(parent[rep]);
	
	return parent[rep];
}

void unions(int x,int y)
{

	int rep1=findset(x);
	int rep2=findset(y);
	
	if(rep1==rep2)
	return ;
	
	parent[rep1]=rep2;
}

int main()
{

	int e,v;
	int x,y;
	long long ans=0;
	
	scanf("%d %d",&v,&e);
	init(v);	
	
	for(int i=0;i<e;i++)
	{
		int tmp1,tmp2;
		scanf("%d %d",&tmp1,&tmp2);
		unions(tmp1,tmp2);
	}


	
	for(int i=1;i<=v;i++)
		{
		scanf("%d",&value[i]);
		hash[i]=INF;
		}
	int hsh[100009]={0};
	long long cnt1=0;
	for(int i=1;i<=v;i++)
	{
		
			int find=findset(i);
			if(hsh[find]==0)
			{
				cnt1++;
				hsh[find]=1;
			}
			if(value[i]<hash[find] && value[i]>=0)
			hash[find]=value[i];
			
			
			
			//cout<<find<<" "<<hash[find]<<"\n------------------\n";
	}
	long long minv=INF,cnt=0;
	for(int i=1;i<=v;i++)
	{
		if(hash[i]<INF)
		{
		cnt++;
		if(hash[i]<minv)
			minv=hash[i];
		ans+=hash[i];
		}
	}
	if((cnt-2)>=0)
		ans+=(minv*(cnt-2));
	if(cnt1!=cnt)
		ans=-1;
	if(cnt1==1)
		ans=0;
	printf("%lld\n",ans);
return 0;
}