#include <bits/stdc++.h>

#define For(i, be, en) for(i = be; i <= en; i++)
#define Forr(i, be, en) for(int i = be; i >= en; i--)

using namespace std;

vector<vector<int> > g;
bool vis[100005];
int tax[100005];
int mi = 1000000;

void dfs(int v)
{
    vis[v] = true;

    if (tax[v] >= 0 && tax[v] < mi) {
        mi = tax[v];
    }

    for (int i = 0; i < g[v].size(); i++) {
        if (vis[g[v][i]] == false) {
            dfs(g[v][i]);
        }
    }

}

int main()
{

    int n, m, u, v, f, cm, gm ;
    int ans;
    map <pair <int, int>, int > ma;
    scanf("%d%d", &n, &m);

    g = vector<vector<int> >(n);

    while (m--) {
        scanf("%d%d", &u, &v);
        if (ma.find(make_pair(u - 1, v - 1)) == ma.end() && ma.find(make_pair(v - 1, u - 1)) == ma.end()) {
            g[u - 1].push_back(v - 1);
            g[v - 1].push_back(u - 1);
            ma.insert(make_pair(make_pair(u - 1, v - 1), 1));
        }
    }

    for (int i = 0; i < n; i++) {
        scanf("%d", &tax[i]);
    }

    memset(vis, false, 100005);
    ans = 0;
    cm = 0;
    gm = 100000000;
    f = 0;
    for (int i = 0; i < n; i++) {
        if (vis[i] == false) {
            cm++;
            mi = 1000000;
            dfs(i);

            if (mi == 1000000) {
                f = 1;
                break;
            }

            ans += mi;
            if (mi < gm) {
                gm = mi;
            }
        }
    }

    if (cm == 1) {
        printf("0\n");
    } else if (f == 1) {
        printf("-1\n");
    } else {
        if (cm - 2 >= 0) {
            ans += (cm - 2) * gm;
            printf("%d\n", ans);
        }
    }

	return 0;
}
