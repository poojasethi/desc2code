#include<bits/stdc++.h>
using namespace std;

#define pb push_back
#define lli long long
#define mp make_pair
#define gc getchar_unlocked

double EPS = 1e-9 ;

/*Fast i/o */
void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
 
const int limit = 100005;
const int oo = numeric_limits<int>::max();
vector< vector<int> > adj(limit);
bool visited[limit];
int cost[limit];

int loc = oo;
int lowest = oo;
	
void DFS(int x){
	if(visited[x]) return;
	visited[x] = true;
	for(int i=0;i<adj[x].size();i++){
		DFS(adj[x][i]);
	}
	if(cost[x] >= 0)
		loc = min(loc,cost[x]);
	return;
}

int main(){
	int n,m,a,b;
	memset(visited,0,sizeof(visited));
	scanint(n);
	scanint(m);
	for(int i=0;i<m;i++){
		scanint(a);
		scanint(b);
		adj[a].pb(b);
		adj[b].pb(a);
	}
	for(int i=1;i<=n;i++)
		scanf("%d",&cost[i]);
	lli ans = 0;
	int cnt = 0;
	bool posi = true;
	for(int i=1;i<=n;i++){
		if(!visited[i]){
			cnt++;
			loc = oo;
			DFS(i);	
			if(loc==oo){
				posi = false;
				break;
			}
			lowest = min(lowest,loc);
			ans += (long long)loc;
		}
	}
	if(cnt==1){
		printf("0\n");
		return 0;
	}
	if(!posi){
		printf("-1\n");
		return 0;
	}
	ans = ans + (long long)(cnt-2)*(lowest);
	printf("%lld\n",ans);
	return 0;
}
