def visit(x):
    #print 'visited called with '+str(x)
    global count,visited,path
    #print visited
    for i in path[x]:
        #print 'i is '+str(i)
        if(visited[i]==0):
            visited[i]=1
            count+=1
            visit(i)

def getcost(x):
    global count,cost,visited
    val=cost[x]
    visited[x]=1
    count+=1
    for i in path[x]:
        if(visited[i]==0):
            v=getcost(i)
            if(v>=0):
                if(val<0):
                    val=v
                else:
                    val=min(val,v)
    return val

n,m=[int(u) for u in raw_input().split()]
#print n,m
visited=[0]*(n+1)
path=[]
for i in range(n+1):
    path.append([])
cost=[0]*(n+1)
count=1
visited[1]=1

def mainf():
    global count,cost,visited,path
    for i in range(m):
        a,b=[int(u) for u in raw_input().split()]
        if(visited[a]==1 and visited[b]==1):
            continue
        elif(visited[a]==1):
            visited[b]=1
            count+=1
            visit(b)
    
        elif(visited[b]==1):
            visited[a]=1
            count+=1
            visit(a)
    
        else:
            path[a].append(b)
            path[b].append(a)
        #print path
    answer=0
    if(count==n):
        print '0'
        return

    cost2=[]
    pos=0
    ct=-1
    min_c=110001
    cos=110001
    flag=True
    for i in range(1,n+1):
        ct=int(raw_input())
        if((ct>=0) and visited[i]==1):                
            min_c=min(min_c,ct)
            flag=False
        cost[i]=ct

    if(flag and min_c==110001):
        print '-1'
        return
    
    ct=0
    for i in range(2,n+1):
        if(visited[i]!=1):
            c=getcost(i)
            if(c<0):
                print '-1'
                return
            else:
                cost2.append(c)
                if(c<cos):
                    pos=ct
                    cos=c
                ct+=1
    
    answer+=(min_c + cos)
    min_c=min(min_c,cos)
    for i in range(0,pos):
        answer+=(cost2[i])
    for i in range(pos+1,len(cost2)):
        answer+=(cost2[i])
        
    answer+=((len(cost2))-1)*min_c
    print answer
    
mainf()
