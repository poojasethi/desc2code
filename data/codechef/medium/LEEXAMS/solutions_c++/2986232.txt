#include <iostream>
#include <cstdio>
#include <cmath>
#include <string.h>
#include <vector>
#include <queue>
#include <algorithm>
#include <fstream>
using namespace std;
typedef unsigned long long LL;
int n;
LL MOD = 1e9 + 7;
LL convert( LL n )
{
    LL w = 1, res = 0;
    while ( n )
    {
        int digit = n % 2;
        res += digit * w;
        w *= 10;
        n /= 2;
    }
    return res;
}
LL superPower( LL a, LL b )
{
    LL w = a;
    LL res = 1;
    while ( b )
    {
        if ( b % 2 )
        res = ( res * w ) % MOD;
        b /= 2;
        w = ( w * w ) % MOD;
    }

    return res;
}
struct node
{
    double p;
    int a, b;
}num[ 50 ];
int use[ 17 ];
double search( int id, double p )
{
    if ( id == n )
    return p;
    double res = 0;
    if ( !use[ num[ id ].a ] )
    {
        use[ num[ id ].a ] = 1;
        res += search( id + 1, p * num[ id ].p );
        use[ num[ id ].a ] = 0;
    }
    if ( !use[ num[ id ].b ] )
    {
        use[ num[ id ].b ] = 1;
        res += search( id + 1, p * ( 1 - num[ id ].p ) );
        use[ num[ id ].b ] = 0;
    }
    return res;
}
int main()
{
    int test;
    cin >> test;
    while ( test-- )
    {
        memset( use, 0, sizeof( use ) );
        cin >> n;

        for ( int i = 0; i < n; i++ )
        {
            scanf( "%lf %d %d", &num[ i ].p, &num[ i ].a, &num[ i ].b );
            num[ i ].p /= 100;
        }
         if ( n > 16 )
        {
            printf( "%.9lf\n", 0.0 );
            continue;
        }
        printf( "%.9lf\n", search( 0, 1.0 ) );
    }
    return 0;
}
