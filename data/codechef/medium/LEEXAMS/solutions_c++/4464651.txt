#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <string>
#include <stack>
#include <queue>
#include <set>



#define forn(i,n) for(int i = 0; i < n; i++)
#define forn1(i,n) for(int i = 1; i <= n; i++)
#define forall(it, vec) for(typeof(vec.begin()) it = vec.begin(); it != vec.end(); it++)
#define ON(mask,i) (mask | (1L << (i)))
#define OFF(mask,i) (mask &  (-1 ^ (1L<<(i))) )
#define TOGGLE(mask,i) (mask ^ (1L << (i)))
#define isON(mask, i) (mask & (1L<<(i)))
#define mp make_pair
using namespace std;
typedef pair<int, int> pii;
typedef long long ll;
double p[55];
int a[55],b[55];
int T, n;
double memo[1<<16][20];
double solve(int mask, int pos){
	if(pos == n) return 1;
	if(memo[mask][pos] != -1) return memo[mask][pos];
	double res = 0.0;
	if(isON(mask,a[pos]))
		res += solve(OFF(mask,a[pos]), pos+1) * p[pos];
	if(isON(mask,b[pos]))
		res += solve(OFF(mask,b[pos]), pos+1) * (1.0-p[pos]);
	return memo[mask][pos] = res;
}
int main(){

	cin >> T;
	forn(t,T){
		forn(i,1<<16) forn(j,20) memo[i][j] = -1.0;
		cin >> n;
		forn(i,n){
			cin >> p[i] >> a[i] >> b[i];
			a[i]--; b[i]--;
			p[i] /= 100.0;
		}
		double res = solve( (1<<16)-1, 0);
		printf("%.9lf\n",res);
	} 
	return 0;
}
