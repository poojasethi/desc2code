// laflare
// LEEXAMS
#include<iostream>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<stack>
#include<string>
#include<algorithm>
#include<functional>
#include<iomanip>
#include<cstdio>
#include<cmath>
#include<limits.h>
#include<cstring>
#include<cstdlib>
#include<cfloat>
#include<cassert>
#define maxm(a,b) a>b?a:b;
#define minm(a,b) a<b?a:b;
using namespace std;
//M lazy ;)
typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
typedef istringstream iss;
typedef ostringstream oss;
typedef map<int,int> mp;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define ln length()
#define rep(i,n) for(int i=0;i<n;i++)
#define fu(i,a,n) for(int i=a;i<=n;i++)
#define fd(i,n,a) for(int i=n;i>=a;i--)
#define all(a)  a.begin(),a.end()
#define ESP (1e-9)
#define gi(n) scanf("%d",&n)
#define gl(n) cin >> n
#define pi(n) printf("%d",n)
#define pl(n) cout << n
#define ps printf(" ")
#define pn printf("\n")
#define dg(n,s); printf("%s %d",s,n)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
#define traverse_map(a,b) for(mp::iterator it=a;it!=b;++it)
#define MOD 1000000007
#define MAX 1000001
#define cases() int t; cin>>t; while(t--)
// fast input function
#define getcx getchar_unlocked
// fast input function
#ifdef ONLINE_JUDGE
 inline void inp( int &n )
 {
    n=0;
    int ch=getcx();int sign=1;
    while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

    while(  ch >= '0' && ch <= '9' )
            n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    n=n*sign;
  }
#else
inline void inp(int &n){
 cin>>n;
}
#endif
/*
inline long long inp(){
	char c = getchar_unlocked();
	long long n = 0;
	while(c < '0' || c > '9') c = getchar_unlocked();
	while(c >= '0' && c <= '9')
		n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();
	return n;
}

#define pc putchar_unlocked
inline void oup(int n){
	if(!n) pc('0');
	char pb[2];
	int pi = 0;
	while(n) pb[pi++] = (n%10) + '0', n /= 10;
	while(pi) pc(pb[--pi]);
}*/
int array[17]={0};
double ans;
int *A,*B,*P;
int mark[17];
void precalculate(int i,double prob,int n)
{
   if(i==n){
//	cout<<prob<<endl;
	ans+=prob;
	return;
   }
   if(!mark[A[i]])
   {
	 mark[A[i]]=1;
	 precalculate(i+1,prob*(P[i]/100.0),n);
	 mark[A[i]]=0;
   }
   if(!mark[B[i]])
   {
	 mark[B[i]]=1;
	 precalculate(i+1,prob*((100-P[i])/100.0),n);
	 mark[B[i]]=0;
   }
}
int main(){
 int t;
 inp(t);
 while(t--)
 {
		int n;
		inp(n);
		P=(int*)malloc(n*sizeof(int));
        A=(int*)malloc(n*sizeof(int));
        B=(int*)malloc(n*sizeof(int));
		int i;
		rep(i,n)
		{
			cin>>P[i];
			inp(A[i]);
			inp(B[i]);
		}
		if(n>16)
		 printf("%.9lf\n",0.0);
		else
		{   ans=0.0;
			memset(mark,0,sizeof(mark));
			precalculate(0,1.0,n);
			printf("%.9lf\n",ans);
		}
		free(A);
		free(B);
		free(P);
		
 }
 return 0;
}
