#! /usr/bin/env python
# -* - coding: UTF-8 -* -
rounds = int(raw_input())

A,B,P = [],[],[]

def main():
    for _ in range(rounds):
        tickets = int(raw_input())
        global A, B, P
        A,B,P = [],[],[]

        for _ in range(tickets):
            p, a, b = raw_input().split(" ")
            P.append(int(p))
            A.append(int(a))
            B.append(int(b))
        # compute probability of lossing game
        # width-first traverse
        stack = []
        result = 0
        stack.insert(0, (0, 1.0, 0))
        while(len(stack) > 0):
            bits, prob, i = stack.pop()
            if i  == tickets:
                result += prob
                continue
            for b, p in wins(bits, i):
                    stack.insert(0, (b, prob * p, i + 1))
        print result

def wins(bits, i):
    if i >= len(A):
        return
    p1, p2 = 0, 0
    if not (bits & 1 << A[i]):
        yield bits | 1 << A[i], P[i] / 100.0
    if not (bits & 1 << B[i]):
        yield bits | 1 << B[i], (100 - P[i]) / 100.0

if __name__ == '__main__':
    main()
