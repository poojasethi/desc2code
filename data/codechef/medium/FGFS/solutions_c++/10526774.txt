#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<queue>
#include<cstdlib>
#include<set>
#include<map>
#include<functional>
#include<cmath>
#include<assert.h>
using namespace std;

#define MEM(a,b) memset(a,(b),sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define FOR(i,a,n) for(i=a;i<n;i++)
#define ALL(V) V.begin(),V.end()
#define IN(A,B,C) ((A) >= (B) && (A) <= (C))

typedef pair<int,int> PII;
typedef pair<double,double> PDD;
typedef vector<int> VI;
typedef vector<PII > VP;

#define AIN(A,B,C) assert(IN(A,B,C))

struct Customer{
    int s,e,p;
    Customer(int a, int b, int c){
        s=a; e=b; p=c;}
    Customer();
};

bool operator<(Customer A, Customer B){
    if (A.p != B.p) return A.p<B.p;
    return A.e < B.e;
}

int main(){
    int t,n,k;
    int s,f,p,i,j,ans;
    vector<Customer> ve;
    
    scanf("%d",&t);
    AIN(t,1,30);
    
    while(t--){
        scanf("%d %d",&n,&k);
        AIN(n,0,100000);
        AIN(k,1,1000000000);
        
        ve.clear();
        for(i=0;i<n;i++){
            scanf("%d %d %d",&s,&f,&p);
            AIN(s,0,f-1);
            AIN(f,s+1,1000000000);
            AIN(p,1,k);
            ve.push_back(Customer(s,f,p));
        }
        
        sort(ALL(ve));
        j=0;
        ans=n>0;
        for(i=0;i<n;i++){
            if(ve[i].p!=ve[j].p) { j=i; ans++; continue; }
            if(ve[i].s >= ve[j].e) {j=i; ans++; continue; }
        }
        
        printf("%d\n",ans);
    }    
    return 0;
}

 