#include<bits/stdc++.h>
#include<cstdio>
#include<iostream>
#define all(c) c.begin(),c.end()
#define sz(c) c.size()
#define mp make_pair
#define pb push_back
#define gc() getchar_unlocked()
#define pc(x) putchar_unlocked(x)
#define MAX 3001
using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
typedef map<string,int> msi;
typedef map<int,int> mii;
static inline int fastio()
{

    int x=0;
    char c=getchar_unlocked();
    while(c<'0'||c>'9')
        c=gc();
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=gc();
    }
    return x;
}


static inline void fastWrite(int x)
{
    char store[21]={' '};
    int l=0;
    do
    {
        store[l++]=x%10+'0';
        x/=10;
    }
    while(x!=0);
l--;
for(;l>=0;l--)
    pc(store[l]);
pc('\n');
return;
}





struct customer
{
    int s,f,c;
};

typedef struct customer cust;

bool cmp(cust a,cust b)
{
    return(a.f<b.f);
}







long long int f(vector<cust>& customers)
{
    int len=customers.size();
    int l=0;
    long long int ans=1LL;
    for(int i=1;i<len;i++)
    {
        if(customers[i].s>=customers[l].f)
        {
            ans++;
            l=i;
        }

    }
    return ans;


}


int main()
{
    int t,n,l,r,k;
    t=fastio();
    int i;
    while(t--)
    {
    n=fastio();
    k=fastio();
    map<int,vector<cust> > M;
    for(i=1;i<=n;i++)
    {
        cust temp;
       temp.s=fastio();
       temp.f=fastio();
       temp.c=fastio();
        M[temp.c].pb(temp);
    }

    long long int ans=0LL;
    for(map<int,vector<cust> >::iterator it=M.begin();it!=M.end();it++)
    {
        vector<cust> ptemp;
        ptemp=(*it).second;
        sort(ptemp.begin(),ptemp.end(),cmp);
        ans=ans+f(ptemp);

    }
    printf("%lld\n",ans);
    //fastWrite(ans);
    
}
return 0;
}


