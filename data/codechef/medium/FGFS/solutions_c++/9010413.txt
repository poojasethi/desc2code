#include <iostream>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
struct times
{
    int s,f,p;

};
bool cmp(times tt1,times tt2)
{
    return (tt1.f<tt2.f);

}

int ga(vector<times>&v)
{
  //cout<<"   :   ";
    int ans=1;
    int i=0,j;
    for(j=1;j<v.size();j++)
    {
        if(v[j].s>=v[i].f)
        {
            i=j;
            ans++;

        }
    }
 // cout<<ans;
 return ans;
}


int main()
{
    ios_base::sync_with_stdio(false);
   // cout << "Hello world!" << endl;
   int tst;
   cin>>tst;
   map<int,vector<times> > key;
   map<int,vector<times> > ::iterator i;
   //struct time
   while(tst--)
   {
       int n,k;
       cin>>n>>k;
       int j;

       for(j=0;j<n;j++)
       {
            times tt;
           cin>>tt.s>>tt.f>>tt.p;
           key[tt.p].push_back(tt);

           //if()
       }
       int answer=0;
       for(i=key.begin();i!=key.end();i++)
       {
           //cout<<" hey  ";
           vector<times> v=i->second;
            sort(v.begin(),v.end(),cmp);
            answer+=ga(v);

       }
       cout<<answer<<"\n";
       key.clear();
   }
    return 0;
}
