#include <cstdio>
#include <algorithm>

using namespace std;
 
int t, tc, n, m, xv, i;

int l[1000], b2r[5][5];
int rma[1000], vis[1000];
 
pair<long long,long long> r[1000];
 
bool dfs(int b) {
	for (int r=0; r<m; r++) if (vis[r]<xv && b2r[b][r]==tc) {
		vis[r]=xv;
		if (rma[r]<0 || dfs(rma[r])) {
			rma[r]=b;
			return true;
		} 
	}
	return false;
}
 
int main() {
	scanf("%d", &t);
	while(t--) {
		scanf("%d", &n);
		for (i=0; i<n; i++) 
			scanf("%d", &l[i]);
		
		sort(l, l+n-1);
	
		scanf("%d", &m);
		for (int i=0; i<m; i++) {
			int r1, r2;
			scanf("%d%d",&r1,&r2);
			long long v14=14, v22=22, t1=v22*r1, t2=v22*r2;

			rma[i]=-1;
			
			r[i]=make_pair(t2,t1);
		}
		sort(r, r+m);
		
		int re=0;
		for (int b=0; b<n; b++) {
			long long p=l[b]*(long long)14;
			for (int rx=0; rx<m; rx++) if (rma[rx]<0) {
				if (r[rx].second<=p && p<=r[rx].first) {
					rma[rx]=2;
					re++;
					break;
				}
			}
		}
		printf("%d\n", re);
		
	}
}
