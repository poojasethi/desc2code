// Program to print all prime factors
# include <iostream>
# include <stdio.h>
# include <math.h>
using namespace std;
long long int count_2 = 0 ,count_5 = 0;
// A function to print all prime factors of a given number n
void primeFactors(long long int n)
{
	count_2 = 0;
	count_5 = 0;
    // Print the number of 2s that divide n
    while (n%2 == 0)
    {
		count_2++;
        //printf("%d ", 2);
        n = n/2;
    }
 
    // n must be odd at this point.  So we can skip one element (Note i = i +2)
    for (long long int i = 3; i <= sqrt(n); i = i+2)
    {
        // While i divides n, print i and divide n
        while (n%i == 0)
        {
			if(i == 5)
				count_5++;
            //printf("%d ", i);
            n = n/i;
        }
    }
 
    // This condition is to handle the case whien n is a prime number
    // greater than 2
    if (n > 2)
    {
		if(n == 5 ) count_5++;
       // printf ("%d ", n);
   }
}
 
/* Driver program to test above function */
int main()
{
    long long int h,n,m;
    double b,q,w;
    cin >> m;
    for(long long int k = 0; k< m ; k++)
    {
		cin >> n;
		q = n;
		w = n;
		//primeFactors(n);
		//count_5 = log(n)/log(5);
		//count_2 = log2(n);
		//printf("%lld %lld ",count_2,count_5);
		count_2 = 0;
		count_5 = 0;
		while(1)
		{
			q =  q /2;
			if(ceil(q) != q)
				break;
			count_2++;
		}
		while(1)
		{
			w =  w / 5;
			if(ceil(w) != w)
				break;
			count_5++;
		}
		//printf("%lld %lld ",count_2,count_5);
		h = count_5 - count_2 ;
		if(h <= 0)
			cout << n << endl;
		else
		{
			b = h / 2.0;
			n = n*pow(4,ceil(b));
			cout << n << endl;
		}
		//printf("%lld %lld ",count_2,count_5);
	}
    return 0;
}
