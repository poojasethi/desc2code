#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <string>
#include <cstring>
#include <cctype>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>

using namespace std;

#define Watch(x) {for(int i = 0; i < (x).size();i++){cout << (x)[i] << endl;}}
#define Size(a) int((a).size())
#define For(k,a,b) for(typeof(a) k=(a); k <= (b); ++k)
#define Rep(k,a) for(int k=0; k < (a); ++k)
#define PB push_back
#define MP make_pair

typedef long long ll;
typedef unsigned long long ull;
typedef long double ld;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef vector<string> vs;
typedef pair<int,int> ii; 

int main(void)
{
  int t, old, change, votes, down, up, po, switchers;
  char c;

  while(1)
    {
      scanf("%d%*c", &t);
      up = down = po = old = 0;
      if (t > 0)
	{
	  while(t--)
	    {
	      scanf("%c %d%*c", &c, &votes);
	      
	      change = votes - old;
	      old = votes;

	      if (c == 'P')
		{
		  change -= (1 - po);
		  po = 1;
		}
	      
	      if (c == 'M')
		{
		  change -= (-1 - po);
		  po = -1;
		}
	      
	      if (change > 0)
		{
		  change = abs(change);
		  switchers = (change / 2 < down ? change / 2 : down);
		  down -= switchers;
		  up += switchers;
		  up += (change - 2 * switchers);
		}
	      else if (change < 0)
		{
		  change = abs(change);
		  switchers = (change / 2 < up ? change / 2 : up);
		  up -= switchers;
		  down += switchers;
		  down += (change - 2 * switchers);
		}
	    }
	  printf("%d\n", up + down);
	}
      else
	break;
    }

  return 0;
}
