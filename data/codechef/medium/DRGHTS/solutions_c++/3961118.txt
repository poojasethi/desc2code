#include<bits/stdc++.h>
#define pb push_back
using namespace std;
int searching(int);
 
vector<int> room[50006],rooms;
int n,m,a[50006]={0},visited[50006]={0},final=0;
long long counte=0,daddycount=0,drtcount=0,bcount=0,check=0; 
int main()
{
    int i,varys,j,k;
    scanf("%d%d",&n,&m);
 
    for(i=1;i<=n;i++)
    {
        scanf("%d",&a[i]);
        visited[i]=0;
    }
 
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&j,&k);
        room[j].pb(k);
        room[k].pb(j);
    }
 
    for(i=1;i<=n;i++)
    {
        if((a[i]==1)&&(visited[i]==0))
        {
        	bcount=0;
        	check=0;
        	counte=1;
            searching(i);
            //printf("%dnc\n",drtcount);
     //       if(check==1) drtcount=drtcount-1;
        }
 
        daddycount=daddycount+(bcount*(bcount-1))/2; 
        bcount=0;
        counte=0;
    }
    if(drtcount<0) drtcount=0;
    
    printf("%lld %lld",daddycount,drtcount);
}
 
 
int searching(int roomno)
{
	//printf("orde %d\n",roomno);
    int i;
   // if(visited[roomno]==0) { counte++;}
    
    //printf("c1 %d\n",counte);
    	
    if((a[roomno]==1)&&(visited[roomno]==0))
    {
    	
    	check++;
    	bcount++;
    //	drtcount=drtcount+counte;
    //	counte=0;
    }
 // printf("c2 %d\n",counte);
    visited[roomno]=1;
    
    for(i=0;i<room[roomno].size();i++)
    {
        if(visited[room[roomno][i]]==0) 
        {
        	counte++;
            if(a[room[roomno][i]] == 1)
            {
                 drtcount += counte;
                 counte =  0;
            }
			 searching(room[roomno][i]);
            counte--;
            if(counte<0)
                counte = 0;
         }
    }
 
 
    return 0;
} 