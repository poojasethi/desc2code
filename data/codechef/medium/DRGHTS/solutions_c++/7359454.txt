#include<bits/stdc++.h>
using namespace std;
vector <int> ad[50004];
int vis[50004],win[50004],I[50004],root[50004],par[50004],id;
long long bty;
int dfs(int u){
    vis[u]=1;
    I[u]=win[u];
    root[u]=id;
    if(win[u])
        ++bty;
    for(int i=0;i<ad[u].size();++i){
        if(vis[ad[u][i]]==0){
            par[ad[u][i]]=u;
            dfs(ad[u][i]);
            I[u]+=I[ad[u][i]];
        }
    }
}
int main(){
    int T,N,M;
    scanf("%d %d",&N,&M);
    for(int i=1;i<=N;++i)
        scanf("%d",&win[i]);
    for(int i=0;i<M;++i){
        int a,b;
        scanf("%d %d",&a,&b);
        ad[a].push_back(b);
        ad[b].push_back(a);
    }
    long long ans1=0,ans2=0;
    for(int i=1;i<=N;++i){
        if(vis[i]==0){
            bty=0;
            id=i;
            dfs(i);
            ans1=ans1+bty*(bty-1)/2;
        }
    }
    for(int i=1;i<=N;++i){
        int ch=0;
        for(int j=0;j<ad[i].size();++j){
            if(I[ad[i][j]] && ad[i][j]!=par[i])
                ++ch;
        }
        if(ch>1 || (win[i] && I[i]>1) || (I[root[i]]>I[i] && I[i]>0)){
            ++ans2;
        }
    }
    printf("%lld %lld",ans1,ans2);
    return 0;
}
