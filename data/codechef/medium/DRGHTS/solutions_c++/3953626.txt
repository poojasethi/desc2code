#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
vector< list<long int> > v(50001);
long int visited[50001] = {0};
long int predecessor[50001] = {0};
long int window[50001];
long int bra[50001] = {0};
long long int n , m , ans1 , ans2 , total;
 
long int DFS(long int i , long long int *count) {
    long int a;
    long int b;
    visited[i] = 1;
    if(window[i] == 1) {
                 (*count)++;
    }
    for(list<long int>::iterator it = v[i].begin(); it != v[i].end(); ++it) {
                  if(visited[*it] == 0) {
                                  predecessor[*it] = i;
                                    //printf("%ld n",*it);
                                  a = DFS(*it , count);
                                
                                  if(a == 1) {
                                       bra[i]++;
                                      //printf("%ld k",i);
                                  }
                  }
    }
    if(bra[i] >= 1) {
    //	printf("%ld m",i);
              return 1;
    } else {
           return 0;
    }
}
 
int main()
{
    long int i;
    long int j;
    long int a;
    long int b;
    long long int count;
    ans1 = 0;
    ans2 = 0;
    total = 0;
    cin >> n >> m;
    for(i = 1; i <= n; i++) {
          cin >> window[i];
          bra[i] = window[i];
          if(window[i] == 1) {
                       total++;
          }
    }
    for(i = 1; i <= m; i++) {
          cin >> a >> b;
          v[a].push_front(b);
          v[b].push_front(a);
    }
    for(i = 1; i <= n; i++) {
          if(visited[i] == 0) {
                        count = 0;
                        a = DFS(i , &count);
                        ans2 = ans2 + (count*(count - 1))/2;
                        
          }
    }
    
    if(total <= 1) {
             ans1 = 0;
             ans2 = 0;
    } else if(total >= 2) {
           for(i = 1; i <= n; i++) {
                   if(bra[i] >= 2){
                                  ans1++;
                 } else if((predecessor[i] != 0) && (bra[i] == 1)) {
                              a = predecessor[i];
                              b = 0;
                              while(a != 0) {
                                      if(bra[a] >= 2) {
                                                b = 1;
                                                break;
                                      }
                                      a = predecessor[a];
                              }
                              if(b == 1) {
                                   ans1++;
                              }
                 }
           }
    }
    cout << ans2 << " " << ans1;
    //system("pause");
    return 0;
}