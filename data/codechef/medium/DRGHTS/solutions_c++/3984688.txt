#include<cstdio>
#include<vector>

using namespace std;

vector<bool> visited(50000,false);
vector<bool> window;
vector<int> dummy;
vector<vector<int> > rooms(50000,dummy);
int call;

struct answers
{
int nPairs;
int totalPairs;
int nRooms;
};

struct answers answer(int index)
{
	vector<int> info;
	int ele,flag=0;
	struct answers data,temp;
	unsigned int i,size;
	data.nRooms=0;
	data.nPairs=0;
	data.totalPairs=0;
	info=rooms[index];
	size=info.size();
	visited[index]=true;
	if(size==0)
		return data;
	for(i=0;i<size;i++)
	{
		ele=info[i];
		if(visited[ele])
			continue;
		flag=1;
		temp=answer(ele);
//		if(window[index])	
//crucial line
		data.nPairs+=data.totalPairs*temp.totalPairs+temp.nPairs;
		data.totalPairs+=temp.totalPairs;

		data.nRooms+=temp.nRooms;
//		else
//			data.nPairs+=
//		data.nPairs+=temp.nPairs;
	}
	if(flag==0)
	{
		if(window[index])
		{
			data.totalPairs=1;		
			data.nRooms=1;
		}
		else
		{
			data.nRooms=0;
			data.totalPairs=0;
		}	
		data.nPairs=0;
//		printf("%d\n",index);
//		printf("%d\t%d\t%d\n",data.nPairs,data.totalPairs,data.nRooms);
		return data;
	}
	else
	{
		
		if(window[index])			
		{
			if(data.nRooms>0||call!=index)
				data.nRooms+=1;
			data.nPairs+=data.totalPairs;
			data.totalPairs+=1;
		}
		else if(data.nRooms>=1)
			data.nRooms+=1;
//		printf("%d\n",index);
//		printf("%d\t%d\t%d\n",data.nPairs,data.totalPairs,data.nRooms);
			
			
		return data;
	}
}

int main()
{
int N,M,W,W1,W2,rms=0,prs=0;
struct answers result;
scanf("%d%d",&N,&M);
for(int i=0;i<N;i++)
{
	scanf("%d",&W);
	if(W==1)
		window.push_back(true);
	else
		window.push_back(false);
}
for(int i=0;i<M;i++)
{
	scanf("%d%d",&W1,&W2);
	rooms[W1-1].push_back(W2-1);
	rooms[W2-1].push_back(W1-1);
}
for(int i=0;i<N;i++)
{
//	printf("vis%d\n",visited[i]);
	if(!visited[i] && window[i])
	{
		call=i;
		result=answer(i);
		if(result.nRooms>=1)
		{
			prs+=result.nPairs;
			rms+=result.nRooms;
		}
	}				
}
printf("%d %d\n",prs,rms);
}
