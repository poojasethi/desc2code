#include<iostream>
#include<stdlib.h>
#include<ctype.h>
#include<string.h>
#include<math.h>
#include<cstdio>
#include<vector>
#include<algorithm>
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define mod 1000010
//typedef vector<int>::iterator it
//typedef vector<int> vi;
//typedef vector< vector<int> > vvi;
typedef long long ll;
using namespace std;
int v[50010],w[50010];
vector< vector<int> > g(50010);
//vector<int>::iterator it1;
//int cnt;
int id,rootid[50010],ic[50010],parent[50010];
ll cnt;
void dfs(int i)
{ int m;

       rootid[i]=id;
         ic[i]=w[i];
          v[i]=1;

       if(w[i])
        cnt++;
        //cout<<cnt<<" \n";
        for(m=0;m<g[i].size();m++)
        {if(!v[g[i][m]])
          {parent[g[i][m]]=i;
          dfs(g[i][m]);

          ic[i]+=ic[g[i][m]];
          }

        }

}

int main()
{
    int n,m,i,j,k,a,b,cnt1=0,c;
    ll ans=0;
    scanf("%d%d",&n,&m);
    for(i=1;i<=n;i++)
    {
        scanf("%d",&j);
        w[i]=j;
    }
    for(i=1;i<=m;i++)
    {
        scanf("%d%d",&a,&b);
        g[a].pb(b);
        g[b].pb(a);
    }
    for(i=1;i<=n;i++)
    {
        //id=i;
        if(!v[i])
        {id=i;
        cnt=0;
        dfs(i);
        ans+=cnt*(cnt-1)/2;
        }
    }
    for(i=1;i<=n;i++)
    {
        if(ic[i]>0&&ic[i]<ic[rootid[i]])
        cnt1++;
        else if(w[i]==1&&ic[i]>1)
        cnt1++;
        else
        {
            c=0;
            for(j=0;j<g[i].size();j++)
            {
                if(parent[g[i][j]]==i&&ic[g[i][j]]>0)
                c++;
                if(c==2)
                break;
            }
            if(c>=2)
            cnt1++;
        }
    }
    printf("%lld %d",ans,cnt1);
   // cout<<"ic is:"<<ic[1]<<" "<<ic[2]<<" "<<ic[3]<<" "<<ic[4];
    return 0;
}

