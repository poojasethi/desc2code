#include<bits/stdc++.h>
/*
#include <iostream>
#include <vector>
#include<conio.h>
*/
#define ll int 
#define s(a) scanf("%d",&a)
#define mod 1000000009
#define fr(i,n) for(i=0;i<n;i++)

using namespace std;

struct node
{
  int pass,stat,c_win,pen;
};
/*bool cmp(node a,node b)
{
   return a.get<b.get;
}*/
vector< vector<ll> >next(50010);
ll visited[50010],win_st[50010];
node dfs(ll pos);
    
int main()
{
    ll n,m,i,j;
    s(n); s(m);
    
    fr(i,n)
    s(win_st[i+1]);
    
    
    
    //memset(next,0,sizeof(next));
    ll x,y;
    fr(i,m)
    {
        s(x); s(y);
        
        next[x].push_back(y);
        next[y].push_back(x);
        
    }
    
    long long int fans_r=0,fans_v=0;
    memset(visited,0,sizeof(visited));
    
    /*fr(i,n)
    {
       fr(j,next[i+1].size())
       cout<<next[i+1][j]<<" ";
       cout<<endl;
    }*/
    
    fr(i,n)
    {
       if(!visited[i+1])
       {
         //fr(j,next[i+1].size())
         visited[i+1]=1;
         node temp;
         temp = dfs(i+1);
         
         fans_r +=(1LL*(temp.c_win)*(temp.c_win-1))/2;
         fans_v+=temp.pass;
         
         if(temp.c_win>1)
         fans_v+=temp.c_win;
       }
       
      // cout<<"gello";
    }
    cout<<fans_r<<" "<<fans_v;
    return 0;
}

node dfs(ll pos)
{
   if(next[pos].size()==0)
   {
      if(win_st[pos])
      {
         node temp;
         temp.stat=1;
         temp.c_win=1;
         temp.pass=0;
         temp.pen=0;
         return temp;
      }
      else
      {
         node temp;
         temp.stat=0;
         temp.c_win=0;
         temp.pass=0;
         temp.pen=1;
         
         return temp;
      }
   }
   node ans,get;
   ans.stat=win_st[pos];
   ans.pen=0;
   ans.pass=0;
   ans.c_win=win_st[pos];
   ll count,i;   
   if(win_st[pos])
   count=1;
   else
   count=0;
   
   fr(i,next[pos].size())
   {
      if(visited[next[pos][i]]==0)
      {
          visited[next[pos][i]]=1;
          get = dfs(next[pos][i]);
          
          if(get.stat)
          {
             count++;
             ans.pen+=get.pen;
          }
          ans.stat|=get.stat;
          
          ans.c_win+=get.c_win;
          ans.pass+=get.pass;
      }
   }
   if(count>1)
   {
      ans.pass+= ans.pen;
      ans.pen=0;
   }
   if(!win_st[pos])
   { 
     if(count>1)
     {
      ans.pass++;
     }
     else
     {
       ans.pen++;
     }
   }
   
   //cout<<pos<<" "<<ans.stat<<" "<<ans.pen<<" "<<ans.pass<<" "<<ans.c_win<<" "<<endl;
   
   return ans;
}
