#include<bits/stdc++.h>
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
#define ll long long
#define N 50001
using namespace std;
int n,m;
vector <int> g[N];

bool visited[N];
bool open[N];
ll cnt;
ll scnt;

void dfs(int u) {
	visited[u]=true;
	if (open[u]==1) cnt+=1;
	int i,v;
	for (i=0;i<g[u].size();i++) {
		v=g[u][i];
		if (visited[v]==false) {
			dfs(v);
		}
	}
}

bool srch(int u,int orig) {
	visited[u]=true;
	int i,v;
	bool cnd;
	if (u!=orig) cnd=open[u];
	else cnd=false;
	for (i=0;i<g[u].size();i++) {
		v=g[u][i];
		if (visited[v]==false) cnd|=srch(v,orig);
	}
	if (cnd==true) scnt+=1;
	return cnd;
}

int main() {
	int u,v,i,j,k,x,y,t;
	scanf("%d %d",&n,&m);
	for (i=0;i<n;i++) {
		scanf("%d",&open[i]);
	}
	while (m--) {
		scanf("%d %d",&u,&v);
		u--;
		v--;
		g[u].pb(v);
		g[v].pb(u);
	}
	memset(visited,false,sizeof(visited));
	ll ans=0;
	ll mcnt=0;
	for (i=0;i<n;i++) {
		if (visited[i]==false) {
			cnt=0;
			dfs(i);
			ans+=(cnt*(cnt-1))/2;
		}
	}
	memset(visited,false,sizeof(visited));
	for (i=0;i<n;i++) {
		if (open[i]==true && visited[i]==false) {
			scnt=0;
			srch(i,i);
			mcnt+=scnt;
		}
	}
	printf("%lld %lld\n",ans,mcnt);
	return 0;
}











