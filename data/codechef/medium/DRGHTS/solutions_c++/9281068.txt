#include <bits/stdc++.h>
using namespace std;
int a[50005];
int visit[50005];
int path[50005];
vector<int>v[50005];
long long int dfs1(int u)
{
visit[u]=1;
long long int ans=0;
for(int i=0;i<v[u].size();i++)
{
int node=v[u][i];
if(visit[node]==0)
{
if(a[node]==1)
ans=ans+1+dfs1(node);
else
ans=ans+dfs1(node);
}
}
return ans;
}
bool dfs2(int u)
{
visit[u]=1;
bool ans=false;
for(int i=0;i<v[u].size();i++)
{
if(visit[v[u][i]]==0)
ans=ans|dfs2(v[u][i]);
}
if(ans|a[u]==1)
{
path[u]=1;
ans=true;
}
return ans;
}
int main()
{
int n,m,x,y;
scanf("%d%d",&n,&m);
for(int i=1;i<=n;i++)
scanf("%d",&a[i]);
while(m--)
{
scanf("%d%d",&x,&y);
v[x].push_back(y);
v[y].push_back(x);
}
memset(visit,0,sizeof visit);
memset(path,0,sizeof path);
long long int ans1=0;int ans2=0;
for(int i=1;i<=n;i++)
{
if(visit[i]==0&&a[i]==1)
{
long long int x=dfs1(i)+1;
ans1=ans1+(x*(x-1))/2;
}
}
memset(visit,0,sizeof visit);
for(int i=1;i<=n;i++)
{
if(visit[i]==0&&a[i]==1)
{
a[i]=0;
dfs2(i);
a[i]=1;
}
}
for(int i=1;i<=n;i++)
ans2=ans2+path[i];
printf("%lld %d",ans1,ans2);
return 0;
}
 