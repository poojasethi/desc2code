#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<cstring>
#include<vector>
#include<queue> 
using namespace std;
 typedef long long ll;
 
#ifndef ONLINE_JUDGE
inline int getchar_unlocked()
{
	return getchar();
}
#endif
inline long long scn()
{
	long long n = 0, c = getchar_unlocked(),t=0;
	while(c < '0' || c > '9')
	{
		if(c==45)t=1;
		c = getchar_unlocked();
	}
	while(c >= '0' && c <= '9')n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();
 
	if(t==0)return n;
	else return -n;
}
typedef vector<int> vi;

vector<vi> graph;
vi mark;
vi window;
long long cnt;
long long tmp;
long long c;

int dfs(int i)
{ tmp++;
	mark[i]=1;
	if(window[i])
	{
		cnt++;
		c+=tmp;
		tmp=0;
	}
		for(vi::iterator v=graph[i].begin();v!=graph[i].end();v++)
	{
		if(!mark[*v])
	    dfs(*v);	
	}
	
	tmp--;
	if(tmp<0)
	tmp=0;

}

int main()
{
	int n=scn(),m=scn();
	
	window=vi(n,0);
	mark=vi(n,0);
	graph=vector<vi> (n);
	
	for(int i=0;i<n;i++)
	window[i]=scn();
	
	while(m--)
	{
		int u=scn(),v=scn();
		u--;v--;
		graph[u].push_back(v);
		graph[v].push_back(u);
	}
	
	long long ans1=0,ans2=0;
	
	for(int i=0;i<n;i++)
	{
		if(window[i]&&!mark[i])
		{
         cnt=0;
		 tmp=0;	
		 c=0;		
		 dfs(i);
		 ans1+=(cnt-1)*cnt/2;
		 if(c>1)
		 ans2+=c;	
		}
		
	}
	cout<<ans1<<" "<<ans2<<endl;
}