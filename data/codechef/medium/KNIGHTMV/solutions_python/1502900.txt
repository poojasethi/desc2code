error = (-1, -1, -1, -1)

def conv(s):
    return "abcdefgh".find(s)

def convert_to_pairs(s):
    ''' converts s to 4 numbers else returns -1'''
    step1 = s.split('-')
    if len(step1) != 2:
        return error
    part1,part2 = step1[0],step1[1]
    if len(part1) != 2 or len(part2) != 2:
        return error
    if not( part1[0]>='a' and part1[0]<='h' and part2[0]>='a' and part2[0]<='h'
            and part1[1]>='1' and part1[1]<='8' and part2[1]>='1' and
            part2[1]<='8'):
        return error
    return (conv(part1[0]), int(part1[1]), conv(part2[0]), int(part2[1]))

def check_move(a ,b ,c ,d):
    ''' checks if this is a valid knight move '''
    m1 = abs(a-c)
    m2 = abs(b-d)
    return (m1+m2 ==3) and (m1 == 1 or m2 == 1)

t = raw_input()
t = int(t)
while(t):
    t -= 1
    s = raw_input()
    (a, b, c, d) = convert_to_pairs(s)
    if (a, b, c, d) == error:
        print 'Error'
        continue
    if check_move(a, b, c, d):
        print 'Yes'
    else:
        print 'No'
