#include <cstdio>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <set>
#define ABS(x) ((x) < 0 ? -1*(x) : (x))
#define MAX(x,y) ((x) > (y) ? (x) : (y))
#define MIN(x,y) ((x) < (y) ? (x) : (y))
#define mp make_pair
#define MOD 1000000007
#define INF 2000000000

using namespace std;
typedef long long ll;
typedef pair<ll,ll> pl;

char str[110];
int K;

char findoptrep(char a, char b, char c)
{
	if(c == '?')
	{
		if(a != '0' && b != '0')
			return '0';
	
		if(a != '1' && b != '1')
			return '1';
	
		if(K > 2)
			return '2';
	
		return 'S';
	}

	if(c == a || c == b)
		return 'S';
	else
		return c;
	
}

int main()
{
	int T,i,len;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d", &K);
		scanf("%s", str);

		len = strlen(str);

		if(len == 1)
		{
			if(str[0] == '?')
				str[0] = '0';

			printf("%s\n", str);
			continue;
		}

		if(K == 1)
		{
			printf("NO\n");
			continue;
		}

		if(K == 2 && str[0] == '?')
		{
			i = 1;
			while(str[i] == '?')
			{
				++i;
			}

			if(((i % 2) && str[i] == '0') || ((i % 2 == 0) && str[i] == '1'))
				str[0] = '1';
		}

		str[0] = findoptrep(str[len-1], str[1], str[0]);
		if(str[0] == 'S')
		{
			printf("NO\n");
			continue;
		}
		
		for(i = 1; i < (len-1); ++i)
		{
			str[i] = findoptrep(str[i-1], str[i+1], str[i]);

			if(str[i] == 'S')
				break;
		}

		if(i < (len-1))
		{
			printf("NO\n");
			continue;
		}

		
		str[len-1] = findoptrep(str[len-2], str[0], str[len-1]);
		if(str[len-1] == 'S')
		{
			printf("NO\n");
			continue;
		}
		printf("%s\n", str);
	}

	return 0;
}