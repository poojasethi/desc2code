using namespace std;
 
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
int k;
char ar[200];
int n;
int memo[110][10][10];
bool dp(int i, int p, int f) {
	if (memo[i][p][f] != -1) return memo[i][p][f];
	if (i>=n) {
		if (p != f) return memo[i][p][f] = true; 
		return memo[i][p][f] = false;
	}
	//bool ret = false;
	if (ar[i] != '?') {
		if (p == ar[i] - '0') return memo[i][p][f] = false;
		return dp(i+1, ar[i] - '0', f);
	}
	for (int t=0;t<k;t++) {
		if (t!=p && dp(i+1, t, f)) return memo[i][p][f] = true; 
	}
	return memo[i][p][f] = false;
}
void go(int i, int p, int f) {
	if (i>=n) {
		return;
	}
	//bool ret = false;
	if (ar[i] != '?') {
		printf("%d", ar[i]-'0');
		go(i+1, ar[i] - '0', f);
		return;
	}
	for (int t=0;t<k;t++) {
		if (t!=p && dp(i+1, t, f)) {
			printf("%d", t);
			go(i+1, t, f);
			return;
		}
	}
}
int main() {
	int tc;
	scanf("%d", &tc);
	while(tc--) {
		memset(memo, -1, sizeof(memo));
		scanf("%d", &k);
		scanf("%s", ar);
		n = strlen(ar);
		if (n == 1) {
			if (ar[0] == '?') printf("%d\n", 0);
			else {
				printf("%d\n", ar[0]-'0');
			}
			continue;
		}
		int si = -1;
		if (ar[0] != '?') {
			if (dp(1, ar[0]-'0', ar[0]-'0')) si = ar[0] - '0';
		}
		else {
			for (int t=0;t<k;t++) {
				if (dp(1, t, t)) {
					si = t;
					break;
				}	
			}	
		}
		if (si == -1) printf("NO");
		else {
			printf("%d", si);
			go(1, si, si);
		}
		puts("");
	}
	return 0;
}
