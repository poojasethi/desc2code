#include <algorithm>
#include <iostream>
#include <cstdlib>
#include <cstring>
#include <cassert>
#include <complex>
#include <cstdio>
#include <vector>
#include <cctype>
#include <string>
#include <ctime>
#include <cmath>
#include <set>
#include <map>

typedef long double LD;
typedef long long LL;

using namespace std;

#define sz(A) (int)(A).size()
#define mp make_pair
#define pb push_back

int k;
string s;

int main() {
	int t;
	cin >> t;
	for (int test = 0; test < t; test++) {		
		cin >> k >> s;

		if (k == 1) {
			if (sz(s) == 1) {
				if (s[0] == '?')
					s[0] = '0';
				cout << s << endl;
			}			
			else
				cout << "NO" << endl;
		}

		if (k == 2) {
			if ((sz(s) & 1) == 1 && sz(s) > 1) {
				cout << "NO" << endl;
				continue;
			}
				
			bool ans_given = 0;
			for (char i = '0'; i < '2'; i++) {
				char not_i = (i == '0' ? '1' : '0');

				bool ok = 1;
				string ans = "";
				for (int j = 0; j < sz(s); j++) {
					ans += ((j & 1) == 0 ? i : not_i);					
					if (s[j] != '?' && s[j] != ans[j])
						ok = 0;
				}
				if (ok) {
					cout << ans << endl;
					ans_given = 1;
					break;
				}
			}
			if (!ans_given)
				cout << "NO" << endl;
		}

		if (k > 2) {
			for (int i = 0; i < sz(s); i++) {
				if (s[i] == '?') {
					for (char j = '0'; j < '0' + k; j++) {
						if ((i && s[i - 1] != j || !i && s[sz(s) - 1] != j) && s[(i + 1) % sz(s)] != j) {
							s[i] = j;
							break;
						}													
					}
				}					
			}
			bool ok = 1;
   			for (int i = 1; i < sz(s); i++) {
   				if (s[i] == s[i - 1] || s[i] == s[(i + 1) % sz(s)]) {
   					ok = 0;					
   				}				
   			}

			if (ok)
				cout << s << endl;
			else
				cout << "NO" << endl;
		}
	}
	return 0;
}
