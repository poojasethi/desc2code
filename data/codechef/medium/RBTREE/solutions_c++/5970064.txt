#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>

#define S(x) scanf("%d", &x)
#define SS(x) scanf("%s", &x)
#define MOD 1000000007
#define N 100007

using namespace std;

void input() {
	#ifndef ONLINE_JUDGE
	freopen("C:\\Users\\ronish\\OneDrive\\Documents\\in.txt","r",stdin);
	#endif
}

int main(int argc, char const *argv[])
{
	input();
	int t;
	cin >> t;
	int x, y, txi, tyi;
	int rootcolor = 0;
	string s;
	while(t--) {
		cin >> s;
		if (s == "Qi") {
			rootcolor = !rootcolor;
			continue;
		}
		cin >> x >> y;
		if (y < x) swap(x, y);
		bitset <32> bx(x);
		bitset <32> by(y);
		int xi = 31, yi = 31;
		while (bx[xi] == 0) xi--;
		while (by[yi] == 0) yi--;
		txi = xi;
		tyi = yi;
		txi++;
		tyi++;
		//cout << txi << " " << tyi << endl;
		int cnt = 0;
		while (xi != -1) {
			if (bx[xi--] == by[yi--]) cnt++;
			else break;
		}
		//cout << cnt << endl;
		int pcolor;
		if (cnt % 2 == 1) pcolor = rootcolor;
		else pcolor = !rootcolor;
		int ans;
		int nc;
		if (cnt == txi) {
			nc = tyi - txi + 1;
			if (s == "Qb" && pcolor == 0) ans = (nc + 1) / 2;
			else if (s == "Qb" && pcolor == 1) ans = nc / 2;
			if (s == "Qr" && pcolor == 1) ans = (nc + 1) / 2;
			else if (s == "Qr" && pcolor == 0) ans = nc / 2;
		} else {
			nc = txi - cnt + 1;
			if (s == "Qb" && pcolor == 0) ans = (nc + 1) / 2;
			else if (s == "Qb" && pcolor == 1) ans = nc / 2;
			if (s == "Qr" && pcolor == 1) ans = (nc + 1) / 2;
			else if (s == "Qr" && pcolor == 0) ans = nc / 2;
			
			nc = tyi - cnt + 1;
			if (s == "Qb" && pcolor == 0) ans += (nc + 1) / 2 - 1;
			else if (s == "Qb" && pcolor == 1) ans += nc / 2;
			if (s == "Qr" && pcolor == 1) ans += (nc + 1) / 2 - 1;
			else if (s == "Qr" && pcolor == 0) ans += nc / 2;
		}
		cout << ans << endl;
	}
	return 0;
}