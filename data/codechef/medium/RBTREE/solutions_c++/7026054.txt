// LUCIFER <3 SLS <3

#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair

int main()
{
    char a[1000];
    gets(a);
    int mrk = 0, len, f;
    int q = atoi(a);
    string s;
    int i, x, y, z, j, cnt;
    while (q--) {
        gets(a);
        len = strlen(a);
        if (len == 2) {
            mrk++;
            continue;
        }
        if (a[1] == 'b')
            f = 0;
        else
            f = 1;
        f = (f + mrk) % 2;
        s = "";
        i = 3;
        while (a[i] != ' ')
            s += a[i++];
        x = atoi(s.c_str());
        i++;
        s = "";
        while (a[i] != '\0')
            s += a[i++];
        y = atoi(s.c_str());
        if (x < y)
            swap(x, y);
        vector < pair <int, int> > m, n;
        vector <int> o;
        while (x != 0) {
            m.pb(mp(x,0));
            x /= 2;
        }
        while (y != 0) {
            n.pb(mp(y,0));
            y /= 2;
        }
        for (i = m.size()-2; i >= 0; i -= 2)
            m[i].second = 1;
        for (i = n.size()-2; i >= 0; i -= 2)
            n[i].second = 1;
        for (i = 0; i < m.size(); i++) {
            for (j = 0; j < n.size(); j++) {
                if (m[i].first == n[j].first)
                    o.pb(m[i].first);
            }
        }
        sort(o.begin(), o.end());
        z = o[o.size()-1];
        cnt = 0;
        for (i = 0; i < m.size(); i++) {
            if (m[i].second == f)
                cnt++;
            if (m[i].first == z)
                break;
        }
        for (i = 0; i < n.size(); i++) {
            if (n[i].first == z)
                break;
            if (n[i].second == f)
                cnt++;
        }
        printf("%d\n", cnt);
    }
    return 0;
}
