#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<ctime>
#include<cctype>
#include<cassert>
#include<climits>
#include<cerrno>
#include<cfloat>
#include<ciso646>
#include<clocale>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
#include<cstddef>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cwchar>
#include<cwctype>

//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<complex>
#include<string>
#include<stack>
#include<bitset>
#include<istream>
#include<valarray>

//IOs
#include<iostream>
#include<sstream>
#include<iomanip>
#include<fstream>
#include<exception>
#include<ios>
#include<iosfwd>
#include<ostream>
#include<iterator>
#include<stdexcept>
#include<streambuf>


//algorithm & miscellaneous
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<limits>
#include<locale>
#include<memory>
#include<new>
#define ll long long
#define ull unsigned long long
#define mod 1000000007ll
#define fill(x) memset(x,0,sizeof x)
using namespace std;

int num[1010];
int len;
int lucky[]={4,7,44,47,74,77,444,447,474,477,744,747,774,777};
int dp[2010][2010],pre[2010][2010];

int doit1(int len1,int cnt)
{
              if(len1==0)
              {
                        if(cnt==0)return 1;
                        return 0;
              }    
              if(cnt<0)return 0;
              
              int &ret=pre[len1][cnt];
              
              if(ret!=-1)return ret;
              
              ret=0;
              for(int i=0;i<=9;i++)
              {
                      ret+=doit1(len1-1,cnt-((i==4) || (i==7)));
                      if(ret>=mod)ret-=mod;
              }
              
              return ret;
              
}
int doit(int pos,int cnt)
{
             if(pos==len)
             {
                         if(cnt==0)return 1;
                         return 0;            
             }    
             
             if(cnt<0)return 0;
             
             int &ret=dp[pos][cnt];
             
             if(ret!=-1)return ret;
             
             ret=0;
             
             if(cnt>(len-pos))return ret;
             
             for(int i=0;i<num[pos];i++)
             {
                     ret+=doit1(len-(pos+1),cnt-((i==4) || (i==7)));
                     if(ret>=mod)ret-=mod;
             }
             ret+=doit(pos+1,cnt-((num[pos]==4) || (num[pos]==7)));
             if(ret>=mod)ret-=mod;
             return ret;
}
int till(char *s)
{
               len=strlen(s);
               
               memset(dp,-1,sizeof(dp));
               
               int ret=0;
               
               for(int i=0;i<len;i++)num[i]=s[i]-'0';


               for(int i=0;i<14;i++)
               {
                       //cout<<lucky[i]<<" ";
                       ret+=doit(0,lucky[i]);
                       if(ret>=mod)ret-=mod;                
               }
               
               return ret;
}

int islucky(char *s)
{
                 int k=strlen(s),cnt=0;
                 
                 for(int i=0;i<k;i++) 
                         if(s[i]=='4' or s[i]=='7')cnt++;
                
                 for(int i=0;i<14;i++)
                         if(cnt==lucky[i])return 1;
                         
                
                 return 0;   
}
int main()
{
          memset(pre,-1,sizeof(pre));
          
          int t;
          cin>>t;
          
          while(t--)
          {
                                 
                                 char str1[1010],str2[1010];
                                 scanf("%s %s",str1,str2);
                                 
                                 printf("%d\n",(till(str2)+mod-till(str1)+islucky(str1))%mod);          
          }         
          return 0;    
}
