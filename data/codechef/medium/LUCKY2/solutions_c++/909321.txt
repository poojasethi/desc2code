#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <stdio.h>
#define all(v) (v).begin(),(v).end()
#define rall(v) (v).rbegin(),(v).rend()
using namespace std;  // H A M L E T
long long toi(string s){istringstream is(s);long long x;is>>x;return x;}
string tos(long long t){stringstream st; st<<t;return st.str();}
long long gcd(long long a, long long b){return __gcd(a,b);}long long lcm(long long a,long long b){return a*(b/gcd(a,b));}

int memo[1001][1001][2];
string target;
char ad[1001];
int tam=0;
bool lucky[1001];
const int p[10]={0,1,2,3,4,4,5,6,6,7};
const int q[10]={0,0,0,0,0,1,1,1,2,2};

long long dp(int pos,int digit,int menor){
    if(pos==tam)return lucky[digit];
    
    int &x=memo[pos][digit][menor];
    if(x!=-1)return x;
    
    long long dev=0;
    
    if(menor){
        dev=(8*dp(pos+1,digit,menor)+2*dp(pos+1,digit+1,menor));
        while(dev>=1000000007)dev-=1000000007;
    }else{
        int num=ad[pos]-'0';
        dev=(p[num]*dp(pos+1,digit,1)+q[num]*dp(pos+1,digit+1,1) +dp(pos+1,digit+lucky[num],0))%1000000007;    
    }
    
    memo[pos][digit][menor]=dev;
    return dev;
}

int main(){
    
    
    
    
    int tc;
    cin>>tc;
    memset(lucky,0,sizeof(lucky));
    
    for(int i=1;i<=1000;i++){
        int id=i;
        bool ok=1;
        
        while(id!=0){
            if(id%10!=7 && id%10!=4)
                ok=0;    
            id/=10;
        }    
        
        if(ok)lucky[i]=1;
    }
    
    while(tc--){
        string a,b;
        cin>>a>>b;
        
        memset(memo,-1,sizeof(memo));
        target=b;
        tam=target.size();
        for(int i=0;i<tam;i++)ad[i]=target[i];
        int dev=dp(0,0,0);
        
        memset(memo,-1,sizeof(memo));
        target=a;
        tam=target.size();
        for(int i=0;i<tam;i++)ad[i]=target[i];
        int dev2=dp(0,0,0);
        
        dev-=dev2;
        int cont=0;
        for(int i=0;i<a.size();i++){
            if(a[i]=='7' || a[i]=='4')    
                cont++;
            }
        
        if(lucky[cont])dev++;
        
        dev=(dev%1000000007+1000000007)%1000000007;
        cout<<dev<<endl;
    }

    return 0;
}   
