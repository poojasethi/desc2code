#include<bits/stdc++.h>

using namespace std;

#define mod 1000000007
#define ll long long int

ll dp[1010][1010];
char l[1005];
char r[1005];
ll l1,r1,temp;

ll check(int x) {
	if(x==0)return 0;
	int d=0;
	while(x!=0) {
		d=x%10;
		if(d!=4&&d!=7) return 0LL;
		x/=10;
	}
	return 1LL;
}

ll solve(ll idx,ll cnt,ll len)
{
    ll i,x;
    x=cnt;

    if(idx==len)
    {
//        printf("idx=%d\n",idx);
        ll r=check(cnt);
        dp[idx][cnt]=r;
        return r;
    }
//    printf("dkr\n");
    ll ans=dp[idx][cnt];
    if(ans>-1)
        return ans;
    else
    {

        ll newidx,newcnt;
        ans=0;

        for(i=0;i<=9;i++)
        {
//            char z='0'+i;
//            printf("z=%c with i=%d and idx=%d and cmp=%c\n",z,i,idx,l[idx]);
            newidx=idx+1;
            newcnt=cnt;
            if((i==4)||(i==7))
                {
                    newcnt++;
//                  printf("new=%d with i=%d ans idx=%d\n",newcnt,i,idx);
                }
                if(newcnt>777)
                    continue;
            ans=(ans+(solve(newidx,newcnt,len)));
        }
        dp[idx][cnt]=ans%mod;
//        printf("krd\n");
        return dp[idx][cnt];

    }

}
int main()
{
    ll t,i,j,k,ans1,ans2,flag,temp,point,cnt,val,newcnt,zz,flag1;
    for(i=0;i<=1003;i++)
            for(j=0;j<=1003;j++)
                    dp[i][j]=-1;

//    printf("dfdsa\n");
    i=0;
    j=1002;
    zz=solve(i,i,j);
//    printf("dsfs\n");
    scanf("%lld",&t);
    while(t--)
    {
        scanf("%s%s",&l,&r);
        l1=strlen(l);
        r1=strlen(r);

        point=1002-l1;
        ans1=0;
        cnt=0;
        for(i=point;i<1002;i++)
        {
            for(val=0;val<=9;val++)
            {
                if(val==l[i-point]-'0')
                {
                    if((val==4)||(val==7))
                    {
                        cnt++;
                    }
                    break;
                }
                ll newcnt=cnt;
                if(val==4||val==7)
                    newcnt++;
                if(newcnt>777)
                    continue;
                ans1=(ans1+dp[i+1][newcnt])%mod;
            }
        }


        point=1002-r1;
        ans2=0;
        cnt=0;
        for(i=point;i<1002;i++)
        {
            for(val=0;val<=9;val++)
            {
                if(val==r[i-point]-'0')
                {
                    if((val==4)||(val==7))
                    {
                        cnt++;
                    }
                    break;
                }
                ll newcnt=cnt;
                if(val==4||val==7)
                    newcnt++;
                if(newcnt>777)
                    continue;
                ans2=(ans2+dp[i+1][newcnt])%mod;
            }
        }
        cnt=0;

//        for(i=0;i<l1;i++)
//            printf("%c\n",l[i]);

//        printf("!!!!!!!!!!!!!!! %d\n",ans1);
//        printf("!!!!!!!!!!!!!!! %d\n",ans2);

        temp=0;
        for(i=0;i<l1;i++)
            if(l[i]=='4'||l[i]=='7')
            temp++;
        flag=check(temp);
        ans1=(ans1+flag)%mod;
        flag1=flag;

        temp=0;
        for(i=0;i<r1;i++)
            if(r[i]=='4'||r[i]=='7')
            temp++;
        flag=check(temp);
        ans2=(ans2+flag)%mod;

        printf("%lld\n",(ans2-ans1+flag1+mod)%mod);
    }
    return 0;
}
