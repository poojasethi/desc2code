#include <stdio.h>
#include <string.h>

typedef long long LL;

char l[1005], r[1005];
int ll,rl;
LL dp[1005][1005][3],mod=1000000007,lch[1005];
char visit[1005][1005][3],CS;

int check(int x)
{
    if(x == 0)return 0;
    while(x)
    {
        int my = x%10;
        if(my!=4 && my!=7)return 0;
        x/=10;
    }
    return 1;
}

LL funr(int pos,int lucky,int f)
{
    if(pos >= rl)
    {
        return lch[lucky];
    }

    if(visit[pos][lucky][f] == CS)return dp[pos][lucky][f];

    LL ans = 0;
    int i;
    if(f == 0)
    {
        int my = r[pos] - 48,val;
        /*for(i=0; i<my; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funr(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }
        if(my == 4 || my == 7)val = 1;
        else val = 0;
        ans+=funr(pos+1,lucky+val,0);
        if(ans >= mod)
        {
            ans-=(mod);
        }*/

        if(my <= 4)
        {
            ans = funr(pos+1,lucky,1);
            ans*=my;
        }
        else if(my<=7)
        {
            ans = funr(pos+1,lucky,1);
            ans*=(my-1);
            ans+= funr(pos+1,lucky+1,1);
        }
        else
        {
            ans = funr(pos+1,lucky,1);
            ans*=(my-2);
            ans+=(2*funr(pos+1,lucky+1,1));
        }
        if(my == 4 || my == 7)val = 1;
        else val = 0;
        ans+=funr(pos+1,lucky+val,0);
        LL d = ans/mod;
        ans-=(d*mod);
    }
    else
    {
        int val;
        /*for(i=0; i<10; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funr(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }*/


        ans = funr(pos+1,lucky,1);
        ans*=8;
        ans+=(2*funr(pos+1,lucky+1,1));
        LL d = ans/mod;
        ans-=(d*mod);
    }

    visit[pos][lucky][f] = CS;
    return dp[pos][lucky][f] = ans;
}

LL funl(int pos,int lucky,int f)
{
    if(pos >= ll)
    {
        return lch[lucky];
    }

    if(visit[pos][lucky][f] == CS)return dp[pos][lucky][f];

    LL ans = 0;
    int i;
    if(f == 0)
    {
        int my = l[pos] - 48,val;
        /*for(i=0; i<my; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funr(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }
        if(my == 4 || my == 7)val = 1;
        else val = 0;
        ans+=funr(pos+1,lucky+val,0);
        if(ans >= mod)
        {
            ans-=(mod);
        }*/

        if(my <= 4)
        {
            ans = funl(pos+1,lucky,1);
            ans*=my;
        }
        else if(my<=7)
        {
            ans = funl(pos+1,lucky,1);
            ans*=(my-1);
            ans+= funl(pos+1,lucky+1,1);
        }
        else
        {
            ans = funl(pos+1,lucky,1);
            ans*=(my-2);
            ans+=(2*funl(pos+1,lucky+1,1));
        }
        if(my == 4 || my == 7)val = 1;
        else val = 0;
        ans+=funl(pos+1,lucky+val,0);
        LL d = ans/mod;
        ans-=(d*mod);
    }
    else
    {
        int val;
        /*for(i=0; i<10; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funr(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }*/


        ans = funl(pos+1,lucky,1);
        ans*=8;
        ans+=(2*funl(pos+1,lucky+1,1));
        LL d = ans/mod;
        ans-=(d*mod);
    }

    visit[pos][lucky][f] = CS;
    return dp[pos][lucky][f] = ans;
}

/*LL funl(int pos,int lucky,int f)
{
    if(pos >= ll)
    {
        return lch[lucky];
    }

    if(visit[pos][lucky][f] == CS)return dp[pos][lucky][f];

    LL ans = 0;
    int i;
    if(f == 0)
    {
        int my = l[pos] - 48,val;
        for(i=0; i<my; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funl(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }
        if(my == 4 || my == 7)val = 1;
        else val = 0;
        ans+=funl(pos+1,lucky+val,0);
        if(ans >= mod)
        {
            ans-=(mod);
        }
    }
    else
    {
        int val;
        for(i=0; i<10; i++)
        {
            if(i == 4 || i == 7)val = 1;
            else val = 0;
            ans+=funl(pos+1,lucky+val,1);
            if(ans >= mod)
            {
                ans-=(mod);
            }
        }
    }

    visit[pos][lucky][f] = CS;
    return dp[pos][lucky][f] = ans;
}*/

void prework()
{
    int i;
    for(i=0; i<=1000; i++)lch[i] = check(i);
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    int t,i;
    prework();
    scanf("%d", &t);
    while(t--)
    {
        scanf("%s %s", l, r);
        ll = strlen(l);
        rl = strlen(r);
        int len = strlen(l);
        for(i=len-1; i>=0; i--)
        {
            if(l[i] == '0')
            {
                l[i] = '9';
            }
            else
            {
                l[i] = l[i]-1;
                break;
            }
        }
        CS++;
        LL mx = funr(0,0,0);
        CS++;
        LL mn = funl(0,0,0);
        /*printf("%lld %lld\n",mx,mn);*/
        LL ans = mx - mn;
        if(ans < 0)ans+=mod;
        printf("%lld\n",ans);
    }

    return 0;
}






