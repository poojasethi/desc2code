#include<iostream>
#include<cstdio>
#include<cstdlib>
using namespace std;
unsigned long long mulmod(unsigned long long a,unsigned long long b,unsigned long long c)
{
    unsigned long long sum = 0,y = a % c;
    while( b )
    {
        if(b & 1)
        {
            sum += y;
            if( sum >= c)
            sum -= c;
        }
        y+=y;
        if(y>=c) y-=c;
        b >>= 1;
    }
    return sum;
}
unsigned long long modulo(unsigned long long a, unsigned long long b, unsigned long long P)
{
    unsigned long long ans = 1;
    while( b )
    {
        if( b & 1 )
        ans = mulmod(ans, a, P);
        a = mulmod(a, a, P);
        b >>= 1;
    }
    return ans;
}
const int maxIter = 5;
bool Miller(unsigned long long N)
{
    if(N < 2) return false;
    if( N % 2 == 0) return N == 2;
    if( N % 3 == 0) return N == 3;
    if( N % 5 == 0) return N == 5;
    if( N % 7 == 0) return N == 7;
    int d = 0;
    long long odd = N - 1;
    while( (odd & 1) == 0)
    {
        d++;
        odd>>= 1;
    }
    for(int i = 0; i < maxIter; i++)
    {
        long long a = rand() % ( N - 1) + 1;
        long long mod = modulo( a, odd, N);
        bool passes = ( mod == 1 || mod == N -1 );
        for(int r = 1; r < d && !passes; r ++)
        {
            mod = mulmod( mod, mod, N);
            passes = passes || mod == N - 1;
        }
        if(!passes)
            return false;
    }
return true;
}
int main()
{
	int T;
	long long int N;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%lld",&N);
		if(Miller(N))
		{
			printf("%lld\n",N);
			continue;
		}
		
		if(N%2 == 0)
			N--;
		for(long long int i=N;i>=2;i-=2)
			if(Miller(i))
			{
				printf("%lld\n",i);
				break;
			}
		
	}
	return 0;
}
 
