#include <stdio.h>

long long mul(long long a,long long b,long long mod) {
    a%=mod;
    b%=mod;
    long double res=a;
    res*=b;
    long long c=(long long)(res/mod);
    a*=b;
    a=a-c*mod;
    a=a%mod;
    if(a<0)
        a+=mod;
    return a;
}


bool prime(long long a, long long n) {
    long long x = 1, step = 1LL << 60, rx;
    while (step > n-1) step >>= 1;
    while (step > 0) {
        rx = mul(x,x,n);
        if (rx == 1 && x != 1 && x != n-1) return 0;
        x = rx;
        if (step & (n-1)) x = mul(x,a,n);
        step >>= 1;
    }
    return x == 1;
}

bool prime(long long n) {
    if (n < 100) {
        for (int i=2; i<n; i++)
            if (n % i == 0) return false;
        return true;
    }
    return prime(2,n) && prime(7,n) && prime(61,n) && prime(13,n);
}

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        long long n;
        scanf("%lld", &n);
        while (!prime(n)) n--;
        printf("%lld\n", n);
    }
    return 0;
}
