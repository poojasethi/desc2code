#include <bits/stdc++.h>
using namespace std;
const long long MOD=1E9+7;	
typedef  long long ULL;
#define MAX 8700000
#define MAX2 1000
int a[(MAX>>6)+100];
int pri[6000005];
int siz;
void sieve()
{
	int i,j,k = 1,yy;
	a[0]=1;
	pri[k]=2;k++;
	for(i=3;i<MAX2;i=i+2)
	{
		if(!(a[i>>6]&(1<<((i>>1)&31))))
		{
			for(j=i*i,yy=i<<1;j<MAX;j=j+yy)
			{
				a[j>>6]=a[j>>6]|(1<<((j>>1)&31)) ;
			}
		}
	}
	for(i=3;i<MAX;i+=2)
	{
		if(!(a[i>>6]&(1<<((i>>1)&31))))
		{
			pri[k]=i;k++;
			if(k>=6000000)break;
		}
	}
	siz=k;
   	return;
}
ULL mulmod(ULL a, ULL b, ULL c){
	ULL x = 0,y = a%c;
	
	while(b>0){
		if(b&1) x = (x+y)%c;
		y = (y<<1)%c;
		b >>= 1;
	}
	
	return x;
}
 
ULL pow(ULL a, ULL b, ULL c){
	ULL x = 1, y = a;
	
	while(b>0){
		if(b&1) x = mulmod(x,y,c);
		y = mulmod(y,y,c);
		b >>= 1;
	}
	
	return x;
}
 
bool miller_rabin(ULL p, int it){
	if(p<2) return false;
	if(p==2) return true;
	if((p&1)==0) return false;
	
	ULL s = p-1;
	while(s%2==0) s >>= 1;
	
	while(it--){
		ULL a = rand()%(p-1)+1,temp = s;
		ULL mod = pow(a,temp,p);
		
		if(mod==-1 || mod==1) continue;
		
		while(temp!=p-1 && mod!=p-1){
			mod = mulmod(mod,mod,p);
			temp <<= 1;
		}
		
		if(mod!=p-1) return false;
	}
	
	return true;
}
 
int main(){
	int T;
  	//sieve();
	long long N,K;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%lld",&N);
		while(1)
		{
			if(miller_rabin(N,2))
			{
				printf("%lld\n",N);
				break;
			}
			N--;
		}
	}
	return 0;
}