#include <bits/stdc++.h>
using namespace std;
typedef int long long LL;
#define ITER 2

inline LL multiplymod(LL num1, LL num2, LL mod)   // O(1) for (a*b)%m
{  
   num1 %= mod;
   num2 %= mod;
   long double res = num1;
   res *= num2;
   LL num3 = (LL)(res / mod);
   num1 *= num2;
   num1 -= num3 * mod;
   num1 %= mod;
   if (num1 < 0) num1 += mod;
   return num1;
}

inline LL powermod(LL a, LL b, LL c)  		//(a^b)modc
{
	LL y = a,x = 1;
	while(b != 0)
	{
		if(b&1)
			x = multiplymod(x,y,c);
		y = multiplymod(y,y,c);
		b = b>>1;
	}
	return x;
}

inline bool millerabin(LL p)
{
	LL temp,s,a,result1,result2;
	if(p == 2)
		return true;
	if(p<2)
		return false;
	if((p+1)&1)
		return false;
	if(p%3 == 0)
		return false;
	temp = (p-1)&-(p-1);
	s = (p-1)/temp;
	for(int i=0;i<ITER;i++)
	{
		a = rand()%(p-1) + 1;
		result1 = powermod(a, s, p);
		if(result1 != 1)
		{
			temp = s;
			while(temp != p-1)
			{
				result2 = powermod(a, temp, p);
				if(result2 == p-1)
					break;
				temp *= 2;
			}
		}
		if(!(result1 == 1 || result2 == p-1))
			return false;
	}
	return true;
}

int main()
{
	int t;
	LL num;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%lld",&num);
		for(int long long i=0;i<num;i++)
			if(millerabin(num-i)==true)
			{
				printf("%lld\n",num-i);
				break;
			}
	}
	return 0;
}