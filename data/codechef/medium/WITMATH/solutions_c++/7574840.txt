#include<bits/stdc++.h>
using namespace std;


int prime[]= {2,3,5,7,11,13,17,23,19,31,37,43,41,47,53,61,59};

long long multiply(long long a, long long b, long long c) {
    long long d = 0;
    while (b > 0) {
        if (b & 1) {
            d += a;
            if (d >= c) d -= c;
        }
        a <<= 1;
        if (a >= c) a -= c;
        b >>= 1;
    }
    return d;
}

long long pow(long long a,long long b,long long mod) {
    long long x=1,y=a;
    while(b) {
        if(b&1)
            x=multiply(x,y,mod);
        y=multiply(y,y,mod);
        b>>=1;
    }
    return x;
}

bool miller_rabin(long long p) {
    if(p<2)
        return false;
    if(p!=2 && !(p&1))
        return false;
    for(int i=0; i<17; i++) {
        if(p==prime[i])
            return true;
        if(p%prime[i]==0)
            return false;
    }
    long long s=p-1;
    int cnt=0;
    while(!(s&1)) {
        s>>=1;
        cnt++;
    }
    long long accuracy=2;
    for(int i=0; i<accuracy; i++) {
        long long a=rand()%(p-1)+1;
        long long mod=p,x;
        x=pow(a,s,mod);
        if(x==1||x==p-1)
            continue;
        bool ok=false;
        for(int j=0; j<cnt; j++) {
            x=multiply(x,x,mod);
            if(x==1)
                return false;
            if(x==p-1) {
                ok=true;
                break;
            }
        }
        if(ok) {
            continue;
        }
        return false;
    }
    return true;
}

int main() {
    int t;
    scanf("%d",&t);
    while(t--) {
        long long n;
        scanf("%lld",&n);
        if(n==2||n==3) {
            printf("%lld\n",n);
            continue;
        }
        if(!(n&1))
            n--;
        while(!miller_rabin(n)) {
            n-=2;
        }
        printf("%lld\n",n);
    }
    return 0;
}
