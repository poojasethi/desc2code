#include <cstdio>
#include <algorithm>
#include <cstring>
#include <set>
#include <vector>
#include <queue>
#include <map>
#include <iostream>
#include <cmath>
#include <cassert>
 
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)
#define rep(i,a,b) for(int i=a;i<b;i++)
#define pb push_back
using namespace std;
 
typedef long long int LL;
typedef vector<int > VI;
 
LL avoidoverflow(LL a,LL b,LL m) {  // O(1) for (a*b)%m
   LL mod = m;
   a %= m;
   b %= m;
   long double res = a;
   res *= b;
   LL c = LL(res/mod);
   a*=b;
   a -= c * mod;
   a %= mod;
   if (a < 0) a += mod;
   return a;
}
 
long long _pow(long long a,long long b,long long c) {
   if(!b) return 1;
   if(b == 1) return a;
   if(b == 2) return avoidoverflow(a,a,c);
   if(b&1) return avoidoverflow(a,_pow(a,b-1,c),c);
   return _pow(_pow(a,b/2,c),2,c);
}
 
bool Miller(long long p,int iteration) {
    if(p<2){
        return false;
    }
    if(p!=2 && !(p&1)){
        return false;
    }
    int cnt = 0;
    long long s=p-1;
    while(!(s&1)) {
        s/=2;
        cnt++;
    }
    //srand(time(NULL));
    for(int i=0;i<iteration;i++){
        long long a=rand()%(p-1)+1,temp=s;
        //a=1804289384;
        //printf("%lld\n",a);
        long long x=_pow(a,s,p);
        //printf("%lld\n",x);
        if(x == 1 || x == p-1) continue;
        int flag = 0;
        for(int i = 1; i < cnt; i++) {
           x = _pow(x,2ll,p);
           if(x == 1) return false;
           if(x == p-1) {
              flag = 1;
              break;
           }
        }
        if(flag) continue;
        return false;
    }
    return true;
}
 
int main() {
   int t;
   scanf("%d",&t);
   while(t--) {
      long long n;
      scanf("%lld",&n);
      if(n == 2 || n == 3) {
         printf("%lld\n",n);
         continue;
      }
      if(!(n&1)) n--;
      int c = 0;
      while(1) {
         if(Miller(n,4)) {
            printf("%lld\n",n);
            break;
         } /*else {
            printf("NO\n");
         }*/
         n -= 2;
         c += 2;
         if(c >= 1300) {
            c = 1/0;
         }
      }
   }
   return 0;
}
 