#include<bits/stdc++.h>
using namespace std;
typedef long long LL;
int bases[9] = {2, 3, 5, 7, 11, 13,17, 19, 23};
inline LL mul(LL a, LL b, LL MOD){
	LL ans = 0;
	while(b > 0){
		if(b & 1) ans = ans + a;
		a <<= 1;
		b >>= 1;
		while(a >= MOD) a -= MOD;
		while(ans >= MOD) ans -= MOD;
	}
	return ans;
}
inline LL power(LL a, LL b, LL MOD){
	LL ans = 1;
	while(b > 0){
		if(b & 1) ans = mul(ans, a, MOD);
		a = mul(a, a, MOD);
		b >>= 1;
	}
	return ans;
}
inline bool isPrime(LL N){
	if(N <= 1) return false;
	for(int i = 0;i < 9;++i){
		if(bases[i] == N)
			return true;
	}
	LL p = N - 1;
	int d = 0;
	while(!(p&1)) {
		p >>= 1;
		++d;
	}

	// N - 1 = (1 << d) * p
	for(int i = 0;i < 9;++i){
		LL b = bases[i];
		LL x = power(b, p, N);
		for(int j = 1;j <= d;++j){
			LL newx = mul(x, x, N);
			if(newx == 1 && (!(x == 1 || x == N - 1)))
				return false;
			x = newx;
		}
		if(x != 1) return false;
	}
	return true;
}
int main(){
	int t;
	scanf("%d", &t);
	while(t--){
		LL N;
		scanf("%lld", &N);
		while(!isPrime(N)){
			--N;
		}
		printf("%lld\n", N);
	}
	return 0;
}