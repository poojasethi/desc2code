#include<iostream>

using namespace std;
typedef long long lli;
lli BIT[1000002], A[1000002];

void update(lli index, lli N, lli value)
{
    while (index<=N)
    {
        BIT[index] += value;
        index = index + (index & (-index));
    }
}

lli getsum(lli index, lli N)
{
    lli ans  = 0;
    while(index>0)
    {
        ans += BIT[index];
        index = index - (index & (-index));
    }
    return ans;
}

int main()
{
    
    lli N, Q, a, b, temp;
    cin>>N>>Q;
	for (lli i = 0; i < N; i++)
    {
        cin>>temp;
        update(i + 1, N, temp);
    }

	for (lli que = 0; que < Q; que++){
		string ch;
		cin>>ch>>a>>b;
		if (ch == "S"){
			lli i = a, j = b;
			cout<<getsum(j + 1, N) - getsum(i, N)<<endl;
		}
		else if (ch == "G")
		{
		    lli i = a, v = b;
			update(i + 1, N, v);
		}
		else if (ch == "T")
        {
			lli i = a, v = b;
			update(i + 1, N, -v);
		}
	}
    return 0;
}
