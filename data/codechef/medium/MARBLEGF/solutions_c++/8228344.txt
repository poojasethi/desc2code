#include <stdio.h>
#include <iostream>
typedef unsigned long long ull;
const int MAX=1000001;
ull a[MAX],bit[MAX]={0},res;
int N,Q,k,p,q;
char M;
void add_change(int p,int q)
{
	while (p<=N)
	{
		bit[p]+=q;
		p+=p&-p;
	}
}
ull get_sum(int n)
{
	ull r=a[n];
	while (n>0)
	{
		r+=bit[n];
		n-=n&-n;
	}
	return r;
}
int getint()
{
	int d,r=0;
	while ((d=getchar_unlocked())<48) {}
	do
	{
		r=(r<<3)+(r<<1)+d-48;
		d=getchar_unlocked();
	}
	while (d>=48);
	return r;
}
int main()
{
	scanf("%d %d\n",&N,&Q);
	scanf("%d",&k);
	a[1]=k;
	for (int i = 2; i <= N; i++)
	{
		k=getint();
		a[i]=a[i-1]+k;
	}
	while (Q--)
	{
		while ((M=getchar_unlocked())<'A'||M>'Z') { }
		p=getint();
		q=getint();
		p++;
		if(M=='T')
		{
			add_change(p,-q);
		}
		else if(M=='G')
		{
			add_change(p,q);
		}
		else
		{
			q++;
			if(p==q) res=a[p]-a[q-1];
			else
			{
				if(p!=1) res=get_sum(q)-get_sum(p-1);
				else res=get_sum(q);
			}
			printf("%llu\n",res);
		}
	}
} 