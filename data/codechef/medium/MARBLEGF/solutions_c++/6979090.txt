#include <cstdio>
#include <vector>
using namespace std;

typedef vector<int> vi;
typedef long long int ll;
typedef vector<ll> vll;

vll t;

int LSOne(int no) {
  return no & (-no);
}

//note ft is 1-indexed

ll ft_query(vll &t, int vertex) {
  ll sum = 0;
  while(vertex > 0) {
    sum += t[vertex];
    vertex -= LSOne(vertex);
  }
  return sum;
}

ll ft_rsq(vll &t, int L, int R) {
  return ft_query(t, R) - ft_query(t, L - 1);
}

void ft_create(vll &t, int size) {
  t.assign(size + 1, 0);
}

void ft_update(vll &t, int vertex, ll value) {
  while(vertex < (int)t.size()) {
    t[vertex] += value;
    vertex += LSOne(vertex);
  }
}

int main() {
  int N, Q;
  scanf("%d %d", &N, &Q);
  int i, temp;
  ft_create(t, N);
  for(i = 0; i < N; i++) {
    scanf("%d", &temp);
    ft_update(t, i + 1, temp);
  }
  char c;
  int a, b;
  for(i = 0; i < Q; i++) {
    scanf(" %c %d %d", &c, &a, &b);
    switch(c) {
    case 'S' :
      printf("%lld\n", ft_rsq(t, a + 1, b + 1));
      break;
    case 'G':
      ft_update(t, a + 1, b);
      break;
    case 'T':
      ft_update(t, a + 1, -b);
      break;
    }
  }
    
  return 0;
}
