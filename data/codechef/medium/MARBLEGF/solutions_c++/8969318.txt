#include<iostream>
using namespace std;
#define sd(x) scanf("%d",&x)
#define max_s 1000050
#define ll long long
ll arr[max_s]={0};
ll tree[max_s]={0};
ll getsum(int idx){
   idx=idx+1;
   ll sum=0;
   while(idx>0){
     sum+=tree[idx];   
     idx=idx-(idx &(-idx));
   }   
  return sum; 
}
void update(int idx,int val,int n){
     idx=idx+1;
     while(idx<=n){
       tree[idx]+=val;
       idx=idx+(idx & (-idx));
     }
}
void constructBIT(int n){
    for(int i=0;i<=n;i++)
    tree[i]=0;
    for(int i=0;i<n;i++)
    update(i,arr[i],n);      
}
int main(){
 int n,q,a,b;
 cin>>n>>q;
 char c;
 for(int i=0;i<n;i++)
 cin>>arr[i];
 constructBIT(n);
 while(q--){
   cin>>c>>a>>b;
   if(c=='S'){
   cout<<getsum(b)-getsum(a-1)<<endl;
   }
   else if(c=='G'){
    arr[a]+=b;
    update(a,b,n);
   }
   else{
   arr[a]-=b;
   update(a,-b,n);
   }
 }
 return 0;
}