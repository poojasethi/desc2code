#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<iostream>


void segt(int i,int a[],long long int seg[],int b,int c);

long long int find(long long int seg[],int i1,int i2,int b,int c,int i);

void singupdate(long long int seg[],int i1,int x,int b,int c,int si);

long long int seg[10000000];
int a[1000000];

int main()
{
	using namespace std;
	 	
	
	int n,q;
	
	scanf("%d %d",&n,&q);
		
	
	
	
	
	for(int i=0;i<n;i++)
	scanf("%d",&a[i]);
	
	//printf("Here3");
	
	segt(1,a,seg,0,n-1);
	
	
	//printf("Are we here\n");
	
	for(int i=0;i<q;i++)
	{
		//printf("The value of q and i are %d and %d\n",q,i);
		
		char c;
		int i1,i2;
		
		scanf(" %c %d %d",&c,&i1,&i2);	
		
		if(c=='S')
		{
			//printf("Im at S\n");
			printf("%lld\n",find(seg,i1,i2,0,n-1,1));
		}
		
		else if(c=='G')
		{
			//printf("Im at G\n");
			singupdate(seg,i1,i2,0,n-1,1);
		}
		
		else if(c=='T')
		{
			//printf("Im at G\n");
			singupdate(seg,i1,-i2,0,n-1,1);
		}
		
	}
	
	/*for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			printf("%lld\n",find(seg,i,j,0,n-1,1));
		}
		singupdate(seg,rand()%10,i,0,n-1,1);
	}
	*/
	return 0;
}

void segt(int i,int a[],long long int seg[],int b,int c)
{
	if(c==b)
	  seg[i]=a[c];
	
	else
	{
		segt(2*i,a,seg,b,(c+b)/2);
		segt(2*i+1,a,seg,(c+b)/2+1,c);
		seg[i]=seg[2*i]+seg[2*i+1];
	}	
}

long long int find(long long int seg[],int i1,int i2,int b,int c,int i)
{
	if(i1>i2)
	return 0;
	
	if(i1==b&&i2==c)
	return seg[i];
	
	else if(i2<=(b+c)/2)
	return find(seg,i1,i2,b,(b+c)/2,2*i);
	
	else if(i1>=((b+c)/2+1))
	return find(seg,i1,i2,(b+c)/2+1,c,2*i+1);
	
	else
	{
		long long int k1=find(seg,i1,(b+c)/2,b,(b+c)/2,2*i);	
		long long int k2=find(seg,(b+c)/2+1,i2,(c+b)/2+1,c,2*i+1);
		
		//printf("k1 is %d\n",k1);
		//printf("k2 is %d\n",k2);
		
		return (k1+k2);
	}
}
	
void singupdate(long long int seg[],int i,int x,int b,int c,int si)
{
	if(b==c)
	{
		seg[si]+=x;
		return;
	}
	if(i<=(b+c)/2)
	{
		singupdate(seg,i,x,b,(b+c)/2,2*si);
		seg[si]+=x;
	}
	
	else
	{
		singupdate(seg,i,x,(b+c)/2+1,c,2*si+1);
		seg[si]+=x;
	}
	
}
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
