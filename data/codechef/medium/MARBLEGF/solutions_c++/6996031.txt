#include<iostream>
using namespace std;
class FunnyMarbal{
	long long int n,q;
	long long int *p; 
	long long int *arr;
	long long int M;
	public:
		FunnyMarbal()
		{
			long long int i,g,t,ans,j;
			char ch;
			cin>>n>>q;
			p=new long long int[n];
             M=2*n;
			arr=new long long int[M];
			for(i=0;i<n;i++)
			cin>>p[i];
			segment(1,0,n-1);
			while(q--)
			{
				cin>>ch;
				cin>>g;
				cin>>t;
				if(ch=='G')
				update(1,0,n-1,g,t);
				else if(ch=='T')
				update(1,0,n-1,g,-t);
				else
				{
					ans=getR(1,0,n-1,g,t);
					cout<<ans<<endl;
				}
			}
		}
		long long int getR(long long int node,long long int L,long long int R,long long int l,long long int r)
		{
			if(L>R||L>r||R<l)
			return 0;
			if(L>=l&&r>=R)
			return arr[node];
			return (getR(2*node,L,(L+R)/2,l,r)+getR(2*node+1,(L+R)/2+1,R,l,r));
		}
		void segment(long long int node,long long int a,long long int b)
		{
			if(a>b)
			return;
			if(a==b)
			{
			arr[node]=p[a];
			return;
		    }
		    segment(node*2,a,(a+b)/2);
		    segment(node*2+1,(a+b)/2+1,b);
		    arr[node]=arr[node*2]+arr[node*2+1];
		}
		void update(long long int node,long long int a,long long int b,long long int i,long long int val)
		{
			if(a>b||i<a||i>b)
			return;
			if(a==b)
			{
			arr[node]+=val;
			return ;
		    }
			update(node*2,a,(a+b)/2,i,val);
			update(node*2+1,(a+b)/2+1,b,i,val);
			arr[node]=arr[2*node]+arr[2*node+1];
		}
};
int main()
{
	FunnyMarbal f;
	return 0;
}