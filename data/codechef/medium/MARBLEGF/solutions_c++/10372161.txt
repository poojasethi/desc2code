#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll int segment[4000002];
ll  int arr[1000002];
void constructtree(int low,int high,int pos)
{
    if(low==high)
    {
        segment[pos]=arr[low];
        return ;
    }
    int mid=(low+high)/2;
    constructtree(low,mid,2*pos+1);
    constructtree(mid+1,high,2*pos+2);
    segment[pos]=segment[2*pos+1]+segment[2*pos+2];
}
void update(int low,int high,int index,int value,int pos)
{
    if(low>high||index>high||index<low)
        return ;
    if(low==high)
    {
        if(low==index)
        {
            arr[index]=arr[index]+value;
            segment[pos]=arr[index];
        }
        return;
    }
    int mid=(low+high)/2;
    update(low,mid,index,value,2*pos+1);
    update(mid+1,high,index,value,2*pos+2);
    segment[pos]=segment[2*pos+1]+segment[2*pos+2];
}
ll int query(int low,int high,int qlow,int qhigh,int pos)
{
    if(qlow>high||qhigh<low||low>high||qlow>qhigh)
        return 0;
    if(qlow<=low&&qhigh>=high)
    {
        return segment[pos];
    }
    int mid=(low+high)/2;
   ll a= query(low,mid,qlow,qhigh,2*pos+1);
    ll b=query(mid+1,high,qlow,qhigh,2*pos+2);
    return a+b;
}
int main()
{
    ll int n,q;
    scanf("%lld%lld",&n,&q);

    int i,opt;
    char ch;
    for(i=0;i<n;i++)
    {
        scanf("%lld",&arr[i]);
    }
    constructtree(0,n-1,0);
    ll a,b;
    while(q--)
    {
        cin>>ch;
        if(ch=='S')
        {
          scanf("%d%d",&a,&b);
            printf("%lld\n",query(0,n-1,a,b,0));
        }
        else if(ch=='G')
        {
            scanf("%d%d",&a,&b);

            update(0,n-1,a,b,0);

        }
        else
        {
            scanf("%d%d",&a,&b);

            update(0,n-1,a,-b,0);


        }

    }

}
