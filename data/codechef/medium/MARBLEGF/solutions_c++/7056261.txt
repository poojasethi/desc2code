#include<bits/stdc++.h>
using namespace std;
long long int arr[1000010];
long long int arr_s[4000010];
int a,b,p,q;

long long int construct(long long int start,long long int end,long long int k)
{
	if(start==end)
	{
		arr_s[k]=arr[start];
		return arr_s[k];
	}
	long long int middle=(start+end)>>1;
	arr_s[k]=construct(start,middle,k*2)+construct(middle+1,end,k*2+1);
	return arr_s[k];
}

long long int query(long long int start,long long int end,long long int k)
{
	if(start>=a&&end<=b)
	{
		return arr_s[k];
	}
	else if(end<a||start>b)
	{
		return 0;
	}
	else
	{
		long long int middle=(start+end)>>1;
		return query(start,middle,k*2)+query(middle+1,end,(k*2)+1);
	}
}

void update(long long int start,long long int end,long long int k)
{
	if(a<start||a>end)
	{
		return;
	}
	arr_s[k]+=b;
	if(start!=end)
	{
		long long int middle=(start+end)>>1;
		update(start,middle,k<<1);
		update(middle+1,end,(k<<1)+1);
	}
}

int main()
{
	long long int i,n,q;
	char ch;
	cin>>n>>q;
	for(i=0;i<n;i++)
	{
		cin>>arr[i];
	}
	construct(0,n-1,1);
	while(q--)
	{
		cin>>ch>>a>>b;
		if(ch=='S')
		cout<<query(0,n-1,1)<<endl;
		else if(ch=='G')
		update(0,n-1,1);
		else
		{
			b=-b;
			update(0,n-1,1);
		}
	}
	return 0;
}

