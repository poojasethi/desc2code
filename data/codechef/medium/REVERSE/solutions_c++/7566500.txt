#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
using namespace std;
vector<pair<int,int> > graph[100005];
int ans[100005];
queue<int> Q;
int main()
{
    int n,m,i,j,node,x,y;
    scanf("%d %d",&n,&m);
    for(i=0;i<100005;i++)
        ans[i]=9999999;
    ans[n]=0;
    for(i=0;i<m;i++)
    {
        scanf("%d %d",&x,&y);
        graph[x].push_back(make_pair(y,1));
        graph[y].push_back(make_pair(x,0));
    }
    Q.push(n);
    while(!Q.empty())
    {
        node=Q.front();
        Q.pop();
        for(i=0;i<graph[node].size();i++)
        {
            if(ans[graph[node][i].first]>ans[node]+(graph[node][i].second==1))
            {
                ans[graph[node][i].first]=ans[node]+(graph[node][i].second==1);
                Q.push(graph[node][i].first);
             //   printf("%d %d %d ",ans[graph[node][i].first],ans[node],(graph[node][i].second));
            }
        }
    }
    if(ans[1]==9999999)
        printf("-1\n");
    else
        printf("%d\n",ans[1]);
    return 0;
}
