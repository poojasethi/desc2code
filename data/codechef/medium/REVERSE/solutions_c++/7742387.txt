#include<bits/stdc++.h>
using namespace std;
#define maxi 100010
#define inf 1000000

struct graph
{
	bool visited;
	list< pair<int,int> >l;    //edge,weight
	int dist;
	graph()
	{
		visited=false;
		dist=inf;
	}
}gra[maxi];

int main()
{
	ios::sync_with_stdio(false);
	int n,m;
	cin>>n>>m;
	for(int i=0;i<m;i++)
	{
		int x,y;
		cin>>x>>y;
		gra[x-1].l.push_back(make_pair(y-1,0));
		gra[y-1].l.push_back(make_pair(x-1,1));
	}
	deque<int>q;
	q.push_back(0);
	gra[0].dist=0;
	while(!q.empty())
	{
		int x=q.front();
		q.pop_front();
		list< pair<int,int> >::iterator iter;
		for(iter=gra[x].l.begin();iter!=gra[x].l.end();iter++)
		{
			if(gra[iter->first].dist>gra[x].dist+iter->second)
			{
				gra[iter->first].dist=gra[x].dist+iter->second;
				if(iter->second==0)
				{
					q.push_front(iter->first);
				}
				else
				{
					q.push_back(iter->first);
				}
			}
		}
	}
	if(gra[n-1].dist==inf)
	{
		cout<<"-1\n";
	}
	else
	{
		cout<<gra[n-1].dist<<"\n";
	}
	return 0;
}