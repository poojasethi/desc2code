 #include <bits/stdc++.h>
using namespace std;
#define mp make_pair;
typedef long long ll;
typedef pair< ll,ll > ii;
vector <ii> G[100001];
long long int status[100001];
long long int pred[100001];//parent node no
long long int prel[100001];//length at particular node from 1
priority_queue < ii, vector< ii >, greater< ii > > pq;
int main(){
	ll n,m;
	cin >> n >> m;
	while(m--){
		ll a,b;
		cin >> a >> b;
		//if(a > b){
			G[b].push_back( make_pair(a,1) );
		//}else if(a < b){
			G[a].push_back( make_pair(b,0) );
		//}
	}
	ll i;
	for(i=1;i<=n;i++){
		status[i] = 0;
		pred[i] = -1;
		prel[i] = 100001;
	}
	prel[1] = 0;
	pq.push(ii(0,1));
	while(!pq.empty()){
		ii p;
		p = pq.top();
		pq.pop();
		ll val,index;
		val = p.first;
		index = p.second;
		if(status[index]){
			continue;
		}
		status[index] = 1;
		//cout << "shan";
		vector <ii> :: iterator it;
		for(it=G[index].begin();it!=G[index].end();it++){
			
			int temp_index = it->first;
			int temp_dist  = it->second;
			if(status[temp_index]){
				continue;
			}
			
			//cout << prel[index] << " "<< prel[temp_index] << endl;
			if(prel[temp_index] > prel[index] + temp_dist){
				prel[temp_index] = prel[index] + temp_dist;
				pq.push(ii(prel[temp_index],temp_index));
				pred[temp_index] = index;
			}
		}
	}
	if(prel[n]!=100001)
	cout << prel[n] << endl;
	else
	cout << -1 << endl;
	return 0;
}
