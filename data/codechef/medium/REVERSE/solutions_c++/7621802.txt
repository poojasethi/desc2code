#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<queue>
#include<map>
#include<bits/stdc++.h>
#define pb push_back
using namespace std;
int dist[100001];
const int MAX=1000000;
struct edge
{
	int u;
	int w;
};
bool operator <(edge a,edge b)
{
	return (a.w>b.w);
}
void dij(vector<edge> graph[],int dist[])
{
	dist[1]=0;
	priority_queue<edge> q;
	q.push((edge){1,0});
	while(!q.empty())
	{
		edge p=q.top();
		q.pop();
		for(int i=0;i<graph[p.u].size();i++)
       {
         int u=p.u;
         int v=graph[p.u][i].u;
         if(dist[u]+graph[p.u][i].w<dist[v])
       {
         dist[v]=dist[u]+graph[p.u][i].w;
         q.push(graph[p.u][i]);
        }
       }
	}
}
int main()
{
	int n,e,x,y;
	scanf("%d %d",&n,&e);
	vector<edge> graph[n+1];
	memset(dist,MAX,sizeof(dist));
	for(int i=0;i<e;i++)
	{
		scanf("%d %d",&x,&y);
		graph[x].pb((edge){y,0});
		graph[y].pb((edge){x,1});
	}
    dij(graph,dist);
    if(dist[n]>=MAX)
     printf("-1\n");
     else
     printf("%d\n",dist[n]);
     return 0;
}
