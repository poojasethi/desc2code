#include<stdio.h>
#include<list>
#include<queue>
#include<vector>
#define INF 9999999

using namespace std;


struct comparator
{
    bool operator() ( pair<int,int> i, pair<int,int> j)
    {
        return i.second > j.second;
    }
};
int main()
{
	int n,m,a,b;
	scanf("%d%d",&n,&m);
	int dist[n],visit[n];
	dist[0]=0;
	visit[0]=0;
	for(int i=1;i<n;i++)
	{
		dist[i]=INF;
		visit[i]=0;
	}
	
	
	vector<list<pair<int,int> > > graph(n);
	
	//priority_queue <int, vector<int>, comparator> abc;
	priority_queue<pair<int,int>, vector< pair <int,int> >,comparator> qq;
	while(m--)
	{
		scanf("%d%d",&a,&b);
		a--;
		b--;
		graph[a].push_back(make_pair(b,0));
		graph[b].push_back(make_pair(a,1));
	}
	qq.push(make_pair(0,0));
	while(!qq.empty())
	{
		int u=qq.top().first;
		qq.pop();
		if(visit[u])
			continue;
		int sz=graph[u].size();
		for(int i=0;i<sz;i++)
		{
			int v=graph[u].front().first;
			int w=graph[u].front().second;
			graph[u].pop_front();
			if(!visit[v] && dist[u]+w <dist[v])
			{
				dist[v]=dist[u]+w;
				qq.push(make_pair(v,dist[v]));
			}
		}
		visit[u]=1;
	}
	if(dist[n-1]==INF)
		dist[n-1]=-1;
	printf("%d\n",dist[n-1]);
}