#include<iostream>
#include<algorithm>
#include<queue>
#include<vector>
#include<climits>
using namespace std;
#define inf 100000000
int func(vector<pair<int,int> >*adj,int src,int des)
{
int ans[des+3];
fill(ans,ans+des+3,inf);
priority_queue<pair<int,int>,vector<pair<int,int> >,greater<pair<int,int> > >q;
q.push(make_pair(0,src));
ans[src]=0;
while(!q.empty())
{
int u=q.top().second;
q.pop();
for(int i=0;i<adj[u].size();i++)
if(ans[adj[u][i].second]>ans[u]+adj[u][i].first)
{
ans[adj[u][i].second]=ans[u]+adj[u][i].first;
q.push(make_pair(ans[adj[u][i].second],adj[u][i].second));
}
}
return ans[des];
}

int main()
{
ios_base::sync_with_stdio(false);
int n,m;
cin>>n>>m;
vector<pair<int,int> >adj[n];
while(m--)
{
int u,v;
cin>>u>>v;
u--;v--;
adj[u].push_back(make_pair(0,v));
adj[v].push_back(make_pair(1,u));
}
int ans=func(adj,0,n-1);
if(ans>=inf)
cout<<"-1"<<endl;
else
cout<<ans<<endl;
return 0;
}
