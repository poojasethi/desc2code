from heapq import *
N,M = map (int,raw_input().split())

g = [[] for _ in xrange (N)]

for _ in xrange (M):
	fr,to = map (int,raw_input().split())

	fr -= 1
	to -= 1

	if fr == to :
		continue

	g[fr].append ((0,to))
	g[to].append ((1,fr))

dist = [100000000000 for _ in xrange (N)]

in_queue = [False for _ in xrange (N)]

h = [] # This is our heap/priority_queue

dist[0] = 0 # Ob

heappush (h,(0,0))
in_queue[0] = True

while len (h) > 0 :

	popped = heappop (h)

	current = popped[1]
	in_queue[current] = False

	for con in g[current] :

		calculated_dist = popped[0] + con[0]

		if calculated_dist < dist[con[1]] :
			dist[con[1]] = calculated_dist

			# if in_queue[con[1]] == False :
			heappush (h,(calculated_dist,con[1]))
			in_queue[con[1]] = True

if dist[N-1] == 100000000000 :
	print "-1"
else :
	print dist[N-1]




