#include <cstdio>
#include <cctype>
#include <map>
#include <vector>
 
using namespace std;
 
const int BUFSIZE = 4096;
const char MINUS = '-';
const char ZEROCHAR = '0';
 
char r_buffer[BUFSIZE];
int r_bufpos = BUFSIZE;
 
int readint()
{
    int sign = 1;
    int n = 0;
    for (; r_bufpos < BUFSIZE && r_buffer[r_bufpos] != MINUS &&
            !isdigit(r_buffer[r_bufpos]); r_bufpos++);
    if (r_bufpos == BUFSIZE)
    {
        r_bufpos = 0;
        fread(r_buffer, 1, BUFSIZE, stdin);
        for (; r_bufpos < BUFSIZE && r_buffer[r_bufpos] != MINUS &&
                !isdigit(r_buffer[r_bufpos]); r_bufpos++);
    }
    if (r_buffer[r_bufpos] == MINUS)
    {
        sign = -1;
        r_bufpos += 1;
    }
    for (; r_bufpos < BUFSIZE && isdigit(r_buffer[r_bufpos]); r_bufpos++)
        n = 10 * n + r_buffer[r_bufpos] - ZEROCHAR;
    if (r_bufpos == BUFSIZE)
    {
        r_bufpos = 0;
        fread(r_buffer, 1, BUFSIZE, stdin);
        for (; r_bufpos < BUFSIZE && isdigit(r_buffer[r_bufpos]); r_bufpos++)
            n = 10 * n + r_buffer[r_bufpos] - ZEROCHAR;
    }
    return sign * n;
}
 
inline void swap(int &a, int &b)
{
    int t;
    if (a > b)
    {
        t = b;
        b = a;
        a = t;
    }
}
 
int main()
{
    int N;
    int x, y;
    int y1, y2;
    long long result;
    map<int, int> index;
    map<int, int>::iterator it;
    map<pair<int, int>, int> count;
    map<pair<int, int>, int>::iterator it2;
 
    while (N=readint())
    {
        result = 0;
        index.clear();
        count.clear();
        for(; N > 0; N--)
        {
            x = readint();
            y = readint();
 
            if ((it = index.find(x)) == index.end())
                index[x] = y;
            else
            {
                y1 = it->second;
                y2 = y;
                swap(y1, y2);
 
                if ((it2 = count.find(make_pair(y1, y2))) == count.end())
                    count[make_pair(y1, y2)] = 1;
                else
                    it2->second++;
            }
        }
 
        for ( it2=count.begin() ; it2 != count.end(); it2++ )
        {
            x = it2->second;
            result += (long long)x * (x - 1) / 2;
        }
        printf("%lld\n", result);
    }
    return 0;
}
