#include<stdio.h>
 #include<algorithm>
 #include<math.h>
 using namespace std;
 
int a[100000];
int b[100000];
int x[100000];

void merge(int l,int m,int u,int n,int a[],int b[])
{
 
int p[n],q[n],l1,u1,i;
l1=l; u1=m+1; i=l;
 
while(l1<=m && u1<=u)
{
if(a[l1]<a[u1])
{p[i]=a[l1]; q[i]=b[l1]; l1++; i++; }
else
{p[i]=a[u1]; q[i]=b[u1]; u1++; i++; }
}
 
while(u1<=u)
{ p[i]=a[u1]; q[i]=b[u1]; u1++; i++;}
while(l1<=m)
{p[i]=a[l1]; q[i]=b[l1]; l1++; i++; }
 
for(i=l;i<=u;i++)
{a[i]=p[i];b[i]=q[i];}
 
}
 
 
void merge_sort(int l,int u,int n,int a[],int b[])
{
 
int m;
if(l<u)
{ m=(l+u)/2 ;
merge_sort(l,m,n,a, b);
merge_sort(m+1,u,n,a, b);
merge(l,m,u,n,a,b); }
 
}
 
/*
void print(int a[],int b[],int n)
{
     printf("\n");
     for(int i=0;i<n;i++)
     printf("%d  %d\n",a[i],b[i]);
     printf("\n");
}
*/
int main()
{
    int n;
    
    scanf("%d",&n);
    
    while(n)
    {
        
        
        for(int i=0;i<n;i++)
        scanf("%d%d",&a[i],&b[i]);
                
        merge_sort(0,n-1,n,a,b);
   
        
        int ind=0;
        long long c=0,count=0;
        
        for(int i=0;i<n;i++)
        {
         if(a[i]==a[i+1])
         {
          a[ind]= max(b[i],b[i+1]);
          x[ind]=abs(b[i]-b[i+1]);
          ind++;
          i++;
         }
         
        }
        merge_sort(0,ind-1,ind,x,a);
        merge_sort(0,ind-1,ind,a,x);
        //print(a,x,ind);
        
        for(int i=0;i<ind-1;i++)
        {
                
                while(  i<(ind-1) && a[i]==a[1+i] && x[i]==x[1+i]) { c++; i++; } 
                
                count+=(c*(c+1)/2); c=0; 
        }
               
        printf("%d\n",count);         
                          
        scanf("%d",&n);
    }
    return 0;
}
