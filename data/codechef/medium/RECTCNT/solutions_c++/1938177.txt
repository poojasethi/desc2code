#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <list>
#include <algorithm>
#include <cstring>
#include <map>
#include <set>
#include <vector>
using namespace std;
#define VAR(a,b) __typeof(b) a=(b)
#define REP(i,n) for(int _n=n, i=0;i<_n;++i)
#define FOR(i,a,b) for(int i=(a),_b=(b);i<=_b;++i)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define FOREACH(it,c) for(VAR(it,(c).begin());it!=(c).end();++it)
typedef long long LL; typedef unsigned long long ULL;
typedef long double LD;
const int INF = 1000000001; const LL INFLL = LL(INF) * LL(INF);
template<class T> inline int size(const T&c) { return c.size(); }
 
typedef pair<int, int> PII;
vector<PII> P, SEG;
 
int main(){
unsigned int N;
scanf("%d", &N);
do{
P.clear();
REP(i, N){
int x, y;
scanf("%d%d", &x, &y);
P.push_back(PII(x, y));
}
sort(P.begin(), P.end());
SEG.clear();
FOR(i, 1, N-1) if(P[i].first == P[i-1].first) SEG.push_back(PII(P[i].second, P[i].second - P[i-1].second));
sort(SEG.begin(), SEG.end());
long long res = 0;
if(SEG.size()){
long long count = 1;
FOR(i, 1, SEG.size()-1){
if(SEG[i] == SEG[i-1]) ++count;
else{
res += count*(count-1)/2;
count = 1;
}
}
res += count*(count-1)/2;
}
printf("%lld\n", res);
scanf("%d", &N);
}while(N != 0);
return 0;
}