#include<stdio.h>
#include<stdlib.h>
struct front
{
	int a;
	int b;
};
front p[100005];
front q[100005];
void sort2(int low,int mid,int high)
{
	int h,i,j,k; 
	h=low,j=mid+1,i=low;
	while((h<=mid) && (j<=high))
	{
		if(p[h].a < p[j].a || p[h].a==p[j].a && p[h].b < p[j].b)
		{
			q[i]=p[h];
			h++;
		}
		else
		{
			q[i]=p[j];
			j++;
		}
		i++;
	}
	if(h>mid)
  { 
       for(k=j;k<=high;k++)
         {   
             q[i]=p[k];
             i++;
        }
} 
else 
{  for(k=h;k<=mid;k++)  
    {    
      q[i]=p[k];
    i++;
    }
} 
for(k=low;k<=high;k++) 
p[k]=q[k];
}
void sort1(int low,int high)
{
	int mid;
	if(low<high)
	{
		mid=(low+high)/2;
		sort1(low,mid);
		sort1(mid+1,high);
		sort2(low,mid,high);
	}
}
int main()
{
	int n,i,j,s;
	scanf("%d",&n);
	while(n)
	{
		for(i=0;i<n;i++)
		{
			scanf("%d %d",&p[i].a,&p[i].b);
		}
		sort1(0,n-1);
	j=0;
		for(i=1;i<n;i++)
		{
			if(p[i].a==p[i-1].a)
			{
				p[j].a=p[i-1].b;
				p[j].b=p[i].b;
				j++;
			}
		}
sort1(0,j-1);
   unsigned count=1;
   s=0;
   for(i=1;i<j;i++)
   {
   	if(p[i].a == p[i-1].a && (p[i].b == p[i-1].b))
   	count++;
   	else
   	{s=s+(count*(count-1))/2;
   	count=1;
   	}
   }
   s=s+(count*(count-1))/2;
   scanf("%d",&n);
   printf("%d\n",s);
	}
	return 0;
}