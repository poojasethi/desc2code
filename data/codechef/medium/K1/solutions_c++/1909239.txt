#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<algorithm>
#include<queue>
#include<string>
#include<cmath>
#include<sstream>
#include<climits>
#include<cstring>
#include<iomanip>

using namespace std;

typedef long long int ll;
typedef vector<int> vi;
typedef vector<vector<int > > vvi;
typedef stringstream SS;
typedef pair<double,double> PAIR;
#define FORI(i,x,n) for(int i=x;i<n;i++)
#define DARR(x,a,n) x *a=new x[n];	
#define DARR2(x,a,m,n) x **a=new x*[m];FORI(i,0,m)a[i]=new x[n];
#define FREE(a,m,n) FORI(i,0,m)delete [] a[i];delete [] a;
#define ESP (1e-9)
 
#define S 1024*1024*4
char IN[S],*iptr;
struct fastIO
{
	fastIO()
	{
		fread(IN,1,S,stdin);
		iptr=IN;
	}
	void check()
	{
		int size=IN+S-iptr;
		if(size<200)
		{
			memcpy(IN,iptr,size);
			fread(IN+size,1,S-size,stdin);
			iptr=IN;
		}
	}
	int sc()
	{
		check();
		while(*iptr<=32) iptr++;
		int x=0,sign=0;
		if( *iptr == '-' ) sign=1,iptr++;
		while(*iptr>32) x= x*10 + *iptr++ -'0';
		return sign?-x:x;
	}
};

double get(double x,int a,int b,int c){
	c*=-1;
	double r=-1*a*x;
	return (r+c)/b;
	}	
double f(double x,double y,vector<PAIR> &v){
	double res=0.0;
	FORI(i,0,v.size())
		res+=sqrt((x-v[i].first)*(x-v[i].first) + (y-v[i].second)*(y-v[i].second));
	
	return res;

	}

int main(){
	//freopen("ip.txt","r",stdin);
	fastIO io;
	int t;
	//cin>>t;
	t=io.sc();
	while(t--){
		int n,a,b,c;
		double x,y;
		//scanf("%d%d%d%d",&n,&a,&b,&c);
		n=io.sc();
		a=io.sc();
		b=io.sc();
		c=io.sc();
		vector<PAIR> v;
		FORI(i,0,n){
			//cin>>x>>y;
			x=io.sc();y=io.sc();
			v.push_back(PAIR(x,y));
			}
		double l=-6000,r=6000,p1,p2;
		FORI(i,0,60){
		double x1=(2*l+r)/3,x2=(2*r+l)/3;
		double y1=get(x1,a,b,c),y2=get(x2,a,b,c);
		p1=f(x1,y1,v);
		p2=f(x2,y2,v);
		if (p1>p2)
			l=x1;
		else
			r=x2;
			
		}
		cout<<setprecision(20)<<p1<<endl;	
		
		}
	


	return 0;
	}