#include<bits/stdc++.h>
using namespace std;
double maxcod;
double mincod;
int n;
int a,b,c;
typedef struct 
{
	double x,y;
}point;
point whses[3000];
double find_dis(point &victim)
{
	double dis=0.0;
	for(int i=0;i<n;++i)
	{
		dis+=sqrt((victim.x-whses[i].x)*(victim.x-whses[i].x)+(victim.y-whses[i].y)*(victim.y-whses[i].y));
	}
	return dis;
}
inline double find_y(double x)
{
	return -((a*x+c)/b);
}
double ter_find_plant()
{
	
	point left,right;
	left.x=mincod;
	left.y=find_y(left.x);
	right.x=maxcod;
	right.y=find_y(right.x);

	point lthird,rthird;
	double epislon=1e-8;
	while(true)
	{
		lthird.x = (right.x+2*left.x)/3.0;
		lthird.y = find_y(lthird.x);
		rthird.x = (2*right.x+left.x)/3.0;
		rthird.y = find_y(rthird.x);

		double ldis = find_dis(lthird);
		double rdis = find_dis(rthird);

		if(ldis<rdis)
		{
			right=rthird;
		}
		else
		{
			left=lthird;
		}
		if(fabs(rdis-ldis)<epislon)
			break;
	}
	point mid;
	mid.x=(left.x+right.x)/2.0;
	mid.y=find_y(mid.x);
	return find_dis(mid);
}
int main()
{
	int t;
	scanf("%d",&t);
	double x,y;
	while(t--)
	{
		maxcod=0.0;
		mincod=0.0;
		double xf,yf;
		scanf("%d%d%d%d",&n,&a,&b,&c);
		for (int i = 0; i < n; ++i)
		{
			scanf("%lf%lf",&x,&y);
			xf=x-((double)a*(a*x+b*y+c))/(a*a+b*b);
			yf=y-((double)b*(a*x+b*y+c))/(a*a+b*b);
			maxcod=max(xf,maxcod);
			mincod=min(yf,mincod);
			whses[i].x=x;
			whses[i].y=y;
		}
		if(b==0)
		{
			int z=a;
			a=b;
			b=z;
			for(int i=0;i<n;++i)
			{
				z=whses[i].x;
				whses[i].x=whses[i].y;
				whses[i].y=z;
			}
		}
		printf("%6lf\n",ter_find_plant());
	}
	return 0;
}