#include<iostream>
#include<cstring>
#include<cstdlib>
#include<map>
#include<vector>
#include<list>
#include<set>
#include<queue>
#include<cassert>
#include<sstream>
#include<string>
#include<cmath>
 
#define FOR(i,a,b) for(int i=a;i<b;++i)
#define REP(i,n) FOR(i,0,n)
#define myabs(x) (x>=0?x:-x)
#define min(a,b) (a<b?a:b)
#define INF 1e20
#define EPS 1e-8
 
typedef long long int64;
typedef long double double64;
 
using namespace std;
 
#define BUFSIZE (10000)
char inputbuffer[BUFSIZE];
char *ioptr=inputbuffer+BUFSIZE,*ioend=inputbuffer+BUFSIZE;
int input_eof=0;
 
#define getchar() ({if (ioptr >= ioend) init_input(); *ioptr++;})
#define eof() (ioptr>=ioend && input_eof)
#define eoln() ({if(ioptr >= ioend) init_input(); *ioptr == '\n';})
 
void init_input(){
  if (input_eof)
    return;
  int existing = BUFSIZE - (ioend - inputbuffer);
  memcpy(inputbuffer, ioend, existing);
  int wanted = ioend - inputbuffer;
  int count=fread(inputbuffer + existing, 1, wanted, stdin);
  if (count < wanted)
    input_eof = 1;
  ioend = inputbuffer + BUFSIZE - (wanted - count);
  while (*--ioend > ' ');
  ioend++;
  ioptr=inputbuffer;
}
 
inline void non_whitespace(){
  for(;;){
    if(ioptr>=ioend)
      init_input();
    if(*ioptr>' ')
      return;
    ioptr++;
  }
}
 
inline int getint(){
  non_whitespace();
  int neg=0;
  if(*ioptr=='-'){
    ioptr++;
    neg=1;
  }
  int n=0;
  while(*ioptr>' ')
    n=(n<<3)+(n<<1)+*ioptr++-'0';
  ioptr++;
  if(neg)
    n=-n;
  return n;
}
 
int A,B,C;
int X[2005], Y[2005];
double Px, Py;
int N;
 
double dis(int p) {
	double dx = Px-X[p], dy = Py-Y[p];
	return sqrt(dx*dx + dy*dy);
}
 
double calc(double p1) {
	if (A==0) {
		Px = p1;
		Py = -1.0 * C / B;
	}
	else if (B==0) {
		Px = -1.0 * C / A;
		Py = p1;
	}
	else {
		Px = p1;
		Py = -1.0 * (A*Px + C) / B;
	}
	double ret = 0.0;
	REP(i,N) ret += dis(i);
	return ret;
}
 
double solve() {
	double lo = -5000, hi = 5000;
	while (lo < hi - EPS) {
		double llo = (2.0 * lo + hi) / 3.0;
		double hhi = (lo + 2.0 * hi) / 3.0;
		double f1 = calc(llo);
		double f2 = calc(hhi);
		if (f1 < f2) hi = hhi;
		else lo = llo;
	}
	return calc(lo);
}
 
int main() {
	int T = getint();
	while (T--) {
		N = getint();
		A = getint(), B = getint(), C = getint();
		REP(i,N) {
			X[i] = getint(); Y[i] = getint();
		}
		printf("%.6lf\n", solve());
	}
	return 0;
}