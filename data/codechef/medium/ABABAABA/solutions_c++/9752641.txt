#include <bits/stdc++.h>
using namespace std;
const int N = 1e5 + 5;
const int mod = 1e9 + 7;
inline long long add(long long u , long long v , long long mod){
    return (u%mod + v%mod) % mod;
}
inline long long mul(long long u , long long v , long long mod){
    return (u % mod * v % mod) % mod;
}
inline long long sub(long long u , long long v , long long md){
    return(u - v + md) % md;
}
inline int gcd(int x , int y){
    return y ? gcd(y , x % y) : x;
}
inline long long power(long long int x , long long int y , long long mod){
    long long ret = 1LL;
    while(y > 0){
        if(y & 1)
            ret = mul(ret , x , mod);
        x = mul(x , x , mod);
        y >>= 1;
    }
    return ret;
}
inline long long invmd(int x){
    return power(x , mod - 2 , mod);
}
int a[N];
bool ok(string subs , string s){
    int ct = 0;
    int j = 0;
    for(int i = 0; i < s.size(); ++i){
        if(subs[j] == s[i]) ++j;
        if(j == subs.size()) ++ct , j = 0;
    }
    return ct == 2;
}
int main() {
    int t , u , v , xpoint;
    int x , y;
    int n , m;
    string s;
    cin >> t;
    while(t--){
        cin >> s;
        int a = 0 , b = 0;
        for(int i = 0; i < s.size(); ++i){
            a += s[i] == 'A';
            b += s[i] == 'B';
        }
        if(a == 2){
            cout << "A" << endl;
            continue;
        }
        if(b == 2){
            cout << "B" << endl;
            continue;
        }
        int n = s.size();
        string ans = "";
		s = '^' + s + '^';
		for(int i = 0; i <= n-2; ++i){
			if(s[i+2] != s[i+3] && s[i+1] == s[i+2] && s[i] != s[i+1]){
				for(int j = 1; j <= n; ++j) if(j != i + 1) ans += s[j];
				break;
			}
		}
		if(ans.size())
            cout << ans << endl;
        else cout << "-1" << endl;
    }
    return 0;
}
