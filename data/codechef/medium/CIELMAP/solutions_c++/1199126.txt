#include<cmath>
#include<cstdio>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

template<class T>
struct point{
	T x,y;
	point operator-(const point &a)const{ return (point){x-a.x,y-a.y}; }
};

template<class T>
T cross(const point<T> &a,const point<T> &b){ return a.x*b.y-a.y*b.x; }

enum {CCW=1,CW=-1,ON=0};
template<class T>
int ccw(const point<T> &a,const point<T> &b,const point<T> &c){
	T rdir=cross(b-a,c-a);
	if(rdir>0) return CCW;
	if(rdir<0) return CW;
	return ON;
}

template<class T>
T dist2(const point<T> &a,const point<T> &b){
	return (a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y);
}

int main(){
	int T; scanf("%d",&T);
	while(T--){
		int n; scanf("%d",&n);
		point<int> p[5000];
		rep(i,n) scanf("%d%d",&p[i].x,&p[i].y);

		int ans2=0;
		if(n==4){
			rep(i,n) rep(j,i) {
				int k,l;
				for(k=0;k==i||k==j;k++);
				for(l=0;l==i||l==j||l==k;l++);
				if(ccw(p[i],p[j],p[k])*ccw(p[i],p[j],p[l])>=0){
					ans2=max(ans2,dist2(p[i],p[j]));
				}
			}
		}
		else{ // n>=5
			rep(i,n) rep(j,i) ans2=max(ans2,dist2(p[i],p[j]));
		}
		printf("%.9f\n",sqrt(ans2));
	}

	return 0;
}
