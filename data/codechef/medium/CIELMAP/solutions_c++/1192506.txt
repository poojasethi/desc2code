#ifdef _WIN32
#  define LL "%I64d"
#else
#  define LL "%ll"
#endif

#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <cstring>
#include <ctime>
#include <vector>
#include <deque>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <string>
#include <algorithm>
#include <complex>
using namespace std;
#define null NULL
#define mp make_pair
#define pb(a) push_back(a)
#define sz(a) ((int)(a).size())
#define all(a) a.begin() , a.end()
#define fi first
#define se second
#define relaxMin(a , b) (a) = min((a),(b))
#define relaxMax(a , b) (a) = max((a),(b))
#define SQR(a) ((a)*(a))
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long long ll;
int vp(pii mid , pii a,pii b){
  int x1=a.fi-mid.fi,y1=a.se-mid.se,x2=b.fi-mid.fi,y2=b.se-mid.se;
  return x1*y2-x2*y1;
}
int dist(pii f,pii s){return SQR(f.fi-s.fi) + SQR(f.se-s.se);}
int sgn(int w){return w>0?1:(w<0?-1:0);}
int n;
pii in[1010];
void doit(){
  scanf("%d",&n);
  for(int i=0;i<n;++i)scanf("%d%d",&in[i].fi , &in[i].se);
  bool check = (n>4)?false:true;
  int bst=0;
  for(int i=0;i<n;++i)
   for(int j=i+1;j<n;++j){
    int cur=dist(in[i] , in[j]);
    if(check){
     vector<pii> tmp;
     for(int p=0;p<n;++p)
      if(p!=i && p!=j)tmp.pb(in[p]);
     if(sz(tmp)>1){
      if( sgn(vp(in[i] , in[j] , tmp[0]))*sgn(vp(in[i] , in[j] , tmp[1])) > 0 ||
          sgn(vp(tmp[0] , tmp[1] , in[i]))*sgn(vp(tmp[0] , tmp[1] , in[j])) > 0)
        relaxMax(bst , cur);
                  }
             }
    else relaxMax(bst , cur);
                         }
  printf("%.10lf\n" , sqrt(bst));
}
int main(){
  int Q; scanf("%d",&Q);
  while(Q--)doit();
  return 0;
}
