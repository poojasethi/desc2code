#include<cstdio>
#include<iostream>
#include<iomanip>
#include<cmath>
int A[1000],B[1000];
using namespace std;
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        int i=0;
        for(i=0;i<n;i++)
        {
            scanf("%d %d",&A[i],&B[i]);
        }
        double dist;
        double big=0.00000000;
        int j;
        if(n==4)
        {
 
            int i,j;
            double a,b;
            for(i=0;i<4;i++)
                for(j=i+1 ;j<4;j++)
            {
                if((i==0)&&(j==1))
                {
                    if(((A[1]-A[0])==0)||((B[1]-B[0])==0))
                    {
                        if((A[1]-A[0])==0)
                        {
                             a=A[2]-A[1];
                            b=A[3]-A[1];
                        }
                        else if((B[1]-B[0])==0)
                        {
                            a=B[2]-B[1];
                            b=B[3]-B[1];
                        }
                    }
                    else
                    {
 
                double m= (1.0*(B[1]-B[0]))/(A[1]-A[0]);
                double c=B[1]-m*A[1];
                 a=(B[2]-m*A[2]-c);
                 b=(B[3]-m*A[3]-c);
                    }
                if((a*b)>0)
                {
                dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
                }
 
                }
                else if((i==0)&&(j==2))
                {
 
 
                   if(((A[2]-A[0])==0)||((B[2]-B[0])==0))
                    {
                        if((A[2]-A[0])==0)
                        {
                             a=A[1]-A[2];
                            b=A[3]-A[2];
                        }
                        else if((B[2]-B[0])==0)
                        {
                            a=B[1]-B[2];
                            b=B[3]-B[2];
                        }
                    
                    }
                    else
                    {
 
                double m= (1.0*(B[2]-B[0]))/(A[2]-A[0]);
                double c=B[2]-m*A[2];
                 a=(B[1]-m*A[1]-c);
                 b=(B[3]-m*A[3]-c);
                    }
 
 
                    if((a*b)>0)
                    {
                        dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
                    }
                }
                else if((i==0)&&(j==3))
                {
                      if(((A[3]-A[0])==0)||((B[3]-B[0])==0))
                    {
                        if((A[3]-A[0])==0)
                        {
                             a=A[1]-A[3];
                            b=A[2]-A[3];
                        }
                        else if((B[3]-B[0])==0)
                        {
                            a=B[1]-B[3];
                            b=B[2]-B[3];
                        }
                    }
                    else
                    {
 
    double m= (1.0*(B[3]-B[0]))/(A[3]-A[0]);
                double c=B[3]-m*A[3];
                 a=(B[1]-m*A[1]-c);
                 b=(B[2]-m*A[2]-c);
 
 
                    }
 
 
 
                if((a*b)>0)
                    {
                        dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
                    }
 
 
                }
                else if((i==1)&&(j==2))
                {
                    if(((A[2]-A[1])==0)||((B[2]-B[1])==0))
                    {
                        if((A[2]-A[1])==0)
                        {
                             a=A[0]-A[2];
                            b=A[3]-A[2];
                        }
                        else if((B[2]-B[1])==0)
                        {
                            a=B[0]-B[2];
                            b=B[3]-B[2];
                        }
                    }
                    else
                    {
                     double m= (1.0*(B[2]-B[1]))/(A[2]-A[1]);
                double c=B[2]-m*A[2];
                a=(B[0]-m*A[0]-c);
                 b=(B[3]-m*A[3]-c);
                    }
 
 
 
                                        if((a*b)>0)
                    {
                        dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
                    }
                }
                else if((i==1)&&(j==3))
                {
                       if(((A[3]-A[1])==0)||((B[3]-B[1])==0))
                    {
                        if((A[3]-A[1])==0)
                        {
                             a=A[0]-A[3];
                            b=A[2]-A[3];
                        }
                        else if((B[3]-B[1])==0)
                        {
                            a=B[0]-B[3];
                            b=B[2]-B[3];
                        }
                    }
                    else
                    {
 
 
                     double m= (1.0*(B[3]-B[1]))/(A[3]-A[1]);
                double c=B[3]-m*A[3];
                 a=(B[0]-m*A[0]-c);
                b=(B[2]-m*A[2]-c);
 
                    }
 
 
                                        if((a*b)>0)
                    {
                        dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
                    }
                }
                else if((i==2)&&(j==3))
                {
                                           if(((A[2]-A[3])==0)||((B[2]-B[3])==0))
                    {
                        if((A[2]-A[3])==0)
                        {
                             a=A[0]-A[3];
                            b=A[1]-A[3];
                        }
                        else if((B[2]-B[3])==0)
                        {
                            a=B[0]-B[3];
                            b=B[1]-B[3];
                        }
                    }
                    else
                    {
 
 
 double m= (1.0*(B[3]-B[2]))/(A[3]-A[2]);
                double c=B[3]-m*A[3];
                 a=(B[1]-m*A[1]-c);
                 b=(B[0]-m*A[0]-c);
                    }
 
 
 
                                        if((a*b)>0)
                                        {
 
                        dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
                    }
 
                }
 
            }
 
            cout<<showpoint<<fixed<<setprecision(9)<<big<<endl;
 
 
 
 
        }
        else
        {
        for(i=0;i<n;i++)
        {
            for(j=i+1;j<n;j++)
            {
                dist=sqrt((A[j]-A[i])*(A[j]-A[i])+(B[j]-B[i])*(B[j]-B[i]));
                if(big<dist)
                    big=dist;
 
            }
        }
     cout<<showpoint<<fixed<<setprecision(9)<<big<<endl;
 
        }
 
    }
 
 
}
 