#include <stdio.h>
#include<math.h>
int x[1005],y[1005];
int direction(int a,int b,int c)
{
     int x1,x2,y1,y2,ans;
     x1=x[b]-x[a];
     x2=x[c]-x[a];
     y1=y[b]-y[a];
     y2=y[c]-y[a];

     ans=x1*y2-y1*x2;

     return ans;
}
int intersect(int a,int b,int c,int d)
{
    int d1,d2,d3,d4;
    d1=direction(c,a,b);
    d2=direction(d,a,b);
    d3=direction(a,c,d);
    d4=direction(b,c,d);

    if(((d1>0&&d2<0)||(d1<0&&d2>0))&&((d3>0&&d4<0)||(d3<0&&d4>0)))
    return 1;
    else return 0;
}
long long dist(int a,int b)
{
    int x1,y1;
    long long len;
    x1=(x[a]-x[b]);
    y1=(y[a]-y[b]);

    len=(x1*x1)+(y1*y1);

    return len;
}
long long maxi(long long a,long long b)
{
    if(a>b)return a;
    else return b;
}
using namespace std;
int main()
{
    int t,n,i,j,k,l,z;
    long long res,temp;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%d %d",&x[i],&y[i]);
        }
        res=-1;
        if(n==4)
        {
            for(i=0;i<4;i++)
            for(j=0;j<4;j++)
            for(k=0;k<4;k++)
            for(l=0;l<4;l++)
            {
                if(i!=j&&i!=k&&i!=l&&j!=k&&j!=l&&k!=l)
                {
                    if(intersect(i,j,k,l)==0)
                    {
                            temp=dist(i,j);
                            res=maxi(res,temp);
                    }

                }
            }

            printf("%.9f\n",sqrt(res));
        }
        else
        {
            for(i=0;i<n-1;i++)
            {
                for(j=i+1;j<n;j++)
                {
                    temp=dist(i,j);
                    res=maxi(res,temp);
                }
            }

            printf("%.9f\n",sqrt(res));
        }
    }
    return 0;
}
