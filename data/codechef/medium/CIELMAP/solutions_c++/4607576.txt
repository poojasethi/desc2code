//Bismillahir Rahmanir Rahim
/******Harun Or Rashid******/
/***********Template Starts Here***********/
#include<iostream>
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cctype>
#include<cstdlib>
#include<string>
#include<vector>
#include<set>
#include<stack>
#include<queue>
#include<map>
#include<algorithm>
using namespace std;

#define MEM(a,b) memset(a,b,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)>(b)?(b):(a))
#define ABS(a) ((a)>0? (a):(-(a)))
#define SQ(a) ((a)*(a))
#define SZ(a) (int)a.size()
#define FORN(i,n) for(i=1;i<=n;i++)
#define FORAB(i,a,b) for(i=a;i<=b;i++)
#define ALL(V) V.begin(),V.end()
#define pb(a) push_back(a)
#define pr(a) cout<<a<<endl
#define pf printf
#define sf scanf
#define swap(a,b) (a ^= b, b ^= a, a ^= b)
#define PI acos(-1)
#define x first
#define y second
#define eps 1e-7

typedef int D;
typedef long long int LLD;
typedef unsigned long long int LLU;
typedef vector<D> VI;
typedef set<D> SI;
typedef vector<D>::iterator Viti;

/***********Template Ends Here***********/

double distance(double x1,double y1,double x2,double y2)
{
    double result=sqrt((x2-x1)*(x2-x1)+(y2-y1)*(y2-y1));
    return result;
}

int main()
{
    int T,N,i,I,j,k,l;
    double maxx=0,x1,y1,x2,y2,cross1,cross2,dis,dis1,dis2,dis3,dis4;
    pair<double,double>P;
    cin>>T;
    while(T--)
    {
        cin>>N;
        vector<pair<double,double> >V;
        for(i=0; i<N; i++)
        {
            cin>>P.x>>P.y;
            V.pb(P);
        }
        maxx=0;
        if(N>4)
        {
            for(i=0; i<N; i++)
            {
                for(j=i+1; j<N; j++)
                {
                    dis=distance(V[i].x,V[i].y,V[j].x,V[j].y);
                    maxx=MAX(dis,maxx);
                }
            }
        }
        else
        {
            for(i=0; i<N; i++)
            {
                for(j=0; j<N; j++)
                {
                    for(k=0; k<N; k++)
                    {
                        for(l=0; l<N; l++)
                        {
                            if(i==j||i==k||i==l||j==k||j==l||k==l)
                                continue;
                            x1=V[j].x-V[i].x;
                            y1=V[j].y-V[i].y;
                            x2=V[k].x-V[i].x;
                            y2=V[k].y-V[i].y;
                            cross1=x1*y2-x2*y1;
                            x1=V[k].x-V[i].x;
                            y1=V[k].y-V[i].y;
                            x2=V[l].x-V[i].x;
                            y2=V[l].y-V[i].y;
                            cross2=x1*y2-x2*y1;
                            if((cross1<0 && cross2<0)||(cross1>0 && cross2>0))
                            {
                                dis1=distance(V[i].x,V[i].y,V[j].x,V[j].y);
                                dis2=distance(V[j].x,V[j].y,V[k].x,V[k].y);
                                dis3=distance(V[k].x,V[k].y,V[l].x,V[l].y);
                                dis4=distance(V[i].x,V[i].y,V[l].x,V[l].y);
                                dis=MAX(MAX(dis1,dis2),MAX(dis3,dis4));
                                maxx=MAX(maxx,dis);
                            }
                        }

                    }
                }
            }
        }
        printf("%.10lf\n",maxx);
    }
    return 0;
}

