#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
using namespace std;
#define oo 0x7f7f7f7f
#define fi "CIELMAP.inp"
#define fo ".out"
#define maxN 1010
#define sqr(n) (n)*(n)
#define sz(a) int(a.size())
#define CLR(a,i) memset(a,i,sizeof(a))
#define REP(i, N) for(int i = 0; i < N; ++i)
#define For(i, a, b) for(int i = a;i <= b; ++i)
#define rep(i, N) for(int i = 1;i <= N; ++i)
typedef long long ll;

struct point { int x, y; } a[maxN];
int id[maxN];
//
double dis(point a, point b) { return sqrt( sqr(a.x - b.x) + sqr(a.y - b.y) ); }
int ccw(point a, point b, point c)
{
  if (1LL * (b.x - a.x) * (c.y - b.y) - 1LL * (b.y - a.y) * (c.x - b.x) < 0) return -1;
  return +1;
}
//
int main()
{
  #ifndef ONLINE_JUDGE
  freopen(fi,"r",stdin);
  //freopen(fo,"w",stdout);
  #endif
  int test;
  scanf("%d", &test);
  while (test--) {
    int N;
    scanf("%d", &N);
    rep(i, N) scanf("%d %d", &a[i].x, &a[i].y), id[i] = i;
    double ans = 0;
    if (N > 4) {
      rep(i, N)
      rep(j, N) if (i != j)
        if (dis(a[i], a[j]) > ans)
          ans = dis(a[i], a[j]);
    } else {
      do {
        if (ccw(a[id[1]], a[id[2]], a[id[3]]) * ccw(a[id[1]], a[id[2]], a[id[4]]) < 0) continue;
        if (dis(a[id[1]], a[id[2]]) > ans) ans = dis(a[id[1]], a[id[2]]);
        if (dis(a[id[3]], a[id[4]]) > ans) ans = dis(a[id[3]], a[id[4]]);
      } while (next_permutation(id + 1, id + 5));
    }
    printf("%.10lf\n", ans);
  }
  return 0;
}
