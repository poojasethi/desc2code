#include<iostream>
#include<string>
#include<cmath>
#include<iostream>
#include<cfloat>
#include<cstdio>
#define MOD 10000009

using namespace std;
inline double dist(pair<int,int> p1,pair<int,int> p2)
{
    double dist;
    dist = ( (p1.first-p2.first)*(p1.first-p2.first) + (p1.second-p2.second)*(p1.second-p2.second) );
    return(dist);
}

inline double lineCheck(pair<int,int> p1,pair<int,int> p2,pair<int,int> p3)
{
    double val;
    val = (p2.second-p1.second)*(p3.first-p1.first) - (p3.second-p1.second)*(p2.first-p1.first);
    return val;
}

inline double fn(pair<int,int> pi[],int N)
{
    int arr[2],l,i,j;
    double val1,val2,max = DBL_MIN,side1,side2,side3,side4;
    for(int i=0;i<4;i++)
        for(int j=i;j<4;j++)
        {
            l = 0;
            for(int k=0;k<4;k++)
            {
                if(k!=i&&k!=j)
                {
                    arr[l] = k;
                    l++;
                }
            }
            val1 = lineCheck(pi[i],pi[j],pi[arr[0]]);
            val2 = lineCheck(pi[i],pi[j],pi[arr[1]]);
            if(!(val1 > 0 && val2 < 0 || val1 < 0 && val2 > 0))
            {
                        if(max <= dist(pi[i],pi[j]))
                            max = dist(pi[i],pi[j]);
            }
        }
        return max;

}

int main(){
    int test,N,i,j;
    double max;


    cin>>test;

    while(test--)
    {
        cin >> N;
        pair<int,int> pi[N];
        for(i=0;i<N;i++)
        {
            cin >> pi[i].first >> pi[i].second;
        }
        if(N==4)
        {
            max = fn(pi,N);
        }
        else
        {
            max = DBL_MIN;
            for(i=0;i<N;i++)
                for(j=i+1;j<N;j++)
                    if(max <= dist(pi[i],pi[j]))
                        max = dist(pi[i],pi[j]);
        }
        cout.precision(10);
        cout << sqrt(max) << endl;
    }

    return 0;
}
