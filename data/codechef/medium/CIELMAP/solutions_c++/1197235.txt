#include <iostream>
#include <vector>
#include <cstdio>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
using namespace std;

#define FOR(i,a,b)				for (i=a;i<b;i++)
#define s(n)					scanf("%d",&n)
#define p(n)					printf("%d\n",n)
#define pl(n)					printf("%lld\n",n)
#define sd(n)					int n;scanf("%d",&n)
#define sl(n)					scanf("%lld",&n)
#define sld(n)					long long int n;scanf("%lld",&n)
#define MAXN 10

typedef long long ll;

//Using the tester's claim. PROVE IT!!

int cross(int x1,int y1,int x2,int y2,int x3,int y3)
{
    return (((x1-x2)*(y1-y3))-((y1-y2)*(x1-x3)));
}

double dist(int x1,int y1,int x2,int y2)
{
    ll temp=(ll)(x1-x2);
    temp*=temp;
    int temp2=(ll)(y1-y2);
    temp2*=temp2;
    temp+=temp2;
    return sqrt((double)temp);
}

int main()
{
	int t;
	s(t);
	int i,j,k;
        vector <int> xx,yy;
	FOR(i,0,t)
	{
            sd(n);
            xx.clear();yy.clear();
            FOR(j,0,n)
            {
                sd(temp1);sd(temp2);
                xx.push_back(temp1);
                yy.push_back(temp2);
            }
            double ans=0;
            if (n==4)
            {
                FOR(j,0,4)
                {
                    FOR(k,0,4)
                    {
                        if (j!=k)
                        {
                            int ind1=0;
                            while(ind1==j||ind1==k) ind1++;
                            int ind2=ind1+1;
                            while(ind2==j||ind2==k) ind2++;
                            int dir1=cross(xx[j],yy[j],xx[k],yy[k],xx[ind1],yy[ind1]);
                            int dir2=cross(xx[j],yy[j],xx[k],yy[k],xx[ind2],yy[ind2]);
                            if ((dir1<0&&dir2<0)||(dir1>0&&dir2>0))
                            {
                                double d=dist(xx[j],yy[j],xx[k],yy[k]);
                                if (ans<d) ans=d;
                            }
                        }
                    }
                }
            }
            else
            {
                FOR(j,0,n)
                {
                    FOR(k,0,n)
                    {
                        if (i!=j)
                        {
                            double d=dist(xx[j],yy[j],xx[k],yy[k]);
                            if (ans<d) ans=d;
                        }
                    }
                }
            }
            printf("%.9f\n",ans);
	}
	return 0;
}
