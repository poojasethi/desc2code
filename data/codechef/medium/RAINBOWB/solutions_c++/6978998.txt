#include <bits/stdc++.h>

using namespace std;

const int M = 1e9 + 7;
long long dp[1000021][8];
int n;

long long calc(int pos, int bef) {
	if(dp[pos][bef] != -1) {
		return dp[pos][bef];
	}
	if(pos == n) {
		if(bef < 6) {
			return dp[pos][bef] = 0;
		}
		else {
			return dp[pos][bef] = 1;
		}
	}
	dp[pos][bef] = calc(pos + 1, bef);
	if(bef < 7 && pos != 1) {
		dp[pos][bef] += calc(pos + 1, bef + 1);
		dp[pos][bef] %= M;
	}
	return dp[pos][bef];
}

int main() {
	int t;
//	cin >> t;
	t = 1;
	while(t--) {
		cin >> n;
		n = n / 2 + (n % 2);
		for(int pos = n; pos > 0; pos--) {
			for(int bef = 1; bef <= 7; bef++) {
				if(pos == n) {
					if(bef < 6) {
						dp[pos][bef] = 0;
					}
					else {
						dp[pos][bef] = 1;
					}
					continue;
				}
				dp[pos][bef] = dp[pos + 1][bef];
				if(bef < 7 && pos != 1) {
					dp[pos][bef] += dp[pos + 1][bef + 1];
					dp[pos][bef] %= M;
				}
			}		
		}
		cout << dp[1][1] << endl;
	}
	return 0;
}
