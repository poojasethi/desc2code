t = int(raw_input())
for _ in range(t):
    n, m, k = map(int, raw_input().split())
    a = map(int, raw_input().split())
    b = []  # gain
    for _ in range(n):
        b.append(map(int, raw_input().split()))
    c = []  # loss
    for _ in range(n):
        c.append(map(int, raw_input().split()))
        
    init_cost = [0]*n
    for i in range(n):
        init_cost[i] = b[i][a[i] -1]
    
    max_gain = [0]*n
    for i in range(n):
        mp = 0 # max profit
        for j in range(m):
            np = b[i][j] - c[i][j]
            mp = max(mp, np)
        # calc gain with respect to init cost
        max_gain[i] =  mp - init_cost[i]
        
    max_gain.sort()
    max_gain.reverse()
    print sum(init_cost) + sum(max_gain[:k])
