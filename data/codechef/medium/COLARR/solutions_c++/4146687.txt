#include<iostream>
#include<stdio.h>
#include<vector>
using namespace std;
struct cell
{
	int c,g;
	vector<int> s;
};
vector<struct cell> a;
int N,M,K;
inline int fastread()
{
int i=0;
char c=getchar_unlocked();
while(c<48) c=getchar_unlocked();
while(c>47)
{
i=i*10+c-48;
c=getchar_unlocked();
}
return i;
}

int Qsort(int left,int right)
{
	int i,j;

	int mid;
	struct cell tmp;

	i=left;
	j=right;
	mid=a[(left+right)/2].g;
	do
	{
		while(a[i].g<mid)
		i++;
		while(mid<a[j].g)
		j--;
		if(i<=j)
		{
			tmp=a[i];
			a[i]=a[j];
			a[j]=tmp;
			i++;
			j--;
		}
	}while(i<=j);
	if(left<j)
	Qsort(left,j);
	if(i<right)
	Qsort(i,right);
}

int main()
{
	int t,i,j,k;

	cin>>t;
	while(t)
	{
		t--;
		cin>>N>>M>>K;
		a.resize(N);
		for(i=0;i<N;i++)//cin>>a[i].c;
		a[i].c=fastread();
		for(i=0;i<N;i++)
		{
			a[i].s.resize(M);
			for(j=0;j<M;j++)//cin>>a[i].s[j];
			a[i].s[j]=fastread();
		}
		for(i=0;i<N;i++)
		{
			a[i].g=0;
			for(j=0;j<M;j++)
			{
				k=fastread();//cin>>k;
				k=a[i].s[j]-k;
				if((k-a[i].s[a[i].c-1])>a[i].g)
				a[i].g=k-a[i].s[a[i].c-1];
			}
		}
		Qsort(0,N-1);
		k=0;
		for(i=N-1;i>=0;i--,K--)
		{
			if(K>0)k+=a[i].g+a[i].s[a[i].c-1];
			else k+=a[i].s[a[i].c-1];
		}
		cout<<k<<endl;
		a.resize(0);
	}

	return 0;
}
