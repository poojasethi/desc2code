#include <iostream>
    #include <cstdio>
    #include <algorithm>
    using namespace std;
    #define LIMIT 40000000
    char buffer[LIMIT], *pos;
    char buf[58000000];
    int a[1001];
    int b[1001][1001];
    int c[1001][1001];
    int delta[1001];
    inline int scan() {
    char cc;
    while ((cc=*pos++)<'0');
    int num = cc - '0';
    while ((cc=*pos++)>='0') num = num * 10 + cc - '0';
    return num;
    }
    int main(void){
    fread(buffer, 1, LIMIT, stdin);
     pos=buffer;
    int n, m , k;
    int t = scan();
    while(t--){
    n = scan();
    m = scan();
    k = scan();
    for ( int i = 1; i <= n; i++)
    a[i] = scan();
    for ( int i = 1; i <= n; i++)
    for ( int j = 1; j <= m; j++){
    b[i][j] = scan();
    }
    for ( int i = 1; i <= n; i++)
    for ( int j = 1; j <= m; j++){
    c[i][j] = scan();
    }
    for ( int i = 1; i <= n; i++){
    delta[i] = 0;
    for ( int j = 1; j <= m ; j++ )
    delta[i] = max(delta[i], b[i][j] - b[i][a[i]] - c[i][j]);
    }
    sort(delta+1,delta+n+1);
    int ans = 0;
    for ( int i = 1; i <= n; i++)
    ans += b[i][a[i]];
    for ( int i = 1; i <= k ; i++)
    ans += delta[n-i+1];
    printf("%d\n",ans);
    }
    return 0;
    }  
