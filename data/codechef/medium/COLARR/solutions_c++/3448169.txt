#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<bitset>
#include<cstring>
#include<algorithm>
#include<vector>

using namespace std;
struct box
{ int num,ind;
   }tmp;

bool comp(struct box const &a,struct box const &b)
{ return a.num<b.num; }

int t,n,m,k,b[1000][1000],tmpmax,a[1000],sum,l,tmp1;
vector<struct box> vect;
int main()
{
    scanf("%d",&t);
    while(t--)
    {    sum=0;
         scanf("%d%d%d",&n,&m,&k);
         
         for(int i=0;i<n;i++)
         scanf("%d",&a[i]);
           
        

         for(int i=0;i<n;i++)
          for(int j=0;j<m;j++)
          scanf("%d",&b[i][j]);

          for(int i=0;i<n;i++)
          sum=sum+b[i][a[i]-1];
         // cout<<"sum="<<sum<<endl;

         for(int i=0;i<n;i++)
         {  tmpmax=-10000;
          	for(int j=0;j<m;j++)
           	{ scanf("%d",&tmp1);
             	  tmp1=b[i][j]-tmp1-b[i][a[i]-1];
                 // cout<<">>"<<tmp1<<" ";
             	  if(tmp1>tmpmax)
             	  tmpmax=tmp1;
           	}
                //cout<<endl;
		if(tmpmax>0)
           	{ tmp.num=tmpmax;
             	  tmp.ind=i;
             	  vect.push_back(tmp);
           	}
         }
      l=vect.size();
      sort(vect.begin(),vect.end(),comp);
      
      for(int i=l-1;i>=0 && k--;i--)
      {//cout<<vect[i].num<<" "<<vect[i].ind<<endl;
      sum=sum+vect[i].num;}
      
      printf("%d\n",sum);
      vect.clear();
     }
 
    return 0;
}
     
 
                        