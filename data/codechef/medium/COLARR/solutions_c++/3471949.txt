#include<stdio.h>
#include<algorithm>
#include<vector>
#include<iostream>
#include<string.h>
#define mp make_pair
#define pb push_back
using namespace std;
int a[1005];
int b[1005][1005];
int c[1005][1005];
int m1[1005];
int m2[1005];
int net[1005][1005];
int done[1005];
int ne[1005];
vector<pair<int,int> > ma;
int cmp(pair<int,int> X,pair<int,int> Y)
{
	return X.first>Y.first;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,m,k;
		ma.clear();	
		memset(done,0,sizeof(done));			
		scanf("%d %d %d",&n,&m,&k);
		for(int i=1;i<=n;i++)
			scanf("%d",&a[i]);
		for(int i=1;i<=n;i++)
		{
			int mq=-1;
			for(int j=1;j<=m;j++)
			{
				scanf("%d",&b[i][j]);
				mq=max(mq,b[i][j]);
			}
			m1[i]=mq;
		}
		for(int i=1;i<=n;i++)
		{
			int mq=100000;
			for(int j=1;j<=m;j++)
			{
				scanf("%d",&c[i][j]);
				mq=min(mq,c[i][j]);
			}
			m2[i]=mq;
		}
		for(int i=1;i<=n;i++)
		{
			int mq=-1,pi=1000000;
			for(int j=1;j<=m;j++)
			{
				if(a[i]!=j)
					net[i][j]=b[i][j]-c[i][j];
				else
					net[i][j]=b[i][j],pi=b[i][j];
				mq=max(mq,net[i][j]);
			}
				ne[i]=mq;
			if(mq==pi)
				mq=0;	
			ma.pb(mp(mq-b[i][a[i]],i));
		}
//		cout<<endl;
//		for(int i=0;i<n;i++)
//			cout<<ma[i].first<<" "<<ma[i].second<<endl;
		sort(ma.begin(),ma.end(),cmp);
		vector<pair<int,int> >::iterator it=ma.begin();
		int ans=0;
		while(k--&&it->first>0)
		{
			int p=it->second;
			ans+=ne[p];
			done[p]=1;
			it++;
		}
		for(int i=1;i<=n;i++)
		{
			if(done[i]==0)
				ans+=b[i][a[i]];
		}
		printf("%d\n",ans);
	}
	return 0;
}
