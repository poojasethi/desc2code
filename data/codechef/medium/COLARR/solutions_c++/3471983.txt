#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>

#define MAXN 1001

using namespace std;

int t, k, n, m;
int A[MAXN], B[MAXN][MAXN], C[MAXN][MAXN], haruhi[MAXN];
int memo[MAXN][MAXN];
bool vis[MAXN][MAXN];

int dp(int idx, int k) {
	if(vis[idx][k]) 
        return memo[idx][k];
	vis[idx][k] = true;
	if(idx == n) 
        return memo[idx][k] = 0;
	if(k == 0) 
        return memo[idx][k] = dp(idx + 1, k) + B[idx][A[idx] - 1];
	return memo[idx][k] = max(dp(idx+1,k)+B[idx][A[idx] - 1], dp(idx+1,k-1) + haruhi[idx]);
}

int main() {
	scanf("%d", &t);
    while(t--) {
        scanf("%d %d %d", &n, &m, &k);
        for(int i = 0; i < n; i++) scanf("%d", &A[i]);
        for(int i = 0; i < n; i++)
        	for(int j = 0; j < m; j++)
        		scanf("%d", &B[i][j]);
        for(int i = 0; i < n; i++)
        	for(int j = 0; j < m; j++)
        		scanf("%d", &C[i][j]);
        for(int i = 0; i < n; i++)
        	haruhi[i] = -(1<<30);
        for(int i = 0; i < n; i++)
        	for(int j = 0; j < m; j++)
        		haruhi[i] = max(haruhi[i], B[i][j] - C[i][j]);
        memset(vis,(0),sizeof(vis));
        printf("%d\n", dp(0,k));   
    }
	return 0;
}
