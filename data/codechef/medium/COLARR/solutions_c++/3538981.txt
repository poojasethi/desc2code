#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
 
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;
typedef long double LD;
typedef pair<int, int> PII;
typedef map<int, int> MI;
typedef vector<int> VI;
typedef vector<vector<int> > VVI;
const double pi=acos(-1.0);
const double eps=1e-11;
const int mod = 1e9 + 7;
 
#define two(X) (1<<(X))
#define twoL(X) ((1LL)<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define gt getchar_unlocked()
#define rep(i, n) rb(i, 0, n)
#define rb(i, b, n) rbc(i, b, n, <)
#define rbe(i, b, n) rbc(i, b, n, <=)
#define rbc(i, b, n, c) for(int i = ((int)(b)); i c ((int)(n)); i++)
 
#define p(x) cout << x;
#define ps(x) cout << x << " "
#define pl cout << endl
#define pn(x) cout << x << endl
 
#define s(v) ((int) v.size())
#define all(v) v.begin(), v.end()
#define MP make_pair
#define PB push_back
#define X first
#define Y second
#define getcx getchar
//_unlocked
 
template<class T>
inline void readInt( T &n )//fast input function
{
   n=0;
   T ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   n=n*sign;
}
int input()
{
	char c;
	int n;
	for(c=gt;!((c>='0'&&c<='9')||c=='-');c=gt);
	n=0;
	if(c=='-')
	{	c=gt;
		return(-1);
	}
	else
	{
		for(;c>='0'&&c<='9';c=gt)
    	{
    		n=(n<<3)+(n<<1)+c-'0';
    	}
	}
    //cout<<n<<" ";
    return(n);
}
int earn[1005][1005],cost[1005][1005],color[1005],extr[1005];
int main()
{
    
	int t;
	t=input();
	while (t--) {
        int cnt =0;
		int n,m,k,ans=0;
	n=input();
	m=input();
	k=input();
	rep(i,n)
	{color[i]=input();
	color[i]--;
	}
                rep(i,n)
	     		    rep(j,m)
                       readInt(earn[i][j]);
 
		rep(i,n)
			rep(j,m)
				readInt(cost[i][j]);
		rep(i,n) {
			ans += earn[i][color[i]];
			int profit = earn[i][color[i]];
				rep(j,m) {
				if (j == color[i])
					continue;
				int b = earn[i][j] - cost[i][j];
				profit = max(profit, b);
			}
			if (profit > earn[i][color[i]])
				extr[cnt++]=(profit - earn[i][color[i]]);
		}
        	if(k>cnt)
            k=cnt;
		sort(extr, extr+cnt);
		reverse(extr,extr+cnt);
		rep(i,k) {
			ans += extr[i];
		}
		pn(ans);
	}
}
