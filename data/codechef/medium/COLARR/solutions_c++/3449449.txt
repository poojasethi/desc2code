#include <vector>
#include <set>
#include <algorithm>
#include <utility>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <climits>
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define FOR(i, j, n) for(i = j; i < n; ++i)
#define TR(c, it) for(auto it = c.rbegin(); it != c.rend(); ++it)
#define gc getchar_unlocked()
#define pb push_back
#define ALL(c) c.begin(), c.end()
#define sized 65535
 
using namespace std;
 
int get_number(){
int c, num=0;
while((c=gc)<=32);
num=c-'0';
while( (c=gc)>='0' && c<='9'){
num = (num<<3) + (num<<1) + c - '0';
}
return num;
}
 
int main(){
int t, n, m, k, i = 0, j = 0, maxi, cnt, pf;
cin>>t;
gc;
 
while(t--){
n = get_number();
m = get_number();
k = get_number();
cnt = 0;
pf = 0;
vector<int> b[n], c[n];
vector<int> v;
int a[n], d[n];
 
FOR(i, 0, n)
a[i] = get_number();
 
FOR(i, 0, n)
FOR(j, 0, m)
b[i].pb(get_number());
 
FOR(i, 0, n){
d[i] = b[i][a[i]-1];
FOR(j, 0, m){
c[i].pb(get_number());
b[i][j] = b[i][j] - c[i][j];
}
}
 
FOR(i, 0, n){
maxi = INT_MIN;
maxi = *max_element(ALL(b[i]));
if(maxi > d[i]){
v.pb(maxi - d[i]);
}
pf += d[i];
}
 
//cout<<v.size();
sort(v.begin(),v.end(),greater<int>());
for(vector<int>::iterator it = v.begin(); it != v.end(); ++it){
if(cnt >= k)
break;
else{
pf += (*it);
++cnt;
}
}
cout<<pf<<endl;
}
return 0;
}