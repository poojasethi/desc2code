//akartik80

#include <iostream>
#include <cstdio>
#include <cstring>

#define get getchar_unlocked
#define put putchar//_unlocked
#define li long int
#define ll long long int
#define pb push_back
#define mp make_pair
#define pd(x) printf("%d", x)
#define pdn(x) printf("%d\n", x)
#define pld(x) printf("%ld", x)
#define pldn(x) printf("%ld\n", x)
#define plld(x) printf("%lld", x)
#define plldn(x) printf("%lld\n", x)
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%ld", &x)
#define slld(x) scanf("%lld", &x)
#define ss(x) scanf("%s", x)
#define sc(x) scanf("%c", &x)
#define pc(x) printf("%c", x)
#define ps(x) printf("%s", x)
#define psn(x) printf("%s\n", x)

using namespace std;

inline int scan()
{
	int n = 0, sign = 1, ch = get();

	while (ch < 48 || ch > 57) {
		if (ch == '-') {
			sign = -1;
		}

		ch = get();
	}

	while (ch >= 48 && ch <= 57) {
		n = (n << 3) + (n << 1) + ch - 48;
		ch = get();
	}

	return n * sign;
}

int main()
{
	int t, i, j, n, count;
	char waste;
	bool flag;

	t = scan();

	while (t--) {
		n = scan();

		char a[n][n];
		bool ok1[n][n], ok2[n][n];

		memset(ok1, 0, sizeof(ok1));
		memset(ok2, 0, sizeof(ok2));
		count = 0;

		for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                sc(a[i][j]);
            }
            sc(waste);
		}

		for (i = 0; i < n; i++) {
            flag = 0;

            for (j = n - 1; j >= 0; j--) {
                if (a[i][j] == '#') {
                    flag = 1;
                }

                if (flag == 0) {
                    ok1[i][j] = 1;
                }
            }
		}

		for (j = 0; j < n; j++) {
            flag = 0;

            for (i = n - 1; i >= 0; i--) {
                if (a[i][j] == '#') {
                    flag = 1;
                }

                if (flag == 0) {
                    ok2[i][j] = 1;
                }
            }
		}

		for (i = 0; i < n; i++) {
            for (j = 0; j < n; j++) {
                count += ok1[i][j] && ok2[i][j];
            }
		}

		pdn(count);
	}
}
