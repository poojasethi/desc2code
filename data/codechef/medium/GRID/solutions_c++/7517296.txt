#include <iostream>
#include <stdio.h>
#include <cstring>
#define maxn 1000
#define gc getchar_unlocked

typedef long long ll;
using namespace std;

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
void scanint(ll &x)
{
    register ll c = gc();
    x = 0;
    ll neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

bool arr[maxn][maxn];
bool column_flag[maxn][maxn];
bool row_flag[maxn][maxn];
int main(){
	int testCases;
	scanint(testCases);
	
	int i,j;
	ll ctr = 0;
	int n;
	char t[maxn+1];
	
	while(testCases){
		scanint(n);
		for(i = 0;i<n;++i){
			scanf("%s",t);
			for(j = 0;t[j]!='\0';++j){
				if(t[j]=='.') arr[i][j] = 1;
				else arr[i][j] = 0;
			}
		}
		
		row_flag[n-1][n-1] = column_flag[n-1][n-1] = arr[n-1][n-1];
		if(arr[n-1][n-1]==1) ++ctr;
		
		for(i = n-2;i>=0;--i){
			
			column_flag[i][n-1] = (column_flag[i+1][n-1]&&arr[i][n-1]);
			row_flag[i][n-1] = arr[i][n-1];
			
			if((column_flag[i][n-1]&&row_flag[i][n-1])==1) ++ctr;
				
			column_flag[n-1][i] = arr[n-1][i];
			row_flag[n-1][i] = (row_flag[n-1][i+1]&&arr[n-1][i]);
			
			if((column_flag[n-1][i]&&row_flag[n-1][i])==1) ++ctr;
		}
		
		for(j=n-2;j>=0;--j){
			for(i=n-2;i>=0;--i){
				column_flag[i][j] = (column_flag[i+1][j]&&arr[i][j]);
				row_flag[i][j] = (row_flag[i][j+1]&&arr[i][j]);
				
				if((column_flag[i][j]&&row_flag[i][j])==1) ++ctr;
			}
		}
		printf("%lld\n",ctr);
	ctr = 0;
	--testCases;
	}
return 0;
}