#!/usr/bin/env python
import sys
from collections import defaultdict

def multiset(A, B):
    ret = []
    for a in A:
        for b in B:
            ret.append(a+b)
    ret.sort()
    return ret

def counts(A):
    ret = defaultdict(lambda: 0)
    for a in A:
        ret[a] += 1
    return sorted(ret.items())

#ranges:
#  N + 2 to 2N + 1: val - N - 1
#  2N + 2 to 3N:  N - (val - 2N - 1)

def solve(N, val):
    if val >= N + 2 and val <= 2 * N + 1:
        return val - N - 1
    elif val >= 2 * N + 2 and val <= 3 * N:
        return 3 * N + 1 - val
    else:
        return 0

if __name__ == '__main__':
    N, M = map(int, sys.stdin.readline().strip().split())
    for m in xrange(M):
        val = int(sys.stdin.readline().strip())
        print solve(N, val)
