#include<iostream>
#include<math.h>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define gc getchar_unlocked
using namespace std;
void fastin(int &x)
{
	register int a=gc();
	x=0;
	for(;a<48 || a>57;a=gc());
	for(;a>47 && a<58;a=gc())
		x=(x<<1)+(x<<3)+a-48;	
}
void fastin(long long int &x)
{
	register int a=gc();
	x=0;
	for(;a<48 || a>57;a=gc());
	for(;a>47 && a<58;a=gc())
		x=(x<<1)+(x<<3)+a-48;	
}

int main()
{
	int t,ind,j,r[40],flag,bit;
	long long n,rev,copy,i;
	fastin(t);
	while(t--)
	{
		fastin(n);
		flag=0;
		if(n>2)
		{
			for(i=2;i<=sqrt(n);i++)
			{
				copy=n;ind=rev=0;
				while(copy>0)
				{
					r[ind]=copy%i;
					copy/=i;
					ind++;					
				}
				for(j=0;j<ind;j++)
				rev=((rev*i)+r[j]);
				//cout<<rev<<" rev\n";
				if(rev==n) 
				{
					printf("%ld\n",i);
					flag=1;
					break;
				}
			}
			if(flag==0)
			{
				/*for(i=sqrt(n)+1;i<n;i++)
				{
					copy=n;ind=rev=0;
					while(copy>0)
					{
						r[ind]=copy%i;
						copy/=i;
						ind++;					
					}
					
					for(j=0;j<ind;j++)
					{
						//cout<<rev<<" rev\n";
						rev=((rev*i)+r[j]);
					}
					//cout<<rev<<" rev\n";
					if(rev==n) 
					{
						printf("%ld\n",i);
						break;
					}
				}*/
				int root=sqrt(n);
				for(bit=(n/((root)+1));bit>=1;bit--)
				{
					long int base=n/bit-1;
					if(n%bit==0 && bit<base && n/base==n%base)
					{
						printf("%ld\n",base);
						flag=0;
						break;
					}
					
				}
				
			}
			
		}
		else if(n==1) printf("2\n");
		else printf("3\n");
	}
	return 0;
	
}
