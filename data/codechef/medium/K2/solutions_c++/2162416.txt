/*
     shubham_1286(shubham verma)
                                   */
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<vector>
#include<deque>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include<list>
#include<deque>
#include<bitset>
#include<limits>
#include<sstream>
#define max(x,y) x>y?x:y
#define min(x,y) x<y?x:y
#define inf INT_MAX
#define low INT_MIN
#define mod 1000000007
#define ull unsigned long long
#define ll long long
int di[]={0,-1,1,0,1,1-1,-1};
int dj[]={-1,0,0,1,1,-1,-1,1};
using namespace std;
bool is_palin(int j);
int arr[1000];
ll n,x;
inline void fast(long long *a)
{
    register char c=0;
    while (c<33) c=getchar_unlocked();
    *a=0;
    while (c>33)
    {
        *a=*a*10+c-'0';
        c=getchar_unlocked();
    }
}
ll retans(ll n)
{
  if(n==1||n==5||n==3)
 return 2;
  else if(n==4||n==2)
  return 3;
  else if(n==6)
  return 5;

   int ans=0;
   bool p;
 for(int i=2;i<=(sqrt(n)+1e-8);i++)
 {
 p=is_palin(i);
  if(p)
  return i;
  if(n%i==0&&!p)
  {
  int r=n/i-1;
  if(r!=i)
  ans=r;
  }
}
if(ans!=0)
return ans;
return n-1;
}

bool is_palin(int j)
{
int count=0;
x=n;
count=0;
 
while(x!=0)
{
int p=x%j;
arr[count++]=p;
x=x/j;
}
for(int k=0;k<count/2;k++)
{
if(arr[k]!=arr[count-k-1])
return false;
}
return true;
}
 
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
  fast(&n);
  ll tot;
  //scanf("%lld",&n);
  tot= retans(n);
  printf("%lld\n",tot);
}
}
