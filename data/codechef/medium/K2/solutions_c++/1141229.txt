/*
CONCEPT OF THIS PROBLEM 
``````````````````````````````````````````````````````````````````````````````
minimum palindrome base 
1.point:->base of a number in between is  2<=base<= sqrt(n);
2.point:->if not then the base of a number is (n-i)/i when (n-i)/i>i AND (n-i)%i==0
where for second point i>=2 and i<=sqrt(n);
````````````````````````````````````````````````````````````````````````````````
*/
#include<iostream>
#include<stdio.h>
#include<cmath>
#include<cstdlib>
using namespace std;
int main()
{
long long int tc,n,b,s,r,t,i;
scanf("%lld",&tc);
while(tc--)
{
b=s=0;
scanf("%lld",&n);
if(n==1||n==3||n==5)
{
printf("2\n");continue;
}
if(n==2||n==4)
{
printf("3\n");continue;
}
if(n==6)
{
printf("5\n");continue;
}
for(i=2;i*i<=n;i++)
{
s=0;
t=n;
while(t)
{
r=t%i;
s=(s+r)*i;
t/=i;
}
s/=i;
if(n==s)
{
b=i;
break;
}
}
if(b)
printf("%lld\n",b);
else
{
for(i=sqrt(n);i;i--)
{
if((((n-i)/i)>i)&&!((n-i)%i))
{printf("%lld\n",(n-i)/i);break;}
}
}
}
return 0;
}
 
