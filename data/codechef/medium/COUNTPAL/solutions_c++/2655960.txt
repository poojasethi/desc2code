/* Template by
Ashwin Kumar
IIT Delhi */
#include <algorithm> //min(), max(), reverse(), sort(), next_permutation(), prev_permutation(), swap()
//make_heap(), pop_heap(), push_heap(), sort_heap()
# include <iostream>
#include <cassert> //assert()
#include <cmath> //cos(in radians), sin(), tan(), acos(), asin(), atan(), modf(break into frac and inte parts)
//log(), log10(), log2(), pow(), sqrt(), cbrt(), ceil(), floor(), fmod(), abs()
#include <cstdio> //fclose(), fopen(), fprintf(), fscanf(), printf(), scanf(), gets(), puts()
#include <cstdlib> //srand(time(NULL)), rand(), itoa(), malloc(), free()
#include <cstring> //memcpy(), strcpy(), strcat(), strcmp(), memset(), strlen(), strtok(), strrchr()
#include <sstream>
#include <string> //to_string(any numerical value), stoi(), stoll()
#include <ctime>
#include <deque> //iterators: begin(), end(), rbegin(), rend()
//access: operator[], at(), front(), back()
//modifiers: push_back(), push_front(), pop_back(), pop_front(), erase(), clear()
#include <list> //begin(), end(), push_back(), pop_back()
#include <map> //begin(), end(), rbegin(), rend(), operator[], at(), clear(), find()
//priority_queue: top(), push(), pop()
#include <queue> //front(), back(), push(), pop()
#include <set> //begin(), end(), rbegin(), rend(), insert(), erase(), clear(), find()
#include <stack> //top(), push(), pop()
#include <vector> //iterators: begin(), end(), rbegin(), rend()
//access: operator[], at(), front(), back()
//modifiers: push_back(), pop_back(), erase(), clear()
#include <climits> // INT_MAX, INT_MIN
#include <iomanip> //setPrecison(x), cout<<fixed<<setPrecison(2)
using namespace std;
typedef long long int LL;
#define MOD 1000000007 

// http://www.codechef.com/OCT10/problems/COUNTPAL/

string s;
bool isPalin[1005][1005];
LL DP[1005];

void init_palin(int len)
{
	int n = len;
	for (int i = n-2; i >= 0; --i)
	{
		for (int j = i+1; j < n; ++j)
		{
			if(s[i]==s[j])
			{
				if(j==i+1)
					isPalin[i][j] = true;
				else
					isPalin[i][j] = isPalin[i+1][j-1];
			}				
			else
				isPalin[i][j] = false; 
		}
	}
}

int ispalin(int a, int b){
		int i=a,r=1,j=b;
		while(i<j){
							 if(s[i]!=s[j]){r=0;break;}
							 i++;j--;
							 }
		return r;
}

void fill_DP(int len)
{
	DP[0] = 1;
	for (int i = 1; i < len; ++i)
	{
		for (int j = i; j >=0; --j)
		{
			if(isPalin[j][i]==true)
			{
				if(j!=0)
					DP[i] = (DP[i] + DP[j-1])%MOD;
				else
					DP[i] = (DP[i] + 1)%MOD;
			}
		}
	}

}

int main(int argc, char const *argv[])
{
	memset(isPalin,1,sizeof isPalin);
	memset(DP,0,sizeof DP);
	cin>>s;
	int l = s.length();
	init_palin(l);
	fill_DP(l);
	printf("%lld\n",DP[l-1]);
	return 0;
}
