#include<bits/stdc++.h>
#define MAX 100001
#define gc getchar_unlocked
inline void inp( int *n )
{
*n=0;
int ch=gc();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=gc();}
while( ch >= '0' && ch <= '9' )
*n = (*n<<3)+(*n<<1) + ch-'0', ch=gc();
*n=*n*sign;
}
using namespace std;
int main()
{
	int N;
	int M;
	int P;
	inp(&N);
	inp(&M);
	inp(&P);

	vector< int > gra[N + 2];
	int arr[M + 2];
	int ans;

	for(int i = 0; i < P; ++i) {
		 int x;
		 int y;
		 inp(&x);
		 inp(&y);

		 gra[x].push_back(y);
	}

	for(int i = 1; i <=  M; ++i)
		arr[i] = i;

	for(int i = 1; i <= N; i++) {

		int size = gra[i].size();
		bool flg = false;

		for(int j = 0; j < size; ++j) {
			arr[gra[i][j]]++;
		}

		for(int j = 0; j < size; ++j) {
			if(( gra[i][j] < M) && (arr[gra[i][j]] > arr[gra[i][j] + 1])) {
				flg = true;
				break;
			}
		}

		if(!flg)
			ans = arr[M] - arr[1];
		else
			ans = -1;

		printf("%d\n",ans);

		for(int j = 0; j < size; ++j) {
			arr[gra[i][j]] = gra[i][j];
		}
	}

	return 0;
}
