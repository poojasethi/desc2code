#include <bits/stdc++.h>
 
using namespace std;
 
#define      pii               std::pair<int,int>
#define      mp(a,b)           std::make_pair(a,b)
#define      x                 first
#define      y                 second
int row[100005];
void reset(int m)
{
	int i;
	for (i=1;i<=m;i++)
 	 	row[i]=i;
}
int compute(vector<pii>& v,int m)
{
	int i=0,sum=m-1;
	int sz=v.size();
	//printf("hi%d\n", sz);
	if(m>1)
	{
		if(sz>0)
		{
			//printf("sfg%d %d\n",v[0].x,v[0].y );
		for(i=0;i<sz-1;i++)
		{
			int i1=v[i].x+v[i].y,i2=v[i+1].x+v[i+1].y;
			/*if(i1>v[i].x+1 || i2>v[i+1].x+1)
				return -1;*/
			if(v[i].x+1==v[i+1].x)
			{
				if(i1>i2)
					return -1;
			}
			else if(i1>v[i].x+1)
				return -1;
				
		}
		//printf("hurray\n");
		if(v[i].x==m)
		{
			sum=sum+v[i].y;
		}
		else if(v[i].x+v[i].y>v[i].x+1)
		{
			//printf("shit \n" );
			return -1;
		}
		//printf("hjkh %d\n",v[0].x );
		if(v[0].x==1)
		{
			//printf("hii\n");
			sum=sum-v[0].y;
			//printf("%d\n",sum );
		}
		}
		return sum;
	}
	else
		return 0;
}
int main()
{
 int m,n,p;
 scanf("%d %d %d",&n,&m,&p);
 int i;
 pii a[100005];
 for (i=0;i<p;i++)
 {
 	scanf("%d %d",&a[i].x,&a[i].y);
 }
 
 sort(a,a+p);
 i=0;
 reset(m);
 //printf("hi\n");
 int j=0,k=1,ans[100005];
 int count=0;
 std::vector<pii> v;
 int frequency=1,temp;
 /*for (i=0;i<p;i++)
 {
 	printf("%d %d   ",a[i].x,a[i].y);
 }
 printf("\n");*/
 while(j<p)
 {
  	while(k<a[j].x)
  	{
 		ans[k]=compute(v,m);
 		k++;
 	}
 	temp=a[j].x;
 	while(a[j].x==temp && j<p)
 	{
 		//printf("frequency%d\n",frequency );
 		while(a[j].y==a[j+1].y && j<p-1 && a[j].x==temp && a[j+1].x==temp)
 		{
 			frequency++;
 			j++;
 		}
 		//printf("frequencyn%d\n",frequency );
 		//row[a[j].y]++;
 		//printf("make pair %d %d\n",a[j].y,frequency );
 		v.push_back(mp(a[j].y,frequency));
 		j++;
		frequency=1;
	}
 	
 	//row[a[j].y]++;
 	//printf("hi2  %d %d\n",a[j].x,compute(m));
 	ans[temp]=compute(v,m);
 	//printf("tu%d\n",ans[temp] );
 	v.clear();
 	//printf("hi3\n");
 	k=temp+1;
 	//printf("hi4\n");
    //reset(m);
 }
 //printf("hiii\n");
 while(k<=n)
 {
 	ans[k]=compute(v,m);
 	k++;
 }
 for (i=1;i<=n;i++)
 {
 	printf("%d\n",ans[i]);
 }

return 0;


}