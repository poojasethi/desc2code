#include<cstdio>
#include<vector>
#include <algorithm>
using namespace std;
const int Len=100007;
//int flag[Len];
 
typedef struct point{
int x;
int y;
}P;
 
bool ascend(const P &a, const P &b)
{
    return a.y<b.y;
}
bool ascend2(const P &a, const P &b)
{
    return a.x<b.x;
}
int main()
{
    int cnt1,cnt2,cnt3;
    int n,m,p;
    int res[Len];
    vector<P> pp;
    P t;
    int t1,t2;
    //int x[Len],y[Len];
    int i,j;
    scanf("%d%d%d",&n,&m,&p);
 
   // memset(cnt,0,sizeof(cnt));
 
    for( i=1;i<=n;i++)
    {
             res[i]=m-1;
    }
    if(p==0)
    {
        for(i=1;i<=n;i++)
       {
         printf("%d\n",res[i]);
       }
       return 0;
    }
    for( i=0;i<p;i++)
    {
        scanf("%d%d",&t.x,&t.y);
        if(t.y==m)
        {
            res[t.x]++;
        }
         if(t.y==1)
        {
            res[t.x]--;
        }
        pp.push_back(t);
    }
 
    sort(pp.begin(),pp.end(),ascend);
    stable_sort(pp.begin(),pp.end(),ascend2);
    t1=pp[0].x;
    t2=pp[0].y;
    cnt1=1;
    cnt2=0;
 
    for(i=1 ;i<p;i++)
    {
        if(pp[i].x==t1 && pp[i].y==t2)
        {
            cnt1++;
        }
        if(pp[i].x==t1 && pp[i].y==t2+1)
        {
            cnt2++;
        }
        if(pp[i].x==t1 && pp[i].y==(t2+2))
        {
            if(cnt2<(cnt1-1))
            {
                res[pp[i].x]=-1;
            }
            cnt1=cnt2;
            cnt2=1;
            t2=t2+1;
        }
        if(pp[i].x==t1 && pp[i].y>(t2+2))
        {
            //cnt2=0;
            if(cnt2<(cnt1-1))
            {
                res[pp[i].x]=-1;
            }
            if(cnt2>=2)
            {
                res[pp[i].x]=-1;
            }
            cnt1=1;
            cnt2=0;
            t2=pp[i].y;
        }
 
        if(pp[i].x!=t1)
        {
            if(cnt2<(cnt1-1) && t2 != m)
            {
                res[t1]=-1;
            }
            if(cnt2>=2  && (t2+1)!=m)
            {
                res[t1]=-1;
            }
            t1=pp[i].x;
            t2=pp[i].y;
            cnt1=1;
            cnt2=0;
        }
 
    }
    if(cnt2<(cnt1-1) && t2 != m)
    {
                res[t1]=-1;
    }
    if(cnt2>=2  && (t2+1)!=m)
    {
                res[t1]=-1;
    }
    for(i=1;i<=n;i++)
    {
 
           printf("%d\n",res[i]);
    }
    return 0;
}