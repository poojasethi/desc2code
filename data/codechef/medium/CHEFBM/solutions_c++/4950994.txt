#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

bool myfunction (pair<int, int>i,pair<int, int>j)
{
	if(i.first == j.first)
		return i.second > j.second;
	return(i.first < j.first);
}

void func(vector<pair<int, int > >& v, int m, int n, int p)
{
	sort(v.begin(), v.end(),myfunction);
	v.push_back(make_pair(-1,-1));
	int i, j = 0, flag, arr[m+5], sum, startindex = 0;
	memset(arr,0,(m+5)*sizeof(int));
	for(i=0;i<n;i++)
	{	
		while(startindex<j)
		{
			arr[v[startindex].second - 1] = 0;
			startindex++;
		}
		flag =0;
		sum = m-1;
		while(v[j].first == i+1)
		{
			
			if(flag == 0)
			{
				if(v[j].second == m)
				{
					sum++;
					arr[m -1]++;
				}
				else
				{
					if(arr[v[j].second -1] - arr[v[j].second] == 1)
					{
						flag++;
						printf("-1\n");
					}
					else
					{
						arr[v[j].second -1]++;
						if(v[j].second == 1)
							sum--;
					}
				}
			}
			j++;
		}
		if(flag == 0)
			printf("%d\n",sum);
	}
}

int main()
{
	int num1,n,m,p,num2;
	vector<pair<int, int > >v;
	scanf("%d %d %d",&n,&m,&p);
	
	for(int i = 0;i<p;i++)
	{
		scanf("%d %d",&num1, &num2);
		v.push_back(make_pair(num1, num2));
	}
	
	if (m == 1)
	{
		for(int i=0;i<n;i++)
			printf("0\n");
		return 0;
	}
	
	func(v, m, n, p);
	return 0;
}