#include <map>
#include <vector>
#include <memory.h>
#include <iostream>
#include <cstdio>
#include <algorithm>
 
using namespace std;


int main()
{  
    int n,m,p;
	cin >> n >> m >> p;
    
	vector<pair<int, int> > vec;
    int x,y;
    
 for(int i=0;i<p;i++)
    {
        scanf("%d %d",&x,&y);
        vec.push_back(make_pair(x,y));
    }
    
    sort(vec.begin() ,vec.end());
   
    int count;
	int ans[n+1];
    for(int u = 0; u <= n ; u++)
        ans[u] = -100001;
    
    for(int i = 0; i < p ; )
    {
        int j = i;
        count = 0;
		
		 map<int,int> mymap;
        map<int,int>::iterator it1,it2;
		
        int h = vec[j].first;
        while(vec[j].first == h && j<p &&i<p)
        {
            if(vec[j].second == m)
                count ++;
            if(vec[j].second == 1)
                count --;
            j++;

			int Y = vec[i].second;
            if(!mymap[Y])
                mymap[Y] = Y ;
 
              mymap[Y]++;
            
            if(Y < m)
            {
                if(!mymap[Y+1])
                    mymap[Y+1] = Y + 1;
            }
            
            i++;

	    }
		it2 = mymap.begin();
        it2 ++;
        int flag = 0;
		for(it1=mymap.begin();it2!=mymap.end();it1++,it2++)
		{
			 if(it1->second > it2->second)
			{
				flag=1;
				break;
			}
		}
		if(flag==0)
			ans[h]=m-1+count;
		else
            ans[h] = -1;
	}
	for(int k = 1 ; k <= n ; k++)
        {
            if(ans[k] == -100001)
                printf("%d\n",m-1);
            else
                printf("%d\n",ans[k]);
        }
	 vec.clear();
    return 0;
}
		