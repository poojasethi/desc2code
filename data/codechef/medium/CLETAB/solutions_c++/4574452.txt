#include<iostream>
#include<vector>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
int table[410],tablecontent[401],indexing[401];
int main()
{
    int t,n,m,count,maximum,index;
    scanf("%d",&t);
    while(t--)
    { count=0;
        scanf("%d %d",&n,&m);
        int A[m+1];
        for(int i=0;i<=401;i++)
            table[i]=tablecontent[i]=indexing[i]=0;
        for(int i=0;i<m;i++)
            scanf("%d",&A[i]);
        for(int q=0;q<m;q++)
        { //for(int x=0;x<n;x++)
        //printf("%d ",table[x]);
      //  printf("\n");

            if(tablecontent[A[q]])
                continue;
            if(!table[n-1]) //empty table remains
            { count++;
                for(int i=0;i<n;i++)
                    if(!table[i])
                {
                    table[i]=A[q];
                    tablecontent[A[q]]=1;
                    break;
                }
            }
            else // now i need to replace somebody
            {maximum=-2;count++;
                for(int k=q+1;k<m;k++)
                {
                if(!indexing[A[k]])  // i havent done already then do it . if done dont touch
                    indexing[A[k]]=k;    //elememt A[k] comes at kth positio
                }
                for(int j=0;j<n;j++)
                {
                    if(!indexing[table[j]]) // no future
                    {
                        tablecontent[table[j]]=0;
                        tablecontent[A[q]]=1;
                        table[j]=A[q];
                        maximum=-1;
                        break;
                    }
                    else
                    {
                        if(indexing[table[j]]>maximum)
                        {
                            maximum=indexing[table[j]];
                            index=j;
                        }
                    }
                }
                if(maximum!=-1) //no element with 0 occuren
                {
                    tablecontent[table[index]]=0;
                    tablecontent[A[q]]=1;
                    table[index]=A[q];
                }

                for(int z=0;z<=401;z++)
                    indexing[z]=0;

            }
        }
     printf("%d\n",count);
    }
return 0;
}
