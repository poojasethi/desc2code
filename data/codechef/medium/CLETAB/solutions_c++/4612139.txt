#include <algorithm>
#include <functional>
#include <numeric>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <cassert>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <bitset>
#include <sstream>
#include <limits.h>
using namespace std;
typedef long long ll;
vector<int>arr[505];
int main()
{
    int t;
    int n,m,cnt=0;
    int order[505],fault,present[505],table[505];
    int index,t1,minm;
    scanf("%d",&t);
    while(t--)
    {
        for(int i=1; i<=405; i++)present[i]=0;
        fault=0;
        scanf("%d%d",&n,&m);
        for(int i=1; i<=m; i++)
        {
            scanf("%d",&order[i]);
            arr[order[i]].push_back(i);
        }
        for(int i=1; i<=405; i++)
            if(arr[i].size())
                arr[i].push_back(INT_MAX);

//        for(int i=1; i<=4; i++)
//        {
//            cout<<"\n"<<i<<"-->";
//            for(int j=0; j<arr[i].size(); j++)
//                cout<<arr[i][j]<<" ";
//        }

        cnt=0;
        for(int i=1; i<=m; i++)
        {
            if(present[order[i]])continue;
            fault++;
            if(cnt<n)
            {
                present[order[i]]=1;
                table[cnt++]=order[i];
            }
            else
            {
                minm=-1;
                index=0;
                for(int j=0; j<n; j++)
                {
                    for(int k=0; k<arr[table[j]].size(); k++)
                    {
                        if((arr[table[j]][k])>i)
                        {
                            t1=arr[table[j]][k];
                            break;
                        }
                    }
                    if(minm<t1)
                    {
                        minm=t1;
                        index=j;
                    }
                }
                present[table[index]]=0;
                table[index]=order[i];
                present[order[i]]=1;
            }
        }
        printf("%d\n",fault);
        for(int i=0; i<=405; i++)arr[i].clear();
    }
    return 0;
}
