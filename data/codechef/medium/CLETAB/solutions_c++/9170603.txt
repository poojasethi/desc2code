#include<bits/stdc++.h>
using namespace std;
int order[405];
int n,m;
deque <int> q;
deque <int> :: iterator it,mx;
int nextRef[405][405];

void compute()
{
  // nextRef[n][idx] : smallest j>idx order[j] = n
  for(int i=0;i<401;i++)
  for(int j=0;j<=m;j++)
  nextRef[i][j] = -1;

  for(int i=0;i<401;i++)
  nextRef[i][m] = INT_MAX;

  for(int i=0;i<401;i++)
  for(int j=m-1;j>=0;j--)
  {
    if(order[j]==i&&j>0)
    nextRef[i][j-1] = j;
    if(nextRef[i][j]==-1)
    nextRef[i][j] = nextRef[i][j+1];
  }
}

int _find(int v,int idx)
{
  for(it=q.begin();it!=q.end();it++)
  if(*it==v)
  return 0;
  if(q.size()==n)
  {
    mx = q.begin();
    for(it=q.begin();it!=q.end();it++)
    {
      if(nextRef[*it][idx]>nextRef[*mx][idx])
      mx  = it;
    }
    q.erase(mx);
  }
  q.push_back(v);
  return 1;
}

void init()
{
  cin>>n>>m;
  for(int i=0;i<m;i++)
  cin>>order[i];
  compute();
  q.clear();
  int fault = 0;
  for(int i=0;i<m;i++)
  fault+=_find(order[i],i);
  cout<<fault<<endl;
}

int main()
{
  int t;
  cin>>t;
  while(t--)
  init();
  return 0;
}


