#include <cstdlib> 
#include <cctype> 
#include <cstring> 
#include <cstdio> 
#include <cmath> 
#include <algorithm> 
#include <vector> 
#include <string> 
#include <iostream> 
#include <sstream> 
#include <map> 
#include <set> 
#include <queue> 
#include <stack> 
#include <fstream> 
#include <numeric> 
#include <iomanip> 
#include <bitset> 
#include <list> 
#include <stdexcept> 
#include <functional> 
#include <utility> 
#include <ctime>
#define MOD 1000000007

using namespace std;
int main(void)
{
   int t,n,m,occ,mx,ind,cl;
   int c[401];
   int prevocc[401];
   vector<int> nextocc(401);
   vector<int> sitting(401);

   
   scanf("%d",&t);
   while(t--)
   {
      scanf("%d %d",&n,&m);
      for(int i=0;i<m;i++)
       scanf("%d",&c[i]);
      memset(prevocc,-1,sizeof prevocc);
      //memset(nextocc,,sizeof nextocc);
      fill(nextocc.begin(),nextocc.end(),500);
      
      for(int i=0;i<m;i++)
      {
         if(prevocc[c[i]]!=-1)
           nextocc[prevocc[c[i]]]= i;
           
         prevocc[c[i]]=i;
      }
      /*printf("next occs \n");
      for(int i=0;i<m;i++)
      printf("%d ",nextocc[i]);
      printf("\n");*/
      
     // memset(sitting,0,sizeof sitting);
     fill(sitting.begin(), sitting.end(), -1);
      occ=0;
      cl=0;
      //vector<int> seats;
      vector<int> nc;
      for(int i=0;i<m;i++)
      {
        if(sitting[c[i]]!=-1)
        { nc[sitting[c[i]]]=nextocc[i];
         continue;}
         
        if(occ<n)
        { sitting[c[i]]=occ;
          //seats.push_back(c[i]);
          nc.push_back(nextocc[i]);
          occ++;
          cl++;
        }
        else
        {
            mx=0;
            for(int j=0;j<n;j++)
            { mx=max(mx,nc[j]);
              if(mx==nc[j])ind=j;
            }
            if(nc[ind]!=500)
            { sitting[c[nc[ind]]]=-1;
             
              //printf("remove %d place %d\n",c[nc[ind]],c[i]);
            }
           // else
           // printf("remove from %d, place %d\n",ind,c[i]);
            sitting[c[i]]=ind;
            nc[ind]=nextocc[i];
            cl++;
        }
      }//forloop
      printf("%d\n",cl);
      }
      return 0;
}
               
              
      
   
