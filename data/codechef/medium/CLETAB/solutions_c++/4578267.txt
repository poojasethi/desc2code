#include <bits/stdc++.h>
using namespace std;

#define sd(x) scanf("%d",&x)
#define nmax 200
#define cmax 400
#define mmax 400
#define pii pair<int,int>

int next[mmax+2];
int arr[mmax+2];
int next_c[cmax+2];
int lst[nmax+2];
int nxt_occur[nmax+2];
bool pres[cmax+2]={0};

int n,m,c;

void solve(){
    int ctr,maxval,cost;
    sd(n); sd(m);
    for(int j=1;j<=m;j++){
        sd(arr[j]);
        next[j]=m+1;
    }
    for(int k=1;k<=cmax;k++){
        next_c[k]=m+1;
    }
    for(int j=m;j>=1;j--){
        next[j] = next_c[ arr[j] ];
        next_c[arr[j]]=j;
    }
    ctr=0;cost=0;
    int tmp,latest; bool f;
    for(int j=1;j<=m;j++){
        f=0;
        for(int k=0;k<ctr;k++){
            if(lst[k]==arr[j]){
                nxt_occur[k]=next[j];
                f=1; break;
            }
        }
        if(f) // if already thewre
            continue;
        if(ctr<n){
            nxt_occur[ctr]=next[j];
            lst[ctr]=arr[j];
            cost++; ctr++;
            continue;
        }
        else{
            tmp=-1; latest=j-1;
            for(int k=0;k<n;k++){
                if(nxt_occur[k]>latest){
                    latest=nxt_occur[k]; tmp=k;
                }
            }
            lst[tmp]=arr[j];
            nxt_occur[tmp]=next[j];
            cost++;
        }
    }
    printf("%d\n",cost);
}

int main()
{
    int t;
    sd(t);
    while(t--){
        solve();
    }
return 0;
}
