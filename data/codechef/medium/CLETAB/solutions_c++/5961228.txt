/*input
2
2 5
1 2 3 2 1
3 2
4 1
*/


#include<iostream>
#include<stdio.h>
#include<algorithm>
#define gtc getchar_unlocked()
using namespace std;

bool flag[501];

int read_int()
{
    register int noRead=0,isneg=0;
    register char p=gtc;
    for(;p<48 || p>57;p=gtc){if(p=='-') isneg=1;}
    while(p>47 && p<58){ noRead = (noRead << 3) + (noRead << 1) + (p - '0');p=gtc;}
    if(isneg) noRead = -noRead;
    return noRead;
}
 
inline void fastWrite(int a)
{
	char snum[20];
	int i=0;
	do
	{
		snum[i++]=a%10+48;
		a=a/10;
	}while(a!=0);
	i=i-1;
	while(i>=0)
	putchar_unlocked(snum[i--]);
	putchar_unlocked('\n');
}

int findremoval(int *a,int m,int i,int maxm)
{
	int j,save;
	bool temparr[maxm+2];
	for(j=0;j<=maxm;j++)
		temparr[j]=false;
	for(j=i+1;j<m;j++)
	{
		if(flag[a[j]]&&!temparr[a[j]])
			save=a[j];
		temparr[a[j]]=true;
	}
	for(j=1;j<=maxm;j++)
	{
		if(flag[j]&&!temparr[j])
			break;
	}
	if(j!=maxm+1){
		save=j;
	}
	return save;

}

int main()
{
	int t=read_int();
	while(t--)
	{
		int n=read_int(),m=read_int();
		int i,maxm=0;
		int a[m];
		for(i=0;i<m;i++)
		{
			a[i]=read_int();
			if(a[i]>maxm)
				maxm=a[i];
		}
		for(i=0;i<=maxm;i++)
			flag[i]=false;
		int clean=0;
		int freeit=n;
		for(i=0;i<m;i++)
		{
			if(freeit==0&&flag[a[i]]==false)
			{
				int removal=findremoval(a,m,i,maxm);
				flag[a[i]]=true;
				flag[removal]=false;
				clean++;
			}
			else if(freeit>0&&flag[a[i]]==false)
			{
				freeit--;
				flag[a[i]]=true;
				clean++;
			}
		}
		fastWrite(clean);
	}
	return 0;
}