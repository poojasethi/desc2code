#include<stdio.h>
#include<queue>
using namespace std;

int tables[402] = {0};         
int custm[402];              
queue<int> remain[402];       
int seated[402];               
int main()
{
    int cases,tabs,ords,occupied,clean,max,victim;
    scanf("%d",&cases);
    while(cases--)
    {
        scanf("%d%d",&tabs,&ords);
        occupied = clean = 0;
        for(int i= 0; i<401; i++)
        {
            tables[i] = 0;
            seated[i] = 0;
        }
        for(int i=1; i<=ords; i++)
        {
            scanf("%d",&custm[i]);
            remain[custm[i]].push(i);
        }
        for(int i=1; i<=ords; i++)
        {
            if(seated[custm[i]] == 0)       
            {
                if(occupied < tabs)        
                {
                    tables[++occupied] = custm[i];
                    seated[custm[i]] = 1;
                    remain[custm[i]].pop();
                }
                else                        
                {
                    max = 0;
                    for(int j=1; j<=tabs; j++)
                    {
                        if(!remain[tables[j]].size())   
                        {
                            victim = j;                     
                            break;
                        }
                        else                                   
                        {                                     
                            if(remain[tables[j]].front() > max)
                            {
                                max = remain[tables[j]].front();
                                victim = j;
                            }
                        }
                    }
                    seated[tables[victim]] = 0;
                    tables[victim] = custm[i];
                    seated[custm[i]] = 1;
                    remain[custm[i]].pop();
                }
                clean++;
            }
            else
                remain[custm[i]].pop();

        }
        printf("%d\n",clean);
    }

    return 0;
}
