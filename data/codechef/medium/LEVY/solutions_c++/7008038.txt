/* Author : Anurag El Dorado */

/* Libraries */
#include <bits/stdc++.h>
#include <time.h>
using namespace std;

//MACRO DEFINITIONS
/* Data Types */
#define lld long long int
#define llu unsigned long long int
/* Input Methods */
#define sd(var) scanf("%d", &var)
#define slld(var) scanf("%lld", &var)
#define sllu(var) scanf("%llu", &var)
/* MOD  value*/
#define MOD 1000000007
/* Output Methods*/
#define print_arr(a, n) for (int I = 0; I < n; I++) { cout << a[I] << " "; } cout << endl;
#define print_vec(v) 	for (long long int I = 0; I != v.size(); I++) {    cout << v[I] << " ";    } cout << endl;
#define deb(x) cout << #x << " = " << x << endl;
#define debb(x, y) cout << #x << " = " << x << "\t" << #y << " = " << y << endl;
#define pr(x) cout << x << endl;
#define plnd(x) printf("%d\n", x);	//printf with new line
#define pd(x) printf("%d ", x);	//printf without new line
/* Timing Methods */
#define TIMEIT cout << "TIME VARIABLE REINITIALISED\n"; clock_t start_time_ = clock();
#define TIMEUP cout << "Time: " << (clock() - start_time_) / (double)(CLOCKS_PER_SEC) << "s" << endl;
/* OTHERS */
#define N 100005
//END MACRO DEFINITIONS

int main() {
	int tc, i, j, k, n, count;
	bool prime[N];
	vector<int> primeNum;
	memset(prime, true, sizeof prime);
	prime[0] = false; prime[1] = false;
	int ul = sqrt(N);
	
	for (i = 2; i < ul; i++) {
		if (prime[i]) {
			for (j = i * i; j <= N; j += i) {
				prime[j] = false;
			}
		}
	}

	for (i = 0; i < N; i++) {
		if (prime[i]) {
			primeNum.push_back(i);
		}
	}
	
	sd(tc);
	
	while (tc--) {
		sd(n);
//		TIMEIT;
		count = 0;
		for (i = 0; i != primeNum.size(); i++) {
			if (primeNum[i] >= n / 2) {
				break;
			}
			if (prime[n - 2 * primeNum[i]]) {
				count++;
			}
//			for (j = 0; j != primeNum.size(); j++) {
//				if (primeNum[j] > (n - i) / 2) {
//					break;
//				}
//				if (n == primeNum[i] + 2 * primeNum[j]) {
////					debb(primeNum[i], primeNum[j])
//					count++;
//				}
//			}
		}
		pr(count);
//		TIMEUP;
	}
	
	
	return 0;
}