#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

bool isNotPrime[1000000];
vector<int> qList;
void genPrimes()
{
	isNotPrime[1] = true;
	for(int i=2; i<=1000; i++){
		for(int j=2; i*j<1000000; j++){
			isNotPrime[i*j] = true;
		}		
	}
	for(int i=1; i<1000000; i++){
		if(!isNotPrime[i]){
			qList.push_back(i);
		}
	}
}

void calc()
{
	int n;
	cin>>n;
	int ans = 0;
	int siz = qList.size();
	for(int i=0; i<siz; i++){
		int x = 2*qList[i];
		int p = n - x;
		if(p<2)
			break;
		bool exists = !isNotPrime[p];
		if(exists){
			// cout<<p<<","<<x/2<<endl;
			ans++;
		}
	}
	cout<<ans<<endl;
}

int main(int argc, char const *argv[])
{
	genPrimes();
	int t;
	cin>>t;
	while(t){
	calc();	
	t--;
	}
	return 0;
}