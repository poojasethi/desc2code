#include<iostream>
#include<vector>
#include<map>
#include<algorithm>
#include<set>
#include<cstring>
#include<cmath>
#include<stack>
#include<queue>

#define MOD 1000000007
#define LL long long int
#define PB push_back
#define sd(x) scanf("%d",&x)
#define sld(x) scanf("%lld",&x)
#define pf(x) printf("%d",x)
#define pef(x) printf("%d\n",x)

LL max(LL x,LL y)
{if(x>y) return x;return y;}

LL min(LL x,LL y)
{if(x<y) return x;return y;}

LL gcd(LL x,LL y)
{LL temp;if(x<y) { temp=x;x=y;y=temp;}while(x%y){temp = y;y = x%y;x=temp;}return y;}

LL po(LL x,LL y)
{if(y==0) return 1;LL ans=po(x,y/2);ans*=ans;if(y&1) ans*=x;return ans;}

using namespace std;

int main()
{
    LL test=1;
    cin>>test;
    while(test--)
    {
        LL n,k;
        cin>>n>>k;
        LL a[n];
        for(LL i=0;i<n;i++) cin>>a[i];
        
        LL en[n];
        
        en[0] = a[0];
        
        for(LL i=1;i<n;i++)
        en[i] = max(en[i-1]+a[i],a[i]);
        
        LL b[n];
        
        b[n-1] = a[n-1];
        
        for(LL i=n-2;i>=0;i--)
        b[i] = max(b[i+1]+a[i],a[i]);
        
        
        LL f[n];
        f[n-1 ] = b[n-1];
        for(LL i=n-2;i>=0;i--)
        f[i] = max(f[i+1],b[i] );
        
        LL ans[n];
        for(LL i=0;i<n-k-1;i++)
        ans[i] = en[i] + f[i+k+1];
        
        LL ma=ans[0];
        for(LL i=0;i<n-k-1;i++)
        ma=max(ma,ans[i]);
        
        cout<<ma<<endl;

    }
    return 0;
}
