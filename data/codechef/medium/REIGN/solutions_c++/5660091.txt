#include <cstdlib>
#include <cstring>
#include <cassert>
#include <climits>
#include <cstdio>
#include <cctype>
#include <cfloat>
#include <ctime>

#include <algorithm>
#include <iostream>
#include <utility>
#include <iomanip>
#include <sstream>
#include <fstream>
#include <numeric>
#include <complex>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <list>
#include <map>
#include <set>
#include <map>


#define forab(i,a,b) for( __typeof (a) i = a ; i <= b ; i++ )
#define forba(i,a,b) for( __typeof (a) i = a ; i >= b ; i-- )
#define rep(i,n) forab(i,0,n-1)
#define repr(i,n) forba(i,n-1,0)
#define forstl(i, s) for ( __typeof ((s).end ()) i = (s).begin (); i != (s).end (); i++ )

#define memo(a,b)       memset (a,b,sizeof(a))
#define all(a)          a.begin () , a. end ()
#define clr(a)          a.clear ()
#define sz(a)           a.size()
#define sf              scanf
#define pf              printf
#define si(a)           scanf("%d",&a)
#define pb              push_back
#define mp              make_pair
#define nl              puts("")
#define ll              long long
#define vi              vector < int >
#define vii				vector < int , int >
#define vll             vector < ll >
#define pii             pair < int , int >
#define endl			'\n'
#define mod             1000000007

#define rd              freopen ( "input.txt" , "r" , stdin )
#define wr              freopen ( "output.txt" , "w" , stdout )

using namespace std ;

ll max_left[100005],max_right[100005];

void max_left_sum(ll a[100005],ll n)
{
    max_left[0]=a[0];
    ll currmax=a[0];
    forab(i,1,n-1)
    {
        currmax=max(a[i],a[i]+currmax);
        max_left[i]=max(max_left[i-1],currmax);
    }
}

void max_right_sum(ll a[100005],ll n)
{
    max_right[n-1]=a[n-1];
    ll currmax=a[n-1];
    forba(i,n-2,0)
    {
        currmax=max(a[i],a[i]+currmax);
        max_right[i]=max(max_right[i+1],currmax);
    }
}

void compute(ll a[100005],ll n)
{
    max_left_sum(a,n);
    max_right_sum(a,n);
}

int main()
{

#ifndef ONLINE_JUDGE
    rd;
#endif

    ios_base::sync_with_stdio(0);
	ll n=0,a=0,arr[100004],t=0,k=0,m=0,i=0,j=0,ans=0,b=0,c=0,d=0,x=0,y=0,f=0;
	string str,s;

	cin>>t;
	while(t--)
    {
        cin>>n>>k;
        rep(i,n)
        cin>>arr[i];
        compute(arr,n);

        ans=-1LL*100000000000000000LL;
        for(int i=0;i<n-k-1;i++)
        {
            ans = max(max_left[i]+max_right[i+k+1],ans);
        }

        cout<<ans<<endl;
    }


return 0;
}
