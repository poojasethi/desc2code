/*
			Shubham Rawat
handles:	shubham12,shubham1100
*/
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<cstring>
#include<queue>
#include<map>
#include<cmath>
 
using namespace std;
 
#define gc getchar_unlocked
typedef  long long LL;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef pair<string,int> psi;
typedef pair<string,string> pss;
 
#define sz(v) ((int)v.size())
#define len(v) ((int)v.length())
#define pb push_back
#define all(v) v.begin(),v.end()
#define mp make_pair
#define icin(x) scanf("%d",&x)
#define FOR(i,a,b) for(int i=a;i<(b);i++)
#define maX(a,b) ((a>b)?a:b)
template<class T> inline void updmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void updmax(T &a,T b){if(b>a) a=b;}
int scan();
int main(){
	int t;
	t=scan();//icin(t);
	while(t--){
		int n,k;
		n=scan();k=scan();//icin(n);icin(k);
		vi a(n); vector<LL> DpPrefix(n-k-1),DpSuffix(n-k-1),prefix_max(n-k-1),suffix_max(n-k-1);
		FOR(i,0,n)
			a[i]=scan();//icin(a[i]);
		DpPrefix[0]=prefix_max[0]=a[0]; DpSuffix[0]=suffix_max[0]=a[n-1];
		FOR(i,1,n-k-1){
			DpPrefix[i]=a[i]+maX(DpPrefix[i-1],0);
			DpSuffix[i]=a[n-1-i] + maX(DpSuffix[i-1],0);
			prefix_max[i]=maX(prefix_max[i-1],DpPrefix[i]);
			suffix_max[i]=maX(suffix_max[i-1],DpSuffix[i]);
		}
		LL ans =-1e15;
		FOR(i,1,n-k){
			updmax(ans,prefix_max[i-1]+suffix_max[n-k-1-i]);
		}
		cout<<ans<<endl;
	}
	return 0;
}  
int scan(){
	int t=0,sgn=1;
	char ch=gc();
	if(ch=='-')sgn=-1;
	while(ch<'0'||ch>'9')ch=gc();
	while(ch<='9' && ch>='0'){
		t = (t<<1)+(t<<3)+ch-'0';
		ch=gc();
	}
return t*sgn;
}