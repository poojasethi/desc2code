#include<bits/stdc++.h>
using namespace std;
long long int a[100005],leftt[100005],rightt[100005];
void max_sum(int n);
void max_sum_right(int j,int n);
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {

        int n,k;
        scanf("%d%d",&n,&k);
        for(int i=1;i<=n;i++)
        {
            scanf("%lld",&a[i]);
        }

        max_sum(n-1-k);
        max_sum_right(k+2,n);

        long long int max=INT_MIN;
        for(int i=1;i+k+1<=n;i++)
        {
            long long int temp_max;
            temp_max= leftt[i]+ rightt[i+k+1];
            if(temp_max>max)
                max=temp_max;
        }

        cout<<max<<endl;

    }
    return 0;
}

void max_sum(int n)
{

    bool temp=false;
    long long int temp_sum=0,max_sum=0;
    leftt[0]=a[1];
    for(int i=1;i<=n;i++)
    {
        if(temp==false && a[i]<0)
        {
            if(a[i]>leftt[i-1])
                leftt[i]=a[i];
            else
                leftt[i]=leftt[i-1];
            continue;
        }
        temp=true;
        temp_sum+=a[i];
        if(temp_sum<0)
        {
            temp_sum=0;
        }
        if(temp_sum>max_sum)
        {
            max_sum=temp_sum;
        }
        leftt[i]=max_sum;

    }

}
void max_sum_right(int j,int n)
{
    bool temp=false;
    long long int temp_sum=0,max_sum=0;
    rightt[n+1]=a[n];
    for(int i=n;i>=j;i--)
    {
        if(temp==false && a[i]<0)
        {
            if(a[i]>rightt[i+1])
                rightt[i]=a[i];
            else
                rightt[i]=rightt[i+1];
            continue;
        }
        temp=true;
        temp_sum+=a[i];
        if(temp_sum<0)
        {
            temp_sum=0;
        }
        if(temp_sum>max_sum)
        {
            max_sum=temp_sum;
        }
        rightt[i]=max_sum;

    }
}
