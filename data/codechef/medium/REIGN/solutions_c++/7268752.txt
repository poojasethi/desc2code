#include<iostream>
#include<algorithm>
#include<cstring>
#include<stdio.h>
#define mx(a,b) a<b?b:a
using namespace std;
#ifndef ONLINE_JUDGE
inline int getchar_unlocked(){return getchar();}
#endif
inline int in(){int n = 0, c = getchar_unlocked(),t=0;while(c < '0' || c > '9'){if(c==45)t=1;c = getchar_unlocked();}while(c >= '0' && c <= '9')n = (n<<3) + (n<<1) + c - '0', c = getchar_unlocked();if(t==0)return n;else return -n;}
long long s1,s2,dp[100005],dp1[100005];
int main()
{
	int T,n,k,arr[100005];
	T=in();//scanf("%d",&T);
	while(T--)
	{
		n=in();k=in();//scanf("%d%d",&n,&k);
		
		arr[1]=in();
		s1=s2=dp[1]=arr[1];
		for(int i=2;i<=n;i++)
		{
			arr[i]=in();//scanf("%d",&arr[i]);
			if(s1<0)s1=arr[i];else s1+=arr[i];
			if(s2<s1)s2=s1;
			dp[i]=mx(s1,s2);
		}		
		dp1[n]=s1=s2=arr[n];
		for(int i=n-1;i>0;i--)
		{
			if(s1<0)s1=arr[i];else s1+=arr[i];
			if(s2<s1)s2=s1;
			dp1[i]=mx(s1,s2);					
		}
		long long max1=dp[1]+dp1[k+2];
		for(int i=2;i<(n-k);i++)
		{
			long long res=dp[i]+dp1[i+k+1];
			max1=mx(res,max1);
		}
		printf("%lld\n",max1);
	}
}