//#include <cmath>
#include <cstdio>
#include <vector>
//#include <string>
#include <cstdlib>
#include <iostream>
#include <algorithm>
#define ll long long
using namespace std;
vector<ll> u,v,f,b;
int p;
void kadane(vector<ll> &v , vector<ll> &ko){
	ll int msf=0 , meh=0;
	for(int i=0;i<v.size();i++)
		{
			meh = meh + v[i];
		if(meh<0)
			  meh =0;
			if(msf < meh)
			   msf = meh; 
			ko.push_back(msf);
			
		}
	msf = -1000000000;	
	for(int i=0;i<v.size();i++)
	    { 
	      if(v[i]>=0)
	        break;
	       if(v[i] > msf)
		    msf = v[i];
		ko[i] = msf;	       
	    }	
		//if(v[0]<0)
		  //ko[0] = v[0];
}
int main(){

int t,n;
scanf("%d",&t);
while(t--){
	 
	scanf("%d %d",&n,&p);
//	printf("%d",k);
//	return 0;
//    printf("\n%d\n",p);
	ll num;
	for(int i=0;i<n;i++)
		{
			scanf("%lld",&num);
			v.push_back(num);
		}
//		printf("\n%d\n",p);
		//cout<<p;
		kadane(v,f);
		//for(int i=0;i<f.size();i++)
		//printf("%d ",f[i]);
		reverse(v.begin() , v.end());
		//printf("\n");
		kadane(v,b);
		//for(int i=0;i<f.size();i++)
		//printf("%lld ",b[i]);
		ll sum=0 ,max=f[0]+b[(n-(p+1))-1];
//		printf("\n%d\n",p);
		
		for(int i=0 , j = (n-(p+1))-1;j>=0&&i<n-(p+1);i++,j--)
		    {
		    	 sum = f[i] + b[j];
		    	   if(max < sum) 
		    	      max = sum;
		//    	  printf("\n%d %d %lld\n",j,p,b[j]);    
		    }
		printf("%lld\n",max);   
		v.clear(); f.clear(); b.clear();
}
return 0;
}