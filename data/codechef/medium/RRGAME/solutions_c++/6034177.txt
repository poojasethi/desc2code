#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <queue>
#include <stack>
#include <cmath>
#include <sstream>
#include <string>
#include <set>
#include <map>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef vector<ll> vi;
typedef pair<ll, ll> pii;
typedef vector<pii> vp;
typedef vector<vi> vvi;
typedef vector<string> vs;

const int N = 110;
const ll M = 1000000009LL;
const int K = 3;
const int LIT = 2500;
const int INF = 1 << 30;
const double eps = 1e-6;
const ll MOD = 1000000007;
const int dir[][2] = {{0, 1}, {0, -1}, {1, 0}, {-1, 0}};

#define mp make_pair
#define pb push_back
#define fst first
#define snd second

ll n, m, k, tot;
vi v;

ll getnum(ll x) {
  ll del = m - x;
  ll ret = del / k;
  return ret + 1;
}

void init() {
  v = vi(n);
  tot = 0;
  for (int i = 0; i < n; i++) {
    scanf("%lld", &v[i]);
    v[i] = getnum(v[i]);
    tot += v[i];
  }
}

void solve() {
  sort(v.begin(), v.end());
  ll maxi = max(tot - v[n - 1], v[n - 1]);
  ll mini = min(tot - v[n - 1], v[n - 1]);
  ll ans = mini / 2 + !(maxi % 2);
  ans %= 1000000007LL;
  cout << ans << endl;
}

int main() {
  int T;
  // cin >> T;
  //for (int tcase = 1; tcase <= T; tcase++) {
  while (cin >> n >> m >> k) {
    init();
    solve();
  }
}