#include"limits"
#include"cstdio"
#include"vector"
#include"list"
#include"cmath"
#include"set"
#include"map"
#include"queue"
#include"stack"
#include"bitset"
#include"cstring"
#include"cstdlib"
#include"string"
#include"cassert"
#include"iostream"
#include"algorithm"
#include"functional"
#include"numeric"
#include"sstream"
#include"iomanip"
#include"cctype"
#include"ctime"

#define MAX_INPUT 3<<19
#define MAX_OUTPUT 10000

typedef long double F128;       //            1.18973... E 4932
typedef double F64;             //            1.79769... E 308
typedef float F32;              //            3.40282... E 38
#if !defined(__STRICT_ANSI__) && defined(_GLIBCXX_USE_INT128)
typedef unsigned __int128 I128; // 3.4028236692093846... E 38
typedef signed __int128 I127;   // 1.7014118346046923... E 38
#endif
typedef unsigned long long I64; // 1.8446744073709551615 E 19
typedef signed long long I63;   //  9.223372036854775807 E 18
typedef unsigned int I32;       //           4.294967295 E 9
typedef signed int I31;         //           2.147483647 E 9
typedef unsigned short I16;     //                6.5535 E 4
typedef signed short I15;       //                3.2767 E 4
typedef unsigned char I8;       //                  2.55 E 2
typedef signed char I7;         //                  1.27 E 2

#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
#define REP(i,n) for(I32 i=0; i<(n); i++)
#define LOOP(i, a, b) for(I32 i=(a); i<(b); i++)
#define ALL(x) (x).begin(), (X).end()
#define FOREACH(it, x) for(typeof((x).begin()) it=(x).begin(); it!=(x).end(); it++)
using namespace std;
void preprocess(){
}
I64 solve(){
    I32 N;
    I64 M, K, sm=0, m=0, m2=0;
    cin>>N>>M>>K;
    if(N<3) return 1;
    I64 A;
    for(I32 i=0; i<N; i++) {
        cin>>A;
        sm += (A = (M-A)/K+1);
        if(m<A) m2=m, m=A;
        else if (m2<A) m2=A;
    }
    //std::cerr<<" N "<<N<<" max "<<m<<" second max "<<m2<<" sum "<<sm<<"\n";
    I64 min = sm-m, max = sm;
    if(min<(m2<<1))
        min = m2*2;
    else if(min&1) min++;
    if(sm<(m<<1))
        max = (sm-m)<<1;
    else if(max&1) max--;
    //std::cerr<<"max "<<max<<" min "<<min <<"\n";
    return ((max-min+2)/2)%1000000007;
}
int main() {
    preprocess();
    cout<<solve()<<"\n";;
}
