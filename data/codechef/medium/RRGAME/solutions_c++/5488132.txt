#include<stdio.h>
#define f(i,j,n) for(i=j;i<n;i++)


long long int ceilbytwo(long long int i)
{
    if(i % 2 == 0)
        return i>>1;
    else
        return (i>>2 + 1);
}

long long int maxm(long long int a,long long int b)
{
    if (a < b)
        return b;
    else
        return a;
}


int minm(int a,int b)
{
    if (a < b)
        return a;
    else
        return b;
}

long long int input()
{
    long long int in=0;
    char c=getchar();
    while(c<48) c=getchar();
    while(c>47)
    {
        in=(in<<3)+(in<<1)+c-'0';
        c=getchar();
    }
    return in;
}

void output(long long int n)
{
    char out[20];
    out[19]='\n';
    int i=19;
    while(n){i-=1,out[i]='0'+n%10,n/=10;}
    while(i<20){ putchar(out[i]),i+=1;}
}
/*
int main()
{
    long long int n,ceil,i,smax,smin,result,max_elt=-1,snd_max_elt=-1,s=0;
    long long int m,k;
    n=input();
    m=input();
    k=input();
    long long int arr[n],b[n];
    f(i,0,n)
    {
        scanf("%lld",&arr[i]);
        b[i]=1+(m-arr[i])/k;
        s+=b[i];
        if(b[i]>snd_max_elt && b[i]<max_elt)
            snd_max_elt=b[i];
        if(b[i]>max_elt)
            max_elt=b[i];
        //printf("%d\t",b[i]);
    }
    ceil=ceilbytwo(s-max_elt);
    smin=maxm(ceil,snd_max_elt);
    //smax=minm(s/2,s-max_elt);
    smax=s>>1;
    if(smax<max_elt)
        smax=s-max_elt;
    //result=smax-smin+1;
    output((smax-smin+1)%1000000007);
    return 0;
}
*/

int main()
{
    long long int N, M , K, max1=0, max2=0, moves=0,A, minMoves, maxMoves;
    N=input();
    M=input();
    K=input();
    //if(N<3) output(1);
    for(long long int i=0;i<N;i++)
    {
        A=input();
        A=(M-A)/K+1;
        moves+=A;
        if(max1<A) {max2=max1,max1=A;}
        else if(max2<A) max2=A;
    }
    minMoves=moves-max1;
    if(minMoves&1) minMoves+=1;
    minMoves>>=1;
    if(minMoves<max2) minMoves=max2;
    maxMoves=moves>>1;
    if(maxMoves<max1) maxMoves=moves-max1;
    output((maxMoves-minMoves+1)%1000000007);
}
