//MD SHAKIM-MNNIT ALLAHABAD
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <algorithm>
#include <vector>
#include <cstring>
#include <stack>
#include <cctype>
#include <utility>
#include <map>
#include <string>
#include <climits>
#include <set>
#include <string>
#include <sstream>
#include <ctime>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
#define iterator IT
#define getcx getchar
#define SIZE(A) ((int)A.size())
#define pb push_back
#define ALL(c) c.begin(), c.end()
#define INF (int(1e9))
#define INFL (LL(1e18))
#define F(i, a, n) for(int i = a; i <= n; i++)
#define R(i, a, n) for(int i = a; i >= n; i--)
#define loop(n) F(i, 0, n-1)
#define loop1(n) F(i, 1, n)
#define TR(c,i) for(VI::iterator i = (c).begin(); i != (c).end(); i++)
#define pii pair< int,int >
#define piii pair< pii , int >
#define temp 0
#define wait 1
#define perm 2
struct comp
{
    bool operator()(const pii &a,const pii &b)
    {
        return a.second>b.second;
    }
};
struct myclass {
  bool operator() (const pii &a,const pii &b)
  {
        return a.first<b.first;
  }
} myobject;
inline void in(int &n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}
int main()
{
    int n,i;
    LL m,k,a,b,x,y,max_t,min_t,ans,s=0;;
    in(n);
    scanf("%lld %lld",&m,&k);
    x=-1;
    y=-2;;
    for(i=1; i<=n; i++)
    {
        scanf("%lld",&a);
        b=1+(m-a)/k;
        s=s+b;
        if(b>=x)
        {
            y=x;
            x=b;
        }
        else if(b>y)
        {
            y=b;
        }
    }
    //max steps for completion
    max_t=min(s-x,s/2);
    //min steps for completion
    s-=x;
    min_t=min(s-y,s/2+s%2);

    ans=(max_t-min_t+1)%1000000007;
    //printf("max and min are %lld %lld\n",max_t,min_t);
    printf("%lld\n",ans);
    return 0;
}

