#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<utility>
#include<string>
using namespace std;
#define lim 400005
int set[lim];

pair<int,pair<int,int> > edges[lim];

int getunion(int n)
{
	int t=n,i;
	while(set[t]!=t)
		t=set[t];
	while(set[n]!=n)
	{
		i=set[n];
		set[n]=t;
		n=i;
	}
	return t;
}

int setunion(int a, int b)
{
	a=getunion(a);
	b=getunion(b);
	if(a==b)
		return 0;
	else
		set[a]=b;
	return 1;
}
char str[lim];
int main()
{
	int t,m,i=0,j,k,l,x,y,z,n;
	scanf("%d",&t);
	for(j=0;j<t;j++)
	{
		scanf("%d%d",&n,&m);
		scanf("%s",str);
		for(i=0;i<n;i++)
			set[i]=i;
			for(i=0;i<m;i++)
		{

			scanf("%d%d%d",&x,&y,&z);
			edges[i]=make_pair(z,make_pair(x,y));
		}
		long long ans=0;
		sort(edges,edges+m);
		for(i=0;i<n;i++)
			if(str[i]=='R')
				break;
		for(k=i+1;k<n;k++)
			if(str[k]=='R')
				setunion(i,k);
		for(i=0;i<m;i++)
		{
			x=edges[i].second.first-1;
			y=edges[i].second.second-1;
			z=edges[i].first;
			x=getunion(x);
			y=getunion(y);
			if(z<=0||x!=y)
			{
				ans+=z;
				set[x]=y;
			}
		}
		printf("%lld\n",ans);
	}
}
