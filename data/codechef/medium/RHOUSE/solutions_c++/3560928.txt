#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>

#define MAXN 101000

#define X first
#define Y second
#define mp make_pair
#define pb push_back

using namespace std;

typedef pair< int, int > pii;
typedef pair< int, pii > edge;
typedef long long ll;

int par[ MAXN + 1 ], R[ MAXN + 1 ];
char S[ MAXN + 1 ];

ll ans;

void make( int u )
{
	if( S[ u ] == 'R' ) R[ u ] = 1;
	else R[ u ] = 0;
	par[ u ] = u;
}

int find( int u )
{
	if( u == par[ u ] ) return u;
	return par[ u ] = find( par[ u ] );
}

void Union( int u, int v )
{
	par[ u ] = v;
	R[ u ] = R[ u ] || R[ v ];
	R[ v ] = R[ u ] || R[ v ];
}

int main( void )
{
	int T;
	scanf("%d", &T );
	while( T-- ) {
		vector< edge > E;
		ans = 0;
		int N, M, u, v, w;
		scanf("%d %d\n", &N, &M );
		for( int i = 1; i <= N; i++ ) {
			S[ i ] = getchar_unlocked();
			R[ i ] = 0;
			par[ i ] = 0;
			make( i );
		}
		for( int i = 0; i < M; i++ ) {
			scanf("%d %d %d", &u, &v, &w );	
			E.pb( mp( w, mp( u, v ) ) );
		}
		
		sort( E.begin(), E.end() );
		for( int i = 0; i < M; i++ ) {
			int u = E[ i ].Y.X, v = E[ i ].Y.Y, w = E[ i ].X;
			u = find( u );
			v = find( v );
			if( u != v && ( !R[ u ] || !R[ v ] ) ) {
				Union( u, v );
				ans = ( ll )( ans + ( ll )w );
			}
			else if( w <= 0 ) ans += ( ll )w;
		}
		cout << ans << endl;
	}
	return 0;
}
