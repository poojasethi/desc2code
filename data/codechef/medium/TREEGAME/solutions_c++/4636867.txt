#include <iostream>
#include<algorithm>
#include<stdio.h>
#include<vector>
#include<deque>
#include<queue>
#include<map>
using namespace std;

map<int,int> dist;
map<int,int> visit;

int main() {
	// your code goes here
	int test;
	cin>>test;
	while(test--)
	{
	int n,m,u,v;
	cin>>n;
	dist.clear();
	visit.clear();
	vector<int> gr[n+1];
	int i;
	for(i=0;i<n-1;i++)
	 {
	 	cin>>u>>v;
	 	gr[u].push_back(v);
	 	gr[v].push_back(u);
	 }
	 dist[1]=0;
	 queue<int>q;
	 deque<int> qq;
	 q.push(1);
	 int curr;
	 while(!q.empty())
	 {
	 	curr=q.front();
	 //	cout<<curr<<" ";
	 	qq.push_back(curr);
	 	visit[curr]=1;
	 	q.pop();
	 	for(i=0;i<(int)gr[curr].size(); i++)
	 	{
	 		int key=gr[curr][i];
	 		if(visit[key]!=1)
	 		{
	 			dist[key] = dist[curr]+1;
	 			q.push(key);
	 		}
	 	}
	 }
	// cout<<endl;
	 int count=0;
	 while(!qq.empty())
	 {
	 	int depth=dist[qq.front()];
	 	if(count%2==0)
	 	while(!qq.empty() && dist[qq.front()]==depth)
	 	 {
	 	 //	cout<<qq.front()<<" ";
	 	 	qq.pop_front();
	 	 }
	 	 else
	 	 qq.pop_back();
	 	 count++;
	 }
	 
	 cout<<count<<endl;
	}
	return 0;
}