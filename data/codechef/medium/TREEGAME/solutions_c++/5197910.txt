#include<bits/stdc++.h>
using namespace std;
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(int i=(a);i<(n);++i)
#define REP(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(int i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define MAX(a,b) ((a)>(b)?(a):(b))
ill ABS(ill a) { if(a < 0) return (-a); return a; }
#define fr first
#define se second
#define gc getchar
void read(int &n) {
    n=0;
    char ch = gc();
    while(!isdigit(ch)) ch=gc();
    while(isdigit(ch)) {
        n = n*10 + ch-48;
        ch=gc();
    }
}
 
#define N 10005
vector<int> g[N];
int lvl[N];
 
void dfs(int whr,int par,int l) {
    lvl[l]++;
    F(i,0,g[whr].size()) {
        int nx=g[whr][i];
        if(nx != par) {
            dfs(nx,whr,l+1);
        }
    }
}
 
int main() {
    int t; read(t);
    while(t--) {
        M(lvl,0);
        F(i,0,N) g[i].clear();
        int n; read(n);
        F(i,1,n) {
            int u,v; read(u); read(v);
            g[u].pb(v); g[v].pb(u);
        }
        dfs(1,-1,0);
        int tot=0;
        while(lvl[tot]) tot++;
        int ext = 0;
        F(i,0,tot) ext+=(lvl[tot]-1);
        int ans=0, L=0, R=tot-1;
        bool alice = 1;
        while(L <= R) {
            if(alice) L++;
            else {
                if(R >= L) lvl[R]--;     
                else break;
                if(lvl[R] == 0) R--;
            }
            alice = !alice;
            ans++;
        }
        printf("%d\n", ans);
    } 
    return 0;
}