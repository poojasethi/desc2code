#include <bits/stdc++.h>
#define F(i,s,e) for(int i =s; i < e; i++)
#define D(i,s,e) for(int i =s; i >= e; i--)
#define P(x) cout<<x;
#define I(x) cin>>x;
#define nl cout<<endl;
#define sp cout<<" ";
#define spl sp;nl;
#define MOD 1000000007
#define MAX 100005
#define mp make_pair
#define pb push_back
#define PP pair<int, int>
#define _ ios_base::sync_with_stdio(0);
#define PV(v) F(z,0,(v).size()){P((v)[z]);sp;}nl;
using namespace std;
typedef long long int LL;
typedef pair<int,int> pii;

void update(int pos, int val, int mark[], vector<int> v[]){
	mark[pos] = val+1;				
	for(int i=0; i < v[pos].size(); i++){
		if(!mark[v[pos][i]]){
			update(v[pos][i], val+1, mark, v);
		}
	}
}
int main(){
	int t;
	I(t);
	while(t--){
		int n;
		int b[10006];
		vector<int> v[10006];
		int mark[10006];
		int l[10006];
		I(n);
		F(i,0,n+1) {
			b[i] = 0;	
			l[i] = 0;
			mark[i] = 0;
		}
		mark[1]=1;
		int high = 0;
		F(i,0,n-1){
			int x,y;
			I(x);I(y);
			if(mark[x] || mark[y]){				
				int pos = (mark[x] == 0) ? x : y;				
				int val = (mark[x] != 0) ? mark[x] : mark[y];
				update(pos, val, mark, v);									
			}else{
				v[x].pb(y);
				v[y].pb(x);			
			}
		}
//		F(i,1,n+1){P(mark[i]);sp;}nl;
		F(i,1,n+1){
//			P("dd\n");
			l[mark[i]]++;
//			P(l[mark[i]]);
			high = (mark[i] > high) ? mark[i] : high;
		}
//		P("high=");P(high);nl;
//		F(i,1,high+1){P(l[i]);sp;}nl;
		int i=1;
		int j=high;
		int c=0;
		bool turn=1;
		while(i<=j){
			if(turn){
				l[i]=0;
				i++;
			}else{
				l[j]--;
				if(l[j]==0)
					j--;
			}
			c++;
			turn = !turn;
		}
		P(c);nl;		
	}
	 
    return 0;
}
