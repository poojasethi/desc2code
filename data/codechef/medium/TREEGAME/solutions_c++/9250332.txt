#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define ll long long
#define sd(x) scanf("%d",&x)
bool visit[10005];
//int level[10005];
vector<int>adj[10005];
vector<int>level[10005];
void dfs(int s,int cnt){
    visit[s]=true;
    level[cnt].pb(s);
    vector<int>::iterator it;
    for(it=adj[s].begin();it!=adj[s].end();it++){
        if(!visit[(*it)]){
            dfs((*it),cnt+1);
        }
    }
}
int main(){
    int t;
    sd(t);
    while(t--){
        int n;
        sd(n);
        memset(visit,false,sizeof(visit));
        memset(level,0,sizeof(level));
        for(int i=0;i<=n;i++){
            adj[i].clear();
        }
        for(int i=0;i<n-1;i++){
            int a,b;
            sd(a);
            sd(b);
            adj[a].pb(b);
            adj[b].pb(a);
        }
        dfs(1,1);
        int maxm=1;
        for(int i=1;i<=n;i++){
            if(level[i].size()!=0){
                maxm=i;
            }
            else
                break;
        }
        int cntr=1;
        int cntl=maxm;
        int ctp=1;
        int ans=0;
        while(true){
            if(cntr>cntl)
                break;
            if(ctp&1){
                ans+=1;
                cntr++;
            }
            else{
                ans+=1;
                //if(level[cntl].size()!=0)
                level[cntl].erase(level[cntl].begin()+level[cntl].size()-1);
                if(level[cntl].size()==0)
                cntl--;        
            }
            ctp++;
        }
        cout<<ans<<endl;
    }    
    return 0;
}