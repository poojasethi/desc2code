#include <iostream>
#include<cstdio>
#include<vector>
#include<string>
#include<cmath>
#include<cstring>
#include<map>
#include<queue>
#include<stack>
using namespace std;

vector<int>vec[10005];
int vis[10005];

int main()
{
    int test,n,i,u,v,x,turn,cnt,lvl;
    scanf("%d",&test);
    while(test--)
    {
        queue<pair<int,int> >q1;
        queue<pair<int,int> >q2;
        stack<pair<int,int> >s;
        memset(vis,0,sizeof(vis));
        scanf("%d",&n);
        for(i=0;i<n-1;i++)
        {
            scanf("%d%d",&u,&v);
            vec[u].push_back(v);
            vec[v].push_back(u);
        }
        q1.push(make_pair(1,1));
        while(q1.empty()==0)
        {
            pair<int,int>p;
            p=q1.front();
            q1.pop();
            q2.push(p);
            s.push(p);
            x=p.first;
            vis[x]=1;
            for(i=0;i<vec[x].size();i++)
            {
                if(vis[vec[x][i]]==0)
                {
                    q1.push(make_pair(vec[x][i],p.second+1));
                }
            }
        }
        turn=0;
        cnt=0;
        pair<int,int>p;
        lvl=1;
        while(cnt<n)
        {
            while(q2.empty()==0&&cnt<n)
            {
                p=q2.front();
                if(p.second==lvl)
                {
                    q2.pop();
                    cnt++;
                    if(cnt==n)
                    {
                        turn++;
                        break;
                    }
                }
                else
                {
                    turn++;
                    lvl++;
                    break;
                }
            }
            if(s.empty()==0&&cnt<n)
            {
                s.pop();
                cnt++;
                turn++;
            }
        }
        printf("%d\n",turn);
        for(i=0;i<=n;i++)
        vec[i].clear();
    }
    return 0;
}
