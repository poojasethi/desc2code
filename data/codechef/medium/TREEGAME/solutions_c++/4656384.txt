#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

int T, N, u, v;
vector<int> edges[10000 + 10];
bool vis[10000 + 10];
int dp[10000 + 10];
int m;

void dfs(int j, int d)
{
	if (vis[j])
		return;
	dp[d]++;
	m = max(m, d);
	vis[j] = true;
	for (int i = 0; i < edges[j].size(); ++i)
		dfs(edges[j][i], d + 1);
}

int main()
{
	scanf("%d", &T);
	while (T--)
	{
		scanf("%d", &N);
		for (int i = 1; i <= N; ++i)
		{
			edges[i].clear();
			vis[i] = false;
			dp[i] = 0;
		}
		for (int i = 1; i < N; ++i)
		{
			scanf("%d%d", &u, &v);
			edges[u].push_back(v);
			edges[v].push_back(u);
		}
		m = 0;
		dfs(1, 0);
		int s = 0, e = m, n = 0;
		while (s < e)
		{
			++s;
			--dp[e];
			if (!dp[e])
				--e;
			n += 2;
		}
		if (s == e)
			++n;
		printf("%d\n", n);
	}
}