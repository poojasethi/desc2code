#include <bits/stdc++.h>
#define ll long long int
#define MAX 10001
#define EPS 1e-9
#define MOD 1000000007
#define INF 1e9
#define pn() printf("\n")
#define vint vector <int>
#define vpint vector <pair<int,int> >
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
#define gc() getchar_unlocked()
#define ms(x,v) memset(x,v,sizeof x)
#define pr_arr(i,x,size) for(i=0;i<size;i++) cout<<x[i]<<" "
#define ff(i,a,b) for(i=a;i<=b;i++)
#define fb(i,a,b) for(i=a;i>=b;i--)
#define gprint(i) cout<<"Case #"<<i<<": "
using namespace std;

vint adj[MAX];
vint level[MAX];
int visited[MAX];
int maxlevel=0;

void dfs(int u,int parlevel=0)
{
	visited[u]=1;
	maxlevel=max(maxlevel,parlevel+1);
	level[parlevel+1].pb(u);
	vint :: iterator it;
	for(it=adj[u].begin();it!=adj[u].end();it++)
	{
		if(!visited[(*it)])
			dfs((*it),parlevel+1);
	}
}


int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin>>t;
    int n=0;
    while(t--)
    {
    	int a;
    	maxlevel=0;
 		ff(a,0,n)
 		{
 			adj[a].clear();
 			level[a].clear();
 			visited[a]=0;
 		}
    	cin>>n;
    	ff(a,1,n-1)
    	{
    		int u,v;
    		cin>>u>>v;
    		adj[u].pb(v);
    		adj[v].pb(u);
    	}
    	dfs(1);
    	vint :: iterator it1=level[1].begin(),it2=level[maxlevel].begin();
    	int i=1,j=maxlevel;
    	int turn=0;
    	while(i<=j)
    	{
    		if(i==j && it2==level[j].end())
    			break;
    		it1=level[++i].begin();
    		turn++;
    		if(i<=j)
    		{
    			if(i==j && it2==level[j].end())
    				break;
    			if(it2==level[j].end())
    				it2=level[--j].begin();
    			it2++;
    			turn++;
    		}
    	}
    	cout<<turn<<endl;
    }
    return 0;
}