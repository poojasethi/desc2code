#include <bits/stdc++.h> 
using namespace std;

vector <int> v[200005];
int dfs_num[200005];
int depth[200005];

void dfs(int u)
{
	  int i;
      dfs_num[u]++;
     // cout<<u<<" ";
      for(i=0;i<v[u].size();++i)
      {
      	  if(dfs_num[v[u][i]]==0)
      	  {
      	      depth[v[u][i]]=depth[u]+1;
      	      
      	  	  dfs(v[u][i]);
      	  }
      }
}

int main() {
	// your code goes here
	int test;
	int i,a,b;
	cin>>test;
	while(test--)
	{
		memset(dfs_num,0,sizeof(dfs_num));
		memset(depth,0,sizeof(depth));
		for(i=0;i<200005;++i)
		   v[i].clear();
		int n;
		cin>>n;
		if(n==1)
		{
		  cout<<"1\n";
		  continue;
		}
		for(i=0;i<n-1;i++)
		{
			cin>>a>>b;
			v[a].push_back(b);
			v[b].push_back(a);
		}
		dfs(1);
		sort(depth+1,depth+n+1);
//		for(i=1;i<n+1;i++)
//		   cout<<depth[i]<<" ";
		int l=1;
		int r=n;
		int count=0;
		int temp;
		while(l<=r)
		{
			int depth_l=depth[l];
			count++;
			temp=l+1;
			while(depth[temp]==depth_l && temp<=r+1)
			   temp++;
			l=temp;
			if(l<=r)
			{
			  count++;
			  r--;
			}   
		}
		cout<<count<<endl;
	}
	return 0;
}