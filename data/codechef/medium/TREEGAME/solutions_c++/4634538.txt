#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define P(x) printf("%d\n",x)

typedef long long int LL;
const int N = 10004;
int dep[N];
vector<int > g[N];
int mxd;

void dfs(int u, int p, int d) {

	dep[d]++;
	mxd = max(d, mxd);
	rep(i,0,g[u].size()) {
		int v = g[u][i];
		if(v == p) continue;
		dfs(v, u, d+1);
	}

}

int main() {
	int T;
	S(T);
	while(T--) {
		int n;
		S(n);

		rep(i,0,n) g[i].clear();

		rep(i,0,n-1) {
			int u,v;
			scanf("%d%d",&u,&v);
			u--;v--;
			g[u].push_back(v);
			g[v].push_back(u);
		}
		rep(i,0,n) dep[i] = 0;
		mxd = 0;
		dfs(0, -1, 0);

		int ans = 0;
		int a = 0,b = mxd;
		while(a <= b) {
			if(ans&1) { // bob
				dep[b]--;
				if(!dep[b]) b--;
				ans++;
			} else { // alice
				a++;
				ans++;
			}
		}
		P(ans);

	}

	return 0;
}