#include<bits/stdc++.h>

using namespace std;

int max_h;
int level[20004];
int visited[20004];
vector<int>adj[20004];

int main()
{
	int t,n;
	scanf("%d",&t);

	while(t--)
	{
		max_h=-1;
		scanf("%d",&n);
		if(n==1)
		{
			printf("1\n");
		}

		else
		{
			memset(level,0,sizeof(level));
			memset(visited,0,sizeof(visited));

			for(int i=0;i<=n;i++)
			adj[i].clear();

			int u,v;
			for(int i=0;i<n-1;i++)
			{
				scanf("%d%d",&u,&v);
				adj[u].push_back(v);
				adj[v].push_back(u);
			}

			queue<int>q,h;
			max_h=1;

			q.push(1);
			h.push(1);
			while(!q.empty())
			{
				
				int node=q.front();
				int height=h.front();
				q.pop();
				h.pop();
				if(height>max_h)
				max_h=height;
				
				visited[node]=1;
				level[height]++;

				for(int i=0;i<adj[node].size();i++)
				{
					int w=adj[node][i];

					if(!visited[w])
					{
						q.push(w);
						h.push(height+1);
					}
				}
			}

			int last=max_h;
			int first=1;

			int turn=0;

			while(first<=last)
			{
			    if(level[first]>0)
			    {
                   		turn++;
				}
				
				level[first]=0;
				first++;
				
				if(level[last]>0)
    			{
					turn++;
				}

				level[last]--;

				if(level[last]<=0)
				last--;
			}

            	printf("%d\n",turn);
		}


	}
	return 0;
}
