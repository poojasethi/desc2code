#include<iostream>
#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;

#define test()    int test_case;cin>>test_case;while(test_case--)
#define fr(i,n) for(int i=0;i<n;i++)
#define frr(i,a,n) for(int i=a;i<n;i++)
#define sll(a) scanf("%lld",&a)
#define sl(a) scanf("%ld",&a)
#define si(a) scanf("%i",&a)
#define sd(a)  scanf("%ld",&a)
#define sf(a) scanf("%f",&a)
#define rn(a) return a
#define pai pair<int,int>
#define pal pair<li,li>
#define pall pair<lli,lli>
#define ff first
#define ss second
#define mod  1000000007
#define mp make_pair
#define pb push_back
#define pll(a) printf("%lld\n",a)
#define pl(a) printf("%lld\n",a)
#define pi(a) printf("%d\n",a)
#define pd(a) printf("%lf\n",a)
#define pf(a) printf("%f\n",a)
#define lc (start+end)/2
#define rc  lc+1
lli arr[1000000];
int main()
 {
 	test()
 	 {
 	 	int n;
 	 	 cin>>n;
 	 	 for(int i=0;i<n;i++) cin>>arr[i];
 	 	stack<pall> neg,pos;
 	 	lli ans=0;
 	 	  for(int i=0;i<n;i++)
 	 	   {
 	 	   	
 	 	   	if(arr[i]<0)
 	 	   	 {
 	 	   	 	       int temp=-1*arr[i];
 	 	   	 	       
 	 	   	           if(pos.size()!=0)
				         {
				    	   while(temp!=0 && pos.size()!=0)
				    	    {
				    	    //	 cout<<" removing positive ";
				    	    	 int index=pos.top().ff;
				    	    	 int count=pos.top().ss;
				    	    	 pos.pop();
				    	   // 	 cout<<" index "<<index<<" count "<<count<<endl;
				    	    	 if(count<temp)
				    	    	  {
				    	    	  	 ans+=count*abs(i-index);
				    	    	  	  temp-=count;
				    	    	  //	  cout<<" ans1 "<<ans<<endl;
								  }
								  else
								  {
								  	
								  	count-=temp;
								  	ans+=temp*abs(i-index);
								  //	 cout<<" ans2 "<<ans<<endl;
								  	temp=0;
								  	if(count!=0)
								  	pos.push(mp(index,count));
								  	temp=0;
								  }
							}
							if(temp!=0)
							 {
							 	neg.push(mp(i,temp));
							 }
						 }	 
						 else neg.push(mp(i,-1*arr[i]));
				  }
				  
				  else
 	 	   	         {
 	 	   	 	          int temp=arr[i];
 	 	   	           if(neg.size()!=0)
				         {
				    	   while(temp!=0 && neg.size()!=0)
				    	    {
				    	    //	 cout<<" removing neg ";
				    	    	 int index=neg.top().ff;
				    	    	 int count=neg.top().ss;
				    	    	 neg.pop();
				    	    	// cout<<" index "<<index<<" count "<<count<<endl;
				    	    	 if(count<temp)
				    	    	  {
				    	    	  	 ans+=count*abs(i-index);
				    	    	  	 temp-=count;
								  }
								  else
								  {
								  	
								  	count-=temp;
								  	ans+=temp*abs(i-index);
								  	temp=0;
								  	neg.push(mp(index,count));
								  	temp=0;
								  }
							}
							if(temp!=0)
							 {
							 	pos.push(mp(i,temp));
							 }
						 }
						 else pos.push(mp(i,arr[i]));	 
				  }
				  // cout<<i<<endl;
			 }
			 
			 
			  cout<<ans<<endl;
	  }
	  return 0;
 }