#include<iostream>
#include<vector>
#include<algorithm>
#include<cmath>
# define PII pair<long,double>
using namespace std;
# define INF 2000000000
struct Point{
	double x;
	double y;
};
float dist(Point p1,Point p2)
{
    return sqrtf( (p1.x-p2.x)*(p1.x-p2.x) +
                 (p1.y-p2.y)*(p1.y-p2.y)
               );
}
double area(Point poly[],long m)
{
	double area=0;
	long j=m-1;
	for(int i=0;i<m;i++)
	{
		area+=(poly[j].x+poly[i].x)*(poly[j].y-poly[i].y);
		j=i;
	}
	area =abs(area/2);
	return area;
}
bool comparator(const PII& left,const PII& right) {
        return left.second < right.second;
    }
 
//sort(v.begin(), v.end(), sort_pred());
/*long shortest(Point p1,Point p2)
{
	Point p={0,0};
	long a1=dist(p1,p);
	long a2=dist(p2,p);
	long a3=dist(p1,p2);
	long z1=2*((a3*a3*a2*a2)+(a3*a3*a1*a1)+(a2*a2*a1*a1));
	long z2=(a3*a3*a3*a3)+(a2*a2*a2*a2)+(a1*a1*a1*a1);
	long ans=sqrt(z1-z2);
    ans=ans/(2*a3);
	return ans;
}*/
int main()
{
	long t,n,m,x1,y1;
		Point polygon[200005];
		//long sd[105];
	vector<PII> v;
	//	v[100005];
		//bool inside[105];
		long ans[200005];
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(int i=0;i<n;i++)
		ans[i]=0;
		for(int i=0;i<n;i++)
		{
			cin>>m;
			for(int j=0;j<m;j++)
			{
			cin>>x1>>y1;
			polygon[j].x=x1;
			polygon[j].y=y1;
		}
	   
	   	double mh;
	   	mh=area(polygon,m);
	   //	cout<<mh<<endl;
	   	v.push_back(PII(i,mh));
	 //  v[i]=mh;
		}
		//cout<<v[0].first<<" "<<v[0].second;
		//cout<<endl;
	 sort(v.begin(), v.end(),comparator);
		//cout<<v[0].first<<" "<<v[0].second;
		
	/*	for(int i=0;i<n;i++)
		{
			for(int j=i+1;j<n;j++)
			       {
					  if(v[i]>v[j])
					  ans[i]++;
					  else
					  ans[j]++;
					}
		}*/
		long k=0;
		for(int i=0;i<n;i++)
		{
		ans[v.at(i).first]=k;
		k++;
	}
		for(int i=0;i<n;i++)
		cout<<ans[i]<<" ";
		cout<<endl;
		v.clear();
	}		
} 