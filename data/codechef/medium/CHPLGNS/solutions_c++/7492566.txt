#include<iostream>
#include<stdio.h>
#include<vector>
#include<limits.h>
#include<cstdio>
#include<algorithm>
using namespace std;

struct Node
{
    long long minX,maxX;
    int index;
};

inline void fastRead_int(int &x) {

	    register int c = getchar_unlocked();
	    x = 0;
        int neg = 0;

        for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

        if(c=='-')
        {
            neg = 1;
            c = getchar_unlocked();
	    }

        for(; c>47 && c<58 ; c = getchar_unlocked())
        {
            x = (x<<1) + (x<<3) + c - 48;
	    }
        if(neg)
            x = -x;
}

inline void fastRead_ll(long long &x) {

	    register long long c = getchar_unlocked();
	    x = 0;
        long long neg = 0;

        for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

        if(c=='-')
        {
            neg = 1;
            c = getchar_unlocked();
	    }

        for(; c>47 && c<58 ; c = getchar_unlocked())
        {
            x = (x<<1) + (x<<3) + c - 48;
	    }
        if(neg)
            x = -x;
}

bool comp1(Node n1,Node n2)
{
    return n1.maxX>n2.maxX;
}


int main()
{
    int t;
    fastRead_int(t);
    //scanf("%d",&t);

    for(int i=0; i<t; i++)
    {
        int n;
        fastRead_int(n);
        //scanf("%d",&n);
        long long x,y;

        vector<Node> polys;

        for(int j=0; j<n; j++)
        {
            int points;
            fastRead_int(points);
            //scanf("%d",&points);

            long long minX = LLONG_MAX,maxX = LLONG_MIN;

            for(int k=0; k<points; k++)
            {
               // scanf("%lld %lld",&x,&y);
                fastRead_ll(x);
                fastRead_ll(y);
                minX = min(minX,x);
                maxX = max(maxX,x);
            }

            Node node;
            node.minX = minX;
            node.maxX = maxX;
            node.index = j;
            polys.push_back(node);

        }

        sort(polys.begin(),polys.end(),comp1);

        int ans[n];
        for(int j=0; j<n; j++)
        {
            ans[polys[j].index] = n-j-1;
        }

        for(int j=0; j<n; j++)
            cout<<ans[j]<<" ";

        printf("\n");





    }

    return 0;
}
