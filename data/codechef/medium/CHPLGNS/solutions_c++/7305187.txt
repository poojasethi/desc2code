     #include<iostream>
     #include<algorithm>
    #include<cstdlib>
    using namespace std;
    int binary_srch_ret_index(long long int inp[],long long int e, long long  int low, long long int high) {

    if (low > high) {
        return -1;
    }

    int mid = (low + high) / 2;

    if (e == inp[mid]) {
        return mid;
    }

    if (e < inp[mid]) {
        return binary_srch_ret_index(inp, e, low, mid - 1);
    } else {
        return binary_srch_ret_index(inp, e, mid + 1, high);
    }
}
    long long int polygonArea(long long int X[],long long int Y[],long int numPoints)
    {
    long long int area = 0,i;
    long long int j = numPoints-1;
    for (i=0; i<numPoints; i++)
    {
    area = area + (X[j]+X[i]) * (Y[j]-Y[i]);
    j = i;
    }
    return area/2;
    }
    int main()
    {
    long long int t;
    cin >> t;
    for(;t>0;t--)
    {
    long long int n,i;
    cin >> n ;
    long long int a[n];long long int size=n;
    long long int x[100000],y[100000],ar[n],j,temp,ans=0,b[n],k,c[n],index1[size],index2[size];
    for(i=0;i<n;i++)
    {
    cin >> a[i];
    for(j=0;j<2*a[i];j++)
    {
    if(j%2==0 && j!=1)
    {
    cin >> x[j/2];
    }
    else
    {
    cin >> y[j/2];
    }
    }
    temp=polygonArea(x,y,a[i]);
    if(temp<0)
    {
    temp = temp*(-1);
    }
    ar[i] = temp;
    b[i] = ar[i];
    }
    sort(b,b+n);

    for(i=0;i<n;i++)
    {
       int temp_answer=binary_srch_ret_index(b,ar[i],0,n);
       cout<< temp_answer << "  " ;}

    }
    return 0;
    } 