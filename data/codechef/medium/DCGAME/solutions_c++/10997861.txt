#include<bits/stdc++.h>
#define ll long long int
#define mp make_pair
#define pb push_back
#define si(x) scanf("%d",&x)
#define pi(x) printf("%d\n",x)
#define s(x) scanf("%lld",&x)
#define p(x) printf("%lld\n",x)
#define sc(x) scanf("%s",x)
#define INF (1<<30)
#define N 1000002

using namespace std;

int A[N];int L[N];int R[N];int s[N];

typedef pair<int,int> ct;
#define value first
#define count second

ct cts[N];
char typ[11];
char ans[N];
int n, m;
int find(int k) {
    // binary search
    int l=0, r=n+1;
    while (r-l>1) {
        int mid = (l+r)>>1;
        (cts[mid].value<=k?l:r)=mid;
    }
    return cts[l].count;
}

int main() {
    si(n);si(m);
    A[0] = A[n+1] = INF;
    for (int i=1;i<=n;i++) si(A[i]);

    s[0] = 0;
    for (int q=0,i=1;i<=n;i++) {
        while (A[s[q]]<A[i]) q--;
        L[i]=s[q];
        s[++q]=i;
    }

    s[0] = n+1;
    for (int q=0,i=n;i;i--) {
        while (A[s[q]]<=A[i]) q--;
        R[i] = s[q];
        s[++q] = i;
    }

    cts[0].value = -INF;
    cts[0].count = 0;
    for (int i=1;i<=n;i++) {
        cts[i].value=A[i];
        cts[i].count=(R[i]-i)*(i-L[i]);
    }
    sort(cts,cts+n+1);

    for (int i=1;i<=n;i++) {
        cts[i].count ^= cts[i-1].count;
    }

    for (int i=0;i<m;i++) {
        int k;
        scanf("%s%d%s", typ, &k, ans + i);
        if (!((*typ == '>' ? n*(n+1LL)/2 - find(k) : *typ == '<' ? find(k-1) : find(k) - find(k-1)) & 1)) ans[i] ^= 7;
    }
    ans[m] = 0;
    printf("%s\n", ans);
}

