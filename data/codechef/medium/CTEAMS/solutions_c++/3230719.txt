#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <iostream>
#include <cassert>
#include <algorithm>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <complex>
#include <stack>
#include <list>
#include <deque>

#define SQR(x) ((x)*(x))
#define DEBUG(x) cout<<#x<<": "<<(x)<<endl
#define SZO(a) a.size()
#define SZ(a) sizeof(a)
#define CLRO(a) memset((a),0,a.size())
#define CLR(a) memset((a),0,sizeof(a))
#define SETO(a,b) memset((a),(b),b.size())
#define SET(a,b) memset((a),(b),sizeof(b))
#define ABS(x) ((x)<0?-(x):(x))
#define MAX(x,y) ((x)<(y)?(y):(x))
#define MIN(x,y) ((x)<(y)?(x):(y))

typedef long long int64;

using namespace std;

typedef pair<int,int> pii;

int main() {
	int t_num;
	cin>>t_num;
	priority_queue<pii,vector<pii>,less<pii> > young;
	priority_queue<pii,vector<pii>,greater<pii> > old;
	int sy=0,so=0;
	while(t_num--) {
		int a,b;
		scanf("%d%d",&a,&b);
		if(old.empty() || a < old.top().first) {
			young.push(make_pair(a,b));	
			sy += b;
		} else {
			old.push(make_pair(a,b));
			so += b;
		}
		if(old.size() < young.size()-1) {
			pair<int,int> temp = young.top();
			young.pop();
			old.push(temp);
			sy -= temp.second;
			so += temp.second;
		} else if(young.size() < old.size())  {
			pair<int,int> temp = old.top();
			old.pop();
			young.push(temp);
			sy += temp.second;
			so -= temp.second;
		}
		cout<<abs(sy-so)<<endl;
	}
	return 0;
}