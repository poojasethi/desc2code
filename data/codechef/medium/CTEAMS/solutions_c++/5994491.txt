#include <iostream>
#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <algorithm>
#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <math.h>
#include <sstream>
#define scanlong(n) scanf("%lld", &n)
#define scanint(n) scanf("%d", &n)
#define FOR(i,start,n) for (int i = start; i < n; ++i)
#define longint long long int
using namespace std;

class res{
public:
	longint age;
	int rating;
	res(){
		age = 0;
		rating = 0;
	}	
};

struct LessThanByAge{
  bool operator()(const res& lhs, const res& rhs) const{
    return lhs.age < rhs.age;
  }
}; // increasing

struct GreaterThanByAge{
  bool operator()(const res& lhs, const res& rhs) const{
    return lhs.age > rhs.age;
  }
}; // decreasing

int main(){
	int N;
	scanint(N);
	longint A, R, diff = 0, diff2 = 0;
	priority_queue<res, vector<res>, GreaterThanByAge> pq1;
	priority_queue<res, vector<res>, LessThanByAge> pq2;
	res obj; int i = 0;

	while(N--){
		scanlong(A);scanlong(R);	
		obj.age = A;
		obj.rating = R; // obj made for the current incoming data
		if(i == 0){
			diff += R;
			pq2.push(obj);
		}else if(i%2 == 0){
			pq2.push(obj);
			diff += R;
			if(pq2.top().age > pq1.top().age){
				diff -= pq2.top().rating;
				diff2 -= pq1.top().rating;
				diff += pq1.top().rating;
				diff2 += pq2.top().rating;
				res re = pq2.top();res re2 = pq1.top();
				pq1.pop();pq2.pop();
				pq2.push(re2);pq1.push(re);
				diff = abs(diff);diff2 = abs(diff2);
			}
		}else{
			pq1.push(obj);
			diff2 += R;
			if(pq2.top().age > pq1.top().age){
				diff -= pq2.top().rating;
				diff2 -= pq1.top().rating;
				diff += pq1.top().rating;
				diff2 += pq2.top().rating;
				res re = pq2.top();res re2 = pq1.top();
				pq1.pop();pq2.pop();
				pq2.push(re2);pq1.push(re);
				diff = abs(diff);diff2 = abs(diff2);
			}			
		}

		++i;
	printf("%lld\n", abs(diff-diff2));

	}
}
