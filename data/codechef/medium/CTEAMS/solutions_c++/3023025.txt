#include<map>
#include<cstdio>
#include<cstdlib>
using namespace std;

int main()
{
	int n, sml_sum=0, lrg_sum=0, counter = 0;
	int age, rating, sml_cnt=0, lrg_cnt=0;

	int fst, lst;
	int fst_rate, lst_rate;

	map<int, int>sml;
	map<int, int>lrg;
	
	map<int, int>::reverse_iterator it_sml;
	map<int, int>::iterator it_lrg;

	scanf("%d", &n);

	for(int i=1;i<=n;i++)
	{
		scanf("%d %d", &age, &rating);
		
		if(lrg_cnt == 0)
		{
			sml.insert(pair<int, int>(age, rating));
			sml_cnt++;
			sml_sum += rating;
		}

		else
		{
			it_lrg = lrg.begin();
			fst = it_lrg->first;
			fst_rate = it_lrg->second;

			// add in large map
			if(age > fst)
			{
				lrg.insert(pair<int, int>(age, rating));
				lrg_cnt++;
				lrg_sum += rating;
			}
			// add in small map
			else
			{
				sml.insert(pair<int, int>(age, rating));
				sml_cnt++;
				sml_sum += rating;
			}
		}

		if(i&1)
		{
			// shift from large to small map
			if(lrg_cnt > sml_cnt)
			{
				it_lrg = lrg.begin();
				fst = it_lrg->first;
				fst_rate = it_lrg->second;

				lrg.erase(it_lrg);
				lrg_cnt--;
				lrg_sum -= fst_rate;

				sml.insert(pair<int, int>(fst, fst_rate));
				sml_cnt++;
				sml_sum += fst_rate;
			}
		}
		else
		{
			if(sml_cnt != lrg_cnt)
			{
				it_sml = sml.rbegin();
				lst = it_sml->first;
				lst_rate = it_sml->second;

				sml.erase(--sml.end());
				sml_cnt--;
				sml_sum -= lst_rate;

				lrg.insert(pair<int, int>(lst, lst_rate));
				lrg_cnt++;
				lrg_sum += lst_rate;
			}
		}

		printf("%d\n", abs(lrg_sum - sml_sum));
	}
	return 0;
}