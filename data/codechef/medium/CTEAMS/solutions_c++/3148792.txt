#include<iostream>
#include<stdio.h>
#include<cmath>
#include<map>
using namespace std;
#define traverse_map(c,i) for( typeof(c).begin() i=c.begin();i!=i.end();i++)
#define LL long long
main()
{

	int N,i,rate,minm_rateof_elder,maxm_rateof_young,age,maxm_of_young=0,minm_of_elder=0;
	scanf("%d",&N);
	map<int,int>young;
	map<int,int>elder;
	LL ls=0,rs=0,ans;
	scanf("%d %d",&age,&rate);
	young[age]=rate;

	ls+= rate;
	printf("%lld\n",ls);
	//cout<<young[age]<<endl;
	for(i=2;i<=N;i++)
	{
		scanf("%d %d",&age,&rate);


		if(young.size()<= elder.size()) // give it to younger team
		{

			if( age< elder.begin()->first) // if this age is less than the youngest of the older a
			{
				// cout<<"added to young and no transfer\n";
				 ls+=rate;
				 young[age]= rate;
			}
			else /// this age is greater than youngest of elder
			{
			   // cout<<"added to young and transfer\n";
					maxm_of_young= young.rbegin()->first;
					minm_of_elder= elder.begin()->first;
					minm_rateof_elder= elder.begin()->second;

					young[minm_of_elder]= minm_rateof_elder; // added to younger
					ls+=minm_rateof_elder;
            //    printf("minm of elder = %d  and maxm of younger= %d\n",  elder.begin()->first,young.rbegin()->first);
					elder.erase(minm_of_elder); // minm of elder is deleted
					rs=rs-minm_rateof_elder+rate;

					elder[age]= rate;
			}
		}
		else // give it to elder team
		{
			if(age> young.rbegin()->first) //give it to elder
			{
				elder[age] = rate;
				rs+=rate;
			}
			else // transfer
			{
				maxm_of_young= young.rbegin()->first;
				minm_of_elder= elder.begin()->first;
				maxm_rateof_young = young.rbegin()->second;
              //  printf("minm of elder = %d  and maxm of younger= %d\n",  elder.begin()->first,young.rbegin()->first);
				elder[maxm_of_young]= maxm_rateof_young ; // given to elder
				rs+=maxm_rateof_young;

				young.erase(maxm_of_young); // delete it
				young[age] = rate;
				ls=ls+ rate-maxm_rateof_young;
			}

		}
		//printf("minm of elder = %d  and maxm of younger= %d\n",  elder.begin()->first,young.rbegin()->first);
		//cout<<ls<<"\t"<<rs;
		//cout<<endl;
		if(ls>rs)
            ans=ls-rs;
        else ans=rs-ls;
		printf("%lld\n",ans);
	}
return 0;
}
