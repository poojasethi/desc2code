#include <iostream>
#include <cstdio>
#include <queue>
#include <vector>
#include <algorithm>
using namespace std;

typedef pair<int,int> ii;

priority_queue<ii> young; //maxheap
priority_queue<ii, vector<ii>, greater<ii> > old; //minheap

int oldrating, youngrating;

void insert(int a, int r) {
    if (young.size() == 0) {
        young.push(ii(a,r));
        youngrating += r;
        return;
    }
    if (young.top().first > a) {
        young.push(ii(a,r));
        youngrating += r;
    } else {
        old.push(ii(a,r));
        oldrating += r;
    }
    if ((young.size()+old.size())%2==0) {
        while (young.size()>old.size()) {
            ii temp = young.top();
            young.pop();
            youngrating -= temp.second;
            old.push(temp);
            oldrating += temp.second;
        }
        while (old.size()>young.size()) {
            ii temp = old.top();
            old.pop();
            oldrating -= temp.second;
            young.push(temp);
            youngrating += temp.second;
        }
    } else {
        while (young.size()>old.size()+1) {
            ii temp = young.top();
            young.pop();
            youngrating -= temp.second;
            old.push(temp);
            oldrating += temp.second;
        }
        while (old.size()+1>young.size()) {
            ii temp = old.top();
            old.pop();
            oldrating -= temp.second;
            young.push(temp);
            youngrating += temp.second;
        }
    }
}

int main()
{
    int n, a, r;
    while (!old.empty()) old.pop();
    while (!young.empty()) young.pop();
    oldrating = youngrating = 0;
    scanf("%d", &n);
    for (int i=0; i<n; i++) {
        scanf("%d %d", &a, &r);
        insert(a, r);
        printf("%d\n", abs(oldrating-youngrating));
    }
    return 0;
}
