#include <iostream>
#include <algorithm>
#include <queue>
#include <utility>
#include <cmath>
using namespace std;

int main() {
    ios::sync_with_stdio(false);
    priority_queue<pair<int,int> > young, old;
    int n, ai, ri, ys=0, os=0, yra=0, ora=0;
    cin >> n;
    cin >> ai >> ri;
    young.push(make_pair(ai,ri));
    ++ys;
    yra+=ri;
    cout << ri << endl;
    while(--n) {
        cin >> ai >> ri;
        pair<int,int> key = make_pair(ai,ri);
        if(key>young.top()) {
            old.push(make_pair(-ai,-ri));
            os++;
            ora+=ri;
        } else {
            young.push(key);
            ys++;
            yra+=ri;
        }
        if(os>ys) {
            key = old.top();
            old.pop();
            os--;
            ora+=key.second;
            young.push(make_pair(-key.first,-key.second));
            ys++;
            yra-=key.second;
        } else {
            if(ys>os+1) {
                key = young.top();
                young.pop();
                ys--;
                yra-=key.second;
                old.push(make_pair(-key.first,-key.second));
                os++;
                ora+=key.second;
            }
        }
        cout << abs(1.0*yra-ora) << endl;
    }
    return 0;
}
