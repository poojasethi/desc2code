#include<stdio.h>
#include<algorithm>
#include<queue>
using namespace std;
int r[100005];
int a[100005];
priority_queue<pair<int,int> > pq,pq1;
pair<int,int> tp,tp1;

long long int abso(long long int x)
{
	if(x<0)
		return -x;
	else
		return x;
}

int main()
{
	int n,i,j;
	long long int x=0,y=0;
	scanf("%d",&n);
	i=0;
	scanf("%d %d",&a[i],&r[i]);
	pq.push(make_pair(a[i],i));
	x=r[i];
	printf("%lld\n",r[i]);
	
	i++;
	if(i<n)
	{
		scanf("%d %d",&a[i],&r[i]);
		tp=pq.top();
		if(a[i]<tp.first)
		{
			pq.pop();
			pq1.push(make_pair(-tp.first,tp.second));
			x-=r[tp.second];
			y+=r[tp.second];
			x+=r[i];
			pq.push(make_pair(a[i],i));
		}
		else
		{
			pq1.push(make_pair(-a[i],i));
			y+=r[i];
		}
		printf("%lld\n",abso(x-y));
	}
	
	for(i=2;i<n;i++)
	{
		scanf("%d %d",&a[i],&r[i]);
		if(pq.size()==pq1.size())
		{
			tp=pq.top();
			tp1=pq1.top();
			if(a[i]<tp.first || a[i]<(-tp1.first))
			{
				pq.push(make_pair(a[i],i));
				x+=r[i];
			}
			else
			{
				pq1.pop();
				y-=r[tp1.second];
				pq.push(make_pair(-tp1.first,tp1.second));
				x+=r[tp1.second];
				pq1.push(make_pair(-a[i],i));
				y+=r[i];
			}
		}
		else
		{
			tp=pq.top();
			tp1=pq1.top();
			if(a[i]>tp.first)
			{
				pq1.push(make_pair(-a[i],i));
				y+=r[i];
			}
			else
			{
				pq.pop();
				x-=r[tp.second];
				pq1.push(make_pair(-tp.first,tp.second));
				y+=r[tp.second];
				pq.push(make_pair(a[i],i));
				x+=r[i];
			}
		}
		printf("%lld\n",abso(x-y));	
	}
	return 0;
}