#include <iostream>
#include <queue>
#include <cstdio>
#include <cstdlib>
#include <algorithm>


using namespace std;

void scanint(int &x)
{
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c =  getchar_unlocked());
    if(c=='-') {neg=1;c=getchar_unlocked();}
    for(;c>47 && c<58;c = getchar_unlocked()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int main() {
    int n, age, rate;
    priority_queue <pair<int,int>, vector<pair<int,int> >, less<pair<int,int> > > young;
    priority_queue <pair<int,int>, vector<pair<int,int> >, greater<pair<int,int> > > old;
    int sum_y = 0, sum_o = 0;

    scanint(n);
    for(int i = 1; i <= n; i++) {
                scanint(age);
                scanint(rate);
               if (young.empty()) {
                                  young.push(make_pair(age, rate));
                                  sum_y += rate;
               } else {
                       if(i % 2 != 0) {
                            young.push(make_pair(age, rate));
                            sum_y += rate;
                            if(!old.empty() && (young.top().first) > (old.top().first)) {
                                            pair<int, int>p = young.top();
                                            pair<int, int>q = old.top();
                                            young.pop();
                                            old.pop();
                                            old.push(p);
                                            young.push(q);
                                            sum_y = sum_y - p.second + q.second;
                                            sum_o = sum_o - q.second + p.second;
                            }

                       } else {
                              old.push(make_pair(age, rate));
                              sum_o += rate;
                              if(young.top().first > old.top().first){
                                           pair<int, int>a = young.top();
                                            pair<int, int>q = old.top();
                                            young.pop();
                                            old.pop();
                                            old.push(a);
                                            young.push(q);
                                            sum_y = sum_y - a.second + q.second;
                                            sum_o = sum_o - q.second + a.second;
                              }
                       }
               }
              // printf("%d ", young.top().first);
               //printf("%d ", old.top().first);
               //printf("%d %d\n", sum_y, sum_o);
               printf("%d\n",abs(sum_y - sum_o));
    }
    return 0;
}
