#include<bits/stdc++.h>
#include <iostream>
using namespace std;
string func(string a, string b) {
int lcs_con[a.length()+1][b.length()+1];    
    memset(lcs_con,0,sizeof(lcs_con));

    int result=-1;
    int x=-1;
    int y=-1;
	string g;
    for(int i=1;i<=a.length();++i)
      for(int j=1;j<=b.length();++j)
      {
          if(a[i-1]==b[j-1])lcs_con[i][j]=lcs_con[i-1][j-1]+1;
          else lcs_con[i][j]=0;

          if(lcs_con[i][j]>result)
          {
          
               result=lcs_con[i][j];
               x=i;
               y=j;
               string	c = a.substr(x-result,result);
          	if (g.length() < c.length()) {
								g = c;
							}
							else if (g.length() == c.length() && g > c) {
								g = c;
							}
          }
      }
      if (result ==-1){
      	return "";
      }
      return g;
}
int main() {
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		string g;
		map< string , vector<int> >m;
		for (int k = 1; k <= n; k++) {
			string a,b;
			int fl = 0;
			cin >> a;
			/*if (k == 1) {
				cin >> b;
				k++;
				c = func(a,b);
			}
			else {
				c = func(a,c);
			}*/
		for (int i = 0; i < a.length(); i++) {
				string b = a.substr(0,i+1);
				for (int j = 0; j < b.length(); j++) {
					string c = b.substr(b.length()-j-1,j+1);
					if (m[c].size() == 0 || m[c].back() != k){
						m[c].push_back(k);
						//cout << c << " ";
						if (m[c].size()==n) {
							if (g.length() < c.length()) {
								g = c;
							}
							else if (g.length() == c.length() && g > c) {
								g = c;
							}
						}
						fl = 1;
					}
				}
			}
			//cout << endl;
		}
		
		cout << g <<endl;
	}
	return 0;
}