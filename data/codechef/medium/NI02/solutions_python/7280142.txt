#include<bits/stdc++.h>
#define s(a) scanf("%d",&a)
#define sc(a) scanf("%s",&a)
#define p(a) printf("%d\n",a)
#define pf(a) printf("%lld\n",a)
#define f(i,r) for(int i=0;i<r;i++)
#define fr(i,p,r) for(int i=p;i<r;i++)
#define ll long long
#define _max 99999999999
using namespace std;

struct pack{
	int r;
	ll dis;
};

struct pack2{
	int x;
	int y;
};

pack2 a[2505];

bool visited[2505];

ll d[2505];

struct compare{
	bool operator()(pack a,pack b)
	{
		return a.dis > b.dis;
	}
};

int main()
{
	int t,n,xx,yy;

	s(t);
	while(t--)
	{
		s(n);
		
		f(i,n+2)
		{
			s(a[i].x);
			s(a[i].y);
			
			visited[i]=false;
			d[i]=_max;
		}
			
		priority_queue<pack,vector<pack>,compare> pq;
		
		d[n]=0;
		pq.push((pack){n,0});
		
		while(!pq.empty())
		{
			int p=pq.top().r;
			pq.pop();
			
			//cout<<"p "<<p<<endl;
			
			xx=a[p].x;
			yy=a[p].y;
			
			if(visited[p])
			continue;
			
			//cout<<"kkk\n";
			
			if(p==n+1)//==a[n+1].x && yy==a[n+1].y)
			break;
			
			visited[p]=true;
			
			//cout<<"p "<<p<<" "<<n+1<<endl;
			
			f(i,n+2)
			{
				if(!visited[i])
				{
					ll newd=d[p]+(xx-a[i].x)*(xx-a[i].x)+(yy-a[i].y)*(yy-a[i].y);
					
					if(d[i] > newd)
					{
						d[i]=newd;
						
						pq.push((pack){i,d[i]});
					}
				}
			}
		}
		
		pf(d[n+1]);
	}
	
}