#include<iostream>
#include<algorithm>
#include<cstdio>
#include<string.h>
#include<climits>
#include<vector>
#include<stack>
#include<set>
using namespace std;
#define FOR(i,a,b) for(i=a;i<=b;i++)
#define sint(i) scanf("%d",&i)
#define ss(s) scanf("%s",s)
#define pii pair<int,long long>
#define mp(i,j) make_pair(i,j)
#define ll long long
#define MAX 1000000000
#define MOD 1000000007
#define vi vector<pii>
#define vvi vector < vi >
#define pb(i) push_back(i);
#define tr(v,it) for(it=v.begin();it!=v.end();it++)
ll sq(ll a)
{
    return a*a;
}
  ll mat[2510][2510];
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
    int i;
    int n;
    cin>>n;

     vector<bool> visited(n+4,false);
    pair<long long,long long> v1,v2;
    ll w;
    int j;
    pair<int,int> edge[n+4];
    FOR(i,1,n+2)
    {
        cin>>v1.first>>v1.second;
        edge[i]=v1;
    }
    FOR(i,1,n+2)
    {
        FOR(j,1,n+2)
        {
            if(i!=j)
            {
                w=sq(edge[i].first-edge[j].first)+sq(edge[i].second-edge[j].second);
                mat[i][j]=w;
            }
        }
    }
    ll sum=0;
    ll dist,pos;
    ll UNI=10000000000000000ll;
    int src=n+1;
    ll d[n+4];
    FOR(i,1,n+2)
    d[i]=UNI;
    visited[src]=true;
    d[src]=0;
    while(1)
    {
        dist=UNI;
        FOR(i,1,n+2)
        {

            if(!visited[i] && (d[src]+mat[src][i])<d[i])
            {
                d[i]=d[src]+mat[src][i];
            }
            if(!visited[i] && dist>d[i])
            {
                dist=d[i];
                pos=i;
            }
        }
        src=pos;
        d[src]=dist;
        visited[pos]=true;
        //cout<<src<<" "<<sum<<"\n";
        if(pos==(n+2))
        break;
    }
    cout<<d[n+2]<<"\n";
    }
    return 0;
}
