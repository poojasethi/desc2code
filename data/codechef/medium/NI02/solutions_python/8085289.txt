#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define N 2550
#define INF 1000000000000000LL
#define pli pair<ll,int>
#define sq(x) ((x)*(x))

int x[N],y[N];
ll d[N];

ll dijksrta(int s,int f,int n)
{
    for(int i=0;i<n;i++) d[i]=INF;
    d[s]=0;
    priority_queue<pli,vector<pli>,greater<pli> >Q;
    int u,v;
    ll w;
    Q.push(make_pair(0,s));
    while(!Q.empty())
    {
        u=Q.top().second;
        w=Q.top().first;
        Q.pop();
        if(w == d[u]) {
            for(v=0;v<n;v++)
            {
                if(v==u) continue;
                w =  sq(x[v]-x[u]) + sq(y[v]-y[u]);
                if(d[v] > d[u] + w)
                {
                    d[v] = d[u] + w;
                    Q.push(make_pair(d[v],v));
                }
            }
        }
    }
    return d[f];
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int t,n,i;
    cin>>t;
    while(t--) {
        cin>>n;
        for(i=0;i<n;i++) cin>>x[i]>>y[i];
        cin>>x[n]>>y[n];
        cin>>x[n+1]>>y[n+1];
        n+=2;
        cout<<dijksrta(n-2,n-1,n)<<"\n";
    }
    return 0;
}