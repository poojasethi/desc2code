#include <bits/stdc++.h>

using namespace std;

#define inf 1000000000

int SP[2505];

int A[2505][2505], X[2505], Y[2505];
priority_queue<pair<int, int> ,vector< pair<int, int> > ,greater< pair<int, int> > > Q;

void relax(int u, int v, int w)
{
	if(SP[v]>SP[u]+w)
	{
		SP[v] = SP[u] + w;
		Q.push(pair<int, int>(SP[v], v));
	}
}

int main()
{
	int T;
	scanf("%d", &T);
	
	while(T--)
	{
		int N;
		scanf("%d", &N);
		
		for(int i=2; i<=N+1; i++)
		{
			scanf("%d %d", &X[i], &Y[i]);
			SP[i] = inf;
		}
		
		SP[N+2] = inf;
		
		scanf("%d %d %d %d", &X[1], &Y[1], &X[N+2], &Y[N+2]);
		
		for(int i=1; i<=N+2; i++)
		{
			for(int j=i; j<=N+2; j++)
			{
				A[i][j] = A[j][i] = (X[i]-X[j])*(X[i]-X[j]) + (Y[i]-Y[j])*(Y[i]-Y[j]);
			}
		}
		
		SP[1] = 0;
		Q.push(pair<int, int>(SP[1], 1));
	
		while(!Q.empty())
		{
			pair<int, int>x = Q.top();
			int indx = x.second, dist = x.first;
		
			Q.pop();
		
			if(dist<=SP[indx])
			{
				for(int i=1; i<=N+2; i++)
					relax(indx, i, A[indx][i]);
			}
		}
	
		printf("%d\n", SP[N+2]);
	}
	
	return 0;
}