#include<bits/stdc++.h>
#define M 1000000007
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
vector<pii> edges[2510];
priority_queue<pii> heap;
pii pt[2510];
int dist[2510];
void clear(priority_queue<pii> &h)
{
	priority_queue<pii> q;
	swap(q,h);
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	int t,n,i,j;
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(i=1;i<=n;i++)
			cin>>pt[i].ff>>pt[i].ss;
		cin>>pt[0].ff>>pt[0].ss;
		cin>>pt[n+1].ff>>pt[n+1].ss;
		for(i=0;i<=n+1;i++)
		{
			edges[i].clear();
			dist[i]=INT_MAX;
		}
		clear(heap);
		for(i=0;i<=n+1;i++)
			for(j=i+1;j<=n+1;j++)
			{
				int d=(pt[i].ff-pt[j].ff)*(pt[i].ff-pt[j].ff) + (pt[i].ss-pt[j].ss)*(pt[i].ss-pt[j].ss);
				edges[i].pb(mp(j,d));
				edges[j].pb(mp(i,d));
			}
		dist[0]=0;
		heap.push(mp(0,0));
		while(!heap.empty())
		{
			pii v=heap.top();
			heap.pop();
			if(v.ss==n+1)
				break;
			for(i=0;i<edges[v.ss].size();i++)
			{
				pii u=edges[v.ss][i];
				if(dist[u.ff] > u.ss-v.ff)
				{
					dist[u.ff]=u.ss-v.ff;
					heap.push(mp(-dist[u.ff],u.ff));
				}
			}
		}
		cout<<dist[n+1]<<'\n';
	}
	return 0;
}
