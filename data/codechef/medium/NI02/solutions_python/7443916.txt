#include <bits/stdc++.h>

using namespace std;

#define ll long long int

ll check(ll a[],ll n)
{
    ll i,r=1;
    for(i=0;i<n;i++)
    {
        if(a[i]==-1)
        {
            r=-1;
            break;
        }
    }
    return r;
}

ll dijkstra(vector <pair<ll,ll> > v[],ll n,ll a)
{
    vector <pair<ll,ll> >::iterator it;
    pair <ll,ll> p;
    ll x[n],y[n];
    ll i,small=0,pos=0,initcost=0;
    for(i=0;i<n;i++)
    {
        x[i]=-1;
        y[i]=10000000000;
    }
    x[a]=1;
    y[a]=0;
    while(check(x,n)!=1&&pos!=-1)
    {
        small=10000000001;
        pos=-1;
        for(it=v[a].begin();it!=v[a].end();it++)
        {
            if((it->second)+initcost<y[it->first])
            {
                y[it->first]=it->second+initcost;
            }
        }
        for(i=0;i<n;i++)
        {
            if(y[i]<small&&x[i]!=1)
            {
                small=y[i];
                pos=i;
            }
        }
        initcost=small;
        a=pos;
        x[a]=1;
    }
	return y[n-1];
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
    ll n,i,j,r1,r2,r,x,y;
    scanf("%lld",&n);
    pair<ll,ll> a[n+2];
    vector <pair<ll,ll> > v2[n+2];
    pair <ll,ll> p;
    vector <pair<ll,ll> >::iterator it;
    for(i=0;i<n+2;i++)
    {
        scanf("%lld %lld",&x,&y);
        p=make_pair(x,y);
        a[i]=p;
    }

    for(i=0;i<n+2;i++)
    {
        for(j=0;j<n+2;j++)
        {
            if(i!=j)
            {
            r1=abs(a[i].first-a[j].first);
            r1*=r1;
            r2=abs(a[i].second-a[j].second);
            r2*=r2;
            r=r1+r2;
            p=make_pair(j,r);
            v2[i].push_back(p);
            }
        }
    }
    r=dijkstra(v2,n+2,n);
    printf("%lld\n",r);
    }
    return 0;
}
