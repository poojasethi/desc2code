/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<cstdio>
#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<climits>
#include<string>
#include<stack>
#include<queue>
#include<set>
#include<algorithm>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define mp make_pair
typedef pair<int,int> PII;
vector <PII> G[100002];
int D[100002];



void Dijsktra(int start)
{
	set <PII> q;
	D[start]=0;
	q.insert(mp(0,start));
	while(!q.empty())
	{
		PII top=*q.begin();
		q.erase(q.begin());
		int v=top.S,l=G[v].size();
		for(int i=0;i<l;i++)
		{
			int v2=G[v][i].F;
			int d=G[v][i].S;
			if(D[v2]>D[v]+d)
			{
				if(D[v2]!=INT_MAX)		//already in the queue
					q.erase(q.find(mp(D[v2],v2)));
				D[v2]=D[v]+d;
				q.insert(mp(D[v2],v2));
			}
		}
	}
}
int main()
{
	int t;
	si(t);
	while(t--)
	{
		int n;
		si(n);
        pair<int,int> c[3000];
        pair<int,int> source, dest;
        for(int i=1;i<=n;i++)
            si2(c[i].first, c[i].second);
        si2(c[0].first, c[0].second);
        si2(c[n+1].first, c[n+1].second);
		n+=2;
		int i;
		REP(i,n)			//nodes are assumed to be from 0 to n-1
		{
			D[i]=INT_MAX;
			G[i].clear();
		}
		for(int i=0;i<n;i++)
        {
            for(int j=i+1;j<n;j++)
            {
                int weight;
                int a = c[i].first-c[j].first, b=c[i].second-c[j].second;
                weight = a*a+b*b;
			G[i].push_back(mp(j,weight));
			G[j].push_back(mp(i,weight));
            }
        }
		int start,end;
		start=0;
		end=n-1;
		Dijsktra(start);
		if(D[end]!=INT_MAX)
			printf("%d\n",D[end]);
		else
			printf("NO\n");
	}
	return 0;
}
