/*
*
* FileName: 
* Created By: ptk23
* Description: 
*
*/
#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <algorithm>
#include <utility>
#include <vector>
#include <set>
#include <list>
#include <map>
#include <stack>
#include <queue>
#include <fstream>
#include <istream>
#include <ostream>
#include <iomanip>
 
#define ull unsigned long long
#define ll long long
#define ini(x) scanf("%d", &x)
#define inl(x) scanf("%ld", &x)
#define inll(x) scanf("%lld", &x)

 
using namespace std;
typedef pair <int,int> PII;
const int INF=1000000000;
vector <vector <PII> > edge(2505);


pair <int,int> pr[2508];
int dijktras(int n)
{
	vector <int> dist(n+5);
	priority_queue <PII,vector<PII>,greater<PII> > Q;
	for(int i=0;i<n+2;i++)
	dist[i]=INF;
	Q.push(make_pair(0,0));
	dist[0]=0;
	while(!Q.empty())
	{
		PII p=Q.top();
	//	cout<<p.first<<" "<<p.second<<endl;
		if(p.second==n+1)
		break;
		Q.pop();
		int he=p.second;
		for(vector <PII>::iterator it=edge[he].begin();it!=edge[he].end();it++)
		{
			if(dist[he]+it->first<dist[it->second])
			{
			dist[it->second]=dist[he]+it->first;
			Q.push(make_pair(dist[it->second],it->second));
			}
		}
	}
	return dist[n+1];
}
ll dis(int x,int y,int x2,int y2 )
{
	return (x2-x)*(x2-x)+(y2-y)*(y2-y);
}
int main()
{
	//freopen("i.txt","r",stdin);
	int t;
	for(ini(t);t;--t)
	{
		int n;
		ini(n);
		//edge.clear();
		for(int i=1;i<=n;i++)
		{
			ini(pr[i].first);ini(pr[i].second);
		}
		ini(pr[0].first);ini(pr[0].second);
		ini(pr[n+1].first);ini(pr[n+1].second);
		//cout<<":P"<<endl;
		for(int i=0;i<n+2;i++)
		{
			edge[i].clear();
			for(int j=0;j<n+2;j++)
			{
				if(i!=j)
				{
					edge[i].push_back(make_pair(dis(pr[i].first,pr[i].second,pr[j].first,pr[j].second),j));
				}
			}
		}
		/*for(int i=0;i<n+2;i++)
		{
			for(int j=0;j<n+2;j++)
			{
				cout<<edge[i][j].first<<" "<<edge[i][j].second<<" "<<endl;
			}
			cout<<endl;
		}*/
		//cout<<":P"<<endl;
		cout<<dijktras(n)<<endl;
		
	}
	return 0;
}
