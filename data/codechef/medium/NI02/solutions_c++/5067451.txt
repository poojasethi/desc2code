#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
#include<queue>
using namespace std;
typedef long long int ll;
ll d[2505],cp[2505][2505],n;
typedef pair<ll,int> pa;
int main()
{
    ll tc,i,a[2505][2],j;
    cin>>tc;
    while(tc--)
    {

        memset(cp,0,sizeof(cp));
        cin>>n;
        for(i=0;i<=n+1;i++)
            d[i]=1e9;
        d[0]=0;
        for(i=1;i<=n;i++)
            cin>>a[i][0]>>a[i][1];
        cin>>a[0][0]>>a[0][1]>>a[n+1][0]>>a[n+1][1];
        for(i=0;i<=n+1;i++)
        {
            for(j=0;j<=n+1;j++)
            {
                cp[i][j]=((a[i][0]-a[j][0])*(a[i][0]-a[j][0]))+((a[i][1]-a[j][1])*(a[i][1]-a[j][1]));
            }
        }

        priority_queue< pa >q;
        q.push(make_pair(0,0));
        /*for(i=1;i<=n+1;i++)
        {
            q.push(make_pair(-1e9,i));
        }*/
        pa p;
        while(!q.empty())
        {
            p=q.top();
            q.pop();
            ll dis=-1*p.first;
            ll node=p.second;
            if(dis>d[node])
                continue;
            for(i=0;i<=n+1;i++)
            {
                ll len=cp[node][i];
                ll to=i;
                if(d[node]+len<d[to])
                {
                    d[to]=d[node]+len;
                    q.push(make_pair(-1*d[to],to));
                }
            }

        }
        cout<<d[n+1]<<endl;
    }
    return 0;
}
