#include <bits/stdc++.h>

using namespace std;

pair <int,int> a[2512];
bool vis[2512];
int d[2512];

int main() {
	int t,n;
	cin >> t;
	while ( t-- ) {
		cin >> n;
		for ( int i = 1; i <= n; i++ ) {
			vis[i] = false;
			d[i] = -1;
			cin >> a[i].first >> a[i].second;			
		}
		cin >> a[0].first >> a[0].second;
		cin >> a[n+1].first >> a[n+1].second;
		vis[n+1] = vis[0] = false;
		d[0] = 0;
		d[n+1] = -1;
		n += 2;
		priority_queue < pair<int,int>, vector < pair<int,int> >, greater < pair<int,int> > > pq;
		pq.push(make_pair(0,0));
		while ( !(pq.empty()) ) {
			pair <int,int> fp = pq.top();
			pq.pop();
			if ( fp.second == n-1 ) {
				cout << fp.first << endl;
				break;
			}
			if ( vis[fp.second] ) continue;
			for ( int i = 0; i < n; i++ ) {
				if ( vis[i] ) continue;
				if ( d[i] == -1 || d[i] > d[fp.second] + (a[i].first-a[fp.second].first)*(a[i].first-a[fp.second].first) + (a[i].second-a[fp.second].second)*(a[i].second-a[fp.second].second) ) {
					d[i] = d[fp.second] + (a[i].first-a[fp.second].first)*(a[i].first-a[fp.second].first) + (a[i].second-a[fp.second].second)*(a[i].second-a[fp.second].second);
					pq.push(make_pair(d[i],i));
				}
			}
			vis[fp.second] = true;
		}
	}
	return 0;
}