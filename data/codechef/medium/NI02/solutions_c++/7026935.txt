#include<iostream>
using namespace std;
#define infinite 100000000
class point
{
   int X,Y;
   long long int dist;
public:
   int Distance(point p)
   {
      return (p.X-X)*(p.X-X)+(Y-p.Y)*(Y-p.Y);
   }
   friend int main();
};
int main()
{
   int T,N,i,minimum,nextMinimum;
   int dist;
   point *P;
   bool *visited;
   cin>>T;
   while(T--)
   {
      cin>>N;
      P=new point[N+2];
      visited=new bool[N+2];
      for(i=1;i<=N;visited[i]=false,i++)
      {
         visited[i]=false;
         P[i].dist=infinite;
         cin>>P[i].X>>P[i].Y;
      }
      cin>>P[0].X>>P[0].Y>>P[N+1].X>>P[N+1].Y;
      visited[0]=visited[N+1]=false;
      P[N+1].dist=infinite;
      minimum=0;
      nextMinimum=-1;
      for(;minimum!=N+1;)
      {
         for(i=1;i<=N+1;i++)
         {
            if(visited[i])
               continue;
            dist=P[i].Distance(P[minimum]);
            if(P[i].dist>dist+P[minimum].dist)
               P[i].dist=dist+P[minimum].dist;
            if(nextMinimum==-1||P[i].dist<P[nextMinimum].dist)
               nextMinimum=i;
         }
         visited[minimum]=true;
         minimum=nextMinimum;
         nextMinimum=-1;
      }
      cout<<P[N+1].dist<<endl;
   }
return 0;
}
