#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<cmath>
using namespace std;
int a[2505][2505];
long long int dist[100000],v[100000],mn;
int main()
{
	vector< pair <int,int> > ne(3500);
	int n,i,j,x,y,m,t,u,q,d,np;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		for(i=1;i<=n;i++)
			for(j=1;j<=n;j++)
				a[i][j]=1000000000;
		for(i=1;i<=n;i++){
			scanf("%d%d",&x,&y);
			ne[i] = pair<int,int>(x,y);
		}
		scanf("%d%d",&x,&y);
		ne[0] = pair<int,int>(x,y);
		scanf("%d%d",&x,&y);
		ne[n+1] = pair<int,int>(x,y);
		for(i=0;i<=n+1;i++)
			for(j=0;j<=n+1;j++){
				a[i][j] = pow((ne[j].second - ne[i].second),2) + pow((ne[j].first - ne[i].first),2);
				//printf("%d i = %d j = %d\n",a[i][j],i,j);
			}
		/*for(i=0;i<=n+1;i++){
			for(j=0;j<=n+1;j++)
				printf("%d ",a[i][j]);
			printf("\n");
		}*/
		dist[0]=0;
		for(i=1;i<=n+1;i++)
			dist[i]=1000000000;
		memset(v,0,sizeof(v));
		while(1)
		{
			mn=1000000005;
			for(i=0;i<=n+1;i++)
				if( v[i]==0 && dist[i]<=mn )
				{
					mn = dist[i];
					np = i;
				}
			v[np]=-1;
			//printf("node=%d\n",np);
			if(np==n+1)
				break;
			for(i=0;i<=n+1;i++)
			{
				if(a[np][i]!=1000000000)
					if(dist[i] > dist[np] + (long long )a[np][i])
						dist[i]=dist[np]+(long long)a[np][i];
			}
			/*for(i=0;i<=n+1;i++)
			  printf("%d ",dist[i]);
			  printf("\n");*/
		}
		printf("%lld\n",dist[n+1]);
	}
	return 0;
}
