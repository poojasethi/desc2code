#include <stdio.h>
#include <math.h>
#include <stdlib.h>
#define ll long long
#define MAXN 100000
#define BLOCKSZ 8

int primes[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};

int A[MAXN+1];
int counts[MAXN+1][25];


ll modpow(ll x,int y, int M)
{
  ll xpow = x;
  ll answer = 1;
  while(y>0)
    {
      if(y&1)
    answer = (answer * xpow)%M;
      xpow = (xpow*xpow)%M;
      y>>=1;
    }
  return answer;
}

int main() {
  int N;
  scanf("%d",&N);
  for(int i=0;i<N;i++) {
    scanf("%d",&A[i]);
    
    for(int j=0;j<25;j++) {
        
      counts[i][j]=0;
      while(A[i]%primes[j]==0) {
    counts[i][j]++;
	A[i]/=primes[j];
      }
    }
  }

  for(int i=1;i<N;i++) {
    for(int j=0;j<25;j++)
      counts[i][j]+=counts[i-1][j];
  }


  int T;
  scanf("%d",&T);
  for(int t=1;t<=T;t++) {
    int L,R,M;
    scanf("%d%d%d",&L,&R,&M);
    L--;
    R--;
    ll answer = 1;
    for(int j=0;j<25;j++) {
      int tcounts = counts[R][j]-(L>0?counts[L-1][j]:0);
      answer = (answer * modpow(primes[j], tcounts, M)) % M;
    }
    printf("%lld\n",answer);
  }

  
}