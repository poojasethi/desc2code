#include<iostream>
#include<cstdio>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b,ll m)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a, b/2, m);
	temp=(temp*temp)%m;
	if(b&1)
		temp=(temp*a)%m;
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};
int main()
{
	//ios_base::sync_with_stdio(false);
	int t, n, i, val, l, r, m, j, temp, c;
	vi p;
	vb num(101);
	for( i=2;i<100;i++ )
	{
		if( !num[i])
		{
			p.pb( i);
			for( j=i*i;j<=100;j=j+i )
			{
				num[j] = true;
			}
		}
	}
	int sz =p.size();
	//cin >> n;
	sc("%d",&n);
	vii st(n+1,vi(sz));
	for( i=1;i<=n;i++ )
	{
		//cin >> temp;
		sc("%d",&temp);
		for( j=0;(j<sz);j++ )
		{
			val = p[j];
			c=0;
				while( (temp%val)==0)
				{
					c++;
					temp/=val;
				}
			st[i][j] = st[i-1][j] + c;
		}
	}
	//cin >> t;
	sc("%d",&t);
	ll count, ans=1;
	while( t--)
	{
		//cin >> l >> r >> m;
		sc("%d%d%d",&l,&r,&m);
		ans = 1;
		for( i=0;i<sz;i++ )
		{
			count = st[r][i] - st[l-1][i];
			if( count )
			{
				ans =(ans* power((ll)p[i],count, (ll)m ))%m;
			}
		}
		ans %= m;
		pf("%lld\n",ans);
	}
    return 0;
}
