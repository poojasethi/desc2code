#include <stdio.h>
#define ull unsigned long long
#define MUL(a, b, MOD)((int)((ull)(a) * (ull)(b) % MOD))
 
#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif
 
int read_int() {
char c = gc();
while(c < '0' || c > '9') c = gc();
int ret = 0;
while(c >= '0' && c <= '9') {
ret = 10 * ret + c - 48;
c = gc();
}
return ret;
}
 
int pow_mod(int b, int e, int M) {
if (e == 0)
return 1;
if (e == 1)
return b;
if (e == 2)
return MUL(b, b, M);
int t = pow_mod(b, e/2, M);
if (e%2 == 0)
return MUL(t, t, M);
t = MUL(t, t, M);
return MUL(t, b, M);
}
 
int freq[100001][25];
int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
 
int main(int argc, char* argv[]) {
int N, T, L, R, M, i, j, p, A;
 
N = read_int();
for(j=0;j<25;j++)
freq[0][j] = 0;
for(i=1; i<=N; i++) {
A = read_int();
for(j=0;j<25;j++) {
freq[i][j] = freq[i-1][j];
while(A%primes[j] == 0) {
freq[i][j]++;
A /= primes[j];
}
}
}
T = read_int();
while(T--) {
L = read_int();
R = read_int();
M = read_int();
p = 1;
for(j=0;j<25;j++)
p = MUL(p, pow_mod(primes[j], freq[R][j]-freq[L-1][j], M), M);
printf("%d\n", p);
}
 
return 0;
}