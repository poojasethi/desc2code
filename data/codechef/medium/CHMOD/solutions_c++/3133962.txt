#include<string>
#include<iomanip>
#include<vector>
#include<utility>
#include<math.h>
#include<string.h>
#include<stdio.h>
#include<stack>
#include<queue>
#include<map>
#include<iostream>
#include<algorithm>
#include<fstream>
using namespace std;

typedef long long LL;
const LL INF = 1000000000;
const LL MOD = 761238923;

#define ii pair<int,int>
#define mp make_pair
#define fi first
#define se second
#define pb push_back
#define rep(i,a,b) for (int i = a; i<=b; i++)
#define repd(i,b,a) for (int i = b ;i>=a; i--)
#define reset(a,b) memset(a, b, sizeof a)

int p[] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
int occ[100003][100] , n,arr[100003],m ,l , r, mods;
LL ans;

LL bigmod(int b, int p, int m)
{
              if (p==0) return 1;
              LL k =bigmod(b,p/2,m);
              LL kk = (k*k)%m;
              if (p%2==0) return kk; else return (kk*b)%m;
}
              

int main()
{
    cin>>n;
    
    reset(occ,0);
    rep(i,1,n)
    {
              scanf("%d",&arr[i]);
              rep(j,0,24)
              {
                         int c = 0;
                         int k = p[j];
                         while (arr[i]%k==0) k*=p[j],c++;
                         occ[i][p[j]] = occ[i-1][p[j]];
                         occ[i][p[j]] +=c;
              }
    }
    
    scanf("%d",&m);
    rep(i,1,m) 
    {
               scanf("%d%d%d",&l,&r,&mods);
               ans = 1;
               rep(j,0,24)
               {
                          ans = (ans*bigmod(p[j],occ[r][p[j]]-occ[l-1][p[j]],mods))%mods;
               }
               printf("%lld\n",ans);
    }
    
    //system("pause");
    return 0;
}
               
    
    
