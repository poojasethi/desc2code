#include <cstdio>
#include <cmath>
#include <iostream>
#include <cstring>
#include <vector>
using namespace std;
typedef long long LL;
#define maxn 100010
#define N 101
bool vis[N];
vector<int>prime;
int dp[maxn][26];
void Prime(){
    memset(vis,true,sizeof(vis));
    prime.clear();
    for(int i=2;i<N;i++){
        if(vis[i]){
            prime.push_back(i);
            for(int j=2*i;j<N;j+=i){
                vis[j]=false;
            }
        }
    }
}
LL mod;
LL Pow(LL a,LL b){
    LL ans=1;
    while(b){
        if(b&1) b--,ans=(ans*a)%mod;
        else b>>=1,a=(a*a)%mod;
    }
    return ans;
}
int main(){
    Prime();
    int n,x;
    while(scanf("%d",&n)!=EOF){
        memset(dp,0,sizeof dp);
        for(int i=1;i<=n;i++){
            scanf("%d",&x);
            for(int j=0;prime[j]<=x && j<prime.size();j++){
                while(x%prime[j]==0){
                    x/=prime[j];
                    dp[i][j]++;
                }
            }
        }
        for(int i=1;i<=n;i++){
            for(int j=0;j<prime.size();j++){
                dp[i][j]+=dp[i-1][j];
            }
        }
        int T;
        scanf("%d",&T);
        while(T--){
            int l,r;
            scanf("%d%d%lld",&l,&r,&mod);
            LL ans=1;
            for(int i=0;i<prime.size();i++){
                ans=(ans*Pow(prime[i],dp[r][i]-dp[l-1][i]))%mod;
            }
            printf("%lld\n",ans);
        }
    }
    return 0;
}
