#include<iostream>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<fstream>
using namespace std;
#define abs(x) ((x)>0?(x):-(x))
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define tkint(n) scanf("%d",&n)
#define tkchar(ch) scanf("%c",&ch)
#define tklong(n) scanf("%I64d",&n)
int prime[26]={0,2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};
int factor[101][26];
int fre[100000+5][27];
lld M;
lld expo(lld base, lld exponent)
{
    lld result = 1%M;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
		result = (result * base) % M;
        exponent = exponent >> 1;
        base = (base * base) % M;
    }
    return result;
}
int pof(int x,int p)
{
	int d=0;
	while(x>0&&x%p==0)
	{
		x/=p;
		++d;
	}
	return d;
}
int main()
{
	for(int i=1;i<=100;++i)
	{
		for(int j=1;j<=25;++j)
		{
			factor[i][j]=pof(i,prime[j]);
		}
	}
	int l,r,t,n,x;
	lld ans;
	cin>>n;
	for(int i=1;i<=n;++i)
	{
		tkint(x);
		for(int p=1;p<=25;++p)
		{
			fre[i][p]=fre[i-1][p]+factor[x][p];
		}
	}
	cin>>t;
	while(t--)
	{
		scanf("%d%d%llu",&l,&r,&M);
		ans=1;
		for(int i=1;i<=25;++i)
		{
			ans=(ans*expo(prime[i],fre[r][i]-fre[l-1][i]))%M;
		}
		printf("%llu\n",ans%M);
	}
}