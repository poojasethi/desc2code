#include<iostream>
#include<cstdio>
using namespace std;

#define gc getchar_unlocked
long long read() {
    char c = gc();
    while(c<'0' || c>'9') c = gc();
    long long ret = 0;
    while(c>='0' && c<='9') {
        ret = 10 * ret + c - 48;
        c = gc();
    }
    return ret;
}

long long B[100001][101];
int primes[25] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97}; 
int factors[101][25];

long long power(long long x, long long y, long long MOD)
{
    long long res = 1;
    while (y > 0)
    {
        if (y & 1)
            res = (res * x)%MOD;
        y = y>>1;
        x = (x * x)%MOD;
    }
    return res;
}

void calc_factors()
{
    for(int i=1;i<=100;i++)
    {
        for(int j=0;j<25;j++)
        {
            int ct = 0, num = i;
            while(num%primes[j]==0)
            {
                ct++;
                num /= primes[j];
            }
            factors[i][j] += ct;
        }
    }
}

int main()
{
    calc_factors();
    int n, t, l, r, m, num;
    long long ans;
    n = read();
    for(int i=1;i<=n;i++)
    {
        num = read();
        for(int j=0;j<25;j++)
            B[i][j] = B[i-1][j];
        for(int j=0;j<25;j++)
            B[i][j] += factors[num][j];
    }

    t = read();
    while(t--)
    {
        l = read();
        r = read();
        m = read();
        ans = 1;
        for(int i=0;i<25;i++)
        {
            num = B[r][i] - B[l-1][i];
            ans = (ans * power(primes[i], num, m))%m;
        }    
        printf("%lld\n", ans);
    }
    return 0;
}
