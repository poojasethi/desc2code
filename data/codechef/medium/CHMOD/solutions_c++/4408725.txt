#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<math.h>
using namespace std;
#define MOD 100000007
#define  ll long long
#define MAXN 100000
int a[MAXN+1];
ll counters[MAXN+1][25];
int primes[] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97};


ll modpow(ll x,int y, int M)
{
  ll xpow = x;
  ll answer = 1;
  while(y>0)
    {
      if(y&1)
    answer = (answer * xpow)%M;
      xpow = (xpow*xpow)%M;
      y>>=1;
    }
  return answer;
}

int main()
{
    int n;
    
    scanf("%d",&n);
    for(int i=0;i<n;++i)
    {
        scanf("%d",&a[i]);
        for(int j=0;j<25;j++)
        {
            counters[i][j]=0;
            while(a[i]%primes[j]==0)
            {
                counters[i][j]++;
                a[i] /=primes[j];
            }
        }
    }
    for(int i=1;i<n;i++)
    {
        for(int j=0;j<25;j++)
        {
            counters[i][j]=counters[i][j]+counters[i-1][j];
        }
    }
    int t;
      scanf("%d",&t);
    while(t--)
    {
        int l,r,mod;
scanf("%d%d%d",&l,&r,&mod);
        l--;r--;
        ll ans=1;
        for(int j=0;j<25;j++)
        {
          int  tcount=counters[r][j]-(l>0?counters[l-1][j]:0);
           // cout<<tcount<<endl;
            ans=(ans*(modpow(primes[j],tcount,mod)))%mod;
            
            
        }
      printf("%lld\n",ans);
    }
    
}