#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
 
using namespace std;
 
#define S(t);  scanf("%d", &t);
#define PL(t); printf("%lld\n",t);
#define REP(i,n) for(i=0; i<n; i++)
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define MAXN 100005
 
typedef long long int llint;
 
int PRIME[25] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
int arr[101][26];
int ARR[MAXN][26];
int MOD;
 
#define get getchar_unlocked
inline int INP( )
{
       int n = 0 , s = 1 ;
       char p = get( ) ;
       
       if( p == '-' )
          s = -1 ;
       
       while( ( p < '0' || p > '9' ) && p != EOF && p != '-' )
          p = get( ) ;
          
       if( p == '-' )
       s = -1 , p = get( ) ;
       
       while( p >= '0' && p <= '9' )
       {
              n = ( n << 3 ) + ( n << 1 ) + ( p - '0' ) ;
              p = get( ) ;
       }
       return n * s ;
}
 
void preCalc()
{
       int i, j, temp;
       REP(j,25) arr[1][j] = 0;
       for(i=2; i<=100; i++)
       {
              temp = i;
              for(j=0; j<=24; j++)
              {
                     int count=0;
                     if(!(temp % PRIME[j])) while(!(temp % PRIME[j])) count++ , temp/=PRIME[j];
                     arr[i][j] = count;
                     
                     if(temp == 1) break;
              }
       }
       
}
 
inline llint calc(llint x, int n)
{
       llint result = 1;
       while(n)
       {
              if(n%2) result = (result*x) % MOD;
              x = (x*x)%MOD;
              n /= 2;
       }
       return result;
}
 
main()
{
       preCalc();
       int i, j, n, x, t, le, ri;
       REP(j,100001) ARR[1][j] = 0;
       
       n = INP();
       for(i=1; i<=n; i++)
       {
              x = INP();
              for(j=0; j<=24; j++)
              {
                     ARR[i][j] = arr[x][j] + ARR[i-1][j];
              }
       }
 
       
       t = INP();
       while(t--)
       {
              le = INP(); ri = INP(); MOD = INP();
              llint ans = 1;
              for(j=0; j<=24; j++)
              {
                      int num = PRIME[j];
                      int power = ARR[ri][j] - ARR[le-1][j];
                      ans = (ans * ( calc(num , power) ) ) % MOD ;
              }
              PL(ans);
       }
       
}
 