#include<iostream>
#include<vector>
#include<cstdio>
long long pow_mod(long long a,long long b,int m)
{
 long long res=1;
 while(b>0)
 {
   if(b%2==1)
    res=(res*a)%m;
   b=b/2;
   a=(a*a)% m;
}
return res;
}
long long table[100001][25];
int factorise[101][25];
using namespace std;
int main()
{
    int seive[101]={0};
    int primes[50],num,temp;
    int i,j;
    int n,l,r,m,t;
    int input[100001];
    long long answer,part,freq;
    for(i=2;i<=10;i++)
    {
        for(j=i*i;j<=100;j+=i)
        {
            seive[j]=1;
        }
    }
    num=0;
    for(i=2;i<101;i++)
    {
        if(seive[i]==0)
        {
            primes[num++]=i;
        }
    }
    for(i=0;i<101;i++)
    {
        for(j=0;j<num;j++)
            factorise[i][j]=0;
    }
    factorise[2][0]=1;
    for(j=3;j<=100;j++)
    {
        temp=j;
        for(i=0;i<num&&temp>1;i++)
        {
            while(temp%primes[i]==0)
            {
                temp/=primes[i];
                factorise[j][i]++;
            }
        }
    }
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        scanf("%d",&input[i]);
    for(i=0;i<num;i++)
        table[0][i]=0;
    for(i=1;i<=n;i++)
    {
        for(j=0;j<25;j++)
        {
            if(input[i]==1)
                table[i][j]=table[i-1][j];
            else
            table[i][j]+=(table[i-1][j]+factorise[input[i]][j]);
        }
    }
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d %d",&l,&r,&m);
        answer=1;
        for(i=0;i<num;i++)
        {
            freq=table[r][i]-table[l-1][i];
            part=pow_mod(primes[i],freq,m);
            answer*=part;
            answer%=m;
        }
        printf("%lld\n",answer);
    }
    return 0;
}
