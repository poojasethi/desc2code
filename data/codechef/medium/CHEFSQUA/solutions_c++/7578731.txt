#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;

vector< pair<double, double> > array;

short result = 4;

void search(pair<double, double> p1, pair<double, double> p2) {
    short value = 0;
    if(binary_search(array.begin(), array.end(), p1)) {
        value ++;
    }
    if(binary_search(array.begin(), array.end(), p2)) {
        value ++;
    }
    short answer = 2 - value;
    result = (answer < result) ? answer : result;
}

int main() {
    int n;
    double x, y;
    cin >> n;
    for(int i = 0; i < n; i ++) {
        cin >> x >> y;
        array.push_back(make_pair(x, y));
    }
    sort(array.begin(), array.end());
    array.erase(unique(array.begin(), array.end()), array.end());
    n = array.size();
    /*vector< pair<int, int> > :: iterator it;
    for(it = array.begin(); it != array.end(); it ++) {
        cout << it -> first << " " << it -> second << endl;
    }*/
    if(n == 0) {
        cout << "4" << endl;
    } else if(n == 1) {
        cout << "3" << endl;
    } else if(n == 2) {
        cout << "2" << endl;
    } else {
        for(int i = 0; i < n; i ++) {
            for(int j = i + 1; j < n; j ++) {
                double x1 = array[i].first;
                double y1 = array[i].second;
                double x2 = array[j].first;
                double y2 = array[j].second;

                double x3 = (x1 + x2 + y2 - y1) / 2;
                double y3 = (y1 + y2 + x1 - x2) / 2;

                double x4 = (x1 + x2 + y1 - y2) / 2;
                double y4 = (y1 + y2 + x2 - x1) / 2;

                //cout << x3 << " " << y3 << endl;
                //cout << x4 << " " << y4 << endl;

                pair<double, double> p1 = make_pair(x3, y3);
                pair<double, double> p2 = make_pair(x4, y4);

                search(p1, p2);
            }
        }
        cout << result << endl;
    }
    return 0;
}
