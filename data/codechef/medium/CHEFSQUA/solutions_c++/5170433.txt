# include <iostream>
# include <stdio.h>
# include <math.h>
# include <list>
# include <algorithm>
# include <limits>
#include <vector>
#include <ctype.h> // for isupper function
#include <string>      
#include <sstream> 
#include <bits/stdc++.h>
using namespace std;

#define sll(n) scanf("%lld", &n);
#define sd(n) scanf("%d" , &n);
#define sz(v) int((v).size())
#define all(v) (v).begin(), (v).end()
#define MOD 1000000007
#define maX(a,b)   ( (a) > (b) ? (a) : (b))
#define miN(a,b)   ( (a) < (b) ? (a) : (b))
#define bitcount   __builtin_popcount
#define clr(a,x) memset(a,x,sizeof(a)) //set elements of array to some value
#define char2Int(c) (c-'0')
#define For(iter, iterable) for(typeof((iterable).begin()) iter = (iterable).begin(); iter != (iterable).end(); ++iter)
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
#define psb push_back
#define X first
#define Y second
typedef  long long LL;
typedef unsigned long long ULL;
string NumberToString ( LL Number )
{
	stringstream ss;
	ss << Number;
	return ss.str();
}


LL StringToNumber ( const string &Text )//Text not by const reference so that the function can be used with a 
{                               //character array as argument
	stringstream ss(Text);
	LL result;
	return ss >> result ? result : 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////////
vector< pair < long long,int > > ds[2001]; // sigsev is also d/t large amt of memory declared 
int n;
struct point{
	int idx, x, y;
};
point arr [2010], temp[2010];
LL distSq(point a , point b){
	LL x2= ((LL)(a.x-b.x))*(a.x-b.x);
	LL y2=((LL)(a.y-b.y))*(a.y-b.y);
	return (x2+y2);
}
bool compare (point a, point b){
	if( a.x != b.x) return a.x < b.x ;
	else if (a.x == b.x) return a.y < b.y; 
}
bool inArr( point x){
	// binary search and return 
	return binary_search(arr , arr +n , x , compare);
}
bool isRt( point a, point b , point c){
	LL d1 =distSq(a, b);
	LL d2 =distSq(b, c);
	LL d3 =distSq(a, c);
	if(d3==(d1+d2)) return true;
	else return false; 
}
int isMid(point a , point b, point c){
	int mx = (a.x+ c.x -b.x);
	int my =(a.y+c.y- b.y);
	
	//if(mx>=1e-6 && mx<=1e6 && my>=1e-6 && my<=1e6 ){
	point d ;
	d.x= mx;
	d.y= my;
	if(inArr(d)) return 0;   // points req=0
	else return 1;  // points req 1
	//}
	//else return 1 ; //points req 1

}
int main(){
	std::ios::sync_with_stdio(false);  
	
	cin>>n;
	for(int i=1; i<=n; i++){
		arr[i].idx=i; // 0 based
		temp[i].idx=i;
		cin>>arr[i].x>>arr[i].y;
		temp[i].x=arr[i].x;
		temp[i].y=arr[i].y;
	}
	long long d;
	for(int i=1;i<=n;i++){
		for(int j=i+1;j<=n;j++){
			d=distSq(arr[i],arr[j]);
			ds[i].push_back(make_pair(d,j));
			ds[j].push_back(make_pair(d,i));
		}
	}
	/*for(int i=0;i<n; i++){
		for(int j=i+1; j<n; j++){
			ds[i][j]=distSq(arr[i], arr[j]);
			ds[j][i]=ds[i][j];
		}
	}*/
	
	/*for(int i=1;i<=n; i++){
		for(int j=0; j<(int)ds[i].size(); j++){
			cout<<ds[i][j].X<<" ";
		}
		cout<<endl;
	}
	*/
	if(n==0)cout<<4<<endl;
	else if (n==1) cout<<3<<endl;
	else if (n==2) cout<<2<<endl;
	else{
		int best =2 ;
		for(int i=1;i<=n; i++){
			sort(ds[i].begin(), ds[i].end());
		}
		
		/*for(int i=1;i<=n; i++){
			for(int j=0; j<(int)ds[i].size(); j++){
				cout<<ds[i][j].X<<" ";
			}
			cout<<endl;
		}
		*/
		sort( arr+1 , arr +(n+1) , compare); // now indices in array are different than that stored in each struct
		/*for(int i=1; i<=n; i++){
			cout<<"x "<<arr[i].x <<" y "<<arr[i].y<<endl;
		}*/
		bool flag2 =false;
		for(int i=1; i<=n  && (flag2== false); i++){
			int  si =0, ei =0;
			bool flag1 =false ;
			//cout<<"row "<<i<<endl;
			/*for(int j=0; j<(int)ds[i].size(); j++){
				cout<<ds[i][j].X <<" "<<endl;
			}*/
			for(int j=1; j<=(int)ds[i].size() && (flag1== false) ; j++){
				if(j!=(int)ds[i].size() && ds[i][j].X == ds[i][j-1].X){
					ei=j;
				}
				else if( j==(int)ds[i].size() || (j<n && ds[i][j].X!=ds[i][j-1].X)){
					bool flag =false;
					//cout<<"set of duplicates "<<endl;
					/*for(int k=si; k<=ei ;k++){
						//cout<<ds[i][k].X<<" "<<endl;
					}*/
					for(int k=si ; k<=ei && (flag==false) ; k++){
						for(int l = k+1; l<=ei; l++){
							//cout<<"point indices a, b, c are "<< ds[i][k].Y <<" "<<i<<" "<<ds[i][l].Y<<endl;
							if(isRt(temp[ds[i][k].Y],temp[i],temp[ds[i][l].Y])){ // if dist (ik)= dist(il) and ik is perp to il
								int r =isMid(temp[ds[i][k].Y],temp[i],temp[ds[i][l].Y]);
								if(r<best) best =r;
								//cout<<"best till "<< best<<endl; 
								if (best == 0){
									flag =true;
									break;
								}
							}
						}
						//cout<<endl;
					}
					si = j;
					ei=j;
				}
				if(best ==0 ){
					flag1=true;
					break;
				}
			}
			if(best ==0 ){
				flag2=true;
				break;
			}
		}
		cout<<best<<endl;
	}
	

}

// int(1e6) is equivalent to 10^6
