#include<cmath>
#include<list>
#include<iostream>
#include<cstdlib>
#include<vector>
#include<stack>
#include<map>
#include<set>
#include<cstring>
#include<algorithm>

using namespace std;
#define N 1000000007
#define M 100003
#define MOD 1000000007
#define INF (int)1e9
#define LINF (long long)1e18
#define pb push_back
#define popb pop_back()
#define pln() printf("\n")
#define s(t) scanf("%d",&t)
#define sd(t) scanf("%lf",&t)
#define sld(t) scanf("%Lf",&t)
#define sl(t) scanf("%lld",&t)
#define ss(t) scanf("%s",t)
#define p(t) printf("%d",t)
#define pl(t) printf("%lld",t)
#define ps(t) printf("%s",t)
#define x first
#define y second
#define FILL(a,b) memset(a,b,sizeof(a))

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef long long LL;
typedef vector<LL> VL;
typedef pair<LL,LL> PLL;
typedef vector<PII> VPII;

/*Start where you are. Use what you have. Do what you can..*/
/*
template<class type>
type fastread()
{
char ch;type num=0;
while((ch=getchar_unlocked())<'0');
while(ch>='0')
{
num=(num)*10+ch-'0';
ch=getchar_unlocked();              
}             
return num;            
             
}
*/
PII point[2001];
set<PII>hash;

int main()
{   
#ifndef ONLINE_JUDGE
freopen("inp.txt","r",stdin);
freopen("re.txt","w",stdout);
#endif
int n,cx,cy,ans;
PII ot1,ot2,ot3,ot4;
bool cond1,cond2,cond3,cond4;
s(n);

for(int i=0;i<n;++i)
{
s(cx);s(cy);        
point[i].x=cx;point[i].y=cy;
hash.insert(point[i]);
}
if(n==0)
ans=4;
else if(n==1)
ans=3;
else if(n==2)
ans=2;
else{ans=2;
for(int i=0;i<n;++i)
{
for(int j=i+1;j<n;++j)
{
ot1=make_pair(point[i].x-(point[j].y-point[i].y),point[i].y+point[j].x-point[i].x);
ot2=make_pair(point[j].x-(point[j].y-point[i].y),point[j].y+point[j].x-point[i].x);
ot3=make_pair(point[i].x+(point[j].y-point[i].y),point[i].y-(point[j].x-point[i].x));
ot4=make_pair(point[j].y-(point[j].x-point[i].x),point[j].x+point[j].y-point[i].y);

cond1=hash.count(ot1);
cond2=hash.count(ot2);
cond3=hash.count(ot3);
cond4=hash.count(ot4);


if((cond1&&cond2)||(cond3&&cond4))
ans=0;
else if((cond1||cond2)||(cond3||cond4))
ans=1;

}        
}}
p(ans);pln();        
        



//cin.get();
return 0;    
}
