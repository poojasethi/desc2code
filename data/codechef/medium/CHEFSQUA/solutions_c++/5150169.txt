#include <algorithm>
#include <fstream>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
#include<string.h>
#include<limits.h>

#define FOR(I,A,B) for(long long I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define POS 3.142857
using namespace std;
int main ()
{
	int n, i, mini, j;
	pair<int, int> pt1, pt2, pt3, pt4;
	map<pair<int, int>, int> m;
	vector<pair<int, int> > a;	
	bool f1, f2, f3, f4;
	scanf("%d", &n);
	a.resize(n);
	for(i=0; i<n; i++)
	{
		scanf("%d %d", &a[i].first, &a[i].second);
		m[make_pair(a[i].first, a[i].second)] = 1;
	}
	if(n == 0)
	{
		printf("4\n");
		return 0;
	}
	if(n == 1)
	{
		printf("3\n");
		return 0;
	}
	mini = 2;
	for(i=0; i<n; i++)
	{
		for(j=i+1; j<n; j++)
		{
			pt1 = make_pair(a[i].first + (a[j].second-a[i].second), a[i].second - (a[j].first-a[i].first));
			pt2 = make_pair(a[i].first - (a[j].second-a[i].second), a[i].second + (a[j].first-a[i].first));
			pt3 = make_pair(a[j].first + (a[i].second-a[j].second), a[j].second - (a[i].first-a[j].first));
			pt4 = make_pair(a[j].first - (a[i].second-a[j].second), a[j].second + (a[i].first-a[j].first));
			f1 = m.find(pt1) != m.end();
			f2 = m.find(pt2) != m.end();
			f3 = m.find(pt3) != m.end();
			f4 = m.find(pt4) != m.end();
			if(f1 || f2 || f3 || f4)
				mini = 1;
			if(f1 && f4)
			{
				printf("0\n");
				return 0;
			}
			if(f2 && f3)
			{
				printf("0\n");
				return 0;
			}
		}
	}
	printf("%d\n", mini);
	return 0;
}
