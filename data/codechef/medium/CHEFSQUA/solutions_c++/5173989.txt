#include<iostream>
#include<set>
#include<cstdio>
using namespace std;

class node
{
public:
	int first;
	int second;
	node(int a,int b)
	{
		first = a;
		second = b;
	}
	bool operator< (const node& a) const
	{
		if(first == a.first)
			return second < a.second;
		else
			return first < a.first;
	}
};
int main()
{
	int n;
	scanf("%d\n",&n);
	set< node > s;
	int a,b;
	for(int i=0;i<n;i++)
	{
		scanf("%d %d\n",&a,&b);
		s.insert(node(a,b));
	}
	if(n<=2)
	{
		printf("%d\n",4-n);
		return 0;
	}
	int res = 2;
	for(set<node > :: iterator itr1 = s.begin(); itr1!= s.end(); itr1++)
	{
		int x1 = (*itr1).first;
		int y1 = (*itr1).second;
		set<node > :: iterator itr2 = itr1;
		itr2++;
		//cout<<"trying "<<x1<<" "<<y1<<":::"<<endl;
		for(; itr2!= s.end(); itr2++)
		{
		
			int x2 = (*itr2).first;
			
			int y2 = (*itr2).second;
			int d1 = x1 - x2;
			int d2 = y1 - y2;
			//cout<<"trying "<<x2<<" "<<y2<<":"<<endl;
			if(s.find(node ( x1 - d2, y1 + d1)) != s.end())
			{
				res = 1;
				//cout<<"got "<<x1-d2<<" "<<y1+d1<<":)"<<endl;
				if(s.find(node ( x2 - d2, y2 + d1)) != s.end())
				{	
					////cout<<"got "<<x1-d2<<" "<<y1+d1<<":)"<<endl;
					res = 0;	
					//cout<<"here";
					break;

				}
			}
			if(s.find(node ( x1 + d2, y1 - d1)) != s.end())
			{
				res = 1;
				//cout<<"got "<<x1+d2<<" "<<y1-d1<<":)"<<endl;
				if(s.find(node ( x2 + d2, y2 - d1)) != s.end())
				{	
					res = 0;	
					//cout<<"here";
					break;
				}
			}
		}
		if(res == 0)
			break;
	}
	printf("%d\n",res);
	return 0;

}