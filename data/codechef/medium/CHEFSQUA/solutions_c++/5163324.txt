#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <deque>
#include <queue>
#include <list>
#include <map>
#include <set>
#include <string>
#include <stack>
#include <sstream>
#include <vector>
#include <numeric>

#define FOR(i, a, b) for(int i = a; i <= b; ++i)
#define FRD(i, a, b) for(int i = a; i >= b; --i)
#define FR(i, a) for(int i = 0; i < a; ++i)
#define REP(i, a) for(int i = 0; i <= a; ++i)
#define pb push_back
#define sz(x) (int)x.size()
#define reset(a, b) memset(a, b, sizeof a)
#define bug(x) cout << #x << " = " << x << endl
#define bg(a, m, n) FOR(i, m, n) cout << a[i] << " "; cout << endl
using namespace std;

typedef long long ll;
typedef unsigned long long qword;
typedef pair <int, int> ii;
#define x first
#define y second

const int maxN = 2e5 + 5;

map <ii, int> m;
int n1, n;
ii a[maxN];

ii CCW(ii A, ii B) {
    int x = B.x - A.x, y = B.y - A.y;
    int ix = 0, iy = 1, jx = -1, jy = 0;
    int xC = ix * x + jx * y, yC = iy * x + jy * y;
    return ii(xC + A.x, yC + A.y);
}

ii CW(ii A, ii B) {
    int x = B.x - A.x, y = B.y - A.y;
    int ix = 0, iy = -1, jx = 1, jy = 0;
    int xC = ix * x + jx * y, yC = iy * x + jy* y;
    return ii(xC + A.x, yC + A.y);
}

int main() {
/*#ifndef ONLINE_JUDGE
    freopen("TEST.INP", "r", stdin);
#else
    ios_base::sync_with_stdio(false);
#endif // ONLINE_JUDGE*/
    scanf("%d", &n1);
    int sl = 0;
    FOR(i, 1, n1) {
        ii p;
        scanf("%d%d", &p.x, &p.y);
        map <ii, int> :: iterator it = m.find(p);
        if (it == m.end())
            a[++n] = p;
        ++m[p]; sl = max(sl, m[p]);
    }
    if (sl >= 4) {
        puts("0"); return 0;
    }
    if (n == 0) {
        puts("4"); return 0;
    }
    if (n == 1) {
        puts("3"); return 0;
    }
    if (n == 2) {
        puts("2"); return 0;
    }
    int res = 0;
    FOR(i, 1, n)
        FOR(j, i + 1, n) {
            ii p;
            int sl = 0;
            map <ii, int> :: iterator it;

            p = CCW(a[i], a[j]);
            it = m.find(p);
            if (it != m.end()) ++sl;
            p = CW(a[j], a[i]);
            it = m.find(p);
            if (it != m.end()) ++sl;

            res = max(res, sl);
            sl = 0;

            p = CW(a[i], a[j]);
            it = m.find(p);
            if (it != m.end()) ++sl;
            p = CCW(a[j], a[i]);
            it = m.find(p);
            if (it != m.end()) ++sl;

            res = max(res, sl);
        }
    cout << 2 - res;
    return 0;
}
