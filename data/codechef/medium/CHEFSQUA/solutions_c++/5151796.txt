#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility> //pair
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <string>
#include <cstring>
#include <ctime>
#include <limits.h>
using namespace std;

typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<char> vc;

#define pb push_back
#define mp make_pair
#define I vector<int>::iterator
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sll(a) cin>>a
#define pi(a) printf("%d ",a)
#define pll(a) cout<<a
#define ps(a) printf("%s ",a)
#define For(i,n) for(i=0;i<n;i++)
#define FOR(i,n) for(i=n-1;i>=0;i--)
#define nl printf("\n")
#define all(a)  a.begin(),a.end()
#define ll long long int
#define MOD 1000000007
int main()
{
	int n;
	si(n);
	int a[n+1],b[n+1],i,cx,cy,dx,dy,cnt,cnt1,ans=0,j;
	set<pii> s;
	for(i=0;i<n;i++){
		scanf("%d %d",&a[i],&b[i]);
		s.insert(mp(a[i],b[i]));
	}
	if(n==0)ans=0;
	else if(n==1)ans=1;
	else if(n==2)ans=2;
	else{
		For(i,n){
			for(j=i+1;j<n;j++){
				cnt=0;cnt1=0;
				cx=(a[j]-(b[j]-b[i]));
				cy=(b[j]+(a[j]-a[i]));
				dx=(a[i]-(b[j]-b[i]));
				dy=(b[i]+(a[j]-a[i]));
			//	printf("%d %d\n",cx,cy);
			//	printf("%d %d\n",dx,dy);
				if(s.find(mp(cx,cy))!=s.end())cnt++;
				if(s.find(mp(dx,dy))!=s.end())cnt++;
				cx=(a[i]-(b[i]-b[j]));
				cy=(b[i]+(a[i]-a[j]));
				dx=(a[j]-(b[i]-b[j]));
				dy=(b[j]+(a[i]-a[j]));
			//	printf("%d %d\n",cx,cy);
			//	printf("%d %d\n",dx,dy);
				if(s.find(mp(cx,cy))!=s.end())cnt1++;
				if(s.find(mp(dx,dy))!=s.end())cnt1++;
				ans=max(ans,max(cnt+2,cnt1+2));
			}
		}
	}
	pi(4-ans);
	nl;
	return 0;
}
