#include<bits/stdc++.h>
using namespace std;


inline int max(int a,int b){	if(a>=b)return a;else return b;
}
	
	
int main()
{	int n;
	scanf("%i",&n);
	vector < pair<int,int> > a;
	map <pair<int,int>, int > store;
	for(int i=0;i<n;i++)
	{	int k1,k2;
		scanf("%i%i",&k1,&k2);
		store[make_pair(k1,k2)]=1;
		a.push_back(make_pair(k1,k2));
	}
	sort(a.begin(),a.end());
	int ans=0;
	for(int i=0;i<n;i++)
	{	for(int j = i+1;j<n;j++)
		{	int on1 = a[i].first;
			int on2 = a[i].second;
			int se1 =  a[j].first;
			int se2 = a[j].second;
			int ne1 = on1 + (se2-on2);
			int ne2 = on2 - (se1- on1);
			int ne11 = se1 + (se2 - on2);
			int ne22 = se2  - (se1 - on1);
			int count=0;
			if(binary_search(a.begin(),a.end(),make_pair(ne1,ne2))==1)
			{	count++;
			}
			if(binary_search(a.begin(),a.end(),make_pair(ne11,ne22))==1)
			{	count++;
			}
			int count1=0;
			ne11 = on1  -(se2 -on2);
			ne22 = on2 + (se1 - on1);
			ne1 = se1  - (se2 - on2);
			ne2 = se2  + (se1 - on1);
			
			if(binary_search(a.begin(),a.end(),make_pair(ne11,ne22))==1)
			{	count1++;
			}
			if(binary_search(a.begin(),a.end(),make_pair(ne1,ne2))==1)
			{	count1++;
			}
			int cou = max(count1,count);
			 ans =max(ans,cou);
		}
	}
	if(n==0)
	{	printf("%i\n",4);
	}
	else if(n==1)
	{	printf("%i\n",3);
	}
	else
	{	printf("%i\n",2-ans);
	}
}