#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
struct node
{
    int y;
    node *link;
};
node *pos[1000005],*neg[1000005];

int check(int x,int y)
{
    if(x>1000000 || y>1000000 || x<-1000000 || y<-1000000)
        return 0;
    node *tmp;
    if(x>=0 && pos[x])
    {
        tmp=pos[x];
        while(tmp)
        {
            if(tmp->y==y)
                return 1;
            tmp=tmp->link;
        }
        return 0;
    }
    else if(x<0 && neg[-1*x])
    {
        tmp=neg[-1*x];
        while(tmp)
        {
            if(tmp->y==y)
                return 1;
            tmp=tmp->link;
        }
        return 0;
    }
    return 0;
}

int main()
{
    int n,i,j,x,y,x1,x2,y1,y2;
    int points[2001][2];
    for(i=0;i<=1000000;i++)
    {
        pos[i]=NULL;
        neg[i]=NULL;
    }
    node *k,*mov;
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d %d",&x,&y);
        points[i][0]=x;
        points[i][1]=y;
        k=new node;
        if(x>=0)
        {
            k->y=y;
            k->link=NULL;
            mov=pos[x];
            if(mov)
            {
                while(mov->link)
                    mov=mov->link;
                mov->link=k;
            }
            else
                pos[x]=k;
        }
        else
        {
            x=-1*x;
            k->y=y;
            k->link=NULL;
            mov=neg[x];
            if(mov)
            {
                while(mov->link)
                    mov=mov->link;
                mov->link=k;
            }
            else
                neg[x]=k;
        }
    }
        if(n==0)
            printf("%d\n",4);
        else if(n==1)
            printf("%d\n",3);
        else if(n==2)
            printf("%d\n",2);
        else
        {
            int mini=2,pts=2;
            // taking AB and finding co-ordinates for C and D
            for(i=0;i<n-1;i++)
            {
                for(j=i+1;j<n;j++)
                {
                    pts=2;
                    x1=points[i][0];
                    y1=points[i][1];
                    x2=points[j][0];
                    y2=points[j][1];

                    /*rotating clockwise by 90*/
                    if(check(x2-(y2-y1),y2+(x2-x1)))
                        pts--;
                    if(check(x1-(y2-y1),y1+(x2-x1)))
                        pts--;
                    if(pts<mini)
                        mini=pts;
                    pts=2;

                    /*rotating anti-clockwise by 90*/
                    if(check(x2+(y2-y1),y2-(x2-x1)))
                        pts--;
                    if(check(x1+(y2-y1),y1-(x2-x1)))
                        pts--;
                    if(pts<mini)
                        mini=pts;
                }
            }
            printf("%d\n",mini);
        }
    return 0;
}
