#include<iostream>
#include<algorithm>
#include<cmath>
#include<climits>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<bitset>
#include<set>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<ctime>
#include<map>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iomanip>
#include<cctype>
#define assert(f) {if(!(f)){fprintf(stderr,Line-- Assertion failed: %sn,__LINE__,#f);exit(1);}}
#define ABS(x)   ((x)<0?-(x):(x))
#define SQR(x)      ((x)*(x))
#define CUBE(x)  ((x)*(x)*(x))
#define pnl      printf(n)
#define REP(i,n)        for(__typeof(n) i=0;i<(n);i++)
#define FOR(i,a,b)      for(__typeof(b) i=(a);i<(b);++i)
#define FORE(i,a,b)     for(__typeof(b) i=(a);i<=(b);++i)
#define FORD(i,a,b,d)   for(__typeof(b) i=(a);i<(b);i+=(d))
#define FORR(i,n,e)     for(__typeof(n) i=(n);i>=(e);--i)
#define FORRD(i,n,e,d)  for(__typeof(n) i=(n);i>=(e);i-=(d))
#define REP_IT(it,m)    for(it=m.begin();it!=m.end();it++)
#define FOREACH(it,s)     for(__typeof((s).begin()) (it)=(s).begin();(it)!=(s).end();(it)++)
#define UNIQUE(v)       sort(ALL(v)),v.erase(unique(ALL(v)),v.end())
#define FILL(a,b)       memset(a,b,sizeof(a))
#define ALL(v)          (v).begin(), (v).end()
#define RALL(v)         (v).rbegin(), (v).rend()
#define checkbit(n,b)   (((n)>>(b))&1)
#define PB push_back
#define MP make_pair
#define XX first
#define YY second
#define EPS 1e-5
#define MAXK 505
#define MOD 1000000007
#define getcx getchar_unlocked
typedef long long LL;
typedef unsigned long long ULL;
using namespace std;
template<typename T>inline T mod(T N,T M)
{     
	return (N%M+M)%M;     
}
 template<typename T>
              inline void inp( T &n )
        {       n=0;
                int ch=getcx();
                int sign=1;
                while(ch<'0'||ch>'9')
                {       if(ch=='-')
                                sign=-1;
                        ch=getcx();
                }
                while(ch>='0'&&ch<='9')
                {       n=(n<<3)+(n<<1)+ch-'0';
                        ch=getcx();             // n= n*10 = n*(8+2) - n<<3 + n<<2 => optimization
                }
                n *= sign;                      // n = -n => bitwise
        }
 
inline int max(int a,int b){	if(a>=b)return a;else return b;
}
	
	
int main()
{	int n;
	inp(n);
	vector < pair<int,int> > a;
	map <pair<int,int>, int > store;
	for(int i=0;i<n;i++)
	{	int k1,k2;
		inp(k1);
		inp(k2);
		store[make_pair(k1,k2)]=1;
		a.push_back(make_pair(k1,k2));
	}
	sort(a.begin(),a.end());
	int ans=0;
	for(int i=0;i<n;i++)
	{	for(int j = i+1;j<n;j++)
		{	int on1 = a[i].first;
			int on2 = a[i].second;
			int se1 =  a[j].first;
			int se2 = a[j].second;
			int ne1 = on1 + (se2-on2);
			int ne2 = on2 - (se1- on1);
			int ne11 = se1 + (se2 - on2);
			int ne22 = se2  - (se1 - on1);
			int count=0;
			if(binary_search(a.begin(),a.end(),make_pair(ne1,ne2))==1)
			{	count++;
			}
			if(binary_search(a.begin(),a.end(),make_pair(ne11,ne22))==1)
			{	count++;
			}
			int count1=0;
			ne11 = on1  -(se2 -on2);
			ne22 = on2 + (se1 - on1);
			ne1 = se1  - (se2 - on2);
			ne2 = se2  + (se1 - on1);
			
			if(binary_search(a.begin(),a.end(),make_pair(ne11,ne22))==1)
			{	count1++;
			}
			if(binary_search(a.begin(),a.end(),make_pair(ne1,ne2))==1)
			{	count1++;
			}
			int cou = max(count1,count);
			 ans =max(ans,cou);
		}
	}
	if(n==0)
	{	printf("%i\n",4);
	}
	else if(n==1)
	{	printf("%i\n",3);
	}
	else
	{	printf("%i\n",2-ans);
	}
} 