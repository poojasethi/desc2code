    #include <bits/stdc++.h>
    #define forall(i,a,b)               for(ll i=a;i<=b;i++)
    #define pb                          push_back
    #define mp			  			    make_pair
    #define MOD                         1000000007
     
    #define TRvi(c, it) \
    for (vi::iterator it = (c).begin(); it != (c).end(); it++)
    #define TRvii(c, it) \
    for (vii::iterator it = (c).begin(); it != (c).end(); it++)
    #define TRmsi(c, it) \
    for (msi::iterator it = (c).begin(); it != (c).end(); it++)
     
    using namespace std;
     
    typedef long long ll;
    typedef vector<ll> vi;
    typedef pair<ll, ll> ii;
    typedef vector<ii> vii;
    typedef set<ll> si;
    typedef map <string, ll> msi;
     
    ll A[10000002];
    ll ans[10000002];
     
    int main()
    {
    	 #ifndef ONLINE_JUDGE
         	//freopen("in.txt","r",stdin);
    		//freopen("out.txt","w",stdout);
         #endif
         ios_base::sync_with_stdio(false);
    		
    		ll n,k,Q;
    		cin>>n>>k>>Q;
    		
    		ll a, b, c, d, e, f, r, s, t, m;
    		cin>>a>>b>>c>>d>>e>>f>>r>>s>>t>>m>>A[0];
    		ll t1=t;
    		ll minall=A[0];
    		forall(i,1,n-1)
    			{
    			t1=( (t%s) * (t1%s) )%s;
    			if((t1%s)<=r)
    			{
    				A[i]=((a*((A[i-1])*(A[i-1])))+(b*(A[i-1]))+c)%m;
    			}
    			else
    			{
    				A[i]=((d*((A[i-1])*(A[i-1])))+(e*(A[i-1]))+f)%m; 
    			}
    			minall=min(minall,A[i]);
    		}
    		
    		
    		ll lim;
    		if(2*k>n)
                lim=n;
            else
                lim=2*k;        
     
            ll L1, La, Lc, Lm, D1, Da, Dc, Dm,L,R;
    			cin>>L1>>La>>Lc>>Lm>>D1>>Da>>Dc>>Dm;
    		ll sum=0,prod=1;
     
            if(k==1||k==2)
            {
            	forall(i,1,Q)
    			{
    			
    			 L1=( ((La%Lm)*(L1%Lm))%Lm + Lc )%Lm;
    			 D1=( ((Da%Dm)*(D1%Dm))%Dm + Dc )%Dm;
    	     	 L = L1 + 1;
    	     	 R = min(L + k - 1 + D1, n);
    	     	 L=L-1;R=R-1;
    			ll mn=1e18+1;
    			mn =min(A[L],A[R]);
    				sum+=mn;
    				prod=((prod%MOD)*(mn%MOD))%MOD;
    			
    	   		 }
     
    	    	cout<<sum<<" "<<prod%MOD<<endl;
     
            }
            else if(k==n)
            {
            	sum = Q*minall;
            	prod= ( (( Q * minall)%MOD)*prod)%MOD;
    	    	cout<<sum+1<<" "<<prod%MOD<<endl;
            }
            else
    	    {
    	        	deque<ll> q;
    	        forall(i,0,k-1)
    	        {
    	        	while(!q.empty()&&A[i]<=A[q.back()])q.pop_back();
    	        	q.pb(i);
    	        }
    	        forall(i,k,n-1)
    	        {
    	        	ans[i-k]=A[q.front()];
    	        	while(!q.empty()&&A[i]<=A[q.back()])q.pop_back();
    	        	while(!q.empty()&&q.front()<=(i-k))q.pop_front();
    	        	q.pb(i);
     
    	        }
    	        ans[n-k]=A[q.front()];
     
     
    			forall(i,1,Q)
    			{
    				
    				 L1=( ((La)*(L1)) + Lc )%Lm;
    				 D1=( ((Da)*(D1)) + Dc )%Dm;
    		     	 L = L1 + 1;
    		     	 R = min(L + k - 1 + D1, n);
    				//cout<<L<<" "<<R<<endl;
    		     	 L=L-1;R=R-1;
    				ll mn=1e18+1;
    				//forall(xx,L,R)
    				//mn=min(mn,A[xx]);
    				mn =min(ans[R-k+1],ans[L]);
    					sum+=mn;
    					prod=((prod%MOD)*(mn%MOD))%MOD;
     
     
    	        }
    	        cout<<sum<<" "<<prod%MOD<<endl;
    			
    			
    	   	 }
     
    	    
     
    	
    	return 0;
    }
     