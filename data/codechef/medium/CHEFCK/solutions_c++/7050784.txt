#include<iostream>
#include<fstream>
#include<cstring>
#include<stdio.h>
#include<assert.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<int,int>
#define SS system("pause")
#define INF 1000000000
#define P 1000000007ll
using namespace std;
const int N=10000007;
int n,k,Q,i;
ll a,b,c,d,e,f,r,s,t,m,A[N],T;
ll L1,La,Lc,Lm,D1,Da,Dc,Dm;
ll p[N],q[N],L,R,ans;
deque<pp> D;

void add(int x,int ind){
    while(D.size() && D.back().F>=x)D.pop_back();
    D.push_back(mp(x,ind));
}

int main()
{cin>>n>>k>>Q;
 cin>>a>>b>>c>>d>>e>>f>>r>>s>>t>>m>>A[1];
 T=t;
 for(i=2;i<=n;i++){
    T=(T*t)%s;
    if(T<=r)A[i]=(a*A[i-1]%m*A[i-1]%m+b*A[i-1]%m+c)%m;else
            A[i]=(d*A[i-1]%m*A[i-1]%m+e*A[i-1]%m+f)%m;
 }

 for(i=1;i<=n;i++){
    add(A[i],i);
    if(i-k>0)while(D.size() && D.front().S<=i-k)D.pop_front();
    p[i]=D.front().F;
 }
 while(D.size())D.pop_back();

 for(i=n;i>=1;i--){
    add(A[i],i);
    if(i+k<=n)while(D.size() && D.front().S>=i+k)D.pop_front();
    q[i]=D.front().F;
 }

 cin>>L1>>La>>Lc>>Lm>>D1>>Da>>Dc>>Dm;
 ll pas=1;
 while(Q--){
    L1=(La*L1+Lc)%Lm;
    D1=(Da*D1+Dc)%Dm;
    L=L1+1;
    R=MIN(L+k-1+D1,n);

    ll e=MIN(q[L],p[R]);
    ans+=e;
    pas=(pas*e)%P;
 }
 cout<<ans<<' '<<pas<<endl;
 return 0;
}
