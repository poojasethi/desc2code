#include<bits/stdc++.h>
using namespace std;
 
 
#define MAX 10000005
#define MODULO 1000000007
typedef long long LL;
 
LL A[MAX];
int min_ind[MAX];
 
inline int mod_fast(long long x,int m) { return x<m?x:x%m; }
 
int main()
{
	LL a, b, c, d, e, f, r, s, t, m ;
	LL L1, La, Lc, Lm, D1, Da, Dc, Dm ;
	LL N , K, Q;
	LL i , j;
	LL L , R;
 
   	scanf("%lld %lld %lld",&N,&K,&Q);
    scanf("%lld %lld %lld %lld %lld %lld %lld %lld %lld %lld %lld",&a,&b,&c,&d,&e,&f,&r,&s,&t,&m,&A[1]);
    scanf("%lld %lld %lld %lld %lld %lld %lld %lld",&L1,&La,&Lc,&Lm,&D1,&Da,&Dc,&Dm) ;
 
    LL x ;
 
    deque<LL>mydq;
    min_ind[1] = 1;
    mydq.push_back(1);
    LL t_pow = t ;
    LL v1 , v2 ;
    for(x = 2 ; x <= N ; x++)
    {
        t_pow = t*t_pow ;
        if(t_pow >= s)
            t_pow = t_pow % s;
    	if( t_pow  <= r)
        {
            v1 = A[x-1]*A[x-1];
            if(v1 >= m) v1 %= m;
 
            v1 = v1*a ;
            if(v1 >= m ) v1 %= m ;
 
            v2 = b*A[x-1];
 
            if(v2 >= m) v2 %= m ;
 
            A[x] = v1 + v2 + c ;
 
            if(A[x] >= m)  A[x] %= m ;
 
        }
		else
		{
            v1 = A[x-1]*A[x-1];
            if(v1 >= m)  v1 %= m;
 
            v1 = v1*d ;
            if(v1 >= m ) v1 %= m ;
 
            v2 = e*A[x-1];
            if(v2 >= m) v2 %= m ;
 
            A[x] = v1 + v2 + f ;
 
            if(A[x] >= m)  A[x] %= m ;
        }
 
		while(!mydq.empty() && A[x] <= A[mydq.back()])
    		mydq.pop_back();
 
    	mydq.push_back(x);
 
    	while(mydq.front() <= x-K)
    		mydq.pop_front();
        
    	min_ind[x] = mydq.front();
    }
 
 
	LL sum = 0 ;
    LL prod = 1;
    LL ans;
	for(int  i = 1 ; i <= Q ; i++)
    {
    	L1 = La*L1 ;
        if(L1 >= Lm)  L1 %= Lm;
        L1 += Lc;
        if(L1 >= Lm )  L1 %= Lm;
 
		D1 =Da*D1 ;
        if(D1 >= Dm)  D1 %= Dm;
        D1 += Dc;
        if(D1 >= Dm)  D1 %= Dm;
	
		L = L1 + 1;
		R = (L + K - 1 + D1) < N ? (L + K - 1 + D1) : N;
 
		if(R-L+1 == K)
            ans = A[min_ind[R]];
        else
        {
            int temp = L + K -1;
            ans = A[min_ind[R]] < A[min_ind[temp]] ? A[min_ind[R]] : A[min_ind[temp]] ;
        }
 
		sum += ans;
				prod =prod*ans;
        if(prod >= MODULO)
            prod = prod % MODULO;
	}
 
	printf("%lld %d\n",sum,prod);
    return 0;
}    

