#include<bits/stdc++.h>
#include<deque>
using namespace std;
#define MAX 10000008
#define MAX2 8
unsigned long long int A[MAX],st[MAX];
int main() 
{
    unsigned long long int n,k,q,i,j;
    scanf("%llu %llu %llu",&n,&k,&q);
    unsigned long long int a, b, c, d, e, f, r, s, t, m,L1, La, Lc, Lm, D1, Da, Dc,Dm;
    scanf("%llu %llu %llu %llu %llu %llu %llu %llu %llu %llu %llu",&a,&b,&c,&d,&e,&f,&r,&s,&t,&m,&A[0]);
    scanf("%llu %llu %llu %llu %llu %llu %llu %llu",&L1,&La,&Lc,&Lm,&D1,&Da,&Dc,&Dm);
    c=c%m;
    f=f%m;
    unsigned long long int p=t;
    for(i=1;i<n;i++)
    {
        t=t*p;
        if(t>=s)
        {
            t=t%s;
        }
        if(t<=r)
        {
            A[i]=(((((a*A[i-1]))*((A[i-1])))+ ((b*A[i-1]))) + c);
        }
        else
        {
            A[i]=(((((d*A[i-1]))*((A[i-1])))+ ((e*A[i-1]))) +f);
        }
        if(A[i]>=m)
        {
            A[i]=A[i]%m;
        }
    }
    deque<long long int>Qi(k);
    for (i=0;i<k;i++)
    {
        while ( (!Qi.empty()) && A[i] <= A[Qi.back()])
            Qi.pop_back(); 
        Qi.push_back(i);
    }
    j=0;
 	for (;i<n;i++)
    {
        st[j]=Qi.front();
        while ( (!Qi.empty()) && Qi.front() <= i-k)
            Qi.pop_front();  
        while ( (!Qi.empty()) && A[i] <=A[Qi.back()])
            Qi.pop_back();
        Qi.push_back(i);
        j++;
    }
    st[j]=Qi.front();
    unsigned long long int R,L;
    unsigned long long int sum=0,prod=1;
    La=La%Lm;
    Da=Da%Dm;
    Lc=Lc%Lm;
    Dc=Dc%Dm;
    for(i=1;i<=q;i++)
    {
        L1 = (((La * L1)) + Lc);
        if(L1>=Lm)
            L1=L1%Lm;
	    D1 = (((Da * D1)) + Dc);
	    if(D1>=Dm)
	        D1=D1%Dm;
	    L = L1 + 1;
	    R = min(L + k - 1 + D1, n);
	    unsigned long long int k2,temp;
	    L--;
	    R--;
	    //cin>>L>>R;
	    temp=A[st[L]];
	    if(A[st[R+1-k]]<temp)
	    	temp=A[st[R+1-k]];
	    //cout<<temp;
	    sum=sum+temp;
	    prod=prod*temp;
	    if(prod>=1000000007)
	    {
	        prod=prod%1000000007;
	    }
    }
    prod=prod%1000000007;
    printf("%llu %llu\n",sum,prod);
	return 0;
}   