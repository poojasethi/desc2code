#include<bits/stdc++.h>
using namespace std;
#define MOD 1000000007
int DP[24][10000000];
int Calc(unsigned long long i, unsigned long long j) {
	int k=31-__builtin_clz(j-i+1);
	if(DP[k][i]<=DP[k][j-(1<<k)+1])
		return DP[k][i];
	else
		return DP[k][j-(1<<k)+1];
}

main() {
	unsigned long long p,sum=0,pro=1,i,j,R,N,K,L1,D1,m;
	int Q,La,Lc,Lm,Da,Dc,Dm,a,b,c,d,e,f,r,s,t;
	scanf("%llu %llu %d",&N,&K,&Q);
	scanf("%d %d %d %d %d %d %d %d %d %llu %d",&a,&b,&c,&d,&e,&f,&r,&s,&t,&m,&DP[0][0]);
	scanf("%llu %d %d %d %llu %d %d %d",&L1,&La,&Lc,&Lm,&D1,&Da,&Dc,&Dm);
	p=t;
	for(i=1;i<N;++i) {
		p=(p*t)%s;
		if(p<=r)
			DP[0][i]=(((((a*DP[0][i-1])%m)*DP[0][i-1])%m)+((b*DP[0][i-1])%m)+c%m)%m;
		else
			DP[0][i]=(((((d*DP[0][i-1])%m)*DP[0][i-1])%m)+((e*DP[0][i-1])%m)+f%m)%m;
	}
	for(j=1;(1<<j)<=N;++j)
		for(i=0;i+(1<<j)-1<N;++i)
			DP[j][i]= (DP[j-1][i]<=DP[j-1][i+(1<<(j-1))]) ? DP[j-1][i] : DP[j-1][i+(1<<(j-1))];
	for(i=0;i<Q;++i) {
		L1=((La*L1)%Lm+Lc)%Lm;
		D1=((Da*D1)%Dm+Dc)%Dm;
		R=min(L1+K+D1,N);
		p=Calc(L1,R-1);
		sum+=p;
		pro=(pro*p)%MOD;
	}
	printf("%llu %llu\n",sum,pro);
}
