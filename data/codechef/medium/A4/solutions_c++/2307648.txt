// Name:- Kunal Sheth
 
// Problem:- The Rise and Fall of Power
 
// Link:- http://www.codechef.com/problems/MARCHA4
 
// Site:- CodeChef
 
 
 
//header files
 
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
#include<cstring>
using namespace std;
 
//end of header files
 
 
//definitions
 
#define MOD 1000000007
#define llu long long unsigned
#define lld long long
#define ld long
#define BSIZE 20
 
//end of definitions
 
 
//fast input
 
int scan_d()    {int ip=getchar_unlocked(),ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked());for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=(ret<<3)+(ret<<1)+ip-'0';return ret;}
long scan_ld()    {long ip=getc(stdin),ret=0;for(;ip<'0'||ip>'9';ip=getc(stdin));for(;ip>='0'&&ip<='9';ip=getc(stdin))ret=ret*10+ip-'0';return ret;}
long long scan_lld()    {long long ip=getc(stdin),ret=0;for(;ip<'0'||ip>'9';ip=getc(stdin));for(;ip>='0'&&ip<='9';ip=getc(stdin))ret=ret*10+ip-'0';return ret;}
long long unsigned scan_llu()    {long long unsigned ip=getc(stdin),ret=0;for(;ip<'0'||ip>'9';ip=getc(stdin));for(;ip>='0'&&ip<='9';ip=getc(stdin))ret=ret*10+ip-'0';return ret;}
 
//end of fast input
 
 
//extra functions
 
int first(int n,int k)
{
    long double nlogn=n*log10l(n);
    long double first=pow(10,nlogn-floor(nlogn)+k-1);
    return (int)(first);
}
 
long long e_b_sq(int bs,int po,int mod)
{
    long long y=bs%mod,x=1;
    while(po>0)
    {
        if(po&1)
        {
            long long temp=y;
            for(int i=1;i<x;i++)
                temp+=y;
            x=temp%mod;
        }
        long long temp=y;
        for(int i=1;i<y;i++)
            temp+=y;
        y=temp%mod;
        po>>=1;
    }
    return x;
}
 
//end of extra fnctions
 
 
//main
 
int p[]={1,10,100,1000,10000,100000,1000000,10000000,100000000,1000000000};
char ch[][10]={{'\0'},{'0','\0'},{'0','0','\0'},{'0','0','0','\0'},{'0','0','0','0','\0'},{'0','0','0','0','0','\0'},{'0','0','0','0','0','0','\0'},{'0','0','0','0','0','0','0','\0'},{'0','0','0','0','0','0','0','0','\0'}};
 
int main()
{
    int t;
    t=scan_d();
    while(t--)
    {
        int n=scan_d(),k=scan_d();
        long long l=e_b_sq(n,n,p[k]),temp=l,len=0;
        do
        {
            len++;
            temp/=10;
        }while(temp);
        printf("%d %s%lld\n",first(n,k),ch[k-len],l);
    }
    return 0;
}