#include <stdio.h>
#include <math.h>

void findFirstK(long long int fn,int fk){
long long firstK;
long double fx,fy;
fx = fn*log10l(fn);
fy = powl(10,fx-(long long)fx);
long long powerK = 1;
for(int i=0; i<fk-1; i++) powerK *= 10;
firstK = fy*powerK;
printf("%lld ",firstK);
return;
}

long long powerMod(long long a, long long d, long long n){
// a ^ d mod n
long long result = 1;
while(d > 0){
if(d & 1)
result = result * a % n;
a = (a * a) % n;
d >>=1;
}
return result;
}

void findLastK(long long ln, int lk){
long long powerK = 1;
for (int i=0; i<lk; i++) powerK *= 10;
long long res = powerMod(ln, ln, powerK);
for (powerK/=10; powerK>1 && powerK>=res; powerK/=10) {
printf("0");
}
printf("%lld\n", res);
return;
}

int main (){
int t,k;
long long int n;
scanf("%d",&t);
while(t--){
scanf("%lld %d",&n,&k);
findFirstK(n,k);
findLastK(n,k);
}
return 0;
}