#include <iostream>
#include <cmath>

using namespace std;

long long calcAns(int n, long long digval)
{
	long long temp = n, ans = 1;
	for (; n; n >>= 1)
	{
		if (n & 1)
		{
			ans = ((long long)ans * temp) % digval;
		}
		temp = ((long long)temp * temp) % digval;
	}
	return ans;
}

int main()
{
	int testcaseNum;
	cin >> testcaseNum;
	for (int i = 0; i < testcaseNum; i++)
	{
		int n, k;
		cin >> n >> k;
		long long kDigit = (long long)pow(10,k);
		long long ans = calcAns(n, kDigit);

		long long totalDigits = n * log10l(n*1.0) + 1;
		int firstK;
		if (totalDigits == k)
		{
			firstK = int(powl(10, n * log10l(n*1.0) - totalDigits + k) + 0.5);
		}
		else
			firstK = int(powl(10, n * log10l(n*1.0) - totalDigits + k));

		cout << firstK << " ";
		kDigit /= 10;
		while (ans < kDigit && kDigit > 1)
		{
			cout << 0;
			kDigit /= 10;
		}
		cout << ans << endl;
	}
}