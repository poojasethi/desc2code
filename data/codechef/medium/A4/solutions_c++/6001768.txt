#include<stdio.h>
#include<math.h>
int tenpow(int n)
{
    int ans = 1;
    int base = 10;
    while(n)
    {
        if(n%2)ans = ans*base;
        base = base*base;
        n/=2;
    }
    return ans;
}
long long int powk(int basee, int exp, int mod)
{
    long long int ans = 1;
    long long int base = basee % mod;
    while(exp)
    {
        if(exp%2==1)ans = (ans*base)%mod;
        base = (base* base)%mod;
        exp/=2;
    }
    return ans;
}
int front(int n, int k)
{
    //find 10^x = n^n
    long double y = n*log10l(n);
    long double z = (pow(10,y-floor(y)+k-1));
    return (int)(z);
}
int main()
{
    int n, t,k;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&n,&k);
        int p = tenpow(k);
        long long int trail = powk(n,n,p);
        int fr = front(n,k);
        printf("%d ",fr);
        int irritated = 1;
        for (int i=1;i<=k;++i) irritated*=10;
        for (irritated=irritated/10;irritated>1 && trail<irritated;irritated=irritated/10)printf("0");
        printf("%lld\n",trail);
    }
    return 0;
}
