#include <cstdio>
#include <cstring>

const int MAXLEN=52;

char a[MAXLEN];
char b[MAXLEN];
char r[MAXLEN];

int N;

bool _solve(int k)
{
    for(;k < N; k++)
    {
        if (b[k] == a[k-1])
            b[k+1] = b[k-1];
        else
            b[k+1] = !b[k-1];
    }
    return (b[k] == b[N+1] && (a[N-1]^b[k]) == (b[N-1]^b[1]));
}

int solve()
{
    int cnt = 0;
    for(int i=0; i<2; i++)
        for(int j=0; j<2; j++)
        {
            memset(b, '\0', MAXLEN);
            b[0] = b[N+1] = i;
            b[1] = (i ^ j)? !a[0] : a[0];
            b[2] = j;

            if (_solve(2))
            {
                cnt += 1;
                memcpy(r, b, MAXLEN);
            }
            if (cnt > 1)
                goto _return;
        }

_return:
    return cnt;
}

int main()
{
    int cases, c;
    scanf("%d", &cases);
    while(cases-- > 0)
    {
        scanf("%s", a);
        N = strlen(a);
        for(int i=0; i<N; i++)
            a[i] -= '0';

        if ((c = solve()) > 1)
            printf("Multiple solutions\n");
        else if (c == 1)
        {
            for(int i=1; i<=N; i++)
                r[i] += '0';
            r[N+1] = '\0';
            printf("%s\n", r+1);
        }
        else
        {
            printf("No solution\n");
        }
    }
    return 0;
}
