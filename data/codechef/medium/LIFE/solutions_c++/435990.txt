#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>
#include<string>
#include<map>


#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
#define PB(x) push_back(x)
#define MP(x) make_pair(x)
#define F first
#define S second
#define opp(x) ((x=='1')?'0':'1')
typedef long long LL;
using namespace std;

string ans;
int cnt;

int check(string s,string t,int i)
{
    if(i<2)
        return 1;
    char temp=t[i-1];
    if((t[i]=='1' || t[i-2]=='1') && t[i]!=t[i-2])
            temp=opp(t[i-1]);
    if(temp!=s[i-1])
        return 0;
    else
        return 1;
}

int check2(string s,string t)
{
    int n=s.length();
    string temp;
    for(int j=0;j<n;j++){
        if((t[(j-1+n)%n]=='1' || t[(j+1+n)%n]=='1') && t[(j+1+n)%n]!=t[(j-1+n)%n]){
            temp+=opp(t[j]);
        }
        else
            temp+=t[j];
        if(temp[j]!=s[j])
            return 0;
    }
    return 1;
}

void solve(string s,string t,int i)
{
    int n=s.length();
    if(i==n){
        if(check2(s,t)){
            ans=t;
            cnt++;
        }
        return;
    }
    string temp;
    temp=t+'0';
    if(check(s,temp,i)){
        solve(s,temp,i+1);
        if(cnt>1)
            return;
    }
    temp=t+'1';
    if(check(s,temp,i)){
        solve(s,temp,i+1);
        if(cnt>1)
            return;
    }
}

int main()
{
    //freopen("input.txt","r",stdin);
    int t;
    cin>>t;
    while(t--){
        cnt=0;
        string s,t;
        cin>>s;
        solve(s,t,0);
        if(cnt>1)
            cout<<"Multiple solutions\n";
        else if(cnt<1)
            cout<<"No solution\n";
        else
            cout<<ans<<endl;
    }
}
