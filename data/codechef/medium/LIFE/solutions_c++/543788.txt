//problema A
#include <algorithm>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <functional>
#include <numeric>
#include <utility>
 
#include <deque>
#include <stack>
#include <bitset>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <vector>
#include <queue>
#include <list>
 
#include <sstream>
#include <iostream>
#include <iomanip>
 
using namespace std;
 
typedef long long int64;
 
#define forn(i, n) for(int64 i = 0; i < (int)(n); i++)
#define fore(i, a, n) for(int64 i = a; i < (int)(n); i++)
#define pb push_back
#define mp make_pair
#define fs first
#define sc second
#define sz(a) (a).size()
#define all(a) a.begin(), a.end()
#define VI vector<int>
#define PII vector<pair<int,int> >
#define iss istringstream //>>
#define MAX 105
#define MOD 1000000007
const long double EPS = 1E-9;
const int INF = (int)1E9;
const int64 INF64 = (int64)1E18;
const long double PI = 2 * acos(.0);

string cad;
map< string , char > zeros;
map< string , char > ones;
vector< string > precads;
string solve(){
	precads.clear();
	if(cad[0] == '0'){
		precads.pb("101");
		precads.pb("000");
		precads.pb("011");
		precads.pb("110");
	}else{
		precads.pb("001");
		precads.pb("100");
		precads.pb("010");
		precads.pb("111");
	}

	int len = sz(cad);
	fore(i, 1, len){
		forn(j, 4){
			int pos = sz(precads[j]);
			string aux = precads[j].substr(pos - 2);
			char nele = (cad[i] == '0')? zeros[aux] : ones[aux];
			precads[j] += nele;
		}
	}
	int cont = 0;
	string resp;
	forn(j, 4){
		if(precads[j][0] == precads[j][len] && precads[j][1] == precads[j][len + 1]){
			if(cont == 1) return "Multiple solutions";
			cont ++;
			resp = precads[j].substr(1, len );
		}
	}
	if(cont == 0) return "No solution";
	return resp;
	
}
int main(){
	int t;
	zeros["10"] = '1';
	zeros["00"] = '0';
	zeros["01"] = '1';
	zeros["11"] = '0';
	ones["10"] = '0';
	ones["00"] = '1';
	ones["01"] = '0';
	ones["11"] = '1';
	cin >> t;
	while(t--){
		cin >> cad;
		cout << solve() << endl;
	}
	return 0;
}

