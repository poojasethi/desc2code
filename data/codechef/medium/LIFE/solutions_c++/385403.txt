#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>

using namespace std;

#define f(i, a, b) for(int i = a; i < b; i++)
#define rep(i, n) f(i, 0, n)

typedef long long ll;

int n;
char cur[64];
int prev[64];

ll tomask() {
    ll res = 0;
    rep(i, n) if(prev[i]) res |= (1ll << i);
    return res;
}

void print(ll mask) {
    rep(i, n) printf("%d", (mask >> i) & 1);
    putchar('\n');
}

int main(){

    int T; cin >> T; while(T--) {

        scanf("%s", cur);
        n = strlen(cur);
        rep(i, n) cur[i] -= '0';

        ll res = -1;
        int ct = 0;

        rep(x1, 2) rep(x2, 2) {

            prev[0] = x1;
            prev[1] = x2;
            int ok = 1;

            f(i, 1, n - 1) {
                if(prev[i] != cur[i])
                    if(prev[i - 1]) prev[i + 1] = 0;
                    else prev[i + 1] = 1;
                else
                    if(prev[i - 1]) prev[i + 1] = 1;
                    else prev[i + 1] = 0;
            }

            for(int i = 0; i < n; i++) {
                int pi = (i - 1 + n) % n;
                int ni = (i + 1) % n;
                if(prev[i] != cur[i])
                    if(prev[pi]) {
                        if(prev[ni] != 0) ok = 0;
                    }
                    else {
                        if(prev[ni] != 1) ok = 0;
                    }
                else
                    if(prev[pi]) {
                        if(prev[ni] != 1) ok = 0;
                    }
                    else {
                        if(prev[ni] != 0) ok = 0;
                    }
            }


            if(ok) {
                res = tomask();
                ct++;
            }
        }

        if(ct > 1) printf("Multiple solutions\n");
        else if(ct == 0) printf("No solution\n");
        else {
            print(res);
        }

    }
}
