#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <vector>
#include <utility>
#define MAXN 1005
using namespace std;

struct ura{
    int a,b,costo;    
};

bool operator < (const ura a ,const ura b){
    return a.costo>b.costo;    
}

ura aristas[MAXN*MAXN];

int N,M;
vector < pair<int,int> > matriz[MAXN];
struct DisjointSet{
    int sets;
    int* parent;
    int* members;
    
    void init(int n){ // O(v)
        sets = n;
        parent = new int[n];
        members = new int[n];
        for(int i = 0; i < n; i++)
            parent[i] = i, members[i] = 1;
    }
    
    int find(int a){ // O(1)
        if(a == parent[a]) return a;
        return parent[a] = find(parent[a]);
    }
    
    int setsize(int a){ // O(1)
        return members[find(a)];
    }
    
    bool joined(int a, int b){ // O(1)
        return find(a) == find(b);
    }
    
    void join(int a, int b){ // O(1)
        if(joined(a, b)) return;
        members[find(b)] += members[find(a)];
        parent[find(a)] = find(b);
        sets--;
    }
};

int nudus;
int answer[MAXN][MAXN];

void busca(int nodo,int padre,int maxi){
    answer[nudus][nodo]=maxi;
    for(int i=0;i<matriz[nodo].size();i++)
        if(matriz[nodo][i].first!=padre)
            busca(matriz[nodo][i].first,nodo,min(maxi,matriz[nodo][i].second));    
    
}

int main(){
    scanf("%d%d",&N,&M);
    for(int i=1;i<=M;i++)
        scanf("%d%d%d",&aristas[i].a,&aristas[i].b,&aristas[i].costo);
    sort(aristas+1,aristas+1+M);
    DisjointSet grafo;
    grafo.init(N);
    for(int i=1;i<=M;i++){
        if(!grafo.joined(aristas[i].a,aristas[i].b)){
            grafo.join(aristas[i].a,aristas[i].b);
            matriz[aristas[i].a].push_back(make_pair(aristas[i].b,aristas[i].costo));
            matriz[aristas[i].b].push_back(make_pair(aristas[i].a,aristas[i].costo));
            
        }
    }
    for(nudus=0;nudus<N;nudus++){
        busca(nudus,-1,1000000000);
        answer[nudus][nudus]=0;
    }
    for(int i=0;i<N;i++){
        for(int j=0;j<N;j++)
            printf("%d ",answer[i][j]);
        printf("\n");
    }
    return 0;
}
