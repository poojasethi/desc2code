#include <cstdio>
#include <cmath>

using namespace std;

const double EPSILON = 1e-10;
double OUTPUT[101];
unsigned char TYPE[101];
unsigned int INPUT[101][2];

double calculate(unsigned int n, double p)
{
    for (int i = 1; i <=n; i++)
    {
        if (TYPE[i] == 0)
            OUTPUT[i] = p;
        else if (TYPE[i] == 1)
        {
            OUTPUT[i] =
                1.0 - (1.0 - OUTPUT[INPUT[i][0]]) * (1.0 - OUTPUT[INPUT[i][1]]);
        }
        else
            OUTPUT[i] = OUTPUT[INPUT[i][0]] * OUTPUT[INPUT[i][1]];
    }
    return OUTPUT[n];
}

void solve(unsigned int n)
{
    double l = 0.0;
    double r = 1.0;
    double p = (l + r) / 2;
    double o;
    for(; fabs((o=calculate(n, p)) - 0.5) >= EPSILON; p = (l + r) / 2)
    {
        if (o > 0.5)
            r = p;
        else if (o < 0.5)
            l = p;
    }
    printf("%.5f\n", p);
}

int main()
{
    unsigned int m; // test cases
    unsigned int n; // inputs
    scanf("%u", &m);
    for (; m>0; m--)
    {
        scanf("%u", &n);
        for (unsigned int i = 1; i <= n; i++)
        {
            scanf(" %hhu", &TYPE[i]);
            if (TYPE[i] != 0) {
                scanf("%u%u", &INPUT[i][0], &INPUT[i][1]);
            }
        }
        solve(n);
    }
    return 0;
}