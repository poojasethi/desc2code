#include<cstdio>
#include<cmath>
    
using namespace std;
    
const double EPSILON = 1e-10;
double OUTPUT[101];
int INPUT[101][2],TYPE[101];
    
bool calculate(unsigned int n, double p)
{
  for(int i=1;i<=n;i++)
  {
    if(TYPE[i]==0)
      OUTPUT[i] = p;
    else if(TYPE[i] == 1)
	{
	  OUTPUT[i] =1.0 - (1.0 - OUTPUT[INPUT[i][0]]) * (1.0 - OUTPUT[INPUT[i][1]]);
	}
    else
      OUTPUT[i] = OUTPUT[INPUT[i][0]] * OUTPUT[INPUT[i][1]];
  }
  if(OUTPUT[n]>0.5)
    return 1;
  else
    return 0;
}
    
void solve(unsigned int n)
{
  double l = 0.0;
  double r = 1.0;
  double p =(l + r) / 2;
  bool o;
  while(fabs(l-r)>=EPSILON)
  {
    p=(l+r)/2;
    //printf("\n%f %f\n",l,r);
    o=calculate(n,p);
    if (o)
      r = p;
    else 
      l = p;
  }
  printf("%.5f\n", p);
}
    
int main()
{
  int t; 
  int n; 
  scanf("%d",&t);
  while(t)
  {
    scanf("%d",&n);
    for(int i=1;i<=n; i++)
    {
      scanf(" %d", &TYPE[i]);
      if (TYPE[i] != 0) 
      {
	scanf("%d%d", &INPUT[i][0], &INPUT[i][1]);
      }
    }
    solve(n);
    t--;
  }
  return 0;
}