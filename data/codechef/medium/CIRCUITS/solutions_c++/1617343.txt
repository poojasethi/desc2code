#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <memory.h>
using namespace std;

const double eps = 1e-9;
int t, n;
int a[111][3];
double p[111];
bool used[111];
int ex;

double f(int k, double val) {
    if (a[k][0]==0) return val;
    else if (a[k][0]==1) { //OR
        double l = f(a[k][1], val);
        double r = f(a[k][2], val);
        double ret = l+r-l*r;
        return ret;
    } else { //AND
        double ret = f(a[k][1], val)*f(a[k][2], val);
        return ret;
    }
}

int main()
{
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        memset(used, false, sizeof used);
        for (int i=0; i<n; i++) {
            scanf("%d", &a[i][0]);
            if (a[i][0]) {
                scanf("%d %d", &a[i][1], &a[i][2]);
                a[i][1]--; a[i][2]--;
                used[a[i][1]] = used[a[i][2]] = 1;
            }
        }
        for (int i=0; i<n; i++) {
            if (!used[i]) ex=i;
        }
        double l = 0.0; double r = 1.0;
        while ((r-l)>eps) {
            double m = (l+r)/2;
            double flow = f(ex, m);
            if (abs(flow-0.5)<eps) {
                break;
            } else if (flow>0.5) {
                r = m;
            } else
                l = m;
        }
        printf("%.5lf\n", (l+r)/2);
    }
    return 0;
}
