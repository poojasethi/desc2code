values = []
 
def evalNode(k):
    #print "eval(", k, ")"
    if values[k]>=0:
        return values[k]
    if nodes[k][0]==0:
        print "Input node- should have been set."
    elif nodes[k][0]==2: # AND gate
        val = evalNode(nodes[k][1]-1) * evalNode(nodes[k][2]-1)
    else: # OR gate
        val = 1.0 - (1.0-evalNode(nodes[k][1]-1))*(1.0-evalNode(nodes[k][2]-1))
    values[k] = val
    return val
def evaluate(prob):
    global values
    #print "Evaluate", prob
    values = [-1.0]*len(nodes)
    for i in range(len(nodes)):
        if nodes[i][0]==0:
            values[i] = prob
    return evalNode(len(nodes)-1)
 
ntest = int(raw_input())
 
for test in range(ntest):
    xx = raw_input()
    n = int(raw_input())
    nodes = []
    for i in range(n):
        node = map(int, raw_input().split())
        nodes.append(node)
     
    if nodes[-1][0] ==0:
        print "0.50000"
        continue
     
    prLow = 0.0
    prHigh = 1.0
    eps = 1e-5
    while prHigh-prLow>eps or round(prHigh,5)>round(prLow,5):
        prMid = (prLow+prHigh)/2
        valueMid = evaluate(prMid)
        if valueMid>0.5:
            prHigh = prMid
        else:
            prLow = prMid
     
    print "%.5f" % ((prLow+prHigh)/2)
