#include <bits/stdc++.h>
using namespace std;
const double EPS = 1E-9;
long long int mod =100007;
int main()
{
	//ios_base::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
		int n,m,x,y;
		cin>>n>>m;
		//srand(n);
		int mat[n][n];
		memset(mat,0,sizeof(mat));
		while(m--)
		{
			cin>>x>>y;
			//srand(rand()+x);
			//srand(rand()+y);
			x--;
			y--;
			mat[x][y]=1;
			mat[y][x]=1;
		}
		double a[n][n];
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				a[i][j]=0.0;
			}
		}
		for(int i=0;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				if(mat[i][j])
				{
					if(abs(a[i][j])<EPS)
					{
						if(i<j)
						{
							a[i][j]=(((i+j+2)*(100007))%mod+j+(i*4))%mod;
							a[j][i]=-a[i][j];
						}
					}
				}
			}
		}
		double det=1.0;
		for(int i=0;i<n;i++)
		{
			int row;
			for(int j=i;j<n;j++)
			{
				if(abs(a[j][i])>EPS)
				{
					row=j;
					break;
				}
			}
			if(row!=i)
			{
				for(int j=0;j<n;j++)
				{
					double temp=a[row][j];
					a[row][j]=a[i][j];
					a[i][j]=temp;
				}
			}
			for(int j=i+1;j<n;j++)
			{
				if(abs(a[j][i])>EPS)
				{
					double x=a[j][i]/a[i][i];
				for(int k=i;k<n;k++)
				{
					a[j][k]=(a[j][k]-(x*a[i][k]));
				}
			}
			}
		}
		int flag=1;
		for(int i=0;i<n;i++)
		{
			if(abs(a[i][i])<EPS)
			{
				flag=0;
				cout<<"NO\n";
				break;
			}
			det=det*a[i][i];
		}
			if(flag)
			cout<<"YES\n";
	}
}