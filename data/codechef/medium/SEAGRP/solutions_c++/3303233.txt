    #include <iostream>
    #include <vector>
    #include <cstdio>
    #include <algorithm>
    #include <cstring>
    #include <set>

    using namespace std;
     
    int a[111][111];
    int n, m;
     
    bool graph(int node, int sn[], int vis[])
    {
	    for (int i = 0; i < n; i++) {
		    if ( a[node][i] && (!sn[i]) && (node != i) ) {
  			sn[i] = 1;
			sn[node] = 1;
  		        if ( (vis[i] < 0) || (graph(vis[i], sn, vis)) ) {
    				vis[i] = node;
				vis[node] = i;
    				return true;
    			}
    		    }
    	    }
     
    	    return false;
    }
     
    int main()
    {
    	int ts;
    	cin >> ts;
    	while (ts--) {
    		cin >> n >> m;
    		for (int i = 0; i <= n; i++) {
    			for (int j = 0; j <= n; j++) {
    				a[i][j] = 0;
    			}
    		}

		set<int> s;
		int l = m;
   	 	while (l--) {
    			int k1, k2;
    			cin >> k1 >> k2;
    			k1--;
    			k2--;
    			if (k1 != k2) {
				s.insert(k1);
				s.insert(k2);
    				a[k2][k1] = a[k1][k2] = 1;
   			}
    		}
     		if (s.size() != n) {
			cout << "NO" << endl;
			continue;
		}
    		if ( (n&1) || (m < n/2) ) {
    			cout << "NO" << endl;
    			continue;
    		}
		int vis[111];
    		memset(vis, -1, sizeof(vis));

		int ctr = 0;
    		for (int i = 0; i < n; i++) {
    			int sn[111];
    			memset(sn, 0, sizeof(sn));
    			if (vis[i] < 0) {
				if (graph(i, sn, vis)) ctr++;
			}
    		}
    		
    		if (ctr != (n/2)) {
    			cout << "NO" << endl;
    		} else {
    			cout << "YES" << endl;
    		}
    	}
     
    	return 0;
    } 
