#include<stdio.h>
#include<algorithm>
#include<vector>

using namespace std;

#ifndef ONLINE_JUDGE
#define getchar_unlocked getchar
#define putchar_unlocked putchar
#endif

inline int read_int() {
  register char c = getchar_unlocked();
  while(c<'0' || c>'9') c = getchar_unlocked();
  long long int ret = 0;
  while(c>='0' && c<='9') {
    ret = (ret<<3)+(ret<<1) + c - 48;
    c = getchar_unlocked();
  }
  return ret;
}

vector<int> adj[101];
bool e[101][101];
int n;

using namespace std;
bool solve(bool val[])
{
    bool val2[101];
    int i;
    for(i=1;i<=n;i++)
    {
        if(val[i])
            break;
    }
    if(i==n+1)
        return 1;
    for(int j=1;j<=n;j++)
        val2[j]=val[j];
    val2[i]=0;
    for(int j=i+1;j<=n;j++)
    {
        if(val[j]&&e[i][j])
        {
            val2[j]=0;
            if(solve(val2))return 1;
            val2[j]=1;
        }
    }
    return 0;
}

int main()
{
    int m,e1,e2,t;
    t=read_int();
    while(t--)
    {
        for(int i=0;i<=100;i++)
            for(int j=0;j<=100;j++)
                e[i][j]=0;
        for(int i=0;i<=n;i++)
            adj[i].clear();

        n=read_int();
        m=read_int();
        for(int i=0;i<m;i++)
        {
            e1=read_int();
            e2=read_int();
            if(e1<e2)
            {
                if(e[e1][e2]==0)
                {
                    adj[e1].push_back(e2);
                    e[e1][e2]=1;
                }
            }
            else
            {
                if(e[e2][e1]==0)
                {
                    adj[e2].push_back(e1);
                    e[e2][e1]=1;
                }

            }
        }
        if(n%2==1)
        {
            printf("NO\n");
            continue;
        }

        bool valid[101];

        for(int i=1;i<=n;i++)
            valid[i]=1;


        if(solve(valid))
        {
            printf("YES\n");
        }
        else
        {
            printf("NO\n");
        }
    }
    return 0;
}
