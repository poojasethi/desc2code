    #include <iostream>
    #include<string.h>
    #include <queue>
    #include<cstdio>
    #include<math.h>
    using namespace std;
    int m,n;
    int graph[105][105];
     
    long long p(int x,int n,int mod){
    long long temp,res;
    if(n==0)
    return 1;
    if(n==1)
    return x;
    else{
    temp=p(x,n/2,mod);
    res=(temp*temp)%mod;
    }
    if(n%2==1)
    res=(res*x)%mod;
    return res;
    }
     
    bool me(int u, bool visited[], int pair[])
    { visited[u]=true;
     
    for (int v = 0; v < m; v++)
    {
    if (graph[u][v] && !visited[v] )
    {
    visited[v] = true;
    if (pair[v] < 0 || me(pair[v], visited, pair))
    {
    pair[v] = u;
    pair[u]=v;
     
    return true;
    }
    }
    }
    return false;
    }
     
    int done()
    {
    int pair[m];
     
     
    memset(pair, -1, sizeof(pair));
    int result = 0;
    for (int u = 0; u < m; u++)
    {
     
    if(pair[u]!=-1)
    continue;
    bool visited[m];
    memset(visited, 0, sizeof(visited));
    if (me(u, visited, pair))
    result++;
    }
    return result;
    }
     
     
    int main()
    {
    int t,x,y,i; scanf("%d",&t);
    while(t--){
    scanf("%d%d",&m,&n);
    for(int i=0;i<m;i++)
    for(int j=0;j<m;j++) graph[i][j]=0;
    for(i=0;i<n;i++){
    scanf("%d%d",&x,&y);
    graph[x-1][y-1]=1;
    graph[y-1][x-1]=1;
    }
    if(m%2!=0){
    printf("NO\n");continue;
    }
    else{
     
    if(m==2*done())
    printf("YES\n");
    else
    printf("NO\n");
     
     
    }
    }
    return 0;
    }