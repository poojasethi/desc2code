//
//  main.cpp
//  code
//
//  Created by Vignesh M on 21/11/14.
//

#include <cmath>
#include <climits>
#include <queue>
#include <vector>
#include <map>
#include <cstdlib>
#include <fstream>
#include <iomanip>
#include <iostream>
#include <sstream>
#include <stack>
#include <set>
#include <algorithm>
#include <cstring>
#include <cassert>
#include <cstdio>
#include <string>
using namespace std;
#define bit(x,i) (x&(1<<i))  //select the bit of position i of x
#define lowbit(x) ((x)&((x)^((x)-1))) //get the lowest bit of x
#define msb(x) 64-__builtin_clzl(x)
#define hBit(msb,n) asm("bsrl %1,%0" : "=r"(msb) : "r"(n)) //get the highest bit of x, maybe the fastest
#define max(a,b) (a<b?b:a)
#define IN(i,l,r) (l<i&&i<r) //the next for are for checking bound
#define LINR(i,l,r) (l<=i&&i<=r)
#define LIN(i,l,r) (l<=i&&i<r)
#define INR(i,l,r) (l<i&&i<r)
#define F(i,L,R) for (int i = L; i < R; i++) //next four are for "for loops"
#define FE(i,L,R) for (int i = L; i <= R; i++)
#define FF(i,L,R) for (int i = L; i > R; i--)
#define FFE(i,L,R) for (int i = L; i >= R; i--)
#define getI(a) scanf("%d", &(a)) //next three are handy ways to get ints, it's also force you to use '&' sign
#define getII(a,b) scanf("%d%d", &a, &b)
#define getIII(a,b,c) scanf("%d%d%d", &a, &b, &c)
#define wez(n) int (n); scanf("%d",&(n)) //handy if the input is right after the definition of a variable
#define wec(n) char (n); scanf(" %c",&(n))
#define wez2(n,m) int (n),(m); scanf("%d %d",&(n),&(m))
#define wez3(n,m,k) int (n),(m),(k); scanf("%d %d %d",&(n),&(m),&(k))
#define TESTS wez(testow);while(testow--) //for multilple cases problems
#define clr(a,x) memset(a,x,sizeof(a)) //set elements of array to some value
#define char2Int(c) (c-'0')
#define lastEle(vec) vec[vec.size()-1]
#define SZ(x) ((int)((x).size()))
#define REMAX(a,b) (a)=max((a),(b)) // set a to the maximum of a and b
#define REMIN(a,b) (a)=min((a),(b));
#define FOREACH(i,t) for (typeof(t.begin()) i=t.begin(); i!=t.end(); i++) // traverse an STL data structure
#define ALL(c) (c).begin(),(c).end() //handy for function like "sort()"
#define ll long long //data types used often, but you don't want to type them time by time
//for map, pair
#define mp make_pair
#define fi first
#define se second
// for debug
inline void pr(int n) { printf("%d\n",n); }
#define DBG(vari) cerr<<#vari<<" = "<<(vari)<<endl;
#define printA(a,L,R) FE(i,L,R) cout << a[i] << (i==R?'\n':' ')
#define printV(a) printA(a,0,a.size()-1)
#define getV(a,n) F(i,0,(n)){wez(x);(a).pb(x);}
//for vectors
#define pb push_back
#define PI 3.1415926535897931159979635;
#define inf 100000
#define INF 1000000000
#define LINF 100000000000000000LL
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<ii> vii;
typedef vector<vii> vvii;
// directions
const int fx[4][2] = {{0,1}, {0,-1}, {1,0}, {-1,0}};
const int fxx[8][2] = {{0,1}, {0,-1}, {1,0}, {-1,0}, {1,1}, {1,-1}, {-1,1}, {-1,-1}};
#pragma unused(fx)
#pragma unused(fxx)
template<typename T,typename TT> ostream& operator<<(ostream &s,pair<T,TT> t) {return s<<"("<<t.first<<","<<t.second<<")";}
template<typename T> ostream& operator<<(ostream &s,vector<T> t){F(i,0,SZ(t))s<<t[i]<<((i<SZ(t)-1)?" ":"");return s; }

typedef pair<pair<int,int>,int > iii;

double EPS=1e-6;
double determinant(vector<vector<double> > a){
    int n=a.size();
    double det = 1;
    for (int i = 0; i <n; ++ i) {
        int k = i;
        for (int j = i + 1; j <n; ++ j)
            if (abs (a [j] [i])> abs (a [k] [i]))
                k = j;
        if (abs (a [k] [i]) <EPS) {
            det = 0;
            break;
        }
        swap (a [i], a [k]);
        if (i != k)
            det = -det;
        det *= a [i] [i];
        for (int j = i + 1; j <n; ++ j)
            a [i] [j] /= a [i] [i];
        for (int j = 0; j <n; ++ j)
            if (j != i && abs (a [j] [i])> EPS)
                for (int k = i + 1; k <n; ++ k)
                    a [j] [k] -= a [i] [k] * a [j] [i];
    }
    return det;
}

int main(){
#ifndef ONLINE_JUDGE
    freopen("/Users/vigneshm/Documents/codespace/code/input.txt","r",stdin);
    freopen("/Users/vigneshm/Documents/codespace/code/output.txt","w",stdout);
#endif
    TESTS{
        vector<vector<double> > mat;
        vii edges;
        wez2(n,m);
        mat.assign(n,vector<double>(n));
        F(i,0,m){
            wez2(x,y);
            edges.pb(mp(x-1,y-1));
        }
        int is0=true;
        F(j,0,100){
            F(i,0,edges.size()){
                ii edge=edges[i];
                mat[edge.fi][edge.se]=rand();
                mat[edge.se][edge.fi]=-mat[edge.fi][edge.se];
            }
            double det=determinant(mat);
//            cout<<mat<<"\n"<<det<<"\n";
            if(abs(det)>10*EPS){is0=false;break;}
            
            
        }
        if(is0) cout<<"NO\n";
        else cout<<"YES\n";
    }
}