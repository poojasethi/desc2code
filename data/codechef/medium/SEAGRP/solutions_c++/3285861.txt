#include<bits/stdc++.h>
using namespace std;
int arr[103],adj[103][103];
int fastRead_int() {
register int c = getchar_unlocked();
int x = 0;
int neg = 0;
for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
if(c=='-') {
neg = 1;
c = getchar_unlocked();
}
for(; c>47 && c<58 ; c = getchar_unlocked()) {
x = (x<<1) + (x<<3) + c - 48;
}
if(neg)
x = -x;
return x;
}
bool reduce(int n,int count){
if(count==0)
return true;
int j;
for(int i=0;i<n;i++){
if(arr[i]==0){
for(j=i+1;j<n;j++){
// printf("Here I Am in second loop");
if(adj[i][j]!=0 && arr[j]!=1){
arr[j]=1;
arr[i]=1;
// printf("Here I Am entered in if");
if(reduce(n,count-2))
return true;
else{
arr[i]=0;
arr[j]=0;
}
}
}
if(j==n){
// printf("Here I Am and Edges over so early!!");
return false;
}
}
}
// printf("Here I Am Unable to find solution!!");
return false;
}
int main(){
int t;
t = fastRead_int();
while(t--){
int n,m;
n = fastRead_int();
m = fastRead_int();
for(int i=0;i<=n;i++)
arr[i]=0;
for(int i=0;i<=n;i++)
for(int j=0;j<=n;j++)
adj[i][j]=0;
for(int i=0;i<m;i++){
int temp1,temp2;
temp1 = fastRead_int();
temp2 = fastRead_int();
adj[temp1-1][temp2-1]=1;
adj[temp2-1][temp1-1]=1;
}
// if(n%2!=0){
// printf("Here I Am in Odd number of nodes");
// cout<<"NO\n";
// }
// else{
if(reduce(n,n))
cout<<"YES\n";
else
cout<<"NO\n";
// }
}
}