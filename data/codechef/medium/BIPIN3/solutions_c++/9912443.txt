#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <string>
#include <cctype>
#include <stack>
#include <queue>
#include <list>
#include <vector>
#include <map>
#include <sstream>
#include <utility>
#include <set>
#include <math.h>
typedef std::pair<int, int> ii;
typedef std::vector<ii> vii; 
typedef std::vector<int> vi; 
typedef std::vector<vi> vvi; //adj list
typedef std::vector<vii> vvii; //Adj list with weight
#define all(c) c.begin(), c.end()
#define Trvii(c, it) for(vii::iterator it = (c).begin(); it!=(c).end(); it++)
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++)
using namespace std;


/*    long long int fast_exp(int base, int exp){
    long long int m=1000000007;
    if(exp==1)
        return base%m;
    else if(exp==0)
        return 1;
    else{
        if(exp%2==0){
            long long int base1 = pow(fast_exp(base, exp/2), 2);
            if(base1>=m)
                return base1%m;
            else
                return base1;
        }
        else{
            long long int ans = (base * pow(fast_exp(base, (exp-1)/2), 2));
            if(ans>=m)
                return ans%m;
            else
                return ans;
        }
    }
}*/

  long long int fast_exp(long long int base, long long int exp) {
    long long int res=1;
    long long int m = 1000000007;
    while(exp>0) {
       if(exp%2==1) res=(res*base)%m;
       base=(base*base)%m;
       exp/=2;
    }
    return res%m;
}


int main()
{
    int T;
    long long N, K;
    long long int m=1000000007, ans1;

    cin >> T;
    while(T--){
        cin >> N >> K;
        if(K==1){
            if(N==1)
                ans1 = 1;
            else
                ans1 = 0;
        }
        cout << (K%m * fast_exp(K-1, N-1))%m << "\n";
    }
    
}
