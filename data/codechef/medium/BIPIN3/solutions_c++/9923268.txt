#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include <cctype>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
#include <functional>
using namespace std; 
#define DEBUG(x) cout << '>' << #x << ':' << x << endl;
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define MOD 1000000007
inline bool EQ(double a, double b) { return fabs(a-b) < 1e-9; }
const int INF = 1<<29;
typedef long long ll;
inline int two(int n) { return 1 << n; }
inline int test(int n, int b) { return (n>>b)&1; }
inline void set_bit(int & n, int b) { n |= two(b); }
inline void unset_bit(int & n, int b) { n &= ~two(b); }
inline int last_bit(int n) { return n & (-n); }
inline int ones(int n) { int res = 0; while(n && ++res) n-=n&(-n); return res; }
template<class T> void chmax(T & a, const T & b) { a = max(a, b); }
template<class T> void chmin(T & a, const T & b) { a = min(a, b); }

/////////////////////////////////////////////////////////////////////

long long POW(long long A, long long B) {
	if(B == 0) return 1;
	if(B == 1) return A;

	long long C = POW(A, B >> 1);
	C *= C;
	if(C >= MOD) 
		C %= MOD;
	if(B & 1) {
		C *= A;
		if(C >= MOD)
			C %= MOD;
	}

	return C;
}

int main()
{
	int T;
	scanf("%d", &T);

	while(T--) {
		long long N;
		long long K;
		scanf("%lld%lld", &N, &K);

		if(N == 1) {
			printf("%lld\n", K);
			continue;
		}

		K--;
		if(K == 0) {
			if(N == 1) {
				printf("1\n");
			} else {
				printf("0\n");
			}
		} else {
			N--;
			long long Ans = (K + 1);
			long long Childerns = K;
			while(true) {
				if(N < Childerns) break;
				Ans *= POW(K, Childerns);
				if(Ans >= MOD)
					Ans %= MOD;
				N -= Childerns;
				Childerns *= K;
			}
			Ans *= POW(K, N);
			if(Ans >= MOD)
				Ans %= MOD;
			printf("%lld\n", Ans);
		}
	}
    return 0;
}  

