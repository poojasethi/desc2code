#include<iostream>
#include<cstdio>
#include<vector>
#define ull unsigned long long

using namespace std;

/*unsigned long long gcd(unsigned long long u, unsigned long long v)
{
    // simple cases (termination)
    if (u == v)
        return u;

    if (u == 0)
        return v;

    if (v == 0)
        return u;

    // look for factors of 2
    if (~u & 1) // u is even
    {
        if (v & 1) // v is odd
            return gcd(u >> 1, v);
        else // both u and v are even
            return gcd(u >> 1, v >> 1) << 1;
    }

    if (~v & 1) // u is odd, v is even
        return gcd(u, v >> 1);

    // reduce larger argument
    if (u > v)
        return gcd((u - v) >> 1, v);

    return gcd((v - u) >> 1, u);
}*/
ull gcd(ull a,ull b)
{
	ull c;
	while(b>0) c=a%b, a=b, b=c;
	return a;
}


//vector<ull> nck[1000001];

ull nck(ull n,ull k)
{
	if(n<k) return 0;
	if(k>n-k) k=n-k;
	ull p=1;
	for(ull i=1;i<=k;i++)
	{
		ull d=gcd(p,i);
		p/=d;
		p*=(n-i+1)/(i/d);
	}
	return p;
}



int main()
{
    int t;
    cin >> t;
    while(t--)
    {
        ull n, k;
        //cin >> n >> k;
        scanf("%llu%llu", &n, &k);//
        //if(n == 0 || n < k)printf("0\n");//cout << "0" << endl;
        /*else
        {

            ull x = (n - k);

            if(x > k)
            {
                printf("%llu\n", nck(n, k));//nck(n, k) << endl;
            }
            else
            printf("%llu\n", nck(n, x));//cout << nck(n, x) << endl;;
        }*/
        printf("%llu\n", nck(n, k));

    }

}
