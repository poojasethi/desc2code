import sys, math, operator
from fractions import Fraction


def nCk(n, k):
    if n < 0: raise ValueError("Invalid value for n: %s" % n)
    if k < 0 or k > n: return 0
    if k in (0, n): return 1
    if k in (1, n-1): return n
    if k > n / 2 + 1:
        k = n - k

    low_min = 1
    low_max = min(n, k)
    high_min = max(1, n - k + 1)
    high_max = n

    #return reduce(operator.mul, range(high_min, high_max + 1), 1) / reduce(operator.mul, range(low_min, low_max + 1), 1)
    val = Fraction(1)
    bad = 0
    while bad != 3:
        if high_min <= high_max:
            val *= high_min
            high_min += 1
        else:
            bad |= 1

        for i in range(10):
            if low_min <= low_max:
                val /= low_min
                low_min += 1
            else:
                bad |= 2
                break
    return int(val)


n = int(sys.stdin.readline().strip())
for _ in range(n):
    n, k = map(int, sys.stdin.readline().strip().split())

    print nCk(n, k)
