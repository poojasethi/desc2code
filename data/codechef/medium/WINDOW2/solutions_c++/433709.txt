#include<iostream>
#include<cmath>
#include<algorithm>
#include<limits>
#include<vector>
#include<bitset>
#include<cstdlib>
#include<cstdio>
#include<cstring>

using namespace std;

#define S scanf
#define P printf
#define REP(i,n) for(int i=0;i<n;i++)
#define FOR(i,FROM,n) for(int i=FROM;i<n;i++)
#define FORR(i,n) for(int i=n;i>=0;i--)
#define ll long long int
#define llu long long unsigned int


char strn[]="1000000080798150871";
llu mod;

int t,n,m,k,l;

int ni()
{
    int temp;
    scanf("%d",&temp);
    return temp;
}

ll nl()
{
    ll temp;
    scanf("%lld",&temp);
    return temp;
}

float nf()
{
    float temp;
    scanf("%f",&temp);
    return temp;
}
/*
bool myfunction( const node& i, const node& j )    //use it to sort vectors
{
    if( i.x < j.x ) return false;
    if( j.x < i.x ) return true;
    return j.c < i.c;
}
*/



int a[1000][3],b[3][1000],bi[3];
char str[10];
ll co[1001][1001];

long long unsigned int gcd(long long unsigned int r0,long long unsigned int r1)
{
    long long unsigned int temp;

    if(r0<r1)
              {
                   temp = r0;
                   r0 = r1;
                   r1=temp;
              }

    //r0 is the larger number and r1 is the smaller number
    long long unsigned int remainder;

    do{
        remainder = r0%r1;

        r0=r1;
        r1=remainder;
        }while(remainder!=0);

    return r0;
}

llu combi(int x,int y)
{
    return co[x][y];
}

llu take()
{
    llu x=0;
    for(int i=0;strn[i]!='\0';i++)
    {
        x=x*10+(strn[i]-'0');
    }
    return x;
}

void print(llu x)
{
    char temp[100];
    int cnt=0;
    llu y=x;
    while(y)
    {
        cnt++;
        y/=10;
    }
    if(x==0)
    {
        temp[0]='0';
        cnt++;
    }

    temp[cnt]='\0';
    while(x)
    {
        char c=(x%10)+'0';
        temp[cnt-1]=c;
        cnt--;
        x/=10;
    }

    printf("%s\n",temp);
}

void find()
{
    REP(i,1001)
    {
        co[i][i]=1;
        co[i][0]=1;
    }
    FOR(i,2,1001)
    {
        FOR(j,1,i)
        co[i][j]=(co[i-1][j]+co[i-1][j-1])%mod;
    }
}

int main()
{
   //freopen("input.txt","r",stdin);
   //freopen("output.txt","w",stdout);
   mod=take();
   find();
   //cout<<"hehe"<<endl;
   //return 0;
   scanf("%d",&t);
   for(int prob=0;prob<t;prob++)
   {
       n=ni();
       m=ni();
       l=ni();
       k=ni();

       REP(i,n)
       {
           scanf("%s",str);
           //cout<<str<<endl;
           REP(j,m)
           a[i][j]=(str[j]-'0');
       }
       /*
       REP(i,n)
       {
           REP(j,m)
           cout<<a[i][j];
           cout<<endl;
       }
       */

       REP(i,m)
       {
           bi[i]=0;
           REP(j,n)
           if(a[j][i]==1)
           b[i][bi[i]++]=j;
       }
       //REP(i,m)
       //cout<<bi[i]<<" ";
       //cout<<endl;
       llu ans=0;
       if(k>m || l>n)
       {
           ans=0;
       }
       else if(k==1)
       {
           REP(j,m)
           {
               if(bi[j]>=l)
               ans+=combi(bi[j],l);
               ans%=mod;
           }
       }
       else if(k==3)
       {
           int c[1000],cnt=0;
           REP(i,n)
           c[i]=0;
           REP(i,m)
           {
               REP(j,bi[i])
               c[b[i][j]]++;
           }
           REP(i,n)
           if(c[i]==3)
           cnt++;
           if(cnt>=l)
           ans=combi(cnt,l)%mod;
       }
       else
       {
           int c[1000],cnt=0;
           REP(i,n)
           c[i]=0;
           int ind=0;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           ind=1;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           REP(i,n)
           {
               if(c[i]==2)
               cnt++;
           }
           if(cnt>=l)
           ans+=combi(cnt,l);


           if(m==3) {
           cnt=0;
           REP(i,n)
           c[i]=0;
           ind=0;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           ind=2;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           REP(i,n)
           if(c[i]==2)
           cnt++;
           if(cnt>=l)
           ans+=combi(cnt,l);
           ans%=mod;


           cnt=0;
           REP(i,n)
           c[i]=0;
           ind=1;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           ind=2;
           REP(j,bi[ind])
           c[b[ind][j]]++;
           REP(i,n)
           if(c[i]==2)
           cnt++;
           if(cnt>=l)
           ans+=combi(cnt,l);
           ans%=mod;
           }
       }
       cout<<ans<<endl;

       //print(ans);
   }





   //system("pause");
   return 0;

}
