#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
#define ll long long

bool is[4];
char map[2002][4];
ll num[2002];
ll C[1001][1001];
int n , m , l , k;
long long ans;
long long mod = 1000000080798150871LL;

ll gcd(ll a , ll b)
{
    if(b == 0) return a;
    return gcd(b , a%b);
}

void init()
{
    memset(C , 0 , sizeof(C));
    C[0][0] = 1;
    for(int i = 1;i <= 1000; ++ i)
        for(int j = 0;j <= 1000; ++ j)
        {
            C[i][j] = C[i-1][j] + C[i-1][j-1];
            C[i][j] %= mod;
        }
}

ll slove()
{
    int i , j;
    ll M = 0;
    for(i = 0;i < n; ++ i)
    {

        for(j = 0;j < m; ++ j)
        {
            if(is[j] == 1 && map[i][j] == '0')
                break;
        }
        if(j == m) M ++;
    }
    return C[M][l];
}

void dfs(int i , int M , int K)
{
    if(i == M+1) return;
    if(K == 0)
    {
        ans += slove();
        ans %= mod;
        return;
    }
    is[i] = 1;
    dfs(i + 1 , M , K-1);
    is[i] = 0;
    dfs(i + 1 , M , K);
}

int main()
{
    int T;
    init();
    scanf("%d" , &T);
    while(T --)
    {
        scanf("%d%d%d%d" , &n , &m , &l , &k);
        for(int i = 0;i < n; ++ i)
            scanf("%s" , map[i]);
        memset(is , 0 , sizeof(is));
        ans = 0;
        dfs(0 , m , k);
        printf("%lld\n" , ans);
    }
    return 0;
}
