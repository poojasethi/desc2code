#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <iostream>
#define mod 1000000080798150871LL

using namespace std;

typedef long long ll;
ll f[10][1010];
ll C[1010][1010];
char mmap[1010][10];
int bit[10],legal[1010][10];
int n,m,r,c;
int t;

ll getval(int a,int b){
    if(a < b)   return 0;
    if(a - b < b)   b = a - b;
    return C[a][b];
}
int main(){

    for(int i=0;i<8;i++){
        int now = i;
        int ccount = 0;
        while(now > 0){
            int test = now % 2;
            if(test == 1)   ccount++;
            now /= 2;
        }
        bit[i] = ccount;
    }

    C[0][0] = 1;
    for(int i=1;i<=1001;i++){
        for(int j=0;j<=i;j++){
            if(j==0 || j == i)  C[i][j] = 1;
            else C[i][j] = (C[i-1][j] + C[i-1][j-1])%mod;
        }
    }

    scanf("%d",&t);
    while(t --){
        scanf("%d %d %d %d",&n,&m,&r,&c);
        for(int i=1;i<=n;i++)
            scanf("%s",mmap[i]);

        ll ans = 0;
        for(int i=0;i<(1<<m);i++)   if(bit[i] == c){
            int a = 0;
            for(int j=1;j<=n;j++){
                int ccount = 0;
                for(int k=0;k<m;k++)
                    if((i&(1<<k)) != 0 && mmap[j][k] == '1')    ccount++;
                if(ccount == c) a++;
            }
            //printf("%d: %d %d: %I64d %I64d\n",i,a,r,C[a][r],getval(a,r));
            ans = (ans + getval(a,r)) % mod;
        }
        cout << ans << endl;
    }

    return 0;
}
