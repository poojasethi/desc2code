#include <iostream>
#include <cstdio>

#define Mod 1000000080798150871LL
#define llu long long unsigned int
#define lli long long int lli

using namespace std;

int N,M,L,K;
char w[1000][4];
llu comb[1001][1001];
void compute(){
    for(int i = 0; i <= 1000; i++){
        comb[i][i] = comb[i][0] = 1;
    }

    for(int i = 2; i <= 1000; i++){
        for(int j = 1; j < i; j++){
            comb[i][j] = (comb[i-1][j] + comb[i-1][j-1]) % Mod;
        }
    }
}

llu Result(){
    if(L > N  || K > M) return 0;

    llu count = 0;
    int CNT = 0;
    int k1, k2, k3;
    if(K == 1){
        for(k1 = 0; k1 < M; k1++){
            for(int i = 0; i < N; i++){
                if(w[i][k1] == '1') CNT++;
            }
            if(CNT >= L)
                count = (count + comb[CNT][L]) % Mod;
            CNT = 0;
        }
        return count;
    }

    if(K == 2){
        for(k1 = 0; k1 < M; k1++){
            for(k2 = k1+1 ; k2 < M; k2++){
                for(int i = 0; i < N; i++){
                    if(w[i][k1] == '1' && w[i][k2] == '1') CNT++;
                }

                if(CNT >= L){
                    //cout << CNT <<" "<< K << " " << comb[CNT][K]<<endl;
                    count = (count + comb[CNT][L]) % Mod;
                }
                CNT = 0;
            }

        }
        return count;
    }

    if(K == 3){
        k1 = 0; k2 = 1; k3 = 2;
        for(int i = 0; i < N; i++){
            if(w[i][k1] == '1' && w[i][k2] == '1' && w[i][k3] == '1') CNT++;
        }
        if(CNT >= L)
            count = (count + comb[CNT][L]) % Mod;

        return count;
    }
}

int main(){
    int t;
    scanf("%d", &t);

    compute();
    while(t--){
        scanf("%d %d %d %d", &N, &M, &L,&K);
        for(int  i = 0; i < N; i++)
            scanf("%s", w[i]);

        printf("%llu\n", Result());

    }
}
