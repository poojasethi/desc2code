#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <stdarg.h>
#include <cassert>
#include <fstream>

using namespace std;

//make macros available for redefinition.
#undef LOCAL
#undef DEBUG
#undef CONSOLE
#undef INFILE
#undef OUTFILE

#define LOCAL

#ifdef LOCAL
#define INFILE
//#define DEBUG
#define CONSOLE
//#define OUTFILE
#endif

#ifdef ONLINE_JUDGE //enough for codechef and codeforces
#undef LOCAL
#undef INFILE
#undef OUTFILE
#undef CONSOLE
#undef DEBUG
#endif
//otherwise uncomment following lines
/*
#undef LOCAL
#undef INFILE
#undef OUTFILE
#undef CONSOLE
#undef DEBUG
*/


#ifdef LOCAL
#define getcha getchar
#endif
#ifndef LOCAL
#ifdef _MSC_VER
#define getcha getchar
#else
#define getcha getchar_unlocked
#endif
#endif

#define ll long long

#define PR(id) printf("The value of " #id " is %d\n", id)
#define glue(a,b) a ## b

#ifdef CONSOLE
#include<conio.h>
#endif

int scan() {
	int t = 0;
	char c = getcha();
	while(c<'0' || c>'9') c = getcha();
	while(c>='0' && c<='9') {
		t = 10 * t + c - 48;
		c = getcha();
	}
	return t;
}

ll scanl() {
	ll t=0;
	char c = getcha();
	while(c<'0' || c>'9') c = getcha();
	while(c>='0' && c<='9') {
		t = 10 * t + c - 48;
		c = getcha();
	}
	return t;
}

/* ADD PROGRAM LOGIC HERE */


string arr[1000];
ll mod;
ll c[1001][1001];


void go() {
	int t;
	scanf("%d",&t);
	c[0][0] = 1;	
	mod = 1000000080798150871ll;
	for(int i=1; i<=1000; i++) {
		c[i][0] = 1;
		for(int j=1; j<=i; j++) {
			c[i][j] = c[i-1][j-1]+c[i-1][j];
			c[i][j] %= mod;
		}
	}
	string s;
	getline(cin,s);
	//cout<<c[5][2]<<" "<<c[5][3]<<" "<<c[5][4]<<" "<<c[999][500]<<endl;
	while(t--) {
		ll n,m,l,k;
		scanf("%lld %lld %lld %lld",&n,&m,&l,&k);
		getline(cin,s);
		for(int i=0; i<n; i++) {
			getline(cin,arr[i]);
			//cout<<arr[i]<<endl;
		}
		if(l>n || k>m) {
			printf("0\n");
		}
		else {
			vector<int> data;
			for(int i=0; i<m; i++) data.push_back(0);
			for(int i=0; i<k; i++) data[i] = 1;
			ll ans = 0;
			sort(data.begin(),data.end());
			//for(int i=0; i<data.size(); i++) cout<<data[i]<<" ";
			//cout<<endl;		
			do {
				//cout<<"HI"<<endl;
				//for(int i=0;i <data.size(); i++) cout<<data[i]<<" ";
				//cout<<endl;
				ll ans1 = 0;
				for(int i=0; i<n; i++) {
					bool present = true;
					for(int j=0; j<m; j++) {
						if(data[j] && arr[i][j]=='0') { present = false; break; }
					}
					if(present) { //cout<<"present: "<<i<<endl; 
						ans1++; }
					//else cout<<"not present: "<<i<<endl;
				}
				ans+=c[ans1][l];
				ans %= mod;
			} while(next_permutation(data.begin(),data.end()));
			printf("%lld\n",ans);
		}
	}
}
/*  */

int main() {

#ifdef INFILE
	freopen("in.txt","r",stdin);
#endif
#ifdef OUTFILE
	freopen("out.txt","w",stdout);
#endif

	//call function here.
	go();


#ifdef DEBUG
	printf("\nEND\n");
#endif
#ifdef CONSOLE
	_getch();
#endif

	return 0;
}