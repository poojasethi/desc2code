#include <stdio.h>
#include <stdlib.h>

using namespace std;

typedef long long int LLI;

const LLI P = 1000000080798150871LL;
LLI C[1001][1001];

void initC()
{
	C[0][0] = 1LL;
	for(int i = 1; i <= 1000; ++i)
	{
		C[0][i] = 0LL;
		C[i][0] = 1LL;
		C[i][1] = (LLI)i;
		C[i][i] = 1LL;
	}
	for(int i = 3; i <= 1000; ++i)
	{
		for(int j = 2; j < i; ++j)
		{
			C[i][j] = C[i-1][j] + C[i-1][j-1];
			if(C[i][j] >= P) C[i][j] -= P;
		}
	}
}

void solve()
{
	int N,M,L,K;
	scanf("%d%d%d%d",&N,&M,&L,&K);
	LLI answer = 0;
	int CNT[3];
	CNT[0] = CNT[1] = CNT[2] = 0;
	char str[4];
	for(int i = 0; i < N; ++i)
	{
		int sum = 0;
		scanf("%s",str);
		int prev = -1;
		for(int j = 0; j < M; ++j)
		{
			int in;
			in = str[j] - '0';
			if(in==1)
			{
				if(K==1) CNT[j]++;
				else if(K==2)
				{
					sum++;
					if(sum==2)
					{
						if(j==1)CNT[0]++;
						else if(prev==1) CNT[1]++;
						else CNT[2]++;
					}
					else if(sum==3)
					{
						CNT[1]++;
						CNT[2]++;
					}
				}
				else
				{
					sum++;
					if(sum==3) CNT[0]++;
				}
			}
			prev = in;
		}
	}
	if(K==1)
	{
		for(int i = 0; i < M; ++i)
		{
			if(CNT[i] >= L) answer += C[CNT[i]][L];
			if(answer >= P) answer -= P;
		}
	}
	else if(K==2)
	{
		if(M==2 && CNT[0] >= L) answer = C[CNT[0]][L];
		else if(M==3)
		{
			for(int i = 0; i < 3; ++i)
			{
				if(CNT[i] >= L) answer += C[CNT[i]][L];
				if(answer >= P) answer -= P;
			}
		}
	}
	else if(K==3)
	{
		if(M==3 && CNT[0] >= L) answer = C[CNT[0]][L];
	}
	printf("%llu\n", answer);
}

int main()
{
	initC();
	int t;
	scanf("%d",&t);
	for(int i = 1; i <=t; ++i)
	{
		solve();
	}
	return 0;
}
