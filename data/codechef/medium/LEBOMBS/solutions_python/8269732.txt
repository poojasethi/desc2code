
def first_pass(buildings):
    # edge cases (length < 3)
    if len(buildings) == 1:
        if buildings[0] == "1":
            buildings[0] == "2"
        return buildings
    if len(buildings) == 2:
        if buildings[0] == "1" or buildings[1] == "1":
            buildings[0] = "2"
            buildings[1] = "2"
        return buildings

    # check first building for bomb
    if buildings[0] == "1":
        if buildings[1] == "0":
            buildings[1] = "2"
        buildings[0] = "2"

    # check last building for bomb
    if buildings[len(buildings) - 1] == "1":
        buildings[len(buildings) - 1] = "2"
        if buildings[len(buildings) - 2] == "0":
            buildings[len(buildings) - 2] = "2"

    # check buildings with 2 neighbors for bombs
    for i in xrange(1, len(buildings)-1):
        if buildings[i] == "1":
            buildings[i-1] = "2"
            buildings[i] = "2"
            if buildings[i+1] == "0":
                buildings[i+1] = "2"
    return buildings

def count_standing(buildings):
    count=0
    for i in xrange(0, len(buildings)):
        if buildings[i] == "0":
            count += 1

    return count


cases=int(raw_input())

for i in xrange(0, cases):
    N=raw_input()
    building=raw_input()
    bd = []
    for i in xrange(0, len(building)):
        bd.append(building[i])
    print count_standing(first_pass(bd))
