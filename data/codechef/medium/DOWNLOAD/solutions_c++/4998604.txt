#include<cmath>
#include<list>
#include<iostream>
#include<cstdlib>
#include<vector>
#include<stack>
#include<map>
#include<set>
#include<cstring>
#include<algorithm>

using namespace std;
#define N 1000000007
#define M 100003
#define MOD 1000000007
#define INF (int)1e9
#define LINF (long long)1e18
#define pb push_back
#define popb pop_back()
#define pln() printf("\n")
#define s(t) scanf("%d",&t)
#define sd(t) scanf("%lf",&t)
#define sld(t) scanf("%Lf",&t)
#define sl(t) scanf("%lld",&t)
#define ss(t) scanf("%s",t)
#define p(t) printf("%d",t)
#define pl(t) printf("%lld",t)
#define ps(t) printf("%s",t)
#define x first
#define y second
#define FILL(a,b) memset(a,b,sizeof(a))

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef long long LL;
typedef vector<LL> VL;
typedef pair<LL,LL> PLL;
typedef vector<PII> VPII;

/*Start where you are. Use what you have. Do what you can..*/
/*
template<class type>
type fastread()
{
char ch;type num=0;
while((ch=getchar_unlocked())<'0');
while(ch>='0')
{
num=(num)*10+ch-'0';
ch=getchar_unlocked();              
}             
return num;            
             
}
*/
int gcd(int a,int b){if(b==0)return a;return gcd(b,a%b);}
struct tt
{
int val,qn,ind;char type;       
}arr[300010];
int ft[300010],n,total,ans[5000];VI kt;VI mqu[5000];
int st[100001];
int qu[5000][20];
void update(int i,int val)
{
while(i<=total)
{
ft[i]+=val;
i+=(i&-i);               
}     
}

int query(int i)
{
int ans=0;
while(i>0)
{
ans+=ft[i];
i-=(i&-i);          
}    
return ans;    
}

bool cmp(tt a,tt b)
{
if(a.val<b.val)
return true;
else if(a.val==b.val)
{
return a.type<b.type;     
     
}     
return false;     
     
}


int main()
{   
#ifndef ONLINE_JUDGE
freopen("inp.txt","r",stdin);
freopen("re.txt","w",stdout);
#endif
int i=0,j,q,k,x,a,b,last,sz,h;s(n);

for(int k=0;k<n;k++)
{
s(a);s(b);
arr[i].type=0;
arr[i].val=a;
arr[i].qn=k;
arr[i+1].qn=k;
arr[i+1].type=2;
arr[i+1].val=b;

i+=2;
}
s(q);
for(int j=0;j<q;++j)
{
s(k);sz=k;k=0;kt.pb(sz);
while(k<sz)
{s(qu[j][k]);
k++;
}        

sort(qu[j],qu[j]+sz);

for(int z=0;z<sz;++z)
{
arr[i].type=1;
arr[i].val=qu[j][z];
arr[i].qn=j;
arr[i].ind=z;
i++;
}   

}

last=0;x=1;
sort(arr,arr+i,cmp);
for( j=1;j<i;++j)
{                     
       
while(j<i&&(arr[last].val==arr[j].val))
{arr[j].val=x;
if(arr[j].type==0)st[arr[j].qn]=x;
else if(arr[j].type==1)mqu[arr[j].qn].pb(x);
j++;
}

if(arr[last].type==0)st[arr[last].qn]=x;
else if(arr[last].type==1)mqu[arr[last].qn].pb(x);
arr[last].val=x;
x++;
if(j<i)
last=j;        
        
}
if(j==i)
{arr[last].val=x;
if(arr[last].type==1)mqu[arr[last].qn].pb(x);
x++;
}
total=x-1;
for(int j=0;j<i;++j)
{
        
//p(arr[j].val);ps(" ");p(Map[arr[j].val]);pln();        
if(arr[j].type==0)
update(arr[j].val,1);
        
else if(arr[j].type==2)
{    
update(st[arr[j].qn],-1);
}
else
{
b=arr[j].qn;
h=arr[j].ind;    
ans[arr[j].qn]+=query(mqu[b][h]);
if(h!=0)
ans[arr[j].qn]-=query(mqu[b][h-1]);    
}        

        
}
for(int i=0;i<q;++i)
{p(ans[i]);pln();}


//cin.get();
return 0;    
}
