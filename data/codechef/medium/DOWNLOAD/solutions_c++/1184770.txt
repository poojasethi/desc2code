#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <vector>
#include <algorithm>
#include <string>

#pragma comment(linker, "/STACK:266777216")
using namespace std;
#define assert(f) { if(!(f)) { fprintf(stderr,"Assertion failed: "); fprintf(stderr,#f); fprintf(stderr,"\n"); exit(1); } }

const int inf=1000000000;

typedef pair<int,int> PII;

#define N 111010
#define X first
#define Y second
#define fill(ar,val) memset((ar),(val),sizeof (ar))

PII a[N];
int R[N];
int f[N];
int ans[N];
pair <PII, int> b[N];
int m;

void add(int x,int d)
{
	for(;x<=m;x+=x&-x) f[x]+=d;
}

int sum(int x)
{
	int s=0;
	for(;x>0;x-=x&-x) s+=f[x];
	return s;
}

int main()
{
	int n;
	scanf("%d",&n); // number of time slots
	{
int i,j;
		for(i=0;i<n;i++)
		{
			scanf("%d%d",&a[i].X,&a[i].Y);
			R[i]=a[i].Y;
		}
		sort(a,a+n);
		sort(R,R+n);
		m=unique(R,R+n)-R;
		int q;
		scanf("%d",&q);
		int len=0;
		for(int it=0;it<q;it++)
		{
			ans[it]=n;
			int k;
			scanf("%d",&k);
			int t[33];
			for(j=0;j<k;j++)
				scanf("%d",t+j);
			t[k++]=-inf/2;
			t[k++]=inf/2*3;
			sort(t,t+k);
			k=unique(t,t+k)-t;
			for(i=1;i<k;i++)
				b[len++]=make_pair(make_pair(t[i-1]+1,t[i]),it);
		}
		sort(b,b+len);
		fill(f,0);
		i=n-1;
		for(int it=len;it--;)
		{
			int l=b[it].X.X;
			int r=b[it].X.Y;
			for(;i>=0 && a[i].X>=l;i--)
			{
				int ind=lower_bound(R,R+m,a[i].Y)-R+1;
				add(ind,1);
			}
			int ind=lower_bound(R,R+m,r)-R;
			ans[b[it].Y]-=sum(ind);
		}
		for(i=0;i<q;i++)
			printf("%d\n",ans[i]);
	}
	return 0;
}