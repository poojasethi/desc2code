#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
using namespace std;
 
#define F first
#define S second
const int N = 300010;
const int oo = 1000000000;
 
vector<pair<int,pair<int,int> > > V;
 
int lowbit(int x) 
{
	return x & (-x);
}
 
int query[5010][25],a[N],ans[5010],pos[5010][25],p[N];
 
void insert(int x,int y)
{
	for(int i = x; i < N; i += lowbit(i))
		a[i] += y;
}
 
int sum(int x)
{
	int ans = 0;
	for(int i = x; i > 0; i -= lowbit(i))
		ans += a[i];
	return ans;
}
 
void solve()
{
	int cnt = 1;
	memset(ans,0,sizeof(ans));
	sort(V.begin(),V.end());
	for(int i = 0; i < V.size(); i ++) {
		if(i && V[i].F != V[i - 1].F) cnt ++;
		if(V[i].S.F < -oo) {
			p[- (V[i].S.F + oo)] = cnt;
		        insert(cnt,1);
		}
		else if(V[i].S.F > 0) {
			insert(p[V[i].S.F], -1);
		}
		else {
			int id = -V[i].S.F;
			ans[id] += sum(cnt);
			pos[id][V[i].S.S] = cnt;
			if(V[i].S.S > 1) ans[id] -= sum(pos[id][V[i].S.S - 1]);
		}
	}
}
 
 
 
int main()
{
	int n,x,y,m;
	while(scanf("%d",&n) != EOF) {
		V.clear();
		for(int i = 1; i <= n; i ++) {
			scanf("%d%d",&x,&y);
			V.push_back(make_pair(x,make_pair(-oo - i,0)));
			V.push_back(make_pair(y,make_pair(i,oo)));
		}
		scanf("%d",&m);
		for(int i = 1; i <= m; i ++) {
			scanf("%d",&y);
			for(int j = 1; j <= y; j ++) {
			      scanf("%d",&query[i][j]);	
			}
			sort(query[i] + 1,query[i] + y + 1);
			for(int j = 1; j <= y; j ++)
				V.push_back(make_pair(query[i][j],make_pair(-i,j)));
		}
		solve();
		for(int i = 1; i <= m; i ++)
			printf("%d\n",ans[i]);
	}
	return 0;
}