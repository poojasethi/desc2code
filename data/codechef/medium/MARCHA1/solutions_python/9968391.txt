def check(a,m):
	# a - list of banknotes, sorted in reverse order
	# m - the remaining amount, we need to obtain from banknotes in a
	
	# remove this comment to see the values for each recursion
	# print a, m
	
	# if (len(a)>0) is false -- means "no banknotes left"
   	# if (m<a[-1]) is false --- means print "required value < the minimum value of banknote"
   	if (len(a)>0 and m<a[-1]):
   		return 0
   	else:
   		# starting to compare with the maximum value of banknote
   		pos=0 
   		
   		# loop to discard banknotes with value > required value
   		while (m<a[pos]):
   			pos+=1
   			
   		# after discarding all the banknotes with value > required value
   		# a[pos] is the maximum value of banknote which is less than required note
   		
   		# updating value of m by substracting a[pos]
   		m=m-a[pos]
   		
   		# b is the remaining banknotes after discarding 
   		# all the banknotes with value > required value and a[pos]
   		# we will use b, to find the updated value of m.
   		b=a[pos+1:]
   		
   		while (1):
   			# m==0 means we have reached our goal
   			if (m==0):
   				return 1
   			
   			# we have not reached our goal
   				
   			# if len(b)<=0 means we have no banknote left	
   			if (len(b)<=0):
   				return 0
   				
   			# we have not reached our goal and some banknotes are left
   			
   			if(check(b,m)):
   				return 1
   			else:
   				m=m+a[pos]
   				pos+=1
   				m=m-a[pos]
   				b=a[pos+1:]
   		return 0
t=int(raw_input())
for asd in range (t):
   	n,m=map(int,raw_input().split())
   	a=[]
   	for ssss in range (n):
   		x=int(raw_input())
   		if(x<=m):
   			a.append(x)
   	a=sorted(a,reverse=True)
   	sumi=sum(a)
   	if (sumi<m):
   		flag=0
   	elif (sumi==m):
   		flag=1
   	else:
   		flag=check(a,m)
   	if flag==1:
   		print "Yes"
   	else:
   		print "No" 