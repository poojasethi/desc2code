#include <bits/stdc++.h>
using namespace std;

#define rep(i, n) for(int i = 0; i<(n); ++i)
#define testcase() int t; cin >> t; rep(i, t) solve();
/*
void show_bit(int n)
{
    if(n == 0) {
        cout << (n&1);
        return;
    }
    show_bit(n >> 1);
    cout << (n&1);
}*/

int check_bit(int n, int pos)
{
    return (n & (1 << pos));
}

int bit_n(int n)
{
    int count = 0;
    while(n) {
        count++;
        n >>= 1;
    }
    return count;
}

void solve()
{
    int n, k, x;
    cin >> n >> k;
    vector<int> v;
    for(int i = 0; i<n; ++i) {
        cin >> x;
        v.push_back(x);
    }
    /*
    for(int i = 0; i<n; ++i) {
        show_bit(v[i]);
        cout << endl;
    }
    */
    int index = 0;
    sort(v.rbegin(), v.rend());
    for(int bit = bit_n(v[0]); bit>=0; --bit) {
        int x = index;
        while(x < n && check_bit(v[x], bit) == 0) {
            x++;
        }
        if(x == n)
            continue;
        swap(v[index], v[x]);
        for(int j = 0; j<n; ++j) {
            if(j!=index && check_bit(v[j], bit))
                v[j] = v[j]^v[index];
        }
        index++;
    }
    /*
    for(int i = 0; i<n; ++i) {
        show_bit(v[i]);
        cout << endl;
    }
    */
    int ans = k;
    for(int i = 0; i<n; ++i) {
        ans = max(ans, ans^v[i]);
    }
    cout << ans << endl;
}

int main()
{
    testcase();
    return 0;
}
