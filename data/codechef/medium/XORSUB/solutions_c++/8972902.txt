#include <iostream>
using namespace std;
int dp[1001][1024];
int main() {
	long long int t,i,j,k,ma,n;
	cin>>t;
	while(t--)
	{   int A[1001]={0};
	    cin>>n>>k;
	    for(i=0;i<n;i++)
	    cin>>A[i];
	    for(i=0;i<n;i++)
	    {
	        for(j=0;j<1024;j++)
	        dp[i][j]=0;
	    }
	    dp[0][0]=1;
	    //tabulating existence of xor of possible subsets
	    //elements are max upto 1000 (less than 2^10)
	    //j is xor and i is element
	    for(i=0;i<n;i++)
	    {
	        for(j=0;j<1024;j++)
	        {
	            dp[i+1][j]=dp[i][j]|dp[i][j^A[i]];
	            
	        }
	    }
	    ma=0;
	    
	    for(j=0;j<1024;j++)
	    {
	        if(ma<(dp[n][j]*(j^k)))
	        ma=j^k;
	    }
	    cout<<ma<<endl;
	}
	return 0;
}