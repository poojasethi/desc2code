#include <iostream>

using namespace std;

int knapsack(int W,int cp[],int tm[],int n){
    int K[n+1][W+1];
    for(int i=0;i<=n;i++){
        for(int j=0;j<=W;j++){
            if(i == 0 || j == 0){
                K[i][j] = 0;
            }else if(tm[i-1] <= j){
                K[i][j] = max(cp[i-1] + K[i-1][j-tm[i-1]],K[i-1][j]);
            }else{
                K[i][j] = K[i-1][j];
            }
            //cout<<K[i][j]<<"\t";
        }
        //cout<<"\n";
    }
    return K[n][W];
}

int main()
{
    int t;
    cin>>t;
    while(t--){
        int n,w;
        cin>>n>>w;
        int cp[n],p[n],tm[n];
        int kn[n][w];
        for(int i=0;i<n;i++){
            int c,p;
            cin>>c>>p>>tm[i];
            cp[i] = c*p;
        }
        cout<<knapsack(w,cp,tm,n)<<"\n";
    }
    return 0;
}
