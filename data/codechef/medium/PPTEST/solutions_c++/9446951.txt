#include <iostream>
#include <stdio.h>
#include <algorithm>
using namespace std;

struct ques{
    int c,p,t;
};

struct ques q[100];
int mem[100][101];

bool compQ(ques,ques);
int solve(int,int);

int main() {
	int t,n,w,i,j,ans;
	scanf("%d",&t);
	while(t--){
	    scanf("%d %d",&n,&w);
	    for(i=0;i<n;i++){
	        scanf("%d %d %d",&q[i].c,&q[i].p,&q[i].t);
	    }
	    sort(q,q+n,compQ);
	    for(i=0;i<n;i++){
	        for(j=1;j<=w;j++) mem[i][j]=-1;
	        mem[i][0]=0;
	    }
	    for(i=0;i<n && q[i].t<=w;i++);
	    if(i==n) i--;
	    if(q[i].t>w) i--;
	    mem[i][w] = solve(i,w);
	    ans = mem[i][w];
	    printf("%d\n",ans);
	}
	return 0;
}

bool compQ(ques a,ques b){
    if(a.t<b.t) return true;
    return false;
}

int solve(int i,int w){
    if(i<0 || w<=0) return 0;
    if(mem[i][w]!=-1) return mem[i][w];
    
    if(q[i].t>w) mem[i][w]=solve(i-1,w);
    else{
        int tmp1 = q[i].c*q[i].p + solve(i-1,w-q[i].t);
        int tmp2 = solve(i-1,w);
        if(tmp1>=tmp2) mem[i][w]=tmp1;
        else mem[i][w]=tmp2;
    }
    return mem[i][w];
}