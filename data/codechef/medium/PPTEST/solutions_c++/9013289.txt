#include<iostream>
#include<algorithm>
using namespace std;
struct job
{
	int c;
	int p;
	int t;
};
bool myfunction(job s1,job s2)
{
	return ((s1.p*s1.c)>(s2.p*s2.c));
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,w;
		scanf("%d%d",&n,&w);
		int i;
		struct job a[n];
	//	int c[n],p[n],t[n],s[n];
		for(i=0;i<n;i++)
		{
			scanf("%d%d%d",&a[i].c,&a[i].p,&a[i].t);
		//	s[i]=p[i]*c[i];
		}
	//	sort(a,a+n,myfunction);
	//	int profit=0,k;
	/*	for(i=0;i<n;i++)
		{
			if(a[i].t<=w)
			{
				profit=a[i].c*a[i].p;
		        w=w-a[i].t;
		        k=i;
		        break;
			}
		}
	/*	for(i=0;i<n;i++)
		{
			printf("%d %d %d\n",a[i].c,a[i].p,a[i].t);
		//	s[i]=p[i]*c[i];
		}
		for(i=k+1;i<n;i++)
		{
			if(a[i].t<=w)
			{
				profit=profit+a[i].c*a[i].p;
				w=w-a[i].t;
			}
		}*/
		int res[n+1][w+1],j;
		for(i=0;i<=n;i++)
		{
			for(j=0;j<=w;j++)
			{
				if(i==0||j==0)
				res[i][j]=0;
				else if(a[i-1].t>j)
				res[i][j]=res[i-1][j];
				else
				res[i][j]=max(res[i-1][j],res[i-1][j-a[i-1].t]+a[i-1].p*a[i-1].c);
			}
		}
	/*	for(i=0;i<=n;i++)
		{
			for(j=0;j<=w;j++)
			printf("%d ",res[i][j]);
			printf("\n");
		}*/
		printf("%d\n",res[n][w]);
		
	}
}