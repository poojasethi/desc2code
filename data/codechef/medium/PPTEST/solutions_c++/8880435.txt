/* Author : Anurag El Dorado */

/* Libraries */
#include <bits/stdc++.h>
#include <time.h>
#include <math.h>
using namespace std;

//MACRO DEFINITIONS
/* Data Types */
#define lld long long int
#define llu unsigned long long int

/* Input */
#define sd(var) scanf("%d", &var)
#define slld(var) scanf("%lld", &var)
#define sllu(var) scanf("%llu", &var)

/* Output */
#define print_arr(a, n) cout << #a << " : "; for (int I = 0; I < n; I++) { cout << a[I] << " "; } cout << endl;	//Array till n elements
#define print_v(v) 	cout << #v << " : "; for (long long int I = 0; I != v.size(); I++) { cout << v[I] << " "; } cout << endl;	//Vector
#define p2d(a, r, c) cout << #a << endl; for (int I = 0; I < r; I++) {	for (int J = 0; J < c; J++) {	cout << a[I][J] << " ";	} cout << endl;	} cout << endl;

/* File Input */
#define FILE_INPUT freopen("input.txt", "r", stdin);

/* File Output */
#define FILE_OUtPUT freopen("output.txt", "w", stdin);

//Single Variables
#define pr(x) cout << x << endl;
#define pdln(x) printf("%d\n", x);	//printf with new line
#define pd(x) printf("%d ", x);	//printf without new line

/* Output and Debugging */
#define deb(x) cout << #x << " = " << x << endl;
#define debb(x, y) cout << #x << " = " << x << "\t" << #y << " = " << y << endl;
#define debbb(x, y, z) cout << #x << " = " << x << "\t" << #y << " = " << y << "\t" << #z << " = " << z << endl;

/* MOD  value*/
#define MOD 1000000007

/* Timing */
#define TIMEIT cout << "TIME VARIABLE REINITIALISED\n"; clock_t start_time_ = clock();
#define TIMEUP cout << "Time: " << (clock() - start_time_) / (double)(CLOCKS_PER_SEC) << "s" << endl;

int main() {

	int i, j, k;
	int count, sum;
	int n, m, p, t, w, a, b;
	vector<int> v;
	int maxi, mini;
	int tc;
	string s, r;
	int lens, lenr;
	
//	lld i, j, k;
//	lld count, sum;
//	lld n, m, p, t;
//	vector<lld> v;
//	lld maxi, mini;
//	lld tc;
//	string s, r;
//	lld lens, lenr;

	cin >> tc;
	
	int weight[105];
	int cost[105];
	
	while (tc--) {
		cin >> n >> w;
		
		for (i = 1; i <= n; i++) {
			cin >> a >> b >> weight[i];
			cost[i] = a * b;
		}
		
		int dp[n + 1][w + 1];
		memset(dp, 0, sizeof dp);
		
		for (i = 1; i <= n; i++) {
			for (j = 1; j <= w; j++) {
				if (j >= weight[i]) {
					dp[i][j] = max(cost[i] + dp[i - 1][j - weight[i]], dp[i - 1][j]);
				} else {
					dp[i][j] = dp[i - 1][j];
				}
			}
		}
		
//		p2d(dp, n + 1, w + 1);
		cout << dp[n][w] << endl;

	}

	return 0;
}
