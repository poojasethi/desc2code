#include <iostream>
using namespace std;
int kps(int *arr,int *t,int n,int x)
{
    int m[110][110],j,i;
    for(j=0;j<=x;j++)
        m[0][j]=0;
      for(j=0;j<=n;j++)
            m[j][0]=0;
    for(i=1;i<=n;i++)
    {
        for(j=0;j<=x;j++)   //m[i][w]=items vs weights
        {
            if(t[i]<=j)
            {
                m[i][j]=max(m[i-1][j],m[i-1][j-t[i]]+arr[i]);
               // cout<<m[i][j]<<"  ";   //we have a choice whether to add the item(then w-w(i)) or to keep the earlier weight..the one that contributes most id kept.
            }
            else
                m[i][j]=m[i-1][j];
        }
    }

  cout<<m[n][x]<<"\n";

}

int main()
{
    //cout << "Hello world!" << endl;
    int tst,n,m,i,j;
       int arr[101],c[101],p[101],t[101];
   cin>>tst;
    while(tst--)
    {
        cin>>n>>m;

        for(i=1;i<=n;i++)
          {
              cin>>c[i]>>p[i]>>t[i];
              arr[i]=c[i]*p[i];

          }
           kps(arr,t,n,m);
    }
   


    return 0;
}
