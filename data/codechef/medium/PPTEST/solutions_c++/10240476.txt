#include <iostream>
#include <cmath>
#include <climits>
#include <cstdlib>
using namespace std;
int cost[101],weight[101];
int arr[101][101];
int counter = 0;
int knapsack(int n,int k)
{
    if(arr[n][k] != -1)
    {
        counter++;
        return arr[n][k];
    }
    if(k == 0)
    {
        arr[n][k] = 0;
        return 0;
    }
    if(n == 0)
    {
        if(weight[n] <= k)
        {
            arr[n][k] = cost[n];
            return arr[n][k];
        }
        else
        {
            arr[n][k] = 0;
            return arr[n][k];
        }
    }
    if(k-weight[n] < 0)
    {
        arr[n-1][k] = knapsack(n-1,k);
        return arr[n-1][k];
    }
    else
    {
        int y = knapsack(n-1,k);
        int r = cost[n] + knapsack(n-1,k-weight[n]);
        arr[n][k] = max(y,r);
        return arr[n][k];
    }
}
int main()
{
    int t;
    cin >> t;
    int n,w;
    int l,m;
    while(t--)
    {
        cin >> n >> w;
        int h = max(n,w);
        for(int i = 0 ; i <= h; i++)
        {
            for(int j = 0 ; j <= h ; j++)
            {
                arr[i][j] = -1;
            }
        }
        for(int i = 0 ; i < n; i++)
        {
            cin >> l >> m;
            cost[i] = l*m;
            cin >> weight[i];
        }
        cout << knapsack(n-1,w) << endl;
        // cout << counter << endl;
    }
	return 0;
}