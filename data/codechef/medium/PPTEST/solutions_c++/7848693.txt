//10:16

#include <iostream>

using namespace std;

const int maxn=101;
const int maxw=101;

int w[maxn];
int v[maxn];

int dp[maxn][maxw];

int knapsack(int *w,int *v, int n, int mw){
	
	for(int wt=0;wt<=mw;wt++)
		dp[0][wt]=0;

	for (int i = 1; i <= n; ++i)
	{
		for(int wt=0;wt<=mw;wt++){

			if(w[i]<=wt){
				if(dp[i-1][wt-w[i]]+v[i]>dp[i-1][wt])
					dp[i][wt]=dp[i-1][wt-w[i]]+v[i];
				else
					dp[i][wt]=dp[i-1][wt];
			}else{
				dp[i][wt]=dp[i-1][wt];
			}
		}
	}

	return dp[n][mw];
}

int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		int mw;
		cin>>n>>mw;
		for (int i = 1; i <= n; ++i)
		{
			int a,b;
			cin>>a>>b>>w[i];
			v[i]=a*b;
		}
		cout<<knapsack(w,v,n,mw)<<"\n";
	}

}