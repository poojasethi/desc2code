#include <iostream>
using namespace std ;
inline int mod(int a) 
{
	if (a<0) return -a;
	return a;
}
int partition(int *a, int l, int h) 
{ 
	int p=a[l];
	int left=l+1,right=h;
	while (left<right) 
	{
		while (a[left] <=p&&left<h) left++;
		while (a[right] >=p&&right>l) right--;
		if(left<right) { int temp=a[right];
		a[right] =a[left];
		a[left] =temp;}
	}
	if (p>a[right])
{	a[l]=a[right];
	a[right] =p;} 
	return right;
}
void qsort (int *a, int l, int h) 
{
	if (l>=h)
	return ;
	int p=partition(a, l, h);
	if (p!=0)
	qsort (a, l, p-1);
	qsort (a, p+1, h);
}
int main () 
{
	int t,nn, n, kk, k, sum1,sum2,max;
	cin>>t;
	while (t--) 
	{
		cin >>n>>k;
		nn=n;
		int a[n] ;
		sum1=sum2=0;
		while (nn--) cin>>a[nn];
		qsort (a, 0,n-1);
		if (k>n/2)
		k=n-k;
		kk=k;
		while (kk--) sum1=sum1+a[kk];
		while (k<n) sum2=sum2+a[k++];
		cout <<mod(sum2-sum1)<<endl;
	}
}