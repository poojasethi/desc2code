#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
	vector<int> a;
int bsearch(int temp,int low,int high)
{
		if(low>high)
			return -1;
		if(low==a.size())
			return -1;
		int mid=(low+high)/2;
		if(a[mid]>temp)
		{
			if(mid==0||a[mid-1]<=temp)
				return mid;
			else
				return bsearch(temp,low,mid-1);
		}
		else
			return bsearch(temp,mid+1,high);
}
int main()
{
	std::ios_base::sync_with_stdio(false);
	int t,n,temp,i,j,max,count;
	cin>>t;
	while(t--)
	{
		cin>>n>>temp;
		a.push_back(temp);
		for(i=1;i<n;i++)
		{
			cin>>temp;
		/*	if(temp>=a[a.size()-1])
			{
				a.push_back(temp);
				continue;
			}*/
			j=bsearch(temp,0,a.size());
			if(j==-1)
				a.push_back(temp);
			else
				a[j]=temp;
		}
				cout<<a.size()<<" ";
			for(j=0;j<a.size();j++)
				cout<<a[j]<<" ";
					  cout<<endl;
		a.clear();
	}
	return 0;
}