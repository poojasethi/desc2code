#include<bits/stdc++.h>
using namespace std;

typedef pair<int,int> II;
typedef vector< II > VII;
typedef vector<int> VI;
typedef vector< VI > VVI;
typedef long long int ll;

#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define ALL(a) a.begin(),a.end()
#define SET(a,b) memset(a,b,sizeof(a))

#define si(n) scanf("%d",&n)
#define dout(n) printf("%d\n",n)
#define sll(n) scanf("%lld",&n)
#define lldout(n) printf("%lld\n",n)
#define fast_io ios_base::sync_with_stdio(false);cin.tie(NULL)

#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__,__VA_ARGS__)
/*template <typename Arg1>
void __f(const char * name, Arg1&& arg1){
    cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
    const char* comma = strchr(names + 1,',');cerr.write(names,comma - names) << " : " << arg1<<" | ";__f(comma+1,args...);
}*/
#else
#define trace(...)
#endif
int max(int p,int q)
{
    return (p>q)?p:q;
}
int min(int p,int q)
{
    return (p<q)?p:q;
}

VI a;
int tmp;
int bs(int st,int end)
{
   if(st==end && a[st]>tmp)
   {
       return st;
   }
   else if(st==end)
   {
       return -1;
   }
   else
   {
       int mid=st+(end-st)/2;
       if(a[mid]>tmp)
       {
           return bs(st,mid);
       }
       else
       {
           return bs(mid+1,end);
       }
   }
}

int main()
{
    int t,i,j,n,ans;
    si(t);
    while(t--)
    {
        a.clear();
        si(n);
        j=-1;
        for(i=0;i<n;i++)
        {
            si(tmp);
            if(j==-1)
            {
                a.PB(tmp);
                j=0;
            }
            else
            {
                ans=bs(0,j);
                if(ans==-1)
                {
                    a.PB(tmp);
                    j++;
                }
                else
                {
                    a[ans]=tmp;
                }
            }
        }
        cout << j+1 << " ";
        for(i=0;i<=j;i++)
        {
            cout << a[i] << " ";
        }
        cout << endl;
    }
    return 0;
}

