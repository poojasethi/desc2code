#include <bits/stdc++.h>
using namespace std;

// Uzumaki Naruto :)

#define DEBUG
#ifdef DEBUG
	#define dbg(a) cerr << __LINE__ << ": " << #a << " = " << (a) << endl
	#define dbg_all(a,sz) cerr << "_____ " << #a << " = "; for(int i = 0; i < sz; ++i) cerr << a[i] << " "; cerr << "\n"
	#define pause() cin.get();cin.get();
#else
	#define dbg(a)
	#define dbg_all(a,sz)
	#define pause()
#endif

typedef long long LL;
typedef pair<int,int> pii;
typedef vector<int> vi;

const int NN = 412345;

int A[NN];
int N,W;

void solve(){
    cin >> N >> W;
    for(int i = 0; i < N; ++i) cin >> A[i];
    deque<pii> min_dq,max_dq;

    for(int i = N-1; i > N-W; --i){
        while(!min_dq.empty() and min_dq.back().first >= A[i]) min_dq.pop_back();
        while(!max_dq.empty() and max_dq.back().first <= A[i]) max_dq.pop_back();

        min_dq.push_back(make_pair(A[i],i));
        max_dq.push_back(make_pair(A[i],i));
    }

    int ans = 0;
    for(int i = N-W; i >= 0; --i){
        while(!min_dq.empty() and min_dq.back().first >= A[i]) min_dq.pop_back();
        while(!max_dq.empty() and max_dq.back().first <= A[i]) max_dq.pop_back();

        while(!min_dq.empty() and min_dq.front().second > i+W-1) min_dq.pop_front();
        while(!max_dq.empty() and max_dq.front().second > i+W-1) max_dq.pop_front();

        min_dq.push_back(make_pair(A[i],i));
        max_dq.push_back(make_pair(A[i],i));

        int mn = min_dq.front().first , mx = max_dq.front().first;
        ans += ((mn+W-1) == mx);
    }
    cout << ans << endl;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    solve();
    return 0;
}
