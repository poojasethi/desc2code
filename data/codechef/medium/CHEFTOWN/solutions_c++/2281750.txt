#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<ctime>
#include<cctype>
#include<cassert>
#include<climits>
#include<cerrno>
#include<cfloat>
#include<ciso646>
#include<clocale>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
#include<cstddef>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cwchar>
#include<cwctype>

//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<complex>
#include<string>
#include<stack>
#include<bitset>
#include<istream>
#include<valarray>

//IOs
#include<iostream>
#include<sstream>
#include<iomanip>
#include<fstream>
#include<exception>
#include<ios>
#include<iosfwd>
#include<ostream>
#include<iterator>
#include<stdexcept>
#include<streambuf>


//algorithm & miscellaneous
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<limits>
#include<locale>
#include<memory>
#include<new>

// My Terms
#define pb push_back
#define mp make_pair
#define ins insert
#define fir first
#define sec second
#define PRINT(x)        cout << #x << " " << x << endl
#define pi acos(-1)
#define ll long long
#define EM empty()
#define sz(a) int((a).size())
#define all(c) (c).begin(),(c).end()
#define fill(a,v)     memset(a, v, sizeof(a))

using namespace std;

unsigned long long mod=1000000007;

int getint(){
    int c = 'a'; 
    while (!(c >= '0' && c <= '9') && c != '-')
          c = getchar_unlocked();
    int c2;
    if (c != '-')
       c2 = c;
    else
        c2 = '0';
    int res = 0;
    while((c2 >= '0' && c2 <= '9')){
              res = (res << 3) + (res << 1) + (c2 - '0');
              c2 = getchar_unlocked();
    }
    return res * (c == '-' ? -1 : 1);
}
int main(){
    int n,k;
    n=getint();
    k=getint();
    int a[n+10];
    deque<int>maxi,mini;
    for(int i=1;i<=n;i++){
            a[i]=getint();
            }
    int ans=0;
    for(int i=1;i<=k;i++){
            while(!mini.empty() and a[i]<=a[mini.back()])
            mini.pop_back();
            mini.push_back(i);
            while(!maxi.empty() and a[i]>=a[maxi.back()])
            maxi.pop_back();
            maxi.push_back(i);
            //cout<<a[maxi.front()]<<" "<<a[mini.front()]<<"\n";
            }
    for(int i=k+1;i<=n;i++){
            if((a[maxi.front()]-a[mini.front()])==(k-1))ans++;
            while(!mini.empty() and a[i]<=a[mini.back()])
            mini.pop_back();
            while(!mini.empty() and mini.front()<=(i-k))
            mini.pop_front();
            mini.push_back(i);
            while(!maxi.empty() and a[i]>=a[maxi.back()])
            maxi.pop_back();
            while(!maxi.empty() and maxi.front()<=(i-k))
            maxi.pop_front();
            maxi.push_back(i);
            //cout<<a[maxi.front()]<<" "<<a[mini.front()]<<"\n";
            }
            if((a[maxi.front()]-a[mini.front()])==(k-1))ans++;
    printf("%d\n",ans);
    //scanf("\n");
    return 0;
}
