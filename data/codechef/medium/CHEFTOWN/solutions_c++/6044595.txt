#include<bits/stdc++.h>
using namespace std;
// APPROACH ONE...MAKING USE OF NO. OF PAIRS
int n,w,np=0,in[400005],ind[400005],pairs[400005]={0};

inline void fastRead_int(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    
    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }
    
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }
    
    if(neg)
    	x = -x;
}
int main(){
	
	
	

cin>>n>>w;
ind[0]=99999999;
int i;for(i=1;i<=n;i++)
{fastRead_int(in[i]);/*cin>>in[i];*/ind[in[i]]=i;}


i=1;
int small,large,inc,dec;
while(i<=n)
{    
     small=min(i,ind[in[i]-1]);
     large=max(i,ind[in[i]-1]);
     // add a pair to the range inc too dec
   	if( large-small < w ) { 
   		                         
							   pairs[large]++;pairs[min(n+1,small+w)]--;        
   		                             
   	}
	
++i;}

for(i=2;i<=n;i++) pairs[i] += pairs[i-1];

for(i=w;i<=n;i++) if(pairs[i]==w-1) np++;

cout<<np<<endl;



return 0;
}