#include<iostream>
#include<deque>
using namespace std;

int temp;
char ch;
int input()
{
    temp=0;
    ch=getchar_unlocked();
    while(ch<'0' || ch>'9')
        ch=getchar_unlocked();
    while(ch>='0' && ch<='9')
    {
        temp=(temp<<1)+(temp<<3)+ch-'0';
        ch=getchar_unlocked();
    }
    return temp;
}

int main()
{
    int n,w,i;
    n=input();w=input();
    int arr[n],cnt=0;
    for(i=0;i<n;i++)
    {
        arr[i]=input();
    }
    
    deque<int> dq_max,dq_min;
    
    for(i=0;i<w;i++)
    {
        while(!dq_max.empty() && arr[i]>dq_max.back())
        {
            dq_max.pop_back();
        }
        while(!dq_min.empty() && arr[i]<dq_min.back())
        {
            dq_min.pop_back();
        }
        dq_max.push_back(arr[i]);
        dq_min.push_back(arr[i]);
    }
    
    if(dq_max.front()-dq_min.front()==w-1)
        cnt++;
    
    for(i=0;i<n-w;i++)
    {
        if(dq_min.front()==arr[i])
            dq_min.pop_front();
        if(dq_max.front()==arr[i])
            dq_max.pop_front();
        
        while(!dq_max.empty() && arr[i+w]>dq_max.back())
            dq_max.pop_back();
        while(!dq_min.empty() && arr[i+w]<dq_min.back())
            dq_min.pop_back();
        
        dq_max.push_back(arr[i+w]);
        dq_min.push_back(arr[i+w]);
        
        if(dq_max.front()-dq_min.front()==w-1)
            cnt++;
    }
    printf("%d\n",cnt);
    return 0;
}