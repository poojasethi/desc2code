#include<iostream>
#include<cstdio>
#include<queue>
#include<vector>
using namespace std;
//vector <int> deque;
int a[400005];
std::vector<int> v;std::vector<int> v1;
std::deque<int> q_min;std::deque<int> q_max;
void mini(int a[],int n,int w)
{
    int i;
    q_min.push_back(0);
    for(i=1;i<w;i++)
    {
        while(!q_min.empty()&&a[q_min.back()]>=a[i])
        q_min.pop_back();
        q_min.push_back(i);
    }
    for(;i<n;i++)
    {
        v.push_back(a[q_min.front()]);
        if(!q_min.empty()&&q_min.front()<=i-w)
        q_min.pop_front();

        while(!q_min.empty()&&a[q_min.back()]>=a[i])
        q_min.pop_back();
        q_min.push_back(i);
    }
    v.push_back(a[q_min.front()]);
}
void max(int a[],int n,int w)
{
    int i;
    q_max.push_back(0);
    for(i=1;i<w;i++)
    {
        while(!q_max.empty()&&a[q_max.back()]<=a[i])
        q_max.pop_back();
        q_max.push_back(i);
    }
    for(;i<n;i++)
    {
        v1.push_back(a[q_max.front()]);
        if(!q_max.empty()&&q_max.front()<=i-w)
        q_max.pop_front();

        while(!q_max.empty()&&a[q_max.back()]<=a[i])
        q_max.pop_back();
        q_max.push_back(i);
    }
    v1.push_back(a[q_max.front()]);
}
int main()
{
    int ans=0,n,sum=0,min,w;
    scanf("%d%d",&n,&w);
    for(int i=0;i<n;i++)
    scanf("%d",&a[i]);
    mini(a,n,w);
    max(a,n,w);
    for(int i=0;i<=n-w;i++)
    {
        if(v1[i]-v[i]==w-1)
        ans++;
    }
    printf("%d\n",ans);
    return 0;
}
