#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<ctime>
#include<cctype>
#include<cassert>
#include<climits>
#include<cerrno>
#include<cfloat>
#include<ciso646>
#include<clocale>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
#include<cstddef>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cwchar>
#include<cwctype>
 
//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<complex>
#include<string>
#include<stack>
#include<bitset>
#include<istream>
#include<valarray>
 
//IOs
#include<iostream>
#include<sstream>
#include<iomanip>
#include<fstream>
#include<exception>
#include<ios>
#include<iosfwd>
#include<ostream>
#include<iterator>
#include<stdexcept>
#include<streambuf>
 
 
//algorithm & miscellaneous
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<limits>
#include<locale>
#include<memory>
#include<new>
#define ll long long
#define ull unsigned long long
using namespace std;
 
int a[1000010],b1[1000010],b2[1000010];
int getint(){
   int c = 'a';
   while (!(c >= '0' && c <= '9') && c != '-')
           //c=getchar();
           c = getchar_unlocked();
   int c2;
   if (c != '-')
     c2 = c;
   else
     c2 = '0';
   int res = 0;
   while((c2 >= '0' && c2 <= '9')){
     res = (res << 3) + (res << 1) + (c2 - '0');
         //c2=getchar();
         c2 = getchar_unlocked(); 
   }
   return res * (c == '-' ? -1 : 1);
}
int main()
{
    
          int n,k;
          
          scanf("%d %d",&n,&k);
       
          
          for(int i=0;i<n;i++)
                  scanf("%d",&a[i]);
          
          deque<int> d1,d2;
          
          for(int i=0;i<k;i++)
          {
                  while(!d1.empty() and a[i]>=a[d1.back()])
                                           d1.pop_back();
                  d1.push_back(i);
                  
                  while(!d2.empty() and a[i]<=a[d2.back()])
                                           d2.pop_back();
                  d2.push_back(i);
                  
          }
          
          int ans = 0;
          
          for(int i=k; i<n ; i++)
          {
                  b1[i-k] = a[d1.front()];
                  b2[i-k] = a[d2.front()];
                  
                  //cout<<b1[i-k]<<" "<<b2[i-k]<<"\n";
                  while(!d1.empty() and a[i]>=a[d1.back()])
                                   d1.pop_back();
                                   
                  while(!d2.empty() and a[i]<=a[d2.back()])
                                   d2.pop_back();
                                   
                  while(!d1.empty() and d1.front()<=i-k)
                                   d1.pop_front();
                                           
                  while(!d2.empty() and d2.front()<=i-k)
                                   d2.pop_front();        
                  
                  d1.push_back(i);d2.push_back(i);
                  
                  if(b1[i-k]-b2[i-k]+1==k)ans++;
          }
          
          b1[n-k] = a[d1.front()];
          b2[n-k] = a[d2.front()];
 
          if(b1[n-k]-b2[n-k]+1==k)ans++;
          
                  
          printf("%d\n",ans);
          
          scanf("\n");
          return 0;    
}
  