#include <bits/stdc++.h>

using namespace std;

#define s(x) scanf("%d", &x)
#define mp make_pair
#define get getchar_unlocked

pair <int, int> p[2][400044];
int pwr[30];

inline int scan()
{
    int n = 0, ch = get();
    while (ch < '0' || ch > '9')
        ch = get();
    while (ch >= '0' && ch <= '9') {
        n = (n << 3) + (n << 1) + ch - '0';
        ch = get();
    }
    return n;
}

int main()
{
    int n, k, i;
    n = scan();
    k = scan();
    int mrk[n+1];
    for (i = 0; i < 30; ++i)
        pwr[i] = (1 << i);
    memset(mrk, 0, sizeof(mrk));
    int a[n];
    for (i = 0; i < n; i++) {
        a[i] = scan();
        p[0][i] = mp(a[i], a[i]);
    }
    if (k == 1) {
        cout << n << endl;
        return 0;
    }
    int j, tmp, pr = 0, c = 1;
    int lg = log2(k);
    for (j = 1; j <= lg; j++) {
        for (i = 0; (i-1+pwr[j]) < n; i++) {
            if (p[pr][i].second > p[pr][i+pwr[j-1]].second)
                p[c][i].second = p[pr][i].second;
            else
                p[c][i].second = p[pr][i+pwr[j-1]].second;
            if (p[pr][i].first < p[pr][i+pwr[j-1]].first)
                p[c][i].first = p[pr][i].first;
            else
                p[c][i].first = p[pr][i+pwr[j-1]].first;
        }
        swap(pr, c);
    }
    int ans = 0, rep = 0;
    for (i = 0; i < k; i++) {
        if (mrk[a[i]] == 1)
            rep++;
        mrk[a[i]]++;
    }
    int x, y;
    if (!rep) {
        tmp = k-pwr[lg];
        if (p[pr][0].second > p[pr][tmp].second)
            y = p[pr][0].second;
        else
            y = p[pr][tmp].second;
        if (p[pr][0].first < p[pr][tmp].first)
            x = p[pr][0].first;
        else
            x = p[pr][tmp].first;
        if (y-x+1 == k)
            ans++;
    }
    int st;
    for (i = k, j = 0; i < n; i++, j++) {
        if (mrk[a[i]] == 1)
            rep++;
        mrk[a[i]]++;
        mrk[a[j]]--;
        if (mrk[a[j]] == 1)
            rep--;
        if (!rep) {
            tmp = i+1-pwr[lg];
            st = j+1;
            if (p[pr][st].second > p[pr][tmp].second)
                y = p[pr][st].second;
            else
                y = p[pr][tmp].second;
            if (p[pr][st].first < p[pr][tmp].first)
                x = p[pr][st].first;
            else
                x = p[pr][tmp].first;
            if (y-x+1 == k)
                ans++;
        }
    }
    cout << ans << endl;
    return 0;
}
