#include <iostream>
#include <cstdio>
#include <algorithm>
#include <queue>
using namespace std;

int rd() {
	char c = getchar_unlocked();
	while(c<'0' || c>'9') c = getchar_unlocked();
	int ret = 0;
	while(c>='0' && c<='9') {
		ret = 10 * ret + c - 48;
		c = getchar_unlocked();
	}
	return ret;
}

int main(){
	int n,w;
	n=rd(); w=rd();
	int a[n];
	for(int i=0; i<n; i++)
		a[i] = rd();

	deque<int> dmin,dmax;
	for(int i=0; i<w; i++){
		while(!dmin.empty() && dmin.back()>=a[i])
			dmin.pop_back();
		dmin.push_back(a[i]);

		while(!dmax.empty() && dmax.back()<=a[i])
			dmax.pop_back();
		dmax.push_back(a[i]);
	}

	int count=0;
	if(dmax.front()-dmin.front()+1==w)
		count++;
	for(int i=w; i<n; i++){
		if(a[i-w]==dmin.front())
			dmin.pop_front();
		if(a[i-w]==dmax.front())
			dmax.pop_front();

		while(!dmin.empty() && dmin.back()>=a[i])
			dmin.pop_back();
		dmin.push_back(a[i]);

		while(!dmax.empty() && dmax.back()<=a[i])
			dmax.pop_back();
		dmax.push_back(a[i]);
		if(dmax.front()-dmin.front()+1==w)
			count++;
	}
	cout<<count<<endl;
	return 0;
}
