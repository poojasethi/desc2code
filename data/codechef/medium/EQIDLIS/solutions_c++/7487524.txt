#include<bits/stdc++.h>
#include<cstdio>
#include<iostream>
#define all(c) c.begin(),c.end()
#define sz(c) c.size()
#define mp make_pair
#define pb push_back
#define gc() getchar_unlocked()
#define MAX 3001
using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> pii;
typedef vector<pii> vpii;
vpii intervals;
vpii merged;
int perm[MAX];
static inline int fastio()
{

    int x=0;
    char c=getchar_unlocked();
    while(c<'0'||c>'9')
        c=gc();
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=gc();
    }
    return x;
}
int a[MAX];
int main()
{
    int t,n;
    t=fastio();
    while(t--)
    {
        n=fastio();
        int i;
        bool possible=true;
        int sum=0;
        int cnt=0;
        for(i=0;i<n;i++)
           {
            a[i]=fastio();
            sum+=a[i];
           }
           if(sum%n)
           {
               possible=false;
           }
           else
           {
               int mxidx=max_element(a,a+n)-a;
               int mnidx=min_element(a,a+n)-a;
               int mx=a[mxidx];
               int mn=a[mnidx];
               while(mx!=mn)
               {
                cnt++;
                   int d=(ceil)((mx-mn)/2);
                   a[mxidx]-=d;
                   a[mnidx]+=d;
                   
                    mxidx=max_element(a,a+n)-a;
               mnidx=min_element(a,a+n)-a;
               mx=a[mxidx];
               mn=a[mnidx];
               }
           }
    printf(possible?"%d\n":"-1\n",cnt);
    }
    return 0;





           }



