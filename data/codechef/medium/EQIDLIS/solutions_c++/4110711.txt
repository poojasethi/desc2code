#include <stdio.h>
#include <iostream>
#include <algorithm>
#include <math.h>
#define INF 1000000000
using namespace std;
int getchar_unlocked( void );
//inline int getchar_unlocked() { return getchar(); }
inline void fastRead_int(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }

    if(neg)
    	x = -x;
}

int a[3005];
int p=-1,q=INF,maxpos,minpos;

void max1(int n)
{
    p=-1;q=INF;
for(int i=0;i<n;++i)
{
    if(p<=a[i])
    {
        p=a[i];
        maxpos=i;
    }
    if(q>=a[i])
    {
        q=a[i];
        minpos=i;
    }
}
}



int main()
{
    int test;
    fastRead_int(test);

    while(test--)
    {
        int n;
        fastRead_int(n);

        int c=0,s=0;

        for(int i=0;i<n;++i)
        {
            fastRead_int(a[i]);

            s+=a[i];
        }
double sum = (double)s/(double)n;
        if((sum-(int)sum)!=0)
        {
            printf("-1\n");
        }
        else
        {
          //  cout<<"s = "<<s<<"  n ="<<n<<" sum in double = "<<sum<<"  sum in int = "<<(int)sum<<endl;




            int su=(int)s/n;
              for(int i=0;i<n;++i)
                {
                    max1(n);
                   // cout<<"maxpos = "<<maxpos<<"  minpos = "<<minpos<<" p="<<p<<" q="<<q<<endl;
                    int mov=ceil((p-q)/2);
                    if(mov>0)
                    {
                        a[maxpos]-=mov;
                        a[minpos]+=mov;
                        c++;
                    }

                }



                for(int i=0;i<n;i++)
                {
                    if(a[i]!=su)
                    {

                         max1(n);
                   // cout<<"maxpos = "<<maxpos<<"  minpos = "<<minpos<<" p="<<p<<" q="<<q<<endl;
                    int mov=ceil((p-q)/2);
                    if(mov>0)
                    {
                        a[maxpos]-=mov;
                        a[minpos]+=mov;
                        c++;
                    }

                     i=0;
                    }
                }

                /*

                cout<<endl;

                 for(int i=0;i<n;++i)
        {
            cout<<a[i]<<" ";
        }

             cout<<endl;

*/


        printf("%d\n",c);

        p=-1;q=INF;


        }

    }
    return 0;
}
