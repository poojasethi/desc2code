//akartik80

#include <iostream>
#include <cstdio>
#include <algorithm>

#define get getchar_unlocked
#define put putchar//_unlocked
#define li long int
#define ll long long int
#define pb push_back
#define mp make_pair
#define pd(x) printf("%d", x)
#define pdn(x) printf("%d\n", x)
#define pld(x) printf("%ld", x)
#define pldn(x) printf("%ld\n", x)
#define plld(x) printf("%lld", x)
#define plldn(x) printf("%lld\n", x)
#define sd(x) scanf("%d", &x)
#define sld(x) scanf("%ld", &x)
#define slld(x) scanf("%lld", &x)
#define ss(x) scanf("%s", x)
#define sc(x) scanf("%c", &x)
#define pc(x) printf("%c", x)
#define ps(x) printf("%s", x)
#define psn(x) printf("%s\n", x)

using namespace std;

inline int scan()
{
	int n = 0, sign = 1, ch = get();

	while (ch < 48 || ch > 57) {
		if (ch == '-') {
			sign = -1;
		}

		ch = get();
	}

	while (ch >= 48 && ch <= 57) {
		n = (n << 3) + (n << 1) + ch - 48;
		ch = get();
	}

	return n * sign;
}

int main()
{
	int t, k, i;
	ll sum, temp, n, a[100002];
	bool flag;

	t = scan();

	while (t--) {
        slld(n);
		k = scan();

		for (i = 0; i < k; i++) {
            a[i] = scan();
		}

		if (a[0] == 1) {
            printf("Chef\n");
            continue;
		}

		sort(a, a + k);
		sum = flag = 0;

		for (i = 0; i < k; i++) {
            temp = a[i] - 1;

            if (((temp * (temp + 1)) / 2) - sum < a[i]) {
                flag = 1;
                break;
            }

            sum += a[i];
		}

		if (flag == 0) {
            temp = n * (n + 1) / 2 - sum;
		}

        if (temp % 2) {
            printf("Mom\n");
        } else {
            printf("Chef\n");
        }
	}
}
