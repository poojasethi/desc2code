#include<iostream>
#include<iomanip>
#include<stdio.h>
#include<cstdio>
#include<unistd.h>
#include<stdint.h>
#include<stdlib.h>
using namespace std;
double f[100001][32];
int t,n,k;
class FastInput {
	public:
		FastInput() {
			m_dataOffset = 0;
			m_dataSize = 0;
			m_v = 0x80000000;
		}
		uint32_t ReadNext() {
			if (m_dataOffset == m_dataSize) {
				int r = read(0, m_buffer, sizeof(m_buffer));
				if (r <= 0) return m_v;
				m_dataOffset = 0;
				m_dataSize = 0;
				int i = 0;
				if (m_buffer[0] < '0') {
					if (m_v != 0x80000000) {
						m_data[m_dataSize++] = m_v;
						m_v = 0x80000000;
					}
					for (; (i < r) && (m_buffer[i] < '0'); ++i);
				}
				for (; i < r;) {
					if (m_buffer[i] >= '0') {
						m_v = m_v * 10 + m_buffer[i] - 48;
						++i;
					} else {
						m_data[m_dataSize++] = m_v;
						m_v = 0x80000000;
						for (i = i + 1; (i < r) && (m_buffer[i] < '0'); ++i);
					}
				}
			}
			return m_data[m_dataOffset++];
		}
	public:
		uint8_t m_buffer[32768];
		uint32_t m_data[16384];
		size_t m_dataOffset, m_dataSize;
		uint32_t m_v;
};
 
FastInput fi;
void calc()
{
	for(register int n=1;n<=100000;n++)
	{
		 f[n][0]=(double)n;
		for(register int k=1;k<32;k++)
		{
			f[n][k]=(1.0/n)*((f[n-1][k-1])+((n-1)*(f[n-1][k])));
		}
	}
}
int main()
{
	calc();
	t=fi.ReadNext();
	//scanf("%d",&t);
	while(t--)
	{
		n=fi.ReadNext();k=fi.ReadNext();
		//scanf("%d%d",&n,&k);
		if(k>=32) printf("0.000000\n");
		else
		{
			printf("%f\n",f[n][k]);
		}
	}
	return 0;
} 