#include <iostream>
#include <cstdio>
#include <map>
#include <set>
#include <string>
#include <cstring>
#include <sstream>
#include <vector>
#include <queue>
#include <deque>
#include <bitset>
#include <cmath>
#include <stack>
#include <algorithm>
#include <cctype>
#include <fstream>
#include <cassert>
#include <iomanip>
using namespace std;
#define pb push_back
#define FOR(i,ini,fin) for(int i=(int)ini;i<(int)fin;i++)
#define FOR_INC(i,ini,fin,inc) for(int i=(int)ini;i<(int)fin;i+=inc)
#define FOR_IT(iter,C) for(typeof(C.begin()) iter = C.begin();iter!=C.end();iter++)
#define all(A) A.begin(), A.end()
#define mem(x,val) memset(x,val,sizeof(x))
#define EPS 1e-9
#define MAY 100010
#define INF 2000000000
#define MOD 1000000007
#define PI 3.141592654
typedef long long LL;
typedef double D;
#define G(x) (D)(x)
#define F(x) (LL)(x)
typedef pair<int,int>par;
typedef pair<int,par>arco;
#define mp make_pair
#define sc second
#define fs first

D memo[MAY][38];
int yes[MAY][38];

D f(int n, int k){
    if(k>36||n<=0)return G(0.0);
    if(n>=0&&k==0)return G(n); //base
    if(yes[n][k])return memo[n][k];
    D prob=0;
    FOR(x,0,n)prob=G(prob)+G(f(x,k-1));
    yes[n][k]=1;
    return memo[n][k]=G(G(prob)/G(n));
}
int main(){
    mem(memo,0);
    FOR(K,0,38){
        D sum=G(0.0);
        FOR(N,0,MAY){
            if(N==0)memo[N][K]=0;
            else if(K==0)memo[N][K]=G(N), sum+=G(N); //base
            else sum+=G(memo[N-1][K-1]), memo[N][K]=G(G(sum)/G(N));
        }
    }
    //puts("ok");
    int t;scanf("%d",&t);
    int n,k;
    while(t--){
        scanf("%d %d",&n,&k);
        if(k>36)cout<<0<<endl;
        else printf("%.10lf\n",memo[n][k]);
    }
    return 0;
}
