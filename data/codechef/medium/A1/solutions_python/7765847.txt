__author__ = 'Deepak'
t=int(raw_input())
def f(v, i, S, memo):
  if i >= len(v): return 1 if S == 0 else 0
  if (i, S) not in memo:  # <-- Check if value has not been calculated.
    count = f(v, i + 1, S, memo)
    count += f(v, i + 1, S - v[i], memo)
    memo[(i, S)] = count  # <-- Memoize calculated result.
  return memo[(i, S)]

def g(v, S, memo):
  subset = []
  for i, x in enumerate(v):
    # Check if there is still a solution if we include v[i]
    if f(v, i + 1, S - x, memo) > 0:
      subset.append(x)
      S -= x
  return subset

while(t>0):
    memo = dict()
    b=[]
    n,sum=map(int,raw_input().split())
    while(n>0):
        note=int(input())
        b.append(note)
        n-=1

    if f(b, 0, sum, memo) == 0:
        print("No")
    else:
        print("Yes")


    t-=1