#include<iostream>
using namespace std;
bool isSubsetSum(int*,int n,int sum);
bool isSubsetSum(int *sets, int n, int sum)
{
   // Base Cases
   if (sum == 0)
     return true;
   if (n == 0 && sum != 0)
     return false;

   // If last element is greater than sum, then ignore it
   if (sets[n-1] > sum)
     return isSubsetSum(sets, n-1, sum);

   /* else, check if sum can be obtained by any of the following
      (a) including the last element
      (b) excluding the last element   */
   return isSubsetSum(sets, n-1, sum) || isSubsetSum(sets, n-1, sum-sets[n-1]);
}
int main(){
int t;
cin>>t;
int n,m;
while(t--)
{
    cin>>n>>m;
    int sets[n];
    int *ptr=sets;
   for(int i=0;i<n;i++)
    {
        cin>>*ptr++;
    }
  /*  for(int i=0;i<n;i++)
    {
        cout<<sets[i]<<" ";
    }*/
    if(isSubsetSum(sets,n,m))
        cout<<"Yes"<<endl;
    else
        cout<<"No"<<endl;
}
}
