/**
	* Author    : Arif Ahmad
	* Date      :
	* Algo      :
	* Difficulty:
*/

#include <bits/stdc++.h>
using namespace std;

#define INF_MAX 	2147483647
#define INF_MIN 	-2147483648
#define INF 		(1 << 30)
#define EPS			1e-9
#define PI 			acos(-1.0)
#define N 		    2 + 1000
#define MOD			10000000007
#define sz(x) 		(int)(x).size()
#define all(x) 		(x).begin(), (x).end()
#define pb 			push_back
#define mp			make_pair
#define ms(x, a) 	memset((x), (a), sizeof(x))
#define F           first
#define S           second
#define rep(i,a,b)  for(int i=(a); i<(b); ++i)
#define repC(i,x) 	for(size_t i=0; i<x.size(); ++i)
#define repIT(it,c) for(__typeof((c).begin()) it=(c).begin(); it!=(c).end(); ++it)
#define nn          '\n'

typedef long long 		LL;
typedef pair<int,int> 	pii;
typedef vector<int> 	vi;
typedef vector<string> 	vs;
typedef vector<char>	vc;
typedef vector<bool>    vb;
typedef vector< pii >   vii;
typedef map<string,int> msi;
typedef map<int,int>	mii;
typedef map<char,int>   mci;
typedef map<int,string>	mis;

template<class T> T Abs(T x) {return x>0 ? x : -x;}
template<class T> T Max(T a, T b) {return a>b ? a : b;}
template<class T> T Min(T a, T b) {return a<b ? a : b;}
template<class T> T gcd(T a, T b) {return (b ? gcd(b,a%b) : a);}
bool isVowel(char ch){ch=tolower(ch);return(ch=='a' || ch=='e' || ch=='i' || ch=='o' || ch=='u');}

//int dx[4] = {-1, 0, 0, 1};
//int dy[4] = {0, -1, 1, 0};
//int dx[8] = {-1, -1, -1, 0, 0, 1, 1, 1};
//int dy[8] = {-1, 0, 1, -1, 1, -1, 0, 1};

bool sum[N][N*20];
vi a;

bool subset_sum(int n, int w)
{
    rep(i, 0, n+1) sum[i][0] = true;
    rep(i, 1, w+1) sum[0][i] = false;

    rep(j, 1, w+1)
    {
        rep(i, 1, n+1)
        {
            if(j < a[i]) sum[i][j] = sum[i-1][j];
            else sum[i][j] = sum[i-1][j] or sum[i-1][j-a[i]];
        }
    }

    return sum[n][w];
}


int main()
{
    ios_base :: sync_with_stdio(0);
    cin.tie(0);

	#ifndef ONLINE_JUDGE
		freopen("in.txt", "r", stdin);
	#endif

	int i, j, k, n, m, tc;

    cin >> tc;
	while(tc--)
	{
	    cin >> n >> m;

	    a.resize(n + 1);
	    rep(i, 1, n+1) cin >> a[i];

	    if(subset_sum(n, m)) cout << "Yes" << nn;
        else cout << "No" << nn;
	}

	return 0;
}
