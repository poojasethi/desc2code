#include<stdio.h>
int arr[25],brr[25];
void merge(int b[],int start,int mid ,int end)
{
    int lctr=start,rctr=mid,k=0;
    for(k=start;lctr<mid&&rctr<end;k++)
    {
        if(b[lctr]<b[rctr])
        {
            brr[k]=b[lctr];
            lctr++;
        }

        else
        {
            brr[k]=b[rctr];
            rctr++;
        }
    }
    while(lctr<mid)
    {
        brr[k]=b[lctr];
        lctr++;
        k++;
    }

    while(rctr<end)
    {
        brr[k]=b[rctr];
        rctr++;
        k++;
    }

    for(int i=start;i<end;i++)
    {
        b[i]=brr[i];
    }
}
int func(int k,int ctr)
{
    if(ctr==0)
    return 1;

    if(k==0&&ctr!=0)
    return 0;

    if(arr[k-1]>ctr)
    return func(k-1,ctr);

    else
    return func(k-1,ctr)||func(k-1,ctr-arr[k-1]);
}
void mergesort(int ar[],int start, int end)
{
    int size=end-start;

    if(size==1)
    return;

    int mid=size/2;

    //printf("Sizesssss %d %d %d\n",start,mid,end);
    //getchar();
    mergesort(ar,start,start+mid);
    mergesort(ar,start+mid,end);
    merge(ar,start,start+mid,end);
}
int main()
{
    int t,m,n,i,j,k,ans;
    int dp[20000][2];

    scanf("%d",&t);

    while(t--)
    {
        scanf("%d %d",&n,&m);

        for(int i=0;i<n;i++)
        {
            scanf("%d",&arr[i]);
        }

        mergesort(arr,0,n);

        ans=func(n,m);

        if(ans==1)
        printf("Yes\n");

        else
        printf("No\n");
    }
    return 0;
}
