#include <cstdio>
#include <stdlib.h>
#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <list>

using namespace std;
typedef long long int ll;
typedef multiset<ll,less<ll> > ms;

ll M = 1000000007;

ll modpow(int a,int n){	// calc a^n (mod M)
	int r=1;
	for(ll x=a;n;n>>=1,x=(x*x)%M) if(n&1) r=(r*x)%M;
	return r;
}

int inv(int a){	// find x s.t. a*x=1 (mod M) (M:prime)
	return modpow(a,M-2);
}

ll modnCr(ll n,ll r){	// calc nCr (mod M) (M:prime)
	if(n<r)		return 0;
	if(n-r<r)	r=n-r;

	ll res=1;
	for(int i=r;i>0;i--){
		res=(res*((n-i+1)%M))%M;
		res=(res*inv(i))%M;
	}
	return res;
}

ms values;

int main()
{
    ll t,i,temp;
    cin>>t;

    while(t--)
    {
        ll n;
        cin>>n;

        ll max = 0,maxCount = 0;

        for(i=0;i<n;i++)
        {
            cin>>temp;
            values.insert(temp);

        }

        ms::const_iterator e;

        e = --values.end();
        max = *e;
        maxCount = values.count(max);
        //cout<<"max "<<max<<endl;

        //cout<<"maxCount is "<<maxCount<<endl;

        if(n==1 )
        {
            cout<<"1"<<endl;
            continue;
        }
        
        

        cout<<modpow(2,maxCount)-1<<endl;

        values.clear();

    }
}
