#include<cstdio>
#include<vector>
#include<set>
#include<map>
#include<queue>
#include<algorithm>
#include<string>
#include<utility>
#include<cmath>
#include<cstring>
#include<cassert>
using namespace std;

#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)

#define ll long long

ll read_int(ll mn, ll mx, char next){
  int c, fg = 1, res = 0;
  c=getchar();
  if(c=='-') fg = -1, c = getchar();
  assert('0'<=c && c<='9');
  res = c - '0';
  for(;;){
    c = getchar();
    if(c==next) break;
    assert(res!=0);
    assert('0'<=c && c<='9');
    res = res * 10 + (c - '0');
  }
  res *= fg;
  assert(mn<=res && res<=mx);
  return res;
}


#define M 1000000007

int main(){
  int T, N, K;

  int i, j, k;
  static int dp[1001][2];

  T = read_int(0, 100, '\n');
  while(T--){
    N = read_int(2, 1000, ' ');
    K = read_int(1, 10, '\n');

    // dp[i][0] : The number of the ways that Messi has ball after i passes
    // dp[i][1] : The number of the ways that Messi does not have ball after i passes
    dp[0][0] = 1; dp[0][1] = 0;
    REP(i,1,N+1){
      dp[i][0] = ((ll)dp[i-1][1] * K) % M;
      dp[i][1] = (dp[i-1][0] + (ll)dp[i-1][1] * (K-1)) % M;
    }

    printf("%d\n",dp[N][0]);
  }
  

  assert( scanf("%*c")==EOF );
  return 0;
}
