#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<vector>
#include<queue>
#include<algorithm>
#define mod 1000000007
typedef long long li;
using namespace std;

typedef struct data
{
	li q;
	li r;
} data;

/*class comparison		//for Priority Queue
{
	public : 
	bool operator()(customer a,customer b)
	{
		int pra=0,prb=0;
		pra=a.next;
		prb=b.next;
		if(pra<prb)
			return true;
		else
			return false;
	}
};

int comp(const void *a, const void *b)
{
	data m = *((data *)a);
	data n = *((data *)b);
	if(m.a>n.a)
		return 1;
	else if(m.a<n.a)
		return -1;
	else if(m.a==n.a)
	{
		if(m.d>n.d)
			return 1;
		else
			return -1;
	}
}*/

/*li exp(li x, li y)
{
	if(y==0)
		return 1;
	li z=0;
	z=exp(x,y/2);
	z=(z*z)%mod;
	if((y%2)==1)
		z=(z*x)%mod;
	return z;
}*/
	
int main()
{
	int T=0,N=0,K=0,p=0,s=0,m=0,i=0,x=0,j=0,k=0,len=0,end=0,max=0,c=0,temp=0,prev=0,cur=0;
	int R=0;
	int Dp[2][11];
	//char S[20005];
	//char c=' ';
	scanf("%d",&T);
	getchar();
	while(T--)
	{
		R=0;
		x=0;
		c=0;
		for(i=0;i<=1;i++)
		{
			for(j=0;j<=10;j++)
			{
				Dp[i][j]=0;
			}
		}
		Dp[0][0]=1;
		prev=0;
		cur=1;
		scanf("%d%d",&N,&K);
		for(i=0;i<N;i++)
		{
			for(j=0;j<=K;j++)
			{
				Dp[cur][j]=0;
				for(k=0;k<=K;k++)
				{
					if(j==k)
						continue;
					Dp[cur][j]=(Dp[cur][j]+Dp[prev][k])%mod;
				}
			}
			temp=prev;
			prev=cur;
			cur=temp;
		}
		/*for(i=0;i<=4;i++)
		{
			for(j=0;j<=9;j++)
			{
				printf("%lld\t",Dp[i][j]);
			}
			printf("\n");
		}*/
		printf("%d\n",Dp[prev][0]);		
	}
	return 0;
}

	
