#include<bits/stdc++.h>
using namespace std;
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration
#define pb push_back
#define mp make_pair
#define all(c) (c).begin(),(c).end()
#define F first
#define S second
#define MOD 1000000007
#define newl cout<<"\n"
#define newli "\n"
#define itn int
#define reutrn return
typedef long long int lld;
//-----------------------------------------------------
lld gcd(lld m, lld n)
{
    if(n == 0)
        return m;
    return gcd(n, m % n);
}
//---------------------------------------------------------
lld powmod(lld a,lld b)
{
    if(b==0)return 1;
    lld x=powmod(a,b/2);
    lld y=(x*x)%MOD;
    if(b%2)
        return (a*y)%MOD;
    return y%MOD;
}
//-------------------------------------------------------

int main()
{
    int t,n,k;
    cin>>t;
    while(t--)
    {
        cin>>n>>k;
        int dp[n+1][k+1];
        memset(dp,0,sizeof(dp));
        rep(i,1,k+1)
        {
            dp[1][i]=1;
        }
        rep(i,2,n+1)
        {
            rep(j,0,k+1)
            {
                rep(k1,0,k+1)
                {
                    if(k1!=j)
                    {
                        dp[i][j]+=dp[i-1][k1];
                        dp[i][j]=dp[i][j]%MOD;
                    }
                }
            }
        }
        lld ans=0;
      /*  rep(i,1,k+1)
        {
            ans=ans+dp[n][i];
            ans=ans%MOD;
        }*/
        cout<<dp[n][0]<<"\n";
    }

    return 0;
}
