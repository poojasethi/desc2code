#include<iostream>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<fstream>
using namespace std;
#define abs(x) ((x)>0?(x):-(x))
#define M 1000000007
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define tkint(n) scanf("%d",&n)
#define tkchar(ch) scanf("%c",&ch)
#define tklong(n) scanf("%I64d",&n)
lld dp[1002];
lld modular_pow(lld base, lld exponent, int modulus)
{
    lld result = 1;
    if(base==1)return 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
int main()
{
	int t,n,k;
	cin>>t;
	while(t--)
	{
		cin>>k>>n;
		dp[1]=0;
		dp[2]=n;
		for(int i=3;i<=k;++i)dp[i]=(modular_pow((lld)n,(lld)(i-1),M)+M-dp[i-1])%M;
		cout<<dp[k]<<endl;
	}
}
