/*                              Dynamic Programming
                                FC Barcelona - Codechef
                                Top Down

Question Explanation and How to Think of the Solution


*/

#include<iostream>
#include<cstring>
#define ll long long
#define MOD 1000000007
using namespace std;

ll recursion(ll passesLeft,ll ifMessi, ll players);

ll dp[10001][2];

int main(){

    ios_base::sync_with_stdio(false);
    cin.tie(0);

    int w;
    cin>>w;

    while(w--){

        memset(dp,0,sizeof dp);
        ll n,k;
        cin>>n>>k;
        recursion(n,1,k);
        cout<<dp[n][1]%MOD<<endl;

    }

    return 0;
}

ll recursion(ll passesLeft,ll ifMessi, ll players){

    if(dp[passesLeft][ifMessi]!=0)
        return dp[passesLeft][ifMessi];
    else{
        if(passesLeft==2&&ifMessi==1){
            dp[passesLeft][ifMessi]=players%MOD;
            return dp[passesLeft][ifMessi];
        }

        else if(passesLeft==2&&ifMessi==0){
            dp[passesLeft][ifMessi]=(players-1)%MOD;
            return dp[passesLeft][ifMessi];
        }

        else if(ifMessi==1){
            dp[passesLeft][ifMessi]=((players)%MOD)*(recursion(passesLeft-1,0,players)%MOD);
            return dp[passesLeft][ifMessi];
        }
        else{
            dp[passesLeft][ifMessi]=(((players-1)%MOD)*(recursion(passesLeft-1,0,players))%MOD+recursion(passesLeft-1,1,players)%MOD);
            return dp[passesLeft][ifMessi];
        }
    }

}
