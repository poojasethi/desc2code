#include <cstring>
#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstdio>
using namespace std;
#define mod 1000000007
typedef long long LL;
struct Matrix{
    LL m[12][12];
}E,D;
void init(){
    for(int i=1;i<=11;i++){
        for(int j=1;j<=11;j++){
            E.m[i][j]=(i==j);
        }
    }
}
Matrix Multi(Matrix A,Matrix B,int n){
    Matrix ans;
    for(int i=1;i<=n;i++){
        for(int j=1;j<=n;j++){
            ans.m[i][j]=0;
            for(int k=1;k<=n;k++){
                ans.m[i][j]+=A.m[i][k]*B.m[k][j];
                ans.m[i][j]%=mod;
            }
        }
    }
    return ans;
}
Matrix Pow(Matrix A,int k,int n){
    Matrix ans=E;
    while(k){
        if(k&1) k--,ans=Multi(ans,A,n);
        else k>>=1,A=Multi(A,A,n);
    }
    return ans;
}
int main(){
    init();
    int T;
    scanf("%d",&T);
    while(T--){
        int n,k;
        scanf("%d%d",&n,&k);
        for(int i=1;i<=k+1;i++){
            for(int j=1;j<=k+1;j++){
                D.m[i][j]=1-(i==j);
            }
        }
        Matrix ans;
        memset(ans.m,0,sizeof(ans.m));
        ans.m[1][1]=1;
        ans=Multi(Pow(D,n,k+1),ans,k+1);
        printf("%I64d\n",ans.m[1][1]);
    }
    return 0;
}
