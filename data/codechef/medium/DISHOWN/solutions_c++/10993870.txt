#include<iostream>
#include<cstdio>
using namespace std;

int rank[10000];
int parent[10000];
int s[10000];

void makeSet(int v){
	parent[v]=v;
	rank[v]=s[v];
}

int findSet(int v){
	return (v==parent[v])?v:(parent[v]=findSet(parent[v]));
}

bool unionSet(int a,int b){
	a=findSet(a);
	b=findSet(b);
	if(a==b)
		return false;

	if(rank[a]>rank[b])
		parent[b]=a;
	else if(rank[b]>rank[a])
		parent[a]=b;
		
	return true;
}
		

int main(){
	int t,n,q,x,y;
	char type;
	scanf("%d",&t);
	while(t--){
		scanf("%d",&n);
		for(int i=0;i<n;i++){
			cin>>s[i];
			makeSet(i);
		}

		scanf("%d",&q);
		while(q--){
			scanf("\n%c",&type);
			if(type=='0'){
				scanf("%d%d",&x,&y);
				if(!unionSet(x-1,y-1))
					printf("Invalid query!\n");
			}
			else{
				scanf("%d",&x);
				printf("%d\n",findSet(x-1)+1);
			}
		}
	}
				
	return 0;
}
	
