#include<bits/stdc++.h>
using namespace std;

int find(int parent[], int idx)
{
	if(parent[idx] == idx)
		return idx;
	parent[idx] = find(parent,parent[idx]);
	return parent[idx];
}

int Union(int x,int y,int parent[],int s[])
{
	int px = find(parent,x);
	int py = find(parent,y);
	if(px == py)
		return 0;
	else
	{
		if(s[px] > s[py])
		{
			parent[py] = px;
			return 1;
		}
		else if(s[px] < s[py])
		{
			parent[px] = py;
			return 1;
		}
	}
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,i,q;
		scanf("%d",&n);
		int s[n+1],parent[n+1];
		for(i=1 ;i<=n; i++)
			scanf("%d",&s[i]);
		for(i=1; i<=n; i++)
			parent[i] = i;
		scanf("%d",&q);
		int ch, check;
		while(q--)
		{
			scanf("%d",&ch);
			if(ch==0)
			{
				int x,y;
				scanf("%d%d",&x,&y);
				check = Union(x,y,parent,s);
				if(check == 0)
					printf("Invalid query!\n");
			}
			else if(ch==1)
			{
				int x,y;
				scanf("%d",&x);
				y = find(parent,x);
				printf("%d\n",y);
			}
		}
	}
	return 0;
}