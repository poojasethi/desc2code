#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e6 + 10;
int S[MAXN];
int parent[MAXN];
int findP(int x){
    return (parent[x] == x ? x : parent[x] = findP(parent[x]));
}
void merge(int x, int y){
    int px = findP(x);
    int py = findP(y);
    if(px != py){
        if(S[px] > S[py]){
            parent[py] = px;
        } else if(S[py] > S[px]){
            parent[px] = parent[py];
        }
    }
}
int main(){
    int t;
    cin >> t;
    while(t--){
        int N;
        scanf("%d", &N);
        for(int i = 1;i <= N;++i){
            scanf("%d", &S[i]);
            parent[i] = i;
        }
        int Q;
        scanf("%d", &Q);
        while(Q--){
            int type;
            scanf("%d", &type);
            if(type == 0){
                int x, y;
                scanf("%d%d", &x, &y);
                if(findP(x) == findP(y)){
                    printf("Invalid query!\n");
                } else {
                    merge(x, y);
                }
            } else{
                int x;
                scanf("%d", &x);
                printf("%d\n", findP(x));
            }
        }
    }
    return 0;
}
