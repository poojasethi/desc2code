#Problem Link: https://www.codechef.com/problems/SUMTRIAN
#Input n - no. of test cases. Then n test cases follow. Each test case starts with the number of lines which is followed by their content.
SUM = list()
def Path(tlevel,Array) :
    for level in range(1,tlevel+1) :
        for node in range(level) :
            if level == 1 :
                SUM.append(Array[0])
            elif level == 2 :
                SUM.append(Array[1+node]+SUM[0])
            elif node == level -1 :
                SUM.append(SUM[((level-1)*(level-2))/2 + node - 1] + Array[((level)*(level-1))/2 + node])
            elif node == 0 :
                SUM.append(SUM[(level -1)*(level-2)/2 + node] + Array[(level)*(level-1)/2 + node])
            elif SUM[((level-1)*(level-2))/2 + node - 1] > SUM[((level -1)*(level-2))/2 + node ] :
                SUM.append(SUM[((level-1)*(level-2))/2 + node - 1] + Array[((level)*(level-1))/2 + node])
            else :
                SUM.append(SUM[(level -1)*(level-2)/2 + node] + Array[(level)*(level-1)/2 + node]) 
            
        




inp = raw_input()
t = int(inp) #Test cases

for i in range(t) :
    inp = raw_input()
    n = int(inp) #No. of lines
    SIZE = (n*(n+1))/2
    Array = list()
    temp_list = list()
    for j in range(1,n+1) :
        inp = raw_input()
        temp_list = inp.split()
        for k in range(j) :
            Array.append(int(temp_list[k]))
    Path(n,Array)
    MAX = max(SUM)
    print MAX
    #print SUM
    SUM = list()