#include<stdio.h>
#include<iostream>
#include<algorithm>
#define MAX 1000000

#define endl '\n'
#define true 1
#define false 0
using namespace std;

typedef long long int dll;


//fast output

#define pc(x) putchar_unlocked(x);
    inline void writeInt (int n)
    {
        int N = n, rev, count = 0;
        rev = N;
        if (N == 0) { pc('0'); pc('\n'); return ;}
        while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
        rev = 0;
        while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
        while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
        while (count--) pc('0');
    }

//end

#define gc getchar_unlocked
dll read_dll() {
/*
  char c = gc();
  while(c<'0' || c>'9') c = gc();
  dll ret = 0;
  while(c>='0' && c<='9') {
    ret = 10 * ret + c - 48;
   // ret=ret<<3 + ret<<1 + c-48;
    c = gc();
  }
  return ret;
  */

dll n=0;

dll ch=getchar_unlocked();

while( ch <48 )ch=getchar_unlocked();

while( ch >47 )

n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();

return n;

}
int read_int() {
  /*
  char c = gc();
  while(c<'0' || c>'9') c = gc();
  int ret = 0;
  while(c>='0' && c<='9') {
    ret = 10 * ret + c - 48;
   //ret=ret<<3 + ret<<1 + c-48;
    c = gc();
  }
  return ret;
  */

  int n=0;

char ch=getchar_unlocked();

while( ch <48 )ch=getchar_unlocked();

while( ch >47 )

n = (n<<3)+(n<<1) + ch-'0', ch=getchar_unlocked();

return n;
}

/* * * * * *
- - -

0 1 2 3 4 5
  * * *
*/
//char R[1000002];

int main()
{
    int t=read_int();
    while(t--)
    {
        int n=read_int();
        int a[n][n];
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<=i;j++) scanf("%d",&a[i][j]);
        }

        for(int i=n-2;i>=0;i--)
            for(int j=0;j<=i;j++)
                a[i][j]=a[i][j]+ max(a[i+1][j],a[i+1][j+1]);

        printf("%d\n",a[0][0]);



    }

    return 0;
}
