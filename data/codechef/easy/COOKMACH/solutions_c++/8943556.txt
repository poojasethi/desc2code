/**
 	Name: Shivam Mishra
 	handle: shivam217
 **/
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <set>
#include <assert.h>
#include <cstring>
#include <string>
#include <string.h>
#include <queue>
#include <stack>
#include <vector>
#include <map>
#include <time.h>
#include <climits>

using namespace std;

#define FOR(i,a,b) for(int i=a;i<b;++i)
#define FORR(i,a,b) for(int i=a;i>=b;--i)
#define FORC(it,container) for(typeof(container.begin()) it=container.begin();it!=container.end();++it)
#define INT(x) scanf("%d",&x)
#define LLD(x) scanf("%lld",&x)
#define STR(x) scanf("%s",x)
#define CHAR(x) scanf("%c",&x)
#define PINT(x) printf("%d\n",x)
#define PLLD(x) printf("%lld\n",x)
#define CLR(x) memset(x,0,sizeof(x));
#define F first
#define S second
#define PB push_back

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;
typedef map<int,int> MII;
typedef vector<pair<int,int> > VPII;
typedef vector<int> VI;
typedef vector<char> VC;
typedef vector<LL> VLL;
typedef vector<VI> VVI;
typedef vector<VLL> VVL;
typedef set<int> SI;
typedef set<char> SC;

LL power(LL b,LL e,LL MOD)
{
	if(b==0 && e==0) return 1;
	if(b==0 && e>1)  return 0;
	if(b>0 && e==0) return 1;
	LL r=1;
	while(e)
	{
		if(e&1) { r = r*b;  r %= MOD; }
		e >>= 1; b = b*b; b %= MOD;

	}
return r;
}

LL gcd(LL a, LL b) {  if(b==0) return a;  else return gcd(b,a%b);  }

const int INF = INT_MAX;
const int MAX = 100005;
const int MOD = 1e9 + 7;

int popcount(int n)
{
    int ans=0;
    while (n)
    {
      n &= (n-1) ;
      ans++;

      if(ans>1)
        return ans;
    }

    return ans;
}

int main()
{

    int test; INT(test);

    while(test--)
    {
       int a,b;
       INT(a); INT(b);

        set<int> num;

        int ans=0;
        queue<int> q;
        while(!q.empty())
            q.pop();

        q.push(a);
        int offset=0;
        int gsz=1;
        while(true)
        {
            int lsz = gsz;
            bool flag = false;
            while(lsz--)
            {
                int f = q.front();

                q.pop();
                --gsz;
                if(f==b)
                {
                    flag = true;
                    break;
                }
                if(f>b)
                {
                    int temp = (int)f/2;
                     if(num.count(temp)==0)
                     {
                         q.push(temp);
                           ++gsz;
                         num.insert(temp);
                     }


                }
                else
                {

                    if(2*f<=b)
                    {
                         int temp = (2*f);
                         if(num.count(temp)==0)
                         {
                             q.push(temp); ++gsz;
                             num.insert(temp);
                         }
                    }

                         int temp = (int)(f/2);
                         if(num.count(temp)==0)
                         {
                             q.push(temp); ++gsz;
                             num.insert(temp);
                         }


                }

                if(f<b)
                {
                  if(popcount(f)==1)
                  {
                      offset=0;
                     while(f!=b)
                     {
                         ++offset;
                         f = f*2;
                     }
                     flag = true;
                     break;
                    }
                }


            }
            ++ans;
            if(flag)
                break;


        }

        PINT(ans+offset-1);

    }
}
