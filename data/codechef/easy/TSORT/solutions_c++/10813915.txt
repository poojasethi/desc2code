#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
int num[1000001];

void swap(int *a,int *b){
	int temp = *a;
	*a = *b;
	*b = temp;
}

int partition(int a[],int low,int high){
	int pivot = a[high];
	int i = low - 1;
	for(int j=low;j<high;j++){
		if(a[j]<=pivot){
			i++;
			swap(&a[i],&a[j]);
		}
	}
	swap(&a[i+1],&a[high]);
	return (i+1);
}

void quicksort(int a[],int low,int high){
	if(low < high){
		int pi = partition(a,low,high);

		quicksort(a,low,pi-1);
		quicksort(a,pi+1,high);
	}
}

int main(){
	int t;
	scanf("%d",&t);
	for(int i=0;i<t;i++){
		scanf("%d",&num[i]);
	}
	std::vector<int> v(num,num+t);
	std::sort(v.begin(),v.end());
	for(std::vector<int>::iterator it = v.begin();it!=v.end();++it){
		printf("%d\n",*it );
	}
	return 0;
}