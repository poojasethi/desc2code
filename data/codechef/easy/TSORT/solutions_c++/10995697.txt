#include<iostream>
#include<malloc.h>
//#define MID 20
using namespace std;
void mergesort(int* a,int low,int high,int*);
void merges(int* a,int low,int mid,int high,int*);
int main()
{
int n;
cin>>n;
int* a=new int[n];
int* temp=new int[n];
for(int i=0;i<n;i++)
{
 cin>>a[i];
 }
 mergesort(a,0,n-1,temp);
 for(int i=0;i<n;i++)
 cout<<a[i]<<endl;
 free(a);
 free(temp);
 }
 void mergesort(int*a ,int low,int high,int* temp)
 {
  if(low<high)
  {
  int mid=(low+high)/2;
  mergesort(a,low,mid,temp);
  mergesort(a,mid+1,high,temp);
  merges(a,low,mid,high,temp);
  }
  return ;
 }
 void merges(int* a,int low,int mid,int high,int* temp)
 {
  int i=low;
  int j=low,k=mid+1;
 // int temp[100000];
  while(j<=mid && k<=high)
  {
   if(a[j]<a[k]){
   temp[i++]=a[j];
    j++;
    }
    else{
    temp[i++]=a[k];
    k++;
    }
    }
   if(j<=mid)
   {
    for(;j<=mid;j++)
    {
     temp[i++]=a[j];
     }
     }
     else if(k<=high)
     for(;k<=high;k++)
     temp[i++]=a[k];
   for(int i=low;i<=high;i++)
   a[i]=temp[i];
  }

