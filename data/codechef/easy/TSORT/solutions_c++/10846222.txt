#include<bits/stdc++.h>
using namespace std;


#define MEM(a,N,b) fill(a,(a+N),b)
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define FORR(i,n) for(i=n-1;i>=0;--i)
#define elif else if
#define mp make_pair
#define pb push_back
#define ff first
#define ss second
#define all(x)  (x).begin(),(x).end()
#define rall(x) (x).rbegin(),(x).rend()
#define sd(x)   scanf("%lf",&x);
#define sll(x)  scanf("%lld",&x)
#define sl(x)   scanf("%ld",&x)
#define si(x)   scanf("%d",&x)
#define sstr(x) scanf("%s",&x)
#define pi(x)   printf("%d",x)
#define pl(x)   printf("%ld",x)
#define pd(x)   printf("%lf",x)
#define pll(x)  printf("%lld",x)
#define pstr(x) printf("%s",x)
#define nl      printf("\n")
#define sp      printf(" ")

#define ll long long
#define l long
#define MIN(a,b) ((a) < (b) ? (a) : (b))
#define MAX(a,b) ((a) > (b) ? (a) : (b))
#define ABS(x)   ((x) < 0 ? (-1)*(x) : (x))
#define Pi 3.1415926535897
#define MOD 1000000007
#define coolreshab ios::sync_with_stdio(false);//cin.tie(NULL)


/*freopen("test.txt","r",stdin);
  freopen("out.txt","w",stdout);
  cout << clock() / (double) CLOCKS_PER_SEC << "\n";*/


vector<l>arr;
void join(l L,l mid,l R)
{
    l i=L,j=mid+1,k=0;
    vector<l>temp(R-L+2);
    while(i<=mid or j<=R)
    {
        if(i<=mid and j<=R)
        {
            if(arr[i]<arr[j])
            {
                temp[k++]=arr[i];
                ++i;
            }
            else
            {
                temp[k++]=arr[j];
                j++;
            }
        }
        elif(i<=mid)
        {
            temp[k++]=arr[i];
            i++;
        }
        else
        {
            temp[k++]=arr[j];
            j++;
        }

    }
    FORN(i,k)
    {
        arr[i+L]=temp[i];
    }
}
void mergesort(l L,l R)
{
    if(L<R)
    {
        l mid=(L+R)/2;
        mergesort(L,mid);
        mergesort(mid+1,R);
        join(L,mid,R);
    }
}
main()
 { l T,N,i;
   coolreshab;
   sl(N);
   arr.resize(N);
   FORN(i,N)
    {
      sl(arr[i]);
    }
   mergesort(0,N-1);
   FORN(i,N)
    {
        pl(arr[i]);nl;
    }
 }
