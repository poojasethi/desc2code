#include <iostream>
#include <cstdio>
//merge sort

using namespace std;

void merge(int tree[], int l, int mid, int r)
{
	int i, j, k;
	int n1, n2;
	
	n1 = mid - l + 1;
	n2 = r - mid;
	
	int L[n1], R[n2];
	
	for(i = 0; i < n1; i++)
		L[i] = tree[l + i];
		
	for(j = 0; j < n2; j++)
		R[j] = tree[mid + 1 + j];
		
	i = 0;
	j = 0;
	k = l;
	
	while(i < n1 && j < n2)
	{
		if(L[i] <= R[j])
		{
			tree[k] = L[i];
			i++;
		}
		else
		{
			tree[k] = R[j];
			j++;
		}
		k++;
	}	
	
	while(i < n1)
	{
		tree[k] = L[i];
		i++;
		k++;
	}
	
	while(j < n2)
	{
		tree[k] = R[j];
		j++;
		k++;
	}
}


void mergesort(int tree[], int l, int r)
{
	if(l==r)
		return;
	
	int mid = l + (r-l)/2;
	
	mergesort(tree, l, mid);
	mergesort(tree, mid+1, r);
	
	merge(tree, l, mid, r);
}


int main()
{
	int t, i;
	scanf("%d", &t);
	int tree[t];
	
	for(i = 0; i < t; i++)
		scanf("%d", &tree[i]);

	mergesort(tree, 0, t-1);
	
	for(i = 0; i < t; i++)
		printf("%d\n", tree[i]);
		
	return 0;	
}
