####Codechef beginner.
####Count Subarrays.
####2016.02.17
##
##testCases = int(raw_input())
##
##for i in xrange(testCases):
##    num = int(raw_input())  # the number of elements in each array.
##    array = map(int,raw_input().strip().split())
##    index = 0
##    subNum = 1  # the number of subarrays.
##    n = 1 #added to subNum as the number of subarray is getting grower.
##
##    while index < num-1:
##        if array[index+1] >= array[index]:
##            n += 1
##            index += 1
##        else:
##            n = 1
##            index += 1
##
##        subNum += n
##
##    print subNum


#### Codechef
#### Count Steps in Matrix
#### 2016.02.17
##
##testCases = int(raw_input())
##
##for i in xrange(testCases):
##    size = int(raw_input()) # the size of matrix
##    matrix = []
##    nextPoint = 2
##    presentPointX = 0
##    presentPointY = 0
##    distance = 0
##
##    for j in xrange(size):
##        matrix.append(map(int, raw_input().strip().split()))
##
##
##    while nextPoint <= size**2:
##        for i in xrange(size):
##            for j in xrange(size):
##                if matrix[i][j] == nextPoint:
##                    distance += abs({i-presentPointX)+abs(j-presentPointY)
####                    print distance
##                    nextPoint += 1
##                    presentPointX = i
##                    presentPointY = j
##
##    print distance

testCases = int(raw_input())

for i in xrange(testCases):
    size = int(raw_input())
    matrix = {}
    distance = 0
    for i in xrange(size):
        row = map(int, raw_input().strip().split())
        for j in xrange(size):
            matrix[row[j]] = (i,j)
    
    for i in xrange(1, size**2):
        distance += abs(matrix[i+1][0]-matrix[i][0])
        distance += abs(matrix[i+1][1]-matrix[i][1])

    print distance
            
        
                                    
