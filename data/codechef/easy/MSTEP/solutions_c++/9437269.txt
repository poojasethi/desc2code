//M-Steps
#include<bits/stdc++.h>
using namespace std;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii; 
typedef long long int ll;
typedef unsigned long long int ull;
typedef long int l;
typedef double d;
#define sf(a)	scanf("%lld",&a);
#define pf(a)	printf("%lld",a);
#define pfnl()	printf("\n");
#define REP(i,a)	for(long long int i=0;i<a;i++)
#define REPP(i,a,b)	for(long long int i=a;i<b;i++)
#define FILL(a,x)	memset(a,x,sizeof(a))
#define debug(ccc)	cout<<<#ccc<<"="<<ccc<<endl;
#define sz(a) int((a).size()) 
#define pb push_back 
#define all(c) (c).begin(),(c).end() 
#define tr(c,i) for(typeof((c).begin() i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
typedef struct stack
{
	int x,y;	
}var;
ll top=0;
using namespace std;
int main()
{
	ll t,m,dist,K,i,j;
	sf(t);
	while(t--)
	{
		top=0;
		dist=0;
		sf(m);
		var *st=new var[(m*m)+1];
	REPP(i,1,m+1)
	{
		REPP(j,1,m+1)
		{
			sf(K);
			top++;
			st[K].x=i;
			st[K].y=j;
		}
	}
	REPP(i,2,top+1)
	{
		//cout<<st[i].x<<" "<<st[i].y<<"\n";
		dist+=abs(st[i].x-st[i-1].x)+abs(st[i].y-st[i-1].y);
	}
	pf(dist);
	pfnl();
	free(st);
	}
	return 0;
}