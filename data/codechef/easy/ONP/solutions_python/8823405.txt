def transform_expression():
    # ONP, Transform algeraic expression into Reverse Polish Notation
    class Stack:
        def __init__(self):
            self.items = []

        def is_empty(self):
            return len(self.items) == 0

        def push(self, item):
            self.items.append(item)

        def pop(self):
            return self.items.pop()

    for _ in xrange(int(raw_input())):
        stack = Stack()
        expression = raw_input()
        reverse_polish = ''
        for c in expression:
            if c in ['*', '/', '^', '+', '-']:
                stack.push(c)
            elif c == ')':
                reverse_polish += stack.pop()
            elif c != '(':
                reverse_polish += c
        while not stack.is_empty():
            reverse_polish += stack.pop()
        print(reverse_polish)

transform_expression()