'''input
3
(a+(b*c))
((a+b)*(z+x))
((a+t)*((b+(a+c))^(c+d)))
'''

def prec(x):
	if x == '-' or x == '+': return 1
	elif x == '*' or x == '/': return 2
	elif x == '^': return 3
	return 0

for T in range(input()):
	stack, postfix, infix = [], "", raw_input().rstrip()
	for i in infix:
		if i in "+-*/^":
			while len(stack) and prec(i) <= prec(stack[-1]): postfix += stack.pop()
			stack.append(i)
		elif i == '(': stack.append(i)
		elif i == ')':
			while len(stack) and stack[-1] != '(': postfix += stack.pop()
			if len(stack) and stack[-1] == '(': stack.pop()
		else: postfix += i
	while len(stack) > 0:
		print x
		if stack[-1] not in [')', '(']: postfix += stack[-1]
		stack.pop()
	print postfix