#include <iostream>
#include <string>
#include <vector>
#include <stack>
#include <cctype>
 
bool isOperator(const char &sym);
int operatorPriority(const char &sym);
 
int main() {
	int testCases;
	std::cin >> testCases;
	while(testCases--) {
		std::stack<char> st;
		std::vector<char> out;
		std::string in;
		std::cin >> in;
		for(unsigned int i=0;i<in.size();i++) {
			if(in[i] == '(') {
				st.push(in[i]);
			} else if(in[i] == ')') {
				while(!st.empty() && st.top() != '(') {
					out.push_back(st.top());
					st.pop();
				}
				st.pop();
			} else if(isOperator(in[i])) {
				while(!st.empty() && operatorPriority(st.top())>=operatorPriority(in[i])) {
					out.push_back(st.top());
					st.pop();
				}
				st.push(in[i]);
			} else if(isalnum(in[i])) {
				out.push_back(in[i]);
			}
		}
		while(!st.empty()) {
			out.push_back(st.top());
			st.pop();
		}
		for(unsigned int i=0;i<out.size();i++) {
			std::cout << out[i];
		}
		std::cout << std::endl;
	}
	return 0;
}
 
bool isOperator(const char &sym) {
	return (sym == '+' || sym == '-' || sym == '*' || sym == '/' || sym == '^');
}
 
int operatorPriority(const char &sym) {
	if(sym == '^') {
		return 3;
	} else if(sym == '*' || sym == '/') {
		return 2;
	} else if(sym == '+' || sym == '-') {
		return 1;
	} else {
		return 0;
	}
}