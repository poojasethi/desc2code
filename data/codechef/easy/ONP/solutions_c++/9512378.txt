#include<string.h>
#include<stdio.h>
char opera[]={'-','+','%','/','*','^'};
struct stac
{
    char stack[400];
    int top;
}s,*sa;
void push(char);
void pop();
int search(char);
int main()
{
    int i=0,j=0,n=0,k=0;
    char str[400];
    s.top=-1;
    sa=&s;
    scanf("%d",&n);
    for(;n>0;n--)
    {
        i=0;
        fflush(stdin);
        scanf("%s",str);
        while(i<strlen(str))
        {
            if(((((int)str[i])>64)&&(((int)str[i])<91))||((((int)str[i])>47)&&(((int)str[i])<58))||((((int)str[i])>96)&&(((int)str[i])<123)))
            {
                printf("%c",str[i]);
            }
            else
            {
                if(((search(str[i])==-1)||(str[i]=='('))&&(str[i]!=')'))
                {
                    push(str[i]);
                }
                else if(str[i]==')')
                {
                    while((sa->stack[sa->top]!='(')&&(sa->top!=-1))
                    {
                        printf("%c",sa->stack[sa->top--]);
                    }
                    sa->top--;
                }
                else
                {
                    while(search(str[i])!=-1)
                    {
                        printf("%c",sa->stack[sa->top--]);
                    }
                    sa->stack[++sa->top]=str[i];
                }
            }
            i++;
        }
        pop();
        printf("\n");
    }
    return 0;
}
void push(char c)
{
    sa->stack[++sa->top]=c;
}
int search(char k)
{
    if(sa->top!=-1)
    {
        int choice=0,i=0;
        if(k=='^')
            choice=5;
        else if(k=='-')
            choice=0;
        else if(k=='+')
            choice=1;
        else if(k=='%')
            choice=2;
        else if(k=='/')
            choice=3;
        else
            choice=4;
        i=sa->top;
        if(sa->stack[sa->top]!='(')
        {
            while(choice<5)
            {
                if(sa->stack[i]==opera[choice+1])
                    return 0;
                choice++;
            }
        }
    }
    return -1;
}
void pop()
{
    while(sa->top!=-1)
    {
        if((sa->stack[sa->top]!=')')&&(sa->stack[sa->top]!='('))
            printf("%c",sa->stack[sa->top--]);
    }
}

