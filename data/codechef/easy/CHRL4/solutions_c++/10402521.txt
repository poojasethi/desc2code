#include <iostream>
#include <cassert>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <queue>
using namespace std;

#define mod 1000000007
#define maxn 100000

int n, k, a[100010], i, b[100010];
double dp[100010];
priority_queue<pair<double, int> > pq;

int main (int argc, char * const argv[]) {
	scanf("%d %d", &n, &k);
	for(i = 0; i < n; i++) {
		scanf("%d", &a[i]);
	}
	dp[0] = log(a[0]);
	b[0] = a[0];
	pq.push(make_pair(-dp[0], 0));
	for(i = 1; i < n; i++) {
		while (i - pq.top().second > k) pq.pop();
		dp[i] = dp[pq.top().second] + log(a[i]);
		b[i] = (b[pq.top().second] * 1LL * a[i]) % mod;
		pq.push(make_pair(-dp[i], i));
	}
	printf("%d\n", b[n - 1]);
    return 0;
}/*
#include<bits/stdc++.h>
using namespace std;
#define sl(n) scanf("%lld",&n)
#define ll long long
#define mod 1000000007
ll a[1000010];
ll b[1000010];
int main()
{
    int n,k;
    cin>>n;
    cin>>k;
    sl(a[0]);
    b[0]=a[0];
    int i;
    for(i=1;i<n;i++)
    {
        sl(a[i]);
    }
    for(i=1;i<n;i++)
    {
        ll m=1;
        ll min=mod;
        while(m<=k&&((i-m)>=0))
        {
            if(min>b[i-m])
            {
                min=b[i-m];
            }
            m++;
        }
        b[i]=(min*1LL*a[i])%mod;
    }
    cout<<b[n-1];
}
*/
