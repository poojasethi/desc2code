#include <iostream>
#include <deque>
#include <cmath>

#define MOD 1000000007
using namespace std;

long double dp[100005];
long double la[100005];

int main()
{
    int n,k;
    cin>>n>>k;
    long long a[n],par[n],ind[n];
    long double b[n];
    for(int i=0;i<n;i++){
        //if(i>=k)
            cin>>a[i];
            la[i] = log(a[i]);
    }
    deque<long long> dqi;
    deque<long double> dq;
    dp[0] = la[0];
    ind[0] = 0;
    par[0] = -1;
    b[0] = la[0];
    //int mn=dp[0],mni=0;
    //dq.push_front(a[0]);
    //dqi.push_front(0);
    for(int i=1;i<n;i++){
        if(i <= k)
            dp[i] = la[0] + la[i];
        else
            dp[i] = b[i-k-1] + la[i];

        while(!dq.empty() && dq.back() > dp[i]){
            dq.pop_back();
            dqi.pop_back();
        }

        dq.push_back(dp[i]);
        dqi.push_back(i);

        if(i >= k+1 && dp[i-k] == dq.front()){
            dq.pop_front();
            dqi.pop_front();
        }

        if(i >= k){
            b[i-k] = dq.front();
            ind[i-k] = dqi.front();
            //cout<<b[i-k]<<" ";
        }
        //cout<<dp[i]<<" "<<dqi.front()<<"\n";
    }
    //cout<<"\n";
    for(int i=1;i<n;i++){
        //if(i<k){

        //dp[i] = (dp[i-ind[i]] * b[i])%MOD;
        if(i<=k){
            par[i] = 0;
        }else
            par[i] = ind[i-k-1];
        //cout<<par[i]<<"\t";
        //if(i>k-1)
        //cout<<b[i-k+1]<<" "<<ind[i-k+1]<<" "<<dp[i]<<"\n";
        //}else{
        //    dp[i] = min(dp[])
        //}
    }
    long long ans=a[n-1];
    int i=n-1;
    while(par[i] != -1){
        //cout<<par[i]<<"\n";
        ans = (ans * a[par[i]])%MOD;
        i = par[i];
    }
    cout<<ans%MOD<<"\n";
    return 0;
}
