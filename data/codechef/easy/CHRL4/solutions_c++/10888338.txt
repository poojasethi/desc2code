#include <bits/stdc++.h>

using namespace std;

const int N = (int) 1e5 + 5;
const int mod = (int) 1e9 + 7;

typedef long double ld;

multiset< pair<ld, int> > s;
int p[N], a[N], n, k, ans = 1;
ld dp[N], f[N];

int main () {
        scanf ("%d%d", &n, &k);

        k++;

        for (int i = 1; i <= n; i++) {
                scanf ("%d", &a[i]);
                f[i] = log10 (a[i]);
        }

        dp[1] = f[1];
        s.insert (make_pair (dp[1], 1));

        for (int i = 2; i <= n; i++) {
                if (s.size () == k) {
                        s.erase (s.lower_bound (make_pair (dp[i - k], 0)));
                }
                dp[i] = s.begin () -> first + f[i];
                p[i] = s.begin () -> second;
                s.insert (make_pair (dp[i], i));
        }

        while (n) {
                ans = (ans * 1LL * a[n]) % mod;
                n = p[n];
        }

        printf ("%d\n", ans);

        return 0;
}
