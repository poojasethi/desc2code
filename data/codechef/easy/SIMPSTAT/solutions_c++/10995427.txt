#include <iostream>
#include <stdio.h>
using namespace std;

void mergesort(long int* A,int l,int r);
void merge(long int* A,int l,int m,int r);

int main()
{
	int t,n,k,i=0;
	long int j=0;
	cin>>t;
	for(i=0;i<t;i++)
	{
		cin>>n;
		cin>>k;
		long int A[n];
		for(j=0;j<n;j++)
		{
			A[j]=0;
			scanf("%ld",&A[j]);
		}
		double sum;
		sum=0;
		mergesort(A,0,n-1);
		/*for(j=0;j<n;j++)
			cout<<A[j]<<" ";
		cout<<endl;*/
		for(j=k;j<n-k;j++)
			sum+=A[j];
		printf("%lf\n",sum/((double)n-(2*(double)k)));
	}
}

void mergesort(long int* A,int l,int r)
{
	int m;
	if(l<r)
	{
		m=(l+r)/2;
		mergesort(A,l,m);
		mergesort(A,m+1,r);
		merge(A,l,m,r);
	}
}

void merge(long int* A,int l,int m,int r)
{
	int i=0,j=0,k=0;
	int n1=m-l+1;
	int n2=r-m;
	long int L[n1],R[n2];
	for(i=0;i<n1;i++)
		L[i]=A[i+l];
	for(i=0;i<n2;i++)
		R[i]=A[m+1+i];
	i=0;
	j=0;
	k=l;
	while(i<n1 && j<n2)
	{
		if(L[i]<R[j])
		{
			A[k]=L[i];
			i++;
		}
		else
		{
			A[k]=R[j];
			j++;
		}
		k++;
	}
	while(i<n1)
	{
		A[k]=L[i];
		i++;
		k++;
	}
	while(j<n2)
	{
		A[k]=R[j];
		j++;
		k++;
	}
}