#Cutting Recipes

def HCF(lis, num):
    for i in reversed(range(1,num+1)):
        if num%i == 0 and factor(lis, int(i)):
            return i

def factor(lis, hcf):
    for i in lis:
        if int(i)%int(hcf) != 0:
            return  False
    return True

def accord(lis):
    less = 0
    for i in range(0, len(lis)-1):
        if lis[i] > lis[i+1]:
            less = int(lis[i+1])
        elif lis[i] < lis[i+1]:
            less = int(lis[i])
        else:
            less = int(lis[i])
    return less

def reducer(lis):
    new_lis = []
    n = len(lis)
    nlis = int(accord(lis))
    fact = HCF(lis, int(nlis))
    for i in lis:
        new_lis.append(int(int(i)/int(fact)))
    return new_lis

def main():
    T = raw_input()
    T = int(T)
    while(T!=0):
        lis = []
        res = []
        N = raw_input().split()
        n = int(N[0])
        for i in range(1, n+1):
            lis.append(N[i])
        res = reducer(lis)
        st = ''
        for i in range(0, n):
            st += str(res[i]) + " "
        print st
        T-=1

if __name__ == '__main__':
    main()
