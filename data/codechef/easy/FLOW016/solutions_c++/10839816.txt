//author divesh uttamchandani
#include<bits/stdc++.h>
using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef int lli;
#define loop(i,t) for(i=0;i<t;++i)
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())

lli GCD(lli a,lli b) //euclid
{
 lli dividend=a;
 lli divisor=b;
 lli quotient;
 lli rem;
 if(dividend==1||divisor==1)
    return 1;
 else if(dividend<divisor)
    return GCD(divisor,dividend);
 else
 {
 quotient=dividend/divisor;
 rem=dividend%divisor;
 if(rem==0)
 return divisor;
 dividend=divisor;
 divisor=rem;
 return GCD(dividend,divisor);
 }
}
lli LCM(lli a,lli b)
{
    return a*b/GCD(a,b);
}
int main()
{
    lli t,i,a,b,temp;
    cin>>t;
    loop(i,t)
    {
        cin>>a>>b;
        temp=GCD(a,b);
        cout<<temp<<" "<<(a*b)/temp<<"\n";
    }
	return 0;
}
