#include <list>
#include <set>
#include <map>
#include <ctime>
#include <stack>
#include <string>
#include <vector>
#include <cstdio>
#include <cmath>
#include <queue>
#include <deque>
#include <bitset>
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <iterator>
#include <cassert>
#include <fstream>
#include <numeric>
#include <iomanip>
#include <complex>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;
 
#define For(i,n) for( int i=0; i < n; i++)
#define FOR(i,a,b) for( __typeof(b) i=(a); i<=(b); i++)
#define ALL(c)  c.begin() , c.end()
#define LL long long
#define int64 LL
#define Set(t,v) memset((t), (v), sizeof(t))

typedef vector < int > VI;
typedef pair< int , int > PII;
typedef pair < LL , LL > PLL;
#define fr first
#define se second
#define pi M_PI
#define rad(x) (x)*acos(-1)/180.0
#define EPS 1e-6
#define INF 10000*10000
stringstream ss;
#define two(x) ( 1LL<<x )
#define sq(x) ( (x)*(x) )
LL mod = 1000000007LL;

/**************************Code****************************/

int a[64][64], h[64], n, iter[64];
int dp[2510][55], mx;
int pre[2510][55][55];
int mymap[10010];
map < int , int > mp;

int f( int x , int cur )
{
	if( x == mx )
		return 0;
	if( dp[x][cur] != -1 )
		return dp[x][cur];
	int ret = 100000;
	for( int l = 0 ; l < n ; l ++ )
		ret = min( ret , pre[x][cur][l] + f( x+1 , l ) );
	return dp[x][cur] = ret;
}

int main()
{
	int t, cc = 0;
	cin >> t;
	while( t -- )
	{
		memset( a , 0 , sizeof a );
		memset( h , 0 , sizeof h );
		memset( pre , 0 , sizeof pre );
		memset( iter , 0 , sizeof iter );
		mp.clear();
		cin >> n;
		for( int i = 0 ; i < n ; i ++ )
		{
			cin >> h[i];
			for( int j = 0 ; j < h[i] ; j ++ )
			{
				cin >> a[i][j];
				mp[ a[i][j] ] ++;
			}
			int tmp = h[i];
			h[i] = 0;
			for( int j = 0 ; j < tmp ; j ++ )
				if( !j || a[i][j] != a[i][j-1] )
					a[i][ h[i] ++ ] = a[i][j];
		}
		int cnt = 0;
		for( map < int , int > :: iterator it = mp.begin() ; it != mp.end() ; it ++ )
			mymap[ it->fr ] = cnt ++;
		for( int i = 0 ; i < n ; i ++ )
			for( int j = 0 ; j < h[i] ; j ++ )
				a[i][j] = mymap[ a[i][j] ];
		for( int k = 0 ; k < cnt ; k ++ )
		{
			for( int i = 0 ; i < n ; i ++ )
				while( iter[i]+1 < h[i] && a[i][ iter[i]+1 ] <= k )
					iter[i] ++;
			for( int i = 0 ; i < n ; i ++ )
				for( int j = 0 ; j < n ; j ++ )
				{
					int flag = 0;
					for( int l = 0 ; l < n ; l ++ )
						if( iter[l] < h[l] && a[l][ iter[l] ] == k )
						{
							if( l != j )
								pre[k][i][j] ++, flag = 1;
							if( l != j && iter[l] < h[l]-1 )
								pre[k][i][j] ++;
						}
					if( i != j && k )
					{
						if( iter[i] < h[i] && a[i][ iter[i] ] != k )
						{
							pre[k][i][j] ++;
							if( iter[i] < h[i]-1 )
								pre[k][i][j] ++;
						}
					}
					if( i == j && k && flag )
						pre[k][i][j] += 2;
				}
		}
		mx = cnt;
		memset( dp , -1 , sizeof dp );
		int ans = f( 0 , 0 );
		cout << "Case " << ++ cc << ": " << ans << endl;
	}
	return 0;
}
