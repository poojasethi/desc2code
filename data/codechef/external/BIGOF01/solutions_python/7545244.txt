#include<iostream>
#include<vector>
#include<algorithm>
#include<cstdio>
// Union find algo.
using namespace std;
int parent[100000];
int rank1[100000];
int setx(int n)
{      for(int i=0;i<=n;i++)
             {parent[i]=i;
             rank1[i]=1;
            }
}
int findparent(int x)
{    if(x!=parent[x]) findparent(parent[x]);
    return parent[x];
}
int mergeunion(int a,int b)
{  int _a=findparent(a);
   int _b=findparent(b);
    if(_a!=_b)
    {
        if(rank1[a]>=rank1[b])
        {
            parent[b]=_a;

        }
        else
            parent[a]=_b;
        if(rank1[a]==rank1[b])
              rank1[b]++;
    }
}



int main()
{

    int t;
    cin>>t;
    while(t--)
    {

        int n,c;
        scanf("%d %d",&n,&c);
        setx(n);
        for(int i=0;i<c;i++)
        {
            int x,y;
            scanf("%d %d",&x,&y);
            mergeunion(x,y);
        }
            int q;
            scanf("%d",&q);
            while(q--)
            {
                int x,y;
                 scanf("%d %d",&x,&y);
                 if(findparent(x)==findparent(y))
                    printf("Yes\n");
                 else
                    printf("No\n");

           }

        }
    }
