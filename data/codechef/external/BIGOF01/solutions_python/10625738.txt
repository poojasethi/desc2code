#include<stdio.h>
#include<stdlib.h>
long int *a;
long int *size;
 
long int root(long int x)
	{	
        while(x!=a[x])
        	x=a[x];
        return x;
	}
void connect(long int p,long  int q)   {       
       if (p == q) return; 
           // Make smaller root point to larger one.   
              if   (size[p] < size[q]) 
              	{
              	a[p] = q; 
              	size[q] = size [q] + size[p];
                } 
              	   
              else 
              {
              	a[q] = p; 
              	size[p] = size [p] + size[q];
              }          
                    }	
 
int connected(long int x,long int y)
{
	if(x==y)
		return 1;
	else
	 return 0;
}
int main()
{
 
	int t;
 
	scanf("%d",&t);
	while(t--)
		{
			long int n,q,c,i,x,y;
			scanf("%li %li",&n,&c);
			
			a=(long int *)malloc((n+1)*sizeof(long int));
			size=(long int *)malloc((n+1)*sizeof(long int));
			for ( i = 1; i <= n; ++i)
			{
				a[i]=i;
			}
            for (i = 0; i < c; ++i)
            {
            	scanf("%li %li",&x,&y);
            	connect(root(x),root(y));
            }
            scanf("%li",&q);
            for ( i = 0; i < q; ++i)
            {
            	scanf("%li %li",&x,&y);
            	if(connected(root(x),root(y)))
            	{
            		printf("Yes\n");
            	}
            	else
            	{
            		printf("No\n");
            	}
            }
             free(a);
             free(size);
		}
}
 