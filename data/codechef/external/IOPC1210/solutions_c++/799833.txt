#include<cstdio>
#include<vector>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

bool augment(int u,vector<bool> &visited,const vector< vector<int> > &adj,vector<int> match[2]){
	if(u==-1) return true;

	rep(i,adj[u].size()){
		int v=adj[u][i];
		if(!visited[v]){
			visited[v]=true;
			if(augment(match[1][v],visited,adj,match)){
				match[0][u]=v;
				match[1][v]=u;
				return true;
			}
		}
	}
	return false;
}

int bipartite_matching(const vector< vector<int> > &adj,int R){
	int L=adj.size();

	vector<int> match[2];
	match[0].assign(L,-1);
	match[1].assign(R,-1);

	int ans=0;
	vector<bool> visited(R);
	rep(u,L){
		rep(v,R) visited[v]=false;
		if(augment(u,visited,adj,match)) ans++;
	}
	return ans;
}

int main(){
	int T; scanf("%d",&T);
	while(T--){
		int n; scanf("%d",&n);
		vector< vector<int> > adj(n);
		rep(u,n){
			int m; scanf("%d",&m);
			rep(i,m){
				int v; scanf("%d",&v);
				adj[u].push_back(v);
			}
		}
		puts(bipartite_matching(adj,n)==n?"safe":"not safe");
	}

	return 0;
}
