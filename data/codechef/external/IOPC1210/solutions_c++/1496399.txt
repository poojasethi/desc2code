#include<stdio.h>
#include<algorithm>

using namespace std;

int list[510][55];
int likes[510];
int count_[510];
int sorted[510];
bool mark[510];
int n, set_size, favList;

void print()
{
	int i;
	for(i=0;i<n;i++)
		printf("%d ", count_[i]);
	printf("\n");
	for(i=0;i<n;i++)
		printf("%d ", count_[sorted[i]]);
	printf("\n");
}


bool cmp(int a, int b)
{
	if(count_[a]<count_[b])
		return true;
	else
		return false;
}

int main()
{
	int i, j, k, l, temp, t;
	bool pr = true;
	scanf("%d", &t);
	while(t--)
	{
		for(i=0;i<510;i++)
			likes[i]=count_[i]=0;
		for(i=0;i<510;i++)
			mark[i]=false;
		for(i=0;i<510;i++)
			sorted[i]=i;
			
		scanf("%d", &n);
		for(i=0;i<n;i++)
		{
			scanf("%d", &k);
			likes[i]=k;
			for(j=0;j<k;j++)
			{
				scanf("%d", &l);
				list[i][j]=l;
				count_[l]++;
			}
		}
		sort(sorted, sorted+n, cmp);
		//print();
		for(i=0;i<n;i++)
		{
			pr = true;
			if(count_[sorted[i]]<=i)
			{
				//printf("Enter when i: %d\n", i);
				set_size = i+1;
				favList=0;
				for(j=0;j<n;j++)
				{
					for(k=0;k<likes[j];k++)
					{
						if(count_[list[j][k]]<=i)
						{
							favList++;
							break;
						}
					}
				}
				if(favList<=i)
				{
					printf("not safe\n");
					pr = false;
					break;
				}
			}
		}
		if(pr)
			printf("safe\n");
	}
	return 0;
}
