#include <string.h>
#include <set>
#include <cstdio>
#include <iostream>

#define MAX 101
#define PAR pair<long long, pair<int, int> >
#define FOR_FOR for(int i=0;i<dim;i++)for(int j=0;j<dim;j++)
using namespace std;

main()
{
	
	long long mat[MAX][MAX];
	int rast[MAX][MAX], dx[4]={-1,0,0,1}, dy[4]={0,-1,1,0};
	long long k, limit, sec, d;
	
	set< PAR > pqMat;
	int n;
	scanf("%d",&n);
	while(n--)
	{
		int dim;
		scanf("%d %lld %lld",&dim,&k,&limit);
		pqMat.clear();
		long long mult=0;
		memset(rast,0,sizeof(rast));
		FOR_FOR
		{
			long long x;
			scanf("%lld",&x);
			mat[i][j]=x;
			//cout<<"x: "<<x;
			limit-=x;
			if(x>=k)
			{
				
				rast[i][j]=1;
				mult++;
				for(int l=0;l<2;l++){
					int i1=i+dx[l];
					int j1=j+dy[l];
					if(i1>=0 && i1<dim && j1>=0 && j1<dim && !rast[i1][j1]){
						rast[i1][j1]=1;
						pqMat.insert(make_pair(-mat[i1][j1],make_pair(i1,j1)));
						mult++;
					}
				}
			}
			else {
				for(int l=0;l<2;l++){
					int i1=i+dx[l];
					int j1=j+dy[l];
					if(i1>=0 && i1<dim && j1>=0 && j1<dim && mat[i1][j1]>=k){
						rast[i][j]=1;
						pqMat.insert(make_pair(-mat[i][j],make_pair(i,j)));
						mult++;
						break;
					}
				}
			}
		}
		// 		
		if(limit<=0) 
		{
			printf("0\n");
			continue;
		}
		if(mult==0)
		{
			printf("Not possible\n");
			continue;
		}
		for(sec=0;;)
		{
			//cout<<"ulazak u for()"<<endl;
			if(pqMat.empty())
			{
				
				//	cout<<"ulazak u pq.empty()"<<endl;
				sec+=limit/mult;
				sec+= limit%mult==0?0:1;
				break;
			}
			
			
			int ijk=0;
			PAR p=*pqMat.begin();
			d=k+p.first-sec;
			//cout<<ijk++<<". p.first = "<<p.first;
			//cout<<" limit = "<<limit<<", d = "<<d<<", sec = "<<sec<<" mult = "<<mult<<endl;
			int i1=p.second.first;
			int j1=p.second.second;
			//d=k-val;
			if(limit<=d*mult)
			{
				//cout<<"sec pre = "<<sec<<" limit/mult = "<<limit/mult;
				sec+=limit/mult;
				sec+= limit%mult==0?0:1;
				//cout<<" sec posle = "<<sec<<endl;
				break;
			}
			sec+=d;
			limit-=mult*d;
			pqMat.erase(pqMat.begin());
			for(int l=0; l<4; l++)
			{
				int i2=i1+dx[l];
				int j2=j1+dy[l];
				if(i2>=0 && i2<dim && j2>=0 && j2<dim && !rast[i2][j2])
				{
					rast[i2][j2]=1;
					
					pqMat.insert(make_pair(-mat[i2][j2]+sec,make_pair(i2,j2)));
					mult++;
					//cout<<ijk++<<". insert "<<mat[x][y]<<"("<<x<<","<<y<<")"<<endl;
				}
			}
		}
		printf("%lld\n",sec);
	}
	return 0;
} 