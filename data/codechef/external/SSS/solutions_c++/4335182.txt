#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<stack>
#include<cmath>
#include<iomanip>
#include<cstdlib>
using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define pb push_back
#define ss second
#define ff first
#define vi vector<int>
#define vl vector<ll>
#define s(n) scanf("%d",&n)
#define ll long long
#define mp make_pair
#define PII pair <int ,int >
#define PLL pair<ll,ll>
#define inf 1000*1000*1000+5
#define v(a,size,value) vi a(size,value)
#define sz(a) a.size()
#define all(a) a.begin(),a.end()
#define tri pair < int , PII >
#define TRI(a,b,c) mp(a,mp(b,c))
#define xx ff
#define yy ss.ff
#define zz ss.ss
#define in(n) n = inp()
#define vii vector < PII >
#define vll vector< PLL >
#define viii vector < tri >
#define vs vector<string>
#define foreach(v,c) for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define fill(a,v)  memset(a,v,sizeof a)
#define printall(a) rep(i,sz(a))cout<<a[i]<<endl;
#define DREP(a) sort(all(a)); a.erase(unique(all(a)),a.end());
#define INDEX(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
#define ok if(debug)
 
int check(int);
int binarysearch(int len)//finds last 1 in 11111000
{int lo = 1,hi = len,mid,flag;while(lo<=hi){mid = hi+lo>>1;(flag = check(mid))?lo = mid+1:hi = mid-1;}return mid-1+flag;}
const int N = 1000*100+5;
int debug = 1;
int check(int a){return a;}
inline int inp(){int n=0,s=1,c=getchar();if(c=='-')s=-1;while(c<48)c=getchar();while(c>47)n=(n<<3)+(n<<1)+c-'0',c=getchar();return n*s;}
ll MOD;
ll pow1(ll num,ll power)
{if(power==0)return 1;if(power==1)return num;	ll t = pow1(num,power/2)%MOD;return power%2?t*t%MOD*num%MOD:t*t%MOD;}
int fin(int n,int p)
{
	MOD = p;
	if( n >= p)
	{
		ll t1 = p-1,i;
		for(i=p;i<=n;i++)t1 = (t1 * i)%MOD;
		return t1;
	}
	if(n < p)
	{
		ll t1 = p-1,i;
		for(i = p-1;i>n;i--)t1 = (t1 * pow1(i,MOD-2))%MOD;
		return t1;
	}
}
int main()
{
      ios::sync_with_stdio(false);
      int i,j,n,t,p;
      s(t);
      while(t--)
      {
			s(n);s(p);
			int q = fin(n,p);
			printf("%d\n",q);
	  }
	  s(i);
			
}

