#include <bits/stdc++.h>

#define ALL(c)        c.begin(), c.end()
#define TR(c, it)     for(typeof(c.begin()) it = c.begin(); it != c.end(); it++)
#define FOR(i, j, n)  for(int (i) = (j); i < n; i++)
#define REP(i, j, lo) for(int (i) = (j); i >= (lo); i--)
#define MAX(a, b)     ((a) > (b) ? (a) : (b))
#define MIN(a, b)     ((a) < (b) ? (a) : (b))
#define gc            getchar_unlocked
#define pu            putchar_unlocked

#ifndef ONLINE_JUDGE
    #define gc getchar
    #define pu putchar
#endif

#define ll            long long int
#define ull           unsigned long long int
#define inf           INT_MAX
#define mininf        INT_MIN
#define pb            push_back
#define pob           pop_back
#define pf            push_front
#define pof           pop_front
#define mp            make_pair
#define PI            3.14159265358979323846264338327950288
#define endl          '\n'
#define SET(arr, val) memset(arr, val, sizeof arr)
#define SI            ( { int x; scanf("%d", &x); x; } )
#define IOSFAST       ( ios::sync_with_stdio(false); )
#define sysp          ( system("pause") )
#define isNum(a)      (a>=48 && a<=57)
#define isSchar(a)    (a>='a' && a<='z')
#define isCchar(a)    (a>='A' && a<='Z')

using namespace std;

/** FUNCTIONS **/
template <typename T> inline void ifast(T &x)
{ register int c = gc();x = 0;int neg = 0;for(;((c < 48 || c > 57)&&c != '-');c = gc());if(c == '-') neg = 1, c = gc();
  for( ; c > 47 && c < 58 ; c = gc()) x = (x << 1) + (x << 3) + c - 48; if(neg) x = -x; }

template <typename T> inline void dfast(T &x)
{ T s=1,i=10;x=0;char c=gc();if(c=='-')s=-1,c=gc();while(isNum(c))x=x*10+(c-'0'),c=gc();if(c!='.')return;c=gc();
  while(isNum(c)) x = x + (c - '0') / i, i *= 10, c = gc(); }

int sfast(char*str){register char c=0;register int i=0;while(c<33)c=gc();while(c!='\n'){str[i]=c;c=gc(),i++;}str[i]='\0'; return i;}

int sfast(string &str){register char c=0;register int i=0;while(c<33)c=gc();str="";while(c!='\n'){str += c;c = gc();i++;} return i;}

template<typename T>T s2num(string &Text){ stringstream ss(Text);T result;return ss >> result ? result : 0;}

template<typename T>string num2s(T Number){ stringstream ss; ss << Number; return ss.str();}

template<typename T> T gcd(T a, T b){if(b == 0) return a; else return gcd(b, a % b);}

template<typename T> T ncr(T n,T r){T c=1,d;for(T j=1;j<r+1;j++){d=gcd(c, j);c /= d;c *= (n - j + 1) / (j / d);}return c;}

template<typename T> T uplim(){ return numeric_limits<T>::max(); }

template<typename T> T lolim(){ return numeric_limits<T>::min(); }

/** END **/

ll gcd(ll a, ll b, ll &x, ll &y)
{
    if(a == 0)
    {
        x = 0, y = 1;
        return b;
    }
    ll x1, y1;
    ll d = gcd(b % a, a, x1, y1);
    x = y1 - (b / a) * x1;
    y = x1;
    return d;
}

ll modInv(ll a, ll m)
{
    ll x, y;
    ll g = gcd(a, m, x, y);
    x = (x % m + m) % m;
    return x;
}

int main()
{
    int t = SI;
    while(t--)
    {
        ll n, p;
        ifast(n);
        ifast(p);
        if(n >= p)
            puts("0");
        else
        {
            ll fact = 1, temp = p-1;
            while(temp > n)
            {
                fact = (fact * temp) % p;
                temp--;
            }
            cout << ((p-1) * modInv(fact, p)) % p << endl;
        }
    }
    return 0;
}
