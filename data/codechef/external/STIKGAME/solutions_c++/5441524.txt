#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
int Partition(int arr[],int low,int up)
{
    int temp,i,j;
    long long int pivot;
    i=low+1;
    j=up;
    pivot=arr[low];
    while(i<=j)
    {
        while((arr[i]<pivot)&&(i<up))
        {
            i++;
        }
        while(arr[j]>pivot)
        {
            j--;
        }
        if(i<j)
        {
            temp=arr[i];
            arr[i]=arr[j];
            arr[j]=temp;
            i++;
            j--;
        }
        else
        {
            i++;
        }
    }
    arr[low]=arr[j];
    arr[j]=pivot;
    return j;
}
void Quick(int arr[],int low,int up)
{
    int pivloc;
    if(low>=up)
    {
       return;
    }
    pivloc=Partition(arr,low,up);
    Quick(arr,low,pivloc-1);
    Quick(arr,pivloc+1,up);
}
int main()
{
    while(1)
    {
        int n;
        scanf("%d",&n);
        if(n==0)
        {
            exit(0);
        }
        int arr[2005];
        for(int i=0;i<n;i++)
        {
            scanf("%d",&arr[i]);
        }
        //sort(0,n-1);
        Quick(arr,0,n-1);
        int num=0;
        for(int i=0;i<=(n-2);i++)
        {
            for(int k=i+1;k<=(n-1);k++)
            {
                int temp=arr[i]+arr[k];
                for(int j=k+1;j<=n-1;j++)
                {
                    if(temp<arr[j])
                    {
                        num++;
                    }
                }
            }
        }
        printf("%d\n",num);
    }
    return 0;
}
