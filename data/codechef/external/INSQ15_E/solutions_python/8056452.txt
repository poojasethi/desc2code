#include<stdio.h>
#define LL long long
struct Team
{
	int index;
	LL score;
};

void Merge(struct Team left[],struct Team right[],struct Team A[],int n)
{
	int nL=n/2,nR=n-(n/2);
	int i=0,j=0,k=0;
	//Merging the two sub-lists
	while(i<nL && j<nR)
	{
		if((left[i].score)>=(right[j].score))
		{
			A[k]=left[i];
			i++;
		}
		else
		{
			A[k]=right[j];
			j++;
		}
		k++;
	}
	while(i<nL)
	{
		A[k]=left[i];
		i++;
		k++;
	}
	while(j<nR)
	{
		A[k]=right[j];
		j++;
		k++;	
	}
}

void Sort(struct Team A[],int n)
{
	//Base Condition
	if(n<2) return;
	//Creating left and right sub lists
	int mid=n/2,i;
	int nL=mid,nR=n-mid;
	struct Team left[nL],right[nR];
	for(i=0;i<mid;i++)
		left[i]=A[i];
	for(i=mid;i<n;i++)
		right[i-mid]=A[i];
	//Sorting the sub lists
	Sort(left,nL);
	Sort(right,nR);
	//Merging the sub arrays
	Merge(left,right,A,n);
}

main()
{
	LL S,M;
	int i,N,Q,K;
	struct Team A[10005];
	scanf("%d",&N);
	for(i=0;i<N;i++)
	{
		scanf("%lld %lld",&S,&M);
		A[i].score=S*M;
		A[i].index=i+1;
	}
	Sort(A,N);
	scanf("%d",&Q);
	while(Q--)
	{
		scanf("%d",&K);
		printf("%d\n",A[K-1].index);
	}
	return 0;
}