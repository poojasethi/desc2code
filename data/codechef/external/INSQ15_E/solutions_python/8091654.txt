import java.io.*;
import java.util.*;

class Ques1 {

	static BufferedReader buff;
	static PrintWriter pout;
	static StringTokenizer st;
	
	public static void main(String[] args)throws Exception{
		buff=new BufferedReader(new InputStreamReader(System.in));
		pout=new PrintWriter(System.out);
		solve();
		pout.flush();
	}

	
	static void solve()throws Exception{
		int N=Integer.parseInt(buff.readLine());
	
		ArrayList<Integer> al=new ArrayList<Integer>();
		double[] arr=new double[N];
		double[] arrOld=new double[N];
		float increment=(float)0.001;
	
		for(int i=0;i<N;i++){
			st=new StringTokenizer(buff.readLine());
			
			double product=Double.parseDouble(st.nextToken())*Double.parseDouble(st.nextToken());
			if(al.contains((int)product)){
				product=product-increment;
				increment+=(double)0.001;
			}
			arr[i]=product;
			al.add((int)product);
		}
		System.arraycopy( arr, 0, arrOld, 0, arr.length );
		Arrays.sort(arr);
		int nq=Integer.parseInt(buff.readLine());
		
		
		while(nq-->0){
			int q=Integer.parseInt(buff.readLine());
			double element=arr[N-q];
			for(int i=0;i<N;i++){
				if(element==arrOld[i]){
					pout.println(i+1);
					break;
				}
			}
		}
	}
}

						