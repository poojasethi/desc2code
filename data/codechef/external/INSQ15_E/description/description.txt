 There are N teams who are solving a problem of Insomnia 2015 Qualifier. Every team has submitted a solution and got AC :) There are two things associated with each team, score S which they have got for successfully solving the problem, and a bonus M which is a score multiplier. You are given S and M for each team i. The net score of i^th team is Si * Mi for 1 ≤ i ≤ N .
You have been asked Q queries. In each query you are given a number K and you have to tell which team is on the K^th position in the rank list. 
The rank list holds the net score and the team number i (1 based index) and is sorted in non increasing order. If the score of any two teams is the same then the team having lesser i value is kept above in the rank list.


Input

First line of the input contains an integer N denoting number of teams. Then follow N lines, each line contains two integers S denoting the score of team i and M denoting the multiplier value of team i separated by a space.
Next line contains an integer Q denoting number of queries.
Then follow Q lines, each line contains a single integer K which denotes the queried rank number.


Output

For each query output a single integer containing the team number which is on K^th rank.


Constraints

1 ≤ N ≤ 10^4
1 ≤ S ≤ 10^6
1 ≤ M ≤ 10^6
1 ≤ Q ≤ 10^4
1 ≤ K ≤ N
i has 1 based indexing


Example
Input 1:
5
4 6
1 2
3 4
8 10
4 3
5
1
2
3
4
5

Output 1:
4
1
3
5
2


Input 2:
4
6 6
12 3
3 12
4 9
3
1
2
3

Output 2:
1
2
3



Explanation
Example case 1.The score of 5 teams are
24 (4 * 6),
2 (1 * 2),
12(3 * 4),
80 (8 * 10) and
12 (4 * 3) respectively. So the rank list will look like
Score   Team
80          4
24          1
12          3
12          5
2            2
Although two teams having number 3 and 5 have the same net score, but team having number 3 is put above than team having number 5 in the rank list as per the sorting policy.
Example case 1. As the score of all the teams are same, i.e. 36 so the rank list will contain the team number in order 1 -> 2 -> 3 -> 4 
