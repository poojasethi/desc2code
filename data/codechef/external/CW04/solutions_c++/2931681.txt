// CW04 - String permutation. v1. CSM, 2013.
#include <stdio.h>  // fgets, printf
#include <iostream> // swap
#include <cstring>  // strlen
using namespace std;

const int B_LEN = 64;

int main();
void perm(int i);
void rot_left(int i);

char text[B_LEN + 1];
int len;

int main() {
    fgets(text, B_LEN, stdin);
    len = strlen(text) - 1;
    perm(0);
    return 0;
}

void perm(int i) {
	if (i < len) {
		perm(i + 1);
		for (int j = i + 1; j < len; ++j) {
            swap(text[i],text[j]);
            perm(i+1);
		}
        rot_left(i);
    }
    else {
		printf("%s", text);
    }
}

void rot_left(int i) {
    int t = text[i];
    while(++i < len)
        text[i - 1] = text[i];
    text[--i] = t;
}