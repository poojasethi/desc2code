#include<iostream>
#include<string>
#include<map>
using namespace std;
map<string,int> findPerms(string str)
{
    map<string,int> result;
    if(str.length()==0)
    {
        //cout<<"sending null space\n";
        result.insert(pair<string,int>("",0));
        return result;
    }
    map<string,int>::iterator it;
    //cout<<"substr="<<str.substr(1)<<" fullstr="<<str.at(0)+str.substr(1)<<endl;
    map<string,int> temp=findPerms(str.substr(1));
    //cout<<"temp result=\n";
    //for(it=temp.begin();it!=temp.end();it++)      cout<<(it)->first<<",";
    cout<<endl;
    char c=str.at(0);
    //cout<<"\nchar to add="<<c;
    for(it=temp.begin();it!=temp.end();it++)
    {
        //cout<<"temp:::"<<it->first<<","<<endl;
        int i;
        for(i=0;i<=((it)->first.length());i++)
        {
            if(((it)->first.length())>=0)
            {
                string start,end;
                start=(it)->first.substr(0,i);
                end=(it)->first.substr(i);
                string t=start+c+end;
              //  cout<<"\ni="<<i<<" result push start="<<start<<" end="<<end<<" str="<<t;
                result.insert(pair<string,int>(t,0));
            }
        }
    }
    return result;
}
int main()
{
        string str;
        cin>>str;
        map<string,int> res=findPerms(str);
        map<string,int>::iterator it;
        //cout<<"\nFinalresult=\n";
        for(it=res.begin();it!=res.end();it++)
            cout<<it->first<<"\n";
        cout<<endl;

    return 0;
}

