#include <bits/stdc++.h>
using namespace std ;
 
#define ft first
#define sd second
#define pb push_back
#define all(x) x.begin(),x.end()
 
#define ull unsigned long long int
#define ui unsigned int
#define ll long long int
#define vi vector<int>
#define vii vector<pair<int,int> >
#define pii pair<int,int>
#define vl vector<ll>
#define vll vector<pair<ll,ll> >
#define pll pair<ll,ll>
#define mp make_pair
 
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
 
#define scll1(x) scanf("%lld",&x)
#define scll2(x,y) scanf("%lld%lld",&x,&y)
#define scll3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
 
#define pr1(x) printf("%d\n",x)
#define pr2(x,y) printf("%d %d\n",x,y)
#define pr3(x,y,z) printf("%d %d %d\n",x,y,z)
 
#define prll1(x) printf("%lld\n",x)
#define prll2(x,y) printf("%lld %lld\n",x,y)
#define prll3(x,y,z) printf("%lld %lld %lld\n",x,y,z)
 
#define pr_vec(v) for(int i=0;i<v.size();i++) cout << v[i] << " " ;
 
#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)
 
#define fr(i, a, b) for(i=a; i<=b; i++)
#define fb(i, a, b) for(i=a; i>=b; i--)
 
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
#define debug( s ) cout << s << "\n"
 
const int maxn = 2 * 1e6 + 10;
int n, mod, F[ maxn ], inv[ maxn ];
 
 
int power(int a, int b) {
	int res = 1;
	while( b ) {
		if( b & 1 ) {
			res = 1LL * res * a % mod;
		}
		b /= 2;
		a = 1LL * a * a % mod;
	}
	return res;
}
 
void pre() {
	F[0] = inv[0] = 1;
	int i;
	fr(i, 1, n) {
		F[i] = 1LL * F[i-1] * i % mod;
		inv[i] = -1;
	}
}
 
int nCr(int n, int r) {
	int res = F[n];
	if( inv[r] == -1 ) {
		inv[r] = power(F[r], mod-2);
	}
	if( inv[n-r] == -1 ) {
		inv[n-r] = power(F[n-r], mod-2);	
	}
	res = 1LL * res * inv[r] % mod;
	res = 1LL * res * inv[n-r] % mod;
	return res;
}
 
 
bool check( int x ) {
	return ( (x & ( x - 1 )) == 0 );
}
 
int solve1(int ss, int se, int tot) {
	if( ss >= se ) {
		return 1;
	}
	int mid = ( ss + se ) / 2;
	int l = solve1(ss, mid-1, mid - ss);
	int r = solve1(mid+1, se, se - mid);
	int res;
	res = 1LL * nCr(tot-1, se - mid) * l % mod;
	res = 1LL * res * r % mod;
	if( !check( tot + 1 ) ) {
	 	res = 1LL * res * 2 % mod;
	}
	return res;
}
 
int main() {
 
	int t; t = 1;
	while( t-- ) {
		 sc2(n, mod);
		 pre();
		 pr1( solve1(1, n, n) );
	}
	return 0;
} 