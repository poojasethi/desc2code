#include<iostream>
#include<algorithm>
using namespace std;
int m[25000],b[25000];
int Partition(int a[], int beg, int end)          //Function to Find Pivot Point
{
int p=beg, pivot=a[beg], loc;

for(loc=beg+1;loc<=end;loc++)
{
if(pivot>a[loc])
{
a[p]=a[loc];
a[loc]=a[p+1];
a[p+1]=pivot;

p=p+1;
}
}
return p;
}


void QuickSort(int a[], int beg, int end)
{
if(beg<end)
{
int p=Partition(a,beg,end);                       //Calling Procedure to Find Pivot

QuickSort(a,beg,p-1);                             //Calls Itself (Recursion)
QuickSort(a,p+1,end);			              //Calls Itself (Recursion)
}
}

int main()
{
    int t,x,y,n,c,d,i;
    cin>>t;
    while(t--)
    {   c=0;
        cin>>n>>x>>y;
        for(i=0;i<n;i++)
            cin>>m[i]>>b[i];
        QuickSort(m,0,n-1);
        QuickSort(b,0,n-1);
        for(i=0;i<n;i++)
        {
            if(m[i]<b[i])
            {   d=b[i]-m[i];
                c=c+d*x;
            }
            else
            {
                d=m[i]-b[i];
                c=c+d*y;
            }
        }
        cout<<c<<endl;
    }
    return 0;
}
