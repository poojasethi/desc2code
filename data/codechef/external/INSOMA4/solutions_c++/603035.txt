#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

int HashValue(char c){
    if(c >= 'A' && c <= 'Z'){
        return c-'A';
    }
    return (26+c-'a');
}

struct Node{
    char key;
    Node *next[52];

    Node(char c){
        key = c;
        for(int i = 0; i < 52; i++){
            next[i] = NULL;
        }
    }
};

class Trie{
    Node* root;

    public:
        Trie(){
            root = new Node('1');
        }

        int Insert(char *s);
};

int Trie::Insert(char* s){
    int count = 0;
    Node *temp = root;

    for(int i = 0; s[i]; i++){
        int idx = HashValue(s[i]);
        if(temp->next[idx] == NULL){
            temp -> next[idx] = new Node(s[i]);
        }
        else{
            count++;
        }
        temp = temp -> next[idx];
    }
    return count;
}

int main(){
    int n,Max = 0;
    scanf("%d", &n);
    char s[101];

    Trie t;
    for(int i = 0; i < n; i++){
        scanf("%s",s);
        Max = max(Max,t.Insert(s));
    }
    printf("%d\n", Max);
}
