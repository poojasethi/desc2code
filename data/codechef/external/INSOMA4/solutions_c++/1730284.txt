/*
ID: nihalb
PROG: insoma4
LANG: C++
*/

#include<stdio.h>
#include<iostream>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#define FOR(i,v) for(int i=0; i<v; ++i)
#define debug(x) cerr<<#x<<" = "<<x<<endl

using namespace std;

int partition(char** A, int start, int end)
{
    int i = start;
    int j = end+1;
    char* temp;

    while(true)
    {
        while(strcmp(A[++i],A[start]) < 0) if(i == end) break;
        while(strcmp(A[--j],A[start]) > 0) {}
        if(j<=i) break;

        temp = A[i];
        A[i] = A[j];
        A[j] = temp;
    }

    temp = A[start];
    A[start] = A[j];
    A[j] = temp;

    return j;
}

void quickSort(char** strs, int start, int end)
{
    if(start >= end) return;
    int split = partition(strs,start,end);
    quickSort(strs,start,split-1);
    quickSort(strs,split+1,end);
}

void qSort(char** strs, int size)
{
    srand(time(NULL));
    int j;
    char* temp;
    for(int i=size-1; i>0; --i)
    {
        j = rand()%(i+1);
        temp = strs[i];
        strs[i] = strs[j];
        strs[j] = temp;
    }
    quickSort(strs,0,size-1);
}

int main()
{
	//freopen("insoma4.in","r",stdin);
	int N,best = 0,current;
	char** strs;
	scanf("%d",&N);
	strs = new char*[N];
	FOR(i,N) strs[i] = new char[105];
	FOR(i,N) scanf("%s",strs[i]);
	qSort(strs,N);
	FOR(i,N-1)
	{
	    current = 0;
	    for(int j=0; strs[i][j] != '\0' && strs[i+1][j] != '\0'; ++j)
	    {
	        if(strs[i][j] == strs[i+1][j]) current++;
	        else break;
	    }
	    if(current > best) best = current;
	}
	printf("%d\n",best);
	FOR(i,N) delete[] strs[i];
	delete[] strs;
	return 0;
}
