/* Author : Mayank Natani
   Email-id : mayanknatani6@gmail.com, mayank.natani@students.iiit.ac.in */

/* Data Structure Includes */
#include<vector>
#include<list>
#include<map>
#include<set>
#include<queue>
#include<deque>
#include<bitset>

/*other Includes */
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>

/* C Includes */
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<cstring>

using namespace std;
typedef vector<int > vi;
typedef vector<long long int > vl;
typedef vector<bool > vb;
typedef vector<char > vc;
typedef vector<vi > vvi;

#define pb push_back
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define ss(n) scanf("%s",n)
#define all(a) a.begin(),a.end()
#define tr(container,it) for(typeof(container.begin()) it = container.begin() ; it != container.end() ; it++) //to traverse any container
#define present(container,element) (container.find(element)!=container.end()) //should be used for set,map etc.
#define vpresent(container,element) (find(all(container),element)!=container.end()) //should be used for vectors.

int ma;

typedef struct node {
	struct node * next[200];
}node;

node *newnode(){
	node *k=(node *)malloc(sizeof(node));
	for(int i=0;i<200;i++)
		k->next[i]=NULL;
	return k;
}

void insert(node *root,string name){
	int l=name.length();
	node *temp=root;
	int count=0;
	for(int i=0;i<l;i++){
		if(temp->next[(int)(name[i])]==NULL)
			temp->next[(int)(name[i])]=newnode();
		else
			count++;
		temp=temp->next[(int)(name[i])];
	}
	if(count>ma)
		ma=count;
}

int main(){
	int n;
	si(n);
	string name;
	node *root=newnode();
	ma=-1;
	while(n--){
		cin >> name;
		insert(root,name);
	}
	printf("%d\n",ma);
	return 0;
}
