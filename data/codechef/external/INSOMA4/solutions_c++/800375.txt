#include<iostream>
#include<cstdlib>
#include<cstring>

using namespace std;

int max_count=0;

struct trie_node
{
    int value;
    struct trie_node *children[52];
};

trie_node *getnode()
{
    //cout<<"inside getnode"<<endl;
    trie_node *t;
    t=new trie_node;
    t->value=0;

    for(int i=0;i<52;i++)
        t->children[i]=NULL;

    return t;
}

void insert(trie_node *root,char *key)
{
    //cout<<"inside insert"<<endl;
    bool flag=false;
    int count=0;
    trie_node *crawl;

    int length=strlen(key);
    int index;

    crawl=root;

    for(int i=0;i<length;i++)
    {
        if(key[i]>=97)
            index=key[i]-'a';
        else
            index=key[i]-'A'+26;
        //cout<<key[i]<<"  index : "<<index<<endl;
        if(crawl->children[index]==NULL)
        {
            crawl->children[index]=getnode();
            crawl=crawl->children[index];
        }
        else
        {
            /*if(crawl->value==-1)
                flag=true;
            if(!flag)
                count++;*/
            crawl=crawl->children[index];
            count++;
        }
    }

    crawl->value=-1;
    if(count>max_count)
        max_count=count;
    //cout<<key<<" inserted  count : "<<count<<" & max count : "<<max_count<<endl;
    //cout<<key<<" inserted"<<endl;
}

int main()
{
    int n;
    char *str=new char[105];
    trie_node *root;

    root=getnode();
    //cout<<"root created"<<endl;

    scanf("%d",&n);

    while(n--)
    {
        scanf("%s",str);
        insert(root,str);
    }

    printf("%d\n",max_count);

    return 0;
}
