// ROH.cpp : Defines the entry point for the console application.
//

#include<iostream>
#include<vector>
#include<stdio.h>
#include<cstdio>
#include<set>
#include<stdlib.h>
#include<algorithm>
#include<queue>
#include<bitset>
#include<map>
#include<fstream>
#include<stack>
#include<utility>
#include<string>
#include<cstring>
#include<math.h>

using namespace std;

#define scan scanf
#define sscan sscanf_s
#define get gets
#define print printf 
#define mod 1000000007
#define ll long long
#define init int i,j,k,l,m,n,test
#define pause system("pause")
#define inf 1000000009
#define white 0
#define black 2
#define gray 1
	


struct node
{
	int alice;
	//bitset<1100> b;
};
int a[1100][1100];
struct node b[1100][1100];
int main()
{
	init;
	scan("%d",&test);
	
	while(test--)
	{
		scan("%d %d",&n,&m);

		char s[1200];
		get(s);
		
		for(i=0;i<1100;i++)
		{
			for(j=0;j<1100;j++)
			{
				b[i][j].alice=0;
				//b[i][j].b.reset();
			}

		}
		for(i=0;i<1100;i++)
		{
			if(i%2==0)
			{
				b[i][0].alice=1200;
			
			}
			else
				b[i][0].alice=0;
			

		}
		for(i=0;i<1100;i++)
		{
			if(i%2==0)
				b[i][n+1].alice=1200;
			else b[i][n+1].alice=0;
			b[n+1][i].alice=0;

		}
		for(i=1;i<=n;i++)
		{
			get(s);
			for(j=1;j<=n;j++)
			{
				a[i][j]=s[j-1]-'0';
			}
		}
		
		for(i=n;i>=1;i--)
		{
			for(j=1;j<=n;j++)
			{
				if(i%2==0)
				{
					//alice turn
					//chosse max
					k=b[i+1][j-1].alice;
					k=max(k,b[i+1][j].alice);
					k=max(k,b[i+1][j+1].alice);
					b[i][j].alice=k+a[i][j];
					

					


				}
				else
				{
					k=b[i+1][j-1].alice;
					k=min(k,b[i+1][j].alice);
					k=min(k,b[i+1][j+1].alice);
					b[i][j].alice=k+a[i][j];
					
				}
				


			}

		}
		k=0;
		for(i=1;i<=n;i++)
			if(b[1][i].alice>=m)
				k++;
		cout<<k<<endl;



	}
}