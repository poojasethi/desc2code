#include <bits/stdc++.h>
#include <iostream>
#include <fstream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <cassert>
#include <utility>
#include <iomanip>
 
using namespace std;
 
const double inf = 1e100;
const int MAXN = 105000;
#define MOD 1000000007
#define gc getchar_unlocked
#define ll long long int
#define min(a,b) (a<b?a:b)
#define max(a,b) (a>b?a:b)

inline ll scan()
{
	ll t=0,neg=0;
	char c;
	c=gc();
	while((c<'0' || c>'9')&& c!='-')
		c=gc();
	if(c=='-') {neg=1;c=gc();}
	while(c>='0' && c<='9')
	{
		t=(t<<3)+(t<<1)+c-'0';
		c=gc();
	}
	if(neg) t=-t;
	return(t);
}

int dp[1001][1001];
char a[1001][1001];

int main()
{
	int t,n,k,i,j,min1,min2,min3,max1,max2,max3;
	t=scan();
	while(t--)
	{
		n=scan();
		k=scan();
		for(i=0;i<n;i++)
			scanf("%s",a[i]);
		
		for(j=n-1;j>=0;j--)
			dp[n-1][j]=a[n-1][j]-'0';

		for(i=n-2;i>=0;i--)
		{
			for(j=0;j<=n-1;j++)
			{
				if(i%2==0)
				{
					if(j>0) min1=dp[i+1][j-1];
					else min1=inf;
					
					if(j<(n-1)) min2=dp[i+1][j+1];
					else min2=inf;
					
					min3=min(min1,min2);
					dp[i][j]=min(min3,dp[i+1][j])+(a[i][j]-'0');
				}	
				else
				{
					if(j>0) max1=dp[i+1][j-1];
					else max1=-1;
					
					if(j<(n-1)) max2=dp[i+1][j+1];
					else max2=-1;
					
					max3=max(max1,max2);
					dp[i][j]=max(max3,dp[i+1][j])+(a[i][j]-'0');
				
				}
			}
		}
		int ans=0;
		for(j=0;j<n;j++)
			if(dp[0][j]>=k) ans++;
		printf("%d\n",ans);
	}
	return 0;
}