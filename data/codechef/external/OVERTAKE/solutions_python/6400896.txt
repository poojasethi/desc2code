#include<bits/stdc++.h>
#define ll long long
using namespace std;
ll cnt;
pair<ll,ll> st[100010];
ll d[100010];
inline void scanint(ll* x)
{
	register char c = getchar_unlocked();
	*x = 0;
	for(; (c<48)||(c>57);c = getchar_unlocked());
	for(; (c>47)&&(c<58);c = getchar_unlocked())
		*x = (ll)((((*x)<<1) + ((*x)<<3)) + c - 48);
}
inline void printint(ll n)
{
	if(n == 0)
	{
		putchar_unlocked('0');
		putchar_unlocked('\n');
	}
	else
	{
		char buf[20];
		buf[19] = '\n';
		int i = 18;
		while(n)
		{
			buf[i--] = n % 10 + '0';
			n /= 10;
		}
		while(buf[i] != '\n')
			putchar_unlocked(buf[++i]);
	}
}




ll* merge(ll* a,ll i, ll m,ll j){
  ll x,y,z;
  ll n1 = m-i+1;
  ll n2 = j-m;
  ll c[n1],d[n2];
  for(x=0;x<n1;x++){
     c[x]=a[i+x];
  }
  for(x=0;x<n2;x++){
     d[x]=a[m+1+x];
  }
  x=0ll;
  y=0ll;
  z=i;

  while(x<n1&&y<n2){
    if(c[x]<=d[y]){
      a[z]=c[x];
      x++;
    }
    else{
      cnt=cnt+n1-x;
      a[z]=d[y];
      y++;
    }
    z++;
  }

  while(x<n1){
    a[z]=c[x];
    z++;
    x++;

  }
  while(y<n2){
    a[z]=d[y];
    z++;
    y++;
  }
  return a;
}
void mergesort(ll *a,ll i, ll j){
  if(i<j){
  ll m = (i+j)/2;
  mergesort(a,i,m);
  mergesort(a,m+1,j);
  merge(a,i,m,j);


  }
}



int main(){

        ll t;
     //   cin>>t;
        scanint(&t);

        while(t--){
              cnt=0;
              memset(st,0,sizeof(st));
              
              ll n,t1,i,v,ans=0,inp;
           //   cin>>n>>t1;
              scanint(&n);
              scanint(&t1);

              for(i=1;i<=n;i++){
              //    cin>>inp[i]>>v;
              scanint(&inp);
              scanint(&v);


                 st[i]=make_pair(inp,v);

              }
			 sort(st+1,st+n+1);
             for(i=0;i<n;i++){
             	 d[i]=st[i+1].first+st[i+1].second*t1;
             }

//          
			mergesort(d,0,n-1);
            printint(cnt);


        }

}
