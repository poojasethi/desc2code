#include<bits/stdc++.h>

using namespace std;

#define mod 1000000007
#define INF 1e9
#define MAX INF
#define gcd(a,b) __gcd(a,b)
#define READY ios_base::sync_with_stdio(false);
#define DEBUG if(1)
#define DONE return 0;
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define pii pair<int, int>
#define pi pair<pair<int,int>,int >
vector<pair<long long,long long> >xv;
vector<long long> xvt,tmp1,tmp2;
int ti,tj;
long long cnt;
void combine(int f,int mid,int l){

    for(int i=f;i<=mid;i++)tmp1[i-f]=xvt[i];
    tmp1[mid-f+1]=LLONG_MAX;
    for(int i=mid+1;i<=l;i++)tmp2[i-mid-1]=xvt[i];
    tmp2[l-mid]=LLONG_MAX;
    ti=0,tj=0;
    for(int i=f;i<=l;i++){
        if(tmp1[ti]<=tmp2[tj]){
            xvt[i]=tmp1[ti];
            ti++;
        }
        else{
            xvt[i]=tmp2[tj];
            tj++;
            if(ti!=(mid-f+1))cnt+=(mid-f+1-ti);
            //cout<<mid<<" "<<ti<<" "<<tmp1[ti]<<" "<<tmp2[tj]<<endl;
        }
    }


}
void merge(int i,int j){

    if(i<j){
        merge(i,(i+j)/2);
        merge((i+j)/2+1,j);
        combine(i,(i+j)/2,j);
    }

}
int main(){
    int t,n;
    long long t0,x,v;
    READY
    scanf("%d",&t);
    while(t--){
        xv.clear();
        xvt.clear();
        scanf("%d %lld",&n,&t0);
        xvt.resize(n);
        tmp1.resize(n);
        tmp2.resize(n);
        for(int i=0;i<n;i++){
            scanf("%lld %lld",&x,&v);
            xv.push_back(make_pair(x,v));
        }
        sort(xv.begin(),xv.end());

        long long ans=0;

        for(int i=0;i<n;i++){
            xvt[i]=xv[i].first+xv[i].second*t0;

            //cout<<(lower_bound(xvt.begin(),xvt.end(),x)-xvt.begin())<<" "<<distance(comp.begin(),it)<<" "<<x<<" "<<v<<endl;
        }
        cnt=0;
        merge(0,n-1);
        printf("%lld\n",cnt);

    }
    DONE
}
