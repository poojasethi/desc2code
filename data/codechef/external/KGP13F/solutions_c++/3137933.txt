    #include <set>
    #include <bitset>
    #include <queue>
    #include <deque>
    #include <set>
    #include <bitset>
    #include <queue>
    #include <deque>
    #include <stack>
    #include <sstream>
    #include <iostream>
    #include <iomanip>
     
    #include <cstdio>
    #include <cstdlib>
    #include <cmath>
    #include <ctime>
    #include <cstring>
    #include <string>
    #include <cassert>
     
    #include <vector>
    #include <list>
    #include <map>
    #include <algorithm>
    #include <functional>
    #include <numeric>
    #include <utility>
     
    using namespace std;
     
    // -------------------- Khai bao cac container --------------------
    typedef vector <int> vi;
    typedef vector <vi> vvi;
    typedef pair <int, int> ii;
    typedef vector <ii> vii;
    typedef vector <string> vs;
     
    typedef long long int64; //NOTES:int64
    typedef unsigned long long uint64; //NOTES:uint64
    typedef unsigned uint;
     
    const double pi = acos(-1.0); //NOTES:pi
    const double eps = 1e-11; //NOTES:eps
    const int MAXI = 0x7fffffff;
    const int dx[] = {1, 0, -1, 0};
    const int dy[] = {0, 1, 0, -1};
    const char dz[] = "SENW";
     
    // -------------------- Dinh nghia lai cac phep toan --------------------
    #define forn(i,a,b) for (int i=(a),_b=(b); i<_b; i++)
    #define rforn(i,b,a) for (int i=(b)-1,_a=(a); i>=_a; i--)
    #define Reset(a,b) memset((a),(b),sizeof(a))
     
    #define endline putchar('\n')
    #define space putchar(' ')
    #define EXIT(x) {cout << x;return 0;}
     
    #define fi first
    #define se second
    #define pb push_back
    #define all(x) (x).begin(),(x).end()
    #define mp(X,Y) make_pair(X,Y)
    #define foreach(i, c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
    #define present(c, x) ((c).find(x) != (c).end())
    #define sz(a) a.size()
     
    #define two(x) (1 << (x))
    #define two64(x) (((int64)(1)) << (x))
    #define S(x) scanf("%d",&x);
    #define input freopen("input.txt","r",stdin);
    #define deb(i,a,n) for(i=0;i<n;i++){cout<<a[i]<<" ";}
    #define db(x,y) printf("%d %d\n",x,y);
    #define op(x) printf("%d\n",x);
     
     
     
     
     
    double Area(int dX0, int dY0, int dX1, int dY1, int dX2, int dY2)
    {
    double dArea = ((dX1 - dX0)*(dY2 - dY0) - (dX2 - dX0)*(dY1 - dY0))/2.0;
    return (dArea > 0.0) ? dArea : -dArea;
    }
     
     
    int main()
    {
    //input;
    int x1,y1,x2,y2,x3,y3,x4,y4,t1,t2=1;
    double area1=0,area2=0,areat,areaf=0;
    cin>>t1;
    while(t1--)
    {
    areaf=0;
    area1=0,area2=0,areat=0;
    cin>>x1>>y1>>x2>>y2>>x3>>y3>>x4>>y4;
     
    area1+=Area(x1,y1,x2,y2,x3,y3);
    area1+=Area(x1,y1,x3,y3,x4,y4);
    area2+=Area(x1,y1,x2,y2,x4,y4);
    area2+=Area(x2,y2,x3,y3,x4,y4);
     
    //cout<<area1<<endl<<area2<<endl;
     
    float m = 0.0;
     
     
    int b1=0,b2=0,b3=0,b4=0,allb=0,i=0,ans=0;
    int run = x2 - x1;
    int rise = y2 - y1;
    if(run==0)
    {
    b1=abs(y2-y1)-1;
    }
    else
    {
    if(rise==0)
    {
    b1=abs(x2-x1)-1;
    }
     
    else{
     
     
    m = ((float) rise) / ((float) run);
     
     
    int b = y1*(x2-x1) - ((y2-y1)* x1);
     
    for (int x = (x1<x2?x1:x2)+1; x < (x1>x2?x1:x2); ++x)
    {
    float y = ((((y2-y1) * x) + b)*1.0)/(x2-x1);
     
    int rounded = (y > 0.0) ? floor(y + 0.5) : ceil(y - 0.5);
     
    if (rounded*(x2-x1)-(y2-y1)*x==b)
    b1++;
    }
    }
    }
     
     
    run = x3 - x2;
    rise = y3 - y2;
    if(run==0)
    {
    b2=abs(y3-y2)-1;
    }
    else{
    if(rise==0)
    {
    b2=abs(x3-x2)-1;
    }
     
    else{
     
     
    m = ((float) rise) / ((float) run);
     
     
    int b = y2*(x3-x2) - ((y3-y2)* x2);
     
    for (int x = (x2<x3?x2:x3)+1; x < (x2>x3?x2:x3); ++x)
    {
    float y = ((((y3-y2) * x) + b)*1.0)/(x3-x2);
     
    int rounded = (y > 0.0) ? floor(y + 0.5) : ceil(y - 0.5);
     
    if (rounded*(x3-x2)-(y3-y2)*x==b)
    b2++;
    }
    }
     
     
    }
     
     
    run = x4 - x3;
    rise = y4 - y3;
    if(run==0)
    {
    b3=abs(y4-y3)-1;
    }
    else{
    if(rise==0)
    {
    b3=abs(x4-x3)-1;
    }
     
    else{
     
     
    m = ((float) rise) / ((float) run);
     
     
    int b = y3*(x4-x3) - ((y4-y3)* x3);
     
    for (int x = (x3<x4?x3:x4)+1; x < (x3>x4?x3:x4); ++x)
    {
    float y = ((((y4-y3)* x) + b)*1.0)/(x4-x3);
     
    int rounded = (y > 0.0) ? floor(y + 0.5) : ceil(y - 0.5);
     
    if (rounded*(x4-x3)-(y4-y3)*x==b)
    b3++;
    }
    }
     
    }
     
    run = x1 - x4;
    rise = y1 - y4;
    if(run==0)
    {
    b4=abs(y4-y1)-1;
    }
    else{
    if(rise==0)
    {
    b4=abs(x4-x1)-1;
    }
    else{
     
     
    m = ((float) rise) / ((float) run);
     
     
    int b = y4*(x1-x4) - ((y1-y4)* x4);
     
    for (int x = (x4<x1?x4:x1)+1; x < (x4>x1?x4:x1); ++x)
    {
    float y = ((((y1-y4)* x) + b)*1.0)/(x1-x4);
     
    // cout<<y<<endl;
    int rounded = (y > 0.0) ? floor(y + 0.5) : ceil(y - 0.5);
     
     
     
    if (rounded*(x1-x4)-(y1-y4)*x==b)
    b4++;
    }
    }
     
    }
     
    // cout<<b1<<b2<<b3<<b4<<endl;
     
    allb=b1+b2+b3+b4+4;
     
    if(area1==area2)
    {
    areaf=area2;
    i=areaf+1-allb/2;
    ans=allb+i;
    printf("Case %d: %d\n",t2,ans);
     
    }
    else
    {
    areaf=(area1<area2)?area1:area2;
    i=areaf+1-allb/2;
    ans=allb+i;
    printf("Case %d: %d\n",t2,ans);
    }
     
     
    t2++;
    }
    return 0;
    } 