/*
 *Kartik Singal @ ka4tik
 */
#include<bits/stdc++.h>
using namespace std;
#define s(n) scanf("%d",&n);
double poly_area(const vector<int>&x,vector<int>&y) {
    double res=0;
    for(int i=0;i<x.size();i++)
    {
        int xx,yy;
        if(i)
        {
            xx=x[i-1];
            yy=y[i-1];
        }
        else
        {
            xx=x[x.size()-1];
            yy=y[y.size()-1];
        }
        res+=(xx-x[i])*(yy+y[i]);
    }
    return fabs(res)/2;
}
int tri_area2(int x1,int y1,int x2,int y2,int x3,int y3)
{
    return (x1*(y2-y3)+x2*(y3-y1)+x3*(y1-y2));
}
double tri_area(int x1,int y1,int x2,int y2,int x3,int y3)
{
    return abs(tri_area2(x1,y1,x2,y2,x3,y3))/2.0;
}
int f(int x1,int y1,int x2,int y2)
{
    int a=__gcd(abs(x1-x2),abs(y1-y2))+1;
    return a;
}
int main()
{
    //freopen("in","r",stdin);

    int test;s(test);
    int kase=0;
    while(test--)
    {
        kase++;
        vector<int> x(4),y(4);
        for(int i=0;i<4;i++)
        {
            s(x[i]);s(y[i]);
        }
        //double area=tri_area(x[0],y[0],x[1],y[1],x[2],y[2])+
            //tri_area(x[2],y[2],x[3],y[3],x[0],y[0]);
        double area=poly_area(x,y);
        int b=0;
        for(int i=0;i<4;i++)
            b+=f(x[i],y[i],x[(i+1)%4],y[(i+1)%4]);
        b-=4;
        double ans=area-b/2+1;
        ans+=b;
        int a=ans;
        printf("Case %d: %d\n",kase,a);
    }
    return 0;
}

