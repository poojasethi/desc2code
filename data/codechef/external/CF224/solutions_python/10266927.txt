#include<bits/stdc++.h>
#define ll long long int
using namespace std;

struct node
{
	ll x,y;
}ar[10005];
node p0;
void swap(node &a,node &b)
{
	node temp=a;
	a=b;
	b=temp;
}
int orientation(node p,node q, node r)
{
	ll val=((q.y-p.y)*(r.x-q.x))-((q.x-p.x)*(r.y-q.y));
	if(val==0) return 0;
	return (val>0)?1:2;
}
ll dist(node p,node q)
{
	return ((p.x-q.x)*(p.x-q.x))+((p.y-q.y)*(p.y-q.y));
}
int cmp(const void* g,const void* f)
{
	node *p1=(struct node*) g;
	node *p2=(struct node*) f;
	int o=orientation(p0,*p1,*p2);
	if(o==0) return (dist(p0,*p1)<=dist(p0,*p2))? -1:1;
	return (o==2)?-1:1;
}
node next_to(stack<node> &s)
{
	node p1=s.top();
	s.pop();
	node p2=s.top();
	s.push(p1);
	return p2;
}
int main()
{
	ll n,i,x,y;
	scanf("%lld",&n);
	for(i=0;i<n;i++)
	{
		//scanf("%lld%lld",&ar[i].x,&ar[i].y);
		cin>>ar[i].x>>ar[i].y;
	}
	//printf("3.%lld %lld\n",(ll)ar[8424].x,(ll)ar[8424].y);
	ll ind=0;
	for(i=1;i<n;i++)
	{
		if(ar[i].y<ar[ind].y||(ar[i].y==ar[ind].y&&ar[i].x<ar[ind].x)) ind=i;
	}
	//printf("1.%lld %lld %lld\n",ar[0].x,ar[0].y,ind);
	swap(ar[0],ar[ind]);

	p0=ar[0];
	qsort(&ar[1],n-1,sizeof(node),cmp);
	ll m=1;
	for(ll i=1;i<n;i++)
	{
		while(i<n-1&&orientation(p0,ar[i],ar[i+1])==0) i++;
		ar[m]=ar[i];
		m++;
	}
	stack<node> s;
	s.push(ar[0]);
	s.push(ar[1]);
	s.push(ar[2]);
	for(i=3;i<m;i++)
	{
		while(orientation(next_to(s),s.top(),ar[i])!=2)
		s.pop();
		s.push(ar[i]);
	}
	node p1=s.top(),p3;
	p3=p1;
	ll size=s.size();
	//printf("%lld",size);
	//printf("%lld %lld\n",p1.x,p1.y);
	s.pop();
	double sum=0.0;
	while(!s.empty())
	{
		node p2=s.top();
		//printf("%lld %lld %lld %lld\n",p1.x,p1.y,p2.x,p2.y);
		sum+=sqrt((double)dist(p1,p2));
		p1=p2;
		//printf("%lld %lld\n",p1.x,p1.y);
		s.pop();
	}
	if(size>2) sum+=sqrt((double)dist(p3,p1));
	printf("%.1lf\n",sum);
	return 0;
}
