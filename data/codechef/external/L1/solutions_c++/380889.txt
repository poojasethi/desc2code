#include<iostream>
#include<cstdio>
#include<cstring>
#include<cassert>
#include<cctype>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<numeric>
#include<utility>
#include<sstream>
using namespace std;
#define all(a) a.begin(),a.end()
#define pb push_back
#define eps (1e-9)
#define inf (1<<29)
#define SET(a) memset(a,-1,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))

struct abc{
  bool p;
  int y,x,d;
  
}a[2005],b[2005];

bool comp(const abc &a,const abc &b){
  if(a.y*b.x!=b.y *a.x) return a.y*b.x<b.y *a.x;
  return a.x*a.x +a.y*a.y<b.x*b.x +b.y*b.y;
}
bool comp2(const abc &a,const abc &b){
  if(a.y!=b.y) return a.y<b.y;
  return a.x<b.x;
}

int get(){
  int ret = 0,flag = 1;
  char ch;
  while(1){
    ch = getchar();
    if(ch == '-' || isdigit(ch)) break;
  }
  if(ch == '-') flag = -1;
  else 
    ret = ch -'0';
  while(1){
    ch = getchar();
    if(!isdigit(ch)) break;
    ret = ret*10 + ch -'0';
  }
  return ret*flag;
}
int main(){
  
  int t,i,j,k,pp,cnt,flag,n,m;
  scanf("%d",&t);
  while(t--){
    scanf("%d %d",&n,&m);
    for(i = 0;i<n;i++) a[i].x = get(),a[i].y = get(),a[i].p=1;//scanf("%d %d",&x[i],&y[i]);
    for(i = 0;i<m;i++) a[i+n].x = get(),a[i+n].y= get(),a[i+n].p = 0;//scanf("%d %d",&xs[i],&ys[i]);
    cnt = 0;
    sort(a,a+n+m,comp2);
    for(i = 0;i<n+m;i++){
      
      if(a[i].p==0) continue;
      k = 0;
      for(j = i+1;j<n+m;j++){
	b[k].x = a[j].x - a[i].x;
	b[k].y = a[j].y - a[i].y;
	
	b[k++].p = a[j].p;
      }
      sort(b,b+k,comp);
      
      pp = k;
      for(j = 0;j<pp;j++){
	k = j+1;
	if(b[j].p) //cout<<a[i].x<<"**"<<a[i].y<<endl<<b[j].x+a[i].x<<"***"<<b[j].y+a[i].y<<endl; 
	cnt++;
	
	while(k<pp && b[j].y*b[k].x == b[k].y*b[j].x){
	  k++;
	}
	j = k -1;
      }
      
    }
    
    printf("%d\n",cnt);
  }
  return 0;
}