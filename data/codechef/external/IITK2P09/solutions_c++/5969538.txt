#include<iostream>
#include<queue>
#include<vector>
#include<cstdio>
using namespace std;
queue<int> q;
int dist[200001];
vector<int> vec[200001];
int vis[200001];
int n1,n2,a,b,u,v,sz,i,m,n;
double sum;
int bfs1(int s){
for(i=0;i<=n;i++){
        dist[i]=0;
        vis[i]=-1;
    }
    m=0;
    q.push(s);
    dist[s]=0;
    vis[s]=0;
    while(!q.empty()){
        u=q.front();
        q.pop();
        if(vis[u]==1)continue;
        sz=vec[u].size();
        for(int i=0;i<sz;i++){
            v=vec[u][i];
            if(vis[v]==-1){
                vis[v]=0;
                q.push(v);
                dist[v]=dist[u]+1;
                if(dist[v]>m){
                    m=dist[v];
                    n1=v;
                }
            }
        }
        vis[u]=1;
    }
    return n1;

}
int bfs2(int s){
for(i=0;i<=n;i++){

        vis[i]=-1;
    }
    m=0;
    q.push(s);
    dist[s]=0;
    vis[s]=0;
    while(!q.empty()){
        u=q.front();
        q.pop();
        if(vis[u]==1)continue;
        sz=vec[u].size();
        for(int i=0;i<sz;i++){
            v=vec[u][i];
            if(vis[v]==-1){
                vis[v]=0;
                q.push(v);
                 sum+=max(dist[v],dist[u]+1);
                // cout<<v<<" "<<max(dist[v],dist[u]+1)<<endl;
                dist[v]=dist[u]+1;
                if(dist[v]>m){
                    m=dist[v];
                    n1=v;
                }
            }
        }
        vis[u]=1;
    }
    return n1;

}
int main(){
int t;
scanf("%d",&t);

while(t--){
    scanf("%d",&n);
    for(i=0;i<=200000;i++)vec[i].clear();
    for(i=1;i<n;i++){
        scanf("%d %d",&a,&b);
        vec[a].push_back(b);
        vec[b].push_back(a);
        dist[i]=100000000;
        vis[i]=-1;
    }

        n1=bfs1(1);

        n2=bfs1(n1);

     sum=dist[n2];
     bfs2(n2);
    sum=sum/n;
    printf("%.7f\n",sum);


}
return 0;
}
