#include<bits/stdc++.h>
using namespace std;
#define ll long long


pair<int,int> max_down[200010];
int max_top[200010]={0};
int parent[200010]={0};
bool visited[200010]={false};
vector<int> edges[200010];
long long res=0;

void dfs(int i)
{
	visited[i]=true;
	int maxi=0,smaxi=0;
	for(int j=0;j<edges[i].size();j++)
	{
		//cout<<i<<" "<<edges[i][j]<<"     ";
		if(!visited[edges[i][j]])
		{
			parent[edges[i][j]]=i;
			dfs(edges[i][j]);
			if(maxi<(1+max_down[edges[i][j]].first)){smaxi=maxi;maxi=1+max_down[edges[i][j]].first;}
			else if(smaxi<(1+max_down[edges[i][j]].first))smaxi=(1+max_down[edges[i][j]].first);
		}
	}
	max_down[i]=make_pair(maxi,smaxi);
	
	//cout<<1<<" "<<i<<" "<<maxi<<" "<<smaxi<<endl;
	
}

void dfs2(int i)
{
	visited[i]=true;
	if(i==1)
	{
		max_top[i]=0;
		res+=max_down[i].first;
		
	}
	else
	{
		int par=parent[i];
		
		int max_res=max_down[i].first,maxtop=1+max_top[par];
		
		if(max_down[par].first == (1+max_down[i].first ))
		{
			
			maxtop=max(maxtop,1+max_down[par].second);
		}
		else
		{
			
			maxtop=max(maxtop,1+max_down[par].first);
		}
		max_top[i]=maxtop;
		max_res=max(max_res,max_top[i]);
		//cout<<i<<" "<<max_top[i]<<" "<<max_res<<endl;
		res+=max_res;
		
	}
	
	for(int j=0;j<edges[i].size();j++)
		{
			if(!visited[edges[i][j]])
			{
				//cout<<i<<" "<<edges[i][j]<<" !!!   ";
				dfs2(edges[i][j]);
				
			}
		}
}
int main()
{
	
	int t;
	cin>>t;
	
	while(t--)
	{
		int n,te1,te2;
		res=0;
		scanf("%d",&n);
		for(int i=1;i<=n;i++){edges[i].clear();visited[i]=false;}
		
		for(int i=1;i<n;i++)
		{
			scanf("%d%d",&te1,&te2);
			//cout<<te1<<" "<<te2<<endl;
			edges[te1].push_back(te2);
			edges[te2].push_back(te1);
		}
		
		dfs(1);
		for(int i=1;i<=n;i++){visited[i]=false;}
		dfs2(1);
		double resu=(double)res/(double)n;
		printf("%0.7lf\n",resu);
		
	}
} 