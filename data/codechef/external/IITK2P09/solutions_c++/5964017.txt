#include<bits/stdc++.h>
using namespace std;
 
#define ll long long
 
vector<int>adj[211111];
bool vis[211111];
ll dist[211111],maxi,maxii;
int st,en;
void dfs1(int u){
	vis[u]=1;
	int i;
	if(maxi<dist[u]){
		maxii=u;
		maxi=dist[u];
	}
	for(i=0;i<adj[u].size();i++){
		if(!vis[adj[u][i]]){
			dist[adj[u][i]]=dist[u]+1;
			dfs1(adj[u][i]);
		}
	}
}
 
 
ll start[211111];
ll end[211111];
void dfs2(int u,int par){
	vis[u]=1;
	if(par!=-1)
	start[u]=start[par]+1;
	int i;
	for(i=0;i<adj[u].size();i++){
		if(!vis[adj[u][i]])
			dfs2(adj[u][i],u);
	}
}
 
 
void dfs3(int u,int par){
	vis[u]=1;
	if(par!=-1)
	end[u]=end[par]+1;
	int i;
	for(i=0;i<adj[u].size();i++){
		if(!vis[adj[u][i]])
			dfs3(adj[u][i],u);
	}
}
 
int main(){
	int i,n;
	int t;
	cin>>t;
	while(t--){
	cin>>n;
	for(i=0;i<n-1;i++){
		int u,v;
		cin>>u>>v;
		--u;
		--v;
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	maxi=0;
	maxii=0;
	st=0;
	en=0;
	dfs1(0);
	st=maxii;
	//cout<<st<<endl;
	memset(vis,0,sizeof(vis));
	memset(dist,0,sizeof(dist));
	maxi=0;
	maxii=0;
	dfs1(st);
	en=maxii;
	//cout<<en<<endl;
	memset(vis,0,sizeof(vis));
	dfs2(st,-1);
	memset(vis,0,sizeof(vis));
	dfs3(en,-1);
	ll sum=0;
	for(i=0;i<n;i++)
		sum+=max(start[i],end[i]);
	double ans=1.0*(double)sum;
	printf("%0.6lf\n",ans/(double)n);
	for(i=0;i<n;i++) adj[i].clear();
	memset(vis,0,sizeof(vis));
	memset(dist,0,sizeof(dist));
	memset(start,0,sizeof(start));
	memset(end,0,sizeof(end));
	}
	return 0;
} 