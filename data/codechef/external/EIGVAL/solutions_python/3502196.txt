#include <bits/stdc++.h>

using namespace std;

const int N = 505;
int sz;

vector < int > adj[N];
int color[N];

void reset ()
{
	for (int i = 0; i < N; i++)
		adj[i].clear ();
}

bool dfs (int v, int col)
{
	sz++;
	color[v] = col;
	for (int i = 0; i < adj[v].size (); i++)
		if (color[adj[v][i]] == -1)
		{
			if (!dfs (adj[v][i], col ^ 1))
				return false;
		}
		else if (color[adj[v][i]] == col)
			return false;
	return (sz >= 2);
}

bool Check (int n)
{
	memset (color, -1, sizeof (color));
	int cnt = 0;
	bool bp = false;
	for (int i = 0; i < n; i++)
		if (color[i] == -1)
		{
			cnt++;
			sz = 0;
			bp |= dfs (i, 0);
		}
	return (bp & cnt >= 2);
}

int main ()
{
	int T, n, m, x, y;
	cin >> T;
	while (T--)
	{
		cin >> n >> m;
		reset ();
		for (int i = 0; i < m; i++)
		{
			cin >> x >> y;
			adj[x].push_back (y);
			adj[y].push_back (x);
		}
		if (Check (n))
			cout << "YES" << endl;
		else
			cout << "NO" << endl;
	}
	return 0;
}