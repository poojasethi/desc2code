#include <iostream>
#include <algorithm>
#include <cstring>
#include <cstdio>

#define MOD 1000000007

using namespace std;

int pre[50005];
int dp[5006][5006][5][2];
int k;
char c[50005];

string s;

int solve(int pos, int cc, int sel, bool flag) {
    if(dp[pos][cc][sel][flag] != -1) return dp[pos][cc][sel][flag];
    if(sel > 3) return dp[pos][cc][sel][flag] = 0;
    if(pos == s.size()) {
        if(sel == 3 && cc >= k) {
            return dp[pos][cc][sel][flag] = 1;
        }
        else {
            return dp[pos][cc][sel][flag] = 0;
        }
    }
    int ans = 0;
    int add = (s[pos] == 'a');
    if(flag) {
        ans = (ans + solve(pos+1, cc+add, sel, 1))%MOD;
        ans = (ans + solve(pos+1, cc+add, sel+1, 1))%MOD;
        ans = (ans + solve(pos+1, cc, sel, 0))%MOD;
    }
    else {
        ans = (ans + solve(pos+1, cc, sel, 0))%MOD;
        ans = (ans + solve(pos+1, cc+add, sel+1, 1))%MOD;
    }
    return dp[pos][cc][sel][flag] = ans;
}

int main()
{
    int t;
    //ios_base::sync_with_stdio(false);
    cin >> t;

    while(t--) {
        scanf("%s", c);
        s = c;
        scanf("%d", &k);

        for(int i = 0; i < s.size()+5; i++) {
            for(int j = 0; j < s.size()+5; j++) {
                for(int k = 0; k < 5; k++) {
                    dp[i][j][k][0] = dp[i][j][k][1] = -1;
                }
            }
        }
        cout << solve(0,0,0,0) << endl;
    }
}
