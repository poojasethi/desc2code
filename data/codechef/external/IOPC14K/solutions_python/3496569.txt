#include <iostream>
#include <string>
#include <vector>
#include <cstdlib>
#include <map>
#include <set>
#include <algorithm>
#include <cstring>
#include <queue>
#include <stack>
#include <sstream>
#include <cstdio>
#include <ctime>
#include <cctype>
using namespace std;

#define mp make_pair
typedef long long llong;
typedef unsigned long long ullong;
typedef pair<llong, llong> PII;
typedef pair<llong, PII> PIP;
typedef vector<llong> VI;
typedef vector<VI> VVI;
const llong INF = (llong) 2e9;
#define MOD (llong)  1000000007
const llong MAXN = 100010;
short cur;
int len;
int m;
string S;
short cached[5010][5010][4][2];
int memo[5010][5010][4][2];
int dp(int id, int cnt, int got, int f){
	if(got < 0) return 0;
	if(id >= len) return cnt >= m && got == 0;
	if(cached[id][cnt][got][f] == cur) return memo[id][cnt][got][f];
	int res = 0;
	int p = S[id] == 'a';
	if(f > 0){
		// extend substring
		res += dp(id + 1, cnt + p, got, 1);
		// end substring
		res += dp(id, cnt, got, 0);
	}else{
		// ignore char
		res += dp(id + 1, cnt, got, 0);
		// start substring
		res += dp(id + 1, cnt + p, got - 1, 1);
	}
	cached[id][cnt][got][f] = cur;
	return memo[id][cnt][got][f] = res % 1000000007;
}
int main()
{
	ios_base::sync_with_stdio(false);
	// freopen("input.txt", "r", stdin);
	int tc;
	cin >> tc;
	for(cur = 1; cur <= tc; ++cur){
		cin >> S >> m;
		len = S.size();
		cout << dp(0, 0, 3, 0) << endl;
	}
	return 0;
}
