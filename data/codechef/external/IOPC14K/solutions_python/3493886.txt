#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<string>
#include<string.h>
#include<cstring>
#include<stack>
#include<queue>
#include<cassert>
#include<cmath>
using namespace std;

#define LL long long int
#define PII pair<int,int>
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define debug(args...) do {cerr << #args << ": "; dbg,args; cerr << endl;} while(0)
#define MOD 1000000007

string s;
int dp[5001][5001][3][2];
int vis[5001][5001][3][2];
int citer = 0;
char ss[2000];
int  getans(int n, int m, int cinter, int contin){
    if(m < 0)m = 0;
    if(n == -1)return (m == 0 && cinter == 0);
    int &cret = dp[n][m][cinter][contin];
    int &cvis = vis[n][m][cinter][contin];
    if(cvis != citer){
        LL ret = 0;
        cvis = citer;
        ret += getans(n - 1, m, cinter, 0);
        if(s[n] != 'a'){
            if(contin  == 1){
                ret += getans(n - 1, m, cinter, 1);
            }
            if(cinter > 0)
                ret += getans(n - 1, m, cinter - 1, 1);
        }
        else{
            if(contin == 1)
                ret += getans(n - 1, m - 1, cinter, 1);
            if(cinter > 0)
                ret += getans(n - 1, m - 1, cinter - 1, 1);
        }
        cret = ret % MOD;
    }
    return cret;
}
int main(){
    int t, m;
    cin >> t;
    while(t--){
        citer += 2;
        cin >> s >> m;
        cout<<getans(s.size() - 1, m, 3, 0)<<endl;
    }
        
    return 0;
}
