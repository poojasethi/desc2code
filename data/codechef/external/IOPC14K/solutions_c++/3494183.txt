#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#define M 1000000007

using namespace std;

int m,n;
char s[5002];

long long dp[5002][5002][3][2];

long long f(int idx, int cnt, int num, int flag)
{         
     if ( cnt == m+1 ) cnt = m;
     if ( num == 3 && cnt == m ) return 1;
     if ( num == 3 ) return 0;     
     if ( idx == n ) {
          if ( cnt == m && flag == 1 && num == 2 ) return 1;
          return 0;
     }
     long long &ans = dp[idx][cnt][num][flag];
     if ( ans != -1 ) return ans;
     ans = 0;
     if ( flag == 0 ) {
          ans += f(idx+1, cnt, num, flag)%M;
          ans %= M;
          ans += f(idx+1, cnt + (s[idx] == 'a'), num, 1)%M;
          ans %= M;
     }
     else {
          ans += f(idx+1, cnt + (s[idx] == 'a'), num, 1)%M;
          ans %= M;
          ans += f(idx, cnt, num+1, 0)%M;
          ans %= M;
     }
     return ans;
}

int main()
{
    
    int t;
    scanf("%d", &t);
    
    while ( t-- ) {
          scanf("%s", s);
          scanf("%d", &m);
          n = (int)(strlen(s));
          for (int i = 0; i < n+1; i++) {
            for (int j = 0; j < m+2; j++) {
                for (int k = 0; k < 3; k++) {
                    for (int l = 0; l < 2; l++) {
                        dp[i][j][k][l] = -1;
                    }
                }
            }
         }
          long long ans = f(0,0,0,0)%M;
          printf("%lld\n", ans);
    }
    return 0;
}
