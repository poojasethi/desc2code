#include <cstring>
#include<cstdio>
#include<vector>
#include<stack>
#include<map>
#include<queue>
#include<set>
#include<list>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<climits>
#include<cstdlib>
#define snd(a) scanf("%d",&(a))
#define snlld(a) scanf("%lld",&(a))
#define rep(i,n) for((i)=0;(i)<(n);(i)+=1)
#define reps(i,s,n) for((i)=(s);(i)<(n);(i)+=1)
#define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define pb push_back
#define pf push_front
#define all(a) (a).begin(),(a).end()
#define rall(a) (a).rbegin(),(a).rend()
#define fill(a,v) memset((a),(v),sizeof(a))
#define sz size()
#define mp make_pair
#define N 100010
#define mod  1000000007
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
template<class T> inline T poww(T b,T p){ll a=1;while(p){if(p&1){a=(a*b);}p>>=1;b=(b*b);}return a;}
template<class T> inline T modpoww(T b,T p,T mmod){ll a=1;while(p){if(p&1){a=(a*b)%mmod;}p>>=1;b=(b*b)%mmod;}return a%mmod;}
template<class T>  inline T gcd(T a,T b){ if(b>a)return gcd(b,a);return ((b==0)?a:gcd(b,a%b));}
template<class T> inline void scan(vector<T>& a,int n){T b;int i; rep(i,n){cin>>b;a.pb(b);}}
#define modd  20071027
#define pii pair<int,int>
#define vpii vector<pii >
#define vi vector<int>
#define vvi vector<vi >
#define vl vector<long long>
#define fr first
#define sd second
//ios_base::sync_with_stdio(0);

int done[1200];
double d[1010][1010];

int main(){
    int i,j,k,n,t;
    double p,mx;
    snd(t);
    while(t--){
        mx=mod;
        snd(n);

        rep(i,n+1)rep(j,n+1){d[i][j]=-mod;if(i==j)d[i][j]=0.0;}
        cin>>i>>j>>p;
        while(1){
            if(i==-1&&j==-1&&p==-1)break;
            d[i][j]=d[j][i]=p;
            cin>>i>>j>>p;
        }
       // cout<<"n="<<n<<":\n";
       //floyd warshall...............
        reps(k,1,n+1)
        reps(i,1,n+1)
        reps(j,1,n+1)if(i!=j&&j!=k&&i!=k){d[i][j]=max(d[i][j],min(d[i][k],d[k][j]));}
      // if(n==1)d[1][1]=0.0;
       printf("%.10lf\n",d[n][1]);
    }


}
