#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<string>
#include<cstring>
#include<cmath>
#include<vector>
using namespace std;
#define pb push_back
typedef struct ty
{
	int ind;
	double wt;
}type;
void solve();
int main()
{
	int t;
	scanf("%d",&t);
	for(int i=0;i<t;i++)
	solve();
}
void solve()
{
	int v;
	scanf("%d",&v);
	vector<type> g[v];
	while(1)
	{
		int v1,v2;
		double weight;
		scanf("%d %d %lf",&v1,&v2,&weight);
		if(v1 == -1)
		break;
		v1--;
		v2--;
		type tmp;
		tmp.ind=v1;
		tmp.wt=weight;
		g[v2].pb(tmp);
		type tmp1;
		tmp1.ind=v2;
		tmp1.wt=weight;
		g[v1].pb(tmp1);
	}
	int vis[v];
	double dis[v];
	for(int i=0;i<v;i++)
	dis[i]=-1;
	for(int i=0;i<v;i++)
	vis[i]=0;
	vis[0]=1;
	int pv=0;
	dis[0]=1000000000;
	while(1)
	{
		if(vis[v-1]==1)
		break;
		
		for(int i=0;i<(int)g[pv].size();i++)
		{
			type tmp=g[pv][i];
			int ind=tmp.ind;
			if(vis[ind])
			continue;
			double wt=tmp.wt;
			double nv=min(wt,dis[pv]);
			if(dis[ind]<nv)
			{
				dis[ind]=nv;
			}
		}
		double max=-1;
		pv=-1;
		for(int i=0;i<v;i++)
		{
			if(!vis[i])
			{
				if(dis[i]>max)
				{
					max=dis[i];
					pv=i;
				}
			}
		}
		vis[pv]=1;
		if(pv == -1)
		break;
	}
	if(dis[v-1]==1000000000)
	dis[v-1]=0;
	printf("%lf\n",dis[v-1]);
}
	
		
		
		
		
		
		
		
		
		
		