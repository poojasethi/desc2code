#include<bits/stdc++.h>
#define ll long long
#define pi pair<double,int>
#define vi vector<int>
#define vpi vector< pi >
#define vvpi vector< vpi >
#define pb push_back
#define mp make_pair
using namespace std;
double dijkstra(int beg,int end,int n,vvpi &e)
{
    priority_queue< pi >  q;
    int node,i;
    double factor,vis[n+1];
    for(i=0;i<=n;i++)
        vis[i]=-1;
    q.push(mp(101,beg));
    while(!q.empty())
    {
        factor=q.top().first;
        node=q.top().second;
        q.pop();
        for(i=0;i<e[node].size();i++)
            if(vis[e[node][i].second]<(min(factor,e[node][i].first)))
                {
                    vis[e[node][i].second]=(min(factor,e[node][i].first));
                    q.push(mp(min(factor,e[node][i].first),e[node][i].second));
                }
    }
    for(int i=n;i>=0;i--)
    if(vis[i]>-1)
        return vis[i];
}
int main()
{
    int t;
    int n,m,a,b,i,ans;
    double c;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&n);
        vvpi e(n+1);
        while(1)
        {
            scanf("%d%d %lf",&a,&b,&c);
            if(a==-1)
                break;
            e[a].pb(mp(c,b));
            e[b].pb(mp(c,a));
        }
        printf("%.7lf\n",dijkstra(1,n,n,e));
    }
    return 0;
}
