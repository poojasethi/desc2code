#include<stdio.h>
#include<algorithm>
#include<iostream>
using namespace std;

struct edge{
    long long int src,dest;
    double wt;
};
long long int tc,n,m,i,a,b,par[1000001];
double c,ans;
edge edges[1000000];

bool compare(edge a,edge b){
    return a.wt > b.wt;
}
long long parent(long long int par[],long long int i){
    if(i == par[i])
        return i;
    par[i] = parent(par,par[i]);
    return par[i];
}
double MST(long long int par[],edge edges[],long long int edg_no,long long int n){
    double lo;
    for(long long int i=0;i<edg_no;i++){
        if(parent(par,edges[i].src) != parent(par,edges[i].dest)){
            par[parent(par,edges[i].src)] = parent(par,edges[i].dest);
            lo = edges[i].wt;

        }
        if(parent(par,1) == parent(par,n-1))
            break;
    }
    return lo;
}
int main(){
    scanf("%lld",&tc);
    while(tc--){
        scanf("%lld",&n);

        for(i=0;i<=n;i++)
            par[i] = i;
        i = 0;
        while(1){
            scanf("%lld%lld%lf",&a,&b,&c);
            if(a==-1 && b==-1 && c==-1)
                break;
            edges[i].src = a;
            edges[i].dest = b;
            edges[i].wt = c;
            i++;
        }
        m = i;
        sort(edges,edges+m,compare);
        ans = MST(par,edges,m,n+1);
        printf("%.6lf\n",ans);
    }
    return 0;
}
