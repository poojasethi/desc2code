#include<stdio.h>
#define MAX -1000000000
#include<queue>
#include<iostream>
 
using namespace std;
int n;
double a[2505][2505];
double d[2505];
bool vis[2505];
double x[2505],y[2505];
struct node
{
	int x;
	double dist;
	node(){}
	node(int px,double pd)
	{
		x=px;
		dist=pd;
	}
};
bool operator<(node a,node b)
{
	return a.dist<b.dist;
}
int main()
{
	int t,i;
	double c,fmin,fmax;
	scanf("%d",&t);
	while(t--)
	{
		
		scanf("%d",&n);
		for(i=0;i<=n+5;i++)
			{
				d[i]=MAX;
				vis[i]=0;
			}
			//scanf("%d",&n);
  int j,p,r;
 	while(1)
 	{
 		scanf("%d %d %lf",&p,&r,&c);
 		if(c>fmax)
 		fmax=c;
 		if(p==-1 && r==-1 && c==-1)
 		break;
 		
 		a[p][r]=a[r][p]=c;
 	}
 		
		priority_queue<node> q;
		q.push(node(1,fmax));
		d[1]=fmax;
		while(q.empty()==false)
		{
			node top=q.top();
			q.pop();
			
			if(vis[top.x]==0)
			{
			for(i=1;i<=n;i++)
			{
					
					fmin=std::min(top.dist,a[top.x][i]);
					if(d[i]<fmin || d[i]==MAX)
					{
						//printf("\nworking");	
						d[i]=fmin;
						q.push(node(i,d[i]));
					}
				
							
			}
			}
			vis[top.x]=1;
		}
		printf("\n%lf",d[n]);
	}
	return 0;
} 
