#include <bits/stdc++.h>
#define pp pair<int,double>
using namespace std;

double dist[1001][1001];
double safety[1001];
bool vis[1001];

struct vert {
	int idx;
	double cost;
};

bool operator<(const vert &a,const vert &b)
{
	return a.cost<b.cost;
}

int main()
{
	int t,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		for (int i = 1; i <=n; ++i)
		{
			for (int j = 1; j <=n; ++j)
			{
				dist[i][j] = -1;
			}
		}
		for (int i = 1; i <= n; ++i)
		{
			safety[i] = -1;
		}
		memset(vis,0,sizeof(vis));
		int src,dst;
		double saf;
		while(1)
		{
			scanf("%d%d%lf",&src,&dst,&saf);
			if (src==-1)
				break;
			dist[src][dst] = saf;
			dist[dst][src] = saf;
		}
		safety[1] = 100.0;
		priority_queue<vert> pq;
		vert temp;
		temp.idx=1;
		temp.cost = 100.0;
		pq.push(temp);
		while(!pq.empty())
		{
			temp = pq.top();
			pq.pop();
			int u = temp.idx;
			double c = temp.cost;
			if(vis[u]==1)
				continue;
			vis[u] = 1;
			for (int i = 1; i <= n; ++i)
			{
				if(dist[u][i]!=-1)
				{
					if(safety[i]<min(c,dist[u][i]))
					{
						safety[i] = min(c,dist[u][i]);
						temp.idx = i;
						temp.cost = safety[i];
						pq.push(temp);
					}
				}
			}
		}
		printf("%.7lf\n", safety[n]);
	}
	return 0;
}