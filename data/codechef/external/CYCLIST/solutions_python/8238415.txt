/*input
2
4
1 2 4.0
1 3 7.0
1 4 1.0
2 3 5.0
2 4 3.0
3 4 2.0
-1 -1 -1
4
1 2 40.0
1 3 8.0
1 4 11.0
2 3 21.0
3 4 30.0
-1 -1 -1
*/

#include <bits/stdc++.h>
using namespace std;

#define ll long long
#define PII pair<ll, ll>
#define f first
#define s second
#define F(i,a,b) for(ll i = (ll)(a); i <= (ll)(b); i++)
#define RF(i,a,b) for(ll i = (ll)(a); i >= (ll)(b); i--)
#define Max 1000005

ll arr[Max],size[Max];

ll root (ll i)
{
    while(arr[ i ] != i)
    {
        arr[i] = arr[arr[i]]; 
        i = arr[i]; 
    }
    return i;
}

void initialize(ll n)
{
    for(ll i=1;i<=n;i++)
    {
        arr[i] = i;
        size[i] = 1;
    }
}

void w_union(ll a,ll b)
{
    ll root_a = root(a);
    ll root_b = root(b);
    if(root_a==root_b)
    return;
    if(size[root_a] < size[root_b])
    {
        arr[root_a] = root_b;
        size[root_b] += size[root_a];
    }
    else
    {
        arr[root_b] = root_a;
        size[root_a] += size[root_b];
    }
}

ll t,n,u,v,len;
double tmp;
vector <pair < double,  PII > > adj;

int main() 
{
    ios_base::sync_with_stdio(false);cin.tie(0);
	cin>>t;
	while(t--)
	{
		cin>>n;
	    initialize(n);
		adj.clear();
		while(1)
		{
			cin>>u>>v>>tmp;
			if(u==-1)
				break;
			adj.push_back({tmp,{u,v}});
		}
		sort(adj.begin(),adj.end());
		len=adj.size();
		RF(i,len-1,0)
		{
			w_union(adj[i].s.f,adj[i].s.s);
			if(root(n)==root(1))
			{
				printf("%lf\n",adj[i].f);
				break;
			}
		}
	}	
    return 0;
}