#include<iostream>
#include<vector>
#include<algorithm>
#include<stdio.h>
using namespace std;
vector<pair<double, pair<long long ,long long> > > edge;
long long parent[1000000];

long long find(long long x)
{
    if (parent[x]==x)
    return x;
    else
    return parent[x]=find(parent[x]);
}
int main()
{
    long long t,u,v,i,parentx,parenty;
    double w,ans;
    long cases;
    cin>>cases;
    while(cases--)
    {
    edge.clear();
    cin>>t;
    ans=0;
    for(i=1;i<=t;i++)
    parent[i]=i;
    cin>>u>>v>>w;
    while(u!=-1 || v!=-1 || w!=-1)
    {
        edge.push_back(make_pair(w,make_pair(u,v)));
        cin>>u>>v>>w;
    }
    sort(edge.begin(),edge.end());
    
    for(i=edge.size()-1;i>=0;i--)
    {
        parentx=find(edge[i].second.first);
        parenty=find(edge[i].second.second);
        if(parentx!=parenty)
        {
            parent[parenty]=parentx;
            ans=edge[i].first;
            if(find(1)==find(t))
        break;
        }
        
    }
    
      printf("%.6lf\n",ans);
    }
    
    
}