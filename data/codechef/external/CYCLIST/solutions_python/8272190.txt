#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<string.h>
#include<limits.h>
#include<map>
#include<vector>
#include<queue>
#define pp pair<int,double>
double safety[1005];
bool marked[1005];
using namespace std;
class comparison
{
public:
int operator() (pp p1,pp p2)
{
return p1.second<p2.second;
}
};
int main()
{
int t,u,v,n,x,y;
double w;
scanf("%d",&t);
while(t--)
{
fill(marked,marked+1005,0);
fill(safety,safety+1005,-1);
safety[1]=0;
scanf("%d",&n);
vector< pair<int,double> > adj[n+1];
priority_queue< pp , vector< pp > , comparison > q;
scanf("%d%d%lf",&u,&v,&w);
while(u!=-1&&v!=-1&&w!=-1)
{
adj[u].push_back(pair<int,double>(v,w));
adj[v].push_back(pair<int,double>(u,w));
scanf("%d%d%lf",&u,&v,&w);
}
q.push(pp(1,0));

while(!q.empty())
{
x=q.top().first;
q.pop();
if(marked[x])
continue;
marked[x]=1;
for(int k=0;k<adj[x].size();k++)
{
y=adj[x][k].first;
w=adj[x][k].second;
//cout<<x<<" "<<y<<" "<<w<<endl;
if(marked[y])
continue;
if(safety[y]<0)
{
safety[y]=w;
q.push(pp(y,safety[y]));
}
 if(min(safety[x],w)>safety[y])
{
safety[y]=min(safety[x],w);
q.push(pp(y,safety[y]));
}
}
}
//for(int i=0;i<=n;i++)
printf("%0.7lf\n",safety[n]);
}
}