#include<iostream>
#include<stdio.h>
#include<queue>
using namespace std;
int main()
{
	long long int t,x,a,b,g,h,n,i,y;
	double c;
	scanf("%lld",&t);
	
	while(t--)
	{
		priority_queue<pair<double,pair<long long int,long long int> >,vector< pair<double,pair<long long int,long long int> > > > q;//maximum priority queue...
			scanf("%lld",&n);
		    long long int ar[n+1],rank[n+1],par[n+1];
		    double ans;
				scanf("%lld",&a);
					scanf("%lld",&b);
						scanf("%lf",&c);
						pair <long long int,long long int> p;
						pair<double,pair<long long int,long long int> > s;
						while((a!=-1)||(b!=-1)||(c!=-1))
						{
							p.first=a;
							p.second=b;
							s.first=c;
							s.second=p;
							q.push(s);
							
							scanf("%lld",&a);
					        scanf("%lld",&b);
						    scanf("%lf",&c);
						}
						//all elements have been pushed into the queue.......
						for(i=0;i<=n;i++)
						{
							ar[i]=0;
							rank[i]=0;
							par[i]=i;
						}
						ans=q.top().first;
							while(q.empty()==0)
	{
		x=q.top().second.first;
		
		y=q.top().second.second;
		g=x;
		h=y;
		while(par[g]!=g)
		{
			g=par[g];
		}
		
		par[x]=g;
		
		while(par[h]!=h)
		{
			h=par[h];
		}
		
		par[y]=h;
		if(g!=h)
		{
			if(((double)(q.top().first))<((double)ans))
			ans=(q.top().first);
			if(rank[g]>rank[h])
			{
				par[h]=g;
				
			}
			else if(rank[h]>rank[g])
			{
				par[g]=h;
				
			}
			else if(rank[h]==rank[g])
			{
				par[h]=g;
				rank[g]++;
				
			}
		}
		q.pop();
			g=1;
		h=n;
		while(par[g]!=g)
		{
			g=par[g];
		}
		
	
		
		while(par[h]!=h)
		{
			h=par[h];
		}
		if(g==h)
		break;
	}
						
		printf("%0.7lf\n",ans);
	}
} 