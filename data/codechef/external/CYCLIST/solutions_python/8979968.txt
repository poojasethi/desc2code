#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<stdio.h>
using namespace std;

class CompareDist
{
public:
    bool operator()(pair<int,double> n1,pair<int,double> n2) {
        return n1.second<n2.second;
    }
};


int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int v,i,j,k;
        cin>>v;
        double am[1001][1001];
        vector<pair<int,double> >al[v+1];
        for(i=0;i<v;i++)
            for(j=0;j<v;j++)
            am[i][j]=0;
        vector<pair<int,double> >::iterator it;
        vector<double> cost(v+1,-1);//****check for v+1
        priority_queue<pair<int,double>, vector<pair<int,double> >,CompareDist >pq;
        pair<int,double> p(1,1.0);
        int s=0,hostel=v-1;
        //cout<<"yo";
        while(1)//**this may be wrong. else initialise pair also
        {
            cin>>s>>p.first>>p.second;
            if(s==-1&&p.first==-1&&p.second==-1)
                break;
            am[s-1][p.first-1]=p.second;
            am[p.first-1][s-1]=p.second;
        }

        /*for(i=0;i<v;i++)
        {for(j=0;j<v;j++)
            cout<<am[i][j]<<" ";
        cout<<endl;}*/
        for(i=0;i<v;i++)
        {
            for(j=0;j<v;j++)
            {
                if(am[i][j]!=0)
                {
                    pair<int,double> p;
                    p.first=j;
                    p.second=am[i][j];
                    al[i].push_back(p);
                }
            }
        }
        if(v==1)
        {cout<<0<<endl;continue;}
        /*for(i=0;i<v;i++)
        {for(j=0;j<al[i].size();j++)
            cout<<al[i][j].second<<" ";
        cout<<endl;}*/
        for(it=al[0].begin();it<al[0].end();it++)
        {
            pq.push(*it);
        }
        while(!pq.empty())
        {
            pair<int,double> temp;
            temp=pq.top();
            pq.pop();
            if(cost[temp.first]==-1)
            {
                cost[temp.first]=temp.second;
                for(it=al[temp.first].begin();it<al[temp.first].end();it++)
                {
                    pair<int,double> temp2;
                    temp2=*it;
                    temp2.second=min(temp2.second,temp.second);
                    pq.push(temp2);
                }
            }
        }
        printf("%lf\n",cost[hostel]);
    }

return 0;}
