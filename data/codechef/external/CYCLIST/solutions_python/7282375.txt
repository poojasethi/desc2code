#include<cstdio>
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include<cmath>
#include<string>
#include<cstdlib>
#include<climits>
#include<cstring>
using namespace std;

#define PB push_back
#define INF 1000000000
#define MOD 1000000007
#define MP make_pair
#define tr(container , it) for(typeof(container.begin()) it=container.begin() ; it!=container.end() ; it++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) FOR(i,0,a)
#define LL long long
#define VI vector < int >
#define PII pair < int , int >


void precompute(void)
{
}
int i,par[1024],rank[1024];
void init(int x)
{
	for(i=0;i<=x;i++)
	{
		par[i]=i;
		rank[i]=1;
	}
}

int find(int x)
{
	if(par[x]==x)
		return x;
	return par[x]=find(par[x]);
}

void Union(int x,int y)
{
	if(rank[x]>rank[y])
	{
		rank[y]++;
		par[x]=y;
	}
	else
	{
		rank[x]++;
		par[y]=x;
	}
}



int main()
{
	int t,v,u,V,i,m;
	vector < pair < double , PII > > E;
	double ans,val;
	precompute();
	while(scanf("%d",&t)!=EOF)
	{
		while(t--)
		{
			E.clear();
			scanf("%d",&V);
			while(1)
			{
				scanf("%d%d%lf",&u,&v,&val);
				if(u==-1)
					break;
				E.PB(MP(val,MP(u,v)));
			}
			sort(E.begin(),E.end());
			init(V+10);
			m=(int)E.size();
			for(i=m-1;i>=0;i--)
			{
				if(find(1)==find(V))
					break;
				ans=E[i].first;
				u=E[i].second.first;
				v=E[i].second.second;
				if(find(u)!=find(v))
				{
					Union(find(u),find(v));
				}
			}
			printf("%lf\n",ans);
		}
	}
	return 0;
}