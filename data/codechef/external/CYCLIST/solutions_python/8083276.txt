#include <bits/stdc++.h>

typedef long long ll;
using namespace std;

#define INF 1000000000
#define pdi pair<double,int>

vector< pair<int,double> >Adj[1010];
double d[1010];

double dijkstra(int s,int f,int n) {
    priority_queue<pdi,vector<pdi>,greater<pdi> >Q;
    int i,u,v; double w;
    for(i=0;i<n;i++) d[i]=INF;
    d[s]=-INF;
    Q.push(make_pair(-INF,s));
    while(!Q.empty())
    {
        u=Q.top().second;
        w=Q.top().first;
        Q.pop();
        if(w == d[u]) {
            for(i=0;i<(int)Adj[u].size();i++)
            {
                v = Adj[u][i].first;
                w =  Adj[u][i].second;
                if(d[v]==INF || d[v] > max(d[u],w))
                {
                    d[v] = max(d[u],w);
                    Q.push(make_pair(d[v],v));
                }
            }
        }
    }
    if(d[f]<0) d[f]=-d[f];
    return d[f];
}

int main()
{
    int t,n,u,v,i;
    double w;
    scanf("%d",&t);
    while(t--) {
        scanf("%d",&n);
        for(i=0;i<n;i++) Adj[i].clear();
        while(true) {
            scanf("%d %d %lf",&u,&v,&w);
            if(u==-1) break;
            --u,--v;
            assert(u>=0 && u<n && v>=0 && v<n);
            Adj[u].push_back(make_pair(v,-w));
            Adj[v].push_back(make_pair(u,-w));
        }
        printf("%.6lf\n",dijkstra(0, n-1, n));
    }
    return 0;
}