#include<iostream>
#include<vector>
using namespace std;
class rectangle{
public:
	int left;
	int right;
	int top;
	int bottom;	
	
};

bool equals(rectangle*rect1,rectangle*rect2){
	if(rect1->left == rect2->left && rect1->right == rect2->right && rect1->top == rect2->top && rect1->bottom == rect2->bottom)
	return true;
	else return false;
}

rectangle* intersection(rectangle*rect1,rectangle*rect2){
	if(rect1->left >= rect2->right || rect1->right <= rect2->left || rect1->top <= rect2->bottom || rect1->bottom >= rect2->top){
		return NULL;
	}
	
	else{
		rectangle* result = new rectangle();
		result->left = max(rect1->left,rect2->left);
		result->right = min(rect1->right,rect2->right);
		result->bottom = max(rect1->bottom,rect2->bottom);
		result->top = min (rect1->top,rect2->top);
		if(equals(result,rect1) || equals(result,rect2))
			return NULL;
		else{
			return result;
		}
	}
}


int main(){
	int inputs;
	cin>>inputs;
	vector<rectangle*>results;
	for(int i=0;i<inputs;i++){
		rectangle * rect1, *rect2;
		rect1= new rectangle();
		rect2 = new rectangle();
		cin>>rect1->left;
		cin>>rect1->bottom;
		cin>>rect1->right;
		cin>>rect1->top;
		cin>>rect2->left;
		cin>>rect2->bottom;
		cin>>rect2->right;
		cin>>rect2->top;
		results.push_back(intersection(rect1,rect2));
	}
	for(int i=0;i<inputs;i++){
		if(results[i] == NULL){
			cout<<"No Overlap"<<endl;
		}
		else{
			cout<<results[i]->left<<" "<<results[i]->bottom<<" "<<results[i]->right<<" "<<results[i]->top<<endl;
		}
	}
}