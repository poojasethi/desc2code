#include<iostream>
#include<stdio.h>
#include<functional>
#include<algorithm>
#include<math.h>
#include<limits.h>

#include<set>
#include<vector>
#include<map>
#include<queue>
#include<stack>
#include<deque>

#include<cstring>
#include<string>


#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define pb push_back 
#define lli long long int
#define mod1 1000000007
#define mod2 1000000009
#define ppi pair<int,int>
#define tr(a,it) for(typeof(a.begin()) it=a.begin();it!=a.end();it++)
#define N 100001
#define NLOG 20
using namespace std;

int n,q;
int lvl[N];
int dp[N][NLOG+1];
vector<int>v[N];

int dfs(int s,int p)
{
	dp[s][0]=p;
	lvl[s]=lvl[p]+1;
	FOR(i,0,v[s].size()-1)
	if(v[s][i]!=p)
	{
		dfs(v[s][i],s);
	}
	
	return 0;
}

int init()
{
	FOR(i,1,NLOG)FOR(j,1,n)dp[j][i]=dp[dp[j][i-1]][i-1];
	return 0;	
}

int lca(int a,int b)
{
	if(lvl[a]<lvl[b])swap(a,b);
	
	int d=lvl[a]-lvl[b];
	FORD(i,NLOG,0)if((1<<i)&d)a=dp[a][i];
	
	if(a==b)return a;
	
	FORD(i,NLOG,0)if(dp[a][i]!=dp[b][i])
	{
		a=dp[a][i];
		b=dp[b][i];	
	}	
	
	return dp[a][0];
}

int main()
{
	
	cin>>n;
	
	FOR(i,1,n-1)
	{
		int x,y;
		cin>>x>>y;
		v[x].pb(y);
		v[y].pb(x);	
	}
	
	lvl[0]=0;
	dfs(1,0);
	init();
	cin>>q;
	while(q--)
	{
		int x,y;
		cin>>x>>y;
		
		
		int l=lca(x,y);
		if(l==y)swap(x,y);
		
		if(l==x)
		{
			cout<<x<<" taught "<<y<<endl;
		}
		else
		{
			cout<<"No idea"<<endl;
		}
	}
	
	return 0;

}