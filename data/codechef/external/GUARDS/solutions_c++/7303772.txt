#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 10010

char s[105][105];
int dir[][2]={-2,-1,-2,1,-1,-2,-1,2,1,-2,1,2,2,-1,2,1};
int n,m,id[105][105],sz,n1,m1;
bool in(int x,int y){return x>=0&&x<n1&&y>=0&&y<m1;}
int l1,l2,r1,r2;
void dfs(int x,int y){
    if(!in(x,y)||s[x][y]=='#'||id[x][y])return;
    id[x][y]=sz;
    l1=min(l1,x);l2=max(l2,x);
    r1=min(r1,y);r2=max(r2,y);
    dfs(x-1,y);
    dfs(x+1,y);
    dfs(x,y-1);
    dfs(x,y+1);
}
int ans;
int v[105],res[105],lim,goal[105],found,cnt;
void go(int x,int sum){
    if(found||ans==lim)return;
    if(sum+min(n-x,m-sum)<=ans)return;
    if(x==n){
        if(ans<sum){
            ans=sum;found=true;
            cnt++;
            //if(cnt>10)found=true;
            for(int i=0;i<n;i++)goal[i]=res[i];
        }
        return;
    }
    if(res[x-1]!=-1)
    for(int y=res[x-1]+3,k=0;k<m;y++,k++){
        if(y>=m)y-=m;
    if(!v[y]){
        int ok=1;
        for(int i=0;i<x;i++)if(res[i]!=-1){
            if(x-i==y-res[i]){ok=0;break;}
            if(i+res[i]==x+y){ok=0;break;}
            if(i==x-2&&abs(y-res[i])==1){ok=0;break;}
            if(i==x-1&&abs(y-res[i])==2){ok=0;break;}
        }
        if(ok){
            v[y]=1;
            res[x]=y;
            go(x+1,sum+1);
            v[y]=0;res[x]=-1;
            //break;
        }
    }
    }
    else{
        if(ans<sum)ans=sum;
    }
}
void go1(int x,int sum){
    if(ans==lim)return;
    if(sum+min(n-x,m-sum)<=ans)return;
    if(x==n){
        if(ans<sum){
            ans=sum;
            for(int i=0;i<n;i++)goal[i]=res[i];
        }
        return;
    }
    for(int y=0;y<m;y++)
    if(!v[y]){
        int ok=1;
        for(int i=0;i<x;i++)if(res[i]!=-1){
            if(x-i==y-res[i]){ok=0;break;}
            if(i+res[i]==x+y){ok=0;break;}
            if(i==x-2&&abs(y-res[i])==1){ok=0;break;}
            if(i==x-1&&abs(y-res[i])==2){ok=0;break;}
        }
        if(ok){
            v[y]=1;
            res[x]=y;
            go1(x+1,sum+1);
            v[y]=0;res[x]=-1;
        }
    }
    go1(x+1,sum);
}
void func(){
    ans=0;n=l2-l1+1,m=r2-r1+1;
    for(int i=0;i<m;i++)v[i]=0;
    for(int i=0;i<n;i++)res[i]=-1;
    lim=min(n,m);found=false;cnt=0;
    bool flag=false;
    if(n>m)swap(n,m),flag=true;
    if(lim<10){
        go1(0,0);
    }
    else go(0,0);
    //DBG(ans)
    //cout<<n<<" "<<m<<":\n";
    for(int i=0;i<n;i++)
            if(goal[i]!=-1){
                if(!flag)s[l1+i][r1+goal[i]]='G';
                else s[l1+goal[i]][r1+n-1-i]='G';
            }
    //printf("-------------------\n");
}
int main()
{
    //freopen("2.txt","w",stdout);
    int T,i,j,k,ca=0;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d",&n,&m);
        for(i=0;i<n;i++){
            scanf("%s",s[i]);
        }
        n1=n,m1=m;
        memset(id,0,sizeof(id));
        sz=0;int sum=0;
        for(i=0;i<n1;i++)
            for(j=0;j<m1;j++)if(!id[i][j]&&s[i][j]=='.'){
                sz++;
                l1=l2=i;r1=r2=j;
                dfs(i,j);
                func();sum+=ans;
            }
        printf("%d\n",sum);
        for(i=0;i<n1;i++)puts(s[i]);
    }
    return 0;
}