#include <iostream>
#include <cstring>

using namespace std;

int main()
{
	int t;
	cin >> t;

	while(t--)
	{
		int n, reqsum;
		cin >> n >> reqsum;
		int a[n+1];
		for(int i = 1; i <= n; i++)
			cin >> a[i];

		bool d[n+1][reqsum+1];
		memset(&d, 0, sizeof(d));

		for(int i = 1; i <= n; i++) d[i][0] = 1;	//set first column true, since all subsets can have 0 as the sum.

		if(a[1] <= reqsum)
			d[1][a[1]] = 1;
		
		for(int i = 2; i <= n; i++)
			for(int j = 1; j <= reqsum; j++) {
				int temp = 0;
				if(j - a[i] >= 0) // since array index needs to stay 0 or more
					temp = d[i-1][j - a[i]];

				d[i][j] = d[i-1][j] | temp;
			}

		if(d[n][reqsum] == 1)
			cout << 1 << endl;
		else
			cout << 0 << endl;	
	}

	return 0;
}