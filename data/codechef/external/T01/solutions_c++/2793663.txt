#include<iostream>
#include<cstdio>
#include<cstring>

using namespace std;

int m,n,arr[1010][1010];
int dp[1010][1010];

int dx[] = {1,-1,0,0,1,-1,-1,1};
int dy[] = {0,0,1,-1,1,-1,1,-1};

bool chk(int x,int y)
{
    if(x < 0 || x >= m) return 0;
    if(y < 0 || y >= n) return 0;
    return 1;
}

int recur(int x,int y) {
    if(arr[x][y] < 0) return -1e9;
    if(x == m-1 && y == n-1) {
        int ret = arr[x][y];
        return ret;
    }
    if(dp[x][y] != -1) return dp[x][y];
    int ret1 = arr[x][y];
    for(int i=0;i<8;i++) {
        if(chk(x+dx[i],y+dy[i])) {
            if(arr[x+dx[i]][y+dy[i]] < 0) ret1 += arr[x+dx[i]][y+dy[i]];
        }
    }
    if(x == 0 && y == 0) ret1 = 0;
    if(y == n-1) return dp[x][y] = ret1 + recur(x+1,y);
    else if(x == m-1) return dp[x][y] = ret1 + recur(x,y+1);
    else return dp[x][y] = ret1 + max(recur(x+1,y),recur(x,y+1));
}

int main()
{
    scanf("%d,%d",&m,&n);
    for(int i=0;i<m;i++) {
        for(int j=0;j<n-1;j++) {
            scanf("%d,",&arr[i][j]);
        }
        cin >> arr[i][n-1];
    }
    memset(dp,-1,sizeof(dp));
    cout << recur(0,0);
}
