#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <cctype>
#define vi vector < int >
#define mod 1000000007
#define inf 987654321
#define dinf -inf
#define lo long long int
#define S(n) scanf("%d",&n);
#define SL(n) scanf("%lld",&n);
#define P(n) printf("%d",n);
#define PL(n) printf("%lld",n);
#define spa printf(" ");
#define st(a,v) memset(a, v, sizeof (a))
#define nwl puts("");
using namespace std;

int a[1000][1000];
int dp[1000][1000];
 int mx[] = {-1, -1, -1,  0, 0,  1, 1, 1};
 int my[] = {-1,  0,  1, -1, 1, -1, 0, 1};
 int n,m;
 bool poss (int x, int y) {
    return ((x>=0)&&(y>=0)&&(x<n)&&(y<m));
 }
 int coun (int x, int y) {
     int sm=0;
     for(int i = 0; i < 8; i++) {
        int nx = x + mx[i]; int ny = y+ my[i];
        if(a[nx][ny]<0&&poss(nx,ny))sm=sm+a[nx][ny];
     }
     return sm;
 }
int f ( int x, int y) {
    if ( x < 0 || y < 0 || a[x][y] < 0 || x >= n || y >= m)
        return -1e9;
    if(x==n-1&&y==m-1){
            return a[x][y];
    }
    if(dp[x][y]!=-1)return dp[x][y];
    int cnt = a[x][y] + coun(x,y);
    if(x==0&&y==0)cnt = 0;
    if(x==n-1)return dp[x][y]=cnt + f(x,y+1);
    else if(y==m-1)return dp[x][y]=cnt+f(x+1,y);
    else return dp[x][y]= cnt + max(f(x+1,y),f(x,y+1));
}
int main ( ) {
    scanf("%d,%d",&n,&m);
    st(dp,-1);
    for (int i=0; i < n; i++){
        for(int j = 0; j < m-1; j++)
            scanf("%d,",&a[i][j]);
            scanf("%d",&a[i][m-1]);
    }
    int ans = f (0,0);
    cout << ans << endl;
}
