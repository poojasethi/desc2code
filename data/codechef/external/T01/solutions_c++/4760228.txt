#include<cstdio>
#include<cstring>

#ifndef ONLINE_JUDGE
	#define gc getchar
	#define pc putchar
#else
	#define gc getchar_unlocked
	#define pc putchar_unlocked
#endif

int ar[500][500];

inline void fr(int &x){
	register int c=gc();
	x=0;
	for(; (c<48 || c>57); c = gc());
	
	for(; c>47 && c<58 ; c = gc()) {
        x = (x<<3)+(x<<1)+ c - 48;
    }
}

inline void fp(int n){
	if(n/10!=0)
		fp(n/10);
	pc(n%10 + '0');
}

int max(int a,int b){
	return (a>b?a:b);
}

int d[8][2] = { {-1,1}, {-1,-1}, {-1,0} ,{0,1}, {0,-1},{1,0},{1,1},{1,-1}};

bool valid(int x, int y,int m,int n) {
    return 1;
	return ((x>=0)&&(y>=0)&&(x<m)&&(y<n));
}

int thiefcheck(int a[500][500],int i,int j,int m,int n){
     int c=0;
     if(a[i][j]<0){
     	return 2;
     }
     for(int f = 0; f < 8; ++f) {
        
        if(a[i+d[f][0]][j+d[f][1]]<0&&valid(i+d[f][0],j+d[f][1],m,n))
			c+=a[i+d[f][0]][j+d[f][1]];
     }
     return c;
}

int maxsum(int a[500][500],int i,int j,int m,int n){

if(ar[i][j]==-1){

int thief=thiefcheck(a,i,j,m,n);
	if(thief==2){
		 ar[i][j]=-1e9;
	}
	else if(i!=m-1&&j!=n-1){
		int max1=0,max2=0;
		max1=a[i][j]+maxsum(a,i+1,j,m,n)+thief;
		max2=a[i][j]+maxsum(a,i,j+1,m,n)+thief;
		ar[i][j]=max(max1,max2);
	}
	else if(i==m-1&&j==n-1){
		ar[i][j]=0;
	}
	else if(i==m-1){
		ar[i][j]=a[i][j]+maxsum(a,i,j+1,m,n)+thief;
	}
	else if(j==n-1){
		ar[i][j]=a[i][j]+maxsum(a,i+1,j,m,n)+thief;
	}
}
		return ar[i][j];
	
}

int main(){
	int n,m,i,j,a[500][500];
	fr(n);
	fr(m);
	memset(ar,-1,sizeof(ar));
	for(i=0;i<n;++i){
		for(j=0;j<m-1;++j){
			scanf("%i,",&a[i][j]);
		}
		scanf("%i",&a[i][m-1]);
	}
	if(m>1&&n>1)
		printf("%i\n",(max(maxsum(a,1,0,n,m),maxsum(a,0,1,n,m))));
	else
		printf("0\n");
	
	
	return 0;
}