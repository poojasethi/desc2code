#include <iostream>
#include <cstring> 
#include <algorithm> 
using namespace std;
typedef long long L; 
L M[51][51];
L N[51][51];
L F[51][51][51]; 
L m(L n, L p){
	if(n == 1)return 1ll;
	if(p == 3)return (1ll<<n) - 1ll; 
	if(M[n][p] != 0ll)return M[n][p]; 
	M[n][p] = 0;  
	N[n][p] = -1ll; 
	L temp; 
	for(L i=1;i<n;i++){
		temp = 2*m(i,p)+m(n-i,p-1); 
		if(M[n][p] > temp || M[n][p] == 0) {
			M[n][p] = temp; 
			N[n][p] = i; 
		}
	}
	return M[n][p];  
} 

L f(L n, L p, L k){
	m(n,p); 
	L n1;
	if(p > 3)n1 = N[n][p]; 
	else n1 = n-1; 
	if(F[n][p][k] != 0ll) return F[n][p][k]; 
	
	if(p == 3 && k == n){
		return m(n-1, p) + 1ll;
	}

	if(n1 >= k){
		return F[n][p][k] = m(n1,p) + m(n-n1,p-1) + f(n1,p,k); 
	}
	return F[n][p][k] = m(n1,p) + f(n-n1,p-1,k - n1); 
}
int main() {
	L t, n, p, k; 
	cin >> t; 
	for(L cs=1;cs<=t;cs++){
		cin >> n >> p >> k; 
		cout << "Case " <<cs << ": " << f(n,p,k) << endl; 
	}	
}