#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
long long dp[2][51][51];
int v=1000000007;
 
 
long long cal(int n,int p,int q)
{
	long long k=0;
//	cout<<n<<" "<<p<<" "<<q<<endl;
	int i=dp[1][n][p];
	if(n==1)
	 return 1;
	if(n<p)
		return 2*(n-1)+1-(q-1);
	if(q<=i)
	 	k=dp[0][n-i][p-1]+dp[0][i][p];
	else
	    return cal(n-i,p-1,q-i)+dp[0][i][p];
	k=k+cal(i,p,q);
	return k;	 	
}
 
 
void solve(int a,int b)
{
	int i,j;
	long long k=800000000,p;
	k=k*k;
	if( (b==2 && a>1) || b<2)
	{
	  dp[0][a][b]=700000000;
	  dp[0][a][b]=dp[0][a][b]*dp[0][a][b];
	  return;
    }
	if(a==1)
	{
	   dp[0][a][b]=1;
	   return;
    }
    for(i=1;i<a;i++)
    {
    	if(dp[0][a-i][b-1]<0)
    	 solve(a-i,b-1);
    	if(dp[0][i][b]<0)
		 solve(i,b);
		p=dp[0][i][b]*2+dp[0][a-i][b-1];
		if(p<k)
			k=p,j=i;  
    }
	dp[0][a][b]=k;
	dp[1][a][b]=j; 
}
 
int main()
{
	int i,j,t,p,n,q;
	for(i=0;i<51;i++)
	 for(j=0;j<51;j++)
	  dp[0][i][j]=dp[1][i][j]=-1;
	for(i=2;i<=50;i++)
	 for(j=1;j<i;j++)
	  dp[0][j][i]=2*j-1; 
	for(i=2;i<51;i++)
	 for(j=2;j<=i;j++)
	  if(dp[0][i][j]<0)  
	    solve(i,j);
//	cout<<dp[0][3][3]<<" "<<dp[0][3][4]<<endl;
//for(i=2;i<51;i++)
// cout<<dp[1][i][3]<<endl;
	cin>>t;i=1;
	while(i<=t)
	{
		cin>>n>>p>>q;
		cout<<"Case "<<i<<": ";
		if(n<p)
			cout<<2*(n-1)+1-(q-1)<<endl;
		else
		    cout<<cal(n,p,q)<<endl;
		i++;    
	}
	return 0;
}