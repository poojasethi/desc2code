#include<iostream>
#include<cstdio>
#define Mx 51
#define Inf 1e18
using namespace std;
long long dp[Mx][Mx];
int child[Mx][Mx];
 
long long M(int n,int p)
{
    if(dp[n][p])
    {
        return dp[n][p];
    }
    if(n==1)
    {
        dp[n][p]=1;
        return 1;
    }
    if(p==2)
    {
      dp[n][p]=Inf;
      return Inf;
    }
    int i;
    long long ans;
    for(i=1;i<n;i++)
    {
        ans=2*M(i,p)+M(n-i,p-1);
        if(dp[n][p]==0)
        {
            dp[n][p]=ans;
            child[n][p]=i;
        }
        else if(ans<dp[n][p])
        {
            dp[n][p]=ans;
            child[n][p]=i;
        }
    }
    return dp[n][p];
}
 
long long calc(int n,int p,int k)
{
    if(k==0) return (long long)0;
    if(n==k)
        return dp[n][p];
 
    if(k+child[n][p]>=n)
    {
        return calc(child[n][p],p,child[n][p])+calc(n-child[n][p],p-1,n-child[n][p])+calc(child[n][p],p,child[n][p]+k-n);
    }
    else
    {
        return calc(child[n][p],p,child[n][p])+calc(n-child[n][p],p-1,k);
    }
}
 
main()
{
    int i,j,t,cnt=0;
    for(i=1;i<Mx;i++)
        for(j=2;j<Mx;j++)
    {
        if(dp[i][j]==0)
        {
            M(i,j);
        }
    }
    scanf("%d",&t);
    while(t--)
    {
        cnt++;
        int n,p,k;
        long long roll=0;
        scanf("%d %d %d",&n,&p,&k);
        roll=calc(n,p,n-k+1);
        printf("Case %d: %lld\n",cnt,roll);
    }
}