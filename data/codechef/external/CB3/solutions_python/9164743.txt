import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.InputMismatchException;

class Test {
	public static void main(final String[] args) throws IOException {
		try (PrintWriter pw = new PrintWriter(System.out)) {
			final FastScanner fs = new FastScanner();
			int t = fs.nextInt();
			int n;
			int arr[] = new int[89];
			arr[1] = 1;
			arr[2] = 1;
			for (int i = 3; i <= 88; i++) {
				arr[i] = (arr[i - 1] + arr[i - 2]) % 26;
				if (arr[i] == 0)
					arr[i] = 26;
			}

			while (t-- > 0) {
				n = fs.nextInt();
				for (int i = 1; i <= n; i++) {
					pw.print((char) (64 + (arr[i])));
				}
				pw.println();
			}
		}

	}

}

final class FastScanner {
	private final InputStream mIs;
	private final byte[] buf = new byte[1024];
	private int curChar;
	private int numChars;

	public FastScanner() {
		this(System.in);
	}

	public FastScanner(final InputStream is) {
		this.mIs = is;
	}

	public int read() {
		if (this.numChars == -1) {
			throw new InputMismatchException();
		}
		if (this.curChar >= this.numChars) {
			this.curChar = 0;
			try {
				this.numChars = this.mIs.read(this.buf);
			} catch (final IOException e) {
				throw new InputMismatchException();
			}
			if (this.numChars <= 0) {
				return -1;
			}
		}
		return this.buf[this.curChar++];
	}

	public String nextLine() {
		int c = this.read();
		while (this.isSpaceChar(c)) {
			c = this.read();
		}
		final StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = this.read();
		} while (!this.isEndOfLine(c));
		return res.toString();
	}

	public String nextString() {
		int c = this.read();
		while (this.isSpaceChar(c)) {
			c = this.read();
		}
		final StringBuilder res = new StringBuilder();
		do {
			res.appendCodePoint(c);
			c = this.read();
		} while (!this.isSpaceChar(c));
		return res.toString();
	}

	public long nextLong() {
		int c = this.read();
		while (this.isSpaceChar(c)) {
			c = this.read();
		}
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = this.read();
		}
		long res = 0;
		do {
			if ((c < '0') || (c > '9')) {
				throw new InputMismatchException();
			}
			res *= 10;
			res += c - '0';
			c = this.read();
		} while (!this.isSpaceChar(c));
		return res * sgn;
	}

	public int nextInt() {
		int c = this.read();
		while (this.isSpaceChar(c)) {
			c = this.read();
		}
		int sgn = 1;
		if (c == '-') {
			sgn = -1;
			c = this.read();
		}
		int res = 0;
		do {
			if ((c < '0') || (c > '9')) {
				throw new InputMismatchException();
			}
			res *= 10;
			res += c - '0';
			c = this.read();
		} while (!this.isSpaceChar(c));
		return res * sgn;
	}

	public boolean isSpaceChar(final int c) {
		return (c == ' ') || (c == '\n') || (c == '\r') || (c == '\t')
				|| (c == -1);
	}

	public boolean isEndOfLine(final int c) {
		return (c == '\n') || (c == '\r') || (c == -1);
	}
}
