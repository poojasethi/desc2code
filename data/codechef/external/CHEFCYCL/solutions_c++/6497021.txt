#include <cstring>
#include <algorithm>
#include <iostream>
#include <cassert>

using namespace std;

int adj[22][22];
int dp[(1<<20)+10];

const int mod = (1e9)+7;
int N,M;

int main(){

	int i,j,sel,t;
	ios::sync_with_stdio(0);

	cin >> t;

	while(t--){
		cin >> N >> M;

		memset(adj,0,sizeof(adj));

		while(M--){
			cin >> i >> j;
			--i,--j;
			adj[i][j] = 1;
		}

		dp[0] = 1;

		for(sel = 1; sel < (1<<N); ++sel){
			i = N-__builtin_popcount(sel);
			dp[sel] = 0;
			for(j = 0; j < N; ++j){
				if(!(sel&(1<<j)) || !adj[i][j]) continue;
				dp[sel] += dp[sel^(1<<j)];
				if(dp[sel] >= mod) dp[sel]-=mod;
			}
		}

		cout << dp[sel-1] << "\n";
	}

	return 0;
}
