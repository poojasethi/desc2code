#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
 
#define rep(i,n) for(int i=0; i<n ; i++)
using namespace std;
//#define long double double
 
#define REP(i,n) for (int i = 1; i <= n; i++)
#define ll long long
#define mod (int)(1e9+7)
const int base = 1000100000;
const int base_digits = 9;
clock_t start_time,end_time;
inline float ellapse(){return (clock()-start_time)*1.0/CLOCKS_PER_SEC;}
 
long long power(ll a,ll b)
{
    ll ret=1;
    while(b)
    {
        if(b%2==1)
            ret=(ret*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return ret;
}
 
int gcd(int a,int b)
{
    return b==0?a:gcd(b,a%b);
}
 
long long n,m;
 
bool possible(long long x)
{
    long long ancestors=0,T=x;
 
    while(x>1)
    {
        ancestors++;
        x/=2;
    }
 
    if(ancestors>=m)
        return 0;
 
    long long children=0;
    x=T;
    long long left=2*x,right=2*x+1;
 
    while(left<=n)
    {
        if(right>n)
            children+=n-left+1;
        else
            children+=right-left+1;
        right=right*2+1;
        left*=2;
    }
 
    if(children>n-m)
        return 0;
    return 1;
}
 
int main()
{
    int t;
    cin>>t;
 
    while(t--)
    {
        scanf("%lld%lld",&n,&m);
 
        long long lower,higher;
        lower=higher=m;
 
 
        long long low,high,mid;
        low=1,high=m;
 
        while(low<=high)
        {
            mid=(low+high)/2;
 
            if(possible(mid)==1)
            {
                lower=mid;
                high=mid-1;
            }
            else
                low=mid+1;
        }
 
        low=m,high=n;
 
        while(low<=high)
        {
            mid=(low+high)/2;
 
            if(possible(mid)==1)
            {
                higher=mid;
                low=mid+1;
            }
            else
                high=mid-1;
        }
        //cout<<lower<<" "<<higher<<endl;
        printf("%lld\n",higher-lower+1);
    }
    return 0;
}
 