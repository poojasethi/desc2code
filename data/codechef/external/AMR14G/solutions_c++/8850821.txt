#include <bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define ll long long int
#define s(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define mod 1000000007
#define pii pair <ll, ll>
#define piii pair <ll, pii >

int main()
{
    int t, i, p, c, j;
    s(t);
    ll ans, n, k, tmp, m, lst, x, y, z, q, r;
    while (t--) {
        sl(n);
        sl(k);
        ans = 0;
        tmp = n-k+1;
        m = n;
        for (i = 0; ;++i) {
            m -= (1LL << i);
            if (m <= 0)
                break;
        }
        vector < pair < pair <ll, ll>, ll> > v[2];
        v[0].pb(mp(mp(1LL<<i, n), 1));
        lst = ((1LL<<i)<<1)-1;
        if (n != lst)
            v[0].pb(mp(mp(n+1,lst), 0));
        j = i;
        p = 0;
        c = 1;
        while (j--) {
            assert(v[p].size() <= 3);
            for (i = 0; i < v[p].size(); ++i) {
                x = v[p][i].first.first;
                y = v[p][i].first.second;
                z = v[p][i].second;
                //cout << x << " " << y << " " << z << endl;
                if (z && tmp >= z && k > (j+1))
                    ans += (y-x+1);
                if (x & 1)
                    ++x;
                if (x > y)
                    continue;
                if (y & 1) {
                    v[c].pb(mp(mp(x>>1, y>>1), (z<<1)+1));
                }
                else {
                    --y;
                    r = x>>1;
                    q = y>>1;
                    if (r <= q)
                        v[c].pb(mp(mp(r, q), (z<<1)+1));
                    ++y;
                    v[c].pb(mp(mp(y>>1, y>>1), 1+z+v[p][i+1].second));
                }
            }
            v[p].clear();
            p ^= 1;
            c ^= 1;
        }
        assert(v[p].size() == 1);
        for (i = 0; i < v[p].size(); ++i) {
            x = v[p][i].first.first;
            y = v[p][i].first.second;
            z = v[p][i].second;
            if (tmp >= z && k == 1)
                ans += (y-x+1);
        }
        printf("%lld\n", ans);
    }
    return 0;
}
