#include <iostream>
#include <vector>
#include <cmath>
#include <cstdio>
#include <cstring>
#include <algorithm>
#define MAX 10000000
#define lli long long
using namespace std;

bool chk[MAX+5];
int cum[MAX+5];
vector <int> v[502];
int primes[704582];
int cnt;


void pre()
{
     cnt = 0;
     chk[0] = chk[1] = 1;
     for ( lli i = 2; i <= MAX; i++ ) {
         if ( !chk[i] ) {
            cnt++;
            primes[cnt] = i;
            if ( cnt <= 446 ) v[cnt].push_back(i);
            for ( lli j = i*i; j <= MAX; j += i ) {
                if ( cnt <= 446 && !chk[j] ) v[cnt].push_back(j);
                chk[j] = true; 
            }
         }
     }
     cum[0] = cum[1] = 0;
     for ( int i = 2; i <= MAX; i++ ) cum[i] = cum[i-1] + (!chk[i]);
     return;
}

int func(int a, int b, int i)
{
    int fs = lower_bound(v[i].begin(), v[i].end(), a) - v[i].begin();
    int sc = upper_bound(v[i].begin(), v[i].end(), b) - v[i].begin();
    return sc - fs;
}

int main()
{
    int t,a,b,k;
    pre();
    cin >> t;
    while ( t-- ) {
          cin >> a >> b >> k;
          int den = b-a+1;
          int num;
          if(k > 664579) num = b-a+1;
          else if ( k > 446 ) {
             num = max(cum[b] - cum[max(a-1, primes[k])], 0);
             num = b-a+1 - num;
          }
          else {
               num = 0;
               for ( int i = 1; i <= k; i++ ) num += func(a,b,i);
          }
          int gc = __gcd(num,den);
          num /= gc;
          den /= gc;
          cout << num << "/" << den << endl;
    }
    return 0;
}
