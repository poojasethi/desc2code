#include <cstdio>
using namespace std;
int pp[40100],i,j,x,T,n,k,ans,tot,pr[400],ct[400],cnt;
bool p[40100];
int phi(int x) {
    int ans=x;
    for (i=0;i<tot && pp[i]*pp[i]<=x;i++) if (x%pp[i]==0) {
        ans=ans/pp[i]*(pp[i]-1);
        while (x%pp[i]==0) x/=pp[i];
    }
    if (x!=1) ans=ans/x*(x-1);
    return ans;
}
int power(int a,int x) {
	long long s=a,ans=1;
	for (int i=0;x>>i;i++) {
		if ((x>>i)&1) ans=ans*s%(n+1);
		s=s*s%(n+1);
	}
	return ans;
}
void dfs(int dep,int res,int cur) {
    if (res>=ans) return;
    if (dep==cnt) {if (res!=1 && cur==1) ans=res;return;}
    for (int i=0;i<=ct[dep];i++) {
        dfs(dep+1,res,cur);
        res=res*pr[dep];
        cur=power(cur,pr[dep]);
    }
}
int main() {
    for (i=2;i<=40000;i++) if (!p[i]) {
        pp[tot++]=i;
        for (j=i;j<=40000;j+=i) p[j]=1;
    }
    for (scanf("%d",&T);T;T--) {
        scanf("%d%d",&n,&k);
        x=phi(n+1);ans=x;
        for (cnt=j=0;j<tot && pp[j]*pp[j]<=x;j++) if (x%pp[j]==0) {
            pr[cnt]=pp[j];ct[cnt]=0;
            while (x%pp[j]==0) x/=pp[j],ct[cnt]++;
            cnt++;
        }
        if (x!=1) pr[cnt]=x,ct[cnt]=1,cnt++;
        dfs(0,1,k);
        printf("%d\n",ans);
    }
}
