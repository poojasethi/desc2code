#include <bits/stdc++.h>
using namespace std ;

#define ft first
#define sd second
#define pb push_back
#define all(x) x.begin(),x.end()

#define ull unsigned long long int
#define ui unsigned int
#define ll long long int
#define vi vector<int>
#define vii vector<pair<int,int> >
#define pii pair<int,int>
#define vl vector<ll>
#define vll vector<pair<ll,ll> >
#define pll pair<ll,ll>
#define mp make_pair

#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)

#define scll1(x) scanf("%lld",&x)
#define scll2(x,y) scanf("%lld%lld",&x,&y)
#define scll3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)

#define pr1(x) printf("%d\n",x)
#define pr2(x,y) printf("%d %d\n",x,y)
#define pr3(x,y,z) printf("%d %d %d\n",x,y,z)

#define prll1(x) printf("%lld\n",x)
#define prll2(x,y) printf("%lld %lld\n",x,y)
#define prll3(x,y,z) printf("%lld %lld %lld\n",x,y,z)

#define pr_vec(v) for(int i=0;i<v.size();i++) cout << v[i] << " " ;

#define f_in(st) freopen(st,"r",stdin)
#define f_out(st) freopen(st,"w",stdout)

#define fr(i, a, b) for(i=a; i<=b; i++)
#define fb(i, a, b) for(i=a; i>=b; i--)

const int maxn = 2 * 1e4 + 10;
const int maxp = 1e5 + 10;
const int mod = 1e9 + 7;



vector<pair<pii, pii > > A; 
map<int, int> M;

int st[4 * maxn], lp[4 * maxn];


void clr(int u,int l,int r){
    if(l==r)return;
    st[u+u]+=lp[u];
    st[u+u+1]+=lp[u];

    lp[u+u]+=lp[u];
    lp[u+u+1]+=lp[u];
    lp[u]=0;
}
void update(int u,int l,int r,int f,int t,int v){
    if(r<f || t<l) return;
    if(lp[u]!=0) clr(u,l,r);

    if(f<=l && r<=t){
        st[u]+=v;
        lp[u]+=v;
    }
    else{
        int mid=(l+r)>>1;
        update(u+u,l,mid,f,t,v);
        update(u+u+1,mid+1,r,f,t,v);
        st[u]=max(st[u+u],st[u+u+1]);
    }
    return;
}


// bool cmp(const pair<pii, pii > &a, const pair<pii, pii > &b) {
// 	if( a.ft.ft != b.ft.ft ) {
// 		return (a.ft.ft < b.ft.ft);
// 	} else {
// 		return a.sd.sd <= b.sd.sd;
// 	} 
// }

void solve() {

	int n; cin >> n;
	int i;
	fr(i, 1, n) {
		int x1, x2, y1, y2;
		cin >> x1 >> y1;
		cin >> x2 >> y2;
		M[y1] = 1;
		M[y2] = 1;
		A.pb(mp(mp(x1, 0), mp(y1, y2)));
		A.pb(mp(mp(x2, 1), mp(y1, y2)));
	}

	int c = 0;
	for( map<int, int> :: iterator it = M.begin(); it != M.end(); ++it ) {
		it->sd = ++c;
	}

	for(int i=0; i<A.size(); i++) {
		A[i].sd.ft = M[ A[i].sd.ft ];
		A[i].sd.sd = M[ A[i].sd.sd ];
	}


	sort(all(A));
	memset(lp, 0, sizeof lp);
	memset(st, 0, sizeof st);
	int ans = 0;
	for(int i=0; i<A.size(); i++) {
		if( A[i].ft.sd == 0 ) {
			update(1, 1, c, A[i].sd.ft, A[i].sd.sd, 1);
		} else {
			update(1, 1, c, A[i].sd.ft, A[i].sd.sd, -1);
		}
		ans = max(ans, st[1]);
	}
	cout << ans << "\n";
	A.clear();
	M.clear();
}
int main() {

	int t; cin >> t;
	while( t-- ) solve();
	return 0;
}