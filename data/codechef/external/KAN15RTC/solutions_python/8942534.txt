#include<bits/stdc++.h>
using namespace std;
typedef long long int uli;

const int mxt=2e5;
struct ev{
    int x;
    int yi,yf;
    int tp;
    ev(int x,int yi,int yf,int tp):x(x),yi(yi),yf(yf),tp(tp){}
    bool operator <(ev a)const {
        if(x!=a.x)return x<a.x;
        if(tp!=a.tp)return tp<a.tp;
        if(yi!=a.yi)return yi<a.yi;
        return yf<a.yf;
    }
};
vector<ev>evs;

int st[mxt],lp[mxt];


void clr(int u,int l,int r){
    if(l==r)return;
    st[u+u+1]+=lp[u];
    st[u+u+2]+=lp[u];

    lp[u+u+1]+=lp[u];
    lp[u+u+2]+=lp[u];
    lp[u]=0;
}
void upd(int u,int l,int r,int f,int t,int v){
    if(r<f || t<l) return;
    if(lp[u]!=0) clr(u,l,r);

    if(f<=l && r<=t){
        st[u]+=v;
        lp[u]+=v;
    }
    else{
        int mid=(l+r)>>1;
        upd(u+u+1,l,mid,f,t,v);
        upd(u+u+2,mid+1,r,f,t,v);
        st[u]=max(st[u+u+1],st[u+u+2]);
    }
    return;
}

map<int,int>mpy;
int main(){
    int t,n,x1,y1,x2,y2;
    int cy=0;
    scanf("%d",&t);
    while(t--){
        mpy.clear();
        evs.clear();
        memset(st,0,sizeof st);
        memset(lp,0,sizeof lp);

        scanf("%d",&n);
        for(int i=0;i<n;i++){
            scanf("%d %d %d %d",&x1,&y1,&x2,&y2);
            evs.push_back(ev(x1,y1,y2,0));
            evs.push_back(ev(x2,y1,y2,1));

            mpy[y1]=0;
            mpy[y2]=0;
        }
        map<int,int>::iterator it;
        cy=0;
        for(it=mpy.begin();it!=mpy.end();it++){
            it->second=cy++;
        }

        for(int i=0;i<int(evs.size());i++){
            evs[i].yi=mpy[evs[i].yi];
            evs[i].yf=mpy[evs[i].yf];
        }

        sort(evs.begin(),evs.end());
        int ans=0;
        for(int i=0;i<int(evs.size());i++){
            if(evs[i].tp==0){
                upd(0,0,cy-1, evs[i].yi,evs[i].yf,1);
            }
            else{
                upd(0,0,cy-1, evs[i].yi,evs[i].yf,-1);
            }
            ans=max(ans,st[0]);
        }
        printf("%d\n",ans);
    }
    return 0;
}