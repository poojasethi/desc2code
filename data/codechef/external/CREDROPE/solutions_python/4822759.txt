#pragma warning(disable:4786)
#define _CRT_SECURE_NO_WARNINGS
#pragma comment(linker, "/stack:16777216")
#include <bits/stdc++.h>	// http://www.iceparticle.com
#define gc getchar_unlocked
using namespace std;
#define fast ios_base::sync_with_stdio(false);
#define endl '\n'
#define file freopen("iceparticle.in","r",stdin);
#define terminate exit (EXIT_FAILURE)
#define os_iterator ostream_iterator<data> screen(cout,endl)
#define output(vec) copy(vec.begin(),vec.end(),screen)
#define memory(dt,fill,length) memset ((dt),(fill),(length))
#define MAX int(1e9) + 7;
#define timer 0

typedef unsigned long long ull;
typedef long long ll;
typedef char character;
typedef int data;
typedef float decimal;

	
inline ll input() {
    register data c = gc();
	ll neg = 0; ll x = 0; 
	for( ;(( c>57 || c<48 ) && c!='-');c=gc());
    if(c=='-') { neg=1; c=gc(); }
	for( ; c<58 && c>47 ;c = gc() ) x= (x << 1)+(x << 3)+c-48;
	if(neg) return -x; else return x;
}
	
void process() {

	data 	tc;
	string 	str;
	float 	var1,var2;
	data 	ctr;
	bool	flag=true;
	
	cin >> tc >> str >> var1 >> var2;
	
	for( data i=0; i<str.length(); i++ )
	 {
		str[i]=='L'?
			ctr-=var1:
			ctr+=var1;
		
		if( ctr<((-1*var2)+1) || ctr>(var2-1))
		 {
			flag=false;
			break;
		 }
	 }
	 flag?
		printf("YES\n"):
		printf("NO\n");
		
}

int main () {
		
	if(timer) {	
	decimal bios_memsize; 
	clock_t execution;
	execution=clock();
	
	process();
	bios_memsize=(clock()-execution)/(decimal)CLOCKS_PER_SEC;
	printf("[%.4f] sec\n",bios_memsize); }
	process();
	
return 0;
}

