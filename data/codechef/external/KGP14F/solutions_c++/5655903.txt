//ALOK SHARMA

#include <bits/stdc++.h>
using namespace std;

#define gx getchar
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define i64 long long
#define mod 1000000007
#define DBG(vari) cerr<<#vari<<" ==> "<<(vari)<<endl
#define inf 2000000000

typedef pair<i64,i64> pll;
typedef pair<int,int> PII;
void scan(int &x)
{
    register int c = gx();
    x = 0;
    for(;(c<48 || c>57);c = gx());
    for(;c>47 && c<58;c = gx())
    {
        x = (x<<1) + (x<<3) + c - 48;
    }
}
int c[505][505],dad[505],vis[505];
vector<int>r[505];

bool bfs(int s,int t){
	memset(vis,0,sizeof vis);
	dad[0]=0;
	queue<int>q;
	q.push(0);
	vis[0]=1;
	int u,v;
	while(!q.empty()){
		u=q.front();
		if(u==t)
		return 1;
		q.pop();
		for(int i=0;i<(int)r[u].size();i++){
			v=r[u][i];
			if(vis[v]==0 && c[u][v]>0){
				vis[v]=1;
				q.push(v);
				dad[v]=u;
			}
		}
	}
	return 0;
}
int fulkerson(int s,int t){
	int p,f,max_flow=0;
	while(bfs(s,t)){
		p=t,f=INT_MAX;
		while(dad[p]!=p){
			f=min(f,c[dad[p]][p]);
			p=dad[p];
		}
		p=t;
		while(dad[p]!=p){
			c[dad[p]][p]-=f;
			c[p][dad[p]]+=f;
			p=dad[p];
		}
		max_flow+=f;	
	}
	return max_flow;
}

int main()
{
    //freopen("aain.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    ios_base::sync_with_stdio(0);
	i64 te,tt=1,h,g,cc,k;
	pair<i64,i64>hh[255],gg[255];
	cin>>te;
	while(te--){
		memset(c,0,sizeof c);
		for(int i=0;i<505;i++)
		r[i].clear();
		
		cin>>h>>g>>k>>cc;
		for(int i=0;i<h;i++)
		cin>>hh[i].ff>>hh[i].ss;
		for(int i=0;i<g;i++)
		cin>>gg[i].ff>>gg[i].ss;
		
		int s=0,t=h+g+1;
		for(int i=0;i<h;i++){
			for(int j=0;j<g;j++){
				int dist=abs(hh[i].ff-gg[j].ff)+abs(hh[i].ss-gg[j].ss)+abs(k-gg[j].ff)+abs(k-gg[j].ss);
				//cout<<i<<" "<<j<<" "<<dist<<endl;
				if(dist<=cc){
					int u=i+1,v=j+h+1;
					r[u].pb(v);
					r[v].pb(u);
					c[u][v]=1;
					
					if(c[0][u]==0){
						r[0].pb(u);
						r[u].pb(0);
						c[0][u]=1;
					}
					if(c[v][t]==0){
						r[v].pb(t);
						r[t].pb(v);
						c[v][t]=1;
					}
				}
			}
		}
		cout<<"Case "<<tt<<": "<<fulkerson(s,t)<<endl;
		tt++;
	}
	return 0;     
}
