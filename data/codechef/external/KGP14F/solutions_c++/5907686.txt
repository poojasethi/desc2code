#include<bits/stdc++.h>
using namespace std ;
int n , h , g , k , c ;
const int maxn = 260 ;
pair < int , int >host[maxn] , guest[maxn] ;
vector < int > adj[maxn] ;
int match[maxn] , vis[maxn] , mat[maxn][maxn];

void cl()
{
    for ( int i = 1 ; i <= h ; i++)
        adj[i].clear() ;
}

int dfs( int root )
{
   for ( int i = 1 ; i <= g ; i++)
   {
       if ( ( mat[root][i] == 1 ) && ( vis[i] == 0 ) )
       {
           vis[i] = 1 ;
           if ( ( match[i] == -1) || ( dfs( match[i] ) ) )
           {
               match[i] = root ;
               return 1 ;
           }

       }
   }
   return 0 ;
}

int matching()
{
 int ans = 0 ;
 for ( int i = 1 ; i <= h ; i++)
 {
    for ( int j = 1 ; j <= g ; j++)
        vis[j] = 0 ;

    if ( dfs(i))
        ans++ ;
 }
 return ans ;
}



int main()
{

int x , y ;
cin >> n ;

for ( int cas = 1 ; cas <= n ; cas++)
{
    cin >> h >> g >> k >> c ;

    for ( int i = 1 ; i <= g ; i++)
    {
        match[i] = -1;
    }

    for ( int i = 1 ; i <= h ; i++)
        for ( int j = 1 ; j <= g ; j++)
        mat[i][j] = 0 ;

    cl() ;

    for ( int i = 1 ; i <= h ; i++)
    {
        cin >> x >> y ;
        host[i].first = x ;
        host[i].second = y ;
    }

    for ( int i = 1 ; i <= g ; i++)
    {
        cin >> x >> y ;
        guest[i].first = x ;
        guest[i].second = y ;
    }

    for ( int i = 1 ; i <= h ; i++)
    {
        for ( int j = 1 ; j <= g ; j++)
        {
            if ( ( abs( host[i].first -  guest[j].first) + abs ( host[i].second - guest[j].second  ) + abs ( k - guest[j].first  )
                + abs( k - guest[j].second ) ) <= c )
                    {
                        adj[i].push_back( j + h ) ;
                        mat[i][j] = 1 ;
                    }
        }
    }

    cout << "Case " << cas << ": " << matching() << endl ;

}

return 0 ;
}
