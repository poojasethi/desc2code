/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.

* File Name : kgp14f.cpp

* Purpose : cpp file

* Creation Date : 28-12-2014

* Last Modified : Monday 29 December 2014 12:49:18 AM IST

* Created By : vignan 

_._._._._._._._._._._._._._._._._._._._._.*/

#include <iostream>
#include <sstream>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <algorithm>
#include <bitset>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <set>
#include <fstream>

#define M 1000000009

using namespace std;

bool matrix[251][251];

struct node {
	int x;
	int y;
};

long int getdist( node p, node q, long int k) {

	long dist = 0;
	dist = abs(p.x-q.x) + abs(p.y-q.y) + abs(k-q.x) + abs(k-q.y);
	return dist;
}

bool bpm ( int date[], int seen[], int u, int n ) {

	for ( int i = 0; i < n; i++ ) {
		if ( matrix[u][i] && !seen[i] ) { 
			seen[i] = 1;

			if ( date[i] < 0 || bpm(date,seen,i,n) ) {
				date[i] = u;
				return true;
			}
		}

	}

	return false;

}			
int maxbpm(int m, int n) {

	int date[n];
	int result = 0;
	
	for ( int i = 0; i < n; i++ ) {
		date[i] = -1;
	}

	for ( int i = 0; i < m; i++ ) {

		int seen[n];
		for ( int j = 0; j < n; j++ ) {
			seen[j] = 0;
		}
		if ( bpm(date,seen,i,n) ) {
			result++;
		}
	}

	return result;
}

int main() {
	//code here
	int t;
	cin >> t;
	int l = 0;
	while ( t-- ) {
		long int m,n,k,c;
		cin >> m >> n >> k >> c;
		node host[m];
		node guest[n];
		for ( int i = 0; i < m; i++ ) {
			cin >> host[i].x >> host[i].y;
		}
		for ( int i = 0; i < n; i++ ) {
			cin >> guest[i].x >> guest[i].y;
		}

		//bool matrix[m][n];

		for ( int i = 0; i < m; i++ ) {
			for ( int j = 0; j < n; j++ ) {
				if ( getdist(host[i],guest[j],k) <= c ) {
					matrix[i][j] = 1;
				}
				else {
					matrix[i][j] = 0;
				}
			}
		}

		/*for ( int i = 0; i < m; i++ ) {
			for ( int j = 0; j < n; j++ ) {
				cout << matrix[i][j] << " ";
			}
			cout << endl;
		}	*/
		l++;
		cout << "Case " << l <<": " << maxbpm(m,n) << endl;
	}	

	return 0;
}