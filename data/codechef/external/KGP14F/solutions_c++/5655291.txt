	#include <iostream>
	#include<stack>
	#include<string>
	#include<vector>
	#include<set>
	#include<queue>
	#include<stdio.h>
	#include<string.h>
	#include<math.h>
	#include<algorithm>
	using namespace std;

	#define gc getchar
	#define p 1000000007
	#define MOD 1000000007
	#define pc(x) putchar(x)
	#define pi(n) printf("%d",n)
	#define pis(n) printf("%d ",n)
	#define pin(n) printf("%d\n",n)
	#define pll(n) printf("%lld",n)
	#define ps printf(" ")
	#define pn printf("\n")
	#define rep(i,n) for(i=0;i<n;i++)
	#define fu(i,a,n) for(i=a;i<=n;i++)
	#define fd(i,n,a) for(i=n;i>=a;i--)
	#define INV 333333336
	#define ll long long
	#define ull unsigned long long
	#define EPS 1e-9
	#define infi 2000000000
	#define linfi 2000000000000000000

	inline int sn()
	{
		int n=0;
		int ch=gc();
		while( ch <48 )ch=gc();
		while( ch >47 )
		n = (n<<3)+(n<<1) + ch-'0', ch=gc();
		    return n;
	}

	inline void wi(int n)
	{
		int N = n, rev, count = 0;
		rev = N;
		if (N == 0) { pc('0');  return ;}
		while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
		rev = 0;
		while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
		while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
		while (count--) pc('0');
	}
		
	typedef struct 
	{
		int x,y;
	}node;
	
	int main()
	{
		int t=sn();
		for(int q=1;q<=t;q++)
		{
			int n,h,g,c,i,j,k,x[300][300],ans,count;
			node a[300],b[300];
			scanf("%d %d %d %d",&h,&g,&k,&c);
			rep(i,h)
			{
				scanf("%d %d",&a[i].x,&a[i].y);
			}
			rep(i,g)
			{
				scanf("%d %d",&b[i].x,&b[i].y);
			}
			
			rep(i,h)
			{
				rep(j,g)
				{
					x[i][j]=abs(a[i].x-b[j].x)+abs(a[i].y-b[j].y)+abs(b[j].x-k)+abs(b[j].y-k);				
				}
			}
			
			/*pn;
			rep(i,h)
			{rep(j,g) if(x[i][j]<=c) pis(x[i][j]); else pis(0); pn;}pn;*/
			
			rep(i,h) rep(j,g) if(x[i][j]>c) x[i][j]=0;
			
			ans=infi;
			
			count=0;			
			rep(i,h)
			{
				int flag=1;
				rep(j,g)
				{
					if(x[i][j]!=0) flag=0;
				}
				if(flag==0) count++;
			}
			//pin(count);
			ans=min(ans,count);
			
			count=0;
			rep(j,g)
			{
				int flag=1;
				rep(i,h)
				{
					if(x[i][j]!=0) flag=0;
				}
				if(flag==0) count++;
			}
			//pin(count);
			ans=min(ans,count);
			
			
			printf("Case %d: ",q);
			pin(ans);
		}
	
	}














