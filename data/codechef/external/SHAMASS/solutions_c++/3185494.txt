/*	Template by
	Ashwin Kumar
	IIT Delhi */
#include<algorithm>
#include<iostream>
#include<cassert>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<sstream>
#include<string>
#include<ctime>
#include<deque>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<vector>	
using namespace std;

typedef pair<int, int> pii;
typedef long long LL;
#define MOD 1000000007
#define INF 1000000000

double ans[10000];
int timr[10000];
int maxv[10000];
int A, D;

double getTime(int i) {
	double t = (double)maxv[i]/A;
	double d = 0.5*t*t*A;
	if (d >= D)
		return sqrt((2.0*D)/A);
	else
		return (t+(D-d)/maxv[i]);
}

//Returns 1 if magnets i-1 and i collide
int checkCollision(int i) {
	if (timr[i]+getTime(i) > ans[i-1])
		return 0;					
	return 1;
}

int main() {
	int T;
	scanf("%d", &T);
	for (int t = 0; t < T; t++) {
		int N;
		scanf("%d %d %d", &N, &A, &D);
		for (int i = 0; i < N; i++)
			scanf("%d %d", &timr[i], &maxv[i]);
		ans[0] = timr[0]+getTime(0);
		for (int i = 1; i < N; i++) {
			if (checkCollision(i))
				ans[i] = ans[i-1];
			else
				ans[i] = timr[i]+getTime(i);
		}
		for (int i = 0; i < N; i++)
			printf("%.8lf\n", ans[i]);
	}
	return 0;
}
