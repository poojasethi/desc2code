#include<cstdio>
#include<vector>
#include<cstdlib>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef long long ll;

const ll M=1000000007;

vector<int> tree[10000];
ll hash[10000],fact[10000];
int rnd[10000];

ll dfs(int u,int pre){
	ll ans=1;
	vector<ll> H;
	rep(i,tree[u].size()){
		int v=tree[u][i];
		if(v!=pre){
			ans=ans*dfs(v,u)%M;
			H.push_back(hash[v]);
		}
	}

	sort(H.begin(),H.end());
	for(int i=1,cnt=1;i<=H.size();i++){
		if(i==H.size() || H[i-1]!=H[i]){
			ans=ans*fact[cnt]%M;
			cnt=0;
		}
		cnt++;
	}

	hash[u]=1;
	rep(i,H.size()) hash[u]+=rnd[i]*H[i];

	return ans;
}

int main(){
	rep(i,10000){
		rnd[i]=rand();
		if(i==0) fact[i]=1;
		else     fact[i]=i*fact[i-1]%M;
	}

	int T; scanf("%d",&T);
	while(T--){
		int n; scanf("%d",&n);
		rep(u,n) tree[u].clear();
		rep(i,n-1){
			int u,v; scanf("%d%d",&u,&v);
			tree[u].push_back(v);
			tree[v].push_back(u);
		}
		printf("%lld\n",dfs(0,-1));
	}

	return 0;
}
