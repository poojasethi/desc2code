#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

ll a[1009],n;
int k;

bool check(ll t)
{
    ll val = 0;
    REP(i,0,k - 1)
        val += ( t / a[i] );
    if( val >= n )
        return true;
    return false;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    s(k);sll(n);
    REP(i,0,k - 1)
        sll(a[i]);
    ll low = 1 , high = INF * 1ll * 10000 , mid = (low + high) / 2;
    while( low < high )
    {
        mid = ( low + high ) / 2;
        if( check(mid) )
            high = mid;
        else
            low = mid + 1;
    }
    printf("%lld\n",low);
    return 0;
}
