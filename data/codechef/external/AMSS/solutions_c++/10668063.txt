#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <string>
using namespace std;

const int N = 5e3;
const int MOD = 1000000007;

int n;
int comb[N + 1][N + 1];

long long sqr(int x) {
	return 1LL * x * x % MOD;
}

long long sqr(int l, int r, int x) {
	r--, l--;
	if (l == 0) {
		return sqr(comb[r][x]);
	} else {
		return sqr((comb[r][x] - comb[l - 1][x] + MOD) % MOD);
	}
}

int main() {
	for (int i = 0; i <= N; i++) {
		comb[i][0] = 1;
		for (int j = 1; j <= i; j++) {
			comb[i][j] = (comb[i - 1][j - 1] + comb[i - 1][j]) % MOD;
		}
	}
	
	for (int i = 0; i <= N; i++) {
		for (int j = 1; j <= N; j++) {
			comb[j][i] += comb[j - 1][i];
			if (comb[j][i] >= MOD) {
				comb[j][i] -= MOD;
			}
		}
	}
	
	int tests;
	scanf("%d", &tests);
	while (tests--) {
		int n, ans = 0, sigma = 26;
		scanf("%d", &n);
		int sigma_power = 1;
		for (int i = 1; i <= n; i++) {
			ans += 1LL * sigma * sigma_power % MOD * sqr(i, n, i - 1) % MOD;
			ans %= MOD;
			sigma_power = 1LL * sigma_power * (sigma - 1) % MOD;
		}
		printf("%d\n", ans);
	}
	
	return 0;
}