#include <bits/stdc++.h>

#define REP(i, n)   for(int i=0;i<n;i++)
#define REPN(i, n)  for(int i=1;i<=n;i++)
#define SET(i, n)   memset(i, n, sizeof(i))

#define MAX         5050
#define INF         (1LL << 50LL)
#define pb          push_back

using namespace std;

typedef long long ll;

const int MOD = 1e9 + 7;

ll P[MAX], F[MAX], I[MAX], C[MAX][MAX], S[MAX];

ll bigmod(ll n, ll r){
    if(r == 0) return 1;
    if(r % 2 == 0){
        ll ret = bigmod(n, r/2);
        return (ret * ret) % MOD;
    }
    ll ret = bigmod(n, r-1);
    return (n * ret) % MOD;
}

ll nCr(ll n, ll r){
    if(r > n) return 0;
    ll r1 = F[n];
    ll r2 = I[r];
    ll r3 = I[n-r];
    ll r4 = (r2 * r3) % MOD;
    return (r1 * r4) % MOD;
}

void init(){
    P[0] = F[0] = I[0] = 1;
    for(int i=1;i<MAX;i++){
        P[i] = P[i-1] * 25; P[i] %= MOD;
        F[i] = F[i-1] * i;  F[i] %= MOD;
        I[i] = bigmod(F[i], MOD-2);
        S[i] = P[i-1] * 26; S[i] %= MOD;
    }
    REP(i, MAX){
        REP(j, MAX){
            C[i][j] = nCr(i, j);
        }
    }
}

int main(){
    init();
    int tc, n;
    scanf("%d", &tc);
    while(tc--){
        scanf("%d", &n);
        ll ret = 0;
        REPN(i, n){
            ll r1 = (C[n][i] * C[n][i]) % MOD; 
            // printf("nCr(%d, %d) = %lld\n", n, i, C[n][i]);
            ll r2 = (r1 * S[i]) % MOD;
            ret = (ret + r2) % MOD;
        }
        printf("%lld\n", ret);
    }
    return 0;
}