#include <bits/stdc++.h>
#define left dkdkjdkjd
#define right kddkdjdl
#define MOD 1000000007
using namespace std;
long long int dp[5005];
long long int func(long long int n){
    if(n>=MOD)
        return n%MOD;
    return n;
}
long long int fact[5005];
long long int C[5005][5005];
long long int power(long long int a,long long int b){
    if(b==0)
        return 1;
    long long int f=power(a,b/2);
    f=(f*f)%MOD;
    if(b%2)
        return (a*f)%MOD;
    return f;
}bool vis[5005][5005];
long long int comb(long long int n,long long int r){
    if(r==0 || n==r)
        return 1;
    if(vis[n][r])
        return C[n][r];
    vis[n][r]=true;
    C[n][r]=func(comb(n-1,r-1)+comb(n-1,r));
    return C[n][r];
}

long long int ans[5005];
int main(){//freopen("output.txt","w",stdout);
   int t;
   cin >> t;
   fact[0]=1;
   for(long long int i=1;i<=5000;++i)
    fact[i]=func(i*fact[i-1]);



   dp[0]=1;
   dp[1]=26;
   for(int i=2;i<5005;++i)
        dp[i]=func(25*dp[i-1]);
   // int index=0;
   for(int n=1;n<=5000;++n){
   for(int i=1;i<=n;++i){
            long long int temp=comb(n,i);

            temp=func(temp*temp);
            temp=func(temp*dp[i]);

            ans[n]+=temp;

            ans[n]=func(ans[n]);

        }
        //ans[n]+=(n*n*26);
        }

   while(t--){//++index;
        int n;
        scanf("%d",&n);


        printf("%I64d\n",ans[n]);



   }
    return 0;
}
