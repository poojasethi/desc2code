//Bismillahir Rahmanir Rahim
#include <bits/stdc++.h>
using namespace std;

long long MOD=1000000007;
long long fact[100009], invfact[100009],DD[5009];
long long powmod(long long base, long long expo)
{
	if(expo==0) return 1;
	if(expo&1) return base*powmod(base, expo-1)%MOD;
	else
	{
		long long root=powmod(base, expo>>1);
		return root*root%MOD;
	}
}
long long inverse(long long x)
{
	return powmod(x, MOD-2);
}
void init()
{
    long long i;
	fact[0]=1;
	for(i=1; i<=100003; i++)
    {
        fact[i]=i*fact[i-1]%MOD;
    }
	invfact[100003]=inverse(fact[100003]);
	for(i=100003; i>0; i--)
    {
        invfact[i-1]=i*invfact[i]%MOD;
    }
}
long long nCr(long long n, long long r)
{
	if(r>n || r<0)  return 0;
	return (fact[n]*invfact[r]%MOD)*invfact[n-r]%MOD;
}

int main()
{

    init();


    long long test,n,ans,i,temp;

    DD[1]=26;
    for(i=2;i<=5005;i++)
    {
        DD[i]=DD[i-1]*25;
        DD[i]%=MOD;
    }

    cin>>test;
    while(test--)
    {
        scanf("%lld",&n);
        ans=DD[n];

        for(i=1;i<n;i++)
        {
            temp=nCr((n-i)+i,i);
            temp*=temp;
            temp%=MOD;
            ans+=DD[i]*temp;
            ans%=MOD;
        }

        printf("%lld\n",ans);
    }

}
