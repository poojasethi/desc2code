#include <bits/stdc++.h>
#define ll long long
#define gc getchar_unlocked
#define pc putchar_unlocked
#define md 1000000007
using namespace std;
inline void inp(int &n) {
    register int c = gc(); n=0; while(c < '0' || c > '9')c = gc();
    while(c >= '0' && c <= '9') {n = (n << 3) + (n << 1) + c - '0'; c = gc();}
}
inline void oup(int n) {
    char s[21]; register int i=0; do { s[i++]=n%10+'0'; n/=10;} while(n);
    while(--i>=0) {pc(s[i]);} pc('\n');
}
ll C[5005][5005], ans[5005], powArr[5005];
ll stringsToThis[5005];
void ncrInit(){
    for(int i=0; i<5005; i++){
        C[i][0]=1;
        for(int j=1; j<=i; j++){
            C[i][j] = (C[i-1][j] + C[i-1][j-1]) % md;
        }
    }
}
int main() { 
    int t,n;
    inp(t);
    ncrInit();
    powArr[0] = 1;
    for(int i=1; i<5005; ++i) {
        powArr[i] = 1LL * powArr[i-1] * 25 % md;
    }
    for(int n=1; n<=5000; ++n) {
        ll temp = 0;
        for(int i = 1; i <= n; ++i) {
            ll ofThisLen = 26LL * powArr[i-1] % md;
            stringsToThis[i] = (stringsToThis[i] + C[n-i+i-1][i-1]) % md;
            temp = (temp + 1LL * ofThisLen * stringsToThis[i] % md * stringsToThis[i] % md) % md;
        }
        ans[n] = temp;
    }
    while(t--) {
        inp(n);
        oup(ans[n]);
    }
    return 0;
}