#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define FL(i,a,b) for(ll i=a;i<b;i++)
#define FOR(i,n) for(ll i=0;i<n;i++)
#define SORTF(x) sort(x.begin(),x.end(),func);
#define SORT(x) sort(x.begin(),x.end())
#define pb(x) push_back(x)
#define SET(v, val) memset(v, val, sizeof(v)) ;
#define RSORT(v) { SORT(v) ; REVERSE(v) ; }
#define ALL(v) v.begin(),v.end()
#define REVERSE(v) { reverse(ALL(v)) ; }
#define UNIQUE(v) unique((v).begin(), (v).end())
#define RUNIQUE(v) { SORT(v) ; (v).resize(UNIQUE(v) - (v).begin()) ; }
#define fill(x,n) memset(x,n,sizeof(x))
#define S(n) scanf("%lld",&n)

ll ru[20] = {0 ,1 ,2,3,4,6,1,2,3,5,1,2,5,7,0};
ll val[20] = {1, 1,1,1,1,1,0,0,0,0,0,0,0,0,1};

ll dp[10][10010];
ll mod =  10000007;

ll solve(ll ball,ll run) {
	if((ball <= 0  || run <= 0)) {
		return 1;
	}
	
	if(dp[ball][run] == -1) {
		ll tot = 0;
		for(ll i = 0;i < 15;i++) {
			ll flag = 0;
			if(i == 14) {
				flag = 1;
				tot++;
			}
			tot += solve( ball - val[i], run - ru[i]);
			tot %= mod;
		}
		dp[ball][run] = tot;
	}
	return dp[ball][run];
}

int main() {
	memset(dp, -1, sizeof(dp));
	ll t;
	S(t);
	ll p = 1;
	while(t--) {
	
		ll n;
		S(n);
		ll tot = 0;
		tot += solve(6, n);
		tot %= mod;
		cout << "Case " << p << ": ";
		p++;
		cout << tot << "\n";
	}
	return 0;
}

