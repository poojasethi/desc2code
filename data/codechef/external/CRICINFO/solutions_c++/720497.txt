#include<ctime>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<string>
#include<vector>
#include<sstream>
#include<iostream>
#include<algorithm>
#include<queue>
#include<stack>
#include<set>
#include<map>
#include<numeric>
#include<cmath>
#include<locale>
using namespace std;
#define all(x) (x).begin(),(x).end()
#define sz(a) (int((a).size()))
typedef istringstream iss; typedef ostringstream oss; typedef long long lli;
const double TOLL=1e-9;
lli mod=10000007;
lli memo[10001][7];
lli dp[10001];
 
 
lli recur(int n,int b)
{
    if(n<=0) return 1;
    if(b==0) return 1;
    if(memo[n][b]!=-1) return memo[n][b];
    lli rv=1;
    for(int i=0;i<=6;i++) if(i!=5)
    {
        rv+=recur(n-i,b-1); rv%=mod;
    }
    rv+=recur(n,b-1); rv%=mod;
 
    rv+=2*recur(n-1,b); rv%=mod;
    rv+=2*recur(n-2,b); rv%=mod;
    rv+=recur(n-3,b); rv%=mod;
    rv+=2*recur(n-5,b); rv%=mod;
 
    //rv+=recur(n-1,b,w); rv%=mod;
    //rv+=recur(n-2,b,w); rv%=mod;
    //rv+=recur(n-5,b,w); rv%=mod;
    rv+=recur(n-7,b); rv%=mod;
    //rv+=recur(n,b-1,w-1); rv%=mod;
    return memo[n][b]=rv;
 
}
 
 
/*
lli recur(int n,int b,int w)
{
    if(!n) return 1;
    if(!b) return 1;
    if(!w) return 1;
    if(memo[n][b][w]!=-1) return memo[n][b][w];
    lli rv=0;
    for(int i=0;i<=6;i++)
    {
        rv+=recur(n-i,b-1,w); rv%=mod;
    }
 
    rv+=2*recur(n-1,b,w); rv%=mod;
    rv+=2*recur(n-2,b,w); rv%=mod;
    rv+=recur(n-3,b,w); rv%=mod;
    rv+=2*recur(n-5,b,w); rv%=mod;
 
    //rv+=recur(n-1,b,w); rv%=mod;
    //rv+=recur(n-2,b,w); rv%=mod;
    //rv+=recur(n-5,b,w); rv%=mod;
    rv+=recur(n-7,b,w); rv%=mod;
    rv+=recur(n,b-1,w-1); rv%=mod;
    return memo[n][b][w]=rv;
 
}
*/
 
int main()
{
    memset(memo,-1,sizeof memo);
    for(int n=0;n<=10000;n++)
    {
        int rv=recur(n,6)%mod;
 
        dp[n]=rv;
    }
    //cerr<<dp[10000]<<endl;
    int run,t,cn=0; scanf("%d",&t);
    while(t--)
    {
        cn++;
        scanf("%d",&run);
        printf("Case %d: %d\n",cn,dp[run]);
    }
    
    return 0;
 
}
