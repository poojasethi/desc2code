#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string>
#include <string.h>
#define pb push_back

#define SS(a,b) scanf("%d%d",&a,&b);
#define S(a) scanf("%d",&a);
#define SSL(a,b) scanf("%lld%lld",&a,&b);
#define SL(a) scanf("%lld",&a);
#define SSS(a,b,c) scanf("%d %d %d",&a,&b,&c);
#define GI ({int t;scanf("%d",&t);t;})
#define GL ({ll t;scanf("%lld",&t);t;})
#define MAXN 10000000
#define FOR(i,n) for(int i=0;i<n;i++)

using namespace std;
typedef  long long LL;
LL dp[11000][8];
LL MOD=10000007LL;
LL solve(int n,int balls){
//	cout<<n<<" "<<balls<<endl;
	if(n<=0)return 1;
	if(balls<=0)return 1;
	if(dp[n][balls]!=-1)
		return dp[n][balls];
	LL ret=0;
//runs	and dots
// runs not 5 
//	cout<<"Rad";
	for(int i=0;i<=6;i++)
		if(i!=5)
		ret=(ret+solve(n-i,balls-1))%MOD;
// wides
	ret=(ret+solve(n-1,balls))%MOD;
	ret=(ret+solve(n-2,balls))%MOD;
	ret=(ret+solve(n-3,balls))%MOD;
	ret=(ret+solve(n-5,balls))%MOD;
	
// no balls 
	ret=(ret+solve(n-1,balls))%MOD;
	ret=(ret+solve(n-2,balls))%MOD;
	ret=(ret+solve(n-5,balls))%MOD;
	ret=(ret+solve(n-7,balls))%MOD;
// wickets
    ret=(ret+1+solve(n,balls-1))%MOD;
	//ret=(ret+solve(n,balls-1))%MOD;
	return dp[n][balls]=ret;
}
int main(){
	int t=GI;
	memset(dp,-1,sizeof dp);
	for(int ca=1;ca<=t;ca++){
		int n=GI;
		LL ans=solve(n,6);
		printf("Case %d: %lld\n",ca,ans);
	}
	return 0;
}