//cric info test
#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <iterator>
#include <set>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
#include <queue>
#include <stack>
#include <ctype.h>
#include <utility>

using namespace std;

#define ll long long
#define MAX(x,y) ((x)< ?  : (x))
#define MIN(x,y) ((x)<(y) ? (x) : (y))
#define SWAP(x,y) do{a+=b; b=a-b; a=a-b;}while(0)
#define md1 1000000007ll
#define md2 10000007ll
#define inf 998877665544332211ll
#define info 987654321ll
#define fr(i,n) for(i=0;i<n;i++)
#define rfr(i,n) for(i=n-1;i>=0;i--)
#define jfr(i,j,n) for(i=j;i<n;i++)
#define pnt(n) cout<<n<<endl;
#define fillchar(a,i) memset(a,i,sizeof(a));

int gcd(int a,int b) {return b?gcd(b,a%b):a;};

struct node{
	int x;
	int y;
};
typedef struct node yash;

bool my_fun(yash a,yash b){
    if(a.x<b.x)
        return 1;
    else if(a.x==b.x){
        return (a.y<b.y);
    }
    else
        return 0;
}
long long arr[10010][7][7];
long long find(int run,int wik,int ball){
	if(run<=0)
		return 1;
	if(wik>=6)
		return 0;
	if(ball>=6)
		return 1;
	if(arr[run][wik][ball]!=-1)
		return arr[run][wik][ball];
	long long int ans=1;
	ans+=find(run,wik,ball+1);
	ans+=find(run-1,wik,ball+1);
	ans+=find(run-2,wik,ball+1);
	ans+=find(run-3,wik,ball+1);
	ans+=find(run-4,wik,ball+1);
	//ans+=find(run-5,wik,ball+1);
	ans+=find(run-6,wik,ball+1);
	ans+=2*find(run-1,wik,ball);
	ans+=2*find(run-2,wik,ball);
	ans+=find(run-3,wik,ball);
	ans+=2*find(run-5,wik,ball);
	ans+=find(run-7,wik,ball);
	ans+=find(run,wik-1,ball+1);
	arr[run][wik][ball]=ans%10000007;
	return ans%10000007;
}


int main(){
	int t,n,i;
	vector<yash> v;
	yash temp;
			memset(arr, -1, sizeof(arr));
	scanf("%d", &t);
	int ca = 1;
	while(t--){
		cin>>n;
		cout<<"Case "<<ca++<<": "<<find(n,0,0)<<endl;
	}
	return 0;
}