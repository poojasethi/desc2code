#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<set>
#include<map>
#include<string>
#include<vector>
#include<algorithm>
#define MOD 10000007
using namespace std;

long long int win[7][10001];
long long int lose[7][10001];
long long sum[10001];
int main(){

	win[0][0]=1;
	
	for(int i=0,j=0;j<=10000;j++){
			if(j>=1) win[i][j]=(win[i][j]+2*win[i][j-1])%MOD;
			if(j>=2) win[i][j]=(win[i][j]+2*win[i][j-2])%MOD;
			if(j>=3) win[i][j]=(win[i][j]+win[i][j-3])%MOD;
			if(j>=5) win[i][j]=(win[i][j]+2*win[i][j-5])%MOD;
			if(j>=7) win[i][j]=(win[i][j]+win[i][j-7])%MOD;
	}
	for(int i=1;i<7;i++){
		for(int j=0;j<=10000;j++){
			win[i][j]=2*win[i-1][j];
			if(j>=1) win[i][j]=(win[i][j]+win[i-1][j-1])%MOD;
			if(j>=2) win[i][j]=(win[i][j]+win[i-1][j-2])%MOD;
			if(j>=3) win[i][j]=(win[i][j]+win[i-1][j-3])%MOD;
			if(j>=4) win[i][j]=(win[i][j]+win[i-1][j-4])%MOD;
			if(j>=6) win[i][j]=(win[i][j]+win[i-1][j-6])%MOD;
			if(i<6){
			if(j>=1) win[i][j]=(win[i][j]+2*win[i][j-1])%MOD;
			if(j>=2) win[i][j]=(win[i][j]+2*win[i][j-2])%MOD;
			if(j>=3) win[i][j]=(win[i][j]+win[i][j-3])%MOD;
			if(j>=5) win[i][j]=(win[i][j]+2*win[i][j-5])%MOD;
			if(j>=7) win[i][j]=(win[i][j]+win[i][j-7])%MOD;
		}
			
			lose[i][j]=win[i-1][j];
		}
	}
	sum[0]=win[6][0];
	for(int i=1;i<7;i++) for(int j=1;j<=10000;j++) lose[i][j]=(lose[i][j-1]+lose[i][j])%MOD;
	for(int i=1;i<=10000;i++) sum[i]=(sum[i-1]+win[6][i])%MOD;
	
/*	for(int i=0;i<7;i++){
		cout<<win[0][i]<<" "<<endl;
	}*/
	
	int T,N;
	scanf("%d",&T);
	for(int I=1;I<=T;I++){
		scanf("%d",&N);
		long long ans=sum[N-1];
		for(int i=0,j=N;i<7;i++){
			ans=(ans+lose[i][j-1])%MOD;
			if(i<6){
			if(j>=1) ans=(ans+8*win[i][j-1])%MOD;
			if(j>=2) ans=(ans+6*win[i][j-2])%MOD;
			if(j>=3) ans=(ans+4*win[i][j-3])%MOD;
			if(j>=4) ans=(ans+3*win[i][j-4])%MOD;
			if(j>=5) ans=(ans+3*win[i][j-5])%MOD;
			if(j>=6) ans=(ans+win[i][j-6])%MOD;
			if(j>=7) ans=(ans+win[i][j-7])%MOD;
		}
			if(i>=1 && j>=1) ans=(ans+5*win[i-1][j-1])%MOD;
			if(i>=1 && j>=2) ans=(ans+4*win[i-1][j-2])%MOD;
			if(i>=1  && j>=3) ans=(ans+3*win[i-1][j-3])%MOD;
			if(i>=1 && j>=4) ans=(ans+2*win[i-1][j-4])%MOD;
			if(i>=1 && j>=5) ans=(ans+win[i-1][j-5])%MOD;
			if(i>=1 && j>=6) ans=(ans+win[i-1][j-6])%MOD;
		}
		printf("Case %d: %lld\n",I,ans);
	}
	return 0;
}
