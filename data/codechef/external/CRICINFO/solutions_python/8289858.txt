#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 10000007
int dp[10011][7][2];
int main()
{
    int i,j,k;
    for(i=0;i<=6;i++)
        for(j=0;j<2;j++)
            dp[0][i][j]=1;
    for(i=1;i<=10000;i++)
    {
        dp[i][0][0]=1;
        dp[i][0][1]=2;
        for(j=1;j<=6;j++)
        {
            dp[i][j][0]=0;
            //dot
            dp[i][j][0]+=dp[i][j-1][0];
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            //runs
            if(i-1>=0)
                dp[i][j][0]+=dp[i-1][j-1][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-2>=0)
                dp[i][j][0]+=dp[i-2][j-1][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-3>=0)
                dp[i][j][0]+=dp[i-3][j-1][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-4>=0)
                dp[i][j][0]+=dp[i-4][j-1][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-6>=0)
                dp[i][j][0]+=dp[i-6][j-1][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            //wides
            dp[i][j][0]+=dp[i-1][j][0];
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-2>=0)
                dp[i][j][0]+=dp[i-2][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-3>=0)
                dp[i][j][0]+=dp[i-3][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;


            if(i-5>=0)
                dp[i][j][0]+=dp[i-5][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            //no balls
            dp[i][j][0]+=dp[i-1][j][0];
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;
            if(i-2>=0)
                dp[i][j][0]+=dp[i-2][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-5>=0)
                dp[i][j][0]+=dp[i-5][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            if(i-7>=0)
                dp[i][j][0]+=dp[i-7][j][0];
            else
                dp[i][j][0]++;
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;

            //wicket
            dp[i][j][0]+=dp[i][j-1][1];
            if(dp[i][j][0]>=mod)
                dp[i][j][0]-=mod;







            dp[i][j][1]=1;
            //dot
            dp[i][j][1]+=dp[i][j-1][0];
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            //runs
            if(i-1>=0)
                dp[i][j][1]+=dp[i-1][j-1][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-2>=0)
                dp[i][j][1]+=dp[i-2][j-1][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-3>=0)
                dp[i][j][1]+=dp[i-3][j-1][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-4>=0)
                dp[i][j][1]+=dp[i-4][j-1][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-6>=0)
                dp[i][j][1]+=dp[i-6][j-1][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            //wides
            dp[i][j][1]+=dp[i-1][j][0];
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-2>=0)
                dp[i][j][1]+=dp[i-2][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-3>=0)
                dp[i][j][1]+=dp[i-3][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;


            if(i-5>=0)
                dp[i][j][1]+=dp[i-5][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            //no balls
            dp[i][j][1]+=dp[i-1][j][0];
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;
            if(i-2>=0)
                dp[i][j][1]+=dp[i-2][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-5>=0)
                dp[i][j][1]+=dp[i-5][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            if(i-7>=0)
                dp[i][j][1]+=dp[i-7][j][0];
            else
                dp[i][j][1]++;
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

            //wicket
            dp[i][j][1]+=dp[i][j-1][1];
            if(dp[i][j][1]>=mod)
                dp[i][j][1]-=mod;

        }
    }
    int t,c=1;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        printf("Case %d: %d\n",c,dp[n][6][0]%mod);
        c++;
    }
    return 0;
}
