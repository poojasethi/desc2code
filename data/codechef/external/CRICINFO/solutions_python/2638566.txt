/* Author : Mayank Natani
   Email-id : mayanknatani6@gmail.com, mayank.natani@students.iiit.ac.in 
   Blog : mayanknatani.wordpress.com */
 
/* Data Structure Includes */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <bitset>
#include <stack>
 
/*other Includes */
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
 
/* C Includes */
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
 
using namespace std;
typedef vector<int > vi;
typedef vector<long long int > vl;
typedef vector<bool > vb;
typedef vector<char > vc;
typedef vector<float > vf;
typedef vector<double > vd;
typedef vector<vi > vvi;
 
#define pb push_back
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sf(n) scanf("%f",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define all(a) a.begin(),a.end()
#define tr(container,it) for(typeof(container.begin()) it = container.begin() ; it != container.end() ; it++) //to traverse any container
#define present(container,element) (container.find(element)!=container.end()) //should be used for set,map etc.
#define vpresent(container,element) (find(all(container),element)!=container.end()) //should be used for vectors.
#define PI 3.14159265359
#define DegToRad(a) PI/180*all
#define RadToDeg(a) 180/PI*a
#define LL long long int 
#define INF 2147483647
int gcd(int a,int b){ if(a==0) return b; return(b%a,a);}
int r[]={0,1,2,3,4,6,1,2,3,5,1,2,5,7,0}, b[]={1,1,1,1,1,1,0,0,0,0,0,0,0,0,1}, w[]={0,0,0,0,0,0,0,0,0,0,0,0,0,0,-1};
LL Ans;
#define MOD 10000007
LL dp[6][10010];
LL calc(int ball,int n,int N)
{
	if(ball>=6)
		return 1;
	if(n>=N)
		return 1;
	LL &Res = dp[ball][n];
	if(Res!=-1)
		return Res;
	Res = 0;
	for(int i = 0;i<15;i++){
		LL val = calc(ball+b[i],n+r[i],N);
		Res = (Res + val)%MOD;
	}
	Res = (Res + 1)%MOD;
	return Res;	
}
int main(){
	int t;
	scanf("%d",&t);
	int N = t;
	for (int i = 0; i < 10010; i++) {
		for (int j = 0; j < 6; j++) {
			dp[j][i] = -1;
		}
	}
	int res = calc(0,0,10000);
	while(t--)
	{
		int n;
		Ans = 0;
		scanf("%d",&n);			
		cout<<"Case "<<N-t<<": "<<dp[0][10000 - n]<<endl;
	}
	return 0;
}
