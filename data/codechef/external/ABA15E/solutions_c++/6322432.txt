#include <iostream>
#include <cmath>
#include <stdio.h>

#define MOD 1000000007
typedef long long ll;
typedef long long unsigned ull;
typedef long double ld;
typedef unsigned short us;
typedef unsigned int uint;
typedef unsigned char uchar;

using namespace std;

void multiply(long long int F[4][4],long long int M[4][4]);

void power(long long int F[4][4],long long int n);

long long int fib(long long int n)
{
  long long int F[4][4] = {{4,1,0,1},{0,3,2,0},{0,1,0,0},{0,0,0,1}};
  if (n == 0)
    return 1;
  else if(n==1)
    return 7;
  else if(n==2)
    return 35;
 // else if(n==3)
 //   return 159;
  power(F, n-1);
  return (F[0][0]+F[0][1]+F[0][2]+F[0][3]*2)%MOD;
}

/* Optimized version of power() in method 4 */
void power(long long int F[4][4],long long int n)
{
  if( n == 0 || n == 1)
      return;
  long long int M[4][4] = {{4,1,0,1},{0,3,2,0},{0,1,0,0},{0,0,0,1}};

  power(F, n/2);
  multiply(F, F);

  if (n%2 != 0)
     multiply(F, M);
}

void multiply(long long int F[4][4],long long int M[4][4])
{
    int i,j;
    long long c[4][4];
    for(i=0;i<4;i++){
        for(j=0;j<4;j++){
            c[i][j]=0;
            for(int k=0;k<4;k++){
                c[i][j]=(c[i][j]+(F[i][k]*M[k][j])%MOD)%MOD;
            }
        }
    }
    for(i=0;i<4;i++){
        for(j=0;j<4;j++){
            F[i][j]=c[i][j];
        }
    }
}

long long modpow(long long base, long long exp,long long modulus) {
  base %= modulus;
  long long result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % modulus;
    base = (base * base) % modulus;
    exp >>= 1;
  }
  return result;
}

uint inp() {
  uint n;
  int c;
  while( (c = getchar()) < '0') {
    ;
  }
  n = c - '0';
  while( (c = getchar()) >= '0')
    n = n * 10 + (c - '0');
  return n;
}

void pt(uint n) {
  uchar stack[30];
  int top = 0;
  if(n == 0) {
    putchar('0');
  } else {
    while(n > 0) {
      stack[top++] = n % 10 + '0';
      n /= 10;
    }
    while(top > 0) {
      putchar(stack[--top]);
    }
  }
  putchar('\n');
}
long long a[10000005];
/* Driver program to test above function */
int main()
{
  long long n,m,ans;
  int i,t,z;
  t=inp();
  while(t--){
    n=inp();
    if(n==0)
        printf("1\n");
    else if(n==1)
        printf("7\n");
    else if(n==2)
        printf("35\n");
    if(n>2){
        ans=(fib(n+1))%MOD;
        z=ans;
        pt(z);
    }
  }
  return 0;
}
