#include <bits/stdc++.h>

using namespace std;

#define REP(i,n) for (int i = 0; i < n; i++)

typedef long long ll;
typedef vector< vector<ll> > matrix;
const ll MOD = 1000000007;
ll a[5][5], b[5][5], ret[5][5];
ll T[5][5] = {{4,0,0,1,1}, {0,0,1,0,0}, {0,0,0,1,0}, {0,0,2,3,0}, {0,0,0,0,1}};

void matmul1()
{
    int i, j, k;
    ll ret[5][5];
    memset(ret, 0, sizeof(ret));
    for(i=0; i<5; i++){
        for(j=0; j<5; j++){
            for(k=0; k<5; k++){
                ret[i][j]=(ret[i][j]+(a[i][k]*T[k][j])%MOD)%MOD;
            }
        }
    }
    for(i=0; i<5; i++){
        for(j=0; j<5; j++)
            a[i][j]=b[i][j]=ret[i][j];
    }
}

void matmul2()
{
    int i, j, k;
    ll ret[5][5];
    memset(ret, 0, sizeof(ret));
    for(i=0; i<5; i++){
        for(j=0; j<5; j++){
            for(k=0; k<5; k++){
                ret[i][j]=(ret[i][j]+(a[i][k]*b[k][j])%MOD)%MOD;
            }
        }
    }
    for(i=0; i<5; i++){
        for(j=0; j<5; j++)
            a[i][j]=b[i][j]=ret[i][j];
    }
}

void matexpo(int n)
{
    int i, j;
    if(n==1){
        for(i=0; i<5; i++){
            for(j=0; j<5; j++)
                a[i][j]=b[i][j]=T[i][j];
        }
        return;
    }
    matexpo(n/2);
    matmul2();
    if(n%2)
        matmul1();
    return;
}

int main()
{
    int t, i, j, n;
    ll c[] = {7, 1, 1, 5, 2};
    scanf("%d", &t);
    while(t--){
        scanf("%d", &n);
        if(n==1){
            printf("7\n");
            continue;
        }
        matexpo(n-1);
        ll ans=0;
        for(i=0; i<5; i++)
            ans=(ans+(a[0][i]*c[i])%MOD)%MOD;
        printf("%lld\n", ans);
    }
    return 0;
}
