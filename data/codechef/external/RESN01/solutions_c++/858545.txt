#pragma comment(linker,"/STACK:64000000")
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
#include <map>
#include <set>
#include <sstream>
#include <cmath>
#include <ctime>
#include <memory.h>

#define WR printf
#define RE scanf
#define PB push_back
#define SE second
#define FI first
#define MP make_pair

#define FOR(i,Be,En) for(int (i)=(Be);(i)<=(En);++(i))
#define DFOR(i,Be,En) for(int (i)=(Be);(i)>=(En);--(i))
#define SZ(a) (int)((a).size())
#define FA(i,v) FOR(i,0,SZ(v)-1)
#define RFA(i,v) DFOR(i,SZ(v)-1,0)
#define CLR(a) memset(a,0,sizeof(a))

#define LL  long long
#define VI  vector<int>
#define PAR pair<int ,int> 

using namespace std;
void __never(int a){printf("\nOPS %d", a);}
void __die(int a){printf("%d",(a*a)/(a+a));}
#define ass(s) {if (!(s)) {__never(__LINE__);cout.flush();cerr.flush();__die(0);}}



int m[30000];
int g[30000];
int ans[30000];
void f(int n, int k){
	vector<PAR> v;
	FOR(i, 0, n - 1) if (m[i] == 0){
		if (k+k+1 >= n) {
			FOR(i,0,n-1) m[i] = 0;
			return ;
		}
		int ri = i + k;
		int le = i - k;
		if (ri >= n) {
			v.PB(MP(0, ri - n));
			ri = n-1;
		}
		if (le < 0) {
			v.PB(MP(le + n, n-1));
			le = 0;
		}
		v.PB(MP(le,ri));
	}
	if (v.empty()) return ;
	sort(v.begin(), v.end());
	int cp = 0;
	int ma = -1;
	FOR(i,0,n-1) {
		while (cp < SZ(v) && v[cp].FI <= i) {
			ma = max(ma, v[cp].SE);
			cp++;
		}
		if (ma >= i) m[i] = 0;
	}
}
void init()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
}
void sol(){	
	int n, k;
	cin >> n >> k;
	FOR(i,0,n-1) RE("%d",&g[i]);
	FOR(i,0,n-1) ans[i] = 0;
	FOR(i,0,30) {
		FOR(j,0,n-1) m[j] = g[j] & (1<<i);
		f(n,k);
		FOR(j,0,n-1) ans[j] |= m[j];
	}
	FOR(i,0,n-1) WR(" %d",ans[i]);
	WR("\n");
}
int main()
{
	//init();
	int T;
	cin >> T;
	FOR(t,1,T) {
		sol();
	}
	return 0;
}