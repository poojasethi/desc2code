#include<cstdio>
#include<iostream>
#define MAX 20000
using namespace std;
int T[3*MAX+10];
int a[MAX+10];
void build(int node,int beg,int end)
{
    if(beg==end)
    {T[node]=a[beg];return;}
    int mid=(beg+end)/2;
    build(2*node,beg,mid);
    build(2*node+1,mid+1,end);
    T[node]=T[2*node]&T[2*node+1];
}
int query(int node,int beg,int end,int i,int j)
{
    if(i==beg&&j==end)
    return T[node];
    int mid=(beg+end)/2;
    if(j<=mid)
    return query(2*node,beg,mid,i,j);
    if(i>mid)
    return query(2*node+1,mid+1,end,i,j);
    return query(2*node,beg,mid,i,mid)&query(2*node+1,mid+1,end,mid+1,j);
}
int main()
{
    int t,n,k;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d",&n,&k);
        for(int i=0;i<n;i++)
        scanf("%d",a+i);
        build(1,0,n-1);
        k=min(k,n-1);
        for(int i=0;i<n;i++)
        {
            int start=(i-k+n)%n;
            int end=(i+k)%n;
            int res=-1;
            if(start < i)
            res &= query(1, 0, n - 1, start, i);
			else
			res &= query(1, 0, n - 1, 0, i) & query(1, 0, n - 1, start, n - 1);
			if(end > i)
			res &= query(1, 0, n - 1, i, end);
			else res &= query(1, 0, n - 1, i, n - 1) & query(1, 0, n - 1, 0, end);

            if(i)
            printf(" ");
            printf("%d",res);
        }
        printf("\n");
    }
}
