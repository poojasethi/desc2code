#include <cstdio>
#include <algorithm>
using namespace std;

const int Maxn = 20000, Maxp = 15;

int t, n, k, A[Maxn][Maxp], res[Maxn], pow2[Maxp];

int main()
{
    pow2[0] = 1;
    for (int i = 1; i < Maxp; i++) pow2[i] = 2 * pow2[i-1];
    
    scanf("%d", &t);
    
    while (t--) {
          
          scanf("%d %d", &n, &k); k = min(2 * k + 1, n);
          
          for (int i = 0; i < n; i++) scanf("%d", &A[i][0]);
          
          for (int j = 1; j < Maxp && pow2[j] <= k; j++)
             for (int i = 0; i < n; i++)
                A[i][j] = A[i][j-1] & A[(i + pow2[j-1]) % n][j-1];
                
          for (int i = 0; i < n; i++) {
              int ans = A[i][0], col = 0;
              for (int j = Maxp - 1; j >= 0; j--)
                 if (col + pow2[j] <= k) {
                         ans &= A[(i + col) % n][j];
                         col += pow2[j];
                 }
              res[(i + k/2) % n] = ans;
          }
          
          for (int i = 0; i < n; i++) {
              if (i) printf(" ");
              printf("%d", res[i]);
          }
          printf("\n");
          
    }
    
    return 0;
}
