#include<cstdio>
#include<string>
#include<vector>
#include<cstring>
#include<cassert>
#include<queue>
#include<algorithm>
using namespace std;
#define CLS(a,b) memset(a,b,sizeof(a))
int tree[66000];
int n,steps,cases;
void update(int x,int s,int e,int ind,int v)
{
//	assert(s<=e);
	assert(x<66000);
	int m=(s+e)/2;
	tree[x]&=v;
	if(s==e)return;
	if(ind <=m)
		update(x<<1,s,m,ind,v);
	else
		update(1+(x<<1),m+1,e,ind,v);
}
int query(int x,int s,int e,int qs,int qe)
{
/*	assert(s>=0 && s<n);
	assert(qs>=0 && qs<n);
	assert(qe>=0 && qe<n);
	assert(e>=0 && e<n);
	assert(s<=e);
	assert(qs<=qe);*/
	assert(x<66000);
	int ret=-1;
	int m=(s+e)/2;
	if(qs==s && qe==e)
		return tree[x];
	if(qs<=m)
		ret&=query(x<<1,s,m,qs,min(m,qe));
	if(qe>m)
		ret&=query(1+(x<<1),m+1,e,max(qs,m+1),qe);
	return ret;
}
int getresult(int s,int e)
{
	int ret=-1;
	if(s<0)
		ret&=query(1,0,n-1,n+s,n-1);
	if(e>=n)
		ret&=query(1,0,n-1,0,e-n);
	ret&=query(1,0,n-1,max(s,0),min(e,n-1));
	return ret;
}
int main()
{
	int i,j,k;
#ifdef WIN32
	freopen("ANDROUND.in","r",stdin);
#endif
	scanf("%d",&cases);
	for(int z=0;z<cases;z++)
	{
		CLS(tree,-1);
		scanf("%d%d",&n,&steps);
		steps=min(steps,n/2);
		for(i=0;i<n;i++)
		{
			int x;
			scanf("%d",&x);
			update(1,0,n-1,i,x);
		}			
		for(i=0;i<n;i++)
		{
			int x= getresult(i-steps,i+steps);
			printf("%d",x);
			if(i!=n-1)
				printf(" ");
		}
		printf("\n");
	}
	return 0;
}