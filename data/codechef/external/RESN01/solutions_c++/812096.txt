#include<iostream>
#include<cstdlib>
#include<cmath>

using namespace std;

long int a[60003];
long int segment_tree[240012];

long int initialize(int node,int low,int high)
{
    if(low==high)
    {
        segment_tree[node]=a[low];
        //cout<<"segment_tree["<<node<<"] : "<<segment_tree[node]<<endl;
        return segment_tree[node];
    }

    long int t1,t2;
    int mid;
    mid=(low+high)/2;

    t1=initialize(2*node+1,low,mid);
    t2=initialize(2*node+2,mid+1,high);
    segment_tree[node]=(t1&t2);
    //cout<<"segment_tree["<<node<<"] : "<<segment_tree[node]<<endl;
    return segment_tree[node];
}

long int query(int node,int low,int high,int b,int e)
{
    if(low>e || high<b)
    {
        //cout<<"low>e || high<b"<<endl;
        return 4294967295;
    }

    if(b<=low && high<=e)
    {
        //cout<<"b<=low && high<=e"<<endl;
        //cout<<"return segment_tree["<<node<<"] : "<<segment_tree[node]<<endl;
        return segment_tree[node];
    }

    long int t1,t2;
    int mid;

    mid=(low+high)/2;

    t1=query(2*node+1,low,mid,b,e);
    t2=query(2*node+2,mid+1,high,b,e);
    //cout<<"return t1&t2 : "<<(t1&t2)<<endl;
    return (t1&t2);
}

int main()
{
    int t,n;
    long int k;

    scanf("%d",&t);

    while(t--)
    {
        scanf("%d %ld",&n,&k);

        for(int i=0;i<n;i++)
        {
            scanf("%ld",&a[i]);
            a[i+2*n]=a[i+n]=a[i];
        }

        //for(int i=0;i<3*n;i++)
        //    cout<<a[i]<<" ";
        //cout<<endl;

        initialize(0,0,3*n-1);
        //for(int i=0;i<12*n;i++)
        //    cout<<segment_tree[i]<<" ";
        //cout<<endl;


        k=(k>n/2)?n/2:k;
        //cout<<"k : "<<k<<endl;

        int N=2*n;
        for(int i=n;i<N;i++)
        {
            a[i]=query(0,0,3*n-1,i-k,i+k);
            //cout<<"a["<<i<<"] : "<<a[i]<<endl;
        }

        for(int i=n;i<N;i++)
            printf("%ld ",a[i]);

        printf("\n");
    }
    return 0;
}
