#include<iostream>
#include<cstdio>
#include<vector>
using namespace std;

int main() {
	int t, n, k, val;
	scanf("%d", &t);
	for (int i = 0; i < t; i++) {
		scanf("%d %d", &n, &k);
		if(k + k + 1 >= n) {
			scanf("%d", &val);
			int ans = val;
			for (int j = 1; j < n; j++) {
				scanf("%d", &val);
				ans = ans & val;
			}
			for (int j = 0; j < n; j++) {
				printf("%d ", ans);
			}
			printf("\n");
		}
		else {
			vector<vector<int> > vec;
			vector<int> tempvec;
			vec.push_back(tempvec);
			for (int j = 0; j < n; j++) {
				scanf("%d", &val);
				vec[0].push_back(val);
			}
			int m = n;
			int level = 0;

			while (m > 1) {
				//printf("%d\n", level);
				m = m/2;
				level++;
				vector<int> tempvec;
				vec.push_back(tempvec);
				for (int j = 0; j < m; j++) {
					vec[level].push_back(vec[level-1][j*2] & vec[level-1][j*2 +1]);
				//	printf("%d ",vec[level][sami]);
				}
				//printf("\n");
			}
			//printf("test\n");
			for (int j = 0; j < n; j++) {
				int a,b,a1,b1,a2,b2;
				bool wrap = false;
				a = (j - k + n) % n;
				b = (j + k) % n;
				a1 = a;
				b1 = b;
				if (a > b) {
					wrap = true;
					b1 = n-1;
					a2 = 0;
					b2 = b;
				}
				int range = b1 - a1 + 1;
				int start = a1;
				bool first = true;
				int ans;
				while (range > 0) {
					int lvl = 0;
					int rng = 1;
					int str = start;
					while ((rng <= (range/2)) && ((str % 2) == 0) && (lvl < level)) {
						lvl++;
						rng *= 2;
						str = str / 2;
					}
					val = vec[lvl][str];
					//printf("lvl: %d, str: %d , rng: %d, start: %d\n",lvl, str, rng, start);
					if (first) {
						ans = val;
						first = false;
					}
					else {
						ans = ans & val;
					}
					range = range - rng;
					start = start + rng;
				}
				if (wrap) {
					int range = b2 - a2 + 1;
					int start = a2;
					while (range > 0) {
						int lvl = 0;
						int rng = 1;
						int str = start;
						while ((rng <= (range/2)) && ((str % 2) == 0) && (lvl < level)) {
							lvl++;
							rng *= 2;
							str = str / 2;
						}
						val = vec[lvl][str];
						//printf("lvl: %d, str: %d , rng: %d, start: %d\n",lvl, str, rng, start);
						ans = ans & val;
						range = range - rng;
						start = start + rng;
					}
				}
				printf("%d ", ans);
			}
			printf("\n");
		}
		
	}
	return 0;
}