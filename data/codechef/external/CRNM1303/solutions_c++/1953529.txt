#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<sstream>
#include<bitset>
#include<cstdio>
#include<cmath>
#include<climits>
#include<ctime>
#include<string>
using namespace std;
typedef long long LL;
#define ss(n)       scanf("%s",n)
#define forr(x, b, e)    for (int x = (b); x <= (e); x++)
#define all(c)          (c).begin(), (c).end()
#define mp      make_pair
#define pb      push_back
#define iii     pair<pair<int,int>,int>
#define ii     pair<int,int>
#define MOD 1000000007
#define ones5 11111
#define ones6 111111
#define ones7 1111111
#define ones8 11111111
#define sz size()
#define bit(n) (1<<(n))
#define bit64(n) ((LL(1))<<(n))
#define X first
#define Y second
#define READ(x) freopen(x,"r",stdin);
#define WRITE(x) freopen(x,"w",stdout);
#define tr(container , it) for(typeof(container.begin()) it=container.begin() ; it!=container.end() ; it++)
#define ii     pair<int,int>
template<typename T> T gcd(T a, T b) { return (b == 0) ? abs(a) : gcd(b, a % b); }
template<typename T> inline T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<typename T> inline T mod(T a, T b) { return (a % b + b) % b; }
template<typename T> inline string tostring(const T& x) { ostringstream  os; os << x; return os.str(); }
inline int toint(const string& s) { istringstream  is(s); int x; is >> x; return x; }
inline double todouble(const string& s) { istringstream  is(s); double x; is >> x; return x; }
inline string tobinary( int a) { string s; while( a != 0 ) { s = (char)(a%2+'0') + s; a>>=1; } return s; }
int dx[] = {0, 1, 0, -1};int dx2[] = {0, 1, 0, -1,1,-1,1,-1};
int dy[] = {1, 0, -1, 0};int dy2[] = {1, 0, -1, 0,1,-1,-1,1};
long long modexp(int n, int p) {long long r = 1, b = n;while(p > 0) {if(p & 1) { r = r * b; if(r >= MOD) r %= MOD; }p >>= 1;b = b * b; if(b >= MOD) b %= MOD;}return r;}
template<class T> inline void s( T &n ) {n=0;T ch=getchar();T sign=1;while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getchar();}while( ch >= '0' && ch <= '9' )n=(n<<3)+(n<<1)+ ch-'0', ch=getchar();n=n*sign;}
/*Main Code Begins Now*/
#define MAXN ones7
#define EPS 3.0e-7
int N;
int gauss ( vector < vector<int> > a,vector<int> & ans ) {
	int n=a.size();
	int m=a[0].size()-1;
	vector < int > where ( m, - 1 ) ;
	for ( int col = 0 , row = 0 ; col < m && row < n ; ++ col ) {
		for ( int i = row ; i < n ; ++ i )
			if ( a [ i ] [ col ] ) {
				swap ( a [ i ] , a [ row ] ) ;
				break ;
			}
		if ( ! a [ row ] [ col ] )
			continue ;
		where [ col ] = row ;
 
		for ( int i = 0 ; i < n ; ++ i )
			if ( i != row && a [ i ] [ col ] )
			{
				for(int j=0;j<=m;j++)
				a[i][j]^=a[row][j];
			}
		++ row ;
	}
	ans. assign ( m, 0 ) ;
	for ( int i = 0 ; i < m ; ++ i )
		if ( where [ i ] != - 1 )
			ans [ i ] = a [ where [ i ] ] [ m ] ; 
	for ( int i = 0 ; i < n ; ++ i ) {
		int sum = 0 ;
		for ( int j = 0 ; j < m ; ++ j )
			sum ^= (ans [ j ]*a [ i ] [ j ]) ;
			//cout<<"i "<<i<<" "<<sum<<" "<<a[i][m]<<endl;
		if ( sum!=a[i][m] )
			return 0 ;
	}
 
	for ( int i = 0 ; i < m ; ++ i )
		if ( where [ i ] == - 1 )
			return INT_MAX ;
	return 1 ;
} 
vector<int> v[4444];
map<ii,int> m;
int Grid[40][40];
int main()
{
	#ifndef ONLINE_JUDGE
   // READ("input.txt");
    //WRITE("output.txt");
    #endif
	int a,b,n,M,K;
	int test;
	s(test);
	while(test--){
	m.clear();
	for(int i=0;i<4444;i++)v[i].clear();
    s(N);s(M);s(K);
    int c=0;
    for(int i=0;i<K;i++)
    {
    	s(n);
    	//int cmask=0;
    	for(int j=0;j<n;j++)
    	{
    		s(a);s(b);
    		///cmask|=(1<<(b*M)+a);
    		if(m[ii(a,b)]==0)
    		m[ii(a,b)]=++c;
    		v[m[ii(a,b)]].push_back(i);
    	}
    	//cout<<"cmask "<<cmask<<endl;
    	//v.push_back(cmask);
    }
    vector< vector<int>  > aa(c,vector<int>(K+1,0));
    //int c=0;
 
    for(int i=0;i<N;i++)
    {
    	for(int j=0;j<M;j++)
    	{
    		s(Grid[i][j]);
    		
    	}
    	
    }
    
    for(int i=0;i<N;i++)
    {
    	for(int j=0;j<M;j++)
    	{
    		if(m[ii(i,j)])
    		{
    			for(int k=0;k<v[m[ii(i,j)]].size();k++)
    			aa[m[ii(i,j)]-1][v[m[ii(i,j)]][k]]=1;
    		}
    	}
    }
    int f=1;
    for(int i=0;i<N;i++)
    {
    	for(int j=0;j<M;j++)
    	{
    		if(Grid[i][j])
    		{
    			//cout<<m[ii(i,j)]<<endl;
    			if(m[ii(i,j)]>=1)
    		  aa[m[ii(i,j)]-1][K]=1;
			  else
			  f=0;	
    		}
    		
    	}
    }
   /* for(int i=0;i<aa.size();i++)
    {
    	for(int j=0;j<aa[i].size();j++)
    	cout<<aa[i][j]<<" ";
    	cout<<endl;
    }*/
    vector<int> ans;
    if(f)
    f=gauss(aa,ans);
    if(f)
    printf("Yes\n");
    else
    printf("No\n");
}
    
}