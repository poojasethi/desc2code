#include<bits/stdc++.h>
using namespace std;
typedef pair<int,int> p;
#define getcx getchar_unlocked
inline void inp( int &n )//fast input function
{
   n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   n=n*sign;
}
int ans[100005],n,u;
p arr[200005];
void update2(int st,int ct)
{
    int i,x;
    int a=arr[st].first;
    for(i=0;i<ct;i++,st++)
    {
        int b=arr[st].second;
        for(x=0;a*x+b<=n;x++)
        {
            ans[a*x+b]++;
        }
    }
}
void update1(int st,int ct)
{
    int i,j;
    int c[n+1];
    int d[n+1];
    int a=arr[st].first;
    memset(c,0,sizeof(c));
    memset(d,0,sizeof(d));
    for(i=st;i<st+ct;i++)
    {
        c[arr[i].second]++;
    }
    for(i=1;i<=a;i++)
        d[i]=c[i];
    for(;i<=n;i++)
        d[i]=c[i]+d[i-a];
    for(i=1;i<=n;i++)
        ans[i]+=d[i];
}
int main()
{
    ios_base::sync_with_stdio(false);
    int i,j,k;
    inp(n);inp(u);
    for(i=0;i<u;i++)
    {
    inp(arr[i].first);inp(arr[i].second);
    }
    sort(arr,arr+u);
    i=0;
    int sq=int(sqrt(n));
    while(i<u)
    {
        int count=1;
        while(arr[i].first==arr[i+1].first)
        {
            count++;
            i++;
        }
        int tempa=arr[i].first;
        if(tempa<=sq)
            update1(i-count+1,count);
        else
            update2(i-count+1,count);
        i++;
    }
    for(i=1;i<=n;i++)
        cout<<ans[i]<<" ";
}