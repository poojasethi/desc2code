#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;

const int mod=(int)1e9+7,maxn=100005,ln=17;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
//#define getcx getchar_unlocked
#define getcx getchar
/*inline void S(int& n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}*/
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define modulo(x,y,z) (x+y)<0?x+y+z:((x+y>=z)?x+y-z:x+y)
#define Debug(x) cout << #x << "=" << x << endl
#define Debugarr(x,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,n) cout<<ij<<". "<<x[ij]<<endl; cout<<endl
#define Debugarr2(x,m,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,m) {F(jk,0,n) cout<<x[ij][jk]<<" "; cout<<endl;} cout<<endl
#define pii pair<LL,int>
#define Fi first
#define Se second
#define chk(x,n) (x[n>>5]&(1<<(n&31))) //unsigned int
#define set(x,n) (x[n>>5]|=(1<<(n&31)))//32 bit
const int shift=30,etf=mod-1;

const LL inf=(LL)1e18+1;

const double PI=(double)3.141592653589793238,EPSILON=1e-10;

int a[maxn],b[maxn],c[maxn];

vector<int> v[maxn],vec;

int main()
{
    int n,q;
    cin>>n>>q;
    while(q--)
    {
        int x,y;
        S(x);
        S(y);
        v[x].push_back(y);
    }
    F(i,1,n+1)
    {
        F(j,0,v[i].size())
        {
            b[v[i][j]]++;
            if(c[v[i][j]%i]==0)
            {
                c[v[i][j]%i]=1;
                vec.push_back(v[i][j]%i);
            }
        }

        F(j,0,vec.size())
        {
            int num=0;
            int k=vec[j];
            while(k<=n)
            {
                num+=b[k];
                a[k]+=num;
                k+=i;
            }
        }

        F(j,0,v[i].size())
        {
            b[v[i][j]]=0;
        }
        F(j,0,vec.size())
        {
            c[vec[j]]=0;
        }
        vec.clear();
    }
    F(i,1,n+1)
    {
        Ps(a[i]);
    }
    cout<<endl;
    return 0;
}
