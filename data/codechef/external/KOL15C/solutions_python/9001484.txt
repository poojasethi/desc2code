/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <assert.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 128

const int MAGIC = 256;
const int N = 200005;

using namespace std;

int n,U;
vector<int>queries[N];
int ans[N];
int toadd[N];

int main(){
//	freopen("path2.in","r",stdin);
//	freopen("path2.out","w",stdout);
	//freopen("F:/in.txt","r",stdin);
	//freopen("F:/output.txt","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	cin>>n>>U;
	for (int i=1;i<=U;i++)
	{
		int a,b;
		cin>>a>>b;
//		a=rand()%n+1;
//		b=rand()%n+1;
		if (a>MAGIC)
		{
			for (int j=b;j<=n;j+=a)
				ans[j]++;
			continue;
		}
		queries[a].push_back(b);
	}
	
	for (int i=1;i<=MAGIC;i++)
	{
		if (queries[i].size()==0)
			continue;
		
		for (int j=0;j<i;j++)
			toadd[j]=0;
		sort(queries[i].begin(),queries[i].end());
		int ptr=0;
		for (int j=1;j<=n;j++)
		{
			while (ptr<queries[i].size()&&queries[i][ptr]==j)
			{
				++ptr;
				toadd[j%i]++;
			}
			ans[j]+=toadd[j%i];
		}
	}
	
	for (int i=1;i<=n;i++)
	{
		if (i>1)
			cout<<" ";
		cout<<ans[i];
	}
	cout<<endl;
	
	return 0;
}