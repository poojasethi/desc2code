import java.util.*;
import java.io.*;

public class Main{
	public static void main (String[] args){
		InputReader in = new InputReader(System.in);
		OutputWriter out = new OutputWriter(System.out);
		int t, k;
		long P, Q, N;
		String S;
		t = in.nextInt();
		int[] dict;
		while(t-- > 0){
			S = in.next();
			P = in.nextLong();
			Q = in.nextLong();
			dict = new int[26];
			k = 0;
			for(int i=0;i<S.length();i++){
				if(dict[S.charAt(i) - 'a'] == 0) k++;
				dict[S.charAt(i) - 'a'] += 1;
			}
			int j = 0;
			long[] dict1 = new long[k];
			int[] char1 = new int[k];
			for(int i=0;j<k;i++){
				if(dict[i] > 0){
					dict1[j] = dict[i];
					char1[j] = i;
					j++;
				}
			}
			for(int i=1;i<k;i++) dict1[i] += dict1[i-1];
			while(Q-- > 0){
				N = in.nextLong();
				long q, r;
				r = N%P;
				q = N/P;
				if(r > 0) q++;
				int ans = Arrays.binarySearch(dict1, q);
				if(ans == -k-1){
					out.println(-1);
				}else{
					if(ans < 0) ans = -ans-1;
					out.println((char) (char1[ans]+'a'));
				}
			}
		}
		out.flush();
		out.close();
	}
}

class InputReader {

		private InputStream stream;
		private byte[] buf = new byte[1024];
		private int curChar;
		private int numChars;
		private SpaceCharFilter filter;

		public InputReader(InputStream stream) {
			this.stream = stream;
		}

		public int read() {
			if (numChars == -1)
				throw new InputMismatchException();
			if (curChar >= numChars) {
				curChar = 0;
				try {
					numChars = stream.read(buf);
				} catch (IOException e) {
					throw new InputMismatchException();
				}
				if (numChars <= 0)
					return -1;
			}
			return buf[curChar++];
		}

		public int nextInt() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = read();
			}
			int res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = read();
			} while (!isSpaceChar(c));
			return res * sgn;
		}

		public long nextLong() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			int sgn = 1;
			if (c == '-') {
				sgn = -1;
				c = read();
			}
			long res = 0;
			do {
				if (c < '0' || c > '9')
					throw new InputMismatchException();
				res *= 10;
				res += c - '0';
				c = read();
			} while (!isSpaceChar(c));
			return res * sgn;
		}

		public String readString() {
			int c = read();
			while (isSpaceChar(c))
				c = read();
			StringBuilder res = new StringBuilder();
			do {
				res.appendCodePoint(c);
				c = read();
			} while (!isSpaceChar(c));
			return res.toString();
		}

		public boolean isSpaceChar(int c) {
			if (filter != null)
				return filter.isSpaceChar(c);
			return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
		}

		public String next() {
			return readString();
		}

		public interface SpaceCharFilter {
			public boolean isSpaceChar(int ch);
		}
	}

class OutputWriter {
		private final PrintWriter writer;

		public OutputWriter(OutputStream outputStream) {
			writer = new PrintWriter(new BufferedWriter(new OutputStreamWriter(outputStream)));
		}

		public OutputWriter(Writer writer) {
			this.writer = new PrintWriter(writer);
		}

		public void print(Object...objects) {
			for (int i = 0; i < objects.length; i++) {
				if (i != 0)
					writer.print(' ');
				writer.print(objects[i]);
			}
		}

		public void println(Object...objects) {
			print(objects);
			writer.println();
		}

		public void close() {
			writer.close();
		}

		public void flush() {
			writer.flush();
		}

		}
