#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <iterator>
#include <numeric>
#include <utility>
using namespace std;

template< class T > T _abs(T n) { return (n < 0 ? -n : n); }
template< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }
template< class T > T _min(T a, T b) { return (a < b ? a : b); }
template< class T > T sq(T x) { return x * x; }
template< class T > T gcd(T a, T b) { return (b != 0 ? gcd<T>(b, a%b) : a); }
template< class T > T lcm(T a, T b) { return (a / gcd<T>(a, b) * b); }
template< class T > bool inside(T a, T b, T c) { return a<=b && b<=c; }
template< class T > void setmax(T &a, T b) { if(a < b) a = b; }
template< class T > void setmin(T &a, T b) { if(b < a) a = b; }

#define ALL(c) c.begin(), c.end()
#define PB(x) push_back(x)
#define UB(s, e, x) upper_bound(s, e, x)
#define LB(s, e, x) lower_bound(s, e, x)
#define REV(s, e) reverse(s, e);
#define SZ(c) c.size()
#define SET(p) memset(p, -1, sizeof(p))
#define CLR(p) memset(p, 0, sizeof(p))
#define MEM(p, v) memset(p, v, sizeof(p))
#define CPY(d, s) memcpy(d, s, sizeof(s))
#define ll long long
#define ff first
#define ss second
#define DEBUG if(0)

#define si(x) scanf("%d",&x)
#define pi(x) printf("%d\n",x)
#define siz 100100
struct date
{
       int m,d,y;
       double r;
       };
       bool comp1(date x, date y)
       {
            return x.r>y.r;
            }
       bool comp2(date x, date y)
       {
            if(x.y==y.y)
            {
               if(x.m==y.m)         
            return x.d<y.d;
            else
            return x.m<y.m;
            }
            else
            return x.y<y.y;
            }
            
int main()
{
    int i=0,m,d,y;
    char c,ch,str[1000];
    date p[100010],q[100010];
    double a;
    while( 1)
    {
           scanf("%lf",&a);
           if(a==-1.0l)
           break;
         // scanf("%d%c%d%c%d",&m,&c,&d,&ch,&y);
         scanf("%s",str);
         p[i].r=a;
         p[i].m=(str[0]-'0')*10+(str[1]-'0');
          p[i].d=(str[3]-'0')*10+(str[4]-'0');
          p[i].y=(str[6]-'0')*10+(str[7]-'0');
         q[i].r=a;
         q[i].m=(str[0]-'0')*10+(str[1]-'0');
          q[i].d=(str[3]-'0')*10+(str[4]-'0');
          q[i].y=(str[6]-'0')*10+(str[7]-'0');
          
          i++;
          
          
          }
          
          int n=i;
         // for(i=0;i<n;i++)
             //printf("%d %d %d %d %d\n",p[i].r,p[i].m,p[i].d,p[i].y);
       sort(p,p+n,comp1);
       cout<<"Money:\n";
       
         for(i=0;i<n;i++)
          {cout<<"["<<p[i].r<<", ";  printf("%d%d/%d%d/%d%d]\n",p[i].m/10,p[i].m%10,p[i].d/10,p[i].d%10,p[i].y/10,p[i].y%10);
          }
        sort(q,q+n,comp2);
       cout<<"Date:\n";
         for(i=0;i<n;i++)
           {cout<<"["<<q[i].r<<", ";  printf("%d%d/%d%d/%d%d]\n",q[i].m/10,q[i].m%10,q[i].d/10,q[i].d%10,q[i].y/10,q[i].y%10);
           }
         // cin>>i;        
          return 0;
          }          
