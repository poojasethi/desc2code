#include <bits/stdc++.h>

typedef long long ll;
using namespace std;
#define NMAX 2751001
/*
set<int> A[NMAX];

void Union(set<int> &A,set<int> B)
{
    for(typeof(B.begin()) it=B.begin();it!=B.end();it++)
    {
        A.insert(*it);
    }
}

set<int> Add(set<int> A,set<int> B)
{
    set<int> C;
    for(typeof(A.begin()) it1=A.begin();it1!=A.end();it1++)
    {
        for(typeof(B.begin()) it2=B.begin();it2!=B.end();it2++)
        {
            C.insert( (*it1)+(*it2) );
        }
    }
    return C;
}

set<int> Mul(set<int> A,int B)
{
    set<int> C;
    for(typeof(A.begin()) it1=A.begin();it1!=A.end();it1++)
    {
        C.insert( (*it1)*B );
    }
    return C;
}
*/

ll ModPow(ll a,ll x,ll p)
{
    ll res=1;
    while(x>0)
    {
        if(x%2!=0)
            res=(res*a)%p;
        a=(a*a)%p;
        x/=2;
    }
    return (res%p);
}




bool p[NMAX];
vector<int> P;
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int i,j,q,k;
    fill(p,p+NMAX,true);
    p[0]=p[1]=false;
    for(i=2;i*i<NMAX;i++)
    {
        if(p[i])
        {
            for(j=i*i;j<NMAX;j+=i)
            {
                p[j]=false;
            }
        }
    }
    for(i=2;i<NMAX;i++)
    {
        if(p[i])
            P.push_back(i);
    }
    cin>>q;
    while(q--)
    {
        cin>>k;
        --k;
        cout<<ModPow(P[k],P[k],1000000007)<<'\n';
    }
    P.clear();
    /*A[1].insert(0);
    for(i=2;i<NMAX;i++)
    {
        if(p[i])
        {
            A[i].insert(1);
        }
        else
        {
            for(j=2;j*j<=i;j++)
            {
                if(i%j==0)
                {
                    Union(A[i],Add( Mul(A[j],i/j),Mul(A[i/j],j) ) );
                }
            }
        }
        if((int)A[i].size()==1)
        {
            if(*A[i].begin()==i)
            {
                cout<<i<<' ';
            }
        }
    }*/
    
    return 0;
}