//range min query for 2-d array
#include<bits/stdc++.h>
using namespace std;

int arr[1001][1001]={0},maxQuery[1001][1001][11][11]={0},temp[1001][1001]={0},sum[1001][1001]={0},ans=0;

int main(){
	int n,m,k,l,q,a,b;
	scanf("%d %d",&n,&m);
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			scanf("%d",&arr[i][j]);
			temp[i+1][j+1]=temp[i+1][j]+arr[i][j];
			sum[i+1][j+1]=sum[i][j+1]+temp[i+1][j+1];
		}
	}
	for(int i=n-1;i>=0;i--){
		for(int j=m-1;j>=0;j--){
			k=log2(n-i)+1; l=log2(m-j)+1;
			for(int x=0;x<k;x++){
				for(int y=0;y<l;y++){
					if(y==0){
						if(x==0) maxQuery[i][j][x][y]=arr[i][j];
						else maxQuery[i][j][x][y]=max(maxQuery[i][j][x-1][y],maxQuery[i+(int)(1<<(x-1))][j][x-1][y]);
					}
					else{
						maxQuery[i][j][x][y]=max(maxQuery[i][j][x][y-1],maxQuery[i][j+(int)(1<<(y-1))][x][y-1]);
					}
				}
			}
		}
	}
	int c,d,e,f,maxi,pl,pk;
	scanf("%d",&q);
	while(q--){
		scanf("%d %d",&a,&b);
		k=log2(a); l=log2(b);
		pk=a-(1<<k); pl=b-(1<<l);
		for(int i=0;i<=n-a;i++){
			for(int j=0;j<=m-b;j++){
				c=maxQuery[i][j][k][l];
				d=maxQuery[i][j+pl][k][l];
				e=maxQuery[i+pk][j][k][l];
				f=maxQuery[i+pk][j+pl][k][l];
				//cout<<c<<" "<<d<<" "<<e<<" "<<f<<"  ";
				//cout<<(a*b*(max(max(c,d),max(e,f))))<<" ";
				//cout<<(sum[i+a][j+b]+sum[i][j]-sum[i][j+b]-sum[i+a][j])<<" ";
				maxi=(a*b*(max(max(c,d),max(e,f))))-(sum[i+a][j+b]+sum[i][j]-sum[i][j+b]-sum[i+a][j]);
				//cout<<maxi<<endl;
				if(i==0 && j==0) ans=maxi;
				if(maxi<ans) ans=maxi;
			}
		}
		printf("%d\n",ans);
	}
	return 0;
}