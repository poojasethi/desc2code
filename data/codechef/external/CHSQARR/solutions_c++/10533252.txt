#include<bits/stdc++.h>
using namespace std;
int arr[1000][1000],sum[1010][1010];
int main()
{
    ios_base::sync_with_stdio(0);
    int n,m,i,j;
    cin>>n;cin>>m;
    for(i=0;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
            cin>>arr[i][j];
            if(j==0)
                sum[i+1][j+1]=arr[i][j];
            else
                sum[i+1][j+1]=sum[i+1][j]+arr[i][j];
        }
    }
    for(i=1;i<n;i++)
    {
        for(j=0;j<m;j++)
        {
                sum[i+1][j+1]=sum[i][j+1]+sum[i+1][j+1];
        }
    }
  /*  for(i=1;i<=n;i++)
    {
        for(j=1;j<=m;j++)
        {
                cout<<sum[i][j]<<" ";
        }
        cout<<"\n";
    }
*/
    int q,ne;
    cin>>q;
    for(ne=0;ne<q;ne++)
    {
        int a,b;
        cin>>a>>b;
        int maxcol[n][m-b+1],max[n-a+1][m-b+1];
        deque<int> q,q1;
        for(i=0;i<n;i++)
        {
            q.clear();
            for(j=0;j<b;j++)
            {
                while((!q.empty())&&arr[i][j]>arr[i][q.back()])
                    q.pop_back();
                q.push_back(j);
          //      cout<<j;
            }
            for(;j<m;j++)
            {
                maxcol[i][j-b]=arr[i][q.front()];
                //cout<<maxcol[i][j-b];
                while((!q.empty())&&q.front()<=j-b)
                    q.pop_front();
                while((!q.empty())&&arr[i][j]>arr[i][q.back()])
                    q.pop_back();
                q.push_back(j);
            }
            maxcol[i][j-b]=arr[i][q.front()];
        }
     /*   for(i=0;i<n;i++)
        {
            for(j=0;j<=m-b;j++)
            {
                cout<<maxcol[i][j]<<" ";
            }
            cout<<"\n";
        }*/
        for(j=0;j<=m-b;j++)
        {
            q1.clear();
            for(i=0;i<a;i++)
            {
                while((!q1.empty())&&maxcol[i][j]>maxcol[q1.back()][j])
                    q1.pop_back();
                q1.push_back(i);
            }
            for(;i<n;i++)
            {
                max[i-a][j]=maxcol[q1.front()][j];
                while((!q1.empty())&&q1.front()<=i-a)
                    q1.pop_front();
                while((!q1.empty())&&maxcol[i][j]>maxcol[q1.back()][j])
                    q1.pop_back();
                q1.push_back(i);
            }
            max[i-a][j]=maxcol[q1.front()][j];
        }
        int min=1000000001LL;
        for(i=0;i<=n-a;i++)
        {
            for(j=0;j<=m-b;j++)
            {
               int val=max[i][j]*a*b-sum[i][j]-sum[i+a][j+b]+sum[i+a][j]+sum[i][j+b];
       //        cout<<max[i][j]<<" "<<sum[i][j]<<" "<<sum[i+a][j+b]<<" "<<sum[i+a][j]<<" "<<sum[i][j+b]<<"    ";
                if(val<min)
                {
                    min=val;
                }
            }
         //   cout<<"\n";
        }
        cout<<min<<"\n";
    }
}
