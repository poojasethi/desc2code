#include<bits/stdc++.h>
using namespace std;
long long su[1005][1005],matrix[1005][1005];
long long dp[1005][1005],dp2[1005][1005];
long long n,m;


void summ()
{	for(int i=0;i<=n;i++)
		{	for(int j=0;j<=m;j++)su[i][j]=0;
		}
	for(int i=1;i<=n;i++)
	{	for(int j=1;j<=m;j++)su[i][j]=su[i][j-1]+matrix[i][j];
	}
	for(int i=1;i<=n;i++)
	{	for(int j=1;j<=m;j++)su[i][j]+=su[i-1][j];
	}

}
long long  calsu(int x1,int y1,int x2,int y2)
{	return (su[x2][y2]-su[x1-1][y2]-su[x2][y1-1]+su[x1-1][y1-1]);
}
void sol(int a,int b)
{	
		for(int i=1;i<=n;i++)
		{	
				deque<int> q(b);
				for(int j=1;j<=b;j++)
				{	while((!q.empty())&&matrix[i][q.back()]<=matrix[i][j])q.pop_back();
					q.push_back(j);
				}
					

				for(int j=b+1;j<=m;j++)
				{	dp[i][j-1]=matrix[i][q.front()];
					while((!q.empty())&&j-b>=q.front())q.pop_front();
					while((!q.empty())&&matrix[i][q.back()]<=matrix[i][j])q.pop_back();
					q.push_back(j);
				}
				dp[i][m]=matrix[i][q.front()];
		}
	
		for(int i=b;i<=m;i++)
		{	deque<int> q(a);
			for(int j=1;j<=a;j++)
				{	while((!q.empty())&&dp[q.back()][i]<=dp[j][i])q.pop_back();
					q.push_back(j);
				}
			
			for(int  j=a+1;j<=n;j++)
			{	dp2[j-1][i]=dp[q.front()][i];
				while((!q.empty())&&j-a>=q.front())q.pop_front();
				while((!q.empty())&&dp[q.back()][i]<=dp[j][i])q.pop_back();
				q.push_back(j);
			}
			dp2[n][i]=dp[q.front()][i];
		}
}
int main()
{	//int n,m;
	cin>>n>>m;
	//ios_base::sync_with_stdio(0);

	for(int i=1;i<=n;i++)
	{	for(int j=1;j<=m;j++)cin>>matrix[i][j];

	}
	summ();
	int q;
	cin>>q;
	while(q--)
	{	int l,b;
		cin>>l>>b;
		sol(l,b);
		long long  ans=LONG_MAX;
		for(int i=l;i<=n;i++)
		{	for(int j=b;j<=m;j++)
			{	ans=min(ans,l*b*dp2[i][j]-calsu(i-l+1,j-b+1,i,j));


			}
		}
		cout<<ans<<"\n";
	}
	return 0;
}