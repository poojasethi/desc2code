#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cmath>
#include <climits>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;

#define REP(i,n)      FOR(i,0,n)
#define FOR(i,a,b)    for(int i = a; i < b; i++)
#define ROF(i,a,b)    for(int i=a;i>b;i--)
#define GI 		      ({int t;scanf("%d",&t);t;})
#define GL 		      ({LL t;scanf("%lld",&t);t;})
#define GD 		      ({double t;scanf("%lf",&t);t;})
#define pb 	          push_back
#define mp 	          make_pair
#define MOD 	      1000000007
#define INF	          (int)1e9
#define EPS	          1e-9
#define TR(a,it)      for (typeof((a).begin()) it = (a).begin(); it != (a).end(); ++it)

#define EPSILON 8.8e-12

struct point
{
    double x;
    double y;
};

double signed_triangle_area(point a,point b,point c)
{
       return (a.x * (b.y - c.y) + b.x * (c.y - a.y) + c.x * (a.y - b.y))/2.0;
}

double ccw(point a, point b, point c)
{
    /// ab cross ac
    return signed_triangle_area(a, b, c);
    //return ((b.x - a.x) * (c.y - a.y) - (c.x - a.x) * (b.y - a.y));
}

int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	int T, t = 0;
	scanf("%d", &T);
	while (T--) {
	    point p[4], inter;
		for (int i=0; i<4; i++)
            scanf("%lf %lf", &p[i].x, &p[i].y);

        /// checking if 2 lines are parallel or same (i.e. same slope)
            //printf("a = %d, b = %d, c = %d, d = %d\n", a, b, c, d);
            if((ccw(p[0], p[1], p[3]) * ccw(p[0], p[1], p[2]) < 0) &&
               (ccw(p[3], p[2], p[1]) * ccw(p[3], p[2], p[0])) < 0)
                printf("yes\n");
            else
                printf("no\n");
	}
	return 0;
}
