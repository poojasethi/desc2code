/*-->>Light Cavalry<<--*/

//Imp header files
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <set>
#include <vector>
#include <stack>
#include <queue>
#include <sstream>
#include <map>
#include <list>
#include <deque>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iomanip>
#include <sstream>
#include <ctime>
#include <cassert>
#include <climits>
using namespace std;

//defined I/O
#define si(n) scanf("%d",&n)
#define sli(n) scanf("%ld",&n)
#define slli(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define GetLine(n) getline(cin,n);
#define ss(n) scanf("%s",n)
#define pi(n) printf("%d",n)
#define pli(n) printf("%ld",n)
#define plli(n) printf("%lld",n)
#define pf(n) printf("%lf",n)
#define ps(n) printf("%s",n)
#define newLine printf("\n")
#define space printf(" ")
#define SWAP(a,b,t) t=a,a=b,b=t
#define Loop(i,a,n) for(__typeof(n) i(a); i<n; i++)
#define ULL unsigned long long int
#define LL long long int 

#define MOD 1000000007
//Imp functions
int gcd(int a, int b){if(b == 0)return a;else return gcd(b,a % b);}




int main()
{
	
	int n;
	si(n);
	
	string s[n];
	
	Loop(i,0,n)
	{
		cin>>s[i];
		
	}
	int  m=s[0].length();
	
	int a[n][m];
	
	Loop(i,0,n)
	{
		Loop(j,0,m)
		{
			
			
			a[i][j]=9999;
			
			
//cout<<a[i][j]<<" ";
		}
		//cout<<endl;
		
	}
	
	a[0][0]=1;

	int x,y,z;
	Loop(i,0,n)
	{
		Loop(j,0,m)
		{
			if(s[i][j]=='0')
			{
			int mi=9999;
			
			
			if(i-1>=0 && j-1>=0)
			mi=min(mi,a[i-1][j-1]+1);
			
			if(i-1>=0 && j+1<m)
			mi=min(mi,a[i-1][j+1]+1);
			
			if(i+1<n && j-1>=0)
			mi=min(mi,a[i+1][j-1]+1);
			
			if(i+1<n && j+1<m)
			mi=min(mi,a[i+1][j+1]+1);
			
			if(j-1>=0)
			mi=min(mi,a[i][j-1]+1);
			
			
			if(i-1>=0)
			mi=min(mi,a[i-1][j]+1);
			
			
			if(j+1<m)
			mi=min(mi,a[i][j+1]+1);
			
			if(i+1<n)
			mi=min(mi,a[i+1][j]+1);
			
			
			
			
			
			
			if(mi!=9999)
			a[i][j]=mi;
			
			}
			
			//cout<<a[i][j]<<" ";
			
		
		}
		//cout<<endl;
		
	}
	
	cout<<a[n-1][m-1]<<endl;

	
	
	return 0;
}




