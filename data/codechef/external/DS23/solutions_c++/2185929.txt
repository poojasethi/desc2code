#include <cstdio>
#include <list>
#include <cstring>
using namespace std;

int maze[81][81];
int visited[81][81];
int level[81][81];
int m, n;
char buf[82];

typedef struct node {
	int i,j;
} node;

bool valid(int i, int j){
	return i>=0 && j>=0 && i<m && j<n;
}

int main(){
	scanf("%d", &m);
	scanf("%s", buf);
	n = strlen(buf);
	for (int i=0; i<n; i++){
		maze[0][i] = buf[i] - '0';
	}
	for(int i=1; i<m; i++){
		scanf("%s", buf);
		for (int j=0; j<n; j++){
			maze[i][j] = buf[j] - '0';
		}
	}

	//bfs
	list<node> q;
	node s;
	s.i=s.j=0;
	q.push_back(s);
	visited[0][0]=1;
	level[0][0]=0;
	while (!q.empty()){
		node e = q.front();
		q.pop_front();
		if (e.i==m && e.j==n){
			break;
		}
		for (int i=e.i-1; i<=e.i+1; i++){
			for (int j=e.j-1; j<=e.j+1; j++){
				if (!(i==e.i && j==e.j) && valid(i,j) && !visited[i][j] && maze[i][j]==0){
					node p;
					p.i=i;
					p.j=j;
					q.push_back(p);
					level[i][j]=level[e.i][e.j]+1;
					visited[i][j]=1;
				}
			}
		}
	}
	printf("%d", level[m-1][n-1]+1);
	return 0;
}