#include<iostream>
#include<queue>
#include<vector>
#include<string>
#include<string.h>
#include<cstdio>
using namespace std;
int a[85][85];
bool visited[85][85];
char str[85][85];
int n,l,i;
int dx[]={0,0,1,-1,1,-1,1,-1};
int dy[]={1,-1,0,0,1,-1,-1,1};
pair<int,int>ravi;
bool safe(int i,int j)
{
     if(i>=0 && i<n && j>=0 && j<l && visited[i][j]==false && str[i][j]=='0')return true;
     return false;
}
void bfs(int x,int y)
{
     queue<pair<int,int> >mani;
     mani.push(make_pair(x,y));
     visited[x][y]=true;
     while(!mani.empty())
     {
                      ravi=mani.front();
                      mani.pop();
                      for(i=0;i<8;i++)
                      {
                      if(safe(ravi.first+dx[i],ravi.second+dy[i]))
                      {
                                      mani.push(make_pair(ravi.first+dx[i],ravi.second+dy[i]));
                                      visited[ravi.first+dx[i]][ravi.second+dy[i]]=true;
                                      a[ravi.first+dx[i]][ravi.second+dy[i]]=a[ravi.first][ravi.second]+1;
                      }
                      }
     }
}
int main()
{
    cin>>n;
    for(i=0;i<n;i++)scanf("%s",str[i]);
    l=strlen(str[0]);
    memset(a,0,sizeof(a));
    memset(visited,false,sizeof(visited));
    a[0][0]=1;
    bfs(0,0);
    cout<<a[n-1][l-1];
}
 
