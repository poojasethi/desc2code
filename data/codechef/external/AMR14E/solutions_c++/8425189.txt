#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define irr acos(-1.0)
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define N 40000+5
bool chk[N];
vector<int> prim;
int range_prim[200005];
void s()
{
    int i,j;
    for(i=2;i<N;i++)
    {
        if(chk[i]==true)
            continue;
        prim.pb(i);
        for(j=2*i;j<=N;j+=i)
            chk[j]=1;
    }
}
void prime_btn_range(int Start,int End)
{
    int i,pr_no,near;
    mem(range_prim,1);
    for(i=0;prim[i]*prim[i]<End;++i)
    {
    pr_no=prim[i];
    near=(Start/pr_no)*pr_no;
    if(near<Start )
    	near=near+pr_no;
    if(near==pr_no)
    	near=near+pr_no;
    for(;near<=End;near=near+pr_no)
        range_prim[near-Start]=0;
    }
}
int main()
{
    int t;
    scanf("%d",&t);
    s();
    while(t--)
    {
        int n,m,ans=0,i,j;
        scanf("%d%d",&n,&m);
        prime_btn_range(n,m);
        for(i=n;i<=m;i++)
        {
            if(range_prim[i-n])
                ans++;
            else
            {
                int k=i;
                for(j=0;j<prim.size();j++)
                {
                    int c=0;
                    while(k%prim[j]==0)
                    {
                        k/=prim[j];
                        c++;
                    }
                    if(c!=0)
                    {
                        if(k!=1)
                        break;
                        else if(k==1)
                        {
                            if(chk[c+1]==0)
                            {
                                ans++;
                                break;
                            }
                            else
                            {
                                break;
                            }
                        }
                    }
                }
            }
        }
        printf("%d\n",ans);
    }

    return 0;
}
