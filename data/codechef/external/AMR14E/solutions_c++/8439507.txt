#include <bits/stdc++.h>
#define fr(i,a,b) for(int i=a;i<b;++i)
#define rf(i,a,b) for(ll  i=a;i>=b;--i)
#define pyes cout<<"YES"<<endl
#define pno cout<<"NO"<<endl
#define ff first
#define ss second
#define pb push_back
#define re return
#define ioS ios_base::sync_with_stdio(0);cin.tie(0);
#define coutd(a,b) cout<<a<<" "<<b<<endl
#define coutt(a,b,c)cout<<a<<" "<<b<<" "<<c<<endl;
#define coutq(a,b,c,d)cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
#define cina(a,n) fr(i,0,n)cin>>a[i]
#define coutar(a,n)  fr(i,0,n)cout<<a[i]<<" ";cout<<endl;
#define couts(a) cout<<a<<endl
#define MAXN 1001000
#define MOD  1000000007
using namespace std;

typedef long long int ll;
typedef long double ld;
typedef pair<int,int>pi;
multiset<int>mst;
set<int>st;
set<int>::iterator it;
vector<ll>g[MAXN];
map<ll,ll>mp[MAXN],m1[MAXN],m2[MAXN];

bool isPrim[100010];
int arr[100010];
vector <ll > sol,primes;

void sieveprecal()
{
	ll i,j;
  for(i=2; i < 100010;i++)
    {
		if(arr[i] == 0)
        {  //couts(i);
			primes.pb(i);
            isPrim[i]=1;
            j=i;
			while(j <100010){arr[j] = 1;j+=i;}

		}
	}
}

int sieved[200110];
void sieve(ll a ,ll b)
{
	ll i,j,k,flag,st=a;

     memset(sieved,-1,sizeof sieved);

for(i =0;i < primes.size();i++)
    {
           j = a/primes[i];
          if(j < 2)j = 2;

     while(1)
       {
                     int prod = j*primes[i];
				     if(prod > b)break;
                     if(prod >= a)sieved[prod-a] = 1;
				     j++;
        }
    }
		//for(i= 0;i <= b-a;i++)if(sieved[i] == -1)//its a prime //cout << i + a << endl;
}



int main()
{
    ioS;
    int t,n,m,x;
    cin>>t;
    sieveprecal();

   // fr(i,0,primes.size()){couts(primes[i]);}

    while(t--)
    {
       ll a,b,ans=0;
       cin>>a>>b;
       sieve(a,b);
       fr(i,0,b-a+1)
       {

           if(sieved[i]==-1  && (i+a)!=1)ans++;
           else if((i+a)!=1)
           {
               ll j=sqrt(double(i+a));
               if(j*j==(i+a))
               {
                   ll fct=0;
                   fr(z,2,j+1){if((i+a)%z==0)fct++;}
                   fct=2*fct+1;
                   if(fct<100010 && isPrim[fct]==1)ans++;
               }

           }
       }
           couts(ans);
    }
}


