#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<math.h>
#include<string.h>

using namespace std;

bool prime[1000005],prime2[200005];
int a, b, ans;
void sieve();
void calculate();
bool isprime(int);
void prime_range();

int main()
{
	int t;

	scanf("%d", &t);

	memset(prime, true, sizeof(prime));

	sieve();

	while (t--)
	{
		scanf("%d%d", &a, &b);

		calculate();

		printf("%d\n", ans);
	}

	return 0;
}

void calculate()
{
	int i, j, k, temp;
	
	ans = 0;

	//printf("h1\n");

	if (a > 1000000)
	{
		prime_range();

		for (i = 0; i <= (b - a); i++)
		{
			if (prime2[i])
			{
				ans++;
			}
		}

	}
	else
	{
		for (i = a; i <= b; i++)
		{
			if (prime[i])
			{
				ans++;
			}
		}
	}

	for (i = a; i <= b; i++)
	{
		k = sqrt(i);

		//printf("i=%d\n",i);
		
		if (i == k*k)
		{
			temp = 3;

			for (j = 2; j < k; j++)
			{
				if (i%j == 0)
				{
					temp += 2;
				}
			}
		}
		else
		{
			temp = 4;
		}

		if (prime[temp])
		{
			ans++;
		}
	}

}

void prime_range()
{
	int i, j, k, temp;

	k = sqrt(b);

	memset(prime2, true, sizeof(prime2));

	for (i = 2; i <= 1000000; i++)
	{
		if (prime[i] && i<=b)
		{
			temp = a / i;
			
			if (i*temp != a)
			{
				temp++;
			}

			for (j = temp*i; j <= b; j+=i)
			{
				prime2[j - a] = false;
			}
		}
	}

	/*
	for (i = a; i <= b; i++)
	{
		if (prime2[i-a])
		{
			printf("%d\n", i);
		}
	}
	*/

}

void sieve()
{
	int i, j, k, temp;

	prime[0] = false;
	prime[1] = false;
	prime[2] = true;

	for (i = 2; i <= 1003; i++)
	{
		if (prime[i])
		{
			j = i * 2;

			while (j <= 1000000)
			{
				prime[j] = false;
				j += i;
			}
		}
	}

	/*
	for (i = 2; i <= 100; i++)
	{
		if (prime[i])
		{
			printf("%d\n", i);
		}
	}
	*/
}
