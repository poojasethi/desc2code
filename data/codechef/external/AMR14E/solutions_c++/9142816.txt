#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define ull unsigned long long
#define pb push_back
#define ft first
#define se second
#define mp make_pair

const int N = 1e5 + 1;
int a, b;
vector<int> p;
void init() {
    bool *pr;
    pr = new bool[N];
    for (int z = 0; z < N; pr[z] = 1, ++z);
    for (int i = 2; i < N; ++i) {
        if (!pr[i]) continue;
        if (i * 1ll * i >= N) break;
        for (int j = i*i; j < N; pr[j] = 0, j += i);
    }
    for (int i = 2; i < N; ++i) if(pr[i]) p.pb(i);
}
bool vald(int &curr, int pa, int pb, int pr) {
	for (int i = pa; i < pb; ++i) {
		if (curr * 1ll * pr > b) return 0;
		curr *= pr;
	}
	return 1;
}

int main(int argc, char const *argv[]) {
    init();
    int t;
    scanf("%d", &t);
    while (t--) {
    	int ans = 0;
    	scanf("%d%d", &a, &b);
    	bool prime[b - a + 1];
    	for (int i = 0; i < (b - a + 1); ++i) prime[i] = 1;
    	for (int i = 0; i < p.size(); ++i) {
    		for (int j = (int)ceil(a / p[i]); j * 1ll * p[i] <= b; j++) {  
    			prime[p[i] * j - a] = 0;	
    		}
    	}
    	for (int i = 0; i < (b - a + 1); ++i) if (prime[i]) ans++;
    	for (int i = 0; i < p.size(); ++i) {
    		int now = p[i];
    		if (now <= b && now >= a) ans++;
    		for (int j = 0; j < p.size(); ++j) { 
    			if (vald(now, p[j], p[j + 1], p[i])) {
    				if (now >= a) ans++;
    			} else break;
    		}
    	}
    	printf("%d\n", ans);
    }
	return 0;
}