#include "bits/stdc++.h"

using namespace std;

#define MAX 300000
#define ll long long int

bool prime[MAX+1];
ll i,j;
vector <ll> Prim;
ll firstPrime[500010];
ll chc=INT_MIN;

bool see(ll x, ll y)
{
	ll t=0;
	if(y==0)
	{
		return 1;
	}
	while(x%y==0)
	{
		x/=y;
		t++;
	}
	chc=max(chc, t+1);
	if(x==1 && !prime[t+1])
	{
		return 1;
	}
	return 0;
}
inline void pre()
{	
	memset(prime, 0, sizeof(prime));
    for(i=2;i<sqrt(MAX+10);i++)
    {
        if(!prime[i])
        {
            for(j=2;i*j<MAX+1;j++)
            {
                prime[i*j]=1;
            }
        }
    }
    for(i=1;i<MAX+1;i++)
    {
    	if(!prime[i] && i!=1)
    	{
    		Prim.push_back(i);
    	}
    }
}
void debug()
{
	for(ll i=0;i<Prim.size();i++)
	{
		cout << Prim[i] << " "; 
	}
}
int main()
{
	pre();
	//debug();
    ll t;
    cin>>t;
    while(t--)
    {
        ll s,e;
        cin>>s>>e;
        ll xx=0;
        ll w=s;
        ll firstPrime[e-s+1];
        memset(firstPrime, 0, sizeof(firstPrime));
        //map<ll,ll> firstPrime;
        for(i=0;i<Prim.size();i++)
        {
        	for(j=((s-1)/Prim[i])+1;Prim[i]*j<=e+2;j++)  
        	{
        		if(firstPrime[((Prim[i]*j) - s)]==0)
        		{
        			firstPrime[((Prim[i]*j) - s)]=Prim[i];
        		}
        	}
        }
        for(j=0;j<=e-s;j++)
        {
         	if(j+s!=1 && see(j+s, firstPrime[j]))
        	{
        		xx++;
        	//	cout << j+s << " "; 
        	}
        }
        //cout << chc << " Check \n"; 
        //cout << indenum << " Index \n";
        //cout << sw << " Min Prime \n"; 
        //cout << inde << " Index \n";
        //cout << e << " < e ;; " << s <<  " < s ;; " << e-s << " < e-s \n"  ;  
        cout << xx << endl;
    }
    return 0;
} 
