#include<bits/stdc++.h>
using namespace std;
int mark[300009];
vector<int>primes;
int main()
{
    for(int i=2;i<=sqrt(100000);i++)
    {
        for(int j=i*i;j<=100000;j++)
            if(j%i==0)
            mark[j]=1;
    }

    for(int i=2;i<=100000;i++)
        if(!mark[i])
        primes.push_back(i);
int prime_len=primes.size();


    int t;
    scanf("%d",&t);
    while(t--)
    {
        for(int i=0;i<=300000;i++)
            mark[i]=0;

        long long int a,b;
        scanf("%lld %lld",&a,&b);

        int ct=0;

        for(int i=0;i<prime_len;i++)
        {

            if(b>=primes[i])
        {
                int start=(a/primes[i])*primes[i];
                //cout<<start<<" "<<primes[i]<<endl;
                //if(start<a)
                  //  start+=primes[i];

                for(int j=start;j<=b;j+=primes[i])
                {
                    if(j>=a)
                    {
                        int prime_count=0;
                    int temp=j;
                    if(mark[j-a]==0)
                    {
                        //cout<<j<<" "<<j-a<<endl;
                        while(temp>1)
                        {
                            if(temp%primes[i]==0)
                            {
                                temp/=primes[i];
                                prime_count++;
                                mark[j-a]=1;
                            }
                            else
                                break;
                        }
                        if(temp==1)
                        {
                            prime_count++;
                            if(binary_search(primes.begin(),primes.end(),prime_count))
                                ct++;
                        }
                    }

                    }
                }
                }
        }
    for(int i=a;i<=b;i++)
    {
        if(mark[i-a]==0)
            ct++;
    }
        printf("%d\n",ct);
    }
    return 0;
}
