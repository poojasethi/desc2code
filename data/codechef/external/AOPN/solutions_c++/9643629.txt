#include<bits/stdc++.h>
using namespace std;
#define SF(x)	scanf("%d", &x)
#define PF(x)	printf("%d", x)
#define psp     printf(" ")
#define pnl     printf("\n")
#define charint(c) ((c)-'0')
#define pii pair< int, int >
#define pb(x) push_back(x)
#define test int t; scanf("%d",&t);while(t--)
#define forall(a,b) for(long long i=a;i<=b;i++)
#define abs(a) ((a)>(0)?(a):(-a))
#define bit(x,i)          (x&(1<<i))  //select the bit of position i of x
#define lowbit(x)         ((x)&((x)^((x)-1))) 
#define higbit(x)         (1 << ( int) log2(x) )
#define countleadzero(x)  __builtin_ctz(x) //in its binary representation ex. when x=8 answer is 3
#define countsetbits(x)   ____builtin_popcount(x) //count no of setbits
#define gcd(a,b)   __gcd(a,b)
#define bss binary_search
#define esort(x)        (sort((x).begin(), (x).end()))
#define ersort(x)       (sort((x).rbegin(), (x).rend()))
#define MAX		100050
#define INF		1e9
#define MOD     1000000009
#define fi first
#define se second
typedef long long 		ll;
typedef unsigned long long	ull;
long long dp[20][10][10][2][2][2];
vector <int> v;
ll func(ll n){
	v.clear();
	while(n>0){
		v.pb(n%10);n/=10;
	}
	int l=v.size();
	reverse(v.begin(),v.end());
	if(l<3)
	return 0LL;
	memset(dp,0LL,sizeof(dp));
	for(int i=1;i<10;i++){
		for(int j=0;j<10;j++){
			if(i*10+j<=v[0]*10+v[1]){
				dp[1][i][j][0][i==j][(i*10+j)==(v[0]*10+v[1])]+=1;
			}
		}
	}
	for(int i=2;i<l;i++){
		for(int j=0;j<10;j++){
			for(int k=0;k<10;k++){
				for(int od=0;od<=1;od++){
					for(int ev=0;ev<=1;ev++){
						for(int c=0;c<10;c++){
							dp[i][k][c][od|(j==c)][ev|(k==c)][0]+=dp[i-1][j][k][od][ev][0];
							if(c==v[i]){
								dp[i][k][c][od|(j==c)][ev|(k==c)][1]+=dp[i-1][j][k][od][ev][1];
							}
							else if(c<v[i]){
								dp[i][k][c][od|(j==c)][ev|(k==c)][0]+=dp[i-1][j][k][od][ev][1];
							}
						}
					}
				}
			}
		}
		for(int j=1;j<10;j++){
			for(int k=0;k<10;k++){
				dp[i][j][k][0][(j==k)][0] += 1;
			}
		}
	}
	ll res=0LL;
	for(int i=0;i<10;i++){
		for(int j=0;j<10;j++){
			res=res+dp[l-1][i][j][1][1][1]+dp[l-1][i][j][1][1][0];
		}
	}
	return res;	
}
int main(){
test{
ll a,b;
scanf("%lld %lld",&a,&b);
cout<<(func(b)-func(a))<<endl;
}
}