#include<bits/stdc++.h>
//#define DEBUG
//#ifdef DEBUG
//code to debug
//#endif
//#undef DEBUG
using namespace std;

const int mod=(int)1e9+7,maxn=100005,ln=17;
#define F(i,p,n) for(int i=p;i<n;i++)
#define I(i,p,q) for(int i=p;i>=q;i--)
#define Ss(x) scanf("%s",x)
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
//#define getcx getchar_unlocked
#define getcx getchar
/*inline void S(int& n)
{
    n=0; int ch = getcx(); int sign = 1;
    while(ch < '0' || ch > '9') { if(ch == '-') sign=-1; ch = getcx(); }
    while(ch >= '0' && ch <= '9') { n = (n << 3) + (n << 1) + ch - '0', ch = getcx(); }
    n = n * sign;
}*/
#define Ps(x) printf("%d  ",x)
#define P(x) printf("%d\n",x)
typedef long long int LL;
#define modulo(x,y,z) (x+y)<0?x+y+z:((x+y>=z)?x+y-z:x+y)
#define Debug(x) cout << #x << "=" << x << endl
#define Debugarr(x,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,n) cout<<ij<<". "<<x[ij]<<endl; cout<<endl
#define Debugarr2(x,m,n) cout<<"array "<<#x<<":"<<endl; F(ij,0,m) {F(jk,0,n) cout<<x[ij][jk]<<" "; cout<<endl;} cout<<endl
#define pii pair<LL,int>
#define Fi first
#define Se second
#define chk(x,n) (x[n>>5]&(1<<(n&31))) //unsigned int
#define set(x,n) (x[n>>5]|=(1<<(n&31)))//32 bit
const int shift=30,etf=mod-1;

const LL inf=(LL)1e18+1;

const double PI=(double)3.141592653589793238,EPSILON=1e-10;

bool memo[3][10][10][2][2][20];
LL dp[3][10][10][2][2][20];

int decimal[20];

void _clear()
{
    memset(memo,0,sizeof memo);
}

int convert(LL num)
{
    int pos=0;
    while(num)
    {
        int r=num%10;
        decimal[pos++]=r;
        num/=10;
    }
    /*F(i,0,pos)
    {
        cout<<binary[i]<<" ";
    }
    cout<<endl;*/
    return pos;
}

LL func(int start,int prev,int prev2prev,int pos,int triplet,int couple)
{
    //printf("start=%d triplet=%d couple=%d pos=%d prev=%d prev2prev=%d\n",start,triplet,couple,pos,prev,prev2prev);
    if(pos==0)
    {
        if(triplet==1&&couple==1)
            return 1;
        return 0;
    }
    if(memo[start][prev2prev][prev][triplet][couple][pos])
        return dp[start][prev2prev][prev][triplet][couple][pos];
    memo[start][prev2prev][prev][triplet][couple][pos]=1;
    LL ret=0;

    F(j,0,10)
    {
        if(start==0&&j==0)
        {
            ret+=func(0,0,0,pos-1,0,0);
        }
        else
        {
            int st=2,tp=0,co=0;
            if(start==0)
            {
                st=1;
            }
            else if(start==1)
                st=2;
            if(start&&prev==j)
            {
                co=1;
            }
            if(start==2&&prev2prev==j)
            {
                tp=1;
            }
            ret+=func(st,j,prev,pos-1,triplet|tp,couple|co);
        }
    }

    dp[start][prev2prev][prev][triplet][couple][pos]=ret;
    return ret;
}

LL solve(LL num)
{
    _clear();
    int len=convert(num);
    LL ret=0,prev=0,prev2prev=0,couple=0,triplet=0,start=0;
    I(i,len,1)
    {
        int d=decimal[i-1];

        F(j,0,d)
        {
            if(i==len&&j==0)
            {
                ret+=func(0,0,0,i-1,0,0);
            }
            else
            {
                int st=2,tp=0,co=0;
                if(start==0)
                {
                    st=1;
                }
                else if(start==1)
                    st=2;
                if(start&&prev==j)
                {
                    co=1;
                }
                if(start==2&&prev2prev==j)
                {
                    tp=1;
                }
                ret+=func(st,j,prev,i-1,triplet|tp,couple|co);
            }
        }

        if(start==2&&d==prev2prev)
            triplet=1;
        if(start&&prev==d)
        {
            couple=1;
        }
        if(i==len)
            start=1;
        if(i==len-1)
            start=2;
        prev2prev=prev;
        prev=d;
    }
    return ret;
}

int main()
{
    /*#ifndef ONLINE_JUDGE
    freopen("inp0.txt","r",stdin);
    freopen("out0.txt","w",stdout);
    #endif*/
    int t;
    S(t);
    while(t--)
    {
        LL l,r;
        cin>>l>>r;
        LL ans=solve(r+1);
        //Debug(ans);
        ans-=solve(l+1);
        cout<<ans<<endl;
    }
    return 0;
}
