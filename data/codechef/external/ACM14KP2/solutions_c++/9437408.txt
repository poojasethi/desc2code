#include<bits/stdc++.h>
#define rep(i,start,lim) for(i=start;i<=lim;i++)
using namespace std;
long long temp[100005],a[100005];
long long merge(long long l,long long m,long long r)
{
	long long i=l,j=m,k=l,inv_count=0;
	while(i<=m-1 && j<=r)
		if(a[i]<=a[j])
			temp[k++]=a[i++];
		else
			temp[k++]=a[j++],inv_count+=(m-i);
	while(i<=m-1) temp[k++]=a[i++];
	while(j<=r) temp[k++]=a[j++];
	rep(i,l,r) a[i]=temp[i];
	return inv_count;
}
long long mergesort(long long l,long long r)
{
	long long m=(l+r)/2,inv_count=0;
	if(l<r)
		inv_count=mergesort(l,m)+mergesort(m+1,r)+merge(l,m+1,r);
	return inv_count;
}
int main()
{
	long long j,t,i,n,k,ans,cunt,sum;
	cin>>t;
	rep(i,1,t)
	{
		cin>>n>>k,sum=0;
		rep(j,0,n-1) cin>>a[j],sum+=a[j];
		cunt=mergesort(0,n-1);
		if(k<=cunt) ans=cunt-k;
		else 
		{
			if((cunt-k)&1)
			{
				if(sum==((n*(n+1))/2)) ans=1;
				else ans=0;
			}
			else ans=0;
		}
		cout<<"Case "<<i<<": "<<ans<<endl;
	}
	return 0;
}