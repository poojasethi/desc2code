///// NO OF  INVERSION  RUNNING TIME O(nlogn)
 
#include<bits/stdc++.h>
using namespace std;
 
typedef long long int64;
typedef vector<int64> vi;
typedef string ST;
typedef stringstream SS;
typedef vector< vector<int64> > vvi;
typedef pair<int64,int64> ii;
typedef vector<string> vs;
 
 
#define mp make_pair
 
#define	Sf scanf
#define	Pf printf
#define S second
#define F first
#define pb push_back
#define tr(i, c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
 
#define	present(x, c) ((c).find(x) != (c).end()) //map & set//
#define	cpresent(x, c) (find( (c).begin(), (c).end(), x) != (c).end()) //vector & list//
 
#define pran(i, n) for(long long int i = 0; i<n; i++)
#define pranab(i, a, b) for(long long int i = a; i<=b; i++)
#define rep(i, a, b) for(int i = a, lets_stop_here = (int)b; i >= lets_stop_here; i--)
 
map <int, int> m;
vvi ans;
#define gc getchar_unlocked
 
#define mem(A,val) memset(A,val,sizeof(A))
 
int64 B[100005];
int64 count1=0;
void merge_sort(int64 s,int64 e,int64 []);
 
void merge(int64 a,int64 b,int64 c,int64[]);
 
 
 
void merge(int64 a,int64 b,int64 c,int64 A[])
{
 
	int64 i=a;
	int64 j=b;
	int64 z=a;
 
	while(i!=b && j!=c+1)
	{
 
		if(A[i]>A[j])
		{
		    count1+=b-i;
	  		B[z]=A[j];
			j++;
			z++;
    	}
    	else
    	{
    		B[z]=A[i];
			i++;
			z++;
		}
 
	}
 
	while(i!=b)
	{
 
    		B[z]=A[i];
			i++;
			z++;
	}
 
		while(j!=c+1)
	{
 
    		B[z]=A[j];
			j++;
			z++;
	}
 
	pranab(i,a,c)
	{
		A[i]=B[i];
	}
 
 
}
void merge_sort(int64 s,int64 e,int64 A[])
{
	if(e-s+1<=2)
	{
		if(A[s]>A[e])
		{
 
		swap(A[s],A[e]);
		count1++;
	}
	}
	else
	{
		int64 size=e-s+1;
		merge_sort(s,s+(size)/2-1,A);
		merge_sort(s+(size)/2,e,A);
	   	merge(s,s+(size)/2,e,A);
 
 
 
	}
 
 
}
 
 
 
int main()
{	
	int64 t;
	cin>>t;
	int p=1;
while(t--)
{
   count1=0;
	int64 n,k;
	cin>>n>>k;
	int64 A[n];
		map<int64,int64>z;
	map<int64,int64>::iterator it;
	pran(i,n)
	{
		cin>>A[i];
		z[A[i]]++;
 
	}
	int f=0;
   for(it=z.begin();it!=z.end();it++)
   	if(it->second>1)f=1;
 
 
	merge_sort(0,n-1,A);
 
  cout<<"Case "<<p<<": ";
	if(f==1)
	{
			if(k<=count1)
	cout<<count1-k;
 
	else
    cout<<"0";
 
 
	}
	else
	{
//	cout<<"a"<<endl;
//cout<<count1<<endl;
	if(k<=count1)
  cout<<count1-k;
 
	else
	{
	if(abs(k-count1)%2==0) cout<<"0";
	else cout<<"1";
   }
}
	cout<<endl;
	p++;
}
return 0;
}