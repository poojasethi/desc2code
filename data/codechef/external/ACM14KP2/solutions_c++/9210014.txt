#include<bits/stdc++.h>

 

#define ll long long int

#define F first

#define S second

#define PB push_back

#define MP make_pair

 

using namespace std;

ll inv;

ll* merge (ll*a,ll*b,ll ac,ll bc){

 

ll cc=ac+bc;

ll*c=new ll[cc];

 

ll count = 0;

ll count1 = 0,count2 = 0;

while(count1 < ac && count2 <bc && count < cc)

{

if(a[count1] <= b[count2])

{

c[count++] = a[count1++];

}

else

{

inv+=ac-count1;

c[count++] = b[count2++];

}

}

 

if(count1 < ac)

{

for(ll i = count1 ; i<ac;i++)

{

c[count++] = a[i];

}

}

else if(count2 < bc)

{

for(ll i = count2 ; i<bc;i++)

{

c[count++] = b[i];

}

}

return c;

 

}

ll*rearr(ll*a,ll l,ll h){

 

ll s=h-l+1;

 

ll*c=new ll [s];

for(ll i=0;i<s;i++){

c[i]=a[l+i];

}

return c;

}

 

ll*copar(ll*b,ll l,ll h,ll*p){

for(ll i=l;i<=h;i++){

b[i]=p[i-l];

}

return b;

}

void mergesort(ll*a,ll l,ll h){

ll mid=(l+h)/2;
if(l>=h) return;
mergesort(a,l,mid);

mergesort(a,mid+1,h);

ll* aq= merge(rearr(a,l,mid),rearr(a,mid+1,h),mid-l+1,h-mid);

copar(a,l,h,aq);

}

int main(){

ll t;

cin>>t;

ll cc=0;

while(t!=0)

{cc++;
inv=0;
 ll n; ll k; cin>>n>>k;
ll* arr=new  ll[n];
for(ll i=0;i<n;i++) cin>>arr[i];
mergesort(arr,0,n-1);

//cout<<inv<<endl;
 

 if(inv>=k) {
k=inv-k;cout<<"Case "<<cc<<": "<<k<<endl;
}
else{
k=k-inv;
if((k%2)==0) cout<<"Case "<<cc<<": "<<0<<endl;
else {
	bool sd=false;
	
	for(int i=1;i<n;i++) if(arr[i]==arr[i-1]) sd=true;
	
	if(!sd)
	cout<<"Case "<<cc<<": "<<1<<endl;
   else cout<<"Case "<<cc<<": "<<0<<endl;
}
}

t--;

}

}