#include <bits/stdc++.h>
using namespace std;
int btree[1000100],a[100010],b[100010],c[100010];
int getSum (int n,int ind)
{
    int sum=0;
    while (ind>0)
    {
        sum+=btree[ind];
        ind-=ind & (-ind);
    }
    return sum;
}
void update (int n,int ind,int val)
{
    while (ind<=n)
    {
        btree[ind]+=val;
        ind+=ind & (-ind);
    }
}
int main()
{
    int t,n,k,i,e;
    bool flag;
    long long int sum;
    scanf ("%d",&t);
    for (e=1;e<=t;e++)
    {
        flag=0;
        scanf ("%d%d",&n,&k);
        for (i=0;i<=n;i++)
            btree[i]=c[i]=0;
        for (i=0;i<n;i++)
        {
            scanf ("%d",&a[i]);
            c[a[i]]+=1;
            if (c[a[i]]>1)
                flag=1;
            update (n,a[i],1);
              b[i]=(i+1)-getSum (n,a[i]);
        }
      cout<<"Case "<<e<<": ";
           sum=0;
        for (i=0;i<n;i++)
        {
          sum+=b[i];
        }
        if (k<=sum)
        cout<<sum-k<<endl;
        else if (k>sum)
        {
            if (flag || (k-sum)%2==0)
                cout<<"0"<<endl;
            else
                cout<<"1"<<endl;
        }
    }
    return 0;
}