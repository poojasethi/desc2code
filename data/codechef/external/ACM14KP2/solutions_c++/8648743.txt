#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
ll counter=0;

void merge(ll a[],ll l,ll m,ll r)
{
	ll i=0,j=0,k=l;
	ll n1=m-l+1;
	ll n2=r-m;
	ll temp1[n1],temp2[n2];

	for(ll t=0;t<n1;t++)
		temp1[t]=a[l+t];
	for(ll t=0;t<n2;t++)
		temp2[t]=a[m+1+t];

	while(i<n1 && j<n2)
	{
		if(temp1[i]<=temp2[j])
			{
				a[k++]=temp1[i++];
			}
		else
			{
				counter+=(m-l-i)+1;
				a[k++]=temp2[j++];
			}
	}

	while(i<n1)
		a[k++]=temp1[i++];

	while(j<n2)
		a[k++]=temp2[j++];
}

void mergeSort(ll a[],ll l,ll r)
{
	if(r>l)
	{
		ll m=(r+l)/2;
		mergeSort(a,l,m);
		mergeSort(a,m+1,r);
		merge(a,l,m,r);
	}
}

ll duplicate(ll dup[],ll n)
{
	for(ll i=0;i<n;i++)
		if(dup[i]>1)
			return 0;
	return 1;
}

int main()
{
	ll t;
	cin>>t;
	for(ll r=1;r<=t;r++)
	{
		counter=0;
		ll n,k;
		cin>>n>>k;
		ll a[n],dup[100010]={0};
		for(ll i=0;i<n;i++)
			{
				cin>>a[i];
				dup[a[i]]++;
			}
		//ll m=1;
		ll m=duplicate(dup,n);
		//for(ll i=0;i<5;i++)
		//	cout<<dup[i]<<" ";
		//cout<<endl;
		//cout<<"M is "<<m<<endl;
		mergeSort(a,0,n-1);
		//cout<<"Inversions are : "<<counter<<endl;
		if(counter>=k)
			cout<<"Case "<<r<<": "<<counter-k<<endl;
		else
		{
			if((k-counter)%2==0)
				cout<<"Case "<<r<<": "<<0<<endl;
			else
			{
				if(m==0)
					cout<<"Case "<<r<<": "<<0<<endl;
				else
					cout<<"Case "<<r<<": "<<1<<endl;
			}
		}
	}
	
	return 0;
}