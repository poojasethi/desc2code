#include<iostream>
#include<cstdio>
#include<stdlib.h>
using namespace std;

long long count,equale;

void MergeCount(long long A[],long long left,long long right,long long mid)
{
	long long i=left,j=mid,k=left,C[100000];
	while(k<right)
	{
		if((j==right || A[i]<=A[j]) && i<mid)
		{
			if(A[i]==A[j])
				equale=1;
			C[k]=A[i];
			i++;
			k++;
			continue;
		}
		if(i==mid || A[i]>A[j])
		{
			C[k]=A[j];
			j++;
			k++;
			count=count+(mid-i);
		}
	}
	for(i=left;i<k;i++)
	{
		A[i]=C[i];
	}
}

void MergeSortCount(long long A[],long long left,long long right)
{
	long long mid;
	if(right-left==1)
	{
		return;
	}
	if(right-left>1)
	{
		mid=(left+right)/2;
		MergeSortCount(A,left,mid);
		MergeSortCount(A,mid,right);
		MergeCount(A,left,right,mid);
	}
}

int main()
{
	int t;
	scanf("%d",&t);
	int cases=1;
	while(t--)
	{
		long long n,k,i;
		count=0;
		equale=0;
	
		long long a[100000];
		scanf("%lld%lld",&n,&k);
		for(i=0;i<n;i++) scanf("%lld",&a[i]);
		
		MergeSortCount(a,0,n);
		/*for(i=0;i<n;i++)
			cout<<a[i]<<endl;*/
		
		if(count==k)
			printf("Case %d: 0\n",cases);
		else
		{
			if(count>k)
				printf("Case %d: %lld\n",cases,count-k);
			else
			{
				if((k-count)%2==0)
					printf("Case %d: 0\n",cases);
				else
				{
					if(equale==0)
						printf("Case %d: 1\n",cases);
					else
						printf("Case %d: 0\n",cases);
				}
			}
		}
		cases++;
	}
	return 0;
}


