#include<bits/stdc++.h>
using namespace std;
#define LL long long
#define pb push_back
void merge(LL int arr[],LL int,LL int,LL int);// merging function
void mergesort(LL int arr[],LL int start,LL int end);//main sorting function
LL int inv;
int main()
{   
    LL int t;
    scanf("%lld",&t);
    for(LL int tc=0;tc<t;tc++)
    {
        LL int n,k;
        inv=0;
        scanf("%lld%lld",&n,&k);
        LL int arr[n];
        for(LL int i=0;i<n;i++)
        {
           cin>>arr[i];
        }
        mergesort(arr,0,n-1);
        if(k>inv)
        {
            int chk=0;
            for(LL int i=0;i<n-1;i++)
            {
                if(arr[i]==arr[i+1])
                {
                    chk=1;
                    break;
                }
            }
            if(chk)
                printf("Case %lld: %d\n",tc+1,0);
            else
            {
                if((k-inv)%2==0)
                    printf("Case %lld: %d\n",tc+1,0);
                else
                    printf("Case %lld: %d\n",tc+1,1);
            }
        }
        else
            printf("Case %lld: %lld\n",tc+1,inv-k);
    }
    return 0;
}
void mergesort(LL int arr[],LL int str,LL int ed)
{
    if(str<ed)
    {
        LL int mid=(str+ed)/2;
        mergesort(arr,str,mid);
        mergesort(arr,mid+1,ed);
        merge(arr,str,mid,ed);
    }
}
void merge(LL int arr[],LL int str,LL int mid,LL int ed)
{
    LL int n1=(mid-str)+1;
    LL int n2=ed-mid;
    vector <LL int> tmp1,tmp2;
    for(LL int i=str;i<=mid;i++)
    {
        tmp1.pb(arr[i]);
    }
    for(LL int i=mid+1;i<=ed;i++)
    {
        tmp2.pb(arr[i]);
    }
    LL int k1=0;//1 st array
    LL int k2=0;// 2nd array
    LL int k3=str;//final array;
    while((k1<n1)&&(k2<n2))
    {
        if(tmp1[k1]<=tmp2[k2])
        {
            arr[k3]=tmp1[k1];
            k3++;
            k1++;
        }
        else
        {
            inv+=(n1-k1);
            arr[k3]=tmp2[k2];
            k3++;
            k2++;
        }
    }
    while(k1<n1)
    {
        arr[k3]=tmp1[k1];
        k3++;
        k1++;
    }
    while(k2<n2)
    {
        arr[k3]=tmp2[k2];
        k3++;
        k2++;
    }
}
    
    
    
    