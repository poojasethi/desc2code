
#include <bits/stdc++.h>
using namespace std;

#define sz(q) (int(q.size()))
#define m make_pair 
#define pb push_back 
#define eb emplace_back 
#define fi first
#define se second

typedef int64_t LL;
typedef pair<int, int> PII;
typedef pair<LL, LL> PLL;
int tree[100010], N;
int get(int n) {
    int r = 0;
    while (n) {
        r += tree[n];
        n -= n & -n;
    }
    return r;
}
void upd(int n) {
    while (n <= N) {
        tree[n]++;
        n += n & -n;
    }
}
bool seen[100100];
int main() {
    int t;
    cin >> t;
    for (int D = 1; D <= t; ++D) {
        int k;
        cin >> N >> k;
        for (int i = 1; i <= N; ++i) tree[i] = seen[i] = 0;
        LL tot = 0;
        bool dup = 0;
        for (int i = 0; i < N; ++i) {
            int v;
            cin >> v;
            dup |= seen[v];
            seen[v] = 1;
            int sm = get(N) - get(v);
            tot += sm;
            upd(v);
        }
        LL ans = 0;
        if (tot >= k) ans = tot - k; else {
            k -= tot;
            if (!dup && (k & 1)) ans = 1;
        }
        cout << "Case " << D << ": " << ans << "\n";
    }
    return 0;
}
