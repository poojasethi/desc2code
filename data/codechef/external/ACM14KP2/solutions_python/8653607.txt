#include<stdbool.h>
#include <stdio.h>
#include<stdlib.h>
#include<string.h>
#include<iostream>
using namespace std;
long long count=0;
void swap(long long &a,long long &b)
{
    long long  temp=a;
    a=b;
    b=temp;
}
void merge(long long a[],long long start,long long end,long long mid)
{
    long c[100001],i,j,k;
    i=start;j=mid+1,k=0;
    while(i<=mid && j<=end)
    {
        if(a[i]<=a[j])
        {
            c[k++]=a[i++];
        }
        else if(a[i]>a[j])
        {
            count=count+(mid-i+1);
            c[k++]=a[j++];
        }
    }
    if(j==end+1)
    {
        while(i<=mid)
        c[k++]=a[i++];
    }
    else
    {
        while(j<=end)
        c[k++]=a[j++];
    }
    k=0;
    for(i=start;i<=end;i++)
    {
        a[i]=c[k++];
    }
}
void mergesort(long long a[],long long start,long long end)
{
    if(start<end)
    {
    long mid=(start+end)/2;
    mergesort(a,start,mid);
    mergesort(a,mid+1,end);
    merge(a,start,end,mid);
    }
}
int main() 
{
    bool flag,arr[100009];
    long long i,j,t,a[100009],n,k,k1=0;
    scanf("%lld",&t);
    while(t--)
    {
        flag=false;
        memset(arr,false,sizeof(arr));
        k1++;
        count=0;
        scanf("%lld %lld",&n,&k);
        for(i=0;i<n;i++)
        {
        scanf("%lld",&a[i]);
        }
        for(i=0;i<n;i++)
        {
        if(arr[a[i]]==true)
        {
            flag=true;
            break;
        }
        else
        arr[a[i]]=true;
        }
        i=0;
        mergesort(a,0,n-1);
        if(k<count)
        {
            count=count-k;
        }
        else
        {
            count=((k-count)%2);
            if(flag==true || count==0)
            count=0;
            else
            count=1;
        }
        printf("Case %lld: %lld\n",k1,count);
    }
	return 0;
}
 