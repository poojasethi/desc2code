#include<cstdio>
#include<iostream>
#include<cstdlib>
using namespace std;
typedef long long ll ;
ll mergeNCount(long arr[], long temp[], long left, long mid, long right);
ll smallInv(long arr[], long temp[], long left, long right);
ll countInv(long arr[], long n)
{
  long* temp = new long[n];
  return smallInv(arr,temp,0,n-1);
}
ll smallInv(long arr[], long temp[], long left, long right)
{ ll invCount=0;
  if(left<right)
  { long mid = (left + right)/2;
    invCount = smallInv(arr,temp,left,mid);
    invCount+= smallInv(arr,temp,mid+1,right);
    invCount+= mergeNCount(arr,temp,left,mid+1,right);
  }
  return invCount;
}
ll mergeNCount(long arr[], long temp[], long left, long mid, long right)
{
  ll invCount=0;
  long i=left, j=mid, k;
  k = left;
  while(i<=(mid-1) && j<=right)
  {
    if(arr[i]<=arr[j])
     temp[k++] = arr[i++];
    else
     {
       temp[k++] = arr[j++];
       invCount+= (mid-i); //Did not understand this Line!Damn it!
     } 
  }
  while(i<=(mid-1))
  {
    temp[k++] = arr[i++];
  }
  while(j<=right)
  {
    temp[k++] = arr[j++];
  }
  for(long i=left;i<=right;i++)
   arr[i] = temp[i];
  return invCount;
}
 
int main()
{
  int t;
  long n,k;
  cin>>t;
  int u = 1;
  while(u<=t)
  {
    cin>>n>>k;
    int a[100001] = {0};
    int flag = 0;
    long* arr = new long[n];
    for(long i=0;i<n;i++)
    {
     	cin>>arr[i];
     	if(a[arr[i]]>0)
     		flag = 1;
  		else
  			a[arr[i]]++;
    }
    ll y = countInv(arr,n);
    if(y>=k)
    	cout<<"Case "<<u<<": "<<y-k<<endl;
    else
    {
    	if(flag==1)
    		cout<<"Case "<<u<<": 0"<<endl;
    	else
    	{
	    	if((k-y)%2==0)
	    		cout<<"Case "<<u<<": 0"<<endl;
	    	else
	    		cout<<"Case "<<u<<": 1"<<endl;
    	}
    }
    u++;
  }
  return 0;
}