#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cmath>
#include <climits>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;

#define REP(i,n)      FOR(i,0,n)
#define FOR(i,a,b)    for(int i = a; i < b; i++)
#define ROF(i,a,b)    for(int i=a;i>b;i--)
#define GI 		      ({int t;scanf("%d",&t);t;})
#define GL 		      ({LL t;scanf("%lld",&t);t;})
#define GD 		      ({double t;scanf("%lf",&t);t;})
#define pb 	          push_back
#define mp 	          make_pair
#define MOD 	      1000000007
#define INF	          (int)1e9
#define EPS	          1e-9
#define TR(a,it)      for (typeof((a).begin()) it = (a).begin(); it != (a).end(); ++it)

int dp[1005][1005] = {0};
char grid[1005][1005];
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	int T, t = 0, n, m;
	scanf("%d %d", &n, &m);

	for (int i=1; i<=n; i++) {
        for (int j=1; j<=m; j++)
            cin >> grid[i][j];
	}

    int maxi = 0;
	for (int i=1; i<=n; i++) {
        for (int j=1; j<=m; j++) {
            if (grid[i][j] == '.') {
                dp[i][j] = min(min(dp[i-1][j], dp[i-1][j-1]), dp[i][j-1]) + 1;
                maxi = max(maxi, dp[i][j]);
            }
        }
	}

	if (maxi == 0)
        printf("-1\n");
    else
        printf("%d\n", maxi * maxi);

	return 0;
}
