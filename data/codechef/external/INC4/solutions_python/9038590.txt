#include <stdio.h>
#include <algorithm>
#include <math.h>
using namespace std;
const int maxn = 1e5+10;
int n,q,sn,a[maxn],cnt[maxn],l,r,ans,ret[maxn];
struct query{
    int l,r,id;
    bool operator < (const query &op)const{
        if ((l-1)/sn==(op.l-1)/sn){
            return r<op.r;
        }
        return (l-1)/sn<(op.l-1)/sn;
    }
} p[maxn];
void add(int x) {cnt[x]++;if (cnt[x]==1) ans++;}
void del(int x) {cnt[x]--;if (cnt[x]==0) ans--;}
int main(){
    scanf("%d",&n);sn=trunc(sqrt(n));
    for (int i=1; i<=n; i++) scanf("%d",&a[i]);
    scanf("%d",&q);
    for (int i=1; i<=q; i++) scanf("%d%d",&p[i].l,&p[i].r),p[i].id=i;
    sort(p+1,p+q+1);
    l=1;r=0;
    for (int i=1; i<=q; i++){
        while (r<p[i].r){r++;add(a[r]);}
        while (r>p[i].r){del(a[r]);r--;}
        while (l<p[i].l){del(a[l]);l++;}
        while (l>p[i].l){l--;add(a[l]);}
        ret[p[i].id]=ans;
    }
    for (int i=1; i<=q; i++) printf("%d\n",ret[i]);
}
