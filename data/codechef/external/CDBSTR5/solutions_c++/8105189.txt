#include<cstdio>
#include<iostream>
#include<vector>
using namespace std;
int visit[10005]={0};
 vector <int> v[10005];
int dp[10005]={0};
 void dfs(int src)
 {
     visit[src]=1;
     for(int i=0;i<v[src].size();i++)
     {
         int node=v[src][i];
         if(visit[node]==0)
         {
             dp[node]=dp[src]+1;
             dfs(node);
         }
     }
 }

int main()
{
    int n,k,i,j,a,b,l,t;
    cin>>t;
    while(t--){
    cin>>n;
    for(i=0;i<10005;i++)
   {
       v[i].clear();
       dp[i]=0;
       visit[i]=0;
   }

    for(k=1;k<n;k++)
    {
        cin>>a>>b;
        v[a].push_back(b);
        v[b].push_back(a);

    }
int max=-1;
int nsrc;
   dfs(1);
   for(i=1;i<=n;i++)
   {
     //  cout<<i<<" "<<dp[i]<<endl;
       if(dp[i]>max)
       {
           max=dp[i];
           nsrc=i;
       }
   }
   for(i=0;i<10005;i++)
   {

       dp[i]=0;
       visit[i]=0;
   }
   dfs(nsrc);
   max=-1;
   for(i=1;i<=n;i++)
   {
       if(dp[i]>max)
       {
           max=dp[i];
           nsrc=i;
       }
   }
   cout<<max<<endl;
    }
return 0;
}
