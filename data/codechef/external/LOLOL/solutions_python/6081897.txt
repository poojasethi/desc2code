import java.util.*;
import java.lang.Math;
import java.io.*;
class SubseqCounter {

    String seq, subseq;
    long [][] tbl;

    public SubseqCounter(String seq, String subseq) {
        this.seq = seq;
        this.subseq = subseq;
    }

    public long countMatches() {
        tbl = new long[seq.length() + 1][subseq.length() + 1];

        for (int row = 0; row < tbl.length; row++)
            for (int col = 0; col < tbl[row].length; col++)
                tbl[row][col] = countMatchesFor(row, col);

        return tbl[seq.length()][subseq.length()];
    }

    private long countMatchesFor(int seqDigitsLeft, int subseqDigitsLeft) {
        if (subseqDigitsLeft == 0)
            return 1;

        if (seqDigitsLeft == 0)
            return 0;

        char currSeqDigit = seq.charAt(seq.length()-seqDigitsLeft);
        char currSubseqDigit = subseq.charAt(subseq.length()-subseqDigitsLeft);

        long result = 0;

        if (currSeqDigit == currSubseqDigit)
            result += tbl[seqDigitsLeft - 1][subseqDigitsLeft - 1];

        result += tbl[seqDigitsLeft - 1][subseqDigitsLeft];

        return result;
    }
    
    public static void main(String[] args) throws IOException
    {
        int t;
         BufferedReader in = new BufferedReader(new InputStreamReader (System.in));
         t = Integer.parseInt(in.readLine());
        String s1="LOL";
        while(t-->0)
        {
            String s;
            s = in.readLine();
            SubseqCounter S=new SubseqCounter(s, s1);    
            System.out.println(S.countMatches());
        }
    }
}