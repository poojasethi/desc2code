#include <bits/stdc++.h>
using namespace std;
typedef vector<int> vi;
class node
{
	public :
		vi near;
};
node a[1000001];
int prnt[1000001];
int level[1000001];
int ll[1000001];
int llk[1000001];
bool df[1000001];
bool ce[1000001];
void dfs(int j)
{
	df[j]=1;
	vi v = a[j].near;
	ll [j]=level[j];
	llk[j]=level[j];
	for(int i=0;i<v.size();i++)
	{
		if(df[v[i]])
			{ll[j]=min(ll[j],level[v[i]]);continue;}
		prnt[v[i]]=j;
		level[v[i]]=level[j]+1;
		dfs(v[i]);
		int w = min(ll[v[i]],llk[v[i]]);
		if(llk[v[i]] == level[v[i]] && ll[v[i]]==level[j])
			ce[v[i]]=1;
		llk[j]=min(llk[j],w);
	}
}
int main()
{
	int test;
	cin>>test;
	for(int z=1;z<=test;z++)
	{
		int n,m;
		cin>>n>>m;
		for(int i=1;i<=n;i++)
			{a[i].near.clear();df[i]=0;ce[i]=0;}
		int x,y;
		for(int i=1;i<=m;i++)
		{
			scanf("%d%d",&x,&y);
			a[x].near.push_back(y);
			a[y].near.push_back(x);
		}
		prnt[1]=1;
		level[1]=1;
		dfs(1);
		vector<int> res;
		x=n;
		while(prnt[x]!=x)
		{
			res.push_back(x);
			x=prnt[x];
		}
		res.push_back(1);
		int lev = llk[n];
		int cnt=0;
		for(int i=0;i<res.size()-1;i++)
		{
			if(ce[res[i]])
				cnt++;
		}
		cout<<cnt<<endl;
	}
}