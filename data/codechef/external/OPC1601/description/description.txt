 It's a rainy day and Vignesh and Aravind are stuck inside watching the rain. They decide to invent a game, the rules for which are described below.
Given array A containing n integers, they take turns making a single move. Both players are moving optimally (playing to win and making no mistakes).
During each move, the current player chooses one element from A, adds it to their own score, and deletes the element from A; because the size of A decreases by 1 after each move, A's size will be 0 after n moves and the game ends (as all elements were deleted from A). We refer to Vignesh's score as Sv and Aravind's score as Sa. Aravind wins the game if |Sa-Sv| is divisible by 7; otherwise Vignesh wins.
Given A, determine the winner.


Input
The first line contains an integer, T, denoting the number of test cases.
Each test case is comprised of two lines; the first line has an integer n, and the second line has n space-separated integers a0,a1,…,an−2,an−1 describing array a.

Note:Sa+Sv=a0+a1+...+an−2+an−1.


Output
For each test case, print the winner's name on a single line; if Vignesh wins print Vignesh, otherwise print Aravind.

Constraints

1 ≤ T ≤ 100
1 ≤ a[i] ≤ 2000
1 ≤ N ≤ 200

 

Example
Input:
2 
3
7 6 18
1
7

Output:
Vignesh
Aravind

 

Explanation
(Assuming Vignesh plays first, without loss of generality)

Test Case 1
Array A={7,6,18}. The possible play scenarios are:
Sv=13, Sa=18, |Sv−Sa|=5, and 5%7≠0.
Sv=24, Sa=7, |Sv−Sa|=17, and 17%7≠0.
Sv=25, Sa=6, |Sv-Sa|=19, and 19%7≠0.
In this case, it doesn't matter what Vignesh chooses because the difference between their scores isn't divisible by 7. Thus, Vignesh wins.

Test Case 2
Array a={7}. Vignesh must choose that element, the first move ends the game.
Sv=7, S=0, |Sa−Sv|=7, and 7%7=0. Thus, Aravind wins.
