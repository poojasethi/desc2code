#include<bits/stdc++.h>

// Author : Archit Jain :) Delhi Technological University
//#pragma comment (linker, "/STACK:256000000")

#define mp(x,y) make_pair(x,y)
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define pi   3.14159265358979323846264338327950288

using namespace std;
typedef long long lld;
typedef pair<int,int> p;
//snippets
template<class T>  T gcd(T a,T b){if(b==0)return a;else return gcd(b,a%b);}
template<class T>T power(T a,T b){T result=1;while(b>0){if(b&1)	result = result * a;a = a*a;b>>=1;}return result;}
template<class T>T powerMod(T a,T b,T c){T result =1%c;while(b>0){if(b&1)result = (result * a)%c;a = (a*a)%c;b>>=1;}return result;}
template<class T>bool prime(T a){if(a==2)return true;else if(a%2==0)return false;for(int i=3;i*i<=a;i+=2){if(a%i==0)return false;}return true;}


string convertTobinary(lld x)
{
	/*string result = "";
	for(int i = 63;i>=0;i--)
	result = result + char('0' + (x&(1<<i)));
	
	string temp = "";

	int flag = 0;
	for(int i = 0;i<result.size();i++)
	{
		if(result[i]=='0' && flag==0)continue;
		
		flag = 1;
		temp = temp + result[i];
	}
	
	if(temp.size()==0)
	temp = temp + "0";
	
	return temp;*/
	string res = "";
	
	while(x>0)
	{
		if(x%2!=0)
		{
			res.push_back('1');
		}
		else res.push_back('0');
		x=x/2;
	}
	reverse(res.begin(), res.end());
	return (res);
}

string add(string A,string B)
{
	int len1, len2, a, b,carry=0,i,j;
	string res = "";
	len1 = A.size();
	len2 = B.size();
	//trace2(A, B);
	if(len2 > len1)
	{
		string temp = A;
		A = B;
		B = temp;
	}
	
	len1 = A.size();
	len2 = B.size();
	//trace2(len1, len2);
	for(i=len1-1,j=len2-1;j>=0;i--,j--)
	{
		a = A[i]-'0';
		b = B[j] -'0';
		
		res.push_back( char((a^b^carry) +'0'));
		carry = (a*b)||(b*carry)||(carry*a);
	}

	while(i>=0)
	{
	
		a = A[i] - '0';
		res.push_back(carry^a + '0');
		carry = a*carry;
		i--;
	}
//	trace1(res);
	if(carry)
		res.push_back('1');
	reverse(res.begin(), res.end());
	
	return res;
}
int main()
{

	cin.sync_with_stdio(0);
	cout.sync_with_stdio(0);

	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	
	
	int t;
//	cout<<convertTobinary(1)<<endl;
	string s;
	lld k;
	cin>>t;
	while(t--)
	{
		cin>>s;
		cin>>k;
		//cout<<convertTobinary(k)<<endl;
		string result = add(s,convertTobinary(k));
		cout<<result<<endl;
		
	}
	return 0;
}
