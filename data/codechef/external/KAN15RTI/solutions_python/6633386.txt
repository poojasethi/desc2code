
import java.math.BigInteger;
import java.util.Scanner;

class TeachingBinaryToAChild {
    public static void main(String[]sopf)
    {
        Scanner sc=new Scanner(System.in);
        int test=sc.nextInt();
        while(test-->0)
        {
            String s=sc.next();
            StringBuffer sbb=new StringBuffer(s);
            BigInteger t=sc.nextBigInteger();
            String u=t.toString(2);
            StringBuffer sb=new StringBuffer(u);
            while(sb.length()<sbb.length())
            sb.insert(0, '0');
            while(sbb.length()<sb.length())
            sbb.insert(0, '0');
            u=sb.toString();
            s=sbb.toString();
            add(s,u);
        }
    }
    private static void add(String s, String u) {
        StringBuffer sbb=new StringBuffer();
        boolean ans=false;
        for(int i=s.length()-1;i>=0;i--)
        {
            if(s.charAt(i)=='0'&&u.charAt(i)=='0')
            {
                if(!ans)
                {
                    sbb.insert(0, '0');
                    ans=false;
                }
                else
                {
                    sbb.insert(0, '1');
                    ans=false;
                }
            }
            else if((s.charAt(i)=='0'&&u.charAt(i)=='1')||(s.charAt(i)=='1'&&u.charAt(i)=='0'))
            {
                if(!ans)
                {
                    sbb.insert(0, '1');
                    ans=false;
                }
                else
                {
                    sbb.insert(0, '0');
                    ans=true;
                }
            }
            else if(s.charAt(i)=='1'&&u.charAt(i)=='1')
            {
                if(ans)
                {
                    sbb.insert(0, '1');
                    ans=true;
                }
                else
                {
                    sbb.insert(0, '0');
                    ans=true;
                }
            }
        }
        if(ans)
        sbb.insert(0, '1');
        System.out.println(sbb);
    }
}