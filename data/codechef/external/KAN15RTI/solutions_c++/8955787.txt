/*SHREY_MANIK*/
#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include <list>
#include <bitset>
#define ff first
#define ss second
#define mod 1000000007
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
typedef long long LL;
typedef pair< int , int > pii;
typedef pair< LL, LL> pll;
typedef vector< LL >vll;
typedef vector< int > vi;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}

vector<char>v,v1,v2;
char str[1005];
int main()
{
	LL t,c,l,ct,k,n;
	cin>>t;
	while(t--)
	{	
		cin>>str;
		for(int i=0;str[i]!='\0';i++)
			v1.pb(str[i]);
		//reverse(v1.begin(),v1.end());
		n=strlen(str);
		cin>>k;
		l=k;
		ct=0;
		while(l!=0)
		{
			if(l%2==0)
			v2.pb('0');
			else
			v2.pb('1');
			l/=2;
			ct++;
		}
		reverse(v2.begin(),v2.end());
		
		
		if(n>ct)
		{
			c=n-ct;
			while(c--)
			{
				v2.insert(v2.begin(),'0');
			}
		}
		if(ct>n)
		{
			c=ct-n;
			while(c--)
			{
				v1.insert(v1.begin(),'0');
			}
		}
//		for(int j=0;j<v1.size();j++)cout<<v1[j];cout<<"\n";
	//	for(int j=0;j<v2.size();j++)cout<<v2[j];
		
		int j=0;
		for(;j<v1.size();j++);
		j--;
		c=0;
		for(;j>=0;j--)
		{
			if(v1[j]=='0' && v2[j]=='0')
			{
					if(c==1)
					v.pb('1');
					else
					v.pb('0');
					c=0;
			}
			else if((v1[j]=='0' && v2[j]=='1') || (v1[j]=='1' && v2[j]=='0'))
			{
					if(c==1)
					{
						v.pb('0');
						c=1;
					}
					else
					{
						v.pb('1');
						c=0;
					}
			}
			else
			{
				if(c==1)
					{
						v.pb('1');
						c=1;
					}
					else
					{
						v.pb('0');
						c=1;
					}
			}
		}
			if(c==1)
			{
				v.pb('1');
			}
			reverse(v.begin(),v.end());
			for(int i=0;i<v.size();i++)
				cout<<v[i];
			cout<<endl;
			v1.clear();
			v2.clear();
			v.clear();
		
	}
		return 0;
	}
			
