#include<bits/stdc++.h>
#define mod 1000000007
#define len(a) strlen(a)
#define ll long long
#define nl printf("\n")
#define db printf("debug")
#define yes printf("YES\n")
#define no printf("NO\n")
#define pb(a) push_back(a)
#define po(a) pop_back()
#define mp(a,b) make_pair(a,b)
#define set(a,v) memset(a,v,sizeof(a))
#define sz(v) v.size()
#define pcase(i) printf("Case #%d: ",i)
using namespace std;

void pnt(vector<int>v)
{
    for(int i=0;i< v.size();i++)
        cout<<v[i]<<" ";
    nl;
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int i;
        string s,ans;

        map<char,int> mp;
        map<char, int >:: iterator mit;

        vector<int> v;
        cin>>s;
        int l= s.length();

        for(i=0;i<l;i++)
            {
                mp[s[i]]++;
            }

        for(mit= mp.begin(); mit!= mp.end(); mit++)
        {
            int x= mit->second;
            v.pb(x);
        }
        sort(v.begin(), v.end());
       // pnt(v);

        int mx= v[ v.size()-1];
        int mn= v[0];
        if(mx == mn)
            {
                //printf("mx=%d mn=%d\n",mx,mn);
                ans="SAFE";
            }
        else
        {
            int x= v.size();
            if(x == 2)
            {
                if( abs(v[0]-v[x-1])<=1 )
                    ans="INCREMENT";
                else
                    ans="NOT POSSIBLE";
            }
            else if(x==3)
            {
                if( abs(v[0]-v[x-1])>=2 )
                    ans="NOT POSSIBLE";
                else
                {
                    if(v[0]==v[1])
                        ans="DECREMENT";
                    else
                        ans="INCREMENT";
                }
            }
            else
            {
                if( abs(v[0]-v[x-1])>=2 )
                    ans="NOT POSSIBLE";
                else
                {
                    if(  (v[0]==v[1]) and (v[x-1]==v[x-2]) )
                            ans="NOT POSSIBLE";

                    else if(v[0]!= v[1] and v[x-1] == v[x-2])
                        ans="INCREMENT";

                    else if(v[0]== v[1] and v[x-1] != v[x-2])
                        ans="DECREMENT";
                }
            }
        }
        cout<<ans;nl;

    }
}
