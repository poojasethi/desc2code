
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.StringTokenizer;
 
/**
 * Built using CHelper plug-in
 * Actual solution is at the top
 */
public class Main {
	public static void main(String[] args)throws IOException {
//		InputReader in = new InputReader(inputStream);
	       new Main().init();
                
}
    public void init() {
     FastScanner in=new FastScanner(System.in);
        	//FastScanner in=new FastScanner(new File("F:/question.in"));
                
                int t=in.nextInt();
                while(t-->0)
                {
                    int n=in.nextInt();
                    int a=in.nextInt();
                    int m=in.nextInt();
                    int temp=(a+m)%n;
                    if(temp==0)
                    System.out.println(n);
                    else
                    System.out.println(temp);
                    
                }
    }
    
    
        class FastScanner {
		BufferedReader br;
		StringTokenizer st;
 
		public FastScanner(File f) {
			try {
				br = new BufferedReader(new FileReader(f));
			} catch (FileNotFoundException e) {
				e.printStackTrace();
			}
		}
 
		public FastScanner(InputStream f) {
			br = new BufferedReader(new InputStreamReader(f));
		}
 
		String next() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
				if (s == null)
					return null;
				st = new StringTokenizer(s);
			}
			return st.nextToken();
		}
 
		boolean hasMoreTokens() {
			while (st == null || !st.hasMoreTokens()) {
				String s = null;
				try {
					s = br.readLine();
				} catch (IOException e) {
					e.printStackTrace();
				}
                                
				if (s == null)
					return false;
				st = new StringTokenizer(s);
			}
			return true;
		}
 
		int nextInt() {
			return Integer.parseInt(next());
		}
        }
}