/* Pranet Verma */
/* Yeh mera template hai. Apna khud banao =_= */
#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define pip pair<int,pii>
#define pb push_back
#define mp make_pair
#define s(n) scanf("%d",&n)
#define s2(n,m) scanf("%d%d",&n,&m)
#define s3(n,m,l) scanf("%d%d%d",&n,&m,&l)
#define s4(n,m,l,x) scanf("%d%d%d%d",&n,&m,&l,&x)
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
ll pwr(ll a,ll b,ll mod) {a%=mod;if(a<0)a+=mod;ll ans=1; while(b) {if(b&1) ans=(ans*a)%mod; a=(a*a)%mod; b/=2; } return ans; }
ll pwr(ll a,ll b) {ll ans=1; while(b) {if(b&1) ans*=a; a*=a; b/=2; } return ans; }
ll gcd(ll a,ll b) {while(b) {ll temp=a; a=b; b=temp%b; } return a; }
ll lcm(ll a,ll b) {return (a/gcd(a,b))*b; }
ll modularInverse(ll a,ll m) {/*reminder: make sure m is prime*/ assert(false); return pwr(a,m-2,m); }
const int mod=1000000007;

#define MAXN 500001

#define MAXLG 20


struct entry 
{ 
    int nr[2], p;
} L[MAXN]; 
int N;
int P[MAXLG][MAXN],i,stp, cnt; 
int cmp(struct entry a, struct entry b) 
{ 
    if(a.nr[0]==b.nr[0])
    {
        return a.nr[1]<b.nr[1];
    }
    return a.nr[0]<b.nr[0];
} 

void computeSA(string A) 
{ 
    for (N=A.size(), i = 0; i < N; i ++) 
        P[0][i] = A[i] - 'a'; 

    for (stp = 1, cnt = 1; cnt >> 1 < N; stp ++, cnt <<= 1) 
    { 
        for (i = 0; i < N; i ++) 
        { 
        L[i].nr[0] = P[stp - 1][i]; 
        L[i].nr[1] = i + cnt < N ? P[stp - 1][i + cnt] : -1; 
        L[i].p = i; 
        } 
    sort(L, L + N, cmp); 
    for (i = 0; i < N; i ++) 
        P[stp][L[i].p] = i > 0 && L[i].nr[0] == L[i - 1].nr[0] && L[i].nr[1] == L[i - 1].nr[1] ?  P[stp][L[i - 1].p] : i;
    } 
}
int lcp(int x, int y) 
{ 
 int k, ret = 0; if (x == y) return N - x;
 for (k = stp - 1; k >= 0 && x < N && y < N; k --) 
 if (P[k][x] == P[k][y]) 
 x += 1 << k, y += 1 << k, ret += 1 << k; return ret; 
}
ll f(string a)
{
  computeSA(a);
  ll n=a.size();
  ll ans=n*(n+1)/2;
  for(int i=1;i<a.size();++i)
    ans-=lcp(L[i].p,L[i-1].p);
  return ans;
}
int main()
{
  ios::sync_with_stdio(0);
  cin.tie(0);
  string a,b;

  int t;
  cin>>t;
  while(t--)
  {
    int x;
    cin>>x>>x;
    cin>>a>>b;
    ll n=a.size();
    ll m=b.size();
    cout<<f(a)+f(b)-(f(a+"*"+b)-(n+1)*(m+1))<<"\n";
  }
}