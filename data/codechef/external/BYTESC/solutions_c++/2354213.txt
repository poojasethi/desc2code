#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<list>
#include<map>
#include<set>
#include<deque>
#include<queue>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iomanip>
#include<cmath>
#include<cctype>
#include<cstring>
#include<string>
#include<ctime>
#include<cassert>
using namespace std;


#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
#define FOR(i,a,b) for(int i=(a);i< (b);i++)
#define input(a) scanf("%d",&a)
#define CLEAR(a) memset((a),0,sizeof(a))
#define INF 1000000000
#define LL long long
#define PI 2*acos(0.0)
#define sqr(a) (a)*(a)
int dp[55][55];
 
int main()
{
  int n,q;
  input(n);
  input(q);
  int a,b,c;
  for(int i=0;i<n;i++)
   for(int j=0;j<n;j++)
   {
     if(i !=j)
       dp[i][j]=INF;
   }
  while(scanf("%d%d%d",&a,&b,&c)==3)
  {
     if(a==-1)
      break;
     dp[a][b]=c;                               
  }
   for(int k=0;k<n;k++)
    for(int i=0;i<n;i++)
     for(int j=0;j<n;j++)
      dp[i][j]=min(dp[i][j],dp[i][k]+dp[k][j]);
      
   for(int i=0;i<n;i++)
    for(int j=0;j<n;j++)
     if(dp[i][j]!=INF && dp[j][i]!=INF)
       dp[i][j]=dp[j][i]=0;
   for(int k=0;k<n;k++)
    for(int i=0;i<n;i++)
     for(int j=0;j<n;j++)
      dp[i][j]=min(dp[i][j],dp[i][k]+dp[k][j]);
   int s,d;
   while(q--)
   {
     input(s);
     input(d);
     if(dp[s][d]==INF)
      printf("Unreachable\n");
     else
      cout<<dp[s][d]<<endl;        
   }
   
   return 0;
}
