/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
#define inf 99999999
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}

void solve()
{
	int n, q;
	s(n); s(q);
	int graph[n][n];
	rep(i, n) {
		rep(j, n) {
			if(i == j) graph[i][j] = 0;
			else graph[i][j] = inf;
		}
	}
	while(true) {
		int u, v, k;
		s(u); s(v); s(k);
		if(u == -1 && v == -1 && k == -1) break;
		graph[u][v] = k;
	}
	rep(k, n) {
		rep(i, n) {
			rep(j, n) {
				graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j]);
			}
		}
	}
	rep(i, n) rep(j, n) if(graph[i][j] != inf && graph[j][i] != inf) {
		graph[i][j] = graph[j][i] = 0;
	}
	rep(k, n) {
		rep(i, n) {
			rep(j, n) {
				graph[i][j] = min(graph[i][j], graph[i][k] + graph[k][j]);
			}
		}
	}
	while(q--) {
		int u, v; s(u); s(v);
		if(graph[u][v] == inf) {
			puts("Unreachable");
		}
		else {
			pi(graph[u][v]); pn;
		}
	}
}

int main()
{
	int t = 1;
	//scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
