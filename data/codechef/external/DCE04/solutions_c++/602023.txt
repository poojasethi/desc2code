#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>

#define pb push_back
#define mp make_pair
#define all(c) (c).begin(), (c).end()
#define rall(c) (c).rbegin(), (c).rend()
#define tr(c, i) for (typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define rtr(c, i) for (typeof((c).rbegin()) i = (c).rbegin(); i != (c).rend(); --i)
#define contains(c, x) ((c).find(x) != (c).end())
#define Contains(c, x) (find(all(c), x) != (c).end())
#define REP(i, a, b) for (int i = (a); i < (b); ++i)
#define rep(i, n) REP(i, 0, (n))
#define To_String to_string< char,std::char_traits<char>,std::allocator<char> >

typedef long long ll;
typedef unsigned long long ull;
using namespace std;

int main()
{
	ios_base::sync_with_stdio(0);
	int T; cin >> T;
	while (T--) {
		int n, m, w, c, k, rm, rw, rc;
		rm = rw = rc = 0;
		cin >> n >> m >> w >> c;
		bool changed = true;
		while (n > 0 && changed) {
			changed = false;
			if (c > 0 && 4*(rm+rw)>=rc+3) {
				int t = min(c, min(n, 4));
				c -= t; n -= t; rc += t;
				changed = true;
				continue;
			}
			if (w > 0 && 2*rm >= rw+1) {
				w--; n--; rw++;
				changed = true;
				continue;
			}
			if (m > 0) { m--; n--; rm++; changed = true; }
		}
		cout << rm << ' ' << rw << ' ' << rc << endl;
	}
	return 0;
}
