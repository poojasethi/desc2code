import java.math.*;
import java.io.*;
import java.util.*;
 class B
{
	StringTokenizer st;
	BufferedReader in;
	PrintWriter ob;
	boolean marked[]=new boolean[1000002];
	public static void main(String args[])throws IOException {
		new B().run();
	}
	void prime()
	{
		for(int i=2;i<=1000000;i++){
			if(marked[i]==false) {
			for(int j=i;j<=1000000;j+=i)
				if(j!=i)
				marked[j]=true;
			}
		}
	}
	void run()throws IOException   {
		in=new BufferedReader(new InputStreamReader(System.in));
		ob=new PrintWriter(System.out);
		solve();
		ob.flush();
	}
	void solve()throws IOException {
		read();
		int t=ni();
		prime();
		while(t-->0){
			read();
			int a=ni();
			int b=ni();
			int cnt=0;
			for(int i=a;i<=b;i++)
				if(marked[i]==false)
					cnt++;
			ob.println(cnt);
		}
	}
	void read()throws IOException  {
		st=new StringTokenizer(in.readLine());
	}
	int ni(){
		return Integer.parseInt(st.nextToken());
	}
	long nl(){
		return Long.parseLong(st.nextToken());
	}
	double nd(){
		return Double.parseDouble(st.nextToken());
	}
	String ns(){
		return st.nextToken();
	}
	char nc(){
		return st.nextToken().charAt(0);
	}
	int[] nia(int n)throws IOException {
		int a[]=new int[n];
		read();
		for(int i=0;i<n;i++){
			a[i]=Integer.parseInt(st.nextToken());
		}
		return a;
	}
	long[] nla(int n)throws IOException {
		long a[]=new long[n];
		read();
		for(int i=0;i<n;i++){
			a[i]=Long.parseLong(st.nextToken());
		}
		return a;
	}
}
 