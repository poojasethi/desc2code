#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <cstring>
#include <string>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <bitset>
#include <vector>
#include <stack>
#include <list>
#include <utility>
#include <queue>
#include <set>
#include <map>
using namespace std;
 
typedef long long ll;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VP;
typedef vector<string> VS;
 
#define FOR(i,a,b) for(i=(a);i<(b);i++)
#define FORE(it,x) for(typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ALL(x) x.begin(),x.end()
#define CLR(x, v) memset((x),v,sizeof (x))
#define gcd(a, b) __gcd(a, b)
#define PB push_back 
#define MP make_pair
#define INF 2000000007
 
int toInt(string s){ istringstream sin(s); int t; sin>>t; return t; }
template<class T> string toString(T x){ ostringstream sout; sout<<x; return sout.str(); }
template<class T> void chmin(T &t, T f) { if (t > f) t = f; }
template<class T> void chmax(T &t, T f) { if (t < f) t = f; }
#define MOD 1009
int a[110];
int main()
{
int inv[1010];
int c[110][110];
	int n,m;
	scanf("%d%d",&n,&m);
	int i,j;
	inv[1] = 1;
	FOR(i,2,MOD) inv[i] = inv[MOD%i]*(MOD-MOD/i)%MOD;
	c[0][0] = 1;
	FOR(i,1,n+2) {
		c[i][0] = c[i][i] = 1;
		FOR(j,1,i) c[i][j] = (c[i-1][j] + c[i-1][j-1]) % MOD;
	}
	for(i=n;i>=0;i--) scanf("%d", a+i);
	int sum[110];
	sum[0] = m % MOD;
	int ans = 1ll * (m + 1) * a[0] % MOD;
	int p = (m + 1) % MOD;
	FOR(i,1,n+1) {
		p = p * ((m+1) % MOD) % MOD;
		int t = p - 1;
		if(t < 0) t += MOD;
		FOR(j,0,i) {
			t -= (sum[j] * c[i+1][j]) % MOD;
			if(t < 0) t += MOD;
		}
		sum[i] = t * inv[i+1] % MOD;
		ans += sum[i] * a[i] % MOD;
		ans %= MOD;
	}
	printf("%d\n", ans);
	return 0;
}
 
