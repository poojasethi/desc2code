    #include <iostream>
    #include <stdio.h>
    #include <math.h>
    #include <algorithm>
    using namespace std;
    
int p[] = 
{
2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,
53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113,
127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197,
199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281,
283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379,
383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463,
467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571,
577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659,
661, 673, 677, 683, 691, 701, 709
};    
    
    #define gc getchar_unlocked
    
    void scanint(int &x)
    {
	register int c=gc();
	x=0;
	for(;(c<48||c>57);c=gc());
	for(;c>47 && c<58;c=gc())
	{
		x=(x<<1)+(x<<3)+c-48;
	}
	
    }    
    
    int main()
    {
    int t,n,count,nn,d,i;
    long long int sumd;
    scanint(t);
    while(t--)
    {
    sumd=1;
    scanint(n);
    nn=n;
    //prime factorization********************/
    
	/*
	d=2;
    if(n%d==0)
    {
    count=0;
    while(n%d==0)
    {
    count++;
    n/=d;
    }
    sumd*=(long long int)(pow(d,count+1)-1)/(d-1);
    }
    */
	i=0; 
    for(d=p[i];p[i]*p[i]<=n;i++)
    {
    if(n%p[i]==0)
    {
    count=0;
    while(n%p[i]==0)
    {
    count++;
    n/=p[i];
    }
    sumd*=(long long int)(pow(p[i],count+1)-1)/(p[i]-1);
    }
    }
    if(n>1)
    sumd*=(long long int)(pow(n,1+1)-1)/(n-1);
    printf("%lld\n",sumd-nn);
    }
    return 0;
    }