#include <iostream>
#include <cstdlib>
#include <cassert>
#include <utility>
#include <algorithm>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <string>

#define all(i,n) for(i = 0; i < (n); i++)
#define SET(p) memset(p,-1,sizeof(p))
#define CLR(p) memset(p,0,sizeof(p))
#define maX(a,b)    ((a)>(b)?(a):(b))
#define miN(a,b)        ((a)<(b)?(a):(b))
#define cin(n)    scanf("%d",&n)

#define p(n)    printf("%d\n",n)
#define cinl(n)   scanf("%lld",&n)
#define pl(n)   printf("%lld\n",n)
#define Sf(n)   scanf("%lf",&n)
#define Ss(n)   scanf("%s",n)
#define ill  long long
#define ULL unsigned long long
#define pb push_back
#define pii pair<int,int>
#define edge pair<int,pii>
#define ll long long
#define co(e) e.first
#define n1(e) e.second.first
#define n2(e) e.second.second
#define ALL(A) A.begin(), A.end()
#define oo        (1<<30)
#define PI          3.141592653589793
#define ERR         1e-6
//#define pi          2*acos(0)
#define PB          push_back
using namespace std;
#define max2 1000000
#define i64 unsigned long long

#define LL long long

#define mp make_pair
LL mulmod (LL a, LL b, LL mod) {
    LL res = (a * ((long double) b / (long double) mod));
    // put the number in long double, and then reduce the value to LL, forget
   // overflow.
    res = a * b - res * mod;
    if (res >= mod) res -= mod;
    if (res < 0) res += mod;
    return res;
}

ill powe(ill a,ill b,ill mod)
{
    ill ans=1;
    while(b)
    {
        if(b&1)
            ans=mulmod(a,ans,mod);
        a=mulmod(a,a,mod);
        b=b/2;
    }
    return ans;
}

struct node
{
    int h,l;
}a[507];

int m,k,w;
int main()
{
    int last,n,i,j,t,z;
    cin(t);

    while(t--)
    {
        cin(n);
        if(!(n&1)||n%3==0)
            cout<<"YES\n";
        else
            cout<<"NO\n";
    }
return 0;
}
