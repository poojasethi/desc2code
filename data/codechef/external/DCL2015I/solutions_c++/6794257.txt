#include<bits/stdc++.h>
using namespace std;

vector<int> a[100005];
bool visited[100005];
int vertices;

void DfsInit()
{
	for(int i=1;i<=vertices;i++)
	{
		a[i].clear();
		visited[i]=false;
	}	
}
void addEdge(int v,int val)
{
	a[v].push_back(val);
	a[val].push_back(v);
}

int DFS(int v)
{
	visited[v]=true;
	int s=1;
	
	for(int i=0;i<a[v].size();i++)
	{
		if(!visited[a[v][i]])
		{
			s+=DFS(a[v][i]);
		}
	}
	return s;
}

int main()
{
	int t,n,k,x,y;
	cin>>t;
	while(t--)
	{
		int ans=0;
		cin>>n;
		cin>>k;
		vertices = n;
		DfsInit();
		for(int i=0;i<k;i++)
		{
			cin>>x;
			cin>>y;
			addEdge(x,y);
		}
		for(int i=1;i<=n;i++)
		{
			if(!visited[i])
			{
				if(!(DFS(i)&1))
				ans++;
			}
		}
		cout<<ans<<endl;
	}
	return 0;
}
