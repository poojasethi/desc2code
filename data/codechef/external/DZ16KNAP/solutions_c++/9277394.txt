#include<bits/stdc++.h>
using namespace std;
#define f first
#define s second
#define mp make_pair
#define pb push_back
#define ll long long
int mark[100011],sz[100011],c[100011];
vector<int>adj[100011];
int p[100011];
multiset<int>s[100011];
multiset<int>::iterator it;
void dfs(int u,int p1,int r)
{
    c[u]=min(c[u],r);
    int mx=-1,loc=-1;
    sz[u]=1;
    for(int i=0;i<adj[u].size();i++)
    {
        int k=adj[u][i];
        if(k==p1)
            continue;
        dfs(k,u,r);
        sz[u]+=sz[k];
        if(sz[k]>mx)
        {
            mx=sz[k];
            loc=k;
        }
    }
    if(mx==-1)
    {
        mark[u]=u;
        if(c[u]>0)
            s[u].insert(p[u]);
        return;
    }
    mark[u]=mark[loc];
    int t=mark[u];
    for(int i=0;i<adj[u].size();i++)
    {
        int k=adj[u][i];
        if(k==p1||k==loc)
            continue;
        int y=mark[k];
        for(it=s[y].begin();it!=s[y].end();it++)
            s[t].insert(*it);
        //s[y].clear();
    }
    s[t].insert(p[u]);
    while(s[t].size()>c[u])
        s[t].erase(s[t].begin());
}
int main()
{
    int n,i,j;
    scanf("%d",&n);
    for(i=1;i<=n;i++)
        scanf("%d %d",&c[i],&p[i]);
    for(i=0;i<n-1;i++)
    {
        int u,v;
        scanf("%d %d",&u,&v);
        adj[u].pb(v);
        adj[v].pb(u);
    }
    dfs(1,-1,n);
    ll ans=0LL;
    for(set<int>::iterator it=s[mark[1]].begin();it!=s[mark[1]].end();it++)
        ans+=*it;
    printf("%lld\n",ans);
    return 0;
}
