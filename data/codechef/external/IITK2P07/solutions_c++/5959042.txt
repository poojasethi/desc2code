#include <bits/stdc++.h>

using namespace std;

#define N 112345
#define PB push_back
#define sd(x) scanf("%d", &x)
#define F first
#define S second
#define MP make_pair

 set<pair<int, int> > sh[N];
set<pair<int, int> >::iterator it, it2;
vector<pair<int, int> > ans, adj[N];
map<pair<int, int>, pair<int, int> > par;

int ans2;

int main(){
    //freopen("in.txt", "r", stdin);
    int n, k, l, i, x, y, p, sx, sy, ex, ey, bv = 0, sp, j, px, py;
    cin>>n>>k>>l;
    for(i = 1; i <= n; i++){
        sd(x);
        sd(y);
        sd(p);
        x++; y++;
        if(i == 1){
            sx = x;
            sy = y;
            sp = p;
        }
        adj[x].PB(MP(y, p));
    }

    ex = x;
    ey = y;

    //cout<<sx<<" "<<sy<<" "<<ex<<" "<<ey<<endl;

    for(i = 1; i <= 100010; i++){
        sort(adj[i].begin(), adj[i].end());
    }


    int star;

    for(i = sx; i <= ex; i++){
        if(adj[i].size() == 0) continue;

        set<pair<int, int> > sv;
        int ma = 0;
        star = 0;
        x = i;

        if(i == sx){
            star = (int)(lower_bound(adj[i].begin(), adj[i].end(), MP(sy + 1, 0)) - adj[i].begin());
            sh[sy].insert(MP(sp, sx));
            sv.insert(MP(sp, sy));
        }

        for(j = star; j < adj[i].size(); j++){
            ma = 0;
            y = adj[i][j].F;
            p = adj[i][j].S;


            it = sh[y].end();

            if(sh[y].size() != 0){
                it--;

                while(it != sh[y].begin()){
                    if( (x - it->S) <= l){
                        break;
                    }
                    it--;
                }
                it2 = it;
                if((x - it->S) <= l)
                    it2++;

                sh[y].erase(it2, sh[y].end());

                if(sh[y].size() != 0){
                    ma = it->F;
                    px = it->S;
                    py = y;
                }
            }

            it = sv.end();
            if(sv.size() != 0){

                    it--;

                while(it != sv.begin()){
                    if( (y - it->S) <= l){
                        break;
                    }
                    it--;
                }
                it2 = it;
                if((y - it->S) <= l)
                    it2++;

                sv.erase(it2, sv.end());

                if(sv.size() != 0 && ma < it->F){
                    ma = it->F;
                    px = x;
                    py = it->S;
                }
            }
            if(ma >= k){
                sv.insert(MP(ma - k + p, y) );
                sh[y].insert(MP(ma - k + p, x) );
                par[MP(x, y)] = MP(px, py);
                if(x == ex && y == ey){
                    bv = 1;
                    ans2 = ma - k;
                    break;
                }
            }

        }
        if(bv == 1) break;
    }
    if(bv == 0) {cout<<"NO"<<endl; return 0;}
    cout<<"YES"<<endl;
    pair<int, int> pn;

    pn = MP(ex, ey);

    while(pn != MP(sx, sy)){
        ans.PB(pn);
        pn = par[ pn ];
    }
    ans.PB(pn);
    cout<<ans.size()<<endl;
    for(i = ans.size() - 1; i >= 0; i--){
        printf("%d %d\n", ans[i].F - 1, ans[i].S - 1);
    }
    cout<<ans2<<endl;

}
