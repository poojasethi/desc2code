#include<bits/stdc++.h>
using namespace std;
int C[100010],n;
vector< pair<int,int> > E[100010];
vector<int> G[100010];
char visited[100010];
int D[100010];
vector<int> V;

int dfs(int x,int val)
{
  int ret=x;
  vector<int>::iterator it;
  for(it=G[x].begin();it!=G[x].end();it++)
  {
    if(visited[*it]!=val)
    {
       D[*it]=1+D[x];
       visited[*it]=val;
       int z = dfs(*it,val);

       if(D[z]>D[ret])
         ret=z;
    }
  }
  return ret;
}

int process(int g)
{
   for(int g2=g;g2<=100000;g2+=g)
   {
     vector< pair<int,int> >::iterator it;
     for(it=E[g2].begin();it!=E[g2].end();it++)
     {
        pair<int,int> p= *it;

        G[p.first].push_back(p.second);
        G[p.second].push_back(p.first);
        V.push_back(p.first);
        V.push_back(p.second);
     }
   }

   int ret=0;
   vector<int>::iterator it;
   for(it=V.begin();it!=V.end();it++)
   {
        if(visited[*it])
          continue;

          D[*it]=0;
          visited[*it]=1;
          int y = dfs(*it,1);
          D[y]=0;
          visited[y]=2;
          y = dfs(y,2);
          ret = max(ret,D[y]);
   }

   for(it=V.begin();it!=V.end();it++)
   {
      G[*it].clear();
      visited[*it]=0;
   }

   V.clear();
   return ret;


}

int main()
{
   int t;
   cin>>t;
   int x,y,c;

   while(t--)
   {
     cin>>n;
     int mxx=0;
     for(int i=1;i<=100000;i++)
      E[i].clear();

      for(int i=0;i<n-1;i++)
      {
       cin>>x>>y>>c;
       x--; y--;
       mxx = max(mxx,c);
       E[c].push_back(make_pair(x,y));
      }

      for(int g=1;g<=mxx;g++)
      {
         C[g]=0;
           for(int g2=g;g2<=mxx;g2+=g)
             C[g]+=E[g2].size();
      }
      long long ans=0;
      for(int g=1;g<=mxx;g++)
      {
         int mx=0;

         for(int g2=2*g;g2<=mxx;g2+=g)
           mx=max(mx,C[g2]);
        if(mx<C[g])
          ans=max(ans,1LL*g*process(g));
      }
      cout<<ans<<endl;


   }


}
