#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>
#define sqr(x) ((x) * (x))
#define fi first
#define se second
#define bit(x, i) ((x >> i) & 1)
using namespace std;
typedef long long ll;
typedef pair<int, int> pii;
typedef vector<pii> vii;
typedef vector<int> vi;
typedef pair< pii, int> piii;
const int oo = 0x7fffffff;
const long long OO = 1000000000000000000LL;
const int MOD = 1e9 + 7;
const int dx[] = {1, 0, 0, -1, 1, 1, -1, -1};
const int dy[] = {0, 1, -1, 0, -1, 1, 1, -1};
const float eps = 1e-9;
const int N = 1e5 + 5;
const int logN = 20;
int nTest;

int m, n;

void input(){
   scanf("%lld%d", &m, &n);
}

int power(int x, int y, ll mod){
   if (y == 0) return 1;
   int ans = power(x, y/2, mod);
   ans = (ans * 1LL * ans) % mod;
   if (y & 1)
      ans = (ans * 1LL * x) % mod;
   return ans;
}

void solve(){
   if (n < 4){
      if (n == 1)
         printf("1\n");
      else if (n == 2 || n == 3)
         printf("%d\n", m);
      return;
   }
   int p = power(2, n - 3, MOD - 1);
   int answer = power(m, p, MOD);
   printf("%d\n", answer);
}

int main() {
   #ifndef ONLINE_JUDGE
      freopen("input.txt", "r", stdin);
      freopen("output.txt", "w", stdout);
   #endif // ONLINE_JUDGE

   scanf("%d", &nTest);
//   nTest = 1;
   while (nTest) {
      --nTest;
      input();
      solve();
   }
}
