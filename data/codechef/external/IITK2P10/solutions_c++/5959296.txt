#include<iostream>
#include<stack>
#include<string>
#include<vector>
#include<set>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<algorithm>
#include <stdlib.h>

using namespace std;

#define gc getchar
#define MOD 1000000007
#define pc(x) putchar(x)
#define pi(n) printf("%d",n)
#define pis(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define ull unsigned long long
#define EPS 1e-9
#define infi 2000000000
#define linfi 2000000000000000000
#define ARRAY_SIZE(a) sizeof(a)/sizeof(	[0])
#define CHAR_TO_INDEX(c) ((int)c - (int)'a')
 
inline int sn()
{
	int n=0;
	int ch=gc();
	while( ch <48 )ch=gc();
	while( ch >47 )
	n = (n<<3)+(n<<1) + ch-'0', ch=gc();
	    return n;
}

inline void wi(int n)
{
	int N = n, rev, count = 0;
	rev = N;
	if (N == 0) { pc('0');  return ;}
	while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
	rev = 0;
	while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
	while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
	while (count--) pc('0');
}

ll modpow(ll a, ll x , ll p) 
{
// return a^x mod p
	ll res = 1;
	while(x>0) 
	{
		if(x & 1) res = (res*a) % p;
		a=(a*a)%p;
		x >>= 1;
	}	
	return res;
}


int main()
{
	ll t;
	scanf("%lld",&t);
	while(t--)
	{
		//vector<ll> x(1000000,-1);
		ll k,n,ans,i;
		scanf("%lld",&k);
		scanf("%lld",&n);
		if(n<=3)
		{
			if(n==1)
			{
				printf("1\n");
			}
			else
			{
				printf("%llu\n",(k));
			}	
		}
		else
		{
			ans = modpow(2,n-3,MOD-1);
			ans = modpow(k,ans,MOD);
			printf("%llu\n",ans);
		}
	}
	return 0;
}