#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int a[102],skill[102],dis[102],N;
int dp[102][102];

inline void fi(int *a)
{
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 int tmp = 0;
 while (c>33)
 {
     if ( c == 45 ) tmp = 1;
     else *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
 if ( tmp == 1 ) *a = 0-(*a);
}


int f(int first, int idx)
{
    if ( idx+dis[idx]+1 >= N ) return 0;
    int &ans = dp[first][idx];
    if ( ans != -1 ) return ans;
    ans = 0;
    for ( int i = idx+dis[idx]+1; i <= N-1; i++ ) {
        if ( i+dis[i] > N-1 ) {
             int p = i+dis[i]-N;
             if ( p >= first ) continue;
        }
        ans = max(ans, skill[i] + f(first,i));
    }
    return ans;
}

int main()
{
    int t,i,ans;
    fi(&t);
    while ( t-- ) {
          fi(&N);
          for ( i = 0; i < N; i++ ) fi(&skill[i]);
          for ( i = 0; i < N; i++ ) fi(&dis[i]);
          ans = 0;
          memset(dp, -1, sizeof(dp));
          for ( i = 0; i < N; i++ ) {
              ans = max(ans, skill[i] + f(i,i));
          }
          printf("%d\n", ans);
    }
    return 0;
}
