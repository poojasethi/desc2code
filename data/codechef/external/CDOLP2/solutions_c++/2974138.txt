#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

int a[102],skill[102],dis[102],N;
int dp[102][102];

int f(int first, int idx)
{
    if ( idx+dis[idx]+1 >= N ) return 0;
    int &ans = dp[first][idx];
    if ( ans != -1 ) return ans;
    ans = 0;
    for ( int i = idx+dis[idx]+1; i <= N-1; i++ ) {
        if ( i+dis[i] > N-1 ) {
             int p = i+dis[i]-N;
             if ( p >= first ) continue;
        }
        ans = max(ans, skill[i] + f(first,i));
    }
    return ans;
}

int main()
{
    int t,i,ans;
    cin >> t;
    while ( t-- ) {
          cin >> N;    
          for ( i = 0; i < N; i++ ) cin >> skill[i];
          for ( i = 0; i < N; i++ ) cin >> dis[i];
          ans = 0;
          memset(dp, -1, sizeof(dp));
          for ( i = 0; i < N; i++ ) {
              ans = max(ans, skill[i] + f(i,i));
          }
          cout << ans << endl;
    }
    return 0;
}
