#include <iostream>
#include <cstring>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;
const double pi = acos(-1.);
int main()
{
	int n, m, a, c;
	scanf("%d%d%d%d", &n, &m, &a, &c);
	vector<pair<pair<int, int>, int>> g;
	for (int i = 0; i < c; ++ i)
	{
		int x, y;
		scanf("%d%d", &x, &y);
		if (x >= 1 && y < m) g.push_back(make_pair(make_pair(x - 1, y), 2));
		if (x >= 1 && y >= 1) g.push_back(make_pair(make_pair(x - 1, y - 1), 1));
		if (y >= 1 && x < n) g.push_back(make_pair(make_pair(x, y - 1), 0));
		if (x < n && y < m) g.push_back(make_pair(make_pair(x, y), 3));
	}
	sort(g.begin(), g.end());
	int r;
	double ans = 0;
	for (int i = 0; i < (int) g.size(); i = r)
	{
		for (r = i; r < (int) g.size() && g[r].first == g[i].first; ++ r);
		int x = g[i].first.first, y = g[i].first.second;
		bool f[4];
		f[0] = f[1] = f[2] = f[3] = 0;
		for (int j = i; j < r; ++ j)
		{
			f[g[j].second] = 1;
		}
		double s;
		if ((f[0] && f[2]) || (f[1] && f[3]))
		{
			s = 1;
		}
		else if (f[0] + f[1] + f[2] + f[3] == 1)
		{
			s = pi / 4.;
		}
		else
		{
			s = pi / 6. + sqrt(3.) / 4.;
		}
		ans += s * (min(n - a, x) - max(0, x - a + 1) + 1) * (min(m - a, y) - max(0, y - a + 1) + 1);
	}
	ans /= 1ll * (n - a + 1) * (m - a + 1);
	printf("%.10f\n", ans);
}


