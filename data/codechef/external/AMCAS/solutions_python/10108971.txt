#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define FRI freopen("in.txt","r",stdin)
#define FRO freopen("out.txt","w",stdout)
#define debug(args...) {dbg,args; cerr<<endl;}
#define EPS 1e-12
#define RAD(x) ((x*PI)/180)
#define MAXN 100005
using namespace std;

const double PI=acos(-1.0);

struct debugger{
    template<typename T> debugger& operator , (const T& v){
        cerr<<v<<" ";
        return *this;
    }
}dbg;

const long double one=PI/4,two=0.5*sin(2*PI/3)-PI/3+PI/2;

set<pair<int,int> >leftDown,rightDown,leftUp,rightUp;

int main() {
    int n,m,a,c,i,x,y,cnt;
    long long len,wid,oneTimes=0,twoTime=0,fullTimes=0;
    long double ans=0;
    set<pair<int,int> >::iterator it;
    scanf("%d %d %d %d",&n,&m,&a,&c);
    for(i=0;i<c;i++) {
        scanf("%d %d",&x,&y);
        if(x<n&&y<m)leftDown.insert(MP(x,y));
        if(x>0&&y<m) rightDown.insert(MP(x-1,y));
        if(x>0&&y>0) rightUp.insert(MP(x-1,y-1));
        if(x<n&&y>0) leftUp.insert(MP(x,y-1));
    }
    for(it=leftDown.begin();it!=leftDown.end();++it) {
        x=(*it).F;
        y=(*it).S;
        cnt=1;
        if(rightUp.find(*it)!=rightUp.end()) {
            rightUp.erase(*it);
            cnt+=2;
        }
        if(rightDown.find(*it)!=rightDown.end()) {
            rightDown.erase(*it);
            cnt++;
        }
        if(leftUp.find(*it)!=leftUp.end()) {
            leftUp.erase(*it);
            cnt++;
        }
        len=a;
        len-=a-(n-x)<0?0:a-(n-x);
        len-=a-(x+1)<0?0:a-(x+1);
        wid=a;
        wid-=a-(m-y)<0?0:a-(m-y);
        wid-=a-(y+1)<0?0:a-(y+1);
        if(cnt==1) ans+=one*len*wid;
        else if(cnt==2) ans+=two*len*wid;
        else ans+=len*wid;
    }
    for(it=rightDown.begin();it!=rightDown.end();++it) {
        x=(*it).F;
        y=(*it).S;
        cnt=1;
        if(leftUp.find(*it)!=leftUp.end()) {
            leftUp.erase(*it);
            cnt+=2;
        }
        if(rightUp.find(*it)!=rightUp.end()) {
            rightUp.erase(*it);
            cnt++;
        }
        len=a;
        len-=a-(n-x)<0?0:a-(n-x);
        len-=a-(x+1)<0?0:a-(x+1);
        wid=a;
        wid-=a-(m-y)<0?0:a-(m-y);
        wid-=a-(y+1)<0?0:a-(y+1);
        if(cnt==1) ans+=one*len*wid;
        else if(cnt==2) ans+=two*len*wid;
        else ans+=len*wid;
    }
    for(it=leftUp.begin();it!=leftUp.end();++it) {
        x=(*it).F;
        y=(*it).S;
        cnt=1;
        if(rightUp.find(*it)!=rightUp.end()) {
            rightUp.erase(*it);
            cnt++;
        }
        len=a;
        len-=a-(n-x)<0?0:a-(n-x);
        len-=a-(x+1)<0?0:a-(x+1);
        wid=a;
        wid-=a-(m-y)<0?0:a-(m-y);
        wid-=a-(y+1)<0?0:a-(y+1);
        if(cnt==1) ans+=one*len*wid;
        else ans+=two*len*wid;
    }
    for(it=rightUp.begin();it!=rightUp.end();++it) {
        x=(*it).F;
        y=(*it).S;
        len=a;
        len-=a-(n-x)<0?0:a-(n-x);
        len-=a-(x+1)<0?0:a-(x+1);
        wid=a;
        wid-=a-(m-y)<0?0:a-(m-y);
        wid-=a-(y+1)<0?0:a-(y+1);
        ans+=one*len*wid;
    }
    ans/=(n-a+1);
    ans/=(m-a+1);
    cout<<setprecision(12)<<fixed<<ans<<endl;
    return 0;
}
