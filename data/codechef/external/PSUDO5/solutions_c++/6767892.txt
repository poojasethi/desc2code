/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/
 
#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;
 
void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}
 
LL n;
vector<LL>v;
LL se;
 
#define pii pair<LL, LL>
map<pii, LL>m;
LL rec(LL pos, LL pro)
{
	if(pos == -1) {
		return (pro == 1);
	}
	if(m.find(make_pair(pos, pro)) != m.end()) {
		return m[make_pair(pos, pro)];
	}
	LL ans = 0;
	ans += rec(pos - 1, pro);
	if(pro % v[pos] == 0) {
		ans += rec(pos - 1, pro / v[pos]);
	}
	if(ans >= mod) {
		ans %= mod;
	}
	return m[make_pair(pos, pro)] = ans;	
}
 
void solve()
{
	m.clear();
	v.clear();
	scanf("%lld\n", &n);
	string str;
	getline(cin, str);
	int size = str.size();	
	LL tid = 0, j = 0;
	while(j < size) {
		if(str[j] == ' ') {
			v.pb(tid);
				tid = 0;
			}
		else {
			if(str[j] == '\n') {
				break;
			}
			tid = (tid * 10) + (str[j] - '0');
		}
		j++;
	}
	v.pb(tid);
	se = (LL)v.size();
	LL ans = rec(se - 1, n);
	if(n == 1) {
		ans -= 1;
		pl(ans); pn;
	}
	else {
		pl(ans); pn;
	}
}
 
int main()
{
	int t;
	scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}