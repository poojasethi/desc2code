#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
ll arr[110][110];
ll visit[110][110];
ll n;
ll check(ll a,ll b)
{
	if(a>=0 && a<n && b>=0 && b<n)
	{
		if(visit[a][b]==0)
		{
			visit[a][b]=1;
			return 1;
		}
	}
	return 0;
}
ll bfs(ll s,ll t)
{
	ll a,b,c;
	ll ans=0;
	ll i,j;
	memset(visit,0,sizeof(visit));
	visit[s][t]=1;
	queue<pair<pair<ll,ll>,ll> > q;
	q.push(make_pair(make_pair(s,t),1));
	while(!q.empty())
	{
		pair<pair<ll,ll>,ll> p=q.front();
		q.pop();
		i=p.first.first;
		j=p.first.second;
		c=p.second;
		if(arr[i][j]==3)
		{
			ans=c-1;
			break;
		}
		if(check(i+1,j))
		q.push(make_pair(make_pair(i+1,j),c+1));
		if(check(i-1,j))
		q.push(make_pair(make_pair(i-1,j),c+1));
		if(check(i,j+1))
		q.push(make_pair(make_pair(i,j+1),c+1));
		if(check(i,j-1))
		q.push(make_pair(make_pair(i,j-1),c+1));
	}
	return ans;
}
int main()
{
	ll t,i,j;
	cin>>t;
	while(t--)
	{
		cin>>n;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				cin>>arr[i][j];
			}
		}
		ll maxi=0;
		for(i=0;i<n;i++)
		{
			for(j=0;j<n;j++)
			{
				if(arr[i][j]==1)
				{
					maxi=max(maxi,bfs(i,j));
				}
			}
		}
		cout<<maxi<<endl;
	}
}