#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>

using namespace std;
typedef pair<int, int> ii;
#define int_max 2000000000

#define LL long long
#define mp make_pair
#define pb push_back
LL gcd(LL m, LL n){
LL r; while (n != 0){ r=m%n; m=n; n=r;} return m; }

LL ans[1001][1001];
int x[1001], y[1001], z[1001];

LL dist(int i, int j)
{
	return abs(x[i]-x[j])+abs(y[i]-y[j])+abs(z[i]-z[j]);
}
int main()
{
	int t;
	scanf("%d", &t);
	while(t--)
	{
		int n;
		scanf("%d", &n);
		for(int i=0; i<n; i++)
			scanf("%d%d%d", &x[i], &y[i], &z[i]);

		LL sum[n];
		memset(sum, 0, sizeof(sum));
		sum[0]=0;
		for(int i=1; i<n; i++)
			sum[i]=sum[i-1]+dist(i-1,i);

		ans[1][0]=0;
		for(int i=2; i<n; i++)
		{
			for(int j=0; j<n; j++)
				ans[i][j]=int_max;

			for(int j=0; j<i-1; j++)
			{
				ans[i][j]=min(ans[i][j], ans[i-1][j]+dist(i-1, i) );
				ans[i][i-1]=min(ans[i][i-1], ans[i-1][j]+dist(j,i));
				ans[i][i-1]=min(ans[i][i-1], ans[i][j]+dist(j, i-1));
			}
			ans[i][i-1]=min(ans[i][i-1], sum[i-1]);
		}
		/*
		for(int i=0; i<n; i++)
		{
			for(int j=0; j<n; j++)
				cout << ans[i][j]<< "\t\t";
			cout << endl;
		}
		*/
		LL res=int_max;
		for(int j=0; j<n-1; j++)
			res=min(res, ans[n-1][j]);
		printf("%lld\n", res);
	}

	return 0;
}
