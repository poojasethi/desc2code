#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <utility>
#include <iostream>
#include <iomanip>
#include <fstream>
#include <sstream>
#include <string.h>
 
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) ((S&two(X))>0)
#define containL(S,X) ((S&twoL(X))>0)
#define debug(args...) dbg(),args
struct ipair { int first; int second; ipair(int x, int y) { first = x; second = y; }};
int countbit(int n) {return (n==0)?0:(1+countbit(n&(n-1)));}
int lowbit(int n) {return (n^(n-1))&n;}
const double pi=acos(-1.0);
const double eps=1e-11;
template<class T> T sqr(T x) {return x*x;}
template<class T> void checkmin(T &a,T b) {if (b<a) a=b;}
template<class T> void checkmax(T &a,T b) {if (b>a) a=b;}
#define S(N) scanf("%d", &N)
#define SC(N) scanf("%c", &N)
#define SL(N) scanf("%lld", &N)
#define SF(N) scanf("%lf", &N) 
#define SS(N) scanf("%s", N) 
#define SIZE(X) ((int)((X).size()))
#define LENGTH(X) ((int)((X).length()))
#define MP(A,B) *new ipair(A,B)
#define FOR(A,B,C) for(int A=B;A<C;A++)
#define EFOR(A,B,C) for(int A=B;A<=C;A++)
#define RFOR(A,B,C) for(int A=B;A>=C;A--)
#define FORL(A,B,C) for(ll A=B;A<C;A++)
#define EFORL(A,B,C) for(ll A=B;A<=C;A++)
#define RFORL(A,B,C) for(ll A=B;A>=C;A--)
#define PB(A,B) A.push_back_back(B);
#define SORT(A) sort( A.begin(),A.end() )
#define ALL(A) A.begin(),A.end()
#define MEM(A,B) memset(A,B,sizeof(A))
#define SZ(A) int(A.size())
#define MAX(A,B) (A > B) ? A : B
#define MIN(A,B) (A < B) ? A : B
#define DBGCHECK if (argc > 1) DBG = ((*argv[1] == '0') ? 0 : 1)
#define PRN(A, N) if (DBG) { FOR(j, 0, N) cout << setw(2) << A[j] << " " ; cout << endl; }
#define PR2N(A, M, N) FOR(i, 0, M) { PRN(A[i], N) }
#define PR(A) PRN(A, sizeof(A)/sizeof(A[0]))
#define PR2(A) FOR(i, 0, sizeof(A)/sizeof(A[0])) { PR(A[i]) }
#define LIM 100
#define MAXLEN 10002
#define INF  99
bool DBG;
struct dbg { template<typename T> dbg& operator , (const T& v) { if (DBG) cerr << v << " "; return *this; } ~dbg() { if (DBG) cerr << endl; } };

map<string,int> m;
string a[10] = {"0000","0001","0010","0011","0100","0101","0110","0111","1000","1001"};
int code[4];
string s1,s2,s3,s4;

int main (int argc, char *argv[]) 
{
	DBGCHECK;
	m["black"] = 0;
	m["brown"] = 1;
	m["red"] = 2;
	m["orange"] = 3;
	m["yellow"] = 4;
	m["green"] = 5;
	m["blue"] = 6;
	m["violet"] = 7;
	m["grey"] = 8;
	m["white"] = 9;
	cin >> s1 >> s2 >> s3 >> s4;
	int n1,n2,n3,n4,len=0;
	ll ans = 0;
	code[0] = m[s1];code[1] = m[s2];code[2] = m[s3];code[3] = m[s4];
	string s;
	RFOR(i,3,0){
		s = a[code[i]];
		RFOR(j,s.length()-1,0)
			ans += (s[j] - '0')*(ll)pow(2.0,len++); 
	}
	ans *= (ll)pow(10.0,code[3]);
	printf("%lld Guntur",ans);
}
