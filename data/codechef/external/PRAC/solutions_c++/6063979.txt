#include <bits/stdc++.h>
//#define mod 1000000007

typedef long long int ll;

using namespace std;

ll scan()
{
    ll n = 0, sign = 1;
    char c = getchar();
    while(c < '0' || c > '9') {
        if(c == '-') {
            sign = -1;
        }
        c = getchar();
    }
    while(c >= '0' && c <= '9') {
        n = (n << 3) + (n << 1) + c - '0';
        c = getchar();
    }
    return (n * sign);
}

ll pow1(ll m, ll n)
{
    if(n == 0) return 1;
    ll x = pow1(m, n / 2);
    if(n % 2 == 0) return (x * x);
    else return (((x * x)) * m);
}

ll gcd1(ll m, ll n) {
    ll t;
    while(n) {
        t = m;
        m = n;
        n = t % n;
    }
    return m;
}

ll fib(ll n, ll m) {
	ll i, j, k, h, t;
	i = h = 1;
	j = k = 0;
	while (n > 0) {
		if (n % 2 == 1) {
			t = (j * h) % m;
			j = (i * h + j * k + t) % m;
			i = (i * k + t) % m;
		}
		t = (h*h)%m;
		h = (2 * k * h + t) % m;
		k = (k * k + t) % m;
		n = n / 2;
	}
	return j;
}

ll mo(ll a)
{
    if(a < 0) return (-1 * a);
    else return a;
}

int main()
{
    int n, t, maxx;
    double x, y, z, a, b, c, d, ans;
    scanf("%d", &t);
    while(t--) {
        scanf("%lf%lf%lf", &x, &y, &z);
        a = x + y + z;
        b = x + y - z;
        c = x + z - y;
        d = y + z - x;
        printf("%.2lf\n", ((x * y * z) / sqrt(a * b * c * d)));
    }

    return 0;
}