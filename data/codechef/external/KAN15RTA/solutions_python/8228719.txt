#include <bits/stdc++.h>

using namespace std;

char a[500], b[500], c[500];
int dpp[500][500];
int dpc[500][500];

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%s %s %s",a, b, c);
		int n = strlen(a);
		char d = a[0];
		int u=0, v=0;
		while(u<n && b[u]!=d)
			u++;
		while(v<n && c[v]!=d)
			v++;

		for(int i=0;i<u;i++)
		{
			for(int j=0;j<n;j++)
			{
				dpp[i][j] = dpc[i][j] = 0;
			}
		}

		for(int i=0;i<n;i++)
		{
			for(int j=0;j<v;j++)
			{
				dpp[i][j] = dpc[i][j] = 0;
			}
		}

		for(int i=u;i<n;i++)
		{
			for(int j=v;j<n;j++)
				dpp[i][j] = dpc[i][j] = 1;
		}
		for(int i=1;i<n;i++)
		{
			for(int j=0;j<n;j++)
			{
				for(int k=0;k<n;k++)
				{
					if(j==0)
					{
						char d = b[j];
						int flag1=0, flag2=0;
						for(int p=0;p<=i;p++)
							if(a[p]==d)
							{
								flag1=1;
								break;
							}
						for(int p=0;p<=k;p++)
							if(c[p]==d)
							{
								flag2=1;
								break;
							}
						if(flag1 && flag2)
							dpc[j][k] = 1;
						else dpc[j][k] = 0;
					}
					else if(k==0)
					{
						char d = c[k];
						int flag1=0, flag2=0;
						for(int p=0;p<=i;p++)
							if(a[p]==d)
							{
								flag1=1;
								break;
							}
						for(int p=0;p<=j;p++)
							if(b[p]==d)
							{
								flag2=1;
								break;
							}
						if(flag1 && flag2)
							dpc[j][k] = 1;
						else dpc[j][k] = 0;
					}
					else if(a[i]==b[j] && b[j]==c[k])
						dpc[j][k] = 1 + dpp[j-1][k-1];
					else dpc[j][k] = max(dpc[j-1][k], max(dpc[j][k-1], max(dpc[j-1][k-1], max(dpp[j-1][k], max(dpp[j][k-1], max(dpp[j-1][k-1], dpp[j][k]))))));
				}
			}
			for(int j=0;j<n;j++)
			{
				for(int k=0;k<n;k++)
				{
					dpp[j][k] = dpc[j][k];
				}
			}

		}
		cout<<3*(n - dpc[n-1][n-1])<<endl;
	}
	return 0;
}