#include<stdio.h>
#include<stdlib.h>
#include<string.h>
long long int max(long long int a, long long int b,long long c);
long long int L[501][501][501] ;
 
long long  lcs( char *X, char *Y,char *Z,int m)
{
  long long int i,j,k;
  
  for(i=0;i<=m;i++)
  {
      
      for(j=0;j<=m;j++)
      {
          for(k=0;k<=m;k++)
            L[i][j][k]=0;
      }
  }
  // int i, j,k;
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=m; j++)
     {
         for(k=0;k<=m;k++){
       if (i == 0 || j == 0||k==0)
         L[i][j][k] = 0;
 
       else if ((X[i-1] == Y[j-1])&&(Y[j-1]==Z[k-1]))
         L[i][j][k] = L[i-1][j-1][k-1] + 1;
 
       else
         L[i][j][k] = max(L[i-1][j][k], L[i][j-1][k],L[i][j][k-1]);
     }}
   }
 
  /* if(L[m][n]==1){
 
    printf("case %d N\n",temp2);
    return;*/
 
     //printf("case %d Y\n ",temp2);
 /*   printf("%d\n", L[m][n]);
  int index = L[m][n],temp;
  temp=index;
 
 
   char lcs[index+1];
   int indexx[index+1],indexy[index+1];
   lcs[index] = '\0';
     i = m, j = n;
   while (i > 0 && j > 0)
   {
       if (X[i-1] == Y[j-1])
      {
          lcs[index-1] = X[i-1];indexx[index-1]=i;indexy[index-1]=j;
          i--; j--; index--;
      }
 
      else if (L[i-1][j] > L[i][j-1])
         i--;
      else
         j--;
   }
 
   for(i=0;i<temp;i++)
   {
    printf("%c %d %d\n",lcs[i],indexx[i],indexy[i]);
   }*/
 
 
   //printf("%lld", L[m][m][m]);
   return L[m][m][m];
}
 
 
long long int max(long long int a, long long int b,long long int c)
{
    if(a>=b)
    {
        if(a>=c)
            return a;
        else
            return c;
    }
 
   else if(b>=a)
    {
     if(b>=c)
            return b;
 
    }
}
 
 
int main()
{   char X[501],Y[501],Z[501];
    int t,m,n,i,j,o,v=0;
    scanf("%d",&t);
    getchar();
    for(j=1;j<=t;j++)
        {
 
 
scanf("%s",&X);
  //getchar();
  // scanf("%d",&n);
  //getchar();
 // for(i=0;i<n;i++)
scanf("%s",&Y);
  //int m = strlen(X);
 // int n = strlen(Y);
scanf("%s",&Z);
m=strlen(X);
 
v=m;
  printf("%lld\n",3*v-3*lcs( X, Y,Z, m));
    }
 
 // getchar();
  return 0;
} 