#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include <list>
#include <bitset>
#define ff first
#define ss second
#define mod 1000000007
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
typedef long long LL;
typedef pair< int , int > pii;
typedef pair< LL, LL> pll;
typedef vector< LL >vll;
typedef vector< int > vi;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}


char s1[455];
char s2[455];
char s3[455];
int dp[455][455][455];

int main()
{
	int t,l,i,j,k;
	cin>>t;
	while(t--)
	{
		int ans=0;
		
		scanf("%s",s1);
		scanf("%s",s2);
		scanf("%s",s3);
		l=strlen(s1);
		for(i=0;i<=l+1;i++)
		{
			for(j=0;j<=l+1;j++)
			{
				for(k=0;k<=l+1;k++)
				dp[i][j][k]=0;
			}
		}
		for(i=1;i<=l;i++)
		{
			for(j=1;j<=l;j++)
			{
				for(k=1;k<=l;k++)
				{
					if(s1[i-1]==s2[j-1] && s2[j-1]==s3[k-1])
					dp[i][j][k]=dp[i-1][j-1][k-1]+1;
					else if(s1[i-1]==s2[j-1])
					dp[i][j][k]=max(dp[i-1][j-1][k],dp[i][j][k-1]);
					else if(s1[i-1]==s3[k-1])
					dp[i][j][k]=max(dp[i-1][j][k-1],dp[i][j-1][k]);
					else if(s2[j-1]==s3[k-1])
					dp[i][j][k]=max(dp[i][j-1][k-1],dp[i-1][j][k]);
					else dp[i][j][k]=max(dp[i-1][j][k],max(dp[i][j-1][k],dp[i][j][k-1]));
					//cout<<dp[i][j][k]<<" ";
				}
			}
		}
		//cout<<dp[l][l][l]<<" ";
		ans=l-dp[l][l][l];
		ans=ans*3;
		printf("%d\n",ans);
	}
	return 0;	
}
