#include<bits/stdc++.h>
using namespace std;
int dp[455][455][455];
int MAX(int a,int b,int c) {
    return max(a,max(b,c));
}
int LCS(char a[],char b[],char c[],int n,int m,int k)
{
    if(n==-1 || m==-1 ||k==-1)
        return 0;
    if(dp[n][m][k]!=-1)
        return dp[n][m][k];
    if(a[n]==b[m] && b[m]==c[k])
        return dp[n][m][k]=1+LCS(a,b,c,n-1,m-1,k-1);
    else
        return dp[n][m][k]=MAX(LCS(a,b,c,n,m,k-1),LCS(a,b,c,n,m-1,k),LCS(a,b,c,n-1,m,k));
}
int main() {
     int t;
     scanf("%d",&t);
     while(t--) {
         memset(dp,-1,sizeof(dp));
         char a[500],b[500],c[500];
         scanf("%s%s%s",a,b,c);
         int l1=strlen(a),l2=strlen(b),l3=strlen(c);
         int ans=LCS(a,b,c,l1-1,l2-1,l3-1);
         printf("%d\n",(l1+l2+l3)-3*ans);
     }
}