#include <iostream>
#include <vector>
#include <algorithm>
#include <cmath>
#include <queue>
#include <set>
#include <cstdio>
#include <cstdlib>
#include <stack>
#include <cstring>
#include <iomanip>

using namespace std;

const int N = 500;

int dp[N][N][N];

char a[N],b[N],c[N];

void solve() {
    cin>>a>>b>>c;
    int n = (int)strlen(a);
    for(int i = 1;i <= n;i++) {
        for(int j = 1;j <= n;j++) {
            dp[i][j][0] = dp[i][0][j] = dp[0][i][j] = 0;
        }
    }
    for(int i = 1;i <= n;i++) {
        for(int j = 1;j <= n;j++) {
            for(int k = 1;k <= n;k++) {
                dp[i][j][k] = max(max(dp[i - 1][j][k],dp[i][j - 1][k]),dp[i][j][k - 1]);
                if(a[i - 1] == b[j - 1] && a[i - 1] == c[k - 1]) dp[i][j][k] = dp[i - 1][j - 1][k - 1] + 1;
            }
            
        }
    }
    cout<<3 * (n - dp[n][n][n])<<endl;
}

int main() {
    int t; cin>>t;
    while(t--) {
        solve();
    }
   
}