#include<bits/stdc++.h>

// Author : Archit Jain :) Delhi Technological University
//#pragma comment (linker, "/STACK:256000000")

#define mp(x,y) make_pair(x,y)
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define pi   3.14159265358979323846264338327950288

using namespace std;
typedef long long lld;
typedef pair<int,int> p;
//snippets
template<class T>  T gcd(T a,T b){if(b==0)return a;else return gcd(b,a%b);}
template<class T>T power(T a,T b){T result=1;while(b>0){if(b&1)	result = result * a;a = a*a;b>>=1;}return result;}
template<class T>T powerMod(T a,T b,T c){T result =1%c;while(b>0){if(b&1)result = (result * a)%c;a = (a*a)%c;b>>=1;}return result;}
template<class T>bool prime(T a){if(a==2)return true;else if(a%2==0)return false;for(int i=3;i*i<=a;i+=2){if(a%i==0)return false;}return true;}


#define MAX 455
int dp[MAX][MAX][MAX];

int main()
{

	cin.sync_with_stdio(0);
	cout.sync_with_stdio(0);

	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	
	
	int t,i,j,k;
	string a,b,c;
	cin>>t;
	
	while(t--)
	{
		cin>>a>>b>>c;
		
		for(i=0;i<=a.size();i++)
		{
			for(j=0;j<=b.size();j++)
			{
				for(k=0;k<=c.size();k++)
				{
					dp[i][j][k]=0;
				}
			}
		}
		
		dp[0][0][0] = 0;
		
		for(int i = 1;i<=a.size();i++)
		{
			for(int j =1;j<=b.size();j++)
			{
				for(int k = 1;k<=c.size();k++)
				{
					if(a[i-1]==b[j-1] && b[j-1]==c[k-1])
					dp[i][j][k] = 1 + dp[i-1][j-1][k-1];
					else
					{
						/*for(int l = 0;l<=1;l++)
						{
							for(int m=0;m<=1;m++)
							{
								for(int r = 0;r<=1;r++)
								dp[i][j][k] = max(dp[i][j][k],dp[i-l][j-m][k-r]);
							}
						}*/
						
						dp[i][j][k]=max(max(dp[i-1][j][k],dp[i][j-1][k]),dp[i][j][k-1]);
					}
				}
			}
		}
		//cout<<dp[a.size()][b.size()][c.size()]<<endl;
	
		
		lld result = a.size() + b.size() + c.size() - 3ll * dp[a.size()][b.size()][c.size()];
		cout<<result<<endl;	
	}
	return 0;
}
