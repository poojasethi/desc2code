#include <stdio.h>
#include <string.h>

#define ll long long
#define g getchar_unlocked
#define p putchar_unlocked

inline ll rd()
{
    ll x=0;
    int sign=1;
    char c;
    while(((c=g())<'0'||c>'9')&&c!='-');
    if(c=='-')
    sign=-1,c=g();
    while(c>='0'&&c<='9')
    x=(x<<3)+(x<<1)+c-48,c=g();
    return sign*x;
}


inline void uprnt(ll n)
{
      int i=21;
      char outbuff[21];
      if(n<0)
        p('-'),n*=-1;
      do{
          outbuff[--i]=(n%10)+'0';
          n/=10;
        }while(n);

        do{
             p(outbuff[i]);

        }while(++i<21);

 }

int max(int a, int b,int c)
{

if(a>=b&&a>=c)
    return a;
else if(b>=a && b>=c)
    return b;
else return c;
}



int L[453][453][453];

int lcs( char *X, char *Y,char *Z ,int m, int n ,int p)
{

int i, j,k;
for (i=0; i<=m; i++)
{
for (j=0; j<=n; j++)
{
    for(k=0;k<=p;k++)
    {
if (i == 0 || j == 0 || k==0)
L[i][j][k] = 0;
else if (X[i-1] == Y[j-1] && Y[j-1]==Z[k-1])
L[i][j][k] = L[i-1][j-1][k-1] + 1;
else
L[i][j][k] = max(L[i-1][j][k], L[i][j-1][k],L[i][j][k-1]);
}
}
}
return L[m][n][p];
}


char a[500],b[500],z[500];
main()
{
    ll  t,i,j,cases;
    for(t=rd(),cases=1;cases<=t;cases++)
    {
        int l1,l2,l3;
        char c;
        //scanf("%s%s%s",a,b,c);
        l1=0;
        while((c=g())<'a'||c>'z');
        while(c!=' '&&c!='\n')
        {
             a[l1++]=c;
             c=g();
        }
        a[l1]='\0';
        l2=0;
        while((c=g())<'a'||c>'z');
        while(c!=' '&&c!='\n')
        {
             b[l2++]=c;
             c=g();
        }
        b[l2]='\0';
        l3=0;
        while((c=g())<'a'||c>'z');
        while(c!=' '&&c!='\n')
        {
             z[l3++]=c;
             c=g();
        }
        z[l3]='\0';
        uprnt(l1+l2+l3-3*lcs(a,b,z,l1,l2,l3));
        p('\n');


    }
 return 0;
}
