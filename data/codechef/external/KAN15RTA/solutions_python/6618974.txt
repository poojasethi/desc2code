//02042015 2400 codechef KAN15RTA
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<iostream>
#include<algorithm>
#include<sstream>
#include<vector>
#include<queue>
#include<cmath>
#include<string>

#define MX 457

using namespace std;

int mx, cnt, tot, dp[MX][MX][MX];
char a[MX], b[MX], c[MX];

int dfs(int i, int j, int k)
{
    if(!a[i] || !b[j] || !c[k])return 0;
    if(dp[i][j][k]!=-1)return dp[i][j][k];
    if(a[i]==b[j] && b[j]==c[k])return dp[i][j][k]=dfs(i+1, j+1, k+1)+1;
    return dp[i][j][k]=max(dfs(i+1, j, k), max(dfs(i, j+1, k), dfs(i, j, k+1)));
    //return dp[i][j][k]=max(dfs(i+1, j, k), max(dfs(i+1, j+1, k), max(dfs(i+1, j, k+1), max(dfs(i, j+1, k+1), max(dfs(i, j+1, k), dfs(i, j, k+1))))));
}

int main()
{
    int t, i, j, k;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%s %s %s", a, b, c);
        for(i=0; a[i]; i++)
        {
            for(j=0; b[j]; j++)
            {
                for(k=0; c[k]; k++)dp[i][j][k]=-1;
            }
        }
        printf("%d\n", strlen(a)+strlen(b)+strlen(c)-3*dfs(0, 0, 0));
    }
    return 0;
}


