#include <stdio.h>
#include <stdlib.h>

inline short max(short a, short c)
{
	return a > c ? a : c;
}


static short L[460][460][460];
int lcs( char *X, char *Y, char *Z, int m)
{
   int i, j, k;
 
   for (i=0; i<=m; i++)
   {
     for (j=0; j<=m; j++)
     {
     	for (k=0; k<=m; k++)
     	{
       		if (i == 0 || j == 0)
         		L[i][j][k] = 0;
       		else if (X[i-1] == Y[j-1])
       		{
       			if (Y[j-1] == Z[k-1])
       				L[i][j][k] = L[i-1][j-1][k-1] + 1;
       			else
       				L[i][j][k] = max(L[i-1][j][k], max(L[i][j-1][k], L[i][j][k-1]));
       		}
       		else
         		L[i][j][k] = max(L[i-1][j][k], max(L[i][j-1][k], L[i][j][k-1]));
 		}
     }
   }
 
   return L[m][m][m];
}

int main()
{
	int T, len, temp;
	scanf("%d", &T);
	while(T--)
	{
		char a1[451], a2[451], a3[451];
		scanf("%s %s %s", &a1, &a2, &a3);

		len = strlen(a1);
		temp = lcs(a1, a2, a3, len);
		printf("%d\n", (len - temp) * 3);
	}
	return 0;
}