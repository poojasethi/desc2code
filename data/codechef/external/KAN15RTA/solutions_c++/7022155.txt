#include<bits/stdc++.h>
using namespace std;
int dp[500][500][500];
int LCS(char a[], char b[],char c[], int n,int m,int p)
{
    for(int i=n-1;i>=0;i--) {
        for(int j=m-1;j>=0;j--) {
            for(int k=p-1;k>=0;k--) {
                if(a[i]==b[j] && b[j]==c[k]) {
                    dp[i][j][k]=1+dp[i+1][j+1][k+1];
                }
                else
                    dp[i][j][k]=max(max(dp[i][j][k+1],dp[i][j+1][k]),dp[i+1][j][k]);
            }
        }
    }
    return dp[0][0][0];
}
int main() {
     int t;
     scanf("%d",&t);
     while(t--) {
         memset(dp,0,sizeof(dp));
         char a[500],b[500],c[500];
         scanf("%s%s%s",a,b,c);
         int l1=strlen(a),l2=strlen(b),l3=strlen(c);
         int ans=LCS(a,b,c,l1,l2,l3);
//       cout<<ans<<endl;
         printf("%d\n",(l1+l2+l3)-3*ans);
     }
}
