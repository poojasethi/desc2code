#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <algorithm>
#include <iostream>
#include <assert.h>

using namespace std;

#define SET(v,i) memset(v,i,sizeof(v));
#define FOR(i,n,k) for(int i=n;i<k;++i)
#define WHILE(i,n) while(i<n)
#define RI(i) scanf("%d",&i);
#define RS(i) scanf("%s",i);
#define RF(i) scanf("%lf",&i);
#define RL(i) scanf("%lld",&i);
#define OPEN(s) freopen(s,"r",stdin);
#define CLOSE(s) freopen(s,"w",stdout);

const int INF=0x3F3F3F3F;
const int MAXN=501;
typedef long long int i64;
typedef pair<int,int> pii;
typedef pair<string,int> psi;

char A[MAXN],B[MAXN],C[MAXN];
int s1,s2,s3;
bool mark[MAXN][MAXN][MAXN];
int memo[MAXN][MAXN][MAXN];

int LCS(int i1, int i2, int i3){
	if(i1 >= s1 || i2 >= s2 || i3 >= s3) return 0;
	int &best = memo[i1][i2][i3];
	if(mark[i1][i2][i3]) return best;
	mark[i1][i2][i3]=true;
	best=-INF;
	if(A[i1] == B[i2] && B[i2] == C[i3]){
		best=LCS(i1+1,i2+1,i3+1)+1;
	}
	else best=max(LCS(i1+1,i2,i3),max(LCS(i1,i2+1,i3),LCS(i1,i2,i3+1)));
	return best;
}

int main(){
	#ifdef DM1_MACHINE
		OPEN("FILE.in");
		//CLOSE("FILE.out");
	#endif
	int t; RI(t);
	while(t--){
		SET(mark,0);
		RS(A); RS(B); RS(C);
		s1=strlen(A);
		s2=strlen(B);
		s3=strlen(C);
		printf("%d\n",(s3-LCS(0,0,0))*3);
	}
	return 0;
}


////////////////////////////////////////////
/////////////Code by David Moran////////////
/////////////////////////////P=NP///////////
