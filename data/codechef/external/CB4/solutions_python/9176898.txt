/* package codechef; // don't place package name! */

import java.util.*;
import java.lang.*;
import java.io.*;

/* Name of the class has to be "Main" only if the class is public. */
class Codechef
{
    static long B1[], B2[];
    static int N;
    static BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
    static PrintWriter pw=new PrintWriter(System.out);
	public static void main (String[] args) throws java.lang.Exception
	{
	    int t=Integer.parseInt(br.readLine());
	    for(int q=1;q<=t;q++)
	    {
	        StringTokenizer st=new StringTokenizer(br.readLine());
	        N=Integer.parseInt(st.nextToken());
	        B1=new long[N+1];
	        B2=new long[N+1];
	        int c=Integer.parseInt(st.nextToken());
	        for(int qq=1;qq<=c;qq++)
	        {
	            st=new StringTokenizer(br.readLine());
	            int type=Integer.parseInt(st.nextToken());
	            if(type==1)
	            {
	                int p=Integer.parseInt(st.nextToken());
	                int q1=Integer.parseInt(st.nextToken());
	                int v=Integer.parseInt(st.nextToken());
	                range_update(p, q1, v);
	            }
	            else
	            {
	                int p=Integer.parseInt(st.nextToken());
	                int q1=Integer.parseInt(st.nextToken());
	                pw.println(range_query(p, q1));
	            }
	        }
	    }
		// your code goes here
		pw.close();
	}
    static long query(int a, int b)	
    {
    	long sum = 0;
    	for (; b!=0; b-=(b&(-b))) 
    	{
    	    if(a==1)
    	    {
    	        sum += B1[b];
    	    }
    	    else
    	    {
    	        sum += B2[b];
    	    }
    	}
    	return sum;
    }
     
    static long query(int b) 
    {
        return query(1, b) * b - query(2, b);
    }
    static long range_query(int i, int j)    
    {
        return query(j) - query(i - 1);
    }
     
    static void update(int a, int k, long v) 
    {
    	for (; k <= N; k += (k&(-k))) 
    	{
    	    if(a==1)
    	        B1[k] += v;
    	    else
    	        B2[k] += v;
    	}
    }
     
    static void range_update(int i, int j, long v)	
    {
    	update(1, i, v);
    	update(1, j + 1, -v);
    	update(2, i, v * (i - 1));
    	update(2, j + 1, -v * j);
    }
}
    