#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
int N;
ll read(ll tree[], int idx)
{
    ll cnt=0;
    while(idx>0){
        cnt+=tree[idx];
        idx-=(idx&-idx);
    }
    return cnt;
}
void update(ll tree[], int pos, ll val)
{
    while(pos<N){
        tree[pos]+=val;
        pos+=(pos&-pos);
    }
}
ll Sump(ll tree1[], ll tree2[], int x)
{
    return read(tree1,x)*x-read(tree2,x);
}
ll Sum(ll tree1[], ll tree2[], int x, int y)
{
    return Sump(tree1, tree2, y)-Sump(tree1, tree2, x-1);
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--){
        int n,c,x,y;
        ll v;
        scanf("%d%d",&n,&c);
        N=n*5;
        ll tree1[N],tree2[N];
        memset(tree1,0,sizeof(tree1));
        memset(tree2,0,sizeof(tree2));
        for(int i=0;i<c;i++){
            scanf("%d",&x);
            if(x==1){
                scanf("%d%d%lld",&x,&y,&v);
                update(tree1, x, v);
                update(tree1, y+1, -v);
                update(tree2, x, v*(x-1));
                update(tree2, y+1, -v*y);
            }
            else{
                scanf("%d%d",&x,&y);
                printf("%lld\n",Sum(tree1, tree2, x, y));
            }
        }
    }
    return 0;
}
