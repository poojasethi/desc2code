/*--------------------------
|  Author- Advitiya Brijesh |
|  PIE @ MNNIT Allahabad    |
|  advitiyabrijesh@gmail.com|
|                           |
---------------------------*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef vector<list<ll> > vli;
typedef vector<ll > vi;
typedef vector<pair<ll,ll> > vpll;
typedef vector<pair<int,int> > vpii;
typedef pair<int ,int> pii;
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0;i<n;++i)
#define REP(i,a,b) for(int i=a;i<b;++i)
#define PER(i,b) for(int i=b;i>=0;--i)
#define sd(n) scanf("%d",&n)
#define sld(n) scanf("%ld",&n)
#define sll(n) scanf("%lld",&n)
#define ss(n) scanf("%s",n)
#define oll(n) printf("%lld\n",n);
#define mset(n,k) memset(n,k,sizeof(n))
#define MOD 1000000007
#define MAX 1234567
ll bit1[MAX]={0},bit2[MAX]={0};
int n;
void update(int x,ll val,ll bit[]){
	while(x<=n){
		bit[x]+=val;
		x+=(x&-x);
	}
}
ll query(int x,ll bit[]){
	ll sum=0;
	while(x>0){
		sum+=bit[x];
		x-=(x&-x);
	}
	return sum;
}
ll query1(int b) {
    return query(b,bit1)*b - query(b,bit2);
}
ll range_query(int i, int j)    {
    return query1(j) - query1(i - 1);
}
int main(){
	int t;
	sd(t);
	while(t--){
		int c;
		sd(n),sd(c);
		mset(bit1,0);
		mset(bit2,0);
		int x,p,q;
		ll v;
		while(c--){
		sd(x),sd(p),sd(q);
		if(x==1){
			sll(v);
			update(p,v,bit1);
			update(q+1,-v,bit1);
			update(p,v*(p-1),bit2);
			update(q+1,-v*q,bit2);
		}
		else if(x==2){
			ll ans=range_query(p,q);
			printf("%lld\n",ans);
		}
		}
	}
    return 0;
}
 