#include<bits/stdc++.h>
#define ll long long
#define MAX 100005
ll st[4*MAX],lazy[4*MAX];
using namespace std;
ll update(ll idx,ll s,ll e,ll l,ll r,ll v)
{
    if(lazy[idx]!=0)
    {
        st[idx]+=(e-s+1)*lazy[idx];
        if(s!=e)
        {
            lazy[2*idx]+=lazy[idx];
            lazy[2*idx+1]+=lazy[idx];
        }
        lazy[idx]=0;
    }
    if(s>r || e<l)
        return st[idx];
    if(l<=s && e<=r)
    {
        st[idx]+=(e-s+1)*v;
        if(s!=e)
        {
            lazy[2*idx]+=v;
            lazy[2*idx+1]+=v;
        }
        return st[idx];
    }
    ll m=(s+e)/2;
    st[idx]=update(2*idx,s,m,l,r,v)+update(2*idx+1,m+1,e,l,r,v);
    return st[idx];

}

ll query(ll idx,ll s,ll e,ll l,ll r)
{
    ll sum=0;
    if(lazy[idx]!=0)
    {
        st[idx]+=(e-s+1)*lazy[idx];
        if(s!=e)
        {
            lazy[2*idx]+=lazy[idx];
            lazy[2*idx+1]+=lazy[idx];
        }
        lazy[idx]=0;
    }
    if(r<s || e<l)
        return 0;
    else
    {
        if(l<=s && e<=r)
        {
            return st[idx];
        }
        ll m=(s+e)/2;
        sum=query(2*idx,s,m,l,r)+query(2*idx+1,m+1,e,l,r);
        return sum;
    }
}

int main()
{
    ll t;
    scanf("%lld",&t);
    while(t--)
    {
        ll n,q;
        scanf("%lld %lld",&n,&q);
        memset(st,0,sizeof st);
        memset(lazy,0,sizeof lazy);
        while(q--)
        {
            ll c,l,r,v;
            scanf("%lld",&c);
            if(c==1)
            {
                scanf("%lld %lld %lld",&l,&r,&v);
                update(1,0,n-1,l,r,v);
            }
            else
            {
                scanf("%lld %lld",&l,&r);
                printf("%lld\n",query(1,0,n-1,l,r));
            }
        }
    }
    return 0;
}
