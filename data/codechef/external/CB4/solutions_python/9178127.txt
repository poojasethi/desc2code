#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
using namespace std;
typedef long long int LL;
LL BIT1[100010] , BIT2[100010];
void update1(int index , LL val){
	while(index<100004){
		// cout << index << endl;
		BIT1[index]+=val;
		index+=(index)&(-index);
	}
}
void update2(int index , LL val){
	while(index<100004){
		// cout << index << endl;
		BIT2[index]+=val;
		index+=(index)&(-index);
	}
}
LL qry1(int index){
	LL ret = 0;
	while(index>0){
		// cout << index << endl;
		ret = ret + BIT1[index];
		index-=(index)&(-index);
	}
	return ret;
}
LL qry2(int index){
	LL ret = 0;
	while(index>0){
		// cout << index << endl;
		ret = ret + BIT2[index];
		index-=(index)&(-index);
	}
	return ret;
}

LL range_query(int p , int q)
{
	LL ret1 , ret2;
	ret1 = qry1(p)*p - qry2(p);
	ret2 = qry1(q-1)*(q-1) - qry2(q-1);
	return (ret1) - (ret2);
}

int main()
{
int test , N , Q , flag , p , q ;
LL v;
cin >> test;
LL ans;
while(test--){
	memset(BIT1 , 0 , sizeof(BIT1));
	memset(BIT2 , 0 , sizeof(BIT2));
	scanf("%d %d",&N,&Q);
	for(int i=1;i<=Q;i++){
		scanf("%d",&flag);
		if(flag==1)
		{
			scanf("%d %d %lld",&p,&q,&v);
			update1(p , v);
			update1(q+1 , -v);
			update2(p , (p-1)*v);
			update2(q+1 ,-(q*v));
		}
		else
		{
			scanf("%d %d",&p,&q);
			// ans = (qry1(q)*q) - qry2(q);
			// ans = ans - (qry1(p-1)*(p-1) - qry2(p-1));
			ans = range_query(q  , p);
			cout << ans << endl;
		}
	}
}	
return 0;
}








