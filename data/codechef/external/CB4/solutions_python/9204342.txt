#include<bits/stdc++.h>
#define ll long long

using namespace std;

ll tree[100007],tree2[100007];

void update(ll idx,ll v,ll n){
	while(idx<=n){
		tree[idx]+=v;
		idx+=(idx & -idx);
	}
}

void update1(ll idx,ll v,ll n){
	while(idx<=n){
		tree2[idx]+=v;
		idx+=(idx & -idx);
	}
}

ll sum(ll idx){
	ll ret=0;
	while(idx>0){
		ret+=tree[idx];
		idx-=(idx & -idx);
	}
	return ret;
}

ll sum1(ll idx){
	ll ret=0;
	while(idx>0){
		ret+=tree2[idx];
		idx-=(idx & -idx);
	}
	return ret;
}

int main(){
	
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	ll t,n,c,p,q,v,z;
	cin>>t;
	while(t--){
		cin>>n>>c;
		memset(tree,0,(n+3)*sizeof(ll));
		memset(tree2,0,(n+3)*sizeof(ll));
		while(c--){
			cin>>z;
			if(z==1){
				cin>>p>>q>>v;
				update(p,v,n);
				update(q+1,-v,n);
				update1(p,v*(p-1),n);
				update1(q+1,-v*q,n);
			}
			else{
				cin>>p>>q;
				cout<<(sum(q)*q-sum1(q))-(sum(p-1)*(p-1)-sum1(p-1))<<"\n";
			}
		}
	}
	
	return 0;
	
}