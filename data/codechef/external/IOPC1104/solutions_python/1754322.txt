#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>

using namespace std;

#define s(n)					scanf("%d",&n);
#define sl(n)                   scanf("%lld", &n);
#define sf(n) 					scanf("%lf",&n);
#define ss(n) 					scanf("%s",n);
#define INF						(int)1e9
#define LINF					(long long)1e18
#define EPS						1e-12
#define FOR(i,a,b)				for(int i=a;i<b;i++)
#define REP(i,n)				FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define mp						make_pair
#define FF						first
#define SS						second
#define tri(a,b,c)				mp(a,mp(b,c))
#define XX						first.first
#define YY						first.second
#define ZZ						second
#define pb						push_back
#define fill(a,v) 				memset(a,v,sizeof a)
#define all(x)					x.begin(),x.end()
#define SZ(v)					((int)(v.size()))
#define DREP(a)					sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)			(lower_bound(all(arr),ind)-arr.begin())
#define debug(args...)			{dbg,args; cerr<<endl;}
#define dline					cerr<<endl
#define SP                      system("pause");
#define HAHA                    printf("HAHA\n");
#define mod                     10000

void debugarr(int *arr, int ind1, int ind2)
{
	cout<<"[ ";
	for(int i=ind1;i<=ind2;i++)
		cout<<arr[i]<<" ";
	cout<<"]"<<endl;
}

typedef long long LL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;
typedef pair<LL,PII> TRI;

typedef vector<int> VI;
typedef vector<LL> VL;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<TRI> VT;

typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VII> VVII;
typedef vector<VLL> VVLL;
typedef vector<VT> VVT;

/////////////////////////////////////////////////////////////////////////////////////////

#define N 50005
#define base (1<<16)

int x[N], y[N];
pair< PII, int> a[N];
int n;
map<int, int> xmap, ymap;
int cnt[4][N];
int xt[N], yt[N];
int seg[base << 1];

//   23
//   01

int sum(int node, int l, int r, int L, int R)
{
    if(l == L && r == R) return seg[node];
    int M = (L+R)>>1;
    int NN = node << 1;
    if(r <= M) return sum(NN, l, r, L, M);
    if(l > M) return sum(NN|1, l, r, M+1, R);
    return sum(NN, l, M, L, M) + sum(NN|1, M+1, r, M+1, R);
}

void update(int ind, int val)
{
    for(int i = ind+base; i; i>>=1) seg[i] += val;
}

void go(int ind)
{
    sort(a, a+n);
    fill(seg, 0);
    REP(i, n)
    {
        cnt[ind][a[i].ZZ] = sum(1, 0, a[i].YY, 0, base-1);
        update(a[i].YY, 1);
    }
}

int main()
{
    int T; s(T)
    while(T--)
    {
        fill(cnt, 0);
        xmap.clear();
        ymap.clear();
        s(n)
        REP(i, n)
        {
            s(x[i]) s(y[i])
            a[i].XX = x[i];
            a[i].YY = y[i];
            a[i].ZZ = i;
        }
        int xcnt = 0;
        sort(x, x+n);
        REP(i, n) if(i == 0 || x[i] != x[i-1]) xmap[x[i]] = xcnt++;
        int ycnt = 0;
        sort(y, y+n);
        REP(i, n) if(i == 0 || y[i] != y[i-1]) ymap[y[i]] = ycnt++;
        REP(i, n)
        {
            a[i].XX = xmap[a[i].XX];
            a[i].YY = ymap[a[i].YY];
        }
        go(0);
        REP(i, n) a[i].XX = xcnt - 1 - a[i].XX;
        go(1);
        REP(i, n) a[i].YY = ycnt - 1 - a[i].YY;
        go(2);
        REP(i, n) a[i].XX = xcnt - 1 - a[i].XX;
        go(3);
        LL ans = 0LL;
        REP(i, n)
        {
            //cout << cnt[0][i] << " " << cnt[1][i] << " " << cnt[2][i] << " " << cnt[3][i] << endl;
            ans = (ans + (LL) cnt[0][i]*cnt[2][i]);
            ans = (ans + (LL) cnt[1][i]*cnt[3][i]);
        }
        //cout << "ans ---------------- :O  ------- " << ans << endl;
        fill(xt, 0); fill(yt, 0);
        REP(i, n) xt[a[i].XX]++;
        REP(i, n) yt[a[i].YY]++;
        REP(i, xcnt) ans = (ans - (LL) xt[i]*(xt[i]-1)*(xt[i]-2)/6);
        REP(i, ycnt) ans = (ans - (LL) yt[i]*(yt[i]-1)*(yt[i]-2)/6);
        printf("%lld\n", ans<<1);
    }
}

