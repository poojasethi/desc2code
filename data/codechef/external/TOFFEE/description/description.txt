Problem Description:
Yay, its Mr. X’s birthday.
Mr. X loves toffees and every year on his birthday he takes a packet of toffees to school with him. Every toffee has its own size and id. He is very particular/biased about the size/id of toffees he gives to his friends. You are his distribution incharge, every once in a while he’ll ask you to find the smallest toffee within an id range.
Note: Toffees are never gone. The bag always remain the same. Answer for query is the size of toffee not ID.

Input:
The first line contains 2 space separated integers N Q, N is the number of toffees in the bag, Q is the number of queries Mr. X will make.
The next line contains N space separated integers, sizes of N toffees in the bag. The id’s of the toffees are their position in this line (starting from 1 i.e 1 based indexing).
The next Q lines will contain a query on each line.
Each query line will contains 2 numbers, I J, I is the lower bound (inclusive) and J is the upper bound (inclusive) of the IDs.
Size/ID allotted starts from 1 (i.e 1 based indexing).

Output­:
For each query, print its result.

Constraints:
30 Points:
1<=N<=10^3
1<=Q<=10^3

70 Points:
1<=N<=10^6
1<=Q<=10^5

Example:
Sample Input:
4 2
2 4 5 1 
2 3
1 3
Output:
4
2
Sample Explanation
For query 2 3, we need to find minimum size of toffee in [2,3] where size_toffee[2]=4, size_toffee[3]=5, so, ans=min(4,5)=4.
For query 1 3, find minimum size of toffee in [1,3] where size_toffee[1]=2, size_toffee[2]=4, size_toffee[3]=5, so, ans=min(2,4,5)=2
