#include<bits/stdc++.h>
using namespace std;
#define L int
#define LL long long int
#define Size 1000005
LL a[Size] = {0} , M[4*Size] = {0} ;
LL Segment(L node , L start , L end , L n )
{
    if(start == end)
    M[node] = start ;
    else 
    {
        Segment(2 * node + 1 , start , ( start + end )/2 , n ) ;
        Segment(2 * node + 2 , (start + end)/2 + 1 , end , n ) ;
        if(a[M[2 * node + 1]] < a[M[2 * node + 2]])
                M[node] = M[2 * node + 1] ;
        else
                M[node] = M[2 * node + 2] ;
    }
}
int RMQ( L node , L start , L end , L s , L e )
{
        if(s<=start && e>=end)
            return M[node] ;
        else if(s>end || e<start)
            return -1;
        int q1 = RMQ( 2 * node + 1 , start , ( start + end )/2 , s , e );
        int q2 = RMQ( 2 * node + 2 , ( start + end )/2 +1 , end , s , e );
 
        if(q1 == -1) return q2 ;
        else if(q2 == -1 ) return q1 ;
        if(a[q1] < a[q2]) return q1 ;
         return q2 ;
}
int main()
{
    int n,q;
    cin>>n>>q;
    for(int i=0;i<n;i++)
        cin>>a[i];
    Segment(0,0,n-1,n); 
    while(q--)
    {
        int x,y;
        cin>>x>>y;
        // temp=bag[lo];
        // for(int i=lo+1;i<=up;i++)
        // {
        //     if(bag[i]<temp)
        //         temp=bag[i];
        // }
        cout<<a[RMQ(0,0,n-1,x-1,y-1)]<<endl;
    }
    return 0;
}