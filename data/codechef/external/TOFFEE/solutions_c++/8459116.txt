#include<bits/stdc++.h>
using namespace std;
void build(int node,vector<int>&tree,vector<int>& v,int a,int b)
{
	if(a>b)
		return;
	if(a==b)
	{
		tree[node]=v[a];
		return;
	}
	build(node*2,tree,v,a,(a+b)/2);
	build(node*2+1,tree,v,(a+b)/2+1,b);
	tree[node]=min(tree[node*2],tree[node*2+1]);
}
int query(int node,vector<int>& tree,vector<int>& v,int a,int b,int i,int j)
{
	if((a>b)||(i>b)||(a>j))\
		return 1000000000;
	if((a>=i)&&(b<=j))
		return tree[node];
	int q1=query(node*2,tree,v,a,(a+b)/2,i,j);
	int q2=query(node*2+1,tree,v,(a+b)/2+1,b,i,j);
	int res=min(q1,q2);
	return res;
}
int main()
{
	int n,q,i,ans,a,b;
	scanf("%d%d",&n,&q);
	vector<int> v(n),tree(4*n);
	for(i=0;i<n;i++)
		scanf("%d",&(v[i]));
	build(1,tree,v,0,n-1);
	while(q--)
	{
		scanf("%d%d",&a,&b);
		a--;
		b--;
		ans=query(1,tree,v,0,n-1,a,b);
		printf("%d\n",ans);
	}
	return 0;
}