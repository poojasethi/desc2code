//codersan
#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define f first
#define s second
#define LL long long int
#define init(a,b) memset(a,b,sizeof(a))
#define sll(n) scanf("%I64d",&n)
#define pi(n) printf("%d\n",n)
#define pl(n) printf("%I64d\n",n)
#define pnl() printf("\n")
#define sortv(a) sort(a.begin(),a.end())
#define go()  int t; cin>>t; while(t--)
#define DRI(n)  int n; cin>>n;
#define DRII(n,m)  int n,m; cin>>n>>m;
template<class T>inline bool si(T &x)
{
    int c=getchar();
    int sgn=1;
    while(~c&&c<'0'||c>'9')
        {
            if(c=='-')sgn=-1;c=getchar();
        }
    for(x=0;~c&&'0'<=c&&c<='9';c=getchar())x=x*10+c-'0'; x*=sgn;
    return ~c;
}
int dp[2][10001][2]={0};
int m[10002],t[10002];
using namespace std;
int main()
{
     #ifndef ONLINE_JUDGE
       freopen("C:\\Users\\codersan\\Desktop\\Coding\\SPOJ.txt", "r", stdin);
     #endif
    DRII(N,W);
    for(int i=0;i<N;i++)
        si(m[i]);
    for(int i=0;i<N;i++)
        si(t[i]);
    int c=1;
    for(int i=1;i<=N;i++)
    {
        for(int w=1;w<=W;w++)
        {
            if(t[i-1]<=w)
            {
                dp[c][w][0]=max( dp[!c][w][0] , dp[!c][w-t[i-1]][0]+m[i-1] );//init dp
                dp[c][w][1]=max(2*m[i-1] + dp[!c][w-t[i-1]][0], dp[!c][w-t[i-1]][1] + m[i-1]);
                dp[c][w][1]=max(dp[!c][w][1],dp[c][w][1]);
            }
            else
            {
                dp[c][w][1]=dp[!c][w][1];
                dp[c][w][0]=dp[!c][w][0];
            }

        }
        c=!c;
    }
    pi(dp[!c][W][1]);
    return 0;
}