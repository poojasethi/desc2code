#include<bits/stdc++.h>
#define pb push_back
#define mk make_pair
typedef long long ll;
using namespace std;

int N,T,reg[1005],tim[1005];
pair<int,int> data[1005];
//map<pair<int,bool>,int > memo[1005];

int memo[1005][10005][2];

int dp(int in,int ti,bool d){
    if(in==N)return memo[in][ti][d] = 0;
    int sol=0;
    if(memo[in][ti][d]!= -1) return memo[in][ti][d];
    //for(int i=in;i<N;i++){
        if(ti+data[in].first<=T){
            sol=max(sol,dp(in+1,ti+data[in].first,d)+data[in].second);
            if(!d)
                sol=max(sol,dp(in+1,ti+data[in].first,1)+data[in].second*2);
        }
        if(in+1<N and ti+data[in+1].first<=T)
            sol = max(sol,dp(in+1,ti,d));
    //}
    return memo[in][ti][d] = sol;
}

/*
int dp(int in,int ti,bool d){
    if(in==N)return 0;
    int sol=0;

    //for(int i=in;i<N;i++){
        if(ti+tim[in]<=T){
            sol=max(sol,dp(in+1,ti+tim[in],d)+reg[in]);
            if(!d)
                sol=max(sol,dp(in+1,ti+tim[in],1)+reg[in]*2);
        }
        sol = max(sol,dp(in+1,ti,d));
    //}
    return sol;
}
*/

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    cin>>N>>T;
    memset(memo,-1,sizeof memo);

    for(int i=0;i<N;i++)cin>>data[i].second;
    for(int i=0;i<N;i++)cin>>data[i].first;
    sort(data+0,data+N);
    cout<<dp(0,0,0)<<endl;
}

