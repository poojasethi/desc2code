#include <bits/stdc++.h>
#define ll long long
using namespace std;
vector<int>v[100002];
int maxd[100002],cnt[100002];
void dfs(int id ,int prev){

  int i;
  maxd[id] = 0 ;
  cnt[id] = 0;
   for(i=0;i<v[id].size();++i){
       if(v[id][i]!=prev)
          dfs(v[id][i],id);
   }
   for(i=0;i<v[id].size();++i){
       if(v[id][i]!=prev)
          maxd[id] = max(maxd[id],maxd[v[id][i]]+1);
   }

   for(i=0;i<v[id].size();++i){
       if(v[id][i]!=prev)
          if((maxd[v[id][i]]+1) == maxd[id])
             if(maxd[v[id][i]]==0)
              cnt[id]+=1;
             else
              cnt[id]+=cnt[v[id][i]];
   }

}
int ans[100002];

void dfs2(int id,int prev,int prevbest,int prevcount){

   //cout<<id<<" "<<prev<<" "<<prevbest<<" "<<prevcount<<endl;
   int i,j;
   if(id==0){
      ans[id] = cnt[id];
   }
   else{

      if(prevbest>maxd[id])
          ans[id] = prevcount;
      else if(maxd[id]>prevbest)
          ans[id] = cnt[id];
      else
          ans[id] = prevcount + cnt[id];
   }

   int fbest , sbest ,fcnt ,scnt ;


   fbest  = prevbest + 1;
    fcnt  = max(1,prevcount) ;
    sbest = scnt  = 0;

   for(i=0;i<v[id].size();++i){

         if(v[id][i]!=prev){

              if((maxd[v[id][i]]+2)>fbest){
                 sbest = fbest ;
                 scnt = fcnt ;
                 fbest = maxd[v[id][i]]+2 ;
                 if(maxd[v[id][i]]==0)
                    fcnt = 1;
                 else
                    fcnt = cnt[v[id][i]];
              }
              else if((maxd[v[id][i]]+2)==fbest){


                 fbest = maxd[v[id][i]]+2 ;
                 if(maxd[v[id][i]]==0)
                    fcnt += 1;
                 else
                    fcnt += cnt[v[id][i]];

              }
              else if((maxd[v[id][i]]+2)>sbest){


                 sbest = maxd[v[id][i]]+2 ;
                 if(maxd[v[id][i]]==0)
                    scnt = 1;
                 else
                    scnt = cnt[v[id][i]];

              }
              else if((maxd[v[id][i]]+2)==sbest){

                   if(maxd[v[id][i]]==0)
                    scnt += 1;
                 else
                    scnt += cnt[v[id][i]];

              }
         }

   }


   for(i=0;i<v[id].size();++i){

         if(v[id][i]!=prev){

             if(maxd[v[id][i]]+2==fbest){

                 if(fcnt==max(1,cnt[v[id][i]]))
                    dfs2(v[id][i],id,sbest,scnt);
                 else
                    dfs2(v[id][i],id,fbest,fcnt-max(1,cnt[v[id][i]]));
             }
             else{
               dfs2(v[id][i],id,fbest,fcnt);
             }
         }
   }

}

int main(void)
{
    int n ,i,n1,n2;
    cin>>n;
    for(i=0;i<n-1;++i){
       cin>>n1>>n2;
       v[n1].push_back(n2);
       v[n2].push_back(n1);
    }
    dfs(0,-1);

    dfs2(0,-1,0,0);
    for(i=0;i<n;++i)
        cout<<ans[i]<<" ";
    return 0;
}
