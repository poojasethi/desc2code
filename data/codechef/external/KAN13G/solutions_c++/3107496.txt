#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>

using namespace std;

typedef long long ll;
typedef unsigned int ul;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef pair<int, int> pi;
typedef vector <int, int> vii;
typedef set<int> si;
typedef set<string> ss;
typedef map<string,int>	msi;
typedef map<string,string> mss;
typedef map<int, vector<int> > mvii;
typedef map<string, vector <string> > mvss;
typedef map<char,int> mchi;
typedef map<int,char> mich;
typedef map<int, int> mii;
typedef queue <int> qi;
typedef queue <string> qs;
typedef map <int, vector<string> > mvis;

#define PI acos(-1)
#define ms(x,y) memset (x, y, sizeof x)
#define INF 2000000000
#define pb push_back
#define MAX 1000005
#define eps 0.000001

int main()
{
    int test, d[54], den, scene, debt, cases=1;
    double x;
    scanf("%d", &test);
    while (test--)
    {
        scanf("%d%d", &den, &scene);
        for (int i=0; i<den; i++)
        {
            scanf("%lf", &x);
            double y=x*1000.00;
            d[i]=y+eps;
            //cout<<d[i]<<endl;
        }
        sort(d,d+den);
        printf("Case %d:\n", cases++);
        for (int j=0; j<scene; j++)
        {
            scanf("%lf", &x);
            //cout<<x<<endl;
            double y=x*1000.00;
            debt=y+eps;
            //cout<<y<<endl;
            printf("Scenario %d:\n", j+1);
            for (int k=den-1; k>=0; k--)
            {
                //if (debt==0)    break;
                if (d[k]<=debt)
                {
                    int r=debt/d[k];
                    if (d[k]%1000==0)
                        cout<<(int)(d[k]/1000)<<" "<<r<<endl;
                    else
                    {
                        double A=(double)d[k]/1000.00;
                        printf("%0.2lf %d\n", A, r);
                    }
                    debt-=d[k]*r;
                    //cout<<debt<<endl;
                }
            }
        }
    }
    return 0;
}

/*

2
17 2
1000 500 200 100 50 20 10 5 2 1 0.5 0.25 0.2 0.1 0.05 0.02 0.01
5878.83
1000
3 1
1000 1 0.01
1000
*/
