//vicki's
//for practice of icpc kanpur site regionals on codechef on 14-12-2013

#include <stdio.h>
#include <set>

long long func(char * d)
{
	int i; bool flag = false;
	long long ans = 0;
	long long mult = 100;
	for (i = 0; d[i] != '\0'; ++i)
		if(d[i] == '.')
			flag = true;
	if(flag) mult = 1;
	while(i--)
		if(d[i] != '.')
		{
			ans = ans + mult*(d[i] - 48);
			mult = mult*10;
		}
	return ans;
}

int main()
{
	int t, n, m, cas, scen, i, j;
	long long denm, debt;
	char d[10];
	std::set<long long> denms; std::set<long long>::reverse_iterator rit;
	scanf("%d", &t);
	for(cas=1; cas<=t; cas++)
	{
		denms.clear();
		scanf("%d %d", &m, &n);
		for(i = 0; i < m; i++)
		{
			/*
			scanf("%f", &denm);
			denms.insert(int(100*denm));
			*/
			scanf("%s", d);
			//printf("%s\n", d);
			denms.insert(func(d));
		}
		printf("Case %d:\n", cas);
		for(scen=1; scen<=n; scen++)
		{
			scanf("%s", d);
			debt = func(d);
			printf("Scenario %d:\n", scen);
			for(rit = denms.rbegin(); rit != denms.rend(); rit++)
			{
				if(!debt) break;
				if(debt/(*rit))
				{
					if((*rit)>=100)
						printf("%lld %lld\n", (*rit)/100, debt/(*rit) );
					else
						printf("%.2f %lld\n", float(*rit)/float(100), debt/(*rit) );
					debt = debt%(*rit);
				}
			}
		}
	}
	return 0;
}