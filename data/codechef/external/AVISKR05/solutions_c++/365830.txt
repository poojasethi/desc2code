// #includes {{{
#include <algorithm>
#include <numeric>

#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <queue>
#include <deque>
#include <list>
#include <stack>
#include <set>
#include <map>

#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cassert>
#include <cstring>
#include <climits>

#include <cmath>
#include <complex>
using namespace std;
// }}}
// pre-written code {{{
#define REP(i,n) for(int i=0;i<(int)(n);++i)
#define RREP(i,a,b) for(int i=(int)(a);i<=(int)(b);++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define ALL(c) (c).begin(), (c).end()

typedef long long Int;
typedef long long ll;
typedef long double ld;
// }}}

const int MAX=16;
int N, M, K;
char in[MAX][MAX];
Int dp[MAX][1<<MAX];

string binary(int n){
	string ret="";
	REP(i,N){
		ret+=(n%2)+'0';
		n/=2;
	}
	return ret;
}

Int find(int i, int k, int bin){
	Int &ret=dp[i][bin];
	if(ret>=0)return ret;
	if(i+(K-k)>N)ret=0;
/*	cout<<i<<" "<<k<<" "<<binary(bin)<<endl;*/
	else if(k==K){
		ret=1;
	}else if(i==N){
		if(k<K)ret=0;
		else ret=1;
	}else{
		ret=0;
		ret+=find(i+1, k, bin);
		for(int j=0;j<M;j++){
			if(in[i][j]=='0' or (bin&(1<<j)))continue;
			int bin2=bin|(1<<j);
			//		cout<<i<<" bought "<<j<<endl;
			ret+=find(i+1, k+1, bin2);
		}
	}
/*	cout<<i<<" "<<k<<" "<<binary(bin)<<" "<<ret<<endl;*/
	return ret;
}

void main2(){
	scanf("%d%d%d",&N,&M,&K);
	REP(i,N)scanf("%s",in[i]);
	memset(dp, -1, sizeof(dp));
	printf("%lld\n",find(0,0,0));
}

int main() {
	int T;scanf("%d",&T);
	REP(ct, T){
		main2();
	}
	return 0;
}
// vim: fdm=marker:commentstring=\ \"\ %s:nowrap:autoread

