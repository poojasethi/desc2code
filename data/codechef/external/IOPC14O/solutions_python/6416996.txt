#include <iostream>
#include <map>
#include <stdio.h>

using namespace std;

#define inchar getchar_unlocked
#define inp(x) scanf("%d",&x)
/* 
inline void inp( int &n )
{
n=0;
int ch=inchar();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}

*/
pair<int,int> ii;

map<int,int> m;
map<int,int>::iterator it;

int gcd(int a, int b) {
  int tmp;
  while(b){a%=b; tmp=a; a=b; b=tmp;}
  return a;
}

int main() {
	// your code goes here
	
	int x = 1;
	
	for(int i=0;i<31;i++)
	 {
	     m[x] = i;
	     x = x*2;
	 }
	
	
	int test;
	cin>>test;
	
	while(test--)
	 {
	     int p,q;
	     inp(p);inp(q);
         int hcf = gcd(p,q);
         p = p/hcf;
         q = q/hcf;
         
	     int k,l;
	     
	     
	     it = m.find(q+1);
	     if(it != m.end())
	      {
	         l = it->second; 
	         it = m.find(p);
	         if(it!=m.end())
	          {
	              int x = it->second;
	              k = l-x;
	              if(k>=0)
	               {
	                 printf("YES\n");
	                 continue;
	               }
	               else
	               {
	                 printf("NO\n");
	                 continue; 
	               }
	              
	          }
	          else
	               {
	                 printf("NO\n");
	                 continue; 
	               }
	         
	      }
	      
	     if(p > 1)
	      {
	         printf("NO\n");
	         continue;  
	      }
	     int num = 1;
	     while(q%2 == 0)
	      {
	          
	           q = q/2;
	           num = num*2;
	      }
	      
	     if(m.find(q+1)!=m.end())
	           {
	               if(m.find(num)!=m.end())
	                {
	                    printf("YES\n");
	                    continue;
	                }
	           }
	    
	      printf("NO\n");
	                 
	     
	 }
	
	return 0;
}
