#include <bits/stdc++.h>
using namespace std;
//MACROS
#define ui unsigned int
#define ll long long
#define ull unsigned ll
#define ld long double
#define db double
#define pb push_back
#define mp make_pair
#define pii pair<int,int>
#define pll pair<ll , ll>
#define pil pair<int,ll>
#define F first
#define S second
#define ff first
#define ss second
#define vi vector<int>
#define vii vector< pii >
#define vll vector< ll >
#define mii map<int,int>
#define mll map<ll,ll>
#define mil map<int,ll>
#define mli map<ll,int>
#define si set<int>
#define sll set<ll>
#define vvi vector< vi >
#define vvl vector< vll >
#define vpll vector< pll >
#define mod 1000000007
const int maxn = 1e5+100;
int tot[maxn];
vi divisors[maxn];
int factor[maxn];
int fib[maxn];
void pre()
{
	fib[0] = 0;
	fib[1]=1;
	for(int i = 2;i<maxn;i++)
	{
		fib[i]=fib[i-1]+fib[i-2];
		if(fib[i]>=mod)
			fib[i]-=mod;
	}
	memset(factor,0,sizeof factor);
	for(int i = 2;i*i<maxn;i++)
	{
		if(!factor[i])
		{
			for(int j = i*i;j<maxn;j+=i)
			{
				factor[j] = i;
			}
		}
	}
	for(int i = 1;i<maxn;i++)
	{
		for(int j = i;j<maxn;j+=i)
		{
			divisors[j].pb(i);
		}
	}
	tot[1]=1;
	for(int i = 2;i<maxn;i++)
	{
		if(factor[i] == 0)
		{
			tot[i] = i-1;
			continue;
		}
		int x = factor[i],y = i/x;
		if(y%x == 0)
		{
			tot[i] = x*tot[y];
		}
		else
		{
			tot[i] = (x-1)*tot[y];
		}

	}
}
int ans(int n)
{
	n++;
	int ret = mod-1;
	for(int i = 0;i<divisors[n].size();i++)
	{
		int d = divisors[n][i];
		int num = tot[n/d];
		ret += (num*1ll*fib[d])%mod;
		if(ret>=mod)
			ret-=mod;
	}
	return ret;
}
int main()
{
	pre();
	int t,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		printf("%d\n",ans(n));
	}
	return 0;
}
