// SATA04
#include <iostream>
#include <vector>
#include <queue>
#include <bitset>
using namespace std;
typedef vector<int> VI;
typedef vector<VI> VVI;
const int inf = 1e9;
const int MAXN = 2000;
int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(0);
  int T; cin >> T;
  while (T--) {
    int N; cin >> N;
    vector<bitset<MAXN>> bs(N);
    vector<bitset<MAXN>> tmp(N);
    int dst = 0;
    int cty = 0;
    for (int i = 0; i < N; ++i) {
      for (int j = 0; j < N; ++j) {
        bool b; cin >> b;
        bs[i][j] = b;
      }
      bs[i][i] = 1;
      tmp[i] = bs[i];
      if (int(bs[i].count()) == N) {
        dst = 1;
        cty = i;
      }
    }
    if (N == 1) {
      cout << "0 1" << endl;
      continue;
    }
    bool found = false;
    for (int d = 1; d <= N && !found; ++d) {
      for (int i = 0; i < N && !found; ++i) {
        if (int(bs[i].count()) == N) {
          found = true;
          dst = d;
          cty = i;
        } else {
          for (int j = 0; j < N; ++j) if (bs[i][j]) {
            tmp[i] |= bs[j];
          }
        }
      }
      swap(tmp, bs);
    }
    cout << dst << ' ' << cty + 1 << endl;
  }
}
