/* 
 * File:   IGNUS14B.cpp
 * Author: anuraganand
 * Created on 25 February, 2014, 7:15 PM
 */

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>

using namespace std;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef long double ld;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0;(i) < (n);  ++i)
#define rept(i,a,b) for(var(i,a); i < (b); ++i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
#define fill(a,val) memset(a,val,sizeof(a))
#define gi(n) scanf("%d",&n);
#define all(v) v.begin(),v.end()

const int N = 100100;

bool isPrime[N];
int primesCount[N];
char str[N];

void pre() {
    fill(isPrime, 1);
    for(int i = 2; i * i <= N; i++) if(isPrime[i]) {
        for(int j = i * i; j < N; j += i) isPrime[j] = 0;
    }
    isPrime[0] = isPrime[1] = 0;
    primesCount[0] = primesCount[1] = 0;
    rept(i, 2, N) primesCount[i] = primesCount[i - 1] + isPrime[i];
}

int maxLen[N];

ll calc() {
    string s = "@#";
    int n = strlen(str);
    rep(i, n) {
        s.pb(str[i]); s.pb('#'); 
    }
    s.pb('&');
    int centre = 0, right = 0;
    fill(maxLen, 0);
    n = s.length();
    rept(i, 1, n - 1) {
        int j = 2 * centre - i;
        maxLen[i] = (right > i) ? min(right - i, maxLen[j]) : 0;
        while(s[i + 1 + maxLen[i]] == s[i - 1 - maxLen[i]]) maxLen[i]++;
        if(i + maxLen[i] > right) {
            centre = i;
            right = i + maxLen[i];
        }
    }
    ll primePalins = 0;
    rept(i, 2, n - 1) {
        if(s[i] == '#') {
            if(maxLen[i] >= 2) primePalins++;
        } else {
            assert(maxLen[i] & 1);
            if(primesCount[maxLen[i]] > 0) primePalins += primesCount[maxLen[i]] - 1;
        }
    }
    return primePalins;
}

int main(int argc, char** argv) {
#ifdef LOCAL
    freopen("in.txt", "r", stdin);
#endif
    pre();
    int tt; gi(tt);
    while(tt--) {
        scanf("%s", str);
        printf("%lld\n", calc());
    }
    return 0;
}
