#include<bits/stdc++.h>
using namespace std;
bool vis[1005], val;
vector<int> g[1005];
int l1, l2, i, j, ans, t, u, v, n, dp[50][50], src, dest;
char a[1005], b[1005], s[1005];
bool dfs(int src, int dest) {
    if(vis[src]) return false;
    if(dp[src][dest] != -1) return dp[src][dest];
    if(src == dest) {
        return true;
    }
    bool ans = false;
    vis[src] = true;
    for(int i = 0; i < g[src].size(); i++) {
        ans = ans || dfs(g[src][i], dest);
    }
    return ans;
}
int main() {
    scanf("%d", &t);
    while(t--) {
        scanf("%s%s", a, b);
        l1 = strlen(a);
        l2 = strlen(b);

        scanf("%d", &n);
        memset(dp, -1, sizeof dp);
        for(i = 0; i < n; i++) {
            scanf("%s", s);
            u = s[0] - 'a';
            v = s[3] - 'a';
            g[u].push_back(v);
            dp[u][v] = 1;
        }
        bool f = 1;
        memset(vis, 0, sizeof vis);
        if(l1 != l2) {
            f = 0;
        }

        for(i = 0; i < l1; i++) {
            if(!f) break;
            if(a[i] != b[i]) {
                memset(vis, 0, sizeof vis);
                src = a[i] - 'a';
                dest = b[i] - 'a';
                bool val;
                if(dp[src][dest] != -1) {
                    val = dp[src][dest];
                }
                else {
                    val = dfs(src, dest);
                    dp[src][dest] = val;

                }
                if(!val) {
                    f = 0;
                    break;
                }
            }
        }
        if(f) printf("YES\n");
        else printf("NO\n");
        for(i = 0; i < 26; i++) {
            g[i].clear();
        }

    }
    return 0;
}
