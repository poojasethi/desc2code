#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;


#define test()    int test_case;cin>>test_case;while(test_case--)
#define fr(i,n) for(int i=0;i<n;i++)
#define frr(i,a,n) for(int i=a;i<n;i++)
#define sll(a) scanf("%lld",&a)
#define sl(a) scanf("%ld",&a)
#define si(a) scanf("%i",&a)
#define sd(a)  scanf("%ld",&a)
#define sf(a) scanf("%f",&a)
#define rn(a) return a
#define pai pair<int,int>
#define pal pair<li,li>
#define pall pair<lli,lli>
#define ff first
#define ss second
#define mod  1000000007
#define mp make_pair
#define pb push_back
#define pll(a) printf("%lld\n",a)
#define pl(a) printf("%lld\n",a)
#define pi(a) printf("%d\n",a)
#define pd(a) printf("%lf\n",a)
#define pf(a) printf("%f\n",a)
#define lc (start+end)/2
#define rc  lc+1
list<int> li[10000];
int  visited[1000];

int dfs(int start,int end)
 {
 	stack<int> s;
 	s.push(start);
 	while(!s.empty())
 	 {
 	 	 int start=s.top();
 	 //	 cout<<"start "<<start<<endl;
 	 	 s.pop();
 	 	 list<int>:: iterator it;
 	 	 
 	 	 for(it=li[start].begin();it!=li[start].end();it++)
 	 	  {
 	 	//  	cout<<"vis "<<*it<<endl;
 	 	  	if(!visited[*it])
 	 	  	 {
 	 	  	 	 visited[*it]=1;
 	 	  	 	 if(*it==end)
 	 	  	 	  {
 	 	  	 	  	return 1;
					   }
					   else
					   s.push(*it);
				 }
			}
	  }
	  return 0;
 }
int main()
{
   test()
   {
   	char arr[10000];
   	char brr[10000];
   	 cin>>arr;
   	 cin>>brr;
   	  int con;
   	  cin>>con;
   	  for(int i=0;i<1001;i++)li[i].clear();
   	  for(int i=0;i<con;i++)
   	   {
   	   	    char a,b;
   	   	    char aa[10];
   	   	     cin>>aa;
   	   	     a=aa[0];
   	   	     b=aa[3];
   	   	     
   	   	    // cout<<a<<" "<<b<<endl;
   	   	   //  cout<<"pairing "<<a<<"      "<<b<<endl;
   	   	     li[a].push_back(b);
   	   	    
   	   	  
		  }
		  
		  int len1=strlen(arr);
		  int len2=strlen(brr);
		  if(len1!=len2)
		    {
		    	 cout<<"NO"<<endl;
		    	 continue;
			}
			int f=0;
		  for(int i=0;i<len1;i++)
		   {
		   	if(arr[i]!=brr[i])
		   	{
		   		memset(visited,0,sizeof(visited));
		   	int ans=	dfs(arr[i],brr[i]);
		   	if(ans==0)
			   {
			   	cout<<"NO"<<endl;
			   	f=1;
			   	break;
			   }
	
			   }
		   }
		   if(f==0)
		   {
		   	 cout<<"YES"<<endl;
		   }
   	 
   }
   return 0;
}
