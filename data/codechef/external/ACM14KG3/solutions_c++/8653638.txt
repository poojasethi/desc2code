#include <bits/stdc++.h>
using namespace std;
struct node
{
	int data;
	struct node *next;
};
typedef struct node node;

node *A[29];
int visited[29];

void adj_list(int vi,int vj)
{
	node *temp;
	temp=(node *)malloc(sizeof(node));
	temp->data=vj;
	temp->next=NULL;
	if(A[vi]==NULL)
		A[vi]=temp;
	else
	{
		temp->next=A[vi];
		A[vi]=temp;
	}
}

void dfs(int v)
{
	node *curr;
	visited[v]=1;
	//printf("%d-->",v);
	curr=A[v];
	while(curr!=NULL)
	{
		if(visited[curr->data]==0)
			dfs(curr->data);
		curr=curr->next;
	}
}

int main()
{
	int P,i,j,m,n,v1,v2,l1,l2, flag;
	string S, T, c;
	n=26;
	cin>>P;
	while(P--)
	{
		flag=0;
		for(i=0;i<28;i++)
			A[i]=NULL;
		memset(visited, 0, 4*27);
		cin>>S>>T;
		cin>>m;
		for(i=0;i<m;i++)
		{
			cin>>c;
			v1=c[0]-'a'+1;
			v2=c[3]-'a'+1;
			adj_list(v1,v2);
		}
		l1=S.size();
		l2=T.size();
		if(l1!=l2)
			cout<<"NO"<<endl;
		else
		{
			for(i=0;i<l1;i++)
			{
				memset(visited, 0, 4*27);
				dfs(S[i]-'a'+1);
				if(visited[T[i]-'a'+1]!=1)
				{
					flag=1;
					break;
				}
			}
			if(flag==1)
				cout<<"NO"<<endl;
			else
				cout<<"YES"<<endl;
		}
	}
	return 0;
}