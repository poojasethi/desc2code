#include <bits/stdc++.h>
using namespace std;
#define endl '\n'

bool vis[26] = {0};

bool dfs(vector< vector<int> > &G, int src, int tar)
{
	if(vis[src])
		return 0;
	if(src == tar)
		return 1;
	bool f = 0;
	vis[src] = 1;
	for (vector<int>::iterator i = G[src].begin(); i != G[src].end(); ++i)
	{
		f |= dfs(G, *i, tar);
		if(f)
			break;
	}
	return f;
}

int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
	cout.tie(0);
	int p;
	cin>>p;
	while(p--)
	{
		string s;
		cin>>s;
		string t;
		cin>>t;
		vector < vector <int> > G(26);
		int m;
		cin>>m;
		while(m--)
		{
			string tmp;
			cin>>tmp;
			G[tmp[0]-97].push_back(tmp[3]-97);
		}
		if(s.length() != t.length())
		{
			cout<<"NO\n";
			continue;
		}
		int len = s.length();
		bool f = 1;
		for (int i = 0; i < len; ++i)
		{
			fill(vis,vis+26,0);
			f = dfs(G, s[i]-97, t[i]-97);
			if(f == 0)
				break;
		}
		if(f)
			cout<<"YES\n";
		else
			cout<<"NO\n";
	}
	return 0;
}