#include<iostream>
#include<vector>
#include<string.h>
using namespace std;

vector<int> vec[26];
bool visited[26];

bool dfs (int v, int t)
{
	if (visited[v])
		return 0;
	if (t==v)
		return 1;
	visited[v]=1;
	for (vector<int>::iterator itr=vec[v].begin();itr!=vec[v].end();itr++)
		if (dfs(*itr,t))
			return 1;
	return 0;
}

int main()
{
	int p,i,m;
	cin>>p;
	while (p--)
	{
		for (i=0;i<26;i++)
			vec[i].clear();
		char s[10],a[1010],b[1010],x,y;
		cin>>a>>b;
		cin>>m;
		while (m--)
		{
			cin>>s;
			x=s[0];
			y=s[3];
			vec[x-97].push_back(y-97);
		}
		if (strlen(a)!=strlen(b))
		{
			cout<<"NO\n";
			continue;
		}
		for (i=0;a[i];i++)
		{
			for (int j=0;j<26;j++)
				visited[j]=0;
			if (!dfs(a[i]-97,b[i]-97))
				break;
		}
		if (a[i])
			cout<<"NO\n";
		else
			cout<<"YES\n";
	}
	return 0;
}