Sita went to buy some crackers. They offered special discount for the ones who solve a puzzle. Sita could not solve it, she came to you for help. Following is the puzzle.
A mapping "a->b" means that you can transform letter 'a' to letter 'b'. You are given M such mappings.
You are given two strings S and T.
Write a program which determines if S can be transformed to T using the provided mappings.
You can select any position in S and apply any of the M mappings on it. You can do this any number of times. Each mapping can be used any number of times.

Input
The first line of the input contains an integer P denoting the number of test cases.
First line of each test case has the string S. Second line of each test case has the string T
Third line of each test case has M. Following M lines describes the mappings, one per line.

Output
For each test case output one line, print "YES" if it is possible to transfrom S to T. print "NO" if not possible.

Constraints

1 ≤ P ≤ 1000
1 ≤ |S|, |T| ≤ 1000
0 ≤ M ≤ 1000
S and T contain lower case English alphabet only
All mappings are from lower case English alphabet to lower case English alphabet
Length of S and T need not be equal.


Example
Input:
3
aa
bb
1
a->b
ab
ba
2
a->b
b->a
a
b
1
b->a
Output:
YES
YES
NO

Explanation
Test case #1:
Clearly 'a' can be transformed to 'b'. So "aa" can be transformed to "bb"

Test case #2:
'a' can be transformed to 'b' by using mapping 1. 'b' can be transformed to 'a' by using mapping 2
Test case #3:
'b' can be transformed to 'a' but 'a' cannot be transformed to 'b'. So it is not possible.
