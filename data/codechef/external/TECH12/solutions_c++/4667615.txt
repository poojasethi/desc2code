#include<cstdio>
#include<stdio.h>
#include<algorithm>
using namespace std;
#define M 100009
#define Int long long
int primes[M],index[M];
void sieve()
{
   unsigned long long int i,j,count=0;
  for (i=2;i<M;i++)
        primes[i]=1;

    for (i=2;i<M;i++)
        {
            if (primes[i])
            {
                count++;
                for (j=i*i;j<M;j+=i)
                primes[j]=0;
            }
            index[i]=count;
        }
}
int binary(int start,int n,int key)
{
    if(index[n]<key)return 0;
    int end=n,ans=-1;
    while(start<=end)
    {
        int mid=(start+end)/2;//(end-start)/2;
        if(index[mid]>=key)
        {
            ans=mid;end=mid-1;
        }
        else start=mid+1;
    }
    return n-ans+1;
}
int main()
{
    sieve();
    int t,n,k;
    scanf("%d",&t);
    while(t--){
        int i,j;long long sum=0;
    scanf("%d %d",&n,&k);
    /*if(k==0){
    sum=(n*(n-1))/2;printf("%d\n",sum);continue;}
    if(k>9592)
    {
        printf("0\n");continue;
    }*/
    for(i=2;i<=n;i++)
    {
        if(primes[i] && k)sum+=binary(i,n,index[i]+k-1);
        else
        sum+=binary(i,n,index[i]+k);//printf("%lld ",sum);
    }
    printf("%lld\n",sum);
    }
    return 0;
}
