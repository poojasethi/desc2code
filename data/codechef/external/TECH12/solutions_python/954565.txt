    #include<stdio.h>
    #include<stdlib.h>
    #define MAX 100000
    #define Test(i) (sieve[i>>5]&(1<<(i&31)))
    #define SET(i) (sieve[j>>5] |=(1<<(j&31)))
     
     
    int primes[9592];
    int sieve[3126];
     
    int svprime();
     
     
    int svprime()
    {
    int i,j,k,l;
    int count;
    i = 5;
    for(k=1;i*i<=MAX;k++)
    {
    i = (6*k -1);
    if(Test(i)==0)for(j=i*i;j<=MAX;j=j+(i*2))SET(j);
    i = (6*k+1);
    if(Test(i)==0)for(j=i*i;j<=MAX;j=j+(i*2))SET(j);
    }
     
    primes[0] = 2;
    primes[1] = 3;
    count = 2;
    for(j=1;count<9592;j++)
    {
    i = (6*j)-1;
    if(Test(i)==0)
    primes[count++]=i;
    i = (6*j)+1;
    if(Test(i)==0)
    primes[count++]=i;
    }
    //for(i=0;i<=10;i++)
    // printf("%d ",primes[i]);
    //printf("\n\n");
    return 0;
    }
     
    main()
    {
    int i,N,K,tc;
    unsigned long long int sum,low,high;
    svprime();
     
    scanf("%d",&tc);
     
    while(tc--)
    {
    scanf("%d%d",&N,&K);
    if(K==0)
    {
    sum=N-2;
    sum*=(sum+1);
    sum /=2;
    sum+=N-2+1;
    printf("%llu\n",sum);
    continue;
    }
    if(K>9592)
    {
    printf("0\n");
    continue;
    }
    if(primes[K-1]<=N)
    sum=N-primes[K-1]+1;
    else
    sum = 0;
    for(i=1;i<9592;i++)
    {
    if(i+K-1>=9592||primes[i+K-1]>N)
    break;
    low = primes[i]-primes[i-1];
    high = N-primes[i+K-1]+1;
    sum = sum+(low*high);
    }
    printf("%llu\n",sum);
    }
    return 0;
    }

