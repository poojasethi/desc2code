#include<bits/stdc++.h>
using namespace std;
 
#define LET(x, a)  __typeof(a) x(a)
#define TR(v, it) for(LET(it, v.begin()); it != v.end(); it++)
#define si(x) scanf("%d",&x)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define MOD 1000000007
#define SET(x,y) memset(x,y,sizeof(x));
#define LL long long int
#define ULL unsigned LL
#define PII pair<int, int>
int cap[303][303];
int A[103];
int B[103][103];
bool vis[1003];
int N;
int source,sink;
bool aug(int u, int v)
{
    if(vis[u])
        return false;
    if(u==v)
        return true;
    vis[u] = true;
    for(int i=0;i<=N;i++)
    {
        if(cap[u][i]>0 && aug(i,v))
        {
            cap[u][i] -= 1;
            cap[i][u] += 1;
            return true;
        }
    }
    return false;
}
int maxflow()
{
   memset(vis,false,sizeof vis);
   int f = 0;
   while(aug(source,sink))
   {
       f+=1;
       memset(vis,false,sizeof vis);
   }
   return f;
}
int main() {
    int t;
    cin>>t;
    for(int kase=1;kase<=t;kase++)
    {
        memset(cap,0,sizeof cap);
        int K,M;
        cin>>K>>M;
        for(int i=0;i<K;i++)
            cin>>A[i];
        for(int i=0;i<M;i++)
            for(int j=0;j<K;j++)
                cin>>B[i][j];
        source = M+K+1;
        sink = M+K+2;

        for(int i=0;i<K;i++)
        {
            cap[source][i] = A[i];
            cap[i][sink] = 1;
        }

        for(int i=0;i<M;i++)
            for(int j=0;j<K;j++)
            {
                if(B[i][j]==0) // if the ith person doesn't have jth item
                {
                    cap[j][i+K] += 1;
                }
                else
                    if(B[i][j]>1) // if the ith person have a duplicate of this item
                    {   
                        cap[i+K][j] += B[i][j]-1;
                    }
            }

        N = sink;

        cout<<"Case "<<kase<<": "<<maxflow()<<endl;

    }
    return 0;
}

