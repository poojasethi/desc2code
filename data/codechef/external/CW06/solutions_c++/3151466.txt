#include<iostream>
#include<stdio.h>
#include<map>
#include<iterator>
#include<algorithm>
#define MAX(a,b) (a>b)?a:b
#define MIN(a,b) (a>b)?b:a
 
typedef unsigned long long int ullint;
typedef long long int llint;
using namespace std;
 
map<llint,llint> customMap;
 
llint maxCal(llint number)
{
    if(number==1)   return 1;
    if(number==0)   return 0;
    map<llint,llint>::iterator iter = customMap.find(number);
    llint result;
    if(iter!=customMap.end())   //found in the map
    {
        //cout<<"returning "<<iter->second<<endl;
        return iter->second;
    }
    result = MAX(number,maxCal(number/2)+maxCal(number/3)+maxCal(number/4));
    customMap.insert(pair<llint,llint>(number,result));
    //cout<<"returning "<<result<<endl;
    return result;
}
 
int main()
{
    llint number,m;
    while(scanf("%lld",&number)!=EOF)       //using the return property of scanf
    {
        m=maxCal(number);
        m=MAX(m,number);
        cout<<m<<endl;
    }
    return 0;
}