#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <algorithm>
#include <numeric>
#include <utility>
#include <sstream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cassert>
#include <climits>
#include<iostream>
//#include <ext/hash_map>
//#include<tr1/random>
 
using namespace std;
using namespace __gnu_cxx;
 
#define REP(i,n) for(int i = 0; i < int(n); ++i)
#define REPV(i, n) for (int i = (n) - 1; (int)i >= 0; --i)
#define FOR(i, a, b) for(int i = (int)(a); i < (int)(b); ++i)
 
#define FE(i,t) for (__typeof((t).begin())i=(t).begin();i!=(t).end();++i)
#define FEV(i,t) for (__typeof((t).rbegin())i=(t).rbegin();i!=(t).rend();++i)
 
#define two(x) (1LL << (x))
#define ALL(a) (a).begin(), (a).end()

#define pb push_back
#define ST first
#define ND second
#define MP(x,y) make_pair(x, y)
 
typedef long long ll;
typedef unsigned long long ull;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<string> vs;

void p(int a[],int n){
	REP(i,n)
		printf("%d ",a[i]);
	printf("\n");
	return;
}

void p(char a[],int n){
	REP(i,n)
		printf("%c ",a[i]);
	printf("\n");
	return;
}

void swap(void *vp1,void *vp2,int size){
		char temp[size];
		memcpy(temp,vp1,size);
		memcpy(vp1,vp2,size);
		memcpy(vp2,temp,size);
		return;
}

void print_palin(string a,int len){
	int mid,i,flag = 0; 
	if(len%2==0){
		flag = 0;
		i = (len/2)-1;
		while(i>=0){
			if(a[i]>a[len-1-i]){
				flag = 1;
				break;
			}
			if(flag==0 && a[i]<a[len-1-i])
				break;
			i--;
		}
		if(flag == 1){
			for(i=0;i<len/2;i++)
				printf("%c",a[i]);
			i--;
			for(;i>=0;i--)
				printf("%c",a[i]);
			printf("\n");
		}	
		else
		{
			i=len/2-1;
			a[i]=a[i]+1;
			while(a[i]==':' && i>0)
			{
				a[i]='0';
				i--;
				a[i]=a[i]+1;
			}
			if(i==0 && a[i]==':')
			{
				printf("1");
				for(int k=0;k<len-1;k++)
					printf("0");
				printf("1");
			}
			else
			{
				for(i=0;i<len/2;i++)
					printf("%c",a[i]);
				i--;
				for(;i>=0;i--)
					printf("%c",a[i]);
			}
			printf("\n");
		}
	}

	else
	{
		flag = 0;
		mid = a[len/2];
		i = (len/2)-1;
		while(i>=0){
			if(a[i]>a[len-1-i]){
				flag = 1;
				break;
			}
			if(flag==0 && a[i]<a[len-1-i])
				break;
			i--;
		}
		if(flag == 1){
			for(i=0;i<=len/2;i++)
				printf("%c",a[i]);
			i=i-2;
			for(;i>=0;i--)
				printf("%c",a[i]);
			printf("\n");
		}	
		else
		{
			i=(len/2);
			a[i]=a[i]+1;
			while(a[i]==':' && i>0)
			{
				a[i]='0';
				i--;
				a[i]=a[i]+1;
			}
			if(i==0 && a[i]==':')
			{
				printf("1");
				for(int k=0;k<len-1;k++)
					printf("0");
				printf("1");
			}
			else
			{
				for(i=0;i<=len/2;i++)
					printf("%c",a[i]);
				i=i-2;
				for(;i>=0;i--)
					printf("%c",a[i]);
			}
			printf("\n");
		}
	}
}

bool isPalindrome(string a){
	int left=0,right=a.length()-1;
	bool flag=1;
	while(left<right){
		if(a[left]!=a[right]){
			flag=0;
			break;
		}
		left++;
		right--;
	}
	return flag;
}

int main(){
	int test,n,i,len,flag;
	std::string a;
	for(scanf("%d",&test);test>0;test--){
		cin >> a;
		len = a.size();
		if(isPalindrome(a))
			cout << a << endl;
		else
			print_palin(a,len);
	}
	return 0;
}


