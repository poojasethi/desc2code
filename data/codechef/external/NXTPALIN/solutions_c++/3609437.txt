#include<iostream>
#include<cstdlib>
#include<cstring>
using namespace std;

void reverse(char str[], int length)
{
	int start = 0;
	int end = length - 1;
	while (start < end)
	{
		swap(*(str + start), *(str + end));
		start++;
		end--;
	}
}

char *itoa(long long num, char *str, int base)
{
	int i = 0;
	bool isNegative = false;
	/* Handle 0 explicitely, otherwise empty string is printed for 0 */
	if (num == 0)
	{
		str[i++] = '0';
		str[i] = '\0';
		return str;
	}
	// In standard itoa(), negative numbers are handled only with
	// base 10. Otherwise numbers are considered unsigned.
	if (num < 0 && base == 10)
	{
		isNegative = true;
		num = -num;
	}
	// Process individual digits
	while (num != 0)
	{
		int rem = num % base;
		str[i++] = (rem > 9) ? (rem - 10) + 'a' : rem + '0';
		num = num / base;
	}
	// If number is negative, append '-'
	if (isNegative)
		str[i++] = '-';
	str[i] = '\0';				// Append string terminator
	// Reverse the string
	reverse(str, i);
	return str;
}

int Palin(int N)
{
	char c[1000];
	itoa(N, c, 10);
	int i, j;

	i = 0, j = strlen(c) - 1;

	while (i < j)
	{
		if (c[i] != c[j])
			return 0;

		i++;
		j--;
	}

	return 1;
}

int main(void)
{
	int T, N;

	scanf("%d", &T);

	while (T--)
	{
		scanf("%d", &N);

		while (!Palin(N))
		{
			N++;
		}

		printf("%d\n", N);
	}

	return 0;
}