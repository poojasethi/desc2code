#include <vector>
#include <cstdio>
#include <string>
#include <ctime>
#include <map>
#include <list>
#include <cmath>
#include <stack>
#include <set>
#include <queue>
#include <cstdlib>
#include <cstring>
#include <utility>
#include <cassert>
#include <iostream>
#include <sstream>
#include <algorithm>

using namespace std;

#define PB push_back
#define MP make_pair
#define ALL(v) v.begin(),v.end()
#define IT(i,v) __typeof(v.begin()) i;
#define FILL(a,val) memset(a,val,sizeof(a))
#define FOR(i,a,b) for(__typeof(a) i = (a); i < (b) ; i++)
#define FORR(i,a,b) for(__typeof(a) i = (a); i >= (b) ; i--)
#define MAX(a,b) (a) > (b) ? (a) : (b)
#define MIN(a,b) (a) < (b) ? (a) : (b)
#ifdef LOCAL
#define trace(a)	cerr << #a << " -> " << a << "\t";
#define debug1(a)	{trace(a);cerr << endl;}
#define debug2(a,b)	{trace(a);trace(b);cerr << endl;}
#define debug3(a,b,c)	{trace(a);trace(b);trace(c);cerr << endl;}
#define debug4(a,b,c,d)	{trace(a);trace(b);trace(c);trace(d);cerr << endl;}
#else
#define debug1(args...);
#define debug2(args...);
#define debug3(args...);
#define debug4(args...);
#endif

typedef vector<int> VI;
typedef pair<int,int> PII;
typedef long long LL;

#define MAXN 100010

LL A[MAXN];
LL sum[MAXN];

inline LL getSum(int l,int r) {
	if(l == 0) return sum[r];
	else return sum[r] - sum[l-1];
}

int check(int low,int high,LL amount,LL val) {
	if(low == high) {
		if(val - A[low] <= amount) return 1;
		else return 0;
	}
	int range = high - low + 1;
	if((LL)range * val <= amount) return range;
	else {
		int mid = (low + high) / 2;
		int r1 = mid - low + 1,r2 = high - mid;
		LL a1 = (LL)r1 * val - getSum(low,mid);
		LL a2 = (LL)r2 * val - getSum(mid+1,high);
		if(amount - a2 >= 0) return r2 + check(low,mid,amount-a2,val);
		else return check(mid+1,high,amount,val);
	}
}

int main(){
	#ifdef LOCAL
	freopen("in.txt","r",stdin);
	#endif
	int n,k;
	scanf("%d %d",&n,&k);
	for(int i=0;i<n;i++) {
		scanf("%lld",A+i);
		if(i == 0) sum[i] = A[i];
	}
	sort(A,A+n);
	sum[0] = (LL)A[0];
	for(int i=1;i<n;i++) sum[i] = sum[i-1] + (LL)A[i];
	int ans = 0;
	for(int i=0;i<n;i++) {
		int m = check(0,i,k,A[i]);
		if(ans < m) {
			ans = m;
		}
	}
	printf("%d\n",ans);
	return 0;
}