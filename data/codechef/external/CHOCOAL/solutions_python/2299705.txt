#include<stdio.h>
int fastio()
{
int t=0;
char ch;
ch=getchar_unlocked();
while(ch<'0'||ch>'9')
ch=getchar_unlocked();
while(ch<='9'&& ch>='0')
{
 t=t*10+ch-'0';
 ch=getchar_unlocked();
 }
 return t;
} 
void copy(int ori[],int cop[],int low,int high);
void merge(int ori[],int cop[],int low,int mid,int high);
void mergesort(int ori[],int cop[],int low,int high)
{
    int mid;
    mid=(low+high)/2;
    if(low==high)
    return;
    else
    {
        mergesort(ori,cop,low,mid);
        mergesort(ori,cop,mid+1,high);
        merge(ori,cop,low,mid,high);
        copy(ori,cop,low,high);
    }        
}
void merge(int ori[],int cop[],int low,int mid,int high)
{
    int k,m,i,j;
    i=low;
    j=mid+1;
    k=low;
    while(i<=mid && j<=high)
    {
        if(ori[i]>ori[j])
        {
         cop[k]=ori[i];
         k++;
         i++;
        }
        else
        {
            cop[k]=ori[j];
            k++;
            j++;
        }
    }
    if(i<=mid)
    {
         for(m=i;m<=mid;m++)
         {
         cop[k]=ori[m];
         k++;
         }
    }
    if(j<=high)
    {
        for(m=j;m<=high;m++)
        {
        cop[k]=ori[m];
        k++;
        }
    }
}
void copy(int ori[],int cop[],int low,int high)
{
    int i;
    for(i=low;i<=high;i++)
    ori[i]=cop[i];
}
int main()
{
 int pm,max,temp,arr[100003],copy[100003],i,j,ans,ct,n,k;
 scanf("%d%d",&n,&k);
 for(i=1;i<=n;i++)
 arr[i]=fastio();
 mergesort(arr,copy,1,n);
 max=1;
  int pr=-1;
 for(i=1;(i<=n-1 && (max+i-1)<=n);i++)
 {
 if(arr[i]==pr)
 continue;
     temp=k;
     pm=0;
     ct=1;
     for(j=i+1;((pm==0 &&j<=n) && temp>0);j++)
     {
         if(arr[i]-arr[j]<=k)
         {
             ct++;
             temp=temp-(arr[i]-arr[j]);
          }
          else
          pm=1;
     }
     if(temp<0)
     ct--;
     if(ct>max)
     max=ct;
     pr=arr[i];
 }
 printf("%d\n",max);
 return 0;
}