//#include<bits/stdc++.h>
#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <queue>
#include <stack>
#include <cstring>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <set>
using namespace std;
#define w(t) while(t--)
#define S(x) scanf("%d",&x)
#define SLL(x) scanf("%lld",&x)
#define P(x) printf("%d\n",x)
#define fl(i , a, b) for(i = (int)a; i<(int)b; i++)
#define mem(a , value) memset(a , value , sizeof(a))
#define tr(c, itr) for(itr = (c).begin(); itr != (c).end(); itr++)
#define MOD 1000000007
#define MAX 1000000010
#define ll long long
#define all(v) v.begin(),v.end()
#define mp make_pair
#define pb push_back
#define f first
#define s second
typedef pair<int,int> pp;
ll a[1002][1002];
ll dp[1002][1002];
void ncr()
{
	int i , j ;
	for(i =0 ;i <= 23 ; i++)
	{
		for(j =0 ; j<= i ; j++)
		{
			if(i == 0 || j ==0 ) dp[i][j] =1;
			else
				dp[i][j] = (dp[i-1][j-1] + dp[i-1][j]); 
		}
	}
	// cout << dp[7][3] <<endl;
}
int main()
{
	//std::ios_base::sync_with_stdio(false);
	int n  ,i , j ;
	ncr();
	S(n);
	fl(i ,1 , n+1)
	{
		fl(j , 1 , n+1) SLL(a[i][j]);
	}
	ll ans =0 ;
	for(i = 1; i<=n ; i++)
	{
		for(j = i+1; j<= n ;j++)
		{
			// i - j edge . 
			for(int size =2 ; size <= n; size++)
			{
				int p = size-2; 
				ll ways = dp[n-2][p];
				ans = ans + (a[i][j] * ways * (int(sqrt(size)))); 
			}
		}
	}
	cout << ans <<endl ;
	return 0;
}