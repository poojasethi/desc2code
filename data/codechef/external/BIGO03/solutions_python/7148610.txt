//Matrix multiplication 
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define mem(a,val) memset(a,val,sizeof(a))
#define nl printf("\n");
#define pb push_back
#define mp make_pair
//#define f first
//#define s second
#define cf I64
using namespace std;
LL mat[5][5],temp[5][5],ans[5][5];
LL t3,t2,t1,a,b,c,d;
void multiply_matrix(LL n)
{	LL i,j,k,val;
	while(n>0)
	{	if(n%2==0)
		{	//mat[][]*mat[][]
			for(i=1;i<=4;i++)
			{	for(j=1;j<=4;j++)
				{	temp[i][j]=0;
					for(k=1;k<=4;k++)
						temp[i][j]=(temp[i][j]%mod+(mat[i][k]%mod*mat[k][j]%mod)%mod)%mod;
				}
			}
			for(i=1;i<=4;i++)
				for(j=1;j<=4;j++)
					mat[i][j]=temp[i][j]%mod;
			n/=2;
		}
		else if(n%2==1)
		{	//ans[][]*mat[][]
			for(i=1;i<=4;i++)
			{	for(j=1;j<=4;j++)
				{	temp[i][j]=0;
					for(k=1;k<=4;k++)
						temp[i][j]=(temp[i][j]%mod+(ans[i][k]*mat[k][j])%mod)%mod;
				}
			}
			for(i=1;i<=4;i++)
				for(j=1;j<=4;j++)
					ans[i][j]=temp[i][j]%mod;
			n--;	
		}
	}
	//Find ans
	val=(ans[1][1]*t3)%mod;
	val=(val+(ans[1][2]*t2)%mod)%mod;
	val=(val+(ans[1][3]*t1)%mod)%mod;
	val=(val+(ans[1][4]*d)%mod)%mod;
	cout<<val<<endl;
}
int main()
{	LL t,i,j,n;
	cin>>t;
	while(t--)
	{	cin>>a>>b>>c>>d;
		cin>>t1>>t2>>t3;
		cin>>n;
		if(n==1)		cout<<t1;
		else if(n==2)	cout<<t2;
		else if(n==3)	cout<<t3;
		else 
		{	//Create matrix
			mem(mat,0);
			mem(ans,0);
			mat[1][1]=a;mat[1][2]=b;mat[1][3]=c;mat[1][4]=1;
			mat[2][1]=mat[3][2]=mat[4][4]=1;
			for(i=1;i<=4;i++) ans[i][i]=1;
			multiply_matrix(n-3);
		}
	}
	return 0;
}
