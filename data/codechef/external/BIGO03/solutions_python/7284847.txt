#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
 
using namespace std;
 
typedef long long int64;
typedef unsigned long long uint64;
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
const double pi=acos(-1.0);
const double eps=1e-11;
template<class T> inline void checkmin(T &a,T b){if(b<a) a=b;}
template<class T> inline void checkmax(T &a,T b){if(b>a) a=b;}
template<class T> inline T sqr(T x){return x*x;}
typedef pair<int,int> ipair;
#define SIZE(A) ((int)A.size())
#define LENGTH(A) ((int)A.length())
#define MP(A,B) make_pair(A,B)
#define PB(X) push_back(X)
 
const int MOD=1000000007;
 
#define MUL(a,b) ((int)(((int64)(a)*(b))%MOD))
 
void multiply(int c[4][4],int a[4][4],int b[4][4])
{
int t[4][4];
for (int i=0;i<4;i++) for (int j=0;j<4;j++)
{
int64 s=0;
for (int k=0;k<4;k++) s+=MUL(a[i][k],b[k][j]);
t[i][j]=(int)(s%MOD);
}
for (int i=0;i<4;i++) for (int j=0;j<4;j++) c[i][j]=t[i][j];
}
 
int fast_power(int p,int64 e)
{
int r=1;
for (;e>0;e>>=1)
{
if (e&1) r=MUL(r,p);
p=MUL(p,p);
}
return r;
}
 
int main()
{
   long long int t;
   cin>>t;
   while(t--)
   {  
      long long int a,b,c,d,e,f,g,h;
      cin>>a>>b>>c>>d>>e>>f>>g>>h;
      int m1[4][4];
      int m2[4][4];
      memset(m1,0,sizeof(m1));
      memset(m2,0,sizeof(m2));
      m2[0][0]=a;m2[0][1]=b;m2[0][2]=c;m2[0][3]=d;
      m2[1][1]=m2[1][2]=m2[1][3]=m2[2][0]=m2[2][2]=m2[2][3]=m2[3][0]=m2[3][1]=m2[3][2]=0;
      m2[1][0]=m2[2][1]=m2[3][3]=1;
      for(int i=0;i<=3;i++)
      m1[i][i]=1;
      long int n=h;
      if(n==1){cout<<e<<endl;continue;}
      if(n==2){cout<<f<<endl;continue;}
      if(n==3){cout<<g<<endl;continue;}
      
      n-=3;
      	for (;n>0;n>>=1)
         {
            if (n&1) multiply(m1,m1,m2);
            multiply(m2,m2,m2);
         }
         long long int ans=(MOD+m1[0][0]*g+m1[0][1]*f+m1[0][2]*e+m1[0][3])%MOD;
         cout<<ans<<endl;
   }  
}
