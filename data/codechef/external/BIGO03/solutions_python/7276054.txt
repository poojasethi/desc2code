#include<iostream>
#include<cstdio>
#define MOD 1000000007
using namespace std;
long long z[4][4],k[4],dp[4][4];
void power(long long n)
{
	long long t[4][4],i,j,k,c;

	if (n == 1)
		return;
	long long x = n / 2;
	power(n / 2);
	for (i = 0; i < 4; i++)
	{
		for (j = 0; j < 4; j++)
		{
			t[i][j] = 0;
			for (k = 0; k < 4; k++)
			{
				t[i][j] = (t[i][j] + (dp[i][k] * dp[k][j]) % MOD)%MOD;
			}
		}
	}
	if (n % 2)
	{
		for (i = 0; i < 4; i++)
		{
			for (j = 0; j < 4; j++)
			{
				dp[i][j] = 0;
				for (k = 0; k < 4; k++)
				{
					dp[i][j] = (dp[i][j] + (t[i][k] * z[k][j]) % MOD) % MOD;
				}
			}
		}
		return;
	}
	for (i = 0; i < 4; i++)
	{
		for (j = 0; j < 4; j++)
			dp[i][j] = t[i][j];
	}
	return;
}
int main()
{
	int t;
	cin >> t;
	int i, j;
	
	long long a, b, c, d, f1, f2, f3, n,ans;
	while (t--)
	{
		cin >> a >> b >> c >> d >> f1 >> f2 >> f3 >> n;
		if (n == 1)
		{
			cout << f1 << endl; continue;
		}
		if (n == 2)
		{
			cout << f2 << endl; continue;
		}
		if (n == 3)
		{
			cout << f3 << endl; continue;
		}
		for (i = 0; i < 2; i++)
		{
			for (j = 0; j < 4; j++)
			{
				if (i + 1 == j)
					dp[i][j] = z[i][j] = 1;
				else dp[i][j] = z[i][j] = 0;
			}
		}
		dp[2][0]=z[2][0] = c;
	
		dp[2][1]=z[2][1] = b;
		dp[2][2]=z[2][2] = a;
		dp[2][3]=z[2][3] = 1;
	     dp[3][0]=dp[3][1]=dp[3][2]=	z[3][0] = z[3][1] = z[3][2] = 0;
		dp[3][3]=z[3][3] = 1;
		k[0] = f1;
		k[1] = f2;
		k[2] = f3;
		k[3] = d;
		
		power(n - 3); ans = 0;
		for (i = 0; i < 4; i++)
		{
			ans = (ans + (dp[2][i] * k[i]) % MOD) % MOD;
		}
		cout << ans << endl;
	}
	return 0;
}