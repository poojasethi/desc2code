#include<iostream>
#include<stdio.h>
#include<limits.h>
using namespace std;
int count;
int store_count[21][21];
struct abc
{
    int num[10005];
    int index[10005];
} A[21];
void merge(int temp[],int low,int middle,int high)
{
    int lend=low,j=0;
    int rend=middle+1;
    int temp2[high-low+1];
    while(lend<=middle && rend<=high)
    {
        if(temp[lend]<=temp[rend])
        {
            temp2[j]=temp[lend];
            j++;
            lend++;
        }
        else
        {
            count+=middle-lend+1;
            temp2[j]=temp[rend];
            j++;
            rend++;
        }
    }
    while(lend<=middle)
    {
        temp2[j]=temp[lend];
        j++;
        lend++;
    }
    while(rend<=high)
    {
        temp2[j]=temp[rend];
        j++;
        rend++;
    }
    for(int i=0;i<j;i++)
        temp[low+i]=temp2[i];
}
void merge_sort(int temp[],int low,int high)
{
    int middle=(low+high)/2;
    if(low<high)
    {
        merge_sort(temp,low,middle);
        merge_sort(temp,middle+1,high);
        merge(temp,low,middle,high);
    }
}
int main()
{
    int n,m,i,j,k,min,ans;
    scanf("%d%d",&n,&m);
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
        {
            scanf("%d",&A[i].num[j]);
            A[i].index[A[i].num[j]]=j+1;
        }
    int temp[m];
    min=INT_MAX;
    for(i=0;i<n;i++)
    {
        store_count[i][i]=0;
        ans=0;
        for(j=0;j<i;j++)
            ans+=store_count[i][j];
        for(j=i+1;j<n;j++)
        {
            if(j==i)
                continue;
            for(k=0;k<m;k++)
                temp[k]=A[i].index[A[j].num[k]];
            count=0;
            merge_sort(temp,0,m-1);
            ans+=count;
            store_count[i][j]=count;
            store_count[j][i]=count;
        }
        if(min>ans)
            min=ans;
    }
    printf("%d\n",min);
    return 0;
}
