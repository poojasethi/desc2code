#include<bits/stdc++.h>
using namespace std;

#define lli long long
#define pb push_back

const int lmt = 15;
lli dp[1<<15][1005]; //mask,rem
vector<int> dig;
int cnt[lmt];
lli k,d,n;
int sz;

lli solve(int mask,int rem) {
    if(mask==pow(2,sz)-1){
        if(rem==k) return 1;
        return 0;
    }
    lli &res = dp[mask][rem];
    if(res != -1) return res;
    res = 0;
    for(int i=0;i<dig.size();i++){
        if(mask&(1<<i)) continue;
        res += solve(mask|(1<<i),(rem*10+dig[i])%d);
    }
    return res;
}

lli fact(int x){
    lli ans=1;
    for(int i=1;i<=x;i++)
        ans *= (long long)i;
    return ans;
}

int main() {
    memset(dp,-1,sizeof(dp));
    scanf("%lld %lld %lld",&n,&d,&k);
    if(n==0){
        if(k==0)
            printf("1\n");
        else
            printf("0\n");
        return 0;
    }
    while(n>0) {
        dig.pb(n%10);
        cnt[n%10]++;
        n /= 10;
    }
    sz = dig.size();
    sort(dig.begin(),dig.end());
    reverse(dig.begin(),dig.end());
    lli num = solve(0,0);
    for(int i=0;i<=9;i++)
        num /= fact(cnt[i]);
    printf("%lld\n",num);
    return 0;
}
