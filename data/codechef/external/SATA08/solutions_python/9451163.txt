#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define all(s) s.begin(),s.end()
#define present(c,x) ((c).find(x) != (c).end())
const double EPS = 1e-8;
const int mod = 1e9+7;
const int N = 1e6+10;
const ll INF = 1e18;

//#define DEBUG
ll power(ll x,ll y){
  ll t=1;
  while(y>0){
    if(y%2) y-=1,t=t*x%mod;
    else y/=2,x=x*x%mod;
  }
  return t;
}
#ifdef DEBUG
#define dprintf(fmt,...) fprintf(stderr,fmt,__VA_ARGS__)
#else
#define dprintf(fmt,...)
#endif

int dp[N*10],t1[1001],t2[1001],dn[15][15];
vector<int> a;
int n,d,k;
ll ans=0;
int is[2000];
char s[100];
int _x1,_x2;
void calc(int x,int pl, int t[],int f){
	if(pl==0){
		t[f]++;
	//	printf("%d %d %d\n",_x1,_x2,f);
	}else{
		int y=0,nx=x,tt=1;
		REP(i,pl) {
			int z=nx%10;
		//	printf("m%d %d\n",pl,z);
			nx/=10;
			if(!dn[pl][z])	{
				calc(y+tt*nx,pl-1,t,(f*10+z)%d);
			}
			dn[pl][z]=1;
			y=y+tt*z;
			tt*=10;
		}
		REP(i,pl) dn[pl][x%10]=0,x/=10;
	}
}
void solve(int x1,int x2){
	if(dp[x1]) return;
//	printf("zz %d %d\n",x1,x2);
	dp[x1]=1;
	_x1=x1,_x2=x2;
	FILL(t1,0); FILL(t2,0);
	calc(x1,(n+1)/2,t1,0); 
//	printf("ll\n");
	if(x2==0) t2[0]++;
	else calc(x2,n-(n+1)/2,t2,0);
	REP(i,d) ans+=t1[i]*t2[is[i]];
//	printf("%lld\n",ans);
}
void brute(int pos,int dn,int x1,int x2){
	if(dn<0||n-pos<dn) return;
	if(pos==n) solve(x1,x2);
	else{
		brute(pos+1,dn-1,x1*10+a[pos],x2);
		brute(pos+1,dn,x1,x2*10+a[pos]);
	}
}

int main(){
	FILL(is,-1);
	scanf("%s%d%d",s,&d,&k);
	n=strlen(s);
	int t=1;
	REP(i,(n+1)/2) t=t*10%d;
	REP(i,d){
		is[i]=(k-t*i%d+d)%d;
	}
	REP(i,n) a.pb(s[i]-'0');
	sort(all(a));
	brute(0,(n+1)/2,0,0);
	printf("%lld\n",ans);
  return 0;
}
