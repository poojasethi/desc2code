#include <bits/stdc++.h>
using namespace std;

using VI = vector<int>;
using VVI = vector<VI>;
using ll = long long;

struct hh {
  size_t operator()(const VI& v) const {
    size_t t = 0;
    for (auto p : v) t = 10 * t + p;
    return t;
  }
};

int l, d, k;
unordered_map<VI, vector<ll>, hh> D;

ll din(VI& count, int mod, int i, int p) {
  if (D.count(count) == 0) {
    D[count] = vector<ll>(d + 1, -1);
  }
  ll &r = D[count][mod];
  if (r != -1) return r;

  if (i == l) {
    if (mod == k) return r = 1;
    return r = 0;
  }

  r = 0;
  for (int j = 0; j < 10; ++j) {
    if (count[j] > 0) {
      --count[j];
      r += din(count, (mod + p * j) % d, i + 1, (10 * p) % d);
      ++count[j];
    }
  }
  return r;
}

int main() {
  string n;
  cin >> n >> d >> k;
  l = n.size();
  VI count(10);
  for (char c : n) ++count[c - '0'];
  cout << din(count, 0, 0, 1) << endl;
}

