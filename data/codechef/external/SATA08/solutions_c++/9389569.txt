//Lord Orachimaru
#include <bits/stdc++.h>
#define ll long long
#define MOD 1000000007
#define inf 1e18
#define s(x) scanf("%d", &x);
#define debug(x) cerr << x << endl;
#define debug2(x) for(int i = 0 ; i < x.size() ; i++)  { cerr << x[i] <<" "; } cerr << endl;
#define debug3(x,n) for(int i = 0; i < n; i++) { cerr << x[i] <<" "; } cerr << endl;
#define MAX 10000005
#pragma comment(linker, "/STACK:18000000")
using namespace std;
void sync() {
	cin.sync_with_stdio(0);
	cout.tie(0);
}
using namespace std;
string n;
int k  , d;
ll dp[1 << 15][1005];
bool exist[1<<15][1005];
int marked[16];
ll rec(int mask , int rem) {
    if(mask == ((1 << (int)n.size() ) - 1)) {
        if( rem == k) {
            return 1;
        } else {
            return 0;
        }
    }

    if(!exist[mask][rem] ) {
        ll ans = 0;
        int mark[10] = {};
        int sz = n.size();
        for (int i = 1; i <= sz; i++){
            int y = (1<<(sz-i));
            if(mark[n[i-1]-48]){
                continue;
            }
            if(!(mask&y)){
                mark[n[i-1]-48] = 1;
                ans = ans + rec(mask|y,(rem*10+(n[i-1]-48))%d);
            }
    }
        dp[mask][rem] = ans;
        exist[mask][rem] = true;
    }
    return dp[mask][rem];
}
int main() {
    cin >> n ;
    cin >> d >> k;
    if( (int)n.size() == 1) {
        if( (n[0] - 48)%d == k) {
            cout << 1 << endl;
        } else {
            cout << 0 << endl;
        }
        return 0;
    }
    memset(marked, 0 , sizeof( marked));
    memset( exist , false, sizeof(exist));
    cout << rec(0 , 0) << endl;
	return 0;
}
