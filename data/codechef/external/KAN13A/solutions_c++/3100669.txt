#include<bits/stdc++.h>

using namespace std;
#define LL long long

int dp[256][256],vis[256][256],cost[256][256];
int burn = 0,m,n,type[256];
char disk[256][256];
int rec(int day, int cdisk) {
	int &ret = dp[day][cdisk];
	if(vis[day][cdisk] == burn) {
		return ret;
	}
	vis[day][cdisk] = burn;
	ret = 0;
	if(day != m) {
		ret = rec(day+1, cdisk);
		for(int i=0;i<n;i++) {
			ret = min(ret, rec(day+1, i) + cost[i][day] - (cost[cdisk][day] - 100));
		}
	}
	return ret;
}

void trace(int day, int cdisk) {
	if(day == m) {
		return;
	}
	int best = rec(day, cdisk);
	if(best == rec(day+1, cdisk)) {
		type[day] = cdisk;
		trace(day+1, cdisk);
		return;
	}
	for(int i=0;i<n;i++) {
		if(best == rec(day+1, i) + cost[i][day] - (cost[cdisk][day] - 100)) {
			type[day] = i;
			trace(day+1, i);
			return;
		}
	}
}

char data[128];
int main() {
	int st = 1;
	while(scanf("%s",data)) {
		if(st == 0) {
			printf("\n");
		}
		printf("%s\n",data);
		if(strcmp(data, "TheEnd") == 0) {
			break;
		}
		st = 0;
		scanf("%d %d",&n,&m);
		burn++;
		for(int i=0;i<n;i++) {
			scanf("%s", disk[i]);
			for(int j=0;j<m;j++) {
				scanf("%d",&cost[i][j]);
			}
		}
		int ind = 0;
		for(int i=0;i<n;i++) {
			if(rec(1,ind) + cost[ind][0] > rec(1,i)+cost[i][0]) {
				ind = i;
			}
		}
		printf("Tk %d\n",rec(1,ind)+cost[ind][0]);
		type[0] = ind;
		trace(1, ind);

		int cur = type[0];
		int fre = 1;
		type[m] = -1;
		for(int i=1;i<=m;i++) {
			if(cur == type[i]) {
				fre++;
			} else {
				printf("%s for %d month(s)\n", disk[cur],fre);
				fre = 1;
				cur = type[i];
			}
		}
	}
	return 0;
}