#include<bits/stdc++.h>
using namespace std;
int dp[205][205];
int cost[205][205];
int m,n,type[205];
string disk1[205];
string data;
int solve(int month,int disk){
	int &ret = dp[month][disk];
	if(ret != -1)
        return ret;
	ret = 0;
	if(month!=m){
		ret = solve(month+1,disk);
		for(int i=0;i<n;i++)
			ret = min(ret,solve(month+1,i)+cost[i][month]-(cost[disk][month]-100));
	}
	return ret;
}
void back(int month,int disk){
	if(month == m)
		return;
	int val = solve(month,disk);
	if(val == solve(month+1,disk)){
		type[month] = disk;
		back(month+1,disk);
		return;
	}
	for(int i=0;i<n;i++) {
		if(val == solve(month+1,i)+cost[i][month]-(cost[disk][month]-100)) {
			type[month] = i;
			back(month+1,i);
			return;
		}
	}
}
int main(){
	while(1){
        cin >> data;
		cout << data << endl;
        if(data == "TheEnd")
            break;
        memset(dp,-1,sizeof dp);
		cin >> n >> m;
		for(int i=0;i<n;i++){
			cin >> disk1[i];
			for(int j=0;j<m;j++)
				cin >> cost[i][j];
		}
		int indx = 0;
		for(int i=0;i<n;i++){
			if(solve(1,indx)+cost[indx][0] > solve(1,i)+cost[i][0])
				indx = i;
		}
		printf("Tk %d\n",solve(1,indx)+cost[indx][0]);
		type[0] = indx;
		back(1,indx);
		int cur = type[0];
		int freq = 1;
		type[m] = -1;
		for(int i=1;i<=m;i++){
			if(cur == type[i])
				freq++;
                 else{
                   cout << disk1[cur] << " for " << freq << " month(s)" << endl;
		   freq = 1;
		   cur = type[i];
		 }
	   }
	  cout << endl;
	}
	return 0;
}
