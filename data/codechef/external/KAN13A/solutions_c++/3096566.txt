#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>

using namespace std;

#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000


char s[50];
char brands[101][50];

ll dp[101][201];
ll cost[101][201];
int from[101][201];


int main()
{
    int i,j,k,n,m;
    while(1)
    {
            scanf("%s",s);
            if(strcmp(s,"TheEnd")==0)
            {
               break;
            }
            scanf("%d%d",&n,&m);
            
            for(i=1;i<=n;i++)
            {
               scanf("%s",brands[i]);
               for(j=1;j<=m;j++)
               {
                  scanf("%lld",&cost[i][j]);
               }
            }
            
            int mon,disk;
            
            for(mon=1;mon<=m;mon++)
            {
               for(disk=1;disk<=n;disk++)
               {
                  if(mon==1)
                  {
                          dp[disk][mon] = cost[disk][mon];
                          from[disk][mon] = 0;
                  }
                  else
                  {
                          dp[disk][mon] = dp[disk][mon-1];
                          from[disk][mon] = disk;
                          for(k=1;k<=n;k++)
                          {
                              if(k!=disk)
                              if(dp[disk][mon] > dp[k][mon-1] + cost[disk][mon] - (cost[k][mon]-100))
                              {
                                 dp[disk][mon] = dp[k][mon-1] + cost[disk][mon] - (cost[k][mon]-100);
                                 from[disk][mon] = k;
                              }
                             //dp[disk][mon] = min(dp[disk][mon],dp[k][mon-1] + cost[disk][mon] - (cost[k][mon]-100));
                          }
                  }
               }
            }
            
            ll ans = (ll)1e15;
            int start;
            
            for(disk=1;disk<=n;disk++)
            {
                if(ans > dp[disk][m])
                {
                   ans = dp[disk][m];
                   start = disk;
                }
            }
            printf("%s\n",s);            
            printf("Tk %lld\n",ans);
            vector <string> brand;
            mon = m;
            while(start)
            {
                   //printf("%s for months(s)\n",brands[start]);
                   brand.push_back(brands[start]);
                   start = from[start][mon];
                   mon--;
            }
            reverse(brand.begin(),brand.end());
            
            string pre = brand[0];
            i = 1;
            int cnt = 1;
            while(i<brand.size())
            {
               if(brand[i]==pre)
               {
                   cnt++;
               }
               else
               {
                   printf("%s for %d month(s)\n",pre.c_str(),cnt);
                   cnt = 1;
                   pre = brand[i];
               }
               i++;
            }
            if(cnt>0)
            {
                     printf("%s for %d month(s)\n",pre.c_str(),cnt);
            }
            printf("\n");
    }
    printf("TheEnd\n");
    //system("pause");
    return 0;
}
