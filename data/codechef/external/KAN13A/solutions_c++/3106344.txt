using namespace std;
#include <bits/stdc++.h>
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
typedef long long ll; 
typedef pair<int,int> pii; 
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define split(str) {vs.clear();istringstream ss(str);while(ss>>(str))vs.push_back(str);}
#define INF 1000000000
string names[102];
int cost[102][202];
pair<int, int> ans[202];
int n,m;
int dp[102][202];
int parent[102][202];
int mincost(int i, int mon)
{
	if(mon == m-1)
		return cost[i][m-1];
	int &ret = dp[i][mon];
	if(ret != -1)
		return ret;
	ret = INF;
	FOR(j, n)
	{
		int locval;
		if(j == i)
			locval = mincost(i, mon+1) + cost[j][mon] - cost[j][mon+1];
		else
			locval = mincost(j, mon+1) + cost[i][mon] - cost[i][mon+1] + 100;
		if(ret > locval)
		{
			ret = locval;
			parent[i][mon] = j;
		}
	}
	return ret;
}
int main()
{
	string st;
	while(cin>>st)
	{
		memset(dp, -1, sizeof dp);
		if(st == "TheEnd")
			break;
		cout<<st<<endl;		
		sf(n); sf(m);
		FOR(i,n)
		{
			cin>>names[i];
			FOR(j, m)
			{
				sf(cost[i][j]);
			}
		}
		int total = INF;
		int count = 0;

		FOR(i, n)
		{
			if(total > mincost(i, 0))
			{
				total = mincost(i, 0);
				ans[0] = MP(i, 1);
			}
		}

		count++;
		for(int i = 1; i < m; i++)
		{
			if(ans[count - 1].first == parent[ans[count - 1].first][i-1])
				ans[count - 1].second++;
			else
				ans[count++] = MP(parent[ans[count - 1].first][i-1], 1);
		}

		printf("Tk %d\n", total);
		FOR(i, count)
		{
			cout<<names[ans[i].first];
			printf(" for %d month(s)\n", ans[i].second);
		}
		printf("\n");
	}
	printf("TheEnd\n");
}