#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <cmath>
#include <queue>
#include <cstdio>
#include <set>
#include <map>
#include <cstdlib>
#include <cstring>
#include <stack>
#include <cassert>
#include <limits.h>

typedef unsigned long long ULL;
typedef long long LL;

#define MIN(a,b) (a<b?a:b)
#define MAX(a,b) (a>b?a:b)
#define ABS(a) ((a>0)?a:-a)

#define SZ(a) ((int)a.size())
#define PB(a) push_back(a)
#define FOR(i,a,b) for(int i=(a);i<=(b);i++)
#define REP(i,n) FOR(i,0,(int)(n-1))
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define printv(v) REP(i,SZ(v))printf("%d ",v[i]);
#define mp(a,b) make_pair(a,b)
#define PII pair<int,int>
#define MOD 1000000007
using namespace std;
string str,str1;
map<int,string>mymap;
int dp[105][205],dp1[105][205],ar[105][205];
int main()
{
    int t,n,mnths;
    while(1)
    {
        mymap.clear();
        stack<PII>st;
        cin>>str;
        if(str=="TheEnd")
            break;
        scanf("%d %d",&n,&mnths);
        getchar();
        for(int i=0;i<n;i++)
        {
            cin>>str1;
            mymap[i]=str1;
            for(int j=0;j<mnths;j++)
            {
                scanf("%d",&ar[i][j]);
                dp1[i][j]=-1;
                dp[i][j]=INT_MAX;
            }
            getchar();
        }

        for(int j=0;j<mnths;j++)
        {
            for(int i=0;i<n;i++)
            {
                if(j==0)
                {
                    dp[i][j]=ar[i][j];
                    dp1[i][j]=i;
                }
                else
                {
                    for(int k=0;k<n;k++)
                    {
                        if(k==i)
                        {
                            if(dp[i][j]>dp[k][j-1])
                            {
                                dp[i][j]=dp[k][j-1];
                                dp1[i][j]=k;
                            }
                        }
                        else
                        {
                            if(dp[i][j]> (dp[k][j-1]-ar[k][j]+100+ar[i][j]))
                            {
                                dp[i][j]=dp[k][j-1]-ar[k][j]+100+ar[i][j];
                                dp1[i][j]=k;
                            }
                        }
                    }
                }
            }
        }

        /*for(int i=0;i<n;i++)
        {
            for(int j=0;j<mnths;j++)
            {
                cout<<dp[i][j]<<" ";
            }
            cout<<"\n";
        }

        for(int i=0;i<n;i++)
        {
            for(int j=0;j<mnths;j++)
            {
                cout<<dp1[i][j]<<" ";
            }
            cout<<"\n";
        }*/
        int ans=INT_MAX;
        int pos;
        for(int i=0;i<n;i++)
        {
            if(ans>dp[i][mnths-1])
            {
                ans=dp[i][mnths-1];
                pos=i;
            }
        }

        int prev=pos;
        int cnt=1;
        int pos1=mnths-1;
        while(pos1>=0)
        {
            if(dp1[pos][pos1]==prev)
            {
                cnt++;
            }
            else
            {
                st.push(mp(cnt,prev));
                cnt=1;
                prev=dp1[pos][pos1];
            }
            pos=dp1[pos][pos1];
            pos1--;
        }
        st.push(mp(cnt-1,prev));

        cout<<str<<"\n";
        cout<<"Tk "<<ans<<"\n";
        while(!st.empty())
        {
            cout<<mymap[st.top().second]<<" for "<<st.top().first<<" month(s)\n";
            st.pop();
        }
        cout<<"\n";
    }

    cout<<str<<"\n";
    return 0;
}
