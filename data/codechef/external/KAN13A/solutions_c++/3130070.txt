#include <iostream>
#include <sstream>
#include <cstdio>
#include <climits>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
#include <deque>
#include <bitset>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <vector>
#include <queue>

#define FORN(i,a,b) for (int i = (a); i <= (b); i++)
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define SI ({int x; scanf("%d%*c", &x); x;})
#define SL ({long long int x; scanf("%lld%*c", &x); x;})
#define PN(x) ({printf("%d\n", x);})
#define PLN(x) ({printf("%lld\n", x);})
#define PS(x) ({printf("%d ", x);})
#define PLS(x) ({printf("%lld ", x);})
#define NL ({printf("\n");})
#define printarr(i, x, y) ({for(int i=0;i<y;i++){ printf("%d ", x[i]);} printf("\n");})
#define inputarr(i, x, y) ({for(int i=0;i<y;i++){ scanf("%d", &x[i]);}})
#define MOD 1000000007
#define LL long long
#define PI 3.14285714286
#define U unsigned
#define MP(a,b) make_pair(a,b)
#define pb(a) push_back(a)
#define INF 0x3f3f3f3f
#define gc getchar_unlocked
#define UPPER(s) transform(s.begin(),s.end(),s.begin(),std::ptr_fun<int, int>(std::toupper));
#define LOWER(s) transform(s.begin(),s.end(),s.begin(),std::ptr_fun<int, int>(std::tolower));
#define COUNT(a,val) count(a.begin(),a.end(),val)

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

inline int gcd(int a, int b) {
while(b) b^=a^=b^=a%=b;
return a;
}

using namespace std;
int price[101][201];
int back[201][101], dp[201][101];
int backtrack[201];
int brands, months;
int solve(int month, int brand)
{
	if(month == 0)
		return 0;
	if(dp[month][brand]!=-1)
		return dp[month][brand];
	int ans=INF, temp;
	FOR(i,0,brands)
	{
		if(i!=brand)
		{
			temp = -(price[brand][months-month]-100)+price[i][months-month]+solve(month-1, i);
			if(temp < ans)
			{
				back[months-month][brand] = i;
				ans = temp;
			}
		}
		else
		{
			temp = solve(month-1, i);
			if(temp < ans)
			{
				back[months-month][brand] = i;
				ans = temp;
			}
		}
	}
	return dp[month][brand] = ans;
}
int main()
{
	string setnum;
	while(1)
	{
		memset(dp, -1, sizeof(dp));
		cin >> setnum;
		if(setnum == "TheEnd")
			break;
		scanf("%d%d", &brands, &months);
		string names[101];
		FOR(i,0,brands)
		{							
			cin>>names[i];
			FOR(j,0,months)
			{
				scanf("%d", &price[i][j]);
			}
		}
		int ans = INF, temp ,start;
		FOR(i,0,brands)
		{
			 temp = price[i][0]+solve(months-1,i);
			 if(temp < ans)
			 {
				 start = i;
				 ans = temp;
			 }
		}
		backtrack[0]=start;
		FOR(i,1,months)
		{
			backtrack[i]=back[i][start];
			start = back[i][start];
		}
		cout<<setnum<<endl;  
		printf("Tk %d\n", ans);
		FOR(i,0,months)
		{
			int j=0;
			while(i+j<months && backtrack[i+j] == backtrack[i])
				j++;
			i += (j-1);
			cout << names[backtrack[i]] <<" for " <<j<<" month(s)"<<endl;
		}
		cout<<endl;
	}
	cout <<"TheEnd"<<endl;
	return 0;
}
