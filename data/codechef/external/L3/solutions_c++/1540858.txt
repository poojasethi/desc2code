#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
using namespace std;

typedef unsigned long long ll;
const int N = 1001000;
bool prime[N];
vector<unsigned> primes;

void init() {
    primes.clear();
    for (int i=0; i<N; i++) prime[i] = true;
    prime[0] = prime[1] = false;
    for (int i=2; i<N; i++) if (prime[i]) {
        primes.push_back(i);
        for (int j=2*i; j<N; j+=i) {
            prime[j] = false;
        }
    }
}

bool isPrime(ll num) {
    for (int i=0; i<primes.size(); i++) {
        if (primes[i]*primes[i]>num) break;
        if (num%primes[i]==0)
            return false;
    }
    return true;
}

ll dfs(char *in, ll num, bool first=false) {
    if (*in==0) {
        if (isPrime(num))
            return num;
        return 0;
    } else if (*in == '?') {
        for (int i=0; i<10; i++) {
            if (first && i==0) continue;
            ll ret = dfs(in+1, num*10+i);
            if (ret) return ret;
        }
        return 0;
    } else {
        return dfs(in+1, num*10+(*in-'0'));
    }
}

int main()
{
    init();
    int t;
    char in[100];
    scanf("%d", &t);
    while (t--) {
        scanf("%s", in);
        ll res = dfs(in, 0, true);
        printf("%llu\n", res);
    }
    return 0;
}
