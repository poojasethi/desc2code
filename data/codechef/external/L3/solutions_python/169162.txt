#!/usr/bin/python
"Solve the Lost Primes problem at CodeChef"
import sys, os, math, random
if False:  # try with and without
 import psyco
 psyco.full()
last_digits = [1, 3, 7, 9]  # multi-digit primes cannot end in [024568]
digits = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
DEBUGGING = os.getenv('DEBUGGING', False)
def main():
 primes = sieve(1000000)
 testcases = int(raw_input())
 for testcase in xrange(testcases):
  prime = raw_input()
  if prime == '?':
   print 7  # shortcut this case
   continue
  variables = prime.count('?')
  replacements = [list(digits) for i in xrange(variables)]
  if prime.endswith('?'):
   replacements[-1] = list(last_digits)
  if prime.startswith('?') and 0 in replacements[0]:
   replacements[0].remove(0)  # no leading zeros
  for i in xrange(len(replacements)):
   random.shuffle(replacements[i])
  indices = [0] * len(replacements)
  done = map(lambda l: len(l) - 1, replacements)
  while True:
   if DEBUGGING:
    print >>sys.stderr, 'prime=%s, variables=%s, replacements=%s' % (
     prime, variables, replacements)
   test = prime  # makes a new copy
   for i in xrange(variables):
    test = test.replace('?', str(replacements[i][indices[i]]), 1)
    if DEBUGGING: print >>sys.stderr, 'i=%d, test: %s' % (i, test)
   if is_prime(long(test), primes):
    print test
    break
   else:
    if indices != done:
     increment(replacements, indices)
    else:
     print 'No primes in %s' % prime
     break
def increment(list_of_numbers, list_of_indices):
 for i in xrange(len(list_of_indices) - 1, -1, -1):
  list_of_indices[i] = (list_of_indices[i] + 1) % len(list_of_numbers[i])
  if list_of_indices[i] != 0:
   break
def is_prime(n, primes):
 for i in primes:
  if i >= n:
   return True
  if n % i == 0:
   return False
 return True
def sieve(number = sys.maxint - 1):
 numbers = range(number + 1)
 numbers[1] = 0  # 1 is not a prime; it is a unit
 limit = int(number ** 0.5) + 1
 for i in xrange(2, limit):
  if numbers[i]:
   numbers[2 * i:(number / i) * (i + 1):i] = [0] * ((number / i) - 1)
 return filter(None, numbers)
main()
