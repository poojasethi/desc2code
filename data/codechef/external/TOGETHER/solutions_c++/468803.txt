#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <deque>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <string.h>
#include <cstring>
#define oo (int)1e9
#define fill( a , v ) memset( a , v , sizeof (a) )
#define bits( x ) __builtin_popcount( x )
#define gcd( a , b ) __gcd( a, b )
#define lcm( a , b ) (a/gcd( a, b ) ) * b
#define s(n)scanf( "%d" , &n )
#define add push_back
#include<cassert>
const int mxn = 100000 + 10;
const int mod = 4242;
typedef long long ll;
#define pii pair<int,int>
using namespace std;
const int offset = 625;

int R[mxn],J[mxn];

int main()
{

    int runs,n,k,t,tmp;
    s( runs );
    while( runs-- )
    {
       s(n);s(k);
       for(int i=1;i<=n;i++)R[i] = 1,J[i] = 0;
       
       s(t);
       while( t-- )
       {
          s(tmp);
          R[tmp] = 0;
       }
       
       s(t);
       while( t-- )
       {
          s(tmp);
          J[tmp] = 1;
       }
       
       for(int i=1;i<=n;i++)
       {
          R[i] += R[i-1];
          J[i] += J[i-1];
       }
       
       int miss = oo;
       int mxspend = -1;
       int soln = -1;
       for(int i=1;i+k-1<=n;i++)       
       {
          int spendtime = R[i+k-1] - R[i-1];
          int misstime = J[i+k-1] - J[i-1];
          
          if( spendtime > mxspend )
          {
              mxspend = spendtime;
              miss = misstime;
              soln = i;
          }
          else if( spendtime == mxspend )
          {
               if( misstime < miss )
               {
                   miss = misstime;
                   soln = i;
               }
          }
       }
       printf( "%d\n" , soln );
       
    }
    //system( "pause" );
}
