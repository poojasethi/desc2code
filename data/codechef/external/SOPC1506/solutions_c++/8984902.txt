// AUTHOR : Dipjal Chhetri
// Institution : Jaypee Institute of Information Technology

#include<bits/stdc++.h>
#include<algorithm>
#include<stack>
#include<queue>
#include<string.h>
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define sz(c) c.size()
#define rep(i,n) for(int i = 0;i<n;i++)
#define range(i,a,b) for(int i = a;i<=b;i++)
//#define tr(it,c) for(typeof(c.begin()) it = c.begin();it!= c.end();++it)
#define setbits(x) __builtin_popcount(x)
#define gcd(x,y) __gcd(x,y)
//#define x first
//#define y second
#define author dipjal
using namespace std;
typedef long long int ll;
typedef vector<int> vii;
typedef pair<int,int> pii;
typedef vector<int> vi;
typedef vector<pii> vpii;
typedef map<int,int> mii;
const int SIZE = 4e5+5;
const ll mod = 1e9+7;
const ll epf = -1e5+9;
const ll inf = 0x7fffffff;
int type;
int root,cnt;
char c;
//bool vis[SIZE];
string cur;
//vector<pair<int,char> > graph[SIZE];
int N,M;
//int arr[SIZE];
//int dp[SIZE];
int u,v,d;
//#define gc() getchar_unlocked()
//#define pc(x) putchar_unlocked(x)
 /*inline int scan(){
     int x = 0LL;
     char c = gc();
     while(c<'0'||c>'9') c= gc();
     while(c>='0'&&c<='9'){
            x = (x<<1)+(x<<3)+c-'0';
     c= gc();
     }
     return x;
 }
 inline void WRITE_FAST(ll ANSWER){
     char STORAGE[25];
     int varLen = 0;
     do{
            STORAGE[varLen++]=(char)(ANSWER%10+'0');
     ANSWER/=10;
     }while(ANSWER);
     --varLen;
     while(varLen>=0) pc(STORAGE[varLen--]);
     pc('\n');
 } */
bool comp(const pair<int,int>& p1,const pair<int,int>& p2){
    if(p1.first!=p2.first)
        return p1.first<p2.first;
    return p1.second<p2.second;
}

int HV[12][12][12][12];
 int n;
 int solve(int a,int b,int x){
 if(a+x>n||b+x>n) return 0;
 for(int i = b;i<b+x;i++)
    if(!HV[a][i][a][i+1]||!HV[a+x][i][a+x][i+1]) return 0;

 for(int i = a;i<a+x;i++)
    if(!HV[i][b][i+1][b]||!HV[i][b+x][i+1][b+x]) return 0;
 return 1;
 }

 int main(){
     ios_base::sync_with_stdio(false);
     cin.tie(0);
     int tt;
     int m,u,v;
     cin>>tt;
     while(tt--){
        cin>>n;
        cin>>m;
        memset(HV,0,sizeof HV);
        string s;
        while(m--){
            cin>>s;
            cin>>u>>v;
            if(s[0]=='H') ++HV[u][v][u][v+1],++HV[u][v+1][u][v];
            else ++HV[u][v][u+1][v],++HV[u+1][v][u][v];
        }
        ll cnt = 0LL;
        range(i,1,n){
        range(j,1,n){
            range(k,1,n)
            cnt+=solve(i,j,k);
        }
        }
     cout<<cnt<<endl;
     }
     return 0;
 }
