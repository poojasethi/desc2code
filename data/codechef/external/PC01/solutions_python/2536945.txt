#include <iostream>
#include <cmath>
#include <algorithm>
#include <stdio.h>

using namespace std;
int q[6][7][1111],t,kol[6][7],a[6];
char s[111111];
bool ok(int j, int jj, int x)
{
		int pos1=0, pos2=0;
		for(int i=0; i<5; i++)
		{
			if (a[i]==j) pos1=i+1;
			if (a[i]==x) pos2=i+1;
		}
		if (jj==1 && abs(pos1-pos2)!=1) return false;
        if (jj==2 && abs(pos1-pos2)==1) return false;
        if (jj==3 && pos1<pos2) return false;
        if (jj==4 && pos1>pos2) return false;
        if (jj==5 && pos1!=x) return false;
        if (jj==6 && pos1==x) return false;
        return true; 
}

int main()
{
	cin >> t;
	gets(s);
	for(int i=0; i<t; i++)
	{
		memset(kol,0,sizeof(kol));
		memset(q,0,sizeof(q));
		for(int j=0; j<5; j++) a[j]=j+1;
		for(int j=1; j<6; j++)
		{
			gets(s);
			for(int jj=0; jj<strlen(s);)
			{
				if (s[jj]-'A'>=0 && s[jj]-'A'<5) {q[j][1][kol[j][1]++]=(int)(s[jj]-'A'+1); jj+=2;}
				else if (s[jj]=='N' && s[jj+1]-'A'>=0 && s[jj+1]-'A'<5) {q[j][2][kol[j][2]++]=(int)(s[jj+1]-'A'+1); jj+=3;}
				else if (s[jj]=='+') {q[j][3][kol[j][3]++]=(int)(s[jj+1]-'A'+1); jj+=3;}
 				else if (s[jj]=='-') {q[j][4][kol[j][4]++]=(int)(s[jj+1]-'A'+1); jj+=3;}
				else if (s[jj]-'0'>=0 && s[jj]-'0'<=5) {q[j][5][kol[j][5]++]=(int)(s[jj]-'0'); jj+=2;}
				else {q[j][6][kol[j][6]++]=(int)(s[jj+1]-'0'); jj+=3;}				
			}
		}
		do
		{
			bool flag=true;
			for (int j=1; j<6; j++)
			{
			 for (int jj=1; jj<7; jj++)
			 {
					int kkol=0;
					while (true)
					{
						if (q[j][jj][kkol]==0) break;
					//	cout << jj << " " << j << " " << q[j][jj][kkol] << endl;
						if (!ok(j,jj,q[j][jj][kkol])) {flag=false; break;}
						kkol++;
					}
					if (!flag) break;
			 }
			 if (!flag) break;
			}
			if (flag) 
			{ 
				{for(int j=0; j<5; j++) cout << (char)(a[j]+64); cout << endl; break;}  
			}
		} while (next_permutation(a,a+5));
	}
	cin >> t;
	return 0;
}
