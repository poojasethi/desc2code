#include<stdio.h>
#include<algorithm>
#include<string.h>
#include<string>
using namespace std;
int pos[5];
char b[5][5000];
int isdigit(char a)
{
    if(a<'0')return 0;
    if(a>'9')return 0;
    return 1;
   }
int satisfy()
{
    int i;
    for(i=0;i<5;i++)
    { 
        int j;
        int l = strlen(b[i]);
        for(j=0;j<l;j++)
        {
            
            char ch = b[i][j];
            if(ch==32)continue;
            if(isdigit(ch))
            {
                if(pos[i]+'0'-ch)return 0;
 
            }
            else if(ch=='N')
            {
                j++;
                if(isdigit(b[i][j]))
                        {
                        if(pos[i] == b[i][j]-'0')
                        return 0;
                        }
 
 
                        else {
                int ne = b[i][j]-'A';
                int po = pos[ne];
                if(pos[i]==po+1 || pos[i] == po-1)
                    return 0;
                    }
            }
            else if(ch=='+')
            {
                j++;
                int ne = b[i][j] - 'A';
                int po = pos[ne];
                if(pos[i]<po)return 0;
            }
 
            else if(ch=='-')
            { j++;
                int ne = b[i][j] - 'A';
                int po = pos[ne];
                if(pos[i]>po)return 0;
            }
            else 
            {
                 int ne = b[i][j]-'A';
                                 int po = pos[ne];
                                                 if(pos[i]==po+1 || pos[i] == po-1);
                                                 else 
                                                                         return 0;
 
            }
 
        }
 
    }
    return 1;
  
}
int main()
{
 
    char a[5000];
    gets(a);
    int t;
    sscanf(a,"%d",&t);
    while(t--)
    {
 
       int i;
       for(i=0;i<5;i++)gets(b[i]);
 
       int valid = 0;
        for(i=0;i<5;i++)
            pos[i] = i+1;
 
        while(1)
        {
 if(satisfy())
 {
     break;
 }
           if(!next_permutation(pos,pos+5))break;
 
 
        }
        char ans[] = "12345";
        for(i=0;i<5;i++)
        {
            ans[pos[i]-1] = i+'A';
        }
        printf("%s\n",ans);
    }
 
 
}
 