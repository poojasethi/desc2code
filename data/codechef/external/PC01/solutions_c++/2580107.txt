#include<stdio.h>
#include<algorithm>
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<sstream>
#include<set>
#include<string>
#include<stack>
#include<iostream>
#include<math.h>
#define mod 1000000007
#define llu unsigned long long
#define max 100005
using namespace std;
 
vector< vector<string> > info(5);
int p[5] = {1, 2, 3, 4, 5};
int flag = 0;
 
void check()
{
	for(int i = 0; i < 5; i++) 
    {
		for(int j = 0; j < info[i].size(); j++) 
        {
			if(info[i][j].size() == 1) 
            {
				char c = info[i][j][0];
				if(c >= '1' && c <= '5') 
                {
					if(p[i] != (c - '0')) 
                    {
						flag = 1;
						break;
					}
				}
				else 
                {
					int r = c - 'A';
					if(abs(p[i] - p[r]) > 1) 
                    {
						flag = 1;
						break;
					}
				}
			}
			else  
            {
				char a = info[i][j][0];
				char b = info[i][j][1];
				int r = b - 'A';
				if(a == 'N') 
                {
					if(b >= '1' && b <= '5') 
                    {
						if(p[i] == (b - '0')) 
                        {
							flag = 1;
							break;
						}
					}
					else if(abs(p[i] - p[r]) == 1) 
                    {
						flag = 1;
						break;
					}
				}
				else if(a == '+' && p[i] < p[r]) 
                {
					flag = 1;
					break;
				}
				else if(a == '-' && p[i] > p[r]) 
                {
					flag = 1;
					break;
				}
			}
		}
		if(flag == 1) break;
	}
}
int main()
{
	int t;
	cin >> t;
	getchar();
	while(t--) 
    {
		for(int i = 0; i < 5; i++) 
        {
			 p[i] = i+1;
			 info[i].clear();
		}
		string s,a;
		for(int i = 0; i < 5; i++) 
        {
			getline(cin, s);
			stringstream ss;
			ss << s;
			while(ss >> a) 
            {
				info[i].push_back(a);
			}
		}
		do 
        {
			flag = 0;
			check();
			if(flag == 0) 
            {
				char ans[5];
				for(int i = 0; i < 5; i++)
					for(int j = 0; j < 5; j++)
						if(p[j] == i+1) cout <<(char)(j+ 'A');
				cout << endl;
				break;
			}
		}while(next_permutation(p, p+5));
	}
	return 0;
}