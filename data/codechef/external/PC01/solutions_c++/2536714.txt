#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <vector>
#include <sstream>

using namespace std;

int main(){
	int T;
	cin >> T;
	string emptyLine;
	getline(cin, emptyLine);
	while(T--){
		vector< vector<string> > info(5);
		for(int i = 0; i < 5; i++){
			string line;
			getline(cin, line);
			stringstream ss(line);
			string item;
			while (std::getline(ss, item, ' ')) {
				info[i].push_back(item);
			}
		}

		/*for(int i = 0; i < 5; i++){
			for(vector<string>::iterator it = info[i].begin(); it != info[i].end(); it++)
				cout << *it << "\t";
			cout << endl;
		}*/


		string seq = "ABCDE";
		bool found = false;
		do {
			bool next = false;
			for(int i = 0; i < 5 && !next; i++){
				char check = 'A'+i;
				int j = seq.find(check);
				for(vector<string>::iterator it = info[i].begin(); it != info[i].end() && !next; it++){
					if (isalpha((*it)[0])){
						if((*it)[0] == 'N'){
							if (isalpha((*it)[1])){
								if ((j<4 && seq[j+1] == (*it)[1]) || (j>0 && seq[j-1] == (*it)[1]))
								{
									next = true;
									continue;
								}
							}
							else{
								if (j == (*it)[1]-'1')
								{
									next = true;
									continue;
								}
							}
						}
						else{
							if ((j<4 && seq[j+1] != (*it)[0]) && (j>0 && seq[j-1] != (*it)[0]))
							{
								next = true;
								continue;
							}

						}
					}
					else if ((*it)[0] == '+'){
						int k;
						for (k = j+1; k < 5; k++)
							if (seq[k] == (*it)[1])
								break;
						if (k != 5)
						{
							next = true;
							continue;
						}
					}
					else if ((*it)[0] == '-'){
						int k;
						for (k = j-1; k >= 0; k--)
							if (seq[k] == (*it)[1])
								break;
						if (k != -1)
						{
							next = true;
							continue;
						}
					}
					else{
						if (j != (*it)[0] - '1')
						{
							next = true;
							continue;
						}
					}
				}
			}

			if (!next){
				found = true;
				break;
			}

		} while ( next_permutation(seq.begin(),seq.end()) && !found);

		cout << seq << endl;
	}

	return 0;
}
