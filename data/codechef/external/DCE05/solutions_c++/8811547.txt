#include<bits/stdc++.h>
using namespace std;

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#define BS 64*1024
 
char ibuffer[BS];
int ibuffer_offset=0;
int ibuffer_size=0;
char obuffer[BS];
int obuffer_offset=0;
 
static long inline fastread() {
	int r=0, s=1;
	while(1) {
		if(ibuffer_offset >= ibuffer_size) {
			ibuffer_size = read(0, ibuffer, BS);
			ibuffer_offset = 0;
		}
		if(ibuffer[ibuffer_offset] < 48) {
			if(s) ibuffer_offset++;
			else return r;
		}
		else {
			s = 0;
			r = r * 10 + ibuffer[ibuffer_offset++]-48;
		}
	}
}
 
void inline flush() {
	write(1, obuffer, obuffer_offset);
	obuffer_offset = 0;
}


int main()
{
	int t;
	t=fastread();
	long int arr[1000], n;
	arr[0]=1;
	for(int i=1; arr[i-1]<=1000000000; i++)
		arr[i]=arr[i-1]<<1;	
	while(t--)
	{
		n=fastread();
		for(int i=1; i<32; i++)
		{
			if(n<arr[i])
			{
				cout << arr[i-1] << "\n";
				break;
			}
		}
	}	
	flush();
	return 0;
}