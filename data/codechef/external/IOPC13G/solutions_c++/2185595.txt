#include<stdio.h>
#include<string.h>
#include<vector>
#include<queue>
using namespace std;
 
queue<int> q;
 
void BFS(vector<int> *adj, int degree[], int removed[], int k)
{
    while(!q.empty())
    {
        int node = q.front();
        q.pop();
        removed[node] = 1;
        for(int i=0; i<adj[node].size(); i++)
        {
            int next = adj[node][i];
            degree[next]--;    //either here to decrease the removed element's count from all the elements list 
                               //or, inside if below to remove from non- removed elements only
            if( (!removed[next]) && degree[next]<k)  
            {  
                removed[next] = 1;
                q.push(next);  
            }
        }
    }
}
 
 
int main()
{
    int n,m,k,a,b,count=0;
    scanf("%d%d%d",&n,&m,&k);
    int removed[n+1];
    int degree[n+1];
    vector<int> adj[n+1];
    memset(removed,0,sizeof(removed));
    memset(degree,0,sizeof(degree));
    for(int i=0; i<m; i++)
    {
        scanf("%d%d",&a,&b);
        adj[a].push_back(b), degree[a]++;
        adj[b].push_back(a), degree[b]++;
    }
    
    for(int i=0; i<n; i++)  if(degree[i]<k)  q.push(i);    
    BFS(adj, degree, removed, k);    
    for(int i=0; i<n; i++) if(!removed[i]) count++;
    printf("%d\n",count);
  return 0;
}