#include <bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define PB push_back
#define S(n)	scanf("%d",&n)
#define Sd(n)	scanf("%lf",&n)
#define P(n)	printf("%d\n",n)
#define ll long long
vector<int> adj[100005];
int isnode[100005];
bool visited[100005];
int deg[100005];
int k;
void dfs(int vertex)
{
	//cout<<res<<"\n";
	//visited[vertex]=true;
	if(deg[vertex]>=k)
		return;

	//res++;
	isnode[vertex]=false;
	FOR(i,0,adj[vertex].size())
	{
		int curr=adj[vertex][i];
		if( isnode[curr] )
		{
			deg[curr]--;
			//isnode[]
			dfs(curr);

		}
	}
}
int main()
{
	int n,m,t1,t2;
	S(n);S(m);S(k);
	memset(isnode, true, sizeof(isnode));
	memset(visited, false, sizeof(visited));
	memset(deg, 0, sizeof(deg));
	FOR(i,0,m)
	{
		S(t1);S(t2);
		adj[t1].PB(t2);
		adj[t2].PB(t1);
		deg[t1]++;
		deg[t2]++;

	}
	// FOR(i,0,n)
	// {
	// 	if(adj[i].size()<k)
	// 	{
	// 		adj[i].clear();
	// 		isnode[i]=false;
	// 	}
	// }
	int res=0;
	FOR(i,0,n)
	{
		if(isnode[i])
		{
			//res=max(res,dfs(i,0));
			//cout<<res;
			dfs(i);
		}
	}
	FOR(i,0,n)
		if(isnode[i])
			res++;
	P(res);

	return 0;
}