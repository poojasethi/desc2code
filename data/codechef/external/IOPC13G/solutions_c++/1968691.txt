#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

vector <int> adj[100000];
int degree[100000]={0};

void solve(int vertices,int lim)
{
	int vertex;
	queue <int> store;
	for(int i=0;i<vertices;i++)
		if(degree[i]<lim)
		{
			degree[i]=0;
			store.push(i);
		}
	while(!store.empty())
	{
		vertex=store.front();
		store.pop();
		degree[vertex]=0;
		for(int i=0;i<adj[vertex].size();i++)
			if(degree[adj[vertex][i]])
			{
				degree[adj[vertex][i]]--;
				if(degree[adj[vertex][i]]!=0 && degree[adj[vertex][i]]<lim)
					store.push(adj[vertex][i]);
			}
	}
}

int main()
{
	int vertices,edges,lim,x,y;
	scanf("%d %d %d",&vertices,&edges,&lim);
	for(int i=0;i<edges;i++)
	{
		scanf("%d %d",&x,&y);
		adj[x].push_back(y);
		adj[y].push_back(x);
		degree[x]++;
		degree[y]++;
	}
	solve(vertices,lim);
	int cnt=0;
	for(int i=0;i<vertices;i++)
		if(degree[i])
			cnt++;
	printf("%d\n",cnt);
	return 0;
}