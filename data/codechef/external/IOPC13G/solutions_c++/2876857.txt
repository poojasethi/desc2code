#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <utility>
#include <vector>
#include <map>
#include <sstream>

using namespace std;

typedef long long LL;

int n , m , k;

vector<vector<int> > adjlist (100005);
int deg[100005];
int hasCut[100005];
int visited[100005];

void dfs(int from)
{
	//visited[from] = true;
	if (deg[from] < k)
		hasCut[from] = true;
	else return ;
	
	for (int  i = 0; i < adjlist[from].size(); i++)
	{
		int to = adjlist[from][i];
		if (!hasCut[to])
		{
			deg[to] --;
			dfs (to);
		}
	}
}

int main()
{
	scanf ("%d %d %d" , &n , &m , &k);
	for (int i = 0; i < m; i++)
	{
		int u , v;
		scanf ("%d %d" , &u , &v);
		deg[u] ++;
		deg[v] ++;
		adjlist[u].push_back(v);
		adjlist[v].push_back(u);
	}
	
	for (int i = 0; i < n; i++)
	{
		//if (visited[i]) continue;
		if (hasCut[i]) continue;
		if (deg[i] < k)
		{
			//memset (visited , 0 , sizeof (visited));
			dfs (i);
		}
	}
	
	int ans = 0;
	
	for (int i = 0; i < n; i++)
	{
		if (!hasCut[i])
			ans ++;
	}
	
	printf("%d\n" , ans);

	return 0;
}