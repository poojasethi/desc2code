#include<stdio.h>
#include<vector>
#include<queue>
using namespace std;
 
int k; 
queue<int> q;
int degree[100005];
int removed[100005];
vector<int> adj[100005];
 
void BFS(int node)
{
    removed[node] = 1;
    q.push(node);
    while(!q.empty())
    {
        node = q.front();
        q.pop();
        for(int i=0; i<adj[node].size(); i++)
        {
            int next = adj[node][i];
            degree[next]--;    //either here to decrease the removed element's count from all the elements list 
                               //or, inside if below to remove from non- removed elements only
            if( (!removed[next]) && degree[next]<k)  
            {  
                removed[next] = 1;
                q.push(next);  
            }
        }
    }
}
 
 
int main()
{
    int n,m,a,b,count=0;
    scanf("%d%d%d",&n,&m,&k);
    for(int i=0; i<m; i++)
    {
        scanf("%d%d",&a,&b);
        adj[a].push_back(b), degree[a]++;
        adj[b].push_back(a), degree[b]++;
    }
    for(int i=0; i<n; i++)  if( (!removed[i]) && degree[i]<k)  BFS(i);
    for(int i=0; i<n; i++) if(!removed[i]) count++;
    printf("%d",count);
  return 0;
}