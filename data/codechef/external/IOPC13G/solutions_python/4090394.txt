#include<cstdio>
#include<vector>
#include<queue>
using namespace std;
queue<int> q;
vector<int> edges[100005];
vector<int> degree(100005,0);
vector<int> les(100005,0);
int n,m,k;
void dfs(int v)
{
	int i;	
	if(degree[v]<k)
		les[v]=1;
	else
		return;					
	for(i=0;i<edges[v].size();i++)
	{
		if(!les[edges[v][i]])
		{	
			degree[edges[v][i]]--;
			dfs(edges[v][i]);
		}	
	}
}
int main()
{
	int i,j,x,y,a,b,c,flag;
	scanf("%d %d %d",&n,&m,&k);
	for(i=1;i<=m;i++)
	{
		flag=0;		
		scanf("%d %d",&x,&y);			
		edges[x].push_back(y);
		degree[x]++;
		edges[y].push_back(x);
		degree[y]++;
	}
	int ans=0;	
	for(i=0;i<n;i++)
	{
		if(les[i])
			continue;		
		if(degree[i]<k&&!les[i])
			dfs(i);
	}
	for(i=0;i<n;i++)
	{
		if(!les[i])
			ans++;
	}
	printf("%d\n",ans);
	return 0;
}
		
			
		
