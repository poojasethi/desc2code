
/*Swarn Avinash Kumar ->
Keyword:
Bitch:
*/
#include <list>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <fstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cassert>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <cstring>
#define sz size()
#define ll long long
#define f(i,a,b) for(int i = a;i < b;i++)
#define fr(i,a,b) for(int i = a;i >= b;i--)
#define fitr(i,c) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define inf 9999999
#define bc(a) __builtin_popcount(a)
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define re return
#define ini(a,b) memset(a,b,sizeof(a))
#define be begin()
#define ee end()
#define fi first
#define se second
#define vi vector<int>
#define vs vector<string>
#define pb push_back
#define mp make_pair
#define rerr cout << "-" << endl
#define p(a) cout << a << endl
#define pr(a,n) f(i,0,n) cout << a[i] << " "

using namespace std;
inline int next_int() {
 int n = 0;
 int sign = 1;
 char c = getchar_unlocked();
 while (!('0' <= c && c <= '9')) {
  c = getchar_unlocked();
 }
 while ('0' <= c && c <= '9') {
  n = n * 10 + c - '0';
  c = getchar_unlocked();
 }
 return n;
}
int main() {
    int n,m,k;
    n = next_int();
    m = next_int();
    k = next_int();
    //cin >> n >> m >> k;
    int a,b;
    vi deg(n,0);
    vector<pair<int,int> > g;
    f(i,0,m) {
        a = next_int();
        b = next_int();
        //cin >> a >> b;
        deg[a]++;
        deg[b]++;
        g.pb(mp(a,b));
    }
    vi del(n,0);
    int done = 0;
    while(!done) {
        f(i,0,n) {
            if(deg[i] < k)
                del[i] = 1;
        }
        f(i,0,n)
            deg[i] = 0;
        f(i,0,g.sz) {
            if(del[g[i].fi]||del[g[i].se]) continue;
            deg[g[i].fi]++;
            deg[g[i].se]++;
        }
        done = 1;
        f(i,0,n) {
            if(del[i]) continue;
            if(deg[i] < k) {
                done = 0;
                break;
            }
        }
    }
    int res = 0;
    f(i,0,n) if(!del[i]) res++;
    p(res);
    re 0;
}
