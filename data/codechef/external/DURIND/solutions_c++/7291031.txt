#include <bits/stdc++.h>
#define lli long long
#define M 1000000007

using namespace std;

int Z[1000005];
int vis[1000005];
lli dp[1000005];

void build(string s)
{
	Z[0] = 0;
	int l = 0, r = 0;
	int n = (int)s.size();
	for ( int i = 1; i < (int)(s.size()); i++ ) {
		if ( i <= r ) Z[i] = min(Z[i-l], r - i + 1);
		while ( i + Z[i] < n && s[Z[i]] == s[i+Z[i]] ) Z[i]++;
		if ( i + Z[i] - 1 > r ) l = i, r = i + Z[i] - 1;
	}
	return;
}

int main()
{
	string s1,s2,p;
	cin >> s1 >> s2;
	p = s1 + "#" + s2;
	build(p);
	memset(vis, false, sizeof(vis));
	for ( int i = 0; i < s2.size(); i++ ) {
		if ( Z[s1.size()+1+i] == s1.size() ) vis[i+1] = true;
	}
	dp[0] = 1;
	int sz = (int)s1.size();
	for ( int i = 1; i <= (int)s2.size(); i++ ) {
		dp[i] = dp[i-1];
		if ( vis[i] ) {
			dp[i] = dp[i] + dp[max(0,i-sz)];
			if ( dp[i] >= M ) dp[i] -= M;
		}
	}
	lli ans = dp[(int)s2.size()] - 1;
	if ( ans < 0 ) ans += M;
	cout << ans << endl;
	return 0;
}