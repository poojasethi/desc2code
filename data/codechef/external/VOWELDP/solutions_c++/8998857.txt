#include<bits/stdc++.h>
using namespace std;
#define p 1000000007
int  po(int n, int r)
{
    // The array C is going to store last row of
    // pascal triangle at the end. And last entry
    // of last row is nCr
    int C[r+1];
    memset(C, 0, sizeof(C));
 
    C[0] = 1; // Top row of Pascal Triangle
 
    // One by constructs remaining rows of Pascal
    // Triangle from top to bottom
    for (int i = 1; i <= n; i++)
    {
        // Fill entries of current row using previous
        // row values
        for (int j = min(i, r); j > 0; j--)
 
            // nCj = (n-1)Cj + (n-1)C(j-1);
            C[j] = (C[j] + C[j-1])%p;
    }
    return C[r];
}
int main()
{
int t;
 long long n,ans;
 cin>>t;
while(t--)
 { int a[5];
   for(int i=0;i<5;i++)
   cin>>a[i];
   string g;
   cin>>g;
   int b[5]={0};
   for(int i=0;i<g.length();i++)
   {
      switch(g[i])
      {
      	case 'a':
      		b[0]++;
      		break;
      	case 'e':
      		b[1]++;
      		break;
      	case 'i':
      		b[2]++;
      		break;
      	case 'o':
      		b[3]++;
      		break;
      	case 'u':
      		b[4]++;
      		break;
      		default:
      			break;
      }
   }
   long long ans=1;
   for(int i=0;i<5;i++)
   { //cout<<a[i]<<"   "<<b[i]<<endl;
   if(b[i]!=0)
   {
   ans*=po(a[i]-1,b[i]-1);
   ans%=p;}
}
   cout<<ans%p<<endl;

 }
}
