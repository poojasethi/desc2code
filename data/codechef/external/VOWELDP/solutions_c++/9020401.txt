#include <stdio.h>
#include <string.h>

using namespace std;

#define MOD 1000000007

int numWays[101][21];

int findWays(int n, int r)
{
	if(r==0 || n==0)
		return 0;
	if(r>n)
		return 0;
	if(r==n)
		return 1;
	if(r==1)
		return 1;
	int ways = 0;
	for(int i=1; i<n; i++)
	{
		if(numWays[n-i][r-1] == -1)
			numWays[n-i][r-1] = findWays(n-i, r-1)%MOD;
		ways = (ways+numWays[n-i][r-1])%MOD;
	}
	return ways;
}

int main()
{
	int t, a, e, i, o, u;
	scanf("%d", &t);
	char s[21];
	memset(numWays, -1, sizeof(int)*101*21);
	for(int x=0; x<=100; x++)
		for(int y=0; y<=20; y++)
		{
			numWays[x][y] = findWays(x, y);
		}
	while(t--)
	{
		scanf("%d %d %d %d %d", &a, &e, &i, &o, &u);
		scanf("%s\n", s);
		int len = strlen(s);
		int a1=0, e1=0, i1=0, o1=0, u1=0;
		int x=0;
		while(x<len)
		{
			switch (s[x++])
			{
			case 'a':
				a1++;
				while(s[x] == 'a')
				{
					x++;
					a--;
				}
				break;
			case 'e':
				e1++;
				while(s[x] == 'e')
				{
					x++;
					e--;
				}
				break;
			case 'i':
				i1++;
				while(s[x] == 'i')
				{
					x++;
					i--;
				}
				break;
			case 'o':
				o1++;
				while(s[x] == 'o')
				{
					x++;
					o--;
				}
				break;
			case 'u':
				u1++;
				while(s[x] == 'u')
				{
					x++;
					u--;
				}
				break;
			default:
				break;
			}
		}
		int res = 1;
		if(a1>0)
			res = (res*numWays[a][a1])%MOD;
		if(e1>0)
			res = (res*numWays[e][e1])%MOD;
		if(i1>0)
			res = (res*numWays[i][i1])%MOD;
		if(o1>0)
			res = (res*numWays[o][o1])%MOD;
		if(u1>0)
			res = (res*numWays[u][u1])%MOD;
		printf("%d\n", res);
	}
	return 0;
}