#include<iostream>
#include<cstdio>
#include<vector>
#include<limits>
#include<algorithm>
#define INF 1000000007
#define pb push_back
using namespace std;
typedef vector<int> vi;
typedef pair<int,int> pi;
typedef vector<pi> vii;
const long long max_ll = numeric_limits<long long>::max();
vii list[1004];
int n,des,k;
int visited[1004];
long long d[1004],min1;
long long dis[1004];
int dfs(int s,int dis1,long long a1)
{
	//printf("s: %d  dis: %d  damage: %lld \n",s,dis1,a1);
	if(dis1>k)
	return 0;
	if(a1>min1)
	return 0;
	if(s==des)
	{
		if(a1<min1)
		{
			min1=a1;
		}
		return 1;
	}
	for(int i=0;i<list[s].size();i++)
	{
		int temp1 = list[s][i].first;
		int temp2 = list[s][i].second;
		if(visited[temp1]==0)
		{
			visited[temp1]=1;
			int m3 = dfs(temp1,dis1+temp2,max(d[temp1],a1));
			visited[temp1]=0;
			if(m3 ==1)
			return 1;
		}
	}
	return 0;
}			
int main()
{	
	int t,a,b,s,m,x;
	long long b1[10004];
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		scanf("%d",&k);
		//scanf("%d",&m);
		for(int i=0;i<=n;i++)
		{
			list[i].clear();
		}
		for(int i=1;i<=n;i++)
		{
			scanf("%lld",&d[i]);
			b1[i-1]=d[i];
		}
		for(int i=0;i<=n;i++)
		{
			visited[i]=0;
		}
		scanf("%d",&m);
		scanf("%d",&s);
		scanf("%d",&des);
		for(int i=0;i<m;i++)
		{
			scanf("%d",&a);
			scanf("%d",&b);
			scanf("%d",&x);
			list[a].pb(pi(b,x));
			list[b].pb(pi(a,x));
		}
		sort(b1,b1+n);
		min1 = max(d[s],d[des]);
		int p,q;
		for(p=0;b1[p]<min1;p++);
		q = n-1;
		while(p<q)
		{
			for(int i=0;i<=n;i++)
			{
				if(i!=s)
				{
					dis[i]=INF;
				}	
				else
				{
					dis[i]=0;
				}
			}
			min1 = b1[(p+q)/2];
			visited[s]=1;
			if(dfs(s,0,max(d[s],d[des])))
			{
				q = (p+q)/2;
			}
			else
			{
				p = (p+q)/2 + 1; 
			}
			visited[s]=0;
		}
		min1 = b1[p];
		//min1=max_ll;
		visited[s]=1;
		if(dfs(s,0,max(d[s],d[des]))==0)
		//if(dfs(s,0,d[s])==0)
		//if(min1==max_ll)
		printf("-1\n");
		else
		printf("%lld\n",min1);
	}
	return 0;
}
			