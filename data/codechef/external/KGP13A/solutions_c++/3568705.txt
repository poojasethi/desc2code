#include<iostream>
#include<cstdio>
#include<vector>
#include<stack>
#include<cstring>
using namespace std;
#define INF 99999
vector< vector<int> > v;
int dp[55][55];
int mincost=INF;
void proc(bool *visit) {
    int cost=0;
    //for(int i=0;i<v[0].size();i++) cout<<visit[i]<<"  ";cout<<"x"<<endl;
    for(int i=0;i<v[0].size();i++) {
        if(!visit[i]) {
            int tcost=INF;
            for(int j=0;j<v[0].size();j++) {
                if(visit[j]) {
                    if(dp[i][j]<tcost) tcost=dp[i][j];
                }
            }
            cost+=tcost;
        }
    }
    if(mincost>cost) mincost=cost;
}
void dfs(int s,int d,bool *visit) {
    //cout<<s+1<<"\t";
    if(s==d) {
        visit[s]=true;
        proc(visit);
    }
    else {
        visit[s]=true;
        for(int i=0;i<v[s].size();i++) {
            if(v[s][i]!=INF && i!=s && !visit[i]) dfs(i,d,visit);
        }
        visit[s]=false;
    }
}
void AllPath(int s,int d) {
    bool *visit=new bool[v[0].size()];
    //memset(visit,false,sizeof(visit));
    for(int i=0;i<v[0].size();i++) visit[i]=false;
    //cout<<s<<"->"<<d<<endl;
    dfs(s,d,visit);
    //cout<<endl;
}
int main() {
    int t,n,f,k,ver,w;
    scanf("%d",&t);
    vector<int> special;
    int x=0;
    while(t--) {
        v.clear();
        scanf("%d",&n);
        special.clear();
        v.resize(n);
        for(int i=0;i<n;i++) {
            v[i].resize(n,INF);
            scanf("%d",&f);
            if(f==1) special.push_back(i);
            scanf("%d",&k);
            while(k-->0) {
                scanf("%d%d",&ver,&w);
                ver--;
                v[i][ver]=w;
            }
        }
        for(int i=0;i<n;i++) v[i][i]=0;
        for(int i=0;i<n;i++) {
            for(int j=0;j<n;j++) {
                dp[i][j]=v[i][j];
            }
        }
        for(int k=0;k<n;k++) {
            for(int i=0;i<n;i++) {
                for(int j=0;j<n;j++) {
                    dp[k][i]=min(dp[k][i],dp[k][j]+dp[j][i]);
                }
            }
        }
        /*for(int i=0;i<n;i++) {
            for(int j=0;j<n;j++) {
                cout<<dp[i][j]<<" ";
            }
            cout<<endl;
        }*/
        mincost=INF;
        for(int i=0;i<special.size();i++) {
            for(int j=i+1;j<special.size();j++) {
                AllPath(special[i],special[j]);
            }
        }
        printf("Case %d: %d\n",x+1,mincost);
        x++;
    }
    return 0;
}
