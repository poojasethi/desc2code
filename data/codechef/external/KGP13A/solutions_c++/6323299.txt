#include<bits/stdc++.h>
#define s(a) scanf("%d",&a)
using namespace std;
struct node
{
  int tnum;
  int getter;
};
node get_value(int pos);

 int vis[100],gmin;
 int n,i,f,head[100],m,j,en,value;
 int count=0;
   
   
vector< int >v[55];
vector< int >w[55];

int main()
{ 
  int t,tcount=1;
  s(t);
  
  while(t--)
  {
  s(n);
  for(i=1;i<=n;i++)
  {
     v[i].clear();
     w[i].clear();  
  }
  for(i=1;i<=n;i++)
  {  
     s(head[i]);
     
     s(m);
     for(j=0;j<m;j++)
     {  
        int en,value;
        s(en);
        s(value);
        
        v[i].push_back(en);
        w[i].push_back(value);
        
     
     }
  }
  gmin = INT_MAX;
  
  for(i=1;i<=n;i++)
  {
     memset(vis,0,sizeof(vis));
     ::count=0;
     if(head[i])
     {
        vis[i]=1;
       node mini = get_value(i);
        //cout<<::count<<" "<<mini<<endl;
        //cout<<endl<<endl;
        if(::count<gmin)
        {
           gmin = ::count;
        }
     }
  }
  
  cout<<"Case "<<tcount<<": "<<gmin<<endl;
  tcount++;
  }
  return 0;
}
node get_value(int pos)
{
   int i,maxi=INT_MIN;   
   node get;
   get.tnum=0;
   int heret=0;
   //cout<<" pos"<<pos<<" ";
   for(i=0;i<v[pos].size();i++)
   {
      //cout<<"vis"<<vis[(v[pos][i])]<<" "<<"v[pos][i]"<<v[pos][i]<<" ";
      if(!vis[   (v[pos][i])  ]    )
      {
         vis[v[pos][i]]=1;
         //cout<<" inside ";
        get = get_value(v[pos][i]);
        heret += get.tnum;
        //cout<<"get"<<get.tnum<<get.getter<<" //";
        if(get.getter==-1)
        {
          ::count+= w[pos][i]*get.tnum;
         //  cout<<"count"<<::count<<" ";
         }else if(get.getter + w[pos][i]*get.tnum>maxi)
          { 
            if(maxi!=INT_MIN)
            ::count+=maxi;   
            maxi = get.getter+w[pos][i]*get.tnum;
       //     cout<<"maxi"<<maxi<<" ";
          }else
          {::count+=get.getter+w[pos][i]*get.tnum;
     //        cout<<"count"<<::count<<" ";
          }
      }
   }
   //cout<<"maxi"<<maxi<<" ";
   if(maxi == INT_MIN)
   {
       if(head[pos]==1)
       {
         // cout<<"head";
          node temp;
       temp.tnum=++heret;
       temp.getter=0;
       return temp;
       
       }
       else{
       //cout<<"gi";
       node temp;
       temp.tnum=++heret;
       temp.getter=-1;
       return temp;
       }
   }
   else
   {
      //cout<<"out";
   node temp;
       temp.tnum=++heret;
       temp.getter=maxi;
       return temp;
   }
}
