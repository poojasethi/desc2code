#include <iostream>
#include <fstream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <math.h>
#include <cstdio>
#include <assert.h>

#define mset(x,y) memset(x,y,sizeof(x))
#define INF 1000000000
#define MOD 1000000007
#define pb(X) push_back(X) 
#define fi first
#define sc second
#define All(c) c.begin(), c.end()
#define foreach(c, it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
 
using namespace std;
 
typedef long long int lli;
typedef long double ld;
typedef pair<int,int> pi;
typedef vector<int> vi;
typedef vector<double> vd;

inline int abs(int a)
{
    if(a>0) return a;
    return -a;
}

inline int sq(int a)
{
    return a*a;
}

int con[100];
vector<int> adl[100];
int dist[100][100];
int inpath[100];
lli mindis[100];
int vis[100];
int k;

bool dfs(int x, int y)
{
    if(vis[x]) return 0;
    vis[x]=1;
    if(x==y) inpath[x]=1;
    for(int i=0;i<adl[x].size();i++) if(dfs(adl[x][i],y)) inpath[x]=1;
    return inpath[x];
}

void dfsdis(int x, lli dis)
{
    if(vis[x]) return;
    vis[x]=1;
    if(inpath[x]) mindis[x]=0;
    else mindis[x]=dis;
    for(int i=0;i<adl[x].size();i++) dfsdis(adl[x][i],mindis[x]+dist[x][adl[x][i]]);
}

lli getDis(int x, int y)
{
    mset(inpath,0);
    mset(vis,0);
    dfs(x, y);
    mset(mindis,0);
    mset(vis,0);
    dfsdis(x,0);
    lli sum=0;
    for(int i=0;i<k;i++) sum+=mindis[i];
    return sum;
}

int main()
{

    int t;
    scanf("%d",&t);
    for(int tt=1;tt<=t;tt++)
    {
        scanf("%d",&k);
        for(int i=0;i<k;i++) adl[i].clear();

        mset(dist,0);
        for(int i=0;i<k;i++)
        {
            scanf("%d",&con[i]);
            int d,ind,dis;
            scanf("%d",&d);
            for(int j=0;j<d;j++)
            {
                scanf("%d%d",&ind,&dis);
                ind --;
                adl[i].pb(ind);
                dist[i][ind]=dis;
            }
        }

        lli mi=1e18;
        for(int i=0;i<k;i++)
            for(int j=i+1;j<k;j++)
                if(con[i]&&con[j])
                    mi=min(mi,getDis(i,j));
        printf("Case %d: %lld\n",tt,mi);
    }
    return 0;
}