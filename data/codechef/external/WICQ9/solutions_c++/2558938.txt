#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <ctime>
#include <iostream>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <utility>
#include <cassert>

using namespace std;

#define S(t);  scanf("%d", &t);
#define SL(t); scanf("%lld",&t);
#define SU(t); scanf("%llu", &t);
#define SD(t); scanf("%lf",&t);
#define SS(t); scanf("%s",t);
#define P(t);  printf("%d\n",t);
#define PL(t); printf("%lld\n",t);
#define PU(t); printf("%llu\n",t);
#define PD(t); printf("%f\n",t);
#define PS(t); printf("%s\n",t);
#define pn printf("\n")
#define sz(x); x.length();
#define all(x) (x).begin(),(x).end()
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define ABS(x)   ((x)>0?(x):(-(x)))
#define GCD(x,y) __gcd(x,y)
#define eraseUnique(V); (V).erase(unique(all(V)),(V).end());
#define eraseAll(V,num); (V).erase(remove(all(V),(num)),(V).end());
#define pb push_back
#define mp make_pair
#define ff first
#define ss second

#define REP(i,n) for(i=0; i<n; i++)
#define FOR(i,a,b) for(i=a; i<=b; i++)
#define MAXN 2105
#define MAXSZ 101010
#define MOD 100000007
#define PI 3.14159265358979323846264
#define INF 99999999

typedef long long int llint;
typedef vector <int> IV;
typedef map <int , int> IMAP;
typedef map <string, int> :: const_iterator iter;
typedef map <pair<int,int >, int> PAIR;
typedef multiset < int > MULTISET;
template <class T> inline T sqr(T x) {return x*x;}
template <class T> inline T cub(T x) {return x*x*x;}

int main()
{
	int i, j;
	int countHorX , countVerX , countHorO , countVerO , countHorT , countVerT;
	int cX , cO , cdX , cdO , cT , cdT ;
	char str[7][7];
	
	int t, c=0;
	S(t);
	while(t--)
	{
		c++;
		for(i=0; i<4; i++)
		{
			for(j=0; j<4; j++)
			{
				cin>>str[i][j];
			}
		}
		
		int okX = 0, okO = 0, noDot=1;
		
		/** HOR & VER CHECK**/
		for(i=0; i<4; i++)
		{
			countHorX = countVerX = countHorO = countVerO = countHorT = countVerT = 0;
			for(j=0; j<4; j++)
			{
				if(str[i][j] == '.') noDot = 0;
				
				if(str[i][j] == 'X') countHorX++;
				if(str[j][i] == 'X') countVerX++;
				
				if(str[i][j] == 'O') countHorO++;
				if(str[j][i] == 'O') countVerO++;
				
				if(str[i][j] == 'T') countHorT++;
				if(str[j][i] == 'T') countVerT++;
				
				
				/*
				cout<<countHorX<<" "<<countVerX<<endl;
				cout<<countHorO<<" "<<countVerO<<endl;
				cout<<countHorT<<" "<<countVerO<<endl<<"..............."<<endl;
				*/
				
			}
			if( (countHorX == 4 || (countHorX == 3 && countHorT == 1))
			  ||(countVerX == 4 || (countVerX == 3 && countVerT == 1)) )
			{
				okX = 1;
				break;
			}
			if( (countHorO == 4 || (countHorO == 3 && countHorT == 1))
			  ||(countVerO == 4 || (countVerO == 3 && countVerT == 1)) )
			{
				okO = 1;
				break;
			}
		}
		/** DIAG CHECK **/
		/** CHECK IF X OR Y DIDNT WIN **/
		if(!okX && !okO)
		{
			cX = cO = cdX = cdO = cT = cdT = 0;
		    for(i=0; i<4; i++)
		    {
			    for(j=0; j<4; j++)
			    {
				    if(i == j)
				    {
						if(str[i][j] == 'X') cX++;
						if(str[i][j] == 'O') cO++;
						if(str[i][j] == 'T') cT++;
					}
					if(i+j == 3)
					{
						if(str[i][j] == 'X') cdX++;
						if(str[i][j] == 'O') cdO++;
						if(str[i][j] == 'T') cdT++;
					}
				}
			}
			/*
			cout<< cX <<" "<< cdX <<endl;
			cout<< cO <<" "<< cdO <<endl;
			cout<< cT <<" "<< cdT <<endl<<"..........."<<endl; 
			*/
			
			if( (cX == 4 || (cX == 3 && cT == 1))
			  ||(cdX == 4 || (cdX == 3 && cdT == 1)) )
			{
				okX = 1;
			}
			if( (cO == 4 || (cO == 3 && cT == 1))
			  ||(cdO == 4 || (cdO == 3 && cdT == 1)) )
			{
				okO = 1;
			}
	    }
	    
		////////////////////////////////////////////////////////////////
		printf("Case #%d: ",c);
		if(okX) puts("X won");
		else
		if(okO) puts("O won");
		else
		if(noDot) puts("Draw");
		else
		puts("Game not completed");
		////////////////////////////////////////////////////////////////
	}
}
				 
