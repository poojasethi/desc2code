#include <iostream>
#include <stdio.h>
#include <queue>
#define max 1009

using namespace std;
int count[max];
void dfs(int v,int visited[],int comp[],int c,queue<int> adj[])
{
	visited[v]=1;
	comp[v]=c;
	count[c]++;
	while (!adj[v].empty()) {
	if(visited[adj[v].front()]==0)
	dfs(adj[v].front(),visited,comp,c,adj);
	adj[v].pop();
	}
}


int main()
{
	int t,ans=0,iso=0;
	scanf("%d",&t);
	while(t--)
	{   for(int i=0;i<1000;i++)count[i]=0;ans=0;iso=0;
		int n,m,p,q,c=1;
		int visited[max]={0};
		int comp[max]={0};
		queue<int> adj[max];
		//n=next();m=next();
		scanf("%d %d",&n,&m);
		for(int i=0;i<m;i++)
		{
		//p=next();q=next();
		scanf("%d %d",&p,&q);
		adj[p].push(q);
		adj[q].push(p);
		}
		for(int i=0;i<n;i++)
			if(visited[i]==0)
			{
				dfs(i,visited,comp,c,adj);
				//count[c]++;
				c++;
			}
			for(int k=1;k<c;k++)
			{
			    if(count[k]>1)ans+=(count[k])*(count[k]-1)/2;
			    else iso++;
			}
     ans+=iso*(iso-1)/2;
     printf("%d\n",ans);


	}
	return 0;
}
