#include<vector>
#include<iostream>
#include<stdio.h>
using namespace std;
int t;
int n,e;
int P[10005],R[10005];
int map[10005];
void MAKE_SET(int x){
    P[x]=x;
    R[x]=0;
}
void LINK(int x,int y){
    P[y]=x;
}
int FIND_SET(int x){
    if(x!=P[x]) P[x]=FIND_SET(P[x]);
    return P[x];
}
void UNION(int x,int y){
    LINK(FIND_SET(x),FIND_SET(y));
}
int main(){
    int a,b;
    scanf("%d",&t);
    while(t--){
        scanf("%d%d",&n,&e);
        for(int i=1;i<=n;i+=1) MAKE_SET(i),map[i]=0;
        for(int i=0;i<e;i++){
            scanf("%d%d",&a,&b);
            a++;b++;
            if(FIND_SET(a)!=FIND_SET(b)) UNION(a,b);
        }
        for(int i=1;i<=n;i+=1){
            map[FIND_SET(i)]++;
        }
        int c=0;int d=0;
        for(int i=1;i<=n;i+=1)
            if(map[i]==0) continue;
            else if(map[i]==1){
                d++;
            }
            else
            {
            c+=(map[i]*(map[i]-1)/2);
            }
        c+=(d*(d-1)/2);
        printf("%d\n",c);
    }
    return 0;
}