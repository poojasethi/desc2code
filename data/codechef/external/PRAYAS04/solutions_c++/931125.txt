#include <iostream>
#include <stdio.h>
#include <queue>
#define max 500
 
using namespace std;
 
void dfs(int v,int visited[],int comp_no[],int c,queue<int> adj[])
{
	visited[v]=1;
	comp_no[v]=c;
	while (!adj[v].empty()) {
	if(visited[adj[v].front()]==0)
	dfs(adj[v].front(),visited,comp_no,c,adj);
	adj[v].pop();
	}
}
 
 
 
void count(int comp_no[],int val[],int v){
    int i;
    for(i=0;i<v;i++){
        val[comp_no[i]]++;
    }
}
 
main()
{
	int t;
	scanf("%d",&t);
    while(t--)
	{
		int n,m,p,q,c=1;
		int visited[max]={0};
		int comp_no[max]={0};
		queue<int> adj[max];
		scanf("%d%d",&n,&m);
        for(int i=0;i<m;i++)
		{
		scanf("%d%d",&p,&q);
        adj[p].push(q);
		adj[q].push(p);
		}
		for(int i=0;i<n;i++)
			if(visited[i]==0)
			{
				dfs(i,visited,comp_no,c,adj);
				c++;
			}
		int z=0,i,a,val[c],notconn=0;
		for(i=0;i<c;i++){
		    val[i]=0;
        }
        for(i=0;i<n;i++){
                val[comp_no[i]]++;
        }		
         
		for(i=0;i<c;i++){
		    if(val[i]==1)
		    notconn++;
            z+=val[i]*(val[i]-1)/2;
        }
        if(notconn)
        z+=notconn*(notconn-1)/2;
        printf("%d\n",z);
	}
	return 0;
}  