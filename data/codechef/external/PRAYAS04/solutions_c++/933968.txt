#include <algorithm>
#include <iostream>
#include <sstream>
#include <fstream>
#include <memory>
#include <vector>
#include <string>
#include <bitset>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <climits>
#include <cstring>
#include <cstdio>
#include <cmath>
#define sz(a) ((int)(a).size())
#define foreach(i, v) for(__typeof((v).begin()) i=(v).begin(); i!=(v).end(); i++)
using namespace std;
typedef long long llong;
typedef pair<int, int> Item;

const int Maxn = 500+10;
const int INF = 0x7f7f7f7f;
const double eps = 1e-10;
const double pi = acos(-1.0);
inline int realcmp(double a, double b){ return (a>b+eps) ? 1 : ((a+eps<b)?-1:0); }

bool f[Maxn];
int cnt[Maxn];
vector<int> g[Maxn];

void dfs(int id, int src)
{
    f[id] = 1;
    cnt[src]++;
    for(int i=0; i<sz(g[id]); i++)
        if( f[g[id][i]] == 0 )
        {
            dfs(g[id][i], src);
        }
}

int main()
{
    int cas, n, m, u, v;

    scanf("%d", &cas);
    while( cas-- )
    {
        scanf("%d %d", &n, &m);
        memset(f, 0, sizeof(f));
        memset(cnt, 0, sizeof(cnt));
        for(int i=0; i<n; i++)
            g[i].clear();
        for(int i=0; i<m; i++)
        {
            scanf("%d %d", &u, &v);
            if( u != v )
            {
                g[u].push_back(v);
                g[v].push_back(u);
            }
        }

        int alone=0, ans=0;
        for(int i=0; i<n; i++)
            if( !f[i] )
            {
                dfs(i, i);
                if( cnt[i] == 1 )
                    alone++;
                else
                    ans += cnt[i]*(cnt[i]-1)/2;
            }
        ans += alone*(alone-1)/2;

        printf("%d\n", ans);
    }

    return 0;
}
