/**T <= 10
1 <= n <= 500
0 <= m <= n(n-1)/2
**/
#include<iostream>
#include<cstdio>
using namespace std;

const int MXM=500, MOD=(int)1e9+7;

int T, M, N;
int rank[MXM+1], P[MXM+1];

void init() {
    for(int i=0; i<N; i++) {
        rank[i]=0; P[i]=i;
    }
}

void link(int a, int b) {
    if(rank[a]>rank[b]) P[b]=a;
    else P[a]=b;
    if(rank[a]==rank[b]) rank[b]++;
}

int find(int n) {
    if(P[n]==n) return P[n];
    else return find(P[n]);
}

void merge(int a, int b) {
    link(find(a), find(b));
}

int main() {
    scanf("%d", &T);
    while(T--) {
        char nl;
        scanf("%c %d %d", &nl, &N, &M);
        init();
        int a, b;
        while(M--) {
            scanf("%d %d", &a, &b);
            merge(a, b);
        }
        int cnt=0;
        for(int i=1; i<N; i++)
        for(int j=0; j<i; j++)
        if(find(i)==find(j) || (find(i)==i && find(j)==j && rank[i]==rank[j] && rank[i]==0))
        cnt++;
        printf("%d\n", cnt%MOD);
    }
}
