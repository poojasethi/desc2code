/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}
int parent[505];
int rank[505];
int m[505];
int find(int i)
{
	if(i == parent[i]) {
		return i;
	}	
	return find(parent[i]);
}

void unionn(int u, int v)
{
	int x = find(u);
	int y = find(v);
	if(rank[x] < rank[y]) {
		parent[x] = y;
	}
	else if(rank[y] < rank[x]) {
		parent[y] = x;
	}
	else {
		rank[y]++;
		parent[x] = y;
	}
	return;	
}

void solve()
{
	int n, mm;
	s(n); s(mm);
	for(int i = 1; i <= n; i++) {
		parent[i] = i;
		rank[i] = 0;
		m[i] = 0;
	}
	rep(i, mm) {
		int u, v; s(u); s(v);
		u++; v++;
		if(find(u) != find(v)) unionn(u, v);
	}
	for(int i = 1; i <= n; i++) {
		m[find(i)]++;
	}
	int ans = 0;
	int iso = 0;
	for(int i = 1; i <= n; i++) {
		if(m[i] == 0) continue;
		if(m[i] == 1) iso++;
		else {
			ans += (((m[i] * (m[i] - 1)) / 2));
		}
	}
	ans += ((iso * (iso - 1)) / 2);
	pi(ans); pn;
}

int main()
{
	int t;
	scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
