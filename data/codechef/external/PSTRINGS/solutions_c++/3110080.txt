/*	Template by
	Ashwin Kumar
	IIT Delhi */
#include<algorithm>		//min(), max(), reverse(), sort(), next_permutation(), prev_permutation(), swap()
#include<iostream>
#include<cassert>		//assert()
#include<cmath>			//cos(in radians), sin(), tan(), acos(), asin(), atan(), modf(break into frac and inte parts)
						//log(), log10(), log2(), pow(), sqrt(), cbrt(), ceil(), floor(), fmod(), abs()  
#include<cstdio>		//fclose(), fopen(), fprintf(), fscanf(), printf(), scanf(), gets(), puts()
#include<cstdlib>		//srand(time(NULL)), rand()
#include<cstring>		//memcpy(), strcpy(), strcat(), strcmp(), memset(), strlen(), strtok(), strrchr()
#include<sstream>
#include<string>		//to_string(any numerical value), stoi(), stoll()
#include<ctime>   
#include<deque>			//iterators: begin(), end(), rbegin(), rend()
						//access:	 operator[], at(), front(), back() 
						//modifiers: push_back(), push_front(), pop_back(), pop_front(), erase(), clear()
#include<map>			//begin(), end(), rbegin(), rend(), operator[], at(), clear(), find()
						//priority_queue:  top(), push(), pop()
#include<queue>			//front(), back(), push(), pop()
#include<set>			//begin(), end(), rbegin(), rend(), insert(), erase(), clear(), find()
#include<stack>			//top(), push(), pop()
#include<vector>		//iterators: begin(), end(), rbegin(), rend()
						//access:	 operator[], at(), front(), back()
						//modifiers: push_back(), pop_back(), erase(), clear() 
using namespace std;

typedef pair<int, int> pii;
typedef long long LL;
#define MOD 1000000007
#define INF 1000000000

LL dp[400][11][1024];

bool check(int A, int K)
{
	int num = A;
	stack<int> digits;
	for (int i = 0; i < K; i++)
	{
		int d = num%2;
		digits.push(d);
		num >>= 1;
	}
	while (!digits.empty())
	{
		if (A%2 != digits.top())
			return 0;
		A >>= 1;
		digits.pop();
	}
	return 1;
}

LL runDP(int rm, int K, int bm)
{
	if (rm == 0)
		return 1;
	if (dp[rm][K][bm] != -1)
		return dp[rm][K][bm];
	LL ans = 0;
	//Case 1:
	int bm0 = (bm<<1);
	if (!check(bm0, K+1) && !check(bm0, K))
		ans = runDP(rm-1, K, (bm0%(1<<K)));
	//Case 2:
	int bm1 = (bm<<1)+1;
	if (!check(bm1, K+1) && !check(bm1, K))
		ans = (ans+runDP(rm-1, K, (bm1%(1<<K))))%MOD;
	dp[rm][K][bm] = ans;
	return ans;
}

int main()
{
	int T;
	scanf("%d", &T);
	memset(dp, -1, sizeof dp);
	while (T--)
	{
		int N, K;
		scanf("%d %d", &N, &K);
		if (K == 1)
			printf("0\n");
		else if (N < K)
			printf("%d\n", (1<<N));
		else if (N == K)
			printf("%d\n", (1<<N)-(1<<((N+1)/2)));
		else
		{
			LL ans = 0;
			for (int i = 0; i < (1<<K); i++)
				if (!check(i, K))
					ans = (ans+runDP(N-K, K, i))%MOD;
			printf("%lld\n", ans);
		}
	}
	return 0;
}
