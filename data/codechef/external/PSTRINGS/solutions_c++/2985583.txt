#include <vector>

#include <stack>
#include <cmath>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <queue>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <bitset>
#include <cstring>
#include <climits>
#include <map>
#include <cassert>
#define mod  1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define VI vector <int>
#define VII vector < vector <int> >
#define S1(x) scanf("%llu",&x)
#define MaxN 101
#define LOGMAXN 20
#define EPS 0.000001
using namespace std;

void input()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif
}

ill dp[405][1LL<<12];
int dd[1LL<<12][34];
int n,k;

int palin (int bit, int n)
{
    if (dd[bit][n] != -1) {
        return dd[bit][n];
    }
    int a[n];
    int i;
    F (i, 0, n) {

        int x = bit|(1LL<<i);
        if (x == bit) {
            a[i] = 1;
        } else {
            a[i] = 0;
        }
    }

    i = 0;
    int j = n-1;
    while (i < j) {
        if (a[i] != a[j]) {
            dd[bit][n] = 0;
            return false;
        }
        i++;
        j--;
    }
    dd[bit][n] = 1;
    return true;
}

ill f (int index, int bit)
{

    ill &result = dp[index][bit];
    if (result != -1) {
        return result;
    }
    if (index >= k) {
        if (palin (bit, k)) {
            return result=0;
        }
    }
    if (index == n) {
        return result=1;
    }
    if (index < k) {
        result = 0;
        result = result + f (index+1, bit|(1LL<<index)) + f (index+1, bit);
        if (result >= mod) {
            result = result % mod;
        }
        return result;
    }
    result = 0;
    if (!palin (bit, k+1)) {
        int x = (bit>>1);
        if (!palin (x, k)) {
            result = result + f (index+1, x);
            result = result % mod;
        }
    }

    if (!palin (bit | (1LL<<k), k+1)) {
        int x= bit>>1;
        x = x | (1LL<<(k-1));
        if (!palin (x, k)) {
            result = result + f (index+1, x);
        }
    }

    if (result >= mod) {
        result = result % mod;
    }
    return result;
}


int main()
{
    int t;
    input();
    S (t);
    while (t--) {
        S (n);
        S (k);
       // cout << n << " " << k << endl;
        memset (dd, -1, sizeof(dd));
        memset (dp, -1, sizeof(dp));
        printf ("%lld\n", f (0, 0));
    }


    return 0;
}
