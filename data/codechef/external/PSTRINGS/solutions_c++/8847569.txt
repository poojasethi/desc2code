#include <bits/stdc++.h>

using namespace std;

int mod = 1e9 + 7;

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n, k;
		scanf("%d %d",&n, &k);
		if(k>n)
		{
			cout<<(1<<n)<<endl;
			continue;
		}
		int m = 1<<k;
		int arr[m];
		int cur_dp[m], old_dp[m];
		for(int i=0;i<m;i++)
		{
			int j=i;
			vector <int> vv;
			for(int v=0;v<k;v++)
			{
				vv.push_back(j%2);
				j = j/2;
			}
			int h = k/2;
			int flag=1;
			for(int v=0;v<h;v++)
			{
				if(vv[v]!=vv[k-v-1])
					flag=0;
			}
			arr[i] = flag;
			old_dp[i] = 1-flag;
		}
		int mm = 1<<(k+1);
		int brr[mm];
		for(int i=0;i<mm;i++)
		{
			int j=i;
			vector <int> vv;
			for(int v=0;v<k+1;v++)
			{
				vv.push_back(j%2);
				j = j/2;
			}
			int h = (k+1)/2;
			int flag=1;
			for(int v=0;v<h;v++)
			{
				if(vv[v]!=vv[k-v])
					flag=0;
			}
			brr[i] = flag;
			//cout<<brr[i]<<" ";
		}
		for(int i=0;i<(n-k);i++)
		{
			for(int j=0;j<m;j++)
			{
				int h = j/2;
				int g = j%2;
				cur_dp[j] = 0;
				//cout<<"\n"<<j<<" "<< brr[h*2 + g]<<" "<<brr[(h + (1<<(k-1)))*2 + g]<<" ";
				if(!brr[h*2 + g])
					cur_dp[j] += old_dp[h];
				if(!brr[(h + (1<<(k-1)))*2 + g])
					cur_dp[j] += old_dp[h + (1<<(k-1))];
				cur_dp[j] = cur_dp[j]%mod;
				if(arr[j])
					cur_dp[j] = 0;
				//cout<<cur_dp[j]<<" ";
			}
			for(int j=0;j<m;j++)
			{
				old_dp[j] = cur_dp[j];
				assert(old_dp[j]>=0);
			}
		}
		int ans = 0;
		for(int i=0;i<m;i++)
			ans = (ans + old_dp[i])%mod;
		cout<<ans<<endl;
	}
	return 0;
}