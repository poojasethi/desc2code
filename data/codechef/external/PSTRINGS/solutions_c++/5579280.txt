#include<bits/stdc++.h>
using namespace std;
 
#define LET(x, a)  __typeof(a) x(a)
#define TR(v, it) for(LET(it, v.begin()); it != v.end(); it++)
#define si(x) scanf("%d",&x)
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define MOD 1000000007
#define SET(x,y) memset(x,y,sizeof(x));
#define LL long long int
#define ULL unsigned LL
#define PII pair<int, int>
LL dp[500][(1 << 10)];
int rem[(1 << 12)][12];
bool ispalin(string s) {
    string s2 = s;
    reverse(s2.begin(), s2.end());
    return s == s2;
}
int longest(int mask, int bits) {
    int &ret = rem[mask][bits];
    if (ret == -1) {
        string s;
        for (int i = 0; i < bits; i++) {
            s += ((mask & 1) + '0');
            mask >>= 1;
        }
        for (int i = 0; i < bits; i++) {
            string cs = "";
            for (int j = i; j < bits; j++) {
                cs += s[j];
                if (ispalin(cs))
                    ret = max(ret, j - i + 1);
            }
        }
    }
    return ret;
}
int n, k;
LL getans(int n, int pmask = 0) {
    if (longest(pmask, min(n, 11)) >= k)
        return 0;
    if (n == ::n)
        return 1;
    pmask &= ((1 << 10) - 1);
    LL &ret = dp[n][pmask];
    if (ret == -1) {
        ret = getans(n + 1, pmask << 1) + getans(n + 1, (pmask << 1) + 1);
        if (ret >= MOD)
            ret -= MOD;
    }
    return ret;
}
int main() {
    int t;
    memset(rem, -1, sizeof(rem));
    cin >> t;
    while (t--) {
        cin >> n >> k;
        memset(dp, -1, sizeof(dp));
        cout << getans(0, 0) << endl;
    }
    return 0;
}

