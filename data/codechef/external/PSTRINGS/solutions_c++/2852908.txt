#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;

#define MOD 1000000007

bool ispalin[1<<11][2];
long long int dp[401][1<<11];

void preprocess(int k)
{
	int limit=1<<(k+1);
	for(int i=0;i<limit;i++)
	{
		int a=1<<(k-1),b=1;
		bool palin=true;
		while(a>b)
		{
			bool x=(a&i)>0,y=(b&i)>0;
			if(x!=y)
			{
				palin=false;
				break;
			}
			a=a>>1;
			b=b<<1;
		}
		ispalin[i][0]=palin;
		a=1<<k;
		b=1;
		palin=true;
		while(a>b)
		{
			bool x=(a&i)>0,y=(b&i)>0;
			if(x!=y)
			{
				palin=false;
				break;
			}
			a=a>>1;
			b=b<<1;
		}
		ispalin[i][1]=palin;
	}
}
long long int solve(int n,int k)
{
	memset(dp,0,sizeof dp);
	preprocess(k);
	int limit=1<<k;
	for(int i=0;i<limit;i++)
		dp[k][i]=ispalin[i][0]?0:1;
	long long int ans=0;
	for(int i=k;i<n;i++)
	{
		for(int j=0;j<limit;j++)
		{
			int bm=j<<1;
			int bm0=bm&(limit-1);
			if(!ispalin[bm0][0]&&!ispalin[bm][1])
				dp[i+1][bm0]+=dp[i][j];
			bm++;
			bm0++;
			if(!ispalin[bm0][0]&&!ispalin[bm][1])
				dp[i+1][bm0]+=dp[i][j];
			dp[i+1][j]%=MOD;
		}
	}
	for(int i=0;i<limit;i++)
	{
		ans+=dp[n][i];
		ans=ans%MOD;
	}
	if(k>n)
		ans=1<<n;
	return ans;
	
}
int main()
{
	int n,k,t;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&n,&k);
		printf("%lld\n",solve(n,k));
	}
	return 0;
}