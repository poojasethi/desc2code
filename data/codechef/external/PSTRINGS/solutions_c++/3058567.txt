#include <iostream>
#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <queue>
#include <map>
#include <set>
#include <algorithm>
#include <cstdlib>
#include <cmath>
#include <cctype>
#include <bitset>
#define vi vector < int >
#define mod 1000000007
#define inf 987654321
#define dinf -inf
#define lo long long int
#define S(n) scanf("%d",&n);
#define SL(n) scanf("%lld",&n);
#define P(n) printf("%d",n);
#define PL(n) printf("%lld",n);
#define spa printf(" ");
#define stt(a,v) memset(a, v, sizeof (a))
#define nwl puts("");

using namespace std;


//string tostring(lo v) { ostringstream sout; sout << v; return sout.str(); }
#define two(x) (1ll << x)
#define contain(x, y) ( x & (two(y)))


bool ispalin[12][two(13)];
int dp[401][two(13)];
int n, k;
//const int mod = 1e9 + 7;
#define getcx getchar_unlocked
inline void inp( int &n )
{
        n=0;
         int ch=getcx();  int sign=1;
        while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}

        while(  ch >= '0' && ch <= '9' )
                n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
                n=n*sign;
}
void precal (  ) {
    for (int set = 2; set <= 12; set++) {
        for (int i = 0; i < two(set); i++) {
            bool flag = true;
            for (int st = 0, en = set - 1; st < en; st++, en--) {
                if ( ((i >> st) & 1) !=  ((i >> en) & 1) ) {
                    flag = false;
                    break;
                }
            }
            ispalin[set][i] = flag;
        }
    }
}
int solve (int pos, int mask) {
    if (pos >= k && ispalin[k][mask] == true)
        return 0;
    if(pos>=n)
        return 1;
    int &r = dp[pos][mask];
    if( r != -1 )
        return r;
    r = 0 ;
    if (pos < k || !ispalin[k+1][2*mask])
    r += solve(pos + 1, (2*mask)&(two(k)-1));
        if (pos < k || !ispalin[k+1][2*mask + 1])
    r += solve(pos + 1, (2*mask + 1) & (two(k) - 1));
    if(r>mod)
        r=r-mod;
    return r;
}
int main ( ) {
    precal (  );
    int tc;
    inp(tc);//cin >> tc;
    while (tc--) {
        stt (dp, -1);
       inp(n);inp(k);// cin >> n >> k;
       int ans;
        if(k==1)
            ans = 0;
        else
        ans = solve(0, 0);
       
        P(ans);nwl;//cout << ans << endl;
    }

}