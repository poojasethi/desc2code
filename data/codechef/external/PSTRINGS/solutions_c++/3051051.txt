#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include<string>
#include <algorithm>
#define ll long long
using namespace std;
vector<vector<ll> > dp;
vector<vector<int> > isp;
ll mod=1000000007;
bool ispal(ll mask,int len)
{
if(isp[mask][len]!=-1)return isp[mask][len];
int arr[1000];
for(int i=0;i<len;++i)
{
arr[i]=((mask>>i)&1);
}
for(int i=0;i<len/2;++i)
if(arr[i]!=arr[len-i-1])
{isp[mask][len]=0;
return 0;
}
isp[mask][len]=1;
return 1;

}
int k;

ll fdp(ll n,ll mask)
{
if(n==k)
{
if(ispal(mask,k))return 0;
return 1;
}
if(ispal(mask,k))return 0;
if(dp[n][mask]!=-1)return dp[n][mask];
ll ans=0;

if(!ispal((1<<k)+mask,k+1))ans+=fdp(n-1,((1<<k)+mask)>>1);
if(!ispal(mask,k+1))ans+=fdp(n-1,mask>>1);

ans%=mod;
dp[n][mask]=ans;
return ans;
}

ll doit()
{
int n;
cin>>n>>k;
dp.clear();
dp.resize(n+1);
for(int i=0;i<=n;++i)
dp[i].resize(1<<k);
for(int i=0;i<=n;++i)
for(int j=0;j<(1<<k);++j)
dp[i][j]=-1;
if(n<k)return 1<<n;
ll ans=0;
for(int i=0;i<(1<<k);++i){ans+=fdp(n,i);ans%=mod;}
return ans;
}

int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    isp.resize(2050);
    for(int i=0;i<2050;++i)isp[i].resize(12);
    for(int i=0;i<2050;++i)
    for(int j=0;j<12;++j)isp[i][j]=-1;
    int t;
    cin>>t;
    while(t--)
    {
        cout<<doit()<<endl;
    }
    return 0;
}
