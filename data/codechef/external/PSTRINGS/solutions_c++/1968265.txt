//Abhishek Paliwal
#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<malloc.h>
#include<string.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<utility>
#include<climits>
#include<map>

#define FOR(i,s,n) for(i=s;i<n;i++)
#define FORD(i,s,n) for(i=s;i>n;i--)
#define LL long long
#define M 1000000007

using namespace std;
bool check(LL p,LL k)
{
	LL x=0,y=p;
	while(k--)
	{
		x<<=1;
		x+=(p&1);
		p>>=1;
	}
	if(x==y)
		return false;
	return true;
}

LL pow(LL x,LL n)
{
	LL ans=1;
	while(n)
	{
		if((n&1)==1)
		{
			ans*=x;
			ans%=M;
		}
		x*=x;
		x%=M;
		n>>=1;
	}
	return ans;
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		bool a[10000]={0};
		bool b[10000]={0};

		LL ans[2000][410]={{0}};


		LL n,k;
		scanf("%lld%lld",&n,&k);
		if(n<k)
		{
			printf("%lld\n",pow(2,n));
			continue;
		}
		LL h=1<<k;
		LL hc=~h;
		LL i,j;
		for(i=0;i<h;i++)
		{
			a[i]=check(i,k);
			if(a[i])
				ans[i][k-1]=1;
		}
		for(i=0;i<(h<<1);i++)
			b[i]=check(i,k+1);
		for(i=k;i<n;i++)
		{
			for(j=0;j<h;j++)
			{
				if(a[j] && ans[j][i-1])
				{
					LL x=(j<<1);
					LL y=x+1;
					if(b[x] && a[ hc&x ])
					{
						x=hc&x;
						ans[x][i]+=ans[j][i-1];
						ans[x][i]%=M;
					}
					if(b[y] && a[ hc&y ])
					{
						y=hc&y;
						ans[y][i]+=ans[j][i-1];
						ans[y][i]%=M;
					}
				}
			}
		}
		LL s=0;
		for(i=0;i<h;i++)
		{
			s+=ans[i][n-1];
			s%=M;
		}
		printf("%lld\n",s);
	}
	return 0;
}
