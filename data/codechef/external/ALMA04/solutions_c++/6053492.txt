#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define sl(n) scanf("%lld",&n);
#define mem(a,val) memset(a,val,sizeof(a))
//#define for<(i,a,b) for(i=a;i<b;i++)
//#define for=(i,a,b) for(i=a;i<=b;i++)
#define nl printf("\n");
#define pb push_back
#define mp make_pair
#define f first
#define s second
using namespace std;
int mat[7][7],C[7][7];
int a,b,c,d,e,one,two,three,four,ans;
int power_matrix(int n)
{	int temp[6][6],val;
	int i,j,k;
	for(i=1;i<=5;i++)
		for(j=1;j<=5;j++)
			temp[i][j]=0;
	for(i=1;i<=6;i++) temp[i][i]=1;
	while(n>0)
	{	if(!(n&1))
		{	//mat*mat
			for(i=1;i<=5;i++)
			{	for(k=1;k<=5;k++)
				{	int sum=0;
					for(j=1;j<=5;j++)
						sum=(sum%mod*(1LL)+((mat[i][j]%mod*(1LL)*mat[j][k]%mod)%mod)*(1LL))%mod;
					C[i][k]=sum%mod;
				}
			}
			for(i=1;i<=5;i++)
				for(j=1;j<=5;j++)
					mat[i][j]=C[i][j]%mod;
			n>>=1;
		}
		else
		{	//temp=temp*mat
			for(i=1;i<=5;i++)
			{	for(k=1;k<=5;k++)
				{	int sum=0;
					for(j=1;j<=5;j++)
						sum=(sum%mod*(1LL)+((mat[i][j]%mod*(1LL)*temp[j][k]%mod)%mod)*(1LL))%mod;
					C[i][k]=sum%mod;
				}
			}
			for(i=1;i<=5;i++)
				for(j=1;j<=5;j++)
					temp[i][j]=C[i][j]%mod;
			n--;
		}
	}
	one=(one+mod)%mod;two=(two+mod)%mod;three=(three+mod)%mod;four=(four+mod)%mod;
	val=(temp[1][1]%mod*(1LL)*four)%mod;
	val=((val%mod+(temp[1][2]%mod*(1LL)*three)%mod)*(1LL))%mod;
	val=((val%mod+(temp[1][3]%mod*(1LL)*two)%mod)*(1LL))%mod;
	val=((val%mod+(temp[1][4]%mod*(1LL)*one)%mod)*(1LL))%mod;
	val=((val%mod+temp[1][5]%mod)*(1LL))%mod;
	return val%mod;
}
int main()
{	int t,i,j;
	int n;
	cin>>t;
	while(t--)
	{	for(i=1;i<=5;i++)
			for(j=1;j<=5;j++)
				mat[i][j]=(LL)0;
		scanf("%d",&n);
		scanf("%d%d%d%d%d",&a,&b,&c,&d,&e);
		scanf("%d%d%d%d",&one,&two,&three,&four);
		mat[1][1]=(a+mod)%mod;mat[1][2]=(b+mod)%mod;mat[1][3]=(c+mod)%mod;mat[1][4]=(d+mod)%mod;mat[1][5]=(e+mod)%mod;
		mat[2][1]=1;mat[3][2]=1;mat[4][3]=1;mat[5][5]=1;
		//cout<<"hell";
		ans=power_matrix(n-4)%mod;
		printf("%d\n",ans%mod);
	}
	return 0;
}