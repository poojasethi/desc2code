/*Author :rednivrug15 */
#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define rep(i,n) for(int i=0; i<n ; i++)
using namespace std;
//#define long double double
 
#define REP(i,n) for (int i = 1; i <= n; i++)
#define ll long long
/*Change the value of mod here*/
#define mod (ll)(1e9+7)
 
long long power(ll a,ll b)
{
    long long ret=1;
 
    while(b>0)
    {
        if(b%2==1)
           ret=(ret*a)%mod;
        a=(a*a)%mod;
        b/=2;
    }
    return ret;
}
 
long long gcd(long long a,long long b)
{
    return b==0?a:gcd(b,a%b);
}
 
 
void multiply(long long A[5][5],long long B[5][5])
{
    long long C[5][5];
    memset(C,0,sizeof(C));
 
    for(int i=0; i<5; i++)
    {
        for(int j=0; j<5; j++)
        {
            for(int k=0; k<5; k++)
            {
                C[i][j]=(C[i][j]+A[i][k]*B[k][j]);
                if(C[i][j]>=mod)
                    C[i][j]%=mod;
            }
        }
    }
 
    for(int i=0; i<5; i++)
        for(int j=0; j<5; j++)
        A[i][j]=C[i][j];
}
 
long long total[5][5];
long long F[5][5];
 
void powmat(long long b)
{
    for(int i=0; i<5; i++)
        for(int j=0; j<5; j++)
        total[i][j]=(i==j);
 
    while(b>0)
    {
        if(b%2==1)
            multiply(total,F);
        multiply(F,F);
        b/=2;
    }
 
}
 
inline long long solve(ll n,ll a,ll b,ll c,ll d,ll e,ll T[5])
{
    memset(F,0,sizeof(F));
 
    F[0][0]=a,F[0][1]=b,F[0][2]=c,F[0][3]=d,F[0][4]=e;
    F[1][0]=1;
    F[2][1]=1;
    F[3][2]=1;
    F[4][4]=1;
 
    long long G[5];
    for(int i=0; i<4; i++) G[i]=T[i+1];
     reverse(G,G+4);
    G[4]=1;
 
    powmat(n-4);
 
    long long ans=0;
    for(int i=0; i<5; i++)
    {
        //cout<<total[0][i]<<" "<<G[i]<<endl;
        ans=(ans+total[0][i]*G[i])%mod;
    }
    return ans;
}
 
int main()
{
    int t;
    cin>>t;
 
    while(t--)
    {
        long long int n,a,b,c,d,e,T[5];
        cin>>n>>a>>b>>c>>d>>e>>T[1]>>T[2]>>T[3]>>T[4];
 
        if(a<0)
            a+=mod;
        if(b<0)
            b+=mod;
        if(c<0)
            c+=mod;
        if(d<0)
            d+=mod;
        if(e<0)
            e+=mod;
 
        for(int i=1; i<=4; i++)
            if(T[i]<0)
             T[i]+=mod;
 
        if(n<=4)
        {
            printf("%lld\n",T[n]);
            continue;
        }
        
        printf("%lld\n",solve(n,a,b,c,d,e,T));
 
    }
    return (0);
}
 