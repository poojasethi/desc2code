/*
Template belongs to : Himanshu Jaju [himanshujaju]
*/

#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define msi       map<string,int>
#define msit      map<string,int>::iterator
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x)
#define PI(x)     printf("%d",x)

#define FOR(i,a,b)      for(int i=a;i<b;i++)
#define RFOR(i,a,b)     for(int i=b-1;i>=a;i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007

#define PI  acos(-1)

#define CASE(x)   cout<<"Case "<<x<<": ";

typedef struct
{
      LL mat[5][5];
} node;

node base_mat(LL a,LL b,LL c,LL d)
{
      node ret;
      FOR(i,0,5) FOR(j,0,5) ret.mat[i][j] = 0;
      ret.mat[0][0] = (a + MOD)%MOD;
      ret.mat[0][1] = (b + MOD)%MOD;
      ret.mat[0][2] = (c + MOD)%MOD;
      ret.mat[0][3] = (d + MOD)%MOD;
      ret.mat[0][4] = ret.mat[1][0] = ret.mat[2][1] = ret.mat[3][2] = ret.mat[4][4] = 1;
      return ret;
}

node mul(node a,node b)
{
      node ret;
      FOR(i,0,5) FOR(j,0,5)
      {
            ret.mat[i][j] = 0;
            FOR(k,0,5) ret.mat[i][j] = ((ret.mat[i][j] + a.mat[i][k]*b.mat[k][j])%MOD + MOD)%MOD;
      }
      return ret;
}

node get(node base,LL n)
{
      if(n == 1) return base;
      node x = get(base,n/2);
      x = mul(x,x);
      if(n&1) x = mul(x,base);
      return x;
}

int main()
{
      inp_s;
      DRT()
      {
            LL n,a,b,c,d,e;
            cin>>n>>a>>b>>c>>d>>e;
            VLL arr(5);
            arr[0] = (e + MOD)%MOD;
            FOR(i,1,5) cin>>arr[i];
            if(n<5) cout<<arr[n]<<endl;
            else
            {
                  node x = get(base_mat(a,b,c,d),n-4);
                  LL ans = 0;
                  FOR(i,0,5) ans = ( (ans + (x.mat[0][i]*arr[4-i])%MOD)%MOD + MOD)%MOD;
                  cout<<ans<<endl;
            }
      }
      return 0;
}
