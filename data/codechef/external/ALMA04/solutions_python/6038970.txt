import java.util.Scanner;

public class Main {
    static long mod = 1000000007;

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int T = input.nextInt();
        for (int t=0; t<T; t++) {
            int N = input.nextInt();
            if (N < 5) throw new RuntimeException();
            long a = input.nextInt();
            long b = input.nextInt();
            long c = input.nextInt();
            long d = input.nextInt();
            long e = input.nextInt();
            long t1 = input.nextInt();
            long t2 = input.nextInt();
            long t3 = input.nextInt();
            long t4 = input.nextInt();
            long t5 = (a*t4+b*t3+c*t2+d*t1+e)%mod;
            long[][] A = new long[][] {
                {a+1, b-a, c-b, d-c, -d},
                {1, 0, 0, 0, 0},
                {0, 1, 0, 0, 0},
                {0, 0, 1, 0, 0},
                {0, 0, 0, 1, 0}
            };
            long[][] B = pow(A, N-5);
            long answer = B[0][0]*t5;
            answer %= mod;
            answer += B[0][1]*t4;
            answer %= mod;
            answer += B[0][2]*t3;
            answer %= mod;
            answer += B[0][3]*t2;
            answer %= mod;
            answer += B[0][4]*t1;
            answer %= mod;
            if (answer < 0) {
                answer += mod;
            }
            System.out.println(answer);
        }
    }

    static long[][] pow(long[][] A, int exp) {
        long[][] result = {
            {1,0,0,0,0},
            {0,1,0,0,0},
            {0,0,1,0,0},
            {0,0,0,1,0},
            {0,0,0,0,1}
        };
        long[][] pow = A;
        while (exp > 0) {
            if ((exp&1) != 0) {
                result = multiply(result, pow);
            }
            pow = multiply(pow, pow);
            exp >>= 1;
        }
        return result;
    }

    static long[][] multiply(long[][] A, long[][] B) {
        long[][] C = new long[5][5];
        for (int x=0; x<5; x++) {
            for (int y=0; y<5; y++) {
                for (int k=0; k<5; k++) {
                    C[x][y] += A[x][k]*B[k][y];
                    C[x][y] %= mod;
                }
            }
        }
        return C;
    }

}
