#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define sl(n) scanf("%lld",&n);
#define mem(a,val) memset(a,val,sizeof(a))
//#define for<(i,a,b) for(i=a;i<b;i++)
//#define for=(i,a,b) for(i=a;i<=b;i++)
#define nl printf("\n");
#define pb push_back
#define mp make_pair
#define f first
#define s second
using namespace std;
LL mat[7][7],C[7][7];
LL a,b,c,d,e,one,two,three,four,ans;
LL power_matrix(int n)
{	LL temp[6][6],val;
	int i,j,k;
	for(i=1;i<=5;i++)
		for(j=1;j<=5;j++)
			temp[i][j]=(LL)0;
	for(i=1;i<=6;i++) temp[i][i]=(LL)1;
	while(n>0)
	{	if(n%2==0)
		{	//mat*mat
			for(i=1;i<=5;i++)
			{	for(k=1;k<=5;k++)
				{	LL sum=(LL)0;
					for(j=1;j<=5;j++)
						sum=(sum%mod+(mat[i][j]%mod*mat[j][k]%mod)%mod)%mod;
					C[i][k]=sum%mod;
				}
			}
			for(i=1;i<=5;i++)
				for(j=1;j<=5;j++)
					mat[i][j]=C[i][j]%mod;
			n/=2;
		}
		else
		{	//temp=temp*mat
			for(i=1;i<=5;i++)
			{	for(k=1;k<=5;k++)
				{	LL sum=(LL)0;
					for(j=1;j<=5;j++)
						sum=(sum%mod+(mat[i][j]%mod*temp[j][k]%mod)%mod)%mod;
					C[i][k]=sum%mod;
				}
			}
			for(i=1;i<=5;i++)
				for(j=1;j<=5;j++)
					temp[i][j]=C[i][j]%mod;
			n--;
		}
	}
	/*for(i=1;i<=5;i++)
	{	for(j=1;j<=5;j++)
			cout<<temp[i][j]<<" ";
		nl;
	}*/
			
	//cout<<"hell";
	one=(one+mod)%mod;two=(two+mod)%mod;three=(three+mod)%mod;four=(four+mod)%mod;
	val=((temp[1][1]%mod*four)%mod+(temp[1][2]%mod*three)%mod+(temp[1][3]%mod*two)%mod+(temp[1][4]%mod*one)%mod+(temp[1][5])%mod)%mod;
	return val%mod;
}
int main()
{	int t,i,j;
	int n;
	cin>>t;
	while(t--)
	{	for(i=1;i<=5;i++)
			for(j=1;j<=5;j++)
				mat[i][j]=(LL)0;
		scanf("%d",&n);
		scanf("%lld%lld%lld%lld%lld",&a,&b,&c,&d,&e);
		scanf("%lld%lld%lld%lld",&one,&two,&three,&four);
		mat[1][1]=(a+mod)%mod;mat[1][2]=(b+mod)%mod;mat[1][3]=(c+mod)%mod;mat[1][4]=(d+mod)%mod;mat[1][5]=(e+mod)%mod;
		mat[2][1]=(LL)1;mat[3][2]=(LL)1;mat[4][3]=(LL)1;mat[5][5]=(LL)1;
		//cout<<"hell";
		ans=power_matrix(n-4)%mod;
		printf("%lld\n",ans%mod);
	}
	return 0;
}