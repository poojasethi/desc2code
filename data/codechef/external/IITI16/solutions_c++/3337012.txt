#include <bits/stdc++.h>
using namespace std;

#define pb push_back
#define mp make_pair
#define all(X) (X).begin(),(X).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define MOD 1000000007

int N,i,j,T,K;
vector<vector<int> > G;
long long f(int v,int p);
int dfs(int v,int p);
int num[100000+10];
bool isk[100000+10];
long long zk;

int main()
{
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d",&N);
        G.clear();
        G.resize(N+1);
        for(i = 0; i < N-1; i++)
        {
            int a,b;
            scanf("%d %d",&a,&b);
            G[a].pb(b);
            G[b].pb(a);
        }        
        memset(isk,0,sizeof isk);
        scanf("%d",&K);
        int root = 1;
        for(i = 0; i < K; i++)
        {
            scanf("%d",&j);
            isk[j] = true;
            root = j;
        }
        zk = 0;
        dfs(root,0);      
        long long ans = f(root,0);
        printf("%lld\n",K ? ans : zk);
    }
    
    return 0;
}

int dfs(int v,int p)
{           
    num[v] = isk[v];    
    tr(G[v],it)
    {
        if(*it != p)
        {            
            num[v] += dfs(*it, v);            
        }
    }    
    return num[v];
}
    
long long f(int v,int p)
{
    long long ans = 1;
    tr(G[v],it)
    {
        if(*it != p)        
            ans = (ans * (f(*it, v) + (num[*it] ? 0 : 1))) % MOD;                
    }
    zk = (zk + ans) % MOD;
    return ans;
}
