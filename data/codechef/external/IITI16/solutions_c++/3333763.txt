#include <bits/stdc++.h>
using namespace std;
#define MAX 123456
#define MOD 1000000007
typedef unsigned long long LL;

vector<LL> v[MAX];
LL arr[MAX];
bool vis[MAX];
LL ans[MAX];
LL fin = 0;

bool dfs(LL idx){
    vis[idx] = true;
    LL res1 = 0, res2 = 1;
    bool f1 = false;

    for(size_t i = 0; i < v[idx].size(); ++i){
        LL x = v[idx][i];
        if (vis[x]) continue;

        bool flag = dfs(x);
        f1 |= flag;

        LL rep = ans[x];
        if (flag) {
            res2 = ((res2%MOD) * (rep%MOD))%MOD;
        }
        else {
            LL tmp1 = ((res1%MOD) + (rep%MOD))%MOD;

            LL tmp2 = ((res1%MOD) * (rep%MOD))%MOD;
            res1 = (tmp1 + tmp2)%MOD;
        }
    }

    LL tmp1 = ((res1%MOD) * (res2%MOD))%MOD;
    LL res = ((res2%MOD) + (tmp1%MOD))%MOD;
    ans[idx] = res;

    fin = (fin + ans[idx])%MOD;
    f1 |= (arr[idx] == 1);
    vis[idx] = false;
    return f1;
}

void solve(){
    LL n,a,b,m;
    memset(arr,0,sizeof(arr));
    memset(ans,0,sizeof(ans));
    memset(vis,false,sizeof(vis));
    fin = 0;
    cin >> n;

    for(LL i = 0; i <= n; ++i) v[i].clear();
    for(LL i = 0; i < n-1; ++i){
        cin >> a >> b;
        v[a].push_back(b);
        v[b].push_back(a);
    }
    cin >> m;
    if (m == 0){
        dfs(1);
        cout << fin << endl;
    }
    else {
        LL mn = LLONG_MAX;
        for(LL i = 0; i < m; ++i)
            cin >> a, arr[a] = 1, mn = min(mn,a);
        dfs(mn);
        cout << ans[mn] << endl;
    }
}

int main()
{
    ios_base::sync_with_stdio(0);
    LL t;
    cin >> t;
    while(t--){ solve(); }
    return 0;
}
