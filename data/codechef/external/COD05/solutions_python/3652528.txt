/*
@author Vikas Singh
*/

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.util.HashSet;
import java.util.StringTokenizer;
class COD05
{
	public static void main(String args[]) 
	{
      //      long startTime = System.currentTimeMillis();
	 InputStream inputStream = System.in;
	InputReader4 in = new InputReader4(inputStream);
 
	char arr1[]=in.next().toCharArray();//"aaaa".toCharArray();
 
	char arr2[]=in.next().toCharArray();
 
	char arr3[]=in.next().toCharArray();
 
	char arr4[]=in.next().toCharArray();
 
	HashSet set=new HashSet();
	set.add("aaab");
	set.add("aaba");
	set.add("abaa");
	set.add("baaa");
	set.add("bbba");
	set.add("bbab");
	set.add("babb");
	set.add("abbb");
	set.add("aaaa");
	set.add("bbbb");
 
	for(int i=0;i<=2;i++)
		{
 
			String str=""+arr1[i]+arr1[i+1]+arr2[i]+arr2[i+1];
 
			if(set.contains(str))
			{
				System.out.println("POSSIBLE");
 
				return;
			}
		}
 		
		for(int i=0;i<=2;i++)
		{
                String str=""+arr2[i]+arr2[i+1]+arr3[i]+arr3[i+1];
 
			if(set.contains(str))
			{
				System.out.println("POSSIBLE");
 
				return;
			}
		}
 
	for(int i=0;i<=2;i++)
		{
 
			String str=""+arr3[i]+arr3[i+1]+arr4[i]+arr4[i+1];
 
			if(set.contains(str))
			{
				System.out.println("POSSIBLE");
 
				return;
			}
		}

		System.out.println("NOT POSSIBLE");
             //    long endTime = System.currentTimeMillis();
            //    System.out.println(endTime-startTime);
	}
         static class InputReader4 {
		 
		BufferedReader in;
		StringTokenizer tokenizer = null;
	 
		public InputReader4(InputStream inputStream) {
	 
			in = new BufferedReader(new InputStreamReader(inputStream));
		}
	 
		public String next() {
			try {
				while (tokenizer == null || !tokenizer.hasMoreTokens()) {
					tokenizer = new StringTokenizer(in.readLine());
				}
				return tokenizer.nextToken();
			} catch (IOException e) {
				return null;
			}
		}
	 
		public int nextInt() {
			return Integer.parseInt(next());
		}
		
		public long nextLong() {
			return Long.parseLong(next());
		}
	}
}
