//BSUMAN
//template
/********************************************/
#include<iostream>
#include<vector>
#include<list>
#include<stack>
#include<queue>
#include<deque>
#include<set>
#include<algorithm>
#include<map>
#include<iomanip>
#include<sstream>
#include<utility> // for pair
#include<string>
// C lib
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<cstring>
#include<climits>
//macro
#define pb push_back
#define mp make_pair
#define sz size()
#define loop(i,a,b) for(ll i=a;i<=b;i++)  // for loop incr
#define rloop(i,b,a) for(ll i=b;i>=a;i--) //   ...    decr
#define out printf  // print base
#define in scanf    // scan base
#define in1(n) in("%lld",&n)
#define out1(n) out("%lld",n)   
#define ps out(" ")
#define pn out("\n")
#define gt getchar
#define instr(s) in("%[^\n]",&s)
#define outstr(s) out("%s",s)
//symb
#define inf LLONG_MAX
#define pi acos(-1.0)
#define mod 1000000007  // mod value (changeable)
using namespace std;
typedef long long ll;
typedef vector<ll> vi;
typedef vector<ll> vll;
typedef pair<ll,ll> pii;
typedef vector<pii> vpii;
typedef set<ll> si;
typedef map<string,ll> msi;
typedef map<char,ll> mci;
//common functions
/************************
/***************** 1. pow ****************/
/* Function to calculate x raised to the power y in O(logn)*/
ll powr(ll x, ll y)
{
    ll temp;
    if( y == 0)
        return 1;
    temp = powr(x, y/2);
    if (y%2 == 0)
        return temp*temp;
    else
        return x*temp*temp;
}
/* Function to calculate x raised to the power y mod M */

ll powr_mod(ll x , ll y , ll M=inf) // inf if M not provided
{
    ll a=1 ;
    while(y){
	if(y&1) a=(a*x)%M;
	x=(x*x)%M;
	y>>=1;
    }
    return a%M;
}
/***************** 2.gcd & lcm ******************/
// binary gcd
ll gcd(ll a, ll b)
{
    while(b) b ^= a ^= b ^= a %= b;
    return a;
}
// return LCM of two numbers
ll lcm(ll a, ll b)
{
    return (a*b)/gcd(a, b);
}
/**********************************************************************/

ll Count_Set_Bit(ll n){
    ll cnt=0;
    while(n){
       n&=(n-1);
       cnt++;
    }  
    return cnt;
}
int main(){
    ll num,t,n,i;
    in1(t);
    while(t--){
       in1(n);
       num=0;
       loop(i,1,n)
          num+=Count_Set_Bit(i);
       out1(num);
       pn;
    }
    return 0;
}        
