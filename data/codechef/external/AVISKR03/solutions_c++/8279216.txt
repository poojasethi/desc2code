#include<bits/stdc++.h>
using namespace std;

const int N = 100010;
const int mod = 1000000007;

int dp[N], mn, mx,exactdp[N];
int n,l[30],r[30],y,ways =0, tot;

void f(int id)
{
    int L = mn, R = mx;

    for(int i=max(L,l[id]);i<=R;++i){
        exactdp[i] = dp[i-l[id]] ;
        if( i > r[id]) exactdp[i] -= dp[i-r[id]-1];
    }
    tot = 0;
    memset( dp+0, 0, max(L,l[id]) * sizeof(int));
    for(int i=max(L,l[id]);i<=R;++i){
        tot += exactdp[i];
        if( tot > mod) tot -= mod;
        else if(tot<0) tot += mod;
        dp[i] = tot;
    }
    if(y>=R) fill( dp+R+1, dp+y+1, tot);
}

void end()
{
    ways = dp[y];
    if( y>0) ways -= dp[y-1];
    ways = (ways%mod + mod) % mod;
}

int main()
{
    int T;
    scanf("%d",&T);
    while(T--){
        ways = 0;
        int cd = 0;
        memset(dp, 0, sizeof(dp));
        mn = mx = 0;
        scanf("%d%d",&n,&y);
        for(int i=0;i<y;++i)
            dp[i] = 1;

        for(int i=0;i<n;++i){
            scanf("%d%d",&l[i],&r[i]);
        }

        for(int i=0;i<n;++i){
            mn += l[i];
            mx += r[i];
            if( mn > y){
                cd = 1;
                ways = 0;
                break;
            }
            mx = min( mx , y);
            f(i);
        }
        if(!cd){
            end();
        }
        printf("%d\n",ways);
    }
    return 0;
}

