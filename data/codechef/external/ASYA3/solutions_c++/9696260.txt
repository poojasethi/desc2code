#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(1e5+4)
vector<int> G[N];
vector<int> A,B;
int subn[N],ctr[N],tot,subm[N];
void dfs(int x,int p){
    subn[x]=1;
    subm[x]=ctr[x];
    for(int i=0;i<G[x].size();i++){
        int to=G[x][i];
        if(to!=p){
            dfs(to,x);
            subn[x]+=subn[to];
            subm[x]+=subm[to];
        }
    }
}
void allc(){
    for(int i=1;i<N;i++)
        G[i].clear();
    mem(subn,0);
    mem(subm,0);
    A.clear();
    B.clear();
    tot=0;
}
void solve(){
    allc();
    int n;
    cin>>n;
    for(int i=1;i<n;i++){
        int x,y;
        cin>>x>>y;
        x++;
        y++;
        G[x].pb(y);
        G[y].pb(x);
        A.pb(x);
        B.pb(y);
    }
    for(int i=1;i<=n;i++){
        cin>>ctr[i];
        tot+=ctr[i];
    }
    dfs(1,0);
    double ans=0.0;
    for(int i=0;i<n-1;i++){
        int x=A[i],y=B[i];
        int options=n-1;
        double ans1=1.0,ans2=1.0;
        if(subn[x]>subn[y]){
           int ma=tot-subm[y];
           int mb=subm[y];
           int na=n-subn[y];
           int nb=subn[y];
           for(int j=0;j<ma;j++){
               ans1*=(double)(nb/(options*1.0));
           }
           for(int j=0;j<mb;j++){
               ans2*=(double)(na/(options*1.0));
           }
           ans+=ans1*ans2;
        }
        else{
           int ma=tot-subm[x];
           int mb=subm[x];
           int na=n-subn[x];
           int nb=subn[x];
           for(int j=0;j<ma;j++){
               ans1*=(double)(nb/(options*1.0));
           }
           for(int j=0;j<mb;j++){
               ans2*=(double)(na/(options*1.0));
           }
           ans+=ans1*ans2;
        }
    }
    cout<<fixed<<setprecision(12)<<ans<<endl;
}
int main(){
   //ios_base::sync_with_stdio(false);
   int t=1;
   cin>>t;
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
