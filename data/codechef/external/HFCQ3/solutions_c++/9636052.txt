#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb push_back
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

const int maxn = 1e5;
const int md = 1e9 + 7;

ll dp[210][103][4][105];

int main() {

    repe(n,0,103) {
        repe(b,0,210) {
		    repe(left,0,105) {
                repe(s,0,4) {
					ll cur = 0;
					if (b == 0 && left > 0) { cur = 0; }
					else if (b == 0 && left == 0) { cur = 1; }
					else {
						// use regular
						cur = (cur + ((s < 2) ? dp[b-1][n][s+1][left] : 0) + \
										((left > 1) ? dp[b-1][n][0][left - 1] : 1) + \
										((left > 2) ? dp[b-1][n][0][left - 2] : 1) + \
										((left > 4) ? dp[b-1][n][0][left - 4] : 1) + \
										((left > 6) ? dp[b-1][n][0][left - 6] : 1))%md;
						// use free hit
						if (n > 0) {
							cur = (cur +  dp[b][n-1][s][left] + \
											((left > 1) ? dp[b][n-1][s][left - 1] : 1) + \
											((left > 2) ? dp[b][n-1][s][left - 2] : 1) + \
											((left > 4) ? dp[b][n-1][s][left - 4] : 1) + \
											((left > 6) ? dp[b][n-1][s][left - 6] : 1))%md;
						}
					}
					dp[b][n][s][left] = cur;
				}
			}
		}
	}


	int T; s(T); rep(i,1,T) { int B,N; s(B); s(N); prl(dp[B][N][0][100]); endc; }
}
