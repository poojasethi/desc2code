#include<bits/stdc++.h>
using namespace std;
long long dp[205][105][108][3];

long long arr[]={0,1,2,4,6};
#define mod 1000000007
long long solve(long long reg,long long free,long long sum,long long co)
{
    if(sum>=100)
        return 1;
    if(reg<0 || free<0 || co==3)
        return 0;
    if(reg<=0)
    {
        if(reg==0)
        {
        if(sum>=100)
            return 1;
        else
            return 0;
        }
        else
            return 0;
    }
    if(dp[reg][free][sum][co]!=-1)
        return dp[reg][free][sum][co];
        long long ans=0;
    if(reg>0)
    {
    for(long long j=0;j<5;j++)
    {
        if(co<3)
        {
            if(j==0)
                ans=(ans+solve(reg-1,free,sum+arr[j],co+1));
            else
                ans=(ans+solve(reg-1,free,sum+arr[j],0));

        }
        else
        {
            if(j==0)
                continue;
            else
                ans=(ans+solve(reg-1,free,sum+arr[j],0));
        }
    }
    }
    if(free>0)
    {
        for(long long j=0;j<5;j++)
        {
            ans=(ans+solve(reg,free-1,sum+arr[j],co));
        }
    }
    return dp[reg][free][sum][co]=ans%mod;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(false);
    long long t;
    cin>>t;
     memset(dp,-1,sizeof(dp));
    while(t--)
    {
long long b,n;
        cin>>b>>n;
        long long r=solve(b,n,0,0)%mod;
        cout<<r<<"\n";
    }
}
