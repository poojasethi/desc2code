    #include<bits/stdc++.h>
    #define mod 1000000007
    long long int dp[105][202][102][4];
    long long int ways(int n,int b,int dots,int runs)
    {
    	if(dots>=3)
    		return 0;
    	if(runs<=0)
    		return 1;
    	if(b==0)
    		return 0;
    	if(dp[n][b][runs][dots]!=-1)
    		return dp[n][b][runs][dots];
    	long long int reg=0,freehit=0;
    		reg+=ways(n,b-1,0,runs-1)+ways(n,b-1,0,runs-2)+ways(n,b-1,0,runs-4)+ways(n,b-1,0,runs-6);
    		if(dots<2)
    			reg+=ways(n,b-1,dots+1,runs);
    	if(n>0)
    		freehit+=ways(n-1,b,dots,runs)+ways(n-1,b,dots,runs-1)+ways(n-1,b,dots,runs-2)+ways(n-1,b,dots,runs-4)+ways(n-1,b,dots,runs-6);
    	return dp[n][b][runs][dots]=(reg+freehit)%mod;
     
    }
    int main()
    {
    	int t;
    	scanf("%d",&t);
    	memset(dp,-1,sizeof(dp));
    	//printf("hial\n");
    	while(t--)
    	{
    		int n,b;
    		scanf("%d%d",&b,&n);
    		printf("%lld\n",ways(n,b,0,100) );
    	}
    	return 0;
    } 