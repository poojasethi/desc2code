#include<iostream>
#include<algorithm>
#include<utility>
#include<cstring>
#include<string.h>
#include<set>
#include<map>
#include<math.h>
#include<stdio.h>
#include<vector>
#include<functional>
#include<bitset>
#include<iomanip>
#define ll long long
#define gr greater<ll>()
#define pi acos(-1.0)
#define pb push_back
#define MS0(ar) memset(ar,0,sizeof ar)
#define f first
#define s second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ind(a) scanf("%d",&a)
#define inf(a) scanf("%lf",&a)
#define inl(a) scanf("%lld",&a)
#define ins(a) scanf("%s",a)
#define pd(a) printf("%d\n",a)
#define pl(a) printf("%lld\n",a);
#define bitcnt(x) __builtin_popcountll(x)
#define mod 1000000007
using namespace std;
ll dp[205][105][110][10];
ll solve(int b, int n, int run, int dot)
{
	if (b < 0 || n < 0 || dot == 3)
		return 0;
	if (b == 0)
	{
		if (run >= 100)
			return 1;
		return 0;
	}
	if (run >= 100)
		return 1;
	if (dp[b][n][run][dot] != -1)
		return dp[b][n][run][dot];
	ll ans = 0;
	ans += solve(b - 1, n, run, dot + 1);
	ans += solve(b - 1, n, run + 1, 0);
	ans += solve(b - 1, n, run + 2, 0);
	ans += solve(b - 1, n, run + 4, 0);
	ans += solve(b - 1, n, run + 6, 0);
	ans %= mod;
	ans += solve(b, n - 1, run, dot);
	ans += solve(b, n - 1, run + 1, dot);
	ans += solve(b, n - 1, run + 2, dot);
	ans += solve(b, n - 1, run + 4, dot);
	ans += solve(b, n - 1, run + 6, dot);
	ans %= mod;
	dp[b][n][run][dot] = ans;
	return ans;
}
int main()
{
	ios_base::sync_with_stdio(0);
	cin.tie(0);
#ifndef ONLINE_JUDGE
	freopen("input.txt", "r", stdin);
#endif
	ll t, b, n;
	memset(dp, -1, sizeof(dp));
	cin >> t;
	while (t--)
	{
		cin >> b >> n;
		cout << solve(b, n, 0, 0) << endl;
	}

	return 0;
}