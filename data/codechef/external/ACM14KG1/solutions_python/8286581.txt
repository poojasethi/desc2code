#include<cstdio>
#include<algorithm>
#include<set>
#include<vector>
using namespace std;
struct node
{
	int i,j;
};
bool operator < (node n1,node n2)
{
	if(n1.j-n1.i != n2.j-n2.i)return n1.j-n1.i < n2.j-n2.i;
	return n1.i<n2.i;
}
void doit()
{
	int n,m;
	scanf("%d%d",&n,&m);
	vector<vector<int> > market(n);
	vector<int> done(m);
	int nz=m;
	for(int i=0;i<n;++i)
	{
		int x;
		scanf("%d",&x);
		for(int j=0;j<x;++j)
		{
			int z;
			scanf("%d",&z);
			market[i].push_back(z-1);
		}
	}
	vector<int> end(n);
	for(int i=0;i<n;++i)end[i]=-1;
	int last=0;
	for(int i=0;i<(int)market[0].size();++i)
	{
		nz--;
		done[market[0][i]]++;
	}
	for(int i=0;i<n;++i)
	{
		while(nz!=0)
		{
			if(last==n-1)break;
			last++;
			for(int j=0;j<(int)market[last].size();++j)
			{
				int td=market[last][j];
				if(done[td]==0)nz--;
				done[td]++;
			}
		}
		if(nz!=0)break;
		end[i]=last;
		for(int j=0;j<(int)market[i].size();++j)
		{
			int td=market[i][j];
			if(done[td]==1)nz++;
			done[td]--;
		}
	}
	vector<vector<node> > todel(n+1);
	int maxdel=-1;
	vector<node> ans(n);
	for(int i=0;i<n;++i){ans[i].i=0;ans[i].j=n-1;}
	set<node> curr;
	for(int i=0;i<n;++i)
	{
		node st={i,end[i]};
		if(end[i]!=-1){
			curr.insert(st);
			todel[end[i]+1].push_back(st);
		}
		for(int j=0;j<(int)todel[i].size();++j)
		{
			node td=todel[i][j];
			maxdel=max(maxdel,td.i);
			curr.erase(curr.find(td));
		}
		if(curr.size()>0)
		{
			node pos=*(curr.begin());
			ans[i]=min(ans[i],pos);
		}
		if(maxdel!=-1)
		{	
			node el={maxdel,i};
			ans[i]=min(ans[i],el);
		}
	}
	for(int i=0;i<n;++i)printf("%d %d\n",ans[i].i+1,ans[i].j+1);
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)doit();
	return 0;
}
