typedef long long ll;
#include <iostream>
#include <stdio.h>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <string.h>
#include <map>
#include <queue>
#include <stack>
#include <sstream>
#include <fstream>
#include <stdlib.h>
#include <utility>

using namespace std;
ll sum[1024],card[1024];
ll to_bit_equi(ll x)
{
    string s="0000000000";
	ll r,i,res;
	while(x!=0)
	{
		r=x%10;
		s[r]='1';
		x/=10;
	}
	res=0;
	for(i=0;i<=9;i++)
	{
		if(s[i]=='1')
		res+=pow(2,i);
	}
	return res;
}
int main()
{
	ll i,n,j,c,max_card,max_sum;
	ll a[107];
	while(scanf("%lld",&n)!=EOF)
	{
		
		for(i=0;i<n;i++)
		scanf("%lld",&a[i]);
		memset(sum,0,sizeof(sum));
		memset(card,0,sizeof(card));
		for(i=0;i<n;i++)
		{
			c=to_bit_equi(a[i]);
			if(a[i]>sum[c])
			{
				sum[c]=a[i];
				card[c]=1;
			}
			for(j=1;j<1024;j++)
			{
				if((c&j)==0)
				{
					if(sum[c+j]<sum[c]+sum[j])
					{
						sum[c+j]=sum[c]+sum[j];
						card[c+j]=card[c]+card[j];
					}
					else if(sum[c+j]==sum[c]+sum[j])
					{
						card[c+j]=max(card[c+j],card[c]+card[j]);
					}
				}
			}
		}
		max_card=0;
		max_sum=0;
		for(i=1;i<1024;i++)
		{
			if(max_sum<sum[i])
			{
				max_sum=sum[i];
				max_card=card[i];
			}
			else if(max_sum==sum[i])
			max_card=max(max_card,card[i]);
		}
		printf("%lld\n",max_card);
	}
	return 0;
}