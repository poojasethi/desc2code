#include<stdio.h>
#include<algorithm>
#include<bits/stdc++.h>

using namespace std;

#define mod 10000007

long long dp[101][1024];
int a[101];

int main() {
    int n;
    while(scanf("%d",&n)!=EOF)
    {
        for(int i=1;i<=n;i++)
            scanf("%d",&a[i]);

        memset(dp,0,sizeof dp);

        for(int i=1;i<=n;i++)
        {
            int digs=0;
            int x=a[i];
            while(x)
            {
                digs|=1<<(x%10);
                x/=10;
            }
            for(int num=i-1;num>=0;num--)
            {
                for(int mask=digs;mask<=1023;mask=(mask+1)|digs)
                {
                    int rmask=~mask;
                    rmask&=0x000003ff;
                    if(num==0 || dp[num][rmask])
                    dp[num+1][rmask|digs]=max(dp[num+1][rmask|digs],dp[num][rmask]+a[i]);
                }
            }
        }
        long long maxsum=0;
        int ans=0;
        for(int i=1;i<=n;i++)
        {
            for(int j=0;j<=1023;j++)
            {
                if(dp[i][j]>maxsum)
                {
                    //printf("found i %d j %d\n%lld..\n",i,j,dp[i][j]);
                    maxsum=dp[i][j];
                    ans=i;
                }
                else if(dp[i][j]==maxsum)
                {
                    //printf("found i %d j %d\n%lld..\n",i,j,dp[i][j]);
                    ans=i;
                }
            }
        }
        printf("%d\n",ans);
    }
}
