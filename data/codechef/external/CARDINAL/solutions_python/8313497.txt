#include <bits/stdc++.h>
using namespace std;

const long long INF=1e11;

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vector<int> > vvi;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;
typedef vector<vector<pair<int,int> > > vvii;

#define all(x) x.begin(), x.end()
#define tr(x,it) for(auto it = x.begin();it!=x.end();++it)
#define ntr(x,it) for(auto it = x.rbegin();it!=x.rend();++it)
#define sz(a) int((a).size()) 
#define pb push_back 
#define PB pop_back
#define pf push_front
#define PF pop_front
#define MP make_pair
#define clr clear
#define rz resize
#define C(a,b) memset(a,b,sizeof(a))
#define ia(a,n) FOR(i,0,n-1)cin>>a[i]
#define fpresent(c,x) ((c).find(x) != (c).end())  // set,map
#define present(c,x) (find(all(c),x) != (c).end())  //vector
#define F first
#define S second
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define NFOR(i,a,b) for(int i=a;i>=b;--i)
#define rep(i,n) FOR(i,0,n-1)
#define TCASE int __T;cin>>__T;FOR(Tc,1,__T)



vector<vi> s;
vii arr;
ll dp[101][11][1024];
ll dp2[11];
int main()
{
    ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0);
    
    int n;
    while((cin>>n))
    {
    	s.clear();
    	s.resize(1024);
    	arr.clear();
    	vi a(n);
    	ia(a,n);
    	
    	FOR(i,0,n-1)
    	{
    		int mask=0;
    		int x=a[i];
    		while(x)
    		{
    			int y=x%10;
    			mask|=(1<<y);
    			x/=10;
    		}
    		s[mask].pb(a[i]);
    	}
    	FOR(i,0,1023)sort(all(s[i]));
    	FOR(i,0,1023)
    	{
    		if(s[i].empty())continue;
    		arr.pb({s[i][s[i].size()-1],i});
    	}
    	int no=arr.size();
    	
    	
    	
    	FOR(i,0,no)FOR(j,0,10)FOR(mask,0,1023)dp[i][j][mask]=-INF;
    	
    	FOR(i,0,no)
    	
    		dp[i][0][0]=0;
    	
    	
    	
    	FOR(i,1,no)
    	{
    		FOR(j,1,10)
    		{
    			if(j>i) continue;
    			FOR(mask,0,1023)
    			{
    				dp[i][j][mask]=dp[i-1][j][mask];
    				
    				if(arr[i-1].S&(mask^arr[i-1].S))continue;
    				
    				dp[i][j][mask]=max(dp[i-1][j][mask],dp[i-1][j-1][mask^arr[i-1].S]+arr[i-1].F);
    			}
    		}
    	}
    	memset(dp2,0,sizeof(dp2));
    	
    	
    		FOR(j,1,10)
    		{
    			FOR(mask,0,1023)
    			dp2[j]=max(dp2[j],dp[no][j][mask]);
    		}
    	
    	int ans=0;
    	ll cur=0;
    	FOR(i,1,10)
    	{
    		if(cur<=dp2[i])
    		cur=dp2[i],ans=i;
    	//	cout<<dp2[i]<<" ";
    		
    	}
    	
    	cout<<ans<<"\n";
    	
    	
    }
    
	return 0;
}
