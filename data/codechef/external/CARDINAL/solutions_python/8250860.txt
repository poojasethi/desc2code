#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
int n;
int A[101];
struct node
{
	ll sum;int c;
};
node dp[101][1026];
node doit(int ind,unsigned a)
{
	if (ind>=n)
	{
		return (node){0,0};
	}
	//printf("Bro at ind :%d and a :%u\n",ind,a);
	if (dp[ind][a].c!=-1)
		return dp[ind][a];
	int i;
	int tem=A[ind];
	unsigned b=0;
	while (tem)
	{
		b=(b|(1<<(tem%10)));
		tem/=10;
	}

	node alpha=doit(ind+1,a); // ind not taken 
	//printf("for ind :%d and a :%u and b : %u\n",ind,a,b);
	if ((a&b)==0)
	{	
			
		node beta=doit(ind+1,a|b);
		beta.sum+=A[ind];
		beta.c++;
		//printf("for ind :%d and a :%u alpha :%lld %d beta: %lld %d \n",ind,a,alpha.sum,alpha.c,beta.sum,beta.c);
		if (alpha.sum>beta.sum)
			return dp[ind][a]=alpha;
		else if (alpha.sum<beta.sum)
			return dp[ind][a]=beta;
		else if (alpha.c>=beta.c)
			return dp[ind][a]=alpha;
		else 
			return dp[ind][a]=beta;
	}
	
	return dp[ind][a]=alpha;
			
}
int main()
{

	while(scanf("%d",&n)==1)
	{
		int i,j;
		for (i=0;i<n;i++)
		{
			scanf("%d",A+i);
			for (j=0;j<=1025;j++)
				dp[i][j].c=-1;
		}
		
		node ans=doit(0,0);
		printf("%d\n",ans.c);

	}
	return 0;
}