#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define ALL(x) x.begin(),x.end()
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define SZ(x) (int)x.size()
#define print(x) printf("%d",x);
#define nl printf("\n")
#define fr first
#define se second
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long

const int N = 1e5+5;
pll dp[105][1200];
int a[105];
int n;
int func(int num,int mask) {
  int ret = 0;
  while(num){
    int temp = num%10;
    num = num/10;
    ret = ret|(1<<temp);
  }
  if(mask&ret) return -1;
  return ret;
}
pll operator+ ( pll a, pll b) {
  pll temp;
  temp.fr = a.fr + b.fr;
  temp.se = a.se + b.se;
  return temp;
}
pll rec(int pos,int mask) {
  if( pos == n ) {
    return mp(0,0);
  }
  if(dp[pos][mask].fr!=-1)
    return dp[pos][mask];
  pll ans = mp(0,0);
  ans = max(ans, rec(pos+1,mask));
  int temp = func(a[pos],mask);
  if(temp!=-1) {
    ans = max(ans, mp(a[pos],1) + rec(pos+1,mask|temp));
  }
  return dp[pos][mask] = ans;
}
int main() {
//  freopen("inp","r",stdin);
  while(scanf("%d",&n)!=EOF) {
    F(i,0,102) {
      F(j,0,1028) {
        dp[i][j].fr = -1;
        dp[i][j].se = -1;
      }
    }
    F(i,0,n) {
      sci(a[i]);
    }
    cout<<rec(0,0).se<<endl;
  }
}
