#include<cstdio>
#include<algorithm>
using namespace std;
int n,cnt;
long long ar[105];
long long ans;
int dp[1025][105],hash[105];
int bitmask(int x)
{
	int y=0,z;
	while(x>0)
	{
		z=x%10;
		y|=(1<<z);
		x/=10;
	}
	return y;
}
void fun(int mask,int idx,long long sum,int car)
{
	//printf("idx= %d mask=%d sum=%d car=%d\n",idx,mask,sum,car);
	int y;
	if(idx==n)
	{
		if(sum>ans)
		{
			ans=sum;
			cnt=car;
		}
		else if(sum==ans)
			cnt=max(car,cnt);
		return;
	}
	fun(mask,idx+1,sum,car);
	y=hash[idx];
	if(!(mask&y))
		fun(mask|y,idx+1,sum+ar[idx],car+1);
}
int main()
{
	while(1)
	{
		if(scanf("%d",&n)==EOF)
			break;
		//printf("n=%d\n",n);
		for(int i=0;i<n;i++)
		{
			scanf("%lld",ar+i);
			hash[i]=bitmask(ar[i]);
		}
		ans=0;
		cnt=0;
		/*for(int i=1<<10;i>=0;i--)
			for(int j=0;j<n;j++)
				dp[i][j]=0;
		*/
		fun(0,0,0,0);
		printf("%d\n",cnt);
	}
	return 0;
}