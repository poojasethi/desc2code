/*
    xxx_joker/codersumit
*/
#include <bits/stdc++.h>
#define bitcnt(x) __builtin_popcountll(x)
#define sd(a) scanf("%d",&a)
#define sld(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define sc(a) scanf("%c",&a)
#define pd(a) printf("%d",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define space printf(" ");
#define nw printf("\n")
#define pb push_back
#define FOR(i,a,b) for(i=a;i<b;i++)
#define FORR(i,a,b) for(i=a;i>=b;i--)
#define all(v) v.begin(),v.end()
#define MAX 105
#define MAXX 1100
#define mod 1000000007

typedef long long ll;
typedef unsigned long long ull;
using namespace std;
int total;
struct node{
    ll sum;
    int cnt;
};
ll arr[MAX];
node dp[MAX][MAXX];
int cal_mask(ll a){
    int ans=0,digit;
    while(a>0){
        digit=a%10;
        a/=10;
        ans=ans|(1<<digit);
    }
    return ans;
}
node f(int index,int mask){
    if(index>=total){
        node t;
        t.sum=0;t.cnt=0;
        return t;
    }
    else if(dp[index][mask].sum!=-1)
        return dp[index][mask];
    int tmask;
    node ans,temp,temp1;
    temp.sum=temp1.sum=0;
    temp1.cnt=temp.cnt=0;

    tmask=cal_mask(arr[index]);
    if((tmask&mask)==0){
        temp=f(index+1,(tmask|mask));
        temp.cnt+=1;//temp1.cnt;
        temp.sum+=arr[index];//temp1.sum;
    }

    temp1=f(index+1,mask);
    //cout<<"index= "<<index<<" maks= "<<mask<<" temp= "<<temp.sum<<" temp1 = "<<temp1.sum<<endl;
    if(temp1.sum<temp.sum)
        ans=temp;
    else if(temp1.sum>temp.sum)
        ans=temp1;
    else if(temp1.sum==temp.sum){
        if(temp.cnt<temp1.cnt)
            ans=temp1;
        else
            ans=temp;
    }
    dp[index][mask]=ans;
    return ans;
}
int main(){
    int i,j;
    while(sd(total)!=EOF){
        node ans;
        FOR(i,0,total)
            sld(arr[i]);
        memset(dp,-1,sizeof(dp));
        ans=f(0,0);
        printf("%lld\n",ans.cnt);
    }
    return 0;
}
