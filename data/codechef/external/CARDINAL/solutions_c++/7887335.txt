/*_______SHREY MANIK______*/
#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include<list>
#define ff first
#define ss second
#define MOD 1000000007
#define LL long long
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}
int n,b,a[105],k,c,car[1<<11];
LL dp[1<<11],ans;
int bits(int a)
{
	int ans=0,k;
	while(a>0)
	{
		k=a%10;
		ans=ans|(1<<k);
		a/=10;
	}
	return ans;
}
int main()
{
  
  while(scanf("%d",&n)!=EOF)
  {
  for(int i=0;i<n;i++)
  cin>>a[i];
  CLEAR(dp);
  CLEAR(car);
  for(int i=0;i<n;i++)
  {
  	b=bits(a[i]);
  	for(int mask=0;mask<(1<<10);mask++)
  	{
  	   if(!(mask&b))
  	   {
  	   	k=mask|b;
  	   	if(dp[k]<dp[mask]+a[i])
  	   	{
		  dp[k]=dp[mask]+a[i];
		  car[k]=car[mask]+1;
		 }
		else if(dp[k]==dp[mask]+a[i]&&car[k]<car[mask]+1)
		car[k]=car[mask]+1;
		}
  }
 }
 c=0;
 ans=-1;
 for(int i=0;i<(1<<10);i++)
 {
 	if(ans<dp[i])
 	{
 		ans=dp[i];
 		c=car[i];
	 }
	if(ans==dp[i])
	c=max(c,car[i]);
 }
 cout<<c<<"\n";
}
  return 0;
}
