#include <cstdio>
using namespace std;

struct Cel
{
	long long mxval;
	int cr;
	Cel(){mxval = 0; cr = 0;}
	Cel(long long mxv, int crr)
	{
		mxval = mxv;
		cr = crr;
	
	}
	
};

long long arr[108];
int num;

Cel mt[1<<11][108];

Cel get(int curPl, int mk)
{
	if(curPl >= num)
	{
		Cel tm;
		tm.mxval = 0;
		tm.cr = 0;
		return tm;
	}
	
	if(mt[mk][curPl].mxval != -1 && mt[mk][curPl].cr != -1)
		return mt[mk][curPl];
	
	Cel ret = get(curPl+1, mk);
	bool ft = true;
	long long val = arr[curPl];
	int nxtMk = mk;
	while(val)
	{
		int cv = val % 10;
		if( (mk & (1<<cv) ) != 0)
		{
			ft = false;
			break;
		}
		nxtMk = nxtMk | (1 << cv);
		val /= 10;
	}
	if(ft)
	{
		Cel tmp = get(curPl+1, nxtMk);
		tmp.mxval += arr[curPl];
		tmp.cr++;
		if(tmp.mxval > ret.mxval)
		{
			ret = tmp;
		}
		else if(tmp.mxval == ret.mxval)
		{
			if(tmp.cr > ret.cr)
			ret = tmp;
		}
	}
	mt[mk][curPl] = ret;
	return ret;
}

int main() {
	// your code goes here

	while(scanf("%d" , &num) != EOF)
	{
		for(int cnt = 0; cnt < num; cnt++)
		{
			scanf("%lld", &arr[cnt]);
		}
		
		for(int cnt = 0; cnt < (1<<10) ; cnt++)
			for(int ct = 0; ct < num; ct++)
				mt[cnt][ct] = Cel(-1,-1);
		
	printf("%d\n" , get(0, 0).cr);
	}
	return 0;
}