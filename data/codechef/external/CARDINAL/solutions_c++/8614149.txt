/*
   learnt:
 */
#include <bits/stdc++.h>
#define ll long long int
#define MP(x,y) make_pair(x,y)
#define F first
#define S second
#define PB(x) push_back(x)
#define rep(x,a,b) for(int x=a;x<=b;x++)
#define repd(x,a,b) for(x=a;x>=b;x--)
#define output1(x) cout << #x << " " << x << endl;
#define output2(x,y) cout <<x<<" "<<y <<endl;
#define inp1(x) cin >> x;
#define inp2(x,y) cin >> x >> y;
#define MOD 1000000007
#define ARRSZ 10009
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b
#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

using namespace std;
	
int cnt[10];

ll cmp(int a){
	
	while(a){
		int dig=a%10;
		a/=10;
		cnt[dig]=1;
	}
	
	ll sum=0;
	rep(i,0,9){
		sum+=(cnt[i]<<(9-i));
		cnt[i]=0;
	}
	return sum;
}
int main()
{
	ll n;
	ll a[ARRSZ],hash[ARRSZ],sub[ARRSZ],card[ARRSZ],crd,ans;
	while(scanf("%lld",&n)!=EOF){
		rep(i,0,1<<10){
			card[i]=sub[i]=0;
		}
		
		ans=0;crd=0;
		rep(i,0,n-1)cin >> a[i];
		rep(i,0,n-1)
		{
			hash[i]=cmp(a[i]);
		}
		rep(i,0,n-1){

			if(sub[hash[i]]<a[i]){
			sub[hash[i]]=a[i];
			card[hash[i]]=1;
			}
			rep(j,0,1<<10){
				//if(j==769)
				//		trace2(sub[j],j);
				if((hash[i]&j)==0){
					if(sub[j+hash[i]]<sub[hash[i]]+sub[j]){
					    card[j+hash[i]]=card[j]+card[hash[i]];
					    sub[j+hash[i]]=sub[hash[i]]+sub[j];

					}
					else if(sub[j+hash[i]]==sub[hash[i]]+sub[j]){
						card[j+hash[i]]=MAX(card[j+hash[i]],card[j]+card[hash[i]]);
					}
				}
			}
		}
		rep(i,0,1<<10){
			
			if(sub[i]>ans){
				ans=sub[i];
				crd=card[i];
			}
			else if(sub[i]==ans){
				crd=MAX(card[i],crd);
			}
		}
	cout << crd << endl;
	}
	return 0;
}
