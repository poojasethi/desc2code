#include <stdio.h>
#include <stdlib.h>
#define LL long long int
 
LL max(LL a,LL b)
{
    if(a>b) return a;
    return b;
}
 
int p[10]={1,2,4,8,16,32,64,128,256,512};
int convert(LL x)
{
    int ret=0,i;
    char a[10];
    for(i=0;i<=9;i++) a[i]='0';
    while(x!=0)
    {
        a[x%10]='1';
        x=x/10;
    }
    for(i=0;i<=9;i++)
    {
        if(a[i]=='1') ret=ret + p[i];
    }
    return ret;
}
 
int cardinality(LL *a,int n)
{
    LL sum[1024];
    int i,C,j,card[1024];
    for(i=0;i<=1023;i++) sum[i]=card[i]=0;
 
    for(i=1;i<=n;i++)
    {
        C=convert(a[i]);
        if(a[i]>sum[C]) {sum[C]=a[i];card[C]=1;}
 
        for(j=1;j<=1023;j++)
        {
            if( (C&j) == 0 )
            {
                if(sum[C+j]<(sum[C]+sum[j]))
                {
                    sum[C+j]= sum[C]+sum[j];
                    card[C+j]=card[C]+card[j];
                }
                else if(sum[C+j]==(sum[C]+sum[j]))
                {
                    if(card[C+j]<(card[C]+card[j]) ) card[C+j]=card[C]+card[j];
                }
            }
        }
    }
 
    LL max_sum=sum[1];int max_card=card[1];
 
    for(i=2;i<=1023;i++)
    {
        if(sum[i]>max_sum)
        {
            max_sum=sum[i];
            max_card=card[i];
        }
        else if(sum[i]==max_sum)
        {
            if(card[i]>max_card) max_card=card[i];
        }
    }
    return max_card;
}
int main()
{
    int n,i;
    LL A[101];
    while( scanf("%d",&n)!=EOF)
    {
        for(i=1;i<=n;i++) scanf("%lld",&A[i]);
        printf("%d\n",cardinality(A,n));
    }
    return 0;
}