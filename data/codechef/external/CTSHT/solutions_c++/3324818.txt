#include<cstring>
#include<cstdio>
#include<vector>
#include<algorithm>     //sort
using namespace std;
int scan()
{
    int n=0;
    char ch=getchar_unlocked();
    while(ch<'0'||ch>'9')
        ch=getchar_unlocked();
    while(ch>='0'&&ch<='9')
    {
        n=(n<<3)+(n<<1)+ch-'0';
        ch=getchar_unlocked();
    }
    return n;
}
int main()
{
    int t;
    t=scan();
    while(t--)
    {
        int n,i,j,x,y;
        char input[202];
        vector<int>grid[201];
        int paths[201][201]={{0}};
        n=scan();
        for(i=0;i<n;i++)
        {
            //gets(input);
            scanf("%s",input);
            //printf("input:%s",input);
            for(j=0;j<n;j++)
            {
                if(input[j]=='Y')
                {
                    grid[i].push_back(j);
                    //grid[j].push_back(i);
                }
            }
        }
        /*for(i=0;i<n;i++)
        {
            printf("%d:",i);
            for(j=0;j<grid[i].size();j++)
                printf("%d ",grid[i][j]);
            printf("\n");
        }*/
        for(i=0;i<n;i++)
        {
            int visited[201]={0};
            int queue[201]={0};
            int total=1;
            int front,rear;
            front=rear=-1;
            visited[i]=1;
            paths[i][i]=0;
            for(j=0;j<grid[i].size();j++)
            {
                visited[grid[i][j]]=1;
                queue[++rear]=grid[i][j];
                paths[i][grid[i][j]]=1;
                total++;
            }
            while(total<n)
            {
                x=queue[++front];
                int sum=paths[i][x];
                for(j=0;total<n&&j<grid[x].size();j++)
                {
                    if(!visited[grid[x][j]])
                    {
                        queue[++rear]=grid[x][j];
                        paths[i][grid[x][j]]=sum+1;
                        visited[grid[x][j]]=1;
                        total++;
                    }
                }
            }
        }
        int q;
        q=scan();
        for(i=1;i<=q;i++)
        {
            x=scan();
            y=scan();
            printf("%d\n",paths[x][y]);
        }
    }
    return 0;
}