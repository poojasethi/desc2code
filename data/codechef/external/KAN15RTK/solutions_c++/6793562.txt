/* Pranet Verma */
/* Yeh mera template hai. Apna khud banao =_= */
#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define pip pair<int,pii>
#define pb push_back
#define mp make_pair
#define s(n) scanf("%d",&n)
#define s2(n,m) scanf("%d%d",&n,&m)
#define s3(n,m,l) scanf("%d%d%d",&n,&m,&l)
#define rep(i,n) for(int i=0;i<n;++i)
ll pwr(ll a,ll b,ll mod) {a%=mod;if(a<0)a+=mod;ll ans=1; while(b) {if(b&1) ans=(ans*a)%mod; a=(a*a)%mod; b/=2; } return ans; }
ll pwr(ll a,ll b) {ll ans=1; while(b) {if(b&1) ans*=a; a*=a; b/=2; } return ans; }
ll gcd(ll a,ll b) {while(b) {ll temp=a; a=b; b=temp%b; } return a; }
ll lcm(ll a,ll b) {return (a/gcd(a,b))*b; }
ll modularInverse(ll a,ll m) {/*reminder: make sure m is prime*/ assert(false); return pwr(a,m-2,m); }
const int mod=1000000007;

int isOneOff(string l,string k)
{
  int a=0;
  int b=0;
  int mismatches=0;
  while(a<l.size() && b<k.size())
  {
    if(l[a]==k[b])
    {
      ++a;
      ++b;
    }
    else
    {
      ++mismatches;
      if(mismatches>1)
        return 0;
      ++a;
    }
  }

  if(a==l.size())
  return mismatches==1;
  
  assert(a==k.size());
  return mismatches==0;
}
int main()
{
  std::ios::sync_with_stdio(false);
  
  int t;
  cin>>t;
  while(t--)
  {
    string l,k;
    cin>>l>>k;
    cout<<isOneOff(l,k)<<"\n";
  }
   


}