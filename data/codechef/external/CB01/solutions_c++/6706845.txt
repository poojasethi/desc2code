#include<stdio.h>
#define MAX 1010
#define MOD 1009
//copied for testing
long long f[MAX],inv[MAX];
long long power(long long a, long long b)
{
    long long x=1,y=a;
    while(b > 0)
    {
        if(b%2 == 1)
        {
            x=(x*y);
            x%=MOD;
        }
        y = (y*y);
        y%=MOD;
        b >>= 1;
    }
    return x;
}

long long MulInv(long long n)
{
    return power(n,MOD-2);
}

long long C(long long n, long long r)
{
    long long ans=1;
    long long n1,r1;
    while(n)
    {
        n1 = n%MOD;
        r1 = r%MOD;
        if(n1<r1)
        {
            ans = 0;
            break;
        }
        ans *= (f[n1] * inv[r1] * inv[n1-r1])% MOD;
        ans=ans%MOD;
        n=n/MOD;
        r=r/MOD;
    }
    return ans;
}

void GenFact()
{
    int i,x=1;
    f[0]=1;
    for (i=1; i<MAX; i++)
    {
        x *= i;
    	x = x%MOD;
		f[i] = x;
    }
}

void GenMulInv()
{
    int i,x=1;
    inv[0]=1;
    for(i=1;i<MAX;i++)
    {
        x *= MulInv(i);
        x = x%MOD;
        inv[i] = x;
    }
}

int main()
{
    long long n,r;
    int tc;

    GenFact();
    GenMulInv();

    scanf("%d",&tc);
    while(tc--)
    {
        scanf("%lld%lld",&n,&r);
        printf("%lld\n",C(n,r));
    }
    return 0;
}