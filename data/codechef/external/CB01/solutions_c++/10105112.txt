#include <bits/stdc++.h>

#define fi(a,b,c) for(int a=b; a<=c; a++)
#define fd(a,b,c) for(int a=b; a>=c; a--)
#define fii(a,b,c) for(int a=b; a<c; a++)
#define pb push_back
#define mp make_pair
#define ft first
#define sc second
#define reset(a,b) memset(a,b, sizeof a)

using namespace std;

typedef long long ll;
typedef pair <int, int> pii;
typedef unsigned int ui;

const int N = 100;
const ll oo = 1000;
const ll module = 1009ll;

ll fact[module + 10], inv_fact[module + 10];

ll inv(ll a, ll m) {
    ll xa = 1, xm = 0, xr;
    ll r, q;
    while (m!= 0) {
        q = a / m;
        xr = xa - xm * q;
        xa = xm; xm = xr;
        r = a % m;
        a = m; m = r;
    }
    if (xa < 0) xa+= module;
    return xa;
}

void Init() {
    fact[0] = 1;
    inv_fact[0] = inv(fact[0], module);
    fi(i, 1, module) {
        fact[i] = fact[i-1] * i;
        fact[i] %= module;
        inv_fact[i] = inv(fact[i], module);
    }
}

ll n, k, nn;
int tcase;

ll Lucas(ll m, ll n) {
    if (m < n) return 0;
    if (n == 0) return 1;
    if (m < module && n < module) {
        return (((fact[m] * inv_fact[n]) % module ) * inv_fact[m-n]) % module;
    }
    ll p = module;
    ll ans = 1;
    while (n || m)  {
        ans *= Lucas(m % p, n % p);
        ans %= module;
        m/= p; n/=p;
    }
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
  //  freopen("test.in", "r", stdin);
  //  freopen("test.out", "w", stdout);
    cin >>tcase;
    Init();
    while (tcase --)
    {
        cin >> n >> k;
        ll kk = Lucas(n, k);
        cout <<kk <<endl;
    }
}

