#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
#define MOD 1009
#define LL long long
 
using namespace std;
 
LL f[1050] = {1,1};
 
/* This function calculates (a^b)%MOD */
LL power(LL a, LL b)
{
	LL x=1,y=a; 
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>MOD) x%=MOD;
		}
		y = (y*y);
		if(y>MOD) y%=MOD; 
		b /= 2;
	}
	return x;
}
 
 
 
long long InverseEuler(LL n)
{
	return power(n,MOD-2);
}
 
long long C(LL n, LL r)
{
	LL ans = 1, n1, r1;
	
	while(n) {
		n1 = n % MOD;
		r1 = r % MOD;
 
		if(n1 < r1){
			ans = 0 ;
			break;
		}
 
		ans = ans * ((f[n1] * ((InverseEuler(f[r1]) * InverseEuler(f[n1-r1])) % MOD)) % MOD);
		ans %= MOD;
		n/=MOD;
		r/=MOD;
	}
 
	return ans;
}
 
void PreCompute()
{	
	for (int i=2; i<=1010;i++)
		f[i]= (f[i-1]*i) % MOD;
}
 
 
 
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */   
    
	int t;
	LL l, r, n, k, sum;
	
	PreCompute();
 
	cin>>t;
	LL diff;
	while(t--)
	{
	    sum=0;
		cin>>n>>k;
		
		sum = C(n , k) % MOD; 
        cout<<sum<<endl;
	}
 
    return 0;
}  