#include<bits/stdc++.h>
using namespace std;

int modularPow(int base,int exponent)
{
    int res = 1;
    while(exponent)
    {
        if(exponent&1)
        {
            res = (res*base)%1009;
        }
        exponent >>= 1;
        base = (base*base)%1009;
    }
    return res;
}

int fact[1010],factMultInv[1010];

void pre()
{
    int p=1,q=1;
    fact[0] = 1;
    factMultInv[0] = 1;
    for(int t=1;t<=1009;t++)
    {
         p *= t;
         p %= 1009;
         fact[t] = p;

         q *= modularPow(t,1007);
         q %= 1009;
         factMultInv[t] = q;
    }
}


int main()
{

    pre();
    int test;
    cin>>test;
    while(test--)
    {
        int result=1;
        long long  n,k;
        scanf("%llu%llu",&n,&k);
        while(n)
        {
            int N = n%1009;
            int K = k%1009;
            if(N<K)
            {
                result = 0;
                break;
            }
            result *= (fact[N]*factMultInv[K]*factMultInv[N-K])%1009;
            result %= 1009;
            n /=1009;
            k /=1009;
        }
        cout << result << endl;
    }
    return 0;
}
