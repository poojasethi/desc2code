#include <bits/stdc++.h>
#include<vector>
using namespace std;
bool myfunction (long long int i,long long int j) { return (i>j); }
int cmpfunc (const void * a, const void * b)
{
    if( *(long long int*)b - *(long long int*)a < 0 )
        return -1;
    if( *(long long int*)b - *(long long int*)a > 0 )
        return 1;
    return 0;
}
long long int v[10001];
int main() {
	std::ios::sync_with_stdio(false);
		cin.tie(0);
	long long int t;
	cin>>t;
	while(t){
		long long int n,k;
		cin>>n>>k;
		//	vector<long long int> v;
		set<long long int> s;
		for(long long int i=0;i<n;i++){
			long long int temp;
			cin>>temp;
			//		v.push_back(temp);
			v[i]=temp;
		}
		long long int count=0;
		long long int index=0;
		//sort(v.begin(),v.end(),myfunction);
		qsort(v,n,sizeof(long long int),cmpfunc);
		long long int val=v[0];
		while(k){
			while((val > v[index+1] && k>0) || (index==n-1 && k>0)){
				if( (index+1) <=k ){
				count = count + (index+1)*(val);
				val--;
				k= k-index-1;
				}
				else{
					count = count + k*val;
					k=0;
				}
//				for(int j=0;j<=index && k>0;j++,k--){
//					count +=v[j];
//					v[j]--;
//				}
			}
			index++;
		}
		cout<<count<<"\n";

		t--;
	}
	return 0;
}
