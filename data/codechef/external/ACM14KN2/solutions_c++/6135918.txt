#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cstring>
#define lli long long int
#define mod 10000007
using namespace std;
 
class m{
public:
	lli a[50][50];
	m()
	{
		memset(a, 0, sizeof(a));
	}
	void multiply(m b, int x) {
		lli c[50][50], sum;
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++) {
				sum = 0;
				for (int k=0; k<x; k++) {
					sum = (sum + this->a[i][k] * b.a[k][j]) % mod;
				}
				c[i][j] = sum;
			}
		}	
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++) {
				this->a[i][j] = c[i][j];
			}
		}
	}
	
	void display(int x) {
		for (int i=0; i<x; i++) {
			for (int j=0; j<x; j++) {
				if ( j%4 == 0)
					cout << " ";
				cout << a[i][j] << " " ;
			}
			cout << endl;
			cout << endl;
		}
	}
	
};
 
m iden;
 
m power(lli p, m init, int n)
{
	if( p == 0)
	return iden;
	m result;
 
	result = power(p/2, init, n);
	result.multiply(result, n);
 
	if( p%2 !=0)
		result.multiply(init, n);
 
	return result;
}
int k; 
int give( int x)
{
	if ( x < 0)
		return k-1;
	return x;
}
 
int main()
{
	int tc;
	lli n;
	for (int i=0; i<48; i++)
		iden.a[i][i] = 1;
	scanf("%d", &tc);
	while(tc--) {
		scanf("%lld%d", &n, &k);
		m tran, result;
		
		int y = (k==0)? 1 : k;
		for (int i=0; i<y; i++) {
			tran.a[4*i + 0][4 * give(i) + 1] += 1; 
			tran.a[4*i + 0][4 * give(i) + 2] += 1;

			tran.a[4*i + 1][4 * give(i) + 1] += 1; 
			tran.a[4*i + 1][4 * give(i) + 3] += 1;
			
			tran.a[4*i + 2][4 * give(i) + 1] += 1;
			
			tran.a[4*i + 3][4 * give(i) +  1] += 1;			
			if ( k != 0)
			{
				tran.a[4*i + 0][4 * give(i-1) + 0] += 1;
				tran.a[4*i + 1][4 * give(i-1) + 1] += 1;
				tran.a[4*i + 2][4 * give(i-1) + 0] += 1;
				tran.a[4*i + 3][4 * give(i-1) + 1] += 1;
			}
		}
		
//		cout << "k = " << k << endl;
//		tran.display(4 * y);
		result = power(n, tran, 4 * y);
//		cout << endl;
//		result.display(4 * k);
		lli ans = ( result.a[0][1] + result.a[0][3] ) % mod;
		printf("%lld\n", ans);
		
	}
	return 0;
}