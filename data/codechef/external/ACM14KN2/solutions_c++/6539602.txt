#include <bits/stdc++.h>
# define MOD 10000007
 
using namespace std;
 
typedef long long LL;
typedef vector<LL> VL;
typedef vector <VL> VLL;
 
VLL I;
 
VLL multiply (VLL a, VLL b) {
//assert (arsz == acsz && bcsz == acsz);
LL wq = a.size();
 
assert (a.size() == b.size());
VLL mult (wq, vector<LL>(wq, 0 ));
 
for (LL i = 0; i < wq; i++)
for (LL j = 0; j < wq; j++)
for (LL k = 0; k < wq; k++ ){
mult[i][j] = mult[i][j] + ((a[i][k] * b[k][j]));
mult[i][j] %= MOD;
}
 
return mult;
}
 
VLL expo (VLL A, LL n) {
//if (n == 0)
//return I;
//else
if (n == 1)
return A;
VLL T = expo (A, n/2);
VLL T1 = multiply (T,T);
if (n % 2 == 0 )
return T1;
else
return multiply (T1,A);
}
int get (int a, int b, int c) {
	
	LL t =  (4*a + 2*b + c);
	return t;
}
 
LL fibo (LL n) {
VLL mat(2,VL(2));
mat[0][0] = 1;
mat[0][1] = 1;
mat[1][0] = 1;
mat[1][1] = 0;
VLL an1 = expo (mat,n);
return an1[0][0];
}
 
int main () {
	ios_base::sync_with_stdio(false);
	LL test;
	cin >> test;
	while (test--) {
	LL n, k;
	cin >> n >> k;
	if (k == 0) {
		if (n == 1)
			cout<<"1\n";
		else
			cout<<fibo(n+1)<<"\n";
		continue;
	}
	VLL A(4*k , VL(4*k, 0 ));
	for (int i = 0; i < k; i++)	{
		int prev = i - 1;
		if (prev < 0)
			prev += k;
		// a 0 0
		A[get(i,0,0)][get (prev,0,0)]++;
		A[get(i,0,0)][get (prev ,1, 0)]++;
	   // a 0 1
		A[get (i, 0, 1)][get (prev,0,1)]++;
		A[get (i,0,1)] [get (i,0,0)]++;
		A[get (i,0,1)] [get (i, 1, 0)]++;
		A[get (i,0,1)] [get (i,1,1)]++;
		A[get (i,0,1)] [get (prev, 1, 1)]++;
		A[get (i,0,1)] [get (i,0,1)]++;
		// a 1 0
		A[get (i,1,0)][get(i,0,0)]++;
		// a 1 1
		A [get (i,1,1)][get(i,0,1)]++;
	}
	VLL ans = expo(A,n);
	//cout <<A[5][5];
	LL fans = ans[get(0,0,1)][0] + ans[get(0,1,1)][0];
	fans %= MOD;
	cout <<fans<<endl;
	}
	return 0;
}
 