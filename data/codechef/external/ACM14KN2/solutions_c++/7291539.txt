#include<iostream>
#include<cstdio>
#define MOD 10000007
using namespace std;
long long z[40][40],dp[40][40],a[40],n;
int k,s;
void power(long long n)
{
	long long t[40][40], i, j, k, c;

	if (n == 1)
		return;
	long long temp;
	power(n / 2);
	for (i = 0; i < s; i++)
	{
		for (j = 0; j < s; j++)
		{
			t[i][j] = 0;
			for (k = 0; k < s; k++)
			{
				t[i][j] = (t[i][j] + (dp[i][k] * dp[k][j])%MOD )%MOD ;
				
			}
		}
	}
	if (n % 2)
	{
		for (i = 0; i < s; i++)
		{
			for (j = 0; j < s; j++)
			{
				dp[i][j] = 0;
				for (k = 0; k < s; k++)
				{
					dp[i][j] = (dp[i][j] + (t[i][k] * z[k][j])%MOD )%MOD;
					
				}
			}
		}
		return;
	}
	for (i = 0; i < s; i++)
	{
		for (j = 0; j < s; j++)
			dp[i][j] = t[i][j];
	}
	return;
}
int main()
{
	int t;
	cin >> t;
	int i, j;
    long long  ans,x,y;
	while (t--)
	{
		ans = 0;
		cin>>n>>k;
		s = 4 * k;
		if (k == 0)
		{
			s = 2;
			if (n == 1)
			{
				cout << 1 << endl; continue;
			}
			if (n == 2)
			{
				cout << 3 << endl; continue;
			}
			a[0] = 2; a[1] = 3;
			dp[0][0]=z[0][0] = 0; dp[0][1]=z[0][1] = 1;
			dp[1][0]=dp[1][1]=z[1][0] = z[1][1] = 1;
			power(n - 2);
			ans = (dp[1][0] * a[0] + dp[1][1] * a[1]) % MOD;
			cout << ans << endl;
        }
		else if (k == 1)
		{
			a[0] = a[1] = a[2] = 1;
			a[3] = 0;
			z[0][2] = z[0][3] = z[1][1] = z[1][2] = z[1][3] = z[3][0] = z[3][1] = z[3][3] = 0;
			z[0][0] = z[0][1] = z[1][0] = z[2][0] = z[2][1] = z[3][2] = 1;
			z[2][2] = z[2][3] = 2;
			for (i = 0; i < 4; i++)
				for (j = 0; j < 4; j++)
					dp[i][j] = z[i][j];
			if (n == 1)
			{
				cout << 1 << endl; continue;
			}
			power(n - 1);
			for (i = 2; i < 4; i++)
				for (j = 0; j < 4; j++)
					ans = (ans + (dp[i][j] * a[j]) % MOD) % MOD;
			cout << ans << endl;
		}
		else
		{
			for (i = 0; i < s; i++)
				a[i] = 0;
			a[1] = a[2] = a[4] = 1;
			for (i = 0; i < s; i++)
			{
				for (j = 0; j < s; j++)
					z[i][j] = 0;
				x = i / 4;
				y = i % 4;
				if (y == 0)
					z[i][(i - 4 + s) % s] = z[i][(i - 3 + s) % s] = 1;
				else if (y == 1)
					z[i][(i - 1 + s) % s] = 1;
				else if (y == 2)
				{
					z[i][(i - 2 + s) % s] = z[i][(i - 1 + s) % s] = z[i][i] = z[i][i + 1] = z[i][(i - 4 + s) % s] = z[i][(i - 3 + s) % s] = 1;
				}
				else
					z[i][i -1] = 1;
			}	
			for (i = 0; i < s; i++)
					for (j = 0; j < s; j++)
						dp[i][j] = z[i][j];
			
			if (n == 1)
			{
				cout << 1 << endl; continue;
		      }
			power(n - 1);
			for (i = 2; i < 4; i++)
			{
				for (j = 0; j < s; j++)
					ans = (ans + (dp[i][j] * a[j]) % MOD) % MOD;
			}

			cout << ans << endl;
		}
		
		
	}
	return 0;
}