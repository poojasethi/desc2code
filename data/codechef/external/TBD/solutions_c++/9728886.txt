#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
#define wl(n) while (n--)
#define MOD 1000000007
//-------------
vector<int>g[100010];
int dp[100010][16]={0};
int par[100010];
void dfs(int c,int p)
{
	int ret=1;
	par[c]=p;
	int i,j,z=g[c].size();
	for (i=0;i<z;i++)
	{
		if (g[c][i]!=p)
			dfs(g[c][i],c);
	}
	dp[c][0]=1;
	
	
	for (j=1;j<=15;j++)
	{	
		dp[c][j]=1;
		for (i=0;i<z;i++)
			dp[c][j]+=dp[g[c][i]][j-1];
	}
 
 
}	
int main()
{	
	int n,i,j;
	sc(n);
	for (i=0;i<n-1;i++)
	{
		int x,y;
		sc2(x,y);
		g[x].pb(y);
		g[y].pb(x);
	}	
	dfs(1,-1);
	/*for (i=1;i<=n;i++)
	{	for(j=0;j<=15;j++)
		{
			printf("%d,%d::%d ",i,j,dp[i][j]);
		}
		printf("\n");	
	}		*/
	int q;
	sc(q);
	wl(q)
	{
		int c,k;
		sc2(c,k);
		int ans=dp[c][k];
		int o=c;
		c=par[c];
		k--;
		while (c!=-1&&k>=0)
		{
			ans+=dp[c][k];
			if (k>0)
				ans-=dp[o][k-1];
			k--;
			o=c;
			c=par[c];
		}
		printf("%d\n",ans);
	}
	return 0;
 
} 