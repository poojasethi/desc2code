#include <bits/stdc++.h>
 
using namespace std;
 
#define lb      lower_bound
#define ub      upper_bound
#define pb      push_back
#define pf      push_front
#define mp      make_pair
#define gcd     __gcd
#define all(x)  x.begin(), x.end()
#define S(x)    scanf("%d", &x)
#define Sl(x)   scanf("%lld", &x)
#define P(x)    printf("%d", x)
#define Pl(x)   printf("%lld", x)
#define PS(x)   printf("%s", x)
#define MOD     1000000007LL
 
typedef long long       ll;
typedef vector<int>     vi;
typedef vector<vi>      vvi;
typedef pair<int, int>  ii;
typedef vector<ii>      vii;
 
int arr[505][505];
bool visited[505][505];
 
ll dfs(int i, int j, int m, int n)
{
	visited[i][j] = true;
	ll ans = 0;
	if(i+1 < m && arr[i+1][j] == 1 && visited[i+1][j] == false) {
		ans = max(ans, 1+dfs(i+1, j, m, n));
	}
	if(i-1 >= 0 && arr[i-1][j] == 1 && visited[i-1][j] == false) {
		ans = max(ans, 1+dfs(i-1, j, m, n));
	}
	if(j+1 < n && arr[i][j+1] == 1 && visited[i][j+1] == false) {
		ans = max(ans, 1+dfs(i, j+1, m, n));
	}
	if(j-1 >= 0 && arr[i][j-1] == 1 && visited[i][j-1] == false) {
		ans = max(ans, 1+dfs(i, j-1, m, n));
	}
	visited[i][j] = false;
	return ans; 
}
	
int main()
{
	int m, n;
	S(m);
	S(n);
	for(int i = 0; i <= m; i++) {
		for(int j = 0; j <= n; j++) {
			visited[i][j] = false;
		}
	}
	string a;
	for(int i = 0; i < m; i++) {
		cin >> a;
		for(int j = 0; j < n; j++) {
			if(a[j] == '#') {
				arr[i][j] = 0;
			} else {
				arr[i][j] = 1;
			}
		}
	}
	ll ans = 0;
	for(int i = 0; i < m; i++) {
		for(int j = 0; j < n; j++) {
			if(arr[i][j] == 1) {
				ans = max(ans, 1+dfs(i,j,m,n));	
			}
		}
	}
	cout << ans << endl;
	return 0;
}