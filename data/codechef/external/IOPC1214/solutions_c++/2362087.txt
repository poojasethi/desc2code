#include <cstdio>
#include <iostream>
#include <vector>
#include <queue>
using namespace std;
#define pb push_back
#define mp make_pair
int main()
{
        int tst;
        cin>>tst;
        while(tst--) {
                int n,m,i=0;
                cin>>n>>m;
                vector<int>vecc[n];
                int admire[n],adm[n];
                for(int i=0; i<n; i++)admire[i]=adm[i]=0;
                while(i<m) {
                        int a,b;
                        cin>>a>>b;
                        vecc[a].pb(b);
                        admire[a]=1;
                        adm[b]=1;
                        i++;
                }
                int depth[n],maxi=0;
                for(int i=0; i<n; i++)depth[i]=0;
                vector<int>chase;
                for(int i=0; i<n; i++)if(admire[i]-adm[i]==1)chase.pb(i);
                for(int i=0; i<chase.size(); i++) {
                        //cout<<chase[i]<<endl;
                        queue<pair<int,int> >que;
                        que.push(mp(chase[i],chase[i]));
                        while(que.size()>0) {
                                pair<int,int> node=que.front();
                                que.pop();
                                for(int j=0; j<vecc[node.first].size(); j++) {
                                        int temp_node=vecc[node.first][j];
                                        if(temp_node==node.second)continue;
                                        if(depth[temp_node]<depth[node.first]+1) {
                                                depth[temp_node]=depth[node.first]+1;
                                                maxi=max(depth[temp_node],maxi);
                                                que.push(mp(temp_node,node.first));
                                        }
                                }
                        }
                }
                cout<<maxi+1<<endl;
        }
        return 0;
}/*
1
5 6
0 2
1 2
2 3
0 3
1 4
2 4
*/
