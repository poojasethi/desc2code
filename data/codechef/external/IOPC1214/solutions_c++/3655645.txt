    #include <iostream>
    #include <stdio.h>
    #include <utility>
    #include <algorithm>
    #include <cstring>
    #include <vector>
    #include <map>
    #include <set>
    #include <queue>
    #include <math.h>
    #include <cstdio>
    #define FOR(i,x,y) for(int i=(x);i<(y);i++)
    #define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
    #define MIN(x,y) ((x)<(y)?(x):(y))
    #define MAX(x,y) ((x)>(y)?(x):(y))
    #define ABS(x) ((x)>0?(x):-(x))
    #define SQ(x) ((x)*(x))
    #define mset(x,y) memset(x,y,sizeof(x))
        #define gc getchar_unlocked    
    typedef long long int lli;
    typedef long double ld;
     
    using namespace std;
 
inline int getn(){
	int n = 0, c = gc();
	while(c < '0' || c > '9') c = gc();
	while(c >= '0' && c <= '9')
		n = (n<<3) + (n<<1) + c - '0', c = gc();
	return n;
}
    vector<int> adl[1010];
    int ma[1010];
    int n,m;
     
    int calc(int k)
    {
    if(ma[k]==-1)
    {
    int m=0;
    for(int i=0;i<adl[k].size();i++) m=max(m,calc(adl[k][i])+1);
    ma[k]=m;
    }
    return ma[k];
    }
    int main()
    {
    //freopen("inp.txt","r",stdin);
    int t;
    int a,b;
    t=getn();
    while(t--)
    {
    n=getn();
    m=getn();
    for(int i=0;i<n;i++) adl[i].clear();
    for(int i=0;i<m;i++)
    {
    a=getn();
    b=getn();
    adl[a].push_back(b);
    }
    mset(ma,-1);
    int m=0;
    for(int i=0;i<n;i++) m=max(m,calc(i));
    printf("%d\n",m+1);
    }
    return 0;
    } 