#include <algorithm>
#include <bitset>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <deque>
#include <functional>
#include <iomanip>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <utility>
#include <vector>
#include <cstring>
#define maxn 100005
using namespace std;

int n,m;
vector<int> adj[maxn],rev[maxn];
int f[maxn],deg[maxn];

void solveTestCase() {
  scanf("%d %d", &n, &m);
  for (int i = 0; i < n; i++) {
    adj[i].clear();
    rev[i].clear();
  }
  for (int i = 0; i < m; i++) {
    int u,v;
    scanf("%d %d", &u, &v);
    adj[u].push_back(v);
    rev[v].push_back(u);
    deg[u]++;
  }
  queue<int> q;
  for (int i = 0; i < n; i++) if (!deg[i]) q.push(i);
  int ret = 1;
  while (!q.empty()) {
    int u = q.front();
    q.pop();
    f[u] = 1;
    for (int i = 0; i < adj[u].size(); i++)
      f[u] = max(f[u],1 + f[adj[u][i]]);
    ret = max(ret,f[u]);
    for (int i = 0; i < rev[u].size(); i++) {
      deg[rev[u][i]]--;
      if (!deg[rev[u][i]]) q.push(rev[u][i]);
    }
  }
  printf("%d\n", ret);
}

int main() {
  int T;
  scanf("%d", &T);
  while (T--) solveTestCase();
}
