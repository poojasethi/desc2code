#include<stdio.h>
#include<vector>
#include<algorithm>
#include<string.h>

using namespace std;

int n,relation,dp[1001];
vector<int> V[1001];

int dfs(int bup)
{
    int ans=0;

    if (V[bup].size()==0)
    return 1;

    if(dp[bup]!=-1)
    return dp[bup];

    for(int i=0;i<V[bup].size();i++)
        {
            ans=max(ans,dfs(V[bup][i])+1);
        }
    dp[bup]=ans;
    return ans;

}

int main()
{
    int tt,ans=0;
    scanf("%d",&tt);
    for(int t=0;t<tt;t++)
    {
        scanf("%d %d",&n,&relation);
        for(int i=0;i<n;i++)
        V[i].clear();
        memset(dp,-1,sizeof dp);
        int a,b;
        for(int i=0;i<relation;i++)
        {
            scanf("%d %d",&a,&b);
            V[a].push_back(b);
        }
        ans=0;
        for(int i=0;i<n;i++)
        {
            ans=max(ans,dfs(i));
        }
//        for(int t=0;t<n;t++)
//        printf("dp[%d] %d\n",t,dp[t]);
        printf("%d\n",ans);
    }
    return 0;
}
