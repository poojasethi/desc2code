#include<cstdio>
#include<vector>
#include<cstring>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

int dp[1000];
int dfs(int u,const vector<int> *G){
	if(~dp[u]) return dp[u];
	dp[u]=0;
	rep(i,G[u].size()){
		int v=G[u][i];
		dp[u]=max(dp[u],dfs(v,G)+1);
	}
	return dp[u];
}

int main(){
	int T; scanf("%d",&T);
	while(T--){
		int n,m; scanf("%d%d",&n,&m);
		vector<int> G[1000];
		rep(i,m){
			int u,v; scanf("%d%d",&u,&v);
			G[u].push_back(v);
		}

		memset(dp,-1,sizeof dp);
		rep(u,n) dfs(u,G);
		printf("%d\n",*max_element(dp,dp+n)+1);
	}

	return 0;
}
