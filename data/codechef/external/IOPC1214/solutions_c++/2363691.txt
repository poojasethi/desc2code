#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <limits>
#include <cstring>

using namespace std;
#define mod 1000000009

#define LL long long
#define mp make_pair
#define pb push_back
typedef pair<LL, LL> ii;

int main()
{
	int t;
	cin>> t;
	while(t--)
	{
		int n, m;
		cin>> n>> m;
		vector<int> edges[n];
		int deg[n], ans[n], parent[n];
		for(int i=0; i<n; i++)
			deg[i]=0, ans[i]=0, parent[i]=0;

		for(int i=0; i<m; i++)
		{
			int a, b;
			cin>> a>> b;
			edges[a].pb(b);
			deg[b]++;
		}
		vector<int> v;
		for(int i=0; i<n; i++)
			if(deg[i]==0)
				v.pb(i);

		for(int ii=0; ii<v.size(); ii++)
		{
			queue<int> q;
			q.push(v[ii]);
			parent[v[ii] ]=-1;
			while(!q.empty())
			{
				int u=q.front();
				q.pop();

				for(int i=0; i<edges[u].size(); i++)
				{
					int v=edges[u][i];
					if(v==parent[u])
						continue;
					if(ans[v]<ans[u]+1){
						parent[v]=u;
						q.push(v);
						ans[v]=max(ans[v], ans[u]+1);
					}
				}
			}
		}
		int res=0;
		for(int i=0; i<n; i++)
			res=max(res, ans[i]);
		cout << res+1<< endl;

	}

	return 0;
}
