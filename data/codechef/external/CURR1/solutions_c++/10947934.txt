#include<bits/stdc++.h>
using namespace std;
#define maxi 1000001
#define mod 1000000007
long long power(long long a,long long b)
{
    long long res=1;
    if(b==0)
        return 1;
    else if(b==1)
        return a;
    while(b>0)
    {
        if(b&1)
            res=(res*a)%mod;
        a=(a*a)%mod;
        b=b/2;

    }
    return res;
}
long long s[maxi];
long long findd(long long a)
{
    if(s[a]<0)
        return a;
    return (s[a]=findd(s[a]));
}
void unionn(long long a,long long b)
{
    long long root1=findd(a);
    long long root2=findd(b);
    if(s[root1]==s[root2] && root1!=root2)
    {
        s[root2]+=s[root1];
        s[root1]=root2;
    }
    else if(s[root2]>s[root1] && root1!=root2)
    {
        s[root1]+=s[root2];
        s[root2]=root1;
    }
    else if(s[root2]<s[root1] && root1!=root2)
    {
        s[root2]+=s[root1];
        s[root1]=root2;
    }
}
int main()
{
    long long t,n,i,d=0,a,b,m;
    long long e;
    for(i=0;i<=1000000;i++)
        s[i]=-1;
    cin>>n>>m;
    while(m--)
    {
        cin>>a>>b;
        unionn(a-1,b-1);
    }
    for(i=0;i<n;i++)
        if(s[i]<0)
            d++;
    d=n-d;
    e=power(2,d);

    cout<<e;
    return 0;
}
