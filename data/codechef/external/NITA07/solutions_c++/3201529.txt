#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <sstream>
using namespace std;
#define FOR(i,a,b) for(int i=(a);i<(b);i++)
//good code to find short path concept with dp
int main()
{
 
int n;
scanf("%d",&n);
string s[n];
 
FOR(i,0,n)
{
cin>>s[i];
}
int m=s[0].length();
 
int a[n][m];
 
FOR(i,0,n)
{
FOR(j,0,m)
{
a[i][j]=9999;
}
}
 
a[0][0]=1;
 
int x,y,z;
FOR(i,0,n)
{
FOR(j,0,m)
{
if(s[i][j]=='0')
{
int mi=9999;
 
 
if(i-1>=0 && j-1>=0)
mi=min(mi,a[i-1][j-1]+1);
 
if(i-1>=0 && j+1<m)
mi=min(mi,a[i-1][j+1]+1);
 
if(i+1<n && j-1>=0)
mi=min(mi,a[i+1][j-1]+1);
 
if(i+1<n && j+1<m)
mi=min(mi,a[i+1][j+1]+1);
 
if(j-1>=0)
mi=min(mi,a[i][j-1]+1);
 
 
if(i-1>=0)
mi=min(mi,a[i-1][j]+1);
 
 
if(j+1<m)
mi=min(mi,a[i][j+1]+1);
 
if(i+1<n)
mi=min(mi,a[i+1][j]+1);
if(mi!=9999)
a[i][j]=mi;
 
}
}
}
 
cout<<a[n-1][m-1]<<endl;
return 0;
}