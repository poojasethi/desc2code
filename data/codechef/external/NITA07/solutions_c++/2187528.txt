#include<cstdio>
#include<queue>
#include<cstring>
using namespace std;

char Cell[101][101];
int dx[] = { 0, 1, 1, 1,-1,-1,-1, 0 };
int dy[] = { 1, 0, 1,-1, 1,-1, 0,-1 };
int N,L,Visited[101][101],Distance[101][101];

int isSafe(int x, int y)
{
    return (  (x>=0 && x<N && y>=0 && y<L)  &&  Visited[x][y]==0 && Cell[x][y]=='0'  );
}

int Bfs(int i, int j)
{
    int dir,read=1;
    Distance[i][j]=read;
    Visited[i][j]=1;
    queue<pair<int, int> > q;
    q.push(make_pair(i,j));
    
    while(!q.empty())
    {
      pair<int, int> pr;
      pr=q.front();
      q.pop();
      int x=pr.first;
      int y=pr.second;
      for(dir=0; dir<8; dir++)
      {
          int xx=x+dx[dir], yy=y+dy[dir];
          if( isSafe(xx,yy) ) {  q.push(make_pair(xx,yy));  Visited[xx][yy]=1;  Distance[xx][yy] = Distance[x][y]+1;  }
      }
      read=read+1;
   }
  return Distance[N-1][L-1];
}

int main()
{
    int i;
    scanf("%d",&N);
    for(i=0; i<N; i++)  scanf("%s",Cell[i]);
    L=strlen(Cell[0]);
    printf("%d\n",Bfs(0,0));
  return 0;
}