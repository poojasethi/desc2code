#include<bits/stdc++.h>
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define p(n) printf("%d\n",n)
#define mod 1000000007
#define ll long long
#define pb push_back
#define mp make_pair
#define N 100011
#define ma 1e9
using namespace std;

struct node
{
 int id;
}n1,n2;

vector<pair<int,int> >v[1002];
int red[1002];
ll ans[1002];
int vis[1002];
int n,m,i,j,des,cst,t,src;

bool operator<(const struct node &a,const struct node &b)
{
 return ans[a.id]>ans[b.id];
}

void djistra(int sr)
{

    for(i=1;i<=n;++i)ans[i]=-1;
    memset(vis,0,sizeof(vis));
    priority_queue<node>pq;
    ans[sr]=0;
    vis[sr]=1;
    n1.id=sr;
    pq.push(n1);

    while(!pq.empty())
    {
        n2=pq.top();
        pq.pop();

        for(i=0;i<v[n2.id].size();++i)
        {
            int did=v[n2.id][i].first;
            ll css=v[n2.id][i].second;

            if(red[did]<css)
            css-=red[did];
            css+=ans[n2.id];

            if(vis[did]==0)
            {
                n1.id=did;
                vis[did]=1;
                ans[did]=css;
                pq.push(n1);
            }
            else if(css<ans[did])
            {
                n1.id=did;
                ans[did]=css;
                 pq.push(n1);
            }


        }
    }
}

int main()
{


     cin>>t;

     while(t--)
     {
        for(i=1;i<=1000;++i)
        v[i].clear();

        cin >> n >> m;
        for(i=0;i<m;++i)
        {
            cin>>src>>des>>cst;
            v[src].pb(mp(des,cst));
        }

        for( i=1; i<=n ; ++i)
        cin >> red[i];

        int ss,dd;
        cin >> ss >> dd;

        djistra(ss);
        if(ans[dd]!=-1)
        cout<<ans[dd]*10<<endl;
        else
        cout<<ans[dd]<<endl;
     }
    return 0;
}
