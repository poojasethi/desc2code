//============================================================================
// Name        : riya.cpp
// Author      : riya1794
//============================================================================

#include<bits/stdc++.h>

using namespace std;

#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))

#define REP(i,a,b) for(LL i=a;i<b;i++)
#define rep(i,b) for(LL i=0;i<b;i++)
#define rep1(i,b) for(LL i=1;i<=b;i++)

#define pdn(n) printf("%d\n",n)
#define pln(n) printf("%ld\n",n)
#define plln(n) printf("%lld\n",n)
#define pn(n) printf("\n")
#define psn(n) printf("%s\n",n)

#define s2ll(n1,n2) scanf("%lld%lld",&n1,&n2)
#define sll(n) scanf("%lld",&n)
#define sl(n) scanf("%ld",&n)
#define sd(n) scanf("%d",&n)
#define ss(n) scanf("%s",n)

#define PI 3.14159265358979323846
#define ass(n,a,b) assert(n>=a&&n<=b)

typedef long long LL;
double eps=1e-9;
#define MOD 1000000007
#define mx 1000000007
int main()
{
    LL n,m,l,r,c,a,src,dest,t,dec;
    sll(t);
    while(t--)
    {
        s2ll(n,m);
        vector<pair<LL,LL> > adj[n+5];
        priority_queue<pair<LL,LL> > q ;
        LL p[n+5];
        LL d[n+5];
        rep1(i,n)
        {
            d[i]=mx;
            adj[i].clear();
        }
        rep(i,m)
        {
            s2ll(l,r);
            sll(c);
            adj[l].push_back(make_pair(r,c));
            //adj[r].push_back(make_pair(l,c));
        }
        rep1(i,n)
            sll(p[i]);
        s2ll(src,dest);

        q.push(make_pair(0,src));
        d[src]=0;
        while(!q.empty())
        {
            pair<LL,LL> dd =q.top();
            LL u=dd.second;
            LL wt=-dd.first;
            q.pop();
            if(d[u]<wt)
                continue;
            rep(i,adj[u].size())
            {
                LL nwt=adj[u][i].second;
                LL v=adj[u][i].first;
                if(p[v]<nwt)
                    nwt-=p[v];
                if(d[v]>(d[u]+nwt))
                {
                    d[v]=(d[u]+nwt);
                    q.push(make_pair(-d[v],v));
                }
            }
        }
        if(d[dest]==mx)
            printf("-1\n");
        else
            printf("%lld\n",d[dest]*10);

    }
    return 0;
}
