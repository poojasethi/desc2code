#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000009
#define MAXN 100005
#define pi 3.14159
#define D 1009
typedef unsigned long long int uint64;
typedef long long int int64;
 
 
vector<pair<int,int> >v[1111];
int penalty[1111];
int dist[1111];
int main(){
	int t,n,m,i,l,r,c,s,d;
	cin>>t;
	while(t--){
		cin>>n>>m;
		for(i=0;i<=1000;i++){
			v[i].clear();
			dist[i]=1e9;
		}
		for(i=0;i<m;i++){
			cin>>l>>r>>c;
			v[l].pb(mp(r,c));
			//v[r].pb(mp(l,c));
		}
		for(i=1;i<=n;i++){
			cin>>penalty[i];
		}
		cin>>s>>d;
		priority_queue<pair<int,int> >p;
		dist[s]=0;
		p.push(mp(-dist[s],s));
		
		while(!p.empty()){
			pair<int,int>temp=p.top();
			p.pop();
			temp.first=-temp.first;
			if(dist[temp.second]<temp.first)
			continue;
			for(int i=0;i<v[temp.second].size();i++){
				pair<int,int>ntmp=v[temp.second][i];
				int node=ntmp.first;
				
				if(ntmp.second>penalty[node])
				ntmp.second-=penalty[node];
				
				if(dist[ntmp.first]>temp.first+ntmp.second){
					dist[ntmp.first]=temp.first+ntmp.second;
					p.push(mp(-dist[ntmp.first],ntmp.first));
					//cout<<ntmp.first<<" "<<dist[ntmp.first]<<endl;
				}
			}
		}
		
		if(dist[d]==1e9)
		cout<<-1<<endl;
		else
		cout<<dist[d]*10<<endl;
	}	
 
	return 0;
} 