import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.InputMismatchException;
class Thepowerofpowers {
	public static void main(String[] args)throws Exception {
		PrintWriter pr=new PrintWriter(System.out,true);
		InputReader in=new InputReader(System.in);
	
	int t,a,b,i,c,arr[],j,k=0,l=0,ans[][],m;
	ans=new int[10][4001];
	
	for(a=2;a<=9;a++){
	arr=new int[4002];
	arr[1]=1;
	for(i=1;i<=4000;i++){
		c=0;
		for(j=1;j<=i;j++){
			arr[j]*=a;
		}
		for(k=1;k<=i;k++){
			arr[k+1]+=arr[k]/10;
			arr[k]%=10;
		}
		for(m=1;m<=i;m++)
			c+=arr[m];
		ans[a][i]=c;
		
	}
}
	
	t=in.readInt();
	
	while(t-->0){
		c=0;l++;
		a=in.readInt();
		b=in.readInt();
		if(a==1||b==0) pr.println("Case "+l+": "+1);
		else
		pr.println("Case "+l+": "+ans[a][b]);

		
	}
	
	
	}
}

class InputReader {
    private InputStream stream;
    private byte[] buf = new byte[102400];
    private int curChar;
    private int numChars;
   
    public InputReader(InputStream stream) {
            this.stream = stream;
    }
    public final int read() {
            if (numChars == -1)
                    throw new InputMismatchException();
            if (curChar >= numChars) {
                    curChar = 0;
                    try {
                            numChars = stream.read(buf);
                    } catch (IOException e) {
                            throw new InputMismatchException();
                    }
                    if (numChars <= 0)
                            return -1;
            }
            return buf[curChar++];
    }
    public final int readInt() {
            int c = read();
            while (isSpaceChar(c))
                    c = read();
            int sgn = 1;
            if (c == '-') {
                    sgn = -1;
                    c = read();
            }
            int res = 0;
            do {
                    if (c < '0' || c > '9')
                            throw new InputMismatchException();
                    res *= 10;
                    res += c - '0';
                    c = read();
            } while (!isSpaceChar(c));
            return res * sgn;
    }
    
    public final String readString() {
        int c = read();
        while (isSpaceChar(c))
                c = read();
        StringBuilder res = new StringBuilder();
        do {
                res.appendCodePoint(c);
                c = read();
        } while (!isSpaceChar(c));
        return res.toString();
}
    public final  static boolean isSpaceChar(int c) {
            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
    }
    
    }
