#include <bits/stdc++.h>
 
using namespace std;
 
vector <int> primes;
 
long long gcd (long long a,long long b) {
	if (b == 0) return a;
	return(a % b == 0 ? b : gcd(b,a % b));
}
 
long long find (long long n, int m) {
	int i,j,c;
	long long lcm,res;
	res = 0;
	for (i = 1; i < (1 << m); i++) {
		c = 0;
		lcm = 1;
		for (j = 0; j < m; j++) {
			if (((i >> j) & 1) == 1) {
				c++;
				lcm = (lcm * primes[j]);
			}
		}
		if (c % 2 == 1) {
			res = res + n / lcm;
		} else {
			res = res - n / lcm;
		}
	}
	return res;
}
 
long long solve (int n,long long l,long long r) {
	int i,j,flag,m;
	long long res;
	primes.clear();
	for (i = 2; i <= n; i++) {
		flag = 0;
		for (j = 0; j < primes.size(); j++) {
			if (i % primes[j] == 0) {
				flag = 1;
				break;
			}
		}
		if (flag == 0) {
			primes.push_back(i);
		}
	}
	m = primes.size();
	res = find(r,m) - find(l - 1,m);
	return res;
}
 
int main()
{
	int t;
	scanf("%d",&t);
	while (t --) {
		int n;
		long long l,r,ans;
		scanf("%d",&n);
		scanf("%lld%lld",&l,&r);
		ans = solve(n,l,r);
		printf("%lld\n",ans);
	}
	return 0;
}
 