#include <iostream>
#include <bits/stdc++.h>
#define ll long long int

using namespace std;

struct node {
    ll val;
    ll maxi;
};

ll prime[15] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47};

ll n1 = 15;
ll temp = 0;

struct node arr[100005];
struct node arr1[100005];

map <ll, ll> st;

bool cmp(struct node a, struct node b)
{
    return (a.val < b.val);
}

void func(ll index, ll mul, ll ma, ll kitna)
{
	if (index >= 15 || kitna >= 3) {
		return;
	}

	else {
		arr[temp].val = mul;
		arr[temp].maxi = ma;
		temp++;

		for (int j = index + 1; j < 15; j++) {
			func(j, mul * prime[j], prime[j], kitna + 1);
		}

		return;
	}
}

int main() {
	ll t;
	ll n;
	ll l;
	ll r;

	//set <ll> st;

	for (ll i = 0; i < 15; i++) {
		func(i, prime[i], prime[i], 1);
	}

	//sort(com, com + temp);
	//cout << temp;
	ll k = 0;

	//sort(arr, arr + temp, cmp);

	//for (ll i = 0; i < 10; i++) {
      //  cout << arr[i].val << "  " << arr[i].maxi << endl;
    //}

    //cout << endl;

	for (ll i = 0; i < temp; i++) {

		ll flag = 0;
		for (ll j = 0; j < 15; j++) {
			if (arr[i].val == prime[j]) {
				flag = 1;
				break;
			}
		}

		if (flag == 1) {
            arr[i].val = -1;
		}

	}




	for (ll i = 0; i < temp ;i++) {
        if (arr[i].val != -1) {
            arr1[k].val = arr[i].val;
            arr1[k].maxi = arr[i].maxi;
            k++;
        }
	}


	sort(arr1, arr1 + k, cmp);
    //cout << arr1[k - 2].val <<  "  " << arr1[k - 2].maxi << endl;
    /*for (ll i = 0; i < 100; i++) {
        cout << arr1[i].val << "  " << arr1[i].maxi << endl;
    }*/



	cin >> t;

	while (t--) {
		cin >> n;
		cin >> l >> r;
		ll ind = -1;

		for (int i = 0; i < 15; i++) {
			if (prime[i] <= n) {

			}
			else {
				ind = i;
				break;
			}
		}

		if (ind == -1) {
            ind = 15;
		}

		ll sum = 0;
		//cout << ind << endl;

		for (int i = 0; i < ind; i++) {

			sum += r / prime[i] - (l - 1)/ prime[i];
			//cout << sum << endl;
		}

		//cout << sum << endl;

		for (ll i = 0; i < k; i++) {


			if (arr1[i].maxi <= n && arr1[i].val <= r) {
                //cout << arr1[i].val << "  " << arr1[i].maxi << endl;
				sum -= 	r / arr1[i].val - (l - 1)/ arr1[i].val;
				//cout << sum << endl;
			}
			else if (arr1[i].val > r) {
                break;
			}

		}

		cout << sum << endl;

	}


	return 0;
}
