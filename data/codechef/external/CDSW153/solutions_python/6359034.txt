from itertools import combinations as c
def primes(n):
    """ Returns  a list of primes < n """
    sieve = [True] * n
    for i in xrange(3,int(n**0.5)+1,2):
        if sieve[i]:
            sieve[i*i::2*i]=[False]*((n-i*i-1)/(2*i)+1)
    return [2] + [i for i in xrange(3,n,2) if sieve[i]]

for i in range(input()):
	n,l,r = map(int,raw_input().split())
	p = primes(n+1)
	su = 0
	for item in p:
		a = r/item  -  (l-1)/item
		su += a
	to_sub = 0
	ll = len(p)
	for i in range(ll):
		for j in range(i+1,ll):
		#print comb
			pro = p[i]*p[j]
			a = (r/pro)
			b = ((l-1)/pro)
			#print l,pro,l/pro
			to_sub += a-b
		#print to_sub
	print su-to_sub




