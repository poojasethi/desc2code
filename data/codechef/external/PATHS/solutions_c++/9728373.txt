#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(1e3+1)
ll MOD=99999999999999997ll;
ll dp[N][N];
void comp(){
    dp[1][1]=1;
    for(int i=1;i<N;i++){
        for(int j=1;j<N;j++){
            if(i==1||j==1){
                dp[i][j]=1;
            }
            else{
                dp[i][j]=(dp[i-1][j]+dp[i][j-1])%MOD;
            }
        }
    }
}
void solve(){
    string x;
    cin>>x;
    ll convert=0;
    for(int i=0;i<x.size();i++){
        convert=(convert*(10ll)+(ll)(x[i]-'0'))%MOD;
    }
    vector<pii> ans;
    for(int i=1;i<N;i++){
        for(int j=1;j<N;j++){
            if(dp[i][j]==convert){
               ans.pb(mp(i,j));
            }
        }
    }
    if(ans.empty()){
       printf("The Grid is Too Big!\n");
    }
    else{
        printf("%d\n",ans.size());
        for(int i=0;i<ans.size();i++){
            printf("%d %d\n",ans[i].fi,ans[i].se);
        }
    }
}
int main(){
   //ios_base::sync_with_stdio(false);
   int t=1;
   comp();
   scanf("%d",&t);
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
