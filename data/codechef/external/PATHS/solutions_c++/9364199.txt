#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using VI = vector<ll>;
using VVI = vector<VI>;

const int P = 3;
ll primes[3] = {1000000007, 1000000009, 1000000007};

ll mpow(ll b, ll e, ll m) {
  if (e == 0) return 1;
  ll r = mpow(b, e / 2, m);
  r = (r * r) % m;
  if (e % 2 == 1) r = (r * b) % m;
  return r;
}

int main() {
  int t;
  cin >> t;
  VVI inv(P, VI(2001));
  for (int j = 0; j < P; ++j) {
    for (int i = 1; i < 2001; ++i) {
      inv[j][i] = mpow(i, primes[j] - 2, primes[j]);
    }
  }

  while (t--) {
    string x;
    cin >> x;
    VI xm(P, 0);
    for (char c : x) {
      for (int j = 0; j < P; ++j) xm[j] = (xm[j] * 10 + c - '0') % primes[j];
    }

    vector<pair<int, int>> r;
    for (int m = 1; m <= 1000; ++m) {
      VI mod(3, 1);
      for (int n = 1; n <= 1000; ++n) {
        bool ok = true;
        for (int j = 0; j < P; ++j) {
          if (mod[j] != xm[j]) ok = false;
          mod[j] = (mod[j] * (m + n - 1)) % primes[j];
          mod[j] = (mod[j] * inv[j][n]) % primes[j];
        }
        if (ok) r.push_back(make_pair(m, n));
      }
    }

    if (r.size()) {
      cout << r.size() << endl;
      for (auto p : r) cout << p.first << " " << p.second << endl;
    } else cout << "The Grid is Too Big!" << endl;
  }
}
