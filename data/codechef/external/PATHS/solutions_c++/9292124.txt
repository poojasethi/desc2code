#include <bits/stdc++.h>
using namespace std;

#define ll long long
const int N = 1005;

int dp[N][N][5], p[] = {0, 1618033, 1909091, 10000169, 10000931};

void solve(){
    string s;
    cin>>s;
    int len = s.length(), val[] = {0, 0, 0, 0, 0}, ans = 0;
    vector<pair<int, int> > V;
    for(int i = 0; i < len; i++)
        for(int k = 1; k <= 4; k++)
            val[k] = ((val[k] * 10) + (s[i] - '0')) % p[k];

    for(int i = 1; i <= 1000; i++){
        for(int j = 1; j <= 1000; j++){
            if(dp[i][j][1] == val[1] and dp[i][j][2] == val[2] and dp[i][j][3] == val[3] and dp[i][j][4] == val[4]){
                ans++;
                V.push_back({i, j});
            }
        }
    }
    if(ans){
        cout<<ans<<endl;
        for(auto it : V)    cout<<it.first<<" "<<it.second<<endl;
    }
    else cout<<"The Grid is Too Big!"<<endl;
}

int main(){

    for(int i = 1; i < N; i++){
        for(int j = 1; j < N; j++){
            for(int k = 1; k <= 4; k++){
                if(i == 1 and j == 1)   dp[1][1][k] = 1;
                else dp[i][j][k] = (dp[i - 1][j][k] + dp[i][j - 1][k]) % p[k];
            }
        }
    }

    int t;
    cin>>t;
    while(t--)  solve();
    return 0;
}
