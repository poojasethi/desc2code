#include<iostream>
#include<fstream>
#include<vector>
#include<cstring>
#include<map>
#define in cin
#define out cout
using namespace std;
const int Nmax = 1001;
const int MOD1 = 734057;
const int MOD2 = 941911;
int d[2][Nmax][Nmax];
char s[Nmax+2];
map< pair<int,int>,vector< pair<int,int> > > M;
int main(){
    #ifndef ONLINE_JUDGE
    ifstream in("test.in");
    ofstream out("test.out");
    #endif
    d[0][0][1]=d[1][0][1]=1;
    for(int i=1;i<Nmax;i++){
        for(int j=1;j<Nmax;j++){
            d[0][i][j]=(d[0][i-1][j]+d[0][i][j-1])%MOD1;
            d[1][i][j]=(d[1][i-1][j]+d[1][i][j-1])%MOD2;
            M[make_pair(d[0][i][j],d[1][i][j])].push_back(make_pair(i,j));
        }
    }
    int T; in>>T; in.get();
    while(T--){
        in.getline(s+1,Nmax);
        int n=strlen(s+1);
        int m1=0,m2=0;
        for(int i=1;i<=n;i++){
            m1=(m1*10+(int(s[i])-'0'))%MOD1;
            m2=(m2*10+(int(s[i])-'0'))%MOD2;
        }
        int mn=M[make_pair(m1,m2)].size();
        if(mn==0) out<<"The Grid is Too Big!\n";
        else{
            out<<mn<<'\n';
            for(vector< pair<int,int> >::iterator it=M[make_pair(m1,m2)].begin();it!=M[make_pair(m1,m2)].end();++it){
                out<<it->first<<' '<<it->second<<'\n';
            }
        }
    }
    return 0;
}