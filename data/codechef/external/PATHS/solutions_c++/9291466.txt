#include <bits/stdc++.h>
#define INF 0x7fffffff
#define INFLL 1e17
#define PI 2*acos(0.0)
using namespace std;

#define FS first
#define SC second
#define PB(t) push_back(t)
#define ALL(t) t.begin(),t.end()
#define MP(x, y) make_pair((x), (y))
#define Fill(a,c) memset(&a, c, sizeof(a))

typedef pair<int, int> II;
typedef vector<int> VI;
typedef vector<II> VII;

const int TAM = 2005;

long long cmb[3][1005][1005];

long long powermod(long long num, int pot, int mod){
    if( pot==0 )
        return 1;
    if( pot==1 )
        return num;
    long long res = 1;

    while( pot ){
        if( pot&1 ){
            res = (res*num)%mod;
        }
        num = (num*num)%mod;
        pot>>=1;
    }

    return res;
}


int main( ){
#ifndef ONLINE_JUDGE
   //freopen("input.txt", "rt", stdin);
   //freopen("output.txt", "wt", stdout);
#endif
//    long long fact[3][TAM];
    int mod[3] = {1e9+7, 179425859, 105943};
//    fact[0][0]=fact[1][0]=fact[2][0]=1;
//    fact[0][1]=fact[1][1]=fact[2][1]=1;
//
//    for( long long i=2;i <TAM; i++){
//        fact[0][i] = (fact[0][i-1]*i)%mod[0];
//        fact[1][i] = (fact[1][i-1]*i)%mod[1];
//        fact[2][i] = (fact[2][i-1]*i)%mod[2];
//    }
    memset( cmb, 0, sizeof cmb);
    cmb[0][0][0] = 1;
    cmb[1][0][0] = 1;
    cmb[2][0][0] = 1;
    for( int i=0;i<=1001; i++){
        for( int j=0;j<=1001; j++){
            for( int k=0; k<3; k++){
                if( i>0 ){
                    cmb[k][i][j] += cmb[k][i-1][j];
                }
                if( j>0 ){
                    cmb[k][i][j] += cmb[k][i][j-1];
                }
                cmb[k][i][j] %= mod[k];
            }
        }
    }

    string m;
    long long num[3], cn[3];
    int n;
    for( cin>>n; n; --n){
        cin>>m;

        num[0]=num[1]=num[2] = 0;
        for( int i=0;i<m.size(); i++){
            for( int j=0; j<3; j++){
                num[j] = ( num[j]*10+(m[i]-'0') )%mod[j];
            }
        }

        long long n_1[3];
        bool isValid;
        VII res;
        for( int i=0; i<1000; i++) {
            for( int j=0; j<1000; j++) {
//                for( int k =0; k <3; k++){
//                    n_1[k] = powermod( (fact[k][i-1]*fact[k][j-1])%mod[k], mod[k]-2, mod[k]);
//                    cn[k] = (fact[k][i+j-2]*n_1[k])%mod[k];
//                    //cout<<i<<" , "<<j<<" : "<<cn[k]<<"\n";
//                }
                isValid = 1;
                for( int k =0; k <3; k++){
                    if( cmb[k][i][j]!=num[k] ){
                        isValid = 0;
                        break;
                    }
                }
                if( isValid ) {
                    res.PB( MP(i+1, j+1) );
                }
            }
        }
        if( res.size()==0 ){
            cout<<"The Grid is Too Big!\n";
            continue;
        }
        cout<<res.size()<<"\n";
        for( int i=0; i<res.size(); i++){
            cout<<res[i].FS<<" "<<res[i].SC<<"\n";
        }

    }
return 0;
}
