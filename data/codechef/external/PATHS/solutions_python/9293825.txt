#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define INF 99999999
#define N 1005
#define ll long long
#define llu unsigned long long 
#define MOD1 1000000007
#define MOD2 1000000009
#define gcd __gcd
#define fill(A,v) memset(A,v,sizeof(A))
#define all(x) (x).begin(), (x).end()
ll dp1[N][N],dp2[N][N];
pii p[N*N];
int main()
{
	int t,i,j,len,cnt;
	int n=1000,m=1000;
	char s[100001];
	dp1[n][m]=1;
	dp2[n][m]=1;
	for(i=n-1;i>=1;i--)
	{
     dp1[i][m]=dp1[i+1][m];
     dp2[i][m]=dp2[i+1][m];
	} 
	for(i=m-1;i>=1;i--)
	{
	 dp1[n][i]=dp1[n][i+1];
	 dp2[n][i]=dp2[n][i+1];
	}	 
	for(i=n-1;i>=1;i--)
	{
		for(j=m-1;j>=1;j--)
		{
	      dp1[i][j]=(dp1[i+1][j]+dp1[i][j+1])%MOD1;
	      dp2[i][j]=(dp2[i+1][j]+dp2[i][j+1])%MOD2;
	     }
	}
	scanf("%d",&t);
	while(t--)
	{
		len=0;
		cnt=0;
		scanf("%s",s);
		ll val1=0;
		ll val2=0;
		for(i=0;i<strlen(s);i++)
		{
			val1=(val1*10+s[i]-48)%MOD1;
			val2=(val2*10+s[i]-48)%MOD2;
		}
		for(i=n;i>=1;i--)
		{
			for(j=m;j>=1;j--)
			{
				if(dp1[i][j]==val1&&dp2[i][j]==val2)
				{
					cnt++;
					p[len++]=mp(n-i+1,m-j+1);
				}
			}
		}
		if(cnt==0)
		  printf("The Grid is Too Big!\n");
		else
		{
		printf("%d\n",cnt);
		for(i=0;i<len;i++)
		{
			printf("%d %d\n",p[i].ff,p[i].ss);
		}
		}
	}
	return 0;
}	