//==================================================================//
// Name        : flash7even                                         //
// Author      : Tarango Khan                                       //
// Codeforces  : flash_7                                            //
// Topcoder    : flash_7                                            //
// Hackerrank  : flash_7                                            //
// Email       : tarangokhan77@gmail.com                            //
// Facebook    : tarango.khan                                       //
//==================================================================//

//==================================================================//
#include <bits/stdc++.h>                                            //
using namespace std;                                                //
#define FOR(s,e)        for(int i=s;i<=e;i++)                       //
#define pb              push_back                                   //
#define ppb             pop_back                                    //
#define mp              make_pair                                   //
#define F               first                                       //
#define S               second                                      //
#define eps             1e-9                                        //
#define FABS(x)         ((x)+eps<0?-(x):(x))                        //
#define Set(x,p)        (x|(1<<p))                                  //
#define Reset(x,p)      (x & ~(1<<p))                               //
#define Check(x,p)      (x&(1<<p))                                  //
#define pf              printf                                      //
#define sf              scanf                                       //
#define pi              acos(-1.0)                                  //
#define mems(x,v)       memset(x,v,sizeof(x))                       //
#define SZ(x)           ((int)(x).size())                           //
#define fills(v,n)      fill(v.begin(), v.end(), n)                 //
#define vsort(v)        sort(v.begin(),v.end())                     //
#define asort(v,n)  	sort(a,a+n)                                 //
#define LL              long long                                   //
#define LLU             long long unsigned int                      //
//==================================================================//

//==================================================================//
bool equalTo(double a, double b) {                                  //
    if (fabs(a - b) <= eps) return true;return false;}              //
bool notEqual(double a, double b) {                                 //
    if (fabs(a - b) > eps) return true;return false;}               //
bool lessThan(double a, double b) {                                 //
    if (a + eps < b) return true;return false;}                     //
bool lessThanEqual(double a, double b) {                            //
    if (a < b + eps) return true;return false;}                     //
bool greaterThan(double a, double b) {                              //
    if (a > b + eps) return true;return false;}                     //
bool greaterThanEqual(double a, double b) {                         //
    if (a + eps > b) return true;return false;}                     //
LL GCD(LL a,LL b){ if(b == 0) return a; return GCD(b,a%b);}         //
LL LCM(LL a,LL b){ return a*b/GCD(a,b);}                            //
LL POW(LL a,LL p){ LL res = 1,x = a;while(p){if(p&1)                //
    res = (res*x); x = (x*x);p >>= 1;} return res;}                 //
//==================================================================//

//==================================================================//
//int knightDir[8][2] = {{-2,1},{-1,2},{1,2},{2,1},                 //
//                      {2,-1},{-1,-2},{1,-2},{-2,-1}};             //
//int dir8[4][2] = {{-1,0},{0,1},{1,0},{0,-1},                      //
//                 {-1,-1},{1,1},{1,-1},{-1,1}};                    //
//int dir4[4][2] = {{-1,0},{0,1},{1,0},{0,-1}};                     //
                                                                    //
//=======// Done With The Shortcut Stuffs! Now Let's Code! //=======//

#define Size 30005
#define Max 100005
#define INF (1<<30)
#define Mod 1000000007

int cum[200005][27];
int cnt[26];
char s[200005];
int N,Q,L,R;

int solve(){
	//pf("Check for L: %d , R: %d\n",L,R);
	mems(cnt,0);
	for(int  i= 0;i<26;i++){
		cnt[i] = cum[R][i]-cum[L-1][i];
		//pf("R: %d , L: %d\n",cum[R][i],cum[L-1][i]);
	}
	bool odd = false;
	int res = 0;
	for(int i = 0;i<26;i++){
		if(cnt[i] != 0 && cnt[i]%2 != 0){
			odd = true;
			res += (cnt[i]-1);
		}else{
			res += cnt[i];
		}
	}
	if(odd == true) res++;
	return res;
}

int main(){
	sf("%s %d",s,&Q);
	N = strlen(s);
	mems(cum,0);
	for(int i = 0;i<N;i++){
		int dgt = (int)(s[i]-'a');
		for(int c = 0;c<26;c++){
			cum[i+1][c] = cum[i][c];
		}
		cum[i+1][dgt]++;
	}
	for(int i = 0;i<Q;i++){
		sf("%d %d",&L,&R);
		//L++;R++;
		int res = solve();
		pf("%d\n",res);
	}
}
