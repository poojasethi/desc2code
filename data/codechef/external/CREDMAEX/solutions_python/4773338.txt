///*
#include <iostream>
#include <sstream>
#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <cmath>

#include <string>
#include <vector>
#include <map>

typedef long long LL;

//*/
//#include <bits/stdc++.h>

using namespace std;

#define MP make_pair
#define PB push_back
#define FOR(i,n) for (int i = 0; i < n; i++)

map< pair<bool,bool>, int> m;

int prev_pow(int n)
{
	int p;
	
	p = 1; while (p <= n) p <<= 1; p >>= 1;
	//cout<<"p = "<<p<<endl;
	if(n==p)
		p>>=1;
	return p;
}

void cal1()
{
	LL elt;
	cin>>elt;
	int mu[4];
	cin>>mu[0]>>mu[1]>>mu[2]>>mu[3];
	int X,Y;
	cin>>X>>Y;
	LL ans=elt;
	
	if(X==1&&Y==1)
	{
		cout<<ans<<endl;
		return;
	}
	int num=prev_pow(max(X,Y));
	
	while(num!=0)
	{
		//cout<<"X = "<<X<<"Y = "<<Y<<endl;
		
		ans*=mu[m.find(MP(X>num, Y>num))->second];
		
		//cout<<"ans= "<<ans<<endl;
		
		X=(X>num?X-num:X);
		Y=(Y>num?Y-num:Y);	
		
		num/=2;
		
		//cout<<"looping"<<endl;
	}
	//cout<<"ans = "<<ans<<endl;
	cout<<ans<<endl;
}


int main(int argc, char **argv)
{
	int T;
	cin>>T;
	
	m.insert(MP(MP(false,false),0));
	m.insert(MP(MP(false,true),1));//0,1 means X<=4,Y>=4 for 8*8 matrix	
	m.insert(MP(MP(true,false),2));
	m.insert(MP(MP(true,true),3));
	
	for(int i=0; i<T; i++)
	{
		cal1();
		
	}
	

	return 0;
}

