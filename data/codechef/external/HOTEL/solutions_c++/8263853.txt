#include <iostream>
#include <cmath>
#include <string.h>
#include <stack>
#include <set>
#include <vector>
#include <algorithm>
using namespace std;

struct stay
{
	int arrive;
	int depart;
};

bool compare(stay a, stay b)
{
	return (a.depart < b.depart);
}

int main()
{
	int t;
	int n;
	cin >> t;
	int i,j;
	while(t--)
	{
		cin >> n;
		struct stay arr[n];
		for (i=0;i<n;i++)
		{
			cin >> arr[i].arrive;
		}
		for (i=0;i<n;i++)
		{
			cin >> arr[i].depart;
		}

		int max_guests = 1;
		int maximum;
		for (i=0;i<n;i++)
		{
			int point = arr[i].depart;
			maximum = 1;
			for (j=0;j<n;j++)
			{
				if (j!=i && arr[j].arrive < point && arr[j].depart >= point)
					maximum++;
			}
			if (maximum > max_guests)
				max_guests = maximum;
		}
		cout << max_guests << endl;
		//sort(arr, arr+n, compare);
		/*for (i=0;i<n;i++)
		{
			cout << arr[i].arrive <<  " - " << arr[i].depart << endl;
		}*/

		/*int max_guests = 1;
		int maximum;
		bool taken[n];

		for (i=0;i<n;i++)
		{
			maximum = 1;
			for (int k=0;k<n;k++)
				taken[k] = 0;
			taken[arr[i].depart] = 1;
			cout << "I:" << i << endl;
			for (j=0;j<n;j++)
			{
				if (j!=i && arr[j].arrive >= arr[i].arrive && arr[j].arrive < arr[i].depart && !taken[arr[j].arrive])
				{
					maximum++;
					taken[arr[j].depart] = 1;
					cout << j << " ";	
				}
			}
			cout << endl << "MAX:" << maximum << endl;
			if (maximum > max_guests)
				max_guests = maximum;
		}
		cout << max_guests << endl;*/
	}
	return 0;
}