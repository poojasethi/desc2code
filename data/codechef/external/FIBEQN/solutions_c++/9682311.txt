#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(2e1+4)
ll temp[3][3],a[3][3],b[3][3];
ll mod=1e9+7;
void mul(long long a[3][3], long long b[3][3], long long c[3][3])
{
    mem(temp,0);
	for (int i = 0; i < 3; ++i)
		for (int j = 0; j < 3; ++j)
			for (int k = 0; k < 3; ++k)
				temp[i][j] = (temp[i][j] + a[i][k] * b[k][j] ) % mod;
	for (int i = 0; i < 3; ++i)
		for (int j = 0; j < 3; ++j)
			c[i][j] = temp[i][j];
}
void pwr(long long a[3][3], long long n, long long b[3][3])
{
	for (int i = 0; i < 3; ++i)
		for (int j = 0; j < 3; ++j)
			b[i][j] = (i == j);
	while (n)
	{
		if (n & 1)
			mul(b, a, b);
		n >>= 1;
		mul(a, a, a);
	}
}
int func(long long n, long long k)
{
	k %= mod;
	if (n == 1)
		return k;
	long long ks = k * k % mod;
	mem(a,0);
	a[0][0] = a[2][0] = k;
	a[0][1] = a[2][1] = ks;
	a[1][0] = 1;
	a[2][2] = 1;
	pwr(a, n - 1, b);
	return (b[2][0] + b[2][2]) * k % mod;
}
void solve(){
    ll n,k;
    cin>>n>>k;
    cout<<func(n,k)<<endl;
}
int main(){
   //ios_base::sync_with_stdio(false);
   int t=1;
   cin>>t;
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
