#include<bits/stdc++.h>
#define ll long long
#define fi first
#define se second
ll mpow(ll a, ll n,ll mod)
{ll ret=1;ll b=a;while(n) {if(n&1)
    ret=(ret*b)%mod;b=(b*b)%mod;n>>=1;}
return (ll)ret;
}
using namespace std;
#define mem(x,a) memset(x,a,sizeof(x))
#define pii pair<int,int>
#define mp make_pair
#define pb push_back
#define all(v) v.begin(),v.end()
using namespace std;
#define N (int)(2e1+4)
#define matrix vector<vector<ll> >
ll MOD=1e9+7;
matrix mult(matrix A,matrix B){
    matrix C(3,vector<ll>(3));
    for(int i=0;i<3;i++){
        for(int j=0;j<3;j++){
            for(int k=0;k<3;k++){
                C[i][j]=(C[i][j]+(A[i][k]*B[k][j])%MOD)%MOD;
            }
        }
    }
    return C;
}
matrix pwr(matrix &T,ll n){
    if(n==1)
        return T;
    if(n&1)
        return mult(T,pwr(T,n-1));
    matrix X=pwr(T,n/2);
    return mult(X,X);
}
void solve(){
    ll n,k;
    cin>>n>>k;
    k%=MOD;
    if(n==1){
        cout<<k<<endl;
        return;
    }
    ll K=(k*k)%MOD;
    matrix T(3,vector<ll>(3));
    T[0][0]=k;
    T[0][1]=K;
    T[0][2]=0;
    T[1][0]=1;
    T[1][1]=0;
    T[1][2]=0;
    T[2][0]=k;
    T[2][1]=K;
    T[2][2]=1;
    vector<ll> res(3);
    res[0]=k;
    res[1]=0;
    res[2]=k;
    T=pwr(T,n-1);
    ll ans=((T[2][0]*res[0])%MOD+(T[2][1]*res[1])%MOD+(T[2][2]*res[2])%MOD)%MOD;
    cout<<ans<<endl;
}
int main(){
   //ios_base::sync_with_stdio(false);
   int t=1;
   cin>>t;
   for(int i=1;i<=t;i++){
       //printf("Case #%d: ",i);
       solve();
   }
   return 0;
}
