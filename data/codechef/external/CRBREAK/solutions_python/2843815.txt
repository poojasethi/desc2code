// Sharad Gupta 
// IIIT - Hyderabad
#include<iostream>
#include<sstream>
#include<cstdio>
#include<climits>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>
#include<string>
#include<deque>
#include<bitset>
#include<map>
#include<set>
#include<stack>
#include<list>
#include<vector>
#include<queue>

using namespace std;

#define VI vector < int >
#define VVI(A,N,M) vector< VI > A( N, VI (M) )
#define LL long long
#define LLU unsigned long long
#define SI ({int x;scanf("%d",&x);x;})
#define SC ({char x;scanf("%c",&x);x;})
#define PI acos(-1)
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define SORT(c) sort(ALL(c))
#define FIT(it,v) for (typeof(v.begin()) it = v.begin(); it != v.end(); it++)
#define FITD(it,v) for (typeof(v.rbegin()) it = v.rbegin(); it != v.rend(); it++)
#define FOR(i,start,end) for(int i=start;i<end;i++)
#define IATOV(a) ({vector<int> v(a,a+sizeof(a)/sizeof(int));v;})
#define CATOV(a) ({vector<char> v(a,a+sizeof(a)/sizeof(char));v;})
#define sieve(a) ({int b=ceil(sqrt(a));VI d(a,0);VI e;int f=2;e.pb(2);e.pb(3);for(int x=1;x<b+1;x++){for(int y=1;y<b+1;y++){int n=(4*x*x)+(y*y);if(n<=a&&(n%12==1||n%12==5)){d[n]^=1;}n=(3*x*x)+(y*y);if(n<=a&&n%12==7){d[n]^=1;}n=(3*x*x)-(y*y);if(x>y&&n<=a&&n%12==11){d[n]^=1;}}}for(int r=5;r<b+1;r++){if(d[r]){for(int i=r*r;i<a;i+=(r*r)){d[i]=0;}}}for(int c=5;c<a;c++){if(d[c]){e.pb(c);}}e;})
#define INF 1000000007
#define EPS 1e-9
#define mt(x, y, z) mp(mp(x,y),z)
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define setbits(x) __builtin_popcount(x) //tell number of 1's in binary form
#define GC getchar_unlocked
template <class T> string str(T Number){

			string Result; // string which will contain the result

						ostringstream convert; // stream used for the conversion

										convert << Number; // insert the textual representation of 'Number' in the characters in the stream

															Result = convert.str();
																					return Result;
}
int StringToNumber ( const string &Text )
{
			istringstream ss(Text);
						int result;
										return ss >> result ? result : 0;
}
template<class T> inline vector<pair<T,int> > FACTORISE(T n){vector<pair<T,int> >R;for (T i=2;n>1;){if (n%i==0){int C=0;for (;n%i==0;C++,n/=i);R.push_back(make_pair(i,C));}i++;if (i>n/i) i=n;}if (n>1) R.push_back(make_pair(n,1));return R;}
template<class T> inline T TOTIENT(T n) {vector<pair<T,int> > R=FACTORISE(n);T r=n;for (int i=0;i<R.size();i++)r=r/R[i].first*(R[i].first-1);return r;}
double rnd(float d) //for rounding values
{
			return floor(d + 0.49);
}
template<class T>inline T input(T x){char c=GC();x=0;T s=1;while(c<48||c>57){if(c=='-')s=-1;c=GC();}while(c>=48&&c<=57){x=(x<<3)+(x<<1)+c-48;c=GC();}return x*s;}
LL power(LL a, LL b,LL mod){LL ret=1;while(b>0){   if(b&1)ret = (ret*a)%mod;a=(a*a)%mod;b/=2;}   	return ret%mod;}
map<int,int> c;
int main()
{
	int t=input(t);
	while(t--)
	{
		c.clear();
		int n=input(n);
		vector<int> a(n),d(n);
		int sum=0;
		FOR(i,0,n){a[i]=input(a[i]);sum+=a[i];}
		if(sum%2!=0)
			cout<<0<<endl;
		else
		{
			LL ways=0;
			int s=0;
			sum/=2;
			FOR(i,0,n) {
				s += a[i];
				ways += c[s];
				c[s+sum]++;
			}
			cout<<ways<<endl;
		}


	}
	return 0;
}
