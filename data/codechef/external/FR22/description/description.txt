An ideal string of length N is a string where the 1-based index of the first occurrence of each letter,
is equal to the number of occurrences of that letter in the string.
For example, the string "BAOOOA"(inverted commas for clarity purpose only) is an ideal string.
The letter 'B' appears 1 time, and its index is 1.
The letter 'A' occurs 2 times and its first index is 2. The letter 'O' occurs 3 times and its first index is 3.
String A is lexicographically smaller than string B of the same length
if it contains a smaller letter at the first position they differ. 
Letter X is smaller than letter Y if it comes earlier in the alphabet.

Input
The first line of input will consist of the number of test cases 't' (1<= t <=20) followed by t test cases.
Each test case will contain an integer N(1<=N<=100) corresponding to the length of the smallest ideal string .

Output
Output contains the lexicographically smallest ideal string of the length N containing only uppercase letters ('A'-'Z').
If there are no such ideal strings of length N, return an empty String instead.

Examples


Input
5
1
3
2
6
7

OutPut:
A
ABB

ABCBCC
ABBCCCC


For the third test case there's no way we can construct an ideal string of length 2 - if both its characters are equal, 
then the number of occurrences (2) and the position of its first occurrence (1) do not match; if they are distinct,
then for the second character the number of occurrences (1) and the position of its first occurrence (2) do not match as
well.

For the fourth test case we can permute the last 3 characters in any way, 
but this way gets us the lexicographically smallest answer.
