t=int(raw_input())
for i in range(t):
    
    c=raw_input()
    k=int(raw_input())
    c=c.split()
    for char in range(len(c)):
        c[char]=int(c[char])
    c=sorted(c)
    maximum_score=sum(c[-k:])
    no_ways=0
    def combinations(iterable, r):
        # combinations('ABCD', 2) --> AB AC AD BC BD CD
        # combinations(range(4), 3) --> 012 013 023 123
        pool = tuple(iterable)
        n = len(pool)
        if r > n:
            return
        indices = range(r)
        yield tuple(pool[i] for i in indices)
        while True:
            for i in range(r)[::-1]:
                if indices[i] != i + n - r:
                    break
            else:
                return
            indices[i] += 1
            for j in range(i+1, r):
                indices[j] = indices[j-1] + 1
            yield tuple(pool[i] for i in indices)
    cp=combinations([0,1,2,3,4,5,6,7,8,9,10],k)
    
    for combo in cp:
        sum1=0
        for d in combo:
            sum1+=c[d]
        if sum1==maximum_score:
            no_ways+=1
            
    print no_ways