def factorial(n):
	if n <= 1: 
		return 1
	else:
		result = 1
		for i in range(2, n+1):
			result *= i
	return result

''' slow code
def maxScore(scores, K):
	scores.sort(reverse=True)
	count = 0
	maximum = scores[0]
	for i in range(K):
		if scores[i] == maximum:
			count += 1
		else:
			count = 1
			maximum = scores[i]
	#print count
	extraCount = 0
	for i in scores[K:]:
		if i == maximum:
			extraCount += 1
	#print extraCount
	 
	return factorial(extraCount+count)/(factorial(extraCount)*factorial(count))
'''
def maxScore(scores, K):
	scores.sort(reverse=True)
	last = scores[K-1]
	bcount = 1
	acount = 0
	for i in range(K-2, -1, -1):
		if last == scores[i]:
			bcount += 1
		else:
			break
	for i in range(K, len(scores)):
		if last == scores[i]:
			acount += 1
		else:
			break
	return factorial(acount + bcount)/(factorial(acount)*factorial(bcount))

T = int(raw_input())
for _ in range(T):
	scores = map(int, raw_input().split())
	K = int(raw_input())
	print maxScore(scores, K)