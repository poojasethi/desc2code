#!/usr/bin/env python
#-*- coding:utf-8 -*-

import operator


def count_occurences(lst):
    d = {}
    for v in lst:
        d.setdefault(v, 0)
        d[v] += 1
    return d


def nCk(n, k):
    if k == 0 or k == n:
        return 1
    if k < 0 or k > n:
        return 0

    if k > n / 2:
        k = n - k

    low = range(1, k + 1)
    high = range(n - k + 1, n + 1)
    low = reduce(operator.mul, low)
    high = reduce(operator.mul, high)
    assert high % low == 0
    return high / low


t = int(raw_input())
for _ in range(t):
    scores = map(int, raw_input().split())
    k = int(raw_input())

    scores.sort()

    res = 1
    count_k = count_occurences(scores[-k:])
    count_n = count_occurences(scores)
    for val, k in count_k.items():
        n = count_n[val]
        res *= nCk(n, k)
    print res
