#!/usr/bin/env python
import sys

def toBits(val, digits):
    retA = map(int, bin(val)[2:])
    ret = [0] * (digits - len(retA))
    ret.extend(retA)
    return ret


def solve(scores, K):
    maxVal = 0
    maxCnt = 0

    for i in xrange(2 ** K - 1, 2 ** len(scores)):
        bits = toBits(i, len(scores))
        if sum(bits) != K:
            continue

        curVal = 0

        for j in xrange(len(scores)):
            if bits[j] == 1:
                curVal += scores[j]

        if curVal > maxVal:
            maxVal = curVal
            maxCnt = 1
        elif curVal == maxVal:
            maxCnt += 1

    return maxCnt

if __name__ == '__main__':
    T = int(sys.stdin.readline().strip())
    for t in xrange(T):
        scores = map(int, sys.stdin.readline().strip().split())
        K = int(sys.stdin.readline().strip())
        print solve(scores, K)
