#include <cstdio>
#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <bitset>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <map>
#include <set>

using namespace std;
typedef long long ll;

#define INF 1000000009
#define EPS 1e-9

const int MAXN = 100005;
const int MAXP = 11;

int t, a[MAXP], k;

int C(int n, int x)
{
    int nFact = 1;
    for(int i = 2; i <= n; i++)
        nFact *= i;

    int xFact = 1;
    for(int i = 2; i <= x; i++)
        xFact *= i;

    int nmxFact = 1;
    for(int i = 2; i <= n - x; i++)
        nmxFact *= i;

    return (nFact)/(nmxFact * xFact);
}

int main()
{
    scanf("%d", &t);

    while(t--)
    {
        for(int i = 0; i < MAXP; i++)
        {
            scanf("%d", &a[i]);
        }

        sort(a, a + MAXP);
        reverse(a, a + MAXP);

#if DEBUG
        for(int i = 0; i < MAXP; i++)
        {
            printf("%d\n", a[i]);
        }
#endif
        scanf("%d", &k);

        int left = 0;
        int right = 0;
        int curr = k - 1;

        while(curr >= 0 && a[curr - 1] == a[curr])
        {
            curr--;
            left++;
        }

        curr = k - 1;
        while(curr < MAXP - 1 && a[curr] == a[curr + 1])
        {
            curr++;
            right++;
        }
#if DEBUG
        printf("left %d, right %d\n", left, right);
#endif

        // Get C(n, x)
        int n = left + right + 1;
        int x = left + 1;

        printf("%d\n", C(n, x));
    }

    return 0;
}
