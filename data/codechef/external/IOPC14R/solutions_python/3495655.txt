    #include <bits/stdc++.h>
     
    using namespace std;
     
    int main (){
    int t, L, K;
    char str[1000002];
    std::vector<int> v;
     
    scanf("%d",&t);
    while(t--){
    v.clear();
    scanf("%s %d %d",str,&K,&L);
    int l = strlen(str), ct=1;
    for(int i=1;i<=l;++i)
    {
    if(str[i]==str[i-1]) ct++;
    else{
    v.push_back(ct);
    ct=1;
    }
    }
    sort(v.begin(), v.end(), greater<int>());
    l = v.size();
    int ans = 0, an;
    for(int i=0;i<l;++i)
    {
    ans += min(v[i],K);
    v[i]-=K;
    }
    if(ans>=L){
    printf("%d\n",L);
    continue;
    }
    an = ans;
    for(int i=0;i<l;++i){
    int need = L-an;
    if(need<=0 || v[i]<=0) break;
    if(v[i]>=need){
    ans += need + (need+K-1)/K;
    an += need;
    v[i] -= need;
    }
    else{
    int q = v[i]/K;
    if(q!=0){
    ans += q*(K+1);
    an += q*K;
    v[i] -= q*K;
    }
    }
    }
    if(an >= L){
    printf("%d\n",ans);
    continue;
    }
    sort(v.begin(), v.end(), greater<int>());
    for(int i=0;i<l;++i)
    {
    if(v[i]<=0) break;
    int need = L-an;
    if(need<=0) break;
    if(v[i]>=need){
    ans += need + 1,
    an += need;
    v[i] -= need;
    }
    else{
    ans += v[i] + 1,
    an += v[i];
    v[i] -= v[i];
    }
    }
    if(an >= L){
    printf("%d\n",ans);
    continue ;
    }
    //printf("%d\n",2*L-1);
    }
    return 0;
    } 