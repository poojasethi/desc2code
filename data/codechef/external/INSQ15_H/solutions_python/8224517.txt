#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mod 1000000007
#define test int t;scanf("%d", &t);while(t--)
#define maxr 3005
#define maxc 1000000000
int dp[maxr][maxr];
bool marked[maxr][maxr]={0};
set<int> sx, sy;
map<int,int> mpx, mpy;
int bs(int l, int r, int key, int x, int y)
{
    int m;
    while( r - l > 1 )
    {
        m = l + (r - l)/2;
        int x1=max(1,x-m), y1=min(maxc,y+m);
        int x2=min(maxc,x+m), y2=min(maxc,y+m);
        int x3=min(maxc,x+m), y3=max(1,y-m);
        int x4=max(1,x-m), y4=max(1,y-m);
        set<int>::iterator itx=sx.upper_bound(x2);
        set<int>::iterator ity=sy.upper_bound(y2);
        itx--;ity--;
        int ans = dp[mpx[*itx]][mpy[*ity]];
        //printf("%d ", ans);
        itx=sx.upper_bound(x1-1);ity=sy.upper_bound(y1);
        itx--;ity--;
        ans -= dp[mpx[*itx]][mpy[*ity]];
        //printf("%d ", ans);
        itx=sx.upper_bound(x3);ity=sy.upper_bound(y3-1);
        itx--;ity--;
        ans -= dp[mpx[*itx]][mpy[*ity]];
        //printf("%d ", ans);
        itx=sx.upper_bound(x4-1);ity=sy.upper_bound(y4-1);
        itx--;ity--;
        ans += dp[mpx[*itx]][mpy[*ity]];
        //printf("%d\n", ans);
        if( ans < key )l = m;
        else r = m;
    }
    return r;
}
int main()
{
    int n;
    scanf("%d", &n);
    sx.insert(0);sy.insert(0);
    sx.insert(maxc);sy.insert(maxc);
    pair<int,int> a[maxr];
    for(int i=0;i<n;i++)
    {
        scanf("%d%d", &a[i].first, &a[i].second);
        sx.insert(a[i].first);
        sy.insert(a[i].second);
    }
    int count=0;
    for(set<int>::iterator it=sx.begin();it!=sx.end();it++,count++)
        mpx[*it]=count;
    count=0;
    for(set<int>::iterator it=sy.begin();it!=sy.end();it++,count++)
        mpy[*it]=count;
    for(int i=0;i<n;i++)marked[mpx[a[i].first]][mpy[a[i].second]]=1;
    for(int i=0;i<maxr;i++)dp[i][0]=dp[0][i]=0;
    for(int i=1;i<maxr;i++)
    {
        for(int j=1;j<=i;j++)
        {
            dp[i][j]=dp[i-1][j]+dp[i][j-1]-dp[i-1][j-1];
            if(marked[i][j])dp[i][j]++;
            dp[j][i]=dp[j-1][i]+dp[j][i-1]-dp[j-1][i-1];
            if(marked[j][i])dp[j][i]++;
        }
    }
    int q;
    scanf("%d", &q);
    while(q--)
    {
        int x, y, k;
        scanf("%d%d%d", &x, &y, &k);
        if(k>n){printf("-1\n");continue;}
        if(k==0){printf("0\n");continue;}
        if(k==1)
        {
            if(mpx.find(x)!=mpx.end() && mpy.find(y)!=mpy.end())
            {
                if(marked[mpx[x]][mpy[y]])
                {
                    printf("0\n");
                    continue;
                }
            }
        }
        printf("%d\n", bs(0,maxc,k,x,y));
    }
    return 0;
}
