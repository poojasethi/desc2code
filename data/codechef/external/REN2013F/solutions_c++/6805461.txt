#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz(x) (int)(x.size())
#define all(a) a.begin(), a.end()
#define INF numeric_limits<long long>::max()
#define oo  numeric_limits<int> :: max()
#define CLR(s) memset(s, false, sizeof(s))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define DBG(s) cerr << #s << "  == > " << s << endl
typedef long long lld;
typedef vector <int> vi;
typedef pair< int, int > pii;
typedef vector <pii> vpii;

int have[4];
int C[4];
int cost[4];
lld money;
int F(lld crow)
{
	lld needa = crow * C[0];
	lld needb = crow * C[1];
	lld needc = crow * C[2];
	if(C[0] != 0)
	needa -= have[0];
    if(C[1] != 0)
	needb -= have[1];
	if(C[2] != 0)
	needc -= have[2];
    lld g = (needa*cost[0] + needb*cost[1] + needc*cost[2]);  
	if(g <= money) return 1;
	return 0;
}

lld BS()
{
	lld lo, hi, mid;
	lo = 0; hi = 1LL<<48;
	while( (hi - lo) > 1)
	{
		mid = (hi+lo)>>1;
		if(F(mid))
		 lo = mid;
		else
		 hi = mid;
	}
	return lo;
}

int main()
{
	cin >> C[0] >> C[1] >> C[2];
	cin >>have[0] >>have[1]>>have[2];
	cin >> cost[0] >>cost[1]>>cost[2];
	cin >> money;
	lld ans;
	if(money == 0) ans = 0;
	else  ans = BS();
	cout << ans << endl;
	return 0;
}
