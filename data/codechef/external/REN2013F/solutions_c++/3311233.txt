///with the help of shaswat's solution
#include <iostream>
using namespace std;
#define LL long long
#define INF 1<<28
int setup[3],price[3],now[3];
LL obtain;
bool check(LL number)
{
        LL sum=0;
        for(int i=0; i<3; i++)
                if(number*setup[i]-now[i]>=0) {
                        sum=sum+(number*setup[i]-now[i])*price[i];
                }
        return sum<=obtain;;
}
int main()
{

        for(int i=0; i<3; i++)cin>>setup[i];
        for(int i=0; i<3; i++)cin>>now[i];
        for(int i=0; i<3; i++)cin>>price[i];
        cin>>obtain;
        LL low_number=0,high_number=2000000000000LL;
        while(low_number<high_number) {
                LL mid=(low_number+high_number)>>1;
                bool get=check(mid);
                if(check(mid)&&!check(mid+1)) {
                        cout<<mid<<endl;
                        return 0;
                }
                if(get) {
                        low_number=mid;
                } else {
                        high_number=mid;
                }
        }
        cout<<low_number<<endl;
        return 0;
}
