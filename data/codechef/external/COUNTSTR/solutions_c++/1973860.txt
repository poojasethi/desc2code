#include <cstdio>
#include <cstring>
#include <iostream>
#include <map>
#include <vector>
#include <set>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
 
using namespace std;
#define ll long long int
#define ull unsigned ll
#define MAX(a, b) ((a)>(b)?(a):(b))
#define MIN(a, b) ((a)>(b)?(b):(a))
#define FOR(i, a, b) for ((i) = (a); (i) <= (b); (i)++)
#define FORD(i, a, b) for ((i) = (a); (i) >= (b); (i)--)
#define FILL(a, c) memset (a, (c), sizeof (a))
#define FLOOR(a) (int)(a)
#define CIEL(a) ((int)(a) == (a))?(a):((int)(a) + 1)
#define NL printf ("\n")
#define INF (int)1e9
#define EPS 1e-9
#define MOD 1000000007
#define L 101

int main () {
	int n, m, i, j, k;
	scanf ("%d %d", &n, &m);
	int a[n][m], dp[n][m];
	FOR(i, 0, n-1)
		FOR(j, 0, m-1) {
			scanf ("%d", &a[i][j]);
			dp[i][j] = 0;
		}
	FOR(i, 0, n-1) {
		FOR(j, 0, m-1) {
			if (i-1 >= 0)
				dp[i][j] += dp[i-1][j];
			if (j-1 >= 0)
				dp[i][j] += dp[i][j-1];
			if (i-1 >= 0 && j-1 >= 0)
				dp[i][j] -= dp[i-1][j-1];
			dp[i][j] += a[i][j];
		}
	}
	int q;
	scanf ("%d", &q);
	while (q--) {
		int px, py, qx, qy, ans = 0;
		scanf ("%d %d %d %d", &px, &py, &qx, &qy);
		px--;py--;qx--;qy--;
		if (px-1 >= 0)
			ans += dp[px-1][qy];
		if (py-1 >= 0)
			ans += dp[qx][py-1];
		if (px-1 >= 0 && py-1 >= 0)
			ans -= dp[px-1][py-1];
		printf ("%d\n", dp[qx][qy] - ans);
	}
	return 0;
}