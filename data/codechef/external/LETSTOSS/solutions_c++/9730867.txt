//Author : Sharath Chandran
//Handle : sharad07

#include<bits/stdc++.h>
#define lld long long int
#define llu unsigned long long int
#define pb(x) push_back(x)
#define sz size()
#define inp1(x) scanf("%d",&x)
#define inp2(x,y) scanf("%d%d",&x,&y)
#define inp3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define print(x) printf("%d",x)
#define println(x) printf("%d\n",x)
#define _for(i,x,y) for(lld i=x;i<y;i++)
#define pii pair<int,int>
#define mp(x,y) make_pair(x,y)
#define pq priority_queue<int> 
using namespace std;
const int maxx=1e7+3;
lld mod=1e9+7;
bool isprime[maxx];
vector<lld> prime;
lld ans=0,lmt;
    
void calc()
{
    isprime[0]=isprime[1]=1;
    _for(i,2,maxx)
    {
        if(!isprime[i])
        {
            prime.pb(i);
            for(int j=2;i*j<maxx;j++) isprime[i*j]=1;
        }
    }
}


int main()
{
    lld l,r,n,p,idx;
    
    cin>>l>>r;
    n=r-l+1;
    calc();
    lmt=prime.sz; 
    lld odd[n+1],even[n+1];
    lld val[n+1];
    _for(i,0,n+1)
    {
        odd[i]=even[i]=0;
        val[i]=i+l;
    }
    
    _for(i,0,lmt)
    {
        idx=l/prime[i];
        idx=idx*prime[i];
        if(idx<l) idx+=prime[i];
        while(idx<=r)
        {
            p=0;
            while(val[idx-l]%prime[i]==0)
            {
                val[idx-l]/=prime[i];
                p++;
            }
            if(p&1) odd[idx-l]++;
            else if(p>0) even[idx-l]++;
            idx+=prime[i];
        }
    }
    _for(i,0,n) 
    {
        if(val[i]>1) odd[i]++;
        if(odd[i]>even[i]) ans++;
    }
    cout<<ans<<endl;
    return 0;
}