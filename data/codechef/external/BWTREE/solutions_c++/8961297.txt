#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
#include <iomanip>
#include <list>
#include <bitset>
#define ff first
#define ss second
#define mod 1000000007
#define SET(a) memset(a,-1,sizeof(a))
#define CLEAR(a) memset(a,0,sizeof(a))
#define mp(a,b) make_pair(a,b)
#define pb(a) push_back(a)
using namespace std;
typedef long long LL;
typedef pair< int , int > pii;
typedef pair< LL, LL> pll;
typedef vector< LL >vll;
typedef vector< int > vi;
template<class T>T gcd(T a,T b){return (b==0)?a:gcd(b,a%b);}
template<class T>T lcm(T a,T b){return (a*b)/gcd(a,b);}
template<class T>T powmod(T a,T b) {T res=1;if(a>=mod)a%=mod;for(;b;b>>=1){if(b&1)res=res*a;if(res>=mod)res%=mod;a=a*a;if(a>=mod)a%=mod;}return res;}

int n,vis[100005],col[100005];
LL dp[100005][2];
vi v[100005];
void dfs(int x)
{
	LL ans1=0,ans2=0;
	int ct=0;
	for(int i=0;i<v[x].size();i++)
	{
		if(col[x]!=col[v[x][i]])
		{
			
			dfs(v[x][i]);
			ans1+=(dp[v[x][i]][1]%mod);
			ans1=ans1%mod;
			
		}
		else if(col[x]==col[v[x][i]])
		{
		
			dfs(v[x][i]);
	      }
	  }
	  LL k=ans1;
	  for(int i=0;i<v[x].size();i++)
	{
		if(col[x]!=col[v[x][i]])
		{
			k=((k%mod)- (dp[v[x][i]][1]%mod) +mod)%mod;
			ans2=ans2+((k%mod)*(dp[v[x][i]][1]%mod))%mod;
			ans2=ans2%mod;
			ct++;
		}
	
	  }
	
	int y=v[x].size();
	dp[x][1]=(ans1+1)%mod;
	
	dp[x][0]=ans2;
}
int main()
{
	int x,y;
	char p;
	cin>>n;
	for(int i=0;i<n-1;i++)
	{
		cin>>x>>y;
		v[x].pb(y);
		//v[y].pb(x);
	}
	for(int i=1;i<=n;i++)
	{
		cin>>p;
		if(p=='B')
		col[i]=1;
		else
		col[i]=0;
		vis[i]=0;
		
	}
	vis[1]=1;
	dfs(1);
	LL ans=0;
	for(int i=1;i<=n;i++)
	{
	//	cout<<dp[i][1]<<" "<<dp[i][0];
		ans+=(dp[i][1]%mod+dp[i][0]%mod)%mod;
		ans=ans%mod;
		//cout<<"\n";
	}
	
	//cout<<dp[2][1]<<" "<<dp[2][0];
	cout<<ans%mod;
}	
