
#include<bits/stdc++.h>
#define all(x) x.begin(), x.end()
#define pb(x) push_back(x)
#define cout2(x, y) cout << x << " " << y << endl
#define N 100005
#define MOD 1000000007

using namespace std;

vector<int>L[N];
long long ac[2][N], cal[2][N];
int col[N];

void solve(int u, int pd){
	
	for(int i = 0; i < L[u].size(); i++){
		
		int v = L[u][i];
		if(v == pd)continue;
		
		solve(v, u);
		
		if(col[u]^1){
			
			cal[0][u] += ac[1][v] * (1 + ac[0][u]);
			ac[0][u] += ac[1][v];
			if(cal[0][u] >= MOD)cal[0][u] %= MOD;
		}
		else{
			
			cal[1][u] += ac[0][v] * (1 + ac[1][u]);
			ac[1][u] += ac[0][v];
			if(cal[1][u] >= MOD)cal[1][u] %= MOD;
		}	
	}	
	
	cal[0][u] += (col[u]^1); 
	ac[0][u] += (col[u]^1);
	
	cal[1][u] += col[u];
	ac[1][u] += col[u];
}

bool vis[N];
void DFS(int u){
	
	vis[u] = true;
	for(int i = 0; i < L[u].size(); i++){
		
		int v = L[u][i];
		if(vis[v])continue;
		if(col[u]^col[v])DFS(v);	
	}
}

int main(){

	int n;
	while(scanf("%d", &n) == 1){
		
		int u, v;
		for(int i = 0; i <= n; i++)L[i].clear();
		for(int i = 0; i < n - 1; i++){
			
			scanf("%d%d", &u, &v);	
			u--, v--;
			
			L[u].pb(v);
			L[v].pb(u);
		}
		
		char cad[2];
		for(int i = 0; i < n; i++){
			
			scanf("%s", cad);	
			if(cad[0] == 'B')col[i] = 1;
			else col[i] = 0;
		}
		
		solve(0, 0);
		long long ans = 0;
		
		for(int i = 0; i < n; i++){
			
			ans += cal[0][i];	
			ans += cal[1][i];
			if(ans >= MOD)ans -= MOD;
		}

		printf("%lld\n", ans);
		
	}


}
