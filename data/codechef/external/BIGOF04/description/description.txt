
Chef Abhishek is learning about graphs. While solving problems on graph theory, he came across a specific problem. The problem asked how many paths of length 3 there were between two specific nodes (say A and B) in the given undirected graph. He solved it quickly just by looking at the graph and is now asking you the same problem. But instead of path of length 3, he is asking for a path of length 'L'.

Note 1 : There can be multiple edges connecting same pair of nodes but no self-loops.
Note 2 : The nodes of the graph are numbered from 0 to n-1 for simplicity.

Input
The first line of the input is a single integer 'T' denoting the number of test cases. Each test case starts with two integers 'n' and 'e' denoting the number of nodes and number of edges respectively. Next 'e' lines contain two integers 'a' and 'b' each, denoting the nodes connected by that edge. This is followed by another line containing two integers 'Q' and 'L' denoting number of queries and the length of path respectively. Next 'Q' lines contain two integers 's' and 'd' each denoting the starting and destination node.

Output
For each of the queries 'Q', print on a single line the number of paths of length 'L' available
between nodes 's' and 'd'. Since the number of paths can be large, print it modulo 1000000007
(10^9+7)

Constraints

1 <= T <= 10

1 <= n <= 100

0 <= a,b,s,d < n

1 <= Q <= 10000

1 <= L <= 100


Example
Input:

1
3 2
0 1
1 2
2 3
0 1
1 2

Output:

2
2
