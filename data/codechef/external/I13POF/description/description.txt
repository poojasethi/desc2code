 
You have n friends and you want to take m pictures of them. Exactly two of your friends should appear in each picture and no two pictures should contain the same pair of your friends. So if you have n = 3 friends you can take 3 different pictures, each containing a pair of your friends.
Each of your friends has an attractiveness level which is specified by the integer number ai for the i-th friend. You know that the attractiveness of a picture containing the i-th and the j-th friends is equal to the exclusive-or (xor operation) of integers ai and aj.
You want to take pictures in a way that the total sum of attractiveness of your pictures is maximized. You have to calculate this value. Since the result may not fit in a 32-bit integer number, print it modulo 1000000007 (10^9 + 7).
 

Input
The first line of input contains two integers n and m — the number of friends and the number of pictures that you want to take.
Next line contains n space-separated integers a1, a2, ..., an — the values of attractiveness of the friends.


Output
The only line of output should contain an integer — the optimal total sum of attractiveness of your pictures
 

Constraints

1 <= n <= 5*10^4 
0 <= m <= n*(n-1)/2 
0 ≤ ai ≤ 10^9

Sample input 1: 
3 1
1 2 3

Sample output 1: 
3

Sample input 2: 
3 3
1 2 3

Sample output 2: 
6
