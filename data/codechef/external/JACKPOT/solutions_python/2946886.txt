#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<cstring>

using namespace std;

#define f(i,a,b) for(int i=a;i<b;i++)
#define  X first
#define  Y second
#define mp make_pair
#define  pb   push_back
#define  fil(a,v) memset(a,v,sizeof(a))
#define Clear(a,v) fil(a,0);

typedef long long ll;
typedef pair<int ,int > ii;
typedef vector <int> vi;
typedef vector <ii > vii;
typedef vector < vi > vvi;
int BitSet(ll x){
    int ret=0;
    while(x){
        if(x&1)ret++;
        x/=2;
    }
    return ret;
}

int main(){
    ll n;
    int t;
    ll pow[60];
    pow[0]=1;
    f(i,0,32)pow[i+1]=pow[i]*2;
    cin>>t;
    while(t--){
        scanf("%lld",&n);
        int ans=1000;
        int bits=BitSet(n);
        if(bits==1){
            int ct=0;
            while(n){
                n/=2;ct++;
            }
            cout<<ct-2<<endl;
            continue;
        }
        for(int i=31;i>=0;i--){
            for(int j=i;j>=0;j--){
                if(pow[i]+pow[j]<=n){
                    int hi=i;int lo=j;
                    ll x=n-pow[i]-pow[j];
                    if(x>=pow[i])continue;
                    int ct=BitSet(x);
                    int k=0,ct1=0;
                    while(k<j)if(pow[k++]&x)ct1++;
                    hi+=ct-ct1;
                    ct=ct1;
                    if(hi-lo>=ct){
                        if(ans>hi){
                            ans=hi;
                            //cout<<hi<<" "<<lo<<endl;
                        }
                    }
                    else{
                        if(ans>hi+(ct+1-hi+lo)/2){
                            ans=min(ans,hi+(ct+1-hi+lo)/2);
                            //cout<<hi<<" "<<lo<<" "<<ct<<endl;
                        }
                    }
                }
            }

        }
        cout<<ans<<endl;
    }

    return 0;
}
