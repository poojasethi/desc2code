#include <bits/stdc++.h>
#define pi acos(-1.0)
using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef double lf;
typedef long double llf;
typedef vector <ull> vull;
typedef vector <ll> vll;
typedef vector <int> vi;
typedef pair <int,int> pii;
typedef pair<long long,long long> pll;
typedef vector<pair<long long,long long> > vpll;
typedef vector<pair<int,int> > vpii;
typedef set <int> si;
typedef set<long long> sll;
typedef map<string,int> msi;
typedef map<string,long long> msll;
typedef map<char,int> mci;
typedef map<char,long long> mcll;
typedef map <int,int> mii;
typedef map<long long,long long>mll;
#define pb push_back
#define mp make_pair
#define all(a) a.begin(),a.end() 
template< class T > T abst(const T &n) { return (n < 0 ? -n : n); }
template< class T > T maxt2(const T &a, const T &b) { return (!(a < b) ? a : b); }
template< class T > T mint2(const T &a, const T &b) { return (a < b ? a : b); }
template< class T > T maxt3(const T &a, const T &b, const T &c) { return maxt2(a, maxt2(b, c)); }
template< class T > T mint3(const T &a, const T &b, const T &c) { return mint2(a, mint2(b, c)); }
template< class T > T gcdt(const T a, const T b) { return (b ? gcdt<T>(b, a%b) : a); }
template< class T > T lcmt(const T a, const T b) { return (a / gcdt<T>(a, b) * b); }
template< class T > T modt(const T &a, const T &b) { return (a < b ? a : a % b); }
template< class T > bool inranget(const T &a, const T &b, const T &c) { return a<=b && b<=c; }
template< class T > T sqt(const T &x) { return x * x; }
int count(int val)
{
	bool leftmostbitset=false;
	int count1=0,count0=0;
	for(int i=30;i>=0;i--)
	{		
		if(leftmostbitset==false)
		{
			if(val&1<<i)
			{
				leftmostbitset=true;
			}
		}
		else
		{
			if(val&1<<i)
			{
				count1++;
			}
			else
			{
				count0++;
			}
		}
	}
	//printf("value going to be returned=%d\n",2*count1+count0);
	return 2*count1+count0;
}
int main()
{
	int t,n,leftmostbit,var1,var2,minimumsteps,steps;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		minimumsteps=INT_MAX;
		int setbitcount=0;
		for(int i=0;i<=30;i++)
		{
			if(n&(1<<i))
			{
				leftmostbit=i;
				setbitcount++;
			}
		}
		if(setbitcount==1)
		{	
			printf("%d\n",leftmostbit-1);
		}
		else
		{
			for(int i=leftmostbit;i>=1;i--)
			{
				var1=n&((1<<i)-1);
				var2=n-var1;
				steps=maxt2(count(var1),count(var2));
				minimumsteps=mint2(steps,minimumsteps);
			}	
			printf("%d\n",minimumsteps);
		}
	}
	return 0;
}
