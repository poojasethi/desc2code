#include <bits/stdc++.h>
using namespace std;
map<int, int> A;
// vector <int> left;

int solve(int r) {

	int x = 0, y=0;
	while(r!=0)
	{
		if(r%2)
		{
			x++;
			// left.push_back(left.back()+1);
		}
		y++;
		r >>= 1;
	}
	return x+y-2;

	if(A.find(r) != A.end()) { return A[r];}
	int _min = (r&1) ? solve(r-1)+1 : min(solve(r-1),solve(r/2))+1;

	return (A[r] = _min);
}


int dsolve(int n) {	

	int _min = 1e9;

	if((n & (n-1)) == 0) {
		return solve(n/2);
	}

	for(int i=0; i<=32; i++) {
		int fir = n & ((1ull<<i)-1);
		int sec = n-fir;
		if(fir == 0 || sec == 0)
			continue;
		int ans = max(solve(fir), solve(sec));
		// _min = min(_min, ans);
		if(ans < _min)  {
			_min = ans;
		}
	}
	return _min;

}

int main() {
	
	int t;
	cin >> t;
	A[1] = 0;
	while(t--) {
		int n; 
		cin >> n;

		int ans = dsolve(n);


		// cout << (find == n-fir) << endl;
		cout << ans << endl;

	}

}