#include<iostream>
#include<vector>
#include<queue>
#include<bitset>
#include<algorithm>
#include<map>
#include<string>
#include<sstream>
#include<numeric>
#include<stack>
#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<algorithm>
#include<queue>

using namespace std;

int arr[1000000];

void make_binary(long long int d,vector<int> &b)
{
    int x = b.size()-1;
    while(d!=0)
    {
        b[x] = d%2;
        d/=2;
        x--;
    }
}

long long int val;

long long func(long long v)
{
    if(v <= 1)
        return 0;
    if(v == 2)
        return 1;
    if(v == 3 || v == 4)
        return 2;
    int x;
    if(v&1)
        x = func(v-1) + 1;
    else
        x = func(v/2) + 1;
    return x;
}

long long convert_bin(vector<int>&b)
{
    long long sum=0;
    int pow=1;
    for(int i=b.size()-1;i>=0;i--)
    {
        sum+=b[i]*pow;
        pow=pow*2;
    }
    return sum;
}



int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        cin>>val;
        long long int final = 10000000000;
        vector<int> b(32,0);
        make_binary(val , b);
        for(int i = 0 ; i < 32; i++)
        {
            vector<int> b1(b) , b2(32,0);
            for(int j = 0 ; j < i; j++)
            {
                b1[31-j] = 0;
                b2[31-j] = b[31-j];
            }
            long long x1 = convert_bin(b1) , x2 = convert_bin(b2);
            final = min(final , max(func(x1) , func(x2)));
        }
        if((val&(val-1))== 0)
            final--;
        cout<<final<<endl;
    }
    return 0;
}