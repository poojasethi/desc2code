import java.awt.Point;
import java.io.*;
import java.util.*;
 
public class Main {
 
	public static void main(String[] args) {
		// TODO Auto-generated method stub
		MyScanner sc = new MyScanner() ;
		int t = sc.nextInt() ;
		while(t-->0){
			System.out.println(solve(sc.nextInt()));
		}
	}

	private static int solve(int n) {
		// TODO Auto-generated method stub
		if( (n & n-1) == 0 ){
			return eval(n>>1) ;
		}
		String s = Integer.toBinaryString(n) ;
		int ans = Integer.MAX_VALUE ;
		for(int i = s.length()-1 ; i >= 0 ; i-- ){
			ans = Math.min(ans, Math.max(eval(Integer.parseInt(s.substring(i),2)), eval(n-Integer.parseInt(s.substring(i),2))) );
		}
		return ans ;
	}

	private static int eval(int n) {
		// TODO Auto-generated method stub
		String s = Integer.toBinaryString(n) ;
		int ans = -2 ;
		for(int i = 0 ; i < s.length() ; i++)
			if(s.charAt(i) == '1')
				ans++;
		return ans + s.length();
	}

}
 
class MyScanner {
    BufferedReader br;
    StringTokenizer st;
 
    public MyScanner() {
       br = new BufferedReader(new InputStreamReader(System.in));
    }
 
    boolean hasNext(){
    	if(st.hasMoreElements())
    		return true;
    	try {
            st = new StringTokenizer(br.readLine());
        } catch (IOException e) {
            e.printStackTrace();
        }
    	return st.hasMoreTokens();
    }
    String next() {
        while (st == null || !st.hasMoreElements()) {
            try {
                st = new StringTokenizer(br.readLine());
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
        return st.nextToken();
    }
 
    int nextInt() {
        return Integer.parseInt(next());
    }
 
    long nextLong() {
        return Long.parseLong(next());
    }
 
    double nextDouble() {
        return Double.parseDouble(next());
    }
 
    String nextLine(){
        String str = "";
	  try {
	     str = br.readLine();
	  } catch (IOException e) {
	     e.printStackTrace();
	  }
	  return str;
    }
 
 }   