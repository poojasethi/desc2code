#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <cstdlib>
#include <cstring>
#include <string>
#include <set>
#include <map>
#include <ctime>
#include <queue>
#include <vector>
#include <stack>
#include <list>
#include <cmath>
#include <ctime>
using namespace std;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef vector<vi> vvi;
typedef long long int lli;
 
#define wez(n) int (n); scanf("%d",&(n));
#define wez2(n,m) int (n),(m); scanf("%d %d",&(n),&(m));
#define wez3(n,m,k) int (n),(m),(k); scanf("%d %d %d",&(n),&(m),&(k));
#define debug(vari) cout<<#vari<<" = "<<(vari)<<endl;
#define TESTS wez(testow)while(testow--)
#define modfun (lli)1000000007
#define pb push_back
#define mp make_pair
#define sz(a) int((a).size())
#define INF 2147483647
#define REP(x,a,b) for(int (x) = (a);(x)<=(b);(x)++)
#define rep(x,n)   for(int (x)=0;(x)<(n);(x)++)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin() i = (c).begin();!= (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end()) 
//#define air

int ab(int a)
{
	if (a>=0)
		return a;
	else
		return 0-a;
}

int mx(int a,int b)
{

	if (a>b)
		return a;
	else
		return b;

}
int mn(int a,int b)
{

	if (a<b)
		return a;
	else
		return b;

}

void fn()
{

	lli n;
	int i=0,c=0,l = 0;
	scanf("%lld",&n);
	lli y = n;
	int b[64];

	

	while(n != 0)
	{

		b[i] = n%2;
		n = n/2;
		i += 1;
		l = i;
	}

	if (y == pow(2,l-1))
	{

		printf("%d\n",l-2);
		return;

	}

	int g = 0;

	for(i=0;i<l;i++)
	{
		if (b[i] == 1)
			c += 1;
		
	}

	int m =900000,mprev;

	for(i=0;i<l;i++)
	{

		if (b[i] == 1)
			g += 1;
		mprev = m;
		
		m = mx(i + 1 + g , l + c - g);
		
		if (mprev < m)
		{
			
			break;
		}

	}

	if (b[l-2] == 0)
		mprev = mn(mprev,l + (c)/2);

	printf("%d\n",mprev - 2);


}
void solve()
{

	int i,t;
	scanf("%d",&t);
	while(t--)
		fn();

}

int main()
{
	#ifdef air
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	#endif

	solve();

	#ifdef air
    printf("\n\n%.3lf\n", clock() * 1.0 / CLOCKS_PER_SEC);
	#endif
	return 0;
} 