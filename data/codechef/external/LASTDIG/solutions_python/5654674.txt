matrix = [[0, 1, 4, 3, 8, 5, 2, 7, 6, 9],
	  [2, 5, 4, 9, 6, 3, 8, 7, 0],
	  [8, 7, 2, 9, 6, 1, 0, 3],
	  [6, 1, 8, 5, 0, 9, 2],
	  [6, 3, 0, 5, 4, 7],
	  [0, 7, 2, 1, 4],
	  [4, 9, 8, 1],
	  [4, 3, 6],
	  [2, 5],
	  [8]]
def s(n):
  ind = 0
  while n:
    (n,m)=divmod(n, 10)
    ind+= m if m&1 else 2*m
  return matrix[0].index(ind%10)

def d(index, start, end):
  if index<=start:
    return sum(matrix[index][start-index:end-index+1])
  elif index>end:
    return sum(matrix[i][index-i] for i in range(start, end+1))
  else:
    return sum(matrix[i][index-i] for i in range(start, index))+sum(matrix[index][:end-index+1])

for _ in range(int(raw_input())):
  a,b=map(int, raw_input().split())
  a1,a2=divmod(int(a), 10)
  b1,b2=divmod(int(b), 10)
  print d(s(a1), a2, b2) if a1==b1 else (b1-a1-1)*45 + d(s(a1), a2, 9)+d(s(b1), 0, b2)