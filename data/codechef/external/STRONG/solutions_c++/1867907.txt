#include<stdio.h>
#include<string.h>
#include<iostream>
using namespace std;

int H,W;
char S[101][101];
char Visited[101][101];
int dirx[] = {-1, -1, -1, 0, 0, 1, 1, 1};
int diry[] = {-1, 0, 1, -1, 1, -1, 0, 1};

int travelpossible(int nexti, int nextj, int i, int j)
{
    return ( ( nexti>=0 && nexti < H ) &&( nextj>=0 && nextj < W ) && (!Visited[nexti][nextj]) && ( S[nexti][nextj] == S[i][j]+1 ) );
}
 
int dfs(int i, int j)
{
  int direction,len=1,currlen;
  Visited[i][j] = 1;
  for(direction = 0; direction < 8; direction++)
   {
     if( travelpossible( i + dirx[direction], j + diry[direction], i, j) )
     {
         currlen = dfs(i + dirx[direction],j + diry[direction]) + 1;
         if( currlen > len ) len = currlen;
     }
   }
  return len;
}

int main()
{
  int i,j,T,Maxlen,Currlen;
  char C;
  scanf("%d%d",&H,&W);
  for(i=0; i<H; i++) scanf("%s",S[i]);
  scanf("%d",&T);

  while(T--)
  {
    Maxlen = 0;
    cin>>C;//scanf("%c",&C);  
    memset(Visited,0,sizeof(Visited));
    for( i = 0; i<H; i++ )
    {
      for( j = 0; j<W; j++ )
      { 
        if( S[i][j]==C && !Visited[i][j] )
        {
          Currlen = dfs(i,j);    
          if( Currlen > Maxlen ) Maxlen = Currlen;
        }
      }
    }
    if(Maxlen) printf("Strong %d\n",Maxlen);
    else printf("Weak\n");
  }
 return 0;
}