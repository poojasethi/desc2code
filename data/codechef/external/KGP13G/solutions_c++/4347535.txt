#include <iostream>
#include <map>
#include <fstream>
using namespace std;

#define MAXN 1000
#define INF 1000000007
#define LL long long int

LL a[MAXN + 2], dp[MAXN + 2];

map<string, bool> words;
map<char, char> char_map;
map<string, LL> numbers;

inline void Solve(){
    LL i, j, k, d, n;
    for(i = 0; i <= MAXN + 1; i++){
        a[i] = dp[i] = 0;
    }
    cin>>k;
    char ch;
    string s;
    words.clear();char_map.clear();numbers.clear();
    for(i = 0; i < k; i++){
        cin>>s;
        words[s] = true;
    }
    j = 10;
    while(j--){
        cin>>d>>k;
        for(i = 0; i < k; i++){
            cin>>ch;
            char_map[ch] = (char)(((int)'0')+d);
        }
    }

    string word_string;
    for(map<string, bool>::iterator it = words.begin(); it != words.end(); it++){
        s = "";
        word_string = it->first;
        for(i = 0; i < word_string.length(); i++){
            ch = char_map[word_string[i]];
            //cout<<ch<<endl;
            string tempstr(1, ch);
            s += tempstr;
        }
        if(numbers.find(s) != numbers.end()){
            numbers[s]++;
        }
        else{
            numbers[s] = 1;
        }
    }
    //cout<<endl;
    cin>>n;
    for(i = 1; i <= n; i++){
        cin>>a[i];
    }
    LL val;
    for(map<string, LL>::iterator it = numbers.begin(); it != numbers.end(); it++){
        //cout<<it->first<<" ";
    }
    //cout<<endl;
    for(i = n; i >= 1; i--){
        dp[i] = INF;
        s = "";
        for(j = i; j <= n; j++){
            char dig = (char)(((int)'0')+a[j]);
            string tempstr(1, dig);
            s += tempstr;
            if(numbers.find(s) != numbers.end()){
                dp[i] = min(dp[i], 1 + dp[j + 1]);
            }
        }
    }

    if(dp[1] >= INF or dp[1] <= 0){
        cout<<-1<<endl;
    }
    else{
        cout<<dp[1]<<endl;
    }

    return;
}

int main(){
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
    #endif
    LL t, tt = 0;
    cin>>t;
    while(t--){
        tt++;
        cout<<"Case "<<tt<<": ";
        Solve();
    }
    return 0;
}
