
#ifndef PROGRAMMING_CONTESTS_H
#define PROGRAMMING_CONTESTS_H
#include <algorithm>
#include <bitset>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <typeinfo>
#include <utility>
#include <vector>
#ifdef LOCALHOST
static FILE* _freopen=freopen("input.txt","r",stdin);
#else
#define NDEBUG
#endif
#include <cassert>
using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair<int,int> PII;

#define IT(c) typeof(c.begin())
#define PB push_back
#define MP make_pair
#define LEN(a) (sizeof(a)/sizeof(a[0]))
#define ALL(c) c.begin(),c.end()
#define FOR(i,a,b) for(int i=(a), _b=(b); i<_b; ++i)
#define FORD(i,a,b) for(int i=(b-1), _a=(a); i>=_a; --i)
#define FORE(i,c) for(IT(c) i=(c).begin(); i!=(c).end(); ++i)

static int RI(){int res;int r=scanf("%d ",&res);assert(r==1);return res;}
static LL RLL(){LL res;int r=scanf("%lld ",&res);assert(r==1);return res;}
static ULL RULL(){ULL res;int r=scanf("%llu ",&res);assert(r==1);return res;}
static double RD(){double res;int r=scanf("%lf ",&res);assert(r==1);return res;}
static string RS(){char buf[2000];int r=scanf("%s ",buf);assert(r==1);return string(buf);}
static string RL(){string res;getline(cin,res);assert(cin.good());return res;} //Requires and discards line break at end of line.
static const double PI=acos(-1.0), EPS=1e-10;
template<typename T> static string str(T x){stringstream ss;ss<<x;return ss.str();}
static double timer(){return 1.0*clock()/CLOCKS_PER_SEC;}

#endif //PROGRAMMING_CONTESTS_H


int m=100000007;

//a is an nxn array such that a[i][j] is the number of edges between Xi and Yj
static int permanent(int** a, int n){
  int* mem=new int[1<<n]; memset(mem,0,(1<<n)*sizeof(int));
  mem[0]=1;
  for(int i=0;i<1<<n;++i) for(int j=0;j<n;++j)
    if((i&(1<<j))==0){
      mem[i|(1<<j)]=(mem[i|(1<<j)]+(LL)mem[i]*(LL)a[__builtin_popcount(i)][j])%m;
    }
  return mem[(1<<n)-1];
}

int main(int argc, char** argv) {
  int** a = new int*[21];
  FOR(i,0,21){a[i]=new int[21];memset(a[i],0,21*sizeof(int));}
  string ind="BCDFGHJKLMNPQRSTVWXYZ";
  int n=RI();  
  FOR(i,0,n){
    string s=RL();
    int x=ind.find(s[0]),y=ind.find(s[s.length()-1]);
    ++a[x][y];
  }
  cout<<permanent(a,21)<<endl;  
  return 0;
}
