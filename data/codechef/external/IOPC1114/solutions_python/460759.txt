import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;

public class Main {
	static Scanner in;
	static PrintWriter out;
	static String INPUT = "";
	
	static void solve()
	{
		int n = ni();
		int[][] mat = new int[21][21];
		String map = "BCDFGHJKLMNPQRSTVWXYZ";
		for(int i = 0;i < n;i++){
			String line = in.next();
			int h = map.indexOf(line.charAt(0));
			int t = map.indexOf(line.charAt(line.length()-1));
			mat[h][t]++;
		}
		
		out.println(permanent(mat));
	}
	
	static int MOD = 100000007;
	
	public static long permanent(int[][] A)
	{
		int n = A.length;
		long[] dp = new long[1<<n];
		dp[0] = 1;
		for(int i = 0;i < 1<<n;i++){
			for(int j = 0;j < n;j++){
				if((i&(1<<j))==0){
					dp[i|(1<<j)] += dp[i]*A[Integer.bitCount(i)][j];
					dp[i|(1<<j)] %= MOD;
				}
			}
		}
		return dp[(1<<n)-1];
	}
	
	public static void main(String[] args) throws Exception
	{
		in = INPUT.isEmpty() ? new Scanner(System.in) : new Scanner(INPUT);
		out = new PrintWriter(System.out);

			solve();
		out.flush();
	}
	
	static int ni() { return Integer.parseInt(in.next()); }
	static void tr(Object... o) { if(INPUT.length() != 0)System.out.println(Arrays.deepToString(o)); }
}
