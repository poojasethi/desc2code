#include <bits/stdc++.h>

using namespace std;

const int N = 21;

const long long mod = (long long) 100000007 ;

long long a[N][N];
long long dp[(1<<N) + 5];

string conso;

int get_id(char ch) {
    for (int i = 0; i < conso.size(); i++) {
        if (conso[i] == ch) {
            return i;
        }
    }
}

string vowels = "AEIOU";

int isVowel(char ch) {
    for (int i = 0; i < vowels.size(); i++) {
        if (vowels[i] == ch) {
            return true;
        }
    }
    return false;
}

int main() {
    //freopen("in.txt", "r", stdin);

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);

    for (char i = 'A'; i <= 'Z'; i++) {
        if (!isVowel(i))
            conso += i;
    }

    //cout << conso << endl;

    int n;
    cin >> n;
    for (int i = 0; i < n; i++) {
        string s;
        cin >> s;
        int fir = get_id(s[0]);
        int sec = get_id(s[s.size() - 1]);
        a[fir][sec]++;
    }

    dp[0] = 1;
    for (int mask = 0; mask < (1 << conso.size()); mask++) {
        for (int i = 0; i < conso.size(); i++) {
            if (!(mask & (1 << i))) {
                long long &res = dp[mask | (1 << i)];
                res += (dp[mask] * (long long) a[__builtin_popcount(mask)][i]) % mod;
                if (res >= mod) {
                    res -= mod;
                }
            }
        }
    }

    cout << dp[(1 << conso.size()) - 1] << endl;


    return 0;
}
