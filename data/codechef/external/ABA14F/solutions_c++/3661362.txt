#include <queue>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <string.h>
#include <ctime>
 
using namespace std;
 
#define REP(i,n) for(int i=0; i<n; i++)
#define FOR(i,x,y) for(int i=x; i<=y; i++)
#define MAX 1000005
#define pb push_back
#define mp make_pair
 
typedef long long ll;
int r,c,w,srcx,srcy;
map <pair <int,int> ,int> str_pos;
int dx[]={1,-1,0,0},dy[]={0,0,-1,1},pos=0,sworld;
char a[505][505];
int v[505][20][(1<<10)+5];
int solve()
{
    queue <int> q;
    q.push(srcx),q.push(srcy),q.push(0),q.push(0),q.push(sworld);
    int ret=-1;
    while(!q.empty())
    {
                     int x=q.front(); q.pop();
                     int y=q.front(); q.pop();
                     int cost=q.front(); q.pop();
                     int mask=q.front(); q.pop();
                     int world=q.front(); q.pop();
                     //cout<<"x "<<x<<" y "<<y<<" cost "<<cost<<" mask "<<mask<<" world "<<world<<"\n";
                     if(world<0 || world>=w)  continue;
                     if(a[x][y]=='M')
                     {
                                     if(mask==(1<<pos)-1)
                                     {
                                                         if(ret!=-1) ret=min(ret,cost);
                                                         else ret=cost;
                                     }
                                     continue;
                     }
                     if(v[x][y][mask]) continue;
                     v[x][y][mask]=1;
                     if(a[x][y]=='#') continue;
                     if(a[x][y]=='U')
                     {
                       //              cout<<"hello up "<<"\n";
                                     q.push(x-r),q.push(y),q.push(cost),q.push(mask),q.push(world-1);
                                     continue;
                     }
                     if(a[x][y]=='D')
                     {
                         //            cout<<"hello\n";
                                     q.push(x+r),q.push(y),q.push(cost),q.push(mask),q.push(world+1);
                                     continue;
                     }
                     if(a[x][y]=='C')
                     {
                           //          cout<<"coin x "<<x<<" y "<<y;
                                     int pos=str_pos[mp(x,y)];
                             //        cout<<"pos "<<pos<<"\n";
                                     mask|=(1<<pos);
                     }
                     REP(i,4)
                     {
                             int nx=x+dx[i],ny=y+dy[i];
                             if(nx>=r*world && nx<r*world+r && ny>=0 && ny<c && a[nx][ny]!='#')
                             {
                               //       cout<<"new "<<"\n";
                                 //     cout<<"nx "<<nx<<" ny "<<ny<<"\n";
                                      q.push(nx),q.push(ny),q.push(cost+1),q.push(mask),q.push(world);
                                      
                             }
                     }
    }
    
    return ret;
 
}
main()
{
  //    int cases;
 //     scanf("%d",&cases);
      while(1)
      {
                    scanf("%d %d %d",&r,&c,&w);
                    if(r==0 && c==0 && w==0) break;
                    str_pos.clear();
                    REP(i,r*w)
                            scanf("%s",a[i]);
                    pos=0;
                    REP(i,r*w)
                            REP(j,c)
                                    if(a[i][j]=='C')
                                    {
//                                                    cout<<"i "<<i <<" j "<<j<<"\n";
                                                 str_pos[mp(i,j)]=pos++;
                                    }
                    REP(i,r*w)
                            REP(j,c)
                                    if(a[i][j]=='S')
                                                    srcx=i,srcy=j,sworld=i/r;
                     memset(v,0,sizeof v);                               
//                     cout<<"pos "<<pos<<"\n"<<" sworld "<<sworld<<"\n";
                      int ret=solve();
                      if(ret!=-1)
                      printf("Mario saved the princess in %d steps\n",ret);
                      else
                      printf("Mario failed to save princess\n");
                                                                           
      }  
} 