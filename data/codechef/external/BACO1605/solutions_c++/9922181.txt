#include<bits/stdc++.h>
using namespace std;
int gcd(int a,int b)
{
	if(b!=0)
		return gcd(b,a%b);
	else 
		return a;
}
int arr[500002];
int pre[500002];
int suf[500002];
int z[500001];
int n,k;
int check(int val)
{
	// mo's algorithm divide in a val parts;
// i--> i+val  
	for(int i=1;i<=n;i+=val)
	{
		
		int r = min(n,i+val-1);
		pre[i] = arr[i];
		for(int j=i+1;j<=r;j++)
			pre[j] = gcd(pre[j-1],arr[j]);
		suf[r] = arr[r];
		for(int j=r-1;j>=i;j--)
		{
			suf[j] = gcd(suf[j+1],arr[j]);
		}

	}
	for(int i=1;i+val-1<=n;i++)
		if(gcd(suf[i],pre[i+val-1])>=k)
			return 1;
	return 0;
}
int main()
{
	
	scanf("%d %d",&n,&k);
	for(int i=0;i<n;i++){
		scanf("%d",&arr[i+1]);
		
	}
	int low = 1;
	int high = n+1;
	while(low<high)
	{
		//printf("%d %d\n",low,high);
		int mid = (low+high)/2;
			if(check(mid))
			{
				low = mid+1;

			}
			else high = mid;
	}
	printf("%d\n",low-1);
return 0;
}
