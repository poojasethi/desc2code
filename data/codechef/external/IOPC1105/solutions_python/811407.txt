/*
 * File: 8324.cpp
 * Author: wym510 
 * Email: <wym6110@gmail.com>
 * Create Date: 2012-01-28 21:41:06
*/

#include <vector>
#include <string>
#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <cstdio>
#include <iostream>
#include <fstream>
#include <sstream>
#include <queue>
#include <deque>
#include <stack>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#define S size()
#define B begin()
#define E end()
#define P push_back
#define fu(i,a,b) for(int i=a;i<b;++i)
#define fd(i,a,b) for(int i=b-1;i>=a;--i)
typedef long long int64;
using namespace std;

const int oo=300000000,MaxN=220;

int g[MaxN][MaxN],linky[MaxN];
int lx[MaxN],ly[MaxN],slack[MaxN];
int visy[MaxN],visx[MaxN],flag=0,N;

bool check(int now)
{
	visx[now]=flag;
	for(int i=0;i<N;i++)
	{
		if(lx[now]+ly[i]==g[now][i] && visy[i]!=flag)
		{
			visy[i]=flag;
			if(linky[i]==-1 || check(linky[i]))
			{
				linky[i]=now;
				return true;
			}
		}
		slack[i]=min(slack[i],g[now][i]-lx[now]-ly[i]);
	}
	return false;
}

int64 km(int n)
{
	N=n;
	for(int i=0;i<n;i++) lx[i]=oo,ly[i]=0,linky[i]=-1;
	for(int i=0;i<n;i++) for(int j=0;j<n;j++)
		lx[i]=min(lx[i],g[i][j]);
	for(int vec=0;vec<n;vec++)
	{
		for(int j=0;j<n;j++) slack[j]=oo;
		for(flag++;!check(vec);flag++)
		{
			int dt=oo;

			for(int j=0;j<n;j++) if(visy[j]!=flag)
				dt=min(slack[j],dt);
			for(int i=0;i<=vec;i++) if(visx[i]==flag) lx[i]+=dt;
			for(int j=0;j<n;j++) if(visy[j]==flag) ly[j]-=dt;
			for(int j=0;j<n;j++) slack[j]=oo;
			if(lx[vec]>=oo) return oo+1;
		}
	}
	
	int64 ans=0;

	for(int i=0;i<n;i++) ans+=lx[i]+ly[i];
	return ans;
}

int main()
{
	int test;

	for(cin>>test;test;test--)
	{
		int n,m;

		scanf("%d%d",&n,&m);
		for(int i=0;i<n;i++) for(int j=0;j<n;j++) g[i][j]=oo;
		for(int i=0;i<m;i++)
		{
			int u,v,c;

			scanf("%d%d%d",&u,&v,&c);
			g[u-1][v-1]=c;
		}

		int64 res=km(n);

		if(res>=oo) cout<<"Impossible"<<endl;
		else cout<<res<<endl;
	}
	return 0;
}

/* vim: set ts=4 sw=4: */

