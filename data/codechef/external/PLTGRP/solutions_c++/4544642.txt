#include<cstdio>
#include<cstring>
#include<cstdlib>

using namespace std;

int *A,*tailTable;

int CeilIndex(int l, int r, int key)
{
int m;
while( r - l > 1 )
{
m = l + (r - l)/2;
(tailTable[m] > key ? r : l) = m;
}
return r;
}
int LongestIncreasingSubsequenceLength(int size)
{
tailTable = (int*)malloc(sizeof(int)*size);
int len;
memset(tailTable, 0, sizeof(int)*size);
tailTable[0] = A[0];
len = 1;
for(int i = 1; i < size; ++i)
{
if(A[i] < tailTable[0])
tailTable[0] = A[i];
else if( A[i] >= tailTable[len-1] )
tailTable[len++] = A[i];
else
tailTable[CeilIndex(-1, len-1, A[i])] = A[i];
}
free(tailTable);
return len;
}

int main()
{
	int n;
	scanf("%d",&n);
	A=(int *)malloc(sizeof(int)*n);
	for(int i=0;i<n;i++)
	scanf("%d",&A[i]);
	printf("%d\n",LongestIncreasingSubsequenceLength(n));
}