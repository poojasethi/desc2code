//Author : pakhandi
//
using namespace std;

#include <bits/stdc++.h>

#define wl(n) while(n--)
#define fl(i,a,b) for(i=a; i<b; i++)
#define rev(i,a,b) for(i=a; i>=b; i--)
#define scan(n) scanf("%d", &n)
#define scans(s) scanf("%s", s)
#define scanc(c) scanf("%c", &c)
#define scanp(f) scanf("%f", &f)
#define print(n) printf("%d\n", n)
#define prints(s) printf("%s\n", s)
#define printc(c) printf("%c\n", c)
#define printp(f) printf("%f\n", f)
#define nline printf("\n")
#define mclr(strn) strn.clear()
#define ignr cin.ignore()
#define MOD 1000000007
#define ll long long int
#define u64 unsigned long long int
 
int arr[1000006];
int *tailTable;
 
int CeilIndex(int l, int r, int key) 
{
    int m; 
    while( r - l > 1 ) 
    {
        m = l + (r - l)/2;
        (tailTable[m] > key ? r : l) = m;
    } 
    return r;
}
 
int LongestIncreasingSubsequenceLength(int size) 
{
 
    tailTable = (int*)malloc(sizeof(int)*size);
    int len; 
 
    memset(tailTable, 0, sizeof(int)*size); 
    tailTable[0] = arr[0];
    len = 1;
    for(int i = 1; i < size; ++i) 
    {
        if(arr[i] < tailTable[0])
            tailTable[0] = arr[i];
        else if( arr[i] >= tailTable[len-1] )
            tailTable[len++] = arr[i];
        else
            tailTable[CeilIndex(-1, len-1, arr[i])] = arr[i];
    }
 
    free(tailTable); 
    return len;
}
 

 
int main() {
    int n;
    cin>>n;
    int i;
    fl(i,0,n)
    	cin>>arr[i];
 
    printf("%d\n",LongestIncreasingSubsequenceLength(n));
 
    return 0;
} 