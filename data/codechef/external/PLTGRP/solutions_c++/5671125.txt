#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define ll long long
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define pip pair<int,pii>
#define pb push_back
ll pwr(ll a,ll b,ll mod)
{
  if(b==0)
    return 1;
  ll temp=pwr(a,b/2,mod);
  temp=(temp*temp)%mod;
  if(b&1)
    temp=(temp*a)%mod;
  return temp;
}
ll pwr(ll a,ll b)
{
  if(b==0)
    return 1;
  ll temp=pwr(a,b/2);
  temp=(temp*temp);
  if(b&1)
    temp=(temp*a);
  return temp;
}
ll gcd(ll a,ll b)
{
  return b==0?a:gcd(b,a%b);
}
ll lcm(ll a,ll b)
{  
  return (a/gcd(a,b))*b;
}
ll modularInverse(ll a,ll m)
{     
      /*reminder: make sure m is prime*/
      assert(false);
      return pwr(a,m-2,m);
}
const int mod=1000000007;
int SLIS(int A[], int n) 
{
    multiset<int> s;

    multiset<int>::iterator k;

    for(int i=0;i<n;++i)
    {
      s.insert(A[i]);
    
        k=s.find(A[i]);
        while(*k==A[i])
          k++;
        if(k!=s.end())
        s.erase(k);    
    }
    return s.size();
}
int a[1000000];
int main()
{
  std::ios::sync_with_stdio(false);
  int n;
  cin>>n;
  for(int i=0;i<n;++i)
    cin>>a[i];
  cout<<SLIS(a,n);
}