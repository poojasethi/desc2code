/* Author -  Dipjal Chhetri */
/* College - Jaypee Institute of Information Technology */
import java.io.*;
import java.util.*;
import java.math.*;
import java.util.Arrays;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Collections;
import java.util.Scanner;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.math.BigDecimal;
 
class BigOv2C{
  
   static InputReader reader;
    
    public static void main(String args[])throws IOException{
       reader = new InputReader(System.in);
       BigOv2C elect = new BigOv2C();
       elect.run(reader);
    }
    
    public static void run(InputReader reader) throws IOException{
        // System.out.println("Lets test!");
        int T = reader.readInt();
        for(int t = 0; t < T; ++t){
           int n = reader.readInt();
           int [] a = reader.readIntArray(n);
           long answer = 1;
           for(int i = 0; i < n; ++i){
               answer = (answer * (a[i] % (int) (1e9 + 7) ) ) % (int) (1e9 + 7);
            }
           System.out.println(answer);
        }
    }
    static final class InputReader {
        private final InputStream stream;
        private final byte[] buf = new byte[1024];
        private int curChar;
        private int numChars;
 
        public InputReader(InputStream stream) {
            this.stream = stream;
        }
 
        private int read() throws IOException {
            if (curChar >= numChars) {
                curChar = 0;
                numChars = stream.read(buf);
                if (numChars <= 0) {
                    return -1;
                }
            }
            return buf[curChar++];
        }
 
        public final int readInt() throws IOException {
            return (int)readLong();
        }
 
        public final long readLong() throws IOException {
            int c = read();
            while (isSpaceChar(c)) {
                c = read();
                if (c == -1) throw new IOException();
            }
            boolean negative = false;
            if (c == '-') {
                negative = true;
                c = read();
            }
            long res = 0;
            do {
                res *= 10;
                res += c - '0';
                c = read();
            } while (!isSpaceChar(c));
            return negative ? -res : res;
        }
 
        public final int[] readIntArray(int size) throws IOException {
            int[] array = new int[size];
            for (int i=0; i<size; i++) {
                array[i] = readInt();
            }
            return array;
        }
 
        public final long[] readLongArray(int size) throws IOException {
            long[] array = new long[size];
            for (int i=0; i<size; i++) {
                array[i] = readLong();
            }
            return array;
        }
 
        public final String readString() throws IOException {
            int c = read();
            while (isSpaceChar(c)) {
                c = read();
            }
            StringBuilder res = new StringBuilder();
            do {
                res.append((char)c);
                c = read();
            } while (!isSpaceChar(c));
            return res.toString();
        }
 
        private boolean isSpaceChar(int c) {
            return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
        }
    }
}