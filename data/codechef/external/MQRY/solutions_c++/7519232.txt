#include<bits/stdc++.h>
using namespace std;
#define MAX 10000000
#define INF 1000000000
long long int  n,n1;
long long int  arr[10000000];
long long int  tree[MAX];
long long int  tree2[MAX];
void build1(long long int  node,long long int  a,long long int  b)
{
	if(a>b)
	return;
	if(a==b)
	{
		tree[node]=arr[a]; return;
	}
	build1(node*2,a,(a+b)/2);
	build1(node*2+1,1+(a+b)/2,b);
	
	tree[node]= max(tree[node*2] , tree[1+node*2]);	
}
void build2(long long int  node,long long int  a,long long int  b)
{
	if(a>b)
	return;
	if(a==b)
	{
		tree2[node]=arr[a]; return;
	}
	build2(node*2,a,(a+b)/2);
	build2(node*2+1,1+(a+b)/2,b);
	
	tree2[node]= min(tree2[node*2] , tree2[1+node*2]);	
}

long long int  query1(long long int  node,long long int  a,long long int  b,long long int  i,long long int  j)
{
	if(a>b||a>j||b<i)
	return -1;
	if(a>=i && b<=j)
	return tree[node];		
		
	long long int  q1=query1(node*2,a,(a+b)/2,i,j);
	
	long long int  q2=query1(1+node*2,1+(a+b)/2,b,i,j);
	return max(q1,q2)	;
}

long long int  query2(long long int  node,long long int  a,long long int  b,long long int  i,long long int  j)
{
	if(a>b||a>j||b<i)
	return INF;
	if(a>=i && b<=j)
	return tree2[node];		
		
	long long int  q1=query2(node*2,a,(a+b)/2,i,j);
	
	long long int  q2=query2(1+node*2,1+(a+b)/2,b,i,j);
	return min(q1,q2)	;
}

int main()
{
	long long int  i,n,q,x,y,w1,w2,x1,y1;
	cin>>n>>q;
	n1=n;
	for(i=0;i<n;++i)
	cin>>arr[i];
	build1(1,0,n-1);	
	build2(1,0,n1-1);
	while(q--)
	{
		cin>>x>>y;
		x1=x;
		y1=y;		
		w1=query1(1,0,n-1,x,y);
		w2=query2(1,0,n1-1,x1,y1);
		cout<<w1-w2<<endl;	
	}	
	return 0;
}