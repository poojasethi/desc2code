#include<iostream>
#include<algorithm>
#include<math.h>
#include <limits.h>
using namespace std;
#define M 100005
int st[M],sst[M];
#define gc getchar_unlocked
void scanint(int &x)
{
register int c = gc();
x = 0;
int neg = 0;
for(;((c<48 || c>57) && c != '-');c = gc());
if(c=='-') {neg=1;c=gc();}
for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
if(neg) x=-x;
}
int MQ(int st[],int s,int e,int l,int m,int idxx){
	
	if(l<=s && m>=e)
	return st[idxx];
	
	if(l>e || m<s)
	return -1;
	
	int md=(s+e)/2;
	int fz=max(MQ(st,s,md,l,m,2*idxx+1),MQ(st,md+1,e,l,m,2*idxx+2));
	return fz;
	
}
int MMQ(int sst[],int s,int e,int l,int m,int idxx){
	
	if(l<=s && m>=e)
	return sst[idxx];
	
	if(l>e || m<s)
	return INT_MAX;
	
	int md=(s+e)/2;
	int fz=min(MMQ(sst,s,md,l,m,2*idxx+1),MMQ(sst,md+1,e,l,m,2*idxx+2));
	return fz;
	
}
int SGT(int a[],int s,int e,int st[],int idx){
	
	if(s==e){
		st[idx]=a[s];
		return a[s];
	}
	int mid=(s+e)/2;
	st[idx]=max(SGT(a,s,mid,st,2*idx+1),SGT(a,mid+1,e,st,2*idx+2));
	return st[idx];
}
int SGGT(int a[],int s,int e,int sst[],int idx){
	
	if(s==e){
		sst[idx]=a[s];
		return a[s];
	}
	int mid=(s+e)/2;
	sst[idx]=min(SGGT(a,s,mid,sst,2*idx+1),SGGT(a,mid+1,e,sst,2*idx+2));
	return sst[idx];
}
int main(){
	
	int i,j,k,l,m,t,n,a[100005];
	scanint(n);
	scanint(t);
	for(i=0;i<n;i++)
		cin>>a[i];
	
	SGT(a,0,n-1,st,0);
	SGGT(a,0,n-1,sst,0);

while(t--){
	scanint(l);
	scanint(m);
int ff=	(MQ(st,0,n-1,l,m,0)-MMQ(sst,0,n-1,l,m,0));
	cout<<ff<<endl;
	}
}