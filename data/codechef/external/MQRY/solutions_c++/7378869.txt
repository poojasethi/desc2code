#include<bits/stdc++.h>
using namespace std;
 
#define N_MAX 100000
typedef long long ll;
typedef std::vector<int> vi;
typedef vector<long long> vll;
typedef pair<int,int> ii;
 
vi SegmentTreeMax;
vi SegmentTreeMin;
int A[N_MAX];
 
 
void initSegmentTree(int N){
    int length=2*pow(2.00,floor(log(N)/log(2)+1));
    SegmentTreeMax.resize(length,0);
    SegmentTreeMin.resize(length,0);
}
 
void buildSegmentTree(int A[],int node,int b,int e){
    if(b==e){
        SegmentTreeMin[node]=b;
        SegmentTreeMax[node]=b;
        return;
    }
    int mid=(e+b)/2;
    int leftNode=2*node+1;
    int rightNode=2*node+2;
    buildSegmentTree(A,leftNode,b,mid);
    buildSegmentTree(A,rightNode,mid+1,e);
    (A[SegmentTreeMax[leftNode]]>A[SegmentTreeMax[rightNode]]) ? SegmentTreeMax[node]=SegmentTreeMax[leftNode] : SegmentTreeMax[node]=SegmentTreeMax[rightNode];
    (A[SegmentTreeMin[leftNode]]>A[SegmentTreeMin[rightNode]]) ? SegmentTreeMin[node]=SegmentTreeMin[rightNode] : SegmentTreeMin[node]=SegmentTreeMin[leftNode];
}
 
int queryMAX(int node,int b,int e,int i,int j){
    if(i<=b&&j>=e)return SegmentTreeMax[node];
    else if(i>e||j<b)return -1;
    int mid=(b+e)/2;
    int leftNode=2*node+1;
    int rightNode=2*node+2;
    ll leftMAX=queryMAX(leftNode,b,mid,i,j);
    ll rightMAX=queryMAX(rightNode,mid+1,e,i,j);
    if(leftMAX==-1)return rightMAX;
    if(rightMAX==-1)return leftMAX;
    return (A[leftMAX]>A[rightMAX]) ? leftMAX : rightMAX;
}
 
int queryMIN(int node,int b,int e,int i,int j){
    if(i<=b&&j>=e)return SegmentTreeMin[node];
    else if(i>e||j<b)return -1;
    int mid=(b+e)/2;
    int leftNode=2*node+1;
    int rightNode=2*node+2;
    ll leftMIN=queryMIN(leftNode,b,mid,i,j);
    ll rightMIN=queryMIN(rightNode,mid+1,e,i,j);
    if(leftMIN==-1)return rightMIN;
    if(rightMIN==-1)return leftMIN;
    return (A[leftMIN]<A[rightMIN]) ? leftMIN : rightMIN;
}
 
int main(){
    int n,q;scanf("%d %d",&n,&q);
    int i;
    for(i=0;i<n;i++){
        scanf("%d",&A[i]);
    }
    initSegmentTree(n);
    buildSegmentTree(A,0,0,n-1);
    while(q--){
            int x,y;
            scanf("%d %d",&x,&y);
            int ans=A[queryMAX(0,0,n-1,x,y)] - A[queryMIN(0,0,n-1,x,y)];
            printf("%d\n",ans);
    }
} 