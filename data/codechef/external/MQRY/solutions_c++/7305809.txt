#include <bits/stdc++.h>
using namespace std;
#define MAX 100001
int a[MAX]={0};
int t[4*MAX]={0},t1[4*MAX];
int build_tree(int ss,int se,int index)
{
    if(ss==se)
    {
        t[index]=a[ss];
        return t[index];
    }
    else
        {
            int mid=(ss+se)/2;
            t[index]=min(build_tree(ss,mid,2*index+1),build_tree(mid+1,se,2*index+2));
            return t[index];
        }
}
int build_tree_max(int ss,int se,int index)
{
    if(ss==se)
        {
            t1[index]=a[ss];
            return t1[index];
        }
    else
        {
            int mid=(ss+se)>>1;
            t1[index]=max(build_tree_max(ss,mid,2*index+1),build_tree_max(mid+1,se,2*index+2));
            return t1[index];
        }
}
int querym(int ss,int se,int qs,int qe,int index)
{
    if(qs<=ss && qe>=se)
    {
        return t1[index];
    }
    else
    {
        int mid=(ss+se)/2;
        if(se<qs || ss>qe)
        return INT_MIN;
        else
        return max(querym(ss,mid,qs,qe,2*index+1),querym(mid+1,se,qs,qe,2*index+2));
    }

}
int query(int ss,int se,int qs,int qe,int index)
{
    if(qs<=ss && qe>=se)
    {
        return t[index];
    }
    else
    {
        int mid=(ss+se)/2;
        if(se<qs || ss>qe)
        return INT_MAX;
        else
        return min(query(ss,mid,qs,qe,2*index+1),query(mid+1,se,qs,qe,2*index+2));
    }
}
int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    #endif // ONLINE_JUDGE
    int n=0,i,q,x,y;

    cin>>n>>q;
    for(i=0;i<n;i++)
        cin>>a[i];
    build_tree(0,n-1,0);
    build_tree_max(0,n-1,0);
    while(q--)
        {
            cin>>x>>y;
            cout<<(querym(0,n-1,x,y,0)-query(0,n-1,x,y,0))<<endl;
        }
    return 0;
}
