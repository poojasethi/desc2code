#include<bits/stdc++.h>
using namespace std;

struct segtree {
    int mx;
    int mn;
}tree[1000000];
int a[1000000];
inline void build(int node,int rs,int re) {
    if(rs==re) {
        tree[node].mx=tree[node].mn=a[rs];
        return ;
    }
    build(node*2,rs,(rs+re)/2);
    build(node*2+1,(rs+re)/2+1,re);
    tree[node].mx=max(tree[node*2].mx,tree[node*2+1].mx);
    tree[node].mn=min(tree[node*2].mn,tree[node*2+1].mn);
}
inline int query2(int node,int rs,int re,int qs, int qe) {
    if(qs<=rs && re<=qe) {
        return tree[node].mn;
    }
    if(rs>qe || re<qs) {
        return INT_MAX;
    }
    return min(query2(node*2,rs,(rs+re)/2,qs,qe),
            query2(node*2+1,(rs+re)/2+1,re,qs,qe));
}
inline int query1(int node,int rs,int re,int qs, int qe) {
    if(qs<=rs && re<=qe) {
        return tree[node].mx;
    }
    if(rs>qe || re<qs) {
        return 0;
    }
    return max(query1(node*2,rs,(rs+re)/2,qs,qe),
            query1(node*2+1,(rs+re)/2+1,re,qs,qe));
}
int main() {
    int n,m;cin>>n>>m;
    for(int i=0;i<n;i++) {
        scanf("%d",&a[i]);
    }
    build(1,0,n-1);
    while(m--) {
        int x,y;scanf("%d%d",&x,&y);
        printf("%d\n",query1(1,0,n-1,x,y)-query2(1,0,n-1,x,y));
    }
}
