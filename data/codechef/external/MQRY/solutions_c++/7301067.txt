#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;
#define max1 100010
int Max[max1][17],Min[max1][17],A[max1];
void RMQ(int n)
{
    int i,j;
  for(j=0;j<n;j++)
  {
      Max[j][0]=Min[j][0]=j;
  }
  for(j=1;1<<j<=(n);j++)
  {
      for(i=0;(i+(1<<j)-1)<n;i++)
      {
       if(A[Min[i+(1<<(j-1))][j-1]]>A[Min[i][j-1]])
            Min[i][j]=Min[i][j-1];
      else
        Min[i][j]=Min[i+(1<<(j-1))][j-1];
        if(A[Max[i+(1<<(j-1))][j-1]]<A[Max[i][j-1]])
            Max[i][j]=Max[i][j-1];
      else
        Max[i][j]=Max[i+(1<<(j-1))][j-1];
      }
  }
}
int QueryM(int a,int b)
{
    int max,min;
    int d=log2(b-a+1);
    if(A[Min[a][d]]<=A[Min[b-(1<<d)+1][d]])
        min=A[Min[a][d]];
    else
        min=A[Min[b-(1<<d)+1][d]];
    if(A[Max[a][d]]>=A[Max[b-(1<<d)+1][d]])
        max=A[Max[a][d]];
    else
        max=A[Max[b-(1<<d)+1][d]];
        return max-min;

}
 int main()
 {
     int n,q,i,j,a,b,ans;
     scanf("%d %d",&n,&q);
     for(i=0;i<n;i++)
        scanf("%d",&A[i]);
     RMQ(n);
     for(j=0;j<q;j++)
     {
         scanf("%d %d",&a,&b);
         ans=QueryM(a,b);
         printf("%d\n",ans);
     }

 }
