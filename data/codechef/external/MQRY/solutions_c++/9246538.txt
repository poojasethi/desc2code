#include <bits/stdc++.h>

using namespace std;

#define ll long long

ll arr[100005];

struct segtree
{
	int mi,ma;
};

struct segtree tree[500000];

void build_tree(int node,int a,int b)
{
	if(a>b)
	 return;
	if(a==b)
	{                                  //leaf nodes
	 tree[node].mi=arr[a],tree[node].ma=arr[a];
	 return; }
	
	build_tree(node*2,a,(a+b)/2);
	build_tree(node*2+1,(a+b)/2+1,b);
   
   tree[node].mi=min(tree[2*node].mi,tree[2*node+1].mi);
   tree[node].ma=max(tree[2*node].ma,tree[2*node+1].ma);
}

int query(int node,int a,int b,int i,int j)
{
	if(b<i||a>j||a>b)
	 return INT_MAX;
	
	if(a>=i&&b<=j)
		return tree[node].mi;
	
	int q1=query(node*2,a,(a+b)/2,i,j);
	int q2=query(node*2+1,(a+b)/2+1,b,i,j);
	
	int answer=min(q1,q2);
	
	return answer;
}

int query2(int node,int a,int b,int i,int j)
{
	if(b<i||a>j||a>b)
	 return INT_MIN;
	
	if(a>=i&&b<=j)
		return tree[node].ma;
	
	int q1=query2(node*2,a,(a+b)/2,i,j);
	int q2=query2(node*2+1,(a+b)/2+1,b,i,j);
	
	int answer=max(q1,q2);
	
	return answer;
}




int main() {
	
	ll x,y,n,q;
	cin>>n>>q;
	
	int i,j;
	
	for(i=0;i<n;i++)
	 cin>>arr[i];
	
	build_tree(1,0,n-1);
	
	while(q--)
	{
		cin>>x>>y;
		int ans=query(1,0,n-1,x,y);
		int ans2=query2(1,0,n-1,x,y);  
		cout<<(ans2-ans)<<endl;
	}
	
	return 0;
}