#include <iostream>
using namespace std;
struct pai{
	int max;
	int min;
	pai(int a,int b){
		max= a;
		min = b;
		}
	};
struct node{
	node* lnode;
	node* rnode;
	int left;
	int right;
	int max;
	int min;
	int val;
	node(){
		lnode = NULL;
		rnode = NULL;
		}
	};

void create(node* root,int a[],int l,int r){
	if(l==r){
		root->left = l;
		root->right = r;
		root->val = a[l];
		root->min = a[l];
		root->max = a[r];
		return;
		}
	node* lnode = new node();
	node* rnode = new node();
	create(lnode,a,l,(l+r)/2);
	create(rnode,a,(l+r)/2 + 1 , r);
	root->max = max(lnode->max,rnode->max);
	root->min = min(lnode->min,rnode->min);
	root->left = l;
	root->right = r;
	root->lnode = lnode;
	root->rnode = rnode;
	return;
	}

pai find(node* root,int l,int r){
	if(root->left == l && root->right==r){
		return pai(root->max,root->min);
		}
	int mid = (root->left + root->right)/2;	
	//cout<<mid<<endl;
	if(r<=mid){
		pai p1 = find(root->lnode,l,r);
		return p1;		
		}
	if(l<=mid && r>mid){
		pai p1 = find(root->lnode,l,mid);
		pai p2 = find(root->rnode,mid + 1 , r);
		return pai(max(p1.max,p2.max) , min(p1.min,p2.min));
		}
	if(l>mid){
		pai p1 = find(root->rnode,l,r);
		return p1;
		}
	}
int main(){
	int n,m;
	cin>>n>>m;
	int a[n];
	for(int i=0;i<n;i++){
		cin>>a[i];
		}
	node* root = new node();
	create(root,a,0,n-1);
	//cout<<root->lnode->left<<" "<<root->lnode->right<<endl;
	for(int i=0;i<m;i++){
		int g,h;
		cin>>g>>h;
		pai p = find(root,g,h);
		cout<<p.max-p.min<<endl;
		}
	}
