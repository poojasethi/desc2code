#include<bits/stdc++.h>
#define FOR(i,a,n) for(int i=a;i<n;i++)
#define si(x) scanf("%d",&x)
#define sll(x) scanf("%lld",&x)
#define ss(x) scanf("%s",x)
#define pi(x) printf("%d ",x)
#define pll(x) printf("%lld\n",x)
#define ps(x) printf("%s\n",ch);
#define M 1000000007
#define ll long long
#define mp make_pair
#define pb push_back
#define fr first
#define se second
using namespace std;
int arr[300069];
struct segment
{
    int maxi,mini;
}tree[4000069];
segment build(int in,int l,int r)
{
    if(l==r)
    {
        tree[in].mini=tree[in].maxi=arr[l];
        return tree[in];
    }
    int m=(l+r)/2;
    segment left=build(in*2,l,m);
    segment right=build(in*2+1,m+1,r);
    tree[in].maxi=max(left.maxi,right.maxi);
    tree[in].mini=min(left.mini,right.mini);
    return tree[in];
}
segment query(int in,int l,int r,int x,int y)
{
   // printf("%d %d %d %d\n",l,r,x,y);
    if(l==x&&r==y)
        return tree[in];
    int mid=(l+r)/2;
    if(x>mid)
        return query(in*2+1,mid+1,r,x,y);
    if(y<=mid)
        return query(in*2,l,mid,x,y);
    segment yo=query(in*2,l,mid,x,mid);
    segment yoo=query(in*2+1,mid+1,r,mid+1,y);
    segment ans;
    ans.maxi=max(yo.maxi,yoo.maxi);
    ans.mini=min(yo.mini,yoo.mini);
    return ans;
}
int main()
{
    int n,q;
    si(n),si(q);
    FOR(i,1,n+1)
        si(arr[i]);
    build(1,1,n);
    while(q--)
    {
        int x,y;
        si(x),si(y);
        x++,y++;
        segment ans=query(1,1,n,x,y);
     //   printf("yo");
        printf("%d\n",ans.maxi-ans.mini);
    }
    return 0;
}
