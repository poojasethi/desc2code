
/****** BISMILLAH HIR RAHMANIR RAHIM ******/

#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef unsigned int ul;
typedef unsigned long long ull;
typedef vector <int> vi;
typedef map<string,string> mss;
typedef map<int, vector<int> > mvii;
typedef map<int, int> mii;
typedef queue <int> qi;
typedef map <int, vector<string> > mvis;
typedef map <string, vector<int> > mvsi;
typedef vector <string> vs;
typedef pair <int, int> pii;

#define MP make_pair
#define SORT(a) sort (a.begin(), a.end())
#define REVERSE(a) reverse (a.begin(), a.end())
#define ALL(a) a.begin(), a.end()
#define PI acos(-1)
#define ms(x,y) memset (x, y, sizeof (x))
#define INF 2000000000
#define pb push_back
#define MAX 100002
#define debug cout<<"A"<<"\n"
#define prnt(a) cout<<a<<"\n"
#define mod 1000000007LL
#define FOR(i,a,b) for (int i=(a); i<(b); i++)
#define FORr(i,a,b) for (int i=(a); i>=b; i--)
#define itrALL(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define lc ((node)<<1)
#define rc ((node)<<1|1)
#define VecPrnt(v) FOR(j,0,v.size()) cout<<v[j]<<" "; cout<<endl
#define endl "\n"
#define PrintPair(x) cout<<x.first<<" "<<x.second<<endl
#define EPS 1e-12

/* Direction Array */

// int fx[]={1,-1,0,0};
// int fy[]={0,0,1,-1};
// int fx[]={0,0,1,-1,-1,1,-1,1};
// int fy[]={-1,1,0,0,1,1,-1,-1};

template <class T> inline T bigmod(T p,T e,T M)
{
    ll ret = 1;
    for(; e > 0; e >>= 1)
    {
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}

template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}
template <class T> inline T lcm(T a,T b) {a=abs(a);b=abs(b); return (a/gcd(a,b))*b;}
template <class T, class X> inline bool getbit(T a, X i) { T t=1; return ((a&(t<<i))>0);}
template <class T, class X> inline T setbit(T a, X i) { T t=1;return (a|(t<<i)); }
template <class T, class X> inline T resetbit(T a, X i) { T t=1;return (a&(~(t<<i)));}

inline ll power(ll a, ll b)
{
	ll multiply=1;
	FOR(i,0,b)
	{
		multiply*=a;
	}
	return multiply;
}

/****** END OF HEADER ******/

int n, k;
ll cx[205], cy[205], mx[205], my[205];
double dist[205][205];
int matchR[205]; bool seen[205];

double findDistance(int i, int j)
{
	double ret=sqrt((double)(cx[i]-mx[j])*(cx[i]-mx[j])+(cy[i]-my[j])*(cy[i]-my[j]));
	return ret;
}

bool bpm(int u, double d)
{
	// cout<<u<<" "<<d<<endl;
	FOR(i,0,n)
	{
		if(dist[u][i]-d>EPS && !seen[i])
		{
			// cout<<i<<" "<<matchR[i]<<endl;
			seen[i]=true;
			if(matchR[i]<0 || bpm(matchR[i],d))
			{
				matchR[i]=u;
				return true;
			}
		}
	}

	return false;
}

int maxBPM(double d)
{
	ms(matchR,-1);
	int ret=0;

	FOR(i,0,n)
	{
		ms(seen,0);
		if(bpm(i,d)) ret++;
	}

	// prnt(ret);

	return ret;
}

bool Possible(double d)
{
	int now=maxBPM(d);
	if(2*n-now>=k) return true;
	return false;
}

int main()
{
	// ios_base::sync_with_stdio(0); 
	// cin.tie(NULL); cout.tie(NULL);
	// freopen("in.txt","r",stdin);

	scanf("%d%d", &n, &k);

	FOR(i,0,n) scanf("%lld%lld", &cx[i], &cy[i]);
	FOR(i,0,n) scanf("%lld%lld", &mx[i], &my[i]);

	FOR(i,0,n)
	{
		FOR(j,0,n)
		{
			dist[i][j]=findDistance(i,j);
		}
	}

	double low=0, high=1e12;
	double ans=0;

	FOR(i,0,100)
	{
		double mid=(low+high)/2.0;

		// cout<<"mid now: "<<mid<<endl;

		if(Possible(mid))
		{
			ans=mid;
			high=mid;
			// prnt(ans);
		}
		else low=mid;
	}

	printf("%0.12lf\n", ans);

	return 0;
}






