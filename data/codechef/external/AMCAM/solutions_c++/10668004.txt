#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <cmath>
using namespace std;

const int N = 2e2 + 5;

#define next NEXT

int n, k;

pair<double, double> a[N], b[N];

vector<int> e[N << 1];
int visit[N << 1], next[N];

double sqr(double x) {
	return x * x;
}

double dist(pair<double, double> a, pair<double, double> b) {
	return sqrt(sqr(a.first - b.first) + sqr(a.second - b.second));
}


int dfs(int x) {
	for (int i = 0; i < e[x].size(); i++) {
		int y = e[x][i];
		if (!visit[y]) {
			visit[y] = 1;
			if (next[y] == -1 || dfs(next[y])) {
				next[y] = x;
				return true;
			}
		}
	}
	return false;
}

bool check(double mid) {
	for (int i = 0; i < (n << 1); i++) {
		visit[i] = 0;
		next[i] = -1;
		e[i].clear();
	}
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < n; j++) {
			if (dist(a[i], b[j]) > mid) {
				e[i].push_back(j);
				//printf(" %d %d %lf\n", i, j, mid);
			}
		}
	}
	
	int s = 0;
	
	for (int i = 0; i < n; i++) {
		fill(visit, visit + n, 0);
		s += dfs(i);
	}
	//printf("s = %d\n", s);
	return k <= 2 * n - s;
}

int main() {
	scanf("%d %d", &n, &k);
	for (int i = 0; i < n; i++) {
		scanf("%lf %lf", &a[i].first, &a[i].second);
	}
	for (int i = 0; i < n; i++) {
		scanf("%lf %lf", &b[i].first, &b[i].second);
	}
	
	double l = 0, r = 1e9;
	//check(0);
	
	
	for (int times = 0; times <= 100; times++) {
		double mid = (l + r) / 2;
		if (check(mid)) {
			r = mid;
		} else {
			l = mid;
		}
	}
	printf("%.8f\n", l);
	return 0;
}