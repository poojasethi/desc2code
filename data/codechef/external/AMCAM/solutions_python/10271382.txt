/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
/*
	Bina ek bhi WA ke saath kab submit hoga.. ? 
	-> BC Overflow check kar.
	-->
	
	Mathematical Expression	C++ Symbol	Decimal Representation
	pi	M_PI	3.14159265358979323846
	pi/2	M_PI_2	1.57079632679489661923
	pi/4	M_PI_4	0.785398163397448309616
	1/pi	M_1_PI	0.318309886183790671538
	2/pi	M_2_PI	0.636619772367581343076
	2/sqrt(pi)	M_2_SQRTPI	1.12837916709551257390
	sqrt(2)	M_SQRT2	1.41421356237309504880
	1/sqrt(2)	M_SQRT1_2	0.707106781186547524401
	e	M_E	2.71828182845904523536
	log_2(e)	M_LOG2E	1.44269504088896340736
	log_10(e)	M_LOG10E	0.434294481903251827651
	log_e(2)	M_LN2	0.693147180559945309417
	log_e(10)	M_LN10	2.30258509299404568402

	
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scl(x) scanf("%lld",&x)
#define scl2(x,y) scanf("%lld%lld",&x,&y)
#define scl3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
typedef pair<ll,ll> pll;
#define gcd __gcd
#define wl(n) while (n--)
#define debug(x) cout<<"debug->"<<#x<<"::"<<x<<endl
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n"
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n"
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()
const double eps=0.000000000000001 ;
#define MOD 1000000007
typedef long double LF;
typedef double lF;
//-------------
#define MAX 500
#define NIL 0
#define INF (1<<28)
 
vector< int > G[MAX];
int n, m, match[MAX], dist[MAX];
// n: number of nodes on left side, nodes are numbered 1 to n
// m: number of nodes on right side, nodes are numbered n+1 to n+m
// G = NIL[0] 
 
bool bfs() {
    int i, u, v, len;
    queue< int > Q;
    for(i=1; i<=n; i++) {
        if(match[i]==NIL) {
            dist[i] = 0;
            Q.push(i);
        }
        else dist[i] = INF;
    }
    dist[NIL] = INF;
    while(!Q.empty()) {
        u = Q.front(); Q.pop();
        if(u!=NIL) {
            len = G[u].size();
            for(i=0; i<len; i++) {
                v = G[u][i];
                if(dist[match[v]]==INF) {
                    dist[match[v]] = dist[u] + 1;
                    Q.push(match[v]);
                }
            }
        }
    }
    return (dist[NIL]!=INF);
}
 
bool dfs(int u) {
    int i, v, len;
    if(u!=NIL) {
        len = G[u].size();
        for(i=0; i<len; i++) {
            v = G[u][i];
            if(dist[match[v]]==dist[u]+1) {
                if(dfs(match[v])) {
                    match[v] = u;
                    match[u] = v;
                    return true;
                }
            }
        }
        dist[u] = INF;
        return false;
    }
    return true;
}
 
int hopcroft_karp() {
    int matching = 0, i;
    // match[] is assumed NIL for all vertex in G
    while(bfs())
        for(i=1; i<=n; i++)
            if(match[i]==NIL && dfs(i))
                matching++;
    return matching;
}

ll cdist(pll a,pll b)
{
	return (ll)(a.fi-b.fi)*(a.fi-b.fi)+(ll)(a.se-b.se)*(a.se-b.se);
}
pair<ll,ll> coor[2][210];
ll dis[210][210]={0};
void reset(int n)
{
	int i;
	for (i=0;i<=2*n+1;i++)
	{	G[i].clear();
		dist[i]=0;
		match[i]=0;
	}
}
int main()
{
	
	int n,k;

	sc2(n,k);
	int i,j;
	for(i=1;i<=n;i++)
	{
		scl2(coor[0][i].fi,coor[0][i].se);
	}		
		
	for (i=1;i<=n;i++)
	{
		scl2(coor[1][i].fi,coor[1][i].se);
	}
	for (i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			dis[i][j]=cdist(coor[0][i],coor[1][j]);
		}
	}
	//debug(n);
	ll st=1,en=20000000000LL+1LL,mid;
	while(st<en)
	{
		mid=(st+en)>>1;
		//printf("checking for.. %lld, i.e :%.11lf\n",mid,(double)sqrtl(mid));
		reset(n);
		for (i=1;i<=n;i++)
		{
			for (j=1;j<=n;j++)
			{
				if (dis[i][j]>mid)
				{
					G[i].pb(j+n);
				}
			}
		}
		::n=n;
		::m=n;
		int mm=hopcroft_karp();
		if (2*n-mm>=k)
		{
			en=mid;
		}
		else st=mid+1;
	}
	printf("%.15lf\n",(double)sqrtl(st));
	return 0;

}