import java.io.IOException;
import java.io.InputStream;
import java.util.InputMismatchException;

/**
 *
 * @author Suraj Singh
 */
class GardenArea {
    public static void main(String arfs[])
    {
        InputReader3 r = new InputReader3(System.in);
        int p,l;
        long b;
        p = r.nextInt();
        l = r.nextInt();
        b = (long) ((p-2*l)/2*1f);
        //System.out.printf("%f",b*l);
        System.out.println(b*l);
    }
}
class InputReader3 {
 
private InputStream stream;
private byte[] buf = new byte[1024];
private int curChar;
private int numChars;
 
public InputReader3(InputStream stream) {
this.stream = stream;
}
 
public int read() {
if (numChars == -1)
throw new InputMismatchException();
if (curChar >= numChars) {
curChar = 0;
try {
numChars = stream.read(buf);
} catch (IOException e) {
throw new InputMismatchException();
}
if (numChars <= 0)
return -1;
}
return buf[curChar++];
}
 
public int nextInt() {
int c = read();
while (isSpaceChar(c))
c = read();
int sgn = 1;
if (c == '-') {
sgn = -1;
c = read();
}
int res = 0;
do {
if (c < '0' || c > '9')
throw new InputMismatchException();
res *= 10;
res += c & 15;
c = read();
} while (!isSpaceChar(c));
return res * sgn;
}
 
public String next() {
int c = read();
while (isSpaceChar(c))
c = read();
StringBuilder res = new StringBuilder();
do {
res.appendCodePoint(c);
c = read();
} while (!isSpaceChar(c));
return res.toString();
}
 
public String nextLine()
{
    int c = read();
    while(isSpaceChar(c))
        c = read();
    StringBuilder res = new StringBuilder();
    do
    {
       res.appendCodePoint(c); 
       c = read();
    }while(c != '\n' && c != '\r' && c != -1);
    if(res.length()==0)
        return null;
    return res.toString();
}
 
public static boolean isSpaceChar(int c) {
return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
}
 
} 