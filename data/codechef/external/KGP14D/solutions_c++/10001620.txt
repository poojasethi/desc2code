#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
#define llu unsigned long long int
#define all(v) v.begin(),v.end()
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define si(n) scanf("%d",&n)
#define slli(n) scanf("%lld",&n);
#define ss(n) scanf("%s",n);
using namespace std;
typedef long long int LL;

pair<int , int > ppp[110];
int dp[104][(24*70)] , N;


int func(int index , int start_time)
{


	if(index==0)
		return 0;

	if(dp[index][start_time]!=-1)
		return dp[index][start_time];

	if(ppp[index].first==-1)	//assign ith candidate for the interview
	{
		dp[index][start_time] =  1  + func(index-1 , start_time);
	}


	if(start_time + ppp[index].second +30 <= ppp[index].first)	//assign ith candidate for the interview
		dp[index][start_time] = max(dp[index][start_time] , 1 + func(index-1 , start_time + ppp[index].second));

	//do not assign ith candidate for the interview
	dp[index][start_time] = max(dp[index][start_time] , func(index-1 , start_time));

	return dp[index][start_time];

}


int main()
{
int test;
si(test);

for(int o=1;o<=test;o++)
{
memset(dp , -1 , sizeof(dp));
si(N);
for(int i=1;i<=N;i++)
	si(ppp[i].second);
for(int i=1;i<=N;i++){
	si(ppp[i].first);
}
sort(ppp + 1 , ppp + N + 1);
//but we have to sort in decreasing order
reverse(ppp+1 , ppp+N+1);

// cout  << "Case " << o << << N - func(N , 0) << endl;
printf("Case %d: %d\n",o ,  N - func(N , 0));
}

return 0;
}












