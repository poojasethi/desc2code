//codechef
#include <bits/stdc++.h>

using namespace std;

int dp[1000][1000] = {0}, cumu[1000][1000] = {0};

int solve(pair<int, int> *cand, int n){
    dp[0][0] = 0; cumu[0][0] = 0;
    for(int i = 0; i < n; i++) dp[i][0] = 0, cumu[i][0] = 0;
	for (int i = 1; i <= n; i++){
		for (int j = 1; j <= i; j++){
            int temp = dp[i-1][j-1];
            if(cumu[i-1][j-1] + cand[i-1].first > cand[i-1].second) temp += 1;
			if(temp < dp[i-1][j]){
                if(temp == dp[i-1][j-1]) cumu[i][j] = cumu[i-1][j-1]  + cand[i-1].first;
                else cumu[i][j] = cumu[i-1][j-1];
                dp[i][j] = temp;
			}
			else if(temp == dp[i-1][j]){
                dp[i][j] = temp;
                cumu[i][j] = (cumu[i-1][j-1] +  cand[i-1].first) < cumu[i-1][j] ? (cumu[i-1][j-1] + cand[i-1].first) : cumu[i-1][j];
			}
			else{
                dp[i][j] = dp[i-1][j];
                cumu[i][j] = cumu[i-1][j];
			}
		}
	}
	int mini = 0;
	for (int i = 1; i <= n; i++){
		for (int j = 1; j <= i; j++){
            if(j-dp[i][j] > mini) mini = j - dp[i][j];
            //cout << dp[i][j] << " " << cumu[i][j] << " ";
		} //cout << endl;
	}
	return n-mini;
}
struct compare{
    bool operator()(const pair<int, int> &a, const pair<int, int> &b){
        return a.second < b.second;
    }
};
int main(){
	int t; cin >> t; int counts = 0;
	while(t--){
        counts += 1; cout << "Case " << counts << ": ";
		int n; cin >> n;
		pair<int, int> cand[n];
		for(int i = 0; i < n; i++) cin >> cand[i].first;
		for(int i = 0; i <= n; i++)
            for(int j = 0; j <= n; j++)
                dp[i][j] = INT_MAX, cumu[i][j] = INT_MAX;
		for(int i = 0; i < n; i++) {
            int a; cin >> a;
            if(a != -1) cand[i].second = a - 30;
            else cand[i].second = INT_MAX;
		}
		sort(cand, cand + n, compare());
		cout << solve(cand,n ) << endl;
	}
}
