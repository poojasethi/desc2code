#include<bits/stdc++.h>
#define ii pair<int,int>
#define f first
#define s second
using namespace std;
bool cmp(ii a,ii b)
{
	if(a.f<b.f)
		return true;
	return false;
}

inline void fsi(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;

    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());

    if(c=='-') {
    	neg = 1;
    	c = getchar_unlocked();
    }

    for(; c>47 && c<58 ; c = getchar_unlocked()) {
    	x = (x<<1) + (x<<3) + c - 48;
    }

    if(neg)
    	x = -x;
}

int main()
{
	int t,n,k,i,j,l;
	scanf("%d",&t);
	while(t--)
	{
		fsi(n);fsi(l);
		vector<ii > v(n+5);
		for(i=1;i<=n;++i)
			fsi(v[i].f);
		for(i=1;i<=n;++i)
			fsi(v[i].s);
		
		sort(v.begin()+1,v.begin()+n+1,cmp);
		
		
		
		int sum[n+5];
		sum[0]=0;
		
		for(i=1;i<=n;++i)
		{
			sum[i]=sum[i-1]+v[i].f;
			
		}
		
		int cost[n+5][n+5]={0};
		for(i=1;i<=n;++i)
		{
			for(j=i;j<=n;++j)
			{
				cost[i][j]=INT_MAX;
				for(k=i;k<=j;++k)
				{
					cost[i][j]=min(cost[i][j],sum[j]-sum[k]-(j-k)*v[k].f+(k-i)*v[k].f-(sum[k-1]-sum[i-1])+(j-i)*v[k].s);
				}	
			}
		}
		
		int dp[n+5][l+5];
		for(i=0;i<=n;++i)
		{
			dp[i][0]=0;
			dp[i][1]=cost[1][i];
		}
		for(i=0;i<=l;++i)
			dp[0][i]=0;
		for(i=1;i<=n;++i)
		{
			for(j=2;j<=l&&j<=i;++j)
			{
				dp[i][j]=INT_MAX;
				for(k=j-1;k<i;++k)
				{
					dp[i][j]=min(dp[i][j],dp[k][j-1]+cost[k+1][i]);
				}
			}
		
		}
		printf("%d\n",dp[n][l]);
	}

	return 0;
}