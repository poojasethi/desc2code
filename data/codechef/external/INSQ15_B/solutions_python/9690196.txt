#include <bits/stdc++.h>

#define REP(i, a) for( int i = 0; i < a; i++ )
#define RFOR(i,x,y) for(int i = x; i>= y; i--)
#define FOR(i,x,y) for (int i = x; i < y; i++)
#define ITFOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define VE vector <int>
#define mset(A,x) memset(A, x, sizeof A)
#define PB push_back
#define ones(x) __builtin_popcount(x)
#define cua(x) (x)*(x)
#define debug(x) cout <<#x << " = " << x << endl
#define adebug(x,n) cout <<#x<<endl; REP(i,n)cout<<x[i]<<char(i+1==n?10:32)
#define mdebug(x,m,n) cout <<#x<<endl; REP(i,m)REP(j,n)cout<<x[i][j]<<char(j+1==n?10:32)
#define LSOne(S) (S&(-S))

using namespace std;

#define ll long long
#define lli long long int
#define PI acos(-1.0)
#define ii pair<int,int>
#define inf_ll (((1LL<<50)-1)<<1)+1
#define inf_i (1<<30)-1

struct node
{
	int v,fee;
	bool operator<(node p)const
	{
		return v<p.v;
	}
};

lli costo[205][205],memo[205][205];
int t,n,c;

lli DP(int capi,int pos)
{
	if(capi==c)
	{
		if(pos==n)
			return 0ll;
		return inf_ll;
	}
	if(memo[capi][pos]!=-1ll)
		return memo[capi][pos];
	lli best=inf_ll;
	FOR(i,pos,n)
		best=min(best,costo[pos][i]+DP(capi+1,i+1));
	return memo[capi][pos]=best;
}

int main() {
	// your code goes here
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&n,&c);
		node arr[205];
		REP(i,n)
			scanf("%d",&arr[i].v);
		REP(i,n)
			scanf("%d",&arr[i].fee);
		sort(arr,arr+n);
		REP(i,n)
		{
			FOR(j,i,n)
			{
				lli s=(0ll+j-i)*(arr[i].fee);
				FOR(k,i+1,j+1)
					s+=(0ll+arr[k].v-arr[i].v);
				costo[i][j]=s;
				FOR(k,i+1,j+1)
				{
					s-=(0ll+j-i)*(arr[k-1].fee);
					s+=(0ll+j-i)*(arr[k].fee);
					s-=(0ll+j-k+1)*(arr[k].v-arr[k-1].v);
					s+=(0ll+k-i)*(arr[k].v-arr[k-1].v);
					costo[i][j]=min(costo[i][j],s);
				}
			}
		}
		mset(memo,-1ll);
		//mdebug(costo,n,n);
		printf("%lld\n",DP(0,0));
	}
	return 0;
}