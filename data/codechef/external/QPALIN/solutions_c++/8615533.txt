#include <stdio.h>
#include <string.h>
#define SET(p) memset(p, -1, sizeof(p))
#define READ freopen("input.cpp", "r", stdin);
#define WRITE(f) freopen(f, "w", stdout)
#define getcx getchar_unlocked
#define MX 100

using namespace std;

inline int fi (){//fast input function
    register int c = getcx();
    int x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = getcx());
    if(c=='-') {neg=1;c=getcx();}
    for(;c>47 && c<58;c = getcx()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
    return x;
}


template< class T > T _max(T a, T b) { return (!(a < b) ? a : b); }

const int N =1e5;
int n;
int t[2*N];

void build()
{
    for (int i = n - 1; i > 0; i--)
        t[i] = t[2 * i] ^ t[2 * i + 1];
}


void modify(int p,int value){
	for (t[p+=n]=value; p > 1 ; p>>=1)
		t[p>>1] = *(t+p) ^ *(t+(p^1));
}

int query(int l,int r){
	int res = 0;
	for (l+=n,r+=n; l<r;l>>=1,r>>=1)
	{
		if (l&1)
		{
			res = res ^ t[l] ;
			l++;
		}
		if (r&1)
		{
			r--;
			res = res ^ t[r];
		}
	}
	return res;

}



int main() {
	// READ
	int q,code,pos;
	char d,c;

	scanf("%d\n",&n);

	for (int i = 0; i < n; ++i)
    {
		scanf("%c",&d);
        t[i + n] = 1 << (d - 'a');
    }

	build();

	scanf("%d",&q);

	for (int i = 0; i < q; ++i)
	{
		scanf("%d",&code);

		if (code==1)
		{
			scanf("%d %c\n",&pos,&c);
			modify(pos-1,1 << (c - 'a'));
		}
		else
		{
			int l,r;

			scanf("%d %d",&l,&r);

			int sol = query(l - 1, r);
			// printf("%d\n",sol);

            if (__builtin_popcount(sol) > 1)
                printf("NO\n");
            else
                printf("YES\n");
		}
	}

	return 0;
}
