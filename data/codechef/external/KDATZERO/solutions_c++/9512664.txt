//#include<bits/stdc++.h>
#include<cstdio>
using namespace std;

	int ansfive,anstwo,a[100000],tree5[400001],tree2[400001],lazy5[400001],lazy2[400001],a5[2001]={0},a2[2001]={0};

	void preProcess(){
		int i,a;
		for(i=1;i<2001;i++){
			a=i;
			while((a&1)==0){
				a2[i]++;a>>=1;
			}
			while(a%5==0){
				a5[i]++;a/=5;
			}
		}
	}

	void initialise(int node,int b,int e){
		int c=node<<1;
		if(b==e){
			tree5[node]=a5[a[b]];tree2[node]=a2[a[b]];
			return;
		}
		initialise(c,b,(b+e)>>1);
		initialise(c+1,((b+e)>>1)+1,e);
		tree5[node]=tree5[c]+tree5[c+1];
		tree2[node]=tree2[c]+tree2[c+1];
	}

	void update(int node,int b,int e,int i,int j,int five,int two){
		int c=node<<1;
		if(lazy5[node]!=0||lazy2[node]!=0){
			tree5[node]+=lazy5[node]*(e-b+1);
			tree2[node]+=lazy2[node]*(e-b+1);
			if(b!=e){
				lazy5[c]+=lazy5[node];lazy2[c]+=lazy2[node];
				lazy5[c+1]+=lazy5[node];lazy2[c+1]+=lazy2[node];
			}
			lazy5[node]=lazy2[node]=0;
		}
		if(b>j||e<i) return;
		if(b>=i&&e<=j){
			tree5[node]+=five*(e-b+1);tree2[node]+=two*(e-b+1);
			if(b!=e){
				lazy5[c]+=five;lazy2[c]+=two;
				lazy5[c+1]+=five;lazy2[c+1]+=two;
			}
			return;
		}
		update(c,b,(b+e)>>1,i,j,five,two);
		update(c+1,((b+e)>>1)+1,e,i,j,five,two);
		tree5[node]=tree5[c]+tree5[c+1];
		tree2[node]=tree2[c]+tree2[c+1];
	}

	void query(int node,int b,int e,int i,int j){
		int c=node<<1;
		if(lazy5[node]!=0||lazy2[node]!=0){
			tree5[node]+=lazy5[node]*(e-b+1);
			tree2[node]+=lazy2[node]*(e-b+1);
			if(b!=e){
				lazy5[c]+=lazy5[node];lazy2[c]+=lazy2[node];
				lazy5[c+1]+=lazy5[node];lazy2[c+1]+=lazy2[node];
			}
			lazy5[node]=lazy2[node]=0;
		}
		if(b>j||e<i) return;
		if(b>=i&&e<=j){
		ansfive+=tree5[node];anstwo+=tree2[node];return;
		}
		query(c,b,(b+e)>>1,i,j);
		query(c+1,((b+e)>>1)+1,e,i,j);
	}


int main(){
    int t,i,n,q,ch,l,r,b=0,e,node=1,v;
    preProcess();
    scanf("%d",&t);
    while(t-->0){
    	scanf("%d",&n);scanf("%d",&q);e=n-1;

       	n=4*n+1;
       	for(i=0;i<n;i++) tree5[i]=tree2[i]=lazy5[i]=lazy2[i]=0;
    	n--;n>>=2;
    	for(i=0;i<n;i++) scanf("%d",&a[i]);
    	initialise(node,b,e);

    	while(q-->0){
    		scanf("%d %d %d",&ch,&l,&r);l--;r--;
    		if(ch==1){
    			ansfive=0;anstwo=0;
    			query(node, b, e, l, r);
    			printf("%d\n",ansfive<anstwo?ansfive:anstwo);
    		}
    		else{
    			scanf("%d",&v);
    			update(node, b, e, l, r, a5[v], a2[v]);
    		}
    	}
    }
    return 0;
}
