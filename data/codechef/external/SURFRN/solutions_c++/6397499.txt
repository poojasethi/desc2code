//shortest path ,dijktras ,dfs when equal weights of edges
#include<bits/stdc++.h>
using namespace std;
vector<int > G[105];
int dist[505],n,src,dest;
void dfs(int u,int par,int d)
{
      dist[u]=d;
      for(int i=0;i<G[u].size();i++)
      {
            int v=G[u][i];
            if(v!=par)
            dfs(v,u,d+1);
      }
}
void solve()
{
     // int n,src,dest;
      cin>>n>>src>>dest;
      src--;
      dest--;
      for(int i=0;i<n;i++)
      {
            G[i].clear();
            dist[i]=INT_MAX;
      }
      for(int i=0;i<n-1;i++)
      {
            int u,v;
            cin>>u>>v;
             u--;
            v--;
           G[u].push_back(v);
           G[v].push_back(u);
      }
      dfs(src,-1,0);
}

int main()
{
      int t;
      cin>>t;
      while(t--)
      {
            solve();
            cout<<dist[dest]<<endl;
      }
      return 0;
}
