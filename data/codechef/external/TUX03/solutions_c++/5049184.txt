// karan singh

//#include <bits/stdc++.h>
#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>



// Typedef variables

#define l int
#define ll long long int
#define c char
#define f float
#define lf double 
#define r return 0 ;

// Input Macros

#define s(x) scanf("%d",&x);
#define sl(x) scanf("%lld",&x);
#define sd(x,y) scanf("%d %d",&x,&y);

// Output Macros

#define p(x) printf("%d\n",x);
#define pl(x) printf("%lld\n",x);
#define pd(x) printf("%d %d\n",x,y);

// Shortcuts

#define rep(i,a,n) for(int i = a ; i<=n ; i++)
#define repi(i,n,a) for(int i = n ; i>=a ; i--)
#define tc() int t ; scanf("%d",&t); while(t--)

// Some Functions

#define Fill(a,x) memset(a,x,sizeof(a));
#define Sz(a,x) x = (int)a.size() ; 

// Useful Constants 

#define INF 1e9
#define LINF 1e18
#define MOD (int)1e9+7	

#define TRACE

#ifdef TRACE

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;

#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else
 
#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)
 
#endif

using namespace std ;

// Your Code Goes here :-)

l team[16] = {0} ;

l main()
{

/*  
    #ifndef ONLINE_JUDGE
	freopen("ip.txt","r",stdin);
	freopen("op.txt","w",stdout);
    #endif
*/   

	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	tc()
	{
		l counter = 0  , maxi = -4 , mini = INF , k = 1 , minimum = INF , index = 1 ;
		while(1)
		{
			 l x ;
             s(x) 
             if(maxi<x) maxi = x ;
             if(mini>x) mini = x ;
             counter++;
             if(counter%15==0)
             {
             	team[k++]=(maxi-mini);
             	maxi =  -4 ;
             	mini = INF ;
             }
             if(counter==150)
             	break;
		}
		rep(i,1,k-1)
		{
		   if(minimum>=team[i])
		   {
		   	minimum = team[i] ;
		   	index = i ;
		   }	
		}
        printf("%d %d\n",index,minimum);	   
	}
	r 
}
