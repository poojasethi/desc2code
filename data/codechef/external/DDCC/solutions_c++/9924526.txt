#include <iostream>
#include <algorithm>
#include <math.h>
#include <stdio.h>
using namespace std;
struct s
{
	int l,r,ind;
}q[200000];
int block;
bool comp(struct s a,struct s b)
{
	if(a.l/block!=b.l/block)
		return a.l/block<b.l/block;
	else
		return a.r<b.r;
}

int main() 
{
 
	long long int  currentL,currentR,i,j,c,a[200000],ans[200000];
	int n,d;
	scanf("%d%d",&n,&d);
	block=n/sqrt(n);
	for(i=0;i<n;i++)
		scanf("%lld",&a[i]);
	currentL=currentR=c=0;
	for(i=0;i<d;i++)
	{
		scanf("%d%d",&q[i].l,&q[i].r);
		q[i].l--;
		q[i].r--;
		q[i].ind=i;
	}
	sort(q,q+d,comp);
	int count[1000001];
		c=0;
	for(i=0;i<d;i++)
	{
		while(currentL<q[i].l)
		{
			c-=(2*count[a[currentL]]-1)*a[currentL];
			count[a[currentL]]--;
			currentL++;
		}
		while(currentL>q[i].l)
		{
			c+=(2*count[a[currentL-1]]+1)*a[currentL-1];
			count[a[currentL-1]]++;
		
			currentL--;
		}
		while(currentR<=q[i].r)
		{
				c+=(2*count[a[currentR]]+1)*a[currentR];
			count[a[currentR]]++;
			currentR++;
		}
		while(currentR>q[i].r+1)
		{
			c-=(2*count[a[currentR-1]]-1)*a[currentR-1];
			count[a[currentR-1]]--;
			currentR--;
		}
		ans[q[i].ind]=c;
	}
	for(i=0;i<d;i++)
		printf("%lld\n",ans[i]);
	return 0;
}