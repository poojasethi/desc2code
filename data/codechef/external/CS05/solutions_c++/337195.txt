/* roman.cpp Roman Numerals problem in peer section of
Codechef
i=1 v=5 x=10 l=50 c=100
 */
#include<cstdio>
using namespace std;
#define SIZE 101

void fillnumber(int n,int &i,int &v,int &x,int &l,int &c)
{
i=v=x=l=c=0;
if(n>=1&&n<=5)
	{
	if(n==4) {i+=1,v+=1;return;}
	if(n==5){v+=1;return;}
	i+=n;return;
	}
else if(n>=6&&n<=10)
	{
	if(n==9){i+=1,x+=1;return;}
	if(n==10){x+=1;return;}
	v+=1; i+=(n-5);
	}
else if(n>=11&&n<100)
	{
	int dig=n%10;
	{	
		if(dig==4){i+=1,v+=1;}
		else if(dig==9){i+=1,x+=1;}
		else if(dig<4){i+=dig;}
		else if(dig>=5){v+=1;i+=(dig-5);}
	}
	dig = n/10;
	if(dig==4){x+=1,l+=1;}
	//else if(dig==5){l+=1;}
	else if(dig==9){x+=1;c+=1;}
	else if(dig<4){x+=dig;}
	else if(dig>=5){l+=1;x+=dig-5;}
	}
else if(n==100)
	{
	c+=1;
	}
}

int in[SIZE],vn[SIZE],xn[SIZE],ln[SIZE],cn[SIZE];
void compute()
{
int low=1,hi=100;
int i,v,x,l,c;
in[0]=vn[0]=xn[0]=ln[0]=cn[0]=0;
for(int j=low;j<=hi;j++)
	{
	fillnumber(j,i,v,x,l,c);
	in[j]=i+in[j-1],vn[j]=v+vn[j-1],xn[j]=x+xn[j-1],ln[j]=l+ln[j-1],cn[j]=c+cn[j-1];
	}
}

int main()
{
compute();
int n;
scanf("%d",&n);
while(n)
	{
	printf("%d %d %d %d %d\n",in[n],vn[n],xn[n],ln[n],cn[n]);
	scanf("%d",&n);
	}
}