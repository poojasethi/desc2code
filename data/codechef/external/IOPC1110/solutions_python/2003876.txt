#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<algorithm>
#include<sstream>
#include<string>
#include<string.h>
#include<deque>
#include<vector>
#include<stack>
#include<queue>
#include<math.h>
#include<map>
#include<set>

using namespace std;

typedef long long LL;
typedef pair<int,int> pii;

double PI = acos(-1);
double EPS = 1e-7;
int INF = 1000000000;
int MAXINT = 2147483647;
LL INFLL = 1000000000000000000LL;
LL MAXLL = 9223372036854775807LL;

#define fi first
#define se second
#define mp make_pair
#define pb push_back

#define SIZE(a) (int)a.size()
#define ALL(a) a.begin(),a.end()
#define RESET(a,b) memset(a,b,sizeof(a))
#define FOR(a,b,c) for (int (a)=(b); (a)<=(c); (a)++)
#define FORD(a,b,c) for (int (a)=(b); (a)>=(c); (a)--)
#define FORIT(a,b) for (__typeof((b).begin()) a=(b).begin(); a!=(b).end(); (a)++)
#define MIN(a, b) (a) = min((a), (b))
#define MAX(a, b) (a) = max((a), (b))
#define PAUSE system("pause")

#define input(in) freopen(in,"r",stdin)
#define output(out) freopen(out,"w",stdout)

pii M[8] = {mp(0,1),mp(1,0),mp(-1,0),mp(0,-1),mp(-1,1),mp(-1,-1),mp(1,-1),mp(1,1)};

/*\   \
\   \*/


LL A[50009],P[50009],C,N;

int main()
{
	LL t;
	scanf("%lld",&t);
    while(t--)
    {
    	A[0]=0;
    	scanf("%lld%lld",&N,&C);
    	for(LL i=1;i<=N;i++)
    	{
    		scanf("%lld",&A[i]);
   		}
   		for(LL i=0;i<N;i++)
    	{
    		scanf("%lld",&P[i]);
   		}
   		P[N]=0;
   		
   		LL total =0,fuel=0;
   		FOR(now,1,N)
        {
        	LL k = now,buy=now-1;
        	LL dist = A[now]-A[now-1];
        	LL base = dist;
        	while( k<N && C >= base )
        	{
        		if(P[k]<=P[now-1]) break;
       			base += A[k+1]-A[k];
        		k++;
        	}
        	
        		
        	if( C < base )
       	 		base=C;
 	 		
 	 		base -= fuel;

 	 		if(base>0)
 	 		{
        		total += P[buy]*base;
   		        fuel = base + fuel - dist;
   		    }
   		    else fuel -= dist;
        }
      
       
        printf("%lld\n",total);
    }
}