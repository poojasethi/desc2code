#include<bits/stdc++.h>
using namespace std;
vector<int> G[1000];
int dist[1000];
bool visit[1000];
void dfs(int u,int v,int d)
{
    visit[u]=true;
      //dist[u]=d;
      if(u==v)
        cout<<d<<endl;
      for(int i=0;i<G[u].size();i++)
      {
            int x=G[u][i];
            if(!visit[x])
            dfs(x,v,d+1);
      }
}
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,f;
        cin>>n>>f;
        string s;
        for(int i=0;i<1000;i++)

        G[i].clear();
        for(int i=0;i<n;i++)
        {
            cin>>s;
            for(int j=0;j<n;j++)
            {
                if(s[j]=='1')
                {
                    G[i].push_back(j);
                }
            }
        }
        /*
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<G[i].size();j++)
            {
                cout<<G[i][j]<<" ";
            }
            cout<<endl;
        }
        */
       memset(visit,false,sizeof visit);
        dfs(0,f,0);
       // cout<<dist[f-1]<<endl;
    }
}
