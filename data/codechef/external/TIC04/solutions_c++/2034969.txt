#include<stdio.h>
#include<iostream>
#include<string.h>
#include<math.h>
#include<algorithm>
#include<vector>
#define posD(a,b) a-b+13
using namespace std;
int *board;
bool *colUsed,*lDiag,*rDiag;
int cnt=0,mx=0;
void checker(int r,int rCurr)
{
	if(r == rCurr)
	{
		for(int i=0;i<r;i++)
		{
			for(int j=0;j<r;j++)
			printf("%c%c",j==board[i]?'Q':'-',j==r-1?'\n':'\t');
		}
		printf("\n");
		cnt++;
		return;
	}
	for(int i=0;i<r;i++)
	{
		board[rCurr]=i;
		if(!colUsed[i] && !lDiag[i+rCurr] && !rDiag[posD(i,rCurr)])
		{
		colUsed[i]=true;
		lDiag[i+rCurr]=true;
		rDiag[posD(i,rCurr)]=true;
		checker(r,rCurr+1);
		colUsed[i]=false;
		lDiag[i+rCurr]=false;
		rDiag[posD(i,rCurr)]=false;
		}
	}
}
int main()
{
	int r;
	
	while(cin>>r)
	{
	cnt=0;
	board=new int[r];
	colUsed=new bool[r];
	lDiag=new bool[32];
	rDiag=new bool[32];
	for(int i=0;i<r;i++)
	{
		colUsed[i]=false;
		lDiag[i]=rDiag[i]=lDiag[13+i]=rDiag[13+i]=false;
	}
	checker(r,0);
	if(cnt==0)
	printf("Not Possible\n\n");
	delete [] board;
	delete [] colUsed;
	delete [] lDiag;
	delete [] rDiag;
	}
	return 0;
}
