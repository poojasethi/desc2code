// TIC04 - n Queens. v2.
#include <stdio.h>
using namespace std;

const int M = 8;
int row[M], n;

bool safe(int x, int y) {
    for(int i = 1; i <= y; ++i)
        if (row[y - i] == x || row[y - i] == x - i || row[y - i] == x + i) return false;
    return true;
}

void find_solution(int y) {
	for(int x = 0; x < n; ++x)
		if(safe(row[y - 1] = x, y - 1))
			if(y < n) find_solution(y + 1);
        else
            for(int j = 0; j < n; printf(j == n-1 ? "\n\n" : "\n"), ++j)
                for(int i = 0; i < n; printf(i == row[j] ? "Q\t" : "-\t"), ++i);
}

int main() {
    while(scanf("%d", &n) > 0)
        if(n < 4)
            if(n == 1) printf("Q\n\n");
            else printf("Not Possible\n");
        else
            find_solution(1);
    return 0;
}