#include<iostream>
#include<algorithm>

using namespace std;
int cn =0;
bool check( bool a[][100], int n, bool col[], int x, int y )
{
	if ( col[y] )
	return false;
	int i;
	for ( i = 1; x - i > 0 && y - i > 0; i++ )
	{
		if ( a[x-i][y-i] )
		return false;
	}
	for ( i = 1; x + i <= n && y + i <= n; i++ )
	{
		if ( a[x+i][y+i])
		return false;
	}
	for ( i = 1; x + i <= n && y - i > 0;i++ )
	{
		if ( a[x+i][y-i])
		return false;
	}
	for ( i = 1; x - i > 0 && y + i <= n; i++ )
	{
		if (a[x-i][y+i] )
		return false;
	}
	return true;
}
void f ( bool a[][100], int n,bool col[], int x, int y )
{
	if ( check(a,n,col,x,y))
	{
		a[x][y]=1;
		col[y]=1;
		if ( x == n )
		{
		//	cn++;
			for ( int i = 1; i <= n; i++ )
			{
				for (int j = 1; j <= n; j++ )
				{
					if ( a[i][j])
				cout << "Q\t";
					else cout<<"-\t";
				}
				cout << endl;
			}
			cout << endl;
	}
		for ( int i = 1; i <= n; i++ )
		{
			f(a,n,col,x+1,i);
		}
		a[x][y]=0;
		col[y]=0;
	}
}
int main()
{
	int n;

	while(cin >> n)
	{
	if ( n == 1 )
	cout << "Q" << endl;

	else if ( n < 4 )
	cout << "Not Possible"<<endl;
	else
	{
	bool a[100][100];
	bool col[100];
	for ( int i = 1; i <= n; i++ )
	{
		col[i]=false;
		for (int j = 1; j <= n; j++ )
		{
			a[i][j]=false;
		}
	}
	for ( int i = 1; i <= n; i++ )
	{
	 f(a,n,col,1,i);
	}
	}
	}
//	cout<<cn<<endl;
	return 0;
}
