#include<stdio.h>
#include<stdlib.h>

int **p;
int n;

int ways(int i,int j)
{
	int w=0;
	p[i][j]=1;
	
	if(i==0)
	{
		if(j==0)
		{
			if(!p[0][1])	
				w+=ways(0,1);
			if(!p[1][0])
				w+=ways(1,0);
		}	
		else if(j==n-1)
		{
			if(!p[0][n-2])
				w+=ways(0,n-2);
			if(!p[1][n-1])
				w+=ways(1,n-1);
		}
		else
		{
			if(!p[0][j-1])
				w+=ways(0,j-1);
			if(!p[0][j+1])
				w+=ways(0,j+1);
			if(!p[1][j])
				w+=ways(1,j);
		}
	}
	else if(i==n-1)
	{
		if(j==0)
		{
			if(!p[n-1][1])	
				w+=ways(n-1,1);
			if(!p[n-2][0])
				w+=ways(n-2,0);
		}	
		else if(j==n-1)
		{
			p[i][j]=0;
			return 1;
		}
		else
		{
			if(!p[n-1][j-1])
				w+=ways(n-1,j-1);
			if(!p[n-1][j+1])
				w+=ways(n-1,j+1);
			if(!p[n-2][j])
				w+=ways(n-2,j);
		}
	}
	else
	{
		if(j==0)
		{
			if(!p[i][1])	
				w+=ways(i,1);
			if(!p[i-1][0])
				w+=ways(i-1,0);
			if(!p[i+1][0])
				w+=ways(i+1,0);
		}	
		else if(j==n-1)
		{
			if(!p[i-1][n-1])
				w+=ways(i-1,n-1);
			if(!p[i+1][n-1])
				w+=ways(i+1,n-1);
			if(!p[i][n-2])
				w+=ways(i,n-2);
		}
		else
		{
			if(!p[i][j-1])
				w+=ways(i,j-1);
			if(!p[i][j+1])
				w+=ways(i,j+1);
			if(!p[i-1][j])
				w+=ways(i-1,j);
			if(!p[i+1][j])
				w+=ways(i+1,j);
		}
	}
	p[i][j]=0;
	return w;
}

int main()
{
	int i,j;
	
	scanf("%d",&n);
	p=(int**)malloc(n*sizeof(int*));
	for(i=0;i<n;i++)
	{
		p[i]=(int*)malloc(n*sizeof(int));
		for(j=0;j<n;j++)
			scanf("%d",&p[i][j]);
	}
	printf("%d",ways(0,0));
	return 0;
}