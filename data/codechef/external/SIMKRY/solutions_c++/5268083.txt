//Aayush Agarwal

#include<bits/stdc++.h>
using namespace std;

#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n")
#define ll long long int
#define ull unsigned long long int
#define MOD 1000000009
#define INF 2000000000
#define two(X) (1<<(X))
#define twoL(X) (((int64)(1))<<(X))
#define contain(S,X) (((S)&two(X))!=0)
#define containL(S,X) (((S)&twoL(X))!=0)
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<ll>::max()
#define lmin numeric_limits<ll>::min()
const double eps=1e-9;
const double PI=2*acos(0.0);
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)

const int N=100005;

int prime[N];
vector<ll>v;vector<ll>v2;ll ans=1;
ll power(ll a,int b)
{
  ll x=1,y=a;
  while(b)
  {
    if(b%2)
    x=(x*y)%MOD;
    y=(y*y)%MOD;
    b/=2;
  }
  return x;
}

void pre()
{ 
  memset(prime,0,sizeof(prime));
  for(int i=2;i*i<N;i++)
  { 
    if(prime[i]==0)
    for(int j=i*i;j<N;j+=i)
    {
      prime[j]=1;
    }
  }
  for(int i=2;i<N;i++)
  {
    if(prime[i]==0)
    {
      ans=(ans*i)%MOD;
      v.pb(i);
      v2.pb(ans);
    }
  }
}


int main()
{ 
  pre();
  int t;
  //t=1;
  si(t);
  while(t--)
  {
    ll a,b;
    sl(a);
    sl(b);ans=1;
    int up=upper_bound(v.begin(),v.end(),b)-v.begin();
    int low=lower_bound(v.begin(),v.end(),a)-v.begin();
    up--;
    low--;
    if(up>=0 && low>=0)
    ans=v2[up]*power(v2[low],MOD-2);
    else if ( up>=0 )
    ans=v2[up];
    ans%=MOD;
    pl(ans);
    nl;
  }
}