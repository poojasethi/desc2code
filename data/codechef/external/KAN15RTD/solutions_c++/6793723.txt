/* Pranet Verma */
/* Yeh mera template hai. Apna khud banao =_= */
#include <bits/stdc++.h>
using namespace std;
#define infinity (1000000007)
#define ll long long
#define ull unsigned long long
#define pii pair<int,int>
#define ppi pair<pii,int>
#define ppp pair<pii,pii>
#define pip pair<int,pii>
#define pb push_back
#define mp make_pair
#define s(n) scanf("%d",&n)
#define s2(n,m) scanf("%d%d",&n,&m)
#define s3(n,m,l) scanf("%d%d%d",&n,&m,&l)
#define rep(i,n) for(int i=0;i<n;++i)
ll pwr(ll a,ll b,ll mod) {a%=mod;if(a<0)a+=mod;ll ans=1; while(b) {if(b&1) ans=(ans*a)%mod; a=(a*a)%mod; b/=2; } return ans; }
ll pwr(ll a,ll b) {ll ans=1; while(b) {if(b&1) ans*=a; a*=a; b/=2; } return ans; }
ll gcd(ll a,ll b) {while(b) {ll temp=a; a=b; b=temp%b; } return a; }
ll lcm(ll a,ll b) {return (a/gcd(a,b))*b; }
ll modularInverse(ll a,ll m) {/*reminder: make sure m is prime*/ assert(false); return pwr(a,m-2,m); }
const int mod=1000000007;
int mark[50001];
vector<int> g[50001];
int pa[50001];

void dfs(int u,int p)
{
  pa[u]=p;
  for(int i=0;i<g[u].size();++i)
  {
    int v=g[u][i];
    if(v==p)
      continue;
    dfs(v,u);
  }
}

int main()
{
  std::ios::sync_with_stdio(false);
  
  int t;
  cin>>t;
  while(t--)
  {
    int n;
    cin>>n;
    for(int i=1;i<=n;++i)
      mark[i]=0,
      g[i].clear();
    
    for(int i=0;i<n-1;++i)
    {
      int u,v;
      cin>>u>>v;
      g[u].pb(v);
      g[v].pb(u);
    }
    dfs(1,0);

    mark[0]=true;

    int ans=n;
    int m;
    cin>>m;
    while(m--)
    {
      int u;
      cin>>u;
      int low=0;
      int high=50000;
      int poss=-1;
      while(!mark[u])
      {
        --ans;
        mark[u]=true;
        u=pa[u];
      }
      cout<<ans<<"\n";
    }
  }

   


}