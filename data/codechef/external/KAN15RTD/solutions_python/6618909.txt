#include <bits/stdc++.h>
using namespace std;
#define gi(x) scanf("%d",&x) 
#define pb push_back
#define mp make_pair
#define all(p) p.begin(),p.end()
int main(){
	int t,n,x,y,m,p;
	gi(t);
	while(t-->0){
		gi(n);
		vector< vector<int> > graph(n+1);
		for(int i=0;i<n-1;i++){
			gi(x);gi(y);
			graph[x].pb(y);
			graph[y].pb(x);
		}
		int marked[n+1];
		int parent[n+1];
		memset(marked,0,sizeof(marked));
		memset(parent,-1,sizeof(parent));
		queue<int> q;
		q.push(1);
		while(!q.empty()){
			int pr=q.front();
			q.pop();
			for(int i=0;i<graph[pr].size();i++){
				int ne=graph[pr][i];
				if(marked[ne]==0){
					marked[ne]=1;
					parent[ne]=pr;
					q.push(ne);
				}
			}
		}
		int present_ans=n;
		memset(marked,0,sizeof(marked));
		gi(m);
		while(m--){
			gi(p);
			int pr=p;
			while(pr!=-1 && marked[pr]==0){
				marked[pr]=1;
				present_ans--;
				pr=parent[pr];
			}
			printf("%d\n",present_ans);
		}

	}
}