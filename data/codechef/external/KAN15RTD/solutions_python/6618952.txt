#include<iostream>
#include<vector>
using namespace std;
int visited[50005];
int baap[50005];
int ans[50005];
vector<int> graph[50005];
void dfs(int root,int papa)
{
    int i;
    if(visited[root])
        return;
    visited[root]=1;
    baap[root]=papa;
    for(i=0;i<graph[root].size();i++)
    {
        dfs(graph[root][i],root);
    }
    return;
}
int main()
{
    int t,n,m;
    int a,b,i,fin;
    cin>>t;
    while(t--)
    {
        cin>>n;
        for(i=1;i<=n;i++)
            {
                graph[i].clear();
                ans[i]=1;
                visited[i]=0;
            }
        for(i=0;i<n-1;i++)
        {
            cin>>a>>b;
            graph[a].push_back(b);
            graph[b].push_back(a);
        }
        dfs(1,0);
        fin=n;
        cin>>m;
        while(m--)
        {
            cin>>a;
            while(a!=0)
            {
                if(ans[a]==0)
                    break;
                ans[a]=0;
                a=baap[a];
                fin--;
            }
            cout<<fin<<endl;
        }
    }
    return 0;
}
