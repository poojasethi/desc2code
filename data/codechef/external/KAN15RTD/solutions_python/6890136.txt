#include <bits/stdc++.h>
using namespace std;

vector<int> v[50001];
int tc, n, p[50001];
int x, y, kid[50001];

void dfs(int x, int f) {
  p[x] = f;
  for (int i = 0; i < v[x].size(); i++)
    if (v[x][i] != f) {
      dfs(v[x][i], x);
    }
}

int main() {
  scanf("%d", &tc);
  while (tc--) {
    scanf("%d", &n);
    for (int i = 0; i <= n; i++)
      v[i].clear(), p[i] = kid[i] = 0;
    for (int i = 0; i < n - 1; i++) {
      scanf("%d%d", &x, &y);
      v[x].push_back(y);
      v[y].push_back(x);
    }
    dfs(1, 0);
    int res = n, q;
    scanf("%d", &q);
    while (q--) {
      scanf("%d", &x);
      while (x && !kid[x]) {
        kid[x] = true;
        res--;
        x = p[x];
      }
      printf("%d\n", res);
    }
  }
}
