//Created By Mayur Agarwal :)

#ifdef _MSC_VER
#define _CRT_SECURE_NO_WARNINGS
#endif
#include<iostream>
#include<stdio.h>
#include<cmath>
#include <vector>
#include <string>
#include<cstring>
#include <set>
#include <algorithm>
#include<map>
#include<iterator>
#include<functional>
#include<stack>
#include<queue>

#define ll long long 
#define in(a) scanf("%lld",&a)
#define inc(a) scanf("%c",&a)
#define ins(a) scanf("%s", &a)
#define pr(a) printf("%lld\n",a)
#define prc(a) printf("%c",a)
#define prs(a) printf("%s\n",a)
#define fori(I,N) for(ll I=0;I<N;I++)
#define forin(i,n) for(ll I=1;I<=N;I++)
#define MS0(X) memset((X), 0, sizeof((X)))
#define MS1(X) memset((X), -1, sizeof((X)))
#define ALL(X) (X).begin(), (X).end()
#define pi   acos(-1.0)
#define mod 1000000007
#define SIZE 50010

using namespace std;
typedef pair<ll, ll>pll;
vector<ll>vec[SIZE];
ll parent[SIZE];
bool vis[SIZE];

inline void dfs(ll node,ll pre)
{
	parent[node] = pre;
	
	for (ll i = 0; i < vec[node].size(); i++)
	{
		if (vec[node][i]!=pre)
			dfs(vec[node][i], node);
		
	}
}
int main()
{
	ll t;
	in(t);
	while (t--)
	{
		ll m, n;
		cin >> n;
		MS0(vis);
		ll a, b;
		for (ll i = 0; i < SIZE; i++)
		{
			vec[i].clear();
		}
	
		for (ll i = 0; i < n - 1; i++)
		{
			cin >> a >> b;
			vec[a].push_back(b);
			vec[b].push_back(a);
		}
		ll cnt = n-1;
		dfs(1, 0);
		cin >> m;
		while (m--)
		{
			ll child;

			cin >> child;
			while (!vis[child] && parent[child])
			{
				vis[child] = 1;
				child = parent[child];
				cnt--;
			}
			cout << cnt << endl;
		}
	}
	//system("pause");
	return 0;
}