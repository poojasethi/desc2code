//12042015 1613 codechef KAN15RTD
#include<stdio.h>
#include<vector>

using namespace std;

#define MX 50007

int par[MX], cnt;
bool col[MX];
vector<int> edge[MX];

void dfs1(int p, int i)
{
    if(col[i])return ;
    col[i]=true;
    par[i]=p;
    for(int j=0; j<edge[i].size(); j++)
    {
        dfs1(i, edge[i][j]);
    }
}

void dfs2(int i)
{
    if(col[i])return ;
    col[i]=true;
    cnt++;
    if(i==1)return ;
    dfs2(par[i]);
}

int main()
{
    int t, n, m, a, b, k, i;
    scanf("%d", &t);
    while(t--)
    {
        scanf("%d", &n);
        for(i=1; i<=n; i++)
        {
            col[i]=false;
            edge[i].clear();
        }
        m=n;
        while(--m)
        {
            scanf("%d %d", &a, &b);
            edge[a].push_back(b);
            edge[b].push_back(a);
        }
        dfs1(0, 1);
        for(i=1; i<=n; i++)col[i]=false;
        scanf("%d", &m);
        cnt=0;
        while(m--)
        {
            scanf("%d", &k);
            dfs2(k);
            printf("%d\n", n-cnt);
        }
    }
    return 0;
}
