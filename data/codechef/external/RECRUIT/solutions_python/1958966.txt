#include<stdio.h>
#include<stdlib.h>
#include<stdint.h>
#include<unistd.h>
#include<iostream>
using namespace std;
 
class FastInput 
{
    public:
        uint8_t m_buffer[32768];
                uint32_t m_data[16384];
                size_t m_dataOffset, m_dataSize;
                uint32_t m_v;
        
                FastInput() 
        {
                        m_dataOffset = 0;
                        m_dataSize = 0;
                        m_v = 0x80000000;
                }
                uint32_t ReadNext()
        {
                        if (m_dataOffset == m_dataSize)
            {
                                int r = read(0, m_buffer, sizeof(m_buffer));
                                if (r <= 0) return m_v;
                                m_dataOffset = 0;
                                m_dataSize = 0;
                                int i = 0;
                                if (m_buffer[0] < '0')
                {
                                        if (m_v != 0x80000000) 
                    {
                                                m_data[m_dataSize++] = m_v;
                                                m_v = 0x80000000;
                                        }
                                        for (; (i < r) && (m_buffer[i] < '0'); ++i);
                                }
                                for (; i < r;) 
                {
                                        if (m_buffer[i] >= '0')
                    {
                                                m_v = m_v * 10 + m_buffer[i] - 48;
                                                ++i;
                                        } 
                    else 
                    {
                                                m_data[m_dataSize++] = m_v;
                                                m_v = 0x80000000;
                                                for (i = i + 1; (i < r) && (m_buffer[i] < '0'); ++i);
                                        }
                                }
                        }
                        return m_data[m_dataOffset++];
                }
}fi;
 
int main()
{
   int i,t,n,k,temp,Ans;
   t = fi.ReadNext();
   while(t--)
   {
    n = fi.ReadNext(); k = fi.ReadNext();
    Ans=1; temp = k*(n+1)-1;
    for(i=2;i<=n;i++) Ans = (Ans+temp)%i+1;
    printf("%d\n",Ans);
   }
  return 0;
}   