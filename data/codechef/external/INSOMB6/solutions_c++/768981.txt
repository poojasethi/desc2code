#define DEBUG 1

#include <stdio.h>
#include <string.h>
#include <stdlib.h>

int f(char c[101][101], char s[101], int n) {
  int i;
  for(i=0;i<n;i++)
    if(!strcmp(c[i], s))
      return i;
  return -1;
}

int solve(int acc[100][100], int pos, char taken[100], int n) {
  int i, done;
  if(pos==n)
    return 1;
  for(i=0;i<n;i++)
    if(acc[pos][i] && !taken[i]) {
      taken[i]=1;
      if(solve(acc, pos+1, taken, n))
	return 1;
      taken[i]=0;
    }
  return 0;
}

int main(void) {
  int n, i, j, k, only, any;
  char s[101], c[100][101], taken[100];
  int acc[100][100];

  scanf("%d", &n);
  for(i=0;i<n;i++)
    scanf("%s", &s); //dig names irrelevant

  for(i=0;i<n;i++)
    scanf("%s", &c[i]); //car names

  memset(acc, 0, sizeof(acc));
  for(i=0;i<n;i++) {
    scanf("%d", &k);
    for(j=0;j<k;j++) {
      scanf("%s", &s);
      acc[i][f(c,s,n)]=k;
    }
  }

  /* weak i/o - this is enough
  for(j=0;j<n;j++) { // first check to see if multiple digs can only fit in one car?
    for(i=0,any=0,only=0;i<n;i++)
      only+=(acc[i][j]==1);
    if(only>1) {
      printf("No\n");
      return 0;
    }
  }
  printf("Yes\n");
  return 0;
  */

  memset(taken, 0, sizeof(taken));
  if(solve(acc, 0, taken, n))
    printf("Yes\n");
  else
    printf("No\n");

  return 0;
}
