#include <iostream>
#include <string>
#include <bits/stdc++.h>

using namespace std;

int dp[3005][3005];


int LCS(string s1, string s2) {
	int m, n, i, j;
	m = s1.length();
	n = s2.length();

	for(i = 0; i <= m; i++) {
		for(j = 0; j <= n; j++) {
			if (i == 0) {
				dp[i][j] = 0;
			} else if (j == 0) {
				dp[i][j] = 0;
			} else if (s1[i-1] == s2[j-1]) {
				dp[i][j] = 1 + dp[i-1][j-1];
			} else {
				dp[i][j] = max(dp[i-1][j], dp[i][j-1]);
			}
		}
	}

	return dp[m][n];
}

int main() {
	string s1, s2;
	int q, t, p, i;
	char entry; int num;
	scanf("%d", &t);
	while(t--) {
		scanf("%d", &q);
		getchar();
		s1 = ""; s2 = "";
		for(i = 0; i < q; i++) {
			scanf("%c", &entry);
			scanf("%d", &num);
			while(num--) {
				s1 += entry;
			}
		}
		scanf("%d", &q);
		getchar();
		for(i = 0; i < q; i++) {
			scanf("%c", &entry);
			scanf("%d", &num);
			while(num--) {
				s2 += entry;
			}
		}
		// cout<<s1<<s2<<endl;
		int ans = LCS(s1, s2);
		ans = 2 * (s1.length() - ans) + (s2.length() - ans);
		cout<<ans<<endl;
	}
	return 0;
}
