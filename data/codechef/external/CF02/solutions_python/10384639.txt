#include<cstdio>
#include<sstream>
#include<cstdlib>
#include<cctype>
#include<math.h>
#include<algorithm>
#include<set>
#include<queue>
#include<stack>
#include<list>
#include<iostream>
#include<fstream>
#include<numeric>
#include<string>
#include<vector>
#include<cstring>
#include<map>
#include<iterator>
using namespace std;

#define ll long long
#define db double
#define pi acos(-1)
#define pb push_back
#define ve (vc.begin(),vc.end())
#define mod 1000000007
#define m0 memset(a,0,sizeof(a))
#define ms memset(a,-1,sizeof(a))
#define mc memset(s,'0',sizeof(s))
#define mv memset(visit, o, sizeof(visit))
#define pf printf
#define sf scanf
#define sof sizeof
#define pob pop_back()

char s1[3010], s2[3010];
int a[3010][3010];

int main()
{
    int i, j, mx, l1, l2, t;
    sf("%d", &t);
    for(int f = 1; f <= t; f++)
    {
        memset(a, 0, sizeof(a));
        mx = 0;
        sf("%d ", &l1);
        int y = 0;
        for(int k = 1; k <= l1; k++)
        {
            char ch;
            int x;
            sf("%c%d", &ch, &x);
            for(int z = 1; z <= x; z++)
            {
                s1[y++] = ch;
            }
        }
        s1[y] = '\0';
        getchar();
        y = 0;
        sf("%d ", &l2);
        for(int k = 1; k <= l2; k++)
        {
            char ch;
            int x;
            sf("%c%d", &ch, &x);
            for(int z = 1; z <= x; z++)
            {
                s2[y++] = ch;
            }
        }
        s2[y] = '\0';
        l1 = strlen(s1);
        l2 = strlen(s2);
        for(i = 1; i <= l1; i++)
        {
            for(j = 1; j<= l2; j++)
            {
                if(s1[i-1] == s2[j-1])
                {
                    a[i][j] = a[i-1][j-1] + 1;
                }
                else if(a[i-1][j] >= a[i][j-1])
                {
                    a[i][j] = a[i-1][j];
                }
                else
                {
                    a[i][j] = a[i][j-1];
                }
                if(a[i][j] > mx)
                {
                    mx = a[i][j];
                }
            }
        }
        int sum = (l1-mx)*2;
        sum += l2-mx;
        pf("%d\n", sum);
        if(f < t)getchar();
    }

    return 0;
}
