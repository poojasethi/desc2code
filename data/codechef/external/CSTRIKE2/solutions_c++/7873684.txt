#include <bits/stdc++.h>
using namespace std;
#define DRT() int test_case;cin>>test_case;while(test_case--)
#define ull unsigned long long
#define ll long long
#define V(x) vector<x>
#define pii pair<int,int>
#define rep(i,n) for(int i=0;i<n;i++)
#define F(i,a,b) for(int i=a;i<b;i++)
#define foreach(it, v) for( auto it = v.begin(); it != v.end(); ++it)
#define all(a) a.begin(), a.end()
#define in(a,b) ((b).find(a) != (b).end())
#define pb(x) push_back(x)
#define fill(a,v) memset(a, v, sizeof a)
#define sz(a) ((int)(a.size()))
#define fi first
#define se second
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define _ ios_base::sync_with_stdio(0);cin.tie(0);
 
#ifdef TRACE
    #define trace(x)            cerr<<x<<endl;
    #define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
    #define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
    #define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
    #define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl;
    #define trace5(a,b,c,d,e)   cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<endl;
    #define trace6(a,b,c,d,e,f) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<" | "#f" = "<<f<<endl;
#else
    #define trace(x)
    #define trace1(x)
    #define trace2(x,y)
    #define trace3(x,y,z)
    #define trace4(a,b,c,d)
    #define trace5(a,b,c,d,e)
    #define trace6(a,b,c,d,e,f)
#endif
 #define lim 2000000

 int cnt[lim+10];

 int main() {_
    DRT() {
        int n;
        cin>>n;
        int v[n];
        int maxi = -1;
        int a;
        fill(cnt,0);
        rep(i,n){cin>>a;maxi = max(maxi, a);cnt[a]++;}
        for(int i = maxi;i>=1;i--){
            int count = 0;
            for(int j = i; j<=maxi && count<2; j+=i){
                count += cnt[j];
            }
            if(count>=2){
                printf("%d\n", i);
                break;
            }
        }
    }
    return 0;
 }
