#include<iostream>
#include<cstdio>
#include<queue>
using namespace std;
#define MAX 20001
int color[20001];
vector <int> g[MAX];
bool  bfs(int u)
{
    int sz=0,v=0,flag=0;
    queue <int> Q;
    Q.push(u);

    while(!Q.empty())
    {
        u=Q.front();
        Q.pop();

        sz=g[u].size();
        if(color[u]==0)
            color[u]=1;

        for(int i=0;i<sz;i++)
        {
            v=g[u][i];

            if(color[u]==color[v])
                return false;
            else if(color[u]==1 && color[v]==0)
            color[v]=-1;
            else if(color[u]==-1 && color[v]==0)
            color[v]=1;
        }
    }
    return true;
}
int main()
{
    int v,e,a,b,c=0;
    scanf("%d%d",&v,&e);

    for(int i=0;i<e;i++)
    {
        scanf("%d%d",&a,&b);
        g[a].push_back(b);
        g[b].push_back(a);
    }
    int i=1;
    for(i=1;i<=v;i++)
    {

                if(bfs(i))
                continue;
                else
                    break;

    }

    if(i<=v)
        printf("NO\n");
    else
        printf("YES\n");
}
