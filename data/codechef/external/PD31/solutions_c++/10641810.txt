#include<bits/stdc++.h>
using namespace std;

vector<int> v[10001];
int visited[1001];
int Max = INT_MIN;
int Min = INT_MAX;
void dfs(int x);
int Flag=0;

int main(){

    int n,m,i,j,a,b;
    cin>>n>>m;
    memset(v,0,sizeof v);

    for(i=0;i<m;i++){
        cin>>a>>b;
        if(a>Max)
            Max=a;
        if(b>Max)
            Max=b;
        if(a<Min)
            Min=a;
        if(b<Min)
            Min=b;
        v[a].push_back(b);
        //v[b-1].push_back(a-1);
    }

    if(n-m>1)
        cout<<"NO"<<endl;
    else{
//        for(i=0;i<=Max;i++){
//            if(v[i].size()!=0)
//                cout<<i<<' ';
//            for(j=0;j<v[i].size();j++)
//                cout<<v[i][j]<<' ';
//            cout<<endl;
//        }

        //cout<<"Min "<<Min<<endl;

        dfs(Min);
        //cout<<"Flag "<<Flag<<endl;
        if(Flag==1)
            cout<<"NO"<<endl;
        else{
            int flag=0;
            for(i=0;i<Max;i++){
                if(v[i].size()>=1){
                    if(visited[i]==1)
                        continue;
                    else{
                        flag=1;
                        break;
                    }
                }
            }

            if(flag==1)
                cout<<"NO"<<endl;
            else cout<<"YES"<<endl;
        }
    }
}

void dfs(int x){
    //cout<<"x prev "<<x+1<<' '<<prev+1<<endl;
    if(visited[x]==1){
        Flag=1;
        //cout<<"x "<<x<<endl;
    }
    if(!visited[x]){
        visited[x]=1;
        //cout<<x<<' ';
        for(int j=0;j<v[x].size();j++)
            dfs(v[x][j]);
    }


}
