#include<iostream>
#include<cstdio>
#include<vector>
using namespace std;
struct node
{
    int a;
    int b;
};
struct checker
{
    int parent;
    int rank;
};
vector <node> ar(20001);
struct checker br[20001];
void Union(struct checker br[],int xroot,int yroot)
{
    if(br[xroot].rank<br[yroot].rank)
        br[xroot].parent=yroot;
    else if(br[xroot].rank>br[yroot].rank)
        br[yroot].parent=xroot;
    else
    {
        br[yroot].parent=xroot;
        br[xroot].rank++;
    }
}
int find(struct checker br[],int i)
{
    if(br[i].parent!=i)
        br[i].parent=find(br,br[i].parent);
    return br[i].parent;
}

int main()
{
    int v,e,flag=0;
    scanf("%d%d",&v,&e);

    for(int i=0;i<e;i++)
        scanf("%d%d",&ar[i].a,&ar[i].b);

    for(int i=0;i<=v;i++)
    {
        br[i].parent=i;
        br[i].rank=0;
    }

    for(int i=0;i<e;i++)
    {
        int x=find(br,ar[i].a);
        int y=find(br,ar[i].b);

        if(x==y)
        {
            flag=1;
            break;
        }
        else if(x!=y)
        {
            Union(br,ar[i].a,ar[i].b);
        }
    }

    if(flag==1)
        printf("NO\n");
    else
        printf("YES\n");
}
