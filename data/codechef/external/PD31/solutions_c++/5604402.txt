#include <iostream>
#include <bits/stdc++.h>
#define pb push_back
using namespace std;
class Graph
{
	int v;
	list<int>* array;
	public:
		Graph( int x )
		{
			v = x ;
			array = new list<int> [x];
		}
		
		void addEdge ( int x , int y )
		{
			array[x].pb (y);
			array[y].pb (x);
		}
		
		void dfsUtil( int x , bool* visited , int& count)
		{
			visited[x] = true;
		//	cout << x << "  ";
			count++;
			list<int>::iterator it;
			for ( it = array[x].begin() ; it != array[x].end(); it++ )
				if ( !visited[*it] )
					dfsUtil(*it , visited , count);
		}
		bool isTree( int x )
		{
			int count=0;
			bool* visited = new bool[v];
			for ( int i = 0 ; i < v ; i++)
				visited[i] = false;
			dfsUtil ( x , visited , count );
		
			if ( count == v )
				return true;
			else 
				return false;
		}
};

int main() 
{
	ios_base::sync_with_stdio (false) ;
	int n , m , x , y ; 
	cin >> n >> m;
	Graph graph (n);
	for ( int i = 0 ; i < m ; i++ )
	{
		cin >> x >> y;
		graph.addEdge ( x-1 , y-1 ) ; 
	}

	if( graph.isTree(0) && m == (n-1) )
		cout << "YES";
	else
		cout<< "NO";
	return 0;
}