import sys

def solve(GP,vis,V,cur,flag,parent) :
    vis[cur] = 1
    for i in GP[cur] :
        if (parent[cur]!=i) and V==i :
            return False
        if not vis[i] :
            parent[i] = cur
            return solve(GP,vis,V,i,1,parent)
    return True
    

n , m = map(int,sys.stdin.readline().split())
GP  = [[] for __ in range(n+1)]
for i in range(m) :
    a , b = map(int,sys.stdin.readline().split())
    GP[a].append(b)
    GP[b].append(a)

ans , vis = True , [0 for __ in range(n+1)]
for i in range(1,n+1) :
        if not vis[i] :
            vis[i] = 1
            ans = solve(GP,vis,i,i,0,[0 for __ in range(n+1)])
            if ans == False :
                break

print "YES" if ans else "NO"