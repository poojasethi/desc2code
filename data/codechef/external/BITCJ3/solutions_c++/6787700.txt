#include <cstring>
#include <cstdio>
#include <algorithm>

using namespace std;

const int MAXN = 1e5 + 9,
		  MAXVAL = 3 * MAXN;

typedef long long LL;

int tc,N,t,p,Q;
int pos[MAXN];
int tim[MAXN];
int range[MAXN];
LL bit[MAXVAL + 4][11][2];

inline void update(int idx,int T,int val,int state){
	idx = max(1,idx);
	for(;idx <= MAXVAL;idx += (idx & (-idx)))
		bit[idx][T][state] += val;
}

inline LL query(int idx,int T,int state){
	LL ret = 0LL;
	for(;idx > 0;idx -= (idx & (-idx)))
		ret += bit[idx][T][state];
	return ret;
}

inline void input(){
	memset(bit,0,sizeof(bit));

	scanf("%d",&N);

	for(int i = 0;i < N;++i){
	   scanf("%d",&pos[i]);
	   pos[i]++;
	}

	for(int i = 0;i < N;++i)
	   scanf("%d",&tim[i]);

	for(int i = 0;i < N;++i)
	   scanf("%d",&range[i]);
}

inline void solve(){
	for(int i = 0;i < N;++i){
		update(pos[i],tim[i],1,0);
		update(pos[i] + range[i] + 1,tim[i],-1,0);

		update(pos[i] - range[i],tim[i],1,1);
		update(pos[i] + 1,tim[i],-1,1);
	}

	scanf("%d",&Q);
	while(Q--){
		scanf("%d %d",&t,&p);
		p++;

		LL ans = 0LL;

		for(int i = 1;i <= 10;++i){
			int period = t/i;
			int st = period % 2;

			ans = ans + query(p,i,st);
		}

		printf("%lld\n",ans);
	}
}

int main (){
	scanf("%d",&tc);

	while(tc--){
		input();
		solve();
	}

	return 0;
}