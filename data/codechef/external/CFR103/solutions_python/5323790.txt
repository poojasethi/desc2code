import java.io.IOException;
import java.io.InputStream;
import java.util.InputMismatchException;

/**
 *
 * @author Suraj Singh
 */
class DeactivationCode {
    public static void main(String arfs[])
    {
        InputReader9 r = new InputReader9(System.in);
        //long n = r.nextLong(); 
        String n = r.next();
        char nums[] = n.toCharArray();
        int sum =0; 
        for(int i=0;i<5;i++)
        {
            sum+= (nums[i]-48)*(nums[i+5]-48);
        }
        System.out.println(sum);
    }
}
class InputReader9 {

private InputStream stream;
private byte[] buf = new byte[1024];
private int curChar;
private int numChars;

public InputReader9(InputStream stream) {
this.stream = stream;
}

public int read() {
if (numChars == -1)
throw new InputMismatchException();
if (curChar >= numChars) {
curChar = 0;
try {
numChars = stream.read(buf);
} catch (IOException e) {
throw new InputMismatchException();
}
if (numChars <= 0)
return -1;
}
return buf[curChar++];
}
public long nextLong(){
    int c = read();
while (isSpaceChar(c))
c = read();
int sgn = 1;
if (c == '-') {
sgn = -1;
c = read();
}
long res = 0;
do {
if (c < '0' || c > '9')
throw new InputMismatchException();
res *= 10;
res += c & 15;
c = read();
} while (!isSpaceChar(c));
return res * sgn;
}

public int nextInt() {
int c = read();
while (isSpaceChar(c))
c = read();
int sgn = 1;
if (c == '-') {
sgn = -1;
c = read();
}
int res = 0;
do {
if (c < '0' || c > '9')
throw new InputMismatchException();
res *= 10;
res += c & 15;
c = read();
} while (!isSpaceChar(c));
return res * sgn;
}

public String next() {
int c = read();
while (isSpaceChar(c))
c = read();
StringBuilder res = new StringBuilder();
do {
res.appendCodePoint(c);
c = read();
} while (!isSpaceChar(c));
return res.toString();
}

public static boolean isSpaceChar(int c) {
return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
}

}