                                             //BIG OH
                                                                                        
#include<cstdio>
#include<iostream>
#include<cstring>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<functional>
#include<bitset>
#include<numeric>
#include<cassert>
#include<climits>
#include <fstream> 
using namespace std;
#define ll  long long 
#define gc getchar_unlocked
#define mod 1000000007
#define pq priority_queue
#define vi vector<int>
#define eps 1e-9
#define inf (1 << 28)
#define  MX 1002
#define pi pair<int ,int >

int x,y;
int minOperation( string s1 , string s2 , int n ,int m)
{
           ll dp[109][109];
           memset(dp,0,sizeof(dp));
	for(int i=1;i<=n;i++)
	{
		dp[i][0] = x+i;
	}
	for(int i=1;i<=m;i++)
	{
		dp[0][i] = min(y,x+i);
	}
 
	for(int i=1;i<=n;i++)
	{
		for(int j=1;j<=m;j++)
		{
 
			if(s1[i-1] == s2[j-1])
			{
				dp[i][j] = dp[i-1][j-1];
			}
			else
			{
				dp[i][j] = dp[i-1][j-1]+1;
 
				for(int q=1;q<=i;q++)
				{
					dp[i][j] = min(dp[i][j],(dp[i-q][j] + x + q));
				}
 
				for(int q=1;q<=j;q++)
				{
					dp[i][j] = min(dp[i][j],(dp[i][j-q] + min(y,(x+q))));
				}
			}
		}
	}
 
	return dp[n][m];
}

int main() 
{
   int t;
   cin>>t;
   for(int z=1;z<=t;z++)
   {
     int len1,len2;
     cin>>len1>>len2;     
     string s1;
     string s2;
     cin>>s1>>s2;
     cin>>x>>y;
     cout<<"Case "<<z<<": ";
     cout<<minOperation(s1,s2,len1,len2)<<endl;
   } 
}