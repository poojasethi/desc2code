Consider two sequences A and B comprising of digits 0 to 9, of length K and L respectively. The distance from A to B is the total minimum penalty incurred in converting A to B using the following operations, each of which incurs a penalty as described below.

Replacing a digit of A with another digit: incurs a penalty of 1
Inserting a digit in A: incurs a penalty of 1 for each digit inserted. In addition, there is also a fixed penalty of x for every sequence of digits inserted (one-time penalty for starting the sequence, not per-digit). However, the total penalty charged for a sequence of digits inserted never exceeds y (y > x). For example, if x = 2 and y = 5, then inserting a one digit sequence (say “5”) will incur a penalty of 3 (=x+1), a 2-digit sequence (say “24”) will incur a penalty of 4 (=x+2), and inserting any n-digit sequence (n > 2) (say “132”, 2543”, “57241” etc.) will all incur a penalty of 5 (=y).
Deleting a digit from A: incurs a penalty of 1 for each digit deleted. In addition, there is also a fixed penalty of x for every sequence of digits deleted (one-time penalty for starting the sequence, not per-digit).

What is the minimum penalty with which A can be converted to B?

Input
The first line contains the number of tests cases N
For each test case, the first line contains the integers K and L. The second line contains the sequence A (K digits with no space in between). The third line contains the sequence B (L digits with no space in between). The fourth line contains the integers x and y .

Output
For each test case, print the case number, followed by a colon, followed by a single space, followed by a single integer representing the minimum penalty.

Constraints
0 < N ≤ 3
0 < K ≤ 100
0 < L ≤ 100
x > 0, y > x

Example
Input:
3
9 1
123456789
1
10 15
1 9
1
123456789
10 15
11 4
12345678912
1212
10 15

Output:
Case 1: 18
Case 2: 15
Case 3: 17

