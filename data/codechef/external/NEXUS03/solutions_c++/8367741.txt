// NEXUS03

#include<iostream>
#include<vector>
using namespace std;

main() {
    int n, k;
    cin >> n >> k;
    vector <int> arr(n);
    for (int i=0 ; i<n ; i++)
        cin >> arr[i];

    int dpsize = n-k+1;
    vector <long long int> dp(dpsize);
    for (int i=0 ; i<k ; i++)
        dp[0]+=arr[i];
    for (int i=1 ; i<dpsize ; i++)
        dp[i] = dp[i-1] - arr[i-1] + arr[i-1+k];

    int q;
    cin >> q;
    while (q--) {
        int s;
        long long int x;
        bool flag=0;
        cin >> s >> x;
        int newdps = dpsize - s +1;
        vector <long long int> newdp(newdps);
        for (int i=0 ; i<s ; i++)
            newdp[0] += dp[i];

        if (newdp[0] == x) {
            cout << "YES\n";
            continue;
        }

        for (int i=1 ; i<newdps ; i++) {
            newdp[i] = newdp[i-1] - dp[i-1] + dp[i+s-1];
            if (newdp[i] == x) {
                cout << "YES\n";
                flag=1;
                break;
            }
        }
        if (!flag)
            cout << "NO\n";
    }
}
