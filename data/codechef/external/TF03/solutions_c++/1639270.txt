/*
ID: nihalb
PROG: TF03
LANG: C++
*/
 
#include<stdio.h>
#define MOD 10000ll
 
int BinarySearch(int A[], int i, int j, int key)
{
if(i>j) return 0;
if(i == j)
{
if(A[i] < key) return i;
else return 0;
}
int mid = i + 1 + (j-i)/2;
if(A[mid] >= key) return BinarySearch(A,i,mid-1,key);
else return BinarySearch(A,mid,j,key);
}
 
int BinSearch(int A[], int size, int key)
{
return BinarySearch(A,1,size,key);
}
 
void FillLIS(int* Lengths, int* V, int start, int end, int* A)
{
int k;
int L = Lengths[start-1];
for(int i=start; i<=end; ++i)
{
k = BinSearch(V,L,A[i]);
if(k == L)
{
V[k+1] = A[i];
L++;
}
else if(A[i] < V[k+1]) V[k+1] = A[i];
Lengths[i] = L;
}
}
 
void Fill(int* A, int start, int end)
{
for(int i=start; i<=end; i++) A[i] = ((i%MOD)*(i%MOD))%MOD;
}

int Lengths[10000005];
 
int main()
{
int T;
scanf("%d",&T);
int* A = new int[10000005];
int* V = new int[10000005];
Lengths[0] = 0;
int size,k,MaxSoFar=0;
while(T--)
{
scanf("%d%d",&size,&k);
if(MaxSoFar < size)
{
Fill(A,MaxSoFar+1,size);
FillLIS(Lengths,V,MaxSoFar+1,size,A);
MaxSoFar = size;
}
if(k <= Lengths[size]) printf("1\n");
else printf("0\n");
}
delete[] A,V;
return 0;
}