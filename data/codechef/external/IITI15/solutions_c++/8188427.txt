#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define MOD2 100000
#define MAXN 100002
#define BLOCK 200
#define BASE 31
typedef unsigned long long int uint64;
typedef long long int int64;
 
struct Query{
	int l,r,id;
};
vector<Query>v;

bool cmp(Query a,Query b){
	if((a.l/BLOCK)!=(b.l/BLOCK))
	return (a.l/BLOCK)<(b.l/BLOCK);
	return a.r<b.r;
}
int BIT[20006];
int a[20005];
int64 ans=0;
int64 store[20006];

void upd(int x,int val){
	for(int i=x;i<=20002;i+=i&(-i))
	BIT[i]+=val;
}

int64 query(int x){
	if(x<=0)
	return 0;
	x=min(x,20001);
	int64  ret=0;
	
	while(x){
		ret+=BIT[x];
		x-=x&(-x);
	}
	
	return ret;
}

map<int,int>m;
map<int,int>::iterator it;

void addrht(int val){
	ans+=query(20001)-query(val);
	upd(val,1);
}

void removrht(int val){
	upd(val,-1);
	ans-=query(20001)-query(val);
}

void addlft(int val){
	ans+=query(val-1);
	upd(val,1);
}
void removlft(int val){
	ans-=query(val-1);
	upd(val,-1);
}

int main(){
	int n,i,q;
	cin>>n;
	
	for(i=1;i<=n;i++){
		scanf("%d",&a[i]);
		m[a[i]]++;
	}
	
	int rank=1;
	for(it=m.begin();it!=m.end();it++)
	it->second=rank++;
	
	for(i=1;i<=n;i++)
	a[i]=m[a[i]];
	
	Query tmp;
	cin>>q;
	for(i=0;i<q;i++){
		scanf("%d%d",&tmp.l,&tmp.r);
		tmp.id=i;
		v.pb(tmp);
	}
	
	sort(all(v),cmp);
	int curl=1,curr=0;
	for(i=0;i<q;i++){
		tmp=v[i];
		
		while(curr>tmp.r){
			removrht(a[curr]);
			curr--;
		}
		
		while(curl<tmp.l){
			removlft(a[curl]);
			curl++;
		}
		
		while(curr<tmp.r){
			curr++;
			addrht(a[curr]);
		}
		
		while(curl>tmp.l){
			curl--;
			addlft(a[curl]);
		}
		
		store[tmp.id]=ans;
	}
	for(i=0;i<q;i++)
	printf("%lld\n",store[i]);
	return 0;
}
