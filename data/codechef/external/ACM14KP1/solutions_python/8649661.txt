#include <bits/stdc++.h>

#define pb push_back
#define ll long long int
#define mp make_pair
#define pf printf

using namespace std;

double dist_points(double x1,double y1,double x2,double y2)
{
	double x = (x2-x1)*(x2-x1);
	double y = (y2-y1)*(y2-y1);
	return sqrt(x+y);
}

int main()
{
	int T;
	cin >> T;
	for(int t = 1; t <= T; t++)
	{
		ll n;
		cin >> n;
		double x0 = -1000000;
		double y0 = 0;
		vector <pair<double, pair<double, double> > > coord;
		for(int i = 0; i < n; i++)
		{
			double x, y;
			cin >> x >> y;
			double dist = dist_points(x, y, x0, y0);
			coord.pb(mp(dist, mp(x,y)));
		}
		sort(coord.begin(), coord.end());
		ll lim = 15;
		double minimum = 1000000;
		for(ll i = 0; i < n; i++)
		{
			int end = min(i + lim, n);
			for(int j = i+1; j < end; j++)
			{
				for(int k = j+1; k < end; k++)
				{
					double x1 = coord[i].second.first;
					double x2 = coord[j].second.first;
					double x3 = coord[k].second.first;
					double y1 = coord[i].second.second;
					double y2 = coord[j].second.second;
					double y3 = coord[k].second.second;
					double d1 = dist_points(x1, y1, x2, y2);
					double d2 = dist_points(x2, y2, x3, y3);
					double d3 = dist_points(x3, y3, x1, y1);
					double sum = d1+d2+d3;
					if(sum < minimum)
						minimum = sum;
				}
			}
		}
		pf("Case %d: %0.9lf\n", t, minimum);
	}
}