#include<bits/stdc++.h>
using namespace std;
pair < long double , long double > P[100001];
long double Euclid(pair < long double , long double > A, pair < long double , long double > B)
{
    return sqrt((A.first-B.first)*(A.first-B.first) + (A.second-B.second)*(A.second-B.second));
}
long double Distance(pair < long double , long double > A , pair < long double , long double > B , pair < long double , long double > C)
{
    return Euclid(A,B)+Euclid(B,C)+Euclid(C,A);
}
bool cmp ( pair < long double , long double > A,pair < long double , long double > B)
{
    return A.second<B.second;
}
long double Conquer(int L , int R , long double Delta)
{
    pair < long double , long double > Copy[R-L+1];
    int i,j,k=0,M=(R+L)/2;
    long double XBAR=P[M].first,distance=1e10-0.1;
    for(i=L;i<=R;++i)
        if(abs(XBAR-P[i].first)<Delta+1e-9)
            Copy[k++]=P[i];
    sort(Copy,Copy+k,cmp);
    const int N=k;
    for(i=0;i<N;++i)
        for(j=i+1;j<N && j<i+16;++j)
            for(k=j+1;k<N && k<i+16;++k)
            {
                long double buff=Distance(Copy[i],Copy[j],Copy[k]);
                if(buff<distance)
                    distance=buff;
                if(buff>Delta)
                    break;
            }
    return distance;
}
long double Divide(int L , int R)
{
    int i,j,k;
    if(R-L+1<=4)
    {
        long double temp=999999999.9;
        for(i=L;i<R;++i)
            for(j=i+1;j<R;++j)
                for(k=j+1;k<R;++k)
                    {
                    //	cout<<Distance(P[i],P[j],P[k])<<"\n";
                    	if(Distance(P[i],P[j],P[k])<temp)
                    		{
                    			temp=Distance(P[i],P[j],P[k]);

                    		}
                    }
    //    cout<<temp<<"\n";
        return temp;
    }
    int M=(L+R)/2;
    long double Left=Divide(L,M);
    long double Right=Divide(M+1,R);
    long double delta=min(Left,Right);
    long double p3=Conquer(L,R,delta);
    return min(p3,delta);
}
int main()
{
    int T;
    scanf("%d",&T);
    for(int t=1;t<=T;++t)
    {
        int N,i;
        scanf("%d",&N);
        for(i=0;i<N;++i)
            scanf("%Lf%Lf",&P[i].first,&P[i].second);
        sort(P,P+N);
        printf("Case %d: %LF\n",t,Divide(0,N-1));
    }
    return 0;
}
