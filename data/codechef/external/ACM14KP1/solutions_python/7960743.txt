#include <bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;
typedef unsigned int ui;
typedef unsigned long long ull;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<bool> vb;
typedef vector<double> vd;
typedef vector<string> vs;

#define Rep(i,n) for(int i = 0; i < (n); ++i)
#define Repd(i,n) for(int i = (n)-1; i >= 0; --i)
#define RepP(i,n) for(int i = 1; i <= (n); i++) //Repeat Pascal style
#define RepdP(i, n) for(int i = n; i > 0; i--) //Repeat backward Pascal style
#define For(i,a,b) for(int i = (a); i <= (b); ++i)
#define Ford(i,a,b) for(int i = (a); i >= (b); --i)
#define Fit(i,v) for(__typeof((v).begin()) i = (v).begin(); i != (v).end(); ++i)
#define Fitd(i,v) for(__typeof((v).rbegin()) i = (v).rbegin(); i != (v).rend(); ++i)
#define mp make_pair
#define pb push_back
#define pf push_front
#define fi first
#define se second
#define var(a, b) typeof(b) a(b)
#define sz(a) ((int)(a).size())
#define all(a) (a).begin(), (a).end()
#define rall(a) (a).rbegin(), (a).rend()
#define last(a) (sz(a) - 1)
#define ms(a,x) memset(a, x, sizeof(a))
#define Exist(a, b) (find(all(a), (b)) != (a).end())
#define Sort(a) sort(all(a))
#define Gsort(a) sort(all(a), greater<typeof(*((a).begin()))>())
#define Unique(a) Sort(a); (a).resize(unique(all(a)) - (a).begin())
#define Enum(a) Fit(it, (a)) cout << *it << " "; cout << endl;
#define el '\n'
#define coud(a,b) cout<<fixed << setprecision((b)) << (a)

template<class F, class T> T convert(F a, int p = -1) { stringstream ss; if (p >= 0) ss << fixed << setprecision(p); ss << a; T r; ss >> r; return r; }
template<class T> T gcd(T a, T b){ T r; while (b != 0) { r = a % b; a = b; b = r; } return a;}
template<class T> T lcm(T a, T b) { return a / gcd(a, b) * b; }
template<class T> T sqr(T x) { return x * x; }
template<class T> T cube(T x) { return x * x * x; }
template<class T> int getbit(T s, int i) { return (s >> i) & 1; }
template<class T> T onbit(T s, int i) { return s | (T(1) << i); }
template<class T> T offbit(T s, int i) { return s & (~(T(1) << i)); }
template<class T> int cntbit(T s) { return s == 0 ? 0 : cntbit(s >> 1) + (s & 1); }

const ld PI = acos(-1.0);
const ld eps = 1e-9;
const int dr[] = {-1, 0, +1, 0};
const int dc[] = {0, +1, 0, -1};
const int inf = (int)1e9 + 5;
const ll linf = (ll)1e16 + 5;
const ll mod = (ll)1e9 + 7;
const int MX = 1e6 + 7;
void disp(int arr[], int narr){
    For(i,1,narr) cout << arr[i] << " ";
    cout << el;
}
void disp(vector<int> v){
    int nv = v.size(), nn = min(nv, 15);
    For(i,0,nn - 1) cout << v[i] << " ";
    cout << el;
}
// paste source code========================================================
double dist(double xa, double ya, double xb, double yb) {
	xa -= xb; ya -= yb;
	return sqrt(xa * xa + ya * ya);
}

// declare ========================================================
int n, k1, k2, t, sl = 0;
double CV, ans;
set<pair<double, int> > S;
pair<double, double> p[MX];
set<pair<double, int> >::iterator itl, itr, it, it2;
// create function========================================================


int sol(){
    //initialize array, vector, .........................
    cin >> n;
    For(i,1,n) cin >> p[i].fi >> p[i].se;
    //solve...............................................
    sort(p + 1, p + n + 1);
    ans = (double)1e18; t = 1;
    For(i,1,n){
        while(t < i && p[i].fi - p[t].fi >= ans / 2.0 + eps) S.erase(mp(p[t].se, t)), t++;
        itl = S.lower_bound(mp(p[i].se - ans / 2.0 + eps, 0)); itr = S.upper_bound(mp(p[i].se + ans / 2.0 + eps, n));
        for(it = itl; it != itr; it++){
            it2 = it; it2++;
            for(it2; it2 != itr; it2++){
                k1 = (*it).se; k2 = (*it2).se;
                CV = dist(p[i].fi, p[i].se, p[k1].fi, p[k1].se);
                CV += dist(p[i].fi, p[i].se, p[k2].fi, p[k2].se);
                CV += dist(p[k2].fi, p[k2].se, p[k1].fi, p[k1].se);
                ans = min(ans, CV);
                //cout << i << ": " << CV << " " << ans << el;
            }
        }
        S.insert(mp(p[i].se, i));
    }
    //display result......................................
    cout << "Case " << ++sl << ": " << fixed << setprecision(9) << ans << el;
}
int sltest = 1;
int main(){
	int xtest = 1;
//	#ifndef ONLINE_JUDGE
//	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);
//	xtest = sltest;
//	#endif
//	std::ios::sync_with_stdio(false);
//	cin.tie(NULL);
	cin >> xtest;
    while(xtest--)  sol();
    return 0;
}
