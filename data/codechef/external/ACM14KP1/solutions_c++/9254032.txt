#include <bits/stdc++.h>
 
typedef long long ll;
#define PB push_back
#define F  first
#define S  second
#define MP make_pair
using namespace std;
 
double dist_points(double x1,double y1,double x2,double y2)
{
	double x = (x2-x1)*(x2-x1);
	double y = (y2-y1)*(y2-y1);
	return sqrt(x+y);
}
 
void solve(int CS)
{
    ll N;
    cin >> N;
    double x0 = -100000000;
    double y0 = -100000000;
    vector <pair<double, pair< pair<double, double>, int > > > coord;
    for(int i = 0; i < N; i++)
    {
        double x, y;
        cin >> x >> y;
        double dist = dist_points(x, y, x0, y0);
        coord.PB(MP(dist, MP(MP(x, y), i+1)));
    }

    sort(coord.begin(), coord.end());
    
    ll lim = 20;

    double minimum = 1000000100;
    int ri, rj, rk;

    for(ll i = 0; i < N; i++)
    {
        int end = min(i + lim, N);
    
        for(int j = i+1; j < end; j++)
        {
            for(int k = j+1; k < end; k++)
            {
                double x1 = coord[i].S.F.F;
                double x2 = coord[j].S.F.F;
                double x3 = coord[k].S.F.F;
                double y1 = coord[i].S.F.S;
                double y2 = coord[j].S.F.S;
                double y3 = coord[k].S.F.S;

                double d1 = dist_points(x1, y1, x2, y2);
                double d2 = dist_points(x2, y2, x3, y3);
                double d3 = dist_points(x3, y3, x1, y1);
                
                double sum = d1+d2+d3;
                
                if(sum < minimum)
                {
                    minimum = sum;
                    ri = coord[i].S.S; rj = coord[j].S.S; rk = coord[k].S.S;
                }
            }
        }
    }
    
 //   cout << ri << " " << rj << " " << rk << endl;
    printf("Case %d: %.6lf\n", CS, minimum);
    return;
}

int main()
{
    int t, CS = 1;
    cin >> t;

    while(t--)
	   solve(CS++);
    return 0;
} 