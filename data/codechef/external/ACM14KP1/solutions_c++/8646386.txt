#include<bits/stdc++.h>
using namespace std;


 bool compareX(pair<double,double> p1, pair<double,double> p2)
{
	return (p1.first < p2.first);
}

bool compareY(pair<double,double> p1, pair<double,double> p2)
{
	return (p1.second < p2.second);
}

pair<double,double> pr[100010];
 pair<double,double> strip[100010];
double fn(int st,int en)
{
    double finalans;
    if((en-st+1)<3)
        return FLT_MAX;

     int mid= (st+en)/2;
        double ans1=fn(st,mid);
        double ans2=fn(mid+1,en);
        double ans3= min(ans1,ans2);

        double rr1,rr2,ss1,ss2,tt1,tt2,kk1,kk2;
       finalans=ans3;


        int xu=0;

        for(int i=st;i<=en;i++)
        {
            if (abs(pr[i].first - pr[mid].first) < ans3)
			strip[xu] = pr[i], xu++;
        }

        sort(strip,strip+xu,compareY);
        for(int i=0;i<xu;i++)
        {
            rr1=strip[i].first;
            rr2=strip[i].second;

            for(int j=i+1;j<xu && (strip[j].second - strip[i].second) < finalans;j++)
            {
                ss1=strip[j].first;
                ss2=strip[j].second;


                   for(int k=j+1;k<xu &&  (strip[k].second- strip[j].second - strip[i].second) < finalans;k++)
                   {
                       tt1=strip[k].first;
                        tt2=strip[k].second;


                    double peri  = sqrt((ss1-rr1)*(ss1-rr1) + (ss2-rr2)*(ss2-rr2))+ sqrt((ss1-tt1)*(ss1-tt1) + (ss2-tt2)*(ss2-tt2)) +sqrt((tt1-rr1)*(tt1-rr1) + (tt2-rr2)*(tt2-rr2));

                      finalans = min(finalans,peri);

                   }
            }

        }
  return finalans;

}
int main()
{

int t,i,trm,n;
double x,y;
scanf("%d",&t);
for(trm=1;trm<=t;trm++)
{
scanf("%d",&n);
for(i=0;i<n;i++)
{
    scanf("%lf%lf",&x,&y);
    pr[i]=make_pair(x,y);
}
sort(pr,pr+n,compareX);

 cout<<fixed<<setprecision(10)<<"Case "<<trm<<": "<<fn(0,n-1)<<endl;



}

}
