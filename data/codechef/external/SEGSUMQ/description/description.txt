You are given two arrays A and B, each  consisting of N integers. 
You are also given M queries of the form Lj Rj Cj Dj. For each of these queries, we ask you to calculate the value of the sum of max{0, Ai × Cj - Bi × Dj} over i from Lj to Rj.
This is an on-line problem, so you won't get the next query unless you answer the current one.

Input
The first line of the input contains an integer N denoting the length of the arrays A and B.
The second line contains N space-separeted integer numbers, denoting the array A.
The third line contains N space-separated integer numbers, denoting the array B.
The fourth line contains an integer Q denoting the number of queries.
Each of the following Q lines will contain four space-separated integer numbers Lj Rj Cj Dj denoting the query.
This is an interactive problem. That means that you won't be able to read Lj Rj Cj Dj before you've answered the previous query. Please flush output buffer after you've output the answer to each query. In C++ it can be done with fflush(stdout) routine.

Output
For each query, output the answer on a separate line. Please flush standard output after answering each query.

Constraints

1 ≤ N, Q ≤ 10^5
0 ≤ Ai, Bi ≤ 10^6
1 ≤ Lj ≤ Rj ≤ N
0 ≤ Cj, Dj ≤ 10^6


Example
Input:
5
1 2 3 4 5
5 4 3 2 1
3
1 5 1 1
1 5 1 2
1 5 2 1

Output:
6
3
18

Explanation
Example case 1. If we write out max{0, Ai × Cj - Bi × Dj}, we will get the following:

In the first query: {0, 0, 0, 2, 4}. The sum is 6.
In the second query: {0, 0, 0, 0, 3}. The sum is 3.
In the third query: {0, 0, 3, 6, 9}. The sum is 18.

