#include <bits/stdc++.h>
#define f first
#define s second
#define mp make_pair
using namespace std;
typedef pair<int,int> pi;
string s;
pi tree[400005];
int a,b;
pi create(int node,int l,int r)
{
	if (l==r){
		int a=0,b=0;
		if (s[l]==')') a++;
		else b++;
		return tree[node]=mp(a,b);
	} 
	pi a=create(2*node,l,(l+r)/2),b=create(2*node+1,(l+r)/2+1,r);
	int tmp=min(a.s,b.f);
	return tree[node]=mp(a.f+b.f-tmp,a.s+b.s-tmp);
}

pi update(int node,int l,int r)
{
	if (!(l<=a&&r>=a)&&!(l<=b&&r>=b)) return tree[node];
	if (l==r){
		int c=0,d=0;
		if (s[l]==')') c++;
		else d++;
		return tree[node]=mp(c,d);
	}
	pi tl=update(2*node,l,(l+r)/2),tr=update(2*node+1,(l+r)/2+1,r);
	int tmp=min(tl.s,tr.f);
	return tree[node]=mp(tl.f+tr.f-tmp,tl.s+tr.s-tmp);
}

void cek(int node,int l,int r)
{
	printf("%d %d %d %d %d\n",node,l,r,tree[node].f,tree[node].s);
	if (l==r) return;
	cek(2*node,l,(l+r)/2);
	cek(2*node+1,(l+r)/2+1,r);
}

int main()
{
	getline(cin,s);
	int n=s.size()-1;
	create(1,0,n);
	int q;
	for (scanf("%d",&q);q>0;q--){
		scanf("%d%d",&a,&b);
		swap(s[a],s[b]);
		pi ans=update(1,0,n);
		//cek(1,0,n);
		if (ans.f==0&&ans.s==0) printf("Yes\n");
		else printf("No\n");
	}
}