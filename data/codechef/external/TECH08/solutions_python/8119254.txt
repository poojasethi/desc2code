using namespace std;

#include <string>
#include <vector>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <ctime>
#include <list>
#include <map>
#include <set>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <iostream>
#include <fstream>
#include <sstream>
#include <string.h>
#include <stack>
#include <queue>
#include <limits.h>
#include <iterator>
#include <iomanip>
#include <time.h>

#define null NULL
#define PRINT_NEW_LINE printf("\n")
#define gc getchar_unlocked
#define MAX_INPUT_SIZE 1001
#define CODEFORCES_MAX_INPUT_SIZE 101
#define TOPCODER_MAX_INPUT_SIZE 51
#define ALPHABET_SIZE 26
#define HACKER_RANK_LOWER_CASE "hackerrank"
#define MAX_SIZE_USER_INPUT 101
#define ULL unsigned int
#define LIMIT 101
#define MODN 10000009

long long int min(long long int A,long long int B){
	return A < B?A:B;
}

void getTotalPossibleSums(long long int N,long long int A,long long int B,long long int C){
	long long int sum = 0;
	for(long long int aCounter = 0;aCounter <= A;aCounter++){
		for(long long int bCounter = 0;bCounter <= B;bCounter++){
			if(aCounter + bCounter <= N){
				sum += min(N+1-aCounter - bCounter,C+1);
			}else{
				break;
			}
		}
	}
	cout << sum << endl;
}

void printResults(){
	long long int testCases,N,A,B,C;
	cin >> testCases;
	while(testCases--){
		cin >> N >> A >> B >> C;
		getTotalPossibleSums(N,A,B,C);
	}
}

int main(){
	printResults();
	return 0;
}
