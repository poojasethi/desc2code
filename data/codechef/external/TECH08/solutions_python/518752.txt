import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;


public class Main {

	public static void main(String[] args) {
		//		long start = System.nanoTime(); 
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in)); 
		String str;
		try{
			str = br.readLine();
			int numCases = Integer.parseInt(str.replaceAll("\\s+$", ""));

			for(int i=0; i<numCases; i++){

				str = br.readLine();
				str = str.replaceAll("\\s+$", "");
				String[] tokens = str.split(" ");

				long N = Integer.parseInt(tokens[0]);
				long A = Integer.parseInt(tokens[1]);
				long B = Integer.parseInt(tokens[2]);
				long C = Integer.parseInt(tokens[3]);
				//System.out.println(Arrays.toString(permutation));
				findSolutions(N, A, B, C);
			}
		}
		catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
		//	long end = System.nanoTime();
		//	System.out.println((end-start) + " ns");
	}

	private static void findSolutions(long n, long a, long b, long c) {
		long count=0;
		for(int i=0; i<= Math.min(a, n); i++){
			for(int j=0; j<= Math.min(b, n-i); j++){
				long leftover = n-i-j;
				if(!(leftover<0)){
					count=count+Math.min(leftover+1, c+1);
					//System.out.println(i + "," + j + " " + count);
				}
			}
		}
		System.out.println(count);
	}

}
