// {{{
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <sstream>
#include <string>
#include <cstring>
#include <utility>
#include <vector>
#include <map>
#include <numeric>
#include <set>
#include <queue>
#include <ext/hash_map>

using namespace std;
using namespace __gnu_cxx;


#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++) //Nice trick
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define SQR(a) ((a)*(a))
#define REVERSE(c) reverse(ALL(c))
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define SET(x,v)	memset(x,v,sizeof(x))
#define PB push_back
#define MP make_pair
#define SZ(c) (c).size()
#define EPS 1e-10

/* Debuging */
const bool DEBUG = true;
#define DB(x) 		if(DEBUG) cout << #x << " : " << x <<endl;
#define HELLO		if(DEBUG) puts("hello");

typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef vector<VI> VVI;
const int INF = 1000000000; const LL INFLL = LL(INF) * LL(INF);

#define ACCEPTED
#ifdef ACCEPTED
 #ifdef ONLINE_JUDGE
   ///FAST I/O FOR JUDGE
    const int BUFFSIZE = 10240;
    char BUFF[BUFFSIZE + 1], *p = BUFF;
    int CHAR, SIGN, BYTES = 0;

    #define DIGIT(c) (((c) >= '0') && ((c) <= '9'))
    #define LETTER(c)(((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))
    #define MINUS(c) ((c)== '-')


    #define GETCHAR(c) {								\
	      if(p-BUFF==BYTES && (BYTES==0 || BYTES==BUFFSIZE)){BYTES=fread(BUFF,1,BUFFSIZE,stdin);p=BUFF;}	\
	      if(p-BUFF==BYTES && (BYTES>0 && BYTES<BUFFSIZE)){BUFF[0]=0;p=BUFF;}					\
	      c = *p++;										\
        }


     #define GETNUM(n) {								\
	         n = 0;SIGN = 1; do{GETCHAR(CHAR);}while(!(DIGIT(CHAR)|| MINUS(CHAR)));	\
	         if(MINUS(CHAR)){SIGN = -1; GETCHAR(CHAR);}		\
	            while(DIGIT(CHAR)){n = 10*n + CHAR-'0'; GETCHAR(CHAR);}if(SIGN == -1){n = -n;}\
         }

     #define GETS(s,i) {								\
	           i = 0;do{GETCHAR(s[i]);}while(!LETTER(s[i]));	\
              do{GETCHAR(s[++i]);}while(LETTER(s[i]));	\
	          s[i]=0;													\
    }

   #define PUTNUM(n) fprintf(stdout,"%d ",n);

   #endif
  #else

     #define LETTER(c)(((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))
     #define GETNUM(n) scanf("%d",&n);
     #define GETS(s,i) {								\
	           i = 0;do{s[i] = getchar();}while(!LETTER(s[i]));	\
              do{s[++i] = getchar();}while(LETTER(s[i]));	\
	          s[i]=0;													\
    }
     #define PUTNUM(n) fprintf(stdout,"%d\n",n);

#endif

// }}}

int main(){
    register int A,B,C,N;
    int T;
    register LL ans;
    GETNUM(T);
    REP(i,T){

      GETNUM(N);
      GETNUM(A);
      GETNUM(B);
      GETNUM(C);

      ans = 0;
      for(int i = 0; i <= A && i <= N; i++)
         for(int j = 0; j <= B && j <= N-i; j++)
             ans += (1+min(C,N-(i+j)));
     printf("%lld\n",ans);
    }
    return 0;
}
