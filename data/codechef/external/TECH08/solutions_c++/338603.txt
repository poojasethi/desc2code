/*
        Author: Shiplu
        Problem:
        Algorithm:
        Complexity:
*/
#include<cstdio>
#include<cstring>
#include<cmath>
#include<cctype>
#include<vector>
#include<stack>
#include<queue>
#include<set>
#include<map>
#include<algorithm>
#include<iostream>
#include<sstream>
#include<numeric>
#include<fstream>
using namespace std;
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>(b)?(a):(b))
#define memo(a,v) memset(a,v,sizeof(a))
#define pb push_back
#define all(a) a.begin(),a.end()
#define eps (1e-9)
#define inf (1<<29)
#define i64 long long
int main(){
        
        int N,n,m,t,a,b,c,i;
        scanf("%d",&t);
        while(t--){
			i64 pos[ 2600 ], i;
            scanf("%d %d %d %d",&N,&a,&b,&c);
			i64 cnt = 0;
			for(n = 0; n <= N; n ++ )
			{
				cnt = 0;
				for(i = 0; i <= n; i ++ ){
					if( i > b || ( n - i ) > c ) cnt ++;
				}
				pos[ n ] = n + 1 - cnt;
				if( n > 0 ) pos[ n ] += pos[ n - 1 ];
			}
			i64 res = 0;
			for(i = 0; i <= a; i ++ )
			{
				if( N - i >= 0 )	res += pos[N - i];
			}
			cout << res << endl;
        }
        return 0;
}