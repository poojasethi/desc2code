#include <stdio.h>
#include <iostream>
#include <cstdlib>
#include <math.h>

using namespace std;

typedef struct Frac{
	long long num;
	long long denom;
}frac;

long long gcd(long long a, long long b){
	long long r;
	long long mi, ma;
	ma = max(a,b);
	mi = min(a,b);
	if(mi == 0)
		return -1;
	r = ma % mi;
	while(r != 0){
		ma = mi;
		mi = r;
		r = ma % mi;
	}
	return mi;	
}

int main(){
	int T;	
	cin >> T;
	long long M, N;
	frac Po1, Pe1, Po2, Pe2;
	frac res;
	for(int i = 0; i < T; i++){
		cin >> N; cin >> M;
		if(M % 2 == 1){
			Po1.num = (M+1);
			Po1.denom = 2*M;
			Pe1.num = (M-1);
			Pe1.denom = (2*M);
		}
		else{
			Pe1.num = Po1.num = 1;
			Pe1.denom = Po1.denom = 2;	
		}
		if(N % 2 == 1){
			Po2.num = (N+1);
			Po2.denom = (2*N);
			Pe2.num = (N-1);
			Pe2.denom = (2*N);
		}
		else{
			Pe2.num = Po2.num = 1;
			Pe2.denom = Po2.denom = 2;
		}
		res.num = Po1.num*Pe2.num + Pe1.num*Po2.num;
		res.denom =  Po1.denom*Pe2.denom;
		int g = gcd(res.num, res.denom);
		if(g > 0){
			cout << (res.num)/g << "/" << (res.denom)/g << endl;	
		}
		else 
			cout << "0/1" << endl;	
	}
}	
	



	