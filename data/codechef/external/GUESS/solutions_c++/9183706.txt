#include <bits/stdc++.h>

using namespace std;

unsigned long long GCD(unsigned long long a, unsigned long long b) {
    if(b == 0) {
        return a;
    }
    return GCD(b, a % b);
}

int main() {
    int t;
    unsigned long long n, m;
    cin >> t;
    while(t --) {
        cin >> n >> m;
        unsigned long long denominator = n * m;
        unsigned long long numerator;
        if(n % 2 == 1) {
            if(m % 2 == 0) {
                numerator = ( (((unsigned long long)(n / 2) + 1) * (unsigned long long)(m / 2))  + (((unsigned long long)(n / 2)) * (unsigned long long)(m / 2)) );
            } else {
                numerator =   ((((unsigned long long)(n / 2) + 1) * ((unsigned long long)(m / 2))) + (((unsigned long long)(n / 2)) * ((unsigned long long)(m / 2) + 1)));
            }
        } else {
            if(m % 2 == 0) {
                numerator =   ((((unsigned long long)(n / 2)) * ((unsigned long long)(m / 2))) + (((unsigned long long)(n / 2)) * ((unsigned long long)(m / 2))));
            } else {
                numerator = ( (((unsigned long long)(m / 2) + 1) * (unsigned long long)(n / 2))  + (((unsigned long long)(m / 2)) * (unsigned long long)(n / 2)) );
            }
        }
        if(numerator == 0) {
            cout << "0/1" << endl;
        } else {
            unsigned long long gcd = GCD(denominator, numerator);
            cout << numerator / gcd << "/" << denominator / gcd << endl;
        }
    }
    return 0;
}
