    //ALL HAIL MEGATRON

using namespace std;

#include<bits/stdc++.h>

#define wl(n) while(n--)
#define fl(i,a,b) for(i=a; i<b; i++)
#define rev(i,a,b) for(i=a; i>=b; i--)
#define scan(n) scanf("%d", &n)
#define scans(s) scanf("%s", s)
#define scanc(c) scanf("%c", &c)
#define scanp(f) scanf("%f", &f)
#define scanll(l) scanf("%lld", &l)
#define scanllu(u) scanf("%llu", &u)
#define print(n) printf("%d\n", n)
#define prints(s) printf("%s\n", s)
#define printc(c) printf("%c\n", c)
#define printp(f) printf("%f\n", f)
#define printll(l) printf("%lld\n", l)
#define printllu(u) printf("%llu\n", u)
#define nline printf("\n")
#define mclr(strn) strn.clear()
#define ignr cin.ignore()
#define MOD 1LL<<60
#define ll long long int
#define u64 unsigned long long int
#define PB push_back

ll a[1000005],n;
ll pre[1000005];

ll foo(ll v, ll x, ll y, ll ind)
{
	ll i,s=0,sx,sy;
	
	if(x!=0)
		sx = pre[ind]-pre[x-1];
	else
		sx = pre[ind];
	ll n1 = ind-x+1;
	ll s1 = n1*v - sx;

	sy = pre[y]-pre[ind];
	ll n2 = y-ind;
	ll s2 = sy - n2*v;

	s = s1+s2;
	return s;
}

int main()
{
	int t;
	scan(t);
	wl(t)
	{
		ll i,ans=MOD,s=MOD,s1=MOD,sum=MOD;
		scanll(n);
		fl(i,0,n)
			scanll(a[i]);
		
		sort(a,a+n);
		
		fl(i,0,n)
		{
		    if(i==0)
				pre[i] = a[i];
			else
				pre[i] = pre[i-1] + a[i];
		}    
		

		fl(i,1,n)
		{
			s = foo(a[i/2],0,i-1,i/2);
			if(i>1)
				s = min(s, foo(a[i/2-1],0,i-1,i/2-1));

			s1 = foo(a[i+((n-i)/2)],i,n-1,i+((n-i)/2));
			if((n-i)>1)
				s1 = min(s1, foo(a[i+((n-i)/2-1)],i,n-1,i+((n-i)/2-1)));
			sum = min(sum, s1+s);
		}

		if(n<=2)
			printf("0\n");
		else
			printll(sum);
	}		
	return 0;
}