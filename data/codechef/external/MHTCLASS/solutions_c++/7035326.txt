#include<bits/stdc++.h>
#define MOD 1000000007
#define M(a,x) memset(a,x,sizeof(a))
using namespace std;

int dp[100005][26];
char a[100005];
int sum[100005][26];
void show() {

 for(int i=0;i<10;i++) {
        for(int j=0;j<26;j++) {
            cout<<dp[i][j]<<" ";
        }
        cout<<endl;
  }
  cout<<endl;
  for(int i=0;i<10;i++) {
        for(int j=0;j<26;j++) {
            cout<<sum[i][j]<<" ";
        }
        cout<<endl;
  }
  cout<<endl;
}
int main() {
    int t;
    scanf("%d",&t);
    while(t--) {
        M(dp,0);M(sum,0);M(a,0);
        scanf("%s",a);
        int d;scanf("%d",&d);
        for(int i=0;i<26;i++) {
            if(a[0]=='.') {
                dp[0][i]=1;
            }
            else {
                dp[0][a[0]-97]=1;
            }
        }
        sum[0][0]=dp[0][0];
        for(int i=1;i<26;i++) {
            sum[0][i]=sum[0][i-1]+dp[0][i];
        }
        int n=strlen(a);
        int mx,mn;
//      show();
        for(int i=1;i<n;i++) {
            if(a[i]=='.') {
                for(int j=0;j<26;j++) {
                    mx=min(25,j+d);
                    mn=max(0,j-d);
                    if(mn==0) {
                        dp[i][j]=sum[i-1][mx];
                    }
                    else {
                        dp[i][j]=(sum[i-1][mx]-sum[i-1][mn-1])%MOD;
                        if(dp[i][j]<0)
                            dp[i][j]+=MOD;
                    }
                }
            }
            else {
                mx=min(25,a[i]-97+d);
                mn=max(0,a[i]-97-d);
                if(mn==0) {
                    dp[i][a[i]-97]=sum[i-1][mx];
                }
                else {
                    dp[i][a[i]-97]=(sum[i-1][mx]-sum[i-1][mn-1])%MOD;
                    if(dp[i][a[i]-97]<0)
                            dp[i][a[i]-97]+=MOD;
                }
            }
            sum[i][0]=dp[i][0];
            for(int j=1;j<26;j++) {
                sum[i][j]=(sum[i][j-1]+dp[i][j])%MOD;
            }
//          show();
        }
        cout<<sum[n-1][25]%MOD<<endl;
    }
}
