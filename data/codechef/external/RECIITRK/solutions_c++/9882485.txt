#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ft first
#define sd second
#define mem(a, v) memset(a, v, sizeof(a))
#include<stdio.h>
#ifndef ONLINE_JUDGE
#define get getchar
#else
#define get getchar_unlocked
#endif
typedef long long ll;
typedef vector<ll> VI;
typedef pair<ll, ll> PII;
typedef vector<VI> matrix;
const ll mod = 1000000007LL;
 
matrix adj1(1000010), adj2(1000010);
bool visited[1000010];
int ans[1000010];
int sz;
stack<int> S;
inline int f()
{
	int n=0,s=1;
	char p=get();
	if(p=='-')
		s=-1;
	while((p<'0' || p>'9') && p!=EOF && p!='-')
		p=get();
	if(p=='-')
		s=-1,p=get();
	while(p>='0' && p<='9' )
	{
		n=(n<<3)+(n<<1)+(p-'0');
		p=get();
	}
	return (n*s);
}
void dfs1(int u)
{
    visited[u] = true;
    for(int i=0; i<adj1[u].size(); i++){
        int nxt = adj1[u][i];
        if(!visited[nxt])
            dfs1(nxt);
    }
    S.push(u);
}
 
void dfs2(int u)
{
    visited[u] = true;
    ans[u] = 1;
    sz++;
    for(int i=0; i<adj2[u].size(); i++){
        int nxt = adj2[u][i];
        if(!visited[nxt])
            dfs2(nxt);
    }
}
 
int main()
{
    int n, m,t;
    //cin>>t;
    t=f();
    while(t--)
    {
    //cin>>n;
    n=f();
    for(int i=0;i<n;i++)
    {
    	adj1[i].clear();
    	adj2[i].clear();
    	visited[i]=0;
    }
    for(int i=0; i<n; i++){
        int x, y;
        //cin>>x;
        x=f();
        if(x!=-1)
        {
        adj1[i].pb(x);
        adj2[x].pb(i);
        }
    }
    for(int i=0; i<n; i++){
        if(!visited[i]){
            dfs1(i);
        }
    }
    mem(visited, false);
    int ans=-1;
    while(!S.empty()){
        int nxt = S.top();
        S.pop();
        if(!visited[nxt]){
            sz = 0;
            dfs2(nxt);
            ans=max(ans,sz);
           /* if(sz == 1){
                ans[nxt] = 0;
            } */
        }
    }
   /* for(int i=1; i<=n; i++){
        cout<<ans[i]<<" ";
    } */
    if(ans==1)
    cout<<-1<<endl;
    else
	cout<<ans<<endl;
    }
    return 0;
} 