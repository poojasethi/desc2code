#include <bits/stdc++.h>
using namespace std;
/*typedef struct date
{
	int cost;
	int sat;
	float w;
}date;*/
typedef pair<int,int> date;

void knapsack(int W ,int cost[],int val[],int n)
{
	date dp[n+1][W+1];
	for(int i=0;i<=n;i++)
	{
		dp[i][0].first=0;
		dp[i][0].second=0;
	}
	for(int i=0;i<=W;i++)
	{
		dp[0][i].first=0;
		dp[0][i].second=0;
	}
	for(int i=1;i<=n;i++)
	{
		for(int w=1;w<=W ;w++)
		{
			if(cost[i-1]<=w)
			{
				if(dp[i-1][w].first>dp[i-1][w-cost[i-1]].first+val[i-1])
				{
					dp[i][w].first=dp[i-1][w].first;
					dp[i][w].second=dp[i-1][w].second;
				}
				else if(dp[i-1][w].first<dp[i-1][w-cost[i-1]].first+val[i-1])
				{
					dp[i][w].first=dp[i-1][w-cost[i-1]].first+val[i-1];
					dp[i][w].second=dp[i-1][w-cost[i-1]].second+cost[i-1];
				}
				else
				{
					dp[i][w].first=dp[i-1][w].first;
					if(dp[i-1][w].second>dp[i-1][w-cost[i-1]].second+cost[i-1])
						dp[i][w].second=dp[i-1][w-cost[i-1]].second+cost[i-1];
					else
						dp[i][w].second=dp[i-1][w].second;
				}
			}
			else
			{
				dp[i][w].first=dp[i-1][w].first;
				dp[i][w].second=dp[i-1][w].second;
				}
		}
	}
	cout<<dp[n][W ].second<<" "<<dp[n][W ].first<<endl;
//	return dp[n][W ];
}

int main()
{
	int N=0,M=0,i=0,cost=0,sat=0;
	while(1)
	{
		scanf("%d%d",&M,&N);
		if(M==0 && N==0)
			break;
		int cost[N],val[N];
		for(i=0;i<N;i++)
		{
			scanf("%d%d",&cost[i],&val[i]);
		}
		knapsack(M,cost,val,N);
		//cout<<ans.second<<" "<<ans.first<<endl;
	}
	return 0;
}
			
		