#include<iostream>
using namespace std;
int K[101][501];
int k1(int W, int wt[], int val[], int n)
{
   int i, w ;
   for (i = 0; i <= n; i++)
   {
       for (w = 0; w <= W; w++)
       {
           if (i==0 || w==0)
               K[i][w] = 0;
           else if (wt[i-1] <= w)
                 {
                 	K[i][w] = max(val[i-1] + K[i-1][w-wt[i-1]],  K[i-1][w]);
                 	
                 }
           else
                 K[i][w] = K[i-1][w];
       }
   }
   int enj=0,cost=0;
    for (int w=0; w<=W; w++)
    {
        if(K[n][w]>enj)
        {
            enj=K[n][w];
            cost=w;
        }
    }
    cout<<cost<<" "<<enj<<endl;
 
   return K[n][W];
}
int main()
{
	while(1)
	{
		int w,f=0,n;
		cin>>w>>n;
		if(w==0&&n==0)
		{
			break;
		}
		int wt[n],val[n];
		
		for(int i=0;i<n;i++)
		{
			cin>>wt[i]>>val[i];
		}
		int h,y=k1(w,wt,val,n);
		
	}
}
