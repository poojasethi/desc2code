#include <iostream>
#include <algorithm>
#include <string.h>
#include<cstdio>
using namespace std;
int get()                  // working even in loops, working excellent
{
  char c;
  while(c=getchar_unlocked(),(c<'0'||c>'9')&&(c!='-'));
  bool Flag=(c=='-');
  if(Flag)
    c=getchar_unlocked();
  int X=0;
  while(c>='0'&&c<='9')
    {
      X=X*10+c-48;
      c=getchar_unlocked();
    }
  return Flag?-X:X;
}
 
inline void get(char *str)
 
{
    register char c = 0;
    register int i = 0;
    while (c < 33)
        c = getchar_unlocked();
 
    while (c != '\n') {
        str[i] = c;
        c = getchar_unlocked();
        i = i + 1;
    }
    str[i] = '\0';
 
}
 
int main()
{
     char num[100000],n[100000],min,temp;
     int i,j,pos;
       int t = get();
  //s(t);
  while(t--)
  {
    //char num[100000];
    get(n);
    strcpy(num,n);
    
    for(i=strlen(num)-2;i>=0;i--)
    {
        if(num[i]<num[i+1])
        {
            min=num[i+1];
            pos=i+1;
            //cout<<pos<<endl;
            
            if(i+2>=strlen(num))
            {
            temp=num[i];
            num[i]=num[i+1];
            num[i+1]=temp;
            break;
            }
            for(j=i+2;j<strlen(num);j++)
            {
                if(num[j]<min && num[j]>num[i])
                    pos=j; 
            }
            //cout<<num[pos]<<endl;
            temp=num[i];
            num[i]=num[pos];
            num[pos]=temp;
            
            sort(num+i+1,num+strlen(num));
            break;
        }
    }
    if(strcmp(n,num)==0)
    cout<<"-1"<<endl;
    else
   cout<<num<<endl;
   }
   return 0;
}
