#include <bits/stdc++.h>
using namespace std;

typedef long long LL;
typedef vector<int> vi;
typedef pair<int,int> pii;

const int MAXN = 2e5 + 9;
const LL  MOD  = 1e9 + 7;

#define mp make_pair
#define pb push_back

/***************************************** MAIN CODE *************************************************/

int tc,N,M;
int par[2009],rank[2009];
bool connected[2009][2009];

inline int find(int node){
	if(par[node] != node)
		par[node] = find(par[node]);
	return par[node];
}

int main (){
	scanf("%d",&tc);
	
	while(tc--){
		for(int i = 1;i < 2009;++i){
			par[i] = i,rank[i] = 1;
			for(int j = 1;j < 2009;++j)
				connected[i][j] = false;
		}

		scanf("%d %d",&N,&M);
		for(int i = 0;i < M;++i){
			int u,v; scanf("%d %d",&u,&v);
			if(connected[u][v]) continue;
			while(u < v){
				connected[u][v] = true;
				int parU = find(u),parV = find(v);
				if(rank[parU] > rank[parV]){
					par[parV] = parU;
					rank[parU] = max(rank[parU],1 + rank[parV]);
				} else {
					par[parU] = parV;
					rank[parV] = max(rank[parV],1 + rank[parU]);
				}
				u++; --v;
			}
		}

		LL ret = 1LL;
		for(int i = 1;i <= N;++i)
			if(find(i) == i) ret = (ret * 26LL) % MOD;
		
		printf("%lld\n",ret);
	}
	return 0;
}
