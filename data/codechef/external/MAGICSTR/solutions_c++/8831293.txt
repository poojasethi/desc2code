#include<bits/stdc++.h>
using namespace std;
const int MOD = 1e9+7;
#define pb push_back
int a[2005][2005];
int parent[2005];
int size[2005];
int cnt;
void Set(int n) {
    for(int i=0;i<=n;i++) {
        parent[i]=i;
        size[i]=1;
    }
    cnt=n;
}
int find_parent(int u) {
    if(u!=parent[u]) {
        u=find_parent(parent[u]);
    }
    return parent[u];
}
void merge(int x, int y) {
    int X = find_parent(x);
    int Y = find_parent(y);
    if(X == Y ) return ;
    if(size[X] >= size[Y]) {
        parent[Y]=X;
        size[X]+=size[Y];
    }
    else {
        parent[X]=Y;
        size[Y]+=size[X];
    }
    cnt--;
}
int main() {
    int t;cin>>t;
    while(t--) {
        int n,m;cin>>n>>m;
        Set(n);
        memset(a,0,sizeof(a));
        for(int i=0;i<m;i++) {
            int x,y;
            scanf("%d%d",&x,&y);
            a[x][y]=1;
        }
        for(int i=1;i<=n;i++) {
            for(int j=i;j<=n;j++) {
                if(a[i][j]==1) {
                    merge(i,j);
                    if(j-i>1)
                    a[i+1][j-1]=1;
                }
            }
        }
        long long ans = 1;
        for(int i=0;i<cnt;i++) {
            ans=ans*26;
            ans%=MOD;
        }
        cout<<ans<<endl;
    }
}
