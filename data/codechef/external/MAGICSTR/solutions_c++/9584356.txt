#include <bits/stdc++.h>
#define ll long long
#define mod 1000000007
#define sc(a) scanf("%lld", &a)
#define pr(a) printf("%lld\n", a)
#define sz 500005

using namespace std;

ll query[2005][2], len[2005][2], par[2005];

long long powd(long long a,long long b, long long c)
{
     long long x = 1, y = a;
     while (b > 0) {
           if (b % 2 == 1) 
              x = (x*y)%c;
           y = (y*y)%c;
           b = b/2;
     }
     return x%c;
}

ll findp(ll p)
{
	if (par[p] != p) {
		return par[p] = findp(par[p]);
	}
	return p;
}

void uni(ll a, ll b)
{
	a = findp(a);
	b = findp(b);
	if (a < b)
		par[b] = a;
	else 
		par[a] = b;
}

int main()
{
	ll t,a,b,mid,i,j,k,l,m,n,fl;
	sc(t);
	while (t--) {
		sc(n);
		sc(m);
		for (i = 0; i < n; i++) {
			query[i][0] = query[i][1] = 0;
			len[i][0] = len[i][1] = 0;
		}
		for (i = 0; i < m; i++) {
			sc(a);
			sc(b);
			a--;
			b--;
			mid = (a+b)/2;
			l = (b-a+1);
			if (l%2 == 0) {
				if (l > len[mid][0]) {
					len[mid][0] = l;
					query[mid][0] = 1;
				}
			}
			else {
				if (l > len[mid][1]) {
					len[mid][1] = l;
					query[mid][1] = 1;
				}
			}
		}
		for (i = 0; i < n; i++)
			par[i] = i;
		for (i = 0; i < n; i++) {
			if (query[i][1] == 1) {
				k = len[i][1]/2;
				for (j = 1; j <= k; j++) {
					uni(i-j,i+j);
				}
			}
			if (query[i][0] == 1) {
				k = len[i][0]/2;
				for (j = 1; j <= k; j++) {
					uni(i-j+1,i+j);
				}
			}
		}

		set<ll> st;
		st.clear();
		for (i = 0; i < n; i++)
			st.insert(findp(i));
		cout << powd(26, st.size(), mod) << endl;
		
	}
	
 	return 0;
}
