#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pi;

#define MP make_pair
#define PB push_back
#define F first
#define S second
#define MOD 1000000007
#define INF (1 << 30)

ll power(ll a, ll b)
{
	if(b == 0)
		return 1;
	ll halfpow = power(a, b/2);
	ll temp = (halfpow * halfpow) % MOD;
	if(b % 2 == 0)
		return temp;
	else
		return (a * temp) % MOD;
}

int parent[2005];
int right1[4005];

int findset(int i)
{
	if(i != parent[i])
		parent[i] = findset(parent[i]);
	return parent[i];
}

int merge(int a, int b)
{
	int p1 = findset(a);
	int p2 = findset(b);
	if(p1 == p2)
		return 0;
	if(p1 < p2)
	{
		parent[p2] = p1;
		parent[b] = p1;
	}
	else
	{
		parent[p1] = p2;
		parent[a] = p2;
	}
	return 1;
}

int main()
{
	ios::sync_with_stdio(false);
	int t;
	int n, m, i, x, c;
	int l, r;
	cin >> t;
	while(t--)
	{
		c = 0;
		cin >> n >> m;
		memset(right1, 0, sizeof right1);
		for(i = 1; i <= n; i++)
			parent[i] = i;
		while(m--)
		{
			cin >> l >> r;
			right1[l + r] = max(right1[l + r], r);
		}
		for(i = 1; i < 2 * n; i++)
		{
			r = right1[i];
			l = i - r;
			while(l < r)
			{
				c += merge(l, r);
				l++;
				r--;
			}
		}
		x = n - c;
		ll ans = power(26, x);
		cout << ans << endl;
	}
	return 0;
}
