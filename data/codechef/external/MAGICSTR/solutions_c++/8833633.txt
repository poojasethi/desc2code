#include<bits/stdc++.h>
using namespace std;

#define LL long long
const int MAXN = 2000 + 10;
const LL MOD = 1e9 + 7;

int par[MAXN];
int rank[MAXN];
bool mp[MAXN][MAXN];
inline int getPar(int x){
    return (x == par[x]? x : (par[x] = getPar(par[x])));
}
inline void merge(int x,int y){
    int px = getPar(x);
    int py = getPar(y);
    if(rank[px] < rank[py]){
        par[px] = py;
        rank[py] = max(rank[py], rank[px] + 1);
    } else{
        par[py] = px;
        rank[px] = max(rank[px], rank[py] + 1);
    }
}
int cnt[MAXN];
int main(){
    int t;
    scanf("%d",&t);
    while(t--){
        int n,m;
        scanf("%d%d",&n,&m);
        memset(mp,0,sizeof(mp));
        for(int i = 1;i <= n;++i){
            par[i] = i;
            rank[i] = 1;
        }
        while(m--){
            int L, R;
            scanf("%d%d",&L,&R);
            for(int i = L, j = R; i < j; ++i, --j){
                if(mp[i][j]){
                    break;
                }
                mp[i][j] = true;
                merge(i,j);
            }
        }
        for(int i = 1; i <= n;++i){
            par[i] = getPar(i);
        }
        memset(cnt, 0,sizeof(cnt));
        for(int i = 1;i <= n;++i){
            cnt[par[i]] += 1;
        }
        LL ans = 1;
        for(int i = 1;i <= n;++i){
            if(cnt[i] > 0){
                ans = (ans * 26)%MOD;
            }
        }
        printf("%lld\n", ans);
    }
    return 0;
}