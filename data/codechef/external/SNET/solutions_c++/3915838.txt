#include <cstdio>
#include <vector>
#include <map>
#include <string>
#include <iostream>
using namespace std;
map<string,int> mp;
map<int,string> mp1;
vector<int> vec[100005];
bool visited[100005];
int dfs(int cur){
int ans=0;
visited[cur]=true;
for(int i=0;i<vec[cur].size();i++){
    if(!visited[vec[cur][i]])
        ans+=dfs(vec[cur][i]);
}
return ans+1;
}
int main(){
int k,v=0;
string str,str1,str2,name;
cin>>str;
if(mp.find(str)==mp.end()){
mp[str]=v++;
mp1[v-1]=str;
visited[v-1]=true;
}
cin>>k;
for(int i=0;i<k;i++){
    cin>>str1>>str2;
    if(mp.find(str1)==mp.end()){
        mp[str1]=v++;
        mp1[v-1]=str1;
    }
    if(mp.find(str2)==mp.end()){
      mp[str2]=v++;
      mp1[v-1]=str2;
    }
    vec[mp[str1]].push_back(mp[str2]);
    vec[mp[str2]].push_back(mp[str1]);
}
int ans=0;
for(int i=0;i<vec[0].size();i++){
  if(visited[vec[0][i]]){
     if(name>mp1[vec[0][i]])
        name=mp1[vec[0][i]];
  }
  else{
   int value=dfs(vec[0][i]);
   if(value>ans){
    ans=value;
    name=mp1[vec[0][i]];
   }
  }
}
cout<<name<<endl<<ans<<endl;
return 0;
}
