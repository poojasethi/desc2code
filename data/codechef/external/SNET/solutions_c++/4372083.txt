#include<bits/stdc++.h>
#define pb push_back
#define mk make_pair
#define gi map<string,vector<string> >::iterator
typedef long long ll;
using namespace std;

map<string,vector<string> > G;
map<string,bool >           V;
int sT=0;

void dfs(string start){
    V[start] = 1;
    sT++;

    //cout<<"DF: "<<G[start].size()<<endl;

    for(int i=0;i<G[start].size();i++){
        //cout<<"DF: "<<start<<" "<<sT<<endl;
        string curr = G[start][i];
        if(V[curr])continue;

        dfs(curr);

    }
}

int main(){
    ios_base::sync_with_stdio(0);
    cin.tie(NULL);
    int k,sol=0;
    string start,s,a,b;cin>>start>>k;
    for(int i=0;i<k;i++){cin>>a>>b;G[a].pb(b);G[b].pb(a);V[a]=0;V[b]=0;}

    for(gi it= G.begin();it!=G.end();it++)sort(it->second.begin(),it->second.end());
    V[start] = 1;

    for(int i=0;i<G[start].size();i++){
        //cout<<G[start][i]<<endl;
        sT = 0;
        if(!V[G[start][i]]){
            dfs(G[start][i]);
            if(sT>sol){
                sol=sT;
                s = G[start][i];
            }
        }
    }
    cout<<s<<endl<<sol<<endl;
}


