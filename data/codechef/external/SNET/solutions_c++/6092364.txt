#include <bits/stdc++.h>
using namespace std;
#include <iostream>
map<string,vector<string> >m;
map<string,long long int>visit;
map<string,vector<string> >::iterator it;
long long int dfs(string node)
{
long long int &ret=visit[node];
if(ret)
return 0;
ret=1;



for(int i=0;i<m[node].size();i++)
{
ret=ret+dfs(m[node][i]);
}
return ret;
}
int main()
{
string src,y,x;
int t;
cin>>src>>t;
while(t--)
{
cin>>x>>y;
m[x].push_back(y);
m[y].push_back(x);
}

for(it=m.begin();it!=m.end();it++)
{
sort((it->second).begin(),(it->second).end());
visit[it->first]=0;
}

dfs(src);
string ans=m[src][0];
for(int i=0;i<m[src].size();i++)
{
if(visit[m[src][i]]>visit[ans])
{
ans=m[src][i];

}
}
cout<<ans<<"\n"<<visit[ans]<<"\n";

return 0;
}


