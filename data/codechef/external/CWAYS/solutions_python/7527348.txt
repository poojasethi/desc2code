#include <bits/stdc++.h>
#define MOD 1000000007
using namespace std;
 
pair<long long,long long> BB[2005];
long long ANS[2005],FF[200005],INVF[200005];
 
long long expoMod(long long b,long long K)
{
    if(K==0)
        return 1;
    long long ANS=expoMod(b,K/2);
    ANS=(ANS*ANS)%MOD;
    if(K%2==0) return ANS;
    else{
        ANS=(ANS*b)%MOD;
        return ANS;
    }
}
 
long long compute(long long a,long long b,long long c,long long d)
{
    long long x = c-a;
    long long y = d-b;
    long long res = FF[x+y];
    res = (res * INVF[x]) % MOD;
    res = (res * INVF[y]) % MOD;
    res = res % MOD;
    return res;
}
 
int main()
{
    //freopen("inp.in","r",stdin);
    long long t,M,N,K,x,y;
    
    FF[0] = 1;
    
    for(long long i = 1 ; i <= 200005 ; i++) FF[i] = (FF[i-1]*i) % MOD;

    INVF[200005] = expoMod(FF[200005],MOD-2);
    for(long long i = 200004; i >= 0 ; i--) INVF[i] = ( INVF[i+1]*(i+1) ) % MOD;
    int T;
    cin >> T;
    while(T--){
    cin >> M >> N >> K;

    for(int i = 0 ; i < K ; i++)
    {
        cin >> x >> y;
        BB[i]=make_pair(x,y);
    }

    BB[K]=make_pair(M,N);
    sort(BB,BB+K+1);
 
    for(int i=0;i<=K;i++) ANS[i]=compute(1,1,BB[i].first,BB[i].second);
    
    for(int i=0;i<K;i++)
    {
        for(int j=i+1;j<K+1;j++)
        {
            if((BB[j].first<BB[i].first) or (BB[j].second<BB[i].second))
                continue;
            ANS[j]=(ANS[j]-(ANS[i]*compute(BB[i].first,BB[i].second,BB[j].first,BB[j].second))%MOD+MOD)%MOD;
        }
    }

    if(ANS[K] < 0) ANS[K]+=MOD;
    cout << ANS[K] << "\n";
    }
    return 0;
} 