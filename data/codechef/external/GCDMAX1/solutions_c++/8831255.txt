#include <bits/stdc++.h>
using namespace std;
const int N = 500005;
int n, k, a[N], node[N*4];

void build(int id, int left, int right){
    if (left == right){
        node[id] = a[left];
        return;
    }
    int mid = (left + right) >> 1;
    build(id*2, left, mid);
    build(id*2+1, mid+1, right);
    node[id] = __gcd(node[id*2], node[id*2+1]);
}

int get(int id, int left, int right, int u, int v){
    if (left > v || u > right) return 0;
    if (u <= left && right <= v)
        return node[id];
    int mid = (left + right) >> 1;
    return __gcd(get(id*2, left, mid, u, v), get(id*2+1, mid+1, right, u, v));
}

int main(){
//    freopen("input.txt", "r", stdin);
    scanf("%d%d", &n, &k);
    for (int i = 0; i < n; ++i)
        scanf("%d", &a[i]);
    build(1, 0, n - 1);
    int head = 0;
    int ans = 0;
    for (int i = 0; i < n; ++i){
        int gcd = get(1, 0, n - 1, head, i);
        while (head <= i && gcd < k){
            ++head;
            if (head <= i)
                gcd = get(1, 0, n - 1, head, i);
        }
        ans = max(ans, i - head + 1);
    }
    cout << ans << endl;
}
