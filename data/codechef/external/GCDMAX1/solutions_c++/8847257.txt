#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define MAXN 500005
#define BASE 31
#define BLOCK 250
#define eps 1e-9
typedef unsigned long long int uint64;
typedef long long int int64;

struct node{
	int g;
	node(){
		g=0;
	}
	void merge(node a,node b){
		g=__gcd(a.g,b.g);
	}
};
node tree[4*MAXN];
int a[MAXN];

node query(int root,int lft,int rht,int u,int v){
	if((u<=lft)&&(v>=rht))
	return tree[root];
	int mid=(lft+rht);
	mid/=2;
	node l,r,n;
	if(u<mid)
	l=query(2*root,lft,mid,u,v);
	if(v>mid)
	r=query(2*root+1,mid,rht,u,v);
	n.merge(l,r);
	return n;
}

int table[500005][20];
int logtable[500005];

int chck(int lo,int en){
	int k=logtable[en-lo];
	int x=table[lo][k];
	int y=table[en-(1<<k)+1][k];
	return __gcd(x,y);
}

int main(){
	int n,i,k;
	for(i=2;i<=500001;i++){
		logtable[i]=logtable[(i/2)]+1;
	}
	cin>>n>>k;
	int K=ceil(log2(n));
	
	for(i=0;i<n;i++){
		scanf("%d",&a[i]);
	}
	
	for(i=0;i<n;i++)
	table[i][0]=a[i];
	
	for(i=1;i<=K;i++){
		for(int j=0;j+(1<<i)<=n;j++){
			table[j][i]=__gcd(table[j][i-1],table[j+(1<<(i-1))][i-1]);
		}
	}
	
	//cin>>n>>k;
	
	/*
	int h=ceil(log2(n));
	h=(1<<h);
	
	for(i=0;i<n;i++){
		tree[i+h].g=a[i];
	}
	for(i=h-1;i>0;i--)
	tree[i].merge(tree[2*i],tree[2*i+1]);
	*/
	int ans=0;
	
	for(i=0;i<n;i++){
		int lo=i+ans,hgh=n-1,pos=-1;
		
		while(lo<=hgh){
			int mid=(lo+hgh);
			mid/=2;
			//node x=query(1,h,2*h,i+h,mid+h+1);
			int g=chck(i,mid);
			if(g>=k){
				pos=mid;
				lo=mid+1;
			}
			else{
				hgh=mid-1;
			}
		}
		if(pos!=-1)
		ans=max(ans,pos-i+1);
	}
	
	printf("%d\n",ans);
	return 0;
}