#include<bits/stdc++.h>
using namespace std;
long long  gcd(long long  a,long long  b)
 {
 	 long long t=b;
 	while(b>0)
 	 {
 	 	 b=a%b;
 	 	 a=t;
 	 	 t=b;
	 }
	  return a;
 }
 long arr[500005];
 long seg[3000006];
void build(long l,long r,long i)
 {
 	if(l==r)
 	 seg[i]=arr[l];
 	else
 	  {
 	  	build(l,(l+r)/2,2*i+1);
 	  	build((l+r)/2+1,r,2*i+2);
 	  	seg[i]=gcd(seg[2*i+1],seg[2*i+2]);
	  }
 }
 long long  prod;
 long long  query(long sl,long sr,long l,long r,long i)
 {
 	  //cout<<i<<endl;
 	  if(sl>r||sr<l)
 	    return prod;
 	  else if(l<=sl&&sr<=r)
 	    {
 	    	 return seg[i];
		}
	  else
	     {
	     	 return gcd(query(sl,(sl+sr)/2,l,r,2*i+1),query((sl+sr)/2+1,sr,l,r,2*i+2));
		 }
 }
int main()
 {
 	 long i,n;
 	 long k,l,r;
 	 prod=1;
 	 cin>>n;
 	 cin>>k;
 	  for(i=0;i<n;i++)
 	     {
		   scanf("%ld",arr+i);
 	       prod=prod*arr[i];
 	     }
 	   build(0,n-1,0);
	   long long cur=prod;
	   long len=0;  
	   long j,max=0;
	   for(i=0;i<n;i++)
	     {
	     	cur=gcd(cur,arr[i]);
	     	//cout<<cur<<" "<<len<<endl;
	     	if(cur>=k)
	     	  len++;
	     	else if(len==0)
	     	  cur=prod;
	     	else
	     	{
	     		if(len>max)
	     		  max=len;
	     		j=i-1;
                   do
	             {
	               len--;
	               if(len==0)
	                 {   
					     cur=prod;
	                 	 i--;
	                 	 break;
					 }
				   cur=query(0,n-1,j+1-len,j,0);
			     } while(gcd(cur,arr[i])<k);
			     if(gcd(cur,arr[i])>=k&&len!=0)
			       len++;
			}
		 }
		 if(len>max)
		   max=len;
		 cout<<max<<endl;
 	return 0;
 }