#include <iostream>
#include <cstdio>
using namespace std;

int tree[2000100],arr[500100];

int gcd(int a,int b){
    if(a>b)
        return gcd(b,a);
    if(a==0)
        return b;
    return gcd(b%a,a);
}

void build(int t,int i,int j){
    if(i==j){
        tree[t]=arr[i];
        return;
    }
    int mid=(i+j)/2;
    build(2*t,i,mid);
    build(2*t+1,mid+1,j);
    tree[t]=gcd(tree[2*t],tree[2*t+1]);
}

int query(int t,int i,int j,int l,int r){
    if(l<=i&&j<=r)
        return tree[t];
    int mid=(i+j)/2;
    if(r<=mid)
        return query(2*t,i,mid,l,r);
    else if(l>mid)
        return query(2*t+1,mid+1,j,l,r);
    return gcd(query(2*t,i,mid,l,r),query(2*t+1,mid+1,j,l,r));
}

int main(){
    int n,k;
    scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++)
        scanf("%d",&arr[i]);
    build(1,1,n);
    int st=1,ans=0;
    for(int i=1;i<=n;i++){
        while(st<=i&&query(1,1,n,st,i)<k)
            st++;
        ans=max(ans,i-st+1);
    }
    printf("%d\n",ans);
}
