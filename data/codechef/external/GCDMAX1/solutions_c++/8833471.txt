#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef pair<int, int> pi;

#define MP make_pair
#define PB push_back
#define F first
#define S second
#define MOD 1000000007
#define INF (1 << 30)
#define N 500005

int n, k;
int a[N];
int prefix[N];
int suffix[N];

int gcd(int a, int b)
{
	while(b)
		b ^= a ^= b ^= a %= b;
	return a;
}

bool check(int size)
{
	int i, j;
	for(i = 1; i <= n; i += size)
	{
		int l = i;
		int r = min(n, i + size - 1);
		prefix[l] = a[l];
		for(j = l + 1; j <= r; j++)
			prefix[j] = gcd(prefix[j - 1], a[j]);
		suffix[r] = a[r];
		for(j = r - 1; j >= l; j--)
			suffix[j] = gcd(suffix[j + 1], a[j]);
	}
	for(i = 1; i <= n - size + 1; i++)
	{
		if(gcd(suffix[i], prefix[i + size - 1]) >= k)
			return true;
	}
	return false;
}

int binSearch(int l, int r)
{
	while(l <= r)
	{
		int mid = (l + r)/2;
		if(check(mid))
			l = mid + 1;
		else
			r = mid - 1;
	}
	return l - 1;
}

int main()
{
	ios::sync_with_stdio(false);
	cin >> n >> k;
	for(int i = 1; i <= n; i++)
	{
		cin >> a[i];
	}
	cout << binSearch(1, n) << endl;
	return 0;
}
