/* Name- Aayush Agarwal
   Language -C++
   */
#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <climits>
#include <set>
#include <map>
#include <vector>
#include <queue>
#include <list>
#include <deque>
#include <stack>
#include <iterator>
#include <cassert>
#include <cctype>
#include <string>
#include <sstream>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#define fOr(i,n) for(int i=0;i<n;i++)
#define For(i,n) for(int i=1;i<=n;i++)
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pl(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define nl    printf("\n");
#define ll  long long int
#define mod 1000000007
using namespace std;

const double eps=1e-9;
const double PI=2*acos(0.0);

#define VI vector<int>
#define VS vector<string>
#define VL vector<long long int>
#define VVI vector<VI>
#define PII pair<int,int>
#define PLL pair<ll,ll>
#define PSS pair<string,string>
#define PSI pair<string,int>
#define VPII vector<PII>
#define VPLL vector<PLL>
#define VPSS vector<PSS>
#define VPSI vector<PSI>
#define pb(a) push_back(a)
#define mp(a,b) make_pair(a,b)
#define min(a,b) ((a<b)?a:b)
#define max(a,b) ((a>b)?a:b)
#define sqr(x) ((x)*(x))

ll f,sum=0;
vector<int>maxheap;
vector<int>minheap;
void inp(int *a)
{
 register char c=0;
 while (c<33) c=getchar_unlocked();
 *a=0;
 while (c>33)
 {
     *a=*a*10+c-'0';
     c=getchar_unlocked();
 }
}
int main()
{    
     clock_t start,end;
     int t;int a,b,c,n;ll ans=0;int pu;
//	si(t);
	//start=clock();
	inp(&t);
	while(t--)
	{
		sum=0;
		inp(&a);
		inp(&b);
		inp(&c);
		inp(&n);
	//	a=1;b=1;c=1;n=200000;
		ans=0;
		f=1;int l2,l1;
		minheap.pb(f);ans=0;
		for(int i=2;i<=n;i++)
		{    
		     
		     l1=maxheap.size();
			l2=minheap.size();
		     if((l1+l2)%2)
		     {
		     	if(l1>l2)
		     	ans=maxheap[0];
		     	else
		     	ans=minheap[0];
		     }
		     else
		     {
		     	ans=maxheap[0];
		     }
		     ll k=(a*ans);
		     
		     ll k2=(b*(ll)i);
		     
		     f=k+k2+c;
			//f=((a*ans)%mod + ((b*i)%mod) + (c%mod));
			if(f>=mod)
			f%=mod;
			pu=f;
		     if(pu>ans)
		     {
		     	minheap.pb(pu);
		     	push_heap(minheap.begin(),minheap.end(),greater<ll>());
		     }
		     else
		     {
		     	maxheap.pb(pu);
		     	push_heap(maxheap.begin(),maxheap.end());
		     }
		      l1=maxheap.size();
			l2=minheap.size();
			if((l1-l2)>=2)
			{
				int d=maxheap[0];
				pop_heap(maxheap.begin(),maxheap.end());
				maxheap.pop_back();
				minheap.pb(d);
				push_heap(minheap.begin(),minheap.end(),greater<ll>());
				
			}
			else if((l2-l1)>=2)
			{
				int d=minheap[0];
				pop_heap(minheap.begin(),minheap.end(),greater<ll>());
				minheap.pop_back();
				maxheap.pb(d);
				push_heap(maxheap.begin(),maxheap.end());
				
			}
			sum=(sum+f);	
			
		}
		sum++;
		pl(sum);
		nl;
		maxheap.clear();
		minheap.clear();
			
	}
	//end=clock();
	//print111f("%0.2f\n",(end-start)/(CLOCKS_PER_SEC*1.0));
	
}