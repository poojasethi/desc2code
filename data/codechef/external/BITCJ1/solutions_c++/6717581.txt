#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<map>
#include<cmath>
#include<queue>
#include<climits>
#include<stack>
using namespace std;
typedef long long int ll;
ll n,limit,dp[52][52][2],arr[52];
ll recc(ll index,ll prev,ll flag)
{
    //cout<<index<<" "<<prev<<" "<<dp[index][prev][flag]<<endl;
    if(dp[index][prev+1][flag]!=-1)
        return dp[index][prev+1][flag];
    if(index==n&&flag==1)
        return 1;
    if(index==n&&flag==0)
        return 0;
    ll a=0,i,lim;
    lim=limit-((n-index-1));
    for(i=prev+1;i<=lim;i++)
    {
        if(i==arr[index])
        {
            a+=recc(index+1,i,flag);
        }
        else if(i<arr[index])
        {
            a+=recc(index+1,i,1);
        }
        else
        {
            a+=recc(index+1,i,0);
        }
    }
    dp[index][prev+1][flag]=a;
    return dp[index][prev+1][flag];
}
int main()
{
    //ios_base::sync_with_stdio(0);
    ll tc,i,ans,j,k;
    //cin>>tc;
    scanf("%lld",&tc);
    while(tc--)
    {
        ans=0,limit=0;
        //memset(dp,-1,sizeof(dp));
        memset(arr,0,sizeof(arr));
        //cin>>n;
        scanf("%lld",&n);
        for(i=0;i<=51;i++)
        {
            for(j=0;j<=51;j++)
            {
                for(k=0;k<2;k++)
                    dp[i][j][k]=-1;
            }
        }
        for(i=0;i<n;i++)
        {
            scanf("%lld",&arr[i]);
            //cin>>arr[i];
        }
        limit = arr[n-1];
        ans=recc(0,-1,1);
        //cout<<ans-1<<endl;
        printf("%lld\n",(ans-1));
    }
    return 0;
}
