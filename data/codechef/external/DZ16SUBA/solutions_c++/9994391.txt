#include <bits/stdc++.h>
using namespace std;
const int N = 1000000;
typedef long long ll;

int n;
ll t[N<<1];

void build(){
	for(int i=0; i<n; ++i) 
		scanf("%lld",t+n+i);
	for(int i=n-1; i>0; --i) 
		t[i] = t[i<<1] | t[i<<1|1];
}
 
void update(int p, ll x){
	for(t[p+=n] = x; p>1; p >>= 1) 
		t[p>>1] = t[p] | t[p^1];
}

ll query(int l, int r){
	ll resl = 0, resr = 0;
	for(l += n, r += n; l<r; l >>= 1, r >>= 1){
		if(l&1) resl = resl | t[l++];
		if(r&1) resr = t[--r] | resr;
	}
	return resl | resr;
}

ll pw(ll a, ll b){
	ll res = 1;
	while(b){
		if(b&1) res = res * a % 1000000007;
		a = a * a % 1000000007;
		b >>= 1;
	}
	return res;
} 

//XOR SUM of ALL SUBSEQUENCES of LIST = 2^(N-1) x OR SUM of N-SIZED LIST
int main(){
	int q, qt, l, r, v; ll x;
	scanf("%d %d",&n,&q);
	
	build();
    
    while(q--){
    	scanf("%d",&qt);
    	if(qt==1){
    		scanf("%d %d",&l,&r);
    		printf("%lld\n",query(l-1,r) * pw(2,r-l) % 1000000007);
    	}
    	else{
    		scanf("%d %lld",&v,&x);
    		update(v-1,x);
    	}
    }
    return 0;
}  