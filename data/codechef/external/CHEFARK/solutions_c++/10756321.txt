#include<iostream>
using namespace std;

const int maxs=1e5 + 2;
const int mod=1e9 + 7;

int i,fact[maxs],ifact[maxs];

int invmod(int x,int y)
{
    if (y == 0)
        return 1;
    int m=mod;
    int p = invmod(x, y/2) % m;
    p = 1LL * p * p % m;

    return (y%2 == 0)? p : 1LL *x * p % m;

}



void calculate()
{
    fact[0]=1;
    for(i=1;i<maxs;i++)
        fact[i]=(1LL*fact[i-1]*i)%mod;
       // cout<<maxs-1<<endl;
    ifact[maxs-1]=invmod(fact[maxs-1],mod-2)%mod;

    //cout<<"invfact "<<maxs-1<<": "<<ifact[maxs-1]<<endl;
    for(i=maxs-2;i>=0;i--)
        ifact[i]=(1LL*ifact[i+1]*(i+1))%mod;
//cout<<"invfact 10000"<<": "<<ifact[10000]<<endl;

}

int ncr(int n,int r)
{
    if( n < r || r < 0 )
        return 0;
    return (1LL * fact[n] * ifact[n-r] % mod * 1LL * ifact[r] % mod);

}

int getnonzero(int n,int k)
{
    if(k<2)
        return ncr(n,k);
    return ((ncr(n,k) + getnonzero(n,k-2))%mod);

}

int getzero(int n,int k)
{
    if(k<1)
        return ncr(n,k);
    return (( ncr(n,k) + getzero(n,k-1))%mod);

}

int main()
{
        int i,t,n,k,temp,nz,ans;
        calculate();
        cin>>t;
        while(t--)
        {
            nz=0;
            cin>>n>>k;
            for(i=0;i<n;i++)
            {
                cin>>temp;
                if(temp==0)
                    nz++;
            }
            if(nz==0)
                ans=getnonzero(n,k);
            else
                ans=getzero(n-nz,k);
            cout<<ans<<endl;
        }

}
