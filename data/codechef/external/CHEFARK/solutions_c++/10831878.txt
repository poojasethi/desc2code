#include <bits/stdc++.h>
using namespace std;
// long long int mod=(long long )1000000007;

long long int gcd(long long int a, long long int b, long long int s1,long long int s2)
{
	if(b==0)
		return s1;
	else
	{
		// long long int q=b/a;
		gcd(b,a%b,s2,s1-(a/b)*s2)%1000000007; 
	}
}
const int MOD = 1000000007;
 

long long int pow(long long int a,long long int b)
{
	long long int x=1,y=a;
	while(b>0)
	{
		if(b%2==1)
		{
			x=x*y;
			if(x>MOD)
				x%=MOD;
		}
		y=(y*y);
		if(y>MOD)
			y%=MOD;
		b/=2;
	}
	return x%(long long int)MOD;
}
long long int modInverse(long long int a, long long int m)
{

		return (pow(a,m-2))%1000000007;

}
int main()
{
	ios::sync_with_stdio(false);
	long long int t;
	cin>>t;
	while(t--)
	{
		long long int n,k;
		cin>>n>>k;
		vector<int> final;
		
		long long int zeroes=0;
		long long int tmp;
		for(long long int i=0;i<n;i++)
		{
			cin>>tmp;
			if(tmp==0)
				zeroes++;	
		}
		if(zeroes==n)
		{
			cout<<1<<endl;
			continue;
		}
		n=n-zeroes;
		final.push_back(1);
		for(long long int i=1;i<=n;i++)
		{
			long long int x= (((final[i-1]*(n-i+1))%1000000007)*(modInverse(i,1000000007)))%1000000007;
			final.push_back((int)x);
		}
		
		
		
		long long int ans=0;
		if(k%2==0)
		{
			for(long long int i=0;i<=k && i<=n;i+=2)
			{
				ans+=final[i];
				if(ans>1000000007)
					ans=ans%1000000007;
			}
 
 
		}
		else
		{
			for(long long int i=1;i<=k && i<=n;i+=2)
			{
				ans+=final[i];
				if(ans>1000000007)
					ans=ans%1000000007;
			}
 
		}
 
		if(zeroes==0)
			cout<<ans%1000000007<<endl;
		else
		{
			ans=0;
			for(long long int i=0;i<=k && i<=n;i++)
			{
				ans+=(final[i]);
				if(ans>1000000007)
					ans=ans%1000000007;
			}
			cout<<ans%1000000007<<endl;
 
		}
	}
 
	return 0;
} 