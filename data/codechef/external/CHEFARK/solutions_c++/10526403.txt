#include <bits/stdc++.h>

using namespace std;

#define boost ios::sync_with_stdio(true); cin.tie(0); cout.tie(0);
#define pii pair<int,int>
#define vpii vector<pair<int,int> >
#define vvpii vector<vector<pair<int,int> > >
#define vi vector<int>
#define vii vector<vector<int> >
#define pb push_back 
#define mp make_pair 

unsigned long long mod= 1000000007;

unsigned long long binpow(long long a,long long n)
{
/*	if(n==0)
		return 1;
	if(n==1)
		return a;
	unsigned long long x=binpow(a,n/2);
	if(n%2==0)
		return(x*x)%mod;
	else
		return(a*(x*x)%mod)%mod;*/
		long long pow = n;
	unsigned long long act = a , res = 1;
	while( pow )
	{
		if(pow&1)
		{
			res *= act;
			res %= mod;
		}
		act *= act;
		act %= mod;
		pow >>= 1;
	}
	return res;
}

long long inv_mod(long long a)
{
	/*long long pow = mod - 2;
	unsigned long long act = a , res = 1;
	while( pow )
	{
		if(pow&1)
		{
			res *= act;
			res %= mod;
		}
		act *= act;
		act %= mod;
		pow >>= 1;
	}
	return res;*/
	return binpow(a,mod-2);
}

int main()
{
	boost;
	int t;
	cin>>t;
	while(t--)
	{
		long long u,k;
		cin>>u>>k;
		long long n=0,x;
		int flag=0;
		while(u--)
		{
			cin>>x;
			if(x!=0)
				n++;
			else
				flag=1;

		}
		//n holds number of non-zero numbers in the array
		//Required answer is n-1C0 + n-1C1 +...+ n-1Ck
		if(n==0) //only o's
		{
			cout<<1<<endl;
			continue;
		}

		if(k>=n-1 && flag==0) 
		{
			
				cout<<binpow(2,n-1)<<endl;
			/*else
				cout<<binpow(2,n)<<endl;*/
			continue;
		}
		else if(k>=n && flag==1)
		{
			//cout<<"Hey"<<n<<endl;
			cout<<binpow(2,n)<<endl;
			continue;
		}
		else
		{
			//compute nCk-1 for every n>=k
			long long ans=1;
			if(flag==0)
			{
			for(long long i=1;i<=n-1;i++)
			{
				if(i-1==k)
					x=1;
				else if(i-1<k)
					x=0;
				else
					x=(((((i-1)*x)%mod)*inv_mod(i-k-1))%mod+2*mod)%mod;
				//cout<<"i= "<<i<<" x= "<<x<<endl;
				while(x<0)
					x=(x+mod)%mod;
				ans=((2*ans)%mod-x+mod)%mod;;
				while(ans<0)
					ans=(ans+mod)%mod;
			//	cout<<"ans1= "<<ans<<endl;
			}
			}
			else
			{
			//	cout<<"hey"<<" "<<n<<endl;
				for(long long i=1;i<=n;i++)
				{
					if(i-1==k)
						x=1;
					else if(i-1<k)
						x=0;
					else
						x=(((((i-1)*x)%mod)*inv_mod(i-k-1))%mod+2*mod)%mod;
					//cout<<"i= "<<i<<" x= "<<x<<endl;
					while(x<0)
						x=(x+mod)%mod;
					ans=((2*ans)%mod-x+mod)%mod;;
					while(ans<0)
						ans=(ans+mod)%mod;
				//	cout<<"ans= "<<ans<<endl;
				}	
			}

			cout<<ans<<endl;
		}
	}
	return 0;
}