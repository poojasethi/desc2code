    #include <iostream>
    #include <algorithm>
    #include <cstdio>
    #include <queue>
    #include <math.h>
    #include <limits.h>
    #include <cstdlib>
    #include <string.h>
    #include <vector>
    #include <map>
    #include <stack>
    using namespace std;
    #define ll         long long
    #define S(x)       scanf("%d", &x)
    #define Sl(x)      scanf("%lld", &x)
    #define Sd(x)      scanf("%lf", &x)
    #define P(x)       printf("%d\n", x)
    #define Pl(x)      printf("%lld\n", x)
    #define Pd(x)      printf("%lf\n", x)
    #define Pblank()   printf(" ")
    #define mem(x,y)   memset(x,y,sizeof(x))
    #define F(x,y,z,i) for (x = y; x < z; x = x + i)
    #define mod 1000000007
    ll int result[100005];
    ll int fact(ll int);
    ll int C(ll int, ll int);
    ll int power(ll int ,ll int);
    int main()
    {
        ll int t;
        Sl(t);
        fact(100002);
        while(t--)
        {
            ll int n, k, j;
            Sl(n);
            Sl(k);
            ll int ans = 0;
            ll int a[n];
            ll int cnt = 0;
            for (ll int i = 0; i < n; i++){
                Sl(a[i]);
                if (a[i] == 0)
                    cnt++;
            }
            ll int ne = n - cnt;
            if (k > ne){
            if (cnt != 0){
                    for (j = 1; j <= ne; j++)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                    ans = ans + 1;
            } else {
                if (k % 2 == 0)
                {
                    for (j = 0; j <= ne; j+= 2)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                }
                else
                {
                    for (j = 1; j <= ne; j+= 2)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                }
            }
            }
            else {
                if (cnt != 0){
                    for (j = 1; j <= k; j++)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                    ans = ans + 1;
            } else {
                if (k % 2 == 0)
                {
                    for (j = 0; j <= k; j+= 2)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                }
                else
                {
                    for (j = 1; j <= k; j+= 2)
                        ans =  ((ans % mod) + C(ne, j) % mod) % mod;
                }
            }
            }
            Pl(ans);
        }
        return 0;
    }
     
    ll int C(ll int n, ll int r)
    {
        ll int ans;
        ll int res;
        ans = ((result[n] % mod) * (power(result[n-r],mod - 2) % mod)) % mod;
        res = ((ans % mod) * (power(result[r], mod - 2) % mod)) % mod;
        return res;
    }
     
    ll int fact(ll int n) {
        result[0] = 1;
        result[1] = 1;
        for(ll int i=1;i<=n;i++)
            result[i]=(i * result[i-1]) % mod;
    }
     
    ll int power(ll int a,ll int n)
    {
        ll int ans = 1;
        ll int power = n;
        ll int value = a;
        while(power>0)
        {
            if(power&1)
            {
                ans = ans * value;
                ans = ans % mod;}
                value = value * value;
                value = value % mod;
                power /= 2;
        }
        return ans % mod;
    }
     