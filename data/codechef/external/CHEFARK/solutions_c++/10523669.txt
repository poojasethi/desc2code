#include<bits/stdc++.h>
using namespace std;
#define value 1000000007
long long int power(long long int a,long long int b)
{
	if(b==0)
    return 1;
	else if(b==1)
	return a;
	
	else
	{
		long long int temp=power(a,b/2);
		if (b%2 == 0)
        return (((temp%value)*temp)%value);
        else
       return ((((a*temp)%value)*temp)%value);
	}
}
int main()
{
	int t,n,k,x,count;
	long long int a[100001];
	for(int i=1;i<=100001;i++)
	a[i]=power(i,value-2);
	long long int sum;
	scanf("%d",&t);
	while(t--)
	{
		sum=0,count=0;
		int p=0;
		scanf("%d%d",&n,&k);
		for(int i=0;i<n;i++)
		{
			scanf("%d",&x);
			if(x!=0)
			p++;
			else count++;
		}
	//	cout<<p<<endl;
		
		if(k>=p)
		{
			if(count!=0)
			{
			
			 long long int z=power(2,p);
			printf("%lld\n",z);
		    }
			else
			{
			  long long int z=power(2,p-1);
			  printf("%lld\n",z);
		    }
		}
		else 
		{
           long long int C[p+1];
         // memset(C, 0, sizeof(C));
 
         C[0] = 1;
		 C[1]=n;
 
          for (int i = 2; i <= p; i++)
    {
        // Compute next row of pascal triangle using
        // the previous row
         C[i]=(C[i-1]*(n-i+1))%value;
         C[i]=(C[i]*a[i])%value;
            
    }
   // cout<<"abc "<<endl;
   /* for(int i=0;i<=p;i++)
    cout<<C[i]<<" ";
    cout<<endl;*/
    int g=k;
    if(count!=0)
    {
    	while(g>=0)
    	sum=(sum+C[g--])%value;
	}
	else
	{
      while(g>=0)
      {
    	sum=((sum)+(C[g]))%value;
    	g=g-2;
	  } 
	//if(count!=0&&k%2==1)
	//cout<<sum+1<<endl;
	//else
    
	}
	printf("%lld\n",sum);
}
}
return 0;
}   