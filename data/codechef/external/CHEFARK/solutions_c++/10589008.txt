#include <iostream>
#include <cstdio>
#include <cmath>
#define ll unsigned long long int
#define li unsigned long int
#define MOD 1000000007
#define MAX_N 100010
using namespace std;

li fact[MAX_N];
li invfact[MAX_N];

ll power(ll a, ll b)
{
	ll ans = 1, asq = a;
	while(b > 0){
		if(b&1){
			ans = (ans*asq) % MOD ;
		}
		asq = (asq*asq) % MOD;
		b >>= 1;
	}
	return ans;
}

li inverse(li a)
{
	return (li)(power(a, MOD-2)) ;
}

ll C(ll n, ll r){
	return fact[n] * (ll)invfact[r] % MOD * (ll)invfact[n-r] % MOD ;
}

int main()
{
	fact[0] = 1;
	for(li i = 1 ; i < MAX_N ; i++)
		fact[i] = (fact[i-1] * (ll)i) % MOD ;
	
	for(li i = 0; i < MAX_N ; i++)
		invfact[i] = inverse(fact[i]);
	
	int t;
	scanf("%d", &t);
	while(t--)
	{
		li n, k, z = 0;			ll answer = 0;
		scanf("%ld %ld", &n, &k);
		
		li temp;
		for(li i = 0 ; i < n ; i++){
			scanf("%ld", &temp);
			if(temp != 0){
				z++ ;
			}
		}
		
		if(z < n){
			for(li i = 0; i <= k && i <= z; i++)
				answer = (answer + C(z, i)) % MOD ;
		}
		else{
			for(li i = k&1 ; i <= k && i <= n ; i += 2)
				answer = (answer + C(n, i)) % MOD ;
		}
		
		printf("%lld\n", answer);
	}
	return 0;
}
