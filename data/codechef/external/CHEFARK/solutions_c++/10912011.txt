#include<iostream>
using namespace std;
#define MOD 1000000007
long long int combination(long long int num,long long int power)
{
     long long int ans=1;
     if(num==0||num==1)
     return 1;
     while(power>0)
     {
                   if(power%2!=0)
                   {
                                 ans=(ans*num)%MOD;
                   }
                   num=(num*num)%MOD;
                   power=power/2;
     }
     return ans%MOD;     
}
int main()
{
    long long int factorial[100002]={};
    factorial[0]=1;
    for(long long int i=1;i<100001;i++)
    {
            factorial[i]=(factorial[i-1]*i)%MOD;
    }        
    int t;
    scanf("%d",&t);
    for(int i=0;i<t;i++)
    {
            int zeros=0;
            int n,k;
            scanf("%d%d",&n,&k);
            for(int j=0;j<n;j++)
            {
                    int temp;
                    scanf("%d",&temp);                    
                    if(temp==0)
                    zeros++;
            }
            long long int ans=0;
            long long int denom1=1,denom2=1,numerator=1;
            if(k>n)
            {
                   while(k>n)
                   k=k-2;                    
            }
            if(zeros==0)
            {                        
                while(k>=0)
                {
                           numerator=factorial[n];
                           denom1=combination(factorial[k],MOD-2);
                           denom2=combination(factorial[n-k],MOD-2);
                           ans=ans+(((numerator*denom1)%MOD)*denom2)%MOD;
                           ans=ans%MOD;
                           k=k-2;
                }                                                           
            }else
            {
                 n=n-zeros;
                 k=min(n,k);
                 while(k>=0)
                 {
                            numerator=factorial[n];
                            denom1=combination(factorial[k],MOD-2);
                            denom2=combination(factorial[n-k],MOD-2);
                            ans=ans+(((numerator*denom1)%MOD)*denom2)%MOD;
                            ans=ans%MOD;
                            k--;
                 }                 
            }
            cout<<ans%MOD<<endl;
    }
    return 0;
}
            
