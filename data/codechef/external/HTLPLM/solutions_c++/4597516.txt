#include <iostream>
#include <fstream>




using namespace std;



#define TEST 0


class ProblemSolver {
	private:
		struct booking {
			long long int begin;
			long long int end;
		};
	public:
		void solve(int testNum, istream &in, ostream &out) {
			int N, Q;
			in >> N >> Q;
			booking list[N];
			for (int i = 0; i < N; i += 1) {
				in >> list[i].begin >> list[i].end;
			}
			bookingsort(list, N);
			long long int time;
			for (int i = 0; i < Q; i += 1) {
				in >> time;
				if (check(list, N, time)) {
					out << "YES" << "\n";
				} else {
					out << "NO" << "\n";
				}
			}
		}
	private:
		bool check(booking list[], int N, long long int time) {
			for (int i = 0; i < N; i += 1) {
				if (time >= list[i].begin && time <= list[i].end) {
					return 0;
				}
			}
			return 1;
		}
		void bookingsort(booking list[], int N) {
			booking b;
			for (int i = 1; i < N; i += 1) {
				b = list[i];
				int j = i - 1;
				while (j >= 0 && list[j].begin > b.begin) {
					list[j + 1] = list[j];
					j -= 1;
				}
				list[j + 1] = b;
			}
		}
};


int main() {
	#if TEST
		ifstream inputfile;
		inputfile.open("input.txt", ios::in);
		istream &in = inputfile;
		ostream &out = cout;
	#else
		istream &in = cin;
		ostream &out = cout;
	#endif
	ProblemSolver solver;
	int testCases;
	in >> testCases;
	for (int testNum = 1; testNum <= testCases; testNum += 1) {
		solver.solve(testNum, in, out);
	}
	return 0;
}
