#include <iostream>
#define ll long long 

using namespace std;

void merge(pair<ll,ll>* interval,int low,int high){
    int i=low,j=(low+high)/2+1,mid=(low+high)/2,k=0;
    pair<ll,ll> temp[high-low+1];
    while(i<=mid && j<=high){
        if(interval[i].first<interval[j].first)
            temp[k++]=interval[i++];
        else
            temp[k++]=interval[j++];
    }
    while(i<=mid)
        temp[k++]=interval[i++];
    while(j<=high)
        temp[k++]=interval[j++];
    for(i=low;i<=high;i++)
        interval[i]=temp[i-low];
}

void partition(pair<ll,ll>* interval,int low,int high){
    int mid=(low+high)/2;
    if(low<high){
        partition(interval,low,mid);
        partition(interval,mid+1,high);
        merge(interval,low,high);
    }
}

int main(){
    int T,Q,N,i;
    pair<ll,ll> *interval;
    ll query;
    cin>>T;
    while(T--){
        cin>>N>>Q;
        interval=new pair<ll,ll>[N];
        for(i=0;i<N;i++)
            cin>>interval[i].first>>interval[i].second;
        //partition(interval,0,N-1);
        while(Q--){
            cin>>query;
            for(i=0;i<N;i++)
                if(query>=interval[i].first && query<=interval[i].second)
                    break;
            if(i<N)
                cout<<"NO"<<endl;
            else
                cout<<"YES"<<endl;
        }
    }
    return 0;
}