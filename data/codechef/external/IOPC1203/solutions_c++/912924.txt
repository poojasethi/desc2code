#include <iostream>
#include <cstdio>
using namespace std;

#include <bitset>
#include <algorithm>
#include <iomanip>
#include <cmath>
#include <cstring>

# define FR(i, n)           for( int i = 0; i<=n; i++)
# define FRm(i, m, n)     for( int i = m; i <=n; i++)
# define FRrev(i, n)         for( int i = n; i >= 0; i-- )
# define FRrevm(i,n,m)         for( int i = n; i >= m; i-- )

# define PF       printf
# define PFS PF(" ")
# define PFd(x)   printf("%d" , x )
# define PFdS(x)   printf("%d " , x )
# define PFdN(x)  printf("%d\n" , x )
# define PFN	  printf("\n")
# define SF    scanf
# define SFd(x) scanf("%d",&x)
# define SFd2(x,y) scanf("%d%d",&x,&y)

const long long mod=100000007;

#define inarrd(arr,n) for(int i=0;i<n;i++)SFd(arr[i]);
#define outarrd(arr,n) for(int i=0;i<n;i++){PFd(arr[i]);PF(" ");}PFN;
#define outarrN(arr,n) for(int i=0;i<n;i++){PFd(arr[i]);PFN;}

long long farr[4*100000+1];long long garr[4*100000+1];
long long farr4[4*100000+1];long long garr4[4*100000+1];

void calculate()
{
    long long temp;
   farr[0]=1; farr[1]=1; farr[2]=2; farr[3]=4; farr[4]=7;
   farr4[0]=1; farr4[1]=1; farr4[2]=2; farr4[3]=4; farr4[4]=8;
    FRm(i,5,400000)
      { farr4[i]=farr4[i-1]+farr4[i-2]+farr4[i-3]+farr4[i-4]; farr4[i]%=mod;//modulo operator distributive over addition....
          farr[i]=farr[i-1]+farr[i-2]+farr[i-3]; farr[i]%=mod;
      }

      //cout<<farr[4]<<endl;
    garr[0]=0; garr[1]=1; garr[2]=2; garr[3]=4; garr[4]=8;
   garr4[0]=0; garr4[1]=1; garr4[2]=2; garr4[3]=4; garr4[4]=8;
    FRm(j,5,400000)
    {
            garr[j]=(farr[j]+garr[j-3])%mod;
            garr4[j]=(garr4[j-4]+farr4[j])%mod;
    }

}


int main()
{

calculate();

//cout<<garr4[4]<<endl;

//char arr[1001];
string arr;
int group[26]={2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,7,7,7,7,8,8,8,9,9,9,9};
int freq[26]={1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,1,2,3,4,1,2,3,1,2,3,4};

int t,len,g,f,n; long long ans=1; char ch;
SFd(t);
while(t--)
{
    ans=1;
    //SF("%s",arr);
    cin>>arr;
    //len=strlen(arr);
    len=arr.length();
    ch=arr[0]; int i=0;
    while(i<len)
    {
        ch=arr[i];
        g=group[ch-'a']; f=freq[ch-'a']; n=f; //cout<<".."<<g<<endl;
        i++; ch=arr[i];
        while(i<len && group[ch-'a']==g)
        {
            n+=freq[ch-'a']; i++; ch=arr[i];
        }
        if(g==7||g==9){ ans=(ans*garr4[n])%mod;}
        else{ans=(ans*garr[n])%mod; }
    }
    cout<<ans<<endl;
}

return 0;
}
