#include <iostream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <math.h>
#include <cstdio>
 
#define FOR(i,x,y) for(int i=(x);i<(y);i++)
#define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
#define ABS(x) ((x)>0?(x):-(x))
#define SQ(x) ((x)*(x))
#define mset(x,y) memset(x,y,sizeof(x))
#define INF 1000000000
#define MOD 100000007
#define pb(X) push_back(X) 

using namespace std;

typedef long long int lli;
typedef long double ld;
typedef pair<int,int> pi;
typedef vector<int> vi;
typedef vector<double> vd;

lli ways3[500100];
lli ways4[500100];
char inp[100100];

void init()
{
	ways3[0]=ways3[1]=1;
	ways3[2]=2;
	ways3[3]=4;
	for(int i=4;i<500100;i++) ways3[i]=(ways3[i-1]+ways3[i-2]+ways3[i-3])%MOD;

	for(int i=4;i<500100;i++) ways3[i]=(ways3[i]+ways3[i-3])%MOD;

	ways4[0]=ways4[1]=1;
	ways4[2]=2;
	ways4[3]=4;
	ways4[4]=8;

	for(int i=5;i<500100;i++) ways4[i]=(ways4[i-1]+ways4[i-2]+ways4[i-3]+ways4[i-4])%MOD;

	for(int i=5;i<500100;i++) ways4[i]=(ways4[i]+ways4[i-4])%MOD;
}

pi getint(char c)
{
	if('a'<=c&&c<='o') return pi((c-'a')/3+2,(c-'a')%3+1);
	if('p'<=c&&c<='s') return pi(7,(c-'p')%4+1);
	if('t'<=c&&c<='v') return pi(8,(c-'t')%3+1);
	return pi(9,(c-'w')%4+1);
}

int main()
{
	#ifndef ONLINE_JUDGE
    freopen("inp.txt","r",stdin);
    #endif
    init();
    //cout<<ways[100000];
    //cout<<endl;
    // for(int i=0;i<26;i++)
    // {
    // 	pi a=getint('a'+i);
    // 	cout<<a.first<<" "<<a.second<<endl;
    // }
    int t;
    scanf("%d",&t);
    while(t--)
    {
    	scanf("%s",inp);
    	vector<pi> seq;
    	int n=strlen(inp);
    	pi x=getint(inp[0]);
    	seq.pb(x);
    	for(int i=1;i<n;i++)
    	{
    		x=getint(inp[i]);
    		if(seq[seq.size()-1].first==x.first)
    		{
    			seq[seq.size()-1].second+=x.second;
    		}
    		else seq.pb(x);
    	}

    	//for(int i=0;i<seq.size();i++) cout<<seq[i].first<<" "<<seq[i].second<<endl;
    	lli ans=1;
    	for(int i=0;i<seq.size();i++)
    	{
    		lli w;
    		if(seq[i].first==7||seq[i].first==9) w=ways4[seq[i].second];
    		else w=ways3[seq[i].second];
    		ans=(ans*w)%MOD;
    	}
    	printf("%lld\n",ans);
    }
    return 0;
    
}