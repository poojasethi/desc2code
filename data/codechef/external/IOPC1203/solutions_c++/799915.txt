#include<iostream>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef long long ll;

const ll M=100000007;

int main(){
	int f[128]; // キーの種類
	f['a']=f['b']=f['c']=2;
	f['d']=f['e']=f['f']=3;
	f['g']=f['h']=f['i']=4;
	f['j']=f['k']=f['l']=5;
	f['m']=f['n']=f['o']=6;
	f['p']=f['q']=f['r']=f['s']=7;
	f['t']=f['u']=f['v']=8;
	f['w']=f['x']=f['y']=f['z']=9;
	int g[128]; // 押下回数
	g['a']=g['d']=g['g']=g['j']=g['m']=g['p']=g['t']=g['w']=1;
	g['b']=g['e']=g['h']=g['k']=g['n']=g['q']=g['u']=g['x']=2;
	g['c']=g['f']=g['i']=g['l']=g['o']=g['r']=g['v']=g['y']=3;
	g['s']=g['z']=4;
	int h[10]={-1,-1,3,3,3,3,3,4,3,4}; // 周期

	// dp3[i] := 長さ i, 周期 3 の解
	static ll dp3[400001],dp4[400001];
	// 周期的でない場合
	dp3[0]=dp4[0]=1;
	rep(i,400001){
		if(i>=1) dp3[i]+=dp3[i-1], dp4[i]+=dp4[i-1];
		if(i>=2) dp3[i]+=dp3[i-2], dp4[i]+=dp4[i-2];
		if(i>=3) dp3[i]+=dp3[i-3], dp4[i]+=dp4[i-3];
		if(i>=4) dp4[i]+=dp4[i-4];
		dp3[i]%=M;
		dp4[i]%=M;
	}
	// 周期的な場合も考慮
	rep(i,400001){
		if(i>3) dp3[i]+=dp3[i-3];
		if(i>4) dp4[i]+=dp4[i-4];
		dp3[i]%=M;
		dp4[i]%=M;
	}

	int T; cin>>T;
	while(T--){
		string s; cin>>s;
		int n=s.length();

		ll ans=1;
		for(int i=1,len=g[s[0]];i<=n;i++){
			if(i==n || f[s[i]]!=f[s[i-1]]){
				if(h[f[s[i-1]]]==3) ans=(ans*dp3[len])%M;
				else                ans=(ans*dp4[len])%M;
				len=0;
			}
			len+=g[s[i]];
		}
		cout<<ans<<endl;
	}

	return 0;
}
