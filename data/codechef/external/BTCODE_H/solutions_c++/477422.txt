#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string.h>
#include <math.h>
using namespace std;

int n,m;

double c[305][305];
double dp[301][301];

double solve( int n, int m ){
    if( n == 0 ) return 0;
    else if( n == 1 ) return m;
    else if( m == 0 ) return 0;

    if( dp[n][m] >= 0 ) return dp[n][m];

    double sol = 0;

    for( int i = 0; i <= n; ++i )
        sol += ((n-i!=0)+(i!=0) + solve( i , m-1 ) + solve( n-i, m-1 ))*c[n][i];
    for( int i = 0; i < n; ++i ) sol /= 2;
    return dp[n][m] = sol;
}

int main(){
    memset( dp, -1, sizeof(dp));

    c[0][0] = 1;
    for( int i = 1; i <= 300; ++i ){
        c[i][0] = 1;
        for( int j = 1; j <= 300; ++j )
            c[i][j] = c[i-1][j] + c[i-1][j-1];
    }

    int tests; scanf("%d",&tests);

    for( ; tests; --tests ){
        scanf("%d%d",&n,&m);
        double sol = solve( n , m );
        printf("%.2lf\n",sol+1);
    }

    return 0;
}
