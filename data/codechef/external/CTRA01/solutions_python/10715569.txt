#include <iostream>
using namespace std;

char chess[9][9];
bool endFlag,rowUA[9],columnUA[9],diaMajorUA[16],diaMinorUA[16];

bool attacked(int i,int j)
{
    return rowUA[i] || columnUA[j] || diaMajorUA[i-j+8] || diaMinorUA[i+j-1];
}

void putQueen(int i,int j)
{
    rowUA[i]=columnUA[j]=diaMajorUA[i-j+8]=diaMinorUA[i+j-1]=true;
    chess[i][j]='*';
}

void zeroAll()
{
    for (int i=1;i<=8;i++)
        for (int j=1;j<8;j++)
            chess[i][j]=' ';
    for (int i=1;i<=8;i++)
        rowUA[i]=columnUA[i]=false;
    for (int i=1;i<=15;i++)
        diaMajorUA[i]=diaMinorUA[i]=false;
}

int main()
{
    int testCases,j[9];
    cin>>testCases;
    while (testCases--)
    {
        for (int i=1;i<=8;i++)
            cin>>j[i];
        for (int i=1;i<=8;i++)
            if (!attacked(i,j[i]))
                putQueen(i,j[i]);
            else
            {
                cout<<"No"<<endl;
                goto endCase;
            }
        cout<<"Yes"<<endl;
        endCase:;
        zeroAll();
    }
    return 0;
}