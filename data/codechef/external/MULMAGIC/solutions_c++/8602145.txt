#include<stdio.h>
#include<string.h>
#include<math.h>
 
#define N 100005

bool status[N];
int now[N];

int sieve()
{
    status[0]=1;
    status[1]=1;
    status[2]=0;
    int i,j;
    for(i=4;i<N;i=i+2)
    {
       status[i]=1; 
    }
    int sqrtN=sqrt(N);;
    for( i=3;i<=sqrtN;i=i+2)
    {
        if(status[i]==0)
        {
            for(j=i*i;j<N;j+=i+i)
            {
                status[j]=1;
            }
          
        }
 
    }

    j=0;
    for(i=0;i<N;i++) 
    {
      if(status[i]==0) 
       {
             now[j]=i;
             j++;
       }
      
   }

   return j;

}


int main()
{
  int t;
  int m=sieve();
  int n,i,j,k,l,x;
  long int a[100005];
  long long int max,sum;
  
  scanf("%d",&t);
  while(t--)
  {
     max=0;
     sum=0;
     scanf("%d",&n);
     for(i=1;i<n+1;i++) scanf("%ld",&a[i]);
     x=-1; l=-1;
     for(i=0;i<m;i++) 
     {
          if(now[i]==n) 
           {
               l=i;  
               break;
           }
          else if(now[i]>n) 
          {
             x=i;
             break;
          }

     }


          
        
     if(l==-1 && x!=-1) 
        {
            if(x!=0) l=x-1; 
            else x=l;
        }

     for(i=0;i<=l;i++)
     {
         sum=0;
         j=now[i];
         //printf("new %d is %d and %ld\n",i,j,a[j]);
         k=now[i];
         while(j<=n)
         { 
             sum+=a[j];
             j+=k;
         }      
         
         if(sum>max) max=sum;
  
      }

      printf("%lld\n",max);

   }



}
