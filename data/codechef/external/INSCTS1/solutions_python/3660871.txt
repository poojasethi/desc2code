#include<stdio.h>
void quickSort( int a[], int l, int r)
{
   int j;

   if( l < r )
   {
   	// divide and conquer
        j = partition( a, l, r);
       quickSort( a, l, j-1);
       quickSort( a, j+1, r);
   }

}



int partition( int a[], int l, int r) {
   int pivot, i, j, t;
   pivot = a[l];
   i = l; j = r+1;

   while( 1)
   {
   	do ++i; while( a[i] <= pivot && i <= r );
   	do --j; while( a[j] > pivot );
   	if( i >= j ) break;
   	t = a[i]; a[i] = a[j]; a[j] = t;
   }
   t = a[l]; a[l] = a[j]; a[j] = t;
   return j;
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int a[3]={0},temp,move=0;
        scanf("%d%d%d",&a[0],&a[1],&a[2]);
        quickSort(a,0,2);
        if(a[2]>(a[1]+a[0]))
        {
            printf("Alice\n");
        }
        else if((a[2]==(a[1]+a[0])))
        {
            printf("Bob\n");
        }
        else if((a[2])<(a[1]+a[0]))
        {
            if(((a[2]+a[1]+a[0])%2)==1)
                printf("Alice\n");
            else
                printf("Bob\n");
        }

    }
return 0;}
