#include <bits/stdc++.h>
#include <iostream>
using namespace std;

long long int a[10010],previndices[10010],tailindices[10010];
long long int ans=1;
long long int maxi=1;

long long int binSearch(long long int left,long long int right,long long int key)
{
	long long int mid;
	while(left<right)
	{
		mid=left+(right-left)/2;
		if(a[tailindices[mid]]<key)
		{
			left=mid+1;
		}
		else if(a[tailindices[mid]]>key)
		{
			right=mid;
		}
		else
		{
			return mid;
		}
	}
	return right;
}

void lis(long long int n)
{
	if(n==1)
	{
		cout<<"0"<<endl;
		return;
	}
	//memset(tailindices,0,sizeof(tailindices));
	//memset(previndices,0xFF,sizeof(previndices));
	long long int len=1;
	tailindices[0]=0;
	previndices[0]=-1;
	long long int prevlen=1;
	for(long long int i=1;i<n;i++)
	{
		if(a[i]<a[tailindices[0]])
		{
			tailindices[0]=i;
		}
		else if(a[i]>a[tailindices[len-1]])
		{
			previndices[i]=tailindices[len-1];
			tailindices[len++]=i;
		}
		else
		{
			long long int index=binSearch(0,len-1,a[i]);
			previndices[i]=tailindices[index-1];
			tailindices[index]=i;
		}
	}
//	cout<<"len : "<<len<<endl;
	/*prevlen=len;
	tailindices[0]=0;
	previndices[0]=-1;
	len=1;
	long long int maxi=-1;
	for(long long int i=1;i<n;i++)
	{
		if(a[i]<a[tailindices[0]])
		{
			tailindices[0]=i;
		}
		else if(a[i]>a[tailindices[len-1]])
		{
			previndices[i]=tailindices[len-1];
			tailindices[len++]=i;
		}
		else
		{
			long long int index=binSearch(0,len-1,a[i]);
			previndices[i]=tailindices[index-1];
			tailindices[index]=i;
		}
		//if(len==prevlen)
		//	maxi=max(maxi,a[tailindices[len-1]]-a[tailindices[0]]);
	}*/
	printf("%lld\n",len);
	ans=len;
}

int main()
{
	long long int n,i,j,k,t;
	cin>>t;
	while(t--)
	{
		maxi=1;
		cin>>n;
		for(i=0;i<n;i++)
			scanf("%lld",&a[i]);
		lis(n);
	}
	return 0;
}