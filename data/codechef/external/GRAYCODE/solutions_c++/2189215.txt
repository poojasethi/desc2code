#include<iostream>
#include<cstdlib>
#include<cstdio>

using namespace std;


long int inline fastInput()
{
    long unsigned int N = 0;
    unsigned int C;
    while ((C = getchar_unlocked()) < '0');
    
    do
    {
        N = (N<<3) + (N<<1) + C - '0';
    }while ((C = getchar_unlocked()) >= '0');
    
    return N;
}
void inline fastout( int * res)
{
    register unsigned int N = *res , rev, count = 0;
    rev = N;
    if (N == 0)
    {
          putchar_unlocked('0');
          putchar_unlocked('\n');
          return ;
    }
    while ((rev % 10) == 0)
    {
          count++;
          rev /= 10;
    }
    rev = 0;
    while (N != 0)
    {
          rev = (rev<<3) + (rev<<1) + N % 10;
          N /= 10;
    }
    while (rev != 0)
    {
          putchar_unlocked(rev%10 + '0');
          rev /= 10;
    }
    while (count--)
          putchar_unlocked('0');
    putchar_unlocked('\n');
    return ;
}

int inline cgtb(int n)
{
	int bi = n^(n>>1);
	bi ^= (bi>>2);
	bi ^= (bi>>4);
	bi ^= (bi>>8);
	bi ^= (bi>>16);	
	
	return bi;
}
int main()
{
	int t,n;
	n = (int)fastInput();
	
	while(n--)fastout(&(t = (int)cgtb(fastInput())));
	
	return 0;
}
