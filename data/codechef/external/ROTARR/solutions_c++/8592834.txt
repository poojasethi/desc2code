#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define lf long double
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define inf INT_MAX
#define linf LONG_LONG_MAX
#define ppi pair<int,int>
#define ppl pair<int,int>
#define F   first
#define S   second
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)
int block;
int M[317][100001];
ll L[10010];
int A[100010];
int n;
int query(int a,int b,int val)
{
	int count=0,j;
	int i=a;
	j=i/block;
	while((i)%block!=0&&i<=b)
	{
		if((A[i]+L[j])%n==val)
			count++;
		i++;
	}
	j=i/block;
	while((i+block)<=b)
	{
            count=count+M[j][(val-L[j]+n)%n];
		i=i+block;
		j++;
	}
	j=i/block;
	while(i<=b)
	{
		if((A[i]+L[j])%n==val)
			count++;
		i++;
	}
	return count;
}
void update(int a,int b,int val)
{
	int i=a,j;
	map<int,int>::iterator it;
	j=i/block;
	while((i)%block!=0&&i<=b)
	{
		M[j][A[i]]=M[j][A[i]]-1;
		M[j][(A[i]+val)%n]++;
		A[i]=(A[i]+val)%n;
		i++;
	}
	j=i/block;
	while((i+block)<=b)
	{
	//    cout<<"updating"<<endl;
	    L[j]+=val;
	    L[j]%=n;
	    i=i+block;
	    j++;
	}
	j=i/block;
	while(i<=b)
	{
	    M[j][A[i]]=M[j][A[i]]-1;
		M[j][(A[i]+val)%n]++;
		A[i]=(A[i]+val)%n;
		i++;
	}
	//for(i=0;i<n;i++)
   //     cout<<A[i]<<" ";
}
int main()
{
	int t,i,j,ans,q,a,b,c,val,x;
	scanf("%d %d",&n,&q);
	block=(int)sqrt((double)n);
	for(i=0;i<n;i++)
	{
		scanf("%d",&A[i]);
		j=i/block;
		M[j][A[i]]++;
	}
	while(q>0)
	{
		q--;
		scanf("%d %d %d %d",&c,&a,&b,&x);
		if(c==1)
		{
			update(a,b,x);
		}
		else
		{
			ans=query(a,b,x);
			printf("%d\n",ans);
		}
	}
}
