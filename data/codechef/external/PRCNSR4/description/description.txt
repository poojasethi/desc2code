
 Little Red Riding Hood is quite famous in IIITD, let me introduce her.Once upon a time there lived a girl named Red. When she was 3.14 years old, her father gifted her a horse named Hood. From that day, Little Red goes to the forest everyday, riding Hood. 
 Today Red learned about Convolutional Neural Networks. A 4,1-cylic-convolution on a ordered list L is defined as the sum of the products of elements of the list taken 4 at a time at a stride of 1, assuming that the list wraps around after the end. For example, for a list of size 8 Convolution(L) = L1*L2*L3*L4 + L2*L3*L4*L5 + L3*L4*L5*L6 + L4*L5*L6*L7 + L5*L6*L7*L8 + L6*L7*L8*L1 + L7*L8*L1*L2 + L8*L1*L2*L3A list L1 is said to be good when Convolution(L1) is equal to zero. Today while wandering around in the forest Red found a list whose convolution is zero. Hood also became interested and wanted to find another good List L2 with the same number of elements. Note that L2 must be distinct from L1. Two lists are said to be distinct if there exists at least one i such that L1i ≠ L2i. However, since Hood is a horse with very low IQ, he asks you to solve the problem.To make life easier, the forest does not support any integer except  1 and -1  in its lists. Thus both the list given and list to be output cannot contain any integer other than  1 and -1 


Input
The first line of input contains an integer T denoting the number of Test CasesThe first line of each test case contains a single integer  N  denoting the number of elements in the List The next line of each test cases contains N integers Li denoting the List L, where Li ∈ {1, -1} 


Output
The output for each test case should consist of a single line denoting the List L2


Constraints

 T ≤ 100 
 4 ≤ N ≤ 10^4 


Example
Input:18-1 1 -1 1 -1 -1 -1 1Output:1 -1 -1 -1 -1 -1 -1 -1

Explanation
L1: -1*1*-1*1 + 1*-1*1*-1 + 1*1*-1*-1 + 1*-1*-1*-1 + -1*-1*-1*1 + -1*-1*1*-1 + -1*1*-1*1 + 1*-1*1*-1 = 1 + 1 + -1 + -1 + -1 + -1 + 1 + 1 = 0 L2: 1*-1*-1*-1 + -1*-1*-1*-1 + -1*-1*-1*-1 + -1*-1*-1*-1 + -1*-1*-1*-1 + -1*-1*-1*1 + -1*-1*1*-1 + -1*1*-1*-1 = -1 + 1 + 1 + 1+ 1 + -1 + -1 + -1 = 0
