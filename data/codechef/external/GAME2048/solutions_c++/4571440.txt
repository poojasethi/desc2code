#include <iostream>
#include <stdio.h>
#include <vector>
#include <map>
#include <math.h>
#include <algorithm>
 
 
using namespace std;
// bool compare(const pair<float,int>& firstElem, const pair<float,int>& secondElem) {
// 	   if(firstElem.first==secondElem.first){
// 	return firstElem.second<secondElem.second;
// 	}
// 	return firstElem.first<secondElem.first;
 
// }
 
/* Finds longest strictly increasing subsequence. O(n log k) algorithm. */


int main() {
	int cases;
	scanf("%d",&cases);
	for(int i=0;i<cases;i++)
	{
		long long int n;
		//map<long long int,int> myMap;
		scanf("%lld",&n);
		long long int ans = 0;
		long long int remain = n;
		while (remain > 1)
		{
			ans += remain/2;
			if(remain%2 == 0) remain = remain/2;
			else remain = remain/2 + 1;
			//cout <<"hi " <<remain << " " <<  ans << endl;
		}
		cout << ans <<endl;
	 }
	// your code goes here
	return 0;
} 