
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.math.BigInteger;
import java.util.StringTokenizer;


public class Main {

	public static void main(String[] args) {

		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String str;
		try {
			str = br.readLine();
			int numCases = Integer.parseInt(str);
			while(numCases>0){
				str = br.readLine();
				StringTokenizer s=new StringTokenizer(str);

				int n=Integer.parseInt(s.nextToken());
				int r=Integer.parseInt(s.nextToken());
				BigInteger k=new BigInteger(s.nextToken());

				combination(n+r,r, k);

				numCases--;
			}
		} catch (NumberFormatException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	private static void combination(int n, int r, BigInteger k) {
		BigInteger comb = BigInteger.ONE;

		if(r > n-r)
			r = n-r;

		for(int i=0; i<r; i++){
				comb = comb.multiply(BigInteger.valueOf(n-i)).divide(BigInteger.valueOf(i+1));
		}
		System.out.println(comb.mod(k));
	}
}
