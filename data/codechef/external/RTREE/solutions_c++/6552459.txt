#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define mod 1000000007
#define sz 100005
#define pb push_back
ll fct[sz];
int ancestor[100005][30];
void factorial()
{
    int i;
    fct[0]=fct[1]=1;
    for(i=2;i<sz;i++)
    {
        fct[i]=(fct[i-1]*i)%mod;
    }
}
int lca(int a,int b,int level[],int parent[])
{
    int lca;
    if(level[a]>level[b])
    {
       int temp=a;
        a=b;
        b=temp;
    }
    for(int i=20;i>=0;i--)
    {
        if(ancestor[b][i]!=-1&&level[ancestor[b][i]]>=level[a])
        {
            b=ancestor[b][i];
        }
    }
    if(a==b)
    {
        return a;
    }
    else
    {
        for(int i=20;i>=0;i--)
        {
            //cout<<ancestor[a][i]<<" "<<ancestor[b][i]<<endl;
            if(ancestor[a][i]!=-1&&ancestor[a][i]!=ancestor[b][i])
            {
                a=ancestor[a][i];
                b=ancestor[b][i];
            }
        }
        return parent[a];
    }
}
int main()
{
    int n,i,s,d,j;
    scanf("%d",&n);
    int level[n+1],parent[n+1],till[n+1];
    vector<int>v[n+1];
    for(i=1;i<n;i++)
    {
        scanf("%d%d",&s,&d);
        v[s].pb(d);
        v[d].pb(s);
    }
    parent[0]=-1;
    level[0]=0;
    queue<int>q;
    vector<bool>st(n+1);
    q.push(0);
    st[0]=true;
    till[0]=0;
    factorial();
    while(!q.empty())
    {
        int k=q.front();
        q.pop();
        vector<int>::iterator it;
        for(it=v[k].begin();it!=v[k].end();it++)
        {
            if(st[*it]==false)
            {
                q.push(*it);
                st[*it]=true;
                parent[*it]=k;
                level[*it]=level[k]+1;
                if(fct[*it]%3==0)
                {
                    till[*it]=till[k]+1;
                }
                else
                {
                    till[*it]=till[k];
                }
            }
        }
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<25;j++)
        {
            ancestor[i][j]=-1;
        }
    }
    for(i=0;i<n;i++)
    {
        ancestor[i][0]=parent[i];
    }
    for(j=1;j<25;j++)
    {
        for(i=0;i<n;i++)
        {
            if(ancestor[i][j-1]!=-1)
            {
                ancestor[i][j]=ancestor[ancestor[i][j-1]][j-1];
            }
        }
    }
    /*for(i=0;i<n;i++)
    {
        cout<<i;
        for(j=0;j<25;j++)
        {
            cout<<ancestor[i][j]<<" ";
        }
        cout<<endl;
    }*/
    int query;
    scanf("%d",&query);
    while(query--)
    {
        int a,b,index,ta,tb;
        scanf("%d%d",&a,&b);
        ta=a;tb=b;
        index=lca(a,b,level,parent);
        //cout<<index<<endl;
        int ans;
        ans=till[ta]+till[tb]-(2*till[index]);
        if(fct[index]%3==0)
        {
            ans++;
        }
        printf("%d\n",ans);
    }
    return 0;
}
