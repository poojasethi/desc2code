#include<iostream>
#include<cstdio>
#include<stack>
using namespace std;
stack< pair<int,int> > temp;
int r,c,ans;
int info[202][202];
bool validpos(int a,int b){
    if(a<=r&&a>=0&&b<=c&&b>=0)
        return true;
    return false;
}
void solve(){
    ans=0;
    scanf("%d%d",&r,&c);
    for(int i=0;i<r;++i)
        for(int j=0;j<c;++j){
            scanf("%d",&info[i][j]);
            if(!info[i][j])
                temp.push(make_pair(i,j));
        }
    while(!temp.empty()){
        int x=temp.top().first,y=temp.top().second;
        int val=info[x][y]+1,came=1;
        if(validpos(x-1,y+1)&&info[x-1][y+1]==val)  {came=0;temp.push(make_pair(x-1,y+1));}
        if(validpos(x-1,y)&&info[x-1][y]==val) {came=0;temp.push(make_pair(x-1,y));}
        if(validpos(x-1,y-1)&&info[x-1][y-1]==val) {came=0;temp.push(make_pair(x-1,y-1));}
        if(validpos(x,y-1)&&info[x][y-1]==val) {came=0;temp.push(make_pair(x,y-1));}
        if(validpos(x,y+1)&&info[x][y+1]==val) {came=0;temp.push(make_pair(x,y+1));}
        if(validpos(x+1,y+1)&&info[x+1][y+1]==val) {came=0;temp.push(make_pair(x+1,y+1));}
        if(validpos(x+1,y)&&info[x+1][y]==val) {came=0;temp.push(make_pair(x+1,y));}
        if(validpos(x+1,y-1)&&info[x+1][y-1]==val) {came=0;temp.push(make_pair(x+1,y-1));}
        if(came) {info[x][y]=-1;temp.pop();}
        if(val>ans)ans=val;
    }
    printf("%d\n",ans);
}
 
int main(){
    int test;scanf("%d",&test);
    while(test--)   solve();
    return 0;
} 