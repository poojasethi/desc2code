#include<bits/stdc++.h>
#define pb push_back
#define mp make_pair
using namespace std;
long i,j,k,l,m,r,c,t,res,sz;
long a[240][240];
vector<pair<long,long> >v[240][240],vv;

template<class T>inline void IO(T &x){
    char c=getchar();
    T sgn=1;
    while(c<'0'|| c>'9'){
        if(c=='-') sgn=-1;
        c=getchar();
    }
    x=0;
    while(c>='0'&&c<='9'){
        x=(T)(x<<1)+(x<<3)+c-'0';
        c=getchar();
    }
    x*=sgn;
}

long bfs(long s,long e)
{
    queue<pair<long,long> >q;
    q.push(mp(s,e));
    while(!q.empty())
    {
        long x=q.front().first;
        long y=q.front().second;
        for(long k=0;k<v[x][y].size();k++)
        {
            long st=v[x][y][k].first;
            long ed=v[x][y][k].second;
            if(a[st][ed]>res)
            res=a[st][ed];
            q.push(mp(st,ed));
        }
        q.pop();
    }
}

int main()
{
    IO(t);
    while(t--)
    {
        IO(r),IO(c);
        res=0;
        for(i=0;i<240;i++)
        for(j=0;j<240;j++){
        v[i][j].clear();
        a[i][j]=-1;
        }

        for(i=1;i<=r;i++)
        for(j=1;j<=c;j++){
        IO(a[i][j]);
        if(a[i][j]==0)
        vv.pb(mp(i,j));
        }

        for(i=1;i<=r;i++)
        for(j=1;j<=c;j++)
        {
            if(a[i-1][j-1]==a[i][j]+1)
            v[i][j].pb(mp(i-1,j-1));

            if(a[i-1][j]==a[i][j]+1)
            v[i][j].pb(mp(i-1,j));

            if(a[i-1][j+1]==a[i][j]+1)
            v[i][j].pb(mp(i-1,j+1));

            if(a[i][j-1]==a[i][j]+1)
            v[i][j].pb(mp(i,j-1));

            if(a[i][j+1]==a[i][j]+1)
            v[i][j].pb(mp(i,j+1));

            if(a[i+1][j-1]==a[i][j]+1)
            v[i][j].pb(mp(i+1,j-1));

            if(a[i+1][j]==a[i][j]+1)
            v[i][j].pb(mp(i+1,j));

            if(a[i+1][j+1]==a[i][j]+1)
            v[i][j].pb(mp(i+1,j+1));
        }

        sz=vv.size();

        if(!sz)
        res=-1;
        else
        {
           for(i=0;i<sz;i++)
           bfs(vv[i].first,vv[i].second);
        }

        cout<<res+1<<endl;
        vv.clear();
    }
}
