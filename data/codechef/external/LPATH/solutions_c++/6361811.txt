#include <bits/stdc++.h>
#define gc getchar_unlocked
#define fo(i,n) for(i=0;i<n;i++)
#define Fo(i,k,n) for(i=k;i<n;i++)
#define lli long long int
#define pii pair<int,int>
#define vi vector<int>
#define pb push_back
#define mp make_pair
#define F first
#define S second
using namespace std;
void sd(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
int arr[210][210];
int r,c;
int dx[]={0,0,1,1,1,-1,-1,-1};
int dy[]={1,-1,0,-1,1,0,-1,1};
int dp[210][210];
int solve(int i,int j)
{
	if(dp[i][j]!=0)
		return dp[i][j];
	int k;
	int ans=0;
	int tem=0;
	
	fo(k,8)
	{
		int x=i+dx[k];
		int y=j+dy[k];
		if(x<0 || x>=r || y<0 || y>=c)
			continue;
		if(arr[x][y]==arr[i][j]+1)
		{
			tem=solve(x,y);
			ans=max(ans,tem);
		}
	//	cout<<tem<<endl;
	}
	//	printf("\n#%d,%d->%d\n",i,j,ans);
	dp[i][j]=ans+1;
	return ans+1;
}
int main()
{
	int t;
	sd(t);
	int i,n;
	int j;
	vector< pair<int,int> > con;
	while(t--)
	{
		sd(r);
		sd(c);
		con.clear();
		fo(i,r)
			fo(j,c)
			{
				dp[i][j]=0;
				sd(arr[i][j]);
				if(arr[i][j]==0)
				{
					con.pb(mp(i,j));
				}
			}
		int ans=0;
		fo(i,con.size())
		{
		//	printf("%d ,",i);
		//	cout<<endl;
		//	printf("%d %d \n",con[i].F,con[i].S);
			ans=max(ans,solve(con[i].F,con[i].S));
		
		}
		printf("%d\n",ans);
	
	}
	
	return 0;
} 