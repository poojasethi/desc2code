#include <utility> 
#include <iostream>
#include <cmath>
#include <vector>
#include <queue>
#include <algorithm>
#include <list>
#include <stack>
#include <string.h>
#include <sstream>
#include <stdio.h>
#define mod 1000000007
using namespace std;
typedef long long int lli;
int a[210][210],dp[210][210],r,c;
vector<pair<int,int> > vec;

int func(int i, int j)
{
	if(dp[i][j]!=-1) return dp[i][j];
	if(i-1>=1 && j-1>=1 && a[i-1][j-1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i-1,j-1));
	if(i-1>=1 && a[i-1][j]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i-1,j));
	if(i-1>=1 && j+1<=c && a[i-1][j+1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i-1,j+1));
	if(j-1>=1 && a[i][j-1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i,j-1));
	if(j+1<=c && a[i][j+1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i,j+1));
	if(i+1<=r && j-1>=1 && a[i+1][j-1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i+1,j-1));
	if(i+1<=r && a[i+1][j]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i+1,j));
	if(i+1<=r && j+1<=c && a[i+1][j+1]-a[i][j]==1) dp[i][j]=max(dp[i][j],1+func(i+1,j+1));
	dp[i][j]=max(dp[i][j],1);
	//cout<<i<<" "<<j<<" "<<dp[i][j]<<endl;
	return dp[i][j];
}

int main()
{
	int t,i,j,ans;
	cin>>t;
	pair<int,int> p;
	while(t--)
	{
		memset(dp,-1,sizeof(dp));
		ans=0;
		vec.clear();
		scanf("%d%d",&r,&c);
		for(i=1;i<=r;i++)
			for(j=1;j<=c;j++)
			{
				scanf("%d",&a[i][j]);
				p=make_pair(i,j);
				if(a[i][j]==0) vec.push_back(p);
			}
		vector<pair<int,int> >::iterator it;
		for(it=vec.begin();it!=vec.end();it++)
			ans=max(ans,func(it->first,it->second));
		printf("%d\n",ans);
	}
}