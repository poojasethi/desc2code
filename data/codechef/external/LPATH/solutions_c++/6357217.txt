#include <iostream>
#include <vector>
#define mk make_pair
#define pb push_back

using namespace std;

bool va(int x, int y, int n, int m)
{
    return (x >= 0 && x < n && y >= 0 && y < m);
}


int main()
{
    int n, t, i, j, k, m, a, b, r;
    cin >> t;
    while(t--) {
        cin >> n >> m;
        int A[n][m];
        vector<pair<pair<int, int>, int> > v;
        for(i = 0; i < n; i++) {
            for(j = 0; j < m; j++) {
                cin >> A[i][j];
                if(A[i][j] == 0) {
                    v.pb(mk(mk(i, j), 0));
                }
            }
        }
        int r = 0, mx = -1;
        while(r < v.size()) {
            a = v[r].first.first;
            b = v[r].first.second;
            k = v[r].second;
            mx = max(mx, k);
            r++;
            if(A[a - 1][b] == k + 1 && va(a - 1, b, n, m)) {
                v.pb(mk(mk(a - 1, b), k + 1));
            }
            if(A[a + 1][b] == k + 1 && va(a + 1, b, n, m)) {
                v.pb(mk(mk(a + 1, b), k + 1));
            }
            if(A[a][b - 1] == k + 1 && va(a, b - 1, n, m)) {
                v.pb(mk(mk(a, b - 1), k + 1));
            }
            if(A[a][b + 1] == k + 1 && va(a, b + 1, n, m)) {
                v.pb(mk(mk(a, b + 1), k + 1));
            }
            if(A[a - 1][b - 1] == k + 1 && va(a - 1, b - 1, n, m)) {
                v.pb(mk(mk(a - 1, b - 1), k + 1));
            }
            if(A[a - 1][b + 1] == k + 1 && va(a - 1, b + 1, n, m)) {
                v.pb(mk(mk(a - 1, b + 1), k + 1));
            }
            if(A[a + 1][b - 1] == k + 1 && va(a + 1, b - 1, n, m)) {
                v.pb(mk(mk(a + 1, b - 1), k + 1));
            }
            if(A[a + 1][b + 1] == k + 1 && va(a + 1, b + 1, n, m)) {
                v.pb(mk(mk(a + 1, b + 1), k + 1));
            }
        }
        cout << mx + 1 << endl;

    }

    return 0;
}