/*	Template by
	Ashwin Kumar
	IIT Delhi */
#include<algorithm>
#include<iostream>
#include<cassert>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<sstream>
#include<string>
#include<ctime>
#include<deque>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<vector>	
using namespace std;

typedef pair<int, int> pii;
typedef long long LL;
#define MOD 1000000007
#define INF 1000000000

vector<int> adj[500];
vector<int> deg;
int visited[500];

void dfs(int i) {
	visited[i] = 1;
	deg.push_back(adj[i].size());
	for (int j = 0; j < adj[i].size(); j++)
		if (!visited[adj[i][j]])
			dfs(adj[i][j]);
}

int main() {
	int T;
	scanf("%d", &T);
	for (int t = 0; t < T; t++) {
		int N, M, u, v;
		scanf("%d %d", &N, &M);
		for (int i = 0; i < N; i++)
			adj[i].clear();
		for (int i = 0; i < M; i++) {
			scanf("%d %d", &u, &v);
			adj[u-1].push_back(v-1);
			adj[v-1].push_back(u-1);
		}
		memset(visited, 0, sizeof visited);
		int cnt = 0;
		int good = 1;
		for (int i = 0; i < N; i++) {
			if (!visited[i]) {
				deg.clear();
				dfs(i);
				int n = deg.size();
				if (n > 1) {
					cnt++;
					sort(deg.begin(), deg.end(), greater<int>());
					int m = -1;
                    for (int j = 1; j <= n; j++)
                 		if (deg[j-1] >= j-1)
                    		m = j;
              		int a = 0, b = 0;
              		for (int j = 1; j <= m; j++)
             			a += deg[j-1]; 
              		for (int j = m+1; j <= n; j++)
              			b += deg[j-1];
              		if (a != m*(m-1)+b) {
              			good = 0;
              			break;
              		}
				}
			}
		}
		if (cnt > 2)
			good = 0;
		if (!good)
			printf("NO\n");
		else
			printf("YES\n");
	}
	return 0;
}
