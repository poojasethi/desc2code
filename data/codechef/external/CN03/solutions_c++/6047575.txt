#include <bits/stdc++.h>
#include <iostream>
#include <fstream>
#include <cmath>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <cstdlib>
#include <cstdio>
#include <string>
#include <cstring>
#include <cassert>
#include <utility>
#include <iomanip>

const int INF = 1000000001;
const double EPS = 1e-10;
const int MAX = 100001;

int a[MAX];

bool possible(int n, int c, int dist) 
{
	int i, put = 1, last = a[0];
	for(i = 1; i < n && put < c; i++) 
    {
		if(a[i]-last >= dist) 
        {
			put++;
			last = a[i];
		}
	}
	return (put == c);
}

int main() 
{
	int t, n, i, c, maxdiff, mindiff, middiff, best;
		scanf("%d%d", &n, &c);
		for(i = 0; i < n; i++) scanf("%d", &a[i]);
		std::sort(a, a+n);
		maxdiff = INF;
		mindiff = best = 0;
		while(mindiff <= maxdiff)
        {
			middiff = (maxdiff + mindiff) >> 1;
			if(possible(n, c, middiff))
            {
				if(best < mindiff) best = mindiff;
				mindiff = middiff + 1;
			}
			else maxdiff = middiff - 1;
		}
		printf("%d\n", best);

	return 0;
}