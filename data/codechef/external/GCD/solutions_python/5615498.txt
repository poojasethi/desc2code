import java.util.*;
import java.io.*;
class GCD
{
    public static void main(String [] args)
    {
        InputReader1 sc=new InputReader1(System.in);
        int T=sc.nextInt();
        while(T-->0)
        {
            int N=sc.nextInt();
            int a[]=new int[N+1];
            int k=0;
            for(int i=1;i<=N;i++)
            {
                a[i]=sc.nextInt();
                if(perfect(gcd(a[i],i)))
                    k++;
            }
            Arrays.sort(a);
            if(k==0)
                System.out.println("0");
            else
            {
                long ans=1;
                for(int i=N;i>N-k;i--)
                {
                    ans=ans*a[i];
                    ans%=1000000007;
                }
                System.out.println(ans);
            }
        }
    }
    public static int gcd(int p, int q)
    {
        if (q == 0)
            return p;
        else 
            return gcd(q, p % q);
    }
    public static boolean perfect(int x)
    {
        if(x==1)
            return false;
        int sq=(int)Math.sqrt(x);
        if(sq*sq==x)
            return true;
        else
            return false;
    }
}
class InputReader1 
{

    private InputStream stream;
    private byte[] buf = new byte[1024];
    private int curChar;
    private int numChars;

    public InputReader1(InputStream stream) {
        this.stream = stream;
    }

    public int read() {
        if (numChars == -1)
            throw new InputMismatchException();
        if (curChar >= numChars) {
            curChar = 0;
            try {
                numChars = stream.read(buf);
            } catch (IOException e) {
                throw new InputMismatchException();
            }
            if (numChars <= 0)
                return -1;
        }
        return buf[curChar++];
    }

    public int nextInt() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        int res = 0;
        do {
            if (c < '0' || c > '9')
                throw new InputMismatchException();
            res *= 10;
            res += c & 15;
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }

    public long nextLong() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        int sgn = 1;
        if (c == '-') {
            sgn = -1;
            c = read();
        }
        long res = 0;
        do {
            if (c < '0' || c > '9')
                throw new InputMismatchException();
            res *= 10;
            res += c & 15;
            c = read();
        } while (!isSpaceChar(c));
        return res * sgn;
    }

    public String next() {
        int c = read();
        while (isSpaceChar(c))
            c = read();
        StringBuilder res = new StringBuilder();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (!isSpaceChar(c));
        return res.toString();
    }

    public String nextLine() {
        int c = read();
        //while (c != '\n' && c != '\r' && c != '\t' && c != -1)
        //c = read();
        StringBuilder res = new StringBuilder();
        do {
            res.appendCodePoint(c);
            c = read();
        } while (c != '\n' && c != '\r' && c != '\t' && c != -1);
        return res.toString();
    }

    public static boolean isSpaceChar(int c) {
        return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
    }

}  

            