/*..........@indiantarget..............*/
/*............System Rabbit 4.0.9..............*/
/*.......code in C++.............*/

#include<map>
#include<list>
#include<stack>
#include<cmath>
#include<queue>
#include<deque>
#include<cstdio>
#include<string>
#include<string>
#include<vector>
#include<bitset>
#include<cctype>
//#include<conio.h>
#include<ctime>
#include<climits>
#include<fstream>
#include<sstream>
#include<iomanip>
#include<utility>
#include<cstring>
#include<cstdlib>
#include<numeric>
#include<iostream>
#include<algorithm>
#include<functional>

using namespace std;


typedef float f;
typedef double d64;
typedef long long i64;
typedef long double ld64;
typedef pair<int,int> ipair;
typedef unsigned long long ui64;
typedef pair<long long int,long long int> lipair;

const long long INF = (long long)1e14;
const double eps=1e-11;
const double pi=acos(-1.0);
static int ccc=1;


#define MOD 1000000007
#define MAX 100000
#define size(A) ((i64)A.size())
#define length(A) ((i64)A.length())
#define R freopen("in.txt","r",stdin)
#define W freopen("out.txt","w",stdout)
#define mp(A,B) make_pair(A,B)
#define gc getchar_unlocked
#define pb(X) push_back(X)
#define f(i,a,b)  for(i64 i=a;i<b;i++)
#define nf(i,a,b) for(i64 i=a;i>=b;i--)
#define case printf("Case %d#: ",ccc)
#define vp vector<lipair>
#define v vector<i64>
/*i64 read_int() {
  char c = gc();
  while(c<'0' || c>'9') c = gc();
  i64 ret = 0;
  while(c>='0' && c<='9') {
    ret = 1ll*(10 * ret + c - 48);
    c = gc();
  }
  return ret;
}*/
i64 fact(i64 n)          //factorial of number
{
    i64 temp=1;
    f(i,1,n+1)
    {
        temp=temp*i;
    }
    return temp;
}
i64 min(i64 a,i64 b)          //minimum of two numbers
{
    if(a>b)return b;
    else return a;
}

i64 max(i64 a,i64 b)         //maximum of two numbers
{
    if(a<b)return b;
    else return a;
}

void swap(i64 a,i64 b)        //swap two numbers
{
    a=a+b;
    b=a-b;
    a=a-b;
}


/*d64 rec(i64 N,i64 K)
{
	if(K==0)
	return N;
	d64 ans=0;
	f( i,0,N)
	{
		ans+=(1.0/d64(N))*rec(i,K-1);
	}
	return ans;

}
*/

d64 cl=clock();


void gernatetests(int N)
{
  srand(time(NULL));
  ofstream myfile;
  myfile.open ("problem" ".in");
  myfile<<N<<endl;
  for(int i=0;i<N;i++)
  myfile<<rand()<<" ";

  myfile.close();
}
i64 FIB[MAX]={0};
i64 fib_num(i64 n)          //generate nth fibonacci number
{
    FIB[1]=1;
    FIB[2]=1;
    if(FIB[n]==0)
    {
        f(i,3,n+1)
        {
            FIB[i]=(FIB[i-1]+FIB[i-2])%MOD;
        }
    }
    return FIB[n]%MOD;

}


int check_prime(i64 a)         //check number is prime or not
{
    int flag=0;
    if(a==0||a==1)return 1;
    if(a<0)return 1;
    f(i,2,sqrt(a)+2)
    {
        if(a%i==0)
        {
            flag=1;
        }
    }
    return flag;
}


i64 gcd(i64 a, i64 b)              //gcd of two numbers
{
    if(b==0)
    return a;
    if(a==0)
    return b;
    if(a>b)
    gcd(a%b,b);
    if(b>a)
    gcd (b%a,a);
}


i64 lcm(i64 a,i64 b)               //lcm of two numbers
{
    return (a*b/gcd(a,b))%MOD;
}


i64 reverse(i64 a)                  //reverse of a number
{
    i64 sum=0;while(a!=0)
    {
        sum=sum*10;
        sum=(sum+a%10)%MOD;
        a=a/10;
    }
    return sum;
}
/*.................MAIN CODE BEGINS HERE...................*/
//i64 dp[10000];
/*void dp1()
{
    f(i,0,10000)
    {
        dp[i]=(dp[i-1]%MOD*dp[i-2]%MOD)%MOD;
    }
}*/
int main() {


     #ifndef ONLINE_JUDGE

     //gernatetests(10000);
     //freopen("problem" ".in", "r", stdin);
     //freopen("problem" ".out", "w", stdout);

     #endif
     //cout<<int(flag[1]);//<<" "<<flag[5];
     //dp1();
     //R;
     //W;
            int t;
            cin>>t;
            while(t--)
            {
                int flag=0;
                int len;
                scanf("%d",&len);
                char p[len];
                scanf("%s",p);
                //cout<<p;
                int s1=0;
                int c1=0;
                int s2=0;
                int c2=0;
                for(int i=0;i<strlen(p);i++)
                {



                        if(p[i]=='C')
                        c1++;
                        else s1++;

                    if(s1==4||c1==4)
                    {
                        if(s1>c1)
                        {
                            s2++;
                            s1=0;
                            c1=0;
                        }
                        else if(s1<c1)
                        {
                            c2++;
                            s1=0;
                            c1=0;
                        }
                    }

                }
                if(s2!=0||c2!=0)
                {
                    
                       printf("%d-%d",s2,c2);
                       flag=1;
                    
                }
                if(s1!=0||c1!=0)
                {
                    //cout<<s1<<"         "<<c1<<"\n";
                    if(s1==1)s1=15;
                    if(s1==2)s1=30;
                    if(s1==3)s1=40;
                    if(c1==1)c1=15;
                    if(c1==2)c1=30;
                    if(c1==3)c1=40;

                    if(flag==0)
                    printf("%d-%d",s1,c1);
                    else
                    printf(",%d-%d",s1,c1);
                }
                cout<<"\n";
            }
}
