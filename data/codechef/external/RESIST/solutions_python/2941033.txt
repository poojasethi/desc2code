def multiply(m1, m2, mod):
    return [
        [(m1[0][0] * m2[0][0] + m1[0][1] * m2[1][0]) % mod,
         (m1[0][0] * m2[0][1] + m1[0][1] * m2[1][1]) % mod],
        [(m1[1][0] * m2[0][0] + m1[1][1] * m2[1][0]) % mod,
         (m1[1][0] * m2[0][1] + m1[1][1] * m2[1][1]) % mod]
    ]

def findNthPower(n, mod):
    A = [[1, 1], [1, 0]]
    if n == 1:
        return A
    r = findNthPower(n / 2, mod)
    r = multiply(r, r, mod)
    if n % 2 == 1:
        r = multiply(r, A, mod)
    return r


def solve(n, m):
    r = findNthPower(2*n-1, m)
    return "%s/%s" % (r[0][1], r[0][0])


def main():
    for _ in range(int(raw_input())):
        n, m = map(int, raw_input().split())
        print("%s" % solve(n, m))


if __name__ == "__main__":
    main()