/*
Author : Tushar Makkar (tusharmakkar08) 
*/

// Libraries 

#include <list>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <ctime>
#include <cassert>
#include <climits>
#include <limits>

// Definitions 

//Constants
#define mod 1000000007

// Input Output
#define s(n)					scanf("%d",&n)
#define sl(n) 					scanf("%lld",&n)
#define sf(n) 					scanf("%lf",&n)
#define ss(n) 					scanf("%s",n)
#define pf printf
#define pl(n) 					printf("%lld\n",n)
#define pb push_back
#define ft first
#define sd second
#define LL long long int

// function Definition
#define maX(i,j) (i>j?i:j)
#define miN(i,j) (i<j?i:j)
#define mset(x,v) memset(x,v,sizeof(x))
#define FOR(i,a,b) for(LL i=(LL)(a);i<(LL)(b);i++)
#define ITER(i,a) for( typeof(a.begin()) i=a.begin();i!=a.end();i++)	
#define REV(i,a,b) for(LL i=(LL)(a);i>=(LL)(b);i--)
#define foreach(v, c)     for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define checkbit(n,b)                ( (n >> b) & 1)
#define all(a)  a.begin(),a.end() 

// Useful hardware instructions
#define bitcount                    __builtin_popcount
#define gcd                         __gcd

//Debugging
#define dbgarr(a,m,n)				FOR(i,m,n)pf("%lld ",a[i])
#define dbgmat(a,m,n,k,l)			FOR(i,m,n){FOR(j,k,l)pf("%lld ",a[i]);pf("\n")}

using namespace std;

////////////////////////////////////////////////////////////////////////

// 1 D BIT TEMPLATE
/*
int maxVal;
int tree[1000005];
int read(int idx)
{
    LL sum = 0;
    while(idx > 0)
    {
        sum += tree[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
 
void update(int idx, int val)
{
    while(idx <= maxVal)
    {
        tree[idx] += val;
        idx += (idx & -idx);
    }
}
 */

/////////////////////////////////////////////////////////////////////////////

// 2 D BIT TEMPLATE

/*
int bit[MAX][MAX];

void update(int n, int x, int y, int v)
{
	int y1;
	while(x <= n)
	{
		y1 = y;
		while(y1 <= n)
		{
			bit[x][y1] += v;
			y1 += (y1 & -y1);
		}
		x += (x & -x);
	}
}

int readsum(int n, int x, int y)
{
	int v = 0, y1;
	while(x > 0)
	{
		y1 = y;
		while(y1 > 0)
		{
			v += bit[x][y1];
			y1 -= (y1 & -y1);
		}
		x -= (x & -x);
	}
	return v;
} 
 */
////////////////////////////////////////////////////////////////////////

// Fast Input begins
 
inline int inp()
{
	int noRead=0;
	char p=getchar_unlocked();
	for(;p<33;)
	{
		p=getchar_unlocked();
	};
	while(p>32)
	{	
		noRead = (noRead << 3) + (noRead << 1) + (p - '0');
		p=getchar_unlocked();
	}
	return noRead;
};

char ob[2048], *at = ob, *end = ob + 2048 - 1;
	
void flush_buffer()
{
	fwrite(ob, 1, at - ob, stdout);
	at = ob;
}
void buffer(int k)
{
	if(at + 10 > end)
		flush_buffer();
	LL d[10],dc = 0;
	if(k < 0) *at++ = '-', k = -k;
	if(k==0) 
		d[dc++]=0;
	while(k) 
		d[dc++] = k % 10, k /= 10;
	for(LL k = dc; k--; *at++ = d[k] + '0');
	*at++=10;
}

// Fast Input ends

// Variables type
typedef vector < LL > row;
typedef vector < row > matrix;
typedef pair< LL, LL > pLL; // pair of long long 
typedef pair< LL, pLL > edge;

// Global Declarations
LL a[100000],maze[2000][2000];
char mat[2000][2000];
char str[1000010];

int main()
{
	LL T,ki,k1,N,M,ans=0;
	sl(T);
	while(T--)
	{
		ki=0;
		k1=0;
		sl(N);sl(M);
		FOR(i,0,N)
		sl(a[i]);
		sort(a,a+N);
		for(ans=N-1;ans>=0;ans--)
		{
			ki+=a[ans];
			k1+=1;
			if(k1==M)
			break;
		}
		pf("%lld\n",ki);
	}
	return 0;
}
