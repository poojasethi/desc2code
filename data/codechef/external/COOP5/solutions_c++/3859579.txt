#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
#define ld long long int
#define BSIZE 20

//fast input
int scan_d()
{
	int res = 0,ip = getc(stdin);
	for(;ip<'0'||ip>'9';ip = getc(stdin));
	for(;ip>='0'&&ip<='9';ip = getc(stdin))
	res = res*10 + ip-'0';
	return res;
}
long scan_ld()
{
	long res = 0,ip = getc(stdin);
	for(;ip<'0'||ip>'9';ip = getc(stdin));
	for(;ip>='0'&&ip<='9';ip = getc(stdin))
	res = res*10 + ip-'0';
	return res;
}

void print_d(int n)
{
	char op[BSIZE];
	int pos = BSIZE-1;
	while(n)
	{
		op[pos--] = '0'+n%10;
		n/=10;
	}
	for(;pos<BSIZE;pos++)
	putchar(op[pos++]);
}

void println_d(int n)
{
	char op[BSIZE];
	int pos = BSIZE-1;
	while(n)
	{
		op[pos--] = '0'+n%10;
		n/=10;
	}
	for(;pos<BSIZE;pos++)
	putchar(op[pos++]);
	putchar('\n');
}
void print_ld(long int n)
{
	char op[BSIZE];
	int pos = BSIZE-1;
	while(true)
	{
		op[pos--] = '0'+(n%10);
		n/=10;
		if(n==0)
		break;
	}
	while(pos<BSIZE-1)
	putchar(op[++pos]);
}

void println_ld(long int n)
{
	char op[BSIZE];
	int pos = BSIZE-1;
	while(n)
	{
		op[pos--] = '0'+n%10;
		n/=10;
	}
	for(;pos<BSIZE;pos++)
	putchar(op[pos++]);
	putchar('\n');
}

bool fun(ld a, ld b)
{
	return (a>b);
}
int main()
{
	int t = scan_d();
	ld n,k,i,num,res;
	vector <ld> arr;
	while(t--)
	{
		cin>>n>>k;
		i = 0;
		res = 0;
		while(i<n)
		{
			cin>>num;
			arr.push_back(num);
			i++;
		}
		sort(arr.begin(),arr.end(),fun);
		for(i = 0;i<k;i++)
		res += arr[i];
		
		cout<<res<<"\n";
		arr.clear();
	}
	return 0;
	
}