#include <stdio.h>
#include <math.h>
#define DB double

DB dist(DB cx, DB cy, DB ax, DB ay, DB bx, DB by)
{
DB r, s, d1, d2, x, y, z;

r=((cx-ax)*(bx-ax)+(cy-ay)*(by-ay))/(x=(bx-ax)*(bx-ax)+(by-ay)*(by-ay));
s=((ay-cy)*(bx-ax)-(ax-cx)*(by-ay))/x;
y=fabs(s)*sqrt(x);

if((r>=(z=0))&&(r<=1))
	z=y;
else if((d1=(cx-ax)*(cx-ax)+(cy-ay)*(cy-ay))<(d2=(cx-bx)*(cx-bx)+(cy-by)*(cy-by)))
		z=sqrt(d1);
	else
		z=sqrt(d2);
return z;
}

int main()
{
int fall, t, j, n, m, r, b[100][2], p[100][2], anz=0, i;
DB d;

for(scanf("%d",&fall), t=1; t<=fall; printf("Case #%d: %d\n",t++, anz))
	{
	for(i=0, scanf("%d %d %d",&n,&m,&r); i<n; scanf("%d %d",&b[i][0],&b[i][1]), i++);
	for(i=anz=0; i<m; scanf("%d %d",&p[i][0],&p[i][1]), i++);
	if(m==1)
		for(i=0; i<n; i++)
			anz+=((sqrt(pow((b[i][0]-p[0][0]),2)+pow(b[i][1]-p[0][1],2)))<=r);
	else if(m>1)
		for(i=0; i<n; i++)
			for(j=0; j<m-1; j++)
				if((dist(b[i][0],b[i][1],p[j][0],p[j][1],p[j+1][0],p[j+1][1]))<=(r*1.0))
					{
					anz++;
					break;
					}
	}

return 0;
}
