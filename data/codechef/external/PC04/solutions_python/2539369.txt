#include<stdio.h>

struct point
{
       int x,y;
}v[10];

/*double dist(point a,point b)
{
       return sqrt((a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y));
}*/

int sqr_dist(point a,point b)
{
       return (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);
}

int check_side(point a,point b,point c)
{
    int val,ret;
    
    val=(a.y-b.y)*(a.x) - (a.x-b.x)*(a.y);
    ret=(a.y-b.y)*(c.x) - (a.x-b.x)*(c.y) - val;
    
    if(ret==0)
    {
              return ret;
    }
    if(ret>0)
    {
             return 1;
    }
    if(ret<0)
    {
             return -1;
    }
} 

int check_square_rhombus(point a,point b,point c,point d)
{
    int AB=sqr_dist(a,b),BC=sqr_dist(b,c),CD=sqr_dist(c,d),DA=sqr_dist(d,a),AC=sqr_dist(a,c),BD=sqr_dist(d,b);
    
    if(AB==BC && AB==CD && AB==DA)
    {
                              if(AB + BC == AC && AC == BD)
                              {
                                    return 1;
                              }
                              return 2;
    }
    
    return 0;
}

int check_rect_para(point a,point b,point c,point d)
{
    int AB=sqr_dist(a,b),BC=sqr_dist(b,c),CD=sqr_dist(c,d),DA=sqr_dist(d,a),AC=sqr_dist(a,c),BD=sqr_dist(d,b);
    
    if(AB == CD && BC == DA)
    {
          if(AB + BC == AC && AC==BD)
          {
                return 1;
          }
          return 2;
    }
    
    return 0;
}

int main()
{
    int chk1,chk2,chk3,chk4,t,i;
    struct point a[10];
    
    scanf("%d",&t);
    while(t--)
    {
              for(i=0;i<4;i++)
              {
                              scanf("%d %d",&a[i].x,&a[i].y);
              }
              
              chk1=check_side(a[0],a[2],a[1]);
              chk2=check_side(a[0],a[2],a[3]);
              chk3=check_side(a[1],a[3],a[0]);
              chk4=check_side(a[1],a[3],a[2]);
              
              if(chk1==0 || chk2==0 || chk3==0 || chk4==0)
              {
                         printf("NONE\n");
              } 
              else if((chk1!=chk2) && (chk3!=chk4))
              {
                            chk3=check_rect_para(a[0],a[1],a[2],a[3]);
                            
                            if(chk3!=0)
                            {
                                       chk4=check_square_rhombus(a[0],a[1],a[2],a[3]);
                                       
                                       if(chk4==1)
                                       {
                                                  printf("SQUARE\n");
                                       }
                                       else if(chk4==2)
                                       {
                                            printf("RHOMBUS\n");
                                       }
                                       else if(chk3==2)
                                       {
                                           printf("PARALLELOGRAM\n");
                                       }
                                       else if(chk3==1)
                                       {
                                            printf("RECTANGLE\n");
                                       }
                            }
                            else
                            {
                                printf("QUADRILATERAL\n");
                            }
              }
              else if(((chk1!=chk2) || (chk3!=chk4)))
              {
                  printf("QUADRILATERAL\n");
              }
              else
              {
                  printf("NONE\n");
              }
    }
    return 0;
}
                            
          
