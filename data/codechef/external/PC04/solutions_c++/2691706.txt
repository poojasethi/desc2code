#include<cstdio>
#include<cmath>

struct point
{
    int x;
    int y;
};

double slope(point a,point b)
{
    if(b.x-a.x==0)
        return -1;
    return ((double)(b.y-a.y))/(b.x-a.x);
}

bool slopeEql(double s1, double s2)
{
    return (fabs(s1-s2)<=0.000001);
}

//Checking by cross-prodcut
bool intersect(point a,point b, point c, point d)
{
    int p=((d.x-c.x)*(a.y-d.y))-((d.y-c.y)*(a.x-d.x));
    int q=((d.x-c.x)*(b.y-d.y))-((d.y-c.y)*(b.x-d.x));

    int m=((b.x-a.x)*(c.y-b.y))-((b.y-a.y)*(c.x-b.x));
    int n=((b.x-a.x)*(d.y-b.y))-((b.y-a.y)*(d.x-b.x));

    if(((p>0 && q<0) || (p<0 && q>0)) && ((m>0 && n<0) || (m<0 && n>0)))
        return true;

    return false;
}

double distSq(point a,point b)
{
    return pow((b.y-a.y),2)+pow((b.x-a.x),2);
}

bool IsOrthogonal(point a, point b, point c)
{
    return (b.x - a.x) * (b.x - c.x) + (b.y - a.y) * (b.y - c.y) == 0;
}

bool isQuad(point a,point b,point c, point d)
{
    double ba=slope(b,a), cb=slope(c,b), dc=slope(d,c),ad=slope(a,d);
    //printf("%lf\t%lf\t%lf\t%lf\t",ba,cb,dc,ad);
    if(slopeEql(ba,cb) || slopeEql(cb,dc) || slopeEql(dc,ad) || slopeEql(ad,ba))
        return false;

    if(intersect(a,b,c,d) || intersect(b,c,d,a))
        return false;

    return true;
}

bool isParallelogram(point a,point b,point c, point d)
{
    return (slopeEql(slope(b,a),slope(c,d)) && slopeEql(slope(c,b),slope(d,a)));
}

int main()
{
 //   freopen("input_quad.txt","r",stdin);
 //   freopen("output_quad.txt","w",stdout);
    int t,ans;
    point a,b,c,d;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d",&a.x);
        scanf("%d",&a.y);
        scanf("%d",&b.x);
        scanf("%d",&b.y);
        scanf("%d",&c.x);
        scanf("%d",&c.y);
        scanf("%d",&d.x);
        scanf("%d",&d.y);

        if(isQuad(a,b,c,d))
        {
            if(isParallelogram(a,b,c,d))
            {
                if(IsOrthogonal(a,b,c))
                {
                    if(fabs(distSq(a,b)-distSq(c,b))<=0.000001)
                        printf("SQUARE\n");
                    else
                        printf("RECTANGLE\n");
                }
                else if (fabs(distSq(a,b)-distSq(c,b))<=0.000001)
                    printf("RHOMBUS\n");
                else
                    printf("PARALLELOGRAM\n");
            }
            else
                printf("QUADRILATERAL\n");
        }
        else
            printf("NONE\n");
    }
    return 0;
}
