 If a positional numeral system is used, a natural way of multiplying numbers is taught in schools as long multiplication, sometimes called grade-school 

multiplication: multiply the multiplicand by each digit of the multiplier and then add up all the properly shifted results. It requires memorization of the 

multiplication table for single digits. 
 This is the usual algorithm for multiplying by hand in base 10. Computers normally use a very similar shift and add algorithm in base 2. A person doing long 

multiplication on paper will write down all the products and then add them together; an abacus-user will sum the products as soon as each one is computed.
 Your task is to write a program that multiplies two arbitrary precision signed integers.  Note that for this particular problem the only allowed languages are C & 

C++.  p>
Problem Setter: 

Input
First line contains number of test cases, integer n < 20.Each test contains two signed integers on two lines of arbitrary length. Number of digits of the arbitrary 

precision integers may extend upto 1000000.

Output: 
You need to print the sum of the two arbitrary precision signed numbers. 


Sample Input:
3
-123456789987654
-9876543210
-7894561230123
1234567890
42134134710293471092734
812374198273491872435034

Sample Output:
1219326320880960097529340
-9746371800348756550470
34228683905221964318944087115419517161404442956


