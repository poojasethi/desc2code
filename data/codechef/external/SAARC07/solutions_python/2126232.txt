import sys;

aw=False;
bw=False;
def main():
	tc=int(raw_input().strip());
	for x in range(tc):
		global aw;
		global bw;
		aw=False;
		bw=False;
		board=[];
		for y in range(5):
			board.append(raw_input().strip());
		checkHorizontal(board);
		checkVertical(board);
		checkDiagonal(board);
		global aw;
		global bw;
		if aw and bw:
			print "draw";
		elif aw and not bw:
			print "A wins";
		elif bw and not aw:
			print "B wins";
		else:
			print "draw";

def checkHorizontal(b):
	global aw;
	global bw;
	sta="AAA";
	stb="BBB";
	for i in range(5):
		r=b[i];
		if r.find(sta)>=0:
			aw=True;
		elif r.find(stb)>=0:
			bw=True;

def checkVertical(b):
	global aw;
	global bw;
	if aw and bw:
		return 1;
	vb=[];
	for i in range(5):
		s="";
		for j in range(5):
			s=s+b[j][i];
		vb.append(s);
	sta="AAA";
	stb="BBB";
	for i in range(5):
		r=vb[i];
		if r.find(sta)>=0:
			aw=True;
		elif r.find(stb)>=0:
			bw=True;

def checkDiagonal(b):
	global aw;
	global bw;
	if aw and bw:
		return 1;
	sta="AAA";
	stb="BBB";
	st=b[0][0]+b[1][1]+b[2][2]+b[3][3]+b[4][4];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[1][0]+b[2][1]+b[3][2]+b[4][3];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[2][0]+b[3][1]+b[4][2];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[0][1]+b[1][2]+b[2][3]+b[3][4];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[0][2]+b[1][3]+b[2][4];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	
	st=b[0][4]+b[1][3]+b[2][2]+b[3][1]+b[4][0];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[0][3]+b[1][2]+b[2][1]+b[3][0];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[0][2]+b[1][1]+b[2][0];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[1][4]+b[2][3]+b[3][2]+b[4][1];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
	st=b[2][4]+b[3][3]+b[4][2];
	if st.find(sta)>=0:
		aw=True;
	elif st.find(stb)>=0:
		bw=True;
if __name__=="__main__":main();
