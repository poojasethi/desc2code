#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
 
using namespace std;
typedef long long int llint;
template <typename customDataType>
void fastread(customDataType * a)
{
    char c=0; *a=0;
    while(c<33){c=getchar_unlocked();}
    while(c>33){*a=(*a<<3)+(*a<<1)+c-'0'; c=getchar_unlocked();}
    return;
}//fastread ends
 
 
int main()
{
    int numberOfPlanes,minToWish,seconds,xtemp,ytemp,tupdate;
    int ppos_x[10000];
    int ppos_y[10000];
    int xchange[10000];
    int ychange[10000];
    float radius[10000];
    fastread(&numberOfPlanes);
    fastread(&minToWish);
    float rmin=0,rmin_in;
 
    for(int i=0;i<numberOfPlanes;++i)
    {
        fastread(&ppos_x[i]);
        fastread(&ppos_y[i]);
        fastread(&xchange[i]);
        xchange[i] -= ppos_x[i];    //Xf-Xi;
        fastread(&ychange[i]);
        ychange[i]-= ppos_y[i];    //Yf-Yi;
        radius[i] = sqrt(pow((llint)ppos_x[i],2)+pow((llint)ppos_y[i],2));
    }
 
    rmin=3000;
    for(seconds=0;seconds<=1000;++seconds)
    {
        rmin_in=0;
        for(int i=0;i<numberOfPlanes;++i)
        {
            xtemp = ppos_x[i] + xchange[i]*seconds;
            ytemp = ppos_y[i] + ychange[i]*seconds;
            radius[i] = sqrt(pow((llint)xtemp,2)+pow((llint)ytemp,2));
        }
        sort(radius,radius+numberOfPlanes);
        rmin_in=radius[minToWish-1];
        if(rmin > rmin_in)
        {
            rmin = rmin_in;
            tupdate=seconds;
        }
    }
    printf("%.2f\n%d\n",rmin,tupdate);
    return 0;
}