#include <bits/stdc++.h>
using namespace std;

#define MAX 100005

int p[MAX], c[MAX], r[MAX];
vector<int> G[MAX];

int Find(int x)
{
	while(x != p[x]) {
		p[x] = p[p[x]];
		x = p[x];
	}
	return x;
}

void Union(int x, int y)
{
	x = Find(x);
	y = Find(y);
	if(r[x] > r[y])
		swap(x, y);
	p[y] = x;
	r[x] += r[y];
}

int main(int argc, char const *argv[])
{
	int n, q;
	int u, v;
	int x, a, b;

	scanf("%d", &n);
	for(int i = 0; i < n; i++) {
		c[i] = -1;
		p[i] = i;
		r[i] = 1;
	}

	for(int i = 0; i < n - 1; i++) {
		scanf("%d %d", &u, &v);
		G[u].push_back(v);
		G[v].push_back(u);
	}
	
	scanf("%d", &q);
	while(q--) {
		scanf("%d %d %d", &x, &a, &b);
		if(x == 1) {
			c[a] = b;
			for(int i = 0; i < G[a].size(); i++) {
				if(c[G[a][i]] == b) Union(a, G[a][i]);
			}
		} else {
			if(Find(a) == Find(b)) {
				printf("YES\n");
			} else {
				printf("NO\n");
			}
		}
	}

	return 0;
}