    #include <cstdio>
    #include <cstring>
     
    struct edge
    {
    int t, ne;
    };
     
    int n, q;
    int fed[100020], par[100020], col[100020];
    edge ed[200020];
     
    int a[100020], la;
    int find( int v )
    {
    int i;
    la = 0;
    while ( par[v] != -1 )
    {
    a[++la] = v;
    v = par[v];
    }
    for ( i = 1; i <= la; i++ )
    par[a[i]] = v;
    return v;
    }
     
    int main()
    {
    int i, j, k, x, s;
    int le = -1;
    memset( fed, -1, sizeof( fed ) );
    memset( par, -1, sizeof( par ) );
    memset( col, -1, sizeof( col ) );
    scanf( "%d", &n );
    for ( i = 1; i <= n-1; i++ )
    {
    scanf( "%d %d", &j, &k );
    le++;
    ed[le].t = k; ed[le].ne = fed[j]; fed[j] = le;
     
    le++;
    ed[le].t = j; ed[le].ne = fed[k]; fed[k] = le;
    }
    scanf( "%d", &q );
    for ( i = 1; i <= q; i++ )
    {
    scanf( "%d %d %d", &x, &j, &k );
    if ( x == 1 )
    {
    col[j] = k;
    for ( s = fed[j]; s > -1; s = ed[s].ne )
    {
    if ( col[ed[s].t] == col[j] )
    {
    par[find(ed[s].t)] = find( j );
    }
    }
    }
    else
    {
    if ( find( j ) == find( k ) )
    printf( "YES\n" );
    else printf( "NO\n" );
    }
    }
    return 0;
    }
