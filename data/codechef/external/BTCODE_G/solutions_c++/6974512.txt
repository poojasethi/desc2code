#include<bits/stdc++.h>
using namespace std;
#define getchar_unlocked getchar
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}
#define N 100001
#define mp make_pair
#define pb push_back
vector<int> v[N];
int parent[N];
int RANK[N];
int color[N];
int find(int a){
    if(parent[a]==a){
        return a;
    }
    return parent[a]=find(parent[a]);
}
void unionbank(int a,int b){//c++ doesnt allow me to name it union
    int x=find(a);
    int y=find(b);
    if(RANK[x]==RANK[y]){
        parent[y]=x;
        RANK[x]++;
    }
    else if(RANK[x]>RANK[y]){
        parent[y]=x;
    }
    else{
        parent[x]=y;
    }
}
int main(){
    int n=scan();
    for(int i=1;i<=n;i++){
        parent[i]=i;
        RANK[i]=0;
        color[i]=0;
    }
    for(int i=1;i<n;i++){
        int a=scan(),b=scan();
        a++;
        b++;
        v[a].pb(b);
        v[b].pb(a);
    }
    int q=scan();
    while(q--){
        int type=scan();
        if(type==1){
            int node=scan(),col=scan();
            node++;
            color[node]=col;
            int x=v[node].size();
            while(x--){
                int next=v[node][x];
                if(color[next]==col){
                    unionbank(next,node);
                }
            }
        }
        else{
            int a=scan(),b=scan();
            a++;
            b++;
            if(find(a)==find(b)){
                printf("YES\n");
            }
            else{
                printf("NO\n");
            }
        }
    }
}
 