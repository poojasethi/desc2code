#include <iostream>
#include <fstream>




using namespace std;



#define TEST 0


class ProblemSolver {
	private:
		const int K;
		int rec(int digits, int digitsum) {
			if (digits <= 0 || digitsum < 0) {
				return 0;
			} else if (digits * 9 < digitsum) {
				return 0;
			} else if (digits == 1 && digitsum <= 9) {
				return 1;
			} else if (digitsum == 0) {
				return 1;
			} else {
				int total = 0;
				for (int i = 0; i <= 9; i += 1) {
					if (digitsum >= i) {
						total += rec(digits - 1, digitsum - i);
					}
				}
				return total;
			}
		}
		int get(int digits, int digitsum) {
			int total = 0;
			for (int i = 1; i <= 9; i += 1) {
				total += rec(digits - 1, digitsum - i);
			}
			return total;
		}
	public:
		ProblemSolver() : K(13) {}
	public:
		void solve(int testNum, istream &in, ostream &out) {
			int N;
			in >> N;
			int digits = 0;
			while (get(digits, K) < N) {
				N -= get(digits, K);
				digits += 1;
			}
			out << digits << "\n";
		}
};


int main() {
	#if TEST
		ifstream inputfile;
		inputfile.open("input.txt", ios::in);
		istream &in = inputfile;
		ostream &out = cout;
	#else
		istream &in = cin;
		ostream &out = cout;
	#endif
	ProblemSolver solver;
	int testCases;
	in >> testCases;
	for (int testNum = 1; testNum <= testCases; testNum += 1) {
		solver.solve(testNum, in, out);
	}
	return 0;
}
