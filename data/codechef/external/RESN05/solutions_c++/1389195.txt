#include <cstdio>

enum { MODM = 8388608 }; // Every operation is done mod MODM

typedef long long LLONG;

struct ModNum {
    LLONG num;
    ModNum(LLONG n) : num(n>=0 ? n%MODM : MODM-((-n)%MODM)) { }  // O(1)

    ModNum operator+ (ModNum m) const { return num + m.num; } // O(1)
    ModNum operator- (ModNum m) const { return num - m.num + MODM; } // O(1)
    ModNum operator* (ModNum m) const { return num * LLONG(m.num); } // O(1)

    /// Returns (*this) ^ exp.
    ModNum pow(unsigned exp) {  // O(lg exp)
        if(exp == 0) return 1;
        ModNum ret = pow(exp/2);
        ret = ret * ret;
        if(exp % 2 == 1)
            ret = ret * (*this);
        return ret;
    }
};

ModNum solve(ModNum N) {
    N = N + 2;
    return ModNum(2).pow(N.num-3)*(N*N-N*5+8)-1;
}

int main() {
    int T;
    scanf("%d", &T);
    
    while(T--) {
        int N;
        scanf("%d", &N);
        printf("%lld\n", solve(N).num);
    }
    
    return 0;
}
