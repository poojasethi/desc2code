#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<queue>
#include<deque>
#include<map>
#include<cstdlib>
#include<cmath>
#include<utility>
#include<cstring>
#include<stack>
#include<set>
using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define PI pair<int,int>
#define READ() freopen("input.txt","r",stdin)
#define WRITE() freopen("output.txt","w",stdout)
#define FOR(i,x,y) for(int i=x;i<y;i++)
#define MODM 1000000007
#define lli long long int

bool cmp(const PI &a, const PI &b)
{
    return (a.ss<b.ss);
}

void swap(int *a,int *b)
{
    int t=*a;
    *a=*b;
    *b=t;
}

int main()
{
    int t,n,m,k,stars[55],dots[55],temp;
    char ch;
    scanf("%d",&t);
    while(t--)
    {
        vector< PI > rows;
        memset(stars,0,sizeof(stars));
        memset(dots,0,sizeof(dots));
        scanf("%d %d %d\n",&n,&m,&k);
        FOR(i,0,n)
        {
            FOR(j,0,m)
            {
                scanf("%c",&ch);
                if(ch=='.')
                    dots[i]++;
                else
                    stars[i]++;
            }
            if(stars[i]-dots[i]<=0)
                rows.pb(mp(i,stars[i]-dots[i]));
            scanf("\n");
        }

        int sz=rows.size(),sum=0;

        if(k==sz)
            for(int i=0;i<sz;i++)
                swap(&stars[rows[i].ff],&dots[rows[i].ff]);


        else if(k<sz)
        {
            sort(rows.begin(),rows.end(),cmp);
            /**for(int i=0;i<rows.size();i++)
                printf("rows=%d\n",rows[i]);**/
            for(int i=0;i<k;i++)
                swap(&stars[rows[i].ff],&dots[rows[i].ff]);
        }

        else
        {
            int mn=10000,mni;
            for(int i=0;i<sz;i++)
                swap(&stars[rows[i].ff],&dots[rows[i].ff]);

            if((k-sz)&1)
            {
                FOR(i,0,n)
                    if(stars[i]<mn)
                        mn=stars[i],mni=i;
                swap(&stars[mni],&dots[mni]);
            }
        }

        FOR(i,0,n)
            sum+=stars[i];
        printf("%d\n",sum);
    }
    return 0;
}
