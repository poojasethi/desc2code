#include <string>
#include <iostream>
#include <algorithm>
#include <cstdio>

using namespace std;

int offLights[51];

int main() {
  int t;
  int n,m,k;
  int count = 0;
  scanf("%d", &t);
  string row;
  while(t--) {
    scanf("%d%d%d", &n, &m, &k);
    for(int i = 0; i < n; ++i) {
      count = 0;
      cin >> row;
      for(int j = 0 ; j < m; ++j) {
        if(row[j] == '*') {
          count++;
        }
      }
      offLights[i] = m - count;
    }

    sort(offLights, offLights + n);
    int greater = 0;
    count = 0; // reusing for answer
    for (int i = n - 1; i >= 0; --i) {
      if(m-offLights[i] > m/2) {
        break;
      } else if( m-offLights[i] == m/2 && !(m & 1) ) {
        ++greater;
      } else {
        ++greater;
      }
    }
    if(greater == 0) {
      for (int i = n-2; i >= 0; --i) {
        count += m - offLights[i];
      }
      if(k & 1) {
        count += offLights[n-1];
      } else {
        count += m - offLights[n-1];
      }
    } else {
      if(k > greater) {
        //if( (k-greater) & 1 ) {
        for (int i = n-1; i > n-1-greater; --i) {
          count += offLights[i];
        }
        for (int i = n-1-greater; i >= 0 ; --i) {
          count += m - offLights[i];
        }
        if( (k - greater) & 1 ) {
          if(greater == n) {
            count -= offLights[0];
            count += m-offLights[0];
          } else {
            if(offLights[n-greater] > m-offLights[n-greater-1]) {
              count -= m-offLights[n-greater-1];
              count += offLights[n-greater-1];
            } else {
              count -= offLights[n-greater];
              count += m-offLights[n-greater];
            }
          }
        }
        // }
      } else {
        for (int i = n-1; i > n-1-k; --i) {
          count += offLights[i];
        }
        for (int i = n-1-k; i >= 0 ; --i) {
          count += m - offLights[i];
        }
      }
    }
    printf("%d\n", count);
  }
}
