#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pv(v,b,a) v.insert(v.begin()+b,a)
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define MAXCR 1000000000
#define mem(arr,a) memset(arr, a, sizeof arr)
#define er(vec,a,b) vec.erase(vec.begin() + a, vec.begin() + b+1)
#define traverse(a) for()
#define pii pair<int ,int>
#define mod 1000000007
#define LIM 100
using namespace std;
/*
list as pop_front();push_front(ELEMENT);
list as pop_front();push_back(ELEMENT);
to see first element stack=q.front()
to see last element queue=q.back()
*/
//str.insert(6,str3,3,4); to insert 4 words from str3 starting from 3rd position(0 based indexing) to str from 6th position (0 based indexing)
//str.find("live");//finds first occurance of string and returns its 0 based indes
//string str1=str.substr (a,n);//a=0 based start index,n=length of words//if length not given substring till end is formed
//auto bound_=upper_bound (v.begin(), v.end(), 20); //Returns an iterator pointing to the first element in the range [first,last) which compares greater than val.
//auto bound_=lower_bound (v.begin(), v.end(), 20);//Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.
//bool ans=binary_search();//Returns true if any element in the range [first,last) is equivalent to val, and false otherwise.
/*
//for(???<???>:iterator itr;itr!=???.end();itr++) or for(auto &tt : t.edges)
map<double,LL>my;
map<double,LL>:: iterator it;
for(it=my.begin();it!=my.end();it++)
*/
//getline(cin,s,'\n');  to get input terminating at'\n';excluding '\n'
//(a/b)%m = ((a%m)(b^(m-2)%m))%m.
//(a^b)%m=
//vector<ll>v(size,default val);
//reverse(all(s))//to reverse some vector or string;
//cin.eof() //checks for end of file return true when cin takes input as end of file
vector<pair<int,int> >v[2];
int find_()
{
	int sum=0,i;
	for(i=1;i<v[0].size();i++)
	{
		if(v[0][i].F==v[1][i].F&&v[0][i].S==v[1][i].S)
		{
			sum++;
		}
	}
	return sum;
}
void pre()
{
	v[0].clear();
	v[1].clear();
}
void solve(int n,int m,int s,int p,int a)
{
	int i=1;
	s++;
	while(s>0&&i<m)
	{
		v[a].pb(mp(0,i));
		i=i+p;
		s--;
	}
	i=(i-m+n+1)%(n+1);
	while(s>0)
	{
		v[a].pb(mp(1,i));
		i=(i+p)%(n+1);
		s--;
	}
}
int main()
{
	int n,m,s,p,q,ans,t,i;
	sf(t)
	while(t--)
	{
		pre();
		sf(n)
		sf(m)
		sf(s)
		sf(p)
		sf(q)
		solve(n-m,m,s,p,0);
		solve(n-m,m,s,q,1);
		ans=find_();
		printf("%d\n",ans);
	}
	
	return 0;
}
