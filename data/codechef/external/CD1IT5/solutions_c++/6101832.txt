#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
//#include<conio.h>
using namespace std;



struct node
{
       int parent;
       int rank;
              
       };


int find(node *aa,int c)
{
    if(aa[c].parent == c)
    {
     
     return c;
    
     }
    return find(aa,aa[c].parent);
    
    
    
    
}
void unio(node *aa,int a,int b)
{
     
     if(aa[a].rank>aa[b].rank)
     {
                              aa[b].parent=a;
                              aa[a].rank++;
                              
                              }
     
     else if(aa[a].rank<aa[b].rank  )
     {
          aa[a].parent=b;
          aa[b].rank++;
          
          }
     else
     {
     
     
     aa[b].parent=a;
     aa[a].rank++;
     
     
     
     
     }
     
     
     }


int main()
{
    int n,m;
    cin>>n>>m;
    
    node aa[n+1];
    for(int i=0;i<=n;i++)
    {aa[i].parent=i;
    aa[i].rank=0;}
    
    
    int a,b,c;
    int xout,yout;
    for(int i=0;i<m;i++)
    {
            
    cin>>a>>b>>c;
    xout=find(aa,b);
    yout=find(aa,c);
    if(a==0)
    {
            unio(aa,xout,yout);
            
            
            }
            else
            {
                if(xout==yout)
                cout<<"Yes"<<endl;
                else
                cout<<"No"<<endl;
                
                
                
                
                
                }        
            
            
            
            
            
            
            
            
            }
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
 //   getch();
    return 0;
}
