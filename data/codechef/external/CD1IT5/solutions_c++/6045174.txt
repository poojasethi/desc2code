#include<bits/stdc++.h>
using namespace std;
inline int scan(){
    char c = getchar_unlocked();
    int x = 0;
    while(c<'0'||c>'9'){
        c=getchar_unlocked();
    }
    while(c>='0'&&c<='9'){
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    return x;
}
int parent[100001];
int ran[100001];
int find(int node){
    if(parent[node]==node)return node;
    return parent[node]=find(parent[node]);
}
void unio(int a,int b){
    int x=find(a);
    int y=find(b);
    if(ran[x]==ran[y]){
        ran[x]++;
        parent[y]=x;
    }
    else if(ran[x]>ran[y]){
        parent[y]=x;
    }
    else{
        parent[x]=y;
    }
}
int main(){
    int n=scan();
    int q=scan();
    for(int i=1;i<=n;i++){
        parent[i]=i;
        ran[i]=0;
    }
    while(q--){
        int b,c;
        bool a;
        a=scan(),b=scan(),c=scan();
        if(!a){
            unio(b,c);
        }
        else{
            if(find(b)==find(c)){
                printf("Yes\n");
            }
            else{
                printf("No\n");
            }
        }
    }
}