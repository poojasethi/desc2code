#include<bits/stdc++.h>
using namespace std;
#define max 100009
int parent[max],rank[max];

int findParent(int x)
{
	if(parent[x]!=x)
	parent[x]=findParent(parent[x]);
	return parent[x];
}

void unite(int x,int y)
{
	int xpar = findParent(x);
	int ypar = findParent(y);
	if(rank[xpar]>rank[ypar])
	parent[ypar]=xpar;
	else
	if(rank[xpar]<rank[ypar])
	parent[xpar]=ypar;
	else
	{
		parent[ypar]=xpar;
		rank[xpar]++;
	}
}

int main()
{
	int n,q;
	scanf("%d%d",&n,&q);
	for(int i=0;i<=n;i++)
	{
		parent[i]=i;
		rank[i]=0;
	}
	int ch,a,b;
	while(q--)
	{
		scanf("%d%d%d",&ch,&a,&b);
		if(ch==0) unite(a,b);
		else if(findParent(a)==findParent(b)){
			printf("Yes\n");
		} 
		else
		printf("No\n");
	}
	return 0;
}