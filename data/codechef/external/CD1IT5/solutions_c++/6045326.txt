#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <string.h>
#include <ctime>

using namespace std;

#define REP(i,n) for(int i=0; i<n; i++)
#define FOR(i,x,y) for(int i=x; i<=y; i++)

typedef long long ll;
int res[100005];
map <int, vector <int> > group_list;
main()
{
	int n,q;
	scanf("%d %d",&n,&q);
	memset(res,-1,sizeof res);
	int group=1;
	REP(i,q)
	{
		int q1,u,v;
		scanf("%d %d %d",&q1,&u,&v);
		if(!q1)
		{
			if(res[u]==-1 && res[v]==-1) // both are new nodes
			{
				res[u]=res[v]=group;
				group_list[group].push_back(u);
				group_list[group].push_back(v);
				group++;
			}
			else if(res[u]==-1)
			{
				res[u]=res[v];
				group_list[res[v]].push_back(u);
			}
			else if(res[v]==-1)
			{
				res[v]=res[u];
				group_list[res[u]].push_back(v);
			}
			else // both are existing
			{
				if(res[u]!=res[v]) // both are different groups
				{
					int group1=res[u];
					int group2=res[v];
					vector <int> res2=group_list[group2];
					REP(i,res2.size())
					{
						res[res2[i]]=group1;
						group_list[group1].push_back(res2[i]);
					}
				}
			}
		}
		else
		{
			if(res[u]==res[v] && res[u]!=-1) printf("Yes\n");
			else printf("No\n");
		}
	}
}