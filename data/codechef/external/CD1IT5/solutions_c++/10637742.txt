#include<iostream>
#include<cstdio>
#include<cmath>
#include<iomanip>
#include<vector>
#include<map>
#include<set>
#include<algorithm>
#include<list>
#include<cstring>
#include<stack>
#include<queue>
using namespace std;
#define ll long long
#define vi vector<int>
#define vii vector<vi >
#define pp pair<int,int>
#define pb push_back
#define mp make_pair
#define ppl pair<ll,ll>
#define vl vector<ll>
#define vll vector<vl >
#define vb vector<bool>
#define llu unsigned ll
#define all(c) c.begin(),c.end()
#define mod 1000000007
#define sc scanf
#define pf printf
ll power(ll a,ll b)
{
	if(!b)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(b&1)
		temp=(temp*a);
	return temp;
}
class graph
{
	vi * adj;
	int time;
	public:
		graph( int v)
		{
			adj = new vi[v];
			time = 0;
		}
		void add_edge(int u, int v)
		{
			adj[u].pb( v);
			adj[v].pb( u);
		}
};

int find(int i, vi& root)
{
	while( i ^ root[i])
	{
		i=root[i];
	}
	return i;
}

void uniond(int x, int y, vi& root, vi& rank)
{
	if( rank[x] > rank[y])
		root[y]=x;
	else
		root[x]=y;
	if( rank[x] == rank[y])
		rank[y]++;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int i, op, n, q, u, v, x, y;
	cin >> n >> q;
	vi root(n), rank(n);
	for( i=0;i<n;i++ )
	{
		root[i]=i;
	}
	while(q--)
	{
		cin >>op >> u >> v;
		u--;
		v--;
		x=find(u, root);
		y=find( v, root);
		if( op==0)
		{
			if( x^y )
			{
				uniond(x, y, root, rank);
			}
		}
		else
		{
			if( x^y )
			{
				cout <<"No\n";
			}
			else
				cout <<"Yes\n";
		}
	}
    return 0;
}
