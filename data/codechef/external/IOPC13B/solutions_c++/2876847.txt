#include <time.h>
#include <assert.h>
#include <algorithm>
#include <cstdlib>
#include<string.h>
#include <time.h>
#include <iostream>
#include <cstdio>
using namespace std;

typedef long long LL;
#define maxn 10000000;

LL gcd (LL a , LL b)
{
    if (b == 0) return a;
    return gcd (b , a % b);
}

LL solve(LL M , LL N)
{
    LL g = gcd (M , N);
    LL temp = M / g;
    LL ans = (N / g) * (M / g) * g * (g - 1);
    ans += g * (M / g - 1) * (N / g - 1);

    return ans;
}

LL brute(LL M , LL N)
{
    LL res = 0;
    for (int i = 0; i <= M - 1; i++)
    {
        res += (i * N) / M;
    }
    return 2 * res;
}

int main()
{
    /*
    for (int m = 1; m <= 100; m++)
    {
        for (int n = 1; n <= 100; n++)
        {
            LL res1 = brute(m , n);
            LL res2 = solve (m , n);
            if (res1 != res2)
            {
                printf("ERROR\n");
                printf("%d and %d\n" , m , n);
                printf("res1 and res2 %d %d\n" , res1 , res2);
            }
        }
    }

    printf ("done\n");
    */
    int T;
    scanf ("%d" , &T);
    while (T--)
    {
        LL M , N;
        scanf ("%lld %lld" , &M , &N);

        LL ans = solve (M , N);
        printf("%lld\n" , ans);
    }

    return 0;
}