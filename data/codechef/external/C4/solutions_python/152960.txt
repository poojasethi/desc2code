from sys import stdin

new_matrix = lambda m,n,v : [ [v for j in xrange(n)] for i in xrange(m) ]

T = int(stdin.readline())

for _t in xrange(T):

    data = map(int,stdin.readline().split())
    numIngredientes = data[0]
    vals = data[1:]

    a = ord('a')
    seq = ['-'] + [ ord(x)-a for x in stdin.readline().strip() ]
    L = len(seq)-1
    
    N = int(stdin.readline())

    dp = new_matrix(N+1,L+1,0)
    sol = new_matrix(N+1,L+1,'')
    for i in xrange(1,N+1):
        for j in xrange(1,L+1):
            if vals[seq[j]]<=i :
                op1 = dp[i][j-1]
                op2 = dp[i-vals[seq[j]]][j-1]+vals[seq[j]]
                if op1>op2 :
                    dp[i][j]=op1
                    sol[i][j]=sol[i][j-1]
                elif op2 > op1 :
                    dp[i][j]=op2
                    sol[i][j]=sol[i-vals[seq[j]]][j-1]+chr(seq[j]+a)
                else :
                    dp[i][j]=op1
                    sol[i][j]=min(sol[i][j-1],sol[i-vals[seq[j]]][j-1] + chr(seq[j]+a))
            else :
                dp[i][j]=dp[i][j-1]
                sol[i][j]=sol[i][j-1]

    
    print "IMPOSSIBLE" if dp[N][L]<N else sol[N][L]
            
    
