#include<iostream>
#include<stdio.h>
#include<assert.h>
#include<string.h>
#include<time.h>
#include<stdlib.h>
#include<math.h>
#include<string>
#include<sstream>
#include<map>
#include<set>
#include<queue>
#include<stack>
#include<vector>
#include<algorithm>
#pragma comment(linker, "/STACK:16777216")
#define pb push_back
#define ppb pop_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define sz(x) (int)(x).size()
#define LL long long
#define bit __builtin_popcountll
#define sqr(x) (x) * (x)
using namespace std;
typedef pair<int, int> pii;
const double eps = 1e-9;
const double pi = acos(-1.0);
char s[1005];
int w[26];
bool dp[1005][505];
void solve() {
	int k; cin >> k;
	for (int i = 0; i < k; i++) {
		cin >> w[i];
	}
	int W; cin >> s >> W;
	int n = strlen(s);
	for (int i = 1; i <= W; i++) {
		dp[n][i] = false;
	}
	dp[n][0] = true;
	for (int i = n - 1; i >= 0; i--) {
		for (int j = 0; j < w[s[i] - 'a']; j++) {
			dp[i][j] = dp[i + 1][j];
		}
		for (int j = w[s[i] - 'a']; j <= W; j++) {
			dp[i][j] = dp[i + 1][j] | dp[i + 1][j - w[s[i] - 'a']];
		}
	}
	if (!dp[0][W]) {
		cout << "IMPOSSIBLE" << endl;
		return;
	}
	int p = 0;
	while(W > 0) {
		for (char ch = 'a'; ch <= 'a' + k - 1; ch++) {
			if (W < w[ch - 'a']) continue;
			bool ok = false;
			for (int i = p; i < n; i++) {
				if (ch != s[i] || !dp[i + 1][W - w[ch - 'a']]) continue;
				p = i + 1;
				ok = true;
				break;
			}
			if (ok) {
				W -= w[ch - 'a'];
				putchar(ch);
				break;
			}
		}
	}
	puts("");
}
int main()
{
	#ifndef ONLINE_JUDGE
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	#endif
	int T; cin >> T;
	while(T--) {
		solve();
	}
	return 0;
} 