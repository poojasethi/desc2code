#include <iostream>
#include <map>
#include <cstdio>
#include <cstring>
#include <queue>
#include <algorithm>
using namespace std;

char s[1005];
int n, k;
int v[30];
int m[1005][505];
int sum;

char dfs(int pos, int sum) {
	if(sum<0) return 1;
	if(m[pos][sum]) return m[pos][sum];
	if(sum==0) return m[pos][sum]=2;
	if(pos==n) return 1;
	char ans=1;
	if(dfs(pos+1,sum-v[s[pos]-'a'])>1) ans=s[pos];
	char c=dfs(pos+1,sum);
	if(c>1 && (ans==1 || c<ans)) ans=c;
	return m[pos][sum]=ans;
}

int main()
{
	//freopen("in.txt", "r", stdin);
    int t;
    scanf("%d", &t);
    while (t--) {
        scanf("%d\n", &k);
        for (int i=0; i<k; i++) scanf("%d\n", &v[i]);
        gets(s);
        n = strlen(s);
        scanf("%d\n", &sum);
		memset(m, 0, sizeof m);
        char c = dfs(0, sum);
        if(c==1) printf("IMPOSSIBLE\n"); else
		{
		    for(int i=0;c>2;)
			{
				printf("%c",c);
				for(;i<n && s[i]!=c;i++);
				sum-=v[s[i]-'a'];
				i++;
				c=dfs(i,sum);
			}
			printf("\n");
		}
    }
    return 0;
}
