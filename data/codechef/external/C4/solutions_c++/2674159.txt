#include<stdio.h>
#include<string.h>
#include<stdlib.h>
 
#define MODBY 1000000007
#define INVALID 125
 
char min(char a,char b){ return (a<b)?a:b;}
 
int a[50],value[2000];
char ingre[2000],dp[2000][2000];
int chosen[2000][2000];
int main()
{
   int cases,cnt;
   int i,n,k;
   int x,y,s;
   int first,olds;
 
   for(scanf("%d",&cases),cnt=1;cnt<=cases;cnt++){
      scanf("%d",&k);
      for(i=0;i<k;i++)
         scanf("%d",&a[i]);
      scanf("%s",ingre);
      scanf("%d",&s);
      for(i=0;ingre[i];++i)
         value[i]=a[ingre[i]-'a'];
      n=strlen(ingre);
 
      for(i=0;i<=s;++i)
         dp[i][n]=INVALID;//this value is greater than all other alphabets; it signifies no solution
      dp[0][n]='a'-1;//empty set; must have the least value
 
      for(y=n-1;y>=0;--y)
         for(x=s;x>=0;--x)
            if((value[y]<=x)&&(dp[x-value[y]][y+1]!=INVALID)){
               dp[x][y]=min(ingre[y],dp[x][y+1]);
               chosen[x][y]=((dp[x][y]==ingre[y])?y:chosen[x][y+1]);
            }
            else{
               dp[x][y]=dp[x][y+1];//even this may not exist, but this has value INVALID then
               chosen[x][y]=chosen[x][y+1];
            }
 
      if(dp[s][0]==INVALID) puts("IMPOSSIBLE");
      else{
         //puts("solution exists");
      //   printf(" in %s\n",ingre);
         first=0;
         while(s>0){
            olds=s;
            //printf("s is %d and first is %d\n",s,first);
            printf("%c",ingre[chosen[s][first]]);
            //printf("%c at pos %d\t",ingre[chosen[s][first]],chosen[s][first]);
            s-=value[chosen[s][first]];
            first=chosen[olds][first]+1;
         }
         printf("\n");
      }
   }
   return 0;
} 