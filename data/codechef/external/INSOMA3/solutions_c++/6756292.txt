/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}
int bit[100005];

int read(int idx)
{
	int sum = 0;
	while(idx > 0) {
		sum += bit[idx];
		idx -= (idx & -idx);
	}
	return sum;
}

void update(int idx, int val)
{
	while(idx < 100004) {
		bit[idx] += val;
		idx += (idx & -idx);
	}	
}

void solve()
{
	memset(bit, 0, sizeof(bit));
	int n;
	s(n);
	int a[100005];
	int b[100005];
	rep(i, n) s(a[i]);
	rep(i, n) b[i] = a[i];
	map<int, int>m;
	sort(b, b + n);
	rep(i, n) {
		m[b[i]] = i + 1;
	}
	rep(i, n) {
		a[i] = m[a[i]];
	}
	LL inv = 0;
	rrep(i, n) {
		int u = read(a[i] - 1);
		inv += (LL)u;
		update(a[i], 1);
	}
	pl(inv); pn;	
}

int main()
{
	int t = 1;
	//scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
