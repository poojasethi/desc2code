#include<iostream>
#include<cstdio>
#include<cstdlib>
#define MAX 100005
using namespace std;

long long int a[MAX],b[MAX];

long long int merge(long long int start,long long int mid,long long int end){
	
	long long int i=start,k=start,j=mid+1,ctr,inv_cnt = 0;

	while(i<=mid && j<=end){
		
		if(a[i]<=a[j]){
            // from first array
			b[k] = a[i];
			i++;
			k++;
		} else{
            // from second array
			b[k] = a[j];
			j++;
			k++;
            // count inversions
            inv_cnt += (mid-i+1);
		}
	}
	
	if(i>mid){
		while(j<=end){
			b[k] = a[j];
			j++;
			k++;
		}
	}
	else{
		while(i<=mid){
			b[k] = a[i];
			i++;
			k++;
		}	
	}

	for(ctr=start;ctr<=end;ctr++){
		a[ctr]=b[ctr];
	}
    
    return inv_cnt;
}

long long int merge_sort(long long int start,long long int end){
	if(start < end){	
		long long int mid = (start+end)/2;
		long long int l = merge_sort(start,mid);
		long long int r = merge_sort(mid+1,end);
		long long int split = merge(start,mid,end);
        return l+r+split;
	}
	return 0;
}

int main(){
    long long int i,n;
    scanf("%lld",&n);
	for(i=0;i<n;i++) scanf("%lld",&a[i]);
	printf("%lld\n",merge_sort(0,n-1));    
	return 0;
}