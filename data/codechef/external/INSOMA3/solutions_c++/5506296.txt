#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
 
using namespace std;
#define FOR(i,a)    for(int i = 0;i < a;i++)
#define REP(i,a,b)  for(int i = a;i < b;i++)
#define vi vector<int>
#define LL long long
void merge(LL *,LL, LL, LL ,LL &);
void mergesort(LL *a, LL low, LL high,LL &cou)
{
    LL mid;
    LL lc=0,rc=0,sc=0;
    if (low < high)
    {
        mid=(low+high)/2;
        mergesort(a,low,mid,lc);
        mergesort(a,mid+1,high,rc);
        merge(a,low,high,mid,sc);
        cou=lc+rc+sc;
    }
    return;
}
void merge(LL *a, LL low, LL high, LL mid,LL &sc)
{
    LL i, j, k, c[mid+high+1];
    i = low;
    k = low;
    j = mid + 1;
    while (i <= mid && j <= high)
    {
        if (a[i] < a[j])
        {
            c[k] = a[i];
            k++;
            i++;
        }
        else
        {
            c[k] = a[j];
            sc+=(mid-i+1);
            k++;
            j++;
        }
    }
    while (i <= mid)
    {
        c[k] = a[i];
        k++;
        i++;
    }
    while (j <= high)
    {
        c[k] = a[j];
        k++;
        j++;
    }
    for (i = low; i < k; i++)
    {
        a[i] = c[i];
    }
}
LL ar[200010];
int main()
{
 int t=1;
 //scanf("%d",&t);
 while(t--)
 {
  int n;
  scanf("%d",&n);
  FOR(i,n)
  {
   scanf("%lld",&ar[i]);
  }
  if(n!=1)
  { 
  LL invc;
  mergesort(ar,0,n-1,invc);
  printf("%lld\n",invc);
  } 
  else
  {
   printf("0\n");
  }
 }
 return 0;
}