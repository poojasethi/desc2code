#include<iostream>
#include<math.h>
#include<stdio.h>
#include<vector>
#include<algorithm>
#define x getchar_unlocked()
#define y putchar_unlocked
#define mid (i+j)/2
using namespace std;
inline void inp( int &n ) {//fast input function
	n=0;
	int ch=x,sign=1;
	while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=x;}
	while( ch >= '0' && ch <= '9' )
 		n=(n<<3)+(n<<1)+ ch-'0', ch=x;
	n=n*sign;
	}
 
int n,A[100000];long long int ans;int C[100000];
 
void merge(int i,int j) {
	int p2=mid+1,p1=i,ind=i,num=(i+j)/2;
	//cout<<i<<" "<<j<<" "<<ans<<endl;
	while(p1!=(num+1) && p2!=(j+1)) {
		//cout<<"  "<<p1<<" "<<p2<<" "<<num<<" "<<i<<endl;
		if(A[p2]<A[p1]) {
			ans+=(num+1-p1);
			C[i++]=A[p2];
			p2++;
			}
		else {
			C[i++]=A[p1];
			p1++;
			}
		}
	if(p1==(num+1)) {
		while(i!=(j+1)) {
			C[i++]=A[p2++];
			//p2++;
			}
		}
	if(p2==(j+1)) {
		while(i!=(j+1)) {
			C[i++]=A[p1++];
			//p1++;
			}
		}
	//cout<<ans<<endl;
	for(int k=ind;k<=j;k++) {
		A[k]=C[k];
		//cout<<A[k]<<" ";
		}
	//cout<<endl<<endl;
	}
 
void merge_sort(int i,int j) {
	if(i==j)
		return;
	merge_sort(i,(i+j)/2);
	merge_sort((i+j)/2+1,j);
	merge(i,j);
	}
 
int main() {
	inp(n);
	ans=0;
	for(int i=0;i<n;i++)
		inp(A[i]);
	merge_sort(0,n-1);
	printf("%lld\n",ans);
	return 0;
	}
 