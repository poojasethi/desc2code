#include <iostream>
#include <cstdio>
#include <string>
#include <cmath>
#include <vector>
#include <list>
using namespace std;

int N, numSwitched = 0;
vector<vector<int> > tempList;
vector<int> huizen;

void printVect(vector<int> a){
	for(int i=0; i<a.size(); i++){
		printf("%d ", a[i]);
	}
	printf("\n");
}


vector<int> merge(vector<int> a, vector<int> b){
	vector<int> merged;
	int i=0, j=0;
	while(i<a.size() || j<b.size()){
		if(j == b.size() || (i<a.size() && a[i] < b[j])){
			merged.push_back(a[i]);
			i++;
		}
		else{
			merged.push_back(b[j]);
			j++;
			numSwitched += a.size() - i;
			//printf("Added %d\n", a.size() - i);
		}
	}
	return merged;
}


int main(){
	scanf("%d", &N);
	for(int i=0; i<N; i++){
		int tempInt;
		vector<int> temp;
		scanf("%d", &tempInt);
		temp.push_back(tempInt);
		tempList.push_back(temp);
	}
	while(tempList.size() > 1){
		vector<vector<int> > vect;
		for(int i=0; i<tempList.size()-tempList.size()%2; i+=2){
			/*printf("Merged: ");
			printVect(tempList[i]);
			printVect(tempList[i+1]);
			printf("Result: ");
			printVect(merge(tempList[i], tempList[i+1]));*/
			
			vect.push_back(merge(tempList[i], tempList[i+1]));
		}
		if(tempList.size()%2 == 1){
			vect.push_back(tempList[tempList.size()-1]);
		}
		tempList = vect;
	}	
	printf("%d\n", numSwitched);
	return 0;
}
