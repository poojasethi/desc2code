#include<stdio.h>
int mergesort(int a[],int low,int mid,int high)
{
	int i,j,k,temp[high],inversion=0,p;
	i=low;
	j=mid+1;
	k=low;
	for(p=low;p<=high;p++)
	temp[p]=a[p];
	while((i<=mid) &&(j<=high))
	{
		if(temp[i]<=temp[j])
		{
			a[k++]=temp[i++];
		}
		else
		{
		a[k++]=temp[j++];
		inversion+=(mid+1-i);
	     }
	}
	if(i<=mid)
	{
		while(i<=mid)
		a[k++]=temp[i++];
	}
	if(j<=high)
	{
		while(j<=high)
		a[k++]=temp[j++];
	}
	return inversion;
}
int merge(int a[],int low,int high)
{
	int mid,inco=0;
	if(low<high)
	{
		mid=(low+high)/2;
		inco=merge(a,low,mid);
		inco+=merge(a,mid+1,high);
		inco+=mergesort(a,low,mid,high);
	}
	return inco;
}
int main()
{
	int n,i,ans;
      scanf("%d",&n);
      int a[n];
	for(i=0;i<n;i++)
	scanf("%d",&a[i]);
	ans=merge(a,0,n-1);
	printf("%d",ans);
	return 0;
}