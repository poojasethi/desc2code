#include <bits/stdc++.h>
using namespace std;

int merge(int *arr, int left, int mid, int right) {
	int inv_cnt = 0;
	int l_pnt = mid;
	int r_pnt = right;
	int i = left;
	int j = mid + 1;
	int t_pnt = 0;
	int temp[right - left + 1];
	while(i <= mid && j <= right) {
		if(arr[i] <= arr[j]) {
			temp[t_pnt++] = arr[i++];
		} else {
			temp[t_pnt++] = arr[j++];
			inv_cnt += mid - i + 1;
		}
	}
	while(i <= mid) {
		temp[t_pnt++] = arr[i++];
	}
	while(j <= right) {
		temp[t_pnt++] = arr[j++];
	}
	for(int i = 0; i < t_pnt; i++) {
		arr[left + i] = temp[i];
	}
	//cout<<"inv = "<<inv_cnt<<"\n";
	return inv_cnt;
}

int merge_sort(int *a, int left, int right) {
	int mid = (left + right) / 2;
	int inv_cnt = 0;
	if(left < right) {
		inv_cnt += merge_sort(a, left, mid);
		inv_cnt += merge_sort(a, mid + 1, right);
		inv_cnt += merge(a, left, mid, right);
		//cout<<"inv = "<<inv_cnt<<"\n";
	}
	return inv_cnt;
}



void solve() {
	int n;
	cin>>n;
	int a[n+1];
	for(int i = 0 ; i < n; i++) {
		cin>>a[i];
	}
	cout<<merge_sort(a, 0, n - 1)<<"\n";
	//for(int i = 0; i < n; i++) cout<<a[i]<<" ";
}

int main() {
	solve();
	return 0;	
}