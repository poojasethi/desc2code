import sys
mynumber=0
def merge(a,b,n,m):
    global mynumber
    i=0
    j=0
    c=[]
    if(n==0):
        return b
    if(m==0):
      return a
    while((i<n) and (j<m)):
        if(a[i]<=b[j]):
            c+=[a[i]]
            i+=1
        else:
            c+=[b[j]]
            #print b[j],a,b,mynumber
            mynumber+=len(a[i:])
            j+=1
    if(i<n):
        #mynumber+=len(a[i:])
        c+=a[i:]
        #print mynumber
    if(j<m):    
        c+=b[j:]
    return c
def mergesort(a,n):
    if(n==1):
        return a
    else:
        b=mergesort(a[:n/2],n/2)
        c=mergesort(a[n/2:],n-n/2)
        return merge(b,c,n/2,n-n/2)
n=input()    
a=[int(x) for x in raw_input().split()]
mergesort(a,n)
print mynumber
#a=[1,2,3,1,3,4,1,2]
#c=[1,20,6,4,5]
#b=[2,4,1,3,5]
#print mergesort(a,len(a)),a,mynumber
#mynumber=0
#print mergesort(b,len(b)),b,mynumber
    
