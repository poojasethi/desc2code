#!/usr/bin/env python

def bin(n, digits = '0123456789abcdefghijklmnopqrstuvwxyz'):
	def b(n):
		return b(n // 2) + digits[n % 2] if n > 0 else ''
	return digits[0] if n <= 0 else b(n)

def push_and_count_bigger(n, t = [0 for i in range(2 ** 18 - 1)]):
	i, c = 0, 0
	for d in bin(n).rjust(17, '0'):
		i = 2 * i + 1
		if d == '0':
			c += t[i + 1]
		else:
			i += 1
		t[i] += 1
	return c

raw_input()
L = [int(i) for i in raw_input().split()]
L = sorted(enumerate(L), None, lambda (p, x): x)
print sum([push_and_count_bigger(p) for p, x in L])
