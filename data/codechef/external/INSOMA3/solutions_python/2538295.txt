#code to count number of inversions in an array and sort using merge sort
def merge(a,b):         
    if(a==b):
        return 0
    if(b-a==1):
        if(arr[b]<arr[a]):
            arr[b],arr[a]=arr[a],arr[b]
            return 1
        else:
            return 0
    else:
        c1 =  merge(a,(b+a)/2)
        c1 += merge((b+a)/2+1,b)
        t1=[]
        for c in range(a,(a+b)/2+1):
            t1.append(arr[c])
        c=a
        i=0
        j=(a+b)/2+1
        l1=len(t1)
        l2=(b-a)/2
        while(c<=b):
            if(i>=l1):
                arr[c]=arr[j]
                c+=1
                j+=1
                continue
            if(j>b):
                arr[c]=t1[i]
                i+=1
                c+=1
                continue
            if(t1[i]<arr[j]):
                arr[c]=t1[i]
                i+=1
                c+=1
            else:
                arr[c]=arr[j]
                c+=1
                j+=1                
                c1+=(l1-i)               
        return c1

#arr=[3,2,4,6,9,10,8,7,5,1,14,12,13,11,16,15]
#arr=[1,3,5,2,4,6]
#arr=[int(u) for u in raw_input().split()]
arr=[]
#for i in range(100000):
    #arr.append(int(raw_input()))
n=input()
arr=[int(u) for u in raw_input().split()]
print merge(0,len(arr)-1)

