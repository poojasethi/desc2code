#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define mem(a,val) memset(a,val,sizeof(a))
#define nl printf("\n");
#define pb push_back
#define mp make_pair
//#define f first
//#define s second
#define cf I64
using namespace std;
LL dp[100005];
int main()
{	LL t,i,j,N,m,ans,sum=0;
	//precompute
	dp[0]=0;
	for(i=1;i<=100000;i++)
		dp[i]=dp[i-1]+(LL)(i*(i+1))/2;
	//Summation term 
	/*for(i=2;i<N;i++)
	{	if(N>=(2*i-1))
		{	sum+=(LL)(i-1)*(N-(2*i-1))+(LL)((i-2)*(i-1))/2;
			//cout<<sum<<endl;
		}
		else
		{	sum+=((LL)(N-i-1)*(N-i))/2;	
			//cout<<sum<<endl;
		}
	}*/
	//cout<<"here"<<sum;nl;
	cin>>t;
	while(t--)
	{	cin>>N;
		if(N<=2)
		{	cout<<"0\n";
			continue;
		}
		sum=0;
		i=(N+1)/2;
		sum=((2*N+3)*i*(i+1))/4;
		sum-=(i*(i+1)*(2*i+1))/4;
		sum-=N*i;
		//cout<<sum<<endl;
		sum+=dp[N-1-(N+3)/2];
		/*i=N-1;
		sum+=(N-1)*i;
		sum-=(i*(i+1))/2;
		cout<<sum<<endl;
		i=(N+1)/2;
		sum-=(N-1)*i;
		sum+=(i*(i+1))/2;*/
		cout<<sum<<endl;
	}
	return 0;
}
