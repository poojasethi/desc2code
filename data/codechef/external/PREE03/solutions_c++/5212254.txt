//DP Approach
#include<bits/stdc++.h>
#define MAX 7005

using namespace std;

typedef long long int lli;

lli DP[MAX],array[MAX];

int main(void){
	
	int testCases,i,totalNumbers;
	lli max;
	
	scanf("%d",&testCases);
	while(testCases--){
		
		DP[0]=0;
		max=INT_MIN;
		int neg=0;
		
		scanf("%d",&totalNumbers);
		
		for(i=1;i<=totalNumbers;i++){
			
			 scanf("%lld",&array[i]);
			 if(array[i]<0)neg++;
			
		}
		 
		
		for(i=1;i<=totalNumbers;i++){
			
			if(DP[i-1]+array[i]>0)
              DP[i]=DP[i-1]+array[i];
			  
			else DP[i]=0;			 
			
		}
		
		for(i=1;i<=totalNumbers;i++)
		   if(DP[i]>max)
		     max=DP[i];
		
		if(neg==totalNumbers){
			
			max=INT_MIN;
			
			for(i=1;i<=totalNumbers;i++)
			   if(array[i]>max)
			     max=array[i];		
			
		}
		
		printf("%lld\n",max);
		
	}
	
	return 0;
	
}