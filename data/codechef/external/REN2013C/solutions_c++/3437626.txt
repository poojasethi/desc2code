#include <bits/stdc++.h>
using namespace std;
#define MAXX 110000
#define LL long long
#define pb push_back
#define pii pair<int,int>
#define mp make_pair
vector<int>grph[MAXX];
int L[MAXX],T[MAXX],P[MAXX],max_hght=0;
LL cost[MAXX];
map<pii,LL>mapp;
void dfs(int u,int parent,int length,LL path_length)
{
        if(L[u]!=-1)return ;
        L[u]=length;
        T[u]=parent;
        max_hght=max(max_hght,length);
        cost[u]=path_length;
        int size=grph[u].size();
        for(int i=0; i<size; i++) {
		   if(grph[u][i]!=parent)
			dfs(grph[u][i],u,length+1,path_length+mapp[mp(u,grph[u][i])]);
        }
}
void dfs2(int node,int parent,int nr)
{
        if(L[node]<nr) {	//in the first region
                P[node]=1;
        } else if(L[node]%nr==0) {
                P[node]=T[node];
        } else P[node]=P[T[node]];
        for(int i=0; i<grph[node].size(); i++) {
                if(grph[node][i]!=parent)
                        dfs2(grph[node][i],node,nr);
        }
}
LL LCA(int x,int y)
{
        int a=x,b=y;
        while(P[x]!=P[y]) {
                if(L[x]>L[y])
                        x=P[x];
                else y=P[y]	;
        }
        while(x!=y) {
                if(L[x]>L[y])
                        x=T[x];
                else y=T[y]	;
        }
        return cost[a]+cost[b]-2*cost[x];
}
int main()
{
        int N;
        while(scanf("%d",&N)&&N!=0) {
                for(int i=0; i<MAXX; i++)grph[i].clear();
                mapp.clear();
                for(int i=1; i<N; i++) {
                        int a,b;
                        scanf("%d%d",&a,&b);
                        grph[a].pb(i);
                        grph[i].pb(a);
                        mapp[mp(i,a)]=b;
                        mapp[mp(a,i)]=b;
                }
                memset(L,-1,sizeof(L));
                memset(T,-1,sizeof(L));
                memset(P,-1,sizeof(L));
                dfs(0,0,1,0);
                //node parent,length cost
                int nr=sqrt(max_hght);
                dfs2(0,0,nr);
                //node parent length
                max_hght=0;
                int Q;
                scanf("%d",&Q);
                while(Q--) {
                        int a,b;
                        scanf("%d%d",&a,&b);
                        printf("%lld ",LCA(a,b));
                }
                printf("\n");
                //node ,parent ,length
        }
        return 0;
}
