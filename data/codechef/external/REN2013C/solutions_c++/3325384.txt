#include <iostream>
#include <cstdio>
#include <utility>
#include <vector>
#include <cmath>
#define PII pair<int,int>
#define MP make_pair
#define PB push_back
using namespace std;

vector<vector<PII> > v;
int P[100001][20];
long long dist[100001];
int L[100001];
int T[100001];
void dfs(int a,long long dis,int level)
{
    dist[a]=dis;
    L[a]=level;
    for(int i=0;i<v[a].size();i++)
        dfs(v[a][i].first,dis+v[a][i].second,level+1);
}

int lca(int p, int q){
    int tmp, log, i;
    if (L[p] < L[q])
        tmp = p, p = q, q = tmp;
    for (log = 1; 1 << log <= L[p]; log++);
    log--;
    for (i = log; i >= 0; i--)
        if (L[p] - (1 << i) >= L[q])
            p = P[p][i];
    if (p == q)
        return p;
    for (i = log; i >= 0; i--)
        if (P[p][i] != -1 && P[p][i] != P[q][i])
            p = P[p][i], q = P[q][i];
    return T[p];
}

int main()
{
    int n,p,L;
    while(1)
    {
    v.clear();
    scanf("%d",&n);
    if(n==0)
        break;
    v.resize(n);
    for(int i=0;i<n;i++)
        for(int j=1;(1<<j)<n;j++)
            P[i][j]= -1;
    for(int i=1;i<n;i++)
        {
            scanf("%d%d",&p,&L);
            v[p].PB(MP(i,L));
            P[i][0]=T[i]=p;
        }
        for(int j=1;(1<<j)<n;j++){
            for(int i=0;i<n;i++)
                if(P[i][j-1] != -1)
                    P[i][j] = P[P[i][j-1]][j-1];
        }
        dfs(0,0,0);
        int q,src,des;
        scanf("%d",&q);
        while(q--)
        {
            scanf("%d%d",&src,&des);
            printf("%lld ",dist[src]+dist[des]-(2*dist[lca(src,des)]));
        }
        printf("\n");
       }
    return 0;
}
