 Chef is playing a video game where there are N sticks. Each stick has different point value given in an array P with N integers. If Chef collects some number of sticks, then the total points he earns is the sum of their point values. Chef wants to get the highest points that is possible by collecting sticks.
You are given a 2D array A where jth column of ith row will be 1 if its possible to collect stick j immediately after collecting stick i. Otherwise, it will be 0.
Chef stops collecting sticks once he cannot collect any more sticks. He cannot collect a stick which he has already been collected.
Considering that he plays optimally find the maximum points he can get by collecting sticks.

Input
Input description.

First line contains an Integer T the number of test cases. 
Each test case will begin with an integer N denoting the number of sticks
 The second line of each test cases contains N space-separated integers, denoting the points of each stick i.e. the P array
N lines will follow containing N space separated integers (0 or 1) denoting the array A 

 

Output
Output description.

For each test case, output a single line containing the maximum points Chef can get by playing the game collecting sticks.

 

Constraints
1<=T<=20
1<=N<=10
1<=Values in P<=1000
A will have N rows and N colums, each index will either be 0 or 1.
A[i][i] will always be 0.
 

Example
Input:
2
4
1 2 3 4
0 0 0 0
0 0 1 1
0 0 0 1
0 0 0 0
4
10 2 3 4
0 0 0 0
0 0 1 1
0 0 0 1
0 0 0 0

Output:
9
10

Explanation
Example case 1 (all sticks 0 based index). He can collect sticks 1,2 and 3 first by starting at stick 1 and getting 2 points. Then he can either collect stick 2 or 3.
If he collects stick 2, he can collect stick 3 from there, but if he collects stick 3, then he cannot collect stick 2 after that.
Example case 2 (all sticks 0 based index)This case is similar to case 1 but here stick 0 has much more points. He can collect stick 0 and get the highest points.