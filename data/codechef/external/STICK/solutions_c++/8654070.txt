#include <stdio.h>
#include <algorithm>
int arr[11][11],N,wei[11];
int  dfs(int v, int visited[])
{
	visited[v] = 1;
	int j;
	int max_ = wei[v], val;
//	max_[v] = std::max(max_[v],wei[v]);
	for(j=0;j<N;j++)
	{
		if(arr[v][j] != 0 && visited[j] == 0)
		{
		 	val = dfs(j,visited);;
			max_ = std::max(max_, val+wei[v]);
		}

	}
	visited[v] = 0;
	return max_;
}
int main()
{
	int T,i,visited[11],j, val =0, maxi =0;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%d",&N);
		int maxi = 0;
		for(i=0;i<N;i++)
			scanf("%d",&wei[i]);
		for(i=0;i<N;i++)
		{
			for(j=0;j<N;j++)
			{
				scanf("%d",&arr[i][j]);
			}
			visited[i] = 0;
		}
		for(i=0;i<N;i++)
		{

			for(j=0;j<N;j++)
			{
				visited[j] = 0;
			}
			val = dfs(i,visited);
			if( val > maxi )
				maxi = val;
		}
		printf("%d\n",maxi);		

	}
}

