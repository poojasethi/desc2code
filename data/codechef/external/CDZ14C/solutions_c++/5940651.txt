#include <bits/stdc++.h>
using namespace std;
int dp[1005][1005];
int visit[1005][1005];
int main()
{
int t,n,m;
string str;
scanf("%d",&t);
while(t--)
{
scanf("%d%d",&n,&m);
char a[n+1][m+1];
for(int i=1;i<=n;i++)
{
cin>>str;
for(int j=1;j<=m;j++)
{
a[i][j]=str[j-1];
}
}

memset(visit,0,sizeof visit);
memset(dp,0,sizeof dp);
dp[1][1]=1;
visit[1][1]=1;
queue<pair<int,int> >q;
q.push(make_pair(1,1));
while(!q.empty())
{


pair<int,int> cur=q.front();
q.pop();
int x=cur.first;
int y=cur.second;
if(a[x][y]=='0')
{
if(x+1<=n&&visit[x+1][y]==0&&a[x+1][y]=='1')
{
visit[x+1][y]=1;
q.push(make_pair(x+1,y));
dp[x+1][y]=dp[x][y]+1;
}
if(y+1<=m&&visit[x][y+1]==0&&a[x][y+1]=='1')
{
visit[x][y+1]=1;
q.push(make_pair(x,y+1));
dp[x][y+1]=dp[x][y]+1;
}
if(x-1>=1&&visit[x-1][y]==0&&a[x-1][y]=='1')
{
visit[x-1][y]=1;
q.push(make_pair(x-1,y));
dp[x-1][y]=dp[x][y]+1;
}
if(y-1>=1&&visit[x][y-1]==0&&a[x][y-1]=='1')
{
visit[x][y-1]=1;
q.push(make_pair(x,y-1));
dp[x][y-1]=dp[x][y]+1;
}
}
else
{
if(x+1<=n&&visit[x+1][y]==0&&a[x+1][y]=='0')
{
visit[x+1][y]=1;
q.push(make_pair(x+1,y));
dp[x+1][y]=dp[x][y]+1;
}
if(y+1<=m&&visit[x][y+1]==0&&a[x][y+1]=='0')
{
visit[x][y+1]=1;
q.push(make_pair(x,y+1));
dp[x][y+1]=dp[x][y]+1;
}
if(x-1>=1&&visit[x-1][y]==0&&a[x-1][y]=='0')
{
visit[x-1][y]=1;
q.push(make_pair(x-1,y));
dp[x-1][y]=dp[x][y]+1;
}
if(y-1>=1&&visit[x][y-1]==0&&a[x][y-1]=='0')
{
visit[x][y-1]=1;
q.push(make_pair(x,y-1));
dp[x][y-1]=dp[x][y]+1;
}
}
}
if(visit[n][m]==0)
printf("-1\n");
else
printf("%d\n",dp[n][m]);
}
return 0;
}
