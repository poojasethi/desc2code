//BIG OH
//prob-
#include<cstdio>
#include<iostream>
#include<cstring>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<functional>
#include<bitset>
#include<numeric>
#include<cassert>
#include<limits>
using namespace std;
#define ll long long
#define gc getchar_unlocked
//#define mod 100000000
#define rep(n) for(int i=0;i<n;i++)

vector<string>mtrx;
long dp[1005][1005];
int dy[]={0,1,-1,0};
int dx[]={1,0,0,-1};
void bfs(int n,int m)
{
  queue < pair <int,int> >q;
  q.push(make_pair(0,0));
  while(!q.empty())
  {
    int x=q.front().first;
    int y=q.front().second;
    q.pop();
    for(int i=0;i<4;i++)
    {
      int xx=x+dx[i];
      int yy=y+dy[i];
      if(xx>=0 and xx <n and yy >=0 and yy <m)
      {
          if(mtrx[x][y]!=mtrx[xx][yy])
          {
            if(dp[x][y]+1<dp[xx][yy])
            {
              dp[xx][yy]=dp[x][y]+1;
              q.push(make_pair(xx,yy)) ;     
            }
          }
       }
     }//end for
   }//end while
}//end bfs

int main()
{
  int t;
  cin>>t;
  while(t--)
  {
    int n,m;
    cin>>n>>m;
    for(int i=0;i<n;i++)
    {
      string str;
      cin>>str;
      mtrx.push_back(str);
    } 
    for(int i=0;i<n;i++)
    for(int j=0;j<m;j++) dp[i][j]=10000000;
    dp[0][0]=1;
    bfs(n,m);
    if(dp[n-1][m-1]==10000000)
     cout<<"-1\n";
    else
      cout<<dp[n-1][m-1]<<endl;
    mtrx.clear();
   }
}