#include<vector>
#include<string>
#include<algorithm>
#include<iostream>
#include <fstream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<stack>
#include<cstring>
#include<map>
#include<set>
#include<queue>  
using namespace std;
#define MOD 1000000007
string s[1111];
int a[1111][1111];
int n,m;
queue<int> q;
void bfs(int x,int y)
{
	if(x>0&&s[x-1][y]!=s[x][y]&&a[x-1][y]==0)
	{
		a[x-1][y]=a[x][y]+1;
		q.push((x-1)*1001+y);
	}
	if(x<n-1&&s[x+1][y]!=s[x][y]&&a[x+1][y]==0)
	{
		a[x+1][y]=a[x][y]+1;
		q.push((x+1)*1001+y);
	}
	if(y>0&&s[x][y-1]!=s[x][y]&&a[x][y-1]==0)
	{
		a[x][y-1]=a[x][y]+1;
		q.push(x*1001+y-1);
	}
	if(y<m-1&&s[x][y+1]!=s[x][y]&&a[x][y+1]==0)
	{
		a[x][y+1]=a[x][y]+1;
		q.push(x*1001+y+1);
	}
}
int main()
{
	ios_base::sync_with_stdio(false);cin.tie(0);
	int i,j;
	int t;
	int T;
	int x,y;
	cin>>T;
	while(T--)
	{
		cin>>n>>m;
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				a[i][j]=0;
		for(i=0;i<n;i++)
			cin>>s[i];
		q.push(0);
		a[0][0]=1;
		while(!q.empty())
		{
			t=q.front();
			x=t/1001;
			y=t%1001;
			bfs(x,y);
			q.pop();
		}
		if(a[n-1][m-1]==0)
			a[n-1][m-1]=-1;
		cout<<a[n-1][m-1]<<endl;
	}
	//system("pause");
	return 0;
}