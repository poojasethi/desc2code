#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include<cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>

using namespace std;
int vis[1000][1000], a[1000][1000];
int dx[4] = {-1,0,0,1};
int dy[4] = {0,1,-1,0};
int m,n;
char v[1000][1000];

void dfsA(int p, int q, int l)
{
    queue<pair<int,int> > t;
    vis[p][q] = 1;
    t.push(make_pair(-1,-1));
    t.push(make_pair(p,q));
    while(!t.empty()) {
        if(!t.empty()) {
            p = t.front().first;
            q = t.front().second;
            t.pop();
        }
        if(p == -1 && q == -1) {
            t.push(make_pair(-1,-1));
            if(!t.empty()) {
                l++;
                p = t.front().first;
                q = t.front().second;
                t.pop();
            } else break;
        }
        a[p][q] = l;
        for(int i = 0; i < 4; i++) {
            int x = p+dx[i]; int y = q+dy[i];
            if(x>=0 && x<m && y>=0 && y<n)
                if(vis[x][y] == 0 && (v[x][y]-'0') == (!(v[p][q] - '0'))) {
                    vis[x][y] = 1;
                    t.push(make_pair(x,y));
                }
        }
    }
}

int main()
{
	//freopen("input.txt", "rt", stdin);
	//freopen("output.txt", "wt", stdout);
	ios_base::sync_with_stdio(false);
	int t;
	cin >> t;
	while(t--)
    {
        memset(a,0,sizeof(a));
        memset(vis,0,sizeof(vis));

        cin >> m >> n;
        for(int i = 0; i < m; i++)
            for(int j = 0; j < n; j++)
                cin >> v[i][j];

        if(m == 1 && n == 1) cout << "1" << endl;
        else {
            dfsA(0,0,-1);
            if(a[m-1][n-1]) cout << a[m-1][n-1]+1 << endl;
            else cout << "-1" << endl;
        }
    }
}
