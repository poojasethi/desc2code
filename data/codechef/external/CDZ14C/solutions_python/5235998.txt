    #include <bits/stdc++.h>
    using namespace std;
     
    #define S(x) scanf("%d",&x)
    #define S2(x,y) scanf("%d%d",&x,&y)
    #define FOR(i, s, e) for(i = s; i < e; i++)
     
    int n,m;
    long long int cnt[1001][1001];
    char arr[1001][1001];
    int dy[]={0,1,-1,0};
    int dx[]={1,0,0,-1};
    void dfs(){
    queue < pair < int,int> > q;
    q.push(make_pair(1,1));
    while(!q.empty()){
    int x = q.front().first;
    int y = q.front().second;
    q.pop();
    int x1,y1,i;
    for(i = 0; i < 4; i++){
    x1 = x + dx[i];
    y1 = y + dy[i];
    if(x1 > 0 && x1 <= n && y1 > 0 && y1 <= m){
    if(arr[x1][y1] != arr[x][y]){
    if(cnt[x1][y1] > cnt[x][y] + 1){
    cnt[x1][y1] = cnt[x][y] + 1;
    q.push(make_pair(x1,y1));
    }
    }
    }
    }
    }
    return;
    }
    int main()
    {	
    int t,i,j;
    S(t);
    while(t--){
    FOR(i,0,1001)
    FOR(j,0,1001)
    cnt[i][j] = 100000000;
    S2(n,m);
    FOR(i,1,n+1){
    scanf("%s",arr[i]+1);
    }
    cnt[1][1] = 1;
    dfs();
    if(cnt[n][m] == 100000000)
    printf("-1\n");
    else
    printf("%lld\n",cnt[n][m]);
    }
    return 0;
    } 