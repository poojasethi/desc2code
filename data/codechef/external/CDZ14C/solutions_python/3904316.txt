#include<cstdio>
#include<iostream>
#include<cstring>
#include<utility>
#include<climits>
#include<queue>

using namespace std;

char arr[1000][1000];
int visited[1000][1000];
int n,m;

int check(int x,int y)
{
	return ( ( x>=0 && x<= n-1) && ( y>=0 && y<=m-1) );
}

void solve()
{
	int x,y;
	queue< pair<int,int> > q;
	q.push(make_pair(0,0));
	visited[0][0]= 1;
	
	while(!q.empty())
	{
		x= q.front().first;
		y= q.front().second;
		q.pop();
		
		if( check(x+1,y) && arr[x+1][y] !=arr[x][y])
		{
			if(visited[x+1][y] > visited[x][y]+1)
			{
				visited[x+1][y] = visited[x][y]+1;
				q.push(make_pair(x+1,y));
			}
		}
		
		if( check(x,y+1) && arr[x][y+1] !=arr[x][y])
		{
			if(visited[x][y+1] > visited[x][y]+1)
			{
				visited[x][y+1] = visited[x][y]+1;
				q.push(make_pair(x,y+1));
			}
		}
		
		if( check(x-1,y) && arr[x-1][y] !=arr[x][y])
		{
			if(visited[x-1][y] > visited[x][y]+1)
			{
				visited[x-1][y] = visited[x][y]+1;
				q.push(make_pair(x-1,y));
			}
		}
		
		if( check(x,y-1) && arr[x][y-1] !=arr[x][y])
		{
			if(visited[x][y-1] > visited[x][y]+1)
			{
				visited[x][y-1] = visited[x][y]+1;
				q.push(make_pair(x,y-1));
			}
		}
	}
}

int main()
{
	int t,i,j;
	
	scanf("%d",&t);
	
	while(t--)
	{
		scanf("%d%d",&n,&m);
		
		for(i=0;i<n;i++)
			scanf("%s",arr[i]);
		for(i=0;i<n;i++)
			for(j=0;j<m;j++)
				visited[i][j]= INT_MAX;
		solve();
		
		if(visited[n-1][m-1] == INT_MAX)
			printf("-1\n");
		else
			printf("%d\n",visited[n-1][m-1]);
	}
	return 0;
}
