#include<cstdio>
#include<cstring>
#include <iostream>
#include<limits.h>
#include<stdio.h>
#include<sstream>
#include<stdlib.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<map>
#include<set>
#include<list>
#include<stack>
#include<queue>
#include<iomanip>
#include<ctype.h>
#include<complex>
#include<utility>
#include<bitset>
#include<numeric>
#include<cassert>
#include<limits>
using namespace std;
#define ll long long
#define gc getchar_unlocked
#define mod 1000000007

int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n,m;
        cin>>n>>m;
        vector<string>str;
        for(int i=0;i<n;i++)
        {
            string s;
            cin>>s;
            str.push_back(s);
        }
        //for(int i=0;i<n;i++) cout<<str[i]<<" ";
        queue< pair<int,int> >q;
        q.push(make_pair(0,0));
        int dp[n][m];
        for(int i=0;i<n;i++)
            for(int j=0;j<m;j++)
             dp[i][j]=10000001;
        dp[0][0]=1;
        while(!q.empty())
        {
          //cout<<"here1"<<endl;
          int x=q.front().first;
          int y=q.front().second;
          q.pop();
          //int x1,x2;
          for(int i=0;i<4;i++)
          {

              int x1=x+dx[i];
              int y1=y+dy[i];
              if(x1>=0 and x1<n and y1>=0 and y1<m)
              {
                  //cout<<x1<<" "<<y1<<endl;

                  if(str[x1][y1]!=str[x][y])
                  {

                      if(dp[x1][y1]>dp[x][y]+1)
                      {
                        dp[x1][y1]=dp[x][y]+1;
                        
                        q.push(make_pair(x1,y1));
                      }
                  }
              }
          }
        }
        if(dp[n-1][m-1]==10000001)
            cout<<"-1\n";
        else
        cout<<dp[n-1][m-1]<<endl;
    }

}



