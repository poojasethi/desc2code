#include<bits/stdc++.h>
using namespace std;

struct Node
{
	int first;
	int second;
	int dist;
};

int main(void)
{
	ios_base :: sync_with_stdio(false);
	int t;
	cin >> t;
	while(t--)
	{
		int n,m;
		cin >> n >> m;
		int arr[n][m];
		bool visit[n][m];
		for(int i=0;i<n;i++)
		{
			string x;
			cin >> x;
			for(int j=0;j<m;j++)
			{
				visit[i][j] = false;
				arr[i][j] = x[j]-'0';
			}
		}
		queue <Node> qu;
		int dx[] = {0,0,1,-1};
		int dy[] = {1,-1,0,0};
		Node temp1;
		temp1.first = 0;
		temp1.second = 0;
		temp1.dist = 0;
		qu.push(temp1);
		bool flag = false;
		visit[0][0] = true;
		while(!qu.empty())
		{
			Node temp = qu.front();
			qu.pop();
			int a = temp.first;
			int b = temp.second;
			if(a==n-1 && b==m-1)
			{
				flag = true;
				cout << (temp.dist+1) << endl;
				break;
			}
			for(int i=0;i<4;i++)
			{
				if((a+dx[i]>=0) && (a+dx[i]<n) && (b+dy[i]>=0) && (b+dy[i]<m) && visit[a+dx[i]][b+dy[i]]==false && (arr[a][b]!=arr[a+dx[i]][b+dy[i]]))
				{
					Node temp2;
					temp2.first = a+dx[i];
					temp2.second = b+dy[i];
					temp2.dist = temp.dist+1;
					visit[a+dx[i]][b+dy[i]] = true;
					qu.push(temp2);
				}
			}
		}
		if(flag == false)
		{
			cout << -1 << endl;
		}
	}
}
