#include<stdio.h>
#include<iostream>
#include<vector>
#include<queue>
using namespace std;
#define pb push_back
#define sz(x) x.size()
#define GC getchar_unlocked
template<class T>inline T input(T x){char c=GC();x=0;T s=1;while(c<48||c>57){if(c=='-')s=-1;c=GC();}while(c>=48&&c<=57){x=(x<<3)+(x<<1)+c-48;c=GC();}return x*s;}
int main(){
	int T=input(T);
	while(T--){
		int n=input(n),m=input(m);
		vector<int> v(n);
		for(int i=0;i<n;i++)v[i]=input(v[i]);
		vector<vector<int> > graph(n);
		for(int i=0;i<m;i++){
			int a=input(a),b=input(b);
			a--;
			b--;
			graph[a].pb(b);
			graph[b].pb(a);
		}
		vector<bool> visit(n);
		int sum=0;
		for(int i=0;i<n;i++){
			if(!visit[i]){
				int mini=v[i];
				queue<int> Q;
				Q.push(i);
				visit[i]=true;
				while(!Q.empty()){
					int top=Q.front();
					Q.pop();
					for(int i=0;i<sz(graph[top]);i++){
						int y=graph[top][i];
						if(!visit[y]){
							mini=min(mini,v[y]);
							Q.push(y);
							visit[y]=true;
						}
					}
				}
				sum+=mini;
			}
		}
		printf("%d\n",sum);
	}
	return 0;
}

