#include<iostream>
#include<algorithm>
#include<string>
#include<cstdlib>
#include<vector>
#include<cstdio>
#include<map>
#define ll long long
#define pb push_back
#define vi vector<int>
#include<climits>
using namespace std;

int visited[100100]={0},cost[100100]={0},min1=0;
vi vec[100100];

void dfsVisit(int start)
{
    int i;
    if(!visited[start])
    {
        visited[start]=1;
        if((min1)>cost[start])
        {
            min1=cost[start];
            //cout<<min1<<"    ";
        }
        for(i=0;i<vec[start].size();i++)
        {
            dfsVisit(vec[start][i]);
        }
    }
}

int dfs(int n)
{
    int i,j,k,l,ans=0;
    for(i=1;i<=100100;i++)
    {
        visited[i]=0;
    }
    for(i=1;i<=n;i++)
    {
        if(!visited[i])
        {
            min1=1000000;
            dfsVisit(i);
            //cout<<min1<<" ";
            ans+=min1;
        }
    }
    return ans;
}

int main()
{
    ios::sync_with_stdio(false);
    int t;
    cin>>t;
    while(t--)
    {
        int i,j,k,l,m,n;
        cin>>n>>m;
        for(i=0;i<100100;i++)
            vec[i].clear();
        for(i=1;i<=n;i++)
        {
            cin>>cost[i];
        }
        for(i=0;i<m;i++)
        {
            cin>>j>>k;
            vec[j].pb(k);
            vec[k].pb(j);
        }
        l=dfs(n);
        cout<<l<<"\n";
    }
    return 0;
}
