#include<bits/stdc++.h>
using namespace std;
vector< list<int> >graph(100005);
list<int>temp;
list<int>q;
bool visited[100005];
int cost[100005]; 
int bfs(int n)
{
	if(visited[n]==true)
		return 0;
	int v;
	list<int>::iterator itr;
	q.push_back(n);
	visited[n]=true;
	int minimum=10005;
	while(!q.empty())
	{
		v=q.front();
		q.pop_front();
		minimum=min(minimum,cost[v]);
		for(itr=graph[v].begin();itr!=graph[v].end();itr++)
		{//printf("%d",v);
			if(visited[*itr]==false)
			{
				visited[*itr]=true;
				q.push_back(*itr);
			}
		}
	}
	q.clear();
	return minimum;
}
int main()
{
	int t,n,m,sum,x,y,i;
	scanf("%d",&t);
	while(t--)
	{
		graph.clear();
		scanf("%d%d",&n,&m);
		for(i=0;i<=n;i++)
		{
			visited[i]=false;
			graph[i].clear();
		}
		for(i=1;i<=n;i++)
			scanf("%d",&cost[i]);
		for(i=1;i<=m;i++)
		{
			scanf("%d%d",&x,&y);
			if(x!=y)
			{
				graph[x].push_back(y);
				graph[y].push_back(x);
			}
		}
		sum=0;
		for(i=1;i<=n;i++)
			sum+=bfs(i);
		printf("%d\n",sum);
	}
	return 0;
} 