#include<bits/stdc++.h>
#define pb push_back
using namespace std;

vector<int> graph[100006];
int cost[100006];
int visited[1000006];
queue<int> q;

int bfs(int src)
{
	int min,v,i;
	visited[src]=1;
	
	min=cost[src];
	q.push(src);
	while(!q.empty())
	{
		v=q.front();
		for(i=0;i<graph[v].size();i++)
		{
			if(visited[graph[v][i]]==0)
			{
				visited[graph[v][i]]=1;
				q.push(graph[v][i]);
				if(cost[graph[v][i]]<min)
				{
					min=cost[graph[v][i]];
				}
			}
		}
		q.pop();
	
	}
	return min;
	
}
int main()
{
	int i,j,n,t,x,y,m,ans=0;
	scanf("%d",&t);
	while(t--)
	{
		//min=100001;
		while(!q.empty())
		{
			q.pop();
		}
		
		ans=0;
		scanf("%d %d",&n,&m);
		for(i=1;i<=n;i++)
		{
			scanf("%d",&cost[i]);
			
		}
		for(i=1;i<=m;i++)
		{
			scanf("%d %d",&x,&y);
			graph[x].pb(y);
			graph[y].pb(x);
		}
		
		memset(visited,0,sizeof(visited));
		for(i=1;i<=n;i++)
		{
			if(visited[i]==0)
			{
				ans+=bfs(i);
			}
		}
		
		printf("%d\n",ans);
		for(i=1;i<=n;i++)
		{
			graph[i].clear();
			
		}
		
	}
	return 0;
	
	
}
