#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
using namespace std;

typedef vector< int > vi;
typedef vector< vi > vii;

vii graph(100001);
int cost[100001];
bool marked[100001];
int countt, ans = 0;

void dfs (int start)
{
	if (!marked[start])
	{
		countt = min(countt, cost[start]);
		marked[start] = true;
		for (int i = 0; i < graph[start].size(); ++i)
			dfs (graph[start][i]);
	}		
}

int main ()
{
	int t;
	scanf ("%d", &t);
	while (t--)
	{
		ans = 0;
		memset (cost, 0, sizeof cost);
		graph.assign(100001, vi());
		memset (marked, false, sizeof marked);
		int n, f;
		scanf ("%d%d", &n, &f);
		for (int i = 1; i <= n; ++i)
			scanf ("%d", &cost[i]);
		for (int i = 0; i < f; ++i)
		{
			int a, b;
			scanf ("%d%d", &a, &b);
			graph[a].push_back(b);
			graph[b].push_back(a);
		}
		for (int i = 1; i <= n; ++i)
		{
			countt = 10000001;
			if (!marked[i])
				dfs (i), ans += countt;		
		}		 
		printf ("%d\n", ans);
	}
	return 0;
}	