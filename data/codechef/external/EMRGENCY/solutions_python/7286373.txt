#include<cstdio>
#include<algorithm>
#include<iostream>
#include<vector>
#include<string>
#include<cmath>
#include<queue>
#define mod 1000000007
using namespace std;
bool visited[100005];
vector<long long> v[100005];
long long cost[100005];
long long bfs(long long num)
{
    queue<long long> q;
    q.push(num);
    visited[num]=true;
    long long minim=cost[num];
    while(!q.empty())
    {
        long long c=q.front();
        q.pop();
        for(long long j=0;j<v[c].size();++j)
            if(!visited[v[c][j]])
            {
                visited[v[c][j]]=true;
                q.push(v[c][j]);
                minim=min(cost[v[c][j]],minim);
            }
    }
    return minim;
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        long long n,m;
        scanf("%lld %lld",&n,&m);
        for(long long i=1;i<=n;++i)
          {
              scanf("%lld",&cost[i]);
              v[i].clear();
          }
        for(long long i=0;i<m;++i)
        {
            long long a,b;
            scanf("%ld %ld",&a,&b);
            v[a].push_back(b);
            v[b].push_back(a);
        }
        fill(visited,visited+n+1,false);
        long long tot_cost=0;
        for(long long i=1;i<=n;++i)
            if(visited[i]==false)
                tot_cost+=bfs(i);
        printf("%lld\n",tot_cost);
    }
    return 0;
}
