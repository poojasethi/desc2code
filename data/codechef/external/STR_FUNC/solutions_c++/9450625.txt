#include <bits/stdc++.h>
using namespace std;
const int MAXN = 600000 + 10, MOD = 1e9 + 7;

int f[MAXN][21], g[MAXN][21];
int F[MAXN], G[MAXN], n;

inline void add(int &x, int y) {x += y; if (x >= MOD) x -= MOD;}
inline void sub(int &x, int y) {add(x, MOD - y);}
inline int mul(int x, int y) {return 1ll * x * y % MOD;}
inline int sqr(int x) {return 1ll * x * x % MOD;}

int main() {
  scanf("%d", &n);
  for (int s = 0; s < n; ++s) {
    int x; scanf("%d", &x);
    for (int i = 0; i < 20; ++i) {
      g[s][i + 1] = g[s][i];
      if (s >> i & 1) add(g[s][i + 1], g[s ^ 1 << i][i]);
    }
    add(F[s], sqr(x)); add(F[s], sqr(g[s][20])); f[s][0] = sqr(F[s]);
    for (int i = 0; i < 20; ++i) {
      f[s][i + 1] = f[s][i];
      if (s >> i & 1) add(f[s][i + 1], f[s ^ 1 << i][i]);
    }
    G[s] = f[s][20]; g[s][0] = G[s];
    for (int i = 0; i < 20; ++i) {
      g[s][i + 1] = g[s][i];
      if (s >> i & 1) add(g[s][i + 1], g[s ^ 1 << i][i]);
    }
  }
  //for (int i = 0; i < n; ++i) cout << F[i] << " "; cout << endl;
  //for (int i = 0; i < n; ++i) cout << G[i] << " "; cout << endl;
  int ret = 0;
  for (int i = 0; i < n; ++i) add(ret, mul(i, mul(F[i], G[i])));
  cout << ret << endl;
  return 0;
}
