#include <bits/stdc++.h>
#define ll long long int
#define s(a) scanf("%lld",&a)
#define f first
#define sc second
#define pb push_back
#define mp make_pair
#define VALUETYPE long long int
#define inf 10e16
#define EVEN(x) ((x%2)==0)
#define ODD(x) ((x%2)==1)

using namespace std;

vector<ll>v[100001];
ll a[100001];
ll level[100001];
ll parent[100001];
vector<ll>topoSort;
ll baap[100001][20];
ll dp[100001][20];
ll power[101];

ll mod=1000000007;

void dfs(ll ind,ll lst,ll lev)
{
    parent[ind]=lst;
    level[ind]=lev;
    for(int i=0;i<v[ind].size();i++) {
        if(v[ind][i]==lst) continue;
        dfs(v[ind][i],ind,lev+1);
    }
    topoSort.pb(ind);
}

ll jthAncestor(ll ind,ll x)
{
    if(level[ind] < x) return -1;
    ll ans = ind;
    //cout<<ind<<endl;
    for(int i=19;i>=0;i--) {
        ll val = 1<<i;
        if(val <= x) {
            ans = baap[ans][i];
            //cout<<ans<<endl;
            x-=val;
        }
    }
    return ans;
}

int main()
{
    //freopen("inp.txt","r",stdin);
    ll n,i,j,k,l,w,ww,x,y,z,m,d;
    s(n);s(d);
    for(i=1;i<=n;i++) s(a[i]);
    for(i=1;i<n;i++) {
        s(x);s(y);
        v[x].pb(y);
        v[y].pb(x);
    }

    power[0]=1;
    for(i=1;i<19;i++) {
        power[i]=power[i-1]*d;
    }

    dfs(1,-1,0);
    for(i=1;i<=n;i++) {
        baap[i][0]=parent[i];
    }
    for(j=1;j<20;j++) {
        for(i=1;i<=n;i++) {
            w = baap[i][j-1];
            if(w==-1) {baap[i][j]=-1;continue;}
            ww = baap[w][j-1];
            if(ww==-1) {baap[i][j]=-1;continue;}
            baap[i][j]=ww;
        }
    }
    reverse(topoSort.begin(),topoSort.end());

    dp[1][0]=a[1];
    for(i=1;i<topoSort.size();i++) {
        x = topoSort[i];
        dp[x][0]=a[x];
        for(j=1;j<20;j++) {
            w = jthAncestor(x,power[j-1]);
            if(w==-1) {
                dp[x][j]=0;
            }
            else {
                if(dp[w][j-1]!=0) {
                    dp[x][j] = dp[w][j-1] + a[x];
                    if(dp[x][j]>mod) dp[x][j]-=mod;
                }
            }
        }
    }
    ll ans = 0;

    for(i=0;i<20;i++) {
        for(j=1;j<=n;j++) {
            ans = ans + dp[j][i];
            if(ans>=mod) ans-=mod;
        }
    }
    cout<<ans<<endl;
    return 0;
}
