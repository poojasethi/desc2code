#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#define inf 1000000000
using namespace std;

int n,m,kid1,kid2,numberOfStores;
vector<int> stores;
int dist[105][105];
int res = inf;
struct st {
	int x;
	int y;
	int c;
};

struct st s[10050];

void floyd_warshall() {
	for(int i=0;i<105;i++)
		for(int j=0;j<105;j++)
			dist[i][j] = inf;
	for(int i=0;i<n;i++)
		dist[i][i] = 0;
	for(int i=0;i<m;i++) {
		dist[s[i].x][s[i].y] = s[i].c;
		dist[s[i].y][s[i].x] = s[i].c;
	}
	for(int k=0;k<n;k++)
		for(int i=0;i<n;i++)
			for(int j=0;j<n;j++)
				if (dist[i][j] > dist[i][k] + dist[k][j])
	         		dist[i][j] = dist[i][k] + dist[k][j];
}

int calc(vector<int> a, vector<int> b) {
	int res1 = inf, res2 = inf, temp;
	sort(a.begin(), a.end());
	sort(b.begin(), b.end());
	do {
		temp = 0;
		if(a.size()>=1)
			temp = dist[kid1][a[0]];
		for(int i=1;i<a.size();i++) {
			temp += dist[a[i-1]][a[i]];
		}
		res1 = min(res1, temp);
	} while(next_permutation(a.begin(), a.end()));

	do {
		temp = 0;
		if(b.size()>=1)
			temp = dist[kid2][b[0]];
		for(int i=1;i<b.size();i++) {
			temp += dist[b[i-1]][b[i]];
		}
		res2 = min(res2, temp);
	} while(next_permutation(b.begin(), b.end()));
	return res1 + res2;
}

void selectKid() {
	int temp = 1<<numberOfStores;
	//cout<<temp<<endl;
	for(int i=0;i<temp;i++) {
		vector<int> t1;
		vector<int> t2;
		t1.clear();
		t2.clear();
		for(int j=0;j<numberOfStores;j++) {
			if(i & 1<<j) {
				t1.push_back(stores[j]);
			} else {
				t2.push_back(stores[j]);
			}
		}
		res = min(res, calc(t1, t2));
	}
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	stores.clear();
	int t1;
	scanf("%d %d", &n, &m);
	for(int i=0;i<m;i++) {
		scanf("%d %d %d", &s[i].x, &s[i].y, &s[i].c);
	}
	floyd_warshall();
	scanf("%d", &numberOfStores);
	for(int i=0;i<numberOfStores;i++) {
		scanf("%d", &t1);
		stores.push_back(t1);
	}
	scanf("%d %d", &kid1, &kid2);
	selectKid();
	printf("%d\n", res);
	return 0;
}