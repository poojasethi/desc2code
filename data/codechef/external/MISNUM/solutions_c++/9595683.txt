#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
vector<ll>primes;
bool isprime=false;
void sieve()
{
    primes.push_back(2);
    for(ll i=3;i*i<=1000000009;i+=2)
    {
        isprime=true;
        ll temp=sqrt(i)+1;
        for(int j=0;j<primes.size();j++)
        {
            if(primes[j]>temp)
                break;
            if(i%primes[j]==0)
            {
                isprime=false;
                break;
            }
        }
        if(isprime)
            primes.push_back(i);
    }
}
int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    sieve();
    //cout<<primes.size()<<"\n";
    for(int i=0;i<primes.size();i++)
        primes[i]=primes[i]*primes[i];
    int q;cin>>q;
    while(q--)
    {
        ll l,r;cin>>l>>r;
        int v1=lower_bound(primes.begin(),primes.end(),l)-primes.begin();
        if(primes[v1]>r)
        {
            cout<<"0\n";continue;
        }
        int v2=lower_bound(primes.begin(),primes.end(),r)-primes.begin();
        if(primes[v2]!=r)
        v2--;
        cout<<v2-v1+1<<"\n";
    }
    return 0;
}
/*
1
1 1000000000
*/
