def findOccurences(s, ch):
    return [i for i, letter in enumerate(s) if letter == ch]

def fibo(n):
    a=0
    b=1
    fibon=[0,1]
    while(b<n):
        c=a+b
        fibon.append(c)
        a=b
        b=c
    return fibon


n=int(raw_input())
i=0
stri=[]
singlelist=[]
finalsingle=[]
alphabet=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']

#take input
while(i<n):
    stri.append(raw_input())
    i+=1


#find unqiue char in each and append in  singlelist
#so which ever character occurs n times in singlelist are the unique char
i=0
while(i<n):
    w=stri[i]
    s=list(w)
    j=0
    while(j<len(s)):
        noofoccurence=findOccurences(s,s[j])
        if(len(noofoccurence)==1):
            singlelist.append(s[j])
        j+=1
    i+=1

#print list of unique char
#print(singlelist)



#find the finallist which contains only unique char
i=0
while(i<len(singlelist)):
    noofoccurence=findOccurences(singlelist,singlelist[i])
    if(len(noofoccurence)==n):
        if(singlelist[i] in finalsingle):
            j=1
        else:
            finalsingle.append(singlelist[i])
    i+=1

#print(finalsingle)


value=0
i=0
#finding the value(unique char ke position ka sum)
if(len(finalsingle)==0):
    value=7
else:
    while(i<len(finalsingle)):
        value+=(alphabet.index(finalsingle[i])+1)
        i+=1

value=value%26
#print(value)


#input the string
s=raw_input()
a=""
fibon=fibo(len(s))
i=0

#perform the string manipulation
while(i<len(s)):
    if(not s[i].isalpha()):
        c=s[i]
    else:
        z=alphabet.index(s[i])
        if(i in fibon):
            c=alphabet[z-value]
        else:
            z=z+value
            if(z>25):
                z=z-26
            c=alphabet[z]
    a=a+c
    i+=1

#displaying the result
print(a)
