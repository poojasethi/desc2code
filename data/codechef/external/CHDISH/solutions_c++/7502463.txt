#include<bits/stdc++.h>

using namespace std;

// The codes which I use are taken from the book Competitive Programming 3 written by Steven Halim
// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

bool cmp( ii lhs , ii rhs )
{
    return( ( double( lhs.first ) / double( lhs.second ) )  - ( double( rhs.first ) / double( rhs.second ) )  > 1e-9 );
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int t;s(t);
    while( t-- )
    {
        int n , w;s(n);
        vector < ii > vals;
        scanf("%d",&w);
        REP( i , 0  , n - 1 )
        {
            ii tmp;
            scanf("%d%d",&tmp.second ,&tmp.first );
            vals.push_back( tmp );
        }
        sort( vals.begin() , vals.end() , cmp );
        double ans = 0;
        int i = 0;
        while( w > 0 && i < n )
        {
            int tmp = min( w , vals[i].second );
            ans += double( tmp ) * ( double( vals[i].first  ) / double ( vals[i].second ) );
            w -= tmp;
            i++;
        }
        printf("%0.6lf\n",ans);
    }
    return 0;
}
