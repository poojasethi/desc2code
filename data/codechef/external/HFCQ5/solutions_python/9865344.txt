#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int > pii;
typedef pair<int,pii > piii;
//input
#define sc1(x) scanf("%d",&x);
#define sc2(x,y) scanf("%d%d",&x,&y);
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z);

/*
#define sc1(x) scanf("%lld",&x);
#define sc2(x,y) scanf("%lld%lld",&x,&y);
#define sc3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z);
*/

#define pb push_back
#define mp make_pair
#define ini(x,val) memset(x,val,sizeof(x));

#define fs first
#define sc second

//some constants
#define MOD 1000000007
#define inf 99999999
#define linf 99999999999999999ll	//long long inf
#define PI 3.1415926535897932384626
const double eps=0.000000000000001 ;

#define gcd __gcd
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()

#define debug(x) cout<<#x<<" :: "<<x<<"\n";
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n";
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n";

#define LIM 100005
int a1[505][505],a2[505][505],n;
bool vis[100000];
std::vector<int> g1[100000],g2[100000],yo1,yo2;
std::vector<piii> v1,v2;
const int cent = 2;

void reset()
{
	v1.clear();
	v2.clear();
	for(int i=0;i<=n;++i)
	{
		for(int j=0;j<=n;++j)
		{
			a1[i][j]=a2[i][j]=0;
		}
	}
	for(int i=0;i<=6*n;++i)
	{
		g1[i].clear();
		g2[i].clear();
	}

	yo1.clear();
	yo2.clear();
}

void inp(int x[505][505],vector<piii>&v)
{
	int i;
	pii pos ;
	for(i=0;i<n;++i)
	{
		sc1(x[0][i]);
		if(x[0][i]!=-1)
		v.pb(mp(x[0][i],mp(0,i)));
		
	}
	
	for(i=1;i<n;++i)
	{
		sc1(x[i][n-1]);
		if(x[i][n-1]!=-1)
			v.pb(mp(x[i][n-1],mp(i,n-1)));
		
	}
	
	for(i=n-2;i>=0;--i)
	{
		sc1(x[n-1][i]);
		if(x[n-1][i]!=-1)
			v.pb(mp(x[n-1][i],mp(n-1,i)));
		
	}

	for(i=n-2;i>0;--i)
	{
		sc1(x[i][0]);
		if(x[i][0]!=-1)
			v.pb(mp(x[i][0],mp(i,0)));
		
	}
	

}
void compress(int x[505][505],vector<piii>&v)
{
	int p=2;
	for(int i=0;i<v.size();++i)
	{
		x[v[i].sc.fs][v[i].sc.sc] = p++;
	}
}

void mk_graph(int x[505][505],vector<int>g[])
{
	int i;
	for(i=0;i<n;++i)
	{
		int y = x[0][i];
		if(i>0)
		{
			g[y].pb(x[n-1][i-1]);
			g[x[n-1][i-1]].pb(y);
		}
		if(i+1<n)
		{
			g[y].pb(x[n-1][i+1]);
			g[x[n-1][i+1]].pb(y);
		}
	}
	
	for(i=0;i<n;++i)
	{
		int y = x[i][0];
		if(i>0)
		{
			g[y].pb(x[i-1][n-1]);
			g[x[i-1][n-1]].pb(y);
		}
		if(i+1<n)
		{
			g[y].pb(x[i+1][n-1]);
			g[x[i+1][n-1]].pb(y);	
		}
	}
}

void DFS1(int st)
{
	vis[st]=1;
	yo1.pb(st);
//	printf("%d ",st);
	for(int i=0;i<g1[st].size();++i)
	{
		if(!vis[g1[st][i]])
			DFS1(g1[st][i]);
	}
}

void DFS2(int st)
{
	vis[st]=1;
	yo2.pb(st);
	for(int i=0;i<g2[st].size();++i)
	{
		if(!vis[g2[st][i]])
			DFS2(g2[st][i]);
	}
}

int main(int argc, char const *argv[])
{
	int t;
	sc1(t);
	while(t--)
	{

		int i,j;
		sc1(n);
		reset();
		inp(a1,v1);
	
		inp(a2,v2);
		for(i=0;i<n;++i)
		{
			for(j=0;j<n;++j)
			{
				if(a1[i][j]==-1)
				{
					a1[i][j]=1;
				}
				if(a2[i][j]==-1)
				{
					a2[i][j]=1;
				}
			}
		}
	
		sort(all(v1));
		sort(all(v2));
		compress(a1,v1);
		compress(a2,v2);
		
/*		for(i=0;i<n;++i)
		{
			for(j=0;j<n;++j)
			{
				printf("%d ",a1[i][j]);
			}

			printf("\n");
		}*/
		
		mk_graph(a1,g1);
		mk_graph(a2,g2);
/*
		for(i=1;i<=n+1;++i)
		{
			printf("%d :: ",i);
			for(j=0;j<g1[i].size();++j)
			{
				printf("%d ",g1[i][j]);
			}
			printf("\n");
		}*/
			
		ini(vis,0);
		DFS1(1);
		//printf("\n---------------\n");
		ini(vis,0);
		DFS2(1);

		int hello1,hello2;

		

		yo1.erase(find(all(yo1),1));
		yo2.erase(find(all(yo2),1));
/*
		for(i=0;i<yo1.size();++i)
			printf("%d ",yo1[i]);
		printf("\n---------------\n");

		for(i=0;i<yo2.size();++i)
			printf("%d ",yo2[i]);
		printf("\n---------------\n");*/

		for(i=0;i<yo1.size();++i)
		{
			if(yo1[i] == yo2[0])
				break;
		}
		int sz = yo1.size(),dir;
		if(yo1[(i+1)%sz] ==yo2[1])
		{
			dir = 1;
		}
		else
			dir = -1;
		//debug(i);
		for(j=1;j<yo2.size();++j)
		{
			i+=dir;
			if(yo2[j]!=yo1[(i+sz)%sz])
			{
				break;
			}
		}
		if(j<yo2.size())
		{
			printf("NO\n");
		}
		else printf("YES\n");


	}
	
	return 0;
}