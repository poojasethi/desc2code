import java.io.*;
import java.util.*;

class test3
{   static int arrio[],arrfo[],arrf[],arri[],n1,n2,n,m1,m,m2,mem1,mem2;

     static void posinext()
      {
          if(m==0){ n1=n ; n2=3*n-4; }
           else if(m==n-1){ n1=4*n-5 ; n2=2*n-1;  }
           else if(m==2*n-2) {n1=n-2; n2=3*n-2; }
           else if(m==3*n-3) { n1=1 ; n2=2*n-3; }
           
           else if (m>0 && m<n-1) { n1=3*n-3-m+1 ; n2=3*n-3-m-1; }
           else if (m>n-1 && m<2*n-2) {n1=5*n-m-4 ; n2=5*n-m-6;   } 
           else if (m>2*n-2 && m<3*n-3) { n1=3*n-m-2; n2=3*n-m-4;}
           else if (m>3*n-3 && m<4*n-4) { n1=5*n-m-4 ; n2=5*n-m-6; }
            
           if(n1==4*n-4) n1=0; 
           else if(n2==4*n-4) n2=0; 
        }   
       
    
        
    static  boolean ccheck()
      { int flag=0,k=0,i=0;
          if(arrf[0]==-1) i=1; else i=0;
          for(int j=1;j<=m1;j++)
          if(arrf[i]==arri[j]) { k=j; break;}
          i++; if((k+1)>m1) k=1;else k++;     
          for(;i<=m1;i++)
          {  if(arrf[i]==-1) continue;
              if(arrf[i]==arri[k]) { if((k+1)>m1) k=1;else k++; }
              else return false;
            }
            return true;
          
       
    }    
    
   static boolean lcheck()
    {
        for(int i=m1+1;i<4*n-4; i++)
         {  if(arrf[i]!=arri[i]) return false;  }
         return true;
        }
        
        
      static  void ncheck(int sec,int sec2)
        {  int[] temp=new int[4*n-4];
            arri=new int[4*n-4];
            arrf=new int[4*n-4];
            int i=0; temp[m2]=1;temp[sec]=1; 
            arri[0]=-1; arrf[0]=arrfo[m2];
            arri[1]=arrio[sec] ;
            arrf[1]=arrfo[sec];
            int pre=m2; m=sec; int ne;
            for(i=2;m!=sec2;i++)
            {  posinext();
                ne=(n1==pre)?n2:n1;  
               
                arri[i]=arrio[ne];
                arrf[i]=arrfo[ne];
                temp[ne]=1;
                
                pre=m; m=ne; 
                
                }
                m1=i-1;
               
                for(int k=0 ,l=m1+1;k<(4*n-4); k++)
                 {
                     if(temp[k]==0)
                      {
                         
                          arri[l]=arrio[k];
                          arrf[l]=arrfo[k];
                          l++;
                        }
                    }
                }
         static  boolean fcheck()
           {
               m=m2;
               posinext();
               mem1=n1;
               mem2=n2;
               ncheck(mem1,mem2);
               if(ccheck()==true) { if(lcheck()==true) return true; }
               ncheck(mem2,mem1);
               if(ccheck()==true)  { if(lcheck()==true) return true;
                                      else return false;  }
        
                 return false;                   }
                 
               
         public static void main(String args[])
         {  Scanner in=new Scanner(System.in);  
             int t=in.nextInt(),i1; boolean res[]=new boolean[t];
             for(int i=0;i<t;i++)
             {
                 n=in.nextInt();
                 arrio=new int[4*n-4];
                 arrfo=new int[4*n-4];
                   for(int j=0;j<(4*n-4);j++)
                   { i1=in.nextInt(); 
                       if(i1==-1) m2=j;
                       arrio[j]=i1;
                       
                    }
                    for(int j=0;j<(4*n-4);j++)
                   { 
                       arrfo[j]=in.nextInt();
                    }
                    
                    res[i]=fcheck();
            }
            
            for(int i=0;i<t;i++)
            { if(res[i]==true)
                System.out.println("YES");
                else
                System.out.println("NO");
            }
                 
                     
}
}

  