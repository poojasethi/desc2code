#include <stdio.h>
#include <string.h>
#include <vector>
#define lli long long int
#define pb push_back

using namespace std;

vector <int> g[105];
lli mat[105][105];
int used[105];
int mt[105];

int kuhn(int node) {
    if (used[node]) {
        return 0;
    }
    used[node] = 1;

    for (int i = 0; i < (int)g[node].size(); i++) {
        int viz = g[node][i];

        if (mt[viz] == -1 || kuhn(mt[viz])) {
            mt[viz] = node;
            return 1;
        }
    }
    return 0;
}

int main(void) {
    int n, m, k;
    lli l, r;
    lli mid;
    lli best;
    int match;

    scanf(" %d %d %d", &n, &m, &k);

    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf(" %lld", &mat[i][j]);
        }
    }

    l = 1;
    r = (lli)1e12;
    best = r;
    while(l <= r) {
        for (int i = 0; i < n; i++) {
            g[i].clear();
        }

        mid = (l + r) / 2;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < m; j++) {
                if (mat[i][j] <= mid) {
                    g[i].pb(j);
                }
            }
        }

        memset(mt, -1, sizeof(mt));
        match = 0;
        for (int i = 0; i < n; i++) {
            memset(used, 0, sizeof(used));
            if (kuhn(i)) {
                match++;
            }
        }

        if (match >= k) {
            best = mid;
            r = mid - 1;
        } else {
            l = mid + 1;
        }
    }
    printf("%lld\n", best);

    return 0;
}
