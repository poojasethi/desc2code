#include <bits/stdc++.h>

typedef long long ll;
using namespace std;
#define trv(y,x)    for(typeof(x.begin())y=x.begin();y!=x.end();y++)

ll a[105][105];
vector<int> Adj[210];
int n,m;
int match[210],dist[210];
#define NIL 0
#define INF 1000000000

bool bfs()
{
    int i,u,v;
    queue<int> Q;
    for(i=1;i<=n;i++)
    {
        if(match[i]==NIL)
        {
            dist[i]=0;
            Q.push(i);
        }
        else dist[i]=INF;
    }
    dist[NIL]=INF;
    while(!Q.empty())
    {
        u=Q.front();
        Q.pop();
        if(u!=NIL)
        {
            trv(it,Adj[u])
            {
                v=(*it);
                if(dist[match[v]]==INF)
                {
                    dist[match[v]]=dist[u]+1;
                    Q.push(match[v]);
                }
            }
        }
    }
    return (dist[NIL]!=INF);
}


bool dfs(int u)
{
    int v;
    if(u!=NIL)
    {
        trv(it,Adj[u])
        {
            v=(*it);
            if(dist[match[v]]==dist[u]+1)
            {
                if(dfs(match[v]))
                {
                    match[v]=u;
                    match[u]=v;
                    return true;
                }
            }
        }
        dist[u]=INF;
        return false;
    }
    return true;
}


int BPM(ll t)
{
    int matching=0,i,j;
    fill(match,match+n+m+1,NIL);
    for(i=0;i<=(n+m);i++) Adj[i].clear();
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
            if(a[i][j]<=t)
            {
                Adj[i+1].push_back(n+j+1);
                Adj[n+j+1].push_back(i+1);
                //cout<<i+1<<" "<<j+1<<"\n";
            }
    while(bfs())
    {
        for(i=1;i<=n;i++)
        {
            if(match[i]==NIL && dfs(i))
                matching++;
        }
    }
    return matching;
}

int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int k,i,j;
    ll l=0,r=0,mid;
    cin>>n>>m>>k;
    for(i=0;i<n;i++)
        for(j=0;j<m;j++)
        {
            cin>>a[i][j];
            if(a[i][j]>r) r=a[i][j];
        }
    //cout<<BPM(1);
    while(l<r)
    {
        mid=(l+r)/2LL;
        if(BPM(mid)>=k) r=mid;
        else l=mid+1;
    }
    cout<<r<<'\n';
    return 0;
}