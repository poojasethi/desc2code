import java.io.BufferedReader;
import java.io.InputStreamReader;
class Main
{
	public static void main(String args[])throws Exception
	{
		BufferedReader r = new BufferedReader( new InputStreamReader(System.in));

		int t = Integer.parseInt(r.readLine());
		int a[][]= new int[7][7];
		String ip[] =new String[6]; 
		int a1[] = {2,7,2,2};
		int a2[] = {2,2,7,2};
		int a3[] = {4,14,4};
		boolean flag;
		
		int k=0;

		while(t!=0)
		{

			
			for(int i=0;i<=5;i++)
			{
			ip= r.readLine().split(" ");

			for(int j=0;j<=5;j++)
			a[i][j]=Integer.parseInt(ip[j]);
			}

			for(int i=0;i<=5;i++)
			{
				a[i][6]=a[i][5]*(int)Math.pow(2,0)+a[i][4]*(int)Math.pow(2,1)+a[i][3]*(int)Math.pow(2,2)+a[i][2]*(int)Math.pow(2,3)+a[i][1]*(int)Math.pow(2,4)+a[i][0]*(int)Math.pow(2,5);
				//System.out.println(a[i][6]);
			}

			for(int i=0;i<=5;i++)
			{
				a[6][i]=a[5][i]*(int)Math.pow(2,0)+a[4][i]*(int)Math.pow(2,1)+a[3][i]*(int)Math.pow(2,2)+a[2][i]*(int)Math.pow(2,3)+a[1][i]*(int)Math.pow(2,4)+a[0][i]*(int)Math.pow(2,5);
				//System.out.println(a[6][i]);
			}

			flag = false;
			
			for(int i=0;i<=2;i++)
			{

			if(i<=2&&a[i][6]!=0&&a[i][6]!=1)
			{
				 k=a[i][6]/2;
			//System.out.println("up"+k);
			if(a[i][6]/k==a1[0]&&a[i+1][6]/k==a1[1]&&a[i+2][6]/k==a1[2]&&a[i+3][6]/k==a1[3])
				{
					//System.out.println("A");
					flag=true;
					break;
		
				}
			if(a[i][6]/k==a2[0]&&a[i+1][6]/k==a2[1]&&a[i+2][6]/k==a2[2]&&a[i+3][6]/k==a2[3])
				{
					//System.out.println("B");
					flag=true;
					break;	
				}
			}
			if(i<=2&&a[6][i]!=0&&a[6][i]!=1)
			{
				k=a[6][i]/2;
			//System.out.println("down"+k);
			if(a[6][i]/k==a1[0]&&a[6][i+1]/k==a1[1]&&a[6][i+2]/k==a1[2]&&a[6][i+3]/k==a1[3])
				{
					//System.out.println("C");
					flag=true;
					break;
				}
			if(a[6][i]/k==a2[0]&&a[6][i+1]/k==a2[1]&&a[6][i+2]/k==a2[2]&&a[6][i+3]/k==a2[3])
				{
					//System.out.println("D");
					flag=true;
					break;	
				}
			}
			
			}
			
			if(flag)
				System.out.println("correct");
			else 
				System.out.println("incorrect");
			t--;
		}
	}
}