/*
#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

vector<int> pf[1000001];
int sieve[1000001],dp[1000001];
int i,j,y,x;

void sie(int y)
{
    for(i=2;i<=y;i++)
        sieve[i]=1;
    for(i=2;i*i<=y;i++)
    {
        if(sieve[i]==1)
        {
            pf[i].push_back(i);
            for(j=2*i;j<=y;j=j+1)
            {
                sieve[j]=0;
                pf[j].push_back(i);
            }
        }
    }
    for(i=2;i<=y;i++)
    {
        if(sieve[i]==1)
            pf[i].push_back(i);
        else{
            x=i;
            for(j=0;j<pf[i].size();j++)
            {
                while(x%pf[i][j]==0)
                    x=x/pf[i][j];
            }
            if(x!=1)
                pf[i].push_back(x);
        }
    }
}
int main()
{
    std::ios::sync_with_stdio(false);
    int n;
    cin>>n;
    sie(n);
    dp[0]=0;
    for(i=2;i<=n;i++)
    {
        dp[i]=1000001;
        for(j=0;j<pf[i].size();j++)
            dp[i]=min(dp[i],dp[i-pf[i][j]]+1);
    }
    cout<<dp[n]<<"\n";
    return 0;
}
*/
#include<iostream>
#include<algorithm>
#include<math.h>
#include<stdio.h>
#include<string.h>
#include<vector>
#include<map>
#include<cstring>
using namespace std;
#define MOD 1000000007
int dp[1000001], sieve[1000001], i, j,y,x;
vector<int> pfactor[1000001];
void sie(int y){
	for (i = 2; i <= y; i++)
		sieve[i] = 1;
	for (i = 2; i*i <= y; i++)
		if (sieve[i] == 1)
		{
		   pfactor[i].push_back(i);
		     for (j = 2 * i; j <= y; j = j + i)
			   sieve[j] = 0, pfactor[j].push_back(i);
		}
	for (i = 2; i <= y; i++){
		if (sieve[i] == 1)
			pfactor[i].push_back(i);
		else {
			x = i;
			for (j = 0; j < pfactor[i].size(); j++)
				while (x%pfactor[i][j] == 0)
					x = x / pfactor[i][j];
			if (x != 1)
				pfactor[i].push_back(x);
		}
	}
}
int main() {
	std::ios::sync_with_stdio(false);

	int n;
	cin >> n;
	sie(n);
	dp[0] = 0;
	for (i = 2; i <= n; i++){
		dp[i] = 100000000;
		for (j = 0; j < pfactor[i].size(); j++)
			dp[i] = min(dp[i], dp[i - pfactor[i][j]] + 1);

	}
	cout << dp[n]<<"\n";
	return 0;
}
