#include <bits/stdc++.h>

using namespace std;

int n;

vector< vector<int> > factors(1000005);

bool isprime[1000005];

void sieve()
{
	memset(isprime,1,sizeof(isprime));
	isprime[0]=isprime[1]=0;
	factors[1].push_back(1);
	for(int i=2;i<n+5;i+=2) factors[i].push_back(2);
	for(int i=3;i<n+5;i+=2)
		if(isprime[i])
			for(int j=i;j<n+5;j+=i)
			{
				isprime[j]=0;
				factors[j].push_back(i);
			}
}

long long dp[1000005];

int main()
{
	ios::sync_with_stdio(false);
	cin>>n;
	sieve();
	dp[0]=0;dp[1]=1;
	for(int i=2;i<=n;i++)
	{
		dp[i]=n+5;
		for(int j=0;j<factors[i].size();j++) {
			dp[i]=min(dp[i],1+dp[i-factors[i][j]]);
		}
	}
	cout<<dp[n]<<endl;
	return 0;
	
}
