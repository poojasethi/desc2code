#include <cstdio>
#include <cmath>
#define MAX 1000001
#define get getchar_unlocked

inline long long int inp() {
	long long int n=0,s=1;
	char p = get();
	if (p == '-')
	    s = -1;
	while ((p < '0' || p > '9') && p != EOF && p != '-')
	    p = get();
	if (p == '-')
	    s = -1, p = get();
	while (p >= '0' && p <= '9') {
	    n = (n<< 3) + (n<< 1) + (p - '0');
	    p = get();
	}
	return n*s;
}

bool p[MAX];

int main() {
    int i, j;
    // sieve
    p[0] = p[1] = 1;
    for (i = 4; i < MAX; i += 2) {
        p[i] = 1;
    }
    for (i = 3; i < 1001; i += 2) {
        if (!p[i]) {
            for (j = i * i; j < MAX; j += 2 * i) {
                p[j] = 1;
            }
        }
    }

    long long T, P, temp;
    T = inp();
    while (T--) {
        P = inp();
        temp = sqrt(P);
        if (!p[temp] && temp * temp == P) {
            printf("YES\n");
        }
        else {
            printf("NO\n");
        }
    }
    return 0;
}