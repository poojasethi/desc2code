#include<iostream>
#include<cmath>
#include<cstdio>
using namespace std;
unsigned long long int limit = 1000000;
int root = (int)ceil(sqrt(limit));
bool sieve[1000000];
void prime_generator()
{
    for (int z = 0; z < limit; z++) sieve[z] = false;
    for (int x = 1; x <= root; x++)
    {
        for (int y = 1; y <= root; y++)
        {
            int n = (4*x*x)+(y*y);
            if (n <= limit && (n % 12 == 1 || n % 12 == 5)) sieve[n] ^= true;
            n = (3*x*x)+(y*y);
            if (n <= limit && n % 12 == 7) sieve[n] ^= true;
            n = (3*x*x)-(y*y);
            if (x > y && n <= limit && n % 12 == 11) sieve[n] ^= true;
        }
    }
    for (int r = 5; r <= root; r++)
        if (sieve[r])
            for (int i = r*r; i < limit; i += r*r)
                sieve[i] = false;
}
int main()
{
    prime_generator();
    sieve[2]=true;
    sieve[3]=true;
    long int t;
    long long int n,m;
    cin>>t;
    while(t--)
    {
        scanf("%lld",&n);
        m=ceil(sqrt(n));
        if(sieve[m]==true)
        {
            if(m*m == n)
                printf("YES\n");
            else
                printf("NO\n");
        }
        else
            printf("NO\n");
    }
}
