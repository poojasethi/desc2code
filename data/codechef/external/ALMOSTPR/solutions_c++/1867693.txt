#include <iostream>
#include <algorithm>
#include <cstring>
#include <vector>
#include <cmath>
#include <stdio.h>
#define get getchar_unlocked
using namespace std;
 
bool p[1000010];

inline long long int inp()
{
    long long int n=0,s=1;
    char p=get();
    if(p=='-')  s=-1;
    while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
    if(p=='-') s=-1,p=get();
    while(p>='0'&&p<='9')
    {
        n = (n<< 3) + (n<< 1) + (p - '0');
        p=get();
    }
    return n*s;
}

void sieve()
{
  memset(p,true,1000010);
  
  p[0]=p[1]=false;
  for(int i=2;i*i<=1000010;i++)
   {
     if(p[i])
     { 
       int temp=i*i;
       for(int j=temp;j<1000010;j+=i)
         p[j]=false;
     
        }
   }
}  
int main()
{
    
    
   int test;
   test=inp();
   sieve();
      while(test--)
      
         {
             double x;
             x=inp();
             double h=sqrt(x);
           
             if(h==(int)h&& p[(int)h])
             cout<<"YES"<<"\n";
             
             else
             cout<<"NO"<<"\n";
             
             
             
             }   
    
 }