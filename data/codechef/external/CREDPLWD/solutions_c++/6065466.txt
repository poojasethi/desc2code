#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>
#define fi first
#define se second
using namespace std;
const int N = 111;

int n, m, a[N][N], p[N][N];

void input(){
    cin >> n >> m;
    for (int i = 0; i < n; ++i)
        for (int j = 0; j < m; ++j)
            cin >> a[i][j];
}

void solve(){
    for (int i = 0; i < n; ++i)
        for (int j = 1; j < m; ++j)
            if (a[i][j] == a[i][j - 1]) p[i][j] = p[i][j - 1];
            else p[i][j] = j;
    int ans = 0;
    for (int i = 0; i < m; ++i)
        for (int j = i; j < m; ++j){
            int current = -1;
            if (p[0][j] <= i) ans = max(ans, j - i + 1), current = 0;
            for (int t = 1; t < n; ++t){
                if (a[t][i] != a[t - 1][i] || a[t][j] != a[t - 1][j]) current = -1;
                if (p[t][j] <= i){
                    if (current == -1) current = t;
                    ans = max(ans, (j - i + 1) * (t - current + 1));
                }
            }
        }
    cout << ans << endl;
}

int main(){
    #ifndef ONLINE_JUDGE
        freopen("input.txt", "r", stdin);
        freopen("output.txt", "w", stdout);
    #endif // ONLINE_JUDGE
    int nTest = 1;
//    cin >> nTest;
    while (nTest--){
        input();
        solve();
    }
    return 0;
}
