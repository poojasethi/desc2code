#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

#define sz(x) int(x.size())
#define LL long long

const int N = 109;
int a[N][N], n, m;
int u[N][N], d[N][N], l[N][N], r[N][N];
int main()
{
//    freopen("in.txt", "r", stdin);
    while(~scanf("%d%d", &n, &m))
    {
        memset(a, 0, sizeof(a));
        memset(u, 0, sizeof(a));
        memset(d, 0, sizeof(a));
        memset(l, 0, sizeof(a));
        memset(r, 0, sizeof(a));
        for(int i = 1; i <= n; ++ i)
        for(int j = 1; j <= m; ++ j) scanf("%d", &a[i][j]);

        for(int i = 1; i <= n; ++ i)
        {
            for(int j = 1; j <= m; ++ j)
                if(a[i][j] == a[i][j - 1]) l[i][j] = l[i][j - 1] + 1;
                else l[i][j] = 1;

            for(int j = m; j >= 1; -- j)
                if(a[i][j] == a[i][j + 1]) r[i][j] = r[i][j + 1] + 1;
                else r[i][j] = 1;
        }

        for(int j = 1; j <= m; ++ j)
        {
            for(int i = 1; i <= n; ++ i)
                if(a[i][j] == a[i - 1][j]) u[i][j] = u[i - 1][j] + 1;
                else u[i][j] = 1;

            for(int i = n; i >= 1; -- i)
                if(a[i][j] == a[i + 1][j]) d[i][j] = d[i + 1][j] + 1;
                else d[i][j] = 1;
        }
        int o = 0;
        for(int i = 1; i <= n; ++ i)
        {
            for(int j = 1; j <= m; ++ j)
            {
                for(int i1 = i; i1 <= n; ++ i1)
                {
                    for(int j1 = j; j1 <= m; ++ j1)
                    {
                        int di = i1 - i + 1, dj = j1 - j + 1;
                        if(r[i][j] >= dj &&
                           d[i][j] >= di &&

                           l[i1][j1] >= dj &&
                           u[i1][j1] >= di
                           )
                           o = max(o, di * dj);
                    }
                }
            }
        }
        printf("%d\n", o);
    }

    return 0;
}

