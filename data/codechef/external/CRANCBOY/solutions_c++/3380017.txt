#include <bits/stdc++.h>
using namespace std;
#define FL(a) memset(a, 0, sizeof a);
#define pi(a) cout <<  a << endl;
#define si(n) scanf("%d",&n)
#define pis(n) printf("%d ",n);
#define FREP(b) for(int i=0;i<b;i++)
#define REP(a,b,c) for(int a=b;a<c;a++)
typedef pair<int,int> ii;
typedef long long LL;
/*
   struct data{
   };
   bool operator < (const data &a1, const data &a2){
   }
 */
void Print(int num){
    cout << bitset<5> (num) << endl;
}
int bintogray(int num){
    return (num >> 1 ) ^ num;
}
int A[21][21];
LL MOD = 1000000007;
LL mod(LL a){
    return (a + MOD)%MOD;
}
LL rowsum[21];
int main()
{
    int N;
    si(N);
    FREP(N){
        REP(j,0,N){
            si(A[i][j]);
        }
    }
    int prev = 0;
    LL ans = 0;
    for(int i = 1; i < (1 << N); i++){
        int mask = bintogray(i);
        int len = __builtin_popcount(mask);
        len = len%2 ? -1 : 1;
        for(int j = 0; j < N; j++){
            if((mask & (1 << j)) != (prev & (1 << j))){
                LL temp = 1;
                int factor = (mask & (1 << j)) ? 1 : -1;
                for(int row = 0; row < N; row++){
                    rowsum[row] = mod(rowsum[row] + factor*A[row][j]);
                    temp = mod(temp*rowsum[row]);
                }
                ans = mod(ans + temp*len);
                break;
            }
        } prev = mask;
    }
    if(N%2) ans = -ans;
    cout << mod(ans) << endl;
    return 0;
}
