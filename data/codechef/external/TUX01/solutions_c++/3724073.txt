#include<iostream>
#include<cstdio>
#include<vector>
using namespace std;
vector<int> v;
struct data {
    int info,cnt;
    data(int a,int b) {info=a;cnt=b;}
    data() {info=0;cnt=0;}
};
vector<data> seg;
#define INF 1000000009
void build(int l,int r,int ind) {
    if(l==r) {
        if(v[l]%2!=0) { seg[ind].info=INF; seg[ind].cnt=0; }
        else { seg[ind].info=v[l]; seg[ind].cnt=1; }
        return ;
    }
    int lc=2*ind+1,rc=2*ind+2;
    int mid=(l+r)/2;
    build(l,mid,lc);
    build(mid+1,r,rc);
    if(seg[lc].info==seg[rc].info) {
        seg[ind].info=seg[lc].info;
        seg[ind].cnt=seg[lc].cnt+seg[rc].cnt;
    } else if(seg[lc].info<seg[rc].info && seg[lc].info!=-1) {
        seg[ind].info=seg[lc].info;
        seg[ind].cnt=seg[lc].cnt;
    } else {
        //cout<<"ha ha";
        seg[ind].info=seg[rc].info;
        seg[ind].cnt=seg[rc].cnt;
    }
}
data query(int l,int r,int sl,int sr,int ind) {
    //cout<<"l="<<l<<"r="<<r<<" "<<ind<<endl;
    if(l>=sl && r<=sr) {
        return seg[ind];
    }
    if(l>sr || r<sl) {
        return data(INF,0);
    }
    int mid=(l+r)/2;
    data d1=query(l,mid,sl,sr,2*ind+1);
    data d2=query(mid+1,r,sl,sr,2*ind+2);
    //cout<<d1.info<<" "<<d2.info<<" "<<ind<<"\n";
    if(d1.info==d2.info) return data(d1.info,d1.cnt+d2.cnt);
    if(d1.info<d2.info) return d1;
    else return d2;
}
void update(int l,int r,int ind,int val,int ui) {
    if(r<ui || l>ui) return;
    if(l==r) {
        if(val%2==0) {
            seg[ind].info=val;
            seg[ind].cnt=1;
        } else {
            seg[ind].info=INF;
            seg[ind].cnt=0;
        }
        return;
    }
    int lc=2*ind+1,rc=2*ind+2;
    int mid=(l+r)/2;
    update(l,mid,2*ind+1,val,ui);
    update(mid+1,r,2*ind+2,val,ui);
    if(seg[lc].info==seg[rc].info) {
        seg[ind].info=seg[lc].info;
        seg[ind].cnt=seg[lc].cnt+seg[rc].cnt;
    } else if(seg[lc].info<seg[rc].info && seg[lc].info!=-1) {
        seg[ind].info=seg[lc].info;
        seg[ind].cnt=seg[lc].cnt;
    } else {
        //cout<<"ha ha";
        seg[ind].info=seg[rc].info;
        seg[ind].cnt=seg[rc].cnt;
    }
}
int main() {
    int n,a,q,m,x,l,r,b;
    cin>>n>>q;
    v.resize(n);
    seg.resize(4*n);
    for(int i=0;i<n;i++) {
        scanf("%d",&a); v[i]=a;
    }
    build(0,n-1,0);
    while(q--) {
        //cin>>l>>a>>b;
        scanf("%d%d%d",&l,&a,&b);
        a--;
        if(l==1) {
            b--;
            data xx=query(0,n-1,a,b,0);
            if(xx.info==INF) xx.info=-1;
            //cout<<xx.info<<" "<<xx.cnt<<endl;
            printf("%d %d\n",xx.info,xx.cnt);
        } else {
            v[a]=b;
            update(0,n-1,0,b,a);
            /*for(int i=0;i<=16;i++) {
                cout<<i<<" "<<seg[i].info<<" "<<seg[i].cnt<<endl;
            }*/
        }
    }
    return 0;
}
