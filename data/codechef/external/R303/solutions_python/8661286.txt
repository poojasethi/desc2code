#include <iostream>
#include <iomanip>
#include <vector>
#include <cmath>

using namespace std;

struct vertex
{
  double x, y;
};

#ifdef HESOYAM
ostream& operator<<(ostream& stream, const vertex& vert)
{
  return stream << "(" << vert.x << ", " << vert.y << ")";
}
#endif

int main()
{
  ios::sync_with_stdio(false);
  cin.tie(0);

  int T, N;
  cin >> T;
  for (int t = 0; t < T; ++t)
  {
    cin >> N;
    vector<vertex> v(N);
    double area = 0.0;
    for (int i = 0; i < N; cin >> v[i++].x);
    for (int i = 0; i < N; cin >> v[i++].y);

    for (int i = 0; i < N; ++i)
    {
      vertex& a = v[i];
      vertex& b = v[(i + 1) % N];
      double x = (a.x*b.y) - (a.y*b.x);
      #ifdef HESOYAM
      cout << a << " " << b << " " << x << "\n";
      #endif
      area += x;
    }

    cout << fixed << setprecision(1) << abs(area / 2.0) << "\n";
  }
  return 0;
}
