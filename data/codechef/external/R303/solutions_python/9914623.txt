#include <bits/stdc++.h>
using namespace std;

const int MAX = 10005;

struct point{
	int x, y;
}p[MAX];

inline long long dist(point a, point b){
	return (a.x - b.x) * 1LL * (a.x - b.x) + (a.y - b.y) * 1LL * (a.y - b.y);
}

inline long long area(point a, point b, point c){
	return (b.x - a.x) * 1LL * (c.y - a.y) - (b.y - a.y) * 1LL * (c.x - a.x);
}

inline bool cmp(point b, point c){
	long long det = area(p[1], b, c);
	if(det == 0) return (dist(p[1], b) < dist(p[1], c)) ? 1 : 0;
	return (det > 0) ? 1 : 0;
}

int t, n;
int main(){
	ios :: sync_with_stdio(false);
	cin >> t;
	while(t--){
		cin >> n;
		for(int i = 1; i <= n; i++) cin >> p[i].x;
		for(int i = 1; i <= n; i++) cin >> p[i].y;
		int min_y = p[1].y, min_x = p[1].x, min_idx = 1;
		for(int i = 2; i <= n; i++){
			if(p[i].y < min_y || (p[i].y == min_y && p[i].x < min_x)){
				min_idx = i;
				min_y = p[i].y;
				min_x = p[i].x;
			}
		}
		swap(p[1], p[min_idx]);
		sort(p + 2, p + 1 + n, cmp);
		long long area_polygon = 0;
		for(int i = 2; i <= n - 1; i++){
			area_polygon += area(p[1], p[i], p[i + 1]);
		}
		cout << fixed << setprecision(1) << area_polygon * 1.0 / 2.0 << '\n';
	}
}