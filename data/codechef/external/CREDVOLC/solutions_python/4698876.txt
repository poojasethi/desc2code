#include <cstdio>
#include <vector>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <cmath>
#include <fstream>
#include <sstream>
#include <map>
#include <set>
#include <numeric>
#include <limits>
#include <string.h>
#include <bitset>
#include <assert.h>
#include <queue>

 //#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair


using namespace std;
#define DEBUG(x) cout << '>' << #x << ':' << x << endl;
#define imax numeric_limits<int>::max()
#define imin numeric_limits<int>::min()
#define lmax numeric_limits<LL>::max()
#define lmin numeric_limits<LL>::min()
#define SZ(x) (int)x.size()
typedef long long LL;
#define all(x)					x.begin(),x.end()

LL n, m;

LL valid(LL i, LL j)
{
    if (i >= 1 && j >= 1 && i <= n && j <= m){
        return 1;
    }
    return 0;
}



LL end = 0;
LL arr[202][202];
LL ans[202][202];
LL next_mx = 0;
LL fla[202][202];

void go (LL x, LL y, LL cur)
{
  //  cout<<x<<" "<<y<<"\n";
    if (x == 1 || x == n || y == 1 || y == m){
        end = 1;
    }

    if (fla[x][y] == 1){
        return;
    }
    fla[x][y]=1;
    ans[x][y] = 1;
    for (LL i = -1; i<=1;i++){
        for (LL j=-1;j<=1;j++){
            if (i == 0 && j == 0){
                continue;
            }
            LL nx = x + i;
            LL ny = y + j;
            if ( valid(nx, ny) == 1){
                if (arr[nx][ny] > cur){
                    next_mx = min (next_mx, arr[nx][ny]);
                }
                if (ans[nx][ny] == 0 && arr[nx][ny] <= cur){
                    go (nx, ny, cur);
                } else if (ans[nx][ny] == 1){
                    go (nx, ny, cur);
                }
            }
        }
    }
}


int main()
{
    ios::sync_with_stdio(0);
    cin>>n>>m;
    for (LL i=1;i<=n;i++){
        for (LL j=1;j<=m;j++){
            cin>>arr[i][j];
        }
    }
    LL x, y;
    cin>>x>>y;
    LL cur = arr[x][y];
    LL cnt = 0;
    while (end == 0 ){
        next_mx = 1e9;
        go(x,y, cur);
        memset (fla, 0, sizeof(fla));
   //     cout<<next_mx<<"\n";
        cur = next_mx;
        cnt++;
    }
   // cout<<"end "<<end<<"\n";
    for (LL i=1;i<=n;i++){
        for (LL j=1;j<=m;j++){
            if (ans[i][j] == 1){
                cout<<"1";
            } else {
                cout<<"0";
            }
            if (j != m){
                cout<<" ";
            }
        }
        cout<<"\n";
    }
    return 0;
}
/*



*/
