#ifdef ONLINE_JUDGE
#include <bits/stdc++.h>
using namespace std;
#else
#include "header.h"
#endif
#define SS(n) scanf("%s",n)
#define P(n) printf("%d",n)
#define PL(n) printf(LLD,n)
#define pn printf("\n")
#define ps printf(" ")
#define sz(s) int((s).size())
#define rep(i,a,b) for((i)=a;(i)<=(b);++(i))
#define per(i,b,a) for((i)=b;(i)>=(a);--(i))
#define clr(a) memset(a,0,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#ifndef DEBUG
#ifndef ONLINE_JUDGE
#include "debug.h"
#endif
#else
#define ck1
#define ck2
#define ck3
#define dir
#define show(x)
#define show2(x,y)
#define show3(x,y,z)
#define show4(x,y,z,w)
#endif

typedef long long LL;
#ifdef  __linux__
#define LLD "%lld"
#define _get getchar_unlocked
inline int inp() {int n=0,s=1;char p=_get();if(p=='-')s=-1;while((p<'0'||p>'9')&&p!=EOF&&p!='-')p=_get();if(p=='-')s=-1,p=_get();while(p>='0'&&p<='9')n=(n<<3)+(n<<1)+(p-'0'),p=_get();return n*s;}
#else
#define LLD "%I64d"
inline int inp() {int x;scanf("%d",&x);return x;}
#endif
typedef vector <int> vi;
typedef pair<int,int> pii;
typedef map <int,int> mii;
inline int ins(int x,int y,int m,int n){return (x>=1&&x<=m&&y>=1&&y<=n);}
template <class T> inline T gcd(T a,T b){return (!b? a : gcd(b,a%b));}
template <class T> inline T ABS(T x){return ((x)>0?(x):(-(x)));}
template <class T> inline T max(T a,T b,T c) {return (max(max(a,b),c));}
template <class T> inline T min(T a,T b,T c) {return (min(min(a,b),c));}
template <class T> inline T sqr(T x) {return x*x;}
const int N = 1e5 + 11;
const int M = 2e5 + 11;
const int inf = INT_MAX;

int MarkedEdge[M];
int par[N], siz[N];
int u[M], v[M];
pii arr[M];

inline int getPar (int x) {
	if(par[x] != x) par[x] = getPar (par[par[x]]);
	return par[x];
}

inline void unite (int x, int y) {
	int a = getPar(x), b = getPar(y);
	if(siz[a] >= siz[b]) siz[a] += siz[b], par[b] = a;
	else siz[b] += siz[a], par[a] = b;
}

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	#endif
	int testCase, t=1;
	for(testCase=1; testCase<=t; testCase++)
	{
		int n=inp(), m=inp();
		for(int i=0; i<m; i++) {
			u[i] = inp();
			v[i] = inp();
			arr[i] = mp(inp(),i);
		}
		sort(arr,arr+m);
		for(int i=0; i<n; i++) par[i] = i, siz[i] = 1;
		for(int i=0; i<m; i++) {
			int eno = arr[i].ss;
			int a = getPar(u[eno]);
			int b = getPar(v[eno]);
			arr[i].ss = ~arr[i].ss;
			if(a != b) {
				++MarkedEdge[eno];
				unite(u[eno],v[eno]);
			}
		}
		sort(arr,arr+m);
		for(int i=0; i<n; i++) par[i] = i, siz[i] = 1;
		for(int i=0; i<m; i++) {
			int eno = ~arr[i].ss;
			int a = getPar(u[eno]);
			int b = getPar(v[eno]);
			if(a != b) {
				--MarkedEdge[eno];
				unite(u[eno],v[eno]);
			}
		}
		bool ok=true;
		for(int i=0; i<m; i++) {
			if(MarkedEdge[i] != 0) {
				ok = false;
				break;
			}
		}
		puts(ok?"YES":"NO");
	}
}
				
		
