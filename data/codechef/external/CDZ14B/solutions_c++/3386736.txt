#include <iostream>
#include <cstring>
#define MOD 1000000007

using namespace std;

long long dp[10004];
string s;
long long n;

long long fast(long long n, long long p)
{
    if(p == 0) return 1LL;
    if(p == 1) return n;
    if(p % 2 == 0) {
        long long temp = fast(n, p/2);
        return (temp*temp)%MOD;
    }
    return (n*(fast(n, p-1)))%MOD;
}

long long val2;

long long solve(long long pos)
{
        if(pos == s.size()) return 0;
        if(pos == n) return 0;
        if(dp[pos] != -1) return dp[pos];

        long long ans = 0;

        ans = (ans + s[pos]-'a'+1LL)%MOD;
        ans = (ans + ((long long)(s[pos]-'a'+1LL)*solve(pos+1))%MOD)%MOD;
        if(pos == s.size()-1) {
            val2 += ans;
        }
        return dp[pos] = ans;
}

int main()
{
    long long t;

    cin >> t;

    while(t--) {
        cin >> n;
        cin >> s;
        val2 = 0;
        memset(dp, -1, sizeof(dp));

        long long val = solve(0);
        //cout << val << endl;
        //cout << val2 << endl;
        if(n == s.size()) {
            val = val-1;
            if(val < 0) val += MOD;
            cout << val << endl;
        }
        else if(n < s.size()) {
            cout << val << endl;
        }
        else {
            val = val-1;

            val2 = 1;

            for(int i = 0; i < s.size(); i++) {
                val2 = (val2*(s[i]-'a'+1))%MOD;
            }
            val2 = val2-1;
            if(val < 0) val += MOD;
            if(val2 < 0) val2 += MOD;
            long long v1, v2;
            v1 = fast(25LL, MOD-2);
            v2 = fast(26, n-s.size());
            v2 = v2 - 1;
            if(v2 < 0) v2 += MOD;
            v2 = (26LL*v2)%MOD;
            v1 = (v1*v2)%MOD;
            val2 = (val2*v1)%MOD;
            val = (val + val2)%MOD;
            cout << val << endl;
        }
    }
}
