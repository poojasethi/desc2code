#include <bits/stdc++.h>

using namespace std;
int dp[1001][1001];
int arr[1005];
int n;
int solve(int l,int r)
{
    if(l>r)
        return 0;
    if(dp[l][r]!=-1) return dp[l][r];
    int ans1=0,ans2=0;
    if(r-1>=0 && arr[l]<arr[r-1])
         ans1=solve(l,r-2)+arr[r];
    else ans1=solve(l+1,r-1)+arr[r];
    if(l+1 < n && arr[l+1]>arr[r])
            ans2=solve(l+2,r)+arr[l];
    else ans2=solve(l+1,r-1)+arr[l];
    return dp[l][r]=max(ans1,ans2);
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--){
        memset(dp,-1,sizeof(dp));
        int i;
        scanf("%d",&n);
        int sum=0;
        for(i=0;i<n;i++){
            scanf("%d",&arr[i]);
            sum+=arr[i];
        }
        int ans=solve(0,n-1);
        //cout<<ans<<"  "<<sum<<endl;
        int diff=ans-(sum-ans);
        if(diff>=0)
            printf("1 %d\n",diff);
        else printf("2 %d\n",-diff);
    }
    return 0;
}
