/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<bits/stdc++.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
#define TRACE

#ifdef TRACE
#define trace1(x)                cerr << #x << ": " << x << endl;
#define trace2(x, y)             cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)          cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)       cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define trace5(a, b, c, d, e)    cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;

#else

#define trace1(x)
#define trace2(x, y)
#define trace3(x, y, z)
#define trace4(a, b, c, d)
#define trace5(a, b, c, d, e)
#define trace6(a, b, c, d, e, f)

#endif

vector<pair<PII,PII> >queries;
LLD ans=0;
int BIT[100002],k;
void update(int index,int val)
{
	while(index<100001)
	{
		BIT[index]+=val;
		index+=index&-index;
	}
}
int read(int index)
{
	int sum=0;
	while(index>0)
	{
		sum+=BIT[index];
		index-=index&-index;
	}
	return sum;
}
void add(int x)
{
	int r1=read(min(100000,x+k));
	int r2=read(max(0,x-k-1));
	ans+=r1-r2;
	update(x,1);
}
void remove(int x)
{
	update(x,-1);
	int r1=read(min(100000,x+k));
	int r2=read(max(0,x-k-1));
	ans-=r1-r2;
}
LLD fans[100002],a[100002];
int main()
{
	int n,q,i,j,sz;
	cin>>n>>q>>k;
	REP(i,n)
		sl(a[i]);
	sz=sqrt(q);
	REP(i,q)
	{
		int l,r;
		si2(l,r);
		l--,r--;
		queries.pb(mp(mp(l/sz,r),mp(l,i)));
	}
	sort(queries.begin(),queries.end());
	int cl=0,cr=1;
	REP(i,q)
	{
		int l=queries[i].S.F,r=queries[i].F.S;
		while(cl>=l)
		{
			add(a[cl--]);
		}
		while(cr<=r)
		{
			add(a[cr++]);
		}
		while(cl<l-1)
		{
			remove(a[++cl]);
		}
		while(cr>r+1)
		{
			remove(a[--cr]);
		}
		fans[queries[i].S.S]=ans;
	}
	REP(i,q)
		printf("%lld\n",fans[i]);
	return 0;
}
