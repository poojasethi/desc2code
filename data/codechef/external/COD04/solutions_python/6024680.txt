#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<functional>
#include<string>
#include<cstring>
#include<cstdlib>
#include<queue>
#include<utility>
#include<fstream>
#include<sstream>
#include<cmath>
#include<stack>
#include<assert.h>
using namespace std;
#define gc getchar()
#define ll long long
#define MEM(a, b) memset(a, (b), sizeof(a))
#define CLR(a) memset(a, 0, sizeof(a))
#define MAX(a, b) ((a) > (b) ? (a) : (b))
#define MIN(a, b) ((a) < (b) ? (a) : (b))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define S(X) ( (X) * (X) )
#define SZ(V) (int )V.size()
#define FORN(i,n) for(ll i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define ALL(V) V.begin(), V.end()
#define IN(A, B, C)  (B) <= (A) && (A) <= (C)
ll read()
{
	ll i=0;
    char ch=gc;
    while(ch<'0'||ch>'9')
    ch=gc;
    while(ch<='9'&&ch>='0')
    {
    	i=(i<<1)+(i<<3)+ch-'0';
        ch=gc;
    }
    return i;
}
int scan_d()
{
    int ip = getchar(), ret = 0, flag = 1;

    for(; ip < '0' || ip > '9'; ip = getchar())
    {
        if(ip == '-')
        {
            flag = -1;
            ip = getchar();
            break;
        }
    }

    for(; ip >= '0'&& ip <= '9'; ip = getchar())
        ret = ret * 10 + ip - '0';
    return flag * ret;
}
//types and constants used in the functions below

int main() {
	ll n, t,k,p,l;
	t=read(); vector<ll> v,va;
	if(t==0)
	cout<<"1";
	else if(t==1)
	cout<<"0";
	else
	{while((t-2)>=0)
	{
	   v.push_back(8);
	   t-=2;
	}
	if(t>0)
	v.push_back(4);
	for(ll i=v.size()-1;i>=0;i--)
	cout<<v.at(i);
	//cou<<v.at(0);
	}



	return 0;
}
