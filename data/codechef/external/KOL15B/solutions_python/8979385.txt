#include <bits/stdc++.h>
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define sz size()
#define all(a)  a.begin(), a.end()
#define allr(a) a.rbegin(), a.rend()
#define fill(a, x) memset(a, x, sizeof(a));
#define mod 1000000007

using namespace std;

int a[1005][1005];
int dp1[1005][1005];
int dp2[1005][1005];
int dp3[1005][1005];
int dp4[1005][1005];


int main(){
   int T;
   cin >> T;
   while(T--){
	int N, M;
	scanf("%d%d", &N, &M);
	for(int n=1;n<=N;++n){
		for(int m=1;m<=M;++m){
			dp1[n][m] = 0;
			dp2[n][m] = 0;
			dp3[n][m] = 0;
			dp4[n][m] = 0;
		}
	}
	for(int n=1;n<=N;++n){
		for(int m=1;m<=M;++m){
			scanf("%d", &a[n][m]);
			dp1[n][m] = a[n][m];
			dp2[n][m] = a[n][m];
			dp3[n][m] = a[n][m];
			dp4[n][m] = a[n][m];
		}
	}
	for(int n=1;n<=N;++n){
		for(int m=2;m<=M;++m){
			dp1[n][m] = min(dp1[n][m - 1] + a[n][m], dp1[n][m]);
		}
		for(int m=M-1;m>=1;--m){
			dp2[n][m] = min(dp2[n][m + 1] + a[n][m], dp2[n][m]);
		}
	}
	for(int m=1;m<=M;++m){
		for(int n=2;n<=N;++n){
			dp3[n][m] = min(dp3[n - 1][m] + a[n][m], dp3[n][m]);
		}
		for(int n=N - 1;n>=1;--n){
			dp4[n][m] = min(dp4[n + 1][m] + a[n][m], dp4[n][m]);
		}
	}
	int Ans = 1e9;
	for(int n=1;n<=N;++n){
		for(int m=1;m<=M;++m){
			Ans = min(Ans, dp1[n][m] + dp2[n][m] + dp3[n][m] + dp4[n][m] - (3 * a[n][m]));
		}
	}
	printf("%d\n", Ans);
   }
   return 0;
}
