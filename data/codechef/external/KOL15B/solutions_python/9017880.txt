#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include<iomanip>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
#define pb push_back
#define sz size()
#define ln length()
#define fore(i,a,b) for(int i=a;i<b;i++)
#define fores(i,a,b) for(int i=a;i<=b;i++)
#define ford(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%d",&a)
#define md 1000000007
#define N 1003

ll dp[4][N][N];
int a[N][N];

int main() {
    int t;
    sc(t);
    fore(z,0,t) {
        int n,m;
        sc(n);
        sc(m);
        fore(i,0,n) {
            fore(j,0,m) {
                sc(a[i][j]);
            }
        }
        fore(i,0,4) {
            fore(j,0,n) {
                fore(k,0,m) {
                    dp[i][j][k] = 0;
                }
            }
        }
        //top
        fore(j,0,m) {
            dp[0][0][j] = a[0][j];
        }
        fore(i,1,n) {
            fore(j,0,m) {
                dp[0][i][j] = min((ll)a[i][j],dp[0][i-1][j]+a[i][j]);
            }
        }
        //bottom
        fore(j,0,m) {
            dp[1][n-1][j] = a[n-1][j];
        }
        ford(i,n-2,0) {
            fore(j,0,m) {
                dp[1][i][j] = min((ll)a[i][j],dp[1][i+1][j]+a[i][j]);
            }
        }
        //left
        fore(i,0,n) {
            dp[2][i][0] = a[i][0];
        }
        fore(j,1,m) {
            fore(i,0,n) {
                dp[2][i][j] = min((ll)a[i][j],dp[2][i][j-1]+a[i][j]);
            }
        }
        //right
        fore(i,0,n) {
            dp[3][i][m-1] = a[i][m-1];
        }
        ford(j,m-2,0) {
            fore(i,0,n) {
                dp[3][i][j] = min((ll)a[i][j],dp[3][i][j+1]+a[i][j]);
            }
        }
        ll fa = 1e15;
        fore(i,0,n) {
            fore(j,0,m) {
                ll tot = 0;
                fore(k,0,4) {
                    tot+=dp[k][i][j];
                }
                tot-=3*a[i][j];
                fa = min(fa,tot);
            }
        }
        printf("%lld\n",fa);
    }
    return 0;
}