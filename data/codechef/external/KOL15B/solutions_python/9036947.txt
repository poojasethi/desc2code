
#include <bits/stdc++.h>
# define sz(a) int((a).size())
# define all(c) (c).begin(),(c).end() 
# define allr(c) (c).rbegin(),(c).rend() 

using namespace std;

typedef long long int lli;
lli a[1001][1001];
lli dp[1001][1001][4];

int main() {
    int t;
    scanf("%d", &t);
    while (t--) {
        int r, c;
        scanf("%d %d", &r, &c);
        lli ans = 1LL << 60;
        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j)  {
                scanf("%lld", &a[i][j]);
            }
        }

        for (int j = 0; j < c; ++j)  {
            dp[0][j][0] = a[0][j];
            for (int i = 1; i < r; ++i) {
                dp[i][j][0] = min(a[i][j], a[i][j] + dp[i - 1][j][0]);
            }
        }

        for (int j = 0; j < c; ++j)  {
            dp[r - 1][j][1] = a[r - 1][j];
            for (int i = r - 2; i >= 0; --i) {
                dp[i][j][1] = min(a[i][j], a[i][j] + dp[i + 1][j][1]);
            }
        }

        for (int i = 0; i < r; ++i) {
            dp[i][0][2] = a[i][0];
            for (int j = 1; j < c; ++j)  {
                dp[i][j][2] = min(a[i][j], a[i][j] + dp[i][j - 1][2]);
            }
        }

        for (int i = 0; i < r; ++i) {
            dp[i][c - 1][3] = a[i][c - 1];
            for (int j = c - 2; j >= 0; --j)  {
                dp[i][j][3] = min(a[i][j], a[i][j] + dp[i][j + 1][3]);
            }
        }

        for (int i = 0; i < r; ++i) {
            for (int j = 0; j < c; ++j)  {
                lli x = accumulate(dp[i][j], dp[i][j] + 4, 0LL) - 3 * a[i][j];
                ans = min(ans, x);
            }
        }

        printf("%lld\n", ans);
    }
}

