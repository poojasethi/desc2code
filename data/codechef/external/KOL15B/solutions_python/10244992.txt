#include <bits/stdc++.h>
#define MOD 1000000007
#define max(a,b) a > b ? a : b
#define min(a,b) a < b ? a : b
#define ll long long int
#define pi pair<int,int>
#define pl pair<ll,ll>
using namespace std;

long long int inp[1005][1005],west[1005][1005],east[1005][1005],up[1005][1005],down[1005][1005];
		
void fill(int n,int m)
{
	int i,j;
	for(i=0;i<=n+1;i++)
	{
		for(j=0;j<=m+1;j++)
			west[i][j] = east[i][j] = up[i][j] = down[i][j] = 0;
	}
}
int main()
{
	long long int testcases,n,m,i,j;
	cin>>testcases;
	while(testcases--)
	{
		cin>>n>>m;
		fill(n,m);
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				cin>>inp[i][j];
				inp[i][j] = -inp[i][j];
			}
		}
		
		for(i=1;i<=n;i++)
		{
			west[i][1] = inp[i][1];
			for(j=2;j<=m;j++)
				west[i][j] = max(inp[i][j],inp[i][j] + west[i][j-1]);
		}
		
		for(i=1;i<=n;i++)
		{
			east[i][m] = inp[i][m];
			for(j=m-1;j>=1;j--)
				east[i][j] = max(inp[i][j],inp[i][j] + east[i][j+1]);
		}
		
		for(j=1;j<=m;j++)
		{
			up[1][j] = inp[1][j];
			for(i=2;i<=n;i++)
				up[i][j] = max(inp[i][j],inp[i][j] + up[i-1][j]);
		}
		
		for(j=1;j<=m;j++)
		{
			down[n][j] = inp[n][j];
			for(i=n-1;i>=1;i--)
				down[i][j] = max(inp[i][j],inp[i][j] + down[i+1][j]);
		}
		
		long long int ans = -(1e9 + 7),val;
		for(i=1;i<=n;i++)
		{
			for(j=1;j<=m;j++)
			{
				val = west[i][j] + east[i][j] + up[i][j] + down[i][j] - (3*inp[i][j]);
				ans = max(ans,val);
			}
		}
		cout<<(-ans)<<"\n";
	}
	return 0;
}
