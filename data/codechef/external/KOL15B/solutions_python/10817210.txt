#include<bits/stdc++.h>
using namespace std;
#define MAX 1005
int east[MAX][MAX],west[MAX][MAX],north[MAX][MAX],south[MAX][MAX],cost[MAX][MAX];
int main()
{
    int t,n,m;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d %d",&n,&m);
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
                scanf("%d",&cost[i][j]);
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=1;j<=m;j++)
            {
                if(j==1)
                    west[i][j]=cost[i][j];
                else
                {
                    west[i][j]=min(cost[i][j],cost[i][j]+west[i][j-1]);
                }
            }
        }
        for(int i=1;i<=n;i++)
        {

            for(int j=m;j>=1;j--)
            {
                if(j==m)
                    east[i][j]=cost[i][j];
                else
                {
                    east[i][j]=min(cost[i][j],east[i][j+1]+cost[i][j]);
                }
            }
        }
        for(int i=1;i<=m;i++)
        {

            for(int j=n;j>=1;j--)
            {

                if(j==n)
                    south[j][i]=cost[j][i];
                else
                {

                    south[j][i]=min(cost[j][i],south[j+1][i]+cost[j][i]);
                }
            }
        }

        for(int i=1;i<=m;i++)
        {

            for(int j=1;j<=n;j++)
            {

                if(j==1)
                    north[j][i]=cost[j][i];
                else
                {

                    north[j][i]=min(cost[j][i],cost[j][i]+north[j-1][i]);
                }
            }
        }

  /*  for(int i=1;i<=n;i++)
        {

            for(int j=1;j<=m;j++)
            {

                printf("%d %d %d %d\n",east[i][j],west[i][j],north[i][j],south[i][j]);
            }
            printf("\n\n");
        }*/
        int final_answer=INT_MAX;
        for(int i=1;i<=n;i++)
        {

            for(int j=1;j<=m;j++)
            {

                final_answer=min(final_answer,east[i][j]+west[i][j]+north[i][j]+south[i][j]-(3*cost[i][j]));
            }
        }
        printf("%d\n",final_answer);

    }
    return 0;
}
