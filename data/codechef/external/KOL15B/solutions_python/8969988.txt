#include<bits/stdc++.h>
#define MOD 1000000007
#define right rit
#define left lit
using namespace std;
#define ll long long int
ll gcd(ll a,ll b){ return (b==0)?a:gcd(b,a%b); }
ll lcm(ll a, ll b) { return (a*b)/gcd(a,b); }
ll modpow(ll a, ll n, ll mod){ ll res=1; while(n){ if(n&1)res=(res*a)%mod; a=(a*a)%mod; n>>=1; } return res; }
int left[1000][1000],up[1000][1000],down[1000][1000],right[1000][1000],a[1000][1000];

void lt(int x,int y)
{
	int i = 0,j = 0;
	
	for(i = 0;i < x;i++)
	{
		left[i][0] = a[i][0];
	}

	for(j = 1;j < y;j++)
	{
		for(i = 0;i < x;i++)
		{
			left[i][j] = min(a[i][j],a[i][j] + left[i][j-1]);
		}
	}

}

void rt(int x,int y)
{
	int i = 0,j = 0;

	for(i = 0;i < x;i++)
	{
		right[i][y-1] = a[i][y-1];
	}

	for(j = y-2;j >= 0;j--)
	{
		for(i = 0;i < x;i++)
		{
			right[i][j] = min(a[i][j],a[i][j] + right[i][j+1]);
		}
	}

}

void u(int x,int y)
{
	int i = 0,j = 0;
	for(i = 0;i < y;i++)
	{
		up[0][i] = a[0][i];
	}

	for(i = 1;i < x;i++)
	{
		for(j = 0;j < y;j++)
		{
			up[i][j] = min(a[i][j],a[i][j] + up[i-1][j]);
		}
	}

}

void d(int x,int y)
{
	int i = 0,j = 0;

	for(i = (y-1);i >= 0;i--)
	{
		down[x-1][i] = a[x-1][i];
	}

	for(i = (x-2);i >=0;i--)
	{
		for(j = 0;j < y;j++)
		{
			down[i][j] = min(a[i][j],a[i][j] + down[i+1][j]);
		}
	}

}

int main()
{
//	ios_base::sync_with_stdio(0);
	ll ans = 0,j = 0,v1 = 0,v2 = 0,t = 0,i =0 ,n =0,x,y,q;
	cin >> t;
	while(t--)
	{
		cin >> x >> y;
		
		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
			{
				a[i][j] = 0;
				left[i][j] = 0;
				right[i][j] = 0;
				up[i][j] = 0;
				down[i][j] = 0;
				cin >> a[i][j];
			}
		}
		u(x,y);
		d(x,y);
		lt(x,y);
		rt(x,y);
		int val = 9999999;
/*		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
				cout << left[i][j];
			cout<<endl;
		}

		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
				cout << right[i][j];
			cout<<endl;
		}

		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
				cout << up[i][j];
			cout<<endl;
		}

		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
				cout << down[i][j];
			cout<<endl;
		}
*/
		for(i = 0;i < x;i++)
		{
			for(j = 0;j < y;j++)
			{
				val = min(up[i][j] + down[i][j] + left[i][j] + right[i][j] - (3*a[i][j]),val);
			}
		}
		cout << val <<endl;
	}
		return 0;
	}




