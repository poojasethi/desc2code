#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define MOD 1000000007
#define MAXN 100005
#define eps  1e-9
typedef unsigned long long int uint64;
typedef long long int int64;



struct node{
	vector<node*>links;
	bool end;
	node(){
		end=false;
		links.resize(26,NULL);
	}
};

string s;

bool insert(struct node *root){
	struct node *tmp=root;
	bool flag=true;
	for(int i=0;i<s.length();i++){
		if(tmp->links[s[i]-'a']==NULL){
			flag=false;
			tmp->links[s[i]-'a']=new node();
		}
		if(tmp->end)
		return true;
		tmp=tmp->links[s[i]-'a'];
	}
	
	tmp->end=true;
	return flag;
}


int main(){
	struct node *root=new node();
	int n,i;
	cin>>n;
	bool ans=false;
	for(i=0;i<n;i++){
		cin>>s;
		if(insert(root)){
			ans=true;
		}
	}
	if(ans)
	printf("vulnerable");
	else
	printf("non vulnerable");
	return 0;
}