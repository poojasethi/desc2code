#include<stdio.h>
#include<string.h>
#include<iostream>
using namespace std;
 struct node
  {
  	 int word_count;
  	   struct node * has[26];
  	   bool ispre[26];
  };
  int exist=0;
node* init()
 {
 	 node *node1=new node;
 	 node1->word_count=0;
 	   for(int  i=0;i<26;i++){
 	   
 	 node1->has[i]=NULL;
 	 node1->ispre[i]=false;
 	  //cout<<"here"<<endl;}
 }
	        return node1;
 	       
 }
 node *root;
  void build(char arr[])
   {
   	  node *present=root;
   	  
   	    int len=strlen(arr);
   //	cout <<arr<<endl;
   	
   	      for(int i=0;i<len;i++)
   	       {
   	       //	  cout<<"building "<<endl;
   	       	int flag=0;
   	       	  if(present->has[arr[i]-'a']==NULL)
   	       	   {
   	       	  // 	cout<<" creating "<<arr[i]<<endl;
   	       	   	flag=1;
   	       	   	 ////cout<<"making"<<endl;
   	       	   	  present->has[arr[i]-'a']=init();
   	       	   }
   	       	   
            if(present->ispre[arr[i]-'a']==true)
            {
                   			 exist=1;
             //      			 cout<<"herer  "<<endl;
			}

   	       	
   	       	    if(i==len-1)
   	       	     {
   	       //	     	cout<<"word formed with "<<arr[i]<<endl;
   	       	     	present->ispre[arr[i]-'a']=true;
   	       	     
   	       	    
   	       	     }present=present->has[arr[i]-'a'];
   	       	     if(i==len-1 && flag==0)
   	       	     {
   	       	     	exist=1;
   	       	     }
   	       }
   	       
   	      
   }
   
int main()
 {
 	int t;
 	 cin>>t;
 	 node *node1=init();
 	 root=node1;
 	   while(t--)
 	    {
 	    
 	    	  char arr[100000];
 	    	    cin>>arr;
 	    	    build(arr);
 	    	    
 	    }
 	    if(exist==1)
 	     {
 	     	  cout<<"vulnerable"<<endl;
 	     	  
 	     }
 	     else
 	       cout<<"non vulnerable"<<endl;
 }