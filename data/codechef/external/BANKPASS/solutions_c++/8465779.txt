#include<bits/stdc++.h>
using namespace std;
struct node
{
    bool isleaf;
    node *child[26];  // array of pointers to store address of its child
    node()
    {
        isleaf=false;
        for(int i=0;i<26;i++)
            child[i]=NULL;
    }
};
node *root;
bool insert(string s)
{
    node *temp=root;
    int n=s.size();
    for(int i=0;i<n;i++)
    {
        if(temp->isleaf)
            return false;
        int x=s[i]-'a';
        if(!temp->child[x])
        {
            temp->child[x]=new node;
        }
        temp=temp->child[x];
    }
    for(int i=0;i<26;i++)
    {
        if(temp->child[i])
            return false;
    }
    temp->isleaf=true;
    return true;
}
int main()
{
    int t;
    cin>>t;
    string s;
    root=new node;
    bool ans=true;
    while(t--)
    {
     cin>>s;
     ans=ans&insert(s);
    }
    if(ans)
        cout<<"non vulnerable";
        else
            cout<<"vulnerable";
        return 0;
}
