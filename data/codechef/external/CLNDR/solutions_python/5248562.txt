#include <iostream>
#include <fstream>
#include <stdio.h>
#include <algorithm>
#include <string>
#include <vector>
#include <math.h>
#include <cmath>
#include <map>
#include <sstream>
#include <numeric>
#include <bitset>
#include <limits>
#include <iomanip>
#include <math.h>
#include <string.h>
#include <queue>
#include <set>


#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define For(i,a,b) for(int i=a;i<=b;i++)
#define present(c,x) ((c).find(x) != (c).end())      // for set/map
#define cpresent(c,x) (find(all(c),x) != (c).end())  //for vector
//setbase - cout << setbase (16); cout << 100 << endl; Prints 64
//setfill -   cout << setfill ('x') << setw (5); cout << 77 << endl; prints xxx77
//setprecision - cout << setprecision (4) << f << endl; Prints x.xxxx
#define PI 3.141592658979323433
double EPS = 1e-9;
#define MOD  1000000007

#define gc getchar_unlocked
#define pc putchar_unlocked
#define INF (10000005)
#define TREESIZE (302144)
#define LEFT(n) (2*n)
#define RIGHT(n) (2*n+1)
 
using namespace std;
 
typedef vector<int> vi;
typedef vector<double> vd;
typedef vector<string> vs;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector< pair<int,int> > vii;
typedef long long ll;
typedef unsigned long long ull;
typedef pair<ii, int> iii;
 
ll gcd(ll a, ll b){
	if(b==0)	
		return a;
	return gcd(b, a%b);
}
 
ll lcm(ll a, ll b){
	return (a/gcd(a,b))*b;
}
 
ll pwr(ll base, ll p){
 
	ll ans = 1;
	while(p){
		if(p&1)	ans = (ans * base)%MOD;
		base = (base * base)%MOD;
		p>>=1;
	}
	return ans;
}
 
ll modInv(ll n, ll mod){
	return pwr(n, mod-2);
}
 
 
int bitCount(int n){
 
	int c = 0;
	while(n){
		c++;
		n &= n-1;
	}
	return c;
}

int get_month(string mn){
	//cout<<mn<<endl;
	string jan = "JAN";
	if(mn.compare("JAN")==0){
		return 0;
	}
	else if(mn.compare("FEB")==0){
		return 31;
	}
	else if(mn.compare("MAR")==0){
		return 31+29;
	}
	else if(mn.compare("APR")==0){
		return 31+29+31;
	}
	else if(mn.compare("MAY")==0){
		return 31+29+31+30;
	}
	else if(mn.compare("JUN")==0){
		return 31+29+31+30+31;
	}
	else if(mn.compare("JUL")==0){
		return 31+29+31+30+31+30;
	}
	else if(mn.compare("AUG")==0){
		return 31+29+31+30+31+30+31;
	}
	else if(mn.compare("SEP")==0){
		return 31+29+31+30+31+30+31+31;
	}
	else if(mn.compare("OCT")==0){
		return 31+29+31+30+31+30+31+31+30;
	}
	else if(mn.compare("NOV")==0){
		return 31+29+31+30+31+30+31+31+30+31;
	}
	else if(mn.compare("DEC")==0){
		return 31+29+31+30+31+30+31+31+30+31+30;
	}
	else{
		return 0;
	}
}
 
void get_dec(string str, int i){
	string year = str.substr(7, 4);
	int yr = atoi(year.c_str());
	string mon = str.substr(3, 3);
	int mn = get_month(mon);
	int day = atoi(str.c_str());
	if((yr%4 == 0 && yr%100!=0 )|| (yr%400 == 0) ){
		//leap
	
			if(mn+day<=300){
				cout<<"Case "<<i<<": "<<(mn+day)<<" Hundreds"<<endl;
			}
			else if(mn+day<=360){
				cout<<"Case "<<i<<": "<<(mn+day)-300<<" Tens"<<endl;
			}
			else{
				cout<<"Case "<<i<<": "<<(mn+day-360)<<" Ones"<<endl;
			}
		
		
	}
	else{
		//nonleap
	
			if(mn-1+day<=300){
				if(mn<=31){
					cout<<"Case "<<i<<": "<<(mn+day)<<" Hundreds"<<endl;
				}
				else{
					cout<<"Case "<<i<<": "<<(mn-1+day)<<" Hundreds"<<endl;
					
				}
			}
			else if(mn-1+day<=360){
				cout<<"Case "<<i<<": "<<(mn-1+day)-300<<" Tens"<<endl;
			}
			else{
				cout<<"Case "<<i<<": "<<(mn-1+day-360)<<" Ones"<<endl;
			}
		
	}
}
int main(){
	//your code goes here
	int t;
	cin>>t;
	string str;
	int i=1;
	while(t--){
		cin>>str;
		get_dec(str,i);
		i++;
	}
	return 0;
}