						/*////////////////////////////////////////////////*/
						/* 				 code by d@rk$(@!e   			  */
						/*////////////////////////////////////////////////*/
#include <algorithm>
#include <assert.h>
#include <fstream>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>

#include <cctype>
#include <climits>
#include <cmath>
#include <cstdlib>
#include <cstdio>
#include <cstring>

using namespace std;
#define CLR(a) memset(a, 0, sizeof(a))
#define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
#define SZ(V) (int )V.size()
#define ALL(V) V.begin(), V.end()
#define RALL(V) V.rbegin(), V.rend()
#define FORN(i, n) for(i = 0; i < n; i++)
#define FORAB(i, a, b) for(i = a; i <= b; i++)
#define si(n) scanf("%d",&n)
#define ss(s) scanf("%s",s)
#define prin(n) printf("%d\n",n)
#define pll pair < long long int, long long int >
#define pii pair < int, int >
#define psi pair < string, int >
#define PB push_back  
#define MP make_pair
#define F first
#define S second
#define MOD 1000000007LL

typedef pair<int,int> PII;
typedef pair<double, double> PDD;
typedef long long LL;


int main()
{
	LL test,t;
	cin >> test;
	FORAB(t,1,test){
		string s;
		cin >> s;
		LL year=0,i;
		for(i=7;i<11;i++)
			year=year*10+s[i]-'0';
		map<string,LL> month;
		month["JAN"]=0;
		month["FEB"]=month["JAN"]+31;
		month["MAR"]=month["FEB"]+28;
		if(year%4==0 && (year%100!=0 || year%400==0))
			month["MAR"]++;
		month["APR"]=month["MAR"]+31;
		month["MAY"]=month["APR"]+30;
		month["JUN"]=month["MAY"]+31;
		month["JUL"]=month["JUN"]+30;
		month["AUG"]=month["JUL"]+31;
		month["SEP"]=month["AUG"]+31;
		month["OCT"]=month["SEP"]+30;
		month["NOV"]=month["OCT"]+31;
		month["DEC"]=month["NOV"]+30;
		LL days=(s[0]-'0')*10+(s[1]-'0') + month[s.substr(3,3)];
		cout << "Case " << t << ": ";
		if(days<=300)
			cout << days << " Hundreds";
		else if(days<=360)
			cout << days-300 << " Tens";
		else
			cout << days-360 << " Ones";
		cout <<  endl;
	}
	return 0;
}