    #include<iostream>
    using namespace std;
     
    int graph[22][22]={0};
    int visit[22]={0};
     
    long int max_path=0;
     
    void find_max(int src, int n,long int dist)
    {
    	max_path= max(max_path,dist);
    	
    	if(visit[src])
    	 return;
    	
    	visit[src]=1;
    	
    	for(int i=1;i<=n;i++)
    	{
    		if(graph[src][i]!=0 && visit[i]!=1)
    		{
    			find_max(i,n,dist+graph[src][i]);
    		}
    	}
    }
     
    int main()
    {
    	int n;
    	cin>>n;
    	int a,b,d,i,j;
    	
    	for(i=0;i<=n;i++)
    	{
    		visit[i]=0;
    		for(j=0;j<=n;j++)
    		{
    			graph[i][j]=0;
    		}
    	}
    	
    	long int sum=0;
    	
    	for(i=1;i<n;i++)
    	{
    		cin>>a>>b>>d;
    		graph[a][b]=d;
    		graph[b][a]=d;
    		sum+= (2*d);
    	}
    	
    	
    	find_max(1,n,0);
    	
    	cout<<sum-max_path<<endl;
    	
    	return 0;
    } 