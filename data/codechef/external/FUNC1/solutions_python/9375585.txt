#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using VI = vector<int>;

const ll mod = 1e9 + 7;

map<VI, ll> m;

ll d(VI v) {
  sort(v.begin(), v.end());
  if (m.count(v) != 0) return m[v];
  ll &r = m[v];
  if (v == VI(v.size(), 0)) return r = 1;

  VI w(v.size());
  function<ll(int, bool)> bt = [&](int i, bool ok) -> ll {
    if (i == int(v.size())) {
      if (ok) return d(w);
      return 0LL;
    }
    ll r = 0;
    for (int j = 0; j <= v[i]; ++j) {
      w[i] = j;
      r = (r + bt(i + 1, ok or j < v[i])) % mod;
    }
    return r;
  };
  return r = bt(0, false);
}

int main() {
  int t;
  cin >> t;
  while (t--) {
    ll n, c;
    cin >> n >> c;
    VI v;
    for (ll i = 2; i * i <= n; ++i) {
      if (n % i == 0) {
        int r = 0;
        do {
          ++r;
          n /= i;
        } while (n % i == 0);
        v.push_back(r);
      }
    }
    if (n != 1) v.push_back(1);
    //cerr << v.size() << endl;
    //for (int i : v) cerr << i << endl;
    m.clear();
    c %= mod;
    cout << (d(v) * c) % mod << endl;
  }
}
