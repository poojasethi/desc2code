#include <iostream>
#include <vector>
#include <unordered_map>
#include <algorithm>
#include <string.h>
#include <queue>
#define map unordered_map
#define MOD 1000000007

using namespace std;

typedef long long ll;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<ii> vii;
typedef vector<vi> vvi;
typedef vector<vii> vvii;

map<ll,ll> din;
ll n,c;
int findex;
ll factor[100];
ll factor2[100];
queue<ii> q1;

void factorize(ll a){
  for(ll i = 2; i*i <= a; ++i){
    ll j = 0;
    while(!(a%i)){
      ++j;
      a /= i;
    }
    if(j){
      factor[findex] = j;
      ++findex;
    }
  }
  if(a > 1){
    factor[findex] = 1;
    ++findex;
  }
}

void decode(ll code){
  findex = 0;
  while(code){
    factor[findex] = code%40;
    ++findex;
    code /= 40;
  }
}

ll code(){
  for(int i = 0; i < findex; ++i) factor2[i] = factor[i];
  sort(factor2,factor2+findex);
  ll sol = 0;
  for(int i = findex-1; i >= 0; --i){
    if(factor2[i] == 0) break;
    sol *= 40;
    sol += factor2[i];
  }
  return sol;
}

void back(int i,int s){
  if(i == findex){
    if(s == 0) return;
    q1.push(ii(code(),s%2));
  }
  else{
//     cout << i << ' ' << factor[i] << endl;
    back(i+1,s);
    --factor[i];
    back(i+1,1+s);
    ++factor[i];
  }
}

ll dina(ll a){
  if(din.find(a) == din.end()){
    din[a] = 0;
    queue<ii> q2;
    decode(a);
    back(0,0);
    while(!q1.empty()){q2.push(q1.front()); q1.pop(); }
    while(!q2.empty()){
      ii aux = q2.front(); q2.pop();
      ll b = aux.first;
      ll d = aux.second;
//       cout << a << ' ' << b << ' ' << d << endl;
      if(d){
	din[a] += 2*dina(b);
	if(b == 0) --din[a];
      }
      else{
	din[a] += 2*(MOD-dina(b));
	if(b == 0) ++din[a];
      }
      din[a] %= MOD;
    }
    din[a] %= MOD;
  }
  return din[a];
}

int main(){
  int t; cin >> t;
  din[0] = 1;
  for(int cass = 0; cass < t; ++cass){
    cin >> n >> c;
    findex = 0;
    factorize(n);
//     cout << n << ' ' << c << endl;
//     for(int i = 0; i < findex; ++i){
//       cout << factor[i] << ' ';
//     }
//     cout << endl;
    cout << (dina(code())*c)%MOD << '\n';
  }
}