#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb emplace_back
#define mt make_tuple
#define gcd __gcd
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%.12Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef vector<int> vi;

const int maxn = 1e5 + 7;
const ll md = 1e9 + 7;

vi fix(vi a) {

	if (a.size() == 0) return a;

	sort(a.begin(), a.end()); reverse(a.begin(), a.end());
	while (a[a.size()-1] == 0) a.pop_back();
	reverse(a.begin(),a.end());
	return a;
}

void show(vi a) {
	for (int x : a) {
		cout<<x<<" , ";
	}
	cout<<endl;
}

void compute(int pos, vi a, vi b);
ll dp(vi a);


map< vi , ll > M;

ll dp(vi a) {
	if (M.count(a) > 0) return M[a];
	compute(0,a,*new vi());
	return M[a];
}

void compute(int pos, vi a, vi b) {
	if (pos == a.size()) {

		b = fix(b);
		if (b==a) return;

		M[a] = (M[a] + dp(b) )%md;
		return;
	}

	rep(j,0,a[pos]) {
		b.pb(j);
		compute(pos+1,a,b);
		b.pop_back();
	}
}

void solve() {
	ll n; cin>>n;

	vi Z;

	Z.clear();
	ll p = 2, m = n;
	while (p*p <= m) {

		if (m%p == 0) {
			int cur = 0;
			while (m%p == 0) {
				cur++; m/=p;
			}
			Z.pb(cur);
		}
		p++;
	}

	if (m > 1) { Z.pb(1); }

	Z = fix(Z);

	ll c; cin>>c;

	cout<<(c * dp(Z))%md<<endl;
}

int main() {

	ios::sync_with_stdio(false); cin.tie(0);

	M.clear(); M[*new vi()] = 1;

	int t; cin>>t;

	while(t--) solve();
}

