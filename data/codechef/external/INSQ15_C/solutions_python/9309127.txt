#include <bits/stdc++.h>
#define lli long long int
#define s(x) scanf("%lld", &x)
#define pb push_back
#define mp make_pair
#define fr first
#define sc second

using namespace std;

vector<lli> primes;
bool visit[10005];

vector<lli> v1[55];
vector<lli> v2[55];

lli arr[55];

void sieve()
{
    lli i,j,k,n,m;

    memset(visit, true, sizeof(visit));

    primes.pb(2);

    for (i = 3; i < 10005; i = i+2) {
        if (visit[i] == true) {
            for (j = 3*i; j < 10005; j = j+2*i) {
                visit[j] = false;
            }
            primes.pb(i);
        }
    }

}

int main()
{
    lli n,i,j,k,K,A,B,sum,sz,l,m,ans,temp,pos;

    sieve();

    s(n);
    s(K);
    s(A);
    s(B);

    for (i = 1; i <= n; ++i) {
        s(j);
        m = 1;

        for (k = 0; k < primes.size(); ++k) {
            l = 0;

            while ((j%primes[k]) == 0) {
                j = j/primes[k];
                ++l;
            }

            if (l > 0)
                m = m*primes[k];
        }

        if (j > 1)
            m = m*j;

        arr[i] = m;
        //cout << arr[i] << " ";
    }
   // cout << endl;


    for (i = 1; i < (1 << (n/2)); ++i) {
        sum = sz = 0;

        for (j = 0; j < n/2; ++j) {
            if (i&(1<<j)) {
                sum = sum + arr[j+1];
                ++sz;
            }
        }

        v1[sz].pb(sum);
    }

   /* for (i = 1; i < 20; ++i) {
        cout << "size " << i << " ";

        for (j = 0; j < v1[i].size(); ++j) {
            cout << v1[i][j] << " ";
        }
        cout << endl;
    }

    cout << endl << endl;*/

    for (i = 1; i < (1 << (n-n/2)); ++i) {
        sum = sz = 0;

        for (j = 0; j < (n-n/2); ++j) {
            if (i&(1<<j)) {
                sum = sum + arr[((n/2)+j+1)];
             //   cout << " jcjc " << (n/2)+j+1 << " " << arr[(n/2)+j+1] << endl;
                ++sz;
            }
        }

        v2[sz].pb(sum);
    }

    for (i = 1; i <= n/2+1; ++i) {
        sort(v2[i].begin(), v2[i].end());
        sort(v1[i].begin(), v1[i].end());
    }


    ans = 0;

    for (i = 1; i <= min(n/2, K); ++i) {
        for (k = 0; k < v1[i].size(); ++k) {
            for (j = 1; (i+j <= K) && (j <= (n-n/2)); ++j) {
                ans = ans + (lli)(upper_bound(v2[j].begin(), v2[j].end(), B-v1[i][k]) - v2[j].begin()) - (lli)(lower_bound(v2[j].begin(), v2[j].end(), A-v1[i][k]) - v2[j].begin());
            }
        }
        //ans = ans + v1[i].size();
    }

    //cout << ans << endl;

    for (i = 1; i <= min(n/2+1LL, K) ; ++i) {
        ans = ans + (lli)(upper_bound(v2[i].begin(), v2[i].end(), B) - v2[i].begin()) - (lli)(lower_bound(v2[i].begin(), v2[i].end(), A) - v2[i].begin());
        //cout << i << " " << ans << endl;
        ans = ans + (lli)(upper_bound(v1[i].begin(), v1[i].end(), B) - v1[i].begin()) - (lli)(lower_bound(v1[i].begin(), v1[i].end(), A) - v1[i].begin());
        //cout << i << " " << ans << endl;
    }

    printf("%lld\n", ans);

    return 0;
}
