#include <iostream>
#include <fstream>
#include <string>
#include <map>
#include <set>
#include <vector>
#include <queue>
#include <stack>
//#include <unordered_set>
#include <iomanip>
#include <utility>
#include <math.h>
#include <algorithm>
#include <functional>
#include <bitset>
 
#define LLI long long int
#define LD long double
#define PB push_back
#define MP make_pair
#define FORi(i, a, b) for(int i = a; i < b ; ++i)
#define FORd(i, a, b) for(int i = a; i > b ; --i)
 
const double Pi=3.1415926;
const int mod=1000000007;
 
using namespace std;
 
int main()
{
	bool* prime=new bool[1000001];
	prime[0] = prime[1] = false;
	FORi(i,2,1000001)
		prime[i]=1;
	for (int i=2; i<=1000000; ++i)
		if (prime[i])
			if (i * 1ll * i <= 1000000)
				for (int j=i*i; j<=1000000; j+=i)
					prime[j] = false;
	int n,k,a,b;
	cin >> n >> k >> a >> b;
	vector<int> v(n),nick(n,1);
	FORi(i,0,n){
		cin >> v[i];
		FORi(j,0,v[i]+1)
			if (prime[j] && v[i]%j==0){
				nick[i]*=j;
			}
	}
	int cnt;
	LLI mask=0,ans;
	vector<vector<int> > sub1(n/2);
	while (++mask<(1<<n/2)){
		ans=cnt=0;
		FORi(i,0,n/2){
			if ((1<<i)&mask){
				ans+=nick[i];
				cnt++;
			}
		}	
		sub1[cnt-1].PB(ans);
	}
	vector<vector<int> > sub2(n-n/2);
	mask=0;
	while (++mask<(1<<(n-n/2))){
		ans=cnt=0;
		FORi(i,0,n-n/2){
			if ((1<<i)&mask){
				ans+=nick[n/2+i];
				cnt++;
			}
		}	
		sub2[cnt-1].PB(ans);
	}
	FORi(i,0,n-n/2)
		sort(sub2[i].begin(),sub2[i].end());
	ans=0;
	FORi(i,0,n/2)
		FORi(i1,0,sub1[i].size())
			if (a<=sub1[i][i1] && sub1[i][i1]<=b && i+1<=k){
				ans++;
			}
	FORi(i,0,n-n/2)
		FORi(i1,0,sub2[i].size())
			if (a<=sub2[i][i1] && sub2[i][i1]<=b && i+1<=k){
				ans++;
			}
	FORi(i,0,n/2)
		FORi(i1,0,sub1[i].size())
			//if (a<=sub1[i][i1] && sub1[i][i1]<=b)
				FORi(j,0,n-n/2)
					if (i+j+2<=k){
						ans+=max(0,upper_bound(sub2[j].begin(),sub2[j].end(),b-sub1[i][i1])-lower_bound(sub2[j].begin(),sub2[j].end(),a-sub1[i][i1]));	
					}
	cout << ans;
    return 0;
}  