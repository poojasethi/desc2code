#include <bits/stdc++.h>
using namespace std;
#define fst first
#define snd second
typedef unsigned long long ull;
typedef long long ll;
typedef pair<int, int> pii;
#define pb push_back
#define for_tests(t, tt) int t; scanf("%d", &t); for(int tt = 1; tt <= t; tt++)
template<typename T> inline T abs(T t) { return t < 0? -t : t; }
const ll modn = 1000000007;
inline ll mod(ll x) { return x % modn; }

vector <int> p;

int criv[1000010], s[40], v[40];

ll res;

int n, k, a, b;

vector <int> ans[40];

void prec(){
	for(int pri=2;pri<1000010;pri++){
		if(criv[pri]) continue;
		p.pb(pri);
		//printf("%d ", pri);
		if(pri > 1010) continue;
		for(ll m = pri;(ll)m*(ll)pri < 1000010;m++){
			criv[m*pri] = 1;
		}
	}
	//printf("\n");
}

void calc(int f){
	for(int i=0;i<(1<<f);i++){
		//printf("gerou bm %d e pegou ", i);
		int ii = i, cnt = 0, som = 0;
		int tam = __builtin_popcount(i);
		if(tam > k) continue;
		while(ii > 0){
			if(ii&1){
				som += v[cnt];
				//printf("%d ", cnt);
			}
			ii /= 2;
			cnt++;
		}
		while(tam <= k){
			ans[tam].pb(som);
			//printf("\n botou %d em ans[%d]\n", som, tam);
			tam++;
		}
	}
}

int bb(int qto, int val){
	int i = 0, f = ans[qto].size()-1;
	while(i < f){
		int m = (i+f+1)/2;
		if(ans[qto][m] <= val)
			i = m;
		else
			f = m-1;
	}
	if(ans[qto][i] > val) i--;
	return i;
}

void gera(int ini, int fim){
	for(int i=0;i<(1<<(fim-ini+1));i++){
		//printf("bm %d pega ", i);
		int ii = i, cnt = ini, som = 0;
		int qto = __builtin_popcount(i);
		if(qto > k) continue;
		while(ii > 0){
			if(ii&1){
				som += v[cnt];
				//printf("%d ", cnt);
			}
			ii /= 2;
			cnt++;
		}
		//printf("\nsom %d faz res += bb(%d,%d): %d - bb(%d,%d): %d\n", som, k-qto, b-som, bb(k-qto, b-som), k-qto, a-som-1, bb(k-qto, a-som-1));
		res += bb(k-qto, b-som) - bb(k-qto, a-som-1);
	}
}

int main (){
	prec();
	scanf("%d%d%d%d", &n, &k, &a, &b);
	for(int i=0;i<n;i++){
		scanf("%d", &s[i]);
		v[i] = 1;
		for(int j: p){
			if(!(s[i]%j))
				v[i] *= j;
		}
		//printf("v[%d] = %d\n", i, v[i]);
	}
	calc(n/2);
	for(int i = 0;i <= k;i++){
		sort(ans[i].begin(), ans[i].end());
	}
	gera(n/2, n-1);
	printf("%lld\n", res);
}