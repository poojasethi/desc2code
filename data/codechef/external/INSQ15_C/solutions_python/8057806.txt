#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long
const int N=1e6+5;
int prime[N];
LL nice[N];
vector<LL> v1[20];
vector<LL> v2[20];
int A[N];
inline void seive() {
    F(i,0,N) nice[i]=1;
    F(i,2,N) {
        if(!prime[i]){
            nice[i]*=i;
            for(int j=i+i;j<N;j+=i) {
                prime[j]=1;
                nice[j]*=i;
            }
        }
    }
}
int main() {
    seive();
    //    F(i,0,20) {
    //  cout<<nice[i]<<" ";
    //  }
    //cout<<endl;
    int n,k,a,b;
    sci(n);sci(k);sci(a);sci(b);
    F(i,0,n) {
        scanf("%d",&A[i]);
        A[i]=nice[A[i]];
    }
    int p1=n/2;
    int p2=n-p1;
    F(i,0,(1<<p1)) {
        int cnt=0;
        LL sm=0;
        F(j,0,p1) {
            if(i&(1<<j)) {
                sm+=A[j];
                cnt++;
            }
        }
        v1[cnt].pb(sm);
    }
    F(i,0,(1<<p2)) {
        int cnt=0;
        LL sm=0;
        F(j,0,p2) {
            if(i&(1<<j)) {
                sm+=A[j+p1];
                cnt++;
            }
        }
        v2[cnt].pb(sm);
    }
    LL ans=0;
    F(i,0,p1+1) sort(v1[i].begin(),v1[i].end());
    F(j,0,p2+1) sort(v2[j].begin(),v2[j].end());
    F(i,0,p1+1) {
        F(j,0,p2+1) {
            if(i+j>k) {
                continue;
            }
            for(int ii=0;ii<v1[i].size();ii++) {
                    LL req1=a-v1[i][ii];
                    LL req2=b-v1[i][ii];
                    int temp=upper_bound(v2[j].begin(),v2[j].end(),req2)-v2[j].begin();
                    int temp2=lower_bound(v2[j].begin(),v2[j].end(),req1)-v2[j].begin();
                    ans+=(temp-temp2);

            }
        }
    }
    cout<<ans<<endl;
}
