/* #################################
    Ashish Kumar - IIIT Hyderabad ##
 ################################ */

#include<bits/stdc++.h>
using namespace std;
#define INF INT_MAX
#define ALL(x) x.begin(),x.end()
#define pb push_back
#define sz(x) int(x.size())
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pd(n) printf("%lf ",n);
#define pdl(n) printf("%lf\n",n);
#define pin(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define pl(n) printf("%lld ",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define scan(v,n) vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
#define ll long long int
ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 
ll A[100];
ll NICE[100];
ll UP[100];
ll nice(ll val){
	ll i,j;
	ll lm = sqrt(val);
	ll ml = 1;
	for(i=2;i<=lm;i++){
		if((val%i)!=0) continue;
		ml*=i;
		while(val%i == 0)
			val/=i;
		if(val<=1)
			break;
	}
	if(val>1)
		ml*=val;
	return ml;
}
vector<ll> Sums[32];
vector<ll> Us[32];
int main()
{
	ll i,j,ja,n,t,k,a,b,cur,ml,csz,csm;
	sl(n);
	sl(k);
	sl(a);
	sl(b);
	ll MID = (n/2);
	ll lup = 0;
	for(i=0;i<n;i++){
		sl(A[i]);
		NICE[i] = nice(A[i]);
		if(i>=MID){
			UP[lup] = NICE[i];
			lup++;
		}
	}
	for(i=0;i<(1<<MID);i++){
		csz = 0, csm = 0;
		//cout << " i = " << i << " -- "  << endl;
		for(j=0;j<MID;j++){
			if((i>>j)&1){
			//	cout << "1";
				csz++;
				csm+=NICE[j];
			}
			else{
			//	cout << "0";
			}
		}
		//cout << " Size = " << csz << endl;
		Sums[csz].pb(csm);
	}
	for(i=0;i<=MID;i++){
		sort(ALL(Sums[i]));
	}
	ll ans = 0;
	for(i=0;i<(1<<lup);i++){
		csz = 0, csm = 0;
		//cout << " i = " << i << " -- " << endl;
		for(j=0;j<lup;j++){
			if((i>>j)&1){
			//	cout << "1";
				csz++;
				csm+=UP[j];
			}
			/*else{
				cout << "0";
			}*/
		}
		//cout << " Size = " << csz << " "<< " Sum = " << csm << " k = " << k << " a = " << a  << " b = " << b << endl;
		
		for(j=0;j<=k;j++){
			if((j+csz)>k) break;
			ans += upper_bound(ALL(Sums[j]),b-csm) - lower_bound(ALL(Sums[j]),a-csm);
			/*cout << " // " << endl;
			for(ja=0;ja<sz(Sums[j+csz]);ja++){
				cout << Sums[j+csz][ja] << " ";
			}
			cout << " // " << endl;*/
			//cout << " j = " << j << " ans = " << ans << endl;
		}
		/*if(csz<=k){
			if(csm>=a && csm<=b)
				cnt
		}*/
	}
	cout << ans << endl;
	return 0;
}
