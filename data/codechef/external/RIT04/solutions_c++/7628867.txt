#include<bits/stdc++.h>
using namespace std;

int L[200010],R[200010];
int a[100002],b[100002] , d[100002];
long long cnt;     
     
void merge(int A[],int p,int q,int r)
     {
        int n1,n2,i,k,j;
        n1=q-p+1;
        n2=r-q;
       
		for(i=1;i<=n1;i++)
           L[i]=A[p+i-1];
        for(j=1;j<=n2;j++)
           R[j]=A[q+j];
    
		L[n1+1]=100000000;
    	R[n2+1]=100000000;
    	i=1;
    	j=1;
    	
		for(k=p;k<=r;k++)
    	{
    		if(L[i]<=R[j])
    		{	
    			A[k]=L[i];
    			i++;
    		}
    		else
    		{
    			A[k]=R[j];
    			j++;
    			cnt += n1+1-i;
    		}
    	}
    }
     
void mergesort(int a[200010],int p,int r)
     {
        if(p<r)
    	{
    		int q=(p+r)/2;
    		mergesort(a,p,q);
    		mergesort(a,q+1,r);
    		merge(a,p,q,r);
    	}
    }
    
int main()
 {
 
 	 int t;
 	 cin>>t;
 	 
 	 while(t--)
 	  {
 	  	int n ,c;
 	  	cin>>n;
 	  	
 	  	for(int i= 1 ;i<=n ;i++)
 	  	 {
 	  	 	cin>>a[i];
 	  	 }
 	  	
 	  	for(int i=1; i<=n ; i++)
 	  	 {
 	  	 	cin>>c;
 	  	 	b[c] = i;
 	  	 }
 	  	
 	  	for(int i=1; i<=n ; i++)
 	  	 {
 	  	 	d[i] = b[a[i]];
 	  	 }
 	  	
 	  	cnt = 0;
		mergesort(d,1,n);
		
		cout<<cnt<<endl;
 	  	
 	  }
 	return 0;
 }