#include<bits/stdc++.h>
using namespace std;
long long  cnt;
void merge(int ar[],int l,int m,int r)
{
	
	int size=r-l+1;
	int temp[size];
	int left=l;
	int right=m+1;
	int j=0;
	while(left<=m && right<=r)
	{
		if(ar[left]<=ar[right])
		{
			temp[j++]=ar[left++];
		}
		else
		{
			cnt+=(m-left+1);
			temp[j++]=ar[right++];
		}
	}
	for(int i=left;i<=m;i++)
	temp[j++]=ar[i];
	for(int i=right;i<=r;i++)
	temp[j++]=ar[i];
	for(int i=0;i<j;i++)
	{
		ar[l+i]=temp[i];
	}
}
void mergesort(int ar[],int l,int r)
{
	
	if(l<r)
	{
		
		int m=(l+r)/2;
		mergesort(ar,l,m);
		mergesort(ar,m+1,r);
		merge(ar,l,m,r);
	}
}
int main()
{
	//ios_base::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
		int n;
		cin>>n;
		int a[n+1],tmp[n+1];
		for(int i=0;i<n;i++)
		{
			cin>>a[i];
			tmp[a[i]]=i+1;
		}
		cnt=0;
	
		int tm=0;
		
		for(int k=0;k<n;k++)
		{
			
			cin>>tm;
		
			a[k]=tmp[tm];
			
			
		}
		
		mergesort(a,0,n-1);
		cout<<cnt<<endl;
		
	}
	return 0;
}
