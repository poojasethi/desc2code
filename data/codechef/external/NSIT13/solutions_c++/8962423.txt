#include <bits/stdc++.h>
#define mx 100008
using namespace std;

typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vi> vvi;
typedef vector<vl> vvl;
typedef vector<double> vd;
typedef vector<vd> vvd;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
typedef vector<pii> vii;
typedef vector<string> vs;

int gcd(int c, int n)
{
    int mi = min(c,n);
    int xm = max(c,n);
    if (mi == 0) return xm;
    while (xm%mi != 0) {
        int m = mi;
        mi = xm%mi;
        xm = m;
    }
    return mi;
}
/*
bool prime[1000000009];
void sieveofEratosthenes(ll m, ll n)
{
    memset(prime, true, sizeof(prime));
    for (ll i=2; i*i <= n; i++) {
        if (prime[i] == true) {
            for (ll j=2*i; j <= n; j+=i) prime[j] = false;
        }
    }
    ll sum = 0;
    for (ll i=2; i <= n; i++) {
        if (prime[i] == true){
            //cout << i << endl;
            sum += i;
        }
    }
    cout <<"SUM : " << sum << endl;
}
*/
ll rever(ll n)
{
    vi a;
    while (n > 0) {
        a.push_back(n%10);
        n /= 10;
    }
    ll x = 0, y = 1;
    for (ll i=a.size()-1; i > -1; i--) {
        x += a[i]*y;
        y = 10*y;
    }
    return x;
}

bool palin(ll x)
{
    vl a;
    while (x > 0) {
        a.push_back(x%10);
        x /= 10;
    }
    for (int i=0; i < a.size()/2; i++) {
        if (a[i] != a[a.size()-1-i]) return false;
    }
    return true;
}
int main()
{
    int t = 10;
    while (t--) {
        int n = 10, x, c = 0;
        bool b[43];
        memset(b, false, sizeof(b));
        while (n--) {
            cin >> x;
            if (b[x%42] == false) {
                c++;
                b[x%42] = true;
            }
        }
        cout << c << endl;
    }
    return 0;
}
