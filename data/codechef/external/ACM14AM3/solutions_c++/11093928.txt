// By Dipankar Jain
#include<bits/stdc++.h>
using namespace std;

#define rep(x, n) for(int x=0; x<n; x++)
#define srep(x, start, end) for(int x=start; x<=end; x++)
#define mp make_pair
#define endline cout<<"\n"; cout<<flush;

typedef long long ll;
typedef unsigned long long ull;


#define TRACE

#ifdef TRACE
#define trace(...) __f(#__VA_ARGS__, __VA_ARGS__)
template <typename Arg1>
void __f(const char* name, Arg1&& arg1){
  cerr << name << " : " << arg1 << std::endl;
}
template <typename Arg1, typename... Args>
void __f(const char* names, Arg1&& arg1, Args&&... args){
  const char* comma = strchr(names + 1, ',');cerr.write(names, comma - names) << " : " << arg1<<" | ";__f(comma+1, args...);
}
#else
#define trace(...)
#endif

const int INF = 0x3f3f3f3f;


int compare( const int* a, const int* b)
{
  return ( *(int *)a - *(int *)b );
}
string s;
int dp[20005][505];
int main()
{
  cin>>s;
  int q;
  cin>>q;
  for(int k=0;k<q;k++)
  {

    for(int i=0;i<20005;i++)
      for(int j=0;j<505;j++)
          dp[i][j]=0;
    int M,l;
    cin>>M>>l;
    dp[0][(s[0]-'0')%M]=1;
    for(int i=1;i<s.size();i++)
    {
      for(int j=0;j<M;j++)
      {
        dp[i][(10*j+(s[i]-'0'))%M]+=dp[i-1][j];
      }
      dp[i][(s[i]-'0')%M]++;
    }
    int ans=0;
    for(int i=0;i<s.size();i++)
      ans+=dp[i][l];
    cout<<ans<<endl;




  }
  
  
  //ios::sync_with_stdio(false);

  return 0;
}
