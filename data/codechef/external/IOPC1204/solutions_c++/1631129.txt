#include<stdio.h>
#include<stdlib.h>
#include<assert.h>
#include<deque>
#include<iostream>
#include<string.h>
#include<math.h>
#include<set>
#include<map>
#include<vector>
#include<algorithm>
#include<bitset>
#include<stack>
#include<queue>
#define MODM 1000000007
#define MAXM 2147483647
#define mp make_pair
#define ff first
#define ss second
#define Pi 3.14159265358979323846264
#define pb push_back
#define pf push_front
#define ppb pop_back
#define ppf pop_front
#define Sort(x) sort(x.begin(),x.end())
#define P pair<int,int>
#define S(x) scanf("%d",&x);
#define SL(x) scanf("%lld",&x);
using namespace std;
typedef long long int lli;
typedef unsigned long long int llu;

lli gcd(lli a,lli b){if(a==0)return(b);else return(gcd(b%a,a));}

lli mult(lli x,lli y,lli mod)
{	
	lli quot=x>>20;
	lli ft=(quot*y)%mod;
	ft=(ft<<20)%mod;
	lli rem=x&((1<<20)-1);
	lli st=(rem*y)%mod;
	return((ft+st)%mod);
}
lli fastpow(lli a,lli n,lli temp,lli mod)
{	
	if(n==1)
	return(mult(a,temp,mod));
	if(n&1)
	temp=mult(a,temp,mod);
	return(fastpow(mult(a,a,mod),n/2,temp,mod));
}

int miller_test(lli n)
{
	lli a,ans,d;
	int s,flag;
	for(int i=0;i<10;i++)
	{
		a=rand()%(n-1);
		if(a<2) a=2;
		
		d=n-1;
		s=0;
		while(!(d&1))
		{
			d>>=1;
			s++;
		}
		ans=fastpow(a,d,1,n);
		if(ans==1 or ans==n-1)
		continue;
		
		flag=0;
		for(int i=1;i<s;i++)
		{
			ans=mult(ans,ans,n);
			if(ans==n-1)
			{
				flag=1;
				break;
			}
			if(ans==1)
			return(0);
		}
		if(flag==0)
		return(0);
	}
	return(1);
}	
int main()
{
	int t;
	lli n;
	S(t);
	while(t--)
	{
		SL(n);
		if(n==0)
		{
			printf("1\n");
			continue;
		}
		else if(n==1)
		{
			printf("3\n");
			continue;
		}
		for(lli i=n+3-(n+2)%2;;i+=2)
		{
			if(miller_test(i))
			{
				printf("%lld\n",i);
				break;
			}
		}
	}
	return(0);
}