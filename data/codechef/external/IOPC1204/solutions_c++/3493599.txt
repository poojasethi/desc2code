#include <iostream>
#include <stdio.h>
#include <stdlib.h>
#include <cmath>
#define MAX 1000000
typedef long long int ll;
using namespace std;
ll modulo(ll a,ll b,ll c);
ll  mulmod(ll a,ll b,ll c);
bool Miller_Rabin(ll p);
bool primes[MAX+1];
int iter=10;
/*ll modulo(ll a,ll b,ll c)
{
	ll res=1,x=a;
	while(b>0)
	{
		if(b%2==1)
		res=mulmod(res,x,c);
		x=mulmod(x,x,c);
		b/=2;
	}
	return res%c;
}
ll mulmod(ll a,ll b, ll c)
{
	ll x=0,y=a;
	while(b>0)
	{
		if(b%2==1)
		x=(x+y)%c;
		y=(2*y)%c;
		b/=2;
		
	}
	return x%c;
}*/
const ll mask = (1<<20)-1;
 
ll mulmod(ll a , ll b , ll c)
{
        ll z= (a*(b&mask))%c  +  (((a<<20)%c)*(b>>20))%c;
        while (z >= c)
                z -= c;
        return z; 
}
 
ll modulo(ll a, ll b , ll c)
{
        ll res = 1;
        while (b > 0)
        {
                if (b & 1)
                      res   = mulmod(res , a, c);
                a = mulmod(a , a, c);
                b >>= 1;
        }
        return res;
}
 
bool Miller_Rabin(ll p)
{
	if(p<2)
	return false;

	
        if (p % 2 == 0) return p == 2 ;
        if (p % 3 == 0) return p == 3;
        if (p % 5 == 0) return p == 5;
        if (p % 7 == 0) return p == 7;
        if (p % 11 == 0) return p == 11;
        if(p  % 13==0)   return p ==13;
	ll s=(p-1);
	while(s%2==0)
	{
		s/=2;
	}
	for(int i=0;i<iter;i++)
	{
		ll a=rand()%(p-1)+1,temp=s,mod;
		mod=modulo(a,temp,p);
		while(temp!=(p-1) && mod!=1 && mod!=(p-1))
		{
			mod=mulmod(mod,mod,p);
			temp*=2;
		}
		if(mod!=(p-1) && temp%2==0)
		return false;
	}
	return true;
	
	
}
void sieve()
{
	primes[1]=1;
	for(int i=4;i<=MAX;i+=2)
	primes[i]=1;
	for(int i=3;i*i<=MAX;i+=2)
	{
		for(int j=i*i;j<=MAX;j+=2*i)
		primes[j]=1;
	}
	for(int i=1;i<=MAX;i++)
	primes[i]=not(primes[i]);
	
}
ll solve(ll p)
{
	if(p==0)
	return 1;
	p+=2;
	if(p==2)
	return 2;
	if(p%2==0)
	p++;
	for(ll i=p;;i+=2)
	{
		if(i<=MAX)
		{
			if(primes[i]==1)
			return i;
		}
		if(Miller_Rabin(i)==1)
		return i;
	}
}

int main()
{
	sieve();
    int t;
    ll X,ans;
    scanf("%d",&t);
    while(t--)
    {
    	
    	scanf("%lld",&X);
    	ans=solve(X);
        printf("%lld\n",ans);
    	
          
    }
    return 0;
}