#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include<string>
#include<stack>
#include <algorithm>
#define ll long long
#define ld long double
#define maxn 201
using namespace std;
struct poly
{
vector<ll> arr;
};
poly operator - (poly a,poly b)
{
	for(int i=0;i<maxn;++i)
	a.arr[i]-=b.arr[i];
	return a;
}
poly operator + (poly a,poly b)
{
	for(int i=0;i<maxn;++i)
	a.arr[i]+=b.arr[i];
	return a;
}
poly operator * (poly a,poly b)
{
	poly ans;
	ans.arr.resize(maxn);
	for(int i=0;i<maxn;++i)ans.arr[i]=0;
	for(int i=0;i<maxn;++i)
	{
		for(int j=0;j<=i;++j)
		{	
			ans.arr[i]+=a.arr[j]*b.arr[i-j];		
		}
	}
	return ans;
}

void doit()
{
string str;
cin>>str;
int len=str.size();
stack<poly> mys;
poly one,iks;
one.arr.resize(maxn);
iks.arr.resize(maxn);
for(int i=0;i<maxn;++i)
{
one.arr[i]=0;
iks.arr[i]=0;
}
one.arr[0]=1;
iks.arr[1]=1;
for(int i=len-1;i>=0;i--)
{
//98039cerr<<i<<endl;
if(str[i]=='x')
{
mys.push(iks);
}
else if(str[i]=='M')
{
poly f,g;
f=mys.top();
mys.pop();
g=mys.top();
mys.pop();
mys.push(f*g);
}
else if(str[i]=='m')
{
poly f,g;
f=mys.top();
mys.pop();
g=mys.top();
mys.pop();
mys.push(one-(one-f)*(one-g));
}
}
poly ans=mys.top();
long double val=0;
for(int i=0;i<maxn;++i)val+=i*((long double)ans.arr[i]/((long double)(i+1)));
printf("%0.10Lf",(long double)val);
}
int main()
{
int t;
cin>>t;
while(t--)
{
doit();
cout<<endl;
}
return 0;
}