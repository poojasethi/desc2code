#include <iostream>
#include <stdio.h>
#include <stack>

using namespace std;

const int MAXD = 100;

struct poly{
  double c[MAXD];
  poly(){
    for(int i=0;i<MAXD;i++) c[i] = 0;
  }
};


poly mul(poly a, poly b){
  poly ret;
  for(int i=0; i<MAXD; i++)
    for(int j=0;j<MAXD;j++)
      ret.c[i+j] += a.c[i] * b.c[j];
  return ret; 
}

poly subone(poly x){
  poly ret; for(int i=0;i<MAXD;i++) ret.c[i] = - x.c[i];
  ret.c[0] += 1;
  return ret; 
}


int main(){
  int t;
  cin >> t;
  poly X;
  X.c[1] = 1;
  while(t--){
    string a; cin >> a;

    stack<poly> s;
    poly x, y; 
    for(int i=a.length()-1; i>=0; i--){
      switch(a[i]){
      case 'x':
        s.push(X); break;
      case 'm':
        x = s.top(); s.pop();
        y = s.top(); s.pop();
        s.push(subone(mul(subone(x), subone(y)))); break;
      default:
        x = s.top(); s.pop();
        y = s.top(); s.pop();
        s.push(mul(x, y)); break;
      }
    }
    x = s.top(); 
    double ans = 0;
    for(int i=1; i<MAXD; i++){
      ans += (x.c[i] * i)/(i+1.);
    }
    printf("%0.9f\n", ans); 
  }
}
