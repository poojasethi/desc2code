/*-->>Light Cavalry<<--*/

//Imp header files
#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <set>
#include <vector>
#include <stack>
#include <queue>
#include <sstream>
#include <map>
#include <list>
#include <deque>
#include <bitset>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iomanip>
#include <sstream>
#include <ctime>
#include <cassert>
#include <climits>
using namespace std;

//defined I/O
#define si(n) scanf("%d",&n)
#define sli(n) scanf("%ld",&n)
#define slli(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define GetLine(n) getline(cin,n);
#define ss(n) scanf("%s",n)
#define pi(n) printf("%d",n)
#define pli(n) printf("%ld",n)
#define plli(n) printf("%lld",n)
#define pf(n) printf("%lf",n)
#define ps(n) printf("%s",n)
#define newLine printf("\n")
#define space printf(" ")
#define SWAP(a,b,t) t=a,a=b,b=t
#define Loop(i,a,n) for(__typeof(n) i(a); i<n; i++)
#define ULL unsigned long long int
#define LL long long int 

#define MOD 1000000007
//Imp functions
int gcd(int a, int b){if(b == 0)return a;else return gcd(b,a % b);}

#define get getchar_unlocked
inline int scan()
{
	int n=0,s=1;
	char p=get();
	if(p=='-') s=-1;
	while((p<'0'||p>'9')&&p!=EOF&&p!='-') p=get();
	if(p=='-') s=-1,p=get();
	while(p>='0'&&p<='9') { n = (n<< 3) + (n<< 1) + (p - '0'); p=get(); }
	return n*s;
}



int main()
{
	
	int n;
	n=scan();
	int v=1;
	while(n!=0)
	{
		int a[n],b[n];
		int check[1001];
		memset(check,0,sizeof(check));
		map<int ,int > mp;
		Loop(i,0,n)
		{
			a[i]=scan();
			b[i]=a[i];
			
			
		}
		sort(b,b+n);
		
		Loop(i,0,n)
		{
			mp.insert ( std::pair<int,int>(b[i],i));
		}
		
		int mi=b[0];
		int ans=0;
		for(int i=0;i<n;i++)
		{
			int pos,count=0,temp=0,temp1=0;
			
			if(a[i]!=b[i] && check[b[i]]==0)
			{
				check[b[i]]=1;
				int num=a[i];
				//temp+=num;
				check[num]=1;
				while(num!=b[i])
				{
					//cout<<temp<<endl;
					count++;
					temp+=num;
					pos=mp[num];
					num=a[pos];
					check[num]=1;
					//cout<<count<<" "<<num<<endl;
				}
				temp+=(count)*b[i];
				//cout<<temp<<endl;
				
				if(mi!=b[i])
				{
					temp1=temp-(count*b[i]);
					temp1+=2*(mi+b[i]);
					temp1+=count*mi;
					
					
				}
				if(temp1>0)
				ans+=min(temp,temp1);
				else
				ans+=temp;
				
			}
			else
			continue;
			
			
			
			
		}
		
		cout<<"Case "<<v++<<": "<<ans<<endl;
		
		
		
		
		
		
		
		
		n=scan();
	}
	
	return 0;
}





