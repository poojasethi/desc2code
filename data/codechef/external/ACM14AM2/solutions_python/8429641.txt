#include<bits/stdc++.h>
#define For(i,i1,i2) for(int i=i1;i<i2;i++)
#define ll long long
#define pii pair<int,int>
#define F first
#define S second
#define V vector<int>
#define MP make_pair
#define PB push_back
#define MOD 1000000007
#define CLR(x) memset(x,0,sizeof(x));
using namespace std;
V adj[200001];
int ty[200001];
int arr[200001],bit1[500001],bit2[500001],din[100001],dout[100001],level[200001],t;
void dfs(int u,int p,int lev){
    level[u]=lev;
    din[u]=t++;
    For(i,0,adj[u].size()){
        if(adj[u][i]!=p){
            dfs(adj[u][i],u,lev+1);
        }
    }
    dout[u]=t;
}
void update(int nod,int l,int r,int ind,int *bit){
    if(l>ind or r<ind)
        return;
    if(l==r){
        bit[nod]=1;
        return;
    }
    int mid=(l+r)/2;
    update(2*nod,l,mid,ind,bit);
    update(2*nod+1,mid+1,r,ind,bit);
    bit[nod]=bit[2*nod]+bit[2*nod+1];
}
int query(int nod,int l,int r,int i,int j,int *bit){
    if(l>j or j<i or r<i)
        return 0;
    if(l>=i and r<=j)
        return bit[nod];
    int mid=(l+r)/2;
    int tmp=query(2*nod,l,mid,i,j,bit)+query(2*nod+1,mid+1,r,i,j,bit);
    //cout<<tmp<<" "<<l<<" "<<r<<endl;
    return tmp;
}
void print(int nod,int l,int r){
    cout<<bit1[nod]<<" "<<bit2[nod]<<" "<<l<<" "<<r<<endl;
    int mid=(l+r)/2;
    if(l!=r){
        print(2*nod,l,mid);
        print(2*nod+1,mid+1,r);
    }
}
int main(){
    ios::sync_with_stdio(false);
    int tt;
    cin>>tt;
    while(tt--){
        int m;
        cin>>m;
        For(i,0,m+1)
        adj[i].clear();
        int n=1;
        CLR(bit1);CLR(bit2);CLR(din);CLR(dout);
        For(i,0,m){
            cin>>ty[i]>>arr[i];
            if(ty[i]==0){
                adj[arr[i]].PB(n);
                adj[n].PB(arr[i]);
                n++;
            }
        }
        t=0;
        dfs(0,-1,1);
        n=1;
        update(1,0,t,0,bit1);
        For(i,0,m){
            if(ty[i]){
                //cout<<"in out time "<<din[arr[i]]<<" "<<dout[arr[i]]<<endl;
                ll a=query(1,0,t,din[arr[i]],dout[arr[i]]-1,bit1);
                ll b=query(1,0,t,din[arr[i]],dout[arr[i]]-1,bit2);
                //print(1,0,t);
                ll ans=(a*(a-1)/2)+(b*(b-1)/2);
                cout<<ans<<endl;
            }
            else{
                if(level[n]%2)
                update(1,0,t,din[n],bit1);
                else
                    update(1,0,t,din[n],bit2);
                //cout<<query(1,0,t,din[n],din[n],bit1)<<endl;
                n++;
            }
        }
    }
}
