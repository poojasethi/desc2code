#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<map>
#include<utility>
#include<set>
#include<stack>
#include<list>
#include<deque>
#include<bitset>
#include<iomanip>
#include<cstring>
#include<sstream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<cmath>
#include<cctype>


#define pb push_back
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<=b;i++)
#define ren(i,a,b) for(int i=a;i>=b;i--)
#define ff first
#define ss second
#define pll pair<long long int,long long int>
#define pii pair<int,int>
#define vll vector<long long int>  
#define vii vector<int>
#define gi(n) scanf("%d",&n)
#define gll(n) scanf("%lld",&n)
#define gstr(n) scanf("%s",n)
#define gl(n) cin >> n
#define oi(n) printf("%d",n)
#define oll(n) printf("%lld",n)
#define ostr(n) printf("%s",n)
#define ol(n) cout << n
#define os cout<<" "
#define on cout<<"\n"
#define o2(a,b) cout<<a<<" "<<b
#define all(n) n.begin(),n.end()
#define present(s,x) (s.find(x) != s.end()) 
#define cpresent(s,x) (find(all(s),x) != s.end()) 
#define tr(container, it) for(__typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
using namespace std;
 
typedef unsigned long long int ull;
typedef long long int ll;
typedef vector<vector<ll> > mat;


pii q[200005];
vii v[200005];
int in[200005],out[200005],h[200005],vis[200005],bit[2][200005],m,ti;

void upd(int par,int i)
{
	while(i<=200002)
	{
		bit[par][i]++;
		i+=(i&(-i));
	}
}



void dfs(int at,int hh=0)
{
	vis[at]=1;
	in[at]=++ti;
	h[at]=hh;
	tr(v[at],it)
	if(vis[*it]==0)
	dfs(*it,hh+1);
	out[at]=++ti;
}

ll sum(int par,int i)
{
	ll s=0;
	while(i)
	{
		s+=bit[par][i];
		i-=i&(-i);
	}
	return s;
}
int main()
{ios_base::sync_with_stdio(false);
cin.tie(NULL);
int t;
gl(t);
while(t--)
{
	cin>>m;int x=0;ti=0;
	rep(i,0,2*m)
	{
		v[i].clear();
		in[i]=out[i]=h[i]=vis[i]=bit[0][i]=bit[1][i]=0;
	}
	rep(i,0,m-1)
	{
		cin>>q[i].ff>>q[i].ss;
		if(q[i].ff==0)
		{
		     x++;
			 v[q[i].ss].pb(x);     	
		}
	}
	dfs(0);
	x=0;
	upd(h[x]%2,in[x]);
	rep(i,0,m-1)
	{
		if(q[i].ff==0)
		{
			x++;
			upd(h[x]%2,in[x]);
		}
		else
		{
			ll ans1=sum(0,out[q[i].ss]-1)-sum(0,in[q[i].ss]-1);
			ans1=ans1*(ans1-1);ans1/=2;
			ll ans2=sum(1,out[q[i].ss]-1)-sum(1,in[q[i].ss]-1);
			ans2=ans2*(ans2-1);ans2/=2;
			ol(ans1+ans2);on;
		}
	}
}
return 0;
}