#include <iostream>
#include <cstdio>
#include <vector>
#include <cstring>
#include <queue>
using namespace std;
#define MAX_M 100005
vector<int> adj[MAX_M];
int par[MAX_M];
int tree1[MAX_M],tree2[MAX_M];
int low[MAX_M],up[MAX_M];
int input1[MAX_M],input2[MAX_M],dept[MAX_M];
int time_stamp;
void dfs(int node,int d)
{
	low[node]=time_stamp++;
	dept[node]=d;
	for(int i=0;i<adj[node].size();i++)
	{
		int temp=adj[node][i];
		dfs(temp,d+1);
	}
	up[node]=time_stamp;
}
void update(int idx,int val,int flag)
{
	if(flag==1)
	{
		while(idx<=100003)
		{
			tree1[idx] +=val;
			idx+=(idx& -idx);
		}
	}
	else
	{
        while(idx<=100003)
        {
        	tree2[idx] +=val;
        	idx+=(idx& -idx);
        }
	}
}
int read(int idx,int flag)
{
	int sum=0;
	if(flag==1)
	{
		while(idx>0)
		{
			sum+=tree1[idx];
			idx -= (idx & -idx);
		}
	}
	else
	{
		while(idx>0)
        {
            sum+=tree2[idx];
            idx -= (idx & -idx);
        }
	}
	return sum;
}
int main()
{
	int t,m,type,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&m);
		time_stamp=1;
		for(int i=0;i<=m;i++)
		{
			adj[i].clear();
		}
		int l=0;
		par[0]=-1;
		int level;
		for(int i=1;i<=m;i++)
		{	
			scanf("%d",&type);
			scanf("%d",&n);
			input1[i-1]=type;
			input2[i-1]=n;
			if(type==0)
			{
				l++;
				adj[n].push_back(l);
				par[l]=n;
			}
		}
		dfs(0,0);
		//cout<<"\n*\n";
		memset(tree1,0,sizeof(tree1));
		memset(tree2,0,sizeof(tree2));
		update(low[0],1,dept[0]%2);
		l=0;
		for(int i=0;i<m;i++)
		{
			if(input1[i]==0)
			{
				l++;
				update(low[l],1,dept[l]%2);
				//update(up[l],-1,depth[l]%2);
			}
			else
			{
				long long ans1 = (long long)read(low[input2[i]]-1,0);
				long long ans2 = (long long)read(up[input2[i]]-1,0);
				long long ans3 = (long long)read(low[input2[i]]-1,1);
				long long ans4 = (long long)read(up[input2[i]]-1,1);
				//cout<<"ans1 : "<<ans1<<"  ans2: "<<ans2<<"  ans3: "<<ans3<<"  ans4: "<<ans4<<"\n";
				ans1 = ans2 - ans1;
				ans3 = ans4 - ans3;
				ans1 = ans1*(ans1-1);
				ans1 = ans1/2;
				ans3 = ans3*(ans3-1);
				ans3 = ans3/2;
				ans1 = ans1+ans3;
				printf("%lld\n",ans1);
			}
		}
	}
	return 0;
}
