//
//  main.cpp
//  ALMA02
//
//  Created by Dhruv Mullick on 30/01/15.
//  Copyright (c) 2015 Dhruv Mullick. All rights reserved.
//

#include <bits/stdc++.h>
using namespace std;

int main(int argc, const char * argv[])
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int t,i,dig,l,cons,a;
    vector<int> V;
    
    long long n,k,n1,mult,num;
    long long X[17]={9, 189, 2889, 38889, 488889, 5888889, 68888889, 788888889, 8888888889, 98888888889, 1088888888889, 11888888888889, 128888888888889, 1388888888888889, 14888888888888889, 158888888888888889, 1688888888888888889};
    
    cin>>t;
    
    while(t--)
    {
        cin>>n>>k;
        
        n1 = k;
        V.clear();
        
        for(i=0;i<18;i++)
        {
            if(X[i]>=k)
                break;
        }
        
        dig = i+1;
        i = 16;
        
        while(n1>9)     //discard numbers with less number of indices
        {
            if(n1<=X[i])
                i--;
            else
            {
                n1 = n1-X[i];
                break;
            }
        }
        
        l = n1%dig;
        
        if(l==0)
            l = dig;
        
        //ie we we want the position of the lth digit of some number
        
        cons = 0;
        
        if(dig!=1)
        {
            if(n1%dig==0)
                num = n1/dig -1;
            
            else
                num = n1/dig ;
            
            mult = 1;
            
            while(num>0)
            {
                V.push_back(num%10);
                num=num/10;
            }
            
            i=(int)V.size();
            i++;
            
            for(;i<=dig;i++)
                V.push_back(0);
            
            reverse(V.begin(), V.end());
            
            V[0]+=1;
            
            cout<<V[l-1]<<"\n";

        }
        
        else
            cout<<n1<<"\n";
    
    
    }
    
    return 0;
}
