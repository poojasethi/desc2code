#include<stdio.h>
#include<math.h>
inline long long fastread()
{
    long long n=0,s=1;
    char p=getchar();
    if(p=='-')
        s=-1;//p=getchar();
    while((p<'0' || p>'9') && p!=EOF && p!='-')
        p=getchar();
    if(p=='-')
        s=-1,p=getchar();
      while(p>='0'&&p<='9')
    {
        n=(n<<3)+(n<<1)+(p-'0');
        p=getchar();
    };
    return n*s;
}
long long arr[17][3];
void precompute()
{
  arr[1][1]=1;
  arr[1][2]=9;
  int i;
  long long num=189,k;
  arr[2][1]=10;arr[2][2]=189;k=900;
  for(i=3; i<=15; i++)
  {
    arr[i][1]=num+1;
    num=num+(k*i);
    arr[i][2]=num;
    k=k*10;
  }
  /*for(i=1; i<=15; i++)
  {
      printf("%lld %lld\n",arr[i][1],arr[i][2]);
  }*/
}
long long power(long long num,long long p)
{
    long long i,ans=1;
    for(i=1; i<=p; i++)
        ans=ans*10;
    return ans;
}
int main()
{
  long long n,k,i,j,t,num,num1,num2,pos,ppos,r,p;
  t=fastread();
  precompute();
  while(t--)
  {
    n=fastread();
    k=fastread();
    if(k>=1 && k<=9)
        printf("%d\n",k);
    else{
    for(i=1; i<=15; i++)
    {
      if(k>=arr[i][1] && k<=arr[i][2])
      {
       //  printf("llp %lld %lld\n",arr[i][1],i);
          p=i-1;
        num=power(10,p);
        //num=10;
        num1=(num*10)-1;
        pos=k-arr[i-1][2];
        ppos=pos/i;
        if(pos%i!=0)
            ppos++;
        num2=num+ppos-1;
        pos=pos-((ppos-1)*i);
     //   printf("dds%lld %lld %lld %lld %lld\n",pos,ppos,num2,num,num1);
        r=i-pos+1;
        for(j=1; j<=r-1; j++)
        {
          num2=num2/10;
        }
        printf("%d\n",num2%10);
       }
     }
   }}
   return 0;
 }

