#include<bits/stdc++.h>
using namespace std;
#define debug(x) cerr<<#x<<" " <<x<<endl;
int main()
{
    int t,i;
    scanf("%d",&t);
    while(t--)
    { char tomar[20]; // max 15 digits
        long long n,k,hue1,hue2,number;
        scanf("%lld %lld",&n,&k);
        hue1=k;
        for(i=1;i<=16;i++)
        {
            hue1=hue1-9*(pow(10,i-1))*i;
            if(hue1<=0)
                break;
        }
        hue1+=9*pow(10,i-1)*i;
         /* try to read through next 4-5 lines to understand the concept*/
        /* now i'll try to find the number which contains that digit*/
        /*  I know it consists of i digits so this number must be actually has to be greater than 10^(i-1) */
        /* what i know now is it is greater than this number and it is hue1 number infront of last i-1 digit number */
        /* now we notice something . if a number has i digits then last digit index/i is always greater than other */
     /* example 133 [ 1-> index=1 so 1/3=0; 3-> index=2 so 2/3=0  index=3 3/3=1; wait what the fack */
     /* so what we do is decrease there value by 1 [0/3=1/3=2/3=andaa] */
      number=pow(10,i-1);
       hue1--;
       number+=hue1/i;
       sprintf(tomar,"%lld",number);
       printf("%c\n",*(tomar+hue1%i) );

    }
    return 0;
}
