 
Today, Mr. Joseph, our maths professor, taught us about the Fibonacci sequence and its applications in various places. He concluded the lesson by giving us a computational problem, which he stated as simple.
 You are given two non-negative integers X and Y, you have to calculate the sum
 (F(X) + F(X + 1) + ... + F(Y)) mod 1000000007, where F(N)=F(N-1)+F(N-2),N ≥ 2.

 

Input
The first line contains an integer T (the number of test cases). Then, T lines follow. Each test case consists of a single line with two non-negative integers X and Y.
 

Output
For each test case you have to output a single line containing the answer.
Since the answer can be huge i.e go out of the bounds of integers, You are required to print the answer MOD 10^9+7
 

Constraints

1 ≤ T ≤ 1000
0 ≤ X ≤ Y ≤ 1000

 

Example
Input:
3
2 6
3 5
10 19
170 725
Output:
19
10
10857
901453553

Explanation
The fibonacci series goes like this 1, 1, 2, 3, 5, 8, 13, 21,.... 
For the first test case, we need to calculate the sum of the Fibonacci series from its 2nd term till 6th. ( i.e 1 + 2 + 3 + 5 + 8 ) = 19%(10^9+7) == 19
NOTE:  Use long int or long long int for data storage to avoid overflow. 
 HINT:  From the 100th term onward, the fibonacci numbers become too large to be stored in any integer in C or C++. 
 GIVEAWAY:  ( a + b + c + ...)%m = ( a%m + b%m +c%m + ....)%m

 
