
Problem Description 

This time Ignus 15 is back with amazing pronites. There are two ways for attending the pronites:
1. Buy the tickets (Or arrange for a pass).
2. Crack the entrance door lock.
As Timo is on a budget (after Valentines' Day celebration), she can't go for the first option. Help her out with the second way.
The problem is simple. The entrance door lock generates four random strings s1, s2, s3 and s4 of the same length n. You must find out the maximum possible length m of any string s so that:
For 1 <= i <= m,
there exist integers a(i), b(i), c(i) and d(i) belonging to [1, n] such that:
s[i] = s1[a(i)] where a(1) < a(2) < a(3) ... < a(m)
s[i] = s2[b(i)] where b(1) < b(2) < b(3) ... < b(m)
s[i] = s3[c(i)] where c(1) < c(2) < c(3) ... < c(m)
s[i] = s4[d(i)] where d(1) < d(2) < d(3) ... < d(m)


Input
First line contains T, the number of test cases.
Each test cases has 5 lines of input, the first line has the number n, length of the generated strings.
The other 4 lines of a test case contain strings s1, s2, s3 and s4 respectively.
 

Output
For each test case, print the value of m in a single line.
 

Constraints

1 ≤ T ≤ 10
1 ≤ n ≤ 30
All characters in all strings are lowercase English alphabets.

 

Example
Input:
3
10
abcdefghij
abcdefijgh
ababckjdge    
cdeabcjdeg
2
ab
ab
ab
bb
3
abb
aba
bab
bab

Output:
5
1
2
 

Explanation

Case 1: abcde or abcdg can be the required string s here. So maximum length is 5
Case 2: The only possible string is b, therefore maximum length is 1
Case 3: ab is the only possible string. Hence, maximum length is 2

