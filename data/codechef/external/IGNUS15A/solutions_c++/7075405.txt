#include<bits/stdc++.h>
using namespace std;

int dp[32][32][32][32];

int MAX(int a,int b, int c, int d) {
return max(max(a,b),max(c,d));
}
int LCS(char a[],char b[],char c[],char d[],int n,int m,int k,int l)
{
    if(n==-1 || k==-1 || m== -1 || l==-1)
        return 0;
    if(dp[n][m][k][l]!=-1)
        return dp[n][m][k][l];
    if(a[n]==b[m] && c[k]==d[l] && a[n]==c[k])
        return dp[n][m][k][l]=1+LCS(a,b,c,d,n-1,m-1,k-1,l-1);
        return dp[n][m][k][l]=MAX(LCS(a,b,c,d,n-1,m,k,l),LCS(a,b,c,d,n,m-1,k,l),LCS(a,b,c,d,n,m,k-1,l),LCS(a,b,c,d,n,m,k,l-1));
}
int main()
{
    int t;cin>>t;
    while(t-- )
    {
        int n;cin>>n;
        memset(dp,-1,sizeof(dp));
        char a[100],b[100],c[100],d[100];
        scanf("%s%s%s%s",a,b,c,d);
        cout<<LCS(a,b,c,d,n-1,n-1,n-1,n-1)<<endl;
    }
}
