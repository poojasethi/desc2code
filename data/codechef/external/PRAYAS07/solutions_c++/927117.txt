#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <cmath>
#include <algorithm>


using namespace std;
#define ll long long int 

/******** testing **********
map<int,int> mp;
vector<int> vi;
int pre[7];
int tot;
void dfs( int sum , int i , int n ) {
	if( i >= n ) {
		int tsum = 0;for( int i = 0;i  < n; i++ ) tsum += pre[i];
		if( !mp[tsum] ) { vi.push_back(tsum);mp[sum] = 1;for(int i = 0; i < 5; i++ ) cout << pre[i] << " ";cout << "\n"; } 
		return;
	}
	pre[i] = sum-1;
	dfs( sum-1 , i+1 , n );
	pre[i] = sum+1;
	dfs( sum+1 , i+1 , n );
}
int main() {
	mp.clear() , vi.clear();pre[0] = 0;
	int n , x; cin >> n >> x;
	dfs( 0  , 1 , n );
	int sz = vi.size();;
	sort( vi.begin() , vi.end() );
	for( int i = 0; i < sz; i++ ) cout << vi[i] << "*x\n";	
	return 0;
}
********** done *************/


/*** Main code********/
int  main() {

	int Q;scanf("%d" , &Q);
	while( Q-- ) {
		int t , s , n;		
		scanf("%d %d %d" ,&t , &s , &n );
		printf("%d %d %d " , t , s , n );
		if( !t ) {	
			if( s == 0 ) {
				ll range = ( (ll)(n)*(ll)(n-1) )/2ll;
				if( range%2 ) cout << 0 << "\n";
				else cout << 100000000 << "\n";
				continue;
			}
			if( s < 0 ) s *= -1;

			int ST = sqrt(s) , cnt = 0 ;
			ll range = ( (ll)(n)*(ll)(n-1) )/2ll;
			

			if( range%2 == 0 ) { 	
				for( int i = 1; i <= ST; i++ ) {		
					if( s%i == 0  ) {
						int val = s/i;if( val%2 == 0 && (val>=0 && val <= range ) ) cnt++; 
						    val = i;  if( val%2 == 0 && (val>=0 && val <= range ) ) cnt++; 
					}
				}
				if( ST*ST == s ) if( ST%2 == 0 && (ST>=0) && (ST<=range) ) cnt--;
			}
			else {
				for( int i = 1; i <= ST; i++ ) { 
					if( s%i == 0  ) {
						int val = s/i;if( (val%2) && ( val>0 && val <= range) ) cnt++;
						    val = i;  if( (val%2) && ( val>0 && val <= range) ) cnt++;
					}
                        	}
                        	if( ST*ST == s ) if( (ST%2) && (ST>0) && (ST<=range) ) cnt--;
			}
			printf("%d\n" , cnt );
		}
		else if( t == 1 ){		
			int smx = 100000001;
			int ts = s;
			if( s == 0 ) {
                                smx = min( smx , 1 ); 
                        }
			else {
				int ts = s;
                   		if( s < 0 ) s *= -1;

                       	 	int ST = sqrt(s);
				ll range =( (ll)(n)*(ll)(n-1) )/2ll;

		
		       		if( range%2 == 0  ) {
                                	for( int i = 1; i <= ST; i++ ) {
                                       	 	if( s%i == 0  ) {
                                                	int val = s/i;if( val%2 == 0 && (val>=0 && val <= range) ) smx = min(smx , i);
                                                    	val = i;if( val%2 == 0 && (val>=0 && val <= range) ) smx = min(smx , s/i);
                                        	}
                                	}
                        	}
                        	else {
                                	for( int i = 1; i <= ST; i++ ) {
                                        	if( s%i == 0  ) {
                                                	int val = s/i;if( (val%2) && ( val>0 && val <= range) ) smx = min(smx , i);
                                                    	val = i;  if( (val%2) && ( val>0 && val <= range) ) smx = min(smx , s/i);
						}
                                	}
                        	}
			}		
				
			ll S = (ll)ts/(ll)smx;
			S += ((ll)(n)*(ll)(n-1))/2ll;
			S /= 2ll;	
			printf("0");ll last = 0;
			for( int i = n-1; i>= 1; i-- ) {			
				if( i <= S ) S -= i , last += smx; else last -= smx; 
				printf(" %lld" , last );
			}
			printf("\n");
		}
	}
	return 0;
}
/******* done ***********/
