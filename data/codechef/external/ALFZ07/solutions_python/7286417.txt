#include <bits/stdc++.h>

using namespace std;

int *lps;

void computeLPS (char *pat, int *lps, int m)
{
    int len=0,i=1;

    lps[0]=0;

    while (i<m)
    {
        if (pat[i]==pat[len])
        {
            len++;
            lps[i]=len;
            i++;
        }
        else
        {
            if (len!=0)
                len=lps[len-1];

            else
            {
                lps[i]=0;
                i++;
            }
        }
    }

    return ;
}

int KMPsearch (char *pat, char *str)
{
    int m,n,j=0,i=0,f=0;

    m=strlen(pat);
    n=strlen(str);

    lps=(int*)calloc(sizeof(int),m);

    computeLPS (pat,lps,m);

    while (i<n)
    {
        if (pat[j]==str[i])
        {
            j++;
            i++;
        }
        if (j==m)
        {
            f++;
            j=lps[j-1];
        }
        else if (i<n && pat[j]!=str[i])
        {
            if (j!=0)
                j=lps[j-1];
            else
                i++;
        }
    }

    return f;
}

int main()
{
    int t,i,j;
    char str[100009],pat[100009];
    scanf ("%d",&t);
    getchar();
    while (t--)
    {
        scanf ("%s",str);
        scanf ("%s",pat);
        j=KMPsearch (pat,str);
        printf ("%d\n",j);
    }
    return 0;
}
