// 31.01.2016 CodeChef

/*
Triangle
*/

# include <cstdio>
# include <iostream>
# include <cmath>
# include <algorithm>
# include <vector>

# define sqr(x) ((x)*(x))

# define fi first
# define se second


using namespace std;


typedef pair <int, int>  Pair;


//const int N = 100025;
const double eps = 1e-9;
const double PI = 3.14159265358979323846;


int n;
//long long int k, m;
Pair p1, p2, p3;

double Dist (Pair t1, Pair t2);

int main ()
{
#ifndef ONLINE_JUDGE
   freopen ("input.txt","r",stdin);
   freopen ("output.txt","w",stdout);
#endif

   int tt, subtask;
   scanf ("%d\n%d\n", &subtask, &tt);
   for ( int ii=0; ii < tt; ii++ )
   {
      scanf ("%d %d %d %d %d %d\n", &p1.fi, &p1.se, &p2.fi, &p2.se, &p3.fi, &p3.se);

      double a = Dist (p1, p2);
      double b = Dist (p3, p2);
      double c = Dist (p1, p3);

      double alpha = acos ((sqr (b) +sqr (c) - sqr (a))/b/c/2);
      double beta = acos ((sqr (a) +sqr (c) - sqr (b))/a/c/2);
      double gamma = acos ((sqr (b) +sqr (a) - sqr (c))/b/a/2);

      if ( fabs (a - b) < eps || fabs (a - c) < eps || fabs (c - b) < eps )
         printf ("Isosceles");
      else
         printf ("Scalene");

      if ( subtask == 2 )
      {
         if ( fabs (alpha) < PI/2 - eps && fabs (beta) < PI/2 - eps && fabs (gamma) < PI/2 - eps )
            printf (" acute");
         else if ( fabs (alpha) > PI/2 + eps || fabs (beta) > PI/2 + eps || fabs (gamma) > PI/2 + eps )
            printf (" obtuse");
         else      
            printf (" right");
      }

      printf (" triangle\n");
   }

   return 0;
}

double Dist (Pair t1, Pair t2)
{
   return sqrt (sqr (t1.fi - t2.fi) + sqr (t1.se - t2.se));
}
