#include <bits/stdc++.h>
#define MOD 1000000007
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define rf(i, x, y) for (int i = (x); i < (y); i++)
#define rfe(i, x, y) for (int i = (x); i <= (y); i++)
#define rb(i, x, y) for (int i = (x); i > (y); i--)
#define rbe(i, x, y) for (int i = (x); i >= (y); i--)
#define sfi(x) scanf("%d", &x)
#define pfi(x) printf("%d", x)
#define sfll(x) scanf("%lld", &x)
#define pfll(x) printf("%lld", x)
#define pfd(x) printf("%lf", x)
#define sfs(x) scanf("%s", x)
#define pfs(x) printf("%s", x)
#define eol printf("\n")
#define pb(x) push_back((x))

#define SIZE 10005
using namespace std;
typedef struct{
    int x,y;
}point;

string by_angle(point a, point b, point c){
  int arr[3];
   arr[0] = (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);
   arr[1] = (a.x-c.x)*(a.x-c.x) + (a.y-c.y)*(a.y-c.y);
   arr[2] = (b.x-c.x)*(b.x-c.x) + (b.y-c.y)*(b.y-c.y);
   sort(arr, arr+3);
   if(arr[0]+arr[1] > arr[2]) return "acute";
   if(arr[0]+arr[1] == arr[2]) return "right";
   return "obtuse";
}

string by_side(point a, point b, point c){
    int ab = (a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y);
    int ac = (a.x-c.x)*(a.x-c.x) + (a.y-c.y)*(a.y-c.y);
    int bc = (b.x-c.x)*(b.x-c.x) + (b.y-c.y)*(b.y-c.y);
    if(ac == ab || ac == bc || ab == bc) return "Isosceles";
    else return "Scalene";
}

int main() {
    int sti,t,n;
    point a,b,c;
    sfi(sti);
    sfi(t);
    while(t--){
        sfi(a.x); sfi(a.y);
        sfi(b.x); sfi(b.y);
        sfi(c.x); sfi(c.y);
        cout<< by_side(a, b, c)<<" ";
        if(sti == 2){
           cout<<by_angle(a, b, c)<<" ";
        }
        cout<<"triangle";
        eol;
    }
    return 0;
}
