
/*
 **	Author : Amit Bansal	**
 */

#include<stdio.h>
#include<iostream>
#include<string.h>
#include<ctype.h>
#include<math.h>
#include<stdlib.h>

#include<vector>
#include<algorithm>
#include<string>
#include<sstream>

#include<map>
#include<set>
#include<list>
#include<queue>
#include<stack>
#include<bitset>

#include<functional>
#include<numeric>
#include<utility>
#include<iomanip>
#include<ctime>

using namespace std;
typedef long long						LL;
typedef vector<int> 						VI;
typedef vector<LL> 						VLL;
typedef vector<double> 						VD;
typedef vector<string> 						VS;
typedef vector<VI>						VVI;
typedef vector<VLL>						VVLL;
typedef pair<int,int> 						II;
typedef vector<II> 						VII;
typedef vector<VII> 						VVII;
typedef stringstream 						ss;

#define all(v)							(v).begin(),(v).end()
#define fors(i,n)						for(int i=0;i<n;i++)
#define fori(i,x,n)						for(int i=x;i<n;i++)
#define ford(i,x,n)						for(int i=x;i>n;i--)
#define pb(x)							push_back(x)
#define SZ(v)							int(v.size())
#define SORT(v)							sort(all(v))
#define gcd                                                     __gcd
#define maxv(v)							*max_element(all(v))
#define minv(v)							*min_element(all(v))
#define sumv(v)							accumulate(all(v),0);
#define SI 							( {int x;scanf("%d",&x);x;} )
#define sqr(a) 							(a)*(a)
#define mp 							make_pair
#define reset(x,y)						memset(x,y,sizeof x);
#define seive(n) 					VI prime(n+1,1); prime[0]=prime[1]=0; fori(i,2,sqrt(n)+1) if(prime[i]) for(int j=i*i;j<=n;j+=i) prime[j]=0;
#define pi 2*acos(0.0)
#define mod 1000000007
#define inf 1000000000 
#define eps 1e-9

int hx[]={ -2, -2, -1, -1,  1, 1 , 2, 2 };			//moves of a knight(horse)
int hy[]={ -1,  1, -2,  2, -2, 2, -1, 1 };			//sorted: first on x ,then on y

int dx[]={ 1, -1, 0,  0 };					//E,W,N,S
int dy[]={ 0,  0, 1, -1 };

int nx[]={ 1, -1, 0,  0, -1,  1, 1, -1 };			//N-8 neighbourhood
int ny[]={ 0,  0, 1, -1,  1, -1, 1, -1 };			//E,W,N,S,N-W,S-E,N-E,S-W


class pt
{
    public:
	int x,y;
};

typedef vector<pt> 	VP;


/*
   bool comp(pt a1,pt a2)
   {
   if(a1.x<a2.x)
   return true;
   else if(a1.x>a2.x)
   return false;
   else
   {
   if(a1.y<a2.y)
   return true;
   return false;
   }
   }
 */

int p;

int calc(int x, int y)
{
    int ans = 1, tmp =x;
    fors(i,10)
    {
	if(y&1<<i)
	    ans=(ans*tmp) % p;
	tmp = (tmp*tmp) % p;
    }

    return ans;
}


int main()
{
    int t = SI;
    while(t--)
    {
	int n=SI,m=SI;
	VS ar(n);
	fors(i,n)
	    cin>>ar[i];

	p = SI;
	VVI pre(n,VI(m));

	int a = 0, b = 0, x;
	fors(i,n)
	    fors(j,m)
	    {
		if(ar[i][j]=='F')
		{
		    b++;
		    pre[i][j] = -calc(b,i+j);
		}
		else
		{
		    a++;
		    pre[i][j] = calc(a,i+j);

		}
		if(j!=0)
		    pre[i][j] += pre[i][j-1];
	    }

	int last_r, min_s, curr_s, max_s=-inf, ans_t=0;
	fors(j1,m)
	    fori(j2,j1,m)
	    {
		last_r = -1;
		curr_s = 0;
		min_s = 0;
		fors(i,n)
		{
		    if(j1==0)
			curr_s += pre[i][j2];
		    else
			curr_s += pre[i][j2]-pre[i][j1-1];
		    if(curr_s - min_s > max_s)
		    {
			max_s = curr_s - min_s;
			ans_t = (i - last_r)*(j2-j1+1);
		    }
		    if(curr_s - min_s == max_s)
		    {
			ans_t = max(ans_t, (i - last_r)*(j2-j1+1));
		    }
		    if(curr_s < min_s)
		    {
			min_s = curr_s;
			last_r = i;
		    }
		}
	    }
	cout<<ans_t<<endl;
    }

    return 0;
}



