#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<memory.h>
#include<cstdlib>
#include<cmath>
#include<cassert>
#include<memory.h>
#include<algorithm>
#include<utility>
using namespace std;
#define NN 105
typedef long long ll;

int N, M, P;

int dp[NN][NN];
int ice[NN][NN];
char fire[NN][NN];

int mpow(int a, int p)
{
    if(p==0)return 1;
    if(p==1)return a;
    if(p%2==1)return (a*mpow(a,p-1))%P;
    int x= mpow(a, p/2);
    return (x*x)%P;
}

int cal(int i, int j, int r)
{
    return mpow(r, i+j)%P;
}

void in()
{
    scanf("%d%d", &N, &M);
    for(int i=0; i<N; i++)
    {
        scanf("%s", fire[i]);
    }
    scanf("%d", &P);
    int fc=1, ic=1;
    for(int i=0; i<N; i++)
    {
        for(int j=0; j<M; j++)
        {
            if(fire[i][j] == 'F')ice[i+1][j+1]= -cal(i,j,fc++);
            else ice[i+1][j+1] = cal(i,j,ic++);
        }
    }
  /*   for(int i=1; i<=N; i++)
    {
        for(int j=1; j<=M; j++)
            cout<<fire[i-1][j-1]<<" ";
        cout<<endl;
    }
    for(int i=1; i<=N; i++)
    {
        for(int j=1; j<=M; j++)
            cout<<ice[i][j]<<" ";
        cout<<endl;
    }*/
}

void solve()
{
    in();
    int ans;

    for(int i=0; i<=N; i++)
    {
      dp[i][0] = 0;
    }
    for(int j=0; j<=M; j++)
    {
           dp[0][j] = 0;
    }
    dp[1][1] = ice[1][1];
    for(int i=1; i<=N; i++)
    {
        dp[i][1] = dp[i-1][1] + ice[i][1];
    }
    for(int j=1; j<=M; j++)
    {
        dp[1][j] = dp[1][j-1] + ice[1][j];
    }
    for(int i=1; i<=N; i++)
    {
        for(int j=1; j<=M; j++)
        {
            dp[i][j] = dp[i][j-1] + dp[i-1][j] - dp[i-1][j-1] + ice[i][j];
        }
    }



    int msum = ice[1][1], cr1 = 1, cr2=1, clc = 1, crc= 1, r1, r2, lc, rc,csum;
    for(r1 = 1; r1<=N; r1++)
    {
        for(r2=r1; r2<=N; r2++)
        {
            lc=1;
            for(rc=1; rc<=M; rc++)
            {
                csum = dp[r2][rc] - dp[r1-1][rc] - dp[r2][lc-1]+ dp[r1-1][lc-1];
                //cout<<"csum "<<csum<<"msum "<<msum<<endl;
                if(csum>msum || (csum==msum && (cr2-cr1+1)*(crc-clc+1) <(r2-r1+1)*(rc-lc+1) ))
                {
                    msum =csum, cr1=r1,cr2=r2,crc=rc,clc=lc;
                }
                if(csum<0)
                {
                    lc= rc+1;
                }
            }
        }
    }
    ans = (cr2-cr1+1)*(crc-clc+1);
    //cout<<cr1<<" "<<cr2<<" "<<clc<<" "<<crc<<endl;
    printf("%d\n", ans);


}


int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    #endif

    int t;
    scanf("%d", &t);
    while(t--)
    {
        solve();
    }
}







