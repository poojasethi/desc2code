#include <iostream>
#include <cmath>
#include <vector>
#include <algorithm>
#define EPS 1e-8

using namespace std;

typedef long double ld;

struct point{
  int x,y;
  ld prob;
  ld tang;
};

#define MAXN 100010
int n;
point p[MAXN];
ld espy[MAXN];

bool c1(point a,point b){
  return a.tang < b.tang;
}

int main(){
  cin >> n;
  cout.precision(10);
  cout.setf(ios::fixed);
  for(int i = 0; i < n; ++i){
    int pp;
    cin >> p[i].x >> p[i].y >> pp;
    p[i].prob = ld(pp)/100.0;
  }
  for(int i = 0; i < n; ++i) p[i].tang = atan2(p[i].y,p[i].x);
  sort(p,p+n,c1);
  espy[0] = 0;
  for(int i = 1; i <= n; ++i){
    espy[i] = p[i-1].prob*(ld(p[i-1].y)+espy[i-1]);
    espy[i] += (1.0-p[i-1].prob)*(espy[i-1]);
  }
  ld espcuad = 0.0;
  ld esptri = 0.0;
  ld esprect = 0.0;
  for(int i = 0; i < n; ++i){
    espcuad += p[i].prob*ld(p[i].x)*(espy[n]+(1.0-p[i].prob)*(ld(p[i].y)));
  }
  for(int i = 0; i < n; ++i) esptri += p[i].prob*ld(p[i].x)*ld(p[i].y);
  for(int i = 0; i < n; ++i){
    esprect += p[i].prob*ld(p[i].x)*espy[i];
  }
//   cout << espcuad << ' ' << esptri << ' ' << esprect << '\n';
  cout << espcuad-esptri-2*esprect << '\n';
}