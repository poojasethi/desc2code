#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define X first
#define Y second
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,itit )	for( typeof(gg.begin()) itit=gg.begin();itit!=gg.end();itit++ )
#define	mp make_pair
#define	pb push_back
#define all(s) s.begin(),s.end()
#define present(c,x) ((c).find(x) != (c).end())
const double EPS = 1e-8;
const int mod = 1e9+7;
const int N = 1e6+10;
const ll INF = 1e18;

//#define DEBUG
ll power(ll x,ll y){
  ll t=1;
  while(y>0){
    if(y%2) y-=1,t=t*x%mod;
    else y/=2,x=x*x%mod;
  }
  return t;
}
#ifdef DEBUG
#define dprintf(fmt,...) fprintf(stderr,fmt,__VA_ARGS__)
#else
#define dprintf(fmt,...)
#endif
#define ld long double

vector<pair<pll,ld> > a;
int quad(pll x){
	if(x.X>0&&x.Y>=0) return 0;
	if(x.X<=0&&x.Y>0) return 1;
	if(x.X<0&&x.Y<=0) return 2;
	return 3;
}
int cmp1(pair<pll,ld> a,pair<pll,ld> b){
	if(quad(a.X)!=quad(b.X)){
		return quad(a.X)<quad(b.X);
	}
	return a.X.X*b.X.Y-b.X.X*a.X.Y>0;
}
int main(){
	int n; 
	scanf("%d",&n);
	REP(i,n){
		pll x; scanf("%lld%lld",&x.X,&x.Y);int pp; ld p; scanf("%d",&pp); p=pp*1.0/100;
		a.pb(mp(x,p)); a.pb(mp(mp(-x.X,-x.Y),p));		
	}
	sort(all(a),cmp1);
	pair<ld,ld> zz=mp(0,0);
	ld ans=0;
	REP(i,a.size()){
		ans+=(a[i].X.X*zz.Y-a[i].X.Y*zz.X)*a[i].Y;
		zz.X+=a[i].X.X*a[i].Y; zz.Y+=a[i].X.Y*a[i].Y;
	}
	printf("%lf\n",(double) abs(ans/2));
  return 0;
}
