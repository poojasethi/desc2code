    #include<iostream>
    #include<stdio.h>
    #include<queue>
    #include<vector>
    #include<string.h>
    #include<algorithm>
    using namespace std;
    vector<string> v;
    string s;
    int main()
    {
    //freopen ("a.txt","r",stdin);
   // freopen ("b.txt","w",stdout);
    int t,n,m,i,j,hx,hy,c=0;
    cin>>t;
    while(t--)
    {
    c++;
    v.clear();
    int ans=10000;
    cin>>n>>m;
    for(i=0;i<n;i++){cin>>s;v.push_back(s);}
    vector<int>food;
    for(i=0;i<n;i++)
    {
    for(j=0;j<m;j++)
    {
    if(v[i][j]=='F')
    {
    food.push_back(i*m+j);
    }
    else if(v[i][j]=='H')
    {
    hx=i;
    hy=j;
    }
    }
    }
    food.push_back(hx*m+hy);
    int a[20]={0},d[12][15][15];
    memset(d,-1,sizeof(d));
    for(i=0;i<food.size();i++)
    {
    a[i]=i;
    queue<int> q;
    q.push(food[i]);
    bool vis[15][15]={0};
    vis[food[i]/m][food[i]%m]=1;
    d[i][food[i]/m][food[i]%m]=0;
    while(!q.empty())
    {
    int h=q.front();
    q.pop();
    int x=h/m,y=h%m;
    int dx=1,dy=0;
    for(j=0;j<4;j++)
    {
    int px=x+dx,py=y+dy;
    swap(dx,dy);dy*=-1;
    if(px<0 || px>=n ||py<0 ||py>=m || v[px][py]=='#')continue;
    if(!vis[px][py])
    {
    vis[px][py]=1;
    q.push(px*m+py);
    d[i][px][py]=d[i][x][y]+1;
    //cout<<i<<" "<<px<<" "<<py<<" "<<d[i][px][py]<<" "<<endl;
    }
    }
    }
    }
    // for(i=0;i<n;i++)
    // {
    // for(j=0;j<m;j++)cout<<d[1][i][j]<<" ";
    // cout<<endl;
    // }
    int px=hx,py=hy,nx,ny;
    do{
    int dis=d[food.size()-1][food[a[0]]/m][food[a[0]]%m];
    if(dis<0)continue;
    bool ch=0;
    for(i=0;i<food.size()-1;i++)
    {
    if(d[a[i]][food[a[i+1]]/m][food[a[i+1]]%m]>=0)dis+=d[a[i]][food[a[i+1]]/m][food[a[i+1]]%m];
    else {ch=1;break;}
    }
    //cout<<dis<<endl;
    if(!ch)ans=min(ans,(dis+1)/2);
    }
    while(next_permutation(a,a+food.size()-1));
    cout<<"Case "<<c<<": ";
    if(ans!=10000)cout<<ans<<endl;
    else cout<<-1<<endl;
    }
    cin>>t;
    }
