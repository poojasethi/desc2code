//Authored by: Amit Saharana, IIT Delhi
#include <bits/stdc++.h>
using namespace std;
#define ll long long
#define gc getchar
 
string b[12];
int d[12][12][12][12];
int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
 
int main() {
  ios_base::sync_with_stdio(false);
  int t;
  cin>>t;
  int z = 0;
  while(t-->0) {
    z++;
    int r,c;
    cin>>r>>c;
    for(int i=0;i<r; i++){ 
      cin>>b[i];
    }
    for(int i=0; i<r; i++) {
      for(int j=0; j<c; j++) {
	for(int k=0; k<r; k++) {
	  for(int l=0; l<c; l++) {
	    d[i][j][k][l] = 1e5;
	  }
	}
      }
    }
    for(int i=0; i<r; i++) {
      for(int j=0; j<c; j++) {
	if(b[i][j]!='#') {
	  d[i][j][i][j] = 0;
	}
      }
    }
    for(int i=0; i<r; i++) {
      for(int j=0; j<c; j++){ 
	for(int k=0; k<4; k++) {
	  int i2 = i+dx[k];
	  int j2 = j+dy[k];
	  if(i2<r && i2>=0 && j2<c && j2>=0 && b[i][j]!='#' && b[i2][j2]!='#') {
	    d[i][j][i2][j2] = 1;
	  }
	}
      }
    }
    for(int k1=0; k1<r; k1++) {
      for(int k2=0; k2<c; k2++) {
	for(int i1=0; i1<r; i1++) {
	  for(int i2=0; i2<c; i2++) {
	    for(int j1=0; j1<r;j1++) {
	      for(int j2=0; j2<c; j2++) {
		if(b[i1][i2]!='#' && b[j1][j2]!='#' && b[k1][k2]!='#') {
		  d[i1][i2][j1][j2] = min(d[i1][i2][j1][j2],d[i1][i2][k1][k2]+d[k1][k2][j1][j2]);
		}
	      }
	    }
	  }
	}
      }
    }
    int tf = 0;
    vector<pair<int,int> > f;
    int cx,cy;
    for(int i=0; i<r; i++) {
      for(int j=0; j<c; j++) {
	if(b[i][j]=='F') {
	  tf++;
	  f.push_back(make_pair(i,j));
	}
	if(b[i][j]=='H') {
	  cx = i;
	  cy = j;
	}
      }
    }
    int ans = 1e6;
    for(int i=0; i<=tf; i++){ 
      vector<int> a(tf,0);
      for(int j=0; j<i; j++) {
	a[j] = 1;
      }
      sort(a.begin(),a.end());
      do {
	vector<pair<int,int> > a1,a2;
	for(int j=0; j<tf; j++){ 
	  if(a[j]==1) a1.push_back(f[j]);
	  else a2.push_back(f[j]);
	}
	sort(a1.begin(),a1.end());
	do {
	  sort(a2.begin(),a2.end());
	  do {
	    int dx1 = cx;
	    int dy1 = cy;
	    int d1 = 0, d2 = 0;
	    for(int j=0; j<a1.size(); j++) {
	      d1+=d[dx1][dy1][a1[j].first][a1[j].second];
	      dx1 = a1[j].first;
	      dy1 = a1[j].second;
	    }
	    int dx2 = cx;
	    int dy2 = cy;
	    for(int j=0; j<a2.size(); j++) {
	      d2+=d[dx2][dy2][a2[j].first][a2[j].second];
	      dx2 = a2[j].first;
	      dy2 = a2[j].second;
	    }
	    ans = min(ans,max(min(d1,d2)+max(d1,d2)-min(d1,d2)+(d[dx1][dy1][dx2][dy2]-max(d1,d2)+min(d1,d2)+1)/2,max(d1,d2)));
	  } while(next_permutation(a2.begin(),a2.end()));
	} while(next_permutation(a1.begin(),a1.end()));
      } while(next_permutation(a.begin(),a.end()));
    }
    cout<<"Case "<<z<<": ";
    if(ans>1e4) cout<<"-1"<<endl;
    else cout<<ans<<endl;
  }
  return 0;
}
 
