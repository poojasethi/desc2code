#include <cstring>
#include <string>
#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <climits>

using namespace std;

#define maxn 15

char M[maxn][maxn];
int r,c,ct,tcase;
int A[maxn][maxn],B[maxn][maxn],D[maxn][maxn];
int dp[1<<15][15];

bool inrange(int x,int y){
  return 0<=x &&  x<r && 0 <= y && y<c;
}

void bfs(int sx,int sy){
   D[sx][sy] = 0;
   queue < pair<int,int> > q; q.push(make_pair(sx,sy));
   while(!q.empty()){
     pair<int,int> t = q.front(); q.pop();
     int cx = t.first; int cy = t.second;
     int dx [] = {-1,1,0,0};
     int dy [] = {0,0,-1,1};
     for(int k=0;k<4;++k){
        int nx = cx + dx[k];
        int ny = cy + dy[k];
        if(inrange(nx,ny) && M[nx][ny]!='#' && D[nx][ny]==-1) {
               D[nx][ny] = D[cx][cy]+1; q.push(make_pair(nx,ny));
        }
     }
   }
   return ;
}

int main(){
   scanf("%d",&tcase);
   for(int tc=1;tc<=tcase;++tc){
     scanf("%d%d",&r,&c);
     for(int i=0;i<r;++i) scanf("%s",M[i]);
     memset(A,-1,sizeof(A)); ct = 0;
     for(int i=0;i<r;++i) for(int j=0;j<c;++j)
       if(M[i][j]=='H' || M[i][j]=='F') {
           if(M[i][j]=='F')  A[i][j] = ct++; 
           else A[i][j] = 8;
       }
    
      for(int i=0;i<r;++i) for(int j=0;j<c;++j) 
       if(M[i][j]=='H' || M[i][j]=='F'){
           memset(D,-1,sizeof(D)); 
           bfs(i,j);
           for(int a=0;a<r;++a) for(int b=0;b<c;++b) if(M[a][b]=='H' || M[a][b]=='F') 
               B[A[i][j]][A[a][b]] = (D[a][b]==-1)?INT_MAX/4:D[a][b];
       }

//     for(int i=0;i<r;++i) {
 //      for(int j=0;j<c;++j) printf("%d ",A[i][j]); 
  //     printf("\n");
   //  }
  
          
    
     for(int i=1;i<(1<<ct);++i){
        for(int j=0;j<ct;++j) if((1<<j)&i) {
           int ti = i-(1<<j); 
           if(ti==0) dp[i][j] = (B[8][j]==-1?INT_MAX/4:B[8][j]);
           else {
                dp[i][j] = INT_MAX/4;
                for(int k=0;k<ct;++k) if((1<<k)&ti) 
                  dp[i][j] = min(dp[i][j],dp[ti][k]+B[k][j]);         
           } 
        }
     }
     for(int i=0;i<ct;++i) dp[(1<<ct)-1][i] = dp[(1<<ct)-1][i] + B[i][8];
     int mn = INT_MAX/4;
     for(int i=0;i<ct;++i) mn = min(mn,dp[(1<<ct)-1][i]);
     if(mn>=INT_MAX/4) printf("Case %d: -1\n",tc);
     else printf("Case %d: %d\n",tc,(mn+1)/2);
  
   }
   return 0;
}