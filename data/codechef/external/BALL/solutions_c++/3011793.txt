#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>

using namespace std;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0;(i) < (n);  ++i)
#define fu(i,a,b) for(var(i,a); (i) <= (b); ++i)
#define fd(i,a,b) for(var(i,a); (i) >= (b); --i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> pii;
typedef long double ld;
#define pb push_back
#define mp make_pair
#define inf 1e7
#define linf LONG_LONG_MAX
#define X first
#define Y second
#define fill(a,val) memset(a,val,sizeof(a))
#define size(v) (int)v.size()
#define gi(n) scanf("%d",&n)
#define all(v) v.begin(),v.end()
#ifdef LOCAL
#define debug(args...) {cerr<<"> "<<#args;dbg,args;cerr<<endl;}
#define debugv(v, n)   {cerr<<"> "<<#v; rep(ni, n) dbg,v[ni]; cerr<<endl;}
#else
#define debug(...) 
#define debugv(...)
#endif
struct debugger{ template<typename T> debugger& operator,(const T& v) { cerr<<" "<<v;return *this;}}dbg;

#define N 55
#define eps 1e-9

double x[N],y[N],s[N];
int n;

double cost(double xx,double yy) {
  double ans = 0;
  for(int i=0;i<n;++i) {
    double t = (x[i] - xx)*(x[i] - xx) + (y[i] - yy)*(y[i] - yy);
    ans = max(ans,t/(s[i] * s[i]));
  }
  return ans;
}

double go(double x) {
  double lo = -inf,hi = inf;
  while(hi - lo > eps) {
    double m1 = lo + (hi-lo)/3;
    double m2 = lo + 2*(hi-lo)/3;
    if(cost(x,m1) >= cost(x,m2)) lo = m1;
    else hi = m2;
  }
  return cost(x,lo);
}

double go() {
  double lo = -inf,hi = inf;
  while(hi-lo > eps) {
    double m1 = lo + (hi-lo)/3;
    double m2 = lo + 2*(hi-lo)/3;
    if(go(m1) >= go(m2)) lo = m1;
    else hi = m2;
  }
  return go(lo);
}

int main(){
  #ifdef LOCAL
  freopen("in.txt","r",stdin);
  #endif
  int tt;
  gi(tt);
  while(tt--) {
    gi(n);
    rep(i,n) scanf("%lf%lf%lf",x+i,y+i,s+i);
    printf("%.10lf\n",sqrt(go()));
  }
  return 0;
}
