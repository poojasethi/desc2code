#include <cmath>
#include <cstdio>

#include <algorithm>

using namespace std;

const double EPS = 1e-5;
const int MAXN = 51;

int n;
double X[MAXN];
double Y[MAXN];
double S[MAXN];

double f();
double g(double);
double h(double, double);

// ternary search on two dimensions
double f()
{
    double minx = -1000000;
    double maxx = 1000000;
    while (abs(maxx - minx) > EPS) {
        double midl = (2 * minx + maxx) / 3;
        double midh = (minx + 2 * maxx) / 3;
        if (g(midl) >= g(midh)) {
            minx = midl;
        } else {
            maxx = midh;
        }
    }

    return sqrt(g(minx));
}

double g(double x)
{
    double miny = -1000000;
    double maxy = 1000000;
    while (abs(maxy - miny) > EPS) {
        double midl = (2 * miny + maxy) / 3;
        double midh = (miny + 2 * maxy) / 3;
        if (h(x, midl) >= h(x, midh)) {
            miny = midl;
        } else {
            maxy = midh;
        }
    }

    return h(x, miny);
}

double h(double x, double y)
{
    double res = 0;
    for (int i = 0; i < n; ++i) {
        double d = ((x - X[i]) * (x - X[i]) + (y - Y[i]) * (y - Y[i])) / 
                    (S[i] * S[i]);
        if (d > res)
            res = d;
    }

    return res;
}

int main()
{
    int t;
    scanf("%d", &t);
    while (t--) {
        scanf("%d", &n);
        for (int i = 0; i < n; ++i)
            scanf("%lf %lf %lf", &X[i], &Y[i], &S[i]);
        printf("%lf\n", f());
    }

    return 0;
}
