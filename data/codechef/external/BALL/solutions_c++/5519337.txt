#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<stack>
#include<cmath>
#include<iomanip>
#include<cstdlib>
#include<sstream>
#include<climits>
using namespace std;
#define f(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) f(i,0,n)
#define pb push_back
#define ss second
#define ff first
#define vi vector<int>
#define vl vector<ll>
#define s(n) scanf("%d",&n)
#define ll long long
#define mp make_pair
#define PII pair <int ,int >
#define PLL pair<ll,ll>
#define inf 1000*1000*1000+5
#define v(a,size,value) vi a(size,value)
#define sz(a) a.size()
#define all(a) a.begin(),a.end()
#define tri pair < int , PII >
#define TRI(a,b,c) mp(a,mp(b,c))
#define xx ff
#define yy ss.ff
#define zz ss.ss
#define in(n) n = inp()
#define vii vector < PII >
#define vll vector< PLL >
#define viii vector < tri >
#define vs vector<string>
#define DREP(a) sort(all(a)); a.erase(unique(all(a)),a.end());
#define INDEX(arr,ind) (lower_bound(all(arr),ind)-arr.begin())
#define ok if(debug)
#define trace1(x) ok cerr << #x << ": " << x << endl;
#define trace2(x, y) ok cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z)    ok      cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define trace4(a, b, c, d)  ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
								<< #d << ": " << d << endl;
#define trace5(a, b, c, d, e) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									 << #d << ": " << d << " | " << #e << ": " << e << endl;
#define trace6(a, b, c, d, e, f) ok cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " \
									<< #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
ll MOD = int(1e9) + 7;
#define gc getchar()
inline int inp(){register int n=0,s=1,c=gc;if(c=='-')s=-1;while(c<48)c=gc;while(c>47)n=(n<<3)+(n<<1)+c-'0',c = gc;return n*s;}
#define pc(x) putchar(x) //_unlocked(x);
inline void writeInt (ll n)
{ll N = n, rev, count = 0;rev = N; if (N == 0) { pc('0'); pc('\n'); return ;}
while ((rev % 10) == 0) { count++; rev /= 10;}rev = 0; while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}
while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}while (count--) pc('0'); }
ll powmod(ll num,ll power){if(power==0)return 1%MOD;if(power==1)return num%MOD;
ll t = powmod(num,power/2)%MOD;return power%2?t*t%MOD*num%MOD:t*t%MOD;}
ll pow1(ll num,ll power){if(power==0)return 1;if(power==1)return num;	ll t = pow1(num,power/2);return power%2?t*t*num:t*t;}
int check(int);
int binarysearch(int len)//finds last 1 in 11111000
{int lo = 1,hi = len,mid,flag;while(lo<=hi){mid = hi+lo>>1;(flag = check(mid))?lo = mid+1:hi = mid-1;}return mid-1+flag;}
const int N = 1000*100+5;
int debug = 1;
int check(int a){return a;}
#define ld long double
ld eps = 1e-6;
int x[55],y[55],s[55];
int n;
ld dist(ld x1,ld y1 , ld x2 , ld y2)
{
	return sqrt( (x2-x1)*(x2 - x1) + (y2-y1)*(y2-y1) );
}
ld calc(ld x1,ld y1)
{
	ld ans = 0;
	int i;
	rep(i,n)
	{
		ans = max(ans, dist(x1,y1,x[i],y[i])/s[i]);
	}
	return ans;
}	
ld g(ld X)
{
	ld lo = -1e6 , hi = 1e6;
	while( hi - lo > eps)
	{
		ld mid1 = (2*lo + hi)/3;
		ld mid2 = (2*hi + lo)/3;
		if(calc(X,mid1) > calc(X,mid2))
			lo = mid1;
		else
			hi = mid2;
	}	
	return calc(X,lo);
}
int main()
{
      ios::sync_with_stdio(false);
      int i,j,t;
      cin>>t;
      while(t--)
      {
			cin>>n;
			rep(i,n)cin>>x[i]>>y[i]>>s[i];
	
		 	ld lo = -1e6 , hi = 1e6;
			while( hi - lo > eps)
			{
				ld mid1 = (lo*2 + hi)/3;
				ld mid2 = (lo + 2*hi)/3;
				if(g(mid1) > g(mid2))
					lo = mid1;
				else 
					hi = mid2;
			}
			cout<<fixed<<setprecision(8)<<g(lo)<<endl;
	  }
}
