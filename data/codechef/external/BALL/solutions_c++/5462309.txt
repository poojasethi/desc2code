#include<iostream>
#include<cstdio>
#include<algorithm>
#include<string>
#include<cstring>
#include<cmath>
#include<queue>
#include<map>
#include<vector>
#include<stack>
#include<set>
#include<fstream>
#define pb push_back
#define mp make_pair
#define M 100
#define limit 150000
#define Inf 1e6+1
#define accr 1e-6
#define PI 3.141592653589793238462643383279502884197
#define ll (long long)
using namespace std;

int n;
double x[M],y[M],s[M];


double dist(double x1,double x2,double y1,double y2)
{
    return sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2));
}


double func(double X,double Y)
{
    int i,j,k;
    double sum;
    sum=0.0000000000000000000;
    for(i=0;i<n;i++)
    {
        sum=max(sum,(dist(x[i],X,y[i],Y))/s[i]);
    }
    return sum;
}


double TS2(double Ylo,double Yhi,double X)
{
    if(abs(Yhi-Ylo)<accr)
    {
        //cout<<"it's the point "<<X<<" "<<Yhi<<endl;
        return func(X,Yhi);
    }
    double mid1,mid2;
    mid1=(Ylo+Ylo+Yhi)/3.0;
    mid2=(Yhi+Yhi+Ylo)/3.0;
    if(func(X,mid1)>func(X,mid2))
    {
        Ylo=mid1;
    }
    else
    {
        Yhi=mid2;
    }
    return TS2(Ylo,Yhi,X);
}


double TS1(double Xlo,double Xhi)
{
    if(abs(Xhi-Xlo)<accr)
    {
        return TS2(-Inf,Inf,Xhi);
    }
    double mid1,mid2;
    mid1=(Xlo+Xlo+Xhi)/3.0;
    mid2=(Xhi+Xhi+Xlo)/3.0;
    if(TS2(-Inf,Inf,mid1)>TS2(-Inf,Inf,mid2))
    {
        Xlo=mid1;
    }
    else
    {
        Xhi=mid2;
    }
    return TS1(Xlo,Xhi);
}

int main()
{
    int i,j,k,t;
    scanf("%d",&t);
    while(t--)
    {
        int a,b,c;
        scanf("%d",&n);
        for(i=0;i<n;i++)
        {
            scanf("%d %d %d",&a,&b,&c);
            x[i]=a;
            y[i]=b;
            s[i]=c;
        }
        printf("%.7f\n",TS1(-Inf,Inf));
    }
}
