/* Sahil Prakash */

#include<bits/stdc++.h>

using namespace std;

#define si(x) scanf("%d",&x)
#define pri(x) printf("%d",x)
#define sll(x) scanf("%lld",&x)
#define pll(x) printf("%lld",x)
#define sstr(s) scanf("%s",s)
#define pstr(s) printf("%s",s)
#define nl printf("\n")
#define ll long long int
#define pii pair<int,int>
#define mp make_pair

int main()
{
    int n;
    si(n);
    int a[n+2][2];
    memset(a,0,sizeof(a));
    for(int i=1;i<=n+1;++i)
    {
	si(a[i][0]); si(a[i][1]);
    }
    int dist[n+2],visited[n+2];
    for(int i=1;i<=n+1;++i)
    {
	visited[i]=0;
	dist[i]=10000000;
    }
    priority_queue< pii > q;
    q.push( mp (0,0) );
    visited[0]=1;
    dist[0]=0;
    while(visited[n+1]==0)
    {
	pii p=q.top();
	q.pop();
	int dis=-1*p.first;
	int node=p.second;
	if(dist[node]<dis)
	    continue;
	visited[node]=1;
	for(int i=1;i<=n+1;++i)
	{
	    if(dist[i]>(dis+(a[node][0]-a[i][0])*(a[node][0]-a[i][0])+(a[node][1]-a[i][1])*(a[node][1]-a[i][1])))
	    {
		dist[i]=dis+(a[node][0]-a[i][0])*(a[node][0]-a[i][0])+(a[node][1]-a[i][1])*(a[node][1]-a[i][1]);
		q.push( mp (-1*dist[i],i) );
	    }
	}
    }
//    for(int i=1;i<=n+1;++i) cout<<dist[i]<<" ";
    pri(dist[n+1]); nl;
    return 0;
}
