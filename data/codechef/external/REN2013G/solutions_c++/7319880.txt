#include<bits/stdc++.h>
using namespace std;
int N;
vector < pair <int,int> > ad[1005];
int main(){
    scanf("%d",&N);
    vector < pair < int,int > > v;
    v.push_back(make_pair(0,0));
    for(int i=0;i<N;++i){
        int x,y;
        scanf("%d %d",&x,&y);
        v.push_back(make_pair(x,y));
    }
    int x,y;
    scanf("%d %d",&x,&y);
    v.push_back(make_pair(x,y));
    for(int i=0;i<=N+1;++i){
        for(int j=0;j<=N+1;++j){
            if(i==j)
                continue;
            ad[i].push_back(make_pair(j,((v[j].first-v[i].first)*(v[j].first-v[i].first))+((v[j].second-v[i].second)*(v[j].second-v[i].second))));
        }
    }
    set < pair <int,int> > s;
    s.insert(make_pair(0,0));
    int d[1005];
    for(int i=0;i<1005;++i)
        d[i]=INT_MAX;
    d[0]=0;
    while(1){
        int v = s.begin()->second;
        int w = s.begin()->first;
        s.erase(s.begin());
        if(d[v]<w)
            continue;
        if(v == N+1){
            printf("%d\n",w);
            return 0;
        }
        for(int i=0;i<ad[v].size();++i){
            if(w+ad[v][i].second<d[ad[v][i].first]){
                d[ad[v][i].first]=w+ad[v][i].second;
                s.insert(make_pair(d[ad[v][i].first],ad[v][i].first));
            }
        }
    }
    while(!s.empty())
        s.erase(s.begin());
}
