#include <iostream>

using namespace std;

const int MAXN = 1000+100;
int d[MAXN], n, x[MAXN], y[MAXN];
bool mark[MAXN];

int dis (int i, int j)
{
	return (x[i]-x[j]) * (x[i]-x[j]) + (y[i]-y[j]) * (y[i]-y[j]);
}

int main()
{
	cin >> n;
	n+=2;
	for (int i=1; i<n; i++)
		cin>> x[i] >> y[i];
	for (int i=0; i<n; i++)
		d[i] = dis(0, i);
	mark[0] = true;
	while (!mark[n-1])
	{
		int mn = d[n-1], mnInd = n-1;
		for (int i=0; i<n; i++)
			if (!mark[i] && d[i]< mn)
			{
				mn = d[i];
				mnInd = i;
			}
		mark[mnInd] = true;
		for (int i=0; i<n; i++)
			d[i] = min(d[i], d[mnInd] + dis(i, mnInd));
	}
	cout << d[n-1] << endl;
	return 0;
}