#include <bits/stdc++.h>
#define s(a) scanf("%d",&a)
#define p(a) printf("%d\n",a)
#define sl(a) scanf("%lld",&a)
#define pl(a) printf("%lld\n",a)
#define SWAP(x,y) int t;t=x;x=y;y=t;
#define FILL(x,y) memset(&x,y,sizeof(x))
#define pb push_back
#define MOD 1000000007
#define SIZE 1000002
#define pii pair<int,int>
#define mp make_pair
using namespace std;
typedef long long int ll;
int coord[1005][2],d[1005];
bool visi[1005];
int distCalc(int i,int b)
{
    return ((coord[i][0]-coord[b][0])*(coord[i][0]-coord[b][0]) + (coord[i][1]-coord[b][1])*(coord[i][1]-coord[b][1]));
}
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);

    int n,i,j,x,y;
    s(n);
    for(i=1;i<=n+1;i++)
    {
        s(coord[i][0]);
        s(coord[i][1]);
    }

    for(i=1;i<=n+1;i++)
    {
        d[i]=INT_MAX;
        visi[i]=0;
    }

    priority_queue<pii> pq;
    pq.push(mp(0,0));

    visi[0]=1; d[0]=0;
    while(!visi[n+1])
    {
        pii a=pq.top();
        pq.pop();
        int dst=-a.first;
        int node=a.second;

        if(d[node]<dst)
            continue;

        visi[node]=1;
        for(i=1;i<=n+1;i++)
        {
            if(dst+distCalc(i,node)<d[i])
            {
                d[i]=dst+distCalc(i,node);
                pq.push(mp(-d[i],i));
            }
        }
    }
    cout<<d[n+1];
    return 0;
}
