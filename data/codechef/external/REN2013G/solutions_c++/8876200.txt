#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;

const int maxn = 1000 + 5;
int n;
long long a[maxn][2], b[maxn];
vector<int> v;

long long f(int x1, int y1, int x2, int y2)
{
	return (long long) ((x1 - x2) * (x1 - x2)) + ((y1 - y2) * (y1 - y2));
}

void hazf(int x)
{
	vector<int> s;
	for(int i = 0; i < x; i++)
		s.push_back(v[i]);
	for(int i = x + 1; i < (int) v.size(); i++)
		s.push_back(v[i]);
	v = s;
}

int main()
{
	cin >> n;
	a[0][0] = 0;
	a[0][1] = 0;
	b[0] = 0;
	for(int i = 1; i <= n; i++)
		cin >> a[i][0] >> a[i][1];
	cin >> a[n + 1][0] >> a[n + 1][1];
	for(int i = 1; i <= n + 1; i++)
	{
		v.push_back(i);
		b[i] = f(0, 0, a[i][0], a[i][1]);
	}
	long long x, y;
	for(int i = 1; i <= n + 1; i++)
	{
		y = 1000000000;
		for(int j = 0; j < (int) v.size(); j++)
			if(b[v[j]] < y)
			{
				y = b[v[j]];
				x = j;
			}
		y = v[x];
		hazf(x);
		for(int j = 0; j < (int) v.size(); j++)
		{
			b[v[j]] = min(f(a[y][0], a[y][1], a[v[j]][0], a[v[j]][1]) + b[y], b[v[j]]);
		}
	}
	cout << b[n + 1] << endl;
	return 0;
}
		 
			
			
		
		
		
			
