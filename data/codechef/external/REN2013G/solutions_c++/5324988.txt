#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <set>
#include <cstring>
#include <iomanip>
#include <map>
#include <algorithm>
#include <stack>
#include <queue>
#include <list>
#include <string>
#include <vector>
#include <new>
#include <bitset>
#include <ctime>
#include <cassert>
#include <stdint.h>
#include <unistd.h>
 
 using namespace std;
 
#define ll long long int
#define INF 1000000000
#define PI acos(-1.0)
#define EPS 1e-9
 
template < typename X > X gcd( X a, X b ) { if( !b ) return a ; else return gcd(b, a%b) ; }
 
typedef vector<int> vi;
typedef pair<int, int> ii;


const int N = 1010 ;
int n, x, y, G[N][N], i, j, dist[N] ; 
priority_queue<ii, vector<ii>, greater<ii> > pq ;
ii p[N] ;

inline int Dist() {
	int u, v; 
	x = p[i].first ;
	y = p[i].second ;
	u = p[j].first ;
	v = p[j].second ;
	return ( ( x - u ) * ( x - u ) + ( y - v ) * ( y - v ) ) ;
}

int main() {
	scanf("%d", &n);
	p[0].first = p[0].second = 0 ;
	dist[0] = dist[ n + 1] = INF ;
	for( i = 1; i <= n; ++i ) {
		scanf("%d %d", &x, &y) ;
		p[i].first = x ;
		p[i].second = y ;
		dist[i] = INF ;
	}
	scanf("%d %d", &x, &y) ;
	p[n + 1].first = x ;
	p[n + 1].second = y ;
	for( i = 0; i <= n + 1; ++i ) 
		for( j = 0; j <= n + 1; ++j ) 
			G[i][j] = Dist() ;
	pq.push(ii( 0, 0 ) ) ;
	dist[0] = 0 ;
	while( !pq.empty() ) {
		ii temp = pq.top() ; pq.pop() ;
		x = temp.first ;
		y = temp.second ;
		if( dist[x] == y ) {
			for( j = 0; j <= n + 1; ++j ) {
				if( j != x ) {
					if( dist[j] > y + G[x][j] ) {
						dist[j] = y + G[x][j] ;
						pq.push(ii( j, dist[j] ) ) ;
					}
				}
			}
		}
	}
	printf("%d\n", dist[n + 1]);
	return 0 ;
}