#include<bits/stdc++.h>
using namespace std;
#define pii pair<int,int>
#define vi vector<int>
#define vb vector<bool>
#define vpi vector< vector <pii> >

vpi graph;
 vi x;
 vi y;
 int t;

 int mindist(vi dist,vb sdset)
{
    int mini=INT_MAX,minindex;

  for(int i=0;i<=t+1;i++)
    {
        if(sdset[i]==false && dist[i]<=mini)
        {
           mini= dist[i];
           minindex=i;
        }
    }
    return minindex;
}

void dijsktras(int src)
{
  vi dist(t+2);
  vb sdset(t+2);

  for(int i=0;i<=t+1;i++)
  {
      dist[i]=INT_MAX;
      sdset[i]=false;
  }


  dist[0]=0;

  for(int i=0;i<t+1;i++)
  {
   int u=mindist(dist,sdset);

   sdset[u]=true;

    for(vector< pii >::iterator it=graph[u].begin();it!=graph[u].end();it++)
  {
      if(sdset[it->first]==false && dist[u]!=INT_MAX && (dist[u]+ it->second) < dist[it->first])
        {
            dist[it->first]=dist[u]+ it->second ;

        }

  }
  }

  cout<<dist[t+1]<<endl;
}

int main()
{


 cin>>t;

graph=vpi(t+2);
x=vi(t+2);
y=vi(t+2);

 x[0]=0;y[0]=0;

 for(int i=1;i<t+2;i++)
 {
     cin>>x[i]>>y[i];
 }

for(int i=0;i<=t+1;i++)
{
    for(int j=0;j<=t+1;j++)
    {
        long long val=(x[i]-x[j])*(x[i]-x[j]) + (y[i]-y[j])*(y[i]-y[j]);

        graph[i].push_back(make_pair(j,val));

    }

}

dijsktras(0);

    return 0;
}
