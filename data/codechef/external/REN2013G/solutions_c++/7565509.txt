#include <bits/stdc++.h>
using namespace std;
#define mx INT_MAX
#define disx abs(c[cur][0]-c[i][0])
#define disy abs(c[cur][1]-c[i][1])
#define F(cur,i) disx*disx + disy*disy
int c[1005][1005]; 
int d[1005];
bool ch[1005];
int n;

void dijkstra(){
	
	fill(d,d+1004,mx);
	fill(ch,ch+1004,false);

	c[0][0] = c[0][1] = d[0] = 0;
	d[1004] = mx;
	int cur=0;
	

	
	

		
		for(int j=0;j<n+2;j++){
		
			
		int min = 1004;
		
	
		
			ch[cur] = true;	
			 //cout <<"hhhhhhhhhhh" <<cur<< endl;
		for(int i=1;i<n+2;i++){
			
			
			int dis = F(cur,i);
			
			if(!ch[i] && d[cur] != mx && d[cur]+dis < d[i] )
				d[i] = d[cur]+dis;
			
			if(d[min] > d[i] && !ch[i])
				min = i;
		}
		
		cur = min;
			
	}

			
		
	cout << d[n+1] << endl;
	
}

int main(){
	
	std::ios_base::sync_with_stdio (false);

	cin >> n;
		

	
	
	int i= n;
//	cout << d[2];
	while(i > -1){
		cin >> c[n-i+1][0] >> c[n-i+1][1];
		i--;		
	}
	
/*	for(int i=1;i<n+2;i++)
		cout << i << "..." << c[i][0] << "    " << c[i][1] << endl;*/
	dijkstra();
	
	return 0;	
}