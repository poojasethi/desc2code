#include <stdio.h>
#define _R if(k.x-t<1||k.y-t<1||k.x+t>8||k.y+t>8)break;
#define _T {puts("yes");return;}
#define U(a,b,c,d) {if(feld[a][b]==c||feld[a][b]==d)_T if(feld[a][b]!='0')break;}

typedef struct {
int x, y;
}krd;

krd inp()
{
int a;
krd r;
scanf("%d",&a);
r.x=a%10;
r.y=9-a/10;
return r;
}

void losen()
{
int t, x, y;
char feld[10][10];
krd a, sp1, sp2, k;

for(x=1; x<=8; x++)	// Feld nullsetzen
	for(y=1; y<=8; feld[x][y++]='0');

// weiss einlesen
for(t=0; ++t<=8; a=inp(),feld[a.x][a.y]='a');	// Bauer
for(t=0; ++t<=2; a=inp(),feld[a.x][a.y]='b');	// Turm
sp1=inp(),feld[sp1.x][sp1.y]='c';				// Springer1
sp2=inp(),feld[sp2.x][sp2.y]='c';				// Springer2
for(t=0; ++t<=2; a=inp(),feld[a.x][a.y]='d');	// Laeufer
a=inp(),feld[a.x][a.y]='e';					// Dame
a=inp(),feld[a.x][a.y]='f';					// Koenig

// schwarz einlesen
for(t=0; ++t<=8; a=inp(),feld[a.x][a.y]='A');	// Bauer
for(t=0; ++t<=2; a=inp(),feld[a.x][a.y]='B');	// Turm
sp1=inp(),feld[sp1.x][sp1.y]='C';				// Springer1
sp2=inp(),feld[sp2.x][sp2.y]='C';				// Springer2
for(t=0; ++t<=2; a=inp(),feld[a.x][a.y]='D');	// Laeufer
a=inp(),feld[a.x][a.y]='E';					// Dame
k=inp(),feld[k.x][k.y]='F';					// Koenig

//for(y=1; y<=8; y++,puts(""))	// Ausgabe
//	for(x=1; x<=8; putchar(feld[x++][y]));

// Angriff durch Bauern
if(feld[k.x-1][k.y+1]=='a'||feld[k.x+1][k.y+1]=='a')_T

// horizontaler / vertikaler Angriff durch Turm oder Dame
for(x=k.x+1; x<=8; x++)	// nach rechts
	U(x,k.y,'b','e')
for(x=k.x-1; x>=1; x--)	// nach links
	U(x,k.y,'b','e')
for(y=k.y+1; y<=8; y++)	// nach unten
	U(k.x,y,'b','e')
for(y=k.x-1; y>=1; y--)	// nach oben
	U(k.x,y,'b','e')

// diagonaler Angriff durch Laefer oder Dame
for(t=1; t<=8; t++) // nach links oben
	{_R U(k.x-t,k.y-t,'d','e')}
for(t=1; t<=8; t++) // nach rechts oben
	{_R U(k.x+t,k.y-t,'d','e')}
for(t=1; t<=8; t++) // nach links unten
	{_R U(k.x-t,k.y+t,'d','e')}
for(t=1; t<=8; t++) // nach rechts unten
	{_R U(k.x+t,k.y+t,'d','e')}

// Angriff durch Springer
if(abs(k.x-sp1.x)==1 && abs(k.y-sp1.y==2))_T
if(abs(k.x-sp1.x)==2 && abs(k.y-sp1.y==1))_T
if(abs(k.x-sp2.x)==1 && abs(k.y-sp2.y==2))_T
if(abs(k.x-sp2.x)==2 && abs(k.y-sp2.y==1))_T

// Angriff durch Koenig
for(x=k.x-1; x<=k.x+1; x++)
	for(y=k.y-1; y<=k.y+1; y++)
		if(feld[x][y]=='f')_T

puts("no");
}

main()
{
int fall;
for(scanf("%d\n",&fall); fall--; losen());
return 0;
}
