#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<queue>
#include<vector>
#include<stack>
#include<bitset>
#include<limits.h>
#include<utility>
#include<string.h>
#include<math.h>
using namespace std;
#define pii pair< int , int >

int rev_sort(int i,int j)
{
    return (i>j);
}
const int mod=10000003;
long long int mat[][5]={{0,1,1,2,2},
                        {1,0,0,0,0},
                        {0,1,0,0,0},
                        {0,0,0,1,1},
                        {0,0,0,0,1}
                        },ans[5][5],temp[5][5],p[5][5];

void mmul(long long int a[5][5],long long int b[5][5])
{
    long long int tat=0;
    for(int i=0;i<5;++i)
    {
        for(int j=0;j<5;++j)
        {
            tat=0;
            for(int k=0;k<5;++k)
                 {
                    tat=(tat+a[i][k]*b[k][j])%mod;
                 }
                 p[i][j]=tat;
        }
    }
    for(int i=0;i<5;++i)
    {
        for(int j=0;j<5;++j)
        {
            a[i][j]=p[i][j];
        }
    }

}

void pow(int n)
{
    for(int i=0;i<5;++i)
    {
        for(int j=0;j<5;++j)
        {
            temp[i][j]=mat[i][j];
            ans[i][j]=0;
        }
    }
    for(int i=0;i<5;++i)
    {
        ans[i][i]=1;
    }

    while(n)
    {
        if(n&1)
        {
            mmul(ans,temp);
        }
        n>>=1;
        mmul(temp,temp);
    }
}

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n;
        scanf("%d",&n);
        if(n==0)
        {
            printf("0\n");
            continue;
        }
        if(n==1)
        {
            printf("1\n");
            continue;
        }
        if(n==2)
        {
            printf("1\n");
            continue;
        }
        pow(n-2);
        long long int q=(ans[0][0]+ans[0][1]+2*ans[0][3]+ans[0][4])%mod;
        printf("%lld\n",q);
    }


    return 0;
}
