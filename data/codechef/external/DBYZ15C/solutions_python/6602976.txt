#include <cstdio>
#include <iostream>
#include <vector>
#include <set>
#include <cstring>
#include <map>
#include <algorithm>
#include <utility>
#include <cmath>
#include <stack>
#include <queue>
#include <sstream>
#include <numeric>
#include <iterator>
using namespace std;

#define maX(a, b) ( (a) > (b) ? (a) : (b))
#define miN(a, b) ( (a) < (b) ? (a) : (b))
#define pb push_back
#define mp make_pair
#define fill(a, v) memset(a, v, sizeof a)
#define tr(v, it) for(typeof((v).begin()) it = (v).begin(); it != (v).end();it++)
#define sz(a) ((int)(a.size()))
#define ff first
#define ss second

const int INF = 1e9;
const double eps = 1e-9;
typedef long long lli;


lli N;

lli MOD;

vector<vector<lli> > v(31, vector<lli>(31));
vector<vector<lli> > zeros(31, vector<lli>(31));

void pre()
{
    for(lli i = 0;i < 31;i++) {
        for(lli j = 0;j < 31;j++) {
            v[i][j] = (i == j ? 1 : 0);
            zeros[i][j] = 0;
        }
    }

}

vector<vector<lli> > add(vector<vector<lli> > v1, vector<vector<lli> > v2)
{

    for(lli i = 1;i <= N;i++) {
        for(lli j = 1;j <= N;j++) {
            v1[i][j] = (v1[i][j] + v2[i][j])%MOD;
        }
    }

    return v1;
}

vector<vector<lli> > mul(vector<vector<lli> > v1, vector<vector<lli> > v2)
{
    vector<vector<lli> > res(31, vector<lli> (31));
    for(lli i = 1;i <= N;i++) {
        for(lli j = 1;j <= N;j++) {
            res[i][j] = 0;
            for(lli k = 1;k <= N;k++) {
                res[i][j] = (res[i][j] + v1[i][k] * v2[k][j])%MOD;
            }
        }
    }

    return res;
}

vector<vector<lli> > exp(vector<vector<lli> > base, long long p)
{
    vector<vector<lli> > ans = v;

    while(p > 0) {
        if(p&1)ans = mul(ans, base);
        p >>= 1;
        base = mul(base,base);
    }
    return ans;
}

vector<vector<lli> > getGP(long long K, long long powOf2, vector<vector<lli> > r)
{
    if(K == 1) {
        return v;
    }

    vector<vector<lli> > ans;

    if(K&1) {
        ans = exp(r, (K-1) * powOf2);
    } else {
        ans = zeros;
    }

    ans = add(ans, mul(add(v, exp(r, powOf2)), getGP(K/2, powOf2*2, r) ));
    return ans;
}



int main()
{
    pre();
    MOD = 1000000007LL;
    vector<vector<lli> > r;
    r = zeros;

    lli  M, K, a, b;
    cin >> N >> M >>K;

    for(int i = 0;i < M;i++) {
        cin >> a >> b;
        r[a][b]++;
    }


    vector<vector<lli> > tmp = getGP(K, 1, r);
    tmp = mul(tmp,r);

    lli Q;
    cin >> Q;

    while(Q--) {
        cin >> a >> b;
        cout << tmp[a][b] << endl;
    }
    return 0;

}








