#include<bits/stdc++.h>
using namespace std;
long long const mod = 1e9 + 7 ;
  static struct IO {
    char tmp[1 << 10];

    
	
	// fast input routines
    char cur;

    //#define nextChar() (cur = getc_unlocked(stdin))
    //#define peekChar() (cur)
    inline char nextChar() { return cur = getc_unlocked(stdin); }
    inline char peekChar() { return cur; }

    inline operator bool() { return peekChar(); }
    inline static bool isBlank(char c) { return (c < '-' && c); }
    inline bool skipBlanks() { while (isBlank(nextChar())); return peekChar() != 0; }

    inline IO& operator >> (char & c) { c = nextChar(); return *this; }

    inline IO& operator >> (char * buf) {
        if (skipBlanks()) {
            if (peekChar()) {
                *(buf++) = peekChar();
                while (!isBlank(nextChar())) *(buf++) = peekChar();
            } *(buf++) = 0; } return *this; }

    inline IO& operator >> (string & s) {
        if (skipBlanks()) {     s.clear(); s += peekChar();
            while (!isBlank(nextChar())) s += peekChar(); }
        return *this; }

    inline IO& operator >> (double & d) { if ((*this) >> tmp) sscanf(tmp, "%lf", &d); return *this; }

#define defineInFor(intType) \
    inline IO& operator >>(intType & n) { \
        if (skipBlanks()) { \
            int sign = +1; \
            if (peekChar() == '-') { \
                sign = -1; \
                n = nextChar() - '0'; \
            } else \
            n = peekChar() - '0'; \
            while (!isBlank(nextChar())) { \
                n += n + (n << 3) + peekChar() - 48; \
            } \
            n *= sign; \
        } \
        return *this; \
    }

    defineInFor(int)
        defineInFor(unsigned int)
        defineInFor(long long)

        // fast output routines

        //#define putChar(c) putc_unlocked((c), stdout)
        inline void putChar(char c) { putc_unlocked(c, stdout); }
    inline IO& operator << (char c) { putChar(c); return *this; }
    inline IO& operator << (const char * s) { while (*s) putChar(*s++); return *this; }

    inline IO& operator << (const string & s) { for (int i = 0; i < (int)s.size(); ++i) putChar(s[i]); return *this; }

    char * toString(double d) { sprintf(tmp, "%lf%c", d, '\0'); return tmp; }
    inline IO& operator << (double d) { return (*this) << toString(d); }

   

#define defineOutFor(intType) \
    inline char * toString(intType n) { \
        char * p = (tmp + 30); \
        if (n) { \
            bool isNeg = 0; \
            if (n < 0) isNeg = 1, n = -n; \
            while (n) \
            *--p = (n % 10) + '0', n /= 10; \
            if (isNeg) *--p = '-'; \
        } else *--p = '0'; \
        return p; \
    } \
    inline IO& operator << (intType n) { return (*this) << toString(n); }

    defineOutFor(int)
        defineOutFor(long long)

#define endl ('\n')
#define cout __io__
#define cin __io__
} __io__;
typedef long long ll;
 
long long n , m , K , a , b , q;
 
class data{
            public:
	   long long mat[32][32] ;
	   data()
	   { memset(mat,0,sizeof mat) ;
	   }
};
 
data A,B,ans ;
 
//long long 
 
data powa(data x ,long long int y)
{
	if(y==1) return x;
	else if(y==2)
	{
	
	data xx ;
	
	int i , j , k ;
	
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			for(k=1;k<=n;k++) 
			{
				xx.mat[i][j] += x.mat[i][k]*x.mat[k][j] ;
				
				if(xx.mat[i][j]>=mod) xx.mat[i][j] %= mod;
			
			}
			
		}
	} 
	
	   return xx ;
     }
	
	else
	
	{
		data xx = powa(x,y/2);
		xx = powa(xx,2);
		
		if(!(y&1)) return xx;
		
		
			// xx multiplied by x
			data xxx ;
			
				int i , j , k ;
	
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			for(k=1;k<=n;k++) 
			{
				xxx.mat[i][j] += xx.mat[i][k]*x.mat[k][j] ;
				
				if(xxx.mat[i][j]>=mod) xxx.mat[i][j] %= mod;
			
			}
			
		}
	}  
	
	       return xxx ;
	}
		
}
 
 
data powb(long long int y)
{
	data x;
	// the time has come...do it man
	
	if(y==1) return A ;
	
	
	if(y==2)
	{
		data xx = A ;
	int i , j, k;
	
	for(i=1;i<=n;i++) 
	{
	    if(xx.mat[i][i]!=mod-1) xx.mat[i][i] += 1;
		else xx.mat[i][i] = 0;
	}
	
		
        // A*xx	
	
	    data xxx ;
	    for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			for(k=1;k<=n;k++) 
			{
				xxx.mat[i][j] += A.mat[i][k]*xx.mat[k][j] ;
				
				if(xxx.mat[i][j]>=mod) xxx.mat[i][j] %= mod;
			
			}
			
		}
	}  
	
	return xxx ;
   }
   
   data xx = powa(A,y/2) ;
	int i , j, k;
	for(i=1;i<=n;i++) 
	{
	    if(xx.mat[i][i]!=mod-1) xx.mat[i][i] ++;
		else xx.mat[i][i] = 0;
	}
	
	
   x = powb(y/2) ;
   
   data xxx ;
   
    for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
		{
			for(k=1;k<=n;k++) 
			{
				xxx.mat[i][j] += x.mat[i][k]*xx.mat[k][j] ;
				
				if(xxx.mat[i][j]>=mod) xxx.mat[i][j] %= mod;
			
			}
			
		}
	}  
	
	  if(!(y&1))return xxx ;
   
	
	
	// last case..tired..don`t give up
	// xxx + A^n
	
	x  = powa(A,y) ;
	
	for(i=1;i<=n;i++)
	{
		
		for(j=1;j<=n;j++)
		{
			xxx.mat[i][j] = xxx.mat[i][j] + x.mat[i][j] ;
			if(xxx.mat[i][j]>=mod) xxx.mat[i][j] %= mod ;
		}
	}
	return xxx;
	
}
 
int main()
{
	int i;
	cin >> n >> m >> K ;
	
	for(i=0;i<m;i++)
	{
		cin >> a;
		cin >> b ;
		
		A.mat[a][b] ++ ;
		
	}
	
//	ans = powa(A,200154);
	
	
	ans = powb(K) ;
//	data anss = powb(3);
//	cout<<anss.mat[1][1]<<"hi"<<endl;
	cin >> q;
	
	for(i=0;i<q;i++)
	{
		cin>>a>>b;
		if(K==0) cout<<"0\n";
		else cout<<ans.mat[a][b]<<"\n";
	}
	
	return 0;
	
}
 