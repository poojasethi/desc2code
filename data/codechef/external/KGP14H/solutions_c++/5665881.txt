#include <bits/stdc++.h>
#include<vector>
using namespace std;
int dp[105][105][105];
int cost[105][105];
int func(int i,int a_end,int b_end)
{
    int val;
    if(dp[i][a_end][b_end]!=-1)
        return dp[i][a_end][b_end];
    if(i==0)
        return cost[i][a_end]+cost[i][b_end];
    val=cost[i][a_end]+func(i-1,i,b_end);
    val=min(val,func(i-1,a_end,i)+cost[i][b_end]);
    dp[i][a_end][b_end]=val;
    return val;
}
int main()
{
    int n,i,k,r,x,y,j,t=0;
    cin>>n;
    while(n--)
    {
    	t++;
    memset(dp,-1,sizeof(dp));
    cin>>k>>r;
    for(i=0;i<=k+1;i++)
    {
        cin>>x;
        for(j=0;j<k+1;j++)
        {
            cin>>y;
            cin>>cost[x][y];
        }
    }
    cout <<"Case "<<t<<": "<< func(k,k+1,k+1)+(k+1)*r << endl;
    }
    return 0;
}
