// adijimmy
#include <bits/stdc++.h>
using namespace std;

typedef long long int ll;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector<vector<int> > VVI;
const int mod = 1e9+7;
const int INF = 1e9+9;

#define pb push_back
#define mp make_pair
#define F first
#define S second

#define CLR(a,x) memset(a,x,sizeof (a));
#define rep(i,n) for(int i=0;i<n;i++)
#define repi(i,n) for(int i=n-1;i>=0;i--)
#define fr(i,a,b) for(int i=a;i<=b;i++)
#define bk(i,a,b) for(int i=b;i>=a;i--)

#define gi(n) scanf("%d",&n);
#define gl(n) scanf("%lld",&n);
#define ps printf(" ");
#define pn printf("\n");
#define pi(n) printf("%d",n);
#define pl(n) printf("%lld",n);

#define MAX 105
int dist[MAX][MAX];
int dp[MAX][MAX][MAX];
int k;
int solve(int pos,int a,int b){
  if(pos == k+1)
    return dist[a][k+1]+dist[b][k+1];
  int &res = dp[pos][a][b];
  if(res != -1) return res;
  res = INF;
  res = min(res,solve(pos+1,a,pos)+dist[b][pos]);
  res = min(res,solve(pos+1,pos,b)+dist[a][pos]);
  return res;
}
int main(){
int t,n,r;
gi(t);
int cas = 1;
while(t--){
    gi(k);gi(r);
    rep(i,k+2){
       int x;
       gi(x);
       dist[x][x] = 0;
       rep(j,k+1){
         int y,d;
         gi(y);gi(d);
         dist[x][y] = d;
       }
    }
    CLR(dp,-1);
    int ans = solve(0,0,0);
    printf("Case %d: %d\n",cas++,ans+((k+1)*r));
}
return 0;
}
