#include<bits/stdc++.h>
using namespace std;
#define MAX 1000005

int st1[4*MAX],st2[4*MAX];
int arr[MAX];
void buildst1(int index,int ss,int se)
{
  if(ss==se)
  {
    st1[index]=arr[ss];
    return ;
  }
  int mid=(ss+se)/2;
  buildst1(2*index,ss,mid);
  buildst1(2*index+1,mid+1,se);
  st1[index]=min(st1[2*index],st1[2*index+1]);
}
int querymin(int index,int ss,int se,int l,int r)
{
  if(l>r || ss>r || l>se)
    return INT_MAX;
  if(l<=ss && r>=se)
    return st1[index];
  int mid=(ss+se)/2;
  int leftans=querymin(2*index,ss,mid,l,r);
  int rightans=querymin(2*index+1,mid+1,se,l,r);
  int ans= min(leftans,rightans);
  return ans;
}

void buildst2(int index,int ss,int se)
{
  if(ss==se)
  {
    st2[index]=arr[ss];
    return ;
  }
  int mid=(ss+se)/2;
  buildst2(2*index,ss,mid);
  buildst2(2*index+1,mid+1,se);
  st2[index]=max(st2[2*index],st2[2*index+1]);
}
int querymax(int index,int ss,int se,int l,int r)
{
  if(l>r || ss>r || l>se)
    return INT_MIN;
  if(l<=ss && r>=se)
    return st2[index];
  int mid=(ss+se)/2;
  int leftans=querymax(2*index,ss,mid,l,r);
  int rightans=querymax(2*index+1,mid+1,se,l,r);
  return max(leftans,rightans);
}
 
 
int main()
{
	int n;
	cin>>n;
     
	 for(int i=1;i<=n;i++)
	 scanf("%d",&arr[i]);
	 buildst1(1,1,n);
	 buildst2(1,1,n);
	  int q;
	 scanf("%d",&q);
	 while(q--)
	 {
	 	 int l,r;
	 	scanf("%d %d",&l,&r);
	 	
	 	l++;
	 	r++;
	 	int m=querymin(1,1,n,l,r);
	 	int M=querymax(1,1,n,l,r);
	 	int M1=querymax(1,1,n,1,l-1);
	 	int M2=querymax(1,1,n,r+1,n);
	 	int M3=max(M1,M2);
	 	float max3=(float)m+max((float)(M-m)/2,(float)M3);
	 	printf("%0.1f\n",max3);
	 	
	 	
	 }
	 	
}