#include<stdio.h>
#include <math.h>
#include <limits.h>
#define ll long long
long long int min(ll int x,ll int y) { return (x < y)? x: y; }
long long int max(ll int x,ll int y) { return (x>y)? x: y; }
long long int constt(ll int a[],ll int *st,ll int l,ll int h,ll int p)//constructing tree for min...
{
    if(l==h){
        st[p]=a[l];
        return a[l];
    }
    int m=l+(h-l)/2;//mid...
    st[p]=min(constt(a,st,l,m,2*p+1),constt(a,st,m+1,h,2*p+2));
    return st[p];
}
long long int consttr(ll int a[],ll int *pt,ll int l,ll int h,ll int p)//constructing tree fpr max...
{
    if(l==h){
        pt[p]=a[l];
        return a[l];
    }
    int m=l+(h-l)/2;//mid...
    pt[p]=max(consttr(a,pt,l,m,2*p+1),consttr(a,pt,m+1,h,2*p+2));
    return pt[p];
}
long long int power(ll int base,ll int power)//cal power...
{
        int result=1;
        while (power>0)
        {
                if (power%2==1)
                        result = (result*base);
                base = (base*base);
                power/=2;
        }
        return result;
}
long long int *constructmin(long long int a[],ll int  n)//allocating memory...
{
   ll int pos=0,k=2;
  ll int x = (int)(ceil(log2(n)));
  ll int max_size = 2*(int)power(k, x) - 1;
  ll int *st = new ll int[max_size];
  constt(a,st,0,n-1,pos);
  return st;
}
long long int *constrmax(long long int a[],ll int  n)//allocating memory...
{
   ll int pos=0,k=2;
  ll int x = (int)(ceil(log2(n)));
  ll int max_size = 2*(int)power(k, x) - 1;
  ll int *pt = new ll int[max_size];
  consttr(a,pt,0,n-1,pos);
  return pt;
}
long long int rangeqmin(long long int *st,long long int ql,int qh,int l,int h,int p)
{
    if((qh>=h)&&(ql<=l)){
        return st[p];
    }
    else if (qh<l||ql>h)
        return INT_MAX;
   ll int m=(l+h)/2;
    return(min(rangeqmin(st,ql,qh,l,m,2*p+1),rangeqmin(st,ql,qh,m+1,h,2*p+2)));
}
long long int rangeqmax(long long int *pt,long long int ql,int qh,int l,int h,int p)
{
    if((qh>=h)&&(ql<=l)){
        return pt[p];
    }
    else if (qh<l||ql>h)
        return INT_MIN;
   ll int m=(l+h)/2;
    return(max(rangeqmax(pt,ql,qh,l,m,2*p+1),rangeqmax(pt,ql,qh,m+1,h,2*p+2)));
}

int main()
{
    long long int n,a[100000],q,t,i,w;
    long long int low,high,qlow,qhigh,pos;
     double k;
    scanf("%lli",&n);
    for(i=0;i<n;i++)
    scanf("%lli",&a[i]);
    scanf("%lli",&q);
    long long int *st=constructmin(a,n);
    ll int *pt=constrmax(a,n);
    while(q--)
    {
        scanf("%lli %lli",&qlow,&qhigh);

        //printf("%lli\n",w);
        double max1=(double)rangeqmax(pt,0,qlow-1,0,n-1,0);
         double max2=(double)rangeqmax(pt,qhigh+1,n-1,0,n-1,0);
         double max3=(double)max(max1,max2);
         double min1=(double)rangeqmin(st,qlow,qhigh,0,n-1,0);
         double max4=(double)rangeqmax(pt,qlow,qhigh,0,n-1,0);
        // printf("%.1lf %.1lf ",max3,(max4-min1)/2);
         if(max3>((max4-min1)/2))
            printf("%.1lf\n",max3+min1);
         else{
                printf("%.1lf\n",(max4-min1)/2+min1);
         }
        }
        return 0;
    }
