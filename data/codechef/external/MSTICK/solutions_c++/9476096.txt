#include<iostream>
using namespace std;
int a[100000],mintree[400000],maxtree[400000];
void formmintree(int low,int high,int pos)
{
    if(low==high) mintree[pos]=a[low];
    else
    {
        int mid=(low+high)/2;
        formmintree(low,mid,2*pos+1);
        formmintree(mid+1,high,2*pos+2);
        mintree[pos]=min(mintree[2*pos+1],mintree[2*pos+2]);
    }
}
void formmaxtree(int low,int high,int pos)
{
    if(low==high) maxtree[pos]=a[low];
    else
    {
        int mid=(low+high)/2;
        formmaxtree(low,mid,2*pos+1);
        formmaxtree(mid+1,high,2*pos+2);
        maxtree[pos]=max(maxtree[2*pos+1],maxtree[2*pos+2]);
    }
}
int querymax(int qlow,int qhigh,int low,int high,int pos)
{
    if(qlow<=low&&qhigh>=high) return maxtree[pos];
    if(qlow>high||qhigh<low) return -10000000;
    int mid=(low+high)/2;
    return max(querymax(qlow,qhigh,low,mid,2*pos+1),querymax(qlow,qhigh,mid+1,high,2*pos+2));
}
int querymin(int qlow,int qhigh,int low,int high,int pos)
{
    if(qlow<=low&&qhigh>=high) return mintree[pos];
    if(qlow>high||qhigh<low) return 100000009;
    int mid=(low+high)/2;
    return min(querymin(qlow,qhigh,low,mid,2*pos+1),querymin(qlow,qhigh,mid+1,high,2*pos+2));
}
int main()
{
    int n,q,l,r,i,j,q1,q2,q3,q4;
    double ans;
    cin>>n;
    for(i=0;i<n;i++)
        cin>>a[i];
    formmintree(0,n-1,0);
    formmaxtree(0,n-1,0);
    cin>>q;
    while(q--)
    {
        cin>>l>>r;
        q1=querymin(l,r,0,n-1,0);
        q2=querymax(l,r,0,n-1,0);
        //cout<<q1<<"\t"<<q2<<endl;
        if(l>0)
            q3=querymax(0,l-1,0,n-1,0);
        else
            q3=0;
        if(r<n-1)
            q4=querymax(r+1,n-1,0,n-1,0);
        else
            q4=0;
        q3=max(q3,q4);
        q4=q2-q1;
 
        if(q4>2*q3)
            {ans=q4;ans=(q1+(ans/2));}
        else
            {ans=(q3+q1)*1.0;}
        cout.setf(ios::fixed);
        cout.setf(ios::showpoint);
        cout.precision(1);
        cout<<ans<<endl;
    }
    return 0;
}
 