#include <bits/stdc++.h>
using namespace std;
#define MAX 100000009
#define N 100001
long long int input[N],seg[4*N],seg1[4*N];
void construct(int low,int high,int pos)
{
    if(low==high)
    {
        seg[pos]=input[low];
        return;
    }
    int mid=(low+high)/2;
    construct(low,mid,2*pos+1);
    construct(mid+1,high,2*pos+2);
    seg[pos]=min(seg[2*pos+1],seg[2*pos+2]);
}
void constructa(int low,int high,int pos)
{
    if(low==high)
    {
        seg1[pos]=input[low];
        return;
    }
    int mid=(low+high)/2;
    constructa(low,mid,2*pos+1);
    constructa(mid+1,high,2*pos+2);
    seg1[pos]=max(seg1[2*pos+1],seg1[2*pos+2]);
}
int rng(int qlow,int qhigh,int low,int high,int pos)
{
    if(qlow<=low&&qhigh>=high)   //total overlap
        return seg[pos];
    if(qlow>high||qhigh<low)    //no overlap
        return MAX;
    int mid=(low+high)/2;
    return min(rng(qlow,qhigh,low,mid,2*pos+1),rng(qlow,qhigh,mid+1,high,2*pos+2));
}
int rnga(int qlow,int qhigh,int low,int high,int pos)
{
    if(qlow<=low&&qhigh>=high)   //total overlap
        return seg1[pos];
    if(qlow>high||qhigh<low)    //no overlap
        return 0;
    int mid=(low+high)/2;
    return max(rnga(qlow,qhigh,low,mid,2*pos+1),rnga(qlow,qhigh,mid+1,high,2*pos+2));
}
int main()
{
    int l,r,q,i,n;
    scanf("%d",&n);
    for(i=0;i<n;i++)
        scanf("%d",&input[i]);
   construct(0,n-1,0);//min seg tree
   constructa(0,n-1,0);//max seg tree
   scanf("%d",&q);
   while(q--)
   {
    double c=0,ans=0;
    int x=0,y=0;
    scanf("%d%d",&l,&r);
    x=rng(l,r,0,n-1,0);
    y=rnga(l,r,0,n-1,0);
    ans+=(double)x;
    y=(y-x);
    c=(double)y/2;
    int m1=0,m2=0;
    if(l>0)
        m1=rnga(0,l-1,0,n-1,0);
    if(r<n-1)
        m2=rnga(r+1,n-1,0,n-1,0);
    int temp=max(m1,m2);
   ans=ans+max(c,(double)temp);
    printf("%0.1lf\n",ans);
   }
    return 0;
}
