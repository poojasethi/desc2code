//24062015 1100 codechef MSTICK
#include<stdio.h>
#include<algorithm>

using namespace std;

#define MX 100007

struct data
{
      int mn, mx;
      data(){}
      data(int a)
      {
            mn=mx=a;
      }
      data(int mn, int mx)
      {
            this->mn=mn;
            this->mx=mx;
      }
};

int a[MX];
data t[4*MX];

data mrg(data a, data b)
{
      return data(min(a.mn, b.mn), max(a.mx, b.mx));
}

void build(int nd, int tl, int tr)
{
      if(tl==tr)
      {
            t[nd]=data(a[tl]);
            return ;
      }

      int tm=(tl+tr)>>1;
      int lc=nd<<1;
      int rc=lc+1;

      build(lc, tl, tm);
      build(rc, tm+1, tr);

      t[nd]=mrg(t[lc], t[rc]);
}

data query(int nd, int tl, int tr, int l, int r)
{
      if(tr<l || tl>r)return data(1e9, -1);

      if(tl>=l && tr<=r)return t[nd];

      int tm=(tl+tr)>>1;
      int lc=nd<<1;
      int rc=lc+1;

      return mrg(query(lc, tl, tm, l, r), query(rc, tm+1, tr, l, r));
}

int main()
{
      int n, i, q, l, r;
      scanf("%d", &n);
      for(i=0; i<n; i++)
      {
            scanf("%d", &a[i]);
      }
      build(1, 0, n-1);
      scanf("%d", &q);
      while(q--)
      {
            scanf("%d %d", &l, &r);
            data p=query(1, 0, n-1, l, r);
            printf("%.1lf\n", (double)p.mn+max((double)(max(query(1, 0, n-1, 0, l-1).mx, query(1, 0, n-1, r+1, n-1).mx)), (p.mx-p.mn)/2.0));
      }
      return 0;
}
