#include<iostream>
#include<cstdio>
#include<cmath>
#define mod1 -1
#define mod 100000001

using namespace std;


int  l,r,arr[100008],tree1[2000008],tree[2000008];

void build_tree(int  idx,int  low,int   high)
{
	if(low>high)
	return;
	if(low==high)
	{
	tree[idx]=arr[low];
	return;
    }
    int   mid=(low+high)/2;
    build_tree(2*idx,low,mid);
    build_tree(2*idx+1,mid+1,high);
    tree[idx]=min(tree[2*idx],tree[2*idx+1]);
}

void build_tree1(int   idx,int   low,int   high)
{
	if(low>high)
	return;
	if(low==high)
	{
	tree1[idx]=arr[low];
	return;
    }
    int   mid=(low+high)/2;
    build_tree1(2*idx,low,mid);
    build_tree1(2*idx+1,mid+1,high);
    tree1[idx]=max(tree1[2*idx],tree1[2*idx+1]);
}

int   getmin(int   idx,int   low,int   high)
{
	if(l>r || l>high || low>r||low>high)
	return mod;
	if(l<=low && r>=high)
	return tree[idx];
	return min(getmin(2*idx,low,(low+high)/2),getmin(2*idx+1,((low+high)/2)+1,high));
}

int   getmax(int   idx,int   low,int   high)
{
	if(l>r || l>high || low>r||low>high)
	return mod1;
	if(l<=low && r>=high)
	return tree1[idx];
	return max(getmax(2*idx,low,(low+high)/2),getmax(2*idx+1,((low+high)/2)+1,high));
}

int main()
{
	double temp,ans;
	int  low,high,i,n,q,x,y,z,w,left,right;
	scanf("%d",&n);
	for(i=0;i<n;i++)
	scanf("%d",&arr[i]);
	build_tree(1,0,n-1);
	build_tree1(1,0,n-1);
	l=3;
	r=9;
	scanf("%d",&q);
	while(q--)
	{
		scanf("%d %d",&l,&r);
		
		left=l;
		right=r;
		x=getmin(1,0,n-1);
		y=getmax(1,0,n-1);
		
		l=0;
		r=left-1;
		z=getmax(1,0,n-1);
		
		l=right+1;
		r=n-1;
		w=getmax(1,0,n-1);
	
		temp=(double)y-(double)x;
		temp=max((double)w,max((double)z,(double)temp/(double)2.0));
		ans=x+temp;
		printf("%.1f\n",ans);
	}
	return 0;
}