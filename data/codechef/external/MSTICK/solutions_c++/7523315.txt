#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long

struct segtree {
    LL mn,mx;
}tree[1000000];
LL a[100005];
inline void build(int node,int rs,int re) {
    if(rs==re) {
        tree[node].mn=tree[node].mx=a[rs];
        return ;
    }
    build(node*2,rs,(rs+re)/2);
    build(node*2+1,(rs+re)/2+1,re);
    tree[node].mn=min(tree[node*2].mn,tree[node*2+1].mn);
    tree[node].mx=max(tree[node*2].mx,tree[node*2+1].mx);
}
LL query1(int node,int rs,int re,int qs,int qe) {
    if(qs<=rs && re<=qe) {
        return tree[node].mx;
    }
    if(rs>qe || re<qs) {
        return 0;
    }
    LL tmp1,tmp2;
    tmp1=query1(node*2,rs,(rs+re)/2,qs,qe);
    tmp2=query1(node*2+1,(rs+re)/2+1,re,qs,qe);
    return max(tmp1,tmp2);
}
LL query2(int node,int rs,int re,int qs,int qe) {
    if(qs<=rs && re<=qe) {
        return tree[node].mn;
    }
    if(rs>qe || re<qs) {
        return INF+5;
    }
    LL tmp1,tmp2;
    tmp1=query2(node*2,rs,(rs+re)/2,qs,qe);
    tmp2=query2(node*2+1,(rs+re)/2+1,re,qs,qe);
    return min(tmp1,tmp2);
}
int main() {
    int n;sci(n);
    F(i,0,n) scanf("%lld",&a[i]);
    build(1,0,n-1);
    int q;sci(q);
    while(q--) {
        int x,y;sci(x);sci(y);
        double tmp1=query2(1,0,n-1,x,y);
        double tmp2=query1(1,0,n-1,x,y);
        double a=0,b=0;
//      cout<<tmp1<<" "<<tmp2<<endl;
        if(x!=0) {
            a=query1(1,0,n-1,0,x-1);
        }
        if(y!=n-1) {
            b=query1(1,0,n-1,y+1,n-1);
        }
        double ans=max(tmp1+0.5*(tmp2-tmp1),max(tmp1+a,tmp1+b));
        printf("%.1lf\n",ans);
    }
}
