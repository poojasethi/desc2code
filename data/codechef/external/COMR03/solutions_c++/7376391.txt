#include<stdio.h>
# define MAX 10000
unsigned long long triangle[MAX + 1][MAX + 1];

void makeTriangle()
 {
    int i, j;


    triangle[0][0] = 1;

    for(i = 1; i < MAX; i++)
	 {
        triangle[i][0] = 1;
        for(j = 1; j <= i; j++)
	    {
            triangle[i][j] = (triangle[i - 1][j - 1] + triangle[i - 1][j]) %100000;
        }
    }
}

unsigned long long C(int n, int r)
 {
    return triangle[n][r];
}

int main()
{
    makeTriangle();
    int T;
    scanf("%d", &T);
    while(T--)
    {
        int N;
        scanf("%d", &N);
        int i;
        unsigned long long int answer =0;
        switch (N)
        {
        case 1:
            printf("1\n");
            break;
        case 2:
            printf("3\n");
            break;
        default:
        {
            int limit = N%2==0? (N /2) -1:(N/2);
            int n_even =0;
            if( N%2 ==0)
            {
                n_even = C(N,N/2);
            }
            for(i=1;i<=limit;i++)
            {
                answer +=(2*C(N,i));
                answer %= 100000;
            }
            printf("%lld\n", (answer+ 1+ n_even) % 100000);
            break;
        }
        }
    }
    return 0;
}
