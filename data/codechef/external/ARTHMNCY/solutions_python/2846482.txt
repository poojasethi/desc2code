/*
   aiccha(Saksham Garg : sk19dude@gmail.com)
Algorithm:
#tags:
date: Fri Oct 18 16:24:24 IST 2013
 */

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>

using namespace std;
typedef vector<int> vi; 
typedef pair<int,int> ii;
typedef long long LL;
#define FL(a) memset(a, 0, sizeof a);
#define fill(a,v,N) memset(a, v, sizeof(a[0])*N)
#define sz(a) int((a).size()) 
#define pb push_back 
#define si(n) scanf("%d",&n)
#define sin(n) scanf("%d\n",&n) // for scanning strings ..
#define sill(n) scanf("%lld",&n)
#define pi(n) printf("%d\n",n);
#define pill(n) printf("%lld\n",n);
#define pis(n) printf("%d ",n);

#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())  // map and set find .. 
#define cpresent(c,x) (find(all(c),x) != (c).end())  // stl find ..
#define FREP(b) for(int i=0;i<b;i++)
#define FREPr(b) for(int i=b-1;i>=0;i--)
#define REP(a,b,c) for(int a=b;a<c;a++)
#define REPr(a,b,c) for(int a=b;a>b;a--)
#define mp(a,b) make_pair(a,b);
typedef pair<int, int> ii;
#define MAX_S 10000002
#define MOD 10007
/*
   struct data{
   };
   bool operator < (const data &a1, const data &a2){
   }
 */
int cnt[10000005];
bool sieve[10000005];
long long int ncr(long long int n)
{
    long long int j=n,i=n;
    long long int k=1;
    long long int ans=1;
    while(j>i/2 && k<=i/2)
    {   
        ans = ((ans*j)/k)%10007;
        j--;
        k++;
    }   
    return ans;
}
int power(int n)

{
    if (n < 0)  return 0;
    if (n == 0) return 1;
    if (n == 1) return 2;
    
    int a = power(n/2);
    int b = ((a*a)%MOD+MOD)%MOD;
    if (n%2)    b = ((b*2)%MOD+MOD)%MOD;
    return b;
 
 
}
int main()
{
    for (int i = 2; i < MAX_S + 1; i++){
        if (!sieve[i]) {
            for (int j = 2 * i; j < MAX_S + 1; j += i) {
                sieve[j] = 1;
            }
        }
    }
    for (int i = 2; i < MAX_S + 1; i++){
        cnt[i] = cnt[i-1];
        if(!sieve[i]){
            cnt[i] += 1;
        }
    }

    int f;
    LL ans;
    int n;
    while(si(n)!=EOF){
        f = cnt[n];
        if(f==0){
            ans =0;
        }
        else
            ans = power(f-1);
        printf("%lld\n",ans%10007);
    }
    return 0;
}
