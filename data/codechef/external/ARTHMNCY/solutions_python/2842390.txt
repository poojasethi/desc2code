#include <iostream>
#include <string>
#include <climits>
#include <cstdio>
#include <cstdlib>
#include <cmath>
#include <vector>
#include <algorithm>
#include <utility>
#include <queue>
#include <stack>
#include <map>
#include <set>
#include <cstring>
using namespace std;
#define PR(x) cout << #x " = " << x << "\n";
#define N 10000009
#define MOD 10007
bool mark[N];
std::vector<int64_t> prime;

void seive()
{
	for (int64_t p = 2; p <N; ++p)
	{
		if(!mark[p])
		{
			for (int64_t j = p*p; j <N; j+=p) mark[j]=true;
		}
	}
	for (int i = 2; i <N; ++i)
	{
		if(!mark[i]) prime.push_back(i);
	}
}

int64_t powMod(int64_t base,int64_t expo)
{
	if(expo==0)
	{
		return 1;
	}
	else if(expo%2==0)
	{
		int64_t ans=powMod(base,expo/2);
		return ans*ans%MOD;
	}
	else
	{
		return base*powMod(base,expo-1)%MOD;
	}
}

int main(int argc, char const *argv[])
{
	seive();
	int64_t n,r;
	while(scanf("%lld",&n)!=EOF)
	{
		// PR(n)
		if(n==1) { printf("0\n"); continue; }
		r=0;
		r=upper_bound(prime.begin(), prime.end(), n) - prime.begin();
		printf("%lld\n",powMod(2,r-1));
	}
	return 0;
}