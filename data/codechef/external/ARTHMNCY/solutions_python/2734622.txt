#include<iostream>
#include<vector>
#include<cmath>
using namespace std;

#define MOD 10007
#define MAX 10000001

int array[MAX+1];

int pointer=0;

vector<bool> isPrime(MAX);
vector<int> prime(MAX);
vector<int> prime_num(MAX);

void sieve(int n) {
	
	int s = sqrt(n);
	isPrime[1] = true;
	isPrime[0] = true;
	for(int i=2;i<=s;i++) {
		
		if(!isPrime[i]) {
			
//			cout << i << " ";
			for(int j=i*i;j<=n;j+=i) {
				
				isPrime[j] = true;
			}
		}
	}
	
	int count=0;
	for(int i=2;i<=n;i++) {
		
		if(!isPrime[i])
			prime[count++] = i;
	}
}

void preprocess(int n) {
	
	prime_num[0] = 0;
	for(int i=1;i<=n;i++) {
			
		prime_num[i] = prime_num[i-1] + !isPrime[i];
//		cout <<i << " "<< prime_num[i] << " ";	
//		cin.get();
	}
}

int main()
{
	sieve(MAX);
	preprocess(MAX);
	
		array[0]=1;
	for(int i=1;i<MAX+1;++i)
	{
		array[i]=(array[i-1]*2)%MOD;		
	}
	

	
		int n,p;
		

		
	while(cin>>n)
	
{

	
	p=prime_num[n];
	
	cout<<array[p-1]<<endl;
	
}
	
	return 0;
}