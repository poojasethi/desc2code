/* -.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.-.
 * File Name : b.cpp
 * Creation Date : 18-10-2013
 * Last Modified : Fri 18 Oct 2013 02:26:18 PM IST
 * Created By :  Vishal Gupta IIIT-H
 _._._._._._._._._._._._._._._._._._._._._.*/

#include <iostream>
#include <cmath>
#include <algorithm>
#include <cstdio>
#include <stack>
#include <vector>
#include <cstring>
#include <set>
#include <map>
#include <bitset>
#include <string>
#include <queue>
using namespace std;

#define sz(a) int((a).size())
#define all(c) c.begin(),c.end() //all elements of a container
#define rall(c) c.rbegin(),c.rend() 
#define tr(container,it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) //traversing a container..works for any type of container
#define present(container, element) (container.find(element) != container.end())    //used for set...return 1 if el is ps 0 otherwise
#define cpresent(container, element) (find(all(container),element) != container.end())  //same as present...but is for vectors
#define INF		INT_MAX
#define FOR(i,a,b) 	for( i= (int )a ; i < (int )b ; ++i)
#define rep(i,n) 	FOR(i,0,n)
#define FORD(i,a,b) for( i = (a); i>= (int) b; i--)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pil(n) printf("%d\n",n)
#define piL(n) printf("%lld ",n)
#define piLL(n) printf("%lld\n",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define PB push_back
#define MP make_pair
#define scan(v,n)	vector<int> v;rep(i,n){ int j;si(j);v.PB(j);}
#define fill(a,b) memset(a,b,sizeof(a))
#define mod (int)10007
#define pn printf("\n")
typedef long long int LL;
typedef vector <int> VI;
typedef pair < int ,int > PII;
typedef vector < PII > VPII;
template<class T>inline T gcd(T a,T b){return b?gcd(b,a%b):a;}
template<class T> inline T LCM(T a,T b){if(a<0)return LCM(-a,b);if(b<0)return LCM(a,-b);return a*(b/gcd(a,b));}
int seive[10000010]={0};
int nump[10000010]={0};
int dp[10000010]={0};
LL power(int a, int b)
{
	LL x=1,y=a;
	while(b)
	{
		if(b&1) x=(x*y)%mod;
		y=(y*y)%mod;
		b/=2;
	}
	return (int)x;
}

void pre()
{
	int i,j,cnt=0,lim=sqrt(10000010);
	seive[1]=1;
	for(i=2; i<=lim; i++)
	{
		if(seive[i]==0)
		{
		//	cnt++;
			for(j=2*i; j<=10000000; j=j+i)
			{
				seive[j]=1;
			}

		}
		//nump[i]=cnt;
	}
	cnt=0;
	for(i=1; i<=10000000; i++)
	{
	     if(seive[i]==0) cnt++;
	     nump[i]=cnt;
	}
	return;
}
void compute()
{
   int i,j,nume=1,deno=1,inv;
   dp[1]=1;
   for(i=2; i<=10000000; i++)
   {
         dp[i]= (int)((i*1ll*dp[i-1]*1ll)%mod);
         inv = power((i+1)/2,mod-2)%mod;
         dp[i]= (dp[i]*1ll*inv)%mod;
         
   }
  // for(i=1; i<=10; i++) pi(dp[i]);
  // pil(dp[100]);
  return ;
}
int main()
{
	pre(); 
       // compute();
        int T,t,n,inv;
        LL ans, temp1;
  //     si(t);
    //    rep(T,t)
	while(si(n)!=EOF)
	{
	 // si(n);
	  ans=0;
	  if(n==1) ans=0;
	  else if(n==2) ans=1;
	  else if(n==3 || n==4) ans=2;

	  else if(nump[n]%2==1 )
	  {
	    ans=power(2,nump[n]-1);
	  }
	  else if(nump[n]%2==0 )
	  {
	    ans=power(2,nump[n]-1);
	   // inv=power(2,mod-2)%mod;
	   // ans=(ans+(dp[nump[n]]*inv*1ll)%mod)%mod;
	   
	  }
	  piLL(ans);
	}
	return 0;
}
