//+++++++++++++++++++++++++++++//
////      Karan Aggarwal         //
////       IIIT-Hyderabad        //
////+++++++++++++++++++++++++++++//
//// Topic: 
#include<stdio.h>
#include<utility>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<sstream>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
using namespace std;
#define PB push_back
#define MP make_pair
#define clr(x) x.clear()
#define sz(x) ((int)(x).size())
#define F first
#define S second
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,b) for(i=0;i<b;i++)
#define rep1(i,b) for(i=1;i<=b;i++)
#define mod 10007
#define pi(n) printf("%d",n)
#define pin(n) printf("%d\n",n)
#define piw(n) printf("%d ",n)
#define pll(n) printf("%lld",n)
#define plln(n) printf("%lld\n",n)
#define pllw(n) printf("%lld ",n)
#define sll(n) scanf("%lld",&n)
#define ss(s) scanf("%s",s)
#define ps(s) printf("%s",s)
#define psn(s) printf("%s\n",s)
#define psw(s) printf("%s ",s)
#define si(n) scanf("%d",&n)
#define pn printf("\n")
#define pw printf(" ")
/*
inline int ri()
{
    int n=0;char c;
    while(1)
    { 
        c=getchar_unlocked();
        if(c=='\n'||c==' '||c==EOF)break;
        n=(n<<3) + (n<<1) +c-48;
    }
    return n;
}
inline long long rll()
{
    long long n=0;
    char c;
    while(1)
    { 
        c=getchar_unlocked();
        if(c=='\n'||c==' '||c==EOF)break;
        n=(n<<3) + (n<<1) + c - 48;
    }
    return n;
}
*/
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
char sieve[10000001];
int sum[10000001];
int power(int a, int p)
{
    if(p<0)return 0;
    int ret=1;
    while(p)
    {
        if(p&1)
            ret = (ret*a)%mod;
        a = (a*a)%mod;
        p>>=1;
    }
    return ret;
}
int main()
{
    int y,T,n,m,i,t,j,k,x;
    memset(sieve,0,sizeof(sieve));
    sieve[0]=sieve[1]=1;
    x = sqrt(10000001);
    for(i=2;i<=x;i++)
        if(!sieve[i])
            for(j=i*i;j<10000001;j+=i)
                sieve[j]=1;
    sum[0]=sum[1]=0;
    for(i=2;i<10000001;i++)
    {
        sum[i]=sum[i-1];
        if(!sieve[i])
            sum[i]++;
    }
    while(si(n)!=EOF)
    {
        pin(power(2,sum[n]-1));
    }
    return 0;
}

