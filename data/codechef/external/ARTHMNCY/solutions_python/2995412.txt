/*
KeyWords :
*/

#include <cstdio>
#include <sstream>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <algorithm>
#include <set>
#include <queue>
#include <stack>
#include <list>
#include <iostream>
#include <fstream>
#include <numeric>
#include <string>
#include <vector>
#include <cstring>
#include <map>
#include <iterator>
#define LL unsigned long long int
//#define inf 1<<30
#define mod 10007
#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define ROF(i,a,b) for(int i=a;i>=b;i--)
const int maxn=10000001;
using namespace std;
bool prime[maxn] ;
int PrimeList[maxn] ;
void sieve(){
    int Cur  = 0  ;
    for(int i=2;i<=10000000;i++){

        if(prime[i]==false){
            Cur++ ;
            for(int j=i+i;j<=10000000;j+=i) prime[j] = true ;
        }

        PrimeList[i] = Cur ;
    }

    //cout<<PrimeList.size()<<"\n" ;
    //for(int i=0;i<PrimeList.size();i++) cout<

}
LL BigMod(LL n,LL pow){

    if(pow==0) return 1 ;
    else if(pow%2==0){
        LL ret = BigMod(n,pow/2) ;
        return (ret*ret)%mod ;
    }
    else{
        return (BigMod(2,pow-1)*n)%mod ;
    }

}

LL solve(LL n){


    //int  cnt = upper_bound(PrimeList.begin(),PrimeList.end(),n)-PrimeList.begin()    ;
    int cnt = PrimeList[n] ;
    return BigMod(2,cnt-1) ;

}
int main(int argc, char **argv) {
    #ifdef unlucky_13
    freopen("//home//unlucky_13//in.txt", "r", stdin);
    #endif
    ios_base::sync_with_stdio(false) ;
    sieve() ;
    LL n ;
    while(cin>>n){
        if(n==1) cout<<"0"<<"\n" ;
        else cout<<solve(n)<<"\n" ;

    }

    return 0;
}














