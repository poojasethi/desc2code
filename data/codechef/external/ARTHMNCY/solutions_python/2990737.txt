#include <iostream>
#include <math.h>
 
 
using namespace std;
 
//int modulo(int a,int b,int c){
// long long x=1,y=a; // long long is taken to avoid overflow of intermediate results
// while(b > 0){
// if(b%2 == 1){
// x=(x*y)%c;
// }
// y = (y*y)%c; // squaring the base
// b /= 2;
// }
// return x%c;
//}
 
bool prime[10000001];
//int nopf[10000001];
int result[10000001];
 
int main()
{
for(int i=1; i<=10000000; i++){
prime[i]=1;
}
prime[1]=0;
int stop=(int)sqrt(10000000);
for(int i=2; i<=stop; i++){
if(prime[i]){
for(int j=i*i; j<=10000000; j+=i){
prime[j]=false;
}
}
}
// int cnt=0;
// for(int i=0; i<=10000000; i++)
// {
// if(prime[i])
// {
// cnt++;
// }
// nopf[i]=cnt;
// }
result[1]=0;
result[2]=1;
for(int i=3; i<=10000000; i++)
{
if(prime[i])
{
result[i]=(result[i-1]*2)%10007;
}
else{
result[i]=result[i-1];
}
}
int n;
while(cin >> n)
{
// if(n==1){
// cout << 0 << endl;
// }
// else
// {
// cout << modulo(2,nopf[n]-1,10007) << endl;
// }
cout << result[n] << endl;
}
return 0;
}