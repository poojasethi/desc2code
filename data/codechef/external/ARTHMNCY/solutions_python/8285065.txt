#include <bits/stdc++.h>
#include <assert.h>
#include <unordered_map>
using namespace std;
 
typedef long long ll;
typedef unsigned long long ull;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second
 
ll t, n, u, v, m, q, r, ql, qr, k, l, s, x, y, w, h, c, a, b, z;
const int N = 1e5 + 500;
const long long mod = 10007;
const long long INF = 1LL << 57LL;
const bool JUDGE = false;
int prime[10000000 + 7];
ll bp(ll b, ll p) {
	if (p == 1) return b % mod;
	if (p == 0) return 1;
	if (p & 1) {
		return (b * bp((b * b) % mod, p / 2)) % mod;
	}
	else return bp((b * b) % mod, p / 2);
}
int main(){
	csl;
	if (JUDGE) {
        freopen("cricket.in", "r", stdin);
        freopen("cricket.out", "w", stdout);
	}
	for (ll i = 2; i <= 10000000 + 4; ++i) {
		if (prime[i] == false)
			for (ll j = i * i; j <= 10000000 + 4; j += i) {
				prime[j] = true;
		}
	}
	for (int i = 2; i <= 10000000 + 4; ++i) prime[i] = !prime[i];
	for (int i = 2; i <= 10000000 + 4; ++i) prime[i] += prime[i - 1];
	while (cin >> n) {
		ll sol;
		if (n == 1) {
			cout << 0 << '\n';
			continue;
		}
		sol = bp(2LL, (ll)prime[n] - 1);
		if (sol < 0) sol += mod;
		cout << sol << '\n';
	}
	return 0;
}
/*#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;

#define mp make_pair
#define fst first
#define snd second
 
ll t, n, u, v, m, q, r, ql, qr, k, d, l, w, c, x;
const int N = 1e5 + 500;
const ll mod = 1e9 + 7;
const ll INF = 1LL << 57LL;
struct {
{
}
};*/