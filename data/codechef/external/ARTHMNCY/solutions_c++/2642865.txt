#include <iostream>
#include <cmath>
#include <algorithm>
#include <limits>
#include <vector>
#include <bitset>
#include <cstdlib>
#include <cstdio>
#include <cstring>
#include <time.h>
#include <map>
#include <stack>
#include <string>
#include <climits>
#include <ctime>
#include <fstream>
#include <sstream>
#include <set>
#include <queue>
using namespace std;
#define LL long long
#define ULL unsigned long long
#define LD long double
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define ABS(x) ((x)<0?-(x):(x))
#define si(n) scanf("%d",&n)
#define sf(n) scanf("%f",&n)
#define ss(n) scanf("%s",n)
#define pnl printf("\n")
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define FORR(i,n) for(int i=(n);i>=0;i--)
#define IT(Cf,it) for(typedef (Cf.begin()) i = Cf.begin();it!=Cf.end();it++)
#define DB(x) cout<<"\n"<<#x<<" = "<<(x)<<"\n";
#define SZ(a) (int)a.size()
#define pb push_back
#define CL(a,b) memset(a,b,sizeof(a))
#define GOLD ((1+sqrt(5))/2)
const double PI=3.14159265358979323846264338327950288419716939937510582097494459230;
void swaps (char *x,char *y){char temp;temp=*x;*x=*y;*y=temp;}
void swapi(int *a,int *b){int temp;temp=*a;*a=*b;*b=temp;}
ULL gcd(ULL a,ULL b){if(a==0)return b;if(b==0)return a;if(a==1||b==1)return 1;
if(a==b)return a;if(a>b)return gcd(b,a%b);else return gcd(a,b%a);}
#define MAXN 10000000
int C[MAXN+10];
int primes[MAXN+10];
#define MOD 10007	
void preprocess()
{
	int ans = 1;
	for(int i = 2;i<=MAXN;i++)
	{
		if(!primes[i]){
			if(i<=10000)
			{
				for(int j = i*i;j<=MAXN;j+=i)
				{
					primes[j] = 1;
				}
			}
			if(i>2)
				ans*=2;
		}
		if(ans>=MOD)
			ans%=MOD;
		C[i] = ans;
	}
}
int main()
{
    int Cases = 1;
    //si(Cases);
    int N;
    preprocess();
    while(scanf("%d",&N)!=EOF){
	    if(N==1)
		    printf("0\n");
	    else
	    {
		printf("%d\n",C[N]);
	    }
    }
    return 0;
}

