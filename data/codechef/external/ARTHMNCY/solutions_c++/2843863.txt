#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<iostream>
#include<algorithm>
#include<vector>
#include<queue>
#include<deque>
#include<map>
#include<set>
#include<utility>
using namespace std;

#define ff first
#define ss second
#define mp make_pair
#define pb push_back
#define pob pop_back
#define ll long long
#define MAX_SIZE 200005
#define MOD 10007
#define S(x) scanf("%d",&x)
#define SL(x) cin>>x
#define SC(x) scanf("%c",&x)
#define SS(x) scanf("%s",x)
#define SZ(x) x.size()
#define IT iterator
#define PI pair<int,int>
#define PL pair<ll,ll>
#define VI vector<int>
#define VL vector<ll>
#define VVI vector< VI >
#define VVL vector< VL >
#define VVP vector< PI >
#define READ() freopen("/Users/home/Desktop/input.txt","r",stdin)
#define WRITE() freopen("/Users/home/Desktop/output.txt","w",stdout)
#define dump() SC(dump_char)
int dump_char;



#define MAX 10000000

ll exp(ll b,ll p)
{
    ll ans=1;
    while(p)
    {
        if(p%2)
            ans=(ans*b)%MOD;
        b=(b*b)%MOD;
        p/=2;
    }
    return ans;
}

ll mid[MAX+5]={0};

void mid_cal()
{
    mid[2]=2;
    ll i,ans=3;
    for(i=3;i<=10007;i++)
    {
        mid[i]=ans;
        if(i%2)
        {
            ans=(ans+ans*(i-i/2)*exp(i/2+1,MOD-2))%MOD;
        }
        else
        {
            ans=(ans+ans*(i/2)*exp(i-i/2+1,MOD-2))%MOD;
        }
        //printf("%lld %lld\n",i,mid[i]);
    }
}


ll prime[MAX+5]={0};

int main()
{
    //READ();
    mid_cal();
    
    ll i,j,k;
    for(i=4;i<=MAX;i+=2)
        prime[i]=1;
    prime[0]=prime[1]=1;
    for(i=3,k=sqrt(MAX);i<=k;i+=2)
    {
        if(prime[i]==0)
        {
            for(j=i*i;j<=MAX;j+=2*i)
                prime[j]=1;
        }
    }
    
    
    //for(i=0;i<100;i++)printf("%d\n",filter[i]);
    prime[0]=0;
    for(i=1;i<=MAX;i++)
    {
        if(prime[i]==0)
            prime[i]=1;
        else
            prime[i]=0;
        prime[i]+=prime[i-1];
        //printf("%d %d\n",i,prime[i]);
    }
    //printf("%lld\n",prime[MAX]);
    ll n;
    
    while(scanf("%lld",&n)!=EOF)
    {
        n=prime[n];
        if(n==0)
            printf("0\n");
        else
            printf("%lld\n",exp(2,n-1));
    }
    return 0;
}