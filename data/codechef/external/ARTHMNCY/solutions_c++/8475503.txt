#include<bits/stdc++.h>
#include<stdio.h>
#include<math.h>
using namespace std;
map<int,int> prime1;
int countprime[10000009];
//map<string,int> m;
//map< int,int> powprime;
 bool primeArr[10000009];

void printPrime(int n) {
    if(n < 2) return;
       memset(primeArr, 0xFF, (n + 1) * sizeof(bool));
    int curNum = 2, endNum = sqrt(n) + 1, sievedNum = 0;
    while(curNum < endNum) {
        if(primeArr[curNum]) {
            for(int i = curNum; ; ++i) {
                sievedNum = i * curNum;
                if(sievedNum > n) break;
                if(primeArr[sievedNum]) primeArr[sievedNum] = false;
            }
        }
        ++curNum;
    }
    countprime[1]=0;
    countprime[2]=1;
    for(int i = 3; i <= n; ++i) {
        if(primeArr[i])
        {

          //  prime1[i]++;
        countprime[i]=(countprime[i-1]%10007*2%10007)%10007;
        }
        else
            countprime[i]=countprime[i-1];
    }

}

int countfactor(long long int n)
{
    int c=0;
    for(long long int i=1;i*i<n;i++)
    {
        if(n%i==0)
            c++;
    }
    return 2*c+1;

}

int main()
{
	int t;
 printPrime(10000020);
 int n;
 while(scanf("%d",&n)!=EOF)
{
    cout<<countprime[n]<<endl;
}
}
