#include<bits/stdc++.h>
using namespace std;
#define SIZE(X) ((int)(X.size()))//NOTES:SIZE(
#define LENGTH(X) ((int)(X.length()))//NOTES:LENGTH(
#define MP(X,Y) make_pair(X,Y)//NOTES:MP(
#define two(X) (1<<(X))//NOTES:two(
#define twoL(X) (((int64)(1))<<(X))//NOTES:twoL(
#define contain(S,X) (((S)&two(X))!=0)//NOTES:contain(
#define containL(S,X) (((S)&twoL(X))!=0)//NOTES:containL(
#define INF 1000000007
#define MOD 10007
typedef pair<int,int> ipair;//NOTES:ipair
typedef long long int64;//NOTES:int64
 /*author flame-alchemist*/
int a[10000001];
int pw[10000001];
vector<int> prime;
void sieve(){
	prime.push_back(2);
	for(int i=3;i<=10000000;i+=2){
		if(a[i]==0){
			prime.push_back(i);
			int64 j=(int64)i*(int64)i;
			for(;j<=10000000;j+=i){
				a[j]=1;
			}
		//	cout<<i<<endl;
		}
	}
	return;
}
int main(){
//	memset(a,0,sizeof(a));
	sieve();
	pw[0]=1;
	for(int i=1;i<10000001;i++){
		pw[i]=pw[i-1]*2;
		if(pw[i]>=MOD){
			pw[i]%=MOD;
		}
	}
	int n;
		
	while(scanf("%d",&n) != EOF){
		if(n == 1) {
			puts("0");
			continue;
		}
		int k=upper_bound(prime.begin(),prime.end(),n)-prime.begin();
		//cout<<"k = > " << k << "\n";
		printf("%d\n", pw[k - 1]);
	}
	
	return 0;
}