/*code written by rounak tibrewal*/
/*i just learned a new formula*/
/*number of ways to express a number as a product of co-primes = 2^(n-1) */
/*where n is number of prime factors of given number */
/*for detail read rounaktibrewal.wordpress.com*/
#include<cstdio>
#include<vector>
#include<iostream>
#define MAX 10000005
#define MOD 10007
using namespace std;
vector <bool> prime(MAX,true);
int primecount[MAX];

void seive()
{
    int i,cnt,j;
    prime[0]=false;
    prime[1]=false;
    for(i=4;i<MAX;i+=2)
    prime[i]=false;
    for(i=3;i*i<MAX;i+=2)
    {
        if(prime[i])
        {
            for(j=i*i;j<MAX;j+=(i<<1))
            prime[j]=false;
        }
    }
    cnt=1;
    primecount[0]=0;
    primecount[1]=0;
    primecount[2]=1;
    for(i=3;i<MAX;i++)
    {
        if(prime[i])
        cnt++;
        primecount[i]=cnt;
    }
}
int pow(int num)
{
    int x;
    if(num==0) return 1;
    if(num & 1)
    return ((2*pow(num-1))%MOD);
    else
    {
        x=pow(num/2);
        return (x*x)%MOD;
    }
}
int main()
{
     seive();
     int n,ans,res;
    while(scanf("%d",&n)!=EOF)
    {
        res=0;
        ans=primecount[n];
        /*printf("ans=%d\t",ans);*/
        if(ans!=0)
        res=pow(ans-1);
        printf("%d\n",res);
    }
    return 0;
}
