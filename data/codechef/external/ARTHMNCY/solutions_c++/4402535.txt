/*************** Author: sambit1993 ******************/
/*     Category: UpdateLater          */
#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
#include <utility>
#include <vector>
#include <list>
#include <string>
#include <set>
#include <queue>
#include <ctime>
#include <fstream>
#include <sstream>
#include <cmath>
#include <limits>
#include <climits>
#include <bitset>
#include <iomanip>
#include <stack>
#include <map>



#define s(x) scanf("%d",&x)
#define sil(x) scanf("%llu",&x)
#define sd(x) scanf("%ld",&x)


#define FOR(i,a,b) for( int i=(a); i<(b); ++i)               // exclusive for
#define FORR(i,a,b) for( int  i=(a-1) ; i>=(b); --i)
#define REP(k,a,b) for(int  k=(a); k <= (b); ++k)            // inclusive for
#define REPR(i,a,b) for( int i=(a) ; i>=(b); --i)
#define ALL(c) (c).begin(), (c).end()  
#define PB push_back 
#define MP make_pair 
#define SZ(x) ((int)((x).size()))
#define SRT(v) std::sort(ALL(v))
#define CTN(x) std::cout<<x<<'\n'                                //cout with newline
#define CTS(x) std::cout<<x<<" "                                //cout with space
#define CLR(x) std::memset(x,0,sizeof(x))
#define FILL(x,n) std::fill_n(x,sizeof(x),n)
#define T(t) int t; ri(t); while(t--) 
#define DBGA(x,n) {for(int i=0;i<n;i++) cerr<<x[i]<<" "; cerr<<"\n";}
#define REC(x) clock_t x=clock()
#define CPS CLOCKS_PER_SEC 
#define TM(x,y) CTN(((double)(y-x)/CPS))
#define abs(x) ((x)>0?(x):(-(x)))

typedef std::vector<int> VI;
typedef std::vector<long long int> VL;
typedef std::vector<std::string> VS;

typedef std::pair<int,int> PII;
typedef unsigned long long ull;
typedef long long ll;


#ifdef DEBUG
    #define  debug(args...) do{std::cout<<#args<<" : ";dbg,args;std::cout<<std::endl;}while(0)
#else
    #define debug(args...) 
#endif

struct debugger{
    template<typename T>
    debugger operator,(const T&v){
        std::cout<<v<<" ";
        return (*this);
    }
}dbg;
using namespace std;
/**************************GLOBAL DATA***************************************/
/**************************GLOBAL DATA***************************************/

const int sz=10000000+1;

bool notPrime[sz];
int numP[sz];

const ll MOD=10007;

ll modexp(ll b,ll p){
    if(p<0) return 0;
    if(b==0) return 0;
    if(p==0) return 1;
    ll ans=1;
    while(p){
        if(p&1)
            ans=(ans*b)%MOD;
         b=(b*b)%MOD;
         p>>=1;
    }
    return ans;
}

void seive()
{
    numP[2]=1;
    for(ll i=2;i<=sz;i+=1){
        if(!notPrime[i]){
            numP[i]=numP[i-1]+1;
            for(ll j=i;j*i<=sz;++j)
                notPrime[j*i]=true;
        }else
            numP[i]=numP[i-1];
    }
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    #ifdef LOCAL_SYS
        freopen("in.txt","r",stdin);
    #endif
   ll n;
   seive();
  while(cin>>n){
        debug(numP[n]);
        cout<<modexp(2,numP[n]-1)<<"\n";
  } 
}




