/*
 *Kartik Singal @ ka4tik
 */
#include<bits/stdc++.h>
using namespace std;
#define s(n) scanf("%d",&n)
#define MAXN 11111111
vector<int> primes;
bool mark[MAXN];
int cnt[MAXN];
#define mod 10007
long long modpow(long long n,long long p)
{
    long long ret=1;
    while(p)
    {
        if(p&1){
            ret=ret*n;
            if(ret>=mod) ret%=mod;
        }

        p=p/2;
        n*=n;
        if(n>=mod)
            n%=mod;
    }
    return ret;
}
bool isprime(int n)
{
    if(n<2)
        return 0;
    if(n==2)
        return 1;
    if(!(n&1))
        return 0;
    else
        return !mark[n];
    //return binary_search(primes.begin(),primes.end(),n);
}
int main()
{
    //freopen("in","r",stdin);
    //freopen("out","w",stdout);

    primes.push_back(2);
    for(int i=3;i<MAXN;i+=2)
    {
        if(!mark[i])
        {
            primes.push_back(i);
            for(int j=2*i;j<MAXN;j+=i)
            {
                mark[j]=1;
            }
        }
    }
    //cout<<primes.size()<<endl;

    for(int i=1;i<MAXN;i++)
    {
        if(isprime(i))
            cnt[i]=cnt[i-1]+1;
        else
            cnt[i]=cnt[i-1];
    }
    //cout<<cnt[3]<<endl;
    int N;
    while(s(N)!=EOF)
    {
        //cout<<"cnt "<<cnt[N]<<endl;
        if(N==1)
        {
            puts("0");
            continue;
        }
        long long ans=modpow(2,cnt[N]-1);
        //ans--;
        if(ans<0)
            ans+=mod;
        cout<<ans<<endl;

    }

    return 0;
}

