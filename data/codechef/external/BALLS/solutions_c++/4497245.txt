#include<stdio.h>
#include<iostream>
#include<set>
using namespace std;
set<int> s;
int top[100005],bottom[100005],arr[100005],max1=0;

/*
int flip_odd(int n)
{
 int i,min=100007,diff,flag=0;
  if(max1>n/2)
 	{
 	printf("0\n");
 	return 0;
 	}
 for (std::set<int>::iterator it=s.begin(); it!=s.end(); ++it)
  {
  int tmp = *it;
  if(arr[tmp]>n/2)
  {
   flag = 1;
   diff = (n/2+1)-top[tmp];
   if(min>diff)
   	min = diff;
  }
 }
 if(flag == 1)
 	{
 	printf("%d\n",min);
 	}
 else
 	printf("Impossible\n");
 return 0;
}
*/

int flip_even(int n)
{
 int i,min=100007,diff,flag=0;
 for (set<int>::iterator it=s.begin(); it!=s.end(); ++it)
  {
  int tmp = *it;
  if(arr[tmp]>=n/2)
  {
   flag = 1;
   diff = (n/2)-top[tmp];
   if(diff<0)
   	diff= 0;
   if(min>diff)
   	min = diff;
  }
 }
 if(flag == 1)
 	{
 	printf("%d\n",min);
 	}
 else
 	printf("Impossible\n");
 return 0;
}


int main()
{
 int n,t,b,num,i;
 scanf("%d",&num);
 n= num;
 while(num--)
 {
  scanf("%d%d",&t,&b);
  top[t] += 1;
  arr[t] += 1;
  if(t != b)
  	{
  	arr[b] +=1;
  	bottom[b] +=1;
  	}
  s.insert(t);
  s.insert(b);
  if(max1<top[t]);
  	max1 = top[t];
 }
  	n++;
  	if(max1>=n/2)
 	{
 	printf("0\n");
 	return 0;
 	}
  	flip_even(n);
  
 return 0;
}
 