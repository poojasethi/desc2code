#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cctype>
#include <cmath>
#include <iostream>
#include <sstream>
#include <string>
#include <cstring>
#include <utility>
#include <vector>
#include <map>
#include <numeric>
#include <set>
#include <queue>
#include <ext/hash_map>
 
using namespace std;
using namespace __gnu_cxx;
 
 
#define FOR(i,a,b) for (int _n(b), i(a); i < _n; i++)
#define FORD(i,a,b) for(int i=(a),_b=(b);i>=_b;--i)
#define ABS(a) ((a) < (0) ? (a)*(-1) : (a))
#define REP(i,n) FOR(i,0,n)
#define ALL(c) (c).begin(), (c).end()
#define SORT(c) sort(ALL(c))
#define SQR(a) ((a)*(a))
#define REVERSE(c) reverse(ALL(c))
#define MAX(a, b) ((a) >= (b) ? (a) : (b))
#define MIN(a, b) ((a) <= (b) ? (a) : (b))
#define ABS(a) ((a) < (0) ? (a)*(-1) : (a))
#define UNIQUE(c) SORT(c),(c).resize(unique(ALL(c))-(c).begin())
#define SET(x,v)        memset(x,v,sizeof(x))
#define PB push_back
#define MP make_pair
#define SZ(c) (c).size()
#define EPS 1e-10
 
/* Debuging */
const bool DEBUG = true;
#define DB(x)           if(DEBUG) cout << #x << " : " << x <<endl;
#define HELLO           if(DEBUG) puts("hello");
 
typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef pair<int, int> PII;
typedef vector<int> VI;
typedef vector<PII> VPII;
typedef vector<VI> VVI;
const int INF = 1000000000; const LL INFLL = LL(INF) * LL(INF);
 
//#define ACCEPTED
#ifdef ACCEPTED
 #ifdef ONLINE_JUDGE
 
    const int BUFFSIZE = 10240;
    char BUFF[BUFFSIZE + 1], *p = BUFF;
    int CHAR, SIGN, BYTES = 0;
 
    #define DIGIT(c) (((c) >= '0') && ((c) <= '9'))
    #define LETTER(c)(((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))
    #define MINUS(c) ((c)== '-')
 
 
    #define GETCHAR(c) {                                                                \
              if(p-BUFF==BYTES && (BYTES==0 || BYTES==BUFFSIZE)){BYTES=fread(BUFF,1,BUFFSIZE,stdin);p=BUFF;}    \
              if(p-BUFF==BYTES && (BYTES>0 && BYTES<BUFFSIZE)){BUFF[0]=0;p=BUFF;}                                       \
              c = *p++;                                                                         \
        }
 
 
     #define GETNUM(n) {                                                                \
                 n = 0;SIGN = 1; do{GETCHAR(CHAR);}while(!(DIGIT(CHAR)|| MINUS(CHAR))); \
                 if(MINUS(CHAR)){SIGN = -1; GETCHAR(CHAR);}             \
                    while(DIGIT(CHAR)){n = 10*n + CHAR-'0'; GETCHAR(CHAR);}if(SIGN == -1){n = -n;}\
         }
 
     #define GETS(s,i) {                                                                \
                   i = 0;do{GETCHAR(s[i]);}while(!LETTER(s[i]));        \
              do{GETCHAR(s[++i]);}while(LETTER(s[i]));  \
                  s[i]=0;                                                                                                       \
    }
 
   #define PUTNUM(n) fprintf(stdout,"%d ",n);
 
   #endif
  #else
 
     #define LETTER(c)(((c) >= 'a' && (c) <= 'z') || ((c) >= 'A' && (c) <= 'Z'))
     #define GETNUM(n) scanf("%d",&n);
     #define GETS(s,i) {                                                                \
                   i = 0;do{s[i] = getchar();}while(!LETTER(s[i]));     \
              do{s[++i] = getchar();}while(LETTER(s[i]));       \
                  s[i]=0;                                                                                                       \
    }
     #define PUTNUM(n) fprintf(stdout,"%d ",n);
 
#endif
 
// }}}
 
char Buf[1031];
 
int Prime[171] = {2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107
,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223
,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337
,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457
,461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593
,599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719
,727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857
,859,863,877,881,883,887,907,911,919,929,937,941,947,953,967,971,977,983,991,997
,1009,1013,1019};
 
bool is_div(int n){
    int r = 0;
    int i;
    for(i=0;Buf[i];i++){
        r = r*10 + (Buf[i]-'0');
        r %= n;
    }
    return r?0:1;
}
 
bool eq(int n){
    for(int i = strlen(Buf)-1; i >= 0; i--){
       if(n%10 != (Buf[i]-'0') )
         return false;
       n /= 10;
    }
     return true;
}
 
bool is_prime(){
 
    for(int i = 0; i <= 170; i++){
       if(is_div(Prime[i]))
         if(eq(Prime[i]))
           return true;
         else
           return false;
    }
 
    return true;
 
}
 
int main(){
 
    //while(1){
      scanf ("%s", Buf);
      //DB(is_div(5));
      puts (is_prime ()?"PRIME":"COMPOSITE");
    //}
 
    return 0;
}
 
