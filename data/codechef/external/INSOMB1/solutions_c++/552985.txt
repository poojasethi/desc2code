#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
using namespace std;
int gcd(int a, int b)
{
		if (b==0)
		return a;
		else
		return gcd(b,a%b);
}
	void checkprime(char b[])
	{
	
	int P[]={
					1,2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,
					109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,
					227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,
					347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,
					461,463,467,479,487,491,499,503,509,521,523,541,547,557,563,569,571,577,587,593,
					599,601,607,613,617,619,631,641,643,647,653,659,661,673,677,683,691,701,709,719,
					727,733,739,743,751,757,761,769,773,787,797,809,811,821,823,827,829,839,853,857,
					859,863
					};
	
				int A,B,flagged;
				int temp=atoi(b);
				int stats=0;
				if(temp<=863 && temp>=1)
				{
					for(int n=1;n<=150 && stats!=1;n++)
					{
						if(P[n]==temp)
						{
							stats=1;
						}
					}
								if (stats)
								{
									cout<<"PRIME"<<endl;
								}
											else
											{
												cout<<"COMPOSITE"<<endl;
											}
 
 
				}
				else
				{
								flagged=1;
								for(int m=1;m<=150 && flagged!=0;m++)
								{
										B=0;
										A=P[m];
						
													for(int i=0;i<strlen(b);i++)
													B=(  (B*10)+ (b[i]-48)   ) %A;
													if(gcd(A,B)!=1)
													{
														flagged=0;
										
													}
									
								
								}
										if (flagged)
										{
											cout<<"PRIME"<<endl;
										}
													else
													{
														cout<<"COMPOSITE"<<endl;
													}
				}
	}
			


	

int main()
{
	char N[1000];
	cin>>N;
	checkprime(N);
 	return 0;
 } 