#include<iostream>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<stdlib.h>
#include<malloc.h>
#include<vector>
#include<algorithm>
#include<stack>
#include<queue>
#include<list>


#define min(a,b) (a>b?b:a)
#define max(a,b) (a>b?a:b)
typedef long long LL;
using namespace std;

int p[1000000];
int pr[1000000];
int len=0;

void initialise()
{
    p[0]=p[1]=1;
    for(int i=2;i<1000000;i++){
        if(p[i]==0){
            pr[len++]=i;
            for(int j=i+i;j<1000000;j+=i)
                p[j]=1;
        }
    }
}

int divisible(string s,int d)
{
    int temp=0;
    for(int i=0;i<s.length();i++){
        temp*=10;
        temp+=s[i]-'0';
        temp=temp%d;
    }
    if(!temp)
        return 1;
    else
        return 0;
}

int noteq(string s,int d)
{
    int temp=0;
    for(int i=s.length()-1;i>=0;i--){
        if(d==0)
            return 1;
        temp=d%10;
        if(temp!=s[i]-'0')
            return 1;
        d/=10;
    }
    return 0;
}

int main()
{
    // freopen("input.txt","r",stdin);
    initialise();
    string s;
    cin>>s;
    for(int i=0;i<len;i++){
        if(divisible(s,pr[i]) && noteq(s,pr[i])){
            cout<<"COMPOSITE\n";
            return 0;
        }
    }
    cout<<"PRIME\n";

}
