import java.io.*;
import java.util.*;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(System.in);
        PrintWriter out = new PrintWriter(System.out);

        TwoLittleSisters1 solver = new TwoLittleSisters1();
        int testCases = in.nextInt();
        for (int i = 1; i <= testCases; ++i)
            solver.solve(i, in, out);

        in.close();
        out.close();
    }
}

class TwoLittleSisters1 {
    int MAXN = 100010;
    int L;
    int[] primeDivisors = new int[MAXN];
    int[] Q = new int[MAXN];
    boolean[] isPrime = new boolean[MAXN];
    boolean[] win = new boolean[MAXN];

    public void fillPrimeDivisors() {
        for (int i = 2; i < MAXN; ++i) {
            isPrime[i] = true;
            primeDivisors[i] = 1;
            for (int j = 2; j * j <= i; ++j) {
                int k = i;
                if (isPrime[j] && k % j == 0) {
                    while (k % j == 0) {
                        k /= j;
                    }
                    isPrime[i] = false;
                    primeDivisors[i] = primeDivisors[k] + 1;
                    break;
                }
            }
            if (isPrime[i] || primeDivisors[i] == 2) {
                Q[L++] = i;
            }
        }
    }

    public void fillWinPositions() {
        for (int i = 0; i < MAXN; ++i) {
            if (win[i]) continue;
            for (int j = 0; j < L && i + Q[j] < MAXN; ++j) {
                win[i + Q[j]] = true;
            }
        }
    }

    public TwoLittleSisters1() {
        fillPrimeDivisors();
        fillWinPositions();
    }

    String players[] = {"Pre", "Sak"};
    public void solve(int testNumber, Scanner in, PrintWriter out) {
        String name = in.next();
        int n = in.nextInt();

        if (win[n]) {
            out.println(name);
        }
        else {
            out.println(players[name.startsWith("P") ? 1 : 0]);
        }
    }
}
