#include<stdio.h>
#include<algorithm>
using namespace std;
int ar[1003][1003];
int co[1003]={0};
int a[41580],n;
int arr[500503]={0};
void markMultiples(int i,int p)
{
    int j = 2;
	int num;
    while ( (num = i*j) <= p)
    {
        arr[ num ] = 1; // minus 1 because index starts from 0.
        ++j;
    }
}

// A function to print all prime numbers smaller than n
void sieve(int p)
{
    // There are no prime numbers smaller than 2
    if (p >= 2)
    {
        // Create an array of size n and initialize all elements as 0

        /* Following property is maintained in the below for loop
           arr[i] == 0 means i + 1 is prime
           arr[i] == 1 means i + 1 is not prime */
        for (int i=2; i<=p; ++i)
        {
            if ( arr[i] == 0 )
            {
                //(i+1) is prime, print it and mark its multiples
                a[n]=i;
                ++n;
                markMultiples(i,p);
                
            }
        }
    }
}
int main()
{
	//freopen("cook.txt","r",stdin);
	int i,j,k;
	n=0;
	sieve(500500);
	int st=0;
	for(i=1;i<=1000;i++)
	{
		for(j=1;j<=i;j++)
		{
			++st;
			k=(int)(lower_bound(a,a+n,st)-a);
			if(a[k]==st)
			{
				ar[i][co[i]]=st;
				++co[i];
			}
		}
	}
	int t;
	long long int su;
	su=0;
	scanf("%d",&t);
	while(t--)
	{
		su=0;
		scanf("%d",&n);
		for(i=0;i<co[n];i++)
		{
			su+=ar[n][i];
		}
		printf("%lld\n",su);
	}
	return 0;
}
