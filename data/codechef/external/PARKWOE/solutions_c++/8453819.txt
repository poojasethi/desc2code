#include<bits/stdc++.h>
using namespace std;
#define SIZE(X) ((int)(X.size()))//NOTES:SIZE(
#define LENGTH(X) ((int)(X.length()))//NOTES:LENGTH(
#define MP(X,Y) make_pair(X,Y)//NOTES:MP(
#define two(X) (1<<(X))//NOTES:two(
#define twoL(X) (((int64)(1))<<(X))//NOTES:twoL(
#define contain(S,X) (((S)&two(X))!=0)//NOTES:contain(
#define containL(S,X) (((S)&twoL(X))!=0)//NOTES:containL(
#define INF 1000000007
typedef pair<int,int> ipair;//NOTES:ipair
typedef long long int64;//NOTES:int64
 /*author flame-alchemist*/
int a[103][105],dp[103][105];
int n,m;
int rec(int i,int j){
//	printf("%d %d\n",i,j);
	if(i==n-1&&j==m-1){
	//	cout<<"corner\n";
		return 0;
	}
	if((i+1==n||a[i+1][j]==2147483647)&&(j+1==m||a[i][j+1]==2147483647)){
		return 0;
	}
	if(a[i][j]==2147483647){
	//	cout<<"empty\n";
		return 0;
	}
	
	if(dp[i][j]!=-1){
		return dp[i][j];
	}
	int ans=INF;
	if(i+1<n&&((a[i+1][j]<(j+1<m?a[i][j+1]:2147483647)))){
		ans=min(ans,rec(i+1,j)+1);
	}
	if(j+1<m&&((a[i][j+1]<(i+1<n?a[i+1][j]:2147483647)))){
		ans=min(ans,rec(i,j+1)+1);
	}
	return dp[i][j]=ans;
}
int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		scanf("%d%d",&n,&m);
		
		for(int i=0;i<n;i++){
			for(int j=0;j<m;j++){
				scanf("%d",&a[i][j]);
			}
		}
		memset(dp,-1,sizeof(dp));
		cout<<rec(0,0)<<endl;
	}
	return 0;
}