#include<bits/stdc++.h>

#define INF 2000000000
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define PI acos(-1.0)
#define EPS 1e-8

#define glue(a,b) a ## b
#define setzero(a) memset(a,0,sizeof(a))
#define sz(a) (int)(a.size())
#define mp make_pair
#define ll long long int

#define si(x) scanf("%d", &x)
#define sl(x) scanf("%lld", &x)
#define sf(x) scanf("%lf", &x)
#define ss(a) scanf("%s", a)

#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define FOR(i,start,end) for(long long i=start; ((start<end)?(i<=end):(i>=end));((start<end)?(i++):(i--)))

#define trace1(x)                cerr << #x << ": " << x << endl
#define rep(i, begin, end) for (__typeof(end) i = (begin) - ((begin) > (end)); i != (end) - ((begin) > (end)); i += 1 - 2 * ((begin) > (end)))
//Works for forward as well as backward iteration

using namespace std;

int main(){std::ios::sync_with_stdio(false);

	ll t;
	cin>>t;
	while(t--)
	{
		ll mini=INF,minj=INF,minv=INF;
		ll m,n;
		cin>>m>>n;
		ll a[m+1][n+1];

		FOR(i,0,m-1)
			FOR(j,0,n-1)
			{
				cin>>a[i+1][j+1];
				if(a[i+1][j+1]==2147483647)
					a[i+1][j+1]=0;
				else if(a[i+1][j+1]<minv)
				{
					minv=a[i+1][j+1];
					mini = i+1;
					minj = j+1;
				}

			}
		int run=1;
		ll ans=0;

		a[mini][minj] = 0;
		while(run)
		{
			ll right = (minj<n)?(a[mini][minj+1]):(0);
			ll down = (mini<m)?(a[mini+1][minj]):(0);
			//cout<<right<<" "<<down<<endl;
			if(right==0 && down==0)
				run=0;
			else if(right==0)
			{
				ans++;
				minv = down;
				mini++;
			}
			else if(down==0)
			{
				minv = right;
				minj ++;
				ans++;
			}
			else
			{
				// elem in right, elem in down
				ll leftleft = (minj>1)?(a[mini][minj-1]):(-1);
				if(leftleft==-1)
				{
					if(down<=right){
						minv = down;
						mini++;
						ans++;
					}
					else
					{
						minv = right;
						minj++;
						ans++;
					}
				}
				else
				{
					if(down>=leftleft && down<=right)
					{
						minv = down;
						mini++;
						ans++;
					}
					else
					{
						minv = right;
						minj++;
						ans++;
					}
				}
			}
		}
		cout<<ans<<endl;

	}
	return 0;
}


