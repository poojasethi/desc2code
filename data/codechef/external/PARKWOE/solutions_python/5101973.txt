#include <string>
#include <vector>
#include <cstring>
#include <cmath>
#include <utility>
#include <algorithm>
#include <set>
#include <map>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <sstream>

#define SZ(a) int((a).size())
#define PB push_back
#define ALL(c) (c).begin(),(c).end()
#define PRESENT(c,x) ((c).find(x) != (c).end())
#define CPRESENT(c,x) (find(ALL(c),x) != (c).end()) 

#define MAX 100010

using namespace std;

typedef vector<int> VI;
typedef vector<VI> VVI;
typedef pair<int,int> II;

typedef long long LL;

int INF = 2147483647;

int a[110][110];

int shifts=0;

void solve_for(int r, int c, int m, int n) {
  if (r == m-1 && c==n-1) {
    return;
  }
  if (r == m-1) {
    if (a[r][c+1] != INF) {
      shifts++;
      return solve_for(r,c+1,m,n);
    }
    else {
      return;
    }
  }
  if (c == n-1) {
    if (a[r+1][c] != INF) {
      shifts++;
      return solve_for(r+1,c,m,n);
    }
    else {
      return;
    }
  }
  int val = a[r][c], down=a[r+1][c], right=a[r][c+1];
  if (down == INF && right == INF) {
    return;
  }
  else if (down <= right) {
    shifts++;
    return solve_for(r+1,c,m,n);
  }
  else {
    shifts++;
    return solve_for(r,c+1,m,n);
  }
}

int solve() {
  int m, n;
  scanf("%d %d", &m, &n);
  shifts = 0;
  for (int i=0; i<=m; i++) {
    a[i][n] = INF;
  }
  for (int i=0; i<=n; i++) {
    a[m][i] = INF;
  }
  for (int i=0; i<m; i++) {
    for (int j=0; j<n; j++) {
      scanf("%d", &a[i][j]);
    }
  }
  solve_for(0, 0, m, n);
  return shifts;
}

int main () {
  int t;
  scanf("%d", &t);
  for (int i=0; i<t; i++) {
    printf("%d\n", solve());
  }
  return 0;
}
