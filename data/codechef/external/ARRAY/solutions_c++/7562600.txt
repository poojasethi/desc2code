#include<iostream>
#include<fstream>
#include<math.h>
#include<string.h>
#include<cstring>
#include<map>
#include<vector>
#include<queue>
#include<stack>
#include<algorithm>
#include<stdlib.h>
#include<iomanip>
#define gc getchar
using namespace std;


typedef struct abc{

  int fir;
  int sec;
}abc;


// second key = preference
int cmp(const void* v1, const void* v2)
{
    const struct abc* p1 = (abc*)v1;
    const struct abc* p2 = (abc*)v2;

    if (p1->sec < p2->sec)
        return -1;
    else if (p1->sec > p2->sec)
        return 1;
    else
        return p1->fir < p2->fir ? -1 : 1;
}

int compare (const void * b, const void * a)
{
  return ( *(long*)b - *(long*)a );
}


int compare2 (const void * a, const void * b)
{
  return ( *(long*)b - *(long*)a );
}

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

int main()
{
	long int arr1[1009];
	long int arr2[1009];
	long long int cases,n,k,i,temp;
	cin>>cases;
	while(cases)
	{
		cin>>n>>k;
		for(i=0;i<n;i++)
		{
			cin>>arr1[i];	
		}	
		qsort (arr1, n, sizeof(long), compare);
		for(i=0;i<n;i++)
		{
			cin>>arr2[i];	
		}	
		qsort (arr2, n, sizeof(long), compare2);
	
		
	
		for(i=0;i<n;i++)
		{
			temp = arr1[i];
			temp = temp + arr2[i];
			if(temp<k)
			{
				cout<<"NO"<<endl;	
				goto A;
			}
				
		}	
		cout<<"YES"<<endl;
		A:;
		cases--;
		
	}
//	qsort (arr1, n, sizeof(int), compare);
	cout<<endl;

      return 0;
}
