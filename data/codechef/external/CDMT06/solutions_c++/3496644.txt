
#include <iostream>
#include <stdio.h>
#include <cstdio>
#include <stack>
#define MAX 110
using namespace std;

inline int f()
{
        int noRead=0;
        char p=getchar_unlocked();
        for(; p<33;) {
                p=getchar_unlocked();
        };
        while(p>32) {
                noRead = (noRead << 3) + (noRead << 1) + (p - '0');
                p=getchar_unlocked();
        }
        return noRead;
};


int Women_List[MAX][MAX],Man_List [MAX][MAX];
int preferences[MAX][MAX];
int womanEngagedto[MAX],manEngagedto[MAX];
int ManhastoPropose[MAX];

void stableMarriage(int N)
{
    stack<int> freeMan;
    int m,w,woman_index_number,m1;

    //Initialisation Phase
    //Initialize all m ? M and w ? W to free
    for(int i=1;i<=N;++i)
    {
        freeMan.push(i);        //Man Number I is Free
        womanEngagedto[i]=0;    //Initially all Women are Free .So womanEngagedto[i]=0 :: i th woman is Free
        ManhastoPropose[i]=1;   //At the Beginning ,the man has not propose any woman in his preference list.So index set to 1 ,ie. Man has to propose number 1 woman.
    }

    //while there exists free man m who still has a woman w to propose to
    while(!freeMan.empty())
    {

        m=freeMan.top();                        //m is the free man .
        woman_index_number=ManhastoPropose[m];  //Man has not proposed woman_index_number indexed woman in his list
        ManhastoPropose[m]+=1;                  //The man m  has proposed the  Man_list[woman_index_number] now .So next time
        //the man m has to propose Man_list[woman_index_number+1].

        w=Man_List[m][woman_index_number];     //w = m's highest ranked such woman to whom he has not yet proposed

        //if w is free (m, w) become engaged
        if(womanEngagedto[w]==0)               //womanEngagedto=0 :: Means she is Free.
        {
            womanEngagedto[w]=m;               //The womanNumber W is now  engaged to man m;
            manEngagedto[m]=w;
            freeMan.pop();                     //The Free Man M is now Engaged ,so lets pop him from stack
            continue;                          //Boyzz - Man is popped ,is engaged now ,so why to go further.
        }
        else                                  //Else some pair (m', w) already exists
        {

            m1=womanEngagedto[w];             //The woman w is not free and is already engaged to man m1 :( sad for Man  m

            // But Man m has still a chance ,Lets check whom woman w Prefers a lot.

            if(preferences[w][m]>preferences[w][m1])//if woman w prefers m to m1 (ie prefw for m >pref w for m1)
            {
                freeMan.pop();                  //Then Woman w will be engaged with Man m.Man M is done,so lets pop him from stack.
                womanEngagedto[w]=m;            //(m, w) become engaged
                manEngagedto[m]=w;
                freeMan.push(m1);               //Man m1 is now free .Let him search for another woman by pushing him to stack.
            }
            else
            {

                /*This  is important . The wikipaedia psudo code doesnot explain this properly*/
                /*if preference of man m is lower than m1 ,then women will stick to the partner
                (m1, w) remain engaged.
                But Man 'm' is still unengaged .
                So what to do now????
                Note for this reason i had not popped man m after m=freeMan.top() statement.
                Solution::
                Under that case ,the man m searches the next high ranked such woman to whom he has not yet proposed
                */

            }
        }
    }
    int chef=0,hotel=0;
    for(int i=1;i<=N;++i)
    {
       // cout<<"chef = "<<i<<" and hotel= "<<manEngagedto[i]<<endl;
        if(manEngagedto[i]==Man_List[i][1])
            chef++;
        if(Women_List[manEngagedto[i]][1]==i)
            hotel++;

    }
    cout<<hotel<<" "<<chef<<endl;
}

int main()
{
    //freopen("in.txt","r",stdin);
    //freopen("out.txt","w",stdout);
    // freopen("C:\\Users\\cyber\\Desktop\\codechef\\input.txt", "r", stdin);
    int T,N,neglect,prefOrder;
    T=f();                 //Enter Test Cases
    while(T--)
    {
       N=f();             //Number of Total Marriage to find

        //Entry of Woman Preference List
        for(int i=1;i<=N;++i)
        {
            prefOrder=1<<30;
            //scanf("%d",&neglect);
            for(int j=1;j<=N;++j)
            {
                Women_List[i][j]=f();     // The woman number i , jth preference is Women_List[i][j] man
                preferences[i][ Women_List[i][j] ]=prefOrder--;
            }
        }

        //Entry of Man Prefernces List
        for(int i=1;i<=N;++i)
        {
            //scanf("%d",&neglect);
            for(int j=1;j<=N;++j)
            {
                Man_List[i][j]=f();        // The man number i , jth preference is Man_List[i][j] woman
            }
        }

        stableMarriage(N);
    }
    return 0;
}
