#include<bits/stdc++.h>

#define PB push_back
#define MP make_pair
#define F first
#define S second

#define RI(a) scanf("%d",&a);
#define RIL(a) scanf("%lld",&a);
#define PI(a) printf("%d\n",a);
#define PIL(a) printf("%lld\n",a);

#define SZ(a) (int)(a.size())

#define SET(a,b) memset(a,b,sizeof(a))

#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)

#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)

#define ALL(a) a.begin(),a.end()

#define DRT()  int t; cin>>t; while(t--)

#define PRSNT(a,e) (a.find(e) != a.end())

#define MINH priority_queue<int, vector<int>, greater<int> >

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define N 2510
#define MOD 1000000007

typedef long long LL;

using namespace std;

double dp[N][N];

double func(int t, int k) {
        //        trace3("enter",t,k);
        if(t<=0 || k<0 || t/2<k) return 0.0;
        if(dp[t][k]!=0) {
                return dp[t][k];
        }

        if(t==2*k) {
                dp[t][k] = k;
                //   trace2(t,k);
                // trace1(dp[t][k]);
                return dp[t][k];
        }
        double p1=0,p2=0,p3=0,p4=0,t1=0, t2=0;
        dp[t][k]=0.0;
        p1 = k/(double)(t-k);

        if(k>0) {
                dp[t][k] += p1*(1.0+func(t-2, k-1));
        }                
        if(2*k<t) {
                t1 = (1/(double)(t-k-1));
                t2 = (k/(double)(t-k-1));
                p2 = (1-p1)*t1;
                p3 = (1-p1)*t2;
                dp[t][k] += (p2*(1.0+func(t-2, k)) + p3*(2.0+func(t-2, k)));

                if(t-2*k-2>0) {
                        p4 = (1-p1)*(double)(1-t1-t2);
                        dp[t][k] += p4*(1.0+func(t, k+2));
                }
        }
        //trace2(t,k);
        //trace1(dp[t][k]);
        return dp[t][k];
}

int main()
{
        int n,m;
            while(scanf("%d%d",&n,&m)!=EOF) {
        printf("%.4lf\n",func(n*m,0));
        }
        return 0;
}
