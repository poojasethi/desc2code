#include<iostream>
#include<stdio.h>
#include<algorithm>

using namespace std;
double dp[2550][2550]={0};

double solve(int t,int k)
{
//	cout<<t<<" "<<k<<endl;
	if(t==2*k)
		return k;
	if(t==0)
		return 0.0;
	double a,b,c,d;
	if(dp[t][k]!=0)
		return dp[t][k];
	a=k/double(t-k);
	b=(1-a)/double(t-k-1);
	c=k*b;
	d=double(((1-a))*(1-(b+c)/(1-a)));
//	cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;
	dp[t][k]=0;
	if(k>0)
		dp[t][k]+=(a*(1+solve(t-2,k-1)));
	if(t>2*k)
	{	
		dp[t][k]+=(b*(1+solve(t-2,k)));
		if(k>0)
			dp[t][k]+=(c*(2+solve(t-2,k)));
		if((t-2)>(2*k))
			dp[t][k]+=(d*(1+solve(t,k+2)));
//		cout<<t<<" "<<k<<" "<<dp[t][k]<<endl;
	}
	return dp[t][k];
}
int main()
{
	int n,m;
	dp[2][0]=1;
	while(scanf("%d%d",&n,&m)!=EOF)
	{
		double ans=solve(n*m,0);
		printf("%.4lf\n",ans);
	}
	return 0;
}
