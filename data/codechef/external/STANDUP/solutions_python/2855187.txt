#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<map>
#include<vector>
#include<algorithm>
#include<iostream>
#include<set>
#include<math.h>
using namespace std;
struct point {int x;int y;};
bool operator <(const point &a,const point &b){return (a.x<b.x);}
int compare (const void * a, const void * b){return ( *(int*)a - *(int*)b );}
#define REP(i,a,b) for(i=a;i<b;i++)
#define REPi(i,a,b) for(i=a-1;i>=b;i--)
#define rep(i,b) REP(i,0,b)
#define repi(i,b) REPi(i,b,0)
#define si(n) scanf("%d",&n)
#define sin(n) scanf("%d\n",&n)
//#define sort(arrr,n) qsort(arrr,n,sizeof(int),compare)
#define min(a,b) (a<b?a:b)
#define max(a,b) (a>b?a:b)
#define pi(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define mod(n) ((n>0)?n:-n)
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())  // map and set find .. 
#define cpresent(c,x) (find(all(c),x) != (c).end())  // stl find ..
#define mp(a,b) make_pair(a,b);
#define vi vector<int>
#define pii pair<int,int>
#define LL long long;
#define FL(a) memset(a, 0, sizeof a);
#define fill(a,v,N) memset(a, v, sizeof(a[0])*N)
#define MAX_S 100007
int gcd(int a, int b){return (b==0)?a:gcd(b,a%b);}
int tc;
double dp[3000][3000];
double rec(int t,int k)
{
    if(dp[t][k]!=-1)
        return dp[t][k];
    if(k > t/2 || k<0)
        return -1.0;
    if(2*k==t)
        return k;

    // first card known card;
    // first card and second both same;
    // first card not known second known;
    // first and second both diffrent both not known;
    double T,K,P1,P2,P3,P4;

    T=(double)t;
    K=(double)k;

    P1 = K/(T-K);
    P2 = (1-P1)/(T-K-1);
    P3 = (1-P1)*(K/(T-K-1));
    P4 = (1-P1) * ((T-2*k-2)/(T-K-1));

    dp[t][k]=0;
    dp[t][k] +=  P1 * (1 + rec(T-2,K-1));
    dp[t][k] +=  P2 * (1 + rec(T-2,K));
    dp[t][k] +=  P3 * (2 + rec(T-2,K));
    dp[t][k] +=  P4 * (1 + rec(T,K+2));

    return dp[t][k];
}
int main()
{
    int n,m;
    for(int i=0;i<=2600;i++)
        for(int j=0;j<=1300;j++)
            dp[i][j]=-1.0;
    while(si(n)!=EOF)
    {
        si(m);
        printf("%.4lf\n",rec(n*m,0));
    }
	return 0;
}
