#include <iostream>
#include <cstdio>

using namespace std;

double dp[2501][2501];

double solve(int K, int uK)
{
        if(K < 0 || uK < 0) return 0.0;
        //if(K >= uK) return (double)uK;
        if(uK == 0) return K/2.0;
        if(uK == 1) return (K+1)/2.0;
        if(dp[K][uK] > -0.5) return dp[K][uK];

        double k = K;
        double uk = uK;
        double p1 = (double)k/(double)uk;

        double v1, v2, v3, v4;
        v1 = v2 = v3 = v4 = 0.0;
        if(p1 > 0.0) v1 = p1*(1.0 + solve(K-1, uK-1));

        double p2 = (1.0-p1)/(double)(uk-1);
        if(p2 > 0.0) v2 = p2*(1.0 + solve(K, uK-2));

        double p3 = (1.0-p1)*k/(double)(uk-1);
        if(p3 > 0.0) v3 = p3*(2.0 + solve(K, uK-2));

        double p4 = (1.0-p1)*((uk-k-2)/(uk-1));
        if(p4 > 0.0) v4 = p4*(1.0 + solve(K+2, uK-2));

        dp[K][uK] = v1+v2+v3+v4;
        return dp[K][uK];
}

int main()
{
     int n, m;
      for(int i = 0; i <= 2500; i++)
                for(int j = 0; j <= 2500; j++) dp[i][j] = -1.0;
    while(scanf("%d%d", &n, &m) != EOF) {
        double ans = solve(0, n*m);

        printf("%.4f\n", ans);
    }
}
