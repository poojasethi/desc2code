#include <iostream>
#include <stdio.h>
#include <utility>
#include <algorithm>
#include <cstring>
#include <vector>
#include <map>
#include <set>
#include <queue>
#include <math.h>
#include <cstdio>

#define FOR(i,x,y) for(int i=(x);i<(y);i++)
#define RFOR(i,x,y) for(int i=(x);i>=(y);i--)
#define MIN(x,y) ((x)<(y)?(x):(y))
#define MAX(x,y) ((x)>(y)?(x):(y))
#define ABS(x) ((x)>0?(x):-(x))
#define SQ(x) ((x)*(x))
#define mset(x,y) memset(x,y,sizeof(x))

typedef long long int lli;
typedef long double ld;

using namespace std;

ld dp[2600][2600];
void pre()
{
    //dp[i][j] denotes for i students and j known

    mset(dp,0.0);
	dp[0][0] = 0;
	dp[1][0] = 0;
	dp[1][1] = 1;
	dp[2][0] = 1;
	dp[2][1] = 0;
	dp[2][2] = 2;



    for(int i=3;i<=2500;i++)
    	for(int j=0;j<=i;j++)
            if((i+j)%2==0) {
                if(j==0)
                  dp[i][j] = ((ld)(i-j)/(ld)(i))*( (dp[i-2][j]+1)*(1/((ld)(i-1))) + (dp[i-2][j+2]+1)*((ld)(i-2-j))/(ld)(i-1) ) ;
                else  {
                  dp[i][j] = (1+dp[i-1][j-1])*((ld)j/(ld)(i)) + ((dp[i-2][j]+2)*((ld)(j)/(ld)(i-1)))*((ld)(i-j)/(ld)(i)) + ((ld)(i-j)/(ld)(i))*( (dp[i-2][j]+1)*1/((ld)(i-1)) + (dp[i-2][j+2]+1)*((ld)(i-2-j))/(ld)(i-1) );
                }
            }
}


int main()
{
    int n,m;
    pre();
    while(scanf("%d",&n)==1)
    {
    	scanf("%d",&m);
    	printf("%.4Lf\n",dp[n*m][0]);

    }
    return 0;

}
