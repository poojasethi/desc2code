#include <stdio.h>
double DP[1250][1250];
 
double Solve(int T,int k){
    if(T<1)
        return 0;
    else if(T==1)
        return 1;
    else if(k>=T)
        return (float)T;
    else{
        if(DP[T-1][k]>0)
            return DP[T-1][k];
        double p1=(1.0*k)/(2.0*T-k);                //first known
        double p2=(1.0-p1)/(float)(2.0*T-k-1);      //first and second same
        double p3=(1.0-p1)*((float)k/(float)(2.0*T-k-1));   //second known
        double p4=(1.0-p1-p2-p3);             //both diff and new
        if(k>0){        //first known
            DP[T-1][k]+=p1*(1+Solve(T-1,k-1));
        }
        if(T>k){           //first and second same
            DP[T-1][k]+=p2*(1+Solve(T-1,k));
        }
        if(k<=T-2){         //both diff and new
            DP[T-1][k]+=p4*(1+Solve(T,k+2));
        }
        if(T>k&&k>0){       //second known
            DP[T-1][k]+=p3*(2+Solve(T-1,k));
        }
        return DP[T-1][k];
    }
}
 
int main(){
    int n,m;
    while(scanf("%d",&n)!=EOF){
        scanf("%d",&m);
        printf("%.4lf\n",Solve(n*m/2,0));
    }
    return 0;
}
 