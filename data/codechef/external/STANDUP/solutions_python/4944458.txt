#include<bits/stdc++.h>
#define ll int

using namespace std;

int gcd(int a,int b)
{
 int r, i;
  while(b!=0){
    r = a % b;
    a = b;
    b = r;
  }
  return a;
}


long long int power(long long int x,long long int y)
{
    long long int temp,ty,my;
    long long int mod;
    mod=1000000007;
    if( y == 0)
        return 1;
    temp = power(x, y/2);
    ty=(temp%mod)*(temp%mod);
    if (y%2 == 0)
        {

                return ty%mod;
        }
    else
        {
                my=(x%mod)*(ty%mod);
                return my%mod;
        }
}



long long int maxi(long long int a,long long int b)
{
        return a>b?a:b;
}

char s[100010];
int a[1000010];
double dp[2505][2505];
double solve(ll total,ll known)
{
        //cout<<dp[total][known]<<" yo\n";
        if(known>total/2.0 || known<0)return 0;
        if(known<0 || total<=0 || (total-known -1)<0)
                return 0;
        if(dp[total][known]!=-1.0)
                return dp[total][known];

        double p1,p2,yoyo,p3,p4,res=0;
        p1=(known*1.0)/(total-known);
        p2=(1.0-p1)*(1.0/(total-known-1));
        p3=(1.0-p1)*((1.0*known)/(total-known-1));
        p4=1.0-p1-p2-p3;
        if(p1>1e-9)
        res=res + p1*(1.0+solve(total-2,known-1));
        yoyo=1.0-p1;
        if(yoyo>1e-9)
        res=res + p2*(1.0 + solve(total-2,known)) +p3*(2.0 +solve(total-2,known)) + p4*(1.0 + solve(total,known+2));
        dp[total][known]=res;
        //cout<<res<<" oye \n";
        return res;

}
int main()
{
        ll t,i,j,k,m,n,l,mod=1000000007;

        for(i=0;i<=2502;i++)
                        for(j=0;j<2502;j++)
                                dp[i][j] = -1.0;

        while(scanf("%d %d",&n,&m)!=EOF)
        {

                k=n*m;
                double ans;
                //out<<n<<" "<<m<<"\n";
                //memset(dp,-1,sizeof(dp));
                ans=solve(k,0);
                printf("%0.4lf\n",ans);
        }


        return 0;
}

