#include <iterator>
#include <cctype>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <ctime>
#include <cassert>
#include <climits>
#include <limits>
#include <string>
using namespace std;

//Macros
#define dbl double
#define ll long long
#define ull unsigned long long
#define ld long double
#define pii pair< int, int >
#define psi pair< string, int >
#define vi vector<int>
#define vll vector<ll>

#define abs(x) ((x)<0?-(x):(x))
#define sqr(x) ((x)*(x))

#define MOD 1000000007
#define MAXN 1005
#define MAXBUF 5000000
//#define EPS 1e-9
#define NIL 0
#define INF (INT_MAX/2)
#define LLINF (LONG_LONG_MAX/2LL)
#define NEWLINE '\n'

#define SET(A) memset(A, 1,sizeof(A));                     //NOTE: Works only for x = 0 and -1. Only for integers.
#define CLR(A) memset(A, 0,sizeof(A));
#define MEM(A,x) memset(A,x,sizeof(A));
#define CPY(A,B) memcpy(A,B,sizeof(A));

#define SIZE(A) ((int)(A.size()))
#define ALL(x)  x.begin(),x.end()
#define FILL(A,x) fill(ALL(A),x)
#define REP(i,N) for(int i=0;i<(int)(N); ++i)
#define FORab(i,a,b) for(int i=(int)(a);i<=(int)(b); ++i)
#define RFORab(i,a,b) for(int i=(int)(a);i>=(int)(b); --i)
#define FOR1(i,n) FORab(i,1,(n))
#define RFOR1(i,n) RFORab(i,(n),1)
#define FOR(i,n) FORab(i,0,(n)-1)
#define RFOR(i,n) RFORab(i,(n)-1,0)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); ++i)
#define SORTV(x) sort(ALL(x))
#define REVV(x) reverse(ALL(x))

#define mp make_pair
#define pb push_back
#define ff first
#define ss second

#define nbits(n) __builtin_popcount(n)                  //NOTE: Works only for int. Write your own function for long long :-/
#define atbit(x,i) (((x)>>(i))&1)
#define FIXMOD(a) (((a)%MOD+MOD)%MOD)

#define READ(f) freopen(f, "r", stdin)
#define WRITE(f) freopen(f, "w", stdout)

#define EPS 0.000001

int n;
double dp[1260][1260];

double find(int c, int p)
{
    // p is the number of 2's solved already.
    // c is the 1's seen so far.

//    cout<<"CALL "<<c<<" "<<p<<endl;

    if( p == n && c == 0 )
	return 0.0;
    if( p > n ) // shouldn't happen. 
	return 0.0;
    if( p == n && c > 0 ) // shouldn't happen.
	return 0.0;

    if( dp[c][p] > -EPS )
	return dp[c][p];

    double leftt = 2*(n-c-p) + c;
    double left1 = c;
    double left2 = 2*(n-p-c);

    double tot_choice = leftt*(leftt-1);

//    cout<<"LEFT1 "<<left1<<" LEFT2 "<<left2<<endl;

    double ans = 0;
    // both from left2 and same
    if( left2 > EPS )
        ans += left2/tot_choice * (find(c, p+1) + 2); 
    // both from left2 and diff.
    if( left2 > 2.0 + EPS )
	ans += left2*(left2-2)/tot_choice * (find(c+2, p));
    // first from left2 then from left1
    if( left2 > EPS && left1 > EPS )
	ans += left1*left2/ tot_choice * (find(c, p+1) + 4);
    // first from left1
    if( left1 > EPS )
	ans += left1/leftt * (find(c-1, p+1) + 3);

//    cout<<n<<" "<<c<<" "<<p<<" "<<ans<<endl;
//    cout<<leftt<<" "<<left1<<" "<<left2<<endl;
    return dp[c][p] = ans;
}

double precompute[2600];

int main()
{
    memset(precompute, -1, sizeof(precompute));
    while(1)
    {
	int m;
	string s;
	cin>>s;
	if( s == "" )
	    break;
	n = atoi(s.c_str());
	cin>>s;
	m = atoi(s.c_str());
	n = n*m/2;
	if( precompute[n] > -EPS )
	{
	    printf("%.4f\n", precompute[n]);
	    continue;
	}
//	cout<<n<<endl;
	memset(dp, -1, sizeof(dp));
	double ans = find(0, 0)/2.0;
	precompute[n] = ans;
	printf("%.4f\n", ans);
    }
    return 0;
}



