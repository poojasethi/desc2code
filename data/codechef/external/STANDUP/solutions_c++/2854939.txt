/*
   Ashutosh Singla <ashu1461@gmail.com>
Algorithm:
#tags:
date: Sat Oct 19 23:47:28 IST 2013
 */

#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<math.h>
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>

using namespace std;
typedef vector<int> vi; 
typedef pair<int,int> ii;
typedef long long LL;
#define FL(a) memset(a, 0, sizeof a);
#define fill(a,v,N) memset(a, v, sizeof(a[0])*N)
#define sz(a) int((a).size()) 
#define pb push_back 
#define si(n) scanf("%d",&n)
#define sin(n) scanf("%d\n",&n) // for scanning strings ..
#define sill(n) scanf("%lld",&n)
#define pi(n) printf("%d\n",n);
#define pill(n) printf("%lld\n",n);
#define pis(n) printf("%d ",n);

#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define present(c,x) ((c).find(x) != (c).end())  // map and set find .. 
#define cpresent(c,x) (find(all(c),x) != (c).end())  // stl find ..
#define FREP(b) for(int i=0;i<b;i++)
#define FREPr(b) for(int i=b-1;i>=0;i--)
#define REP(a,b,c) for(int a=b;a<c;a++)
#define REPr(a,b,c) for(int a=b;a>b;a--)
#define mp(a,b) make_pair(a,b);
typedef pair<int, int> ii;
#define MAX_S 100007
/*
   struct data{
   };
   bool operator < (const data &a1, const data &a2){
   }
 */
double dp[2508][1300];
double recursion(int T, int k){
    if(k > T/2 || k < 0 || T<0) return -1.00; 
    if(k == T/2) return k;
    if(dp[T][k]!=-1.00) return dp[T][k];

    double P1 = (double)(k)/(double)(T-k);
    double P2 = (double)(1.0-P1)*(1.0/(double)(T-k-1.0));
    double P3 = (double)k*P2;
    double P4 = (double)(1.0-P1)*(double)(1.0-1.0/(T-k-1.0)-(1.0)*k/(T-k-1.0));
    //    printf("here for t .. %d %d %lf %lf %lf %lf\n",T,k,P1,P2,P3,P4).. 
    dp[T][k] = P1*(1.0 + recursion(T-2, k-1))+ // case: any known card
        P2*(1.0 + recursion(T-2, k))+ // case: both new + both matching
        P3*(2.0 + recursion(T-2, k))+   // case: one new + prev known card
        P4*(1.0 + recursion(T, k+2));   // case : none of the above
//    printf("%lf\n", P4);
    return dp[T][k];
}
int main()
{
    int a,b;
    FREP(2508){
        REP(j,0,1300){ dp[i][j] = -1.00;
        }
    }
    dp[0][0] = 0;
    while(scanf("%d %d",&a, &b)!=EOF){
        printf("%.4lf\n", recursion(a*b, 0));
    }
    return 0;
}

