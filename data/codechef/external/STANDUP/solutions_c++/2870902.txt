using namespace std;
#include <iostream>
#include <stdio.h>
#include <cmath>
#define ll long long
#define MP make_pair
#define PB push_back
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define gc getchar_unlocked
#define all(c)   (c).begin(),(c).end()


int get_int(){
	register int ans = 0;
	register int x = gc();
	register char last = x;
	while(! (x >= '0' && x<= '9') ){
		last = x;
		x = gc();
	}
	while(x >= '0' && x<= '9'){
		ans = ans*10 + (x-48);
		x = gc();
	}
	if (last == '-') return (-ans);
	return ans;
}

double anss[2501][2501];
void ref(){
	FOR(i, 2501){
		FOR(j,2501)
			anss[i][j] = 0;
	}
}


double answer(double s, double u){
	//if (seen < unseen) return 0;
	if (s <0 || u < 0) return 0;
	if (u == 0 || u == 1) return ((s+u)/2);	//with prob = 1	

	int s_dash = s;
	int u_dash = u;
	if (anss[s_dash][u_dash] != 0) return anss[s_dash][u_dash];

	double ans = 0;

	if (s<=u)
		ans += (1+answer(s-1, u-1)) * (s/u);

	if ((u-s-2)>0)	
		ans += (1+answer(s+2, u-2)) * ((u-s)/u) * ((u-s-2)/(u-1));

	if ((u-s)>0)
		ans += (2+answer(s, u-2)) * ((u-s)/u)* (s/(u-1));

	if ((u-s)>0) 
		ans += (1+answer(s, u-2)) * (u-s)/(u*(u-1));

	anss[s_dash][u_dash] = ans;
	return ans;
}



int main(){
	//cout<<answer(0,16)<<endl;
	int n,m, S;
 
    while(scanf("%d",&n)!=EOF)
    {
		scanf("%d",&m);
 
		S = n*m;

		printf("%.4lf\n", answer(0,S));
    }

	return 0;
}