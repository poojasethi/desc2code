#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

double dp[55 * 55][55 * 55];
bool visit[55 * 55][55 * 55];

double dfs(int n,int m)
{
	if(n <= 2 * m) return n / 2;
	if(m < 0) return 0;
	if(!n) return 0;
	if(n & 1) return 0;
	if(n < m) return 0;
	if(visit[n][m]) return dp[n][m];
	double ans = 0;
	if(n > m) {
		double x = 1.0 * m / (n - m);
		ans += x * (1 + dfs(n - 2,m - 1));
		if(n > m + 1) ans += (1 - x) / (n - m - 1) * (1 + dfs(n - 2,m));
		if(n > m + 1) ans += (1 - x) * m / (n - m - 1) * (2 + dfs(n - 2,m));
		if(n > m + 1) {
			double y = (1 - x) / (n - m - 1);
			double z = (1 - x) * m / (n - m - 1);
			ans += (1 - x - y - z) * (1 + dfs(n,m + 2));
			//cout << x << " " << y << " " << z << " " << n << " " << m << endl;
		}
	}
	visit[n][m] = 1;
	return dp[n][m] = ans;
}

int main()
{
	memset(visit,0,sizeof(visit));
	memset(dp,0,sizeof(dp));
	int n,m;
	while(scanf("%d%d",&n,&m) != EOF) 
		printf("%.4lf\n",dfs(n * m,0));
	return 0;
}
