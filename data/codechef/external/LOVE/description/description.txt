



Untitled Document
!doctype>

Rachel is a girl who lives in LoveTown. She has now finally decided to get married and settle down with her better half. But in LoveTown, it is a rule that you can only marry a person if you have interests which are similar to the other person (or the maximum possible intersection of interests). For example, if the interests of Rachel are “aabbcc”, then the interests of her would be husband must contain all these interests (even the frequency of these interests should be same) and vice versa. Such a match is called the CupidMatch. The order of the interests does not matter. So, some of the possible cases which would be eligible are:
abcabc 
  abcbca 
  ccbbaa 
  acacbb
While some ineligible ones are: 
  abc 
  dabc 
  hkhj
It is of course possible that the interests may not match (or maybe the interests match but the frequency does not). You need to help Rachel in her quest to find the right match by telling her the minimum no of changes required in total (in both the strings) so that that she can attain what is called a CupidMatch. If no changes are required, simply output 0.
INPUT 
  The first line of the input contains a single integer T denoting the number of test cases. The description for T test cases follows. Each test case consists of a single line containing two strings, the interests of Emma and the interests of her could be husband separated by a single space. The strings consist of only lower case and upper case English alphabets. The upper case and lower case alphabets are considered to be the same, i.e. there is no case sensitivity.
OUTPUT 
  For each test case, output the sum total of min no of changes required in both the strings to attain a CupidMatch.
CONSTRAINTS 
  1 <= T <= 10^3 
  1 <= Length of string <= 10^3
EXAMPLE
Input
2
hello world
coding fun
Output
6
7
Problem Set By: Ayush Jaggi, 2nd Year
