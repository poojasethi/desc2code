#include <iostream>
#include <cmath>
#include <string>
#include <vector>
#include<string.h>
#include <algorithm>
#include <queue>
#include <list>
#include <stack>
#include <map>
#include <set>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
 
#define DEBUG
#define REP(i,a) for(i=0;i<a;i++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define VE vector<int>
#define SZ size()
#define PB push_back
 
#define s(n)                        scanf("%d",&n)
#define sc(n)                       scanf("%c",&n)
#define sl(n)                       scanf("%lld",&n)
#define sf(n)                       scanf("%lf",&n)
#define ss(n)                       scanf("%s",n)

// Useful constants
#define INF                         (int)1e9
#define EPS                         1e-9

// Useful hardware instructions
#define bitcount                    __builtin_popcount
#define gcd                         __gcd

// Useful container manipulation / traversal macros
#define forall(i,a,b)               for(int i=a;i<b;i++)
#define foreach(v, c)               for( typeof( (c).begin()) v = (c).begin();  v != (c).end(); ++v)
#define all(a)                      a.begin(), a.end()
#define in(a,b)                     ( (b).find(a) != (b).end())
#define pb                          push_back
#define fill(a,v)                    memset(a, v, sizeof a)
#define sz(a)                       ((int)(a.size()))
#define mp                          make_pair

// Some common useful functions
#define maX(a,b)                     ( (a) > (b) ? (a) : (b))
#define miN(a,b)                     ( (a) < (b) ? (a) : (b))
#define checkbit(n,b)                ( (n >> b) & 1)
#define DREP(a)                      sort(all(a)); a.era>>m;se(unique(all(a)),a.end())
#define INDEX(arr,ind)               (lower_bound(all(arr),ind)-arr.begin())

long int gcd(long int u, long int v) 
{
    return (v != 0)?gcd(v, u%v):u;
}

long long int i,j,k;

int main()
{
    char s[100001];
    cin>>s;
	long int max=0,len=strlen(s),cnt=1;
	char prev=s[0],prevbest=s[0];
	for(i=1;i<len;i++){
		if(s[i]==prev)
			cnt++;
        else
            prev=s[i],cnt=1;
		if(cnt>max)
			max=cnt,prevbest=prev;
        else if(cnt==max && prev<=prevbest)
            max=cnt,prevbest=prev;
	}
    cout<<prevbest<<endl<<max;
	return 0;
}