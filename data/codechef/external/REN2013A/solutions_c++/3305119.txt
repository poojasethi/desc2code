/*

SUM-UP (REN2013A) - CODECHEF
------

Given two integers A and B that are not necessarily in base-10, 
find the smallest possible A + B in base-10.
For example,
A = 213, possibly base-4 (39 in base-10)
B = 4721, possibly base-8 (2513 in base-10)
A + B = 39 + 2513 = 2552 
Input

First line of the input contains a positive integer T (1 <= T <= 100), the number of cases. 
Each case contains
two positive integers A and B. A and B will contain at most 5 digits, each digit will be between 0 and 9,
inclusive, and no leading zeroes.

Output

For each case, output an integer in base-10 denoting the smallest possible A + B.
Example

Input:
3
213 4721
1001 90
638 241

Output:
2552
99
592
*/

//Find the Largest Digit In The Number And On The Basis Of This Decide The Number System And Using That
//Convert Into Decimal System

#include<iostream>
#include<cstdio>

using namespace std;

int main()
{
	int t,m1,m2,t1,t2,v1,v2,ten;
	scanf("%d",&t);
	while(t--)
	{
		int a,b;
		m1 = -1; m2 = -1;
		scanf("%d %d",&a,&b);
		t1 = a;
		while(t1>0) //Checking Maximum Digit In A
		{
			if(t1%10>m1)
				m1 = t1%10;
			t1/=10;
		}
		t2 = b;
		while(t2>0)//Checking Maximum Digit In B
		{
			if(t2%10>m2)
				m2 = t2%10;
			t2/=10;
		}
		m1++; m2++; //If Largest Digit Is 9 Then m1 = 9 So BASE = 10
		v1 = 0;
		ten = 1;
		while(a>0) //Converting From Base m1 Into Decimal
		{
			v1+=((a%10)*ten);
			a/=10;
			ten*=m1;
		}
		v2 = 0;
		ten = 1;
		while(b>0)//Converting From Base m2 Into Decimal
		{
			v2+=((b%10)*ten);
			b/=10;
			ten*=m2;
		}
		printf("%d\n",v1+v2);
	}
	return 0;
}