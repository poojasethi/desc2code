#include <cstdio>
#include <cstring>
#include <string>

using namespace std;
const int MAX=1000000;
int triesize;

struct
{
    int nfinish;
    int child[3];
} trie[MAX];

void fill(int node)
{
    trie[node].nfinish=0;
    memset(trie[node].child, -1, sizeof(trie[node].child));
}

void push(int value)
{
    int i, cnode=0;
    for(i=30; i>=0; i--)
    {
        int t;
        if(value&(1<<i))
            t=1;
        else t=0;
        if(trie[cnode].child[t]==-1)
        {
            triesize++;
            fill(triesize);
            trie[cnode].child[t]=triesize;
        }
        cnode=trie[cnode].child[t];
    }
}

int dfs(int cnode, int value, int input)
{
    int t;
    if(input&(1<<value))
        t=0;
    else t=1;
    if(trie[cnode].child[t]!=-1)
        return dfs(trie[cnode].child[t], value-1, input) + (1<<value);
    if(trie[cnode].child[!t]!=-1)
        return dfs(trie[cnode].child[!t], value-1, input);
    return 0;
}

int main()
{
    int i, n, q, input;
    fill(0);
    scanf("%d", &n);
    for(i=0; i<n; i++)
    {
        scanf("%d", &input);
        push(input);
    }
    scanf("%d", &q);
    while(q--)
    {
        scanf("%d", &input);
        printf("%d\n", dfs(0, 30, input));
    }
    return 0;
}
