#include <cstdio>
#include <cstring>
#define maxn    1000005
int n, q, triesize = 0;

struct node {
    int child[3];
} trie[2000000];

void fill(int u) {
    memset (trie[u].child, -1, sizeof trie[u].child);
}

void push(int x) {
    int i, t, p = 0;
    for (i = 20; i >= 0; i--) {
        if (x&(1<<i)) t = 1;
        else t = 0;
        if (trie[p].child[t] == -1) {
            fill(++triesize);
            trie[p].child[t]=triesize;
        }
        p = trie[p].child[t];
    }
}

int dfs(int u, int v, int x) {
    int p;
    if (x & (1<<v)) p = 0;
    else p = 1;
    if (trie[u].child[p] != -1)
        return dfs(trie[u].child[p], v-1, x)+(1<<v);
    if (trie[u].child[!p] != -1)
        return dfs(trie[u].child[!p], v-1, x);
    return 0;
}

main() {
//    freopen ("xorquery.inp", "r", stdin);
    int i, x;
    scanf ("%d", &n);
    fill(0);
    for (i = 1; i <= n; i++) {
        scanf ("%d", &x);
        push(x);
    }
    scanf ("%d", &q);
    while (q--) {
        scanf ("%d", &x);
        printf ("%d\n", dfs(0, 20, x));
    }
}
