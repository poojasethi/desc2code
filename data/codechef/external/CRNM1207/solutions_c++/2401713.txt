#include <algorithm>
#include <cstdio>
#include <iostream>
#include <cmath>
#include <cstring>
#define ll long long int
using namespace std;
const ll maxN = 1e7;
ll ver=0;
struct Trie{
	ll child[3];
	void fill(){
		memset(child,-1,sizeof child);
	}
};
Trie T[maxN];

void push(ll k){
	ll p=0,n;
	for(ll i=30;i>=0;i--){
		if(k&(1LL<<i)) n=1;
		else n=0;
		if(T[p].child[n]==-1){
			T[++ver].fill();
			T[p].child[n]=ver;
		}
		p=T[p].child[n];
	}
}

ll dfs(ll u,ll v,ll x){
	ll t;
	if(x&(1LL<<v)) t=0;
	else t=1;
	if(T[u].child[t]!=-1)
		return dfs(T[u].child[t],v-1,x)+(1LL<<v);
	if(T[u].child[!t]!=-1)
		return dfs(T[u].child[!t],v-1,x);
	return 0;
}
main(){
	ios::sync_with_stdio(false);
	ll n,m,u;
	cin>>n;
	T[0].fill();
	for(ll i=1;i<=n;i++){
		cin>>u;
		push(u);
	}
	cin>>m;
	for(ll i=1;i<=m;i++){
		cin>>u;
		cout<<dfs(0,30,u)<<endl;
	}
	return 0;
}