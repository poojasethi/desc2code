#include<iostream>
#include<cstdio>

using namespace std;

#define MAXN 1000000

struct node
{
       int l,r;
       node()
       {
             r = -1;
             l = -1;
       }
}tree[3*MAXN];

int ans;

int a[100001];

void insert(int cur,int n,int pos)
{
     if(pos < 0)
     return;
     
     if(n & (1<<pos))
     {
          if(tree[cur].l == -1)
          tree[cur].l = 1;
          
          insert(2*cur,n,pos-1);
     }
     else
     {
          if(tree[cur].r == -1)
          tree[cur].r = 1;
          
          insert(2*cur+1,n,pos-1);
     }
}

void solve(int cur,int n,int pos)
{
     if(pos < 0)
     return;
     
     if(n & (1<<pos))
     {
          if(tree[cur].r == 1)
          {
             ans |= 1<<pos;
             solve(2*cur+1,n,pos-1);
          }
          else if(tree[cur].l == 1)
          {
             solve(2*cur,n,pos-1);
          }
     }
     else
     {
          if(tree[cur].l == 1)
          {
             ans |= 1<<pos;
             solve(2*cur,n,pos-1);
          }
          else if(tree[cur].r == 1)
          {
             solve(2*cur+1,n,pos-1);
          }
     }
}

int main()
{
    int n,q,i,b;
    scanf("%d",&n);
    
    for(i=0;i<n;i++)
    {
       scanf("%d",&a[i]);
       insert(0,a[i],21);
    }
    
    scanf("%d",&q);
    
    while(q--)
    {
              scanf("%d",&b);
              ans = 0;
              solve(0,b,21);
              printf("%d\n",ans);
    }
    return 0;
}
