#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cmath>
#include <climits>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;

#define REP(i,n)      FOR(i,0,n)
#define FOR(i,a,b)    for(int i = a; i < b; i++)
#define ROF(i,a,b)    for(int i=a;i>b;i--)
#define GI 		      ({int t;scanf("%d",&t);t;})
#define GL 		      ({LL t;scanf("%lld",&t);t;})
#define GD 		      ({double t;scanf("%lf",&t);t;})
#define pb 	          push_back
#define mp 	          make_pair
#define MOD 	      1000000007
#define INF	          (int)1e9
#define EPS	          1e-9
#define TR(a,it)      for (typeof((a).begin()) it = (a).begin(); it != (a).end(); ++it)

bool isSet[10197200];

void add(int n)
{
    int t = 1<<21, i = 1;
    for (; t; t>>=1) {
        if (t & n)
            i = 2*i + 1;
        else
            i = 2*i;
        isSet[i] = true;
    }
}

int max(int n)
{
    int t = (1<<21);
    int i = 1, ans = 0;
    for (; t; t >>= 1) {
        if (((t & n) && isSet[2*i]) || (((t & n) == 0) && !isSet[2*i+1]))
            i = 2*i;                    /// zero path
        else
            i = 2*i + 1, ans += t;      /// one path
        //ans <<= 1;
    }
    return ans;
}

int main()
{
	int T, t = 0, a, Q, N;

	scanf("%d", &N);
	for (int i=0; i<N; i++) {
        scanf("%d", &a);
        add(a);
    }

    scanf("%d", &Q);
    while (Q--) {
        scanf("%d", &a);
        printf("%d\n", a^max(a));
    }
	return 0;
}
