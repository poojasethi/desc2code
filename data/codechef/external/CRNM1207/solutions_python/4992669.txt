#include <string.h>
#include <stdio.h>
#define getcx getchar_unlocked

#ifdef WIN32
inline char getchar_unlocked()
{
    return getchar();
}
inline void putchar_unlocked(char x)
{
    putchar(x);
}
#endif // WINDOWS


#define forall(i,a,b) for(i=a;i<(b);i++)

inline int fi () //fast input function
{
    int n=0;
    int ch=getcx();
    while( ch < '0' || ch > '9' )
    {
        ch=getcx();
    }
    while( ch >= '0' && ch <= '9' )
        n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
    return n;
}

inline void fo(int a)
{
    char snum[20];
    int i=0;
    do
    {
        snum[i++]=a%10+48;
        a=a/10;
    }
    while(a!=0);
    i=i-1;
    while(i>=0)
        putchar_unlocked(snum[i--]);
    putchar_unlocked('\n');
}

/* Useful code */

int trie[1<<21];

void insertTrie(int x)
{
    int tmp;
    int ind=1;
    int ans=0;

    int mask = 1<<19;
    while (mask != 0){
        if ((x & mask) == 0){
            ind*=2;
            trie[ind]++;
        }
        else{
            ind=ind*2+1;
            trie[ind]++;
        }
        mask = mask >> 1;
    }
}

int findAnswer(int x)
{
    int tmp;
    int ind=1;
    int ans=0;

    int mask = 1<<19;
    while (mask != 0){
        ind*=2;
        if ((x & mask) == 0){
            if(trie[ind+1]>0){
                ans= ans*2+1 ;
                ind+=1;
            }
            else{
                ans= ans*2;
            }
        }
        else{
            if(trie[ind]>0){
                ans= ans*2+1 ;
            }
            else{
                ans= ans*2;
                ind+=1;
            }
        }
        mask = mask >> 1;
    }

    return ans;
}



int main()
{
    //init();

    /* Main code here */

    int tmp,n,q,i;



    /* declarations end */

    memset(trie,0, sizeof(trie));

    n =fi();
    forall(i,0,n)
    {
        tmp = fi();
        insertTrie(tmp);
    }
    q=fi();
    forall(i,0,q)
    {
        tmp = fi();
        fo(findAnswer(tmp));
    }

    return 0;
}
