#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <stack>
#include <set>
#include <map>
#include <deque>
#include <string>

#define all(i,n) for(i = 0; i < (n); i++)
#define SET(p) memset(p,-1,sizeof(p))
#define CLR(p) memset(p,0,sizeof(p))
#define maX(a,b)	((a)>(b)?(a):(b))
#define miN(a,b)	((a)<(b)?(a):(b))
#define S(n)	scanf("%d",&n)
#define P(n)	printf("%d\n",n)
#define Sl(n)	scanf("%lld",&n)
#define Pl(n)	printf("%lld\n",n)
#define Sf(n)   scanf("%lf",&n)
#define Ss(n)   scanf("%s",n)
#define LL long long
#define ULL unsigned long long
#define pb push_back
using namespace std;

int bin[25];
struct node
{
    node* left;
    node* right;
};
node* add(node* curr,int i)
{
    if(curr==NULL)
    {
        curr=new node;
        curr->left=NULL;
        curr->right=NULL;
    }
    if(i>20)
        return curr;
    if(bin[i]==0)
        curr->left=add(curr->left,i+1);
    else
        curr->right=add(curr->right,i+1);
    return curr;
}

void query(node* curr,int i,int ans)
{
    if(curr->left==NULL && curr->right==NULL)
    {
        printf("%d\n",ans);
        return;
    }
    if((curr->left && bin[i]==1))
        query(curr->left,i+1,(ans<<1)+1);
    else if(curr->right==NULL)
        query(curr->left,i+1,(ans<<1));
    else if(bin[i]==0)
        query(curr->right,i+1,(ans<<1)+1);
    else
        query(curr->right,i+1,(ans<<1));
}

int main()
{
int n,q,i,j,k;
node* head=new node;
head->left=NULL;
head->right=NULL;

S(n);
for(j=1;j<=n;j++)
{
    S(k);
    for(i=20;i>0;i--)
    {
        if(k&1)
            bin[i]=1;
        else
            bin[i]=0;
        k=k>>1;
    }
    add(head,1);
}

S(q);
for(j=1;j<=q;j++)
{
    S(k);
    for(i=20;i>0;i--)
    {
        if(k&1)
            bin[i]=1;
        else
            bin[i]=0;
        k=k>>1;
    }
    query(head,1,0);
}

return 0;
}
