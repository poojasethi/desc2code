#include <cstdio>
#include <iostream>
#include <cstring>
using namespace std;

int treesize=0;

typedef struct
{
    int child[5];
}Trie;

Trie trie[10200000];
int n;
int a[110010];

void fill(int a)
{
    memset(trie[a].child,-1,sizeof(trie[a].child));
}

void update(int node, int key, int left)
{
    int branch=key/(1<<left);
    if(left==-1) return;
    //printf("%d %d %d\n",node,key,branch);
    if(trie[node].child[branch]!=-1) update(trie[node].child[branch],key-branch*(1<<left),left-1);
    else
    {
        treesize++;
        fill(treesize);
        trie[node].child[branch]=treesize;
        update(trie[node].child[branch],key-branch*(1<<left),left-1);
    }
}

void get(int node, int key, int left, int res)
{
    int branch=key/(1<<left);
    if(trie[node].child[1-branch]!=-1)
    {
        if(left==-1)
        {
            printf("%d\n",res+(1<<left));
            return;
        }
        get(trie[node].child[1-branch],key-branch*(1<<left),left-1,res+(1<<left));
        return;
    }
    else
    {
        if(left==-1)
        {
            printf("%d\n",res);
            return;
        }
        get(trie[node].child[branch],key-branch*(1<<left),left-1,res);
    }
}

int main()
{
    fill(0);
    scanf("%d",&n);
    for(int i=1;i<=n;i++)
    {
        int temp;
        scanf("%d",&temp);
        update(0,temp,21);
    }
    int m;
    scanf("%d",&m);
    for(int i=1;i<=m;i++)
    {
        int temp;
        scanf("%d",&temp);
        get(0,temp,21,0);
    }
}
