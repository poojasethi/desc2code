/*Author:
raunakrocks
Raunak Talwar
Final Year CSE'15 
MNNIT-Allahabad
raunaktalwar00@gmail.com
*/
#include<bits/stdc++.h>
using namespace std;
typedef long long ll;
#define MAXI 100005
//#define inp(n) scanf("%lld",&n) //for codeforces :P
#define FOX(i,n) for(ll i=0;i<n;i++)
#define FOX1(i,n) for(ll i=1;i<=n;i++)
#define FOX2(i,n) for(ll i=n;i>=1;i--)

#define pb push_back
#define sf scanf
#define pf printf
#define MOD 1000000007
#define gc getchar_unlocked
void inp(ll &n)
{
	n=0;
	char ch=gc();
	ll sign=1;
	while(ch<'0'||ch>'9')
	{
		if(ch=='-')
			sign=-1;
		ch=gc();		
	}	
	while(ch>='0'&&ch<='9')
		{
			n=(n<<3)+(n<<1)+(ch-'0');
			ch=gc();
		}
		n*=sign;
}
ll mini(ll a,ll b){ return a>b?b:a; }
ll maxi(ll a,ll b){ return a>b?a:b; }
/**my n^2 algo for the problem :P ****/
char s[MAXI];
ll h[MAXI];
void solve()
{
	ll l=strlen(s);
	ll ans=0;
	memset(h,0,sizeof h);
	for(ll i=0;i<l;i++)
		h[s[i]]++;
	ll cnt=0;
	//cnt will count the number of char that occur odd # of times :P
	for(ll i='a';i<='z';i++)
	{
		if(h[i]&1)
			cnt++;
	}		
	if(cnt>1)
	{
		printf("Impossible\n");
		return;
	}
	ans=0;
	for(ll i=0;i<l/2;i++)
	{
	
		ll j=l-1-i;
		if(s[i]!=s[j])
		{
			//two possiblity 
			ll p,q;
			for(p=j;s[i]!=s[p];p--);
			for(q=i;s[j]!=s[q];q++);
			if(j-p<q-i)
			{
				ans=(ans+(j-p));
				for(ll k=p;k<j;k++)
					s[k]=s[k+1];
			
			
			}
			else
			{
				ans=(ans+(q-i));
				for(ll k=q;k>i;k--)
					s[k]=s[k-1];
			}
		}
	
	}
	printf("%lld\n",ans);



}



int main()
{
	clock_t startTime=clock();
	/******START: code here*********/
	while(cin>>s)
	{
		if(s[0]=='0')
			break;
		solve();	

	}

	/******END:code here**********/
	clock_t endTime=clock();
	cerr<<"\nTime:"<< double(endTime - startTime) / CLOCKS_PER_SEC <<" seconds\n" ;
	return 0;
}




