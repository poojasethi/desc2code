#include<bits/stdc++.h>
using namespace std;

int dist[209][209];
int n, m, k;
int arr[20];
int pw3[15];
int dp[(1 << 12) + 2][(1 << 12) + 2][2];
int vis[(1 << 12) + 2][(1 << 12) + 2][2];
int D[(1 << 12) + 2];

int solve(int ind, int m1, int m, int o) {
    if (ind == k)
        return D[m1];

    int &ret = dp[m1][m][o];
    int &tv = vis[m1][m][o];
    if (tv)
        return ret;
    tv = 1;
    if (o)
        ret = 1 << 30;

    for (int i = 0; i < k; i++) {
        if ((1 << i) & m)
            continue;

        if (o) {
            ///MIN
            ret = min(ret, solve(ind + 1, m1, m | (1 << i), !o));
        } else {
            ret = max(ret, solve(ind + 1, m1 | (1 << i), m | (1 << i), !o));
        }
    }

    return ret;
}
void calc(int mask) {
    int ret = 0;
    for (int i = 0; i < k; i++) {
        for (int j = 0; j < k; j++) {
            bool a = ((mask & (1 << i)) == 0);
            bool b = ((mask & (1 << j)) == 0);
            if (a != b)
                ret += dist[arr[i]][arr[j]];

        }
    }
    D[mask] = ret / 2;
}
int main() {
#ifndef ONLINE_JUDGE
    freopen("in.in", "r", stdin);
#endif

    /*freopen("in.in", "w", stdout);
    srand(time(0));
    cout<<200<<" "<<200*200<<" "<<12<<endl;
    for(int i=0;i<200;i++)
        for(int j=0;j<200;j++)
            cout<<i+1<<" "<<j+1<<" "<<rand()%100 +1<<endl;
    for(int i=0;i<12;i++)
        cout<<i+1<<" ";
    cout<<endl;
    return 0;
*/
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);

    cin >> n >> m >> k;
    int a, b, c;
    memset(dist, 0x3f, sizeof dist);

    for (int i = 0; i < n; i++)
        dist[i][i] = 0;

    while (m--) {
        cin >> a >> b >> c;
        a--;
        b--;
        dist[a][b] = min(dist[a][b], c);
        dist[b][a] = min(dist[b][a], c);
    }

    for (int K = 0; K < n; K++)
        for (int i = 0; i < n; i++)
            for (int j = 0; j < n; j++)
                dist[i][j] = min(dist[i][j], dist[i][K] + dist[K][j]);

    for (int i = 0; i < n; i++) {
        cin >> arr[i];
        arr[i]--;
    }

    for (int i = 0; i < (1 << k); i++)
        calc(i);

    cout << solve(0, 0, 0, 0) << endl;

    return 0;
}

