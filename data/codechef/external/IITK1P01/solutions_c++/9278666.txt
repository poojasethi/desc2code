#include<bits/stdc++.h>
#define s(a) scanf("%d",&a)
#define ss(a) scanf("%s",a)
#define INF 1000000000
using namespace std;
typedef long long int ll;
int V,E,K;
int dist[205][205];
int store[1000000];
int good[15];
int pow3[15];
int minimax(int player,int mask[15],int turn,int bitmask)
{
      if(store[bitmask]!=-1)
            return store[bitmask];
      if(turn==K)
      {
            int sum = 0;
            int i,j;
            for(i=0;i<K;i++)
            {
                  for(j=i+1;j<K;j++)
                        if(mask[i]!=mask[j])
                              sum += dist[good[i]][good[j]];
            }
            store[bitmask] = sum;
            return sum;
      }
      if(player==1)
      {
            int i,j;
            int maxi = -1;
            for(i=0;i<K;i++)
            {
                  if(mask[i]==0)
                  {
                        mask[i] = 1;
                        maxi = max(maxi,minimax(0,mask,turn+1,bitmask+pow3[i]*1));
                        mask[i] = 0;
                  }
            }
            return (store[bitmask] = maxi);
      }
      else
      {
            int i,j;
            int mini = INF;
            for(i=0;i<K;i++)
            {
                  if(mask[i]==0)
                  {
                        mask[i] = 2;
                        mini = min(mini,minimax(1,mask,turn+1,bitmask+pow3[i]*2));
                        mask[i] = 0;
                  }
            }
            return (store[bitmask] = mini);
      }
}
int main()
{
      int a,b,c,i,j,k;
      pow3[0] = 1;
      for(i=1;i<15;i++)
            pow3[i] = pow3[i-1]*3;
      s(V);
      s(E);
      s(K);
      for(i=0;i<V;i++)
            for(j=0;j<V;j++)
                  dist[i][j] = INF;
      for(i=0;i<=pow3[K];i++)
            store[i] = -1;
      for(i=0;i<E;i++)
      {
            s(a);s(b);s(c);
            dist[a-1][b-1] = c;
            dist[b-1][a-1] = c;
      }
      for(i=0;i<K;i++)
      {
            s(a);
            good[i] = a-1;
      }
      //printf("Before comp\n");
      for(k=0;k<V;k++)
      for(i=0;i<V;i++)
      for(j=0;j<V;j++)
            dist[i][j] = min(dist[i][j],dist[i][k]+dist[k][j]);
      //printf("Before comp\n");
      int mask[15] = {0};
      printf("%d\n",minimax(1,mask,0,0));
      /*for(i=0;i<pow3[K];i++)
            printf("Store %d = %d\n",i,store[i]);*/
      return 0;
}