#include<bits/stdc++.h>
using namespace std;

int N,M,K;
int best[531444];
int arr[14];
int cost[202][202];

int newMask(int mask[])
{
	int k=1, ret=0;
	for(int i=K-1; i>=0; i--)
		ret += mask[i]*k, k*=3;
	return ret;
}
int solve(int ind, int mask, bool player)
{
	int ret, temp=mask, m[12], i=K-1;
	memset(m,0,sizeof m);
	while(temp)
	{
		m[i] = temp%3;
		temp/=3;
		i--;
	}
	
	if(ind == K)return 0;
	
	if(best[mask]!=-1) return best[mask];
	
	if(!player)ret = 0;
	else ret = 1<<30;
	
	for(int i=0; i<K; i++)
	{
		if(!m[i])
		{
			if(!player)
			{
				int S = 0;
				for(int j=0; j<K; j++)
					if(m[j] == 2)
						S+=cost[arr[j]][arr[i]];
				m[i] = 1;
				//printf("%d*\n",S);
				ret = max(ret, S + solve(ind+1, newMask(m), !player));
			}
			else
			{
				int S = 0;
				for(int j=0; j<K; j++)
					if(m[j] == 1)
						S+=cost[arr[j]][arr[i]];
				m[i] = 2;
				//printf("%d**\n",S);
				ret = min(ret, S + solve(ind+1, newMask(m), !player));
			}
			
			m[i] = 0;
		}
	}
	return best[mask] = ret;
}

int main()
{
	memset(cost, 63, sizeof cost);
	memset(best, -1, sizeof best);
	scanf("%d %d %d",&N,&M,&K);
	
	for(int i=0; i<M; i++)
	{
		int a,b,c;
		scanf("%d %d %d",&a,&b,&c);a--,b--;
		cost[a][b] = c;
		cost[b][a] = c;
	}
	for(int i=0; i<N; i++)
		cost[i][i] = 0;
	
	for(int i=0; i<K ;i++)
		scanf("%d",&arr[i]), arr[i]--;
	
	for(int k=0; k<N; k++)
		for(int i=0; i<N; i++)
			for(int j=0; j<N; j++)
				cost[i][j] = min(cost[i][j], cost[i][k] + cost[k][j]);
	
	printf("%d\n",solve(0,0,0));
}















