#include <iostream>
#include<cstdio>
#include<vector>
#include<bits/stdc++.h>
#include<cstring>

using namespace std;
long long cou=0;

map<int,int> dfs(vector<int> *v, int *col, int *visited, int i)
{
	map <int,int> mo;
	visited[i]=1;
	int l=v[i].size(),j;
	mo[col[i]]=1;
	for(j=0;j<l;j++)
	{
		if(visited[v[i][j]]==0)
		{
			map <int,int> m;
			m=dfs(v,col,visited,v[i][j]);
			map <int,int> :: iterator it=m.begin(),it2=m.end();
			while(it!=it2)
			{
				mo[it->first]=it->second;
				it++;
			}
		}
	}
	cou=cou+mo.size();
	//printf("%d aaa %d \n",i,m.size());
	return mo;
}
int main() {
	int n,k;
	scanf("%d %d",&n,&k);
	vector<int> v[n+1];
	for(int i=1;i<=n-1;i++)
	{
		int a;
		scanf("%d",&a);
		v[a].push_back(i+1);
	}
	int col[n+1];
	for(int i=1;i<=n;i++)
	scanf("%d",&col[i]);


	cou=0;
	int visited[n+1];
	memset(visited,0,sizeof(visited));
	dfs(v,col,visited,1);
	printf("%lld\n",cou);

	return 0;
}
