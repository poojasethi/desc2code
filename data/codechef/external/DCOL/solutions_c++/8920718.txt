#include <bits/stdc++.h>
#define pb push_back
using namespace std;
typedef long long ll;
const int maxn = 1e5+5;
int c[maxn], par[maxn], ans[maxn];
vector<int> e[maxn]; set<int> m[maxn];
int parent(int x){
	if(par[x] == x) return x;
	return par[x] = parent(par[x]);
}
void merge(int x, int y){
	x = parent(x); y = parent(y);
	if(m[x].size() < m[y].size()) swap(x,y);
	par[y] = x;
	for(set<int>::iterator it=m[y].begin(); it!=m[y].end(); it++){
		m[x].insert(*it);
	}
}
void dfs(int u, int p=-1){
	for(int i=0;i<(int)e[u].size();i++){
		int v = e[u][i];
		if(v == p) continue;
		dfs(v,u);
		merge(u,v);
	}
	ans[u] = m[parent(u)].size();
}
int main(){
	ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);
	int n, k; cin >> n >> k;
	for(int i=0;i<n-1;i++){
		int u; cin >> u; u--;
		e[u].pb(i+1); e[i+1].pb(u);
	}
	for(int i=0;i<n;i++){
		cin >> c[i];
		m[i].insert(c[i]); par[i] = i;
	}
	dfs(0);
	ll tot = 0;
	for(int i=0;i<n;i++){
		// cout << ans[i] << endl;
		tot += ans[i];
	}
	cout << tot << "\n";
	return 0;
}