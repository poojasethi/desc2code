#include<bits/stdc++.h>
using namespace std;
/*
set < int > colors,colors2;
	set <int > :: iterator it;
	for(N=0;N<K;N++)
	{
		cin >> l;
		colors.insert(l);
	}
	//for(it = colors.begin(); it != colors.end(); it++)
	//	cout << " "<< *it ;
	colors2.insert(1);
	colors2.insert(4);
	colors.insert(colors2.begin(),colors2.end());
	for(it = colors.begin(); it != colors.end(); it++)
		cout << " "<< *it ;
	cout << endl;
	cout<<colors.size()<<endl;*/
vector<int > nodes[100001];
int color[100001];
int Ans=0;
set <int > * dfs(int parent)
{
	int i;
  set <int > * colors = new set <int>;
  colors->insert(color[parent]);
  set < int > * Children ;
  for(i=0;i<nodes[parent].size();i++)
  	{
  		Children = dfs(nodes[parent][i]);
  		colors->insert(Children->begin(),Children->end());
  		Children->clear();
  	}
  	Ans += colors->size(); 
  	// /cout << parent <<" " << Ans << endl;
  return colors;
}
int main()
{
	int N,K,i;
	cin >> N>>K;
	int parent;
	for(i=2;i<=N;i++)
	{
		cin >> parent;
		nodes[parent].push_back(i);
	}
	for(i=1;i<=N;i++)
	cin >> color[i];
		
	set < int >* Final;
	Final = dfs(1);
	
	//set < int > :: iterator it;
	//for(it = Final->begin();it != Final->end(); it++)
	//	cout << *it << endl;
	//Final->clear();

	cout << Ans << endl;
	return 0;
}