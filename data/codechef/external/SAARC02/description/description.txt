 

Problem description.
 You are given a MxN grid. In cell (i, j), you have value A[i][j]. From cell (a, b) you can make the following moves. 
Let d divide both a and b. Then, for such d, you can move to 
(a-d, b) OR 
(a, b-d) OR 
(a-d, b-d). 

Once you reach (0, 0), you stop. 
You wish to maximize the sum of the values of the cells you step on  (inclusive of (0, 0) and the starting position).

Input

The first line consists of 3 integers: M , N, Q.
The next M  lines each contain  N  integers, describing the grid A.
The next  Q  lines consist each of a query starting position: 2 integers r c.

 

Output

For each query position, output the maximum sum you can make.

 

Constraints
M, N <= 500.
Q <= M*N
0 <= r < M
0 <= c < N
|A[i][j]| < 100000
If A[i][j] is negative, that amounts to that cell causing you to lose |A[i][j]| coins.

M, N  ≤ 500
Q  ≤ M*N
 0  <= r < M
 0  <= c < N
|A[i][j]| < 100000
If A[i][j] is negative, that amounts to that cell causing you to lose |A[i][j]| coins. 

 

Example
Input:
3 3 3
4 -5 -3
1 -4 1
-2 3 -1
0 0
1 1
2 1

Output:
4
1
8
 
