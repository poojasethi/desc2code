#include<iostream>
#include<vector>
#include<climits>
#include<algorithm>
using namespace std;
long long int arr[200001];
long long int arr1[200001];
vector<long int> vec;
void power()
{   if(vec.empty()){long long int s = 1;
    while(s<=200001)
        {vec.push_back(s);s=s*2;}
    }
}
int main()
{
    long long int n;ios::sync_with_stdio(false);
    power();
        cin>>n;
        for(long long int k=0;k<n;k++)
            cin>>arr[k];


        arr1[0]=0;

        for(long long int i=1;i<n;i++)
        {
            long long int s = 0;long long int m = LONG_MAX;
            //cout<<i-vec[s]<<' '<<arr[i-vec[s]]<<' '<<arr1[i-vec[s]]<<' '<<arr[i]-arr[i-vec[s]]+arr1[i-vec[s]]<<endl;
            while((i-vec[s])>=0&&s<vec.size())
            {
                //cout<<s<<' ';//<endl;
                m = min(m,abs(arr[i]-arr[i-vec[s]])+arr1[i-vec[s]]);
                //cout<<arr[i]-arr[i-vec[s]]+arr1[i-vec[s]]<<' '<<m<<endl;
                s++;
            }
            //cout<<endl;
            arr1[i]=m;
        }
        /*for(int j=0;j<n;j++)
            cout<<arr1[j]<<' ';
        cout<<endl;
        */cout<<arr1[n-1]<<endl;

}
