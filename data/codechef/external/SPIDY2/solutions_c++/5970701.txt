#include <iostream>
#include <cstdlib>
#include <limits.h>

using namespace std;
/*
int fun(int *a, int *dp, int n)
{
	int m = -1;
	if (dp[n] != -1)
		return dp[n];
	else {
	
		for (int i = 1; i <= n; i++) {
			if (m < a[i] + fun(a, dp, n-i)) {
				m = a[i] + fun(a, dp, n-i);
			}
		}
		dp[n] = m;
		return dp[n];
	}
}
*/
/*
bool fun(long long a)
{
	a = abs(a);
	//cout << "a = " << a << endl;
	if (a%2 == 0) {
		while (a%2 == 0)
			a = a/2;
	}
	if (a == 1)
		return true;
	else 
		return false;
}*/

int ar[200005];

int main()
{
	long long n,j,i,m,k;
	cin >> n;
	long long a[n];
	m = 1;
	for (i = 0; m < 200005; i++) {
		ar[m] = 1;
		m = 2*m;
	}
	for (i = 0; i < n; i++) {
		cin >> a[i];
	}
	long long dp[n];
	for (i = 0; i < n; i++)
		dp[i] = 0;
	for (i = 1; i < n; i++) {
		m = 1000000001;
		k = 1;
		for (j = i-k; j >=0; j = i - k) {
			if (ar[(abs(i-j))] == 1) {
				//cout << a[i] << " " << a[j]<< endl;
				//cout << "abs = " << abs( a[i] - a[j] ) << endl;
				if (m > dp[j] + abs(a[i]-a[j]))
					m = dp[j] + abs(a[i]-a[j]);
			}
			//cout << m << " ";
			k = 2*k;
		}
		dp[i] = m;
		//cout << endl << dp[i] << endl;
	}
	cout << dp[n-1] << endl;
//	cout << endl;
//	cout << m << endl;
	
	return 0;
}