/*
 
    -------------------------------
   |    Krit Karan Singh           |
   |    IIIT - Sricity             |
   |    Competitve Coding          |
    -------------------------------
 
 */
 
#include <bits/stdc++.h> 
#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <map>
#include <set>
#include <vector>
#include <stack>
#define MOD 1000
#define st(x,y,z) scanf("%lld %lld %lld",&x,&y,&z) ;
#define sl(x) scanf("%lld",&x) ;
#define rep(i,a,n) for(int i = a ; i<=n ; i++)
#define tc() int t ; scanf("%d",&t) ; while(t--)
#define all(c) c.begin() , c.end()
#define ALL(c) c.rbegin() , c.rend()
#define present(container, element) (container.find(element) != container.end())
#define cpresent(container, element) (find(all(container),element) != container.end())
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
using namespace std ;
typedef int L ;
typedef bool B ;
typedef long long int LL ;
typedef pair< int , int > PII ;
typedef pair< PII , int > PIII ;
 
 
L main()
{
	LL n;
    sl(n)
    LL X[n+5],Dp[n+5],store=0,minimum=0,temp=1;
    rep(i,0,n-1)
    Dp[i] = INT_MAX;
    rep(i,0,n-1)
    sl(X[i])
    Dp[0] = 0 ;
    for(int i = 1 ; i<=n-1 ; i++)
    {
        temp = 1 ;
        minimum = abs(X[i]-X[i-1]) + Dp[i-1] ;
        while(i-temp>=0)
        {
            if(abs(X[i]-X[i-temp])+Dp[i-temp]<minimum)
                minimum = abs(X[i]-X[i-temp])+Dp[i-temp] ;
            temp*=2;
        }
        Dp[i] = minimum ;
    }
    printf("%lld\n",Dp[n-1]);
    
} 