#include<bits/stdc++.h>
using namespace std;
#define random (rand()<<16) + rand()
struct treap{
    typedef struct _node{
        int x, y, sz,fx;
        _node *l, *r;
 
        _node() {l = r = NULL;}
        _node(int val): x(val), y(random), sz(1),fx(1) {l = r = NULL;}
        
    } * node;
 
    node root;
 
    treap() {root = NULL;}
 
    int size(node t){
        return !t ? 0 : t->sz;
    }
 
    void rec(node t){
        if(!t) return;
        t->sz = size(t->l) + size(t->r) + t->fx;
    }
 
    void split(node t, int x, node &l, node &r){
        if(!t) return void(l = r = NULL);
        if(x < t->x) split(t->l,x,l,t->l), r = t; 
        else
        split(t->r,x,t->r,r), l = t;
        rec(t); 
        //rec(l); rec(r);
    }
 
    void merge(node &t, node l, node r){
        if(!l || !r) t = l ? l : r; 
        else{
         if(l->y > r->y) merge(l->r,l->r,r), t = l; 
         else
         merge(r->l,l,r->l), t = r;
        }
        rec(t);
    }
 
    void ins(node& t, node nt){
        if(!t) t = nt; 
        else if(nt->y > t->y) split(t,nt->x,nt->l,nt->r), t = nt; 
        else
        ins(nt->x < t->x ? t->l : t->r, nt);
        rec(t);
    }
    bool find (node &t, int x) {
	if(!t) return 0;
	else if (t->x == x)
	{
		t->fx++;
		t->sz++;
		return 1;
	}
	else
	{
		bool ans = find (x < t->x ? t->l: t->r, x);
		rec(t);
		return ans;
	}
    }
 
    void ins(int x){
    	if(!find(root,x))
        ins(root,new _node(x));
    }
 
    int get(node t, int x){
        if(!t) return 0;
        if(size(t->l) >= x) return get(t->l,x);
        if(size(t->l)+1 == x) return t->x;
        return get(t->r,x-size(t->l)-1);
    }
 
    int kth(int x){
        return get(root,x);
    }
 
    void print(node t){
        if(!t) return;
        print(t->l);
        cout << t->x << " ";
        print(t->r);
    }
 
    void show(){
        print(root);
        cout << endl;
    }
} t;
 
int main()
{
	int n;
	scanf("%d", &n);
 
	int cnt = 0;
 
	for(int i=0; i<n; i++)
	{
		int type, x;
		scanf("%d", &type);
 
		if(type == 1)
		{
			scanf("%d", &x);
			t.ins(x);
			cnt++;
		}
		else
		{
			if(cnt <= 2) printf("No reviews yet\n");
			else printf("%d\n", t.kth(cnt-cnt/3+1));
		}
	}
 
    return 0;
}
 