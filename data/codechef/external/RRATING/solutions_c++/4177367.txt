#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include <vector>
#include <list>

#include <deque>
#include <queue>
#define MAX 250010
using namespace std;

int heap[MAX];
int N;
int leftchild(int i)
{
    if(2*i>N)return -1;
    return 2*i;
}
int rightchild(int i)
{
    if(2*i+1>N)return -1;
    return 2*i+1;
}
int parent(int i)
{
    if(i/2<1)
    return -1;
    return i/2;

}
void max_heapify(int i)
{
    int l,r,maxe;
    l=leftchild(i);
    r=rightchild(i);

    if(l==-1)
        return;

    else if(l!=-1&&r!=-1)
    {
        if(heap[i]>=heap[l]&&heap[i]>=heap[r])
        return;
        else
        {
            if(heap[l]>heap[r])
                maxe=l;
            else
                maxe=r;
            swap(heap[i],heap[maxe]);
            max_heapify(maxe);

        }
    }
    else
    {
        if(heap[l]>heap[i])
            swap(heap[i],heap[l]);
    }

}
void buildmax_heap()
{
    int i;
    for(i=N/2;i>0;i--)
        max_heapify(i);
}
int extract_max()
{
    int temp=heap[1];
    heap[1]=heap[N];
    N--;
    max_heapify(1);
    return temp;
}
void insert(int value)
{
    N++;
    //heap[N]=value;
    int i=N/2,j=N;
    while(i>=1&&value>heap[i])
    {
        heap[j]=heap[i];
        i=i/2;
        j=j/2;
    }
    heap[j]=value;
}

#define BUF 4096

#define MAXX(a,b) (a)>(b)?(a):(b)
#define MINN(a,b) (a)<(b)?(a):(b)
#define FOR(a,b) for(a=0;a<b;a++)
#define sdd(a) scanf("%lld",&a);
#define PUTCHAR putchar_unlocked
inline void writeInt(int x)
{
int i = 20;
char buf[21];
// buf[10] = 0;
buf[20] = '\n';

do
{
buf[--i] = x % 10 + '0';
x/= 10;
}while(x);
do
{
PUTCHAR(buf[i]);
} while (buf[i++] != '\n');
}

char ibuf[BUF];
int ipt = BUF;

#define gc getchar_unlocked
inline int readInt(){
long int n = 0, c = gc(), f = 1;
while(c != '-' && (c < '0' || c > '9')) c = gc();
if(c == '-') f = -1, c = gc();
while(c >= '0' && c <= '9')
n = (n<<3) + (n<<1) + c - '0', c = gc();
return n * f;
}



int main()
{
    int n,i,value,j,y;
    priority_queue<int,vector<int>,greater<int>   >minheap;
    //priority_queue<int>maxheap;
    int x;
    //scanf("%d",&n);
    n=readInt();
    N=0;
    j=0;
    for(i=1;i<=n;i++)
    {
      x=readInt();
      if(x==1)
      {
          value=readInt();
          j++;
          //insert(value);
          if(j%3!=0)
          {
              if(!minheap.empty()&&value>minheap.top())
              {
                  minheap.push(value);
                  insert(minheap.top());
                  minheap.pop();
              }
              else
                insert(value);
 
 
          }
          else
          {
              if(!minheap.empty()&&value>minheap.top())
                minheap.push(value);
              else
              {
                  insert(value);
                  value=extract_max();
                  minheap.push(value);
              }
          }
 
      }
      else
      {
            if(minheap.empty())
                printf("No reviews yet\n");
            else
                writeInt(minheap.top());
      }
    }




    return 0;
}
