#include<iostream>
using namespace std;
#include<cstdio>
inline int inp()
{
int noRead=0;
char p=getchar_unlocked();
for(;p<33;){p=getchar_unlocked();};
while(p>32)
{
noRead = (noRead << 3) + (noRead << 1) + (p - '0');
p=getchar_unlocked();
}
return noRead;
};
 
 
int insertmax(int size, int n, int maxheap[])
{
maxheap[size]=n;
int par, ptr=size;
while(ptr>0)
{
par=(ptr-1)/2;
if(maxheap[par]>=maxheap[ptr])
return 0;
if(maxheap[par]<maxheap[ptr])
{
maxheap[ptr]=maxheap[par];
ptr=par;
maxheap[ptr]=n;
}
}
maxheap[0]=n;
return 0;
}
 
int delmax(int size, int maxheap[])
{
int item=maxheap[0];
int last=maxheap[size-1];
maxheap[0]=last;
int ptr, left, right;
ptr=0;left=1;right=2;
while(right<size)
{
if(maxheap[ptr]>=maxheap[left]&&maxheap[ptr]>=maxheap[right])
{
return item;
}
if(maxheap[left]>=maxheap[right])
{
maxheap[ptr]=maxheap[left];
maxheap[left]=last;
ptr=left;
}
else
{
maxheap[ptr]=maxheap[right];
maxheap[right]=last;
ptr=right;
}
left=ptr*2+1;right=left+1;
}
if(left==size-1)
{
if(maxheap[ptr]<maxheap[left])
{
maxheap[ptr]=maxheap[left];
maxheap[left]=last;
}
}
return item;
}
 
int insertmin(int size, int n, int minheap[])
{
minheap[size]=n;
int par, ptr=size;
while(ptr>0)
{
par=(ptr-1)/2;
if(minheap[par]<=minheap[ptr])
return 0;
if(minheap[par]>minheap[ptr])
{
minheap[ptr]=minheap[par];
ptr=par;
minheap[ptr]=n;
}
}
minheap[0]=n;
return 0;
}
 
int delmin(int size, int minheap[])
{
int item=minheap[0];
int last=minheap[size-1];
minheap[0]=last;
int ptr, left, right;
ptr=0;left=1;right=2;
while(right<size)
{
if(minheap[ptr]<=minheap[left]&&minheap[ptr]<=minheap[right])
{
return item;
}
if(minheap[left]<=minheap[right])
{
minheap[ptr]=minheap[left];
minheap[left]=last;
ptr=left;
}
else
{
minheap[ptr]=minheap[right];
minheap[right]=last;
ptr=right;
}
left=ptr*2+1;right=left+1;
}
if(left==size-1)
{
if(minheap[ptr]>minheap[left])
{
minheap[ptr]=minheap[left];
minheap[left]=last;
}
}
return item;
}
 
int main()
{
int t, inserted=0, type, i;
int x, minheap[200001], maxheap[200001], minnum=0, maxnum=0;
scanf("%d", &t);
while(t--)
{
type=inp();
if(type==2)
{
if(inserted<3)
{
printf("No reviews yet\n");
continue;
}
else
{
printf("%d\n", minheap[0]);
}
}
else
{
x=inp();
inserted++;
if(minnum>0&&x>minheap[0])
{
insertmax(maxnum, minheap[0], maxheap);
maxnum++;
delmin(minnum, minheap);
minnum--;
insertmin(minnum, x, minheap);
minnum++;
}
else
{
insertmax(maxnum, x, maxheap);
maxnum++;
}
if(inserted%3==0)
{
insertmin(minnum, maxheap[0], minheap);
minnum++;
delmax(maxnum, maxheap);
maxnum--;
}
}
}
return 0;
}