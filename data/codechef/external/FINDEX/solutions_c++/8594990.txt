#include <bits/stdc++.h>
#define ll long long int
#define inf 1e18
#define iosbase ios_base::sync_with_stdio(false);
#define mp make_pair
#define pb push_back
#define MOD 1000000007
#define sc(n) scanf("%lld" , &n);
#define Max 500005
using namespace std;
 
typedef vector<ll> VI;
VI v1 , v2;
ll A[Max], B[Max], C[Max];
ll Z[Max];
 
void clearZ(){
	for(int i=0 ; i<Max ; i++)Z[i]=0;
}
 
 
void calculateZ(ll * arr , ll n)
{
	int L = 0, R = 0;
	for (int i = 1; i < n; i++){
		if (i > R){
 
			L = R = i;
			while (R < n && arr[R-L] == arr[R]) R++;
			Z[i] = R-L; R--;
		}
		else{
 
			int k = i-L;
			if (Z[k] < R-i+1) Z[i] = Z[k];
			else{
				L = i;
				while (R < n && arr[R-L] == arr[R]) R++;
				Z[i] = R-L; R--;
			}
		}
	}
}
 
void calcZ(ll * A , ll * B , ll size1 , ll size2 , ll first){
 
	ll size = size1+size2+1;
	ll arr[size];
	int i;
	for(i=0 ; i<size2 ; i++){
		arr[i]=B[i];
	}
	arr[i++]=-1;
	for(int j=0;j<size1 ; j++)
	{
		arr[i++]=A[j];
	}
 
	//calculating the Z part
	clearZ();
	calculateZ(arr , size);
 
	for (int i = 0; i < size; ++i)
	{
		if (Z[i] == size2)
		{
			if(first){
				v1.pb(i-size2-1);
			}
			else{
				v2.pb(i-size2-1);
			}
		}
	}
 
 
}
 
 
int main()
{
	iosbase
	ll N,K,L;
	cin>>N>>K>>L;
	for(int i=0 ; i<N ; i++){
		cin>>A[i];
	}
	for(int i=0 ; i<K ; i++){
		cin>>B[i];
	}
	for(int i=0 ; i<L ; i++){
		cin>>C[i];
	}
 
	calcZ(A,C,N,L,1);
	calcZ(A,B,N,K,0);
 
	ll ans=0;
 
	for(int i=0 ; i<v1.size() ; i++)
	{
		ll val = v1[i];
		VI::iterator it;
 
		it = lower_bound(v2.begin() , v2.end() , val);
		ll ind = it-v2.begin();
 
		if(ind == 0 && v2[0] >= v1[i])
		{
			ans += (v2.size() - ind);
		}
		else
		{
			ans += (v2.size() - ind);
		}
	}
	cout<<ans<<endl;
 
 
	return 0;
}