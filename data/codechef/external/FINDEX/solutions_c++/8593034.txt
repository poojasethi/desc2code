#include<bits/stdc++.h>
using namespace std;
int A[400001] , B[400001] , C[400001];
long long pre[400001];
vector < int > A_B,  A_C;
vector < int > compute_Z(vector < int > S,vector < int > &Z)
{
    int L , R , i ;
    L = R = -1;
    for(i=1;i<(int)S.size();++i)
    {
        if(R<i)
        {
            L = R = i;
            while(R!=(int)S.size() && S[R-L]==S[R])
                ++R;
            Z[i] = R-L;
            --R;
        }
        else
        {
            if(Z[i-L]+i-1>=R)
            {
                L = i ;
                while(R!=(int)S.size() && S[R-L]==S[R])
                    ++R;
                Z[i]=R-L;
                --R;
            }
            else
                Z[i]=Z[i-L];
        }
//        cout<<Z[i]<<" ";
    }
//    cout<<"\n";

    return Z;
}

#define pb push_back

int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);

    int a_size , b_size , c_size , i , j ;

    cin>>a_size>>b_size>>c_size;

    for(i=0;i<a_size;++i)
        cin>>A[i];
    for(i=0;i<b_size;++i)
        {
            cin>>B[i];
            A_B.pb(B[i]);
        }
    for(i=0;i<c_size;++i)
        {
            cin>>C[i];
            A_C.pb(C[i]);
        }

    for(i=0;i<a_size;++i)
        {
            A_B.pb(A[i]);
            A_C.pb(A[i]);
        }

    vector < int > Z1(A_B.size()) , Z2(A_C.size());

    compute_Z(A_B,Z1);

    compute_Z(A_C,Z2);

    for(i=b_size;i<(int)a_size+b_size;++i)
        pre[i-b_size] = (Z1[i]>=b_size);

    for(i=(int)a_size-2;i>=0;--i)
        pre[i]+=pre[i+1];
    long long ans = 0 ;

    for(i=0;i<a_size;++i)
        ans = ans + pre[i]*(Z2[i+c_size]>=c_size);

    cout<<ans;

    return 0;
}
