#include<iostream>
#include<cstdio>
#include<vector>
#include<stack>
#include<memory.h>


using namespace std;
int t,n,e,a,b;
vector < vector< int > > ar(100004,vector<int>(0,0));
bool visited[100004]={false};

void dfs(int n)
{
    stack<int> stk;
    stk.push(n);
    while(!stk.empty())
    {
        int temp=stk.top();
        stk.pop();
        for(vector<int > ::iterator it=ar[temp].begin();it!=ar[temp].end();it++)
        {
            if(!visited[*it])stk.push(*it);
        }
        visited[temp]=true;
    }

    return;
}
int main()
{
    cin>>t;
    while(t--)
    {
        memset(visited,false,sizeof(visited));
        for(vector< vector <int > > :: iterator it=ar.begin();it!=ar.end();it++)
        for(vector< int > ::iterator it1=it->begin();it1!=it->end();it1++)
        *it1=0;
        int comp=0;
        scanf("%d%d",&n,&e);
        while(e--)
        {
            scanf("%d%d",&a,&b);
              ar[a].push_back(b);ar[b].push_back(a);
        }

        for(int i=0;i<n;i++)
        {
            if(!visited[i])
            {dfs(i)  ;
            comp++;
            }
        }

        cout<<comp<<endl;
    }

    return 0;
}
