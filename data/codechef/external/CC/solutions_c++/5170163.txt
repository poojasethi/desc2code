#include <iostream>
#include <stdio.h>
#include <vector>
#include <queue>
#include <string.h>

using namespace std;

int mark = 0;
void bfs(int i, vector<int>* adj, int* cc)
{
	queue<int>q;
	q.push(i);
	cc[i] = mark;
	while(!q.empty())
	{
		int j = q.front();
		q.pop();

		vector<int>::iterator v = adj[j].begin();
		while(v != adj[j].end())
		{
			if (cc[*v] == 0)
			{
				q.push(*v);
				cc[*v] = mark;
			}
			v++;
		}
	}

}


void connected(int n, vector<int>* adj, int* cc)
{
	for (int i = 0; i < n; i++)
	{
		if (cc[i] == 0)
		{
			mark++;
			bfs(i, adj, cc);
		}
	}
}


int main()
{

	int n, e, tc, u, v;
	scanf("%d", &tc);
	while(tc--)
	{
		mark = 0;
		vector<int> adj[100000 + 10];
		int cc[100000 + 10] = {0};
		scanf("%d %d", &n, &e);

		for (int i = 0; i < e; i++)
		{
			scanf("%d %d", &v, &u);
			adj[u].push_back(v); adj[v].push_back(u);
		}
		connected(n, adj, cc);

		printf("%d\n", mark);		
	}
	return 0;
}