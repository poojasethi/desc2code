#include <cstdio>
#include <vector>
#include <cstring>




using namespace std;


const int BUFF_SIZE = 8192;
char buff[BUFF_SIZE];
const int SIZEOF_CHAR = sizeof(char);
int curIndex = BUFF_SIZE;


void readChar(char &c) {
	if (curIndex == BUFF_SIZE) {
		fread(buff, SIZEOF_CHAR, BUFF_SIZE, stdin);
		curIndex = 0;
	}
	c = buff[curIndex];
	curIndex += 1;
}

int readInt(int &n) {
	n = 0;
	char c;
	readChar(c);
	while (c == ' ' || c == '\n') {
		readChar(c);
	}
	int sign = +1;
	if (c == '-') {
		sign = -1;
		readChar(c);
	}
	while (c >= '0' && c <= '9') {
		n = (n * 10) + (c - '0');
		readChar(c);
	}
	n *= sign;
}

const int MAXN = 100000;
vector <int> a[MAXN];
bool v[MAXN];

void dfs(int u) {
	int w;
	for (int i = 0; i < a[u].size(); i += 1) {
		w = a[u][i];
		if (!v[w]) {
			v[w] = true;
			dfs(w);
		}
	}
}

int main() {
	#ifndef ONLINE_JUDGE
		freopen("input.txt", "r", stdin);
	#endif
	int t;
	readInt(t);
	while (t--) {
		int n, e, c;
		memset(v, false, sizeof v);
		c = 0;
		readInt(n);
		readInt(e);
		for (int i = 0; i < n; i += 1) {
			a[i].clear();
		}
		while (e--) {
			int u, v;
			readInt(u);
			readInt(v);
			a[u].push_back(v);
			a[v].push_back(u);
		}
		for (int i = 0; i < n; i += 1) {
			if (!v[i]) {
				v[i] = true;
				dfs(i);
				c += 1;
			}
		}
		printf("%d\n", c);
	}
	return 0;
}
