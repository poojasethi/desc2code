#include<bits/stdc++.h>
using namespace std;
vector < int > v[100005];
void bfs(int vi, int visited[]) {
	queue< int > q;
	q.push(vi);
	visited[vi] = 1;
	int i;
	while(!q.empty()) {
		int frnt = q.front();
		q.pop();
		//cout<<frnt<<" ";
		for(i = 0; i < v[frnt].size(); i++) {
			if( !visited[v[frnt][i]] ) {
				visited[v[frnt][i]] = 1;
				q.push(v[frnt][i]);
			}
		}
	}
	//cout<<endl;
}
int main(void) {
	int n, e, i, s, d;
	int t;
	cin>>t;
	while(t--) {
		cin>>n>>e;
		for(i = 0; i < e; i++) {
			cin>>s>>d;
			//s -= 1;
			//d -= 1;
			v[s].push_back(d);
			v[d].push_back(s);
		}
		int visited[n+1];
		memset(visited,0,sizeof(visited));
		int cnt = 0;
		for(i=0;i<n;i++) {
			if(visited[i] == 0) {
				bfs(i,visited);
				cnt++;
			}
		}
		//cout<<"NO of connected Component is :-> "<<cnt<<endl;
		cout<<cnt<<endl;
		for(i = 0; i < 100005; i++)
			v[i].clear();
	}
	return 0;
}