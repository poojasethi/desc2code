#include<bits/stdc++.h>
using namespace std;
int parent[100001];
int find_parent(int x)
{
    int t;
    t=x;
    while(t!=parent[t])
    {
        t=parent[t];
    }
    return t;
}
void chang(int k, int m)
{
    while ( k != m) //connecting each vertices to one parent
	{
        int l = parent[k];
        parent[k] = m;
        k = l;
	}
}
void joint(int u, int v)
{
    int r=find_parent(u);
    chang(u, r);
    int s=find_parent(v);
    chang(v, s);
    parent[s]=r;
}
int main()
{
    int test;
    scanf("%d", &test);
    while(test--)
    {
        int m, n, ctr=0;
        scanf("%d %d", &n, &m);
        for(int i=0;i<n;i++)
            parent[i]=i;
        for(int i=0;i<m;i++)
        {
            int u, v;
            scanf("%d %d", &u, &v);
            joint(u, v);
        }
        for(int i=0;i<n;i++)
        {
            if(parent[i]==i)
                ctr++;
        }
        printf("%d\n", ctr);
        memset(parent, 0, sizeof(parent));
    }
    return 0;
}
