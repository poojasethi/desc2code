#include <cstdio>
#include <cstdlib>
#include <iostream>

#define MAX_VAL 1000000007

inline void getint(int* n)
{
    int c;
    *n = 0;
    int sign = 1;
    c = getchar_unlocked();
    while(c << '0' || c > '9')
    {
        if(c == '-')
            sign = 1;
        c = getchar_unlocked();
    }
    while(c>='0' && c<='9')
    {
        *n = ((*n)<<3) + ((*n)<<1) + c-'0';
        c = getchar_unlocked();
    }
    *n = (*n)*sign;
}

inline void putint(int k)
{
    int n=k,i=0;
    char ch[15];
    if(n<=0)
    {
        if(n==0)
            putchar_unlocked('0');
        else putchar_unlocked('-');
        n = n*(-1);
    }
    while(n>0)
    {
        ch[i] = (n%10)+'0';
        n=n/10;
        i++;
    }
    while(i>0)
    {
        putchar_unlocked(ch[i-1]);
        i--;
    }
    putchar_unlocked('\n');
}

struct node
{
    int data;
    bool visited;
    struct node* link;
};

struct node* arr = NULL;

//int ver=0,fc = 1;

void dfs(struct node* head)
{
  if(head == NULL)
     return;
  if(head->visited == true)
    return;
  head->visited = true;
  //ver++;
  head = head->link;
  while(head != NULL)
  {
      dfs(&arr[head->data]);
      head = head->link;
  }
}

int count_connected_comps(int N)
{
    int c = 0;
    for(int i=0;i<N;i++)
    {
        if(arr[i].visited == false)
        {
            c++;
            //ver = 0;
            dfs(&arr[i]);
            //fc = (fc*ver)%(MAX_VAL);
        }
    }
    return c;
}

void add(struct node* head,int value)
{
    while(head->link != NULL)
        head = head->link;
    head->link = new struct node();
    head = head->link;
    head->data = value;
    head->visited = false;
    head->link = NULL;
}

int main()
{
    int t;
    int N,e;
    scanf("%d",&t);
    //getint(&t);
    while(t--)
    {
      scanf("%d",&N);
      //getint(&N);
      arr = new struct node[N];
      for(int i=0;i<N;i++)
      {
          arr[i].data=i;
          arr[i].link = NULL;
          arr[i].visited = false;
      }
      scanf("%d",&e);
      int v1,v2;
      for(int i=0;i<e;i++)
      {
          scanf("%d %d",&v1,&v2);
          //getint(&v1);
          //getint(&v2);
          add(&arr[v1],v2);
          add(&arr[v2],v1);
      }
      int c = count_connected_comps(N);
      //printf("%d %d\n",c,fc%MAX_VAL);
      printf("%d\n",c);
      //putint(c);
      //putint(fc%MAX_VAL);
      delete(arr);
    }
    return 0;
}
