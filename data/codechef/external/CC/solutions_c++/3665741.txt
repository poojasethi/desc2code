#include<stdlib.h>
#include<stdio.h>
int white=1;
int black=0;
struct list
{
    int adjacent;
    struct list *ptr;
};

typedef struct node
{
    int color;
    struct list *adj;
    struct list *last;
}node;


void DFS(node a[],int i)
{
    a[i].color=black;

    struct list *point;
    point=a[i].adj;

    while(point!=NULL)
    {
        if(a[point->adjacent].color==white)
        {
            //printf("yes--%d\n",point->adjacent);
            DFS(a,point->adjacent);
        }
        point=point->ptr;
    }
}

int ans=0;
void master(node a[],int n)
{
    for(int i=1;i<=n;i++)
    {
        if(a[i].color==white)
        {
           DFS(a,i);
           ans++;
        }
    }
  printf("%d\n",ans);
}

void put_edge(node a[],int i,int j)
{

    if(a[i].last==NULL)
    {
        struct list *temp;
        temp=(list*)(malloc(sizeof(list)));

        temp->adjacent=j;
        temp->ptr=NULL;

        a[i].adj=temp;
        a[i].last=temp;
    }

    else
    {
       struct list *temp;
       temp=(list*)(malloc(sizeof(list)));

       temp->adjacent=j;
       a[i].last->ptr=temp;
       temp->ptr=NULL;
       a[i].last=temp;
    }


}

int main()
{
    int n,m,edge1,edge2,t;

    scanf("%d",&t);

    while(t--)
    {
    ans=0;
    scanf("%d%d",&n,&m);

    node a[n+1];

    for(int i=1;i<=n;i++)
    {
        a[i].adj=NULL;
        a[i].last=NULL;
        a[i].color=white;
    }

    for(int i=1;i<=m;i++)
    {
        scanf("%d%d",&edge1,&edge2);
        put_edge(a,edge1+1,edge2+1);
        put_edge(a,edge2+1,edge1+1);
    }
    master(a,n);
    }
    return 0;
}
