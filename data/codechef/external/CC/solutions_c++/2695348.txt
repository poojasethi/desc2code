/*
author :  R Anirudh 
*/

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <cassert>
#include <climits>
#include <limits>
using namespace std;
#define SIZE(A) ((int)(A.size()))
#define MSET(A,x) memset(A,x,sizeof(A));
#define FILL(A,x) fill(A.begin(),A.end(),x)
#define REP(i,N) for(int i=0;i<(int)(N);i++)
#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)
#define REV(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define ALL(x) x.begin(),x.end()
#define INF (INT_MAX/2)
#define LLINF (LONG_LONG_MAX/2LL)
#define EPS 1e-12
#define GI ({int t;scanf("%d",&t);t;})
#define GL ({long long t;scanf("%lld",&t);t;})
#define GF ({double t;scanf("%lf",&t);t;})
#define bitCount(n) __builtin_popcount(n)
#define MOD 10000009
#define MAXN 1000005
#define FIX(a) (((a)%MOD+MOD)%MOD)
typedef long long LL;
typedef unsigned long long ULL;
#define pb push_back

list<int> *adj;
bool *visited;
int components;

void dfs_util(int u);

void dfs(int n){
	FOR(i,0,n)
	visited[i]=false;
	for(int i=0;i<n;i++){
		if(!visited[i]){
			components++;
			dfs_util(i);
			}
		}
	return;
	}

void dfs_util(int u){
	visited[u]=true;
	list<int>::iterator it;
	for(it=adj[u].begin();it!=adj[u].end();it++){
		if(!visited[*it]){
			dfs_util(*it);
			}
		}
	}

int main(){  
int t;
scanf("%d",&t);
while(t--){
int n;
components=0;
scanf("%d",&n);
adj = new list<int> [n];
visited = new bool[n];
int e;
scanf("%d",&e);
while(e--){
	int a,b;
	scanf("%d %d",&a,&b);
	adj[a].pb(b);
	adj[b].pb(a);
	}
dfs(n);
cout<<components<<endl;
}
 
return 0;
}


