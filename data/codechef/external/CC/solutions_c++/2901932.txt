#include<stdio.h>
#include<iostream>
#include<queue>
#include<vector>
#include<cstring>

#define maxN 100002
#define inf 100000003

using namespace std;

vector<int> adj[maxN];
int dist[maxN],label[maxN],cnt;

void BFS(int x)
{
	queue<int> qu1;
	dist[x]=0;
	qu1.push(x);
	while(!qu1.empty())
	{
		int a=qu1.front();
		qu1.pop();
		for(int i=0;i<adj[a].size();i++)
		{
			if(dist[adj[a][i]]==inf)
			{
				dist[adj[a][i]]=dist[a]+1;
				label[adj[a][i]]=x;
				qu1.push(adj[a][i]);
			}
		}
	}
}

int connected_components(int v)
{
	int i;
	for(i=0;i<v;i++)
	{
		dist[i]=inf;
		label[i]=maxN;
	}
	for(i=0;i<v;i++)
	{
		if(dist[i]==inf)
		{
			label[i]=i;
			cnt++;
			BFS(i);
		}
	}

	return cnt;
}

int main()
{
	int i,t,v,m,n,e;

	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&v,&e);
		cnt=0;
		for(i=0;i<e;i++)
		{
			scanf("%d%d",&m,&n);
			adj[m].push_back(n);
			adj[n].push_back(m);
		}
		i=connected_components(v);
		printf("%d\n",i);
		for(i=0;i<v;i++)
		adj[i].clear();
	}
	return 0;
}






