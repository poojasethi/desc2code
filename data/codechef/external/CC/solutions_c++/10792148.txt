#include<bits/stdc++.h>
using namespace std;
void bfs(vector< vector<int> > &graph, vector<int> &color, int cv)
{
    queue<int> q;
    q.push(cv);
    color[cv] = 1;
    while(!q.empty()){
        cv = q.front();
        q.pop();
        if(color[cv] == 2){
            continue;
        }
        for(int i = 0; i < graph[cv].size(); i++){
            int temp = graph[cv][i];
            if(color[temp] == 0){
                q.push(temp);
                color[temp] = 1;
            }
        }
    }
    return;
}
int main()
{
    int t;
    cin >> t;
    while(t--){
        int v;
        int e;
        vector<vector<int> > graph;
        scanf("%d%d", &v, &e);
        graph.resize(v);
        for(int i = 0; i < e ; i++){
            int x;
            int y;
            scanf("%d%d", &x, &y);
            graph[x].push_back(y);
            graph[y].push_back(x);
        }
        vector<int> color(v,0);
        int cnt = 0;
        for(int i = 0; i < v ; i++){
            if(color[i] == 0){
                bfs(graph, color, i);
                cnt++;
            }
        }
        printf("%d\n", cnt);
    }
    return 0;
}
