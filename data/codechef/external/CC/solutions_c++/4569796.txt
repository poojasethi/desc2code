#include<iostream>
#include<cstring>
#include<list>
bool visited[100010];
using namespace std;
class Main
{
	int V;
	list<int> *adj;
	public:
//	void print();
		Main(int v);
	void addedge(int u,int w);
		void dfs(bool visited[],int i);
};
Main::Main(int v)
{
	this->V=v;
	adj=new list<int>[v];
}
void Main::addedge(int u,int v)
{
	adj[u].push_back(v);
}
void Main::dfs(bool visited[],int v)
{
	visited[v]=true;
	list<int>::iterator i;
for(i=adj[v].begin();i!=adj[v].end();i++)
{
	if(visited[*i]==false)
	{
		dfs(visited,*i);
	}
}
}
/*void Main::print()
{int j,k;

for(j=0;j<V;j++)
{
k=0;
list<int>::iterator i;
for(i=adj[j].begin();i!=adj[j].end();i++)
{
	cout<<*i<<" ";

k++;
}
cout<<"\n";
}
}*/
int main()
{int t,n,e,e1,e2,j,res;


cin>>t;
while(t--)
{
res=0;

cin>>n;
Main g(n);
memset(visited,false,n);
cin>>e;
for(j=0;j<e;j++)
{
cin>>e1>>e2;
		g.addedge(e1,e2);
		g.addedge(e2,e1);
	}
//	g.print();
for(j=0;j<n;j++)
{
	if(visited[j]==false)
	{
		g.dfs(visited,j);
	res++;
	}
}
cout<<res<<"\n";
}
return 0;
}