#include<bits/stdc++.h>
using namespace std;
list <int> *adj;
long long int strongly=0;
int color[100001]={0};
void dfsvisit(int u);
int main()
{
	int t;
	long long int components=0,p,q,i,n,m;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		for(i=0;i<100001;i++)
		{
			color[i]=0;
		}
		adj=new list<int> [n];
		for(i=0;i<m;i++)
		{
			cin>>p>>q;
			adj[p].push_back(q);
			adj[q].push_back(p);
		}
		components=0;
		//ways=1;
		for(i=0;i<n;i++)
		{
			if(color[i]==0)
			{
				//strongly=0;
				dfsvisit(i);
				components++;
				//ways=(ways*strongly)%mod;
			}
		}
		cout<<components<<"\n";
	}
	return 0;
}
void dfsvisit(int u)
{
	color[u]=1;
	list<int>::iterator i;
	for(i=adj[u].begin();i!=adj[u].end();i++)
	{
		if(color[*i]==0)
		{
			dfsvisit(*i);
		}
	}
} 