#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
#include <vector>
#define MAX 100005
#define MAXD 9
#define INF (1 << 20)
#define ll long long int

using namespace std;
string s;
ll a,b;

ll pdp[MAXD][MAX];

void generate_numbers(){
	memset(pdp,-1,sizeof(pdp));
	for(int i = 0;i < s.size();i++) pdp[0][i] = (int)(s[i] - '0');
	
	for(int d = 1;d < MAXD;d++){
		for(int i = 0;i < s.size();i++){
			if(i + d >= s.size()) break;
			pdp[d][i] = pdp[d - 1][i]*10 + pdp[0][i + d]; 
		}
	}
}

int dp[MAX];

int solve(int i){
	if(i == s.size()) return 0;
	if(dp[i] != -1) return dp[i];
	int sol = (1 << 20);
	for(int d = 1;d <= MAXD;d++){
		if(i + d - 1 >= s.size()) break;
		if(pdp[d - 1][i] >= a && pdp[d - 1][i] <= b){
			sol = min(sol,1 + solve(i + d));
		}
	}
	return (dp[i] = sol);
}

int main(){
	int t;
	scanf("%d",&t);
	while(t--){
		cin >> s;
		scanf("%lld %lld",&a,&b);
		generate_numbers();
		memset(dp,-1,sizeof dp);
		int res = solve(0);
		if(res == INF) printf("-1\n");
		else printf("%d\n",res - 1);		
	}	
	return 0;
}
