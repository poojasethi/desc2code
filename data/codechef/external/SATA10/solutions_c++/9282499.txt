#include <assert.h>
#include <memory.h>
#include <algorithm>
#include <cmath>
#include <cstdio>
#include <iostream>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <string>
#include <vector>

using namespace std;

#define pb push_back
#define INF 1011111111
#define FOR(i, a, b) for (int _n(b), i(a); i < _n; i++)
#define rep(i, n) FOR(i, 0, n)
#define CL(a, v) memset((a), (v), sizeof(a))
#define mp make_pair
#define X first
#define Y second
#define all(c) (c).begin(), (c).end()
#define SORT(c) sort(all(c))

typedef long long ll;
typedef vector<int> VI;
typedef pair<int, int> pii;

/*** TEMPLATE CODE ENDS HERE */

const int N = 1e5 + 10;
pair<ll, int> a[N];
ll ans[N];

int main() {
#ifdef LOCAL_HOST
  freopen("input.txt", "r", stdin);
// freopen("output.txt","w",stdout);
#endif

  cout.sync_with_stdio(0);
  cin.tie(0);

  int T;
  cin >> T;
  while (T--) {
    int n;
    ll L;
    cin >> n >> L;
    rep(i, n) {
      cin >> a[i].X;
      a[i].Y = i;
    }
    sort(a, a + n);
    bool can = true;
    ll cur = 0;
    rep(i, n) {
      if (cur != a[i].X - 1) {
        can = false;
        break;
      }
      ll nxt = L;
      if (i != n - 1) {
        nxt = a[i + 1].X - 1;
      }
      ll diff = nxt - cur;
      if (diff % a[i].X != 0) {
        can = false;
        break;
      }
      cur = nxt;
      ans[a[i].Y] = diff / a[i].X;
    }
    if (!can) {
      cout << -1 << endl;
    } else {
      rep(i, n) cout << ans[i] << endl;
    }
  }

#ifdef LOCAL_HOST
  printf("TIME: %.3lf\n", double(clock()) / CLOCKS_PER_SEC);
#endif

  return 0;
}
