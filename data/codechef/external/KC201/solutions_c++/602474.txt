#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <cmath>
#include <vector>
#include <map>
#include <string>
#include <list>
#include <cctype>
#include <algorithm>
#include <ios>
#include <iomanip>
using namespace std;





int main()
{
 

 unsigned int i=0;
 bool val = false;
 string s;
 bool palindrome = true;
 bool mirrored   = true;
 map<char,char> table;
 table['A'] = 'A';
 table['B'] = ' ';
 table['C'] = ' ';
 table['D'] = ' ';
 table['E'] = '3';
 table['F'] = ' ';
 table['G'] = ' ';
 table['H'] = 'H';
 table['I'] = 'I';
 table['J'] = 'L';
 table['K'] = ' ';
 table['L'] = 'J';
 table['M'] = 'M';
 table['N'] = ' ';
 table['O'] = 'O';
 table['P'] = ' ';
 table['Q'] = ' ';
 table['R'] = ' ';
 table['S'] = '2';
 table['T'] = 'T';
 table['U'] = 'U';
 table['V'] = 'V';
 table['W'] = 'W';
 table['X'] = 'X';
 table['Y'] = 'Y';
 table['Z'] = '5';
 table['1'] = '1';
 table['2'] = 'S'; 
 table['3'] = 'E';
 table['4'] = ' ';
 table['5'] = 'Z';
 table['6'] = ' ';
 table['7'] = ' ';
 table['8'] = '8';
 table['9'] = ' ';
 while(cin>>s)
 {
 
  
   if(s[0] == '#')
    break;
 
 
    
     unsigned int size = s.size();
     
     i = 0;
     palindrome = true;
     mirrored = true;
     while(i < size/2)
     {
       if(palindrome)
       {
          palindrome = (s[i] == s[size -1 -i]);
       }
       if(mirrored)
       {

        mirrored = (s[i] == table[s[size -1 -i]]) ;
       
       }
       if(!palindrome && !mirrored)
         break;
       i++;
    }
   
    if(mirrored && (size%2 != 0)){ mirrored = (s[i] == table[s[i]]);}
    
   if(palindrome && mirrored)
     cout<<"mirroredpalindrome"<<endl;
    else if(palindrome && !mirrored)
     cout<<"regularpalindrome"<<endl;
    else if(!palindrome && mirrored)
     cout<<"mirroredstring"<<endl;
    else if(!palindrome && !mirrored)
     cout<<"notpalindrome"<<endl;
    
    
   
}


return 0;


}
