#include<stdio.h>
#include<iostream>
using namespace std;
#include<vector>

vector<vector<int> >child(100000);
vector<vector<int> >parent(100000);

void construct(int n,int val[],long long ar[])
{
	int i,x;
	
	if(ar[n]==0)
	val[n]=1;
		
	else
	val[n]=0;

	
	for(i=0;i<child[n].size();i++)
	{
		x=child[n][i];
		construct(x,val,ar);
	}
	
	int sum=0;
	
	for(i=0;i<child[n].size();i++)
	{
		x=child[n][i];
		sum+=val[x];
	}
	
	val[n]+=sum;
	
}

int main()
{
	int n,q,i,u,v,x,temp;
	char c;
	scanf("%d%d",&n,&q);
	long long ar[n+1],value;
	int val[n+1];
	child.resize(n+1);
    parent.resize(n+1);
    
    for(i=1;i<n;i++)
	{
		scanf("%d%d",&u,&v);
		child[u].push_back(v);
		parent[v].push_back(u);
	}
	
	for(i=1;i<=n;i++)
	scanf("%lld",&ar[i]);
	
	construct(1,val,ar);
	
	for(i=0;i<q;i++)
	{
		scanf(" %c",&c);
		
		if(c=='Q')
		{
			scanf("%d",&x);
			printf("%d\n",val[x]);
		}
		
		else
		{
			scanf("%d%lld",&x,&value);
			
			if(ar[x]==0&&value!=0)
			{
				temp=x;
				while(parent[temp].size())
				{
					val[temp]--;
					temp=parent[temp][0];
				}
				
				val[temp]--;
			}
			
			if(ar[x]!=0&&ar[x]+value==0)
			{
				temp=x;
				while(parent[temp].size())
				{
					val[temp]++;
					temp=parent[temp][0];
				}
				val[temp]++;
			}
			
			ar[x]=ar[x]+value;
		}
	}
	return 0;
}