#include<bits/stdc++.h>
using namespace std;
#define MAX 100001

struct node{
    long long v;
    int p;
    int zeroes;
};

void updateBranch(struct node t[],int u)
{
int xx=t[u].p;
while(xx!=1)
{
    t[xx].zeroes+=1;
    xx=t[xx].p;
}
t[1].zeroes+=1;
}
void updateBranchM(struct node t[],int u){
    while((u=t[u].p)!=1){
        t[u].zeroes -= 1;
    }
    t[1].zeroes-=1;
}


void U(struct node t[],int x,int v)
{
    if(t[x].v==0 &&t[x].v+v!=0 ){
        updateBranchM(t,x);
    }
    else if(t[x].v!=0 &&t[x].v+v==0 ){
        updateBranch(t,x);
    }
    t[x].v+=v;
}

int main()
{
struct node tree[MAX];
int n,q,i,visited[MAX],u,v;
char c;
memset(visited,0,sizeof(visited));
cin>>n>>q;
visited[1]=1;
for(i=2;i<=n;i++)
{
cin>>u>>v;
  if(visited[u])
  {
      tree[v].p=u;
      visited[v]=1;
  }
  else{
    tree[u].p=v;
    visited[u]=1;
  }
}
for(i=1;i<=n;i++)
    tree[i].zeroes=0;

for(i=1;i<=n;i++)
    {
        cin>>u;
        tree[i].v=u;
        if(u==0)
        {
            updateBranch(tree,i);
        }
    }

    while(q--)
    {
        cin>>c;
        if(c=='Q')
        {
            cin>>u;
            cout<<tree[u].zeroes<<endl;
        }
        else{
                cin>>u>>v;
        U(tree,u,v);
        }
    }


}
