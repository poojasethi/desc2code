#include<iostream>
#include<cstdio>
#include<cstring>
#include<cassert>
#include<cctype>
#include<cstdlib>
#include<cmath>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<algorithm>
#include<numeric>
#include<utility>
#include<sstream>
using namespace std;
#define all(a) a.begin(),a.end()
#define pb push_back
#define eps (1e-9)
#define inf (1<<29)
#define SET(a) memset(a,-1,sizeof(a))
#define CLR(a) memset(a,0,sizeof(a))
#define MAX 1000005

int Q[MAX],a[MAX];

int get(){
  int ret;
  char ch;
  while(1){
    ch = getchar();
    if(isdigit(ch)) break;
  }
  ret = ch - '0';
  while(1){
    ch = getchar();
    if(!isdigit(ch)) break;
    ret = ret*10 + ch -'0';
  }
  return ret;
}
int main(){
  int n;
 // scanf("%d",&n);
 n = get();
  int i,j;
  for(i = 0;i<n;i++){
   // scanf("%d",&a[i]);
   a[i] = get();
  }
  int ans = 0,mx = 0;
  for(i = j = n/2 + 1;i<n;i++){
    mx = max(mx,a[i - j] + i - j);
    ans = max(ans,mx+a[i]+n - i);
  }
  int rear = 0, front = 0;
  for(i = 0;i<n;i++){
    if(i) ans = max(ans,a[i]+i + a[Q[rear]] - Q[rear]);
    if(rear < front && i - Q[rear]>n/2) rear++;
    while(rear<front && a[i] + i > a[Q[front-1]] + Q[front -1]) front--;
    Q[front++] = i;
  }
  printf("%d\n",ans);
  
  return 0;
}