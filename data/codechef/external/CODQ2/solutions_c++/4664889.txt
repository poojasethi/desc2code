
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<map>
#include<string>
using namespace std;
#include<stdio.h>

int a[1001][4];
int amt;
int min_c[1001];
int minimum(int x)
{   int y;
 //cout << x << endl;
    if (x < 0) return 100;
    if(x == 0) return 0;
    if(min_c[x] != 0) return min_c[x];
    int a1 = minimum(x - 1) + 1;
    int a2 = minimum(x - 2) + 1;
    int a3 = minimum(x - 3) + 1;
    int a5 = minimum(x - 5) + 1;
    y = min(a1, a2);
    y = min(y, a3);
    y = min(y, a5);
    //cout << x << " \t" << y ;
    int vv, l1, l2, l3, l5;
    if(y == a1) {
                vv  = 1;
                l1 = 1;
                l2 = l3 = l5 = 0;
    } else if(y == a2) {
            vv = 2;
            l2 = 1;
            l1 = l3 = l5 = 0;
    }else if(y == a3) {
            vv = 3;
            l3 = 1;
            l2 = l1 = l5 = 0;
    }else  {
            vv = 5;
            l5 = 1;
            l2 = l3 = l1 = 0;
    }
    a[x][0] = a[x - vv][0] + l1;
    a[x][1] = a[x - vv][1] + l2;
    a[x][2] = a[x - vv][2] + l3;
    a[x][3] = a[x - vv][3] + l5;

    min_c[x] = y;
    return y;
}
int main()
{
    int i , j;

    scanf("%d", &amt);
    for (i = 1; i <= amt; i++) {
        min_c[i] = 0;
        for(j = 0; j < 4; j++) {
            a[i][j] = 0;
        }
    }

       minimum(amt);

   // cout << min_c[amt]<<endl;
    printf("%d\n", a[amt][3]);
    printf("%d\n", a[amt][2]);
    printf("%d\n", a[amt][1]);
    printf("%d\n", a[amt][0]);
    return  0;
}
