#include<iostream>
#include<algorithm>
#include<vector>
#include<cstdio>
#include<map>
using namespace std;
inline double slope(int x1, int y1,int x2, int y2){
double a=(double)(y1-y2)/(double)(x1-x2);
return a;
}
inline int gcd(int x, int y) { if(y==0) return x; return gcd(y,x%y); }
inline int ab(int x) { if(x < 0) return -x; else return x; }
inline int maxi(int a , int b) { return (a>b)?a:b; }
typedef struct ptmp{
int x;
int y;
} point;
int main()
{
int T,N,tmpx,tmpy;
point p[10010];
scanf("%d",&T);
vector< double > d;
while(T--)
{
scanf("%d",&N);
for(int i=0; i < N; i++)
{
	scanf("%d",&tmpx);
	scanf("%d",&tmpy);
	p[i].x=tmpx;
	p[i].y=tmpy;
}
int res=2;
for(int i=0; i < N-1; i++)
{
	d.clear();
	//cout<<i<<"\n";
	for(int j=i+1; j < N; j++)
	{
		tmpx=p[i].x - p[j].x;
		tmpy=p[i].y - p[j].y;
		//int g=gcd(ab(tmpx),ab(tmpy));
		//tmpx/=g;
		//tmpy/=g;
		d.push_back(slope(p[i].x,p[i].y,p[j].x,p[j].y));
		
	}
	
	int count=2;
	sort(d.begin(),d.end());
	for(int i1=0; i1< d.size()-1; i1++)
	{
	if(d[i1]==d[i1+1]) count++;
	else count=2;
	res=maxi(res,count);
	}
	
}
if(N==1) cout<<"1\n";
else 
cout<<res<<"\n";
}
return 0;
}