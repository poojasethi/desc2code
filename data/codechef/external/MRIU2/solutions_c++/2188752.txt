#include<iostream>
#include<math.h>
using namespace std;
int len(long unsigned n)
{    int l=0;
	while(n) n/=10,l++;
	return l;
}
int isprime(long unsigned n)
{	long unsigned i;
	for(i=2;i<n;i++)
	if(n%i==0) break;
	if(i==n) return 1;
	else return 0;
}
long unsigned num_rot(long unsigned n,int f)
{	int i,l=len(n)-1;
	while(f--)
	{	i=n%10;
		n/=10;
		n+=i*pow(10,l);	
	}
	return n;
}
int cir_prime(long unsigned n)
{	long unsigned k=n;
	int l=len(n);
	if(isprime(k))
	{	while(l--)
		{	k=num_rot(n,l);
			if(!isprime(k)) break;
			if(k<n && cir_prime(k)) break;
		}
		if (l==-1) return 1;
		else return 0;
	}
	else 
		return 0;
}
int main()
{
	int t,i;
	cin>>t;
	long unsigned *n=new long unsigned[t];
	for(i=0;i<t;i++)
	cin>>*(n+i);
	for(i=0;i<t;i++)
	cout<<cir_prime(*(n+i))<<" ";
	return 0;	
}