#include<stdio.h>
#include<stdlib.h>
#include<string.h>

char grid[50][50];


int thdgrid(char *arr,int x,int y,int i,int j,int m,int n)
{
	int k=0,t=1;
	int a=i,b=j;
	
	for(;k<strlen(arr);++k)
	{	
	
			if(i>m || i<0 || j>n ||j<0)
		{	t=0;
			break;
		}
		
		
		else if (grid[i][j]!=arr[k])
		{	t=0;
			break;
	
		}
		
		
		i=i+x;
		j=j+y;
	
	}
	
	if(t==1)
	
	{
	printf("%d %d\n",a+1,b+1);
	return 1;
	}
	else
	{
	
	return 0;
	}
	
	
	
}


int scndgrid(int i,int j,char *arr,int m,int n)
{
	
if(grid[i+1][j]==arr[1] && i+1<m )
	if(thdgrid(arr,1,0,i,j,m,n)==1)
		return 1;
	
if(grid[i-1][j]==arr[1] && i-1>=0)
	if(thdgrid(arr,-1,0,i,j,m,n)==1)
		return 1;

if(grid[i+1][j+1]==arr[1] && i+1<m &&j+1<n)
	if(thdgrid(arr,1,1,i,j,m,n)==1)
		return 1;

if(grid[i][j+1]==arr[1] && j+1<n)
	if(thdgrid(arr,0,1,i,j,m,n)==1)
		return 1;

if(grid[i+1][j-1]==arr[1] && i+1<m && j-1>=0)
	if(thdgrid(arr,1,-1,i,j,m,n)==1)
		return 1;

if(grid[i-1][j-1]==arr[1] && i-1>=0 && j-1>=0)
	if(thdgrid(arr,-1,-1,i,j,m,n)==1)
		return 1;

if(grid[i][j-1]==arr[1] && j-1>=0) 
	if(thdgrid(arr,0,-1,i,j,m,n)==1)
		return 1;

if(grid[i-1][j+1]==arr[1] && i-1>=0 && j+1<n)
	if(thdgrid(arr,-1,1,i,j,m,n)==1)
		return 1;

return 0;

}




void checkgrid(char *arr,int m,int n)
{	
	int i,j,t=0;
	for(i=0;i<m;++i)
	{
		for(j=0;j<n;++j)
		{	
			if(grid[i][j]==arr[0])
			{	if(strlen(arr)==1)
				{	printf("%d %d\n",i+1,j+1);
					t=1;
					break;
				}
				else if(scndgrid(i,j,arr,m,n)==1)
				{						t=1;
					break;
				}
			}
			
			
		}
		if(t==1)
			break;
	}
	
	
}








int main()
{	
	
	int t,m,n,k,i,counter;
	char arr[50];
	
	//scanf("%d",&t);
	
	while(1)
	{	
		scanf("%d %d",&m,&n);
		if(m==0 && n==0)
			return 0;
		
		i=0;
		while(i<m)
		{	
			scanf("%s",grid[i]);
			counter=0;
			while (grid[i][counter])
			{
				
				grid[i][counter]=tolower(grid[i][counter]);
				counter++;
			}
		
			++i;
		}
	
		
		scanf("%d",&k);
		
		
		for(i=0;i<k;++i)
		{
			scanf("%s",arr);
			
			counter=0;
			while (arr[counter])
			{
				
				arr[counter]=tolower(arr[counter]);
				counter++;
			}
			
			
			checkgrid(arr,m,n);
			
		}
		
		
		printf("\n");
		//--t;

	}
	
	
}
