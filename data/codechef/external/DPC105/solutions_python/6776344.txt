#include<stdio.h>
#include<stdlib.h>
#include<string.h>

char grid[100][100];

int ascii(int x) {
	return x;
}

int search_right(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		j++;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_left(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		j--;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_down(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i++;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_up(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i--;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_down_right(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i++;
		j++;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_up_right(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i--;
		j++;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_down_left(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i++;
		j--;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int search_up_left(char string[], int i, int j) {
	int len = strlen(string);
	int cnt=0, x=0, a=i+1, b=j+1;
	while(len--) {
		if(ascii(grid[i][j]) == ascii(string[x]))
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])-32)
			cnt++;
		else if(ascii(grid[i][j]) == ascii(string[x])+32)
			cnt++;
		else
			break;
		i--;
		j--;
		x++;
	}
	if(cnt == strlen(string)) {
		printf("%d %d\n",a,b);
		return 1;
	}
	else
		return 0;
}

int functions(char string[], int i, int j) {
	if(search_right(string,i,j))
		return 1;
	if(search_left(string,i,j))
		return 1;
	if(search_down(string,i,j))
		return 1;
	if(search_up(string,i,j))
		return 1;
	if(search_down_right(string,i,j))
		return 1;
	if(search_up_right(string,i,j))
		return 1;
	if(search_down_left(string,i,j))
		return 1;
	if(search_up_left(string,i,j))
		return 1;
}

int main() {
	int t,n,m,i,j,words;
	char string[100];
	//scanf("%d",&t);
	
	while(1) {
		scanf("%d%d",&n,&m);
		if(n==0 && m==0)
			break;
		for(i=0; i<n; i++)
			scanf("%s",grid[i]);

		scanf("%d",&words);
		
		while(words--) {
			scanf("%s",string);
			int b=0;
			for(i=0; i<n; i++) {
				for(j=0; j<m; j++) {
					if(b==1)
						break;
					if(ascii(grid[i][j]) == ascii(string[0])) {
						if(functions(string,i,j))
							b=1;
					}
					else if(ascii(grid[i][j]) == ascii(string[0])+32) {
						if(functions(string,i,j))
							b=1;
					}
					else if(ascii(grid[i][j]) == ascii(string[0])-32) {
						if(functions(string,i,j))
							b=1;
					}
				}
				if(b==1)
					break;
			}
		}
		printf("\n");
	}
	return 0;
}