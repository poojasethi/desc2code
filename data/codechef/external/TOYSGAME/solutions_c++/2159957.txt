#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>
#define mod 1000000007
#define MOD 1000000007
#define PHI 1000000006
#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%llu",&x)

using namespace std;
int dp[1001];
int k;
void get (int x)
{
    int i;
    set <int> s;
    int l,y;

    F (i, 0, x-k+1) {
        s.insert (dp[i]^dp[x-k-i]);
       // cout << i << " " << x-k-i << " " << (dp[i]^dp[x-k-i]) << endl;
    }
    i = 0;
    set <int> :: iterator it;
    for (it = s.begin(); it != s.end(); it++) {
        if ((*it) == i) {
            i++;
            continue;
        }
        dp[x] = i;
        return;
    }
    dp[x] = i;
  //  cout << i << endl;
}

int main()
{
  //  freopen("input.txt","r",stdin);
    int t,n,i;
    S (t);  S (k);
    F (i, 0, k) {
        dp[i] = 0;
    }
    dp[k] = 1;

    F (i, k+1,  1001) {
        get (i);
    }




    while (t--) {
        S (n);

        if (dp[n] >= 1) {
            printf ("Brainy\n");
        } else {
            printf ("Clumsy\n");
        }
    }
    return 0;
}
