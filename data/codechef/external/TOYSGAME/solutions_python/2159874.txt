/* Divanshu Garg */
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>
#include <cctype>
#include <cassert>

using namespace std;

#define ull unsigned long long
#define ill long long int
#define pii pair<int,int>
#define piii pair< int,pii >
#define pb(x) push_back(x)
#define F(i,a,n) for(i=(a);i<(n);++i)
#define FD(i,a,n) for(i=(a);i>=(n);--i)
#define FE(it,x) for(it=x.begin();it!=x.end();++it)
#define V(x) vector<x>
#define S(x) scanf("%d",&x)
#define Sl(x) scanf("%lld",&x)
#define M(x,i) memset(x,i,sizeof(x))
#define debug(i,sz,x) F(i,0,sz){cout<<x[i]<<" ";}cout<<endl
#define fr first
#define se second

int k;
int grundy[1005];

int f(int n) {
    if ( n < k ) return 0;
	if ( n == k ) return 1;
    if ( grundy[n] != -1 ) return grundy[n];
    int i;
    set<int> mex;
    F(i,1,(n-k+1)) {
        int temp = f(i)^f(n-k-i);
        mex.insert(temp);
    }
    set<int>::iterator it;
    int ans = 0;
    FE(it,mex) {if (*it !=ans) break;ans++;}
	grundy[n] = ans;
    return ans;
}

int main() {
    M(grundy,-1);
    int t,i,n;
    cin >> t >> k;
    F(i,0,t) {
        cin >> n;
        cout << (f(n)>0?"Brainy":"Clumsy") << endl;
    }
    return 0;
}