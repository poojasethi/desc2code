//CodeChef--Jovians
#include<bits/stdc++.h>
#define MAX 5005

using namespace std;

vector<int> adjList[MAX];
int dp[MAX][2];
int solve(int u,int taken,int parent){
	
	if(adjList[u].size()==0)	
		return !taken;
	
	if(dp[u][taken]!=-1) return dp[u][taken];
	
	int ans=0,i,v;
	
	for(i=0;i<adjList[u].size();i++){
		
		v=adjList[u][i];
		
		if(parent!=v){
		
		  if(taken)	
			ans+=solve(v,0,u);
				
		   else	
			ans+=max(1+solve(v,1,u),solve(v,0,u));
			    
		}
	
	}
	
	return dp[u][taken]=ans;
	
}

int main(void){
	
	int testCases,u,v,i,vertices;
	
	scanf("%d",&testCases);
	
	while(testCases--){
		
		scanf("%d",&vertices);
	   	
        for(i=0;i<vertices-1;i++){
	   		
	   	   scanf("%d%d",&u,&v);	
	   	   adjList[u].push_back(v);
		   adjList[v].push_back(u);	  	
	   	   	
		}
		
		memset(dp,-1,sizeof dp);
		int ans=max(1+solve(0,1,-1),solve(0,0,-1));
		printf("%d\n",ans);	
		
		for(i=0;i<vertices;i++)
		  adjList[i].clear();
			
	}
	
	return 0;
	
}