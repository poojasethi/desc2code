#include<iostream>
#include<string.h>
#include<vector>

using namespace std;

#define gc getchar_unlocked
 
vector<unsigned long> get_primes(unsigned long max)
{
    vector<unsigned long> primes;
	char *sieve;
    sieve = new char[(max/8) +1];
    memset(sieve, 0xFF, (max/8+1) * sizeof(char));
    for(unsigned long x = 2; x <= max; x++)
	{
        if(sieve[x/8] & (0x01 << (x % 8)))
		{
            primes.push_back(x);
            for(unsigned long j = 2*x; j <= max; j += x)
                sieve[j/8] &= ~(0x01 << (j % 8));
        }
	}
    delete[] sieve;  
    return primes;  
}

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int main()
{
	vector<unsigned long> primes;
    primes = get_primes(1000000);  
	vector<unsigned long>::iterator it;
	int t,n;
	long long sum;
	scanint(t);
	while(t--)
	{
		sum = 0;
		scanint(n);
		for(it=primes.begin(); *it<n; it++)
			sum+=*it;
		printf("%lld\n",sum);
	}
	return 0;
}