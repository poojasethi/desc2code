#include<iostream>
#define MAX 1000001
#define BUF 4096
 
char ibuf[BUF];
int ipt = BUF;
#ifndef ONLINE_JUDGE
        int readInt()
        {
            int temp;
            scanf("%d",&temp);
            return temp;
        }
#else
int readInt() {
 while (ipt < BUF && ibuf[ipt] < '0') ipt++;
 if (ipt == BUF) {
   fread(ibuf, 1, BUF, stdin);
   ipt = 0;
   while (ipt < BUF && ibuf[ipt] < '0') ipt++;
 }
 int n = 0;
 while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
 if (ipt == BUF) {
   fread(ibuf, 1, BUF, stdin);
   ipt = 0;
   while (ipt < BUF && ibuf[ipt] >= '0') n = (n*10)+(ibuf[ipt++]-'0');
  }
 return n;
}
#endif
using namespace std;
int prime[MAX]={0};
long long prime_count[MAX]={0};
void sieve(){
 prime[0]=prime[1]=0;     
 int j;
 long long count=0;
 for(int i=2;i<MAX;i++){
     j=2;
   prime_count[i]=count; 
   if(!prime[i]){
     count+=i;            
      
     while(i*j<MAX){
                 
      prime[i*j++]=1;              
     }
                       
   }     
 }    
}
int main(){
  sieve();
  int t,n;
  //cout<<prime_count[1000000];
  t=readInt();
  while(t--){
   n=readInt();
              
   cout<<prime_count[n]<<endl;          
  }  
 return 0;    
}
