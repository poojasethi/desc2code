#include <stdio.h>
#include <cmath>
#define limit 1000000
bool sieve[limit];
int primes[(limit/2)+1],t,n,i;
long long sum;
void prime_gen()
{
	int insert = 2,root = (int)ceil(sqrt(limit));
	primes[0]=2;primes[1]=3;
	for (int z = 0; z < limit; z++) sieve[z] = false;
	for (int x = 1; x <= root; x++)
	{
		for (int y = 1; y <= root; y++)
		{
			int n = (4*x*x)+(y*y);
			if (n <= limit && (n % 12 == 1 || n % 12 == 5)) sieve[n] ^= true;
			n = (3*x*x)+(y*y);
			if (n <= limit && n % 12 == 7) sieve[n] ^= true;
			n = (3*x*x)-(y*y);
			if (x > y && n <= limit && n % 12 == 11) sieve[n] ^= true;
		}
	}
	for (int r = 5; r <= root; r++) 
	if (sieve[r]) for (int i = r*r; i < limit; i += r*r) sieve[i] = false;
	for (int a = 5; a < limit; a++)
	{
		if (sieve[a])
		{
		primes[insert] = a;
		insert++;
		}
	}
}
int main()
{
	prime_gen();
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);sum=0;
		for(int i=0;primes[i]<n;i++) sum+=primes[i];
		printf("%lld\n",sum);
	}
}