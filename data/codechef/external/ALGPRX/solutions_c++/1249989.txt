#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <list>
#include <queue>
#include <stack>
#include <map>
#include <ctime>
#include <utility>
#include <climits>
#include <cfloat>
#include <cassert>

using namespace std;
#define readint(n) scanf("%d",&n);
#define readll(n) scanf("%lld",&n);
#define readchar(n) scanf("%c",&n);
#define readf(n) scanf("%f",&n);
#define readd(n) scanf("%lf",&n);
#define readstr(s) scanf("%s",&s);
int pabs(int n){return (n>0?n:-n);}
int hcf(int a,int b){if(b==0){return a;} else{return hcf(b,a%b);}}

int main(){
    int upper=1000001;
    bool *plist=new bool[1000001];    //is composite
    unsigned long long int *pcnt=new unsigned long long int[1000001];
    memset(plist,0,sizeof(plist));
    memset(pcnt,0,sizeof(pcnt));
    //preprocessing
    plist[0]=plist[1]=true;

    for(int i=2;i<upper;i++){
        if(plist[i]==false){
            int ind=2;
            while(ind*i<upper){
                plist[ind*i]=true;
                ++ind;
            }
        }
    }
    pcnt[0]=0;
    for(int i=1;i<upper;i++){
        pcnt[i]=pcnt[i-1]+(plist[i]?0:i);
    }
    int m,n;
    readint(m);
    while(m--){
        readint(n);
        if(n==0){
            printf("0\n");
        }
        else{
            cout<<pcnt[n-1]<<endl;
        }
    }
    return 0;
}
