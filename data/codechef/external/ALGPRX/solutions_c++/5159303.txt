#include<bits/stdc++.h>

using namespace std;

#define ll long long 
#define l long
#define ull unsigned long long 
#define mod 1000000007
#define fi first
#define se second
#define mp make_pair
#define rep(i,a,b) for(int i=a;i<b;i++)
#define irep(i,a,b) for(int i=a;i>b;i--)
#define INF (int)1e9
#define EPS 1e-9
#define pb push_back
#define maX(a,b) ( (a) > (b) ? (a) : (b))
#define miN(a,b) ( (a) < (b) ? (a) : (b))
#define pc(x) putchar_unlocked(x);
#define gc getchar_unlocked

inline ll gcd(ll a,ll b){if(b==0)return a;else return gcd(b,a%b);}
inline ll lcm(ll a,ll b){return (a*b)/gcd(a,b);}
inline void printMatrix(int a[100][100],int m ,int n){rep(i,0,m){rep(j,0,n){cout<<a[i][j]<<" ";}cout<<"\n";}}

inline void scan(int &x) {register int c = gc();x = 0;int neg = 0; for(;((c<48 || c>57) && c != '-');c = gc()); if(c=='-') {neg=1;c=gc();} for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;} if(neg) x=-x;}
inline void scan(ll &x) {register ll c = gc();x = 0;ll neg = 0; for(;((c<48 || c>57) && c != '-');c = gc()); if(c=='-') {neg=1;c=gc();} for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
inline void scan(l &x) {register l c = gc();x = 0;l neg = 0;for(;((c<48 || c>57) && c != '-');c = gc());if(c=='-') {neg=1;c=gc();} for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
inline void scan(ull &x) {register ull c = gc();x = 0;ull neg = 0;for(;((c<48 || c>57) && c != '-');c = gc()); if(c=='-') {neg=1;c=gc();}for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}if(neg) x=-x;}
inline void write (ll n) {ll N = n, rev, count = 0;rev = N;if (N == 0) { pc('0'); pc('\n'); return ;}while ((rev % 10) == 0) { count++; rev /= 10;} rev = 0;while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}while (count--) pc('0');}
inline void write (l n) {l N = n, rev, count = 0;rev = N;if (N == 0) { pc('0'); pc('\n'); return ;}while ((rev % 10) == 0) { count++; rev /= 10;}rev = 0;while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}while (count--) pc('0');}
inline void write (ull n) {ull N = n, rev, count = 0;rev = N;if (N == 0) { pc('0'); pc('\n'); return ;}while ((rev % 10) == 0) { count++; rev /= 10;}rev = 0;while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}while (count--) pc('0');}
inline void write (int n) {int N = n, rev, count = 0;rev = N;if (N == 0) { pc('0'); pc('\n'); return ;}while ((rev % 10) == 0) { count++; rev /= 10;} rev = 0;while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}while (count--) pc('0');}
inline void write(const char c[]){int i;for(i=0;c[i]!='\0';i++)pc(c[i]);}

int prime[1000001];long long int allprime[1000001];
int main()
{
int t,n;
for(int i=0;i<1000001;i++) {
       prime[i]=1;
}
for(int i=2;i<=1000;i++) {
    if(prime[i]) {
        for(int j=i;j*i<1000001;j++) {
            prime[j*i]=0;
        }
    }
}
long long int sum = 0;
rep(i,2,1000001){
    if(prime[i]){
       sum += i;
        allprime[i] = sum;
    }
    else{
         allprime[i] = sum;
    }
}
scan(t);
while(t--) {
    long long int sum = 0;
    scan(n);
    write(allprime[n-1]);
	pc('\n');
}
return 0;
}
