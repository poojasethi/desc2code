#include<iostream>
#include<stdio.h>
#include<vector>
#include<math.h>
#include<algorithm>
 
#define MP make_pair
 
using namespace std;
 
 
typedef pair<int,pair<long long int,int > > PII;
typedef long long LL;
 
vector<int>primes;
 
 
vector<PII>input;
 
void initialize_prime(int max) {
     vector<bool>v(max);
for  (int i=2;i<max;i++) v[i]=true;
for (int i=3; i<=int(sqrt(max)); i+=2)
      if (v[i])
         for (int j=i*i; j<max; j+=i*2)
            v[j] = false;
primes.push_back(2);
for (int i=3;i<max;i+=2)
    if (v[i]) primes.push_back(i);
}
 
void dosums(int max) {
int comp=0;
long long int sum=0;
for (int i=0;i<primes.size();i++) {
if (primes[i]>=input[comp].first) {
input[comp].second.first=sum;
comp++;
if (comp==(input.size())) break;
for (int j=comp;j<max;j++) {
if (input[j].first<primes[i]) {
comp++; input[j].second.first=sum; }
else  break;  
      } 
}
sum+=primes[i];
}
return; }
 
void Output() {
LL *a;
a=new LL[input.size()];
for (int i=0;i<input.size();i++) 
a[input[i].second.second]=input[i].second.first;
for (int i=0;i<input.size();i++)
printf("%lld\n",a[i]);
     return; }
 
 
int main () {
int t;
scanf("%d",&t);
for (int i=0;i<t;i++) {
int getin;
    scanf("%d",&getin);
input.push_back(MP(getin,MP(0,i)));
}
sort(input.begin(),input.end());
initialize_prime(input[input.size()-1].first+100);
dosums(input[input.size()-1].first);
Output();
return 0; }