#include <iostream>
#include <algorithm>
#include <string>
#include <cstring>
using namespace std;
int dp[102][102];
inline int solve(char *a,char *b){
    int aa=strlen(a);
    int bb=strlen(b);
for(int i=0;i<=aa;i++)
    dp[i][0]=0;
for(int i=0;i<=bb;i++)
    dp[0][i]=0;
for(int i=1;i<=aa;i++){
 for(int j=1;j<=bb;j++){
    if(a[i-1]==b[j-1])
        dp[i][j]=dp[i-1][j-1]+1;
    else
        dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
    }
  }
return dp[aa][bb];
}
int main(){
int t;
char a[105],b[105],c[105];
scanf("%d",&t);
while(t--){
int flag1=0;
int flag2=0;
scanf("%s",a);
scanf("%s",b);
int len=strlen(a);
int k=0;
for(int i=len-1;i>=0;i--)
    c[k++]=a[i];
    c[k]='\0';
int len1=solve(a,b);
int len2=solve(c,b);
if(len1==strlen(b))
    flag1=1;
if(len2==strlen(b))
    flag2=1;
if(flag1 && flag2)
    printf("3\n");
else if(flag1==1 && flag2==0)
    printf("1\n");
else if(flag1==0 && flag2==1)
    printf("2\n");
else
    printf("0\n");
}
return 0;
}
