#include<iostream>
#include<string>
#include<algorithm>
#include<vector>
using namespace std;
int subseq(string a,string b,int m,int n)
{
int L[m+1][n+1];
   int i,j;
   for (i=0;i<=m;i++)
   {
     for (j=0;j<=n;j++)
     {
    if(i==0 || j==0)
         L[i][j]=0;
         else if (a[i-1]==b[j-1])
         L[i][j]=L[i-1][j-1] + 1;
       else
         L[i][j]=max(L[i-1][j],L[i][j-1]);
     }
   }
   /* L[m][n] contains length of LCS for X[0..n-1] and Y[0..m-1] */
   return L[m][n];
}
int main()
{
int t;
cin>>t;
while(t--)
{
 string a,b;
 cin>>a>>b;
  int x,y;
int m=a.length();
 int n=b.length();
  x=subseq(a,b,m,n);
  //cout<<"hii";
  reverse(b.begin(),b.end());
  y=subseq(a,b,m,n);
  if(x==b.length() && y==b.length()  && x==y)
        cout<<"3"<<endl;
   else if(x==b.length())
    {cout<<"1"<<endl;
    continue;
    }
  else if(y==b.length())
    {cout<<"2"<<endl;
    continue;
    }
else
    cout<<"0"<<endl;
}
return 0;
}
