#include<stdio.h>
#include<string.h>
#include<vector>

using namespace std;

#define int64 long long

vector<int> prefs[20];
int64 dp[(1<<19)];

const int64 MOD = 1000000003;

int main()
{
    //freopen("SHASGRA.txt", "r", stdin);
    int T,N,M,u,v;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&N,&M);
        while(M--)
        {
            scanf("%d%d",&u,&v);
            prefs[u+1].push_back(v-N);
        }
        memset(dp, 0, sizeof(dp));
        dp[0] = 1;
        for(int i=1; i<=N; ++i)
        {
            for(unsigned int mask = 0; mask < (1<<N); ++mask)
            {
                if (i == __builtin_popcount(mask))
                {
                    for(int j=0; j<prefs[i].size(); ++j)
                    {
                        int p = prefs[i][j];
                        if(mask & (1<<p))
                        {
                            dp[mask] = (dp[mask] + dp[mask & (~(1<<p))]) % MOD;
                        }
                    }
                }
            }
        }
        printf("%lld\n", dp[(1<<N) - 1]);
        for(int i=1; i<=N; ++i) prefs[i].clear();
    }
    return 0;
}