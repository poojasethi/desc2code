
#include<bits/stdc++.h>
#define debug(args...){dbg,args; cerr<<endl;}args
#define sqr(x) ( (x)*(x) )
#define Size(a) int((a).size()) 
#define pb push_back
#define mset(x,v) memset(x,v,sizeof(x))
#define all(c) (c).begin(),(c).end() 
#define SORT(x) sort(all(x))
#define tr(c,i) for(__typeof((c).begin()) i = (c).begin(); i != (c).end(); i++) 
#define present(c,x) ((c).find(x) != (c).end()) 
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mod 1000000003
using namespace std;
typedef vector<int> VI;
typedef long long int ll;
struct debugger
{
template<typename T> debugger& operator , (const T& v)
{	
	cerr<<v<<" ";	
	return *this;	
}
} dbg;
int tot;
vector< vector<int> > adj(19);
int n;

int dp[18][1<<18];
int f(int idx,int mask)
{
	//debug("in",idx," ",mask);
	if(dp[idx][mask]!=-1) 
	{
		return dp[idx][mask];
	}
	ll sum=0;
	tr(adj[idx],it)
	{
		int index=*it;
		if(mask&(1<<index)) 
		{
			sum=(sum+f(idx-1,mask&~(1<<index)));
		}
	}
	dp[idx][mask]=sum%mod;
	return dp[idx][mask];
}
int main()
{
	int t,m;
	scanf("%d",&t);
	while(t--)
	{
		mset(dp,-1);
		for(int i=0;i<=18;i++)
		{
			adj[i].clear();
		}
		tot=0;
		scanf("%d%d",&n,&m);
		while(m--)
		{
			int x,y;
			scanf("%d%d",&x,&y);
			adj[x].pb(y-n);
		}
		for(int i=0;i < n;i++)
		{
			dp[0][i]=0;
		}
		tr(adj[0],it)
		{
			dp[0][1<<*it]=1;
		}
		printf("%d\n",f(n-1,(1<<n)-1));
	}
	return 0;
}

