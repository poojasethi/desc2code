#include <bits/stdc++.h>
using namespace std;
int input[105][105];
vector< pair<long long int, pair<long long int, long long int > > > coord;
int visited[105];
int main() {
	int t;
	scanf("%d", &t);
	while(t--) {
		int n;
		long long int d;
		scanf("%d%lld", &n, &d);
		int i;
		coord.clear();
		memset(input, 0, sizeof(input));
		memset(visited, 0, sizeof(visited));
		for(i = 0; i < n; i++) {
			long long int x, y, z;
			scanf("%lld%lld%lld", &x, &y, &z);
			coord.push_back(make_pair(x, make_pair(y, z)));
		}
		sort(coord.begin(), coord.end());
		unique(coord.begin(), coord.end());

		int j;
		for(i = 0; i < coord.size(); i++) {
			for(j = 0; j < coord.size(); j++) {
				if(i != j) {
					if((coord[i].first - coord[j].first) * (coord[i].first - coord[j].first) + (coord[i].second.first - coord[j].second.first) * (coord[i].second.first - coord[j].second.first) + (coord[i].second.second - coord[j].second.second) * (coord[i].second.second - coord[j].second.second) <= d * d ) {
						input[i][j] = 1;
					}
				}
			}
		}
		/*for(i = 0; i < coord.size(); i++) {
			for(j = 0; j < coord.size(); j++) {
				printf("%d ", input[i][j]);
			}
			printf("\n");
		}*/
		int ans = 0;
		for(i = 0; i < coord.size(); i++) {
			if(!visited[i]) {
				queue <int> q;
				q.push(i);
				visited[i] = 1;
				while(!q.empty()) {
					int ind = q.front();
					q.pop();
					for(j = 0; j < coord.size(); j++) {
						if(input[ind][j] == 1 && !visited[j]) {
							visited[j] = 1;
							q.push(j);
						} 
					}
				}
				ans++;
			}
		}
		printf("%d\n",ans);
		
	}
	
	return 0;
}