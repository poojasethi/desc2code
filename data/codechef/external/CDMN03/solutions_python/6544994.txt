#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <map>
#include <queue>
#include <iomanip>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <string>
#define F first
#define S second

using namespace std;

typedef long long ll;
vector <pair<ll, pair<ll,ll> > > v;
vector <ll> G[124];
ll vist[124];

ll dd(ll a, ll b, ll c, ll d, ll e, ll f){

    //cout << (ll)sqrt(pow(b-a,2)+pow(d-c,2)+pow(f-e,2)) <<"\n";
    return (d-a)*(d-a)+(e-b)*(e-b)+(f-c)*(f-c);

}

void dfs(ll n){
    if(vist[n] == 1){
        return;

    }
    vist[n] = 1;
    for(ll i=0; i<G[n].size(); i++){
        if(vist[G[n][i]] == 0)
            dfs(G[n][i]);
    }
}
int main(){
    ll n,t,d,a,b,c;
    ll xx;
    cin >> t;
    while(t--){
            v.clear();


    cin >> n >> d;


    for(ll i=0; i<n; i++){
        cin >> a >> b >> c;
        v.push_back(make_pair(a,make_pair(b,c)));
    }

    for(ll i=0; i<124; i++){
            G[i].clear();

    }

    for(ll i=0; i<n; i++){
        for(ll j=0; j<n; j++){
                if(i!=j){
                xx = dd(v[i].first,v[i].second.first,v[i].second.second,v[j].first,v[j].second.first,v[j].second.second);
                        if(xx <= d*d){
                            G[i].push_back(j);
                            G[j].push_back(i);
                        }
                }
        }

    }
        ll cc=0;
        memset(vist,0,sizeof(vist));

        for(ll i=0; i<n; i++){
            if(vist[i] == 0){
                dfs(i);
                cc++;
            }
        }
        cout << cc <<"\n";
    }
  return 0;
}
