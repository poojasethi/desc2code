#include<bits/stdc++.h>
using namespace std;
#define mp make_pair
double dis(pair<pair<int,int>,int>  p1,pair<pair<int,int>,int>  p2)
{
	double distance;
	distance=sqrt(pow((p1.first.first-p2.first.first),2)+pow((p1.first.second-p2.first.second),2)+pow((p1.second-p2.second),2));
	return distance;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
		int n,i,x,y,z,ctr=0,f=0,ff=0;
		vector<pair<pair<int,int>,int> >v;
		double d,distance;
		scanf("%d%lf",&n,&d);
		for(i=0;i<n;i++)
		{
			scanf("%d%d%d",&x,&y,&z);
			v.push_back(mp(mp(x,y),z));	
		}
		vector<bool>st(105);
		queue<pair<pair<int,int>,int> >q;
		q.push(v[0]);
		st[0]=true;
		while(true)
		{
			while(!q.empty())
			{
				pair<pair<int,int>,int> p=q.front();
				q.pop();
				vector<pair<pair<int,int>,int> >::iterator it;
				for(it=v.begin();it!=v.end();it++)
				{
					if(st[it-v.begin()]==false&&dis(p,(*it))<=d)
					{
						//cout<<dis(p,(*it))<<endl;
						q.push((*it));
						st[it-v.begin()]=true;
						ff=1;
					}
				}
			}
			f=0;
			ctr++;
			vector<pair<pair<int,int>,int> >::iterator it;
			for(it=v.begin();it!=v.end();it++)
			{
				if(st[it-v.begin()]==false)
				{
					q.push((*it));
					st[it-v.begin()]=true;
					f=1;
				}
				if(f==1)
				{
					break;
				}
			}
			if(f==0)
			{
				break;
			}
		}
		if(ff==0)
		printf("%d\n",n);
		else
		printf("%d\n",ctr);
	}
	return 0;
}