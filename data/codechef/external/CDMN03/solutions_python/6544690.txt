#include<bits/stdc++.h>
#define ll long long int
#define MAX 100000000

using namespace std ;

double  distance(ll a , ll b , ll c , ll a1 , ll b1 , ll c1)
{
    double z ;
    
    z = sqrt((a - a1) * (a - a1) + (b - b1) * (b - b1) + (c - c1) * (c - c1)) ;
    
    return z ;
}

int visit[101] = {0} ;

vector<int> vi[101] ;

void dfs(int x)
{
    stack<int> S ;
    
    S.push(x) ;
    
    int f , s , v ;
    
    while(!S.empty())
    {
        f = S.top() ;
        
        s = vi[f].size() ;
        
        S.pop() ;
        
        if(!visit[f])
          visit[f] = 1 ;
          
        for(int i = 0 ; i < s ; i++)
        {
            v = vi[f][i] ;
            
            if(!visit[v])
              {
                  visit[v] = 1 ;
                  S.push(v) ;
              }
        }
    }
}

int main()
{
    int test ;
    
    cin >> test ;
    
    int N ;
    
    double D ;
    
    while(test--)
    {
        cin >> N >> D ;
        
        for(int i = 0 ; i < 101 ; i++)
         vi[i].clear() ;
         
        memset(visit , 0 , sizeof(visit)) ;
        
        double a[N] , b[N] , c[N] , x ;
        
        int cc = 0 , f = 0 , flag = 0;
    
        for(int i = 0 ; i < N ; i++)
         cin >> a[i] >> b[i] >> c[i] ;
         
         
         if(N == 1)
           cout << "1" << endl ;
         
         else{
         
        for(int i = 0 ; i < N  ; i++)
        {
            
          for(int j = i + 1 ; j < N ; j++)
            {
                       x = distance(a[i] , b[i] , c[i] , a[j] , b[j] , c[j]) ;
                       
                       if(x <= (D))
                        {
                            vi[i].push_back(j) ;
                            vi[j].push_back(i) ;
                        }
            }
            
        }
        
        int count = 0 ;
        
        for(int i = 0 ; i < N - 1 ; i++)
        {
            if(!visit[i])
             {
                count++ ;
                dfs(i) ;
             }
        }
        
        for(int i = 0 ; i < N ; i++)
         if(!visit[i])
          f++ ;
          
        // cout << f << endl ;
        
        
        cout << count + f  << endl ;
        
         }

    }
    
    return 0 ;
}
