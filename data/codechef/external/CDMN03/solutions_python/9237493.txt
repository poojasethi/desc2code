#include<bits/stdc++.h>
using namespace std;
#define ll long long
ll d;

ll dist(ll a1,ll b1,ll c1,ll a2,ll b2,ll c2)
{
    return sqrt((a1-a2)*(a1-a2)+(b1-b2)*(b1-b2)+(c1-c2)*(c1-c2));
}

void dfs(ll g[102][102],ll node,ll n,bool visited[])
{
        visited[node]=true;
		ll i;
			for(i=0;i<n;i++)
			{
				if(g[node][i]<=d && !visited[i] && i!=node)
				{
					dfs(g,i,n,visited);
				}
			}

}

int main()
{
    int t;
    ios_base::sync_with_stdio(false);
    cin.tie(0);
    cin>>t;
    while(t--)
    {
        ll n;
        cin>>n>>d;
        ll a[n+1],b[n+1],c[n+1];
        for(ll i=0;i<n;i++)
        cin>>a[i]>>b[i]>>c[i];
        ll g[102][102]={0};
        for(ll i=0;i<n;i++)
        {
            for(ll j=0;j<n;j++)
            {
                g[i][j]=dist(a[i],b[i],c[i],a[j],b[j],c[j]);
            }
        }
        bool visited[n+1];
        for(ll i=0;i<n;i++)
        visited[i]=false;
        ll cnt = 0;
        for(ll i=0;i<n;i++)
        {
                if(!visited[i])
                {
                    dfs(g,i,n,visited);
                    cnt++;
                }
        }
        cout<<cnt<<endl;
    }
    return 0;
}
