#include<bits/stdc++.h>
using namespace std;

#define foreach(it, c) for(typeof(c.begin()) it=c.begin();it!=c.end();it++)
typedef long long LL;

struct Point
{
    LL x;
    LL y;
    LL z;
}point[102];
vector<int> adj[102];
LL d;
int n, marked[102];

bool cfulfil(Point a, Point b)
{
    return(((a.x-b.x)*(a.x-b.x)+(a.y-b.y)*(a.y-b.y)+(a.z-b.z)*(a.z-b.z)) <= (d*d));
}

void dfs(int s)
{
    marked[s]=1;
    foreach(it, adj[s])
    {
        if(marked[*it]==0)
        {
            dfs(*it);
        }
    }
}

int main()
{
    int test;
    scanf("%d", &test);
    while(test--)
    {
        scanf("%d %lld", &n, &d);
        for(int i=1;i<=n;i++)
        {
            scanf("%lld %lld %lld", &point[i].x, &point[i].y, &point[i].z);
        }
        for(int i=1;i<=n;i++)
        {
            for(int j=i+1;j<=n;j++)
            {
                if(cfulfil(point[i], point[j]))
                {
                    adj[i].push_back(j);
                    adj[j].push_back(i);
                }
            }
        }
        int ans=0;
        for(int i=1;i<=n;i++)
        {
            if(marked[i]==0)
            {
                ans++;
                dfs(i);
            }
        }
        printf("%d\n", ans);
        for(int i=1;i<=n;i++)
        {
            marked[i]=0;
            adj[i].clear();
        }
    }
}
