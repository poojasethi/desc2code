#include<stdio.h>
#include<algorithm>
using namespace std;

long int arr[1000000];

struct use
{
    long long int x;
    long long int y;
    long long int z;
    long long int assig;
};

int main()
{
    long int t,n,i,j,flag;
    long long int cnt,d,dist,prev,last,k,l;
    scanf("%ld",&t);
    while(t--)
    {
        scanf("%ld %lld",&n,&d);
        int parent[102];
        for(i=0;i<n;i++)
            parent[i]=-1;
        d=d*d;
        struct use obj[104];
        for(i=0;i<n;i++)
        {
            scanf("%lld %lld %lld",&obj[i].x,&obj[i].y,&obj[i].z);
            obj[i].assig=0;
        }
        flag=-1;
        prev=0;
        last=1;
        cnt=0;
        k=1;
        arr[0]=0;
        cnt++;
        obj[0].assig=1;
        parent[0]=0;
        while(1){
        for(l=prev;l<last;l++)
        {
            i=arr[l];
            for(j=0;j<n;j++)
            {
                if(obj[j].assig==1)
                {
                    continue;
                }
                else
                {
                    dist=(obj[j].x-obj[i].x)*(obj[j].x-obj[i].x)+(obj[j].y-obj[i].y)*(obj[j].y-obj[i].y)+(obj[j].z-obj[i].z)*(obj[j].z-obj[i].z);
                    if(dist<=d)
                    {
                        flag=1;
                        arr[k++]=j;
                        parent[j]=parent[i];
                        obj[j].assig=1;
                        cnt++;
                    }
                }
            }
        }
        if(flag==-1 && cnt==n)
            break;
        else if(flag==-1)
        {
            for(i=0;i<n;i++)
            {
                if(obj[i].assig==0)
                {
                    arr[k++]=i;
                    obj[i].assig=1;
                    parent[i]=i;
                    cnt++;
                    break;
                }
            }
        }
        prev=last;
        last=k;
        flag=-1;
        /*for(int z=0;z<n;z++)
        printf("%d\n",parent[z]);
        printf("\n\n");*/
    }
    long long int ans=0;
    sort(parent,parent+n);
    last=parent[0];
    ans++;
    for(i=1;i<n;i++)
    {
        if(parent[i]!=last)
        {
            last=parent[i];
            ans++;
        }
    }
    printf("%lld\n",ans);
    }
    return 0;
}
