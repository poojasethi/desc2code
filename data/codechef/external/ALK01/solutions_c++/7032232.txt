#include<iostream>
#include<cstdio>
#include<algorithm>
using namespace std;
#define mod 1000000007
int tree[100009],maxval;
 
      void update(int idx, int val)
      {
           while (idx <= maxval)
           {
                 tree[idx] += val;
                 idx += (idx & -idx);
           }
      }
      //Returns the cumulative frequency of index idx
      long long read(int idx)
      {
        long long sum=0;
        while (idx>0)
        {
              sum += tree[idx];
              idx -= (idx & -idx);
        }
        return sum;
      }
 
int main()
{
	int n,test,i,j,k,l;
	int a[100009],b[100009],c[100009];
	int modi[10009];
	int sum_array[10009];
	cin>>test;
	while(test--)
	{
		scanf("%d",&n);
		maxval=n;
		for(i=0;i<n;i++)
			scanf("%d",&a[i]);
		for(i=0;i<n;i++)
			scanf("%d",&b[i]);
		for(i=0;i<n;i++)
		{
			j=b[i];
			c[j]=i;
			tree[i]=0;
		}
		tree[n]=0;
		for(i=0;i<n;i++)
		{
			a[i]=c[a[i]]+1;
			//cout<<a[i]<<" ";
			
		}
		
		
		long long s=0;
		for(i=n-1;i>=0;i--)
		{
			j=a[i];
			//cout<<j<<" ";
			s+=read(j-1);
			update(j,1);
		}
		
		printf("%lld\n",s);
 
	}
		
}