#include<iostream>
#include<memory.h>
#include<algorithm>
#include<map>
#define L long long

using namespace std;

int t[100005],maxv;
int h[100005];
int a[100005],b[100005];

void update(int idx,int val)
{
     while(idx<=maxv)
     {
                         t[idx]+=val;
                         idx+=(idx&-idx);
     }
}
 
/*void cumdiff(int x,int y)
{
     int sum=t[x];
     if(x>0)
     {
            int z=x-(x&-x);
            while(y!=z)
            {
                       sum-=t[y];
                       z-=                   */
L cum(int idx)
{
    L sum=0;
    while(idx>0)
    {
                sum+=t[idx];
                idx-=(idx&-idx);
    }
    return sum;
}

int main()
{
    int t1,n,i;
    L ans;
    scanf("%d",&t1);
    while(t1--)
    {
              scanf("%d",&n);
              maxv=n;
              //memset(t,0,sizeof t);
              ans=0;
              for(i=0;i<n;i++)
              {
                              scanf("%d",&a[i]);
                              //ca[i]=a[i];
                              t[i]=0;
                              //update(a[i],1);
                              //ans+=(cum(10000000)-cum(a[i]));
              }
              t[n]=0;
              for(i=0;i<n;i++)
              {
                              scanf("%d",&b[i]);
                              h[b[i]]=i+1;
              }
              /*sort(a,a+n);
              for(i=0;i<n;i++)
              h[a[i]]=i+1;*/
              for(i=0;i<n;i++)
              {
                              update(h[a[i]],1);
                              ans+=(cum(n)-cum(h[a[i]]));
              }
              printf("%lld\n",ans);
    }
    return 0;
}
