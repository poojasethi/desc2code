#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<vector>
#include<string>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<deque>
#include<cstring>

using namespace std;

int bit[1<<18];
vector<int> a(100001);
vector<int> b(100001);
vector<int> rank(100002);

void update(int idx)
{
    
     while(idx<1<<18)
     {
                     bit[idx]++;
                     idx+=(idx&-idx);
     }

}

int query(int idx)
{
     int total=0;
     while(idx>0)
     {
                 total+=bit[idx];
                 idx-=(idx&-idx);
     }
     return total;
}

int scan()
{
int t=0;
char c;
        c=getchar_unlocked();
        while(c<'0' || c>'9')
        c=getchar_unlocked();
        while(c>='0' && c<='9')
        {
                t=(t<<3)+(t<<1)+c-'0';
                c=getchar_unlocked();
        }
        return(t);
}


int main()
{
    int t;
    t=scan();//scanf("%d", &t);
    while(t--)
    {
        int n;
        n=scan();//scanf("%d", &n);
        memset(bit, 0, sizeof(bit));
        for(int i=0;i<n;i++)
            a[i]=scan();
        for(int i=0;i<n;i++)
            b[i]=scan();
        for(int i=0;i<n;i++)
            rank[b[i]]=i+1;
        for(int i=0;i<n;i++)
            a[i]=rank[a[i]];
        long long ans=0;
        for(int i=n-1;i>=0;i--)
        {
            ans+=query(a[i]);
            update(a[i]);
        }
        printf("%lld\n", ans);
    }
    return 0;
}
