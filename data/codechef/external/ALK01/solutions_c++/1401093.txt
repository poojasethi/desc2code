#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define vint vector<int>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define cua(x) (x)*(x)
#define eps (1e-9)
#define oo (1<<30)
#define debug(x) cout <<#x << " = " << x << endl
#define adebug(x,n) cout <<#x<<endl; f(i,0,n)cout<<x[i]<<char(i+1==n?10:32)
#define mdebug(x,m,n) cout <<#x<<endl; f(i,0,m)f(j,0,n)cout<<x[i][j]<<char(j+1==n?10:32)
#define N 100005
using namespace std;
template<class T> inline void mini(T &a,T b){if(b<a) a=b;}
template<class T> inline void maxi(T &a,T b){if(b>a) a=b;}

int bit[N], n;
inline void update(int a, int val) {
	for (; a <= n; a += a & (-a)) bit[a] += val;
}
inline int get(int a) {
	int res = 0;
	for (; a; a -= a & (-a)) res += bit[a];
	return res;
}

int tc;
int a[N], b[N], c[N];
int inv[N];

int main(){
	cin >> tc;
	while (tc--) {
		cin >> n;
		f(i,0,n) scanf("%d", a + i), a[i]--;
		f(i,0,n) scanf("%d", b + i), b[i]--;
		f(i,0,n) inv[a[i]] = i;
		f(i,0,n) c[i] = inv[b[i]];
		ll res = 0;
		clr(bit, 0);
		fd(i,n-1,0) {
			res += get(c[i]+1);
			update(c[i]+1, 1);
		}
		cout << res << endl;
	}
}

