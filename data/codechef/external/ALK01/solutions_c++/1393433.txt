/*
    Aleksandar "Al3kSaNdaR" Ivanovic

    ALK01
*/
#include <cstdio>
#include <cstring>

using namespace std;

typedef long long int lld;

const int MaxN = 1 << 18;

int T, N, Given[MaxN], Required[MaxN], Hash[MaxN], BIT[MaxN];

inline int Add ( int idx )
{
    for ( int __idx = idx; __idx < MaxN; __idx += __idx & -__idx ) BIT[__idx]++;
}

inline int Get ( int idx )
{
    int Ret = 0;

    for ( int __idx = idx; __idx; __idx -= __idx & -__idx ) Ret += BIT[__idx];

    return Ret;
}

int main ( void )
{
    scanf ( "%d", &T );

    while ( T-- )
    {
        scanf ( "%d", &N );

        for ( int i = 0; i < N; i++ ) scanf ( "%d", &Given[i] );

        for ( int i = 0; i < N; i++ )
        {
            scanf ( "%d", &Required[i] );

            Hash[Required[i]] = N - i;
        }

        memset ( BIT, 0, sizeof ( BIT ) );

        lld Sol = 0LL;

        for ( int i = 0; i < N; i++ )
        {
            Sol += 1LL * Get ( Hash[Given[i]] );

            Add ( Hash[Given[i]] );
        }

        printf ( "%lld\n", Sol );
    }

    return 0;
}
