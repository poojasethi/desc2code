#include<bits/stdc++.h>
#define pb push_back
#define pf push_front
#define mp make_pair
#define mod 1000000007
#define _ ios_base::sync_with_stdio(0);cin.tie(0)

using namespace std;
typedef long long int LL;
typedef int I;
typedef char C;
// Template To Scan a Number!
LL SO()
{   LL a;
    scanf("%lld",&a);
    return a;
}

/*

// 			TEMPLATE FOR POWER(MOD)
LL power(LL a,LL b){   LL ans=1,c=mod;if(a==0)return 0;if(b==0)return 1;a=a%c;while(b>0){ if(b%2==1){ ans=(ans*a)%c;}b=b>>1;a=(a*a)%c;}return ans%c;}

*/

/*
			TEMPLATE FOR BINARY SEARCH
LL bsearch(LL a[],LL x,LL first,LL last){ LLmiddle=(first+last)/2,i,j;if(middle==first){ if(a[middle]==x){ i=middle;while(a[i]==x){ i--;}return i+1;}else{ return -1;}}else if(a[middle]>x){ return bsearch(a,x,first,middle);}else{ return bsearch(a,x,middle,last);}}*/
int is_prime(LL x)
{ LL sx=sqrt(x),i=2;
	for(i=2;i<=sqrt(x);i=i+1)
	{ if(x%i==0)
		{ return 0;  // It's not prime
		}
	}
	return 1;           // It's prime
}
LL Gprimes[55000]={0},P;
LL Bprimes[100000]={0};
void initialize()
{ LL i;
	P=0;
	Gprimes[P]=2;
	P=P+1;
	for(i=3;i<=110000;i=i+2)
	{ if(is_prime(i))
		{ Gprimes[P]=i;
			//                                        printf("i = %d\n",i);
			P=P+1;
		}
	}
	//  printf("count(P) = %lld\n",P);
	LL Q=0;
	for(LL p=1;p<(P-1);p=p+1)
	{
		LL sum=Gprimes[p-1]+Gprimes[p+1];
		if(sum%2==0)
		{
			if(Gprimes[p]==sum/2)
			{
				Bprimes[Q]=Gprimes[p];
				Q+=1;
			}
		}
	}
}
int main()
{  

	initialize();
	LL T,N;
	T=SO();
	while(T--)
	{
		N=SO();
		printf("%lld\n",Bprimes[N-1]);
	}
   return 0;
}
