#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<climits>
#include<map>
#include<vector>
#include<algorithm>
#define MaxM 2000000
#define MaxMby2 1000000
using namespace std;
bool prime[MaxMby2];
vector<int>PrimeVec;
map<int,int>balPrimes;

bool isBalanced(vector<int>::iterator it){
     return((*(it-1)+*(it+1)) == ((*it)<<1) );
}

void PrimeGenErasto(){
     int i,j,step,count=0;
     prime[0]=1;
     PrimeVec.push_back(2);
     for(i=1; i<MaxMby2; i++){
              if(!prime[i]){
                   step=(i<<1)+1;
                   for(j=i; j<MaxMby2; j=j+step){
                                 prime[j]=1;
                   }
                   PrimeVec.push_back(step);
              }
     }
}

void balancedPrimes(){
     int i,count=0;
     vector<int>::iterator it;
     for(it=PrimeVec.begin()+1; it!=PrimeVec.end()-1; it++){
                                //cout<<*(it-1)<<" "<<*it<<" "<<*(it+1)<<endl; 
             if((*(it-1)+*(it+1)) == ((*it)<<1) ){
                                               balPrimes[count]=*it;
                                               count++;
                                               //cout<<balPrimes[count-1]<<endl;
              }
     }
}

int main(void){
    int tcases,t;
    PrimeGenErasto();
    balancedPrimes();
    scanf("%d",&tcases);
    
    while(tcases--){
                    scanf("%d",&t);
                    printf("%d\n",balPrimes[t-1]);
    }
    return 0;
}
