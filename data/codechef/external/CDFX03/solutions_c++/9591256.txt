#include <iostream>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <vector>
#include<stack>
#include<set>
#include<limits.h>
#include <queue>
#include <map>
#include <cstdlib>
#include <algorithm>
//psyduck
#define ll long long
#define S(x) scanf("%d",&x)
#define Sf(x) scanf("%f",&x)
#define Slf(x) scanf("%lf",&x)
#define Sl(x) scanf("%lld",&x)
#define P(x)  printf("%d\n", x)
#define Pf(x)  printf("%f\n", x)
#define Plf(x)  printf("%lf\n", x)
#define Pl(x)  printf("%lld\n", x)
#define mem(x,i) memset(x,i,sizeof(x))
#define pb push_back
#define mod 1000000007
#define INF 1000000000000000008LL
using namespace std;
vector<int>v[105];
int match[104];
int state[104];
bool augmented(int x);
int bipartite_matching(int n);
bool augmented(int x);
int main()
{
    int n,m,o,d,t;
    S(t);
    while(t--){
        S(n);S(m);
        mem(match,-1);
        cin >> o;
        while(o != -1){
            cin >> d;
            v[o].pb(d);
            cin >> o;
        }
        int ans = bipartite_matching(n);
        cout <<ans<<endl;
        for(int i = 1; i <= 101; i++){
            v[i].clear();
        }
    }
}
int bipartite_matching(int n)
{
    int matching = 0;
    for(int i = 1; i <= n; i++){
        mem(state,0);
        if(augmented(i)){
            matching++;
        }
    }
    return matching;
}
bool augmented(int x)
{
    for(int i = 0; i < v[x].size(); i++){
        int y = v[x][i];
        if(state[y] == 1)
            continue;
        state[y] = 1;
        if(match[y] == -1|| augmented(match[y])){
            match[y] = x;
            return true;
        }
    }
    return false;
}
