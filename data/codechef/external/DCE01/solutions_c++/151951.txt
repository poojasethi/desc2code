
/***** Author : Kunal *****/
#include <iostream>
#include <algorithm>
#include <string>
#include <vector>

#include <cmath>
#include <cstdio>
#include <queue>
#include <list>
#include <stack>
#include <utility>
#include <numeric>
#include <map>
#include <cctype>
#include <cstring>
#include <sstream>
#include <cstdlib>
#include <cassert>
#include <iomanip>

using namespace std;

#define F(a,b) for(int a=0;a<b;a++)
#define REP(a,b) for(int a=0;a<b;a++)
#define FOR(a,b,c) for(int a=b;a<c;a++)
#define FORD(a,b,c) for(int a=b;a>=c;a--)

#define s scanf
#define p printf

#define LEN(x) ((int)x.length())
#define SZ(x) ((int)x.size())
#define ALL(x) x.begin(), x.end()
#define MP(x,y) make_pair(x,y)
#define PB(x) push_back(x)
#define INF 1000000000

typedef long long LL;
typedef pair<int,int> PII;
typedef pair<int, PII> PIII;
typedef vector<int> VI;
typedef vector<bool> VB;
typedef vector<string> VS;

//int d[][2]={{-1.0},{1,0},{0,-1},{0,1}};

int A[1007][1007];
int B[1007][1007];

int main()
{
	int t;
	s("%d",&t);
	int n,k,x;
	int ans,nxtx,minval;
	while(t--)
	{
		s("%d%d%d",&n,&k,&x);
		F(i,k) F(j,n-i) s("%d",&A[i][j]);
	
		x--;	
		ans=0;
		memset(B,1,sizeof(B));
		B[k-1][x]=A[k-1][x];
		FORD(i,k-1,0)
		{
			minval=INF;
			FORD(j,x-1,0)
			{
				B[i][j]=min(B[i][j],B[i][j+1]+A[i][j]);

				if(i-1>=0 && j!=n-i-1)
				{
					B[i-1][j+1]=max(B[i][j],B[i][j+1])+A[i-1][j+1];
					if(minval>B[i-1][j+1])
					{
						minval=B[i-1][j+1];
						nxtx=j+1;
					}
				}
				ans=max(ans,B[i][j]);
			}
			FOR(j,x+1,n-i)
			{
				B[i][j]=min(B[i][j],B[i][j-1]+A[i][j]);
				
				if(i-1>=0 && j!=0)
				{
					B[i-1][j]=max(B[i][j],B[i][j-1])+A[i-1][j];
					if(minval>B[i-1][j])
					{
						minval=B[i-1][j];
						nxtx=j;
					}
				}
				ans=max(ans,B[i][j]);
			}
			x=nxtx;
		}
		//F(i,k) {F(j,n-i) p("%d ",B[i][j]); p("\n");}
		p("%d\n",ans);
	}
	return 0;
}
