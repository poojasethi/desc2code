	#include <iostream>
	#include <fstream>
	#include <string>
	#include <ctime>

	using namespace std;

	const double eps=1e-11;
	//const double pi=acos(-1.0);
	typedef long long ll;
	typedef long long int lli;
	typedef unsigned long long ull;
	typedef long double ld;

	#define lpu(i,s,e) for(i=s;i<e;i++)
	#define lpd(i,s,e) for(i=s;i>e;i--)
	#define lpui(i,s,e) for(i=s;i<=e;i++)
	#define lpdi(i,s,e) for(i=s;i>=e;i--)
	#define abs(a) (a<0?-(a):a)
	#define nl() cout << '\n'
	#define nlf() cout << endl

	#ifdef LOCAL
	    freopen("in", "r", stdin);
	#endif

	class TimeTracker {
	    clock_t start, end;
	public:
	    TimeTracker() {
	        start = clock();
	    }
	    ~TimeTracker() {
	        end = clock();
	        fprintf(stderr, "%.3lf s\n", (double)(end - start) / CLOCKS_PER_SEC);
	    }
	};

	inline void swap(ull& a,ull &b){ a^=b; b^=a; a^=b; }
	inline void swap(lli& a,lli &b){ a^=b; b^=a; a^=b; }
	inline lli min(lli& a,lli &b){ if(a<b) { return a; } else return b; }
	inline lli max(lli& a,lli &b){ if(a>b) { return a; } else return b; }

	# define getcx getchar_unlocked
	ull inp_ull()//fast input function
	{
	        ull n=0;
	        int ch=getcx();
	        while( ch < '0' || ch > '9' )
	        {ch=getcx();}
	        while( ch >= '0' && ch <= '9' )
	        n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	        return n;
	}

	lli inp_lli()//fast input function
	{
	        lli n=0;
	        int ch=getcx();
	        int sign=1;
	        while( ch < '0' || ch > '9' )
	        {if(ch=='-')sign=-1; ch=getcx();}
	        while( ch >= '0' && ch <= '9' )
	        n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	        n=n*sign;
	        return n;
	}

	int inp_int()//fast input function
	{
	        int n=0;
	        int ch=getcx();
	        int sign=1;
	        while( ch < '0' || ch > '9' )
	        {if(ch=='-')sign=-1; ch=getcx();}
	        while( ch >= '0' && ch <= '9' )
	        n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
	        n=n*sign;
	        return n;
	}

	void output(lli x)
	{
	  if(x<0)
	    {
	      putchar('-');
	      x=-x;
	    }
	  int len=0,data[25];
	  while(x)
	    {
	      data[len++]=x%10;
	      x/=10;
	    }
	  if(!len)
	    data[len++]=0;
	  while(len--)
	    putchar(data[len]+48);
	  putchar('\n');
	}

ull mulmod(ull a, ull b, ull m )
{
    if(a>m)
        a=a%m;
    if(b>m)
        b=b%m;
    ull ret = 0;
    if(a<b)
        swap(a,b);
    while(b)
    {
        while(a<m)
        {
            if(b&1)
                ret += a;
            a<<=1;
            b>>=1;
        }
        a-=m;
        while(ret>=m)
            ret-=m;
        if(a<b)
            swap(a,b);
    }
    return ret;
}

	int main()
	{
	  int t=inp_int();
	  ull n,b,b_t,tp,tp2;
	  int p;
	  while(t--){
	    n=inp_ull(); b=inp_ull(); b_t=b;
	    if(n==0) { if(b==1) cout << "Odd" << endl; else cout << "Even" << endl ; continue;}
	    p=0; while(b_t%2==0) { p++; b_t/=2;}
	    b_t=1; p++; b_t=b_t<<p;
	    tp=1; tp2=1;
	    for(ull i=1;i<=n;i++) { tp=mulmod(i,tp,b_t); tp2=mulmod(i,tp2,b); }
	    tp2%=b_t;
		tp=(tp-tp2+b_t)%b_t;
		p--; tp=tp>>p;
		if(tp==1) cout << "Odd" << endl;
		else cout << "Even" << endl;
	  }
	  return 0;
	}