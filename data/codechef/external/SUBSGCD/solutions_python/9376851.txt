#include <bits/stdc++.h>
using namespace std;

using ll = long long;
using VI = vector<int>;
using P = pair<int, int>;
using VP = vector<P>;

const ll mod = 1e9 + 7;

VI factors(int a, const VI& primo) {
  VI f;
  //cerr << a << ":";
  while (a != 1) {
    int p = primo[a];
    f.push_back(p);
    do a /= p;
    while (a % p == 0);
  }
  //for (int p : f) cerr << " " << p;
  //cerr << endl;
  return f;
}


VI divs(int a, const VI& primo) {
  VI f = factors(a, primo);
  VI r;
  function<void(int,int,int)> bt = [&](int i, int v, int c) {
    if (i == int(f.size())) {
      r.push_back(v);
      return;
    }
    bt(i + 1, v * f[i], c + 1);
    bt(i + 1, v, c);
  };
  bt(0, 1, 0);
  //for (auto p : r) cerr << p.first << " " << p.second << endl;
  return r;
}

ll mpow(ll b, ll e) {
  if (e == 0) return 1;
  ll r = mpow(b, e / 2);
  r = (r * r) % mod;
  if (e % 2 == 1) r = (r * b) % mod;
  return r;
}

int main() {
  const int MX = 1e6 + 10;
  VI primo(MX, -1);
  primo[0] = primo[1] = false;
  for (ll i = 2; i < MX; ++i) {
    if (primo[i] == -1) {
      primo[i] = i;
      for (ll j = i * i; j < MX; j += i) primo[j] = i;
    }
  }

  VI count(MX);
  for (int i = 2; i < MX; ++i) {
    count[i] = factors(i, primo).size();
    if (count[i] % 2 == 0) count[i] = mod - count[i];
  }

  VI pot(MX);
  for (int i = 0; i < MX; ++i) pot[i] = (mpow(2, i) + mod - 1) % mod;

  int t;
  cin >> t;
  while (t--) {
    int n, q;
    cin >> n >> q;
    VI s(n), c(MX);
    for (int i = 0; i < n; ++i) {
      int a; cin >> a;
      VI v = divs(a, primo);
      for (int p : v) ++c[p];
      s[i] = a;
    }

    ll res = 0;
    for (int i = 2; i < MX; ++i) {
      ll f = count[i];
      if (f != 0) {
        f = (f * pot[c[i]]) % mod;
        res = (res + f) % mod;
        //cerr << i << " " << c[i] << " " << count[i] << " " << pot[i] << " " << res << endl;
        //if (i > 100) break;
      }
    }

    //cerr << res << endl;

    while (q--) {
      int x, y;
      cin >> x >> y;
      --x;
      VI vold = divs(s[x], primo), vnew = divs(y, primo);
      s[x] = y;
      for (int p : vold) {
        ll f = mod - pot[c[p]];
        --c[p];
        f += pot[c[p]];
        res = (res + count[p] * f) % mod;
      }
      for (int p : vnew) {
        ll f = mod - pot[c[p]];
        ++c[p];
        f += pot[c[p]];
        res = (res + count[p] * f) % mod;
      }
      cout << res << endl;
    }
  }
}
