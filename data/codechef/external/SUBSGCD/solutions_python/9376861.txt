#include <iostream>
#include <vector>
#include <unordered_map>
#define map unordered_map
#define MOD 1000000007

using namespace std;

typedef long long ll;
typedef pair<ll,ll> ii;
typedef vector<ll> vi;
typedef vector<vi> vvi;
typedef vector<ii> vii;

map<ll,ll> cont;
vi erat;
vi num;
vvi fact;
int n,q;
ll res;

ll powe(ll a,ll b){
  if(b == 0) return 1;
  ll aux = powe(a,b/2);
  aux = (aux*aux)%MOD;
  if(b%2) return (aux*a)%MOD;
  else return aux;
}

void back(int i,int j,ll s,ll prod, bool suma){
  if(j == fact[i].size()){
    if(prod == 1) return;
    if(suma){
      if(s%2){
	ll aux = powe(2,cont[prod]);
	++cont[prod];
	res += (s*aux)%MOD;
      }
      else{
	ll aux = powe(2,cont[prod]);
	++cont[prod];
	res += MOD-(s*aux)%MOD;
      }
    }
    else{
      if(s%2){
	--cont[prod];
	ll aux = powe(2,cont[prod]);
	res += MOD-(s*aux)%MOD;
      }
      else{
	--cont[prod];
	ll aux = powe(2,cont[prod]);
	res += (s*aux)%MOD;
      }
    }
    res %= MOD;
//     cout << num[i] << ' ' << prod << ' ' << res << endl;
  }
  else{
//     cout << fact[i][j] << endl;
    back(i,j+1,s,prod,suma);
    back(i,j+1,s+1,(prod*fact[i][j])%MOD,suma);
  }
}

int main(){
  int t; cin >> t;
  erat = vi(1,2);
  for(int i = 3; i < 2000; ++i){
    int j = 0;
    while(j < erat.size() and erat[j]*erat[j] <= i and (i%erat[j])) ++j;
//     cout << i << ' ' << erat[j] << endl;
    if(erat[j]*erat[j] > i) erat.push_back(i);
  }
//   for(int i = 0; i < erat.size(); ++i) cout << erat[i] << ' ';
//   cout << endl;
  for(int cass = 0; cass < t; ++cass){
    cont.clear();
    cin >> n >> q;
    num = vi(n);
    fact = vvi(n);
    for(int i = 0; i < n; ++i) cin >> num[i];
    for(int i = 0; i < n; ++i){
      ll x = num[i];
      for(int j = 0; erat[j]*erat[j] <= x; ++j){
	ll coc = 0;
	while(!(x%erat[j])){
	  ++coc;
	  x /= erat[j];
	}
	if(coc) fact[i].push_back(erat[j]);
      }
      if(x > 1) fact[i].push_back(x);
    }
    res = 0;
    for(int i = 0; i < n; ++i){
      back(i,0,0,1,true);
    }
    for(int i = 0; i < q; ++i){
      ll x,y;
      cin >> x >> y;
      --x;
      back(x,0,0,1,false);
      num[x] = y;
      fact[x] = vi(0);
      for(int j = 0; erat[j]*erat[j] <= y; ++j){
	ll coc = 0;
	while(!(y%erat[j])){
	  ++coc;
	  y /= erat[j];
	}
	if(coc) fact[x].push_back(erat[j]);
      }
      if(y > 1) fact[x].push_back(y);
      back(x,0,0,1,true);
      cout << res << '\n';
    }
  }
}