#include <cstdio>
#include <cmath>
#include <iostream>
#include <vector>
#include <map>
#include <sstream>
#include <set>
#include <utility>
#include <iterator>
#include <functional>
#include <numeric>
#include <string>
#include <cstdlib>
#include <algorithm>
#define debug(x) cerr<<#x<<"="<<(x)<<endl
#define ISS istringstream
#define SS stringstream

using namespace std;

template<typename T>
void printvec(vector<T> a){
	for(long long i=0;i<a.size();i++)
		cout<<a[i]<<" ";
	cout<<endl;
}

// Real Code starts here

vector<string> tokenizer(string str, string delims)
{
	vector<string> tokens;
	int pos, pos2;
	pos = str.find_first_not_of(delims, 0);

	while (pos >= 0)
	{
		pos2 = str.find_first_of(delims, pos);
		if (pos2 < 0) pos2 = str.length();
		tokens.push_back(str.substr(pos, pos2-pos));
		pos = str.find_first_not_of(delims, pos2);
	}
	return tokens;
}

int main(){
	map<string,string> my;
	my["8"] = "ate";
	my["w8"] = "wait";
	my["gr8"] = "great";
	my["4"] = "for";
	my["b4"] = "before";
	
	int t;
	string line;
	getline(cin,line);
	ISS(line)>>t;
	while(t--){
		string s;
		getline(cin,s);
		string word = "";
		string result = "";
		for(int i=0;i<s.size();i++){
			if(s[i]==' '){
				if(word!=""){
					if(my.count(word))
						result+= my[word];
					else	
						result+= word;
				}
				result+= s[i];
				word="";
			}
			else
				word+= s[i];
		}
		if(my.count(word))
			result+= my[word];
		else
			result+= word;
		cout<<result<<endl;
	}
	return 0;
}