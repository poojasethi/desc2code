#include <cstdio>
#include <cstring>
using namespace std;

struct node {
    int x, y, m, mi;
}t[2100];

int T, n, m, q, r[1005], x, y, z;
char s[1005][1005];

void update(int z) {
    int x = t[(z<<1)+1].mi;
    int y = t[(z<<1)+2].mi;
    if (strcmp(s[x]+r[x], s[y]+r[y]) <= 0) t[z].mi = x;
    else t[z].mi = y;
}

void build(int z, int x, int y) {
    t[z].x = x;
    t[z].y = y;
    t[z].m = (x+y)>>1;
    if (x<y) {
        build((z<<1)+1, x, t[z].m);
        build((z<<1)+2, t[z].m+1, y);
        update(z);
    }
    else {
        t[z].mi = x;
    }
}

void ins(int z, int x) {
    if (t[z].x == x && t[z].y == x) return ;
    if (x <= t[z].m) ins((z<<1)+1, x);
    else ins((z<<1)+2, x);
    update(z);
}

int sea(int z, int x, int y) {
    if (x <= t[z].x && t[z].y <= y) return t[z].mi;
    if (y <= t[z].m) return sea((z<<1)+1, x, y);
    else if (x > t[z].m) return sea((z<<1)+2, x, y);
    else {
        int X = sea((z<<1)+1, x, y);
        int Y = sea((z<<1)+2, x, y);
        if (strcmp(s[X]+r[X], s[Y]+r[Y]) <= 0) return X;
        else return Y;
    }
}

int main() {
    scanf("%d", &T);
    while (T--) {
        scanf("%d%d", &n, &m);
        for (int i=0; i<n; ++i) {
            scanf("%s", s[i]);
            r[i] = 0;
        }
        build(0, 0, n-1);
        scanf("%d", &q);
        while (q--) {
            scanf("%d", &z);
            if (z == 0) {
                scanf("%d%d", &x, &y);
                printf("%d\n", sea(0, x, y));
            }
            else {
                scanf("%d", &x);
                if (r[x] < m) {
                    r[x]++;
                    ins(0, x);
                }
            }
//for (int i=0; i<n; ++i) printf("%d %s\n", i, s[i]+r[i]);
        }
    }
    return 0;
}
