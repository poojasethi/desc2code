#include <iostream>
#include <vector>
#include <climits>
using namespace std;

vector<vector<int> > mem;
vector<vector<int> > buses;
int N, M;
int dp(int n, int m){
	if(n == N)
		return 0;
	if(mem[n][m] != -1)
		return mem[n][m];
	int ans = INT_MAX;
	if(m != 0){
		ans = min(ans,dp(n+1,m-1)+buses[n][m-1]);
	}
	ans = min(ans, dp(n+1,m)+buses[n][m]);
	if(m != M-1){
		ans = min(ans,dp(n+1,m+1)+buses[n][m+1]);
	}
	mem[n][m] = ans;
	return mem[n][m];
}

int main(){
	int K;
	cin >> K;
	while(K--){
		int T;
		cin >> T;
		cin >> N >> M;
		mem.assign(N, vector<int>(M,-1));
		buses.assign(N, vector<int>(M,0));
		for(int i=0;i<N;i++){
			for(int j=0;j<M;j++){
				cin >> buses[i][j] ;
			}
		}
		int ans = INT_MAX;
		for(int i=0;i<M;i++){
			ans = min(ans, buses[0][i]+dp(1,i));
		}
		if(ans < T){
			cout << "YES" << endl;
		}else{
			cout << "NO" << endl;
		}
	}
	return 0;
}