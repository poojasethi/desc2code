#include <cstdio>
#include <cmath>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <queue>
#include <set>
#include <cassert>

using namespace std;

#define _ ios_base::sync_with_stdio(0);cin.tie(0);
#define S(x) 			scanf("%d",&x)
#define all(c) 			(c).begin(),(c).end() 
#define sz(c) 			int((c).size())
#define pb 				push_back
#define present(c,x) 	((c).find(x) != (c).end()) 
#define cpresent(c,x) 	(find(all(c),x) != (c).end())
#define rep(i,x,y) 		for(int i = x; i < y; i++)
#define REV(i,x,y) 		for(int i = x; i >= y; i--)
#define foreach(c,itr)	for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)
#define FILL(a,v) 		memset(a,v,sizeof(a))
#define debug(args...)	{dbg,args; cerr<<endl;}
#define FF 				first
#define SS 				second 
//#define R(x) 			((rand()%x) + 1)

typedef long long int LL;
typedef vector<int> vi; 
typedef vector<vi> vvi; 
typedef pair<int,int> ii;
typedef vector<ii> vii;

struct _debugger
{
	template<typename T> _debugger& operator , (const T& v)
	{	
		cerr<<v<<" ";
		return *this;
	}
} dbg;
 
void debugarr(int * arr,int n)
{
	cout<<"[";
	for(int i=0;i<n;i++) cout<<arr[i]<<" ";
	cout<<"]"<<endl;
}

/* ------------------------Main Code----------------------- */
const int MAX = 502, INF = 1<<29;

int arr[MAX][MAX], memo[MAX][MAX];
int n, m, T;

int solve(int i, int j)
{
	//printf("%d %d\n",i,j);
	if(i == 1) return arr[i][j];
	if(j == 0 || j == m+1) return INF;
	int& res = memo[i][j];
	if(res != INF) return res;
	return res = arr[i][j] + min(min(solve(i-1,j-1),solve(i-1,j)),solve(i-1,j+1));
}

int main()
{
	int t;
	S(t);
	while(t--){
		S(T);
		S(n); S(m);
		rep(i,1,n+1){
			rep(j,1,m+1){
				S(arr[i][j]);
				memo[i][j] = INF;
			}
		}
		
		int mn = INF;
		//solve(n,1);
		rep(i,1,m+1){
			mn = min(mn,solve(n,i));
			//printf("%d\n",mn);
		}
		if(mn < T) printf("YES\n");
		else printf("NO\n");
	}
	return 0;
}