#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include<cstring>
#include<string>

using namespace std;

#define LL long long int
#define FOR(i,a,b) for(int i= (int)a; i<= (int)b; i++)
#define print() printf("Just Print It\n");
#define gc getchar_unlocked
#define po(v) printf("%lld\n",v);
#define si(i) scanf("%d",&i);

void sint(int &x)
{
	register int c = gc();
	x = 0;
	for(;(c<48 || c>57);c = gc());
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
int st[4000100]={0},Count[4000100];
int main()
{
	int N,i,left,K,stp,edp,A[100010],fav[100010],ts=0,T;
	LL tot;
	si(T);
	while(T--){
	++ts; tot=0;
	si(N);
	FOR(i,1,N) si(A[i]);
	si(K);
	FOR(i,1,K) {si(fav[i]); st[fav[i]+2000000]=ts; Count[fav[i]+2000000]=0;}
	stp=1; edp=1;
	left=K;
	while( stp<=N && edp<=N)
	{
		if( st[A[edp]+2000000]==ts )
		{
			if( Count[A[edp]+2000000]==0 ) left--;
			Count[A[edp]+2000000]++;
			while(left==0)
			{
				tot += N-edp+1;
				if( st[A[stp]+2000000]==ts )
				{
					Count[A[stp]+2000000]--;
					if(Count[A[stp]+2000000]==0)left++;
				}
				stp++;
			}
		}
		edp++;
	}
	po(tot);
	}
	return 0;
}
