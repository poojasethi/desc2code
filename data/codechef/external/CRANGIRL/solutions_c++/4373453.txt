     #include<stdio.h>
    #include<string.h>
    #include<stdlib.h>
    #define ps() printf(" ")
     
    int vals[1000001],lps[1000001],num=1;
    char str1[1000001], str2[1000001];
     
    void computeLPS(char *pat, int M, int *lps);
    void Search(char *pat, char *txt)
    {
    int M = strlen(pat);
    int N = strlen(txt);
     
    int j = 0;
     
    computeLPS(pat, M, lps);
    int i = 0;
    while(i < N)
    {
    if(pat[j] == txt[i])
    {
    j++;
    i++;
    }
    if (j == M)
    {
    vals[num++] = i-j;
    j = lps[j-1];
    }
     
    else if(pat[j] != txt[i])
    {
     
    if(j != 0)
    j = lps[j-1];
    else
    i = i+1;
    }
    }
    }
    void computeLPS(char *pat, int M, int *lps)
    {
    int len = 0;
    int i;
    lps[0] = 0;
    i = 1;
     
    while(i < M)
    {
    if(pat[i] == pat[len])
    {
    len++;
    lps[i] = len;
    i++;
    }
    else
    {
    if( len != 0 )
    {
     
    len = lps[len-1];
     
    }
    else
    {
    lps[i] = 0;
    i++;
    }
    }
    }
    }
    #define pc putchar_unlocked
    void printint(int n)
    {
    char op[41];
    int size = 40;
    while(n)
    {
    op[size--] = n%10+'0';
    n/=10;
    }
    for(int i=size+1;i<41;i++)
    pc(op[i]);
     
    }
    int main()
    {
    scanf("%s %s", str1, str2);
    Search(str2, str1);
    int prev = 0;
    int len = strlen(str2);
    for(int i = num - 2; i >= 0; --i)
    if(vals[i + 1] - vals[i] == len)
    prev++;
    else
    {
    printint(vals[i + 1] + 1);
    ps();
    printint(prev + 1);
    pc('\n');
    prev = 0;
    }
    if(num==1)
    printf("-1\n");
    return 0;
    } 