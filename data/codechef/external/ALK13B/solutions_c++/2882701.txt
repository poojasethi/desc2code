/*
 *Kartik Singal @ ka4tik
 */
#include<bits/stdc++.h>
using namespace std;
#define s(n) scanf("%d",&n);
#define db(x) cerr << #x << ": " << x << endl;
#define db2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define db3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;
#define db4(a, b, c, d) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << endl;
#define db5(a, b, c, d, e) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << endl;
#define db6(a, b, c, d, e, f) cerr << #a << ": " << a << " | " << #b << ": " << b << " | " << #c << ": " << c << " | " << #d << ": " << d << " | " << #e << ": " << e << " | " << #f << ": " << f << endl;
#define MAXN 11111
vector<int> pos;
int dp[11000];
bool done[11000];
int turn=0;
int fibg(int n,int m)
{
    //for(int i=0;i<=n;i++)
    //done[i]=0;
    pos.clear();
    pos.push_back(1);
    pos.push_back(m);

    while(pos.back()<n)
        pos.push_back(pos[pos.size()-1]+pos[pos.size()-2]);

    dp[0]=0;
    vector<int> v(100,0);

    for(int i=1;i<=n;i++)
    {
        turn++;
        //for(int j=0;j<30;j++) v[j]=0;
        for(int j=0;pos[j]<=i;j++)
        {
            v[dp[i-pos[j]]]=turn;
        }
        for(int j=0;j<v.size();j++)
        {
            if(v[j]!=turn)
            {
                dp[i]=j;
                break;
            }
        }
    }
    return dp[n];


}

int main()
{
    //freopen("in","r",stdin);

    int N,test;s(test);
    while(test--)
    {
        int ans=0;
        s(N);
        for(int i=0;i<N;i++)
        {
            int n,m;
            s(n);s(m);
            int a=fibg(n,m);
            ans^=a;
        }
        if(ans)
            puts("Jack");
        else
            puts("Angelica");
    }

    return 0;
}

