#include <iostream>
#include <cstring>
#include <vector>
#include <queue>
#include <cmath>
#include <string>

using namespace std;

struct node{
	int x,y,num;
	string seq;
	
	bool operator < (node X)const{
         return num > X.num;
    }
	
};


bool validNode(node n){
	if(n.x+n.y <= 200 && n.x+n.y > 0) return true;
	return false;	
}

bool visited[201][201];

int main(){
	int T;
	node st,sd;
	int a;
	cin>>T;
	
	
	while(T--){
	cin>>a;
	string ans = "-1";
	if(a%5 == 0) {
		cout<<ans<<endl;
		continue;
	}
	st.x = 1; st.y = 0;st.num = 8%a;st.seq = "8";
	sd.x = 0; sd.y = 1;sd.num = 6%a;sd.seq = "6";
	
	priority_queue<node> Q;
    Q.push(st);
    Q.push(sd);
    memset(visited,false,sizeof(visited));
        
    
    node aux;
    while(!Q.empty()){
		aux = Q.top();
		Q.pop();
		
		if(visited[aux.x][aux.y]) continue;
		visited[aux.x][aux.y] = true;
        
        int anum = aux.num;
        
		if( anum == 0){
			ans = aux.seq;
			break;
		}

		node n1,n2;
		n1.x = aux.x+1;n1.y = aux.y;n1.num = fmod((aux.num % a)+ fmod(8*pow(10,aux.x+aux.y),a),a);n1.seq = "8"+aux.seq;
		n2.x = aux.x;n2.y = aux.y+1;n2.num = (((aux.num)*(10))%a + 6%a)%a;n2.seq = aux.seq+"6";
		
		
		if(validNode(n1))Q.push(n1);
		if(validNode(n2))Q.push(n2);
	}	
	
	cout<<ans<<endl;	
	
}
	return 0;
}
