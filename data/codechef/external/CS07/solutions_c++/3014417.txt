/**
  * @link http://www.codechef.com/problems/CS07
  * @author Axay
  */

#include <stdio.h>

class sq{
	int n;
	int x, y, xlimit, ylimit, xdir, ydir, xy;
	char tex[1001][1001];

public:
	void set(int dim){
		n = dim;
	}

	int read(){
		int i = 0;
		while((i <= n) && (scanf("%s", tex[i])) != -1){
			++i;
		}
		return i - 1;
	}

	void spin(int deg){
		switch (deg){
			case 0:	//Normal
				x = 0;
				xlimit = n - 1;
				xdir = 1;
				y = 0;
				ylimit = n - 1;
				ydir = 1;
				xy = 1;
				break;
			case 1:	//Clockwise
				x = n - 1;
				xlimit = 0;
				xdir = -1;
				y = 0;
				ylimit = n - 1;
				ydir = 1;
				xy = 0;
				break;
			case 2:	//Counterclockwise
				x = 0;
				xlimit = n - 1;
				xdir = 1;
				y = n - 1;
				ylimit = 0;
				ydir = -1;
				xy = 0;
				break;
			case 3:	//180
				x = n - 1;
				xlimit = 0;
				xdir = -1;
				y = n - 1;
				ylimit = 0;
				ydir = -1;
				xy = 1;
				break;
		}
	}

	void flip(int dir){
		switch (dir){
			case 0:	//Normal
				x = 0;
				xlimit = n - 1;
				xdir = 1;
				y = 0;
				ylimit = n - 1;
				ydir = 1;
				xy = 1;
				break;
			case 1:	//Vertical
				x = n - 1;
				xlimit = 0;
				xdir = -1;
				y = 0;
				ylimit = n - 1;
				ydir = 1;
				xy = 1;
				break;
			case 2:	//Horizontal
				x = 0;
				xlimit = n - 1;
				xdir = 1;
				y = n - 1;
				ylimit = 0;
				ydir = -1;
				xy = 1;
				break;
			case 3:	//Both
				x = n - 1;
				xlimit = 0;
				xdir = -1;
				y = n - 1;
				ylimit = 0;
				ydir = -1;
				xy = 1;
				break;
		}
	}

	void inc(){
		if(xy){
			if(x != xlimit)
				x += xdir;
			else{
				if(xlimit)
					x = 0;
				else
					x = n - 1;
				if(y != ylimit)
					y += ydir;
				else{
					if(ylimit)
						y = 0;
					else
						y = n - 1;
				}
			}
		}
		else{
			if(y != ylimit)
				y += ydir;
			else{
				if(ylimit)
					y = 0;
				else
					y = n - 1;
				if(x != xlimit)
					x += xdir;
				else{
					if(xlimit)
						x = 0;
					else
						x = n - 1;
				}
			}
		}
	}

	char data(){
		return tex[y][x];
	}

};

int main(int argc, char* argv[]){
	int n, i, j, flip, spin, more, match, count;
	sq original, temp;

	scanf("%d", &n);
	original.set(n);
	temp.set(n);

	more = original.read();
	count = 1;

	more = temp.read();
	while(more != -1){
		match = 0;
		for(flip = 0; flip < 4; ++flip){
			for(spin = 0; (spin < 4) && !match; ++spin){
				original.flip(flip);
				temp.spin(spin);
				match = 1;
				for(i = 0; i < n; ++i){
					for(j = 0; (j < n) && match; ++j){
						if(original.data() != temp.data())
							match = 0;
						original.inc();
						temp.inc();
					}
				}
			}
		}
		++count;
		if(match)
			printf("Square %d is identical to square 1.\n", count);
		else
			printf("Square %d is distinct from square 1.\n", count);
		more = temp.read();
	}

	return 0;
}
