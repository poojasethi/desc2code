
//**************************************************template*****************************************/
//#pragma comment(linker, "/STACK:16777216")
#include<bits/stdc++.h>

using namespace std;
typedef long long int ll;
const ll MOD=1000000007;

#define FOR(i,a,b) for(i=(a);i<(b);i++)
#define ROF(i,a,b) for(i=(a);i>=(b);i--)
#define s(x)                    scanf("%d",&x);
#define sl(x)                   scanf("%lld",&x);
#define p(x)                    printf("%d\n",x);
#define pl(x)                   printf("%lld\n",x);
#define pi 3.14159265358979323846  //float type
#define MAX 100000  //for rmq
#define SQRTMAX 317   //for rmq
//#define gc getchar_unlocked
#define INF                 999999999999999999

/*#define swap(x,y) do \
   { unsigned char swap_temp[sizeof(x) == sizeof(y) ? (signed)sizeof(x) : -1]; \
     memcpy(swap_temp,&y,sizeof(x)); \
     memcpy(&y,&x,       sizeof(x)); \
     memcpy(&x,swap_temp,sizeof(x)); \
    } while(0)

inline int r()
{
    int n=0;
    char c=gc();
    while(c<'0'||c>'9')c=gc();
    while(c>='0'&&c<='9')
    {
        n=n*10+c-'0';
        c=gc();
    }
    return n;
}

 inline void write(ll x){

         register char buffor[35];
         register int i=0;
         do{
               buffor[i++]=(x%10)+'0';
               x/=10;
            } while(x);
           i--;
            while(i>=0) putchar_unlocked(buffor[i--]);
            putchar_unlocked('\n');
       }
       */
#define 	SZ(A) 		((int)A.size())
#define 	LEN(A) 		((int)A.length())
#define 	MS(A) 		memset(A, 0, sizeof(A))
#define 	MSV(A,a) 	memset(A, a, sizeof(A))
#define 	mp(x,y)		make_pair((x),(y))
#define 	pb(x) 		push_back(x)
#define		F 			first
#define 	S 			second

#define 	EPS 		1e-12

#define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
#define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
#define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
#define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl;
#define trace5(a,b,c,d,e)   cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<endl;
#define trace6(a,b,c,d,e,f) cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<" | "#e" = "<<e<<" | "#f" = "<<f<<endl;



#define 	chkbit(s, b) 	(s & (1<<b))
#define 	setbit(s, b) 	(s |= (1<<b))
#define 	clrbit(s, b) 	(s &= ~(1<<b))

//#define 	swap(x,y)  		{x=x+y-(y=x);}
#define 	FOUND(A, x) 	(A.find(x) != A.end())





 ll power(ll a, ll b, ll m) {
    ll r = 1;
    while(b) {
        if(b & 1) r = r * a % m;
        a = (a * a)% m;
        b >>= 1;
    }
    return r;
}
 ll power(ll a, ll b) {
     ll r = 1;
    while(b) {
        if(b & 1) r = r * a ;
        a = a * a;
        b >>= 1;
    }
    return r;
}

ll gcd(ll a,ll b){
      return b==0?a:gcd(b,a%b);
}
 //......long long int
ll lcm(ll a,ll b){
      return (a/gcd(a,b))*b;
}
 //......long long int with mod
ll modularInverse(ll a,ll m){
      return power(a,m-2,m);


}

int ceill(int a,int b)
{
    return ((a+b-1)/b);
}

 int mini(int a,int b) { return a<b? a : b; }
 ll maxi(ll a,ll b) { return a>b? a : b; }


typedef long long ll;
typedef unsigned long long ull;

typedef vector<int> VI;
typedef pair<int, int> II;
typedef vector<long long> VLL;
typedef vector<bool> VB;


/*........................................................END OF TEMPLATES...................................................................
....*/

#define N 1005

ll a[N][N];
ll dp[N][N],dp1[N][N],mark[N][N];

int cas=0;
int main()
{ ll i,j,k,t,n,te,p,m;
    t=1;
  //  #ifndef ONLINE_JUDGE
    // freopen("1.txt","r",stdin);
    //  freopen("2.txt","w",stdout);
   // #endif
    //s(t)

    while(t--)
    {  //cas++;
        sl(n)
        sl(m)
        sl(p)
        //dp[]
        FOR(i,0,n)
        {
            FOR(j,0,m)
            sl(a[i][j]);
        }
        dp[0][0]=a[0][0];
        FOR(i,1,n)
        dp[i][0]=dp[i-1][0]+a[i][0],mark[i][0]=1;// 1 means up

        FOR(i,1,m)
        dp[0][i]=dp[0][i-1]+a[0][i],mark[0][i]=2;

        FOR(i,1,n)
        FOR(j,1,m)
        dp[i][j]=maxi(dp[i-1][j],dp[i][j-1])+a[i][j],mark[i][j]=(dp[i-1][j]>dp[i][j-1])?1:2;


        // piche se
         dp1[n-1][m-1]=a[n-1][m-1];
        ROF(i,n-2,0)
        dp1[i][m-1]=dp1[i+1][m-1]+a[i][m-1];//1 means down

         ROF(i,m-2,0)
        dp1[n-1][i]=dp1[n-1][i+1]+a[n-1][i];

        ROF(i,n-2,0)
        ROF(j,m-2,0)
        dp1[i][j]=maxi(dp1[i+1][j],dp1[i][j+1])+a[i][j];

        ll ans=dp[n-1][m-1];

        FOR(i,0,n)
        {
            FOR(j,0,m)
            {  //trace4(i,j,dp[i][j],dp1[i][j])
                // trace3(i,j,mark[i][j])
               if(i-1>=0)
               {

                  if(mark[i][j]==1)
                  {



                  if(j+1<m)
                  ans=maxi(ans,dp[i][j]-p+dp1[i-1][j+1]);


                    //ans=max(ans,dp[n-1][m-1]-p+a[i-1][j]);
                  }

                  if(mark[i][j]==2 )
                  {


                  if(j+1<m)
                     ans=maxi(ans,dp[i][j]-p+dp1[i-1][j+1]+a[i-1][j]);

                  // ans=max(ans,dp[i][j]-p+dp1[i-1][j]);
                   ans=maxi(ans,dp[i][j]-p+a[i-1][j]+dp1[i][j]-a[i][j]);
                  }
               }

               if(j-1>=0)
               {    if(mark[i][j]==1 )
               {
                   ans=maxi(ans,dp[i][j]-p+a[i][j-1]+dp1[i][j]-a[i][j]);

                  if(i+1<n)
                    ans=maxi(ans,dp[i][j]-p+dp1[i+1][j-1]+a[i][j-1]);
               }





                  if(mark[i][j]==2 )
                  {
                      if(i+1<n)
                   ans=maxi(ans,dp[i][j]-p+dp1[i+1][j-1]);

                   // ans=max(ans,dp[n-1][m-1]-p+a[i][j-1]);


                  }


               }
              // trace3(i,j,ans)
            }
        }

        pl(ans)

       //printf("Case #%d: %d\n",cas,ans);
    }



    return 0;
}
