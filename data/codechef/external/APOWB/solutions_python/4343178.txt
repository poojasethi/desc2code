#include<stdio.h>
#include<math.h>

long long pow1(long long n, int a){
	long long res = 1;
	while(a--) res *= n;
	return res;
}

int is_nth_power(long long a, int n) {
  /*if(n <= 0)
    return 0;
  if(a < 0 && n % 2 == 0)
    return 0;
  a = abs(a);*/
  long long b = pow(a, 1.0/ n);
  return pow1(b, n) == a || pow1((b+1), n) == a;
}

int isForm(long long n, long long a){
	int i;
	long long pow=1;
	for(i=0;pow<n;i++){
		pow *= a;
	}
	if(pow == n) return 1;
	else return 0;
}

int main(){
	int T;
	int j;
	int flag;
	scanf("%d",&T);

	while(T--){
		flag = 0;
		long long unsigned a,i;
		scanf("%llu",&a);

		if(is_nth_power(a,2)){
			printf("YES\n");
			continue;
		}
		else if(is_nth_power(a,3)){
			printf("YES\n");
			continue;
		}
		else if(is_nth_power(a,5)){
			printf("YES\n");
			continue;
		}
		else if(is_nth_power(a,7)){
			printf("YES\n");
			continue;
		}
		else if(is_nth_power(a,11)){
			printf("YES\n");
			continue;
		}
		else if(is_nth_power(a,13)){
			printf("YES\n");
			continue;
		}

		int ca = ceil(pow(a,1.0/13));

		for(i=2;i<ca;i++){
			if(isForm(a,i)){
				printf("YES\n");
				flag++;
				break;
			}
		}
		if(a == 4) printf("YES\n");
		else if(!flag) printf("NO\n");
	}
}
