#include <bits/stdc++.h>
#define gcd			__gcd
#define bitcount 	__builtin_popcount
#define getcx		getchar_unlocked
#define putcx		putchar_unlocked
#define rep(i,j,n)	for(i=j;i<n;i++)
#define mod			1000000007
using namespace std;
using pi=pair<int,int>;
typedef long long ll;
typedef ll int64;
extern "C" int getch();

template <class T> inline static T& get(T &n){
	static int p;
	static bool f;
	f=false;
	n = 0;
	do{
		p=getcx();
	}while( !isdigit(p) && p!='-');
	if(p=='-'){
		f=true;
		p=getcx();
	}
	while ( isdigit(p) ){
		n = (n << 3) + (n << 1) + (p - '0');
		p = getcx();
	}
	n = (f ? -n : n);
	return n;
}

unordered_set<ll> s;
ll aa[1000000],bb[1000000],*a=aa,*b=bb;
int size;
void precompute() {
	//cout<<"Here"<<endl;
	static int i, j;
	{ //for 3
		//cout<<"Here too"<<endl;
		size = pow(1e16, 1.0 /3) + 2;
		for (i = 0; i < size; i++) {
			a[i] = ll(i) * i * i;
			//cout<<a[i]<<endl;
			s.insert(a[i]);
		}
	}
	b=a;
	for (j = 4; j < 54; j++) {
		size = !(16 % j) ? pow(10, 16 / j) + 2 : pow(1e16, 1.0 / j) + 2;
		for (i = 0; i < size ; i++) {
			a[i] = b[i] * i;
			s.insert(a[i]);
		}
		swap(a,b);
	}
}

int main(){
	static ll T,N,i;
	precompute();
	get(T);
	while(T--){
		get(N);
		i=sqrt(N);
		if(i!=1 &&( i*i==N || s.find(N)!=s.end() ) ){
			printf("YES\n");
		}
		else{
			printf("NO\n");
		}
	}
	return 0;
}

