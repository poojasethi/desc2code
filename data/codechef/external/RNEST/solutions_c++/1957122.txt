#include<cstdio>
#include<iostream>
#include<cstring>
#include<vector>
#include<memory.h>
#include<cstdlib>
#include<cmath>
#include<cassert>
#include<memory.h>
#include<algorithm>
#include<queue>
#include<map>
using namespace std;

typedef pair<int, int>PII;

#define mp make_pair
#define fi first
#define se second

priority_queue<PII>west;
priority_queue<PII>east;
map<int, int>sweep;
map<int, int>::iterator it;

int N;
int room[100005][4], parent[100005];

void solve()
{
    int n;

    scanf("%d", &N);
    for(int i=0; i<N; i++)
    {
        scanf("%d%d%d%d", &room[i][0], &room[i][1], &room[i][2], &room[i][3]);
        west.push(mp(-room[i][0], i));
        east.push(mp(-room[i][2], i));
    }
    while(!east.empty())
    {
        if(west.empty() || east.top()>= west.top())
        {
          n= east.top().se;
          east.pop();
          sweep.erase(room[n][1]);
          sweep.erase(room[n][3]);
        }
        else
        {
          n = west.top().se;
          west.pop();
          it = sweep.lower_bound(room[n][1]);

          if(it == sweep.end())
          {
              parent[n] = -1;
          }
          else
          {
              parent[n] = it->se;
          }
          sweep[room[n][1]] = parent[n];
          sweep[room[n][3]] = n;

        }
    }
    for(int i=0; i<N; i++)
    {
        printf("%d\n", parent[i]);
    }

}

int main()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    #endif
    solve();

}
