
//~        Author : Sarvesh Mahajan                             
//               IIIT,Hyderabad                                   
//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
#ifndef ONLINE_JUDGE
//#define DEBUG
#endif

#include<bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define clr(x) x.clear()
#define For(i,a,b) for(i=a;i<b;i++)
#define loop(i,b) for(i=0;i<b;i++)
#define Loop(i,b) for(i=1;i<=b;i++)
#define pi(n) printf("%d ",n)
#define si(n) scanf("%d",&n)
const int MOD=1e9+7;
typedef pair<int,int> PII;
typedef vector<PII> VPII;
typedef vector<int> VI;
typedef long long LL;
#define F first
#define S second
#define sz size
#define pLL(x) cout<<x<<' '
#define fill(x,c) memset(x,c,sizeof(x))
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#ifdef DEBUG
#define DB(x)              cout<<__LINE__<<" :: "<<#x<< ": "<<x<<endl;
#define DB2(x, y)          cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<endl;
#define DB3(x, y, z)       cout<<__LINE__<<" :: "<<#x<< ": "<<x<<" | "<<#y<< ": "<<y<<" | "<<#z<<": "<<z<<endl;
#else
#define DB(x)
#define DB2(x,y)
#define DB3(x,y,z)
#endif
const int inf=1e9+5;
const int N=1e5+5;
int parent[N];

typedef struct point
{
	int x,y;
	int id;
	bool type;  // 0 -> opening ,1 -> closing

	void print()
	{
		DB(x);
		DB(y);
		DB(id);
		DB(type);
	}
	
}point;
bool mycompare(point A,point B)
{
	return (A.x<B.x);
	
}
struct compare2
{

bool operator()(point A,point B)
{
	return A.y<B.y;
}
};


set<PII> ls;
pair<point,point> points[N];
vector<point> event;
int pts[5];
void add(point A)
{
	// search for y in ls
	int y=A.y;                        //lower
	int othery=points[A.id].S.y;      //upper

	int currentId=A.id;
	set<PII>:: iterator it=ls.upper_bound(mp(y,0));
	it--;
	PII val=*(it);

	//1st point whose y-co < y
	int ans=val.F;
	int id=val.S;

	//int ans=points[id].S.y;   //find other end

	if(ans == points[id].F.y)      // above
		parent[A.id]=id;
	else
		parent[A.id]=parent[id];
	ls.insert(mp(y,currentId));
	ls.insert(mp(othery,currentId));
}

void rem(point A)
{
	PII current=mp(A.y,A.id);
	ls.erase(current);
	point otherEnd=points[A.id].F;
        PII other=mp(otherEnd.y,A.id);
	//A.print();
	//otherEnd.print();

	ls.erase(other);
}





void process(point A)
{


        if(A.type == 0)
	add(A);                          // opening point
	else
		//remove current points other end
	rem(A);

}

int main()
{
//ios_base::sync_with_stdio(false);
int n,t,m,l,k,ans,i,j,res=0,fl;
t=1;
//si(t);
while(t--)
{
	si(n);
	point A;
	A.x=-inf;A.y=-inf;A.id=0;A.type=0;
	event.pb(A);
	points[0].F=A;	A.x*=-1;A.y*=-1;A.type=1;
	event.pb(A);
	points[0].S=A;


	Loop(i,n)
	{
		loop(j,4)
			si(pts[j]);
		A.id=i;
		A.x=pts[0];
		A.y=pts[1];
		A.type=0;
	        event.pb(A);
		points[i].F=A;

		A.x=pts[2];
		A.y=pts[3];
		A.type=1;
	        event.pb(A);
		points[i].S=A;

	}

//	Loop(i,n)
//		points[i].F.print();

	sort(event.begin(),event.end(),mycompare);


	l=event.sz();
	ls.insert(mp(event[0].y,event[0].id));
	ls.insert(mp(event[l-1].y,event[l-1].id));
		
	for(i=1;i<l-1;++i)
	{
//		if(i == 1)
//		{
		//event[i].print();
		DB(ls.sz());
		process(event[i]);
	//	}
	}

	Loop(i,n)
	{
		pi(parent[i]-1);puts("");
	}
	








}
return 0;
}
