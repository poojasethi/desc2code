/*
 *Kartik Singal @ ka4tik
 */
#include<bits/stdc++.h>
using namespace std;
#define s(n) scanf("%d",&n);
#define db(x) cout<<#x<<" : "<<x<<endl;
#define db2(x,y) cout<<#x<<" : "<<x<<" "<<#y<<" : "<<y<<endl;
#define db3(x,y,z) cout<<#x<<" : "<<x<<" "<<#y<<" : "<<y<<" "<<#z<<" : "<<z<<endl;
struct event{
    int i,x,y0,y1;
    int type;
    int up;
    event(int _i,int _x,int _y0,int _y1,int _type):i(_i),x(_x),y0(_y0),y1(_y1),type(_type)
    {
    }
};
bool cmp(event a,event b)
{
    return a.x<b.x;
}
struct compare_y{
    bool operator()(const event &a,const event &b)
    {
        return a.y0<b.y0;
    }
};
int main()
{
    //freopen("in","r",stdin);
    //freopen("out","w",stdout);

    int N;
    s(N);
    int x1,y1,x2,y2;
    vector<event> e;
    for(int i=0;i<N;i++)
    {
        s(x1);s(y1);s(x2);s(y2);
        e.push_back(event(i,x1,y1,y2,1));
        e.push_back(event(i,x2,y1,y2,-1));
    }
    e.push_back(event(-1,INT_MIN,INT_MIN,INT_MAX,1));
    e.push_back(event(-1,INT_MAX,INT_MIN,INT_MAX,-1));

    sort(e.begin(),e.end(),cmp);
    set<event,compare_y> se;
    vector<int> ans(N,0);
    vector<event> prev(N,event(0,0,0,0,0));

    for(int i=0;i<e.size()-1;i++)
    {
        //db(e[i].i);
        //db(e[i].type);
        //db(e[i].x);
        //db(e[i].y0);
        //db(e[i].y1);
        //cout<<endl;

        if(e[i].type==1)
        {
            if(e[i].i!=-1)
                prev[e[i].i]=e[i];
            if(e[i].i!=-1){
                set<event,compare_y>::iterator it=se.lower_bound(e[i]);
                it--;
                if(it->up)
                    ans[e[i].i]=ans[it->i];
                else
                    ans[e[i].i]=it->i;
            }
            e[i].up=0;
            se.insert(e[i]);
            e[i].up=1;
            swap(e[i].y0,e[i].y1);
            se.insert(e[i]);
        }
        else
        {
            event p=prev[e[i].i];
            p.up=0;
            se.erase(p);
            p.up=1;
            swap(p.y0,p.y1);
            se.erase(p);
        }
        //db(e[i].i);
        //db(e[i].type);
    }
    for(int i=0;i<N;i++)
    {
        printf("%d\n",ans[i]);
    }
    return 0;
}

