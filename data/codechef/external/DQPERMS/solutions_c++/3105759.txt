#include <bits/stdc++.h>







using namespace std;






#define fr(i,a,b) for(int i=a;i<b;++i)

typedef long long ll;
typedef pair<int,int> pii;
#define F first
#define S second
#define mp make_pair
const int mod = 1000000007;




struct S{
	int p,q1,q2,qu;
	S(){}
	S(int P, int Q1, int Q2, int QU){p = P, q1 = Q1, q2 = Q2, qu = QU; }
	bool operator <(const struct S &lhs) const{
		return p < lhs.p;
	}
};



set<S> s;

int t,n,a,b;


int aj(int x){
	while(x > mod) x -= mod;
	while(x < 0) x += mod;
	return x;
}



int fex(int B, int e){
	ll r = 1LL, b = B;
	if(e < 0) return 0;
	while(e){
		if(e&1) r = (r*b)%mod;
		b = (b*b) % mod;
		e >>= 1;
	}
	return r;
}


int set1(int a, int b){
	return aj(fex(2,n-a) - fex(2,n-b-1));
}



pii calc(S a, S b){
	if(a.qu <= n/2) a.q1--;
	else a.q2--;
	if(b.qu <= n/2) b.q1--;
	else b.q2--;
	int tam = b.p - a.p;
	int q2 = b.q2 - a.q2;
	if(a.qu > n/2) q2--;
	if(q2 == 0){
		return mp((b.qu > n/2 ? set1(b.p,b.p) : 0),(b.qu > n/2 ? set1(b.p,b.p) : 0));
	}
	if(a.p == 0 && b.p == n/2+1){
		return mp(0,set1(1,n/2));
	}
	if(b.p == n/2+1){
		b.p = n/2;
		if(a.p >= b.p) return mp(0,0);
		return mp(0,set1(a.p+1,b.p));
	}
	if(a.p >= b.p) return mp(0,0);
	return mp(aj(set1(b.p-q2,b.p-1) + (b.qu > n/2 ? set1(b.p,b.p) : 0)),aj(set1(a.p+1,a.p+q2) + (b.qu > n/2 ? set1(b.p,b.p) : 0)));
}











int main(){
	scanf("%d",&t);
	fr(cas,1,t+1){
		bool imp = false;
		scanf("%d",&n);
		int r1 = 0, r2 = fex(2,n-1) - 1;
		s.clear();
		s.insert(S(0,0,0,-1));
		s.insert(S(n/2+1,n/2,n-n/2,-1));
		fr(i,0,n/2){
			scanf("%d %d",&a,&b);
			int q1n, q2n;
			if(b <= n/2){
				q1n = b-1;
				q2n = a-1-q1n;
				if(q2n < 0) imp = true;
				q1n++;
			}
			else{
				q2n = n-b;
				q1n = a-1-q2n;
				if(q1n < 0) imp = true;
				q2n++;
			}
			if(imp) printf("-1\n");
			else{
			//	printf(">(%d %d) (%d %d)\n",q1n,q2n,r1,r2);
				set<S>::iterator it = s.insert(S(a,q1n,q2n,b)).first, it2, it3;
				it2 = it;
				it3 = it;
				it2--;
				it3++;
				if(it2->q1 > it->q1 || it2->q2 > it->q2) imp = true;
				else if(it->q1 > it3->q1 || it->q2 > it3->q2) imp = true;
				if(imp) printf("-1\n");
				else{
					pii aux = calc(*it2,*it3);
					//printf(">%d %d\n",aux.F,aux.S);
					r1 -= aux.F, r2 -= aux.S;
					r1 = aj(r1);
					r2 = aj(r2);
					aux = calc(*it,*it3);
					//printf(">%d %d\n",aux.F,aux.S);
					r1 += aux.F, r2 += aux.S;
					r1 = aj(r1);
					r2 = aj(r2);
					aux = calc(*it2,*it);
					//printf(">%d %d\n",aux.F,aux.S);
					r1 += aux.F, r2 += aux.S;
					r1 = aj(r1);
					r2 = aj(r2);
					printf("%d %d\n",r1,r2);
				}
			}
		}
	}
	return 0;
}





























