//{ /* theCodeGame */ lesson learnt A mod B is different in case of negative, just take care :P
#include<iostream>
#include<cmath>
#include<algorithm>
#include<climits>
#include<vector>
#include<queue>
#include<bitset>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<ctime>
#include<map>
using namespace std;
#define MOD 1000000007LL
#define LL long long
#define ULL unsigned long long
#define LD long double
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define ABS(x)   ((x)<0?-(x):(x))
#define SQR(x) ((x)*(x))
#define CUBE(x) ((x)*(x)*(x))
#define si(n) scanf("%d",&n)
#define si2(n,m) scanf("%d %d",&n,&m)
#define sf(n) scanf("%f",&n)
#define sl(n) scanf("%ld",&n)
#define sll(n) scanf("%lld",&n)
#define slu(n) scanf("%llu",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define pnl printf("\n")
#define REP(i,n) for(int i=0;i<(n);i++)
#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define FORR(i,n,e) for(int i=(n);i>=(e);i--)
#define FORD(i,a,b,d) for(int i=(a);i<(b);i+=(d))
#define FORRD(i,n,e,d) for(int i=(n);i>=(e);i-=(d))

//#undef mydebug
#ifdef mydebug
#define DB(x) cout<<#x<<"="<<(x)<<"\n"
#define DB2(x,y) cout<<#x<<"="<<(x)<<"\t"<<#y<<"="<<(y)<<"\n"
#define DB3(x,y,z) cout<<#x<<"="<<(x)<<"\t"<<#y<<"="<<(y)<<"\t"<<#z<<"="<<(z)<<"\n"
#define DB4(x,y,z,a) cout<<#x<<"="<<(x)<<"\t"<<#y<<"="<<(y)<<"\t"<<#z<<"="<<(z)<<"\t"<<#a<<"="<<(a)<<"\n"
#define pnld pnl;
#else
#define DB(x)
#define DB2(x,y)
#define DB3(x,y,z)
#define DB4(x,y,z,a)
#define pnld
#endif
#define FILL(a,b) memset(a,b,sizeof(a))
const double PI=3.14159265358979323846264338327950288419716939937510582097494459230;
//template <class T>void swap(T &x,T &y){T t;t=x;x=y;y=t;}
void DBG_ARR(const int A[],int S,int N){cout<<"[";FOR(i,S,N){cout<<A[i]<<" ";}cout<<"]\n";}
void swaps (char &x,char &y){char t;t=x;x=y;y=t;}void swapi(int &a,int &b){int t;t=a;a=b;b=t;}
ULL gcd(ULL a,ULL b){if(a==0)return b;if(b==0)return a;if(a==1||b==1)return 1;if(a==b)return a;if(a>b)return gcd(b,a%b);else return gcd(a,b%a);}
//}
#define PMOD 23102009
#define size 1010
char A[size];
char B[size];
int ANS[size][size];//for main LCS
int M,N;


void precompute(){}
void LCS(){
    FOR(i,0,M+1){
        FOR(j,0,N+1){
            if(i==0||j==0){
                ANS[i][j]=0;
            }else{
                if(A[i-1]==B[j-1]){
                    ANS[i][j]=1+ANS[i-1][j-1];
                }else{
                    ANS[i][j]=MAX(ANS[i][j-1],ANS[i-1][j]);
                }
            }
        }
    }
    if(ANS[M][N]<=1){
        puts("None");
        return;
    }
    vector<char>LCSs;
    int i=M,j=N,count=0;
    LCSs.empty();
    while(i!=0&&j!=0){
        if(A[i-1]==B[j-1]){
            LCSs.push_back(A[i-1]);
            count++;
            i--;
            j--;
        }else{
            if(ANS[i-1][j]>ANS[i][j-1])
                i--;
            else
                j--;
        }
    }
   // continue;
   FOR(i,0,count){
       cout<<LCSs[i];
   }
   pnl;
}
void doThis(){
    while(ss(A)!=EOF){
        FILL(B,'\0');
        FILL(ANS,0);
        //ss(B);
        M=strlen(A);
        N=M;
        B[M]='\0';
        FOR(i,0,M){
            B[i]=A[M-i-1];
        }
       // DB2(A,B);
        LCS();
    }


}

int main(){
#ifdef amy
freopen("C:\\A\\in.txt","r",stdin);freopen("C:\\A\\out.txt","w",stdout);freopen("C:\\A\\err.txt", "w", stderr);
#endif
precompute();
int t=1;
//scanf("%d",&t);
while(t--){doThis();}
#ifdef amy
fprintf(stdout,"\nTIME: %.3lf sec\n", (double)clock()/(CLOCKS_PER_SEC));
#endif
return 0;
}
