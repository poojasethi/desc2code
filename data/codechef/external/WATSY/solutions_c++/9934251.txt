#include <bits/stdc++.h>
using namespace std;

const int N = 1e6 + 5;

long long bit[N];
long long a[N];
long long ans[N];
long long b[N];
long long cnt[N] , val[N] , mnt[N];
int mtp[N];
int n;
void update(int idx , int val)
{
    while(idx <= n){
        bit[idx] += val;
        idx += idx & -idx;
    }
}

long long query(int idx)
{
    long long ret = 0;
    while(idx){
        ret += bit[idx];
        idx -= idx & -idx;
    }
    return ret;
}
void make(){
    memset(mtp , 0 , sizeof mtp);
    int temp[n + 1];
    for(int i = 0; i < n; ++i) temp[i] = a[i];
    sort(temp , temp + n);
    for(int i = 0; i < n; ++i){
        int idx = lower_bound(temp , temp + n , a[i]) - temp;
        a[i] = idx + 1 + mtp[idx + 1];
        ++mtp[idx + 1];
    }
}
int main()
{
    int tt;
    scanf("%d" , &tt);
    while(tt--){
      scanf("%d" , &n);
      memset(bit , 0 , sizeof bit);
      memset(cnt , 0 , sizeof cnt);
      memset(ans , 0 , sizeof ans);
      memset(mnt , 0 , sizeof mnt);
      memset(mtp , 0 , sizeof mtp);
      for(int i = 0; i < n; ++i) scanf("%d" , a + i);
      for(int i = 0; i < n; ++i) b[i] = a[i];
      for(int i = 0; i < n; ++i){
        ++mtp[a[i]];
      }
      for(int i = 1; i < N; ++i) ans[i] = ans[i - 1] + mtp[i - 1];
      make();
      for(int i = n - 1 ; i >= 0; --i){
        val[i] = ans[b[i]] - query(a[i] - 1);
        update(a[i] , 1);
      }
      for(int i = 0; i < n; ++i){
        printf("%d " , val[i]);
      }
      printf("\n");
    }
    return 0;
}
