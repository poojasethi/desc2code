
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;

/**
 *
 * @author Ajay Goyal
 */
 class WatanAndDominoes {
 //   static int limit=(int)Math.pow(10, 6)+5;
    static long tree[];
       public static void main(String ar[]) throws IOException{
        BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
           PrintWriter out=new PrintWriter(System.out);
        int t=Integer.parseInt(in.readLine());
        
        
        while(t-->0){
            
          int n=Integer.parseInt(in.readLine());
          String s[]=in.readLine().split(" ");
          
         int arr[]=new int[n];
          int max=Integer.MIN_VALUE;
           for(int i=0;i<n;i++){
               arr[i]=Integer.parseInt(s[i]);
               max=Math.max(max, arr[i]);
           }
           tree=new  long[max+5];
           
           out.print("0"+" ");
            update(arr[0], 1,max+5);
           for(int i=1;i<n;i++){
              out.print(read(arr[i]-1)+" ");
               update(arr[i],1,max+5);
           }
      
          
        }
        
        out.flush();
        out.close();
}
       public static void update (int index,int val,int limit){
           int p=index;
           
           while(p<limit){
               tree[p]+=val;
               p+=p&(~p+1);
           }
       }
       
       public static int read(int index){
           int sum=0;
           while(index>0){
               sum+=tree[index];
               index-=index&(~index+1);
           }
           
           return sum;
       }
      
      
}

