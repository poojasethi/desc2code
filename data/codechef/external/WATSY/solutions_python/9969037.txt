#include<bits/stdc++.h>                         //Author: Sharad Chandran
#define lld long long int                       //Handle: sharad07
#define llu unsigned long long int
#define pb(x) push_back(x)
#define pii pair<int,int>
#define pll pair<lld,lld>
#define pq priority_queue<int> 
#define mp(x,y) make_pair(x,y)
#define sz size()
#define inp1(x) scanf("%d",&x)
#define inp2(x,y) scanf("%d%d",&x,&y)
#define inp3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define print(x) printf("%d",x)
#define println(x) printf("%d\n",x)
#define _for(i,x,y) for(int i=x;i<y;i++)
using namespace std;
const int maxx=1e6+3;
lld mod=1e9+7;
int bit1[maxx+2],bit2[maxx+2],ans[maxx],A[maxx];

inline void update(int BIT[],int index,int val)
{
    for(int k=index;k<maxx;k+=(k&(-k)))
    {
        BIT[k]+=val;
    }
    return;
}

void update_range(int a,int b,int val)
{
    update(bit1, a, val); 	
    update(bit1, b + 1, -val); 	
    update(bit2, a, val * (a-1));	
    update(bit2, b + 1, -val * b); 	 
}

inline int query(int BIT[],int index)
{
    int sum=0;
    for(int k=index;k>0;k-=(k&(-k)))
    {
        sum+=BIT[k];
    }
    return sum;
}

int query_util(int index)
{
    return query(bit1, index) * index - query(bit2, index);
}

int query_range(int a,int b)
{
    return query_util(b) - query_util(a-1);
}

void solve()
{
    memset(bit1,0,sizeof(bit1));
    memset(bit2,0,sizeof(bit2));
    int N;
    cin>>N;
    _for(i,0,N) cin>>A[i];
    
    ans[0]=0;
    update_range(A[0]+1,maxx,1);
    
    _for(i,1,N)
    {
        ans[i]=query_range(A[i],A[i]);
        update_range(A[i]+1,maxx,1);
    }
    
    _for(i,0,N) cout<<ans[i]<<" ";
    cout<<endl;
}

int main()
{
    int t,N;
    cin>>t;
    while(t--)
    {
        solve();
    }
    return 0;
}