#include<bits/stdc++.h>

using namespace std;

vector<int> st(10000000);

void build(int idx,int low,int high)
{
	if(low==high)
	{
		st[idx]=0;
		return ;
	}
	int m=low+(high-low)/2;
	build(2*idx,low,m);
	build(2*idx+1,m+1,high);
	st[idx]=0;
}

void update(int idx,int pos,int low,int high)
{
	if(low>high)
		return ;
	if(low==high)
	{
		st[idx]++;
		return ;
	}
	int m=low+(high-low)/2;
	if(pos<=m)
		update(2*idx,pos,low,m);
	else
		update(2*idx+1,pos,m+1,high);
	st[idx]=st[2*idx]+st[2*idx+1];
}

int query(int idx,int l,int r,int low,int high)
{
	if(low>high||r<low||l>high)
		return 0;
	if(low>=l&&high<=r)
		return st[idx];
	int m=low+(high-low)/2;
	int x=query(2*idx,l,r,low,m);
	int y=query(2*idx+1,l,r,m+1,high);
	return x+y;
}

int main()
{
	int t,n;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d",&n);
		int mx=-1;
		vector<int> arr(n+1);
		for(int i=1;i<=n;i++)
		{
			scanf("%d",&arr[i]);
			mx=max(mx,arr[i]);
		}
		fill(st.begin(),st.begin()+4*mx,0);
	//	build(1,1,1000000);
		for(int i=1;i<=n;i++)
		{
			printf("%d ",query(1,1,arr[i]-1,1,mx));
			update(1,arr[i],1,mx);
		}
		printf("\n");
		
	}
	return 0;
}