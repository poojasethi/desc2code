#include <bits/stdc++.h>
using namespace std;
 
typedef long long LL;
 
#define PII       pair<double,double>
#define all(c)    c.begin(),c.end()
#define sz(c)     (int)c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair
#define cin(x)    scanf("%d",&x)
#define MOD		1000000007
#define EPS		1E-10
 
int segtree[4 * 1000001];
 
void update(int idx,int val,int l,int r,int pos)
{
	if(l > idx or r < idx) return ;
	if(l == r)
	{
		segtree[pos] += val;
		return ;
	}
	int mid = (l + r) >> 1;
	update(idx,val,l,mid,2*pos);
	update(idx,val,mid+1,r,2*pos+1);
	segtree[pos] = segtree[2*pos] + segtree[2*pos+1];
}
 
int query(int lQ,int rQ,int l,int r,int pos)
{
	if(l > rQ or r < lQ or l > r) return 0;
	else if(l >= lQ && r <= rQ) return segtree[pos];
	int mid = (l + r) >> 1;
	return query(lQ,rQ,l,mid,2*pos) + query(lQ,rQ,mid+1,r,2*pos+1);
}
 
vector<int> arr,ans;
 
int main()
{
	int t;
	cin(t);
	while(t--)
	{
		int n;
		cin(n);
		arr.resize(n);
		ans.resize(n);
		for(int i = 0; i < n; i++)
		{
			cin(arr[i]);
			ans[i] = query(1,arr[i] - 1,1,1000000,1);
			update(arr[i],1,1,1000000,1);
		}
		for(int i = 0; i < n; i++)
		{
			printf("%d " , ans[i]);
			update(arr[i],-1,1,1000000,1);
		}
		printf("\n");
	}
	return 0;
} 
