#include<bits/stdc++.h>
#define all(i,n) for(i=0;i<n;i++)
#define all2(i,l,h) for(i=l;i<=h;i++)
#define nl printf("\n");
int st[4000000];
int arr[1000000];
using namespace std;
void update(int index,int pos,int low,int high)
{
    if(low>high)
       return;
    if(low==high)
     {
       st[index]++;
       return;
     }
     int mid=low+(high-low)/2;
    if(mid>=pos)
      update(2*index,pos,low,mid);
    else
       update(2*index+1,pos,mid+1,high);
    st[index]=st[2*index]+st[2*index+1];
}

int maxvalsegtree(int index,int low,int high,int l,int r)
{
  if(((high<l)||(r<low))||(low>high))
       return 0;
  if((low>=l)&&(high<=r))
    {
       return st[index];
    }
  int mid=low+(high-low)/2;
  int left=maxvalsegtree(2*index,low,mid,l,r);
  int right=maxvalsegtree(2*index+1,mid+1,high,l,r);
  int result=left+right;
   return result;
}


int main()
{
  int t,n,i,res=1;
  scanf("%d",&t);
  while(t--)
  {
    memset(st,0,sizeof(st));
    res=1;
    scanf("%d",&n);
    all2(i,1,n)
      scanf("%d",&arr[i]);
   all2(i,1,n)
   {
     res=maxvalsegtree(1,1,1000000,1,arr[i]-1);
     update(1,arr[i],1,1000000);
     printf("%d ",res);
   }
   printf("\n");
  }
 return 0;
}
