#include<iostream>
using namespace std;

int pi[1000001];
int inp[1000001];
bool first[1000001]={ 0 };

bool par[1<<22];

void par_find()
{
int n;
par[0]=0;
for(n=1;n<1<<22;n++)
{
	if(n%2==0)par[n]=par[n/2];
	else par[n]=1-par[(n-1)/2];
	
}	
}

int main()
{
	int t,exit;
	int p,i,j,k,q,max;
	
	pi[0]=-1;
	par_find();
	scanf("%d",&t);
	

	

		
	while(t--)
	{
		scanf("%d",&p);
		k=-1;
		q=-1;
		max=-1;
		scanf("%d",&inp[0]);
		first[0]=0;
		exit=0;
		
		for(i=1;i<p;i++)
		{
			scanf("%d",&inp[i]);
			//if(i==2 && inp[0]==inp[1] && inp[1]==inp[2]){exit=1;break;}
			first[i]=0;
			while(k>-1 && inp[k+1]!=inp[i])
			{
				k=pi[k];
			}
			
			if(inp[k+1]==inp[i])
			{
			k++;	
			}
			else k=-1;
			
			pi[i]=k;
		}
		j=0;
		
		
		
	
		
	
		
		while(q<p && j<1<<22 && exit==0)
		{
			//temp=q;
			
			//if(q>0 && inp[q-1]==inp[q] && inp[q]==inp[q+1])break;
			
			while(q>-1 && par[j]!=inp[q+1])
			{
				q=pi[q];
				
			}
			//diff=temp-q;
        	
			if(par[j]==inp[q+1])
			{
			q++;	
			}
			else q=-1;
			
			if(q>-1 && first[q]==0 && q<p)
			{
				first[q]=1;
				max=q;
				printf("%d ",j-q);
			}
			j++;
		}
		
		for(i=max+1;i<p;i++)
		{
			printf("-1 ");
		}
		
		printf("\n");
		
		
	}
	
return 0;	
}