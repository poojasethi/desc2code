#include <iostream>
#include <cstdio>
using namespace std;

#include <bitset>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <cassert>
#include <complex>

# define fr(i, n)           for( int i = 0; i<=n; i++)
# define frm(i, m, n)     for( int i = m; i <=n; i++)
# define pf printf
# define sf scanf
# define sfd(x) scanf("%d",&x)
# define ll long long
# define pb push_back
# define pii pair<int,int>
# define F first
# define S second
# define mp make_pair

# define nmax 100
# define inf 1000000000

const double PI=4*atan(1);
# define base complex<double>
# define vb vector<base>

vb omega;
int fft_n;
//int n;

void initFFT(int n)
{
     fft_n=n;
     omega.resize(fft_n);
     double angle=2*PI/n;

     for(int i=0;i<n;i++)
          omega[i]=base(cos(i*angle),sin(i*angle));
}

void fft(vb &a)
{
     int n=a.size();
     if(n==1)return;
     int half=n>>1;
     vb even(half),odd(half);

     for(int i=0,j=0;i<n;i+=2,++j)
     {
          even[j]=a[i]; odd[j]=a[i+1];
     }
     fft(even);
     fft(odd);

     base tmp;
     for (int i=0, fact = fft_n/n; i < half; i++)
     {
          tmp =  odd[i] * omega[i * fact] ;
          a[i] =  even[i] + tmp;
          a[i+half] = even[i] - tmp;
     }
}

void multiply (const vector<long long> & a, const vector<long long> & b, vector<long long> & res)
{
     vb fa (a.begin(), a.end()),  fb (b.begin(), b.end());
     int n = 1;
     while (n < 2*max (a.size(), b.size()))  n <<= 1;
     fa.resize (n),  fb.resize (n);

     initFFT(n);
     fft (fa),  fft (fb);
     for (size_t i=0; i<n; ++i)
          fa[i] = conj( fa[i] * fb[i]);
     fft (fa);

     res.resize (n);
     for (size_t i=0; i<n; ++i)
          res[i] = (long long) (fa[i].real() / n + 0.5);
}

int main()
{
     //freopen("input.txt","r",stdin);
     int t,n1,n2,i,x;
    scanf("%d",&t);
    while(t--){
        scanf("%d %d",&n1,&n2);
        vector<ll> a,b,res;
        for(i=0;i<=n1;i++){
            scanf("%d",&x);
            a.pb(x);
        }
        for(i=0;i<=n2;i++){
            scanf("%d",&x);
            b.pb(x);
        }
        printf("%d\n",n1+n2);
        multiply(a,b,res);
        for(i=0;i<=n1+n2;i++)
            printf("%d ",(int)res[i]);
        printf("\n");
    }
     return 0;
}
