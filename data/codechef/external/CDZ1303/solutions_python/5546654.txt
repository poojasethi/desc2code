#include<iostream>
#include<cmath>
#include<complex>
#include<fstream>
#include<cassert>
using namespace std;

/*#define cout fout
#define cin fin*/
#define LL long long
#define mod 4294967296LL
#define comp complex<double> 
#define PI 3.1415926535897

/*ifstream fin ("inp.txt");
ofstream fout ("out.txt");*/
comp a[270005], b[270005], c[270005];
comp temp [270005];

void fft (comp p[], LL k, comp prim){
	assert (k>=1);
	if (k>1){
		for (int i=0;i<k/2;++i){temp[i] = p[2*i];temp[i+(k/2)] = p[2*i + 1];}
		for (int i=0;i<k;++i)p[i] = temp[i];
		fft (p, k/2, prim * prim);
		fft (p + k/2, k/2, prim * prim);
		
		comp prim_ = 1;
		for (int i=0;i<k/2;++i){
			comp x, y;
			x = p[i];y = p[i+(k/2)];
			p[i] = x + prim_ * y ;
			p [(k/2) + i] = x - prim_ * y ;
			prim_ *= prim;
		}	
	}
}

int main (){
	LL n1(0), n2(0), k(0), t;
	comp prim(1);
	cin>>t;

	while (t--){
		cin>>n1>>n2;	n1++;n2++;k = max (n1, n2);	while (k != (k& (-k)))k+=(k & (-k)); k *= 2;
		for (int i=0;i<n1;++i){int x ;cin>>x; a[i]=comp((double) x);}for (int i=0;i<n2;++i){int x ;cin>>x; b[i]=comp((double) x);}
		for (int i=n1;i<k;++i)a[i] = comp(0);for (int i=n2;i<k;++i)b[i] = comp(0);

		prim = comp(cos ((2*PI) / k), sin ((2*PI) / k));

		fft (a, k, prim);
		fft (b, k, prim);
		for (int i=0;i<k;++i)c[i] = a[i] * b[i];
		prim = comp(1) / prim;
		fft (c, k, prim);
		cout<<(n1 + n2) - 2<<"\n";
		for (int i=0;i<n1+n2-1;++i){c[i] /= comp (k); cout<<((LL)(real(c[i]) + 0.5)) % mod<< " ";}
		cout<<"\n";
	}
	return 0;
}