 

Problem description.
 Consider a scenario in which client requests are being served by different servers according to the distance. There are 4 regions handled by 4 servers. 
Requests originating under 60km(inclusive) radius from the origin are covered by server1 known as region1. 
Requests originating under 120km(inclusive) but more than 60km radius from the origin are covered by server2 known as region2. 
Requests originating under 180km(inclusive) but more than 120km radius from the origin are covered by server3 known as region3. 
Requests originating under 200km(inclusive) but more than 180km radius from the origin are covered by server4 known as region4. 
Requests originating after 200km are not served at all. 

Input

The first line of the input contains the number of test cases T .
Each test case starts with a line containing the number of requests n  . 
Each of the next n lines contains two integers x and y  separated by a space, the coordinates of the point the request originated.

 

Output

Print the answers to the test cases in the order in which they appear in the input. For each test case print a single line containing 4 integers separated by space - total requests each server receives in following order   server1 server2 server3 server4 

 

Constraints

1 ≤ T ≤ 10
1 ≤ n ≤ 10^6
-200 ≤ x,y ≤ 200

 

Example
Input:
1
5
32 -39
71 89
-60 80
0 0
196 89

Output:
2 2 0 0

