 
Given a weighted, undirected graph G of n vertices and m edges, we say that there is a road from vertex A to vertex B if for
a given value r, there exists at least one path from A to B such that the minimum weight edge on the path is at least r.
You would be given q queries, each of them is a value of r. For each query, output a single integer, the number of distinct,
un-ordered pair of vertices A, B such that there exists a road in between them.
 

Input
First line contains 3 space-separated integers: n, m, q (in that order).
The next m lines also contain 3 space-separated integers each. The i^{th} of these lines contain u_i, v_i, w_i.
It means that there is an edge between vertices u_i and v_i of weight w_i.
The next line contains q space-separated integers representing the q queries.
 

Output
Output a single line containg q space separated integers, the responses of the q queries.
 

Constraints
1 <= n, q, m <= 100,000
0 <= Weight of each edge <= 1,000,000,000.
 

Example
Input:
3 3 2
1 2 3
2 3 2
2 1 1
2 3

Output:
3 1
