#include <bits/stdc++.h>
using namespace std;
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
#define ll long long
#define sd(x) scanf("%d",&x)
ll group[1000005];
ll size[1000005];
map<int,ll>ans;
vector<pair<int,pair<int,int> > >v;
ll val=0;
int findroot(int x){
    if(group[x]!=x)
        group[x]=findroot(group[x]);
    return group[x];
}
void merge(int u,int v){
    u=findroot(u);
    v=findroot(v);
    if(u!=v){
       // cout<<"hello"<<endl;
       // cout<<"u= "<<u<<" "<<size[u]<<endl;
       // cout<<"v= "<<v<<" "<<size[v]<<endl;
        val-=((ll)((size[u])*(size[u]-1))/2);
        val-=((ll)((size[v])*(size[v]-1))/2);
        size[u]+=size[v];
        //size[v]=0;
        group[v]=u;
        val+=((ll)((size[u])*(size[u]-1))/2);
    }
}
int main(){
    int n,m,q;
    cin>>n>>m>>q;
    for(int i=1;i<=n;i++){
        group[i]=i;
        size[i]=1;
    }
    for(int i=1;i<=m;i++){
        int a,b,c;
        sd(a);
        sd(b);
        sd(c);
        v.pb(mp(c,mp(a,b)));
    }
    sort(v.begin(),v.end());
    reverse(v.begin(),v.end());
    for(int i=0;i<m;i++){
        merge(v[i].ss.ff,v[i].ss.ss);
        ans[v[i].ff]=val;
    }
    vector<int>yolo;
    map<int,ll>::iterator it;
    for(it=ans.begin();it!=ans.end();it++){
        yolo.pb(it->ff);
    }
    while (q--) {
        int r;
        sd(r);
        //map<int,ll>::iterator it;
        vector<int>::iterator itt;
        itt = lower_bound(yolo.begin(),yolo.end(),r);
        if (itt == yolo.end()) {
            puts("0");
            continue;
        }
        printf("%lld ",ans[(*itt)]);
    }
    return 0;
}
