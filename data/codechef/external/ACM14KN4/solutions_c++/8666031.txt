#include <stdio.h>
typedef long long ll;

ll min(ll x, ll y) { return (x < y)? x: y; }
ll max(ll x, ll y) { return (x > y)? x: y; }
ll a[4*100005],ma[4*100005],in[4*100005],de[4*100005],b[100005];

void build(int v,int l,int r)
{
    if(l==r)
	{
        a[v] = b[l];
        in[v] = 1;
        de[v] = 1;
        ma[v] = b[l];
    }
    
	else 
	{
        int m = (l+r)/2;
        build(2*v,l,m);
        build(2*v+1,m+1,r);
        a[v] = a[2*v] + a[2*v+1];
        
		if(in[2*v] && in[2*v+1] && b[m+1]>=b[m])
			in[v] = 1;
		else 
			in[v] = 0;
       
	    if(de[2*v] && de[2*v+1] && b[m+1]<=b[m])
	   		de[v] = 1;
	    else 
			de[v] = 0;
        
		ma[v] = max(ma[2*v],ma[2*v+1]);
    }
}

void update(int v,int x,int l,int r)
{
    	if(l==r)
		{
        	a[v] = b[l];
         	in[v] = 1;
        	de[v] = 1;
        	ma[v] = b[l];
       
    	}
    	
		else 
		{
        	int m = (l+r)/2;
        	if(x<=m)
				update(2*v,x,l,m);
        	else 
				update(2*v+1,x,m+1,r);
        
			a[v] = a[2*v]+a[2*v+1];
         	
			if(in[2*v] && in[2*v+1] && b[m+1]>=b[m])
				in[v] = 1;
			else 
				in[v] = 0;
       		
			if(de[2*v] && de[2*v+1] && b[m+1]<=b[m])
				de[v] = 1; 
			else 
				de[v] = 0;
       		
			ma[v] = max(ma[2*v],ma[2*v+1]);
    	}
}

ll getmax(int v,int lo,int hi,int l,int r)
{
    if(lo>hi)
		return 0;
    if(lo==l && hi==r)
		return ma[v];
    int m = (l+r)/2;
    
	return max(getmax(2*v,lo,min(m,hi),l,m),getmax(2*v+1,max(lo,m+1),hi,m+1,r));
}

ll getsum(int v,int lo,int hi,int l,int r)
{
    if(lo>hi)
		return 0;
    if(lo==l && hi==r)
		return a[v];
    int m = (l+r)/2;
    
	return getsum(2*v,lo,min(hi,m),l,m) + getsum(2*v+1,max(lo,m+1),hi,m+1,r);
}

int isin(int v,int lo,int hi,int l,int r)
{
    if(lo>hi)
		return 1;
    if(lo==l && hi==r)
		return in[v];
    int m = (l+r)/2;
    int y = isin(2*v,lo,min(m,hi),l,m);
    int z = isin(2*v+1,max(lo,m+1),hi,m+1,r);
    
	if(y==0)
		return 0;
    if(z==0)
		return 0;
    if(lo<=m && hi>=m+1 && b[m+1] < b[m])
		return 0;
    
	return 1;
}

int isdec(int v,int lo,int hi,int l,int r)
{
    if(lo>hi)
        return 1;
        
    if(lo==l && hi==r)
        return de[v];

    int m = (l+r)/2;
    int y = isdec(2*v,lo,min(hi,m),l,m);
    int z  = isdec(2*v+1,max(lo,m+1),hi,m+1,r);

    if(y==0)
		return 0;
    if(z==0)
		return 0;
    
	if(lo<=m && hi>=m+1 && b[m+1] > b[m])
		return 0;
    
	return 1;
}

int main()
{
    int n,m;
    
	scanf("%d%d",&n,&m);
    int i;
    
	for(i=0;i<n;i++)
        scanf("%lld",&b[i]);
    
	build(1,0,n-1);
    
	int x,y;
    
	char s[5];
    
	for(i=0;i<m;i++)
    {
        scanf("%s%d%d",&s,&x,&y);

        x--;
        if(s[0]!='U')
			y--;
       	
		if(s[0]=='S')
        	printf("%lld\n",getsum(1,x,y,0,n-1)); 
       
        else if(s[0]=='M')
			printf("%lld\n",getmax(1,x,y,0,n-1));
        
		else if(s[0]=='I')
			printf("%d\n",isin(1,x,y,0,n-1));
        
		else if(s[0]=='D')
			printf("%d\n",isdec(1,x,y,0,n-1));
        
		else
		{
            b[x] = y;
            update(1,x,0,n-1);
        }
        
    }
    
    return 0;
} 