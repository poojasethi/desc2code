
Mr Sheikh and Miss S live in a country named Tree Land. Cities in Tree Land are  connected via bi-directional roads. All pair of cities have unique path between them. Mr Sheikh and Miss S are crazy about cakes. They love travelling to different cities to taste varieties of cakes. But the problem is they travel a lot for their respective jobs, so it is not necessary that they are in same cities all the time. So they come up with a plan to decide where to eat. Suppose some day  Mr Sheikh is in city A and Miss S is in city B they choose a city C where they will meet to eat cakes. They consider a city C to be a valid  city to meet if |dist(A,C)-dist(B,C)| ≤ t  . Where t is a parameter which depends on how busy they are on a particular day.
If there exists a city C satisfying all the above condition they meet on that day to eat cakes otherwise they just cancel the plan to meet for that day.
As Mr Sheikh and Miss S are very busy people they need your help to determine if they can meet on a particular day or not. For each day you need to output "YES" if they can meet, "NO" otherwise.

Input

The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.

The first line of each test case contains a single integer N denoting the number of cities in Tree Land. Next  N-1 lines contain 3 space-separated integers u, v and c denoting there exists a road of length c between the cities  u and  v.


Next line contains an integer  Q denoting the number of days Mr Sheikh and Miss S wanted to meet.


Next Q lines contain 3 space separated integers A, B and t. Denoting the cities of Mr Sheikh and Miss S and the business parameter for that day.


 

Output

For each test case, output Q lines. Output "YES" if they can meet on ith day "NO" otherwise.


 

Constraints

1 ≤ T ≤ 10^5
1 ≤ N ≤ 2*10^5
Sum of N over all test cases will not exceed 10^6
1 ≤ Q ≤ 2*10^5
Sum of Q over all test cases will not exceed 7*10^5
1 ≤ u,v,A,B ≤ N
0 ≤ c, t ≤ 4*10^8

 

Example
Input:
1
3
1 2 3
1 3 6
2
2 3 3
2 3 2

Output:
YES
NO
