#include<bits/stdc++.h>
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define p(n) printf("%d\n",n)
#define mod 1000000009LL
#define ll long long
#define pb push_back
#define mp make_pair
#define N 200011
#define LN 21
using namespace std;
int pa[LN][N],depth[N];
ll dis[N];
vector<pair<int,int> >adj[N];
int LCA(int u, int v)
{
	if(depth[u] < depth[v]) swap(u,v);
	int diff = depth[u] - depth[v];
	for(int i=0; i<LN; i++) if( (diff>>i)&1 ) u = pa[i][u];
	if(u == v) return u;
	for(int i=LN-1; i>=0; i--) if(pa[i][u] != pa[i][v]) {
		u = pa[i][u];
		v = pa[i][v];
	}
	return pa[0][u];
}
void dfs(int curr,int prev,int dep)
{
 pa[0][curr]=prev;
 depth[curr]=dep;
 for(int i=0;i<adj[curr].size();++i)
 if(adj[curr][i].first!=prev)
   dfs(adj[curr][i].first,curr,dep+1);
}
int n;
void dfs2(int sr)
{
 queue<int>q;
 ll vis[N];
 int i;
 for(i=0;i<n;++i)
 vis[i]=0;
 vis[sr]=1;
 dis[sr]=0;
 q.push(sr);
 while(!q.empty())
 {
   int id=q.front();
   q.pop();
   int i;
   for(i=0;i<adj[id].size();++i)
   {
    if(vis[adj[id][i].first]==0)
    {
     vis[adj[id][i].first]=1;
     dis[adj[id][i].first]=dis[id]+adj[id][i].second;
     q.push(adj[id][i].first);
    }
   }
 }
}
int main()
{
 int q,i,n1,n2,t,li,j;
 int di;
 s(t);
 while(t--)
 {
  s(n);

  for(i=0;i<n;++i)
  adj[i].clear();
  for(i=1;i<=n-1;++i)
  {
   s(n1);s(n2);s(di);
   n1--;n2--;
   adj[n1].pb(make_pair(n2,di));
   adj[n2].pb(make_pair(n1,di));
  }
  for(i=0;i<LN;++i)
   for(j=0;j<n;++j)
   pa[i][j]=-1;
  dfs(0,-1,0);
  dfs2(0);
  for(i=1;i<LN;++i)
   for(j=0;j<n;++j)
   if(pa[i-1][j]!=-1)
   pa[i][j]=pa[i-1][pa[i-1][j]];
   int q;
   s(q);
   while(q--)
   {
    s(n1);s(n2);s(li);
    n1--;n2--;
    int a=n1;
    int b=n2;
    int lca=LCA(a,b);
    ll mindis=dis[a]+dis[b]-2*dis[lca];
    ll look=mindis/2;
    int lr,rr,ed,ed1;
    ll d1=dis[a]-dis[lca];
    ll d2=dis[b]-dis[lca];
    rr=lca;
    if(d1==d2)
    mindis=0;
    else if(d1<d2)
    {
    lr=ed=b;
    ed1=a;
    }
    else
    {
    lr=ed=a;
    ed1=b;
    }
    if(mindis>0)
    {
       for(i=LN-1;i>=0;--i)
       if(pa[i][lr]==-1||(depth[pa[i][lr]]<depth[lca]))
       continue;
       else
       {
       	// cout<<i<<" "<<lr<<" "<<pa[i][lr]<<" "<<ed<<" "<<ed1<<endl;
        ll d3=dis[ed]-dis[pa[i][lr]];
        ll d4=dis[ed1]+dis[pa[i][lr]]-2*dis[lca];
       // cout<<d3<<" "<<d4<<endl;
        mindis=min(mindis,abs(d3-d4));
         if(d3<=d4)
         lr=pa[i][lr];
       }
    }
    //cout<<mindis<<endl;
    if(mindis<=li)
    printf("YES\n");
    else
    printf("NO\n");
   }
 }
 return 0;
}
