#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define all(a) a.begin(),a.end()

using namespace std;
typedef long long int LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;

long long int gcd(long long int m, long long int n){if(n == 0) return m;return gcd(n, m % n);}  
long long int fastpow(long long int a, long long int b,long long int m){long long int r = 1;while (b > 0){if (b % 2 == 1)r = (r * a) % m;b = b >> 1;a = (a * a) % m;}return r;}
int prime(long long int x){if(x==1)return 0;if(x<=3)return 1;if(x%6==1||x%6==5){long long int y=sqrt(x),i;for(i=2;i<=y;i++)if(x%i==0)return 0;return 1;} return 0;}
bool myfunction (int i,int j) { return (i<j); }
char str[100100];
int main()
{

	int test,n,k,c;
	VI vec;
	scanf("%d",&test);
	char ch;
	while(test--)
	{
		int counter=0,sum,val;
		vector<int>::iterator low,up;
		
		scanf("%d%d",&n,&k);
		
		
		for(int i=0;i<n;i++)
		{
			getchar();
			scanf("%[^\n]", str);
			scanf("%d",&c);
			vec.push_back(c);			
		}
		
		sort(vec.begin(),vec.end());
		
		for(int i=0;i<n-2;i++){
			for(int j=i+1;j<n-1;j++)
			{
				/*low=vec.begin()+j+1;
				up=vec.end();
				sum=vec[i]+vec[j];
				val=k-sum;
				if(val>=0){
					if(binary_search(low,up,val,myfunction))
						counter++;
				}*/
				for(int l=j+1;l<n;l++)
				{
					if(k==vec[i]+vec[j]+vec[l])
						counter++;
				}
			}
		}
		printf("%d\n",counter);
		vec.clear();
	}
	return 0;
}


