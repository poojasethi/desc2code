#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#include <cmath>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <bitset>

using namespace std;

#define INF 1000000000
#define inchar getchar_unlocked

inline int inp() {
      int n=0, ch;
      while((ch = inchar()) < '0');
      n=(ch-'0');
      while((ch=inchar())>='0') n=(n<<3)+(n<<1)+(ch-'0');
      return n;
}

int test,num=0,k,m,d,event[35][2],people[35],ans,beds[35];
int main()
 {
   
    scanf("%d",&test);
    while(test--)
     {
      scanf("%d %d",&k,&m);
      for(int i=1;i<=k;i++)
       {
        scanf("%d %d",&event[i][0],&event[i][1]);       
       }
      for(int i=0;i<35;i++)
      {
       people[i] = 0;
       beds[i] = 0; 
      }
      for(int i=1;i<=m;i++)
       {
          int ce;    
          scanf("%d",&ce);
          while(ce--)
           {
            int x,y;
            scanf("%d %d",&x,&y);
            people[x] += y;                      
           }
                
       } 
      /* for(int i=1;i<=k;i++)
        cout<<people[i]<<" ";
       cout<<"\n"; 
       */
      for(int i=1;i<=k;i++)
       {
        int w = people[i];
        int st = event[i][0];
        int fin = event[i][1];
        for(int j=st;j<=fin;j++)
         {
              beds[j] += w;  
         }
               
       }
       ans = 0;
       for(int i=1;i<=k;i++)
         ans = max(ans,beds[i]);
         num++;
       printf("Case %d: %d\n",num,ans);
      
      
      
                  
     }
  //getchar();
  //getchar();
  return 0;          
 }
