#include<iostream>
#include<stdio.h>
#include<stdlib.h>
#include<vector>

using namespace std;

struct node
{
    int s;
    int e;
    int index;
};

struct node a[31];


int comp(const void *a,const void *b)
{
    int as=((struct node *)a)->s;
    int ae=((struct node *)a)->e;
    int bs=((struct node *)b)->s;
    int be=((struct node *)b)->e;

    if(as!=bs)
    {
        if(as<bs)
            return -1;
        else
            return 1;
    }
    else
    {
        if(ae<be)
        {
            return -1;
        }
        else if(be<ae)
        {
            return 1;
        }
        else
        {
            return 0;
        }
    }
}
int a1[100];
vector<int> v1[1000005];
int main()
{
    int t,t1;
    scanf("%d",&t);
    for(t1=1;t1<=t;t1++)
    {
        int m,k;
        scanf("%d%d",&k,&m);
        for(int i=0;i<1000005;i++)
        {
            v1[i].clear();
        }
        int max1=0;
        for(int i=0;i<k;i++)
        {
            scanf("%d%d",&a[i].s,&a[i].e);
            if(a[i].e>max1)
            {
                max1=a[i].e;
            }
            a[i].index=i+1;
        }
        for(int i=0;i<100;i++)
        {
            a1[i]=0;
        }
        for(int i=0;i<m;i++)
        {
            int d;
            scanf("%d",&d);
            for(int j=0;j<d;j++)
            {
                int a2,b;
                scanf("%d%d",&a2,&b);
                a1[a2]=a1[a2]+b;
            }
        }

        //qsort(a,k,sizeof(struct node),comp);
        int ans=0;
        for(int i=0;i<k;i++)
        {
            for(int j=a[i].s;j<=a[i].e;j++)
            {
                v1[j].push_back(i+1);
            }
        }
        for(int i=1;i<=max1;i++)
        {
            int ans1=0;
            for(vector<int>::iterator it=v1[i].begin();it!=v1[i].end();it++)
            {
                ans1=ans1+a1[(*it)];
            }
           // printf("%d\n",ans1);
            if(ans1>ans)
            {
                ans=ans1;
            }
        }
        printf("Case %d: %d\n",t1,ans);
    }
return 0;}
