#include<stdio.h>
inline void fastReadInt(int *a)
{
    register char c=0;
    while(c<33)c=getchar_unlocked();
    *a=0;
    while(c>33)
    {
        *a=*a*10+c-'0';
        c=getchar_unlocked();
    }
}
inline void fastReadIntL(long long int *a)
{
    register char c=0;
    while(c<33)c=getchar_unlocked();
    *a=0;
    while(c>33)
    {
        *a=*a*10+c-'0';
        c=getchar_unlocked();
    }
}
void part(int arr[],int min,int max)
{
 int mid;
 if(min<max)
 {
   mid=(min+max)/2;
   part(arr,min,mid);
   part(arr,mid+1,max);
   merge(arr,min,mid,max);
 }
}
void merge(int arr[],int min,int mid,int max)
{
  int tmp[100005];
  int i,j,k,m; 
  j=min;
  m=mid+1;
  for(i=min; j<=mid && m<=max ; i++)
  {
     if(arr[j]<=arr[m])
     {
         tmp[i]=arr[j];
         j++;
     }
     else
     {
         tmp[i]=arr[m];
         m++;
     }
  }
  if(j>mid)
  {
     for(k=m; k<=max; k++)
     {
         tmp[i]=arr[k];
         i++;
     }
  }
  else
  {
     for(k=j; k<=mid; k++)
     {
        tmp[i]=arr[k];
        i++;
     }
  }
  for(k=min; k<=max; k++)
     arr[k]=tmp[k];
}
int main(){

    int t,n,q,i,j,cnt,c,d;
    long long int sum,k;
    fastReadInt(&t);
    while(t--)
    {
        fastReadInt(&n);
        int b[n];
        for(i=0;i<n;i++)
        {
            fastReadInt(&b[i]);
        }
        part(b,0,n-1);
        fastReadInt(&q);
        for(i=0;i<q;i++)
        {
           sum=0;
           cnt=0;
           fastReadIntL(&k);
           for(j=0;j<n;j++)
           {
               if(sum+b[j]>=k)
                break;
               cnt++;
               sum+=b[j];
           }
           printf("%d ",cnt);
        }
        printf("\n");
    }
   return 0;
}
