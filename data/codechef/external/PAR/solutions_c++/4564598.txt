#include <bits/stdc++.h>
#define MAX 10001
#define FOR(i,n) for(i=0;i<n;i++)
using namespace std;
inline int next_int() {
 int n = 0;
 char c = getchar_unlocked();
 while (!('0' <= c && c <= '9')) {
  c = getchar_unlocked();
 }
 while ('0' <= c && c <= '9') {
  n = n * 10 + c - '0';
  c = getchar_unlocked();
 }
 return n;
}

void clear_queue(queue <int> &q)
{
    queue<int> e;
    swap(q,e);
}
void clear_stack(stack <int> &s)
{
    stack <int> n;
    swap(s,n);
}
int main(void)
{
    int T=0,n=0,j=0,i=0,temp;
    stack <int> s;
    queue <int> q,finishQueue;
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    #endif // ONLINE_JUDGE
    T=next_int();
    while(T--)
        {
            n=next_int();
            clear_queue(q);
            clear_stack(s);
            clear_queue(finishQueue);
            if(n==0)
                return 0;
            FOR(i,n)
            {
                temp=next_int();
                q.push(temp);
            }
            while(!q.empty())
                {
                    temp=q.front();
                    if(temp==finishQueue.size()+1)
                        {
                            finishQueue.push(temp);
                            q.pop();
                            continue;
                        }
                    else
                        {
                            if(!s.empty())
                            {
                                int x=s.top();
                                if(x==finishQueue.size()+1)
                                    {
                                        finishQueue.push(x);
                                        s.pop();
                                        continue;
                                    }
                                else
                                    {
                                        s.push(temp);
                                        q.pop();
                                    }
                            }
                            else
                                {
                                    s.push(temp);
                                    q.pop();
                                }
                        }
                }
            while(!s.empty())
                {
                    finishQueue.push(s.top());
                    s.pop();
                }
            int prev=finishQueue.front();
            finishQueue.pop();
            int flag=0;
            while(!finishQueue.empty())
                {
                    int next=finishQueue.front();
                    //printf("%d %d\n",prev,next);
                    if(prev<=next)
                        {
                            prev=next;
                            finishQueue.pop();
                            continue;
                        }
                    else
                        {
                            flag=1;
                            printf("no\n");
                            break;
                        }
                }

/*            while(!finishQueue.empty())
                {
                    printf("%d\n",finishQueue.front());
                    finishQueue.pop();
                }*/
            if(flag==0)
                printf("yes\n");
        }
    return 0;
}
 