#include<cstdio>
#include<cstring>
using namespace std;

#define FOR(i,a,b) for(int i=(a);i<(b);i++)
#define REP(i,n) FOR(i,0,n)

int* conv(int* a, int* b, int l) {
	int* res = new int[l];
	memset(res, 0, sizeof(int) * l);
	REP(i, l) {
		int k = i;
		REP(j, l) {
			res[k] ^= a[i] & b[j];
			k ++; if (k == l) k = 0;
		}
	}
	return res;
}

int* pow(int e, int l) {
	int* res = new int[l];
	memset(res, 0, sizeof(int) * l);
	if (e == 0) {
		res[0] = 1;
	}
	else {
		int* m1 = pow(e >> 1, l);
		int* m2 = conv(m1, m1, l);
		int* base = new int[l];
		memset(base, 0, sizeof(int) * l);
		base[0]^=1;base[1%l]^=1;base[2%l]^=1;
		if (e % 2) res = conv(m2, base, l);
		else res = m2;
	}
	REP(i, l) res[i] = res[i] ? ~0 : 0;
	return res;
}

int t, k, l;
int seq[500], res[500];
int main() {
	for (scanf("%d",&t);t;t--) {
		scanf("%d%d", &l, &k);
		REP(i, l) scanf("%d", &seq[i]);
		int* M = pow(k, l);
		memset(res, 0, sizeof(int) * l);
		REP(i, l) {
			int kk = i;
			REP(j, l) {
				res[i] ^= M[j] & seq[kk];
				kk ++; if (kk == l) kk = 0;
			}
		}
		int id = (l+(-k)%l)%l;
		REP(i, l) {
			printf("%d ", res[id]);
			id ++; if (id == l) id = 0;
		}
		puts("");
	}
}
