#include <cstdio>

int n;

struct tab {
	int t[500];
	int& operator [] (int x) {
		return t[x];
	}
	void read() {
		for(int i = 0; i < n; ++i) scanf("%d", &t[i]);
	}
	void print() {
		for(int i = 0; i < n - 1; ++i) printf("%d ", t[i]);
		printf("%d\n", t[n - 1]);
	}
};

inline int mn(int x) {
	return x >= n ? x - n : x;
}

tab operator * (tab a, tab b) {
	tab res;
	for(int i = 0; i < n; ++i) {
		res[i] = 0;
		for(int j = 0; j < n; ++j)
			res[i] ^= b[j] * a[mn(i + j)];
	}
	return res;
}

tab pot(int k) {
	tab res;
	res[0] = 1;
	for(int i = 1; i < n; ++i) res[i] = 0;
	tab a;
	for(int i = 0; i < n; ++i)
		a[i] = 0;
	a[0] = a[n - 1] = a[1] = 1;
	for(; k > 0; k >>= 1) {
		if(k & 1) res = res * a;
		a = a * a;
	}
	return res;
}

void alg() {
	int k;
	scanf("%d %d", &n, &k);
	tab t;
	t.read();
	(t * pot(k)).print();
}

int main() {
	int d;
	scanf("%d", &d);
	while(d--) alg();
}
