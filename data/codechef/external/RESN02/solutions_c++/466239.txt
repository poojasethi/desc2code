#include <cstdio>
#include <cstring>
long int arr[501],p[501],q[501];
long int c[501];
//p[501] is my transition matrix!
inline void xormul(long int *c,long int *a,long int *b,int n)
{
	for(int i=0;i<n;i++){
		c[i]=0;
		for (int j=0; j<n; j++) 
			c[i]^=a[j]&b[(i+j)%n];
		}
}

int main (int argc, char * const argv[]) {
    int T;
	scanf("%d",&T);
	while (T--) {
		memset(p,0,sizeof(p));
		memset(q,0,sizeof(q));
		int n,i;
		long int k;
		scanf("%d",&n);
		scanf("%ld",&k);
		for (i=0; i<n; i++)
			scanf("%ld",&arr[i]);
		p[0]=p[1]=p[n-1]=q[0]=1;
		while(k>0){				 //repeated squaring
			if(k&1)
			{xormul(c,q, p, n); memcpy(q, c, sizeof(q));}//q=q*p
			xormul(c,p, p, n);memcpy(p, c, sizeof(p));	 //p squares
			k>>=1;
		}
		for (int i=0;i<n;i++) {
			c[i]=0;
			for (int j=0;j<n;j++) {
				c[i]^=arr[j]*q[(i-j+n)%n];
			}
			printf("%ld ",c[i]);}
		printf("\n");
	}
    return 0;
}