#include <stdio.h>
#include <assert.h>
#include <string.h>
#include <cmath>
#include <algorithm>
#include <iostream>
#include <fstream>
#include <time.h>
#include <stdint.h>

using namespace std;
 
typedef unsigned long long ull;
typedef long long ll;

#define FOR(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define FORS(i,m,n) for((i)=m;(i)<(int)(n);(i)++)
#define tr(container, it) for(typeof(container.begin()) it=container.begin(); it!=container.end(); it++)
#define sz size()
#define fill(ar,val) memset(ar,val,sizeof ar)
#define min(a,b) ((a)<(b)?(a):(b))
#define max(a,b) ((a)>=(b)?(a):(b))

int A[501];
int X[501];
int R[501];
int N,K;

void powexp(int V[], int e){
    int i,j,ix;
    if(e==1){
        FOR(i,N)V[i]=X[i];    
        return;
    };
    int Q[N];
    FOR(i,N)Q[i]=V[i];    
    powexp(Q, e/2);
    
    FOR(i,N){
        V[i]=0;
        FOR(j,N){
            ix=j-i;
            if(ix<0)ix+=N;
            //V[i]+=Q[j]*Q[ix];
            if(Q[j]&Q[ix])V[i]^=1;
        }    
        V[i]%=2;
    }    
    if(e&1){
        FOR(i,N)Q[i]=V[i];    
        FOR(i,N){
            V[i]=0;
            FOR(j,N){
                ix=j-i;
                if(ix<0)ix+=N;
                //V[i]+=Q[j]*X[ix];
                if(Q[j]&X[ix])V[i]^=1;
            }
            V[i]%=2;
        }
    }    
}

int main(void){
    int i,j,ix,T;
    int TMP[501];
    for(scanf("%d",&T);T--;) {
        //clock_t start=clock();
        scanf("%d %d",&N,&K);
	    FOR(i,N){
            cin>>A[i];
            TMP[i]=0;
            X[i]=0;
        }
        X[0]=1; X[1]=1; X[N-1]=1;
        
        powexp(TMP,K);
        //printf("time=%.6fsec\n",0.000001*(clock()-start));
        FOR(i,N){
            R[i]=0;
            FOR(j,N){
                ix=j-i;
                if(ix<0)ix+=N;
                R[i]^=TMP[ix]*A[j];
            }
        }
        FOR(i,N)cout<<R[i]<<" ";
        cout<<endl;
    }
    return 0;
}
