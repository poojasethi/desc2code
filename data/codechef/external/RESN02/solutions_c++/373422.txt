#include<stdio.h>
#include<string.h>

int A[500], n, k, t;
bool X[62][500];

void XOR(int idx, int idxd, int shift) {
   for (int i=0; i<n; i++)
      if (X[idx][i])
         X[idxd][(i+shift)%n] = !X[idxd][(i+shift)%n];
}

void GenX() {
   X[0][0] = X[0][n-1] = X[0][1] = true;
   for (int i=0, z=k/2; z; z>>=1, i++) {
      for (int j=0; j<n; j++)
         if (X[i][j])
            XOR(i, i+1, j);
   }
}

int main() {
   scanf("%d", &t);
   while (t--) {
      scanf("%d%d", &n, &k);
      for (int i=0; i<n; i++)
         scanf("%d", &A[i]);
      memset(X, false, sizeof X);
      GenX();
      int e = 0;
      for (int i=30; i>=0; i--)
         if (k&(1<<i)) {
            e = i;
            break;
         }
      k &= ~(1<<e);
         
      for (int i=0; i<30; i++) {
         if (k&(1<<i)) {
            for (int j=0; j<n; j++)
               if (X[i][j])
                  XOR(e, 30+1+i, j);
            e = 30+1+i;
         }
      }
      for (int i=0; i<n; i++) {
         int a = 0;
         for (int j=0; j<n; j++)
            if (X[e][j])
               a ^= A[(i+j)%n];
         printf("%d ", a);
      }
      printf("\n");
   }
   return 0;
}
