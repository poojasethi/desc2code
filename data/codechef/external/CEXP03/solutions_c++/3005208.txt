/**
  * @link http://www.codechef.com/problems/CEXP03
  * @author Axay
  */

#include <stdio.h>

int main(int argc, char* argv[]){
	char temp[51], *forw, *backw;
	unsigned T, result;

	scanf("%u", &T);
	while(T--){
		scanf("%s", &temp);
		forw = temp;
		backw = temp;
		while(*backw != '\0')
			++backw;
		--backw;
		result = 1;
		while((forw <= backw) && result){
			switch(*forw){
				case 'A':
				case 'H':
				case 'I':
				case 'M':
				case 'O':
				case 'T':
				case 'U':
				case 'V':
				case 'W':
				case 'X':
				case 'Y':
				case '1':
				case '8':
					if(*forw != *backw)
						result = 0;
					break;

				case 'E':
				case '3':
				case 'J':
				case 'L':
				case 'S':
				case '2':
				case 'Z':
				case '5':
					if(*forw == *backw){
						if(result <= 2)
							result = 2;
						else
							result = 0;
					}
					else{
						switch(*forw){
							case 'E':
								if('3' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case '3':
								if('E' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case 'J':
								if('L' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case 'L':
								if('J' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case 'S':
								if('2' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case '2':
								if('S' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case 'Z':
								if('5' == *backw)
									result = 3;
								else
									result = 0;
								break;
							case '5':
								if('Z' == *backw)
									result = 3;
								else
									result = 0;
								break;
						}
					}
					break;
				default:
					if((*forw == *backw) && (result <= 2))
						result = 2;
					else
						result = 0;
					break;
			}
			++forw;
			--backw;
		}

		switch(result){
			case 0:
				printf("%s is not a palindrome.\n", temp);
				break;
			case 1:
				printf("%s is a mirrored palindrome.\n", temp);
				break;
			case 2:
				printf("%s is a regular palindrome.\n", temp);
				break;
			case 3:
				printf("%s is a mirrored string.\n", temp);
				break;
		}
	}
	return 0;
}
