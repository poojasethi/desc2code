
#include <string.h>
#include <stdlib.h>
#include <iostream>
#include <cstdio>

using namespace std;

#define M 128
#define N 128

bool graph[N][M];
int matchL[N];
int matchR[M];
bool seen[M];
int n,m;

bool bpm(int u){
    for(int v=0;v<n;v++)if(graph[u][v]){
        if(seen[v]){
            continue;
        }
        seen[v] = true;
        if(matchR[v]<0||bpm(matchR[v])){
            matchL[u] = v;
            matchR[v] = u;
            return true;
        }
    }
    return false;
}

int mbpm(){
    memset(matchL,-1,sizeof(matchL));
    memset(matchR,-1,sizeof(matchR));
    int cnt = 0;
    for(int i=0;i<m;i++){
        memset(seen,false,sizeof(seen));
        if(bpm(i)){
            cnt++;
        }
    }
    return cnt;
}

int main()
{
   // Read input and populate graph[][]
   // Set m, n

   scanf("%d",&n);
   m=n;
   memset( matchL, -1, sizeof( matchL ) );
   memset( matchR, -1, sizeof( matchR ) );
   int cnt = 0;
   int q;
   scanf("%d",&q);
   while (q--) {
      int x,y;
      scanf("%d%d",&x,&y);
      graph[x-1][y-1]=true;
   }
   printf("%d\n",mbpm());
   // cnt contains the number of happy pigeons
   // matchL[i] contains the hole of pigeon i or -1 if pigeon i is unhappy
   // matchR[j] contains the pigeon in hole j or -1 if hole j is empty

   return 0;
}