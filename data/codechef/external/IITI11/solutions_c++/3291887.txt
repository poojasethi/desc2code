#include <iostream>
#include <cstdio>
#include <cstring>

using namespace std;

int bgraph[305][305];

int checkpair(int u, int matchR[], int seen[], int N) 
{

	int i, j , v;

	for (v = 0; v  < N; v++) 
	{
		if(bgraph[u][v]  && (seen[v] == 0))
		{
			seen[v] = 1;
			if(( matchR[v] == -1 ) || (checkpair(matchR[v] , matchR, seen, N)  > 0)) 
			{
				matchR[v] = u;
				return 1;	
			}
		}
	}
	return 0;
}

int main() 
{
	int N, i, j , u, v;
	int T;
	string s;
	long long int count;
	int matchR[305];
	int seen[305];


	cin >> N;
	cin >> T;
		// input in bipartite graph
	for (i = 0; i < N; i++) 	
	{
		for (j = 0; j < N; j++) 
		{
				bgraph[i][j] =  0;
		}
	}
	for (i = 0; i < T; i++) 
	{
		cin >> u >> v;
		bgraph[u-1][v-1] = 1;
	}

	for (i = 0; i < N; i++) 
	{
		matchR[i] = -1;
	}
	count = 0;
	for (u = 0; u < N; u++) 
	{
		memset(seen, 0, N*sizeof(int) );
		count += checkpair(u, matchR, seen, N);	
	}
	cout << count << endl;
		
	
	return 0;
}

