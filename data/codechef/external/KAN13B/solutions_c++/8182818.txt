

//============================================================================
// Name        : riya.cpp
// Author      : riya1794
//============================================================================

#include<bits/stdc++.h>

using namespace std;

#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))

#define REP(i,a,b) for(LL i=a;i<b;i++)
#define rep(i,b) for(LL i=0;i<b;i++)
#define rep1(i,b) for(LL i=1;i<=b;i++)

#define pdn(n) printf("%d\n",n)
#define pln(n) printf("%ld\n",n)
#define plln(n) printf("%lld\n",n)
#define pn(n) printf("\n")
#define psn(n) printf("%s\n",n)

#define s2ll(n1,n2) scanf("%lld%lld",&n1,&n2)
#define sll(n) scanf("%lld",&n)
#define sl(n) scanf("%ld",&n)
#define sd(n) scanf("%d",&n)
#define ss(n) scanf("%s",n)

#define ass(n,a,b) assert(n>=a&&n<=b)

typedef long long LL;

#define MOD 100000009
vector<pair<LL,LL> > adj[1000010];
vector<pair<LL,LL> > pred[1000010];
stack<LL> s,s1;
double dist[102][102];
double hs[102][102];
/* https://www.codechef.com/problems/KAN13B */
double dis(int a,int b,int c,int d){
	if(hs[a][b] > hs[c][d])
	{
		return 0.5 + 0.5 * sqrt(1 + (hs[a][b] - hs[c][d]) * (hs[a][b] - hs[c][d]));
	} else{
		return -0.5 + 1.5 * sqrt(1 + (hs[a][b] - hs[c][d]) * (hs[a][b] - hs[c][d]));
	}
}
int main()
{
    LL t,n,m,b,test,r,w,u,i,v,c,q,j,h;
    double x;
    sll(test);
    rep1(t,test)
    {
        cout<<"Case "<<t<<":"<<endl;
        s2ll(r,c);
        rep1(i,r)
        {
            rep1(j,c)
            {
                cin>>hs[i][j];
            }
        }
        sll(q);
        while(q--)
        {
            LL s1,s2,e1,e2;
            s2ll(s1,e1);
            s2ll(s2,e2);

            v=((s2>s1) ? 1 : -1);
            h=((e2>e1) ? 1 : -1);
            dist[s1][e1] =0.0;
            for(i=s1+v ; i!=s2+v ; i+=v)
            {
                dist[i][e1] = dist[i-v][e1] + dis(i-v,e1 , i,e1);
            }
            for(i=e1+h ; i!=e2+h ; i+=h)
            {
                dist[s1][i] = dist[s1][i-h] + dis(s1,i-h, s1,i);
            }
            for(i=s1+v ; i!=s2+v ; i+=v)
            {
                for(j=e1+h ; j!=e2+h ; j+=h)
                {
                    dist[i][j] = min(dist[i-v][j] + dis(i-v,j, i,j) , dist[i][j-h] + dis(i,j-h, i,j));
                }
            }
            printf("%0.6f\n",dist[s2][e2]);
        }
    }

    return 0;
}
