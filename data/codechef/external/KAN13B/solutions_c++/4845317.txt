#include <iostream>
#include <iomanip>
#include <cstring>
#include <queue>
#include <cmath>
#include <cstdio>
using namespace std;
#define pii pair<double,int>
int X[4]={-1,1,0,0};
int Y[4]={0,0,-1,1};
int mrk[101][101];
int f[101][101];
double D[101][101],cs[101][101][4];
int main()
{
    int t;
    scanf("%d",&t);
    for(int ii=1;ii<=t;ii++)
    {
        printf("Case %d:\n",ii);
        int r,c;
        scanf("%d%d",&r,&c);
        double H[r][c];
        for(int i=0;i<r;i++)
            for(int j=0;j<c;j++)
                scanf("%lf",&H[i][j]);
        for(int i=0;i<r;i++)
        {
            for(int j=0;j<c;j++)
            {
                for(int k=0;k<4;k++)
                {
                    int a=i+X[k],b=j+Y[k];
                    if(a<0 || a>=r || b<0 || b>=c) continue;
                    if(H[i][j]>H[a][b])
                        cs[i][j][k]=0.5+0.5*sqrt(1.0+(H[i][j]-H[a][b])*(H[i][j]-H[a][b]));
                    else
                        cs[i][j][k]=-0.5+1.5*sqrt(1.0+(H[i][j]-H[a][b])*(H[i][j]-H[a][b]));
                }
            }
        }
        int q;
        scanf("%d",&q);
        while(q--)
        {
            memset(mrk,0,sizeof(mrk));
            memset(f,0,sizeof(f));
            int x1,y1,x2,y2;
            scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
            x1--;y1--;x2--;y2--;
            priority_queue<pii,vector<pii>,greater<pii> >pq;
            pq.push(pii(0,x1*c+y1));
            while(!pq.empty())
            {
                pii p=pq.top();pq.pop();
                int pp=p.second;
                double d=p.first;
                int x=pp/c;
                int y=pp-c*(pp/c);
                if(x==x2 && y==y2) break;
                //cout<<x<<" "<<y<<" "<<d<<"*\n";
                if(mrk[x][y]==1) continue;
                mrk[x][y]=1;
                for(int i=0;i<4;i++)
                {
                    int a=x+X[i],b=y+Y[i];
                    if(a<0 || a>=r || b<0 || b>=c) continue;
                    //cout<<a<<" "<<b<<"\n";
                    double dis=cs[x][y][i];
                    /*if(H[x][y]>H[a][b])
                        dis=0.5+0.5*sqrt(1.0+(H[x][y]-H[a][b])*(H[x][y]-H[a][b]));
                    else
                        dis=-0.5+1.5*sqrt(1.0+(H[x][y]-H[a][b])*(H[x][y]-H[a][b]));
                    //cout<<dis<<"\n";*/
                    if(f[a][b]==0 || D[a][b]>d+dis)
                    {
                        f[a][b]=1;
                        D[a][b]=d+dis;
                        pq.push(pii(D[a][b],a*c+b));
                    }
                }
            }
            printf("%.6lf\n",D[x2][y2]);
        }
    }
    return 0;
}
