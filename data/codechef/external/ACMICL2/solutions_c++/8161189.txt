#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll mod=1000000007;
inline vector <vector <ll > > mat_mul(vector <vector <ll > > &A, vector <vector <ll > > &B)
{
	int n=A.size();
	vector<vector<ll > > ans(n,vector<ll >(n,0));
	for(int i=0;i<n;i++)
    {
        for(int j=0;j<n;j++)
        {
            for(int k=0;k<n;k++)
            {
                ans[i][j]=(ans[i][j]+(A[i][k]*B[k][j])%mod)%mod;
            }
        }
    }
    return ans;
}

inline vector<vector<ll > > mat_power(vector<vector<ll > > &A,ll b)
{
    if(b==1)
    {
        return A;
    }
    vector<vector<ll > > ans=mat_power(A,b/2);
    ans=mat_mul(ans,ans);
    if(b%2)
    {
        ans=mat_mul(ans,A);
    }
    return ans;
}

int main()
{

    ios_base::sync_with_stdio(false);
    ll n,h,d;
    cin>>n;
    while(n--)
    {
        cin>>h>>d;
        if(h==0 && d==0)
        {
            cout<<"1"<<endl;
            continue;
        }
        if(h>d)
        {
            cout<<"0"<<endl;
            continue;
        }
        if(h==1)
        {
            cout<<"1"<<endl;
            continue;
        }



    vector<vector<long long int > > v(h+1,vector<long long int >(h+1,0));
    v[0][1]=1;
    if(h>=2)
    {
        v[1][2]=1;
    }
    for(int i=2;i<=h;i++)
    {
        v[i][i-1]=1;
        if((i+1)<=h)
        {
            v[i][i+1]=1;
        }
    }
    v[h][h]=1;
    
    vector<vector<long long int > > ans=mat_power(v,d);
    cout<<ans[0][h]%mod<<endl;

}
}