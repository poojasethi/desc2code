#include <bits/stdc++.h>
using namespace std;
long long int mod=1000000007;
inline vector<vector<long long int > > mat_mul(vector<vector<long long int > > &A,vector<vector<long long int > > &B)
{
	int n=A.size();
	vector<vector<long long int > > ans(n,vector<long long int >(n,0));
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<n;j++)
		{
			for(int k=0;k<n;k++)
			{
				ans[i][j]=(ans[i][j]+A[i][k]*B[k][j])%mod;
			}
		}
	}
	return ans;
}
inline vector<vector<long long int> > mat_power(vector<vector<long long int> > &A,long long int b)
{
	if(b==1)
	{
		return A;
	}
	vector<vector<long long int > > ans=mat_power(A,b/2);
	ans=mat_mul(ans,ans);
	if(b%2)
	{
		ans=mat_mul(ans,A);
	}
	return ans;
}
int main()
{
	ios_base::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--)
	{
		int h;
		long long int d;
		cin>>h>>d;
			vector < vector <long long int> > A(h+1,vector <long long int> (h+1,0));
for (int i = 0; i <= h; ++i)
{
int l1=max(i-1,0);
int l2=i+1;
A[i][l1]=1;
if(l2 < h)
A[i][l2]=1;
}
		if(d==0)
		{
			cout<<"0\n";
			continue;
		}
		vector<vector<long long int> > ans=mat_power(A,d);
		cout<<ans[h][0]<<"\n";
	}
}