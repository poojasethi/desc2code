#include<stdio.h>
int ar[16][16];
void rec_even(int l,int n,int);
void rec_odd(int l,int n,int);
int main(){
    int n,l,i,j;
    //printf("enter the dimension:");
    scanf("%d",&l);
    int m= l*l;
    if(l%2==0){
        rec_even(l,m,0);
    }
    else{
        rec_odd(l,m,0);
    }

    printf("\n");
    for(i=0;i<l;i++){
        for(j=0;j<l;j++){
            printf("%3d ",ar[i][j]);
        }
        printf("\n");
    }
    return 0;
}
void rec_even(int l,int n,int p){
    int i,j;
    //printf("%d\t",p);

    if(l<1){
        return;
    }
    for(i=0;i<=l-2;i++){
        ar[0+p][i+p]=n;
        n--;
    }
    for(i=0;i<=l-2;i++){
        ar[i+p][l-1+p]=n;
        n--;
    }
    for(i=l-1;i>0;i--){
        ar[l-1+p][i+p]=n;
        n--;
    }
    for(i=l-1;i>=1;i--){
        ar[i+p][0+p]=n;
        n--;
    }
    p++;
    rec_even(l-2,n,p);

}
void rec_odd(int l,int n,int p){
    int i,j;
    if(l<1){
        return;
    }
    if(l==1){
        ar[p][p]=n;
    }
    for(i=l-1;i>=1;i--){
        ar[l-1+p][i+p]=n;
        n--;
    }
    for(i=l-1;i>=1;i--){
        ar[i+p][0+p]=n;
        n--;
    }
    for(i=0;i<=l-2;i++){
        ar[0+p][i+p]=n;
        n--;
    }
    for(i=0;i<=l-2;i++){
        ar[i+p][l-1+p]=n;
        n--;
    }
    p++;
    rec_odd(l-2,n,p);
}
