#include<iostream>
using namespace std;
int a[1003][1003];
void create_SpiralMatrix(int n)
{
    int i,j,num=n*n;
    char state;
    if(n%2==0)
    {
        state='R';i=1;j=1;
            while(num>=1)
    {
        if(state=='U')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i--][j]=num--;
            }i++;j++;
            state='R';
        }
        if(state=='L')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i][j--]=num--;
            }j++;i--;
            state='U';
        }
        if(state=='D')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i++][j]=num--;
            }i--;j--;
            state='L';
        }
        if(state=='R')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i][j++]=num--;
            }j--;i++;
            state='D';
        }
    }

    }
    else
    {
    	state='L';i=n;j=n;
    	    while(num>=1)
    {
        if(state=='U')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i--][j]=num--;
            }i++;j++;
            state='R';
        }
        if(state=='L')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i][j--]=num--;
            }j++;i--;
            state='U';
        }
        if(state=='D')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i++][j]=num--;
            }i--;j--;
            state='L';
        }
        if(state=='R')
        {
            while(j<=n&&(i<=n&&i>=1&&j>=1)&&a[i][j]==0)
            {
                a[i][j++]=num--;
            }j--;i++;
            state='D';
        }
    }

    }
}
void print_matrix(int n)
{
    int i,j;
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
            cout<<a[i][j]<<" ";cout<<endl;
    }
}
int main()
{
    int n,i,j;
    cin>>n;
    create_SpiralMatrix(n);
    print_matrix(n);
    return 0;
}