
There are n trees on a road in Chef's garden. Each tree has one of the three colours out of red, green or blue. You are given information about the colours of the trees by a string s. if s[i] is 'R', it means that i^th tree is red. Similarly 'G' denotes green and 'B' denotes blue colored tree.

Chef likes to create a beautiful pattern out of the tree colours. A pattern is called beautiful if all the trees of the same colour are continuous. eg. "RRBGG" and "GGBBB" are beautiful patterns, but "RGRB" is not a beautiful pattern because trees of red color are not continuous.


For achieving beautiful pattern, chef is permitted to change the colours of the trees. For changing the colour of i^th tree from any colour to any other colour, he needs to pay a cost of c[i] rupees. Find out the minimum amount of rupees the chef requires, to create a beautiful pattern out of the colours of the n trees.


Input

First line of the input contains a single integer T denoting number of test cases. 
Description of T test cases follows.
First line of each test case will contain a single integer n denoting number of trees on the road in chef's garden.
Second line will contain a single line containing string s as defined in the problem. 
Third line will contain n space separated integers denoting the array c, i.e. c[1], c[2], .., c[n].


Output

For each test case, print a single line containing a single integer denoting minimum amount of rupees needed to create a beautiful pattern. 


Constraints

1 ≤ T, n ≤ 10^5
1 ≤ c[i] ≤ 10^9
 Sum of n over all the test cases won't exceed 10^6 


Example
Input:
3
3
RGB
1 2 3
3
RRR
1 2 3
3
RBR
1 2 3

Output:
0
0
1

Explanation
Example case 1. Pattern is already beautiful. There is no need to pay any cost.
Example case 2. Pattern is already beautiful. There is no need to pay any cost.
Example case 3. Change colour of the first tree to blue. Then the pattern will BBR, which is beautiful pattern. Cost required will be 1. There is no way to create a beautiful pattern by paying less than 1 rupee. Hence answer is 1.
