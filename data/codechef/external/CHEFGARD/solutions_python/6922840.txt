#include<bits/stdc++.h>
#include<iostream>
using namespace std;
#define fre 	freopen("0.in","r",stdin),freopen("0.out","w",stdout)
#define abs(x) ((x)>0?(x):-(x))
#define MOD 100000000000007LL
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define mpa make_pair
#define pii pair<int,int>
#define fi first
#define se second
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
#define scanll(x) scanf("%lld",&x)
#define printll(x) printf("%lld\n",x)
#define boost ios_base::sync_with_stdio(0)
//vector<int> g[2*100000+5];int par[2*100000+5];
lld dp[100000+5][8][4];
bool fdp[100000+5][8][4];
int N,D[100000+5],C[100000+5];
lld cost(int i,int c)
{
	return c==D[i]?0:C[i];
}
lld rec(int i,int mask,int last)
{
	if(i==N+1)
		return 0;
	if(fdp[i][mask][last])
		return dp[i][mask][last];
	fdp[i][mask][last]=1;
	dp[i][mask][last]=MOD;
	for(int c=0;c<3;++c)
	{
		if((mask & (1<<c))==0)
		{
			if(c!=last)
				dp[i][mask][last]=min(dp[i][mask][last],
										cost(i,c) + rec(i+1,mask|(1LL<<last),c));
			else
				dp[i][mask][last]=min(dp[i][mask][last],
									cost(i,c) + rec(i+1,mask,c));
		}
	}
	//cout<<i<<' '<<mask<<' '<<last<<'\t'<<dp[i][mask][last]<<endl;
	return dp[i][mask][last];
}
void init()
{
	for(int i=0;i<=N+1;++i)
	{
		for(int mask=0;mask<=7;++mask)
		{
			for(int j=0;j<=2;++j)
			{
				fdp[i][mask][j]=0;
			}
		}
	}
}
int main()
{
	//fre;
	int T;
	cin>>T;
	while(T--)
	{
		cin>>N;
		init();
		char c;
		for(int i=1;i<=N;++i)
		{
			cin>>c;
			if(c=='R')
				D[i]=0;
			if(c=='G')
				D[i]=1;
			if(c=='B')
				D[i]=2;
		}
		for(int i=1;i<=N;++i)
		{
			scan(C[i]);
		}
		lld ans=MOD;
		ans=min(ans,rec(1,0,0));
		ans=min(ans,rec(1,0,1));
		ans=min(ans,rec(1,0,2));
		printll(ans);
	}
}
