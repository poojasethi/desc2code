#include <stdio.h>
#include <string>
#include <vector>

using namespace std;

int cubo[4][4][7];
int aux[4][4][7];
string comando;
vector<int> grafo[100];
int marc[100];
int tam;

void clean()
{
    for(int i=0; i<100; i++)
    {
        marc[i]=0;
        grafo[i].clear();
    }
}

void inicial()
{
    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            for(int k=0; k<6; k++)
            {
                cubo[i][j][k]=3*i+j+9*k;
            }
        }
    }
}

int mdc(int a, int b)
{
    if(b==0) return a;
    else return mdc(b,a%b);
}

void mover(char c)
{
    int tipo;
    if(c=='F') tipo=0;
    else if(c=='U') tipo=1;
    else if(c=='R') tipo=2;
    else if(c=='L') tipo=3;
    else if(c=='D') tipo=4;
    else if(c=='B') tipo=5;
    //copiar cubo
    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            for(int k=0; k<6; k++)
            {
                aux[i][j][k]=cubo[i][j][k];
            }
        }
    }
    //girar a face
    for(int i=0; i<3; i++)
    {
        for(int j=0; j<3; j++)
        {
            cubo[i][j][tipo]=aux[2-j][i][tipo];
        }
    }
    //girar a redondeza
    if(tipo==0)
    {
        for(int i=0; i<3; i++)
        {
            cubo[2][i][1]=aux[2-i][2][3];
            cubo[i][0][2]=aux[2][i][1];
            cubo[0][2-i][4]=aux[i][0][2];
            cubo[2-i][2][3]=aux[0][2-i][4];
        }
    }
    else if(tipo==1)
    {
        for(int i=0; i<3; i++)
        {
            cubo[0][i][0]=aux[0][i][2];
            cubo[0][i][3]=aux[0][i][0];
            cubo[2][2-i][5]=aux[0][i][3];
            cubo[0][i][2]=aux[2][2-i][5];
        }
    }
    else if(tipo==2)
    {
        for(int i=0; i<3; i++)
        {
            cubo[i][2][0]=aux[i][2][4];
            cubo[i][2][1]=aux[i][2][0];
            cubo[i][2][5]=aux[i][2][1];
            cubo[i][2][4]=aux[i][2][5];
        }
    }
    else if(tipo==3)
    {
        for(int i=0; i<3; i++)
        {
            cubo[i][0][0]=aux[i][0][1];
            cubo[i][0][4]=aux[i][0][0];
            cubo[i][0][5]=aux[i][0][4];
            cubo[i][0][1]=aux[i][0][5];
        }
    }
    else if(tipo==4)
    {
        for(int i=0; i<3; i++)
        {
            cubo[2][i][0]=aux[2][i][3];
            cubo[2][i][2]=aux[2][i][0];
            cubo[0][2-i][5]=aux[2][i][2];
            cubo[2][i][3]=aux[0][2-i][5];
        }
    }
    else if(tipo==5)
    {
        for(int i=0; i<3; i++)
        {
            cubo[2][i][4]=aux[i][0][3];
            cubo[2-i][2][2]=aux[2][i][4];
            cubo[0][2-i][1]=aux[2-i][2][2];
            cubo[i][0][3]=aux[0][2-i][1];
        }
    }
}

void dfs(int node)
{
    marc[node]=1;
    tam++;
    for(int i=0; i<grafo[node].size(); i++)
    {
        if(marc[grafo[node][i]]==0)
        {
            dfs(grafo[node][i]);
        }
    }
}

int main()
{
    int n;
    int d;
    int cur;
    char tmp[1010];
    scanf("%d", &n);
    for(int t=0; t<n; t++)
    {
        scanf(" %s", tmp);
        comando=string(tmp);
        inicial();
        clean();
        cur=0;
        while(cur<comando.size())
        {
            if(cur+1==comando.size())
            {
                mover(comando[cur]);
                cur++;
            }
            else if(comando[cur+1]=='2')
            {
                for(int i=0; i<2; i++)
                {
                    mover(comando[cur]);
                }
                cur=cur+2;
            }
            else if(comando[cur+1]=='\'')
            {
                for(int i=0; i<3; i++)
                {
                    mover(comando[cur]);
                }
                cur=cur+2;
            }
            else
            {
                mover(comando[cur]);
                cur++;
            }
        }
        //teste
        /*for(int k=0; k<6; k++)
        {
            for(int i=0; i<3; i++)
            {
                for(int j=0; j<3; j++)
                {
                    printf("%d ", cubo[i][j][k]);
                }
                printf("\n");
            }
            printf("\n\n");
        }*/
        //monta grafo
        for(int i=0; i<3; i++)
        {
            for(int j=0; j<3; j++)
            {
                for(int k=0; k<6; k++)
                {
                    grafo[cubo[i][j][k]].push_back(3*i+j+9*k);
                }
            }
        }
        //calcula ciclos
        d=1;
        for(int i=0; i<54; i++)
        {
            if(marc[i]==0)
            {
                tam=0;
                dfs(i);
                d=tam*d/mdc(tam,d);
            }
        }
        printf("%d\n", d);
    }
    return 0;
}