Consider a tree of N nodes. A maximal independent set of nodes of this tree is the maximal (by size) set S of nodes {v1, v2, ..., vm} such that for any i, j, where 1 ≤ i < j ≤ m, it holds that the nodes vi and vj are not connected by an edge.
Consider a following algorithm of finding the maximal independent set of nodes of a tree:

First, a permutation of N integers, each denoting a particular node, is picked. All the permutations have equal probability to be picked.
Then, we process the nodes one-by-one in the order defined by the permutation and maintain a set Sp (which is initially empty). We pick a node, and if it is not connected to any node from Sp, we add it to Sp.

Now the question is - what is the expected size of Sp?

Input
The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N denoting the number of tree nodes.
The next (N-1) lines contain pairs of integers Xi Yi, denoting the edges of the tree. 

Output
Output the expected size of the maximal independent set which is found by the described algorithm. Your answer will be considered correct if its' absolute or relative error will not exceed 10^-6.

Constraints

1 ≤ T ≤ 11
1 ≤ N ≤ 27
1 ≤ Xi, Yi ≤ N
Xi ≠ Yi


Example
Input:
2
3
1 2
2 3
5
1 2
1 3
3 4
3 5

Output:
1.6666666667
2.7333333333

Explanation
Example case 1. There are 3! = 6 possible permutations that can be picked. Let us try all of them:

(1, 2, 3): node 1 will be taken, node 2 will be skipped, because it is a neighbor node for 1 (that is already taken), node 3 will be taken. So we get the set Sp = {1, 3} of the size 2.
(1, 3, 2): node 1 will be taken, then node 3 will be taken as well, but node 2 will be skipped since it is a neighbor node for both 1 and 3, which are already taken. So we get the set Sp = {1, 3} of the size 2.
(2, 1, 3): node 2 will be added to the set, node 1 will be skipped because it is a neighbor of 2, and so will be node 3. So we get the set Sp = {2} of size 1.
(2, 3, 1): node 2 will be added to the set, then node 3 will be skipped, because it is a neighbor of 2, and so will be node 1. So we get the set Sp = {2} of size 1.
(3, 1, 2): node 3 will be taken, then node 1 will be taken as well, and then node 2 will be skipped as it is a neighbor of 1 and 3. So we get the set Sp = {1, 3} of size 2.
(3, 2, 1): node 3 will be taken, then node 2 will be skipped, because it is a neighbor node for 3 (which is already taken), then node 1 will be taken. So we get the set Sp = {1, 3} of size 2.

Now, let's calculate the average size of the set Sp. (2+2+1+1+2+2)/6=1.66666... - the answer for the corresponding test case.
