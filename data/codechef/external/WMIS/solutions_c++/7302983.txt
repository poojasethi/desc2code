#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <complex>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100010


vi g[N];double d[28],d1[28],dp[2][28][28],c[30][30];
int sz[28],rt;
void dfs(int u,int fa){
    sz[u]=0;
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        dfs(j,u);
    }
    memset(d,0,sizeof(d));
    double p=1,q=0;
    for(int i=0;i<g[u].size();i++){
        int j=g[u][i];
        if(j==fa)continue;
        memset(d1,0,sizeof(d1));
        q=0;
        for(int x=0;x<sz[j];x++){
            int y=sz[j]-1-x;
            if(dp[0][j][x]){
                if(p){
                    q+=p*dp[0][j][x]*c[sz[u]+sz[j]][sz[j]];
                }
                for(int k=0;k<sz[u];k++)if(d[k]){
                    int z=sz[u]-1-k;
                    for(int r=0;r<=sz[j];r++)
                    d1[k+r]+=d[k]*dp[0][j][x]*c[r+k][k]*c[sz[j]-r+z][z];
                }
            }
            if(dp[1][j][x]){
                if(p){
                    for(int r=0;r<=sz[u];r++)
                        d1[x+r]+=p*dp[1][j][x]*c[r+x][x]*c[sz[u]-r+y][y];
                }
                for(int k=0;k<sz[u];k++)if(d[k]){
                    int z=sz[u]-k-1;
                    for(int r=0;r<=k;r++)
                    d1[r+x]+=d[k]*dp[1][j][x]*c[r+x][x]*c[sz[u]-r+y][y];
                    for(int r=0;r<=x;r++)
                    d1[r+k]+=d[k]*dp[1][j][x]*c[r+k][k]*c[sz[j]-r+z][z];
                }
            }
        }
        sz[u]+=sz[j];p=q;
        memcpy(d,d1,sizeof(d));  
    }
    for(int i=0;i<=sz[u];i++){
        dp[1][u][i]=p;
        dp[0][u][i]=0;
    }
    for(int i=0;i<sz[u];i++){
        if(d[i]){
            for(int j=0;j<=i;j++)dp[1][u][j]+=d[i];
            for(int j=i+1;j<=sz[u];j++)dp[0][u][j]+=d[i];
        }
    }
    sz[u]++;
}
bool w[28][28];
int main()
{
    //freopen("1.txt","w",stdout);
    int T,i,j,k,ca=0,m,n;
    c[0][0]=1;
    for(i=1;i<=27;i++){
        c[i][0]=1;
        for(j=1;j<=i;j++)c[i][j]=c[i-1][j-1]+c[i-1][j];
    }
    scanf("%d",&T);
    while(T--){
        scanf("%d",&n);
        double tot=1;
        //memset(w,0,sizeof(w));
        for(i=0;i<n;i++)g[i].clear(),tot=tot*(i+1);
        for(i=1;i<n;i++){
            scanf("%d%d",&j,&k);j--,k--;
            g[j].pb(k);g[k].pb(j);
            w[j][k]=w[k][j]=1;
        }
        double ans=0;
        for(i=0;i<n;i++){
            rt=i;
            dfs(i,i);
            //DBG(i)
            double sum=0;
            for(j=0;j<n;j++)
            //cerr<<j<<" "<<dp[1][i][j]<<",",
            sum+=dp[1][i][j];
            ans+=sum/tot;
            //DBG(sum)
        }
        printf("%.9lf\n",ans);
        /*
        ans=0;
        int p[n+1];
        for(i=0;i<n;i++)p[i]=i;
        do{
            vi v;
            for(i=0;i<n;i++){
                int ok=1;
                for(j=0;j<v.size();j++){
                    k=v[j];
                    if(w[p[i]][k]){ok=0;break;}
                }
                if(ok)v.pb(p[i]);
            }
            ans+=v.size()/tot;
        }while(next_permutation(p,p+n));
        printf("ans=%.9lf\n",ans);
        */
    }
    return 0;
}