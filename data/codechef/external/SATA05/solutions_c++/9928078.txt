#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define FF first
#define SS second

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

const int mod = 1000000007;
const int N = 2005;

int A[2002];
LL S[N][N];
LL F[N], IF[N];
LL C[N];
LL ans[N];

LL _pow(LL a, LL b) {
  if(!b) return 1;
  if(b == 1) return a;
  if(b == 2) return a * a % mod;
  if(b & 1) {
    return a * _pow(a,b-1) % mod;
  }
  return _pow(_pow(a,b/2),2);
}

void pre() {
  S[0][0] = 1;
  rep(i,1,N) {
    rep(j,1,i+1) {
      S[i][j] = (j * S[i-1][j] + S[i-1][j-1]) % mod;
    }
  }

  F[0] = 1;
  rep(i,1,N) {
    F[i] = i * F[i-1] % mod;
  }

  IF[N-1] = _pow(F[N-1], mod-2);
  for(int i = N-2; i >= 0; i--) {
    IF[i] = IF[i+1] * (i + 1) % mod;
  }
}

int main() {
  pre();
  int n;
  S(n);
  rep(i,0,n) S(A[i]);
  rep(i,0,n) {
    rep(j,i+1,n) {
      A[j] -= A[i] * S[j+1][i+1] % mod;
      if(A[j] < 0) A[j] += mod;
    }
  }

  for(int i = n - 1; i >= 0; i--) {
    for(int j = i + 1; j < n; j++) {
      A[i] -= ans[j] * (F[j] * IF[j - i] % mod) % mod;
      if(A[i] < 0) A[i] += mod;
    }
    ans[i] = A[i] * IF[i] % mod;
  }

  rep(i,0,n) {
    LL res = 0;
    LL tmp = i;
    rep(j,0,n) {
      res += ans[j] * tmp % mod;
      tmp = tmp * i % mod;
    }
    res %= mod;
    printf("%lld ",res);
  }
  printf("\n");

  return 0;
}