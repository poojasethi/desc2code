#include<iostream>
#include<stack>
#include<stdio.h>
using namespace std;
long long int MinimumSum(int value[],int len)
{
    long long int tp=0;
    int t;
    int smallerRight[len];
    int smallerLeft[len];
    stack<int> temp;
    temp.push(0);
    for(int i=1;i<len;i++)
    {
        while(value[i]<value[temp.top()])
        {
          t=temp.top();
          temp.pop();
          smallerRight[t]=i;
          if(temp.empty())
            break;
        }
        temp.push(i);
    }
    while(!temp.empty())
    {
        smallerRight[temp.top()]=len;
        temp.pop();
    }
    temp.push(len-1);
    for(int i=len-2;i>=0;i--)
    {
        while(value[i]<=value[temp.top()])
        {
          t=temp.top();
          temp.pop();
          smallerLeft[t]=i;
          if(temp.empty())
            break;
        }
        temp.push(i);
    }
    while(!temp.empty())
    {
        smallerLeft[temp.top()]=-1;
        temp.pop();
    }

    for(int i=0;i<len;i++)
    {
        tp+=(long long int)(smallerRight[i]-i)*(long long int)(i-smallerLeft[i])*(long long int)value[i];
    }
    return tp;
}

int main()
{
   int t,n;
   int arr[100000];
   scanf("%d",&t);
   while(t--)
   {
       scanf("%d",&n);
       for(int i=0;i<n;i++)
        scanf("%d",&arr[i]);
       printf("%lld\n",MinimumSum(arr,n));
   }

}
