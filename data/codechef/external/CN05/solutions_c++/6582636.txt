#include<bits/stdc++.h>
using namespace std;

#define sz 2
#define mod 1000000007

typedef long long LL;
LL trans[sz][sz]={{1, 1}, {1, 0}};

LL MOD(LL num)
{
    return ((num%mod)+mod)%mod;
}

void multiply(LL a[sz][sz], LL b[sz][sz],  LL c[sz][sz])
{
    LL temp[sz][sz];
    for(int i=0;i<sz;i++)
    {
        for(int j=0;j<sz;j++)
        {
            temp[i][j]=0;
            for(int k=0;k<sz;k++)
            {
                temp[i][j]+=a[i][k]*b[k][j];
                temp[i][j]=MOD(temp[i][j]);
            }
        }
    }
    for(int i=0;i<sz;i++)
    {
        for(int j=0;j<sz;j++)
        {
            c[i][j]=temp[i][j];
        }
    }
}
void exponent(LL result[sz][sz], LL trans[sz][sz], LL power)
{
    while(power)
    {
        if(power & 1)
            multiply(result, trans, result);
        multiply(trans, trans, trans);
        power>>=1;
    }
}

int main()
{
    int test;
    scanf("%d", &test);
    while(test--)
    {
        LL trans[sz][sz]={{2, 3}, {1, 0}};
        LL result[sz][sz]={{1, 0}, {0, 1}};
        LL initial[sz]={5, 2};
        int n;
        scanf("%d", &n);
        n++;
        if(n==1)
        {
            printf("2\n");
            continue;
        }
        else if(n==2)
        {
            printf("5\n");
            continue;
        }
        exponent(result, trans, n-2);
        LL ans=0;
        for(int i=0;i<sz;i++)
        {
            ans+=result[0][i]*initial[i];
            ans=MOD(ans);
        }
        printf("%d\n", ans);
    }
}
