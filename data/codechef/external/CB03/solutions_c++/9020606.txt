// Training is Nothing.WILL is EVERYTHING!
#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<map>
#include<stack>
#include<stdio.h>
#include<math.h>
#include<string>
#include<assert.h>
#include<stdlib.h>
using namespace std;

long long countAllPalindromicSubsequences(string& s){
	long long n=s.size(),sum=0;	
	vector< vector<long long> > dp(n,vector<long long>(n,0));
	
	for(int len=1;len<=n;len++){
		long long ans =0;
		int i=0,j=len-1;
		for(int x=i+1;x<=(j-1);x++){
			for(int y=x;y<=(j-1);y++){
				ans+=dp[x][y];
			}
		}
		if(s[i] == s[j])
			dp[i][j]=1 + ans;
		sum+=dp[i][j];
		//cout<<dp[i][j]<<" ";
		for(i++,j++;j<n;i++,j++){
			if(len == 1){
				dp[i][j] = 1;
			}else if(len == 2){
				dp[i][j] = (s[i]==s[j]);
			}else{				
				for(int x=i;x<=(j-2);x++){
					ans-=dp[i][x];
				}
				for(int x=i+1;x<j;x++){
					ans+=dp[x][j-1];
				}
				if(s[i] == s[j])
					dp[i][j]=1 + ans;					
			}
			//cout<<dp[i][j]<<" ";
			sum+=dp[i][j];
		}
		//cout<<endl;
	}
	
	return sum;
}

int main(){
	int t;
	cin>>t;
	string s;
	while(t--){
		cin>>s;
		cout<<countAllPalindromicSubsequences(s)<<endl;
	}
	return 0;
}