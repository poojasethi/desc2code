//All palindromic subsequneces O(n^4)
//Dynamic Programming
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define mem(a,val) memset(a,val,sizeof(a))
#define nl printf("\n");
#define pb push_back
#define mp make_pair
//#define f first
//#define s second
#define cf I64
using namespace std;
LL dp[101][101];
int main()
{	LL t,i,j,k,l,len,n,m,ans=0,sum;
	string s;
	cin>>t;
	while(t--)
	{	cin>>s;
		n=s.length();
		mem(dp,0);
		ans=0;
		for(i=1;i<=n;i++) dp[i][i]=1;
		for(len=2;len<=n;len++)
		{	for(i=1;i+len-1<=n;i++)
			{	j=i+len-1;
				if(s[i-1]==s[j-1])
				{	sum=0;
					for(k=i+1;k<=j-1;k++)
						for(l=k;l<=j-1;l++)
							sum+=dp[k][l];
					dp[i][j]=sum+1;		
				}
			}
		}
		for(i=1;i<=n;i++)
			for(j=i;j<=n;j++)
				ans+=dp[i][j];
		cout<<ans<<endl;
	}
	return 0;
}
