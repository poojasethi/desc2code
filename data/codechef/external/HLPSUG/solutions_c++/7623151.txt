#include<bits/stdc++.h>
#include<iostream>
const long long int MAXN=1e3+1;
using namespace std;
#define ll long long int

#define all(c) c.begin(),c.end()


bool composite[MAXN]={0};
void sieve()
{
composite[0]=composite[1]=1;
for(int i=2;i<MAXN;i++)
{
    if(!composite[i])
    {
        for(int j=2*i;j<MAXN;j+=i)
        composite[j]=1;
    }
}


}
int main()
{

    ios_base::sync_with_stdio(false);
    cin.tie(0);
    int T;
    int N;
    int sum;
    sieve();
    cin>>T;
    while(T--)
    {
        cin>>N;
        sum=0;
        for(int i=29;i<=N;i++)
        {
            sum+=composite[i]?0:i;

        }
        cout<<sum<<endl;
    }
    return 0;
}
