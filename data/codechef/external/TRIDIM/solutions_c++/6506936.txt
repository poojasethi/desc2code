#include<bits/stdc++.h>
#define pb(x) push_back(x)
#define all(x) x.begin(), x.end()
#define cout2(x, y) cout << x << " " << y <<  endl
#define N 104

#define MOD 1000000007
#define INF (1<<28)

using namespace std;

int memo[N][N], P[N][N], T[N][N], n;

int DP(int fil, int col){
	
	if(fil == n)return 0;
	if(col > fil)return -INF;
	
	int &ret = memo[fil][col];
	
	if(ret != -1)return ret;
	int ans = T[fil][col];
	
	if(DP(fil + 1, col) >= DP(fil + 1, col + 1)){
		
		ans += DP(fil + 1, col);
		P[fil][col] = 0;
	}
	else{
		
		ans += DP(fil + 1, col + 1);
		P[fil][col] = 1;
		
	}
	
	return ret = ans;
}

long long fastPow(long long b, long long e){
	
	if(e < 0)return 0;
	long long ans = 1;
	
	while(e > 0){
	
		if(e&1)ans = ans * b;
		if(ans >= MOD)ans %= MOD;
		
		b = b * b;
		if(b >= MOD)b %= MOD;
		
		e >>= 1;
	}
	
	return ans;
}


int main(){

	while(scanf("%d", &n) == 1){
		
		for(int i = 0; i < n; i++)
			for(int j = 0; j < i + 1; j++)
				scanf("%d", &T[i][j]);
		

		memset(memo, -1, sizeof memo);
		DP(0, 0);
		
		int fil = 0, col = 0;
		long long ans = 0;
		
		for(int i = 0; i < n - 1; i++, fil++){
			
			if(P[fil][col] == 1)col++, ans = (ans * 2 + 1)%MOD;
			else ans = (ans * 2)%MOD;
		}

		printf("%lld\n", (ans + 1)%MOD);
		
	}

}

