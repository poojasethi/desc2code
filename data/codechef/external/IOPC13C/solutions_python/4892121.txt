// gskhirtladze

#include <iostream>
#include <stdio.h>
#include <math.h>
#include <algorithm>
#include <vector>
#include <map>
#include <queue>
#include <string>

#define fi first
#define se second
#define pb push_back
#define mk make_pair
#define Pii pair < int , int >
#define tree int t,int l,int r
#define left 2*t,l,(l+r)/2
#define right 2*t+1,(l+r)/2+1,r
#define get(x) scanf("%d",&x)
#define LL long long
#define INF 1000000000
#define eps 0.00000001
#define P7 1000000007
#define P9 1000000009
#define N3 2555
#define N5 262145
#define N6 1048577
#define SS system("pause")

using namespace std;

LL gcd(LL A,LL B) {
    return A>B?gcd(B,A):A?gcd(B%A,A):B; }

LL lcm(LL A,LL B) {
    return A/gcd(A,B)*B; }

LL pow(LL A,LL B,LL P) {
   if (!B) return 1%P;
   LL h=pow(A,B/2,P); h*=h;
   h%=P; if (B%2) h*=A; return h%P;
}

int lp[N6];
vector < int > pr;
void get_pr(int N) {
 for (int i=2;i<=N;i++)
  {
   if (lp[i] == 0)
    {
     pr.pb(i);
     lp[i]=i;
    }
   for (int j=0;j<pr.size()&& pr[j]<=lp[i] && pr[j]*i<=N;j++)
     lp[pr[j]*i]=pr[j];
  }
}

int tst;
void get_ready() {
     //freopen(".in","r",stdin);
     //freopen(".out","w",stdout);
     tst=1; get(tst);
     get_pr(N5);
 }

vector < int > g1,g2,g[N5];
int p1[N5],p2[N5],f[N5],p[N5];
int n,i,j,a,b,z,indx,inter,ans;

void find_p(int u,int s)
 {
  f[u]=inter;
  if (s > z)
   { s=z; indx=u; }
  for (int i=0;i<g[u].size();i++)
   if (f[g[u][i]] != inter) { p[g[u][i]]=u; find_p(g[u][i],s+1); }
 }

Pii Z[2][N5];
int st,o,h;

void go(int u)
 {
  f[u]=inter;
  h++;
  for (int i=0;i<g[u].size();i++)
   if (f[g[u][i]] != inter)
    {
     Z[o][u].fi++;
     go(g[u][i]);
    }
  Z[o][u].se=h;
  h--;
 }

int same(int x,int y)
 {
  inter++; st=0; o=0; h=0; go(x);
  inter++; st=0; o=1; h=0; go(y);
  sort(Z[0]+1,Z[0]+2*n+1);
  sort(Z[1]+1,Z[1]+2*n+1);
  int ret=1;
  for (int i=1;i<=2*n;i++)
   if (Z[0][i] != Z[1][i]) ret=0;
  for (int i=1;i<=2*n;i++)
   Z[0][i].fi=0,Z[0][i].se=0,
   Z[1][i].fi=0,Z[1][i].se=0;
  return ret;
 }

int T1,T2;

main()
{get_ready();
 while (tst--){
ans=0;
get(n);
get(T1);T1++;
for (i=1;i<n;i++)
 get(a),get(b),a++,b++,g[a].pb(b),g[b].pb(a);
get(T2);T2+=n+1;
for (i=1;i<n;i++)
 get(a),get(b),a+=n+1,b+=n+1,g[a].pb(b),g[b].pb(a);

z=-1; indx=-1; find_p(1,0); inter++;
z=-1; p[indx]=0; find_p(indx,0); inter++;
while (indx)
  { g1.pb(indx); indx=p[indx]; }

z=-1; indx=-1; find_p(n+1,0); inter++;
z=-1; p[indx]=0; find_p(indx,0); inter++;
while (indx)
 { g2.pb(indx); indx=p[indx]; }

//for (i=max(0,(int)g1.size()/2-1);i<min((int)g1.size()/2+1,(int)g1.size());i++)
 //for (j=max(0,(int)g2.size()/2-1);j<min((int)g2.size()/2+1,(int)g2.size());j++)
  ans+=same(T1,T2);

printf(ans?"1\n":"0\n");

for (i=1;i<=2*n;i++)
  g[i].clear(),p[i]=0,f[i]=0;
g1.clear();g2.clear();
inter=0;
}}
