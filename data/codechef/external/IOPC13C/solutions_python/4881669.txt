#include<iostream>
#include<cstring>
#include<stdio.h>
#include<algorithm>
#include<cmath>
#include<vector>
#include<queue>
#include<stack>
#include<map>
#include<set>
#define mp make_pair
#define pb push_back
#define MAX(a,b) ((a)>(b)?(a):(b))
#define MIN(a,b) ((a)<(b)?(a):(b))
#define F first
#define S second
#define ll long long
#define pp pair<int,int>
#define INF 2000000000
#define P 91
using namespace std;
const int N=100005;
int T,n,i,j,x,y,p[2],k[2],level[2][N],par[2][N],q;
bool f[2][N],answer;
vector<int> g[2][N];
ll cnt[2][N],X,Y;
vector<pair<ll,int> > num[2][N];

void go(int u,int p){
     par[j][u]=p;
     level[j][u]=level[j][p]+1;
     k[j]=MAX(k[j],level[j][u]);
     int i,t=0;
     for(i=0;i<g[j][u].size();i++)
        if(g[j][u][i]!=p)go(g[j][u][i],u),t=1;
     if(!t)cnt[j][u]=1,num[j][level[j][u]].pb(mp(1,par[j][u]));
}

int main()
{scanf("%d",&T);
 while(T--){
    for(j=0;j<2;j++){
        for(i=1;i<=n;i++)cnt[j][i]=0;
        for(i=1;i<=n;i++)level[j][i]=par[j][i]=f[j][i]=0;
        for(i=1;i<=n;i++)g[j][i].clear(),num[j][i].clear();
    }

    scanf("%d",&n);
    /*ganuleba*/
    answer=1;
    for(j=0;j<2;j++){
        scanf("%d",&p[j]);
        p[j]++;
        for(i=1;i<n;i++){
            scanf("%d%d",&x,&y);
            x++;
            y++;
            g[j][x].pb(y);
            g[j][y].pb(x);
        }
        go(p[j],0);
    }
    if(k[0]!=k[1]){printf("0\n");continue;}

    for(q=k[0];q>1 && answer;q--){
        if(num[0][q].size()!=num[1][q].size()){answer=0;break;}
        sort(num[0][q].begin(),num[0][q].end());
        sort(num[1][q].begin(),num[1][q].end());
        for(i=0;i<num[0][q].size();i++)
          if(num[0][q][i].F!=num[1][q][i].F){answer=0;break;}
        if(!answer)break;
        num[1][q][0].F=1;
        for(i=1;i<num[0][q].size();i++){
            num[1][q][i].F=num[1][q][i-1].F;
            if(num[0][q][i].F!=num[0][q][i-1].F)num[1][q][i].F++;
        }

        for(i=0;i<num[0][q].size();i++)num[0][q][i].F=num[1][q][i].F;

        for(j=0;j<2;j++){
            for(i=0;i<num[j][q].size();i++){
                X=num[j][q][i].F;
                cnt[j][num[j][q][i].S]*=P;
                cnt[j][num[j][q][i].S]+=X;
            }
            for(i=0;i<num[j][q].size();i++){
                x=num[j][q][i].S;
                if(!f[j][x])f[j][x]=1,num[j][q-1].pb(mp(cnt[j][x],par[j][x]));
            }
        }
    }
    if(answer==0){printf("0\n");continue;}
    printf("1\n");
 }
 return 0;
}
