//gskhirtladze
 
#include<stdio.h>
#include<iostream>
#include<algorithm>
#include<vector>
 
using namespace std;
 
struct name
 {
  long x;
  long y;
 };
 
bool operator<(name A,name B)
 {
  return (A.y < B.y || (A.y == B.y && A.x<B.x));
 }
 
vector <long> g[200000],c[200000];
bool fix1[200000],fix2[200000];
name p[200000];
name p2[200000];
long r1,r2,t,n,i,j,a,b;
bool ans;
long long dks1,dks2;
 
void df1(long now,long lp1)
 {
  fix1[now]=1;
  dks1++;
  long long noww=dks1;
  p[noww].x++;
  p[noww].y=lp1;
  for (int i=0;i<g[now].size();i++)
   if (!fix1[g[now][i]]) 
    {
     df1(g[now][i],lp1+1);
     p[noww].x++;
    }
 }
 
void df2(long now,long lp1)
 {
  fix2[now]=1;
  dks2++;
  long long noww=dks2;
  p2[noww].x++;
  p2[noww].y=lp1;
  for (int i=0;i<c[now].size();i++)
   if (!fix2[c[now][i]]) 
    {
     df2(c[now][i],lp1+1);
     p2[noww].x++;
    }
 }
main()
{
 cin>>t;
 while (t--)
  {
   for (i=0;i<200000;i++)
    {
     g[i].clear();
     c[i].clear();
     p[i].x=0;
     p[i].y=0;
     p2[i].x=0;
     p2[i].y=0;
     fix1[i]=0;
     fix2[i]=0;
    }
   cin>>n;
   cin>>r1;
   for (i=1;i<n;i++)
    {
     cin>>a>>b;
     g[a].push_back(b);
     g[b].push_back(a);
    }
   cin>>r2;
   for (i=1;i<n;i++)
    {
     cin>>a>>b;
     c[a].push_back(b);
     c[b].push_back(a);
    }
   dks2=0;
   dks1=0;
   df1(r1,1);
   df2(r2,1);
   sort(p+1,p+dks1+1);
   sort(p2+1,p2+dks2+1);
   ans=true;
   for (i=1;i<=dks1;i++)
    if (p[i].x != p2[i].x || p[i].y != p2[i].y) ans=false;
   cout<<ans<<endl;
  }
}