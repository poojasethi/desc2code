#include<vector>
#include<stack>
#include<set>
#include<map>
#include<queue>
#include<deque>
#include<string>
#include<iostream>
#include<algorithm>
#include<cstring>
#include<cassert>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<string>
 
using namespace std;
 
#define s(n)                                 scanf("%d",&n)
#define sl(n)                                   scanf("%lld",&n)
#define sf(n)                                   scanf("%lf",&n)
 
#define EPS                                             1e-9
 
#define FOR(i,a,b)                              for(int i=a;i<b;i++)
#define REP(i,n)                                FOR(i,0,n)
#define foreach(v,c)            for( typeof((c).begin()) v = (c).begin();  v != (c).end(); ++v)
 
#define mp                                              make_pair
#define pb                                              push_back
 
#define FF                                              first
#define SS                                              second
 
#define tri(a,b,c)                              mp(a,mp(b,c))
#define XX                                              first
#define YY                                              second.first
#define ZZ                                              second.second
 
/*Important ones*/
#define fill(a,v)                               memset(a,v,sizeof a)     //Works properly only for v = 0 or -1
#define all(x)                                  x.begin(),x.end()
 
#define SZ(v)                                   ((int)(v.size()))
#define DREP(a)                                 sort(all(a)); a.erase(unique(all(a)),a.end())
#define INDEX(arr,ind)                  (lower_bound(all(arr),ind)-arr.begin())
 
//typedefs. Use if you feel comfortable
typedef pair<int,int> PII;
typedef pair<long long,long long> PLL;
typedef pair<int,PII> TRI;

typedef vector<int> VI;
typedef long long LL;
typedef vector<LL> VL;
typedef vector<PII> VII;
typedef vector<PLL> VLL;
typedef vector<TRI> VT;
 
typedef vector<VI> VVI;
typedef vector<VL> VVL;
typedef vector<VII> VVII;
typedef vector<VLL> VVLL;
typedef vector<VT> VVT;

#define MAX 100010
#define INF 1e9

int N, R1, R2, t1, t2, parent[MAX], curr;
VVI adl1, adl2;
map<VI, int> sbt;

int dfs1(int s){
	VI temp;
	map<VI, int>::iterator it;
	FOR(i,0,SZ(adl1[s])){
		if(adl1[s][i] == parent[s])
			continue;
		parent[adl1[s][i]] = s;
		temp.pb(dfs1(adl1[s][i]));
//		cout<<adl1[s][i]<<" n "<<temp[SZ(temp)-1]<<endl;
	}
	sort(all(temp));
	it = sbt.find(temp);
	if(it != sbt.end())
		return sbt[temp];
	return sbt[temp] = curr++;
}

int dfs2(int s){
	VI temp;
	map<VI, int>::iterator it;
	FOR(i,0,SZ(adl2[s])){
		if(adl2[s][i] == parent[s])
			continue;
		parent[adl2[s][i]] = s;
		temp.pb(dfs2(adl2[s][i]));
//		cout<<adl2[s][i]<<" hih "<<temp[SZ(temp)-1]<<endl;
	}
	sort(all(temp));
	it = sbt.find(temp);
	if(it != sbt.end())
		return sbt[temp];
	return sbt[temp] = curr++;
}

int main(){
	
	int tests;
	
	s(tests);
	FOR(testcases,0,tests){
		curr = 0;
		sbt.clear();
		adl1.resize(0);
		adl2.resize(0);
		s(N);
		adl1.resize(N);
		adl2.resize(N);
		s(R1);
		FOR(i,1,N){
			s(t1);	s(t2);
			adl1[t1].pb(t2);
			adl1[t2].pb(t1);
		}
		s(R2);
		FOR(i,1,N){
			s(t1);	s(t2);
			adl2[t1].pb(t2);
			adl2[t2].pb(t1);
		}
		fill(parent, -1);
		t1 = dfs1(R1);
		fill(parent, -1);
		t2 = dfs2(R2);
		if(t1 == t2)
			printf("1\n");
		else
			printf("0\n");
	}
	
	return 0;
	
}
