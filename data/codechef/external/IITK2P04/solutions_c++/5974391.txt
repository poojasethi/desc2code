
/*------------------------Subham Mishra--------------------------------------------------------*/
#include<bits/stdc++.h>
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pl(n) printf("%lld\n",n)
#define p(n) printf("%d\n",n)
#define pb push_back
#define mp make_pair
#define mod 1000000007LL
#define N 200005
#define LN 25
#define SQN 5000
#define SQN1 500100000000000
#define ll  long long
#define gc getchar_unlocked
using namespace std;

ll powmod(long long a, long long b, long long c)
{
    ll ret=1LL;
 // cout<<a<<" "<<b<<" "<<c<<endl;
    while(b)
    {
        if(b & 1)
            ret = (ret*a)%c;
        a=(a*a)%c;

        b>>=1;
     }
    return (ret)%c;
}
int n,m;
int xx[4]={-1,1,0,0};
int yy[4]={0,0,1,-1};
int fans,ans;
int vis[1002][1002];
int dfsno[1002][1002];
pair<int,int>parent[1002][1002];
int ar[1002][1002];
int co[1000002];
int ma1[1002][1002],ma2[1002][1002];
struct node
{
 int xx;
 int yy;
 node(int x,int y)
 {
 xx=x;
 yy=y;
 }
};
void dfs(int i,int j,int va,int no)
{
  vis[i][j]=1;
  dfsno[i][j]=no++;
  stack<node>s1;
  s1.push(node(i,j));
  while(!s1.empty())
  {
  struct node pp=s1.top();
  int f=0;
  if(vis[pp.xx][pp.yy]==1)
  {
  int ii;
  for(ii=0;ii<4;++ii)
  {
    int x=pp.xx+xx[ii];
    int y=pp.yy+yy[ii];
    if(x>=0 && x<n && y>=0 && y<m && (ar[x][y]==va))
    {
      if(vis[x][y]==0)
      {
      f=1;
      parent[x][y]=make_pair(pp.xx,pp.yy);
      s1.push(node(x,y));
      vis[x][y]=1;
      }
      else if((vis[x][y]==1) && (parent[pp.xx][pp.yy]!=make_pair(x,y)))
      fans=max(fans,co[va]);
    }
   }
  }
  if(f==0)
  {
  //	 cout<<ma1[2][1]<<endl;
    s1.pop();
    // cout<<ma1[2][1]<<endl;
    vis[pp.xx][pp.yy]=2;
    if(ma1[pp.xx][pp.yy]==-1)
    fans=max(fans,1);
    else if(ma2[pp.xx][pp.yy]==-1)
    fans=max(fans,ma1[pp.xx][pp.yy]+1);
    else
    fans=max(fans,ma1[pp.xx][pp.yy]+ma2[pp.xx][pp.yy]+1);
     //cout<<ma1[2][1]<<endl;
     if((pp.xx!=i)||(pp.yy!=j))
     {
    int x1=parent[pp.xx][pp.yy].first;
    int y1=parent[pp.xx][pp.yy].second;
    int maxm;
    if(ma1[pp.xx][pp.yy]==-1)
    maxm=1;
    else
    maxm=ma1[pp.xx][pp.yy]+1;
    if(maxm>ma1[x1][y1])
    {
     ma2[x1][y1]=ma1[x1][y1];
     ma1[x1][y1]=maxm;
    }
    else if(maxm>ma2[x1][y1])
    ma2[x1][y1]=maxm;
    //cout<<pp.xx<<" "<<pp.yy<<" "<<ma1[pp.xx][pp.yy]<<" "<<ma2[pp.xx][pp.yy]<<endl;
    //cout<<x1<<" "<<y1<<" "<<maxm<<" "<<ma1[x1][y1]<<" "<<ma2[x1][y1]<<endl;
    }
  }
 // cout<<ma1[2][1]<<endl;
  }
}
int main()
{
int i,j;
fans=0;
memset(co,0,sizeof(co));
memset(dfsno,0,sizeof(dfsno));
memset(ma1,-1,sizeof(ma1));
memset(ma2,-1,sizeof(ma2));
cin>>n>>m;
for(i=0;i<n;++i)
for(j=0;j<m;++j)
{
s(ar[i][j]);
co[ar[i][j]]++;
vis[i][j]=0;
}
for(i=0;i<n;++i)
for(j=0;j<m;++j)
{
 if(vis[i][j]==0)
 dfs(i,j,ar[i][j],1);
}
cout<<fans<<endl;
 return 0;
}
