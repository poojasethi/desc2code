#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<string>
#include<string.h>
#include<cstring>
#include<stack>
#include<queue>
#include<cassert>
#include<cmath>
using namespace std;
 
#define LL long long int
#define PII pair<int,int>
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define debug(args...) do {cerr << #args << ": "; dbg,args; cerr << endl;} while(0)
 
int vis[1000001];
int main(){
int t,n,a,b,c,d,k,q;
int citer = 1;
scanf("%d",&t);
while(t--){
queue<PII> cq;
scanf("%d %d %d %d %d %d %d", &n,&a,&b,&c,&d,&k,&q);
int lcm = (k * d) / (__gcd (k, d));
int req = q % k;
vis[n % lcm] = citer;
cq.push(MP(0,n%lcm));
while(!cq.empty()){
int steps = cq.front().first;
int rem = cq.front().second;
if(rem % k == req){
printf("%d\n", steps);
break;
}
cq.pop();
int nn;
nn = (rem + a)%lcm;
if(vis[nn] != citer)cq.push(MP(steps + 1, nn));vis[nn] = citer;
nn = ((rem - b)%lcm + lcm)%lcm;
if(vis[nn] != citer)cq.push(MP(steps + 1, nn));vis[nn] = citer;
nn = (rem * c)%lcm;
if(vis[nn] != citer)cq.push(MP(steps + 1, nn));vis[nn] = citer;
nn = (rem % d);
if(vis[nn] != citer)cq.push(MP(steps + 1, nn));vis[nn] = citer;
}
if(cq.size() == 0)
printf("-1\n");
citer ++;
}
return 0;
}
 
