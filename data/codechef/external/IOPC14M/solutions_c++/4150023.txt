#include<bits/stdc++.h>

using namespace std;

int visited[1001][2];
//int D[1001];

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,a,b,c,d,k,q;
        scanf("%d%d%d%d%d%d%d",&n,&a,&b,&c,&d,&k,&q);

        for(int i=0;i<=1000;i++)
        {
            visited[i][0]=false;
            visited[i][1]=false;
           // D[i]=987654321;
        }

        queue<pair<pair<int,int>,int> >Q;
        int ans=987654321;
        Q.push(make_pair(make_pair(n,0),0));
        Q.push(make_pair(make_pair(n%d,1),1));
        while(!Q.empty())
        {
            pair<pair<int,int>,int> top1=Q.front();
            Q.pop();
            if(q%k==top1.first.first%k)
            {
                ans=top1.first.second;
                break;
            }
            if(visited[top1.first.first][top1.second])
            {
                continue;
            }
            visited[top1.first.first][top1.second]=true;
            if(top1.second==1)
            {
                Q.push(make_pair(make_pair((top1.first.first+a)%d,top1.first.second+1),top1.second));
                Q.push(make_pair(make_pair(((top1.first.first-b)%d+d)%d,top1.first.second+1),top1.second));
                Q.push(make_pair(make_pair((top1.first.first*c)%d,top1.first.second+1),top1.second));
               // Q.push(make_pair(make_pair((top1.first.first+a)%d,top1.first.second+1),top1.second));
            }
                Q.push(make_pair(make_pair((top1.first.first+a)%k,top1.first.second+1),0));
                Q.push(make_pair(make_pair(((top1.first.first-b)%k+k)%k,top1.first.second+1),0));
                Q.push(make_pair(make_pair((top1.first.first*c)%k,top1.first.second+1),0));
        }

        if(ans==987654321)
        {
            printf("-1\n");
        }
        else
        {
            printf("%d\n",ans);
        }
    }
return 0;}
