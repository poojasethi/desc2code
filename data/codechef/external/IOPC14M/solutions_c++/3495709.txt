#include <iostream>
#include <string>
#include <vector>
#include <cstring>
#include <cstdio>
#include <deque>
#include <algorithm>
#include <queue>
#include <memory>

using namespace std;

int s[1000010];
int qu[1000010];
int f, r;

void ins(int val, int distance) {
    if (s[val] > distance) {
        s[val] = distance;
        qu[f++] = val;
    }
}

int gcd(int a, int b) {
    return a == 0 ? b : gcd(b%a, a);
}

int lcm(int a, int b) {
    return a * b / gcd(a, b);
}

int main() {
    int t; scanf("%d", &t);
    for (int e=0; e<t; ++e) {
        int n, a, b, c, d, k, q;
        cin >> n >> a >> b >> c >> d >> k >> q;

        int kk = k;
        k = lcm(k, d);

        q %= k;
        n %= k;
        a %= k;
        b %= k;
        c %= k;

        memset(s, 0x7f, (k + 2) * sizeof(int));
        s[n] = 0;

        f = 1; r = 0;
        qu[0] = n;

        while (f != r) {
            int cur = qu[r++];

            if (cur == q) break;

            int ncur = (cur + a) % k;
            ins(ncur, s[cur]+1);

            ncur = (cur - b + k) % k;
            ins(ncur, s[cur]+1);

            ncur = (cur * c) % k;
            ins(ncur, s[cur]+1);

            ncur = cur % d;
            ins(ncur, s[cur]+1);
        }

        int mn = 0x7f7f7f7f;
        for (int i=0; i<k/kk; ++i) {
            mn = min(mn, s[q%kk + i*kk]);
        }

        cout << (mn == 0x7f7f7f7f ? -1 : mn) << endl;
    }

    return 0;
}
