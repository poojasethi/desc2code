#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<bitset>
#include<map>
#include<iostream>
#include<queue>
#define test(t) while(t--)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)

#define p(n) printf("%lld\n",n)
#define rep(i,a,n) for(i=a;i<=n;i++)
#define vi vector<int>
#define vii vector< vector<int> >
#define vpii vector< pair<int,int> >
#define mii map<int,int>
#define pb push_back

#define mp make_pair
#define MOD 1000000007LL
#define lim 1e18
//#define inf 100000000
#define ll  long long
#define gc getchar_unlocked
#define inf 1000000000000LL
using namespace std;



int main()
{
int a,b,c,d,k,q1,n;
int visited[1000001];
int t,i;
int lcm;
int dest,tmp;
s(t);
int iter=1;
memset(visited,0,sizeof(visited));
while(t--)
{
   queue<pair<int,int> >q;
  s(n);s(a);s(b);s(c);s(d);s(k);s(q1);
  int g=__gcd(d,k);
  dest=(q1%k);
  lcm=(d*k)/g;
  q.push(make_pair(0,n%lcm));
  while(!q.empty())
  {
     int dist=q.front().first;
     int num=q.front().second;

     if(num%k==dest)
     {printf("%d\n",dist);
       break;}
       q.pop();
       tmp=(num+a)%lcm;
       if(visited[tmp]!=iter)
       {
         q.push(make_pair(dist+1,tmp));
         visited[tmp]=iter;
       }
       tmp=((num-b)%lcm+lcm)%lcm;
       if(visited[tmp]!=iter)
       {
         q.push(make_pair(dist+1,tmp));
         visited[tmp]=iter;
       }
       tmp=(num*c)%lcm;
       if(visited[tmp]!=iter)
       {
         q.push(make_pair(dist+1,tmp));
         visited[tmp]=iter;
       }
       tmp=(num%d);
       if(visited[tmp]!=iter)
       {
         q.push(make_pair(dist+1,tmp));
         visited[tmp]=iter;
       }
  }
  if(q.size()==0)
  printf("-1\n");
  iter++;
}
return 0;
}
