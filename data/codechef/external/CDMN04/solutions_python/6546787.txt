import java.util.Arrays;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {
        Scanner input = new Scanner(System.in);
        int T = input.nextInt();
        for (int t=0; t<T; t++) {
            int N = input.nextInt();
            long[] A = new long[N];
            for (int n=0; n<N; n++) {
                A[n] = input.nextLong();
            }
            Arrays.sort(A);
            long[][] dp = new long[N+1][60]; // dp[x][y] how many numbers from A[0..x-1] below 2^(y+1)
            dp[0][0] = 1;
            for (int n=1; n<=N; n++) {
                dp[n][0] = (A[0] == 1) ? 2 : 1;
            }
            for (int power=1; power<60; power++) {
                long number = 1L << power;
                dp[0][power] = 1;
                for (int x=1; x<=N; x++) {
                    // check if number is possible
                    int z = x-1;
                    while (z >= 0 && A[z] > number) z--;
                    long sum = 0;
                    while (z >= 0 && sum != number) {
                        sum += A[z];
                        z--;
                    }
                    if (sum == number) {
                        dp[x][power] = dp[z+1][power-1];
                    }
                    dp[x][power] += dp[x][power-1];
                }
            }
            System.out.println(dp[N][59]);
        }
    }

}
