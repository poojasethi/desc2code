Ok, A simple and straight forward task this time :-). You are given a NxN square matrix of numbers and a set of queries, for each query you have 
to return the row and the column number of the specified element.


Input
Input consists of several test cases which is specified by the first line. Each test case starts with 2 integers N (1 ≤ N ≤ 200) and Q (1 ≤ Q ≤ N*N), the size of the matrix and the number of queries. Then N lines follow each containing N integers describing the matrix. Finally Q lines each containing a 
single integer whose position in the matrix has to be found. Test cases are seperated by a new line. All numbers will fit in a signed 32 bit integer.



Output
For each test case output Q lines, each specifying the row and column index (1 based) of the given number. If the number doesn't exist output -1. If 
multiple answers exist output the one having the smallest row index and then column index (See example for clarification). Output a new line after each 
test case.


Example

Input:
2

3 3
5 1 3
7 8 2
2 4 1
1
2
9

4 6
1 2 3 4
5 6 7 8
8 7 6 5
4 3 2 1
1
8
10
2
20
5


Output:
1 2
2 3
-1

1 1
2 4
-1
1 2
-1
2 1


