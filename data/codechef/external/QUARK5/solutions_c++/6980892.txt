#include<stdio.h>
#include<iostream>
#include<cstring>
#include<algorithm>
#include<queue>
#include<math.h>
 
using namespace std;
int n,q;
 
struct node{
	int x,y,val;
}a[40001];
 
//int getchar_unlocked()  {return getchar();}
inline void Read(int &x) {
	register int c= getchar_unlocked();
	x = 0;
	for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
	for(; c>47 && c<58 ; c = getchar_unlocked()) {
		x = (x<<1) + (x<<3) + c - 48;
	}
}
 
int lo, hi, mi;
int binarySearch(int xx){
	lo=0; hi=n*n - 1;
	while(lo<hi){
	mi=(lo+hi)/2;
	if(a[mi].val>=xx) hi=mi; else lo=mi+1;
	}
	return hi;
}
 
bool comp(node xx,node yy){
	if(xx.val<yy.val) return true;
	else if(xx.val==yy.val){
		if(xx.x<yy.x) return true;
		else if(xx.x==yy.x) if(xx.y<yy.y) return true;
	}
	return false;
}
 
int main(){
	int t,i,j,res,xx,yy;
	Read(t);
	while(t--){
		Read(n);Read(q);
		for(i=0;i<n*n;i++){
			Read(a[i].val);
			a[i].x=(i+n)/n;
			a[i].y=(i%n)+1;
		}
		sort(a,a+n*n,comp);
		for(i=0;i<q;i++){
			Read(j);
			res=binarySearch(j);
			if(a[res].val!=j) printf("-1\n");
			else{ 
				while(res>0 && a[--res].val==j);
				if(a[res].val==j) printf("%d %d\n",a[res].x,a[res].y);
				else printf("%d %d\n",a[res+1].x,a[res+1].y);
			}
		}
	}
	return 0;
}
 