Our hero, Popeye is caught in a fix when he goes to visit some new buildings that his rival company is constructing. The strangest part about each building is that to he needs to pay 1 rupee to get into each building and 1 rupee again to get out of the building. However, the surprises don't end there. Inside the building, all of his money instatntly doubles up. The trick for you, the programmer is to find out how much money did Popeye have before he started going through the buildings if at the end of the journey, he loses all his money.

Input
First line of input contains t, the number of test cases. The next 't' lines specifies n, the number of buildings in each test cases.
t<=10
n<=15

Output
The output for each test case would be the amount of money that Popeye would have before he got into the building rounded off to three decimal digits.

Example

Input:

2
2
3

Output:

2.25
2.625

