#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <stdlib.h>
#include <math.h>
#include <stack>
#include <queue>
#include <string>

using namespace std;

typedef long long int Lint;

int LCS( string s1, string s2, int n1, int n2 ) {
    
    vector<vector<int> > A( n1 + 1, vector<int> ( n2 + 1 ) );
    int i, j;
    
    for( i = 0;i <= n1;i++ )
        A[ i ][ 0 ] = 0;
    
    for( i = 0;i <= n2;i++ )
        A[ 0 ][ i ] = 0;
    
    for( i = 1;i <= n1;i++ )
        for( j = 1;j <= n2;j++ )
            if( s1[ i - 1 ] == s2[ j - 1 ] )
                A[ i ][ j ] = A[ i - 1 ][ j - 1 ] + 1;
            else
                A[ i ][ j ] = max( A[ i - 1 ][ j ], A[ i ][ j - 1 ] );
    
    return A[ n1 ][ n2 ];
}

int main() {
    
    int t, n1, n2, i, l, ct = 1;
    
    cin >> t;
    
    while( ct <= t ) {
        
        string s1, s2;
        cin >> n1 >> n2;
        cin >> s1;
        cin >> s2;
        
        n1 = s1.length();
        n2 = s2.length();
            
        l = LCS( s1, s2, n1, n2 );
        
        if( n1 < n2 )
            printf("Case %d: %d\n", ct, n2 + ( n1 - l ) );
        else
            printf("Case %d: %d\n", ct, n1 + ( n2 - l ) );
        
        ct++;
    }
    
	return 0;
}
