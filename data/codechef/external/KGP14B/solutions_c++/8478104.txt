

///This  code is created by Samar Singh Holkar
#include <algorithm>
#include <cassert>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <deque>
#include <iomanip>
#include <iostream>
#include<list>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <string>
#include <vector>

using namespace std;

#define sd(x) scanf("%d",&x)
#define sfd(x) scanf("%d",&x)
#define sfld(x) scanf("%lld",&x
#define pf printf

#define LL long long
#define ll long long
#define LD long double
#define ld long double
#define PB push_back
#define pb push_back
#define MP make_pair
#define mp make_pair
#define F first
#define S second

#define pii pair<int,int>
#define vi vector<int>
#define fr(i,n) for( int i=0; i<=n; i++)
#define frm(i,m,n) for(int i=m; i<=n; i++)
#define N 200000

int main(){

    int t,l=1; cin>>t;

    while(l<=t){
        int p,q; cin>>p>>q;

        string a,b; cin>>a>>b;

        int dp[p+1][q+1];

        memset(dp,0,sizeof(dp));

        for(int i=1;i<=p;i++){

            dp[i][1]=dp[i-1][1];
            if(a[i-1]==b[0]) dp[i][1]=1;
        }
        for(int i=1;i<=q;i++){

            dp[1][i]=dp[1][i-1];
            if(a[0]==b[i-1]) dp[1][i]=1;
        }

        for(int i=2;i<=p;i++){

            for(int j=2;j<=q;j++){

                if(a[i-1]==b[j-1]) dp[i][j]=dp[i-1][j-1]+1;

                else dp[i][j]=max(dp[i-1][j],dp[i][j-1]);

            }
        }

        for(int i=1;i<=p;i++){

            //for(int j=1;j<=q;j++) cout<<dp[i][j]<<" ";
            //cout<<"\n";
        }
        cout<<"Case "<<l<<": "<<p+q-dp[p][q]<<"\n";
        l++;
    }
}
