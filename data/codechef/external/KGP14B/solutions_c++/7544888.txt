#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <queue>
#include <vector>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <algorithm>
#include <iostream>
#include <assert.h>

using namespace std;

#define SET(v,i) memset(v,i,sizeof(v));
#define FOR(i,n,k) for(int i=n;i<k;++i)
#define WHILE(i,n) while(i<n)
#define RI(i) scanf("%d",&i);
#define RS(i) scanf("%s",i);
#define RF(i) scanf("%lf",&i);
#define RL(i) scanf("%lld",&i);
#define OPEN(s) freopen(s,"r",stdin);
#define CLOSE(s) freopen(s,"w",stdout);

const int INF=0x3F3F3F3F;
const int MAXN=1010;
typedef long long int i64;
typedef pair<int,int> pii;
typedef pair<string,int> psi;
int s1,s2;
char str[MAXN],str2[MAXN];

int memo[MAXN][MAXN];
bool mark[MAXN][MAXN];

int LCS(int i1, int i2){
	if(i1 >= s1 || i2 >= s2) return 0;
	int &best=memo[i1][i2];
	if(mark[i1][i2]) return best;
	mark[i1][i2]=true;
	best=-INF;
	if(str[i1] == str2[i2]){
		best = LCS(i1+1,i2+1)+1;
		return best;
	}
	else{
		best = max(LCS(i1+1,i2),LCS(i1,i2+1));
		return best;
	}
	
}

int main(){
	#ifdef DM1_MACHINE
		OPEN("FILE.in");
		//CLOSE("FILE.out");
	#endif
	int t; RI(t);
	int ic = 1;
	while(t--){
		SET(mark,0);
		RI(s1); RI(s2);
		RS(str);
		RS(str2);
		//fprintf(stderr,"> %d\n",LCS(0,0));
		printf("Case %d: %d\n",ic++,s1+(s2-LCS(0,0)));
	}
	return 0;
}


////////////////////////////////////////////
/////////////Code by David Moran////////////
/////////////////////////////P=NP///////////
