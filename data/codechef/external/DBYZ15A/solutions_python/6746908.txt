#include <stdio.h>
#define FALSE 0
#define TRUE 1
#define LL "%I64d"
#define MAXDIGIT 10
#define PC(x) putchar_unlocked(x)
typedef long long Int;
const int inf = 100010;
const int MOD = 1000000007;
int max(int a,int b){return a>b?a:b;}
int min(int a,int b){return a<b?a:b;}
long int inline inp()
{
    long int n=0,a=1;
    char c=getchar_unlocked();
    while(c < '0' || c >'9') {if(c=='-'){a=-1;}c=getchar_unlocked();}
    while(c>='0' && c<='9')
    {
    n=(n<<3)+(n<<1)+c-'0';
    c=getchar_unlocked();
    }
    return a*n;
}
inline void OUT(long n) {
	 long i = MAXDIGIT;
	char output_buffer[MAXDIGIT];
	do {
		output_buffer[--i] = (n % 10) + '0';
		n /= 10;
	} while (n);
	do {
		PC(output_buffer[i]);
	} while (++i < MAXDIGIT);
}
int mi(int a,int b)
{
	if(a<=b)
	return a;
	else 
	return b;
}
int main()
{
	int n;
	n=inp();
	int ar[n],i,j;
	int a[1000001]={0};
	for(i=0;i<n;i++)
{	ar[i]=inp();
a[ar[i]]++;
}
	long long count=0,l,count1=0;
	for(i=1;i<=1000000;i++)
	{
		if(a[i]>1)
		count1=count1+((long long)a[i]*((long long)a[i]-1))/2;
	}
	
	count=((long long)n*((long long)n-(long long)1))/(long long)2;
	printf("%lld\n",count-count1);
	return 0;
} 