#ifdef DEBUG
#include<debug.h>
#else
#define db(...) {}
#define dbt(...) {}
#define pprintf(...) {}
#endif

#include <iostream>
using namespace std;
typedef unsigned long long int ULL;
#define SIZE 256
void computeTable(string pattern, int n, int table[]) {
    for (int i = 0; i < SIZE; i++) {
        table[i] = n;
    }
    for (int i = 0; i < n; i++) {
        table[pattern[i]] = max(1, n - 1 - i);
    }
}
bool BoyreMoore(string text, string pattern) {
    int n = text.length();
    int m = pattern.length();
    int *table = new int[SIZE];
    computeTable(pattern, m, table);
    bool found = false;
    int s = 0;
    while (s <= (n - m)) {
        int j = m - 1;
        while (j >= 0 && text[s + j] == pattern[j]) {
            j--;
        }
        if (j < 0) {
            found = true;
            break;
            //printf("pattern %s found at %d\n", pattern.c_str(), s + (j + 1) + 1);
            s += 1;
        } else {
            s += table[text[s + j + 1]];
        }
    }
    return found;
}
int main() {
#ifdef LOCAL
    IO; TE tt("main");
#endif
    int t;
    cin >> t;
    string txt, pattern;
    while (t--) {
        cin >> txt >> pattern;
        cout << BoyreMoore(txt, pattern) << endl;
    }
    return 0;
}
