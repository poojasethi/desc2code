#include <iostream>
#include <algorithm>
#include <cstdio>
#include <map>
#include <cmath>
#include <stdio.h>
#include <memory.h>
#include <string.h>
#include <string>
#include <stack>
#include <vector>
#include <set>
#include <queue>
#include <bitset>
#include <stdlib.h>

using namespace std;

#define FOR(i,a,b) for (int i = int(a); i <= b; i++)
#define INF 1000000000
#define mod 1000000007
#define ll int
// #define inp(x) scanf("%d",&x)
#define inchar getchar_unlocked
#define mx 100010
 
inline void inp( int &n )
{
n=0;
int ch=inchar();int sign=1;
while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=inchar();}
while( ch >= '0' && ch <= '9' )
n = (n<<3)+(n<<1) + ch-'0', ch=inchar();
n=n*sign;
}


int main() {

    int test;
    inp(test);
    int siz[1005];
    while(test--)
     {
         int n,m,c;
         inp(n);inp(m);inp(c);
         int maxval = 0;
         for(int i=1;i<=n;i++)
          {
          inp(siz[i]);
          maxval = max(maxval,siz[i]);
          }
         sort(siz+1,siz+n+1); 
         ll maxans = 0;int k=1;
         for(int i=1;i<=maxval;i++)
          {
              ll ans = 0;
              ll taken = 0;
              ll nottaken = 0;
              while(k<=n && siz[k]<i) k++;
              for(int j=1;j<=n;j++)
               {
                   int temp = 0,piece;
                   if(siz[j]%i == 0)
                    {
                        piece=siz[j]/i;
                        temp=siz[j]*m-c*(piece-1);
                    }
                    else
                    { 
                        
                         piece=siz[j]/i;
                         temp=i*piece*m-c*piece;
                    }
                 if(temp>0) ans+=temp;    
               }
              
              maxans = max(ans,maxans); 
              
          }
         printf("%d\n",maxans);
          
         
     }
    
    
    //getchar();
    //getchar();
	return 0;
} 
