#include<algorithm>
#include<iostream>
#include<cstdio>
#include<vector>
#include<fstream>
#include<iomanip>
#include<bitset>
#include<deque>
#include<string>
#include<map>
#include<cstring>
#include<sstream>
#include<cmath>
#include<cassert>
using namespace std;
 
#define MOD 100001
long long ans;
 
void compute (int f, int l, int d)
{
	if (f < 0 || l < 0)
		return;
	assert (f <= l);
	int n = (l-f)/d+1;
	long long sum = ((long long)(f+l)*(long long)n)/2;
	ans = (ans+sum)%MOD;
}
 
int main ()
{
	int T;
	scanf ("%d", &T);
	for (int t = 0; t < T; t++)
	{
		int N;
		ans = 0;
		scanf ("%d", &N);
		int start_odd, start_even, end_odd, end_even;
		if (N%2 == 1)
		{
			start_odd = (N+1)/2;
			end_odd = (N-6*(N/6)+1)/2;
			start_even = (N-3)/2+1;
			end_even = (N-3-6*((N-3)/6))/2+1;
		}
		else
		{
			start_odd = (N-3+1)/2; 
			end_odd = (N-3-6*((N-3)/6)+1)/2;
			start_even = N/2+1;
			end_even = (N-6*(N/6))/2+1;
		}
		compute (end_odd, start_odd, 3);
		compute (end_even, start_even, 3);
		printf ("%lld\n", ans);
	}
	return 0;
}
 