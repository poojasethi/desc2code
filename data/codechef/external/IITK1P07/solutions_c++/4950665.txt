#include <cassert>
#include <cctype>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <deque>
#include <list>
#include <set>
#include <map>
#include <bitset>
#include <stack>
#include <queue>
#include <algorithm>
#include <functional>
#include <iterator>
#include <numeric>
#include <utility>
#include<limits.h>
#define ll long long
using namespace std;


ll mul(ll a, ll b, ll mod)
{
   	ll res = 0;
    while (b)
    {
        if (b & 1) 
		{
			res = (res + a);
			res %= mod;
		}
        a = (a + a);
		a %= mod;
		b >>= 1;
    }
    return res;
}

ll modpow(ll a, ll b, ll mod)
{
    ll res = 1;
    while (b)
    {
        if (b & 1) res = mul(res, a, mod);
        a = mul(a, a, mod);
        b >>= 1;
    }
    return res;
}pair<ll int, pair<ll int,ll int> > extendedEuclid(ll int a, ll int b) {
	if(a == 0) return make_pair(b, make_pair(0, 1));
	pair<ll int, pair<ll int,ll int> > p;
	p = extendedEuclid(b % a, a);
	return make_pair(p.first, make_pair(p.second.second - p.second.first*(b/a), p.second.first));
}

ll int modInverse(ll int a,ll int m) {
    return (extendedEuclid(a,m).second.first + m) % m;
}
ll int solve( ll int x,ll int m, ll int n)
{
          ll int temp;
          if(m==0)
          return (1%n);
          
          if(m==1)
          return (1+x)%n;
          
          if(m%2==0)
          {
               temp=solve(x,m-1,n);
               temp=mul(temp,x,n);
               temp+=1;
               temp%=n;
               return temp;
               }
               else
               {
                   temp=solve(mul(x,x,n),m/2,n);
                   temp=mul(temp,(1+x),n);
                   temp%=n;
                   return temp;
                   }
          }                 

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
           ll int x,m,n,p,r;
           scanf("%lld %lld %lld",&x,&m,&n);// cin>>x>>m>>n;
          // m++;
           
           
           cout<<solve(x,m,n)<<"\n";
           
           }
           return 0;
           }
              
