  #include<stdio.h>
        long long int bigMod(long long int a,long long int b,long long int mod) {
            long double ans;
            long long int c;
            a=a%mod;
            b=b%mod;
            ans=(long double)a*b;
            a=a*b;
            c=(long long int)(ans/mod);
            a=a-c*mod;
            a=a%mod;
            if(a<0)
                a=a+mod;
                return a;
                    }
        long long int power(long long int x,long long int m,long long int n)
        {
            long long int k;
            if(m==0)
                return 1;
            if(m==1)
                return x%n;
            if(m%2==0)
            {
                k=power(x,m/2,n)%n;
                return (bigMod(k,k,n));
            }
            else
            {
                k=power(x,(m-1)/2,n)%n;
                return (bigMod(bigMod(k,k,n),x,n));
            }
        }
        long long int getsum(long long int x,long long int m,long long int n)
        {
            long long int y,p,q;
            if(m==0)
                return 1;
            y=getsum(x,m/2,n);
            if(m%2==0)
            {
                 p=power(x,m/2,n);
                return ((y+bigMod(p,y,n)-p+n)%n);
            }
            else
            {
                q=power(x,m-m/2,n);
                return ((y+bigMod(q,y,n))%n);
            }
        }
        int main()
        {
            long long int x,n,m,i;
            int t;
            scanf("%d",&t);
            while(t--)
            {
                scanf("%lld %lld %lld",&x,&m,&n);
                if(n==1)
                {
                    printf("0\n");
                    continue;
                }
                if(x==1)
                {
                    printf("%lld\n",(m+1)%n);
                    continue;
                }
                    printf("%lld\n",getsum(x,m,n));
                }
            return 0;
        }