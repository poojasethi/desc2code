
#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sl(x) scanf("%lld",&x)
#define sd(x) scanf("%lf",&x)
#define sc(x) scanf("%c",&x)
#define ss(x) scanf("%s",x)
#define vl vector<ll>
#define vi vector<int>
#define vvl vector< vl >
#define vvi vector< vi >
#define pb push_back
#define mem(x,y) memset(x,y,sizeof(x))
#define f(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807
#define ub(X,v) upper_bound(X.begin(),X.end(),v)
#define lb(X,v) lower_bound(X.begin(),X.end(),v)
#define MAXN 100010
#define ls (node<<1)
#define rs ((node<<1)+1)
#define ii pair<int,int>
 
 
ll mul(ll a,ll b,ll m)
{
   ll mod = m;
   a %= m;
   b %= m;
   long double res = a;
   res *= b;
   ll c = (long long)(res / mod);
   a *= b;
   a -= c * mod;
   a %= mod;
   if (a < 0) a += mod;
   return a;
}
 
 
ll modpow(ll base, ll exponent,ll modulus){
	if(base==0&&exponent==0)return 0;
	ll result = 1;
	while (exponent > 0){
		if (exponent % 2 == 1)
		    result = mul(result , base , modulus);
		exponent = exponent >> 1;
		base = mul(base , base,  modulus);
	}
	return result;
}
 
ll MOD,X;
 
ll fn(ll M){
	if(M<0)return 0;
	if(M==0)return 1;
	ll ret=fn((M+1)/2-1);
	ll foo=modpow(X,M/2+1,MOD);
	ll bar=modpow(X,M/2,MOD);
	foo=mul(foo,ret,MOD);
	ret=(ret+foo)%MOD;
	if(M%2==0){
		ret=(ret+bar)%MOD;
	}
	return ret;
}
 
ll M;
 
inline void ReadInput(void){
	sl(X); sl(M); sl(MOD);
}
 
inline void solve(void){
	ll ans=fn(M);
	printf("%lld\n",ans%MOD );
}
 
inline void Refresh(void){
	
}
 
int main()
{	
	ios_base::sync_with_stdio(false);
	int t; si(t);
	while(t--){
		ReadInput();
		solve();
	}
    return 0;
} 
