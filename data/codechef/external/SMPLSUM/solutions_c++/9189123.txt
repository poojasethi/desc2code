/*
 * SMPLSUM_SimpleSum_SUCCESS1.cpp
 *
 *  Created on: Jan 18, 2016
 *      Author: chutima
 */

#include<iostream>
#include <cstdio>
#include <vector>

using namespace std;

#define  gc  getchar()
#define  fr(X)  {  register char CC=gc;  while(CC<33)CC=gc;  X=0;  while(CC>47&&CC<58) { X=(X<<1)+(X<<3)+CC-48; CC=gc; }  }
int primeFactor[10000001];

int main() {
    int t, n, i, j;
    long long ans, val;
    vector<bool> isPrime(10000001, true);

    for (i = 1; i < 10000001; i++)
        primeFactor[i] = i;

    for (i = 4; i < 10000001; i += 2) {
        isPrime[i] = false;
        primeFactor[i] = 2;
    }

    for (i = 3; i * i < 10000001; i += 2) {
        if (isPrime[i]) {
            for (j = i * i; j < 10000001; j += 2*i) {
                isPrime[j] = false;
                primeFactor[j] = i;
            }
        }
    }

    fr(t)
    while (t--) {
        fr(n)
        ans = 1LL;
        while (n > 1) {
            i = primeFactor[n];
            //cout<<i<<endl;
            val = 1LL;
            while (n % i == 0)
                n /= i, val *= i;
            if (val == i)
                ans *= (val * val - i + 1);
            else
                ans *= (val * val * i + 1) / (i + 1);
        }
        printf("%lld\n", ans);
    }

    return 0;
}

