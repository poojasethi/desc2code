// #include<abhi.944>

#include<bits/stdc++.h>
using namespace std;

typedef long long int ll;

#ifndef ONLINE_JUDGE
	#define TRACE
#endif

const long double PI=3.1415926535897932384626;
const ll MAX=1000000000+7;
const int INF = 0x3f3f3f3f;

#define ps printf(" ")
#define pn printf("\n")
#define sc(n) scanf("%d",&n)
#define pf(n) printf("%lld",n)
#define forall(it, x) for(__typeof((x).begin()) it=(x).begin();it!=(x).end();it++)
#define sz size()
#define ff first
#define ss second
#define pb push_back //pop_back
#define mp make_pair
#define fill(a,val) memset(a,val,sizeof(a))

#ifdef TRACE
    #define trace(x)            cerr<<"ERROR---->"<<x<<endl;
    #define trace1(x)           cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<endl;
    #define trace2(x,y)         cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<endl;
    #define trace3(x,y,z)       cerr<<__FUNCTION__<<":"<<__LINE__<<": "#x" = "<<x<<" | "#y" = "<<y<<" | "#z" = "<<z<<endl;
    #define trace4(a,b,c,d)     cerr<<__FUNCTION__<<":"<<__LINE__<<": "#a" = "<<a<<" | "#b" = "<<b<<" | "#c" = "<<c<<" | "#d" = "<<d<<endl;
#else
    #define trace(x)
    #define trace1(x)
    #define trace2(x,y)
    #define trace3(x,y,z)
    #define trace4(a,b,c,d)
#endif

inline void read_int(int &a)
{
    register int c;
    a = 0;
    do c = getchar_unlocked(); while (c < '0');
    do{
        a = (a << 1) + (a << 3) + c - '0';
        c = getchar_unlocked();
    } while (c >= '0');
}
inline void print_ll(ll a)
{
    int s[25], t = -1;
    do
    {
        s[++t] = a % 10 + '0';
        a /= 10;
    } while (a > 0);
    while (t >= 0)putchar_unlocked(s[t--]);
    putchar_unlocked('\n');
}

int maxz = 1e7+7;
int a[10000067];

void seive() {
    int by = sqrt(maxz)+2;
    for (int i = 2; i < by; ++i)
    {
        if(a[i]) continue;
        a[i] = i;
        for (int j = i*i; j < maxz ; j+=i)
        {
            if(!a[j]) a[j] = i;
        }
    }

    for (int i = 0; i < maxz; ++i)
    {
        if(!a[i]) a[i]=i;
    }
}

ll getans(int n) {
    ll ans = 1;
    while(n > 1) {
        int by = a[n];
        ll pro = 1;
        while(n%by==0) {
            pro *= by;
            n/=by;
        }
        ll by1 = (ll)(pro) * (ll)(pro);
        by1 -= ((by1) - 1)/(by+1);
        ans *= by1;
    }
    return ans;
}

int main(int argc, char const *argv[])
{
    fill(a,0);  a[0]=1; a[1]=1;
    seive();
    int t;
    sc(t);
    while(t--) {
        int n;
        sc(n);
        ll ans = getans(n);
        pf(ans); pn;
    }
    return 0;
}