#include<iostream>
#include<cstdio>
#include<cmath>
using namespace std;

#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)

#define p(n) printf("%d\n",n)
#define pl(n) printf("%lld\n",n)


// getfrac function does not work for large integers
double getfrac(double n)
{
  long long temp = (long long)n;
  double frac = n - temp;
  return frac;
}

// all the below functions work for large numbers

/*bool isPowerOfTwo (long long x)
{
  return ((x != 0) && ((x & (~x + 1)) == x));
  }*/

 /*bool isPowerOfTwo (long long x)
{
  return ((x != 0) && ((x & (x - 1)) == 0));
  }*/

  /*bool isPowerOfTwo (long long x)
{
  if(x==0) return false;
  while(x != 1)
    {
      int rem = x%2;
      if(rem == 1) return false;
      x = x/2;
    }
  if(x==1) return true;
  }*/

int isPowerOfTwo (long long x)
{
  long long powerOfTwo = 1;

  while (powerOfTwo < x && powerOfTwo < pow(10,30))
    powerOfTwo *= 2;
  return (x == powerOfTwo);
}



int main()
{
  int t;
  s(t);
  double *inp;
  while(t--)
    {
      long long n;
      sl(n);
      /* if(n%2==0)
	{
	  double *intpart,fracpart,logvalue;
	  logvalue = log(n)/log(2);
	  fracpart = getfrac(logvalue);
	  // fracpart = modf(logvalue,intpart);
	  if(fracpart==0) printf("NO\n");
	  else printf("YES\n");
	}
	else printf("YES\n");*/
      if(isPowerOfTwo(n))
	printf("No\n");
      else
	printf("Yes\n");
    }
  return 0;
}
      
      
    