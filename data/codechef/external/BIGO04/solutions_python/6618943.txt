#include<bits/stdc++.h>
using namespace std;
list<int>g[201];
int deg[201],visited[201];
void dfs(int node)
{
    visited[node]=1;
    list<int>::iterator it;
    for(it=g[node].begin();it!=g[node].end();++it)
    {
        if(!visited[*it])
        {
            dfs(*it);
        }
    }
}
int main()
{
    int t,n,m,a,b,f;
    cin>>t;
    while(t--)
    {
        f=0;
        cin>>n>>m;
        for(int i=0;i<201;i++)
        {
            g[i].clear();
            visited[i]=0;
            deg[i]=0;
        }
        for(int i=0;i<m;i++)
        {
            cin>>a>>b;
            g[a].push_back(b);
            g[b].push_back(a);
            deg[a]++;
            deg[b]++;
        }
        dfs(1);
        for(int i=1;i<=n;i++)
        {
            if(!visited[i] && deg[i]!=0)
            {
                f=1;
                break;
            }
        }
        if(f)
        {
            printf("NO\n");
        }

        else
        {
            f=0;
            for(int i=1;i<=n;i++)
            {
               if(deg[i]&1)
               {
                   f=1;
                   break;
               }
            }
            if(f)
            {
                    printf("NO\n");
            }
            else
            {
                printf("YES\n");
            }
        }
    }
}
