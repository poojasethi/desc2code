#include<bits/stdc++.h>
using namespace std;
char s[2000];
vector< vector<int> > G(300);

int degree[300];
int visited[300];
void dfs(int v)
{
	visited[v]=1;
	int len=G[v].size();
	for(int i=0;i<len;++i)
	{
		if(!visited[G[v][i]])
			dfs(G[v][i]);
	}
}
int main()
{
	int t,n,m,x,y;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d",&n,&m);
		//clear
		for(int i=0;i<=n;++i)
		{
			G[i].clear();
			degree[i]=visited[i]=0;
		}
		//clear
		for(int i=1;i<=m;++i)
		{
			scanf("%d%d",&x,&y);
			degree[x]+=1;
			degree[y]+=1;
			//should[s[0]-'a']=1;
			//should[s[len-1]-'a']=1;
			G[x].push_back(y);
			G[y].push_back(x);

		}
		int connected=1;
		dfs(1);
		for(int i=1;i<=n;++i)
		{
			if(!visited[i])
				connected=0;
		}


		int c=0;
		for(int i=1;i<=n;++i)
		{
			//cout<<degree[i]<<" ";
			if(degree[i]%2==1)
				++c;
		}
		//cout<<"\n";
		//cout<<connected<<" "<<c<<"\n";
		if(connected&&c==0)
			printf("YES\n");
		else printf("NO\n");
	}
	return 0;
}