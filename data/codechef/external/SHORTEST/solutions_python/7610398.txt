#include <bits/stdc++.h>
using namespace std;

void dfs(vector<pair<int,int> >vec[],int s,int dist[],int n)
{
    int i;
    for(i=0;i<vec[s].size();i++)
    {
        if(vec[s][i].second+dist[s]<dist[vec[s][i].first])
        {
            dist[vec[s][i].first]=vec[s][i].second+dist[s];
            dfs(vec,vec[s][i].first,dist,n);
        }
    }
}

int main()
{
	int t,n,m,q,i,j,a,b,d;

	cin>>t;
	while(t--)
	{
		cin>>n>>m>>q;
		vector<pair<int,int> > vec[n];

		for(i=0;i<m;i++)
		{
			cin>>a>>b>>d;
			vec[a-1].push_back(make_pair(b-1,d));
			vec[b-1].push_back(make_pair(a-1,d));
		}
        int dist[n];
        for(i=0;i<n;i++)
            dist[i]=INT_MAX;
        dist[0]=0;
        dfs(vec,0,dist,n);
        for(i=0;i<q;i++)
        {
            cin>>a;
            cout<<dist[a-1]<<endl;
        }
	}

	return 0;
}
