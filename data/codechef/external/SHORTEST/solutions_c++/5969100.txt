#include<iostream>
#include<algorithm>
#include<cstdio>
#include<queue>
#include<vector>
#include<cstring>
#include<utility>
using namespace std;
int n;
vector<pair<int,int> > adj[1001];
int dis[1001];
int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        for(int i=0;i<1001;i++)
        {
            adj[i].clear();
        }
        int m,Q;
        cin>>n>>m>>Q;
        for(int i=0;i<m;i++)
        {
            int a,b,c;
            cin>>a>>b>>c;
            adj[a].push_back(make_pair(b,c)) ;
            adj[b].push_back(make_pair(a,c)) ;
        }
        for(int i=1;i<=n;i++)
    {
        dis[i]=9999999;
    }
    dis[1]=0;
    priority_queue<pair<int,int> >q;
    for(int i=1;i<=n;i++)
    {
    q.push(make_pair((-1)*dis[i],i)) ;
    }
    while(!q.empty())
    {
        int top=q.top().second;
        int dist=q.top().first;
        q.pop();
        int s=adj[top].size();
        for(int i=0;i<s;i++)
        {
            int tmp=adj[top][i].first;
            int hi=adj[top][i].second;
            if(dis[tmp]>(dis[top]+adj[top][i].second))
            {
                dis[tmp]=dis[top]+adj[top][i].second;
                q.push(make_pair((-1)*dis[tmp],tmp));
            }
        }
    }
        for(int i=0;i<Q;i++)
       {
           int x;
           cin>>x;
        cout<<dis[x]<<"\n";
       }
    }
}

