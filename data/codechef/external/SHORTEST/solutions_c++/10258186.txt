#include <iostream>
#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <cstring>
#include <string>
#include <cmath>
#include <ctime>
#include <utility>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <sstream>
#define FOR(a,b,c) for (int a=b,_c=c;a<=_c;a++)
#define FORD(a,b,c) for (int a=b;a>=c;a--)
#define REP(i,a) for(int i=0,_a=(a); i<_a; ++i)
#define REPD(i,a) for(int i=(a)-1; i>=0; --i)
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define sz(a) int(a.size())
#define reset(a,b) memset(a,b,sizeof(a))
#define oo 1000000000000000007ll

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef pair<ll, int > plli;

const int maxn = 100007;


int main() {
	//freopen("test.txt","r",stdin);

	int qr;

	cin >> qr;

	for (int i1 = 0; i1 < qr; ++i1) {
		set<plli> myset;
		vector<pii> a[maxn];
		vector<int> list;
		bool free1[maxn];
		int n, m, t, trace[maxn];
		ll d[maxn];

		scanf("%d%d%d", &n, &m, &t);
		int u, v, w;
		REP(i, m) {
			scanf("%d%d%d", &u, &v, &w);
			a[u].pb(pii(v, w));
			a[v].pb(pii(u, w));
		}

		for (int i2 = 0; i2 < t; ++i2) {
			int rr;
			cin >> rr;
			reset(free1, 1);
			d[1] = 0;
			FOR(i, 2, n) d[i] = oo;
			myset.insert(pii(0, 1));
			while (!myset.empty()) {
				u = myset.begin()->se; myset.erase(myset.begin());
				free1[u] = 0;
				REP(i, sz(a[u])) {
					v = a[u][i].fi; w = a[u][i].se;
					if (free1[v] && d[v]>d[u] + w) {
						if (d[v] != oo) myset.erase(myset.find(plli(d[v], v)));
						d[v] = d[u] + w;
						trace[v] = u;
						myset.insert(plli(d[v], v));
					}
				}
			}

			if (d[rr] == oo) printf("-1\n");
			else {
				cout << d[rr] << endl;
			}
		}
	}

	
	//getch();
	return 0;
}