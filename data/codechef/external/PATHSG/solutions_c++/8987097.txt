#include <bits/stdc++.h>
#define ll long long
using namespace std;
ll int ans,mat[30][30],visited[30][30];
ll int n,m;
bool valid(int x,int y)
{
		if(x>=0 && x<n && y>=0 && y<m && mat[x][y]==0 && !visited[x][y])
		return 1;
		return 0;
}
void mydfs(ll int x,ll int y)
{
	ll int p=0;
	if(valid(x,y))
	{
		visited[x][y]=1;
		if(valid(x+1,y))
		{
			p++;
		}
		if(valid(x-1,y))
		{
			p++;
		}
		if(valid(x,y-1))
		{
			p++;
		}
		if(valid(x,y+1))
		{
			p++;
		}
		if(valid(x+1,y))
		{
			mydfs(x+1,y);
		}
		if(valid(x-1,y))
		{
			mydfs(x-1,y);
		}
		if(valid(x,y-1))
		{
			mydfs(x,y-1);
		}
		if(valid(x,y+1))
		{
			mydfs(x,y+1);
		}
		if(p!=0)
		{
			//~ cout<<p<<endl;
			ans*=p;
		}
	}
}
int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	ll int test;
	cin>>test;
	while(test--)
	{
		cin>>n>>m;
		ll int i,j;
		string s;
		for(i=0;i<n;i++)
		{
			cin>>s;
			for(j=0;j<m;j++)
			{
				mat[i][j]=(s.at(j)-'0');
				visited[i][j]=0;
			}
		}
		ans=1;
		bool found=0;
		for(i=0;i<n;i++)
		{
			for(j=0;j<m;j++)
			{
				if(mat[i][j]==0)
				{
					mydfs(i,j);
					found=1;
					break;
				}
			}
			if(found)
			break;
		}
		cout<<ans<<endl;
	}
	return 0;
}
