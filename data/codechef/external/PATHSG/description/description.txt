 
There is a man standing in front of a market, 1 represent filled area and 0 represents road. In how many ways can he visit all roads (0s), you have to print that. He cannot move through 1s, but he can move through 0s. There won't be any loops in the paths of 0s. Two paths are different if at any of the point of intersection of two roads he takes a different direction. He can revisit a road (0 or 0s) as many times as needed only when it is needed to make the path complete, that is he can retrace a path if its needed to complete the path. Also, he cannot move diagonally. See example for more clarity.


His original position is on the first row of the matrix with a 0 in it and the first column of that row which is a 0. It will be possible for him to visit all 0s, roads in the market are like that, that is all the paths in the road would be traceable.
Hint can be found in these gifs:



 

Input
Test cases will start with an integer T the count of test cases. Each test case will have two space separated integers on a newline x and y, x denoting the number of rows in the array and y denoting the number of columns. Each test case will be followed by x rows of y integers, either 0 or 1.


Output
 
Output an integer for each input, each on a newline.


Constraints

1 ≤ T ≤ 10
1 ≤ x ≤ 20
1 ≤ y ≤ 20

 

Example
Input:
1
5 13
0000000000000
1111111111110
0000000000000
1111111111101
0000000000000

Output:
4


Explanation
Example case 1. he can go like this.. where 2 represents visited (these are incomplete paths, but shows the possibilities)

2222222222222
1111111111112
2222222222222
1111111111101
0000000000000
He has to come back to that point where he can go further down.



or like this

2222222222222
1111111111112
0000000000022
1111111111121
2222222222220

Again he has to come back from the left most 2 in the bottom row to visit the univisited 0s.

Remember he has to complete visiting all 0s. Visiting all 0s gives 4 possible path configurations in the above array.
