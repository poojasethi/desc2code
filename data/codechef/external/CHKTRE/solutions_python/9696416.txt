#include <bits/stdc++.h>
using namespace std;


vector<int> g[1000000+10];

long long tem,mod = 1e9 + 7,dp[100000+10];

long long dpsum(int n)
{
    tem=0;
    for(int i=1; i<=n; i++) tem=(tem+dp[i])%mod;
    return tem;

}

void dfs(int n,int p=-1)
{
    dp[n]=1;
    for(int i=0; i<(int)g[n].size(); i++)
    {
        if(g[n][i] != p)
        {
            dfs(g[n][i],n);
            dp[n] += (dp[n] * dp[g[n][i]]);
            if(dp[n] >= mod) dp[n]%= mod;
        }
    }
}
int main()
{
    int t;
    scanf("%d",&t);
    int v,x,y;
    while(t--)
    {
        scanf("%d",&v);
        for(int i=0; i<v-1; i++)
        {
            scanf("%d %d", &x, &y);
            g[x].push_back(y);
            g[y].push_back(x);
        }
        dfs(v);
        printf("%lld\n", dpsum(v));
        for(int i=0;i<=v;i++) g[i].clear();
    }
    return 0;
}
