/*
 *      @author anks
 */

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.BitSet;
import java.util.Comparator;
import java.util.HashMap;
import java.util.Iterator;
import java.util.LinkedList;
import java.util.Locale;
import java.util.Queue;
import java.util.Random;
import java.util.Stack;
import java.util.StringTokenizer;
import java.util.TreeMap;
import java.util.TreeSet;

public class Main {
	
	public static BigInteger calc(int n, int m) {
		BigInteger resn, resm;
		resn = BigInteger.valueOf(2).pow(n+1).subtract(BigInteger.valueOf(2));	
		resm = BigInteger.valueOf(2).pow(m+1).subtract(BigInteger.valueOf(2));	
		return resn.subtract(resm);
	}
		
	public static void main (String args[]) {
		InputReader in = new InputReader(System.in);
		PrintWriter out = new PrintWriter(System.out);
		int testCount = in.nextInt();
		for (int i = 1; i <= testCount; i++) {
			int n = in.nextInt(), m = in.nextInt();			
			out.println(calc(n, m)+".00");
		}
		out.close();
	}
}


class InputReader {
    private BufferedReader reader;
    private StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream));
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

    public long nextLong() {
        return Long.parseLong(next());
    }

}

// tags expected value of n tosses
