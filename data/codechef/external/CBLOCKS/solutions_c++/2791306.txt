using namespace std;
#include <cmath>
#include <cstdio>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <string>
#include <vector>
#include <iostream>
#include <sstream>
#include <algorithm>
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
typedef long long ll; 
typedef pair<int,int> pii; 
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define split(str) {vs.clear();istringstream ss(str);while(ss>>(str))vs.push_back(str);}
#define PI 3.141592653589793
int modulo (int m, int n) { return m >= 0 ? m % n : ( n - abs ( m%n ) ) % n; }
int main()
{
	int t;
	sf(t);
	while(t--)
	{
		int k,n;
		sf(n);sf(k);
		string s;
		cin>>s;
		bool notfound = true;
		for(int i = 0; i <= n-k; i++)
		{
			int p = i;
			for(; p < i+k; p++)
				if(s[p] != s[i])
					break;
			if(p == i+k)
			{
				notfound = false;
				break;
			}
			i = p-1;
		}
		if(notfound)
			cout<<-1<<endl;
		else
		{
			int ans = 0;
			for(int i = 0; i < n; i++)
			{
				int p = i;
				for(; p<n; p++)
					if(s[p] != s[i])
						break;
				ans += ceil((p-i + 0.0)/k);
				i = p-1;
			}
			cout<<ans<<endl;
		}
	}
}