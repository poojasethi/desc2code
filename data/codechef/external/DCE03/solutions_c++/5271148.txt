#include <iostream>
#include <cstring>
#include <cstdio>
#include <cmath>

#define int64 long long int

using namespace std;

int64 parenthesis[1111];

inline int64 readInt()
{
	char c;
	int64 n = 0;
	
	while((c = getchar()) < 48);
	
	n += (c-'0');
	
	while((c = getchar()) >= 48)
		n = n * 10 + (c-'0');
	
	return n;

}

unsigned long int catalan()
{
	
	parenthesis[0] = 0, parenthesis[1] = parenthesis[2] = 1, parenthesis[3] = 2, parenthesis[4] = 5;
	
	for(int i = 5; i <= 1000; i++)
	{
		for(int j = 1; j*2 < i; j++)
			parenthesis[i] = parenthesis[i] + 2 * parenthesis[j] * parenthesis[i-j];

		if(parenthesis[i] >= 10000)
			parenthesis[i] = parenthesis[i]%10000;
		
		if(i%2 == 0)
			parenthesis[i] = parenthesis[i] + parenthesis[i/2] * parenthesis[i/2];
			
		parenthesis[i] = parenthesis[i] % 10000;
		
	}
	
}//end function: catalan

int main()
{
	catalan();
	
	int T; T = readInt();
	
	while(T--)
	{
		
		int N; N = readInt();
		
		printf("%d\n",parenthesis[N]);
		
	}//end while
	
	return 0;
	
}//end main