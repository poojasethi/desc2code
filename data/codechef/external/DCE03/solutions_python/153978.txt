#!/usr/bin/python
"Solve the Parenthesis problem at CodeChef"
import sys
def main():
 testcases = int(raw_input())
 catalan_numbers = generate_catalan_sequence(limit = 1000, modulo = 10000)
 #print >>sys.stderr, catalan_numbers
 for testcase in xrange(testcases):
  n = int(raw_input())
  #print catalan(n - 1, 10000)  # Catalan numbers are 0-based
  print catalan_numbers[n - 1]
def catalan(number, modulo):
 """Calculate the Catalan number

    see http://answers.google.com/answers/threadview/id/468032.html
    and http://planetmath.org/encyclopedia/CatalanNumbers.html"""
 permutations = 1
 for i in xrange(number + 2, (2 * number) + 1):
  permutations = (permutations * i)
 for i in xrange(2, number + 1):
  permutations = (permutations / i) 
 return permutations % modulo
def generate_catalan_sequence(limit = 10, modulo = sys.maxint):
 catalan_sequence = [1, 1]
 for n in xrange(len(catalan_sequence), limit + 1):
  catalan_sequence.append(next_catalan_number(catalan_sequence, n, modulo))
 return catalan_sequence
def next_catalan_number(sequence_so_far, n, modulo):
 next = 0
 #print >>sys.stderr, sequence_so_far, n
 for i in xrange(n):
  next = (next + (sequence_so_far[i] * sequence_so_far[n - 1 - i])) % modulo
 return next
main()
