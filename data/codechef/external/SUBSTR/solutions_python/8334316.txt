#include<bits/stdc++.h>

using namespace std;

char str[6 * 1000009];
int z[6 * 1000009];
int n;
char k[19];
int len, kn;

void zAlgo() {
	int L = 0, R = 0;
	for (int i = 1; i < len; i ++) {

		if (i > R) {
			L = i;
			R = i;
			while (R < len && str[R - L] == str[R])
				R ++;
			z[i] = R - L;
			R --;
		}

		else {
			int k = i - L;
			if (z[k] < R - i + 1)
				z[i] = z[k];
			else {
				L = i;
				while (R < len && str[R - L] == str[R])
					R ++;
				z[i] = R - L;
				R --;
			}
		}
	}
	int ans = 0;
	for (int i = 1; i < len; i ++)
		if (z[i] == kn)
			ans ++;
	printf("%d\n", ans);
}
void solve() {
	int ind = 0;
	kn = 0;
	for (int i = 0; k[i] != '\0'; i ++) {
		str[ind] = k[i];
		kn ++;
		z[ind ++] = 0;
	}
	str[ind] = '$';
	z[ind ++] = 0;

	for (int i = 1; i <= n; i ++) {
		char temp[11];
		int k = 0;
		int m = i;
		while (m != 0) {
			temp[k ++] = (m % 10) + '0';
			m /= 10;
		}

		for (int j = k - 1; j >= 0; j --) {
			str[ind] = temp[j];
			z[ind ++] = 0;
		}
 	}
 	str[ind] = '\0';
 	len = ind;
 	//printf("%s\n", str);
 	zAlgo();
}

int main() {
	int t;
	scanf("%d", &t);
	while (t--) {
		scanf("%d", &n);
		scanf("%s", k);
		solve();
	}
	return 0;
}