#include <bits/stdc++.h>
#define d 256
#define q 101
using namespace std;
char b[10000004], a[10];
int n;
string get_str(int x){
ostringstream out;
out<<x;
return out.str();
}

int main(){
int test_case;
cin>>test_case;
while(test_case--){
scanf("%d %s", &n, &a);
int pos=0;
for(int i=1; i<=n; i++){
   int j=i;
   char temp[10];
    int t_=0;
   while(j){
    temp[t_] = ('0'+(j%10));
    j=j/10;
    t_++;
   }
   for(int j=t_-1; j>=0; j--){
    b[pos++]=temp[j];
   }
}
b[pos]='\0';
//printf("patt: %s text: %s\n",a, b);
    int ps=strlen(a), ts=strlen(b);
    int c=0;
    int p=0;
    int h=1;///hash of pattern
    for(int j=1; j<ps; j++){
        h=(h*d)%q;
    }
    for(int j=0; j<ps; j++){
        p = (p*d + a[j])%q;
    }
     int t=0;///hash of text
     for(int k=0; k<ps; k++){
        t = (t*d + b[k])%q;
     }
     for(int k=0; k<=(ts-ps); k++){
        if(p==t){
            bool check=true;
            for(int k1=0; k1<ps; k1++){
                if(b[k+k1]!=a[k1]){
                    check=false;
                    break;
                }
            }
            if(check){
                c++;
            }
        }
        if(k<((ts-ps))){
            t = (d*(t-(b[k]*h))+b[k+ps])%q;
            if(t<0){
                t = t+q;
            }
        }
    }
    cout<<c<<endl;
}
}

