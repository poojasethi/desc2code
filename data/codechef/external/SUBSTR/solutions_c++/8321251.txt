#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pv(v,b,a) v.insert(v.begin()+b,a)
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define MAXCR 1000000000
#define mem(arr,a) memset(arr, a, sizeof arr)
#define er(vec,a,b) vec.erase(vec.begin() + a, vec.begin() + b+1)
#define traverse(a) for()
#define pii pair<int ,int>
#define mod 1000000007
#define LIM 100
using namespace std;
/*
list as pop_front();push_front(ELEMENT);
list as pop_front();push_back(ELEMENT);
to see first element stack=q.front()
to see last element queue=q.back()
*/
//str.insert(6,str3,3,4); to insert 4 words from str3 starting from 3rd position(0 based indexing) to str from 6th position (0 based indexing)
//str.find("live");//finds first occurance of string and returns its 0 based indes
//string str1=str.substr (a,n);//a=0 based start index,n=length of words//if length not given substring till end is formed
//auto bound_=upper_bound (v.begin(), v.end(), 20); //Returns an iterator pointing to the first element in the range [first,last) which compares greater than val.
//auto bound_=lower_bound (v.begin(), v.end(), 20);//Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.
//bool ans=binary_search();//Returns true if any element in the range [first,last) is equivalent to val, and false otherwise.
/*
//for(???<???>:iterator itr;itr!=???.end();itr++) or for(auto &tt : t.edges)
map<double,LL>my;
map<double,LL>:: iterator it;
for(it=my.begin();it!=my.end();it++)
*/
//getline(cin,s,'\n');  to get input terminating at'\n';excluding '\n'
//(a/b)%m = ((a%m)(b^(m-2)%m))%m.
//(a^b)%m=
//vector<ll>v(size,default val);
//reverse(all(s))//to reverse some vector or string;
//cin.eof() //checks for end of file return true when cin takes input as end of file
ll dig(ll a)
{
	ll cnt=0;
	while(a>0)
	{
		a/=10;
		cnt++;
	}
	return cnt;
}
ll power(ll a,ll b)
{
	ll ans=1;
	ll temp=a;
	while(b>0)
	{
		if(b%2==0)
		{
			temp=temp*temp;
			b/=2;
		}
		else
		{
			ans=temp*ans;
			b--;
		}
	}
	return ans;
}
ll arr[10];
int main()
{
	arr[1]=1;
	arr[2]=12;
	arr[3]=123;
	arr[4]=1234;
	arr[5]=12345;
	arr[6]=123456;
	arr[7]=1234567;
	ll t,d,n,k,i,a,b,cnt,num,j;
	sl(t)
	while(t--)
	{
		cnt=0;
		sl(n)
		sl(k)
		d=dig(k);
		num=arr[d];
		if(d>n)
		{
			printf("0\n");
			continue;
		}
		if(num==k)
		{
			cnt++;
		}
		for(i=d+1;i<=n;i++)
		{
			a=i;
			j=dig(i)-1;
			while(j>=0)
			{
				b=a/(power(10,j));
				a=a%(power(10,j));
				num=num%power(10,d-1);
				num=num*10+b;
				if(num==k)
				{
					cnt++;
				}
				j--;
			}
		}
		printf("%lld\n",cnt);
	}
	return 0;
}
