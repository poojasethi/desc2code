#include <bits/stdc++.h>
#define ll int
#define s(a) scanf("%d",&a)
#define pb push_back
#define mp make_pair
#define f first
#define sc second
#define inf 10e16

using namespace std;

ll lps[1000001];
char arr[6000001];

void compute_lps(char a[],ll len)
{
    ll i,w;
    lps[0]=0;
    w=0;
    i=1;
    while(i<len) {
        if(a[i]==a[w]) {
            w++;
            lps[i]=w;
            i++;
        }
        else if(w!=0) {
            w=lps[w-1];
        }
        else {
            lps[i]=0;
            i++;
        }
    }
}

ll kmp(char b[],char a[],ll le,ll l)
{
    ll i=0,j=0,tot=0;
    while(i<le) {
        if(b[i]==a[j]) {
            i++;j++;
        }
        if(j==l) {
            tot++;
            j=lps[j-1];
        }
        else if(b[i]!=a[j] && i<le){
            if(j)
            j=lps[j-1];
            else i++;
        }
    }
    return tot;
}

ll ende[1000001];
ll start[1000001];
char ax[1001];

int main()
{
    ll i,k,w,ind=0,x,t;
    for(i=1000000;i>=1;i--) {
         ende[i]=ind;
         k=i;
         while(k) {
            w=k%10;
            arr[ind++]=w+'0';
            k/=10;
         }
    }
    for(i=0;i<=2944447;i++) {
        swap(arr[i],arr[5888895-i]);
    }
    for(i=1;i<=1000000;i++) {
        start[i]=5888895-ende[i]+1;
    }
    //for(i=0;i<192;i++) cout<<arr[i];
    s(t);
    while(t--) {
        s(x);scanf("%s",ax);
        k=strlen(ax);
        compute_lps(ax,k);
        printf("%d\n",kmp(arr,ax,start[x],k));
    }
    return 0;
}
