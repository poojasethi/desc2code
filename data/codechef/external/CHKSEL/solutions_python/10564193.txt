#include <bits/stdc++.h>
using namespace std;
const int N = 100000;
typedef long long ll;

int t, p;
ll k, n, fact[N] = {1};

ll modpow(ll b, ll e, ll m) {
	b %= m;
	ll a = 1;
	while (e) {
		if (e & 1) a = a * b % m;
		if (e >>= 1) b = b * b % m;
	}
	return a;
}

ll lucas(ll n, ll k, int p) {
	if (n < 0 || k < 0 || n < k) return 0;
	if (n < p) return fact[n] * modpow(fact[k] * fact[n-k] % p, p - 2, p) % p;
	return lucas(n % p, k % p, p) * lucas(n / p, k / p, p) % p;
}

int main() {
	scanf("%d", &t);
	while (t--) {
		scanf("%lld%lld%d", &n, &k, &p);
		for (int i = 1; i < p; ++i) fact[i] = fact[i - 1] * i % p;
		printf("%lld\n", lucas(n, k, p));
	}
}