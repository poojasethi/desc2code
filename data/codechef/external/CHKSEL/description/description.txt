 
This time Rahul has been given a simple problem. 
He has to find the number of ways of selecting K distinct items from a group of N distinct items.
As the output can be large print the answer modulo P.

 

Flawed code

#include 
#define ll long long
ll fact[1000000];
int pwr(int x,int p,int mod){
    ll t = 1,a=x;
    while(p){a=(a*a)%mod;p=p>>1;}
    return t;}
ll abc(int n,int r,int MOD){
    ll tem=(fact[r]*fact[n-r])%MOD;
    tem=pwr(tem,MOD-1,MOD);
    return (tem*fact[n])%MOD;}
ll xyz(ll n,ll m,int p){
    if(n==0)return 1;
    if(m==0)return 1;
    int ni=n%p;
    int mi=m%p;
    return xyz(n/p,m/p,p)*abc(ni,mi,p)%p;}
ll C(ll n,ll r,int MOD){
    fact[0]=1; for(int i=1;i!=MOD;i++) fact[i]=(i*fact[i-1])%MOD;
    return xyz(n,r,MOD);}
int main(){
    int t;cin>>t;
    while(t--){
        ll n,k;int p;
        cin>>n>>k>>p; 
        printf("%lld",C(n,k,p));
}}

Input

The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains 3 integers, N denoting the total number of distinct items, K denoting number of distinct items to be choosed, P.


 

Output

For each test case, output a single line containing the answer.

 

Constraints

 1 ≤ T ≤ 100
 1 ≤ N ≤ 10^18
 1 ≤ K ≤ N
 1 ≤ P ≤ 10^5
 P is a prime

 

Example
Input:
2
10 2 7
4 2 3 

Output:
3
0

 
