#include <bits/stdc++.h>
using namespace std;
const int maxn = 105;
int a[maxn][maxn], n, m, k, c;

typedef vector<int> VI;
typedef vector<VI> VVI;

bool FindMatch(int i, const VVI &w, VI &mr, VI &mc, VI &seen) {
  for (int j = 0; j < w[i].size(); j++) {
    if (w[i][j] && !seen[j]) {
      seen[j] = true;
      if (mc[j] < 0 || FindMatch(mc[j], w, mr, mc, seen)) {
        mr[i] = j;
        mc[j] = i;
        return true;
      }
    }
  }
  return false;
}

int BipartiteMatching(const VVI &w, VI &mr, VI &mc) {
  mr = VI(w.size(), -1);
  mc = VI(w[0].size(), -1);
  
  int ct = 0;
  for (int i = 0; i < w.size(); i++) {
    VI seen(w[0].size());
    if (FindMatch(i, w, mr, mc, seen)) ct++;
  }
  return ct;
}

bool check(int cap){
	VVI w(n,VI(2*m,0)); VI mr, mc;
	for(int i=0;i<n;i++){
		for(int j=0;j<m;j++){
			if(a[i][j] <= cap) w[i][j] = 1;
			if(a[i][j] + c <= cap) w[i][m+j] = 1;
		}
	}
	return BipartiteMatching(w,mr,mc) >= k;
}

int main(){
	int t; cin >> t;
	while(t--){
		cin >> n >> m >> k >> c;
		for(int i=0;i<n;i++)
			for(int j=0;j<m;j++){
				cin >> a[i][j];
			}
		int l = 0, r = 1e9;
		while(l < r){
			int mid = (l+r)/2;
			if(check(mid)) r = mid;
			else l = mid+1;
		}
		cout << l << "\n";
	}
}