/*using namespace std;

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cmath>
#include<cstring>
# include <string.h>
#define wl(n) while(n--)
#define fl(i,a,b) for(i=a; i<b; i++)
#define rev(i,a,b) for(i=a; i>=b; i--)
#define print(n) printf("%d\n", n)
#define scan(n) scanf("%d", &n)
#define MOD 1000000007
#define ll long long int

char n1[1005], n2[1005];

ll fexp(ll base,ll p)
{
if(p==0)
return 1;
if(base==1)
return 1;
if(p%2==0)
{
ll ret=fexp(base,p/2);
return (ret*ret)%MOD;
}
return (base*fexp(base,p-1))%MOD;
}

void calc_out()
{
ll temp=0, i, ans=1;
for(i=0; n1[i]!='\0'; i++)
temp=(10*temp+n1[i]-'0')%MOD;
if(n2[0]=='0' && strlen(n2)==1)
{printf("%lld\n",temp);}
else {
for(int i=0; n2[i]!='\0'; i++)
ans=(fexp(ans,10)*fexp(temp,n2[i]-'0'))%MOD;
printf("%lld\n", ans);
}}

int main()
{
int cases;
scan(cases);
wl(cases)
{
scanf("%s%s", n1, n2);

calc_out();
}
return 0;
}
*/

#include <bits/stdc++.h>

using namespace std;

long long mod=1000000007;

long long f(long long a, long long b)
{
    if(b==0 || a==1)
        return 1;
    if(b%2==0)
    {
        long long temp = f(a,b/2);
        return (temp*temp)%mod;
    }
    return (a*f(a,b-1))%mod;
}

int main()
{
    long long ten = 10;
    int cases;
    char tl[1003];
    char n[1003];
    scanf("%d",&cases);
    while(cases--)
    {
        scanf("%s%s",&tl,&n);
        int l = strlen(tl);
        long long ans1=0;
        for(int i=0;i<l;i++)
        {
            ans1 = (ans1*ten + (tl[i]-'0'))%mod;
        }
        l = strlen(n);
        int flag=1;
        for(int i=0;i<l;i++)
            if(n[i]!='0')
                flag=0;
        if(flag)
        {
            printf("%lld\n\n",ans1);
            continue;
        }
        long long ans2=1;
        for(int i=0;i<l;i++)
        {
            ans2 = (f(ans2,ten)*f(ans1,(long long)(n[i]-'0')))%mod;
        }
        printf("%lld\n\n",ans2);
        assert(ans2>=0 && ans1>=0);
    }
    return 0;
}
