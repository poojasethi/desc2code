
p
{
font-size:14px;
text-align:justify;
}
.code25
{

display:block;
font-size:14px;
font-weight:bold
}
Shekhar is your best friend. He loves playing algorithmic games with you wherein one person poses a problem and the other one designs an algorithm for it. Its Shekhar's turn to give you a problem and he claims to have a nice little problem for you.

You are given a sorted array (with distinct integers) and you need to find out the location of maximum element in the array. However the problem has a twist.

Shekhar breaks the array at two random points, so that you now have three ( nonempty) subarrays. Furthermore, he picks ANY Two of the three subarrays and swaps their position. While he considers you as his Idol, he is fairly confident this is more than a piece of cake for you. 

Your task, obviously, is to  form an algorithm that finds the index where the maximum element is located.


Input
First line of the input will contain the number of Test cases T ( T<= 100)
For each test case, there are two lines. 
First line contains one integer L which represents the length of the array. Second line contains the rearranged array after swapping of two sub-arrays

Output
For each test case, the output should contain one single integer indicating the index of the element with the maximum value in the array.

Constraints

T <= 100
L <= 100
1 <= i <= j <= L ( i and j are the indices after which the division takes place - their values will be random and will not be provided)

Example
Input:

Output:
2
