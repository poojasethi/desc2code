#include<stdio.h>
#include<list>
#define MOD 1000000007
using namespace std;
long long  graph[205][205];
long long  color[205],visit[205],arr[205];
long long  bfs(long long  start,long long  colour,long long  n)
{
	list <long long > abc;
	long long  max=-1;
	abc.push_back(start);
	while(!abc.empty())
	{
		long long  front=abc.front();
		visit[front]=1;
		color[front]=colour;
		if(arr[front]>max)
			max=arr[front];
		for(long long  i=0;i<n;i++)
		{
			if(graph[front][i] && !visit[i])
			{
				abc.push_back(i);
			}
		}
		abc.pop_front();
	}
	return max;
}
long long gcd( long long a, long long b )
{
  if ( a==0 ) 
  	return b;
  return gcd(b%a,a);
}
int  main()
{
	long long test,n,result;
	scanf("%lld",&test);
	while(test--)
	{
		result=1;
		for(long long  i=0;i<205;i++)
		{
			color[i]=0;
			visit[i]=0;
			arr[i]=0;
		}
		for(long long  i=0;i<205;i++)
		for(long long  j=0;j<205;j++)
			graph[i][j]=0;
		scanf("%lld",&n);
		//long long arr[n];
		for(long long  i=0;i<n;i++)
		{
			scanf("%lld",&arr[i]);
		}
		for(long long  i=0;i<n;i++)
		{
			for(long long  j=0;j<n;j++)
			{
				if(i==j)
					graph[i][j]=0;
				if(gcd(arr[i],arr[j])>1)
					graph[i][j]=1;
			}
		}
		long long  colour=1,temp;
		for(long long  i=0;i<n;i++)
		{
			if(!visit[i])
			{
				temp=bfs(i,colour,n);
				colour++;
				result=result*temp;
				result=result%MOD;
			}
		}
		printf("%lld\n",result);
	}
	return 0;
}
