#include<iostream>
using namespace std;
#define mod 1000000007
typedef unsigned long long ll;

int findgcd(int a,int b)
{
    if(!b)
        return a;
    else
        return findgcd(b,a%b);
}

void recfun(int arr[],int visited[],int cover[], int ind, int count,int n)
{
	for(int k=0; k<n; k++)
	{
		if(cover[k]==0 && findgcd(arr[ind],arr[k])>1)
			{   
				//cout<<arr[k]<<endl;
				//cout<<count<<endl;
				visited[k]=count;
				cover[k]=1;
				recfun(arr,visited,cover,k,count,n);
			}
		}
}



int main()
{
	int test;
	int arr[210];
	int visited[210];
	int cover[210];
	int n,i,j,count;
	cin>>test;
	while(test--)
		{
			cin>>n;
			for(i=0;i<n;i++)
				cin>>arr[i];
			for(i=0;i<n;i++)
				{visited[i]=-1;
					cover[i]=0;
				}
			count=0;
			for(i=0;i<n;i++)
			{
				if(visited[i]==-1)
				{
					count++;
					visited[i]=count;
					cover[i]=1;
				}
				//else
				{
					for(j=0;j<n;j++)
					{
						if(cover[j]==0 && findgcd(arr[i],arr[j])>1)
							{   
								visited[j]=visited[i];
								cover[j]=1;
								recfun(arr,visited,cover,j,count,n);
							}
					}
				}
			}
			ll total=1;
		//	for(i=0;i<n;i++)
		//		cout<<visited[i]<<'\t'<<endl;
			for(i=1;i<=count;i++)
			{
				int maxer=0;
				for(j=0;j<n;j++)
				{
					if(visited[j]==i)
					{
						if(arr[j]>maxer)
							maxer=arr[j];
					}
				}
				total=(total*maxer)%mod;
			}
			cout<<total<<endl;
		}
		return 0;
}