#include <iostream>
#include <map>
#include <stack>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <algorithm>
using namespace std;

#define gc getchar
#define MOD 100000007
#define pc(x) putchar(x);
#define pi(n) printf("%d",n)
#define pll(n) printf("%lld",n)
#define ps printf(" ")
#define pn printf("\n")
#define rep(i,n) for(i=0;i<n;i++)
#define fu(i,a,n) for(i=a;i<=n;i++)
#define fd(i,n,a) for(i=n;i>=a;i--)
#define INV 333333336
#define ll long long
#define EPS 1e-9
#define infi 2000000000

long long ctoi(){
	char c;
	while(c=getchar(),(c<'0'||c>'9')&&(c!='-'));
	bool flag=(c=='-');
	if(flag)
		c=getchar();
	long long x=0;
	while(c>='0'&&c<='9'){
		x=x*10+c-48;
		c=getchar();
    }
	return flag?-x:x;
}

int gcd(int a,int b){
	if(b==0)	return a;
	return gcd(b,a%b);
}

int main(){
	int t=ctoi();
	while(t--){
		int n=ctoi();
		int arr[n];
		for(int i=0;i<n;i++){
			arr[i]=ctoi();
		}
		vector< vector<int> > v(n);
		for(int i=0;i<n;i++){
			for(int j=i+1;j<n;j++){
				if(gcd(arr[i],arr[j])>1){
					v[i].push_back(j);
					v[j].push_back(i);
				}else{
//					printf("%d %d gcd is 1\n",arr[i],arr[j]);
				}
			}
		}
		long long ans=1;
		bool vis[n];
		memset(vis,false,sizeof(vis));
		for(int i=0;i<n;i++){
			if(!vis[i]){
				int max=1;
				stack<int> st;
				st.push(i);
//				printf("index %d pushed onto stack\n",i);
				while(!st.empty()){
					int temp=st.top();
					st.pop();
					vis[temp]=true;
					if(max<arr[temp]){
						max=arr[temp];
//						printf("max changed to %d\n",arr[temp]);
					}
					int sz=v[temp].size();
//					printf("size of vector for index %d is %d\n",i,sz);
					for(int j=0;j<sz;j++){
						if(!vis[v[temp][j]]){
							st.push(v[temp][j]);
						}
					}
				}
				ans=ans*max;
				ans=ans%1000000007;
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}