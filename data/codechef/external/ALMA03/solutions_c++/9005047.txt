#include<bits/stdc++.h>
using namespace std;
#define ll long long
#define mod 1000000007
class graph
{
	int v;
	list<int> *adj;
	public:
	graph(int v)
	{
		this->v=v;
		adj=new list<int>[v];
	}
	void add_edge(int u,int v)
	{
		adj[u].push_back(v);
		adj[v].push_back(u);
	}
	int bfs(vector<int>& visited,int v,vector<int>& val)
	{
		visited[v]=1;
		list<int>::iterator it;
		int u,maxi;
		maxi=val[v];
		queue<int> q;
		q.push(v);
		while(!q.empty())
		{
			u=q.front();
			q.pop();
			for(it=adj[u].begin();it!=adj[u].end();it++)
			{
				if(!visited[*it])
				{
					maxi=max(maxi,val[*it]);
					q.push(*it);
					visited[*it]=1;
				}
			}
		}
		return maxi;
	}	
};
int main()
{
	int i,n,t,j;
	ll ans;
	vector<int> v(200);
	scanf("%d",&t);
	while(t--)
	{
		ans=1;
		scanf("%d",&n);
		graph g(n);
		vector<int> visited(n);
		for(i=0;i<n;i++)
		{
			scanf("%d",&(v[i]));
		}
		for(i=0;i<n-1;i++)
		{
			for(j=i+1;j<n;j++)
			{
				if(__gcd(v[i],v[j])>1)
				{
					g.add_edge(i,j);
				}
			}
		}
		for(i=0;i<n;i++)
		{
			if(!visited[i])
			{
				ans=(ans*g.bfs(visited,i,v))%mod;
			}
		}
		printf("%lld\n",ans);
	}
	return 0;
}