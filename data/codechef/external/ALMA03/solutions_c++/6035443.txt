#include <bits/stdc++.h>
#define N 205
using namespace std;

int A[N], B[N], counter = 0, n;
bool v[N][N], visited[N];

void dfs(int x){
    if(visited[x])  return ;
    visited[x] = true;
    B[x] = counter;
    for(int i=0;i<n;i++){
        if(v[x][i]==true && visited[i]==false)  dfs(i);
    }
    return ;
}

int main(){

    int t;
    cin>>t;
    while(t--){
        memset(v, false, sizeof(v));
        memset(visited, false, sizeof(visited));
        cin>>n;
        for(int i=0;i<n;i++)    cin>>A[i];

        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(__gcd(A[i], A[j]) > 1)   v[i][j] = true;
            }
        }

        counter = 0;
        for(int i=0;i<n;i++){
            if(visited[i])  continue;
            else{
                dfs(i);
                counter++;
            }
        }
        int ans[N];
        long long tot = 1;
        memset(ans, 0, sizeof(ans));
        for(int i=0;i<n;i++)    ans[B[i]] = max(ans[B[i]], A[i]);
        for(int i=0;i<counter;i++){
                tot *= ans[i];
                tot %= (1000000007);
        }
        cout<<tot<<endl;
    }
    return 0;
}
