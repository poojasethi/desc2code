/*
ID: shalzb
LANG: C++
TASK: beads
 */

#include<iostream>
#include<cstring>
#include<map>
#include<algorithm>
#include<vector>
#include<fstream>
using namespace std;

string s;
int dp[80][80][2];

int op(int i,char op,int j)
{
    switch(op)
    {
        case '+':   if((i==1&&j==0)||(i==0&&j==1)||(i==1&&j==1)) return 1;
                    return 0;
                    break;
        case '*':   if((i==0&&j==0)||(i==1&&j==1)) return 0;
                    return 1;
                    break;
        case '.':   if(i==1&&j==1) return 1;
                    return 0;
                    break;
    }
}

int main()
{
    cin>>s;
    int n=s.size();
    for(int i=0;i<n;i+=2)
    {
        dp[i][i][0]=(s[i]=='F'?1:0);
        dp[i][i][1]=(s[i]=='T'?1:0);
        if(i+2<n){
            int v=op(s[i]=='T'?1:0,s[i+1],s[i+2]=='T'?1:0);
            if(v==1) dp[i][i+2][1]++;
            else dp[i][i+2][0]++;
        }
    }
    for(int i=n-1;i>=0;i-=2)
    {
        for(int j=i+4;j<n;j+=2)
        {
            for(int k=i;k<=j;k+=2)
            {
                if(s[k+1]=='.'){
                    dp[i][j][0]+=(dp[i][k][0]*dp[k+2][j][0]);
                    dp[i][j][0]+=(dp[i][k][0]*dp[k+2][j][1]);
                    dp[i][j][0]+=(dp[i][k][1]*dp[k+2][j][0]);
                    dp[i][j][1]+=(dp[i][k][1]*dp[k+2][j][1]);
                }
                else if(s[k+1]=='*')
                {
                    dp[i][j][1]+=(dp[i][k][0]*dp[k+2][j][1]);
                    dp[i][j][1]+=(dp[i][k][1]*dp[k+2][j][0]);
                    dp[i][j][0]+=(dp[i][k][1]*dp[k+2][j][1]);
                    dp[i][j][0]+=(dp[i][k][0]*dp[k+2][j][0]);
                }
                else
                {
                    dp[i][j][1]+=(dp[i][k][0]*dp[k+2][j][1]);
                    dp[i][j][1]+=(dp[i][k][1]*dp[k+2][j][0]);
                    dp[i][j][1]+=(dp[i][k][1]*dp[k+2][j][1]);
                    dp[i][j][0]+=(dp[i][k][0]*dp[k+2][j][0]);
                }
            }
        }
    }
    cout<<dp[0][n-1][1]<<"\n";
    return 0;
}
