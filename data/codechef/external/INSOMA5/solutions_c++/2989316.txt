//By Rupinder :)
#include<iostream>
#include<map>
#include<set>
#include<string.h>
#include<stdio.h>
#include<vector>
#include<math.h>
#include<string>
#include<algorithm>
#include<iterator>
#include<iomanip>
#include<limits.h>
#include<numeric>
using namespace std;

#define Pi 3.14159265358979323846264338327950288419716939937510582
typedef long long int lld;
typedef vector<int> vi;
typedef pair<int,int> pii;
#define sz size()
#define MOD 1000000007
#define pb push_back
#define mp make_pair
#define pf push_front
#define ppb pop_back
#define all(a) a.begin(),a.end()
lld modpow(lld a,lld n,lld temp){lld res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;}
lld gcd(lld a,lld b){if(a==0)return(b);else return(gcd(b%a,a));}
#define xor1 4
#define and1 2
#define or1 3
int main()
{
		int val[200]={0},dpt[200][200]={0},dpf[200][200]={0},op[200]={0},valcur=0;
		char s[200];
		scanf("%s",s);
		int len=strlen(s);
		for(int i=0;i<len;i++)
		{
			if(s[i]=='T')
				val[++valcur]=1;
			else if(s[i]=='F')
				val[++valcur]=0;
			else if(s[i]=='.')
				op[valcur]=and1;
			else if(s[i]=='+')
				op[valcur]=or1;
			else if(s[i]=='^')
				op[valcur]=xor1;
		}
		for(int i=1;i<=valcur;i++)
		{
			//cout<<val[i]<<endl;
			if(val[i])
			{
				dpt[i][i]=1;
				dpf[i][i]=0;
			}else{
				dpt[i][i]=0;
				dpf[i][i]=1;
			}
		}
		for(int l=1;l<=valcur;l++)
		{
			for(int j=l;j<=valcur;j++)
			{
				int i=j-l+1;
				//cout<<i<<" "<<j<<endl;
				for(int k=i;k<=j-1;k++)
				{
					if(op[k]==and1)
					{
						dpt[i][j]+=dpt[i][k]*dpt[k+1][j];
						dpf[i][j]+=dpf[i][k]*dpf[k+1][j]+dpt[i][k]*dpf[k+1][j]+dpf[i][k]*dpt[k+1][j];
					}else if(op[k]==or1)
					{
						dpt[i][j]+=dpt[i][k]*dpt[k+1][j]+dpf[i][k]*dpt[k+1][j]+dpt[i][k]*dpf[k+1][j];
						dpf[i][j]+=dpf[i][k]*dpf[k+1][j];
					}else{
						dpt[i][j]+=dpt[i][k]*dpf[k+1][j]+dpf[i][k]*dpt[k+1][j];
						dpf[i][j]+=dpt[i][k]*dpt[k+1][j]+dpf[i][k]*dpf[k+1][j];
					}
				}
			}
		}/*
		for(int i=1;i<=valcur;i++)
		{
			for(int j=1;j<=valcur;j++)
			{
				cout<<dpt[i][j]<<dpf[i][j]<<" ";
			}
			cout<<endl;
		}*/
		cout<<dpt[1][valcur]<<endl;
	return 0;
}
