#include<cstdio>
#include<cstdlib>
#include<iostream>
#include<algorithm>
#include<vector>
#include<cstring>
#include<ctype.h>
#include<climits>
#include<set>
#include<string>
#include<cmath>

using namespace std;

#define FOR(i, a, b) for(i=(a);i<=(b);i++)
#define FORR(i, a, b) for(i=(a);i>=(b);i--)
#define S(n) scanf("%d", &n)
#define P(k) printf("%d\n", k)
#define Pl(k) printf("%lld\n", k)
#define pb push_back
#define mp make_pair
#define ll long long
#define VI vector<int>
#define PII pair<int, int>
#define ft first
#define sd second
#define inf (1<<30)
#define PNL printf("\n")
#define SP system("pause")

int dp[30][30][2];
char s[32];

int ans(int a, int b, int c){
    if(dp[a][b][c] != -1) return dp[a][b][c];
    int i;
    dp[a][b][c] = 0;
    if(c == 1){
        for(i = a+1; i <= b-1; i += 2){
            if(s[i] == '.'){
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 1);
            }
            if(s[i] == '+'){
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 0);
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 1);
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 1);
            }
            if(s[i] == '*'){
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 0);
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 1);
            }
        }
        return dp[a][b][c];
    }
    else{
        for(i = a+1; i <= b-1; i += 2){
            if(s[i] == '.'){
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 1);
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 0);
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 0);
            }
            if(s[i] == '+'){
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 0);
            }
            if(s[i] == '*'){
                dp[a][b][c] += ans(a, i-1, 0)*ans(i+1, b, 0);
                dp[a][b][c] += ans(a, i-1, 1)*ans(i+1, b, 1);
            }
        }
        return dp[a][b][c];
    }
}

int main(){
    int i, j, k, l, n, m;
    scanf("%s", s);
    n = strlen(s);
    FOR(i, 0, 29) FOR(j, 0, 29) FOR(k, 0, 1) dp[i][j][k] = -1;
    for(i = 0; i<n; i += 2){
        dp[i][i][1] = (s[i] == 'T');
        dp[i][i][0] = (s[i] == 'F');
    }
    P(ans(0, n-1, 1));
    SP;
    return 0;
}
