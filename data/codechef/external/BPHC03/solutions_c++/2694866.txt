/*
author :  R Anirudh 
*/

#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cstring>
#include <queue>
#include <cassert>
#include <climits>
#include <limits>
using namespace std;
#define SIZE(A) ((int)(A.size()))
#define MSET(A,x) memset(A,x,sizeof(A));
#define FILL(A,x) fill(A.begin(),A.end(),x)
#define REP(i,N) for(int i=0;i<(int)(N);i++)
#define FOR(i,a,b) for(int i=(int)(a);i<(int)(b);i++)
#define REV(i,a,b) for(int i=(int)(a);i>=(int)(b);i--)
#define TR(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
#define ALL(x) x.begin(),x.end()
#define INF (INT_MAX/2)
#define LLINF (LONG_LONG_MAX/2LL)
#define EPS 1e-12
#define GI ({int t;scanf("%d",&t);t;})
#define GL ({long long t;scanf("%lld",&t);t;})
#define GF ({double t;scanf("%lf",&t);t;})
#define bitCount(n) __builtin_popcount(n)
#define MOD 10000009
#define MAXN 1000005
#define FIX(a) (((a)%MOD+MOD)%MOD)
typedef long long LL;
typedef unsigned long long ULL;
#define pb push_back

int maze[15][15];
int c=0;
int n;

void floodfill(int x,int y){
	if(x==n-1 && y==n-1)
	{c++;
	return;
	}
	 maze[x][y]=1;
	if(maze[x+1][y]==0 && x+1<=n-1) floodfill(x+1,y);
	if(maze[x][y+1]==0 && y+1<=n-1) floodfill(x,y+1);
	if(maze[x-1][y]==0 && x-1>0) floodfill(x-1,y);
	if(maze[x][y-1]==0 && y-1>0) floodfill(x,y-1); 
	maze[x][y]=0;
	}

int main(){  
scanf("%d",&n);
for(int i=0;i<n;i++){
	for(int j=0;j<n;j++){
		scanf("%d",&maze[i][j]);
		}
	}
floodfill(0,0);
printf("%d\n",c);
return 0;
}


