// Author: thecodekaiser
#include <bits/stdc++.h>
using namespace std;

#define MAXN 21
int maze[MAXN][MAXN], vis[MAXN][MAXN];
int N, cnt;

void dfs(int r, int c)
{
	vis[r][c] = 1;
	if(r == N-1 and c == N-1)
		cnt++;

	if(r+1 < N and vis[r+1][c] == 0 and maze[r+1][c] == 0)
		dfs(r+1,c);

	if(r-1 >= 0 and vis[r-1][c] == 0 and maze[r-1][c] == 0)
		dfs(r-1,c);

	if(c+1 < N and vis[r][c+1] == 0 and maze[r][c+1] == 0)
		dfs(r,c+1);
	
	if(c-1 >= 0 and vis[r][c-1] == 0 and maze[r][c-1] == 0)
		dfs(r,c-1);

	vis[r][c] = 0;
	return;
}


void solve()
{
	cin >> N;
	for(int i = 0; i < N; i++)
		for(int j = 0; j < N; j++)
			cin >> maze[i][j];

	dfs(0,0);

	cout << cnt << endl;
	return;
}

int main()
{
	solve();
	return 0;
}
