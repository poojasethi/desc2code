/* MASTRAM */
#include <iostream>
#include <bits/stdc++.h>

using namespace std;
const int N = 10;
int M;
int A[N][N],sol[N][N];
int pathcnt = 0;
void solve(int A[N][N],int M,int i,int j)
{
    if(i == M-1 && j == M-1)
        pathcnt++;
    sol[i][j] = 1;
    if( (j+1)<M && sol[i][j+1] == 0 && A[i][j+1] == 0)
        solve(A,M,i,j+1);
    if((j-1)>=0 && sol[i][j-1] == 0 && A[i][j-1] == 0)
        solve(A,M,i,j-1);
    if((i+1)<M && sol[i+1][j] == 0 && A[i+1][j] == 0)
        solve(A,M,i+1,j);
    if((i-1)>=0 && sol[i-1][j] == 0 && A[i-1][j] == 0)
        solve(A,M,i-1,j);
    sol[i][j] = 0;

}
int main()
{
    scanf("%d", &M);
    for(int i = 0; i < M; i++) {
        for(int j = 0; j < M; j++) {
            cin >> A[i][j];
        }
    }
    solve(A,M,0,0);
    printf("%d\n",pathcnt);

    return 0;
}
