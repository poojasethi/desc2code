#include<iostream>
using namespace std;
#include<stdio.h>
#include<vector>

int dir[4][2]={1,0,-1,0,0,1,0,-1};

int inbounds(int a,int b,int n)
{
	if(a<0||a>=n)
	return 0;
	
	if(b<0||b>=n)
	return 0;
	
	return 1;
}

void func(vector<vector<int> >ar,vector<vector<int> >visited,int a,int b,int n,int *count)
{
	if((a==(n-1))&&(b==(n-1)))
	{
		(*count)++;
		return;
	}
	
	int i;
	int I,J;
	
	for(i=0;i<4;i++)
	{
		I=a+dir[i][0];
		J=b+dir[i][1];
		
		if(inbounds(I,J,n))
		if(!visited[I][J])
		if(!ar[I][J])
		{
			visited[I][J]=1;
			func(ar,visited,I,J,n,count);
			visited[I][J]=0;
		}
	}
}

int main()
{
	int n,i,j;
	scanf("%d",&n);
	
	vector<vector<int> >ar;
	vector<vector<int> >visited;
	ar.resize(n);
	visited.resize(n);
	
	for(i=0;i<n;i++)
	ar[i].resize(n);
	
	for(i=0;i<n;i++)
	visited[i].resize(n);
	
	for(i=0;i<n;i++)
	for(j=0;j<n;j++)
	scanf("%d",&ar[i][j]);
	
	int count=0;
	
	func(ar,visited,0,0,n,&count);
	
	cout<<count;
	return 0;
}