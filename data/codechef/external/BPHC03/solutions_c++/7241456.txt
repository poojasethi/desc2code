#include<iostream>
using namespace std;

int pathCount = 0, maze[20][20], visited[20][20];

int isSafe(int row, int col, int n){
	if (row >= 0 && row < n && col >= 0 && col < n && maze[row][col] !=1 && !visited[row][col])
		return 1;
	else
		return 0;
}

void DFS(int row, int col, int n){
	//printf("%d %d\n", row, col);
	visited[row][col] = 1;
	if (row == n-1 && col == n-1){
		pathCount++;
		visited[row][col] = 0;
		return;
	}
	if (isSafe(row, col + 1, n))
		DFS(row, col + 1, n);
	if (isSafe(row - 1, col, n))
		DFS(row - 1, col, n);
	if (isSafe(row, col - 1, n))
		DFS(row, col - 1, n);
	if (isSafe(row + 1, col, n))
		DFS(row + 1, col, n);
	visited[row][col] = 0;
}

int main(){
	//freopen("test.txt", "r", stdin);
	int n, size;
	cin >> n;
	size = n * n;
	for (int i = 0; i < n; i++){
		for (int j = 0; j < n; j++){
			cin >> maze[i][j];
		}
	}
	DFS(0, 0, n);
	cout << pathCount << endl;
	return 0;
}