#include<bits/stdc++.h>
using namespace std;
void path(int x, int y, int n,int *P, int &count);
void top(int x,int y,int n,  int *P,int &count)
{
	if(y-1>=0 && *((P+(y-1)*n)+x)==0)
	{
	y=y-1;
	path(x,y,n,(int *)P,count);	
    }
}
void down(int x,int y,int n, int *P, int &count)
{
	if(y-1<n && *((P+(y+1)*n)+x)==0)
    {
	y=y+1;
	path(x,y,n,(int *)P,count);
    }
}
void left(int x,int y,int n, int *P ,int & count)
{
	if(x-1>=0 && *((P+y*n)+(x-1))==0	)
	{
	x=x-1;
	path(x,y,n,(int *)P,count);
    }
}
void right(int x,int y,int n, int *P,int & count)
{
	if(x+1<n && *((P+y*n)+(x+1))==0	)
	{
	x=x+1;
	path(x,y,n,(int *)P,count);
   }
}
void path(int x,int y,int n,int *P,int &count)
{
	*((P+y*n)+x)=2;
	if(x==n-1 && y==n-1)
	{
		count=count+1;
	}
	else
	{
top(x,y,n,(int *)P,count);
down(x,y,n,(int *)P,count);
left(x,y,n,(int *)P,count);
right(x,y,n,(int *)P,count);
   }
   *((P+y*n)+x)=0;
}
int main()
{
	int n;
	cin>>n;

	int P[n][n];
	for(int i=0;i<n;i++)
	for(int j=0;j<n;j++)
	cin>>P[i][j];
	int x=0;
	int y=0;
	int count=0;
    path(x,y,n,(int *)P,count);
	cout<<count;
	return 0;
}