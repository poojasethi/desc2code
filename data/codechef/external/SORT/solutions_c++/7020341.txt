#include<iostream>
using namespace std;
class sorting
{
	int *arr,i,j,k,n,pivot;
	public:
		void read()
		{
		
			cin>>n;
			arr=new int[n];
			for(i=0; i<n; i++)
			{
				
				cin>>arr[i];
				
			}
			
		}
		void ssort();
		int partition(int arr[],int start,int end);
		void qsorting(int arr[],int start,int end);
		void print();
};
inline void sorting :: print()
{
	for(i=0; i<n; i++)
	{
		cout<<arr[i]<<"\n";
	}
	
}
void sorting::qsorting(int arr[],int start,int end)
{
	int pindex;
   if(start<end)
   {
   	pindex=partition(arr,start,end);
   	if(start<pindex-1)
   	qsorting(arr,start,pindex-1);
   	if(pindex+1<end)
   	qsorting(arr,pindex+1,end);
   }	
}
int sorting::partition(int arr[],int start,int end)
{
	int pindex;
     pivot=arr[end];
	pindex=start;
	for(i=start; i<end; i++)
	{
		if(arr[i]<=pivot)
		{
			arr[i]=arr[i]+arr[pindex]-(arr[pindex]=arr[i]);
			pindex++;
		}
	}
	arr[pindex]=arr[end]+arr[pindex]-(arr[end]=arr[pindex]);
	return pindex;
}
void sorting :: ssort()
{
	qsorting(arr,0,n-1);
}
    int main()
   {
    sorting s;  
    s.read();   
     s.ssort();   
      s.print();
      return 0;
    
}