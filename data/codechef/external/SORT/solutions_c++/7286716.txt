#include<stdio.h>
void quicksort(int *x,int start,int end);
int partition(int *x,int start,int end);


int main()
{
    int i,j,n;
    scanf("%d",&n);

    int x[n];

    for(i=0;i<n;++i)
        scanf("%d",&x[i]);


     quicksort(x,0,n-1);

    for(i=0;i<n;++i)
        printf("%d\n",x[i]);

    return 0;
}
void quicksort(int *x,int start,int end)
{
    if(start<end)
    {
        int partition_index=partition(x,start,end);
        quicksort(x,start,partition_index-1);
        quicksort(x,partition_index+1,end);
    }
}
int partition(int *x,int start,int end)
{
    int pivot=x[end],i;
    int partition_index=start;

    for( i=start;i<=end;i++)
    {
        if(x[i]<pivot)
        {
            int temp = x[i];
            x[i]=x[partition_index];
            x[partition_index]=temp;
            // swap(x[i],x[partition_index]) coz at any instant all the numbers less than pivot should be less than pindex

            partition_index++;
        }
    }
    int temp =x[end];
    x[end] = x[partition_index];
    x[partition_index]=temp;
    //swap(x[partition_index,x[end]]);
    return partition_index;
}
