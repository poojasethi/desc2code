#include<iostream>
#include<vector>
#include<cmath>
#include<cassert>
#define ll long long
#define ld long double
using namespace std;
//testing
void doit(ll n,ll phi)
{
	if(phi == n-1){cout<<n;return;}
	//phi = (p-1) * (q-1)
	//phi=n+1 -p -q
	//p+q = n+1-phi
	ll sum=n+1-phi;
	ll a=1,b=-sum,c=phi+sum-1,ans;
	ans = (sum + (ll)sqrt((ld)sum*(ld)sum - (ld)4 * (ld)c))/2;	
	for(int i=-2;i<=2;++i)
	{
		if(n%(ans-i)==0)
		{
			cout<<min(ans-i,n/(ans-i))<<" "<<max(ans-i,n/(ans-i));return;
		}
	}
	//or phi=p*(p-1)
	ans = (1 + (ll)sqrt(1+4*(ld)phi) )/2;
	for(int i=-2;i<=2;++i)
	{
		if((ans-i)*(ans-i) == n){cout<<ans-i<<" "<<ans-i;return;}
	}
	assert(0);
}
vector<bool> sieve(2000000,1);
int main()
{
	for(ll i=2;i<10000;++i)
	{
		if(sieve[i])
		{
			for(ll j=i*i;j<2000000;j+=i)
				sieve[j]=0;
		}
	}
	int t;
	cin>>t;
	for(int q=0;q<t;++q)
	{
		ll num,phi;
		cin>>num>>phi;
		ll n=num;
		for(int i=2;i<=min(1500000ll,n);++i)
		{
			if(sieve[i])
			{
				int pow=0;
				while(n%i ==0)
				{
					cout<<i<<" ";
					n/=i;
					pow++;
				}
				if(pow>0)
				{
					phi/=(i-1);
					for(int q=0;q<pow-1;++q)phi/=i;
				}
			}
		}
		if(n!=1)doit(n,phi);
		cout<<endl;
	}
	return 0;
}