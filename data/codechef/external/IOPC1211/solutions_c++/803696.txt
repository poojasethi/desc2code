#include<map>
#include<cstdio>
#include<vector>
#include<algorithm>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

const int P_MAX=60;
vector<int> p; // P_MAX 以下の素数のリスト
void sieve(){
	static bool er[P_MAX+1];
	rep(i,P_MAX+1) er[i]=(i>=2);
	for(int i=2;i*i<=P_MAX;i++) if(er[i]) for(int j=i*i;j<=P_MAX;j+=i) er[j]=false;
	rep(i,P_MAX+1) if(er[i]) p.push_back(i);
}

map<int,long double> f; // 約数の個数,高度合成数の候補

// 今見ている合成数, 次にかける素数の番号, 最大の素因数を何回かけたか, 約数の個数
void rec(long double cn,int i,int ub,int nd){
	map<int,long double>::iterator it=f.find(nd);
	if(it==f.end() || it->second>cn) f[nd]=cn;

	for(int j=1;j<=ub;j++){
		cn*=p[i];
		if(cn>1e20) break;
		rec(cn,i+1,j,nd*(1+j));
	}
}

int main(){
	sieve();

	f[1]=1;
	rec(1,0,777,1);

	vector< pair<int,long double> > hcn;
	map<int,long double>::reverse_iterator it;
	for(it=f.rbegin();it!=f.rend();++it){
		if(hcn.empty() || hcn.back().second>it->second) hcn.push_back(*it);
	}
	sort(hcn.begin(),hcn.end());

	int T; scanf("%d",&T);
	while(T--){
		int n; scanf("%d",&n);
		int i=upper_bound(hcn.begin(),hcn.end(),make_pair(n,1e77L))-hcn.begin();
		if(i==hcn.size() || hcn[i].second>1e19) puts("lose");
		else printf("win %.0Lf\n",hcn[i].second);
	}

	return 0;
}
