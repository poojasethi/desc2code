#include <stdio.h>
#include <algorithm>
#include <cstring>
typedef unsigned long long ull;
const int MOD=10000;
const int MAX=500001;
int T,N;
ull a[MAX];
bool flag[MAX];
int getint()
{
	int d,r=0;
	while ((d=getchar_unlocked())<48) {}
	do
	{
		r=(r<<3)+(r<<1)+d-48;
		d=getchar_unlocked();
	}
	while (d>=48);
	return r;
}
int main()
{
	std::fill(a,a+MAX,1);
	memset(flag,0,sizeof(flag));
	int M=MAX>>1;
	for (int i = 2; i <= M; i++)
	{
		for (int j = i+i; j < MAX; j+=i)
		{
			a[j]=a[j]*i;
			if(a[j]>=MOD)
			{
				flag[j]=true;
				a[j]%=MOD;
			}
		}
	}
	scanf("%d",&T);
	while (T--)
	{
		N=getint();
		if(flag[N])
			printf("%04d\n",a[N]);
		else
			printf("%d\n",a[N]);
	}
}