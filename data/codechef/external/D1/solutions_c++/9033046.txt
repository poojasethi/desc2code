#include<bits/stdc++.h>
using namespace std;
#define limit 500001
#define mod 10000
#define ll long long
vector<bool> rep(500001);
ll power(ll a,ll b)
{
	if(b==0)
		return 1;
	if(b==1)
		return a;
	ll temp=power(a,b/2);
	temp=(temp*temp);
	if(temp>=mod)
	{
		temp=temp%mod;
		rep[a]=true;
	}
	if(b&1)
	temp=(temp*a);
	if(temp>=mod)
	{
		temp=temp%mod;
		rep[a]=true;
	}
	return temp;
}
int main()
{
	ll i,j,t,n,c=0,temp;
	ll cal1,cal2,cal3;
	vector <bool>v(500001);
	vector<ll> ans(500001,1);
	for(j=4;j<500001;j=j+2)
	{
		v[j]=true;
		temp=j;
		c=0;
		while(temp%2==0)
		{
			c++;
			temp/=2;
		}
		ans[j]*=(c+1);
	}
	for(i=3;i<500001;i=i+2)
	{
		if(!v[i])
		{
			if(i==230001)
				cout<<"hi";
			for(j=2*i;j<500001;j=j+i)
			{
				v[j]=true;
				temp=j;
				c=0;
				while(temp%i==0)
				{
					c++;
					temp/=i;
				}
				ans[j]*=(c+1);
			}
		}
	}
	for(i=4;i<500001;i++)
	{
		if(v[i])
		{
			cal1=sqrt(i);
			if(cal1*cal1==(ll)i)
			{
				ans[i]-=3;
				cal2=ans[i]/2;
				cal3=power(i,cal2);
				cal3=cal1*cal3;
				if(cal3>=mod)
				{
					cal3=cal3%mod;
					rep[i]=true;
				}
				ans[i]=(ll)cal3;
			}
			else
			{
				ans[i]-=2;
				cal1=i;
				cal2=ans[i]/2;
				cal3=power(cal1,cal2);
				if(cal3>=mod)
				{
					cal3=cal3%mod;
					rep[i]=true;
				}
				ans[i]=(ll)cal3;
			}
		}
	}
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld",&n);
		if(rep[n])
		printf("%04lld\n",ans[n]);
		else
			printf("%lld\n",ans[n]);
	}
	return 0;
}