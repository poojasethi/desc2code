#include<iostream>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<fstream>
using namespace std;
#define abs(x) ((x)>0?(x):-(x))
#define M 500000
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define tkint(n) scanf("%d",&n)
#define tkchar(ch) scanf("%c",&ch)
#define tklong(n) scanf("%I64d",&n)
int see[M+5];
lld nof[M+5];
lld s;

int power(long a,long b)
{
    if(b==0)return 1;
    else
    {
        s=power(a,b/2);
        if(b%2==0)return (s%10000)*(s%10000)%10000;
        else return (s%10000)*(s%10000)*a%10000;
    }
}
int pwo(int x,int e)
{
    int p=0;
    while(x>0&&x%e==0)
    {
        x/=e;
        ++p;
    }
    return p;
}
void seive()
{
    for(int i=2;i<=M;++i)
    {
        if(see[i]==0)
        {
            for(int j=1;j*i<=M;++j)
            {
                see[i*j]=1;
                int p=pwo(i*j,i);
                if(nof[j*i]==0)nof[j*i]++;
                nof[j*i]*=p+1;
            }
        }
    }
}
int nda(int x)
{
    int r=0;
    while(x!=0)
    {
        r++;
        x/=10;
    }
    return r;
}
int main()
{
    seive();
    int t,n;
    cin>>t;
    while(t--)
    {
        scanf("%d",&n);
        int ans;
        lld x=nof[n];
        if(x%2==0)ans=power(n,(x-2)/2);
        else
        {
            ans=power(sqrt(n),x-2);
        }
    int dig=((x-2)/2.0)*log10(n)==(int)(((x-2)/2.0)*log10(n))?ceil(((x-2)/2.0)*log10(n))+1:ceil(((x-2)/2.0)*log10(n));
    if(dig<=4)printf("%d",ans);
	else
    {
        int nod=nda(ans);
        for(int i=0;i<4-nod;++i)printf("0");
        if(nod)printf("%d",ans);
    }
    printf("\n");
    }
}
