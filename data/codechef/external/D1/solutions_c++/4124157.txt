#include<iostream>
#include<cmath>

using namespace std;

long int NoOfDivisor[500001];
int f;
long int IsPerfect[500001];
#define MOD 10000
/*
unsigned long long  int mypow(long int x, unsigned long int n)
{
   unsigned long long int p;
   unsigned long long int temp;
   
   if(x>10000)
	{
		f=1;
		x=x%MOD;
		
	}
    if(n==0)
            return 1;
    if(n==1)
            return x;
    if(n%2==0)
    {
            p=mypow(x, n/2);
            temp=(p*p);
            if(temp>MOD)
            {
            	f=1;
            	temp=temp%MOD;
            }
            return temp;
    }
    else  
    {
          p=mypow(x, (n-1)/2);
          
          temp=(((p*p)));
          if(temp>MOD)
          {
          	f=1;
          	temp=temp%MOD;
          }
          temp*=x;
          
          if(temp>MOD)
          {
          	f=1;
          	temp=temp%MOD;
          }
          
		  
          
          return temp;
    }
}
*/

int mypow(int n,int p,int *overflow)
{
  int i, res = 1, tmp, perfect;
 
    if (!p) {
    *overflow = 0;
    return 1;
    }
 
  *overflow = n >= 10000;
   n %= 10000;
 
   for (i = 0; i < p; i++) {
   res *= n;
   if (!*overflow)
   *overflow = res >= 10000;
   res %= 10000;
}
 
return res; 
     
}
 
/*
void sieve()
{
	int n=500000;
	
	
	for(long int i=0;i<=500000;i++)
	a[i]=1;
	a[0]=0;
	a[1]=0;
	
	
	int count=0;
	
	for(long int i=2;i*i<=n;i++)
	{
		if(a[i])
		{
			
			for(long int j=i*i;j<=n;j=j+i)
			{
				a[j]=0;
			}
		}
		
	}
}
 */   
int main()
{
	long int N=500001,i,j;
  for(i=1;i<N;i++)
	{
  	 NoOfDivisor[i]=0;
  	 IsPerfect[i]=0; 
	}
	  for(i=1;i<N;i++)
	   for(j=1;i*j<N;j++)
	  {
   	    NoOfDivisor[i*j]++;
   	    if(i==j)
   	     IsPerfect[i*j]=1;
   	  }   
	
	long int t;
	scanf("%ld",&t);
	
//	cin>>t;
	
	while(t--)
	{
		f=0;
		long int n;
//		cin>>n;
		scanf("%ld",&n);		
		long int al=n,ans=1;
		
		ans= NoOfDivisor[n];
		
		
	
		
		long int anss=0;
		if(IsPerfect[n])
		{
			long int m=sqrt(n);
	//		cout<<"perfect square"<<endl;
			anss=mypow(m,ans-2,&f);
		}	
		else
		{
			anss=mypow(al,(ans-2)/2,&f);
		}	
		if(f==0)
		printf("%d\n",anss);
//		cout<<"0000"<<endl;
		else
		printf("%04d\n",anss);
//		cout<<anss<<endl;
	}
	
	
	
	
}