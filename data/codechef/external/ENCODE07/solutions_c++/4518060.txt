/** 
 * This question asks us to find the no of triplets (a,b,c) such that gcd(a,b,c) = 1
 * or we could say that all of them are coprime to each other
 * Author: thecodekaiser
*/
 
#include <iostream>
#include <cstdlib>
#include <cstdio>
#include <vector>
 
using namespace std;
#define MAXN 100010
typedef long long ll;
 
// Function : to precompute the primes
int pp[MAXN];
int mu[MAXN];			// Mobius function
 
void pre()
{
	// Mobius function calculation
	// This is actually prime factorisation
	for(int i = 2; i < MAXN; i++) if (!pp[i]) { 
		int j = i;
		while (j <= MAXN) {
			if (!pp[j]) pp[j] = i;
			j += i;			
		}
	}
 	
 	for(int i = 1; i < MAXN; i++)
 	{
			if (i == 1) mu[i] = 1;
			else {
				if (pp[i / pp[i]] == pp[i]) mu[i] = 0;		// Checking for non square-free
				else 										
					mu[i] = -1 * mu[i / pp[i]];
		}
	}
}
 
// Solver Function : 
void solve()
{
	ll N , ans;
	scanf("%lld", &N);
	ans = N*N;
	
	for(ll i = 2; i <= N; i++)
		if(mu[i] != 0)
		{
			ll cnt = 0;
			for(ll j = i; j <= N; j += i)
					if(mu[j] != 0)	cnt++;
			ans += (mu[i] * cnt * cnt);
		}
	printf("%lld\n",ans);					
}
 
 
int main() {
	pre();
	// your code goes here
	int t;
	scanf("%d",&t);
	while(t--)
		solve();
	return 0;
 
}