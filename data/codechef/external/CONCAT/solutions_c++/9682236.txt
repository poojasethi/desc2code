#include <cstring>
#include <algorithm>
#include <vector>
#include <utility>
#include <iostream>
#define MAX 27
using namespace std;

vector < vector < int > > G;


int main(){

	string s,p;
	cin >> s >> p;
	G = vector < vector < int > > (26);
	for(int i = 0;i < p.size();i++) G[(int)(p[i] - 'A')].push_back(i);
	
	int pos = -1;
	int count = 1;
	int flag = true;
	int i = 0;
	
	while(i < s.size()){
		int node = (int)(s[i] - 'A'); 
		if(G[node].size() == 0){
			count = -1;
			break;
		}
		vector < int > :: iterator found = upper_bound (G[node].begin(), G[node].end(), pos);
		if(found == G[node].end()){
			pos = -1;
			count++;
		}
		else{
			pos = G[node][(int)(found - G[node].begin())];
			i++;
		}
	}
	
	printf("%d\n",count);
	
	return 0;
}