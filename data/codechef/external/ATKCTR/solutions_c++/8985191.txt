#include<bits/stdc++.h>
using namespace std;
#define ll long long int
#define mp  make_pair
#define ppi pair<int,int>
#define pb push_back
vector<int>V[1000010];
int arr[1000010];
int back[1000010];
bool instack[1000010];
int T[1000010];
int C[1000011];
// arr[]  arrival time
// back[]   deepest back-edge
int  t1=0,n;
void dfsC(int a,stack<int>& S)
{
    //cout<<"visiting"<<a<<endl;
	int i;
	t1++;
    arr[a]=back[a]=t1++;
    S.push(a);
    instack[a]=true;
    for (i =0; i<V[a].size();i++)
    {
        if (arr[V[a][i]]==-1)   //not yet visited
        {
            dfsC(V[a][i],S);
            back[a] = min(back[a],back[V[a][i]]);
        }
        else if (instack[V[a][i]] == true)
            back[a]  = min(back[a], arr[V[a][i]]);
    }

    int w = 0;
    //cout<<"back and arrival"<<arr[a]<<" "<<back[a]<<" "<<a<<endl;
    if (back[a] == arr[a])   //top of the scc found
    {
        bool flag=false;
        //		cout<<S.top()<<endl;
        while (S.top() != a)
        {
            w =S.top();
            T[w]=1;
            flag=true;
      //cout << w << "@";
            instack[w] = false;
           S.pop();
        }
        w =S.top();
        if(flag)
        T[w]=1;
        S.pop();
        //cout<<w<<" "<<endl;
        instack[w]=false;
    }
}
void SCC()
{
    stack<int>S;
 	int i,j;
 	t1=0;
    for (i=0;i<=n; i++)
    {
        arr[i]=-1;
        back[i]=-1;
        instack[i]=false;
    }
 	for (i=1;i<=n;i++)
        if (arr[i]==-1)
            dfsC(i,S);
}
int main()
{
    int t,m,a,b,i,pos;
    ios_base::sync_with_stdio(false);
    cin>>t;
    while(t>0)
    {
        t--;
        cin>>n>>m;
        for(i=0;i<=n;i++){
            V[i].clear();
            C[i]=0;
            T[i]=0;
        }
        for(i=0;i<m;i++)
        {
            cin>>a>>b;
            V[a].pb(b);
            if(b>a){
                C[a]++;
                C[b]--;
            }
        }
       SCC();
       pos=-1;
       for(i=1;i<=n;i++){
          //  cout<<T[i]<<" ";
        if(T[i]==0)
            break;
       }
       if(i==n+1)
       {
           cout<<"0"<<endl;
           continue;
       }
       else{
        for(i=1;i<=n;i++)
        {
            if(C[i]==n-i)
            {
                pos=i;
                break;
            }
        }
        if(pos>0)
        {
            cout<<"2 "<<i<<endl;
        }
        else
            cout<<"1"<<endl;
       }

    }
}
