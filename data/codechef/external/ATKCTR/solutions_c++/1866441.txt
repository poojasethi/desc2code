/*
	0 never occurs if both play optimally
	Tournament Graph
*/
#include <cstdio>
#include <map>
#include <cstdlib>

using namespace std;

#define PII pair<int,int>
#define wile(n) while(n--) 
#define FOR(i,a,b) for ( int i=a; i<b; i++)
#define si(n) scanf("%d",&n)

int main()
{	int t,n,m,x,y,i;
	si(t);
	wile(t)
	{	si(n), si(m);
		multimap<int,int> outdeg;
		multimap<int,int> indeg;
		wile(m)
		{	si(x), si(y);
			outdeg.insert(PII(x,y));	// x can defeat y
			indeg.insert(PII(y,x));		// y defeated by x
		}
		for ( i=n; i>=1; i-- )
		{	if ( outdeg.count(i) == n-i && indeg.count(i) == 0)
			{	printf("2 %d\n",i);
				break;
			}
		}
		if ( i == 0 )
			printf("1\n");
	}
	return 0;
}
