/* Author: Sahil Wadhwa (s24w,wadhwasahil) */
#include<stack>
#include<vector>
#include<cstring>
#include<algorithm>
#include<stdio.h>
#include<climits>
#include<set>
#include<fstream>
#include<cmath>
#include<bitset>
#include<map>
#include<time.h>
#include<list>
#include<iostream>
#include<queue>
#include<iomanip>
#include<assert.h>

#define ll long long


#define in(i) scanf("%d",&i)
#define inl(i) scanf("%lld",&i)
#define out(i) printf("%d",i)
#define outl(i) printf("%lld",i)
#define mp make_pair
#define REP(i,a,n) for(i=a;i<n;i++)
#define pb push_back
#define pii pair<int,int>
#define vi vector<int>
#define vll vector<ll>
#define INF 99999999
int X[502][10002];
using namespace std;


int main(){
int t;
cin>>t;
while(t--){
    int e,f,S,N,i,j,P[502],W[502];
    cin>>e>>f;
    S=f-e;
    cin>>N;
    for(i=0;i<=N;i++)
        for(j=0;j<=S;j++)
    X[i][j]=0;
int flag=0;

        for(i=1;i<=N;i++)
            cin>>P[i]>>W[i];


    for(i=1;i<=N;i++){
        for(j=1;j<=S;j++){
                if(i==1 && W[i]>j)
                X[i][j]=INF;
        else
            if(W[i]>j && i>1)
                X[i][j]=X[i-1][j];
            else
                if(X[i-1][j]>= (P[i]+X[i][j-W[i]]) && i-1>0 )
                X[i][j]=P[i]+X[i][j-W[i]];
            else
                if(i-1>0 && X[i-1][j]<(P[i]+X[i][j-W[i]]) )
                X[i][j]=X[i-1][j];
            else
                if(i==1)X[i][j]=P[i]+X[i][j-W[i]];
                //X[i][j]=max(X[i-1][j],P[i]+X[i][j-W[i]]);
                //cout<<X[i][j]<<" ";

        }

   // cout<<endl;

}
if(X[N][S]>=INF)
    printf("This is impossible.\n");
else
    printf("The minimum amount of money in the piggy-bank is %d.\n",X[N][S]);
}
return 0;
}

