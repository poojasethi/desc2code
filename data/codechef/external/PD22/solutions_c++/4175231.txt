#include<cstdio>
#include<vector>
#include<algorithm>

using namespace std;
struct coin
{
int P;
int W;
};

bool myfunc(struct coin c1,struct coin c2)
{
	return c1.W<c2.W;
}

//map<int,int> Coins;
vector<struct coin> data;
int tot[10000],minWeight;

int getResult(int weight)
{
	vector<struct coin>::iterator ite;
	int ans,final=1000000007,ans1,flag=0;
	if(weight==0)
		return 0;
	else if(weight<0)
		return -1;
	else
	{
		if(tot[weight-1]!=0)
			return tot[weight-1];
		else
		{		
 			for(ite=data.begin();ite!=data.end();++ite)
			{
//				printf("hello\n");
				ans=getResult(weight-(*ite).W);
				if(ans==-1)
					continue;
				ans1=ans+(*ite).P;
				if(final>ans1)
					final=ans1;
				flag=1;
			}	
			if(flag==0)
			{
				tot[weight-1]=-1;
				return -1;
			}	
			tot[weight-1]=final;			
			return final;
		}
	}
}



int main()
{
int T,W1,W2,N,P,W,ans,minWeight;
struct coin C;
scanf("%d",&T);
while(T-->0)
{
	minWeight=10001;
	for(int i=0;i<10000;i++)
		tot[i]=0;
	scanf("%d%d",&W1,&W2);
	scanf("%d",&N);
	for(int i=0;i<N;i++)
	{
		scanf("%d%d",&P,&W);
		if(minWeight>W)
			minWeight=W;	
		C.P=P;
		C.W=W;
		data.push_back(C);
	}
//	minWeight=Coins.begin()->second;
//	sort(data.begin(),data.end(),myfunc);
//	printf("%d\n",data[0].W);	
	for(int i=0;i<(minWeight-1);i++)
		tot[i]=-1;
	if(W2!=W1)
		ans=getResult(W2-W1);
	else
		ans=-1;
	if(ans==-1)
		printf("This is impossible.\n");
	else
		printf("The minimum amount of money in the piggy-bank is %d.\n",ans);
	data.clear();
}
}
