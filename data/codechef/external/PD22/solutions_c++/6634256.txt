#include<bits/stdc++.h>
#define intMAX 1123456789LL
#define MAX intMAX * intMAX
#define F first
#define S second
#define mp make_pair
#define ll long long
#define pb push_back
#define pv(v,b,a) v.insert(v.begin()+b,a)
#define all(c) c.begin(),c.end()
#define sf(a) scanf("%d",&a);
#define sl(a) scanf("%lld",&a);
#define MAXCR 1000000000
#define mem(arr,a) memset(arr, a, sizeof arr)
#define er(vec,a,b) vec.erase(vec.begin() + a, vec.begin() + b+1)
#define traverse(a) for()
#define pii pair<int ,int>
#define mod 1000000007
#define LIM 100
using namespace std;
/*
list as pop_front();push_front(ELEMENT);
list as pop_front();push_back(ELEMENT);
to see first element stack=q.front()
to see last element queue=q.back()
*/
//str.insert(6,str3,3,4); to insert 4 words from str3 starting from 3rd position(0 based indexing) to str from 6th position (0 based indexing)
//str.find("live");//finds first occurance of string and returns its 0 based indes
//string str1=str.substr (a,n);//a=0 based start index,n=length of words//if length not given substring till end is formed
//auto bound_=upper_bound (v.begin(), v.end(), 20); //Returns an iterator pointing to the first element in the range [first,last) which compares greater than val.
//auto bound_=lower_bound (v.begin(), v.end(), 20);//Returns an iterator pointing to the first element in the range [first,last) which does not compare less than val.
//for(???<???>:iterator itr;itr!=???.end();itr++) or for(auto &tt : t.edges)
int arr[505],val[505],dp[10005][505],e,f,n;
int main()
{
	int i,j,t;
	sf(t)
	while(t--)
	{
		sf(e)
		sf(f)
		sf(n)
		for(i=1;i<=n;i++)
		{
			sf(val[i])
			sf(arr[i])
		}
		for(i=0;i<=n;i++)
			dp[0][i]=0;
		for(j=1;j<=n;j++)
		{
			for(i=1;i<=f-e;i++)
			{
	//			printf("(%d)",arr[j]);
				if(j==1&&i<arr[j])
					dp[i][j]=intMAX;
				else if(j==1)
					dp[i][j]=dp[i-arr[j]][j]+val[j];
				else if(i-arr[j]>=0)
					dp[i][j]=min(dp[i][j-1],dp[i-arr[j]][j]+val[j]);
				else
					dp[i][j]=dp[i][j-1];
			}
		}
	//	debug();
		if(dp[f-e][n]>=intMAX)
			printf("This is impossible.\n");
		else
			printf("The minimum amount of money in the piggy-bank is %d.\n",dp[f-e][n]);
	}
	return 0;
}