#include <stdio.h>

struct a
{
	int w;
	int v;
};
typedef struct a node;

void partition(node arr[],int low,int high);
void mergeSort(node arr[],int low,int mid,int high);
void partition(node arr[],int low,int high){

    int mid;

    if(low<high){
         mid=(low+high)/2;
         partition(arr,low,mid);
         partition(arr,mid+1,high);
         mergeSort(arr,low,mid,high);
    }
}

void mergeSort(node arr[],int low,int mid,int high){

    int i,m,k,l;
    node temp[505];

    l=low;
    i=low;
    m=mid+1;

    while((l<=mid)&&(m<=high)){

         if(arr[l].w<=arr[m].w){
             temp[i]=arr[l];
             l++;
         }
         else{
             temp[i]=arr[m];
             m++;
         }
         i++;
    }

    if(l>mid){
         for(k=m;k<=high;k++){
             temp[i]=arr[k];
             i++;
         }
    }
    else{
         for(k=l;k<=mid;k++){
             temp[i]=arr[k];
             i++;
         }
    }

    for(k=low;k<=high;k++){
         arr[k]=temp[k];
    }
}

int main(void) {
	int t,i,n,m,j;
	int x[10005];
	node y[505];
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d %d",&n,&m);
		n=m-n;
		scanf("%d",&m);
		for(i=0;i<m;i++)
		{
			scanf("%d %d",&y[i].v,&y[i].w);
		}
		partition(y,0,m-1);

		for(i=0;i<=n;i++)
			x[i]=100000000;
		x[0]=0;
		for(i=1;i<=n;i++)
		{
			int min=100000000;
			for(j=0;y[j].w<=i && j<m;j++)
			{
				if(x[i-y[j].w] + y[j].v < min)
					min=x[i-y[j].w] + y[j].v ;
			}
			x[i]=min;
		}
		if(x[n]>=100000000)
			printf("This is impossible.\n");
		else
			printf("The minimum amount of money in the piggy-bank is %d.\n",x[n]);
	}
	return 0;
}
