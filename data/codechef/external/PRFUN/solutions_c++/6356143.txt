#include <bits/stdc++.h>
using namespace std;
int prime[100002];
// I THINK THE TEST CASES ARE WORNG , INSTEAD OF PRINTING THE PRIMAL AS IT WILL APPEAR IN SORTES SEQUENCE IT IS PRINTING
void sieve()         // THE LOCATION OF THE REQUIRED PRIMAL AS IT APPEARD IN THE ORIGINAL PRIMAL LIST
{
    int i,j;
    for(i = 1; i <= 100000; i++) {
        prime[i] = 1;
    }
    for(i = 2; i <= 100000; i++)
        {
            if(prime[i] == 1)
             {
                for(j = 2; j*i <= 100000; j++)
                 {
                    prime[i*j] *= i;
                }
                prime[i]*=i;
            }
    }
}
int main()
{
    sieve();
    //for(int i=0;i<=100;i++)
      //  printf("i=%d %d\n",i,prime[i]);
    //printf("\n");
    int t,n,k,i,s;
    pair<int,int>en;
    vector<pair<int,int> >a;
    for(i = 1; i <= 100000; i++) {
        en.first = prime[i];
        en.second = i;
        a.push_back(en);
    }
  // for(i=0;i<=13;i++)
    //    printf("i=%d %d %d\n",i,a[i].first,a[i].second);

    sort(a.begin(),a.end());

    //printf("after sort\n");
    //for(i=0;i<=130;i++)
       // printf("i=%d %d %d\n",i,a[i].first,a[i].second);
    int l = a.size();
    cin>>t;
    while(t--) {
        cin>>n>>k;
        int c = 0;
        for(i = 0; i < l; i++) {
            if(a[i].second <= n) {
                c++;
            }
            if(c == k) break;
        }
        cout<<a[i].second<<endl;
    }
	return 0;
}
