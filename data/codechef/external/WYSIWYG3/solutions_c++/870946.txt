#include <iostream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <string>
#include <cstring>
#include <cmath>
#include <climits>
#include <algorithm>
#include <cstdio>
using namespace std;

typedef unsigned long long ULL;
typedef long long LL;

#define REP(i,n)      FOR(i,0,n)
#define FOR(i,a,b)    for(int i = a; i < b; i++)
#define ROF(i,a,b)    for(int i=a;i>b;i--)
#define GI 		      ({int t;scanf("%d",&t);t;})
#define GL 		      ({LL t;scanf("%lld",&t);t;})
#define GD 		      ({double t;scanf("%lf",&t);t;})
#define pb 	          push_back
#define mp 	          make_pair
#define MOD 	      1000000007
#define INF	          (int)1e9
#define EPS	          1e-9
#define TR(a,it)      for (typeof((a).begin()) it = (a).begin(); it != (a).end(); ++it)

int arr[505][505], dp[505][505];
int main()
{
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);

	int T, t = 0, n, a, b;
	scanf("%d", &T);
	while (T--) {
		scanf("%d %d %d", &n, &a, &b);

		for (int i=0; i<n; i++)
            for (int j=0; j<2*n-1; j++) {
                arr[i][j] = INT_MAX;
                dp[i][j] = INT_MAX;
            }

        for (int i=0; i<n; i++)
            for (int j=n-i-1; j<n+i; j++)
                scanf("%d", &arr[i][j]);

        /*
        printf("printing arr\n");
        for (int i=0; i<n; i++) {
            for (int j=n-i-1; j<n+i; j++)
                printf("%10d ", arr[i][j]);
            printf("\n");
        }
        printf("\n");
        */

        for (int j=0; j<2*n+1; j++)
            dp[0][j] = arr[0][j];

        for (int i=1; i<n; i++) {
            for (int j=n-i-1; j<n+i; j++) {
                int mini = INT_MAX;
                for (int k=j-b; k<=j+a; k++)
                    if (k>=n-i && k<n+i-1)
                        mini = min(mini, dp[i-1][k]);

                if (mini == INT_MAX)
                    dp[i][j] = INT_MAX;
                else
                    dp[i][j] = mini + arr[i][j];
            }
        }

         /*
         printf("Printing DP\n");
         for (int i=0; i<n; i++) {
            for (int j=0, k=0; k<2*n-1; k++, j++)
                printf("%10d ", dp[i][j]);
            printf("\n");
         }
         */

        int mini = INT_MAX;
        for (int j=0; j<2*n-1; j++)
            mini = min(mini, dp[n-1][j]);
        printf("%d\n", mini);
	}
	return 0;
}
