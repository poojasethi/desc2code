# include <bits/stdc++.h>
using namespace std;
inline int in()
{
    int n=0;
    char c=getchar_unlocked();
    while(c<'0' || c>'9')
    c=getchar_unlocked();
    while(c<='9' && c>='0')
    {
    n=(n<<1)+(n<<3)+c-'0';
    c=getchar_unlocked();
    }
    return n;
}
int min(int x, int y, int z) 
{
    return min(min(x, y), z);
}
 
int editDist(int str1[], int str2[], int m, int n)
{
    // Create a table to store results of subproblems
    int dp[m+1][n+1];
 
    // Fill d[][] in bottom up manner
    for (int i=0; i<=m; i++)
    {
        for (int j=0; j<=n; j++)
        {
            // If first string is empty, only option is to
            // isnert all characters of second string
            if (i==0)
                dp[i][j] = j;  // Min. operations = j
 
            // If second string is empty, only option is to
            // remove all characters of second string
            else if (j==0)
                dp[i][j] = i; // Min. operations = i
 
            // If last characters are same, ignore last char
            // and recur for remaining string
            else if (str1[i-1] == str2[j-1])
                dp[i][j] = dp[i-1][j-1];
 
            // If last character are different, consider all
            // possibilities and find minimum
            else
                dp[i][j] = 1 + min(dp[i][j-1],  // Insert
                                   dp[i-1][j],  // Remove
                                   dp[i-1][j-1]); // Replace
        }
    }
 
    return dp[m][n];
}
 
int main(){
	int t,i,m,n,a[200],b[200];
	t=in();
	while(t--){
		n=in();
		for(i=0;i<n;i++)
			a[i]=in();
	m=in();
	for(i=0;i<m;i++)
		b[i]=in();
	cout<<editDist(a,b,n,m)<<endl;
	}
}