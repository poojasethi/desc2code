
#include <bits/stdc++.h>
#define lli long long int
using namespace std;

int main() 		// from editorial : https://discuss.codechef.com/questions/28296/editlist-editorial
{
	int t,n,m;
	int a[105] , b[105];
	int l[105][105];
	
	cin>>t;
	while (t--)
	{
		cin>>n; for (int i=1 ; i<=n ; i++) cin>>a[i];
		cin>>m; for (int i=1 ; i<=m ; i++) cin>>b[i];
		
		// calc Levenshtein Distance
		for (int i=0 ; i<=n ; i++)
		{
			for (int j=0 ; j<=m ; j++)
			{
				if ( i==0 || j==0 ) { l[i][j] = max(i,j); continue; }
				
				if (a[i] == b[j]) 
					l[i][j] = l[i-1][j-1];		// add both of them
				else
				{
					l[i][j] = i + j;								// default
					l[i][j] = min( l[i][j] , l[i-1][j-1] + 1 );		// substitution
					l[i][j] = min( l[i][j] , l[i-1][j] + 1 );		// delete
					l[i][j] = min( l[i][j] , l[i][j-1] + 1 );		// add
				}
			}
		}
		
		cout<<l[n][m]<<"\n";
	}
	
	return 0;
}
