#include<stdio.h>
/*#define MAX 1000001
int prime[MAX]={0};
int circularprime[MAX]={0};
int circular_prime(int n){
 int k=n;    
 int num,msb;
 int count=0;
 num=1;

 while(n){         
  if(n%2==0)
   return 0;
  n/=10;
  num*=10;        
  count++;
 } 
  num/=10;
 
  while(count--){
    msb=k/num;              
    k=k-num*(k/num);               
    k=k*10+msb;              
    //printf("%d ",k);
   if(prime[k])
   return 0;
  }  
 return 1;   
}
void generate_circularprime(){
int i;
circularprime[2]=1;
for(i=3;i<MAX;i++)     
 if(!prime[i]){        
   if(circular_prime(i)){            
     circularprime[i]=1; 
     //prime[i]=1;
   }         
 }         
}
void sieve(){
  int i,j; 
  prime[0]=prime[1]=1;  
  for(i=2;i<MAX;i++)
  {
    j=2;                
    if(!prime[i]){
      while(i*j<MAX){
       prime[i*j++]=1;              
      }            
    }                   
  }   
}*/
int circular_prime[]={2,3,5,7,11,13,17,31,37,71,73,79,97,113,131,197,199,311,337,373,719,733,919,971,991,1193,1931,3119,3779,7793,7937,9311,9377,11939,19391,19937,37199,39119,71993,91193,93719,93911,99371,193939,199933,319993,331999,391939,393919,919393,933199,939193,939391,993319,999331,0};
int main(){
 int i,n;
 //sieve();
// generate_circularprime();
 //int count=0;
 /*for(i=0;i<MAX;i++){
    if(circularprime[i])
     printf("%d ",i);
    // count++;    
   //circularprime[i]=count;
 }
*/ 
 int t,flag;
 scanf("%d",&t);
 while(t--){
  //count=0;
  
  i=0;
  
  scanf("%d",&n);
  
  flag=0;
  while(circular_prime[i]!=0&&circular_prime[i]<=n){
   if(circular_prime[i]==n)
   {flag=1;
    break;
    } 
    i++;
  }
  if(flag)
  printf("Yes\n");
  else
  printf("No\n");          
 }  
 return 0;    
}
