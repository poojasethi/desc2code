#include <bits/stdc++.h>
using namespace std;
#define MAX 200005
 
int bittree[MAX];
 
#define gc getchar
void read1(int &n) {
    n = 0;
    char ch = gc();
    while ( !isdigit(ch) ) ch=gc();
    while ( isdigit(ch) ) {
        n = n*10 + ch-48;
        ch=gc();
    }
}
 
int read(int idx)
{
    int sum = 0;
    while(idx > 0) {
        sum += bittree[idx];
        idx -= (idx & -idx);
    }
    return sum;
}
 
void update(int idx, int val,int n)
{
    while(idx <= n) {
        bittree[idx] += val;
        idx += (idx & -idx);
    }
}
 
void solve()
{
    int n;
    read1(n);
    for(int i = 1; i <= n; i++) {
    	update(i, 1, n);
    }
    int a[100005];
    for(int i = 1; i <= n; i++) {
    	read1(a[i]);
    }
    for(int i = 1; i <= n; i++) {
    	printf("%d ", read(a[i]));
    	update(a[i], -1, n);
    }
    printf("\n");
}
 
int main()
{
    int t;
    read1(t);
    while(t--) {
        memset(bittree, 0, sizeof(bittree));
        solve();
    }
    return 0;
} 