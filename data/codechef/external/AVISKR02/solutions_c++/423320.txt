#include<iostream>
typedef long long ll;

#define maxbuf 50000000
char inbuf[maxbuf],outbuf[maxbuf];
int pi,inp,oup;
bool sign=false;

void getnum( ll &x)
{
     x=0;
     while((inbuf[inp]<'0'||inbuf[inp]>'9') && inbuf[inp]!='-')++inp;
     while( inbuf[inp]>='0'&&inbuf[inp]<='9')
            x=x*10 + inbuf[inp++]-'0';
}

void putnum( ll x)
{
     char s[15];
     pi=-1;
     do{
          s[++pi]= (x-x/10*10)+'0';
          x/=10;
     }
     while( x>0);
     ++pi;
     while( pi)
            outbuf[oup++] = s[--pi];
     outbuf[oup++]='\n';
}

void getin()
{
     fread_unlocked( inbuf,sizeof(char),maxbuf,stdin);
     inp=oup=0;
}

void putout()
{
     fwrite_unlocked(outbuf,sizeof(char),oup,stdout);
}

int bin[70],bc;
ll mod=1000000007,a,b;
struct twobytwo
{
       ll tl,tr;
       ll bl,br;
}I={1,1,1,0};

twobytwo multiply( twobytwo A, twobytwo B)
{
     twobytwo c;
     c.tl = A.tl*B.tl + A.tr*B.bl;
     c.tl-= c.tl/mod*mod;
     c.tr = A.tl*B.tr + A.tr*B.br;
     c.tr-= c.tr/mod*mod;
     c.bl = A.bl*B.tl + A.br*B.bl;
     c.bl-= c.bl/mod*mod;
     c.br = A.bl*B.tr + A.br*B.br;
     c.br-= c.br/mod*mod;
     return c;
}

ll fibomod( ll n)
{
     if( n==0) return 0;
     if( n==1) return 1;
     --n;
     
     bc=0;
     do{
         bin[bc++]= n-(n/2*2);
         n/=2;
     }while( n);
     
     twobytwo C={1,0,0,1};
     
     while( bc--)
     {
            C = multiply(C,C);
            if( bin[bc])
                C = multiply(C,I);
     }
     
     a = C.tl;
     C = multiply(C,I);
     b = C.tl;
     return (a*b)%mod;
}

int main()
{
    ll n,t;
    getin();getnum(t);
    //scanf("%d",&t);
    while( t--)
    {
           //scanf("%lld",&n);
           getnum(n);
           //printf("%lld\n",fibomod(2*n));
           putnum(fibomod(2*n));
    }
    putout();
    return 0;
}
