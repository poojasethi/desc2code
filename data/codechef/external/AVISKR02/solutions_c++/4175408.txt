#include<stdio.h>
#define MOD 1000000007
#define ULL unsigned long long
  inline unsigned long long int fastread()
    {
   unsigned long long int i=0;
    char c=getchar_unlocked();
    while(c<48) c=getchar_unlocked();
    while(c>47)
    {
    i=i*10+c-48;
    c=getchar_unlocked();
    }
    return i;
    }
ULL F(ULL n)
{
    ULL x[2][2]={{1,1},{1,0}};
    ULL res[2][2]={{1,0},{0,1}};
    ULL a,b,c,d;
    while(n>0)
    {
        if(n&1)
        {
            a=(res[0][0]*x[0][0])%MOD+(res[0][1]*x[1][0])%MOD;
            b=(res[0][0]*x[0][1])%MOD+(res[0][1]*x[1][1])%MOD;
            c=(res[1][0]*x[0][0])%MOD+(res[1][1]*x[1][0])%MOD;
            d=(res[1][0]*x[0][1])%MOD+(res[1][1]*x[1][1])%MOD;
            res[0][0]=a%MOD;
            res[0][1]=b%MOD;
            res[1][0]=c%MOD;
            res[1][1]=d%MOD;
        }
        a=(x[0][0]*x[0][0])%MOD+(x[0][1]*x[1][0])%MOD;
        b=(x[0][0]*x[0][1])%MOD+(x[0][1]*x[1][1])%MOD;
        c=(x[1][0]*x[0][0])%MOD+(x[1][1]*x[1][0])%MOD;
        d=(x[1][0]*x[0][1])%MOD+(x[1][1]*x[1][1])%MOD;
        x[0][0]=a%MOD;
        x[0][1]=b%MOD;
        x[1][0]=c%MOD;
        x[1][1]=d%MOD;
        n=n>>1;
    }
    return ((res[0][0]%MOD)*(res[0][1]%MOD))%MOD;
}
 
int main()
{
    int t;
    ULL n;
    t=fastread();
    while(t--)
    {
        n=fastread();
        printf("%llu\n",F(n<<1));
    }
    return 0;
} 