// URL :  http://www.codechef.com/problems/AVISKR02/
// ANS = f(2n) * f(2n + 1)
// Matrix exponential

#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;
typedef long long int64;
typedef unsigned long long uint64;

int mod = 1000000007;

void mult(uint64 c[], const uint64 a[], const uint64 b[])
{
	int x1 = (a[0] * b[0] + a[1] * b[2]) % mod;
	int x2 = (a[0] * b[1] + a[1] * b[3]) % mod;
	int x3 = (a[2] * b[0] + a[3] * b[2]) % mod;
	int x4 = (a[2] * b[1] + a[3] * b[3]) % mod;
	
	c[0] = x1; c[1] = x2; c[2] = x3; c[3] = x4;
}

int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
			uint64 res[4];
			uint64 c[4];
			res[0] = 1; res[1] = 0;
			res[2] = 0; res[3] = 1;
			
			c[0] = 1; c[1] = 1;
			c[2] = 1; c[3] = 0;
			
			uint64 n;
			scanf("%llu", &n);
			n = (uint64)2 * n;
			while(n > 0)
			{
				if(n & 1)
					mult(res, res, c);
				mult(c, c, c);
				n >>= 1;
			}
			uint64 res1 = (res[0] * res[1]) % mod;
			printf("%llu\n", res1);
	}	
	return 0;
}


