#include<stdio.h>
const int mod=1000000007;
unsigned long long int x,y,z,w;
 inline long long int fastread()
    {
   long long int i=0;
    char c=getchar_unlocked();
    while(c<48) c=getchar_unlocked();
    while(c>47)
    {
    i=i*10+c-48;
    c=getchar_unlocked();
    }
    return i;
    }
unsigned long long int pwr(long long int n)
{
    unsigned long long int temp[2][2]={{1,0},{0,1}} ,f[2][2]={{1,1},{1,0}};
    if(n==0)
        return 0;
 
        while(n)
        {
            if(n&1)
                {
                    x = (temp[0][0]*f[0][0] + temp[0][1]*f[1][0])%mod;
                    y= (temp[0][0]*f[0][1] + temp[0][1]*f[1][1])%mod;
                    z=(temp[1][0]*f[0][0] + temp[1][1]*f[1][0])%mod;
                    w=(temp[1][0]*f[0][1] + temp[1][1]*f[1][1])%mod;
 
                    temp[0][0] = x;
                    temp[0][1] = y;
                    temp[1][0] = z;
                    temp[1][1] = w;
                }
 
                    x=(f[0][0]*f[0][0])%mod + (f[0][1]*f[1][0])%mod;
                    y= (f[0][0]*f[0][1])%mod + (f[0][1]*f[1][1])%mod;
                    z=(f[1][0]*f[0][0])%mod + (f[1][1]*f[1][0])%mod;
                    w=(f[1][0]*f[0][1])%mod + (f[1][1]*f[1][1])%mod;
 
                    f[0][0] = x%mod;
                    f[0][1] = y%mod;
                    f[1][0] = z%mod;
                    f[1][1] = w%mod;
                    n=n>>1;
        }
        return ((temp[0][0]%mod)*(temp[1][0]%mod))%mod;;
}
int main()
{
    int t;
   unsigned long long int sum;
  long long  int n;
    t=fastread();
 
    while(t--)
    {
       n=fastread();
        printf("%llu\n",pwr(n<<1));
    }
}