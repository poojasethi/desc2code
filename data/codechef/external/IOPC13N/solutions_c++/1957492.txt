#include <iostream>
#include <cstdio>
#include <vector>
using namespace std;

#define		S(x)			scanf("%d",&x)
#define		INC(i,a,b)		for(int i=a;i<b;++i)
#define		REP(i,n)		INC(i,0,n)
#define		pb			push_back
#define		SZ(arr)			((int)(arr.size()))

typedef vector<int> VI;

const int MAX_N = 100000;
int n, q, u, t;
VI C[MAX_N];
int P[MAX_N], S[MAX_N], F[MAX_N];

void dfs(int);
bool parent(int,int);

int main() {
  S(n); S(q); S(u);
  P[u] = -1;
  REP(i,n-1) {
    int x, y;
    S(x); S(y);
    P[y] = x;
    C[x].pb(y);
  }
  
  dfs(u);
  
  REP(i,q) {
    int x, y;
    S(x); S(y);
    
    if(parent(y,x)) printf("1");
    else if(parent(x,y)) printf("-1");
    else printf("0");
    
    printf("\n");
  }
  
  return 0;
}

void dfs(int v) {
  S[v] = t++;
  REP(i,SZ(C[v])) if(C[v][i]!=P[v]) dfs(C[v][i]);
  F[v] = t++;
}

bool parent(int x, int y) { // Returns true, if x is a parent of y
  if(S[x]<S[y] && F[x]>F[y]) return true;
  return false;
}