#include <iostream>
#include <vector>
#include <cstring>
#include <cstdio>

#define pii pair<int, int>

using namespace std;

int vis[100005];
vector<int> v[100005];
vector<pii> qq[100005], qq1[100005];
int ans[100005], ans1[100005];

inline void fastRead(int *a)
{
  register char c=0;
  while (c<33) c=getchar_unlocked();
  *a=0;
  while (c>33)
    {
      *a=*a*10+c-'0';
      c=getchar_unlocked();
    }
}
void dfs(int pos, int pre)
{
        vis[pos] = 1;
        for(int i = 0; i < qq[pos].size(); i++) {
            if(vis[qq[pos][i].first] == 1) {
                ans[qq[pos][i].second] = 1;
            }
        }
        for(int i = 0; i < qq1[pos].size(); i++) {
            if(vis[qq1[pos][i].first] == 1) {
                ans1[qq1[pos][i].second] = 1;
            }
        }
        for(int i = 0; i < v[pos].size(); i++) {
            if(v[pos][i] != pre) dfs(v[pos][i], pos);
        }
        vis[pos] = 2;
}

int main()
{
    int n;
    //ios_base::sync_with_stdio(false);

    int q, p, x, y;

    cin >> n >> q;

    cin >> p;

    for(int i = 0; i < n-1; i++) {
        fastRead(&x);
        fastRead(&y);
        v[x].push_back(y);
        v[y].push_back(x);
    }
    for(int i = 0;i < q; i++) {
        fastRead(&x);
        fastRead(&y);
        qq[x].push_back(pii(y,i));
        qq1[y].push_back(pii(x,i));
    }

    dfs(p, -1);

    for(int i = 0; i < q; i++) {
        if(ans[i]) {
            puts("1");
        }
        else if(ans1[i]) {
            puts("-1");
        }
        else {
            puts("0");
        }
    }
}
