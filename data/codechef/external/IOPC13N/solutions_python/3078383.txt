#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<cstdlib>
#include<sstream>
#include<string.h>
#include<set>
#include<map>
#include<assert.h>
#include<ctime>
#include<queue>
#include<vector>
#include<stack>
#include<list>
#include<math.h>
using namespace std;
typedef vector<int> vi;
typedef vector<string> vs;
typedef pair<int,int> pii;
typedef long long int lli;

#define MAXN 1000005
#define INF 2147483647
#define MOD 1000000007
#define pb push_back 
#define sz(a) int((a).size())
#define FOR(x,a,b) for(int (x) = (a);(x)<=(b);(x)++)
#define rep(x,n)   for(int (x)=0;(x)<(n);(x)++)
#define tr(c,it) for(typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define all(c) c.begin(),c.end()
#define mset(a,b) memset(a,b,sizeof(a))

struct node
{
	vi neigh;

}G[MAXN];

int d[MAXN],f[MAXN],t;
void dfs(int u)
{
	int v;
	d[u] = ++t;
	rep(i,G[u].neigh.size())
	{
		v = G[u].neigh[i];
		dfs(v);		
	}
	f[u] = t;
}

int main()
{
	int n,q,u,x,y;
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	scanf("%d %d",&n,&q);
	scanf("%d",&u);u--;
	rep(i,n-1)
	{
		scanf("%d%d",&x,&y);
		x--,y--;
		G[x].neigh.pb(y);
	}
	t = 0;
	dfs(u);
	rep(i,q)
	{
		scanf("%d %d",&x,&y);
		x--,y--;
		if(d[x]<=d[y] && f[x]>=f[y])
		printf("-1\n");
		else if(d[y]<=d[x] && f[y]>=f[x])
		printf("1\n");
		else
		printf("0\n");			
	}
	return 0;
}
