
/*
 * @author panicker
 */
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.util.StringTokenizer;

public class Main {
    public static void main(String[] args) {
        InputStream inputStream = System.in;
        OutputStream outputStream = System.out;
        InputReader in = new InputReader(inputStream);
        PrintWriter out = new PrintWriter(outputStream);
        Task solver = new Task();
        solver.solve(1, in, out);
        out.close();
    }
}

class Task {
    public int parent[];

    public void checkParent(int a, int b, PrintWriter out) {
        int x = a, y = b;
        int ans = 0;

        while (parent[x] != -1) {
            if (parent[x] == y) {
                ans = 1;
                break;
            }
            x = parent[x];
        }

        if (ans == 0) {
            x = a;
            y = b;
            while (parent[y] != -1) {
                if (parent[y] == x) {
                    ans = -1;
                    break;
                }
                y = parent[y];
            }
        }
        out.println(ans);
    }

    public void solve(int testNumber, InputReader in, PrintWriter out) {
        int N = in.nextInt(), Q = in.nextInt();
        int root = in.nextInt();
        parent = new int[N + 1];
        parent[root] = -1;

        for (int i = 0; i < N - 1; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            parent[b] = a;
        }

        for (int i = 0; i < Q; i++) {
            int a = in.nextInt();
            int b = in.nextInt();
            checkParent(a, b, out);
        }
    }
}

class InputReader {
    public BufferedReader reader;
    public StringTokenizer tokenizer;

    public InputReader(InputStream stream) {
        reader = new BufferedReader(new InputStreamReader(stream), 32768);
        tokenizer = null;
    }

    public String next() {
        while (tokenizer == null || !tokenizer.hasMoreTokens()) {
            try {
                tokenizer = new StringTokenizer(reader.readLine());
            } catch (IOException e) {
                throw new RuntimeException(e);
            }
        }
        return tokenizer.nextToken();
    }

    public int nextInt() {
        return Integer.parseInt(next());
    }

}