#include<bits/stdc++.h>
using namespace std;

int ex ,ey ,n ,i ,vrtx1 ,vrtx2 ,next;

struct vertex {
	int x ,y;
}adj[1001];

long long dist(int x1 ,int y1 ,int x2 ,int y2) {
	return ((x1-x2) * (x1-x2) + (y1-y2) * (y1-y2)); 
}
bool isvisited[1001];
long long min_dist[1001];

int main() {
	scanf("%d%d%d",&n,&ex,&ey);

	for(i = 1 ; i<=n ; ++i) {
		scanf("%d%d",&adj[i].x,&adj[i].y);
		min_dist[i] = dist(adj[i].x ,adj[i].y ,0 ,0);
	}
	adj[n+1].x = ex; adj[n+1].y = ey;
	min_dist[n+1] = ex*ex + ey*ey;
	long long min_prev = 1e10;
	next = 0;
	for(int index = 0 ; index <= n+1 ; ++index) {
		min_prev = 1e10;
		for(i = 0 ; i<=n+1 && !isvisited[next]; ++i) {
 			min_dist[i] = min(min_dist[i] , min_dist[next] + dist(adj[next].x ,adj[next].y ,adj[i].x ,adj[i].y));
 			//printf(" i = %d min_prev = %d min_dist[%d]=%lld vrtx1 = %d\n",i ,min_prev ,i ,min_dist[i] ,vrtx1);
 			if(min_dist[i] < min_prev && !isvisited[i] && i!= next) {
 				vrtx1 = i;
 				min_prev = min_dist[i];
 				//printf("to be next = %d min_prev = %lld i = %d\n",i,min_prev,i);
 			}

		}
		//printf("next = (%d,%d)\n",adj[next].x ,adj[next].y);
		isvisited[next] = 1;
		next = vrtx1;
	}
	printf("%lld\n",min_dist[n+1]);
	return 0;	
}