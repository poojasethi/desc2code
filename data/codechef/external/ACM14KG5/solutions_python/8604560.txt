#include<bits/stdc++.h>

#define PB push_back
#define MP make_pair
#define F first
#define S second

#define RI(a) scanf("%d",&a);
#define RIL(a) scanf("%lld",&a);
#define PI(a) printf("%d\n",a);
#define PIL(a) printf("%lld\n",a);

#define SZ(a) (int)(a.size())

#define SET(a,b) memset(a,b,sizeof(a))

#define TR(a,t) for(__typeof(a.begin()) t=a.begin();t!=a.end();t++)

#define REP(i,l,h) for(int i=(l); i<=(h);i++)
#define REPD(i,h,l) for(int i=(h);i>=(l);i--)

#define ALL(a) a.begin(),a.end()

#define DRT()  int t; cin>>t; while(t--)

#define PRSNT(a,e) (a.find(e) != a.end())

#define MINH priority_queue<int, vector<int>, greater<int> >

#define trace1(x) cerr << #x << ": " << x << endl;
#define trace2(x, y) cerr << #x << ": " << x << " | " << #y << ": " << y << endl;
#define trace3(x, y, z) cerr << #x << ": " << x << " | " << #y << ": " << y << " | " << #z << ": " << z << endl;

#define N 100001
#define MOD 1000000007

typedef long long LL;

using namespace std;
LL dp[N][351];
int main()
{
        REP(i,0,N-1) REP(j,0,350) dp[i][j]=0;
        REP(i,1,350) dp[0][i] = 1;
        //cout<<dp[1][0]<<endl;
        REP(i,1,N-1) REP(j,1,350) {
                dp[i][j] = (dp[i-1][j] + dp[i][j-1])%MOD;
        }
        //REP(i,1,50) REP(j,1,50) cout<<dp[i][j]<<endl;
        DRT() {
                LL n,k;
                cin>>n>>k;
                if(n==1) {
                        cout<<-1<<endl;
                        continue;
                }
                LL s=sqrt(k);
                LL sum=0;
                REP(i,1,s) {
                        sum=(sum+((dp[n-2][i])*(k/i-i+1))%MOD)%MOD;
                }
                cout<<sum<<endl;
        }    
        return 0;
}
