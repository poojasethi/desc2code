#include <bits/stdc++.h>

using namespace std;

typedef long long L;

const int 
      mod = 1000000007,
      N = 301005;
  
inline L mul(L a, L b) {
  L res = a * b;
  if(res > mod) res %= mod;
  return res;
}

inline L add(L a, L b) {
  L res = a + b;
  while(res >= mod) res %= mod;
  return res;
}

L power(L a, L b) {
  L res = 1;
  while(b > 0) {
    if(b & 1) {
      res *= a;
    } 
    a *= a;
    b /= 2;
    if(res > mod) res %= mod;
    if(a > mod) a %= mod;
  }
  return res;
}

L fa[N], fin[N];

L getAnswer(L n, L k) {
  return mul(fin[n], mul(fa[n + k - 1], fin[k - 1]));
}

int main()
{
  L t;
  scanf("%lld", &t);
  fa[0] = 1, fin[0] = 1;
  
  for(int i = 1; i < N; ++i) {
    fa[i] = mul(fa[i - 1], i);
    fin[i] = power(fa[i], mod - 2);
  }
  
  while(t--) {
    L n, k;
    scanf("%lld %lld", &n, &k);
    L q = sqrt(double(k));
    L res = getAnswer(n, q);
    if(n == 1) {
      printf("-1\n");
      continue;
    }
    if(k == 1) {
      printf("1\n");
      continue;
    }
    L last = k;
    for(L i = 1; i*i <= k; ++i) {
      if(i < (k/i)) res = add(res, mul(getAnswer(n - 1, i), (last - k/(i+1))));
      last = k/(i+1);
    }
    printf("%lld\n", res);
  }
  return(0);
}