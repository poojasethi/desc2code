#include "stdio.h"
#define N 1000000007
#define ln long long int
// 'a' is prime while 'b' is number
int nChoosek[100405][400];
ln inv(int p,int n)
{
	ln x1,x2,y1,y2,r,q,t1,t2,m,a,b;
	a = (ln)p;
	b = (ln)n;
	m=a;
	x1=1;x2=0;y1=0;y2=1;
	r=a%b;
	while(r!=0)
	{
		q=a/b;
		t1=x2;t2=y2;
		x2=-1*q*x2+x1;y2=-1*q*y2+y1;
		x1=t1;y1=t2;
		a=b;
		b=r;
		r=a%b;
	}
	if(y2<0)
		y2+=m;
	return y2;
}

int nck(int n,int k,int p){
	printf("n:%d k:%d\n",n,k );
	if(n<0 || k<0 )
		return 0;
	if(n==0 && k==0)
		return 0;
	if(n==0 || k==0)
		return 1;
	ln x,ans = 1;
	if(k>n/2)
		k=n-k;
	int i;
	for(i=0;i<k;i++){
		x=(((ln)(n-i))*inv(p,i+1))%p;
		ans = (ans*x)%p;
	}
	return (int)ans;
}

int fg(int n,int k){
	if(n*n>k)
		return k/n;
	else return n;
}

int calc_nck(){
	int i,j;
	nChoosek[0][0] = 0;
	for(i=1;i<100405;i++){
		nChoosek[i][0] = 1;
		nChoosek[0][i] = 1;
	}
	for(i=1;i<100405;i++){
		for(j=1;j<400;j++){
			if(j>i)
				nChoosek[i][j] = 0;
			else
				nChoosek[i][j] = (nChoosek[i-1][j] + nChoosek[i-1][j-1])%N;
			//printf("%d ",nChoosek[i][j] );
		}
		//printf("\n");
	}
	return 0;
}

int main(){
	int t,n,k,temp,root = 1,mark;
	scanf("%d",&t);
	calc_nck();
	while(t--){
		scanf("%d%d",&n,&k);
		int j,sum=0;
		root = 1;
		if(n==1)
			sum = -1;
		else if(k==1)
			sum = 1;
		else{
/*			for(j=k;j>0;j--){
				temp = fg(j,k)-1;
				sum = (sum+nck(temp+n-1,n-1,N))%N; //n is number of slots
			}*/
	//		printf("old sum:%d\n",sum );
			while(root*root<k)
				root++;
			if(root*root != k)
				root--;
			sum = (sum+nChoosek[root-1+n][root-1]) % N;
			j = 1;
			while(j<root){
				temp = k/j - k/(j+1);
				temp = (int)(((ln)(temp)*((ln)(nChoosek[j-1+n-1][j-1])))%N);
				sum = (sum+temp)%N;
				j++;	
			}
			if(k/j != j){
				temp = k/j - k/(j+1);
				temp = (int)(((ln)(temp)*((ln)(nChoosek[j-1+n-1][j-1])))%N);
				sum = (sum+temp)%N;
				j++;	
			}

		}
		printf("%d\n",sum );
	}
	return 0;
}