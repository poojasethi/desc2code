#include <iostream>
#include <fstream>
#include <cstdio>
#include <math.h>
#include <vector>
#include <string.h>
#include <algorithm>
#include <climits>
#include <stack>
#include <queue>
#include <set>
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a>b?b:a
#define SWAP(a,b) {int tmp=a;a=b;b=tmp;}
#define GCD(a,b)  { return (b==0)?a:GCD(b,a%b); }
#define LCM(a,b)  { return a*b/GCD(a,b);  }
#define FOR(i,n) for(i=0;i<n;i++)
#define FOR_X(i,n,x) for(i=x;i<n;i++)
#define FORN(i,n) for(i=n;i>=0;i--)
#define FORN_X(i,n,x) for(i=n;i>=x;i--)
typedef long long int lld;
using namespace std;
lld mod;
lld dp[100002][320];
int main()
{
	ios_base::sync_with_stdio(0); //dont use with EOF
	lld n,k,t;
	lld x,ans,i,j;
	mod=1000000007;
	
	for(i=1;i<=100000;i++)
	{
		for(j=1;j<=317;j++)
		{
			if(i==1)
			dp[i][j]=j;
			else if(j==1)
			dp[i][j]=1;
			else
			{
				dp[i][j]= (dp[i-1][j]+dp[i][j-1] )%mod;
			}
		}
	}
	cin>>t;
	while(t--)
	{
		cin>>n>>k;
		x=(long long) sqrt(k);
		ans=dp[n][x]%mod;
		//cout<<"********** "<<ans<<endl;
		if(n==1)
		{
			cout<<"-1"<<endl;
			continue;
		}
		lld xx=x;
		for(i=x;i>0;i--)
		{
			lld new_limit=k/i;
			lld last_no=(new_limit-xx)%mod;
			lld tmp=(dp[n-1][i]* last_no )%mod;
			ans = (ans+tmp)%mod;
			xx=new_limit;
		}
		cout<<ans<<endl;
	}
	return 0;
}