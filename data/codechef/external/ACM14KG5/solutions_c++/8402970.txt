#include <iostream>
#include <stdio.h>
#include <vector>
#include <algorithm>
#include <math.h>
using namespace std;
#define MAXN 100002
#define MOD 1000000007
typedef long long ll;
ll dp[317][MAXN];
void pre() {
    for(int i = 1; i < MAXN; i++) dp[1][i] = 1LL;
    for(int i = 1; i < 317; i++) dp[i][1] = i;
    for(int i = 2; i < MAXN; i++) {
        for(int j = 2; j < 317; j++) {
            dp[j][i] = dp[j][i - 1] + dp[j - 1][i];
            if(dp[j][i] >= MOD) dp[j][i] -= MOD;
        }
    }
}
ll get(ll N, ll K) {
    return dp[K][N];
}
void solve() {
    ll N, K;
    scanf("%lld %lld", &N, &K);
    if(N == 1){puts("-1"); return;}
    if(K == 1) {
        puts("1"); return;
    }
    if(K == 2) {
        puts("2");
        return;
    }
    ll upto = sqrtl(K);
    ll ans = get(N, upto);
    ll start = upto;
    for(int i = upto; i > 0; --i) {
        ll num = get(N - 1, i);
        ll rng = (K / i) - start;
        ans = ans + (rng * num);
        ans = ans % MOD;
        start = (K / i);
    }
    printf("%lld\n", ans);
}
int main() {
    int t; pre();
    scanf("%d", &t);
    while(t--) solve();
}
