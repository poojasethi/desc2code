#include<bits/stdc++.h>
using namespace std;
const int MAXN = 1e5 + 10;
int A[MAXN];
int leftPart[MAXN];
int rightPart[MAXN];
inline int gcd(int A, int B){
	int z;
	while(B > 0){
		z = A;
		A = B;
		B = z % B;
	}
	return A;
}
int main(){
	int N, Q;
	int t;
	// cin >> t;
	scanf("%d", &t);
	while(t--){
		// cin >> N >> Q;
		scanf("%d%d",&N,&Q);
		for(int i = 1;i <= N;++i){
			// cin >> A[i];
			scanf("%d", &A[i]);
		}
		leftPart[1] = A[1];
		rightPart[N] = A[N];
		for(int i = 2;i <= N;++i){
			leftPart[i] = gcd(A[i], leftPart[i - 1]);
		}
		for(int i = N - 1;i >= 1;--i){
			rightPart[i] = gcd(A[i], rightPart[i + 1]);
		} 
		while(Q--){
			int L, R;
			scanf("%d%d",&L,&R);
			int gc;
			if(L > 1){
				gc = leftPart[L - 1];
				if(R < N){
					gc = gcd(gc, rightPart[R + 1]);
				}
			} else if(R < N){
				gc = rightPart[R + 1];
				if(L > 1){
					gc = gcd(gc, leftPart[L - 1]);
				}
			}
			// cout << gc << "\n";
			printf("%d\n", gc);
		}
	}
	return 0;
}