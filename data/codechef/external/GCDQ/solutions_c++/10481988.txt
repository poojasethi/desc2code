#include <bits/stdc++.h>
#include <cmath>

using namespace std;

const int MaxN = 1e5 + 5;

int n, m, q, x, y, a[MaxN], l[4*MaxN], h[4*MaxN], t[4*MaxN];

void enter()
{
    scanf("%d\n", &m);
}

void build(int x, int low, int high )
{
    l[x]= low; h[x]= high;
    if ( low == high ) t[x]= a[low];
    if ( low < high )
    {
        int mid;
        mid= ( high + low ) / 2;
        build( 2*x, low, mid ); build( 2*x+1, mid+1, high );
        t[x]= __gcd( t[2*x], t[2*x+1] );
    }
}

int query( int x, int i, int j )
{
    if ( i > h[x] || l[x] > j ) return 0;
    if ( i <= l[x] && h[x] <= j ) return t[x];
    return __gcd( query(2*x, i, j), query(2*x+1, i, j) );
}

void solve()
{
    for (int i=1; i<=m; i++)
    {
        scanf("%d%d\n", &n, &q);
        for (int j=1; j<=n; j++) scanf("%d", &a[j]);
        scanf("\n");
        build(1, 1, n);
        for (int j=1; j<=q; j++)
        {
            scanf("%d%d\n", &x, &y);
            printf("%d\n", __gcd( query( 1, 1, x-1 ), query( 1, y+1, n) ) );
        }
    }
}

int main()
{
    //freopen("gcd.inp", "r", stdin);
    //freopen("gcd.out", "w", stdout);
    enter();
    solve();
    return 0;
}
