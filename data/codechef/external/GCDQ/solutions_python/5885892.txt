from fractions import gcd
for _ in range(input()):
    n,q=map(int,raw_input().split())
    A=map(int,raw_input().split())
    B=[A[0]]
    for i in xrange(1,n):
        B.append(gcd(B[-1],A[i]))
    A=A[::-1]
    C=[A[0]]
    for i in range(1,n):
        C.append(gcd(C[-1],A[i]))
    C=C[::-1]
    for _ in range(q):
        l,r=map(int,raw_input().split())
        l-=1
        r-=1
        if l == 0:
            print C[r + 1]
        elif (r == n - 1):
            print B[l - 1]
        else:
            print gcd(C[r + 1], B[l - 1])