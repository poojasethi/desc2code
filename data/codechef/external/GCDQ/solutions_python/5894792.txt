def GCD(a,b):
	if b > a:
		a, b = b, a
	while b > 0:
		temp = a % b
		a = b
		b = temp
	return a

def run():
	t = input()
	for _ in xrange(t):
		# For each test case, first line will contain two space separated integers N, Q.
		N, Q = map(int, raw_input().split())
		# Next line contains N space separated integers denoting array A.
		A = map(int, raw_input().split())
		
		# For next Q lines, each line will contain a query denoted by two space separated integers L, R.
		fromFront = [1] * N
		fromFront[0] = A[0]
		
		for i in xrange(1,N):
			g = GCD(fromFront[i-1], A[i])
			fromFront[i] = g
			if g == 1:
				break
		fromBack = [1] * N
		fromBack[-1] = A[-1]
		for i in xrange(N-2, -1, -1):
			g = GCD(fromBack[i - N +1], A[i])
			fromBack[i] = g
			if g == 1:
				break

		# print fromFront, fromBack
		for i in xrange(Q):
			a, b = map(int, raw_input().split())
			a, b = a-1, b 
			if a == 0:
				print fromBack[b]
			elif b == N :
				print fromFront[a-1]
			else:
				print GCD(fromFront[a-1], fromBack[b])

run()
