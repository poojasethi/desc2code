import sys

#input = open('../Input/GCDQ.txt','rU')
#sys.stdin = input


line = sys.stdin.readline()
t = int(line.lstrip().rstrip())

def gcd(x, y):
    while y != 0:
        (x, y) = (y, x % y)
    return x

while t > 0:
    t -= 1
    line = sys.stdin.readline()
    vals = line.split()
    
    n = int(vals[0].lstrip().rstrip())
    q = int(vals[1].lstrip().rstrip())
    
    line = sys.stdin.readline()
    aSList = line.split()
    a = []
    for s in aSList:
        a.append(int(s.lstrip().rstrip()))
        
    gcdLtoR = []
    gcdRtoL = []
    
    _gcd = a[0]
    gcdLtoR.append(_gcd)
    gcdRtoL.append(-1)
    
    for i in xrange(1,n):
        _gcd = gcd(_gcd,a[i])
        gcdLtoR.append(_gcd)
        gcdRtoL.append(-1)
        
    _gcd = a[n-1] 
    gcdRtoL[n-1] = _gcd
    
    for i in xrange(n-1,-1,-1):
        _gcd = gcd(_gcd,a[i])           
        gcdRtoL[i] = _gcd

    while q > 0:
        q -= 1
        line = sys.stdin.readline()
        vals = line.split()
    
        l = int(vals[0].lstrip().rstrip()) - 1
        r = int(vals[1].lstrip().rstrip()) - 1
        
        ans = 1
        if l > 0:
            ans = gcdLtoR[l-1]
            if r < n-1:
                ans = gcd(ans,gcdRtoL[r+1])
        else:
            if r < n-1:
                ans = gcdRtoL[r+1]
        
        print(ans)
        
