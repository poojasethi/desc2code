/******* had other ways for this solution
but this was a beauty of it
real awesum idea to compute this way
*learnt a new way to look at it :) :)
****************************************/
#include<stdio.h>

int main(){

    int a,b,c,d,e;
    int r[30] = {0};
    int i;
    int lowest=((a<0)?(-1*a):a*(b<0)?(-1*b):b*(c<0)?(-1*c):c*(d<0)?(-1*d):d*(e<0)?(-1*e):e);
    scanf("%d %d %d %d %d",&a,&b,&c,&d,&e);

    r[0] = a+b-c*d/e;
    r[1] = a+b-c/d*e;
    r[2] = a+b*c-d/e;
    r[3] = a+b*c/d-e;
    r[4] = a+b/c-d*e;
    r[5] = a+b/c*d-e;

    r[6] = a-b+c*d/e;
    r[7] = a-b+c/d*e;
    r[8] = a-b*c+d/e;
    r[9] = a-b*c/d+e;
    r[10]= a-b/c+d*e;
    r[11]= a-b/c*e+d;

    r[12]= a*b+c-d/e;
    r[13]= a*b+c/d-e;
    r[14]= a*b-c+d/e;
    r[15]= a*b-c/d+e;
    r[16]= a*b/c+d-e;
    r[17]= a*b/c-d+e;

    r[18]= a/b+c-d*e;
    r[19]= a/b+c*d-e;
    r[20]= a/b-c+d*e;
    r[21]= a/b-c*d+e;
    r[22]= a/b*c-d+e;
    r[23]= a/b*c+d-e;


    for(i=0;i<=23;i++){
        lowest = (r[i]<lowest && r[i]>0)?r[i]:lowest;
    }
    printf("%d\n",lowest);

return 0;}
