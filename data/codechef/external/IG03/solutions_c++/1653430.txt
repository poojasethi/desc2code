#include<iostream>
#include<cstdio>
#include<climits>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<algorithm>
#include<stack>
#include<map>
#include<ctime>
#include<functional>
#include<sstream>
#include<bitset>
#include<set>
using namespace std;

#define MOD 	 	10000007LL
#define LL          long long
#define ULL         unsigned long long
#define SQR(x)      ((x)*(x))
#define CUBE(x)     ((x)*(x)*(x))
#define ABS(x)      ((x)>0?(x):-(x))
#define FILL(a,b)   memset(a,b,sizeof(a))

#define si(a)       scanf("%d",&a)
#define si2(a,b)    scanf("%d %d",&a,&b)
#define sc(a)       scanf("%c",&a)
#define sf(a)       scanf("%f",&a)
#define ss(a)       scanf("%s",&a)
#define pi(a)       printf("%d ",a)
#define pi2(a,b)    printf("%d %d ",a,b)
#define pc(a)       printf("%c ",a)
#define pf(a)       printf("%f ",a)
#define ps(a)       printf("%s ",a)
#define pnl         printf("\n")

#define FOR(i,a,b)  	 for(__typeof(b) i=(a);i<(b);++i)
#define FORE(i,a,b) 	 for(__typeof(b) i=(a);i<=(b);++i)
#define toAscii(A,len)   for(__typeof(len) i=0; i<(len); A[i++]+='0')
#define fromAscii(A,len) for(__typeof(len) i=0; i<(len); A[i++]-='0')

inline bool isUpperCase(char c){return c>='A'&&c<='Z';}
inline bool isLowerCase(char c){return c>='a'&&c<='z';}
inline bool isChar(char c){return c>='A'&&c<='Z'||c>='a'&&c<='z';}
inline bool isDigit(char c){return c>='0'&&c<='9';}
inline char toLowerCase(char c){return (isUpperCase(c))?(c+32):c;}
inline char toUpperCase(char c){return (isLowerCase(c))?(c-32):c;}
inline bool isLeap(int y){return (y%400==0||(y%100!=0&&y%4==0));}
inline int GCD(int a,int b){if(!a)return b;if(!b)return a;if(a==b)return a;if(a>b)return GCD(b,a%b);else return GCD(a,b%a);}
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1};//4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
//int keyHasChars[]={0,0,3,3,3,3,3,4,3,4};
//char numPad[10][4]={{},{},{'a','b','c'},{'d','e','f'},{'g','h','i'},{'j','k','l'},{'m','n','o'},{'p','q','r','s'},{'t','u','v'},{'w','x','y','z'}};

#define SIZE 15

void doThis(){
    int mx, my, K, x, y, schritt;
int kont[15][15];
char feld[15][15];
scanf("%d %d %d",&my,&mx,&K);
for(y=0; y<my; y++)
        for(;scanf("%s",feld[y])&&!strlen(feld[y]););
memset(kont,0,sizeof(kont));
x=K-1;
y=0;
schritt=0;
while(1)
        {
        schritt++;
        if(feld[y][x]=='E') x++;
        else if(feld[y][x]=='W') x--;
        else if(feld[y][x]=='N') y--;
        else y++;
        if(x<0 || y<0 || x>=mx || y>=my)
                 {
                 printf("%dE\n",schritt);
                 return;
                 }
        if(kont[y][x])
                 {
                 printf("%dL\n",schritt-kont[y][x]);
                 return;
                 }
        kont[y][x]=schritt;
        }
}
int main(){
#ifdef raj
freopen("C:\\codes\\in.txt","r",stdin);freopen("C:\\codes\\out.txt","w",stdout);
#endif
int t=1;
si(t);
//getchar();
while(t--){ doThis();}
#ifdef raj
fprintf(stdout, "\nTime taken : %.3lf   sec", (double) clock() /(CLOCKS_PER_SEC));
#endif
return 0;
}
/*
INPUT:

OUTPUT:

*/
