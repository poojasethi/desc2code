//Common headers
#include<cstdio>
#include<iostream>
#include<iomanip>
#include<vector>
#include<utility>
#include<algorithm>
#include<string>

using namespace std;


#define ipair std::pair< int, int >
#define ull unsigned long long
#define traverse(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define rtraverse(container, it) for(typeof(container.rbegin()) it = container.rbegin(); it != container.rend(); it++)

#define TOLERANCE 1e-5
#define BASEPOW 4

int main(){
	const long long BASE = 10;
	int testCases= 0;
	cin >> testCases;
	
	for(int tc=1;tc<=testCases;tc++){
		long long X,Y;
		cin >> X >> Y;
		vector<long long> v;
		bool flag = true;
		v.clear();
		v.push_back( 1 );
		int vSize;
		
		int E=0;
		//Store Y in a vector
		/*if( Y == 1 ){
			printf("Case %d: %d\n", tc, 0);
			continue;
		}*/
		
		vector<int> y;
		for(int yi=Y;yi!=0;yi/=BASE){
			y.push_back(yi%BASE);
		}
		
		
		while(flag){ //&& E<=1000 ){ //){
			
			long long p,remaining=0;		
			int i=0;
			E++;
			/*
			if( E>1000)
				return 1;	//Will tell me :p
			*/
			while( i< v.size() || remaining){
				if(i >= v.size()){
					p = remaining;
					v.push_back(p % BASE);
					remaining = p/BASE;
				}
				else{
					p = (v[i]*X) + remaining;
					v[i] = (p%BASE);
					remaining = p/BASE;
				}
				i++;
			}
			
			//
			/*
			cout << "NUM IS: " ;
			i = v.size()-1;
			
			while(i >= 0){	//right condition
				cout << v[i] ;
				i--;
			}
			cout << '\n';
			//*/
			
			int vi =v.size()-1;
			int yi = y.size()-1;
			bool isSame = true;
			while( isSame && yi>=0){
				//cout <<  y[yi] << " | " << v[vi] << '\n';
				if( vi < 0 || v[vi] != y[yi] ){
					isSame = false;
					//cout << "\nnope";
				}
				vi--;yi--;
			}
			
			if(isSame){
				printf("Case %d: %d\n", tc, E);
				flag = false;
			}
		}
	}
	return 0;
}