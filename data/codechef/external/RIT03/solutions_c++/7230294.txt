#include<iostream>
    #include<cstdio>
    #include<algorithm>
    #include<vector>
    #include<set>
    #include<map>
    #include<functional>
    #include<string>
    #include<cstring>
    #include<cstdlib>
    #include<queue>
    #include<utility>
    #include<fstream>
    #include<sstream>
    #include<cmath>
    #include<stack>
    #include<assert.h>
    using namespace std;
    #define gc getchar()
    #define ll long long int
    #define MEM(a, b) memset(a, (b), sizeof(a))
    #define CLR(a) memset(a, 0, sizeof(a))
    #define MAX(a, b) ((a) > (b) ? (a) : (b))
    #define MIN(a, b) ((a) < (b) ? (a) : (b))
    #define ABS(X) ( (X) > 0 ? (X) : ( -(X) ) )
    #define S(X) ( (X) * (X) )
    #define SZ(V) (int )V.size()
    #define FORN(i,n) for(ll i = 0; i < n; i++)
    #define FORAB(i, a, b) for(i = a; i <= b; i++)
    #define ALL(V) V.begin(), V.end()
    #define IN(A, B, C)  (B) <= (A) && (A) <= (C)
    ll read()
    {
        ll i=0;
        char ch=gc;
        while(ch<'0'||ch>'9')
        ch=gc;
        while(ch<='9'&&ch>='0')
        {
            i=(i<<1)+(i<<3)+ch-'0';
            ch=gc;
        }
        return i;
    }

      int main()
    {
       ll t=read();
      while(t--)
    {
    	string s,p;
    	cin>>s>>p;
    	if(s.size()==p.size())
    	{ int j=0;
    		FORN(i,s.size())
    		if(s[i]!=p[i])
    		j++;
    		cout<<j<<endl;
    	}
    	else
    	{

      if(p.size()>s.size()){
    		ll tp=p.size()-s.size(); ll min=p.size();
    	    	for(ll i=0;i<=tp;i++)
    	{     ll k=0;
    		for(ll j=0;j<s.size();j++)
    		{
    			if(s[j]!=p[i+j])
    			k++;
    		}
    	//	cout<<k<<" ";
    		if(min>k)
    		min=k;
    	}
    		cout<<min<<endl;
    	}
    	else
    	{
    		ll tp=s.size()-p.size(); ll min=s.size();
    	    	for(ll i=0;i<=tp;i++)
    	{     ll k=0;
    		for(ll j=0;j<p.size();j++)
    		{
    			if(p[j]!=s[i+j])
    			k++;
    		}
    	//	cout<<k<<" ";
    		if(min>k)
    		min=k;
    	}
    		cout<<min<<endl;
    	}


    	}


    }


        return 0;
    }
