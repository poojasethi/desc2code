import java.io.BufferedReader;
import java.io.IOException;
import java.util.ArrayList;

public class Main {
	
	private static java.io.PrintWriter writer;
	private static ArrayList<String> dict;
	public static void main(String[] args) {
		java.io.BufferedReader reader =new java.io.BufferedReader(new java.io.InputStreamReader(System.in));
		writer=new java.io.PrintWriter(new java.io.OutputStreamWriter(System.out),true);
		
		try {
			int limit=Integer.parseInt(reader.readLine());
			while(limit-->0){
				String str=reader.readLine();
				if(str.equalsIgnoreCase(""))
					str=reader.readLine();
				
				int dic_Len=Integer.parseInt(reader.readLine());
				populateDictonary(str,dic_Len,reader);
			}
		} catch (NumberFormatException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			return;
		} catch (java.io.IOException e) {
			// TODO Auto-gene	rated catch block
			e.printStackTrace();
			return;
		}
	}

	private static void populateDictonary(String str,int dictionary,BufferedReader reader) {
		// TODO Auto-generated method stub	
		dict=new ArrayList<String>();
//		lenOfWords=new ArrayList<Integer>();
		for (int i = 0; i < dictionary; i++) {
			try {
				String inputDict=reader.readLine();
				dict.add(inputDict);
				
				
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
				return;
			}
		}
		
		int step=0;
		int pos=0;
		int totalCount=0;
		while(pos!=str.length()) {
		if(pos+step<=str.length()){
			String subString=str.substring(pos, pos+step);
			if(isPresent(subString)){
				totalCount++;
				pos=step+pos;
				step=0;
			}
			else{
				step++;
			}
			
			
		}
		else{
			pos++;
			step=0;
		}
			
		}
		writer.println(totalCount);
		writer.flush();
		
	}
	
	public static boolean isPresent(String subString){
		
		if(dict.contains(subString))
			return true;

		return false;
	}
}
