#include <stdio.h>
using namespace std;
struct node {
	int ocount;
	int zcount;
	node *one;
	node *zero;
	node () {
		ocount = zcount = 0;
		one = zero = NULL;
	}
};
void insert(node *head, int x)
{
	node *p = head;
	for (int i = 19; i >= 0; i--) {
		if (x&(1<<i)) {
			if (p->one == NULL) {
				p->one =  new node();
			}
			p->ocount++;
			p = p->one;
			//printf("one %d\n",p->ocount);
		}
		else {
			if (p->zero == NULL) {
				p->zero = new node();
			}
			p->zcount++;
			p = p->zero;
			//printf("zero %d\n",p->zcount);
		}
	}

}
int find( node *ptr, int k,int i,int x) 
{
	if (i < 0 || ptr == NULL) return 0;
	int p = k&(1<<i);
	int q = x&(1<<i);
	int ans = 0;
	if (p) {
		if (q) { //1^1 = 0
			ans = ptr->ocount + find(ptr->zero,k,i-1,x);
		}else { //0^0 = 0
			ans = ptr->zcount + find(ptr->one,k,i-1,x);
		}
	}
	else {
		if (q) { //1^1 = 0
			ans = find(ptr->one,k,i-1,x);
		}else { //0^0 = 0
			ans = find(ptr->zero,k,i-1,x);
		}
	}
	return ans;
}
int main()
{
	int t;
	scanf("%d",&t);
	while (t--) {
		int n,k;
		scanf("%d%d",&n,&k);
		node *head =  new node();
		insert(head,0);
		int total = 0;
		long long ans = 0;
		for (int i = 0; i < n; i++) {
			int awe;
			scanf("%d",&awe);
			total ^= awe;
			ans += find(head,k,19,total);
			insert(head,total);
			//printf("%d\n",ans);
		}
		printf("%lld\n",ans);
	}
	return 0;
}
