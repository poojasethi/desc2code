#include<bits/stdc++.h>
#define ll long long
#define in freopen("input.txt","r",stdin);
#define out freopen("output.txt","w",stdout);

using namespace std;

struct node
{
    int lcount,rcount;
    struct node *left;
    struct node *right;
};

void insert(struct node *root,int n)
{
    for(int i=20;i>=0;i--){
    unsigned int x=((n>>i)&1);
    if(x)
    {
        root->rcount++;
        if(root->right==NULL)
        {
            root->right=(struct node *)malloc(sizeof(struct node));
            root->right->lcount=root->right->rcount=0;
            root->right->right=root->right->left=NULL;
        }
        root=root->right;
    }
    else
    {
        root->lcount++;
        if(root->left==NULL)
        {
            root->left=(struct node *)malloc(sizeof(struct node));
            root->left->lcount=root->left->rcount=0;
            root->left->right=root->left->left=NULL;

        }
        root=root->left;
    }
    }

}

unsigned int query(struct node *root,unsigned int n,unsigned int k)
{
    if(root==NULL)  return 0;

unsigned int res=0;
 for(int i=20;i>=0;i--){
        bool  q=((k>>i)&1);  //ch1
        bool  p=((n>>i)&1);    //ch2


    if(q)
    {
        if(p)
        {
            res+=root->rcount;
            if(root->left==NULL)
                return res;
            root=root->left;
        }

        else{
            res+=root->lcount;
            if(root->right==NULL)
                return res;
            root=root->right;
        }

    }
    else
    {
        if(p)
        {
            if(root->right==NULL)
                return res;
            root=root->right;
        }
        else
        {
            if(root->left==NULL)
                return res;
            root=root->left;
        }
    }

 }

 return res;
}


int main()
{
    int t;
    scanf("%d",&t);


    while(t--)
    {   struct node *root=(struct node *)malloc(sizeof( struct node));;

     root->left=root->right=NULL;
    root->lcount=root->rcount=0;


    insert(root,0);


   ll ans=0;
        int n,k;
        int temp,temp2=0,temp1;

      cin>>n>>k;
        for(int i=1;i<=n;i++)
        {
            scanf("%u",&temp);
            temp1=temp2^temp;
            ans+=(ll)(query(root,temp1,k));
            insert(root,temp1);
             temp2=temp1;

        }
       // print(root);

        printf("%lld\n",ans);
    }
return 0;
}

