// SUBXORR
// headers
#include<iostream>
#include<bits/stdc++.h>
using namespace std;
// container
#define ALL(container) container.begin(),container.end()
#define  VI  vector<int>
#define  PII   pair<int,int>
#define tr(container, it) \
for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
// loops
#define rep(i,j,k) for(int i=j;i<k;i++)
#define scan(x) scanf("%d",&x)
#define print(x) printf("%d\n",x)
// MAX , MIN
// GCD
#define MAX 600000
typedef struct {
 int LC,RC,ST;
}node;
node trie[MAX];
int gcd(int a,int b)
{
  if(!b)
  return a;
  return gcd(b,a%b);
}
void insert(int x,int idx,int level)
{
	if(level==-1)
	 return ;
	if(x&(1<<level))
	{
		 trie[idx].RC++;
             trie[idx].ST=0;
		 insert(x,2*idx+2,level-1);
	}
	else
	{
             trie[idx].LC++;
		 trie[idx].ST=0;
		 insert(x,2*idx+1,level-1);
	}
}
int query(int idx,int k,int n,int level)
{
	if(level==-1)
	 return 0;
	 if(trie[idx].ST==-1)
	 return 0;
	 
	 if(k&(1<<level))
	 {
	    if(n&(1<<level))
	    {
		  return trie[idx].RC+query(2*idx+1,k,n,level-1);
	    }
	    else
	    {
              return trie[idx].LC+query(2*idx+2,k,n,level-1);
	    }
	 }
	 else
	 {
           if(n&(1<<level))
	    {
		return query(2*idx+2,k,n,level-1);
	    }
	    else
	    {
            return query(2*idx+1,k,n,level-1);
	    }
	 }
}
void setdefault()
{
	for(int i=0;i<MAX;i++)
	{
		trie[i].RC=0;
		trie[i].LC=0;
		trie[i].ST=-1;
	}
}
int main()
{
 int t;
 scan(t);
 while(t--)
 {
   setdefault();
   int n,k;
   scan(n);
   scan(k);
   insert(0,0,17);
   int x,y=0;
   long long ans=0;
   for(int i=0;i<n;i++)
   {
    scan(x);
    y=y^x;
    ans+=query(0,k,y,17);
    insert(y,0,17);
   }
   cout<<ans<<endl;
 }
 return 0;
}
