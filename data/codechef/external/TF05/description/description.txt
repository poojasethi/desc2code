There are T trains on station S. They need to go to station R. i^th train takes Mi time to go from S to R and should ideally be at station R by time Di. At one time, only one train could be travelling from S to R i.e. next train would start from S only after the previous train has reached R. 
Prepare a sequence in which trains should leave so that the maximum time by which a train is late is minimized.

Input
The first line contains the number of trains T. Each of the next T lines contains two integers Di and Mi.

Output
Output T lines. The i^th line should contain the minimum maximum lateness you can obtain by optimally sequencing the first i trains on your list. See the sample input for clarification.

Constraints:
1 <= T <= 100000
1 <= Di <= 100000
1 <= Mi <= 1000

Example

Input:
5
2 2
1 1
4 3
10 1
2 1


Output:
0
1
2
2
3

Explanation:
With only the first train, it reaches in 2 minutes, and so lateness = 0.
With the first two trains, the optimal sequence can be:
train 2, train 1. Train 1 is late by 1 unit of time. 
With the first three trains, the optimal sequence can be: train 2, train 1, train 3.
