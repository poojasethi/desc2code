#include<algorithm>
#include<iostream>
#include<vector>
using namespace std;
vector<int> arr[20001];
vector<bool> visited(20001,0);
vector<int> a,b;
void dfs(int p){
int i;
visited[p]=1;
for(i=0;i<arr[p].size();i++){
if(visited[arr[p][i]]==0){
dfs(arr[p][i]);
}
}
}
int main(void){
int n,m,i,temp1,temp2;
int cost;
cin>> n>>m;
for(i=0;i<m;i++){
cin>>temp1>>temp2;
arr[temp1].push_back(temp2);
arr[temp2].push_back(temp1);
}

for(i=0;i<n;i++){
if(visited[i]==0){
if(i!=0){
a.push_back(i-1);
b.push_back(i);
}
dfs(i);
}
}
cost=a.size();
cout << cost << " " << cost << endl;
for(i=0;i<a.size();i++){
cout << a[i] << " " << b[i] <<endl;
}
return 0;
}