#include <bits/stdc++.h>
using namespace std;
#define MAX 3000+10
int n;
vector<int> graph[MAX];
vector<int> vis(MAX,0),D(MAX,0);
void dfs(int node,int len)
{
    if(len==2)
    {
        D[node]++;
        return;
    }
for(int i=0;i<graph[node].size();i++)
{  if(!vis[graph[node][i]])
    dfs(graph[node][i],len+1);
}
}
void makezero()
{
    for(int i=1;i<=n;i++)
        D[i]=0;
    return;
}
int main(){
    int m;
    scanf("%d %d",&n,&m);
    while(m--)
    {
        int a,b;
        scanf("%d %d",&a,&b);
          graph[a].push_back(b);
    }
    int ans=0;
    for(int i=1;i<=n;i++)
    {
        makezero();
        dfs(i,0);
        for(int j=1;j<=n;j++)
        {
            if(j!=i)
              ans+= (D[j]*(D[j]-1) )/2;
        }

    }
    printf("%d\n",ans);


    return 0;
}
