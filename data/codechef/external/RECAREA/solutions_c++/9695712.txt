#include <bits/stdc++.h>

using namespace std;

#define FOR(i,a,b) 	for(int i=(a);i<(b);i++)
#define SZ(x) 		((int)(x).size())
#define FORV(i,x)	FOR(i,0,SZ(x))
#define FORD(i,a,b) for(int i=(a);i>=(b);i--)
#define MP 			make_pair
#define PB 			push_back
#define ALL(x) 		x.begin(),x.end()
#define ULL 		unsigned long long
#define LL 			long long
#define mset(x,v) 	memset(x,v,sizeof x)
#define F 			first
#define S 			second
#define si(n) 		scanf("%d",&n)
#define sc(n) 		scanf("%c",&n)
#define sll(n) 		scanf("%lld",&n)
#define sf(n) 		scanf("%f",&n)
#define ss(n) 		scanf("%s",n)
#define INF (1<<30)+(1<<29)

int n,h[100010],rmq[20][100010];
LL ans=-INF;

int F(int i,int j)
{
	int k=log2(j-i+1);
	if(h[rmq[k][i]] < h[rmq[k][j-(1<<k)+1]]) {
		ans=max(ans,(LL)((j-i+1)*h[rmq[k][i]]));
		return rmq[k][i];
	}
	else
	{
		ans=max(ans,(LL)((j-i+1)*h[rmq[k][j-(1<<k)+1]]));
		return rmq[k][j-(1<<k)+1];
	}
}

void solve(int i,int j)
{
	int q=F(i,j);
	if(i<j)
	{
		solve(i,q-1);
		solve(q+1,j);
	}
}

int main()
{
	si(n);
	FOR(i,0,n) 
	{
	 	si(h[i]); 
		rmq[0][i]=i;
	}
	for(int i=1;(1<<i)<=n;i++)
	{
		for(int j=0;j+(1<<i)-1<n;j++)
		{
			if(h[rmq[i-1][j]]<=h[rmq[i-1][j+(1<<(i-1))]])
				rmq[i][j]=rmq[i-1][j];
			else rmq[i][j]=rmq[i-1][j+(1<<(i-1))];
		}
	}
	solve(0,n-1);
	cout<<ans<<endl;
	return 0;
}
