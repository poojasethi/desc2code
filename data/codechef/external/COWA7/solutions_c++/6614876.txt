#include <iostream>
#include<cstdio>
#include<string.h>
#define max 100000
int A[max];
long long int tree[max];
long long int sum1=0,sum2=0;
int n;
using namespace std;
long long int query(int a,int b)
{
sum1=0;
sum2=0;
int idx=b,idx1=a-1;
while(idx>0)
{
sum1=sum1+tree[idx];
idx=idx-(idx&(-idx));
}
while(idx1>0)
{
sum2=sum2+tree[idx1];
idx1=idx1-(idx1&(-idx1));
 
 
}
return(sum1-sum2);
}
void update(int ind,int val,int p)
{
 
int idx;
if(p==1)
idx=ind+1;
else
idx=ind;
val=val*p;
while(idx<=(n))
{
tree[idx]=tree[idx]+val;
idx=idx+(idx&(-idx));
 
}
 
}
void construct()
{
for (int i=1; i<=n; i++)
tree[i] = 0;
int i;
for(i=0;i<n;i++)
update(i,A[i],(1));
}
 
 
int main()
{
 
int t;
scanf("%d",&t);
int q;
while(t--)
{
scanf("%d %d",&n,&q);
int i;
for(i=0;i<n;i++)
scanf("%d",&A[i]);
construct();
while(q--)
{
int a,b,c;
scanf("%d %d %d",&a,&b,&c);
if(a==0)
printf("%lld\n",query(b,c));
else
update(b,c,(-1));
 
 
 
 
}
 
 
 
}
 
 
 
 
 
}