#include <iostream>
#include<cstdio>
#include<string.h>
#define max 10000000
long long int tree[max];
long long int arr[max];
using namespace std;
void build(int a,int b,int n)
{
    if(a==b)
    {
        tree[n]=arr[a];
        return;
    }
    int mid=((a+b)/2);
  build(a,mid,2*n);
  build(mid+1,b,(2*n)+1);
  tree[n]=tree[2*n]+tree[(2*n)+1];
  return;
}
void update(int a,int b,int val,int c,int n)
{
    if(c>b)
        return;
    if(c<a)
        return;
    if((a==b)&&(a==c))
    {
        tree[n]=tree[n]-val;
        return;
    }
    int mid=((a+b)/2);
  update(a,mid,val,c,2*n);
  update(mid+1,b,val,c,(2*n)+1);
  tree[n]=tree[2*n]+tree[(2*n)+1];
    return;

}
long long int query(int a,int b,int i,int j,int n)
{
    if((i>b)||(j<a))
        return 0;
    if((a>=i)&&(b<=j))
        return tree[n];
        int mid=((a+b)/2);
    return (query(a,mid,i,j,2*n)+query(mid+1,b,i,j,(2*n)+1));
}
int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,q;
        scanf("%d %d",&n,&q);
        int i=0;
        for(i=1;i<=n;i++)
            scanf("%lld",&arr[i]);
        build(1,n,1);
        while(q--)
        {
            int a,b,c;
            scanf("%d %d %d",&a,&b,&c);
            if(a==0)
                printf("%lld \n",query(1,n,b,c,1));
            else
            {
                update(1,n,c,b,1);
            }



        }


    }
}
