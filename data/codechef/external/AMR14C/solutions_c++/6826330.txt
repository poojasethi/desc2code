#include<iostream>
#include<algorithm>
#include<cstdio>
#include<vector>
#include<cstring>
#include<string>
#include<cstdlib>
#include<math.h>
#include<cctype>
#include<iomanip>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<cassert>
#include<sstream>
 
using namespace std;
 
#define L long
#define LL unsigned long long
#define ULL unsigned long long
//#define D double 
#define LD long double
//#define G getchar
#define MOD 1000000007
#define f first
#define s second
#define pb push_back
#define mp make_pair
#define ULL unsigned long long
#define pll pair <L,L>
#define INF ((1<<30)+(1<<29))

 
 
 
LL gcd(LL a,LL b){return (b)?gcd(b,a%b):a;}
LL lcm(LL a,LL b){return a*b/gcd(a,b);}
LL modpow(LL n ,LL k,LL mod)
{LL ans=1;while(k>0){if(k&1)ans=(ans*n)%mod;k>>=1;n=(n*n)%mod;}return ans%mod;}
LL max(LL a,LL b){return (a>b)?a:b;}
LL min(LL a,LL b){return (a<b)?a:b;}
LL ab(LL a){return (a>0)?a:-a;}
LL poww(LL n,LL k){LL ans=1;while(k>0){if(k&1)ans*=n;k>>=1;n*=n;}return ans;}
 
 
L max(L a,L b){return (a>b)?a:b;}
L min(L a,L b){return (a<b)?a:b;}
L ab(L a){return (a>0)?a:-a;}


LL A[100005]={};
LL B[100005]={};

int main()
{
 ios::sync_with_stdio(false);
 LL T,ans,n,M,x,i;
 cin>>T;
 while(T--)
 {
  ans=0;
  cin>>n>>M>>x;
  for(i=0;i<100000;i++)
   A[i]=B[i]=0;
  for(i=0;i<n;i++)
   cin>>A[i],A[i]%=M,B[A[i]]++;
  for(i=1;i<M;i++)
   B[i]+=B[i-1];
  for(i=0;i<n;i++)
  {
   if(A[i]<=x)
   {
    ans+=B[x-A[i]];
	ans+=B[M-1]-B[M-A[i]-1];
   }
   else
   {
    ans+=B[M+x-A[i]]-B[M-A[i]-1];
   }
  }
  cout<<ans<<endl;
 }
 return 0;
}
  