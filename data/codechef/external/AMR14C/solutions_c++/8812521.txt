/*Programmed by Ayush Jaggi*/

#include<bits/stdc++.h>

using namespace std;

#define pb push_back
#define mp make_pair
#define F first
#define S second
#define sz size()
#define clr clear()
#define mem(a,b) memset(a,b,sizeof(a))
#define in(type,a) scanf("%" #type,&a)
#define ins(a) scanf("%s",a)
#define out(type,a) printf("%" #type,a)
#define pn printf("\n")
#define ps printf(" ")
#define rep(i,a,b) for(int i=a;i<(int)b;i++)
#define all(a) a.begin(),a.end()
#define repv(i,a) rep(i,all(a))
#define sortv(a) sort(all(a))
#define len length()
#define W(a) while(a--)

#define tc int t;\
in(d,t);\
while(t--)
//#define test int t; in(d,t); while(t--)

#define scn int n;\
in(d,n);
//#define scn int n; in(d,n);

#define scnm int n,m;\
in(d,n);\
in(d,m);
//#define scnm int n; in(d,n); in(d,m)

//iterator example
//for(map<ii,int>::const_iterator it=graph.begin(); it!=graph.end(); it++)
//it->F, it->S operations

//__typeof(a) -> hardware call equivalent to typeof(a)

typedef long long ll;
typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int,int> ii;
typedef vector<string> vs;

ll MOD=1000000007;

template<class T> inline T gcd(T a, T b)
{
    return b ? gcd(b, a % b) : a;
}

//__gcd(a,b) hardware call

inline ll expo(ll base, int nent)
{
    if(nent==1)
        return base;
    else if(nent&1)
    {
        ll temp=expo(base,nent/2);
        temp=(temp*temp)%MOD*base;
        if(temp>=MOD)
            temp%=MOD;
        return temp;
    }
    else
    {
        ll temp=expo(base,nent/2);
        temp*=temp;
        if(temp>=MOD)
            temp%=MOD;
        return temp;
    }
}

/*
inline void prime()
{
    int s, d, lb, count=0;
    lb=sqrt(n);
    for(s=2; s<=lb; s++)
        if(!pr[s])
        {
            sieve[count++]=s;
            for(d=s*s; d<=n; d+=s)
                pr[d]=1;
        }
}
*/

ll f[100005];

int main()
{
    int x, m, b[100005], c, d, l, h, e;
    int temp, temp_2;
    ll ans;
    tc
    {
        cin>>c>>m>>x;
        mem(f,0);
        rep(i,0,c)cin>>b[i],b[i]%=m,f[b[i]]++;
        rep(i,1,100005)f[i]+=f[i-1];
        ans=0;
        rep(i,0,c)
        {
            /*d=x-b[i],l=0,h=c-1,temp=c;
            while(l<=h)
            {
                e=(l+h)>>1;
                if(b[e]>d)temp=e,h=e-1;
                else l=e+1;
            }*/
            d=x-b[i];
            if(d>=0)
                ans+=f[d];
            //cout<<temp<<" ";
            /*d=m-b[i], l=0, h=c-1, temp=-1;
            while(l<=h)
            {
                e=(l+h)>>1;
                if(b[e]<d)temp=e,l=e+1;
                else h=e-1;
            }*/
            d=m-b[i]-1;
            temp=d+x+1;
            temp=min(temp,m-1);
            ans+=(f[temp]-f[d]);
            //d+=x, d=min(d,m-1), l=0, h=c-1, temp_2=-1;
            /*
             while(l<=h)
             {
                 e=(l+h)>>1;
                 if(b[e]<=d)temp_2=e,l=e+1;
                 else h=e-1;
             }
             //cout<<temp_2<<" "<<temp<<endl;
             ans+=(temp_2-temp);*/
        }
        cout<<ans<<endl;
    }
    return 0;
}
