#include <bits/stdc++.h>

#define rep(i,n) for(i=0; i<n; i++)
#define repl(i,n) for(i=1; i<=n; i++)
#define foreach(i,n) for(__typeof((n).begin())i =(n).begin(); i!=(n).end(); i++)

#define sz(x) (int) x.size()
#define pb(x) push_back(x)
#define all(x) x.begin(),x.end()
#define uu first
#define vv second
#define mem(x, y) memset(x, y, sizeof(x));

#define sdi(x) scanf("%d", &x)
#define sdii(x, y) scanf("%d %d", &x, &y)
#define sdiii(x, y, z) scanf("%d %d %d", &x, &y, &z)
#define sdl(x) scanf("%lld", &x)
#define sdll(x, y) scanf("%lld %lld", &x, &y)
#define sdlll(x, y, z) scanf("%lld %lld %lld", &x, &y, &z)
#define sds(x) scanf("%s", x)
#define pfi(x) printf("%d\n", x)
#define pfii(x, y) printf("%d %d\n", x, y)
#define pfiii(x, y, z) printf("%d %d %d\n", x, y, z)
#define pfl(x) printf("%lld\n", x)
#define pfll(x, y) printf("%lld %lld\n", x, y)
#define pflll(x, y, z) printf("%lld %lld %lld\n", x, y, z)

#define eps 1e-9
#define OK printf("ok\n")
#define DB(x) cout << #x << " = " << x << endl;

using namespace std;

typedef long long LL;
typedef unsigned long long ULL;
typedef pair <int, int> pii;

inline int setBit(int N, int pos) { return N=N | (1<<pos); }
inline int resetBit(int N, int pos) { return N= N & ~(1<<pos); }
inline bool checkBit(int N, int pos) { return (bool)(N & (1<<pos)); }

//int kx[] = {+2, +1, -1, -2, -2, -1, +1, +2};
//int ky[] = {+1, +2, +2, +1, -1, -2, -2, -1}; //Knight Direction
//int fx[] = {+0, +0, +1, -1, -1, +1, -1, +1};
//int fy[] = {-1, +1, +0, +0, +1, +1, -1, -1}; //Four & Eight Direction


const LL MAX=100005;
LL n, mod, x, arr[MAX], cum[MAX];

inline LL query(LL a, LL b) {
    if(a > b) return 0;
    return a? (cum[b]-cum[a-1]) : cum[b];
}

inline LL fuck(LL idx) {
    LL ret=0;
    if(arr[idx]<=x) ret += cum[ x-arr[idx] ];
    ret += query(mod-arr[idx], min(mod-1, mod+x-arr[idx]));
    return ret;
}

//inline LL bf() {
//    LL i, j, cnt=0;
//    rep(i, n) {
//        rep(j, n) {
//            if((arr[i]+arr[j])%mod <= x) cnt++;
//        }
//    }
//    return cnt;
//}

int main() {
//    freopen("in.txt","r",stdin);
//    freopen("out.txt","w",stdout);

    LL test, i, ans;

    sdl(test);
    while(test--) {
        ans = 0;
        mem(cum, 0);
        sdlll(n, mod, x);
        rep(i, n) {
            sdl(arr[i]);
            arr[i] %= mod;
            cum[ arr[i] ]++;
        }
        for(i=1; i<mod; i++) cum[i] += cum[i-1];
        rep(i, n) ans += fuck(i);
        pfl(ans);
//        pfl(bf());
    }

    return 0;
}
