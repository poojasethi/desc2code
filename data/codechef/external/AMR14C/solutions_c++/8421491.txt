# include <iostream>
# include <vector>
# include <algorithm>
# include <cstdio>


using namespace std;


long long int calculate (long long int index[],long long int sum[],vector<long long int> & a,long long int output1[],long long int output2[],long long int l,long long int r,long long int k)
{
	long long int i=0,j=k-1;
		while (i-j <= 0){
  			if (a[i] + a[j] >= l)
    		{
    			output1[j] = i;
    			j -= 1;
    		}
  			else
  			{
  				output1[i] = j + 1;
    			i += 1;
  			}
    	}

    	i=0,j=k-1;

    	while (i-j <= 0){
  			if (a[i] + a[j] <= r)
    		{
    			output2[i] = j;
    			i += 1;
    		}
  			else
  			{
  				output2[j] = i - 1;
    			j -= 1;
  			}
    	}

    	/*
    	for (long long int aa=0;aa<k;aa++)
    	{
    		cout << output1[aa]<<" ";
    	}
    	cout<<endl;

    	for (long long int aa=0;aa<k;aa++)
    	{
    		cout << output2[aa]<<" ";
    	}
    	cout<<endl;*/


    	long long int ans =0;
    	for (long long int i=0;i<k;i++)
    	{
    		if (output1[i]>output2[i])
    			continue;
    		if (output1[i]>=k || output1[i] <0 || output2[i]>=k || output2[i] <0 )
    			continue;
    		else
    		{
    			if (output1[i]==0)
    			{
    				ans+= index[i]*sum[output2[i]];
    			}
    			else
    				ans+= index[i]*(sum[output2[i]]-sum[output1[i]-1]);

    		}
    	}
    	return ans;
}

int main ()
{
	long long int t;
	scanf ("%lld",&t);
	while (t--)
	{
		long long int n,m,x;
		scanf ("%lld %lld %lld",&n,&m,&x);
		vector <long long int> mo;
		long long int temp;
		long long int rem[m];
		for (long long int i=0;i<m;i++)
		{
			rem[i]=0;
		}
		for (long long int i=0;i<n;i++)
		{
			scanf ("%lld",&temp);
			mo.push_back(temp%m);
			rem[temp%m]++;
		}
		/*for (long long int i=0;i<m;i++)
			cout<<rem[i]<<" ";
		cout<<endl;*/
		sort (mo.begin(),mo.end());

		vector<long long int> a;

		for (long long int i=0;i<n-1;i++)
		{
			if (mo[i]==mo[i+1])
				continue;
			a.push_back(mo[i]);
		}

		a.push_back(mo[n-1]);

		/*for (long long int i=0;i<a.size();i++)
			cout<<a[i]<<" ";
		cout<<endl;*/

		long long int k = a.size();
		
		long long int output1[k];
		long long int output2[k];
		long long int index[k];
		for (long long int i=0;i<k;i++)
		{
			index[i]=rem[a[i]];
		}

		long long int sum[k];
		long long int temp_sum=0;
		for (long long int i=0;i<k;i++)
		{
			temp_sum+=index[i];
			sum[i]=temp_sum;
		}

		long long int ans=0;

		ans+= calculate(index,sum,a,output1,output2,0,x,k);
		ans+= calculate(index,sum,a,output1,output2,m,m+x,k);

		printf ("%lld\n",ans);

	}
	return 0;
}