#include<bits/stdc++.h>

using namespace std;
 
#define FOR(i,a,b) for(int i=a;i<b;i++)
#define For(i,a,b) for(int i=a-1;i>=0;i--)
#define K 1000000007
#define L 400
#define ll long long
#define s1(a) scanf("%d",&a);
#define s2(a) scanf("%lld",&a);
#define s3(a,b) scanf("%lld%lld",&a,&b);
#define s4(a,b,c) scanf("%lld%lld%lld",&a,&b,&c);
#define pb push_back
#define mp make_pair
#define F first
#define S second 
/*******************************MAIN CODE STARTS*******************************/

ll n,x,m,mod[100010];

int bin_lesse(int low,int high,ll key)
{
	if(low>high)
	{
		//cout<<low<<' '<<high<<'\n';
		if(low==n)
			--low;
		while(mod[low]<key)
		{
			if(low!=n-1)
				++low;
			else
				break;
		}
		while(mod[low]>key)
		{
			if(low!=0)
				--low;
			else
				break;
		}
		if(low==0 && mod[low]>key)
			return -1;
		return low;
	}
	int mid=(high+low)/2;
	if(mod[mid]==key)
	{
		//cout<<mid<<'\n';
		if(mid<n-1)
		{
			while(mod[mid+1]==key)
			{
				++mid;
				if(mid==n-1)
					break;
			}
		}
		//cout<<mid<<'\n';
		return mid;
	}
	else if(mod[mid]>key)
		return bin_lesse(low,mid-1,key);
	else if(mod[mid]<key)
		return bin_lesse(mid+1,high,key);
}

int bin_less(int low,int high,ll key)
{
	if(low>high)
	{
		//cout<<low<<' '<<high<<'\n';
		if(low==n)
			--low;
		while(mod[low]<key)
		{
			if(low!=n-1)
				++low;
			else
				break;
		}
		while(mod[low]>key)
		{
			if(low!=0)
				--low;
			else
				break;
		}
		if(low==0 && mod[low]>key)
			return -1;
		return low;
	}
	int mid=(high+low)/2;
	if(mod[mid]==key)
	{
		//cout<<mid<<'\n';
		if(mid>0)
		{
			while(mod[mid-1]==key)
			{
				--mid;
				if(mid==0)
					break;
			}
		}
		//cout<<mid<<'\n';
		return (mid-1);
	}
	else if(mod[mid]>key)
		return bin_less(low,mid-1,key);
	else if(mod[mid]<key)
		return bin_less(mid+1,high,key);
}

void scan()
{
	cin>>n>>m>>x;
	FOR(i,0,n)
	{
		cin>>mod[i];
		mod[i]=mod[i]%m;
	}
	sort(mod,mod+n);
}

void out()
{
	ll ans=0;
	FOR(i,0,n)
	{
		ll an=bin_lesse(0,n-1,x-mod[i])+1;
		ans+=an;
		an=bin_lesse(0,n-1,m+x-mod[i])+1;
		//cout<<an<<'\n';
		an-=bin_less(0,n-1,m-mod[i])+1;
		ans+=an;
		//an=bin_lesse(0,n-1,m+m+x-mod[i])+1;
		//an-=bin_less(0,n-1,m+m-mod[i])+1;
		//cout<<an<<'\n';
		//ans+=an;
	}
	cout<<ans<<'\n';
}

int main()
{
	int t;
	s1(t)
	while(t--)
	{
		scan();
		out();
	}
	return 0;
}