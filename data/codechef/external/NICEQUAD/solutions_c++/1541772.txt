#include <stdio.h> 
#include <stdlib.h> 
#include <math.h>   
 
 
long long p[4][2][2];
 
void init() {
    int q;
    for(q = 0; q < 4; q++) {
        p[q][0][0] = p[q][0][1] = p[q][1][0] = p[q][1][1] = 0;
    }
}
 
int isvalid(int ax, int ay, int bx, int by, int cx, int cy, int dx, int dy) {
    int area2 = abs(ax*by - bx*ay + bx*cy - cx*by + cx*dy - cy*dx + dx*ay - ax*dy);
    
    return 1 - (area2 % 2);
    //printf("(%d,%d) (%d,%d) (%d,%d) (%d,%d) %d %d %d %d %s\n", ax,ay,bx,by,cx,cy,dx,dy,t1,t2,t3,t4,ret ? "Y" : "N");
}
 
void solve() {
    long long count = 0;
    int ax,ay,bx,by,cx,cy,dx,dy;
    for(ax = 0; ax < 2; ax++) 
    for(bx = 0; bx < 2; bx++) 
    for(cx = 0; cx < 2; cx++) 
    for(dx = 0; dx < 2; dx++) 
    for(ay = 0; ay < 2; ay++) 
    for(by = 0; by < 2; by++) 
    for(cy = 0; cy < 2; cy++) 
    for(dy = 0; dy < 2; dy++)
        if (isvalid(ax,ay,bx,by,cx,cy,dx,dy) == 1) {
            count += (long long)p[0][ax][ay]*p[1][bx][by]*p[2][cx][cy]*p[3][dx][dy];
            if (p[0][ax][ay]*p[1][bx][by]*p[2][cx][cy]*p[3][dx][dy] != 0) {
                //printf("(%d,%d) (%d,%d) (%d,%d) (%d,%d) *** \n", ax,ay,bx,by,cx,cy,dx,dy);
            }
        }
 
    printf("%lld\n", count);
}
 
main() {
 
    int T;
    scanf("%d", &T);
 
    int i,j;
    for(i = 0; i < T; i++) {
 
        init();
        int N, x, y;
        scanf("%d", &N);
 
        for(j = 0; j < N; j++) {
            scanf("%d%d", &x, &y);
            int q;
            if (x == 0 || y == 0)
                continue;
            if (x > 0 && y > 0)
                q = 0;
            if (x > 0 && y < 0)
                q = 1;
            if (x < 0 && y < 0)
                q = 2;
            if (x < 0 && y > 0)
                q = 3;
            p[q][abs(x) % 2][abs(y) % 2]++;
        }
        
        solve();
    }
}