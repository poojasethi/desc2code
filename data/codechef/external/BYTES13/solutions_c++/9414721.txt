#include<bits/stdc++.h>
#define mod 1000000007
#define ll long long
#define big 1000000000000000000
using namespace std;

ll n,q,st[400010],sz;
int lazy[400010];
long long pow2[100],a[100010];

ll query(ll in,ll i,ll j,ll l,ll r){
	if(i>j || j<l || i>r)
		return 0;
	if(lazy[in] != -1){
		st[in] = (j-i+1)*lazy[in];
		if(i != j){
			lazy[2*in+1] = lazy[in];
			lazy[2*in+2] = lazy[in];
		}
		lazy[in] = -1;
	}
	if(i>=l && j<=r)
		return st[in];
	ll mid = (i+j)/2;
	ll temp1 = query(2*in+1,i,mid,l,r);
	ll temp2 = query(2*in+2,mid+1,j,l,r);
	
	return temp1+temp2;
}
void update(ll in,ll i,ll j,ll l,ll r,bool x){
	if(lazy[in] != -1){
		st[in] = (j-i+1)*lazy[in];
		if(i != j){
			lazy[2*in+1] = lazy[in];
			lazy[2*in+2] = lazy[in];
		}
		lazy[in] = -1;
	}
	if(i>j || j<l || i>r)
		return;
	if(i>=l && j<=r){
		st[in] = (j-i+1)*x;
		if(i != j){
			lazy[2*in+1] = x;
			lazy[2*in+2] = x;
		}
		return;
	}
	ll mid = (i+j)/2;
	update(2*in+1,i,mid,l,r,x);
	update(2*in+2,mid+1,j,l,r,x);
	st[in] = st[2*in+1]+st[2*in+2];
}
void build(ll in=0,ll i=0,ll j=n-1){
	if(i>j)
		return;
	lazy[in] = -1;
	if(i == j){
		if(binary_search(pow2,pow2+sz,a[i]))
			st[in] = 1;
		else
			st[in] = 0;
		return;
	}
	ll mid = (i+j)/2;
	build(2*in+1,i,mid);
	build(2*in+2,mid+1,j);
	st[in] = st[2*in+1]+st[2*in+2];
}
int main(){
//	freopen("input.txt","r",stdin);
//	ios::sync_with_stdio(0);
	
	ll i,l,r,j;
	int op;
	long long x;
	
	pow2[0] = 1;
	i = 0;
	while((pow2[i]*2)/pow2[i] == 2){
		i++;
		pow2[i] = pow2[i-1]*2;
	}
	sz = i+1;
	scanf("%lld%lld",&n,&q);
	for(i=0;i<n;i++)
		scanf("%lld",&a[i]);
	build();/*
	for(i=0;i<2*n;i++)
		cout<<st[i]<<" ";
	cout<<"\n";*/
	
	while(q--){
		scanf("%d",&op);
		if(op){
			scanf("%lld%lld",&l,&r);
			printf("%lld\n",query(0,0,n-1,l,r));
		}
		else{
			scanf("%lld%lld%lld",&l,&r,&x);
			update(0,0,n-1,l,r,binary_search(pow2,pow2+sz,x));
		}
	}
	return 0;
}
