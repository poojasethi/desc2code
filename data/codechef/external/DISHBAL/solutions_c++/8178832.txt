#include<iostream>
using namespace std;
#define mod 1000000007
#include<bits/stdc++.h>
int visited[1000000];
list<int> li[10000000];
  char arr[1000000+100];
  
  
int dfs(int start)
 {
 
 	
 	stack<int> s;
 	int c=0;
 	s.push(start);
 	char fill=arr[start];
 	while(! s.empty())
 	 {
 	 	 int start=s.top();
 	 	 if(arr[start]!='?')
		    {
		    	 c=1;
		  
			 }
 	 	 s.pop();
 	 	 
 	 	 list<int>:: iterator it;
 	 	 
 	 	 for(it=li[start].begin();it!=li[start].end();it++) 
 	 	  {
 	 	  	 
 	 	   if(!visited[*it])
 	 	  	  {
 	 	  	  	visited[*it]=1;
 	 	  	  	if(fill=='?') fill=arr[*it];
 	 	  	  	else if(arr[*it]!='?' && fill!=arr[*it]) return -1;
 	 	  	  	s.push(*it);
				  }

          			}
	  }

	  return c;
 }
 
 
 
int main()
 {
 	  int n,m;
 	   cin>>n>>m;
       vector<pair<int,int> >v;
 	    cin>>arr;
 	    int q;
 	     cin>>q;
 	     int c=0;
 	     int f=0;
 	     for(int i=0;i<q;i++)
 	      {
 	      	int a,b;
 	      	 cin>>a>>b;
 	      	 a-=1;
 	      	 b-=1;
 	      	 li[a].push_back(b);
 	      	 	 li[b].push_back(a);
 	      	 	 
 	      	  if(arr[a]=='?' && arr[b]!='?') arr[a]=arr[b];
 	      	 else if(arr[b]=='?' && arr[a]!='?') arr[b]=arr[a];
 	      	 else if(arr[a]!=arr[b] && arr[a]!='?')
 	      	  {
 	      	  	f=1;
				 }
	
		
				 
	}
	  
	  
	  
	long long int  ans=1;
	
	
for(int i=0;i<n;i++)
	 {
	 	if(!visited[i])
	 	 {
	 	 	visited[i]=1;
	 	 int j=	dfs(i);
	 	 if(j==0)
	 	  {
	 	  	ans=(ans*m)%mod;
		   }
		   else if(j==-1)
		    {
		    	 f=1;
		    	 break;
			}
		  }
	 }

	if(f==1)
	{
		 cout<<"-1"<<endl;
 	      	  	  exit(0);
	}

	

		 cout<<ans<<endl;
 }