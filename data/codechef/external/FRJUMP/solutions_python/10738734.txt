import math
n = int(raw_input())
friendliness = map(int, raw_input().split())
logSum = [0]
prodSum = [0]
d = [[] for i in range(n)]
for r in range(1, n+1):
	l = 0
	p = 1
	for j in range(r,n, r):
		l += math.log10(friendliness[j])
		p  = (p*friendliness[j])%(10**9 + 7)
		d[j].append(r)

	logSum.append(l)
	prodSum.append(p)
# print logSum
# print prodSum
# print d
q = int(raw_input())
for t in range(q):
	query = map(int, raw_input().split())

	if query[0] == 2:
		x = logSum[query[1]] + math.log10(friendliness[0]) - math.floor(logSum[query[1]] + math.log10(friendliness[0]))
		s = str(math.pow(10,x))
		# print 's =', s
		answer = (prodSum[query[1]]*friendliness[0])%(10**9 + 7)
		
		print s[0],answer
	
	else:
		r = query[1]
		if r == 1:
			friendliness[0] = query[2]
		else:
			temp = pow(friendliness[r-1], 10**9 + 7 - 2, 10**9 + 7)
			# print 'inverse', temp
			for j in d[r-1]:
				prodSum[j] = (prodSum[j]*query[2]*temp)%(10**9+7)
				logSum[j] += math.log10(query[2]) - math.log10(friendliness[r-1])
				
			# print 'updated values'
			# print prodSum
			# print logSum
			friendliness[r-1] = query[2]
			# print friendliness