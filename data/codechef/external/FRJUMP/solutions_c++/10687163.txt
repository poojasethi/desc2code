#include <cstdio>
#include <cstdlib>
#include <cmath>

using namespace std;

#define N 100010
#define K 320
#define MOD 1000000007
typedef long long LL;

int a[N], ans_mod[K], effect[N][K];
double ans_fir[K];
int n, m, k;

int pw(int a, int b) {
	int ans = 1;
	for (int i = b; i; i >>= 1) {
		if (i & 1) ans = (LL) ans * a % MOD;
		a = (LL) a * a % MOD;
	}
	return ans;
}

int main() {
	scanf("%d", &n); 
	k = sqrt(n);
	for (int i = 1; i <= n; i++) scanf("%d", &a[i]);
	for (int p = 1; p <= k; p++) {
		ans_mod[p] = 1; 
		ans_fir[p] = 0;
		for (int j = 1; j <= n; j += p) {
			ans_mod[p] = (LL) ans_mod[p] * a[j] % MOD;
			ans_fir[p] += log10(a[j]);
			effect[j][++effect[j][0]] = p;
		}
	}
	
	scanf("%d", &m);
	for (int i = 1; i <= m; i++) {
		int type;
		scanf("%d", &type);
		if (type == 1) {
			int u, t, inv;
			scanf("%d%d", &u, &t);
			inv = pw(a[u], MOD - 2);
			inv = (LL) inv * t % MOD;
			double tmp =  log10(t) -  log10(a[u]); 
			a[u] = t;
			for (int j = 1; j <= effect[u][0]; j++) {
				int p = effect[u][j];
				ans_mod[p] = (LL) ans_mod[p] * inv % MOD;
				ans_fir[p] += tmp;
			}
		}
		else if (type == 2) {
			int p, opt, fir;
			scanf("%d", &p);
			int ansmod = 1;
			double ansfir = 0;
			if (p <= k) ansmod = ans_mod[p], ansfir = ans_fir[p];
			else {
				for (int i = 1; i <= n; i += p) {
					ansmod = (LL) ansmod * a[i] % MOD;
					ansfir += log10(a[i]);
				}
			}
			ansfir = ansfir - floor(ansfir);
			fir = pow(10, ansfir) + 0.0000001;
			printf("%d %d\n", fir, ansmod);
		}
	}
	return 0;
}