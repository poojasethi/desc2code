#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
#include <iostream>

#define FOR(a,b,c) for(int a=(int)(b);a<=(int)(c);a++)

using namespace std;

long long mod=100000007;
int n,k,m,q;
int visit[110];
vector<int> adj[110];

long long modexp(long long a, int x)
{
	long long rv = 1, p = a;
	
	while(x)
	{
		if(x&1) rv = (rv * p) % mod;
		p = (p * p) % mod;
		x>>=1;
	}
	
	return rv; 
}

int dfs(int u, int &x)
{
	visit[u] = 1;
	x++;
	
	FOR(i,0,(int)adj[u].size()-1)
	{
		int v = adj[u][i];
		if(visit[v]) continue;
		dfs(v,x);
	}
	
	return 0;
}

long long solve()
{
	long long rv = 1;
	int x;
	
	memset(visit,0,sizeof(visit));
	
	FOR(i,0,n-1)
	{
		if(visit[i]) continue;
		x=0;
		dfs(i,x);
		rv *= (k*modexp(k-1,x-1))%mod;
		rv %= mod;
	}

	return rv; 
}


int main()
{
	int test = 0;
	
	//freopen("ip.txt","r",stdin);
	
	scanf("%d",&test);
	
	while(test--)
	{
		scanf("%d%d%d",&n,&m,&q);
		
		FOR(i,0,n-1) adj[i].clear();
		
		int a,b;
		FOR(i,1,m)
		{
			scanf("%d%d",&a,&b);
			adj[a].push_back(b);
			adj[b].push_back(a);
		}
		
		int type;
		FOR(i,1,q)
		{
			scanf("%d",&type);
			if(type == 0)
			{
				scanf("%d%d",&a,&b);
				adj[a].push_back(b);
				adj[b].push_back(a);
			}
			else if (type == 1)
			{
				scanf("%d%d",&a,&b);
				
				adj[a].erase( find(adj[a].begin(), adj[a].end(), b ) );
				adj[b].erase( find(adj[b].begin(), adj[b].end(), a ) );
			}
			else
			{
				k = type;			
				printf("%lld\n",solve());
			}
		}
		
	}
	
	return 0;
}

