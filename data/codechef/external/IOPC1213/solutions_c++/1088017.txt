#include<iostream>
#include<cstdio>
#include<cstring>

using namespace std;

typedef long long int LL;

int N , M , Q;
LL K;

int adjMat[105][105];
int visited[105];
int isConnected;

const LL mod = 100000007LL;

void dfs(int u , int target) {
        visited[u] = true;
        if (u == target) {
                isConnected = true;
                return;
        }
        for (int i = 0; i < N ;i ++) {
                if (adjMat[u][i] == 1 && !visited[i]) 
                        dfs(i,target);
        }
}

void DFS(int u) {
        visited[u] = true;
        for (int i = 0; i < N; i++) 
                if (!visited[i] && adjMat[u][i] == 1)
                        DFS(i);
}

int main() {
        int T;
        scanf("%d",&T);
        while (T--) {
                memset(adjMat,0,sizeof(adjMat));
                memset(visited,0,sizeof(visited));                
                        
                scanf("%d%d%d",&N,&M,&Q);
                for (int i = 0; i < M; i++) {
                        int t1 , t2;
                        scanf("%d%d",&t1,&t2);
                        adjMat[t1][t2] = 1;
                        adjMat[t2][t1] = 1;
                }
                
                int C = 0;
                
                for (int i = 0 ; i < N ; i++) {
                        if (!visited[i]) {
                                DFS(i);
                                C++;
                        }
                }
                                
                while (Q--) {
                        isConnected = false;
                        scanf("%lld",&K);
                        if (K == 0 ) {
                                int a , b; 
                                scanf("%d%d",&a,&b);
                                memset(visited,0,sizeof(visited));
                                dfs(a,b);
                                if (isConnected) {
                                        adjMat[a][b] = 1;
                                        adjMat[b][a] = 1;                  
                                } else {
                                        C --;
                                        adjMat[a][b] = 1;
                                        adjMat[b][a] = 1;
                                }
                        } else if (K == 1) {
                                int a , b; 
                                scanf("%d%d",&a,&b);
                                memset(visited,0,sizeof(visited));
                                dfs(a,b);
                                if (isConnected) {
                                        adjMat[a][b] = 0;
                                        adjMat[b][a] = 0;
                                        isConnected = false;
                                        memset(visited,0,sizeof(visited));
                                        dfs(a,b);
                                        if (!isConnected) C++;
                                }                  
                        } else {
                                LL ans = 1;
                                for (int i = 0; i < C ; i++) {
                                        ans *= K;
                                        if (ans >= mod)
                                                ans %= mod;
                                }
                                for (int i = 0;i < N - C; i++) {
                                        ans *= (K - 1);
                                        if (ans >= mod)
                                                 ans %= mod;
                                }
                                printf("%lld\n", ans);
                        }
                }        
        }       
        return 0;
}