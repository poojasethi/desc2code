/* 
 * File:   IOPC1213.cpp
 * Author: anuraganand
 * Created on 28 February, 2014, 4:04 PM
 */

#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <iostream>
#include <string>
#include <vector>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <list>
#include <utility>
#include <algorithm>
#include <cassert>

using namespace std;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef unsigned long long ull;
typedef pair<int, int> pii;
typedef long long ll;
typedef vector<int> vi;
typedef long double ld;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0;(i) < (n);  ++i)
#define rept(i,a,b) for(var(i,a); i < (b); ++i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
#define fill(a,val) memset(a,val,sizeof(a))
//#define gi(n) scanf("%d",&n);
#define all(v) v.begin(),v.end()

const int mod = 100000007;

void gi(int &n) {
    n = 0;
    char ch = getchar();
    while(ch < '0' || ch > '9') ch = getchar();
    while(ch >= '0' && ch <= '9') n = (n << 3) + (n << 1) + ch - '0', ch = getchar();   
}

ll power(ll x, ll n) {
    ll ret = 1LL;
    while(n) {
        if(n & 1) ret = (ret * x) % mod;
        x = (x * x) % mod;
        n >>= 1;
    }
    return ret;
}

const int N = 101;

int main(int argc, char** argv) {
#ifdef LOCAL
    freopen("in.txt", "r", stdin);
#endif
    int tt; gi(tt);
    while(tt--) {
        int n, m, q;
        gi(n); gi(m); gi(q);
        int ncmp = n;
        rep(i, m) {
            int u, v;
            gi(u); gi(v);
            ncmp--;
        }
        while(q--) {
            int type;
            gi(type);
            if(type == 0) {
                int u, v;
                gi(u); gi(v);
                ncmp--;
            } else if(type == 1) {
                int u, v;
                gi(u); gi(v);
                ncmp++;
            } else {
                ll a = power(type, ncmp);
                ll b = power(type - 1, n - ncmp);
                ll ans = (a * b) % mod;
                printf("%lld\n", ans);
            }
        }
    }
    return 0;
}

