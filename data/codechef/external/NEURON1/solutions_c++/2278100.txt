#include <stdio.h>
#include <iostream>
typedef long long ll;
using namespace std;
const int mod=10000007;
int n,m,q;

char buf[21];int ix;
int putchar_unlocked(char ch) { return putchar(ch);  }
inline void writeL(int x) {
     ix = 20;
     buf[20] = '\n';
     do 
     {
        buf[--ix] = (x % 10) + '0';
        x/= 10;
     }while(x);
     do
     {
        putchar_unlocked(buf[ix]);
     } while (buf[ix++] != '\n');
}
 
int getchar_unlocked()  {return getchar();}
inline void Read(int &x) {
	register int c= getchar_unlocked();
	x = 0;
	for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
	for(; c>47 && c<58 ; c = getchar_unlocked()) {
		x = (x<<1) + (x<<3) + c - 48;
	}
}

struct node
{
int sum,type;
} arr[500009];


void  update(int node,int type,int px,int py,int qx,int qy,int xx,int yy,int upd)
{
if(px==qx and py==qy and px==xx and py==yy)
{
arr[node].sum=upd;
return;
}
int left,mid,right;
	left=node<<1;
	right=left+1;
if(type==1){
	mid=(px+qx)/2;
	if(xx<=mid)
	update(left,0,px,py,mid,qy,xx,yy,upd);
	else
	update(right,0,mid+1,py,qx,qy,xx,yy,upd);
	
}else{
	mid=(py+qy)/2;
	if(yy<=mid)
	update(left,1,px,py,qx,mid,xx,yy,upd);
	else
	update(right,1,px,mid+1,qx,qy,xx,yy,upd);
}
arr[node].sum=arr[left].sum+arr[right].sum;

}
 
int query(int node,int type,int px,int py,int qx,int qy,int x1,int y1,int x2,int y2){
	
if(px==x1 and py==y1 and qx==x2 and qy==y2)
{
return arr[node].sum;
}
int left,mid,right;
	left=node<<1;
	right=left+1;
if(type==1){
	mid=(px+qx)/2;
	if(x2<=mid)
	return query(left,0,px,py,mid,qy,x1,y1,x2,y2);
	else if(x1>mid)
	return query(right,0,mid+1,py,qx,qy,x1,y1,x2,y2);
	else return query(left,0,px,py,mid,qy,x1,y1,mid,y2) + query(right,0,mid+1,py,qx,qy,mid+1,y1,x2,y2);
}else{
	mid=(py+qy)/2;
	if(y2<=mid)
	return query(left,1,px,py,qx,mid,x1,y1,x2,y2);
	else if(y1>mid)
	return query(right,1,px,mid+1,qx,qy,x1,y1,x2,y2);
	else return query(left,1,px,py,qx,mid,x1,y1,x2,mid) + query(right,1,px,mid+1,qx,qy,x1,mid+1,x2,y2);
}
}
 
 
int main(){
	int i,j,k,ii;
	Read(n); Read(m);
	for(i=0;i<n;i++) for(j=0;j<m;j++){Read(ii); update(1,1,0,0,n-1,m-1,i,j,ii); }
	Read(q);
	while(q--){
		int px,py,qx,qy;
		Read(px);Read(py);Read(qx);Read(qy);
		writeL(query(1,1,0,0,n-1,m-1,px-1,py-1,qx-1,qy-1) );
	}
	return 0;
}
