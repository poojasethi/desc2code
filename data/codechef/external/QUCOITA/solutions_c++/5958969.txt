#include<bits/stdc++.h>
using namespace std ;
int subsum[10006] , a[10006] , n  , dp[105][10006];

void subsetsum()
{
  memset( subsum , 0 , sizeof(subsum)) ;
  memset ( dp , 0 , sizeof(dp)) ;
  subsum[0] = 1 ;
  for( int i = 1 ; i <= n ; i++)
  for( int j = 10005 ; j>=a[i]; j--)
    if(subsum[j-a[i]])
        subsum[j]=1;


dp[0][0] = 1 ;

 for( int i = 1; i <= n ; i++)
    dp[i][0] = 1 ;

 for( int i = 1 ; i <= n ; i++)
 {
     for ( int j = 0  ; j <= 10005 ; j++)
     dp[i][j] = dp[i-1][j] ;

    for ( int j = a[i] ; j <= 10005 ; j++ )
    {

        if ( dp[i-1][j-a[i]] == 1 )
        dp[i][j] =  1  ;
    }
 }

}

int main()
{
     int t ,  c , sum  , ans = 0 ;
     int s1 , s2 ;
     vector < int > first , second ;
     vector < int > answer  , ans2 ;
     cin >> t ;

    while(t--)
    {
        sum = 0 ;
        ans = 1 ;
        first.clear();
        second.clear() ;

        cin >> n >> c ;

        a[0] = -2 ;

        for ( int i = 1 ; i <= n ; i++)
            {
                cin >> a[i] ;
                sum = sum + a[i] ;
            }

           sort ( a + 1, a  + n + 1  ) ;

           reverse ( a + 1 , a + n + 1 ) ;

           // for ( int i = 1; i <= n ; i++)
             //   cout << a[i] << " " ;

            if ( sum > ( 2 * c ) )
            {
                ans = 0 ;
            }

if ( sum <= c )
{
    cout << "YES\n\n" ;
    for ( int i = n ; i  >= 1 ; i--)
    {
        cout << a[i] << " ";
    }
    continue ;
}


          if( ans )
         {
             subsetsum() ;


          s1 = 100000 ;


answer.clear() ;
ans2.clear() ;
answer.push_back(105) ;

         for ( int k = c ; k > -1 ; k--)
         {
             if ( ( subsum[k] == 1 ))
             {
                 if ( ( ( sum - k ) <= c ) && (( sum - c ) >= 0 ) )
                 {

                     first.clear() ;
                     second.clear() ;
                 s1 = k ;
                 s2 = sum - k ;

//cout << " s1 is " << s1 << " s2 is " << s2 << endl ;

for ( int i = n ; i >=  1 ; i--)
           {
               if ( s1 == 0 )
               {
                 second.push_back(a[i]) ;
                   continue ;
               }

             if ( ( s1 - a[i] ) > -1 )
             {
                 //cout << " s1 is here is  " << s1 << endl ;
                 if ( ( dp[i-1][ s1 - a[i] ] ) )
                {

                    first.push_back(a[i]) ;
                    s1 = s1 - a[i] ;

                   // cout << " i is " << i << " ans s1 is " << s1 << endl ;

                }
                else
                    second.push_back(a[i]) ;
             }

             else
             {
                 second.push_back(a[i]) ;
             }

           }

/*cout << " dfg \n" ;
for ( int i = 0 ; i < first.size() ; i++)
{
    cout << first[i] << " "  ;
}
cout << endl ;

*/

if ( answer > first)
    {
        answer = first ;
        ans2 = second ;
    }













               //  cout << " s1 is " << s1 << " s2 is " << s2 << endl ;
                 }
             }
         }
         }


         if ( ( s1 > c ) || ( s2 > c ) )
          ans = 0 ;

         if ( ( s1 < 0 ) || ( s2 < 0 ) )
         ans = 0;


  /*
          if ( ans )
          {

           for ( int i = n ; i >=  1 ; i--)
           {
               if ( s1 == 0 )
               {
                   second.push_back(i) ;
                   continue ;
               }

             if ( ( s1 - a[i] ) > -1 )
             {
                 //cout << " s1 is here is  " << s1 << endl ;
                 if ( ( dp[i-1][ s1 - a[i] ] ) )
                {

                    first.push_back(i) ;
                    s1 = s1 - a[i] ;

                   // cout << " i is " << i << " ans s1 is " << s1 << endl ;

                }
                else
                    second.push_back(i) ;
             }

             else
             {
                 second.push_back(i) ;
             }

           }

            }

*/

         if ( ans == 0 )
            cout << "NO\n" ;


         else
         {
             cout << "YES\n" ;



             for ( int i = 0 ; i < answer.size() ; i++)
             {
                 cout << answer[i] << " " ;
             }
             cout << endl ;
             for ( int i = 0 ; i < ans2.size() ; i++)
             {
                 cout << ans2[i]<< " " ;
             }
             cout << endl ;

         }
}

return 0 ;

}
