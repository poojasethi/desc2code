#include <bits/stdc++.h>
using namespace std;
long long seg[1000000];
int arr[1000000];
void buildtree(int low,int high, int pos)
{
	if(low==high)
	{
		seg[pos]=arr[low];
		return;
	}
	int mid=(low+high)/2;
	buildtree(low,mid,(2*pos)+1);
	buildtree(mid+1,high,(2*pos)+2);
	seg[pos]=seg[(2*pos)+1]+seg[(2*pos)+2];
}
long long query(int qlow,int qhigh, int low, int high, int pos)
{
	if((qlow<=low)&&(high<=qhigh))
	return seg[pos];
	if((high<qlow)||(qhigh<low))
	return 0;
	else
	{
		int mid=(low+high)/2;
		return query(qlow,qhigh,low,mid,(2*pos)+1)+query(qlow,qhigh,mid+1,high,(2*pos)+2);
	}
}
int main()
{
	int n,q; long long sum=0;
	scanf("%d",&n);
	scanf("%d",&q);
	for(int i=0; i<n; i++)
	{
		scanf("%d",&arr[i]);
		sum=sum+arr[i];
	}
	buildtree(0,n-1,0);
	for(int i=1; i<=q; i++)
	{
		int qlow,qhigh;
		scanf("%d",&qlow);
		scanf("%d",&qhigh);
		qlow--; qhigh--;
		long long t=sum-query(qlow,qhigh,0,n-1,0);
		cout<<t<<endl;
	}
	return 0;
}