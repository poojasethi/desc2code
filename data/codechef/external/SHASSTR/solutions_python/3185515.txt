/*	Template by
	Ashwin Kumar
	IIT Delhi */
#include<algorithm>
#include<iostream>
#include<cassert>
#include<cmath>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<sstream>
#include<string>
#include<ctime>
#include<deque>
#include<map>
#include<queue>
#include<set>
#include<stack>
#include<vector>	
using namespace std;

typedef pair<int, int> pii;
typedef long long LL;
#define MOD 1000000007
#define INF 1000000000

char str1[5001];
char str2[5001];
int N1, N2;
int dp[5001][5001][2][2];
int K;

int main() {
	int T;
	scanf("%d", &T);
	for (int t = 0; t < T; t++) {
		scanf("%d %d %d", &N1, &N2, &K);
		gets(str1);
		gets(str1);
		gets(str2);
		if (K > N1 || K > N2) {
			printf("-1\n");
			continue;
		}
		dp[N1][N2][1][1] = 0;
		dp[N1][N2][0][1] = -INF;
		dp[N1][N2][1][0] = -INF;
		dp[N1][N2][0][0] = -INF;
		for (int j = 0; j < N2; j++)
			for (int s1 = 0; s1 < 2; s1++)
				for (int s2 = 0; s2 < 2; s2++) {
					int &ans = dp[N1][j][s1][s2];
					if (s1 == 0)
						ans = -INF;
					else
						ans = ((s2 == 1 || N2-j >= K) ? 0 : -INF);
				}
		for (int i = 0; i < N1; i++)
			for (int s1 = 0; s1 < 2; s1++)
				for (int s2 = 0; s2 < 2; s2++) {
					int &ans = dp[i][N2][s1][s2];
					if (s2 == 0)
						ans = -INF;
					else
						ans = ((s1 == 1 || N1-i >= K) ? 0 : -INF);
				}
		for (int i = N1-1; i >= 0; i--) {
			for (int j = N2-1; j >= 0; j--) {
				for (int s1 = 0; s1 < 2; s1++) {
					for (int s2 = 0; s2 < 2; s2++) {
						int &ans = dp[i][j][s1][s2];
						ans = -INF;
						if (str1[i] == str2[j])
							ans = max(ans, 1+dp[i+1][j+1][s1][s2]);
						ans = max(ans, dp[i+1][j][s1][s2]);
						ans = max(ans, dp[i][j+1][s1][s2]);
						if (!s1 && i+K <= N1)
							ans = max(ans, dp[i+K][j][1][s2]);
						if (!s2 && j+K <= N2)
							ans = max(ans, dp[i][j+K][s1][1]);
					}
				}
			}
		}
		if (K != 0)
			printf("%d\n", dp[0][0][0][0]);
		else
			printf("%d\n", dp[0][0][1][1]);
	}
	return 0;
}
