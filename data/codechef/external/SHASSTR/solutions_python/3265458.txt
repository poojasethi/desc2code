#include<iostream>
#include<cstdio>
#include<algorithm>
#include<memory.h>
#include<vector>
#include<stack>
#include<queue>
#include<cassert>
#include<cstdlib>
#include<cmath>
#include<map>
#include<utility>
#include<cstring>

#define DEBUG(x) cout<<#x<<"= "<<x<<endl
#define DEBUGARR(x,i,f) for(int iter = i; iter <= f; ++iter) printf("%s[%d]=%d\n",#x, iter, x[iter])
#define MAX(a,b) ((a)>(b))? (a):(b)
#define MAX3(a,b,c) MAX(a,MAX(b,c))
#define MIN(a,b) ((a)<(b))? (a):(b)
#define MIN3(a,b,c) MIN(a,MIN(b,c))
#define bit(n,i) (n&(1<<(i-1)))
#define setbit(n,i) n |= (1<<(i-1))
#define inf (1<<30)
#define SETZERO(x) memset( x, 0, sizeof(x))
#define SETMIN1(x) memset( x, -1, sizeof(x))
#define CLEAR(x) while(!x.empty()) x.pop();
#define FOR(i,in,fin) for( i = (in); i <= (fin); ++i)
#define FORD(i,in,fin) for( i = (in); i >= (fin); --i)

using namespace std;
int n1,n2,k;
char s1[5001],s2[5001];
int dp[5001][5001][2][2];
int main()
{
    #ifndef ONLINE_JUDGE
        freopen( "a.in", "r", stdin);
    #endif
    int t;
    scanf("%d",&t);
    while(t--)
    {
        scanf("%d%d%d%s%s",&n1,&n2,&k,s1,s2);
        //DEBUG(min(n1,n2));
        //DEBUG(k);
        if(k>min(n1,n2)){
            printf("-1\n");
            continue;
        }
        SETZERO(dp);
        int i1,i2,f1,f2;
        FORD(i1,n1-1,0)
        FORD(i2,n2-1,0)
        FOR(f1,0,1)
        FOR(f2,0,1)
        {
            int &x = dp[i1][i2][f1][f2];
            if(s1[i1]==s2[i2]){
            if( (f1||i1+1<=n1-k) && (f2||i2+1<=n2-k)){
                x = max(x,1+dp[i1+1][i2+1][f1][f2]);
            }
            }
            else{
                if(f1||i1+1<=n1-k)
                    x = max(x,dp[i1+1][i2][f1][f2]);
                if(f2||i2+1<=n2-k)
                    x = max(x,dp[i1][i2+1][f1][f2]);
            }
            if(!f1 && i1+k <= n1)
                x = max(x,dp[i1+k][i2][1][f2]);
            if(!f2 && i2+k <= n2)
                x = max(x,dp[i1][i2+k][f1][1]);
        }
        printf("%d\n",dp[0][0][0][0]);
    }
}
