#include<bits/stdc++.h>
using namespace std;
typedef long long int lli;
#define pii pair<lli,lli>
#define mp(x,y) make_pair(x,y)
#define pii2 pair<lli,pii >
const int lim=2e4+5;
vector<pii >g[lim];
int vis1[lim],vis2[lim];


lli dis[lim],len[lim];
lli prim(lli n,lli m);
lli dijkstra(lli n);
int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int t;
    //cout<<lim<<endl;
    scanf("%d",&t);
    while(t--)
    {
        lli n,m,x,y,z;
        scanf("%lld%lld",&n,&m);

        for(int i=0;i<m;++i)
        {
            scanf("%lld%lld%lld",&x,&y,&z);
            g[x].push_back(mp(y,z));
            g[y].push_back(mp(x,z));
        }
        for(int i=0;i<n+2;++i)
            {
                dis[i]=1e17;
            }
        lli c=prim(n,m);
        //cout<<c<<endl;


            for(int i=0;i<n+2;++i)
            {
                dis[i]=1e17;
                len[i]=1e17;
            }
            lli d=dijkstra(n);
            //cout<<d<<endl;
            if(c == d && c != -1) printf("YES\n");
		else printf("NO\n");

        if(t)
        {
            for(int i=0;i<n+2;++i)
            {
                vis1[i]=vis2[i]=0;
                g[i].clear();
            }
        }

    }



    return 0;
}
lli prim(lli n,lli m)
{
    priority_queue<pii,vector<pii >,greater<pii> >q;
    lli p=0;dis[0]=0;//vis1[0]=0;
    long long int cost=0,temp;
    /*for(int i=0;i<g[0].size();++i)
    {
        pii x=g[0][i];
        q.push(mp(x.second,x.first));
        dis[x.first]=x.second;
    }*/
    q.push(mp(0,0));
    while(!q.empty())
    {
        pii x=q.top();
        q.pop();
        if(!vis1[x.second])
        {
            ++p;
            vis1[x.second]=1;
            temp=x.first;
           // cost+=temp;
            lli u=x.second;
            for(int i=0;i<g[u].size();++i)
            {
                pii v=g[u][i];
                if(!vis1[v.first]&&v.second<dis[v.first])
                {
                    dis[v.first]=v.second;
                    q.push(mp(v.second,v.first));
                }
            }
        }
    }
    for(int i=1;i<n;++i)
    {
        if(dis[i]!=1e17)
        {
            cost+=dis[i];
        }
        else
        {
            //cout<<i<<" I"<<endl;
            return -1;
        }
    }
     return cost;
}
lli dijkstra(lli n)
{
    priority_queue<pii2,vector<pii2 >,greater<pii2 > >q;
    lli cost=0,temp;
    dis[0]=0;len[0]=0;
    q.push(mp(dis[0],mp(0,0)));//dis[u],weight of(u,v),vertex no
    while(!q.empty())
    {
        pii2 x=q.top();q.pop();
        int u=x.second.second;
        if(!vis2[u])
        {

            //cost+=x.second.first;
            vis2[u]=1;

            for(int i=0;i<g[u].size();++i)
            {
                lli w=g[u][i].second;
                lli v=g[u][i].first;
                temp=w+dis[u];

                if(!vis2[v]&&(temp<dis[v]||(temp==dis[v]&&w<len[v])))
                {
                    dis[v]=temp;
                    len[v]=w;
                    q.push(mp(dis[v],mp(len[v],v)));
                }


            }


        }

    }
    for(int i=1;i<n;++i)
    {
        if(len[i]!=1e17)
        {
            cost+=len[i];
        }
        else
        {
            return -1;
        }

    }
    return cost;
}
