#include <iostream>
#include <cstring>
#include <vector>
#include <algorithm>
#include <cmath>
#include <queue>
#include <map>
#include <cstdio>

using namespace std;

#define forl(i,l,r) for(int i=(l); i<(r); i++)
#define forn(i,n) forl(i,0,n)
#define clr(a) memset(a, 0, sizeof(a))
#define pb push_back
typedef long long ll;
typedef pair<int, int > ii;
typedef pair<ll, pair<int, int> > iii;
const int maxn=20000+11;
const int maxm=2*maxn;
const int maxw=1000*1000*1000+11;
const ll maxd= ll(maxw)*maxn;
bool vis[maxn];
ll dist[maxn];
vector<ii> adj[maxn];

ll Prims(int n){
	priority_queue<ii, vector<ii>, greater<ii> > pq;
	memset(vis, 0, n*sizeof(bool));
	forn(i, n)
		dist[i]=maxw;
	dist[0]=0;
	pq.push(ii(0, 0));
	while(!pq.empty()){
		int u=pq.top().second; pq.pop();
		if(vis[u])
			continue;
		forn(i, adj[u].size()){
			int v=adj[u][i].first;
			int w=adj[u][i].second;
			if(!vis[v] && dist[v]>w){
				dist[v]=w;
				pq.push(ii(w, v));
			}
		}
		vis[u]=true;
	}
	ll ans=0;
	forl(i, 1, n)
		if(dist[i]==maxw) return -1;
		else ans+=dist[i];
	return ans;
}

int len[maxn];
ll dijskart(int n){
	priority_queue<iii, vector<iii>, greater<iii> > pq;
	memset(vis,0, n*sizeof(bool));
	forn(i, n)
		dist[i]=maxd, len[i]=maxw;
	dist[0]=0, len[0]=0;
	pq.push(iii(0,ii(0,0)));
	while(!pq.empty()){
		iii tp=pq.top(); pq.pop();
		int u=tp.second.second; 
		if(vis[u])
			continue;
		forn(i, adj[u].size()){
			int v=adj[u][i].first;
			int w=adj[u][i].second;
			if(!vis[v] && (dist[u]+w < dist[v] || (dist[u]+w == dist[v] && len[v]>w ))){
				len[v]=w;
				dist[v]=dist[u]+w;
				pq.push(iii(dist[v], ii(len[v], v)));
			}
		}
		vis[u]=true;
	}
	ll ans=0;
	forl(i, 1, n)
		if(dist[i]==maxd) return -1;
		else ans+=len[i];
	return ans;
}

int main(){
	std::ios_base::sync_with_stdio(false);cin.clear();
	int t;
	cin>>t;
	while(t--){
		int n,m;
		cin>>n>>m;
		forn(i, n)
			adj[i].clear();//<=n
		forn(i, m){
			int u,v,w;
			cin>>u>>v>>w;
			adj[u].pb(ii(v, w));
			adj[v].pb(ii(u, w));
		}
		ll msw=Prims(n);
		ll djw=dijskart(n);
		//cerr<<msw<<" "<<djw;
		if(msw==djw && msw!=-1)
			cout<<"YES";
		else
			cout<<"NO";
		cout<<endl;
	}
}