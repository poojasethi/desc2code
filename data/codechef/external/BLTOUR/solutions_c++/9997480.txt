#include <bits/stdc++.h>
#define ll long long int
#define MAX 100005
#define EPS 1e-9
#define MOD 1000000007
#define vint vector <int>
#define vpint vector <pair<int,int> >
#define pb push_back
#define gc() getchar_unlocked()
#define ms(x,v) memset(x,v,sizeof x)
#define pr_arr(i,x,size) for(i=0;i<size;i++) cout<<x[i]<<" "
#define ff(i,a,b) for(i=a;i<=b;i++)
#define fb(i,a,b) for(i=a;i>=b;i--)
#define gprint(i) cout<<"Case #"<<i<<": "
using namespace std;

template<class T>
void scanint(T &x)
{
    register T c = gc();
    x = 0;
    T neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int m(int x,int m=MOD)
{
    return (((x%m)+m)%m);
}

inline bool lt(double a, double b)
{
    return a + EPS < b;
}
inline bool gt(double a, double b)
{
    return a > b + EPS;
}
inline bool eq(double a, double b)
{
    return fabs(a - b) < EPS;
}

ll power(ll base,ll p)
{
    ll temp=1;
    while(p>1)
    {
        if(p%2!=0)
            temp=(1LL*(base*temp)%MOD);
        base=(1LL*(base*base)%MOD);
        p/=2;
    }
    ll ans=(1LL*(base*temp)%MOD);
    return ans;
}

int ans=1;
vint adj[MAX];
int visited[MAX];
queue<int> Q;
int fact[MAX];

void factorial(int n)
{
	int i;
	fact[0]=1;
	ff(i,1,n)
	{
		fact[i]=(1LL*i*fact[i-1])%MOD;
	}
}

void dfs(int u)
{
	visited[u]=1;
	vint :: iterator it;
	int count=0;
	for(it=adj[u].begin();it!=adj[u].end();it++)
	{
		if(!visited[*(it)])
		{
			count++;
			dfs(*it);
		}
	}
	if(count)
		ans=(1LL*ans*fact[count])%MOD;
}


int main()
{
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	factorial(MAX);
	while(t--)
	{
		int n;
		ms(visited,0);
		cin>>n;
		int i;
		ff(i,1,n-1)
		{
			int u,v;
			cin>>u>>v;
			adj[u].pb(v);
			adj[v].pb(u);
		}
		int root;
		cin>>root;
		dfs(root);
		ff(i,1,n)
		{
			adj[i].clear();
			visited[i]=0;
			//ans=1;
		}
		cout<<ans<<"\n";
		ans=1;
	}
	return 0;
}