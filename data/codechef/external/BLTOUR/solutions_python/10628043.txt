import math

def dfs(graph,start):
    visited,stack=set(),[start]
    ans=1
    while stack:
        vertex=stack.pop()
        if vertex not in visited:
            visited.add(vertex)
            ans*=fac[len(graph[vertex]-visited)]
            #ans*=math.factorial(len(graph[vertex]-visited))
            stack.extend(graph[vertex]-visited)
    return ans

fac=[]
fac.append(1)
fac.append(1)
for i in range(2,100001):
    fac.append(fac[i-1]*(i%1000000007))
    fac[i]%=1000000007
#print fac

t=int(raw_input())
for i in range(t):
    n=int(raw_input())
    if(n==1):
        q=int(raw_input())
        print "1"
    else:
        dic={}
        for j in range(n-1):
            a,b=map(int,raw_input().split())
            if a in dic and b in dic:
                dic[a].add(b)
                dic[b].add(a)
            elif a not in dic and b not in dic:
                dic[a]=set([b])
                dic[b]=set([a])
            elif a in dic and b not in dic:
                dic[a].add(b)
                dic[b]=set([a])
            else:
                dic[a]=set([b])
                dic[b].add(a)    
        q=int(raw_input())
    #    print dic
        ans=dfs(dic,q)
        print ans%1000000007