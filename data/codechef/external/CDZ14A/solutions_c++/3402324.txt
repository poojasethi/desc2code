#include<stdio.h>
#include<cstring>
#define INF 1000000000
typedef long long int ll;
char s[100002];
int pos_red_early[100002];
int pos_blue_early[100002];
int pos_green_early[100002];
int min(int a,int b)
{
    return a<b?a:b;
}
int main()
{
    int test_cases,len;
    scanf("%d",&test_cases);
    for(int i=0;i<test_cases;i++)
    {
        memset(pos_red_early,-1,sizeof(pos_red_early));
        memset(pos_blue_early,-1,sizeof(pos_blue_early));
        memset(pos_green_early,-1,sizeof(pos_green_early));
        scanf("%s",s);
        len = strlen(s);
        if(s[0]=='R')
        {
            pos_red_early[0]=0;
        }
        else if(s[0]=='B')
        {
            pos_blue_early[0]=0;
        }
        else
        {
            pos_green_early[0]=0;
        }
        for(int j=1;j<len;j++)
        {
            pos_red_early[j]=pos_red_early[j-1];
            pos_blue_early[j]=pos_blue_early[j-1];
            pos_green_early[j]=pos_green_early[j-1];
            if(s[j]=='R')
            {
                pos_red_early[j]=j;
            }
            else if(s[j]=='B')
            {
                pos_blue_early[j]=j;
            }
            else
            {
                pos_green_early[j]=j;
            }
        }
        int min_len=INF;
        for(int j=2;j<len;j++)
        {
            if(s[j]=='R')
            {
                if(pos_blue_early[j]!=-1 && pos_green_early[j]!=-1)
                {
                    if(min_len>j-min(pos_blue_early[j],pos_green_early[j])+1)
                    {
                        min_len = j-min(pos_blue_early[j],pos_green_early[j])+1;
                    }
                }
            }
            else if(s[j]=='B')
            {
                if(pos_red_early[j]!=-1 && pos_green_early[j]!=-1)
                {
                    if(min_len>j-min(pos_red_early[j],pos_green_early[j])+1)
                    {
                        min_len = j-min(pos_red_early[j],pos_green_early[j])+1;
                    }
                }
            }
            else if(s[j]=='G')
            {
                if(pos_red_early[j]!=-1 && pos_blue_early[j]!=-1)
                {
                    if(min_len>j-min(pos_red_early[j],pos_blue_early[j])+1)
                    {
                        min_len = j-min(pos_red_early[j],pos_blue_early[j])+1;
                    }
                }
            }
        }
        printf("%d\n",min_len);
    }

}
