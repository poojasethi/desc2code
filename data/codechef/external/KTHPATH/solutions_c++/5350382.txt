#include<bits/stdc++.h>

using namespace std;

vector<int> v;
set <int> s[100010];
long long int x;

int DFS(long long int position,int root)
{
	int temp;
	v.push_back(position);
	x--;
	if(x<=0)
		return 1;
    set<int>::iterator i;
	for(i=s[position].begin();i!=s[position].end();i++)
	{
		if((*i)!=root)
		{
			temp=DFS(*i,position);
			if(temp==1)
				return 1;
		}
	}
	v.pop_back();
	return temp;
}

int main()
{
	int t,X,Y;
	long long int n,q,temp;
	cin>>t;
	while(t--)
	{
		v.clear();
		cin>>n>>q;
		for(int i=0;i<=n;i++)
			s[i].clear();
		for(int i=0;i<n-1;i++)
		{
			cin>>X>>Y;
			s[X].insert(Y);
			s[Y].insert(X);
		}
		x=q%n;
		temp=q/n+1;
		if(x==0)
		{
			x=n;
			temp--;
		}
		DFS(temp,0);
		for(int i=0;i<v.size();i++)
		{
			cout<<v[i];
			if(i!=v.size()-1)
				cout<<" ";
		}
		cout<<endl;
	}
}