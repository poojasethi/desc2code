#include<cstdio>
#include<algorithm>
#include<vector>
//#include<conio.h>

using namespace std;
vector< long long  >p[100009];
vector< long long >u ;
long long t,n,a,b,v,w,i,ans,parent[100009],q,l,k,visited[100009];
void dfs(long long v)
{
   // printf("v===%d k===%d\n",v,k);
   // getch();
long long i;
    if(k==w)
    {
        ans=v;
        return;

    }
    if(k>w)
    return;

for(i=0;i<p[v].size();i++)
{    if(visited[p[v][i]]==0)
     {k++;
    parent[p[v][i]]=v;
    visited[p[v][i]]=1;
  //  printf("parent[k]%d v==%d\n",p[v][i],v);
    dfs(p[v][i]);
     }
 }

 }









int main()
{
scanf("%lld",&t);
while(t--)
{
scanf("%lld %lld",&n,&q);
for(i=0;i<=n;i++)
{
    p[i].clear();
    parent[i]=0;
  visited[i]=0;

}

u.clear();
for(i=1;i<=n-1;i++)
{
    scanf("%lld %lld",&a,&b);
    p[a].push_back(b);
    p[b].push_back(a);
}
for(i=1;i<=n;i++)
{
    sort(p[i].begin() , p[i].end());

}
v=(q-1)/(n);
w=q-((q-1)/(n))*n;
v=v+1;
parent[v]=-1;
//printf("v==%d w===%d\n",v,w);
k=1;
visited[v]=1;
dfs(v);

//printf("hello\n");

//printf("v==%d w===%d\n",v,w);

while(ans!=v)
{
  //  printf("ans=%d parent[ans]=%d\n",ans,parent[ans]);
  // getch();
    u.push_back(ans);
    ans=parent[ans];
}

//printf("hi\n");
u.push_back(v);
for(i=u.size()-1;i>=0;i--)
{
    printf("%lld ",u[i]);
}
printf("\n");

}
return 0;
}
