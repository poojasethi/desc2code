#include<stdio.h>
#include<algorithm>
#include<vector>
using namespace std;
vector<int>v[100005];
int t,n,x,y,top,start,stk[100005],visited[100005];
long long q,cnt;
void dfs(int node)
{
     int i;

     cnt++;
     stk[top]=node;
     top++;
     visited[node]=1;

     if(cnt==q)
     {
          for(i=0;i<top;i++)
          printf("%d ",stk[i]);
          printf("\n");
          return;
     }

     //printf("cnt=%d node=%d\n",cnt,node);
     /*if(v[node].size()==1 && node !=(start+1))
     {
          top--;
          return;
     }*/

     for(i=0;i<v[node].size();i++)
     {
          if(cnt<q && visited[v[node][i]]==0)
          dfs(v[node][i]);
     }
     top--;
}
int main()
{
     int i;

     scanf("%d",&t);
     while(t--)
     {
          top=0;
          scanf("%d %lld",&n,&q);
          for(i=1;i<n;i++)
          {
               scanf("%d %d",&x,&y);
               v[x].push_back(y);
               v[y].push_back(x);
          }
          for(i=1;i<=n;i++)
          sort(v[i].begin(),v[i].end());

          start=q/n;
          if(q%n==0)
          start--;

          cnt=(long long)start*(long long)n;

          dfs(start+1);

          for(i=0;i<=n;i++)
          {
               v[i].clear();
               visited[i]=0;
               stk[i]=0;
          }
     }
     return 0;
}
