#include<bits/stdc++.h>
#define maxi 100005

using namespace std;
vector<int>v[maxi];
int u[maxi],N,t,i,j,x,y,vis[maxi],avail,pos,arr[maxi];
long long int K;
bool dfs(int ind)
{
	arr[++pos]=ind;
	u[ind]=1;
	--K;
	if(!K)
	{
		for(int i=1;i<pos;i++)
		{
		    printf("%d ",arr[i]);
		}
        printf("%d\n",arr[pos]);
		return true;
	}
	else
    {
        for(int j=0;j<v[ind].size();j++)
        {
            if(!u[v[ind][j]]&&dfs(v[ind][j]))   break;
        }
    }
	--pos;
	return false;
}
void dfs2(int ind)
{
	vis[ind]=1;
	avail++;
	for(int j=0;j<v[ind].size();j++)
	{
        if(!vis[v[ind][j]])
        {
            dfs2(v[ind][j]);
        }
	}
}
int main()
{
	cin>>t;
	while(t--)
	{
	    avail=0;
		for(i=1;i<=N;i++)
		{
		    u[i]=vis[i]=0;
		    v[i].clear();
		}
		cin>>N>>K;
		for(i=1;i<N;i++){
			cin>>x>>y;
			v[x].push_back(y);
			v[y].push_back(x);
		}
		dfs2(1);
		for(i=1;i<=N;i++)sort(v[i].begin(),v[i].end());
		for(i=1;i<=N;i++)
        {
            if(K>N)
            {
                K-=N;
            }
            else
            {
                dfs(i);
                break;
            }
        }
        pos=0;
	}
    return 0;
}
