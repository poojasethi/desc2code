/* 

   SHUBHAM RAI-IIIT Hyderabad

 */
#include<cstdio>
#include<iostream>
#include<cmath>
#include<vector>
#include<cstring>
#include<climits>
#include<string>
#include<map>
#include<stack>
#include<queue>
#include<set>
#include<algorithm>
#include<assert.h>
using namespace std;
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) for(i=0;i<a;i++)
#define LLD long long int
#define MOD 1000000007
#define si(n) scanf("%d",&n);
#define si2(n,m) scanf("%d%d",&n,&m);
#define sl(n) scanf("%lld",&n);
#define TR(container,it) for(typeof(container.begin()) it=container.begin();it!=container.end();it++)
#define F first
#define S second
#define pb push_back
#define mp make_pair
typedef pair<int,int> PII;
vector <int > G[100002];
LLD dp[100002];
int v[100002],v1[100002];
int dfs(int n)
{
	v[n]=1;
	dp[n]=1;
	int i,j,l=G[n].size();
	REP(i,l)
	{
		int x=G[n][i];
		if(!v[x])
		{
			dfs(x);
			dp[n]+=dp[x];
		}

	}
}
int main()
{
	int t;
	si(t);
	while(t--)
	{
		LLD i,j,n;
		LLD k;
		sl(n);
		sl(k);
		REP(i,n)
		{
			G[i].clear();
			v[i]=0;
			v1[i]=0;
			dp[i]=0;
		}
		REP(i,n-1)
		{
			int x,y;
			si2(x,y);
			x--;
			y--;
			G[x].pb(y);
			G[y].pb(x);
		}
		LLD st=k/n;
		if(k%n==0)
			st--;
		dfs(st);
		k-=st*n;
		while(k>0)
		{
			v1[st]=1;
			printf("%lld ",st+1);
			k--;
			int l=G[st].size();
			sort(G[st].begin(),G[st].end());
			REP(i,l)
			{
				int x=G[st][i];
				if(!v1[x])
				{
					if(dp[x]<k)
						k-=dp[x];
					else
					{
						st=x;
						break;
					}
				}
			}
		}
		printf("\n");
	}
	return 0;
}
