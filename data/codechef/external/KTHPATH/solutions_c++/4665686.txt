#include <iostream>
#include <algorithm>
#include <memory.h>
#include <cstdio>
#include <vector>
#include <stack>
#include <queue>
#include <deque>
#include <set>
#include <map>
using namespace std;
#define sz(s) int((s).size())
#define clr(a) memset(a,0,sizeof(a))
#define all(x) (x).begin(),(x).end()
#define rep(i,n) for(int(i)=0; (i)<(n);++(i))
#define ru(i,a,b) for(int(i)=a;(i)<=(b);++(i))
#define pb push_back
#define mp make_pair
#define ff first
#define ss second
typedef pair <int,int> pii;
template <class T> inline T gcd(T a,T b){return (!b? a : gcd(b,a%b));}
template <class T> inline T ABS(T x){return ((x)>0?(x):(-(x)));}
const int N = 1 << 17;

vector <int> g [N];
int par [N];
int cnt, sink, ok;

void go (int u, int p, int kth) {
  ++cnt;
  for (int i = 0; i < sz (g[u]); ++i) {
    int v = g[u][i];
    if (v == p || ok) continue;
    par [v] = u;
    if (cnt == kth) {
      sink = v;
      ok = 1;
      return;
    }
    go (v, u, kth);
  }
}

int main() {
  #ifndef ONLINE_JUDGE
    freopen ("in.txt","r",stdin);
  #endif
  cin.sync_with_stdio(0); cin.tie(0);
  int t = 1;
  cin >> t;
  for(int tc = 1; tc <= t; ++tc) {
    int n;
    long long Q;
    cin >> n >> Q;
    for (int i = 1; i <= n; ++i) {
      g[i].clear();
    }
    for (int i = 0; i < n - 1; ++i) {
      int u, v;
      cin >> u >> v;
      g[u].pb (v);
      g[v].pb (u);
    }
    for (int i = 1; i <= n; ++i) {
      sort (all (g[i]));
    }
    int root = Q / n + (Q % n  == 0 ? 0 : 1);
    int kth = (Q % n == 0 ? n : Q % n);
    ::cnt = 1;
    ::sink = root;
    ::ok = 0;
    go (root, 0, kth);
    stack <int> stk;
    while (sink != root) {
      stk.push (sink);
      sink = par [sink];
    }
    stk.push (root);
    while (!stk.empty ()) {
      cout << stk.top ();
      stk.pop ();
      if (!stk.empty ()) cout << ' ';
    }
    cout << '\n';
  }
}
