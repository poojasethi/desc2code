#include<bits/stdc++.h>
//#define getchar getchar_unlocked
using namespace std;
int  Q[100005];
int q1=0,q2;
typedef long long int LL;
 LL k=0,n,q,lp;

 inline int read()
 {
     char c=0;int a=0;
     while((c=getchar())<33);
     a=a*10+c-48;
     while((c=getchar())>33)
     {
         a=a*10+c-48;
     }
     return a;
 }

struct ab
{
    int a,b;
}obj[100005];



int cmp(ab a1,ab a2)
{
    if(a1.a<a2.a)
        return 1;
    else if(a1.a==a2.a)
    {
        if(a1.b<a2.b)
            return 1;
        else
            return 0;
    }
    else
        return 0;
}

vector<int> adj[100005];
    int arr[100005];


    void print()
    {
        int a;
        q1=q2;
        //cout<<k<<" ";
            //cout<<endl<<"/";
                for(a=0;a<q1;a++)
                {
                    if(a==q1-1)
                    printf("%d",Q[a]);
                    else
                        printf("%d ",Q[a]);

                }
                    cout<<endl;

    }




    void dfs(int v)
    {
        k++;
        arr[v]++;
        //cout<<v<<" ";
        Q[q1++]=v;

        if(k==lp)
           {
               q2=q1;

            }
        vector<int>::iterator i;
        for(i=adj[v].begin();i!=adj[v].end();i++)
        {
            //cout<<"Hello";
            if(k==lp)
                break;
            if(!arr[*i])
            {
                dfs(*i);
            }
        }
        //cout<<"Hello\n";
        if(q1!=0)
        q1--;
    }


int main()
{
    //graph g(6);
    LL t,i,p,q;
    //display(5000);
    cin>>t;
    while(t--)
    {
        memset(arr,0,sizeof(arr));
        q1=0;
        for(i=0;i<=n;i++)
        {
            adj[i].clear();
        }

        cin>>n>>q;

        for(i=0;i<n-1;i++)
        {
            obj[i].a=read();
            obj[i].b=read();
            if(obj[i].a>obj[i].b)
            {
                int tmp=obj[i].a;
                obj[i].a=obj[i].b;
                obj[i].b=tmp;
            }

        }
       // cout<<"Done\n";
        sort(obj,obj+n-1,cmp);
        /*for(i=0;i<n;i++)
        {
            cout<<obj[i].a<<" "<<obj[i].b<<"\n";
        }
        cout<<"Sort Done\n";
        */
        for(i=0;i<n-1;i++)
        {

            adj[obj[i].a].push_back(obj[i].b);
            adj[obj[i].b].push_back(obj[i].a);
        }
        k=0;
        if(q%n==0)
        {
            lp=n;
            dfs(q/n);
        }
        else
        {
            lp=q-(q/n)*n;
            dfs(q/n+1);

        }
        print();

    }


    int l;
    cin>>l;
}

