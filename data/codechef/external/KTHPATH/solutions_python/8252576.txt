#include<cstdio>
#include<cstring>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<vector>
#include<queue>
#include<stack>
#include<set>
#include<map>

using namespace std;

#define ll long long
#define inf 2000000000
#define mod 1000000007
#define vv vector<int>
#define pp pair<ll,ll>
#define vvp vector<pp>
#define pb push_back
#define st set<int>
#define mst multiset<int>
#define mp map<ll,ll>
#define pr(cn,x) ((cn).find(x)!=(cn).end())
#define tr(cn,it) for(typeof((cn).begin()) it=(cn).begin();it!=(cn).end();it++)

vv v[100005],ans[10];
int vis[100005];
ll sum[100005];
ll s,cc;

int sol(int i)
{
    int j;
    cc++;
    if(cc==s)
        return 1;

    for(j=0;j<v[i].size();j++)
    {
        if(!vis[v[i][j]])
        {
            vis[v[i][j]]=1;
            if(sol(v[i][j]))
            {
                ans[1].pb(v[i][j]);
                return 1;
            }
        }
    }
    return 0;


}



int main()
{
    int t,x,y,j;
    ll q,p,n,i;
    scanf("%d",&t);

    while(t--)
    {
        scanf("%lld%lld",&n,&q);
        for(i=1;i<n;i++)
        {
            scanf("%d%d",&x,&y);
            v[x].pb(y);
            v[y].pb(x);
        }
        for(i=1;i<=n;i++)
        {
            sort(v[i].begin(),v[i].end());
        }

        p=q/n;
        i=p;
        if((q%n))
            i++;

        memset(vis,0,sizeof(vis));
        vis[i]=1;
        s=q-((i-1)*n);
        cc=0;
        sol(i);
        ans[1].pb(i);
        for(j=ans[1].size()-1;j>=0;j--)
        {
            printf("%d ",ans[1][j]);
        }
        for(j=1;j<=n;j++)
        {
            v[j].clear();
        }
        ans[1].clear();
        printf("\n");
    }


    return 0;
}
