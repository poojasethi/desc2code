
/*************** Author: sambit1993 ******************/
/*     Category: UpdateLater          */

#include <bits/stdc++.h>

#define s(x) scanf("%d",&x)
#define sil(x) scanf("%llu",&x)
#define sd(x) scanf("%ld",&x)


#define FOR(i,a,b) for( int i=(a); i<(b); ++i)               // exclusive for
#define FORR(i,a,b) for( int  i=(a-1) ; i>=(b); --i)
#define REP(k,a,b) for(int  k=(a); k <= (b); ++k)            // inclusive for
#define REPR(i,a,b) for( int i=(a) ; i>=(b); --i)
#define ALL(c) (c).begin(), (c).end()  
#define PB push_back 
#define MP make_pair 
#define SZ(x) ((int)((x).size()))
#define SRT(v) std::sort(ALL(v))
#define CTN(x) std::cout<<x<<'\n'                                //cout with newline
#define CTS(x) std::cout<<x<<" "                                //cout with space
#define CLR(x) std::memset(x,0,sizeof(x))
#define FILL(x,n) std::fill_n(x,sizeof(x),n)
#define T(t) int t; ri(t); while(t--) 
#define DBGA(x,n) {for(int i=0;i<n;i++) cerr<<x[i]<<" "; cerr<<"\n";}
#define REC(x) clock_t x=clock()
#define CPS CLOCKS_PER_SEC 
#define TM(x,y) CTN(((double)(y-x)/CPS))
#define abs(x) ((x)>0?(x):(-(x)))

typedef std::vector<int> VI;
typedef std::vector<long long int> VL;
typedef std::vector<std::string> VS;

typedef std::pair<int,int> PII;
typedef unsigned long long ull;
typedef long long ll;


#ifdef DEBUG
    #define  debug(args...) do{std::cout<<#args<<" : ";dbg,args;std::cout<<std::endl;}while(0)
#else
    #define debug(args...) 
#endif

struct debugger{
    template<typename T>
    debugger operator,(const T&v){
        std::cout<<v<<" ";
        return (*this);
    }
}dbg;
using namespace std;
/**************************GLOBAL DATA***************************************/
const int sz=100000;
VI graph[sz+10];
int rnk[sz+10];
bool visited[sz+10];
/**************************GLOBAL DATA***************************************/

int dfs(int v)
{
    visited[v]=true;
    rnk[v]=1;
    FOR(i,0,SZ(graph[v])){
        int u=graph[v][i];
        if(!visited[u]){
            rnk[v]+=dfs(u);
        }
    }
    return rnk[v];
}

void print_path(ll p,ll r)
{
    visited[p]=true;
    cout<<p<<" ";
    if(r==1) return;
    r-=1;
    ll sum=0;
    FOR(i,0,SZ(graph[p])){
        int u=graph[p][i];
        if(!visited[u]){
            sum+=rnk[u];
            if(r-sum<=0)
            {
                print_path(u,r-sum+rnk[u]);
                break;
            } 
        }
    }
}

int main()
{
    std::ios_base::sync_with_stdio(false);
    #ifdef LOCAL_SYS
        freopen("in.txt","r",stdin);
    #endif
    int t;cin>>t;
    while(t--){
        ll n,k;cin>>n>>k;
        CLR(rnk);
        REP(i,1,n){
            graph[i].clear();
        }
        REP(i,1,n-1){
            int u,v;cin>>u>>v;
            graph[u].PB(v);
            graph[v].PB(u);
        }
        REP(i,1,n){
            sort(ALL(graph[i]));
        }
        ll p,r;
        if(k%(n)==0){
            p=(k/(n));
            r=n;
        }else{
            p=(k/(n))+1;
            r=k%(n);
        }
        debug(p,r,k,n);
        CLR(visited);
        dfs(p);
        CLR(visited);
        print_path(p,r);
        cout<<"\n";
    }    
}




