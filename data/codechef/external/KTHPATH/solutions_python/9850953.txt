#include <bits/stdc++.h>
using namespace std;
//By:-mansigupta
#define pb(x) push_back(x)
#define ll long long int
#define mp(x,y) make_pair(x,y)
#define FOR(x,y) for(x=0;x<y;x++)
#define For(x,y) for(x=1;x<=y;x++)
#define mod 1000000007
vector <int> g[1000005];
//set <int> ;
//map <int,int>;
int ind;
int s[1000006];
int mx;
ll k,c,n;
bool dfs(int u,int p)
{
	c--;
	ind++;
//	mx=max(ind,mx);
	if(c==0){
	    mx=ind;
	    s[ind]=u;
	    ind--;
	    return 1;
	}
	int v,i;
	for(i=0;i<g[u].size();i++)
	{
	    v=g[u][i];
	    if(v!=p)
	    if(dfs(v,u)){
	        s[ind--]=u;
	        return 1;
	    }
	}
	ind--;
    return 0;
}
/*ll power(ll base, ll p)
{
    if(p==0)
    return 1;
    if(p==1)
    return (base%mod);
    base=base%mod;
    if(p%2!=0)
    {
        
        return((base%mod*((power((base*base)%mod,p/2)%mod)))%mod);
    }
    else 
    return((power(((base%mod)*(base%mod))%mod,p/2))%mod);
}*/

int main() 
{
	//Beauty is in relaxed hard work.
	//SSGCA :)
	//Keep doing your thing, complexity would turn into simplicity! :)
    int t;
    cin>>t;
    while(t--)
    {
      // int n,k;
       cin>>n>>k;
       int i;
       FOR(i,(n-1))
       {
           int u,v;
           cin>>u>>v;
           g[u].pb(v);
           g[v].pb(u);
       }
       for(i=1;i<=n;i++){
           sort(g[i].begin(),g[i].end());
       }
       int rt=k/n;
       rt++;
       //if(rt==0) rt=1;
       c=k%n;
       if(c==0) {c=n;rt--;}
      // cout<<rt<<" "<<c<<endl;
       mx=0;
       ind=-1;
       dfs(rt,-1);
      // s[ind]='\0';
      // printf("%s\n",s);
      //mx=0;
      mx++;
      FOR(i,mx)
      {
          cout<<s[i]<<" ";
      }
      cout<<endl;
       For(i,n){
           g[i].clear();
       }
    }
	return 0;
}