#include <bits/stdc++.h>


using namespace std;

#define FOR(i,a,b) for(i=a;i<=b;++i)
#define all(x) x.begin(), x.end()
#define tr(x,it) for(vector<int>::iterator it = x.begin();it!=x.end();++it)

#define pb push_back 


long long n;
int vis[100009];
int no[100009];
vector<int> g[100009];
void dfs(int u)
{
	no[u]=1;
	vis[u]=1;
	tr(g[u],it)
	{
		if(!vis[*it])
		{
			dfs(*it);
			no[u]+=no[*it];
		}
	}
}
void DFS(int u, long long k)
{
	
	vis[u]=2;
	if(k==0){cout<<u+1<<" ";return;}
	long long num=0;
	tr(g[u],it)
	{
		if(vis[*it]==2)continue;
		num+=(long long)no[*it];
		if(num>=k){cout<<u+1<<" ";DFS(*it,k-num+no[*it]-1);return;}
	}
}
int main() 
{
    ios_base::sync_with_stdio(false);cin.tie(0);
    int T,i;
    cin>>T;
    while(T--)
    {
    	long long k;
    	cin>>n>>k;--k;
    	int u,v;
    	
    	FOR(i,0,n-1){g[i].clear();vis[i]=0;}
    	FOR(i,0,n-2){cin>>u>>v;--u;--v;g[u].pb(v);g[v].pb(u);}
    	FOR(i,0,n-1)sort(all(g[i]));
    	
    	long long root=k/n;
    	dfs(root);
    	
    	DFS(root,k%n);
    	cout<<"\n";
    }
	return 0;
}