//Utkarsh Saxena
#include<iostream>
#include<limits.h>
#include<map>
#include<vector>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<cstdio>
#include<queue>
using namespace std;//miller rabin primality 7 set for 64 bit int {2, 325, 9375, 28178, 450775, 9780504, 1795265022}
#define abs(x) ((x)>0?(x):-(x))
#define M 1000000007
#define lld signed long long int
#define pp pop_back()
#define ps(x) push_back(x)
#define tkint(n) scanf("%d",&n)
#define tkchar(ch) scanf("%c",&ch)
#define tklong(n) scanf("%llu",&n)
#define  ms0(s) memset(s,0,sizeof s)
lld d[10000009];
lld modular_pow(lld base, lld exponent,lld modulus)
{
    lld result = 1;
    while (exponent > 0)
    {
        if (exponent % 2 == 1)
            result = (result * base) % modulus;
        exponent = exponent >> 1;
        base = (base * base) % modulus;
    }
    return result;
}
int main()
{
	int t;
	lld n;
	int p;
	cin>>t;
	while(t--)
	{
		cin>>n>>p;
		d[1]=d[0]=1;
		for(int i=1;i<p;++i)
		{
			d[i]=(d[i-1]*i)%p;
		}
		lld i,a2,a1=1;
		for(i=1;i<=n;i*=p)
		{
			if(double(i)*double(p)>double(n))break;
			a2=(modular_pow(d[p-1],n/(i*p),p)*d[(n%(i*p))/i])%p;
			a1=(a1*a2)%p;
		}
			a2=d[n/i];
			a1=(a1*a2)%p;
		
		cout<<a1<<endl;
	}
}