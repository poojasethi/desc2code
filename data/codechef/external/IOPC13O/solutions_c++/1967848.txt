#include <cstdio>
#include <iostream>
using namespace std;

int factorial[10000001];

long long power(long long base,long long index,long long mod)
{
	long long ans=1,temp=base;
	while(index)
	{
		if(index&1)
			ans=(ans*temp)%mod;
		temp=(temp*temp)%mod;
		index>>=1;
	}
	return ans;
}

long long compute(long long n,long long p,long long val)
{
	if(n==0)
		return 1;
	long long ans=(long long)factorial[n%p];
	return (((ans*power(val,n/p,p))%p)*compute(n/p,p,val))%p;
}

int main()
{
	int T;
	long long num,prime,val;
	scanf("%d",&T);
	while(T--)
	{
		scanf("%lld %lld",&num,&prime);
		factorial[0]=1;
		for(int i=1;i<prime;i++)
			factorial[i]=((long long)i*(long long)factorial[i-1])%prime;
		if(num<=prime)
			printf("%d\n",factorial[num-(num==prime)]);
		else
			printf("%lld\n",compute(num,prime,(long long)factorial[prime-1]));
	}
	return 0;
}