import java.io.*;
import java.util.*;

/*
  DO NOT REMOVE THIS COMMENT, OR THIS CODE WILL NOT WORK.
*/
class MyClass {
	
	public static long[][] arr;
	public static Map<Long, Long> memo;
	
	public static long getMax(int i1, int j1, int i2, int j2, int day){
		if(i2<i1 || j2<j1) return 0;
		long id = i1+100*j1+10000*i2+1000000*j2; 
		Long max = memo.get(id);
		if(max != null) return max;
		else{
			long firstRow = getMax(i1+1, j1, i2, j2, day+1);
			for(int i=j1;i<=j2;i++)
				firstRow += arr[i1][i]*day;
				
			long lastRow = getMax(i1, j1, i2-1, j2, day+1);
			for(int i=j1;i<=j2;i++)
				lastRow += arr[i2][i]*day;
				
			long firstCol = getMax(i1, j1+1, i2, j2, day+1);
			for(int i=i1;i<=i2;i++)
				firstCol += arr[i][j1]*day;
				
			long lastCol = getMax(i1, j1, i2, j2-1, day+1);
			for(int i=i1;i<=i2;i++)
				lastCol += arr[i][j2]*day;	
				
			max = Math.max(Math.max(firstRow, lastRow), Math.max(firstCol, lastCol));
			memo.put(id, max);
			return max;
		}
	}
    
    public static void solve() throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		int t = Integer.parseInt(br.readLine());
		StringBuilder sb = new StringBuilder("");
		while (t-- > 0) {
			String[] ip=br.readLine().split(" ");
			int n = Integer.parseInt(ip[0]);
			int m = Integer.parseInt(ip[1]);
			arr=new long[n][m];
			memo = new HashMap<Long, Long>();
			for(int i=0;i<n;i++){
				ip=br.readLine().split(" ");
				for(int j=0;j<m;j++){
					arr[i][j] = Long.parseLong(ip[j]);
				}
			}
			long max = getMax(0,0,n-1,m-1,1);
			sb.append(max+"\n");
		}
		System.out.print(sb.toString());
	}
	public static void main(String[] args) throws Exception{
        solve();
	} 
}