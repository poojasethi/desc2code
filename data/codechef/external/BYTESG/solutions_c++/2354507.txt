#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<list>
#include<map>
#include<set>
#include<deque>
#include<queue>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iomanip>
#include<cmath>
#include<cctype>
#include<cstring>
#include<string>
#include<ctime>
#include<cassert>
using namespace std;
//#include<conio.h>

#define TRACE(x) cerr << "TRACE(" #x ")" << endl;
#define DEBUG(x) cerr << #x << " = " << x << endl;
#define FOR(i,a,b) for(int i=(a);i< (b);i++)
#define input(a) scanf("%d",&a)
#define CLEAR(a) memset((a),0,sizeof(a))
#define INF 1000000000
#define LL long long
#define PI 2*acos(0.0)
#define sqr(a) (a)*(a)
#define MAX 10100
char str[MAX];
struct node
{
   bool data;
   node *next[128];
   node()
   {
     memset(this,0,sizeof(node));   
   }
}*start,*p;
inline void insert(char *s)
{
   p=start;
   for(;*s && *s!=' ';s++)
   {
     if(!p->next[*s])
       p->next[*s]=new node();
     p=p->next[*s];
   } 
   p->data=true;  
}
inline bool check(char *s)
{
   p=start;
   for(;*s && *s!=' ';s++)
   {
     if(!p->next[*s])
       return false;
     p=p->next[*s];               
   }    
   return p->data;
}
int main()
{
   start=new node();
   gets(str);
   int j,i;
   j=0;
   for(i=0;str[i];i++)
   {
     if(str[i]==' ')
     {
       insert(str+j);
       j=i+1;            
     }
     else
       str[i]=toupper(str[i]);      
   } 
   insert(str+j);
   while(gets(str))
   {
     j=0;
     for(i=0;str[i];i++)
     {
       if(str[i]==' ')
       {
          if(!check(str+j))
            break;
          j=i+1;           
       }      
       else
         str[i]=toupper(str[i]);
     }             
     if(str[i]||!check(str+j))
       puts("No");
     else
       puts("Yes");
   }
   //getch();
   return 0;
}
