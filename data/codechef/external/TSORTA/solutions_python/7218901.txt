#include<bits/stdc++.h>
#define ll long long int
#define F first
#define S second
#define tr(container, it) for(typeof(container.begin()) it = container.begin(); it != container.end(); it++)
#define rep(i,in1,n) for(i=in1;i<=n;i++)
#define repd(i,in1,n) for(i=in1;i>=n;i--)
 
#define pf(n) printf("%d ",n);
#define sf(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define nl printf("\n")
#define mem(arr,init) memset(arr,init,sizeof(arr))
#define vi vector<int>
#define vvi vector<vi>
 
#define sz(a) int((a).size())
#define pb push_back
#define all(c) (c).begin(),(c).end()
#define present(c,x) ((c).find(x) != (c).end())
#define cpresent(c,x) (find(all(c),x) != (c).end())
#define mp make_pair
#define ep emplace_back//c++11
#define ii pair<int,int>
using namespace std;
 
 
ll arr1[100004],arr2[100004],arr3[100004],cnt[100004];
 
ll bs(ll arr[],ll l,ll r,ll x)
{
	ll mid;
	
			while(l<r)
			{	mid=(l+r)/2;
				if(arr[mid]>=x) r=mid;
				else l=mid+1;
			}
	return l;
}
 
int main()
{
	
	ll i,j,k,t,idx,n,m,a,b,c,x,y,z,n1,n2,n3,ans;
	
	
	
	
	sl(t);
	while(t--)
	{
		mem(arr1,0);
		mem(arr2,0);
		mem(arr3,0);
		mem(cnt,0);
		ans=0;
		sl(n1); 
		for(i=0;i<n1;i++)
		{
			scanf("%lld",&arr1[i]);
		}
		sl(n2);
		
		
	//	z=bs(arr1,1,n1,n2);
	//	cout<<z;
		
		for(i=0;i<n2;i++)
		{
			scanf("%lld",&arr2[i]);
		}
		 
		sl(n3);
		for(i=0;i<n3;i++)
		{
			scanf("%lld",&arr3[i]);
		}
		
		for(i=0;i<n2;i++)
		{
			//y=bs(arr3,i,n3-1,arr2[i]);
			//y=bs(arr3,i,n3-1,arr2[i])-arr3;
			y=lower_bound(arr3+i,arr3+n3,arr2[i])-arr3;
			
			if(y<n3&& arr3[y]>=arr2[i])
			//	cnt[j]+=n3-l;
			cnt[i]=n3-y;
			
		}
		/*
		for(i=1;i<=n2;i++)
		{
			pf(cnt[i]);
		}
		
		
		
		*/
		for(i=n2-2;i>=0;i--)
		{
			cnt[i]=cnt[i+1]+cnt[i];
		}
		for(i=0;i<n1;i++)
		{
			//idx=bs(arr2,i,n2-1,arr1[i]);
			idx=lower_bound(arr2+i,arr2+n2,arr1[i])-arr2;
			if(idx<n2&&arr2[idx]>=arr1[i])
				ans+=cnt[idx];
			
		}
		printf("%lld\n",ans);
		
	}
 
 
 
 
 
	return 0;
} 