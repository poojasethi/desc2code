#include<bits/stdc++.h>
using namespace std;
vector<int> a;
vector<int> b;
vector<int> c;
long long storage[100001];
inline int read_int(){
	int ip=getchar_unlocked(),ret=0,flag=1;
	for(;ip<'0'||ip>'9';ip=getchar_unlocked())
	if(ip=='-')
	{
		flag=-1;ip=getchar_unlocked();
		break;
		}
for(;ip>='0'&&ip<='9';ip=getchar_unlocked())
ret=ret*10+ip-'0';
return flag*ret;
}
int main(){


          int t;
          t = read_int();
          while(t--){
          int n , x ;
                       a.clear();
                       b.clear();
                       c.clear();
                       memset( storage , 0 , sizeof storage);
                       n = read_int();
             for(int i = 0 ; i < n ; ++i ){
               x = read_int();
               a.push_back(x);
               }
                n = read_int();
             for(int i = 0 ; i < n ; ++i ){
               x = read_int();
               b.push_back(x);
               }
               n = read_int();
             for(int i = 0 ; i < n ; ++i ){
            x = read_int();
               c.push_back(x);
               }
               for(int i = 0 ; i <  min( b.size() , c.size() ) ;  ++i ){

                    int id = lower_bound( c.begin() + i ,  c.end() , b[i]) - c.begin();
                      storage[ i + 1 ] = c.size() - id;
                   }
                   for( int i = 1; i <= b.size() ; ++i )
                     storage[i]+=storage[i-1];
                    long long ans = 0;
                    for( int i = 0 ; i  < min(a.size(),b.size()) ; ++i ){

                        int id =  lower_bound( b.begin() + i  , b.end() , a[i] ) - b.begin();
                            ans = ans + (storage[b.size()] - storage[id]);


                    }
                    printf("%lld\n",ans);

          }

}
