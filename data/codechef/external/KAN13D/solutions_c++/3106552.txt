/*
 *Kartik Singal @ ka4tik
 */
#include<bits/stdc++.h>
using namespace std;
#define s(n) scanf("%lld",&n);
#define mod 1000000007
#define MAXN 11111
#define ll long long
/*
   s[0] s[1] s[2] s[3] s[4] s[5] s[6] s[7] f[i-1] = f[i]
   0 1 0 0 0 0 0 0 f[i-2] = f[i-1]
   0 0 1 0 0 0 0 0 f[i-3] = f[i-2]
   0 0 0 1 0 0 0 0 f[i-4] = f[i-3]
   0 0 0 0 1 0 0 0 f[i-5] = f[i-4]
   0 0 0 0 0 1 0 0 f[i-6] = f[i-5]
   0 0 0 0 0 0 1 0 f[i-7] = f[i-6]
*/
typedef vector<ll> vi;
typedef vector< vector<ll> > vvi;
vvi matrixUnit(ll n)
{
    vvi res(n,vi(n,0));
    for(ll i=0;i<n;i++)
        res[i][i]=1;
    return res;
}
vvi matrixAdd(vvi &a,vvi &b)
{
    ll n=a.size();
    ll m=a[0].size();
    vvi res(n,vi(m));
    for(ll i=0;i<n;i++)
    {
        for(ll j=0;j<m;j++)
        {
            res[i][j]=a[i][j]+b[i][j];
            if(res[i][j]>=mod)
                res[i][j]%=mod;
        }
    }
    return res;
}
vvi matrixMul(const vvi &a, const vvi &b) 
{
    ll n =a.size();
    ll m =a[0].size();
    ll k =b[0].size();
    vvi res(n,vi(k));
    for (ll i=0;i<n;i++)
        for (ll j=0;j<k;j++)
            for (ll p=0;p<m;p++)
                res[i][j]=(res[i][j]+(long long)a[i][p]*b[p][j])%mod;

    return res;
}
vvi matrixPow(vvi a,ll p)
{
    ll n=a.size();
    if(p==0)
        return matrixUnit(a.size());
    if((p&1))
        return matrixMul(a,matrixPow(a,p-1));
    else
        return matrixPow(matrixMul(a,a),p/2);
}
void matrixPrll(vvi a)
{
    for(ll i=0;i<a.size();i++)
    {
        for(ll j=0;j<a[i].size();j++)
        {
            printf("%lld ",a[i][j]);
        }
        printf("\n");
    }
}
vector<ll> sigma(MAXN),ff(MAXN);
ll f(ll n,ll m)
{
    if(n<m)
        return ff[n];
    vvi T=matrixUnit(m);

    for(ll i=0;i<m;i++)
        for(ll j=0;j<m;j++)
            T[i][j]=0;

    for(ll i=0;i<m;i++)
        T[0][i]=sigma[m-i-1];

    for(ll i=1;i<m;i++)
        T[i][i-1]=1;

    T=matrixPow(T,n-m+1);

    ll ans=0;
    for(ll i=0;i<m;i++)
    {
        ans+=(T[0][i]*ff[m-i-1]);
        if(ans>=mod)
            ans%=mod;
    }
    return ans;
}
int main()
{
   //freopen("in2","r",stdin);

    int test;cin>>test;
    while(test--)
    {
        ll m,n;
        s(m);s(n);
        for(ll i=0;i<m;i++)
        {
            s(ff[i]);
            if(ff[i]<0)
                ff[i]+=mod;
        }
        for(ll i=0;i<m;i++)
            s(sigma[i]);

        ll ans=f(n,m);
        printf("%lld\n",ans);
    }


    return 0;
}

