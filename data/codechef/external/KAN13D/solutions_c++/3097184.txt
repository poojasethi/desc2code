#include <iostream>
#include <vector> 
using namespace std; 
//matrix module starts
typedef vector<vector<int> > VVI;
#define mod 1000000007
VVI iden(int n){
	VVI arr; 
	arr.resize(n); 
	for(int i=0;i<n;i++){
		arr[i].resize(n,0);
		arr[i][i] = 1; 
	}
	return arr;
}
VVI mul(VVI &A,VVI &B){
	int a = A.size(); 
	int c = B.size(); 
	int b = B[0].size();
	VVI res; 
	res.resize(a);
	for(int i=0;i<a;i++)res[i].resize(b); 
	for(int i=0;i<a;i++){
		for(int j=0;j<b;j++){
			res[i][j] = 0; 
			for(int k=0;k<c;k++){
				res[i][j] = (res[i][j] + (A[i][k]*1ll*B[k][j])%mod)%mod;
			}
		}
	}
	return res;  
}
VVI pow(VVI &A,int n){
	int sz = A.size(); 
	VVI res = iden(sz); 
	while (n) {
		if(n&1){
			res = mul(res,A);
		}
		n >>= 1; 
		A = mul(A,A);
	}
	return res; 
}
void print(VVI a){
	for(int i=0;i<a.size();i++){
		for(int j=0;j<a[i].size();j++)cout << a[i][j] <<" " ; cout << endl;
	}
}
// matrix module ends

VVI A,B,PP; 
int f[105], b[105]; 
int m,n; 
int main() {
	ios_base::sync_with_stdio(0); 
	int t; 
	cin >> t; 
	while (t--) {
		cin >> m >> n; 
		for(int i=0;i<m;i++)cin >> f[i]; 
		for(int i=0;i<m;i++)cin >> b[i]; 
		A.clear();  
		A.resize(m); 
		for(int i=0;i<m-1;i++){
			A[i].resize(m); 
			for(int j=0;j<m;j++){
				A[i][j] = (j == 1 + i); 
			}
		}
		A[m-1].resize(m); 
		for(int i=0;i<m;i++)A[m-1][i] = b[i];
		
		B.clear(); 
		B.resize(m);
		for(int i=0;i<m;i++){
			B[i].resize(1); 
			B[i][0] = (f[i]+mod)%mod; 
		}
		PP = pow(A,n);  
		B = mul(PP,B); 
		cout << B[0][0]<< endl; 
	}
	return 0;
}