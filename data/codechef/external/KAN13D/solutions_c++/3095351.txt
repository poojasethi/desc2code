#include <bits/stdc++.h>

using namespace std;

#define rept(i,a,b) for(int (i) = (a); i < (b); i++)
#define rep(i,n) for(int (i) = 0; i < (n); i++)
#define tr(c,it) for(__typeof(c.begin()) it = c.begin(); it != c.end(); ++it)
#define all(c) c.begin(),c.end()
#define inf (int)1e9
#define pb push_back
#define mp make_pair
#define fill(arr,val) memset(arr,val,sizeof(arr))
#define gi(n) scanf("%d",&n)
#define gl(n) scanf("%lld",&n);

typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef pair<int,int> pii;

#define mod 1000000007
#define M 110
int dim;

ll unit[M][M];
ll mat[M][M];

void print(ll a[][M]) {
  for(int i=0;i<dim;++i) {
    for(int j=0;j<dim;++j) printf("[%lld] ",a[i][j]);
    puts("");
  }
  puts("");
}


void copy(ll a[][M],ll b[][M]) {
  for(int i=0;i<dim;i++) {
    for(int j=0;j<dim;j++) {
      a[i][j] = b[i][j];
    }
  }
}

void mul(ll a[][M], ll b[][M]) {
  ll c[M][M];
  for(int i=0;i<dim;i++) {
    for(int j=0;j<dim;j++) {
      c[i][j] = 0;
      for(int k=0;k<dim;k++) {
        c[i][j] = (c[i][j] + (a[i][k] * b[k][j]) % mod + 2 * mod) % mod;
  while(c[i][j] < 0) c[i][j] += mod;
      }
    }
  }
  copy(a,c);
}

void power(ll ab[][M],ll n,ll b[][M]) {
  copy(b,unit);
  ll a[M][M];
  copy(a,ab);
  while(n) {
    if(n & 1) mul(b,a);
    mul(a,a);
    n >>= 1;
  }
}

int main() {
  //freopen("in.txt","r",stdin);
  for(int i=0;i<M;i++) {
    for(int j=0;j<M;j++) {
      if(i == j) unit[i][j] = 1;
      else unit[i][j] = 0;
    }
  }
  int tt;
  gi(tt);
  ll f[M];
  ll sigma[M];
  while(tt--) {
    int m,n;
    gi(m); gi(n); //cerr << n << " " << m << endl;
    dim = m;
    rep(i,m) scanf("%lld",f+i);
    rep(i,m) f[i] = (f[i] + mod) % mod;
    rep(i,m) scanf("%lld",sigma+i);
    for(int j=0;j<m;j++) mat[0][j] = sigma[m-1-j];
    for(int i=1;i<m;i++) {
      for(int j=0;j<m;j++) {
        if(i == j+1) mat[i][j] = 1;
        else mat[i][j] = 0;
      }
    }
    if(n < m) {
      printf("%lld\n",f[n] % mod);
      continue;
    }
    ll b[M][M];
    power(mat,n-m+1,b);
    //print(unit); print(mat); print(b);
    ll ans = 0;
    for(int i=0;i<m;i++) {
      ans = (ans + (b[0][i] * f[m-1-i]) % mod + 2 * mod) % mod;
      while(ans < 0) ans += mod;
    }
    ans %= mod;
    printf("%lld\n",ans);
  }
  return 0;
}
