#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<vector>
 
using namespace std;
 
#define ll long long
#define llu unsigned long long
#define MOD 1000000007
#define INF 2000000000
 
ll f[102];
ll d[102];
ll res[101][101];
ll X[101][101];
 
void print(ll a[101][101],int m)
{
int i,j;
for(i=0;i<m;i++)
{
for(j=0;j<m;j++)
{
cout<<a[i][j]<<" ";
}
cout<<endl;
}
}
 
void mult(ll a[101][101],ll b[101][101],int m)
{
int i,j,k;
ll tmp[101][101];
for(i=0;i<m;i++)
{
for(j=0;j<m;j++)
{
tmp[i][j] = 0;
for(k=0;k<m;k++)
{
tmp[i][j] = (tmp[i][j] + (a[i][k]*b[k][j])%MOD + MOD)%MOD;
while(tmp[i][j]<0)
 tmp[i][j]+=MOD;
}
}
}
for(i=0;i<m;i++)
{
for(j=0;j<m;j++)
{
a[i][j] = tmp[i][j];
}
}
}
 
ll solve(int n,int m)
{
int i,j;
for(i=0;i<m;i++)
{
for(j=0;j<m;j++)
{
if(i==j)
res[i][j] = 1;
else
res[i][j] = 0;
}
}
for(i=0;i<m;i++)
{
for(j=0;j<m;j++)
{
if(i==0)
{
X[i][j] = d[m-1-j];
}
else if(j+1==i)
{
X[i][j] = 1;
}
else
{
X[i][j] = 0;
}
}
}
n -= (m-1);
while(n)
{
if(n&1)
{
mult(res,X,m);
}
mult(X,X,m);
n >>= 1;
}
 
ll ret = 0;
for(i=0;i<m;i++)
{
ret = (ret + (res[0][i]*f[m-i-1])%MOD + MOD)%MOD;
while(ret<0)
 ret+=MOD;
}
return ret%MOD;
}
 
 
 
int main()
{
int t,n,m,i;
scanf("%d",&t);
while(t--)
{
scanf("%d%d",&m,&n);
for(i=0;i<m;i++)
{
scanf("%lld",&f[i]);
f[i] = (f[i]+MOD)%MOD;
}
for(i=0;i<m;i++)
{
scanf("%lld",&d[i]);
}
if(n<m)
{
printf("%lld\n",(f[n]+MOD)%MOD);
}
else
{
printf("%lld\n",solve(n,m));
}
}
//system("pause");
return 0;
}
