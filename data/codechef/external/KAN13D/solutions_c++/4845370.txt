#include <iostream>
#include <cstring>
#include <algorithm>
#include <string>
#define M 1000000007

using namespace std;

unsigned long long s[202];
unsigned long long sigma[202];
unsigned long long A[202][202];
unsigned long long res[202][202];
unsigned long long C[202][202];

int m;

void mul(unsigned long long A1[][202], unsigned long long A2[][202])
{     
     for ( int i = 0; i < m; i++ ) {
         for ( int j = 0; j < m; j++ ) {
             C[i][j] = 0;
             for ( int k = 0; k < m; k++ ) {
                 C[i][j] = (C[i][j] + (A1[i][k]*A2[k][j])%M)%M;
             }
         }
     }
     for ( int i = 0; i < m; i++ ) {
         for ( int j = 0; j < m; j++ ) A1[i][j] = C[i][j];
     }
     return;
}

void fast_pow(unsigned long long n)
{
     while ( n > 0 ) {
           if ( n&1 ) mul(res,A);
           mul(A,A);
           n >>= 1;
     }
     return;
}

int main()
{
    int t;
    unsigned long long n;
    long long x;
    cin >> t;
    while ( t-- ) {
          cin >> m >> n;
          for ( int i = 0; i < m; i++ ) {
              cin >> x;
              while ( x < 0 ) x += M;
              s[i] = x;
          }
          for ( int i = 0; i < m; i++ ) cin >> sigma[i];
          for ( int j = 0; j < m; j++ ) A[0][m-j-1] = sigma[j], res[0][j] = 0;
          res[0][0] = 1;
          for ( int i = 1; i < m; i++ ) {
              for ( int j = 0; j < m; j++ ) {
                  if ( i == j ) res[i][j] = 1;
                  else res[i][j] = 0;
                  if ( i == (j+1) ) A[i][j] = 1;
                  else A[i][j] = 0;
              }
          }
          if ( n < m ) {
               cout << s[n] << endl;
               continue;
          }
          fast_pow(n-m+1);
          unsigned long long ans = 0;
          for ( int i = 0; i < m; i++ ) ans = (ans + (res[0][i]*s[m-i-1])%M)%M;
          cout << ans << endl;
    }
    return 0;
}
