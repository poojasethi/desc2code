#include <bits/stdc++.h>
using namespace std;
const int mod = 1e9+7;
struct matrix{
    int a[6][6],d;
    matrix(int _d=0){
        d=_d;
        memset(a,0,sizeof a);
        for (int i=1; i<=d; i++){
            a[i][i]=1;
            for (int j=1; j<i; j++) a[j][i]=2;
        }
    }
    matrix operator * (const matrix &op)const{
        matrix ans;
        ans.d=d;
        for (int i=1; i<=d; i++){
            for (int j=1; j<=d; j++){
                ans.a[i][j]=0;
                for (int k=1; k<=d; k++){
                    ans.a[i][j]+=(1LL*a[i][k]*op.a[k][j])%mod;
                    ans.a[i][j]-=(ans.a[i][j]>=mod)?mod:0;
                }
            }
        }
        return ans;
    }
    matrix operator ^ (const int &op)const{
        int z=op;
        matrix ans,t=*this;
        bool ok=0;
        while (z){
            if (z&1){
                if (!ok){
                    ok=1;ans=t;
                } else ans=ans*t;
            }
            z>>=1;t=t*t;
        }
        return ans;
    }
} t;
int n,m,k,ans;
int main(){
    cin>>n>>k>>m;
    if (n==1){
        cout<<m;
        return 0;
    }
    t=matrix(k);
    t=t^(n-1);ans=0;
    for (int i=1; i<=k; i++){
        ans+=(1LL*m*t.a[i][k])%mod;
        ans-=(ans>=mod)?mod:0;
    }
    cout<<ans;
}
