import java.io.*;
import java.math.BigInteger;
import java.util.*;
 
public class Main
{
    public static void main(String args[])throws IOException
    {
        Scanner in = new Scanner(System.in);
        long n=in.nextLong();
        int k=in.nextInt();
        long m=in.nextLong();
 
        if(k==1) {
            System.out.println(m%1000000007);
        }
        else if(k==2){
            BigInteger b1 = new BigInteger(String.valueOf(n)),res;
            res=b1.multiply(BigInteger.valueOf(2));
            res=res.subtract(BigInteger.valueOf(1));
            res=res.multiply(BigInteger.valueOf(m));
            System.out.println(res.mod(BigInteger.valueOf(1000000007)));
        }
        else if(k==3)
        {
            //long res=(2*n*n - 2*n + 1);
            BigInteger res = new BigInteger(String.valueOf(n));
            res=res.multiply(BigInteger.valueOf(2*n));
            res=res.add(BigInteger.valueOf(1));
            res=res.subtract(BigInteger.valueOf(2*n));
 
            BigInteger b2=new BigInteger(String.valueOf(m));
            res=res.multiply(b2);
            System.out.println(res.mod(BigInteger.valueOf(1000000007)));
        }
        else if(k==4)
        {
            BigInteger b2 = new BigInteger(String.valueOf(n)), b1;
            b1=b2.multiply(b2); 
 
            BigInteger res1=b1.multiply(b2).multiply(BigInteger.valueOf(4));
 
            b1=b1.multiply(BigInteger.valueOf(6));
            res1=res1.subtract(b1);
 
            b2=b2.multiply(BigInteger.valueOf(8));
            res1=res1.add(b2);
            res1=res1.subtract(BigInteger.valueOf(3));
            res1=res1.multiply(BigInteger.valueOf(m));
            res1=res1.divide(BigInteger.valueOf(3));
            System.out.println(res1.mod(BigInteger.valueOf(1000000007)));
        }
        else if(k==5)
        {
            BigInteger b3 = new BigInteger(String.valueOf(n));
            BigInteger b2=b3.multiply(b3);
            BigInteger b1=b2.multiply(b3);
            // b1 : n*n*n , b2 : n*n, b3 : n
 
            BigInteger res1 = b1.multiply(BigInteger.valueOf(n)).multiply(BigInteger.valueOf(2));
            res1=res1.subtract(b1.multiply(BigInteger.valueOf(4)));
            res1=res1.add(b2.multiply(BigInteger.valueOf(10)));
            res1=res1.subtract(b3.multiply(BigInteger.valueOf(8)));
            res1=res1.add(BigInteger.valueOf(3));
 
            res1=res1.multiply(BigInteger.valueOf(m));
            res1=res1.divide(BigInteger.valueOf(3));
 
            System.out.println(res1.mod(BigInteger.valueOf(1000000007)));
        }
    }
}