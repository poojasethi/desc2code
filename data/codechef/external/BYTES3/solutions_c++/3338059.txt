//Catalan Numbers Pantheon(BIT 2012)

#include<bits/stdc++.h>
#define  mp make_pair
#define MOD 1000000007
#define sc(n) scanf("%d",&n);
#define p(n)   printf("%d",n);
#define nl      printf("\n");

using namespace std;


int arr[10001];
#define mod 1000000007

long long int powr(long long int a,long long int p,long long int mm)
{
     if(p==0) return 1;
     else if(p%2==0)
     {
         long long int x= powr(a,p/2,mm);
         return (x*x)%mm;
     }
     else return (a%mm * powr(a,p-1,mm)%mm)%mm;
}

long long fact[2000001];


int main()
{
	
	



	
	long long n,m;
fact[0]=1;
for(int i=1;i<=2000001;i++)
{
	fact[i]=(i*fact[i-1])%mod;
}

int t;
sc(t)
while(t--)
{
	cin>>n;
	long long ans;
	ans=fact[2*n];
	ans=(ans*powr(fact[n],mod-2,mod))%mod;
	ans=(ans*powr(fact[n],mod-2,mod))%mod;
	ans=(ans*powr(n+1,mod-2,mod))%mod;
	
cout<<ans<<endl;	
}


	return 0;
}



