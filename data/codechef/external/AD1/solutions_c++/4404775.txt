// Primality testing
#include <iostream>
#include <cstring>
#include <cstdlib>
#define ll long long
#define ULL unsigned long long int 
#define tc() ll t ; std::cin>>t ; while(t--)
using namespace std;
const ULL SQRT_MAX = 1ULL << 32; // constraint 

ULL multiply_mod(ULL x, ULL y, ULL mod) //(a*b)%c
{
    if (x < SQRT_MAX && y < SQRT_MAX)
        return (x*y)%mod;
 
    ULL res = 0;
    ULL tmp = y%mod;
    while (x)
    {
        if ((x & 1) && (res += tmp) >= mod)
            res -= mod;
        tmp <<= 1;
        if (tmp >= mod)
            tmp -= mod;
        x >>= 1;
    }
    return res;
}
ULL power_mod(ULL base, ULL exp, ULL mod) // Exponentiation by Squaring
{
    ULL result = 1;
    while(exp)
    {
        if (exp&1)
        result = multiply_mod(result, base, mod);
        exp >>= 1;
        base = multiply_mod(base, base, mod);
    }
 
    return result;
}

ll test(ULL n , ULL a) // (a*b)%c
{
    ULL s = n-1;
    int r = 0;
    while (!(s & 1))
        s >>= 1, r++;
    ULL t = power_mod(a, s, n);
    if (t == 1 || t == n-1)
        return 1;
    while (--r)
        if ((t = multiply_mod(t, t, n)) == n-1)
        return 1;
    return 0;

}
 

int isprime(long long n)
{
    if (n<2 || !(n & 1))
        return n == 2;
    return test(n, 2) && test(n, 3) && test(n, 5) && test(n, 7) && test(n, 11);
}

int main()
{

    tc()
    {
        ll num ;
        cin>>num;
         if(isprime(num)) cout<<"YEAH"<<endl ;
        else
        {
            int count = 0 ;
            printf("NAA\n");;
            for(ll i = num + 1 ; i <=1000000000000LL ; i++ )
            {
                if(isprime(i))
                {
                    count++;
                    if(count <= 10)
                    printf("%lld ",i);
                    else
                        break;
                }
            }
            printf("\n");
        }
    }
        return 0;
}

// By Pheonix 