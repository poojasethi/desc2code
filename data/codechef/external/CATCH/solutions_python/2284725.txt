#include<iostream>
using namespace std ;
// copied from wikipedia.
int binary_search(int A[], int key, int imin, int imax)
{
  // continue searching while [imin,imax] is not empty
  while (imax >= imin)
    {
      /* calculate the midpoint for roughly equal partition */
      int imid = (imin + imax)/ 2;
 
      // determine which subarray to search
      if (A[imid] < key)
        // change min index to search upper subarray
        imin = imid + 1;
      else if (A[imid] > key)
        // change max index to search lower subarray
        imax = imid - 1;
      else
        // key found at index imid
        return imid;
    }
  // key not found
  return imax ;
}
int main()
{
	int Arry[1001],length[1001],listing[1001],count,n,i,j,k,l,m,t ;
	cin >> t ;
	while(t--)
	{
		cin >> n ;
		if(n == 1)
		{
			cout << "1"  << endl ;
			continue ;
		}
		for(i=1;i<=n;i++)
		{
			length[i] = 0 ;
			cin >> Arry[i] ;
		}

		count = 1 ;
		length[1] = 1 ;
		listing[1] = Arry[1] ;

		for(i=2;i<=n;i++)
		{
			j = binary_search(listing,Arry[i],1,count) ;
			if(j == count)
			{
				count += 1 ;
				length[count] = length[count-1] + 1 ;
				listing[count] = Arry[i] ;

			}else
			{
				listing[j+1] = Arry[i] ;			
			}

		}
		cout << count << endl ;
	}
	return 0 ;
}