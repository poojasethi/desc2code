#include<bits/stdc++.h>
#define s(a) scanf("%lld",&a)
using namespace std;
typedef long long int LLD;
LLD t,n,m,a1,a2,b1,b2,MOD;
LLD p1[303][303],p2[303][303];
LLD modulo(LLD a,LLD b,LLD c){
    LLD x=1,y=a; // long long is taken to avoid overflow of intermediate results
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}
inline LLD modexp(LLD a,LLD b)
{
	LLD ans=1;
	while(b)
	{
		if(b&1)
		{
			ans=(ans*a)%MOD;
			b--;
		}
		a = (a*a)%MOD;
		b=b/2;
	}  
	return ans%MOD;
}
LLD rowmax[303],colmax[303];
LLD rvalue[303][303];
int main()
{
	s(t);
	LLD i,j;
	while(t--)
	{
		s(n);
		s(m);
		s(a1);s(a2);s(b1);s(b2);s(MOD);
		for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			rvalue[i][j]=0;
			p1[i][j]=modulo((a1*i+a2*j)%MOD,(MOD-2),MOD);
			p2[i][j]=modulo((b2*i+b1*j)%MOD,(MOD-2),MOD);	
		}
		LLD temp;
		for(i=1;i<=n;i++)
		{
			temp=-1;
			for(j=1;j<=m;j++)
				if(p2[i][j]>temp)
					temp=p2[i][j];
			for(j=1;j<=m;j++)
				if(p2[i][j]==temp) rvalue[i][j]++;
		}
		for(i=1;i<=m;i++)
		{
			temp=-1;
			for(j=1;j<=n;j++)
				if(p1[j][i]>temp)
					temp=p1[j][i];
			for(j=1;j<=n;j++)
				if(p1[j][i]==temp) rvalue[j][i]++;
		}
		bool flag = 0;
		vector<pair<int,int> > v;
		int row[303]={0},col[303]={0};
		for(i=1;i<=n;i++)
		for(j=1;j<=m;j++)
		{
			if(!flag && rvalue[i][j]==2)
			{
				cout<<i<<" "<<j<<endl;
				flag=1;
				i=n;break;
			}
		}
		if(!flag)printf("-1\n");
	}
	return 0;
}
