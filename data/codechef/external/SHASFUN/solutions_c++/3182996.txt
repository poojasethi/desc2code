#include <iostream>
#include <sstream>
#include <cstdio>
#include <climits>
#include <cstdlib>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <string>
#include <deque>
#include <bitset>
#include <map>
#include <set>
#include <stack>
#include <list>
#include <vector>
#include <queue>

#define FORN(i,a,b) for (int i = (a); i <= (b); i++)
#define FOR(i,a,b) for (int i = (a); i < (b); i++)
#define SI ({int x; scanf("%d%*c", &x); x;})
#define SL ({long long int x; scanf("%lld%*c", &x); x;})
#define PN(x) ({printf("%d\n", x);})
#define PLN(x) ({printf("%lld\n", x);})
#define PS(x) ({printf("%d ", x);})
#define PLS(x) ({printf("%lld ", x);})
#define NL ({printf("\n");})
#define printarr(i, x, y) ({for(int i=0;i<y;i++){ printf("%d ", x[i]);} printf("\n");})
#define inputarr(i, x, y) ({for(int i=0;i<y;i++){ scanf("%d", &x[i]);}})
#define LL long long
#define PI 3.14285714286
#define U unsigned
#define MP(a,b) make_pair(a,b)
#define pb(a) push_back(a)
#define INF 0x3f3f3f3f
#define gc getchar_unlocked
#define UPPER(s) transform(s.begin(),s.end(),s.begin(),std::ptr_fun<int, int>(std::toupper));
#define LOWER(s) transform(s.begin(),s.end(),s.begin(),std::ptr_fun<int, int>(std::tolower));
#define COUNT(a,val) count(a.begin(),a.end(),val)

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

inline int gcd(int a, int b) {
while(b) b^=a^=b^=a%=b;
return a;
}

using namespace std;
LL p1[302][302], p2[302][302];
/*long long int powmod(LL int a,LL int b,LL int c){
    long long x=1,y=a;
    while(b > 0){
        if(b%2 == 1){
            x=(x*y)%c;
        }
        y = (y*y)%c; // squaring the base
        b /= 2;
    }
    return x%c;
}*/
LL MOD;
LL powmod(LL N,LL P)
{
	if(P==0)
		return 1;
	LL Res = powmod(N,P/2);
	if(P&1)
		return (((Res*Res)%MOD)*N)%MOD;
	else
		return (Res*Res)%MOD;
}
int main()
{
	int test;
	scanf("%d", &test);
	while(test--)
	{
		LL rows, cols,a1,a2,b1,b2,m;
		scanf("%lld%lld", &rows, &cols);
		scanf("%lld%lld%lld%lld%lld", &a1, &a2, &b1, &b2, &m);
		LL rowmax[302], colmax[302];
		memset(rowmax, 0, sizeof(rowmax));
		memset(colmax, 0, sizeof(colmax));
		MOD = m;
		FOR(i,0,rows)
		{
			FOR(j,0,cols)
			{	
				p1[i][j]= powmod(a1*(i+1) + a2*(j+1), m-2);
				p2[i][j]= powmod(b2*(i+1) + b1*(j+1), m-2);
				rowmax[i] =max(rowmax[i], p2[i][j]);
			}
		}
		FOR(i,0,cols)
		{
			FOR(j,0,rows)
			{
				colmax[i] = max(colmax[i], p1[j][i]);
			}
		}
		bool tog=0;
		int nashrow, nashcol=-1;
		FOR(i,0,rows)
		{
			FOR(j,0,cols)
			{
				if(p1[i][j] == colmax[j] && p2[i][j]== rowmax[i])
				{
					tog=1;
					nashrow = i; nashcol = j; break;
				}
			}
			if(tog)
				break;
		}
		if(nashcol!=-1)
			printf("%d %d\n", nashrow+1, nashcol+1);
		else printf("-1\n");
	}
	return 0;
}
