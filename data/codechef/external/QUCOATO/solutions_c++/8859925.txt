
#include <bits/stdc++.h>
using namespace std;
#define MOD 1000000007
#define pii pair<int, int>
#define pll pair<long long, long long>
#define vi  vector<int>
#define pb  push_back
#define mp  make_pair
#define ALL(x) x.begin(),x.end()
#define M(a,x) memset(a,x,sizeof(a))
#define sci(x) scanf("%d",&x);
#define scl(x) scanf("%lld",&x);
#define scs(x) scanf("%s",x);
#define print(x) printf("%d",x);
#define nl printf("\n")
#define printl(x) printf("%lld",x)
#define F(i,a,n) for(int i=a;i<n;i++)
#define INF 100000000000000000LL
#define LL long long
#define fr first
#define se second
int a[105];
int fib[50];
int dp[10005];

int grundy(int n) {
    if(n==0) {
	return 0;
    }
    if(dp[n]!=-1) {
	return dp[n];
    }
    int mex[60]={0};
    F(i,0,20) {
	if(fib[i]<=n) {
	    mex[grundy(n-fib[i])]=1;
	}
    }
    int cnt=0;
    while(mex[cnt]) cnt++;
    return dp[n]=cnt;
}
int ans[10005][2];

int solve(int n,int win) {
    if(n==0) return 0;
    if(ans[n][win]!=-1) {
	return ans[n][win];
    }
    int ret;
    if(win) {
	ret = MOD;
	F(i,0,20) {
	    if(fib[i]<=n) {
		int nx = n-fib[i];
		if(grundy(nx)==0) ret = min(ret,1+solve(nx,1-win));
	    }
	}
    }
    else {
	ret = 0;
	F(i,0,20) {
	    if(fib[i]<=n) {
		int nx = n-fib[i];
		ret=max(ret,1+solve(nx,1-win));
	    }
	}
    }
    return ans[n][win]=ret;
}
vector<pii> v;

int main() {
    M(dp,-1);
    M(ans,-1);
    fib[0]=1;
    fib[1]=1;
    for(int i=2;i<=20;i++) {
	fib[i]=fib[i-1]+fib[i-2];
    }
    int t;sci(t);
    while(t--) {
	v.clear();
	int n;sci(n);
	F(i,0,n) {
	    sci(a[i]);
	    int x=grundy(a[i]);
	    x=min(x,1);
	    v.pb(mp(solve(a[i],x),1-x));
	}
	sort(v.begin(),v.end());
	if(v[0].se==0) {
	    printf("Alice %d\n",v[0].fr);
	}
	else {
	    printf("Bob %d\n",v[0].fr);
	}
    }
    return 0;
}
