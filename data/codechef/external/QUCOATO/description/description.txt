STATEMENT

Quark is here and Alice and Bob are attending. They have decided to play one of their old games.


The game starts with N piles, each containing some non-negative number of stones. In each move a player has to remove a positive amount of stones from each pile. However, they alter the obvious game mechanic and decide that the number of stones removed from each pile must be a fibonacci number. The number of stones removed from different piles can be different.


The first player unable to make a move loses the game. Of course, each player plays optimally.


They have attracted a crowd and to entertain them the loser decides to prolong the game as long as he or she can whereas the winner tries to win as fast as he or she can to show off. As always, Alice makes the first move.


You job is to determine who will win and how many moves it will take for the game to finish, so that the crowd can be dispersed and we can carry on with the festival.


Fibonacci numbers: f[0] = 1 || f[1] = 1 || f[i] = f[i - 1] + f[i - 2]

INPUT

The first line will contain an integer T, denoting the number of test cases.


Each test case contains two lines.


The first line of each test case will contain an integer N, the number of piles.


The second line contains N space seperated integers, the number of stones in each pile.


1 <= T <= 100
1 <= N <= 100
0 <= stones in a pile <= 10000

OUTPUT

For each test case, print one line with the name of the winner followed by a space and the number of moves it will take for the game to be over.

EXAMPLE

INPUT
2
5
1 4 6 7 9
2
10 11

OUTPUT
Alice 1
Bob 4

EXPLANATION
In the first case, Alice can reduce the first pile to 0 thereby preventing Bob from making any moves. Therefore, Alice wins in one move.
