#include<bits/stdc++.h>
using namespace std;

#define FOR(_i,_a,_b) for(int _i=_a;_i<=_b;_i++)
#define TCASE int _t;scanf("%d",&_t);FOR(_i,1,_t)
#define NFOR(_i,_a,_b) for(int _i=_a;_i>=_b;_i--)
#define pb push_back
#define all(_vec) _vec.begin(),_vec.end()
#define READ(x) freopen(x,"r",stdin);
#define VECTORPRINT(_vec) {int _t=0;while(_t<_vec.size()){cout<<_vec[_t++]<<' ';}}
#define whatis(x) cout<<#x<<"= "<<x<<endl;
//#define REP(i,n) for (int i = 1; i <= n; i++)
#define REP(i, n) for(int i=0;i<n;i++)

typedef vector<int> vi;
typedef vector<pair<int,int> > vpii;
typedef long long lli;
typedef unsigned long long ulli;
typedef vector<lli> vlli;
typedef vector<vector<lli> > matrix;

const int sz=1000*100+100;
const int k=2;
int mod;

void mul(lli a[k+1][k+1],lli b[k+1][k+1]){
    lli tmp[k+1][k+1]={0};
    FOR(i,1,k) FOR(j,1,k) FOR(kk,1,k)
        tmp[i][j]=(tmp[i][j]+a[i][kk]*b[kk][j]) % mod;
    FOR(i,1,k) FOR(j,1,k) a[i][j]=tmp[i][j];
}

void power(lli t[k+1][k+1],lli n){
    if(n==1) return;
    lli iden[k+1][k+1]={0,0,0,0,1,0,0,0,1};
    while(n){
    if(n%2==1) mul(iden,t);
    mul(t,t);
    n/=2;
    }
    FOR(i,1,k) FOR(j,1,k) t[i][j]=iden[i][j];
}

vi primes;
int sievearr[sz +1];

void create_seive(int n){
    for(int i=2;i*i<=n;i++)
        if(sievearr[i]==0)
            for(int j=i*i;j<=n;j+=i)
                sievearr[j]=1;
    FOR(i,2,n)
        if(sievearr[i]==0)
            primes.pb(i);
}

lli fastexpo(lli a,int b){
    lli res=1;
    while(b){
        if(b&1) res*=a;
        a=a*a;
        b/=2;
    }
    return res;
}

int main(){
#ifndef ONLINE_JUDGE
    READ("in.txt")
#endif
create_seive(sz);
int len=primes.size();

TCASE{
    lli n,r;
    lli tmp,a;
    cin>>n>>r>>mod;
    if( mod == 1 || n < r){
            cout<<0<<endl;
            continue;
    }

    vlli factors(n+1,0);

int p;
FOR(j,n-r+1,n){
    tmp=j;
    for(int i=0;primes[i]*primes[i]<=tmp;++i){
        p=primes[i];
        while(tmp%p==0){factors[p]+=1; tmp/=p;}
    }
    if(tmp!=1)
        factors[tmp]+=1;

    tmp=j-(n-r);
    for(int i=0;primes[i]*primes[i]<=tmp;++i){
        p=primes[i];
        while(tmp%p==0){factors[p]-=1; tmp/=p;}
    }
    if(tmp!=1)
        factors[tmp]-=1;
}

    lli ans[k+1][k+1]={0};
    ans[1][1]=0; ans[1][2]=1;
    ans[2][1]=1; ans[2][2]=1;
    //FOR(i,0,k) FOR(j,0,k) cout<<ans[i][j]<<" \n"[j==k];
    for(int i=0;primes[i]<=n;i++){
        p=primes[i];
        if(factors[p]==0) continue;
        //FOR(j,1,factors[i])
            power(ans,fastexpo(p,factors[p]) );
    }
    //cout<<"ans"<<endl;
    //FOR(i,0,k) FOR(j,0,k) cout<<ans[i][j]<<" \n"[j==k];

    lli inv[k+1][k+1]={0};
    inv[1][1]=-1; inv[1][2]=1;
    inv[2][1]=1; inv[2][2]=0;

    mul(ans,inv);

    vi f1(k+1);
    f1[1]=1;
    f1[2]=1;

    lli res=0;
    FOR(i,1,k)
        res=(res+ans[1][i]*f1[i]) % mod;

    cout<<res<<endl;
}

return 0;
}
