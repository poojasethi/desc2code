// copied https://www.codechef.com/viewplaintext/3490886

#include <cstring>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cassert>

using namespace std;

const int N = 100010;

int p[N];

void add(int *cnt, int x, int q) {
  while (x > 1) {
    cnt[p[x]] += q;
    x /= p[x];
  }
}

long long mul(long long a, long long b, long long c) {
  a %= c; b %= c;
  long long d = 0;
  while (b > 0) {
    if (b & 1) {
      d += a;
      if (d >= c) d -= c;
    }
    b >>= 1;
    a <<= 1;
    if (a >= c) a -= c;
  }
  return d;
}

int cnt[N];

int main() {
  for (int i = 1; i < N; i++) p[i] = i;
  for (int i = 2; i * i < N; i++)
    if (p[i] == i)
      for (int j = i * i; j < N; j += i) p[j] = i;
  int tt;
  scanf("%d", &tt);
  while (tt--) {
    int n, r, m;
    scanf("%d %d %d", &n, &r, &m);
    int md = m;
    long long period = 1;
    for (int i = 2; i * i <= m; i++)
      if (m % i == 0) {
        if (i == 2) period *= 3; else
        if (i == 5) period *= 20;
        else period *= 1LL * (i - 1) * (i + 1);
        m /= i;
        while (m % i == 0) {
          period *= i;
          m /= i;
        }
      }
    if (m > 1) {
      int i = m;
      if (i == 2) period *= 3; else
      if (i == 5) period *= 20;
      else period *= 1LL * (i - 1) * (i + 1);
    }
    for (int i = 1; i <= n; i++) cnt[i] = 0;
    for (int i = 1; i <= n; i++) add(cnt, i, 1);
    for (int i = 1; i <= r; i++) add(cnt, i, -1);
    for (int i = 1; i <= n - r; i++) add(cnt, i, -1);
    long long pw = 1;
    for (int i = 1; i <= n; i++)
      for (int j = 0; j < cnt[i]; j++) pw = mul(pw, i, period);
    long long a[2][2], b[2][2], c[2][2];
    a[0][0] = 0; a[0][1] = 1;
    a[1][0] = 1; a[1][1] = 1;
    b[0][0] = 1; b[0][1] = 0;
    b[1][0] = 0; b[1][1] = 1;
    long long step = 1LL << 62;
    while (step > 0) {
      for (int i = 0; i < 2; i++)
        for (int j = 0; j < 2; j++) c[i][j] = (b[i][0] * b[0][j] + b[i][1] * b[1][j]) % md;
      for (int i = 0; i < 2; i++)
        for (int j = 0; j < 2; j++) b[i][j] = c[i][j];
      if (step & pw) {
        for (int i = 0; i < 2; i++)
          for (int j = 0; j < 2; j++) c[i][j] = (b[i][0] * a[0][j] + b[i][1] * a[1][j]) % md;
        for (int i = 0; i < 2; i++)
          for (int j = 0; j < 2; j++) b[i][j] = c[i][j];
      }
      step >>= 1;
    }
    cout << (b[0][1] % md) << endl;
  }
  return 0;
}
