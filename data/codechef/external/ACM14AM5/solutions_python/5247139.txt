#include <cstdio>

#define MOD 1000000007LL

using namespace std;
typedef long long LL;

inline LL mpow(LL, LL);
const LL _9 = mpow(9, MOD - 2);     // _9 = 111111112
const int LM = 10010;

inline LL mpow(LL a, LL b) {
  LL ans = 1;
  while(b > 0) {
    if(b & 1) ans = (ans * a) % MOD;
    a = (a * a) % MOD;
    b >>= 1;
  }
  return ans;
}

LL q(LL x) {
  if(x < 0) return 0;
  LL t = mpow(10LL, x + 1);
  if(t) t--;    
  else t = MOD - 1;
  return (t * _9) % MOD;
}

LL p(LL x) {
  if(x < 0) return 0;
  LL t1 = mpow(10LL, x);
  LL t3 = t1 - 1LL; 
  if(t3 < 0) t3 += MOD;
  t3 = (t3 * _9) % MOD;
  LL t2 = ((x % MOD) * t1) % MOD;
  t1 = t2 - t3;
  if(t1 < 0) t1 += MOD;
  t1 = (t1 * _9) % MOD;
  return (t1 * 45) % MOD;
}

int main() {
  LL s[10];
  s[0] = s[1] = 0; for(int i = 2; i < 10; i++) s[i] = s[i - 1] + (i - 1);
  int T;
  scanf("%d", &T);
  while(T--) { 
    int m, d[LM]; 
    LL l[LM], t1, t2, t3;
    scanf("%d", &m);
    for(int i = m - 1; i >= 0; i--) scanf("%lld %d", &l[i], &d[i]);
    LL ans1 = 0, ans2 = 0, idx = -1, num = 0;
    for(int i = 0; i < m; i++) { 
      t1 = (((d[i] * (num + 1)) % MOD) * (l[i] % MOD)) % MOD;
      t2 = (d[i] * d[i] * mpow(10LL, idx + 1)) % MOD;
      t3 = mpow(10LL, l[i]) - 10LL; 
      if(t3 < 0) t3 += MOD;
      t3 = (((t3 * _9) % MOD) - (l[i] % MOD) + 1 + MOD) % MOD; 
      t3 = (t3 * _9) % MOD;
      t2 = (t2 * t3) % MOD;
      ans2 = (ans2 + t1 + t2) % MOD;
  
      t1 = p(idx + l[i]) - p(idx); 
      if(t1 < 0) t1 += MOD;
      ans1 = (ans1 + d[i] * t1) % MOD;
      t1 = q(idx + l[i]) - q(idx);
      if(t1 < 0) t1 += MOD;
      num = (num + d[i] * t1) % MOD;
      ans1 = (ans1 + s[d[i]] * t1) % MOD;
      idx += l[i];
    }
    ans1 += ans2;
    if(ans1 >= MOD) ans1 -= MOD;
    printf("%lld\n", ans1);
  }
  return 0;
}
