#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <memory.h>
#include <cstring>
using namespace std;
long long len[20000];
long long dig[20000];
long long mod=1000000007;
map<long long,long> dp;
long long powmod(long long x, long long n) {
	long long nn=n;
	if(x==10 && dp[nn]!=0)
	return dp[nn];
    long long w=1,p=x;
    while (n) {
        if (n%2) w=(w%mod*p%mod)%mod;
        p=(p%mod*p%mod)%mod;
        n/=2;
    }
    if(x==10)
    dp[nn]=w;
    return w%mod;
    }
long long getagp(long long n)
{
	if(n<=0)
		return 0;
 
	n--;
	long long x=(9*( ( (n%mod+1)*powmod(10,n+1) )%mod-1+mod))%mod - (10*(powmod(10,n)-1+mod)%mod)%mod + mod;
	x=x%mod;
	x=(x*powmod(81,mod-2))%mod;
	x=(x*10)%mod;
	return x;
}
long long getgp(long long n)
{
	if(n<0)
		return 0;
	long long x=(powmod(10,n+1)-1+mod)%mod;
	x=(x*powmod(9,mod-2))%mod;
	return x;
}
long long getagp1(long long n)
{
	if(n<0)
		return 0;
	n++;
	long long a=n;
	long long r=10;
	long long x=( (((powmod(10,n)-n%mod+mod)%mod)*9)%mod + ((powmod(10,n-1)-1+mod)%mod*10)%mod )%mod;
	x=(x*powmod(81,mod-2))%mod;
	return x;
 }
int main()
{
	//cout<<getagp1(0)<<endl;
	int t;
	scanf("%d",&t);
	while(t--)
	{
		long long m;
		scanf("%lld",&m);
		long long tot=0;
		for(int i=0;i<m;i++)
		{
			scanf("%lld %lld",&len[i],&dig[i]);
			tot=tot+len[i];
		}
		long long ctot=tot;
		long long ans=0;
		for(int i=0;i<m;i++)
		{
 
			long long x=((((getagp(tot-1)-getagp(tot-len[i]-1)+mod)%mod*45)%mod)*dig[i])%mod;
			x=(x*powmod(10,mod-2))%mod;
			long long y=(getgp(tot-1)-getgp(tot-len[i]-1)+mod)%mod;
			y=((y*dig[i])%mod*(dig[i]-1))%mod;
			y=(y*powmod(2,mod-2))%mod;
			ans=((ans+x)%mod+y)%mod;
			//cout<<x<<endl;
			tot=tot-len[i];
		//	cout<<ans<<endl;
		}
		long long arr[m];
		tot=0;
		
		///ans=0;
		for(int i=m-1;i>=0;i--)
		{
			if(i==m-1)
			{
				arr[i]=(dig[i]*getgp(len[i]-1))%mod;
				//cout<<len[i]-2<<endl;
				tot=tot+len[i];
				//cout<<getagp1(5)<<endl;
				ans=(ans+ (((((getagp1(len[i]-2)*powmod(10,tot-len[i]))%mod*dig[i])%mod + len[i])%mod )%mod*dig[i])%mod)%mod;
				//cout<<ans<<endl;
				
			}
			else
			{	
				tot=tot+len[i];
				//cout<<"-----"<<((getagp1(len[i]-2)*powmod(10,tot-len[i]))%mod*dig[i])<<endl;
				ans=(ans+ (((((getagp1(len[i]-2)*powmod(10,tot-len[i]))%mod*dig[i])%mod + (len[i]%mod*(arr[i+1]+1)%mod)%mod)%mod )%mod*dig[i])%mod)%mod;
				arr[i]=(arr[i+1]+(((dig[i]*getgp(len[i]-1))%mod)*(powmod(10,tot-len[i] )))%mod)%mod;
				//cout<<getgp(4)<<endl;
			}
			//cout<<ans<<endl;
			//cout<<arr[i]<<endl;
 
		}
		//cout<<ans<<endl;
 		printf("%lld\n",ans);
	}
	
	return 0;
 
} 