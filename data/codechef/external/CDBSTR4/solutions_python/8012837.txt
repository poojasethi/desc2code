//Autor: Mateusz Wasylkiewicz
//Zawody: Code Brunch
//Strona: http://www.codechef.com/CDBR2015/
//Zadanie: N-Prime-Divisors
//Czas: O(MAX(Y)*log(MAX(Y))+T)
#include <bits/stdc++.h>
using namespace std;

#define REP(x, n) for (int x = 0; x < (n); x++)
#define FOR(x, a, b) for (int x = (a); x <= (b); x++)

const int MAX = 100100, MAX_N = 12;
int pierwszosc[MAX], suma[MAX_N][MAX];

void wypelnij_pierwszosc()
{
	fill(pierwszosc, pierwszosc + MAX, 0);
	FOR(i, 2, MAX - 1)
		if (pierwszosc[i] == 0)
			for (int j = i; j < MAX; j += i)
				pierwszosc[j]++;
}

void wypelnij_suma()
{
	REP(i, MAX_N)
	{
		suma[i][0] = 0;
		FOR(j, 1, MAX - 1)
			suma[i][j] = suma[i][j - 1] + (pierwszosc[j] == i ? 1 : 0);
	}
}

void przygotuj_sie()
{
	wypelnij_pierwszosc();
	wypelnij_suma();
}

int zapytanie(int X, int Y, int N)
{
	return suma[N][Y] - suma[N][X - 1];
}

void zrob_test()
{
	int X, Y, N;
	cin >> X >> Y >> N;
	cout << zapytanie(X, Y, N) << '\n';
}

int main()
{
	ios_base::sync_with_stdio(false);
	cin.tie(NULL);
	przygotuj_sie();
	int T;
	cin >> T;
	while (T--)
		zrob_test();
	return 0;
}
