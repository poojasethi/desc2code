#include<bits/stdc++.h>

#define gc getchar_unlocked


using namespace std;
vector<int> Nprime[10]; 

vector<int> primeNumbers;
int coun;

bool primes[100008];
int primeCount[100005];


void sieve(int n)
{
	int i ,j;
	memset(primes,true,sizeof(primes));
	primes[0] = false;
	primes[1] = false;
	primes[2] = true;

	coun = 0;



	for(i = 2 ;i*i <= n ; i++)
	{
		if(primes[i])
		{
			//primeNumbers.push_back(i);
			//coun++;
			for(j =i*i; j<=n ;j += i)
				primes[j] = false;
		}

	}
	for(i=2;i<=n;i++)
	{
		if(primes[i])
		{
		primeNumbers.push_back(i);
		coun++ ;
		}
	}

	


}


void pre()
{
	int i,j,k,n,cnt,flag,s;
	primeCount[0] = 0;
	primeCount[1 ] = 0;

	for(i = 2 ;i <= 100005;i++)
	{
		//cout<<i<<endl;
		 k = 0;
		 s = i;
		 if(primes[i])
		 {
		 	Nprime[0].push_back(i);
		 	primeCount[i] = 1;
		 	continue;
		 }
		for(j=0 ; primeNumbers[j]*primeNumbers[j] <= s ; j++)
		{
			if(s%primeNumbers[j] == 0)
			{
				k++;
				while (s % primeNumbers[j] == 0)

				{
					s = s/primeNumbers[j];
				}
				break;
			}

			
		}
		if(k>0)
			{
				primeCount[i] = k + primeCount[s];
				if(primeCount[i] <= 10)
					Nprime[primeCount[i] - 1].push_back(i);
			}

		

	}


}

typedef long long int lli;
void scanInt(lli &x)
{
    register lli c = gc();
    x = 0;
    lli neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int main()
{
	sieve(100004);
	
	int i,k = primeNumbers.size(); 
	//cout<<k<<"jee"<<endl;
	//for(i=0;i< k;i++)
	//	cout<<primeNumbers[i]<<" ";

	pre();

	/*k = Nprime[3].size();

	for(i=0;i< 1000;i++)
		cout<<Nprime[2][i]<<" ";*/

	lli t,x,y,n;
	cin>>t;

	while(t--)
	{
		scanInt(x);
		scanInt(y);
		scanInt(n);

		printf("%d\n", (int) (upper_bound( Nprime[n-1].begin(), Nprime[n-1].end(),y ) - lower_bound( Nprime[n-1].begin(), Nprime[n-1].end(),x ) ) );
	}


	return 0;

}