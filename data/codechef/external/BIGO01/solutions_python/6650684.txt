#include<iostream>
#include<cstring>
using namespace std;
int dp[101][101][101][101];
int max(int a,int b, int c,int d)
{
	a = a>b? a: b;
	a = a>c ? a:c;
	a = a>d ? a:d;
	return a;
}
int main()
{
	int t;
	string s,s1,s2,s3;
	cin>>t;
	while(t--)
	{
		cin>>s>>s1>>s2>>s3;
		int i,j,k,l;
		for(i=1;i<=s.size();i++)
			for(j=1;j<=s1.size();j++)
				for(k=1;k<=s2.size();k++)
					for(l=1;l<=s3.size();l++)
					{
						dp[i][j][k][l] = max(dp[i][j][k][l-1], dp[i][j][k-1][l], dp[i][j-1][k][l], dp[i-1][j][k][l]);
						if(s[i-1] == s1[j-1] && s[i-1] == s2[k-1] && s[i-1] == s3[l-1])
							dp[i][j][k][l] = dp[i][j][k][l] > dp[i-1][j-1][k-1][l-1] + 1 ? dp[i][j][k][l] : dp[i-1][j-1][k-1][l-1] + 1;
					}
		cout<<i+j+k+l-4 - 4*dp[i-1][j-1][k-1][l-1]<<endl;
		memset(dp,0,sizeof(dp));
	}
	return 0;
}
