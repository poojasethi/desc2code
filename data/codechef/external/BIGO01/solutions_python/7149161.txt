//Longest common subsequence :-
#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<map>
#include<set>
#include<queue>
#include<utility>
#include<cstring>
#include<cmath>
#define LL long long int
#define mod 1000000007
#define vi vector<int>
#define vvi vector < vi >
#define pii pair<int,int>
#define all(c) c.begin(),c.end()
#define sf(x) scanf("%d",&x);
#define sf2(x,y) scanf("%d%d",&x,&y);
#define mem(a,val) memset(a,val,sizeof(a))
#define nl printf("\n");
#define pb push_back
#define mp make_pair
//#define f first
//#define s second
#define cf I64
using namespace std;

int main()
{	int t,i,j,k,l,n,m,ans,len1,len2,len3,len4;
	char s1[102],s2[102],s3[102],s4[102];
	sf(t);
	while(t--)
	{	/*scanf("\n");gets(s1);
		scanf("\n");gets(s2);
		scanf("\n");gets(s3);
		scanf("\n");gets(s4);*/
		cin>>s1>>s2>>s3>>s4;
		len1=strlen(s1);
		len2=strlen(s2);
		len3=strlen(s3);
		len4=strlen(s4);
		int dp[len1+2][len2+2][len3+2][len4+2];
		for(i=0;i<=len1;i++)
		{	for(j=0;j<=len2;j++)
			{	for(k=0;k<=len3;k++)
				{	for(l=0;l<=len4;l++)
					{	if(i==0||j==0||k==0||l==0) 
						{	dp[i][j][k][l]=0;
							continue;
						}
						if((s1[i-1]==s2[j-1])&&(s2[j-1]==s3[k-1])&&(s3[k-1]==s4[l-1]))
							dp[i][j][k][l]=1+dp[i-1][j-1][k-1][l-1];
						else
						{	//dp[i][j][k][l]=dp[i-1][j-1][k-1][l-1];		
							ans=max(max(dp[i][j][k][l-1],dp[i][j][k-1][l]),max(dp[i-1][j][k][l],dp[i][j-1][k][l]));		
							dp[i][j][k][l]=ans;
						}
					}
				}
			}
		}
		printf("%d\n",len1+len2+len3+len4-4*dp[len1][len2][len3][len4]);
	}
	return 0;
}