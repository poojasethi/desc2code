/**
	Author: Shuvojit
	Time: 2015-04-03-11.42
	Comment:
*/
#include<bits/stdc++.h>
#include<set>
#include<map>
#include<vector>
#include<stack>
#include<queue>
#define ll long long
using namespace std;
ll DP[101][101][101][101];
int main()
{
	int T,len1,len2,len3,len4;
	char s1[108];
	char s2[108];
	char s3[108];
	char s4[108];
	scanf("%d",&T);
	while(T--)
	{
        scanf("%s %s %s %s",&s1,&s2,&s3,&s4);
        len1=strlen(s1);
        len2=strlen(s2);
        len3=strlen(s3);
        len4=strlen(s4);

        for(int i=0;i<len1;i++)
            for(int j=0;j<len2;j++)
                for(int k=0;k<len3;k++)
                    for(int l=0;l<len4;l++)
                    DP[i][j][k][l]=0;


        for(int i=0;i<len1;i++)
        {
            for(int j=0;j<len2;j++)
            {
                for(int k=0;k<len3;k++)
                {
                    for(int l=0;l<len4;l++)
                    {
                        if(i==0 || j==0 || k==0 || l==0)
                        {
                           if(s1[i]==s2[j] && s2[j]==s3[k] && s3[k]==s4[l])
                            DP[i][j][k][l]=1;
                        }
                        else if(s1[i]==s2[j] && s2[j]==s3[k] && s3[k]==s4[l])
                            DP[i][j][k][l]=DP[i-1][j-1][k-1][l-1]+1;
                        else
                        DP[i][j][k][l]=max(DP[i-1][j][k][l],max(DP[i][j-1][k][l],max(DP[i][j][k-1][l],DP[i][j][k][l-1])));
                    }
                }
            }
        }

        printf("%d\n",len1+len2+len3+len4-4*DP[len1-1][len2-1][len3-1][len4-1]);
	}
	return 0;
}
