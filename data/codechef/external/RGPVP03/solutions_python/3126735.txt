#include<stdio.h>
#define left(i) (i<<1)
#define right(i) ((i<<1)+1)
#define swap(a,b) {int temp=a;a=b;b=temp;}


void max_heapify(int *heap,int i,int n)
{     
     if(i<n)
     {
            int maxPos=i;
            
            if((left(i)<=n)&&(heap[left(i)]>heap[maxPos]))
                                          maxPos=left(i); 
            if((right(i)<=n)&&(heap[right(i)]>heap[maxPos]))
                                          maxPos=right(i); 
            
            if(i!=maxPos) 
            {
                          swap(heap[i],heap[maxPos]);
                          max_heapify(heap,maxPos,n);
            }
     }
} 


void buildmaxheap(int *heap,int n)
{
     int i;
     for(i=n/2;i>=1;i--)
                        max_heapify(heap,i,n);
}


void heapsort(int *a,int n)
{
     int i;
     buildmaxheap(a,n);
     for(i=n;i>1;i--)
     {
             swap(a[1],a[i]);
             n--;
             max_heapify(a,1,n);
     }
} 


int main()
{
    int a[100000],n,t,i;
    scanf("%d",&t);
    while(t--)
    {
              scanf("%d",&n);
              for(i=1;i<=n;i++)
              {
                      scanf("%d",&a[i]);
              }
              if(n%2==0)
              printf("-1\n");
              else
              {
                  heapsort(a,n);
                  printf("%d\n",a[(n+1)/2]);
              }
    }
    return 0;
}
