def left_rotation(str):
	length = len(str)
	str1=""
	for i in range (1,length):
		str1 += str[i]
	str1 += str[0]
	return str1.lstrip('0')
def right_rotation(str):
	length = len(str)
	str1=str[length-1]
	for i in range (length-1):
		str1 += str[i]
	return str1.lstrip('0')
def left_right(str):
	str1= left_rotation(str)
	str1= right_rotation(str1)
	return str1
def right_left(str):
	str1= right_rotation(str)
	str1= left_rotation(str1)
	return str1

def digit(str):
	n = int(str)
	count=0
	while ( n):	
		count+=1
		n=n/10
	return count

cases = int(raw_input().strip())
for i in range(cases):
	max = -2
	str = raw_input().strip()
	str1 = str
	digits = digit(str)
	for i in range( digits):
		str1 = left_rotation(str1)
		if ( max< int(str1)):
			max= int(str1)
	str1 = str
	for i in range( digits):
		str1 = right_rotation(str1)
		if ( max< int(str1)):
			max= int(str1)
	str1 = str
	str1 = left_right(str1)
	if ( max< int(str1)):
		max= int(str1)
	str1 = str
	str1 = right_left(str1)
	if ( max< int(str1)):
		max= int(str1)
	print max
