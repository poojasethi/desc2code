def LR(N) :
	
	max = -1 
	
	num = str(N)
	
	if len(num) == 1 :
		return N
	else :
		for i in range(len(num)) :
			
			num = num[1:] + num[0]
			
			if max < int(num) :
				max = int(num)
			
			num = str(int(num))
			
		return max
		
def RR(N) :
 
	max = -1
	
	num = str(N)
	
	if len(num) == 1 :
		return max
	else :
	
		for i in range(len(num)) :
		
			num = num[len(num)-1] + num[0:len(num)-1]
			
			if max < int(num) :
				max = int(num)
			
			
			num = str(int(num))
		return max
T = int(raw_input())
 
while T :
	
	N = int(raw_input())
	
	LRM = LR(N)
	
	RRM = RR(N)
	
	
	s = str(N)
		
	s = s[1:] + s[0]
	s = str(int(s))
	s = s[len(s)-1] + s[0:len(s)-1]
	s = int(s)
		
	p = str(N)
		
	p = p[len(p)-1] + p[0:len(p)-1]
	p = str(int(p))
	p = p[1:] + p[0]
	p = int(p)
	
	
	print max ( LRM , RRM , s , p )
	
		
	T-=1 
