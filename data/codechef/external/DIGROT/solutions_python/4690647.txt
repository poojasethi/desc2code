def no_of_digits(n):
    digits=0
    while n>0:
        n/=10
        digits+=1
    return digits
def right_rot(n):
    if(n>9):
        res=n%10
        tmp=str(n/10)
        for x in tmp:
            res=res*10+int(x)
        return res
    else:
        return n

def left_rot(n):
    if(n>9):
        tmpstr=str(n)
        length=len(tmpstr)
        res=int(tmpstr[1:len(tmpstr)])
        return res*10+int(tmpstr[0])
    else:
        return n


t=int(raw_input())
while t>0:
    n=int(raw_input())
    nums=[]
    digits=no_of_digits(n)
    tmp=digits+1
    rr=right_rot(n)
    lr=left_rot(n)
    nums.append(left_rot(rr))
    nums.append(right_rot(lr))
    while tmp>0:
        nums.append(lr)
        lr=left_rot(lr)
        tmp-=1
    tmp=digits+1
    while tmp>0:
        nums.append(rr)
        rr=right_rot(rr)
        tmp-=1
    print max(nums)
    t-=1
