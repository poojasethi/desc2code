# code chef - easy  - digit rotation

def left(s):
    return str(int(s[-1]+s[:-1]))

def right(s):
    return str(int(s[1:]+s[0]))

nCases = int(raw_input())

for iter in range(nCases):
    number = raw_input()

    if len(number)==1:
        print number
        continue

    best = max(int(left(right(number))), int(right(left((number)))))

    rotNumber = number[:]
    for rot in range(len(number)):
        rotNumber = left(rotNumber)
        best = max(best, int(rotNumber))
        
    rotNumber = number[:]
    for rot in range(len(number)):
        rotNumber = right(rotNumber)
        best = max(best, int(rotNumber))

    print best

 
