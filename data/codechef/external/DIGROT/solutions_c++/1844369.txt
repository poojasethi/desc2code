#include <iostream>
#include <cstdio>
#include <cassert>
#include <string.h>
#include <map>
 
using namespace std;
 
int left(int x) {
    int y = x % 10;
    x /= 10;
    int p = 1;
    while (p <= x) p *= 10;
    return p * y + x;
}
 
int left_(int x) {
    char s[100];
    sprintf(s, "%d", x);
    int l = strlen(s);
    char c = s[0];
    for (int i = 1; i < l; i++) s[i-1] = s[i];
    s[l-1] = c;
    sscanf(s, "%d", &x);
    return x;
}
 
int right(int x) {
    int p = 1;
    while (p <= x) p *= 10;
    p /= 10;
    int y = x / p;
    x %= p;
    return x * 10 + y;
}
 
int right_(int x) {
    char s[100];
    sprintf(s, "%d", x);
    int l = strlen(s);
    char c = s[l-1];
    for (int i = l-1; i > 0; i--) s[i] = s[i-1];
    s[0] = c;
    sscanf(s, "%d", &x);
    return x;
}
 
int f(int x) {
    int res = 0;
    for (int i = 0; i < 10; i++) for (int j = 0; j < 10; j++) {
        if (i + j == 0) continue;
        int y = x;
        for (int ii = 0; ii < i; ii++) y = left(y);
        for (int jj = 0; jj < j; jj++) y = right(y);
        res = max(res, y);
        y = x;
        for (int jj = 0; jj < j; jj++) y = right(y);
        for (int ii = 0; ii < i; ii++) y = left(y);
        res = max(res, y);
    }
    return res;
}
 
map<int, int> w;
int q[(int)1e6];
int qn, ql;
int g(int x) {
    
    qn = ql = 0;
    q[ql++] = left_(x);
    w[left(x)] = 1;
    q[ql++] = right_(x);
    w[right(x)] = 1;
    while (qn < ql) {
        int x = q[qn++];
        
        int y = left(x);
        if (w[y] == 0) {
            q[ql++] = y;
            w[y] = 1;
        }
        y = right(x);
        if (w[y] == 0) {
            q[ql++] = y;
            w[y] = 1;
        }
    }
    int res = 0;
    for (int i = 0; i < ql; i++) res = max(res, q[i]);
    for (int i = 0; i < ql; i++) w[q[i]] = 0;
    return res;
}
 
int main() {
    if (0) for (int i = 1; i < 1e6; i++) {
        if (f(i) != g(i)) {
            cout << i << ' ' << f(i) << ' ' << g(i) << endl;
            return 0;
        }
        if (i % 1000 == 0) cerr << i << endl;
    }
    int t;
    cin >> t;
    while (t--) {
        int x;
        cin >> x;
        assert(1 <= x);
        assert(x < 1e8);
        //cout << f(x) << endl;
        cout << g(x) << endl;
    }
    return 0;
}