#include<iostream>


int a[14];
int temp;
long long temp1;
long long temp2;
int startindex;
int lastindex;
bool flag;
int i;
long long maxnum;
using namespace std;
long long exponent(long long number, long long n)
{
     long long x=1;
for(int i=0;i<n;i++)
{
 x*=number;       
}
return x;
}

long long rotate(long long n)
{
     if(n==0)
     {maxnum=0;
     return maxnum;}
     if(n<0)
     {
     maxnum=-2;
     return maxnum;
     }
temp=0;
maxnum=n;
int max=-1;
i=0;
flag=false;
startindex=-1;
lastindex=-1;
while(n!=0)
    {
   if(n%10==0)
   {
              if(!flag)
              {startindex=i;
   temp=max;flag=true;lastindex=startindex;}
   else{
   lastindex=i;
   max=temp;
   }
   }
   else if(n%10>max)
   max=n%10;
   a[i]=n%10;
   n=n/10;
   i++; 
}
n=maxnum;
if(startindex==0 && lastindex==i-2)
{
maxnum=-1;
return maxnum;
}
maxnum=-1;
for(int j=0;j<i-1;j++)
{
if(a[j]==max && (j<startindex || j>lastindex))
{
int temp=exponent(10,j+1);
temp2=(n%temp)*exponent(10,i-j-1)+(int)(n/temp);
if(maxnum<temp2)
maxnum=temp2;
}
}
if(a[i-1]==max && (i-1<startindex || i-1>lastindex))
{
if(n>maxnum)
maxnum=n;
}
return maxnum;
}


int main()
{
 int t;
 long long n;
 cin>>t;
 if(t<0)
 return -1;
 while(t--)
 {
 cin>>n;
 rotate(n);
 if(maxnum==-1)
 {
temp1=rotate(n/10);
if((n/10)>temp1)
temp1=n/10;
maxnum=(n%exponent(10,i-1))*10+a[i-1];
temp2=rotate(maxnum);
if(maxnum>temp2)
temp2=maxnum;
if(temp1<temp2)
maxnum=temp2;
else
maxnum=temp1;
 }cout<<maxnum<<"\n";
}
}
