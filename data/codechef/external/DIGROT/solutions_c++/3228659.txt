#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sstream>
#include <math.h>
#include <limits.h>
#include <time.h>
#include <vector>
#include <utility>
#include <list>
#include <stack>
#include <queue>
#include <map>
#include <set>
using namespace std;

#define LIM_UI UINT_MAX
#define LIM_UL ULLONG_MAX
#define MAX 11

//iterations
#define repi(i,a,b) for(int i=a;i<=b;++i)
#define repd(i,a,b) for(int i=a;i>=b;--i)

set<int> s;

void dfs(int m){
	stack<int> stk;
	stk.push(m);
	while(!stk.empty()){
		int n = stk.top();
		stk.pop();
		int max10 = (int)pow(10,(int)log10(n));
		int left = (n-n/max10*max10)*10+n/max10;
		int right = n/10+(n%10)*max10;
		if(s.insert(left).second)
			stk.push(left);

		if(s.insert(right).second)
			stk.push(right);
	}
}

int main(){
	int t;
	cin>>t;
	while(t--){
		int n;
		cin>>n;
		s.clear();
		dfs(n);
		set<int>::iterator m = max_element(s.begin(),s.end());
		cout<<*m<<"\n";
	}
	return 0;
}