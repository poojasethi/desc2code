#include <cstdio>
#include <string>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;

#define ISTRINGSTREAM(in, s) stringstream in(s, ios_base::in)
#define OSTRINGSTREAM(out) stringstream out(ios_base::out)

int toInt(string s) {ISTRINGSTREAM(in,s); int result; in >> result; return result;}
string toString(int n) {OSTRINGSTREAM(out); out << n; return out.str();}

string s;

int rrotate(const string &s, int sh) {
	int ret = 0;
	int n = s.length();
	for (int i=n-sh; i<n; i++) {
		if (s[i] != '0')
			ret = ret*10 + s[i]-'0';
	}
	for (int i=0; i<n-sh; i++)
		ret = ret*10 + s[i]-'0';
	return ret;
}

int lrotate(const string &s, int sh) {
	int ret = 0;
	for (int i=sh; i<s.length(); i++)
		ret = ret*10 + s[i]-'0';
	for (int i=0; i<sh; i++)
		if (i!=0 && s[i]!='0')
			ret = ret*10 + s[i]-'0';
		else if (i==0)
			ret = ret*10 + s[i]-'0';
	return ret;
}


int main() {
	int t, n;
	cin >> t;
	while (t--) {
		cin >> s;
		n = 0;
		for (int i=1; i<=s.length(); i++) {
			//cout << rrotate(s, i) << endl;
			n = max(n, rrotate(s, i));
			n = max(n, lrotate(s, i));
		}
		string temp;
		int k = rrotate(s, 1);
		temp = toString(k);
		n = max(n, lrotate(temp, 1));
		k = lrotate(s, 1);
		temp = toString(k);
		n = max(n, rrotate(temp, 1));

		cout << n << endl;
	}
	return 0;
}
