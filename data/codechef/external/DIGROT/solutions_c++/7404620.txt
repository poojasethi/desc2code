// URL : http://www.codechef.com/problems/DIGROT

#include <iostream>
#include <cstdio>

using namespace std;

int cal_k(int x)
{
		int k = 1;
		// number of digits in the given number
		while(x)
		{
			x /= 10;
			k *= 10;
		}
		k /= 10;
		
		return k;
}

int main()
{
	int tc;
	cin >> tc;
	while(tc--)
	{
		int n;
		cin >> n;
		int m = n;
		int mx = -1, s = 0, k = 1;
		
		
		
		// 1 left rotation followed by right rotation
		
		// left rotate
		for(int i = 0; i < 1; ++i)
		{
			int rm = m % 10;
			k = cal_k(m);
			int new_num = rm * k + m / 10;
			if(new_num > mx)
			     mx = new_num;
			 m = new_num;    
		//	cout << new_num << endl;
		}
		//cout << "========" << endl;
		//m = n;
		// Right rotate
		for(int i = 0; i < 1; ++i)
		{
			k = cal_k(m);
			int rm = m / k;
			int new_num = (m % k) * 10 + rm;
			if(new_num > mx)
				mx = new_num;
			m = new_num;
			//cout << new_num << endl;
		}
		
		// 1 right rotation followed by left rotation.
		m = n;
		// Right rotate
		for(int i = 0; i < 1; ++i)
		{
			k = cal_k(m);
			int rm = m / k;
			int new_num = (m % k) * 10 + rm;
			if(new_num > mx)
				mx = new_num;
			m = new_num;
			//cout << new_num << endl;
		}
		// left rotate
		for(int i = 0; i < 1; ++i)
		{
			int rm = m % 10;
			k = cal_k(m);
			int new_num = rm * k + m / 10;
			if(new_num > mx)
			     mx = new_num;
			 m = new_num;    
		//	cout << new_num << endl;
		}
		
		m = n;
		// REST of rotations 
		// left rotate
		for(int i = 0; i < 9; ++i)
		{
			int rm = m % 10;
			k = cal_k(m);
			int new_num = rm * k + m / 10;
			if(new_num > mx)
			     mx = new_num;
			 m = new_num;    
		//	cout << new_num << endl;
		}
		//cout << "========" << endl;
		m = n;
		// Right rotate
		for(int i = 0; i < 9; ++i)
		{
			k = cal_k(m);
			int rm = m / k;
			int new_num = (m % k) * 10 + rm;
			if(new_num > mx)
				mx = new_num;
			m = new_num;
			//cout << new_num << endl;
		}
		cout << mx << endl;
	}
	return 0;
}