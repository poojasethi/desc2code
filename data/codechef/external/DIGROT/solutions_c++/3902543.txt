#include <stdio.h>
#include <string.h>

bool compare(char a[10], char b[10]) {
    // returns a>=b

    if (strlen(a) > strlen(b)) return true;
    if (strlen(a) < strlen(b)) return false;
    
    int i = 0;
    while ( i<strlen(a) && a[i] == b[i]) i++;
    
    if (i==strlen(a) || a[i] >= b[i]) return true;
    else return false;
}

void rotate_right(char *out, char *in) {

    out[0] = in[strlen(in)-1]; out[1] = '\0';
    strncat(out,in,strlen(in)); out[strlen(in)] = '\0';
    while (out[0] == '0') {
        int l = 1;
        for (;l<strlen(out);l++) out[l-1] = out[l];
        out[l-1] = '\0';
    }
}

void rotate_left(char *out, char *in) {
    
    strncpy(out,in+1,strlen(in)-1); out[strlen(in)-1] = in[0]; out[strlen(in)] = '\0';
    while (out[0] == '0') {
        int l = 1;
        for (;l < strlen(out);l++) out[l-1] = out[l];
        out[l-1] = '\0';
    }
}

int main(){

    int T = 1;
    char input[12], act[12], shift[12], output[12];
    
    scanf("%d\n",&T);
    
    while (T-->0) {
        gets(input);
        rotate_left(act,input);
        rotate_right(shift,act);
        strcpy(output,shift);
        rotate_right(act,input);
        rotate_left(shift,act);
        if (compare(shift,output)) strcpy(output,shift);        
        
        // right
        strcpy(act,input);       
        for (int i=0; i<strlen(input); i++) {
            rotate_right(shift,act);            
            if (compare(shift,output)) strcpy(output,shift);
            strcpy(act,shift);
        }
        // left
        strcpy(act,input);
        for (int i=0; i<strlen(input); i++) {
            rotate_left(shift,act);
            if (compare(shift,output)) strcpy(output,shift);
            strcpy(act,shift);
        }

        puts(output);
    }    
    return 0;
}