//SKRCODE
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstdlib>
#include<queue>
#include<iostream>
#include<stack>
#include<map>
#include<set>
#include<cstring>
#include<string.h>
#include<ctype.h>
#include<vector>
#include<iomanip>
#include<deque>
#include<ctime>

using namespace std;

#define eps 0.00000001
#define maxsize 1000000000
#define FOR(i,a,b) for(i=a;i<=b;i++)
#define MAX(a,b) a>b?a:b
#define MIN(a,b) a<b?a:b

typedef long long int64;
typedef long int32;

//beginning

int64 shl(int64 n)
{
    int64 temp,i,len,a;

    temp=n;
    for(i=0;temp!=0;i++)
    {
        a=temp%10;
        temp/=10;

    }
    len=i;

    temp=a*ceil(pow(10,len-1));
    temp=n%temp;
    temp*=10;
    temp+=a;

    return temp;
}

int64 shr(int64 n)
{
    int64 temp,len,i;

    temp=n;
    for(i=0;temp!=0;i++)
        temp/=10;
    len=i;
    temp=n%10;
    n=n/10;
    temp=temp*ceil(pow(10,i-1));
    temp+=n;

    return temp;
}





int64 bfs(int64 N)
{
    int64 u,lnum,rnum,max;

    queue<int64> Q;
    set<int64> S;

    Q.push(N);
    //S.insert(N);

    while(!Q.empty())
    {
        u=Q.front();
        Q.pop();


        lnum=shl(u);
        rnum=shr(u);

        if(S.find(lnum)==S.end())
        {//printf("%lld ",lnum);
            S.insert(lnum);
            Q.push(lnum);
        }
        if(S.find(rnum)==S.end())
        {
            S.insert(rnum);
            Q.push(rnum);
        }
    }
    max=0;
    for(set<int64>::const_iterator it = S.begin(); it != S.end(); it++)
        max=MAX(max,*it);
   // for(set<int64>::const_iterator it = S.begin(); it != S.end(); it++)
     //   S.erase(it);

    return max;

}






int main()
{
    int T;
    int64 N;

    scanf("%d",&T);

    while(T--)
    {
        scanf("%lld",&N);
        printf("%lld\n",bfs(N));
    }
    return EXIT_SUCCESS;
}





