//Author : r20rock
#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>
#include<stack>
#include<map>
#include<list>
#include<cmath>
#include<cstdlib>

using namespace std;

#define     PI      3.1428571
#define     UL      unsigned long int

#define     GETI(k)      scanf("%d",&k)
#define     GETUL(k)    scanf("%lu",&k)
#define     GETF(k)      scanf("%f",&k)
#define     GETC(k)     scanf("%c",&k)
#define     GETCP(k)   scanf("%s",&k) //char pointer
#define     GETS(k)     scanf("%s",k)  //string

#define     PUTI(k)     printf("%d",k)
#define     PUTUL(k)   printf("%lu",k)
#define     PUTF(k)     printf("%f",k)
#define     PUTC(k)     printf("%c",k)
#define     PUTS(k)     printf("%s",k)
#define     PUTK(k)     printf(k)           //hard coded string

int max(int a, int b)
{
    if(a>b)
        return a;
    else
        return b;
}

int num_digits(int a)
{
    int ret=0;
    while(a!=0)
    {
        ret++;
        a/=10;
    }

    return ret;
}

//12345=>51234
//12340=>01234=>1234
int rightRotate(int N)
{
    char buf[10];
    sprintf(buf, "%d", N);
    for(int i=strlen(buf)-1; i>0; i--)
		swap(buf[i-1], buf[i]);
	return atoi(buf);
}

//12345=>23451
int leftRotate(int N)
{

   char buf[10];
    sprintf(buf, "%d", N);
	for(int i=1; buf[i]; i++)
		swap(buf[i-1], buf[i]);
	return atoi(buf);
}

int main()
{
    int N,ans;
    int T;
    char num[8];
    GETI(T);
    while(T--)
    {
        GETI(N);
        ans=0;
        ans=max(ans,leftRotate(rightRotate(N)));
        ans=max(ans,rightRotate(leftRotate(N)));

        for(int i=0,temp=N; i<6 ; i++) //make right rotations
        {
            temp = rightRotate(temp);
           ans=max(temp,ans);
        }

        for(int i=0,temp=N; i<6 ; i++) //make left rotations
        {
            temp = leftRotate(temp);
            ans=max(temp,ans);
        }
        PUTI(ans);
        PUTK("\n");
    }

}
