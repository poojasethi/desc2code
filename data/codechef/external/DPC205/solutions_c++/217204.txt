#include<iostream>
#include<vector>
#include<cstdio>
using namespace std;
int n;
void func(int pre,vector<vector<int> > &G,vector<bool> &mark,vector<vector<int> > &Output,vector<int> &path){
                bool flag = 1;
                for(int i=0;i<n-1;i++){
                        if(mark[i]){
                                flag =0;
                                break;
                        }
                }
                if(flag){
                        if(G[path.back()][n-1]||G[n-1][path.back()])
                                return;
                        path.push_back(n-1);
                        Output.push_back(path);
                        path.pop_back();
 
                        return;
                }
                for(int i=1;i<n-1;i++){
                        if(!G[pre][i] && !G[i][pre] && mark[i]){
                                mark[i] = 0;
                                path.push_back(i);
                                func(i,G,mark,Output,path);
                                path.pop_back();
                                mark[i]= 1;
                        }
                }
}
int main(){
        int nt;
        while(scanf("%d",&nt) && nt){
                if(!nt)
                        break;
                scanf("%d ",&n);
                vector<vector<int> > Output,G(n,vector<int>(n));
                for(int i=0;i<n;i++){
                        int val;
                        char str[n+1];
                        scanf("%s",str);
                        for(int j=0;j<n;j++)
 
                                G[i][j] = (str[j]=='1');
 
                }
                vector<bool> mark(n,1);
                vector<int> path;
                for(int i=0;i<1;i++){
                        mark[i] = 0;
                        path.push_back(i);
                        func(i,G,mark,Output,path);
                        mark[i] = 1;
                        path.pop_back();
                }
                printf("%d %d\n",nt,Output.size());
                for(int i=0;i<Output.size();i++){
                        for(int j=0;j<n;j++)
                                printf("%d ",Output[i][j]+1);
 
                        puts("");
                }
        }
        return 0;
}