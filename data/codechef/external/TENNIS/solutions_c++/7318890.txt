#include<bits/stdc++.h>

using namespace std;

    // Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

double dp[70][70] , p , fact[70];

double ncr(int p , int r )
{
    double ans = fact[p];
    ans /= fact[r];
    ans /= fact[p - r];
    return ans;
}

double memoize( int left , int right )
{
    //cout << left << " " << right << endl;
    if( left == 0 )
        return 0.00000;
    if( right == 0 )
        return 1.00000;
    if( dp[left][right] != -1 )
        return dp[left][right];
    double ans = 0.00 ;
    int no = ( left + right ) / 2 ;
    double tot = 0;
    REP( i , 0 , left )
    {
        int rit = no - i;
        if( rit >= 0 && right - rit >= 0 )
        {
            double val = 0;
            val += memoize( i , rit ) * memoize( left - i , right - rit ) + memoize( i , rit ) * p * ( 1 - memoize( left - i , right - rit ) );
            val += memoize( left - i , right - rit ) * p * ( 1 - memoize( i , rit ) );
            double den = ncr( left, i ) * ncr( right , rit );
            val *= den;
            ans += val;
            tot += den;
        }
    }
    ans /= double(tot);
    return dp[left][right] = ans;
}

void pre()
{
    fact[0] = 1.00;
    REP( i , 1 , 65 )
        fact[i] = fact[i - 1] * double( i );
    return ;
}

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","w",stdout);
    int t;s(t);
    pre();
    while( t-- )
    {
        int n , m;
        s(n);s(m);
        REP( i , 0 , m + 2 )
        {
            REP( j , 0 , n + 2 )
            {
                dp[i][j] = -1.000;
            }
        }
        scanf("%lf",&p);
        double ans = memoize( m , n );
        printf("%0.7lf\n",ans);
    }
    return 0;
}
