#include <bits/stdc++.h>
#define ll long long int
#define REP(i,n) for(i=0;i<n;i++)
#define RREP(i,a,b) for(i=a;i<b;i++)
#define pii pair<int,int>
#define pb(x) push_back(x)
#define FILL(a,x) memset(a,x,sizeof(a))
using namespace std;
double P[8][70],p;
const int N=70;
ll bin[N][N];
ll comb(int n,int r)
{
	ll s;
	if(n==r||r==0)
	 	bin [n][r]=1;
	if(bin[n][r]!=-1)
		return bin[n][r];
	s=comb(n-1,r)+comb(n-1,r-1);
	bin[n][r]=s;
	return bin[n][r];
}
double ten(int n,int m)
{
	//printf("n= %d,m=%d P=%f\n",n,m,P[n][m] );
	int i,c=1,n1=n;
	double v1,v=0.0;
	while(n1>0)
		c<<=1,n1--;
	if((P[n][m]>=0.0))
		return P[n][m];
	P[n][m]=0.0;
	//cout <<"c="<< c<<endl;
	RREP(i,max(0,m-c/2),min(m+1,c/2+1))
	{
	//printf("m= %d i= %d c-m=%d c/2-i=%d \n",m,i,c-m,c/2-i );
	v1=comb(m,i)*comb(c-m,c/2-i),v+=v1;
	P[n][m]+=v1*(ten(n-1,i)*ten(n-1,m-i)+p*ten(n-1,i)*(1.0-ten(n-1,m-i))+p*ten(n-1,m-i)*(1.0-ten(n-1,i)));
	}
	P[n][m]/=v;
	//printf("n= %d,m=%d P=%f\n",n,m,P[n][m] );
	return P[n][m];
	//return 0.5;
}
int main()
{ 
	int t,n,m,i,j,k,c;
	scanf("%d",&t);
	while(t--)
	{
		scanf("%d%d%lf",&n,&m,&p);
		k=1;
		REP(i,7) REP(j,65) P[i][j]=-1.0;
		REP(i,7) P[i][0]=0.0,P[i][k]=1.0,k<<=1;
		REP(i,N) REP(j,N)	bin[i][j]=-1;
		c=0,k=n+m;
		while(k>1) c++,k>>=1;
		printf("%f\n",ten(c,m));
	}
		return 0;
}