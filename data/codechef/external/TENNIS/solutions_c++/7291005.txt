#pragma comment(linker, "/STACK:102400000,102400000")
#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <string.h>
#include <vector>
#include <map>
#include <queue>
#include <set>
#include <cmath>
#include <fstream>
#include <assert.h>
#include <bitset>
using namespace std;
#define vi vector<int>
#define pii pair<int,int>
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define inf 1000000007
#define mod 1000000007
#define x first
#define y second
#define pi acos(-1.0)
#define DBG(x) cerr<<(#x)<<"="<<x<<"\n";
#define FOREACH(it,x) for(__typeof(x.begin()) it=x.begin();it!=x.end();it++)
#define ull unsigned long long
#define ll long long
#define N 100010

double p,p3[65],c[65][65],dp[10][65],p2[65],q[65];
int main()
{
    //freopen("1.txt","w",stdout);
    int T,i,j,k,ca=0,m,n;
    c[0][0]=1;
    for(i=1;i<=64;i++){
        c[i][0]=1;
        for(j=1;j<=i;j++)c[i][j]=c[i-1][j-1]+c[i-1][j];
    }
    p2[0]=1;
    for(i=1;i<=64;i++)p2[i]=p2[i-1]*2;
    scanf("%d",&T);
    while(T--){
        scanf("%d%d%lf",&m,&n,&p);
        if(m==0){
            printf("%lf\n",1.);continue;
        }
        int t=n+m;
        int h=0;
        while(1<<h<t)h++;
        p3[0]=1;q[0]=1;
        for(i=1;i<=t;i++)p3[i]=p3[i-1]*p,q[i]=q[i-1]*(1-p);
        memset(dp,0,sizeof(dp));
        dp[0][0]=1;
        //DBG(h)
        for(i=0;i<h;i++){
            int r=i==0?0:(1<<i);
            if(r>m)r=m;
            int z=(1<<i+1),y;
            for(y=0;y<=r;y++)if(dp[i][y]){
                int x=(1<<i)-y;
                if(x==0||x>n)continue;   
                for(k=x;k<=z-y&&k<=n;k++){
                    j=z-k;
                    if(j>m)continue;
                    //double tot=c[1<<i+1][j];
                    for(int k3=0;k3<=x;k3++){
                        int k1=x-k3;
                        if(2*k1+k3>k)continue;
                        int j3=k-(2*k1+k3);
                        if(j3>y)continue;
                        int j1=y-j3;
                        if(2*j1+j3+k3!=j)continue;
                        dp[i+1][j]+=dp[i][y]*c[x][k3]*c[y][j3]*p3[k3]*q[j3]*p2[j3+k3];
                    }
                }
            }
        }
        printf("%.9lf\n",dp[h][m]/c[t][m]);
    }
    return 0;
}