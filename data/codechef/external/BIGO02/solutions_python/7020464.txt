#include <bits/stdc++.h>
#define prn(x) printf("%d\n",x)
#define pr(x) printf("%d ",x)
#define lprn(x) printf("%lld\n",x)
#define lpr(x) printf("%lld ",x)
#define lp(x) for(i=0;i<x;i++)
#define jlp(x) for(j=0;j<x;j++)
#define blp(x) for(i=x;i>=0;i--)
#define bloop(x,p) for(i=x;i>=p;i--)
#define jblp(x) for(j=x;j>=0;j--)
#define jbloop(x,p) for(j=x;j>=p;j--)
#define loop(x,p) for(i=x;i<=p;i++)
#define jloop(x,p) for(j=x;j<=p;j++)
#define fill(a,v) memset(a,v,sizeof(a))
#define INF 1e9
#define LLINF 1e18
#define PI 2*acos(0.0)
#define ll long long
#define MOD 1000000007                //10^9+7
#define sprn(s) printf("%s\n",s)
#define spr(s) printf("%s",s)
#define nl printf("\n")
#define g getchar_unlocked
#define p putchar_unlocked





using namespace std;


inline ll int rd()
{
	ll x=0;
	int sign=1;
	char c;
	while(((c=g())<'0'||c>'9')&&c!='-');
	if(c=='-')
	sign=-1,c=g();
	while(c>='0'&&c<='9')
	x=(x<<3)+(x<<1)+c-48,c=g();
	return sign*x;
}


double a[1000001];

int main()
{
    std::ios_base::sync_with_stdio(false);
    ll  t,i,j;
    
    a[0]=1;
    loop(1,1000001)
    {
         a[i]=(a[i-1]+log10(i));
    }
 
    
    for(t=rd();t--;)
    {
         ll x=rd();
        printf("%lld\n",(ll)(a[x]));
         
    }   
    return 0;
   }