#include<cstdio>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<cstdio>
#include<ctime>
#include<cctype>
#include<cassert>
#include<climits>
#include<cerrno>
#include<cfloat>
#include<ciso646>
#include<clocale>
#include<csetjmp>
#include<csignal>
#include<cstdarg>
#include<cstddef>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<ctime>
#include<cwchar>
#include<cwctype>

//containers
#include<vector>
#include<list>
#include<map>
#include<queue>
#include<deque>
#include<set>
#include<complex>
#include<string>
#include<stack>
#include<bitset>
#include<istream>
#include<valarray>

//IOs
#include<iostream>
#include<sstream>
#include<iomanip>
#include<fstream>
#include<exception>
#include<ios>
#include<iosfwd>
#include<ostream>
#include<iterator>
#include<stdexcept>
#include<streambuf>


//algorithm & miscellaneous
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<limits>
#include<locale>
#include<memory>
#include<new>

// My Terms
#define pb push_back
#define mp make_pair
#define ins insert
#define fir first
#define sec second
#define PRINT(x)        cout << #x << " " << x << endl
#define pi acos(-1)
#define ll long long
#define EM empty()
#define sz(a) int((a).size())
#define all(c) (c).begin(),(c).end()
#define fill(a,v)     memset(a, v, sizeof(a))

using namespace std;

unsigned long long mod=1000000007;

int c,m,n;
int visited[8][8]={0};

void dfs(int x,int y)
{
    visited[x][y]=1;

    if(x==m-1 && y==n-1)
    {
        c++;
    }

    if( (x+1)<m && visited[x+1][y]!=1)
    {
        dfs(x+1,y);
    }

    if( (y+1)<n && visited[x][y+1]!=1)
    {
        dfs(x,y+1);
    }
    

    visited[x][y]=0;

}




int main()
{
        int test;
        cin>>test;

        while(test)
        {
            c=0;

            for(int i=0;i<8;i++)
            for(int j=0;j<8;j++)
            visited[i][j]=0;

            cin>>n>>m;
	n++;m++;
            //m number of rows;
            // n number of colums;

            visited[0][0]=1;
            dfs(0,0);

            cout<<c<<"\n";

            test--;
        }
}