#include<cmath>
#include<cstdio>
#include<vector>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

const double PI=acos(-1);

const int V_MAX=100;

bool augment(int u,bool *vis,int match[2][V_MAX],const vector<int> *G){
	if(u==-1) return true;

	rep(i,G[u].size()){
		int v=G[u][i];
		if(!vis[v]){
			vis[v]=true;
			if(augment(match[1][v],vis,match,G)){
				match[0][u]=v;
				match[1][v]=u;
				return true;
			}
		}
	}
	return false;
}

int bipartite_matching(int L,int R,const vector<int> *G){
	static int match[2][V_MAX];
	rep(u,L) match[0][u]=-1;
	rep(v,R) match[1][v]=-1;

	int res=0;
	static bool vis[V_MAX];
	rep(u,L){
		rep(v,R) vis[v]=false;
		if(augment(u,vis,match,G)) res++;
	}
	return res;
}

double dist(double r,double la1,double lo1,double la2,double lo2){
	double x1=r*cos(lo1)*cos(la1),y1=r*sin(lo1)*cos(la1),z1=r*sin(la1);
	double x2=r*cos(lo2)*cos(la2),y2=r*sin(lo2)*cos(la2),z2=r*sin(la2);
	double d=sqrt((x1-x2)*(x1-x2)+(y1-y2)*(y1-y2)+(z1-z2)*(z1-z2));
	double theta=acos(1-d*d/(2*r*r));
	return r*theta;
}

int main(){
	int T; scanf("%d",&T);
	while(T--){
		int n,m;
		double r; scanf("%d%d%lf",&n,&m,&r);
		double lat1[100],lon1[100],lat2[100],lon2[100];
		rep(u,n) scanf("%lf%lf",lat1+u,lon1+u), lat1[u]*=PI/180, lon1[u]*=PI/180;
		rep(v,m) scanf("%lf%lf",lat2+v,lon2+v), lat2[v]*=PI/180, lon2[v]*=PI/180;

		double lo=0,hi=0;
		double d[100][100];
		rep(u,n) rep(v,m) {
			d[u][v]=dist(r,lat1[u],lon1[u],lat2[v],lon2[v]);
			hi=max(hi,d[u][v]);
		}

		while(abs(hi-lo)/hi>1e-7){
			double mi=(lo+hi)/2;
			vector<int> G[100];
			rep(u,n) rep(v,m) if(d[u][v]<mi) G[u].push_back(v);
			if(bipartite_matching(n,m,G)==m) hi=mi; else lo=mi;
		}
		printf("%E\n",(lo+hi)/2);
	}

	return 0;
}
