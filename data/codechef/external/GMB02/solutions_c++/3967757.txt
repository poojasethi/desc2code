// karanaggarwal
#include<bits/stdc++.h>
#define PB push_back
#define MP make_pair
#define F first
#define S second
#define SZ(a) (int)(a.size())
#define CLR(a) a.clear()
#define SET(a,b) memset(a,b,sizeof(a))
#define LET(x,a) __typeof(a) x(a)
#define TR(v,it) for( LET(it,v.begin()) ; it != v.end() ; it++)
#define FORi(i,a,b) for(LET(i,a) ; i<b; i++)
#define repi(i,n) FORi(i,(__typeof(n))0,n)
#define FOR(i,a,b) for(i=a ; i<b; i++)
#define rep(i,n) FOR(i,0,n)
#define si(n) scanf("%d",&n)
#define sll(n) scanf("%lld",&n)
#define pi(n) printf("%d",n)
#define piw(n) printf("%d ",n)
#define pin(n) printf("%d\n",n)
#define sortv(a) sort(a.begin(),a.end())
#define DRT()  int t; cin>>t; while(t--)
#define DRI(n)  int n; cin>>n; 
#define DRII(n,m)  int n,m; cin>>n>>m; 

using namespace std;

typedef long long LL;
typedef pair<int,int> PII;
typedef vector<int> VI;
typedef vector< PII > VPII;
LL power(LL a, LL p, LL mod)
{LL ret = 1;while(p){if(p&1)ret = (ret*a)%mod;a=(a*a)%mod;p/=2;}return ret;}
bool V[100000];
VI E[100000];

void dfs(int x)
{
    if(V[x])return;
    V[x]=true;
    TR(E[x],i)dfs(*i);
}
int main()
{
    DRT()
    {
        DRII(n,m);
        repi(i,n){V[i]=0;E[i].clear();}
        while(m--)
        {
            DRII(x,y); x--; y--;
            E[x].PB(y);
            E[y].PB(x);
        }
//        dfs(0);
//        int dis=0;
//        repi(i,n)if(V[i]==false)dis=1;
//        if(dis)
//        {cout<<"Not Possible\n"; continue;}
        int c=0;
        repi(i,n) c+= (SZ(E[i]))&1;
        if(c==1 || c>2)
        {cout<<"Not Possible\n"; continue;}
        cout<<"Possible\n";
    }
    return 0;
}

