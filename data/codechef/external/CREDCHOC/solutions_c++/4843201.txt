#include <algorithm>
#include <iostream>
#include <string.h>
#include <stdio.h>
#include <math.h>
#include <vector>
using namespace std;
const int N=1e4+9;// eps=1e-8,pi=acos(-1.0);
int n,x,y;
vector<int> ar;
bool v[N];
int dp[N];
bool dfs(int x)
{
	int &d=dp[x];
	if(d+1) return d;
	for(int i=0;i<ar.size()&&ar[i]<=x;i++)
	if(dfs(x-ar[i])) return d=1;
	return d=0;
}
int main()
{
	cin>>n>>x>>y;
	for(int i=0;i<n;i++)
	{
		int t;cin>>t;
		if(t>1&&t-1<=y-x&&!v[t-1]) v[t-1]=1,ar.push_back(t-1);
	}
	sort(ar.begin(),ar.end());
	memset(dp,-1,sizeof(dp));
	dp[0]=1;
	if(dfs(y-x)) puts("POSSIBLE");
	else puts("IMPOSSIBLE");
	return 0;
}

