#include<bits/stdc++.h>
using namespace std;
#define ll int

#define SZ 100002
ll P[30][SZ] , sa[SZ] ,stp , cnt;
struct s
{
    ll nr[2];
    ll p ;
}L[SZ];

ll power(ll x,ll y)
{
    if(y==0) return 1;
    ll tmp = power(x,y/2); 
    if(y%2==0) return (tmp*tmp);
    return ((tmp*tmp))*x;
}

bool mycmp(struct s a , struct s b)
{
    return a.nr[0]==b.nr[0] ? (a.nr[1]<b.nr[1]?1:0) : (a.nr[0]<b.nr[0]?1:0);
}

void construct(string s,ll n)
{
    for (int i = 0; i < n; ++i)
        P[0][i] = s[i] -'a';
    for (stp = 1, cnt=1; cnt<n ;cnt*=2,  ++stp)
    {
        for (int k = 0; k <n; ++k)
        {
            L[k].nr[0] = P[stp-1][k];
            L[k].nr[1] = k+cnt<n ? P[stp-1][k+cnt]:-1;
            L[k].p = k;
        }
        sort(L , L+n , mycmp);
        for (int i = 0; i < n; ++i)
        {
            P[stp][L[i].p] = i>0 && L[i].nr[0]==L[i-1].nr[0] && L[i].nr[1]==L[i-1].nr[1]? P[stp][L[i-1].p] : i;
        }
    }    
    
    for(int suffix = 0 ; suffix < n ; suffix++)
    {
        sa[P[stp-1][suffix]] = suffix; 
        /* P[stp-1][suffix] = rank of suffix starting at suffix position*/
    }
    return ;
}

ll find(ll x , ll y,ll n)
{
    ll ans=0 ; 
    for (ll k = stp-1; k>=0 && x<n && y<n; k--)
    {
        if(P[k][x]==P[k][y])
        {
            ll t = power(2, k );
            x += t, y +=t;
            ans+=t; 
        }
    }
    return ans; 
}

ll temp1[100005],temp2[100005],temp3[100005];

int main()
{
	string a,b,s;
	cin>>a>>b;
	ll tm,n1=a.size(),n2=b.size(),x,k,q;
	
	construct(a,n1);
	temp1[0]=n1-1;
	
	for(int i=0;i<n1-1;i++)
	{
		x=find(sa[i],sa[i+1],n1);
		temp1[x+1]--;
	}
	
	for(int i=1;i<=n1;i++)
		temp1[i]=temp1[i]+temp1[i-1];
	
	tm=n1;
	for(int i=1;i<=n1;i++)
		temp1[i]=(tm--)-temp1[i];
	
	construct(b,n2);
	temp2[0]=n2-1;
	
	for(int i=0;i<n2-1;i++)
	{
		x=find(sa[i],sa[i+1],n2);
		temp2[x+1]--;
	}
	
	for(int i=1;i<=n2;i++)
		temp2[i]=temp2[i]+temp2[i-1];
	
	tm=n2;
	for(int i=1;i<=n2;i++)
		temp2[i]=(tm--)-temp2[i];
	
	s="";
	s=a+'#'+b;
	
	construct(s,n1+n2+1);
	temp3[0]=n1+n2;
	
	for(int i=0;i<n1+n2;i++)
	{
		x=find(sa[i],sa[i+1],n1+n2+1);
		temp3[x+1]--;
	}
	
	for(int i=1;i<=n1+n2+1;i++)
		temp3[i]=temp3[i]+temp3[i-1];
	
	tm=n1+n2+1;
	for(int i=1;i<=n1+n2+1;i++)
		temp3[i]=(tm--)-temp3[i]-i;
	
	cin>>q;
	while(q--)
	{
		scanf("%d %d",&x,&k);
		if(x==1)
			printf("%d\n",temp1[k]+temp2[k]-temp3[k]);
		else if(x==2)
			printf("%d\n",temp3[k]-temp2[k]);
		else if(x==3)
			printf("%d\n",temp3[k]-temp1[k]);
		else
			printf("%d\n",2*temp3[k]-(temp1[k]+temp2[k]));
	}
	
	return 0;
}