#include <bits/stdc++.h>
#define ll long long int
#define L 1000005
using namespace std ;
bool check[L] ;
int prime[L] ;
ll pow_mod(ll x,ll y,ll M)
{
    if(x%M==0) return 0 ;
    ll ans=1 ; x%=M ;
    while(y){ if(y&1)ans=(ans*x)%M ; x=(x*x)%M ; y>>=1 ;}
    return ans ;
}

bool rabinmiller(ll d,ll n)
{
    ll a = rand()%(n-2) + 2 ;
    a=pow_mod(a,d,n) ;
    if(a==1 || a==n-1 ) return true ;
    while(d!=n-1)
    {
        a=(a*a)%n ;   d<<=1 ;
        if(a==1) return false ;
        else if(a==n-1) return true ;
    }
    return false ;
}
bool isprime(ll n,int k)
{
    if(n<=1) return false ;
    else if(n<=3) return true ;
    ll d=n-1 ; while(!(d&1)) d>>=1 ;
    while(k--) if(!rabinmiller(d,n)) return false ;
    return true ;
}
int main()
{
    ll mod=1000000007 ;
    int index=0 ; prime[index++]=2 ;
    for(int i=4;i<L;i+=2 ) check[i]=1 ;
    for(int i=3;i<L;i+=2) if(!check[i]){ prime[index++]=i; for(int j=2*i;j<L;j+=i) check[j]=1 ;}
    int T ; scanf("%d",&T);
    while(T--)
    {
        ll N,K ; scanf("%lld %lld",&N,&K);
        int ct1=0,ct2=0 ;
        for(int i=0;i<index && K>1;++i) if(K%prime[i]==0) ++ct1,K/=prime[i] ;
        if(K!=1) { if(isprime(K,5)) ct1+=2 ; else ++ct1 ; }
        for(int i=0;i<index && N>1;++i) if(N%prime[i]==0) ++ct2,N/=prime[i] ;
        if(N!=1) { if(isprime(N,5)) ct2+=2 ; else ++ct2 ; }
        ll ans=pow_mod(2,ct1,mod) ; ans=pow_mod(ans+1,ct2,mod) ;
        //printf("ct1 %d ct2 %d\n",ct1,ct2) ;
        printf("%lld\n",ans) ;
    }
    return 0 ;
}
