#include <bits/stdc++.h>
#define REP(i,a,b) for(i=a;i<=b;i++)
using namespace std;
typedef long long ll;
ll res;
ll gcd(ll a,ll b){
	if(b==0)
		return a;
	return gcd(b,a%b);
}
ll mule(ll a,ll b,ll mod) {
	ll x=0,y=a;
	while(b>0){
		if(b&1)
			x=(x+y)%mod;
		y=(y+y)%mod;
		b>>=1;
	}
	return x%mod;
}
ll powe(ll a,ll b,ll mod){
	ll x=1,y=a;
	while(b>0){
		if(b&1)
			x=mule(x,y,mod);
		y=mule(y,y,mod);
		b>>=1;
	}
	return x;
}
bool Miller_Rabin(ll n,ll itr){
	if(n<2)
		return false;
	if(n!=2 && !(n&1))
		return false;
	ll i,s=n-1;
	while(!(s&1))
		s>>=1;
	REP(i,0,itr-1){
		ll m,a=rand()%(n-1)+1,tmp=s;
		m=powe(a,tmp,n);
		while(tmp!=n-1 && m!=1 && m!=n-1){
			m=mule(m,m,n);
			tmp<<=1;
		}
		if(m!=n-1 && !(tmp&1))
			return false;
	}
	return true;
}
ll gx(ll a,ll c,ll n){
	ll res=mule(a,a,n);
	res=(res+c)%n;
	return res;
}
ll pollard_rho(ll n,ll itr){
	if(n%2==0)
		return 2;
	ll i,c=1;
	REP(i,0,itr-1){
		ll d=1,x=2,y=2;
		while(d==1){
			x=gx(x,c,n);
			y=gx(gx(y,c,n),c,n);
			d=gcd(abs(x-y),n);
		}
		if(d!=n)
			return d;
		c=rand();
	}
	return 1;
}
void factorize(ll n){
	if(Miller_Rabin(n,10)){
		res++;
	}else{
		if(n<2)
			return;
		ll a,b;
		a=pollard_rho(n,10);
		b=n/a;
		factorize(a);
		factorize(b);
	}
}
int main(){
	//freopen("in.txt","r",stdin);
	ios::sync_with_stdio(false);
	int t;
	cin>>t;
	while(t--){
		ll n,k,a,b,mod=1000000007;
		cin>>n>>k;
		res=0;
		factorize(k);
		a=res;
		res=0;
		factorize(n);
		b=res;
		a=powe(2,a,mod);
		b=powe(a+1,b,mod);
		cout<<b<<endl;
	}
}