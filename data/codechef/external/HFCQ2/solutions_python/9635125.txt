#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp> 
 
using namespace std;
using namespace __gnu_pbds;
 
#define INF 1000000007
 
typedef tree<int, null_type, less<int>, rb_tree_tag,tree_order_statistics_node_update> ordered_set;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;
typedef vector<ll> vll;
typedef vector<vector<int> > vvi;
typedef pair<int,int> ii;
typedef vector<pair<int,int> > vii;
typedef vector<vector<pair<int,int> > > vvii;
 
#define all(x) (x).begin(), (x).end()
#define nall(x) (x).rbegin(), (x).rend()
#define tr(x,it) for(auto it = (x).begin();it!=(x).end();++it)
#define ntr(x,it) for(auto it = (x).rbegin();it!=(x).rend();++it)
#define ufy(v) sort(all(v));(v).erase(unique(all((v))),(v).end())
#define sz(a) int((a).size()) 
#define boost ios_base::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define pb push_back 
#define PB pop_back
#define pf push_front
#define PF pop_front
#define MP make_pair
#define clr clear
#define rz resize
#define C(a,b) memset(a,b,sizeof(a))
#define ia(a,n) FOR(i,0,n-1)cin>>a[i]
#define ia1(a,n) FOR(i,1,n)cin>>a[i]
#define fpresent(c,x) ((c).find(x) != (c).end())  // set,map
#define present(c,x) (find(all(c),x) != (c).end())  //vector
#define F first
#define S second
#define FOR(i,a,b) for(int i=a;i<=b;++i)
#define NFOR(i,a,b) for(int i=a;i>=b;--i)
#define rep(i,n) FOR(i,0,n-1)
#define TCASE int __T;cin>>__T;FOR(Tc,1,__T)
inline int add(int a,int b, int m=INF){a+=b;if(a>=m)a-=m;return a;}
inline int mul(int a,int b, int m=INF){return (int)(((ll)a*(ll)b)%m);}
inline int norm(int x,int m=INF){if(x>=m)x%=m;if(x<0)x+=m;return x;}
inline int neg(int x,int m=INF){x=-x;return norm(x);}
 
ll mod;
int b[]={2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97};
 
 
inline ll multiply(ll a,ll b)   // O(1) for (a*b)%m
{  
   a %= mod;
   b %= mod;
   long double res = a;
   res *= b;
   ll c = ll(res / mod);
   a *= b;
   a -= c * mod;
   a %= mod;
   if (a < 0) a += mod;
   return a;
}
 
inline ll power(ll a,ll b) 
{
   ll ans=1;
   while(b)
   {
           if(b&1)
           {
                     ans=multiply(ans,a);
           }
           a=multiply(a,a);
           b>>=1;
   }
   return ans;
}
 
inline bool Miller(ll p) 
{
    if(p<2)  return false;
    if(p!=2 && !(p&1)) return false;
    for(int i=0;i<12;i++)
    {
            if(p==b[i])return true;
            else if(p%b[i]==0)return false;
    }
    int count = 0;
    long long s=p-1;
    while(!(s&1)) 
    {
        s/=2;
        count++;
    }
    ll accuracy=2;
    for(int i=0;i<accuracy;i++)
    {
        long long a=rand()%(p-1)+1;
        mod=p;
        long long x=power(a,s);
        if(x == 1 || x == p-1) continue;
        int flag = 0;
        for(int i = 1; i < count; i++) 
        {
           x = multiply(x,x);
           if(x == 1) return false;
           if(x == p-1) 
           {
              flag = 1;
              break;
           }
        }
        if(flag) continue;
        return false;
    }
    return true;
}
bool sv[1000000+1];
vi p;
int f(ll n)
{
	ll x=n;
	int ctr=0;
	for(auto it:p)
	{
		if(it>x)break;
		if(x%it==0)x/=it,ctr++;
	}
	if(x!=1)
	{
		ctr+=1+(!(Miller(x)));
	}
	return  ctr;
}
int main()
{
    boost;
    FOR(i,2,1000)
    {
    	if(sv[i]==0)
    	for(int j=i*i;j<=1000000;j+=i)
    	sv[j]=1;
    }
    FOR(i,2,1000000)
    if(sv[i]==0)p.pb(i);
    
    
	TCASE
	{
		ll n,k;
		cin>>n>>k;
		int x=f(n);
		int y=f(k);
		mod=INF;
		ll temp=power(2,y);
		temp+=1;if(temp>=INF)temp-=INF;
		temp=power(temp,x);
		cout<<temp<<"\n";
	}
	return 0;
}