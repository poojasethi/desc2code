
#include <bits/stdc++.h>
using namespace std;

#if !ONLINE_JUDGE
#include "debug.h"
#else
#endif

#define INF 1500000000000000000LL
#define MOD 1000000007
#define F first
#define S second
#define PB push_back
#define MK make_pair
#define LEN(vale) strlen(vale)
#define SZ(vale) (int)vale.size()
#define SQ(A) ((A)*(A))
#define FI(i,fa,fb) for(int i=fa;i<fb;++i)
#define FD(i,fa,fb) for(int i=fa;i>fb;--i)
#define FT(it,S) for(__typeof((S).begin()) it = (S).begin(); it != (S).end(); it++)
#define bits(vale) __builtin_popcount(vale)
#define VT vector

#define SET1(array,val,sz) for(int i=0;i<sz;i++)array[i]=val;
#define SET2(array,val,sz1,sz2) for(int i=0;i<sz1;i++)for(int j=0;j<sz2;j++)array[i][j]=val;

#define ALL(a) a.begin(),a.end()
#define LB (lower_bound)
#define UB (upper_bound)

#define SI(vale) scanf("%d",&vale)
#define PI(vale) printf("%d\n",vale)
#define PIS(vale) printf("%d ",vale)
#define SL(vale) scanf("%lld",&vale)
#define PL(vale) printf("%lld\n",vale)
#define PLS(vale) printf("%lld ",vale)
#define SS(vale) scanf("%s",vale)
#define PS(vale) printf("%s\n",vale)
#define SLD(vale) scanf("%Lf",&vale)
#define PLD(vale) printf("%0.12Lf\n",vale)
#define NL printf("\n")
#define TCS() int testcase; SI(testcase);while(testcase--) 

typedef long long int LL;
typedef unsigned long long LLU;
typedef long double LD;
typedef pair<int,int> PI;
typedef pair<int,pair<int,int> > PII;
const int N = 1000011;
LL n,k;

bool prime[N];
VT<int>prm;
void sieve() {
     for(int i = 2;i < N;i++) prime[i] = 1; 
     for(int i = 2;i < N;i++) {
          if(prime[i]) {
               for(int j = 2;i*j < N;j++) {
                    prime[i*j] = 0;
               }
          }
     }
     FI(i,2,N) {
          if(prime[i])
               prm.PB(i);
     }
}

LL mulmod(LL a, LL b, LL mod) {
     LL x = 0,y = a % mod;
     while (b > 0) {
          if (b % 2 == 1) {
               x = (x + y) % mod;
          }
          y = (y * 2) % mod;
          b /= 2;
     }
     return x % mod;
}

LL modulo(LL base, LL exponent, LL mod) {
     LL x = 1;
     LL y = base % mod;
     while (exponent > 0) {
          if (exponent % 2 == 1)
               x = mulmod(x , y , mod);
          y = mulmod(y , y , mod);
          exponent = exponent / 2;
     }
     return x % mod;
}

bool MiLLer(LL p,int iteration = 5) {
     if (p < 2) 
          return false;
     if (p != 2 && p % 2 == 0) 
          return false;

     LL s = p - 1;
     while (s % 2 == 0) 
          s /= 2;

     for (int i = 0; i < iteration; ++i) {
          LL a = rand() % (p - 1) + 1, temp = s;
          LL mod = modulo(a, temp, p);
          while (temp != p - 1 && mod != 1 && mod != p - 1) {
               mod = mulmod(mod,mod,p);
               temp *= 2;
          }
          if (mod != p - 1 && temp % 2 == 0) 
               return false;

     }
     return true;
}

LL cal(LL v) {
     LL cnt = 0;
     FI(i,0,SZ(prm)) {
          if(v % prm[i] == 0) cnt++ , v /= prm[i];
     }
     if(v > 1 && MiLLer(v))
          cnt++;
     else if(v > 1 && !MiLLer(v))
          cnt += 2;
     return cnt;
}


int main() {
     //clock_t tStart = clock();
     int t;
     sieve();
     //DE(prm);
     TCS() {
          SL(n),SL(k);
          LL tn = cal(n);
          LL tk = cal(k);
          LL nof =  modulo(2,tk,MOD);
          LL ans = modulo((nof + 1)%MOD,tn,MOD);
          PL(ans);
     }

     //exectime();
     return 0;
}


