#include <bits/stdc++.h>
#define ll long long int
#define s(a) scanf("%lld",&a)
#define f first
#define sc second
#define pb push_back
#define mp make_pair
#define VALUETYPE long long int
#define inf 10e16
#define EVEN(x) ((x%2)==0)
#define ODD(x) ((x%2)==1)

using namespace std;

vector<ll>v;
ll Mod=1000000007;
bitset<1000001>b;
vector<ll>vv;
int arr[12] = {2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37};

void sieve()
{
    ll i,j;
    for(i=2;i<=1000000;i++) {
        if(b[i]==1) continue;
        v.pb(i);
        for(j=i+i;j<=1000000;j+=i) {
            b[j]=1;
        }
    }
}

ll mulmod(ll a, ll b, ll mod)
{
    ll x = 0,y = a % mod;
    while (b > 0) {
        if (b&1)
            x = (x + y) % mod;

        y = (y * 2) % mod;
        b /= 2;
    }
    return x;
}

ll bin(ll a, ll b, ll M)
{
    ll x = 1;
    ll y = a;

    while(b > 0) {
        if(b&1)
            x = mulmod(x, y, M);
        y = mulmod(y, y, M);

        b/= 2;
    }

    return x;
}

bool isprime(ll p)
{
    if (p < 2)
        return false;
    if (p != 2 && p % 2==0)
        return false;

    ll s = p - 1;
    while (s % 2 == 0)
        s /= 2;
    int i;
    for(i=0;i<12;i++) {
        ll a = arr[i] % (p - 1) + 1, temp = s;
        ll mod = bin(a, temp, p);

        while ((temp != p-1) && (mod != 1) && (mod != p-1)) {
            mod = mulmod(mod, mod, p);
            temp *= 2;
        }

        if (mod != p-1 && temp%2 == 0)
            return false;
    }
    return true;
}

ll sqis(ll w)
{
    ll ww = sqrt(w);
    if(ww*ww != w) return 0;
    if(isprime(ww)) return 1;
    return 0;
}

ll countit(ll k)
{
    ll i,j,ans=1,w=k,cnt;
    for(i=0;i<v.size();i++) {
        if(v[i]>w) break;
        cnt = 1;
        while(w % v[i]==0) {
            cnt++;
            w/=v[i];
        }
        ans=ans*cnt;
    }
    if(w==1) return ans;

    if(isprime(w)==1) {
        ans=ans*2;
    }
    else if(w!=1) {
        ans=ans*4;
    }
    return ans;
}

void countyo(ll k)
{
    ll i,j,ans=1,w=k,cnt;
    for(i=0;i<v.size();i++) {
        if(v[i]>w) break;
        //if(v[i]*v[i]*v[i] > w) break;
        cnt = 1;
        while(w % v[i]==0) {
            cnt++;
            w/=v[i];
        }
        if(cnt>1) vv.pb(cnt-1);
        ans=ans*cnt;
    }
    if(w==1) ;
    else if(isprime(w)==1) {
        ans=ans*2;
        vv.pb(1);
    }
    else if(w!=1) {
        ans=ans*4;
        vv.pb(1);
        vv.pb(1);
    }
}
//2 27034865616753570 27034865616753570 30030 30030
int main()
{
    //freopen("inp.txt","r",stdin);
    //cout<<Miller_Rabin(1000000019)<<endl;
    sieve();
    ll t,n,i,j,k,l,w,ww,x,y,z;
    s(t);
    while(t--) {
        vv.clear();
        s(n);s(k);
        if(n==1) {cout<<1<<endl;continue;}
        if(k==2) w=2;
        else w = countit(k);
        if(n==2) vv.pb(1);
        else countyo(n);

        for(i=0;i<vv.size();i++) {
            vv[i]*=w;
            vv[i]%=Mod;
        }
        ll ans=1;
        for(i=0;i<vv.size();i++) {
            ans=ans*(vv[i]+1);
            ans%=Mod;
        }
        cout<<ans<<endl;
    }
    return 0;
}
