#include <iostream>
#include <algorithm>
#include <vector>
#include <cstdio>

using namespace std;

struct node {
       long long int time;
       long long int type;       
};

bool comp (node a, node b) {
     if (a.time == b.time) {
        return a.type >b.type;           
     }
     return a.time < b.time;
}

long long int solve( vector <node> v) {
    long long int mx = 0;
    long long int sum = 0;
    
    for (long long int i = 0; i < v.size(); i++) {
        mx = max(mx, sum);
        if (v[i].type == 0) {
           sum++;              
        } else {
          sum--;       
        }
    }
    
    return mx;    
}

int main()
{
    int t;
    long long int n, a, d;
    node temp;
    
    scanf("%d", &t);
    
    while (t--) {
          scanf("%lld", &n);
          vector <node> v;
    
          for (int i = 0; i < n; i++) {
              scanf("%lld %lld", &a, &d);
              temp.time = a;
              temp.type = 0;
              v.push_back(temp);
              temp.time = d;
              temp.type = 1;
              v.push_back(temp);   
          }
    
          sort(v.begin(), v.end(), comp);
    
          printf ("%lld\n", solve(v));
    }
   
    return 0;
}
