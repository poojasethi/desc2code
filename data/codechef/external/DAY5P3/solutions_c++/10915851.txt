#include<iostream>
using namespace std;
int N,M;
#define oo 100000000;
int Matrix[1010][1010];
int visited[1010];
int Parent[1010];
long Distance[1010];
int index[1010];
template<class T>
void Swap(T& a, T& b)
{
  T temp=b;
  b=a;
  a=temp;
}
void QuickSort(long Arr[],int left, int right)
{
	long Mid=Arr[(left+right)/2];
	int i=left;
	int j=right;
	while(i<=j)
	{
	    while(Arr[i]<Mid) i++;
		while(Arr[j]>Mid) j--;
		if(i<=j)
		{
			Swap(Arr[i],Arr[j]);
			Swap(index[i],index[j]);
			i++;
			j--;
		}
	
	}
	if(j>left)
		QuickSort(Arr,left,j);
	if(i<right)
		QuickSort(Arr,i,right);
}
int Mindis()
{
	long Min=oo;
	int iMin=0;
	for(int i=1;i<=N;i++)
	{
		if(!visited[i] && Min>Distance[i])
		{
			Min=Distance[i];
			iMin=i;
		}
	}
	return iMin;
}
void prim()
{
	Distance[1]=0;
	for(int i=1;i<=N;i++)
	{
		int u= Mindis();
		visited[u]=1;
		for(int i=1;i<=N;i++)
		{
			if(!visited[i]&& Distance[i]>Matrix[u][i])
			{
				Distance[i]=Matrix[u][i];
				Parent[i]=u;
			}
		}
	}
}
int main()
{
	ios::sync_with_stdio(false);
	//freopen("input.txt","r",stdin);
	int T;
	cin>>T;
	for(int tc=0;tc<T;tc++)
	{
		cin>>N>>M;
		for(int i=1;i<=N;i++)
		{
			Distance[i]=oo;
			visited[i]=Parent[i]=0;
			for(int j=1;j<=N;j++)
				Matrix[i][j]=oo;
		}
		int x,y,z;
		for(int i=0;i<M;i++)
		{
			cin>>x>>y>>z;
			Matrix[x][y]=z;
			Matrix[y][x]=z;
		}
		prim();
		for(int i=1;i<=N;i++)
			index[i]=i;
		QuickSort(Distance,1,N);
		for(int i=1;i<=N;i++)
		{
			if(!Distance[i])
				continue;
			if(index[i]>Parent[index[i]] )
				cout<<Parent[index[i]]<<" "<<index[i]<<" "<<Distance[i]<<endl;
			else
				cout<<index[i]<<" "<<Parent[index[i]]<<" "<<Distance[i]<<endl;
		}
		
	}
	return 0;
}