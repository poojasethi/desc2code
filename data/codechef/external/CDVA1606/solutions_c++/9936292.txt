//TEMPLATE---Akshit gUpta--///

#include <bits/stdc++.h>
using namespace std;

long long int ans,coun;

void computelpsarray(string pat,int m,int *lps)
{
    int i,len=0;
    lps[0]=0;

    i=1;

    while(i<m)
    {
        if(pat[i]==pat[len])
        {
            len++;
            lps[i]=len;
            i++;
        }
        else
        {
            if(len!=0)
                len=lps[len-1];
            else
                lps[i]=0,i++;
        }
    }
}


void kmpsearch(string pat,string text)
{

    coun=0;
    int m=pat.size();
    int n=text.size();

    int lps[m],j=0;

    computelpsarray(pat,m,lps);

///cout<<"1";

    int i=0;

    while(i<n)
    {
        if(pat[j]==text[i])
        {
            i++;
            j++;
        }

        if(j==m)
        {
            coun++;
            j=lps[j-1];
        }
        else
        {
            if(i<n&&pat[j]!=text[i])
            {
              if(j!=0)
                j=lps[j-1];
              else
                i+=1;
            }
        }
    }

  if(coun!=0)
    ans=max(ans,coun);

}


int main()
{

	int n,m,k,t,a,b,c;

  string s1,s2,tmp;

  cin>>t;

	while(t--)
    {
    	cin>>a>>b>>c;
        cin>>s1>>s2;

     tmp="";

    ans=-1;
    
   for(int u=0;u<c;u++)
   {
   	   tmp+=s2[u];
   }
      
   kmpsearch(tmp,s1);

   cout<<ans<<endl;

    }

	return 0;
}
