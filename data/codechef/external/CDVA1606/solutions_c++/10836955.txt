#include<bits/stdc++.h>
#define MAX 1000009
#include<string.h>
using namespace std;
void clps(char*pat,int m,int*lps);
void kmp(char*txt,char*pat)
{
int n=strlen(txt);
int m=strlen(pat);
int*lps=new int[m];
clps(pat,m,lps);
int i=0,j=0,count=0,flag=0;
while(i<n)
{
if(pat[j]==txt[i])
{
i++;
j++;
}
if(j==m)
{
flag=1;
count++;
j=lps[j-1];
}
else if(i<n&&pat[j]!=txt[i])
{
if(j!=0)
{
j=lps[j-1];
}
else
{
i++;
}
}
}
if(flag==1)
cout<<count<<endl;
else
cout<<-1<<endl;
}
void clps(char*pat,int m,int*lps)
{
int len=0;
lps[0]=0;
int i=1;
while(i<m)
{
if(pat[len]==pat[i])
{
len++;
lps[i]=len;
i++;
}
else
{
if(len!=0)
{
len=lps[len-1];
}
else
{
lps[i]=0;
i++;
}
}
}
}
int main()
{
long long int t;
cin>>t;
while(t--)
{
int m,n,k;
cin>>n>>m>>k;
char txt[MAX],ntxt[MAX],pat[MAX];
cin>>txt>>ntxt;
int i=0;
while(i<k)
{
pat[i]=ntxt[i];
i++;
}
pat[i]='\0';
kmp(txt,pat);
}
return 0;
}