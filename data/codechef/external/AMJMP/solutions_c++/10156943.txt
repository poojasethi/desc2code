#include <bits/stdc++.h>
using namespace std;

const int MXN = 5e3 + 9;

int N;
int A[MXN];
int dp[MXN][MXN];

inline int go(int from,int to){
	if(from == to) return 0;
	if(dp[from][to] != -1) return dp[from][to];
	int ret = 0;
	if(from < to){
		if(A[from] > A[to]) ret = 1 + go(to,from + 1);
		ret = max(ret,go(from,to - 1));
	} else {
		if(A[from] > A[to]) ret = 1 + go(to,from - 1);
		ret = max(ret,go(from,to + 1));		
	}
	return dp[from][to] = ret;
}

int main(){
	scanf("%d",&N);
	for(int i = 0;i < N;++i){
		scanf("%d",&A[i]);
	}
	memset(dp,-1,sizeof(dp));
	for(int from = 0;from < N;++from){
		printf("%d ",max(go(from,0),go(from,N - 1)));
	}
	return 0;
}
