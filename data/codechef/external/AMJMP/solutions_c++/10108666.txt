#include <bits/stdc++.h>
using namespace std;

int dp[5050][5050];
int H[5050];

int f(int present, int endpoint)
{
    if(present==endpoint) return 0;
    if(dp[present][endpoint] !=-1) return dp[present][endpoint];

    int ret = 0;
    if(endpoint <= present) { //going left side
        if(H[endpoint] < H[present]) //making a jump
        {
            ret = 1 + f(endpoint, present - 1);
        }
        ret = max(ret, f(present, endpoint + 1));
    }
    else { //going right side
        if(H[endpoint] < H[present]) {
            ret = 1 + f(endpoint, present + 1);
        }
        ret = max(ret, f(present, endpoint - 1));
    }
    return dp[present][endpoint] = ret;
}


int main ()
{
    int n; cin>>n;
    for(int i = 0; i<n; i++) cin>>H[i];
    memset(dp,-1,sizeof dp);
    for(int i = 0; i<n; i++) {
        int ret1 = f(i,0); // going left
        int ret2 = f(i,n-1); //going right
        cout<<max(ret1,ret2)<<" ";
    }
}
