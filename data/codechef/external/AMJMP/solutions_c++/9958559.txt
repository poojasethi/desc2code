#include <bits/stdc++.h>
using namespace std;



int dp[5010][5010][2];
int h[5010];
int n;

int dfs(int a,int b,int d){
	if( a >= b ) return 0;
	if( dp[a][b][d] != -1 ) return dp[a][b][d];
	int ans = 0;
	if( d ) ans = max(dfs(a+1,b,d),ans);
	else ans = max(dfs(a,b-1,d),ans);
	if(d){
		if( h[a] < h[b] ){
			ans = max(ans,dfs(a,b,d^1)+1);
		}		
	}else{
		if( h[b] < h[a] ){
			ans = max(ans,dfs(a,b,d^1)+1);
		}		
	}
	return dp[a][b][d]=ans;
}
int main(){
	while( cin >> n ){
		for(int i =  0 ; i < n ; i++)
			for(int j = 0 ; j < n ; j++)
				dp[i][j][0] = dp[i][j][1] = -1;
		
		for(int i = 0 ; i < n ; i++) cin >> h[i];
		
		for(int i = 0 ; i < n ; i++){
			cout << max(dfs(i,n-1,0),dfs(0,i,1));
			if( i + 1 == n ) cout << "\n";
			else cout << " ";
		}
	}
}
