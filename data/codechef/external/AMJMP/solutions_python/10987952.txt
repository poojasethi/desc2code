#include <iostream>
#include <vector>
#include <algorithm>
#include <string.h>
#include <stdio.h>
using namespace std;
vector < pair < int , int > > v;
int dp[5000 + 23][5000 + 23];
int a [5000 + 23];
int main()
{
    int n;
    cin >> n;
    for(int i = 1 ; i <= n ; i++)
    {
        cin >> a[i];
        v.push_back(make_pair(a[i] , i));
    }
    sort(v.begin(),v.end());
    for(int k = 0 ; k < n ; k++)
    {
        int i = v[k].second;
        for(int j = i - 1 ; j >= 1 ; j--)
        {
            dp[i][j] = max((a[i] > a[j])?(1 + dp[j][i - 1]) : 0 , dp[i][j + 1]);
        }
        for(int j = i + 1 ; j <= n;j++)
        {
            dp[i][j] = max((a[i] > a[j])?(1 + dp[j][i + 1]) : 0 , dp[i][j - 1]);
        }
    }
    for(int i = 1 ; i <= n ; i++)
    {
        int ans = 0;
        for(int j = 1 ; j <= n ; j++)
        {
            ans = max(ans ,dp[i][j]);
        }
        cout << ans << " ";
    }
    return 0; 
}