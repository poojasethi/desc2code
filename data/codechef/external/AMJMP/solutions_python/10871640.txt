#include<bits/stdc++.h>
using namespace std;

int dp[5003][5003],n,h[5003];

void solve(int jmpsz){
	if(jmpsz == 0){
		for(int i =0; i< 5003; i++){
			for(int j =0; j< 5003; j++){
				dp[i][j] = 0;
			}
		}
		solve(1);
		return;
	}
	if(jmpsz>n){
		return;
	}
//	if(jmpsz == 1){
		for(int i =0; i< n ;i++){
			if(i>=jmpsz){
				dp[i][i-jmpsz] = dp[i][i-jmpsz+1];
				if(h[i] > h[i-jmpsz])dp[i][i-jmpsz] = max(1+ dp[i-jmpsz][i-1], dp[i][i-jmpsz]);
			}
			if(i<= n-jmpsz){
				dp[i][i+jmpsz] = dp[i][i+jmpsz-1];
				if(h[i] >h[i+jmpsz])dp[i][i+jmpsz] = max(1+dp[i+jmpsz][i+1], dp[i][i+jmpsz]);
			}
		}
		solve(jmpsz+1);
//	}
}

int main(){
	ios::sync_with_stdio(false);
	cin>>n;
	for(int i =0; i< n; i++){
		cin>>h[i];
	}
	solve(0);
	for(int i =0; i< n; i++){
		cout<<max(dp[i][0], dp[i][n-1])<<' ';
	}
	cout<<endl;
	return 0;
}
