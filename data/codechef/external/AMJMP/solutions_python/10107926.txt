#include <bits/stdc++.h>
//#include <ext/pb_ds/assoc_container.hpp>
//#include <ext/pb_ds/tree_policy.hpp>
using namespace std;
//using namespace __gnu_pbds; //new version c++
//using namespace pb_ds;

#define PB push_back
#define MP make_pair
#define SZ size()
#define REP(i, n) for(int i = 0; i < (n); i++)
#define ITR(i, j, n) for(int i = (j); i < (n); i++)
#define mem(array, val) memset(array, val, sizeof(array))
#define READ(filename) freopen(filename, "r", stdin)
#define WRITE(filename) freopen(filename, "w", stdout)
#define Fr first
#define Sc second
#define si(a) scanf("%d", &a)
#define sl(a) scanf("%lld", &a)
#define sd(a) scanf("%lf", &a)
#define ss(a) scanf("%s", a)
#define sii(a, b) scanf("%d%d", &a, &b)
#define sll(a, b) scanf("%lld%lld", &a, &b)
#define sdd(a, b) scanf("%lf%lf", &a, &b)
#define debug(x) cout << #x << ": " << x << endl
#define Fast_IO ios_base::sync_with_stdio(0);cin.tie(0)

typedef long long Long;
typedef pair <int, int> Pii;
///<-------------------------------------------------END OF TEMPLATE-------------------------------------------------->

#define MAX 5001
int N, H[MAX], dp[MAX][MAX][2];

int main() {
   si(N);
   REP(i, N) si(H[i]);

   ITR(len, 1, N) REP(p, N) {
      if(p+len < N) {
         if(H[p+len] < H[p]) dp[p][p+len][0] = 1 + dp[p+1][p+len][1];
         dp[p][p+len][0] = max(dp[p][p+len][0], dp[p][p+len-1][0]);
      }
      if(p-len >= 0) {
         if(H[p-len] < H[p]) dp[p-len][p][1] = 1 + dp[p-len][p-1][0];
         dp[p-len][p][1] = max(dp[p-len][p][1], dp[p-len+1][p][1]);
      }
   }

   REP(i, N) {
      int ans = max(dp[i][N-1][0], dp[0][i][1]);
      if(i) printf(" ");
      printf("%d", ans);
   }
   puts("");

   return 0;
}
