#include <vector>
#include <string>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <ctype.h>
#include <bitset>
#include <assert.h>
using namespace std;

#define REP(i, n) for(int i=0; i<(n); i++)
#define FOR(i, a, b) for(int i=(a); i<(b); i++)
#define IFOR(i, a, b) for(int i=(a); i>=(b); i--)
#define FORD(i, a, b, c) for(int i=(a); i<(b); i+=(c))

#define SS ({int x;scanf("%d", &x);x;})
#define SI(x) ((int)x.size())
#define PB(x) push_back(x)
#define MP(a,b) make_pair(a, b)
#define SORT(a) sort(a.begin(),a.end())
#define ITER(it,a) for(typeof(a.begin()) it = a.begin(); it!=a.end(); it++)
#define ALL(a) a.begin(),a.end()
#define INF 1000000000
#define V vector
#define S string
#define FST first
#define SEC second

typedef V<int> VI;
typedef V<S> VS;
typedef long long LL;
typedef pair<int, int> PII;

int main()
{
    int t;
    t=SS;
    while(t--)
    {
        int n,k,m,top=1,bot,in1,in2,j,f;
        LL sc=0,le=0;
        n=SS;k=SS;m=SS;
        bot=min(k,n);
        V<int> lines(m);
        REP(i,m)
        cin>>lines[i];
        REP(i,m)
        {

            if(!(lines[i]>=top && lines[i]<=bot))
            {
                sc++;
                in1=lines[i]-k+1;
                in2=lines[i];
                j=i;
                while(j<m && lines[j]>=in1 && lines[j]<=in2+k-1)
                {
                    in1=max(in1,lines[j]-k+1);
                    in2=min(in2,lines[j]);
                    j++;
                }
                i=j-1;
                if(top<in1)
                {
                    f=in1;

                }
                else
                    f=in2;
                le+=abs(top-f);
                top=f;
                bot=top+k-1;
            }
        }
        printf("%lld %lld\n",sc,le);
    }
    return 0;
}
