#include <iostream>
#include <cstdio>
#include <cassert>
using namespace std;

long long N, K, M;
long long pos, scroll, up, down;
long long length;

void perform();
long long top(long long k);
bool visible(long long k);

int main() {
  long long T;
  assert(scanf("%lld",&T)==1);
  while(T) {
    perform();
    T--;
  }
  return 0;
}

void perform() {
  pos = 1;
  up = 1;
  down = 1;
  length = 0;
  scroll = 0;
  assert(scanf("%lld %lld %lld", &N, &K, &M)==3);
  
  long long v;
  for(long long i=0;i<M;++i) {
    assert(scanf("%lld",&v)==1);
//     cerr << scroll << " " << length << " " << up << " " << down << "\n";
    
    down = max(down, v);
    up = min(up, v);
    
    if(visible(v))
      continue;
    if(v>pos) {
      length += top(v) - pos;
      pos = top(v);
    }
    else {
      length += pos-v;
      pos = v;
    }
    scroll++;
    
    if(visible(up)&&visible(down))
      scroll--;
    else {
      up = v;
      down = v;
    }
  }
  
  printf("%lld %lld\n", scroll, length);
//   cerr << up << " " << down << "\n";
}
long long top(long long k) {
  return (k-K+1);
}
bool visible(long long k) {
  if(k>=pos&&k<pos+K)
    return true;
  return false;
}