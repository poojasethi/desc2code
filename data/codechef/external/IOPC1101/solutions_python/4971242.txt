//
//  main.cpp
//  weirdfn
//
//  Created by Tapan on 03/10/14.
//  Copyright (c) 2014 Tapan. All rights reserved.
//
#include <stdio.h>
#include <vector>
#include <iostream>
#include <queue>
#include <set>
#include <algorithm>
#include <math.h>
#include <string>
#include <string.h>
#include <math.h>
#include <stdlib.h>
#include <map>
using namespace std;

//Input macros
#define si(n) scanf("%d",&n)
#define sc(n) scanf("%c",&n)
#define sl(n) scanf("%lld",&n)
#define sf(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define mem(a,b) memset(a,b,sizeof(a))
#define f(a,b) for(ll i=a;i<b;i++)
#define mIN(a,b) ((a)<(b)?a:b)
#define ll long long
ll a[500005]={0};
int main(int argc, const char * argv[]) {
    
    int t;
    si(t);
    while (t--) {
        ll n,k,m,i,j;
        sl(n);sl(k);sl(m);
        for(i=0;i<m;i++){
            sl(a[i]);
           }
        ll min=1,max=k,tmin=1,tmax=k,scroll=0,nums=0,dolast=0,dolastj=0;
        i=0;
        while (i<m) {
            if(a[i]>=min&&a[i]<=max){
                i++;
            }
            else{
                j=i+1;ll flag=0;
                if(j>=m){
                    dolast=1;
                    break;
                }
                tmin=a[i];tmax=a[i];
                while(j<m){
                    if(a[j]<tmin){
                        if(tmax-a[j]<=(k-1)){
                            tmin=a[j];
                            flag=1;
                            j++;
                        }
                        else{
                            break;
                        }
                    }
                    else if(a[j]>tmax){
                            if((a[j]-tmin)<=(k-1)){
                                tmax=a[j];
                                flag=1;
                                j++;
                            }
                            else{
                                break;
                            }
                        }
                    else if(a[j]>=tmin&&a[j]<=tmax){
                        flag=1;
                        j++;
                      }
                    if(j>=m){
                        dolastj=1;
                        break;
                    }
                   }
                if(dolastj==1)break;
                if(a[j]<tmin){
                    tmin=tmax-(k-1);
                }
                if(a[j]>tmax){
                    tmax=tmin+(k-1);
                }
                scroll+=1;
               
                ll kk;ll jj;
                kk=fabs(min-tmin);jj=fabs(max-tmax);
                nums+=mIN(kk,jj);
                min=tmin;
                max=tmax;
                 i=j;
    }
            }
        if(dolastj==1){
            scroll+=1;
            if(tmin==tmax){
                if(tmin<min){
                    nums+=(min-tmin);
                }
                else if(tmin>max) nums+=(tmin-max);
            }
            else{
                ll kk;ll jj;
                kk=fabs(min-tmin);jj=fabs(max-tmax);
                nums+=mIN(kk,jj);
            }
        }
        if(dolast==1){
            scroll+=1;
            if(a[m-1]<=min){
                nums+=(min-a[m-1]);
            }
            else if(a[m-1]>=max){
                nums+=(a[m-1]-max);
            }
        }
        printf("%lld %lld\n",scroll,nums);
        
        
    }
    return 0;
}
