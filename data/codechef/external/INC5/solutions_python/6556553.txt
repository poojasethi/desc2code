#include<iostream>
#include<stdio.h>
#include<algorithm>
#include<limits.h>
#include<vector>
#include<stack>
#include<math.h>
#define mp make_pair
#define pb push_back
#define sc(a) scanf("%d",&a)
#define REP(i,a,b) for(i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
typedef long long ll;
using namespace std;
int  visit[100005],comp[100005],j=0,count1=0;
vector<int> *vi;
void dfs(int node)
{
 visit[node]=1;
 count1++;
 for(int i=0;i<vi[node].size();i++){
  if(!visit[vi[node][i]]){
   dfs(vi[node][i]);}
 }
}
void solve(int n)
{
  int i=0;
  j=0;
  while(i<n)
  {

     if(!visit[i]){
      count1=0;
      dfs(i);
      comp[j++]=count1;
      }
      i++;
  }
}
int main()
{
int t,n,m;
int k,i;
sc(t);
while(t--){
 sc(n);
 sc(m);
 sc(k);
 for(i=0;i<n;i++)
  visit[i]=0;
for(i=0;i<100005;i++)
  comp[i]=0;
 vi=new vector<int>[n+1];
 while(m--)
 {
 ll src,des;
 sc(src);
 sc(des);
 vi[src-1].pb(des-1);
 vi[des-1].pb(src-1);
 }
 solve(n);
 sort(comp,comp+j,std::greater<int>());
 int res=0;
 int l=0;
 while(l<j&&k>0){
  res+=comp[l++];k--;}
 printf("%d\n",res);
}
return 0;
}
