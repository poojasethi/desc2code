#include <cstdio>
#include <iostream>
#include <algorithm>
#include <cmath>
#include <cstring>
#include <queue>
#include <cassert>
using namespace std;
#define p(x) cout<<#x<<":"<<x<<"\n"
#define lim 110
#define in(x,y) (x>=0 && x<y)

int n,m,x,y,ex,ey,cs,j,i;
char A[lim][lim];
int dx[]={-1,0,1,0};
int dy[]={0,1,0,-1};
queue <int> Q;
int D[lim][lim];

void push(int x,int y,int z)
{
  if(D[x][y]==-1)
  {
    D[x][y]=z;
	Q.push(m*x+y);
  }
}
int main()
{
  scanf("%d",&cs);
  while(cs--)
  {
    scanf("%d%d%d%d%d%d",&n,&m,&x,&y,&ex,&ey);
	for(i=0;i<n;i++)
	  scanf("%s",A[i]);
	assert(A[x][y]!='#' && A[ex][ey]!='#' && (x!=ex || y!=ey) && in(x,n) && in(y,m));
	memset(D,-1,sizeof D);
	push(x,y,0);
	while(!Q.empty())
	{
	  x=Q.front()/m;
	  y=Q.front()%m;
	  Q.pop();
	  for(i=0;i<4;i++)
	    for(j=1;in(x+dx[i]*j,n) && in(y+dy[i]*j,m) && A[x+dx[i]*j][y+dy[i]*j]!='#' && D[x+dx[i]*j][y+dy[i]*j]==-1;j++)
		  push(x+dx[i]*j,y+dy[i]*j,D[x][y]+1);
	}
	printf("%d\n",max(D[ex][ey],0));
  }
  return 0;
}
