
#include<iostream>
#include<cmath>
#include<algorithm>
#include<climits>
#include<vector>
#include<queue>
#include<stack>
#include<bitset>
#include<set>
#include<deque>
#include<cstdlib>
#include<cstdio>
#include<cstring>
#include<ctime>
#include<map>
using namespace std;

//#undef mydebug
#ifdef mydebug
#define db(args...) {putchar('[');printf(#args);printf(":");dbg,args;printf("]\n");}
#define assert(f) {if(!(f)){fprintf(stderr,"Line-->%d  Assertion failed: %s \n",__LINE__,#f);exit(1);}}
#define DBG_ARR(a,b,c) printf(#a);DBG(a,b,c)
#define DBG_MAT(a,s,b,c) printf(#a);printf("\n");DBGM(a,s,b,c)
#define DBG_VECT(a) printf(#a);DBG(a,0,(a).size())
#else
#define assert(f) {}
#define db(args...) {}
#define DBG_ARR(a,b,c) {}
#define DBG_MAT(a,s,b,c) {}
#define DBG_VECT(a) {}
#endif

#define MOD 	 1000000007LL
#define LL 		 long long
#define ULL      unsigned long long
#define ABS(x)   ((x)<0?-(x):(x))
#define SQR(x) 	 ((x)*(x))
#define CUBE(x)  ((x)*(x)*(x))
#define si(n)    scanf("%d",&n)
#define si2(n,m) scanf("%d %d",&n,&m)
#define sll(n)   scanf("%lld",&n)
#define slu(n)   scanf("%llu",&n)
#define ss(n)    scanf("%s",n)
#define pnl      printf("\n")
#define REP(i,n)        for(__typeof(n) i=0;i<(n);i++)
#define FOR(i,a,b)      for(__typeof(b) i=(a);i<(b);++i)
#define FORE(i,a,b)     for(__typeof(b) i=(a);i<=(b);++i)
#define FORD(i,a,b,d)   for(__typeof(b) i=(a);i<(b);i+=(d))
#define FORR(i,n,e)     for(__typeof(n) i=(n);i>=(e);--i)
#define FORRD(i,n,e,d)  for(__typeof(n) i=(n);i>=(e);i-=(d))
#define FORI(it,s) 	    for(__typeof((s).begin()) (it)=(s).begin();(it)!=(s).end();(it)++)
#define FILL(a,b)       memset(a,b,sizeof(a))
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define pb push_back
#define mp make_pair
#define XX first
#define YY second
#define UNIQUE(v) sort(all(v)),v.erase(unique(all(v)),v.end())
template<typename T>void DBG(const T A,int S,int N){cout<<"[";FOR(i,S,N){cout<<"#"<<i<<":"<<A[i]<<" ";}cout<<"]\n";}
template<typename T>void DBGM(const T A,int S,int M,int N){FOR(i,S,M){FOR(j,S,N){cout<<A[i][j]<<" ";}printf("\n");}}
struct debugger{template<typename T>debugger&operator,(const T&v){cout<<" "<<v;return *this;}}dbg;

#define SIZE 111
#define MAXX 10001
typedef pair<int,int> PII;
typedef vector<int> VI;


void precompute(){}
int R,C;
string arr[SIZE];
int visited[SIZE][SIZE];
PII source, destination,temp;
const int dx[]={-1,0,1,0};
const int dy[]={0,1,0,-1};
void dfs(PII point,queue<PII>&q){
            FOR(i,0,4){
                temp.XX=point.XX;
                temp.YY=point.YY;
                while(1){//going in that particular direction
                    temp.XX =temp.XX+dx[i];
                    temp.YY =temp.YY+dy[i];
                    if(temp.XX>=0&&temp.XX<R&&temp.YY>=0&&temp.YY<C&&arr[temp.XX][temp.YY]=='.'&&!visited[temp.XX][temp.YY]){
                        /*if(!visited[temp.XX][temp.YY]||(visited[temp.XX][temp.YY]>visited[point.XX][point.YY])){
                            visited[temp.XX][temp.YY]=visited[point.XX][point.YY]+1;
                            q.push(temp);
                        }else{
                            break;
                        }*/
                        visited[temp.XX][temp.YY]=visited[point.XX][point.YY]+1;
                            q.push(temp);

                    }else{
                        break;
                    }
                }//end while
        }//end for
}
void doThis(){
    si2(R,C);
    si2(source.XX,source.YY);
    si2(destination.XX,destination.YY);
    REP(i,R){
        //ss(arr[i]);
        cin>>arr[i];
        REP(j,C){
            visited[i][j]=0;
        }
    }
    PII temp2,point;
    visited[source.XX][source.YY]=1;
    queue<PII>q;
    q.push(source);
    while(!q.empty()){
        point = q.front();
        q.pop();
        if(point.XX==destination.XX&&point.YY==destination.YY){
            break;
        }
        dfs(point,q);

    }

    //db(source.XX,source.YY,destination.XX,destination.YY);
    //DBG_MAT(arr,0,R,C);
    DBG_MAT(visited,0,R,C);
    if(!visited[destination.XX][destination.YY]){
        puts("0");
    }else{
        printf("%d\n",visited[destination.XX][destination.YY]-1);
    }



}
int main(){
#ifdef amy
freopen("C:\\A\\in.txt","r",stdin);freopen("C:\\A\\out.txt","w",stdout);
#endif
precompute();
int t=1;
scanf("%d",&t);
while(t--){doThis();}
#ifdef amy
fprintf(stdout,"\nTIME: %.3lf sec\n",(double)clock()/(CLOCKS_PER_SEC));
#endif
return 0;
}
