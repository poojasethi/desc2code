#include<bits/stdc++.h>
//#define inf 100000000
#define ll  long long
#define pb push_back
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)

#define p(n) printf("%lld\n",n)
#define rep(i,a,n) for(i=a;i<=n;i++)
#define vi vector<int>
#define vii vector< vector<int> >
#define vpii vector< pair<int,int> >
#define mii map<int,int>
#define pb push_back
#define inf 1000000000LL
#define mp make_pair
#define MOD 1000000007LL
#define N 1000007
using namespace std;
ll powmod(long long a, long long b, long long c)
{
    ll ret=1LL;

    while(b)
    {
        if(b & 1)
            ret = (ret*a)%c;
        a=(a*a)%c;

        b>>=1;
    }
    return (ret)%c;
}
ll minverse(ll a,ll mod1)
{
    if(a==0LL)
        return 1LL;
    return powmod(a,(1LL*(mod1-2LL)),mod1)*1LL;
}
int dp1[21][21];
int bit[21];
ll dp[1200000];

int main()
{
int t,n,i,j,k,n1,n2,m;
s(t);
while(t--)
{
memset(dp1,0,sizeof(dp1));
memset(bit,0,sizeof(bit));
 s(n);s(m);
 for(i=1;i<=m;++i)
 {
  s(n1);s(n2);
  dp1[n1][n2]=1;
 }
for(i=1;i<=n;++i)
		{
			for(j=1;j<=n;++j)
			{
				bit[i]=bit[i]+((dp1[i][j]?1:0)<<(j-1));
			}
		}
 dp[0]=1;
 for(i=1;i<(1<<n);++i)
 {
   dp[i]=0;
   for(j=0;j<n;++j)
   {
     if(i&(1<<j))
     {
      if((i&(bit[j+1]))==0)
      dp[i]=(dp[i]+dp[i-(1<<j)])%MOD;
     }
   }
 }
   //cout<<sum<<" "<<dp[sum]<<endl;
 p(dp[(1<<n)-1]);
}
}
