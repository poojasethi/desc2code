#include <iostream>
#include<cmath>
#include<algorithm>
#define tiny 1e-3
using namespace std;

int main()
{
	int n;
	cin>>n;
	int x1,y1,x2,y2,x3,y3;
	for(int i=1;i<=n;i++)
	{
	   cout<<"Case #"<<i<<": ";
	   cin>>x1>>y1>>x2>>y2>>x3>>y3;
	   int flag=0;
	   int asq=(x2-x1)*(x2-x1)+(y2-y1)*(y2-y1);
	   int bsq=(x2-x3)*(x2-x3)+(y2-y3)*(y2-y3);
	   int csq=(x3-x1)*(x3-x1)+(y3-y1)*(y3-y1);
	   double a=sqrt(1.0*asq);
	   double b=sqrt(1.0*bsq);
	   double c=sqrt(1.0*csq);
	
	   int arr[3];
       arr[0] = asq;  arr[1] = bsq;  arr[2] = csq;
       sort(arr, arr + 3);
	   asq= arr[0];  bsq = arr[1];  csq = arr[2];
	   if((a+b-c>tiny) && (a+c-b>tiny) && (b+c-a>tiny) )
	   flag=1;
	   if(flag!=1)
	   {
	      cout<<"not a triangle\n";
		  continue;
		  
	    }
	
	if(asq==bsq || asq==csq || bsq==csq )
	{
		if((asq+bsq==csq))
			{
				cout<<"isosceles right triangle\n";
				continue;
			}
		else if((asq+bsq<csq)) 
		   {
		    	cout<<"isosceles obtuse triangle\n";
			    continue;
		   }
			else if((asq+bsq>csq) ) 
			{
				cout<<"isosceles acute triangle\n";
				continue;
			}
	}
	else
	{
		  	if((asq+bsq==csq))
			{
				cout<<"scalene right triangle\n";
				continue;
			}
			else if((asq+bsq<csq)) 
			{
				cout<<"scalene obtuse triangle\n";
				continue;
			}
			else if((asq+bsq>csq) ) 
			{
				cout<<"scalene acute triangle\n";
				continue;
			}
	}
	}
	
	
	return 0;
}