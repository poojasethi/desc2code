#include <bits/stdc++.h>
#define _ ios_base::sync_with_stdio(false);cin.tie(0);
using namespace std;
#define pb push_back
#define pob pop_back
#define pf push_front
#define pof pop_front
#define mp make_pair
#define all(a) a.begin(),a.end()
#define bitcnt(x) __builtin_popcountll(x)
#define M 1000000007
#define total 500005
//#define M 1000000007
typedef unsigned long long int uint64;
typedef long long int int64;
/*
inline void fast(int &x) {
    register int c = getchar_unlocked();
    x = 0;
    int neg = 0;
    for(; ((c<48 || c>57) && c != '-'); c = getchar_unlocked());
    if(c=='-') {
        neg = 1;
        c = getchar_unlocked();
    }
    for(; c>47 && c<58 ; c = getchar_unlocked()) {
        x = (x<<1) + (x<<3) + c - 48;
    }
    if(neg)
        x = -x;
}
*/
vector<int64>key;
queue<pair<int64,int64> >q;
bool visit[100005];
int main(){
	int64 j,t,k,c,i,f,val;
	cin>>t;
	while(t--){
		memset(visit,false,sizeof(visit));
		cin>>k>>c>>i>>f;
		for(j=0;j<k;j++){
			cin>>val;
			key.pb(val);
		}
		int64 ans=-1;
		q.push(mp(i,0));
		pair<int64,int64>tmp;
		while(!q.empty()){
			tmp=q.front();
			q.pop();
			if(tmp.first==f){
				ans=tmp.second;
				break;
			}
			tmp.first=tmp.first%100000;
			visit[tmp.first]=true;
			for(i=0;i<k;i++){
				int64 x=(tmp.first*key[i])%100000;
				if(visit[x]==false){
					visit[x]=true;
					q.push(mp(x,tmp.second+1));
				}	
			}
		}
		if(ans==-1){
			cout<<-1<<endl;
		}
		else{
			cout<<ans*c<<endl;
		}
		q=queue<pair<int64,int64> >();
		key.clear();	
	}
	return 0;
}