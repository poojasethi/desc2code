#include <iostream>
#define LL long long
#include <stdio.h>
#include <cstdlib>
#include<bits/stdc++.h>
#include <cmath>
using namespace std;
#define GC getchar_unlocked
int mod=10000007;
int _pow(LL a,LL P)
{
	LL r = 1;
	for(;P>0;P>>=1)
	{
		if(P&1) r = (r*a)%mod;
		a = (a*a)%mod;
	}
	return r;
}
void Scanf(int & x)
{
register int c=GC();
x=0;
for(;(c<48 || c>57); c=GC());
for(;(c>47 && c<58); c=GC()) {x=(x<<1) + (x<<3)+ c-48;}
}
 
#include <vector>
#define REP(i,n) for (int i = 0; i < n; i++)
using namespace std;
 
typedef long long ll;
const ll MOD = 10000007;
 
 
#define MS 2
 
int sz, tmul[MS][MS], tpow[MS][MS];
void mul(int ab[MS][MS], int a[MS][MS], int b[MS][MS])
{
	for(int i=0;i<sz;i++) for(int j=0;j<sz;j++)
	{
		LL x = 0;
		for(int k=0;k<sz;k++)
			x = x + (1ll*a[i][k]*b[k][j]);
		if(x>=MOD) x%=MOD;
		tmul[i][j] = x;
	}
 
	for(int i=0;i<sz;i++) for(int j=0;j<sz;j++) ab[i][j] = tmul[i][j];
}
 
void pow(int R[MS][MS], int A[MS][MS], int P, int s)
{
	sz = s;
	for(int i=0;i<sz;i++) for(int j=0;j<sz;j++)
		R[i][j]=(i==j), tpow[i][j] = A[i][j];
	while(P)
	{
		if(P&1) mul(R,R,tpow);
		if((P>>=1)) mul(tpow,tpow,tpow);
	}
}
int A[2][2], R[MS][MS], tax[MS];
int main()
{
    int t;
    Scanf(t);
    while(t--)
    {
        int  N;
		scanf("%d ",  &N);
		if(N==1)
		cout<<1<<endl;
		else if(N==2)
		cout<<5<<endl;
		else
		{ 
			N=N-2;
			memset(A,0,sizeof A);
			A[0][0]=1;
			A[0][1]=2;
			for(int i=0;i<2;i++) A[i+1][i] = 1;
			pow(R,A,N,2);
			long long ans = 1;
			ans =  (R[0][0]*5+R[0][1]*1) % mod;
			printf("%lld\n",ans);
		
        }
    }
}