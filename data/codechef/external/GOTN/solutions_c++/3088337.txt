#include<cstdio>
#include<iostream>
#include<vector>
#include<queue>
using namespace std;

#define MAXN 1001
#define MAXM 400001

struct node
{
    int v,e;
}ar[MAXM];

bool operator <(const node &a,const node &b)
{
    return a.e<b.e;
}

vector <node > list[MAXN];
bool vis[MAXN]={false};
priority_queue <node > pq;

int main()
{
    int t;
    scanf("%d",&t);
    while(t--)
    {
        int n,m,a,b,c,ans=0;
        scanf("%d%d",&n,&m);
        for(int i=0;i<=n;i++)
        {
            list[i].clear();
            vis[i]=false;
        }
        for(int i=0;i<m;i++)
        {
            node temp;
            scanf("%d%d%d",&a,&b,&c);
            temp.v=b;
            temp.e=c;
            list[a].push_back(temp);
            temp.v=a;
            list[b].push_back(temp);
            ans+=c;
        }
        int sel=1;
        for(int i=1;i<=n;i++)
        {
            //printf("%d\n",i);
            if(vis[i]==false)
            {
                sel=i;
                while(1)
                {
                    vis[sel]=true;
                    for(int i=0;i<list[sel].size();i++)
                    {
                        if(vis[list[sel][i].v]==false) pq.push(list[sel][i]);
                        //printf("aman\n");
                    }
                    while(pq.empty()==false&&vis[(pq.top()).v]==true)pq.pop();
                    if(pq.empty())break;
                    sel=(pq.top()).v;
                    ans-=(pq.top()).e;
                    pq.pop();
                }
            }
        }
        printf("%d\n",ans);
    }
}
