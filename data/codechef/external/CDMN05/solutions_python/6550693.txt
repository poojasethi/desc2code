#include<algorithm>
#include<iostream>
#include<cstdio>
#include<cstring>
using namespace std;
#define fill(x,a) memset(x,a,sizeof(x))
 
int n , m;
int dp[105][105];
 
int grundy(int x , int y)
{
 
	if(x < 1 || y < 1) return 0;
	if(x > n || y > m) return 0;
 
 
	if(dp[x][y]!=-1) return dp[x][y];
	if(dp[y][x]!=-1) return dp[y][x];
 
	int A[100];
	fill(A,0);
	int k = -1;
	for(int i=1; i<=x; i++) {
		for(int j=1; j<=y; j++) {
			int ans = grundy(i-1 , j-1);
			ans ^= grundy(i-1, y-j);
			ans ^= grundy(x-i , j-1);
			ans ^= grundy(x-i , y-j);
		//	if(ans < 100) 
				A[ans] = 1;
		}
	}
 
	int go = 0;
	while(A[go] == 1) //&& go < 100)
		go++;
	
	dp[x][y] = go;
	dp[y][x] = go;
	return go;
}
 
int main()
{
	int t;
	scanf("%d", &t);
	fill(dp,-1);
 
	while(t--)
	{
		scanf("%d %d", &n , &m);
		if(grundy(n,m))
			printf("Alice\n");
		else
			printf("Bob\n");
	}
	return 0;
} 