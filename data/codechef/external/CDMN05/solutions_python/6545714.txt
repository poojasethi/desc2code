#include<bits/stdc++.h>

using namespace std;

// Shortcuts for "common" data types in contests
typedef long long int ll;
typedef vector<int> vi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef set<int> si;
typedef map<string, int> msi;
// To simplify repetitions/loops, Note: define your loop style and stick with it!
#define s(i) scanf("%d",&i)
#define sl(i) scanf("%ld",&i)
#define sll(i) scanf("%lld",&i)
#define REP(i, a, b) \
for (int i = int(a); i <= int(b); i++) // a to b, and variable i is local!
#define NREP(i,a,b) \
for (int i = int(a); i >= int(b); i--)
#define TRvi(c, it) \
for (vi::iterator it = (c).begin(); it != (c).end(); it++)
#define TRvii(c, it) \
for (vii::iterator it = (c).begin(); it != (c).end(); it++)
#define TRmsi(c, it) \
for (msi::iterator it = (c).begin(); it != (c).end(); it++)
#define INF 2000000000 // 2 billion

int dp[25][25];

int main()
{
    //freopen("input.txt","r",stdin);
    //freopen("output.txt","r",stdout);
    memset(dp,0,sizeof(dp));
    REP(i,1,20)
    {
        REP(j,1,20)
        {
            bool ch = false;
            si myset;
            REP(p,1,i)
            {
                REP(q,1,j)
                {
                    int ans = dp[p - 1][q - 1] ^ dp[i - p][j - q] ^ dp[i - p][q - 1] ^ dp[p - 1][j - q];
                 //   cout << ans << endl;
                    myset.insert(ans);
                }
            }
            int p = 0;
            while( p >= 0 )
            {
                if( myset.count(p) == 0 )
                {
                    dp[i][j] = p;
                    break;
                }
                p++;
            }
        }
    }
    int t;s(t);
    while( t-- )
    {
        int n,m;s(n);s(m);
        if( dp[n][m] == 0 )
            printf("Bob\n");
        else
            printf("Alice\n");
    }
    return 0;
}
