#include <bits/stdc++.h>
using namespace std;

const int MAXN = 100000 + 10, SIZE = 20;
int A[MAXN], C[MAXN], ret[MAXN];
int val[SIZE], cnt[SIZE], idx[SIZE];
int n, m, s;

bool dfs(int d) {
  if (d == m) return true;
  for (int a = 0; a < s; ++a) {
    for (int b = 0; b < s; ++b) {
      if (a == b || idx[a] == -1 || idx[b] == -1) continue;
      if (val[a] - val[b] != C[d]) continue;
      ret[2 * d + 2] = idx[a]; idx[a] = -1;
      ret[2 * d + 3] = idx[b]; idx[b] = -1;
      if (dfs(d + 1)) return true;
      idx[b] = ret[2 * d + 3];
      idx[a] = ret[2 * d + 2];
    }
  }
  return false;
}

void run() {
  scanf("%d%d", &n, &m);
  for (int i = 0; i < n; ++i) scanf("%d", A + i);
  for (int i = 0; i < m; ++i) scanf("%d", C + i);
  bool flag = false;
  for (int a = 1; a <= m * 2 + 2 && !flag; ++a) {
    for (int b = 1; b <= m * 2 + 2 && !flag; ++b) {
      if (a == b) continue;
      ret[0] = a; ret[1] = b;
      memset(cnt, 0, sizeof(cnt));
      bool opt = 0; s = 0;
      for (int i = 0; i < n; ++i) {
        if (A[i] == a) opt = 1;
        else if (A[i] == b) opt = 0;
        else if (opt) cnt[A[i]]++;
      }
      for (int i = 1; i <= m * 2 + 2; ++i) {
        if (i != a && i != b) val[s] = cnt[i], idx[s++] = i;
      }
      if (dfs(0)) flag = 1;
    }
  }
  if (flag) {
    for (int i = 0; i < m * 2 + 2; ++i) printf("%d ", ret[i]);
    puts("");
  } else puts("Stupid Fish");
}

int main() {
  int T; scanf("%d", &T);
  for (int cas = 1; cas <= T; ++cas) run();
  return 0;
}
