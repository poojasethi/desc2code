//techwiz911
#include<bits/stdc++.h>
#define pb push_back
#define SZ(a) (int)(a.size())
#define all(a) a.begin(),a.end()
#define gcd __gcd
#define b_c __builtin_popcount
#define mp make_pair
#define fi(i,a,b) for(int i=a;i<b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define tr(c,it) for(typeof(c).begin() it=(c).begin();it!=(c).end();it++) 
#define X first
#define Y second
#define init(a,b) memset(a,b,sizeof(a))
#define n_p next_permutation
#define b_s binary_search
#define endl '\n'
#define INF INT_MAX
#define INFL LLONG_MAX
#define sd(n) scanf("%d",&n)
#define pd(n) printf("%d\n",n);
#define slf(n) scanf("%lf",&n);
#define plf(n) printf("%lf",n);
#define ss(n) scanf("%s",n)
#define ps(n) printf("%s",n);
#define sp() printf(" ");
#define ln() printf("\n");
#define TC() int t;sd(t);while(t--)
#define trace1(x)                cerr <<#x<<": "<<x<<endl;
#define trace2(x, y)             cerr <<#x<<": "<<x<<" | "<<#y<<": "<<y<< endl;
#define trace3(x, y, z)          cerr <<#x<<": "<<x<<" | "<<#y<<": "<<y<<" | "<<#z<<": "<<z<<endl;
#define trace4(a, b, c, d)       cerr <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<endl;
#define trace5(a, b, c, d, e)    cerr <<#a<<": "<<a<<" | "<<#b<<": "<<b<<" | "<<#c<<": "<<c<<" | "<<#d<<": "<<d<<" | "<<#e<<": "<<e<<endl;
#define die(s)  cout<<s<<endl; exit(0);
#define gc getchar_unlocked
using namespace std;

typedef long long LL;
typedef vector<int> VI;
typedef vector<LL> VLL;
typedef set<int> SI;
typedef set<LL> SLL;
typedef pair<int,int> PII;
typedef pair<LL,LL> PLL;

void FastIO()
{ios_base::sync_with_stdio(0);cin.tie(NULL);cout.tie(NULL);}
LL modpow(LL a, LL p, LL mod)
{LL ret=1;while(p){if(p&1)ret=(ret*a)%mod;a=(a*a)%mod;p/=2;}return ret;}
LL power(LL a, LL p)
{LL ret=1;while(p){if(p&1)ret=(ret*a);a=(a*a);p/=2;}return ret;}
//Template Ends Here
const int MAXN1 = 50011;
const int MAXN2 = 50011;
const int MAXM = 150011;

int n1,n2,edges,last[MAXN1],prev[MAXM],head[MAXM];
int matching[MAXN2],dist[MAXN1],Q[MAXN1];
bool used[MAXN1],vis[MAXN1];

void initialize(int _n1,int _n2) 
{
    n1=_n1;
    n2=_n2;
    edges=0;
    fill(last,last+n1,-1);
}

void addEdge(int u,int v) 
{
    head[edges]=v;
    prev[edges]=last[u];
    last[u]=edges++;
}

void bfs() 
{
    fill(dist,dist+n1,-1);
    int sizeQ=0;
    fi(u,0,n1)
        if(!used[u]) 
        {
            Q[sizeQ++]=u;
            dist[u]=0;
        }
    fi(i,0,sizeQ) 
    {
        int u1=Q[i];
        for(int e=last[u1];e>=0;e=prev[e]) 
        {
            int u2=matching[head[e]];
            if(u2>=0&&dist[u2]<0) 
            {
                dist[u2]=dist[u1]+1;
                Q[sizeQ++]=u2;
            }
        }
    }
}

bool dfs(int u1) 
{
    vis[u1]=true;
    for(int e=last[u1];e>=0;e=prev[e])
    {
        int v=head[e];
        int u2=matching[v];
        if(u2<0||(!vis[u2]&&dist[u2]==dist[u1]+1&&dfs(u2)))
        {
            matching[v]=u1;
            used[u1]=true;
            return true;
        }
    }
    return false;
}

int maxMatching() 
{
    fill(used,used+n1,false);
    fill(matching,matching+n2,-1);
    for(int res=0;;) 
    {
        bfs();
        fill(vis,vis+n1,false);
        int f=0;
        for(int u=0;u<n1;++u)
            if(!used[u]&&dfs(u))
                ++f;
        if(!f)
            return res;
        res+=f;
    }
}

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    for(;(c<48 || c>57);c = gc());
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}

LL a[111][111],add,cmp;
int n,ret;
int main()
{
    int T;
    scanint(T);
    while(T--)
    {
        scanint(n);
        fi(i,0,n)
            fi(j,0,n)
                scanf("%lld",&a[i][j]);
        add=0;
        fd(i,63,0)
        {
            initialize(n,n);
            cmp=(add|(1LL<<i));
            fi(j,0,n)
                fi(k,0,n)
                    if((a[j][k]&cmp)==cmp)
                        addEdge(j,k);
            ret=maxMatching();
            if(ret==n)
                add|=(1LL<<i);
        }
        printf("%lld\n",add);
    }
    return 0;
}

