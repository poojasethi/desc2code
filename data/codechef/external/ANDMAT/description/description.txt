
Captain Rex has been cornered by a battalion of droids and is trying to escape. The droids are in a matrix formation of size N × N.
Captain Rex's ammunition is enough to kill only N droids. In order to escape the droids, he must kill one droid from every row and one droid from every column.


Every droid is assigned a number, which is a complicated function of its attributes and rank. More specifically, a droid in row i and column j has been given the number A(i, j). The damage inflicted upon the droid army by killing N droids with numbers X1, X2, ... XN is  bitwise AND of the integers X1, X2, ... XN.


Captain Rex, of course, also wants to cause maximum damage to the droid army. Find the maximum damage he can possibly inflict by killing N droids as he escapes. To reiterate, he must kill exactly one droid from each row and each column to be able to escape successfully.


Input
The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single integer N denoting the size of the matrix.
The next N lines contain N space-separated integers. Specifically, j^th integer on i^th line contains A(i, j), denoting the number assigned to the corresponding battle droid.


Output

For each test case, output a single line containing an integer corresponding to the maximum damage that Captain Rex can inflict.

Constraints

1 ≤ T ≤ 10 
1 ≤ N ≤ 100 
0 ≤ A(i, j) ≤ 10^18 


Example
Input:
2
3
5 7 1
3 4 13 
2 7 3
2
3 9
4 1
Output:
5
1

Explanation
Example case 1. You can cause a total damage of 5 units by choosing the droids in positions (1, 1), (2, 3), (3, 2) so that the damage incurred is 5 & 13 & 7 = 5.
Example case 2. You can select (1, 1) and (2,2) to inflict damage = 3 & 1 = 1. 
