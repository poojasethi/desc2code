#include <iostream>
#include <cstdio>
#include <cstring>
#include <algorithm>

using namespace std;

long long skill[52],num[52];
int n,g;
long long dp[52][102][102];

long long f(int idx, int add, int exp)
{
    if ( idx == n-1 ) return (num[idx]+add)*skill[idx];
    long long &ans = dp[idx][add][exp];
    if ( ans != -1 ) return ans;
    ans = 0;
    int upgrades = min((long long)g-exp, num[idx]+add);
    for ( int i = 0; i <= upgrades; i++ ) {
        ans = max(ans, skill[idx]*(num[idx]+add-i) + f(idx+1,i,exp+i));
    }
    return ans;
    
}

int main()
{
    int t,i;
    cin >> t;
    while ( t-- ) {
          cin >> n;
          for ( i = 0; i < n; i++ ) cin >> num[i];
          for ( i = 0; i < n; i++ ) cin >> skill[i];
          cin >> g;
          memset(dp, -1, sizeof(dp));
          long long ans = f(0,0,0);
          cout << ans << endl;
    }
    return 0;
}
