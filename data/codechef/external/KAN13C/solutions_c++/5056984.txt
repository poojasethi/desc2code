#include <bits/stdc++.h>


using namespace std;

//----------------------------
//Returns a vector containing the zero based index of
//  the start of each match of the string K in S.
//  Matches may overlap
//----------------------------
void KMP(string K)
{
        vector<int> T(K.size() + 1, -1);
        for(int i = 1; i <= K.size(); i++)
        {
                int pos = T[i - 1];
                while(pos != -1 && K[pos] != K[i - 1]) pos = T[pos];
                T[i] = pos + 1;
                cout << (pos + 1) << " ";
        }
        cout << endl;
        return ;
//        vector<int> matches;
//        for(int i = 0, kp = 0; i < S.size(); i++)
//        {
//                while(kp != -1 && (kp == K.size() || K[kp] != S[i]))
//                     kp = T[kp];
//                kp++;
//                cout << kp << " ";
//                if(kp == K.size()) matches.push_back(i + 1 - K.size());
//        }
//
//        return matches;
//        cout << endl;
}

int main()
{
    int t;

    string a;
    while(1){
        cin >> a;
        if(a == "End")
            break;
        KMP(a);
    }

}
