#include<bits/stdc++.h>
using namespace std;
int lps[4000000];
void build_lps_array(string p)
{
	int m=p.length();
	lps[0]=0;
	int j=1,len=0;
	while(j<m)
	{
		if(p[j]==p[len])
		{
			lps[j]=++len;
			j++;
		}
		else
		{
			if(len!=0)
				len=lps[len-1];
			else
			{
				lps[j]=0;
				j++;
			}
		}
	}
	for(int i=0;i<m;i++)
		cout<<lps[i]<<" ";
	cout<<endl;
}
			
/*void kmp_search(string a,string b)
{
	int m=a.length();
	int n=b.length();
	int i=0,j=0;
	int temp=0,match=-1,ans;
	build_lps_array(a);
	while(i<n)
	{
		if(a[j]==b[i])
		{
			i++;
			j++;
			temp++;
		}
		if(temp>match)
		{
			match=temp;
			ans=i-j;
		}	
		if(j==m)
			break;
		else if(i<n && a[j]!=b[i])
		{
			temp=0;
			if(j!=0)
				j=lps[j-1];
			else
				i++;
		}
	}
	cout<<ans;
}*/

int main()
{
	ios_base::sync_with_stdio(false);
	string a;
	while(1)
	{
		cin>>a;
		if(a=="End")
			break;
		build_lps_array(a);
	}
	/*int n;
	string a,b;
	cin>>n;
	cin>>a>>b;
	b=b+b;
	kmp_search(a,b);*/
	return 0;
}