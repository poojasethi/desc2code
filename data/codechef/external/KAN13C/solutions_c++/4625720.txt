#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
#define vi vector<int>
#define vc vector<char>
#define pb push_back
#define mp make_pair
#define I vector<int>::iterator
#define ss(a) scanf("%s",a)
#define si(a) scanf("%d",&a)
#define sll(a) scanf("%lld",&a)
#define pi(a) printf("%d ",a)
#define pll(a) printf("%lld ",a)
#define ps(a) printf("%s ",a)
#define For(i,n) for(i=0;i<n;i++)
#define FOR(i,n) for(i=n-1;i>=0;i--)
#define nl printf("\n")
#define ll long long int
#define ull unsigned long long
#define MAX
using namespace std;
#define gc getchar_unlocked
void read(int &x)
{
	register int c = gc();
	x = 0;
	for(;(c<48 || c>57);c = gc());
	for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
}
char s[4000005];
int lps[40000005];
void compute_lps(int m){
	int i=1,len=0;
	while(i<m){
		if(s[i]==s[len])lps[i++]=++len;
		else{
			if(len!=0)len=lps[len-1];
			else lps[i++]=0;
		}
	}
}
int main()
{
	while(1){
		ss(s);
		if(strcmp(s,"End")==0)break;
		int m=strlen(s);
		compute_lps(m);
		for(int i=0;i<m;i++)pi(lps[i]);
		nl;
	}
	return 0;
}
