#include<bits/stdc++.h>
using namespace std;
#define max 1000000
struct edge
{
	int dest;
	int cost;
};
bool operator <(edge a,edge b)
{
	if(a.cost<b.cost) return 1;
	else return 0;
}
void fn(vector< edge > g[], int dis[], int v, int st)
{
		dis[st]=0;
		priority_queue< edge > q;
		q.push((edge){st,0});
		while(!q.empty())
		{
			edge p=q.top();
			q.pop();
			int dest=p.dest;
			for(int i=0;i<g[p.dest].size();i++)
			{
				
				int v = g[ p.dest ][ i ].dest;
				if ( dis[dest] + g[ p.dest ][ i ].cost < dis[ v ] ) {
				dis[ v ] = dis[ dest ] + g[ p.dest ][ i ].cost;
				q.push( g[ p.dest ][ i ] );
			}
		}
		}
}

int main()
{
	std::ios::sync_with_stdio(false);
	
		int v,e,k;
		cin>>v>>e>>k;
		vector< edge > g[v+1];
		int dis[ v+ 1 ];
		int s,d,c;
		for(int i=0;i<e;i++)
		{
			cin>>s>>d>>c;
			g[s].push_back((edge){d,c});
			g[d].push_back((edge){s,c});
		}
		for (int i = 0; i <= v; ++i ) {
			dis[ i ] = max;
		}int q;
		cin>>q;
		while(q--)
		{for (int i = 0; i <= v; ++i ) {
			dis[ i ] = max;
		}
		int st,en;
		cin>>st>>en;
		fn(g,dis,c,st);
		if(dis[en]==max||dis[en]>k)
		cout<<"NO\n"<<endl;
		else
		cout<<"YES\n";
		}
}
			
