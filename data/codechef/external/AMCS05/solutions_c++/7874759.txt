//////////////////////
//DEEPAK KUMAR SINGH//
//////////////////////
#include<bits/stdc++.h>
#define ll long long
#define l long

#define ins(s) scanf("%s",s)
#define in(s) scanf("%d",&s)
#define inc(s) scanf("%c",&s)
#define inl(s) scanf("%ld",&s)
#define inll(s) scanf("%lld",&s)
#define outs(s) printf("%s\n",s)
#define out(s) printf("%d\n",s)
#define outc(s) printf("%c\n",s)
#define outl(s) printf("%ld\n",s)
#define outll(s) printf("%lld\n",s)
#define lp(i,a,n)  for(i=a;i<n;i++)
#define mal(n) (int *)malloc(sizeof(int )*n)
#define mem(a) memset(a,0,sizeof(a))
#define pb push_back
#define gc getchar
#define pc putchar
#define md 1000000007
using namespace std;
inline void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}
ll mul(ll a,ll b,ll m)
{
   ll mod = m;
   a %= m;
   b %= m;
   long double res = a;
   res *= b;
   ll c = (ll)(res / mod);
   a *= b;
   a -= c * mod;
   a %= mod;
   if (a < 0) a += mod;
   return a;
}

ll fpower(ll x,ll p,ll MOD)                         //POWER  MODULO C
{
    ll res = 1;
    while(p>0)
    {
        if(p%2 != 0) res = mul(res,x,MOD);
        p = p/2;
        x = mul(x,x,MOD);
    }
    return res;
}

int sfast(char*str)
{
    register char c=0;
    register int i=0;
    while(c<33)c=gc();
    while(c!='\n')
    {
        str[i]=c;
        c=gc(),i++;
    }
    str[i]='\0';
     return i;
}
class node
{
    public:
    char word[18];
    node(){strcpy(this->word,"");}
    node(char *a)
    {
        strcpy(this->word,a);
    }
    node &operator=(node a)
    {
        strcpy(this->word,a.word);
    }
};
bool operator<(node a,node b)
{
    int a1=strlen(a.word);
    int b1=strlen(b.word);
    if(a1>b1) return true;
    else return false;
}
vector<int > v;
vector<int >::iterator it1,it2,it3;
void print()
{
    it1=v.begin();
    it2=v.end();
    while(it1!=it2)
    {
        cout<<(*(it1))<<" ";
        it1++;
    }
    cout<<endl;
}
/*bool cmp(node a,node b)
{
    if(a.dist<b.dist) return true;
}*/
class node1
{
    public:
    int a;

    node1()
    {
        this->a=0;
    }
};
bool isPrime(int n)                                          //PRIME NUMBER CHECKER
{
    if(n==1) return false;
    int a=sqrt(n);
    for(int i=2;i<=a;i++)
    {
        if(n%i==0)
        return false;
    }
    return true;
}
bool operator<(node1 c,node1 b)
    {
        return b.a<c.a;
    }
    bool fun(int n)
    {
        int sum=0,i;
        for(i=1;i<=sqrt(n);i++)
        {
            if(n%i==0)
            {
                sum+=i;sum+=(n/i);
            }
        }
        if((sqrt(n)*sqrt(n)==n)) sum-=sqrt(n);
        return
         isPrime(sum);
    }
int main()
{

    int t,res,i,ar[26],d;
    string s1,s2;
    //freopen("tst.c","r",stdin);
    cin>>t;
    while(t--)
    {
        cin>>s1>>s2>>d;
        res=0;
        mem(ar);
        for(i=0;i<s1.length();i++) ar[s1[i]-'a']++;
        for(i=0;i<s2.length();i++) ar[s2[i]-'a']--;
        for(i=0;i<26;i++) res+=abs(ar[i]);
        if(res<=d) cout<<"YES\n";
        else cout<<"NO\n";
    }
    return 0;
}
