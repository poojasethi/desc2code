#include <iostream>
#include <cstdio>
#include <vector>
#include <utility>
#include <set>
using namespace std;

#define		S(x)				scanf("%d",&x)
#define		INC(i,a,b)			for(int i=a;i<b;++i)
#define		REP(i,n)			INC(i,0,n)
#define		mp				make_pair
#define		pb				push_back

typedef pair<int,int> PII;
typedef vector<PII> VII;

const int MAX_N = 3e2, INF = (1<<31)-1;
int n,m,p,c;
bool curr, curr2;
bool S[MAX_N];
int A[MAX_N][MAX_N], D[MAX_N][MAX_N][2];

int main() {
  S(n); S(m); S(p); S(c);
  REP(i,p) {
    int x; S(x);
    S[x] = true;
  }
  S[0] = S[n-1] = true;
  REP(i,n) REP(j,n) if(i!=j) A[i][j] = INF; else A[i][j] = 0;
  REP(i,m) {
    int a, b, w;
    S(a); S(b); S(w);
    A[a][b] = A[b][a] = w;
  }
  
  REP(i,n) REP(j,n) {
    D[i][j][0] = A[i][j];
  }
  curr = true;
  INC(k,1,n) {
    bool oth = !curr;
    REP(i,n) REP(j,n) {
      int prev = D[i][j][oth];
      int d1 = D[i][k][oth], d2 = D[k][j][oth];
      D[i][j][curr] = prev;
      if(d1!=INF && d2!=INF) D[i][j][curr] = min(prev,d1+d2);
    }
    curr = !curr;
  }
  
  REP(i,n) REP(j,n) if(D[i][j][(!curr)]>c||!S[i]||!S[j]) D[i][j][(!curr)] = INF;
  
  INC(k,1,n) {
    bool oth = !curr;
    REP(i,n) REP(j,n) {
      int prev = D[i][j][oth];
      int d1 = D[i][k][oth], d2 = D[k][j][oth];
      D[i][j][curr] = prev;
      if(d1!=INF && d2!=INF) D[i][j][curr] = min(prev,d1+d2);
    }
    curr = !curr;
  }
  
  if(D[0][n-1][(!curr)]==INF) cout << -1;
  else cout << D[0][n-1][(!curr)];
  
  return 0;
}