#include <stdio.h>
#include <string.h>

//#define DISK
#define max(a,b) a>b?a:b
#define N 10005

int n, m, x, y, t, ret, ed;
int l[N], qd[8*N], qn[8*N], v[N*2], h[N], f[N], T[N*2][17], dp[N], d[N];

int min(int x, int y){return h[x]<h[y]?x:y;}

void F1(int x, int y)
{
int i=l[x];
for(h[x]=y,v[++t]=x,f[x]=t; i; i=qn[i])
	{
	if(f[qd[i]]||(i>>1)>=n) continue;
	F1(qd[i],y+1);
	v[++t]=x;
	}
}

int F2(int x, int y)
{
int t, tmp;
if((x=f[x])>(y=f[y]))
	{
	tmp=x;
	x=y;
	y=tmp;
	}
for(t=0; (1<<(t+1))<=(y-x+1); t++);
return min(T[x][t],T[y-(1<<t)+1][t]);
}

inline void F3(int x, int y)
{
qd[++ed]=y;
qn[ed]=l[x];
l[x]=ed;
}

void F4(int x, int y)
{
dp[x]=0;
for(int i=l[x]; i; i=qn[i])
	{
	if(qd[i]==y||(i>>1)>=n) continue;
	F4(qd[i],x);
	dp[x]+=dp[qd[i]];
	}
for(int i=l[x]; i; i=qn[i])
	{
	if((i>>1)<n) break;
	d[F2(x,qd[i])]++;
	dp[x]++;
	}
dp[x]-=d[x];
ret=max(ret,dp[x]);
}

main()
{
int fall, i, j;
#ifdef DISK
_wfreopen(L"in.txt",L"r",stdin);
_wfreopen(L"out.txt",L"w",stdout);
#endif
for(scanf("%d",&fall); fall--; ret=0,F4(0,-1),printf("%d\n",ret))
	{
	for(ed=!(i=!scanf("%d %d",&n,&m)),memset(l,0,sizeof(l)); ++i<n+m; scanf("%d%d",&x,&y),F3(x,y),F3(y,x));
	for(i=t=0,memset(f, 0, sizeof(f)),memset(d, 0, sizeof(d)),F1(0,0); ++i<=t; T[i][0]=v[i]);
	for(j=0; (1<<++j)<=t;)
		for(i=0; ++i+(1<<j)-1<=t; T[i][j]=min(T[i][j-1],T[i+(1<<(j-1))][j-1]));
	}
#ifdef DISK
fclose(stdin);
fclose(stdout);
#endif
return 0;
}
