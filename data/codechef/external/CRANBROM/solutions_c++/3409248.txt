#include<stdio.h>
#include<cstdlib>
#include<iostream>
#include<cstring>
#define INF 1000000000
using namespace std;
typedef long long int ll;
struct node
{
    char s[10];
    ll len;
};
struct node a[10002];
int pos_to_jump[10002];
int len_pos[100002];
ll max_profit[10002];
ll max(ll a, ll b)
{
    return a>b?a:b;
}
int main()
{
    for(int i=0;i<10002;i++)
    {
        pos_to_jump[i]=INF;
    }
    for(int i=0;i<100002;i++)
    {
        len_pos[i]=INF;
    }
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
    {
        scanf("%s%lld",a[i].s,&(a[i].len));
    }
    pos_to_jump[n-1]=n;
    for(int i=n-2;i>=0;i--)
    {
        if(strcmp(a[i+1].s,"found")==0)
        {
            pos_to_jump[i]=i+1;
        }
        else
        {
            pos_to_jump[i]=pos_to_jump[i+1];
        }
    }
    max_profit[n]=0;
    for(int i=n-1;i>=0;i--)
    {
        //printf("len_pos:%d\n",len_pos[a[i].len]);
        if(strcmp(a[i].s,"demand")==0)
        {
            len_pos[a[i].len]=i;
            max_profit[i]=max_profit[pos_to_jump[i]];
        }
        else
        {
            if(len_pos[a[i].len]==INF)
            {
                //printf("i:%d\n",i);
                max_profit[i]=max_profit[pos_to_jump[i]];
            }
            else
            {
                max_profit[i]=max(max_profit[pos_to_jump[i]],a[i].len+max_profit[pos_to_jump[len_pos[a[i].len]]]);
            }
        }
        //printf("%lld\n",max_profit[i]);
    }
    printf("%lld\n",max_profit[0]);
}
