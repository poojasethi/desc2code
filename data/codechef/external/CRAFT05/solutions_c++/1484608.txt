#include<iostream>
#include<cstdio>
#include<climits>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<vector>
#include<queue>
#include<algorithm>
#include<stack>
#include<map>
#include<ctime>
#include<functional>
#include<sstream>
#include<bitset>
#include<set>
using namespace std;

#define MOD 	 	10000007LL
#define LL          long long
#define ULL         unsigned long long
#define SQR(x)      ((x)*(x))
#define CUBE(x)     ((x)*(x)*(x))
#define ABS(x)      ((x)>0?(x):-(x))
#define FILL(a,b)   memset(a,b,sizeof(a))

#define si(a)       scanf("%d",&a)
#define si2(a,b)    scanf("%d %d",&a,&b)
#define sc(a)       scanf("%c",&a)
#define sf(a)       scanf("%f",&a)
#define ss(a)       gets(a)
#define pi(a)       printf("%d ",a)
#define pi2(a,b)    printf("%d %d ",a,b)
#define pc(a)       printf("%c ",a)
#define pf(a)       printf("%f ",a)
#define ps(a)       puts(a)
#define pnl         printf("\n")

#define FOR(i,a,b)  	 for(__typeof(b) i=(a);i<(b);++i)
#define FORE(i,a,b) 	 for(__typeof(b) i=(a);i<=(b);++i)
#define toAscii(A,len)   for(__typeof(len) i=0; i<len; A[i++]+='0')
#define fromAscii(A,len) for(__typeof(len) i=0; i<len; A[i++]-='0')

inline bool isUpperCase(char c){return c>='A'&&c<='Z';}
inline bool isLowerCase(char c){return c>='a'&&c<='z';}
inline bool isChar(char c){return c>='A'&&c<='Z'||c>='a'&&c<='z';}
inline bool isDigit(char c){return c>='0'&&c<='9';}
inline char toLowerCase(char c){return (isUpperCase(c))?(c+32):c;}
inline char toUpperCase(char c){return (isLowerCase(c))?(c-32):c;}
inline bool isLeap(int y){return (y%400==0||(y%100!=0&&y%4==0));}
inline int GCD(int a,int b){if(!a)return b;if(!b)return a;if(a==b)return a;if(a>b)return GCD(b,a%b);else return GCD(a,b%a);}
//int dx[]={1,0,-1,0};int dy[]={0,1,0,-1};//4 Direction
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
//int keyHasChars[]={0,0,3,3,3,3,3,4,3,4};
//char numPad[10][4]={{},{},{'a','b','c'},{'d','e','f'},{'g','h','i'},{'j','k','l'},{'m','n','o'},{'p','q','r','s'},{'t','u','v'},{'w','x','y','z'}};

#define SIZE 1001
#define MAXX INT_MAX
#define MINN INT_MIN
void doThis(){
    int n,x,y,z;
    bool flag=false;
    si(n);
    si2(x,y);
    si(z);
    for(int i=9;i>0;--i){
        for(int j=9;j>=0;--j){
            int num=10000*i+1000*x+100*y+10*z+1*j;
            if(num%n==0){
                flag=true;
                pi2(i,j);pi((num/n));pnl;
                break;
            }
        }if(flag){
            break;
        }
    }
    if(!flag)
    ps("0");
}
int main(){
#ifdef raj
	freopen("C:\\codes\\in.txt","r",stdin);
	freopen("C:\\codes\\out.txt","w",stdout);
    freopen("C:\\codes\\log.txt", "w", stderr);
#endif
int t=1;
si(t);
while(t--){ doThis();}
#ifdef raj
    fprintf(stdout, "\nTime taken : %.3lf   sec", (double) clock() /(CLOCKS_PER_SEC));
#endif
return 0;
}
/*
INPUT:

OUTPUT:

*/
