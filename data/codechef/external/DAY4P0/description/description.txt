NoOne recently became head of auckDunia. auckDunia has N cities. auckDunia is connected by M roads such that you can visit from any city to another and each road has some cost which had to paid to use that road. To travel between city A and city B people have to pay money corresponding to the roads that they used to travel.
Now, people don't want to waste money. They want to reach from city A and city B by paying as less as they can. This way there will be many roads which won't be used by anyone so maintaining them doesn't make much sense. NoOne wants to destroy these roads.

As you are elected to handle this stuff, help him to know which all roads needs to be destroyed.

Note: There can be multiple roads between two cities.

Note1: If there are two roads between two cities having same weight, a person may choose any of the road.



Input:
First line of input contains a single integer T denoting the no. of test cases.
First line of each test case consists of two space separated integers N and M denoting the no. of cities and no. of roads.
Next M lines of each test case consists of 3 space separated integers X, Y and W denoting that there is a bidirectional road between city X and city Y having cost W.



Output:
For each test output the result as follows:
First line contains a single integer denoting the no. of roads which can be destroyed. Suppose this integer is A then in next A lines print a single integer denoting the index of the road to be destroyed.
Indices need to be printed in increasing order. Consider 0-based indexing



Sample Input:
2
3 3
0 1 10
1 2 3
2 0 3
3 3
0 1 10
1 2 3
2 1 3


Sample Output:
1
0
0

Sample Explanation:
In first case you can destroy 0th road and in 2nd case you can't destroy a single road. A person can choose road 1 2 or 2 1. As we are not sure which road will be used so we won't destroy any road.


Constraints:
1 <= T <= 10
1 <= N <= 100
1 <= M <= 10000
1 <= W[i] <= 1000000

