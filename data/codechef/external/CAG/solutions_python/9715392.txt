#include<bits/stdc++.h>
using namespace std;

int main()
{
    int vertex,edges;
    int x,y,k;
    cin>>vertex>>edges>>k;
    vector<int> adj[vertex+1];
    for(int i=0; i<edges; i++)
    {
        cin>>x>>y;
        adj[x].push_back(y); // Directed Graph
    }

    stack<int> s;
    int used[vertex+1];
    for(int i=0; i<=vertex; i++)used[i]=0;
    int minn = INT_MAX;
    for(int i=1; i<=vertex; i++)
    {
        memset(used,0,sizeof(used));
        s.push(i);
        int count=0;
        used[i]=1;
        while(!s.empty())
        {
            int u = s.top();
            s.pop();
            count++;
            for(int j=0; j<adj[u].size(); j++)
            {
                if(!used[adj[u][j]])
                {
                    s.push(adj[u][j]);
                    used[adj[u][j]]=1;
                }
            }
        }

        minn = min(count,minn);
    }
    printf("%d\n",k*minn);
}
