#include <bits/stdc++.h>
using namespace std;
typedef long long int li;
typedef vector<li> vi;
typedef vector<vi> vvi;
vi visit(1001,0);
stack<li> S;
vi color(1001,0);
li strong,col;


void dfs(vvi & G,li x)
{
     visit[x]=1;
     vi :: iterator it;
     for(it=G[x].begin();it!=G[x].end();++it){
     	if(visit[*it]==0){
           dfs(G,*it);
     	}
     }
     S.push(x);
     color[x]=col;
     strong++;
}



int main()
{
	li n,m,k,u,v,ans=1000000000,i;
	cin>>n>>m>>k;
	vvi G(n+1),Gt(n+1);
    for(i=1;i<=m;++i){
    	cin>>u>>v;
    	G[u].push_back(v);
    	Gt[v].push_back(u);
    }
    for(i=1;i<=n;++i){
        if(visit[i]==0){
        	dfs(G,i);
        }
    }
    for(i=0;i<=1000;++i) visit[i]=0;
    stack<li> S1=S;
    col=1;
    vi nos(n+1);
    while(!S1.empty()){
    	strong=0;
    	u=S1.top();
    	S1.pop();
    	if(visit[u]==1)  continue;
    	dfs(Gt,u);
    	color[u]=col;
    	nos[col]=strong;
    	col++;
    }
    vi :: iterator it;
    vi oute(n+1,0);
    for(i=1;i<=n;++i){
        for(it=G[i].begin();it!=G[i].end();++it){
            if(color[i]!=color[*it]){
            	oute[color[i] ]=1;
            }
        }
    }
    for(i=1;i<col;++i){
    	if(oute[i]==0){
    		ans=min(ans,nos[i]);
    	}
    }
    ans*=k;
    cout<<ans<<endl;
}