#include<stdio.h>
#include<malloc.h>

int num,pairs,rs;
#define SIZE 100001
struct pair
{
	int num;
	int depend;
	struct pair *next;
};
struct pair mypair[SIZE];
int visited[SIZE];
int main()
{

  int tests, tc;
  int i;

  //freopen("input.txt","r",stdin);
  //scanf("%d",&tests);
  tests = 1;
  
  for(tc = 0; tc < tests; tc++)
  {
	  
	  scanf("%d %d %d",&num,&pairs,&rs);
	  int A, B;

	  for(i = 0; i <= num; i++)
	  {
			  mypair[i].num = i;
			  mypair[i].next = NULL;
			  visited[i] = 0;

	  }

	  for( i = 1; i <= pairs; i++)
	  {   
		  scanf("%d %d", &A,&B);

		  struct pair* temp;

		  temp = mypair[A].next;
		  mypair[A].next = (struct pair*)malloc(sizeof(struct pair));
		  mypair[A].next->num = B;
		  mypair[A].depend++;
		  mypair[A].next->next = temp;
	  }

	  //==========Scan Done=======//
	  int depend = 0;
	  int min = 999999;
	  int jj;
	 // while(1)
	  //{

		for(i = 1; i <= num; i++)
		{
			depend = 0;

				  for(jj = 0; jj <= num; jj++)
					{
						 visited[jj] = 0;
				    }

			struct pair *temp = &mypair[i];

			while(temp != NULL)
			{
				if(visited[temp->num] == 0)
				{
					depend++;
					visited[temp->num] = 1;

										
					if(temp->next == NULL)
					{
						temp = mypair[temp->num].next;

					}
					else 
						temp = temp->next;
				}
				else
					temp = temp->next;
               //visited[temp->num] = 0;

			}
			if(depend < min)
				min = depend;

		}


	  //}


	printf("%d",min*rs);
  }
  return 0;
}