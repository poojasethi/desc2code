#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

#define pb push_back
#define mp make_pair

int main()
{
	int t;
	cin>> t;
	while(t--)
	{
		int n, m;
		cin>> n;
		int parent[n];
		vector<int> edges[n];
		memset(parent, -1, sizeof(parent));
		int u, v;
		for(int i=0; i<n-1; i++){
			cin>> u>> v;
			u--; v--;
			parent[v]=u;
			edges[u].pb(v);
			edges[v].pb(u);
		}
		cin>> m;
		int dead[n];
		memset(dead, 0, sizeof(dead));
		for(int i=0; i<m; i++)
		{
			int u;
			cin>> u;
			u--;
			dead[u]=1;
		}

		int root=-1;
		for(int i=0; i<n; i++)
			if(parent[i]==-1)
				root=i;

		double ans=0;

		queue<pair<int, int> > q;
		q.push(mp(0, 0) );
		int visited[n];
		memset(visited, 0, sizeof(visited));

		while(!q.empty())
		{
			pair<int, int> u=q.front();
			q.pop();
			int num=u.second;
			ans+=(double)num/((double)(num+1));
			visited[u.first]=1;

			if(dead[u.first]==1)
				num++;
			for(int i=0; i<edges[u.first].size(); i++)
			{
				int v=edges[u.first][i];
				if(visited[v]==0)
					q.push(mp(v, num) );
			}
		}


		printf("%0.10lf\n", ans);
	}

	return 0;
}
