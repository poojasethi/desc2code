using namespace std;
#include <cmath>
#include <cstdio>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <string>
#include <cstring>
#include <vector>
#include <iostream>
#include <sstream>
#include <algorithm>
#define all(c) (c).begin(),(c).end()
#define tr(c,i) for(typeof((c).begin()) i = (c).begin(); i != (c).end(); i++)
typedef long long ll; 
typedef pair<int,int> pii; 
#define FOR(i,n) for (int i = 0; i < n; i++)
#define SZ(x) ((int)x.size())
#define PB push_back
#define MP make_pair
#define sf(x) scanf("%d",&x)
#define pf(x) printf("%d\n",x)
#define split(str) {vs.clear();istringstream ss(str);while(ss>>(str))vs.push_back(str);}
#define PI 3.141592653589793
vector<int> adjList[100002];
bool dead[100002];
double ans;
void dfs(int v, int num, int p)
{
	ans += 1-1/(num+1.0);
	if(dead[v])num++;
	FOR(i,adjList[v].size())
		if(adjList[v][i] != p)
			dfs(adjList[v][i], num, v);
}
int main()
{
	int t;
	sf(t);
	while(t--)
	{
		int n;
		sf(n);
		FOR(i,100002)
			adjList[i].clear();
		memset(dead, false, sizeof dead);
		ans = 0;
		FOR(i,n-1)
		{
			int u,v;
			sf(u);sf(v);
			u--;v--;
			adjList[u].PB(v);
			adjList[v].PB(u);
		}
		//cout<<"hello"<<endl;
		int m;
		sf(m);
		while(m--)
		{
			int a;
			cin>>a;
			a--;
			dead[a] = true;
		}
		dfs(0,0,-1);
		printf("%.8f\n", ans);
	}
}