#include <cstdio>
#include <cstring>

#include <iomanip>
#include <iostream>
#include <queue>
#include <vector>

using namespace std;

const int MAXN = 100001;

bool vis[MAXN];

int dead[MAXN];
int d[MAXN];

vector<int> inf[MAXN];

int main()
{
    int t;
    scanf("%d", &t);
    while (t--) {
        int n, m, x, y;
        scanf("%d", &n);

        for (int i = 0; i <= n; ++i) {
            inf[i].clear();
            d[i] = dead[i] = 0;
            vis[i] = false;
        }

        for (int i = 0; i < n - 1; ++i) {
            scanf("%d %d", &x, &y);
            inf[x].push_back(y);
            inf[y].push_back(x);
        }

        scanf("%d", &m);
        for (int i = 0; i < m; ++i) {
            scanf("%d", &x);
            dead[x] = 1;
        }

        queue<int> q;
        q.push(1);
        d[1] = dead[1];
        vis[1] = true;
        while (!q.empty()) {
            int node = q.front();
            q.pop();

            for (int i = 0; i < inf[node].size(); ++i) {
                int next = inf[node][i];
                if (!vis[next]) {
                    vis[next] = true;
                    d[next] = d[node] + dead[next];
                    q.push(next);
                }
            }
        }

        double exp_val = 0.0;
        for (int v = 1; v <= n; ++v) {
            d[v] -= dead[v];
            if (d[v] > 0) 
                exp_val += (1 - 1.0 / (double) (d[v] + 1));
        }
        cout << setprecision(12) << exp_val << "\n";
    }
    
    return 0;
}
