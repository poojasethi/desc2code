#include<iostream>
#include<cstdio>
#include<vector>

using namespace std;

vector<int> l[100010];
bool visited[100010];
bool dead[100010];
int adead[100010];

void dfs(int cur,int d)
	{
	int i;
	adead[cur]=d;
	if(dead[cur])
		{
		d++;
		}
	visited[cur]=true;
	for(i=0;i<l[cur].size();i++)
		{
		if(visited[l[cur][i]]==false)
			{
			dfs(l[cur][i],d);
			}
		}
	return;
	}
int main()
{
int T;
int N,M;
int i,j,k;
int u,v;

scanf("%d",&T);
while(T--)
{
scanf("%d",&N);
for(i=1;i<=N;i++)
	l[i].clear();
for(i=1;i<=N-1;i++)
	{
	scanf("%d %d",&u,&v);
	l[u].push_back(v);
	dead[i]=visited[i]=false;
	l[v].push_back(u);
	
	}
	
	dead[N]=visited[N]=false;	
	scanf("%d",&M);
for(i=0;i<M;i++)
	{
	scanf("%d",&j);
	dead[j]=true;
	}
	dfs(1,0);
	double ans=0;
	for(i=1;i<=N;i++)
		{
		//printf("->%d %d\n",i,adead[i]);
		ans+=((double)adead[i])/(adead[i]+1);
		}
	printf("%lf\n",ans);
}
return 0;
}