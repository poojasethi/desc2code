#include<bits/stdc++.h>

using namespace std;
#define CLR(a,val) memset(a, val, sizeof(a))
#define SZ(V) (LL)V.size()
#define ALL(V) V.begin(),V.end()
#define RALL(V) V.rbegin(),V.rend()
#define FORN(i, n) for(LL i = 0; i < n; i++)
#define FORAB(i, a, b) for(LL i = a; i <= b; i++)
#define MOD 1000000007LL
#define PB push_back
#define MP make_pair
#define F first
#define S second

typedef long long LL;
typedef pair<LL,LL> pll;


LL p[100030],cum_dead[100030],dead[100030];
bool visited[100030];
int main()
{
	LL test;
	cin >> test;
	while(test--){
		LL n,x,y;
		cin >> n;
		vector< vector<LL> > v(n+1);
		CLR(dead,false);
		CLR(cum_dead,-1);
		// FORAB(i,1,n) dead[i]=false,cum_dead[i]=-1;
		FORN(i,n-1){
			cin >> x >> y;
			v[x].PB(y);
			v[y].PB(x);
		}
		LL m;
		cin >> m;
		FORN(i,m){
			cin >> x;
			dead[x]=true;
		}

		CLR(visited,false);
		queue<LL> q;
		q.push(1);
		visited[1]=true;
		cum_dead[1]=0;
		while(!q.empty()){
			x=q.front();
			q.pop();
			FORN(i,SZ(v[x])) if(!visited[v[x][i]]){
				q.push(v[x][i]);
				visited[v[x][i]]=true;
				cum_dead[v[x][i]]=cum_dead[x]+dead[x];
			}
		}
		double result=0;
		FORAB(i,1,n) result+=(1.0*cum_dead[i])/(cum_dead[i]+1);
		printf("%.6lf\n",result );
	}
	return 0;
}