#include <bits/stdc++.h>
using namespace std;
int dead[100005];
int deadPar[100005];
void bfs(vector< vector<int> > &g,int s){
	int vis[g.size()],par[g.size()];
	memset(vis,0,sizeof vis);
	memset(par,0,sizeof par);
	queue<int> q;
	vis[s]=1;
	par[s]=0;
	q.push(s);
	while(!q.empty()){
		int u=q.front();
		deadPar[u]=deadPar[par[u]];
		if(dead[par[u]]) deadPar[u]++;
		for(int i=0;i<g[u].size();i++){
			int v=g[u][i];
			if(!vis[v]){
				vis[v]=1;
				par[v]=u;
				q.push(v);
			}
		}
		q.pop();
	}
}
int main(){
	int T,n,m,u,v;
	float ans;
	scanf("%d",&T);
	while(T--){
		scanf("%d",&n);
		vector< vector<int> > g(n+1);
		memset(dead,0,sizeof dead);
		memset(deadPar,0,sizeof deadPar);
		for(int i=1;i<n;i++){
			scanf("%d%d",&u,&v);
			g[u].push_back(v);
			g[v].push_back(u);
		}
		scanf("%d",&m);
		for(int i=0;i<m;i++){
			scanf("%d",&u);
			dead[u]=1;
		}
		bfs(g,1);
		ans=0.0;
		for(int i=1;i<=n;i++){
			ans+=float(deadPar[i])/float(deadPar[i]+1);
		}
		printf("%f\n",ans);
	}
	return 0;
}