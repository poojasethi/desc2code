#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <complex>
#include <utility>
#include <fstream>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cctype>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <climits>

using namespace std;


typedef long long LL;
typedef unsigned long long ULL;
typedef long double LD;
typedef vector <int> VI;
typedef vector <string> VS;
typedef vector <vector <int> > VVI;
typedef pair <int,int> PII;

#define REP(i,a,b) for(int i=a;i<b;i++)
#define rep(i,n) REP(i,0,n)
#define REV(i,a,b) for(int i=a-1;i>=b;i--)
#define rev(i,n) REV(i,n,0)
#define TR(i,x) for(typeof(x.begin()) i=x.begin();i!=x.end();i++)
#define GI ({ int x; scanf("%d",&x); x; })
#define GLL ({ LL x; scanf("%lld",&x); x; })
#define ALL(v) v.begin(),v.end()
#define PB push_back
#define MP make_pair
#define PQ priority_queue
#define inf (int)(1e9)
#define linf (LL)(1e18)
#define eps (double)(1e-9)
#define leps (LD)(1e-18)
#define PI (double)(3.141592653589793238)


inline int gi()
{
	register int r=0,c;
	for(c=getchar_unlocked();c<=32;c=getchar_unlocked());
	if(c=='-')
		return -gi();
	for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
	return r;
}

VI adj[100005];
bool d[100005],vis[100005];
double ans;

void dfs(int v,int x)
{
	if(vis[v])
		return;
	vis[v]=1;
	ans+=(double)x/(x+1);
	x+=d[v];
	rep(i,adj[v].size())
		dfs(adj[v][i],x);
}

int main()
{
	//freopen("input.txt","r",stdin);
	//freopen("output.txt","w",stdout);
	int t,n,u,v,m;
	t=gi();
	while(t--)
	{
		n=gi();
		rep(i,n-1)
		{
			u=gi(),v=gi();
			adj[u].PB(v);
			adj[v].PB(u);
		}
		memset(d,0,sizeof d);
		m=gi();
		rep(i,m)
			d[gi()]=1;
		ans=0.0;
		memset(vis,0,sizeof vis);
		dfs(1,0);
		cout<<fixed<<setprecision(9)<<ans<<'\n';
		REP(i,1,n+1)
			adj[i].clear();
	}
	return 0;
}
