#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>
#include <queue>
using namespace std;

#define pb push_back
#define mp make_pair
#define LL long long

double ans;
vector<LL> edges[100001];

int visited[100001], dead[100001];

void dfs(LL node,LL num)
{
	ans+=((double)num/(double)(num+1));
	visited[node]=1;
	if(dead[node]==1)
		num++;
	for(LL i=0;i<edges[node].size();i++)
	{
		if(visited[edges[node][i]]==0)
			dfs(edges[node][i], num);
     }
}
int main()
{
	LL t;
	cin>> t;
	while(t--)
	{
		ans=0;
		LL n, m;
		cin>> n;
		LL parent[n];
		memset(parent, -1, sizeof(parent));
		memset(dead, 0, sizeof(dead));
		memset(visited, 0, sizeof(visited));

		for(int i=0; i<n; i++)
			edges[i].clear();

		LL u, v;
		for(LL i=0; i<n-1; i++){
			cin>> u>> v;
			u--; v--;
			parent[v]=u;
			edges[u].pb(v);
			edges[v].pb(u);
		}
		cin>> m;
		for(LL i=0; i<m; i++)
		{
			LL u;
			cin>> u;
			u--;
			dead[u]=1;
		}

		LL root=-1;
		for(LL i=0; i<n; i++)
			if(parent[i]==-1)
				root=i;
		dfs(0, 0);
		printf("%0.10lf\n", ans);
	}

	return 0;
}
