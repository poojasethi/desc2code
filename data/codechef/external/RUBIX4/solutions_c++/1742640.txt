#include <stdio.h>
#include <stdlib.h>
inline int FAST_IO();
//Complexity < O(N^2)
int main()
{
	int t,n;
	int *p,*q,*r;
	int max,catcnt,tmp,flg;
	t=FAST_IO();
	while(t--)
	{
		n=FAST_IO();
		max=0;
		catcnt=0;
		
		p=(int*)calloc(n, sizeof(int));//idx.
		q=(int*)calloc(n, sizeof(int));//curr. var.
		r=(int*)calloc(n, sizeof(int));//count
		for(int i=0; i<n; i++)
		{
			tmp=FAST_IO();
			flg=0;
			for(int j=0; j<catcnt; j++)
			{
				if(q[j]-tmp==p[j]-i)
				{
					q[j]=tmp;
					r[j]++;
					p[j]=i;
					if(max < r[j]) max=r[j];
					flg=1;
					break;
				}
			}
			if(flg==0)
			{
				//printf("yae..\n");
				p[catcnt]=i;
				q[catcnt]=tmp;
				r[catcnt]=1;
				if(max==0) max=1;
				catcnt++;
			}
		}
		free(p);
		free(q);
		free(r);
		printf("%d\n", n-max);				
	}
	return 0;
}	
inline int FAST_IO() 
{
	int xxxx;
	char ch;
	int Negativity=0;
	while (((ch=getchar_unlocked()) < 48 || ch > 57) && ch != '-');
	xxxx=0;
	if (ch == '-') Negativity=1;
	else xxxx = ch-48;
	while ((ch=getchar_unlocked()) >= 48 && ch <= 57) xxxx=xxxx*10+ch-48;
	if (Negativity) return -xxxx;
	else return xxxx;
}	