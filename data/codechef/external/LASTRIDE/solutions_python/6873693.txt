import sys
f = sys.stdin

mod = 1000000007
DP = [0]*(2)
DP[0] = [0]*(111)
DP[1] = [0]*(111)
bits = [0]*(111)
X = [0]*(2)
Y = [0]*(2)
X[0] = [0]*(111)
X[1] = [0]*(111)
Y[0] = [0]*(111)
Y[1] = [0]*(111)
def process():
    DP[0][100] = 1
    DP[1][100] = 1
    X[0][100] = 1
    Y[0][100] = 0
    Y[1][100] = 1
    X[1][100] = 0
    i = 99
    while i >= 0 :
        DP[0][i] = DP[0][i+1] + DP[1][i+1]
        DP[1][i] = DP[0][i+1]
        X[0][i] = X[0][i+1] + X[1][i+1]
        Y[0][i] = Y[0][i+1] + Y[1][i+1]
        X[1][i] = X[0][i+1]
        Y[1][i] = Y[0][i+1]
        i -= 1
    return

def find(x) :
    for i in range(0,101) :
        if x > DP[0][i] :
            bits[i] += x - DP[0][i]
            x -= DP[0][i]
            j = 100
            k = i  
            while j > i :
                bits[j] += Y[0][k] * DP[1][j]
                k += 1 
                j -= 1
    return

t = int(f.readline())
process()
while t :
    L,R = [int(x) for x in f.readline().split()]
    R += 1
    for i in range(0,101) :
        bits[i] = 0
    find(R)
    find(L)
    sum = 0
    for i in range(0,101) :
        bits[i] %= 2
        if bits[i] == 1 :
            sum += pow(2,100-i,mod)
            sum %= mod
    print sum
    t -= 1
