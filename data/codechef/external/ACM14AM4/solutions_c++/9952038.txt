#include<bits/stdc++.h>
#define ll long
using namespace std;
inline ll scan()
{
    char c = getchar_unlocked();
    register ll x = 0;
    bool neg=false;
    if(c=='-')
    {
    	neg=true;
    }
    while(c<'0'||c>'9')
    {
        c=getchar_unlocked();
        
    }
    while(c>='0'&&c<='9')
    {
        x=(x<<1)+(x<<3)+c-'0';
        c=getchar_unlocked();
    }
    if(neg==false) return x;
    else if(neg==true) return -1*x;
}
ll dp1[103][103],dp2[103][103],ar[103][103];
int main()
{
	ll t;
	t=scan();
	while(t--)
	{
		ll i,j,k,n,p,m,sum=0,maxans=-INT_MAX,x,y,z;
		m=scan();n=scan();
		memset(dp1,0,sizeof(dp1));
		memset(dp2,0,sizeof(dp2));
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
			{
				ar[i][j]=scan();
			}
		}
		for(i=1;i<=n;i++)
		{
			dp1[1][i]=ar[1][i];
			dp2[1][i]=ar[1][i];
		}
		for(i=1;i<=m;i++)
		{
			dp1[i][1]=ar[i][1];
			dp2[i][n]=ar[i][n];
		}
		for(i=2;i<=m;i++)
		{
			for(j=2;j<=n;j++)
			{
				dp1[i][j]=dp1[i-1][j-1]+ar[i][j];
			}
		}
		for(i=2;i<=m;i++)
		{
			for(j=n-1;j>=1;j--)
			{
				dp2[i][j]=dp2[i-1][j+1]+ar[i][j];
			}
		}
		/*for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
			{
				cout<<dp1[i][j]<<" ";
			}
			cout<<endl;
		}
		cout<<endl;
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
			{
				cout<<dp2[i][j]<<" ";
			}
			cout<<endl;
		}
		cout<<endl;
		*/
		for(i=1;i<=m;i++)
		{
			for(j=1;j<=n;j++)
			{
				for(k=1;(i+k)<=m && (j+k)<=n;k++)
				{
					//sum=dp1[i+k][j+k]+dp2[i+k][j]-dp1[i-1][j-1]-dp2[i-1][(j+k)+1];
					if(k%2!=0)
					{
						sum=dp1[i+k][j+k]+dp2[i+k][j]-dp1[i-1][j-1]-dp2[i-1][j+k+1];
					}
					else
					{
					    sum=dp1[i+k][j+k]+dp2[i+k][j]-dp1[i-1][j-1]-dp2[i-1][j+k+1]-ar[(i+i+k)/2][(j+j+k)/2];	
					}
					if(sum>maxans)
					{
						maxans=sum;
						x=i;y=j;z=k;
					}
				}
			}
		}
		printf("%ld\n",maxans);
		//cout<<x<<" "<<y<<" "<<z<<endl;
	}
	return 0;
} 