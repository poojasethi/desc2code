#include<bits/stdc++.h>
#define ll long long int
#define s(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define ss(a) scanf("%s",a)
#define w(t) while(t--)
#define f(i,n) for(i=0;i<n;i++)
#define fd(i,n) for(i=n-1;i>=0;i--)
#define p(a) printf("%d",a)
#define pl(a) printf("%lld",a)
#define ps(a) printf("%s",a)
#define pc(a) printf("%c",a)
#define ent printf("\n")
#define maxn 1000000
#define mod 1000000007
#define po(a,b) (long long int)pow((double)(a),(double)(b))
#define abs(a,b) (long long int)abs(((double) (a))-((double) (b)))
#define min(a,b) (a<b?a:b)
#define max(a,b) (a>b?a:b)
using namespace std;
 
 
int main(){	
	int T,M,N;	
	s(T);
	while(T--){
		s(M);s(N);
		int A[M][N];
		long long strength, max_strength=-1000000000;	
		for(int i=0; i<M; i++){
			for(int j=0; j<N; j++){
				s(A[i][j]);				
			}
		}
		for(int i=1; i<M-1; i++){
			for(int j=1; j<N-1; j++){
				strength = A[i][j];
				//max_strength = max(strength,max_strength);
				int mins = min(min(j,N-j-1),min(i,M-i-1));				
				for(int k=1; k<=mins; k++){
					strength += A[i-k][j-k] + A[i-k][j+k] + A[i+k][j-k] + A[i+k][j+k];
					//cout << strength << endl;
					max_strength = max(max_strength,strength);
 
				}
			}
		}
		for(int i=0; i<M-1; i++){
			for(int j=0; j<N-1; j++){
				strength = A[i][j] + A[i+1][j] + A[i][j+1] + A[i+1][j+1];
				max_strength = max(strength,max_strength);
				int mins = min(min(j,N-j-2),min(i,M-i-2));
				for(int k=1; k<=mins; k++){
					strength += A[i-k][j-k] + A[i-k][j+k+1] + A[i+k+1][j-k] + A[i+k+1][j+k+1];
					max_strength = max(max_strength,strength);
 
				}
			}
		}
		pl(max_strength);
		ent;
	}
}  