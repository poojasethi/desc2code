#include<bits/stdc++.h>
using namespace std;
//acm practice am

/*void print(long long dp[][1000][2], long long m, long long n){
	for(long long i = 0; i < m; i++){
		for(long long j = 0; j < n; j++){
			cout << dp[i][j][0] << " " << dp[i][j][1] << ", ";
		} cout << endl;
	}
}*/
int main(){
    long long t; cin >> t;
    while(t--){
        long long m, n; cin >> m >> n;
        long long arr[m][n];
        long long dp[m][1000][2];
        for(long long i = 0; i < m; i++){
            for(long long j = 0; j < n; j++){
                cin >> arr[i][j];
                dp[i][j][0] = dp[i][j][1] = arr[i][j];
            }
		}
		long long maxi = LONG_LONG_MIN;
		for(long long l = 1; l < min(n, m); l++){
			for(long long i = 0; i < m; i++){
				for(long long j = 0; j < n; j++){
					if( i + l < m && j + l < n ){
						dp[i][j][0] += arr[i+l][j+l], dp[i][j+l][1] += arr[i+l][j];
						long long mid = 0;
						if(l%2 == 0) mid = arr[i+l/2][j+l/2];
						if(dp[i][j][0] + dp[i][j+l][1] - mid > maxi)
							maxi = dp[i][j][0] + dp[i][j+l][1] - mid;
					}					
				}
			}
			//print(dp, m, n); cout << endl;
		}
		cout << maxi << endl;
	}
    return 0;
}
