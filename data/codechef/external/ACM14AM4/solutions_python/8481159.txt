#include <bits/stdc++.h>

using namespace std;
typedef long long int lld;
typedef long long unsigned llu;

int dp1[103][103],dp2[103][103],a[103][103];

int main()
{
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
    #endif
    int t;
    cin >> t;
while(t--){
    int m,n;
    cin >> m >> n;
    lld maxsum = -INT_MAX,sum;
    memset(dp1,0,sizeof(dp1));
    memset(dp2,0,sizeof(dp2));
    for(int i = 1; i <= m; ++i)
        for(int j = 1; j <= n; ++j)
            cin >> a[i][j];
    for(int i = 1; i <= n; ++i)
        dp1[1][i] = dp2[1][i] = a[1][i];
    for(int i = 1; i <= m; ++i)
        dp1[i][1] = a[i][1],dp2[i][n] = a[i][n];
    for(int i = 2; i <= m; ++i)
        for(int j = 2; j <= n; ++j)
            dp1[i][j] = dp1[i-1][j-1] + a[i][j];
    for(int i = 2; i <= m; ++i)
        for(int j = n-1; j >= 1; --j)
            dp2[i][j] = dp2[i-1][j+1] + a[i][j];
    for(int i = 1; i <= m; ++i){
        for(int j = 1; j <= n; ++j){
            for(int k = 1; (k+i) <= m and (k + j) <= n; ++k ){
                if(k&1)
                    sum = dp1[i+k][j+k] + dp2[i+k][j] - dp1[i-1][j-1] - dp2[i-1][j+k+1];
                else
                    sum = dp1[i+k][j+k] + dp2[i+k][j] - dp1[i-1][j-1] - dp2[i-1][j+k+1] - a[i + (k >> 1)][j + (k >> 1)];
                maxsum = max(sum,maxsum);
            }
        }
    }
    printf("%lld\n",maxsum);
}
    return 0;
}
