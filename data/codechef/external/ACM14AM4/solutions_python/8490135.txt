//Landing platform
#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <math.h>

using namespace std;

template <typename DataType>
int input( DataType * a) {
  	char c=0; *a=0; 
  	while(c<33) {
  		c=getchar_unlocked();
  	}
  	while(c>33) {
  		*a=(*a<<3)+(*a<<1)+c-'0'; 
  		c=getchar_unlocked();  
  	}
  	return *a;
}

int f(int x) {
	int sum = 0;
	while(x>0) {
		sum += x%10;
		x = x/10;
	}
	//printf("res %d\n",sum);
	return sum;
}

int main() {
	int T,M,N,L,D,dig,sum,res,max,in;
	input(&T);
	while(T > 0) {
		max = -1000000000;
		input(&M);
		input(&N);
		int array[101][101] ={0};
		for(int i = 0;i<M;i++)
			for(int j = 0;j<N;j++) 
				scanf("%d",&array[i][j]);
		int te = (M<N)? M:N;
		for(int k = 2;k<=te;k++) {
			for(int i = 0;i<=M-k;i++) {
				for(int j = 0;j<=N-k;j++) {
					sum = 0;
					for(int x = i,y=j;x<i+k;x++,y++)  //Left diagnol
						sum+=array[x][y];
					for(int x = i,y=j+k-1;x<i+k;x++,y--) //Right diagnol
						sum+=array[x][y];
					if(k%2 != 0) //REmove duplicate center point of each
						if(array[(i+i+k)/2][(j+j+k)/2] < 0)
							sum += -1 * array[(i+i+k)/2][(j+j+k)/2];
						else
							sum -= array[(i+i+k)/2][(j+j+k)/2];
					if(sum>max)
						max = sum;
				}
			}
		}
		printf("%d\n",max);
		T--;
	}
}
