/* 
author - Neeraj Vaishnao , IIIT-Delhi
CODECHEF - neerajv
*/
#include <stdio.h>
#include <limits.h>

#define MAX(a,b) ((a > b)?a:b)
#define MIN(a,b) ((a < b)?a:b)  
int m , n ;
long long prev(long long **arr, int i , int j)
{
	return ((( i >= 0) && (i < n) && (j >= 0) && (j < m))?arr[i][j]:0) ;
}

int main()
{
	int cases , i , j , max , steps ;
	long long total , mtotal ;
	scanf("%d",&cases) ;
	while(cases--)
	{
		scanf("%d",&m) ; 
		scanf("%d",&n) ; 
		int ar[m][n] ;
		long long br[m][n] , cr[m][n] ;
		j = -1 ;
		while (++j < n)
		{
			scanf("%d",&ar[0][j]) ; 
			br[0][j] = cr[0][j] = ar[0][j] ;
		}
		
		i = 0 ;
		while (++i < m)
		{
			j = -1 ;
			while (++j < n)
			{
				scanf("%d",&ar[i][j]) ; 
				//br[i][j] = ar[i][j] + prev(br,i-1,j-1) ;
				br[i][j] = ar[i][j] + ((( i >= 1) && (j >= 1))?br[i-1][j-1]:0) ;
				//cr[i][j] = ar[i][j] + prev(cr,i-1,j+1) ;
				cr[i][j] = ar[i][j] + ((( i >= 1) && (j+1 < n))?cr[i-1][j+1]:0) ;
			}
		}
		// print array 
/*		printf("\n\nar array \n") ; 
		i = -1 ;
		while (++i < m)
		{
			j = -1 ;
			while (++j < n)
			{
				printf("%d ",ar[i][j]) ; 
			}
			printf("\n") ; 
		}
		printf("\n\nbr array \n") ; 
		i = -1 ;
		while (++i < m)
		{
			j = -1 ;
			while (++j < n)
			{
				printf("%lld ",br[i][j]) ; 
			}
			printf("\n") ; 
		}
		
		printf("\n\ncr array \n") ; 
		i = -1 ;
		while (++i < m)
		{
			j = -1 ;
			while (++j < n)
			{
				printf("%lld ",cr[i][j]) ; 
			}
			printf("\n") ; 
		}*/
		
//		printf("\n\n\n\n") ; 
		//max = MAX(m,n) ;
		max = MIN(m,n) ;
		mtotal = LLONG_MIN ;
		i = -1 ;
		while (++i < m)
		{
			j = -1 ;
			while (++j < n)
			{
				steps = 0 ;
				while (++steps < max)
				{
					if(((i+steps) < m ) && ((j+steps) < n ))
					{
						total = br[i+steps][j+steps] - br[i][j] + ar[i][j]  + cr[i+steps][j] - cr[i][j+steps] + ar[i][j+steps] ;
						(steps%2)?0:(total -= ar[(2*i+steps)/2][(2*j+steps)/2]) ;
						mtotal = MAX(total,mtotal) ;
					}
					else
						break ;
				}
			}
		}
		printf("%lld\n",mtotal) ; 
	}
	return 0 ;
}
