#include<bits/stdc++.h>
#define ll long long
#define pb push_back
#define mp make_pair
#define MOD 1000000007
#define pii pair<int,int>
#define sc scanf
#define pf printf
#define MAX 105
using namespace std;

struct cmp
{
    bool operator()(pii a ,pii b){
        return a.second > b.second;
    }
};

ll modpow(ll base, ll exp, ll mod) 
{
  base %= mod;
  ll result = 1;
  while (exp > 0) {
    if (exp & 1) result = (result * base) % mod;
    base = (base * base) % mod;
    exp >>= 1;
  }
  return result;
}

ll num[MAX][MAX],fo[MAX][MAX],rev[MAX][MAX];

int main()
{
	ios::sync_with_stdio(0);
	cin.tie(0);
	//freopen("C:/Users/HP/Desktop/codejam/1A_large_input.txt","r",stdin);//redirects standard input
	//freopen("C:/Users/HP/Desktop/codejam/1A_large_output.txt","w",stdout);//redirects standard output
	int t,n,m;
	cin>>t;
	while(t--)
	{
		cin>>n>>m;
		for(int i=1; i<=n; i++)
		{
			for(int j=1; j<=m; j++)
			{
				cin>>num[i][j];
			}
		}
		for(int i=0; i<=n; i++)
		{
			num[i][0]=0;
			num[i][m+1]=0;
		}
		for(int i=0; i<=m+1; i++)
		{
			num[0][i]=0;
		}
		for(int i=0; i<=n; i++)
		{
			fo[i][0]=num[i][0];
			rev[i][m]=num[i][m];
			fo[i][1]=num[i][1];
			rev[i][m+1]=num[i][m+1];
		}
		for(int i=0; i<=m+1; i++)
		{
			fo[0][i]=num[0][i];
			rev[0][i]=num[0][i];
		}
		for(int i=1; i<=n; i++)
		{
			for(int j=1; j<=m; j++)
			{
				fo[i][j]=fo[i-1][j-1]+num[i][j];
			}
		}
		for(int i=1; i<=n; i++)
		{
			for(int j=m; j>0; j--)
			{
				rev[i][j]=rev[i-1][j+1]+num[i][j];
			}
		}
		
		/*cout<<endl;
		for(int i=0; i<=n; i++)
		{
			for(int j=0; j<=m+1; j++)
			{
				cout<<" "<<fo[i][j];
			}
			cout<<endl;
		}
		cout<<endl;
		for(int i=0; i<=n; i++)
		{
			for(int j=0; j<=m+1; j++)
			{
				cout<<" "<<rev[i][j];
			}
			cout<<endl;
		}
		cout<<endl;*/
		
		int len=-1+min(n,m);
		ll ans=-(ll)100*MOD,p;
		for(int i=1; i<=n; i++)
		{
			for(int j=1; j<=m; j++)
			{
				for(int k=1; k<=len; k++)
				{
					if(i+k<=n && j+k<=m) {
						p=fo[i+k][j+k]+rev[i+k][j]-fo[i-1][j-1]-rev[i-1][j+k+1];
						if(!(k&1)) {
							p-=num[i+k/2][j+k/2];
						}
						ans=max(ans,p);
						//cout<<" "<<i<<" "<<j<<" "<<k<<" "<<p<<" "<<ans<<endl;
					}
				}
			}	
		}
		cout<<ans<<endl;
	}
	
	return 0;
}