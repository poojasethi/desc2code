#include <bits/stdc++.h>
#define f(i,x,y) for (int i = x; i < y; i++)
#define fd(i,x,y) for(int i = x; i>= y; i--)
#define FOR(it,A) for(typeof A.begin() it = A.begin(); it!=A.end(); it++)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define vint vector<int>
#define ll long long
#define clr(A,x) memset(A, x, sizeof A)
#define pb push_back
#define pii pair<int,int>
#define fst first
#define snd second
#define ones(x) __builtin_popcount(x)
#define cua(x) (x)*(x)
#define eps (1e-9)
#define oo (1<<30)
#define debug(x) cout <<#x << " = " << x << endl
#define adebug(x,n) cout <<#x<<endl; f(i,0,n)cout<<x[i]<<char(i+1==n?10:32)
#define mdebug(x,m,n) cout <<#x<<endl; f(i,0,m)f(j,0,n)cout<<x[i][j]<<char(j+1==n?10:32)
#define N 105
#define ld double
using namespace std;

ld C[50][50];
ld pa[50][50], pb[50][50];
ld g12[40+1][40+1];
ld sa[40+1][40+1], sb[40+1][40+1];
ld ta[41][41], tb[41][41];
ld suma1[41], suma2[41];

int main(){
	f(i,0,50)f(j,0,i+1) {
		ld &res = C[i][j];
		if (j == 0) { res = 1; continue; }
		res = C[i-1][j] + C[i-1][j-1];
	}


	int n,k; double a,b; string s;
	int tc;
	cin >> tc;
	while (tc--) {
		cin >> n >> k >> a >> b >> s;
		ld div = 1/C[n][k];
		a/= 100;
		b/= 100;

		int na = 0, nb = 0;
		f(i,0,n) if (s[i] == 'A') na++; else nb++;
		f(i,0,n+1)f(j,0,n+1) {
			pa[i][j] = 1;
			f(ii,0,i) pa[i][j] *= a;
			f(ii,0,j) pa[i][j] *= 1-a;
			pb[i][j] = div;
			f(ii,0,i) pb[i][j] *= b;
			f(ii,0,j) pb[i][j] *= 1-b;
		}

		ld g[na+1][nb+1];
		ld num = 0, den = 0;
		g[0][0] = 0;
		int z1 = 0, z2 = 0;
		f(x1,0,na+1) f(x2,0,nb+1) {
			if (x1 == 0 && x2 == 0) continue;
			num = den = 1;
			f(i1,0,x1+1) f(j1,0,i1+1) ta[i1][j1] = C[i1][j1] * pa[j1][i1-j1] * C[x1][i1];
			f(i2,0,x2+1) f(j2,0,i2+1) tb[i2][j2] = C[i2][j2] * pb[j2][i2-j2] * C[x2][i2];
			//			f(i1,0,x1+1) f(i2,0,x2+1) {
			//				ld &res = g12[i1][i2];
			//				res = 0;
			//				f(j1,0,i1+1) f(j2,0,i2+1) {
			//					if (j1 == 0 && j2 == 0) continue;
			//					res += g[x1-j1][x2-j2] * sa[i1][j1] * sb[i2][j2];
			//				}
			//			}

			for (int k1 = 0, k2 = k; k1 <= k; k1++, k2--) {
				int c1 = min(x1,k1), c2 = min(x2,k2);

				clr(suma1, 0);
				clr(suma2, 0);
				for (int j1 = 0; j1 <= c1; j1++) for (int i1 = j1; i1 <= c1; i1++) suma1[j1] += C[na-x1][k1-i1] * ta[i1][j1];
				for (int j2 = 0; j2 <= c2; j2++) for (int i2 = j2; i2 <= c2; i2++) suma2[j2] += C[nb-x2][k2-i2] * tb[i2][j2];

				for (int i1 = 0; i1 <= c1; i1++) for (int i2 = 0; i2 <= c2; i2++) 
					den -= (C[na-x1][k1-i1] * ta[i1][0]) * (C[nb-x2][k2-i2] * tb[i2][0]);
				for (int j1 = 0; j1 <= c1; j1++) for (int j2 = 0; j2 <= c2; j2++) if (j1 || j2) 
					num += (g[x1-j1][x2-j2] * suma1[j1]) * suma2[j2];
			}

			//			f(k1,0,k+1) f(i1,0,k1+1) if(i1<=x1) f(i2,0,k-k1+1) if (i2 <= x2) {
			//				ld coef = C[x1][i1] * C[na-x1][k1-i1] * C[x2][i2] * C[nb-x2][k-k1-i2] / C[n][k];
			//				//				if (x1 == na && x2 == nb) cout << "coef = " << coef <<  " " << k1 << " " << i1<<i2 << endl;
			//				num += g12[i1][i2] * coef;
			//				den -= pa[0][i1] * pb[0][i2] * coef;
			//				//				if (x1 == na && x2 == nb) cout << " " << num << " " << den << " " << g12[i1][i2] << " " << i1 << i2 << " " << pa[0][i1] << pb[0][i2]<<endl;
			//			}
			//			if (x1 == na && x2 == nb) cout << num << " " << den << endl;
			g[x1][x2] = num / den;
		}

		//		cout << z1 << " " << z2 << endl;
		//		f(x,1,n+1) {
		//			num = den = 1;
		//			f(i,0,k+1) if(i<=x){
		//				ld coef = C[x][i] * C[n-x][k-i] / C[n][k];
		//				f(j,0,i+1) {
		//					if (j == 0) den -= C[i][j] * pow(a, j) * pow(1-a, i-j) * coef;
		//					else num += g[x-j] * C[i][j] * pow(a, j) * pow(1-a, i-j) * coef;
		//				}
		//			}
		//			g[x] = num / den;
		//		}

		printf("%.10f\n", g[na][nb]);
	}
	return 0;
}

