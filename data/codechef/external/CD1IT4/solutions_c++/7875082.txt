// template : rjohari23

#include<iostream>
#include<cstdio>
#include<cmath>
#include<cstring>
#include<stdlib.h>
#include<algorithm>
#include<vector>
#define getcx getchar_unlocked
#define pc(x) putchar_unlocked(x);
#ifndef ONLINE_JUDGE
    #define getcx getchar
#endif
using namespace std;
#define SET(a,n) memset((a),n,sizeof(a))
#define pb push_back
#define SIZE(v) v.size()
#define F first
#define S second
#define ull unsigned long long int
#define lli long long int
#define li long int
#define ii int
#define mod 1000000007

inline int inp()
{
   int n=0;
   int ch=getcx();int sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}

inline long long in()
{
   long long n=0;
   long long ch=getcx();long long sign=1;
   while( ch < '0' || ch > '9' ){if(ch=='-')sign=-1; ch=getcx();}
 
   while(  ch >= '0' && ch <= '9' )
           n = (n<<3)+(n<<1) + ch-'0', ch=getcx();
   return n*sign;
}

inline void write (lli n)
{
    lli N = n, rev, count = 0;
    rev = N;
    if (N == 0) { pc('0');return ;}
    while ((rev % 10) == 0) { count++; rev /= 10;} //obtain the count of the number of 0s
    rev = 0;
    while (N != 0) { rev = (rev<<3) + (rev<<1) + N % 10; N /= 10;}  //store reverse of N in rev
    while (rev != 0) { pc(rev % 10 + '0'); rev /= 10;}
    while (count--) pc('0');
}

/* http://discuss.codechef.com/questions/20106/fast-string-input */
/* fast string input using getchar_unlocked */
inline string ip()
{
    string s = "";
    int temp=getchar_unlocked();
    while ( temp<'a'||temp>'z' )
        temp = getchar_unlocked();
    while ( temp>='a'&&temp<='z' )
    {
        s += (char)temp;
        temp = getchar_unlocked();
    }
    return s;
}

/*lli a[1000][1000],m,n;
void show ()
{
	lli i,j;
	for ( i=0;i<m;i++ )
	{	for ( j=0;j<n;j++ )
			cout << a[i][j] << " ";
		cout << endl;
	}
}*/

int main()
{
	
	lli m,n,p,i,j,x,y;
	
	m = in();	n = in();	p = in();
	lli a[m+1][n+1];
	SET(a,0);
	
	while ( p-- )
	{
		x = in();	y = in();
		a[x][y] = -1;
	}
	
	if ( a[1][1]==-1 )
	{
		printf("0");
		return 0;
	}
	
	//first column
	for ( i=1;i<=m;i++ )
	{
		if ( a[i][1]==-1 )
			break;
		else
			a[i][1] = 1;
	}
	
	//first row
	for ( i=2;i<=n;i++ )
	{
		if ( a[1][i]==-1 )
			break;
		else
			a[1][i] = 1;
	}
	
	//show();
	
	for ( i=2;i<=m;i++ )
	{
		for ( j=2;j<=n;j++ )
		{
			if ( a[i][j]==-1 )
				continue;
			
			if ( a[i-1][j]>0 )
				a[i][j] = (a[i][j] + a[i-1][j] + mod)%mod;
			if ( a[i][j-1]>0 )
				a[i][j] = (a[i][j] + a[i][j-1] + mod)%mod;
		}
	}
	
	//show();
	if ( a[m][n]>=0 )
		write(a[m][n]);
	else
		printf("0");
	
	return 0;
}