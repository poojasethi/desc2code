#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
#define gc getchar_unlocked
#define MOD 1000000007
int read_int(){
    register int x = 0, c = gc();
    int sign = 1;
    while(c!='-' && (c<48 || c>57) ) c = gc();
    if(c=='-')
        sign = -1, c = gc();
    while(c>=48 && c<=57)
        x = (x<<1) + (x<<3) + c - 48, c = gc();
    return sign*x;
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int M,N,P,_i,_j;
    M = read_int();
    N = read_int();
    P = read_int();
    ll Grid[M+1][N+1];
    memset(Grid, 0, sizeof(Grid));
    F(i,0,P-1)
    {
        _i = read_int();
        _j = read_int();
        Grid[_i][_j] = -1;
    }
    if(Grid[1][1] == -1)
    {
        printf("0");
        return 0;
    }
    F(i,1,M)
    {
        if(Grid[i][1] == 0) Grid[i][1] = 1LL;
        else break;
    }
    F(i,2,N)
    {
        if(Grid[1][i] == 0) Grid[1][i] = 1LL;
        else break;
    }
    F(i,2,M)
    {
        F(j,2,N)
        {
            if(Grid[i][j] == -1) continue;
            if(Grid[i-1][j] > 0) Grid[i][j] = (Grid[i][j] + Grid[i-1][j] + MOD)%MOD;
            if(Grid[i][j-1] > 0) Grid[i][j] = (Grid[i][j] + Grid[i][j-1] + MOD)%MOD;
        }
    }
    /*
    F(i,1,M)
    {
        F(j,1,N)
        {
            printf("%lld ",Grid[i][j]);
        }
        printf("\n");
    }
    */
    printf("%lld",(Grid[M][N] >= 0 ? Grid[M][N] : 0));
    return 0;
}

