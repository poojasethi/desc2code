//No. of Ways to reach destination when some obstacles
#include <bits/stdc++.h>
using namespace std;
#define ll long long int
#define md 1000000007
int main(int argc, char const *argv[])
{
	ios_base::sync_with_stdio(false);
	int M,N,P;
	cin>>M>>N>>P;
	vector< vector<ll> > grid(M+1,vector<ll> (N+1,0) );
	int bi,bj;
	for (int i = 1; i <=P ; ++i)
	{
		cin>>bi>>bj;
		grid[bi][bj]=-1;//blocked
	}
	if(grid[1][1]==-1)//starting is blocked
	{
		cout<<"0"<<endl;
		return 0;
	}
	//1st row...base
	for (int j = 1; j <=N ; ++j)
	{
		if(grid[1][j]==0)
			grid[1][j]=1;//1way only

		else//i.e -1 blocked
			break;
	}
	//1st col..base
	for (int i = 2; i <=M ; ++i)
	{
		if(grid[i][1]==0)
			grid[i][1]=1;//1way only

		else//i.e -1 blocked
			break;
	}

	for (int i = 2; i<=M; ++i)
	{
		for (int j = 2; j<=N; ++j)
		{
			if(grid[i][j]==-1)continue;//ignore

			if(grid[i-1][j]>0)//i.e not 0 and -1
				grid[i][j]=(grid[i][j]+grid[i-1][j])%md;
			
			if (grid[i][j-1]>0)		
				grid[i][j]=(grid[i][j]+grid[i][j-1])%md;
		}
	}
	if(grid[M][N]>0)//i.e not 0 and -1
		cout<<grid[M][N]<<endl;
	else cout<<"0"<<endl;
	return 0;
}