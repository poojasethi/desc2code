/*Author: Meghraj Sharma*/

#include<bits/stdc++.h>

#define gc getchar_unlocked
#define pc putchar_unlocked
#define pb push_back
#define mp make_pair
#define MAX 200003
#define MOD 1000000007
#define ll long long
#define inf 1e12
#define debug(args...) {dbg,args; cerr<<endl;}
#define test int t;\
in(d,t);\
while(t--)
using namespace std;
struct debugger
{
    template<typename T> debugger& operator,(const T& v)
    {
        cerr<< v <<" ";
        return *this;
    }
}dbg;
inline void inp(ll *n )
{
*n=0;ll ch=gc();int sign=1;while(ch<'0'||ch>'9'){if(ch=='-')sign=-1;ch=gc();}
while( ch >= '0' && ch <= '9' )*n = (*n<<3)+(*n<<1) + ch-'0', ch=gc();*n=*n*sign;
}
inline void fastp(ll a)
{
register char c;char snum[20];int i=0;do{snum[i++]=a%10+48;a=a/10;}while(a!=0);
i=i-1;while(i>=0)pc(snum[i--]);pc('\n');
}
ll arr[1002][1002];
bool vis[1002][1002];
int main()
{
     ll t,n,m,i,j,ans,a,b,x,k,u;
     inp(&m); inp(&n); inp(&t);
     memset(vis,0,sizeof(vis));
     memset(arr,0,sizeof(arr));
     for(i=0;i<t;i++)
     {
         inp(&a); inp(&b);
         vis[a][b]=1;
     }
     if(vis[m][n]) {fastp(0); return 0;}
     if(vis[1][1]) {fastp(0); return 0;}
     arr[1][1]=1;
     for(i=1;i<=m;i++)
     {
         for(j=1;j<=n;j++)
         {
            if(!vis[i][j]) arr[i][j]+=(arr[i-1][j]%MOD + arr[i][j-1]%MOD)%MOD;
         }
     }
     fastp(arr[m][n]%MOD);
 return 0;
}
