#include<bits/stdc++.h>
using namespace std;
int dp[1010][1010]={0},vis[1010][1010]={0};
int main()
{
	int n,m,p,x,y,ans=0,mod=1000000007;
	queue<pair<int,int> > que;
	vector<pair<int,int> > vec;
	pair<int,int> mypair;
	scanf("%d%d%d",&m,&n,&p);
	int flag1=0,flag=0;
	for(int i=1;i<=m;i++)
	{
		for(int j=1;j<=n;j++)
			dp[i][j]=vis[i][j]=0;
	}

	for(int i=0;i<p;i++)
	{
		scanf("%d%d",&x,&y);
		mypair.first=x;
		mypair.second=y;
		vec.push_back(mypair);
		vis[x][y]=1;
		if(x==m&&y==n)
			flag=1;
		if(x==1&&y==1)
			flag1=1;	

	}

	if(flag)
	{
		ans=0;
		printf("%d\n",ans);
		return 0;
	}
	
	else
	{
		if(flag1)
		{
			ans=0;
			printf("%d\n",ans);
			return 0;
		}
		else
		{
			dp[1][1]=1;
			for(int i=1;i<=m;i++)
			{
				for(int j=1;j<=n;j++)
				{
					if(i==1)
					{
						if(j!=1)
						{
							if(!vis[i][j])
							{
								if(i-1>0&&j-1>0)
									dp[i][j]=(dp[i-1][j]+dp[i][j-1])%mod;
								else if(i-1>0)
									dp[i][j]=dp[i-1][j];
								else if(j-1>0)
									dp[i][j]=dp[i][j-1];
							}
							else
								dp[i][j]=0;
						}	
					}
					else{
						if(!vis[i][j])
						{
							if(i-1>0&&j-1>0)
								dp[i][j]=(dp[i-1][j]+dp[i][j-1])%mod;
							else if(i-1>0)
								dp[i][j]=dp[i-1][j];
							else if(j-1>0)
								dp[i][j]=dp[i][j-1];
						}
						else
							dp[i][j]=0;
					}
				}
			}
			printf("%d\n",dp[m][n]%mod);	
		}
	}
	
	return 0;
}
