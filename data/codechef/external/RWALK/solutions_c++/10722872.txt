#include<bits/stdc++.h>
#define ll          long long int
#define pb          push_back
#define mp          make_pair
#define pii         pair<int,int>
#define vi          vector<int>
#define Max(a,b)    ((a)>(b)?(a):(b))
#define Min(a,b)    ((a)<(b)?(a):(b))
#define rep(i,a,b)  for (__typeof(b) i=a;i!=b;i+=1)
#define all(a)      a.begin(),a.end()
#define F           first
#define S           second
#define sz(x)       (int)x.size()
#define hell        1000000007
#define endl        '\n'
#define debug(a)    cerr<<#a<<": ";for(auto i:a)cerr<<i<<" ";cerr<<'\n';
using namespace std;
int hori[1005];
int vert[1005];
bool dp[505][300000];
int findMin(int arr[], int n)
{
    int sum = 0;
    for (int i = 0; i < n; i++)
        sum += arr[i];
    for (int i = 0; i <= n; i++)
        dp[i][0] = true;
    for (int i = 1; i <= sum; i++)
        dp[0][i] = false;
    for (int i=1; i<=n; i++)
    {
        for (int j=1; j<=sum; j++)
        {
            dp[i][j] = dp[i-1][j];
            if (arr[i-1] <= j)
                dp[i][j] |= dp[i-1][j-arr[i-1]];
        }
    }
    int diff = INT_MAX;

    for (int j=sum; j>=0; j--)
    {
        if (dp[n][j] == true)
        {
            diff = min(diff,abs(sum-2*j));
        }
    }
    return diff;
}
void solve(){
    int n;
    cin>>n;
    int n1=0,n2=0;
    rep(i,0,2*n+1){
        char ch;
       // getchar();
        if(i%2){cin>>ch;continue;}
        int temp;
        cin>>temp;
        if(i%4){vert[i/4]=temp;n1++;}
        else {hori[i/4]=temp;n2++;}
    }
    if(n<=2)
    cout<<"NO\n"<<endl;
    else
    cout<<abs(findMin(vert,n1))+abs(findMin(hori,n2))<<endl;
}
int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	cout.tie(0);
	int t=1;
	cin>>t;
	while(t--){
		solve();
	}
	return 0;
}
