    /*
    * @problem: xx
    */
    #include <iostream>
    #include <algorithm>
    #include <utility>
    #include <cstring>
    #include <string.h>
    #include <queue>
    #include <set>
    #include <map>
    #include <math.h>
    #include <stdio.h>
    #include <vector>
    #include <functional>
    #include <bitset>
    #include <iomanip>
    #define ll long long
    #define pi acos(-1.0)
    #define pb push_back
    #define MS0(ar) memset(ar,0,sizeof ar)
    #define MS1(ar) memset(ar,-1,sizeof ar)
    #define ff first
    #define ss second
    #define pii pair<int,int>
    #define pll pair<ll,ll>
    #define ind(a) scanf("%d",&a)
    #define inf(a) scanf("%lf",&a)
    #define inl(a) scanf("%lld",&a)
    #define ins(a) scanf("%s",a)
    #define pd(a) printf("%d\n",a)
    #define pl(a) printf("%lld\n",a);
    #define bitcnt(x) __builtin_popcountll(x)
    #define mod 1000000007
    const int MAX = 1e5 + 10;
    using namespace std;
    int n;
    int arr[MAX];
    bool dp[501][250001];
    int findMin(int arr[], int n)
    {
    	int sum = 0;
    	for (int i = 0; i < n; i++)
    		sum += arr[i];
    	for (int i = 0; i <= n; i++)
    		dp[i][0] = true;
    	for (int i = 1; i <= sum; i++)
    		dp[0][i] = false;
    	for (int i = 1; i <= n; i++)
    	{
    		for (int j = 1; j <= sum; j++)
    		{
    			dp[i][j] = dp[i - 1][j];
    			if (arr[i - 1] <= j)
    				dp[i][j] |= dp[i - 1][j - arr[i - 1]];
    		}
    	}
    	int diff = mod;
    	for (int j = sum / 2; j >= 0; j--)
    	{
    		if (dp[n][j] == true)
    		{
    			diff = sum - 2 * j;
    			break;
    		}
    	}
    	return diff;
    }
    int main()
    {
     
    	ios_base::sync_with_stdio(0);
    	cin.tie(0);
    #ifndef ONLINE_JUDGE
    	freopen("../input.txt", "r", stdin);
    	//freopen("../output.txt","w",stdout);
    #endif
    	int t, mov;
    	char ch;
    	cin >> t;
    	vector<int>ver;
    	vector<int>hor;
    	while (t--)
    	{
    		ver.clear();
    		hor.clear();
    		hor.pb(0);
    		ver.pb(0);
    		cin >> n;
    		cin >> mov;
    		ver.pb(mov);
    		for (int i = 0; i < n; i++)
    		{
    			cin >> ch >>mov;
    			if (i % 2)
    				ver.pb(mov);
    			else
    				hor.pb(mov);
    		}
    		// cin >> mov;
    		// ver.pb(mov);
    		n = ver.size();
    		for (int i = 1; i <= n; i++)
    			arr[i] = ver[i];
    		int x = findMin(arr, ver.size());
    		n = hor.size();
    		for (int i = 1; i <= n; i++)
    			arr[i] = hor[i];
    		x += findMin(arr, hor.size());
    		if(n<3)
    			cout<<"NO"<<endl;
    		else
    		cout << x << endl;
    	}
    	return 0;
    } 