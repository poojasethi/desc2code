#include <cstdio>
#include <iostream>
#include <fstream>
#include <vector>
#include <list>
#include <map>
#include <set>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <sstream>
#include <iomanip>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <cstring>
#include <string>
#include <ctime>
#include <cassert>
#include <utility>
#include <numeric>

using namespace std;

#define INF 1000000000
#define MAXN 55

int T, N, M;
int rowSum[MAXN];
int colSum[MAXN];
int A[MAXN][MAXN];

int cs[MAXN];
int B[MAXN];
int C[MAXN];
int S[MAXN];
int K, vmax;

void countingSort() {
	for (int i = 0; i <= vmax; i++) {
		S[i] = 0;
	}
	for (int i = 0; i < K; i++) {
		S[cs[B[i]]]++;
	}
	for (int i = vmax - 1; i >= 0; i--) {
		S[i] += S[i + 1];
	}
	for (int i = 0; i < K; i++) {
		S[cs[B[i]]]--;
		C[S[cs[B[i]]]] = B[i];
	}
}

bool can() {
	memcpy(cs, colSum, sizeof(colSum));
	
	for (int i = 0; i < N; i++) {
		K = 0;
		vmax = 0;
		for (int j = 0; j < M; j++) {
			if (A[i][j] == -1) {
				B[K++] = j;
				vmax = max(vmax, cs[j]);
			}
		}
		
		if (K < rowSum[i]) {
			return false;
		}
		
		countingSort();
		for (int j = 0; j < rowSum[i]; j++) {
			if (cs[C[j]] == 0) {
				return false;
			}
			cs[C[j]]--;
		}
	}
	
	for (int i = 0; i < M; i++) {
		if (cs[i] > 0) {
			return false;
		}
	}
	
	return true;
}

bool solve() {
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < M; j++) {
			bool ok = false;
			for (int k = 0; k < 2 && !ok; k++) {
				A[i][j] = k;
				rowSum[i] -= k;
				colSum[j] -= k;
				if (rowSum[i] < 0 || colSum[j] < 0) {
					return false;
				}
				if (can()) {
					ok = true;
				}
			}
			if (!ok) {
				return false;
			}
		}
	}
	return true;
}

int main() {
//	freopen("date.in", "r", stdin);
//	freopen("date.out","w", stdout);
	cin.sync_with_stdio(false);
	
	cin >> T;
	for (int t = 1; t <= T; t++) {
		cin >> N >> M;
		for (int i = 0; i < N; i++) {
			cin >> rowSum[i];
		}
		for (int i = 0; i < M; i++) {
			cin >> colSum[i];
		}
		memset(A, -1, sizeof(A));
		bool ok = solve();
		cout << "TestCase #:" << t << '\n';
		if (!ok) {
			cout << -1 << '\n';
		}
		else {
			for (int i = 0; i < N; i++) {
				for (int j = 0; j < M; j++) {
					cout << A[i][j];
				}
				cout << '\n';
			}
		}
	}
	
	return 0;
}
