#include<cstdio>
#include<iostream>
#include<vector>
#include<map>
#include<set>
#include<stack>
#include<queue>
#include<algorithm>
#include<cmath>
#include<string>
#include<cstdlib>
#include<climits>
#include<cstring>
using namespace std;

#define CLR(a,x) memset(a,x,sizeof(a))
#define PB push_back
#define INF 1000000000
#define MOD 1000000007
#define MP make_pair
#define tr(container , it) for(typeof(container.begin()) it=container.begin() ; it!=container.end() ; it++)
#define FOR(i,a,b) for(i=a;i<b;i++)
#define REP(i,a) FOR(i,0,a)
#define LLD long long
#define VI vector < int >
#define PII pair < int , int >
#define MAX 1000000000
int A[1000004], B[1000004];
bool poss[1000004];
int main()
{
    int t,n;
    scanf("%d",&t);
    while(t--)
    {
	memset(poss,true,sizeof poss);
	scanf("%d",&n);
	int x;
	int mx = 0;
	for(int i=0;i<n;i++)
	{
	    scanf("%d",&x);
	     B[i] = x;
	    mx = max(mx,x);
	    A[x]++;
	}

	int ans = 1;
	for(int i=2;i<=mx;i++)
	{
	    if(!poss[i])
		continue;
	    int c =0;
	    for(int j=1;((LLD)i)*((LLD)j)<=mx;j++)
	    {
		if(A[i*j]!=0)
		{
		    c+=A[i*j];
		    if(c>=2)
		    {
			ans  = i;
			break;
		    }
		}
	    }

	    if(ans != i)
	    for(int j=2;((LLD)i)*((LLD)j)<=mx;j++)
		poss[i*j] = false;
	    
	}
	printf("%d\n",ans);
	for(int i=0;i<n;i++)
	    A[B[i]]=0;
    }

    return 0;
}