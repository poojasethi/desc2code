/****************************
*  Author- Advitiya Brijesh *
*  PIE @ MNNIT Allahabad    *
*  Username-asymptote_      *
*                           *
****************************/
// WA TLE MLE RE IDLE and counting...
#include<bits/stdc++.h>
using namespace std;
//      std macros
typedef long long ll;
typedef vector<list<ll> > vli;
typedef vector<ll > vi;
typedef vector<pair<ll,ll> > vpll;
typedef vector<pair<int,int> > vpii;
typedef pair<int ,int> pii;
//      dereference
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define in insert
#define pu push
#define fr front
//      loops
#define rep(i,n) for(int i=0;i<n;++i)
#define REP(i,a,b) for(int i=a;i<=b;++i)
#define PER(i,b,a) for(int i=b;i>=a;--i)
#define all(X) (X).begin(), (X).end()
//      I/O
#define dsd(X) int (X); scanf("%d", &X)
#define dsd2(X, Y) int X, Y; scanf("%d%d", &X, &Y)
#define dsd3(X, Y, Z) int X, Y, Z; scanf("%d%d%d", &X, &Y, &Z)
#define sd(n) scanf("%d",&n)
#define sld(n) scanf("%ld",&n)
#define sll(n) scanf("%lld",&n)
#define ss(n) scanf("%s",n)
#define oll(n) printf("%lld\n",n)
//      set values
#define mset(n,k) memset(n,k,sizeof(n))
#define MOD 1000000007
ll INV2=500000004;
ll INV6=166666668;
//modular expo
ll power(ll a,ll b, ll c){
    ll x=1,y=a;
    while(b>0){
        if(b&1)
            x=(x*y)%c;
        y=(y*y)%c;
        b/=2;
    }
    return x%c;
}
int a[100005];
int dx[]={0,-1,0,1};
int dy[]={-1,0,1,0};//clockwise from left
int f[1000005];
int main(){
  //freopen("lucky.in","r",stdin);
  //freopen("lucky.out","w",stdout);
    int t,n;
    sd(t);
    while(t--){
        sd(n);
        int mx=-1;
        rep(i,n){
            sd(a[i]);
            f[a[i]]++;
            mx=max(a[i],mx);
        }
        int ans=-1,cnt;
        for(int i=mx;i>=1;--i){
            cnt=0;
            int j=i;
            while(j<=mx){
                cnt+=f[j];
                j+=i;
            }
            if(cnt>=2){
                ans=i;
                break;
            }
        }
        mset(f,0);
        printf("%d\n",ans);
    }

return 0;}
