#include<stdio.h>
    #include<stdlib.h>
     
    int n,s,t;
    int save[10001];
    int close[10001];
    int store[10001][3];
    int test,l,ans[40];
     
    int rec(int node,int prev);
     
    int main(){
     
    //printf("Enter the value of test cases..\n");
    scanf("%d",&test);
     
    for(l=0;l<test;l++)
    {
    //printf("Enter the value of n..\n");
    scanf("%d",&n);
    //printf("Enter the value of s..\n");
    scanf("%d",&s);
    //printf("enter the no of saved sdges..\n");
    scanf("%d",&t);
     
    int i,j;
    for(i=1;i<=n;i++)
    {
    save[i]=0;
    //printf("Enter the no of closed edges..\n");
    scanf("%d",&close[i]);
    //printf("enter the edges' indices..\n");
    for(j=0;j<close[i];j++)
    scanf("%d",&store[i][j]);
    }
     
    int temp;
    for(i=0;i<t;i++)
    {
    //printf("Enter the indices of the edges to be saved..\n");
    scanf("%d",&temp);
    save[temp]=1;
    }
    if(save[s]==1)
    {
    ans[l]=1;
    continue;
    }
    if(close[s]==0||close[s]==1)
    {
    ans[l]=0;
    continue;
    }
    ans[l]=rec(s,0);
    // if(l!=test-1)
    //printf("\n");
    }
    for(l=0;l<test;l++)
    {
    if(ans[l]==0)
    printf("yes\n");
    else
    printf("no\n");
    }
    }
    int rec(int node,int prev)
    {
    int i,temp;
    int min=1000000;
    if(save[node]==1)
    {
    return 1;
    }
     
    if(node!=s&&(close[node]==1||close[node]==2))
    return 0;
     
    for(i=0;i<close[node];i++)
    {
    if(store[node][i]!=prev)
    {
    temp=rec(store[node][i],node);
    if(min>temp)
    min=temp;
    }
    }
    // printf("%d",min);
    if(min==1000000)
    exit(1);
    return min;
    }  