#include <bits/stdc++.h>
#define INF 1e9
#define pb push_back
#define mp make_pair
#define f first
#define s second
using namespace std;
int t,n,p,r,x[1505],y[1505],d[1505][1505],s[1505];
int match[1505],blm[1505],lvl[1505];
int vis[1505],cnt;
vector <int> vc[1505];
bool bfs()
{
    queue <int> q;
    for (int i=1;i<=n;i++)
    	if (match[blm[i]]){
    		swap(blm[i],blm[n]);
    		n--;
    		i--;
    	}else {
    		lvl[blm[i]]=0;
    		q.push(blm[i]);
    	}
    cnt++;
    vis[0]=0;
    while (!q.empty()){
    	int now=q.front();
    	q.pop();
    	for (int i=0;i<vc[now].size();i++){
    		int nxt=vc[now][i];
    		if (vis[match[nxt]]!=cnt){
    			vis[match[nxt]]=cnt;
    			lvl[match[nxt]]=lvl[now]+1;
    			q.push(match[nxt]);
    		}
    	}
    }
    return vis[0]==cnt;
}
int vis2[1505],cnt2;
bool dfs(int a)
{
    if (!a) return 1;
    vis2[a]=cnt2;
    for (int i=0;i<vc[a].size();i++){
    	int nxt=vc[a][i];
    	if (vis2[match[nxt]]!=cnt2&&lvl[match[nxt]]==lvl[a]+1&&dfs(match[nxt])){
    		match[nxt]=a;
    		match[a]=nxt;
    		return 1;
    	}
    }
    return 0;
}
vector <int> z[1505];
int dist[1505][1505];
int pq[255][1505];
int ptr[255];
int main()
{
    int tc;
    for (scanf("%d",&tc);tc>0;tc--){
    	scanf("%d%d%d",&n,&p,&r);
    	t=n+p+1;
    	cnt2=0;
    	memset(vis2,0,sizeof(vis2));
    	memset(match,0,sizeof(match));
    	for (int i=1;i<=n;i++)
    		scanf("%d",&x[i]);
    	for (int i=n+1;i<t;i++)
    		scanf("%d",&y[i]);
    	for (int i=1;i<=t;i++){
    		for (int j=1;j<=t;j++)
    			d[i][j]=INF,dist[i][j]=INF;
    		d[i][i]=0;
    	}
    	for (int i=1;i<=r;i++){
    		int a,b,c;
    		scanf("%d%d%d",&a,&b,&c);
    		d[a][b]=d[b][a]=min(d[a][b],c);
    		z[a].pb(b);
    		z[b].pb(a);
    	}
    	priority_queue <pair <int,int> > q;
    	for (int i=1;i<=n;i++){
    		int a=x[i];
    		dist[a][a]=0;
    		memset(ptr,0,sizeof(ptr));
    		ptr[0]++;
    		pq[0][1]=a;
    		for (int j=0;j<=250;j++)
    			for (int k=1;k<=ptr[j];k++){
    				int az=pq[j][k];
    				if (dist[a][az]<j) continue;
    				for (int l=0;l<z[az].size();l++){
    					int nxt=z[az][l],cost=j+d[az][nxt];
    					if(cost>250) continue;
    					if (dist[a][nxt]>cost){
    						dist[a][nxt]=cost;
    						ptr[cost]++;
    						pq[cost][ptr[cost]]=nxt;
    					}
    				}
    			}
    	}
    	dist[t][t]=0;
    	memset(ptr,0,sizeof(ptr));
    	ptr[0]++;
    	pq[0][1]=t;
    	for (int j=0;j<=250;j++)
    		for (int k=1;k<=ptr[j];k++){
    			int az=pq[j][k];
    			if (dist[t][az]<j) continue;
    			for (int l=0;l<z[az].size();l++){
    				int nxt=z[az][l],cost=j+d[az][nxt];
    				if(cost>250) continue;
    				if (dist[t][nxt]>cost){
    					dist[t][nxt]=cost;
    					ptr[cost]++;
    					pq[cost][ptr[cost]]=nxt;						    					
					}
    			}
    		}
    	for (int i=1;i<=n;i++)
    		scanf("%d",&s[i]);
    	for (int i=1;i<=n;i++){
    		int a;
    		scanf("%d",&a);
    		s[i]*=a;
    	}
    	for (int i=1;i<=n;i++)
    		for (int j=n+1;j<t;j++){
    			int a=x[i],b=y[j];
    			if (dist[a][b]+dist[t][b]<=s[i]) vc[i].pb(j);
    		}
    	int ans=0;
    	for (int i=1;i<=n;i++) blm[i]=i;
    	int pn=n;
    	while (bfs()){
    		for (int i=1;i<=n;i++)
    			if (match[blm[i]]){
    				swap(blm[i],blm[n]);
    				n--;
    				i--;
    			}else {
    				cnt2++;
    				if (dfs(blm[i])) ans++;
    			}
    	}
    	for (int i=1;i<=pn;i++) vc[i].clear();
    	for (int i=1;i<=t;i++) z[i].clear();
    	printf("%d\n",ans);
    }
}
     