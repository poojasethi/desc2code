from math import *

MAX = 9999999 #on assumption 1 <= N <= 1000000


def is_palindrome( n ):
	str_n = str(n)
	return str_n == str_n[::-1]

def is_prime( n ):
	if not n % 2:
		return False
	return all( n % i for i in xrange(3, int(sqrt(n)), 2))

def gen_primes_filter():
	PrimeFilter = [True] * MAX
	PrimeFilter[0] = False
	PrimeFilter[1] = False
	for idx in xrange(2, MAX):
		val = PrimeFilter[idx]
		if val:
			for i2 in xrange(idx*2, MAX, idx):
				PrimeFilter[i2] = False
	return PrimeFilter


def gen_palins( max, start=1 ):
	palins = []
	digits = int(log10(max))
	for n in xrange(start, 10 ** (digits/2 + 1)):
		str_n = str(n)
		rev_str = str_n[::-1]
		palin_odd = str_n[:-1] + rev_str
		palin_even = str_n + rev_str
		palins.append(palin_odd)
		palins.append(palin_even)
	return palins

palins = gen_palins( MAX )
palins = sorted(filter(is_prime, map(int, palins)))

N = input()
for i in palins:
	if i >= N:
		print i
		break