#include <stdio.h>
#include <stdlib.h>
#include <math.h>
#include <string.h>

bool isParlindrome(char *num) {
        char *index = num;
        int len = strlen(num);
        int p=0, q=len-1;
        while (p<q) {
                if (num[p] != num[q]) return false;
                p++;
                q--;
        }
        return true;
}

void fixInner(char *num, int p, int q) {
        while (p <= q) {
                num[p] = '0';
                num[q] = '0';
                p ++;
                q --;
        }
}

void fixOuter(char *num, int p, int q) {
        int len = strlen(num);
        while (p>=0 && q<len) {
                num[q] = num[p];
                p --;
                q ++;
        }
}

void nextParlindrome(char *num) {
        int len = strlen(num);
        if (len % 2 == 1) {
                int mid = len/2;
                if (num[mid] < '9') {
                        num[mid] = num[mid]+1;
                        fixOuter(num, mid-1, mid+1);
                        return;
                }
        }
        int p = len/2-1, q = len/2;
        while (p>=0 && q<len) {
                if (num[p] > num[q]) {
                        num[q] = num[p];
                        fixOuter(num, p-1, q+1);
                        return;
                } else if (num[p] < num[q]) {
                        num[p] = num[p] + 1;
                        num[q] = num[p];
                        fixInner(num, p+1, q-1);
                        fixOuter(num, p-1, q+1);
                        return;
                }
                p --;
                q ++;
        }
        p = len/2-1;
        q = len/2;
        while (p>=0 && q<len) {
                if (num[p] < '9') {
                        num[p] = num[p]+1;
                        num[q] = num[p];
                        fixInner(num, p+1, q-1);
                        fixOuter(num, p-1, q+1);
                        return;
                }
                p --;
                q ++;
        }
        int index = 0;
        num[index++] = '1';
        while (index < len) {
                num[index++] = '0';
        }
        num[index] = '1';
        num[index+1] = '\0';
}

bool isPrime(char *num) {
        int n = atoi(num);
        if (n == 2) return true;
        for (int i=2;i<=sqrt(n);i++) {
                if (n % i == 0) return false;
        }
        return true;
}

int main() {
        char num[8];
        int n;
        scanf("%d", &n);
        sprintf(num, "%d", n);
        if (isParlindrome(num) && isPrime(num)) printf("%s\n", num);
        else {
                nextParlindrome(num);
                while(!isPrime(num)) nextParlindrome(num);
                printf("%s\n", num);
        }
        return 0;
}
