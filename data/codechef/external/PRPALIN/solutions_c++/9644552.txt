#include<bits/stdc++.h>
using namespace std;
string tostring(long long);
long long tolonglong(string);
string pallindrome(string);
int primecheck(long long);
main()
{
    long long N;
    int check;
    string send;
    cin>>N;
    while(1)
      {
        send=tostring(N);
        send=pallindrome(send);
        N=tolonglong(send);
        //cout<<N<<endl;
        check=primecheck(N);
        if(check==1)
            {cout<<N;
             break;
            }
        ++N;
      }



}
string tostring(long long n)
{
    stringstream obj;
    obj<<n;
    string s;
    s=obj.str();
   // cout<<s<<endl;
    return s;

}
long long tolonglong(string s)
{
    stringstream obj1(s);
    long long n;
    obj1>>n;
   // cout<<n<<endl;
    return n;


}
string pallindrome(string A)
{long long l=A.length();
 int carry=0,check=0;
 long long i=0,j,temp;
 string B;
 while(1)
 { check=0;
   A[l-i-1]+=carry;
   carry=0;
   if(A[l-i-1]==':')
   {
        A[l-i-1]='0';
        temp=l-i-2;
        while(temp>=0)
            {
             A[temp]=A[temp]+1;
             if(A[temp]==':')
                {
                    A[temp]='0';

                }
                else
                    break;
                --temp;
               }
     }


    if(i>=l-i-1)
   {
    i=0;
    check=1;
    B=A;
    reverse(&B[0],&B[l]);
    if(A==B)
        return A;


   }
        if(A[i]>A[l-i-1])
        {A[l-i-1]=A[i];
         carry=0;
        }
        else if(A[i]<A[l-i-1])
        {A[l-i-1]=A[i];
         carry=1;
        }
    if(check==0)
        ++i;

 }
}
int primecheck(long long N)
{
    int i;
    if(N==1||N==0)
        return 0;
    else if(N==2||N==3)
        return 1;
    for(i=2;i<=sqrt(N);++i)
        if(N%i==0)
    {
        return 0;
    }
    return 1;
}
