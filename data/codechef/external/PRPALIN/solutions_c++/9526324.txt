//============================================================================
// Name        : PrimePal.cpp
// Author      : ABhi
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================


//mistakes I did
//increment instead of decrement
//clarity of numbers storage left to right
//temination condition(printed if less than 10)
#include <iostream>
#include <math.h>
using namespace std;

char number[15];
int l;
char* increment(char *st) {
	int i;
	for (i = l; i >= 0; i--) {
		if (st[i] == 9) {
			st[i] = 0;
		} else {
			st[i] = st[i] + 1;
			break;
		}
	}
	if (i == -1) {
		st[i] = 1;
		l = l + 1;
		st = st - 1;
	}
	return st;
}
bool findPalandrome(char *st) {
	int lenght = l + 1;
	bool result = true;
	for (int i = 0; i < lenght / 2; i++) {
		if (st[i] != st[l - i]) {
			result = false;
			break;
		}

	}
	return result;
}
int getNumber(char *st) {
	int sum = 0;
	for (int i = 0; i <= l; i++) {
		sum = sum * 10;
		sum = sum + st[i];
	}
	return sum;
}

bool isPrime(int num) {
	float n = sqrt(num);
	bool result = true;
	for (int i = 2; i <= n; i++) {
		if (num % i == 0) {
			result = false;
			break;
		}
	}
	return result;
}

int main() {

	int n;
	cin >> n;
	if (n < 3) {
		cout << 2;
	} else {
		char *st = number + 7;
		l = 0;
		int tempn = n;
		while (tempn) {
			tempn = tempn / 10;
			l++;
		}
		l = l - 1;
		for (int i = l; i >= 0; i--) {
			st[i] = n % 10;
			n = n / 10;
		}
		while (1) {
			if (findPalandrome(st)) {
				n = getNumber(st);
				if (isPrime(n)) {
					break;
				}
			}
			st = increment(st);
		}
		cout << n;
	}

}
