#include <cstdio>
#include <iostream>
#include <cstring>
#include <string>
#include <cmath>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <stack>
#include <queue>
 
using namespace std;
 
typedef long long ll;
typedef pair<int, int> ii;
 
const int N = 1000010, inf = 1000000007;
int n, d, a[N], b[N], h[N];
ll k, s, r, t[N];
 
void add(int i, ll x)
{
    for (; i <= n; i += i & -i) t[i] += x;
}
 
ll get(int i)
{
    ll s = 0;
    for (; i; i -= i & -i) s += t[i];
    return s;
}
 
int main()
{
    scanf("%d %lld", &n, &k);
    for (int i = 1; i <= n; i++) scanf("%d", &a[i]), b[i] = a[i];
    sort(b + 1, b + n + 1);
    h[d = 1] = b[1];
    for (int i = 2; i <= n; i++) if (b[i] != b[i - 1]) h[++d] = b[i];
    for (int i = 1; i <= n; i++) a[i] = lower_bound(h + 1, h + d + 1, a[i]) - h;
    for (int i = 1, j = 1; i <= n; i++)
    {
        s += get(n) - get(a[i]); add(a[i], 1);
        while (j < i) if (s - get(a[j] - 1) >= k)
        {
            s -= get(a[j] - 1);
            add(a[j], -1);
            j++;
        } else
        break;
        if (s >= k) r += (ll) j;
    }
    printf("%lld\n", r);
    return 0;
}