#include<bits/stdc++.h>
using namespace std;
#define ll long long
int bit[100011],n,a[100011],b[100011];
int query(int x,int n)
{
    int res=0,i=x;
    while(i>0)
    {
        res+=bit[i];
        i=i-(i&-i);
    }
    return res;
}
void update(int x,int v)
{
    int i=x;
    while(i<=n)
    {
        bit[i]+=v;
        i+=(i&-i);
    }
}
map<int,int>my;
int main()
{
    int i,j,s;
    ll k;
    scanf("%d %lld",&n,&k);
    for(i=0;i<n;i++)
        scanf("%d",&a[i]),b[i]=a[i];
    if(k==0)
    {
        ll ans=((ll)n*((ll)n+1))/2;
        printf("%lld\n",ans);
        return 0;
    }
    sort(b,b+n);
    int p=1;
    for(i=0;i<n;i++)
        if(!my[b[i]])
            my[b[i]]=p++;
    ll inv=0;
    for(i=0;i<n;i++)
    {
        inv+=(ll)(query(n,n)-query(my[a[i]],n));
        //printf("%d %lld\n",my[a[i]],inv);
        update(my[a[i]],1);
        if(inv>=k)
            break;
    }
    ll ans=0LL;
    if(i==n)
    {
        printf("0\n");
        return 0;
    }
    //printf("%d %lld\n",i,inv);
    s=0;
    update(my[a[i]],-1);
    inv-=(ll)(query(n,n)-query(my[a[i]],n));
    for(;i<n;i++)
    {
        inv+=(ll)(query(n,n)-query(my[a[i]],n));
        update(my[a[i]],1);
        while(s<i&&inv>=k)
        {
            ans+=(n-i);
            inv-=(ll)(query(my[a[s]]-1,n));
            update(my[a[s]],-1);
            s++;
            //printf("%d %d %lld %lld\n",s,i,inv,ans);
        }
    }
    printf("%lld\n",ans);
    return 0;
}
