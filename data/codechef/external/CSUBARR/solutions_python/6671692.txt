// http://www.spoj.com/PTIT/problems/P153PROJ/

#include <bits/stdc++.h>
//Buffer reading
int INP,AM;
#define BUFSIZE (1<<10)
char BUF[BUFSIZE+1], *inp=BUF;
#define GETCHAR(INP) { \
    if(!*inp) { \
        fread(BUF,1,BUFSIZE,stdin); \
        inp=BUF; \
    } \
    INP=*inp++; \
}
#define DIG(a) (((a)>='0')&&((a)<='9'))
#define doc(j) { \
    AM=0;\
    GETCHAR(INP); while(!DIG(INP) && INP!='-') GETCHAR(INP);\
    if (INP=='-') {AM=1;GETCHAR(INP);} \
    j=INP-'0'; GETCHAR(INP); \
    while(DIG(INP)){j=10*j+(INP-'0');GETCHAR(INP);} \
    if (AM) j=-j;\
}
//End of buffer reading

using namespace std;
int n, a[100010], bit[100010];
pair <int,int> Unique[100010];
long long k, ans, cnt;

void update(int x, int val)
{
    for (; x<=n; x+=x&(-x))
        bit[x] += val;
}
long long get(int x)
{
    long long hsgs = 0;
    for (; x; x-=x&(-x))
        hsgs += bit[x];
    return hsgs;
}

main()
{
    doc(n);   doc(k);
    for (int i=1; i<=n; i++)
    {
        doc(Unique[i].first);
        Unique[i].second = i;
    }

    sort(Unique+1, Unique+n+1);
    for (int i=1, j=1, d=0; j<=n; i=j)
    {
        d++;
        for (; j<=n; j++)
            if (Unique[i].first == Unique[j].first) a[Unique[j].second] = d;
                else break;
    }

    for (int i=1, j=1; i<=n; i++)
    {
        cnt += get(n) - get(a[i]);
        update(a[i], 1);
        while (j < i)
        {
            int p = get(a[j]-1);
            if (cnt-p < k) break;
            else cnt -= p, update(a[j++], -1);
        }
        if (cnt >= k) ans += j;
    }

    printf("%lld", ans);
}
