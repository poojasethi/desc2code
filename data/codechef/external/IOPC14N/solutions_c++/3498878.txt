#include <cstring>
#include <iostream>
#include <stdio.h>
#include <cstdlib>
#include <cctype>
#include <algorithm>
#include <map>
#include <vector>
#include <list>
#include <set>
#include <queue>
#include <deque>
#include <stack>
#include <bits/stdc++.h>
#include <string>
#include <cmath>
using namespace std;
 
#define pb push_back
#define mp make_pair
#define mod 1000000007
#define int long long
#define ff first
#define ss second
#define inf  1e9
#define infll 1e18
#define pr(x) printf("%lld\n",x)
#define prs(x) printf("%lld ",x)
#define sc(x) scanf("%lld",&x)
#define cbit(n) __builtin_popcount(n);
#define trc(x) cout << #x << " = " << x << endl
#define fr(i,a,n) for(i=a;i<n;i++)
#define fd(i,a,n) for(i=n;i>a;i--)
#define fiv(v) for(i=0;i<v.size();i++)
#define fill(a,v) memset(a,v,sizeof(a))
#define all(a) a.begin(),a.end()
#define iter(c,it) for(typeof((c).begin()) it= (c).begin(); it != (c).end(); it++)
#define get getchar_unlocked
int M[2],cum[100005];
char s[100005];
inline long long inp()
{
    long long n=0,s=1;
    char p=get();
    if(p=='-')
    s=-1;
    while((p<'0'||p>'9')&&p!=EOF)
    p=get();
    while(p>='0'&&p<='9')
    {
    n = (n<< 3) + (n<< 1) + (p - '0');
    p=get();
    };
    return n*s;
}
main()
{
        int n,k,i,j,l,t;
        t=inp();
        while(t--)
        {
        char ch=get();
        n=0;
        while(ch!='\n')
        {
           s[n++]=ch;
           ch=get();
        }
        s[n]='\0';
        k=inp();
        vector<int> P[2];
        n=strlen(s);int m=-1;
        int ans=inf,c=0;
        fr(i,0,k)
        {
            if(s[i]=='A')
                c++;
             ans=min(ans,k-c);
        }
        for(;i<n;i++)
        {
            if(s[i]=='A')
                c++;
            if(s[i-k]=='A')
                c--;
            ans=min(ans,k-c);
        }
        printf("%lld\n",ans);
        }
 
    return 0;
}