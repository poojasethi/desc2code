#include <cstdio>
#include <queue>
#include <algorithm>
#include <iostream>

using namespace std;

#define MAXN 5005

vector< int> graph[MAXN];
int degrees[MAXN];
int preSum[MAXN];
int sufSum[MAXN];

int main()
{
  int t;
  scanf("%d",&t);

  while(t--)
  {
    int n,m;
    scanf("%d %d",&n,&m);

    int i;
    for(i=0;i<MAXN;i++)
    {
      graph[i].clear();
      degrees[i] = 0;
      preSum[i] = 0;
      sufSum[i] = 0;
    }

    for(i=0;i<m;i++)
    {
      int u,v;
      scanf("%d%d",&u,&v);
      
      u--;
      v--;
      graph[u].push_back(v);
      graph[v].push_back(u);

      degrees[u]++;
      degrees[v]++;
    }

    sort(degrees,degrees+n);
    
    preSum[0] = degrees[0];
    for(i=1;i<n;i++)
      preSum[i] = preSum[i-1] + degrees[i];
    sufSum[n-1] = degrees[n-1];
    for(i=n-2;i>=0;i--)
      sufSum[i] = sufSum[i+1] + degrees[i];

    for(i=0;i<n;i++)
    {
        int sub;
        if(i == 0)
          sub = 0;
        else
          sub = preSum[i-1];
        
        if(sufSum[i]-sub == (n-i)*(n-i-1)) 
        {
            cout<<"YES"<<endl;
            break;
        }
    
    }
    if(i == n)
      cout<<"NO"<<endl;
  }

}
