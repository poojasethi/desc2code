#include <iostream>
#include <cstdio>
#include <climits>
#include <algorithm>
#include <queue>
#include <cstring>
#include <cmath>
#include <vector>
#include <list>
#include <stack>
#include <bitset>
#include <string>
#include <stack>
#include <set>
#include <map>
#include <string>
#include <deque>
#include <ctime>
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define ss(n) scanf("%s",n)
#define s2(a,b) scanf("%d%d",&a,&b)
#define SET(p)      memset(p,-1,sizeof(p))
#define CLR(p)      memset(p,0,sizeof(p))
#define vi vector<int>
#define ii pair<int,int>
#define pb push_back
#define mp make_pair
#define F first
#define S second
#define LL long long
#define ULL unsigned long long
#define R freopen("in","r",stdin)
#define W freopen("out","w",stdout)
#define mod 1000000007
using namespace std;
void dfs(int in,vector<vector<int> >& gp,vector<int>& vis,vector<int>& fin,int& t)
{
	vis[in]=1;
	for(int i=0;i<gp[in].size();i++)
	{
		int nx=gp[in][i];
		if(!vis[nx])dfs(nx,gp,vis,fin,t);
	}
	fin[in]=t++;
}
vector<int> dfsf(vector<vector<int> >& gp)
{
	int n=gp.size();
	int t=0;
	vector<int> vis(n,0);
	vector<int> fin(n);
	for(int i=0;i<n;i++)
		if(!vis[i])dfs(i,gp,vis,fin,t);
	return fin;
}
void d(int x,vector<vector<int> >& tt ,vector<int>& vis,vector<int>& comp,int in)
{
	vis[x]=1;
	comp[x]=in;
	for(int i=0;i<tt[x].size();i++)
	{
		if(!vis[tt[x][i]])d(tt[x][i],tt,vis,comp,in);
	}
}
vector<int> scc(vector<vector<int> >& gp)
{
	int n=gp.size();
	vector<int> fin=dfsf(gp);
	vector<ii> abc(n);
	for(int i=0;i<n;i++)
	{
		abc[i].F=fin[i];
		abc[i].S=i;
	}
	sort(abc.begin(),abc.end());
    reverse(abc.begin(),abc.end());
	vector<vector<int> > tt(n);
	for(int i=0;i<n;i++)
	{
		for(int j=0;j<gp[i].size();j++)
		{
			tt[gp[i][j]].pb(i);
		}
	}
	vector<int> vis(n,0);
	vector<int> comp(n,-1);
	int in=0;
	for(int i=0;i<n;i++)
	{
		int k=abc[i].S;
		if(!vis[k])
		{
			d(k,tt,vis,comp,in++);
		}
	}
	return comp;
    
}
int temp[501][501];
int main()
{
    //R;W;
    int t;cin>>t;
    while(t--)
    {
    	CLR(temp);
		int v,e;
		s2(v,e);
		
		for(int i=0;i<e;i++)
		{
			int a,b;
			s2(a,b);
			a--;b--;
			temp[a][b]=1;
			temp[b][a]=1;
		}
		vector<vector<int> > gp(2*v);
		for(int i=0;i<v;i++)
		{
			for(int j=i+1;j<v;j++)
			{
				if(!temp[i][j])
				{
					gp[j].pb(v+i);
					gp[i].pb(v+j);
				}
				else
				{
					gp[v+i].pb(j);
					gp[v+j].pb(i);
				}
			}
		}
		vector<int> comp = scc(gp);
		int flag=1;
		for(int i=0;i<v;i++)
		{
			if(comp[i]==comp[v+i])flag=0;
		}
		if(flag)puts("YES");
		else puts("NO");
    }
}