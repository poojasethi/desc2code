#include <bits/stdc++.h>
		
using namespace std;
#define ff first
#define ss second
#define pb push_back
#define mp make_pair
typedef unsigned long long ull;
typedef long long int lli;
typedef unsigned int ui;
typedef pair<int, int> pii;
typedef vector<int> vi;
typedef long double ld;
#define var(a,b)  __typeof(b) a = b
#define rep(i,n)  for(int i = 0; (i) < (n); ++i)
#define rept(i,a,b) for(var(i,a); i < (b); ++i)
#define tr(v,it)  for(var(it,v.begin());it!=v.end();++it)
#define fill(a,val) memset(a,val,sizeof(a))
#define gi(n) scanf("%d",&n);
#define all(v) v.begin(),v.end()
#define iinp() input<int>()
#define linp() input<lli>()
#define uinp() input<ull>()

#define get getchar_unlocked

//fast function to scan various integer data types
template <typename T>
inline T input() {
	T n = 0;
	int s = 1;
	char p = get();

	while((p < '0' || p > '9') && p != EOF && p != '-')
		p = get();

	if(p == '-'){ s = -1, p = get(); }

	while(p >= '0' && p <= '9') {
		n = (n << 3) + (n << 1) + (p - '0');
		p = get();
	}
	return n*s;
}

int main(int argc, char** argv) {
#ifdef LOCAL
    freopen("in", "r", stdin);
#endif

    int t = iinp();
    int cnt[10], use[10], sum;
    lli res, tmp;

    while(t--) {
    	string s;
    	cin >> s;
    	res = 0;

    	rep(i, s.length()) s[i] -= '0';

    	rep(i, 10) cnt[i] = 0;
    	rep(i, s.length()) cnt[s[i]]++;

    	rep(a, 11) rept(b, a, 11) rept(c, b, 11) rept(d, c, 11) {
    		sum = 0;
    		rep(i, 10) use[i] = 0;
    		if(a < 10) sum += a, use[a]++;
    		if(b < 10) sum += b, use[b]++;
    		if(c < 10) sum += c, use[c]++;
    		if(d < 10) sum += d, use[d]++;
    		if(sum == 0 || sum%9) continue;
    		tmp = 1;
    		rep(i, 10) rep(j, use[i]) tmp = tmp * (cnt[i] - j) / (j + 1);
    		res += tmp;

    	}
    	cout << (int)(res%1000000007) << endl;
    }

	return 0;
}