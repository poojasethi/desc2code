#include <stdio.h>
 
const long long MOD = 1000000007LL;
int T, cnt[10], u, t, i, ptr;
long long ncr[10009][5], dp[5][10][9];
char buff[4000000];

int main()
{
	fread(buff, 4000000, 1, stdin);
	
	while(buff[ptr] >= '0' && buff[ptr] <= '9')
		T = T * 10 + buff[ptr] - '0', ptr++;
		
	for(int k = 0; k < 5; k++)
		for(int n = k; n <= 10000; n++)
			if(n == k || !k) ncr[n][k] = 1;
			else ncr[n][k] = ncr[n - 1][k - 1] + ncr[n - 1][k];
			
	while(T--)
	{
		while(buff[ptr] < '0' || buff[ptr] > '9') ptr++;
		for(i = 0; i < 10; i++) cnt[i] = 0;
		for(; buff[ptr] >= '0' && buff[ptr] <= '9'; ptr++)
			cnt[buff[ptr] - '0']++;
		
		for(int a = 4; a >= 0; a--)
			for(int b = 0; b <= 9; b++)
				for(int c = 0; c < 9; c++)
					if((b == 0 && a == 0) || (b == 0 && c)) dp[a][b][c] = 0;
					else if(b == 0 && a == 4) dp[a][b][c] = 1;
					else if(b == 0) dp[a][b][c] = dp[a + 1][b][c] + ncr[cnt[0]][4 - a];
					else for(dp[a][b][c] = 0, u = a; u <= 4; u++)
					dp[a][b][c] += dp[u][b - 1][(c + (u - a) * b) % 9] * ncr[cnt[b]][u - a];
					
		
		printf("%lld\n", dp[0][9][0] % MOD);
	}
	return 0;
}
