#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstring>
#include <queue>        //max heap implementation
#include <limits.h>
#include <time.h>
#include <bitset>


#define pub push_back
#define pob pop_back
#define puf push_front
#define pof pop_front
#define mkp make_pair
#define fi first
#define se second
#define debug(a) { for( typeof(a.begin()) it = a.begin() ; it != a.end() ; it++ ) cout << *it << " "; cout << endl; }
#define REP(i,n) for (int i = 1; i <= n; i++)

using namespace std;


typedef long long ll;
typedef vector<vector<ll> > matrix;
const ll MOD = 1000000007;
const int K = 2;


//int dx[] = {0, 0, 1, -1, 1, -1, 1, -1};
//int dy[] = {1, -1, 0, 0, 1, -1, -1, 1};

/*
long long C(int n, int r, int MOD)
{
    vector< vector<long long> > C(n+1,vector<long long> (r+1,0));

    for (int i=0; i<=n; i++)
    {
        for (int k=0; k<=r && k<=i; k++)
            if (k==0 || k==i)
                C[i][k] = 1;
            else
                C[i][k] = (C[i-1][k-1] + C[i-1][k])%MOD;
    }
    return C[n][r];
}


/*
int mod (int a, int b)
{
    int ret = a % b;
    if(ret < 0)
        ret+=b;
    return ret;
}

//1000000000




*/

/*
bool valid (int x, int y) {
  return x >= 0 && y >= 0 && x < n && y < n;
}
*/

long long gcd ( long long a, long long b )
{
    long long c;
    while ( a != 0 )
    {
        c = a;
        a = b%a;
        b = c;
    }
    return b;
}

struct sort_pred
{
    bool operator()(const std::pair<int,int> &left, const std::pair<int,int> &right)
    {
        return left.first < right.first;
    }
};




bool isprime( long long n )
{
    long long i;
    if ( n < 4 ) return n != 0;
    if ( (n % 2) == 0 || (((n+1)%6) != 0 && ((n-1)%6) != 0) ) return 0;
    for ( i= 3; i*i <= n; i += 2 )
        if ( (n % i) == 0 ) return false;
    return true;
}


int main()
{
    std::ios::sync_with_stdio(false);

    int t;
    string s;

    cin>>t;

    for(int i=0;i<t;++i)
    {
        cin>>s;
        long long ans=0;
        int numcount[12]={0};

        for(int j=0;j<s.size();++j)
        {
            numcount[s[j]-'0']++;
        }

        for(int a=0;a<=10;++a)
        for(int b=a;b<=10;++b)
        for(int c=b;c<=10;++c)
        for(int d=c;d<=10;++d)
        {
           int sum=0;
           int used_count[12]={0};
          if(a < 10) sum += a, used_count[a]++;
          if(b < 10) sum += b, used_count[b]++;
          if(c < 10) sum += c, used_count[c]++;
          if(d < 10) sum += d, used_count[d]++;
          if(sum==0 || sum%9) continue;

            long long tmp=1;
           for(int e=0;e<10;++e)
           for(int k=0;k<used_count[e];++k)
           {
               tmp=tmp*(numcount[e]-k)/(k+1);
           }
           ans+=tmp;
           //cout<<tmp<<endl;

        }
        printf("%d\n",(int)(ans%1000000007));

    }
}

