#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pb push_back
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;
 
void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}
 
void solve()
{
	char str[10000];
	scanf("%s", str);
	int count[26];
	memset(count, 0, sizeof(count));
	int l = strlen(str);
	for(int i = 0; i < l; i++) {
		count[str[i] - 'a']++;
	}
	int dp[26];
	memset(dp, 0, sizeof(dp));
	int parent[26];
	/*for(int i = 0; i < 26; i++) {
		cout << count[i] << " ";
	}
	cout << endl;*/
	for(int i = 0; i < 26; i++) {
		parent[i] = i;
	}
	
	for(int i = 0; i < 26; i++) {
		if(count[i] > 0) {
			int maxx = 0;
			int pa = i;
			for(int j = i - 1; j >= 0; j--) {
				if(count[j] > 0 && count[j] <= count[i] && dp[j] >= maxx) {
					maxx = dp[j];
					pa = j;
				}
			}
			//cout << maxx << " " << pa << endl;
			dp[i] = maxx + 1;
			parent[i] = pa;
		}
	}
	int ans = 0;
	int index = 0;
	for(int i = 0; i < 26; i++) {
		if(ans < dp[i]) {
			ans = dp[i];
			index = i;
		}
	}
/*	cout << endl << ans << " " << index << endl;
	for(int i = 0; i < 26; i++) {
		cout << parent[i] << " ";
	}
	cout << endl;*/
	int anss[1000], k = 0;
	for(int i = index; i >= 0; i = parent[i]) {
		anss[k++] = i;
		if(i == parent[i]) {
			break;
		}
	}
	for(int i = k - 1; i >= 0; i--) {
		printf("%c", anss[i] + 97);
	}
	pn;
}
 
int main()
{
	int t;
	scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
} 