You are given a string X consisting of lowercase alphabets. You are required to generate the largest string Y from X by following the given instructions below:

frequency(Y[i]) in X ≥ frequency(Y[j]) in X, where  1<=j<=i-1  and frequency(c) in X denotes the the number of occurrences of the letter c in the string X.
ASCII(Y[i]) > ASCII(Y[j]), where 1<=j<=i-1.


If there are multiple such strings Y, then you are required to print the lexicographically smallest string among them.
Note:  All strings are indexed from 1. 

Input

The first line of the input contains an integer T denoting the number of test cases. The description of T test cases follows.
The first line of each test case contains a single string X


Output

For each test case, output a single line containing the string Y as described above.


Constraints

1 ≤ T ≤  1000 
1 ≤ Length of X ≤  1000 


Example
Input:
3
codejam
birlainstituteoftechnology
rrramu
Output:
acdejmo
abcfghlnot
amr
