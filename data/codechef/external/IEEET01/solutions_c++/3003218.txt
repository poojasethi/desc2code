#include<stdio.h>
#define MAX 1000001
int prime[MAX]={0};
int circularprime[MAX]={0};
int circular_prime(int n){
 int k=n;    
 int num,msb;
 int count=0;
 num=1;
 while(n){         
  if(n%2==0)
   return 0;
  n/=10;
  num*=10;        
  count++;
 } 
  num/=10;
  while(count--){
    msb=k/num;              
    k=k-num*(k/num);               
    k=k*10+msb;              
    //printf("%d ",k);
   if(prime[k])
   return 0;
  }  
 return 1;   
}
void generate_circularprime(){
int i;
circularprime[2]=1;
for(i=3;i<MAX;i++)     
 if(!prime[i]){        
   if(circular_prime(i)){            
     circularprime[i]=1; 
     prime[i]=1;
   }         
 }         
}
void sieve(){
  int i,j; 
  prime[0]=prime[1]=1;  
  for(i=2;i<MAX;i++)
  {
    j=2;                
    if(!prime[i]){
      while(i*j<MAX){
       prime[i*j++]=1;              
      }            
    }                   
  }   
}
int main(){
 int i,n;
 sieve();
 generate_circularprime();
 int count=0;
 /*for(i=0;i<20;i++)
  if(!prime[i])
  printf("%d ",i);*/
 for(i=0;i<MAX;i++){
    if(circularprime[i])
     count++;    
   circularprime[i]=count;
 }
 int t;
 scanf("%d",&t);
 while(t--){
  scanf("%d",&n);
  
  printf("Number of circular primes below %d is %d\n",n,circularprime[n]);          
 }   
 return 0;    
}
