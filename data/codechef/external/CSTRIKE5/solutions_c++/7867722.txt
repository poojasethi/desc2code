#include<bits/stdc++.h>
using namespace std;
vector<pair<int,long long int> > gra[100005];
long long int sum[100005],sum2[100005],subsize[100005];
int func(int i,int visited[])
{
	visited[i]=1;
	subsize[i]=0;
	for(int j=0;j<gra[i].size();j++)
	{
		if(visited[gra[i][j].first])continue;
		else
		{
			func(gra[i][j].first,visited);
			sum[i]=sum[i]+sum[gra[i][j].first]+subsize[gra[i][j].first]*gra[i][j].second;
			subsize[i]=subsize[i]+subsize[gra[i][j].first];
		}
	}
	subsize[i]++;
	return 0;
}
int func2(int i,int visited[],int n)
{               
	visited[i]=1;
	if(i==1)
		sum2[i]=sum[i];
	for(int j=0;j<gra[i].size();j++)
	{
		if(visited[gra[i][j].first])continue;
		else
		{
		    sum2[gra[i][j].first]=sum[gra[i][j].first]+sum2[i]-sum[gra[i][j].first]-gra[i][j].second*subsize[gra[i][j].first]+gra[i][j].second*(n-subsize[gra[i][j].first]);
			func2(gra[i][j].first,visited,n);
		}
	}
	return 0;
}
int main()
{
	int t;
	scanf("%d",&t);
	while(t--)
	{
	    int n;
		scanf("%d",&n);
		for(int i=0;i<n+2;i++)
			gra[i].clear();
		for(int i=0;i<n-1;i++)
		{
			int u,v;
			long long int w;
			scanf("%d %d %lld",&u,&v,&w);
            gra[u].push_back(make_pair(v,w));
            gra[v].push_back(make_pair(u,w));
		}
		for(int i=0;i<n+2;i++)
			subsize[i]=sum[i]=sum2[i]=0;
		int visited[n+2];
		for(int i=0;i<=n;i++)
			visited[i]=0;
		func(1,visited);
		for(int i=0;i<=n;i++)
			visited[i]=0;
		func2(1,visited,n);
		for(int i=0;i<n;i++)
    		printf("%lld\n",sum2[i+1]);
	}
	return 0;
}