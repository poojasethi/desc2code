#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;
#define F(i,a,b) for(int i = (int)(a); i <= (int)(b); i++)
#define RF(i,a,b) for(int i = (int)(a); i >= (int)(b); i--)
int MaxSizeSubMatrix(int M, int N, int* A)
{
    int** dp = (int **)malloc(M*sizeof(int *));
    F(i,0,M-1)
        dp[i] = (int *)malloc(N*sizeof(int));
    F(i,0,M-1) dp[i][0] = *(A+i*N);
    F(j,0,N-1) dp[0][j] = *(A + j);
    F(i,1,M-1)
    {
        F(j,1,N-1)
        {
            if(*((A+i*N)+j) == 0) dp[i][j] = 0;
            else
                dp[i][j] = min(dp[i-1][j],min(dp[i][j-1],dp[i-1][j-1])) + 1;
        }
    }
    int ans = 0;
    F(i,0,M-1) F(j,0,N-1) ans = max(dp[i][j],ans);
    free(dp);
    return ans;
}
int main()
{
    #ifndef ONLINE_JUDGE
        freopen("input.txt","r",stdin);
        freopen("output.txt","w",stdout);
    #endif
    int T,M,N;
    scanf("%d",&T);
    while(T--)
    {
        scanf("%d%d",&M,&N);
        int A[M][N];
        F(i,0,M-1) F(j,0,N-1) scanf("%d",&A[i][j]);
        printf("%d\n",MaxSizeSubMatrix(M,N,(int *)A));
    }
    return 0;
}

