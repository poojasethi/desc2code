#define _CRT_SECURE_NO_WARNINGS
 
#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <numeric>
#include <utility>
#include <sstream>
#include <iostream>
#include <iomanip>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cassert>
#include <cctype>
#include <string>
#include <cstring>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <ctime>
 
using namespace std;
 
#define SZ(x) (int)(x).size()
#define FOR(i, a, n) for(int i = (a); i < (n); ++i)
#define FORD(i, a, n) for(int i = (a); i >= (n); --i)
#define REP(i, n) for(int i = 0; i < (n); ++i)
#define REPD(i, n) for(int i = (n) - 1; i >= 0; --i)
#define ALL(x) (x).begin(), (x).end()
#define SQR(x) (x)*(x)
typedef unsigned long long u64;
typedef signed long long i64;
typedef pair<int, int> pii;
typedef pair<double, double> pdd;
#define X first
#define Y second
 
int base[] = {
	7, 25, 42, 75, 385, 642, 1155, 2184, 4233, 8330, 16523,
	98305, 163842, 294915, 557064, 1081353, 2129930, 4227083,
	8421504, 16810113, 33587330, 67141763, 134250632, 268468361,
	536903818
};
 
bool wins(int n)
{
	if (n == 0) return false;
	int lo = 0, hi = 1 << 25;
	while (lo + 1 < hi) {
		int mid = (lo + hi) / 2, mask = mid, value = 0;
		for (int i = 0; mask != 0; ++i) {
			if (mask & 1) value ^= base[i];
			mask >>= 1;
		}
		if (n == value)
			return false;
		else if (n > value)
			lo = mid;
		else
			hi = mid;
	}
	return true;
}
 
int main()
{
	int T;
	scanf("%d", &T);
	REP (t, T) {
		int mask = 0, n, a;
		scanf("%d", &n);
		REP (i, n) {
			scanf("%d", &a);
			mask |= (a & 1) << i;
		}
		if (wins(mask))
			printf("Tom Wins\n");
		else
			printf("Hanks Wins\n");
	}
	return 0;
}
 