#include<iostream>
#include<cstdio>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<string>
#include<string.h>
#include<cstring>
#include<stack>
#include<queue>
#include<cassert>
#include<cmath>
using namespace std;

#define LL long long int
#define PII pair<int,int>
#define PB push_back
#define MP make_pair
#define INF 1000000000
#define debug(args...) do {cerr << #args << ": "; dbg,args; cerr << endl;} while(0)

int n;
int dp[2000000][4];
int A[2000000];
int B[2000000];
int C[2000000];
int main(){
	int n,i;
	while(1){
		if(scanf("%d",&n) == EOF)break;
		for(i=1;i<=n;i++)
			scanf("%d %d %d",&A[i], &B[i], &C[i]);
		if(n == 1){
			cout<<A[1]<<endl;
			continue;
		}
		if(n ==2) {
			cout<<max(B[2] + B[1], max(A[1], A[2]))<<endl;
			continue;
		}
		dp[2][0] = 0;
		dp[2][1] = A[2];
		dp[2][2] = A[1];
		dp[2][3] = B[1] + B[2];
		for(i=3;i<=n;i++){
			dp[i][0] = max(dp[i-1][0], dp[i-1][2]);
			dp[i][1] = max(dp[i-1][0], dp[i-1][2]) + A[i];
			dp[i][2] = max(dp[i-1][1], dp[i-1][3]);
			dp[i][3] = max(dp[i-1][1] + (B[i-1] - A[i-1]), dp[i-1][3] + (C[i-1] - B[i-1])) + B[i];
		}
		cout<<max(max(dp[n][0], dp[n][1]), max(dp[n][2], dp[n][3]))<<endl;
	}
	return 0;
}
