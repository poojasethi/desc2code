Problem description.
 This is the easiest problem of all. So lets keep it short and simple.
You are given a string s composed of lowercase and uppercase alphabets only. Let freq[i] denote the number of occurrences of letter i in the string s.The uppercase letters are twice more powerful than the corresponding lowercase letters. Thus A=aa, B=bb and so on Z=zz. The wow product of the string is defined as the product of all small case vowels whose frequency is greater than 0.Given a string s you need to calculate wow(s).


Input
The first line of input consists of the number of test cases T. Then T lines follows each of which is a string of alphabets only.
 

Output
For each test case print a number on a line denoting the wow product of the string.
 

Constraints
T ≤ 100
1≤ |s| ≤ 10000; |s| denotes the length of s.

 

Example
Input:
3
AaEeIiOoUu
wowSTRING
random


Output:
243
2
1

 

Explanation
Case 1: Here the freq[a] =1+2=3 because each uppercase letter is equivalent to 2 small case letters. And so is freq of any other vowel. Therefore wow product is 3^5 =243
Case 2: Here freq[i]=2, freq[o]=1. So wow product is 2.
Case 3: freq[a]=freq[o]=1. Hence wow product is 1.

