#include<stdio.h>
#include<stdlib.h>
#include<vector>
#include<algorithm>
#define MAX 100

using namespace std;
typedef long long int ll;

vector<ll>vec[MAX];
ll hash[MAX],len[MAX];
ll max_,connected;

void dfs(ll num)
{
	ll i;
	//printf("%lld ",num);
	hash[num]=1;
	connected++;
	for(i=1; i<len[num]; i++)
	{
		if(hash[vec[num][i]]==0)
			dfs(vec[num][i]);
	}
}



int main()
{
	ll t;
	scanf("%lld",&t);
	while(t--)
	{
		ll n,s,e;
		scanf("%lld %lld %lld",&n,&s,&e);
		ll i;
		for(i=1; i<=n; i++)
			vec[i].push_back(i);
		ll e1,e2;
		//scanf("%lld",&e);
		for(i=0; i<e; i++)
		{
			scanf("%lld %lld",&e1,&e2);
			vec[e1].push_back(e2);
			vec[e2].push_back(e1);
		}	
		for(i=1; i<=n; i++)
			len[i]=vec[i].size();
		dfs(s);
		max_=0;		
		for(i=1; i<=n; i++)
		{
			connected=0;
			if(hash[i]==0)
			{	
				dfs(i);
				if(connected>=max_)
					max_=connected;
			}
		}
		printf("%lld\n",max_);
		for (i=1; i<=n; i++)
		{
			vec[i].clear();
			hash[i]=0;		
		}
	}
	return 0;		
}