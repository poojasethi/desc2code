#include<iostream>
#include<stdio.h>
#include<vector>
#include<algorithm>
using namespace std;
void traverse(vector<int> adj[],int s,bool visited[],int group[], int counter)
{
    for(int i=0;i<adj[s].size();i++)
    {
        int t=adj[s][i];
        if(!visited[t]){
            visited[t]=true;
            group[t]=counter;
            traverse(adj,t,visited,group,counter);
        }
    }
}
void dfs(vector<int> adj[],int n)
{
    int group[n];
    bool visited[n];
    for(int i=0;i<n;i++)
        visited[i]=false;
    int counter=1;
    for(int i=0;i<n;i++)
    {
        if(!visited[i])
            traverse(adj,i,visited,group,counter++);
    }
    int hash[counter];
    for(int i=0;i<counter;i++)
        hash[i]=0;
    for(int i=0;i<n;i++)
        hash[group[i]]++;
    printf("%d\n",counter-1);
    sort(hash+1,hash+counter);
    for(int i=1;i<counter;i++)
        printf("%d ",hash[i]);
}
int main()
{
    int n,t,a,b;
    scanf("%d",&n);
    vector<int> adj[n];
    t=n;
    while(t--)
    {
        scanf("%d%d",&a,&b);
        adj[a-1].push_back(b-1);
        adj[b-1].push_back(a-1);
    }
    dfs(adj,n);
}
