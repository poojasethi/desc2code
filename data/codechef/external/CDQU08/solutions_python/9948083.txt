#include<iostream>
#include<algorithm>
using namespace std;
void makeset(int a[],int n)
{
	int i;
	for(i=0;i<n;i++)
	a[i]=-1;
}
int finda(int a[],int n,int b)
{
	//cout<<"m"<<endl;
	if(a[b]<0)
	{
	
	//cout<<"n"<<endl;
	return b;
	}
	else
	return finda(a,n,a[b]);
}
void unionbysize(int a[],int n,int root1,int root2)
{
	int t,x,y;
	x=finda(a,n,root1);
	y=finda(a,n,root2);
	if(a[x]<a[y])
	{
		t=a[y];
		a[y]=root1;
		a[x]=a[x]+t;
	}
	else
	{
		t=a[x];
		a[x]=root2;
		a[y]=a[y]+t;
		
		
	}
}
int main()
{
	int n,i,x,y,count=0;
	cin>>n;
	int a[n];
	makeset(a,n);
	//for(i=0;i<n;i++)
	//cout<<a[i]<<" "<<endl;
	for(i=0;i<n;i++)
	{
		cin>>x>>y;
		//cout<<finda(a,n,x-1)<<" "<<finda(a,n,y-1)<<endl;
		if(finda(a,n,x-1)!=finda(a,n,y-1)||(finda(a,n,x-1)==-1&&finda(a,n,y-1)==-1))
		{
			unionbysize(a,n,x-1,y-1);
			//cout<<finda(a,n,x-1)<<" "<<finda(a,n,y-1)<<endl;
		}
	}
	//cout<<finda(a,n,2);
	for(i=0;i<n;i++)
	{
		if(a[i]<0)
		count++;
	}
	cout<<count<<endl;
	sort(a,a+n);
	for(i=n-1;i>=0;i--)
	{
		if(a[i]<0)
		cout<<-1*a[i]<<" ";
	}
	return 0;
}