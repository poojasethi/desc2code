import java.util.*;
import java.lang.*;
import java.io.*;


class Codechef
{
    static Method br;
    static PrintWriter pw;
    static{
        br = new Method(System.in);
        pw = new PrintWriter(System.out);
    }
    
    
    void letsRoll(){
        int testCases = br.readInt();
        int MAXSIZE = 107;
        while((testCases--)>0){
            int len = br.readInt();
            
            int[] occur = new int[MAXSIZE];
            for(int i = 0 ; i < len ;i++){
                occur[br.readInt()]++;
            }
            for(int i = 0 ; i < MAXSIZE;i++){
                if(occur[i]==1){
                    pw.println(i);
                    break;
                }
            }
        }
        pw.flush();
    }
    
	public static void main (String[] args) throws IOException
	{
        new Codechef().letsRoll();
	}
}
class Method {
 
	private final InputStream stream;
 
	private final byte[] buf = new byte[1024];
 
	private int curChar;
 
	private int numChars;
 
	private SpaceCharFilter filter;
 
	Method(InputStream stream) {
 
		this.stream = stream;
 
	}
 
	public final int read() {
 
		if (numChars == -1) {
			throw new InputMismatchException();
		}
 
		if (curChar >= numChars) {
 
			curChar = 0;
 
			try {
 
				numChars = stream.read(buf);
 
			} catch (IOException e) {
 
				throw new InputMismatchException();
 
			}
 
			if (numChars <= 0) {
				return -1;
			}
 
		}
 
		return buf[curChar++];
 
	}
 
	public final int readInt() {
 
		int c = read();
 
		while (isSpaceChar(c)) {
			c = read();
		}
 
		int sgn = 1;
 
		if (c == '-') {
 
			sgn = -1;
 
			c = read();
 
		}
 
		int res = 0;
 
		do {
 
			if (c < '0' || c > '9') {
				throw new InputMismatchException();
			}
 
			res *= 10;
 
			res += c - '0';
 
			c = read();
 
		} while (!isSpaceChar(c));
 
		return res * sgn;
 
	}
 
	public final long readLong() {
		int c = read();
 
		while (isSpaceChar(c)) {
			c = read();
		}
 
		int sgn = 1;
 
		if (c == '-') {
 
			sgn = -1;
 
			c = read();
 
		}
 
		long res = 0;
 
		do {
 
			if (c < '0' || c > '9') {
				throw new InputMismatchException();
			}
 
			res *= 10;
 
			res += c - '0';
 
			c = read();
 
		} while (!isSpaceChar(c));
 
		return res * sgn;
 
	}
 
	public final String readString() {
 
		int c = read();
 
		while (isSpaceChar(c)) {
			c = read();
		}
 
		StringBuilder res = new StringBuilder();
 
		do {
 
			res.appendCodePoint(c);
 
			c = read();
 
		} while (!isSpaceChar(c));
 
		return res.toString();
 
	}
 
	public final boolean isSpaceChar(int c) {
 
		if (filter != null) {
			return filter.isSpaceChar(c);
		}
 
		return c == ' ' || c == '\n' || c == '\r' || c == '\t' || c == -1;
 
	}
 
	public final String next() {
 
		return readString();
 
	}
 
	public interface SpaceCharFilter {
 
		public boolean isSpaceChar(int ch);
 
	}
 
}