#if defined (_MSC_VER) && (!ONLINE_JUDGE)
#pragma comment(linker, "/STACK:16777216")
#pragma warning(once: 4309 4244 4005 4018)
#define _CRT_SECURE_NO_WARNINGS
#define _CRT_SECURE_NO_DEPRECATE
#define _CRT_DISABLE_PERFCRIT_LOCKS
#define gc _getc_nolock
#define pc _putc_nolock
#include <utils.h>
#include <mymaths.h>
#include <bigint.h>
#include <InfInt.h>
#include <safeint.h>
using namespace msl::utilities; // e.g.: 	SafeInt<int> n = INT32_MAX; n += 1; throws exception!
#else
#define gc getc_unlocked
#define pc putc_unlocked
#endif

#include <bits/stdc++.h>
using namespace std;

typedef unsigned int uint;
typedef unsigned long long uint64;
typedef long long int64;

static struct IO {
	char tmp[1 << 10];

	// fast input routines - http://ideone.com/fOK6CW
	char cur;

	inline char nextChar ( )
	{
		return cur = gc (stdin);
	}
	inline char peekChar ( )
	{
		return cur;
	}

	inline operator bool ( )
	{
		return 0 != peekChar ( );
	}
	inline static bool isBlank (char c)
	{
		return (c < '-' && c);
	}
	inline bool skipBlanks ( )
	{
		while (isBlank (nextChar ( ))); return peekChar ( ) != 0;
	}

	inline IO& operator >> (char & c)
	{
		c = nextChar ( ); return *this;
	}

	inline IO& operator >> (char * buf)
	{
		if (skipBlanks ( )) {
			if (peekChar ( )) {
				*(buf++) = peekChar ( );
				while (!isBlank (nextChar ( ))) *(buf++) = peekChar ( );
			} *(buf++) = 0;
		} return *this;
	}

	inline IO& operator >> (string & s)
	{
		if (skipBlanks ( )) {
			s.clear ( ); s += peekChar ( );
			while (!isBlank (nextChar ( ))) s += peekChar ( );
		}
		return *this;
	}

	inline IO& operator >> (double & d)
	{
		if ((*this) >> tmp) sscanf (tmp, "%lf", &d); return *this;
	}

#define defineInFor(intType) \
	inline IO& operator >>(intType & n) { \
		if (skipBlanks()) { \
			int sign = +1; \
			if (peekChar() == '-') { \
				sign = -1; \
				n = nextChar() - '0'; \
			} else \
				n = peekChar() - '0'; \
			while (!isBlank(nextChar())) { \
				n += n + (n << 3) + peekChar() - 48; \
			} \
			n *= sign; \
		} \
		return *this; \
	}

	defineInFor (int)
		defineInFor (unsigned int)
		defineInFor (long long)
		defineInFor (unsigned long long)

		// fast output routines
		inline void putChar (char c)
	{
		pc (c, stdout);
	}
	inline IO& operator << (char c)
	{
		putChar (c); return *this;
	}
	inline IO& operator << (const char * s)
	{
		while (*s) putChar (*s++); return *this;
	}

	inline IO& operator << (const string & s)
	{
		for (int i = 0; i < (int) s.size ( ); ++i) putChar (s[i]); return *this;
	}

	char * toString (double d)
	{
		sprintf (tmp, "%lf%c", d, '\0'); return tmp;
	}
	inline IO& operator << (double d)
	{
		return (*this) << toString (d);
	}


#define defineOutFor(intType) \
	inline char * toString(intType n) { \
		char * p = (tmp + 30); \
		if (n) { \
			bool isNeg = 0; \
			if (n < 0) isNeg = 1, n = -n; \
			while (n) \
				*--p = (n % 10) + '0', n /= 10; \
			if (isNeg) *--p = '-'; \
		} else *--p = '0'; \
		return p; \
	} \
	inline IO& operator << (intType n) { return (*this) << toString(n); }

#define defineOutForU(intType) \
	inline char * toString(intType n) { \
		char * p = (tmp + 30); \
		if (n) { \
			while (n) \
				*--p = (n % 10) + '0', n /= 10; \
		} else *--p = '0'; \
		return p; \
	} \
	inline IO& operator << (intType n) { return (*this) << toString(n); }

	defineOutFor (int)
		defineOutFor (long long)
		defineOutForU (unsigned long long)

#define endl ('\n')
#define cout __io__
#define cin __io__
} __io__;

class TimeTracker {
	clock_t start, end;
public:
	TimeTracker ( )
	{
		start = clock ( );
	}
	~TimeTracker ( )
	{
		end = clock ( );
		fprintf (stderr, "%.3lf s\n", (double) (end - start) / CLOCKS_PER_SEC);
	}
};
#ifdef ONLINE_JUDGE
// insert here functions from mymath.h, bigint.h, utils.h
#endif

//using namespace jj;		// http://www.jjj.de/fxt/#fxtbook				

int main ( )
{
	//cin.sync_with_stdio(0); cin.tie(0);
#ifndef ONLINE_JUDGE
	//freopen ("input.txt", "rt", stdin);
	//freopen ("output.txt", "wt", stdout);
	TimeTracker tt;
	// at return, destructor of TimeTracker tt is called, thus it shows elapsed time in stderr
#endif
	//cout << jj::gcd (16, 24);
	int t;
	cin >> t;
	while (t--) {
		int n;
		cin >> n;
		int c[101] { };
		for (int i = 0; i < n; i++) {
			int d; cin >> d;
			c[d]++;
		}
		for (int i = 1; i <= 100; i++) {
			if (c[i] == 1) {
				cout << i << endl;
				break;
			}
		}
	}
}