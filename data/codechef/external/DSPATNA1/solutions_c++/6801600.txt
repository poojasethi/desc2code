#include<iostream>
#include<cstdio>
using namespace std;
class matrix
{
    long long row,col;
    long long arr[2][2];
    long long ident[2][1];
    public:
    matrix()
    {
        row=2;
        col=2;
        arr[0][0]=arr[0][1]=arr[1][0]=arr[1][1]=0;
    }
    matrix(long long i,long long j)
    {
        row=i;
        col=j;
        arr[0][0]=arr[0][1]=arr[1][0]=1;
        arr[1][1]=0;
    }
    matrix(long long i,long long j,long long a,long long b)
    {
        row=2;
        col=1;
        ident[0][0]=b;
        ident[1][0]=a;
    }
    friend matrix multiply(matrix a,matrix b)
    {
        matrix c;
        long long k,i,j;
        c.row=a.row;
        c.col=b.col;
        for(i=0;i<a.row;i++)
        {
            for(j=0;j<b.col;j++)
            {
                c.arr[i][j]=0;
                for(k=0;k<a.col;k++)
                {
                    c.arr[i][j]+=a.arr[i][k]*b.arr[k][j];
                }
            }
        }
        return c;
    }
    friend matrix multiply1(matrix a,matrix b)
    {
        matrix c;
        long long k,i,j;
        c.row=a.row;
        c.col=b.col;
        for(i=0;i<a.row;i++)
        {
            for(j=0;j<b.col;j++)
            {
                c.ident[i][j]=0;
                for(k=0;k<a.col;k++)
                {
                    c.ident[i][j]+=a.arr[i][k]*b.ident[k][j];
                }
            }
        }
        return c;
    }
    friend matrix power(matrix a,long long n)
    {
        matrix temp;
        if(n==1)
            return a;
        temp=power(a,n/2);
        temp=multiply(temp,temp);
    if(n%2)
    {
        temp=multiply(temp,a);
    }
    return temp;
    }
    long long get()
    {
        return (ident[0][0]);
    }
};
int main()
{
    long long t;
    long long a,b,n,res,store;
    matrix mat1(2,2),temp;
    scanf("%lld",&t);
    while(t--)
    {
        scanf("%lld%lld%lld",&a,&b,&n);
        matrix root(2,1,a,b);
        if(n==1)
            printf("%lld\n",a);
        else if(n==2)
        {
            printf("%lld\n",b);
        }
        else
        {
            temp=power(mat1,n-2);
            temp=multiply1(temp,root);
            res=temp.get();
            printf("%lld\n",res);
        }

    }
}



