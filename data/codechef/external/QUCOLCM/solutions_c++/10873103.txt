#include<bits/stdc++.h>
using namespace std;
# define mod 100000000
struct job
{
    long long start;
    long long finish;
};
job a[1000001];
long long dp[1000001];
bool cmp(job s1,job s2)
{
    return (s1.finish<s2.finish);
}
int bi(int low,int high,long long va)
{
    while(low<=high)
    {
        int mid=(low+high)/2;
        if(a[mid].finish<va)
        {
            if(a[mid+1].finish<va)
                low=mid+1;
            else
                return mid;
        }
        else
            high=mid-1;
    }
    return -1;
}
void cal(long long n)
{
    dp[0]=1;
    int i,l,j;
    for(i=1;i<n;i++)
    {
        //dp[i]=0;
        int l=bi(0,i,a[i].start);
        dp[i]=1;
        if(l!=-1)
            {
                //cout<<2;
                long long ma=INT_MIN;
                for(j=0;j<=l;j++)
                {
                    if(dp[j]>ma)
                    ma=dp[j];
                }
                dp[i]=dp[i]+ma;
            }
    }
   // cout<<dp[n-1];
  //  dp[n-1]=(dp[n-1]+mod)%mod;
   // int k=log(dp[n-1]);
   // cout<<k;
  /* long long f=dp[n-1];
   int co=0;
   while(f>0)
   {
       f=f/10;
       co++;
   }
    for(i=0;i<8-co;i++)
        cout<<0;
    cout<<dp[n-1]<<"\n";*/
    //cout<<1;
    cout<<*max_element(dp,dp+n)<<"\n";
}
int main()
{
    long long n,i,j,k,t;
    cin>>t;
    while(t--)
    {
        cin>>n;
            for(i=0;i<n;i++)
            {
                cin>>a[i].start;
                cin>>a[i].finish;
            }
            sort(a,a+n,cmp);
            cal(n);
    }
}

