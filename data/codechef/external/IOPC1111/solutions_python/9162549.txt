/* Author: Karlheinz Jung */
/* Compiler: Borland Turbo C 2.01 */
/* Computer: Rabbit 286 */
/* Problem: Giant fountain (IOPC1111) */
 
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <limits.h>
 
#define LL long long
#define ULL unsigned long long
#ifndef ONLINE_JUDGE
	#define buffer_size 1000
	#define siz 1000
#else
	#define buffer_size 200000000
	#define siz 30005
#endif
#define _T for(;!((*ez1>='0'&&*ez1<='9')||*ez1=='-');ez1++);if(*ez1=='-'){wq1=-1;ez1++;}while(1){char c=*ez1;if(c<=32)return wq2*wq1;wq2=(wq2<<1)+(wq2<<3)+c-'0';ez1++;}
 
char pq1[buffer_size];
char *ez1;
 
int sint(){int wq1=1,wq2=0;_T}
long slong(){long wq1=1,wq2=0;_T}
LL sLL(){LL wq1=1,wq2=0;_T}
ULL sULL(){ULL wq1=1,wq2=0;_T}
int sstring(char ziel[]){char *ez2=ziel;for(;ez1<pq1+buffer_size&&*ez1<33;ez1++);for(;ez1<pq1+buffer_size&&*ez1>32;*ez2++=*ez1++);*ez2='\0';return ez1<pq1+buffer_size;}
 
int comparator(const void *elem1, const void *elem2){return(*(int*)elem1-*(int*)elem2);}
void qs(int *feld, int laenge){qsort(feld,laenge,sizeof(int),comparator);}
 
int w2;
int S[siz];
 
int A(int z)
{
int mi=0, mid, ma=w2-1;
while(mi<=ma)
	{
	if(S[mid=(mi+ma)>>1]==z) return mid;
	if(S[mid]<z)
		mi=mid+1;
	else
		ma=mid-1;
	}
}
 
void losen()
{
int n, k, m, w1=1, r, i=0;
int l[siz], c[siz], s[siz], e[siz], w[siz];
LL sum, temp, o1, o2;
LL a[siz];
for(n=sint(),k=sint(),m=sint(),l[0]=S[0]=0; ++i<=k; l[i]=sint(),c[i]=sint(),l[i]+=l[i-1],S[w1++]=l[i]);
for(i=-1; ++i<m; s[i]=sint(),e[i]=sint(),w[i]=sint(),s[i]--,S[w1++]=s[i],S[w1++]=e[i]);
for(qs(S,w1),i=w2=1; i<w1; i++)
	if(S[i]!=S[i-1]) S[w2++]=S[i];
for(i=-1; ++i<=k; l[i]=A(l[i]));
for(i=0; i<w2; a[i++]=0);
for(i=-1; ++i<m; s[i]=A(s[i]),e[i]=A(e[i]),a[s[i]]+=w[i],a[e[i]]-=w[i]);
for(sum=a[o1=o2=0],i=r=1; i<w2; i++)
	{
	if(sum>=c[r])
		{
		o2+=S[i]-S[i-1];
		o1+=(S[i]-S[i-1])*(sum-c[r]);
		}
	else
		{
		temp=o1/(c[r]-sum);
		if(temp>=S[i]-S[i-1])
			{
			o2+=S[i]-S[i-1];
			o1-=(S[i]-S[i-1])*(c[r]-sum);
			}
		else
			{
			o2+=temp;
			o1=0;
			}
		}
	r+=(l[r]==i);
	sum+=a[i];
	}
printf("%lld %lld\n",o1,o2);
}
 
int main()
{
int fall;
if(fread(pq1,1,sizeof(pq1),stdin));
ez1=pq1;
for(fall=sint(); fall--; losen());
return 0;
}
 