#include <bits/stdc++.h>
using namespace std;

#define ll long long

int main()
{
    ll t;
    scanf("%lld",&t);
    while(t--)
    {
        ll m,n,i,j,k,x,y,cnt,sum,tmp;
        scanf("%lld %lld",&m,&n);
        ll visited[m+2][n+2],arr[m+2][n+2];
        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                scanf("%lld",&arr[i][j]);
            }
        }
        for(i=0;i<=m+1;i++)
        {
            for(j=0;j<=n+1;j++)
            {
                visited[i][j]=0;
            }
        }
        for(i=0;i<=n+1;i++) arr[0][i]=arr[m+1][i]=0;
        for(j=0;j<=m+1;j++) arr[j][0]=arr[j][n+1]=0;

        queue< pair<ll,ll> > q;
        pair<ll,ll> p;
        cnt=0;
        for(i=1;i<=m;i++)
        {
            for(j=1;j<=n;j++)
            {
                if(!visited[i][j]&&arr[i][j])
                {
                    cnt++;
                    visited[i][j]=1;
                    q.push(make_pair(i,j));

                    while(!q.empty())
                    {
                        p=q.front();
                        q.pop();
                        x=p.first;
                        y=p.second;
                        if(arr[x-1][y]&&!visited[x-1][y])
                        {
                            visited[x-1][y]=1;
                            q.push(make_pair(x-1,y));
                        }

                        if(arr[x+1][y]&&!visited[x+1][y])
                        {
                            visited[x+1][y]=1;
                            q.push(make_pair(x+1,y));
                        }

                        if(arr[x][y-1]&&!visited[x][y-1])
                        {
                            visited[x][y-1]=1;
                            q.push(make_pair(x,y-1));
                        }

                        if(arr[x][y+1]&&!visited[x][y+1])
                        {
                            visited[x][y+1]=1;
                            q.push(make_pair(x,y+1));
                        }
                    }
                }
            }
        }
        printf("%lld\n",cnt);
    }
    return 0;
}
