#include <stdio.h>
#include <stdlib.h>
#include <iostream>
#include <string.h>
#include <algorithm>
#include <math.h>
#include <vector>
#include <queue>
#include <set>
#include <stack>
#include <map>
#define INF_MAX 2147483647
#define INF_MIN -2147483647
#define INF_LL 9223372036854775807LL
#define INF 2000000000
#define PI acos(-1.0)
#define inf INT_MAX
using namespace std;
typedef long long int LL;
LL coeff[1004] , coeff2[1004] , N , M , arr[1004];
LL ncr[1000][1000];

LL calcncr(int n , int r){
	if(n==r)
		return 1;
	if(r==0)
		return 1;
	if(n<r)
		return 0;
	if(ncr[n][r]!=-1)
		return ncr[n][r];
	ncr[n][r] = calcncr(n-1 , r) + calcncr(n-1 ,r-1);
	return ncr[n][r];
}

int main()
{
// memset(coeff , 0 , sizeof(coeff));
for(int i=0;i<1000;i++)
	coeff[i] = 0;


for(int i=0;i<1000;i++)
	for(int j=0;j<1000;j++)
		ncr[i][j] = -1;



scanf("%lld %lld",&N,&M);
for(int i=1;i<=N;i++)
	scanf("%lld",&arr[i]);

coeff[0] = 1;


coeff[arr[1]+1] = -1;
coeff[0] = 1;

for(int i=2;i<=N;i++)
{
	for(int j=0;j<=1000;j++)
	{
		if(coeff[j]!=0){
			coeff2[(j+arr[i]+1)] += -1*coeff[j];
			coeff2[j] += coeff[j];
		}
	}
	for(int j=0;j<=1000;j++)
	{
		coeff[j] = coeff2[j];
		coeff2[j] = 0;
	}

}


LL ans = 0;

for(int i=0;i<1000 && i<=M;i++)
{
	if(coeff[i]!=0)
	{
		ans = ans + coeff[i]*(calcncr( N+M-i-1 , M-i));
	}
}
cout << ans << endl;

// precalc();

// for(int i=0;i<=6;i++)
	// cout << calcncr(6 , i) << " ";
// cout << endl;


return 0;
}



