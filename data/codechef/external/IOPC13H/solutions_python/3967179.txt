#include<iostream>
#include<algorithm>
#include<stdio.h>
#include<stdlib.h>
using namespace std;
#define max 100005
#define mod 1000000007

bool prime[max];
struct pri
{
	int prime;
	bool val; 
};
struct pri primes[max];

int i;
int maxp=0;

void findprime()
{
	int k;
	for(i=2;i<max;i++)
		prime[i]=true;
	for(i=2;i*i<max;i++)
	{
		k=2;
		if(prime[i])
		{
			while(k*i<max)
			{
				prime[k*i]=false;
				k++;
			}
		}
	}
prime[0]=false;
prime[1]=false;

}
void setvalues(){
	for(i=0;i<max;i++)
	{
		primes[i].val=false;
		primes[i].prime=0;
	}
}



void storeprimes()
{
	
	/*for(i=0;i<max;i++)
		primes[i]=false;*/

	long long int k;
	for(i=2;i<max;i++)
	{
		if(prime[i])
		{
			k=i;
			while(k<max)
			{
				primes[k].val=true;
				primes[k].prime=i;
				k=k*i;
				
			}
		}

	}
	

}


long long calc(int n)
{
	long long res=1;
	long long a=n;
	int r=mod-2;
	while(r)
	{
	if(r&1)
	{
		res=(res*a)%mod;
		a=(a*a)%mod;
		r=r/2;
	}
	else
	{
		a=(a*a)%mod;
		r=r>>1;
	}
	}
	return res;
}

long long lcm[max];

void findlcm()
{
	lcm[0]=1;
	lcm[1]=1;
	for(i=2;i<max;i++)
		if(primes[i].val)
		{	

			lcm[i]=(lcm[i-1]*primes[i].prime)%mod;
		}
		else
		{
			lcm[i]=lcm[i-1];
		}
	//	for(i=0;i<max;i++)
	//		printf("%d : %lld \n",i,lcm[i]);

}

int main()
{
findprime();
long long int ans;

setvalues();
storeprimes();
findlcm();
int t,n;
scanf("%d",&t);
while(t--)
{
	scanf("%d",&n);
	n++;
	ans=lcm[n];
	
	ans=(calc(n)*ans)%mod;
	printf("%lld\n",ans);
}
return 0;
}
