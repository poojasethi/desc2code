#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<vector>
#include<queue>
#include<map>
#include<algorithm>
#include<cstring>
#include<cmath>
#include<stack>
#include<string>
#include<cctype>
#include<list>
#include<set>
#include<deque>
#include<queue>
#include<bitset>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iomanip>
#include<ctime>
 
using namespace std;
 
long long int  prime[100000];
long long int p[10000],j;long long int m,MOD=1000000007;
long long power(long int a,long long int b)
{
	long long x=1,y=a; 
	while(b > 0)
	{
		if(b%2 == 1)
		{
			x=(x*y);
			if(x>m) x%=m;
		}
		y = (y*y);
		if(y>m) y%=m; 
		b /= 2;
	}
	return x;
}
 
int main()
{
    long long int i,c,t,n,hcf;c=0;m=MOD;
    long long int ans,curr,y,k,p1;
    long long int lcm[100005];
    for(i=0;i<100000;i++)prime[i]=0;
    for(j=2;j+j<100000;j+=1) prime[2*j]=1;
    for(i=3;i<3200;i+=2)
    {
                             
          if(prime[i]==1) continue;
          for(j=i;i*j<100000;j+=2) prime[i*j]=1;
    }
  j=0;
  for(i=2;i<100000;i++) {if(prime[i]==0){ p[j]=i;j++;}}
  lcm[0]=1;
  lcm[1]=1;
  for(i=2;i<100002;i++)
  {                    t=i;
                       if(!prime[i])lcm[i]=(lcm[i-1]*i)%m;
                       else
                       {c=0;
             for(k=0;(p[k]*p[k]<=t)&&(k<j);k++)
             {
                                      if(i%p[k]==0){p1=p[k];c++;while(i%p[k]==0){i=i/p[k];}}
                                      if(c>=1)break;
             }
                                      if((c==1)&&(i==1))lcm[t]=(lcm[t-1]*p1)%m;
                                      else lcm[t]=lcm[t-1];
                                      }
                                      
                                      i=t;
}
                                                
  /*for(i=0;i<10;i++)printf("%lld ",lcm[i]);*/
  scanf("%lld",&t);
  while(t--)
  {
            scanf("%lld",&n);n++;
            /*for(i=0;(i<j)&&(p[i]<=n);i++)
            {
                                      curr=0;c=p[i];
                                      while(c<=n)
                                      {
                                           curr++;
                                           c=c*p[i];
                                      }
                                      y=p[i];//printf("%lld ",curr); 
	while(curr > 0)
	{
		if(curr%2 == 1)
		{
			ans=(ans*y);
			if(ans>m) ans%=m;
		}
		y = (y*y);
		if(y>m) y%=m; 
		curr /= 2;
	}
             }*/
                 
            ans=lcm[n];
            ans=(ans*power(n,m-2))%m;        
            printf("%lld\n",ans);
  

}
                                                   
                                                 
            
            
  
  
            return 0;
  
 }
