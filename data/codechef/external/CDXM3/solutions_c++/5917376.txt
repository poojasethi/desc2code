#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
#include <vector>
#include <cmath>
#include <queue>
#include <limits.h>
#include <algorithm>
#ifndef ONLINE_JUDGE
#define gc getchar
#else
#define gc getchar_unlocked
#endif
#define ll long long
#define nl() printf ("\n")
#define si(a) scanf("%d",&a)
#define sl(a) scanf("%lld",&a)
#define pi(x) printf ("%d",x)
#define pl(x) printf ("%lld",x)
#define pc(x) printf ("%c",x)
#define ps(x) printf ("%s",x)
#define pb(x) push_back(x)
#define mp(a,b) make_pair(a,b)
#define repu(i,a,n,step) for (i = a; i < n; i += step)
#define repd(i,a,n,step) for (i = a - 1; i >= n; i += step)
using namespace std;
int readi () {
	int n=0,sign=0;
	char c=gc();
	while (c<48) {
		if (c==45) sign=1;
		c=gc();
	}
	while (c>47) {
		n=n*10+c-'0';
		c=gc();
	}
	if (sign) return (-n);
	return n;
}
ll readl () {
	ll n=0;int sign=0;
	char c=gc();
	while (c<48) {
		if (c==45) sign=1;
		c=gc();
	}
	while (c>47) {
		n=n*10+c-'0';
		c=gc();
	}
	if (sign) return (-n);
	return n;
}
double power(double x, int y)
{
    double temp;
    if( y == 0)
       return 1;
    temp = power(x, y/2);
    if (y%2 == 0)
        return temp*temp;
    else
    {
        if(y > 0)
            return x*temp*temp;
        else
            return (temp*temp)/x;
    }
}
ll maxm;
int main() {
        int t,i;
        t=readi();
        ll maxm  = INT_MIN;
        while (t--) {
                ll n,k;
                n=readl();
                k = readl();
                ll a[n];
                ll b[10004]={0};
                repu(i,0,n,1) {
                        a[i]=readl();
                        b[i]= a[i];
                }
                for (ll j = 0; j < n; j++) {
												ll temp = 0;
                        for (ll x = k+1; j - x >=0 ; x++) {
                        		temp = max (temp, b[j-x]);
                                //maxm = max (maxm , b[j]);
                                //cout<<maxm<<"\n";
                        }
												b[j] = a[j] + temp;
												//maxm = max(maxm, b[j]);
												//if ( j != 0 && b[j] < b[j-1])
																///b[j] = b[j-1];
												//cout <<b[j]<<"\n";
                  }
                        //pl(maxm);
                        //for (int h = 0; h < n; h++) cout<<b[h]<<" ";
                        //nl();
                        //}
								maxm = 0;
                for ( i = 0; i <n; i++)
												maxm = max (maxm,b[i]);
                //cout<<"FReG";
                pl(maxm);
                nl();
                memset(b,0, sizeof(b));
                maxm = INT_MIN;
        }

return 0;
}
/*
2
10 1
1 2 -3 -5 4 6 -3 2 -1 2
10 2
1 2 -3 -5 4 6 -3 2 -1 2
*/
