#include<iostream>
#include<string.h>

using namespace std;
int maxSum = 0;

void kadane(int *arr, int n)
{
    int i, max_yet, max_ending_here = 0;

    for(i = 0; i < n; i++)
    {
        max_ending_here = max_ending_here + arr[i];
        if(max_ending_here < 0)
            max_ending_here = 0;
        if(max_yet < max_ending_here)
            max_yet = max_ending_here;
    }
    if(maxSum < max_yet)
    {
        maxSum = max_yet;
        //cout<<maxSum<<"\n";
    }

}

void findMaxSum(int a[][100], int n)
{
    int temp[n], tmp[n], i, j, k;

    for(i = 0; i < n; i++)
    {
        temp[i] = 0;
        for(j = 0; j < n; j++)
        {
            temp[i] = temp[i] + a[i][j];
        }
    }

    for(i = 0; i < n; i++)
    {
        if(i > 0)
        {
            for(k = 0; k < n; k++)
            {
                temp[k] = temp[k] - a[k][i-1];
            }
        }
        memcpy(tmp, temp, sizeof(int)*n);
        for(j = n-1; j >= i; j--)
        {
            if(j < n-1)
            {
                for(k = 0; k < n; k++)
                    tmp[k] = tmp[k] - a[k][j+1];
            }
            kadane(tmp, n);
        }
    }
}
int main()
{
    int a[100][100], i, j, n;
    cin>>n;

    for(i = 0; i < n; i++)
    {
        for(j = 0; j < n; j++)
        {
            cin>>a[i][j];
        }
    }
    cin>>i;
    findMaxSum(a, n);
    cout<<maxSum;
    return 0;
}
