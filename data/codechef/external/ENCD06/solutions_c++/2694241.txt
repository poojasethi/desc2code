#include <iostream>
#include <vector>
using namespace std;

int kadane(vector<int> const & vec){
    int max_ending_here=0, max_so_far = 0;
    for(int i=0;i<vec.size();i++){
        max_ending_here = max(0, max_ending_here + vec[i]);
        max_so_far = max(max_so_far, max_ending_here);
    }
    return max_so_far;
}

int main(){
	int a;
	while(scanf("%d",&a)!=EOF){
		if(a==0)break;
		vector<vector<int> > vec(a,vector<int>(a));
		
		for(int i=0;i<a;i++){
			for(int j=0;j<a;j++){
				scanf("%d",&vec[i][j]);
			}
		}
		/*for(int i=0;i<a;i++){
			for(int j=0;j<a;j++){
				cout << vec[i][j] << " " ;
			}
			cout << endl;
		}*/
		
		int ma=0,t=0;
		for(int i=0;i<a;i++){
			vector<int> rvec(a,0);
			for(int j=i;j<a;j++){
				for(int k=0;k<a;k++){
					rvec[k]=rvec[k]+vec[k][j];
				}
				t=kadane(rvec);
				//cout << t << endl;
				//cout << "t " << t << endl;
				if(t>ma)ma=t;
			}
		}
		cout << ma << endl;
	}
	return 0;
}