// Tapan Sahni
#include <algorithm>
#include <iostream>
#include <iterator>
#include <numeric>
#include <sstream>
#include <fstream>
#include <cassert>
#include <climits>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cstdio>
#include <vector>
#include <cmath>
#include <queue>
#include <deque>
#include <stack>
#include <list>
#include <iomanip>
#include <map>
#include <complex>
#include <set>

#define mod 1000000007

using namespace std;
typedef long long LL;

typedef long long ll;

const int N = 1000 + 10;

int a[N];
int dp[N] , dp1[N],ans[N],ans1[N];
int fdp[N][N] , fdp1[N][N];
int mine[N][N];
int main() {
  ios::sync_with_stdio(false) ; cin.tie(nullptr);
  int t;
  cin >> t;
  while(t--) {

    int n , k;
    ll val=0;
    cin >> n >> k;
    for(int i=0;i<=n+10;i++)
    {
      dp[i]=dp1[i]=ans[i]=ans1[i]=0;
    }
    for(int i = 1; i <= n; i++) cin >> a[i];
    int lis = 1;
    for(int i = 1; i <= n; i++) {
      dp[i] = 1;
      for(int j = 1; j < i; j++) {
        if(a[i] > a[j] && dp[j] + 1 > dp[i])
          dp[i] = dp[j] + 1;
        lis = max(lis , dp[i]);
      }
    }
    for(int i = n; i >= 1; i--) {
      dp1[i] = 1;
      for(int j = i + 1; j <= n; j++) {
        if(a[j] > a[i] && dp1[j] + 1 > dp1[i])
          dp1[i] = dp1[j] + 1;
      }
    }
    int i,j;
    ll answer=0;
    for(i=1;i<n;i++)
    {
      
      for(j=lis;j>=1;j--) 
      {
        ans[j]=10e8;
        ans1[j]=-1;
      }
      for(j=1;j<=i;j++)
      {
        ans[dp[j]]=min(ans[dp[j]],a[j]);
      }
      for(j=lis-1;j>=0;j--)
      {
        ans[j]=min(ans[j],ans[j+1]);
      }
      for(j=i+1;j<=n;j++)
      {
        ans1[dp1[j]]=max(ans1[dp1[j]],a[j]);
      }
      for(j=lis-1;j>=0;j--)
      {
        ans1[j]=max(ans1[j],ans1[j+1]);
      }

      for(j=1;j<lis;j++)
      {
        if(ans[j]==10e8 or ans1[lis-j]==-1) continue;
        answer+=max(min(ans1[lis-j],k+1)-ans[j]-1,0);
      }
      // printf("%d %d\n", ans[j],ans1[j]);
      if(ans1[lis]!=-1) answer+=min(k,ans1[lis]-1);
      if(ans[lis]!=10e8) answer+=max(k-ans[lis],0); 
      // printf("%lld\n", answer);
    }
    int temp=10e8,temp1=-1;
    // printf("%d %d %d\n", dp[1],dp1[1],lis);
    for(i=1;i<=n;i++)
    {
      if(dp[i]==lis)
        temp=min(temp,a[i]);
      if(dp1[i]==lis)
        temp1=max(temp1,a[i]);
    }
    answer+=min(temp1-1,k);
    answer+=max(k-temp,0);
    printf("%lld\n", answer);
  } 
  return  0;
}