#include <vector>
#include <stack>
#include <queue>
#include <map>
#include <set>
#include <utility>
#include <algorithm>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstring>
#include<iomanip>
using namespace std;

typedef long long ll;
typedef vector <int> vi;
typedef pair< int ,int > pii;
#define pb push_back
#define sz size()
#define ln length()
#define fore(i,a,b) for(int i=a;i<b;i++)
#define fores(i,a,b) for(int i=a;i<=b;i++)
#define ford(i,a,b) for(int i=a;i>=b;i--)
#define all(a) a.begin(),a.end()
#define mp make_pair
#define ff first
#define ss second
#define sc(a) scanf("%d",&a)
#define md 1000000007
#define N 1123

int main() {
    int t;
    sc(t);
    fore(z,0,t) {
        int n,k;
        sc(n);sc(k);
        vi a(n);
        fore(i,0,n) {
            sc(a[i]);
        }
        vi lis_left(n+2,0),lis_right(n+2,0),lis(n,0);
        int ans = 0;
        fore(i,0,n) {
            lis[i] = 1;
            fore(j,0,i) {
                if(a[j]<a[i]) {
                    lis[i] = max(lis[i],lis[j]+1);
                }
            }
            ans = max(ans,lis[i]);
        }
        fore(i, 0, n) {
            lis_left[i+1] = lis[i];
        }
        lis_left[n+1] = ans;
        fore(i,0,n) {
            lis[i] = 0;
        }
        ford(i,n-1,0) {
            lis[i] = 1;
            fore(j,i+1,n) {
                if(a[j]>a[i]) {
                    lis[i] = max(lis[i],lis[j]+1);
                }
            }
        }
        fore(i,0,n) {
            lis_right[i+1] = lis[i];
        }
        lis_right[0] = ans;
        a.pb(k+1);
        a.insert(a.begin(), 0);
        ll fa = 0;
        fore(i,0,n+1) {
            vi mi(N,md),ma(N,0);
            ford(j, i, 0) {
                mi[lis_left[j]] = min(mi[lis_left[j]],a[j]);
            }
            fore(j,i+1,n+2) {
                ma[lis_right[j]] = max(ma[lis_right[j]],a[j]);
            }
            fore(j,0,ans+1) {
                if(mi[j]<ma[ans-j] && mi[j]<k+1) {
                    fa+=(min(k+1,ma[ans-j])-mi[j]-1);
                }
            }
        }
        cout<<fa<<endl;
    }
    
    return 0;
}