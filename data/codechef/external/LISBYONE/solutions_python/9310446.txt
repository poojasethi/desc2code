#include <bits/stdc++.h>

#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)

#define fi first
#define se second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define LET(x, a)  __typeof(a) x(a)
#define foreach(it, v) for(LET(it, v.begin()); it != v.end(); it++)

#define _ ios_base::sync_with_stdio(false);cin.tie(NULL);cout.tie(NULL);
#define __ freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);

#define func __FUNCTION__
#define line __LINE__

using namespace std;

template<typename S, typename T> 
ostream& operator<<(ostream& out, pair<S, T> const& p){out<<'('<<p.fi<<", "<<p.se<<')'; return out;}

template<typename T>
ostream& operator<<(ostream& out, vector<T> const & v){
int l = v.size(); for(int i = 0; i < l-1; i++) out<<v[i]<<' '; if(l>0) out<<v[l-1]; return out;}

void tr(){cout << endl;}
template<typename S, typename ... Strings>
void tr(S x, const Strings&... rest){cout<<x<<' ';tr(rest...);}

const int N = 1100;

int t;
int a[N];
int l1[N], l2[N];

int al[N][N], bl[N][N], inf = 1e9;

int main(){
	sd(t);
	while(t--){
		int n, k;
		sd2(n,k);
		
		for(int i = 1; i <= n; i++){
			sd(a[i]);
			l1[i] = l2[i] = 1;
		}
		
		for(int i = 1; i <= n; i++){
			for(int j = 1; j <= n; j++){
				al[i][j] = inf;
				bl[i][j] = -inf;
			}
		}
		
		for(int i = 1; i <= n; i++){
			bl[i][0] = k+1;
			al[i][0] = 0;
		}
		
		int lis = 0;
		for(int i = 1; i <= n; i++){
			for(int j = 1; j < i; j++){
				if(a[j] < a[i]){
					l1[i] = max(l1[i], l1[j]+1);
				}
			}
			lis = max(lis, l1[i]);
		}
		
		for(int i = n; i > 0; i--){
			for(int j = n; j > i; j--){
				if(a[j] > a[i]){
					l2[i] = max(l2[i], l2[j]+1);
				}
			}
		}
		
		for(int i = 1; i <= n; i++){
			int tmp = l1[i];
			
			if(i > 1)
				for(int j = 0; j <= lis; j++){
					al[i][j] = al[i-1][j];
				}
			
			for(int j = tmp; j > 0; j--){
				if(al[i][j] <= a[i]) break;
				al[i][j] = a[i];
			}
		}
	
		for(int i = n; i > 0; i--){
			int tmp = l2[i];
			
			if(i < n)
				for(int j = 0; j <= lis; j++){
					bl[i][j] = bl[i+1][j];
				}
			
			for(int j = tmp; j > 0; j--){
				if(bl[i][j] >= a[i]) break;
				bl[i][j] = a[i];
			}
		}	
		
//		for(int i = 1; i <= n; i++){
//			for(int j = 1; j <= lis; j++){
//				tr(i, j, al[i][j], bl[i][j]);
//			}
//		}
	
		vector<pair<int, int> > event;
		vector<pair<int, int> > nv;
	
		long long ans = 0;
		for(int i = 1; i < n; i++){
			event.clear();
			nv.clear();
			
			for(int j = 0; j <= lis; j++){
				if(al[i][j] == inf or bl[i+1][lis-j] == inf) break;
				
				int x = al[i][j], y = bl[i+1][lis-j];
				if(y > k+1) y = k+1;
				if(x+1 > k) continue;
				if(x+1 > y-1) continue;
				event.pb(mp(x+1,y-1));
			}
			
			if(event.empty()) continue;
			
			sort(event.begin(), event.end());
	
			pair<int,int> cur = event[0];
			for(int i = 1; i < event.size(); i++){
				if(event[i].fi <= cur.se){
					cur.se = event[i].se;
				}
				else{
					nv.pb(cur);
					cur = event[i];
				}
			}			
			
			nv.pb(cur);
			
			long long x, y;
			for(int i = 0; i < nv.size(); i++){
				x = nv[i].fi, y = nv[i].se;
				ans += (y-x+1);
			}
		}

		int mx = 0;
		for(int i = 1; i <= n; i++){
			if(l2[i] == lis) mx = max(mx, a[i]);
		}
		
		ans += min(mx-1, k);
		
		int mn = inf;
		for(int i = 1; i <= n; i++){
			if(l1[i] == lis) mn = min(mn, a[i]);
		}
		ans += max(k-mn, 0);
		
		printf("%lld\n", ans);	
	
	}		
	return 0;
}