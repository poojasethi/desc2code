// C++ implementation of Radix Sort
#include<iostream>
#include<vector>
#include<math.h>
#include<stdio.h>
#define MAX 100001
using namespace std;

void print(int arr[], int n);
// A utility function to get maximum value in arr[]
int getMax(int arr[], int n)
{
	int mx = arr[0];
	for (int i = 1; i < n; i++)
		if (arr[i] > mx)
			mx = arr[i];
	return mx;
}

// A function to do counting sort of arr[] according to
// the digit represented by exp.
void countSort(int a[], int n, int ex)
{
    vector<int> c[10];
    vector<int>::iterator it;
    int m1,n1,i,in,j;
    n1 = pow(10,ex-1);
    m1 = 10 * n1;
    for(i=0;i<n;i++)
    {
        in = a[i]%m1;
        in = in/n1;
        c[in].push_back(a[i]);
    }
    j=0;
    for(i=0;i<10;i++)
    {
        for(it = c[i].begin(); it!= c[i].end(); it++)
        {
//            printf("%d ",*it);
            a[j++] = *it;
        }
  //      cout<<endl;  
    }
    //print(a,j);
    return;
}


// The main function to that sorts arr[] of size n using 
// Radix Sort
void radixsort(int a[], int n)
{
    int max,c,i;
    max = getMax(a,n);
    c=0;
    while(max)
    {
        c++;
        max = max/10;
    }
    for(i=1;i<=c;i++)
        countSort(a,n,i);
    print(a,n);
}

// A utility function to print an array
void print(int arr[], int n)
{
	for (int i = 0; i < n; i++)
		cout << arr[i] << " ";
	cout<<endl;
}

int main()
{
	int n,a[MAX],i;
	scanf("%d",&n);
	for(i=0;i<n;i++)
		scanf("%d",&a[i]);
	radixsort(a, n);
return 0;
}
