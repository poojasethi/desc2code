#include<bits/stdc++.h>

using namespace std;

#define gc getchar_unlocked

void scanint(int &x)
{
    register int c = gc();
    x = 0;
    int neg = 0;
    for(;((c<48 || c>57) && c != '-');c = gc());
    if(c=='-') {neg=1;c=gc();}
    for(;c>47 && c<58;c = gc()) {x = (x<<1) + (x<<3) + c - 48;}
    if(neg) x=-x;
}

int n;
 int BIT[100002];

void update(int x, int diff)
{
		while(x <=n)
		{
			BIT[x] += diff;
			x += (x & -x);
		}
		return;
}

 int query( int x)
{
	int s=0;
	while(x>=1)
	{
		s += BIT[x];
		x -= (x & -x);
	}
	return s;
}

int main()
{
	int x,q,a1,b1,c1,i;
	scanint(n);
	 int a[n+1];
	set<int>  m;
	for(i=1 ; i<=n ; i++)
	{
		scanint(a[i]);
		update(i,a[i]);
		if(a[i] !=0)
			m.insert(i);
	}
	scanint(q);
	while(q--)
	{
		scanint(a1);
		scanint(b1);
		scanint(c1);
		if(a1==2)
				printf("%d\n",( query(c1)- query(b1-1) ) );
		else
		{
			set< int> :: iterator it,it1;
			it = m.lower_bound(b1);
			while( (*it) <= c1 && it != m.end())
			{
				int temp = (*it);
				if(a[temp] == 1)
				{
					it1 = it;
					it++;
					m.erase(it1);
					update(temp , -1);
				}
				else
				{
					 int temp1 = a[temp]/2;
					 int tempold = a[temp];
					a[temp] = temp1;
					update(temp, temp1 - tempold);	
					it++;
				}
			}
		 }
	   }
		return 0;
}
