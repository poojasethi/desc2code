#include<bits/stdc++.h>
#include<algorithm>
#include<vector>
#include<queue>
//int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
//int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
//int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 direction
#define REP(i,n) for(int i=0;i<n;i++)
#define REPU(i,a,b) for(int i=a;i<b;i++)
#define sll(n) scanf("%lld",&n)
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d",n)
#define sl(n) scanf("%ld",&n)
#define pin(n) printf("%d\n",n)
#define MP make_pair
#define PB push_back
#define all(a) a.begin(),a.end()
#define F first
#define S second
#define SET(a,b) memset(a,b,sizeof (a))
typedef long long LL;
#define PII pair<int,int>
LL mod=1000000007LL;
using namespace std;
LL fact[100005];
void init()
{
    fact[0]=1;
    for(int i=1;i<=100000;i++)
    {
       fact[i]=(fact[i-1]*i)%mod;
    }

}
LL pow(LL base,LL exp)
{
    LL ans=1;
    while(exp)
    {
        if(exp&1) ans=(ans*base)%mod;
        base=(base*base)%mod;
        exp>>=1;
    }
    return ans;
}
LL inverse(LL a)
{
    return pow(a,mod-2);
}
int main()
{
    LL t; sll(t);
    init();
    while(t--)
    {
        LL n,r;
        sll(n); sll(r);
        if(n<r) cout<<0<<endl;
        else if(n==r || r==0) cout<<1<<endl;
        else if(r==1) cout<<n<<endl;
        else
        {LL ans=(fact[n]*((inverse(fact[r])*inverse(fact[n-r]))%mod))%mod;
        printf("%lld\n",ans);}
    }
	return 0;
}
