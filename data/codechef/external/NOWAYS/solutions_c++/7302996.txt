#include<iostream>
#include<stdio.h>
#include<iostream>
#include<math.h>
#include<algorithm>
#include<string.h>
#include<vector>

using namespace std;
typedef long long ll;

#define S(x) scanf("%lld",&x)
#define P(x) printf("%lld\n",x)
#define SARR(_A,_N) for(ll _Z=0; _Z<_N; _Z++) \
scanf("%lld",&_A[_Z])
#define PARR(_A,_N) for(ll _Z=0; _Z<_N; _Z++) \
printf("%lld ",_A[_Z]); \
printf("\n")
#define MOD 1000000007
typedef long long int ll;
using namespace std;
ll fact[100005], invfact[100005];

ll powmod(ll base, ll expo){
    if(expo==0)
		return 1;
	else if(expo&1)
		return base*powmod(base, expo-1)%MOD;
	else{
		ll root=powmod(base, expo>>1);
		return (root*root)%MOD;
	}
}

ll inverse(ll x){
	return powmod(x, MOD-2);
}

void init(ll n){
    ll i;
	fact[0]=1;
	for(i=1; i<=n; i++)
		fact[i]=(i*fact[i-1])%MOD;
	invfact[n]=inverse(fact[n]);
	for(i=n; i>0; i--)
		invfact[i-1]=(i*invfact[i])%MOD;
}

ll nCr(ll n, ll r){
	if(r>n || r<0)
		return 0;
	return ((fact[n]*invfact[r]%MOD)*invfact[n-r])%MOD;
}
int main()
{
    init(100001);
ll t;
S(t);
while(t--)
{
ll n,k;
S(n);
S(k);
if(k>n)
printf("0\n");
else
{
ll ans=nCr(n,k);
P(ans);
}
}
return 0;
}
