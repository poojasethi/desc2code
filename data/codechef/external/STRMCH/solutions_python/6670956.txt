#include <cstdio>
#include <iostream>
#include <cstring>
#include<bits/stdc++.h>

using namespace std;

int lps[1000005] ;
char st[1000005];
char p[1000005];

int preprocess(char *p, int m) {
	//cout<<"inpre\n";
	int len = 0;
	lps[0] = 0;
	int i = 1;	
	
	while(i < m) {
		
		if(p[i] == p[len]) {
			len++;
			lps[i] = len;
			i++;
		} else {
			
			if(len != 0) {
				len = lps[len - 1];
			} else {
				lps[i] = 0;
				i++;
			}
		}
		//cout<<"hello ";
	}
	
}
int kmpsearch(char *s, char *p) 
{
	//cout<<"inserch\n";
	int count, i, j;
	int m = strlen(p) ;
	int n = strlen(s) ;

	count = 0; j = 0;
	if(p[0] == '\0') {
		return 0;
	}
	preprocess(p, m);
	/*for(int i = 0; i < m; i++) {
		cout << lps[i] <<" ";
	}
	cout<<endl;*/
	i = 0;
	while(i < n) {
		//cout<<"h "<<i;
		if(p[j] == s[i]) {
			j++;
			i++;
		}
		//cout<<j<<" ";
		if(j == m) {
			count++;
			j = lps[j - 1];
		} else if(i < n && p[j] != s[i]) {
			
			if(j != 0) 
				j = lps[j - 1];
			else 
				i++;
		}
	}
	return count;
	
}


int main()
{
	ios_base::sync_with_stdio(false);
	int n, k, low, mid, high, ans, count;

	scanf("%d %s %d", &n, &st, &k);
	low = 0;
	high = n;
//	cout<<st;
	while(low <= high) {
		count = 0;
		mid = (low + high) / 2;
		//cout<<"hello "<<mid<<endl;
		for(int i = 0; i < mid; i++) {
			p[i] = st[i];
			//cout<<p[i]<<" ";
		}
		p[mid] = '\0';
		//cout << p <<endl;

		count = kmpsearch(st,p);
		//cout<<endl<<count<<endl;
		//cout<<"hi\n";
		if(count >= k) {
			ans = mid;
			low = mid + 1;
			
		} else {
			high = mid - 1;
		}
	}
	
	cout << ans << endl;
	for(int i = 0; i < ans; i++) {
		cout<<st[i];
	} 
	cout <<endl;
	
	return 0;	
}
