//  main.cpp
//  Practice
//
//  Created by Tapan on 31/12/14.
//  Copyright (c) 2014 Tapan. All rights reserved.
//

#include<stdio.h>
#include<iostream>
#include<vector>
#include<string.h>
#include<algorithm>
#include<deque>
#include<map>
#include<set>
#include<stdlib.h>
#include<math.h>
#include<queue>
#include<stack>
#include<functional>
using namespace std;
#define ll long long
#define si(x) scanf("%d",&x)
#define sc(x) scanf("%c",&x)
#define sl(x) scanf("%lld",&x)
#define prl(x) printf("%lld",x)
#define pri(x) printf("%d\n",x)
#define prs(x) printf("%s\n",x)
typedef pair<ll, ll> ii;
typedef pair<string, string> iis;
typedef pair<ll, ll> iil;
typedef pair<ii, int> iii;
typedef pair<ii, ii> iiii;
#define vl vector<ll>
#define vi vector<int>
#define vii vector<ii>
#define vvl vector< vl >
#define vvi vector< vi >
#define vvii vector< vii >
#define pb push_back
#define maX(a,b) ((a)>(b)?a:b)
#define miN(a,b) ((a)<(b)?a:b)
#define mem(x,y) memset(x,y,sizeof(x))
#define rep(i,a,b) for(int i=(a);i<(b);i++)
#define max_int_value 2147483647
#define max_long_value 9223372036854775807
#define mod 1000000007
char sbuf[1000005];
 string ns() { scanf( "%s", sbuf ); return sbuf; }
#define mod1 7420738134811
#define B 5
#define B1 31
#define pb push_back
#define MAX 1000016
 string s,match;
ll h1[MAX],h2[MAX],p1[MAX],p2[MAX];
ll Hash1=0,Hash2=0;
int len1,len;
bool comp (int a, int b, int l){
      if (h1[a + l] - h1[a] * p1[l] != h1[b + l] - h1[b] * p1[l]) return false;
    if (h2[a + l] - h2[a] * p2[l] != h2[b + l] - h2[b] * p2[l]) return false;
    return true;
}
bool comp1 (int a, int l){
      if (h1[a + l] - h1[a] * p1[l] != Hash1) return false;
    if (h2[a + l] - h2[a] * p2[l] != Hash2) return false;
    return true;
 }
void pre(){
    p1[0]=1;
    p2[0]=1;
    rep(i,0,len){
        p1[i+1]=(p1[i]*37);
        
        p2[i+1]=(p2[i]*41);
       
        h1[i+1] =(h1[i]*37 + s[i]);

        h2[i+1] =(h2[i]*41 + s[i]);
        }
        return;

}
void pre1(){
    rep(i,0,len1){
        Hash1 =(Hash1*37 + match[i]);

        Hash2=(Hash2*41 + match[i]);
        }
        return;
}
inline void ReadInput(void){
  
}
inline void solve(void){
    int n,k;
    cin >> n;
    cin >> s;
    len=n;
    pre();
    cin >>k;
    int l=1,r=n;
    int res=0;
     while(l<=r){
    int mid=(l+r)/2; 
     Hash1=0;
     Hash2=0;
     h1[0]=0;
     h2[0]=0;
     match.clear(); 
     rep(i,0,mid)match.pb(s[i]); 
     len1=mid;
     pre1();
     int ans=0;
     for(int i=0;i<=(len-len1);i++){
        if(comp1(i,len1)){
         ans++;
        }
     }
     if(ans>=k){
        res=mid;
        l=mid+1;
    }
    else {
        r=mid-1;
    }
}
     cout <<res<<endl;
     cout <<s.substr(0,res).c_str() ;        
 }
    int main(int argc, const char * argv[]){
        ReadInput();
        solve();
        return 0;
    }