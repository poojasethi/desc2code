#include<bits/stdc++.h>
using namespace std;

typedef long long int LL;

#define inp_s     ios_base::sync_with_stdio(false)
#define DRT()     int test_case;cin>>test_case;while(test_case--)

#define VI        vector<int>
#define VS        vector<string>
#define VLL       vector<LL>
#define PII       pair<int,int>
#define PLL       pair<LL,LL>
#define all(c)    c.begin(),c.end()
#define sz(c)     c.size()
#define clr(c)    c.clear()
#define pb        push_back
#define mp        make_pair

#define GI(x)     scanf("%d",&x)

#define FOR(i,a,b)      for(int i=(a);i<(b);i++)
#define RFOR(i,a,b)     for(int i=(b)-1;i>=(a);i--)

#define gcd(a,b)  __gcd(a,b)
#define MOD       1000000007
#define EPS       1E-10
#define ELR       2.71828182845904523536
#define PI        acos(-1)

#define CASE(x)   cout << "Case " << x << ": "

/**
z-algorithm.
z[i] stores the max length on string s such that s[0...z[i]] = s[i...i+z[i]]
*/

VI z;
void z_function(string s)
{
      int n = (int) sz(s);
      z.resize(n);
      int lft = 0,rgt = 0;
      FOR(i,1,n)
      {
            if(i<=rgt)
                  z[i] = min(rgt-i+1,z[i-lft]);
            while(i + z[i] < n && s[z[i]] == s[i + z[i]])
                  z[i] += 1;
            if(i + z[i] - 1 > rgt)
            {
                  lft = i;
                  rgt = i + z[i] - 1;
            }
      }
}

int poss(int x)
{
      int ctr = 1;
      FOR(i,1,sz(z)) if(z[i] >= x) ctr += 1;
      return ctr;
}

int main()
{
      inp_s;
      int n;
      cin >> n;
      string s;
      cin >> s;
      int k;
      cin >> k;
      z_function(s);
      int lo = 0,hi = n;
      while(lo < hi)
      {
            int mid = (lo + hi + 1)/2;
            if(poss(mid) >= k) lo = mid;
            else hi = mid - 1;
      }
      cout << lo << endl;
      FOR(i,0,lo) cout << s[i];
      cout << endl;
      return 0;
}
