/*God is greater than any problem that
u have and u have to not worry because
when u pray and then worry,
the worry nullify your prayer
He is right here, right now !!
*/

#include <bits/stdc++.h>
using namespace std;
#define bitcnt __builtin_popcount
#define ln length()
#define rep(i, n) for(int i = 0; i < n; i++)
#define rrep(i, n) for(int i = n - 1; i >= 0; i--)
#define all(a)  a.begin(),a.end()
#define LL long long
#define limit 1000006
#define sl(n) scanf("%lld", &n)
#define s(n)  scanf("%d", &n)
#define pl(n) printf("%lld", n)
#define pi(n)  printf("%d", n)
#define pn printf("\n")
#define mod 1000000007
typedef vector<LL> row;
typedef vector<row> matrix;

void print(LL *arr, LL n)
{
	rep(i, n) cout << arr[i] << " ";
	cout << endl;
}
int k;
int F[limit + limit];
char str[limit];
bool buildfailure(string s)
{
	int size = s.ln;
	F[0] = F[1] = 0;
	for(int i = 2; i <= size; i++) {
		int j = F[i - 1];
		while(true) {
			if(s[j] == s[i - 1]) {
				F[i] = j + 1;
				break;
			}
			if(j == 0) {
				F[i] = 0;
				break;
			}
			else {
				j = F[j];
			}
		}
	}
	int l = 0;
	for(int i = 0; i < size; i++) {
		if(s[i] == '#') break;
		l++;
	}
	int co = 0;
	for(int i = l + 2; i <= size; i++) {
		if(F[i] == l) co++;
		if(co >= k) return true;
	}
	return false;
}

void solve()
{
	int n;
	s(n);
	scanf("%s", str);
	string s = string(str);
	s(k);
	int l = 0, h = n - 1;
	int ans = 0;
	while(l <= h) {
		int m = l + (h - l) / 2;
		string temp = s.substr(0, m + 1);
		temp += "#";
		temp += s;
		if(buildfailure(temp)) {
			ans = m + 1;
			l = m + 1;
		}
		else {
			h = m - 1;
		}
	}
	pi(ans); pn;
	for(int i = 0; i < ans; i++) {
		printf("%c", s[i]);
	}
	pn;
}

int main()
{
	int t = 1;
	//scanf("%d", &t);
	while(t--) {
		solve();
	}
	return 0;
}
