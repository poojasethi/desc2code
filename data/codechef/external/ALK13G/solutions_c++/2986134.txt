#include <vector>
#include <list>
#include <map>
#include <set>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <algorithm>
#include <functional>
#include <utility>
#include <sstream>
#include <iostream>
#include <cstdio>
#include <cmath>
#include <cstdlib>
#include <cctype>
#include <string>
#include <cstring>
#include <ctime>
#include <string.h>
 
using namespace std;
 
typedef long long LL;
typedef vector<LL> VI;
typedef pair<LL,LL> PII;
typedef map<string, LL> MSI;
typedef vector<VI> VII;

#define pb(x) push_back(x)
#define s(n)	scanf("%d", &n)
#define mp(x,y) make_pair(x,y)
#define all(v) v.begin(),v.end()
#define set(a,val) memset(a,val,sizeof(a))
#define REP(i,a,b) for(LL i=a;i<b;i++)
#define MAX(a,b) (a) > (b) ? (a) : (b)
#define MIN(a,b) (a) < (b) ? (a) : (b)
#define INF (LL)1e9;
#define MOD (LL) (1e9+7)
#define SZ(A) ((LL) A.size())

#ifdef LOCAL
#define trace(a) cerr << #a << " -> " << a << "\t";
#define debug1(a) {trace(a);cerr << endl;}
#define debug2(a,b) {trace(a);trace(b);cerr << endl;}
#else
#define debug1(args...);
#define debug2(args...);
#endif
inline LL ni()
{
 register LL r=0,c;
 for(c=getchar_unlocked();c<=32;c=getchar_unlocked());
 if(c=='-')
  return -ni();
 for(;c>32;r=(r<<1)+(r<<3)+c-'0',c=getchar_unlocked());
 return r;
}
LL minSubArraySum(LL a[], LL size)
{
   LL min_so_far = a[0], i;
   LL curr_min = a[0];
 
   for (i = 1; i < size; i++)
   {
        curr_min = MIN(a[i], curr_min+a[i]);
        min_so_far = MIN(min_so_far, curr_min);
   }
   return min_so_far;
}
int main() {
  #ifdef LOCAL
      freopen("alk13g.txt","r",stdin);
  #endif
  LL t;
  t = ni();
  while(t--) {
    LL l;
    l = ni();
    LL a[111111];
    set(a,0);
    LL sum=0;
    REP(i,0,l) {
      a[i] = ni();
      sum += a[i];
    }
    LL ans = minSubArraySum(a,l);
    printf("%lld\n",sum-2*ans);
  }
  return 0;
}
