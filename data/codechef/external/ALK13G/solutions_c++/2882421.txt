#include <iostream>
#include <vector>
#include <cstdio>

using namespace std;

long long int kadane(vector <int> vv)
{
	long long int sum = 0;
	long long int min_sum = 0;
	long long int min_sum_here = 0;
	int k = 0, st = 0, end, stt;
	for (int i = 0; i < vv.size(); i++) {
		if (vv[i] < 0) {
			k = -1;
			break;
		}
		min_sum = min_sum + vv[i];
	}
	if (k == 0) {
		return(min_sum);
	}
	if (k == -1) {
		min_sum = 0;
		for (int i = 0; i < vv.size(); i++) {
			min_sum_here = vv[i] + min_sum_here;
			if (min_sum_here > 0) {
//				cout << "loop 1"<< endl;;
				min_sum_here = 0;
				st = i + 1;
//				cout << "min_sum_here " << min_sum_here << endl;
			}
			if (min_sum_here < min_sum) {
//				cout << "loop2" << endl;
				min_sum = min_sum_here;
				end = i;
				stt = st;
//				cout << "min_sum " << min_sum << endl;
//				cout << "now start is " << st << endl;;
//				cout << "ended on " << end << endl;
			}
			
		}
//		cout << "value of stt is " << st << " value of end is " << end << endl;
//		cout << "min sum is " << min_sum << endl;
		min_sum = -min_sum;
//		cout << "min sum after - is " << min_sum << endl;
		for (int i = 0; i < vv.size(); i++) {
				if (i < stt || i > end) {
					min_sum = min_sum + vv[i];
				}
		}
		return(min_sum);
	}	
}

int main()
{
	int t, n, d;
	long long int max;
	vector <int> v;
	scanf("%d", &t);
	
	for (int j = 0; j < t; j++) {
		scanf("%d", &n);
		for (int i = 0; i < n; i++) {
			scanf("%d", &d);
			v.push_back(d);		
		}
		max = kadane(v);
		printf("%lld\n", max);
		v.clear();
			
	}
	return 0;
}