#include <bits/stdc++.h>
using namespace std;
string s1 = "";
/*
int longestIncreasingSunsequence(string s)
{
    int n = s.length();
    int L[n+1];

     vector<vector<int> > v(1000);
    L[1]=1;
    v[1].push_back(0);
    L[0] = 1;
    string newstr = "";

    for(int i=1;i<=n;i++){
        L[i] = 1;
        int maxi = INT_MIN;
        int index = -1;
        for(int j=i-1;j>=0;j--){

            if(s[j]<=s[i]){
                if(maxi<L[j]){
                    maxi = L[j];
                    index = j;
                }
            }
        }
       if(maxi!=INT_MIN && index!=-1 ) {
        for(int j=0;j<v[index].size();j++)
            v[i].push_back(v[index][j]);

        L[i] = 1+L[index];
       }
       v[i].push_back(i);
       //cout<<s[i]<<" "<<L[i]<<" ";
    }

    int maxi = INT_MIN;
    int index;
    for(int i=0;i<n;i++){

        if(maxi<L[i]){
            maxi = L[i];
            index = i;
        }
    }

    map<int,bool> m;
    for(int i=0;i<v[index].size();i++){

        m[v[index][i]]=true;
    }

    for(int i=0;i<n;i++)
    {

        if(!  m[i]) s1.push_back( s[i]);
    }
    return maxi;
}


int longestDecreasingSub()
{
   // cout<<s1<<endl;
     int n = s1.length();
    int L[n+1];


    L[1]=1;
    L[0] = 1;



    for(int i=1;i<=n;i++){
        L[i] = 1;
        int maxi = INT_MIN;
        int index = -1;
        for(int j=i-1;j>=0;j--){

            if(s1[j]>=s1[i]){
                if(maxi<L[j]){
                    maxi = L[j];
                    index = j;
                }
            }
        }
       if(maxi!=INT_MIN && index!=-1 ) {

        L[i] = 1+L[index];
       }

       //cout<<s[i]<<" "<<L[i]<<" ";
    }

    int maxi = INT_MIN,index;
    for(int i=0;i<n;i++){
    //cout<<L[i]<<" ";
        if(maxi<L[i]){
            maxi = L[i];
            index = i;
        }
    }


    return maxi;

}
*/
long gcd(long a,long b){
if(b==0) return a;

return gcd(b,a%b);

}

int main()
{
   // cout<<longestIncreasingSunsequence("abc");
  /*  int t;
    cin>>t;
    while(t--){
        string a;
        cin>>a;
        int x = longestIncreasingSunsequence(a);
       // cout<<x<<endl;

        int y = longestDecreasingSub();
       // cout<<y<<endl;
        if(x<0) x=0;
        if(y<0)y=0;
        cout<<x+y<<endl;
        s1 = "";
    }*/



    int t;
    cin>>t;
    while(t--){

        long x1,y1,x2,y2;
        cin>>x1>>y1>>x2>>y2;

        long Dx = abs(x2-x1);
        long Dy = abs(y2-y1);

        if(Dx==0|| Dy==0) {
            cout<<"0\n";
            continue;
        }
        long m = gcd(Dx,Dy);

        long dx = Dx/m;
        long dy = Dy/m;

        long long ans = ((dx-1)+(dy-1)+1)*m;
        cout<<ans<<endl;
    }
}
