#include<cstdio>
#include<algorithm>
int n,m,a,b,c;char s[111][111];
inline void e(){puts("IMPOSSIBLE");std::exit(0);}
int main()
{
    scanf("%d%d%d%d%d",&n,&m,&a,&b,&c);//1X2,2X1,2X2
    //needs n rows ,, 
    if(n%2&&m%2)e();//imagine divide to squares
    if(n%2)a-=m/2;if(m%2)b-=n/2;
    //use 1X2 to cover m col on one row.... similiar for col...
    //reduce scale
    if(a<0||b<0)e();//not enough
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            s[i][j]=(i/2%2==j/2%2)?'a':'b';//binary preassign use square
        //  printf("%c",s[i][j]);  0 
        }
    //  puts("");
    }
    c-=(n/2)*(m/2);//preassume use square
    for(int i=0;i<n-n%2;i+=2)//remembr to use new size for map
        for(int j=0;j<m-m%2;j+=2)if(c<0)
        {
            //每square (2X2)treat
            if(a>1)a-=2,c++,s[i][j]=s[i][j+1]+=2;else//只要能區別size of block then ok
                if(b>1)b-=2,c++,s[i][j]=s[i+1][j]+=2;else e();
        }
    for(int i=0;i<n;i++)
        for(int j=0;j<m;j++)
            printf("%c%s",s[i][j],j==m-1?"\n":"");
    return 0;
}
