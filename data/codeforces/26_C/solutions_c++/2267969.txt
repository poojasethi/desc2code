#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=100010;
const int inf=0x3f3f3f3f;

using namespace std;

int n,m,a,b,c;
char s[110][110];

void dfs(int x,int y,int a,int b,int c)
{
	//cout<<a<<" "<<b<<" "<<c<<" "<<x<<" "<<y<<endl;
	if(x==n+1 && y==m+1) return ;
	if(y==m+1) return dfs(x+2,1,a,b,c);
	if(a>=2)
	{
		s[x][y]=s[x][y+1]='a'+(x+y)%26;
		s[x+1][y]=s[x+1][y+1]='a'+(x+y+1)%26;
		dfs(x,y+2,a-2,b,c);
		return ;
	}
	if(b>=2)
	{
		s[x][y]=s[x+1][y]='a'+(x+y)%26;
		s[x][y+1]=s[x+1][y+1]='a'+(x+y+1)%26;
		dfs(x,y+2,a,b-2,c);
		return ;
	}
	if(c>=1)
	{
		s[x][y]=s[x+1][y]=s[x][y+1]=s[x+1][y+1]='a'+(x+y)%26;
		dfs(x,y+2,a,b,c-1);
	}
	return ;
}

int main()
{
	scanf("%d%d",&n,&m);
	scanf("%d%d%d",&a,&b,&c);
	int tn=n,tm=m;
	if(m*n%2 || n*m>2*a+2*b+4*c) return puts("IMPOSSIBLE"),0;
	if(m%2)
	{
		if(b*2<n || (a/2*4+4*c+(b-n/2)/2*4<(m-1)*n)) return puts("IMPOSSIBLE"),0;
		for(int i=1;i<=n;i+=2)
			s[i][m]=s[i+1][m]='a'+(i+m)%26;
		m--;
		dfs(1,1,a,b-n/2,c);
	}
	else if(n%2)
	{
		if(a*2<m || ((a-m/2)/2*4+b/2*4+c*4<m*(n-1))) return puts("IMPOSSIBLE"),0;
		for(int i=1;i<=m;i+=2)
			s[n][i]=s[n][i+1]='a'+(n+i)%26;
		n--;
		dfs(1,1,a-m/2,b,c);
	}
	else
	{
		if(a/2*4+b/2*4+c*4<m*n) return puts("IMPOSSIBLE"),0;
		dfs(1,1,a,b,c);
	}
	for(int i=1;i<=tn;i++,cout<<endl)
		for(int j=1;j<=tm;j++)
			cout<<s[i][j];
	return 0;
}
