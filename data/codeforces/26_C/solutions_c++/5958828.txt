#include <iostream>
#include<cstring>
#define N 102
using namespace std;

char ans[N][N];

bool us[128];
int rv[] = {1,-1,0,0};
int cv[] = {0,0,1,-1};
char dif(int i,int j, int vi, int vj)
{
	memset(us, 0 ,sizeof us);
	for(int a=i;a<i+vi;++a)
		for(int b=j;b<j+vj;++b)
			for(int d=0;d<4;++d)
				us[ans[a+rv[d]][b+cv[d]]]=1;
	for(int i='a';i<='z';++i)
		if(!us[i])	
			return i;
}
void set(int i, int j, int vi, int vj, char val)
{
	for(int a=i;a<i+vi;++a)
		for(int b=j;b<j+vj;++b)
			ans[a][b] = val;
}
void print(int n)
{
	for(int i=1;i<=n;++i)
		cout << ans[i]+1 << '\n';
}

bool solve_even(int n,int m, int a, int b, int c)
{
	if(a/2+b/2+c < n*m/4) return 0;

	for(int i=1;i<=n;i+=2)
		for(int j=1;j<=m;j+=2)
		{
			if(c)
				set(i,j,2,2,dif(i,j,2,2)), --c;
			else if(b>1)
			{
				set(i,j,2,1,dif(i,j,2,1)), --b;
				set(i,j+1,2,1,dif(i,j+1,2,1)), --b;
			}else 
			{
				set(i,j,1,2,dif(i,j,1,2)), --a;
				set(i+1,j,1,2,dif(i+1,j,1,2)), --a;
			}
		}	
	return 1;
}
int main()
{
	ios::sync_with_stdio(0);
	int n,m,a,b,c; cin >> n >> m >> a >> b >> c;
	if(n%2 && m%2)
	{
		cout << "IMPOSSIBLE\n";
		return 0;
	}
	if(n%2==0 && m%2==0)
	{
		if(solve_even(n,m,a,b,c))
			print(n);
		else
			cout <<"IMPOSSIBLE\n";
		return 0;
	}

	if(n%2==0 && m%2)
	{
		if(b>=n/2 && solve_even(n,m-1,a,b-n/2,c))
		{
			for(int i=1;i<=n;i+=2)
				set(i,m,2,1,dif(i,m,2,1));
			print(n);
		}
		else
			cout <<"IMPOSSIBLE\n";
		return 0;

	}

	if(n%2 && m%2==0)
	{
		if(a>=m/2 && solve_even(n-1,m,a-m/2,b,c))
		{
			for(int i=1;i<=m;i+=2)	
				set(n,i,1,2,dif(n,i,1,2));

			print(n);
		}
		else
			cout <<"IMPOSSIBLE\n";
		return 0;

	}
	return 0;
}
