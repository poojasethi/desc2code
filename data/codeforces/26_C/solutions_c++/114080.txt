#include <iostream>
#include <vector>
using namespace std;

int n, m, a, b, c;

void paint(vector<vector<char> > &bd, int y, int x, int no)
{
  bd[y][x]=(((y/2)+(x/2))%2==0?'a':'c')+no;
}

bool solve(vector<vector<char> > &bd)
{
  if (n*m %2 == 1)
    return false;

  bool rot=false;
  if (m%2==1){
    rot=true;
    swap(n, m);
    swap(a, b);
  }

  bd=vector<vector<char> >(n, vector<char>(m, '.'));
  if (n%2==1){
    for (int i=0; i<m; i+=2){
      a--;
      if (a<0) return false;
      paint(bd, n-1, i, 0);
      paint(bd, n-1, i+1, 0);
    }
  }

  for (int i=0; i+1<n; i+=2){
    for (int j=0; j<m; j+=2){
      if (a>=2){
	paint(bd, i,   j,   0);
	paint(bd, i,   j+1, 0);
	paint(bd, i+1, j,   1);
	paint(bd, i+1, j+1, 1);
	a-=2;
      }
      else if (b>=2){
	paint(bd, i,   j,   0);
	paint(bd, i+1, j,   0);
	paint(bd, i  , j+1, 1);
	paint(bd, i+1, j+1, 1);
	b-=2;
      }
      else if (c>=1){
	paint(bd, i,   j,   0);
	paint(bd, i,   j+1, 0);
	paint(bd, i+1, j,   0);
	paint(bd, i+1, j+1, 0);
	c--;
      }
      else
	return false;
    }
  }

  if (rot){
    vector<vector<char> > nbd(m, vector<char>(n, '.'));
    for (int i=0; i<m; i++)
      for (int j=0; j<n; j++)
	nbd[i][j]=bd[j][i];
    bd.swap(nbd);
  }

  return true;
}

int main()
{
  cin>>n>>m>>a>>b>>c;

  vector<vector<char> > bd;
  if (!solve(bd)){
    cout<<"IMPOSSIBLE"<<endl;
    return 0;
  }

  for (int i=0; i<bd.size(); i++){
    for (int j=0; j<bd[i].size(); j++) cout<<bd[i][j];
    cout<<endl;
  }

  return 0;
}
