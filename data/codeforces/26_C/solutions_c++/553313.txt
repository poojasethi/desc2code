#include <vector>
#include <map>
#include <set>
#include <cmath>
#include <string>
#include <cstring>
#include <iostream>
#include <cstdio>
#include <algorithm>
#include <sstream>
#include <queue>

using namespace std;

char buf[105][105];

int main(){
	int n, m, a, b, c;
	cin >> n >> m >> a >> b >> c;
	if ((n & 1) && (m & 1)){
		puts("IMPOSSIBLE");
		return 0;
	} else if (n & 1) {
		if (a < m/2){
			puts("IMPOSSIBLE");
			return 0;
		} else {
			for (int i=0; i<m/2; i++){
				buf[n-1][2*i] = buf[n-1][2*i+1] = (i&1)?'a' : 'b';
			}
			a -= m/2;
		}
	} else if (m & 1) {
		if (b < n/2){
			puts("IMPOSSIBLE");
			return 0;
		} else {
			for (int i=0; i<n/2; i++){
				buf[2*i][m-1] = buf[2*i+1][m-1] = (i&1)?'a' : 'b';
			}
			b -= n/2;
		}

	}
	if (4*c + (a/2)*4 + (b/2)*4 < 4*(n/2)*(m/2)){
		puts("IMPOSSIBLE");
		return 0;
	} else {
		for (int i=0; i+1<n; i+=2){
			for (int j=0; j+1<m; j+=2){
				if ((i/2 + j/2)&1){
					//cd
					if (c){
						buf[i][j] = buf[i+1][j] = buf[i][j+1] = buf[i+1][j+1] = 'c';
						c--;
					} else if (a > 1){
						buf[i][j] = buf[i][j+1] = 'c';
						buf[i+1][j] = buf[i+1][j+1] = 'd';
						a -= 2;
					} else {
						buf[i][j] = buf[i+1][j] = 'c';
						buf[i][j+1] = buf[i+1][j+1] = 'd';
						b -= 2;
					}
				} else {
					//ef
					if (c){
						buf[i][j] = buf[i+1][j] = buf[i][j+1] = buf[i+1][j+1] = 'e';
						c--;
					} else if (a > 1){
						buf[i][j] = buf[i][j+1] = 'e';
						buf[i+1][j] = buf[i+1][j+1] = 'f';
						a -= 2;
					} else {
						buf[i][j] = buf[i+1][j] = 'e';
						buf[i][j+1] = buf[i+1][j+1] = 'f';
						b -= 2;
					}
				}
			}
		}
	}
	for (int i=0; i<n; i++){
		puts(buf[i]);
	}
	return 0;
}
