#include <iostream>
#include <iomanip>
#include <sstream>
#include <cstdio>
#include <string>
#include <vector>
#include <algorithm>
#include <complex>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <cassert>
#include <climits>
#include <queue>
#include <set>
#include <map>
#include <valarray>
#include <bitset>
#include <stack>
using namespace std;

#define REP(i,n) for(int i=0;i<(int)(n);++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define ALL(c) (c).begin(), (c).end()
typedef long long ll;
typedef pair<int,int> pii;
const int INF = 1<<29;
const double PI = acos(-1);
const double EPS = 1e-8;

char ans[100][100];

bool swapflag;

int h,w,a,b,c;
bool solve() {
  cin >> h >> w>>a>>b>>c;
  if (h*w%2) {
    return 0;
  }
  swapflag = 0;
  if (w%2) {
    swap(h,w);
    swap(a,b);
    swapflag = 1;
  }
  int hh = h;
  if (h%2) {
    for (int i=0; i<w; i+=2) {
      ans[h-1][i] = ans[h-1][i+1] = (i%4==0?'y':'z');
      a--;
    }
    hh--;
  }
  if (a<0) return 0;
  if ((a/2+b/2+c)*4<hh*w) return 0;
  vector<string> v;
  REP(i,a/2) v.push_back("aaee");
  REP(i,b/2) v.push_back("imim");
  REP(i,c)  v.push_back("qqqq");
  int ct = 0;
  for (int y=0; y<hh; y+=2) {
    for (int x=0;x<w; x+=2) {
      int offset = y/2%2*2 + x/2%2;
      int cnt = 0;
      for (int yy=y; yy<y+2; ++yy) {
        for (int xx=x; xx<x+2; ++xx) {
          ans[yy][xx] = v[ct][cnt] + offset;
          ++cnt;
        }
      }
      ++ct;
    }
  }
  return 1;
}

int main() {
  if (!solve()) {
    cout << "IMPOSSIBLE" << endl;
  } else {
    if (swapflag) {
      REP(j,w) {
        REP(i,h)cout << ans[i][j];
        cout << endl;
      }
    } else {
      REP(i,h) {
        REP(j,w)cout<< ans[i][j];
        cout<<endl;
      }
    }
  }
}
