#include<stdio.h>

int main(int agrc, char* argv[]){
  int N, M, a, b, c;
  scanf("%d %d %d %d %d", &N, &M, &a, &b, &c);
  if((M&1)==1 && (N&1)==1){
    printf("IMPOSSIBLE\n");
    return 0;
  }
  char sol[100*100];
  int last = M*N-1;
  if((N&1)==1){
    a -= M/2;
    for(int i=0; i<M/2; i++)
      if((i&1)==0){
        sol[last-2*i] = 'a';
        sol[last-2*i-1] = 'a';
      }else{
        sol[last-2*i] = 'b';
        sol[last-2*i-1] = 'b';
      }
  }
  if((M&1)==1){
    b -= N/2;
    for(int i=0; i<N/2; i++)
      if((i&1)==0){
        sol[last-2*i*M] = 'a';
        sol[last-(2*i+1)*M] = 'a';
      }else{
        sol[last-2*i*M] = 'b';
        sol[last-(2*i+1)*M] = 'b';
      }
  }
  char cs[8] = {'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j'};
  for(int y=0;y<N/2; y++)
    for(int x=0;x<M/2; x++){
      int ofs = 2*(2 * (x&1) + (y&1));
      if(a>=2){
        sol[2*x+2*M*y] = cs[ofs];
        sol[2*x+1+2*M*y] = cs[ofs];
        sol[2*x+M*(2*y+1)] = cs[ofs+1];
        sol[2*x+1+M*(2*y+1)] = cs[ofs+1];
        a -= 2;
      }else{
        if(b>=2){
          sol[2*x+2*M*y] = cs[ofs];
          sol[2*x+1+2*M*y] = cs[ofs+1];
          sol[2*x+M*(2*y+1)] = cs[ofs];
          sol[2*x+1+M*(2*y+1)] = cs[ofs+1];
          b -= 2;
        }else{
          sol[2*x+2*M*y] = cs[ofs];
          sol[2*x+1+2*M*y] = cs[ofs];
          sol[2*x+M*(2*y+1)] = cs[ofs];
          sol[2*x+1+M*(2*y+1)] = cs[ofs];
          c--;
        }
      }   
    }
  if(a<0 || b<0 || c<0){
    printf("IMPOSSIBLE\n");
    return 0;
  }
  for(int y=0; y<N; y++){
    for(int x=0; x<M; x++)
      printf("%c", sol[x+M*y]);
    printf("\n");
  }
  return 0;
}
