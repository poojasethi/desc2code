#include <algorithm>
#include <bitset>
#include <cassert>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <iterator>
#include <limits>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <vector>
using namespace std;


/* Prewritten code begins */
#define REP(i,n)    for(int i=0; i<(n); ++i)
/* Prewritten code ends */

#define END { cout << "IMPOSSIBLE" << endl; return 0; }
char s[111][111];
int main() {
	int n, m, a, b, c, la, lb;
	cin >> n >> m >> a >> b >> c; la = a; lb = b;
	if(((n*m)&1)) END
	if(n&1) {
		if(a < m/2) END
		la = a - m/2;
	}
	if(m&1) {
		if(b < n/2) END
		lb = b - n/2;
	}
	if(c+la/2+lb/2 < (n/2)*(m/2)) END
	REP(i,n) s[i][m] = 0;
	if(n&1) {
		char sta = 'z'-1;
		REP(i,m) if(i%4<2) s[n-1][i] = sta; else s[n-1][i] = sta^1;
	}
	if(m&1) {
		char sta = 'z'-1;
		REP(i,n) if(i%4<2) s[i][m-1] = sta; else s[i][m-1] = sta^1;
	}
	REP(i,n/2) REP(j,m/2) {
		char t = 'a'+(i&1)+(j&1);
		char nx = 'g'+(i&1)+(j&1);
		if(c) {
			c--;
			REP(ii,2) REP(jj,2) s[2*i+ii][2*j+jj] = t;
		} else if(la >= 2) {
			la -= 2;
			REP(ii,2) s[2*i][2*j+ii] = t;
			REP(ii,2) s[2*i+1][2*j+ii] = nx;
		} else if(lb >= 2) {
			lb -= 2;
			REP(ii,2) s[2*i+ii][2*j] = t;
			REP(ii,2) s[2*i+ii][2*j+1] = nx;
		}
	}
	REP(i,n) cout << s[i] << endl;
	return 0;
}
