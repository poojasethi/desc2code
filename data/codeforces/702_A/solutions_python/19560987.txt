# -*- coding: utf-8 -*-

#!/usr/bin/env python



n = int(raw_input())
numbers = map(int, raw_input().split(" "))
ans = 1
count = 1
for i in xrange(n):
	if i + 1 <= n - 1:
		if numbers[i] < numbers[i+1]:
			count += 1
		else:
			if count > ans:
				ans = count
			count = 1
if count > ans:
	ans = count
print ans


# def binary_search(l,x,size):
# 	i = 0
# 	f = size - 1
# 	while True:
# 		meio = (i+f)/2
# 		if x >= l[meio][0] and x <= l[meio][1]:
# 			return meio + 1
# 		elif i > f:
# 			break
# 		elif l[meio][1] < x:
# 			i = meio + 1
# 		elif l[meio][0] > x:
# 			f = meio - 1
# 	return -1

# m = []

# size = int(raw_input())
# x = [int(h) for h in raw_input().split(" ")]
# worms_n = int(raw_input())
# worms = [int(g) for g in raw_input().split(" ")]
# worms.sort()

# z = []
# soma = sum(x)
# for t in xrange(1, soma + 1):
# 	z.append(t)

# for i in xrange(len(x)):
# 	if i == 0:
# 		m.append([z[0],z[x[i] - 1]])
# 	else:
# 		m.append([ z[m[i-1][1]] , z[m[i-1][1] + x[i] - 1]])

# # print m
# for i in worms:
# 	print (binary_search(m, i, size)) 
