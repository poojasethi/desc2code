import re

funcs={}
vars={}

n=int(raw_input())
for i in xrange(n):
    s=raw_input().strip()
    p=re.compile(r"^void\s+(\w+)\s*\((.*)\)$")
    m=p.match(s)
    func=m.group(1)
    vs=[x.strip() for x in m.group(2).split(',')]
    if not funcs.has_key(func):
        funcs[func]=[]
    funcs[func].append(vs)
    
m=int(raw_input())
for i in xrange(m):
    s=raw_input().strip()
    p=re.compile(r"^\s*(\w+)\s*(\w+)\s*$")
    m=p.match(s)
    vars[m.group(2)]=m.group(1)
    
k=int(raw_input())
for i in xrange(k):
    s=raw_input().strip()
    p=re.compile(r"^\s*(\w+)\s*\((.*)\)$")
    m=p.match(s)
    func=m.group(1)
    vs=[x.strip() for x in m.group(2).split(',')]
    if not funcs.has_key(func):
        print 0
    else:
        l=funcs[func]
        c=0
        for ll in l:
            if len(ll)==len(vs):
                f=True
                for j in xrange(len(vs)):
                    if ll[j]!=vars[vs[j]] and ll[j]!='T':
                        f=False
                        break
                if f: c+=1
        print c
                
                
                
                