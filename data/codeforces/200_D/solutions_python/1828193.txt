x = ["double","int","string","T"]
Vars = {}
funcs = {}

def check(thing,par):
    for i in range(len(thing)):
        if thing[i] != 3 and thing[i] != par[i]: return False
    return True

#data = open("P4.txt")
#n = int(data.readline())
n = int(raw_input())
for _ in range(n):
    #line = data.readline().strip()
    line = raw_input().strip()
    i = line.find(" ")
    j = line.find("(")
    k = line.find(")")
    name = line[i:j].strip()
    
    par = line[j+1:k].split(",")
    for i in range(len(par)):
        par[i] = par[i].strip()
        par[i] = x.index(par[i])
    
    if funcs.has_key(name):
        funcs[name][len(par)].append(par)
    else:
        funcs[name] = [[] for _ in range(6)]
        funcs[name][len(par)].append(par)     
#print funcs

#n = int(data.readline())
n = int(raw_input())
for _ in range(n):
    #Type,name = data.readline().split()
    Type,name = raw_input().split()
    Vars[name] = x.index(Type)
#print Vars

#n = int(data.readline())
n = int(raw_input())
for _ in range(n):
    #line = data.readline().strip()
    line = raw_input().strip()
    j = line.find("(")
    k = line.find(")")
    name = line[:j].strip()
    
    par = line[j+1:k].split(",")
    for i in range(len(par)):
        par[i] = par[i].strip()
        par[i] = Vars[par[i]]
    #print name,par
    
    ans = 0
    if funcs.has_key(name):
        for thing in funcs[name][len(par)]:
            if check(thing,par):
                ans += 1
        print ans
    else:
        print 0