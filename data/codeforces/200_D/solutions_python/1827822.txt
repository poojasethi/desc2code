from sys import stdin

in_lines = stdin.readlines()

def int_values(line) :
    return map( int, line.split(' ') )

lines = map( lambda x:x.strip(), in_lines  )

n = int (lines[0])
f = map( lambda x: x.replace(' ', '').replace('void', '').replace(')', ''), lines[1:n+1] )

lines = lines[n+1:]

types = { 'T' : 0 }
typesn = 1
fnames = {}
fnamesn = 1

funcs = set()

for i in f :
    name, params = i.split('(')
    params = params.split(',')
    paramsi = [-1, -1, -1, -1, -1]
    fi = None
    try :
        fi = fnames[name]
    except KeyError :
        
        fi = fnamesn
        fnames[name] = fi
        fnamesn += 1
    for p, i in zip(params, range(len(params))) :
        pi = None
        try :
            pi = types[p]
        except KeyError :
            pi = typesn
            types[p] = pi
            typesn += 1
        paramsi[i] = pi
    paramsi = (paramsi[0], paramsi[1], paramsi[2], paramsi[3], paramsi[4])
    funcs.add( (fi, paramsi) )
    #print (fi, paramsi)

m = int(lines[0])
vs = map(lambda x: x.strip(), lines[1:m+1])
#print m, vs

vt = {}
for v in vs :
    v = v.split(' ')
    p, va = v[0], v[-1]
    try :
        vt[va] = types[p]
    except KeyError :
        vt[va] = 0
    #print va, vt[va]

lines = lines[m+1:]
k = int (lines[0])
r = map( lambda x: x.replace(' ', '').replace(')', ''), lines[1:k+1] )
#print k, r

                         
def tempi(p, x) :
    if x == 1 :
        return p
    if p > 0 :
        return 0
    else :
        return None
 
def temp(paramsi, x) :
    t = map(tempi, paramsi, x)
    return (t[0], t[1], t[2], t[3], t[4])

for f in r :
    #print f
    name, params = f.split('(')
    params = params.split(',')
    paramsi = [-1, -1, -1, -1, -1]
    fi = None
    try :
        fi = fnames[name]
    except KeyError :
        print 0
        continue

    for p, i in zip(params, range(len(params))) :
        pi = None
        try :
            pi = vt[p]
        except KeyError :
            pi = 0
        paramsi[i] = pi
    paramsi = (paramsi[0], paramsi[1], paramsi[2], paramsi[3], paramsi[4])

    #print fi, paramsi

    r = 0
    #print (fi, paramsi) in funcs 
    for x1 in range(2) :
        for x2 in range(2) :
            for x3 in range(2) :
                for x4 in range(2) :
                    for x5 in range(2) :      
                        ttt = temp( paramsi, [x1, x2, x3, x4, x5] )
                        if ttt[0] is None or ttt[1] is None or ttt[2] is None or ttt[3] is None or ttt[4] is None :
                            continue
                        #print ttt
                        r += (fi, ttt) in funcs
    print r
