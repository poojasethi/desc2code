#include <string>
#include <iostream>
#include <cstdio>
#include <vector>
#include <map>
#include <algorithm>
#include <sstream>

using namespace std;

map<string,vector<vector<int> > > funcs;
map<string,int> val;
int n, m, k;

int cal(const string &s) {
	if(s == "int") return 1;
	else if(s == "double") return 2;
	else if(s == "string") return 3;
	else if (s == "T") return 0;
}
void Replace(string &s) {
	replace(s.begin(), s.end(), '(', ' ');
	replace(s.begin(), s.end(), ')', ' ');
	replace(s.begin(), s.end(), ',', ' ');
}

void solve_n(string &s) {
	Replace(s);
	istringstream sin(s);
	sin >> s;
	string name; 
	sin >> name;
	vector<int> func;
	while (sin >> s) func.push_back(cal(s));
	funcs[name].push_back(func);
}

void solve_m(const string &s) {
	istringstream sin(s);
	string typ, name;
	sin >> typ >> name;
	val[name] = cal(typ);
}

void solve_k(string &s) {
	Replace(s);
	istringstream sin(s);
	string name;
	sin >> name;
	vector<int> func;
	while (sin >> s) func.push_back(val[s]);
	vector<vector<int> > &v = funcs[name];
	int cnt = 0;
	/*
	for (int i = 0; i < v.size(); ++i) {
		for (int j = 0; j < v[i].size(); ++j) {
			cout << v[i][j] << " ";
		} cout << endl;
	}
	puts("hres");
	for (int i = 0; i < func.size(); ++i) cout << func[i] << " "; puts("");
	*/
	for (int i = 0; i < (int)v.size(); ++i) {
		if (v[i].size() != func.size()) continue;
		bool update = true;
		for (int j = 0; j < func.size(); ++j) {
			if (v[i][j] == 0 || v[i][j] == func[j]) continue;
			else {
				update = false;
				break;
			}
		}
		if (update) ++cnt;
	}
	printf("%d\n", cnt);
}

int main() {
	scanf("%d", &n);
	string s;
	getline(cin, s);
	for (int i = 0; i < n; ++i) {
		getline(cin, s);
		solve_n(s);
	}
	scanf("%d", &m);
	getline(cin, s);
	for (int i = 0; i < m; ++i) {
		getline(cin, s);
		solve_m(s);
	}
	scanf("%d", &k);
	getline(cin, s);
	for (int i = 0; i < k; ++i) {
		getline(cin, s);
		solve_k(s);
	}
	return 0;
}
				   	 	  		    	  		   	