#include<cstdio>
#include<algorithm>
#include<string>
#include<map>

using namespace std;
const int MAX = 1100;

struct Tmp{
	string name, tipo[6];
	int wv;
};

int n, m, h;
Tmp v[MAX];
map <string, string> mapa;

int nol(char c){
	if(c == 'T') return 1;
	if('a' <= c && c <= 'z') return 1;
	if('0' <= c && c <= '9') return 1;
	return 0;
}

string von(string x, int pos){
	string s = "";
	for(int i=pos;i<x.size();i++) s += x[i];
	return s;
}

string getline(){
	string s = "";
	char c;
	while(scanf("%c", &c) == 1 && c != '\n')
		if(c != ' ') s += c;
	return s;
}

void getsave(int wo){
	int i;
	string id = "", p, s = getline();

	for(i=4;nol(s[i]);i++) id += s[i];
	v[wo].name = id;
	v[wo].wv = 0;

	while(i < s.size() - 1){
		for(i++, p="";nol(s[i]);i++) p += s[i];
		v[wo].tipo[v[wo].wv++] = p;
	}

}

void getsavevar(){
	string s = getline();
	if(s[0] == 'i') mapa[von(s, 3)] = "int";
	if(s[0] == 's') mapa[von(s, 6)] = "string";
	if(s[0] == 'd') mapa[von(s, 6)] = "double";
}

void getmatch(){
	int i, qtd = 0, ans = 0;
	bool emp;

	string id = "", p[6], s = getline();
	for(i=0;nol(s[i]);i++) id += s[i];
	while(i < s.size() - 1){
		for(i++, p[qtd]="";nol(s[i]);i++) p[qtd]+=s[i];
		qtd++;
	}

	for(i=0;i<n;i++){
		if(v[i].name != id) continue;
		if(v[i].wv != qtd) continue;
		emp = true;
		for(int j=0;j<qtd;j++)
			if(v[i].tipo[j] != "T" && (v[i].tipo[j] != mapa[p[j]])) emp = false;
		if(emp) ans++;
	}
	printf("%d\n", ans);
}

int main(){
	mapa.clear();
	scanf(" %d ", &n);
	for(int i=0;i<n;i++) getsave(i);
	scanf(" %d ", &m);
	for(int i=0;i<m;i++) getsavevar();
	scanf(" %d ", &h);
	for(int i=0;i<h;i++) getmatch();
	return 0;
}
