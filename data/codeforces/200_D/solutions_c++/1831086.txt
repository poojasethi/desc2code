#include <iostream>
#include <map>
#include <vector>
#include <string>
#include <utility>
#include <cstdio>
using namespace std;
pair <string,vector<string> > func[1000];
map<string, string> var;

string remove_spaces(string s)
{
     string res = "";
     for (int i = 0; i < s.length(); ++i)
	  if (s[i] != ' ')
	       res += s[i];
     return res;
}

pair<string, vector<string> > read_func()
{
     string nm,temp; vector<string> par;
     getline(cin,nm,'('); getline(cin,temp);
     nm = remove_spaces(nm); temp = remove_spaces(temp);
     int cur=0;
     for (int i = 0; i < temp.length(); ++i)
	  if (temp[i] == ')' || temp[i] == ',') { par.push_back(temp.substr(cur,i - cur)); cur = i + 1; }
     return make_pair(nm,par);
}

int main()
{
     int n;
     cin >> n; getchar();
     for (int i = 0; i < n; ++i)
	  {
	       string s;
	       getline(cin, s, ' ');
	       while (s != "void")
		    getline(cin, s, ' ');
	       func[i] = read_func();
	  }
     int m;
     cin >> m; getchar();
     for (int i = 0; i < m; ++i)
	  {
	       string type, name;
	       string s;
	       getline(cin, s, ' ');
	       while (s.length() == 0)
		    getline(cin, s, ' ');
	       type = s;
	       getline(cin, s);
	       name = remove_spaces(s);
	       var.insert(make_pair(name, type));
	  }
     int k;
     cin >> k; getchar();
     for (int i = 0; i < k; ++i)
	  {
	       pair<string, vector<string> > cur = read_func();
	       int ans = 0;
	       for (int i = 0; i < n; ++i)
		    {
			 if (cur.first != func[i].first || cur.second.size() != func[i].second.size())
			      continue;
			 bool yes = true;
			 for (int j = 0; j < cur.second.size(); ++j)
			      if (func[i].second[j] != "T" && func[i].second[j] != var[cur.second[j]])
				   {
					yes = false;
					break;
				   }
			 if (yes)
			      ++ans;
		    }
	       cout << ans << endl;
	  }
}
