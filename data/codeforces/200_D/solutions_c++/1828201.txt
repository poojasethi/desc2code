#pragma comment(linker, "/STACK:100000000")
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <iostream>
#include <vector>
#include <string>
#include <sstream>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <algorithm>
using namespace std;

#define eps 1e-8

int N, M, K, i, j, k;
char a[200];
set < vector <string> > s;
set < vector <string> > :: iterator it;
map <string, string> m;
string str, str2;

int main()
{
    scanf("%d", &N);
    gets(a);
    for(i = 0; i < N; i++)
    {
        gets(a);
        for(j = 0; a[j] != 'd'; j++)
            a[j] = ' ';
        a[j] = ' ';
        for(j = 0; a[j]; j++)
            if(a[j] == ',' || a[j] == '(' || a[j] == ')')
                a[j] = ' ';
        stringstream in(a);
        vector <string> v;
        while(in >> str)
            v.push_back(str);
        s.insert(v);
    }

    scanf("%d", &M);
    gets(a);
    for(i = 0; i < M; i++)
    {
        cin >> str >> str2;
        m[str2] = str;
    }

    scanf("%d", &K);
    gets(a);
    while(K--)
    {
        int cnt = 0;
        gets(a);
        for(j = 0; a[j]; j++)
            if(a[j] == ',' || a[j] == '(' || a[j] == ')')
                a[j] = ' ';
        stringstream in(a);
        vector <string> v, p;
        while(in >> str)
            v.push_back(str);
        p.push_back(v[0]);
        it = s.lower_bound(p);
        while(it != s.end())
        {
            p = *it;
            if(p[0] != v[0])
                break;
            if(p.size() == v.size())
            {
                for(i = 1; i < v.size(); i++)
                    if(!(p[i] == "T" || p[i] == m[v[i]]))
                        break;
                if(i == v.size())
                    cnt++;
            }
            it++;
        }
        printf("%d\n", cnt);
    }
    return 0;
}
