#include <iostream>
#include <vector>
#include <map>
#include <string>
#include <sstream>

using namespace std;

vector<string> separa(string s)
{
  string nexts;
  for (int i=0;i<int(s.size());i++)
    if (s[i]=='(' or s[i]==')' or s[i]==',')
      nexts+=" "+string(1,s[i])+" ";
    else
      nexts+=string(1,s[i]);
  s=nexts;
  istringstream ci(s);
  vector<string> r;
  string p;
  while (ci>>p)
    r.push_back(p);
  return r;
}

vector<pair<string,vector<string> > > procedure;
map<string,string> tipo;

int suitable(int iprocedure,string &nombre,vector<string> &parametros)
{
  if (nombre!=procedure[iprocedure].first) return 0;
  vector<string> &formales=procedure[iprocedure].second;
  if (int(formales.size())!=int(parametros.size())) return 0;
  for (int i=0;i<int(formales.size());i++)
    if (formales[i]!="T" and formales[i]!=tipo[parametros[i]])
      return 0;
  return 1;
}

int main()
{
  int n;
  cin>>n;
  string aux;
  getline(cin,aux);
  //cout<<n<<endl;
  for (int i=0;i<n;i++) {
    string s;
    getline(cin,s);
    //cout<<s<<endl;
    vector<string> v=separa(s);
    string nombre=v[1];
    vector<string> parametros;
    for (int i=3;i<int(v.size());i+=2)
      parametros.push_back(v[i]);
    procedure.push_back(pair<string,vector<string> > (nombre,parametros));
  }
  int m;
  cin>>m;
  //cout<<m<<endl;
  for (int i=0;i<m;i++) {
    string t,s;
    cin>>t>>s;
    tipo[s]=t;
  }
  int k;
  cin>>k;
  //cout<<k<<endl;
  getline(cin,aux);
  for (int i=0;i<k;i++) {
    string s;
    getline(cin,s);
    //cout<<s<<endl;
    vector<string> v=separa(s);
    string nombre=v[0];
    vector<string> parametros;
    for (int i=2;i<int(v.size());i+=2)
      parametros.push_back(v[i]);
    int amount=0;
    for (int j=0;j<int(procedure.size());j++)
      amount+=suitable(j,nombre,parametros);
    cout<<amount<<endl;
  }
}
