#include<iostream>
#include<sstream>
#include<algorithm>
#include<set>
#include<map>
#include<queue>
#include<complex>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cassert>
using namespace std;

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define each(i,c) for(__typeof(c.begin()) i=c.begin();i!=c.end();i++)
#define pb push_back
#define mp make_pair
#define all(c) c.begin(),c.end()
#define dbg(x) cerr<<__LINE__<<": "<<#x<<" = "<<(x)<<endl

typedef long long ll;
typedef vector<int> vi;
typedef pair<int,int> pi;
const int inf=(int)1e9;
const double EPS=1e-9, INF=1e12;

int n, m, l;

int main(){
	string in, name;
	map<string, string> type;
	
	cin >> n;
	getline(cin, in);
	
	vector<pair<string, vector<string> > > v;
	rep(i, n){
		getline(cin, in);
		each(j, in) if(*j == '(' || *j == ')' || *j == ',') *j = ' ';
		stringstream ss(in);
		vector<string> t;
		
		ss >> in; ss >> name;
		
		while(ss >> in) t.pb(in);
		v.pb(mp(name, t));
	}
	
	cin >> m;
	rep(i, m){
		cin >> in >> name;
		type[name] = in;
	}
	cin >> l;
	getline(cin, in);
	
	rep(i, l){
		getline(cin, in);
		each(j, in) if(*j == '(' || *j == ')' || *j == ',') *j = ' ';
		
		stringstream ss(in);
		vector<string> t;
		string T;
		int cnt = 0;
		
		ss >> name;
		while(ss >> in) t.pb(in);
		
		rep(j, n) if(v[j].first == name && v[j].second.size() == t.size()){
			bool ok = 1;
			rep(k, v[j].second.size()){
				if(v[j].second[k] == "T"){
					//if(T != "" && type[t[k]] != T) ok = 0;
					T = type[t[k]];
				}
				else if(v[j].second[k] != type[t[k]]) ok = 0;
			}
			if(ok) cnt++;
		}
		cout << cnt << endl;
	}
	
	return 0;
}
