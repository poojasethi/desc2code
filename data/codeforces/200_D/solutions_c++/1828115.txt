#include <iostream>
#include <sstream>
#include <string>
#include <vector>
#include <deque>
#include <queue>
#include <set>
#include <map>
#include <algorithm>
#include <functional>
#include <utility>
#include <cmath>
#include <cstdlib>
#include <ctime>
#include <cstdio>

using namespace std;

#define REP(i,n) for((i)=0;(i)<(int)(n);(i)++)
#define foreach(c,itr) for(__typeof((c).begin()) itr=(c).begin();itr!=(c).end();itr++)

char buf[110];

string input(void){
    gets(buf);
    string s = buf;
    return s;
}

int input_int(void){
    string s = input();
    return atoi(s.c_str());
}

vector <string> parsed_input(void){
    string s = input();
    int i;
    REP(i,s.length()) if(s[i] == '(' || s[i] == ')' || s[i] == ',') s[i] = ' ';
    istringstream ss(s);
    vector <string> ans;
    while(ss >> s) ans.push_back(s);
    return ans;
}

string name[1010];
vector <string> types[1010];
map <string, string> mp;

bool check(int id, vector <string> &v){
    if(v.size() != types[id].size() + 1) return false;
    if(name[id] != v[0]) return false;
    
    int i;
    REP(i,types[id].size()) if(types[id][i] != "T" && mp[v[i+1]] != types[id][i]) return false;
    return true;
}

int main(void){
    int N,V,Q,i,j;
    
    N = input_int();
    REP(i,N){
        vector <string> v = parsed_input();
        name[i] = v[1];
        for(j=2;j<v.size();j++) types[i].push_back(v[j]);
    }
    
    V = input_int();
    REP(i,V){
        vector <string> v = parsed_input();
        mp[v[1]] = v[0];
    }
    
    Q = input_int();
    REP(i,Q){
        vector <string> v = parsed_input();
        int ans = 0;
        REP(j,N) if(check(j, v)) ans++;
        cout << ans << endl;
    }
    
    return 0;
}
