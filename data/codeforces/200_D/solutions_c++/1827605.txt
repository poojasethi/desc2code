#include <iostream>
#include <cstdio>
#include <string>
#include <map>
#include <algorithm>
#include <sstream>
#include <vector>

using namespace std;
#define FOR(i,n) for (int i=0;i<(n);i++)

map <string, string> vt;

struct Func {
  string name;
  vector <string> params;
  bool match(vector <string> p) {
	if (p.size()!=params.size()) return 0;
	int m=p.size();
	FOR (i,m) {
	  if (params[i]=="T") continue;
	  string t=vt[p[i]];
	  if (t!=params[i]) return 0;
	}
	return 1;
  }
};
vector <Func> funcs;

int main () {
  string line;
  getline(cin, line);
  int nfunc=atoi(line.c_str());
  FOR (i, nfunc) {
	Func f;
	getline(cin, line);
	FOR (j, line.size()) if (line[j]=='(' || line[j]==')' || line[j]==',') line[j]=' ';
	istringstream is(line);
	string s;
	is>>s;
	is>>f.name;
	while (is>>s) f.params.push_back(s);
	
	funcs.push_back(f);
  }

  getline(cin, line);
  int nvar=atoi(line.c_str());
  FOR (i,nvar) {
	getline(cin,line);
	istringstream is(line);
	string v,t;
	is>>t>>v;
	vt[v]=t;	
  }

  getline(cin, line);
  int nq=atoi(line.c_str());
  FOR (i,nq) {
	getline(cin, line);
	FOR (j, line.size()) if (line[j]=='(' || line[j]==')' || line[j]==',') line[j]=' ';
	istringstream is(line);

	string name;
	is>>name;
	vector <string> p;
	string s;
	while (is>>s) {
	  p.push_back(s);
	  //cerr<<s<<endl;
	}
	int cnt=0;
	FOR (j,funcs.size()) if (funcs[j].name==name && funcs[j].match(p)) cnt++;
	cout<<cnt<<endl;
  }

  return 0;
}
