#include <iostream>
#include <string>
#include <algorithm>
#include <vector>
#include <set>
#include <cmath>
#include <iomanip>
#include <map>
using namespace std;



map <string,string> Var;

struct func{
    string name;
    vector<string> types;
    
    bool operator== (const func &a) const{
       
        if( name == a.name ){
            for(int i=0;i<types.size();i++){
                if(types[i] != Var[a.types[i]] && types[i]!="T") return false;
            }
            return true;
        }
        return false;
    };
};

int parse(func &a, string &u){
    string s;
    for(int i=0;i<u.length();i++){
        if(u[i]!=' ') {s += u[i];}
    }
    
    int count = 0, j = 0; string res;
    while(s[j]!='('){
        res+=s[j];
        j++;
    }
    j++;
    a.name = res;
    res = "";
    bool ok = true;
    while(ok){
        while(s[j]!=',' && s[j]!=')'){
            res+=s[j];
            
            j++;
        }
        if(s[j]==')') ok = false;
        j++;
        count++;
        a.types.push_back(res);
        res="";
    }
    return count;
}

string hh;

int main(){

    int n,m,k;
    cin >> n;
    vector< vector< func > > A(6,vector<func> ());
    for(int i=0;i<n;i++){
        string t;
        cin >> t;
        getline(cin,t);
        func temp;
        int d = parse(temp,t);
        A[d].push_back(temp);
    }
    cin >> m;
    for(int i=0;i<m;i++){
        string kkk,lll;
        cin >> kkk >> lll;
        Var[lll] = kkk;
    }
    cin >> k; getline(cin,hh);
    for(int i=0;i<k;i++){
        string t;
        getline(cin,t);
        func temp;
        int d = parse(temp,t);
        int ans = 0;
        for(int j = 0; j<A[d].size();j++){
            if(A[d][j]==(temp)) ans++;
        }
        cout << ans << endl;
        
    }

    return 0;
}
