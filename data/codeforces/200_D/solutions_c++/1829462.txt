#include <iostream>
#include <cstdio>
#include <cstring>
#include <vector>
#include <map>
#include <algorithm>
using namespace std;

int N, M, K;
map<string, int> type;
char str[20];
char s1[20], s2[20];

int vtype(char c)
{
	if (c=='i') return 1;
	else if (c=='d') return 2;
	else if (c=='s') return 3;
	else return 0;
}

inline bool ch(char c)
{
	return (c>='a'&&c<='z')||(c>='0'&&c<='9')||(c=='T');
}

int get(char *s)
{
	char c;
	int i=0;
	while (scanf("%c", &c), !ch(c))
		if (c==')') return 2;
	do {s[i++] = c; scanf("%c", &c); } while (ch(c));
	s[i] = 0;
	if (c==')') return 1;
	return 0;
}

struct sproc
{
	char name[20];
	vector<int> var;
	void init() {var.clear();}
	void read()
	{
		int sta;
		get(str);
		get(name);
		while(!(sta=get(str))) var.push_back(vtype(str[0]));
		if (sta==1) var.push_back(vtype(str[0]));
		gets(str);
	}
};
sproc proc[1010];
char name[20];
vector<int> var;

int main()
{
	int i, j, k;
	cin>>N;
	for (i = 0; i < N; ++i)
		proc[i].read();
	cin>>M;
	for (i = 0; i < M; ++i)
	{
		scanf("%s%s", s1, s2);
		type[s2] = vtype(s1[0]);
	}
	cin>>K;
	for (i = 0; i < K; ++i)
	{
		var.clear();
		get(name);
		int sta, ans=0;
		while (!(sta=get(str))) var.push_back(type[str]);
		if (sta==1) var.push_back(type[str]);
		gets(str);
		for (j = 0; j < N; ++j)
		{
			if (strcmp(proc[j].name, name)) continue;
			if (proc[j].var.size() != var.size()) continue;
			for (k = 0; k < var.size(); ++k)
				if (proc[j].var[k] && proc[j].var[k]!=var[k]) break;
			if (k==var.size()) ++ans;
		}
		cout<<ans<<endl;
	}
	return 0;
}
