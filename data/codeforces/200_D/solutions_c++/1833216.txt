#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <vector>
#include <string>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <queue>
#include <set>
#include <map>
#include <stack>
#include <sstream>

#define mp make_pair

using namespace std;

typedef long long ll;
typedef long double ld;

int n, m, k;

vector<vector<string> > func;
map<string, string> type;

vector<string> getFunc(string s, int skip=0) {
    string cur="";
    vector<string> res;
    for(int i=0; i<s.size(); ++i) {
        if (islower(s[i]) || isupper(s[i]) || isdigit(s[i])) {
            cur += s[i];
        } else {
            if (cur.size() > 0) {
                if (skip>0) {
                    skip--;
                    cur = "";
                    continue;
                }
                res.push_back(cur);
                cur = "";
            }
        }
    }
    return res;
}

int check(vector<string> call) {
    int res=0;
    for(int i=0; i<n; ++i) {
        if (call.size() != func[i].size() || call[0] != func[i][0]) continue;
        int j;
        for(j=1; j<call.size(); ++j) {
            string t1 = type[call[j]];
            if (func[i][j] != "T" && t1 != func[i][j]) break;
        }
        if (j == call.size()) ++res;
    }
    return res;
}

int main() {
    int i, j;
    cin>>n;
    string s;
    getline(cin, s);
    func.clear();
    for(i=0; i<n; ++i) {
        getline(cin, s);
        func.push_back(getFunc(s, 1));
    }
    cin>>m;
    for(i=0; i<m; ++i) {
        string t1, t2;
        cin>>t1>>t2;
        type[t2] = t1;
    }
    cin>>k;
    getline(cin, s);
    for(i=0; i<k; ++i) {
        getline(cin, s);
        cout<<check(getFunc(s, 0))<<endl;
    }
    return 0;
}
