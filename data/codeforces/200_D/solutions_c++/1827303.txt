#include <cstdio>
#include <vector>
#include <string>
#include <map>
#include <cstring>

using namespace std;

struct Proc
{
	string name;
	int t;
	vector<string> pars;
};

vector<Proc> procs;
map<string, string> vars;

void getProc()
{
	Proc proc;

	char aux[1000];
	scanf("%*s"); // void
	scanf(" %[0-9a-z] ", aux); // name
	proc.name = aux;
	proc.t = 0;
	//printf("proc name = %s\n", aux);
	while (1)
	{
		scanf(" %[^0-9a-zT] ", aux);
		if (aux[0] == ')') break;
		scanf(" %[0-9a-zT] ", aux);
		proc.t++;
		proc.pars.push_back(string(aux));
		//printf("proc par = %s\n", aux);
	}
	//printf("proc ended\n");
	procs.push_back(proc);
}

void getVar()
{
	char aux[1000];
	scanf("%s", aux);
	string s = aux;
	scanf("%s", aux);
	vars[string(aux)] = s;
	//printf("%s is %s\n", aux, s.c_str());
}

void solve()
{
	Proc proc;

	char aux[1000];
	scanf(" %[0-9a-z] ", aux); // name
	proc.name = aux;
	proc.t = 0;
	//printf("proc name = %s\n", aux);
	while (1)
	{
		scanf(" %[^0-9a-zT] ", aux);
		if (aux[0] == ')') break;
		scanf(" %[0-9a-zT] ", aux);
		proc.t++;
		proc.pars.push_back(vars[aux]);
		//printf("proc par = %s\n", aux);
	}
	//printf("proc ended\n");
	int res = 0;
	for (int i = 0; i < procs.size(); ++i)
	{
		if (procs[i].name != proc.name) continue;
		if (procs[i].t != proc.t) continue;
		bool g = 1;
		for (int j = 0; j < proc.t && g; ++j)
		{
			if (procs[i].pars[j] == proc.pars[j]) continue;
			if (procs[i].pars[j] == "T") continue;
			else g = 0;
		}
		if (!g) continue;
		//printf("%d\n", i);
		++res;
	}
	printf("%d\n", res);
}

int main()
{
	int n;
	scanf("%d", &n);
	
	for (int i = 0; i < n; ++i)
	{
		getProc();
	}
	
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		getVar();
	}
	
	scanf("%d", &n);
	for (int i = 0; i < n; ++i)
	{
		solve();
	}
	
	return 0;
}

