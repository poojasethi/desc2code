#include <iostream>
#include <algorithm>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <ctime>
#include <bitset>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <deque>
#include <vector>
#include <list>
using namespace std;

const int MAXN=1007; 
const int MOD=1000000007; 
const int INF=2147483647;
const double EPS=1e-8;

struct Function
{
	string name;
	vector<string> para;
	Function()
	{
		init();
	}
	void init()
	{
		name="";
		para.clear();
	}
	bool operator == (const Function &f) const
	{
		if (name!=f.name) return false;
		if (para.size()!=f.para.size()) return false;
		for (int i=0;i<para.size();i++)
		{
			if (para[i]!="T" && f.para[i]!="T" && para[i]!=f.para[i])
			{
				return false;
			}
		}
		return true;
	}
};

int i,j,k,n,m,x,y,z,ans,cnt,tcase,xcase;
string s,sa,sb;
map<string,string> vari;
istringstream iss;
Function f[MAXN],t; 

void cleanToEmpty(string &s)
{
	for (int i=0;i<s.length();i++)
	{
		if (s[i]=='(' || s[i]==',' || s[i]==')')
		{
			s[i]=' ';
		}
	}
}

int main()
{
	vari.clear();
	while (cin>>n)
	{
		getline(cin,s);
		for (i=0;i<n;i++)
		{
			getline(cin,s);
			cleanToEmpty(s);
			iss.clear();
			iss.str(s);
			iss>>sa;
			f[i].init();
			iss>>f[i].name;
			while (iss>>sa)
			{
				f[i].para.push_back(sa);
			}
		}
		cin>>m;
		getline(cin,s);
		for (i=0;i<m;i++)
		{
			getline(cin,s);
			iss.clear();
			iss.str(s);
			iss>>sa>>sb;
			vari[sb]=sa;
		}
		cin>>k;
		getline(cin,s);
		for (i=0;i<k;i++)
		{
			getline(cin,s);
			cleanToEmpty(s);
			iss.clear();
			iss.str(s);
			t.init();
			iss>>t.name;
			while (iss>>sa)
			{
				t.para.push_back(vari[sa]);
			}
			cnt=0;
			for (j=0;j<n;j++)
			{
				if (f[j]==t)
				{
					cnt++;
				}
			}
			cout<<cnt<<endl;
		}
	}
	return 0;
}
	 		 	 						   		     	