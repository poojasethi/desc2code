#include <stdio.h>
#include <iostream>
#include <map>
#include <vector>
#include <string>

using namespace std;

struct proc {
	int numpar;
	int typepar[5]; //int string double T
};

map<string, vector<proc> > M;
map<string, int> V;

int main (void) {
	int n, size, i, j, qtd, k;
	bool ok;
	char line[300], nome[100], param[100], *pos;
	proc p;
	cin >> n;
	cin.getline(line,300);
	for (i = 0; i < n; i++) {
		cin.getline (line, 300);
		pos = line;
		sscanf (pos, "%*s %[^ (]%*[ (]%n", nome, &qtd);
		pos += qtd;
		size = 0;
		while (sscanf(pos," %[^ ,)]%*[ ,)]%n", param, &qtd) != EOF) {
			pos += qtd;
			if (param[0] == 'i') p.typepar[size++] = 0;
			else if (param[0] == 's')	p.typepar[size++] = 1;
			else if (param[0] == 'd')	p.typepar[size++] = 2;
			else	p.typepar[size++] = 3;
		}
		p.numpar = size;
		M[string(nome)].push_back(p);
	}
	cin >> n;
	cin.getline(line,300);
	for (i = 0; i < n; i++) {
		cin >>  param >> nome;
		if (param[0] == 'i') V[string(nome)] = 0;
		else if (param[0] == 's')	V[string(nome)] = 1;
		else if (param[0] == 'd')	V[string(nome)] = 2;
	}
	cin >> n;
	cin.getline(line,300);
	for (i = 0; i < n; i++) {
		cin.getline (line, 300);
		pos = line;
		sscanf (pos, " %[^ (]%*[ (]%n", nome, &qtd);
		pos += qtd;
		size = 0;
		while (sscanf(pos," %[^ ,)]%*[ ,)]%n", param, &qtd) != EOF) {
			pos += qtd;
			p.typepar[size++] = V[string(param)];
		}
		p.numpar = size;
		map<string, vector<proc> >::iterator it;
		qtd = 0;
		if ((it = M.find (string(nome))) != M.end()) {
			for (j = 0, size = it->second.size(); j < size; j++) {
				if (p.numpar == it->second[j].numpar) {
					ok = true;
					for (k = 0; k < p.numpar; k++) {
						if (it->second[j].typepar[k] != 3 && it->second[j].typepar[k] != p.typepar[k])	
							ok = false;
					}
					if (ok)	qtd++;
				}
			}
		}
		printf ("%d\n", qtd);
	}
	return 0;
}
