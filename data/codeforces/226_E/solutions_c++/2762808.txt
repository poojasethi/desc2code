#include<cstdio>
#include<cstring>
#include<iostream>
#include<cmath>
#include<set>
#include<queue>
#include<vector>
#include<algorithm>
#include<cstdlib>
#include<map>

using namespace std;

const int maxn = 200000+10;

#define MP make_pair
#define fi first
#define sc second
#define LL long long
#define LD long double
#define pb push_back
struct T{
	int sum,lef,rig;
}h[maxn*4*20];

int Fa[maxn][20],n,m,dep[maxn];
int root[maxn],lt,S[maxn],E[maxn];
vector<int> A[maxn];
void dfs(const int &x){
	S[x]=++lt;
	dep[x]=dep[Fa[x][0]]+1;
	for (int i=0;i<A[x].size();i++)
		dfs(A[x][i]);
	E[x]=++lt;
}
int lca(int x,int y){
	if (dep[x]<dep[y]) swap(x,y);
	for (int i=19;i>=0;i--)
		if (dep[Fa[x][i]]>=dep[y]) x=Fa[x][i];
	for (int i=19;i>=0;i--)
		if (Fa[x][i]!=Fa[y][i]){x=Fa[x][i];y=Fa[y][i];}
	if (x!=y) return Fa[x][0];else return x;
}
int ins(int t,int x,int l,int r,int y){
	h[++lt]=h[t];
	int ty=lt;
	h[lt].sum+=y;
	if (l==r) return ty;
	int mid=l+r>>1;
	if (mid>=x) h[ty].lef=ins(h[ty].lef,x,l,mid,y);
	else h[ty].rig=ins(h[ty].rig,x,mid+1,r,y);
	return ty;
}
int get(int t,int x,int l,int r){
	if (x<l) return 0;
	if (x>=r) return h[t].sum;
	int mid=l+r>>1;
	return get(h[t].lef,x,l,mid)+get(h[t].rig,x,mid+1,r);
}
int destroy(int x,int T1,int T2){
	return get(root[T2],S[x],1,2*n)-get(root[T2],S[x]-1,1,2*n)-(get(root[T1],S[x],1,2*n)-get(root[T1],S[x]-1,1,2*n));
}
int ask(int A,int B,int lc,int T1,int T2){
	
	A=get(root[T2],S[A],1,2*n)-get(root[T1],S[A],1,2*n);
	if (B==lc){
		lc=Fa[lc][0];
		lc=get(root[T2],S[lc],1,2*n)-get(root[T1],S[lc],1,2*n);	
		return A-lc;
	}
	B=get(root[T2],S[B],1,2*n)-get(root[T1],S[B],1,2*n);
	A-=destroy(lc,T1,T2);
	lc=Fa[lc][0];
	lc=get(root[T2],S[lc],1,2*n)-get(root[T1],S[lc],1,2*n);
	return A+B-2*lc;
}
int Sol(int A,int Nd,int T1,int T2){
	for (int i=19;i>=0;i--){
		int len=dep[A]-dep[Fa[A][i]]+1;
		int ts=ask(A,Fa[A][i],Fa[A][i],T1,T2);
		if (len-ts<Nd){
			Nd-=len-ts;
			A=Fa[Fa[A][i]][0];
		}
	}
	if (destroy(A,T1,T2)==1||Nd==2) A=Fa[A][0];
	return A;
}
int main(){
	#ifdef ONLINE_JUDGE
	#else
	freopen("226E.in","r",stdin);
	freopen("226E.out","w",stdout);
	#endif
	scanf("%d",&n);
	for (int i=1;i<=n;i++) {scanf("%d",&Fa[i][0]);A[Fa[i][0]].pb(i);}
	for (int i=1;i<=n;i++) if (Fa[i][0]==0) dfs(i);
	for (int i=1;i<20;i++) 
		for (int j=1;j<=n;j++) Fa[j][i]=Fa[Fa[j][i-1]][i-1];
	scanf("%d",&m);lt=0;
	for (int fish=1;fish<=m;fish++){
		int kind;
		scanf("%d",&kind);
		if (kind==1){
			int t;scanf("%d",&t);
			root[2*fish-1]=ins(root[2*fish-2],S[t],1,2*n,1);
			root[2*fish]=ins(root[2*fish-1],E[t],1,2*n,-1);
		}else{
			root[2*fish-1]=root[2*fish-2];
			root[2*fish]=root[2*fish-2];
			int A,B,K,Y;
			scanf("%d%d%d%d",&A,&B,&K,&Y);
			int lc=lca(A,B);
			int len=dep[A]+dep[B]-2*dep[lc]+1;
			if (destroy(A,2*Y,2*fish)==0) K++;
			int ts=destroy(B,2*Y,2*fish);
			int t2=ask(A,B,lc,2*Y,2*fish);
			if (t2+K-ts>=len){
				printf("-1\n");continue;
			}
			int t3=ask(A,lc,lc,2*Y,2*fish);
			if (dep[A]-dep[lc]+1-t3<K){
				K=len-t2-K+1;
				A=B;
			}
			printf("%d\n",Sol(A,K,2*Y,2*fish));
		}
	}
	return 0;
}

