#include<cstdio>
#include<vector>
#define pb push_back
#define fo(i,a,b) for(i=a;i<=b;++i)
#define fd(i,a,b) for(i=a;i>=b;--i)
using namespace std;
typedef pair<int,int>node;
const int mn=101000,ml=20;
int t[mn],s[mn*ml],le[mn*ml],ri[mn*ml];
int f[mn][ml],dep[mn],st[mn],ed[mn],la[mn];
vector<int>e[mn];
int n,L,Q,rt,nt,ny,tt;
int lca(int a,int b)
{
    int i;
    if(dep[a]<dep[b])i=a,a=b,b=i;
    fd(i,L,0)
        if(dep[f[a][i]]>=dep[b])a=f[a][i];
    if(a==b)return a;
    fd(i,L,0)
        if(f[a][i]!=f[b][i])a=f[a][i],b=f[b][i];
    return f[a][0];
}
void dfs(int r)
{
    if(dep[r]>L)L=dep[r];
    st[r]=++tt;
    for(int i=0;i<e[r].size();++i)
    {
        dep[e[r][i]]=dep[r]+1;
        dfs(e[r][i]);
    }
    ed[r]=tt;
}
void add(int t,int&p,int l,int r,int k,int v)
{
    p=++tt,s[p]=s[t]+v;
    if(l==r)return;
    int m=(l+r)/2;
    if(k<=m)add(le[t],le[p],l,m,k,v),ri[p]=ri[t];
    else add(ri[t],ri[p],m+1,r,k,v),le[p]=le[t];
}
int query(int p,int l,int r,int k)
{
    if(k<l)return 0;
    if(k>=r)return s[p];
    int m=(l+r)/2;
    if(k<=m)return query(le[p],l,m,k);
    else return s[le[p]]+query(ri[p],m+1,r,k);
}
int sum(int i)
{
    return query(nt,1,n,st[i])-query(ny,1,n,st[i]);
}
int calc(int i,int j)
{
    if(!j)return dep[i]-sum(i);
    return dep[i]-dep[j]-sum(i)+sum(j);
}
int found(int i,int top,int s)
{
    int j,k,t;
    fd(k,L,0)
    {
        j=f[i][k];
        if(dep[j]<dep[top])continue;
        t=calc(i,j);
        if(t<s)
            s-=t,i=j;
    }
    return i;
}
void solve(int i,int j,int s,int y)
{
    int k=lca(i,j),l=calc(i,f[k][0]),d;
    s+=(la[i]<=y);
    if(s<=l)d=found(i,k,s);
    else
    {
        s=s-l+(la[k]<=y);
        l=calc(j,f[k][0]);
        if(s>l)d=-1;else d=found(j,k,l-s+1);
    }
    if(d==i||d==j)d=-1;
    printf("%d\n",d);
}
int main()
{
    scanf("%d",&n);
    int i,j;
    fo(i,1,n)
    {
        scanf("%d",f[i]);
        if(!f[i][0])rt=i;else e[f[i][0]].pb(i);
    }
    dep[rt]=1;
    dfs(rt);
    for(i=0;(1<<i)<L;++i);L=i;
    fo(j,1,L)
        fo(i,1,n)
            f[i][j]=f[f[i][j-1]][j-1];
    scanf("%d",&Q);
    int p,y,a,b,k;
    fo(i,1,Q)
    {
        scanf("%d",&p);
        if(p==1)
        {
            scanf("%d",&a);
            add(t[i-1],k,1,n,st[a],1);
            if(ed[a]<n)add(k,t[i],1,n,ed[a]+1,-1);else t[i]=k;
            la[a]=i;
        }
        else
        {
            t[i]=t[i-1];
            scanf("%d%d%d%d",&a,&b,&k,&y);
            nt=t[i],ny=t[y];
            solve(a,b,k,y);
        }
    }
    return 0;
}