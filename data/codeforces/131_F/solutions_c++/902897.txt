#include <iostream>
#include <cstring>
#include <algorithm>
using namespace std;

const int maxn = 505;
int n, m, k;
int input[maxn][maxn], map[maxn][maxn], sum[maxn][maxn]; //  r ,  i - > j
char line[maxn];

int main() {
	cin >> n >> m >> k;
	for (int i = 0, j; i < n; i++) {
		cin >> line;
		for (j = 0; j < m; j++)
			input[i][j] = line[j] - '0';
	}
	memset(map, 0, sizeof(map));
	for (int i = 1, j; i < n - 1; i++) for (j = 1; j < m - 1; j++) {
		if (input[i][j] && input[i - 1][j] && input[i + 1][j] && input[i][j - 1] && input[i][j + 1])
			map[i][j] = 1;
	}
	n-=2, m-=2;
	for (int i = 1; i <= n; i++) {
		for (int j = 1; j <= m; j++)
			sum[i][j] = sum[i][j - 1] + map[i][j];
	}
	int l1 = 0, l2 = 0;
	long long res = 0;
	for (int i = 1, j, cnt; i <= m; i++) for (j = i; j <= m; j++) {
		l1 = l2 = 1;
		cnt = 0;
		for (; l2 <= n; l2++) {
			cnt += sum[l2][j] - sum[l2][i - 1];
			while (cnt >= k) {
				res += n - l2 + 1;
				cnt -= sum[l1][j] - sum[l1][i - 1];
				l1++;
			}
		}
	}
	cout << res << endl;
}
