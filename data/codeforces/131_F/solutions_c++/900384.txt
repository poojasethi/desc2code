#include <cstdio>
#include <string>
#include <vector>
#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std ;

const int N = 510 ;

int n, m, k ;
int s[N][N], dx[5] = {0, -1, 0, 1, 0}, dy[5] = {0, 0, 1, 0, -1} ;
char g[N][N] ;

bool check (int x, int y)
{
    for (int i = 0; i < 5; i ++ ) if (g[x + dx[i]][y + dy[i]] != '1') return 0 ;
    return 1 ;
}

int work (int x, int y)
{
    int res = 0 ;
    for (int i = 2, j = 1, ss = 0; i <= m; i ++ )
    {
        while (ss < k && j < m) j ++, ss += s[y][j] - s[x - 1][j] ;
        if (ss < k) break ;
        res += m - j + 1, ss -= s[y][i] - s[x - 1][i] ;
    }
    return res ;
}

int main ()
{
    scanf ("%d%d%d", &n, &m, &k) ;
    for (int i = 1; i <= n; i ++ ) scanf ("%s", g[i] + 1) ;
    for (int i = 1; i <= n; i ++ )
        for (int j = 1; j <= m; j ++ )
            s[i][j] = s[i - 1][j] + check (i, j) ;
    __int64 res = 0 ;
    n --, m -- ;
    for (int i = 2; i <= n; i ++ )
        for (int j = i; j <= n; j ++ )
            res += work (i, j) ;
    cout << res << endl ;
    return 0 ;
}
