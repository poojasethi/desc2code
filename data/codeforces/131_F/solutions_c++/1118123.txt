#include <iostream>
using namespace std;
const int MX = 510;
int sums[MX][MX];
string arr[MX];
int mx[5] = {0, -1, 0, 1, 0};
int my[5] = {0, 0, -1, 0, 1};
int getsum(int sx, int ex, int sy, int ey) {
	return sums[ex][ey] - sums[ex][sy] - sums[sx][ey] + sums[sx][sy];
}
int main() {
	int N, M, K;
	cin >> N >> M >> K;
	for (int i = 0; i < N; ++i) {
		cin >> arr[i];
	}
	for (int i = 0; i < N; ++i) {
		for (int j = 0; j < M; ++j) {
			bool ok = true;
			for (int k = 0; k < 5; ++k) {
				int x = i + mx[k];
				int y = j + my[k];
				if (x < 0 || x >= N || y < 0 || y >= M || arr[x][y] == '0') {
					ok = false;
					break;
				}
			}
			sums[i + 1][j + 1] = sums[i][j + 1] + sums[i + 1][j] - sums[i][j] + ok;
		}
	}
	N -= 2;
	M -= 2;
	long long cnt = 0;
	for (int sk = 1; sk <= M; ++sk) {
		for (int i = 1; i <= N; ++i) {
			int k = M;
			for (int j = i; j <= N; ++j) {
				while (k > sk && getsum(i, j + 1, sk, k - 1 + 1) >= K) {
					--k;
				}
				if (getsum(i, j + 1, sk, k + 1) >= K) {
					cnt += M - k + 1;
				}
			}
		}
	}
	cout << cnt;
}
