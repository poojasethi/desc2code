from Queue import * # Queue, LifoQueue, PriorityQueue
from bisect import * #bisect, insort
from datetime import * 
from collections import * #deque, Counter,OrderedDict,defaultdict
import calendar
import heapq
import math
import copy
import itertools

def solver():
    s = raw_input()
    count_s = []
    now_c = s[0]
    count = 1
    for i in range(1,len(s)):
        if now_c == s[i]:
            count += 1
        else:
            count_s.append((min(2,count),now_c))
            now_c = s[i]
            count = 1

    count_s.append((min(2,count),now_c))

    ans_list = []

    for i in range(1,len(count_s)-1):
        if count_s[i-1][0] == 2 and count_s[i][0] == 2 and count_s[i+1][0] == 2:
            count_s[i] = (1,count_s[i][1])

    for i in range(len(count_s)-1):
        if count_s[i][0] == 2 and count_s[i+1][0] == 2:
            count_s[i] = (1,count_s[i][1])
    
    ans = ""
    for count,c in count_s:
        ans += c*count

    print ans

if __name__ == "__main__":
    solver()


