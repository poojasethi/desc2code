#include<iostream>
#include<algorithm>
using namespace std;
#define ll long long int
#define pl pair<ll,ll>
#define pp pair<ll,pl>
#define rp(i,n) for(i=0;i<(n);++i)
#define Mx 2105
#define X first
#define Y second
ll n,m,p;
ll a[Mx][Mx];
ll sz[Mx*Mx];
ll fa[Mx*Mx];
pp arr[Mx*Mx];
const int mv[4][2]={{0, 1}, {0, -1}, {1, 0}, {-1, 0}};
ll find(ll x)
{
	return fa[x]==x?x : fa[x]= find(fa[x]);
}
void merge(ll a,ll b)
{
	a=find(a);
	b=find(b);
	if(a!=b)
	{
		sz[a]+=sz[b];
		sz[b]=0;
		fa[b]=a;
	}
}
ll out[Mx][Mx];
ll height,freq;
void dfs(ll x,ll y)
{
	if(x<0||x>=n||y<0||y>=m)return;
	if(out[x][y])return;//visited
	if(a[x][y]<height)return;
	if(!freq)return;
	//cout<<x<<" "<<y<<endl;
	out[x][y]=height;
	freq--;
	dfs(x+1,y);
	dfs(x-1,y);
	dfs(x,y+1);
	dfs(x,y-1);
	return;
}
int main()
{
	ios_base::sync_with_stdio(0);
	ll i,j,k;
	cin>>n>>m>>p;
	rp(i,n)rp(j,m)
	{
		cin>>a[i][j];
		arr[i*m+j]=pp(a[i][j],pl(i,j));
	}
	//rp(i,n)rp(j,m)cout<<arr[i*m+j].X<<" "<<arr[i*m+j].Y.X<<" "<<arr[i*m+j].Y.Y<<endl;
	rp(i,n*m)
	{
		fa[i]=i;
		sz[i]=1;
	}
	sort(arr,arr+n*m);
	reverse(arr,arr+n*m);
	//rp(i,n)rp(j,m)cout<<arr[i*m+j].X<<" "<<arr[i*m+j].Y.X<<" "<<arr[i*m+j].Y.Y<<endl;
	ll ans=-1;
	i=0;
	while(i<n*m)
	{
		//cout<<i<<endl;
		j=i;
		while(j<n*m&&arr[j].X==arr[i].X)
		{
			ll x0,x,y0,y;
			x0=arr[j].Y.X;
			y0=arr[j].Y.Y;
			rp(k,4)
			{
				x=x0+mv[k][0];
				y=y0+mv[k][1];
				if(x>=0&&x<n&&y>=0&&y<m)
					if(a[x][y]>=arr[j].X)
						merge(x*m+y,x0*m+y0);
			}
			j++;
		}
		if(arr[i].X&& (p%arr[i].X) == 0)
			for(k=i;k<j;++k)
			{
				ll x,y;
				x=arr[k].Y.X;
				y=arr[k].Y.Y;
				if(sz[find(x*m+y)]>=p/arr[i].X){
					ans=x*m+y;
					break;
				}
			}
		if(ans!=-1)break;
		i=j;
	}
	
	if(ans==-1)
	{
		cout<<"NO\n";
		return 0;
	}
	cout<<"YES\n";
	height=a[ans/m][ans%m];
	freq=p/height;
	//cout<<ans/m<<" "<<ans%m<<endl;
	dfs(ans/m,ans%m);
	rp(i,n)
	{
		rp(j,m)
			cout<<out[i][j]<<" ";
		cout<<endl;
	}
	return 0;
}