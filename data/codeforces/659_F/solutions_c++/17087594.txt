#include<bits/stdc++.h>
		 
using namespace std;
#define foreach(i,x) for(type(x)i=x.begin();i!=x.end();i++)
#define FOR(ii,aa,bb) for(int ii=aa;ii<=bb;ii++)
#define FORE(ii,aa,bb) for(int ii=aa;ii<bb;ii++)
#define ROF(ii,aa,bb) for(int ii=aa;ii>=bb;ii--)
#define type(x) __typeof(x.begin())

#define dbg(x) cerr << (#x) << " --> " << (x) << endl
#define y1 sdfsdfsdf
#define int long long
#define pii pair<int,int>
#define mod 1000000007
#define N (int)(1453)
#define mp make_pair
#define pb push_back
#define sd second
#define ft first
#define endll puts("")
#define endl '\n'
#define inf mod
#define ort ((sol+sag)/2)
int n,m,x,y,xx,yy,val,kalan,k;
int ans[N][N],H[N][N],ata[N*N+N],size[N*N+N];
int yon[4][2] = {{0,-1},{0,1},{1,0},{-1,0}};
queue<pii >q;
vector<pair<int,pii > >v;
int get(int x,int y){return x*m+y;}
int atabul(int x){return ata[x] = (ata[x] == x) ? x : atabul(ata[x]);}
void merge(int x,int y){
	x = atabul(x);
	y = atabul(y);
	if(x == y) return;
	size[x] += size[y];
	ata[y] = x;
}
void add(int x,int y){
	ata[get(x,y)] = get(x,y);
	size[get(x,y)] = 1;
	H[x][y] = 1;
	FOR(i,0,3){
		xx = x + yon[i][0];
		yy = y + yon[i][1];
		if(H[xx][yy])
			merge(get(x,y),get(xx,yy));
	}
}
void bfs(int x,int y,int val){
	kalan = k/val;
	q.push(mp(x,y));
	H[x][y] = 0;
	while(!q.empty() and kalan){
		x = q.front().ft;
		y = q.front().sd;
		q.pop();
		kalan--;
		ans[x][y] = val;
		FOR(i,0,3){
			xx = x + yon[i][0];
			yy = y + yon[i][1];
			if(H[xx][yy]){
				q.push(mp(xx,yy));
				H[xx][yy] = 0;
			}
		}	
	}
	FOR(i,1,n){
		FOR(j,1,m)
			printf("%lld ",ans[i][j]);
		puts("");
	}
}
main(){
	cin >> n >> m >> k;
	FOR(i,1,n)
		FOR(j,1,m){
			scanf("%lld",&x);
			v.pb(mp(x,mp(i,j)));
		}
	sort(v.rbegin(),v.rend());
	FOR(i,0,n*m-1){	
		val = v[i].ft;
		x = v[i].sd.ft;
		y = v[i].sd.sd;
		add(x,y);
		if(k % val == 0 and val*size[get(x,y)] >= k){
			puts("YES");
			bfs(x,y,val);
			return 0;
		}
	}
	puts("NO");	
}	
