#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
#include <string>
#include <map>
#include <set>
#include <cassert>
using namespace std;
#define rep(i,a,n) for (int i=a;i<n;i++)
#define per(i,a,n) for (int i=n-1;i>=a;i--)
#define pb push_back
#define mp make_pair
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define SZ(x) ((int)(x).size())
typedef vector<int> VI;
typedef long long ll;
typedef pair<int,int> PII;
const ll mod=1000000007;
ll powmod(ll a,ll b) {ll res=1;a%=mod;for(;b;b>>=1){if(b&1)res=res*a%mod;a=a*a%mod;}return res;}
// head

const ll N=1010;
int dx[]={1,0,-1,0},dy[]={0,-1,0,1};
int n,m,a[N][N],vis[N][N],f[N*N],s[N*N],rt[N][N],val;
pair<int,PII> p[N*N];
vector<PII> ret;
ll k,c;
int find(int x) { return f[x]==x?x:f[x]=find(f[x]); }
void dfs(int x,int y) {
	vis[x][y]=0;
	ret.pb(mp(x,y));
	rep(k,0,4) {
		int nx=x+dx[k],ny=y+dy[k];
		if (0<=nx&&nx<n&&0<=ny&&ny<m&&vis[nx][ny]) {
			dfs(nx,ny);
		}
	}

}
int main() {
	scanf("%d%d%lld",&n,&m,&k);
	rep(i,0,n) rep(j,0,m) {
		scanf("%d",&a[i][j]);
		p[i*m+j]=mp(a[i][j],mp(i,j));
	}
	sort(p,p+n*m); reverse(p,p+n*m);
	rep(i,0,n*m) f[i]=i,s[i]=1;
	rep(i,0,n*m) {
		int x=p[i].se.fi,y=p[i].se.se;
		vis[x][y]=1;
		rep(k,0,4) {
			int nx=x+dx[k],ny=y+dy[k];
			if (0<=nx&&nx<n&&0<=ny&&ny<m&&vis[nx][ny]) {
				int a=x*m+y,b=find(nx*m+ny);
				if (find(b)!=a) s[a]=s[a]+s[b],f[b]=a;
			}
		}
		if (k%a[x][y]==0&&s[x*m+y]>=k/a[x][y]) {
			dfs(x,y); val=a[x][y]; c=k/a[x][y];
			break;
		}
	}
	if (!SZ(ret)) {
		puts("NO");
	} else {
		puts("YES");
		rep(i,0,c) rt[ret[i].fi][ret[i].se]=1;
		rep(i,0,n) {
			rep(j,0,m) if (rt[i][j]) printf("%d ",val); else printf("0 ");
			puts("");
		}
	}
}
