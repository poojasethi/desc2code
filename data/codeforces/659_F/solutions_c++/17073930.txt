#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
#include <queue>
using namespace std;
#define ll long long
ll mm[1005][1005];
bool vis[1005][1005],fg[1005][1005];
int dir[4][2]={0, 1, 0, -1, 1, 0, -1, 0};
int n,m;
map<pair<int, int>, int> mp;
queue<pair<int, int> >qq;

bool work(int x, int y, ll num){
    while(!qq.empty()) qq.pop();
    mp.clear();
    memset(vis, 0, sizeof(vis));
    pair<int, int> tmp;
    int i,cx,cy;
    ll cnt=0;
    qq.push(make_pair(x, y));
    vis[x][y]=1;
    while(!qq.empty()){
        tmp=qq.front();
        qq.pop();
        cnt++;
        mp[tmp]=1;
        if(cnt==num) return 1;
        for(i=0;i<4;i++){
            cx=tmp.first+dir[i][0];
            cy=tmp.second+dir[i][1];
            if(cx>=0 && cx<n && cy>=0 && cy<m && !vis[cx][cy] && mm[cx][cy]>=mm[x][y]){
                if(mm[cx][cy]==mm[x][y]) fg[cx][cy]=1;
                vis[cx][cy]=1;
                qq.push(make_pair(cx, cy));
            }
        }
    }
    return 0;
}

int main(){
    int i,j;
    ll k,flag;
    while(scanf("%d %d %I64d", &n, &m, &k)!=EOF){
        for(i=0;i<n;i++)
            for(j=0;j<m;j++)
                scanf("%I64d", &mm[i][j]);
        flag=0;
        memset(fg, 0, sizeof(fg));
        for(i=0;i<n;i++){
            for(j=0;j<m;j++){
                if(fg[i][j]) continue;
                if(mm[i][j]==0) continue;
                if(k%mm[i][j]!=0) continue;
                if(k/mm[i][j]>n*m) continue;
                if(work(i, j, k/mm[i][j])){
                    flag=mm[i][j];
                    break;
                }
            }
            if(flag) break;
        }
        if(!flag) printf("NO\n");
        else{
            printf("YES\n");
            for(i=0;i<n;i++){
                for(j=0;j<m;j++){
                    if(mp[make_pair(i,j)]) printf("%I64d", flag);
                    else printf("0");
                    if(j==m-1) printf("\n");
                    else printf(" ");
                }
            }
        }
    }
    return 0;
}
