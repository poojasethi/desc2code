#include <iostream>
#include <cstring>
#include <iomanip>
#include <cstdio>
#include <algorithm>
#include <map>
#include <cmath>
#include <cstdlib>
#include <vector>
#define INF 2147483647
#define ll long long
#define PI 3.14159265358979323846
#define MO 1000000007
//#define int long long
using namespace std;
	const int wx[]={1,0,-1,0};
	const int wy[]={0,1,0,-1};
	int a[1010][1010],u[1010][1010];
	ll k,sum,tmp,noww; 
	ll n,m,l[1000010],t,s[1000010],tot,st,en,xy;
	pair<int,int> p;
	pair<int,int> po[2000010];
	map	<int,vector<pair<int,int> > > mp;
	bool found;
inline int read()
{
    int x=0,f=1;char ch=getchar();
    while(ch<'0'||ch>'9'){if(ch=='-')f=-1;ch=getchar();}
    while(ch>='0'&&ch<='9'){x=x*10+ch-'0';ch=getchar();}
    return x*f;
}
void make(int x,int y)
{
	int nx,ny;
	for (int i=0;i<4;i++)
	{
		nx=x+wx[i];
		ny=y+wy[i];
		if (nx>0&&nx<=n&&ny>0&&ny<=m&&!u[nx][ny]&&xy<=a[nx][ny]&&tmp)
		{
			u[nx][ny]=noww;
			tmp-=xy;
			en++;
			po[en]=(pair<int,int>){nx,ny};
		}
	}
}
int main()
{
//	std::ios::sync_with_stdio(false);
	scanf("%d%d%I64d",&n,&m,&k);
	for (int i=1;i<=n;i++)
		for (int j=1;j<=m;j++)
		{
			a[i][j]=read();
			sum+=a[i][j];
			p.first=i;
			p.second=j;
			mp[a[i][j]].push_back(p);
			l[++t]=a[i][j];
		}
	if (sum<k)
	{
		printf("NO");
		return 0;
	}
	sort(l+1,l+t+1);
	for (int i=1;i<=t;i++)
		if (l[i]!=l[i+1]&&!(k%l[i])) s[++tot]=l[i];
	for (int i=1;i<=tot;i++)
	{
		memset(u,0,sizeof(u));
		for (int j=0;j<mp[s[i]].size();j++)
		{
			p=mp[s[i]][j];
			if (u[p.first][p.second]) continue;
			st=0,en=0,po[0]=p,tmp=k-s[i],noww=j+1;
			u[p.first][p.second]=noww,xy=s[i];
			while (st<=en&&tmp)
			{
				make(po[st].first,po[st].second);
				st++;
			}
			if (!tmp)
			{
				found=true;
				printf("YES\n");
				for (int k=1;k<=n;k++,printf("\n"))
					for (int l=1;l<=m;l++)
						if (u[k][l]==noww) printf("%d ",s[i]); else printf("0 ");
				break;
			}
		}
		if (found) break;
	}
	if (!found) printf("NO");
	return 0;
}