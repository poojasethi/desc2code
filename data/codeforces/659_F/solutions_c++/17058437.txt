#include<bits/stdc++.h>
using namespace std;
struct node
{
	int num,x,y;
	friend bool operator <(node a,node b){return a.num>b.num;}
}st[2000100];
int a[1010][1010],top,all[1010][1010];
int fa[1000100],size[1000100];
int n,m;
int get(int i,int j){return (i-1)*m+j;}
int getf(int s)
{
	if (fa[s]==s) return s;
	fa[s]=getf(fa[s]);
	return fa[s];
}
void merge(int x,int y)
{
	x=getf(x);y=getf(y);
	if (x!=y)
	{
		size[y]+=size[x];
		size[x]=0;
		fa[x]=y;
	}
}
int ans[1010][1010];
int dfs(int x,int y,int js,int num)
{
	if (ans[x][y]) return js;
	ans[x][y]=true;
	js--;
	if (!js) return js;
	if ((x!=1)&&(a[x-1][y]>=num)) js=dfs(x-1,y,js,num);
	if (!js) return js;
	if ((x!=n)&&(a[x+1][y]>=num)) js=dfs(x+1,y,js,num);
	if (!js) return js;
	if ((y!=1)&&(a[x][y-1]>=num)) js=dfs(x,y-1,js,num);
	if (!js) return js;
	if ((y!=m)&&(a[x][y+1]>=num)) js=dfs(x,y+1,js,num);
	if (!js) return js;
	return js;
}
int main()//LL
{
	long long k;
	scanf("%d%d%lld",&n,&m,&k);
	for (int i=1;i<=n*m;i++) {fa[i]=i;size[i]=1;}
	for (int i=1;i<=n;i++)
	for (int j=1;j<=m;j++)
	{
		scanf("%d",&a[i][j]);
		st[++top]=(node){a[i][j],i,j};
	}
	sort(st+1,st+top+1);
	for (int p=1;p<=n*m;p++)
	{
		int i=st[p].x,j=st[p].y;
		if ((i!=1)&&(a[i-1][j]>=a[i][j])) merge(get(i-1,j),get(i,j));
		if ((i!=n)&&(a[i+1][j]>=a[i][j])) merge(get(i+1,j),get(i,j));
		if ((j!=1)&&(a[i][j-1]>=a[i][j])) merge(get(i,j-1),get(i,j));
		if ((j!=m)&&(a[i][j+1]>=a[i][j])) merge(get(i,j+1),get(i,j));
		all[i][j]=size[getf(get(i,j))];
	}
	for (int i=1;i<=n;i++)
	for (int j=1;j<=m;j++)
	{
		if (k%a[i][j]!=0) continue;
		if (all[i][j]>=k/a[i][j])
		{
			printf("YES\n");
			dfs(i,j,k/a[i][j],a[i][j]);
			for (int ii=1;ii<=n;ii++)
			for (int jj=1;jj<=m;jj++)
			{
				if (ans[ii][jj]) printf("%d ",a[i][j]);else printf("0 ");
				if (jj==m) printf("\n");
			}
			return 0;
		}
	}
	printf("NO\n");
}