#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const int N=1010;
int d[4][2]={1,0,0,1,-1,0,0,-1};
int a[N][N],f[N][N],fa[N*N],son[N*N];
int ans[N][N];
int num;
int t;
int n,m;
ll k;
struct Point 
{
	int x,y;
	int v;
}p[N*N];

int find(int x)
{
	if(fa[x]==x) return x;
	else return fa[x]=find(fa[x]);
}

void dfs(int x,int y)
{
	if(f[x][y]!=-1) return ;
	f[x][y]=1;
	for(int i=0;i<4;i++)
	{
		int dx=x+d[i][0];
		int dy=y+d[i][1];
		if(dx>=0 && dx<n && dy>=0 && dy<m && f[dx][dy]!=-1) 
		{
			int t=find(dx*m+dy);
			if(t!=x*m+y)
			{
				int ddx=t/m;
				int ddy=t%m;
				f[x][y]+=f[ddx][ddy];
				fa[t]=x*m+y;
			}
			//dfs(dx,dy);
			
		}
	}
}

void dfs2(int x,int y)
{
	if(t==0) return ;
	ans[x][y]=num;
	t--;
	for(int i=0;i<4;i++)
	{
		int dx=x+d[i][0];
		int dy=y+d[i][1];
		if(dx>=0 && dx<n && dy>=0 && dy<m && a[dx][dy]>=num && ans[dx][dy]==0) 
		{
			dfs2(dx,dy);
			
		}
	}
}

bool cmp(struct Point a,struct Point b)
{
	return a.v>b.v;	
};

int main()
{
	bool pd=false;
	scanf("%d%d%I64d",&n,&m,&k);
	for(int i=0;i<n;i++) for(int j=0;j<m;j++) 
	{
		scanf("%d",&a[i][j]);
		p[i*m+j].x=i;
		p[i*m+j].y=j;
		p[i*m+j].v=a[i][j];
	}
	sort(p,p+n*m,cmp);
	for(int i=0;i<n;i++) for(int j=0;j<m;j++) f[i][j]=-1;
	for(int i=0;i<n*m+1;i++) fa[i]=i; 

	for(int w=0;w<n*m;w++)
	{
		int i=p[w].x;
		int j=p[w].y;
		//for(int i=0;i<n;i++) for(int j=0;j<m;j++)
		
			dfs(i,j);
			if(k%a[i][j]==0 && k<=(ll)a[i][j]*f[i][j])
			{
				pd=true;
				num=a[i][j];
				t=k/a[i][j];
				dfs2(i,j);
				break;
			}

		
	}
	//for(int i=0;i<n;i++) for(int j=0;j<m;j++) printf("%d ",f[i][j]);
	if(!pd) printf("NO\n");
	else
	{
		printf("YES\n");
		for(int i=0;i<n;i++) 
		{
			for(int j=0;j<m;j++) printf("%d ",ans[i][j]);
			printf("\n");
		}
	}
	return 0;
}