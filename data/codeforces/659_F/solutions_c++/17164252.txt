#include<bits/stdc++.h>
using namespace std;

typedef long long ll;

ll inp[1005][1005];
int seen[1005][1005];

set< ll > st;
set< ll >::iterator its;

map< ll, int > mymap;
vector< pair<int ,int> > adj[1000006];

ll rem,n,m;

int fx[]={1,-1,0,0};
int fy[]={0,0,1,-1};

int valid(int u,int v){
    if(u < 1 && u > n) return 0;
    if(v < 1 && v > m) return 0;
    return 1;
}

void dfs(int x,int y,ll val){
    if(rem <= 0) return ;
    seen[x][y] = 1; rem--;
    if(rem <= 0) return ;
    for(int i=0;i<4;i++){
        int u = x + fx[i];
        int v = y + fy[i];
        if(inp[u][v] >= val && valid(u,v) && !seen[u][v]) dfs(u,v,val);
    }
}

void traverse(int x,int y){
    seen[x][y] = 3;
    for(int i=0;i<4;i++){
        int u = x + fx[i];
        int v = y + fy[i];
        if(seen[u][v] == 1 && valid(u,v)) traverse(u,v);
    }
}

void Print(int x,int y,ll val){
    traverse(x,y);
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            if(seen[i][j] == 3) printf("%I64d ",val);
            else printf("0 ");
        }
        puts("");
    }
}

int main(){
    ll k,cnt = 0; scanf("%I64d %I64d %I64d",&n,&m,&k);
    for(int i=1;i<=n;i++){
        for(int j=1;j<=m;j++){
            scanf("%I64d",&inp[i][j]);
            st.insert(inp[i][j]);
            if(mymap.find(inp[i][j]) == mymap.end()) mymap[ inp[i][j] ] = ++cnt;
            int u = mymap[ inp[i][j] ];
            adj[u].push_back( make_pair( i,j ) );
        }
    }
    for(its = st.begin();its != st.end(); ++its){
        ll x = *its;
        if(k % x) continue;
        int u = mymap[x];
        memset(seen,0,sizeof seen);
        for(int i=0;i<(int)adj[u].size();i++){
            rem = k / x;
            dfs(adj[u][i].first , adj[u][i].second, x);
            if(rem <= 0){
                puts("YES");
                Print(adj[u][i].first,adj[u][i].second,x);
                return 0;
            }
        }
    }
    puts("NO");
    return 0;
}
