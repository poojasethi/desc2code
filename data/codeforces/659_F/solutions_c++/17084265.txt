#include<bits/stdc++.h>

#define FOR(i,a,b) for(int i=a;i<=b;i++)
#define FORD(i,a,b) for(int i=a;i>=b;i--)
#define pb push_back 
#define lli long long int
#define mod1 1000000007
#define mod2 1000000009
#define ppi pair<int,int>
#define tr(a,it) for(typeof(a.begin()) it=a.begin();it!=a.end();it++)
#define N 1010
using namespace std;

lli ar[N][N];
lli g[N][N];
lli par[N*N];
lli maxs=1;
lli ans[N][N];
lli c;

int root(int x){
return par[x]<0 ?  x : root(par[x]);
}

int unions(int x,int y)
{
	if((x=root(x))==(y=root(y)))return 0;
	
	if(par[y]<par[x])swap(x,y);
	
	par[x]+=par[y];
	par[y]=x;
	maxs=max(maxs,(lli)(-par[x]));
	
	return 0;
}


struct node
{
	lli no,r,c;
};


bool comp(node l,node m)
{
	if(l.no<m.no)return 1;
	return 0;
}

vector<node>v;

int mark[N][N];
int dfs(int x,int y)
{
	if(mark[x][y])return 0;
	if(g[x][y]==-1)return 0;
	mark[x][y]=1;
	if(c==0)return 0;
	c--;
	ans[x][y]=1;
	dfs(x-1,y);dfs(x,y-1);dfs(x+1,y);dfs(x,y+1);

	return 0;
}
int main()
{
	lli n,m,k;
	
	cin>>n>>m>>k;
	
	FOR(i,0,n+1)FOR(j,0,m+1)
	{
		g[i][j]=-1;
		ans[i][j]=0;
		mark[i][j]=0;
	}
	
	FOR(i,1,n)FOR(j,1,m)
	{
	cin>>ar[i][j];
	node x;
	x.c=j;
	x.r=i;
	x.no=ar[i][j];
	v.pb(x);
	}
	
	sort(v.begin(),v.end(),comp);
	
	FORD(i,n*m-1,0)
	{
			int l=v[i].r,q=v[i].c;
			g[l][q]=i;
			par[i]=-1;
			if(g[l-1][q]!=-1)unions(g[l][q],g[l-1][q]);
			if(g[l][q-1]!=-1)unions(g[l][q],g[l][q-1]);
			if(g[l+1][q]!=-1)unions(g[l][q],g[l+1][q]);
			if(g[l][q+1]!=-1)unions(g[l][q],g[l][q+1]);
			
			if(k%v[i].no==0&&maxs>=k/v[i].no)
			{
		
				c=k/v[i].no;
				dfs(l,q);
				
				cout<<"YES\n";
				FOR(h,1,n)
				{
				FOR(k,1,m)
				{
				if(ans[h][k])cout<<v[i].no<<" ";
				else
				{
				cout<<"0 ";
				}
				}
				cout<<endl;
				}
				
				return 0;
			}
	}

	cout<<"NO";
	
}

