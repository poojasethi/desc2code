#include <bits/stdc++.h>

using namespace std;

typedef __int64 ll;
typedef pair<int, int> pa;
const int N = 1e3 + 5;
const int dx[] = {0, 0, 1, -1};
const int dy[] = {1, -1, 0, 0};

ll n, m, k, T, s;
int a[N][N];
int vis[N][N];
int v[N][N];

queue<pa> Q;

int solve(int x, int y)
{
	if (v[x][y])
		return 0;
	if (k % a[x][y] != 0 || k / a[x][y] > n * m )
		return 0;
	T++, s = a[x][y];
	ll tot = k / a[x][y];
	while (! Q.empty())
	{
		Q.pop();
	}
	Q.push(pa(x, y));
	v[x][y] = 1;
	vis[x][y] = T;
	int cnt = 1;
	if (cnt == tot)
		return 1;
	while (!Q.empty())
	{
		pa u = Q.front();
		Q.pop();
		for (int d = 0; d < 4; d++)
		{
			int tx = u.first + dx[d];
			int ty = u.second + dy[d];
			if (a[tx][ty] < s || vis[tx][ty] == T) 
				continue;
			cnt++;
			Q.push(pa(tx, ty));
			if (a[tx][ty] == s)
				v[tx][ty] = 1;
			vis[tx][ty] = T;
			if (cnt == tot)
				return 1;
		}
	}
	return 0;
}

int print()
{
	printf("YES\n");
	for (int i = 1; i <= n; ++i)
	{
		for (int j = 1; j <= m; ++j)
			printf("%d ", vis[i][j] == T ? s: 0);
		puts("");
	}
}

int main()
{
	ll sum = 0;
	scanf("%I64d%I64d%I64d", &n, &m, &k);
	for (int i = 1; i <= n; ++i)
	{
		for (int j = 1; j <= m; ++j)
		{
			scanf("%d", &a[i][j]);
			sum += a[i][j];
		}
	}
	if (sum < k)
	{	
		printf("NO\n");
		return 0;
	}
	for (int i = 1; i <= n; ++i)
	{
		for (int j = 1; j <= m; ++j)
		{
			if (solve(i, j))
			{
				print();
				return 0;
			}
		}
	}
	printf("NO\n");
	return 0;
}

