#include<stdio.h>
#include<string.h>
#define ll __int64

int mat[1000][1000];
bool flag[1000][1000],lazy[1000][1000];
int dx[4]={0,1,0,-1};
int dy[4]={1,0,-1,0};
int que[2000000];

int main()
{
	int n,m;
	ll k,cnt;
	scanf("%d%d%I64d",&n,&m,&k);
	int i,j;
	for(i=0;i<n;i++)
		for(j=0;j<m;j++)
			scanf("%d",&mat[i][j]);
	int cx,cy,tx,ty,ii,top,rear,seed;
	memset(lazy,0,sizeof(lazy));
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			if(k%mat[i][j]==0 && k/mat[i][j]<=n*m && !lazy[i][j])
			{
				seed=mat[i][j];
				memset(flag,0,sizeof(flag));
				flag[i][j]=1;
				top=rear=0;
				que[top++]=i;
 				que[top++]=j;
				cnt=k/mat[i][j];
				while(top!=rear && top<2*cnt)
				{
					cx=que[rear++];
					cy=que[rear++];
					for(ii=0;ii<4;ii++)
					{
						tx=cx+dx[ii];
						ty=cy+dy[ii];
						if(tx<0 || ty<0 || tx>=n || ty>=m || flag[tx][ty] || mat[tx][ty]<seed) continue;
						flag[tx][ty]=1;
						if(mat[tx][ty]==seed) lazy[tx][ty]=1;
						que[top++]=tx;
						que[top++]=ty;
						if(top==2*cnt)
							break;
					}
				}
				if(top!=rear)
					break;
			}
		}
		if(j<m) break;
	}
	if(i<n) {
		puts("YES");
		for(i=0;i<n;i++)
		{
			for(j=0;j<m-1;j++)
			{
				if(flag[i][j]) printf("%d ",seed);
				else printf("0 ");
			}
			if(flag[i][j]) printf("%d\n",seed);
			else printf("0\n");
		}
	}
	else puts("NO");
	return 0;
}