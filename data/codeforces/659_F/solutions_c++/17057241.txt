#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<cmath>
#include<algorithm>
#include<map>
using namespace std;
typedef long long ll;
struct node{
    int x,y,val;
}arr[1000010];
bool cmp(node a,node b){
    return a.val>b.val;
}
int T,t,N,n,m;
int p[1000010],sum[1000010];
int num[1010][1010],_x[4]={-1,0,1,0},_y[4]={0,1,0,-1};
int num2[1010][1010];
ll K,ret,H;
int find(int x){
    return p[x]==x ? x : p[x]=find(p[x]);
}
void Union(int u,int v){
    u=find(u);
    v=find(v);
    if(u!=v){
        p[v]=u;
        sum[u]+=sum[v];
    }
}
void solve(int x,int y){
    int i,j,k,x2,y2;
    for(k=0;k<4;k++){
        x2=x+_x[k];
        y2=y+_y[k];
        if(1<=x2 && x2<=n && 1<=y2 && y2<=m && num[x][y]<=num[x2][y2])
            Union((x-1)*m+y,(x2-1)*m+y2);
    }
}
void dfs(int x,int y){
    num2[x][y]=H;
    ret--;
    int i,j,k,x2,y2;
    for(k=0;k<4;k++){
        x2=x+_x[k];
        y2=y+_y[k];
        if(1<=x2 && x2<=n && 1<=y2 && y2<=m && ret>0 && num[x2][y2]>=H && num2[x2][y2]==0)
            dfs(x2,y2);
    }
}
int main(){
    int i,j,k,pos,x,y;
    scanf("%d%d%I64d",&n,&m,&K);
    for(i=1;i<=n;i++)
        for(j=1;j<=m;j++){
            scanf("%d",&num[i][j]);
            pos=(i-1)*m+j;
            arr[pos].x=i;
            arr[pos].y=j;
            arr[pos].val=num[i][j];
        }
    N=n*m;
    for(i=1;i<=N;i++){
        p[i]=i;
        sum[i]=1;
    }
    sort(arr+1,arr+1+N,cmp);

    for(i=1;i<=N;i++){
        solve(arr[i].x,arr[i].y);
        //printf("find = %d\n",find((arr[i].x-1)*m+arr[i].y));
        if(K%arr[i].val==0 && K/arr[i].val<=sum[find((arr[i].x-1)*m+arr[i].y)]){
            printf("YES\n");
            ret=K/arr[i].val;
            H=arr[i].val;
            dfs(arr[i].x,arr[i].y);
            for(i=1;i<=n;i++){
                printf("%d",num2[i][1]);
                for(j=2;j<=m;j++)
                    printf(" %d",num2[i][j]);
                printf("\n");
            }
            return 0;
        }
    }
    printf("NO\n");
}
