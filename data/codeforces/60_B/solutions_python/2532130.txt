dx = [-1, 1, 0, 0, 0, 0]
dy = [0, 0, -1, 1, 0, 0]
dz = [0, 0, 0, 0, -1, 1]

def fill(layer, line, colmun):
    if 0 <= layer < k and 0 <= line < n and 0 <= colmun < m:
        if layers[layer][line][colmun] == '#':
            return
        elif filled[layer][line][colmun]:
            return
        else:
            #print '(layer, line. colmun)  ({}, {}, {})'.format(layer, line, colmun)
            filled[layer][line][colmun] = True
            for i in range(0, len(dx)):
                fill(layer + dz[i], line + dy[i], colmun + dx[i])

k, n, m = [int(i) for i in raw_input().rstrip().split()]
raw_input()
layers = []
filled = []
for i in range(0, k):
    layers.append([])
    filled.append([])
    for j in range(0, n):
        layers[i].append(raw_input().rstrip())
        filled[i].append([])
        for l in range(0, m):
            filled[i][j].append(False)
    raw_input()
x, y = [int(i) for i in raw_input().rstrip().split()]

fill(0, x - 1, y - 1)

result = 0
for i in range(0, k):
    for j in range(0, n):
        for l in range(0, m):
            if filled[i][j][l]:
                result += 1
print result
