nums = [int(x) for x in raw_input().split(' ')]
k = nums[0]
n = nums[1]
m = nums[2]

raw_input()
plates = []
for x in xrange(k):
	one_plate = []
	for lines in xrange(n):
		bools = [True if char == '.' else False for char in raw_input()]
		one_plate.append(bools)
	raw_input()
	plates.append(one_plate)

coords = [int(x) for x in raw_input().split(' ')]
row = coords[1] - 1
col = coords[0] - 1

dx = [1, 0, -1, 0, 0, 0]
dy = [0, 1, 0, -1, 0, 0]
dz = [0, 0, 0, 0, -1, 1]

count = 1

visited = set()
visited.add((0, col, row))

def dfs(z,y,x):
	global count
	for d in xrange(len(dx)):
		new_x = x + dx[d]
		new_y = y + dy[d]
		new_z = z + dz[d]
		
		if not (0 <= new_x < m) or not (0 <= new_y < n) or not (0 <= new_z < k):
			continue

		if plates[new_z][new_y][new_x] and (new_z,new_y,new_x) not in visited:
			count = count + 1
			visited.add((new_z,new_y,new_x))
			dfs(new_z,new_y,new_x)

dfs(0, col, row)
print count
