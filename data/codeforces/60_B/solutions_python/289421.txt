import sys

K,N,M=map(int,sys.stdin.readline().strip().split(' '))
sys.stdin.readline()
P = []

visited=[]
for i in range(K):
    L=[]
    for j in range(N):
        R = []
        for k in range(M):
            R.append(False)
        L.append(R)
    visited.append(L)

#print visited

def valid(a,b,c):
    return (a>=0) and (a<K) and (b>=0) and (b<N) and (c>=0) and (c<M) and \
       (not visited[a][b][c]) and (P[a][b][c]=='.')

def dfs(a,b,c):
    global visited
    cnt=1
    visited[a][b][c]=1
    if valid(a-1,b,c):
        cnt+=dfs(a-1,b,c)
    if valid(a+1,b,c):
        cnt+=dfs(a+1,b,c)
    if valid(a,b-1,c):
        cnt+=dfs(a,b-1,c)
    if valid(a,b+1,c):
        cnt+=dfs(a,b+1,c)
    if valid(a,b,c-1):
        cnt+=dfs(a,b,c-1)
    if valid(a,b,c+1):
        cnt+=dfs(a,b,c+1)
    return cnt

for k in range(K):
    R = []
    for i in range(N):
       R.append(sys.stdin.readline().strip())
    P.append(R)
    sys.stdin.readline()
x,y=map(int,sys.stdin.readline().strip().split(' '))
print dfs(0,x-1,y-1)

