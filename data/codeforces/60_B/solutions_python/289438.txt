
ans = 0


def fill(k, r, c, rows, cols, z, g, used):
    global ans
    if r < 0 or r >= rows or c < 0 or c >= cols: return
    if k < 0 or k >= z: return
    if (k, r, c) in used: return
    if g[k, r, c] == '#': return

    ans += 1
    used[k, r, c] = True
    fill(k-1, r, c, rows, cols, z, g, used)
    fill(k+1, r, c, rows, cols, z, g, used)
    for dr, dc in [(-1, 0), (0, 1), (1, 0), (0, -1)]:
        fill(k, r+dr, c+dc, rows, cols, z, g, used)
        
def main():
    z, rows, cols = map(int, raw_input().split())
    raw_input()

    g = {}
    for i in range(z):
        for row in range(rows):
            s = raw_input()
            for col in range(len(s)):
                g[i, row, col] = s[col]
        a = raw_input() # empty line

    r, c = map(int, raw_input().split())
    used = {}
    fill(0, r-1, c-1, rows, cols, z, g, used)
    print ans

    
            
        
main()
