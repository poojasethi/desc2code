#include <iostream>
#include <vector>
#include <algorithm>
#include <set>
#include <string>
#include <cmath>

using namespace std;

typedef long long int lint;
typedef vector<lint> bint;
lint modulo=100000000000000000LL;

void escriuextes(lint x)
{
  lint div=1;
  vector<int> v;
  while (div<modulo) {
    v.push_back(x%10);
    x/=10;
    div*=10;
  }
  reverse(v.begin(),v.end());
  for (int i=0;i<int(v.size());i++)
    cout<<v[i];
}

void escriu(bint v)
{
  cout<<v[1];
  for (int i=2;i<int(v.size());i++)
    escriuextes(v[i]);
  cout<<endl;
}

bint itob(int x)
{
  bint v(2);
  v[0]=1;
  v[1]=x;
  return v;
}

bint operator+(bint v1,bint v2)
{
  lint carry=0;
  reverse(v1.begin(),v1.end());
  v1.pop_back();
  reverse(v2.begin(),v2.end());
  v2.pop_back();
  bint v;
  for (int i=0;i<int(v1.size()) or i<int(v2.size()) or carry>0;i++) {
    lint val1=0;if (i<int(v1.size())) val1=v1[i];
    lint val2=0;if (i<int(v2.size())) val2=v2[i];
    v.push_back((val1+val2+carry)%modulo);
    carry=(val1+val2+carry)/modulo;
  }
  v.push_back(lint(v.size()));
  reverse(v.begin(),v.end());
  return v;
}

bint operator-(bint v1,bint v2)
{
  lint carry=0;
  reverse(v1.begin(),v1.end());
  v1.pop_back();
  reverse(v2.begin(),v2.end());
  v2.pop_back();
  bint v;
  for (int i=0;i<int(v1.size());i++) {
    lint val1=v1[i];
    lint val2=0;if (i<int(v2.size())) val2=v2[i];
    v.push_back((modulo+val1-val2-carry)%modulo);
    if (val2+carry>val1) carry=1;
    else carry=0;
  }
  while (int(v.size())>0 and v.back()==0) v.pop_back();
  if (int(v.size())==0) v.push_back(0);
  v.push_back(lint(v.size()));
  reverse(v.begin(),v.end());
  return v;
}

bint operator*(lint x,bint v)
{
  lint carry=0;
  reverse(v.begin(),v.end());
  v.pop_back();
  bint r;
  for (int i=0;i<int(v.size()) or carry>0;i++) {
    lint val=0;if (i<int(v.size())) val=v[i];
    r.push_back((x*val+carry)%modulo);
    carry=(x*val+carry)/modulo;
  }
  r.push_back(lint(r.size()));
  reverse(r.begin(),r.end());
  return r;
}

bint stob(string s)
{
  bint r=itob(0);
  for (int i=0;i<int(s.size());i++)
    r=10*r+itob(s[i]-'0');
  return r;
}

int main()
{
  string input;
  cin>>input;
  if (input=="2") {
    cout<<"YES"<<endl<<1<<endl<<1<<endl<<0<<endl;
  } else if (input=="13") {
    cout<<"YES"<<endl<<1<<endl<<2<<endl<<0<<endl;
  } else {
    bint buscat=stob(input);
    set<bint> poblacions;
    set<int> anys;
    set<pair<bint,bint> > s;
    s.insert(pair<bint,bint> (itob(13),itob(2)));
    int any=2;
    while ((*(s.begin())).first<=buscat) {
      any++;
      set<pair<bint,bint> > nexts;
      bool trobat=false;
      for (set<pair<bint,bint> >::iterator it=s.begin();it!=s.end();it++) {
	pair<bint,bint> p=*it;
	pair<bint,bint> p1(12*p.second,p.first);
	pair<bint,bint> p2(13*p.first-12*p.second,p.first);
	nexts.insert(p1);
	nexts.insert(p2);
	if (p1.first==buscat or p2.first==buscat)
	  trobat=true;
      }
      s=nexts;
      if (trobat) {
	for (set<pair<bint,bint> >::iterator it=s.begin();it!=s.end();it++)
	  if ((*it).first!=buscat)
	    poblacions.insert((*it).first);
	anys.insert(any);
      }
    }
    if (anys.size()>0) {
      cout<<"YES"<<endl;
      cout<<min(int(anys.size()),1000)<<endl;
      int escrits=0;
      for (set<int>::iterator it=anys.begin();
	   it!=anys.end() and escrits<1000;it++) {
	if (escrits>0) cout<<" ";
	cout<<*it;
	escrits++;
      }
      cout<<endl;
      cout<<min(int(poblacions.size()),1000)<<endl;
      escrits=0;
      for (set<bint>::iterator it=poblacions.begin();
	   it!=poblacions.end() and escrits<1000;it++) {
	escriu(*it);
	escrits++;
      }
    } else {
      cout<<"NO"<<endl;
    }
  }
}
