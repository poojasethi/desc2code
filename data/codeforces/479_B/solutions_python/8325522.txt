import heapq

def solve(n, k, a):
  if n == 1:
    print 0, 0
    return
  hmin, hmax = [], []
  for i in range(n):
    heapq.heappush(hmin, (a[i], i+1))
    heapq.heappush(hmax, (-a[i], i+1))
  op = []
  for i in range(k):
    minv, minp = heapq.heappop(hmin)
    maxv, maxp = heapq.heappop(hmax)
    maxv = -maxv
    if minv >= maxv or minp == maxp: break
    minv, maxv = minv + 1, maxv - 1
    op.append((maxp, minp))
    heapq.heappush(hmin, (minv, minp))
    heapq.heappush(hmax, (-maxv, maxp))
  for x, y in op:
    a[x-1], a[y-1] = a[x-1]-1, a[y-1]+1
  print max(a)-min(a), len(op)
  for x, y in op:
    print x, y

n, k = map(int, raw_input().split())
a = map(int, raw_input().split())
solve(n, k, a)
