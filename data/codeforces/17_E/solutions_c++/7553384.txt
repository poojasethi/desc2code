#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
char s[2000006],S[4000006];
long long R[4000006],n;
long long N,a[2000006];
const long long Mod=51123987;
void Manacher(char *s,int n)
{
	long long p=0,mx=0;
	for (int i=1;i<=n;i++)
	{
		if (mx>i) R[i]=min(mx-i,R[2*p-i]);
		else R[i]=1;
		while (S[R[i]+i]==S[i-R[i]]) R[i]++;
		if (i+R[i]-1>mx) mx=i+R[i]-1,p=i;
	}
}
long long Sum,Ans,Start[2000006],Finish[2000006];
int main()
{
	scanf("%d",&n);
	scanf("%s",s+1);
	S[0]='$';
	S[1]='#';
	for (int i=1;s[i];i++) S[i<<1]=s[i],S[(i<<1)+1]='#';
	N=n*2+1;
	S[++N]='@';
	Manacher(S,N);
	for (int i=1;i<=N;i++)
	{
		if (S[i]=='#') a[(i-(R[i]-2))>>1]++,a[(i+1)>>1]--;
		else a[(i-(R[i]-2))>>1]++,a[(i+2)>>1]--;
		Sum=Sum+(R[i]>>1);
	}
	for (int i=1;i<=n;i++) Start[i]=Start[i-1]+a[i];
	memset(a,0,sizeof(a));
	for (int i=1;i<=N-1;i++)
	{
		if (S[i]=='#') a[(i+1)>>1]++,a[(i+R[i])>>1]--;
		else a[i>>1]++,a[(i+R[i])>>1]--;
	}
	for (int i=1;i<=n;i++) Finish[i]=Finish[i-1]+a[i];
	long long S1=Sum-1;
	if (S1&1) Sum>>=1;
	else S1>>=1;
	Ans=(S1%Mod)*(Sum%Mod)%Mod;
	S1=0;
	for (int i=1;i<=n;i++)
	{
		Ans=(Ans+Mod-S1%Mod*Start[i]%Mod)%Mod;
		(S1+=Finish[i])%=Mod;
	}
	printf("%I64d\n",Ans);
	return 0;
}
