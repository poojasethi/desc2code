#include<stdio.h>
#include<algorithm>
using namespace std;
typedef long long ll;
int n,N;
char s[4000010];
int len[4000010];
int start[2000010],finish[2000010];
ll tot;
const ll MOD=51123987;
int main()
{
	scanf("%d%s",&n,s+1);
	for(int i=n;i;i--)s[i+i]=s[i],s[i+i+1]='#';
	N=n+n+1;
	s[1]='#';
	int m=0,p=1;
	for(int i=2;i<=N;i++)
	{
		int &x=len[i];
		if(m>=i)x=min(len[p+p-i],m-i);
		while(i-x>1&&i+x<N&&s[i-x-1]==s[i+x+1])x++;
		if(i+x>m)m=i+x,p=i;
	}
	for(int i=1;i<=N;i++)
	{
		if((i&1)&&!len[i])continue;
		int l=(i-len[i]+1)/2,r=(i+len[i])/2;
		int len=r-l+1,c=(len+1)/2;
		tot+=c;
		start[l]++,start[l+c]--;
		finish[r-c+1]++,finish[r+1]--;
	}
	tot%=MOD;
	tot=tot*(tot-1)/2%MOD;
	for(int i=1;i<=n;i++)start[i]=(start[i]+start[i-1])%MOD,
		finish[i]=(finish[i-1]+finish[i])%MOD;
	ll ans=0,t=0;
	for(int i=1;i<=n;i++)ans=(ans+t*start[i])%MOD,t=(t+finish[i])%MOD;
	ans=((tot-ans)%MOD+MOD)%MOD;
	printf("%I64d\n",ans);
	return 0;
}
