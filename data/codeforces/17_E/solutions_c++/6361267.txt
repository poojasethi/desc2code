#include <algorithm>
#include <cstdio>

using namespace std;

typedef long long LL;

const int MAXN = 4444444, MOD = 51123987;

char s[MAXN], a[MAXN];
int r[MAXN], c[MAXN], e[MAXN];
LL d[MAXN];

int main() {
    int n = 0, p = 0, mx = 0, ans = 0;
    scanf("%*d%s", s);
    a[0] = '$';
    for (int i = 0; s[i]; ++i)
        a[++n] = '#', a[++n] = s[i];
    a[++n] = '#';
    for (int i = 1; i < n; ++i) {
        r[i] = mx > i ? min(r[2 * p - i], mx - i) : 0;
        for (; a[i - r[i]] == a[i + r[i]]; ++r[i]);
        if (i + r[i] > mx)
            mx = i + r[p = i];
        (ans -= e[i] - e[i - r[i]]) %= MOD;
        ++c[i], --c[i + r[i]];
        c[i] += c[i - 1];
        d[i + 1] = d[i] + (a[i] == '#' ? 0 : c[i]);
        e[i + 1] = (e[i] + (a[i + 1] == '#' ? 0 : d[i + 1])) % MOD;
    }
    if (d[n] & 1)
        (ans += (d[n] - 1 >> 1) % MOD * (d[n] % MOD) % MOD) %= MOD;
    else
        (ans += (d[n] >> 1) % MOD * ((d[n] - 1) % MOD) % MOD) %= MOD;
    printf("%d\n", (ans + MOD) % MOD);
    return 0;
}
