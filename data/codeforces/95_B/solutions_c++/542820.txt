#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <complex>
#include <queue>
#include <map>
#include <set>
#include <cstring>
#include <cstdlib>
#include <string>
#include <cmath>
using namespace std;

#define REP(i,n) for(int i=0;i<(int)n;++i)
#define FOR(i,c) for(__typeof((c).begin())i=(c).begin();i!=(c).end();++i)
#define ALL(c) (c).begin(), (c).end()
const int INF = 1<<29;

string res;
string s;
int n;

bool solve(int pos, int n4, int n7, bool bigger) {
//  printf("pos=%d,n4=%d,n7=%d,bigger=%d\n",pos,n4,n7,bigger);
  if (pos == n) return 1;
  if (bigger) {
    REP(i,n7)
      res.push_back('7');
    REP(i,n4)
      res.push_back('4');
    return 1;
  }

  if (n4 && s[pos] <= '4' && solve(pos+1, n4-1, n7, s[pos] < '4')) {
    res.push_back('4');
    return 1;
  }
  if (n7 && s[pos] <= '7' && solve(pos+1, n4, n7-1, s[pos] < '7')) {
    res.push_back('7');
    return 1;
  }
  return 0;
}

int main() {
  while(cin >> s) {
    n = s.size();
    res = "";
    if (n%2==0 && solve(0, n/2, n/2, 0)) {
      reverse(ALL(res));
      cout << res << endl;
    } else {
      cout << string(n/2+1, '4') + string(n/2+1, '7') << endl;
    }
  }
}
