#include <vector> 
#include <list> 
#include <map> 
#include <set> 
#include <deque> 
#include <queue> 
#include <stack> 
#include <bitset> 
#include <algorithm> 
#include <functional> 
#include <numeric> 
#include <utility> 
#include <sstream> 
#include <iostream> 
#include <iomanip> 
#include <cstdio> 
#include <cmath> 
#include <cstdlib> 
#include <cctype> 
#include <string> 
#include <cstring> 
#include <ctime> 

using namespace std;

int a[10];
int ap[10][4];
int ans[10];
int ansp[10][4];

int cap,n;

void search(int x)
{
	int i,j,k;
	if (a[x]==n)
	{
		memcpy(ans,a,sizeof(a));
		memcpy(ansp,ap,sizeof(ap));
		cap=x-1;
		return;
	}
	if (x==cap) return;
	for (i=0;i<=x;i++)
		for (k=1;a[i]*k<=n&&k<=8;k*=2)
		{
			if (a[i]*k>a[x])
			{
				a[x+1]=a[i]*k;
				ap[x][0]=-1;
				ap[x][1]=k;
				ap[x][2]=i;
				search(x+1);
				if (x==cap) return;
			}
		}
	for (i=0;i<=x;i++)
		for (j=0;j<=x;j++)
			for (k=1;a[i]+a[j]*k<=n&&k<=8;k*=2)
			{
				if (a[i]+a[j]*k>a[x])
				{
					a[x+1]=a[i]+a[j]*k;
					ap[x][0]=i;
					ap[x][1]=k;
					ap[x][2]=j;
					search(x+1);
					if (x==cap) return;
				}
			}
}

int main()
{
	int i,max;

	scanf("%d",&n);
	max=0;
	//for (n=1;n<=255;n++)
	{
	cap=5;
	a[0]=1;
	search(0);
	printf("%d\n",cap+1);
	if (cap+1>max) max=cap+1;
	for (i=0;i<cap+1;i++)
	{
		printf("lea e%cx, [",'a'+i+1);
		if (ansp[i][0]!=-1)
		{
			printf("e%cx + ",'a'+ansp[i][0]);
		}
		printf("%d*e%cx]\n",ansp[i][1],'a'+ansp[i][2]);
	}
	}
	//printf("max: %d\n",max);
	return 0;
}

