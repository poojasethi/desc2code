#include<cstdio>
#include<cstring>
#include<string>
using namespace std;

int n,r[30],v[300];
int cnt=0;
string s[8];

string ts (int a) {
	string ret="";
	ret+=(a+'a');
	return ret;
}

string ns (int a) {
	string ret="";
	ret+=(a+'0');
	return ret;
}

void dfs (int dep,int cur) {
	if (r[cur-1]>255) return;
	//for (int i=0; i<cur; i++) printf("%d ",r[i]);
	//printf("\n");
	if (v[r[cur-1]]!=-1 && v[r[cur-1]]<cur-1) return;
	
	if (dep==0) {
		//printf("  %d\n",r[cur-1]);
		if (v[r[cur-1]]==-1 && r[cur-1]==n) {
			printf("%d\n",cur-1);
			for (int i=0; i<cur-1; i++)
				printf("%s\n",s[i].c_str());
		}
		v[r[cur-1]]=cur-1;
		return;
	}
	for (int i=0; i<cur; i++)
		for (int j=0; j<4; j++) {
			r[cur]=r[i]*(1<<j);
			s[cur-1]="lea e"+ts(cur)+"x, ["+ns(1<<j)+"*e"+ts(i)+"x]";
			dfs(dep-1,cur+1);
			r[cur]=0;
		}
	for (int i=0; i<cur; i++)
		for (int j=0; j<cur; j++) 
			for (int k=0; k<4; k++) {
				r[cur]=r[i]+r[j]*(1<<k);
				s[cur-1]="lea e"+ts(cur)+"x, [e"+ts(i)+"x + "+ns(1<<k)+"*e"+ts(j)+"x]";
				dfs(dep-1,cur+1);
				r[cur]=0;
			}
}

int main() {
	scanf("%d",&n);
	memset(v,-1,sizeof(v));
	for (int i=0; i<6; i++) {
		memset(r,0,sizeof(r));
		r[0]=1;
		dfs(i,1);
		if (v[n]!=-1) break;
	}
}
