#include<cstdio>
#include<iostream>

#define Max 30

using namespace std;

int arr[Max];
int arr2[Max];

int ansr[Max];
int ansr2[Max];
int N, ans;

bool dfs(int n)
{
	if(arr[n-1] > N)
		return 0;

	int h;
	long long t;

	for(t = arr[n-1], h=0; t < N ; t*=9, h++);

	if(h+n > ans)
		return 0;

	if(arr[n-1] == N)
	{
		ans = n;

		for(int i=0;i<n;i++)
		{
			ansr[i] = arr[i];
			ansr2[i] = arr2[i];
		}

		return 1;
	}

	for(int j=1;j<=8;j*=2)
	{
		for(int i=n-1;i>=0;i--)
		{
			arr[n] = arr[i] + j*arr[n-1];

			arr2[n] = j*10000 + i;

			if( dfs(n+1) )
				return 1;
		}

		for(int i=n-1;i>=0;i--)
		{
			arr[n] = j*arr[i] + arr[n-1];
			arr2[n] = 100000 + j*10000 + i;
			if( dfs(n+1) )
				return 1;
		}
		arr[n] = j*arr[n-1];
		arr2[n] = 200000 + j*10000;
		if( dfs(n+1) )
			return 1;
	}



	return 0;
}

char sa[Max], sb[Max], sc[Max];

char* str(char s[], int now)
{
	s[0] = 'e';
	s[1] = 'a' + now;
	s[2] = 'x';
	s[3] = 0;

	return s;
}

int main()
{
	scanf("%d", &N);

	ans = 0;
	arr[0] = 1;

	while( !dfs(1) )
	{
		ans++;
	}

	printf("%d\n", ans-1);
	for(int i=1;i<ans;i++)
	{
		int a = ansr2[i] / 100000;
		int b = (ansr2[i] / 10000) % 10;
		int c = ansr2[i] % 10000;

		if(a == 0)
			printf("lea %s, [%s + %d*%s]\n", str(sa, i), str(sb, c), b, str(sc, i-1));
		else if( a == 1)
			printf("lea %s, [%s + %d*%s]\n", str(sa, i), str(sb, i-1), b, str(sc, c));
		else
			printf("lea %s, [%d*%s]\n", str(sa, i), b, str(sb, i-1));

	}
}
