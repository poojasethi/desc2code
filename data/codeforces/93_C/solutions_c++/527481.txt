#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
#define li		long long
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())

#define MAX 300
int a[MAX];
int power[]={2,4,8};
int num=0;
int n;
vector<string> res;
int recur(int turn){
	if(a[turn]==n) return 1;
	if(turn==num) return 0;
	for(int i=0;i<=turn;i++)rep(j,3)if(a[i]*power[j]<MAX){
		a[turn+1]=a[i]*power[j];
		if(recur(turn+1)){
			string str="lea eax, [0*eax]";
			str[5]+=turn+1;
			str[10]='0'+power[j];
			str[13]+=i;
			res.pb(str);
			return 1;
		}
	}
	for(int i=0;i<=turn;i++)for(int j=0;j<=turn;j++)if(a[i]+a[j]<MAX){
		a[turn+1]=a[i]+a[j];
		if(recur(turn+1)){
			string str="lea eax, [eax + eax]";
			str[5]+=turn+1;
			str[11]+=i;
			str[17]+=j;
			res.pb(str);
			return 1;
		}
	}
	for(int i=0;i<=turn;i++)for(int j=0;j<=turn;j++)rep(k,3)if(a[i]+a[j]*power[k]<MAX){
		a[turn+1]=a[i]+a[j]*power[k];
		if(recur(turn+1)){
			string str="lea eax, [eax + 0*eax]";
			str[5]+=turn+1;
			str[11]+=i;
			str[16]='0'+power[k];
			str[19]+=j;
			res.pb(str);
			return 1;
		}
	}
	return 0;
}

int main(){
	cin>>n;
	a[0]=1;
	num=0;
	while(recur(0)==0) num++;
	reverse(res.begin(),res.end());
	cout<<sz(res)<<endl;
	rep(i,sz(res)) cout<<res[i]<<endl;
}
