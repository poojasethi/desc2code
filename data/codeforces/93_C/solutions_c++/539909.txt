#include<cstdio>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

char ans[6][32];
int n,reg[26]={1},n_ans=6;

bool solve(int pos){
	if(reg[pos]>n || pos>=n_ans) return false; // pruning

	if(reg[pos]==n){ n_ans=pos; return true; }

	bool ok=false;
	rep(i,pos+1) rep(j,pos+1) for(int k=1;k<=8;k*=2) {
		int v=reg[i]+k*reg[j];
		if(v<reg[pos]) continue; // pruning

		reg[pos+1]=v;
		if(solve(pos+1)){
			sprintf(ans[pos],"e%cx, [e%cx + %d*e%cx]",pos+1+'a',i+'a',k,j+'a');
			ok=true;
		}
	}

	rep(i,pos+1) for(int k=1;k<=8;k*=2) {
		int v=k*reg[i];
		if(v<reg[pos]) continue; // pruning

		reg[pos+1]=v;
		if(solve(pos+1)){
			sprintf(ans[pos],"e%cx, [%d*e%cx]",pos+1+'a',k,i+'a');
			ok=true;
		}
	}

	return ok;
}

int main(){
	scanf("%d",&n);

	solve(0);

	printf("%d\n",n_ans);
	rep(i,n_ans) printf("lea %s\n",ans[i]);

	return 0;
}
