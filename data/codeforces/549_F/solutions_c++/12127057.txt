#include<vector>
#include<cstdio>
#include<cstring>
#include<algorithm>

#define MAXN 300010
#define MAXK 1000010

using namespace std;
typedef long long LL;
int n,k,a[MAXN];
int b[MAXN],c[MAXN];
LL ans,s[MAXK];
vector<int> v[MAXN];
void get(int* b,int n,int* c,int m,int d)
{
	for (int i=1,j=1,p=0,sum=0;i<=n;++i)
	{
		p=max(p,b[i]);
		sum=(sum+b[i])%k;
		for (;j<=m && c[j]<p+d;++j);
		v[j-1].push_back((sum-p%k+k)%k);
	}
	for (int j=1,w=0;j<=m;j++)
	{
		w=(w+c[j])%k;
		++s[w];
		for (int i=0;i<int(v[j].size());++i)
		{
			ans+=s[(k-v[j][i])%k];
		}
	}
	for (int j=1,w=0;j<=m;j++)
	{
		w=(w+c[j])%k;
		--s[w];
		v[j].clear();
	}
}
void divide(int l,int r)
{
	if (l==r) return;
	int mid=(l+r)>>1;
	for (int i=mid;i>=l;i--) b[mid+1-i]=a[i];
	for (int i=mid+1;i<=r;i++) c[i-mid]=a[i];
	get(b,mid-l+1,c,r-mid,0);
	get(c,r-mid,b,mid-l+1,1);
	divide(l,mid);
	divide(mid+1,r);
}
int main()
{
	//freopen("F.in","r",stdin),freopen("F.out","w",stdout);
	scanf("%d%d",&n,&k);
	for (int i=1;i<=n;i++) scanf("%d",&a[i]);
	divide(1,n);
	printf("%I64d",ans);
	return 0;
}
