#include<iostream>
#include<cstdlib>
#include<cstdio>
#include<algorithm>
#include<vector>
#define LL long long
#define N 300010
#define M 1000010
using namespace std;
LL ans;
int A[N],n,mod,sum[N],qe[N];
int L[N],R[N];

vector<int>q[M];

int Ask(int k,int l,int r) {

	int x=upper_bound(q[k].begin(),q[k].end(),r)-q[k].begin()-1;
	int y=lower_bound(q[k].begin(),q[k].end(),l)-q[k].begin()-1;
	
	return x-y;
}
int main() 
{
//	freopen("f.in","r",stdin);
//	freopen("f2.out","w",stdout);
	scanf("%d%d",&n,&mod);
	for (int i=1;i<=n;i++) scanf("%d",&A[i]);
	
	for (int i=1;i<=n;i++) {
		sum[i]=(sum[i-1]+A[i])%mod;
	}
	
	for (int i=0;i<=n;i++) q[sum[i]].push_back(i);

	for (int i=1;i<=n;i++) for (L[i]=i-1;L[i]&&A[L[i]]<A[i];L[i]=L[L[i]]);
	
	for (int i=n;i>=1;i--) for (R[i]=i+1;R[i]<=n&&A[R[i]]<=A[i];R[i]=R[R[i]]);
//	

	
	for (int i=1;i<=n;i++) {
		
		if (i-L[i]<R[i]-i) 
			for (int j=L[i]+1;j<=i;j++) ans+=Ask((sum[j-1]+A[i])%mod,i,R[i]-1);
		else 
			for (int j=i;j<=R[i]-1;j++) ans+=Ask((sum[j]-A[i]%mod+mod)%mod,L[i],i-1);
	}

//			
	printf("%I64d\n",ans-n);
	return 0;
}
