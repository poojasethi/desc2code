#include <iostream>
#include <cmath>
#include <map>
#include <vector>

using namespace std;

const int limite=1000001;

typedef long long int ll;

ll modulo;

ll opuesto(ll x)
{
  ll op=(-x)%modulo;
  if (op<0) op+=modulo;
  return op;
}

int n;
int a[limite];

ll solmodulo=0;

int cuantossumansin[limite];
int cuantossumancon[limite];
int metidos[limite];
int imetidos=0;

void calcula(int i1,int i2)
{
  if (i1>=i2) return;
  int imed=(i1+i2)/2;
  calcula(i1,imed);
  calcula(imed+1,i2);
  {
    ll sumale=0;
    int maximole=0;
    for (int i=imed;i>=i1;i--) {
      sumale+=a[i];
      maximole=max(maximole,a[i]);
      cuantossumansin[(sumale-maximole)%modulo]++;
      metidos[imetidos++]=sumale%modulo;
      metidos[imetidos++]=(sumale-maximole)%modulo;
    }
  }
  {
    ll sumale=0,sumari=0;
    int maximole=0,maximori=0;
    int ile=imed+1;
    for (int iri=imed+1;iri<=i2;iri++) {
      sumari+=a[iri];
      maximori=max(maximori,a[iri]);
      while (ile-1>=i1 and a[ile-1]<maximori) {
	ile--;
	sumale+=a[ile];
	maximole=max(maximole,a[ile]);
	cuantossumancon[sumale%modulo]++;
	cuantossumansin[(sumale-maximole)%modulo]--;
      }
      solmodulo+=cuantossumancon[opuesto(sumari-maximori)]+cuantossumansin[opuesto(sumari)];
    }
  }
  for (;imetidos>0;imetidos--)
    cuantossumancon[metidos[imetidos-1]]=cuantossumansin[metidos[imetidos-1]]=0;
}

int main()
{
  ios::sync_with_stdio(false);
  cin>>n>>modulo;
  for (int i=1;i<=n;i++)
    cin>>a[i];
  calcula(1,n);
  cout<<solmodulo<<endl;
}
