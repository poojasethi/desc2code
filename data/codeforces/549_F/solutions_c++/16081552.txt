#include<cstdio>
#include<cstring>
#include<vector>
#include<algorithm>
#define ll long long
using namespace std;
const int Max=3e5+10;
ll s[Max],a[Max],b[Max];
int pre[Max],nxt[Max],k,n;
vector<int> f[1000005];
bool cmp(int x,int y)
{
	return a[x]<a[y];
}
ll query(int l,int r,ll goal)
{
	return upper_bound(f[goal].begin(),f[goal].end(),r)-lower_bound(f[goal].begin(),f[goal].end(),l);
}
ll cal(int m)
{
	int l=pre[m]+1,r=nxt[m]-1;
	ll sum=0;
	if(r-m<m-l)
	{
		for(int i=m+1;i<=r;i++)
			sum+=query(l-1,m-1,(s[i]-a[m]%k+k)%k);
		sum+=query(l-1,m-2,(s[m]-a[m]%k+k)%k);
	}
	else 
	{
		for(int i=l;i<m;i++)
			sum+=query(m,r,(s[i-1]+a[m])%k);
		sum+=query(m+1,r,(s[m-1]+a[m])%k);
	}
	pre[nxt[m]]=pre[m];
	nxt[pre[m]]=nxt[m];
	return sum;
}
int main()
{
	scanf("%d%d",&n,&k);
	for(int i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		s[i]=(s[i-1]+a[i])%k;
		b[i]=i;
		pre[i]=i-1;nxt[i]=i+1;
	}
	nxt[0]=1;pre[n+1]=n;
	for(int i=0;i<=n;i++) f[s[i]].push_back(i);
	sort(b+1,b+n+1,cmp);
	ll ans=0;
	for(int i=1;i<=n;i++)
		ans+=cal(b[i]);
	printf("%lld\n",ans);
	return 0;
}
			   	   	   	 	 		 	 	   	 	