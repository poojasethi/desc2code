#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdlib>
#include <cassert>
#include <cstdio>
#include <vector>
#include <cmath>
#include <ctime>
#include <set>
#include <map>
#define N 300100
typedef long long ll;
using namespace std;
int n, k, a[N], s[N], lf[N], rg[N], p;
vector<int>  b[1000100];
ll ans;
int get(int x,int l,int r){
    return upper_bound(b[x].begin(),b[x].end(),r)-lower_bound(b[x].begin(),b[x].end(),l);
}
int main(){
	scanf("%d %d\n",&n, &k);
	b[0].push_back(0);
	for(int i=1; i<=n; i++){
		scanf("%d ", a+i);
		s[i]=(s[i-1]+a[i])%k;
        b[s[i]].push_back(i);
	}
    for(int i=1; i<=n; i++){
        p=i-1;
        while(p>0&&a[p]<=a[i]){
            p=lf[p]-1;
        }
        lf[i]=p+1;
    }
    for(int i=n; i>0; i--){
        p=i+1;
        while (p<=n&&a[i]>a[p]){
            p=rg[p]+1;
        }
        rg[i]=p-1;
    }
    for(int i=1; i<=n; i++){
        if((i<<1)>rg[i]+lf[i])
			for(int j=i; j<=rg[i]; j++)
                ans+=get((s[j]-a[i]%k+k)%k, lf[i]-1, i-1);
        else
			for(int j=lf[i]-1; j<=i-1; j++)
                ans+=get((s[j]+a[i])%k, i, rg[i]);
    }
    ans-=n;
	cout<<ans;	
	return 0;
}
