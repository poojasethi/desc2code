#include<stdio.h>
#include<string.h>
#include<algorithm>
#include<string>
#include<vector>
#include<iostream>
using namespace std;

const int maxn=300010;

int arr[maxn],s[maxn];
int pre[maxn],nxt[maxn];
int q[maxn],top;
int cnt[1000000];

vector<pair<int,int> >vec[maxn];
int main()
{
	int n,k,i,j;
	cin>>n>>k;
	for(i=1;i<=n;i++)
		scanf("%d",&arr[i]);
	
	for(i=1;i<=n;i++)
		nxt[i]=n+1,s[i]=(s[i-1]+arr[i])%k;
	
	for(i=1;i<=n;i++)
	{
		while(top&&arr[q[top]]<arr[i])
			top--;
		if(top)
			pre[i]=q[top];
		q[++top]=i;
	}
	top=0;
	for(i=n;i>=1;i--)
	{
		while(top&&arr[q[top]]<=arr[i])
			top--;
		if(top)
			nxt[i]=q[top];
		q[++top]=i;
	}

	long long ans=0;
	int ca=0;
	for(i=1;i<=n;i++)
	{
		int l=pre[i]+1,r=nxt[i]-1;
		int num1=i-l+1,num2=r-i+1;

		if(num1<=num2)
		{
			for(j=l;j<=i;j++)
			{
				int need=(s[j-1]+arr[i])%k;
				vec[i-1].push_back(make_pair(-i,need));
				vec[r].push_back(make_pair(i,need));
			}
		}
		else
		{
			for(j=i;j<=r;j++)
			{
				int need=((s[j]-arr[i])%k+k)%k;
				if(l-1)
				vec[l-2].push_back(make_pair(-i,need));
				vec[i-1].push_back(make_pair(i,need));
			}
		}
		ans--;
	}
	for(i=0;i<=n;i++)
	{
		cnt[s[i]]++;
		for(j=0;j<vec[i].size();j++)if(vec[i][j].first>0)
			ans+=cnt[vec[i][j].second];
		else
			ans-=cnt[vec[i][j].second];
	}
	cout<<ans<<endl;
}
