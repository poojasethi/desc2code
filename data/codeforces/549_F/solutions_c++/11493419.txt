#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<ctime>
#include<algorithm>
#include<string>
#include<vector>
#include<set>
#include<map>
#include<iostream>
#define N 320005
#define Long long long
#define For(i,l,r) for(int i=l;i<=r;i++)
#define Dor(i,r,l) for(int i=r;i>=l;i--)
#define link Link
#define next Next
#define y1 Y1
using namespace std;
int mo;
int a[N],sum[N];
Long ans;
struct hash{
    int num[1000005];
    void Modify(int val,int ret){
        val%=mo; if(val<0) val+=mo;
        num[val]+=ret;
    }
    void Query(int val,int cnt){
        val=val+cnt; val=-val;
        val%=mo; if(val<0) val+=mo;
        ans+=num[val];
    }
}Hashl,Hashr;
void work(int tl,int tr){
    if(tl==tr) return;
    
    int mid=(tl+tr)>>1;
    int l=mid,r=mid+1,cnt=0;
    
    while(tl<=l || r<=tr){
        if(r>tr || (tl<=l && a[l]<=a[r])){
            cnt=max(cnt,a[l]);
            l--;
            Hashr.Query(-sum[l],-cnt);
            Hashl.Modify(-sum[l],1);
        }else{
            cnt=max(cnt,a[r]);
            Hashl.Query(sum[r],-cnt);
            Hashr.Modify(sum[r],1);
            r++;
        }
    }
    
    l=mid; r=mid+1;
    while(tl<=l) Hashl.Modify(-sum[--l],-1);
    while(r<=tr) Hashr.Modify(sum[r++],-1);
    
    work(tl,mid);
    work(mid+1,tr);
}
int main(){
    int n; scanf("%d%d",&n,&mo);
    For(i,1,n) scanf("%d",&a[i]);
    For(i,1,n) sum[i]=(a[i]+sum[i-1])%mo;
    work(1,n); cout<<ans<<endl;
}