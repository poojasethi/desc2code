#include<stdio.h>
#include<iostream>
#define M 1000000
using namespace std;
int c[M + 5] , n , k , s[M + 5] , a[M + 5];
long long ans = 0;
void solve(int l,int r){
	if(l == r)	return;
	int mid = (l + r)/2;
	int max_val = 0 , curr = 0 , ptr = mid + 1;
	for(int i = mid ; i >= l ; i--){
		curr = (curr + a[i])%k ; max_val = max(max_val , a[i]);
		while(ptr <= r && a[ptr] <= max_val){
			c[(s[ptr] - s[mid] + k)%k]++; ptr++; 
		}
		ans += c[(max_val - curr + k)%k];
	}
	for(int i = mid + 1 ; i <= r ; i++)	c[(s[i] - s[mid] + k)%k] = 0;
	max_val = 0  , curr = 0 , ptr = mid;
	for(int i = mid + 1 ; i <= r ; i++){
		curr = (curr + a[i])%k; max_val = max(max_val , a[i]);
		while(ptr >= l && a[ptr] < max_val){
			c[(s[mid] - s[ptr - 1] + k)%k]++; ptr--;
		}
		ans += c[(max_val - curr + k)%k];
	}
	for(int i = mid ; i >= l ; i--)	c[(s[mid] - s[i - 1] + k)%k] = 0;
	solve(mid + 1 , r); solve(l , mid);
}
main(){
	//freopen("test.inp","r",stdin);
	scanf("%d %d",&n,&k);
	for(int i = 1 ; i <= n ; i++){
		scanf("%d",&a[i]);
		s[i] = (s[i - 1] + a[i])%k;
	}
	solve(1 , n);
	cout<<ans;
}