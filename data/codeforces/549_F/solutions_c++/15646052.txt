#include <iostream>
#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <string>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#define LL long long
using namespace std;
int n,k;
LL s[300005];
vector<int> f[1000005];
LL num[300005];
int pre[300005],nxt[300005];
LL ask(int l,int r,LL in){
    return upper_bound(f[in].begin(),f[in].end(),r)-lower_bound(f[in].begin(),f[in].end(),l);
}
LL cal(int m){
    int l = pre[m]+1,r = nxt[m]-1;
    LL maxn = num[m];
    LL ans = 0;
    if( r - m < m - l){
        for(int i=m+1;i<=r;i++)
            ans+=(ask(l-1,m-1,(s[i]-maxn%k+k)%k));
        ans+=(ask(l-1,m-2,(s[m]-maxn%k+k)%k));
    }else{
        for(int i=l;i<m;i++)
            ans+=(ask(m,r,(s[i-1]+maxn)%k));
        ans+=(ask(m+1,r,(s[m-1]+maxn)%k));
    }
    pre[nxt[m]] = pre[m];
    nxt[pre[m]] = nxt[m];
    return ans;
}
int ord[300005];
int cmp(int a,int b){
    return num[a]<num[b];
}
int main(){
    cin>>n>>k;
    s[0] = 0;
    for(int i=1;i<=n;i++){
        cin>>num[i],s[i] = (s[i-1]+num[i])%k,ord[i] = i;
        pre[i] = i-1;
        nxt[i] = i+1;
    }
    nxt[0] = 1;
    nxt[n] = n+1;
    pre[n+1] = n;
    for(int i=0;i<=n;i++)f[s[i]].push_back(i);
    sort(ord+1,ord+n+1,cmp);
    LL ans = 0;
    for(int i=1;i<=n;i++){
        int pos = ord[i];
        ans+=cal(pos);
    }
    cout<<ans<<endl;
    return 0;
}
	 			 	 	  	  	     			 	 		  	