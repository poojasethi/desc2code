#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
const int maxn=300300;
struct array
{
	int a[3000100],tim[3000100],t;
	void init(){t++;}
	int & operator [] (int x)
	{if(tim[x]!=t) {tim[x]=t;a[x]=0;} return a[x];}
}cnt;
int n,k;long long ans;
int a[maxn],sum[maxn],son[maxn][4],stack[maxn],top;
void solve(int x,int l,int r)
{
    if(!x) return ;
    if(x-l<r-x)
    {
        solve(son[x][0],l,x-1);cnt.init();
        solve(son[x][1],x+1,r);cnt[sum[x]]++;
        for(int i=l-1;i<=x-1;i++) ans+=cnt[(sum[i]+a[x])%k];
        cnt[sum[x]]--;
        for(int i=l;i<=x;i++)cnt[sum[i]]++;
    }
    else
    {
        solve(son[x][1],x+1,r);cnt.init();
        solve(son[x][0],l,x-1);cnt[sum[l-1]]++;
        for(int i=x;i<=r;i++)ans+=cnt[(sum[i]+k-a[x]%k)%k];
        cnt[sum[l-1]]--;
        for(int i=x;i<=r;i++)cnt[sum[i]]++;
    }
}
int main()
{
   	scanf("%d%d",&n,&k);
    for(int i=1;i<=n;i++)
	{
		scanf("%d",&a[i]);
		sum[i]=(sum[i-1]+a[i])%k;
	}
    for(int i=1;i<=n;i++)
    {
        while(top&& a[stack[top]]<a[i] )
        {
            if(top>=2 && a[stack[top-1]]<a[i] )
                son[stack[top-1]][1]=stack[top];
            else
                son[i][0]=stack[top];
            stack[top--]=0;
        }
        stack[++top]=i;
    }
    for(int i=1;i<top;i++)son[stack[i]][1]=stack[i+1];
    solve(stack[1],1,n);
    printf("%I64d\n",ans-n);
    return 0;
}
                                                            