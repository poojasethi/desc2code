import sys
from collections import Counter
import heapq


n = int(sys.stdin.readline())
ints = [int(s) for s in sys.stdin.readline().split(' ')]
balls = Counter()

for i in xrange(n):
    balls[ints[i]] += 1

ball_freq = []
for k in balls:
    ball_freq.append((-balls[k], k))

heapq.heapify(ball_freq)

out = []
while True:
    if len(ball_freq) < 3:
        break
    af, av = heapq.heappop(ball_freq)
    bf, bv = heapq.heappop(ball_freq)
    cf, cv = heapq.heappop(ball_freq)
    snowman = ' '.join(str(i) for i in sorted([av, bv, cv], reverse=True))
    out.append(snowman)
    af, bf, cf = af+1, bf+1, cf+1
    af and heapq.heappush(ball_freq, (af, av))
    bf and heapq.heappush(ball_freq, (bf, bv))
    cf and heapq.heappush(ball_freq, (cf, cv))

print len(out)
if out:
    print '\n'.join(out)
