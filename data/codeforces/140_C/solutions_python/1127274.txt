from collections import defaultdict
import heapq


raw_input()
d = defaultdict(int)
for j in [int(i) for i in raw_input().split()]:
  d[j] += 1

h = list([(-1 * v, k) for k, v in d.iteritems()])
heapq.heapify(h)

ret = []


while len(h) > 2:
  a, b, c  = heapq.heappop(h), heapq.heappop(h), heapq.heappop(h)

  ret.append(sorted([a[1], b[1], c[1]], reverse=True))

  for x, xi in ((i+1, j) for i, j in (a, b, c)):
    if x:
      heapq.heappush(h, (x, xi))

print len(ret)
for a, b, c in ret:
  print a, b, c

