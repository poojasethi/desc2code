from heapq import *
def m():
        n=input()
        r=sorted(map(int,raw_input().split()))
        d=[]
        p=r[0]
        c=1
        for i in r[1:]:
                if i==p:c+=1
                else:d.append((-c,p));c=1
                p=i
        d.append((-c,p))
        z=""
        heapify(d)
        q=0
        while len(d)>2:
                q+=1
                a=heappop(d)
                b=heappop(d)
                c=heappop(d)
                A,B,C=sorted((a[1],b[1],c[1]))
                z+="%d %d %d\n"%(C,B,A)
                if a[0]<-1:heappush(d,(a[0]+1,a[1]))
                if b[0]<-1:heappush(d,(b[0]+1,b[1]))
                if c[0]<-1:heappush(d,(c[0]+1,c[1]))
        print q
        print z

m()
