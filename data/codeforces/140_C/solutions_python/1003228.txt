import heapq

#"""
n = raw_input()
balls = map(int, raw_input().split(" "))
"""
n = 3
balls = [1, 2, 3, 4, 5, 6, 7]
n = 3
balls = [2, 2, 3]
#"""
counts = {}
for ball in balls:
  counts[ball] = counts.get(ball, 0) + 1

queue = list(reversed(sorted((-b, a) for a, b in counts.items())))

heapq.heapify(queue)

ans = []
#print queue
while len(queue) >= 3:
  a = heapq.heappop(queue)
  b = heapq.heappop(queue)
  c = heapq.heappop(queue)
  vals = tuple(reversed(sorted((a[1], b[1], c[1]))))
  ans.append(vals)

  a = (a[0]+1, a[1])
  b = (b[0]+1, b[1])
  c = (c[0]+1, c[1])

  if a[0] < 0:
    heapq.heappush(queue, a)
  if b[0] < 0:
    heapq.heappush(queue, b)
  if c[0] < 0:
    heapq.heappush(queue, c)

print len(ans)
for item in ans:
    print "%d %d %d" % item
