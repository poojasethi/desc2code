#include <iostream>
#include <map>
#include <set>
#include <utility>
#include <vector>
#include <algorithm>
using namespace std;

int n;
map<int, int> m;
typedef pair<int, int> pi;
set<pi> s;
vector<int> o;

int main() {
	int i, r;

	cin >> n;
	for (i = 0; i < n; i++) {
		cin >> r;
		m[r]++;
	}

	for (map<int, int>::iterator im = m.begin(); im != m.end(); im++) {
		s.insert(pi(im->second, im->first));
	}

	while (s.size() >= 3) {
		pi a[3];

		for (i = 0; i < 3; i++) {
			a[i] = *--s.end();
			s.erase(--s.end());
			o.push_back(a[i].second);
		}
		for (i = 0; i < 3; i++) {
			if (--a[i].first) s.insert(a[i]);
		}
		sort(o.rbegin(), o.rbegin() + 3);
	}

	cout << o.size() / 3 << '\n';
	for (i = 0; i < o.size(); i += 3) {
		cout << o[i] << ' ' << o[i + 1] << ' ' << o[i + 2] << '\n';
	}

	return 0;
}
