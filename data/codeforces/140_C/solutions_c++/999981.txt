#include <cstdio>
#include <cstring>
#include <vector>
#include <queue>
#include <map>
#include <algorithm>
using namespace std;

const int N = 100005;
typedef pair<int, int> PII;
priority_queue<PII> Q;
map<int, int> a;
int ans[N][3], na;
int main(void) {
	int n;
	scanf("%d", &n);
	for(int i=0;i<n;i++) {
		int x;
		scanf("%d", &x);
		a[x]++;
	}
	for(map<int, int>::iterator it=a.begin(); it!=a.end();it++)
		Q.push(make_pair(it->second, it->first));
	while (Q.size() >= 3) {
		PII A=Q.top(); Q.pop();
		PII B=Q.top(); Q.pop();
		PII C=Q.top(); Q.pop();
		ans[na][0] = A.second;
		ans[na][1] = B.second;
		ans[na][2] = C.second;
		sort(ans[na], ans[na]+3);
		++na;
		if (--A.first > 0) Q.push(A);
		if (--B.first > 0) Q.push(B);
		if (--C.first > 0) Q.push(C);
	}
	printf("%d\n", na);
	for(int i=0;i<na;i++)
		printf("%d %d %d\n", ans[i][2], ans[i][1], ans[i][0]);
	return 0;
}
