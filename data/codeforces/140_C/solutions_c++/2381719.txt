#include <algorithm>
#include <iostream>
#include <queue>
#include <map>
using namespace std;
int N, x, y;
map<int, int> hsh;
priority_queue< pair<int, int> > q;
vector< vector<int> > ans;
int main(){
	cin>> N;
	for(int i= 0;i< N;++ i){
		cin>> x;
		++ hsh[x];
	}
	for(map<int, int> :: iterator cur= hsh.begin();cur!= hsh.end();++ cur)
		q.push( make_pair(cur->second, cur->first) );
	while(q.size() >= 3u){
		vector<int> res;
		for(int i= 0;i< 3;++ i){
			res.push_back(q.top().second);
			q.pop();
		}
		ans.push_back(res);
		for(int i= 0;i< 3;++ i) if(-- hsh[res[i]])
			q.push(make_pair(hsh[res[i]], res[i]));
	}
	cout<< ans.size()<< endl;
	for(unsigned int i= 0;i< ans.size();++ i){
		sort(ans[i].begin(), ans[i].end());
		cout<< ans[i][2]<< " "<< ans[i][1]<< " "<< ans[i][0]<< endl;
	}
	return 0;
}
