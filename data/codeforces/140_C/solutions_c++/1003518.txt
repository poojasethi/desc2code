#include <cstdio>
#include <cmath>
#include <map>
#include <queue>
#include <algorithm>
#include <cstring>
using namespace std;
const int MAXN = 100010;
map<int, int> ma;
priority_queue<pair<int, int> > q;
int r[MAXN][3], n, v, ret, tmp;
int main() {
	scanf("%d", &n);
	for (int i = 0;i < n;i++) {
		scanf("%d", &v);
		ma[v]++;
	}
	for (map<int, int> :: iterator it = ma.begin();it != ma.end();it++) {
		q.push(make_pair(it->second, it->first));
	}
	ret = 0;
	while (q.size() >= 3) {
		pair<int, int> p[3];
		for (int i = 0;i < 3;i++) {
			p[i] = q.top(); q.pop();
			r[ret][i] = p[i].second;
			p[i].first--;
		}
		sort(r[ret], r[ret] + 3);
		for (int i = 0;i < 3;i++)
			if (p[i].first > 0)
				q.push(p[i]);
		ret++;
	}
	printf("%d\n", ret);
	for (int i = 0;i < ret;i++) {
		printf("%d %d %d\n", r[i][2], r[i][1], r[i][0]);
	}
	return 0;
}