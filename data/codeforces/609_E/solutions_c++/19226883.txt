#include <map>
#include <set>
#include <list>
#include <ctime>
#include <cmath>
#include <queue>
#include <stack>
#include <bitset>
#include <vector>
#include <cstdio>
#include <string>
#include <cstring>
#include <sstream>
#include <iomanip>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
struct node1 {
	int x,y,z,w;
}e[200005];
struct node2 {
	int x,y,z;
}h[400005];
int a[200005][20],b[200005],d[200005][20],f[200005],q[200005],n,m,s;
long long c[200005],t;
bool p[200005];
bool comp (node1 a,node1 b) {
	return a.z<b.z;
}
int find (int x) {
	if (f[x]!=x) f[x]=find(f[x]);
	return f[x];
}
void work (int x,int y,int z) {
	s++;
	h[s]=(node2){q[x],y,z};
	q[x]=s;
	s++;
	h[s]=(node2){q[y],x,z};
	q[y]=s;
}
int solve (int x,int y) {
	int i,t=0;
	if (b[x]<b[y]) swap(x,y);
	for (i=18;i>=0;i--) {
		if (b[a[x][i]]>=b[y]) {
			t=max(t,d[x][i]);
			x=a[x][i];
		}
	}
	if (x==y) return t;
	for (i=18;i>=0;i--) {
		if (a[x][i]!=a[y][i]) {
			t=max(t,max(d[x][i],d[y][i]));
			x=a[x][i];y=a[y][i];
		}
	}
	t=max(t,max(d[x][0],d[y][0]));
	return t;
}
void dfs (int x) {
	int i,y;
	for (i=q[x];y=h[i].y,i!=0;i=h[i].x) {
		if (y!=a[x][0]) {
			a[y][0]=x;
			d[y][0]=h[i].z;
			b[y]=b[x]+1;
			dfs(y);
		}
	}
}
int main ( ) {
	int i,k,u,v;
	scanf("%d%d",&n,&m);
	for (i=1;i<=m;i++) {
		scanf("%d%d%d",&e[i].x,&e[i].y,&e[i].z),e[i].w=i;
	}
	sort(e+1,e+m+1,comp);
	for (i=1;i<=n;i++) f[i]=i;
	for (i=1;i<=m;i++) {
		u=find(e[i].x),v=find(e[i].y);
		if (u!=v) {
			work(e[i].x,e[i].y,e[i].z);
			f[u]=v;t+=e[i].z;
		}
	}
	b[1]=1;dfs(1);
	for (k=0;k<=18;k++) {
		for (i=1;i<=n;i++) {
			if (a[a[i][k]][k]) a[i][k+1]=a[a[i][k]][k],d[i][k+1]=max(d[i][k],d[a[i][k]][k]);
		}
	}
	for (i=1;i<=m;i++) {
		if (!p[i]) {
			c[e[i].w]=t+e[i].z-solve(e[i].x,e[i].y);
		}
		else c[e[i].w]=t;
	}
	for (i=1;i<=m;i++) printf("%I64d\n",c[i]);
	return 0;
}
/*
Examples

input

5 7
1 2 3
1 3 1
1 4 5
2 3 2
2 5 3
3 4 2
4 5 4

output

9
8
11
8
8
8
9
*/
