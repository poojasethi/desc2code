#include <bits/stdc++.h>
using namespace std;
int ecnt, rep[200001], to[400001], len[400001], fir[200001], nxt[400001], dep[200001], f[200001][20], g[200001][20];
struct Edge {
    int u, v, w;
} a[200000], b[200000];
bool cmp(Edge a, Edge b) {
    return a.w < b.w;
}
int find(int x) {
    return rep[x] == x ? x : rep[x] = find(rep[x]);
}
void ae(int u, int v, int w) {
    to[++ecnt] = v; len[ecnt] = w; nxt[ecnt] = fir[u]; fir[u] = ecnt;
}
void dfs(int u, int p) {
    for (int i = fir[u]; i; i = nxt[i]) {
        int v = to[i];
        if (v - p) {
            dep[v] = dep[u] + 1;
            f[v][0] = u;
            g[v][0] = len[i];
            dfs(v, u);
        }
    }
}
int lca(int u, int v) {
    if (dep[u] < dep[v]) swap(u, v);
    int det = dep[u] - dep[v], i, ret = 0;
    for (i = 0; i < 19; ++i)
        if (det & (1 << i)) {
            ret = max(ret, g[u][i]);
            u = f[u][i];
        }
    det = 18;
    while (u - v) {
        for (i = det; f[u][i] == f[v][i] && ~i; --i);
        if (!~i) i++;
        det = i;
        ret = max(ret, max(g[u][i], g[v][i]));
        u = f[u][i]; v = f[v][i];
    }
    return ret;
}
int main() {
    int n, m, i, fu, fv, j, cnt = 0;
    long long s = 0;
    scanf("%d%d", &n, &m);
    for (i = 0; i < m; ++i) {
        scanf("%d%d%d", &a[i].u, &a[i].v, &a[i].w);
        b[i] = a[i];
    }
    sort(a, a + m, cmp);
    for (i = 1; i <= n; ++i) rep[i] = i;
    for (i = 0; cnt < n - 1; ++i) {
        fu = find(a[i].u); fv = find(a[i].v);
        if (fu - fv) {
            rep[fv] = fu;
            cnt++;
            s += a[i].w;
            ae(a[i].u, a[i].v, a[i].w);
            ae(a[i].v, a[i].u, a[i].w);
        }
    }
    dfs(1, 0);
    for (j = 1; j < 19; ++j)
        for (i = 1; i <= n; ++i) {
            f[i][j] = f[f[i][j - 1]][j - 1];
            g[i][j] = max(g[i][j - 1], g[f[i][j - 1]][j - 1]);
        }
    for (i = 0; i < m; ++i) printf("%I64d\n", s - lca(b[i].u, b[i].v) + b[i].w);
    return 0;
}
