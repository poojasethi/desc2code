#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#define fo(i,a,b) for(int i=a;i<=b;i++)
#define fd(i,a,b) for(int i=a;i>=b;i--)
#define maxn 200005
#define ll long long
using namespace std;

ll ans[maxn];

int fa[maxn],siz[maxn],hfa[maxn];

ll len[maxn];

int n,m;

ll totlen;

struct note{
	int id,x,y;
	ll z;
}a[maxn];

bool cmp(note i,note j) {
	return i.z<j.z;
}

int get(int x){
	return x==fa[x] ? x : fa[x]=get(fa[x]);
}

void change(int x,int y,ll z){
	int fx=get(x),fy=get(y);
	if (fx==fy) return;
	if (siz[fx]>siz[fy]) swap(x,y),swap(fx,fy);
	hfa[fx]=fy;
	len[fx]=z;
	fa[fx]=fy;
	siz[fy]+=siz[fx];
	totlen+=z;
}

ll ask(int x,int y){
	int b[maxn],c[maxn];
	b[0]=0;
	c[0]=0;
	while (hfa[x]) {
		b[++b[0]]=x;
		x=hfa[x];
	}
	b[++b[0]]=x;
	while (hfa[y]) {
		c[++c[0]]=y;
		y=hfa[y];
	}
	c[++c[0]]=y;
	while (b[0] && c[0] && b[b[0]]==c[c[0]]) {
		b[0]--;
		c[0]--;
	}
	if (b[0]==0) return len[c[c[0]]];
	if (c[0]==0) return len[b[b[0]]];
	return max(len[b[b[0]]],len[c[c[0]]]);
}

int main(){
	scanf("%d%d",&n,&m);
	fo(i,1,m) {
		a[i].id=i;
		scanf("%d%d%I64d",&a[i].x,&a[i].y,&a[i].z);
	}
	fo(i,1,n) fa[i]=i,siz[i]=1;
	sort(a+1,a+m+1,cmp);
	fo(i,1,m) {
		int x=a[i].x;
		int y=a[i].y;
		ll z=a[i].z;
		change(x,y,z);
	}
	fo(i,1,m) {
		int x=a[i].x;
		int y=a[i].y;
		ll z=a[i].z;
		ll tmp=ask(x,y);
		ans[a[i].id]=totlen-tmp+z;
	}
	fo(i,1,m) printf("%I64d\n",ans[i]);
	return 0;
}