#include <bits/stdc++.h>
using namespace std;
#define ll long long
const int N = 2e5+5;
struct E{
	int u,v,w,id;
	bool operator() (const E a,const E b)const{
		return a.w<b.w;
	}
}e[N];
#define mp make_pair
#define x first
#define y second
ll ans[N],minst=0;
vector<pair<int,int> >adj[N];
int h[N],anc[N][21],maxi[N][21];
bool visit[N];
void dfs(int ind,int par,int w){
	h[ind]= h[par]+1;
	maxi[ind][0]=w;
	anc[ind][0]=par;
	int i,W,v;
	for(i=1;i<20;++i)
		anc[ind][i]= anc[anc[ind][i-1]][i-1],
			maxi[ind][i]=max(maxi[anc[ind][i-1]][i-1],maxi[ind][i-1]);
	for(i=0;i<adj[ind].size();++i){
		if(adj[ind][i].x!=par){
			W= adj[ind][i].y,v= adj[ind][i].x;
			dfs(v,ind,W);
		}
	}
}
int get(int u,int v){
	if(h[u]<h[v])swap(u,v);
	int diff= h[u]-h[v],i;
	int mm=0;
	for(i=0;i<20;++i)
		if(diff&(1<<i)){
			mm = max(mm,maxi[u][i]);
			u = anc[u][i];
		}
	if(u==v)return mm;
	for(i=19;i>=0;--i){
		if(anc[u][i]!=anc[v][i]){
			mm= max(mm,maxi[u][i]);
			mm = max(mm,maxi[v][i]);
			u = anc[u][i],v=anc[v][i];
		}
	}
	mm= max(maxi[u][0],mm);
	mm= max(maxi[v][0],mm);
	return mm;
}
int cc[N];
bool discard[N];
vector<pair<int,pair<int,int> > > st[N];
int main(){
	int n,m,i,u,v,w;cin>>n>>m;
	for(i=0;i<m;++i){
		scanf("%d%d%d",&u,&v,&w);
		e[i].u=u,e[i].v=v,e[i].w=w,e[i].id=i;
		++cc[u],++cc[v];
		st[u].push_back(mp(-w,mp(v,u) ));
		st[v].push_back(mp(-w,mp(u,v) ));
	}
	priority_queue<pair<int,pair<int,int> > >q;
	q.push(mp(0,mp(1,-1)));int x=0,par;
	pair<int,pair<int,int> > top;
	while(x<n&&!q.empty()){
		top = q.top();q.pop();
		if(visit[top.y.x])continue;
		++x;
		w= -top.x;
		minst+=w;u = top.y.x;
		par = top.y.y;
		if(par!=-1)adj[u].push_back(mp(par,w) ),adj[par].push_back(mp(u,w));
		visit[u]=true;
		for(i=0;i<st[u].size();++i){
			if(visit[st[u][i].y.x])continue;
			q.push(st[u][i]);
		}
	}
	dfs(1,0,0);
	for(i=0;i<m;++i){
		u = e[i].u,v=e[i].v,w=e[i].w;
		ans[e[i].id]= minst-get(u,v)+w;
	}
	for(i=0;i<m;++i)
		cout<<ans[i]<<endl;
}
