#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;
const int N=200005;
int k;
long long sum;
struct node
{
    int u,v,w,id;
    bool operator <(const node& b)const
    {
        return w<b.w;
    }
}e[N];
vector<node>adj[N];
vector<int>p[N];
int W[N],pa[N];
int n,m;
int find(int i)
{
    return pa[i]==i?i:pa[i]=find(pa[i]);
}

void add(node xx)
{
    int x=find(xx.u),y=find(xx.v);
    if(x==y)return;
    sum+=xx.w;
    k++;
    if(p[x].size()>p[y].size())swap(x,y);
    for(int i=0;i<p[x].size();i++)
    {
        int t=p[x][i];
        p[y].push_back(t);
        for(int j=0;j<adj[t].size();j++)
        {
            node tmp=adj[t][j];
            int to=tmp.u+tmp.v-t;
            if(find(to)==y)W[tmp.id]-=xx.w;
        }
    }
    pa[x]=y;
}
int main()
{
    //freopen("a.txt","r",stdin);
    while(~scanf("%d%d",&n,&m))
    {
        for(int i=1;i<=n;i++)adj[i].clear();
        for(int i=1;i<=n;i++)p[i].clear();
        for(int i=1;i<=n;i++)pa[i]=i;
        for(int i=1;i<=m;i++)
        {
            scanf("%d%d%d",&e[i].u,&e[i].v,&e[i].w);
            e[i].id=i;
            W[i]=e[i].w;
            adj[e[i].u].push_back(e[i]);
            adj[e[i].v].push_back(e[i]);
        }
        for(int i=1;i<=n;i++)
        {
            p[i].push_back(i);

        }
        sort(e+1,e+m+1);
        k=0;sum=0;
        for(int i=1;i<=m;i++)
        {
            if(k==n-1)break;
            add(e[i]);
        }
        for(int i=1;i<=m;i++)
            printf("%I64d\n",sum+W[i]);
    }
    return 0;
}
