#pragma comment(linker, "/STACK:102400000,102400000")
#include<cstring>
#include<cstdlib>
#include<cstdio>
#include<cmath>
#include<iostream>
#include<algorithm>
#define N 210000
#define LL long long
using namespace std;
struct node{int x,y,d,next;}a[2*N],e[N];
struct node1{int dep,par[25],g[25];}t[N];
int n,m,fa[N],first[N],len,maxd=22;
LL sum,ans[N];
bool cmp(node x,node y)
{
	if(x.d<y.d) return 1;
	return 0;
}
void ins(int x,int y,int d)
{
	a[++len].y=y;a[len].d=d;a[len].next=first[x];first[x]=len;
}
void dfs(int x,int fa,int d)
{
	t[x].dep=t[fa].dep+1;
	t[x].par[0]=fa;
	t[x].g[0]=d;
	for(int i=1;i<=maxd;i++)
	{
		t[x].par[i]=t[t[x].par[i-1]].par[i-1];
		t[x].g[i]=max(t[x].g[i-1],t[t[x].par[i-1]].g[i-1]);
	}
	for(int k=first[x];k;k=a[k].next)
	{
		int y=a[k].y;
		if(y==fa) continue;
		dfs(y,x,a[k].d);
	}
}
int lca(int x,int y)
{
	int d=0;
	if(t[x].dep<t[y].dep) {int tt=x;x=y;y=tt;}
	for(int i=maxd;i>=0;i--) 
		if(t[t[x].par[i]].dep>=t[y].dep) 
		{d=max(d,t[x].g[i]);x=t[x].par[i];}
	if(x==y) return d;
	for(int i=maxd;i>=0;i--)
		if(t[x].par[i]!=t[y].par[i])
		{d=max(d,max(t[x].g[i],t[y].g[i]));x=t[x].par[i];y=t[y].par[i];}
	d=max(d,max(t[x].g[0],t[y].g[0]));
	return d;
}
int find(int x)
{
	if(x!=fa[x]) fa[x]=find(fa[x]);
	return fa[x];
}
int main()
{
	scanf("%d%d",&n,&m);
	for(int i=1;i<=m;i++) 
	{
		scanf("%d%d%d",&e[i].x,&e[i].y,&e[i].d);
		e[i].next=i;
	}
	sort(e+1,e+m+1,cmp);
	for(int i=1;i<=n;i++) fa[i]=i;
	int k=0;
	sum=0;
	for(int i=1;i<=m;i++)
	{
		int fx=find(e[i].x),fy=find(e[i].y);
		if(fx!=fy)
		{
			sum+=e[i].d;
			fa[fx]=fy;
			k++;
			ins(e[i].x,e[i].y,e[i].d);
			ins(e[i].y,e[i].x,e[i].d);
			if(k==n-1) break;
		}
	}
	dfs(1,0,0);
	for(int i=1;i<=m;i++)
	{
		int d=lca(e[i].x,e[i].y);
		ans[e[i].next]=sum-d+e[i].d;
	}
	for(int i=1;i<=m;i++) printf("%I64d\n",ans[i]);
	return 0;
}