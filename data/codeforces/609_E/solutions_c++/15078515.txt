#include<bits/stdc++.h>
#define FI(i,a,b) for(int i=(a);i<=(b);i++)
#define FD(i,a,b) for(int i=(a);i>=(b);i--)
using namespace std;

#define LL long long
#define PII pair<int,int>
#define fi first
#define se second
#define mp make_pair

int n,m,par[200005],anc[19][200005],wt[19][200005],dep[200005];
LL ans=0,put[200005];
int f(int x){
  if(x==par[x]) return x;
  else return par[x]=f(par[x]);
}
struct ed{
  int a,b,l,id; // in vv: a to b
  bool operator<(const ed & k) const{
    return l<k.l;
  }
};
vector<ed> V;
vector<ed> vv[200005];
void dfs(int id,int pv,int w,int d){
  anc[0][id]=pv;
  wt[0][id]=w;
  dep[id]=d;
  FI(i,0,(int)vv[id].size()-1){
    ed to=vv[id][i];
    if(to.b==pv) continue;
    dfs(to.b,id,to.l,d+1);
  }
  return;
}
int query(int a,int b){
  int ans=0;
  if(dep[a]<dep[b]) swap(a,b);
  FD(i,17,0){
    if(dep[a]-(1<<i)>=dep[b]){
      ans=max(ans,wt[i][a]);
      a=anc[i][a];
    }
  }
  FD(i,17,0){
    if(anc[i][a]!=anc[i][b]){
      ans=max(ans,wt[i][a]);
      ans=max(ans,wt[i][b]);
      a=anc[i][a];
      b=anc[i][b];
    }
  }
  if(a!=b){
    ans=max(ans,wt[0][a]);
    ans=max(ans,wt[0][b]);
  }
  return ans;
}
int main(){
  scanf("%d %d",&n,&m);
  FI(i,1,m){
    ed cur;
    scanf("%d %d %d",&cur.a,&cur.b,&cur.l);
    cur.id=i;
    V.push_back(cur);
  }
  sort(V.begin(),V.end());
  FI(i,1,n) par[i]=i;
  FI(i,0,m-1){
    int pa=f(V[i].a),pb=f(V[i].b);
    if(pa==pb) continue;
    par[pa]=pb;
    ans+=V[i].l;
    vv[V[i].a].push_back(V[i]);
    swap(V[i].a,V[i].b);
    vv[V[i].a].push_back(V[i]);
  }
  dfs(1,0,0,0);
  FI(i,1,18) FI(j,1,n){
    anc[i][j]=anc[i-1][anc[i-1][j]];
    wt[i][j]=max(wt[i-1][j],wt[i-1][anc[i-1][j]]);
  }
  FI(i,0,m-1){
    int aa=V[i].a,bb=V[i].b;
    put[V[i].id]=ans+V[i].l-query(aa,bb);
  }
  FI(i,1,m) printf("%lld\n",put[i]);
  return 0;
}