#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#include <vector>
#include <ctime>
#include <cmath>
#define fi first
#define se second
#define PA pair<int,int>
#define VI vector<int>
#define VP vector<PA >
#define mk(x,y) make_pair(x,y)
#define N 1010
#define db double
#define eps 1e-9
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
const db pi=acos(-1);
struct ww {
	db x,y;
	inline void read() {
		scanf("%lf%lf",&x,&y);
	}
	inline ww operator - (const ww &A) {
		return (ww){x-A.x,y-A.y};
	}
	inline db com() {
		return x*x+y*y;
	}
	inline bool operator == (const ww &A) {
		return x==A.x&&y==A.y;
	}
} a[N];
struct w1 {
	db x;
	int z;
} c[N*4];
int i,j,k,n,m,w,h,s,t;
int f[N],cen[N],f1[N],f2[N],id[N];
db wei[N][N],dis[N][N],len[N];
inline void into(db l,db r,int cen) {
	if (l<-pi) into(l+2*pi,pi,cen),into(-pi,r,cen);
	else if (r>pi) into(l,pi,cen),into(-pi,r-2*pi,cen);
	else c[++t]=(w1){l,cen},c[++t]=(w1){r,-cen};
}
inline bool cc1(const w1 &a,const w1 &b) {
	return a.x<b.x;
}
inline db ju(int i,db x) {
	int j;
	s=t=0;
	For(j,1,n) if (dis[i][j]>eps&&dis[i][j]<=x) {
		db A=acos(dis[i][j]/x);
		into(wei[i][j]-A,wei[i][j]+A,1);
	}
	if (a[i].x<x) {
		db A=acos(a[i].x/x);
		into(pi-A,pi+A,5);
	}
	if (a[i].x+x>w) {
		db A=acos((w-a[i].x)/x);
		into(-A,A,5);
	}
	if (a[i].y<x) {
		db A=acos(a[i].y/x);
		into(-pi/2-A,-pi/2+A,5);
	}
	if (a[i].y+x>h) {
		db A=acos((h-a[i].y)/x);
		into(pi/2-A,pi/2+A,5);
	}
	c[++t]=(w1){pi,0}; c[++t]=(w1){-pi,0};
	sort(c+1,c+t+1,cc1);
	int sum=0;
	For(j,1,t) {
		if (j>1&&sum<2&&(j==1||c[j].x>c[j-1].x+eps))
			return 1;
		sum+=c[j].z;
	}
	return 0;
}
int main() {
	//freopen("442e.in","r",stdin);
	scanf("%d%d%d",&w,&h,&n);
	For(i,1,n) a[i].read(),id[i]=i;
	For(i,1,n)For(j,1,n) {
		ww O=a[j]-a[i];
		wei[i][j]=atan2(O.y,O.x);
		dis[i][j]=sqrt(O.com())/2;
	}
	db l=sqrt(2)/2;
	random_shuffle(id+1,id+n+1);
	For(i,1,n) {
		int A=id[i];
		if (ju(A,l)) {
			db r=2e6,mid;
			for (;l+eps<r;) {
				mid=(l+r)/2;
				if (ju(A,mid)) l=mid;
				else r=mid;
			}
			l=(l+r)/2;
		}
	}
	printf("%.12lf\n",l);
	//printf("%d\n",clock());
	return 0;
}
