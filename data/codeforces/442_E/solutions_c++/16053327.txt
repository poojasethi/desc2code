#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<algorithm>
#include<iostream>
#include<cmath>
using namespace std;
typedef double DB;
const DB eps=1e-10,pi=acosl(-1.0);
const int maxn=1005;
int W,H,n;
DB D[maxn][maxn],lim;

struct point
{
	DB x,y;
	point(){}
	point(const DB &_x,const DB &_y):x(_x),y(_y){}
	point operator+(const point &o)const{return point(x+o.x,y+o.y);}
	point operator-(const point &o)const{return point(x-o.x,y-o.y);}
	bool operator==(const point &o)const{return fabs(x-o.x)+fabs(y-o.y)<eps;}
	DB ang(){return atan2(y,x);}
}P[maxn];

DB dist(const point &p)
{return sqrt(p.x*p.x+p.y*p.y);}

pair<DB,int> e[maxn*2];
int en,cnt;

void add(DB l,DB r,int c=1)
{
	if(l<-pi)cnt+=c,l+=pi*2;
	if(r>pi)cnt+=c,r-=pi*2;
	e[++en]=make_pair(l,c),
	e[++en]=make_pair(r,-c);
}

bool check(int k,DB r)
{
	en=cnt=0;
	point p=P[k];
	DB a,t,d;
	if(r>(d=p.x))
	{
		a=-pi;
		t=acos(d/r);
		add(a-t,a+t,2);
	}
	if(r>(d=p.y))
	{
		a=-pi/2;
		t=acos(d/r);
		add(a-t,a+t,2);
	}
	if(r>(d=W-p.x))
	{
		a=0;
		t=acos(d/r);
		add(a-t,a+t,2);
	}
	if(r>(d=H-p.y))
	{
		a=pi/2;
		t=acos(d/r);
		add(a-t,a+t,2);
	}
	for(int i=1;i<=n;i++)
		if(i!=k&&!(P[i]==P[k]))
		{
			p=P[i]-P[k];
			d=D[i][k];
			if(r+r>d)
			{
				a=p.ang();
				t=acos(d/r/2);
				add(a-t,a+t);
			}
		}
	sort(e+1,e+en+1);
	if(cnt<=1)return 1;
	for(int i=1;i<=en;i++)
		if(cnt<=1)return 1;
		else cnt+=e[i].second;
	return 0;
}

void init()
{
	scanf("%d%d%d",&W,&H,&n);
	for(int i=1;i<=n;i++)
		scanf("%lf%lf",&P[i].x,&P[i].y);
	random_shuffle(P+1,P+n+1);
	for(int i=1;i<=n;i++)
		for(int j=1;j<=n;j++)
			D[i][j]=dist(P[i]-P[j]);
	lim=dist(point(W,H));
}

void work()
{
	DB ans=0,low,high,mid;
	for(int i=1;i<=n;i++)
		if(check(i,ans+eps))
		{
			low=ans,high=lim;
			for(int t=60;t--;)
			{
				mid=(low+high)/2;
				if(check(i,mid))low=mid;
				else high=mid;
			}
			ans=low;
		}
	printf("%.12lf\n",double(ans));
}

int main()
{
	init();
	work();
	return 0;
}
