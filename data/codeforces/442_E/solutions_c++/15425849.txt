#include<stdio.h>
#include<cmath>
#include<cstdlib>
#include<algorithm>
#define LD long double
#define N 1015
using namespace std;int debug;
struct data{
    LD x,y;
    LD angle(){return atan2(y,x);}
    void read(){double IO1,IO2;scanf("%lf%lf",&IO1,&IO2);x=IO1;y=IO2;}
}a[N],b[N<<2];int n,w,h,i,j,cnt;
LD dist[N][N],ans,RMAX,l,r,mid;
const LD EPS=1e-10,pi2=acos(-1.)*2,pi=acos(-1.);
data operator - (const data &a,const data &b){return (data){a.x-b.x,a.y-b.y};}
inline int cmp(const data &a,const data &b){return a.x<b.x;}
inline LD sqr(double x){return x*x;}
void Insert(LD L,LD R,int W=2){
    b[++cnt]=(data){L,W};
    b[++cnt]=(data){R,-W};
}
int check(int id,LD R){
    cnt=0;LD dis,A,B;
    for (int i=1;i<=n;i++)
        if (id!=i){
            dis=dist[id][i];
            if (dis>R+R||dis<EPS) continue;
            //c^2=a^2+b^2-2abcosC
            double alpha=(a[i]-a[id]).angle();
            //double beta=acos((sqr(R)+sqr(dis)-sqr(R))/2./dis/R);
            double beta=acos(dis/2./R);
            A=alpha-beta,B=alpha+beta;
            while (A<0) A+=pi2;
            while (B<0) B+=pi2;
            if (A<=B) Insert(A,B,1);
            else Insert(0,B,1),Insert(A,pi2,1);
    }dis=(h-a[id].y);
    if (dis<=R) A=acos(dis/R),Insert(pi/2.-A,pi/2.+A);
  dis=a[id].y;
  if (dis<=R) A=acos(dis/R),Insert(pi*1.5-A,pi*1.5+A);
  dis=w-a[id].x;
  if (dis<=R) A=acos(dis/R),Insert(0,A),Insert(pi2-A,pi2);
  dis=a[id].x;
  if (dis<=R) A=acos(dis/R),Insert(pi-A,pi+A);
  Insert(0,0);
    sort(b+1,b+cnt+1,cmp);
    int sum=0,k;
    for (int i=1;i<=cnt&&b[i].x+EPS<pi2;i=k){
        for (k=i;k<=cnt&&b[k].x-b[i].x<=EPS;k++)
            sum+=b[k].y;
        if (sum<=1) return 1;
  }return 0;
}
int main(){
    scanf("%d%d%d",&w,&h,&n);
    for (i=1;i<=n;i++)
        a[i].read();
    random_shuffle(a+1,a+n+1);
    for (i=1;i<=n;i++)
        for (j=1;j<=n;j++)
            dist[i][j]=sqrt(sqr(a[i].x-a[j].x)+sqr(a[i].y-a[j].y));
    ans=0;RMAX=sqrt(sqr(w)+sqr(h))+1.;
    for (i=1;i<=n;i++){
        if (!check(i,ans+EPS)) continue;
        l=ans;r=RMAX;
        while (r-l>EPS){
            ++debug;
            mid=(l+r)/2.;
            if (check(i,mid)) ans=l=mid;else r=mid; 
    }
  }printf("%.12f\n",(double)ans);
}