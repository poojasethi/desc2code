#include <cstdio>
#include <cstring>

#define MAXN 100
#define MAXK 10

using namespace std;

int N,M,K;
int ar[MAXN+1][MAXN+1];
int dp[MAXN+1][MAXN+1][MAXK+1];

char way[MAXN+1][MAXN+1][MAXN+1];

int solve(int i,int j,int k)
{
	if(j<1 || j>M) return -1;

	if(i==N)
	{
		if(ar[i][j] % K == k) return ar[i][j];
		else return -1;
	}

	int c,a,b,&res=dp[i][j][k];
	
	if(res!=-2) return res;
	c=k-ar[i][j];
	
	while(c<0) c+=K;
	while(c>=K) c-=K; 
	
	a=solve(i+1,j-1,c);
	b=solve(i+1,j+1,c);
	
	if(a==-1 && b==-1) return res=-1;
	if(a > b)
	{
		res=a+ar[i][j];
		way[i][j][k]='R';
	}
	
	else
	{
		res=b+ar[i][j];
		way[i][j][k]='L';
	}
	return res;
}

void write(int i,int j,int k)
{
	int c;

	c=k-ar[i][j];
	while(c<0) c+=K;
	while(c>=K) c-=K; 
	
	if(i==N)
	{
		printf("%d\n",j);
		return;
	}
	if(way[i][j][k]=='R')
		write(i+1,j-1,c);
	else
		write(i+1,j+1,c);
	printf("%c",way[i][j][k]);
}

int main()
{
	int max=-2,maxi;
	char c;
	int i,j,k;
	//freopen("pawn.in","r",stdin);
	scanf(" %d %d %d",&N,&M,&K);
	for(i=1;i<=N;i++)
		for(j=1;j<=M;j++)
			for(k=0;k<=K;k++)
				dp[i][j][k]=-2;
	K++;
	for(i=1;i<=N;i++)
		for(j=1;j<=M;j++)
		{
			scanf(" %c",&c);
			ar[i][j]=c-'0';
		}
	for(i=1;i<=M;i++)
	{
		if(max < solve(1,i,0))
		{
			max=solve(1,i,0);
			maxi=i;
		}
	}
	printf("%d\n",max);
	if(max==-1) return 0;
	write(1,maxi,0);
	printf("\n");
	return 0;
}