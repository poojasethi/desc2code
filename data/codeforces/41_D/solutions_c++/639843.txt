#include <map>
#include <set>
#include <cmath>
#include <stack>
#include <queue>
#include <string>
#include <vector>
#include <fstream>
#include <sstream>
#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
#include <unistd.h>
#include  <sys/time.h>
#include <iomanip>
using namespace std;
#define li		 long long int
#define rep(i,to)	for(li i=0;i<((li)to);i++)
#define pb		push_back
#define sz(v)		((li)v.size())


#define MAX 105
pair<li,string> dp[MAX][MAX][11];

int main(){
	rep(i,MAX)rep(j,MAX)rep(k,11) dp[i][j][k]=make_pair(-2,"");
	li n,m,mod;
	cin>>n>>m>>mod;
	mod++;
	vector<string> mp(n);
	rep(i,n) cin>>mp[i];
//	reverse(mp.begin(),mp.end());
	rep(i,MAX) dp[0][i][0]=make_pair(0,"");
	rep(i,n)rep(j,m)rep(k,mod)if(dp[i][j][k].first!=-2){
		li next=(k+(mp[i][j]-'0'))%mod;
		if(j+1<m){
			pair<li,string> p=make_pair(dp[i][j][k].first+mp[i][j]-'0',"L"+dp[i][j][k].second);
			dp[i+1][j+1][next]=max(dp[i+1][j+1][next],p);
		}
		if(0<=j-1){
			pair<li,string> p=make_pair(dp[i][j][k].first+mp[i][j]-'0',"R"+dp[i][j][k].second);
			dp[i+1][j-1][next]=max(dp[i+1][j-1][next],p);
		}
	}
	li best=-1;
	pair<li,string> res=make_pair(-2,"");
	rep(i,m)if(res<dp[n][i][0]){
		best=i;
		res=max(res,dp[n][i][0]);
	}
	if(best==-1){
		cout<<"-1";
		return 0;
	} 
	cout<<res.first<<endl;
	cout<<best+1+((res.second[0]=='R')?1:-1)<<endl;
	cout<<res.second.substr(1)<<endl;
}
