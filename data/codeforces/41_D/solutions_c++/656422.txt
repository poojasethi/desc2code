#include <cstdio>
#include <cstring>
#include <string>

using namespace std;

int N, M, K;
char A[120][120];
int DP[120][120][12];
string P[120][120][12];

int main() {

    scanf("%d%d%d", &M, &N, &K); K++;
    for (int i = 0; i < M; i++) {
        scanf("%s", A[i]);
        for (int j = 0; A[i][j]; j++) A[i][j]-='0';
    }
    int m;
    memset(DP,-1,sizeof(DP));
    for (int j = 0; j < N; j++) DP[M-1][j][A[M-1][j]%K] = A[M-1][j], P[M-1][j][A[M-1][j]%K] = "";
    for (int i = M-2; i >= 0; i--) for (int j = 0; j < N; j++) for (int k = 0; k < K; k++){
        if (j > 0 && DP[i+1][j-1][k]!=-1 && (m = DP[i+1][j-1][k]+A[i][j]) > DP[i][j][m%K])
            DP[i][j][m%K] = m, P[i][j][m%K] = P[i+1][j-1][k]+"R";
        if (j < N-1 && DP[i+1][j+1][k]!=-1 && (m = DP[i+1][j+1][k]+A[i][j]) > DP[i][j][m%K])
            DP[i][j][m%K] = m, P[i][j][m%K] = P[i+1][j+1][k]+"L";
    }
    int b = -1, c = -1;
    for (int j = 0; j < N; j++) if (DP[0][j][0] != -1 && DP[0][j][0] > b) b = DP[0][j][0], c = j;
    if (c == -1) { puts("-1"); return 0; }
    printf("%d\n", b);
    string ret = P[0][c][0];
    int k = 0;
    for (int i = 0; i < P[0][c][0].size(); i++) if (P[0][c][0][i]=='L') k++; else k--;
    c += k+1;
    printf("%d\n%s\n", c, ret.c_str());

    return 0;
}
