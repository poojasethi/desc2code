#include <cstdio>
#include <cstring>
#include <algorithm>
#define maxn 109
#define INF 1e6
using namespace std;
int dp[maxn][maxn][15];
int X[maxn][maxn][15],Y[maxn][maxn][15];
bool vis[maxn][maxn][15];
int n,m,mod;
char s[maxn][maxn];
int dfs(int x,int y,int z)
{
	int &ans=dp[x][y][z];
	if(vis[x][y][z])
		return ans;
	vis[x][y][z]=1;
	ans=-INF;
	if(x==1)
	{
		if(z==(s[x][y]-'0')%mod)
			return ans=s[x][y]-'0';
		else
			return ans=-INF;
	}
	else
	{
		int val=s[x][y]-'0';
		if(y!=m)
		{
			if(ans<dfs(x-1,y+1,((z-val)%mod+mod)%mod))
			{
				ans=dfs(x-1,y+1,((z-val)%mod+mod)%mod);
				X[x][y][z]=y+1;
				Y[x][y][z]=((z-val)%mod+mod)%mod;
			}
		}
		if(y!=1)
		{
			if(ans<dfs(x-1,y-1,((z-val)%mod+mod)%mod))
			{
				ans=dfs(x-1,y-1,((z-val)%mod+mod)%mod);
				X[x][y][z]=y-1;
				Y[x][y][z]=((z-val)%mod+mod)%mod;
			}
		}
		return ans=ans+val;
	}
}
void output(int x,int y,int z)
{
	if(x==1)
		return ;
	int yy=X[x][y][z];
	if(yy<y)
		printf("L");
	else
		printf("R");
	output(x-1,yy,Y[x][y][z]);
}
int main()
{
	memset(dp,-1,sizeof(dp));
	scanf("%d%d%d",&n,&m,&mod);
	mod++;
	for(int i=1;i<=n;i++)
		scanf("%s",s[i]+1);
	int ans=-1,pos=1;
	for(int i=1;i<=m;i++)
	{
		if(dfs(n,i,0)>ans)
		{
			ans=dfs(n,i,0);
			pos=i;
		}
	}
	printf("%d\n",ans);
	if(ans!=-1)
	{
		printf("%d\n",pos);
		output(n,pos,0);
		puts("");
	}
	//system("pause");
	return 0;
}