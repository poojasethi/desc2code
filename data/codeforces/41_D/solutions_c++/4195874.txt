//In the name of God
#include <iostream>
using namespace std;

const int N = 103, oo = 1e9;

int n, m, k, dp[N][N][20], par[N][N][20], a[N][N];

void output(int c, int x, int r) {
//	cerr << c << ' ' << x << ' ' << r << ' ' << dp[c][x][r] << '\n';
	if (c == 1)
		return;
	cout << (par[c][x][r] == 1? 'R': 'L');
	output(c - 1, x + par[c][x][r], (r - a[c][x] + 10 * k) % k);
}

int main() {
	ios_base::sync_with_stdio(false);
	cin >> n >> m >> k;
	k++;
	fill(dp[0][0], dp[n][m + 2], -oo);
	for (int i = 1; i <= m; i++)
		for (int j = 0; j < k; j++)
			dp[0][i][0] = 0;
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++) {
			char c; cin >> c; c -= '0';
			a[i][j] = c;
			for (int s = 0; s < k; s++) {
				if (dp[i - 1][j - 1][s] < dp[i - 1][j + 1][s]) {
					dp[i][j][(s + c) % k] = c + dp[i - 1][j + 1][s];
					par[i][j][(s + c) % k] = 1;
				}
				else {
					dp[i][j][(s + c) % k] = c + dp[i - 1][j - 1][s];
					par[i][j][(s + c) % k] = -1;
				}
			}
		}
//	for (int i = 0; i <= m; i++) {
//		for (int j = 0; j < k; j++)
//			cerr << dp[1][i][j] << ' ';
//		cerr << '\n';
//	}
	int p = 1;
	for (int i = 1; i <= m; i++)
		if (dp[n][i][0] > dp[n][p][0])
			p = i;
	if (dp[n][p][0] < 0)
		cout << -1;
	else {
		cout << dp[n][p][0] << '\n' << p << '\n';
		output(n, p, 0);
	}
	cout << '\n';
	return 0;
}
