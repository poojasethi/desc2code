#include<cstdio>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

const int INF=1<<29;

int main(){
	int m,n,K; scanf("%d%d%d",&m,&n,&K);
	static int a[100][100];
	rep(i,m){
		getchar();
		rep(j,n) a[i][j]=getchar()-'0';
	}

	static int dp[100][100][11];
	static char path[100][100][11];
	rep(i,m) rep(j,n) rep(k,K+1) dp[i][j][k]=-INF;
	rep(j,n) dp[m-1][j][a[m-1][j]%(K+1)]=a[m-1][j];

	for(int i=m-1;i>0;i--) rep(j,n) rep(k,K+1) {
		int nextk;
		if(j>0){
			nextk=(k+a[i-1][j-1])%(K+1);
			if(dp[i-1][j-1][nextk]<dp[i][j][k]+a[i-1][j-1]){
				dp[i-1][j-1][nextk]=dp[i][j][k]+a[i-1][j-1];
				path[i-1][j-1][nextk]='L';
			}
		}
		if(j<n-1){
			nextk=(k+a[i-1][j+1])%(K+1);
			if(dp[i-1][j+1][nextk]<dp[i][j][k]+a[i-1][j+1]){
				dp[i-1][j+1][nextk]=dp[i][j][k]+a[i-1][j+1];
				path[i-1][j+1][nextk]='R';
			}
		}
	}

	int ans=-1,j0;
	rep(j,n) if(ans<dp[0][j][0]) ans=dp[0][j][0], j0=j;
	printf("%d\n",ans);

	if(~ans){
		char s[128]={};
		for(int i=0,j=j0,k=0;i<m;i++){
			int aa=a[i][j];
			if(i<m-1){
				s[m-i-2]=path[i][j][k];
				if(path[i][j][k]=='L') j++; else j--;
				k=(k-aa)%(K+1); if(k<0) k+=K+1;
			}
			else printf("%d\n",j+1);
		}
		puts(s);
	}

	return 0;
}
