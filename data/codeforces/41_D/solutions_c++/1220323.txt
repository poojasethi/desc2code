#include<stdio.h>
#include<string.h>

//int dir[2][2]={1,-1,1,1};
struct pp{
	int x,y,v;
}pre[109][109][11];
int dir[2][2]={-1,-1,-1,1};
char map[109][109];
int dp[109][109][11],n,m,mark,mod;
int ans,max;

void dfs(int si,int sj,int v){
	int x=pre[si][sj][v].x;
	int y=pre[si][sj][v].y;
	int v1=pre[si][sj][v].v;
	if(x==-1&&y==-1) return ;
	//printf("%d %d %d**\n",x,y,v);
	if(y-sj==-1) printf("L");
	else printf("R");
	dfs(x,y,v1);
}

int main(){
	int i,j,k;
	while(scanf("%d%d%d",&n,&m,&mod)!=EOF)
	{
		getchar();
		for(i=1;i<=n;i++)
			scanf("%s",map[i]+1);
		mod+=1;
		memset(dp,-1,sizeof(dp));
		for(j=1;j<=m;j++){
			int x=map[1][j]-'0';
			dp[1][j][x%mod]=x;
			pre[1][j][x%mod].x=-1;
			pre[1][j][x%mod].y=-1;
		}
		for(i=2;i<=n;i++)
			for(j=1;j<=m;j++)
			{
				for(k=0;k<2;k++)
				{
					int x=i+dir[k][0];
					int y=j+dir[k][1];
					if(x<=0||x>n||y<=0||y>m) continue;
					for(int v=0;v<mod;v++){
						int a=map[i][j]-'0';
						int b=(a+v)%mod;
						if(dp[x][y][v]!=-1&&dp[x][y][v]+a>dp[i][j][b]){ 
							dp[i][j][b]=dp[x][y][v]+a;
							pre[i][j][b].x=x;
							pre[i][j][b].y=y;
							pre[i][j][b].v=v;
						}
					}
				}
			}
		mark=0;
		ans=0,max=-1;			
		for(i=1;i<=m;i++)
			if(dp[n][i][0]!=-1&&dp[n][i][0]>max) max=dp[n][i][0],ans=i;
		if(ans==0){
			printf("-1\n");
			continue;
		}
		printf("%d\n%d\n",max,ans);
		dfs(n,ans,0);
		puts("");
	}
}

/*
3 3 1
123
456
789
3 3 0
123
456
789
2 2 10
98
75
*/
		
				
	
	
				 	 				 		  	 	     	