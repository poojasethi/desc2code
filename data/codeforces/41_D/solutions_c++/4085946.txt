#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;


int f[110][110][12], rem[110][110][12], n, m, k;
string ch[110];


int main()
{
	cin >> n >> m >> k;
	k++;
	for (int i = 0; i < n; i++) cin >> ch[i];
	memset(f, -1, sizeof(f));
	for (int i = 0; i < m; i++) f[0][i][ch[0][i] % k] = ch[0][i] - '0';
	for (int i = 0; i + 1 < n; i++)
	{
		for (int j = 0; j < m; j++)
		{
			for (int r = 0; r < k; r++)
			{
				if (f[i][j][r] < 0) continue;
				if (j+1<m)
				{
					int c = f[i][j][r] + ch[i + 1][j + 1] - '0';
					if (f[i + 1][j + 1][c % k] < c)
					{
						f[i + 1][j + 1][c % k] = c;
						rem[i + 1][j + 1][c % k] = 1;
					}
				}
				if (j - 1 >= 0)
				{
					int c = f[i][j][r] + ch[i + 1][j - 1] - '0';
					if (f[i + 1][j - 1][c % k] < c)
					{
						f[i + 1][j - 1][c % k] = c;
						rem[i + 1][j - 1][c % k] = 0;
					}
				}
			}
		}
	}
	int res = -1, kao = -1;
	for (int j = 0; j < m; j++)
	{
		if (f[n - 1][j][0] > res)
		{
			res = f[n - 1][j][0];
			kao = j;
		}
	}
	if (res == -1)
	{
		cout << res;
		return 0;
	}
	cout << res << endl << kao + 1 << endl;
	for (int i = n - 1, j = kao, r = 0; i; i--)
	{
		if (rem[i][j][r])
		{
			r = (r  - (ch[i][j] - '0') % k + k) % k;
			cout << "L";
			j--;
		} else
		{
			r = (r  - (ch[i][j] - '0') % k + k) % k;
			cout << "R";
			j++;
		}
	}
}

    					 	 	  	 	 	 	 	