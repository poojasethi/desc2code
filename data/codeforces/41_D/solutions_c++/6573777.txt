#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair
#define fi first
#define se second

typedef pair<int,int> pint;
typedef long long ll;
typedef unsigned long long ull;
typedef vector<int> vi;


#define MAX_N 105
#define MAX_K 12
#define INF 999999

int n,m,k,a[MAX_N][MAX_N],dp[MAX_N][MAX_N][MAX_K];
bool l[MAX_N][MAX_N][MAX_K];

int main()
{
	scanf("%d %d %d",&n,&m,&k);
	k++;
	char buf[MAX_N];
	for (int i=0; i<n; i++)
	{
		scanf("%s",buf);
		for (int j=0; j<m; j++)
			a[i][j]=buf[j]-'0';
	}
	int tr,tv;
	for (int i=0; i<n; i++)
		for (int j=0; j<m; j++)
			for (int r=0; r<k; r++)
				if (i==0)
					dp[i][j][r]=((r+a[i][j])%k)?-INF:a[i][j];
				else
				{
					tr=(r+a[i][j])%k;
					dp[i][j][r]=j+1<m?dp[i-1][j+1][tr]:-INF;
					tv=j-1>=0?dp[i-1][j-1][tr]:-INF;
					if (tv>dp[i][j][r])
					{
						dp[i][j][r]=tv;
						l[i][j][r]=true;
					}
					dp[i][j][r]+=a[i][j];
				}
	int ans=-1,ansi=-1;
	for (int i=0; i<m; i++)
		if (dp[n-1][i][0]>ans)
			ans=dp[n-1][i][0],ansi=i;
	if (ans<0)
		printf("-1\n");
	else
	{
		printf("%d\n",ans);
		printf("%d\n",ansi+1);
		tr=0;
		bool lf;
		for (pint pos=mp(n-1,ansi); pos.fi>0;)
		{
			lf=l[pos.fi][pos.se][tr];
			tr=(tr+a[pos.fi][pos.se])%k;
			pos.fi--;
			if (lf)
				pos.se--,printf("L");
			else
				pos.se++,printf("R");
		}
		printf("\n");
	}
	return 0;
}
