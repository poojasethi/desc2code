#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <vector>
#include <algorithm>
using namespace std;
#define mp make_pair
#define forn(i,n) for(int i=0;i<(int)n;++i)
#define X first
#define Y second
const int N = 200;
int ans[N][N][11],a[N][N],n,m,k,i,j,l;
pair<pair<int,int>,int> from[N][N][11];

void relax(int t,int ni,int nj)
{
if (nj < 0 || nj >= m || ans[i][j][t] == -1)  
  return;
int q=(t+a[ni][nj])%k;
if (ans[ni][nj][q] < ans[i][j][t] + a[ni][nj])
{
  ans[ni][nj][q] = ans[i][j][t] + a[ni][nj];
  from[ni][nj][q]=mp(mp(i,j),t);
}
}

int main()
{
scanf("%d%d%d",&n,&m,&k);
k++;
forn(i,n)
forn(j,m)
forn(l,k)
ans[i][j][l]=-1;
forn(i,n)
forn(j,m)
{
char c;
scanf(" %c ",&c);
a[i][j]=c-'0';
}
forn(j,m)
ans[n-1][j][a[n-1][j]%k]  = a[n-1][j],
from[n-1][j][a[n-1][j]%k] = mp(mp(n,0),0);
for(i=n-1;i>0;i--)
for(j=0;j<m;j++)
forn(t,k)
{
relax(t,i-1,j-1);
relax(t,i-1,j+1);
}
int mx=0;
forn(i,m)
if (ans[0][i][0] > ans[0][mx][0])
mx=i;
j=mx;
if (ans[0][mx][0]==-1)
printf("-1\n");
else
{
vector<char> v;
while (i!=n-1)
{
pair<pair<int,int>,int> p = from[i][j][l];
v.push_back(p.X.Y==j+1?'L':'R');
i=p.X.X; j=p.X.Y; l=p.Y;
}
printf("%d\n%d\n",ans[0][mx][0],j+1);
reverse(v.begin(),v.end());
forn(i,v.size())
  printf("%c",v[i]);
}
}
