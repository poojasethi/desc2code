#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>

using namespace std;

const int MAXN = 100;
const int INF = 100000000;

const char dir[]={'R','L'};

int n,m,c;

int map[MAXN][MAXN];
int dp[MAXN][MAXN][11];
int pre[MAXN][MAXN][11];

int main()
{
	int i,j,k;
	char ch;
	cin>>n>>m>>c;
	c++;
	for(i=0;i<n;i++)
	{
		for(j=0;j<m;j++)
		{
			cin>>ch;
			map[i][j]=ch-'0';
		}
	}
	for(i=0;i<m;i++)
		for(j=0;j<c;j++)
			dp[0][i][j]=map[0][i]%c==j?map[0][i]:-INF;
	for(i=1;i<n;i++)
		for(j=0;j<m;j++)
			for(k=0;k<c;k++)
			{
				int tc=(k+map[i][j])%c;
				if(j==0 || (j!=m-1 && dp[i-1][j-1][k]<dp[i-1][j+1][k]))
				{

					dp[i][j][tc]=dp[i-1][j+1][k]+map[i][j];
					pre[i][j][tc]=0;
				}
				else
				{
					dp[i][j][tc]=dp[i-1][j-1][k]+map[i][j];
					pre[i][j][tc]=1;
				}
			}
	int res=-1;
	int mark;
	int rec=0;
	for(i=0;i<m;i++)
	{
		if(dp[n-1][i][0]>res)
		{
			res=dp[n-1][mark=i][0];
		}
	}
	if(res==-1)
	{
		puts("-1");
	}
	else
	{
		cout<<res<<endl;
		cout<<mark+1<<endl;
		for(i=n-1;i>0;i--)
		{
			int tmp=rec;
			cout<<dir[pre[i][mark][rec]];
			rec=(rec-(map[i][mark]%c)+c)%c;
			if(pre[i][mark][tmp]==0)
				mark++;
			else mark--;
		}
		cout<<endl;
	}
	return 0;
}
	 	 	  	  	  	   	   	