#include <iostream>
#include <vector>

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef vector<vvi> vvvi;

int main()
{
    int n, m, k;
    cin >> n >> m >> k;
    ++k;
    vvvi v(n, vvi(m, vi(k, -1)) );
    vvvi to(n, vvi(m, vi(k, -1)) );
    vvi field(n, vi(m));
    vi t(m);
    for(int i=0; i<m; ++i) {
    	char c;
    	cin >> c;
    	c -= '0';

    	v[0][i][c % k] = c;
		field[0][i] = c;
    }

    for(int i=1; i<n; ++i) {
    	for(int j=0; j<m; ++j) {
			char c;
			cin >> c;
			t[j] = c-'0';
			field[i][j] = t[j];
		}

		for(int j=0; j<m; ++j)
			for(int l=0; l<k; ++l) {
				int L = j>0 ? v[i-1][j-1][(l-t[j]+k*100)%k] : -1;
				int R = j<m-1 ? v[i-1][j+1][(l-t[j]+k*100)%k] : -1;
				to[i][j][l] = L > R ? -1 : 1;
				v[i][j][l] = max(L, R);
				if(v[i][j][l] != -1)
					v[i][j][l] += t[j];
			}
    }

    int max_j=0;
    for(int j=1; j<m; ++j) {
    	if(v[n-1][max_j][0] < v[n-1][j][0])
			max_j = j;
    }
	int ma = v[n-1][max_j][0];

    int tj;
    if(ma >= 0) {
    	cout << ma << endl << max_j+1 << endl;
    	for(int i=n-1, j=max_j, r=0; i>0; tj=j, j += to[i][j][r], r=(r-field[i][tj]+100*k)%k, --i)
			cout << (to[i][j][r] == -1 ? 'L' : 'R');
    } else {
    	cout << -1;
    }

    return 0;
}
