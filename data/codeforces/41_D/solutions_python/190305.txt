[n,m,k] = [int(i) for i in raw_input().split()]

l = k+1

board = []
for i in range(n):
    board.append([int(i) for i in raw_input()])

board.reverse()

dp = [[(-1,'')]*l for _ in range(m)]

for i in range(m):
    dp[i][board[0][i]%l] = (board[0][i], '')

for i in range(1,n):
    res = [[(-1,'')]*l for _ in range(m)]
    for (sum,path) in dp[1]:
        if sum >= 0:
            tmp = sum + board[i][0]
            if tmp > res[0][tmp%l][0]:
                res[0][tmp%l] = (tmp, path+'L')

    for j in range(1,m-1):
        for (sum,path) in dp[j-1]:
            if sum >= 0:
                tmp = sum + board[i][j]
                if tmp > res[j][tmp%l][0]:
                    res[j][tmp%l] = (tmp, path+'R')
        for (sum,path) in dp[j+1]:
            if sum >= 0:
                tmp = sum + board[i][j]
                if tmp > res[j][tmp%l][0]:
                    res[j][tmp%l] = (tmp, path+'L')

    for (sum,path) in dp[-2]:
        if sum >= 0:
            tmp = sum + board[i][-1]
            if tmp > res[-1][tmp%l][0]:
                res[-1][tmp%l] = (tmp, path+'R')
    dp = res


max = -1
path = ''
start = 0
for i in range(m):
    if dp[i][0][0] > max:
        (max, path) = dp[i][0]
        start = i-path.count('R')+path.count('L')+1

if max >= 0:
    print max
    print start
    print path
else:
    print -1
