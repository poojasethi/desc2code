#include <iostream>
#include <algorithm>
using namespace std;

bool vis[7];
int N,M;
int val[60];
long long d1,d2;
int ans;

void dfs(int i)
{
	if(i==d1+d2)
	{
		int sum1 = 0;
		for(int j=0;j<d1;j++)
			sum1 = 7*sum1 + val[j];
		if(sum1 >= N) return;
		int sum2 = 0;
		for(int j=d1;j<d1+d2;j++)
			sum2 = 7*sum2 + val[j];
		if(sum2 >= M) return;
		ans++;		
	}
	for(int j=0;j<7;j++)
		if(!vis[j])
		{
			vis[j] = 1;
			val[i] = j;
			dfs(i+1);
			vis[j] = 0;
		}
}

int main()
{
	cin >> N >> M;
	d1 = 1;
	d2 = 1;
	long long c1 = 7;
	long long c2 = 7;
	while(c1 < N)
	{
		d1++;
		c1 *= 7;
	}
	while(c2 < M)
	{
		d2++;
		c2 *= 7;
	}
	dfs(0);
	cout << ans << '\n';
}