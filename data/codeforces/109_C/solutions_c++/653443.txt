#include<cstdio>
#include<vector>

#define rep(i,n) for(int i=0;i<(n);i++)

using namespace std;

typedef long long ll;

class UnionFind{
	vector<int> a;
public:
	UnionFind(int n):a(n,-1){}
	int find(int x){
		if(a[x]<0) return x;
		return a[x]=find(a[x]);
	}
	void unite(int x,int y){
		x=find(x),y=find(y);
		if(x!=y){ a[x]+=a[y]; a[y]=x; }
	}
	int size(int x){ return -a[find(x)]; }
};

bool isLucky(int a){
	do{ if(a%10!=4 && a%10!=7) return false; }while(a/=10);
	return true;
}

int main(){
	int n; scanf("%d",&n);
	UnionFind uf(n);
	rep(i,n-1){
		int u,v,w; scanf("%d%d%d",&u,&v,&w); u--; v--;
		if(!isLucky(w)) uf.unite(u,v);
	}

	ll ans=0;
	rep(u,n) if(u==uf.find(u)) {
		ll sz=uf.size(u);
		ans+=sz*(n-sz)*(n-sz-1);
	}
	printf("%I64d\n",ans);

	return 0;
}
