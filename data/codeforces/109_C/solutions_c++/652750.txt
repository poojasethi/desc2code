#include <iostream>
#include <vector>
using namespace std;

typedef long long ll;
typedef vector<int> Vi;

int N;
Vi tree, comp;

bool lucky(int n) {
  if (n == 0) return 0;
  while (n > 0) {
    if (n%10 != 4 and n%10 != 7) return false;
    n /= 10;
  }
  return true;
}

int root(int n) {
  if (tree[n] == -1) return n;
  return tree[n] = root(tree[n]);
}

int main() {
  cin >> N;
  tree = Vi(N, -1);
  comp = Vi(N, 1);
  
  for (int i = 1; i < N; ++i) {
    int a, b, c;
    cin >> a >> b >> c;
    --a; --b;
    
    if (lucky(c)) continue;
    
    int ra = root(a), rb = root(b);
    tree[rb] = ra;
    comp[ra] += comp[rb];
  }
  
  ll res = 0;
  for (int i = 0; i < N; ++i) {
    int r = root(i);
    ll t = N - comp[r];
    res += t*(t - 1);
  }
  cout << res << endl;
}
