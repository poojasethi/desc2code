#include <cstdio>
#include <vector>
using namespace std;
#define pb push_back
const int MaxN = 100111;
vector<int> e[MaxN];
bool isLucky(int k) {
   while(k) {
      if(k % 10 != 4 && k % 10 != 7) return false;
      k /= 10;
   }
   return true;
}
bool v[MaxN];
int dfs(int x){
	if (v[x]) return 0;
	v[x] = true;
	int ret = 0;
	for (vector<int>::iterator it = e[x].begin(); it != e[x].end(); it++)
		ret += dfs(*it);
	return ret + 1;
}
int main(){
	int n;
//	freopen("C.in","r",stdin);
	scanf("%d",&n);
	for (int i = 1; i < n; i++) {
		int x,y,v;
		scanf("%d%d%d",&x,&y,&v);
		if (!isLucky(v))
			e[x].pb(y),e[y].pb(x);
	}
	long long ans = 0;
	for (int i = 1; i <= n; i++) {
		if (!v[i]) {
			long long s = (long long)dfs(i);
			ans += s * (n - s) * (n - s -1);
		}
	}
	printf("%I64d\n",ans);
}