#include <cstdio>
#include <algorithm>
#define N 100005
#define FI(a, b, c) for(int a = b; a <= c; a++)
#define FD(a, b, c) for(int a = b; a >= c; a--)
using namespace std;

typedef long long LL;

int n, v[N + N], o[N + N], f[N], p, s[N], c;
LL A;
bool t[N + N], u[N];

void add(int a, int b, bool d){
	v[++p] = b;
	o[p] = f[a];
	f[a] = p;
	t[p] = d;
}

bool is(int x){
	return x ? (x % 10 == 4 || x % 10 == 7 ? is(x / 10) : 0) : 1;
}

void dfs(int x){
	s[c]++;
	u[x] = 1;
	for(int i = f[x]; i; i = o[i])
		if(!u[v[i]] && !t[i])
			dfs(v[i]);
}

int main(){
	scanf("%d", &n);
	
	FI(i, 2, n){
		int a, b, c;
		scanf("%d %d %d", &a, &b, &c);
		bool d = is(c);
		add(a, b, d);
		add(b, a, d);
	}
	
	FI(i, 1, n) if(!u[i]){
		c++;
		dfs(i);
	}
	
	FI(i, 1, c)
		A += (LL) s[i] * (n - s[i]) * (n - s[i] - 1);
	
	printf("%I64d\n", A);
}
