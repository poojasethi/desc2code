#include<iostream>
#include<vector>
using namespace std;
const int maxn=100000;
vector<int>adj[maxn];
int mrk[maxn];
int dfs(int s)
{
	int r=1;
	if (mrk[s]==0)
	{
		mrk[s]=1;
		for(int i=0;i<adj[s].size();i++)
		{
			r+=dfs(adj[s][i]);
		}
		return r;
	}
	return 0;
}
int check(int x)
{
	int y,h;
	y=x;
	while(y>0)
	{
		h=y%10;
		if(h!=4&&h!=7)
			return 0;
		y=y/10;
	}
	return 1;
}
int main()
{
vector<int>ver;
int num,a,b,c;
cin >>num;
for(int i=0;i<num-1;i++)
{
	cin>>a>>b>>c;
	if(check(c)==0)
	{
	    adj[a-1].push_back(b-1);
		adj[b-1].push_back(a-1);
	}
}
int arr[maxn],t=0,k;
for(int i=0;i<num;i++)
{
    k=dfs(i);
	if(k!=0)
	{
		arr[t]=k;
		t++;
	}
}
long long sum=0;
for(int i=0;i<t;i++)
{
	sum+=(long long)(num-arr[i])*(num-arr[i]-1)*arr[i];
}
cout<<sum;
cin>>a;
return 0;
}
