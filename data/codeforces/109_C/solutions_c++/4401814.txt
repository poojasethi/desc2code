#include<iostream>
#include<cstdio>
#include<cstring>
#include<vector>
using namespace std;
#pragma comment(linker,"/STACK:65536000")
const int N =100005;
vector<int> v[N];
int a,b,w,n;
long long ans,cur;
bool visit[N];
bool judge(int k)
{
	while(k)
	{
		if(k%10!=4&&k%10!=7)return false;
		k/=10;
	}
	return true;
}
void dfs(int u)
{
	visit[u]=true;
	++cur;
	for(int i=0;i<v[u].size();i++)
	{
		if(!visit[v[u][i]])dfs(v[u][i]);
	}
}
int main()
{
	scanf("%d",&n);
	ans=0;
	for(int i=1;i<n;i++)
	{
		scanf("%d%d%d",&a,&b,&w);
		if(!judge(w))//not luck pts form a component
		{
			v[a].push_back(b);
			v[b].push_back(a);
		}
	}
	for(int i=1;i<=n;i++)
	{
		if(!visit[i])
		{
			cur=0;//size
			dfs(i);
			ans+=cur*(n-cur)*(n-cur-1);

			//cur和有關子樹 通過幸運邊連到外面兩個點
		}
	}
	cout<<ans<<endl;
	return 0;
}