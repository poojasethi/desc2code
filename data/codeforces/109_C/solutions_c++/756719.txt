#include <iostream>
#include <cstdlib>
#include <vector>

using namespace std;
const long long mx=100000+100;
long long n,mark[mx],size,x,y,c;
vector <long long> adj[mx];

bool lucky(long long x)
{
	if(!x)
		return true;
	if(x%10==4||x%10==7)
		return lucky(x/10);
	else
		return false;
}

long long check()
{
	for(long long i=0;i<n;i++)
	{
		if(!mark[i])
			return i;
	}
	return -1;
}

void dfs(long long v)
{
	if(mark[v])
		return;
	mark[v]=1;
	size++;
	for(long long i=0,z=adj[v].size();i<z;i++)
	{
		long long u=adj[v][i];
		if(!mark[u])
		{
			dfs(u);
		}
	}
}

int main()
{
	cin>>n;
	for(long long i=0;i<n-1;i++)
	{
		cin>>x>>y>>c;
		if(lucky(c))
			continue;
		x--;
		y--;
		adj[x].push_back(y);
		adj[y].push_back(x);
	}

	long long p;
	long long ans=0;
	for(int i=0;i<n;i++)
	{
		size=0;
		dfs(i);
		ans+=size*(n-size)*(n-size-1);
	}
	cout<<ans<<endl;
	return 0;
}
