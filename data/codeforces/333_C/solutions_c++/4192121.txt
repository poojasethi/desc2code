
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

int K,m;
vector<int> v[10010];

void dfs(int k)
{
    if(v[k].size())return;
    int B=10;
    v[k].push_back(k);
    while(B<k){
	int a = k%B,b=k/B;
	dfs(a); dfs(b);
	for(int i=0;i<v[a].size();++i)
	    for(int j=0;j<v[b].size();++j){
		v[k].push_back( v[a][i]*v[b][j] );
		v[k].push_back( v[a][i]+v[b][j] );
		if(v[a][i]>v[b][j])
		    v[k].push_back( v[a][i]-v[b][j] );
		else
		    v[k].push_back( -v[a][i]+v[b][j] );
	    }
	B*=10;
    }
    sort(v[k].begin(),v[k].end());
    vector<int>::iterator it = unique(v[k].begin(),v[k].end());
    v[k].resize(distance(v[k].begin(),it));
}

bool check(int pre,int post)
{
    if(pre<0||pre>=10000)return false;
    printf("%04d%04d\n",pre,post);
    return --m==0;
}


int main()
{
    scanf("%d%d",&K,&m);
    for(int i=0;i<10000;++i){
	dfs(i);
	for(int j=0;j<v[i].size();++j){
	    if(check(K-v[i][j],i))return 0;
	    if(v[i][j] && check(K+v[i][j],i))return 0;
	}
    }
    return 0;
}
