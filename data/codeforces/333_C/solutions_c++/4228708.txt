#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
#include <vector>

using namespace std;

int k, n;

vector<int> process(int x, int l)
{
  vector<int> p;
  p.push_back(x);
  p.push_back(-x);
  int base = 1;
  for (int i = 1; i < l; i++) base *= 10;
  for (int i = 1; i < l; i++, base /= 10)
  {
    vector<int> p1, p2;
    p1 = process(x / base, i);
    p2 = process(x % base, l - i);
    for (int i = 0; i < p1.size(); i++)
      for (int j = 0; j < p2.size(); j++) 
      {
        p.push_back(p1[i] + p2[j]);
        p.push_back(p1[i] * p2[j]);
      }
  }
  
  sort(p.begin(), p.end());
  p.resize(unique(p.begin(), p.end()) - p.begin());
  return p;
}

main()
{
  scanf("%d%d", &k, &n);
  //freopen("C.OUT", "w", stdout);
  for (int i = 0; n && i < 10000; i++)
  {
    vector<int> p = process(i, 4);
    for (int u = 0; n && u < p.size(); u++)
    {
      int j = k - p[u];
      if (0 <= j && j < 10000) 
      {
        printf("%04d%04d\n", i, j);
        n--;
      }
    }
  }
  
  //system("pause");
}
