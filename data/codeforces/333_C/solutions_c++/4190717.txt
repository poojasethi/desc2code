#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<cctype>
#include<algorithm>
#include<vector>

using namespace std;

int K, M;

vector<int> dfs(int now, int len) 
{
    vector<int> res;
    res.push_back(now);
    res.push_back(-now);
    for (int i = 1, mo = 10; i < len; ++i, mo *= 10)
	{
        vector<int> v1 = dfs(now / mo, len - i), v2 = dfs(now % mo, i);
        for (int k1 = 0; k1 < (int)v1.size(); ++k1)
            for (int k2 = 0; k2 < (int)v2.size(); ++k2) 
			{
                res.push_back(v1[k1] + v2[k2]);
                res.push_back(v1[k1] * v2[k2]);
            }
    }
    sort(res.begin(), res.end());
    res.resize(unique(res.begin(), res.end()) - res.begin());
    return res;
}

void print(int a, int b)
{
    if (M > 0) 
        printf("%04d%04d\n", a, b);
    M--;
}

int main()
{

    scanf("%d%d", &K, &M);
    for (int r = 0; r < 10000; ++r) {
        vector<int> suff = dfs(r, 4);
        for (int i = 0; i < (int)suff.size(); ++i) {
            int now = suff[i];
            int pre = K - now;
            if (pre >= 0 && pre < 10000) print(K - now, r); 
        }
    }

    return 0;

}