
def search(marks, dist):
    start = 0
    end = 1
    while end < len(marks):
        diff = marks[end] - marks[start]
        if diff < dist:
            end += 1
        elif diff == dist:
            return True
        else:
            start += 1
    return False

def where(marks, toPut, toGet, marksSet):
    for i in xrange(len(marks)):
        pos = marks[i] + toPut
        if pos <= marks[-1]:
            if (pos - toGet) in marksSet or (pos + toGet) in marksSet:
                return pos
        pos = marks[i] - toPut
        if pos < 0:
            continue
        if (pos - toGet) in marksSet or (pos + toGet) in marksSet:
            return pos
    return None


n,l,x,y = map(int, raw_input().split())
marks = map(int, raw_input().split())

xpos = search(marks, x)
ypos = search(marks, y)

if xpos and ypos:
    print 0
elif xpos:
    print 1
    print y
elif ypos:
    print 1
    print x
else:
    wherePutx = where(marks, x, y, marksSet=set(marks))
    if wherePutx is None:
        print 2
        print x, y
    else:
        print 1
        print wherePutx
