n,l,x,y = map(int,raw_input().split())
marks = {x : 1 for x in map(int,raw_input().split())}

found = [False,False]
for s in marks:
    if (x+s) in marks:
        found[0] = True
    if (y+s) in marks:
        found[1] = True

def find_one(target,l):
    ans = set()
    for s in marks:
        if (s+target) <= l:
            ans.add(s+target)
        if (s-target) >= 0:
            ans.add(s-target)
    return ans

def find_two(x,y,l):
    #find a number before or after it there x and y
    for s in marks:
        if (s+x) <= l and (s+y) <= l:
            return ((s+x),(s+y))
        if (s+x) <= l and (s-y) >= 0:
            return ((s+x),(s-y))
        if (s-x) >= 0 and (s+y) <= l:
            return ((s-x),(s+y))
        if (s-y) >= 0 and (s-y) >= 0:
            return ((s-x),(s-y))



if all(found):
    print "0"
elif found[0] or found[1]:
    target = y if found[0] else x
    ans = find_one(target,l)
    t = 0
    if ans != set():
        t = list(ans)[0]
    else:  t = -1
    if t != -1:
        print "1"
        print t
    else :
        print "2"
        print "0 %d" %target
else:
    right = find_one(x,l)
    left = find_one(y,l)
    intersect = right & left
    if intersect != set():
        print "1"
        print list(intersect)[0]
    else:
        ans = find_two(x,y,l)
        if ans != None:
            print "2"
            print "%d %d" %(ans[0],ans[1])
        else:
            print "3"
            print "0 %d %d" %(x,y)
    
    
