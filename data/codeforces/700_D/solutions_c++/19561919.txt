#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<queue>
#define TAT "%I64d"
#define N 100005
#define Siz 1505
#define Cur 305
#define LL long long
#define oo (1<<30)
using namespace std;
int n,q,a[N],cnt[N],col[N],tmp[N],lar[N],m; LL ans[N];
struct qry{
	int l,r,num;
	qry(int _l=0,int _r=0,int _num=0){ l=_l,r=_r,num=_num;}
}Q[N];
bool cmp(const qry &p,const qry &q)
{
	return p.l/Cur<q.l/Cur||(p.l/Cur==q.l/Cur&&p.r<q.r);
}
void modify(int t,int c)
{
	cnt[col[t]]--;
	col[t]+=c;
	cnt[col[t]]++;
}
LL calc()
{
	int i,j,x,y,p=-1; LL res=0;
	for(i=1;i<=2*Siz;i++) tmp[i]=0;
	for(i=1;i<=Siz;i++) tmp[i]=cnt[i];
	for(i=1;i<=Siz;i++){
		if(!tmp[i]) continue;
		if(p!=-1){
			tmp[i]--;
			res+=i+p;
			tmp[i+p]++;
			p=-1;
		  }
		x=tmp[i]/2;
		res+=2LL*x*i;
		tmp[i*2]+=x;
		if(tmp[i]&1) p=i;
	  }
	priority_queue<int> Q;
	if(p!=-1) Q.push(-p);
	for(i=Siz+1;i<=2*Siz;i++)
		for(j=1;j<=tmp[i];j++) Q.push(-i);
	for(i=1;i<=m;i++)
		if(col[lar[i]]>Siz)
			Q.push(-col[lar[i]]);
	while(Q.size()>1){
		x=Q.top(),Q.pop();
		y=Q.top(),Q.pop();
		res-=x+y;
		Q.push(x+y);
	  }
	return res;
}
int main()
{
	int i,l=1,r=0;
	scanf("%d",&n);
	for(i=1;i<=n;i++)
		scanf("%d",&a[i]),cnt[a[i]]++;
	for(i=1;i<N;i++)
		if(cnt[i]>Siz) lar[++m]=i;
	memset(cnt,0,sizeof(cnt));
	scanf("%d",&q);
	for(i=1;i<=q;i++)
		scanf("%d %d",&Q[i].l,&Q[i].r),Q[i].num=i;
	sort(Q+1,Q+q+1,cmp);
	for(i=1;i<=q;i++){
		while(r<Q[i].r) modify(a[++r],+1);
		while(l>Q[i].l) modify(a[--l],+1);
		while(r>Q[i].r) modify(a[r--],-1);
		while(l<Q[i].l) modify(a[l++],-1);
		ans[Q[i].num]=calc();
	  }
	for(i=1;i<=q;i++)
		printf(TAT"\n",ans[i]);
	return 0;
}
