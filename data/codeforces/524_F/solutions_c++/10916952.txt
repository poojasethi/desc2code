#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <climits>
#include <string>

using namespace std;

typedef int arr[3000010];

string s;
int n, ans, l, r, q[1000010], y = 1;

inline bool check(int x)
{
	while (l < r && q[l % n] < x) l ++;
	for (; y <= x; y ++)
		{
			if (s[y - 1] == '(') q[r ++] = y - 1 + n;
			else if (l < r) r --;
		}
	return r - l > max(ans, 0);
}

inline void solve()
{
	int i = -1;
	for (int j = 0, k, l; j < n; )
		{
			if (check(j)) {j ++; continue; }

			if (i == -1) { i = j; j ++; continue; }
			for (k = 0; k < n && s[(i + k) % n] == s[(j + k) % n]; k ++);
			if (k >= n) break;
			if (s[(i + k) % n] < s[(j + k) % n]) j += k + 1;
			else l = i + k, i = j, j = max(l, j) + 1;
		}
	cout << s.substr(i, n);
}

int main()
{
	cin >> s; n = s.length();
	for (int i = 0; i < n; i ++)
		if (s[i] == '(') ans ++, q[r ++] = i; else { ans --; if (r > 0) r --; }
	if (ans < 0)
		for (int i = 1; i <= -ans; i ++) putchar('(');
	s += s;
	solve();
	if (ans > 0)
		for (int i = 1; i <= ans; i ++) putchar(')');
	return 0;
}
