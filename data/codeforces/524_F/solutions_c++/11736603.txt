#include<cstdio>
#include<iostream>
#include<cstring>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<queue>
#include<vector>
#include<algorithm>
#define rep(i,l,r) for(int i=l;i<=r;i++)
#define drep(i,r,l)for(int i=r;i>=l;i--)
#define repmatrix() for(int i=1;i<=m;i++)for(int j=1;j<=n;j++)
#define lth th<<1
#define rth th<<1|1
using namespace std;
const long long mod=1000000007;
char s[1111111];
int cd[2222222];
int sum[2222222];
int mm[2222222];
int q[2222222];
long long val[2222222];
long long hash[2222222];
int n,lim;
long long gethash(int l,int r){
    return (hash[l]-hash[r+1]*val[r-l+1]%mod+mod)%mod;
}
void input(){
    scanf("%s",s+1);
        n=strlen(s+1);
        rep(i,1,n){
            if(s[i]=='(')cd[i]=cd[n+i]=0;
            else cd[i]=cd[n+i]=1;
        }
        val[0]=1;
        rep(i,1,n<<1)val[i]=(val[i-1]*233)%mod;
        drep(i,n<<1,1)hash[i]=(hash[i+1]*233+cd[i])%mod;
        rep(i,1,n<<1){
            if(cd[i]==0)sum[i]=sum[i-1]+1;
            else sum[i]=sum[i-1]-1;
        }
        lim=min(sum[n],0);
}
int h=1,t=0;
bool cmp(int i,int j){
    if(cd[i]<cd[j])return 0;
    if(cd[i]>cd[j])return 1;
    int l=1,r=2*n-i+1,mid;
    while(l!=r){
        mid=l+r>>1;
        if(gethash(i,i+mid-1)!=gethash(j,j+mid-1))r=mid;
        else {
            if(l+1==r){
                if(gethash(i,i+l)==gethash(j,j+l))l=r;
                else r=l;
            }
            else l=mid;
        }
    }
    //cout<<l<<endl;
    if(l==2*n-i+1)return 0;
    return cd[i+l]>cd[j+l];
}
int main(){
    input();
    rep(i,1,n<<1){
        while(h<=t&&q[h]<=i-n)h++;
        if(i>=n)mm[i-n+1]=sum[q[h]]-sum[i-n];
        while(h<=t&&sum[i]<sum[q[t]])t--;
        q[++t]=i;
    }
    int bj;
//  rep(i,1,n)if(mm[i]>=lim)cout<<i<<endl;
    rep(i,1,n)
        if(mm[i]>=lim){
            bj=i;
            break;
        }
    rep(i,bj+1,n)if(mm[i]>=lim){
        if(cmp(i,bj)==0)bj=i;
    }
    if(lim<=0)rep(i,1,-lim)printf("(");
    rep(i,bj,bj+n-1){
        if(cd[i])printf(")");
        else printf("(");
    }
    if(sum[n]>=0)rep(i,1,sum[n])printf(")");
    puts("");
    return 0;
}
			 		 		 			 				 		       	 	