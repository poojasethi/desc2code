#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <climits>
#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <stack>
#include <cassert>
#include <vector>
#define all(x) x.begin() , x.end()
#define fi first
#define se second
#define pb push_back
#define umax( x , y ) x = max( x , (y) )
#define umin( x , y ) x = min( x , (y) )
#define For( i , a ) for(int i=1;i<=a;i++)
#define ort (b+s)/2
#define y2 asrwjaelkf
#define y1 asseopirwjaelkf

using namespace std;

const int maxn = 2000020;
const int maxx = 10000;
const int MOd = 1e9+7;
const int K = 750;
const int P = 143;

typedef long long Lint;
typedef double db;
typedef pair<Lint,Lint> ii;
typedef pair<ii,int> iii;

int a, dn[maxn];
long long prime[maxn], hash[maxn], bs[maxn];
int segment[1<<22], n, val[maxn];
char ar[maxn*2];

Lint add( Lint a, Lint b ) {
	a += b;
	if( a >= MOd ) a -= MOd;
	return a;
}

Lint mul( Lint a, Lint b ) {
	return a*b % MOd;
}

Lint sub( Lint a, Lint b ) {
	a -= b;
	if( a < 0 ) a += MOd;
	return a;
}

bool f( int i, int j ) {
	int t = -1;
	for(int k=19;k>=0;k--) {
		int h = t + (1<<k);
		if( h <= a && mul(sub(hash[i+h],hash[i-1]),prime[j-1]) == mul(sub(hash[j+h],hash[j-1]),prime[i-1]) ) t+= 1<<k;
	}
	t++;
	return ar[i+t] > ar[j+t];
}

int find( int l, int r ) {
	int t = 1e9;
	for(l+=n-1,r+=n-1;l<=r;l=(l+1)>>1, r=(r-1)>>1) {
		if( l&1 ) umin( t, segment[l] );
		if( ~r&1 ) umin( t, segment[r] );
	}
	return t;
}

int main() {
	
	scanf(" %s",ar+1);
	a = strlen( ar+1 );
	
	for(int i=1;i<=a;i++)
		ar[a+i] = ar[i];
	
	n = 1;
	while( n < a+a ) n <<= 1;
	
	int sum = 0;
	
	for(int i=1;i<=a+a;i++) {
		if( ar[i] == '(' ) segment[i+n-1] = segment[i+n-2] + 1, sum++;
		else segment[i+n-1] = segment[i+n-2] - 1, sum--;
	}
	sum /= 2;
	for(int k=n-1;k>=1;k--)
		segment[k] = min( segment[k+k], segment[k+k+1] );
	prime[0] = 1;
	for(int i=1;i<=a+a;i++) prime[i] = mul( prime[i-1] , P );
	//~ for(int i=1;i<=a+a;i++) bs[i] = bs[i-1] + prime[i] * '(';
	for(int i=1;i<=a+a;i++) hash[i] = add( hash[i-1] , mul( ar[i] , prime[i] ) );
	
	int t = 0;
	int h2[maxn];
	//~ asd( 1, 2, 1 );
	val[0] = 1e9;
	for(int i=1;i<=a;i++) {
		int h = find( i, i+a-1 ) - segment[(i==1)? 0:i+n-2];
		umin( h, 0 );
		h = abs( h );
		//~ h2[i] = abs(h);
		//~ printf("asdasd %d %d %d\n",i,h,sum);
		val[i] = h + abs( sum+h );
		//~ if( sum+h < 0 ) h2[i] = val[i];
		//~ printf("asdasd %d %d\n",i,val[i]);
		if( val[t] > val[i] || ( val[t] == val[i] && f( t, i ) ) ) t = i;
	}
	//~ if( ar[1] == '(' && ar[2] == ')'e && ar[3] == ')' ) printf("%d %d\n",t,a);
	int k = 0;
	int x = 0;
	for(int i=t;i<a+t;i++) {
		if( ar[i] == '(' ) k++;
		else k--;
		umin( x, k );
	}
	k = 0;
	while( x < 0 ) x++, printf("("), k++;
	
	for(int i=t;i<a+t;i++) {
		if( ar[i] == '(' ) k++;
		else {
			k--;
			if( k < 0 ) printf("("), k++;
		}
		printf("%c",ar[i]);
	}
	while( k > 0 ) k--, printf(")");
	printf("\n");
	return 0;
}
