#include <algorithm>
#include <cstdio>
#include <cstdlib>
#include <cstring>

using namespace std;

#define fill(a, x) memset (a, x, sizeof(a))

int n, kk, x, y, cnt[111111], to[111111][4], rr[111111];
bool w[111111];

bool go(int pp, int p, int k) {
	int xx, yy;
	for (int i = 0; i < 4; ++i)
		for (int j = 0; j < 4; ++j) {
			xx = to[pp][i], yy = to[p][j];
			if (xx == yy && (!w[xx] || (k == n - 1 && xx == y))) {
				w[rr[k] = xx] = true;
				if (k == n - 1) return xx == y;
				return go(p, xx, k + 1);
			}
		}
	return false;
}

int main() {
	scanf("%d", &n);
	kk = n << 1;
	for (int i = 0; i < kk; ++i) {
		scanf("%d%d", &x, &y);
		to[x][cnt[x]++] = y;
		to[y][cnt[y]++] = x;
	}
	for (int i = 0; i < 4; ++i)
		for (int j = i + 1; j < 4; ++j) {
			fill(w, 0);
			w[1] = w[x = to[1][i]] = w[y = to[1][j]] = true;
			rr[0] = 1;
			rr[1] = x;
			if (go(1, x, 2)) {
				for (int k = 0; k < n; ++k)
					printf("%d ", rr[k]);
				return 0;
			}
		}
	printf("-1");
	return 0;
}
