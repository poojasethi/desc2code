#include <iostream>  
#include<string.h>
#include<cmath>
#include<algorithm>
#include<queue>
#include<stdio.h>
using namespace std;  
const int 		Maxn=100010;
int				i,n,a,b,vis[Maxn],ans[Maxn],now[Maxn],can;
vector<int>     e[Maxn];

void dfs(int p,int u,int f)
{
	now[p]=u;
	vis[u]=1;
	if (p==n-1) can=1;
	for (int i=0;i<4;i++)
	if (!vis[e[u][i]])
	{
		int check=0;
		for (int j=0;j<4;j++)
		if (e[f][j]==e[u][i])
		{
			check=1; break;
		}
		if (check) dfs(p+1,e[u][i],u);
	}
}
int main()
{
	//freopen("1.in","r",stdin);
	//freopen("2.out","w",stdout);	
	scanf("%d",&n);
	for (i=1;i<=2*n;i++)
	{
		scanf("%d%d",&a,&b);
		e[a].push_back(b);
		e[b].push_back(a);
	}
	for (i=1;i<=n;i++)
	if (e[i].size()!=4)
	{
		cout<<-1<<endl;
		return 0;
	}
	for (int i=0;i<4;i++)
	for (int j=i+1;j<4;j++)
	{
		can=0;
		memset(now,0,sizeof(now));
		memset(vis,0,sizeof(vis));
		now[1]=1;
		now[2]=e[1][i];
		now[n]=e[1][j];
		vis[now[2]]=vis[now[n]]=vis[1]=1;
		dfs(2,now[2],1);
		if (can)
		{
			for (int k=1;k<=n;k++) ans[k]=now[k];
			
		}
	}
	if (ans[1])
	for (i=1;i<=n;i++)printf("%d ",ans[i]);
	else cout<<-1<<endl;
}
