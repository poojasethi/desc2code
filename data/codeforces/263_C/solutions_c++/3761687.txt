#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

const int MAXN = 100000 + 86;

vector <int> e[MAXN];
bool v[MAXN];
int x[MAXN];

int next(int p, int c) {
	for (int i=0; i<4; ++i) if (!v[e[c][i]]) {
		int j = e[c][i], cc = 0;	
		for (int k=0; k<4; ++k) {
			for (int s=0; s<4; ++s) if (e[c][s] == e[j][k]) ++cc;	
		}
		if (cc == 2) {
			if (p == -1) return j;
			for (int k=0; k<4; ++k) if (e[p][k] == j) return j;
		}
	}	
	return -1;
}

int main() {
	int n;

	scanf("%d", &n);

	for (int i=0,a,b; i<2*n; ++i) {
		scanf("%d%d", &a, &b);
		e[a].push_back(b), e[b].push_back(a);
		if (e[a].size() > 4 || e[b].size() > 4) return puts("-1"), 0;
	}
	if (n == 5) {
		for (int i=0; i<5; ++i) printf("%d%s", i+1, i==4?"\n":" ");
		return 0;
	}
	for (int t=0,c=1,p=-1; t<n; ++t) {
		x[t] = c, v[c] = true;
		if (t == n - 1) break;
		p = next(p, c);
		swap(c, p);
		if (c == -1) return puts("-1"), 0;
	}	
	for (int i=0; i<n; ++i) printf("%d%s", x[i], i==n-1?"\n":" ");

	return 0;
}
