#include <iostream>
#include <cstring>
#include <algorithm>
#include <vector>

#define MAXN 100050

using namespace std;

int n;
vector<int> a[MAXN], b;
bool flag[MAXN]={0};

bool pan(int x, int y)
{
	int sum=0;
	for(int i=0; i<4; i++)
		for(int j=0; j<4; j++)
			if(a[x][i]==a[y][j]) sum++;
	if(sum>=2) return true;
	return false;
}

int main()
{
	cin>>n;
	for(int i=0; i<n*2; i++)
	{
		int x, y;
		cin>>x>>y;
		a[x].push_back(y);
		a[y].push_back(x);
	}
	for(int i=1; i<=n; i++)
		if(a[i].size()<4) { cout<<-1<<endl; return 0; }
	if(n==5)
	{
		cout<<"1 2 3 4 5"<<endl;
		return 0;
	}
	else if(n==6)
	{
		int b[7]={0, 0}, ans[7]={0}, ff[7]={0};
		for(int i=1; i<=6; i++)
		{
			bool f[7]={0};
			f[i]=1;
			for(int j=0; j<4; j++) f[a[i][j]]=1;
			for(int j=1; j<=6; j++) if(f[j]==0) b[i]=j;
		}
		for(int i=1; i<=3; i++)
			for(int j=1; j<=6; j++)
				if(!ff[j]) { ans[i]=j, ans[i+3]=b[j], ff[b[j]]=ff[j]=1; break; }
		for(int i=1; i<=6; i++) cout<<ans[i]<<" "; cout<<endl;
		return 0;
	}
	b.push_back(1); flag[1]=true;
	for(int i=1; i<n; i++)
	{
		int p=b[b.size()-1];
		for(int i=0; i<4; i++)
		{
			if(!flag[a[p][i]] && pan(p, a[p][i])) { b.push_back(a[p][i]), flag[a[p][i]]=true; break; }
		}
		if(p==b[b.size()-1]) { cout<<-1<<endl; return 0; }
	}
	for(int i=0; i<n; i++) cout<<b[i]<<" "; cout<<endl;
	return 0;
}
