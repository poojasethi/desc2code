#include<iostream>
#include<cstdlib>
#include<cstdio>
using namespace std;
const int MAXN=440000;
struct Node{
	int v;
	Node *Next;
};
Node *adj[MAXN];
Node edge[MAXN];
Node *Cnt1=&edge[0];
void addedge(int u,int v){
	Node *p=++Cnt1;
	p->v=v;
	p->Next=adj[u];
	adj[u]=p;
}
int n,Num[MAXN],Cnt,Ans[MAXN],vis[MAXN];
bool DFS(int u,int fa,int Depth){
	if(Depth>=n/2+1)
		return 1;
	if(!vis[u]){
		vis[u]=1;
		Ans[Depth]=u;
		if(fa==-1){
			for(Node *p=adj[u];p;p=p->Next){
				int v=p->v;
				if(DFS(v,u,Depth+1))
					return 1;
			}
		}
		else{
			for(Node *p=adj[u];p;p=p->Next){
				int v=p->v;
				if(v==fa) continue;
				int f1=0,f2=0;
				for(Node *q=adj[v];q;q=q->Next){
					if(q->v==u)
						f1=1;
					if(q->v==fa)
						f2=1;
				}
				if(f1+f2==2){
					if(DFS(v,u,Depth+1))
						return 1;
				}
			}
		}
		vis[u]=0;
	}
	return 0;
}
int main()
{
	scanf("%d",&n);
	n*=2;
	for(int i=1;i<=n;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		addedge(u,v);
		addedge(v,u);
		Num[u]++; Num[v]++;
	}
	for(int i=1;i<=n/2;i++)
		if(Num[i]!=4)
		{
			printf("%d",-1);
			return 0;
		}
	if(DFS(1,-1,1)){
	    for(int i=1;i<=n/2;i++)
			printf("%d ",Ans[i]);
	}
	else
		printf("%d",-1);
	return 0;
}
 	   	 			  	   		  		   	