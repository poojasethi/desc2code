#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
vector <int> vt[100010];
int n, a, b, stack[100010], cnt, vi[100010];
int dfs(int x){
	stack[++cnt] = x;
	vi[x] = 1;
	if(cnt == n){
		int f = 0;
		for(int i = 0; i < vt[x].size(); i++)
			if(vt[x][i] == 1){
				f = 1;
				break;
			}
		if(!f)
			return 0;
		f = 0;
		for(int i = 0; i < vt[stack[cnt - 1]].size(); i++)
			if(vt[stack[cnt - 1]][i] == 1){
				f = 1;
				break;
			}
		if(f)
		return f;
		cnt--;
		vi[x] = 0;
		return 0;
	}
	if(cnt >= 2){
		for(int i = 0; i < vt[stack[cnt - 1]].size(); i++)
			for(int j = 0; j < vt[stack[cnt]].size(); j++){
				int x = vt[stack[cnt - 1]][i];
				int y = vt[stack[cnt]][j];
				if(x == y && !vi[x] && dfs(x))
					return 1;
			}
	}
	vi[x] = 0;
	cnt--;
	return 0;
}
int main(){
	scanf("%d", &n);
	for(int i = 0 ;i < 2 * n; i++){
		scanf("%d%d", &a, &b);
		vt[a].push_back(b);
		vt[b].push_back(a);
	}
	for(int i = 1; i <= n; i++){
		if(vt[i].size() != 4){
			puts("-1");
			return 0;
		}
	}
	stack[1] = 1;
	vi[1] = 1;
	int f = 0;
	for(int i = 0; i < vt[1].size(); i++){
		int y = vt[1][i];
		cnt  = 1;
		if(dfs(y)){
			f = 1;
			break;
		}
	}
	if(!f)
		puts("-1");
	else
	for(int i = 1; i <= n; i++)
		printf("%d ",stack[i]);
	return 0;
}
