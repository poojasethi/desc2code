#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <string.h>
#include <math.h>
#include <sstream>
#include <vector>
#include <queue>
#include <set>
#include <map>

const double eps=1e-8;
const int inf=0x3f3f3f3f;

using namespace std;

#define sz(x) (int((x).size()))
#define pb push_back
#define mp make_pair

typedef long long ll;

const int N=1000010;

int ans[N],vis[N];
vector<int> vt[N];
map<int,int> h[N];
int n;
int f=0;

void dfs(int x)
{
	if(x==n)
	{
		if(h[ans[n-1]].find(ans[1]) != h[ans[n-1]].end() && h[ans[n]].find(ans[1])!=h[ans[n]].end()
			&& h[ans[n]].find(ans[2])!=h[ans[n]].end())
		{
			for(int i=1;i<=n;i++)
				cout<<ans[i]<<" ";
			exit(0);
		}
		return ;
	}
	for(int i=0;i<sz(vt[ans[x]]);i++)
	{
		ans[x+1]=vt[ans[x]][i];
		if(vis[ans[x+1]] || (x>1 && h[ans[x+1]].find(ans[x-1])==h[ans[x+1]].end()))
			continue;
		vis[ans[x+1]]=1;
		dfs(x+1);
		vis[ans[x+1]]=0;
	}
}


int main()
{
	scanf("%d",&n);
	for(int i=0;i<n+n;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		vt[a].pb(b);
		vt[b].pb(a);
		h[a][b]=1;
		h[b][a]=1;
	}
	for(int i=1;i<=n;i++)
	{
		if(sz(vt[i])!=4)
		{
			cout<<-1<<endl;
			return 0;
		}
	}
	ans[1]=1;
	vis[1]=1;
	dfs(1);
		cout<<-1<<endl;
    return 0;
}