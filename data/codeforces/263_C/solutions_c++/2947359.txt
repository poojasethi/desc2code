#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<vector>
#include<map>
#include<string>
using namespace std;
vector< vector<int> > pts;
int out[100001];
int done[100001];
int n;
int solve(int v1,int v2)
{
	int i,j,k;
	for(i=0;i<=n;i++){
		out[i]=0;
		done[i]=0;
	}
	out[0]=1;out[1]=v1;out[2]=v2;
	done[1]=1;done[v1]=1;done[v2]=1;
	int tmp1,tmp2;
	int fl;
	for(i=3;i<n;i++){
		int prev = out[i-1];
		for(j=0;j<4;j++){
			fl=0;
			tmp1 = pts[prev][j];
			if(done[tmp1]==1)
				continue;
			for(k=0;k<4;k++){
				int tmp2 = pts[tmp1][k];
				if(tmp2==out[i-2]){
					fl=1;
				}

			}
			if(fl==1){
				out[i] = tmp1;
				done[tmp1]=1;
				break;
			}
		}
		if(fl==0)
			return 0;
	}
	return 1;
}

int main()
{
	scanf("%d",&n);
	int i,j,k;
	for(i=0;i<n+1;i++){
		pts.push_back(vector <int> ());
	}
	int err=0;
	for(i=0;i<2*n;i++){
		int x,y;
		scanf("%d%d",&x,&y);
		pts[x].push_back(y);
		pts[y].push_back(x);
		if(pts[x].size()>4 || pts[y].size()>4)
			err=-1;
	}
	if(err==-1){
		printf("-1\n");
		return 0;
	}
	int v1,v2;
	for(i=0;i<4;i++){
		for(j=0;j<4;j++){
			v1 = pts[1][i];
			v2 = pts[v1][j];
			if(v2==1)
				continue;
			if(solve(v1,v2)){
				for(k=0;k<n;k++)
					printf("%d ",out[k]);
				return 0;
			}
		}
	}
	printf("-1\n");
	return 0;
}
