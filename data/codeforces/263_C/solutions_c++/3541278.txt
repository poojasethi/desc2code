//#pragma comment(linker, "/STACK:100000000")
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
#include <deque>
using namespace std;

vector<vector<int> > g;
deque<int> ans;
vector<bool> u;

bool calc(int v,int last=1) {
	if (ans.size()==u.size()-1) {
		return v==1 && count(g[last].begin(),g[last].end(),ans[1])==1;
	}
	if (u[v])
		return false;
	u[v] = 1;
	ans.push_back(v);
	for (int i=0;i<g[last].size();++i)
		if (count(g[v].begin(),g[v].end(),g[last][i])==1 && calc(g[last][i],v))
			return true;
	ans.pop_back();
	u[v] = 0;
	return false;
}

bool solve() {
	int n;
	if (scanf("%d",&n)==EOF)
		return false;
	g.clear();
	g.resize(n+1);
	u.assign(n+1,false);
	for (int i=0;i<n*2;++i) {
		int a,b;
		scanf("%d%d",&a,&b);
		g[a].push_back(b);
		g[b].push_back(a);
	}
	for (int i=1;i<=n;++i)
		if (g[i].size()!=4) {
			printf("-1\n");
			return true;
		}
	ans.assign(1,1);
	u[1] = 1;
	for (int i=0;i<g[1].size();++i) {
		if (calc(g[1][i])) {
			for (deque<int>::iterator it=ans.begin();it!=ans.end();++it)
				printf("%d ",*it);
			printf("\n");
			return true;
		}
	}
	printf("-1\n");
	return true;
}

int main() 
{
#ifdef _DEBUG
    freopen("input.txt","r",stdin);
	while (solve())
		printf("\n\n");
#else
	solve();
#endif
    return 0;
}
