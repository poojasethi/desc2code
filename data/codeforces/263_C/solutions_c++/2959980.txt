#include <cstdio>
#include <cstdlib>
#include <vector>
using namespace std;
const int MaxN= 100010;
int N, a, b, tot, hsh[MaxN], ans[MaxN];
vector<int> g[MaxN];
bool find(int a, int b){
	for(int i= 0;i< g[a].size();++ i) if(g[a][i] == b)
		return 1;
	return 0;
}
void dfs(int x){
	hsh[x]= 1;
	ans[tot ++]= x;
	if(tot == N){
		if(find(ans[tot-1], ans[0]) && find(ans[tot-1], ans[1]) && find(ans[tot-2], ans[0])){
			for(int i= 0;i< tot;++ i)
				printf("%d ", ans[i]);
			puts("");
			exit(0);
		}
	}else
		for(int i= 0;i< g[x].size();++ i) if(!hsh[g[x][i]] && find(g[x][i], ans[tot-2]))
			dfs(g[x][i]);
	hsh[x]= 0;
	-- tot;
}
int main(){
	scanf("%d", &N);
	for(int i= 0;i< N*2;++ i){
		scanf("%d%d", &a, &b);
		g[a].push_back(b);
		g[b].push_back(a);
		if(g[a].size()>4 || g[b].size()>4){
			puts("-1");
			return 0;
		}
	}
	for(int i= 0;i< g[1].size();++ i){
		ans[tot ++]= 1; hsh[1]= 1;
		dfs(g[1][i]);
		-- tot; hsh[1]= 0;
	}
	puts("-1");
	return 0;
}
