import sys, array #, time
#S = time.time()
readInts = lambda : map(int, raw_input().split())
#readArgs = lambda : raw_input().split()
#write = lambda *s: sys.stdout.write(' '.join(map(str, s)))
#sys.stdin = open('data.txt', 'r')
#sys.stdout = open('ans.txt', 'w')
n = readInts()[0]
if n == 5:
	print 1, 2, 3, 4, 5
	sys.exit(0)
near = [ [] ]
nextTo = [ [] ]
ok = [ True ]
#T = time.time()
for _ in xrange(n):
	near.append([])
	nextTo.append([])
	ok.append(True)
IN = map(int, sys.stdin.read().split())
#getInts = lambda : (IN.pop(), IN.pop())
#print >>sys.stderr, 'OK!'
#print >>sys.stderr, 'Init Time = %.3f s' % (time.time() - T)
#T = time.time()
#for _ in range(n):
while True:
	try:
		a = IN.pop()
		b = IN.pop()
	except:
		break
	near[a].append(b)
	near[b].append(a)
#print >>sys.stderr, 'OK!'
#print >>sys.stderr, 'Read Data Time = %.3f s' % (time.time() - T)
#T = time.time()
if n == 6:
	link = {}
	ans = [0, 0, 0, 0, 0, 0]
	t = set([1, 2, 3, 4, 5, 6])
	for i in xrange(1, 7):
		try:
			link[i] = (t - set(near[i] + [i])).pop()
		except:
			print -1 
			sys.exit(0)
	cur = 0
	for i in link:
		if ans.count(i):
			continue
		ans[cur] = i
		ans[cur + 3] = link[i]
		cur = cur + 1
	print ' '.join(map(str, ans))
	sys.exit(0)
for i in xrange(1, n + 1):
	cnt = 0
	if len(near[i]) ^ 4:
		print -1
		sys.exit(0)
	for j in near[i]:
		if len(set(near[i]).union(near[j])) == 6:
			nextTo[i].append(j)
			cnt = cnt + 1
		#c = 0
		#for k in near[i]:
		#	if near[j].count(k):
		#		c = c + 1
		#if c == 2:
		#	nextTo[i].append(j)
		#	cnt = cnt + 1
	if cnt ^ 2:
		print -1
		sys.exit(0)
#print >>sys.stderr, 'OK!'
#print >>sys.stderr, 'Process Time = %.3f s' % (time.time() - T)
#T = time.time()
ans = [ 1 ]
cur = 1
ok[1] = False
for i in xrange(n - 1): 
	j = nextTo[cur].pop()
	if ok[j]: 
		nextTo[j].remove(cur)
		cur = j
		ans.append(cur)
		ok[cur] = False
		continue
	print -1
	sys.exit(0)
#print >>sys.stderr, 'OK!'
#print >>sys.stderr, 'Finalize Time = %.3f s' % (time.time() - T)
#print >>sys.stderr, ''
#print >>sys.stderr, 'Total Time = %.3f s' % (time.time() - S)
sys.stdout.write(' '.join(map(str, ans)))
