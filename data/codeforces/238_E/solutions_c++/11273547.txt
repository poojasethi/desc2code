#include<cstdio>
#include<cstring>
#include<bitset>
#include<algorithm>
using namespace std;
const int inf=0x3f3f3f3f;
int a[110][110];
bool b[110][110];
int s[110],t[110],f[110],g[110];
bool vis[110];
int n,m,q,S,T;
int dfs(int i,int t)
{
	int j;
	if (i==t) return f[i];
	if (vis[i]) return g[i];
	vis[i]=true; g[i]=0;
	for (j=1;j<=n;j++)
		if ((a[i][j]==1)&&(a[i][j]+a[j][t]==a[i][t])) g[i]=max(g[i],dfs(j,t));
	g[i]=min(g[i],f[i]); return g[i];
}
int main()
{
	int i,j,k,x,y;
	bool flag;
	scanf("%d%d%d%d",&n,&m,&S,&T);
	memset(a,0x3f,sizeof(a));
	for (i=1;i<=n;i++) a[i][i]=0;
	for (i=1;i<=m;i++)
	{
		scanf("%d%d",&x,&y);
		a[x][y]=1;
	}
	for (k=1;k<=n;k++)
		for (i=1;i<=n;i++)
			for (j=1;j<=n;j++) a[i][j]=min(a[i][j],a[i][k]+a[k][j]);
	memset(f,0x3f,sizeof(f));
	scanf("%d",&q);
	for (i=1;i<=q;i++)
	{
		scanf("%d%d",&s[i],&t[i]);
		if (a[s[i]][t[i]]<inf)
			for (j=1;j<=n;j++)
				if (a[s[i]][j]+a[j][t[i]]==a[s[i]][t[i]])
				{
					b[i][j]=true;
					for (k=1;k<=n;k++)
						if ((j!=k)&&(a[s[i]][j]==a[s[i]][k])&&(a[j][t[i]]==a[k][t[i]]))
						{
							b[i][j]=false; break;
						}
				}
	}
	memset(f,0x3f,sizeof(f));
	f[T]=0;
	do
	{
		flag=false;
		for (i=1;i<=q;i++)
			if (a[s[i]][t[i]]<inf)
			{
				memset(vis,false,sizeof(vis));
				for (j=1;j<=n;j++)
					if (b[i][j])
					{
						x=dfs(j,t[i])+1;
						if (x<f[j])
						{
							f[j]=x; flag=true;
						}
					}
			}
	}
	while (flag);
	if (f[S]>=inf) printf("-1\n");
	else printf("%d\n",f[S]);
	return 0;
}