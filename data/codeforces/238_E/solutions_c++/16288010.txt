#include<bits/stdc++.h>
using namespace std;

struct edge
{int u,v,next;
};
struct edge e[10010];

struct unit
{int s,t;
 int w[110];
};
struct unit a[110];

int n,m,num,nk,S,T,col,inf=0x3f3f3f3f;
int ga[110][110],f[110],used[110][110],head[110],vis[110],ans[110];

void add(int u,int v)
{e[num].u=u;
 e[num].v=v;
 e[num].next=head[u];
 head[u]=num;
 num++;
}

int dfs(int i,int tx)
{int x,j;
 if(vis[i]==col) return f[i];
 vis[i]=col;
 f[i]=0;
 if(i==T) return 0;
 x=-1;
 for(j=1;j<=n;j++)
 	if(j!=i && ga[i][j]==1 && ga[j][tx]==ga[i][tx]-1) x=max(x,dfs(j,tx));
 if(x==-1) x=inf;
 f[i]=min(ans[i],x);
 return f[i];
}

int main()
{int i,j,k,x,y,flag;
 
 scanf("%d%d%d%d",&n,&m,&S,&T);
 memset(head,-1,sizeof(head));
 memset(ga,0x3f,sizeof(ga));
 for(i=1;i<=m;i++)
 {	scanf("%d%d",&x,&y);
 	add(x,y);
 	ga[x][y]=1;
 }
 for(i=1;i<=n;i++) ga[i][i]=0;
 scanf("%d",&nk);
 for(i=1;i<=nk;i++)
 	scanf("%d%d",&a[i].s,&a[i].t); 	
 for(k=1;k<=n;k++)
 	for(i=1;i<=n;i++)
		for(j=1;j<=n;j++)
			ga[i][j]=min(ga[i][j],ga[i][k]+ga[k][j]);			
 for(i=1;i<=nk;i++)
 	for(j=1;j<=n;j++)
		if(ga[a[i].s][j]<inf && ga[a[i].s][j]+ga[j][a[i].t]==ga[a[i].s][a[i].t])
		{	if(used[i][ga[a[i].s][j]])
				a[i].w[used[i][ga[a[i].s][j]]]=0;
			else
			{	a[i].w[j]=1;
				used[i][ga[a[i].s][j]]=j;
			}
		}		
 memset(f,0x3f,sizeof(f));
 memset(ans,0x3f,sizeof(ans));
 ans[T]=0;
 flag=1;
 while(flag)
 {	flag=0;
 	for(i=1;i<=n;i++)
	 	for(j=1;j<=nk;j++)
		{	if(a[j].w[i]==0) continue;
			col++;
			x=dfs(i,a[j].t);
			if(x+1<ans[i])
			{	ans[i]=x+1;
				flag=1;
			}
		}
 }
 if(ans[S]<inf)
 	printf("%d\n",ans[S]);
 else
 	printf("%d\n",-1);
 return 0;
}