#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<algorithm>
#include<cstring>
#include<cmath>
using namespace std;
const int maxn=1010;
const int inf=0x3f3f3f3f;
int f[maxn],vis[maxn],g[maxn],n,m,a,b,t,incur[maxn][maxn];
int dist[maxn][maxn],from[maxn],to[maxn];
int dfs(int cur,int goal)
{
	if(cur==goal) return f[cur];
	if(vis[cur]==true) return g[cur];
	vis[cur]=true;g[cur]=0;
	for(int i=1;i<=n;i++)
		if(dist[cur][i]+dist[i][goal]==dist[cur][goal])
			if(dist[cur][goal]==dist[i][goal]+1)
				g[cur]=max(g[cur],dfs(i,goal));
	return g[cur]=min(g[cur],f[cur]);			
}
int main()
{
	scanf("%d%d%d%d",&n,&m,&a,&b);
	memset(dist,63,sizeof(dist));
	for(int i=1;i<=n;i++) dist[i][i]=0;
	for(int i=1;i<=m;i++)
	{
		int u,v;
		scanf("%d%d",&u,&v);
		dist[u][v]=1;
	}
	for(int k=1;k<=n;k++)
		for(int i=1;i<=n;i++)
			for(int j=1;j<=n;j++)
				dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
	scanf("%d",&t);
	for(int i=0;i<t;i++)
	{
		scanf("%d%d",&from[i],&to[i]);
		int s=from[i],t1=to[i];
		if(dist[s][t1]==inf) continue;
		for(int j=1;j<=n;j++)
		{
			if(dist[s][j]+dist[j][t1]==dist[s][t1])
			{
				bool flag=true;
				for(int k=1;k<=n&&flag;k++)
				{
					if(j==k) continue;
					if(dist[s][k]+dist[k][t1]==dist[s][t1])
						if(dist[s][k]==dist[s][j]) flag=false; 
				}
				if(flag==true) incur[i][j]=1;
			}
		}
	}
	memset(f,63,sizeof(f));
	f[b]=0;
	while(1)
	{
		bool flag=false;
		for(int i=0;i<t;i++)
		{
			if(dist[from[i]][to[i]]==inf) continue;
			memset(vis,0,sizeof(vis));
			for(int j=1;j<=n;j++)
				if(incur[i][j])
				{
					int temp=dfs(j,to[i])+1;
					if(temp<f[j])
					{
						f[j]=temp;flag=true;
					}						
				}
		}
		if(flag==false) break;
	}
	int ans=f[a];
	if(ans>=inf) ans=-1;
	printf("%d\n",ans);
 	return 0;
}

		  	 	 	 				  		 	  						