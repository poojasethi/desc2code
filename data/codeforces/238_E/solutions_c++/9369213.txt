#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <cstring>
#include <cmath>
#include <string>
using namespace std;
const int Maxn=105,inf=999999999+208;
int n,m,st,en,dist[Maxn][Maxn];
int aim[Maxn],tot;
int f[Maxn],g[Maxn];
bool iscut[Maxn][Maxn],visi[Maxn];

int dfs(int cur,int aim) {
	if (cur==aim) return f[cur];
	if (visi[cur]) return g[cur];
	visi[cur]=1; g[cur]=0;
	for (int t=1;t<=n;t++)
		if (dist[cur][t]==1&&dist[t][aim]+1==dist[cur][aim])
			g[cur]=max(g[cur],dfs(t,aim));
	return g[cur]=min(g[cur],f[cur]);
}

int main() {
	scanf("%d%d%d%d",&n,&m,&st,&en);
	memset(dist,63,sizeof dist);
	for (int i=1,x,y;i<=m;i++) {
		scanf("%d%d",&x,&y);
		dist[x][y]=1;
	}
	for (int i=1;i<=n;i++) dist[i][i]=0;
	for (int k=1;k<=n;k++)
		for (int i=1;i<=n;i++)
			for (int j=1;j<=n;j++)
				dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
	scanf("%d",&tot);
	for (int i=1,s,t;i<=tot;i++) {
		scanf("%d%d",&s,&t); aim[i]=t;
		if (dist[s][t]>inf) continue;
		for (int j=1;j<=n;j++)
			if (dist[s][t]==dist[s][j]+dist[j][t]) {
				bool &f=iscut[i][j]; f=1;
				for (int k=1;k<=n&&f;k++)
					f&=j==k||dist[s][j]!=dist[s][k]||dist[s][k]+dist[k][t]!=dist[s][t];
			}
	}
	memset(f,63,sizeof f);
	f[en]=0;
	for (bool flag=0;!flag;) {
		flag=1;
		for (int i=1;i<=tot;i++) {
			memset(visi+1,0,n);
			for (int j=1,tmp;j<=n;j++)
				if (iscut[i][j]) {
					tmp=dfs(j,aim[i])+1;
					if (tmp<f[j]) f[j]=tmp,flag=0;
				}
		}
	}
	printf("%d\n",f[st]<inf?f[st]:-1);
	return 0;
}