#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <iostream>
#include <algorithm>
using namespace std;
int dis[105][105],Q[105][105][105],n,m,S,T,dp[105],g[105],pt,i,j,A,B,from[105],to[105],k,QQ,l;
const int inf=453266144;
bool FLAG;
int main()
{
    scanf("%d%d%d%d",&n,&m,&S,&T);
    for (i=1; i<=n; i++) for (j=1; j<=n; j++) dis[i][j]=inf;
    for (i=1; i<=m; i++) {scanf("%d%d",&A,&B); dis[A][B]=1;}
    for (i=1; i<=n; i++) for (j=1; j<=n; j++) for (k=1; k<=n; k++)
      if (dis[j][i]+dis[i][k]<dis[j][k]) dis[j][k]=dis[j][i]+dis[i][k];
    for (i=1; i<=n; i++) dis[i][i]=0;
    scanf("%d",&QQ);
    while (QQ--)
    {
        scanf("%d%d",&A,&B);
        if (dis[A][B]<inf)
        {
            pt++; from[pt]=A; to[pt]=B;
            for (i=1; i<=n; i++)
              if (dis[A][i]+dis[i][B]==dis[A][B])
                Q[pt][dis[A][i]][++Q[pt][dis[A][i]][0]]=i;
        }
    }
    for (i=1; i<=n; i++) dp[i]=inf;
    dp[T]=0; FLAG=true;
    while (FLAG)
    {
        FLAG=false;
        for (i=1; i<=pt; i++)
        {
            g[to[i]]=dp[to[i]];
            for (j=dis[from[i]][to[i]]-1; j>=0; j--)
            {
                for (k=1; k<=Q[i][j][0]; k++)
                {
                    g[Q[i][j][k]]=0;
                    for (l=1; l<=Q[i][j+1][0]; l++)
                      if (dis[Q[i][j][k]][Q[i][j+1][l]]==1)
                        g[Q[i][j][k]]=max(g[Q[i][j][k]],g[Q[i][j+1][l]]);
                    g[Q[i][j][k]]=min(g[Q[i][j][k]],dp[Q[i][j][k]]);
                }
                if (Q[i][j][0]==1 && dp[Q[i][j][1]]>g[Q[i][j][1]]+1)
                {
                    dp[Q[i][j][1]]=g[Q[i][j][1]]+1;
                    FLAG=true;
                }
            }
        }
    }
    if (dp[S]<inf) cout<<dp[S]; else cout<<-1;
    return 0;
}
