#include <iostream>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <ctime>
#include <algorithm>
#include <cctype>
#include <vector>

using namespace std;

const int oo=5000;

int N,M,A,B,K;
int a[105][105],b[105][105][105],G[105][105],s[105],t[105],res[105],v[105];
vector<int> Q[105][105];

int main() 
{
	//freopen("238E.in","r",stdin);
	//freopen("238E.out","w",stdout);
	scanf("%d%d%d%d",&N,&M,&A,&B);
	A--; B--;
	memset(a,0,sizeof(a));
	for (int i=0; i<M; i++) 
	{
		int x,y;
		scanf("%d%d",&x,&y);
		a[x-1][y-1]=1;
	}
	for (int i=0; i<N; i++)
		for (int j=0; j<N; j++)
			if (i==j) G[i][j]=0; else if (a[i][j]) G[i][j]=1; else G[i][j]=oo;
	for (int k=0; k<N; k++)
		for (int i=0; i<N; i++)
			for (int j=0; j<N; j++)
				if (G[i][k]+G[k][j]<G[i][j]) G[i][j]=G[i][k]+G[k][j];
	scanf("%d",&K);
	for (int i=0; i<K; i++) 
	{
		scanf("%d%d",&s[i],&t[i]);
		s[i]--; t[i]--;
		if (G[s[i]][t[i]]<oo) 
		{
			for (int j=0; j<=G[s[i]][t[i]]; j++) 
			{
				Q[i][j].clear();
				for (int k=0; k<N; k++)
					if ((G[s[i]][k]==j) && (G[k][t[i]]==G[s[i]][t[i]]-j)) 
					{
						Q[i][j].push_back(k);
						b[i][j][k]=1;
					}
			}
		}
	}
	for (int i=0; i<N; i++) res[i]=oo;
	res[B]=0;
	int p=0;
	for (bool flag=true; flag; ) 
	{
		flag=false;
		p++;
		for (int i=0; i<K; i++) 
		{
			if (G[s[i]][t[i]]>=oo) continue;
			v[t[i]]=res[t[i]];
			for (int j=G[s[i]][t[i]]-1; j>=0; j--) 
			{
				int SZ=Q[i][j].size();
				for (int k=0; k<SZ; k++) 
				{
					int tmp=Q[i][j][k];
					v[tmp]=0;
					for (int q=0; q<N; q++)
						if (a[tmp][q] && b[i][j+1][q])
							if (v[q]>v[tmp]) v[tmp]=v[q];
					if (res[tmp]<v[tmp]) v[tmp]=res[tmp];
				}
				if (SZ==1) 
				{
					int tmp=Q[i][j][0];
					if ((res[tmp]==oo) && (v[tmp]<p)) 
					{
						res[tmp]=p;
						flag=true;
					}
				}
			}
		}
	}
	if (res[A]<oo) printf("%d\n",res[A]); else printf("-1\n");
	return 0;
}
