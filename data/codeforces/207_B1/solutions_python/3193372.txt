#include <iostream>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <string>
#include <cmath>
#include <algorithm>
using namespace std;
typedef long long LL;
const int MAXN=500005;

int n,a[MAXN],f[MAXN][21],dp[MAXN][21],L;
LL ans;

int get()
{
	int f=0,v=0; char ch;
	while (!isdigit(ch=getchar()))if (ch=='-')break;
	if (ch=='-')f=1; else v=ch-48;
	while (isdigit(ch=getchar()))v=v*10+ch-48;
	if (f==1)return -v ;return v;
}

int rmq(int l,int r)
{
	if(l==0)return 0;
	int k=int(log(r-l+1)/log(2));
	if(a[f[l][k]]<a[f[r-(1<<k)+1][k]])return f[l][k];return f[r-(1<<k)+1][k];
}

void init()
{
	n=get();
	for(int i=1;i<=n;i++)a[i]=get(),a[i+n]=a[i];a[0]=0;
	for(int i=1;i<=n*2;i++)a[i]=max(i-a[i],0);
	L=int(log(n*2)/log(2));
	for(int i=1;i<=n*2;i++)f[i][0]=i;
	for(int j=1;j<=L;j++)
		for(int i=1;i<=n*2-(1<<j)+1;i++)if(a[f[i][j-1]]<a[f[i+(1<<j-1)][j-1]])f[i][j]=f[i][j-1];else f[i][j]=f[i+(1<<j-1)][j-1];
	for(int i=1;i<=n*2;i++)dp[i][0]=rmq(a[i],i);
	for(int j=1;j<=L;j++)
		for(int i=1;i<=n*2;i++)dp[i][j]=dp[dp[i][j-1]][j-1];
}

void work()
{
	ans=n;
	for(int i=n+1;i<=n*2;i++)
	{
		int x=i;
		for(int j=L;j>=0;j--)if(a[dp[x][j]]>i-n+1)ans+=(1<<j),x=dp[x][j];
		if(a[x]>i-n+1)ans++;
	}
	printf("%I64d\n",ans);
}

int main()
{
	init();
	work();
	return 0;
}
