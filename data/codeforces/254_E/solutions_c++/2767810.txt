#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
#define NN 400
#define pii pair<int,int>
#define F first 
#define S second
using namespace std;
int a[NN] ,pd[NN][NN+1], tk[NN][NN+1], n , v;
vector<pii> f[NN];

int solve(int p , int c){
	if( p == n ) return 0;
	int& ans = pd[p][c];
	if(ans!=-1)return ans;

	int t = a[p]+c , acc=v;
	
	ans = solve(p+1,min(t-acc,a[p]));
	
	for(int i=0;i<f[p].size();++i){
		acc += f[p][i].F;
		if(acc > t) break;
		int tmp =i+1+solve( p+1,min(a[p],t-acc) );
		if( ans < tmp ){
			tk[p][c] = i;
			ans= tmp;
		}
	}
	return ans;
}

int main(){

	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	memset(pd,-1,sizeof pd);
	memset(tk,-1,sizeof tk);
	scanf("%d%d",&n,&v);
	for(int i=0;i<n;++i)
		scanf("%d",a+i);
	int m; scanf("%d",&m);
	for(int i=0,l,r,qf;i<m;++i){
		scanf("%d%d%d",&l,&r,&qf); --l,--r;
		for(int j=l;j<=r;++j)
			f[j].push_back(pii(qf,i+1));
	}
	for(int i=0;i<n;++i)
		sort( f[i].begin(),f[i].end() );

	printf("%d\n", solve(0,0) );
	int c= 0;
	for(int p=0;p<n;++p){
		int i = tk[p][c];
		int t = a[p]+c ,acc = v;
		printf("%d",i+1);
		for(int j=0;j<=i;++j){
			printf(" %d",f[p][j].S);
			acc += f[p][j].F;
		}
		c= min(a[p],t-acc);
		puts("");

	}
	return 0;
}
