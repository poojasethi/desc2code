#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
using namespace std;
int N,V,d[500],frd[500][3],M;
struct n
{
	int x,y;
	n(int a=0,int b=0)
	{
		x=a;
		y=b;
	}
}hr[405][405];
int cmp(n a,n b)
{
	return a.x < b.x;
}
vector<n> v[405];
int dn[405][405];
int f(int day,int k)
{
	if(dn[day][k] != -1) 	return dn[day][k];
	if(day > N)	return 0;
	if(V>k+d[day]) 		return 0;
	int top=0;
	int harc=V,lx=0;
	int mx=-1;
	if(k > V)
	{
		mx=f(day+1,d[day]);
		hr[day][k]=n(0,d[day]);
	}
	else
	{
		mx=f(day+1,d[day]-(V-k));
		hr[day][k]=n(0,d[day]-(V-k));
	}
	top=d[day]+k;
	for(int i=0;i<(int)v[day].size();i++)
	{
		harc+=v[day][i].x;
		if(top >= harc)
		{
			lx++;
			if(harc > k)
			{
				if(mx < f(day+1,d[day]-(harc-k))+i+1)
				{
					mx= f(day+1,d[day]-(harc-k))+i+1;
					hr[day][k]=n(lx,d[day]-(harc-k));
				}
			}
			else 
			{
				if(mx < f(day+1,d[day])+i+1)
				{
					mx= f(day+1,d[day])+i+1;
					hr[day][k]=n(lx,d[day]);
				}	
			}
		}
		else 
			break;
	}
	return dn[day][k]=mx;
}
int main()
{
	memset(dn,-1,sizeof(dn));
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d %d",&N,&V);
	for (int i = 1; i <= N; i++)
		scanf("%d",&d[i]);
	scanf("%d",&M);
	for (int i = 0; i < M; i++)
	{
		int a,b,c;
		scanf("%d %d %d",&a,&b,&c);
		for(int j=a;j<=b;j++)
			v[j].push_back(n(c,i+1));
	}
	for(int i=1;i<=N;i++)
		sort(v[i].begin(),v[i].end(),cmp);
	int dvm=0;
	printf("%d\n",f(1,0));
	for(int i=1;i<=N;i++)
	{
		printf("%d ",hr[i][dvm].x);
		for(int j=0;j<hr[i][dvm].x;j++)
			printf("%d ",v[i][j].y);
		printf("\n");
		dvm=hr[i][dvm].y;
	}
	return 0;
	
}
