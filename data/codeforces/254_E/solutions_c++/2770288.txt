#include <cstdio>
#include <cstring>
#include <vector>
#include <algorithm>

using namespace std;

#define SZ(x) (int)(x.size())
typedef pair<int, int> ii;
const int N = 400 + 10;
int a[N];
vector<ii> A[N];
int dp[N][N];
int path[N][N];

int n, v;
int run(int idx, int roll_over) {
  if (idx == n) return 0;
  int& ret = dp[idx][roll_over];
  if (ret >= 0) return ret;
  int sum = a[idx] + roll_over - v;
  for (int k = 0; k <= SZ(A[idx]) && sum >= 0; ++k) {
    int val = k + run(idx + 1, min(sum, a[idx]));
    if (val > ret) {
      ret = val;
      path[idx][roll_over] = k;
    }
    if (k < SZ(A[idx])) sum -= A[idx][k].first;
  }
  return ret;
}

void print(int idx, int roll_over) {
  if (idx == n) return;
  int k = path[idx][roll_over];
  printf("%d", k);
  int sum = a[idx] + roll_over - v;
  for (int i = 0; i < k; ++i) {
    printf(" %d", A[idx][i].second + 1);
    sum -= A[idx][i].first;
  }
  puts("");
  print(idx + 1, min(sum, a[idx]));
}

int main() {
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  scanf("%d%d", &n, &v);
  for (int i = 0; i < n; ++i) {
    scanf("%d", a + i);
  }
  int m;
  scanf("%d", &m);
  for (int i = 0; i < m; ++i) {
    int x, y, z;
    scanf("%d%d%d", &x, &y, &z);
    for (int j = x - 1; j < y; ++j) {
      A[j].push_back(ii(z, i));
    }
  }
  for (int i = 0; i < n; ++i) {
    sort(A[i].begin(), A[i].end());
  }
  memset(dp, 255, sizeof(dp));
  printf("%d\n", run(0, 0));
  print(0, 0);
  return 0;
}
