#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

#define rep(i,n) for(int i=0;i<n;i++)

#define wl(c) cout<<c<<endl
#define rd(c) cin>>c
#define va << " " <<

int n,v,m;
int a[400];
int l[400];
int r[400];
int f[400];
int pc[400][801];

vector<pair<int,int> > p[400];
int dp[400][801];

int rec(int d,int r)
{
	if (d==2 && r==1)
		r = 1;
	if (d>=n) return 0;
	if (dp[d][r] != -1) return dp[d][r];
	int t = r + a[d];
	t -= v;
	if (t < 0) { dp[d][r] = -2; return -2; }
	int pi = 0;
	int max = 0,max_pc=0;
	int rr = rec(d+1,min(t,a[d]));
	if (rr!=-2) { max = rr; max_pc = 0; }
	int size = p[d].size(); 
	while(pi<size && t-p[d][pi].first>=0)
	{
		t -= p[d][pi].first;
		int rr = rec(d+1,min(t,a[d]));
		if (rr==-2) continue;
		if (rr+pi+1>max) { max = rr+pi+1; max_pc=pi+1; }
		pi++;
	}
	pc[d][r] = max_pc;
	dp[d][r] = max;
	
	return max;
}

#define cin inf
#define cout ouf
int main()
{
    ifstream inf("input.txt");
    ofstream ouf("output.txt");
    
    rd(n>>v);
    rep(i,n) rd(a[i]);
    rd(m);
    rep(i,m)
    {
    	rd(l[i]>>r[i]>>f[i]);
    	for(int k=l[i]-1;k<=r[i]-1;k++) p[k].push_back(make_pair(f[i],i+1));
    }
    
    rep(i,n) sort(p[i].begin(),p[i].end());
    
    rep(i,400)
    	rep(j,800) dp[i][j] = -1;
    
    int rate = rec(0,0);
    wl(rate);
    int r = 0;
    rep(d,n)
    {
    	int t = r + a[d];
    	t -= v;
    	cout << pc[d][r] << " ";
    	rep(i,pc[d][r])
   		{
   			t -= p[d][i].first;
   			cout << p[d][i].second << " ";
   		}
    	cout << endl;
    	r = min(t,a[d]);
    }
}

