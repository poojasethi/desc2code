#include <stdio.h>
#include <vector>
#include <algorithm>

using namespace std;

int c[410];
int ac[410];

vector <pair<int,int> > k[410];

int dp[410][410]={0};
int aux[410][410]={0};
int use[410][410]={0};

int main()
{
	
	freopen( "input.txt", "r", stdin ) ;
    freopen( "output.txt", "w", stdout ) ;

	int n,v,m;		
	scanf("%d%d",&n,&v);
	for(int i=1;i<=n;i++)
		scanf("%d",&c[i]);
	scanf("%d",&m);
	for(int i=0;i<m;i++)
	{
		int a,b,x;
		scanf("%d%d%d",&a,&b,&x);
		for(int j=a;j<=b;j++)
			k[j].push_back(make_pair(x,i+1));
	}
	for(int i=1;i<=n;i++)
		sort(k[i].begin(),k[i].end());
	
	for(int i=1;i<=n;i++)
		for(int j=0;j<=400;j++)
		{
			dp[i][j]=-1;
			aux[i][j]=-1;
		}		
	dp[1][0]=0;
	for(int i=1;i<=n;i++)
		for(int j=0;j<=400;j++)
		{
			if(dp[i][j]==-1)
				continue;
			int com =  j + c[i];
			com-=v;
			if(com<0)
				continue;
			if((dp[i][j])>dp[i+1][min(c[i],com)])
				{
					dp[i+1][min(c[i],com)]=dp[i][j];
					aux[i+1][min(c[i],com)]=j;
					use[i+1][min(c[i],com)]=0;
				}
			int n_=k[i].size();
			for(int x=0;x<n_;x++)
			{
				com-=k[i][x].first;
				if(com<0)
					break;
				if((dp[i][j]+x+1)>dp[i+1][min(c[i],com)])
				{
					dp[i+1][min(c[i],com)]=dp[i][j]+x+1;
					aux[i+1][min(c[i],com)]=j;
					use[i+1][min(c[i],com)]=x+1;
				}				
				
			} 
		}
	
	int res=0;
	int sob=-1;
	for(int i=0;i<=400;i++)
	{	
		if(dp[n+1][i]>res)
		{
			res=dp[n+1][i];
			sob=i;
		}		
	}
	printf("%d\n",res);
	
	vector <int> salida[410];

	for(int i=n+1;i>=2;i--)
	{
		for(int j=0;j<use[i][sob];j++)
			salida[i].push_back(k[i-1][j].second);
		sob=aux[i][sob];
	}	
	
	for(int i=2;i<=n+1;i++)
	{
		printf("%d",salida[i].size());
		for(int j=0;j<salida[i].size();j++)
			printf(" %d",salida[i][j]);
		printf("\n");
	}
	
	return 0;
}




















