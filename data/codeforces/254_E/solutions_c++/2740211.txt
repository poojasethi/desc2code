#include <bits/stdc++.h>

using namespace std;

int n, v, a[405];
int m, F[405];
vector <int> E[405];

bool orden(int i1, int i2)
{
	return F[i1] < F[i2];
}

int best[405][805];
int memo[405][805];
int f(int p, int k)
{
	int &x = memo[p][k];
	
	if(x != -1) return x;
	else if(p == n) return x = 0;
	else
	{
		int kk = k;
		
		k += a[p];
		k -= v;
		
		if(k < 0) return x = -(1<<30);
		else
		{
			x = f(p+1, min(a[p], k));
			best[p][kk] = 0;
			
			int j = 0;
			while(k >= 0 && j < E[p].size())
			{
				k -= F[E[p][j]];
				if(k >= 0)
				{
					int opt = j+1 + f(p+1, min(a[p], k));
					if(opt > x)
					{
						x = opt;
						best[p][kk] = j+1;
					}
				}
				j++;
			}
			return x;
		}
	}
}

int main()
{
	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);
	
	while(cin>>n>>v)
	{
		for(int i=0; i<n; i++)
		{
			cin>>a[i];
			E[i].clear();
		}
		
		cin>>m;
		for(int i=0; i<m; i++)
		{
			int L, R;
			cin>>L>>R>>F[i];
			L--; R--;
			
			for(int j=L; j<=R; j++)
				E[j].push_back(i);
		}
		
		for(int i=0; i<n; i++)
			sort(E[i].begin(), E[i].end(), orden);
		
		memset(memo, -1, sizeof(memo));
		int ans = f(0, 0);
		cout<<ans<<endl;
		
		int k = 0;
		for(int i=0; i<n; i++)
		{
			int j = best[i][k];
			
			k += a[i];
			k -= v;
			
			cout<<j;
			for(int ind=0; ind<j; ind++)
			{
				cout<<" "<<E[i][ind] + 1;
				k -= F[E[i][ind]];
			}
			cout<<endl;
			
			k = min(k, a[i]);
		}
	}
	
	return 0;
}