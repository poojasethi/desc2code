#include <iostream>
#include <vector>
#include <algorithm>
#include <fstream>
using namespace std;

ifstream fin ("input.txt");
ofstream fout ("output.txt");
#define cin fin
#define cout fout
//#define cerr fout

const int MAXN = 400 + 10;
int dp[MAXN][MAXN];
int par[MAXN][MAXN];
vector<pair<int,int> > A[MAXN];
int day[MAXN];
int n, v, m;

void print(int x, int y){
  int p = par[x][y];
  int d = dp[x][y] - dp[x-1][p];
  if(x > 1)
    print(x-1, p);

  cout<<d<<' ';
  for(int i=0;i<d;i++)
    cout<<A[x][i].second<<' ';
  cout<<endl;
}

int main(){
  cin>>n>>v;
  for(int i=1;i<=n;i++)
    cin>>day[i];
  cin>>m;
  for(int i=0;i<m;i++){
    int r, l, f;
    cin>>r>>l>>f;
    for(int j=r;j<=l;j++)
      A[j].push_back(make_pair(f, i + 1));
  }
  for(int i=1;i<=n;i++)
    sort(A[i].begin(), A[i].end());
  for(int i=1;i<=n;i++)
    for(int j=1;j<A[i].size();j++)
      A[i][j].first += A[i][j - 1].first;

  for(int i=0;i<MAXN;i++)
    for(int j=0;j<MAXN;j++)
      dp[i][j] = -1;
  dp[0][0] = 0;
  for(int i=1;i<=n;i++)
    for(int j=0;j<=day[i];j++){
      int S = 0;
      for(int jj=0;jj<=day[i-1];jj++){
	int d = jj + (day[i] - j) - v;
	if(dp[i-1][jj] == -1 or d < 0)
	  continue;
	while(S < A[i].size() and A[i][S].first <= d){
	  S++;
	}
	int best = 0;
	best = S;
	best += dp[i-1][jj];
	if(best > dp[i][j]){
	  dp[i][j] = best;
	  par[i][j] = jj;
	}
      }
    }
  int best = 0;
  for(int i=0;i<=day[n];i++)
    if(dp[n][i] > dp[n][best])
      best = i;
  cout<<dp[n][best]<<endl;
  print(n, best);
  return 0;
}
