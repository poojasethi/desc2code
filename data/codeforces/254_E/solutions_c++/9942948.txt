#include <iostream>
#include <cstdio>
#include <vector>
#include <algorithm>
#include <cstring>
using namespace std;
struct node
{int f,s;};
int n,v,a[500],dp[410][410],endi[410][410],l,r,f,w;
vector<node>t[410];
bool cmp (node a,node b)
{return a.f<b.f;}
int Solve(int N,int r)
{
    if(N==n+1)
        return 0;
    if(dp[N][r]!=-1)
        return dp[N][r];
    int x=a[N]+r-v , maxi=-1000000;
    int z=Solve(N+1,min(x,a[N]));
    if(z>maxi)
    {
        maxi=z;
        endi[N][r]=0;
    }
    for(int i=0;i<t[N].size();i++)
    {
        x-=t[N][i].f;
        if(x<0)
            break;
         int z=i+1+Solve(N+1,min(x,a[N]));
        if(z>maxi)
        {
            maxi=z;
            endi[N][r]=i+1;
        }
    }
    return (dp[N][r]=maxi);
}
int main()
{
    //freopen("r.txt","r",stdin);
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    memset(dp,-1,sizeof dp);
    scanf("%d %d",&n,&v);
    for(int i=1;i<=n;i++)
        scanf("%d",&a[i]);
    scanf("%d",&w);
    for(int i=0;i<w;i++)
    {
        scanf("%d %d %d",&l,&r,&f);
        for(int j=l;j<=r;j++)
        {
            node f1;
            f1.f=f , f1.s=i+1;
            t[j].push_back(f1);
        }
    }
    for(int i=1;i<=n;i++)
      sort(t[i].begin(),t[i].end(),cmp);

    printf("%d\n",Solve(1,0));
    int prv=0;
    for(int i=1;i<=n;i++)
    {
        int sum = prv+a[i]-v;
        printf("%d ",endi[i][prv]);
        for(int j=0;j<endi[i][prv];j++)
        {
            printf("%d ",t[i][j].s);
            sum-=t[i][j].f;
        }
        prv=min(a[i],sum);
        printf("\n");
    }

    return 0;
}
