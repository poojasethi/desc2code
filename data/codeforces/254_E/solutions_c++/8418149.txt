#include <bits/stdc++.h>
#define INF 999999999
#define fi first
#define sc second 
#define pb push_back
#define mp make_pair
#define MAXN 405
using namespace std;
int N,M,V;
int A[MAXN],Number[MAXN][MAXN],l[MAXN],r[MAXN],f[MAXN],Dyn[MAXN][MAXN];
pair <int,int> p;
vector < pair<int,int> > v[MAXN];
vector < int > Answer[MAXN];
void Read()
{
	scanf("%d",&N);
	scanf("%d",&V);
	for (int i = 1; i <= N; i++)
		scanf("%d",&A[i]);
	scanf("%d",&M);
	for (int i = 1; i <= M; i++)
	{
		scanf("%d",&l[i]);
		scanf("%d",&r[i]);
		scanf("%d",&f[i]);
		for (int j = l[i]; j <= r[i]; j++)
		{
			p = mp(f[i],i);
			v[j].pb(p);
		}
	}
	for (int i = 1; i <= N; i++)
		sort(v[i].begin(),v[i].end());
	return ;
}
int fun(int day,int x)
{	
	if(day == N+1)
		return 0;
	if(Dyn[day][x] != -1)
		return Dyn[day][x];
	int Sum = x + A[day];
	if(Sum < V) 
		return -INF;
	Sum -= V;
	int result = fun(day+1,min(A[day],Sum));
	Number[day][x] = 0;
	for (int i = 0; i < (int) v[day].size() && Sum - v[day][i].fi >= 0; i++)
	{
		Sum -= v[day][i].fi;
		int tmp = fun(day+1,min(A[day],Sum))+i+1;
		if (tmp > result)
		{
			result = tmp;
			Number[day][x] = i + 1;
		}
	}
	
	return Dyn[day][x] = result;
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	
	Read();	
	memset(Dyn,-1,sizeof(Dyn));
	printf("%d\n",fun(1,0));
	int LEFT = 0;
	for (int i = 1; i <= N; i++)
	{
		printf("%d",Number[i][LEFT]);
		int tut = V;
		for (int j = 0; j < Number[i][LEFT];j++)
		{
			printf(" %d",v[i][j].sc);
			tut += v[i][j].fi;
		}
		puts("");
		LEFT = min(LEFT + A[i] - tut,A[i]);
	}
	
	
	return 0;
}
/*
4 1
3 2 5 4
3
1 3 2
1 4 1
3 4 2
*/
