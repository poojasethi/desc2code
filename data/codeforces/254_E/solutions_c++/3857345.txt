//http://blog.csdn.net/zucc_dianbei/article/details/8275789

#include<stdio.h>
#include<string.h>
#include<stdlib.h>
#include<algorithm>
#include<vector>
#include<queue>
#include<math.h>
#include<string>
#include<map>
#include<set>
#include<iostream>
using namespace std;
typedef long long ll;
const int inf = 1 << 29;

int a[410];
vector<pair<int,int> > e[410];
int pre[410][410];
int op[410][410];
int dp[410][410];

void output(int i,int n)
{
	if(!i) return;
	output(i-1,pre[i][n]);
	int k=op[i][n];
	printf("%d",k);
	for(int j=0;j<k;j++){
		printf(" %d",e[i][j].second);
	}
	puts("");
}

int cost[410][410];
int main() {
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int n,v,m,l,r,f;
	scanf("%d%d",&n,&v);
	for(int i=1;i<=n;i++)
		scanf("%d",&a[i]);
	scanf("%d",&m);
	for(int i=0;i<m;i++){
		scanf("%d%d%d",&l,&r,&f);
		for(int j=l;j<=r;j++){
			e[j].push_back(make_pair(f,i+1));
		}

	}
	for(int i=1;i<=n;i++){
		sort(e[i].begin(),e[i].end());
		for(int j=0;j<(int)e[i].size();j++){
			cost[i][j+1]=cost[i][j]+e[i][j].first;
		}
	}
	memset(dp,-1,sizeof(dp));
	dp[0][0]=0;
	for(int i=0;i<n;i++){
		for(int j=0;j<=a[i];j++){
			if(dp[i][j]==-1) continue;
			int t=j+a[i+1];
			for(int k=0;k<=(int)e[i+1].size();k++){
				if(cost[i+1][k]+v>t) break;
				int tt=t-cost[i+1][k]-v;
				tt=min(tt,a[i+1]);
				if(dp[i+1][tt]<k+dp[i][j]){
					dp[i+1][tt]=k+dp[i][j];
					pre[i+1][tt]=j;
					op[i+1][tt]=k;
				}
			}
		}
	}
	int ans=-1,pos;
	for(int i=0;i<=a[n];i++){
		if(ans<dp[n][i]){
			ans=dp[n][i];
			pos=i;
		}
	}
	printf("%d\n",ans);
	output(n,pos);
}