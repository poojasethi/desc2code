#include <iostream>
#include <fstream>
#include <cstring>
#include <vector>
#include <iomanip>
#include <algorithm>
#include <set>
#include <map>
using namespace std;
const int maxn=400+10;
#define mk make_pair
int sum[maxn][maxn*2],d[maxn][maxn],a[maxn],inf=-1,n,v,m;
pair <int,int> par[maxn][maxn];
vector <pair<int,int> >q[maxn];
void root(int x,int rem)
{
    if(x>1)
        root(x-1,par[x][rem].first);
    cout<<par[x][rem].second<<" ";
    for(int i=1;i<=par[x][rem].second;i++)
        cout<<q[x][i].second<<" ";
    cout<<endl;
}
int main()
{
    ios_base::sync_with_stdio (false);
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    cin>>n>>v;
    for(int i=1;i<=n;i++){
        cin>>a[i];
        q[i].push_back(mk(0,0));
    }
    cin>>m;
    for(int i=1;i<=m;i++){
        int l,r,s;
        cin>>l>>r>>s;
        for(int j=l;j<=r;j++)
            q[j].push_back(mk(s,i));
    }
    for(int i=1;i<=n;i++)
        sort(q[i].begin(),q[i].end());
    for(int i=1;i<=n;i++)
        for(int j=1;j<q[i].size();j++)
            sum[i][j]=sum[i][j-1]+q[i][j].first;
    memset(d,-1,sizeof d);d[0][0]=0;
    for(int i=1;i<=n;i++)
        for(int l=0;l<=a[i-1];l++)
            for(int k=0;k<q[i].size();k++)
                if(d[i-1][l]>-1 && l+a[i]-sum[i][k]>=v)
                    if(d[i][min(a[i],l+a[i]-sum[i][k]-v)]<d[i-1][l]+k){
                        d[i][min(a[i],l+a[i]-sum[i][k]-v)]=d[i-1][l]+k;
                        par[i][min(a[i],l+a[i]-sum[i][k]-v)]=mk(l,k);
                    }
    for(int i=0;i<=a[n];i++)
        inf=max(inf,d[n][i]);
    cout<<inf<<endl;
    for(int i=0;i<=a[n];i++)
        if(inf==d[n][i]){
            root(n,i);
            return 0;
        }

    return 0;
}
