#include<iostream>
#include<cstdio>
#include<vector>
#include<cstring>
#include<algorithm>
using namespace std;
#define pb push_back
#define pii pair<int,int>
#define A first
#define B second
#define mp make_pair
const int maxn=410;
int f[maxn][maxn],v,a[maxn],path[maxn][maxn],n,m;
vector<pii> b[maxn];
int dfs(int u,int left){
    if (u>n) return 0;
    if (f[u][left]>=0) return f[u][left];

    int &res=f[u][left];
    int sum=left+a[u]-v;
    res=dfs(u+1,min(sum,a[u]));
    for (int k=0; k<b[u].size(); k++){
        sum-=b[u][k].A;
        if (sum<0) break;
        int tt=dfs(u+1,min(sum,a[u]));
        if (res<tt+k+1){
            res=tt+k+1;
            path[u][left]=k+1;
        }
    }
    return res;
}
void print(int u,int left){
    if (u>n) return;
    printf("%d",path[u][left]);
    int sum=left+a[u]-v;
    for (int i=0; i<path[u][left]; i++){
        sum-=b[u][i].A;
        printf(" %d",b[u][i].B);
    }
    printf("\n");
    print(u+1,min(sum,a[u]));
}

int main(){
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d%d",&n,&v);
    for (int i=1; i<=n; i++) scanf("%d",&a[i]);
    scanf("%d",&m);
    for (int i=1;i<=m; i++){
        int l,r,f;
        scanf("%d%d%d",&l,&r,&f);
        for (int j=l; j<=r; j++)
            b[j].pb(mp(f,i));
    }

    for (int i=1; i<=n; i++)
    sort(b[i].begin(),b[i].end());

    memset(f,-1,sizeof(f));
    printf("%d\n",dfs(1,0));
    print(1,0);
}
