#include<iostream>
#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;

const int N = 410;
//aa
int n, val, a[N], m, l[N], r[N], f[N], d[N][3 * N], nr[N][3 * N];
vector<int> v[N], z[N];

bool cmp(int a, int b) {
	return f[a] < f[b];
}

void calc() {
	int smax = 0, i, j, k, sum;

	for(i = 1; i <= 3 * 400; ++i)
		d[0][i] = -10000000;

	for(i = 1; i<=n; ++i) {

		int aa = a[i - 1];

		for(j = 0; j <= a[i]; ++j) {
			d[i][j] = d[i - 1][max(0, j + val - a[i])];

			sum = 0;

			for(k = 0; k < v[i].size(); ++k) {
				sum += f[v[i][k]];

				if(j - a[i] + val + sum <= aa) {

					if(d[i][j] < d[i - 1][max(0, j - a[i] + val + sum)] + k + 1) {
						d[i][j] = d[i - 1][max(0, j - a[i] + val + sum)] + k + 1;
						nr[i][j] = k + 1;
					}
				}
			}
		}
	}

	for(i = 0; i <= 3 * 400; ++i)
		smax = max(smax, d[n][i]);

	cout << smax << "\n";

	for(i = 0; i <= 3 * 400; ++i) if(d[n][i] == smax) {

		for(j = n; j; --j) {

			sum = 0;
			for(k = 0; k < nr[j][i]; ++k)
				z[j].push_back(v[j][k]), sum += f[v[j][k]];

			i = max(0, i - a[j] + val + sum);
		}
		break;
	}

	for(i = 1; i<=n; ++i) {
		cout << z[i].size() << " ";

		for(j = 0; j < z[i].size(); ++j)
			cout << z[i][j] << " ";
		cout << "\n";
	}
}

int main() {
	int i, j;

	freopen("input.txt", "r", stdin);
	freopen("output.txt", "w", stdout);

	cin >> n >> val;

	for(i = 1; i<=n; ++i)
		cin >> a[i];

	cin >> m;

	for(i = 1; i<=m; ++i) {
		cin >> l[i] >> r[i] >> f[i];

		for(j = l[i]; j <= r[i]; ++j)
			v[j].push_back(i);
	}

	for(i = 1; i<=n; ++i)
		sort(v[i].begin(), v[i].end(), cmp);

	calc();

	return 0;
}
