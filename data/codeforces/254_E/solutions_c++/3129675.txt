//In the name of God
#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;

#define fr pair<int,int>
#define num second
#define need first
const int MAXN=410;
int ans[MAXN][MAXN];
int put[MAXN][MAXN];
int a[MAXN];
vector<fr> stay[MAXN];

int n,v;

void prn(int day,int br)
{
  int p=put[day][br];
  printf("%d ",p);
  int c=0;
  for(int i=0;i<p;++i)
    {
    printf("%d ",stay[day][i].num);
    c+=stay[day][i].need;
    }
  int has=br+a[day]-v;
  printf("\n");
  if(day!=n)
    prn(day+1,min(has-c,a[day]));
}

int main()
{
#ifdef ONLINE_JUDGE
  freopen("input.txt","r",stdin);
  freopen("output.txt","w",stdout);
#endif
  scanf("%d%d",&n,&v);
  for(int i=1;i<=n;++i)
    scanf("%d",a+i);
  int m;
  scanf("%d",&m);
  for(int i=1;i<=m;++i)
    {
      int l,r,F;
      scanf("%d%d%d",&l,&r,&F);
      fr f;
      f.num=i;
      f.need=F;
      for(int j=l;j<=r;++j)
	stay[j].push_back(f);
    }
  for(int day=n;day>=1;--day)
    {
      sort(stay[day].begin(),stay[day].end());
      for(int br=0;br<=400;++br)
	{
	  int has=br+a[day];
	  has-=v;
	  if(has<0)
	    {
	      ans[day][br]=-1;
	      continue;
	    }
	  int c=0;
	  for(int feed=0;feed<=stay[day].size();++feed)
	    {
	      if(has-c<0)
		break;
	      if(ans[day+1][min(has-c,a[day])]+feed>ans[day][br])
		{
		  ans[day][br]=ans[day+1][min(has-c,a[day])]+feed;
		  put[day][br]=feed;
		}
	      if(feed<stay[day].size())
		c+=stay[day][feed].need;
	    }
	}
    }
  printf("%d\n",ans[1][0]);
  prn(1,0);
  return 0;
}
