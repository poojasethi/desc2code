#!/usr/bin/python

import sys
import math

eps = 0.00001
pi = 3.141592653589793

input = sys.stdin.readlines()

x1, y1 = tuple(map(float, input[0].split(" ")))
x2, y2 = tuple(map(float, input[1].split(" ")))
x3, y3 = tuple(map(float, input[2].split(" ")))

def get_ort_line_coeffs(x1, y1, x2, y2):
    a = x1 - x2
    b = y1 - y2
    c = a * ((x1 + x2) / 2) + b * ((y1 + y2) / 2)
    return a,b,c

h1 = get_ort_line_coeffs(x1, y1, x2, y2)
h2 = get_ort_line_coeffs(x2, y2, x3, y3)

def solve_linear(a1, b1, c1, a2, b2, c2):
    x = None
    y = None
    if abs(a1) < eps:
        y = c2 / a2
        x = (c1 - b1 * y) / a1
        return [x, y]
    else:
        y = (c1 * a2 - c2 * a1) / (b1 * a2 - b2 * a1)
        x = (c1 - b1 * y) / a1
        return [x, y]

#print(h1, h2)
O = solve_linear(h1[0], h1[1], h1[2], h2[0], h2[1], h2[2])
#print(O)
R = ((x1 - O[0]) ** 2 + (y1 - O[1]) ** 2) ** 0.5

def angle(ox, oy, x1, y1, x2, y2):
    v1 = (x1 - ox, y1 - oy)
    v2 = (x2 - ox, y2 - oy)
    return math.acos( (v1[0]*v2[0] + v1[1]*v2[1]) / (R*R) )

a1 = angle(O[0], O[1], x1, y1, x2, y2) * (1 / (2 * pi)) * 360
a2 = angle(O[0], O[1], x2, y2, x3, y3) * (1 / (2 * pi)) * 360
a3 = angle(O[0], O[1], x1, y1, x3, y3) * (1 / (2 * pi)) * 360

for i in xrange(3, 200):
    a = 360.0 / i

    s = (abs(a1 / a - round(a1 / a)) < eps) and (abs(a2 / a - round(a2 / a)) < eps) and (abs(a3 / a - round(a3 / a)) < eps)

    if s:
        print("%.8f" % (i * (0.5*R*R*math.sin(2*pi / i)), ) )
        break
