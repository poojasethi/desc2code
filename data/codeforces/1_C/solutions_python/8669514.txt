import math

EPS = 1e-4

def solve(p):
  a, b, c = dist(p[0], p[1]), dist(p[1], p[2]), dist(p[2], p[0])
  S = area(a, b, c)
  r = a*b*c/(4*S)
  A, B, C = angle(b, c, a), angle(a, c, b), angle(a, b, c)
  n = int(round(math.pi/fgcd(A, fgcd(B, C))))
  return n*area1(r, r, 2*math.pi/float(n))

def dist(p1, p2):
  x1, y1 = p1
  x2, y2 = p2
  dx, dy = x1-x2, y1-y2
  return math.sqrt(dx*dx+dy*dy)

def area(a, b, c):
  p = (a+b+c)/2
  return math.sqrt(p*(p-a)*(p-b)*(p-c))

def area1(a, b, C):
  return a*b*math.sin(C)/2

def angle(a, b, c):
  return math.acos((a*a+b*b-c*c)/(2*a*b))

def fgcd(a, b):
  if abs(a) < EPS: return b
  return fgcd(b % a, a)

p = [map(float, raw_input().split()) for i in range(3)]
print solve(p)
