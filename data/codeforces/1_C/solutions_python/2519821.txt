import math
import sys

eps = 1e-4

def gcd(x, y):
    while (abs(x) > eps and abs(y) > eps):
        if (x>y):
            x -= math.floor(x/y) * y
        else:
            y -= math.floor(y/x) * x
    return x+y

class Coordinate:
    def __init__(self, x, y):
        self.x = x
        self.y = y

A = Coordinate(*map(float, raw_input().split()))
B = Coordinate(*map(float, raw_input().split()))
C = Coordinate(*map(float, raw_input().split()))

a = math.sqrt((B.x-C.x)**2 + (B.y-C.y)**2)
b = math.sqrt((A.x-C.x)**2 + (A.y-C.y)**2)
c = math.sqrt((A.x-B.x)**2 + (A.y-B.y)**2)

s = (a+b+c)/2
T = math.sqrt(s*(s-a)*(s-b)*(s-c))

R = a*b*c / (4*T)

a_A = math.acos((b*b+c*c-a*a)/(2*b*c))
a_B = math.acos((a*a+c*c-b*b)/(2*a*c))
a_C = math.acos((a*a+b*b-c*c)/(2*a*b))

a_n = gcd(a_A, gcd(a_B, a_C))
n = round(math.pi/a_n, 0)

print R*R*math.sin(2*math.pi/n)*n/2
