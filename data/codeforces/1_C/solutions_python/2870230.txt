import sys
import math

DEBUG = False

########################################

def solve():
	''' Solution here '''

	p = [ map( float, s.split() ) for s in fin.read().strip().split("\n") ]

	a = distance(p[0], p[1])
	b = distance(p[1], p[2])
	c = distance(p[2], p[0])

	pp = (a + b + c) / 2
	s = math.sqrt( pp * (pp - a) * (pp - b) * (pp - c) )

	r = a * b * c / s / 4

	pies = [[] for i in xrange(0, 101)]
	for angles in xrange(3, 101):
		alpha = 2 * math.pi / angles
		for i in xrange(0, angles / 2):
			pies[angles] += [ 2 * r * math.sin( alpha * ( i + 1 ) / 2 ) ]

	for angles in xrange(3, 101):
		use = [False] * 3
		for i in xrange(0, angles / 2):
			if eq(pies[angles][i], a):
				use[0] = True
			if eq(pies[angles][i], b):
				use[1] = True
			if eq(pies[angles][i], c):
				use[2] = True

		if use[0] and use[1] and use[2]:
			h = pies[angles][0]
			pp = r + h / 2
			ans = angles * math.sqrt( pp * ( pp - r ) * ( pp - r ) * ( pp - h ) )
			fout.write("%f" % ans)
			quit()


def distance(a, b):
	return math.sqrt( (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2 )

def eq(f1, f2):
	''' Compare floats '''
	return abs(f1 - f2) < 1e-4

########################################

def init():
	global fin, fout
	if DEBUG:
		fin  = open('input.txt', 'r')
	else:
		fin  = sys.stdin
	fout = sys.stdout

def quit():
	global fin, fout
	fin.close()
	fout.close()
	sys.exit(0)

if __name__ == '__main__':
	init()
	solve()
	quit()