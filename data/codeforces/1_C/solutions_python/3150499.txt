from math import *
v = lambda a, b: (b[0] - a[0], b[1] - a[1])
l = lambda a, b: hypot(*v(a, b))
cross = lambda a, b: a[0] * b[1] - a[1] * b[0]
def angle(a, b, c):
  v1, v2 = v(b, a), v(b, c)
  res = abs(atan2(v1[1], v1[0]) - atan2(v2[1], v2[0]))
  return min(2 * pi - res, res)
a, b, c = [map(float, raw_input().split()) for _ in range(3)]
la, lb, lc = l(a, b), l(b, c), l(a, c)
A, B, C = angle(a, c, b), angle(b, a, c), angle(a, b, c)
S = fabs(cross(v(a, b), v(a, c))) / 2
R = (la * lb * lc) / (4 * S)
def fgcd(a, b):
  return a if b < pi / 100 else fgcd(b, fmod(a, b))
t = 2 * fgcd(A, fgcd(B, C))
n = (2 * pi) / t
print (pi * R * R * sin(t)) / t