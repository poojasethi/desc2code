from math import *

def gcd_new (p, q):
    if (q < 1e-4):
        return p
    return gcd_new(q, fmod(p, q))

x1, y1 = map(float, raw_input().split())
x2, y2 = map(float, raw_input().split())
x3, y3 = map(float, raw_input().split())

a = sqrt((x1 - x2)**2 + (y1 - y2)**2)
b = sqrt((x2 - x3)**2 + (y2 - y3)**2)
c = sqrt((x3 - x1)**2 + (y3 - y1)**2)
s = float(a + b + c)/2
L = sqrt(s*(s - a)*(s - b)*(s - c))
r = float(a*b*c)/float(4*L)

aa = float(acos(float(b**2 + c**2 - a**2)/float(2*b*c)))
bb = float(acos(float(c**2 + a**2 - b**2)/float(2*c*a)))
cc = float(acos(float(a**2 + b**2 - c**2)/float(2*a*b)))
n = pi/gcd_new(aa, gcd_new(bb, cc))
ans = float(n*r*r*sin(float(2*pi)/n))/2

print (ans)
