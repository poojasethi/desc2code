from sys import stdin
from fractions import gcd
from math import sqrt, pi, acos, fmod, asin, floor, sin, ceil
from itertools import permutations


def fgcd(a, b):
    a = float(a)
    while (abs(a) > 1e-4 and abs(b) > 1e-4):
        if (a > b):
            a -= floor(a / b) * b
        else:
            b -= floor(b / a) * a
    return a + b

def main():
    points = []
    for line in stdin:
        x, y = line.split()
        points.append((float(x), float(y)))
    a, b, c = points
    ab = sqrt((a[0] - b[0])**2 + (a[1] - b[1])**2)
    bc = sqrt((b[0] - c[0])**2 + (b[1] - c[1])**2)
    ac = sqrt((a[0] - c[0])**2 + (a[1] - c[1])**2)
    p = (ab+bc+ac)/2
    R = ab*bc*ac/(4*sqrt(p*(p-ab)*(p-ac)*(p-bc)))
    angles = []
    for s in (ab, bc, ac):
        cosa = ((2*R*R - s*s)/(2*R*R))
        cosa = max(cosa, -1)
        cosa = min(cosa, 1)
        angles.append(acos(cosa))
    angles.sort()
    angles[2] = 2*pi-angles[0]-angles[1]
    angle = fgcd(fgcd(angles[0], angles[1]), angles[2])
    n = 2*pi / angle
    print "{:.8f}".format(n*R*R*sin(angle)/2)

main()
