#include <iostream>
#include <cstdio>
#include <cmath>

using namespace std;

struct Node {
	double x, y;
} p[3];

double get_len(Node a, Node b)
{
	return sqrt((a.x-b.x)*(a.x-b.x) + (a.y-b.y)*(a.y-b.y));
}

double gcd(double a, double b)
{
	if (fabs(b) < 1e-2)
		return a;
	if (fabs(a) < 1e-2)
		return b;
	return gcd(b, fmod(a, b));
}

int main()
{
	double r, a, b, c, s, t;
	double da, db, dc;
	const double PI = asin(1.0) * 2;

	for (int i = 0; i < 3; ++i)
		scanf("%lf%lf", &p[i].x, &p[i].y);
	a = get_len(p[1], p[0]);
	b = get_len(p[2], p[0]);
	c = get_len(p[1], p[2]);
	t = (a + b + c) * 0.5;
	s = sqrt(t * (t-a) * (t-b) * (t-c));
	r = a * b * c / (4*s);
	da = asin(a*0.5 / r) * 2;
	db = asin(b*0.5 / r) * 2;
	dc = 2 * PI - da - db;
	double g = gcd(da, gcd(db, dc));
	printf("%.6f\n", 0.5*r*r*sin(g)*(2*PI)/g);
}
