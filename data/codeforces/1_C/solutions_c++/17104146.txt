#include <iostream>
#include <string>
#include <algorithm>
#include <stack>
#include <stdio.h>
#include <complex>
#include <math.h>

using namespace std;
#define D double
D g(D a,D b){return fabs(b)<1e-3?a:g(b,fmod(a,b));}


int main()
{
   complex<double> p1,p2,p3;
   cin>>p1.real()>>p1.imag()>>p2.real()>>p2.imag()>>p3.real()>>p3.imag();
   double ang1=fabs(2*arg((p3-p1)/(p2-p1))),ang2=2*fabs(arg((p1-p2)/(p3-p1))),ang3=2*fabs(arg((p2-p3)/(p1-p3))),a=abs(p2-p3);
   double R=a/(2*sin(ang1/2));

   D gc=g(ang1,g(ang2,ang3));
   D i=2*M_PI/gc;


   double ans=i*R*R*sin(gc)/2;
   printf("%.8f",ans);
   return 0;



   }