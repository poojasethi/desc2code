#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <vector>

using namespace std;

#define maxn (111111)

vector<int> E[maxn], L[maxn], Q[maxn];
bool vis[maxn];
int cnt[maxn], ans[maxn], f[maxn];
int n, m;

int find(int x) {
	return f[x] == x ? x : f[x] = find(f[x]);
}

void Tarjan(int x) {
	vis[x] = true;
	for (int i = 0; i < Q[x].size(); ++i) 
		if (vis[Q[x][i]]) 
			cnt[find(Q[x][i])] -= 2/*, printf("%d %d : %d\n", x, Q[x][i], find(Q[x][i]))*/;
			
	for (int i = 0; i < E[x].size(); ++i) {
		int k = E[x][i]; if (vis[k]) continue;
		Tarjan(k); f[k] = x;
	}
}

void dfs(int x) {
	vis[x] = true;
	
	for (int i = 0; i < E[x].size(); ++i) {
		int k = E[x][i]; if (vis[k]) continue;
		dfs(k);  ans[L[x][i]] = cnt[k]; cnt[x] += cnt[k];
	}
	
	//printf("%d = %d\n", x, cnt[x]);
}

int main() {	
	scanf("%d", &n);
	for (int i = 1; i < n; ++i) {
		int x, y; scanf("%d%d", &x, &y);
		E[x].push_back(y), L[x].push_back(i);
		E[y].push_back(x), L[y].push_back(i);
	}
	
	for (int i = 1; i <= n; ++i) f[i] = i;
	
	scanf("%d", &m);
	for (int i = 0; i < m; ++i) {
		int x, y; scanf("%d%d", &x, &y);
		if (x == y) continue;
		Q[x].push_back(y), Q[y].push_back(x);
		++cnt[x], ++cnt[y];
	}
	
	Tarjan(1); 
	memset(vis, 0, sizeof(vis));
	dfs(1);
	
	for (int i = 1; i < n; ++i)
		printf("%d%c", ans[i], i == n - 1 ? '\n' : ' ');
	
	return 0;
}
	   			 	 	 	 				 	   		