#include <cstdio>
#include <new>
const int N=100000,K=100000;
int fa[N];
bool vis[N];
int get(int a){
	if(fa[a]==a){
		return a;
	}
	int r=get(fa[a]);
	fa[a]=r;
	return r;
}
struct road{
	int i,to;
	road *next;
	road(){}
	road(int i,int to,road *next):i(i),to(to),next(next){}
}*points[N],roads[2*N];
struct rec{
	int tgt;
	rec *next;
	rec(){}
	rec(int tgt,rec *next):tgt(tgt),next(next){}
}*reclist[N],recs[2*K];
int cnt[N],s[N];
int dfs(int pos,int f){
	for(road *p=points[pos];p;p=p->next){
		if(p->to!=f){
			s[p->i]=dfs(p->to,pos);
			cnt[pos]+=s[p->i];
			fa[p->to]=pos;
		}
	}
	for(rec *p=reclist[pos];p;p=p->next){
		cnt[pos]++;
		if(vis[p->tgt]){
			cnt[get(p->tgt)]-=2;
		}
	}
	vis[pos]=true;
	return cnt[pos];
}
int main(){
	int n;
	scanf("%d",&n);
	for(int i=0;i<n;i++){
		fa[i]=i;
	}
	road *roadl=roads;
	for(int i=0;i<n-1;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		a--;
		b--;
		points[a]=new(roadl++) road(i,b,points[a]);
		points[b]=new(roadl++) road(i,a,points[b]);
	}
	int k;
	scanf("%d",&k);
	rec *recl=recs;
	for(int i=0;i<k;i++){
		int a,b;
		scanf("%d%d",&a,&b);
		if(a!=b){
			a--;
			b--;
			reclist[a]=new(recl++) rec(b,reclist[a]);
			reclist[b]=new(recl++) rec(a,reclist[b]);
		}
	}
	dfs(0,-1);
	for(int i=0;i<n-1;i++){
		if(i){
			putchar(' ');
		}
		printf("%d",s[i]);
	}
	return 0;
}

 			 		 		 				   	  	