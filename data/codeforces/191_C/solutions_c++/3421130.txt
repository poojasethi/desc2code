//By momo
#include <cstdio>
#include <vector>
#include <algorithm>
#define N 100010
#define PB push_back
#define FOR(it, c) for(__typeof((c).begin())it=(c).begin();it!=(c).end();it++)
using namespace std;

int n, m, U[N], V[N];
int par[N][20], lev[N], id[N];
vector<int> G[N];

void dfs(int p, int f, int l){
	lev[p] = l;
	par[p][0] = (f == 0? p: f);
	FOR(it, G[p]) if(*it != f) dfs(*it, p, l+1);
}

int val[N], ans[N];
int LCA(int u, int v){
	if(lev[u] > lev[v]) swap(u, v);
	for(int i = 19; i >= 0; i--)
		if(lev[par[v][i]] >= lev[u]) v = par[v][i];
	if(u == v) return u;
	for(int i = 19; i >= 0; i--)
		if(par[u][i] != par[v][i]) u = par[u][i], v = par[v][i];
	return par[u][0];
}

int b_dfs(int p, int f){
	int sum = val[p];
	FOR(it, G[p]) if(*it != f) sum += b_dfs(*it, p);
	if(p != 1) ans[id[p]] = sum;
	return sum;
}

int main (){
	scanf("%d", &n);
	for(int i = 0; i < n-1; i++){
		scanf("%d%d", &U[i], &V[i]);
		G[U[i]].PB(V[i]); G[V[i]].PB(U[i]);
	}
	dfs(1, 0, 0);
	for(int i = 0; i < n-1; i++){
		if(lev[U[i]] < lev[V[i]]) swap(U[i], V[i]);
		id[U[i]] = i;
	}
	for(int j = 1; j < 20; j++)
		for(int i = 1; i <= n; i++)
			par[i][j] = par[par[i][j-1]][j-1];
	scanf("%d", &m);
	for(int i = 0; i < m; i++){
		int u, v;
		scanf("%d%d", &u, &v);
		int x = LCA(u, v);
		val[x] -= 2; val[u] ++; val[v] ++;
	}
	b_dfs(1, 0);
	for(int i = 0; i < n-1; i++)
		printf("%d%c", ans[i], i == n-2?'\n':' ');
}
