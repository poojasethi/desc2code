#include <cstdio>
#include <vector>
using namespace std;

#define N 210000
int n, i, a, b, k, len, Time, s[N], sum[N], ans[N], fa[N], till[N], go[N], next[N];
bool used[N];
vector <int> ve[N];

void add(int a, int b) {
	next[++len] = till[a];
	till[a] = len;
	go[len] = b;
}

int gf(int x) {
	if (fa[x] != x)	fa[x] = gf(fa[x]);
	return fa[x];
}

void tarjan(int k, int ff) {
	for (int i = till[k]; i; i = next[i])
		if ((i ^ ff) != 1) tarjan(go[i], i), fa[go[i]] = k;
	used[k] = true;
	for (int i = 0; i < ve[k].size(); i++)
		if (used[ve[k][i]])	s[gf(ve[k][i])] -= 2;
}

void dfs(int k, int ff) {
	int now = Time;
	sum[Time + 1] = sum[Time] + s[k];
	Time++;
	for (int i = till[k]; i; i = next[i])
		if ((i ^ ff) != 1)	dfs(go[i], i);
	ans[ff / 2] = sum[Time] - sum[now];
}

int main() {
	// freopen("191C.in", "r", stdin);
	scanf("%d", &n);
	len = 1;
	for (i = 1; i < n; i++) {
		scanf("%d%d", &a, &b);
		add(a, b);
		add(b, a);
	}
	for (i = 1; i <= n; i++)	fa[i] = i;
	scanf("%d", &k);
	for (i = 1; i <= k; i++) {
		scanf("%d%d", &a, &b);
		s[a]++; s[b]++;
		ve[a].push_back(b);
		if (a != b)	ve[b].push_back(a);
	}
	tarjan(1, 0);
	dfs(1, 0);
	for (i = 1; i < n; i++)	printf("%d ", ans[i]);
}