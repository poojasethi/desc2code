#include<stdio.h>
#include<string.h>

const int N=100005;
int head[N],next[2*N],v[2*N],id[2*N],fa[N],a[N],b[N],vis[N],ans[N];
int head1[N],next1[2*N],v1[2*N];
int c;

int find(int x)
{
    if(x!=fa[x])
        return fa[x]=find(fa[x]);
    return x;
}

void dfs(int u,int pu)
{
    int x,i;
    fa[u]=u;
    for(i=head[u];i!=-1;i=next[i])
    {
        x=v[i];
        if(x==pu) continue;
        dfs(x,u);
        fa[x]=u;
        ans[id[i]]=a[x]-2*b[x];
        a[u]+=a[x]; b[u]+=b[x];
    }
    vis[u]=1;
    for(i=head1[u];i!=-1;i=next1[i])
    {
        x=v1[i]; a[u]++;
        if(vis[x])
            b[find(x)]++;
    }
}
    
int main()
{
    int n,k,i,x,y;
    scanf("%d",&n);
    c=0;
    memset(head,-1,sizeof(head));
    memset(head1,-1,sizeof(head1));
    for(i=0;i<n-1;i++)
    {
        scanf("%d%d",&x,&y);
        v[c]=y; next[c]=head[x]; id[c]=i; head[x]=c++;
        v[c]=x; next[c]=head[y]; id[c]=i; head[y]=c++;
    }
    scanf("%d",&k);
    c=0;
    while(k--)
    {
        scanf("%d%d",&x,&y);
        if(x==y) continue;
        v1[c]=y; next1[c]=head1[x]; head1[x]=c++;
        v1[c]=x; next1[c]=head1[y]; head1[y]=c++;
    }
    dfs(1,0);
    printf("%d",ans[0]);
    for(i=1;i<n-1;i++)
        printf(" %d",ans[i]);
    printf("\n");
    return 0;
}