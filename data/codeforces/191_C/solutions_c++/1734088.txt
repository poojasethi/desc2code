#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<vector>

using namespace std;

#define MAXN 100100

int n,m;
int cnt[MAXN],res[MAXN],bleg[MAXN];

vector < pair<int,int> > edge[MAXN];
vector <int> Q[MAXN];

int Find(int x)
{
    return bleg[x]=(bleg[x]==x?x:Find(bleg[x]));
}

void dfs(int u)
{
    int i,v;
    cnt[u]=0;
    bleg[u]=u;
    for(i=0;i<Q[u].size();i++)
    {
        cnt[u]++;
        v=Q[u][i];
        if(bleg[v])
        {
            cnt[Find(v)]-=2;
        }
    }
    for(i=0;i<edge[u].size();i++)
    {
        v=edge[u][i].first;
        if(bleg[v]) continue;
        dfs(v);
        cnt[u]+=cnt[v];
        res[edge[u][i].second]=cnt[v];
        bleg[v]=u;
    }
}

int main()
{
    int i,u,v;
    cin>>n;
    for(i=0;i<n-1;i++)
    {
        scanf("%d%d",&u,&v);
        edge[u].push_back(make_pair(v,i));
        edge[v].push_back(make_pair(u,i));
    }
    cin>>m;
    for(i=0;i<m;i++)
    {
        scanf("%d%d",&u,&v);
        if(u==v) continue;
        Q[u].push_back(v);
        Q[v].push_back(u);
    }
    dfs(1);
    for(i=0;i<n-2;i++) printf("%d ",res[i]); 
    printf("%d\n",res[i]);
    return 0;
}
/*
7
1 2
1 3
2 4
2 5
3 6
3 7

4
6 3
6 1
6 5
1 1
*/