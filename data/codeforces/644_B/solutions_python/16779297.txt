from sys import stdin, stdout
from collections import deque

count, q_max = map(int, stdin.readline().split())
q_size = 0
time = 0
busy_time = 0
queue = deque()

def q_append(intime, duration):
    global q_size
    if q_size < q_max:
        q_size += 1
        queue.append((intime,duration,))
    else:
        queue.append((intime, -1,))


time, busy_time = map(int, stdin.readline().split())
count -= 1

while count > 0:
    intime, duration = map(int, stdin.readline().split())
    if time + busy_time > intime:
        q_append(intime, duration)
    else:
        time += busy_time
        stdout.write("%d " % (time))
        if q_size:
            data = (intime, duration,)
            q_size -= 1
            intime, duration = queue.popleft()
            while duration == -1 and queue:
                stdout.write("-1 " % ())
                intime, duration = queue.popleft()
            q_append(*data)
        if duration > -1:
            time = max(intime, time)
            busy_time = duration

    count -= 1

if busy_time > -1:
    time += busy_time
    stdout.write("%d " % (time))
else:
    stdout.write("-1 " % ())

for intime,duration in queue:
    if duration > -1:
        time = max(intime, time) + duration
        stdout.write("%d " % (time))
    else:
        stdout.write("-1 " % ())
