#include <algorithm>
#include <iostream>
using namespace std;

int ans=0,l1,r1,l2,r2;
int ff(int x, int y){ if (x>=y) return x-y; return x; }

void doit(int dep, int l1, int r1, int l2, int r2){
	l1=max(1,l1), l2=max(1,l2);
	r1=min(r1,(1<<dep)-1), r2=min(r2,(1<<dep)-1);
	if (l1>r1 || l2>r2) return;
	if (dep==1){ans=max(ans,1);return;}
	int mid=1<<(dep-1);
	if (l1>l2) swap(l1,l2), swap(r1,r2);
	if (r1>=r2) { ans=max(r2-l2+1,ans); return; }
	bool f1=l1<=mid&&r1>=mid, f2=l2<=mid&&r2>=mid;
	if (!f1&&!f2)
		{ doit(dep-1,ff(l1,mid),ff(r1,mid),ff(l2,mid),ff(r2,mid)); return; }
	if (f1&&f2){
		ans=max(ans,r1-l2+1);
		doit(dep-1,l1,mid-1,1,r2-mid);
		return;
	}
	if (f2)swap(l1,l2),swap(r1,r2);
	//if (mid-l1>r1-mid)
		doit(dep-1,l1,mid-1,ff(l2,mid),ff(r2,mid)); 
		doit(dep-1,1,r1-mid,ff(l2,mid),ff(r2,mid));
}

int main(){	
	cin>>l1>>r1>>l2>>r2;	
	doit(30,l1,r1,l2,r2);	
	cout<<ans<<endl;
    return 0;
}
