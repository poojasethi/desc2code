#include <bits/stdc++.h>

using namespace std;

int solve(int l1, int r1, int l2, int r2, int step = 30) {
  if(l1 > r1 || l2 > r2) return 0;

  int ovl = max(l1, l2);
  int ovr = min(r1, r2);
  int overlap = ((ovl <= ovr) ? (ovr - ovl + 1) : 0);

  if((l1 <= l2 && r2 <= r1) || (l2 <= l1 && r1 <= r2) ) return overlap;

  int mid = (1<<(step - 1));
  int res = overlap;
  
  res = max(res, solve(min(l1, mid), min(r1, mid - 1), min(l2, mid), min(r2, mid - 1), step - 1));
  res = max(res, solve(min(l1, mid), min(r1, mid - 1), max(l2, mid + 1) - mid, max(r2, mid) - mid, step - 1));
  res = max(res, solve(max(l1, mid + 1) - mid, max(r1, mid) - mid, min(l2, mid), min(r2, mid - 1), step - 1));
  res = max(res, solve(max(l1, mid + 1) - mid, max(r1, mid) - mid, max(l2, mid + 1) - mid, max(r2, mid) - mid, step - 1));

  return res;
}

int main() {
  int l1, l2, r1, r2;

  scanf("%d%d%d%d", &l1, &r1, &l2, &r2);
  printf("%d\n", solve(l1, r1, l2, r2));

  return 0;
}
