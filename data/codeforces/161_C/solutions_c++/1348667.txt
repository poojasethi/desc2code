#include <iostream>
#include <cstdio>

using namespace std;

long dfs(long l,long l1,long r1,long l2,long r2)
{
 if(l1>r1||l2>r2)
  return 0;
 
 if((long long)(r1-l1)+1==(1LL<<(l+1))-1)
  return r2-l2+1;
 if((long long)(r2-l2)+1==(1LL<<(l+1))-1)
  return r1-l1+1;
 
 if(l1==l2&&r1==r2)
  return r1-l1+1;
 
 long mid=1<<l;
 if(l1>mid)
  {
   l1-=mid;
   r1-=mid;
  }
 if(l2>mid)
  {
   l2-=mid;
   r2-=mid;
  }
 if(r1<mid&&r2<mid)
  return dfs(l-1,l1,r1,l2,r2);
 if(r1>=mid&&r2>=mid)
  return max(max(dfs(l-1,l1,mid-1,l2,mid-1)+dfs(l-1,1,r1-mid,1,r2-mid)+1,dfs(l-1,l1,mid-1,1,r2-mid)),dfs(l-1,1,r1-mid,l2,mid-1));
 if(r1<mid)
  return max(dfs(l-1,l1,r1,l2,mid-1),dfs(l-1,l1,r1,1,r2-mid));
 if(r2<mid)
  return max(dfs(l-1,l1,mid-1,l2,r2),dfs(l-1,1,r1-mid,l2,r2));
}

int main()
{
 long l1,r1,l2,r2;
 
 scanf("%ld%ld%ld%ld",&l1,&r1,&l2,&r2);
 printf("%ld\n",dfs(30,l1,r1,l2,r2));
 
 return 0;
}
