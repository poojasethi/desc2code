#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;

const int maxn=50+5;

int dist[maxn][maxn];
int P[maxn],Q[maxn];
long long f[maxn][maxn];
bool g[maxn],s[maxn],b[maxn];
int n,m,g1,g2,s1,s2;

int main()
{
	//freopen("input.txt","r",stdin);

	scanf("%d%d",&n,&m);
	for (int i=0;i<n;i++)
	for (int j=0;j<n;j++)
		dist[i][j]=1000000000;
	for (int i=0;i<n;i++) dist[i][i]=0;
	for (int u,v,w;m--;)
	{
		scanf("%d%d%d",&u,&v,&w);
		u--;v--;
		dist[u][v]=dist[v][u]=w;
	}
	scanf("%d%d%d%d",&g1,&g2,&s1,&s2);

	for (int k=0;k<n;k++)
	for (int i=0;i<n;i++)
	for (int j=0;j<n;j++)
		dist[i][j]=min(dist[i][j],dist[i][k]+dist[k][j]);
	for (int i=0;i<n;i++)
	{
		sort(dist[i],dist[i]+n);
		for (int j=1;j<n;j++) dist[i][j-1]=dist[i][j];
		for (int j=0;j<n-1;j++) dist[i][j]=dist[i][j]*100+i;
		sort(dist[i],dist[i]+n-1);
	}
	for (int i=0;i<n;i++)
	{
		P[i]=Q[i]=dist[i][0];
		for (int j=1;j<n-1;j++)
			P[i]=min(P[i],dist[i][j]),
			Q[i]=max(Q[i],dist[i][j]);
	}
	
	long long res=0;
	for (int A=0;A<n;A++)
	for (int B=0;B<n;B++)
	if (A!=B && P[A]<Q[B])
	{
		for (int i=0;i<n;i++) g[i]=s[i]=b[i]=0;
		for (int i=0;i<n;i++)
		{
			if (P[i]<P[A]) g[i]=1;
			if (Q[i]>Q[B]) b[i]=1;
			for (int j=0;j<n-1;j++)
			if (dist[i][j]>P[A] && dist[i][j]<Q[B]) s[i]=1;
		}
		g[A]=1;b[A]=s[A]=0;
		g[B]=s[B]=0;b[B]=1;
		memset(f,0,sizeof(f));
		f[0][0]=1;
		for (int k=0;k<n;k++)
		for (int i=n;i>=0;i--)
		for (int j=n;j>=0;j--)
		{
			if (g[k]) f[i+1][j]+=f[i][j];
			if (s[k]) f[i][j+1]+=f[i][j];
			if (!b[k]) f[i][j]=0;
		}
		for (int i=g1;i<=g2;i++)
		for (int j=s1;j<=s2;j++)
			res+=f[i][j];
	}
	printf("%I64d\n",res);
}
