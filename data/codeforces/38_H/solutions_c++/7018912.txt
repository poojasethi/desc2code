#include <cstdio>
#include <algorithm>
#include <memory.h>
#include <string.h>
using namespace std;

int n, m, a, b, c, g1, g2, s1, s2, dist[51][51], ma[51], mi[51];
long long ans, dp[51][51];
bool in[51];

int main() {
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			dist[i][j] = (i != j) * 100000000;
	while (m--) {
		scanf("%d%d%d", &a, &b, &c);
		dist[a][b] = dist[b][a] = c;
	}
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			for (int p = 1; p <= n; p++)
				dist[j][p] = min(dist[j][p], dist[j][i] + dist[i][p]);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= n; j++)
			dist[i][j] = dist[i][j] * n + i;
	for (int i = 1; i <= n; i++) {
		ma[i] = 0;
		mi[i] = 1000000000;
		for (int j = 1; j <= n; j++)
			if (j != i)	ma[i] = max(ma[i], dist[i][j]), mi[i] = min(mi[i], dist[i][j]);
	}
	scanf("%d%d%d%d", &g1, &g2, &s1, &s2);
	for (int a = 1; a <= n; a++)
		for (int b = 1; b <= n; b++)
			if (a != b) {
				int L = mi[a], R = ma[b];
				for (int i = 1; i <= n; i++) {
					in[i] = false;
					for (int j = 1; j <= n; j++)
						if (i != j && L < dist[i][j] && dist[i][j] < R)	in[i] = true;
				}
				memset(dp, 0, sizeof dp);
				dp[1][0] = 1;
				int now = 1;
				for (int i = 1; i <= n; i++)
					if (i != a && i != b) {
						for (int j = now; j; j--)
							for (int p = now - j; p >= 0; p--)
								if (dp[j][p]) {
									if (mi[i] <= L)	dp[j + 1][p] += dp[j][p];
									if (in[i])	dp[j][p + 1] += dp[j][p];
									if (ma[i] < R)	dp[j][p] = 0;
								}
						now++;
					}
				for (int i = g1; i <= g2; i++)
					for (int j = s1; j <= s2; j++)
						ans += dp[i][j];
			}
	printf("%I64d\n", ans);
}
