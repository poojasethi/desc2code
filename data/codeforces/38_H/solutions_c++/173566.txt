#ifdef ONLINE_JUDGE
#pragma comment(linker, "/STACK:16777216")
#endif

#include <iostream>
#include <cstdio>
#include <cmath>
#include <algorithm>
#include <vector>
#include <map>
#include <set>
#include <bitset>
#include <queue>
#include <stack>
#include <sstream>
#include <cstring>
#include <numeric>
#include <ctime>

#define re return
#define fi first
#define se second
#define mp make_pair
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) ((int) (x).size())
#define rep(i, n) for (int i = 0; i < (n); i++)
#define rrep(i, n) for (int i = (n) - 1; i >= 0; i--)
#define y0 y32479
#define y1 y95874
#define fill(x, y) memset(x, y, sizeof(x))
#define sqr(x) ((x) * (x))
#define prev prev239
#define next next239
#define hash hash239
#define rank rank239

using namespace std;

typedef vector<int> vi;
typedef vector<vi> vvi;
typedef pair<int, int> ii;
typedef vector<ii> vii;
typedef vector<string> vs;
typedef long long ll;
typedef double D;
typedef long double LD;

template<class T> T abs(T x) {return x > 0 ? x : -x;}

int n;
int m;

int g1, g2, s1, s2;
int dist[50][50];

ii l[50], r[50];
ll table[51][51][51];

vii v[50];
ii zlo[50][50];

int check2(int x) {
	re x >= s1 && x <= s2;
}

ll getans(int p1, int p2) {
	rrep(i, n) {
		rep(c1, min(g2 + 1, i + 1)) rep(c2, i + 1) {
			ll &ans = table[c1][c2][i];
			if (i == p1) {
				ans = table[c1 + 1][c2][i + 1];
				continue;
			}
			if (i == p2) {
				ans = table[c1][c2 + 1][i + 1];
				continue;
			}

			ans = 0;
			if (l[i] < l[p1])
				ans += table[c1 + 1][c2][i + 1];
			if (r[i] > r[p2])
				ans += table[c1][c2 + 1][i + 1];
			if (zlo[i][p1] < r[p2])
				ans += table[c1][c2][i + 1];

			//cout << p1 << ' ' << p2 << ' ' << i << ' ' << c1 << ' ' << c2 << ' ' << ans << endl;
		}
	}
	//cout << p1 << ' ' << p2 << ' ' << table[0][0][0] << endl;
	re table[0][0][0];
}

int main() {
#ifndef ONLINE_JUDGE
	//freopen("input.txt", "r", stdin);
	//freopen("output.txt", "w", stdout);
#endif

	cin >> n >> m;
	rep(i, n) rep(j, n)
			dist[i][j] = (int)(1e9);
	rep(i, n) dist[i][i] = 0;

	rep(i, m) {
		int a, b, c;
		cin >> a >> b >> c;
		a--;
		b--;
		dist[a][b] = min(dist[a][b], c);
		dist[b][a] = min(dist[b][a], c);
	}

	cin >> g1 >> g2 >> s1 >> s2;

	rep(k, n)
	rep(i, n) rep(j, n)
	dist[i][j] = min(dist[i][k] + dist[k][j], dist[i][j]);

	rep(i, n) {
		r[i] = mp(-1, 0);
		l[i] = mp(1000000000, 0);
		rep(j, n)
		if (i != j) {
			v[i].pb(mp(dist[i][j], i));
			l[i] = min(l[i], mp(dist[i][j], i));
			r[i] = max(r[i], mp(dist[i][j], i));
		}
	}

	rep(i, n)
	sort(all(v[i]));

	rep(i, n) rep(j, n) {
		if (r[i] > l[j])
			zlo[i][j] = *lower_bound(all(v[i]), l[j]);
		else
			zlo[i][j] = mp(1000000000, 0);
	}

//	cout << zlo[1][2].fi << ' ' << zlo[1][2].se <<endl;


/*	rep(i, n) {
		rep(j, n)
			cout << dist[i][j] << ' ';
		cout << endl;
	}*/

	if (0)
	rep(i, n) {
		cout << i << ' ' << l[i].fi << ' ' << l[i].se << ' ' << r[i].fi << ' ' << r[i].se << endl;
	}

	rep(i, n) rep(j, n) {
		if (i <= g2 && i >= g1 && check2(n - i - j))
			table[i][j][n] = 1;
		else
			table[i][j][n] = 0;
		//cout << i << ' ' << j << ' ' << table[i][j][n] << endl;
	}

	ll ans = 0;
	rep(i, n) rep(j, n) {
		if (i != j && l[i] < r[j])
		ans += getans(i, j);
	}

	cout << ans << endl;

	re 0;
}

