#include <bits/stdc++.h>
using namespace std;
#define N 55
#define inf 1e9
#define clr(a) memset(a, 0, sizeof a)

int n, m, d[N][N], mn[N], mx[N], g1, g2, s1, s2;
bool g[N], s[N], b[N];
long long f[N][N][N], ans;

int main() {
//	freopen("h.in", "r", stdin);
	cin >> n >> m;
	memset(d, 0x3f, sizeof d);
	for (int i = 1; i <= m; i ++) {
		int a, b, c;
		cin >> a >> b >> c;
		d[a][b] = d[b][a] = c;
	}
	cin >> g1 >> g2 >> s1 >> s2;

	for (int k = 1; k <= n; k ++)
		for (int i = 1; i <= n; i ++)
			for (int j = 1; j <= n; j ++)
				d[i][j] = min(d[i][j], d[i][k] + d[k][j]);

	for (int i = 1; i <= n; i ++) {
		mn[i] = inf, mx[i] = -inf;
		for (int j = 1; j <= n; j ++) if (i != j) {
			d[i][j] = d[i][j] * 100 + i;
			mn[i] = min(mn[i], d[i][j]);
			mx[i] = max(mx[i], d[i][j]);
		}
	}

	for (int i = 1; i <= n; i ++) {
		for (int j = 1; j <= n; j ++) {
			if (i == j || mn[i] > mx[j]) continue;
			clr(g), clr(s), clr(b);
			for (int k = 1; k <= n; k ++) {
				if (mn[k] < mn[i]) g[k] = 1;
				if (mx[k] > mx[j]) b[k] = 1;
				for (int l = 1; l <= n; l ++) {
					if (l != k && d[k][l] > mn[i] && d[k][l] < mx[j]) {
						s[k] = 1; break;
					}
				}
			}
			g[i] = 1, s[i] = 0, b[i] = 0;
			g[j] = 0, s[j] = 0, b[j] = 1;

			clr(f);
			f[0][0][0] = 1;
			for (int k = 1; k <= n; k ++) {
				for (int x = 0; x <= g2; x ++) {
					for (int y = 0; y <= s2; y ++) {
						if (g[k]) f[k][x+1][y] += f[k-1][x][y];
						if (s[k]) f[k][x][y+1] += f[k-1][x][y];
						if (b[k]) f[k][x][y] += f[k-1][x][y];
					}
				}
			}
			for (int x = g1; x <= g2; x ++) for (int y = s1; y <= s2; y ++) ans += f[n][x][y];
		}
	}
	cout << ans << endl;
	return 0;
}
