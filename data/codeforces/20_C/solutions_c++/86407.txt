#include <cstdio>
#include <list>
#include <utility>
#include <queue>
#define REP(i,n) for (int i = 1; i <= n; i++)
#define FORE(i,c) for (typeof(c.end()) i = c.begin(); i != c.end(); ++i)
using namespace std;
const int MAX = 100005;
const long long oo = (long long)1e15;
int N, M;
list<pair<int, long long> > G[MAX];
int prev[MAX];
long long dist[MAX];
priority_queue<pair<long long, int> > Q;
int main()
{
	scanf("%d%d", &N, &M);
	REP(i, M)
	{
		int a, b, w;
		scanf("%d%d%d", &a, &b, &w);
		G[a].push_back(make_pair(b, w));
		G[b].push_back(make_pair(a, w));
	}
	REP(i, N)
		dist[i] = oo;
	Q.push(make_pair(dist[N] = 0, N));
	while (!Q.empty())
	{
		int u = Q.top().second;
		long long du = -Q.top().first;
		Q.pop();
		if (du > dist[u])
			continue;
		FORE(i, G[u])
		{
			int v = i->first;
			long long wuv = i->second;
			if (dist[v] > dist[u] + wuv)
			{
				prev[v] = u;
				Q.push(make_pair(-(dist[v] = dist[u] + wuv), v));
			}
		}
	}
	if (dist[1] == oo)
		puts("-1");
	else
	{
		for (int u = 1; u; u = prev[u])
			printf("%d%c", u, u == N ? '\n' : ' ');
	}
}
