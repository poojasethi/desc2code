#include <iostream>
#include <set>
#include <vector>


#define PII pair<int ,int>
#define F first
#define S second

using namespace std;

const int Maxn = 1000 * 100 + 10;
const long long Inf = (long long)2 * 100 * 1000 * 1000 * 1000;

vector <PII> adj[Maxn];
set <PII> st;
long long d[Maxn];
int p[Maxn];
int n,m;

void djk();

int main()
{
	cin >> n >> m;
	for(int i=0; i<m;i++)
	{
		int a, b, w;
		cin >> a >> b >> w;
		a--; b--;
		adj[a].push_back(PII(w,b));
		adj[b].push_back(PII(w,a));
	}
	for(int i=0; i<n - 1; i++)
		d[i] = Inf;
	st.insert(PII(0, n - 1));
	djk();
	int v = 0;
	if(p[v] == 0)
	{
		cout << -1;
		return 0;
	}
	cout << 1 << " ";
	while(p[v] != n -1)
		cout << p[v] + 1 << " " ,v = p[v];
	cout << n << endl;
	return 0;
}

void djk()
{
	while(st.size())
	{
		int v = st.begin()->S;
		st.erase(st.begin());
		for(int i=0; i<adj[v].size(); i++)
		{
			PII u = adj[v][i];
			if(u.F + d[v] < d[u.S])
			{
				st.erase(PII(d[u.S] , u.S));
				d[u.S] = d[v] + u.F;
				p[u.S] = v;
				st.insert(PII(d[u.S] , u.S));
			}
		}
	}
}
 	  	    		    		 			 			