#include<iostream>
#include<queue>
#include<vector>
#include<utility>
#include<cstring>
using namespace std;
#define mp make_pair
typedef long long ll;
typedef pair<long long,int> pli;
const ll oo=1e11+1;
vector<pli> neigh[100001];
ll dis[100001];bool vis[100001];
int prev[100001],N,M;
void Out(int n){
	if(n!=1) Out(prev[n]);cout<<n<<(n!=N?' ':'\n');
}
int main(){
	priority_queue<pli> que;
	cin>>N>>M;
	for(int i=0;i<M;i++){
		int a,b;ll c;cin>>a>>b>>c;
		neigh[a].push_back(mp(c,b));
		neigh[b].push_back(mp(c,a));
	}
	memset(dis,oo,sizeof(dis));dis[1]=0;
	que.push(mp(0,1));
	int count=0;
	while(!que.empty()){
		int a=que.top().second;que.pop();
		vis[a]=true;
		for(int i=0;i<neigh[a].size();i++){
			int b=neigh[a][i].second;ll c=neigh[a][i].first;
			if(!vis[b]&&dis[a]+c<dis[b]){
				dis[b]=dis[a]+c;
				que.push(mp(-dis[b],b));
				prev[b]=a;
			}
		}
	}
	if(!vis[N]){
		cout<<"-1\n";return 0;
	}
	Out(N);
	return 0;
}