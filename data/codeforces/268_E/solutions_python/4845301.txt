input_cnt = raw_input()
songs=[]
for i in range(0,int(input_cnt)):
	songs.append(raw_input().split(' '))

songs = sorted(songs, key = lambda x: float(x[0]) * (float(x[1])/100)/(1.0000001-float(x[1])/100))
#print songs
time_run = 0
time_remember_list = 0
song = []
for i in range(0, int(input_cnt)):
	song = songs.pop()
#	print song
	time_run += float(song[0]) + time_remember_list*(1-float(song[1])/100)
	time_remember_list += float(song[0])*float(song[1])/100
#	print time_remember_list
print "%.9f" % time_run

# suppose putting i before j, => E[i] = S[i] + (1-P[i])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k] } 
#									+ S[j] + (1-P[j])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k]+P[i]*S[i] }
# suppose putting i after j, => E[j] = S[j] + (1-P[j])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k] } 
#									+ S[i] + (1-P[i])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k]+P[j]*S[j] }
#							=> E[i] - E[j] = (1-P[i])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k] } + (1-P[j])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k]+P[i]*S[i] }
#										- (1-P[j])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k] } - (1-P[i])*{ P[1]*S[1]+P[2]*S[2]+...+P[k]*S[k]+P[j]*S[j] }
#							=> E[i] - E[j] = -(1-P[i])*{P[j]*S[j]} + (1-P[j])*{P[i]*S[i]}
#							=> E[i] > E[j] => -(1-P[i])*{P[j]*S[j]} + (1-P[j])*{P[i]*S[i]} > 0
#							=> -(1-P[i])*{P[j]*S[j]} + (1-P[j])*{P[i]*S[i]} > 0
#							=> (1-P[i])/{P[i]*S[i]} < (1-P[j])/{P[j]*S[j]}
#							=> 