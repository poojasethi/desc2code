import operator

def classify_state(colors):
	state = {}
	state['R'] = colors.count('R')
	state['G'] = colors.count('G')
	state['B'] = colors.count('B')
	return state

def main():
	# take in input
	n = int(raw_input())
	colors = raw_input()
	state = classify_state(colors)

	# Rules:
	# 2 Same --> Same
	# 2 Different --> 3rd color

	while n > 4:
		# print state
		# Strategy:
		# 	Take max 2 colors to make 3rd

		# First check if all are same
		if state[max(state, key=state.get)] == n:
			print max(state, key=state.get)
			return

		least = min(state, key=state.get)
		for key in state:
			if key == least:
				state[key] = state[key] + 1
			else:
				state[key] = state[key] - 1
		n -= 1

	# print state
	if n == 4:
		if state[max(state, key=state.get)] == 4:
			for key in state:
				if state[key] == 4:
					print key
					return
		elif state[max(state, key=state.get)] == 3:
			other_two = ""
			for key in state:
				if state[key] != 3:
					other_two += key
			print ''.join(sorted(other_two))
			return
		else:
			print "BGR"
			return
	elif n == 3:
		if state[max(state, key=state.get)] == 3:
			for key in state:
				if state[key] == 3:
					print key
					return
		elif state[max(state, key=state.get)] == 2:
			other_two = ""
			for key in state:
				if state[key] != 2:
					other_two += key
			print ''.join(sorted(other_two))
			return 
		else:
			print "BGR"
			return
	elif n == 2:
		if state[max(state, key=state.get)] == 2:
			for key in state:
				if state[key] == 2:
					print key
					return
		else:
			for key in state:
				if state[key] == 0:
					print key
					return
	else:
		for key in state:
			if state[key] == 1:
				print key
				return



if __name__ == "__main__":
	main()