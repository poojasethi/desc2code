#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
using namespace std;
int a[110],b[22],c[10010],d[10010],f[1100000],g[22][22],n,t,m,p,i,j,k,x;

void bfs(int x)
{
	memset(d,0x3f,sizeof(d));
	queue<int> q;
	q.push(x),d[x]=0;
	while(q.size())
	{
		x=q.front(),q.pop();
		for(int i=1;i<=m;i++)
		{
			if(x>=a[i]&&d[x-a[i]]>d[x]+1)
				d[x-a[i]]=d[x]+1,q.push(x-a[i]);
			if(x+a[i]<=n&&d[x+a[i]]>d[x]+1)
				d[x+a[i]]=d[x]+1,q.push(x+a[i]);
		}
	}
}

int main()
{
	ios::sync_with_stdio(false);
	cin>>n>>t>>m;
	for(i=1;i<=t;i++) cin>>x,c[x]=1;
	for(i=0;i<=n;i++)
		if(c[i]!=c[i+1]) b[++p]=i;
	for(i=1;i<=m;i++) cin>>a[i];
	for(i=1;i<=p;i++)
	{
		bfs(b[i]);
		for(j=1;j<=p;j++) g[i][j]=d[b[j]];
	}
	memset(f,0x3f,sizeof(f));
	f[0]=0;
	for(i=0;i<1<<p;i++)
		for(j=0;j<p;j++) if(!(i>>j&1))
			for(k=j+1;k<p;k++) if(!(i>>k&1))
				f[i|1<<j|1<<k]=min(f[i|1<<j|1<<k],f[i]+g[j+1][k+1]);
	cout<<(f[(1<<p)-1]==0x3f3f3f3f?-1:f[(1<<p)-1])<<endl;
	return 0;
}