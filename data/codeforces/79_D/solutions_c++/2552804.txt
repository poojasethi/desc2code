#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>

using std::min;

const int fin=0,maxn=10010,maxm=20;
const int INF=100000000;
int N,M,P;
int a[maxm],b[maxn];
int q[maxn],d[maxn];
int g[maxm][maxm],f[1<<maxm];
bool c[maxn],v[maxn];

  void bfs(int S){
    int i,u,t,head,tail;
    head=tail=1,q[1]=S;
    memset(v,0,sizeof(v));
    for(i=1;i<=N;++i)d[i]=INF;
    v[S]=1,d[S]=0;
    while(head<=tail){
      u=q[head++];
      for(i=0;i<P;++i){
        if(t=u-b[i],1<=t&&t<=N&&!v[t])
          v[t]=1,d[t]=d[u]+1,q[++tail]=t;
        if(t=u+b[i],1<=t&&t<=N&&!v[t])
          v[t]=1,d[t]=d[u]+1,q[++tail]=t;
      }
    }
  }
  
  inline int sol(int S){
    if(!S)return 0;
    if(f[S]!=-1)return f[S];
    int i,j;
    f[S]=INF;
    for(i=0;i<M;++i)if((S>>i)&1)
      for(j=0;j<M;++j)if(i!=j)if((S>>j)&1)
        f[S]=min(f[S],sol(S-(1<<i)-(1<<j))+g[i][j]);
    return f[S];
  }

int main(){
  if(fin){
    freopen("t.in","r",stdin);
    freopen("t.out","w",stdout);
  }
  int i,j,w,all;
  scanf("%d%d%d",&N,&M,&P);
  while(M--)
    scanf("%d",&w),c[w]^=1,c[w+1]^=1;
  for(i=0;i<P;++i)scanf("%d",b+i);
  for(M=0,++N,i=1;i<=N;++i)if(c[i])a[M++]=i;
  for(i=0;i<M;++i)
    for(bfs(a[i]),j=0;j<M;++j)g[i][j]=d[a[j]];
  for(all=(1<<M)-1,i=1;i<=all;++i)f[i]=-1;
  if(sol(all)==INF)puts("-1");else printf("%d\n",f[all]);
  return 0;
}
