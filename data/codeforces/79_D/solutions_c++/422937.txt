#include <cstring>
#include <queue>
#include <vector>
#include <cstdio>
#define INF 100000
using namespace std;
int n,k,l;
int X[10],A[100];
int R[10010],B[10010];
vector<int> ones;
vector<int> G[10010];
vector<int> sp[21];
queue<int> Q;
vector<int> BFS(int from){
  vector<int> S(n+2,INF);
  while(!Q.empty())Q.pop();
  Q.push(from);S[from]=0;
  while(!Q.empty()){
   int vr=Q.front();Q.pop();
   for(int i=0;i<G[vr].size();++i){
    int to=G[vr][i];
    if(S[to]<INF)continue;
    S[to]=S[vr]+1;
    Q.push(to);  
                                   }
                   }
  return S;
}
int SZ;
int DP[1<<20];
int solve(int mask){
  if(DP[mask]>=0)return DP[mask];
  DP[mask]=(int)1E9;
  for(int i=0;i<SZ;++i)
   for(int j=i+1;j<SZ;++j)
    if((mask&(1<<i)) && (mask&(1<<j)) && sp[i][ones[j]]<INF)
      DP[mask]=min(DP[mask],sp[i][ones[j]]+solve((mask^(1<<i)) ^ (1<<j)));
  return DP[mask];
}
int main(){
  int i,j;
  scanf("%d%d%d",&n,&k,&l);
  for(i=0;i<k;++i){scanf("%d",&X[i]);R[X[i]]=1;}
  for(i=0;i<l;++i)scanf("%d",&A[i]);
  for(i=1;i<=n+1;++i)B[i]=R[i]^R[i-1];
  for(i=1;i<=n+1;++i)if(B[i])ones.push_back(i);
  for(i=0;i<l;++i)
   for(j=1;j<=n+1;++j)
    if(j+A[i]<=n+1){G[j].push_back(j+A[i]);G[j+A[i]].push_back(j);}
  for(i=0;i<ones.size();++i)sp[i]=BFS(ones[i]);
  memset(DP,-1,sizeof DP);
  DP[0]=0;
  SZ=ones.size();
  j=solve((1<<SZ)-1);
  printf("%d\n",((j<1E9)?j:-1));
  return 0;
}
