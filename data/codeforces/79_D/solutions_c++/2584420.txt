#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;
const int N=10100,inf=16843000;
int n,m=0,K,L;
bool a[N];
int g[N],f[1<<22],e[30],b[30],c[110];
int w[30][30];
void _first()
{
	scanf("%d%d%d",&n,&K,&L);
	memset(a,0,sizeof a);
	for(int i=1,x;i<=K;++i)
		scanf("%d",&x),a[x]=1;
	for(int i=0;i<=n;++i)
	{
		a[i]=(a[i]!=a[i+1]);
		if ( a[i] ) b[++m]=i;
	}
	for(int i=1;i<=L;++i)
		scanf("%d",&c[i]);
}

int B[N];
void bfs(const int x)
{
	memset(g,1,sizeof g),g[b[x]]=0;
	B[1]=b[x];
	for(int h=1,t=1,now;h<=t;++h)
	{
		now=B[h];
		for(int i=1;i<=L;++i)
		{
			if ( now>=c[i] && g[now]+1<g[now-c[i]] ) g[now-c[i]]=g[now]+1,B[++t]=now-c[i];
			if ( now+c[i]<=n && g[now]+1<g[now+c[i]] ) g[now+c[i]]=g[now]+1,B[++t]=now+c[i];
		}
	}
	for(int i=1;i<=m;++i)
		w[x][i]=g[b[i]];
	w[x][x]=1<<25;
}
void work()
{
	if ( m&1 ) { puts("-1");return;}
	e[1]=1;
	for(int i=2;i<=m;++i) e[i]=e[i-1]<<1;
		e[m+1]=1<<m;
	memset(f,1,sizeof f);
	int E=(1<<m)-1;f[E]=0;
	for(int i=E;i>0;--i ) 
	if ( f[i]<inf ) 
	{
		for(int j=1;e[j]<=i;++j)
			if ( (i&e[j])>0 )
			for(int k=j+1;e[k]<=i;++k)
				if ( (i&e[k])>0 && f[i^e[j]^e[k]]>f[i]+w[j][k] )
					f[i^e[j]^e[k]]=f[i]+w[j][k];
	}
	if ( f[0]>inf ) f[0]=-1;
	printf("%d\n",f[0]);
}
int main()
{
	_first();
	for(int i=1;i<=m;++i) bfs(i);
	work();
	return 0;
}