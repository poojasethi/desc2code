#include<cstdio>
#include<cstdlib>
#include<algorithm>
using namespace std;
int n,m,l,x[31],tmp[51],tag[10002],q[40002],fq,lq,a[31][31],LIM = 49999999,p[101];
int dp[(1<<20)+1];
int main(){
    scanf("%d%d%d",&n,&m,&l);
    for(int i=0,gt = 0;gt<m;i++,gt++){
       scanf("%d",&x[i]);
       if(i != 0 && x[i] == x[i-1]) x[i-1] = x[i]+1, i--;
       else x[++i] = x[i-1]+1;        
       tmp[0] = i;
    }
    m = tmp[0]+1;
    for(int i=0;i<l;i++) scanf("%d",&p[i]);
    for(int i=0;i<m;i++){
       fq = lq = 0; 
       for(int j=1;j<=n+1;j++) tag[j] = LIM;
       tag[x[i]] = 0;
       q[lq++] = x[i];
       while(fq<lq){
          for(int j=0;j<l;j++){
              if(q[fq] + p[j] <= n+1 && tag[q[fq]] + 1 < tag[q[fq]+p[j]])
                  q[lq++] = q[fq]+p[j], tag[q[fq]+p[j]] = tag[q[fq]] + 1;
              if(q[fq] - p[j] > 0 && tag[q[fq]] + 1 < tag[q[fq]-p[j]])
                  q[lq++] = q[fq]-p[j], tag[q[fq]-p[j]] = tag[q[fq]] + 1;
          }
          fq++;
       }   
       for(int j=0;j<m;j++)
          a[i][j] = tag[x[j]];  
    }
    for(int i=0;i<(1<<m);i++) dp[i] = LIM;
    dp[0] = 0;
    for(int i=0;i<m;i++)
       for(int j=(1<<i);j<(1<<(i+1));j++)
           for(int k=i-1;k>=0;k--)
               if( (1<<k)&j )
                   dp[j] = min(dp[j],dp[j-(1<<i)-(1<<k)] + a[i][k]);
    if(dp[(1<<m)-1] == LIM) printf("-1\n");
    else printf("%d\n",dp[(1<<m)-1]);
    //system("pause");
    return 0;
}
