#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
#define MAXN 505
#define INF 1000000000
char str[MAXN];
int len,K;
int cnt[MAXN][MAXN];
int dp[MAXN][MAXN];
int chs[MAXN][MAXN];
int dfs(int len,int k){
  int i;
  if(dp[len][k]!=-1) return dp[len][k];
  if(len==0) return dp[len][k]=0;
  if(k==0) return dp[len][k]=INF;
  for(i=1,dp[len][k]=INF;i<=len;i++){
    int res=cnt[len-i][len-1]+dfs(len-i,k-1);
    if(dp[len][k]>res){
      dp[len][k]=res;
      chs[len][k]=i;
    }
  }
  return dp[len][k];
}
void show(int len,int k){
  int i,pre=len-chs[len][k];
  if(pre) show(pre,k-1);
  for(i=pre;i<len;i++)
    printf("%c",min(str[i],str[2*len-chs[len][k]-i-1]));
  if(k!=K) printf("+");
}
int main(){
  int i,j,k;
  scanf("%s%d",str,&K);
  len=strlen(str);
  memset(cnt,0,sizeof(cnt));
  for(i=0;i<len;i++)
    for(j=i;j<len;j++)
      for(k=i;k<=i+(j-i)/2;k++)
        cnt[i][j]+=(str[k]!=str[i+j-k]);
  memset(dp,-1,sizeof(dp));
  int res=dfs(len,K);
  printf("%d\n",res);
  show(len,K);
  return 0;
}
