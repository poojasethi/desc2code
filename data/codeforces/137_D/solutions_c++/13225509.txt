#include <bits/stdc++.h>
using namespace std;

#define MAXN 200005
#define ll long long
#define MOD 1000000007

string cad;
int k;
int cant[511][511];
int dp[511][511];
int sol[511][511];
int cantidad(int a,int b){
	if(a>=b) return 0;
	if(cant[a][b]!=-1) return cant[a][b];
	return cant[a][b]=cantidad(a+1,b-1)+ (cad[a] != cad[b]);
}

int solver(int pos,int k){
	if(k<0){
		return 1000;
	}
	if(pos==cad.length()) return 0;
	if(dp[pos][k]!=-1) return dp[pos][k];
	int ret=1000;
	for(int i=pos;i<cad.length();i++){
		int temp=cantidad(pos,i)+solver(i+1,k-1);
		if(temp<ret){
			sol[pos][k]=i;
			ret=temp;
		}
	}
	return dp[pos][k]=ret;
}


void imprimir(int aa,int bb){
	int a=aa;
	int b=bb;
	while(a<b){
		if(cad[a]!=cad[b]){
			cad[a]=cad[b];
		}
		a++;
		b--;
	}
	for(int i=aa;i<=bb;i++){
		cout<<cad[i];
	}
}
int main(){
	cin>>cad;
	cin>>k;
	memset(cant,-1,sizeof cant);
	memset(dp,-1,sizeof dp);
	cout<<solver(0,k)<<endl;
	int pos=0;
	while(pos<cad.length()){
		if(pos!=0){
			cout<<"+";
		}
		imprimir(pos,sol[pos][k]);
		pos=sol[pos][k]+1;
		k--;
	}
	return 0;
}
