#include<algorithm>
#include<iostream>
#include<cstring>
#include<cstdio>
#include<string>
#include<vector>
#include<map>

#define st first
#define nd second
#define mp make_pair
#define lli long long int
#define FP( ii,aa,bb ) for( int ii=aa;ii<=bb;ii++ )
#define FM( ii,aa,bb ) for( int ii=aa;ii>=bb;ii-- )

using namespace std;

int  n,len,dpf[505][505],dp[505][505],dp2[505][505];
char s[505];

int f( int x,int y ){
	if( dpf[x][y]!=-1 ) return dpf[x][y];
	if( x>=y ) return 0;
	return dpf[x][y] = f(x+1,y-1)+(s[x]!=s[y]);
}

int bul( int x,int k ){

	if( k<0 ) 		return 9999999;
	if( x==len+1 )	return 0;

	int &ret = dp[x][k];

	if( ret!=-1 ) return ret;

	ret = 9999999;
	int r;

	FP( i,x,len ){
		r = bul(i+1,k-1)+f(x,i);
		if( r<ret ){ ret = r; dp2[x][k] = i; }
	}

	return ret;

}

void yaz( int x,int y ){

	FP( i,x,y ) s[y-i+x] = s[i];
	FP( i,x,y ) cout << s[i];
}

int main(){

	cin >> s+1 >> n;
	len = strlen( s+1 );

	memset( dp,-1,sizeof dp );
	memset( dpf,-1,sizeof dpf );

	cout << bul( 1,n ) << endl;

	int x=1,k=n;

	while( 1 ){
		yaz( x,dp2[x][k] );
		if( dp2[x][k]==len ) break;
		cout << "+";
		x = dp2[x][k]+1;
		k--;
	}
	cout << endl;

	
}
