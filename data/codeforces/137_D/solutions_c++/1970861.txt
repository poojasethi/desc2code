#include <cstdio>
#include <cstring>
#include <algorithm>
#include <cmath>
#include <iostream>
#include <string>

using namespace std;

#define maxn (505)

int v[maxn][maxn];
int f[maxn][maxn], p[maxn][maxn];
int n, m;
char s[maxn];
string out;

void print(int k, int j) {
	if (j <= 0) return ;
	if (j < n) out += "+";
	
	//printf("%d %d\n", k, j);
	
	int L = p[k][j], R = j - 1;
	for (int l = L, r = R; l < r; ++l, --r) 
		out += s[l];
	for (int i = (L + R) / 2; i >= L; --i)
		out += s[i];
		
	print(k - 1, L);
}

int main() {
	scanf("%s", s); n = strlen(s);
	scanf("%d", &m);
	
	for (int i = 0; i < n; ++i)
		for (int j = 0; j < n; ++j) 
			for (int l = i, r = j; l < r; ++l, --r)
				if (s[l] != s[r]) v[i][j]++;
	
	memset(f, -1, sizeof(f)); f[0][0] = 0;
	for (int i = 0; i < n; ++i) 
		for (int k = 0; k < m; ++k) if (f[k][i] != -1) 
			for (int j = i; j < n; ++j) 
				if (f[k + 1][j + 1] == -1 || f[k + 1][j + 1] > f[k][i] + v[i][j])
					f[k + 1][j + 1] = f[k][i] + v[i][j], p[k + 1][j + 1] = i;
					
	int ans = 1;
	for (int i = 2; i <= m; ++i)
		if (f[i][n] != -1 && f[i][n] < f[ans][n]) ans = i;
	
	cout << f[ans][n] << endl;
	out = ""; print(ans, n); reverse(out.begin(), out.end()); cout << out << endl;

	return 0;
}
 	 		 	  	 					 	  	 				