#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <set>
using namespace std;

typedef long long ll;
const int N=505;
int k,dp[N][N],pal[N][N];
string s;
int prec(int i,int j){
 int x=i,y=j;
 while(i<j){
    pal[x][y]+=(s[i]!=s[j]);
    i++;
    j--;
 }
}
int solve(int i,int k){
 if(i==s.length())
   return 0;
 if(dp[i][k]!=-1)
   return dp[i][k];
 int ret=pal[i][s.length()-1];
 if(k){
  for(int j=i;j<s.length();j++)
     ret=min(ret,pal[i][j]+solve(j+1,k-1));
 }
 return dp[i][k]=ret;
}
void etba3(int i,int j){
    int a=i;
    while(i<j)
        cout<<s[i++],j--;
    if(j!=i)
      i--;
    while(i>=a)
        cout<<s[i--];
}
void print(int i,int k,int sol){
 if(i==s.length())
    return;
 if(!k){
    if(i)cout<<'+';
    etba3(i,s.length()-1);
    return;
 }
 for(int j=i;j<s.length();j++){
    if(pal[i][j]+solve(j+1,k-1)==sol){
        if(i)cout<<'+';
        etba3(i,j);
        print(j+1,k-1,sol-pal[i][j]);
        break;
    }
 }
}
int main()
{
    cin>>s>>k;
    memset(dp,-1,sizeof(dp));
    for(int i=0;i<s.length();i++)
        for(int j=0;j<s.length();j++)
             prec(i,j);
    cout<<solve(0,k-1)<<endl;
    print(0,k-1,solve(0,k-1));
    return 0;
}
