#include <bits/stdc++.h>

using namespace std;

bool f[505][505];
int res[505][505];
int ans[505][505];
string ned[505][505];
int fr[505][505];
string s,q;

int solve(int l,int r)
 {
  if (l > r) return 0;
  if (l == r) { ned[l][r]=s[r]; return 0; }
  if (f[l][r]) return res[l][r];
  f[l][r]=1;
  solve(l+1,r);
  solve(l,r-1);
  solve(l+1,r-1);
  res[l][r]=solve(l+1,r-1)+(s[l] != s[r]);
  ned[l][r]+=s[l];
  ned[l][r]+=ned[l+1][r-1];
  ned[l][r]+=s[l];
 }

int i,j,k,n,l,bst;

int main()
 {
  cin>>s>>k;
  n=s.size(); s="#"+s;
  solve(1,n);

  for (i=0;i<=n;i++)
   for (j=0;j<=k;j++)
    ans[i][j]=100000000;

  ans[0][0]=0;
  for (i=1;i<=n;i++)
   for (j=1;j<=k;j++)
    for (l=0;l<i;l++)
     if (ans[i][j] > ans[l][j-1]+res[l+1][i])
      {
       ans[i][j]=ans[l][j-1]+res[l+1][i];
       fr[i][j]=l;
      }

  bst=1000000000;
  for (j=1;j<=k;j++)
   if (bst > ans[n][j])
    {
     bst=ans[n][j];
     i=j;
    }

  cout<<bst<<endl;
  j=n;
  while (i != 0)
   {
    q+=ned[fr[j][i]+1][j];
    if (fr[j][i] != 0) q+="+";
    j=fr[j][i];
    i--;
   }
  reverse(q.begin(),q.end());
  cout<<q<<endl;
 }
