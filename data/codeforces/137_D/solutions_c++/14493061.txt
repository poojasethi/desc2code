#include <bits/stdc++.h>
using namespace std;
char s[5050];
int dp[5050][5050],n,dp2[5050][5050];
int sol(int ind,int k){
	if(ind==n)return 0;
	if(k==0)return 1e9;
	int &ret= dp2[ind][k];
	if(ret!=0x3f3f3f3f)return ret;
	int i;
	for(i=ind+1;i<=n;++i)
		ret = min(dp[ind][i-1]+sol(i,k-1),ret);
	return ret;
}
int main(){
	scanf("%s",s);int k;cin>>k;
	n = strlen(s);int i,j,d;
	for(d=2;d<=n;++d)
		for(i=0;i+d<=n;++i){
			j = i+d-1;
			int ret= d==2 ? 0 : dp[i+1][j-1];
			if(s[i]!=s[j])
				++ret;
			dp[i][j]=ret;
		}
	memset(dp2,0x3f,sizeof(dp2));
	int ret= sol(0,k),ind=0,l,r,st,e;
	cout<<ret<<endl;
	/*while(true){
		l=ind,r= parent[ind],ind=r+1;
		st=l;
		while(l<=r){
			if(s[l]!=s[r])s[r]=s[l];
			++l,--r;
		}
		while(st<ind)
			putchar(s[st++]);
		if(ind==n)break;
		putchar('+');
	}*/	
	
	while(true){
		st=l=ind;
		for(i=ind+1;i<=n;++i)
			if( (sol(i,k-1)+dp[l][i-1] )== ret){
				ret-= dp[l][i-1];--k;r=i-1,ind =i;
				break;
			}
		assert(l<=r);
		while(l<=r){
			if(s[l]!=s[r])
				s[r]=s[l];
			++l,--r;
		}
		while(st<ind)
			putchar(s[st++]);
		if(ind==n)break;
		putchar('+');
	}
	putchar('\n');
}
