#include <bits/stdc++.h>
using namespace std;
set<int> st[2];
vector<int> ANS;
int ans, nowi, type;
int n, cntl, cntr;
char s[100005];
int main()
{
	scanf("%s", s);
	n = strlen(s);
	for (int i = 0; i < n; i++) s[i] == 'L'? cntl++ : cntr++;
	if (cntl < cntr || (cntl == cntr && s[0] == 'R'))
	{
		for (int i = 0; i < n; i++) s[i] = s[i] == 'L'? 'R' : 'L';
		swap(cntl, cntr);
	}
	for (int i = 0; i < n; i++) s[i] == 'L'? st[0].insert(i) : st[1].insert(i);
	set<int>::iterator mjy = st[0].begin();
	nowi = *mjy;
	st[0].erase(nowi);
	for (int i = 1; i < n; i++)
	{
		ANS.push_back(nowi);
		mjy = st[type ^ 1].lower_bound(nowi);
		if (mjy == st[type ^ 1].end()) {ans++; nowi = *st[type ^ 1].begin(); st[type ^ 1].erase(nowi); type ^= 1; continue;}
		else
		{
			if (st[type].lower_bound(*mjy) == st[type].end())
			{
				int xjy = min(st[0].begin() == st[0].end()? 0x7f7f7f7f : *st[0].begin(), 
							  st[1].begin() == st[1].end()? 0x7f7f7f7f : *st[1].begin());
				if (xjy < nowi && s[xjy] != s[nowi]) {ans++; nowi = xjy; st[type ^ 1].erase(nowi); type ^= 1; continue;}
			}
			nowi = *mjy, st[type ^ 1].erase(mjy), type ^= 1;
		}
	}
	ANS.push_back(nowi);
	printf("%d\n", ans);
	for (int i = 0; i < n; i++) printf("%d ", ANS[i] + 1);
	puts("");
	return 0;
}

                                                       