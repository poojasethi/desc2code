#include<bits/stdc++.h>
#define pb push_back

using namespace std;
const int N = 100000 + 5;
char st[N];
vector <int> sta[2][2], d[N];
int ans, n, q, now;

int main(){
	scanf("%s", st);
	n = strlen(st);
	int k = 0, p = 0, m = 0, snow = 0;
	for (int i = 0; i < n; i++){
		int p = (st[i] == 'R'), t = 1;
		for (int q = p, k = 1; k <= 2; q ^= 1, k++)
			if (sta[q][p ^ 1].size() > 0){
				int now = sta[q][p ^ 1][sta[q][p ^ 1].size() - 1];
				sta[q][p].pb(now);
				sta[q][p ^ 1].pop_back();
				d[now].pb(i + 1);
				t = 0; break;
			}
		if (t) d[++m].pb(i + 1), sta[p][p].pb(m);
		if (p) snow++; else snow--;
	}
	printf("%d\n", m - 1);
	if (abs(snow) > 1) {printf("CRASH"); return 0;}
	if (snow == 0) snow = st[0] == 'R'; else
	if (snow == -1) snow = 0;
	p = snow;
	while (1){
		if (p) q = (sta[p][0].size() == 0);
		else q = (sta[p][1].size() > 0);
		int i = sta[p][q][sta[p][q].size() - 1];
		for (int j = 0; j < d[i].size(); j++){
			printf("%d", d[i][j]); ans++;
			if (ans == n) {puts(""); exit(0);}
			else putchar(' ');
		}
		sta[p][q].pop_back();
		p = q ^ 1;
	}
}

