#include <iostream>
#include <cmath>
#include <string>
#include <cstdlib>
#include <queue>
#include <vector>

using namespace std;

const int limite=1000000;

void escribe(string s,int v[limite],int n)
{
  cout<<s<<":";
  for (int i=0;i<=n;i++)
    cout<<v[i]<<",";
  cout<<endl;
}

int n;
int v[limite];
int next[limite];
vector<int> sol;
int atras=-1;
int num[2];
int numini[2],numinibis[2];
vector<int> listaini[2];
vector<int> listainifin[2][2];
int cuantosinifin[2][2];
queue<int> q[2];

void genera(int ladoini)
{
  int ladofin=1-ladoini;
  if (num[ladoini]!=num[ladofin]) ladofin=ladoini;
  int lado=ladoini;
  for (;;) {
    int pos;
    if (int(listainifin[lado][1-ladofin].size())) {
      pos=listainifin[lado][1-ladofin].back();
      listainifin[lado][1-ladofin].pop_back();
    } else if (int(listainifin[lado][ladofin].size())) {
      pos=listainifin[lado][ladofin].back();
      listainifin[lado][ladofin].pop_back();
    } else break;
    atras++;
    sol.push_back(pos);
    lado=1-lado;
    while (next[pos]) {
      pos=next[pos];
      sol.push_back(pos);
      lado=1-lado;
    }
  }
}

int main()
{
  ios::sync_with_stdio(false);
  n=0;
  {
    char c;
    while (cin>>c) {
      n++;
      int lado=c=='R';
      v[n]=lado;
      num[lado]++;
      numini[lado]=max(numini[lado],num[lado]-num[1-lado]);
    }
  }
  for (int i=1;i<=n;i++) {
    int lado=v[i];
    if (numinibis[lado]<numini[lado]) {
      listaini[lado].push_back(i);
      numinibis[lado]++;
    } else q[lado].push(i);
  }
  for (int i=1;i<=n;i++) {
    int lado=v[i];
    if (int(q[1-lado].size())) {
      next[i]=q[1-lado].front();
      q[1-lado].pop();
    }
  }
  for (int ladoini=0;ladoini<2;ladoini++) {
    vector<int> &lis=listaini[ladoini];
    for (int i=0;i<int(lis.size());i++) {
      int pos=lis[i];
      while (next[pos]) pos=next[pos];
      cuantosinifin[ladoini][v[pos]]++;
    }
  }
  if (cuantosinifin[0][1] and cuantosinifin[1][0] and
      cuantosinifin[0][0]==0 and cuantosinifin[1][1]==0) {
    for (int i=n-1;;i--) {
      if (next[i]==n) {
	next[i]=0;
	break;
      }
    }
    for (int i=n-1;;i--) {
      if (next[i]==0 and v[i]!=v[n]) {
	next[i]=n;
	break;
      }
    }
  }
  for (int ladoini=0;ladoini<2;ladoini++) {
    vector<int> &lis=listaini[ladoini];
    for (int i=0;i<int(lis.size());i++) {
      int pos=lis[i];
      while (next[pos]) pos=next[pos];
      listainifin[ladoini][v[pos]].push_back(lis[i]);
    }
  }
  if (num[0]>=num[1] and numini[0]>0) genera(0);
  else genera(1);
  cout<<atras<<endl;
  for (int i=0;i<int(sol.size());i++) {
    if (i>0) cout<<" ";
    cout<<sol[i];
  }
  cout<<endl;
}
