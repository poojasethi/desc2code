def solve(prog):
    cnt = [0 for i in range(10)]
    pos, direct = 0, 1
    digits = '0123456789'
    while True:
        if pos < 0 or pos >= len(prog):
            break
        if prog[pos] in digits:
            cnt[int(prog[pos])] += 1
            pos += direct
            if prog[pos - direct] == '0':
                prog = prog[:pos - direct] + prog[pos - direct + 1:]
                if direct == 1:
                    pos -= 1
            else:
                prog[pos - direct] = str(int(prog[pos - direct]) - 1)
        else:
            direct = 1 if prog[pos] == '>' else -1
            pos += direct
            if pos >= 0 and pos < len(prog) and prog[pos] in ['<', '>']:
                prog = prog[:pos - direct] + prog[pos - direct + 1:]
                if direct == 1:
                    pos -= 1
    return cnt

n, q = map(int, raw_input().split())
program = [c for c in raw_input()]
for _ in range(q):
    low, high = map(int, raw_input().split())
    print ' '.join(map(str, solve(program[low - 1:high])))
