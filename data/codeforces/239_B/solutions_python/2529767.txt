[n, q] = map(int, raw_input().split())
originalTape = raw_input()



def solve(tape):
  direction = 1
  position = 0
  buckets = [0] * 10 
  n = len(tape)
  last = -1
  while (0 <= position < n):
    # print ''.join(tape), ('\n'+position*' '+'^'), '\n'
    if tape[position] in '0123456789':
      buckets[int(tape[position])] += 1
      tape[position] = str(int(tape[position]) - 1)
      if tape[position] == '-1':
        tape[position] = 'x'
      position += direction
      last = -1
    elif tape[position] in '<>':
      if tape[position] == '<':
        direction = -1
      else:
        direction = 1
      if last > -1:
        tape[last] = 'x'
      last = position
      position += direction
    else:
      position += direction

  return buckets

def solve_(start, end, tape):
  smallTape = tape[start:end+1]
  return solve(list(smallTape))

queries = []
for qi in xrange(q):
  (start, end) = map(int, raw_input().split())
  queries.append((start - 1, end - 1))

for qi in queries:
  print ' '.join(map(str, solve_(qi[0], qi[1], originalTape)))


