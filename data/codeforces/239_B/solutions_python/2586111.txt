#!/usr/bin/env python 
# -*- coding: utf-8 -*- 

def lang (program):
  ans = [0,0,0,0,0,0,0,0,0,0]
  ip  = {'cp':0, 'dp':'>'}

  while 0 <= ip['cp'] < len(program):
    flag = 0

    if ('0' <= program[ip['cp']]) & (program[ip['cp']] <= '9'):
      i = int(program[ip['cp']])
      ans[i] += 1

      if i == 0:
        del program[ip['cp']]
        flag = 1
      else: program[ip['cp']] = str(i-1)
        
    elif (program[ip['cp']] == '>') | (program[ip['cp']] == '<'):
      ip['dp'] = program[ip['cp']]

      shift = ip['cp'] + ((1) if (ip['dp'] == '>') else (-1))
      if ( 0 > shift ) | ( shift >= len(program) ): break

      if (program[shift] == '>') | (program[shift] == '<'):
        if (ip['dp'] == '>'): flag = 1
        del program[ip['cp']]
    
    if   ip['dp'] == '>': 
      if not flag: ip['cp'] += 1
    elif ip['dp'] == '<':
      ip['cp'] -= 1

    # print ' '.join(program) # debug it
  return ans

def simple_strip_programming ():
  # head
  # print "\n\t��������� ������� ��������� ����������������".decode('cp1251')

  # first string
  n,_,q = raw_input().partition(' ')
  n = int (n); q = int (q)
  # checking input data
  if (n <  1) or (q > 100): return -1 # error!

  # second string
  program = list ( raw_input () )
  # checking input data
  if ( len(program) != n ): return -1 # error!

  l_ = [0 for i in range (0,q)]
  r_ = [0 for i in range (0,q)]
  ans= [0 for i in range (0,q)]
  # third,..,(q+2)-th string
  for i in range (0,q):
    l,_,r  = raw_input().partition(' ')
    l_[i]  = int (l)-1
    r_[i]  = int (r)
    # checking input data
    if (r_[i] < l_[i]) or ((l_[i] < 0) | (l_[i] >= n)) or ((r_[i] > n) | (r_[i] < 0)): return -1 # error!

  for i in range (0,q):
    par    = program[l_[i]:r_[i]]
    ans[i] = lang (par)
    # ans[i-1] ~ [0,x,y,0,0,0,0,0,z,0]

  # output answer
  for i in range (0,q):
    ans[i] = map(str,ans[i])
    print ' '.join(ans[i])

  return

simple_strip_programming  ()