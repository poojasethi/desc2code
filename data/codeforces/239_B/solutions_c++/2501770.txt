#include <iostream>
#include <cstring>
#include <string>

using namespace std;

const int MaxN=103;

int n,q;
string s;

void solve(string s)
{
	int cp=0, dp=1;
	
	bool f[MaxN];
	int ans[MaxN];
	memset(ans,0,sizeof ans);
	memset(f,0,sizeof f);
	
	while(cp>=0 && cp<(int)s.size())
	{
		if(s[cp]>='0' && s[cp]<='9')
		{
			ans[(int)s[cp]-'0']++;
			
			if(s[cp]=='0')
				f[cp]=1;
			else
				s[cp]--;
			
			cp+=dp;
			while(f[cp])
				cp+=dp;
		}
		
		if(s[cp]=='<' || s[cp]=='>')
		{
			if(s[cp]=='<')
				dp=-1;
			else
				dp=1;
			
			int bef=cp;
			
			cp+=dp;
			while(f[cp])
				cp+=dp;
			
			if(s[cp]=='<' || s[cp]=='>')
				f[bef]=1;
		}
	}
	
	for(int i=0;i<10;++i)
		cout<<ans[i]<<" ";
	cout<<endl;
}			

int main()
{
	ios::sync_with_stdio(false);
	
	cin>>n>>q>>s;
	
	for(int i=0;i<q;++i)
	{
		int r,l;
		cin>>r>>l;
		--r;--l;
		solve(s.substr(r,l-r+1));
	}
	
	return 0;
}
