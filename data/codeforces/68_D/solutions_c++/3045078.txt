#include <iostream>
#include <cstdio>
#include <cstring>
#include <map>
using namespace std;
int n,q;
map<int,int> sum,cost;
void iadd(int ind,int valu)
{
	cost[ind]+=valu;
	while(ind)
	{
		sum[ind]+=valu;
		ind/=2;
	}
}
double dfs(int ind,int H,double big)
{
	if(H==n)
	{
		if(cost.find(ind)==cost.end()) return big;
		else return max(big,(double)cost[ind]);
	}
	else
	{
		double cur=cost[ind],L=sum[ind*2],R=sum[ind*2+1];
		double ansL=max(big,cur+R),ansR=max(big,cur+L);
		if(L>ansL) ansL=dfs(ind*2,H+1,ansL);
		if(R>ansR) ansR=dfs(ind*2+1,H+1,ansR);
		return (ansL+ansR)/2;
	}
}
int main()
{
	while(scanf("%d%d",&n,&q)!=EOF)
	{
		sum.clear(); cost.clear();
		char str[10]; int a,b;
		while(q--)
		{
			scanf("%s",str);
			if(str[0]=='a')
			{
				scanf("%d%d",&a,&b);
				iadd(a,b);
			}
			else
			{
				printf("%.4lf\n",dfs(1,0,0.0));
			}
		}
	}
	return 0;
}

					   	  					 		 	 		  	