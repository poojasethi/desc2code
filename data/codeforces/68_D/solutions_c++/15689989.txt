#include<stdio.h>
#include<map>
using namespace std;
map<int,int>a,sum;char opt[10];
int h,Q,x,y;double ans;
void DFS(int x,int d,int last){
  if (d>h) {
    if (a.find(x)!=a.end())
      last=max(last,a[x]);
    --d;ans+=last*1./(1<<d);
    return;
  }int L=0,R=0;
  if (sum.find(x<<1)!=sum.end()) L=sum[x<<1];
  if (sum.find(x<<1|1)!=sum.end()) R=sum[x<<1|1];
  int now=max(L,R),rest=min(L,R);
  if (a.find(x)!=a.end()) now+=a[x],rest+=a[x];
  now=max(now,last);
  ans+=now*1./(1<<d);
  DFS(L<R?x<<1|1:x<<1,d+1,max(last,rest));
}
int main(){
  scanf("%d%d",&h,&Q);
  while (Q--){
    scanf("%s",opt);
    if (opt[0]=='a')
      for (scanf("%d%d",&x,&y),a[x]+=y;x;x>>=1) sum[x]+=y;
    else ans=0,DFS(1,1,0),printf("%.8f\n",ans);
  }
}