#include <iostream>
#include <stdio.h>
#include <string.h>
#include <algorithm>
#include <map>
using namespace std;

map<int, double> s;
int h,q;
void add(int p,double x){
	while(p)
		s[p]+=x,p>>=1;
}

__inline double sget(int pos){

	/*map<int, double>::iterator it=s.find(pos);
	if(it!=s.end()) return it->second;
	else return 0;*/
	return s[pos];
}

double dfs(int x,int dep=0,double best=0.0){
	double r=0.0;


	double root=sget(x);
	if(root<=best) return best;
	if(dep==h) return sget(x);
	double left=sget(x<<1);
	double right=sget(x<<1|1);
	r+=max(root-left,dfs(x<<1,dep+1,max(best,root-left)));
	r+=max(root-right,dfs(x<<1|1,dep+1,max(best,root-right)));
	r/=2.0;
	return r;
}

int main(){
	scanf("%d%d",&h,&q);
	for(int i=0;i<q;i++){
		char cmd[11];
		int x,y;
		scanf("%s",cmd);
		if(cmd[0]=='a') scanf("%d%d",&x,&y),add(x,y);
		else printf("%.8lf\n",dfs(1));
	}
	return 0;
}

 		     	   	   		 	 			