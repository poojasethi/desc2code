#include<iostream>
#include<map>
using namespace std;
typedef map<int,int> mii;

mii d,v;
int h,q,n,e;
string com;

inline void madd(mii &m, int n, int e) {
    mii::iterator p=m.find(n);
    if (p!=m.end()) (*p).second+=e;
    else m.insert(p,make_pair(n,e));
}

inline int mdef(mii &m, int n) {
    mii::iterator p=m.find(n);
    if (p==m.end()) return 0;
    return (*p).second;
}

inline int max(int a, int b) { return a>b?a:b; }

double dec(int n, int m) {
    if (mdef(v,n)<=m) return m;
    int e=mdef(d,n),l=2*n,r=2*n+1;
    return (dec(r,max(m,mdef(v,l)+e))+dec(l,max(m,mdef(v,r)+e)))*.5;   
}

int main() {
    cin >> h >> q;
    cout.precision(5);
    while (q--) {
        cin >> com;
        if (com=="decay") {            
            cout << dec(1,0) << endl;
        } else {
            cin >> n >> e;
            madd(d,n,e);
            for (;n;n>>=1) madd(v,n,e);
        }    
    }
}
