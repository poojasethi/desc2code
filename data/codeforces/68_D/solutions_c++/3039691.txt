#include <cstdio>
#include <map>
#include <cstring>
#include <algorithm>
#include <set>

using namespace std;

map<int,int> sum;
double f[32];
int h,q,u,e;
char s[10];

double dfs(int now,int high,int maxn)
{
    if(high==h)return max(maxn,sum[now])*f[h];
    int l=now<<1,x=sum[now]-sum[l];
    double ans;
    if(x<sum[l] && maxn<sum[l])ans=dfs(l,high+1,max(maxn,x));
    else ans=max(maxn,x)*f[high+1];
    l++;
    x=sum[now]-sum[l];
    if(x<sum[l] && maxn<sum[l])ans+=dfs(l,high+1,max(maxn,x));
    else ans+=max(maxn,x)*f[high+1];
    return ans;
}

int main()
{
    scanf("%d%d",&h,&q);
    f[0]=1.0;
    for(int i=1;i<=h;i++)
        f[i]=f[i-1]/2.0;
    while(q--)
    {
        scanf("%s",s);
        if(s[0]=='a')
        {
            scanf("%d%d",&u,&e);
            while(u)
            {
                sum[u]+=e;
                u=u>>1;
            }
        }
        else
        {
            printf("%.10f\n",dfs(1,0,0));
        }
    }
    return 0;
}

  	 	  		   		 	 			 	  		