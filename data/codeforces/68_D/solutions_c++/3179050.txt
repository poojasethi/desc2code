#include <iostream>
#include <cstdio>
#include <cstring>
#include <string>
#include <algorithm>
#include <map>
using namespace std;

map<int,int> sub,pnt;
int h,q;
char ss[10];

double dfs( int i, int c, double res )
{
	if( c == h )
		return max( res, pnt[i]+0.0 );
	int ls = i << 1, rs = ls | 1;
	double ex_tol, ex_tor;
	ex_tol = max( res, pnt[i] + sub[rs] + 0.0 );
	ex_tor = max( res, pnt[i] + sub[ls] + 0.0 );
	if( sub[ls] > ex_tol )
		ex_tol = dfs( ls, c+1, ex_tol );
	if( sub[rs] > ex_tor )
		ex_tor = dfs( rs, c+1, ex_tor );
	return ( ex_tol + ex_tor ) / 2;
}

int main()
{
	int v,e;
	while( scanf("%d%d",&h,&q) == 2 )
	{
		sub.clear();
		pnt.clear();
		while( q-- ){
			scanf("%s",ss);
			if( ss[0] == 'a' )
			{
				scanf("%d%d",&v,&e);
				pnt[v] += e;
				while( v ){
					sub[v] += e;
					v >>= 1;
				}
			}
			else printf("%.8lf\n",dfs(1,0,0));
		}
	}
	return 0;
}
				 		  			 	   		 	 	 		