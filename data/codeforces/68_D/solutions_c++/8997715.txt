#include <cstdio>
#include <algorithm>
using namespace std;
typedef long long ll;
const int H=32,Q=(int)1e5+5;
int h,m,v,e;
struct node{
	node *son[2];
	ll sum;
} root[H*Q],*newnode=root+1;
ll calc(node *u,int h,ll best){
	if(!u||u->sum<=best)
		return best<<h;
	if(!h)
		return max(u->sum,best);
	return
	calc(u->son[0],h-1,max(best,u->sum-(u->son[0]?u->son[0]->sum:0)))+
	calc(u->son[1],h-1,max(best,u->sum-(u->son[1]?u->son[1]->sum:0)));
}
int main(){
	scanf("%d%d",&h,&m);
	while(m--){
		static char opt[10];
		scanf("%s",opt);
		if(opt[0]=='a'){
			scanf("%d%d",&v,&e);
			int toth=0;
			for(;v>>toth;toth++);
			toth--;
			node *u=root;
			u->sum+=e;
			for(int i=toth-1;i>=0;i--){
				if(!u->son[v>>i&1])
					u->son[v>>i&1]=newnode++;
				u=u->son[v>>i&1];
				u->sum+=e;
			}
		}
		else
			printf("%.8lf\n",calc(root,h,0)/double(1LL<<h));
	}
}