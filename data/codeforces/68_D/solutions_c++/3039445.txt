#include <iostream>
#include <algorithm>
#include <stdio.h>
#include <map>
#include <cmath>
#include <set>
#include <queue>
#include <vector>
#include <string.h>
#define eps 1e-8
#define sq(a) ((a)*(a))
#define maxn
#define clearAll(a) memset(a,0,sizeof(a))
#define oo 100000000
using namespace std;

typedef long long ll;

map<int,int> g;
int h,q;


double dfs(int x,int d,int maxx)
{
    if (maxx>=g[x])
        return maxx;

    if (d==h)
        return g[x];

    double tmp;
    tmp = dfs(x*2,d+1,max(maxx,g[x]-g[x*2]))+dfs(x*2+1,d+1,max(maxx,g[x]-g[x*2+1]));
    return tmp/2;
}

int main()
{
    char order[100];
    scanf("%d%d",&h,&q);
    g.clear();
    for (int i=1;i<=q;i++)
    {
        scanf("%s",order);
        if (strcmp(order,"add")==0)
        {   int x,e;
            scanf("%d%d",&x,&e);

            for (int i=x;i!=0;i/=2)
                g[i]+=e;
        }  else
        {
            printf("%.10f\n",dfs(1,0,0));
        }
    }
    return 0;
}









 			   	 	  	 	   	 	 		  	