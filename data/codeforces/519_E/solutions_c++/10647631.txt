#include<bits/stdc++.h>

using namespace std;

#define pb push_back

int m;
int dep[100005];
int ch[100005];
int lca[100005][20];
int x,y,i,j,n;
vector<int> v[100005];

int f(int x,int root,int lvl){	
	ch[x] = 1;
	dep[x] = lvl;
	lca[x][0] = root;
	for(int i=0 ; i<v[x].size() ; i++)
		if(v[x][i]!=root)
			ch[x] +=f(v[x][i],x,lvl+1);
		
	return ch[x];
}

int flca(int x,int y){

	if(dep[x] < dep[y])
		swap(x,y);
	
	int a=x,b=y,root;

	int t = dep[x]-dep[y],i;

	for(i=0 ; i<17 ; i++)
		if((t>>i)&1)
			x = lca[x][i];


	if(x!=y){

		for(i=17 ; i>=0 ; i--)
			if(lca[x][i] != lca[y][i]){
				x = lca[x][i];
				y = lca[y][i];
			}

		if(!t)
			return n - ch[x] - ch[y];
		root = lca[x][0];
	}
	else
		root = x;
		

	if(t%2)
		return 0;

	t = dep[a] - dep[root] - t/2 - 1;

	for(i=0 ; i<17 ; i++){
		if((t>>i)&1)
			a = lca[a][i];
	}

	return n-ch[a]-(n-ch[lca[a][0]]);
}

void init(){
	int i,j;
	for(i=1 ; i<18 ; i++)
		for(j=1 ; j<=n ; j++)
			lca[j][i] = lca[lca[j][i-1]][i-1];
}

int main(){
	cin >> n;

	for(i=1 ; i<n ; i++){
		cin >> x >> y;
		v[x].pb(y);
		v[y].pb(x);
	}

	f(1,0,1);

	init();

	cin >> m;

	ch[0] = n+1;

	for(i=1 ; i<=m ; i++){
		cin >> x >> y;

		int t = flca(x,y);

		if(x == y)
			t = n;

		cout << t << endl;
	}
}
