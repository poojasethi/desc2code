#include <algorithm>
#include <cstdio>
const int N=100005;
int f[N][20],to[N<<1],ne[N<<1],fi[N],num[N],dep[N],
	i,n,m,x,y,z,w,ans,tot=0;
void add(int x,int y)
{
	to[++tot]=y;ne[tot]=fi[x];fi[x]=tot;
}
void dfs(int x)
{
	num[x]=1;
	int i,j;
	for (i=f[x][j=0];f[i][j];i=f[i][j++]) f[x][j+1]=f[i][j];
	for (int i=fi[x];i;i=ne[i])
		if (to[i]!=f[x][0])
		{
			f[to[i]][0]=x;
			dep[to[i]]=dep[x]+1;
			dfs(to[i]);
			num[x]+=num[to[i]];
		}
}
int lca(int x,int y)
{
	for (int i=17;dep[x]>dep[y];x=f[x][i])
		for (;i && dep[f[x][i]]<dep[y];--i);
	for (int i=17;x!=y;x=f[x][i],y=f[y][i])
		for (;i && f[x][i]==f[y][i];--i);
	return x;
}
int find(int x,int y)
{
	for (int i=17;dep[x]>y;x=f[x][i])
		for (;i && dep[f[x][i]]<y;--i);
	return x;
}
int main()
{
//	freopen("ex.in","r",stdin);
	scanf("%d\n",&n);
	for (i=1;i<n;++i)
	{
		scanf("%d%d\n",&x,&y);
		add(x,y);add(y,x);
	}
	dfs(1);
	scanf("%d\n",&m);
	for (i=1;i<=m;++i)
	{
		scanf("%d%d\n",&x,&y);
		if (dep[x]<dep[y]) std::swap(x,y);
		z=lca(x,y);w=dep[x]+dep[y]-dep[z]*2;
		if (x==y) ans=n;
		else if (w&1) ans=0;
		else if (dep[x]==dep[y]) ans=n-num[find(x,dep[z]+1)]-num[find(y,dep[z]+1)];
		else ans=num[find(x,dep[x]-w/2)]-num[find(x,dep[x]-w/2+1)];
		printf("%d\n",ans);
	}
}
