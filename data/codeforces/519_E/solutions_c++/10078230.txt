#include<cstdio>
#include<algorithm>
#include<cstring>
using namespace std;
int i,j,k,n,m,x,y,p,k1,size[100001];
struct Node{int ed,before;}s[1000001];
int deep[100001],vis[100001],fox[100001];
int fa[100001][21];
void add(int x,int y) {s[++k1].ed=y; s[k1].before=fox[x]; fox[x]=k1; }
void get(int x) { int i;
  for (i=1;i<=20;i++) fa[x][i]=fa[fa[x][i-1]][i-1]; 
}
void dfs(int x)
{  get(x);
   vis[x]=1;
   int i;
   for (i=fox[x];i;i=s[i].before)
    if (!vis[s[i].ed]) fa[s[i].ed][0]=x,deep[s[i].ed]=deep[x]+1,dfs(s[i].ed),size[x]+=size[s[i].ed];
    size[x]++;
}
int getlca(int x,int y)
{  if (x==y) return y;
   int i,j,k;
   for (j=18,k=deep[x]-deep[y];j>=0;j--)
   if (k>=(1<<j)) { k-=(1<<j); x=fa[x][j]; }
   if (x==y) return y;
   for (i=18;i>=0;i--)
   if (fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];
   return fa[x][0];
}
int kth(int x,int y)
{  int i;
  for (i=18;i>=0;i--) 
  if (y>=(1<<i)) {y-=(1<<i); x=fa[x][i]; }
  return x;
}
int main()
{ scanf("%d",&n);
  for (i=1;i<n;i++) scanf("%d%d",&x,&y),
  add(x,y),add(y,x);
  dfs(1);
  scanf("%d",&m);
  for (i=1;i<=m;i++)
  { scanf("%d%d",&x,&y);
    if (deep[x]<deep[y]) swap(x,y);
     if (x==y) printf("%d\n",n);
     else { 
             int lca=getlca(x,y);
              if (deep[x]-deep[lca]==deep[y]-deep[lca]) printf("%d\n",n-size[kth(x,deep[x]-deep[lca]-1)]-size[kth(y,deep[y]-deep[lca]-1)]);
                else if ((deep[x]+deep[y]-2*deep[lca])&1) printf("0\n");
                else printf("%d\n",size[kth(x,(deep[x]+deep[y]-2*deep[lca])/2)]-size[kth(x,(deep[x]+deep[y]-2*deep[lca])/2-1)]);
          }
}
}
             