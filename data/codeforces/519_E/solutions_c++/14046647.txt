#include <cstdio>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <queue>
#include <stack>
#include <vector>
#define pb push_back
#define mp make_pair
#define fi first
#define se second
#define maxn 100005
using namespace std;
vector < int > d[maxn];
int size[maxn],pa[maxn][19],n,m,i,j,k,a,b,c,dep[maxn],l;
void dfs(int x,int p,int lv){
	 size[x]=1;
	 pa[x][0]=p;
	 dep[x]=lv;
	 int i;
	 for(i=0;i<d[x].size();i++)
	 if(d[x][i]!=p){
	 dfs(d[x][i],x,lv+1);
	 size[x]+=size[d[x][i]];
	 }
}
int lca(int x,int y){
	int i,j;
	int diff=dep[x]-dep[y];
	for(i=0;i<=18;i++)
	if(diff & (1<<i))
	x=pa[x][i];
	if(x==y)
	return x;
	for(i=18;i>=0;i--)
	if(pa[x][i]!=pa[y][i]){
	   x=pa[x][i];
	   y=pa[y][i];
    }
    return pa[x][0];
}
int ust(int x,int y){
	int i,j;
	for(i=0;i<=18;i++)
	if(y & (1<<i))
	x=pa[x][i];
	return x;
}
int main(){
	scanf("%d",&n);
	for(i=1;i<=n-1;i++){
		scanf("%d %d",&a,&b);
		d[a].pb(b);
		d[b].pb(a);
	}
	dfs(1,0,1);
	for(j=1;j<=18;j++)
	for(i=1;i<=n;i++)
	pa[i][j]=pa[pa[i][j-1]][j-1];
	scanf("%d",&m);
	for(i=1;i<=m;i++){
		scanf("%d %d",&a,&b);
		if(dep[a]<dep[b])
		swap(a,b);
		c=lca(a,b);
		if((dep[a]+dep[b]-2*dep[c])%2){
			printf("0\n");
			continue;
		}
		if(dep[a]==dep[b]){
		   k=ust(a,dep[a]-dep[c]-1);
		   l=ust(b,dep[b]-dep[c]-1);	
		   printf("%d\n",size[1]-size[k]-size[l]);
		   continue;
		}
		int ort=(dep[a]+dep[b]-2*dep[c])/2;
		k=ust(a,ort-1);
		printf("%d\n",size[pa[k][0]]-size[k]);
	}
	return 0;
}
