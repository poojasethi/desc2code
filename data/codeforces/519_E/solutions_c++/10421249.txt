#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<cstring>
using namespace std;
int n,s,t,m;
vector<int> G[100005];
int d[100005],cnt[100005],dp[100005][20];
void dfs(int u,int fa)
{
    d[u]=d[fa]+1;
    cnt[u]=1;
    dp[u][0]=fa;
    for(int i=1;i<20&&dp[u][i-1]!=0;i++) dp[u][i]=dp[dp[u][i-1]][i-1];
    for(int i=0;i<G[u].size();i++) if(G[u][i]!=fa)
    {
        dfs(G[u][i],u);
        cnt[u]+=cnt[G[u][i]];
    }
}
int lca(int a,int b)
{
    if(d[a]<d[b]) swap(a,b);
    for(int i=19;i>=0;i--) if(d[dp[a][i]]>=d[b]) a=dp[a][i];
    if(a==b) return a;
    for(int i=19;i>=0;i--) if(dp[a][i]!=dp[b][i]) {a=dp[a][i];b=dp[b][i];}
    return dp[a][0];
}
main()
{
    scanf("%d",&n);
    for(int i=1;i<n;i++)
    {
        scanf("%d%d",&s,&t);
        G[s].push_back(t);
        G[t].push_back(s);
    }
    dfs(1,0);
    scanf("%d",&m);
    for(int i=1;i<=m;i++)
    {
        scanf("%d%d",&s,&t);
        if(s==t) {printf("%d\n",n);continue;}
        int r=lca(s,t);
        if(d[s]<d[t]) swap(s,t);
        int dis=d[s]+d[t]-2*d[r];
        if(dis%2==1) {printf("0\n");continue;}
        if(d[s]==d[t])
        {
            int d1=d[s]-d[r]-1,d2=d[t]-d[r]-1;
            for(int j=0;j<20;j++) if(d1&(1<<j)) s=dp[s][j];
            for(int j=0;j<20;j++) if(d2&(1<<j)) t=dp[t][j];
            printf("%d\n",n-cnt[s]-cnt[t]);
        }
        else
        {
            int d1=dis/2-1;
            for(int j=0;j<20;j++) if(d1&(1<<j)) s=dp[s][j];
            printf("%d\n",cnt[dp[s][0]]-cnt[s]);
        }
    }
}
