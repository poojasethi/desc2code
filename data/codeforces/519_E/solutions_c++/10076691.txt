#include<cstdio>
#include<algorithm>
#include<cstring>
#define rep(i,x,y) for(int i=x;i<=y;++i)
#define dep(i,x,y) for(int i=x;i>=y;--i)
using namespace std;
#define LL long long
#define LD double
#define N 100005

int n,sn[N],nx[N<<1],ed[N<<1],f[N][20],x,y,d[N],m,sz[N];

void dfs(int x,int fa){
	sz[x]=1;
	f[x][0]=fa;
	rep(i,1,19) f[x][i]=f[f[x][i-1]][i-1];
	for(int j=sn[x];j;j=nx[j]) if(ed[j]^fa){
		d[ed[j]]=d[x]+1;
		dfs(ed[j],x);
		sz[x]+=sz[ed[j]];
	}
}

int glca(int x,int y){
	if(d[x]^d[y]){
		if(d[y]>d[x]) swap(x,y);
		dep(i,19,0) if(d[f[x][i]]>d[y]) x=f[x][i];
		x=f[x][0];
	}
	if(x==y) return x;
	dep(i,19,0) if(f[x][i]^f[y][i]) x=f[x][i],y=f[y][i];
	return f[x][0];
}

int main(){
	scanf("%d",&n);
	rep(i,1,n-1){
		scanf("%d%d",&x,&y);
		nx[i]=sn[x],sn[x]=i,ed[i]=y;
		nx[i+n]=sn[y],sn[y]=i+n,ed[i+n]=x;
	}
	d[1]=1;
	dfs(1,0);
	scanf("%d",&m);
	while(m--){
		scanf("%d%d",&x,&y);
		int lca=glca(x,y);
		int de=d[x]+d[y]-2*d[lca];
		if(de&1){
			puts("0");
			continue;
		}
		if(x==y){
			printf("%d\n",n);
			continue;
		}
		de>>=1;
		if(d[y]>d[x]) swap(x,y);
		int p=d[x]-de;
		int xx=x;
		dep(i,19,0) if(d[f[x][i]]>p) x=f[x][i];
		x=f[x][0];
		if(d[xx]!=p+1){dep(i,19,0) if(d[f[xx][i]]>p+1) xx=f[xx][i];xx=f[xx][0];}
		if(x==lca){
			if(d[y]!=p+1){dep(i,19,0) if(d[f[y][i]]>p+1) y=f[y][i];y=f[y][0];}
			printf("%d\n",n-sz[xx]-sz[y]);
		}else{
			printf("%d\n",sz[x]-sz[xx]);
		}
	}
}
