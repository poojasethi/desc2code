#include<cstdio>
#include<cstdlib>
#include<algorithm>
using namespace std;
#define N 100100

int tot=0,ans,to[N+N],next[N+N],s[N],size[N],dep[N],n,m,fa[N][40];

inline void add(int x,int y)
{
	to[++tot]=y; next[tot]=s[x]; s[x]=tot;
	to[++tot]=x; next[tot]=s[y]; s[y]=tot;
}
void dfs(int x)
{
	size[x]=1;
	for(int e=s[x];e;e=next[e])
	if(to[e]!=fa[x][0])
	{
		fa[to[e]][0]=x;
		dep[to[e]]=dep[x]+1;
		dfs(to[e]);
		size[x]+=size[to[e]];
	}
}
inline int find(int x,int y)
{
	for(int i=0;i<=30;i++)if((1<<i)&y)x=fa[x][i]; return x;
}
int main()
{
	scanf("%d",&n);
	for(int i=1,u,v;i<n;i++)
	{
		scanf("%d%d",&u,&v); add(u,v);
	}
	dep[1]=fa[1][0]=0; dfs(1);
	
	for(int i=1;i<=30;i++)
		for(int j=1;j<=n;j++) fa[j][i]=fa[fa[j][i-1]][i-1];
		
	scanf("%d",&m);
	for(int x,y,p1,p2,num,t1,t2;m--;)
	{
		scanf("%d%d",&x,&y);
		p1=x; p2=y; num=30;
		if(dep[p2]>dep[p1])swap(p1,p2);
		p1=find(p1,dep[p1]-dep[p2]);
		
		while(num>=0 && p1!=p2)
		{
			for(;num>=0;num--) if(fa[p1][num]!=fa[p2][num])break;
			if(num<0)break; p1=fa[p1][num]; p2=fa[p2][num--];
		}
		if(p1!=p2)p1=fa[p1][0];
		t1=dep[x]-dep[p1]; t2=dep[y]-dep[p1];
		
		if((t1+t2)&1)ans=0;
		else if(t1>t2)ans=size[find(x,(t1+t2)/2)]-size[find(x,(t1+t2)/2-1)];
		else if(t1<t2)ans=size[find(y,(t1+t2)/2)]-size[find(y,(t1+t2)/2-1)];
		else ans=size[1]-size[find(x,(t1+t2)/2-1)]-size[find(y,(t1+t2)/2-1)];
		printf("%d\n",ans);
	}
	return 0;
}
