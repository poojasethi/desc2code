#include <bits/stdc++.h>
using namespace std;
#define fo(i,a,b) for (int i = (a); i < (b); i++)
#define N 123456

int n, m, a, b, c, anc[20][N], dep[N], sz[N];
vector<int> al[N];
void dfs(int at, int fr) {
	sz[at] = 1; anc[0][at] = fr;
	fo(i,0,al[at].size()) {
		int go = al[at][i];
		if (go==fr) continue;
		dep[go] = dep[at]+1;
		dfs(go, at);
		sz[at] += sz[go];
	}
}
int to(int at, int dto) {
	for (int i = 19; i >= 0; i--) if (dep[anc[i][at]] >= dto) at = anc[i][at];
	return at;
}
int lca(int a, int b) {
	if (dep[a] > dep[b]) swap(a, b);
	b = to(b, dep[a]);
	for (int i = 19; i >= 0; i--) if (anc[i][a] != anc[i][b]) a = anc[i][a], b = anc[i][b];
	return a==b ? a : anc[0][a];
}
int main() {
	scanf("%d", &n);
	fo(i,0,n-1) {
		scanf("%d %d", &a, &b); a--; b--;
		al[a].push_back(b);
		al[b].push_back(a);
	}
	dfs(0, 0);
	fo(i,1,20) fo(j,0,n) anc[i][j] = anc[i-1][anc[i-1][j]];
	scanf("%d", &m);
	fo(i,0,m) {
		scanf("%d %d", &a, &b); a--; b--;
		if (a==b) {
			printf("%d\n", n); continue;
		}
		c = lca(a, b);
		int dst = dep[a] + dep[b] - 2*dep[c];
		if (dst%2) {
			puts("0"); continue;
		}
		if (dep[a] == dep[b]) {
			int d = to(a, dep[c]+1), e = to(b, dep[c]+1);
			printf("%d\n", n - sz[d] - sz[e]); continue;
		}
		if (dep[a] < dep[b]) swap(a, b);
		int d = to(a, dep[a] - dst/2), e = to(a, dep[a] - dst/2 + 1);
		printf("%d\n", sz[d] - sz[e]);
	}

	return 0;
}