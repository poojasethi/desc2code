
#include <cstdio>

struct Edge{int v;Edge *x;}*p,*l[100009],E[200009];
int n,m,x,y,anc,mid,len,sum;
int c[100009],d[100009],f[100009][19];

void swap(int &a,int &b)
{
	int c=a;
	a=b;
	b=c;
}
void add(int u,int v)
{
	p->v=v;
	p->x=l[u];
	l[u]=p;
	++p;
}
int dfs(int father,int u,int depth)
{
	d[u]=depth;
	f[u][0]=father;
	for (Edge *p=l[u];p;p=p->x) if (p->v!=father) c[u]+=dfs(u,p->v,depth+1);
	return ++c[u];
}
int lca(int u,int v)
{
	if (d[u]>d[v]) swap(u,v);
	for (int k=0;k<18;++k) if ((d[v]-d[u])>>k&1) v=f[v][k];
	if (u==v) return u;
	for (int k=17;k>=0;--k) if (f[u][k]!=f[v][k])
	{
		u=f[u][k];
		v=f[v][k];
	}
	return f[u][0];
}
int ups(int u,int d)
{
	for (int k=0;k<18;++k) if (d>>k&1) u=f[u][k];
	return u;
}
int main()
{
	p=E;
	scanf("%d",&n);
	for (int i=1;i<n;++i)
	{
		scanf("%d%d",&x,&y);
		add(x,y);
		add(y,x);
	}
	dfs(0,1,0);
	for (int j=1;j<18;++j)
	{
		for (int i=1;i<=n;++i) f[i][j]=f[f[i][j-1]][j-1];
	}
	scanf("%d",&m);
	while (m--)
	{
		scanf("%d%d",&x,&y);
		if (x==y)
		{
			printf("%d\n",n);
			continue;
		}
		if (d[x]>d[y]) swap(x,y);
		anc=lca(x,y);
		len=d[x]+d[y]-d[anc]-d[anc];
		if (len&1)
		{
			puts("0");
			continue;
		}
		len>>=1;
		mid=ups(y,len);
		if (d[x]==d[y])
		{
			x=ups(x,len-1);
			y=ups(y,len-1);
			sum=n-c[x]-c[y];
		}
		else
		{
			y=ups(y,len-1);
			sum=c[mid]-c[y];
		}
		printf("%d\n",sum);
	}
	return 0;
}
