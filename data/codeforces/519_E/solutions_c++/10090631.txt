#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#define N 100001
using namespace std;
int n,m,h[N],size[N],anc[N][17];
vector <int> v[N];
void build(int u)
{
	int i;
	size[u]=1;
	for(i=1;i<=16;i++)
	{
		if(h[u]<(1<<i))break;
		anc[u][i]=anc[anc[u][i-1]][i-1];
	}
	for(i=0;i<v[u].size();i++)
	{
		int to=v[u][i];
		if(to==anc[u][0])continue;
		anc[to][0]=u;
		h[to]=h[u]+1;
		build(to);
		size[u]+=size[to];
	}
}
int lca(int u,int v)
{
	int i;
	if(h[u]>h[v])swap(u,v);
	for(i=0;i<=16;i++)
		if((h[v]-h[u])&(1<<i))
			v=anc[v][i];
	for(i=16;i>=0;i--)
		if(anc[u][i]!=anc[v][i])
			u=anc[u][i],v=anc[v][i];
	if(u==v)return u;
	return anc[u][0];
}
int main(int argc, char *argv[])
{
	int i,x,y;
	scanf("%d",&n);
	for(i=1;i<n;i++)
	{
		scanf("%d%d",&x,&y);
		v[x].push_back(y);
		v[y].push_back(x);
	}
	build(1);
	scanf("%d",&m);
	while(m--)
	{
		scanf("%d%d",&x,&y);
		if(x==y)
		{
			printf("%d\n",n);
			continue;
		}
		if(h[x]<h[y])swap(x,y);
		int l=lca(x,y);
		if((h[x]-h[l]+h[y]-h[l])&1)
		{
			puts("0");
			continue;
		}
		int mid=x,midh=h[x]-(h[x]-h[l]+h[y]-h[l])/2;
		for(i=0;i<=16;i++)
			if((h[mid]-midh)&(1<<i))
				mid=anc[mid][i];
		if(mid==l)
		{
			for(i=0;i<=16;i++)
				if((h[x]-(h[l]+1))&(1<<i))
					x=anc[x][i];
			for(i=0;i<=16;i++)
				if((h[y]-(h[l]+1))&(1<<i))
					y=anc[y][i];
			printf("%d\n",n-size[x]-size[y]);
		}
		else
		{
			for(i=0;i<=16;i++)
				if((h[x]-(midh+1))&(1<<i))
					x=anc[x][i];
			printf("%d\n",size[mid]-size[x]);
		}
	}
	return 0;
}