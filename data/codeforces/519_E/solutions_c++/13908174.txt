#include<cstdio>
#include<algorithm>
#include<vector>
#define rep(i,n) for(int i=1; i<=n; i++)
#define rep0(i,n) for(int i=0; i<n; i++)
#define pb push_back
using namespace std;
vector<int> v[100010];
int n,x,y,z,m,u[100010][20],d[100010],s[100010];
int dfs(int k,int f){
    u[k][0]=f;
    s[k]=1;
    d[k]=d[f]+1;
    rep0(i,v[k].size()) if (v[k][i]!=f) s[k]+=dfs(v[k][i],k);
    return s[k];
}       
int up(int k,int l){
    for (int i=18; i>=0; i--) if ((1<<i)<=l){
        l-=1<<i;
        k=u[k][i];
    }
    return k;
}
int main(){
    scanf("%d",&n);
    rep(i,n-1){
        scanf("%d%d",&x,&y);
        v[x].pb(y);
        v[y].pb(x);
    }
    d[0]=0;
    dfs(1,0);
    rep(i,18) rep(j,n) u[j][i]=u[u[j][i-1]][i-1];
    scanf("%d",&m);
    rep(i,m){
        scanf("%d%d",&x,&y);
        if (x==y){
            printf("%d\n",n);
            continue;
        }
        if (d[x]<d[y]) swap(x,y);
        int z=up(x,d[x]-d[y]);
        int w=y;
        if (z!=w){
            for (int i=18; i>=0; i--) if (u[z][i]!=u[w][i]){
                z=u[z][i];
                w=u[w][i];
            }
            z=u[z][0];
        }
        int dist=d[x]+d[y]-2*d[z];
        if (dist%2) printf("0\n");
        else{
            int crs=up(x,dist/2);
            if (crs!=z) printf("%d\n",s[crs]-s[up(x,(dist/2)-1)]);
            else printf("%d\n",n-s[up(x,(dist/2)-1)]-s[up(y,(dist/2)-1)]);
        }
    }
}
