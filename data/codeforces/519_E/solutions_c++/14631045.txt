#include <iostream>
#include <algorithm>
#include <vector>

using namespace std;
const int MAX = 1e5+5;
int par[MAX][20],he[MAX],sz[MAX];
vector<int> adj[MAX];
void df(int u,int p=0){
	sz[u]= 1;
	he[u]= he[p]+1;
	for(int i=0;i<adj[u].size();++i){
		int v= adj[u][i];
		if(v!=p){
			par[v][0]= u;
			for(int i=1;i<20;++i)
				par[v][i]= par[par[v][i-1]][i-1];
			df(v,u);
			sz[u]+= sz[v];
		}
	}
}
int parent(int u,int hh){
	for(int i=0;i<20;++i)
		if( (1<<i)&hh)
			u = par[u][i];
	return u;
}
pair<int,int> lca(int v,int u){
	if(he[v]>he[u])v = parent(v,he[v]-he[u]);
	if(he[u]>he[v])u = parent(u,he[u]-he[v]);
	if(v==u)return make_pair(v,v);
	for(int i=19;i>=0;--i)
		if(par[v][i]!=par[u][i])
			v = par[v][i],u = par[u][i];
	return make_pair(par[v][0],v);
}
int main(){
	int n,m,a,b,i;cin>>n;
	for(i=0;i<n-1;++i)
		cin>>a>>b,adj[a].push_back(b),adj[b].push_back(a);
	he[0]=-1;df(1);
	cin>>m;
	int u,v,l,r;
	for(i=0;i<m;++i){
		cin>>a>>b;
		if(he[a]<he[b])swap(a,b);
		pair<int,int> x = lca(a,b),y = lca(b,a);
		u = x.first,l = x.second,r = y.second;
		int dis = he[a]+he[b]-2*he[u];
		if(a==b)cout<<n<<endl;
		else if( dis%2==1)cout<<0<<endl;
		else if(he[a]==he[b])cout<<n-sz[l]-sz[r]<<endl;
		else{
			dis>>=1; cout<<sz[parent(a,dis)]-sz[parent(a,dis-1)]<<endl;
		}
	}
}
