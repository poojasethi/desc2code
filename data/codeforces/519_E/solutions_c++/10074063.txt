#include <cstdio>
#include <algorithm>
#define N 100005
#define M 18
#define fi(a, b, c) for(int a = (b); a < (c); a++)
#define fd(a, b, c) for(int a = (b); a > (c); a--)
#define FI(a, b, c) for(int a = (b); a <= (c); a++)
#define FD(a, b, c) for(int a = (b); a >= (c); a--)
#define fe(a, b, c) for(int a = (b); a; a = c[a])
using namespace std;

int n, f[N], v[N + N], o[N + N], p, dp[N][M], d[N], s[N];

void bd(int a, int b){
	v[++p] = b; o[p] = f[a]; f[a] = p;
}

void dfs(int x, int y, int z){
	dp[x][0] = y;
	d[x] = z;
	s[x] = 1;
	fe(i, f[x], o) if(v[i] != y){
		dfs(v[i], x, z + 1);
		s[x] += s[v[i]];
	}
}

int walk(int x, int y){
	for(int i = 0; y; y >>= 1, i++) if(y & 1) x = dp[x][i];
	return x;
}

int lca(int x, int y){
	if(d[x] > d[y]) swap(x, y);
	y = walk(y, d[y] - d[x]);
	
	FD(i, M - 1, 0) if(dp[x][i] != dp[y][i]){
		x = dp[x][i];
		y = dp[y][i];
	}
	
	if(x != y) x = dp[x][0];
	return x;
}

int main(){
	scanf("%d", &n);
	fi(i, 1, n){
		int a, b;
		scanf("%d %d", &a, &b);
		bd(a, b);
		bd(b, a);
	}
	
	dfs(1, 0, 0);
	fi(i, 1, M) FI(j, 1, n) dp[j][i] = dp[dp[j][i - 1]][i - 1];
	
	scanf("%d", &p);
	while(p--){
		int a, b;
		scanf("%d %d", &a, &b);
		if(a == b){
			printf("%d\n", n);
			continue;
		}
		
		if(d[a] > d[b]) swap(a, b);
		int c = lca(a, b), dis = d[a] + d[b] - d[c] - d[c], m = walk(b, dis / 2);
		
		if(dis & 1) puts("0");
		else if(d[a] == d[b]) printf("%d\n", n - s[walk(a, d[a] - d[m] - 1)] - s[walk(b, d[b] - d[m] - 1)]);
		else printf("%d\n", s[m] - s[walk(b, d[b] - d[m] - 1)]);
	}
	
	scanf("\n");
}
