#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#define MAXN 100005
using namespace std;
int n,ne,q,bin[22],head[MAXN];
int fa[MAXN][22];
struct edge{int t,next;}e[MAXN*2];
void Insert(int u,int v)
{e[++ne].t=v;e[ne].next=head[u];head[u]=ne;}
int sz[MAXN],deep[MAXN];
void Dfs(int u)
{
	sz[u]=1;
	for (int i=1;bin[i]<=deep[u];i++)
		fa[u][i]=fa[fa[u][i-1]][i-1];
	for (int k=head[u];k;k=e[k].next)
	if (e[k].t!=fa[u][0])
	{
		deep[e[k].t]=deep[u]+1;
		fa[e[k].t][0]=u;
		Dfs(e[k].t);
		sz[u]+=sz[e[k].t];
	}
}
int Lca(int x,int y)
{
	int t=deep[x]-deep[y];
	for (int i=0;bin[i]<=t;i++)
		if (bin[i]&t) x=fa[x][i];
	for (int i=19;i>=0;i--)
		if (fa[x][i]!=fa[y][i])
			x=fa[x][i],y=fa[y][i];
	if (x==y) return x;
	else return fa[x][0];
}
int main()
{
	bin[0]=1;for (int i=1;i<=20;i++) bin[i]=bin[i-1]<<1;
	scanf("%d",&n);
	for (int i=1;i<n;i++)
	{
		int x,y;
		scanf("%d%d",&x,&y);
		Insert(x,y);Insert(y,x);
	}
	Dfs(1);scanf("%d",&q);
	for (int i=1;i<=q;i++)
	{
		int x,y;scanf("%d%d",&x,&y);
		if (deep[x]<deep[y]) swap(x,y); 
		int h=Lca(x,y),len=deep[x]-deep[h]+deep[y]-deep[h];
		if (len%2) {puts("0");continue;}	
		if (deep[x]==deep[y])
		{
			int t=len/2-1,xx=x,yy=y;
			for (int i=19;i>=0;i--)
				if (bin[i]&t) xx=fa[xx][i],yy=fa[yy][i];
			 printf("%d\n",n-sz[xx]-sz[yy]);
		}
		else
		{
			int now=len/2,t=len/2-1,xx=x,ans=0;
			for (int i=19;i>=0;i--)
				if (bin[i]&t) xx=fa[xx][i];
			for (int i=19;i>=0;i--)
				if (bin[i]&now) x=fa[x][i];
			printf("%d\n",sz[x]-sz[xx]);
		}
	}
	return 0;
}
