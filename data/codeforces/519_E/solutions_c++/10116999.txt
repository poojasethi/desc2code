#include<bits/stdc++.h>
#define pb push_back
using namespace std;
vector<int> v[200000];
int c[200000]={0},par[200000],depth[200000],f[200000][21]={{0}};
int dfs(int i,int p,int d)
{
	for(int j=0;j<v[i].size();j++)
	{
		if(v[i][j]!=p)
		{
			c[i]+=dfs(v[i][j],i,d+1);
		}
	}
	par[i]=p;
	depth[i]=d;
	return ++c[i];
}
void build(int n)
{
	for(int i=0;i<=20;i++)
	{
		for(int j=1;j<=n;j++)
		{
			if(i==0)
			{
				f[j][i]=par[j];
			}
			else
			f[j][i]=f[f[j][i-1]][i-1];
		}
	}
}
int cal(int a,int b)
{
	for(int i=20;i>=0;i--)
	{
		if(f[a][i]!=0&&depth[f[a][i]]>=depth[b])
		a=f[a][i];
	}
	//cout<<a<<endl;
	for(int i=20;i>=0;i--)
	{
		
			if(f[a][i]!=0&&f[b][i]!=0&&f[a][i]!=f[b][i])
			{
				a=f[a][i];b=f[b][i];
			}
		
	}
	if(a==b)return a;
	else
	return f[a][0];
}
int move(int a,int d)
{//cout<<a<<" "<<d<<endl;
	for(int i=20;i>=0;i--)
	{
		if(f[a][i]!=0&&((d>>i)&1))
		{
			a=f[a][i];
		}
	}
	return a;
}
int main()
{
	int n;
	cin>>n;
	for(int i=0;i<n-1;i++)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		v[a].pb(b);
		v[b].pb(a);
	}
	dfs(1,0,0);
	build(n);
	int m;
	cin>>m;
	while(m--)
	{
		int a,b;
		scanf("%d%d",&a,&b);
		if(a==b){printf("%d\n",n );continue;}
		if(depth[a]<depth[b])
		swap(a,b);

		int lca=cal(a,b);
		int len=depth[a]+depth[b]-2*depth[lca];
		if(len&1)
		{
			printf("0\n");continue;
		}
		len>>=1;
		int ch=move(a,len-1),ans=0;
		//cout<<depth[a]<<" "<<depth[b]<<" "<<lca<<" "<<depth[lca]<<endl;
		if(depth[a]==depth[b])
		{
			int d=move(b,len-1);
			ans=n-c[ch]-c[d];
		}
		else
		{
			int z=move(a,len);//cout<<z<<endl;
			ans=c[z]-c[ch];
		}
		printf("%d\n",ans);
	}
	return 0;
}