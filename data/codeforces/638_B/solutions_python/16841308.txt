import sys

lines = map(str.strip, sys.stdin.readlines()[1:])

def filter_substrings(lines):
	lines = sorted(lines, key=len)
	used = list(False for line in lines)
	n = len(lines)

	for i in range(n):
		line = lines[i]
		for j in range(i + 1, n):
			superline = lines[j]
			if line in superline:
				used[i] = True
				break
	return list(line for line_used, line in zip(used, lines) if not line_used)

def overlap(a, b):
	n = len(a)
	m = len(b)
	for i in range(1, n):
		common_part = a[i:]
		if b.startswith(common_part):
			return a + b[len(common_part):]

	return None

def join_strings(lines):
	n = len(lines)
	letters = list(set(line) for line in lines)
	for i in range(n):
		for j in range(n):
			if i == j or not len(letters[i] & letters[j]):
				continue
			new_line = overlap(lines[i], lines[j])
			if new_line:
				new_lines = list(line for index, line in enumerate(lines) if index not in [i, j])
				new_lines.append(new_line)
				return new_lines
	return lines


while len(lines) > 1:
	cnt_before = len(lines)

	lines = filter_substrings(lines)
	lines = join_strings(lines)

	cnt_after = len(lines)
	if cnt_after == cnt_before:
		break
print(''.join(lines))



