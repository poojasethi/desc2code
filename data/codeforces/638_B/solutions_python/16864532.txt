def validate_and_join(next, genom):
    for c, chunk in enumerate(genom):
        if next in chunk:
            return False

        # next is head of chunk
        if next[-1] in chunk:
            i = chunk.index(next[-1])
            for j in range(len(next) - 1, i - 1, -1):
                if chunk.startswith(next[-j:]):
                    genom[c] = next + chunk[j:]
                    return False

        # next is tail of chunk
        if next[0] in chunk:
            i = chunk.rindex(next[0])
            for j in range(len(next) - 1, i - 1, -1):
                if chunk.endswith(next[:j]):
                    genom[c] = chunk + next[j:]
                    return False

    # genom.insert(0, next)
    return True

import sys
data = sys.stdin.read().split()
n, i = int(data.pop(0)), 0
assert len(data) == n
data = sorted(data, key=len)
genom = [data.pop()]
while data:
    next = data.pop()
    if validate_and_join(next, genom):
        genom.insert(0, next)
while i < len(genom):
    next = genom.pop(i)
    if validate_and_join(next, genom):
        genom.insert(i, next)
        i = i + 1

sys.stdout.write(''.join(genom))