#include <iostream>
#include <algorithm>
#include<string>
#include <vector>
using namespace std;
vector<int> next[30];
bool vis[30], mark[30];
string res = "";
int in[30];
void DFS(int u)
{
    vis[u] = true;
    res += u + 'a';
    for(int i = 0; i < (int)next[u].size(); i++)
    {
        int v = next[u][i];
        if(in[v] != 0 && vis[v] == false)
        {
            DFS(v);
        }
    }
}
int main()
{
    int n;
    cin >> n;
    string a;
    for(int i = 0; i < n; i++)
    {
        cin >> a;
        for(int j = 0; j < (int)a.size(); j++)
        {
            if(j !=(int ) a.size() - 1)
            {
                next[a[j]-'a'].push_back(a[j+1]-'a');
                in[a[j+1]-'a']++;
            }
            mark[a[j]-'a'] = true;
        }
    }
    for(int i = 0; i < 26; i++)
    {
        if(in[i] == 0 && mark[i])
        {
            DFS(i);
        }
    }
    cout << res << endl;
    return 0;
}
