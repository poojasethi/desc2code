#include <cstdio>
#include <algorithm>
const int MAX_N=55;
int n,m,k;
struct pt{
	int x,y;
	pt(int _x = 0,int _y = 0):x(_x),y(_y){}
}que[MAX_N*MAX_N];
bool vis[MAX_N][MAX_N];
bool visit(int x,int y){
	if (x>n||y>m||vis[x][y]) return true;
	vis[x][y]=true;return false;
}
void path(const pt &a){
	for (int i=1;i<=a.x;++i) printf("(%d,%d) ",i,1);
	for (int i=2;i<=a.y;++i) printf("(%d,%d) ",a.x,i);
	printf("\n");
}
void bfs(){
	int t=0,h=0,num=1;
	int dist=1;pt v;
	que[t]=pt(1,1);
	while (t<=h){
		v=que[t++];
		if (num>=k) break;
		if (!visit(v.x+1,v.y))
			que[++h]=pt(v.x+1,v.y),dist+=v.x+v.y,num++;
		if (num>=k) break;
		if (!visit(v.x,v.y+1))
			que[++h]=pt(v.x,v.y+1),dist+=v.x+v.y,num++;
		}
	printf("%d\n",dist);
	for (int i=h;i>=0;--i){
		path(que[i]);
		}
}
int main(){
	scanf("%d%d%d",&n,&m,&k);
	bfs();
}