# include <bits/stdc++.h>

using namespace std;

typedef pair <int,int> pii;

# define PB push_back
# define MP make_pair
# define L first
# define R second

vector <pii> path;

bool cmp(pii A, pii B){
	if(A.L + A.R != B.L + B.R)
		return (A.L + A.R < B.L + B.R);
	return (A.L < B.L);
}

void make_path(int x,int y){
	path.clear();
	for (int i = 0; i < x; i++)
		path.PB(MP(i, 0));
	for (int i = 0; i < y; i++)
		path.PB(MP(x, i));
	path.PB(MP(x, y));
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0); cout.tie(0);
	int n, m, k;
	cin >> n >> m >> k;
	
	vector <pii> v;
	for (int i = 0; i < n; i++)
		for (int j = 0; j < m; j++)
			v.PB(MP(i, j));
	sort(v.begin(), v.end(), cmp);
	
	int pen = 0;
	for (int i = 0; i < k; i++)
		pen += v[i].L + v[i].R + 1;

	cout << pen << '\n';
	for (int i = k-1; i >= 0; i--){
		make_path(v[i].L, v[i].R);
		for (int j = 0; j < path.size(); j++)
			cout << "(" << path[j].L + 1 << "," << path[j].R + 1 << ")" << " ";
		cout << '\n';
	}

	return 0;
}
