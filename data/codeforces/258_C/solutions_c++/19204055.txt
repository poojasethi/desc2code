#include <bits/stdc++.h>

using namespace std;

const int Mod = 1e9 + 7;
const int N = 1e5 + 1;
vector <int> v[N];
int a[N], n;

int power(int a, int b) {
	if (!b)
		return 1;
	int ans =  power(a, b / 2);
	ans = 1LL * ans * ans % Mod * (b & 1 ? a : 1) % Mod;
	return ans;
}

int ok(int ind) {
	int last = 0, ans = 1;
	for (int i = 1; i < v[ind].size(); i++) {
		int it = lower_bound(a, a + n, v[ind][i]) - a;
		ans = 1LL * ans * power(i, it - last) % Mod;
		last = it;
	}
	ans = 1LL * ans * power(v[ind].size(), n - last) % Mod;
	return ans;
}

main() {
	for (int i = 1; i < N; i++)
		for (int j = i; j < N; j += i)
			v[j].push_back(i);
	cin >> n;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	sort(a, a + n);
	int ans = 0;
	for (int i = 1; i < N; i++) {
		ans = (ans + ok(i)) % Mod;
		v[i].pop_back();
		ans = (ans + Mod - ok(i)) % Mod;
	}
	cout << ans << endl;
}
