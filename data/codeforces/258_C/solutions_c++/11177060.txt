#include<cstdio>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<iostream>
#include<algorithm>
using namespace std;

const long long mod=1000000007LL;
int n,m,a[100005],fact[100005],num;
long long ans;
inline long long power(long long x,int k) {
	if (k==0) return 1;
	long long t=power(x,k>>1);
	t=(t*t)%mod;
	if (k%2==1) return (t*x)%mod; else return t;
}
int main() {
	scanf("%d",&n);
	for (int i=0;i<n;i++) {
		scanf("%d",&a[i]);
		m=max(m,a[i]);
	}
	sort(a,a+n);
	for (int i=1;i<=m;i++) {
		int t=i;
		num=0;
		for (int j=1;j<=(int)sqrt(t);j++) if (t%j==0) {
			fact[num++]=j;
			if (j*j!=t) fact[num++]=t/j;
		}
		sort(fact,fact+num);
		int q=0;
		long long ss=1;
		for (int j=1;j<num;j++) {
			int p=lower_bound(a,a+n,fact[j])-a;
			ss*=power(j,p-q); ss=(ss+mod)%mod;
			q=p;
		}
		ss*=(power(num,n-q)-power(num-1,n-q))%mod;
		ss=(ss+mod)%mod;
		ans=(ans+ss+mod)%mod;
	}
	cout<<ans<<endl;
	return 0;
}

 	 	 		  	 		  	   	  	    	 	