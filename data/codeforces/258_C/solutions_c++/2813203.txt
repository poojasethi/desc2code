#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
typedef long long ll;
const int mo = 1000000007;
#define pb push_back
int a[100001],p[100001],g[100002];
ll pow(ll a,int n){
	ll r=1;
	for(;n;n>>=1){
		if(n&1)r=r*a%mo;
		a=a*a%mo;
	}
	return r;
}
int main(){int n,m;
	scanf("%d",&n);
	for(int i=0;i<n;++i)
		scanf("%d",a+i);
	sort(a,a+n);m=a[n-1];
	for(int i=2;i<=m;++i)
		if(!p[i])
			for(int j=i;j<=m;j+=i)p[j]=i;
	for(int i=m,j=n-1;i>=0;--i){
		for(;j&& a[j-1]>=i;--j);
		g[i]=n-j;
	}
	long long res =1;
	for(int l=2;l<=m;++l){
		int t=l;
		vector<int> d;
		d.pb(1);
		for(int x,c;t>1;){
			x=p[t];
			for(c=0;t%x==0;++c)t/=x;
			for(int on=d.size(),y=x;c--;y*=x)
				for(int j=0;j<on;++j)
					d.pb(d[j]*y);
		}
		sort(d.begin(),d.end());
		ll x=1;
		for(int i=0;i+2<d.size();++i){
			x= x*pow(i+1,g[d[i]]-g[d[i+1]])%mo;
		}
		x= x*(pow(d.size(),g[l])*pow(d.size()-1,g[d[d.size()-2]]-g[l])
			%mo - pow(d.size()-1,g[d[d.size()-2]]))%mo;
		res+= x;
	}
	printf("%d\n",int(res%mo+mo)%mo);
}
