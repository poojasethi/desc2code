#include<stdio.h>
#include<memory.h>
#include<algorithm>
#include<math.h>
#include<vector>
using namespace std;
#define M 100010
#define MOD 1000000007
typedef __int64 ll;
vector< int > v[M];
int s[M];
ll pw[130][M];
void pre(){
	int i,j;
	for (i=1;i<M;i++){
		for (j=i;j<M;j+=i) v[j].push_back(i);
	}
}
void pre1(){
	int i,j;
	for (i=0;i<130;i++){
		pw[i][0]=1;
		for (j=1;j<M;j++) pw[i][j]=(pw[i][j-1]*i)%MOD;
	}
}
int main(){
	pre();pre1();
	int i,j,n,k,st,en;
	scanf("%d",&n);
	for (i=0;i<n;i++) scanf("%d",s+i);
	sort(s,s+n);
	int mx=s[n-1];
	ll ans=0,res=1,p;
	while(mx){
		res=1;
		for (i=0;i<v[mx].size();i++){
			k=v[mx][i];
			if (k==mx){
				st=lower_bound(s,s+n,mx)-s;
				p=n-st;
				res=(res*(MOD+pw[i+1][p]-pw[i][p]))%MOD;
			}
			else {
				st=lower_bound(s,s+n,k)-s;
				en=lower_bound(s,s+n,v[mx][i+1])-s;
				p=en-st;
				res=(res*pw[i+1][p])%MOD;
			}
		}
		ans=(ans+res)%MOD;
		mx--;
	}
	printf("%I64d\n",ans);
	return 0;
}
