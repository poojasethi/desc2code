#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 100001;
const long long MOD = 1e9 + 7;

long long pow(long long a, long long e) {
	long long ret = 1LL;
	for (long long i = 0; (1LL << i) <= e; ++i) {
		if (e & (1LL <<i)) (ret *= a) %= MOD;
		(a *= a) %= MOD;
	}
	return ret;
}

int s[MAXN];
vector<int> divs[MAXN];

int main() {
	std::ios_base::sync_with_stdio(false);

	int n, m = 0;
	cin >> n;
	for (int i = 0, a; i < n; ++i) {
		cin >> a;
		m = max(m, a);
		++s[a];
	}

	for (int i = 1; i <= m; ++i) {
		s[i] += s[i - 1];
		for (int j = i; j <= m; j += i) {
			divs[j].push_back(i);
		}
	}

	long long ans = 1LL;
	for (int j = m; j > 1; --j) {
		long long o = 1LL, i, qm;
		for (i = 1; i < (long long)divs[j].size(); ++i) {
			(o *= pow(i, s[divs[j][i] - 1] - s[divs[j][i - 1] - 1])) %= MOD;
		}
		qm = s[m] - s[j - 1];
		(o *= (pow(i, qm) - pow(i - 1, qm) + MOD) % MOD) %= MOD;
		(ans += o) %= MOD;
	}
	cout << ans << endl;
	return 0;
}
