//By momo
#include <cstdio>
#include <vector>
#include <algorithm>

#define N 100010
#define M 1000000007
#define LL long long
#define PB push_back
#define INF 999999999
#define SZ(x) ((LL)(x).size())

using namespace std;

LL pw (LL a, LL b){
	if(b == 0) return 1;
	LL x = pw(a, b/2);
	if(b & 1) return ((x * x)%M * a) % M;
	else return (x * x) % M;
}

vector<LL> fac[N];
LL n, mx, ans, a[N];

int main (){
	scanf("%I64d", &n);
	for (LL i = 0; i < n; i++){
		scanf("%I64d", &a[i]);
		mx = max(mx, a[i]);
	} sort(a, a+n);
	for (LL i = 1; i <= mx; i++)
		for (LL j = i; j <= mx; j += i) fac[j].PB(i);
	for (LL i = 1; i <= mx; i++) fac[i].PB(INF);
	for (LL i = 1; i <= mx; i++){
		LL cnt = 1;
		for (LL j = 0; j < SZ(fac[i]) - 1; j++){
			LL c = lower_bound(a, a+n, fac[i][j+1])
				 - lower_bound(a, a+n, fac[i][j]);
			if (j == SZ(fac[i]) - 2)
				cnt = (cnt * (pw(j + 1, c) - pw(j, c) + M)) % M;
			else cnt = (cnt * pw(j + 1, c)) % M;
		}
		ans = (ans + cnt) % M;
	}
	printf("%I64d\n", ans);
}
