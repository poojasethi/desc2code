#include <stdio.h>
#include <memory.h>
#include <algorithm>
using namespace std;
#define N 100001
typedef __int64 ll;

int fac[N][130], nf[N], a[N];
ll po[130][N], md=1000000007, ans;

int main() {
	int i, j, k, n, r, last, st, en;
	for (i=1; i<130; i++) {
		po[i][0]=1;
		for (j=1; j<N; j++) po[i][j] = (po[i][j-1] * i) % md;
	}
	for (i=1; i<N; i++) for (j=i; j<N; j+=i) fac[j][nf[j]++]=i;
	scanf ("%d", &n);
	for (i=0; i<n; i++) scanf ("%d", a+i);
	sort (a, a+n);
	for (i=1; i<=a[n-1]; i++) {
		ll tot=1;
		last = n;
		for (j=1; j<nf[i]; j++) {
			r = fac[i][j];
			if (a[0] >= r) en=0;
			else {
				st=0, en=n-1;
				while (en-st>1) {
					k=(st+en)/2;
					if (a[k]<r) st=k;
					else en=k;
				}
			}
			k = n-en;
			tot = (tot*po[j][last-k]) % md;
			last=k;
		}
		ll tt=po[nf[i]][last];
		if (nf[i]>1) tt = (tt-po[nf[i]-1][last] + md) % md;
		tot = (tot*tt) % md;
		ans = (ans+tot) % md;
	}
	printf ("%I64d\n", ans);
	return 0;
}
