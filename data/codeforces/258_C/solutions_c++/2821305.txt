#include <stdio.h>
#include <string.h>
#include <iostream>
#include <algorithm>
using namespace std;
typedef long long llong;
int a[100005];
int res[100005];
int cnt[100005];
int pos[100005];
const int MOD = 1000000007;
llong pow(llong x, llong k) {
	llong res = 1;
	while (k) {
		if (k & 1) res = (res * x) % MOD;
		x = (x * x) % MOD;
		k >>= 1;
	}
	return res;
}
int main() {
	int n;
	scanf("%d", &n);
	int m = 0;
	for (int i = 0; i < n; i++) {
		scanf("%d", &a[i]);
		m = max(m, a[i]);
	}
	sort(a, a + n);
	for (int i = 0; i <= m; i++) res[i] = 1;
	int t = 1, ans = 0;
	for (int i = 0; i < n; i++) {
		for (; t <= a[i]; t++) {
			for (int k = t; k <= m; k += t) {
				res[k] = llong(res[k]) * pow(cnt[k], i - pos[k]) % MOD;
				cnt[k]++;
				pos[k] = i;
			}
			ans += (llong(res[t]) * (MOD + pow(cnt[t], n - i) - pow(cnt[t] - 1, n - i))) % MOD;
			ans %= MOD;
		}
	}
	printf("%d\n", ans);
	return 0;
}
