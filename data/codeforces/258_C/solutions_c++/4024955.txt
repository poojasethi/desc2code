#include<stdio.h>
#include<math.h>
#include<vector>
#include<algorithm>
using namespace std;
#define N 100001
#define MOD 1000000007
vector<int>v[N];
int n,a[N],m,pos[150];
__int64 pow(__int64 d,int b){
	__int64 c=1;
	while(b){
		if(b&1)c=c*d%MOD;
		d=d*d%MOD;
		b/=2;
	}
	return c;
}
int main(){
	//freopen("1.in","r",stdin);
	scanf("%d",&n);
	int i,j,k;
	for(i=0;i<n;i++)scanf("%d",a+i);
	sort(a,a+n);
	m=a[n-1];
	for(i=1;i<=m;i++){
		j=sqrt(i);
		for(k=1;k<=j;k++)if(i%k==0){
			v[i].push_back(k);
			if(i/k!=k)v[i].push_back(i/k);
		}
		sort(v[i].begin(),v[i].end());
	}
	__int64 ans=0;
	for(k=1;k<=m;k++){
		__int64 c=1;
		int sz=v[k].size();
		for(i=0;i<sz;i++){
			pos[i+1]=lower_bound(a,a+n,v[k][i])-a;
			c=c*pow(i,pos[i+1]-pos[i])%MOD;
		}
		__int64 b=c*pow(sz-1,n-pos[sz])%MOD;
		c=c*pow(sz,n-pos[sz])%MOD;
		ans=(ans+c-b+MOD)%MOD;
	}
	printf("%I64d\n",ans);
}
