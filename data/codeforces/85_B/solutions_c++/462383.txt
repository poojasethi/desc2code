#include <cstdio>
#include <queue>
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

#define REP(i, n) for (int i(0), _n(n); i!=_n; ++i)
typedef long long ll;

int c[110000];
priority_queue<ll, vector<ll>, greater<ll> > Q[3];

int main() {
	
	int k[3], t[3];
	REP(i, 3) scanf("%d", &k[i]);
	REP(i, 3) scanf("%d", &t[i]);

	int n;
	scanf("%d", &n);
	REP(i, n) scanf("%d", &c[i]);	

	REP(i, 3) {
		if (k[i] > n) k[i] = n;
		REP(j, k[i]) Q[i].push(0);
	}

	ll last = 0;
	REP(i, n) {
		ll come = c[i];
		REP(j, 3) {
			ll first = Q[j].top();
			Q[j].pop();
			come = max(come, first) + t[j];
			Q[j].push(come);
			last = max(last, come);
		}
	}
	cout << last - c[n-1] << endl;

	return 0;
}
