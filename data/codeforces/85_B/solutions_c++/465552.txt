#include <cstdio>
#include <cstring>
#include <algorithm>
#include <iostream>
using namespace std;

const int MAXN = 200010;

typedef long long LL;

LL start_ti[3][MAXN];
int st[3], k[3], ti[3];
int n;

void init()
{
  for (int i = 0; i < 3; ++i) cin >> k[i];
  for (int i = 0; i < 3; ++i) cin >> ti[i];
  cin >> n;


  for (int i = 0; i < 3; ++i) k[i] = min(k[i], n);
}

void solve()
{
  memset(start_ti, 0, sizeof(start_ti));
  memset(st, 0, sizeof(st));

  LL ans = 0, start, end;
  for (int i = 0; i < n; ++i) {
    cin >> start;
    end = start;
    for (int j = 0; j < 3; ++j) {
      end = max(end, start_ti[j][st[j]++]) + ti[j];
      start_ti[j][k[j]++] = end;
    }
    ans = max(ans, end - start);
  }

  cout << ans << endl;
}

int main()
{
  init();
  solve();
  return 0;
}
