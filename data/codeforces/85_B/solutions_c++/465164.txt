#include <iostream>
#include <queue>
using namespace std;

__int64 times[100000] = {0};
__int64 starts[100000];
int n;

void run(int p, int t)
{
	int ws = 0;
	for (int i=0;i<n;++i)
	{
		while (ws<i && times[ws] <= times[i])
			++ws;

		int rng = i-ws+1;
		__int64 start = 0;
		if (rng > p)
		{
			start = times[ws];
			++ws;
		}
		else start = times[i];
		times[i] = start + t;		
	}
}

int main()
{
	int p1, t1, p2, t2, p3, t3;
	cin >> p1 >> p2 >> p3 >> t1 >> t2 >> t3 >> n;
	for (int i=0;i<n;++i) { cin >> times[i]; starts[i]=times[i]; }
	run(p1,t1);
	run(p2,t2);
	run(p3,t3);
	__int64 max = times[0]-starts[0];
	for (int i=1;i<n;++i) if (times[i]-starts[i] > max) max=times[i]-starts[i];
	cout << max;
	return 0;
}