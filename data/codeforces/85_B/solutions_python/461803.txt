from collections import deque
k = map(int, raw_input().split())
t = map(int, raw_input().split())
n = int(raw_input())

a = map(int, raw_input().split())
qs = [deque() for i in xrange(4)]
wait = [deque() for i in xrange(3)]

for i, x in enumerate(a):
	qs[0].append((x, i))

res = 0

while True:
	(q, x) = (-1, 10**18)
	for i, qu in enumerate(qs):
		if not qu: continue
		if qu[0][0] < x:
			q, x = i, qu[0][0]
	if q == -1: break
	(x, i) = qs[q].popleft()

	if q == 3:
		res = max(res, x - a[i])
	else:
		if len(qs[q + 1]) < k[q]:
			qs[q + 1].append((x + t[q], i))
		else:
			wait[q].append(i)

	if q > 0:
		if wait[q - 1]:
			j = wait[q - 1].popleft()
			qs[q].append((x + t[q - 1], j))

print res