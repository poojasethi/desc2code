import sys,heapq
k1,k2,k3=map(int,sys.stdin.readline().strip().split(' '))
t1,t2,t3=map(int,sys.stdin.readline().strip().split(' '))
n=int(sys.stdin.readline().strip())
c=map(int,sys.stdin.readline().strip().split(' '))
a=[]
for i,t in enumerate(c): a.append((t,i))
a.sort()
s=[]
f={}
for t,i in a:
	if k1>0:
		heapq.heappush(s,t+t1)
		k1-=1
		f[i]=t+t1
	else:
		le = heapq.heappop(s)
		f[i] = max(t,le)+t1
		heapq.heappush(s,f[i])

s=[]
a=[(v,k) for (k,v) in f.iteritems()]
a.sort()
f={}
for t,i in a:
	if k2>0:
		heapq.heappush(s,t+t2)
		k2-=1
		f[i]=t+t2
	else:
		le = heapq.heappop(s)
		f[i] = max(t,le)+t2
		heapq.heappush(s,f[i])

s=[]
a=[(v,k) for (k,v) in f.iteritems()]
a.sort()
f={}
for t,i in a:
	if k3>0:
		heapq.heappush(s,t+t3)
		k3-=1
		f[i]=t+t3
	else:
		le = heapq.heappop(s)
		f[i] = max(t,le)+t3
		heapq.heappush(s,f[i])

res=0
for k,v in f.iteritems():
	res=max(res,v-c[k])
print res
