#include<cstdio>
#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
#include<set>
using namespace std;

struct edge
{int u,v,c,next;
};
struct edge e[200010];

struct unit
{int d,dfn;
 int fa[20];
 long long l;
};
struct unit f[100010];

int n,nq,num,tot;
int head[100010],a[100010];
long long ans;
char opt[2];
set<int> s;

void add(int u,int v,int c)
{e[num].u=u;
 e[num].v=v;
 e[num].c=c;
 e[num].next=head[u];
 head[u]=num;
 num++;
 e[num].u=v;
 e[num].v=u;
 e[num].c=c;
 e[num].next=head[v];
 head[v]=num;
 num++;
}

void dfs(int i,int fa)
{int j;
 
 f[i].dfn=++tot;
 a[tot]=i;
 for(j=1;j<=17;j++) f[i].fa[j]=f[f[i].fa[j-1]].fa[j-1];
 j=head[i];
 while(j!=-1)
 {	if(e[j].v!=fa)
 	{	f[e[j].v].d=f[i].d+1;
 		f[e[j].v].l=f[i].l+e[j].c;
 		f[e[j].v].fa[0]=i;
 		dfs(e[j].v,i);
 	}
	j=e[j].next;
 }
}
 
long long calc(int x,int y)
{int i;
 long long ret=f[x].l+f[y].l;

 if(f[x].d<f[y].d) swap(x,y);
 for(i=17;i>=0;i--)
 	if(f[x].d-(1<<i)>=f[y].d) x=f[x].fa[i];
 for(i=17;i>=0;i--)
 	if(f[x].fa[i]!=f[y].fa[i])
	{	x=f[x].fa[i];
		y=f[y].fa[i];
	}
 if(x!=y)
 	ret-=f[f[x].fa[0]].l*2;
 else
 	ret-=f[x].l*2;	
 return ret;
}
 	
int main()
{int i,j,q,x,y,z;
 set<int>::iterator p,p1,p2;
 
 scanf("%d",&n);
 memset(head,-1,sizeof(head));
 for(i=1;i<n;i++)
 {	scanf("%d%d%d",&x,&y,&z);
 	add(x,y,z);
 }
 dfs(1,0);
 scanf("%d",&nq);
 for(q=1;q<=nq;q++)
 {	scanf("%s",opt+1);
 	if(opt[1]=='?')
		printf("%I64d\n",ans/2);
	else
 	{	scanf("%d",&x);
 		if(opt[1]=='+')
			p=s.insert(f[x].dfn).first;
		else
			p=s.lower_bound(f[x].dfn);	
 		if(p==s.begin()) p1=s.end(); else p1=p;
		p1--;
		p2=p;
		p2++;
		if(p2==s.end()) p2=s.begin();
		ans+=(opt[1]=='+'?1:-1)*(calc(a[*p],a[*p1])+calc(a[*p],a[*p2])-calc(a[*p1],a[*p2]));
		if(opt[1]=='-') s.erase(f[x].dfn);
	}
 }
 return 0;
}