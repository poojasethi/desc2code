#include<cstdio>
#include<utility>
#include<set>
using namespace std;
set<pair<int,int> > ct;
const int tt=100005;
struct edge{
	edge *nxt;
	int des,dis;
	void maker(edge *&a,int b,int c){
		nxt=a,des=b,dis=c;
		a=this;
	}
} w[tt<<1],*sta[tt],*tot;
int cnt=0,lg,n;
int bg[tt],ed[tt],ta[tt],fa[tt][17];
long long dis[tt];
void dfs(int i){
	bg[i]=++cnt;
	for (edge *e=sta[i];e;e=e->nxt) if (e->des!=fa[i][0]){
		fa[e->des][0]=i;
		dis[e->des]=dis[i]+e->dis;
		dfs(e->des);
	}
	ed[i]=cnt;
}
int lca(int a,int b){
	for (int i=lg;i>=0;i--)
		a=ed[fa[a][i]]<bg[b] || bg[b]<bg[fa[a][i]]?fa[a][i]:a;
	return ed[a]<bg[b] || bg[b]<bg[a]?fa[a][0]:a;
}
int ga(int a){
	int ans=0;
	for (;a;a-=a&-a) ans+=ta[a];
	return ans;
}
void ins(int a,int c){
	for (;a<=n;a+=a&-a) ta[a]+=c;
}
int main(){
	int i,j,a,b,c,q;
	long long ans=0;
	char s[5];
	scanf("%d",&n);
	for (i=1;i<=n;i++) sta[i]=NULL,ta[i]=0;
	for (tot=w,i=1;i<n;i++){
		scanf("%d%d%d",&a,&b,&c);
		(tot++)->maker(sta[a],b,c);
		(tot++)->maker(sta[b],a,c);
	}
	fa[1][0]=1,dis[1]=0;
	dfs(1);
	for (i=2,lg=0;i<=n;i*=2) lg++;
	for (i=1;i<=lg;i++) for (j=1;j<=n;j++) fa[j][i]=fa[fa[j][i-1]][i-1];
	for (scanf("%d",&q);q;q--){
		scanf("%s",s);
		if (*s=='?'){
			if (ct.size()<=1) puts("0"); else
				printf("%I64d\n",ans-dis[lca(ct.begin()->second,ct.rbegin()->second)]);
		} else
		if (*s=='+'){
			scanf("%d",&a);
			ct.insert(make_pair(bg[a],b=a));
			if (ga(bg[a]-1)==ga(ed[a])) for (i=lg;i>=0;i--)
				a=ga(bg[fa[a][i]]-1)==ga(ed[fa[a][i]])?fa[a][i]:a;
			a=ga(bg[a]-1)==ga(ed[a])?fa[a][0]:a;
			ans+=dis[b]-dis[a];
			ins(bg[b],1);
		} else{
			scanf("%d",&a);
			ct.erase(make_pair(bg[a],b=a));
			ins(bg[a],-1);
			if (ga(bg[a]-1)==ga(ed[a])) for (i=lg;i>=0;i--)
				a=ga(bg[fa[a][i]]-1)==ga(ed[fa[a][i]])?fa[a][i]:a;
			a=ga(bg[a]-1)==ga(ed[a])?fa[a][0]:a;
			ans-=dis[b]-dis[a];
		}
	}
	return 0;
}
