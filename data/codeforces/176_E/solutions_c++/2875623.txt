#include<cstdio>
#include<set>
using namespace std;
#define N 200005
set<int > a; char opr[5]; long long d[N],res,ans;
int v[N],w[N],dep[N],f[N][18],next[N],ed[N],data[N],son[N],n,m,x,y,z,Q,flag,l;
void dfs(int x)
{
	w[v[x]=++m]=x;
	for (int p=son[x];p;p=next[p]){
		int y=ed[p]; if (!dep[y]) dep[y]=dep[x]+1,d[y]=d[x]+data[p],*f[y]=x,dfs(y);
		}
}
int lca(int x,int y)
{
	if (dep[x]<dep[y]){int t=x;x=y;y=t;}
	for (int i=17,k=dep[x]-dep[y];i>=0;i--) if (k&1<<i) x=f[x][i];
	for (int i=17;i>=0;i--) if (f[x][i]!=f[y][i]) x=f[x][i],y=f[y][i];
	return x==y?x:*f[x];
}
int main()
{
	scanf("%d",&n);
	for (int i=1;i<n;i++) scanf("%d%d%d",&x,&y,&z),
		ed[++l]=y,data[l]=z,next[l]=son[x],son[x]=l,
		ed[++l]=x,data[l]=z,next[l]=son[y],son[y]=l;
	dep[1]=1,dfs(1); scanf("%d",&Q);
	for (int j=0;j<17;j++) for (int i=1;i<=n;i++) f[i][j+1]=f[f[i][j]][j];
	while (Q--){
		scanf("%s",opr);
		if (*opr=='?') printf("%I64d\n",ans);
		else {
			scanf("%d",&x);
			set<int> :: iterator it=a.insert(v[x]).first,L=it,R=it;
			if (L--==a.begin()) L=--a.end(); if (++R==a.end()) R=a.begin();
			int l=w[*L],r=w[*R]; res=d[x]-d[lca(l,x)]-d[lca(x,r)]+d[lca(l,r)];
			if (*opr=='+') ans+=res; else ans-=res,a.erase(v[x]);
			}
		}
	return 0;
}
