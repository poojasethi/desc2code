#include <iostream>
#include <vector>
using namespace std;
int n,d[200005],r[200005],rev;
vector<pair<int,int> >adj[200005];
void dfs(int node,int parent,int dist,int inv){
 d[node]=dist;
 r[node]=inv;
 for(int i=0;i<adj[node].size();i++){
   pair<int,int>ii=adj[node][i];
    int u=ii.first;
    if(u==parent)continue;
    dfs(u,node,dist+1,inv+ii.second);
    rev+=ii.second;
 }
}
int main()
{
 cin>>n;
 int from,to;
 for(int i=1;i<n;i++){
    cin>>from>>to;
    adj[from].push_back(make_pair(to,0));
    adj[to].push_back(make_pair(from,1));
 }
 dfs(1,0,0,0);
 int mn=200005,cost[200005];
 for(int i=1;i<=n;i++){
    cost[i]=rev-r[i]+(d[i]-r[i]);
    if(cost[i]<mn)mn=cost[i];
 }
 cout<<mn<<endl;
 for(int i=1;i<=n;i++)
    if(cost[i]==mn)
      cout<<i<<' ';
 return 0;
}
