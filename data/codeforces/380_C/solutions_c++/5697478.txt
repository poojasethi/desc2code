#include<cstdio>
#include<cstring>
#include<cmath>
#include<algorithm>
using namespace std;

#define P(x) (1<<(x))
const int N=1100000;

char str[N];
int sum[N];
int dp[30][N];

void init()
{
    int i,j,len=strlen(str+1);
    for(i=1;i<=len;i++)
    {
        sum[i]=sum[i-1];
        if(str[i]=='(')dp[0][i]=dp[0][i-1]+1;
        else dp[0][i]=dp[0][i-1]-1,sum[i]++;
        //printf("%d ",dp[0][i]);
    }
    //printf("\n");
    for(i=1;P(i)<=len;i++)
    {
        for(j=1;j+P(i)-1<=len;j++)dp[i][j]=min(dp[i-1][j],dp[i-1][j+P(i-1)]);
    }
}

int Query(int a,int b)
{
    int len=(int)log2(b-a+1);
    return min(dp[len][a],dp[len][b-P(len)+1]);
}

int main()
{
    scanf("%s",str+1);
    init();
    int query;
    scanf("%d",&query);
    int l,r;
    while(query--)
    {
        scanf("%d%d",&l,&r);
        //printf("Q:%d %d %d %d %d %d\n",l,r,Query(l,r),sum[r],sum[l-1],dp[0][l-1]);
        printf("%d\n",2*(sum[r]-sum[l-1]+min(0,Query(l,r)-dp[0][l-1])));
    }
    
    return 0;
}