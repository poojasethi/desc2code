#include<cstdio>
#include<cstring>
int N,M,l,r;
char S[1000005];
struct node
{
	int a,b,c;
}f[4000005];
int Min(int a,int b)
{
	if(a<b) return a;
	return b;
}
void Updata(node &f3,node f1,node f2)
{
	int t=Min(f1.b,f2.c);
	f3.a=f1.a+f2.a+t,f3.b=f1.b+f2.b-t,f3.c=f1.c+f2.c-t;
}
void Build(int t,int l,int r)
{
	int mid=(l+r)>>1;
	if(l==r)
	{
		if(S[l-1]=='(') f[t].b=1;
		else f[t].c=1;
		return;
	}
	Build(t<<1,l,mid),Build((t<<1)+1,mid+1,r);
	Updata(f[t],f[t<<1],f[(t<<1)+1]);
}
node Query(int t,int l,int r,int ll,int rr)
{
	int mid=(l+r)>>1;
	node f1,f2,f3;
	if(l==ll&&r==rr) return f[t];
	if(rr<=mid) return Query(t<<1,l,mid,ll,rr);
	if(ll>mid) return Query((t<<1)+1,mid+1,r,ll,rr);
	f1=Query(t<<1,l,mid,ll,mid),f2=Query((t<<1)+1,mid+1,r,mid+1,rr);
	Updata(f3,f1,f2);
	return f3;
}
int main()
{
	scanf("%s",&S),N=strlen(S),Build(1,1,N);
	for(scanf("%d",&M);M--;) scanf("%d%d",&l,&r),printf("%d\n",2*Query(1,1,N,l,r).a);
	return 0;
}
