#include <bits/stdc++.h>
using namespace std;

#define rep(i,a,n) for(int (i)=(a);(i)<(int)(n);(i)++)
#define foreach(e,x) for(__typeof(x.begin()) e=x.begin();e!=x.end();++e)
#define SZ(x) ((int) (x).size())

struct Node{
	int x,y,id;
	bool operator<(const Node& p) {
		return y<p.y;	
	}
};
const int N = 1000000 + 5;
int t[N];
void add(int x, int v) {
	for(;x<N;x+=x&-x) t[x]+=v;
}
int query(int x) {
	int ret = 0;
	for(;x>0;x-=x&-x) ret+=t[x];
	return ret;
}
int main(){
    //freopen("C.in","r",stdin);
    string str;
	cin >> str;
	int q;
	cin >> q;
	vector<Node> Q(q);
	vector<int> ans(q);
	rep(i,0,q) { cin >> Q[i].x >> Q[i].y; Q[i].id = i; }
	sort(Q.begin(), Q.end());
	stack<int> S;
	int j=0;
	rep(i,0,q){
		for(;j<Q[i].y;++j) {
			if(str[j]=='(') S.push(j);
			else {
				if(SZ(S)!=0) {
					int t = S.top(); S.pop();
					add(t+1, 2);
				}
			}
		}
		ans[Q[i].id] = query(Q[i].y) - query(Q[i].x-1);
	}
	rep(i,0,q) cout<<ans[i]<<endl;	
    return 0;
}
        			 	  	 	   		 		 			