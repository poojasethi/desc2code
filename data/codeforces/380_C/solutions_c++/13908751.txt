#include <cstdio>
#include <cstring>

#define min(a, b) (a<b?a:b)

struct S {
    int max, open, closed;
};

S tree[2000009];
char str[1000009];

S combine(S a, S b) {
    S r;
    int t=min(a.open, b.closed);
    r.max=a.max+b.max+t*2;
    r.open=a.open+b.open-t;
    r.closed=a.closed+b.closed-t;
    return r;
}

int main() {
    int m, n;
    scanf("%s\n%d", str, &m);
    n=strlen(str);
    for(int i=n; i<2*n; i++) {
        tree[i].max=0;
        if(str[i-n]=='(')
            tree[i].open=1;
        else
            tree[i].closed=1;
    }
    for(int i=n-1; i>0; i--)
        tree[i]=combine(tree[i*2], tree[i*2+1]);
    for(int i=0; i<m; i++) {
        int l, r;
        S gl={0, 0, 0}, gr={0, 0, 0};
        scanf("%d %d", &l, &r);
        l--;
        for(l+=n, r+=n; l<r; l/=2, r/=2) {
            if(l&1)
                gl=combine(gl, tree[l++]);
            if(r&1)
                gr=combine(tree[--r], gr);
        }
        printf("%d\n", combine(gl, gr).max);
    }

    return 0;
}