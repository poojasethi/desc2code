#include <bits/stdc++.h>
using namespace std;

struct node {
	int o, c, s;
	node() {o = c = s = 0;}
	node(int x, int y, int z) {o = x; c = y; s = z;}
	node operator + (node b) {
		node d;
		int t = min(o, b.c);
		d.s = s + b.s + t;
		d.o = o + b.o - t;
		d.c = c + b.c - t;
		return d;
	}
} t[4000004];

int N, Q, A, B;
char C, S[1000001];

node f(int i, int a, int b) {
	if (a == b - 1) S[a] == '(' ? t[i].o++ : t[i].c++;
	else t[i] = f(2 * i, a, (a + b) / 2) + f(2 * i + 1, (a + b) / 2, b);
	return t[i];
}

node q(int i, int a, int b, int x, int y) {
	if (a >= y || b <= x) return node(0, 0, 0);
	if (a >= x && b <= y) return t[i];
	return q(2 * i, a, (a + b) / 2, x, y) + q(2 * i + 1, (a + b) / 2, b, x, y);
}

int main() {
	scanf("%c", &C);
	while (C != '\n') S[N++] = C, scanf("%c", &C);
	f(1, 0, N);
	scanf("%d", &Q);
	for (int i = 0; i < Q; i++) {
		scanf("%d%d", &A, &B);
		printf("%d\n", q(1, 0, N, A - 1, B).s * 2);
	}
}
