#include <iostream>
#include <stack>
#include <vector>

using namespace std;

const int MAXN = 1e6 + 10;

string s;
int n;
int f[MAXN];
int ans[MAXN];
vector<pair<int, int> > q[MAXN];
stack<int> st;


void add(int i)
{
	for (i++; i < MAXN; i += i & (-i))
		f[i]++;
}

int get(int i)
{
	int ret = 0;
	for (i++; i > 0; i -= i & (-i))
		ret += f[i];
	return ret;
}

int main()
{
	cin >> s;
	cin >> n;
	for (int i = 0; i < n; i++)
	{
		int l, r;
		cin >> l >> r;
		l--;
		r--;
		q[l].push_back(make_pair(r, i));
	}
	for (int i = s.length() - 1; i >= 0; i--)
	{
		if (s[i] == ')')
			st.push(i);
		else if (!st.empty())
		{
			add(st.top());
			st.pop();
		}
		for (int j = 0; j < q[i].size(); j++)
			ans[q[i][j].second] = get(q[i][j].first);
	}
	for (int i = 0; i < n; i++)
		cout << ans[i] * 2 << endl;
	return 0;
}
			  	  	 		    	 				 	    			