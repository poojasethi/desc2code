#include <bits/stdc++.h>
using namespace std;
typedef struct node {
	int su,le,ri;
} node;
node a[2000006];
int n;
node fun(node left,node right) {
	node tmp;
	int x = min(left.le,right.ri);
	tmp.le = left.le+right.le-x;
	tmp.ri = left.ri+right.ri-x;
	tmp.su = left.su+right.su+x;
	return tmp;
}
void build() {
	for(int i=n-1;i>0;i--)
		a[i] = fun(a[i<<1],a[i<<1|1]);
}
int query(int l,int r) {
	l+=n,r+=n;
	node rig,lef;
	rig.le = rig.ri = rig.su = lef.le = lef.ri = lef.su= 0;
	while(l<r) {
		if(l&1) lef = fun(lef,a[l++]);
		if(r&1) rig = fun(a[--r],rig);
		l/=2;
		r/=2;
	}
	lef = fun(lef,rig);
	return lef.su;
}
int main() {
	int i,j,k,l,m,q;
	char c[1000006];
	cin>>c;
	n = strlen(c);
	for(i=0;i<n;i++)
		if(c[i]=='(') {
			a[i+n].su = a[i+n].ri = 0;
			a[i+n].le = 1;
		}
		else {
			a[i+n].su = a[i+n].le = 0;
			a[i+n].ri = 1;
		}
	build();
	cin>>q;
	while(q--) {
		cin>>j>>k;
		cout<<2*query(j-1,k)<<endl;
	}
	return 0;
}
