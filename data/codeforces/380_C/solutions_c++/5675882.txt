#include<iostream>
#include<cstdio>
#include<cmath>

using namespace std;

#define plus d123

string s;

struct my
{
    int x;
    int y;
    int z;
} tree[4000001]={0};

int m, l, r, n, j, i;

my plus(my x, my y)
{
    my z;
    z.z=min(x.x, y.y);
    z.x=x.x+y.x-z.z;
    z.y=x.y+y.y-z.z;
    z.z=2*z.z+x.z+y.z;
    return z;
}

my getans(int v, int lv, int rv, int l, int r)
{
    my x;
    x.x=0;
    x.y=0;
    x.z=0;
    int mid=(lv+rv)/2;
    if(lv>r||rv<l)return x;
    if(lv>=l&&rv<=r)return tree[v];
    return plus(getans(v*2, lv, mid, l, r), getans(v*2+1, mid+1, rv, l, r));
}

int main()
{
    cin>>s;
    n=s.length();
    j=1;
    while(j<n)
        j*=2;
    for(i=1;i<=n;i++)
        if(s[i-1]=='(')tree[i+j-1].x=1;else
        if(s[i-1]==')')tree[i+j-1].y=1;
    for(i=j-1;i>=1;i--)
        tree[i]=plus(tree[i*2], tree[i*2+1]);
    cin>>m;
    for(i=0;i<m;i++)
    {
        cin>>l>>r;
        cout<<getans(1, 1, j, l, r).z<<endl;
    }
}
