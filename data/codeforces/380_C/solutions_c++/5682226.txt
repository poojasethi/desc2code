#include <iostream>
#include <stack>
#include <vector>

using namespace std;

#define pii pair<int, int>
#define MAXN 1000010

int fen[MAXN];
int ans[MAXN];
void add(int i)
{
    for (i++; i < MAXN; i += i & (-i))
        fen[i]++;
}
int get(int i)
{
    int ans = 0;
    for (i++; i > 0; i -= i & (-i))
        ans += fen[i];
    return ans;
}
vector<pii> q[MAXN];
stack<int> st;
int main()
{
    ios_base::sync_with_stdio(false);
    string s;
    cin >> s;
    int n;
    cin >> n;
    for (int i = 0; i < n; i++)
    {
        int l, r;
        cin >> l >> r;
        l--, r--;
        q[l].push_back(pii(r, i));
    }
    for (int i = s.length() - 1; i >= 0; i--)
    {
        if (s[i] == ')')
            st.push(i);
        else if (!st.empty())
        {
            add(st.top());
            st.pop();
        }
        for (int j = 0; j < q[i].size(); j++)
            ans[q[i][j].second] = get(q[i][j].first);
    }
    for (int i = 0; i < n; i++)
        cout << ans[i] * 2 << endl;
}