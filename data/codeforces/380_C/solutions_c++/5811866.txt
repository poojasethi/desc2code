#include <cstdio>
#include <algorithm>
#include <iostream>
#include <string>
#define MAXN 1000005
#define mid ((bgn+end)/2)
using namespace std;
struct seq
{
	int sag,sol,tam;
}seg[MAXN*3];
seq yap(int a,int b,int c)
{
	seq pasta;
	pasta.sol=a;
	pasta.sag=b;
	pasta.tam=c;
	return pasta;
}
seq operator+(seq a,seq b)
{
	seq c;
	c.tam=min(a.sol,b.sag);
	a.sol-=c.tam;
	b.sag-=c.tam;
	c.tam+=a.tam+b.tam;
	c.sag=a.sag+b.sag;
	c.sol=a.sol+b.sol;
	return c;
}
int n,m,d[MAXN];
string str;
seq kur(int lvl,int bgn,int end)
{
	if (bgn==end) return seg[lvl]=(str[bgn]=='(') ? yap(1,0,0) : yap(0,1,0);
	return seg[lvl]=kur(lvl*2,bgn,mid)+kur(lvl*2+1,mid+1,end);
}
seq find(int lvl,int bgn,int end,int b,int e)
{
	if (b>end || e<bgn) return yap(0,0,0);
	if (b<=bgn && end<=e) return seg[lvl];
	return find(lvl*2,bgn,mid,b,e)+find(lvl*2+1,mid+1,end,b,e);
}
int main()
{
	cin >> str;
	n=str.size();
	kur(1,0,n-1);
	scanf("%d",&m);
	for (int i=1,a,b;i<=m;i++)
	{
		scanf("%d %d",&a,&b);
		printf("%d\n",2*find(1,0,n-1,a-1,b-1).tam);
	}
}
