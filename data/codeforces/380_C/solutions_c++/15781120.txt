#include <bits/stdc++.h>
using namespace std;
const int N = 1e6+5;
int t[N*2],o[N*2],c[N*2],n;
string s;
#define x first
#define y second
#define node pair<int,pair<int,int> >
#define pi pair<int,int>
void build(){
	int i,tmp;
	for(i=n;i<2*n;++i)
		if(s[i-n]=='(')++o[i];else ++c[i];
	for(i=n-1;i>=1;--i){
		tmp = min(o[i<<1],c[i<<1|1]);
		t[i]= (t[i<<1]+t[i<<1|1]+tmp);
		o[i]=o[i<<1]+o[i<<1|1]-tmp;
		c[i]= c[i<<1]+c[i<<1|1]-tmp;
	}
}
node merge(node a,node b){
	int tmp = min(a.y.x,b.y.y);
	node ret;
	ret.x= a.x+b.x+tmp;
	ret.y.x= a.y.x+b.y.x-tmp;
	ret.y.y= a.y.y+b.y.y-tmp;
	return ret;
}
node query(int l,int r){
	--l;
	node a,b;
	for(l+=n,r+=n;l<r;l>>=1,r>>=1){
		if(l&1)a= merge(a,node(t[l],pi(o[l],c[l]))),++l;
		if(r&1)--r,b= merge(node(t[r],pi(o[r],c[r])),b);
	}
	a = merge(a,b);
	return a;
}
int main(){
	cin>>s;int q,i,j,a,b;
	n= s.size();
	cin>>q;
	build();
	for(i=0;i<q;++i){
		cin>>a>>b;
		cout<<2*query(a,b).x<<endl;
	}
}
