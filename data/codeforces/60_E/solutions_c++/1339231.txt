#include<cstdio>
#include<iostream>
#include<cstring>
using namespace std;
#define F(i,l,r) for (i=l;i<=r;i++)
typedef long long llint;

llint k,x,y,s;
int i,n,P,Maxi,Mini,a[1000010];
llint g[2][2],c[2][2],t[2][2];


void multA()
{
	t[0][0]=(llint)g[0][0]*c[0][0]%P+(llint)g[0][1]*c[1][0]%P; t[0][0]%=P;
	t[0][1]=(llint)g[0][0]*c[0][1]%P+(llint)g[0][1]*c[1][1]%P; t[0][1]%=P;
	t[1][0]=(llint)g[1][0]*c[0][0]%P+(llint)g[1][1]*c[1][0]%P; t[1][0]%=P;
	t[1][1]=(llint)g[1][0]*c[0][1]%P+(llint)g[1][1]*c[1][1]%P; t[1][1]%=P;
	memcpy(g,t,sizeof(g));
}

void multB()
{
	t[0][0]=(llint)c[0][0]*c[0][0]%P+(llint)c[0][1]*c[1][0]%P; t[0][0]%=P;
	t[0][1]=(llint)c[0][0]*c[0][1]%P+(llint)c[0][1]*c[1][1]%P; t[0][1]%=P;
	t[1][0]=(llint)c[1][0]*c[0][0]%P+(llint)c[1][1]*c[1][0]%P; t[1][0]%=P;
	t[1][1]=(llint)c[1][0]*c[0][1]%P+(llint)c[1][1]*c[1][1]%P; t[1][1]%=P;
	memcpy(c,t,sizeof(c));
}

void pow(llint m)
{
	g[0][0]=g[1][1]=1;
	g[0][1]=g[1][0]=0;
	for (;m;m>>=1)
	{
		if (m&1) multA();
		multB();
	}
}

int main()
{	
	scanf("%d %I64d %I64d %d\n",&n,&x,&y,&P);
	F(i,1,n)
	{
		scanf("%d",&a[i]);
		s+=(llint)a[i];
	}
	Mini=a[1];
	Maxi=a[n];
	k=Maxi+Mini;
	s%=P;

	c[0][0]=3;c[0][1]=0;c[1][0]=c[1][1]=1;
	pow(x);
	s=(llint)s*g[0][0]%P-(llint)k*g[1][0]%P;
	s=(s+P)%P;
	
	c[0][0]=0;c[0][1]=c[1][0]=c[1][1]=1;
	pow(x);
	Maxi=(llint)a[n-1]*g[0][1]%P+(llint)a[n]*g[1][1]%P;
	k=Maxi+Mini;
	
	c[0][0]=3;c[0][1]=0;c[1][0]=c[1][1]=1;
	pow(y);
	s=(llint)s*g[0][0]%P-(llint)k*g[1][0]%P;
	s=(s+P)%P;
	printf("%I64d\n",s);
}
