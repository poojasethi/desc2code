#include <iostream>
#include <cstdio>
#include <algorithm>
#include <string>
#include <string.h>
#include <vector>
#include <set>
using namespace std;

typedef long long ll;
int Yuki[1000200];
ll n,x,y,mod;

struct matrix{
	ll a[2][2];
	matrix(){};
	matrix(int p1,int p2,int p3,int p4){
		a[0][0]=p1;
		a[0][1]=p2;
		a[1][0]=p3;
		a[1][1]=p4;
	}
	matrix operator *(const matrix& b){
		matrix ret(0,0,0,0);
		for (int k=0;k<2;++k)
			for (int i=0;i<2;++i)
				for (int j=0;j<2;++j)
					ret.a[i][j]=(ret.a[i][j]+a[i][k]*b.a[k][j])%mod;
		return ret;
	}
};

matrix ks(matrix a,ll k){
	if (k==1) return a;
	matrix c=ks(a,k/2);
	if (k&1) return c*c*a;
	else return c*c;
}

ll gao(){
	matrix t(0,1,1,1);
	matrix c=ks(t,x);
	ll ret=((Yuki[n-1]*c.a[0][1])%mod+(Yuki[n]*c.a[1][1])%mod)%mod;
	return ret;
}	

int main(){
	while (cin >> n >> x >> y >> mod){
		
		ll a1=0,a2=0;
		for (int i=1;i<=n;++i){
			scanf("%d",&Yuki[i]);
			if (i!=1 && i!=n) a2=(a2+Yuki[i])%mod;
			else a1=(a1+Yuki[i])%mod;
		}
		
		if (n==1) {
			cout << Yuki[1]%mod << endl;
			continue;
		}
		
		ll tmp=0;
		if (x!=0){
			matrix t(1,1,0,3);
			matrix c=ks(t,x);
			a2=((a1*c.a[0][1])%mod+(a2*c.a[1][1])%mod)%mod;
			a2=(a1+a2)%mod;
			ll Big=gao();
			a1=(a1-Yuki[n]+Big+mod)%mod;
			a2=(a2-a1+mod)%mod;
		}
		
		if (y!=0){
			matrix t(1,1,0,3);
			matrix c=ks(t,y);
			a2=((a1*c.a[0][1])%mod+(a2*c.a[1][1])%mod)%mod;
			a2=(a1+a2)%mod;
		}else a2=(a2+a1)%mod;

		cout << (a2+mod)%mod << endl;
	}
	return 0;
}
			
			
