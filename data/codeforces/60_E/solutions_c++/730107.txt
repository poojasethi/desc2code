#include <cstdio>
#include <cstring>
#include <iostream>
using namespace std;

#define LL long long

const   int N=1000010;

int     n,p,a[N];
LL      x,y,res[4],tres[4],map[4][4],m_[4][4],sum;

LL  Calc(LL x,LL y,LL t){
    memset(res,0,sizeof(res));
    memset(map,0,sizeof(map));
    
    res[1]=0,res[2]=1;
    map[1][2]=map[2][1]=map[2][2]=1;
    
    for (;t;t>>=1){
        if (t&1){
            memset(tres,0,sizeof(tres));
            for (int i=1;i<=2;i++)
            for (int j=1;j<=2;j++)
                tres[j]+=res[i]*map[i][j],tres[j]%=p;
            memcpy(res,tres,sizeof(res));
        }
        memset(m_,0,sizeof(m_));
        for (int k=1;k<=2;k++)
        for (int i=1;i<=2;i++)
        for (int j=1;j<=2;j++)
            m_[i][j]+=map[i][k]*map[k][j],m_[i][j]%=p;
        memcpy(map,m_,sizeof(map));
    }
    return  (res[1]*x%p+res[2]*y%p)%p;
}

LL  Mult(LL st,LL t,LL x,LL y){
    memset(res,0,sizeof(res));
    memset(map,0,sizeof(map));
    map[1][1]=3;
    map[2][1]=-1+p;
    map[3][1]=-1+p;
    map[2][2]=1;
    map[3][3]=1;
    res[1]=st%p;
    res[2]=x%p;
    res[3]=y%p;
    
    for (;t;t>>=1){
        if (t&1){
            memset(tres,0,sizeof(tres));
            for (int i=1;i<=3;i++)
            for (int j=1;j<=3;j++)
                tres[j]+=res[i]*map[i][j],tres[j]%=p;
            memcpy(res,tres,sizeof(res));
        }
        memset(m_,0,sizeof(m_));
        for (int k=1;k<=3;k++)
        for (int i=1;i<=3;i++)
        for (int j=1;j<=3;j++)
            m_[i][j]+=map[i][k]*map[k][j],m_[i][j]%=p;
        memcpy(map,m_,sizeof(map));
    }
    return  res[1];
}

int main(){
    cin >> n >> x >> y >> p;
    
    for (int i=1;i<=n;i++)
        scanf("%d",&a[i]),sum+=a[i],sum%=p;
    
    sum=Mult(sum,x,a[1],a[n]);
    sum%=p,sum=(sum+p)%p;
    sum=Mult(sum,y,a[1],Calc(a[n-1],a[n],x));
    cout << sum << endl;
    
    return 0;
}
