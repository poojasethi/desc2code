#include <iostream>
#include <vector>

using namespace std;

typedef long long int lint;

lint modulo;

struct entero{
  lint x;
  entero() {
    x=0;
  }
  entero(lint inx)
  {
    x=inx%modulo;
    if (x<0) x+=modulo;
  }
};

entero operator+(entero e1,entero e2)
{
  return e1.x+e2.x;
}

entero operator-(entero e1,entero e2)
{
  return e1.x-e2.x;
}

entero operator*(entero e1,entero e2)
{
  return e1.x*e2.x;
}

vector<vector<entero> > operator*(vector<vector<entero> > m1,
				vector<vector<entero> > m2)
{
  vector<vector<entero> > r(2,vector<entero> (2));
  for (int i=0;i<2;i++)
    for (int j=0;j<2;j++)
      for (int k=0;k<2;k++)
	r[i][j]=r[i][j]+m1[i][k]*m2[k][j];
  return r;
}

vector<entero> operator*(vector<vector<entero> > m,vector<entero> v)
{
  vector<entero> r(2);
  for (int i=0;i<2;i++)
    r[i]=r[i]+m[i][0]*v[0]+m[i][1]*v[1];
  return r;
}

vector<vector<entero> > eleva(vector<vector<entero> > m,lint e)
{
  if (e==0) {
    vector<vector<entero> > r(2,vector<entero> (2));
    r[0][0]=r[1][1]=1;
    return r;
  }
  if (e%2==0)
    return eleva(m*m,e/2);
  return m*eleva(m*m,e/2);
}

int main()
{
  lint n,x,y;
  cin>>n>>x>>y>>modulo;
  vector<lint> v(n);
  for (int i=0;i<n;i++)
    cin>>v[i];
  if (n==1) {
    cout<<v[0]%modulo<<endl;
  } else {
    entero d,p,g,gmenos1;
    for (int i=1;i<n-1;i++)
      d=d+v[i];
    p=v[0]+v[n-1];
    g=v[n-1];
    gmenos1=v[n-2];

    vector<vector<entero> > m1(2,vector<entero> (2));
    m1[0][0]=1;m1[0][1]=0;
    m1[1][0]=1;m1[1][1]=3;

    vector<vector<entero> > m2(2,vector<entero> (2));
    m2[0][0]=1;m2[0][1]=1;
    m2[1][0]=1;m2[1][1]=0;
    
    vector<entero> pd(2);
    pd[0]=p;
    pd[1]=d;
    pd=eleva(m1,x)*pd;
    
    vector<entero> gg(2);
    gg[0]=g;
    gg[1]=gmenos1;
    gg=eleva(m2,x)*gg;

    pd[0]=pd[0]+gg[0]-v[n-1];
    pd[1]=pd[1]+v[n-1]-gg[0];
    pd=eleva(m1,y)*pd;

    cout<<(pd[0]+pd[1]).x<<endl;
  }
}

