#include <cstdio>
#include <vector>
#include <algorithm>
#include <map>
#include <set>
#include <cmath>
#include <iostream>
#include <ctime>
#include <utility>
#include <string>
#include <memory.h>
using namespace std;

#define forn( i,n ) for ( int i=0; i<(int)(n); i++ )
#define sz(a) (int)((a).size())
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

struct M
{
  ll a[2][2];
};

int p;

void mul(const M& a, const M& b, M& c)
{
  forn (i, 2) forn (j, 2) c.a[i][j] = 0;
  forn (i, 2) forn (j, 2) forn (k, 2)
    c.a[i][j] = (c.a[i][j] + a.a[i][k]*b.a[k][j]) % p;  
}


void pow(M& a, ll n, M& c)
{
  M b;
  forn (i, 2) forn (j, 2) c.a[i][j] = i==j;
  for (; n>0; n>>=1)
  {
    if (n&1) 
    {
      b = c;
      mul(b, a, c);
    }
    b = a;
    mul(b, b, a);
  }
}



ll solve1(ll s, ll t, ll n)
{
  M a, c;
  a.a[0][0] = 3%p, a.a[0][1] = (p-1)%p;
  a.a[1][0] = 0%p, a.a[1][1] = 1%p;
  pow(a, n, c);
  s %= p, t %= p;
  ll res = (c.a[0][0]*s%p + c.a[0][1]*t%p)%p;
  return res;
}

ll solve2(ll x, ll y, ll n)
{
  M a, c;
  a.a[0][0] = 1%p, a.a[0][1] = 1%p;
  a.a[1][0] = 1%p, a.a[1][1] = 0;
  pow(a, n, c);
  x %= p, y %= p;
  ll res = (c.a[0][0]*x%p + c.a[0][1]*y%p)%p;
  return res;
}

int n;
ll x, y;

int main()
{
//  freopen("a.in", "r", stdin);
  
  cin >> n >> x >> y >> p;
  ll s = 0, t = 0;
  int a1, a2, a0;
  forn (i, n)
  {
    int x; scanf("%d", &x);
    if (i == 0 || i == n-1) t += x;
    if (i == n-2) a1 = x;
    if (i == n-1) a2 = x;
    if (i == 0) a0 = x;
    s += x;
  }
  if (n == 1)
  {
    s %= p;
    cout << s << endl;
    return 0;
  }
  ll sum = solve1(s, t, x);
  ll lst = solve2(a2, a1, x);
//  cout << sum << " " << lst << endl;
  ll res = solve1(sum, (lst+a0)%p, y);
  cout << res << endl;
  


  return 0;
}
