#include <iostream>
#include <cstdio>
using namespace std;

typedef long long ll;
ll p;

void mult(ll a[][2], ll b[][2])
{
	ll temp[2][2] = {0, 0, 0, 0};
	for(int i = 0; i < 2; ++i)
		for(int j = 0; j < 2; ++j)
			for(int k = 0; k < 2; ++k)
			{
				a[i][k] %= p;
				b[k][j] %= p;
				temp[i][j] += (a[i][k] * b[k][j]) % p;
				temp[i][j] %= p;
			}

	for(int i = 0; i < 2; ++i)
		for(int j = 0; j < 2; ++j)
			a[i][j] = temp[i][j];
}

void matpot(ll a[][2], ll e, ll vect[])
{
	ll tmp[2];
	while(e)
	{
		if(e & 1)
		{
			tmp[0] = ((vect[0] * a[0][0]) % p + (vect[1] * a[0][1]) % p) % p;
			tmp[1] = ((vect[0] * a[1][0]) % p + (vect[1] * a[1][1]) % p) % p;
			vect[0] = tmp[0];
			vect[1] = tmp[1];
		}
		mult(a, a);
		e /= 2;
	}
}

int main()
{
	int n;
	ll sum = 0, x, y, c = 0, m = 0, lo = 0, sol = 0;
	ll B[2][2] = {0, 1, 1, 1};
	cin >> n >> x >> y >> p;
	for(int i = 0; i < n; ++i)
	{
		ll a;
		cin >> a;
		sum += a;
		sum %= p;
		if(i == 0)
			m = a;
		if(i == n - 1)
			c = a;
		if(i == n - 2)
			lo = a;
	}
	sum %= p;
	ll A[2][2] = {3, p - 1, 0, 1};
	ll v[2] = {sum, (m + c) % p};

	matpot(A, x, v);

	ll v2[2] = {lo, c};
	matpot(B, x, v2);

	v[1] = (m + v2[1]) % p;
	A[0][0] = 3;
	A[0][1] = p - 1;
	A[1][0] = 0;
	A[1][1] = 1;

	matpot(A, y, v);

	cout << v[0] << endl;
	return 0;
}