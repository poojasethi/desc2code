#include <iostream>
#include <cstdio>
#define MAX (1ll<62)
using namespace std;

int N,expt;
long long int X,Y,MOD,P,sum,tmp,mini=MAX,maxi=0,A[70],t1,t2,S[1000005],t3,M[65][2][2],fib[2],T[2],L;
bool flag;

inline bool gen(){
  M[0][0][0] = 1;
  M[0][0][1] = 1;
  M[0][1][0] = 1;
  M[0][1][1] = 2;
  for(int a=1;a<65;++a){
    for(int i=0;i<2;++i)
      for(int j=0;j<2;++j)
        for(int k=0;k<2;++k){
          M[a][i][j] += (M[a-1][i][k]*M[a-1][k][j]);
          M[a][i][j] %= MOD; 
        }
    }
}

int main(){
    scanf("%d%I64d%I64d%I64d",&N,&X,&Y,&P);
    MOD = 2ll*P;
    gen();
    A[0] = 3;
    for(int i=1;i<=65;++i) A[i] = (A[i-1]*A[i-1])%MOD;
    for(int i=1;i<=N;++i){
        scanf("%I64d",&S[i]);
        sum += S[i];
    }
    sum %= MOD;
    t1 = 1;
    expt = 0;
    fib[0] = S[N-1];
    fib[1] = S[N];
    L = (X+1)/2ll;
    flag = ((X&1ll) == 0);
  expt = 0;
  while(L > 0){
    while( (1ll<<expt) < L) ++expt;
    while( (1ll<<expt) > L) --expt;
    L -= (1ll<<expt);
    T[0] = T[1] = 0;
    for(int i=0;i<2;++i)
      for(int j=0;j<2;++j){
        T[i] += (fib[j]*M[expt][i][j]);
        T[i] %= MOD;
      }
    fib[0] = T[0];
    fib[1] = T[1];
    }
    t3 = (fib[flag])%MOD;
    while(X > 0){
        while( (1ll<<expt) < X) ++expt;
        while( (1ll<<expt) > X) --expt;
        t1 = (t1*A[expt])%MOD;
        X -= (1ll<<expt);
    }
    tmp = (t1*sum)%MOD;
    t2 = ((S[1]+S[N])%MOD*(t1-1ll)+MOD)%MOD/2ll;
    tmp = tmp-t2;
    if(tmp < 0) tmp += MOD;
    sum = tmp;
    t1 = 1;
    while(Y > 0){
        while( (1ll<<expt) < Y) ++expt;
        while( (1ll<<expt) > Y) --expt;
        t1 = (t1*A[expt])%MOD;
        Y -= (1ll<<expt);
    }
    tmp = (t1*sum)%MOD;
    t2 = ((t3+S[1])%MOD*(t1-1ll)+MOD)%MOD/2ll;
    tmp = tmp-t2;   
    if(tmp < 0) tmp += MOD;
    printf("%I64d\n",tmp%P);
}
