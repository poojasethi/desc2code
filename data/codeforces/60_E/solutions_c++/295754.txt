#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <algorithm>
using namespace std;
#define forn(i,n) for(int i=0;i<(int)n;++i)
typedef long long ll;

const int N = (int)1e6;
ll a[N],n,x,y,p,sum;

struct mat
{
  ll a[4];
  mat(){memset(a,0,sizeof a);}
  mat(ll x, ll b, ll c, ll d)
  {
    a[0]=x;a[1]=b;a[2]=c;a[3]=d;
  }
};

mat operator *(mat &a, mat &b)
{
  mat c=mat();
  for(int i=0;i<4;i+=2)
    forn(j,2)
      forn(k,2)
        c.a[i|j]=(c.a[i|j]+a.a[i|k]*b.a[2*k+j])%p;
  return c;
}

mat deg(mat a, ll n)
{
  mat x=mat(1,0,0,1);
  for(int i=60;i>=0;i--)
  {
    x=x*x;
    if (n>>i&1)
      x=x*a;
  }
  return x;
}

inline ll phib(ll a, ll b, ll n)
{
  mat x = deg(mat(0,1,1,1),n);
  return (x.a[0]*b+x.a[1]*a)%p;
}

inline ll deg(ll a, ll n)
{
  return deg(mat(a,0,0,0),n).a[0];
}

inline ll sdeg(ll s, ll b, ll d)
{
  mat a = deg(mat(1,0,((-b%p)+p)%p,3),d);
  return (s*a.a[3]+a.a[2])%p;
}

int main()
{
  scanf("%I64d%I64d%I64d%I64d",&n,&x,&y,&p);
  forn(i,n)
    scanf("%I64d",&a[i]);
  ll mn=a[0],mx=0;
  if (n==1)
  {
    cout<<a[0]%p;
    return 0;
  };
  mx=phib(a[n-1],a[n-2],x+1);
  forn(i,n) 
    sum=(sum+a[i])%p;
  sum=sdeg(sum,a[0]+a[n-1],x);
  sum=sdeg(sum,mn+mx,y);
  cout<<sum;
}
