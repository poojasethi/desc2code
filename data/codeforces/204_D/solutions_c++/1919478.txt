#include <cstdio>
#include <iostream>
#include <string>
#include <cstring>
#include <algorithm>
using namespace std;

const int P = 1000000007;
const int maxn = 1111111;
typedef long long LL;
int sb[maxn],sw[maxn];
int sl[maxn],sr[maxn];
int fl[maxn],fr[maxn];
char str[1111111];

int main()
{
	int n,k;
	scanf("%d%d",&n,&k);
	scanf("%s",str+1);
	sl[0] = sr[n+1] = 1;
	for (int i = 1;i <= n;++i)
	{
		sw[i] = sw[i-1] + (str[i] == 'W');
		sl[i] = sl[i-1] * (1 + (str[i] == 'X')) % P;
	}
	for (int i = n;i >= 1;--i)
	{
		sb[i] = sb[i+1] + (str[i] == 'B');
		sr[i] = sr[i+1] * (1 + (str[i] == 'X')) % P;
	}
	for (int i = 1;i <= n;++i)
	{
		fl[i] = fl[i-1] * (1 + (str[i] == 'X')) % P;
		if (i >= k && sw[i] - sw[i-k] == 0 && str[i-k] != 'B')
		{
			fl[i] += sl[max(0,i-k-1)] - fl[max(i-k-1,0)];
			fl[i] = ((fl[i] % P) + P) % P;
		}
	}
	for (int i = n;i >= 1;--i)
	{
		fr[i] = fr[i+1] * (1 + (str[i] == 'X')) % P;
		if (i + k - 1 <= n && sb[i] - sb[i+k] == 0 && str[i+k] != 'W')
		{
			fr[i] += sr[min(n+1,i+k+1)] - fr[min(n+1,i+k+1)];
			fr[i] = ((fr[i] % P) + P) % P;
		}	
	}
	long long ans = 0;
	for (int i = k;i < n;++i)
	{
		if (sw[i] - sw[i-k] == 0 && str[i-k] != 'B')
		{
			LL t = sl[max(0,i-k-1)] - fl[max(i-k-1,0)];
			t = ((t % P) + P) % P;
			ans += t * fr[i+1];
			ans %= P;
		}
	}
	cout << ans << endl;
	return 0;
}
