#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 1001000;
const long long MOD = 1000000007LL;
int N, M;
char s[MAXN];
long long b[MAXN], bf[MAXN], bl[MAXN];
long long w[MAXN], wf[MAXN], wl[MAXN];

int main() {
	scanf("%d%d%s", &N, &M, &s[1]);
	for (int i = 1; i <= N; ++i) {
		b[i] = b[i - 1] + (s[i] == 'B');
		w[i] = w[i - 1] + (s[i] == 'W');
	}
	bf[0] = wf[N + 1] = 1LL;
	for (int i = 1; i <= N; ++i) {
		if (M <= i && w[i] - w[i - M] == 0 && s[i - M] != 'B') {
			bl[i] = i - M - 1 >= 0 ? bf[i - M - 1] : 1LL;
		}
		bf[i] = (bf[i - 1] * (s[i] == 'X' ? 2LL : 1LL) % MOD - bl[i] + MOD) % MOD;
	}
	for (int i = N; i >= 1; --i) {
		if (i + M - 1 <= N && b[i + M - 1] - b[i - 1] == 0 && s[i + M] != 'W') {
			wl[i] = i + M + 1 <= N + 1 ? wf[i + M + 1] : 1LL;
		}
		wf[i] = (wf[i + 1] * (s[i] == 'X' ? 2LL : 1LL) % MOD - wl[i] + MOD) % MOD;
	}
	long long ans = 0LL, o = 1LL;
	for (int i = N; i >= M + 1; --i) {
		if (s[i] == 'X') {
			(o *= 2LL) %= MOD;
		}
		(ans += bl[i - 1] * ((o - wf[i] + MOD) % MOD) % MOD) %= MOD;
	}
	cout << ans << endl;
	return 0;
}
