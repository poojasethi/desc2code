#include <cstdio>
#include <cstring>
#include <algorithm>
#define FOR(i,s,e) for (int i=(s); i<(e); i++)
#define FOE(i,s,e) for (int i=(s); i<=(e); i++)
#define FOD(i,s,e) for (int i=(s)-1; i>=(e); i--)
#define CLR(a,x) memset(a, x, sizeof(a))
#define N 1000005

const int MOD = 1000000007;
int n, m, ret;
int sum[N][3], pre[N], suf[N];
char s[N];
long long tmp;

void fix(int &x){x = (x % MOD + MOD) % MOD;}

int main(){
	scanf("%d%d%s", &n, &m, s + 1);

	FOE(i,1,n){
		FOR(j,0,3) sum[i][j] = sum[i-1][j];
		if (s[i] == 'X') sum[i][0]++;
		if (s[i] == 'B') sum[i][1]++;
		if (s[i] == 'W') sum[i][2]++;
	}

	pre[0] = 1;
	FOE(i,1,n){
		pre[i] = pre[i-1] * (1 + (s[i] == 'X'));
		if (i >= m && sum[i][2] == sum[i-m][2]){
			if (i == m) pre[i]--;
			else if (s[i-m] != 'B') pre[i] -= pre[i-m-1];
		}
		fix(pre[i]);
	}

	suf[n+1] = 1;
	FOD(i,n+1,1){
		suf[i] = suf[i+1] * (1 + (s[i] == 'X'));
		if (i+m-1 <= n && sum[i+m-1][1] == sum[i-1][1]){
			if (i+m-1 == n) suf[i]--;
			else if (s[i+m] != 'W') suf[i] -= suf[i+m+1];
		}
		fix(suf[i]);
	}

	ret = tmp = 0;
	FOD(i,n-m+1,m){
		if (s[i+1] == 'X') tmp = (tmp << 1) % MOD;

		if (sum[i+m][1] == sum[i][1]){
			if (i+m == n) tmp = (tmp + 1) % MOD;
			else if (s[i+m+1] != 'W') tmp = (tmp + suf[i+m+2]) % MOD;			
		}

		if (sum[i][2] == sum[i-m][2]){
			if (i == m) ret += tmp;
			else if (s[i-m] != 'B') ret += tmp * pre[i-m-1] % MOD;
			fix(ret);
		}
	}

	printf("%d\n", ret);
	return 0;
}
