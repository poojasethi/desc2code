#include <iostream>
#include <cstring>
using namespace std;
typedef long long ll;
const int MAXN=1000*1000+10, MOD=1000*1000*1000+7;
ll n,k,d0[MAXN],d1A[MAXN],d1B[MAXN],d2A[MAXN],d2B[MAXN];
ll sum[MAXN],lastA[MAXN],lastB[MAXN];
string s;
int main()
{
	cin >> n >> k >> s;
	for(int i=0;i<n;i++)
	{
		if(s[i]=='B')
			s[i]='A';
		if(s[i]=='W')
			s[i]='B';
	}
	d0[0]=1;
	for(int i=1;i<=n;i++)
		d0[i]=d0[i-1]*(s[i-1]=='X' ? 2 : 1)%MOD;
	for(int i=1;i<=n;i++)
	{
		lastA[i]=(s[i-1]=='A' ? i : lastA[i-1]);
		lastB[i]=(s[i-1]=='B' ? i : lastB[i-1]);
	}
	for(int i=1;i<=n;i++)
	{
		d1B[i]=(s[i-1] == 'A' ? 0 : d1B[i-1] + d1A[i-1])%MOD;
		sum[i]=(sum[i-1]+d1B[i])%MOD;
		if(s[i-1] == 'B')
			d1A[i] = 0;
		else
		{
			if(lastB[i]>i-k)
				d1A[i] = d1B[i-1] + d1A[i-1];
			else
				d1A[i]= d0[i-k] + sum[i-1] - sum[i-k];
		}
		d1A[i]%=MOD;
	}
	memset(sum,0,sizeof sum);
	for(int i=1;i<=n;i++)
	{
		d2A[i] = (s[i-1] == 'B' ? 0 : d2A[i-1] + d2B[i-1])%MOD;
		sum[i]=(sum[i-1] + d2A[i])%MOD;
		if(s[i-1] == 'A')
			d1B[i]=0;
		else
		{
			if(lastA[i]>i-k)
				d2B[i]=d2A[i-1] + d2B[i-1];
			else
				d2B[i]=d1B[i-k] + d1A[i-k] + sum[i-1] - sum[i-k];
		}
		d2B[i]%=MOD;
	}
	long long res = ( d2A[n] + d2B[n] ) % MOD;
	res+=MOD;
	res%=MOD;
	cout << res << endl;
	return 0;
}
