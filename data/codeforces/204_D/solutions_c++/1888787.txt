#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>
#define MAXN 1000005
#define MOD 1000000007

using namespace std;

int main ()
{
	int N, K;
	scanf("%d %d\n",&N,&K);
	static char s[MAXN];
	scanf("%s",s);
	int i, Z, S;
	static int two[MAXN];
	two[0] = 1;
	for (i = 1; i < MAXN; i++) two[i] = (two[i-1] * 2) % MOD;
	static int B[MAXN];
	static int b[2*MAXN];
	memset(b,0,sizeof(b));
	Z = MAXN;
	S = 1;
	b[Z] = 1;
	for (i = 0; i < N; i++)
	{
		if (s[i] == 'B')
		{
			Z--;
			b[Z] = 0;
			S = (S - b[Z+K] + MOD) % MOD;
		}
		else if (s[i] == 'X')
		{
			Z--;
			b[Z] = S;
			S = (S * 2) % MOD;
			S = (S - b[Z+K] + MOD) % MOD;
		}
		else
		{
			Z = MAXN;
			b[Z] = S;
		}
		B[i] = b[Z+K];
	}
	static int W[MAXN];
	static int w[2*MAXN];
	memset(w,0,sizeof(w));
	Z = MAXN;
	S = 1;
	w[Z] = 1;
	for (i = N-1; i >= 0; i--)
	{
		if (s[i] == 'W')
		{
			Z--;
			w[Z] = 0;
			S = (S - w[Z+K] + MOD) % MOD;
		}
		else if (s[i] == 'X')
		{
			Z--;
			w[Z] = S;
			S = (S * 2) % MOD;
			S = (S - w[Z+K] + MOD) % MOD;
		}
		else
		{
			Z = MAXN;
			w[Z] = S;
		}
		W[i] = w[Z+K];
	}
	int sum = 0;
	int res = 0;
	for (i = N-2; i >= 0; i--)
	{
		if (s[i+1] == 'X') sum = (sum * 2) % MOD;
		sum = (sum + W[i+1]) % MOD;
		res = (res + (int)(((long long int)(sum) * (long long int)(B[i])) % (long long int)(MOD))) % MOD;
	}
	printf("%d\n",res);
	return 0;
}
