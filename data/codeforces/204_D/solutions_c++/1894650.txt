#include <iostream>
#include <stdio.h>
#include <algorithm>
#include <queue>
#include <map>
#include <string.h>

const int N=2000010;
const int inf=0x3f3f3f3f;
const long long mod=1000000007ll;

using namespace std;

int n,k;
char s[N];
long long p[N],suml[N],sumr[N],b[N],w[N],sb[N],sw[N];

int main()
{
	p[0]=1;
	for(int i=1;i<N;i++) p[i]=p[i-1]*2%mod;
	scanf("%d%d%s",&n,&k,&s[1]);
	for(int i=1;i<=n;i++)
		suml[i]=suml[i-1]+(s[i]=='X');
	for(int i=n;i>=1;i--)
		sumr[i]=sumr[i+1]+(s[i]=='X');
	for(int i=1,l=0,r=0;i<=n;i++)
	{
		if(s[i]=='X' || s[i]=='B') r++;
		else l=r=i;
		if(r-l>=k && s[i-k]!='B') b[i]=p[(i<=k?0:suml[i-k-1])]-(i<=k?0:sb[i-k-1]);
		else b[i]=0;b[i]%=mod;
		if(s[i]=='X') sb[i]=(2*sb[i-1]+b[i])%mod;
		else sb[i]=(sb[i-1]+b[i])%mod;
	}
	for(int i=n,l=n+1,r=n+1;i>=1;i--)
	{
		if(s[i]=='X' || s[i]=='W') l--;
		else r=l=i;
		if(r-l>=k && s[i+k]!='W') w[i]=p[(i+k>=n?0:sumr[i+k+1])]-sw[i+k+1];
		else w[i]=0;w[i]%=mod;
		if(s[i]=='X') sw[i]=(2*sw[i+1]+w[i])%mod;
		else sw[i]=(sw[i+1]+w[i])%mod;
	}
	long long ret=0;
	for(int i=1;i<n;i++)
		ret+=b[i]*sw[i+1],ret%=mod;
	cout<<(ret+mod)%mod<<endl;
	return 0;
}

