#include <cstdio>

const int mod = 1000000007;
const int MAXN = 2000000;

int n, k, col;
int sw[MAXN], sb[MAXN];
char str[MAXN];

int twos[MAXN];

int putB[MAXN];
int db[MAXN];
int putW[MAXN];
int dw[MAXN];

int solvew()
{
	for (int u = n-k; u >= 0; u--)
	{
		db[u] = db[u+1];
		if (str[u] == 'X')
			if ((db[u]+=db[u+1])>=mod)
				db[u] -= mod;
		if (sw[u+k]-sw[u] == 0)
		{
			if (u+k<n && str[u+k]!='W')
				db[u] -= db[u+k+1];
			if (db[u] < 0) db[u] += mod;

			db[u] -= putB[u+1];
			if (db[u] < 0) db[u] += mod;
		}
		if (sw[u+k]-sw[u] == 0)
		{
			putB[u] = twos[u+k];
			db[u] += putB[u];
			if (db[u] >= mod) db[u] -= mod;
		}
	}

	for (int u = n-k; u >= 0; u--)
	{
		dw[u] = dw[u+1];
		if (str[u] == 'X')
			if ((dw[u]+=dw[u+1])>=mod)
				dw[u] -= mod;
		if (sb[u+k]-sb[u] == 0)
		{
			if (u+k<n && str[u+k]!='B')
				dw[u] -= dw[u+k+1];
			if (dw[u] < 0) dw[u] += mod;

		 	dw[u] -= putW[u+1];
		 	if (dw[u] < 0) dw[u] += mod;
		}

		if (sb[u+k]-sb[u] == 0)
		{
			putW[u] = db[u+k];
			dw[u] += putW[u];
			if (dw[u] >= mod) dw[u] -= mod;
		}
	}

	return dw[0];
}

int main()
{
	scanf("%d%d%s", &n, &k, str);
	for (int i = 0; i < n; i++)
		sw[i+1] = sw[i] + (str[i]=='B'),
		sb[i+1] = sb[i] + (str[i]=='W');
	twos[n] = 1;
	for (int i = n-1; i >= 0; i--)
	{
		twos[i] = twos[i+1];
		if (str[i]=='X')
		{
		 	twos[i] += twos[i];
		 	if (twos[i] >= mod) twos[i] -= mod;
		}
	}

	printf("%d\n", solvew());

	return 0;
}
