#include<iostream>
#include<cstdio>
using namespace std;

const int N = 1100000;
const int MOD = 1000000007;

int n, k, db[N], A[N], B[N], dw[N], nx[N], nw[N], nb[N], rez;
char a[N];

int main() {
	int i;
	
	//freopen("ttt", "r", stdin);
	
	cin >> n >> k >> a + 1;
	
	for(i = 1; i<=n; ++i) {
		nx[i] = nx[i - 1] + (a[i] == 'X' ? 1 : 0);
		nw[i] = nw[i - 1] + (a[i] == 'W' ? 1 : 0);
		nb[i] = nb[i - 1] + (a[i] == 'B' ? 1 : 0);
	}
	
	db[0] = 1;
	for(i = 1; i<=n; ++i) {
		
		db[i] = (1LL * db[i - 1] * (a[i] == 'X' ? 2 : 1))%MOD;
		
		if(i >= k && nw[i] - nw[i - k] == 0 && a[i - k] != 'B') {
			db[i] -= db[max(0, i - k - 1)];
			
			if(db[i] < 0)
				db[i] += MOD;
			
			B[i] = db[max(0, i - k - 1)];
		}
	}
	
	dw[n + 1] = 1;
	for(i = n; i; --i) {
		
		dw[i] = (1LL * dw[i + 1] * (a[i] == 'X' ? 2 : 1))%MOD;
		
		A[i] = (a[i] == 'X' ? (1LL * A[i + 1] * 2)%MOD : A[i + 1]);
		
		if(i + k - 1<=n && nb[i + k - 1] - nb[i - 1] == 0 && a[i + k] != 'W') {
			dw[i] -= dw[min(n + 1, i + k + 1)];
			
			if(dw[i] < 0)
				dw[i] += MOD;
			
			A[i] = (A[i] + dw[min(n + 1, i + k + 1)])%MOD;
		}
	}
	
	for(i = 1; i <=n; ++i)
		rez = (rez + 1LL * B[i] * A[i + 1])%MOD;
	
	cout << rez;
	
	return 0;
}
