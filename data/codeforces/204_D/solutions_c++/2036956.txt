#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;

typedef long long LL;

const int N = 1000050;
const LL modu = LL(1e9) + 7;

LL dw[N], db[N], tmp[N];
char str[N];
int n, k;

inline void build (char ty, LL f[])
{
	f[0] = tmp[0] = 1; str[0] = '%';
	for (int i = 1, cc = 0; i <= n; ++i)
	{
		if (str[i] != ty && str[i] != 'X') cc = 0; else ++cc;
		if (cc >= k && str[i - k] != ty) f[i] = tmp[(i == k) ? 0 : (i - k - 1)]; else f[i] = 0;
		tmp[i] = tmp[i - 1]; if (str[i] == 'X') tmp[i] = tmp[i] * 2 % modu;
		tmp[i] = (tmp[i] + modu - f[i]) % modu;
	}
}

int main ()
{
	scanf("%d%d", &n, &k);
	scanf("%s", str + 1);
	build('B', db);
	reverse(str + 1, str + 1 + n); build('W', dw);
	reverse(dw + 1, dw + n + 1); reverse(str + 1, str + n + 1);
	LL cur(0), res(0);
	for (int i = 1; i <= n; ++i)
	{
		if (str[i] == 'X') cur = cur * 2 % modu;
		cur = (cur + db[i]) % modu;
		res = (res + cur * dw[i + 1]) % modu;
	}
	printf("%d\n", int(res));
	return 0;
}

