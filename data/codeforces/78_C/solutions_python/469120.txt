# -*- coding: UTF-8 -*-

# from itertools import *
# from collections import defaultdict
from math import sqrt

# def gcd(a,b):
#     while b > 0: a,b = b, a%b
#     return a

# def baseN(num,b,numerals="0123456789abcdefghijklmnopqrstuvwxyz"):
#     return ((num == 0) and  "0" ) or ( baseN(num // b, b).lstrip("0") + numerals[num % b])

# T = input()
# St = raw_input()
n, m, k = map(int, raw_input().split())
# data2 = [ map(int, raw_input().split()) for i in xrange(T) ]
if n % 2 == 0:
    print "Marsel"
    exit()
else:
    for i in xrange(1, int(round(sqrt(m)))+1):
        if m % i == 0 and k<=i and i != m:
            print "Timur"
            exit()
        if m % i == 0 and k<=m/i and m/i != m:
            print "Timur"
            exit()
print "Marsel"
