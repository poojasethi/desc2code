#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
using namespace std;

const int MAXN = 111;
int n;
int ans;
int s;
int t[MAXN][MAXN];
int v[MAXN][MAXN];
int l[MAXN];

void init()
{
	scanf("%d%d",&n,&s);
	for(int i = 1; i <= n; ++i)
	{
		scanf("%d",&l[i]);
		for(int j = 1; j <= l[i]; j++)
		{
			scanf("%d%d",&v[i][j],&t[i][j]);
			t[i][j] += t[i][j - 1];
		}
	}
}

void solve()
{
	for(int x = 1; x < n; ++x)
		for(int y = x + 1; y <= n; ++y)
		{
			int i ,j;
			i = j = 1;
			int sx,sy,lst;
			sx = sy = lst = 0;
			int key;
			while(i <= l[x] || j <= l[y])
			{
				int nx = v[x][i];
				int ny = v[y][j];
				if(j > l[y] || (i <= l[x] && t[x][i] <= t[y][j]) ){
					key = t[x][i] - lst;
					lst = t[x][i];
					j += t[x][i] == t[y][j];
					++i;
				}
				else
				{
					key = t[y][j] - lst;
					lst = t[y][j];
					++j;
				}
				nx *= key;
				ny *= key;
				ans += (sx < sy && sx + nx > sy + ny) || (sx > sy && sx + nx < sy + ny);
				sx += nx;
				sy += ny;
				if(sx == sy)
					ans += (long long)(nx - ny) * (v[x][i] - v[y][j]) > 0;
			}
		}
	
	printf("%d\n",ans);
}

int main()
{
	init();
	solve();
	
	return 0;
}
