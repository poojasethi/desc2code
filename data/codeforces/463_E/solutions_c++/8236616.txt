#include <cstdio>
#include <vector>
#define N_max 123456

using namespace std;

int  n, m, ans;
int  val[N_max], fa[N_max];
vector <int>  G[N_max];

int gcd(int a, int b) {
	return b ? gcd(b, a%b) : a;
}

void build(int v, int fav) {
	fa[v] = fav;

	for (int i = 0; i < G[v].size(); i++)
		if (G[v][i] != fav) {
			fa[G[v][i]] = v;
			build(G[v][i], v);
		}
}

void addedge(int x, int y) {
	G[x].push_back(y);
}

void init() {
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)  scanf("%d", &val[i]);

	for (int i = 1; i <= n-1; i++) {
		int x, y;
		
		scanf("%d%d", &x, &y);
		addedge(x, y);
		addedge(y, x);
	}

	build(1, 0);
}

int query(int v) {
	int w=val[v];

	v = fa[v];
	while (v) {
		if (gcd(val[v], w) > 1)
			return v;

		v = fa[v];
	}

	return -1;
}

void solve() {
	for (int i = 1; i <= m; i++) {
		int tmp, v, w;

		scanf("%d", &tmp);

		if (tmp == 1) {
			scanf("%d", &v);
			printf("%d\n", query(v));
		}
		else {
			scanf("%d%d", &v, &w);
			val[v] = w;
		}
	}
}

int main() {
	init();
	solve();
}
