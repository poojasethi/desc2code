#include <bits/stdc++.h>

using namespace std;

#define maxn 100005

int n, q, c[maxn], d[maxn], tr[maxn];
vector<int> a[maxn];

void nap()
{
    int u, v;
    for (int i = 1; i < n; i++)
    {
        cin >> u >> v;
        a[u].push_back(v);
        a[v].push_back(u);
    }
}

void dfs(int u)
{
    d[u] = 1;
    for (int i = 0; i < a[u].size(); i++)
    {
        int v = a[u][i];
        if (!d[v])
        {
            tr[v] = u;
            dfs(v);
        }
    }
}

int gcd(int x, int y)
{
    return ((y == 0) ? x : gcd(y, x % y));
}

void calc()
{
    int u, v;
    cin >> u;
    v = u;
    u = tr[u];
    while (u != 0)
    {
        if (gcd(c[u], c[v]) > 1)
        {
            cout << u << '\n';
            return;
        }
        u = tr[u];
    }
    cout << -1 << '\n';
}

void up()
{
    int u, w;
    cin >> u >> w;
    c[u] = w;
}

int main()
{
    ios_base::sync_with_stdio(0);
    cin >> n >> q;
    for (int i = 1; i <= n; i++) cin >> c[i];
    nap();
    dfs(1);
    while (q--)
    {
        int type;
        cin >> type;
        if (type == 1) calc();
        else up();
    }
}
