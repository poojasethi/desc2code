#include<iostream>
#include<cstdio>
#include<set>
#include<vector>
#include<cmath>
#include<algorithm>
#include<map>
#define pb push_back
using namespace std;
const int N = 111111;
const int M = 2222222;
vector<int> edge[N];
int val[N];
int v, n, query;
int tail[M];
int father[N];
int gcd(int p, int q){
    if (q == 0) return p;
    return gcd(q,p % q);
}
void dfs(int u, int fa){
    father[u] = fa;
    for (int i = 0; i < edge[u].size(); i++)
    {
        v = edge[u][i];
        if (v == fa) continue;
        dfs(v, u);
    }
}
int ttry(int i){
    int ans = 0;
    for (int j = father[i]; j != 0; j = father[j])
        if (gcd(val[i], val[j]) > 1)
        {
            ans = j;
            break;
        }
    if (ans == 0) ans = -1;
    return ans;
}
int main(){
    scanf("%d%d", &n, &query);
    for(int i = 1; i <= n; i++)
        scanf("%d", &val[i]);
    for (int i = 1; i < n;i++)
    {
        int p, q;
        scanf("%d%d", &p, &q);
        edge[p].pb(q);
        edge[q].pb(p);
    }
    dfs(1, 0);
    for (int i = 1; i <= query; i++)
    {
        int p, q;
        scanf("%d%d", &p, &q);
        if (p == 1)
            printf("%d\n", ttry(q));
        else
        {
            scanf("%d", &p);
            val[q] = p;
        }
    }
}
