#include <cstring>
#include <cstdio>
using namespace std;
const int MAX = 100005;
int par[MAX], a[MAX], to[2 * MAX], prev[2 * MAX], head[MAX], cnt;
inline void add_edge(int u, int v)
{
	to[cnt] = v; prev[cnt] = head[u]; head[u] = cnt++;
	to[cnt] = u; prev[cnt] = head[v]; head[v] = cnt++;
}
void dfs(int p, int v)
{
	par[v] = p;
	for (int i = head[v]; i != -1; i = prev[i])
		if (to[i] != p)
			dfs(v, to[i]);
}
int gcd(int a, int b)
{
	return (a ? gcd(b % a, a) : b);
}
int main()
{
	memset(head, -1, sizeof(head));
	int n, q;
	scanf("%d %d", &n, &q);
	for (int i = 0; i < n; i++)
		scanf("%d", a + i);
	for (int i = 0; i < n - 1; i++)
	{
		int u, v;
		scanf("%d %d", &u, &v);
		u--, v--;
		add_edge(u, v);
	}
	dfs(-2, 0);
	while (q--)
	{
		int t;
		scanf("%d", &t);
		if (t == 1)
		{
			int v;
			scanf("%d", &v);
			v--;
			int x = par[v];
			while (x != -2 && gcd(a[x], a[v]) == 1)
				x = par[x];
			printf("%d\n", x + 1);
		}
		else
		{
			int v, w;
			scanf("%d %d", &v, &w);
			a[v - 1] = w;
		}
	}
	return 0;
}
