#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
#include<queue>
#include<vector>
#define MAX_N 100005
using namespace std;
int N,A[MAX_N],M,par[MAX_N];
vector<int> G[MAX_N];
void add_edge(int u,int v)
{
	G[u].push_back(v);
	G[v].push_back(u);
}
void dfs(int x,int last)
{
	for(int i=0;i<G[x].size();i++){
		if(G[x][i]==last)continue;
		par[G[x][i]]=x;
		dfs(G[x][i],x);
	}
}
int GCD(int a,int b)
{
	if(b==0)return a;
	return GCD(b,a%b);
}
int main()
{
	int i,j,k,u,v,x;
	scanf("%d %d",&N,&M);
	for(i=1;i<=N;i++){
		scanf("%d",&A[i]);
	}
	for(i=1;i<N;i++){
		scanf("%d %d",&u,&v);
		add_edge(u,v);
	}
	par[1]=0;
	dfs(1,-1);
	for(i=0;i<M;i++){
		scanf("%d",&x);
		if(x==1){
			scanf("%d",&u);
			int res=-1;
			for(j=par[u];j>0;j=par[j]){
				if(GCD(A[j],A[u])>1){
					res=j;
					break;
				}
			}
			printf("%d\n",res);
		}
		else if(x==2){
			scanf("%d %d",&u,&v);
			A[u]=v;
		}
	}
//	system("pause");
	return 0;
}