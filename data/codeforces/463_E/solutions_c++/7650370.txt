#include <bits/stdc++.h>
using namespace std;

const int N = 100010;

int n, q;
int a[N], par[N];
vector <int> ke[N];

void DFS(int u, int p) {
    par[u] = p;
    for(int i = 0; i < (int)ke[u].size(); i++) {
        int v = ke[u][i];
        if(v != p) DFS(v, u);
    }
}

int Get(int u, int x) {
    if(u == 0) return -1;
    return (__gcd(a[u], x) > 1) ? u : Get(par[u], x);
}

int main() {
    scanf("%d %d", &n, &q);
    for(int i = 1; i <= n; i++) scanf("%d ", a + i);
    for(int i = 1; i < n; i++) {
        int u, v;
        scanf("%d %d", &u, &v);
        ke[u].push_back(v);
        ke[v].push_back(u);
    }
    DFS(1, 0);
    while(q--) {
        int type, v;
        scanf("%d %d", &type, &v);
        if(type == 1) printf("%d\n", Get(par[v], a[v]));
        else scanf("%d", a + v);
    }
}
