#include <bits/stdc++.h>

using namespace std;

const int MAXN = 100005;

int n, q, a[MAXN], pa[MAXN];
vector< int> c[MAXN];

void dfs( int par, int u)
{
    pa[u] = par;
    for(int i = 0; i < c[u].size(); i ++)
    {
        int v = c[u][i];
        if (v == par) continue;
        dfs( u, v);
    }
}

int gcd(int a, int b)
{
    return (a % b) ? gcd( b, a % b) : b;
}
int rep(int x)
{
    int y = x;
    x = pa[x];
    while( x != -1)
    {
        if ( gcd( a[x], a[y]) > 1) return x;
        x = pa[x];
    }
    return -1;
}
int main()
{
    ios_base::sync_with_stdio(0);

    cin >> n >> q;
    for(int i = 1; i <= n; i ++) cin >> a[i];
    for(int i = 1; i < n; i ++)
    {
        int u, v;
        cin >> u >> v;
        c[u].push_back(v);
        c[v].push_back(u);
    }

    dfs( -1, 1);
    while(q --)
    {
        int type, v, w;
        cin >> type >> v;
        if (type == 2)
        {
            cin >> w;
            a[v] = w;
        }
        else cout << rep(v) << endl;
    }

    return 0;
}
