#include <iomanip>
#include <cstdio>
#include <map>
#include <queue>
#include <cstring>
#include <iostream>
#include <algorithm>
#include <vector>
#include <cmath>
#include <string>
using namespace std;
#define LL long long 
const int mod =1e8;
#define inf 0x1f1f1f1f
#define lson id<<1,l,mid  
#define rson id<<1|1,mid+1,r
const int maxn=1e5+10;
int n,q,d;
int edge[maxn<<1],head[maxn<<1],pa[maxn<<1],a[maxn];
int net[maxn<<1];
int gcd(int a,int b)
{
	return b==0?a:(gcd(b,a%b));
}

void add(int u,int v)
{
	edge[d]=v;
    net[d]=head[u];
	head[u]=d++;
}
void dfs(int u,int pre)
{
	pa[u]=pre;
	for(int i=head[u];i!=-1;i=net[i]){
		if(edge[i]!=pre) dfs(edge[i],u);
	}
}
int find(int v)
{
	int ans=-1;
	int t=pa[v];
	while(t)
	{
		int temp=gcd(a[v],a[t]);
		if(temp>1){
			ans=t;
			break;
		}
		t=pa[t];
	}
	return ans;
}
int main()
{
	while(scanf("%d%d",&n,&q)!=EOF)
	{
		memset(head,-1,sizeof(head));
		d=0;
		for(int i=1;i<=n;i++){
			scanf("%d",&a[i]);
		}
		int c1,c2,c3;
		for(int i=1;i<n;i++){
			scanf("%d%d",&c1,&c2);
			add(c1,c2);
			add(c2,c1);
		}
		dfs(1,0);
		for(int i=1;i<=q;i++){
			scanf("%d",&c1);
			if(c1==1)
			{
				scanf("%d",&c2);
				cout<<find(c2)<<endl;
			}
			else if(c1==2)
			{
				scanf("%d%d",&c2,&c3);
				a[c2]=c3;
			}
		}
	}
	return 0;
}
	 	 	 			  	 	  	  	 		   	