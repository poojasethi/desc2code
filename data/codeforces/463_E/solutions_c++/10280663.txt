#include <algorithm>
#include <cstdio>
#include <iostream>
#include <vector>

#define pb push_back

using namespace std;

const int MAXN=2000200;

int N,Q;
int pre[MAXN];
int val[MAXN];

vector<int> g[MAXN];

inline void dfs( int nd ){
	
	for( vector<int>::iterator it=g[nd].begin() ; it!=g[nd].end() ; it++ )
		if( *it!=pre[nd] ){
			pre[*it]=nd;
			dfs(*it);
		}
}

inline int query( int nd , int v ){
	
	if( nd==-1 )
		return -1;
	if( __gcd(val[nd],v)>1 )
		return nd;
	
	return query(pre[nd],v);
}
int main(){
	
	scanf("%d%d",&N,&Q);
	
	for( int i=1 ; i<=N ; i++ )
		scanf(" %d",val+i);
	
	for( int a,b,i=1 ; i<N ; i++ ){
		scanf("%d%d",&a,&b);
		g[a].pb(b);
		g[b].pb(a);
	}
	
	pre[1]=-1;
	dfs(1);
	
	while(Q--){
		
		int a,b;
		
		scanf("%d",&a);
		
		if( a==1 ){
			scanf("%d",&a);
			printf("%d\n",query(pre[a],val[a]));
		}
		else{
			scanf("%d%d",&a,&b);
			val[a]=b;
		}
		
	}
	
	return 0;
}