#include <algorithm>
#include <iostream>
#include <cstring>
#include <cstdio>
using namespace std;
const int N = 55;
const int maxn = 100010;

bool isq[maxn];
int a[maxn], f[maxn];
int head[2*maxn], next[2*maxn], val[2*maxn], tot;

int read()
{
	int num = 0;
	char c = getchar();
	while(!isdigit(c)) c = getchar();
	while(isdigit(c)) {
		num = num*10 + c-'0';
		c = getchar();
	}
	return num;
}

inline void addedge(int u, int v)
{
	++tot;
	next[tot] = head[u];
	val[tot] = v;
	head[u] = tot;
}

void dfs(int u, int fa)
{
	f[u] = fa;
	for(int i = head[u]; i; i = next[i]) {
		int v = val[i];
		if(v == fa) continue;
		dfs(v, u);
	}
}

int gcd(int a, int b)
{
	if(b == 0) return a;
	return gcd(b, a%b);
}

int main()
{
	int n, q, u, v; tot = 0;
	n = read(); q = read();
	for(int i = 1; i <= n; i++)
		a[i] = read();
	for(int i = 1; i < n; i++) {
		u = read(); v = read();
		addedge(u, v);
		addedge(v, u);
	}

	int op;
	dfs(1, 0);
	while(q--)
	{
		op = read();
		if(op == 1) {
			u = read(); v = a[u];
			int ans = -1, ansi = -1;
			for(int i = f[u]; i; i = f[i]) {
				int d = gcd(a[i], v);
				if(d > 1) {
					ansi = i;
					break;
				}
			}
			printf("%d\n", ansi);
		} else {
			u = read(); v = read();
			a[u] = v;
		}
	}
	return 0;
}