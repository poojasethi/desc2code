#include <cstdio>
#include <vector>
#include <algorithm>
using namespace std;
#define N 100001
#define pb push_back
typedef vector<int>::iterator IT;

vector<int> edge[N];

int fa[N],n,val[N];

int gcd(int a,int b)
{
    return b==0?a:gcd(b,a%b);
}

void dfs(int i)
{
    for (IT j=edge[i].begin();j!=edge[i].end();j++)
        if ((*j)!=fa[i])
        {
            fa[*j]=i;
            dfs(*j);
        }
}

int main()
{
    int q,a,b,c;
    scanf("%d%d",&n,&q);
    for (int i=1;i<=n;i++) scanf("%d",val+i);
    for (int i=1;i<n;i++)
    {
        scanf("%d%d",&a,&b);
        edge[a].pb(b);edge[b].pb(a);
    }
    fa[1]=0;
    dfs(1);
    while (q--)
    {
        scanf("%d",&a);
        if (a==1)
        {
            scanf("%d",&b);
            bool flag=0;
            for (int i=fa[b];i&&!flag;i=fa[i])
            {
                int g=gcd(val[b],val[i]);
                if (g>1)
                {
                    printf("%d\n",i);
                    flag=1;
                }
            }
            if (!flag) puts("-1");
        }
        else
        {
            scanf("%d%d",&b,&c);
            val[b]=c;
        }
    }
    return 0;
}
