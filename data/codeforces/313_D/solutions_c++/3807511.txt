#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;

const int N=311;
const int INF=0x7f7f7f7f;
typedef long long lli;
int cost[N][N];
lli f[N][N];

inline void Update(lli x,lli y,lli &a)
{
	if(x==INF) return;
	if(y==-1) return;
	if(a==-1) a=x+y;
	else a=min(a,x+y);
}

int main()
{
	ios::sync_with_stdio(false);
	int n,m,t; cin>>n>>m>>t;
	memset(cost,0x7f,sizeof(cost));
	for(int i=0;i<m;i++)
	{
		int a,b,c; cin>>a>>b>>c;
		cost[a][b]=min(cost[a][b],c);
	}
	for(int i=1;i<n;i++)
		for(int j=n-1;j>=i;j--)
			cost[i][j]=min(cost[i][j],cost[i][j+1]);
	memset(f,-1,sizeof(f));
	f[0][0]=0;
	for(int i=0;i<n;i++)
		for(int j=0;j<=i&&j<=t;j++)
		{
			Update(0,f[i][j],f[i+1][j]);
			for(int k=i+1;k<=n;k++)
				Update(cost[i+1][k],f[i][j],f[k][j+k-i]);
		}
	cout<<f[n][t]<<'\n';
	return 0;
}