#include <iostream>

using namespace std;

const long long INFINITY = 1000000000000;

long long dp[305][305], cost[305][305];

long long min(long long a, long long b)
{
	if (a < b)
		return a;
	return b;
}

int main()
{
	int n, m, k;
	cin >> n >> m >> k;
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= n; j++)
		{
			dp[i][j] = INFINITY;
			cost[i][j] = INFINITY;
		}
	for (int i = 0; i < m; i++)
	{
		int l, r, c;
		cin >> l >> r >> c;
		for (int j = l; j <= r; j++)
			cost[l][j] = min(cost[l][j], c);
	}
	dp[0][0] = 0;
	for (int i = 0; i <= n; i++)
		for (int j = 0; j <= k; j++)
		{
			if (0 < i)
				dp[i][j] = min(dp[i][j], dp[i - 1][j]);
			for (int t = 1; t <= j; t++)
				if (0 <= i - t)
					dp[i][j] = min(dp[i][j], dp[i - t][j - t] + cost[i - t + 1][i]);
		}
	if (dp[n][k] == INFINITY)
		cout << -1 << endl;
	else
		cout << dp[n][k] << endl;
}
