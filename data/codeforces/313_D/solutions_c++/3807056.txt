#include<iostream>
#include<cstring>
using namespace std;
const int N = 305;
long long dp[N][N],val[N][N];
void shift(long long &a,long long b){
	if(a==-1 || a > b) a= b;
}
int main(){
	int n,m,k;
	cin >> n >> m >> k;
	for(int i = 0; i < m; i++){
		int l,r,c;
		cin >> l >> r >> c;
		for(int i = l; i <= r; i++){
			if(val[i][r] == 0 || val[i][r] >= c)
				val[i][r] = c;
		}
	}
	memset(dp,-1,sizeof(dp));
	dp[0][0] = 0;
	for(int i = 1; i <= n; i++){
		for(int j = 0; j <= k; j++)
			dp[i][j] = dp[i-1][j];
		for(int j = 1; j <= k; j++)
			for(int p = i - 1; p >= i - j && p >= 0; p--) if(val[p+1][i] && dp[p][j - i + p] != -1){
				shift(dp[i][j], dp[p][j - i + p] + val[p+1][i]);
			}
		for(int j = k; j>=1; j--) if(dp[i][j] != -1){
			shift(dp[i][j-1],dp[i][j]);
		}
	}
	cout<< dp[n][k] <<endl;
}
