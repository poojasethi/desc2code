#include <bits/stdc++.h>
using namespace std;

const long long INF = (1LL*INT_MAX) << 10;
long long cost[310][310];
long long dp[310][310];

int main(){
	int N,M,K,s,e,c;
	cin >> N >> M >> K;
	fill(&cost[0][0],&cost[N + 1][0],INF);
	fill(&dp[0][0],&dp[N + 1][0],INF);
	for(int i = 0;i < M;i++){
		cin >> s >> e >> c;
		--s;
		cost[s][e] = min(cost[s][e],1LL*c);
	}
	for(int i = 0;i <= N;i++)
		for(int j = 1;j <= N;j++)
			cost[j][i] = min(cost[j][i],cost[j - 1][i]);
	for(int i = 0;i < N;i++){
		dp[i][0] = 0;
		for(int j = 0;j <= i;j++){
			if(dp[i][j] == INF) continue;
			dp[i + 1][j] = min(dp[i + 1][j],dp[i][j]);
			for(int K = i + 1;K <= N;K++)
				dp[K][j + K - i] = min(dp[K][j + K - i],dp[i][j] + cost[i][K]);
		}
	}
	long long  ans = INF;
	for(int i = K;i <= N;i++)
		ans = min(ans,dp[N][i]);
	if(ans == INF) ans = -1;
	cout << ans << "\n";
}