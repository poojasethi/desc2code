#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>
#define N 200005
#define Long long long
#define For(i,l,r) for(int i=l;i<=r;i++)
using namespace std;
struct rec{
    Long Hsize,Asize,Cople,Val,Ctrib;
    Long Lazy;
}E[N];
Long Ans;
int fa[N],lc[N],rc[N];
int pa[N],n; 
void Add(int t,Long Ret){
    if(!t) return;
    E[t].Lazy+=Ret;
    E[t].Asize+=Ret;
    E[t].Cople+=2*Ret*E[t].Hsize;
}
void Down(int t){
    if(!t) return;
    if(E[t].Lazy){
        Add(lc[t],E[t].Lazy);
        Add(rc[t],E[t].Lazy);
        E[t].Lazy=0;
    }
}
void Update(int t){
    if(!t) return;
    E[t].Ctrib=2*E[t].Hsize*E[t].Val;
    E[t].Ctrib+=E[lc[t]].Ctrib;
    E[t].Ctrib+=E[rc[t]].Ctrib;
}
void zig(int x){
    int y=fa[x],z=fa[y];
    fa[x]=z; fa[y]=x; fa[rc[x]]=y;
    lc[y]=rc[x]; rc[x]=y;
    if(lc[z]==y) lc[z]=x;
    if(rc[z]==y) rc[z]=x;
    Update(y);
}
void zag(int x){
    int y=fa[x],z=fa[y];
    fa[x]=z; fa[y]=x; fa[lc[x]]=y;
    rc[y]=lc[x]; lc[x]=y;
    if(lc[z]==y) lc[z]=x;
    if(rc[z]==y) rc[z]=x;
    Update(y);
}
int stk[N];
bool top(int x){return !fa[x] || (lc[fa[x]]!=x && rc[fa[x]]!=x);}
void Splay(int x){
    if(!x) return;
    int y,z=0;
    for(y=x;!top(y);y=fa[y]) stk[++z]=y; stk[++z]=y;
    for(;z;z--) Down(stk[z]);
    while(!top(x)){
        y=fa[x],z=fa[y];
        if(!top(y)){
            if(lc[z]==y){
                if(lc[y]==x) zig(y),zig(x);
                else zag(x),zig(x);
            }else{
                if(rc[y]==x) zag(y),zag(x);
                else zig(x),zag(x);
            }
        }else if(lc[y]==x) zig(x);else zag(x);
    }
    Update(x);
}
Long Calc(Long A,Long B){return 2*B*(A-B);}
int Find_L(int x){for(;x&&lc[x];x=lc[x]); Splay(x); return x;}
int Find_R(int x){for(;x&&rc[x];x=rc[x]); Splay(x); return x;}
int access(int x){
    int y=0,p;
    for(;x;y=x,x=fa[x]){
        Splay(x);
        p=rc[x]; rc[x]=0; p=Find_L(p);
        E[x].Hsize+=E[p].Asize;
        p=Find_L(y); rc[x]=p;
        E[x].Hsize-=E[p].Asize;
        
        Update(x);
    }
    return y;
}
void work(int x,Long Ret){
    Splay(x); 
    
    if(Ret>0){
        Ans+=E[x].Val*Calc(E[x].Asize+Ret,Ret);
        E[x].Cople+=Calc(E[x].Asize+Ret,Ret);
    }
    else{
        Ans-=E[x].Val*Calc(E[x].Asize,-Ret);
        E[x].Cople-=Calc(E[x].Asize,-Ret);
    }
    E[x].Asize+=Ret;
    E[x].Hsize+=Ret;
    E[x].Ctrib+=Ret*E[x].Val;
    Ans+=E[lc[x]].Ctrib*Ret; Add(lc[x],Ret);
}
void Link(int x,int y){
    Splay(x); fa[x]=y; access(y); work(y,E[x].Asize);
}
void Cut(int x,int y){
    access(y); Splay(x); fa[x]=0; work(y,-E[x].Asize);
}
void Move(int x,int y){
    if(x==y) return;
    access(x); int lca=access(y);
    if(lca==x) swap(x,y);
    Cut(x,pa[x]); Link(x,y); pa[x]=y;
}
void Modify(int x,Long Ret){
    access(x); Splay(x);
    Ans-=E[x].Cople*E[x].Val;
    E[x].Val=Ret;
    Ans+=E[x].Cople*E[x].Val;
    Update(x);
}char ch[5];
int main(){
    scanf("%d",&n);
    For(i,2,n) scanf("%d",&pa[i]);
    For(i,1,n){
        scanf("%I64d",&E[i].Val);
        Ans+=E[i].Val;
        E[i].Hsize=1;
        E[i].Asize=1;
        E[i].Cople=1;
        E[i].Ctrib=E[i].Val;
    }
    For(i,2,n) Link(i,pa[i]);
    
    printf("%.12lf\n",Ans/(1.0*n*n));
    int Q; scanf("%d",&Q);
    while(Q--){
        char ch[3]; int x,y; scanf("%s%d%d",ch,&x,&y);
        if(ch[0]=='P') Move(x,y);
        if(ch[0]=='V') Modify(x,y);
        printf("%.12lf\n",Ans/(1.0*n*n));
        
    }
}