#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <cmath>
#include <complex>
#include <string>
#include <sstream>
#include <algorithm>
#include <numeric>
#include <vector>
#include <queue>
#include <stack>
#include <functional>
#include <iostream>
#include <map>
#include <set>
using namespace std;
typedef pair<int,int> P;
typedef long long ll;
typedef vector<int> vi;
typedef vector<ll> vll;
#define pu push
#define pb push_back
#define mp make_pair
#define eps 1e-9
#define INF 2000000000
#define sz(x) ((int)(x).size())
#define fi first
#define sec second
#define SORT(x) sort((x).begin(),(x).end())
#define all(x) (x).begin(),(x).end()
#define EQ(a,b) (abs((a)-(b))<eps)
int N,Q;
int par[100100],link[100100];
P query[100100];
int find(int x)
{
	if(x==par[x])return x;
	else return par[x]=find(par[x]);
}
void unite(int a,int b)
{
	int nb = find(b);
	par[a]=nb;
	link[a]=b;
}
int main()
{
	cin >> N >> Q;
	int cnt=0;
	for(int i=1;i<=N;i++)par[i]=i;
	for(int i=0;i<Q;i++)
	{
		int type;
		scanf("%d",&type);
		if(type==1)
		{
			int x,y;
			scanf("%d %d",&x,&y);
			unite(x,y);
		}
		else if(type==2)
		{
			int x;
			scanf("%d",&x);
			query[++cnt]=P(x,find(x));
		}
		else
		{
			int c,p,i;
			scanf("%d %d",&p,&c);
			for(i=query[c].fi;i!=query[c].sec;i=link[i])if(i==p)break;
			if(i==p)puts("YES");
			else puts("NO");
		}
	}
	return 0;
}

