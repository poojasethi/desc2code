#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cstring>
using namespace std;
#define N 200000
int fa[N], d[N], A[N], p[N][20], g[N][20], T[N], Tm[N], u[N], v[N], cas[N], son[N], nxt[N], n, m, i, tot;
void Add(int fa, int x)
{
	nxt[x] = son[fa], son[fa] = x;
}
bool Check(int fa, int x, int time)
{
	if (d[x] < d[fa]) return false;
	int mx = 0;
	for (int i = 17; i >= 0; i--)
		if (d[p[x][i]] >= d[fa]) 
			mx = max(mx, g[x][i]), x = p[x][i];
	return mx <= time && x == fa;
}
void dfs(int x, int dep)
{
	d[x] = dep;
	for (int i = son[x]; i != -1; i = nxt[i]) dfs(i, dep + 1);
}
int main()
{
	memset(son, -1, sizeof(son));
	scanf("%d%d", &n, &m);
	for (i = 1; i <= m; i++)
	{
		scanf("%d%d", &cas[i], &u[i]);
     	if (cas[i] != 2) scanf("%d", &v[i]);
     	if (cas[i] == 1) fa[u[i]] = v[i], T[u[i]] = i, Add(v[i], u[i]);
     	if (cas[i] == 2) A[++tot] = u[i], Tm[tot] = i;
	}
	for (i = 1; i <= n; i++) if (fa[i] == 0) dfs(i, 1);
	for (i = 1; i <= n; i++) p[i][0] = fa[i], g[i][0] = T[i];
	for (i = 1; i <= 17; i++)
		for (int j = 1; j <= n; j++)
			p[j][i] = p[p[j][i - 1]][i - 1],
			g[j][i] = max(g[j][i - 1], g[p[j][i - 1]][i - 1]);
	for (i = 1; i <= m; i++)
		if (cas[i] == 3) 
			if (Check(u[i], A[v[i]], Tm[v[i]])) printf("YES\n");
			else printf("NO\n");
	return 0;
}