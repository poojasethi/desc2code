#include <bits/stdc++.h>

#define fi first
#define se second

using namespace std;

typedef pair <int,int> ii;
typedef pair <ii,int> ti;
int N,M,L[110000],D[110000],cnt,dad[110000],usd[110000],root;
ii ar[110000];
vector <int> v[110000];
vector <ti> q;

void f( int x ){
	L[x]=++cnt;
	for( int i=0 ; i<(int)v[x].size() ; i++ ) f( v[x][i] );
	D[x]=cnt;
}

int find( int x ){
	if( dad[x] == x ) return x;
	return dad[x]=find( dad[x] );
}

int main(){
	
	cin >> N >> M;
	
	for( int i=1,a,b,c ; i<=M ; i++ ){
		scanf(" %d %d",&a,&b);
		if( a == 2 ) q.push_back( ti( ii(a,b) , 0 ) );
		if( a == 3 ){
			scanf(" %d",&c);
			q.push_back( ti( ii(a,b) , c ) );
		}
		if( a == 1 ){
			scanf(" %d",&c);
			v[c].push_back( b );
			usd[b]=1;
			q.push_back( ti( ii(a,b) , c ) );
		}
	}
	for( int i=1 ; i<=N ; i++ ){
		dad[i]=i;
		if( !usd[i] ) f( i );
	}
	
	for( int i=0,x,y,a,c=0 ; i<(int)q.size() ; i++ ){
		a=q[i].fi.fi,x=q[i].fi.se,y=q[i].se;
		if( a == 1 ) dad[find(x)]=find(y);
		else if( a == 2 ){
			c++;
			ar[c].fi=find( x );
			ar[c].se=x;
		}
		else{
			int top=ar[y].fi,bot=ar[y].se;
			if( L[top] <= L[x] && D[x] <= D[top] && L[x] <= L[bot] && D[bot] <= D[x] ) puts("YES");
			else puts("NO");
		}
	}
	
	return 0;
	
}
