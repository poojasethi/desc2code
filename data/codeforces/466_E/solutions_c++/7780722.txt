#include<iostream>
#include<cstdio>
#include<cstring>
#include<cstdlib>
#include<cmath>
#include<algorithm>
#include<vector>
#define N 200005
#define LL long long
#define UI unsigned int
#define oo (1<<30)
using namespace std;
int dep[N],d[N],yyt[N];
vector<int> son[N];
int c[N],u[N],v[N],map[N],cnt;
int n,m,A[N],f[18][N],g[18][N];
void dfs(int t)
{
	if(!t) return ;
	for(UI i=0;i<son[t].size();i++){
	  dep[son[t][i]]=dep[t]+1;
		dfs(son[t][i]);
		}
}
bool lca(int x,int y,int mx)
{
	int i,ans=-oo;
	if(!x||!y) return false;
	if(dep[x]>dep[y]) return false;
	if(x==y) return true;
	for(i=17;i>=0;i--)
		if(dep[f[i][y]]>=dep[x])
			ans=max(ans,g[i][y]),y=f[i][y];
	return y==x&&ans<=mx;
}
int main()
{
	int i,j;
	scanf("%d %d",&n,&m);
	for(i=1;i<=m;i++){
		scanf("%d %d",&c[i],&u[i]);
		if(c[i]==2) map[++cnt]=u[i],yyt[cnt]=i;
		else scanf("%d",&v[i]);
		if(c[i]==1){
			f[0][u[i]]=v[i];
			g[0][u[i]]=i,d[u[i]]++;
			son[v[i]].push_back(u[i]);
		  }
	  }
	for(i=1;i<=n;i++) if(!d[i]) dep[i]=1,dfs(i);
	for(i=1;i<18;i++)
		for(j=1;j<=n;j++){
			f[i][j]=f[i-1][f[i-1][j]];
			g[i][j]=max(g[i-1][j],g[i-1][f[i-1][j]]);
		  }
	for(i=1;i<=m;i++)
		if(c[i]==3)
			if(lca(u[i],map[v[i]],yyt[v[i]]))
				printf("YES\n");
			else printf("NO\n");
	return 0;
}
