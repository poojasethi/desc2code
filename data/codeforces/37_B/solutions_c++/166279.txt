#include<cstdio>
#include<algorithm>
#include<vector>
using namespace std;

const int NMAX=1000;

struct scroll {
	int pow,dmg;
};

scroll data[NMAX];
int h,heap[NMAX];
vector<pair<int,int> > ans;

bool cmp(int p,int q) {
	return data[p].dmg<data[q].dmg;
}

int main() {
	int n,hpmax,reg;
	int hp;
	int al=101,bl;
	int dmg=0;
	int t=0;
	int i;
	scanf("%d%d%d",&n,&hpmax,&reg);
	for(i=0;i<n;i++)scanf("%d%d",&data[i].pow,&data[i].dmg);
	hp=hpmax;
	while(true) {
		bl=al;
		for(i=0;i<n;i++) {
			if(data[i].pow*hpmax>=hp*100&&data[i].pow<al) {
				heap[h++]=i;
				push_heap(heap,heap+h,cmp);
				bl=min(bl,data[i].pow);
			}
		}
		al=bl;
		if(h) {
			i=heap[0];
			pop_heap(heap,heap+h--,cmp);
			ans.push_back(make_pair(t,i+1));
			dmg+=data[i].dmg;
		}
		hp=hp-dmg+reg;
		if(hp>hpmax)hp=hpmax;
		t++;
		if(hp<=0) {
			puts("YES");
			printf("%d %d\n",t,ans.size());
			for(i=0;i<ans.size();i++)printf("%d %d\n",ans[i].first,ans[i].second);
			break;
		} else if(hp==hpmax&&h==0) {
			puts("NO");
			break;
		}
	}
	return 0;
}
