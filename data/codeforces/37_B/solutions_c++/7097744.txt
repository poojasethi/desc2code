#include <cstdio>
#include <algorithm>
#include <cstring>
#include <iostream>
#include <vector>
const int N = 1000 + 2;

struct node {
	int p, d;
};

bool vis[N] = {0};
int n, max, reg;
node a[N];
std::vector<int> t, id;

int main() {
	scanf("%d%d%d", &n, &max, &reg);
	for (int i = 0; i < n; ++i)
		scanf("%d%d", &a[i].p, &a[i].d);
	
	int hurt = 0, cur = max;
	int ans = -1;
	for (int i = 0;; ++i) {
		cur -= hurt;
		cur += reg;
		if (cur > max)
			cur = max;
			
		if (cur <= 0) {
			ans = i;
			break;
		}
		
		bool done = false;
		int v = -1, idx;
		for (int j = 0; j < n; ++j)
			if (!vis[j] && a[j].p * max >= 100 * cur) {
				if (a[j].d > v) {
					v = a[j].d;
					idx = j;
					done = true;
				}
			}
			
		if (!done && hurt <= reg)
			break;
		else if (!done) {
			continue;
		} else {
			t.push_back(i);
			id.push_back(idx + 1);
			hurt += v;
			vis[idx] = true;
		}
	}
	if (ans == -1)
		puts("NO");
	else {
		puts("YES");
		printf("%d %d\n", ans, t.size());
		for (int i = 0; i < t.size(); ++i) {
			printf("%d %d\n", t[i], id[i]);
		}
	}
	return 0;
}

   	  	   	  	   			   		