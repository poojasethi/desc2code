#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

const int MAXN = 1000 + 10;
int pow[MAXN];
int dmg[MAXN];
vector<int> has;

vector<int> out[2];

bool cmp(int i, int j){return pow[i] > pow[j];}

int main()
{
	int n, mx, rg;
	cin >> n >> mx >> rg;
	for(int i=1; i<=n; i++)
	{
		cin >> pow[i] >> dmg[i];
		has.push_back(i);
	}
	sort(has.begin(), has.end(), cmp);

	int t, hp, od;
	for(t=od=0, hp = mx; ; t++)
	{
		hp -= od;
		hp += rg;
		hp = min(hp, mx);
	
		if(hp <= 0)
		{
			cout << "YES" << endl;
			cout << t << " " << out[0].size() << endl;
			for(int i=0; i<out[0].size(); i++)
				cout << out[0][i] << " " << out[1][i] << endl;
			return 0;
		}

		if((has.empty() || pow[has[0]] * mx < 100*hp) && rg >= od)
			{
				cout << "NO" << endl;
				return 0;
			}

		int sel = -1;
		for(int i=0; i<has.size(); i++)
			if(pow[has[i]] * mx >= 100 * hp)
				if(sel == -1 || dmg[has[sel]] < dmg[has[i]])
					sel = i;
		if(sel != -1)
		{
			out[0].push_back(t);
			out[1].push_back(has[sel]);
			od += dmg[has[sel]];
			has.erase(has.begin() + sel);
		}
	}
	return 0;
}
