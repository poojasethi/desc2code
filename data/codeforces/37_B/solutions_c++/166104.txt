#include <iostream>
#include <fstream>
#include <vector>

using namespace std;

vector < pair <int,int> > res;

int n,vmax,reg;

int pow[2000];
int dmg[2000];

bool used[2000] = { };

int main()
{
	cin >> n >> vmax >> reg;
	for (int i = 0; i < n; i ++)
		cin >> pow[i] >> dmg[i];
	int dmgs = 0;
	int health = vmax;
	bool canuse = false;
	for (int i = 0; true; i ++)
	{
		health = min(vmax, health - dmgs + reg);
//		printf("Round %d. Boss has %d hp.\n",i,health);
		if (health <= 0)
		{
			printf("YES\n");
			printf("%d %d\n",i,res.size());
			for (int i = 0; i < res.size(); i ++)
				printf("%d %d\n",res[i].first,res[i].second);
			return 0;
		}
		int maxdmg = -1;
		int j1 = -1;
		for (int j = 0; j < n; j ++)
			if ((!used[j]) && (maxdmg < dmg[j]) && (pow[j] * vmax >= 100 * health))
			{
				j1 = j;
				maxdmg = dmg[j];
			}
		if (j1 == -1)
		{
			if (reg >= dmgs)
			{
				cout << "NO" << endl;
				return 0;
			}				
		}
		else
		{
//			printf("Using scroll %d. Damage %d\n",j1,dmgs + maxdmg);
			res.push_back(make_pair(i,j1 + 1));
			used[j1] = true;
			dmgs += maxdmg;
		}
	}
	return 0;
}
