from copy import *
class Node:
    def __init__(self,a,b): # a&b are both list
        self.s1=a
        self.s2=b
    def __rmul__(self,a):
        res=deepcopy(self)
        for i in xrange(len(res.s1)): res.s1[i]*=a
        for i in xrange(len(res.s2)): res.s2[i]*=a
        return res
    def __add__(self,a):
        return Node(self.s1+a.s1, self.s2+a.s2)
    def __sub__(self,a):
        return self + (-1) * a

A=Node([1],[])
B=Node([],[1])

a=input()
ss=raw_input()
s=""
p1,p2=0,0
for ch in ss:
    s+=ch
    if "a++"[p1]==ch: p1+=1
    if "++a"[p2]==ch: p2+=1
    if p1==3 or p2==3:
        s+=' '
        p1=0
        p2=0

s=s.replace("a++","A").replace("++a","B")
c=eval(s)
s1=c.s1
s2=c.s2
s=sorted(s1+s2)
ans=-sum(s1)
for i,j in zip(s,range(a+1,a+1+len(s))):
    ans+=i*j
print ans