#include <iostream>
#include <algorithm>
#include <vector>
#include <sstream>

using namespace std;

struct Summand {
  int coef;
  bool before;
  Summand(int c, bool b) : coef(c), before(b) {}
  bool operator < (const Summand &s) const {
    return coef < s.coef;
  }
};

int main() {
  int a;
  vector<Summand> smd;
  string str;
  streampos last_pos;
  cin >> a >> str;
  stringstream iss;
  if (str[0] != '-') iss << '+';
  iss << str;
  int coef;
  char sgn, ch;
  while (iss.good()) {
    iss >> sgn;
    last_pos = iss.tellg();
    if (iss >> coef) {
      iss >> ch;
    } else {
      iss.clear();
      iss.seekg(last_pos);
      coef = 1;
    }
    if (iss >> ch) {
      coef = sgn == '-' ? -coef : coef;
      smd.push_back(Summand(coef, ch == '+'));
      iss >> ch >> ch;
    }
  }
  sort(smd.begin(), smd.end());
  int sum = 0;
  for (int i = 0; i < smd.size(); i++) 
    sum += smd[i].coef * (smd[i].before ? ++a : a++);
  cout << sum;
  return 0;
}
