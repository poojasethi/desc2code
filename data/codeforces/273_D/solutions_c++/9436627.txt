#include<cstdio>
#include<cstring>
const int N = 160;
const int Mod = 1000000007;
int n,m;
int dp[N][N][N][2][2];
int map[N][N][2][2];
int ans=0;
void add(int &x,int y)
{
	x+=y;
	if(x>=Mod)
		x-=Mod;
}
void del(int &x,int y)
{
	x-=y;
	if(x<0)
		x+=Mod;
}
void zeng(int val,int s,int t,int x1,int x2,int y1,int y2)
{
	if(x1>x2)
		return;
	if(y1>y2)
		return;
	add(map[x1][y1][s][t],val);
	del(map[x2+1][y1][s][t],val);
	del(map[x1][y2+1][s][t],val);
	add(map[x2+1][y2+1][s][t],val);
}
void make(int x[2][2],int i,int j)
{
	zeng(x[0][0],0,0,i,j,i,j);
	zeng(x[1][0],1,0,1,i,i,j);
	zeng(x[1][0],0,0,i+1,j,i,j);
	zeng(x[0][1],0,1,i,j,j,n);
	zeng(x[0][1],0,0,i,j,i,j-1);
	zeng(x[1][1],0,1,i+1,j,j,n);
	zeng(x[1][1],1,1,1,i,j,n);
	zeng(x[1][1],1,0,1,i,i,j-1);
	zeng(x[1][1],0,0,i+1,j,i,j-1);
}	
int main()
{
	int i,j,k,s,t;
	scanf("%d%d",&n,&m);
	for(k=1;k<=m;k++)
	{
		for(i=1;i<=n;i++)
		{
			for(j=i;j<=n;j++)
			{
				dp[k][i][j][1][1]++;
				for(s=0;s<=1;s++)
				{
					for(t=0;t<=1;t++)
						add(ans,dp[k][i][j][s][t]);
				}
			}
		}
		memset(map,0,sizeof map);
		for(i=1;i<=n;i++)
		{
			for(j=i;j<=n;j++)
				make(dp[k][i][j],i,j);
		}
		for(s=0;s<=1;s++)
		{
			for(t=0;t<=1;t++)
			{	
				for(i=1;i<=n;i++)
				{
					for(j=1;j<=n;j++)
					{
						add(map[i][j][s][t],map[i][j-1][s][t]);
						add(map[i][j][s][t],map[i-1][j][s][t]);
						del(map[i][j][s][t],map[i-1][j-1][s][t]);
						if(i<=j)
							dp[k+1][i][j][s][t]=map[i][j][s][t];
					}
				}
			}
		}
	}
	printf("%d\n",ans);
	return 0;
}
