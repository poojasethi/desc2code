/*
 * Author:  Eyelids
 * Created Time:  2013/8/26 0:59:49
 * File Name: 273D.cpp
 */
#include<iostream>
#include<sstream>
#include<fstream>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<stack>
#include<map>
#include<set>
#include<bitset>
#include<algorithm>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cctype>
#include<cmath>
#include<ctime>
using namespace std;
const double eps(1e-8);
typedef long long lint;
#define clr(x) memset( x , 0 , sizeof(x) )
#define sz(v) ((int)(v).size())
#define rep(i, n) for (int i = 0; i < (n); ++i)
#define repf(i, a, b) for (int i = (a); i <= (b); ++i)
#define repd(i, a, b) for (int i = (a); i >= (b); --i)
#define clrs( x , y ) memset( x , y , sizeof(x) )
const int mod = (int)1e9 + 7;
lint ans;
int n, m;
lint a[155][155], b[155][155], c[155][155];
void Add(lint &a, lint b) {
        if (b < 0) b += mod;
        a = (a + b) % mod;
        ans += a;
        if (a >= mod) ans -= mod;
}

int main() {
        scanf("%d%d", &n, &m);
        for (int i = 0; i <= n; i ++)
            a[i][i] = a[i + 1][i] = 1;
        
        while (m --) {
            for (int i = 1; i < n - 1; i ++)
                for (int j = n - 1; j > i; j --)
                    Add(c[i][j], c[i - 1][j] + c[i][j + 1] - c[i - 1][j + 1] + a[i - 1][j + 1] + b[i - 1][j] + b[n - j - 1][n - i]);
            for (int i = n - 2; i >= 0; i --)
                for (int j = n - 1; j > i; j --)
                    Add(b[i][j], b[i + 1][j] + b[i][j + 1] - b[i + 1][j + 1] + a[i][j + 1]), ans += b[i][j];
            for (int i = n - 1; i >= 0; i --)
                for (int j = i + 1; j <= n; j ++)
                    Add(a[i][j], a[i + 1][j] + a[i][j - 1] - a[i + 1][j - 1]);
        }
        
        cout <<ans % mod<<endl;
        
        return 0;
}









	 	    	 			  	 	 	   	   	