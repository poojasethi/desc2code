#include <iostream>
#include <cstdio>
#include <string>
#include <algorithm>
#include <cstring>

using namespace std;

const char *fi="inp.txt";
const char *fo="out.txt";
const int MAXN=200;
const int MOD=1e9+7;

int f[MAXN][MAXN][2][2];

int add(int, int);

int main()
{
#ifndef ONLINE_JUDGE
	freopen(fi, "r", stdin);
	freopen(fo, "w", stdout);
#endif
	int n,m;
	scanf("%d%d", &n, &m);
	memset(f, 0, sizeof f);
	int i,k1,k2,c1,c2;	
	int res=0;
	for (k1=0; k1<m; ++k1)
		for (k2=k1; k2<m; ++k2)		
					f[k1][k2][1][1]=1;
	for (i=0; i<n; ++i)
	{		
		long long cnt=0;
		for (k1=0; k1<m; ++k1)
			for (k2=0; k2<m; ++k2)
				for (c1=0; c1<2; ++c1)
					for (c2=0; c2<2; ++c2)
						cnt = cnt + f[k1][k2][c1][c2];
		res = add(res, (cnt*(n-i))%MOD);
		for (k1=0; k1<m; ++k1)		//0=cai truoc loi ra, 1=cai truoc thut vo
			for (k2=k1+1; k2<m; ++k2)
				for (c2=0; c2<2; ++c2)
				{					
					f[k1+1][k2][0][c2] = add(f[k1+1][k2][0][c2], add(f[k1][k2][0][c2], f[k1][k2][1][c2]));
				}
		for (k1=0; k1<m; ++k1)
			for (k2=m-1; k2>k1; --k2)
				for (c1=0; c1<2; ++c1)
				{
					f[k1][k2-1][c1][0] = add(f[k1][k2-1][c1][0], add(f[k1][k2][c1][0], f[k1][k2][c1][1]));
				}
		for (k1=m-1; k1>0; --k1)
			for (k2=k1; k2<m; ++k2)
				for (c2=0; c2<2; ++c2)
				{
					f[k1-1][k2][1][c2] = add(f[k1-1][k2][1][c2], f[k1][k2][1][c2]);
				}
		for (k1=0; k1<m-1; ++k1)
			for (k2=k1; k2<m-1; ++k2)
				for (c1=0; c1<2; ++c1)
				{
					f[k1][k2+1][c1][1] = add(f[k1][k2+1][c1][1], f[k1][k2][c1][1]);
				}
	}
	printf("%d\n", res);
	return 0;
}

int add(int s1, int s2)
{
	s1 += s2;
	if (s1>=MOD) s1-=MOD;
	return (int)s1;
}