#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<cstring>
using namespace std;
#define pp 1000000007
#define N 155
int f[N][N][N][2][2],n,m,ans=0;
int mo(int x){return (x%pp+pp)%pp;}
void add(int &x,int y){ x+=y; x=mo(x); }
int calc(int i,int k1,int k2,int l1,int l2,int r1,int r2){
    return mo(f[i][l2][r2][k1][k2]-f[i][l1-1][r2][k1][k2]-f[i][l2][r1-1][k1][k2]+f[i][l1-1][r1-1][k1][k2]);
}
int main(){
    cin>>n>>m;
    for(int i=1;i<=n;i++){
      for(int l=1;l<=m;l++)
        for(int r=l;r<=m;r++){
                if(i==2 && l==2 && r==2){
                        int tt=0;
                        }
                add(f[i][l][r][0][0],calc(i-1,0,0,l,r,l,r)+1);
                
                add(f[i][l][r][1][0],calc(i-1,0,0,1,l-1,l,r));
                add(f[i][l][r][1][0],calc(i-1,1,0,1,l,l,r));
                
                add(f[i][l][r][0][1],calc(i-1,0,0,l,r,r+1,m));
                add(f[i][l][r][0][1],calc(i-1,0,1,l,r,r,m));
                
                add(f[i][l][r][1][1],calc(i-1,0,0,1,l-1,r+1,m));
                add(f[i][l][r][1][1],calc(i-1,0,1,1,l-1,r,m));
                add(f[i][l][r][1][1],calc(i-1,1,0,1,l,r+1,m));
                add(f[i][l][r][1][1],calc(i-1,1,1,1,l,r,m));
                }
    for(int k1=0;k1<2;k1++)
    for(int k2=0;k2<2;k2++)
    for(int l=1;l<=m;l++)
      for(int r=1;r<=m;r++){
      if(l<=r){
      add(ans,f[i][l][r][k1][k2]);
      }
      add(f[i][l][r][k1][k2],f[i][l-1][r][k1][k2]);
      add(f[i][l][r][k1][k2],f[i][l][r-1][k1][k2]);
      add(f[i][l][r][k1][k2],-f[i][l-1][r-1][k1][k2]);
      }
    }
    cout<<ans<<endl;
    return 0;
} 
