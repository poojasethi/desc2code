#include <cstdio>
#include <cstring>
using namespace std;

const int N = 152;
const int MOD = 1e9 + 7;

int f[N][N][2][2];
int g[N][N][2][2];
int n, m;

int cal(int ax, int bx, int ay, int by, int p, int q)
{
	if(ax>bx || ay>by) return 0;
	--ax, --ay;
	return ((g[bx][by][p][q] - g[ax][by][p][q]) % MOD - (g[bx][ay][p][q] - g[ax][ay][p][q]) % MOD) % MOD;
}

int main()
{
	scanf("%d%d", &n, &m);
	
	int ans(0);
	for(int i=1; i<=n; i++)
	{
		#define rep(fi,se) for(int fi=1; fi<=se; fi++)
		#define repp(fi,se) for(int fi=0; fi<se; fi++)
		rep(j,m) rep(i,j)
		{
			f[i][j][0][0] = 1 + cal(i, m, 1, j, 0, 0);
			f[i][j][0][1] = (cal(i, j, j+1, m, 0, 0) + cal(i, j, j, m, 0, 1)) % MOD;
			f[i][j][1][0] = (cal(1, i-1, i, j, 0, 0) + cal(1, i, i, j, 1, 0)) % MOD;
			f[i][j][1][1] = ((cal(1, i-1, j+1, m, 0, 0) + cal(1, i-1, j, m, 0, 1)) % MOD + 
			(cal(1, i, j+1, m, 1, 0) + cal(1, i, j, m, 1, 1)) % MOD) % MOD;
		}
		repp(x,2) repp(y,2) rep(i,m) rep(j,m)
		g[i][j][x][y] = ((g[i-1][j][x][y] + g[i][j-1][x][y]) % MOD - 
		(g[i-1][j-1][x][y] - f[i][j][x][y]) % MOD) % MOD;
		repp(x,2) repp(y,2) ans = (ans + g[m][m][x][y]) % MOD;
	}
	printf("%d\n", (ans + MOD) % MOD);
	
	return 0;
}
