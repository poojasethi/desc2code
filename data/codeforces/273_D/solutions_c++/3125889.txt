#include <cstdio>
#include <iostream>
#include <algorithm>
using namespace std;

const int MAXN = 151;
const int MOD = 1e9 + 7;
long long dp[2][2][2][MAXN][MAXN];

int main() {
	std::ios_base::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	long long ans = 0LL;
	int cur = 0, pre = 1;
	for (int i = 1; i <= n; ++i) {
		swap(cur, pre);
		for (int x = 0; x < 2; ++x) {
			for (int y = 0; y < 2; ++y) {
				for (int l = 1; l <= m; ++l) {
					for (int r = 1; r <= m; ++r) {
						dp[pre][x][y][l][r] += dp[pre][x][y][l - 1][r] + dp[pre][x][y][l][r - 1] - dp[pre][x][y][l - 1][r - 1];
					}
				}
			}
		}
		fill(dp[cur][0][0][0], dp[cur + 1][0][0][0], 0LL);
		for (int l = 1; l <= m; ++l) {
			for (int r = l; r <= m; ++r) {
				dp[cur][0][0][l][r] += 1LL;
				dp[cur][0][0][l][r] += dp[pre][0][0][r][r] - dp[pre][0][0][l - 1][r] - dp[pre][0][0][r][l - 1] + dp[pre][0][0][l - 1][l - 1];
				dp[cur][1][0][l][r] += dp[pre][0][0][l - 1][r] - dp[pre][0][0][l - 1][l - 1];
				dp[cur][1][0][l][r] += dp[pre][1][0][l][r] - dp[pre][1][0][l][l - 1];
				dp[cur][0][1][l][r] += dp[pre][0][0][r][m] - dp[pre][0][0][r][r] - dp[pre][0][0][l - 1][m] + dp[pre][0][0][l - 1][r];
				dp[cur][0][1][l][r] += dp[pre][0][1][r][m] - dp[pre][0][1][r][r - 1] - dp[pre][0][1][l - 1][m] + dp[pre][0][1][l - 1][r - 1];
				dp[cur][1][1][l][r] += dp[pre][0][0][l - 1][m] - dp[pre][0][0][l - 1][r];
				dp[cur][1][1][l][r] += dp[pre][1][0][l][m] - dp[pre][1][0][l][r];
				dp[cur][1][1][l][r] += dp[pre][0][1][l - 1][m] - dp[pre][0][1][l - 1][r - 1];
				dp[cur][1][1][l][r] += dp[pre][1][1][l][m] - dp[pre][1][1][l][r - 1];
			}
		}
		for (int l = 1; l <= m; ++l) {
			for (int r = l; r <= m; ++r) {
				ans += (dp[cur][0][0][l][r] %= MOD);
				ans += (dp[cur][0][1][l][r] %= MOD);
				ans += (dp[cur][1][0][l][r] %= MOD);
				ans += (dp[cur][1][1][l][r] %= MOD);
			}
		}
		ans %= MOD;
	}
	cout << ans << endl;
	return 0;
}
