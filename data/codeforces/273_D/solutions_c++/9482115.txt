#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <cmath>
#include <algorithm>
#define mod 1000000007
using namespace std;
typedef long long num;
typedef int arr[222][222];
typedef num arrl[222][222];

arr ff,fg,gf,gg;
arrl sff,sfg,sgf,sgg;
int n,m,i,j,k;
num ans;

inline num Sff(int x1,int x2,int y1,int y2)
{ return sff[x2][y2]+sff[x1-1][y1-1]-sff[x2][y1-1]-sff[x1-1][y2]; }
inline num Sfg(int x1,int x2,int y1,int y2)
{ return sfg[x2][y2]+sfg[x1-1][y1-1]-sfg[x2][y1-1]-sfg[x1-1][y2]; }
inline num Sgf(int x1,int x2,int y1,int y2)
{ return sgf[x2][y2]+sgf[x1-1][y1-1]-sgf[x2][y1-1]-sgf[x1-1][y2]; }
inline num Sgg(int x1,int x2,int y1,int y2)
{ return sgg[x2][y2]+sgg[x1-1][y1-1]-sgg[x2][y1-1]-sgg[x1-1][y2]; }

int main()
{
//	freopen("273D.in","r",stdin);
//	freopen("273D.out","w",stdout);
	
	scanf("%d%d",&n,&m);
	
	for (i=1;i<=m;i++)
		for (j=i;j<=m;j++)
			ff[i][j]=1;
	ans=m*(m+1)/2;
	
	for (i=2;i<=n;i++)
	{
		for (j=1;j<=m;j++)
			for (k=1;k<=m;k++)
			{
				sff[j][k]=sff[j][k-1]+sff[j-1][k]-sff[j-1][k-1]+ff[j][k];
				sfg[j][k]=sfg[j][k-1]+sfg[j-1][k]-sfg[j-1][k-1]+fg[j][k];
				sgf[j][k]=sgf[j][k-1]+sgf[j-1][k]-sgf[j-1][k-1]+gf[j][k];
				sgg[j][k]=sgg[j][k-1]+sgg[j-1][k]-sgg[j-1][k-1]+gg[j][k];
			}
		for (j=1;j<=m;j++)
			for (k=j;k<=m;k++)
			{
				ff[j][k]=(Sff(j,k,j,k)+1)%mod;
				fg[j][k]=(Sff(j,k,k+1,m)+Sfg(j,k,k,m))%mod;
				gf[j][k]=(Sff(1,j-1,j,k)+Sgf(1,j,j,k))%mod;
				gg[j][k]=(Sff(1,j-1,k+1,m)+Sfg(1,j-1,k,m)+Sgf(1,j,k+1,m)+Sgg(1,j,k,m))%mod;
				ans=(ans+ff[j][k]+fg[j][k]+gf[j][k]+gg[j][k])%mod;
			}
	}
	
	printf("%I64d",ans);
	
	return 0;
}

