//By momo
#include <cstdio>
#include <vector>
#include <algorithm>
#define N 160
#define M 1000000007
using namespace std;

long long dp[N][N][N][2][2], ans; int n, m;

int main (){
	scanf("%d%d", &n, &m);
	for(int i = 1; i <= m; i++){
		for(int j = 1; j <= n; j++){ // start from
			for(int k = j; k <= n; k++){ // stop at
				dp[i][j][k][0][0] = dp[i-1][j][k][0][0]+1;

				dp[i][j][k][0][1] = (dp[i-1][j][n][0][0]-dp[i-1][j][k][0][0]-dp[i-1][k+1][n][0][0]
								  + dp[i-1][j][n][0][1]-dp[i-1][j][k-1][0][1]-dp[i-1][k+1][n][0][1]) % M;
				
				dp[i][j][k][1][0] = (dp[i-1][1][k][0][0]-dp[i-1][j][k][0][0]-dp[i-1][1][j-1][0][0]
								  + dp[i-1][1][k][1][0]-dp[i-1][j+1][k][1][0]-dp[i-1][1][j-1][1][0]) % M;
				
				dp[i][j][k][1][1] = (dp[i-1][1][n][0][0]-dp[i-1][j][n][0][0]-dp[i-1][1][k][0][0]+dp[i-1][j][k][0][0]
								  + dp[i-1][1][n][0][1]-dp[i-1][j][n][0][1]-dp[i-1][1][k-1][0][1]+dp[i-1][j][k-1][0][1]
								  + dp[i-1][1][n][1][0]-dp[i-1][j+1][n][1][0]-dp[i-1][1][k][1][0]+dp[i-1][j+1][k][1][0]
								  + dp[i-1][1][n][1][1]-dp[i-1][j+1][n][1][1]-dp[i-1][1][k-1][1][1]+dp[i-1][j+1][k-1][1][1]) % M;
			}
		}
		for(int j = 1; j <= n; j++) for(int k = j; k <= n; k++) for(int p = 0; p < 2; p++) for(int q = 0; q < 2; q++)
			dp[i][j][k][p][q] = (dp[i][j][k][p][q]+dp[i][j][k-1][p][q])%M;
		for(int j = n; j >= 1; j--) for(int k = j; k <= n; k++) for(int p = 0; p < 2; p++) for(int q = 0; q < 2; q++)
			dp[i][j][k][p][q] = (dp[i][j][k][p][q]+dp[i][j+1][k][p][q])%M;
		for(int p = 0; p < 2; p++) for(int q = 0; q < 2; q++) ans = ans+dp[i][1][n][p][q];
	}
	printf("%I64d\n", (ans+M)%M);
}
