#include <cstdio>
#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <cstdlib>
#include <stack>
#include <memory.h>
using namespace std;

#define mod 1000000007

int f[160][2][2][160][160],ans,i,l,r,f1,f2,n,m,x1,y1,x2,y2,g1,g2,lx;
long long up;

inline int getsum(int idx,int f1,int f2,int x1,int x2,int y1,int y2){
	if(x1>x2)return 0;
	if(y1>y2)return 0;
	return (1LL*f[idx][f1][f2][x2][y2]-f[idx][f1][f2][x1-1][y2]-f[idx][f1][f2][x2][y1-1]+f[idx][f1][f2][x1-1][y1-1]+mod+mod)%mod;
}

inline void upd(int & a,int b){
	a+=b;
	a%=mod;
}

int main(){
//	freopen("in","r",stdin);
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++){
		for(f1=0;f1<2;f1++)for(f2=0;f2<2;f2++)for(l=1;l<=m;l++)for(r=l;r<=m;r++){
			if(!f1)x1=l,y1=m;else x1=1,y1=l;
			if(!f2)x2=1,y2=r;else x2=r,y2=m;
			for(g1=0;g1<=f1;g1++)for(g2=0;g2<=f2;g2++){
				if(f1==1&&g1==0)--y1;
				if(f2==1&&g2==0)++x2;
				up=getsum(i-1,g1,g2,x1,y1,x2,y2);
				up-=getsum(i-1,g1,g2,r+1,y1,x2,y2);
				up-=getsum(i-1,g1,g2,x1,y1,x2,l-1);
				upd(f[i][f1][f2][l][r],(up+10LL*mod)%mod);
				if(f1==1&&g1==0)++y1;
				if(f2==1&&g2==0)--x2;
			}
		}
		for(f1=0;f1<2;f1++)for(f2=0;f2<2;f2++)for(l=1;l<=m;l++)for(r=1;r<=m;r++){
			if(f1==0&&f2==0&&l<=r)upd(f[i][f1][f2][l][r],1);
			if(l<=r)upd(ans,f[i][f1][f2][l][r]);
			f[i][f1][f2][l][r]=(1LL*f[i][f1][f2][l][r]+f[i][f1][f2][l][r-1]+f[i][f1][f2][l-1][r]-f[i][f1][f2][l-1][r-1]+mod+mod)%mod;
		}
	}
	cout<<ans<<endl;
	return 0;
}