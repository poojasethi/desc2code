#include<cstdio>//DP f[j][k][l][r]取j到k列，之前最左最右列单调增减情况  左1非递增 右1非递减 
#include<iostream>
#include<algorithm>
#include<vector> 
using namespace std;
const int N=155,md=1000000007; 
int  f[N][N][2][2]; 
void add(int &a, int b) 
{
  a+=b;
  if(a>=md) a-=md;
}
int main()
{
    int i,j,k,l,r,n,m; 
    scanf("%d%d",&n,&m); 
    for(i=1;i<=m;++i)
     for(j=i;j<=m;++j)
      f[i][j][1][1]=1;//初始化
    int ans=0; 
    for(i=1;i<=n;++i)
    {
        long long cnt=0ll;
        for(j=1;j<=m;++j)
         for(k=1;k<=m;++k)
          for(l=0;l<=1;++l) 
           for(r=0;r<=1;++r) 
            cnt+=f[j][k][l][r];
        ans=(ans+cnt*(n-i+1))%md;     
        for(j=1;j<=m-1;++j)
         for(k=j+1;k<=m;++k)
          for(r=0;r<=1;++r)
           {
                add(f[j+1][k][0][r],f[j][k][0][r]);       //之前最左递增，此行必递增 
                add(f[j+1][k][0][r],f[j][k][1][r]);       //之前最左列非递增，此行可以递增    
           } 
        for(j=1;j<=m;++j)
         for(k=m;k>=j+1;--k)
          for(l=0;l<=1;++l)
          {
                add(f[j][k-1][l][0],f[j][k][l][0]);       //之前最右递减，此行必递减 
                add(f[j][k-1][l][0],f[j][k][l][1]);       //之前最右非递减，此行可以递减 
          }   
        for(j=m;j>=2;--j)
         for(k=j;k<=m;++k)
          for(r=0;r<=1;++r)
           add(f[j-1][k][1][r],f[j][k][1][r]);            //之前最左非递增，此行仍可非递增
        for(j=m;j>=1;--j)
         for(k=j;k<=m+1;++k)
          for(l=0;l<=1;++l)
           add(f[j][k+1][l][1],f[j][k][l][1]);            //之前最右非递减，此行仍可非递减 
    }   
    printf("%d\n",ans); 
    return 0; 
} 
