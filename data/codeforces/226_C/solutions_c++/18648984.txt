# include <bits/stdc++.h>

using namespace std;

typedef long long int LL;

LL m, l, r, k;

map <LL, LL> fib;
map <LL, bool> mark;

LL Fib(LL n) {
    if (n == 0) return 0;
    if (n == 1 || n == 2) return 1;
    if (mark[n]) return fib[n];

    if (n % 2 == 0) {
        n /= 2;
        fib[2 * n] = (Fib(n) % m) * ((2 * Fib(n + 1) - Fib(n)) % m);
        fib[2 * n] = ((fib[2 * n] % m) + m) % m;
        mark[2 * n] = true;
        return fib[2 * n];
    }
    n /= 2;
    fib[2 * n + 1] = ((Fib(n) * Fib(n)) % m) + ((Fib(n + 1) * Fib(n + 1)) % m);
    fib[2 * n + 1] = ((fib[2 * n + 1] % m) + m) % m;
    mark[2 * n + 1] = true;
    return fib[2 * n + 1];
}

bool check(LL x) {
    return (((r / x) - (l / x) - (l % x == 0 ? 0 : 1) + 1) >= k);
}

int main () {
    ios_base::sync_with_stdio(false);
    cin >> m >> l >> r >> k;
    LL ans = 1;
    for (LL i = 1; i * i <= r; i++) {
        if (check(i))
            ans = max(ans, i);
        if (check(r / i))
            ans = max(ans, r / i);
    }
    cout << Fib(ans) % m << endl;

    return 0;
}
