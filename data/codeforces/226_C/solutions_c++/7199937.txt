#include <cstring>
#include <iostream>
#include <algorithm>

using namespace std;

typedef long long LL;

LL m,l,r,k;
LL a[2][2]={
	{1,1},
	{1,0}
};
LL c[2][2]={
	{1,0},
	{0,1}
};

void mul(LL a[][2],LL b[][2],LL c[][2]){
	LL t[2][2];
	memset(t,0,sizeof(t));
	for(int i=0;i<2;i++)
		for(int j=0;j<2;j++)
			for(int k=0;k<2;k++)
				(t[i][j]+=a[i][k]*b[k][j])%=m;
	memcpy(c,t,sizeof(t));
}
void pow(LL t){
	for(;t;t>>=1,mul(a,a,a)) if(t&1) mul(c,a,c);
}
int main()
{
	cin >> m >> l >> r >> k;
	LL L=0,a;
	for(a=1;a*a<r;a++);
	for(LL i=1;i<=a;i++) if(r/i-(l-1)/i>=k) L=max(L,i);
	for(LL i=1;i<=a;i++) if(r/(r/i)-(l-1)/(r/i)>=k) L=max(L,r/i);
	pow(L-1);
	cout << c[0][0]%m << endl;
	return 0;
}
