//By momo
#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#define LL long long
using namespace std;

LL m;
LL ans[2][2], F[2][2], c[2][2];

void mul(LL a[2][2], LL b[2][2]){
	int i, j, k;
	for(i = 0; i < 2; i++) for(j = 0; j < 2; j++) c[i][j] = 0;
	for(i = 0; i < 2; i++) for(j = 0; j < 2; j++) for(k = 0; k < 2; k++){
		c[i][j] = (c[i][j] + (a[i][k] * b[k][j]) % m) % m;
	}
	for(i = 0; i < 2; i++) for(j = 0; j < 2; j++) a[i][j] = c[i][j];
}

void mxml(LL n){
	if(n == 1){ mul(ans, F); return; }
	mxml(n/2);
	if(n & 1){ mul(ans, ans); mul(ans, F); }
	else mul(ans, ans);
}

int main(){

	LL l, r, k;
	cin >> m >> l >> r >> k; l--;
	
	LL lb = 1, sq = sqrt(r);
	for(LL i = 1; i <= sq; i++){
		LL j = r/i;
		if(r/i - l/i >= k) lb = max(lb, i);
		if(r/j - l/j >= k) lb = max(lb, j);
	}
	
	if(lb == 1) return printf("%I64d\n", 1%m), 0;
	if(lb == 2) return printf("%I64d\n", 1%m), 0;

	  F[0][0] = 1,   F[0][1] = 1,   F[1][0] = 1,   F[1][1] = 0;
	ans[0][0] = 1, ans[0][1] = 0, ans[1][0] = 0, ans[1][1] = 1;
	mxml(lb-2);
	
	cout << (ans[0][0]%m + ans[0][1]%m) % m << endl;
}
