#include <iostream>
#include <algorithm>

using namespace std;
long long m,r,l,k;
long long a[2][2]={1,1,1,0};
long long b[2][2]={1,1,1,0};
long long c[2][2];
void times(long long a[2][2],long long b[2][2],long long c[2][2]){
	long long d[2][2];
	long long i,j,k;
	for (i=0;i<2;i++)
	for (j=0;j<2;j++){
		d[i][j]=0;
		for (k=0;k<2;k++)
		d[i][j]=(d[i][j]+a[i][k]*b[k][j]%m)%m;
	}
	for (i=0;i<2;i++)
	for (j=0;j<2;j++)
		c[i][j]=d[i][j];
}
void solve(long long k){
	if (k==1) return;
	solve(k/2);
	times(a,a,a);
	if (k%2==1) times(a,b,a);
	// cout<<"k= "<<k<<endl;
	// cout<<a[0][0]<<" "<<a[0][1]<<endl;
	// cout<<a[1][0]<<" "<<a[1][1]<<endl;
}
long long gans(long long x){
    if (x==1||x==2) return 1%m;
	solve(x-2);
	return (a[0][1]+a[0][0])%m;


}
main(){
	long long ans=0;
	long long i,t;
 	cin>>m>>l>>r>>k;
	
	for (i=1;i*i<=r;i++){
		t=i;
		if ((r/t-(l-1)/t)>=k) ans=max(ans,t);
		t=r/i;
		if ((r/t-(l-1)/t)>=k) ans=max(ans,t);
	}
	cout<<gans(ans)<<endl;
}