#include<stdio.h>
#include<vector>
#include<map>
#include<algorithm>
using namespace std;
typedef pair<long long,long long> P;
long long m,l,r,k;

long long calc(long long p){
    return r/p-(l-1)/p;
}

P dfs(P x){
    if(x.first==0)return P(0,1);
    long long a=x.first;
    P ret=dfs(P(a/2,a/2+1));
    long long p=ret.first;
    long long q=ret.second;
    if(a%2==0)return P((q*2-p+m)*p%m,(p*p+q*q)%m);
    else return P((p*p+q*q)%m,(p*2+q)*q%m);
}

long long fib(long long x){
    P ret=dfs(P(x/2,x/2+1));
    long long p=ret.first;
    long long q=ret.second;
    if(x%2==0)return (q*2-p+m)*p%m;
    else return (p*p+q*q)%m;
}

long long max(long long a,long long b){return a>b?a:b;}

int main(){
    scanf("%I64d %I64d %I64d %I64d",&m,&l,&r,&k);
    long long i;
    long long x=0;
    for(i=1;i*i<=r;i++){
        if(calc(i)>=k)x=max(x,i);
        if(calc(r/i)>=k)x=max(x,r/i);
    }
    printf("%I64d\n",fib(x));
    return 0;
}