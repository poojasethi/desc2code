#include <cstdio>
#include <cstring>
#include <cmath>
#include <algorithm>
#include <vector>
using namespace std;

#define FOR(it, c) for(__typeof((c).begin()) it = (c).begin(); it != (c).end(); it++)
#define SZ(c) ((int)(c).size())

typedef long long LL;
LL m, l, r, k;
void output(LL x) {
	LL A[2][2]={{1,1},{1,0}}, X[2]={0,1};
	while(x) {
		if(x%2) {
			LL P[2]={};
			P[0]=X[0]*A[0][0]+X[1]*A[0][1];
			P[1]=X[0]*A[1][0]+X[1]*A[1][1];
			X[0]=P[0]%m;
			X[1]=P[1]%m;
		}
		x/=2;
		LL C[2][2]={};
		for(int i=0;i<2;i++) for(int j=0;j<2;j++) for(int z=0;z<2;z++)
			C[i][j] = (C[i][j] + A[i][z]*A[z][j])%m;
		for(int i=0;i<2;i++) for(int j=0;j<2;j++) A[i][j]=C[i][j];
	}
	printf("%I64d\n", X[0]);
}

bool ok(LL x) {
	if(!x) return false;
	return (l-1)/x + k <= r/x;
}
int main(void) {
	scanf("%I64d%I64d%I64d%I64d", &m, &l, &r, &k);
	LL ans=0;
	for(LL i=1;i<=1000000;i++) {
		if(ok(i)) ans=max(ans, i);
		if(ok(r/i)) ans=max(ans, r/i);
	}
	output(ans);
	return 0;
}
