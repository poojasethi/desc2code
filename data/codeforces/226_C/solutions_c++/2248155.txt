#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
typedef unsigned __int64 lld;

void multi(lld a[2][2], lld b[2][2], lld m) {
	int i, j, k;
	lld c[2][2];
	for (i=0; i < 2; i++) {
		for (j=0; j < 2; j++) {
			c[i][j] = 0;
			for (k=0; k < 2; k++) {
				c[i][j] += a[i][k]*b[k][j];
			}
			c[i][j] %= m;
		}
	}
	for (i=0; i < 2; i++) {
		for (j=0; j < 2; j++)
			a[i][j] = c[i][j];
	}
}
lld cal(lld n, lld m) {
	lld s[2][2], t[2][2];
	s[0][0] = s[0][1] = s[1][0] = 1;
	s[1][1] = 0;
	t[0][0] = t[1][1] = 1;
	t[0][1] = t[1][0] = 0;
	n--;
	while (n) {
		if (n&1)
			multi(t, s, m);
		multi(s, s, m);
		n >>= 1;
	}
	return t[0][0]%m;
}
lld max(lld a, lld b) {
	return a > b ? a : b;
}
int main() {
	lld m, l, r, k, n=0;
	scanf("%I64u%I64u%I64u%I64u",&m,&l,&r,&k);
	l--;
	for (lld i=1; i <= 1000000 && i <= r; i++) {
		if (r/i - l/i >= k) 
			n = max(n, i);
		lld j = r/i;
		if (r/j - l/j >= k)
			n = max(n, j);
	}
	printf("%I64u\n",cal(n, m));
	return 0;
}