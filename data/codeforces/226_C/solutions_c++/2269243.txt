#include<iostream>
#include<algorithm>
#include<cstring>
#include<math.h>
#define fo(i, j, k) for(i=j;i<=k;++i)
using namespace std;
int m;
struct arr
{
	long long a[2][2];	
	friend arr operator * (arr x,arr y) 
      {
       int i,j,k; arr ans;
       memset(ans.a, 0, sizeof(ans.a));
       fo(i, 0, 1)  fo(j, 0, 1) fo(k, 0, 1)
	    { 
         ans.a[i][k]+=x.a[i][j]*y.a[j][k];
         ans.a[i][k]%=m;
        }
          return ans;
      }     
};
arr _base, now;
long long l,r,n,t,k;

void fib(long long n)
{
	if (n==1)
		now=_base;
	else{
		arr tmp;
		fib(n/2);
		now=now*now;
		if (n & 1)
		now=now*_base;
	}	
}

int main()
{
	int i,j;
	cin>>m>>l>>r>>k;
	fo (i, 1, 1000000) 
	{
		long long j=r/i;
		if ( i>n && r/i-(l-1)/i>=k ) n=i;
		if ( j>n && r/j-(l-1)/j>=k ) n=j;
	}
	if (n<3) 
		cout<< 1 % m<<endl;
	else
		{
			_base.a[0][1]=_base.a[1][0]=_base.a[1][1]=1;
			fib(n-2);
			cout<<(now.a[0][1]+now.a[1][1])%m<<endl;
		}
}
