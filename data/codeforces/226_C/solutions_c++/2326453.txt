#include <cstdio>
#include <iostream>
#include <cstring>
#include <cmath>

using namespace std;

#define LL long long

LL m, l, r, k;
LL base[2][2] = {1,1,1,0};

void mult(LL a[2][2], LL b[2][2], LL c[2][2])
{
	memset(c, 0, sizeof base);
	for (int i = 0; i < 2; ++i)
		for (int j = 0; j < 2; ++j)
			for (int k = 0; k < 2; ++k)
				c[i][j] = (c[i][j]+a[i][k]*b[k][j])%m;
}

void pow(LL pot, LL mat[2][2])
{
	if (pot == 1)
	{
		memcpy(mat, base, sizeof base);
		return;
	}
	if (pot&1)
	{
		LL aux[2][2];
		pow(pot-1, aux);
		mult(aux, base, mat);
	}
	else
	{
		LL aux[2][2];
		pow(pot/2, aux);
		mult(aux, aux, mat);
	}
}

LL fibo(LL low)
{
	if (low == 1) return 1%m;
	LL mat[2][2];
	pow(low-1, mat);
	return mat[0][0]%m;
}

LL calc(LL num)
{
	return r/num-(l-1)/num;
}

LL solve()
{
	LL lim = sqrt(r)+1;
	LL res = 0;
	for (LL i = 1; i <= lim; ++i)
	{
		if (calc(i) >= k) res = max(res, i);
		if (calc(r/i) >= k) res = max(res, r/i);
	}
	return fibo(res);
}

int main()
{
	cin >> m >> l >> r >> k;
	
	cout << solve() << endl;
	
	return 0;
}

