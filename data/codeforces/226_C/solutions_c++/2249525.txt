#include<cstdio>
#include<cstring>
#include<cmath>
#include<set>
#include<algorithm>
using namespace std;
#define LL long long
struct matrix
{
    LL b[2][2];
};
LL m;
matrix quickpow(matrix a,matrix b)/*¾ØÕó¿ìËÙÃÝ*/
{
    matrix ret;
    for(int i=0; i<=1; ++i)
    {
        for(int j=0; j<=1; ++j)
        {
            ret.b[i][j]=0;
            for(int k=0; k<=1; ++k)
            {
                ret.b[i][j]=(ret.b[i][j]+(a.b[i][k]*b.b[k][j]))%m;
            }
        }
    }
    return ret;
}
LL check(LL n)
{
    matrix a= {{{1,1},{1,0}}};
    matrix b= {{{1,0},{0,1}}};
    for(; n;)
    {
        if(n&1)
        {
            b=quickpow(a,b);
        }
        n=n>>1;
        a=quickpow(a,a);
    }
    return b.b[1][0];
}
int main()
{
    LL l,r,k,t;
    scanf("%I64d%I64d%I64d%I64d",&m,&l,&r,&k);
    LL idx=(r-1)/(k-1);
    for(;idx>1;)
    {
        if(r/idx-(l-1)/idx>=k) break;
        idx-=((r/idx+1)*idx-r+r/idx)/(r/idx+1);
    }
    printf("%I64d\n",check(idx));
    return 0;
}