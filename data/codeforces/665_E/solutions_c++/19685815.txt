#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<algorithm>
using namespace std;
typedef long long LL;
int a[1000100],n,k,ch[32000000][2],cnt=0,root,num[32000000];
LL ans;
int newnode()
{
	int now=++cnt;
	ch[now][0]=ch[now][1]=-1;
	return now;
}
void insert(int x)
{
	int i,p=root;
	for(i=30;i>=0;i--)
	{
		if(ch[p][(x&(1<<i))>>i]==-1)ch[p][(x&(1<<i))>>i]=newnode();
		p=ch[p][(x&(1<<i))>>i];num[p]++;
	}
	return;
}
int query(int x,int kk)
{
    int i,y,p=root,res=0;
	for(i=30;i>=0;i--)
	{
	    if(p==-1)return res;
		y=(x&(1<<i))>>i;
	    if((kk&(1<<i))!=0)p=ch[p][y^1];
	    else
		{
		    if(ch[p][y^1]!=-1)res+=num[ch[p][y^1]];
			p=ch[p][y];
		}
	}
	res+=num[p];return res;
}
int main()
{
	int i,j,k;
	scanf("%d%d",&n,&k);root=newnode();
	insert(0);
	for(i=1;i<=n;i++)
	{
	    scanf("%d",&a[i]);a[i]^=a[i-1];
		if(i>1)ans+=query(a[i],k);
		else if(a[i]>=k)ans++;
		insert(a[i]);
	} 
    cout<<ans<<endl;
	return 0;
}
     			  	  		 	 	 	  	  		  	