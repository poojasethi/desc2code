#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<cmath>
#include<algorithm>
#include<iostream>
#define N 30000100
#define maxn 1000010

using namespace std;

int ch[N][2],size[N],sum[maxn];
int n,m,tot,k;
long long ans;

void insert(int s)
{
	int now=1;
	for (int i=30;i>=0;i--)
	{
		int x=((s&(1<<i))!=0);
		if (!ch[now][x]) ch[now][x]=++tot;
		size[now]++;now=ch[now][x];
	}
	size[now]++;
}

bool check(int s,int i)
{
	return (s&(1<<i));
}

long long query(int x,int y)
{
	int now=1;
	long long ans=0;
	for (int i=30;i>=0;i--)
	{
		if (!now) break;
		bool p=check(x^y,i);
		if (check(y,i)==1) now=ch[now][p];
		else
		{
			ans+=size[ch[now][!p]];
			now=ch[now][p];
		}
	}
	return ans;
}

int main()
{
	scanf("%d%d",&n,&k);
	k--;
	for (int i=1;i<=n;i++)
	{
		int x;
		scanf("%d",&x);
		sum[i]=sum[i-1]^x;
	}
	tot=1;
	insert(0);
	for (int i=1;i<=n;i++)
	{
		ans+=query(sum[i],k);
		insert(sum[i]);
	}
	printf("%I64d\n",ans);
	return 0;
}

