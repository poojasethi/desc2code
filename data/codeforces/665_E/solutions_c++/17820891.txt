#include <bits/stdc++.h>
using namespace std;

    struct node {
        int val;
        node* c[2];

        node () { val = 0; c[0] = c[1] = 0; }
    };
    node* head;

class Trie {
public:
    Trie() {
        head = new node();
    }
    void insert(int a, node*& x = head, int on = 29) {
        if (!x) x = new node();
        x->val+=1;
        if (on==-1) return;
        insert(a,x->c[(a&(1<<on))>0],on-1);
    }
    int query(int a, int k, node* x = head, int on = 29) {
        if (!x) return 0;
        if (on==-1) return x->val;
        int res = 0;
        if (!(k&(1<<on)) && x->c[!(a&(1<<on))]) res+=x->c[!(a&(1<<on))]->val;
        return res+query(a,k,x->c[((k^a)&(1<<on))>0],on-1);
    }
};

int N, K;

int main() {

    scanf("%d%d",&N,&K); Trie t; t.insert(0);
    int prefix = 0; long long ans = 0;
    for (int i = 0, x; i < N; i++) {
        scanf("%d",&x); prefix ^= x;
        ans += t.query(prefix, K);
        //cout << ans << endl;
        t.insert(prefix);
    }

    printf("%I64d\n", ans);

    return 0;
}