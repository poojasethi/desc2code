#include <cstdio>
#include <algorithm>
#include <vector>

using namespace std;

#define all(a) (a).begin(),(a).end()
#define pb push_back
#define sz(a) ((int)(a).size())
#define mp make_pair
#define fi first
#define se second

typedef pair<int,int> pint;
typedef long long ll;
typedef vector<int> vi;


int n,k;
struct node
{
	node *c[2];
	int size;
	node():size(0)
	{
		c[0]=c[1]=0;
	}
} *root;

int get(node *n)
{
	return n?n->size:0;
}

void insert(int v)
{
	node *n=root;
	for (int bit=29; bit>=0; bit--)
	{
		int here=(v>>bit)&1;
		if (n->c[here]==0)
			n->c[here]=new node();
		n=n->c[here];
		n->size++;
	}
}

int query(int v)
{
	node *n=root;
	int ans=0;
	for (int bit=29; bit>=0; bit--)
	{
		if (!n)
			break;
		int here=(v>>bit)&1;
		int kh=(k>>bit)&1;
		if (kh==0)
		{
			ans+=get(n->c[1-here]);
			n=n->c[here];
		}
		else
			n=n->c[1-here];
	}
	return ans+get(n);
}

int main()
{
	root=new node();
	scanf("%d %d",&n,&k);
	ll ans=0;
	insert(0);
	int s=0;
	for (int i=1; i<=n; i++)
	{
		int a;
		scanf("%d",&a);
		s^=a;
		ans+=query(s);
		insert(s);
	}
	printf("%lld\n",ans);
	return 0;
}
