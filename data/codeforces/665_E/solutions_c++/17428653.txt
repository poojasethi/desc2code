#include <bits/stdc++.h>
using namespace std;

const int MAX = 1e6 + 5;
int n, k, sz, c[MAX * 30], trie[MAX * 30][2];

void add(int v) {
	int k = 0;
	for(int i = 29; i >= 0; i--) {
		int b = (v & 1 << i) > 0;
		
		if(trie[k][b] == -1)
			trie[k][b] = ++sz;
			
		k = trie[k][b];
		c[k]++;
	}
}

int getCnt(int v) {
	return v == -1 ? 0 : c[v];
}

int get(int v) {
	int cur = 0, ans = 0, pos = 0;
	for(int i = 29; i >= 0; i--) {
		if(pos == -1)
			break;
			
		int b = (v & 1 << i) > 0;
		
		if(cur + (1 << i) >= k) { //poner 0
			ans += getCnt(trie[pos][b ^ 1]);
			pos = trie[pos][b];
		}
		
		else {
			cur |= 1 << i;
			pos = trie[pos][b ^ 1];
		}
	}
	
	if(cur >= k)
		ans += getCnt(pos);
		
	return ans;
}

int main() {
	scanf("%d%d", &n, &k);
	
	memset(trie, -1, sizeof(trie));
	
	add(0);
	int t = 0; long long sol = 0;
	for(int i = 1; i <= n; i++) {
		int x; scanf("%d", &x);
		t ^= x;
		sol += get(t);
		add(t);
	}
	
	printf("%I64d\n", sol);
	return 0;
}
