#include <bits/stdc++.h>
using namespace std;

const int BIT = 29;

int n,k;

struct data{
	int sz;
	data *next[2];
	data(){
		sz = 0;
		memset(next , 0 , sizeof next);
	}
}*root;

int calc( data *pos , int bit , int val , int add ){
	if( add >= k ) 
		return pos -> sz;
	if( (1 << (bit + 1)) + add - 1 < k )
		return 0;
	int ret = 0;
	for( int i = 0 ; i < 2 ; i++ )
		if( pos -> next[i] )
			ret += calc(pos -> next[i] , bit - 1 , val , add | ((val >> bit & 1) ^ i) << bit);
	return ret;
}

inline void update( int val ){
	data *cur = root;
	for( int i = BIT ; i >= 0 ; i-- ){
		int go = val >> i & 1;
		if( !cur -> next[go] )
			cur -> next[go] = new data;
		cur = cur -> next[go];
		cur -> sz++;
	}
}

int main(){
	
	scanf("%d%d",&n,&k);
	
	root = new data;
	
	long long ans = 0;
	update(0);
	for( int i = 1 , cur = 0 , a ; i <= n ; i++ ){
		scanf("%d",&a);
		cur ^= a;
		ans += calc(root , BIT , cur , 0);
		update(cur);
	}
	
	printf("%lld\n",ans);
	
	return 0;
}
