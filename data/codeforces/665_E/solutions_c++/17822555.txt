#include <bits/stdc++.h>
using namespace std;

int N, K;

struct node {
    int val;
    node* l;
    node* r;

    node () { val = 0; l = r = 0; }
};

node* head;

void insert(int v, node*& x = head, int p = 29) {
    if (!x) x = new node();
    x->val += 1;
    
    if (p == -1) return;

    if (v&(1<<p))
        insert(v, x->r, p-1);
    else
        insert(v, x->l, p-1);
}

int query(int v, node* x = head, int p = 29) {
    if (!x) return 0;
    if (p == -1) return x->val;

    int res = 0;
    if ((K&(1<<p)) == 0) {
        int bit = (v&(1<<p));
        if ( bit && x->l) res += x->l->val;
        if (!bit && x->r) res += x->r->val;
    }

    if ((K^v)&(1<<p))
        return res + query(v, x->r, p-1);
    else 
        return res + query(v, x->l, p-1);
}

int main() {

    head = new node();

    scanf("%d%d",&N,&K); insert(0);
    int prefix = 0; long long ans = 0;
    for (int i = 0, x; i < N; i++) {
        scanf("%d",&x); prefix ^= x;

        ans += query(prefix); insert(prefix);
    }

    printf("%I64d\n", ans);

    return 0;
}