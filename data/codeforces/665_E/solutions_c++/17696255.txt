#include <stdio.h>
#include <memory.h>
#include <algorithm>
#include <map>
#include <vector>

using namespace std;

int his = 0, k = 0;
struct {
	int l, r, c;
} z[(1<<20) * 32] = { 0 };

void insert(int now) {
	int x = 0, i = 0;
	for (i = 30; i >= 0; i --) {
		if (now & (1<<i)) {
			if (z[x].r == 0) z[x].r = ++ his;
			x = z[x].r;
		}
		else {
			if (z[x].l == 0) z[x].l = ++ his;
			x = z[x].l;
		}
		z[x].c ++;
	}
}

int tt(int now) {
	int x = 0, you = 0, i = 0;
	for (i = 30; i >= 0; i --) {
		if (k & (1<<i)) {
			if (now & (1<<i)) {
				x = z[x].l;
			}
			else {
				x = z[x].r;
			}
		}
		else {
			if (now & (1<<i)) {
				if (z[x].l != 0) you += z[z[x].l].c;
				x = z[x].r;
			}
			else {
				if (z[x].r != 0) you += z[z[x].r].c;
				x = z[x].l;
			}
		}
		if (x == 0) break;
	}
	return you;
}

int main() {
	int n = 0, now = 0, i = 0, v = 0;
	long long ans = 0;
	while (scanf("%d%d", &n, &k) == 2) {
		k --;
		ans = 0;
		his = 0;
		memset(z, 0, sizeof(z));
		now = 0;
		insert(now);
		for (i = 0; i < n; i ++) {
			scanf("%d", &v);
			now ^= v;
			ans += tt(now);
			insert(now);
		}
		printf("%I64d\n", ans);
	}
	return 0;
}
