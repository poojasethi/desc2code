#include <cstdio>
#include <iostream>
#define MAX 30*1000000
using namespace std;
long long ans; 
int n,k,a[1000001];
struct trie
{
	int ch[MAX][2],tot;
	long long val[MAX];
	void build()
	{
		val[0] = 0;
		ans = 0;
		tot = 1;
	}
	int idx(int x)
	{
		int cnt = 0; 
		while(x)
		{
			cnt++;
			x>>=1;
		} 
		return cnt;
	}
	void insert(int s)
	{
		int u = 0;
		for(int i = 30;i >= 0;i--)
		{
			int v = ((1<<i) & s) ? 1 : 0;
			if(!ch[u][v]) ch[u][v] = tot++;
			u = ch[u][v];
			val[u]++;
		}
	}
	void find(int s)
	{
		int u = 0;
		for(int i = 30;i >= 0;i--)
		{
			int v = ((1<<i) & s) ? 1 : 0;
			if(((1<<i) & k) == 0) 
			{
				ans += val[ch[u][1 xor v]];
				u = ch[u][v];
			}
			else u = ch[u][1 xor v];
			if(!u) break; 
		}
		ans += val[u];
	}
} tree;
int main()
{
	tree.build();
	tree.insert(0);
	scanf("%d%d",&n,&k);
	for(int i = 1;i <= n;i++) 
	{
		scanf("%d",&a[i]);
		a[i] = a[i] ^ a[i-1];
		tree.find(a[i]);
		tree.insert(a[i]);
	}
	cout<<ans<<endl;
}
    								     			 	 					