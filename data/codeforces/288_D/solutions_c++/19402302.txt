#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int maxn = 80010;
vector<int> web[maxn];
LL dp[maxn], ans;
int n;
void dfs(int u, int fa) {
    dp[u] = 1;
    LL in = 0;
    for (int i = 0; i < web[u].size(); ++i) {
        int v = web[u][i];
        if (v == fa) continue;
        dfs(v, u);
        in += dp[u] * dp[v];
        dp[u] += dp[v];
    }
    ans -= in * (in + 2 * (dp[u]) * (n - dp[u]));
}
int main() {
    scanf("%d", &n);
    for (int i = 1; i < n; ++i) {
        int a, b;
        scanf("%d %d", &a, &b);
        web[a].push_back(b);
        web[b].push_back(a);
    }
    ans = (LL)n * (n - 1) / 2;
    ans = ans * ans;
    dfs(1, 0);
    printf("%I64d\n", ans);
    return 0;
}

		 		  	    	 	 	      	 						