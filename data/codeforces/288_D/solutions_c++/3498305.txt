#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cstring>
#include <vector>
using namespace std;

typedef long long ll;

ll i, j, k, x, y, z, n, m, ans;
vector<ll>e[80001];
ll size[80001];

void dfs(int x, int fa) {
	size[x] = 1;
	ll c1 = 0, c2 = 0;
	for (int i = 0; i < e[x].size(); ++i)
		if (e[x][i] != fa) {
			int j = e[x][i];
			dfs(j, x);
			size[x] += size[j];
			c1 += size[j];
			c2 += size[j] * size[j];
		}
	ll p1 = (c1 * c1 - c2) / 2 + c1;
	ans -= p1 * p1;
	ll p2 = size[x] * (n - size[x]);
	ans -= p2 * p1 * 2;
}

int main() {
	cin >> n;
	for (i = 1; i < n; ++i) {
		cin >> x >> y;
		e[x].push_back(y);
		e[y].push_back(x);
	}
	ans = n * (n - 1) / 2;
	ans = ans * ans;
	dfs(1, 0);
	cout << ans << endl;
	return 0;
}
