// adapted from msg555
#include <iostream>
#include <vector>
#include <string>
#include <cstring>
#include <algorithm>

using namespace std;

typedef unsigned long long bigint;

bigint N;
bigint result = 0;
vector<int> E[80010];

bigint solve(int u, int p) {
  bigint ret = 1, inner = 1;
  for(int i = 0; i < E[u].size(); i++) {
    int v = E[u][i];
    if(v != p) {
      bigint cur = solve(v, u);
      ret += cur;
      inner += cur*cur;
    }
  }
  bigint pairs = ret*ret - inner;
  result += (4*ret*(N-ret) + pairs) * pairs;
  return ret;
}

int main() {
  int nn; cin >> nn;
  N = nn;
  for(int i = 1; i < nn; i++) {
    int u, v; cin >> u >> v;
    u--; v--;
    E[u].push_back(v);
    E[v].push_back(u);
  }

  solve(0, -1);
  cout << (N * (N - 1) * N * (N - 1) - result) / 4 << endl;
  return 0;
}