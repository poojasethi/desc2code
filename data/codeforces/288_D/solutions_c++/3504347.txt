#include <iostream>
#include <vector>

#define MAXN 80005

using namespace std;

vector<int> a[MAXN];
long long n, res, c[MAXN], d[MAXN];

int dfs1(int u)
{
  c[u] = 1;
  d[u] = 0;
  for (int i = 0; i < a[u].size(); i++)
    if (!c[a[u][i]])
    {
      int v = a[u][i];
      dfs1(v);
      res += d[v] * (n - c[v]) * (n - c[v] - 1) / 2;
      d[u] += c[u] * c[v];
      c[u] += c[v];
    }
}

int dfs2(int u, int v)
{
  if (u)
  {
    long long p = c[v] * (n - c[v]);
    res += (d[u] - p) * c[v] * (c[v] - 1) / 2;
    d[v] += p;
  }
  
  for (int i = 0; i < a[v].size(); i++) 
    if (u != a[v][i]) dfs2(v, a[v][i]);
}

main()
{
  cin >> n;
  for (int i = 1; i < n; i++)
  {
    int u, v;
    cin >> u >> v;
    a[u].push_back(v);
    a[v].push_back(u);
  }
  
  dfs1(1);
  dfs2(0, 1);
    
  cout << res;
  
//  system("pause");
}
