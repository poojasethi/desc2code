#include <stdio.h>
#include <stdlib.h>
#include <algorithm>
#include <string.h>
#include <queue>
#include <iostream>
#include <vector>

using namespace std;

const int inf=0x3f3f3f3f;
const int N=100010;
const int mod=1e9+7;

#define pb push_back
#define sz(x) ((x).size())

vector<int> vt[N];

unsigned long long ret,sum[N],n;

void dfs(int u,int p)
{
	sum[u]=1;
	unsigned long long tmp=0;
	for(int i=0;i<sz(vt[u]);i++)
	{
		int v=vt[u][i];
		if(v==p) continue;
		dfs(v,u);
		tmp+=sum[u]*sum[v];
		sum[u]+=sum[v];
	}
	ret-=(tmp*tmp+2*tmp*sum[u]*(n-sum[u]));
}

int main()
{
	cin>>n;
	for(int i=1;i<n;i++)
	{
		int a,b;
		cin>>a>>b;
		vt[a].pb(b);
		vt[b].pb(a);
	}
	ret=(n*(n-1))/2;
	ret*=ret;
	dfs(1,1);
	cout<<ret<<endl;
	return 0;
}