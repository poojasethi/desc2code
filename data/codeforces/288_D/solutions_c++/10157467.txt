#include <bits/stdc++.h>
typedef long long LL;
#define rep(i,n) for(int i = 0;i < n;i ++)

const int N = 88888;
std::vector<int> G[N];
LL ans;
int num[N], n;
void dfs(int u, int fa) {
	num[u] = 1;
	LL in = 0;
	rep(i, G[u].size()) {
		int v = G[u][i];
		if(v == fa)	continue;
		dfs(v, u);
		num[u] += num[v];
		in += (LL)num[v] * num[v];
	}
	in = (LL)num[u]*num[u] - in;
	in --;
	in >>= 1;
	ans -= in * in;
	LL out = num[u] * LL(n - num[u]);
	ans -= in * out * 2;
}
int main() {
	scanf("%d", &n);
	rep(i, n - 1) {
		int u, v;
		scanf("%d%d", &u, &v);
		u --, v --;
		G[u].push_back(v);
		G[v].push_back(u);
	}
	ans = (LL)n*(n - 1)/2;
	ans *= ans;
	dfs(0, -1);
	printf("%I64d\n", ans);
	return 0;
}

