#include <cstdio>
#include <vector>
using namespace std;
const int N=100000;

vector <int> G[N];

bool vis[N];

long long int wynik, n;

long long int dfs (int v)
{
	vis[v]=1;
	long long int obc, obc1;
	long long int kwa = 0, sum = 0;
	long long int kwa1 = 0, sum1 = 0;
	for (int i=0; i <G[v].size();i++)
	{
		if ( vis[ G[v][i] ] ) continue;
		obc=dfs( G[v][i] );
		sum+=obc;
		kwa+=obc*obc;
		obc1=obc*(obc-1)/2;
		sum1+=obc1;
		kwa1+=obc1*obc1;
	}
	wynik+=( (sum * sum - kwa )/2 + sum ) * ( (n - sum - 1) * (n - sum - 2) /2 );
	wynik-=( sum1 * sum1 - kwa1 )/2;
//	printf(" v %d no %d %d\n %d %d wyn %d\n",v,sum,kwa,sum1,kwa1, wynik);
	return sum+1;
}

int main()
{
	int a,b;
	scanf("%d",&n);
	for (int i=0;i<n-1;i++)
	{
		scanf("%d%d",&a,&b);
		G[a].push_back(b);
		G[b].push_back(a);
	}
	dfs(1);
	printf("%I64d\n",wynik*2);
}