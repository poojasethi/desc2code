import sys
import math

m, n = map(int, raw_input().split())
matrix_list = []
for i in range(m):
    matrix_list.append(map(int, raw_input().split()))

list_primes = [0]
def is_prime(n):
    if n == 2 or n == 3:
        return True
    elif n < 2 or n % 2 == 0:
        return False
    elif n < 9:
        return True
    elif n % 3 == 0:
        return False
    r = int(math.sqrt(n))
    f = 5
    while f <= r:
        if n % f == 0 or n % (f + 2) == 0:
            return False
        else:
            f += 6
    return True

for i in xrange(2, 10**5+100):
    if is_prime(i):
        list_primes.append(i)

# now have list of primes

def binsearch(num, list_primes):
    lo = 0
    hi = len(list_primes)
    while hi - lo > 1:
        mid = (lo + hi) / 2
        if list_primes[mid] == num:
            return num
        elif list_primes[mid] >= num:
            hi = mid
        else:
            lo = mid
    return list_primes[hi]
    
sum_list = []
for i in range(m):
    sum_list.append([])
    for j in xrange(n):
        crap = binsearch(matrix_list[i][j], list_primes) - matrix_list[i][j]
        sum_list[i].append(crap)
        
best = sum(sum_list[0])
for list in sum_list:
    best = min(best, sum(list))

for i in xrange(n):
    sum_crap = 0
    for j in xrange(m):
        sum_crap += sum_list[j][i]
    best = min(sum_crap, best)
        
print best
        
