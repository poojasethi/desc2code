def get_primes(n):
    isPrime = [True] * (n+1)
    isPrime[0] = isPrime[1] = False
    for i in xrange(2, n+1):
        if i*i > n: break
        if isPrime[i]:
            for j in xrange(i*i, n+1, i):
                isPrime[j] = False
    return [i for i in xrange(2, n+1) if isPrime[i]]

N = 10**5
primes = get_primes(N+1000)
d2 = [None] * (N+1)

i = N
lastP = primes[-1]
for p in reversed(primes[:-1]):
    while i > p:
        d2[i] = abs(i - lastP)
        i -= 1
    lastP = p
while i >= 0:
    d2[i] = abs(i - lastP)
    i -= 1

def solve():
    n, m = map(int, raw_input().split())
    a = []
    for i in xrange(n):
        a.append(list(map(int, raw_input().split())))
    ans = 10**9
    for i in xrange(n):
        tmp = sum(d2[x] for x in a[i])
        ans = min(ans, tmp)
    for i in xrange(m):
        tmp = sum(d2[a[j][i]] for j in xrange(n))
        ans = min(ans, tmp)
    print ans
solve()
