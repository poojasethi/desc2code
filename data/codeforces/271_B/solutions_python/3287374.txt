#! /usr/bin/env python
#coding=utf-8


MAX_SIZE = 100019
flg = [0 * i for i in range(MAX_SIZE)]
sqrt_i = int(MAX_SIZE ** 0.5)
for i in range(2, sqrt_i):
    for j in range(i, MAX_SIZE):
        if(i * j >= MAX_SIZE):break
        flg[i * j] = 1

primes = [x for x in range(2, MAX_SIZE) if flg[x] == 0]


def minDif(n):
    lef = 0
    rig = len(primes) - 1
    while(lef <= rig):
        mid = (lef + rig) / 2
        if(primes[mid] < n):
            lef = mid + 1
        else:
            rig = mid - 1
    lef = min(lef, rig)
    lef = max(lef, 0)
    while(primes[lef] < n):lef += 1
    return primes[lef] - n

lists = []
n,m = [int(x) for x in raw_input().split()]
for i in range(n):
    lists.append([int(x) for x in raw_input().split()])

for i in range(n):
    for j in range(m):
        lists[i][j] = minDif(lists[i][j])

min_row = MAX_SIZE
min_col = MAX_SIZE

min_row = min([sum(lists[i]) for i in range(n)])

for j in range(m):
    min_col = min(min_col, sum([lists[i][j] for i in range(n)]))

print min(min_col, min_row)