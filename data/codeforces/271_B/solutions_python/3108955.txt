import time

primes = list()

def generate_primes():
    a=[0]*100010
    for x in xrange(2,100004):
        if a[x]==0:
            primes.append(x)
            j=2
            while j*x<100004:
                a[j*x]=1
                j+=1
            

def bin_search(x):
    #if x < primes[0]: return -1
    left = 0
    right = len(primes)-1
    while (right>left):
        mid = (left+right)/2
        if x == primes[mid]: return (mid,1)
        if x>primes[mid]:
            left=mid+1
        else:
            right=mid
    return (left,0)
    #print mid

n,m = map(int,raw_input().split())
mat = list()
for i in xrange(n):
    mat.append(map(int,raw_input().split()))
start = time.time()
mas = generate_primes()

cols = list()
rows = list()

for i in xrange(n): cols.append(0)
for j in xrange(m): rows.append(0)


for i in xrange(n):
    for j in xrange(m):
        ind = bin_search(mat[i][j])
        if ind[1]==1:
            cols[i]+=0
            rows[j]+=0
        else:
            cols[i]+=primes[ind[0]]-mat[i][j]
            rows[j]+=primes[ind[0]]-mat[i][j]

ans = min(min(cols),min(rows))
print ans
finish = time.time()
#print (finish - start)
