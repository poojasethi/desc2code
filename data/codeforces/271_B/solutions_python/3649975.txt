import sys
import math

m,n = map(int,raw_input().split())
matrix_list = []
for i in range(m):
	matrix_list.append(map(int,raw_input().split()))

def primesieve(n):
	bool_list = []
	list_primes = [0]
	for i in xrange(n):
		bool_list.append(True)
	bool_list[0] = False
	bool_list[1] = False
	i=2
	while i*i < n:
		if bool_list[i] == True:
			j = i*i
			while j < n:
				bool_list[j] = False
				j+=i
		i+=1
	for i in xrange(n):
		if bool_list[i]:
			list_primes.append(i)
	return list_primes
		
def binsearch(num,list_primes):
	lo = 0
	hi = len(list_primes)
	while hi - lo > 1:
		mid = (lo + hi) / 2
		if list_primes[mid] == num:
			return num
		elif list_primes[mid] >= num:
			hi = mid
		else:
			lo = mid
	return list_primes[hi]
	'''
	for prime in list_primes:
		if prime >= num:
			return prime
	'''	

list_primes = primesieve(10**5+1000)
sum_list = []
for i in range(m):
	sum_list.append([])
	for j in xrange(n):
		crap = binsearch(matrix_list[i][j], list_primes) - matrix_list[i][j]
		sum_list[i].append(crap)
		
best = sum(sum_list[0])
for list in sum_list[1:]:
	best = min(best,sum(list))

for i in xrange(n):
	sum_crap = 0
	for j in xrange(m):
		sum_crap += sum_list[j][i]
	best = min(sum_crap,best)
		
print best
		
