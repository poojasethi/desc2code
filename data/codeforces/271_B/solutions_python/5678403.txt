# specify list capacity
MaxN = 101002

prime_list = [0]*MaxN

prime_list[0] = prime_list[1] = 1

# mark all composite number with 1
for i in range(2, MaxN):
	if prime_list[i] == 1:
		continue
	j = i*2
	while j < MaxN:
		prime_list[j] = 1
		j += i

# then replace all '0' and '1' with prime number
i = MaxN-2
while i > 0:
	prime_list[i] = prime_list[i+1] if prime_list[i] == 1 else i
	i -= 1
#print prime_list
n,m=map(int,raw_input().split())
a=[map(int,raw_input().split()) for i in range(n)]
for i in range(n):
	for j in range(m):
		a[i][j]=prime_list[a[i][j]]-a[i][j]
#print a		
ans1=min(sum(a[i][j] for j in range(m)) for i in range(n))
ans2=min(sum(a[i][j] for i in range(n)) for j in range(m))
print min(ans1,ans2)
            
            

    

