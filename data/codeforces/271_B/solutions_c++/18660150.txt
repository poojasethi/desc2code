#include<iostream>
using namespace std;
int  a[100009];
int  arr[501];
int  arc[501];
void seive()
{
fill_n(a,100009,1);
a[0]=0;
a[1]=0;
for(int  i=2;i*i<=100009;i++)
{
if(a[i]==1)
for(int  j=i*i;j<=100009;j=j+i)
{
a[j]=0;
}
}
}
int  nextprime(int  n)
{
int  i;
for(i=n;i<=100009;i++)
if(a[i]==1){break;}
return i;
}

int main()
{

		ios_base::sync_with_stdio(0);
seive();
int  n,m;
cin>>n>>m;
int x;
for(int  i=0;i<n;i++)
{
for(int  j=0;j<m;j++)
{
cin>>x;
arr[i]+=nextprime(x)-x;
arc[j]+=nextprime(x)-x;
}
}
int ans=1000000000;
for(int i=0;i<n;i++)
ans=min(ans,arr[i]);

for(int i=0;i<m;i++)
ans=min(ans,arc[i]);

cout<<ans<<endl;

}



