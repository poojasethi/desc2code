#include <iostream>
#include <sstream>
using namespace std;

int n, m, vis[505][505] = {}, k = 0;
stringstream res;

void dfs(int a, int b, bool root){
    if(vis[a][b]) return;
    vis[a][b] = 1;
    k++;
    res << "B " << a+1 << " " << b+1 << "\n";
    if(a>0) dfs(a-1, b, 0);
    if(a<n-1) dfs(a+1, b, 0);
    if(b>0) dfs(a, b-1, 0);
    if(b<m-1) dfs(a, b+1, 0);
    if(!root){
        k+=2;
        res << "D " << a+1 << " " << b+1 << "\n";
        res << "R " << a+1 << " " << b+1 << "\n";
    }
}

int main(){

    ios::sync_with_stdio(false);
    cin >> n >> m;
    for(int i = 0; i<n; i++){
        string s;
        cin >> s;
        for(int j = 0;j<m; j++) if(s[j]=='#') vis[i][j] = 1;
    }

    for(int i = 0; i<n; i++){
        for(int j = 0; j<m; j++){
            if(!vis[i][j]) dfs(i, j, 1);
        }
    }

    cout << k << "\n";
    cout << res.str();

}
