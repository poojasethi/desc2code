#include <map>
#include <set>
#include <queue>
#include <cstdio>
#include <vector>
#include <cstring>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;
int n,m,xx,yy,sum;
stringstream ans;
char grid[505][505];
bool v[505][505];
int dx[]={1,-1,0,0};
int dy[]={0,0,1,-1};
void dfs(int x,int y)
{
	v[x][y]=true;
	for(int i=0;i<4;i++)
	if(grid[x+dx[i]][y+dy[i]]=='.'&&!v[x+dx[i]][y+dy[i]])
	dfs(x+dx[i],y+dy[i]);
	if(x!=xx||y!=yy)
	{
	sum++;
	sum++;
	ans<<"D "<<x<<" "<<y<<endl;
	ans<<"R "<<x<<" "<<y<<endl;
	}
}
int main()
{
	cin>>n>>m;
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++)
	{
	cin>>grid[i][j];
	if(grid[i][j]=='.')
	{
	ans<<"B "<<i<<" "<<j<<endl;
	sum++;
	}
	}
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++)
	if(grid[i][j]=='.'&&!v[i][j])
	{
	xx=i;
	yy=j;
	dfs(i,j);
	}
	cout<<sum<<endl;
	cout<<ans.str();
	return 0;
}
