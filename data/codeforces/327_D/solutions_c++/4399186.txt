#include <cstdio>
#include <cstring>
#include <algorithm>
#include <vector>
#include <utility>

using namespace std;

int n, m;
char grid[512][512], been[512][512];
vector<pair<char, pair<int, int> > > op;

void dfs(int x, int y, int f) {
	if (grid[x][y] != '.' || been[x][y])
		return;
	been[x][y] = 1;
	op.push_back(make_pair('B', make_pair(x, y)));
	dfs(x + 1, y, 0);
	dfs(x - 1, y, 0);
	dfs(x, y + 1, 0);
	dfs(x, y - 1, 0);
	if (!f) {
		op.push_back(make_pair('D', make_pair(x, y)));
		op.push_back(make_pair('R', make_pair(x, y)));
		
	}
}

int main() {
	memset(been, 0, sizeof(been));
	scanf("%d %d", &n, &m);
	for (int i = 1; i <= n; i++)
		scanf("%s", grid[i] + 1);
	for (int i = 1; i <= n; i++)
		for (int j = 1; j <= m; j++)
			dfs(i, j, 1);
	printf("%d\n", op.size());
	for (int i = 0; i < op.size(); i++)
		printf("%c %d %d\n", op[i].first, op[i].second.first, op[i].second.second);	
	return 0;
}
