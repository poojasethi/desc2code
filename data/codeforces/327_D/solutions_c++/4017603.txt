#include<string>
#include<vector>
#include<iostream>
#include<sstream>
using namespace std;

const int N = 500, d[4][2] = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};
stringstream res;
int cnt, m, n;
char s[N][N+1];

void enter() {
	cin >> m >> n;
	for(int i = 0; i < m; ++i)
		cin >> s[i];
}

void dfs(int x, int y, bool canRed = true) {
	res << "B " << x+1 << " " << y+1 << "\n"; ++cnt;
	s[x][y] = '#';
	for(int k = 0; k < 4; ++k) {
		int i = x + d[k][0], j = y + d[k][1];
		if(i >= 0 && i < m && j >= 0 && j < n && s[i][j] == '.')
			dfs(i, j);
	}
	if(canRed) {
		res << "D " << x+1 << " " << y+1 << "\n";
		res << "R " << x+1 << " " << y+1 << "\n";
		cnt += 2;
	}
}

int main() {
	ios::sync_with_stdio(false);
	enter();
	for(int i = 0; i < m; ++i)
		for(int j = 0; j < n; ++j)
			if(s[i][j] == '.') dfs(i, j, false);
	cout << cnt << "\n" << res.str();
	return 0;
}
