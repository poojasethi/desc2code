#include <iostream>
#include <string.h>
#include <vector>

using namespace std;

int n,m,k,ans;

int pos[]={0,1,0,-1,1,0,-1,0};

char v[509][509];

vector < pair < char , pair < int ,int > >  > p;

void dfs(int x,int y,int z)
{
	v[x][y] = '#',p.push_back(make_pair('B',make_pair(x+1,y+1)));
	for (int j = 0; j < 8; j+=2)
	{
		int a = x+pos[j],b = y+pos[j+1];
		if (a >= 0 && b >= 0 && a < n && b < m && v[a][b] != '#')
			dfs(a,b,1);
	}
	
	if (z != 0)
		p.push_back(make_pair('D',make_pair(x+1,y+1))),p.push_back(make_pair('R',make_pair(x+1,y+1)));
}

int main()
{
	cin >> n >> m;
	
	for (int i = 0; i < n; i++)
		for (int h = 0; h < m; h++)
			cin >> v[i][h];
	
	for (int i = 0; i < n; i++)
		for (int h = 0; h < m; h++)	
			if (v[i][h] == '.')
				dfs(i,h,0);
	
	cout << p.size() << "\n";
	
	for (int i = 0; i < p.size(); i++)
		cout << p[i].first << " " << p[i].second.first << " " << p[i].second.second << "\n";
}
