#include<iostream>
#include<algorithm>
using namespace std;

bool v[501][501];
char a[501][501], b[1000001];
long c[1000001], d[1000001], n, m, t;

bool sss(long x, long y){
	if (x<1 || x>n || y<1 || y>m || v[x][y] || a[x][y]=='#') return false;
	return true;
}

void dfs(bool z, long x, long y){
	v[x][y] = true;
	b[++t] = 'B'; c[t] = x; d[t] = y;
	if (sss(x-1, y)) dfs(true, x-1, y);
	if (sss(x+1, y)) dfs(true, x+1, y);
	if (sss(x, y+1)) dfs(true, x, y+1);
	if (sss(x, y-1)) dfs(true, x, y-1);
	if (z){
		b[++t] = 'D'; c[t] = x; d[t] = y;
		b[++t] = 'R'; c[t] = x; d[t] = y;
	}
}

int main(){
	cin >> n >> m;
	for (long i=1; i<=n; i++)
		for (long j=1; j<=m; j++) cin >> a[i][j];
	for (long i=1; i<=n; i++)
		for (long j=1; j<=m; j++)
			if (!v[i][j] && a[i][j]=='.') dfs(false, i, j);
	cout << t << endl;
	for (long i=1; i<=t; i++)
		cout << b[i] << " " << c[i] << " " << d[i] << endl;
}

