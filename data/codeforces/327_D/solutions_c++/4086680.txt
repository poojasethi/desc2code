#include<iostream>
#include<vector>
using namespace std;
struct x
{
	char c;
	int i,j;
};
int n,m;
char s[501][501];
vector<x> t;
void dfs(int i,int j,bool k)
{
	if(i<0 || i>=n)return;
	if(j<0||j>=m)return;
	s[i][j]='*';
	t.push_back((x){'B',i+1,j+1});
	if(s[i+1][j]=='.')dfs(i+1,j,1);
	if(s[i][j+1]=='.')dfs(i,j+1,1);
	if(s[i-1][j]=='.')dfs(i-1,j,1);
	if(s[i][j-1]=='.')dfs(i,j-1,1);
	if(k)
	{
		t.push_back((x){'D',i+1,j+1});
		t.push_back((x){'R',i+1,j+1});
	}
}			
int main()
{
	int i,j;
	cin>>n>>m;
	for(i=0;i<n;i++)cin>>s[i];
	for(i=0;i<n;i++)for(j=0;j<m;j++)if(s[i][j]=='.')dfs(i,j,0);	
	cout<<t.size()<<endl;
	for(i=0;i<t.size();i++)
	{
		cout<<t[i].c<<" "<<t[i].i<<" "<<t[i].j<<endl;
	}
}
