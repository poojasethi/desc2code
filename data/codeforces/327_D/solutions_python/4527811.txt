from collections import deque

def main():
    n, m = [int(x) for x in  raw_input().split()]

    sets = [[ 1 if c == '.' else 0 for c in row] for row in [raw_input() for x in xrange(n)]]
    bactions, ractions = [], []

    rapp = ractions.append
    bapp = bactions.append
    q = deque()
    qpop = q.popleft
    qpush = q.append
    delta = [(-1, 0), (1, 0), (0, -1), (0, 1)]

    for i in xrange(n):
        for j in xrange(m):
            if sets[i][j] :
               qpush((i, j))
               while len(q):
                   x, y = qpop()
                   if sets[x][y]:
                       sets[x][y] = 0
                       bapp("B {0} {1}".format(x+1, y+1))
                       if x != i or y != j:
                           rapp("D {0} {1}\nR {0} {1}".format(x+1, y+1))

                       for dx, dy in delta:
                           a = x + dx
                           b = y + dy
                           if (a >=0) and (b >= 0) and (a < n) and (b < m) and sets[a][b] == 1:
                               qpush((a, b));
    ractions.reverse()
    print len(bactions) + len(ractions) + len(ractions)
    print "\n".join(bactions)
    print "\n".join(ractions)
    
if __name__ == '__main__':
    main()
