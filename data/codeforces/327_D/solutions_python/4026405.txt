import sys
from collections import deque

sys.setrecursionlimit(2000)

n, m = map(int, raw_input().split())
s = [raw_input() for i in range(n)]
d = [[-1 if s[i][j] == '.' else -2 for j in range(m)] for i in range(n)]

np = ((-1, 0), (1, 0), (0, -1), (0, 1))
buff = []
def solve(i, j):
    global d, buff
    q = deque()
    q.append((i, j))
    d[i][j] = 0
    buff.append((0, i, j))
    while len(q):
        i, j = q.popleft()
        c = d[i][j]+1
        for u in np:
            x = i+u[0]
            y = j+u[1]
            if not (0 <= x < n) or not (0 <= y < m) or d[x][y] != -1:
                continue
            buff.append((c, x, y))
            d[x][y] = c
            q.append((x, y))

k = 0
for i in range(n):
    for j in range(m):
        if d[i][j] == -1:
            k += 1
            solve(i, j)
buff.reverse()
k = len(buff)*3-k*2
print(k)
s = []
for i in buff:
    s.append('B {0} {1}'.format(i[1]+1, i[2]+1))
for i in buff:
    if i[0] < 1:
        continue
    s.append('D {0} {1}\nR {0} {1}'.format(i[1]+1, i[2]+1))
print '\n'.join(s)