from collections import deque

def main():
    n, m = [int(x) for x in  raw_input().split()]
    sets = [[-1]*m for x in xrange(n)]
    bactions, ractions = [], []
    g = [raw_input()  for x in xrange(n)]

    q = deque()
    qappend = q.append
    qpop = q.popleft
    rappend = ractions.append
    bappend = bactions.append
    delta = [(-1, 0), (1, 0), (0, -1), (0, 1)]
    for i in xrange(n):
        for j in xrange(m):
            if sets[i][j] is -1 and g[i][j] == '.':
               qappend((i, j))
               while len(q):
                   x, y = qpop()
                   if sets[x][y] is -1:
                       sets[x][y] = 0
                       bappend('B {0} {1}'.format(x+1, y+1))
                       if x != i or y != j:
                           rappend('R {0} {1}'.format(x+1, y+1))
                           rappend('D {0} {1}'.format(x+1, y+1))
                       for (dx, dy) in delta:
                            a, b = x + dx, y + dy
                            if  (a >= 0) and (b >= 0) and (a < n) and (b < m) and (g[a][b] != '#') and (sets[a][b] is -1):
                               qappend((a, b));
    print len(bactions) + len(ractions)
    print '\n'.join(bactions)
    ractions.reverse()
    print '\n'.join(ractions)


if __name__ == '__main__':
    main()
