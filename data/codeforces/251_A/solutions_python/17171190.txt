import bisect
def binarySearch(lst,x):
    i = bisect.bisect_right(lst,x)
    return i
y = raw_input()
y = y.strip()
y = y.split(' ')
y = [int(t) for t in y]
n = y[0]
minus = y[1]
y1 = range(1,n+1)
y = raw_input()
y = y.strip()
y = y.split(' ')
y = [int(t) for t in y]
def sum_n(n):
    return n*(n+1) / 2
count = 0
begin = 2
for i in range(n):
    j = binarySearch(y,y[i] + minus)
    if j >= n or y[j] >(y[i] + minus):
        j -= 1
    if j - i < 2 or y[j] - y[i] > minus:
        pass
    else: count += sum_n(j-i-1)
print count