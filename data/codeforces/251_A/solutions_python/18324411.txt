l,n=[],0
def search_at_most(indx,key):
	ans=-1
	le,ri=indx,n-1
	while le<=ri:
		mid=(le+ri)//2
		if l[mid]>key:
			ri=mid-1
		else:
			ans=mid
			le=mid+1
	return ans			



n,d=map(int,raw_input().split())
l=map(int,raw_input().split())
if n==1 or n==2:
	print 0
else:
	ans=0
	for r in range(0,n-2,1):
		if (search_at_most(r,l[r]+d)!=-1):
			q=(search_at_most(r,l[r]+d)-r)
			ans+=(q*(q-1))//2
	print ans	