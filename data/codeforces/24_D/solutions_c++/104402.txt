#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <algorithm>
using namespace std;

const int MAXN = 1005, INFTY = 1000000000, ITER = 500;

int N, M, n, m;
double A [MAXN], B [MAXN], C [MAXN];

int main ()
{
	scanf ("%d %d", &N, &M);
	scanf ("%d %d", &n, &m);

	for (int r = n; r < N; r++)
	{
		memset (B, 0, sizeof (B));

		for (int t = 0; t < ITER; t++)
		{
			for (int c = 1; c < M - 1; c++)
				C [c] = (B [c - 1] + B [c] + B [c + 1] + A [c]) / 4.0 + 1.0;

			C [0] = C [M - 1] = (B [0] + B [1] + A [0]) / 3.0 + 1.0;

			memcpy (B, C, sizeof (C));
		}
		memcpy (A, C, sizeof (C));
	}

	if (M == 1)
		printf ("%lf\n", (double) 2.0 * (N - n));
	else
		printf ("%lf\n", A [m - 1]);
	return 0;
}
