#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
const int N=250;
long long f[N][N],k;
int n,m,a[N][N];
char d[2*N],ans[N][N];
struct B{
    int w,v;
}b[2*N];
int cmp(B x,B y){
    return x.v<y.v;
}
long long work(int s){
    int i,j;
    f[0][0]=1;
    for (i=1;i<=s;i++){
        for (j=0;j<=i;j++){
            f[i][j]=0;
            if (j>0&&d[i-1]!=')') f[i][j]+=f[i-1][j-1];
            if (d[i-1]!='(') f[i][j]+=f[i-1][j+1];
            if (f[i][j]>k+5) f[i][j]=k+5;
        }
    }
    return f[s][0];
}
int main(){
    //freopen("c.in","r",stdin);
    int i,j,cur;
    long long sum;
    scanf("%d%d%I64d",&n,&m,&k);
    for (i=0;i<n;i++){
        for (j=0;j<m;j++) {
            b[i+j].w=i+j;
            scanf("%d",&a[i][j]);
            if (b[i+j].v==0||a[i][j]<b[i+j].v) b[i+j].v=a[i][j];
        }
    }
    sort(b,b+n+m-1,cmp);
    for (i=0;i<n+m;i++){
        cur=b[i].w;
        d[cur]='(';
        sum=work(n+m-1);
        if (k>sum){
            k-=sum;
            d[cur]=')';
        }
    }
    for (i=0;i<n;i++)
        for (j=0;j<m;j++) ans[i][j]=d[i+j];
    for (i=0;i<n;i++) puts(ans[i]);
    return 0;
}
