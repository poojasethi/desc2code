#include <algorithm>
#include <iostream>
#include <sstream>
#include <cstring>
#include <numeric>
#include <cstdio>
#include <string>
#include <vector>
#include <math.h>
#include <cmath>
#include <deque>
#include <queue>
#include <map>
#include <set>
using namespace std;

#define mp make_pair
#define pb push_back
#define ll long long

const int N = 205;
char s[N];
ll dp[N][N];
int d[N], g[N];

bool cmp(const int &a, const int &b) {
	return g[a] < g[b];
}

int main() {
	//freopen("in.txt", "r", stdin);
	//freopen("out.txt", "w", stdout);

	int n, m;
	long long K;
	cin >> n >> m >> K;

	int L = n + m - 1;
	for (int i = 0; i < L; i++) {
		d[i] = i;
		g[i] = 10000;
	}
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			int x;
			scanf("%d", &x);
			g[i + j] = min(g[i + j], x);
		}
	}
	sort(d, d + L, cmp);

	for (int k = 0; k < L; k++) {
		memset(dp, 0, sizeof(dp));
		dp[0][0] = 1;
		s[d[k]] = '(';
		for (int i = 0; i < L; i++) {
			for (int j = i & 1; j <= i && j <= L - i; j += 2) {
				if (dp[i][j] > K) dp[i][j] = K;
				if (s[i] != ')') {
					dp[i + 1][j + 1] += dp[i][j];
				}
				if (s[i] != '(' && j) {
					dp[i + 1][j - 1] += dp[i][j];
				}
			}
		}
		if (K > dp[L][0]) {
			s[d[k]] = ')';
			K -= dp[L][0];
		}
	}
	
	for (int i = 0; i < n; i++) {
		for (int j = 0; j < m; j++) {
			printf("%c", s[i + j]);
		}
		puts("");
	}

	return 0;
}