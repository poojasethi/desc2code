#include<cstdio>
#include<cstring>
#include<algorithm>
#include<iostream>
using namespace std;
const int N = 205;
typedef __int64 ll;
ll dp[N][N],k;
int a[N],b[N],r[N],n,m;
bool cmp(int x,int y){return a[x]<a[y];}
ll get()
{
	int i,j;
	memset(dp,0,sizeof(dp));
	dp[0][0]=1;
	for(i=0;i<m+n-1;i++)
	{
		for(j=0;j<=i;j++)
		{
			ll v=dp[i][j];
			if(!v)continue;
			if(r[i+1]!=1)
			{
				dp[i+1][j+1]+=v;
				if(dp[i+1][j+1]>=k)dp[i+1][j+1]=k;
			}
			if(j&&r[i+1]!=0)
			{
				dp[i+1][j-1]+=v;
				if(dp[i+1][j-1]>=k)dp[i+1][j-1]=k;
			}
		}
	}
	return dp[m+n-1][0];
}
int main()
{
	int i,j,v;
	scanf("%d%d%I64d",&m,&n,&k);
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			scanf("%d",&v);
			if(!a[i+j-1]||a[i+j-1]>v)a[i+j-1]=v;
		}
	}
	for(i=1;i<=m+n-1;i++)b[i]=i;
	sort(b+1,b+m+n,cmp);
	memset(r,-1,sizeof(r));
	for(i=1;i<=m+n-1;i++)
	{
		r[b[i]]=0;
		ll tp=get();
		if(tp<k)
		{
			r[b[i]]=1;
			k-=tp;
		}
	}
	for(i=1;i<=m;i++)
	{
		for(j=1;j<=n;j++)
		{
			if(r[i+j-1])putchar(')');
			else putchar('(');
		}
		puts("");
	}
	return 0;
}