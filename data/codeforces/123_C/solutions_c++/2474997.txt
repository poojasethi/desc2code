#include <cstdio>
#include <cstring>
#include <algorithm>
using namespace std;
long long f[200][200];
int force[200];
int n, m;
long long p;
long long dp(int n){
    memset(f[0], 0, sizeof(f[0]));
    f[0][0] = 1;
    for (int i = 1; i <= n; i ++)
        for (int j = 0; j <= i; j ++){
            f[i][j] = 0;
            if (force[i] != 1)
                f[i][j] += f[i - 1][j + 1];
            if (force[i] != 2)
                f[i][j] += f[i - 1][j - 1];
            if (f[i][j] > p + 5)
                f[i][j] = p + 5;
        }
    return f[n][0];
}
int prio[200], x[200];
bool cmp(int a, int b){
    return prio[a] < prio[b];
}
int main(){
    scanf("%d%d%I64d", &n, &m, &p);
    memset(prio, 0x3f, sizeof(prio));
    for (int i = 1; i <= n; i ++)
        for (int j = 1; j <= m; j ++){
            int x;
            scanf("%d", &x);
            if (x < prio[i + j - 1]) prio[i + j - 1] = x;
        }
    for (int i = 1; i <= n + m - 1; i ++)
        x[i] = i;
    sort(x + 1, x + n + m, cmp);
    memset(force, 0, sizeof(force));
    for (int i = 1; i <= n + m - 1; i ++){
        force[x[i]] = 1;
        long long tmp = dp(n + m - 1);
        if (tmp < p){
            force[x[i]] = 2;
            p -= tmp;
        }
    }
    for (int i = 1; i <= n; i ++){
        for (int j = 1; j <= m; j ++)
            putchar(force[i + j - 1] == 1?'(':')');
        puts("");
    }
    return 0;
}
