#include <bits/stdc++.h>

#define MAX_N 205
typedef long long LL;
const LL INF = 1e18;
std::pair<int, int> p[MAX_N];
char ans[MAX_N];
void add(LL &x, LL val) {
	if(x + val > INF) {
		x = INF;
	} else
		x += val;
}
LL calc(int n) {
	static LL dp[MAX_N][MAX_N];
	std::fill(dp[0], dp[n + 1], 0);
	dp[0][0] = 1;
	for(int i = 0; i < n; i ++) {
		for(int j = 0; j <= i; j ++) {
			LL now = dp[i][j];
			if(!now)	continue;
			if(ans[i] == '(') {
				add(dp[i + 1][j + 1], now);
			}
			if(ans[i] == '?') {
				add(dp[i + 1][j + 1], now);
				if(j > 0)
					add(dp[i + 1][j - 1], now);
			}
			if(ans[i] == ')' && j > 0) {
				add(dp[i + 1][j - 1], now);
			}
		}
	}
	return dp[n][0];
}

int main() {
	int N, M;
	LL K;
	std::cin >> N >> M >> K;
	for(int i = 0; i < N + M; i ++)
		p[i].first = 1e9;
	for(int i = 0; i < N; i ++) {
		for(int j = 0, x; j < M; j ++) {
			std::cin >> x;
			p[i + j].first = std::min(p[i + j].first, x);
			p[i + j].second = i + j;
		}
	}
	int n = N + M - 1;
	std::sort(p, p + n);
	std::fill(ans, ans + n, '?');
	for(int i = 0; i < n; i ++) {
		ans[p[i].second] = '(';
		LL k = calc(n);
		if(k < K) {
			K -= k;
			ans[p[i].second] = ')';
		}
	}
	for(int i = 0; i < N; i ++) {
		for(int j = 0; j < M; j ++) {
			putchar(ans[i + j]);
		}
		puts("");
	}
	return 0;
}

