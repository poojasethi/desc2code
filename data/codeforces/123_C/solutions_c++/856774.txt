#include <stdio.h>

#include <algorithm>
#include <iostream>

using namespace std;

int n, m;
long long k;
int v[205], sol[205], o[205];

long long rez ()
{
	int i, j;
	long long d[205][205] = {0};
	
	d[0][0] = 1;
	for (i = 1; i <= n; i ++)
		for (j = 0; j <= i; j ++)
			if (sol[i])
			{
				if (j == 0 && sol[i] == 1)
					continue;
				d[i][j] = d[i - 1][j - sol[i]];
			}
			else
			if (j)
			{
				d[i][j] = d[i - 1][j - 1] + d[i - 1][j + 1];
				if (d[i][j] < 0)
					d[i][j] = (long long)1000000000 * 1000000000;
			}
			else
				d[i][j] = d[i - 1][j + 1];
	return d[n][0];
}

inline int cmp (int i, int j)
{
	return v[i] < v[j];
}

int main ()
{
#ifndef ONLINE_JUDGE
	freopen ("123c.in", "r", stdin);
	freopen ("123c.out", "w", stdout);
#endif
	cin >> n >> m >> k;
	
	int i, j, x;
	long long nr;
	
	for (i = 1; i <= n; i ++)
		for (j = 1; j <= m; j ++)
		{
			cin >> x;
			if (v[i + j - 1] > x || !v[i + j - 1])
				v[i + j - 1] = x;
		}
	
	n = n + m - 1;
	for (i = 1; i <= n; i ++)
		o[i] = i;
	sort (o + 1, o + n + 1, cmp);
	
	for (i = 1; i <= n; i ++)
	{
		sol[o[i]] = 1;
		nr = rez ();
		if (nr < k)
		{
			k -= nr;
			sol[o[i]] = -1;
		}
	}
	
	n = n - m + 1;
	for (i = 1; i <= n; i ++)
	{
		for (j = 1; j <= m; j ++)
			cout << ((sol[i + j - 1] == -1) ? ')' : '(');
		cout << "\n";
	}
	
	return 0;
}
