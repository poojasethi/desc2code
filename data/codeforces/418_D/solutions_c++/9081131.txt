#include<cstdio>
#include<algorithm>
#include<cstring>
#include<vector>
//#pragma comment(linker, "/STACK:102400000,102400000")
#define Ms(a,x) memset(a,x,sizeof(a))
using namespace std;
inline int shift(int x,int y)
{
   return x<<y;
}
void pt(int id,int x)
{
   //printf("id=%d,value=%d\n",id,x);
}
const int Maxn=200002;
int n;
int h[Maxn],top[Maxn][3],f[Maxn][20],up[Maxn][20],down[Maxn][20];
vector<int>G[Maxn];
void dfs1(int u,int fa)
{
   f[u][0]=fa;
   for(int i=0;f[u][i];i++)
     f[u][i+1]=f[f[u][i]][i];
   for(int i=0;i<G[u].size();i++)
   {
      int v=G[u][i];if(v==fa)continue;
      h[v]=h[u]+1;
      dfs1(v,u);
      int t=top[v][0]+1;
      if(t>top[u][0]){top[u][2]=top[u][1];top[u][1]=top[u][0];top[u][0]=t;continue;}
      if(t>top[u][1]){top[u][2]=top[u][1];top[u][1]=t;continue;}
      if(t>top[u][2]){top[u][2]=t;continue;}
   }
}
void dfs2(int u,int fa)
{
   for(int i=0;f[u][i];i++)
   {
     up[u][i+1]=max(up[u][i],(1<<i)+up[f[u][i]][i]);
     down[u][i+1]=max(down[u][i]+(1<<i),down[f[u][i]][i]);
   }
   for(int i=0;i<G[u].size();i++)
   {
      int v=G[u][i];if(v==fa)continue;
      int t=0;
      if(top[v][0]+1==top[u][0])t++;
      down[v][0]=top[u][t];
      up[v][0]=down[v][0]+1;
      dfs2(v,u);
   }
}
void init()
{
   Ms(f,0);
   Ms(up,0);
   Ms(down,0);
   Ms(top,0);
   Ms(h,0);
   h[1]=0;
   for(int i=1;i<=n;i++)G[i].clear();
}
int Lca(int u,int v)
{//pt(11,u),pt(12,v);
   int dis=h[u]-h[v],i;
   for(i=19;i>=0;i--)
     if(dis>=shift(1,i))
     {
        dis-=shift(1,i);
        u=f[u][i];
     }
   for(i=19;i>=0;i--)
     if(f[u][i]!=f[v][i])
        u=f[u][i],v=f[v][i];
   return u==v?u:f[u][0];
}
int getfa(int u,int d)
{
  for(int i=19;i>=0;i--)
    if(d>=shift(1,i))
    {
       u=f[u][i];
       d-=shift(1,i);
    }
   return u;
}
int rmq1(int u,int v)
{//pt(u),pt(v);
   int ret=0,t=0;
   int d=h[u]-h[v];//if(u==1&&v==1)pt(8,d);
   for(int i=19;i>=0;i--)
     if(d>=shift(1,i))
     {
        d-=shift(1,i);
        ret=max(ret,t+up[u][i]);
        u=f[u][i];
        t+=shift(1,i);
     }
     return ret;
}
int rmq2(int u,int v)
{
   if(h[u]<=h[v])return -1;
   int ret=0,t=0;
   int d=h[u]-h[v];
   for(int i=19;i>=0;i--)
      if(d>=shift(1,i))
      {
         d-=shift(1,i);
         ret=max(ret,d+down[u][i]);
         u=f[u][i];
      }
    return ret;
}
int rmq3(int u,int v,int lca)
{
   if(v)v=getfa(v,h[v]-h[lca]-1);
   u=getfa(u,h[u]-h[lca]-1);
   if(top[u][0]<top[v][0])swap(u,v);
   int t=0;
   if(top[u][0]+1==top[lca][t])t++;
   if(v&&top[v][0]+1==top[lca][t])t++;
   //printf("top[lca][t]=%d\n",top[lca][t]);
   return top[lca][t];
}
/*
5
1 2
2 3
2 4
3 5
6

*/
void query(int u,int v)
{
  if(h[u]<h[v])swap(u,v);
  int lca=Lca(u,v),ans=top[u][0];pt(1,ans);
  int tot=h[u]-h[lca]+h[v]-h[lca];pt(2,tot);
  int w=getfa(u,tot/2),u2=getfa(u,h[u]-h[lca]-1);
  if(lca!=v)ans=max(ans,top[v][0]);pt(3,ans);
  ans=max(ans,rmq1(u,h[u2]>h[w]?u2:w));pt(4,ans);
  if(tot&1)ans=max(ans,rmq2(w,u2)+h[v]-h[lca]+1);
  else ans=max(ans,rmq2(getfa(u,tot/2-1),u2)+h[v]-h[lca]+1);pt(5,ans);
  ans=max(ans,rmq3(u,v==lca?0:v,lca)+h[v]-h[lca]);pt(6,ans);
  ans=max(ans,h[v]-h[lca]+rmq1(lca,1));pt(7,ans);pt(77,lca);
  ans=max(ans,rmq1(v,getfa(v,h[v]-h[lca]-1)));
  printf("%d\n",ans);
}
int main()
{
   int T;
   //scanf("%d",&T);
 // while(T--)
  //{
     scanf("%d",&n);
     init();
     for(int i=0;i<n-1;i++)
     {
        int u,v;
        scanf("%d%d",&u,&v);
        G[u].push_back(v),G[v].push_back(u);
     }
     dfs1(1,0);
     dfs2(1,0);
     int m;
   /*  for(int i=1;i<=29;i++)
     {
        printf("%d:",i);
        for(int j=0;j<G[i].size();j++)
          printf(" %d",G[i][j]);
        puts("");
     }*/
     scanf("%d",&m);
     while(m--)
     {
       int u,v;
       scanf("%d%d",&u,&v);
       query(u,v);
     }
 // }
}