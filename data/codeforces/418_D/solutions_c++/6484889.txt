#include<cstdio>
#include<vector>
#include<algorithm>
using namespace std;
const int MAXN=100005;
int a[28]={0,7,9,26,11,16,10,1,27,13,8,24,4,19,21,14,20,15,17,18,5,23,3,12,6,25,2,22};
int deep[MAXN],dis1[MAXN],dis2[MAXN],dis3[MAXN];
int g1[MAXN][19],g2[MAXN][19],f[MAXN][19];
vector<int> v[MAXN];
void Dfs(int x)
{
	for(int i=0;i<v[x].size();i++)
		if(!deep[v[x][i]])
		{
			deep[v[x][i]]=deep[x]+1;
			Dfs(v[x][i]);
			if(dis3[x]<dis1[v[x][i]]+1)
				dis3[x]=dis1[v[x][i]]+1;
			if(dis3[x]>dis2[x])
				swap(dis2[x],dis3[x]);
			if(dis2[x]>dis1[x])
				swap(dis1[x],dis2[x]);
		}
}
void Get(int x)
{
	int i;
	for(i=0;(1<<i+1)<deep[x];i++)
	{
		f[x][i+1]=f[f[x][i]][i];
		g1[x][i+1]=max(g1[x][i]+(1<<i),g1[f[x][i]][i]);
		g2[x][i+1]=max(g2[x][i],g2[f[x][i]][i]+(1<<i));
	}
	for(i=0;i<v[x].size();i++)
		if(v[x][i]!=f[x][0])
		{
			f[v[x][i]][0]=x;
			if(dis1[x]==dis1[v[x][i]]+1)
				g1[v[x][i]][0]=dis2[x],
				g2[v[x][i]][0]=dis2[x]+1;
			else
				g1[v[x][i]][0]=dis1[x],
				g2[v[x][i]][0]=dis1[x]+1;
			Get(v[x][i]);
		}
}
int Go(int x,int y)
{
	for(int i=0;y>>i;i++)
		if((y>>i)&1)
			x=f[x][i];
	return x;
}
int lca(int x,int y)
{
	if(deep[y]>deep[x])
		swap(x,y);
	x=Go(x,deep[x]-deep[y]);
	if(x==y)return x;
	for(int i=18;i+1;i--)
		if(f[x][i]!=f[y][i])
			x=f[x][i],y=f[y][i];
	return f[x][0];
}
int Case1(int x,int y)
{
	int ret=-1,i;
	for(i=18;i+1;i--)
		if(deep[x]-(1<<i)>=deep[y])
			ret=max(ret+(1<<i),g1[x][i]),
			x=f[x][i];
	return ret;
}
int Case2(int x,int y)
{
	int ret=-1,i,t=0;
	for(i=18;i+1;i--)
		if(deep[x]-(1<<i)>=deep[y])
			ret=max(ret,g2[x][i]+t),
			x=f[x][i],t+=1<<i;
	return ret;
}
int In(int x,int y,int t)
{
	if(t!=y)
		return f[y][0];
	for(int i=18;i+1;i--)
		if(deep[f[x][i]]>deep[y])
			x=f[x][i];
	return x;
}
int Calc(int x,int y)
{
	int t=lca(x,y),ret;
	if(t==x)
		return max(Case1(y,x),Case2(x,1));
	if(t==y)
		return max(Case2(x,In(x,y,y)),dis1[x]);
	ret=max(dis1[x],Case2(x,In(x,t,t)));
	ret=max(ret,max(Case1(y,In(y,t,t))+1,Case2(t,1))-deep[t]+deep[x]);
	int d1=dis1[In(x,t,t)],d2=dis1[In(y,t,t)];
	if(d1<d2)swap(d1,d2);
	ret=max(ret,(dis1[t]==d1+1?dis2[t]==d2+1?dis3[t]:dis2[t]:dis1[t])-deep[t]+deep[x]);
	return ret;
}
int Work(int x,int y)
{
	int t=lca(x,y),len,q;
	len=deep[x]+deep[y]-deep[t]-deep[t];
	if(deep[x]-deep[t]<len/2)
		swap(x,y);
	q=Go(x,len/2);
	return max(Calc(x,In(y,q,t)),Calc(y,q));
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
#endif
	int n,i,x,y;
	scanf("%d",&n);
	for(i=1;i<n;i++)
		scanf("%d%d",&x,&y),
		v[x].push_back(y),
		v[y].push_back(x);
	deep[1]=1;
	Dfs(1);
	Get(1);
	scanf("%d",&n);
	for(i=1;i<=n;i++)
	{
		scanf("%d%d",&x,&y);
		printf("%d\n",Work(x,y));
	}
}