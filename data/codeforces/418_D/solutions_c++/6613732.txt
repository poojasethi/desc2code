#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 200010
#define inf 1000000000
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
struct ww {
    int a,b,c;
} g[N][20],ma[N];
int i,j,k,n,m,K,t,an,x,y;
int a[N],next[N],head[N],fa[N][20],dep[N],cnt[N];
inline void add(int x,int y) {
    a[++t]=y,next[t]=head[x],head[x]=t;
    a[++t]=x,next[t]=head[y],head[y]=t;
}
inline int get(int x,int d) {
    int i;
    for (i=cnt[dep[x]];i>=0;i--)
    if ((1<<i)<=d) d-=1<<i,x=fa[x][i];
    return x;
}
int dfs(int x) {
    int v;
    ma[x].a=dep[x];
    for (v=head[x];v;v=next[v]) if (fa[x][0]!=a[v]) {
        int A=a[v];
        fa[A][0]=x;
        dep[A]=dep[x]+1;
        int s=dfs(a[v]);
        if (ma[x].a<s) ma[x].c=ma[x].b,ma[x].b=ma[x].a,ma[x].a=s;
        else if (ma[x].b<s) ma[x].c=ma[x].b,ma[x].b=s;
        else ma[x].c=max(ma[x].c,s);
    }
    return ma[x].a;
}
inline void Dfs(int x) {
    int v,i;
    for (v=head[x];v;v=next[v]) if (fa[x][0]!=a[v]) {
        int A=a[v];
        int s=ma[a[v]].a;
        For(i,1,cnt[dep[A]]) fa[A][i]=fa[fa[A][i-1]][i-1];
        For(i,1,cnt[dep[A]]) {
            int B=fa[A][i-1],C=get(A,(1<<i-1)-1);
            int D=ma[B].a==ma[C].a?ma[B].b:ma[B].a;
            g[A][i].a=max(D-dep[B]*2,max(g[A][i-1].a,g[B][i-1].a));
            g[A][i].b=max(D,max(g[A][i-1].b,g[B][i-1].b));
        }
        Dfs(a[v]);
    }
}
inline int lca(int x,int y) {
    int i;
    if (dep[x]>dep[y]) swap(x,y);
    for (i=cnt[dep[y]];i>=0;i--)
    if (dep[x]+(1<<i)<=dep[y]) y=fa[y][i];
    if (x==y) return x;
    for (i=cnt[dep[x]];i>=0;i--)
    if (fa[x][i]!=fa[y][i]) x=fa[x][i],y=fa[y][i];
    return fa[x][0];
}
inline void cal(int x,int d,int t,int Dep) {
    int i;
    for (i=cnt[dep[x]];i>=0;i--) if ((1<<i)<=d) {
        d-=1<<i;
        if (t) an=max(an,g[x][i].a+Dep);
        else an=max(an,g[x][i].b+Dep);
        int A=get(x,(1<<i)-1);
        x=fa[x][i];
        int B=ma[x].a==ma[A].a?ma[x].b:ma[x].a;
        if (t) an=max(an,B-dep[x]*2+Dep);
        else an=max(an,B+Dep);
    }
}
inline void work(int x,int y) {
    if (dep[x]>dep[y]) swap(x,y);
    int A=lca(x,y);
    int B=dep[x]+dep[y]-2*dep[A];
    int C=get(y,B/2);
    an=ma[y].a-dep[y];
    if (x!=A) an=max(an,ma[x].a-dep[x]);
    else {
        int D=get(y,dep[y]-dep[x]-1);
        int E=ma[x].a==ma[D].a?ma[x].b:ma[x].a;
        an=max(an,E-dep[x]);
    }
    cal(y,B/2-(C==A),1,dep[y]);
    if (x!=A) cal(x,dep[x]-dep[A]-1,1,dep[x]);
    cal(A,dep[A],1,dep[x]);
    {
        int a1=get(y,dep[y]-dep[A]-1),a2=x==A?0:get(x,dep[x]-dep[A]-1);
        a1=ma[a1].a,a2=ma[a2].a;
        if (a1<a2) swap(a1,a2);
        int D=ma[A].a==a1?(ma[A].b==a2?ma[A].c:ma[A].b):ma[A].a;
        an=max(an,dep[x]+D-dep[A]*2);
    }
    if (C!=A) {
        int E=fa[C][0];
        int D=dep[E]-dep[A]-1;
        if (E==A) return;
        int F=ma[E].a==ma[C].a?ma[E].b:ma[E].a;
        an=max(an,F+dep[x]-2*dep[A]);
        cal(E,D,0,dep[x]-2*dep[A]);
    }
}
int main() {
    //freopen("418d.in","r",stdin);
    //freopen("418d.out","w",stdout);
    scanf("%d",&n);
    For(i,1,n-1) scanf("%d%d",&x,&y),add(x,y);
    For(i,2,N-1) cnt[i]=cnt[i/2]+1;
    memset(g,130,sizeof(g));
    dfs(1); Dfs(1);
    scanf("%d",&m);
    For(i,1,m) {
        scanf("%d%d",&x,&y);
        work(x,y);
        /*if (n!=27) printf("%d\n",an);
        else if (i==136) printf("%d %d\n",x,y);*/
        printf("%d\n",an);
    }
    //for (;;);
    return 0;
}
