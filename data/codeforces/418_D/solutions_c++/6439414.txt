#include<stdio.h>
#include<string.h>
#include<algorithm>
using namespace std;
const int maxn=100050,maxb=20;
int n,m;
int es=0,he[maxn]={0},to[maxn*2],ne[maxn*2];
int dep[maxn]={0},far[maxn][3]={0};
int f[maxn][maxb]={0},up[maxn][maxb]={0},down[maxn][maxb]={0};
inline int Dis(int x,int y) { return dep[x]-dep[y]; }
void ins(int u,int v)
{
	es++;
	to[es]=v;
	ne[es]=he[u];
	he[u]=es;
}
void dfs(int x,int fa)
{
	int i,j;
	f[x][0]=fa;
	for(i=0;f[x][i];i++)
		f[x][i+1]=f[f[x][i]][i];
	for(i=he[x];to[i];i=ne[i])
		if(to[i]!=f[x][0]) 
		{
			j=to[i];
			dep[j]=dep[x]+1;
			dfs(j,x);
			if(far[j][0]>=far[x][0]) far[x][2]=far[x][1],far[x][1]=far[x][0],far[x][0]=far[j][0]+1;
			else if(far[j][0]>=far[x][1]) far[x][2]=far[x][1],far[x][1]=far[j][0]+1;
			else if(far[j][0]>=far[x][2]) far[x][2]=far[j][0]+1;
		}
}
void dfs2(int x,int fa)
{
	int i,j;
	for(i=0;f[x][i+1];i++)
	{
		up[x][i+1]=max(up[x][i],up[f[x][i]][i]+(1<<i));
		down[x][i+1]=max(down[x][i]+(1<<i),down[f[x][i]][i]);
	}
	for(i=he[x];to[i];i=ne[i])
		if(to[i]!=fa)
		{
			j=to[i];
			down[j][0]=(far[x][0]==far[j][0]+1?far[x][1]:far[x][0]);
			up[j][0]=down[j][0]+1;
			dfs2(j,x);
		}
}
int getfa(int x,int d)
{
	int i;
	for(i=maxb-1;i>=0;i--)
		if(d>=1<<i)
			x=f[x][i],d-=1<<i;
	return x;
}
int lca(int x,int y)
{
	int i,a=x,b=y;
	for(i=maxb-1;i>=0;i--)
		if(Dis(a,b)>=1<<i)
			a=f[a][i];
	for(i=maxb-1;i>=0;i--)
		if(Dis(b,a)>=1<<i)
			b=f[b][i];
	for(i=maxb-1;i>=0;i--)
		if(f[a][i]!=f[b][i])
			a=f[a][i],b=f[b][i];
	return a==b?a:f[a][0];
}
int calc1(int x,int y)
{
	int i,k=0,s=0,d=Dis(x,y);
	for(i=maxb-1;i>=0;i--)
		if(d>=1<<i)
		{
			s=max(s,k+up[x][i]);
			k+=1<<i;
			x=f[x][i];
			d-=1<<i;
		}
	return s;
}
int calc2(int x,int y)
{
	int i,s=0,d=Dis(x,y);
	if(d<=0) return -1;
	for(i=maxb-1;i>=0;i--)
		if(d>=1<<i)
		{
			d-=1<<i;
			s=max(s,d+down[x][i]);
			x=f[x][i];
		}
	return s;
}
int calc3(int u,int x,int y=0)
{
	int i=0,fx=far[getfa(x,Dis(x,u)-1)][0]+1,fy=far[getfa(y,Dis(y,u)-1)][0]+1;
	//printf("%d %d %d %d\n",x,fx,y,fy);
	if(fx<fy) swap(fx,fy);
	if(fx==far[u][i]) i++;
	if(fy==far[u][i]) i++;
	return far[u][i];
}
int que(int x,int y)
{
	int u,w,u2,w2,dis,ans0;
	if(dep[x]<dep[y]) swap(x,y);
	u=lca(x,y);
	dis=Dis(x,u)+Dis(y,u);
	w=getfa(x,dis/2);
	u2=getfa(x,Dis(x,u)-1);
	w2=getfa(x,Dis(x,w)-1);
	ans0=max(far[x][0],max(calc1(x,dep[w]>=dep[u2]?w:u2),max(calc2(dis&1?w:w2,u2)+1+Dis(y,u),calc1(u,1)+Dis(y,u))));
	//printf("%d %d %d %d\n",far[x][0],calc1(x,dep[w]>=dep[u2]?w:u2),calc2(dis&1?w:w2,u2)+Dis(y,u)+1,calc1(u,1)+Dis(y,u));
	//printf("%d %d %d %d\n",u,dis,w,ans0);
	if(u==y)
		return max(ans0,calc3(u,x));
	else
		return max(ans0,max(calc3(u,x,y)+Dis(y,u),max(far[y][0],calc1(y,u2))));
}
int main()
{
#ifndef ONLINE_JUDGE
	freopen("data.in","r",stdin);
	freopen("data.out","w",stdout);
#endif
	int i,x,y;
	scanf("%d",&n);
	for(i=1;i<n;i++)
		scanf("%d%d",&x,&y),ins(x,y),ins(y,x);
	dfs(1,0);
	dfs2(1,0);
	//for(i=1;i<=n;i++) { for(int j=0;j<3;j++) printf("%d ",far[i][j]); printf("\n"); }
	scanf("%d",&m);
	for(i=0;i<m;i++)
	{
		scanf("%d%d",&x,&y);
		printf("%d\n",que(x,y));
	}
	return 0;
}
