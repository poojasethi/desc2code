#include <bits/stdc++.h>
using namespace std;
const int N = 100005;
int n, a[N], st[20][N], lg[N];
long long dp[N];
int query(int a, int b) {
	int k = lg[b - a + 1];
	int ab = b - (1 << k) + 1;
	int x = st[k][a];
	int y = st[k][ab];
	return ::a[x] > ::a[y] ? x : y;

}
int main() {
	scanf("%d", &n);
	for (int i = 0; i + 1 < n; ++i) {
		scanf("%d", a + i);
		--a[i];
	}
	a[n - 1] = n - 1;
	for (int i = 0; i < n; ++i)
		st[0][i] = i;
	for (int i = 2; i <= n; ++i)
		lg[i] = lg[i >> 1] + 1;
	for (int j = 0; (2 << j) <= n; ++j)
		for (int i = 0; i + (2 << j) <= n; ++i) {
			int k = i + (1 << j);
			int x = st[j][i];
			int y = st[j][k];
			st[j + 1][i] = a[x] > a[y] ? x : y;
		}
	dp[n - 1] = 0;
	for (int i = n - 2; i >= 0; --i) {
		int k = query(i + 1, a[i]);
		// cout << k << ": " << dp[k] << endl;
		dp[i] = dp[k] - (a[i] - k) + n - i - 1;
	}
	cout << accumulate(dp, dp + n, 0LL) << endl;
}