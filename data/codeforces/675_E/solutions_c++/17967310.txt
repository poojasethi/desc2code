#include <iostream>
#include <cstdio>
const long long inf=1e18;
long long tr[400010],ans=0,x;
int a[100010],i,n;
void build(int k,int l,int r)
{
	if (r==n) tr[k]=n;else tr[k]=inf;
	if (l==r) return;
	int mid=(l+r)>>1;
	build(k<<1,l,mid);
	build(k<<1^1,mid+1,r);
}
void modify(int k,int l,int r,int x,long long y)
{
	if (l==r)
	{
		tr[k]=y;return;
	}
	int mid=(l+r)>>1;
	if (x<=mid) modify(k<<1,l,mid,x,y);
		else modify(k<<1^1,mid+1,r,x,y);
	tr[k]=std::min(tr[k<<1],tr[k<<1^1]);
}
long long query(int k,int l,int r,int x,int y)
{
	if (x<=l && r<=y) return tr[k];
	int mid=(l+r)>>1;long long mn=inf;
	if (x<=mid) mn=query(k<<1,l,mid,x,y);
	if (y>mid) mn=std::min(mn,query(k<<1^1,mid+1,r,x,y));
	return mn;
}
int main()
{
		scanf("%d\n",&n);
		for (i=1;i<n;++i) scanf("%d",&a[i]);
		build(1,1,n);
		for (i=n-1;i;i--)
		{
			x=query(1,1,n,i+1,a[i])+n-i-a[i];
			ans+=x;
			modify(1,1,n,i,x+i);
		}
		printf("%I64d\n",ans);
}