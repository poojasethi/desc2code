#include<cstdio>
#include<cmath>
#include<cstring>
#include<cstdlib>
#include<iostream>
#include<algorithm>
using namespace std;

const int N = 100010;
typedef long long LL;
int n, a[N];
LL dp[N];

typedef pair<int,int> pii;
pii f[N][20];
void ready(){
	for(int i = 1; i <= n; i ++) f[i][0] = make_pair(a[i],i);
	for(int j = 1; (1 << j) <= n; j ++)
		for(int i = 1; i + (1 << j) - 1 <= n; i ++)
			f[i][j] = max(f[i][j - 1], f[i + (1 << (j - 1))][j - 1]);
}

int query(int l, int r){
	int k = log(r - l + 1) / log(2);
	return max(f[l][k], f[r - (1 << k) + 1][k]).second;
}
int main(){
	scanf("%d", &n);
	for(int i = 1; i < n; i ++) scanf("%d", &a[i]);
	ready();
	LL ans = 0;
	int j;
	for(int i = n - 1; i >= 1; i --){
		j = query(i + 1, a[i]);
		dp[i] = dp[j] - (a[i] - j) + n - i;
		ans += dp[i];
	}
	cout << ans << endl;
	return 0;
}
