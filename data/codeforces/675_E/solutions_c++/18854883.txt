#include <algorithm>
#include <cstdio>
long long tr[400010],ans,x;
int a[100010],i,n;
void modify(int now,int l,int r,int x,long long y)
{
	if (l==r)
	{
		tr[now]=y;return;
	}
	int mid=(l+r)>>1;
	if (x<=mid) modify(now<<1,l,mid,x,y);
		else modify(now<<1^1,mid+1,r,x,y);
	tr[now]=std::min(tr[now<<1],tr[now<<1^1]);
}
long long query(int now,int l,int r,int x,int y)
{
	if (x<=l && r<=y) return tr[now];
	int mid=(l+r)>>1;long long z=1e18;
	if (x<=mid) z=query(now<<1,l,mid,x,y);
	if (y>mid) z=std::min(z,query(now<<1^1,mid+1,r,x,y));
	return z;
}
int main()
{
	scanf("%d\n",&n);
	for (i=1;i<n;++i) scanf("%d",&a[i]);
	modify(1,1,n,n,n);
	for (i=n-1;i;--i)
	{
		x=query(1,1,n,i+1,a[i])-a[i]-i+n;
		ans+=x;
		modify(1,1,n,i,x+i);
	}
	printf("%I64d\n",ans);
}