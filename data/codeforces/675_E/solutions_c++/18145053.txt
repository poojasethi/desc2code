#include<iostream>
#include<algorithm>
#include<cstdio>
using namespace std;
long long int a[100005];
int gench[400005];
long long dp[100005];
long long int res=0;
long long int n;
void up(int rt){
 	if(a[gench[rt*2]]>=a[gench[rt*2+1]])
    	gench[rt]=gench[rt*2];
  	else gench[rt]=gench[rt*2+1];
}
void build(int p,int left,int right){
	int mid=(left+right)/2;
	if(left==right){
		gench[p]=left;
		return;
	}
	build(p*2,left,mid);
	build(p*2+1,mid+1,right);
	up(p);
}
int query(int p,int left,int right,int l,int r){
	int mid=(left+right)/2;
	if(l<=left&&r>=right) return gench[p];
	int ls=-1,rs=-1;
	if(l<=mid) ls=query(p*2,left,mid,l,r);
	if(r>mid) rs=query(p*2+1,mid+1,right,l,r);
	if(ls==-1)return rs;
  	if(rs==-1)return ls;
  	if(a[ls]>=a[rs])return ls;
  	else return rs;
}
int main(){
	cin>>n;
	for(int i=1;i<n;++i){
		scanf("%d",a+i);
	}
	a[n]=n;
	build(1,1,n);
	dp[n]=0;
	for(int i=n-1;i>=1;--i){
		int ans=query(1,1,n,i+1,a[i]);
		dp[i]=dp[ans]+(n-i)-(a[i]-ans);
		res+=dp[i];
	}
	cout<<res<<endl;
}