#include <bits/stdc++.h>
using namespace std;
typedef long long LL;
const int N=100005;
int t[N<<2],in[N],n;
LL dp[N],ans;
void build(int r,int L,int R)
{
    if(L==R)
    {
        t[r]=L;
        return;
    }
    int mid=L+R>>1;
    build(r<<1,L,mid);
    build(r<<1|1,mid+1,R);
    t[r]= in[t[r<<1]]>in[t[r<<1|1]]?t[r<<1]:t[r<<1|1];
}
int qry(int r,int L,int R,int x,int y)
{
    if(x==L&&y==R)
        return t[r];
    int mid=L+R>>1;
    if(y<=mid)
        return qry(r<<1,L,mid,x,y);
    if(x>mid)
        return qry(r<<1|1,mid+1,R,x,y);
    int ans1,ans2;
    ans1=qry(r<<1,L,mid,x,mid);
    ans2=qry(r<<1|1,mid+1,R,mid+1,y);
    return in[ans1]>in[ans2]?ans1:ans2;
}
int main()
{
    int i,j;
    scanf("%d",&n);
    for(i=1;i<n;++i)
        scanf("%d",in+i);
    in[n]=-1;
    build(1,1,n);
    dp[n]=0;
    dp[n-1]=ans=1;
    for(i=n-2;i>=1;--i)
    {
        j=qry(1,1,n,i+1,in[i]);
        dp[i]=dp[j]+(n-i)-(in[i]-j);
        ans+=dp[i];
    }
    printf("%I64d\n",ans);
    return 0;
}
