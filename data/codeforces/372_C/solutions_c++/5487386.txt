#include <cstdio>
#include <deque>
#include <algorithm>
using namespace std;
long long dp[2][150100];
int abs(int x) { return x>0 ? x:-x; }
int main() {
	int n, m, d, a, b, t;
	long long ans = 0, T = 0, x;
	scanf("%d%d%d", &n, &m, &d);
	for (int i = 0; i < m; i++) {
		int z = i & 1, y = z ^ 1;
		scanf("%d%d%d", &a, &b, &t);
		x = min((long long)n, (t - T) * d);
		--a;
		ans += b;
		deque<long long> q;
		for (int j = 0; j < x; j++) {
			while (q.size() && q.back() > dp[z][j]) {
				q.pop_back();
			}
			q.push_back(dp[z][j]);
		}
		for (int j = 0; j < n; j++) {
			if (j+x < n) {
				while (q.size() && q.back() > dp[z][j+x]) {
					q.pop_back();
				}
				q.push_back(dp[z][j+x]);
			}
			dp[y][j] = q.front() + abs(j - a);
			if (j-x >= 0 && q.size() && q.front() == dp[z][j-x]) q.pop_front();
		}
		T = t;
	}
	printf("%I64d\n", ans - *min_element(dp[m&1], dp[m&1]+n));
	return 0;
}
