#include <iostream>
#include <string>
#include <cstring>
#include <vector>
#include <cmath>
#include <map>
#include <algorithm>
#include <cstdio>
#include <set>
#include <queue>
#include <cassert>
#include <climits>
using namespace std;
int T[305];
long long F[150005], maxF[300005];
int main() {
	int N, M, D;
	scanf("%d%d%d", &N, &M, &D);
	long long ans = -(1LL << 60);
	for (int i = 0; i < M; ++i) {
		int a, b;
		scanf("%d%d%d", &a, &b, &T[i]);
		int dt = i ? T[i] - T[i - 1] : 0;
		int dd = min((long long)dt * D, (long long)N - 1);
		int range = dd * 2 + 1;
		deque<int> deq;
		for (int j = 1; j <= N + dd; ++j) {
			while (!deq.empty() && deq.front() <= j - range) deq.pop_front();
			if (j <= N) {
				while (!deq.empty() && F[deq.back()] <= F[j]) deq.pop_back();
				deq.push_back(j);
			}
			maxF[j] = F[deq.front()];
		}
		for (int j = 1; j <= N; ++j) {
			F[j] = b - abs(a - j) + maxF[j + dd];
			if (i == M - 1) ans = max(ans, F[j]);
		}
	}
	printf("%I64d\n", ans);
}
