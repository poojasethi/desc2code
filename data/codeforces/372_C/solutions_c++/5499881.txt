#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int mod(int a) { return a>0?a:-a; }

const int N=155555;
long long dp[N], r[N], l[N];

int main() {
	int n, m, dd;
	cin>>n>>m>>dd;
	int tt=0;
	for(int i=1;i<=m;i++) {
		int a, b, t;
		cin>>a>>b>>t;
		long long d = 1ll*(t-tt)*dd;
		tt = t;
		int x1, x2;
		l[1] = dp[1];
		x1 = 1;
		x2 = 2;
		for(int j=2;j<=n;j++) {
			if(x1 < j-d) { x1=x2; x2++; }
			if(dp[x1]<=dp[j]) { x1=j;x2=j+1; }
			if(x1 != j && dp[x2]<=dp[j]) x2=j;
			l[j] = dp[x1];
		}
		r[n] = dp[n];
		x1 = n;
		x2 = n-1;
		for(int j=n-1;j>=1;j--) {
			if(x1 > j+d) { x1=x2; x2--; }
			if(dp[x1]<=dp[j]) { x1=j;x2=j-1; }
			if(x1 != j && dp[x2]<=dp[j]) x2=j;
			r[j] = dp[x1];
		}
		for(int j=1;j<=n;j++) dp[j] = max(l[j], r[j]) + b - mod(a-j);
	}
	cout << *max_element(dp+1, dp+n+1) << endl;
	return 0;
}
