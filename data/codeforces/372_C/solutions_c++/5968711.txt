#include <cstdio>
#include <algorithm>
#include <deque>
using namespace std;
typedef long long ll;

int n, m, fpos; deque<int> dq;
ll d, a1[234567], a2[234567], *dp = a1, *adv = a2, sc, t, lt;
void psh(int pos) {
    while (!dq.empty() && dp[pos] >= dp[dq.back()]) dq.pop_back();
    dq.push_back(pos);
}
int main() {
    scanf("%d %d %lld", &n, &m, &d);
    for (int i = 0; i < m; i++) {
        scanf("%d %lld %lld", &fpos, &sc, &t);
        ll rs = 1-d*(t-lt), re = 1+d*(t-lt); dq.clear();
        for (int j = 1; j <= re && j <= n; j++) psh(j);
        for (int j = 1; j <= n; j++) {
            adv[j] = dp[dq.front()] + sc - abs(fpos-j);
            rs++; re++;
            if (dq.front() < rs) dq.pop_front();
            if (re <= n) psh(re);
        }
        swap(dp, adv); lt = t;
    }
    ll ans = dp[1];
    for (int i = 2; i <= n; i++) ans = max(ans, dp[i]);
    printf("%lld\n", ans);

    return 0;
}