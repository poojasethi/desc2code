#include <cstdio>
#include <algorithm>
#include <iostream>
#include <cstring>
using namespace std;

#define N 150001
#define M 301
#define LL long long

int dp[N][M], n, m, d, eve[M], que[N][2], t[M];

int solve()
{
	memset(dp, 0x3f, sizeof dp);
	int r = dp[0][0];
	for (int x = 1; x <= n; ++x)
		dp[x][0] = 0;
	for (int e = 0; e < m; ++e)
	{
		int a = 0, b = 0, p = 1;
		for (int x = 1; x <= n; ++x)
		{
			LL v = 1LL*d*(t[e+1]-t[e]);
			while (b > a && que[a][1] < x-v) ++a;
			while (p <= x+v && p <= n)
			{
				int y = dp[p][e];
				while (b > a && que[b-1][0] >= y) --b;
				que[b][0] = y;
				que[b++][1] = p++;
			}
			dp[x][e+1] = min(dp[x][e+1], que[a][0]+abs(x-eve[e]));
		}
	}
	for (int x = 1; x <= n; ++x)
		r = min(r, dp[x][m]);
	return r;
}

int main()
{
	scanf("%d%d%d", &n, &m, &d);
	LL r = 0;
	for (int i = 0; i < m; ++i)
	{
		int b;
		scanf("%d%d%d", eve+i, &b, t+i+1);
		r += b;
	}
	cout << r-solve() << endl;
}

