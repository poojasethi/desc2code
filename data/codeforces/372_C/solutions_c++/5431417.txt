#include <cstdio>
#include <iostream>
#include <algorithm>
#include <deque>
using namespace std;

typedef long long LL;
typedef pair<LL,int> PLI;

const int N = 150005;
const int M = 305;

int n, m, d, a[M], b[M], t[M];
LL f[2][N];

int main() {
	scanf("%d%d%d", &n, &m, &d);
	for(int i = 1; i <= m; ++i) {
		scanf("%d%d%d", a+i, b+i, t+i);
	}
	t[0] = 0;
	for(int i = 1, x = 1; i <= m; ++i, x^=1) {
		LL dt = t[i] - t[i-1];
		LL l = dt * d;
		deque<PLI> q;
		for(int j = 1, k = 1; j <= n; ++j) {
			for(; k <= n && k-j <= l; ++k) {
				while(!q.empty() && q.back().first <= f[x^1][k]) q.pop_back();
				q.push_back(PLI(f[x^1][k], k));
			}
			while(!q.empty() && j-q.front().second > l) q.pop_front();
			LL ma = q.front().first;
			LL add = b[i]-abs(a[i]-j);
			f[x][j] = ma + add;
		}
	}
	LL ans = f[m&1][1];
	for(int x = 2; x <= n; ++x) {
		ans = max(ans, f[m&1][x]);
	}
	printf("%I64d\n", ans);
}