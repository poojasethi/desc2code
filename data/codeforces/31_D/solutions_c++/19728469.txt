#include <iostream>
#include <map>
#include <vector>
#include <cstring>
#include <utility>
#include <algorithm>
#include <cstdio>
#include <queue>
#include <string>
#include <stack>
#include <set>
#include <deque>
#define mp make_pair
using namespace std;
int n,m,k,sum;
set <pair<int,int> > st[105][105];
bool used[105][105];
int dx[]={1,0,-1,0};
int dy[]={0,1,0,-1};
bool check(int x,int y){
	return (x>=0 && x<n && y>=0 && y<m);
}
void dfs(int x,int y){
	used[x][y]=true;
	sum++;
	for (int i=0;i<4;i++){
		int nx=x+dx[i];
		int ny=y+dy[i];
		if (check(nx,ny) && st[x][y].count(mp(nx,ny))==0 && !used[nx][ny]){
			dfs(nx,ny);
		}
	}
}
int main(){
	cin>>n>>m>>k;
	for (int i=0;i<k;i++){
		int x,y,x2,y2;
		cin>>x>>y>>x2>>y2;
		if (x==x2 && y!=y2){
			for (int j=y;j<y2;j++){
				st[x-1][j].insert(mp(x,j));
				st[x][j].insert(mp(x-1,j)); 
			}
		}else{
			for (int i=x;i<x2;i++){
				st[i][y-1].insert(mp(i,y));
				st[i][y].insert(mp(i,y-1));  
			}
		}
	}
	int a[10005],p=0;
	for (int i=0;i<n;i++){
		for (int j=0;j<m;j++){
			if (!used[i][j]){
				sum=0;
				dfs(i,j);
				a[p++]=sum;
			}
		}
	}
	sort(a,a+p);
	for (int i=0;i<p;i++) cout<<a[i]<<' ';
	return 0;
}
