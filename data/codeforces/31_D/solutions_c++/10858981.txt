#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cstdlib>
#include <cstdio>
#include <stdio.h>
#include <map>
#include <set>
#include <cmath>
#include <vector>
#include <ctime>
#include <queue>
#include <sstream>
#include <utility>
using namespace std;
int n,m,k;
bool visit[105];
vector<int> ans;

struct cut
{
	int x1,x2,y1,y2;
	bool in (int nx1,int ny1,int nx2,int ny2)
	{
		if(x1==x2)
			return nx1<=x1 && nx2>=x1 && y1==ny1 && y2==ny2;
		else
			return ny1<=y1 && ny2>=y1 && x1==nx1 && x2==nx2;
	}
}c[105];

void dfs (int x3,int y3,int x4,int y4)
{
	for (int i=1;i<=k;i++)
 	{
 		if (!visit[i])
 		{
 			 if (c[i].in(x3,y3,x4,y4))
			 {
 		 		visit[i]=true;
				if (c[i].y1==c[i].y2)
		 		{
		 		    dfs(x3,y3,x4,c[i].y1);
		 			dfs(x3,c[i].y1,x4,y4);
		 		}
		 		else
		 		{
		 			dfs(x3,y3,c[i].x1,y4);
		 			dfs(c[i].x1,y3,x4,y4);
				}
				return;
			 }
   		}
	}
	ans.push_back((x4-x3)*(y4-y3));
}

int main()
{
	cin>>n>>m>>k;
	for(int i=1;i<=k;i++)
	{
		cin>>c[i].x1>>c[i].y1>>c[i].x2>>c[i].y2;
	}
	dfs(0,0,n,m);
	sort(ans.begin(),ans.end());
	for(int i=0;i<ans.size();i++)
	{
		cout<<ans[i]<<" ";
	}
	return 0;
}
