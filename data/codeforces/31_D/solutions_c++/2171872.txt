#include <cstdio>
#include <algorithm>

using namespace std;

struct _break
{
	int x1, y1, x2, y2;
};

const int maxn = 110;
int w, h, n, tot, s[maxn];
_break p[maxn];

void dfs(int x1, int y1, int x2, int y2)
{
	for (int i = 0; i < n; i++)
	{
		if (p[i].x1 == x1 && p[i].x2 == x2 && y1 < p[i].y1 && p[i].y1 < y2)
		{
			dfs(x1, y1, x2, p[i].y1);
			dfs(x1, p[i].y1, x2, y2);
			return;
		}
		if (p[i].y1 == y1 && p[i].y2 == y2 && x1 < p[i].x1 && p[i].x1 < x2)
		{
			dfs(x1, y1, p[i].x1, y2);
			dfs(p[i].x1, y1, x2, y2);
			return;
		}
	}
	s[tot++] = (x2 - x1) * (y2 - y1);
}

int main()
{
	scanf("%d%d%d", &w, &h, &n);
	for (int i = 0; i < n; i++)
		scanf("%d%d%d%d", &p[i].x1, &p[i].y1, &p[i].x2, &p[i].y2);
	tot = 0;
	dfs(0, 0, w, h);
	sort(s, s + tot);
	for (int i = 0; i < tot; i++)
	        printf("%d ", s[i]);
	printf("\n");
	
	return 0;
}
