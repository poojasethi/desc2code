#include<ctime>
#include<cstdio>
#include<cctype>
#include<cstring>
#include<climits>

#include<map>
#include<set>
#include<queue>
#include<deque>
#include<vector>
#include<stack>

#include<string>
#include<sstream>
#include<iostream>
#include<algorithm>

using namespace std;

#define PB push_back
#define MP make_pair
#define foreach(e,x) for(__typeof(x.begin()) e=x.begin(); e!=x.end(); ++e)

typedef long long LL;
typedef long double LD;
typedef pair<int, int> PII;
typedef vector<int> VI;

const int MAX_N = 100000 + 10;

int N, M, X;
int x1[MAX_N], y1[MAX_N], x2[MAX_N], y2[MAX_N];
int tot;
int a[MAX_N];

void dfs(int l, int u, int r, int d)
{
	for(int i = 0; i < X; ++ i) {
		if (l == x1[i] && r == x2[i] && y1[i] > u && y1[i] < d) {
			dfs(l, u, r, y1[i]);
			dfs(l, y1[i], r, d);
			return;
		}
		if (u == y1[i] && d == y2[i] && x1[i] > l && x1[i] < r) {
			dfs(l, u, x1[i], d);
			dfs(x1[i], u, r, d);
			return;
		}
	}
	a[tot ++] = (r - l) * (d - u);
}

void solve()
{
	cin >> N >> M >> X;
	for(int i = 0; i < X; ++ i) {
		cin >> x1[i] >> y1[i] >> x2[i] >> y2[i];
	}
	tot = 0;
	dfs(0, 0, N, M);
	sort(a, a + tot);
	for(int i = 0; i < tot; ++ i) 
		cout << a[i] << endl;
}

int main()
{
	solve();
	return 0;
}


	 	 	    		  		 			 		