#include <iostream>
#include <cstring>
#include <string>
#include <algorithm>
#include <cstdlib>
#include <cstdio>
#include <stdio.h>
#include <map>
#include <set>
#include <cmath>
#include <vector>
#include <ctime>
#include <queue>
#include <sstream>
#include <utility>

using namespace std;

struct CUT
{
	int x1,y1,x2,y2;
}cut[105];

int n,m,q;
vector<int> ans;
bool used[105];

void dfs(int x1,int y1,int x2,int y2)
{
	for(int i=1;i<=q;i++)
	{
		if(!used[i])
		{   
			if(cut[i].x1==cut[i].x2)
			{
				if(cut[i].y1==y1 && cut[i].y2==y2 && cut[i].x1>=x1 && cut[i].x2<=x2)
				{
					used[i]=true;
					dfs(x1,y1,cut[i].x1,y2);
					dfs(cut[i].x1,y1,x2,y2);
					return;
				}
			}
			else
			{
				if(cut[i].x1==x1 && cut[i].x2==x2 && cut[i].y1>=y1 && cut[i].y2<=y2)
				{
					used[i]=true;
					dfs(x1,y1,x2,cut[i].y2);
					dfs(x1,cut[i].y1,x2,y2);
					return;
				}
			}
		}
	}
	ans.push_back((x2-x1)*(y2-y1));
}

int main()
{
	cin>>n>>m>>q;
	for(int i=1;i<=q;i++)
	{
		cin>>cut[i].x1>>cut[i].y1>>cut[i].x2>>cut[i].y2;
	}
	dfs(0,0,n,m);
	sort(ans.begin(),ans.end());
	for(int i=0;i<=q;i++)
	{
		cout<<ans[i]<<" ";
	}
	cout<<endl;
}
    	  		 				 		  		 	 					 	