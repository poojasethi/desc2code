#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;
const int dx[]={0,1,0,-1};
const int dy[]={1,0,-1,0};
bool g[102][102][102][102];
bool vis[102][102];
int p[10010];
int W,H,n,x1,y1,x2,y2,tot;
void dfs(int x, int y)
{
	vis[x][y]=true;
	p[tot]++;
	for (int k=0; k<4; k++)
	{
		int xx=x+dx[k],yy=y+dy[k];
		if (xx>=1 && xx<=W && yy>=1 && yy<=H && !vis[xx][yy] && !g[x][y][xx][yy]) dfs(xx,yy);
	}
}
int main()
{
	scanf("%d%d%d",&W,&H,&n);
	for (int i=1; i<=n; i++)
	{
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		if (x1==x2) for (int j=y1+1; j<=y2; j++) g[x1][j][x1+1][j]=g[x1+1][j][x1][j]=true;
		if (y1==y2) for (int j=x1+1; j<=x2; j++) g[j][y1][j][y1+1]=g[j][y1+1][j][y1]=true;
	}
	for (int i=1; i<=W; i++)
	{
		for (int j=1; j<=H; j++)
		{
			if (!vis[i][j])
			{
				tot++;
				dfs(i,j);
			}
		}
	}
	sort(p+1,p+tot+1);
	for (int i=1; i<=tot; i++) printf("%d ",p[i]);
	printf("\n");
	return 0;
}