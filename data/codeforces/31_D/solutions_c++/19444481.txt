#include <map>
#include <set>
#include <queue>
#include <cstdio>
#include <vector>
#include <cstring>
#include <sstream>
#include <iostream>
#include <algorithm>
using namespace std;
int n,m,k,sum=1,ans[10005];
bool row[105][105],line[105][105];
bool v[105][105];
void dfs(int i,int j,int d)
{
	if(v[i][j])
	return;
	v[i][j]=true;
	if(!row[i][j]&&i<n)
	dfs(i+1,j,d+1);
	if(!row[i-1][j]&&i>1)
	dfs(i-1,j,d+1);
	if(!line[i][j]&&j<m)
	dfs(i,j+1,d+1);
	if(!line[i][j-1]&&j>1)
	dfs(i,j-1,d+1);
	ans[sum]=max(ans[sum],d);
}
int main()
{
	cin>>n>>m>>k;
	for(int i=1;i<=k;i++)
	{
	int x1,x2,y1,y2; 
	cin>>x1>>y1>>x2>>y2;
	for(int x=min(x1,x2)+(x1!=x2);x<=max(x1,x2);x++)
	for(int y=min(y1,y2)+(y1!=y2);y<=max(y1,y2);y++)
	{
	if(x1==x2)
	row[x][y]=true;
	else line[x][y]=true;
	//cout<<row[x][y]<<" "<<line[x][y]<<endl;
	}
	}
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++)
	if(!v[i][j])
	{
	dfs(i,j,1);
	sum++;
	}
	sort(ans,ans+sum);
	for(int i=1;i<sum;i++)
	cout<<ans[i]<<" ";
	return 0;
}