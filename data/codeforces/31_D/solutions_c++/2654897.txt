#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>

using namespace std;


int main()
{
  const int MAX_SIZE = 100;

  typedef struct { bool counted, r, t; } Cell;
  Cell cells[MAX_SIZE][MAX_SIZE] = { { { 0, 0, 0 } } };

  int W, H, n;
  cin >> W >> H >> n;

  for (int i = 0; i < n; i++) {
    int x1, y1, x2, y2;
    cin >> x1 >> y1 >> x2 >> y2;

    if (x1 == x2)
      for (int y = y1; y < y2; y++)
        cells[x1 - 1][y].r = 1;
    else
      for (int x =x1; x < x2; x++)
        cells[x][y1 - 1].t = 1;
  }


  vector<int> parts;

  for (int x1 = 0; x1 < W; x1++)
    for (int y1 = 0; y1 < H; y1++)
      if (!cells[x1][y1].counted) {
        int x2, y2;
        for (x2 = x1; x2 < W - 1 && !cells[x2][y1].r; x2++);
        for (y2 = y1; y2 < H - 1 && !cells[x1][y2].t; y2++);
        x2++; y2++;
     
        parts.push_back((x2 - x1) * (y2 - y1));
        for (int x = x1; x < x2; x++)
          for (int y = y1; y < y2; y++)
            cells[x][y].counted = 1;
      }
  sort(parts.begin(), parts.end());

  for (int i = 0; i < parts.size(); i++)
    cout << parts[i] << ' ';
  cout << endl;
}
