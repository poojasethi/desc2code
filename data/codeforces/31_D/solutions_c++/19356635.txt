// 30min
#include<stdio.h>
#include<algorithm>

using namespace std;

const int maxn=220;
int a[maxn][maxn];
int w,h,n;
int hash[maxn][maxn];
int ans[maxn];

bool g(int x,int y) {
	if (x<1 || x==w*2+1 || y<1 || y==h*2+1)
		return false;
	else return a[x][y]!=-1 && !hash[x][y];
}

int sz;
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
void dfs(int x,int y) {
	sz+=a[x][y];
	hash[x][y]=1;
	for (int i=0;i<4;i++)
		if (g(x+dx[i],y+dy[i]))
			dfs(x+dx[i],y+dy[i]);
}

int main() {
	for (int i=1;i<110;i++) 
	for (int j=1;j<110;j++) {
		a[i*2][j*2]=1;
	}
	
	scanf("%d %d %d",&w,&h,&n);
	
	for (int i=1;i<=n;i++) {
		int x1,y1,x2,y2;
		scanf("%d %d %d %d",&x1,&y1,&x2,&y2);
		x1=x1*2+1;x2=x2*2+1;
		y1=y1*2+1;y2=y2*2+1;
		for (int i=x1;i<=x2;i++){
			for (int j=y1;j<=y2;j++)
			a[i][j]=-1;
		}
	}
	
	int cnt=0;
	for (int i=2;i<=w*2;i+=2)
		for (int j=2;j<=h*2;j+=2) 
			if (g(i,j)){
				sz=0;
				dfs(i,j);
				ans[++cnt]=sz;
			}
	
	sort(ans+1,ans+cnt+1);
	for (int i=1;i<=cnt;i++)
		printf("%d ",ans[i]);
	
	return 0;	
}

		   			 		 	 	   	    			 		 	