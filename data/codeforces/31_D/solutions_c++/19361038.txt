#include<iostream>
#include<algorithm>
using namespace std;
int edge[111][111][4],cnt,area[111];
int w,h,n,num,x1,x2,y1,y2;
int dx[4]={-1,0,1,0};
int dy[4]={0,-1,0,1};
bool used[111][111];
bool In(int x,int y)
{
	return (x>=0 && x<w && y>=0 && y<h);
}
void dfs(int x,int y)
{
	used[x][y]=1;
	cnt++;
	for (int i=0;i<4;i++)
	{
		int xx=x+dx[i];
		int yy=y+dy[i];
		if (!edge[x][y][i] && !used[xx][yy] && In(xx,yy)) dfs(xx,yy);
	}
}
int main()
{
	cin>>w>>h>>n;
	for (int i=1;i<=n;i++)
	{
		cin>>x1>>y1>>x2>>y2;
		if (x1==x2)
		{
			for (int j=y1;j<y2;j++)
			{
				edge[x1-1][j][2]=1;
				edge[x1][j][0]=1;
			}
		}
		if (y1==y2)
		{
			for (int j=x1;j<x2;j++)
			{
				edge[j][y1-1][3]=1;
				edge[j][y1][1]=1;
			}
		}
	}
	for (int i=0;i<w;i++)
	{
		for (int j=0;j<h;j++)
		{
			if (!used[i][j])
			{
				cnt=0;
				dfs(i,j);
				area[num++]=cnt;
			}
		}
	}
	sort(area,area+num);
	for (int i=0;i<num;i++)
	{
		if (i) cout<<" ";
		cout<<area[i];
	}
	cout<<endl;
	return 0;
}
