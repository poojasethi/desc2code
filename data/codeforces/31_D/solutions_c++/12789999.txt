#include<iostream>
#include<vector>
#include<algorithm>
using namespace std;
int x,y,cut;
int d1[]={1,-1,0,0},d2[]={0,0,1,-1};
bool edge[110][110][4];
bool u[110][110];
void dfs(int a,int b)
{
    int i;
    if(a<0 || a>=x || b<0 || b>=y || u[a][b]) 
	return;
    u[a][b]=true; 
	cut++;
    for (int i=0;i<4;i++)
	if(!edge[a][b][i]) 
	dfs(a+d1[i],b+d2[i]);
}
int main()
{
    int n,a1,b1,a2,b2;
    cin>>x>>y>>n;
    for (int i=0;i<n;i++)
	{
        cin>>a1>>b1>>a2>>b2;
        if(a1==a2) 
		for(int j=b1;j<b2;j++) 
		{
			edge[a1-1][j][0]=true;
			edge[a1][j][1]=true;
		}
        if(b1==b2) 
		for(int j=a1;j<a2;j++) 
		{
			edge[j][b1-1][2]=true;
			edge[j][b1][3]=true;
		}
    }
    vector<int>sum;
    for (int i=0;i<x;i++)
	for (int j=0;j<y;j++)
	if(!u[i][j])
	{
        cut=0;
        dfs(i,j);
        sum.push_back(cut);
    }
    sort(sum.begin(),sum.end());
    for (int i=0;i<n+1;i++)
    cout<<sum[i]<<' ';
    return 0;
}
