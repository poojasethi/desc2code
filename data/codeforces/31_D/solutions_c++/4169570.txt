#include <cstdlib>
#include <cstdio>
#include <algorithm>
#include <vector>
using namespace std;

const int MAXN = 200;

vector<int> ans;
int a[MAXN], l[MAXN][MAXN], r[MAXN][MAXN], u[MAXN][MAXN], d[MAXN][MAXN];
int dx[4] = {1, -1, 0, 0};
int dy[4] = {0, 0, 1, -1};
int visit[MAXN][MAXN];
int w, h, n, area;

void dfs(int x, int y) {
	if (x > h || x < 1 || y < 1 || y > w)
		return;
	if (visit[x][y])
		return;
	area++;
	visit[x][y] = 1;
	if (r[x][y] == 0)
		dfs(x, y + 1);
	if (l[x][y] == 0)
		dfs(x, y - 1);
	if (u[x][y] == 0)
		dfs(x - 1, y);
	if (d[x][y] == 0)
		dfs(x + 1, y);
}

int main() {
	scanf("%d %d %d", &w, &h, &n);
	for(int i = 1; i <= n; i++) {
		int x1, y1, x2, y2;
		scanf("%d %d %d %d", &x1, &y1, &x2, &y2);
		if (x1 == x2) {
			for(int j = y1 + 1; j <= y2; j++) {
				r[j][x1] = 1;
				l[j][x1 + 1] = 1;
			}	
		} else {
			for(int j = x1 + 1; j <= x2; j++) {
				d[y1][j] = 1;
				u[y1 + 1][j] = 1;
			}
		}
	}
	for(int i = 1; i <= h; i++)
		for(int j = 1; j <= w; j++)
			if (!visit[i][j]) {
				area = 0;
				dfs(i, j);
				ans.push_back(area);
			}
	sort(ans.begin(), ans.end());
	int first = 1;
	for(int i = 0; i < ans.size(); i++) {
		if (!first)
			printf(" ");
		first = 0;
		printf("%d", ans[i]);
	}
	return 0;
}

	 	 	  		 	    	    	 	   	