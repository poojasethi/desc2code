#include <cstdio>
#include <vector>
#include <algorithm>

using namespace std;

int W, H, N;
int V[210][210];
int B[210][210][4];
int ret;

int dy[] = { 1, 0, -1, 0 };
int dx[] = { 0, -1, 0, 1 };

void flood(int y, int x) {
    if (y < 0 || x < 0 || y >= H || x >= W || V[y][x]) return;
    V[y][x] = 1; ret++;
    for (int i = 0; i < 4; i++) if (!B[y][x][i]) flood(y+dy[i], x+dx[i]);
}

int main() {

    scanf("%d %d %d", &W, &H, &N);
    for (int i = 0; i < N; i++) {
        int x1, x2, y1, y2;
        scanf("%d %d %d %d", &x1, &y1, &x2, &y2);
        if (x1 == x2) for (int i = y1; i < y2; i++) B[i][x1-1][3] = B[i][x1][1] = 1;
        else          for (int j = x1; j < x2; j++) B[y1-1][j][0] = B[y1][j][2] = 1;
    }
    vector<int> RET;
    for (int i = 0; i < H; i++) for (int j = 0; j < W; j++) if (!V[i][j]) { ret = 0; flood(i, j); RET.push_back(ret); }
    sort(RET.begin(), RET.end());
    for (int i = 0; i < RET.size(); i++) printf("%d ", RET[i]);

    return 0;
}
