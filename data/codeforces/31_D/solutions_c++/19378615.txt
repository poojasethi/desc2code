#include<cstdio>
#include<algorithm>
using namespace std;
int bars,cnt[10000],W,H;
bool u[100][100],cannot[100][100][4];
const int dx[4]={-1,0,0,1},
		  dy[4]={0,-1,1,0};
bool inrange(int x,int y){
	return 0<=x&&x<W&&0<=y&&y<H;
}
void dfs(int x,int y,int mark){
	u[x][y]=1;
	cnt[mark]++;
	for(int d=0;d<4;d++){
		int tx=x+dx[d],ty=y+dy[d];
		if(inrange(tx,ty)&&!u[tx][ty]&&!cannot[x][y][d]) dfs(tx,ty,mark);
	}
}
int main(){
	int n,x1,y1,x2,y2;
	scanf("%d%d%d",&W,&H,&n);
	for(int i=0;i<n;i++){
		scanf("%d%d%d%d",&x1,&y1,&x2,&y2);
		if(x1==x2)
			for(int j=y1;j<y2;j++) cannot[x1-1][j][3]=cannot[x1][j][0]=1;
		else
			for(int i=x1;i<x2;i++) cannot[i][y1-1][2]=cannot[i][y1][1]=1;
	}
	for(int i=0;i<W;i++) for(int j=0;j<H;j++) if(!u[i][j]) dfs(i,j,bars++);
	sort(cnt,cnt+bars);
	for(int i=0;i<bars;i++) printf("%d%c",cnt[i],(i<bars-1?' ':'\n'));
	return 0;
}