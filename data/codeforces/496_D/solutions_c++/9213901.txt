#include <iostream>
#include <cstdio>
#include <algorithm>
#include <vector>
#include <cstring>
using namespace std;
const int N=2e6+10;
const int md=1e9+7;
int a[N][2],b[N];
int i,j,n,m,ans,x,y,t,z,k;
pair <int,int> p[N];

int poisk(int x,int s)
{
 int l=x,r=n;
 while (r-l>1)
  {
   int t=(l+r)/2;
   if (a[t][1]-a[x][1]<s && a[t][2]-a[x][2]<s) l=t;else r=t;
  }
  if (a[r][1]-a[x][1]<s && a[r][2]-a[x][2]<s) return n+1;
  return r;
}


int main()
{
cin>>n;
for (i=1;i<=n;i++)
 {
  cin>>x;
  a[i][1]=a[i-1][1]+(x==1);
  a[i][2]=a[i-1][2]+(x==2);
  m=x;
 }
//for (i=1;i<=n;i++) cout<<a[i][2]<<' ';

for (z=1;z<=max(a[n][1],a[n][2]);z++)
 {
   int t1=0,t2=0,l=0;
   while (l<n)
    {
      int ll=poisk(l,z);
      if (ll>n) {l=ll;break;}
      if (a[ll][1]-a[l][1]==z) t1++; else t2++;
      l=ll;
    }
   if (l>n) continue;
   if ( (m==1 && t1>t2) || (m==2 && t1<t2) )
              p[ans++]=make_pair(max(t1,t2),z);

 }
sort(p,p+ans);
cout<<ans<<endl;
for (i=0;i<ans;i++)
 cout<<p[i].first<<' '<<p[i].second<<endl;

}
