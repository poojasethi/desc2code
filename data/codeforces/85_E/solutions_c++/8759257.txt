#include <iostream>	
#include <cmath>
#define maxn 100000

using namespace std;

int n;
int a[maxn][2];
char c[maxn];
int s, e;
long long l, li;
bool flag;

void dfs(int x, int i, char color)
{
	c[i] = color;
	int k=1;
	for (int j=0;j < n;j++)
	{
		if (abs (a[i][0] - a[j][0]) + abs(a[i][1] - a[j][1]) > x)
		{
			if (c[j] == color)
			{
				flag = false;
				return;
			}
			else if (c[j] != (color-2)*(color-2) + 1)
				dfs(x, j, (color-2)*(color-2) + 1);
		}
	}
}

bool valid(int x)
{
	fill(c, c + n, 0);
	flag = true;
	l = 1;
	for(int i=0;i < n;i++)
	{
		if(c[i] == 0)
		{
			dfs(x, i, 1);
			l*=2;
			l%=1000000007;
			if(!flag)
				return flag;
		}
	}
	return flag;
}

int main()
{
	cin >> n;
	int k;
	for (int i=0;i < n;i++)
		cin >> a[i][0] >> a[i][1];
	s = -1;
	e = maxn + 1;
	while (e-s > 1)
	{
		if(valid((s+e)/2))
		{
			e = (s+e)/2;
			li = l;
		}
		else
			s = (s+e)/2;
	}
	cout << e << endl << li;
	return 0;
}