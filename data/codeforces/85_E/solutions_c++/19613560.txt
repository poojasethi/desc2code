#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

const ll maxn=5000+5,mod=1e9+7;
ll dist[maxn][maxn],x[maxn],y[maxn],n,height[maxn];
bool visited[maxn];

bool dfs(int v,int x){
	visited[v]=1;
	for(int i=0;i<n;i++)
		if(dist[v][i] > x)
			if(!visited[i])
			{
				height[i]=height[v]+1;
				if(dfs(i,x))
					return 1;
			}
			else if((height[i]+height[v])%2==0)
				return 1;
	return 0;
}

ll binarys(ll left,ll right){
	if(right-left==1)return right;
	ll mid=(left+right)/2;
	fill(visited,visited+n,0);
	fill(height,height+n,0);
	for(int i=0;i<n;i++)
		if(!visited[i])
			if(dfs(i,mid))
				return binarys(mid,right);
	return binarys(left,mid);
}

int main(){
	ios_base::sync_with_stdio(0);cin.tie(0);
	cin >> n;
	for(int i=0;i<n;i++){
		cin >> x[i] >> y[i];
		for(int j=0;j<i;j++)
			dist[i][j] = dist[j][i] = abs(x[i]-x[j]) + abs(y[i]-y[j]);
	}
	ll ans= binarys(-1,2*maxn);
	cout << ans << endl;
	fill(visited,visited+n,0);
	ll k=1;
	for(int i=0;i<n;i++)
		if(!visited[i])
			dfs(i,ans),k = k*2%mod;
	cout<<k;
}
