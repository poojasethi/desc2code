#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <algorithm>

using namespace std;

enum {MAXV = 5050,mod = 1000000007};
int px[MAXV],py[MAXV];
bool vis[MAXV],type[MAXV];
int que[MAXV];

int bfs(int n,int limit)
{
  memset(vis,false,sizeof(vis));
  int cnt = 0;
  for(int i=0;i<n;i++)
    if (!vis[i])
    {
      int l=0,r=0;
      que[r++] = i;
      vis[i] = true;
      type[i] = false;
      while(l < r)
	{
	  const int u = que[l++];
	  for(int v=0;v<n;v++)
	    if (abs(px[u] - px[v]) + abs(py[u] - py[v]) >= limit)
	      {
		if (!vis[v])
		  {
		    que[r++] = v;
		    vis[v] = true;
		    type[v] = !type[u];
		  }
		else if (type[u] == type[v]) return -1;
	      }
	}
      ++cnt;
    }
  return cnt;
}

int main()
{
  int n;
  scanf("%d",&n);
  for(int i=0;i<n;i++)
    scanf("%d%d",&px[i],&py[i]);
  
  int left = 0,right = 10000,mid;
  while(left < right)
    {
      mid = left + (right - left + 1) / 2;
      if (bfs(n,mid) != -1) right = mid - 1;
      else left = mid;
    }

  int cnt = bfs(n,left + 1);
  int ans = 1;
  for(int i=0;i<cnt;i++) ans = (ans * 2) % mod;

  printf("%d\n%d\n",left,ans);  
  return 0;
}
