#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cmath>
#include<cstring>
using namespace std;

#define maxn 5140
#define mod 1000000007

int x[maxn],y[maxn];
int color[maxn];
int n;
int lim;

inline int dist(int i,int j)
{
	return abs(x[i]-x[j])+abs(y[i]-y[j]);
}

bool dfs(int v,int col)
{
	if (color[v]!=-1)
		return (col==color[v]);
	color[v]=col;
	for(int i=1;i<=n;i++)
	{
		if (i!=v && lim<dist(v,i) && !dfs(i,col^1))
			return false;
	}
	return true;
}

bool ok(int x)
{
	lim=x;
	memset(color,-1,sizeof(color));
	for(int i=1;i<=n;i++)
	{
		if (color[i]==-1)
		{
			if (!dfs(i,0))
				return false;
		}
	}
	return true;
}

int main()
{
	scanf("%d", &n);
	for(int i=1;i<=n;i++)
		scanf("%d%d", x+i, y+i);
	int lo=-1,hi=10001;
	int mid;
	while (lo+1<hi)
	{
		mid=(lo+hi)>>1;
		if (ok(mid))
			hi=mid;
		else
			lo=mid;
	}
	int cnt=0;
	lim=hi;
	memset(color,-1,sizeof(color));
	for(int i=1;i<=n;i++)
		if (color[i]==-1)
		{
			cnt++;
			dfs(i,0);
		}
	long long ans=1;
	for(int i=1;i<=cnt;i++)
		ans=ans*2%mod;
	printf("%d\n%I64d\n",lim,ans);
	return 0;
}
	