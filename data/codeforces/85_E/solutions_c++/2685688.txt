#include<iostream>
#include<cstdio>
#include<cstring>
#include<algorithm>
using namespace std;
int a[5010],b[5010],v[5010],n,m,l,r,i,j,d,mid,ans;

void dfs(int x,int y)
{
	v[x]=y;
	for(int i=n;i;i--)
		if(abs(a[i]-a[x])+abs(b[i]-b[x])>d)
			if(!v[i]) dfs(i,3-y); else if(v[i]==y) throw 0;
}

int solve(int dis)
{
	int m=0,i; d=dis;
	memset(v,0,sizeof(v));
	for(i=n;i;i--)
		if(!v[i]) try{m++; dfs(i,1);}catch(...){return 0;}
	return m;
}

int main()
{
	ios::sync_with_stdio(false);
	cin>>n;
	for(i=1;i<=n;i++)
		cin>>a[i]>>b[i];
	r=10000;
	while(l<=r)
	{
		mid=(l+r)>>1;
		if(solve(mid)) r=mid-1; else l=mid+1;
	}
	for(i=solve(l),ans=1;i;i--) ans=ans*2%1000000007;
	cout<<l<<endl<<ans<<endl;
	return 0;
}