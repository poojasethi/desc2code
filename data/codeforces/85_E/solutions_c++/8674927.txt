#include <iostream>
#include <vector>
#include <cmath>

using namespace std;

int n;
vector <pair <int , int> > p;
int f = -1 , l = 100 * 1000+1,mid;
bool mark[6000];
int color[6000];
long long x;
bool flag;
void dfs(int k,int c,int d){
    mark[k] = 1;
    color[k] = c;
    for(int i=0;i<n;i++){
        if(abs(p[i].first - p[k].first)+abs(p[i].second - p[k].second) > d){
            if(color[i] == color[k])
                flag = 0;
            if(!mark[i])
                dfs(i,1-c,d);
        }
    }
}

bool valid(int d){
    for(int i=0;i<n;i++){
        mark[i] = 0;
        color[i] = -1;
    }
    flag = 1;
    x = 1;
    for(int i=0;i<n;i++){
        if(!mark[i]){
            dfs(i,0,d);
            x*=2;
            x%=1000000007;
        }
    }
    return flag;
}

int main(){
    cin >> n;
    p.resize(n);
    for(int i=0;i<n;i++){
        cin >> p[i].first >> p[i].second;
    }
    while(l-f > 1){
        mid = (l+f)/2;
        if(valid(mid))
            l = mid;
        else
            f = mid;
    }
    cout << l << endl << x << endl;
    return 0;
}
