#include <cstdio>
#include <algorithm>
using namespace std;

const int N = 5050;

int dis[N][N], x[N], y[N], n, clr[N], clim;

int dfs (int x, int c)
{
	if (clr[x]) return clr[x] == c;
	clr[x] = c;
	for (int y = 1; y <= n; ++y)
		if (dis[x][y] > clim && !dfs(y, 3 - c))
			return false;
	return true;
}
int check (int l)
{
	clim = l;
	fill(clr, clr + n + 1, 0);
	int nways = 0;
	for (int i = 1; i <= n; ++i)
		if (!clr[i])
		{
			++nways;
			if (!dfs(i, 1)) return 0;
		}
	return nways;
}

int main ()
{
#ifdef LOCAL
	freopen("in", "r", stdin);
#endif
	scanf("%d", &n);
	for (int i = 1; i <= n; ++i)
		scanf("%d%d", x + i, y + i);
	int l = 0, r = 0;
	for (int i = 1; i <= n; ++i)
		for (int j = 1; j < i; ++j)
			r = max(r,
				dis[i][j] = dis[j][i] = abs(x[i] - x[j]) + abs(y[i] - y[j]));
	if (check(0)) r = 0;
	while (l + 1 < r)
	{
		int m = (l + r) >> 1;
		if (check(m)) r = m;
		else l = m;
	}
	int s = check(r), res = 1;
	for (int i = 0; i < s; ++i)
		res = (res * 2) % int(1e9 + 7);
	printf("%d\n%d\n", r, res);
	return 0;
}

