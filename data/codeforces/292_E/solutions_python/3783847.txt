from sys import stdin
import math


def task_old():
    n, m = map(int, stdin.readline().split())
    a = map(int, stdin.readline().split())
    b = map(int, stdin.readline().split())
    values = [map(int, i) for i in map(str.split, stdin.readlines())]
    size = max(2, int(math.sqrt(len(values))))
    z = [-1] * int(math.ceil(float(n) / size))

    result = []
    for request in values:
        print 'z>%s' % z
        print 'a>%s' % ''.join([i.rjust(4) for i in map(str, a)])
        print 'b>%s' % ''.join([i.rjust(4) for i in map(str, b)])
        if request[0] == 1:
            # copy
            p_a, p_b, length = request[1:]
            p_a, p_b = p_a - 1, p_b - 1
            print 'set a(%s, %s) => b(%s, %s)' % (p_a, p_a + length - 1, p_b, p_b + length - 1)
            z1, i1 = divmod(p_b, size)
            z2, i2 = divmod((p_b + length - 1), size)
            l = min(size - i1, length)
            b[p_b:p_b + l] = a[p_a:p_a + l]
            if z2 > z1:
                b[p_b + length - i2 - 1: p_b + length] = a[p_a + length - i2 - 1: p_a + length]
            for zi in xrange(z2 - z1 - 1):
                z[z1 + zi + 1] = p_a - (size - i1) + zi * size
        else:
            # get
            i = request[1] - 1
            print 'get %s item' % i,
            zi, p_z = divmod(i, size)
            if z[zi] == -1:
                result.append(b[i])
                print '=> %s' % b[i]
            else:
                result.append(a[z[zi] + p_z])
                print ' => %s' % a[z[zi] + p_z]
        print

    print '\n'.join(map(str, result))


MED_L = 1 << 17
MAX_L = MED_L << 1

def task():
    n, m = map(int, stdin.readline().split())
    a = map(int, stdin.readline().split())
    b = map(int, stdin.readline().split())
    values = [map(int, i) for i in map(str.split, stdin.readlines())]

    x = [0]*m
    y = [0]*m
    z = [0]*m
    t = [-1]*MAX_L

    def mark(q, lo, hi):
        lo += MED_L
        hi += MED_L
        while lo <= hi:
            if lo & 1:
                t[lo] = q
                lo += 1
            if not (hi & 1):
                t[hi] = q
                hi -= 1
            lo >>= 1
            hi >>= 1

    def value(p):
        res = b[p]
        q = -1
        s = p + MED_L
        while s > 0:
            q = max(q, t[s])
            s >>= 1
        if q != -1:
            res = a[x[q] + p - y[q]]
        return res

    result = []
    for j in xrange(m):
        if values[j][0] == 1:
            x[j], y[j], z[j] = values[j][1:]
            x[j] -= 1
            y[j] -= 1
            mark(j, y[j], y[j] + z[j] - 1)
        else:
            p = values[j][1] - 1
            result.append(value(p))

    print '\n'.join(map(str, result))


task()