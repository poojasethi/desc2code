#include <cstdio>

int n, m, A[100010], B[100010];
int lazy[400040];

void pushdown(int i, int l, int r)
{
	if (lazy[i] == 0) return;
	if (l == r) return;
	int mid = l + r >> 1;
	lazy[i << 1] = lazy[i];
	lazy[i << 1 | 1] = lazy[i] + mid - l + 1;
	lazy[i] = 0;
}

void modify(int i, int l, int r, int a, int bl, int br)
{
	if (bl <= l && br >= r)
	{
		lazy[i] = l - bl + a;
		return;
	}
	pushdown(i, l, r);
	int mid = l + r >> 1;
	if (bl <= mid) modify(i << 1, l, mid, a, bl, br);
	if (br > mid) modify(i << 1 | 1, mid + 1, r, a, bl, br);
}

int query(int i, int l, int r, int x)
{
	pushdown(i, l, r);
	if (l == r) return lazy[i] ? A[lazy[i]] : B[x];
	int mid = l + r >> 1;
	if (x <= mid) return query(i << 1, l, mid, x);
	return query(i << 1 | 1, mid + 1, r, x);
}

int main()
{
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++) scanf("%d", &A[i]);
	for (int i = 1; i <= n; i++) scanf("%d", &B[i]);
	int typ, a, b, c;
	while (m--)
	{
		scanf("%d", &typ);
		if (typ == 1)
		{
			scanf("%d%d%d", &a, &b, &c);
			modify(1, 1, n, a, b, b + c - 1);
		}
		if (typ == 2)
		{
			scanf("%d", &a);
			printf("%d\n", query(1, 1, n, a));
		}
	}
}