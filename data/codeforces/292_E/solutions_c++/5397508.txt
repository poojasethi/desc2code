#include <iostream>
using namespace std;
const int MAX = 500000;
int time[MAX], dif[MAX], a[MAX], b[MAX];
int x, y, mx, ans, cnt, n, m;
void set(int l, int r, int v = 1, int s = 0, int e = n)
{
	if (l <= s && e <= r)
	{
		time[v] = cnt;
		return;
	}
	if (e <= l || r <= s)
		return;
	int mid = (s + e) / 2;
	set(l, r, 2 * v, s, mid);
	set(l, r, 2 * v + 1, mid, e);
}
void get(int p, int v = 1, int s = 0, int e = n)
{
	mx = max(mx, time[v]);
	if (e - s < 2)
	{
		if (mx == time[v])
			ans = a[p + dif[mx]];
		if (mx == 0)
			ans = b[p];
		return;
	}
	int mid = (s + e) / 2;
	if (p < mid)
		get(p, 2 * v, s, mid);
	else
		get(p, 2 * v + 1, mid, e);
	if (time[v] == mx)
		ans = a[p + dif[mx]];
	if (mx == 0)
		ans = b[p];
}
int main()
{
	ios::sync_with_stdio(false);
	int m;
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> a[i];
	for (int i = 0; i < n; i++)
		cin >> b[i];
	cnt = 1;
	for (int i = 0; i < m; i++, cnt++)
	{
		int t;
		cin >> t;
		if (t == 1)
		{
			int l, r, x, y, k;
			cin >> x >> l >> k;
			x--, l--;
			y = x + k;
			r = l + k;
			set(l, r);
			dif[cnt] = x - l;
		}
		else
		{
			int p;
			cin >> p;
			p--;
			mx = 0;
			get(p);
			cout << ans << endl;
		}
	}
	return 0;
}
	  			    		  			 	     	 	