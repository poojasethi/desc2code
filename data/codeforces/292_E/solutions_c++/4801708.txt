#include<cstdio>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;
const int N = 100005;
int a[N],b[N];
struct P
{
	int l,r,mid,cv;
}arr[4*N];
void down(int c)
{
	if(arr[c].cv!=N)
	{
		arr[c+c].cv=arr[c+c+1].cv=arr[c].cv;
		arr[c].cv=N;
	}
}
void build(int L,int R,int c)
{
	arr[c].l=L;
	arr[c].r=R;
	arr[c].mid=(L+R)/2;
	arr[c].cv=N;
	if(L==R)
	{
		return ;
	}
	build(L,arr[c].mid,c+c);
	build(arr[c].mid+1,R,c+c+1);
}
void insert(int L,int R,int v,int c)
{
	if(L<=arr[c].l&&R>=arr[c].r)
	{
		arr[c].cv=v;
		return ;
	}
	down(c);
	if(L<=arr[c].mid)insert(L,R,v,c+c);
	if(R>arr[c].mid)insert(L,R,v,c+c+1);
}
void query(int x,int c)
{
	if(arr[c].l==arr[c].r)
	{
		if(arr[c].cv==N)printf("%d\n",b[x]);
		else printf("%d\n",a[x+arr[c].cv]);
		return ;
	}
	down(c);
	if(x<=arr[c].mid)query(x,c+c);
	else query(x,c+c+1);
}
int main()
{
	int n,m,i;
	scanf("%d%d",&n,&m);
	for(i=1;i<=n;i++)scanf("%d",&a[i]);
	for(i=1;i<=n;i++)scanf("%d",&b[i]);
	build(1,n,1);
	while(m--)
	{
		int t,x,y,k;
		scanf("%d",&t);
		if(t==1)
		{
			scanf("%d%d%d",&x,&y,&k);
			insert(y,y+k-1,x-y,1);
		}
		else
		{
			scanf("%d",&x);
			query(x,1);
		}
	}
	return 0;
}
		    				     	   			  	 	