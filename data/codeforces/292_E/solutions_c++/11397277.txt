# include <bits/stdc++.h>

using namespace std;

const int maxn = 1e5 + 10;
int T[4*maxn];
int a[maxn] , b[maxn];
int x[maxn] , y[maxn] , k[maxn];

void add(int L,int R,int col,int l,int r,int id){
	if(r == R && l == L){
		T[id] = col;
		return;
	}
	
	int mid = (l + r)/2;
	if(L < mid)
		add(L , min(mid , R), col, l, mid, 2*id + 0);
	if(R > mid)
		add(max(L , mid), R, col, mid, r, 2*id + 1);
}

int get(int idx,int l,int r,int id){
	if(r - l <= 1)
		return T[id];
	
	int mid = (l + r)/2;
	if(idx < mid)
		return max(T[id] ,get(idx, l, mid, 2*id + 0));
	else
		return max(T[id] ,get(idx, mid, r, 2*id + 1));
}

int main(){
	ios_base::sync_with_stdio(false);
	cin.tie(0);
	int n, m;
	cin >> n >> m;
	for(int i=1 ; i<=n ; i++)
		cin >> a[i];
	for(int i=1 ; i<=n ; i++)
		cin >> b[i];
	
	int t;
	for(int i=1 ; i<=m ; i++){
		cin >> t;
		if(t == 1){
			cin >> x[i] >> y[i] >> k[i];
			add(y[i], y[i]+k[i], i, 1, n+1, 1);
		}
		else{
			int index;
			cin >> index;
			int next = get(index, 1, n+1, 1);
			if(next == 0)
				cout << b[index] << '\n';
			else
				cout << a[x[next] + index - y[next]] << '\n';
		}
	}
	return 0;
}
