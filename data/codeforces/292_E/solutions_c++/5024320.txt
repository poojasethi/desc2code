#include <iostream>
#include <cstring>
#include <cmath>

using namespace std;

int n, m, q, x, y, k, sq, endx, endy, tmp, t;
int a[100010], b[100010], ref[1010];

int get (int idx)
{
	tmp = idx / sq;
	if (ref[tmp] != -1)
		return a[ref[tmp]+(idx%sq)];
	return b[idx];
}

void fill (int par)
{
	if (ref[par] != -1)
	{
		t = par*sq;
		for (int I = t; I <= t+sq-1 && I < n; ++I)
			b[I] = get(I);
		ref[par] = -1;
	}
}

void copy()
{
	endx = x + k - 1, endy = y + k - 1;
	fill(y / sq);	fill(endy / sq);
	while (y % sq && y <= endy)
		b[y++] = a[x++];
	while (endy % sq != sq-1 && y <= endy)
		b[endy--] = a[endx--];
	while (y <= endy)
	{
		t = y / sq;
		ref[t] = x;
		y += sq, x += sq;
	}
}

int main ()
{
	while (cin >> n >> m)
	{
		for (int I = 0; I < n; ++I)	cin >> a[I];
		for (int I = 0; I < n; ++I)	cin >> b[I];
		sq = sqrt((double)n);
		memset(ref, -1, sizeof ref);
		for (int I = 0; I < m && cin >> q; ++I)
			if (q == 1)
			{
				cin >> x >> y >> k;
				x--, y--;
				copy();
			}
			else
			{
				cin >> x;
				cout << get(x-1) << endl;
			}
	}
	return 0;
}

				 	 	    	    	 			 	  	