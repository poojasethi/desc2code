#include <cstdio>
#include <algorithm>
#include <cstring>
#include <cstdlib>
using namespace std;
int seg[400005];
int d[100005][2];
int n,q,A[100005],B[100005];
int x,y,a,b;
void up(int k,int a,int b,int bas,int son,int deg)
{
	if(b<bas || a>son) return;
	if(b<=son && a>=bas)
	{
		seg[k]=deg;
		return;
	}
	up(2*k,a,(a+b)/2,bas,son,deg);
	up(2*k+1,(a+b)/2+1,b,bas,son,deg);
}
int find(int k,int a,int b,int yer)
{
	if(b<yer || a>yer) return -1;
	if(b<=yer && a>=yer)
		return seg[k];
	return max(max(find(2*k,a,(a+b)/2,yer),find(2*k+1,(a+b)/2+1,b,yer)),seg[k]);
}
int main()
{
	int as;
	scanf("%d %d",&n,&q);
	for(int i=1;i<=n;i++) scanf("%d",&A[i]);
	for(int i=1;i<=n;i++) scanf("%d",&B[i]);

	memset(seg,-1,sizeof seg);
	for(int i=1;i<=q;i++)
	{
		scanf("%d %d",&x,&y);

		if(x == 1) 
		{
			scanf("%d %d",&a,&b);
			d[i][0] = a;
			d[i][1] = y;
			up(1,1,n,a,a+b-1,i);
		}
		else
		{
			as = find(1,1,n,y);
			if(as == -1) printf("%d\n",B[y]);
			else 			  printf("%d\n",A[d[as][1] + y - d[as][0]]);
		}
 }
	return 0;
}
