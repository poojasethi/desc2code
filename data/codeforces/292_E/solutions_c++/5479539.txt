#include <algorithm>
#include <cstring>
#include <cstdlib>
#include <cstdio>
#define N 100010
#define For(i,x,y) for (i=x;i<=y;i++)
using namespace std;
int i,j,k,n,m,type;
int a[N],b[N],X[N],Y[N],K[N],tr[N*4],cov[N*4];
inline void cha(int x,int y) {
	tr[x]=cov[x]=y;
}
inline void renew(int q) {
	if (cov[q]) cha(q*2,cov[q]),cha(q*2+1,cov[q]);
	cov[q]=0;
}
void cover(int q,int x,int y,int l,int r,int k) {
	if (l<=x&&y<=r) {
		cha(q,k); return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (l<=mid) cover(q*2,x,mid,l,r,k);
	if (mid<r) cover(q*2+1,mid+1,y,l,r,k);
}
void cal(int q,int x,int y,int k) {
	if (x==y) {
		int A=tr[q];
		printf("%d\n",!A?b[k]:a[X[A]+k-Y[A]]);
		return;
	}
	renew(q);
	int mid=(x+y)/2;
	if (k<=mid) cal(q*2,x,mid,k);
	else cal(q*2+1,mid+1,y,k);
}
int main() {
	scanf("%d%d",&n,&m);
	For(i,1,n) scanf("%d",&a[i]);
	For(i,1,n) scanf("%d",&b[i]);
	For(i,1,m) {
		scanf("%d",&type);
		if (type==1) {
			scanf("%d%d%d",&X[i],&Y[i],&K[i]);
			cover(1,1,n,Y[i],Y[i]+K[i]-1,i);
		} else {
			scanf("%d",&k);
			cal(1,1,n,k);
		}
	}
	//for(;;);
	return 0;
}
