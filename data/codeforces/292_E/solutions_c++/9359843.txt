#include <bits/stdc++.h>

using namespace std;

typedef pair<int, int> pie;

#define L first
#define R second
#define MP make_pair
#define PB push_back

const int maxn = 1e5 + 100;
int a[maxn], b[maxn], mx[maxn * 4];
pie q[maxn];

void seg(int id, int L, int R, int l, int r, int val){
	if(L == l and r == R){
		mx[id] = val;
		return ;
	}
	int mid = (L + R)/2;
	if(l < mid)
		seg(id * 2, L, mid, l, min(mid, r), val);
	if(r > mid)
		seg(id * 2 + 1, mid, R, max(l, mid), r, val);
}

int get(int id, int L, int R, int idx){
	if(L == R - 1)
		return mx[id];
	int mid = (L + R)/2, ret = mx[id];
	if(idx < mid)
		ret = max(ret, get(id * 2, L, mid, idx));
	else
		ret = max(ret, get(id * 2 + 1, mid, R, idx));
	return ret;
}

int main(){
	ios_base::sync_with_stdio(false);
	int n, m;
	cin >> n >> m;
	for(int i=1;i<=n;i++)
		cin >> a[i];
	for(int i=1;i<=n;i++)
		cin >> b[i];
	for(int i=1;i<=m;i++){
		int sts, fi, se, th;
		cin >> sts;
		if(sts == 1){
			cin >> fi >> se >> th;
			q[i] = MP(fi, se);
			seg(1, 1, n+1, se, se+th, i);
		}
		else{
			cin >> fi;
			int x = get(1, 1, n+1, fi);
			if(x == 0)
				cout << b[fi] << endl;
			else
				cout << a[fi - q[x].R + q[x].L] << endl;
		}
	}
}
