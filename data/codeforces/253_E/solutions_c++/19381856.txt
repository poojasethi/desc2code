//A,Elebereth,Gilthoniel mantae!
#include<iostream>
#include<algorithm>
#include<cmath>
#include<string>
#include<vector>
#include<set>
#include<cstdio>
#include<map>
#include<stack>
#include<queue>
#include<cstring> 
using namespace std;

//Astuva here!
set<long long> s;
long long now;
long long t[50005],pa[50005],po[50005],fi[50005];
int seq[500005];map<long long,int> m;
bool cmp(int x,int y)
{
	return (t[x]<t[y]);
}
int prob;
void pri(int x)
{
	if(s.size()==0) return ;
	int o=m[*s.begin()]-1;

	if(x==-1)
	{
		int justamomment=pa[o];
		now+=pa[o];
		pa[o]=0;
	
		s.erase(s.begin());
		fi[o]=now;
		pri(-1);
		return ;
	}
	if(pa[o]<=x) 
	{	int justamomment=pa[o];
		now+=pa[o];
		pa[o]=0;
	
		s.erase(s.begin());
		fi[o]=now;
		pri(x-justamomment);
	}
	else pa[o]-=x,now+=x;

}
vector<int> v;
set<int> ve;
int pages[500005];
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int n;
	prob=-156;
	cin>>n;
	for(int i=0;i<n;i++) 
	{
		cin>>t[i]>>pa[i]>>po[i];
		pages[i]=pa[i];
		if(po[i]==-1) prob=i;
		po[i]=-po[i];
		if(prob==i) continue;
		m[po[i]]=i+1;
		ve.insert(po[i]+1);
		ve.insert(po[i]-1);
	
	}
	
	for(set<int> ::iterator it=ve.begin();it!=ve.end();it++)
	{
	
		if(m[*it]==0) v.push_back(*it);
	} 
	long long T;
	cin>>T;
	for(int i=0;i<n;i++) seq[i]=i;
	sort(seq,seq+n,cmp);
	bool qwerty=0;
	int low=0,high=v.size()-1;
	while(low<=high)
	{	
		for(int i=0;i<n;i++)
		{
			pa[i]=pages[i];
			fi[i]=0;
		}
		s.clear();
		now=0;
		int mid=(high+low)/2;
	
		po[prob]=v[mid];
		m[po[prob]]=prob+1;
		for(int i=0;i<n;i++)
		{
			s.insert(po[seq[i]]);
			now=t[seq[i]];
			if(i!=n-1) pri(t[seq[i+1]]-t[seq[i]]);
			else pri(-1);
		}
		m[po[prob]]=0;

		if(fi[prob]==T) break;
		if(fi[prob]<T) low=mid+1;
		if(fi[prob]>T) high=mid-1;
	}
	cout<<-po[prob]<<endl;
	for(int i=0;i<n;i++)
	{
		cout<<fi[i]<<" ";
	}
	return 0;
}
