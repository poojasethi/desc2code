#include<stdio.h>
#include<queue>
#include<iostream>
#include<algorithm>
using namespace std;
struct tar
{
	int t,s,p,id;
	bool operator < (const tar &a)const
	{
		return t<a.t;
	}
}a[50001],b[50001];
struct node
{
	int s,p,id;
	node(tar tt):s(tt.s),p(tt.p),id(tt.id){}
	bool operator < (const node &a)const 
	{
		return p<a.p;
	}
};
priority_queue<node>f;
int n,x,y[50010],last,sz,rem[50010];long long T,end[50010];
long long test(int r)
{
	for(int i=1;i<=n;i++)b[i]=a[i];
	b[x].p=r;
	sort(b+1,b+n+1);
	while(!f.empty())f.pop();
	long long last=0;
	for(int i=1;i<=n;i++)
	{
		int tp=b[i].t-last;
		while(tp&&!f.empty())
		if(f.top().s>tp)
		{
			node tmp=f.top();f.pop();
			tmp.s-=tp;tp=0;
			f.push(tmp);
		}
		else 
		{
			tp-=f.top().s;last+=f.top().s;
			end[f.top().id]=last;
			f.pop();
		}
		last=b[i].t;
		f.push(node(b[i]));
	}
	while(!f.empty())
	{
		last+=f.top().s;
		end[f.top().id]=last;
		f.pop();
	}
	return end[x];
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%d%d%d",&a[i].t,&a[i].s,&a[i].p);
		if(a[i].p==-1)x=i;y[i]=a[i].p;a[i].id=i;
	}
	cin>>T;
	sort(y+1,y+n+1);
	for(int i=2;i<=n;i++)
	{
		if(y[i]!=last+1)rem[++sz]=last+1;
		last=y[i];
	}rem[++sz]=last+1;
	int l=0,r=sz;
	while(l+1<r)
	{
		int mid=l+r>>1;
		if(test(rem[mid])<=T)r=mid;
		else l=mid;
	}
	printf("%d\n",rem[r]);
	test(rem[r]);
	for(int i=1;i<=n;i++)cout<<end[i]<<" ";cout<<endl;
}

