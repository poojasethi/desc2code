#include<cstdio>
#include<iostream>
#include<algorithm>
#include<vector>
#include<climits>
#include<queue>
#include<set>
#define NN 50000
#define vi vector<int>
#define LL long long
using namespace std;
vector< vi> tsp;
LL e[NN], T;
int  n , pv ,s[NN] ;
set<int> pr;

struct cmp{
	bool operator()( const int& a, const int&  b  ){
		return tsp[a][2] < tsp[b][2];
	}
};

void solve(int m){
	tsp[pv][2] = m;
	priority_queue<int, vector<int> , cmp > pq;
	LL t = tsp[0][0];
	pq.push( 0 );
	for( int i = 1 ; i< n;++i){
		int d = tsp[i][0]-tsp[i-1][0];
		while( d && !pq.empty() ){
			int  v = pq.top();
			if( d >=  s[v]  ){
				d -= s[v]; 
				t += s[v];
				e[tsp[v][3]] = t;
				pq.pop();
			}else{
				t+= d;	s[v]-=d;
				d = 0;
			}
		}
		t+= d;
		pq.push( i );
	}
	while(!pq.empty()){
		t += s[pq.top()]; 
		e[ tsp[pq.top()][3] ] = t;
		pq.pop();
	}
}

bool ok(int m){
	for( int i =0;i<n;++i)
		s[i] = tsp[i][1];
	solve(m);
	return e[tsp[pv][3]] <= T;
}

int main(){
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	scanf("%d",&n);
	tsp.assign( n , vi(4,0) );
	for( int i=0;i<n;++i){
		tsp[i][3] = i;
		for( int j=0;j<3;++j)
			scanf("%d", &tsp[i][j] );
		pr.insert(tsp[i][2]);
	}
	
	cin >> T;
	sort( tsp.begin() , tsp.end() );
	for( int i =0;i<n;++i)
		if( tsp[i][2] < 0  ){
			pv = i;  break;
		}

	int l , r,m ;
	for( l = 1 ,r = 1e9 ; l < r; ){
		m = (l+r)/2;
		if( ok(m) )
			r = m;
		else
			l = m+1;
			
	} 
	for( int i = l ;; ++i){
		if( ! pr.count( i ) ){
			printf("%d\n" ,  i );
			ok( i );
			break;
		}
	}
	for( int i=0;i<n;++i)
		cout<< e[i] << " ";
	puts("");
	return 0;
}