#include<iostream>
#include<cstdio>
#include<algorithm>
#include<set>
#include<map>
#define ll long long
#define rep(x,y,z) for (int x=y;x<z;x++)
using namespace std;
const int size=210000,mod=1000000009,inf=0x3f3f3f3f;
set<ll>mark;
int n,m,k,po;
ll ans[size],ed;
struct node
{
	ll t,s,p,id;
	node(){}
	node(ll tt,ll ss,ll pp,ll idd){t=tt,s=ss,p=pp,id=idd;}
}e[size];
map<ll,node>s;
map<ll,node>::iterator it;
bool cmpt (node a,node b)
{
	return a.t<b.t;
}
bool cmpm (node a,node b)
{
	return a.p<b.p;
}
void locate ()
{
	if (s.size())it=s.end(),it--;
}
ll work (ll x)
{
	ll t=0;
	rep(i,0,n)
	{
		if (i==po)
			e[i].p=x;
		if (s.size())
		{
			locate();
			while (t+it->second.s<=e[i].t)
			{
				ans[it->second.id]=t+it->second.s;
				t+=it->second.s;
				s.erase(it);
				locate();
			}
		}
		if (s.size())
		{
			locate();
			it->second.s-=e[i].t-t;
		}
		s[e[i].p]=e[i],t=e[i].t;
	}
	while (s.size())
	{
		locate();
		ans[it->second.id]=t+it->second.s;
		t+=it->second.s;
		s.erase(it);
		locate();
	}
	return ans[e[po].id];
}
int main ()
{
	ll t,s,p,id,h,l,mid;
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	cin>>n;
	rep(i,0,n)
	{
		cin>>t>>s>>p,e[i]=node(t,s,p,i);
		if (p!=-1)
			mark.insert(p);
	}
	cin>>ed;
	sort(e,e+n,cmpt);
	po=min_element(e,e+n,cmpm)-e;
	l=0,h=inf;
	while (l<h)
	{
		mid=l+h>>1;
		while (mark.find(mid)!=mark.end()) 
			mid++;
		ll tmp=work(mid);
		if (tmp==ed)
		{
			cout<<mid<<endl;
			rep(i,0,n)
				cout<<ans[i]<<' ';
			cout<<endl;
			return 0;
		}
		else if (tmp<ed)
			h=mid;
		else
			l=mid+1;
	}
	return 0;
}
