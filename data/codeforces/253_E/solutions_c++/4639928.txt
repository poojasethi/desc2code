#include <bits/stdc++.h>
#define dosya(s1,s2) freopen(s1".txt","r",stdin); freopen(s2".txt","w",stdout); 
#define FP( ii,aa,bb ) for( ll ii = aa; ii <= bb; ii++ )
#define FM( ii,aa,bb ) for( ll ii = aa; ii >= bb; ii-- )
#define st first
#define nd second
#define mp make_pair
#define AL { pri = Q.top().st; n = Q.top().nd.st; x = Q.top().nd.nd; Q.pop();}
#define EKLE( pri,page,ind ) { Q.push( mp( pri,mp( page,ind ) ) ); }

using namespace std;

typedef long long ll; 
typedef pair<ll,ll> pii;

class inp
{
	public:
		ll t,s,p,ind;
}A[50005];


ll P[50005];
ll fin[50005],res[50005];
ll N,K,ind;
ll bas,son,orta,t;
priority_queue< pair< ll , pii > > Q;

bool cmp( inp a,inp b )
{
	return a.t < b.t;
}

ll kontrol( ll orta )
{
	ll pri,n,x;

	A[ind].p = orta;

	ll t = 0;

	FP( i,1,N )
	{
		while( !Q.empty() && t < A[i].t )
		{
			AL
			if( n <= A[i].t - t ) { fin[x] = t+n; t += n; }
			else { EKLE( pri,n-(A[i].t - t),x ) break; }
		}
		t = A[i].t;
		EKLE( A[i].p,A[i].s,A[i].ind );
	}
	
	while( !Q.empty() )
	{
		AL
		t += n;
		fin[x] = t;
	}

	return fin[A[ind].ind];
}

ll degistir( ll x )
{
	FP( i,1,N )
		if( x == P[i] )
			x++;

	return x;
}

int main()
{
	dosya("input","output");

	cin >> N;

	FP( i,1,N )
	{
		scanf("%lld %lld %lld",&A[i].t,&A[i].s,&A[i].p);
		P[i] = A[i].p;
		A[i].ind = i;
	}

	sort( A+1,A+N+1,cmp );
	sort( P+1,P+N+1 ); 

	FP( i,1,N ) 
		if( A[i].p == -1 )
			ind = i;

	scanf("%lld",&K);

	bas = 1;
	son = (ll(1e9));

	ll Ans,oorta;

	while( bas < son ) 
	{
		oorta = ( bas + son ) >> 1;
		orta = degistir( oorta );

		Ans = kontrol( orta );
		if( Ans <= K ) { if( Ans == K ) break; son = oorta; }
		else bas = oorta+1;

	}

	cout << orta << endl;

	FP( i,1,N )
		cout << fin[i] << " ";
	cout << endl;
}
