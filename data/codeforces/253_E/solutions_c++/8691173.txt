#include<queue>
#include<cstdio>
#include<vector>
#include<algorithm>
#define LL long long
using namespace std;
struct Mission{
	int s,d,p;
}d[50005];
int n;
bool cmp(const int &x,const int &y)
{
	return d[x].s<d[y].s;
}
int r[50005];
LL T[50005];
vector<int> v;
bool operator <(const Mission &x,const Mission &y)
{
	return x.p<y.p;
}
priority_queue<Mission> Q;
void Work()
{
	LL now=0;
	Mission tmp;
	for(int i=1;i<=n;i++)
	{
		while(!Q.empty()&&now<d[r[i]].s)
		{
			tmp=Q.top();
			Q.pop();
			if(now+tmp.d>d[r[i]].s)
			{
				tmp.d-=d[r[i]].s-now;
				Q.push(tmp);
				break;
			}
			now+=tmp.d;
			T[tmp.s]=now;
		}
		now=d[r[i]].s;
		tmp=d[r[i]];
		tmp.s=r[i];
		Q.push(tmp);
	}
	while(!Q.empty())
	{
		tmp=Q.top();
		Q.pop();
		now+=tmp.d;
		T[tmp.s]=now;
	}
}
int main()
{
	freopen("input.txt","r",stdin);
	freopen("output.txt","w",stdout);
	int unknown=0;
	scanf("%d",&n);
	for(int i=1;i<=n;i++)
	{
		scanf("%d%d%d",&d[i].s,&d[i].d,&d[i].p);
		if(d[i].p==-1)
			unknown=i;
		else
			r[i]=d[i].p;
	}
	sort(r+1,r+1+n);
	for(int i=1;i<n;r[i]=i++)
		if(r[i+1]!=r[i]+1)
			v.push_back(r[i]+1);
	v.push_back(r[n]+1);
	r[n]=n;
	sort(r+1,r+1+n,cmp);
	LL endt;
	scanf("%I64d",&endt);
	for(int l=0,r=v.size()-1;;)
	{
		int m=l+r>>1;
		d[unknown].p=v[m];
		Work();
		d[unknown].p=-1;
		if(T[unknown]==endt)
		{
			printf("%d\n",v[m]);
			for(int i=1;i<=n;i++)
				printf("%I64d ",T[i]);
			return 0;
		}
		else
			if(T[unknown]<endt)
				r=m-1;
			else
				l=m+1;
	}
}