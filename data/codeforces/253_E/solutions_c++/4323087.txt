#include<cstdio>
#include<cstring>
#include<deque>
#include<queue>
#include<algorithm>
#define LL long long
#define PI pair<int,int>
#define PLI pair<LL,int>
#define FR first
#define SC second
#define MP make_pair
using namespace std;
priority_queue<PI> Q;
PLI A[50001];
LL t[50001],s[50001],tt[50001],ss[50001];
int p[50001],P[50001],q[50001];
LL T;
int n,X,tot;
bool cmp(PLI a,PLI b)
{
     return a.FR<b.FR;
}
void calc(int R)
{
     PI x;
     LL cur;
     int i;
     p[X]=R; cur=0;
     memcpy(ss,s,sizeof(s));
     for (i=1;i<=n;i++)
     {
         while ((!Q.empty())&&(cur<t[A[i].SC]))
         {
               x=Q.top();
               if (ss[x.SC]<=t[A[i].SC]-cur)
               {
                  Q.pop(); cur+=ss[x.SC]; tt[x.SC]=cur;
               }
               else
               {
                   ss[x.SC]-=t[A[i].SC]-cur; cur=t[A[i].SC];
               }
         }
         cur=t[A[i].SC]; Q.push(MP(p[A[i].SC],A[i].SC));
     }
     while (!Q.empty())
     {
           x=Q.top(); Q.pop(); cur+=ss[x.SC]; tt[x.SC]=cur;
     }
}
int main()
{
    int i,l,r,mid;
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    scanf("%d",&n);
    for (i=1;i<=n;i++)
    {
        scanf("%I64d%I64d%d",&t[i],&s[i],&p[i]);
        if (p[i]==-1) X=i;
        A[i]=MP(t[i],i);
    }
    scanf("%I64d",&T);
    memcpy(P,p,sizeof(p));
    sort(A+1,A+n+1,cmp);
    sort(P+1,P+n+1);
    tot=1; q[1]=P[2]-1;
    for (i=2;i<=n;i++)
        if ((i==n)||(P[i+1]>P[i]+1))
        {
           tot++; q[tot]=P[i]+1;
        }
    l=1; r=tot;
    while (l<r)
    {
          mid=(l+r)/2;
          calc(q[mid]);
          if (tt[X]<=T) r=mid;
          else l=mid+1;
    }
    calc(q[l]);
    printf("%d\n",q[l]);
    for (i=1;i<=n;i++) printf("%I64d ",tt[i]);
    printf("\n"); return 0;
}
