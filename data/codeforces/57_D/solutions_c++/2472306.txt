//program 57-D

#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<cstring>
#include<algorithm>

using namespace std;

bool Get()
{
  char c;while(c=getchar(),c!='.'&&c!='X');
  return c=='.';
}

int main()
{
  int M,N,Total=0;scanf("%d%d",&M,&N);
  static bool Map[1000][1000];
  static int X[1000],Y[1000];
  memset(X,0,sizeof(X));
  memset(Y,0,sizeof(Y));
  for(int i=0;i<M;i++)
    for(int j=0;j<N;j++)
      if(Map[i][j]=Get())
        {X[i]++;Y[j]++;Total++;}
  double Ans=0;
  for(int i=1;i<M;i++)
    for(int j=0;j<i;j++)
      Ans+=2*(i-j)*X[i]*X[j];
  for(int i=1;i<N;i++)
    for(int j=0;j<i;j++)
      Ans+=2*(i-j)*Y[i]*Y[j];
  static int P[1000],Q[1000];
  memset(P,-1,sizeof(P));
  memset(Q,-1,sizeof(Q));
  for(int i=0;i<M;i++)
    for(int j=0;j<N;j++)
      if(!Map[i][j])
        {P[i]=j;Q[j]=i;}
  for(int i=0;i<M;i++)
    for(int j=i;j<M;j++)
      {
        if(P[j]==-1)break;
        if(j>i&&P[j]<P[j-1])break;
        Ans+=4*P[i]*(N-1-P[j]);
      }
  for(int i=0;i<M;i++)
    if(P[i]!=-1)
      for(int j=i+1;j<M;j++)
        {
          if(P[j]==-1||P[j]>P[j-1])break;
          Ans+=4*P[j]*(N-1-P[i]);
        }
  for(int i=0;i<N;i++)
    for(int j=i;j<N;j++)
      {
        if(Q[j]==-1)break;
        if(j>i&&Q[j]<Q[j-1])break;
        Ans+=4*Q[i]*(M-1-Q[j]);
      }
  for(int i=0;i<N;i++)
    if(Q[i]!=-1)
      for(int j=i+1;j<N;j++)
        {
          if(Q[j]==-1||Q[j]>Q[j-1])break;
          Ans+=4*Q[j]*(M-1-Q[i]);
        }
  printf("%0.10lf\n",Ans/Total/Total);
  return 0;
}
