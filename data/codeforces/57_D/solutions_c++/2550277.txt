//57D
#include <iostream>
#include <cstdio>
#include <cstring>
using namespace std;
const int MAXN=1000;
int rowN,colN;

char a[MAXN+10][MAXN+10];
void rotate(){
	static char tmp[MAXN+10][MAXN+10];
	swap(rowN,colN);
	for(int i=1;i<=rowN;i++)
		for(int j=1;j<=colN;j++)
			tmp[i][j]=a[colN-j+1][i];
	memcpy(a,tmp,sizeof(tmp));
	/*
	for(int i=1;i<=rowN;i++){
		for(int j=1;j<=colN;j++)
			putchar(a[i][j]);
		puts("");
	}
	*/
}

long long cnt[MAXN+10][MAXN+10];
long long sum[MAXN+10][MAXN+10];
long long top[MAXN+10][MAXN+10];
long long lft[MAXN+10][MAXN+10];

long long fun(){
	for(int i=1;i<=rowN;i++){
		for(int j=1;j<=colN;j++){
			cnt[i][j]=a[i][j]=='.';
			sum[i][j]=0;
			if(j>1){
				cnt[i][j]+=cnt[i][j-1];
				sum[i][j]+=sum[i][j-1]+cnt[i][j-1];
			}
		}
		if(i>1)
			for(int j=1;j<=colN;j++){
				cnt[i][j]+=cnt[i-1][j];
				sum[i][j]+=sum[i-1][j]+cnt[i-1][j];
			}
	}
	
	long long res=0;
	for(int i=1;i<=rowN;i++){
		long long lb=0,c=0,s=0;
		for(int j=1;j<=colN;j++){
			if(a[i][j]=='.'){
				c++;
				top[i][j]=i>1?top[i-1][j]:0;
				lft[i][j]=j>1?lft[i][j-1]:0;
				res+=sum[i][j]+(top[i][j]+lft[i][j])*2-s-lb*2;
			}else{
				lb=j-1;
				top[i][j]=i-1+(j>1?top[i][j-1]:0);
				lft[i][j]=j-1+(i>1?lft[i-1][j]:0);
			}
			s+=c;
		}
	}
	return res;
}
int main(){
	scanf("%d%d",&rowN,&colN);
	int dotN=0;
	for(int i=1;i<=rowN;i++)
		for(int j=1;j<=colN;j++){
			char ch=getchar();
			while(ch!='.' && ch!='X')ch=getchar();
			a[i][j]=ch;
			if(ch=='.')dotN++;
		}
	long long sum=0;
	for(int i=0;i<4;i++){
		sum+=fun();
		rotate();
	}
	printf("%.7f\n",(double)sum/dotN/dotN);
	return 0;
}