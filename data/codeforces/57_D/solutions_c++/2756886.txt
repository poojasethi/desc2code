#include <cstdio>
#include <algorithm>
int row[10000],col[10000];
int main()
{
    //freopen("input.txt","r",stdin);   
    //freopen("output.txt","w",stdout);
    int m,n,i,j,a; double tot=0,cnt=0;
    scanf("%d%d",&n,&m); char ch;
    for(i=1;i<=n;i++)
    {
		getchar();
		for(j=1;j<=m;j++)
		{
			scanf("%c",&ch);        
    		if(ch == 'X') row[i] = j,col[j] = i;
    		else cnt++;
		}
	}
	cnt = cnt*cnt;
	for(i=1;i<=n;i++)
		tot += ((double)m*(double)m*(double)(i-1)*(double)i/2 + (double)m*(double)m*(double)(n-i)*(double)(n-i+1)/2)/cnt;
	for(j=1;j<=m;j++)
		tot += ((double)n*(double)n*(double)(j-1)*(double)j/2 + (double)n*(double)n*(double)(m-j)*(double)(m-j+1)/2)/cnt;
	for(i=1;i<=n;i++)
	{
		a = row[i]; if(!a) continue;
		for(j=1;j<=n;j++)
		{
			tot -= (2*std::abs(i-j)*m)/cnt;
			if(row[j] && i<j) tot += (2*abs(i-j))/cnt;
		}	
	}
	for(i=1;i<=m;i++)
	{
		a = col[i]; if(!a) continue;
		for(j=1;j<=m;j++)
		{
			tot -= (2*std::abs(i-j)*n)/cnt;
			if(col[j] && i<j) tot += (2*abs(i-j))/cnt;
		}	
	}
	//dist+2!
	for(i=1;i<=n;i++)
		if(row[i])
			tot += 4*(row[i]-1)*(m-row[i])/cnt;
	for(i=1;i<=m;i++)
		if(col[i])
			tot += 4*(col[i]-1)*(n-col[i])/cnt;
	for(i=1;i<=n;i++)
		if(row[i])
		{
			for(j=i-1;row[j]&&j>=1;j--)
			{
				if(row[j] < row[j+1]) break;
				tot += 4*(row[i]-1)*(m-row[j])/cnt; 	
			}
			for(j=i-1;row[j]&&j>=1;j--)
			{
				if(row[j] > row[j+1]) break;
				tot += 4*(row[j]-1)*(m-row[i])/cnt;	
			}
		}
	for(i=1;i<=m;i++)
		if(col[i])
		{
			for(j=i-1;col[j]&&j>=1;j--)
			{
				if(col[j] < col[j+1]) break;
				tot += 4*(col[i]-1)*(n-col[j])/cnt;
			}	
			for(j=i-1;col[j]&&j>=1;j--)
			{
				if(col[j] > col[j+1]) break;
				tot += 4*(col[j]-1)*(n-col[i])/cnt;	
			}
		}
	printf("%.12lf",tot);
}
